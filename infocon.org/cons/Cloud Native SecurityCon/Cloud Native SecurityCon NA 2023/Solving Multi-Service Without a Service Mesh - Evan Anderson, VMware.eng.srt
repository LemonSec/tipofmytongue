1
00:00:00,299 --> 00:00:01,800
okay

2
00:00:01,800 --> 00:00:04,339
so multi-service without a mesh

3
00:00:04,339 --> 00:00:07,259
so I'm sure that some of you are here

4
00:00:07,259 --> 00:00:09,179
because you really don't like service

5
00:00:09,179 --> 00:00:10,860
meshes this talk is not actually going

6
00:00:10,860 --> 00:00:13,920
to tear down service meshes but

7
00:00:13,920 --> 00:00:15,900
um hopefully we'll get a little deeper

8
00:00:15,900 --> 00:00:17,279
understanding

9
00:00:17,279 --> 00:00:20,880
why people are using service meshes and

10
00:00:20,880 --> 00:00:22,500
how you can solve it without a service

11
00:00:22,500 --> 00:00:24,660
mesh and then you can decide

12
00:00:24,660 --> 00:00:26,279
do I need a service mesh is that the

13
00:00:26,279 --> 00:00:28,560
right tool for this job or you know can

14
00:00:28,560 --> 00:00:29,880
I take two or three components and get

15
00:00:29,880 --> 00:00:31,679
the pieces that I want

16
00:00:31,679 --> 00:00:34,079
um it's also a little bit of a call to

17
00:00:34,079 --> 00:00:35,940
make things better

18
00:00:35,940 --> 00:00:37,260
um one of the things I've been

19
00:00:37,260 --> 00:00:40,860
describing to people as my journey of

20
00:00:40,860 --> 00:00:43,620
building this talk is discovering that

21
00:00:43,620 --> 00:00:45,239
we're really bad at software and so I'm

22
00:00:45,239 --> 00:00:46,260
going to be calling out a couple places

23
00:00:46,260 --> 00:00:49,980
where we really should be doing better

24
00:00:49,980 --> 00:00:50,879
um

25
00:00:50,879 --> 00:00:52,140
so

26
00:00:52,140 --> 00:00:55,260
you know hey look I've I've built

27
00:00:55,260 --> 00:00:58,980
uh you know multiple microservices wired

28
00:00:58,980 --> 00:00:59,780
together

29
00:00:59,780 --> 00:01:03,480
this is awesome you know it's a nice

30
00:01:03,480 --> 00:01:05,159
simple architecture diagram I've got a

31
00:01:05,159 --> 00:01:06,240
front-end service I've got a couple

32
00:01:06,240 --> 00:01:07,560
back-end services to each have their

33
00:01:07,560 --> 00:01:09,600
databases they're nicely factored they

34
00:01:09,600 --> 00:01:12,000
talk to each other through apis

35
00:01:12,000 --> 00:01:14,520
and I'm not ready for service mesh yet

36
00:01:14,520 --> 00:01:16,260
can I just slap some kubernetes on it

37
00:01:16,260 --> 00:01:17,580
make it work

38
00:01:17,580 --> 00:01:20,060
well

39
00:01:21,900 --> 00:01:23,580
we've got a DB operator everything else

40
00:01:23,580 --> 00:01:25,200
is just out of the box kubernetes it's

41
00:01:25,200 --> 00:01:26,939
awesome

42
00:01:26,939 --> 00:01:30,600
um we're done okay great go home

43
00:01:30,600 --> 00:01:33,600
Oh wait we're at a security talk so

44
00:01:33,600 --> 00:01:35,520
um this is the part where I start to

45
00:01:35,520 --> 00:01:37,920
make you sad and we will keep getting

46
00:01:37,920 --> 00:01:39,840
sadder over the course of the talk and

47
00:01:39,840 --> 00:01:41,280
at the end

48
00:01:41,280 --> 00:01:42,780
um we will go to another talk and repeat

49
00:01:42,780 --> 00:01:43,920
the process

50
00:01:43,920 --> 00:01:45,900
I don't know why you are here

51
00:01:45,900 --> 00:01:49,500
um so start with it's not too bad our

52
00:01:49,500 --> 00:01:50,700
users are connecting to us over the

53
00:01:50,700 --> 00:01:53,280
Internet we've got an Ingress

54
00:01:53,280 --> 00:01:56,159
um encryption I hear that's an important

55
00:01:56,159 --> 00:01:58,560
thing I remember Zach talking about that

56
00:01:58,560 --> 00:02:01,380
and a little you know TLS encrypted and

57
00:02:01,380 --> 00:02:03,000
removed the NSA is listing on all your

58
00:02:03,000 --> 00:02:04,860
wires and all that stuff

59
00:02:04,860 --> 00:02:06,719
um but it's okay we've got cert manager

60
00:02:06,719 --> 00:02:08,818
we've got let's encrypt we can just go

61
00:02:08,818 --> 00:02:10,619
and connect things assuming that I'm

62
00:02:10,619 --> 00:02:13,440
using Ingress or Gateway API if I'm

63
00:02:13,440 --> 00:02:16,680
using Kong's apis or traffic's apis or

64
00:02:16,680 --> 00:02:19,319
Contours apis or istio's apis then I

65
00:02:19,319 --> 00:02:21,660
need to do some manual wiring together

66
00:02:21,660 --> 00:02:24,120
it's not great but do we really expect

67
00:02:24,120 --> 00:02:26,220
cert manager to expect to support 15

68
00:02:26,220 --> 00:02:29,099
different ingresses no Gateway API maybe

69
00:02:29,099 --> 00:02:31,319
we'll give you those capabilities later

70
00:02:31,319 --> 00:02:34,500
in the year I don't know

71
00:02:34,500 --> 00:02:38,959
um so it's okay not too bad

72
00:02:39,000 --> 00:02:40,980
great so we've encrypted the traffic

73
00:02:40,980 --> 00:02:42,780
over the internet now we're secure we're

74
00:02:42,780 --> 00:02:43,860
safe

75
00:02:43,860 --> 00:02:45,720
all the bad guys can connect to us

76
00:02:45,720 --> 00:02:47,280
through TLS and nobody on the internet

77
00:02:47,280 --> 00:02:50,819
can sniff the bad traffic they send us

78
00:02:50,819 --> 00:02:53,400
oh well

79
00:02:53,400 --> 00:02:55,440
we maybe need something like an API

80
00:02:55,440 --> 00:02:57,840
Gateway to enforce stuff like rate

81
00:02:57,840 --> 00:02:59,099
limits

82
00:02:59,099 --> 00:03:02,519
um maybe API keys and things like that

83
00:03:02,519 --> 00:03:05,040
and some form of authentication

84
00:03:05,040 --> 00:03:06,900
um so we don't just want an Ingress we

85
00:03:06,900 --> 00:03:07,800
want something that has these

86
00:03:07,800 --> 00:03:09,300
capabilities and some of the ingresses

87
00:03:09,300 --> 00:03:10,860
that you can get out there do have these

88
00:03:10,860 --> 00:03:12,300
capabilities

89
00:03:12,300 --> 00:03:13,319
um

90
00:03:13,319 --> 00:03:15,120
some of them up to a certain point and

91
00:03:15,120 --> 00:03:16,739
sometimes you need to go beyond that and

92
00:03:16,739 --> 00:03:18,840
you actually want an API Gateway and not

93
00:03:18,840 --> 00:03:22,260
just an Ingress or a service mesh

94
00:03:22,260 --> 00:03:22,980
um

95
00:03:22,980 --> 00:03:24,000
great

96
00:03:24,000 --> 00:03:25,920
and now we just sent all our traffic

97
00:03:25,920 --> 00:03:29,159
over the cluster and you know our cni

98
00:03:29,159 --> 00:03:31,739
lets us do layer 4 policies maybe

99
00:03:31,739 --> 00:03:34,440
there's no feedback on your network

100
00:03:34,440 --> 00:03:35,640
policies whether or not it's being

101
00:03:35,640 --> 00:03:37,920
enforced you just say I want this policy

102
00:03:37,920 --> 00:03:39,780
and maybe you're prevented from sending

103
00:03:39,780 --> 00:03:41,580
other traffic and maybe you aren't

104
00:03:41,580 --> 00:03:43,739
but that's okay some cnis also support

105
00:03:43,739 --> 00:03:44,879
encryption

106
00:03:44,879 --> 00:03:46,799
how do you tell if that's happening

107
00:03:46,799 --> 00:03:47,879
well

108
00:03:47,879 --> 00:03:49,860
you sneak onto the cluster so you're not

109
00:03:49,860 --> 00:03:53,760
in a pod and you do a packet capture and

110
00:03:53,760 --> 00:03:54,840
you see whether or not the traffic's

111
00:03:54,840 --> 00:03:57,000
encrypted

112
00:03:57,000 --> 00:03:58,560
um yeah there's no interface in asking

113
00:03:58,560 --> 00:04:00,480
kubernetes is my cni encrypting traffic

114
00:04:00,480 --> 00:04:03,239
is my cni enforcing Network policy nope

115
00:04:03,239 --> 00:04:04,739
you just built your application for

116
00:04:04,739 --> 00:04:06,540
kubernetes and sometimes it's secured

117
00:04:06,540 --> 00:04:08,340
and sometimes it's not

118
00:04:08,340 --> 00:04:10,439
and you know you really just ought to

119
00:04:10,439 --> 00:04:11,819
know your kubernetes provider well

120
00:04:11,819 --> 00:04:13,739
enough to know the answers and every

121
00:04:13,739 --> 00:04:15,299
developer should know which kubernetes

122
00:04:15,299 --> 00:04:18,139
they're deploying to

123
00:04:18,238 --> 00:04:19,560
um and every Helm chart author should

124
00:04:19,560 --> 00:04:21,720
know which kubernetes they're deploying

125
00:04:21,720 --> 00:04:23,840
to

126
00:04:26,040 --> 00:04:26,880
um

127
00:04:26,880 --> 00:04:29,759
we may also want to actually be able to

128
00:04:29,759 --> 00:04:32,639
restrict access so in this case oops

129
00:04:32,639 --> 00:04:35,340
that went too far we want to be able the

130
00:04:35,340 --> 00:04:36,900
front end should be able to do orders

131
00:04:36,900 --> 00:04:39,000
and addresses to the back ends but maybe

132
00:04:39,000 --> 00:04:40,199
orders needs to be able to read

133
00:04:40,199 --> 00:04:42,360
addresses but the order server should

134
00:04:42,360 --> 00:04:43,800
never be updating someone's address

135
00:04:43,800 --> 00:04:44,820
that's

136
00:04:44,820 --> 00:04:48,479
like not not right so we actually

137
00:04:48,479 --> 00:04:50,639
need to establish identities for these

138
00:04:50,639 --> 00:04:51,840
things and you've heard a lot about zero

139
00:04:51,840 --> 00:04:53,100
trust and I'm not going to tell you if

140
00:04:53,100 --> 00:04:54,360
these need to be zero trust or not but

141
00:04:54,360 --> 00:04:57,300
we need some form of identity

142
00:04:57,300 --> 00:04:58,919
that the applications can actually

143
00:04:58,919 --> 00:05:01,460
reason about

144
00:05:01,740 --> 00:05:03,300
service accounts

145
00:05:03,300 --> 00:05:05,280
awesome you can take a service account

146
00:05:05,280 --> 00:05:07,320
token it's mounted in your pod you can

147
00:05:07,320 --> 00:05:09,120
send it to someone else and they can

148
00:05:09,120 --> 00:05:11,160
verify that you are who you say you are

149
00:05:11,160 --> 00:05:13,500
by going to the API server and asking

150
00:05:13,500 --> 00:05:15,300
hey is this a valid service account

151
00:05:15,300 --> 00:05:17,100
token

152
00:05:17,100 --> 00:05:18,720
they can also go to the API server and

153
00:05:18,720 --> 00:05:21,180
do anything you could do do not send

154
00:05:21,180 --> 00:05:23,340
those tokens to other people they let

155
00:05:23,340 --> 00:05:25,080
them they let lets the other person

156
00:05:25,080 --> 00:05:27,240
impersonate you

157
00:05:27,240 --> 00:05:27,900
um

158
00:05:27,900 --> 00:05:30,419
fortunately I'm going to say this is a

159
00:05:30,419 --> 00:05:33,120
year year and a half or so ago the token

160
00:05:33,120 --> 00:05:34,380
account the service account projection

161
00:05:34,380 --> 00:05:35,639
API

162
00:05:35,639 --> 00:05:37,860
showed up which lets you say hey I want

163
00:05:37,860 --> 00:05:39,900
a oauth token

164
00:05:39,900 --> 00:05:43,740
for my service account identity and I

165
00:05:43,740 --> 00:05:45,240
wanted to have a different audience I

166
00:05:45,240 --> 00:05:47,580
don't want it to be believed by the API

167
00:05:47,580 --> 00:05:48,840
server I want it to have this other

168
00:05:48,840 --> 00:05:50,820
audience string and then your

169
00:05:50,820 --> 00:05:52,259
destination says oh I'm looking for

170
00:05:52,259 --> 00:05:55,380
audience named you know orders and so

171
00:05:55,380 --> 00:05:56,880
you get yourself a service account and

172
00:05:56,880 --> 00:05:58,500
it says orders and you send it over and

173
00:05:58,500 --> 00:06:00,000
that's great

174
00:06:00,000 --> 00:06:00,740
um

175
00:06:00,740 --> 00:06:03,720
we've kind of sort of solved this with

176
00:06:03,720 --> 00:06:07,639
some open ID and so forth

177
00:06:08,820 --> 00:06:10,259
and now we're sending these Over The

178
00:06:10,259 --> 00:06:11,400
Wire

179
00:06:11,400 --> 00:06:13,440
and maybe our cni is encrypted and maybe

180
00:06:13,440 --> 00:06:15,419
they aren't and anyone who grabs them or

181
00:06:15,419 --> 00:06:17,220
sees them along the way can reuse them

182
00:06:17,220 --> 00:06:19,320
so

183
00:06:19,320 --> 00:06:21,720
um why don't we just not worry so much

184
00:06:21,720 --> 00:06:22,860
about whether or not the cni is

185
00:06:22,860 --> 00:06:25,440
encrypted and set up a cluster local CA

186
00:06:25,440 --> 00:06:27,060
that's been a standard Enterprise

187
00:06:27,060 --> 00:06:29,940
solution for I don't know 20 years or so

188
00:06:29,940 --> 00:06:32,280
you know you get a c you get a

189
00:06:32,280 --> 00:06:33,960
self-signed cert and you use it to sign

190
00:06:33,960 --> 00:06:37,740
your search within your DNS names that

191
00:06:37,740 --> 00:06:39,120
aren't public to the internet and

192
00:06:39,120 --> 00:06:40,699
remember all these names are

193
00:06:40,699 --> 00:06:42,539
service.cluster.local if you want to go

194
00:06:42,539 --> 00:06:44,360
let's encrypt and get a cert for

195
00:06:44,360 --> 00:06:45,840
service.cluster.local and they give it

196
00:06:45,840 --> 00:06:47,699
to you that's going to be real exciting

197
00:06:47,699 --> 00:06:49,440
you get to publish your blog post about

198
00:06:49,440 --> 00:06:50,759
a vulnerability you found in let's

199
00:06:50,759 --> 00:06:52,680
encrypt and it shows up in the

200
00:06:52,680 --> 00:06:54,000
certificate transparency log so everyone

201
00:06:54,000 --> 00:06:55,740
can see it happened

202
00:06:55,740 --> 00:06:57,419
um it's not going to happen

203
00:06:57,419 --> 00:07:00,720
so you need a self-sized cert

204
00:07:00,720 --> 00:07:02,300
which is great

205
00:07:02,300 --> 00:07:04,560
your other option

206
00:07:04,560 --> 00:07:06,180
is

207
00:07:06,180 --> 00:07:08,340
that you could use spiffy and you could

208
00:07:08,340 --> 00:07:11,160
roll out spiffy and teach all your

209
00:07:11,160 --> 00:07:13,860
systems to use spiffy and interact and

210
00:07:13,860 --> 00:07:16,979
and manage that and so forth it looks

211
00:07:16,979 --> 00:07:18,539
like you can pick your language any

212
00:07:18,539 --> 00:07:19,979
language you want as long as it's go

213
00:07:19,979 --> 00:07:22,080
Java or rust so if you were using

214
00:07:22,080 --> 00:07:24,000
typescript

215
00:07:24,000 --> 00:07:26,639
um now you get to learn rust and how to

216
00:07:26,639 --> 00:07:29,400
interact with it or maybe go or Ruby or

217
00:07:29,400 --> 00:07:30,840
Java but I'm guessing rust is going to

218
00:07:30,840 --> 00:07:33,500
be the best of the three in any case

219
00:07:33,500 --> 00:07:36,360
might not be what you were thinking of

220
00:07:36,360 --> 00:07:38,460
when you were like oh I'll write a

221
00:07:38,460 --> 00:07:40,319
typescript front end so that I can write

222
00:07:40,319 --> 00:07:41,819
typescript and then I can write

223
00:07:41,819 --> 00:07:44,840
typescript in the browser

224
00:07:46,139 --> 00:07:48,720
and in any case we've now

225
00:07:48,720 --> 00:07:51,360
said oh identity problems are hard

226
00:07:51,360 --> 00:07:53,340
I know will simplify to a key

227
00:07:53,340 --> 00:07:55,259
distribution problem

228
00:07:55,259 --> 00:07:58,620
we'll say oh now we just need to get

229
00:07:58,620 --> 00:07:59,520
this

230
00:07:59,520 --> 00:08:02,880
CA cert to all the different places

231
00:08:02,880 --> 00:08:03,720
um

232
00:08:03,720 --> 00:08:06,419
and mounting the certificate and okay

233
00:08:06,419 --> 00:08:07,919
I'll serve the certificate is not too

234
00:08:07,919 --> 00:08:10,259
bad getting a CA

235
00:08:10,259 --> 00:08:12,840
insert into an arbitrary Docker

236
00:08:12,840 --> 00:08:14,780
container

237
00:08:14,780 --> 00:08:18,440
is not great

238
00:08:19,500 --> 00:08:22,560
it's not too bad you say like SSL serger

239
00:08:22,560 --> 00:08:25,139
all my certs are here and it will just

240
00:08:25,139 --> 00:08:27,180
pick things up and load them

241
00:08:27,180 --> 00:08:28,620
open SSS

242
00:08:28,620 --> 00:08:30,840
too bad you said SSL sector

243
00:08:30,840 --> 00:08:33,059
then you need to take all the search and

244
00:08:33,059 --> 00:08:34,620
you need to Hash their names to the

245
00:08:34,620 --> 00:08:37,559
special hashing format that openssl

246
00:08:37,559 --> 00:08:39,958
wants and so you get a directory full of

247
00:08:39,958 --> 00:08:42,719
names that are seven characters dot zero

248
00:08:42,719 --> 00:08:44,459
in a Sim link to your search

249
00:08:44,459 --> 00:08:46,560
uh yeah you could do this someplace else

250
00:08:46,560 --> 00:08:48,720
you could do it in a knit container this

251
00:08:48,720 --> 00:08:50,160
needs to happen before your binary

252
00:08:50,160 --> 00:08:53,279
starts so you can't just take a

253
00:08:53,279 --> 00:08:56,040
container using openssl and Magic assert

254
00:08:56,040 --> 00:08:59,700
into it without a bunch of extra work

255
00:08:59,700 --> 00:09:01,680
um and in Java

256
00:09:01,680 --> 00:09:03,899
there's a different tool

257
00:09:03,899 --> 00:09:05,700
that you need to load things in that's

258
00:09:05,700 --> 00:09:07,100
Java specific

259
00:09:07,100 --> 00:09:10,500
there may be other TLS libraries that

260
00:09:10,500 --> 00:09:12,660
have different ways of doing this I

261
00:09:12,660 --> 00:09:15,480
couldn't find any well widely used ones

262
00:09:15,480 --> 00:09:16,680
but

263
00:09:16,680 --> 00:09:21,979
here is my private CA please trust it

264
00:09:22,080 --> 00:09:24,120
has been a problem for 20 years and we

265
00:09:24,120 --> 00:09:25,260
apparently still don't have a standard

266
00:09:25,260 --> 00:09:26,519
interface

267
00:09:26,519 --> 00:09:28,980
if you pick a service mesh the service

268
00:09:28,980 --> 00:09:30,839
mesh controls all this and so you have

269
00:09:30,839 --> 00:09:32,459
one implementation and it's whatever

270
00:09:32,459 --> 00:09:34,620
your service mesh is implemented in but

271
00:09:34,620 --> 00:09:37,200
now you can see why

272
00:09:37,200 --> 00:09:38,760
you might want to do this Cloud native

273
00:09:38,760 --> 00:09:41,640
build packs and service bindings have

274
00:09:41,640 --> 00:09:43,680
some stuff that you can stick in but

275
00:09:43,680 --> 00:09:45,240
again you're starting to build a big

276
00:09:45,240 --> 00:09:47,760
layer to replace

277
00:09:47,760 --> 00:09:50,040
um that service mesh

278
00:09:50,040 --> 00:09:51,240
so

279
00:09:51,240 --> 00:09:53,839
okay

280
00:09:54,660 --> 00:09:57,899
maybe service mesh is a good choice

281
00:09:57,899 --> 00:09:58,860
um

282
00:09:58,860 --> 00:10:00,660
but it can be hard to roll out a service

283
00:10:00,660 --> 00:10:01,740
mesh

284
00:10:01,740 --> 00:10:04,560
and have part on and part off and figure

285
00:10:04,560 --> 00:10:06,839
out how to ramp all this stuff up it's

286
00:10:06,839 --> 00:10:08,760
getting easier

287
00:10:08,760 --> 00:10:10,620
um especially if everything is in

288
00:10:10,620 --> 00:10:12,540
kubernetes but

289
00:10:12,540 --> 00:10:15,120
it's still hard sidecar injection has a

290
00:10:15,120 --> 00:10:16,860
lot of problems I know istio ambient

291
00:10:16,860 --> 00:10:19,380
Ambient mode is the new fix for that it

292
00:10:19,380 --> 00:10:23,100
looks a lot like a cni to be honest

293
00:10:23,100 --> 00:10:26,160
um we run one agent per node and it you

294
00:10:26,160 --> 00:10:27,600
know potentially encrypts things and it

295
00:10:27,600 --> 00:10:30,360
doesn't tell you if it did it or not

296
00:10:30,360 --> 00:10:32,100
um fortunately feedback may be slightly

297
00:10:32,100 --> 00:10:35,399
better but it's still potentially a lot

298
00:10:35,399 --> 00:10:37,140
and the resource requirements can be

299
00:10:37,140 --> 00:10:39,540
high I've heard people complaining about

300
00:10:39,540 --> 00:10:40,800
how much

301
00:10:40,800 --> 00:10:42,779
CPU they're spending on Envoy proxies

302
00:10:42,779 --> 00:10:45,300
instead of on like their application

303
00:10:45,300 --> 00:10:46,560
stuff

304
00:10:46,560 --> 00:10:47,160
um

305
00:10:47,160 --> 00:10:48,779
it's got a lot of functionality which is

306
00:10:48,779 --> 00:10:50,339
great if you need that functionality and

307
00:10:50,339 --> 00:10:51,959
if you don't there's a whole bunch of

308
00:10:51,959 --> 00:10:53,339
complicated things that you need to

309
00:10:53,339 --> 00:10:55,140
figure out

310
00:10:55,140 --> 00:10:57,180
do I need this or not

311
00:10:57,180 --> 00:11:01,260
is it is it important and you know some

312
00:11:01,260 --> 00:11:03,240
organizations are going to take one step

313
00:11:03,240 --> 00:11:04,380
at a time they're going to they're going

314
00:11:04,380 --> 00:11:05,640
to figure out how to get on kubernetes

315
00:11:05,640 --> 00:11:08,040
and then they're going to figure out you

316
00:11:08,040 --> 00:11:09,540
know do I need a service mesh and if so

317
00:11:09,540 --> 00:11:11,459
what does that look like

318
00:11:11,459 --> 00:11:13,079
um some organizations are happy to jump

319
00:11:13,079 --> 00:11:14,399
in with both feet to all new

320
00:11:14,399 --> 00:11:16,079
technologies

321
00:11:16,079 --> 00:11:18,120
um sometimes those migrations work out

322
00:11:18,120 --> 00:11:19,920
great and sometimes

323
00:11:19,920 --> 00:11:20,640
um

324
00:11:20,640 --> 00:11:22,140
you're three years down the road and

325
00:11:22,140 --> 00:11:23,700
you're like nothing still nothing works

326
00:11:23,700 --> 00:11:25,380
on my new platform can I go back to the

327
00:11:25,380 --> 00:11:26,880
old one now

328
00:11:26,880 --> 00:11:28,440
so there's something to be said for

329
00:11:28,440 --> 00:11:30,899
adopting one thing at a time

330
00:11:30,899 --> 00:11:32,579
another reason

331
00:11:32,579 --> 00:11:34,680
might be multi-tenancy

332
00:11:34,680 --> 00:11:37,800
so let's say I want a shared Reddit

333
00:11:37,800 --> 00:11:41,760
service and I want to have you know okay

334
00:11:41,760 --> 00:11:43,800
this namespace asks for 100 Megs of red

335
00:11:43,800 --> 00:11:46,140
as cash this namespace asked for 500 and

336
00:11:46,140 --> 00:11:47,579
then I'm going to have one pool of

337
00:11:47,579 --> 00:11:49,320
workers behind it that service these

338
00:11:49,320 --> 00:11:51,000
things and so I'm going to have a router

339
00:11:51,000 --> 00:11:53,399
that comes in and

340
00:11:53,399 --> 00:11:55,980
you want that router to present a

341
00:11:55,980 --> 00:11:58,079
service in each one of those namespaces

342
00:11:58,079 --> 00:12:01,800
and service mesh really wants to know

343
00:12:01,800 --> 00:12:03,779
what your underlying topology of pods

344
00:12:03,779 --> 00:12:06,060
are and you're like no no this is this

345
00:12:06,060 --> 00:12:07,440
is an independent redis here and an

346
00:12:07,440 --> 00:12:08,640
independent redis here an independent

347
00:12:08,640 --> 00:12:10,800
red is here is the presentation you want

348
00:12:10,800 --> 00:12:12,899
to make to your developers and the

349
00:12:12,899 --> 00:12:14,640
services mesh is like no they all have

350
00:12:14,640 --> 00:12:16,279
the same identity

351
00:12:16,279 --> 00:12:20,160
it's all the same thing underneath

352
00:12:20,160 --> 00:12:23,120
and

353
00:12:24,060 --> 00:12:25,320
um

354
00:12:25,320 --> 00:12:27,959
for both of these cases you can tunnel

355
00:12:27,959 --> 00:12:31,019
things through with TLS Sni

356
00:12:31,019 --> 00:12:33,060
but if you're running one of these

357
00:12:33,060 --> 00:12:36,120
multi-tenant Services it breaks stuff

358
00:12:36,120 --> 00:12:37,680
like Network policy because Network

359
00:12:37,680 --> 00:12:39,180
policy says it's all going to one port

360
00:12:39,180 --> 00:12:41,579
it's all one L4 path

361
00:12:41,579 --> 00:12:43,980
um token projection

362
00:12:43,980 --> 00:12:45,060
um if you're a client if you're a

363
00:12:45,060 --> 00:12:46,620
multi-tenant client if you go out and

364
00:12:46,620 --> 00:12:48,899
call different things token projection

365
00:12:48,899 --> 00:12:50,579
wants to protect one service account

366
00:12:50,579 --> 00:12:52,260
that's the service account your pod runs

367
00:12:52,260 --> 00:12:54,000
as and there's no way to say I'm

368
00:12:54,000 --> 00:12:55,320
authorized to use this other account

369
00:12:55,320 --> 00:12:56,760
please give me a token for something

370
00:12:56,760 --> 00:12:57,860
else

371
00:12:57,860 --> 00:13:00,779
spiffy again it really wants to attest

372
00:13:00,779 --> 00:13:03,899
you are this pod not you're working on

373
00:13:03,899 --> 00:13:06,420
behalf of this service

374
00:13:06,420 --> 00:13:07,079
um

375
00:13:07,079 --> 00:13:09,720
so you can roll your own TLS Sni for

376
00:13:09,720 --> 00:13:10,740
this

377
00:13:10,740 --> 00:13:11,459
um

378
00:13:11,459 --> 00:13:14,760
let's talk a little bit about how we can

379
00:13:14,760 --> 00:13:17,459
undo some of the damage that we did by

380
00:13:17,459 --> 00:13:20,279
wanting to go back and share resources

381
00:13:20,279 --> 00:13:22,980
across the cluster for efficiency's sake

382
00:13:22,980 --> 00:13:24,000
you know

383
00:13:24,000 --> 00:13:26,459
um full disclosure here I work on the

384
00:13:26,459 --> 00:13:28,500
k-native project K native effectively

385
00:13:28,500 --> 00:13:30,540
does this for your pods because

386
00:13:30,540 --> 00:13:32,100
sometimes we scale you down to zero

387
00:13:32,100 --> 00:13:34,320
sometimes we scale you up real big we

388
00:13:34,320 --> 00:13:36,660
have a central shared piece because if

389
00:13:36,660 --> 00:13:38,339
there's something if you had to run

390
00:13:38,339 --> 00:13:41,279
something in each you know for each

391
00:13:41,279 --> 00:13:44,399
deployment where you said hey you don't

392
00:13:44,399 --> 00:13:45,959
have to run your pod but you have to run

393
00:13:45,959 --> 00:13:47,339
this other thing and sometimes you run

394
00:13:47,339 --> 00:13:49,079
your pod too everyone would be like that

395
00:13:49,079 --> 00:13:51,360
doesn't save resources but if we have

396
00:13:51,360 --> 00:13:52,920
one Central component and you have 10

397
00:13:52,920 --> 00:13:55,320
namespaces which you know scale up and

398
00:13:55,320 --> 00:13:57,180
down to zero that Central component can

399
00:13:57,180 --> 00:14:00,019
give you big savings

400
00:14:00,720 --> 00:14:01,620
um

401
00:14:01,620 --> 00:14:04,380
so Network policy I was just saying

402
00:14:04,380 --> 00:14:07,019
these are all the same TCP port

403
00:14:07,019 --> 00:14:09,360
well unless you allocate a whole bunch

404
00:14:09,360 --> 00:14:11,279
of different ports one for each service

405
00:14:11,279 --> 00:14:13,019
on your

406
00:14:13,019 --> 00:14:14,040
um

407
00:14:14,040 --> 00:14:17,760
you know on your uh router instance and

408
00:14:17,760 --> 00:14:19,620
then you can see here

409
00:14:19,620 --> 00:14:22,320
um you know this looks like you know

410
00:14:22,320 --> 00:14:24,779
this name red is Foo is on this port and

411
00:14:24,779 --> 00:14:25,980
then

412
00:14:25,980 --> 00:14:28,019
um if I create

413
00:14:28,019 --> 00:14:30,839
you know a bar instance I'll name it

414
00:14:30,839 --> 00:14:33,240
four bar and it'll be cluster IP and the

415
00:14:33,240 --> 00:14:34,920
Target Port will be maybe one higher or

416
00:14:34,920 --> 00:14:37,800
something like that and then when the

417
00:14:37,800 --> 00:14:39,540
traffic comes in from the cni I can say

418
00:14:39,540 --> 00:14:42,540
oh it came in on Port

419
00:14:42,540 --> 00:14:46,079
um you know 16 844

420
00:14:46,079 --> 00:14:47,940
um that must be for this service and it

421
00:14:47,940 --> 00:14:49,560
came out on the southern Port it must be

422
00:14:49,560 --> 00:14:50,940
for this other service and so I can use

423
00:14:50,940 --> 00:14:52,860
go back to using layer four policies

424
00:14:52,860 --> 00:14:54,240
again

425
00:14:54,240 --> 00:14:55,740
um

426
00:14:55,740 --> 00:14:58,680
and I you know I can use TLS Sni in

427
00:14:58,680 --> 00:15:00,240
combination that this or not but it's

428
00:15:00,240 --> 00:15:02,160
nice to have defense in depth options

429
00:15:02,160 --> 00:15:04,079
and when you route everything to a

430
00:15:04,079 --> 00:15:05,639
single endpoint

431
00:15:05,639 --> 00:15:08,459
inside the cluster

432
00:15:08,459 --> 00:15:09,959
um you can't use the destination IP

433
00:15:09,959 --> 00:15:12,660
address because Sni has stopped that and

434
00:15:12,660 --> 00:15:15,180
you can't use the sender because you

435
00:15:15,180 --> 00:15:16,980
don't know who that sender was it could

436
00:15:16,980 --> 00:15:19,380
be you know it might be a little Fair

437
00:15:19,380 --> 00:15:21,420
which note it is but a pod can appear

438
00:15:21,420 --> 00:15:23,820
and disappear at any time so you don't

439
00:15:23,820 --> 00:15:26,880
really want to say oh I looked and at

440
00:15:26,880 --> 00:15:28,740
this moment it was this maybe you're

441
00:15:28,740 --> 00:15:30,180
looking at Old sale cash or something

442
00:15:30,180 --> 00:15:32,279
like that

443
00:15:32,279 --> 00:15:34,019
um so destination Port can let you

444
00:15:34,019 --> 00:15:36,120
recover this

445
00:15:36,120 --> 00:15:37,740
um

446
00:15:37,740 --> 00:15:41,339
so token projection doesn't work

447
00:15:41,339 --> 00:15:43,440
but if it's important for you to be

448
00:15:43,440 --> 00:15:45,120
calling out I don't have a great example

449
00:15:45,120 --> 00:15:47,399
of this yet but I've been thinking about

450
00:15:47,399 --> 00:15:49,139
it because I I fear that I will in the

451
00:15:49,139 --> 00:15:51,660
future you could actually

452
00:15:51,660 --> 00:15:54,000
be your own open ID provider and say hey

453
00:15:54,000 --> 00:15:56,760
I'm going to you know be this client or

454
00:15:56,760 --> 00:15:59,399
that client or something like that there

455
00:15:59,399 --> 00:16:02,100
might be a kubernetes API to do I can

456
00:16:02,100 --> 00:16:04,380
act as something else I know that AWS

457
00:16:04,380 --> 00:16:06,120
has that but I haven't seen it I haven't

458
00:16:06,120 --> 00:16:08,279
seen any caps suggesting that

459
00:16:08,279 --> 00:16:10,680
impersonate another service account is

460
00:16:10,680 --> 00:16:13,320
on the kubernetes to-do list

461
00:16:13,320 --> 00:16:15,600
so this was the best

462
00:16:15,600 --> 00:16:17,100
um I could come up with for token

463
00:16:17,100 --> 00:16:19,399
projection

464
00:16:19,680 --> 00:16:22,320
and

465
00:16:22,320 --> 00:16:23,639
sometimes you might need some of these

466
00:16:23,639 --> 00:16:25,980
and a mesh

467
00:16:25,980 --> 00:16:29,339
um if you wind your head way back to the

468
00:16:29,339 --> 00:16:31,980
beginning we talked about

469
00:16:31,980 --> 00:16:33,899
why you might want an API Gateway and

470
00:16:33,899 --> 00:16:36,839
you might want to do rate limiting on a

471
00:16:36,839 --> 00:16:39,180
per API key basis

472
00:16:39,180 --> 00:16:40,920
and that might be something where you'd

473
00:16:40,920 --> 00:16:42,120
rather

474
00:16:42,120 --> 00:16:44,459
keep that on a central API Gateway even

475
00:16:44,459 --> 00:16:46,920
if you're using a service mesh so you

476
00:16:46,920 --> 00:16:50,160
might have traffic comes in service mesh

477
00:16:50,160 --> 00:16:53,040
to API Gateway to service mesh to your

478
00:16:53,040 --> 00:16:54,899
application backend

479
00:16:54,899 --> 00:16:55,980
um

480
00:16:55,980 --> 00:16:59,100
and that might be a right choice and now

481
00:16:59,100 --> 00:17:00,959
if any of you were thinking about oh

482
00:17:00,959 --> 00:17:03,120
wait isn't that a lot of envoy CPU yeah

483
00:17:03,120 --> 00:17:06,260
we talked about that earlier

484
00:17:06,359 --> 00:17:07,679
so

485
00:17:07,679 --> 00:17:09,240
um

486
00:17:09,240 --> 00:17:10,500
and

487
00:17:10,500 --> 00:17:13,020
I'm going to call back as well to Zach's

488
00:17:13,020 --> 00:17:15,959
Five Points in the keynote yesterday

489
00:17:15,959 --> 00:17:16,740
um

490
00:17:16,740 --> 00:17:19,619
pretty much every service that has user

491
00:17:19,619 --> 00:17:21,000
data and some sort of authorization

492
00:17:21,000 --> 00:17:24,260
model is in a way multi-tenant

493
00:17:24,260 --> 00:17:27,359
you know if you think about it like

494
00:17:27,359 --> 00:17:30,780
something like Facebook or

495
00:17:30,780 --> 00:17:34,260
um you know your shopping cart on

496
00:17:34,260 --> 00:17:38,000
you know Amazon like that is a service

497
00:17:38,000 --> 00:17:40,679
and my shopping cart isn't your shopping

498
00:17:40,679 --> 00:17:42,900
cart isn't your shopping cart so that's

499
00:17:42,900 --> 00:17:44,700
really a multi-tenant service it's not

500
00:17:44,700 --> 00:17:48,539
an API controlling you know compute

501
00:17:48,539 --> 00:17:51,240
things but you still need a lot of that

502
00:17:51,240 --> 00:17:53,940
same authorization logic

503
00:17:53,940 --> 00:17:55,260
um

504
00:17:55,260 --> 00:17:57,720
and so you actually will need to get

505
00:17:57,720 --> 00:17:59,340
your application involved in the

506
00:17:59,340 --> 00:18:03,000
security even if you have a service mesh

507
00:18:03,000 --> 00:18:04,679
um you may be able to make some course

508
00:18:04,679 --> 00:18:07,559
Grade Rules that X can't talk to why

509
00:18:07,559 --> 00:18:09,480
add a little bit more of an intermediate

510
00:18:09,480 --> 00:18:12,360
level than Network policy is so rather

511
00:18:12,360 --> 00:18:14,760
than saying you know in this diagram

512
00:18:14,760 --> 00:18:16,620
orders

513
00:18:16,620 --> 00:18:18,840
can talk to you know

514
00:18:18,840 --> 00:18:20,700
orders can't talk to addresses or orders

515
00:18:20,700 --> 00:18:22,620
can talk to addresses you can say orders

516
00:18:22,620 --> 00:18:24,480
can only talk to addresses with its own

517
00:18:24,480 --> 00:18:26,820
identity it can't go and impersonate a

518
00:18:26,820 --> 00:18:28,799
customer or something like that and so

519
00:18:28,799 --> 00:18:30,780
maybe orders has a special look up in

520
00:18:30,780 --> 00:18:33,179
addresses to to go and get things out

521
00:18:33,179 --> 00:18:35,400
and that's how you decide to structure

522
00:18:35,400 --> 00:18:36,440
things

523
00:18:36,440 --> 00:18:38,760
but addresses wants to know who's

524
00:18:38,760 --> 00:18:40,559
calling it and what permissions should

525
00:18:40,559 --> 00:18:42,539
they have and are they allowed to access

526
00:18:42,539 --> 00:18:44,760
this or that type of data and it might

527
00:18:44,760 --> 00:18:47,640
be even down to a field level

528
00:18:47,640 --> 00:18:50,220
you know I let

529
00:18:50,220 --> 00:18:51,059
um

530
00:18:51,059 --> 00:18:53,820
I let orders view some of the address

531
00:18:53,820 --> 00:18:57,059
data but not historical data whereas the

532
00:18:57,059 --> 00:18:59,100
user can see like oh these are the past

533
00:18:59,100 --> 00:19:02,059
addresses I had

534
00:19:04,799 --> 00:19:06,299
and

535
00:19:06,299 --> 00:19:08,940
yeah you could do a lot of that logic in

536
00:19:08,940 --> 00:19:10,980
mesh whoops

537
00:19:10,980 --> 00:19:12,780
you could do a lot of that logic in the

538
00:19:12,780 --> 00:19:15,299
mesh but imagine writing

539
00:19:15,299 --> 00:19:17,400
istio policies like this for every

540
00:19:17,400 --> 00:19:20,700
single user your mesh would die you

541
00:19:20,700 --> 00:19:23,160
would hate your life

542
00:19:23,160 --> 00:19:25,860
and it would be much easier to build

543
00:19:25,860 --> 00:19:28,260
this into your application so maybe your

544
00:19:28,260 --> 00:19:30,600
mesh can can answer some of those lower

545
00:19:30,600 --> 00:19:32,220
level questions about who's talking to

546
00:19:32,220 --> 00:19:33,660
me but you need some higher level

547
00:19:33,660 --> 00:19:36,360
questions about what's the application

548
00:19:36,360 --> 00:19:38,520
supposed to do that you actually don't

549
00:19:38,520 --> 00:19:42,000
want to pull out into your service mesh

550
00:19:42,000 --> 00:19:42,660
um

551
00:19:42,660 --> 00:19:45,000
I talked about API gateways earlier this

552
00:19:45,000 --> 00:19:46,559
is more of the same

553
00:19:46,559 --> 00:19:48,900
there's a lot of stuff that you can get

554
00:19:48,900 --> 00:19:51,179
out of API Gateway some of that stuff is

555
00:19:51,179 --> 00:19:52,860
you know maybe if you built your

556
00:19:52,860 --> 00:19:54,059
application today you would need it

557
00:19:54,059 --> 00:19:56,760
maybe in some cases it's the right thing

558
00:19:56,760 --> 00:19:59,760
even today because you know if you're

559
00:19:59,760 --> 00:20:02,580
using something like apogee you can you

560
00:20:02,580 --> 00:20:05,520
know call out to an external system to

561
00:20:05,520 --> 00:20:09,299
say Hey you know does this customer have

562
00:20:09,299 --> 00:20:11,520
this property or something like that and

563
00:20:11,520 --> 00:20:13,200
building that into your application

564
00:20:13,200 --> 00:20:15,419
might be less disgusting than building

565
00:20:15,419 --> 00:20:18,480
it into your API Gateway

566
00:20:18,480 --> 00:20:20,220
um but you probably don't want every

567
00:20:20,220 --> 00:20:22,200
single node on your mesh loading these

568
00:20:22,200 --> 00:20:23,280
policies

569
00:20:23,280 --> 00:20:24,960
because some of these policies are

570
00:20:24,960 --> 00:20:28,380
complicated and crazy and yes you could

571
00:20:28,380 --> 00:20:30,960
push that wasm everywhere but

572
00:20:30,960 --> 00:20:33,600
why do you want to do that

573
00:20:33,600 --> 00:20:36,299
and so the last the last piece here is

574
00:20:36,299 --> 00:20:39,240
what I've been alluding to earlier

575
00:20:39,240 --> 00:20:40,559
um

576
00:20:40,559 --> 00:20:42,419
there's two different levels at the

577
00:20:42,419 --> 00:20:44,940
network policy of the mesh level

578
00:20:44,940 --> 00:20:48,179
you know hey these you know is this

579
00:20:48,179 --> 00:20:51,720
allowed to come in and you know who you

580
00:20:51,720 --> 00:20:53,640
know what server on the network sent it

581
00:20:53,640 --> 00:20:56,580
to me and there's a second level of what

582
00:20:56,580 --> 00:20:58,260
user made the request and so you

583
00:20:58,260 --> 00:20:59,820
actually need to build both of these

584
00:20:59,820 --> 00:21:02,340
layers and then you can start to make

585
00:21:02,340 --> 00:21:05,160
more complicated decisions as well like

586
00:21:05,160 --> 00:21:07,700
hey you know

587
00:21:07,700 --> 00:21:12,240
is a user coming in from the orders

588
00:21:12,240 --> 00:21:13,620
system

589
00:21:13,620 --> 00:21:18,600
able to go and you know update their you

590
00:21:18,600 --> 00:21:20,820
know call an API to update

591
00:21:20,820 --> 00:21:22,320
their address and you're like well no it

592
00:21:22,320 --> 00:21:23,280
doesn't make sense for that to come from

593
00:21:23,280 --> 00:21:24,419
the order system that should only come

594
00:21:24,419 --> 00:21:26,039
from the front end and maybe in the

595
00:21:26,039 --> 00:21:27,299
future it's like it could come from the

596
00:21:27,299 --> 00:21:28,919
front end or it could come through

597
00:21:28,919 --> 00:21:30,360
customer support

598
00:21:30,360 --> 00:21:32,280
and so maybe the customer support portal

599
00:21:32,280 --> 00:21:35,460
becomes another you know top level

600
00:21:35,460 --> 00:21:37,740
Network policy source that you can

601
00:21:37,740 --> 00:21:40,140
consider and you're like oh if it comes

602
00:21:40,140 --> 00:21:41,580
through customer support then I need to

603
00:21:41,580 --> 00:21:45,000
write this audit log over here and if it

604
00:21:45,000 --> 00:21:46,919
comes from the front end then I don't

605
00:21:46,919 --> 00:21:49,860
need to write the same audit log because

606
00:21:49,860 --> 00:21:51,840
um presumably the user was logged in as

607
00:21:51,840 --> 00:21:53,940
opposed to someone called and convinced

608
00:21:53,940 --> 00:21:57,179
customer support they were the user and

609
00:21:57,179 --> 00:21:58,679
um that's a social engineering attack

610
00:21:58,679 --> 00:22:00,780
and we are

611
00:22:00,780 --> 00:22:03,059
never going to get computers to be able

612
00:22:03,059 --> 00:22:04,919
to protect us against that because it's

613
00:22:04,919 --> 00:22:07,559
about humans talking to humans

614
00:22:07,559 --> 00:22:08,640
um

615
00:22:08,640 --> 00:22:11,220
and so a service mesh will never solve

616
00:22:11,220 --> 00:22:14,360
that because it's technology

617
00:22:14,520 --> 00:22:16,140
and

618
00:22:16,140 --> 00:22:18,059
I love that we are building more of this

619
00:22:18,059 --> 00:22:19,860
technology and that we can close down

620
00:22:19,860 --> 00:22:22,380
the space of attacks that computers can

621
00:22:22,380 --> 00:22:23,580
do

622
00:22:23,580 --> 00:22:25,740
but we need to think about the attacks

623
00:22:25,740 --> 00:22:28,380
that people do too

624
00:22:28,380 --> 00:22:30,440
um

625
00:22:30,480 --> 00:22:34,140
so yeah in summary everything is pretty

626
00:22:34,140 --> 00:22:36,840
awesome we've got a whole bunch of

627
00:22:36,840 --> 00:22:38,480
really cool Technologies

628
00:22:38,480 --> 00:22:41,940
we kind of trip over the basics

629
00:22:41,940 --> 00:22:43,799
so we've got these awesome service

630
00:22:43,799 --> 00:22:45,659
meshes but we can't

631
00:22:45,659 --> 00:22:46,919
get

632
00:22:46,919 --> 00:22:50,580
a CA cert into a random container

633
00:22:50,580 --> 00:22:53,580
because that would require talking to

634
00:22:53,580 --> 00:22:56,340
Java people and to go people and to C

635
00:22:56,340 --> 00:22:58,980
plus plus people into python people

636
00:22:58,980 --> 00:23:00,059
um

637
00:23:00,059 --> 00:23:02,220
and getting all these libraries to agree

638
00:23:02,220 --> 00:23:04,500
on a place even if it's not the place

639
00:23:04,500 --> 00:23:06,240
they used to do it

640
00:23:06,240 --> 00:23:07,140
um

641
00:23:07,140 --> 00:23:09,380
authentication and identity is hard

642
00:23:09,380 --> 00:23:12,740
should you use spiffy should you use

643
00:23:12,740 --> 00:23:16,080
cluster API token projection should you

644
00:23:16,080 --> 00:23:17,580
use your Cloud provider's managed

645
00:23:17,580 --> 00:23:19,620
identity service I can't answer those

646
00:23:19,620 --> 00:23:21,659
things for you

647
00:23:21,659 --> 00:23:23,880
um but there's trade-offs none of them

648
00:23:23,880 --> 00:23:26,100
is great or perfect

649
00:23:26,100 --> 00:23:27,299
um

650
00:23:27,299 --> 00:23:29,039
but we've been working on it for 40

651
00:23:29,039 --> 00:23:30,419
years so I'm sure the answer is just

652
00:23:30,419 --> 00:23:33,020
around the corner

653
00:23:33,419 --> 00:23:36,179
authorization is hard

654
00:23:36,179 --> 00:23:37,380
um figuring out the right place to make

655
00:23:37,380 --> 00:23:40,919
an authorization decision is hard and

656
00:23:40,919 --> 00:23:41,520
um

657
00:23:41,520 --> 00:23:44,159
we can build tools to help you authorize

658
00:23:44,159 --> 00:23:46,080
things but you need to figure out which

659
00:23:46,080 --> 00:23:47,400
are the right tools and the right places

660
00:23:47,400 --> 00:23:48,900
for it and sometimes the answer is going

661
00:23:48,900 --> 00:23:49,740
to be

662
00:23:49,740 --> 00:23:51,480
you write your own code you write your

663
00:23:51,480 --> 00:23:55,140
own policy engine and

664
00:23:55,140 --> 00:23:56,340
um yeah

665
00:23:56,340 --> 00:23:59,039
maybe chat GPT will you know build me a

666
00:23:59,039 --> 00:24:00,600
policy engine that can make the right

667
00:24:00,600 --> 00:24:03,480
business decisions someday but so far I

668
00:24:03,480 --> 00:24:04,679
think our job security is actually

669
00:24:04,679 --> 00:24:07,159
pretty good

670
00:24:07,799 --> 00:24:08,460
um

671
00:24:08,460 --> 00:24:11,940
and yeah meshes meshes will solve some

672
00:24:11,940 --> 00:24:13,260
of these things as long as you're

673
00:24:13,260 --> 00:24:15,179
willing to to put a lot of trust in the

674
00:24:15,179 --> 00:24:16,440
mesh

675
00:24:16,440 --> 00:24:17,100
um

676
00:24:17,100 --> 00:24:20,039
that makes me as someone who believes in

677
00:24:20,039 --> 00:24:21,600
defense Adept a little bit nervous if

678
00:24:21,600 --> 00:24:25,320
it's uh and all your trust is in Acts

679
00:24:25,320 --> 00:24:26,940
um there was a talk yesterday that was

680
00:24:26,940 --> 00:24:29,580
talking about okay so you get you know

681
00:24:29,580 --> 00:24:31,140
you get encrypted communication between

682
00:24:31,140 --> 00:24:33,419
the mesh but then the mesh to your

683
00:24:33,419 --> 00:24:35,700
application is

684
00:24:35,700 --> 00:24:38,340
clear text and that's over localhost so

685
00:24:38,340 --> 00:24:40,980
you can only Snoop it if you get like

686
00:24:40,980 --> 00:24:42,900
rude on localhost which you know at

687
00:24:42,900 --> 00:24:44,700
which point I can also just rip it out

688
00:24:44,700 --> 00:24:47,100
of your application's memory like you

689
00:24:47,100 --> 00:24:49,320
know devmem is a thing

690
00:24:49,320 --> 00:24:52,200
um but it also means that my application

691
00:24:52,200 --> 00:24:54,299
doesn't understand whether the other end

692
00:24:54,299 --> 00:24:58,260
is encrypted or not and so I go make a

693
00:24:58,260 --> 00:24:59,760
connection and I think oh this is great

694
00:24:59,760 --> 00:25:01,260
and then I end up on a cluster where

695
00:25:01,260 --> 00:25:03,059
there isn't a service mesh

696
00:25:03,059 --> 00:25:06,000
and there's no feedback that says hey

697
00:25:06,000 --> 00:25:07,440
wait you tried to make this connection

698
00:25:07,440 --> 00:25:09,299
and you wanted it to be encrypted and

699
00:25:09,299 --> 00:25:11,400
it's not I have no way of hinting that

700
00:25:11,400 --> 00:25:12,720
to my environment

701
00:25:12,720 --> 00:25:14,460
so

702
00:25:14,460 --> 00:25:16,500
service meshes make me a little nervous

703
00:25:16,500 --> 00:25:19,260
in that sense because it's hard to see

704
00:25:19,260 --> 00:25:22,200
that you're getting the thing you want

705
00:25:22,200 --> 00:25:23,340
um

706
00:25:23,340 --> 00:25:26,220
and again working around all of these

707
00:25:26,220 --> 00:25:30,299
may add some new challenges in terms of

708
00:25:30,299 --> 00:25:31,740
getting all your identities out there

709
00:25:31,740 --> 00:25:33,299
and all your certs out there and stuff

710
00:25:33,299 --> 00:25:35,279
like that and

711
00:25:35,279 --> 00:25:37,919
so I bet we'll be here again in you know

712
00:25:37,919 --> 00:25:39,779
we're not in Seattle but I bet we'll be

713
00:25:39,779 --> 00:25:41,159
having more Cloud native security cons

714
00:25:41,159 --> 00:25:43,440
dealing with all of these problems

715
00:25:43,440 --> 00:25:47,059
for another five or ten years at least

716
00:25:47,279 --> 00:25:48,659
and then maybe you all will do something

717
00:25:48,659 --> 00:25:50,520
else other than security and new people

718
00:25:50,520 --> 00:25:53,120
will be here

719
00:25:53,940 --> 00:25:55,500
maybe they'll figure out the problems

720
00:25:55,500 --> 00:25:57,360
maybe we will I actually have confidence

721
00:25:57,360 --> 00:25:59,279
that we can make these things better

722
00:25:59,279 --> 00:26:01,679
but um

723
00:26:01,679 --> 00:26:04,260
we're going to have to focus on not just

724
00:26:04,260 --> 00:26:06,500
the fancy new shiny stuff but

725
00:26:06,500 --> 00:26:09,120
nailing the basics

726
00:26:09,120 --> 00:26:12,360
so thank you and sorry for the

727
00:26:12,360 --> 00:26:16,080
um mess on starting on time but uh

728
00:26:16,080 --> 00:26:17,520
yeah I'm happy to take questions and

729
00:26:17,520 --> 00:26:20,120
stuff if people

730
00:26:20,340 --> 00:26:23,100
people have anything

731
00:26:23,100 --> 00:26:25,140
or any corrections you know it may be

732
00:26:25,140 --> 00:26:26,580
that there are good answers to some of

733
00:26:26,580 --> 00:26:29,658
this stuff that I've just missed

734
00:26:32,520 --> 00:26:34,919
I was talking to someone over at keyless

735
00:26:34,919 --> 00:26:36,419
I think earlier and they're like we have

736
00:26:36,419 --> 00:26:37,799
a great library for that stuff and I'm

737
00:26:37,799 --> 00:26:39,480
like great we have another library for

738
00:26:39,480 --> 00:26:42,539
SSL like it's good to have some

739
00:26:42,539 --> 00:26:44,880
diversity there you don't want

740
00:26:44,880 --> 00:26:46,080
um back when heart bleed happened I

741
00:26:46,080 --> 00:26:47,220
remember it affected basically everyone

742
00:26:47,220 --> 00:26:48,600
because

743
00:26:48,600 --> 00:26:50,400
there was one SSL library and everyone

744
00:26:50,400 --> 00:26:53,039
used openssl and so if there was a bug

745
00:26:53,039 --> 00:26:56,039
uh it hit everybody

746
00:26:56,039 --> 00:26:57,120
um

747
00:26:57,120 --> 00:26:59,039
and so the fact there's boring SSL now

748
00:26:59,039 --> 00:27:00,659
and a couple other implementations I

749
00:27:00,659 --> 00:27:02,760
think is good but

750
00:27:02,760 --> 00:27:04,380
um

751
00:27:04,380 --> 00:27:07,140
if their interfaces aren't standardized

752
00:27:07,140 --> 00:27:08,580
on either the file system or the

753
00:27:08,580 --> 00:27:09,960
application it's really hard to move

754
00:27:09,960 --> 00:27:12,559
between them

755
00:27:12,659 --> 00:27:13,980
and I know I don't have the right people

756
00:27:13,980 --> 00:27:15,540
in the room for that but

757
00:27:15,540 --> 00:27:17,820
[Laughter]

758
00:27:17,820 --> 00:27:20,400
part of what makes it hard need to find

759
00:27:20,400 --> 00:27:22,200
the right people

760
00:27:22,200 --> 00:27:24,740
yes

761
00:27:37,679 --> 00:27:39,539
so

762
00:27:39,539 --> 00:27:41,460
okay yeah I'm gonna I'm gonna repeat the

763
00:27:41,460 --> 00:27:43,500
question so it picks up on the recording

764
00:27:43,500 --> 00:27:48,120
um the question was is do I think that

765
00:27:48,120 --> 00:27:49,080
um

766
00:27:49,080 --> 00:27:52,260
improving service mesh or finding a new

767
00:27:52,260 --> 00:27:54,299
replacement concept is a better way to

768
00:27:54,299 --> 00:27:56,700
solve this and

769
00:27:56,700 --> 00:27:58,260
um

770
00:27:58,260 --> 00:28:01,320
I guess I'm uh

771
00:28:01,320 --> 00:28:04,020
I try not to Define my Solutions ahead

772
00:28:04,020 --> 00:28:06,539
of time and instead Define my

773
00:28:06,539 --> 00:28:07,980
requirements and see if a solution is

774
00:28:07,980 --> 00:28:11,159
going to match and so I guess I would

775
00:28:11,159 --> 00:28:13,620
call out some of these challenges and

776
00:28:13,620 --> 00:28:15,960
see whether they are fundamental to the

777
00:28:15,960 --> 00:28:18,539
definition of a service mesh things like

778
00:28:18,539 --> 00:28:20,640
I can't tell if the service mesh is

779
00:28:20,640 --> 00:28:23,039
there or on which is also a problem we

780
00:28:23,039 --> 00:28:25,440
have with cni I can't tell if cni is

781
00:28:25,440 --> 00:28:27,960
encrypted I can't tell if cni is

782
00:28:27,960 --> 00:28:30,120
enforcing Network policies my Helm chart

783
00:28:30,120 --> 00:28:32,640
can't tell that when I install so maybe

784
00:28:32,640 --> 00:28:34,020
I install a bunch of network policies

785
00:28:34,020 --> 00:28:37,260
and it means bump kiss maybe there's

786
00:28:37,260 --> 00:28:40,020
already an encrypted cni there and so

787
00:28:40,020 --> 00:28:43,620
I'm doing TLS over an encrypted cni and

788
00:28:43,620 --> 00:28:45,840
yes I've got two layers of encryption

789
00:28:45,840 --> 00:28:47,400
and they don't cancel each other out or

790
00:28:47,400 --> 00:28:49,380
anything but I'm spending more CPU than

791
00:28:49,380 --> 00:28:52,260
I would need to and

792
00:28:52,260 --> 00:28:56,760
we have no ways today to really detect

793
00:28:56,760 --> 00:28:58,919
and understand that in a standardized

794
00:28:58,919 --> 00:29:02,220
way and if kubernetes is really going to

795
00:29:02,220 --> 00:29:03,840
be the orchestrator for all of these

796
00:29:03,840 --> 00:29:07,020
things I think it's kind of

797
00:29:07,020 --> 00:29:08,700
you know I think kubernetes should

798
00:29:08,700 --> 00:29:10,440
Define some standards for figuring these

799
00:29:10,440 --> 00:29:12,419
things out

800
00:29:12,419 --> 00:29:15,900
um and that probably means that in four

801
00:29:15,900 --> 00:29:20,100
years we will have written some caps and

802
00:29:20,100 --> 00:29:22,740
we will have implemented some caps and

803
00:29:22,740 --> 00:29:25,140
they will have passed the beta stage and

804
00:29:25,140 --> 00:29:27,059
be on by default and they will have

805
00:29:27,059 --> 00:29:28,799
rolled out to your Cloud providers and

806
00:29:28,799 --> 00:29:32,279
you will have upgraded to those versions

807
00:29:32,279 --> 00:29:36,360
it's a long road but

808
00:29:37,320 --> 00:29:38,520
um

809
00:29:38,520 --> 00:29:41,039
if we don't go down it because we see

810
00:29:41,039 --> 00:29:43,020
it's a long road it's not going to get

811
00:29:43,020 --> 00:29:44,340
shorter

812
00:29:44,340 --> 00:29:46,020
it's not like people are going to wake

813
00:29:46,020 --> 00:29:47,880
up tomorrow and be like hey I think we

814
00:29:47,880 --> 00:29:49,620
should make kubernetes

815
00:29:49,620 --> 00:29:52,919
release more often and with features

816
00:29:52,919 --> 00:29:55,620
that are less thought through and stable

817
00:29:55,620 --> 00:29:56,340
um

818
00:29:56,340 --> 00:29:58,860
that that pressure is never is never

819
00:29:58,860 --> 00:30:01,980
going to win at this point so

820
00:30:01,980 --> 00:30:04,500
um the best we can do is start today

821
00:30:04,500 --> 00:30:09,559
and look at how can we do better

822
00:30:13,080 --> 00:30:16,260
and yeah as I said like it's not clear

823
00:30:16,260 --> 00:30:19,260
to me like istio ambient mash and a cni

824
00:30:19,260 --> 00:30:21,179
are starting to look closer and closer

825
00:30:21,179 --> 00:30:22,980
together

826
00:30:22,980 --> 00:30:25,039
um

827
00:30:25,200 --> 00:30:28,100
I don't know what that means

828
00:30:31,200 --> 00:30:32,940
maybe in five years we can look back and

829
00:30:32,940 --> 00:30:35,779
we can find out what it meant

830
00:30:36,720 --> 00:30:38,340
I also am a big believer that everyone

831
00:30:38,340 --> 00:30:40,080
here is trying their hardest

832
00:30:40,080 --> 00:30:42,360
and we're all doing the thing that looks

833
00:30:42,360 --> 00:30:45,120
best from our own positions so

834
00:30:45,120 --> 00:30:47,880
um this is really not a oh X is bad or Y

835
00:30:47,880 --> 00:30:49,980
is bad other than to point out that like

836
00:30:49,980 --> 00:30:51,840
why have we not figured out how to do

837
00:30:51,840 --> 00:30:54,419
custom Cas in 20 years but you know

838
00:30:54,419 --> 00:30:57,860
tomorrow could be better

839
00:31:01,440 --> 00:31:03,860
good

840
00:31:10,620 --> 00:31:13,679
uh if I can rephrase it a little bit the

841
00:31:13,679 --> 00:31:16,740
question was have I considered joining

842
00:31:16,740 --> 00:31:18,419
one of the steering committees and

843
00:31:18,419 --> 00:31:20,159
attempting to work on this I kind of

844
00:31:20,159 --> 00:31:21,899
figured this out three months or started

845
00:31:21,899 --> 00:31:23,820
figuring this out three months ago I'm

846
00:31:23,820 --> 00:31:24,840
still trying to figure out what I want

847
00:31:24,840 --> 00:31:26,580
to do with the knowledge that I have but

848
00:31:26,580 --> 00:31:28,500
one of the things I did was I put

849
00:31:28,500 --> 00:31:29,880
together a talk presentation and

850
00:31:29,880 --> 00:31:32,840
submitted it to the conference

851
00:31:33,200 --> 00:31:35,520
but yes I am starting to think about

852
00:31:35,520 --> 00:31:36,840
this and I'm not even sure what the

853
00:31:36,840 --> 00:31:38,340
right steering committee is

854
00:31:38,340 --> 00:31:40,679
hmm

855
00:31:40,679 --> 00:31:42,299
um on one hand it feels like if I want

856
00:31:42,299 --> 00:31:43,980
to fix the ca search stuff I need to go

857
00:31:43,980 --> 00:31:46,140
you know figure out the the folks in the

858
00:31:46,140 --> 00:31:48,360
Java community and the folks in the open

859
00:31:48,360 --> 00:31:51,059
SSL community and so forth and and push

860
00:31:51,059 --> 00:31:53,279
them and on the other hand if I want to

861
00:31:53,279 --> 00:31:55,860
fix stuff like the cni stuff then you

862
00:31:55,860 --> 00:31:57,960
know that's probably a different

863
00:31:57,960 --> 00:32:00,799
set of people

864
00:32:01,080 --> 00:32:04,080
but yeah

865
00:32:04,080 --> 00:32:05,940
yeah I want this stuff to be better and

866
00:32:05,940 --> 00:32:09,860
so I'm I'm willing to put some effort in

867
00:32:11,760 --> 00:32:13,500
excellent well

868
00:32:13,500 --> 00:32:16,500
now I have made up my

869
00:32:16,500 --> 00:32:19,620
missed time at the beginning

870
00:32:19,620 --> 00:32:21,899
I'm y'all should have yelled at me too

871
00:32:21,899 --> 00:32:23,340
you're like what are you doing over

872
00:32:23,340 --> 00:32:24,840
there and I'm like Oh I thought I

873
00:32:24,840 --> 00:32:27,740
started 210.

874
00:32:27,899 --> 00:32:29,399
occurred to me everyone was staring at

875
00:32:29,399 --> 00:32:32,840
me though in a funny way okay

