1
00:00:00,000 --> 00:00:03,540
hi I'm Brandon I work on the Google open

2
00:00:03,540 --> 00:00:06,779
source security team and naturally part

3
00:00:06,779 --> 00:00:09,960
of that is securing open source and

4
00:00:09,960 --> 00:00:11,880
actually part of that is supply chain

5
00:00:11,880 --> 00:00:15,000
security right so let's talk about what

6
00:00:15,000 --> 00:00:16,740
everyone's been talking about over here

7
00:00:16,740 --> 00:00:18,600
we see the supply chain security Bingo

8
00:00:18,600 --> 00:00:19,340
got

9
00:00:19,340 --> 00:00:21,960
so software supply chain security is

10
00:00:21,960 --> 00:00:23,340
something everyone's been talking about

11
00:00:23,340 --> 00:00:26,160
we've seen the charts so it's going up

12
00:00:26,160 --> 00:00:28,560
the error so it's going up

13
00:00:28,560 --> 00:00:30,900
um and you know these this is important

14
00:00:30,900 --> 00:00:33,260
right indeed software supply chain

15
00:00:33,260 --> 00:00:36,239
compromises and attacks happen on the

16
00:00:36,239 --> 00:00:39,000
rise of late right

17
00:00:39,000 --> 00:00:42,360
however the industry also has gotten

18
00:00:42,360 --> 00:00:45,059
together and given a response to match

19
00:00:45,059 --> 00:00:47,700
we've seen a lot more efforts a lot more

20
00:00:47,700 --> 00:00:49,920
working groups a lot more foundations

21
00:00:49,920 --> 00:00:52,440
and organizations prioritizing supply

22
00:00:52,440 --> 00:00:54,780
chain security

23
00:00:54,780 --> 00:00:57,960
in fact even a cognitive security can't

24
00:00:57,960 --> 00:01:01,079
this time we've seen a very large number

25
00:01:01,079 --> 00:01:03,000
the most number of submissions coming

26
00:01:03,000 --> 00:01:04,739
around the topic of supply chain

27
00:01:04,739 --> 00:01:06,960
security

28
00:01:06,960 --> 00:01:09,420
so as a community we have something to

29
00:01:09,420 --> 00:01:11,960
show for that

30
00:01:12,619 --> 00:01:15,360
so let's just look at the all the cool

31
00:01:15,360 --> 00:01:18,119
new and existing projects that have been

32
00:01:18,119 --> 00:01:19,320
trying to solve the supply chain

33
00:01:19,320 --> 00:01:22,020
security problem uh this goes across

34
00:01:22,020 --> 00:01:24,540
many different areas including build

35
00:01:24,540 --> 00:01:26,040
systems

36
00:01:26,040 --> 00:01:27,780
um as you've heard already in today's

37
00:01:27,780 --> 00:01:31,439
keynote signing trusts software metadata

38
00:01:31,439 --> 00:01:33,840
and scanners right so

39
00:01:33,840 --> 00:01:36,540
that's a whole lot going on here I'm

40
00:01:36,540 --> 00:01:38,700
gonna spend a little bit kind of talking

41
00:01:38,700 --> 00:01:40,979
a little bit about what the layers are

42
00:01:40,979 --> 00:01:43,619
and what's going on the progress we are

43
00:01:43,619 --> 00:01:45,780
making and then talk a little bit more

44
00:01:45,780 --> 00:01:47,280
about what are the next steps where

45
00:01:47,280 --> 00:01:49,020
should we go

46
00:01:49,020 --> 00:01:51,720
uh so to start in this list we have

47
00:01:51,720 --> 00:01:53,880
projects that help set a strong

48
00:01:53,880 --> 00:01:56,159
Foundation of trust uh you've heard it

49
00:01:56,159 --> 00:01:59,340
at a time six star and um kind of

50
00:01:59,340 --> 00:02:02,040
underpinning that tough or the update

51
00:02:02,040 --> 00:02:05,280
framework uh they help keep signing

52
00:02:05,280 --> 00:02:06,719
simple and open

53
00:02:06,719 --> 00:02:09,899
and in addition we also have zero trust

54
00:02:09,899 --> 00:02:12,900
projects like spiffy Inspire and key

55
00:02:12,900 --> 00:02:15,300
lime that are integrating with the

56
00:02:15,300 --> 00:02:18,620
entire ecosystem as well

57
00:02:19,080 --> 00:02:21,300
we've also seen a lot of activity in

58
00:02:21,300 --> 00:02:23,400
progress in terms of software metadata

59
00:02:23,400 --> 00:02:25,440
standards such as salsa they're working

60
00:02:25,440 --> 00:02:27,900
on their 1.0 release that will have a

61
00:02:27,900 --> 00:02:30,360
draft in a couple weeks and hopefully GA

62
00:02:30,360 --> 00:02:33,080
in the next one or two months

63
00:02:33,080 --> 00:02:36,239
and if you're in the U.S and you've

64
00:02:36,239 --> 00:02:38,819
heard about the executive order which

65
00:02:38,819 --> 00:02:40,140
um I think most

66
00:02:40,140 --> 00:02:43,680
already have and affected by s-bombs we

67
00:02:43,680 --> 00:02:46,019
see both spdx and cycle and DX standards

68
00:02:46,019 --> 00:02:49,560
as well becoming more popular and on top

69
00:02:49,560 --> 00:02:51,720
of that are coming upcoming tooling

70
00:02:51,720 --> 00:02:53,940
which is very important

71
00:02:53,940 --> 00:02:56,160
and we see things like vulnerability

72
00:02:56,160 --> 00:02:58,500
exploitability exchange that's coming

73
00:02:58,500 --> 00:03:01,319
out of the Seesaw working groups to kind

74
00:03:01,319 --> 00:03:03,480
of tackle you know now that I know what

75
00:03:03,480 --> 00:03:05,160
my vulnerabilities out of all my

76
00:03:05,160 --> 00:03:06,599
scanners

77
00:03:06,599 --> 00:03:09,000
um how do I triage them what's important

78
00:03:09,000 --> 00:03:11,280
to me what is not maybe some

79
00:03:11,280 --> 00:03:15,140
vulnerabilities I am not affected by

80
00:03:15,239 --> 00:03:16,980
um and finally of course we have build

81
00:03:16,980 --> 00:03:19,379
systems like tecton and the open ssf

82
00:03:19,379 --> 00:03:21,659
Fresca who have helped to be able to

83
00:03:21,659 --> 00:03:24,720
create these trusted artifacts

84
00:03:24,720 --> 00:03:27,239
so seeing all this great tooling being

85
00:03:27,239 --> 00:03:30,120
done tech security had an effort last

86
00:03:30,120 --> 00:03:32,760
year around creating a secure software

87
00:03:32,760 --> 00:03:35,400
Factory and so what we've done is we've

88
00:03:35,400 --> 00:03:37,319
created a reference architecture to show

89
00:03:37,319 --> 00:03:39,360
you how you can take these different

90
00:03:39,360 --> 00:03:42,659
components and put them to cohesive

91
00:03:42,659 --> 00:03:45,180
structure to produce trusted software

92
00:03:45,180 --> 00:03:47,700
and attestations

93
00:03:47,700 --> 00:03:49,640
foreign

94
00:03:49,640 --> 00:03:52,140
one thing you notice about these

95
00:03:52,140 --> 00:03:54,420
projects that we just looked at is a lot

96
00:03:54,420 --> 00:03:56,280
of them are focusing on the producing

97
00:03:56,280 --> 00:03:58,680
side how do I produce trusted software

98
00:03:58,680 --> 00:04:01,920
how do I produce software metadata that

99
00:04:01,920 --> 00:04:03,659
is useful you know how do I get s-bomb

100
00:04:03,659 --> 00:04:04,980
sorry that's the number one question

101
00:04:04,980 --> 00:04:07,680
that everyone's talking about

102
00:04:07,680 --> 00:04:10,379
um but as with any supply chain right

103
00:04:10,379 --> 00:04:12,840
there is producers that are consumers as

104
00:04:12,840 --> 00:04:15,080
well

105
00:04:15,299 --> 00:04:17,220
and so we've done a great job producing

106
00:04:17,220 --> 00:04:20,100
trusts there's many however there are so

107
00:04:20,100 --> 00:04:21,959
many open questions about what do we do

108
00:04:21,959 --> 00:04:24,660
with this right we have all these

109
00:04:24,660 --> 00:04:27,240
documents how do you evaluate them we

110
00:04:27,240 --> 00:04:29,040
have questions like okay I have s-bomb

111
00:04:29,040 --> 00:04:31,620
what do I do with it

112
00:04:31,620 --> 00:04:33,600
um how many levels deep do I have to

113
00:04:33,600 --> 00:04:35,340
check for things you know how many

114
00:04:35,340 --> 00:04:37,080
Devils deeper salsa do I have to check

115
00:04:37,080 --> 00:04:38,880
transitive salsa

116
00:04:38,880 --> 00:04:42,240
or even So within each uh software

117
00:04:42,240 --> 00:04:44,100
metadata document which of the fields

118
00:04:44,100 --> 00:04:45,960
are important which can I just safely

119
00:04:45,960 --> 00:04:48,380
ignore

120
00:04:48,660 --> 00:04:51,180
so today we are faced with an

121
00:04:51,180 --> 00:04:52,860
overwhelming amount of software supply

122
00:04:52,860 --> 00:04:54,800
chain metadata right

123
00:04:54,800 --> 00:04:58,199
and we somehow need to find meaning out

124
00:04:58,199 --> 00:05:01,380
of it and kind of like I feel like this

125
00:05:01,380 --> 00:05:03,479
this picture kind of expresses how I

126
00:05:03,479 --> 00:05:05,759
look when I see like a 300 megabyte

127
00:05:05,759 --> 00:05:10,380
s-bomb uh I that's basically not much

128
00:05:10,380 --> 00:05:12,419
that that you can make meaning out of it

129
00:05:12,419 --> 00:05:13,979
besides trying to grab through a few

130
00:05:13,979 --> 00:05:16,219
things

131
00:05:16,620 --> 00:05:18,600
um so then how do we address this

132
00:05:18,600 --> 00:05:20,580
consumption sorry how do we make sense

133
00:05:20,580 --> 00:05:24,620
of all this software metadata

134
00:05:25,259 --> 00:05:27,840
um so to recap today we've established a

135
00:05:27,840 --> 00:05:30,419
strong trust Foundation a decentralized

136
00:05:30,419 --> 00:05:33,780
flexible anchor of trust fabric

137
00:05:33,780 --> 00:05:35,639
and then we have a day on top of that

138
00:05:35,639 --> 00:05:38,000
which is at the Stations of metadata

139
00:05:38,000 --> 00:05:40,979
consisting of scheme schemas and sources

140
00:05:40,979 --> 00:05:44,520
for Rich security metadata

141
00:05:44,520 --> 00:05:47,039
so now we need to build and talk that we

142
00:05:47,039 --> 00:05:48,600
need to talk about the consumption story

143
00:05:48,600 --> 00:05:50,460
and here's the framework to think about

144
00:05:50,460 --> 00:05:53,759
then we have to add the layers and green

145
00:05:53,759 --> 00:05:56,340
hair aggregation and synthesis as well

146
00:05:56,340 --> 00:05:58,740
as policy insight to be able to convert

147
00:05:58,740 --> 00:06:02,419
them to actionable items

148
00:06:03,120 --> 00:06:04,919
um so let's talk about why exactly how

149
00:06:04,919 --> 00:06:07,520
do you say us

150
00:06:08,280 --> 00:06:09,840
so let's talk about aggregation and

151
00:06:09,840 --> 00:06:11,280
synthesis and

152
00:06:11,280 --> 00:06:13,919
and in a nutshell this is about bringing

153
00:06:13,919 --> 00:06:15,960
all the metadata together and Performing

154
00:06:15,960 --> 00:06:18,240
intelligent linking between them

155
00:06:18,240 --> 00:06:20,160
right so

156
00:06:20,160 --> 00:06:22,560
best way to illustrate this may be issue

157
00:06:22,560 --> 00:06:25,259
an example let's say you have a

158
00:06:25,259 --> 00:06:27,060
homegrown application like an Acme

159
00:06:27,060 --> 00:06:29,580
application right so first thing you

160
00:06:29,580 --> 00:06:31,979
need to do to reason about security is

161
00:06:31,979 --> 00:06:33,900
first you need to know about

162
00:06:33,900 --> 00:06:35,880
who built this application internally

163
00:06:35,880 --> 00:06:38,699
where was it built so you have to pull

164
00:06:38,699 --> 00:06:41,100
data from internal teams internal

165
00:06:41,100 --> 00:06:42,900
systems build systems Source

166
00:06:42,900 --> 00:06:45,120
repositories you need to get all the

167
00:06:45,120 --> 00:06:47,100
information in

168
00:06:47,100 --> 00:06:50,220
and as we all know we are probably using

169
00:06:50,220 --> 00:06:52,259
open source libraries in that and

170
00:06:52,259 --> 00:06:54,240
therefore the next question is like how

171
00:06:54,240 --> 00:06:56,900
do I get information about open source

172
00:06:56,900 --> 00:06:59,039
libraries and stuff like that I'm using

173
00:06:59,039 --> 00:07:00,660
and therefore we have to pull

174
00:07:00,660 --> 00:07:02,759
information for package repositories

175
00:07:02,759 --> 00:07:04,860
from the various ecosystems like Pi Pi

176
00:07:04,860 --> 00:07:06,780
ruby gems made fun Central if you're

177
00:07:06,780 --> 00:07:09,060
using Java

178
00:07:09,060 --> 00:07:10,979
and on top of that if you're using

179
00:07:10,979 --> 00:07:13,380
vendor libraries and software you will

180
00:07:13,380 --> 00:07:14,819
have to put that in and get them from

181
00:07:14,819 --> 00:07:16,680
your vendor as well

182
00:07:16,680 --> 00:07:19,560
and last but not this uh these is threat

183
00:07:19,560 --> 00:07:21,539
intelligence right given all this

184
00:07:21,539 --> 00:07:23,940
metadata I have how do I know what's

185
00:07:23,940 --> 00:07:25,740
important what do I have to check for

186
00:07:25,740 --> 00:07:28,440
what affects my security posture

187
00:07:28,440 --> 00:07:31,919
and so this includes things like CVS

188
00:07:31,919 --> 00:07:33,919
right that's the one that we are most

189
00:07:33,919 --> 00:07:36,720
commonly familiar with but now we have

190
00:07:36,720 --> 00:07:39,060
Vex and addition to that you know we

191
00:07:39,060 --> 00:07:40,860
want to kind of think a little bit

192
00:07:40,860 --> 00:07:44,460
further in terms of now I need to think

193
00:07:44,460 --> 00:07:46,740
about developers and actors of who's

194
00:07:46,740 --> 00:07:49,080
producing what in the software so that I

195
00:07:49,080 --> 00:07:51,258
chain

196
00:07:53,039 --> 00:07:55,380
by collecting all these s-bombs and

197
00:07:55,380 --> 00:07:57,000
files and putting them in a single

198
00:07:57,000 --> 00:07:58,860
directory it doesn't really do much

199
00:07:58,860 --> 00:08:02,460
right we're just ending up with um files

200
00:08:02,460 --> 00:08:05,400
um in the same directory and maybe if

201
00:08:05,400 --> 00:08:07,080
you're like really good with prep you

202
00:08:07,080 --> 00:08:09,840
can do a lot of great things with it

203
00:08:09,840 --> 00:08:11,340
um but

204
00:08:11,340 --> 00:08:13,680
I think the question here is you know we

205
00:08:13,680 --> 00:08:15,180
need to be able to link them

206
00:08:15,180 --> 00:08:17,280
intelligently and be able to perform

207
00:08:17,280 --> 00:08:19,259
queries over them

208
00:08:19,259 --> 00:08:21,660
for example if I give you a SPD access

209
00:08:21,660 --> 00:08:24,900
icon DX and the salsa file right how do

210
00:08:24,900 --> 00:08:27,180
I make a query across them how do I be

211
00:08:27,180 --> 00:08:29,039
able to reason

212
00:08:29,039 --> 00:08:31,500
um how this particular component is my

213
00:08:31,500 --> 00:08:34,860
S1 relates to this salsa document that

214
00:08:34,860 --> 00:08:38,899
has told me how it was circularly built

215
00:08:40,320 --> 00:08:42,719
so examples of projects that do

216
00:08:42,719 --> 00:08:44,720
aggregation synthesis today

217
00:08:44,720 --> 00:08:47,580
we have the graph understanding artifact

218
00:08:47,580 --> 00:08:49,260
composition that we're working on

219
00:08:49,260 --> 00:08:51,300
together with a couple other

220
00:08:51,300 --> 00:08:54,600
organizations like kusari Purdue and

221
00:08:54,600 --> 00:08:57,360
City and the idea here is to be able to

222
00:08:57,360 --> 00:08:59,880
be a take these data sources and to be

223
00:08:59,880 --> 00:09:02,519
able to link them intelligently so you

224
00:09:02,519 --> 00:09:06,120
can query them as a graph

225
00:09:06,120 --> 00:09:07,620
um and of course we have public data

226
00:09:07,620 --> 00:09:09,420
source aggregators like depths of depth

227
00:09:09,420 --> 00:09:10,920
and repology that give you information

228
00:09:10,920 --> 00:09:13,140
about open source libraries their

229
00:09:13,140 --> 00:09:15,480
security as well as licensing

230
00:09:15,480 --> 00:09:17,700
and of course you know we have package

231
00:09:17,700 --> 00:09:19,440
managers that have been you know

232
00:09:19,440 --> 00:09:21,899
silently doing the job for many years at

233
00:09:21,899 --> 00:09:25,080
uh to some regard such as Pi Pi ruby

234
00:09:25,080 --> 00:09:28,100
gems and folkat Native you know oci

235
00:09:28,100 --> 00:09:31,200
Registries and I just want to point out

236
00:09:31,200 --> 00:09:32,880
here that we we actually have a talk

237
00:09:32,880 --> 00:09:35,339
this afternoon about how we're doing the

238
00:09:35,339 --> 00:09:37,260
how we're attaching s-bombs and salsa

239
00:09:37,260 --> 00:09:40,080
attestations to oci Registries and

240
00:09:40,080 --> 00:09:41,880
there's a talk this afternoon by Brandon

241
00:09:41,880 --> 00:09:44,240
Mitchell

242
00:09:46,260 --> 00:09:49,860
so going on to the next layer now once

243
00:09:49,860 --> 00:09:51,480
you have the metadata aggregated and

244
00:09:51,480 --> 00:09:53,040
synthesized

245
00:09:53,040 --> 00:09:54,480
um we need to be able to make policies

246
00:09:54,480 --> 00:09:56,880
on that right so on one end of this of

247
00:09:56,880 --> 00:09:58,920
the coin we have you know how do we

248
00:09:58,920 --> 00:10:00,600
actually enforce these policies and I

249
00:10:00,600 --> 00:10:02,339
think we are pretty much set on that we

250
00:10:02,339 --> 00:10:05,459
have cnci projects like Kaiba no open uh

251
00:10:05,459 --> 00:10:07,980
open policy agent that can do that and

252
00:10:07,980 --> 00:10:09,480
if you're in the Enterprise you have

253
00:10:09,480 --> 00:10:11,519
your favorite ones from your government

254
00:10:11,519 --> 00:10:16,700
insurance and control and cmbb systems

255
00:10:17,360 --> 00:10:19,380
however on the other side writes the

256
00:10:19,380 --> 00:10:21,480
question you know what does it mean to

257
00:10:21,480 --> 00:10:24,600
have a circular software supply chain

258
00:10:24,600 --> 00:10:26,760
you can ask most people ask I want to

259
00:10:26,760 --> 00:10:28,380
have a policy that says containers

260
00:10:28,380 --> 00:10:30,540
running in my cluster must have a

261
00:10:30,540 --> 00:10:32,940
circuit software supply chain

262
00:10:32,940 --> 00:10:36,720
but what does that actually Translate to

263
00:10:36,720 --> 00:10:38,339
can we break it down to tangible

264
00:10:38,339 --> 00:10:40,440
questions that we can tackle

265
00:10:40,440 --> 00:10:42,120
are we talking about vulnerabilities

266
00:10:42,120 --> 00:10:46,200
build provenance tooling Developers

267
00:10:46,200 --> 00:10:47,760
how many years of transitive

268
00:10:47,760 --> 00:10:49,500
dependencies do we care about

269
00:10:49,500 --> 00:10:52,079
how do we reason about trusts and risks

270
00:10:52,079 --> 00:10:54,300
and policy

271
00:10:54,300 --> 00:10:56,220
and these are largely unanswered

272
00:10:56,220 --> 00:10:58,740
questions and tax security is starting

273
00:10:58,740 --> 00:11:01,620
an effort to Rally the industry on

274
00:11:01,620 --> 00:11:03,779
defining what good looks like for

275
00:11:03,779 --> 00:11:06,120
software supply chain policy

276
00:11:06,120 --> 00:11:09,180
so this is undergoing as part of the

277
00:11:09,180 --> 00:11:10,860
supply chain working group that meets

278
00:11:10,860 --> 00:11:13,459
every Thursday

279
00:11:15,899 --> 00:11:18,420
so some kind of questions we'll be

280
00:11:18,420 --> 00:11:20,940
exploring in the group is various

281
00:11:20,940 --> 00:11:23,220
policies I think they they kind of break

282
00:11:23,220 --> 00:11:25,440
down into three main categories we have

283
00:11:25,440 --> 00:11:28,860
reactive preventative and proactive so

284
00:11:28,860 --> 00:11:31,740
reactive is kind of like you log4j we

285
00:11:31,740 --> 00:11:33,420
talked about the open SSL on

286
00:11:33,420 --> 00:11:35,459
vulnerability this morning you know

287
00:11:35,459 --> 00:11:37,200
there's a new hot vulnerability that's

288
00:11:37,200 --> 00:11:40,620
out question one is am I affected

289
00:11:40,620 --> 00:11:42,779
and then we go ahead to say how am I

290
00:11:42,779 --> 00:11:44,100
affected which software is being

291
00:11:44,100 --> 00:11:46,980
affected and then how can I go about to

292
00:11:46,980 --> 00:11:50,279
remediate and draw my entire

293
00:11:50,279 --> 00:11:52,920
organization

294
00:11:52,920 --> 00:11:55,860
and we have preventive policies let's

295
00:11:55,860 --> 00:11:57,300
say you know I want to be able to check

296
00:11:57,300 --> 00:11:59,279
if software hits a compliance

297
00:11:59,279 --> 00:12:01,200
requirement before deploying into my

298
00:12:01,200 --> 00:12:03,660
cluster this consists not only of

299
00:12:03,660 --> 00:12:05,519
measures like vulnerability scanning or

300
00:12:05,519 --> 00:12:08,279
fuzzing but we also want to include

301
00:12:08,279 --> 00:12:10,680
organization claims and certification on

302
00:12:10,680 --> 00:12:13,019
software for example you know certifying

303
00:12:13,019 --> 00:12:14,519
for prod certifying that certain

304
00:12:14,519 --> 00:12:16,500
departments only can run software on

305
00:12:16,500 --> 00:12:19,279
certain clusters

306
00:12:20,000 --> 00:12:23,399
and finally we have what what we call

307
00:12:23,399 --> 00:12:26,279
Proactive policies and

308
00:12:26,279 --> 00:12:28,560
um this is somewhat a little bit more

309
00:12:28,560 --> 00:12:30,480
unexplored but it's trying to identify

310
00:12:30,480 --> 00:12:32,940
you know the next log 4J before it

311
00:12:32,940 --> 00:12:34,380
happens

312
00:12:34,380 --> 00:12:36,120
um for those that are familiar with the

313
00:12:36,120 --> 00:12:38,820
xkcd comic basically we are trying to

314
00:12:38,820 --> 00:12:40,980
find the underpinning libraries that are

315
00:12:40,980 --> 00:12:43,079
critical to our open source

316
00:12:43,079 --> 00:12:45,739
infrastructure

317
00:12:46,139 --> 00:12:47,760
um so there's some priority out here for

318
00:12:47,760 --> 00:12:50,600
example the open ssf criticalities cost

319
00:12:50,600 --> 00:12:53,279
however as we've seen with on the log

320
00:12:53,279 --> 00:12:57,540
for JS log for Shell case is critical

321
00:12:57,540 --> 00:12:59,459
these scores are only one part of the

322
00:12:59,459 --> 00:13:02,339
picture and that definitely are more

323
00:13:02,339 --> 00:13:04,800
Matrix and more analysis and policies

324
00:13:04,800 --> 00:13:07,260
that we can make in order to be more

325
00:13:07,260 --> 00:13:09,240
proactive and finding these before it

326
00:13:09,240 --> 00:13:11,480
happens

327
00:13:13,079 --> 00:13:15,360
so in conclusion we've made a lot of

328
00:13:15,360 --> 00:13:16,800
good progress in the world producing

329
00:13:16,800 --> 00:13:19,500
good software supply chain security we

330
00:13:19,500 --> 00:13:22,079
need to start making uh easy to consume

331
00:13:22,079 --> 00:13:24,899
what we've built tech security has many

332
00:13:24,899 --> 00:13:26,760
efforts I do encourage everyone to drop

333
00:13:26,760 --> 00:13:28,079
by

334
00:13:28,079 --> 00:13:30,000
um to to have a chat with us and get

335
00:13:30,000 --> 00:13:31,200
involved

336
00:13:31,200 --> 00:13:33,180
and we also have a couple of talks

337
00:13:33,180 --> 00:13:34,519
happening today

338
00:13:34,519 --> 00:13:36,779
besides the one that I mentioned we also

339
00:13:36,779 --> 00:13:38,940
have not all that sign is secure

340
00:13:38,940 --> 00:13:40,500
verified the right way with tough and

341
00:13:40,500 --> 00:13:43,019
six stall and spicy and container image

342
00:13:43,019 --> 00:13:46,579
security with salsa and go out today

343
00:13:46,579 --> 00:13:49,680
so with that I hope to be able to come

344
00:13:49,680 --> 00:13:51,720
back to the next Colony the security con

345
00:13:51,720 --> 00:13:54,720
and see policy and aggregation and

346
00:13:54,720 --> 00:13:56,820
synthesis fixtures kind of be filled up

347
00:13:56,820 --> 00:13:58,980
with many more projects and Community

348
00:13:58,980 --> 00:14:00,600
efforts

349
00:14:00,600 --> 00:14:02,670
so with that thank you very much

350
00:14:02,670 --> 00:14:08,360
[Applause]

