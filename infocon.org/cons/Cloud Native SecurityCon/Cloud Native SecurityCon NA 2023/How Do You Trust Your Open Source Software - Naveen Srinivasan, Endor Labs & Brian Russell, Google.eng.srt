1
00:00:02,000 --> 00:00:04,740
I work at indoor Labs we are a supply

2
00:00:04,740 --> 00:00:06,899
chain security startup

3
00:00:06,899 --> 00:00:10,019
um I am also an open source contributor

4
00:00:10,019 --> 00:00:12,179
and a maintainer I contribute a few open

5
00:00:12,179 --> 00:00:14,759
source supply chain security projects at

6
00:00:14,759 --> 00:00:16,859
the moment uh I am one of the

7
00:00:16,859 --> 00:00:19,380
maintainers of scorecard with us talk

8
00:00:19,380 --> 00:00:20,699
about Brian

9
00:00:20,699 --> 00:00:23,039
all right I'm Brian Russell I'm on

10
00:00:23,039 --> 00:00:25,320
Google's open source security team I'm a

11
00:00:25,320 --> 00:00:27,960
product manager there and I work a lot

12
00:00:27,960 --> 00:00:30,060
with the scorecards project

13
00:00:30,060 --> 00:00:32,700
so today

14
00:00:32,700 --> 00:00:34,380
we wanted to just start with the problem

15
00:00:34,380 --> 00:00:37,920
that scorecards is really setting out to

16
00:00:37,920 --> 00:00:39,620
try to help solve

17
00:00:39,620 --> 00:00:42,360
and if we look at this diagram that

18
00:00:42,360 --> 00:00:45,200
comes courtesy of xkcd

19
00:00:45,200 --> 00:00:47,820
what we start to see here

20
00:00:47,820 --> 00:00:50,460
is a representation of of what modern

21
00:00:50,460 --> 00:00:52,800
digital infrastructure looks like

22
00:00:52,800 --> 00:00:55,800
if you peel back the veneer of of almost

23
00:00:55,800 --> 00:00:59,100
anyone's you know end product you start

24
00:00:59,100 --> 00:01:00,120
to see

25
00:01:00,120 --> 00:01:02,820
a real hodgepodge of different shapes

26
00:01:02,820 --> 00:01:05,040
and sizes of the dependencies that that

27
00:01:05,040 --> 00:01:07,320
an organization has taken on over the

28
00:01:07,320 --> 00:01:10,260
years or taken on just by adding one

29
00:01:10,260 --> 00:01:12,479
dependency and getting that cascading

30
00:01:12,479 --> 00:01:14,880
set of dependencies behind it

31
00:01:14,880 --> 00:01:17,880
and you know we we don't have a lot of

32
00:01:17,880 --> 00:01:22,200
insight into exactly how strong or or

33
00:01:22,200 --> 00:01:24,960
weak some of these dependencies are and

34
00:01:24,960 --> 00:01:28,320
how well maintained they are uh you know

35
00:01:28,320 --> 00:01:29,640
there's a there's a lot of different

36
00:01:29,640 --> 00:01:31,740
concerns that could come out of this but

37
00:01:31,740 --> 00:01:35,340
when it comes specifically to security

38
00:01:35,340 --> 00:01:36,900
you know we we don't have a lot of

39
00:01:36,900 --> 00:01:39,540
insight and we'd like to have some uh we

40
00:01:39,540 --> 00:01:42,000
want to know on top of how big and small

41
00:01:42,000 --> 00:01:45,240
these These dependencies are we actually

42
00:01:45,240 --> 00:01:46,860
want to know are these safe or not

43
00:01:46,860 --> 00:01:50,640
because even the smallest one uh that we

44
00:01:50,640 --> 00:01:54,180
have is a concern to us

45
00:01:54,180 --> 00:01:56,159
so imagine you know if we could start

46
00:01:56,159 --> 00:01:57,780
looking at this and start getting a

47
00:01:57,780 --> 00:01:59,700
little bit of extra information about

48
00:01:59,700 --> 00:02:02,399
some of these dependencies imagine if we

49
00:02:02,399 --> 00:02:05,880
had numbers like these that gave us a

50
00:02:05,880 --> 00:02:08,580
sense of this dependency is in a really

51
00:02:08,580 --> 00:02:10,919
good State its maintainers care a lot

52
00:02:10,919 --> 00:02:12,540
about security

53
00:02:12,540 --> 00:02:15,540
they are really trying their best to

54
00:02:15,540 --> 00:02:17,099
make sure they follow just good

55
00:02:17,099 --> 00:02:18,660
principles and good development

56
00:02:18,660 --> 00:02:21,480
practices versus here's some projects

57
00:02:21,480 --> 00:02:23,220
that that actually aren't doing that at

58
00:02:23,220 --> 00:02:25,080
all and then you know here's some

59
00:02:25,080 --> 00:02:26,400
projects that maybe they're trying but

60
00:02:26,400 --> 00:02:28,440
they've still got a little ways to go

61
00:02:28,440 --> 00:02:31,080
just having that sort of insight starts

62
00:02:31,080 --> 00:02:33,780
opening up the world to us in terms of

63
00:02:33,780 --> 00:02:36,060
what decisions we want to make what we

64
00:02:36,060 --> 00:02:37,620
should do with these dependencies how we

65
00:02:37,620 --> 00:02:39,420
can take on

66
00:02:39,420 --> 00:02:43,019
um kind of different different pieces

67
00:02:43,019 --> 00:02:47,760
so enter in openssf scorecards we are

68
00:02:47,760 --> 00:02:51,540
seeking to add that extra information to

69
00:02:51,540 --> 00:02:53,640
all of these open source projects and

70
00:02:53,640 --> 00:02:55,800
dependencies that that are being taken

71
00:02:55,800 --> 00:02:59,040
on this is an example of what what one

72
00:02:59,040 --> 00:03:01,379
looks like some of you are likely

73
00:03:01,379 --> 00:03:02,940
familiar with it and some of you might

74
00:03:02,940 --> 00:03:05,519
not be I'll spend it just a little bit

75
00:03:05,519 --> 00:03:07,739
of time explaining what we're looking at

76
00:03:07,739 --> 00:03:10,680
what we see here is an overall score and

77
00:03:10,680 --> 00:03:13,099
we have a number of different checks

78
00:03:13,099 --> 00:03:16,019
that scorecard is looking at

79
00:03:16,019 --> 00:03:19,920
to determine whether or not a project is

80
00:03:19,920 --> 00:03:21,540
being maintained in a way that's

81
00:03:21,540 --> 00:03:24,440
considered secure

82
00:03:25,260 --> 00:03:27,300
so without going through each and every

83
00:03:27,300 --> 00:03:29,580
check line by line I did just want to

84
00:03:29,580 --> 00:03:31,560
take a couple of examples and take a

85
00:03:31,560 --> 00:03:33,300
look at what these really mean so if we

86
00:03:33,300 --> 00:03:36,000
look at the first one you know we have a

87
00:03:36,000 --> 00:03:38,220
check for binary artifacts that is you

88
00:03:38,220 --> 00:03:40,500
know is this project storing binaries

89
00:03:40,500 --> 00:03:43,799
and therefore obfuscated source code in

90
00:03:43,799 --> 00:03:46,140
the project or can we see all of the

91
00:03:46,140 --> 00:03:47,519
source code that's that's in a

92
00:03:47,519 --> 00:03:48,920
particular project

93
00:03:48,920 --> 00:03:51,780
with each check if you look at the table

94
00:03:51,780 --> 00:03:53,940
that's on the project page and I hope

95
00:03:53,940 --> 00:03:56,700
you all visit it after this talk we go

96
00:03:56,700 --> 00:03:58,620
through each and every check

97
00:03:58,620 --> 00:04:03,060
that we provide in scorecards and

98
00:04:03,060 --> 00:04:05,159
in there you'll see you know what it is

99
00:04:05,159 --> 00:04:07,560
a little bit more information about it a

100
00:04:07,560 --> 00:04:10,620
risk level in terms of is this a serious

101
00:04:10,620 --> 00:04:13,439
risk if if a project is not adhering to

102
00:04:13,439 --> 00:04:14,180
it

103
00:04:14,180 --> 00:04:16,798
and then the amount of access that's

104
00:04:16,798 --> 00:04:18,478
required which I'll get to in just a

105
00:04:18,478 --> 00:04:20,699
second in terms of how a scorecard

106
00:04:20,699 --> 00:04:22,199
gathering this information it needs

107
00:04:22,199 --> 00:04:24,479
certain levels of access to determine it

108
00:04:24,479 --> 00:04:26,340
and then just any other notes that that

109
00:04:26,340 --> 00:04:27,900
might be beneficial to know when it

110
00:04:27,900 --> 00:04:29,759
comes to those checks

111
00:04:29,759 --> 00:04:32,639
uh so that brings me to well how is how

112
00:04:32,639 --> 00:04:35,040
is the scorecard generated it's not

113
00:04:35,040 --> 00:04:37,560
people manually filling out surveys and

114
00:04:37,560 --> 00:04:39,840
trying to score themselves this is all

115
00:04:39,840 --> 00:04:42,600
done programmatically we're using

116
00:04:42,600 --> 00:04:45,780
github's apis uh to basically bring that

117
00:04:45,780 --> 00:04:48,060
data in and to score it

118
00:04:48,060 --> 00:04:49,860
and

119
00:04:49,860 --> 00:04:51,419
we can do that in a couple of different

120
00:04:51,419 --> 00:04:53,940
ways right now we have a GitHub action

121
00:04:53,940 --> 00:04:56,120
that if you're an individual project

122
00:04:56,120 --> 00:04:59,220
that is interested in maintaining a

123
00:04:59,220 --> 00:05:02,419
scorecard and using that to help inform

124
00:05:02,419 --> 00:05:04,800
security decisions that you're trying to

125
00:05:04,800 --> 00:05:05,699
make

126
00:05:05,699 --> 00:05:08,160
you can run that as just part of every

127
00:05:08,160 --> 00:05:10,800
other GitHub action check that you would

128
00:05:10,800 --> 00:05:11,820
run

129
00:05:11,820 --> 00:05:13,979
there's also a way to just run this as a

130
00:05:13,979 --> 00:05:15,780
command line tool you can run it locally

131
00:05:15,780 --> 00:05:17,639
it will still end up calling those

132
00:05:17,639 --> 00:05:20,220
GitHub apis to gather that data so

133
00:05:20,220 --> 00:05:22,259
there's not manual assertions that are

134
00:05:22,259 --> 00:05:23,759
feeding into it it's all done

135
00:05:23,759 --> 00:05:26,720
programmatically

136
00:05:27,780 --> 00:05:30,479
so just to give folks a sense of where

137
00:05:30,479 --> 00:05:32,699
this project is today

138
00:05:32,699 --> 00:05:33,600
um

139
00:05:33,600 --> 00:05:36,960
it lives within the open ssf and we've

140
00:05:36,960 --> 00:05:39,180
had over a thousand installs of just the

141
00:05:39,180 --> 00:05:40,639
GitHub action

142
00:05:40,639 --> 00:05:43,560
we're seeing an increased number of

143
00:05:43,560 --> 00:05:44,699
people that are watching the project

144
00:05:44,699 --> 00:05:48,060
working at starring it our goal right

145
00:05:48,060 --> 00:05:50,699
now is to continue to put those Trends

146
00:05:50,699 --> 00:05:52,800
on the on the positive

147
00:05:52,800 --> 00:05:55,440
and just keep the momentum going that

148
00:05:55,440 --> 00:05:58,340
we've started to see

149
00:05:58,919 --> 00:06:01,800
we have had some some mentions and some

150
00:06:01,800 --> 00:06:03,300
adoption also at the organizational

151
00:06:03,300 --> 00:06:04,620
level

152
00:06:04,620 --> 00:06:06,720
um Eclipse has been using this as a tool

153
00:06:06,720 --> 00:06:08,820
to start looking at how different

154
00:06:08,820 --> 00:06:10,259
projects can

155
00:06:10,259 --> 00:06:13,560
make some security improvements uh Envoy

156
00:06:13,560 --> 00:06:15,360
did some piloting and has been giving

157
00:06:15,360 --> 00:06:17,880
feedback working with the openssf to

158
00:06:17,880 --> 00:06:19,680
improve scorecards

159
00:06:19,680 --> 00:06:22,139
and sonotype included

160
00:06:22,139 --> 00:06:24,600
scorecards in its annual state of

161
00:06:24,600 --> 00:06:26,520
software supply chain report and I'll

162
00:06:26,520 --> 00:06:30,620
dig into what they said in just a second

163
00:06:30,840 --> 00:06:33,360
now since this is a cncf event we

164
00:06:33,360 --> 00:06:36,060
thought we would mention how the cncf is

165
00:06:36,060 --> 00:06:38,880
using scorecards right now and thanks to

166
00:06:38,880 --> 00:06:41,039
Chris for for giving us just a quick

167
00:06:41,039 --> 00:06:43,259
quote on how things are being used today

168
00:06:43,259 --> 00:06:45,600
you know scorecards is being used as a

169
00:06:45,600 --> 00:06:46,680
tool

170
00:06:46,680 --> 00:06:48,960
to look at different cncf projects to

171
00:06:48,960 --> 00:06:51,660
help improve that security posture and

172
00:06:51,660 --> 00:06:53,819
it's being used in at least one

173
00:06:53,819 --> 00:06:56,880
competition as just an indicator of of

174
00:06:56,880 --> 00:07:00,139
good security practices

175
00:07:01,199 --> 00:07:04,259
so I encourage you to read sonotypes

176
00:07:04,259 --> 00:07:06,300
annual state of software supply chain

177
00:07:06,300 --> 00:07:09,259
report in it there's a specific section

178
00:07:09,259 --> 00:07:12,900
looking at what are good indicators of a

179
00:07:12,900 --> 00:07:15,180
Project's likelihood of being vulnerable

180
00:07:15,180 --> 00:07:16,560
over time

181
00:07:16,560 --> 00:07:19,139
when scorecards was included in this

182
00:07:19,139 --> 00:07:21,419
study it was shown to have

183
00:07:21,419 --> 00:07:25,860
good potential in terms of indicating

184
00:07:25,860 --> 00:07:28,259
whether or not a project if following

185
00:07:28,259 --> 00:07:30,360
these best practices was going to incur

186
00:07:30,360 --> 00:07:33,259
some sort of vulnerabilities over time

187
00:07:33,259 --> 00:07:35,520
sonotype went further

188
00:07:35,520 --> 00:07:38,099
and broke down scorecards into a check

189
00:07:38,099 --> 00:07:41,759
by check basis which you can see there's

190
00:07:41,759 --> 00:07:44,699
some some correlation between certain

191
00:07:44,699 --> 00:07:46,740
checks provide better indicators than

192
00:07:46,740 --> 00:07:47,699
others

193
00:07:47,699 --> 00:07:50,039
but again I encourage you just to take a

194
00:07:50,039 --> 00:07:51,780
look at the report it goes into a lot

195
00:07:51,780 --> 00:07:55,638
more detail than we have time to today

196
00:07:56,699 --> 00:07:59,160
so we'll jump into a demo in just a

197
00:07:59,160 --> 00:08:00,780
second but

198
00:08:00,780 --> 00:08:02,520
I wanted to give a sense of kind of

199
00:08:02,520 --> 00:08:04,800
what's existing what's new in terms of

200
00:08:04,800 --> 00:08:07,460
major features for scorecard

201
00:08:07,460 --> 00:08:10,440
we originally uh

202
00:08:10,440 --> 00:08:12,479
launched and then added a GitHub action

203
00:08:12,479 --> 00:08:14,759
that does exactly what I mentioned

204
00:08:14,759 --> 00:08:18,660
before it's checking projects scores

205
00:08:18,660 --> 00:08:21,360
really on a regular basis as many times

206
00:08:21,360 --> 00:08:23,039
as you've set it up to trigger for my

207
00:08:23,039 --> 00:08:24,780
GitHub action perspective

208
00:08:24,780 --> 00:08:29,220
and we've also created basically a

209
00:08:29,220 --> 00:08:32,279
weekly scanned Cron job of gathering

210
00:08:32,279 --> 00:08:35,520
scores for the top million projects that

211
00:08:35,520 --> 00:08:37,320
was originally bootstrapped on some

212
00:08:37,320 --> 00:08:39,440
infrastructure that is undergoing some

213
00:08:39,440 --> 00:08:41,760
improvements at the moment so some of

214
00:08:41,760 --> 00:08:44,520
those scores are stale as of December

215
00:08:44,520 --> 00:08:46,380
but we're working on launching an

216
00:08:46,380 --> 00:08:48,180
improvement that will basically get

217
00:08:48,180 --> 00:08:49,380
those updated

218
00:08:49,380 --> 00:08:52,500
any scores that are running the GitHub

219
00:08:52,500 --> 00:08:54,899
action are also pushing their data into

220
00:08:54,899 --> 00:08:57,120
that same repo so those are all up to

221
00:08:57,120 --> 00:08:59,100
date so if you're using scorecard

222
00:08:59,100 --> 00:09:02,220
as an action uh you can you can be

223
00:09:02,220 --> 00:09:04,080
assured that the API that we're about to

224
00:09:04,080 --> 00:09:05,580
talk about is is reflecting the most

225
00:09:05,580 --> 00:09:08,600
up-to-date data

226
00:09:09,959 --> 00:09:11,760
so without further Ado I'll hand this

227
00:09:11,760 --> 00:09:13,860
over to Naveen to talk about what the

228
00:09:13,860 --> 00:09:15,300
API looks like

229
00:09:15,300 --> 00:09:16,680
thanks Brian

230
00:09:16,680 --> 00:09:17,339
um

231
00:09:17,339 --> 00:09:19,980
why did we build scorecards API

232
00:09:19,980 --> 00:09:22,200
um like Brian mentioned

233
00:09:22,200 --> 00:09:25,080
um we we've been running scorecard for a

234
00:09:25,080 --> 00:09:27,839
million repositories for a little more

235
00:09:27,839 --> 00:09:30,060
than a year and all of this data is

236
00:09:30,060 --> 00:09:32,339
available free for everyone using

237
00:09:32,339 --> 00:09:35,940
bigquery and we spoke to a few customers

238
00:09:35,940 --> 00:09:38,580
and not everybody wanted to use bigquery

239
00:09:38,580 --> 00:09:41,160
they wanted a standard HTTP endpoint

240
00:09:41,160 --> 00:09:45,120
which they can use to get this data

241
00:09:45,120 --> 00:09:47,580
so that was the motivation to use the

242
00:09:47,580 --> 00:09:49,920
build the scorecard API

243
00:09:49,920 --> 00:09:54,839
standard HTTP API with rest endpoint you

244
00:09:54,839 --> 00:09:57,300
can hit the API at API dot security

245
00:09:57,300 --> 00:09:59,220
scorecards.dev

246
00:09:59,220 --> 00:10:03,480
and we also made sure that the API is

247
00:10:03,480 --> 00:10:05,160
predictable like you can see here

248
00:10:05,160 --> 00:10:08,580
because it is a cncf conference we

249
00:10:08,580 --> 00:10:10,980
tagged in kubernetes kubernetes so you

250
00:10:10,980 --> 00:10:14,040
can take the detail and and replace that

251
00:10:14,040 --> 00:10:16,620
with whatever project you want as long

252
00:10:16,620 --> 00:10:18,779
as the data is available like like Brian

253
00:10:18,779 --> 00:10:21,060
mentioned if you have a million 1.2

254
00:10:21,060 --> 00:10:22,980
million repository that we scan and you

255
00:10:22,980 --> 00:10:24,959
should be able to get that

256
00:10:24,959 --> 00:10:28,620
and second and another critical thing we

257
00:10:28,620 --> 00:10:31,800
don't have any tokens you don't need any

258
00:10:31,800 --> 00:10:35,760
tokens with this API this is served as a

259
00:10:35,760 --> 00:10:37,860
public good instance for people to come

260
00:10:37,860 --> 00:10:39,420
and get this data

261
00:10:39,420 --> 00:10:42,120
um another another thing

262
00:10:42,120 --> 00:10:44,519
we are not throttling any of the API

263
00:10:44,519 --> 00:10:49,579
requests so please don't DDOS this

264
00:10:51,720 --> 00:10:53,279
uh

265
00:10:53,279 --> 00:10:57,420
like I said um this API has a get and a

266
00:10:57,420 --> 00:10:58,380
post

267
00:10:58,380 --> 00:11:01,260
um but I'm going to talk about get at

268
00:11:01,260 --> 00:11:02,399
the moment

269
00:11:02,399 --> 00:11:06,180
um this will be if you go hit this API

270
00:11:06,180 --> 00:11:09,120
for whatever project is it will be it'll

271
00:11:09,120 --> 00:11:11,880
give out a Json document similar to what

272
00:11:11,880 --> 00:11:16,380
Brian showed as a scores being in a

273
00:11:16,380 --> 00:11:17,700
table format but I'll give it a Json

274
00:11:17,700 --> 00:11:19,019
document so anybody should be able to

275
00:11:19,019 --> 00:11:21,560
utilize this

276
00:11:21,600 --> 00:11:25,920
we launched this API in last fall we are

277
00:11:25,920 --> 00:11:28,200
seeing about 85 000 to 100 000 requests

278
00:11:28,200 --> 00:11:30,720
every day we see this trend only going

279
00:11:30,720 --> 00:11:33,779
up so that's the little bit of update

280
00:11:33,779 --> 00:11:35,700
people are adopting

281
00:11:35,700 --> 00:11:38,700
that goes on to the next one who's using

282
00:11:38,700 --> 00:11:40,260
the API

283
00:11:40,260 --> 00:11:41,820
to be honest we don't know who's using

284
00:11:41,820 --> 00:11:44,339
the API uh if any of you are using the

285
00:11:44,339 --> 00:11:47,940
API please come and update or read me uh

286
00:11:47,940 --> 00:11:49,620
there was one person who came and asked

287
00:11:49,620 --> 00:11:52,260
us who was using uh like the API weight

288
00:11:52,260 --> 00:11:55,500
limit and we got to know from that uh

289
00:11:55,500 --> 00:11:57,480
looking at that person that person is

290
00:11:57,480 --> 00:11:59,279
from a university in in Germany who's

291
00:11:59,279 --> 00:12:02,300
trying to use the API

292
00:12:03,240 --> 00:12:04,740
okay

293
00:12:04,740 --> 00:12:07,200
all of this is great but how can how can

294
00:12:07,200 --> 00:12:10,740
this API be useful what can it do

295
00:12:10,740 --> 00:12:12,899
what you're seeing right now is

296
00:12:12,899 --> 00:12:15,480
um the code review for code review data

297
00:12:15,480 --> 00:12:19,560
over a span of year of top thousand

298
00:12:19,560 --> 00:12:21,180
critical projects

299
00:12:21,180 --> 00:12:24,420
how do we come up with top thousand

300
00:12:24,420 --> 00:12:25,800
um we didn't come up with that there's

301
00:12:25,800 --> 00:12:28,200
another open openss project called

302
00:12:28,200 --> 00:12:32,399
criticality score and it and that

303
00:12:32,399 --> 00:12:35,339
project's primary motive is to take

304
00:12:35,339 --> 00:12:38,220
I could be wrong 100 000 projects and

305
00:12:38,220 --> 00:12:39,240
decide

306
00:12:39,240 --> 00:12:41,399
and give it a score between zero to one

307
00:12:41,399 --> 00:12:44,700
and the algorithm for that was

308
00:12:44,700 --> 00:12:46,980
um was based on by Rob Pike's algorithm

309
00:12:46,980 --> 00:12:49,620
and we used that data

310
00:12:49,620 --> 00:12:51,779
we want to shout out to them that the

311
00:12:51,779 --> 00:12:54,000
data is available free so anybody can go

312
00:12:54,000 --> 00:12:55,920
pull the data

313
00:12:55,920 --> 00:12:58,320
um so we use that data

314
00:12:58,320 --> 00:13:01,740
use scorecards API to say now pull the

315
00:13:01,740 --> 00:13:04,560
data and show us how the top thousand

316
00:13:04,560 --> 00:13:06,300
clinical projects are doing looks like

317
00:13:06,300 --> 00:13:08,339
most of them are doing well

318
00:13:08,339 --> 00:13:10,740
there are few places that require need

319
00:13:10,740 --> 00:13:13,100
some help

320
00:13:14,459 --> 00:13:16,680
um another check that we said is

321
00:13:16,680 --> 00:13:19,200
are they are they able to do binary

322
00:13:19,200 --> 00:13:20,639
artifacts how many of them have binary

323
00:13:20,639 --> 00:13:22,019
artifacts within the top thousand

324
00:13:22,019 --> 00:13:23,639
critical projects looks like most of

325
00:13:23,639 --> 00:13:25,680
them don't have probably TNT but of them

326
00:13:25,680 --> 00:13:26,519
have

327
00:13:26,519 --> 00:13:27,360
um

328
00:13:27,360 --> 00:13:29,399
why are we doing this

329
00:13:29,399 --> 00:13:32,399
this is essentially to go back and help

330
00:13:32,399 --> 00:13:34,680
the critical projects and tell them how

331
00:13:34,680 --> 00:13:37,680
they can fix and there are a lot of

332
00:13:37,680 --> 00:13:39,300
people from

333
00:13:39,300 --> 00:13:40,980
within the community of helping doing

334
00:13:40,980 --> 00:13:42,060
this

335
00:13:42,060 --> 00:13:43,380
also

336
00:13:43,380 --> 00:13:45,300
if we can use for the open source

337
00:13:45,300 --> 00:13:47,100
projects

338
00:13:47,100 --> 00:13:49,320
all of us can use for our own Enterprise

339
00:13:49,320 --> 00:13:50,940
Solutions any other things that we're

340
00:13:50,940 --> 00:13:54,980
doing this API is available for that

341
00:13:55,500 --> 00:13:56,940
okay

342
00:13:56,940 --> 00:13:59,100
enough with all dark show me the code

343
00:13:59,100 --> 00:14:00,240
okay

344
00:14:00,240 --> 00:14:02,940
um so I decided it's not nice if we

345
00:14:02,940 --> 00:14:06,320
don't show what the code is all about so

346
00:14:06,320 --> 00:14:09,180
here's like I mentioned

347
00:14:09,180 --> 00:14:10,980
here is the piece of code this is

348
00:14:10,980 --> 00:14:13,399
written go this is a sample code

349
00:14:13,399 --> 00:14:16,260
that I was shared with where this code

350
00:14:16,260 --> 00:14:19,139
is hosted this code what you're seeing

351
00:14:19,139 --> 00:14:21,660
right now is this is written go I'm

352
00:14:21,660 --> 00:14:23,339
familiar with go scorecard has written

353
00:14:23,339 --> 00:14:24,899
go so but you should be able to use any

354
00:14:24,899 --> 00:14:27,839
modern programming language to go query

355
00:14:27,839 --> 00:14:30,000
this data so what you're seeing here is

356
00:14:30,000 --> 00:14:32,399
this is the meat of the code that goes

357
00:14:32,399 --> 00:14:34,800
and gets that hits that API like I

358
00:14:34,800 --> 00:14:36,899
promised does not have any tokens any of

359
00:14:36,899 --> 00:14:40,019
that goes and hits that API gets a data

360
00:14:40,019 --> 00:14:43,560
and unmarshalls to a struct that's the

361
00:14:43,560 --> 00:14:45,720
that's the code here

362
00:14:45,720 --> 00:14:49,139
and if I go on to the top over here I

363
00:14:49,139 --> 00:14:51,600
take the Thousand critical projects I

364
00:14:51,600 --> 00:14:53,579
use some go magic to concretely go hit

365
00:14:53,579 --> 00:14:56,040
the API and it should be able to get the

366
00:14:56,040 --> 00:14:58,740
data I'm not going to run this I'm not

367
00:14:58,740 --> 00:15:00,779
I'm a little scared of the demo Gods I

368
00:15:00,779 --> 00:15:02,579
it might not work so I'm not going to

369
00:15:02,579 --> 00:15:06,859
run this moment but that's it

370
00:15:09,120 --> 00:15:12,000
uh the code is available in this

371
00:15:12,000 --> 00:15:13,920
repository it's my personal repository

372
00:15:13,920 --> 00:15:16,139
uh it's not part of up it's not an

373
00:15:16,139 --> 00:15:17,940
opennesses of anything anybody should be

374
00:15:17,940 --> 00:15:21,620
able to code for clone and use this

375
00:15:22,740 --> 00:15:25,440
let's talk about the usefulness

376
00:15:25,440 --> 00:15:27,360
yeah so we we thought we would just kind

377
00:15:27,360 --> 00:15:29,760
of act out a scenario here uh in which

378
00:15:29,760 --> 00:15:32,100
Naveen is going to be a contributor to

379
00:15:32,100 --> 00:15:34,500
an open source project and I am a

380
00:15:34,500 --> 00:15:36,660
maintainer and I care quite a bit about

381
00:15:36,660 --> 00:15:39,720
security so uh I'm gonna have a little

382
00:15:39,720 --> 00:15:41,600
chat

383
00:15:41,600 --> 00:15:44,279
Brian I want to submit a PR with the new

384
00:15:44,279 --> 00:15:45,240
divinity

385
00:15:45,240 --> 00:15:48,540
so I think that's a great idea uh but

386
00:15:48,540 --> 00:15:50,100
I'm really concerned about if this

387
00:15:50,100 --> 00:15:52,320
dependency is healthy can you talk about

388
00:15:52,320 --> 00:15:53,880
that

389
00:15:53,880 --> 00:15:56,040
would score god be helpful Brian

390
00:15:56,040 --> 00:15:58,320
uh

391
00:15:58,320 --> 00:16:00,600
uh I'm not sure what that is

392
00:16:00,600 --> 00:16:02,880
have you checked out the scorecard's

393
00:16:02,880 --> 00:16:04,500
repo

394
00:16:04,500 --> 00:16:08,760
well uh actually now that I have this is

395
00:16:08,760 --> 00:16:10,800
really great in fact I think I'm going

396
00:16:10,800 --> 00:16:12,839
to use this API for checking all my

397
00:16:12,839 --> 00:16:15,060
future dependencies

398
00:16:15,060 --> 00:16:16,620
in fact I think I'm going to go further

399
00:16:16,620 --> 00:16:18,660
I'm going to use this in my CI CD

400
00:16:18,660 --> 00:16:20,399
workflow as well

401
00:16:20,399 --> 00:16:22,459
it's just so easy to use

402
00:16:22,459 --> 00:16:25,199
and why doesn't everyone use this at

403
00:16:25,199 --> 00:16:27,060
this point

404
00:16:27,060 --> 00:16:29,040
so these are these are the kinds of

405
00:16:29,040 --> 00:16:31,019
questions hopefully conversations that

406
00:16:31,019 --> 00:16:34,440
we'll uh we'll be seeing a scorecard

407
00:16:34,440 --> 00:16:35,579
so

408
00:16:35,579 --> 00:16:38,100
My Demo uh

409
00:16:38,100 --> 00:16:41,040
is going to be equally unambitious I am

410
00:16:41,040 --> 00:16:44,279
going to just walk through a quick run

411
00:16:44,279 --> 00:16:46,199
through of how easy it is to add open

412
00:16:46,199 --> 00:16:48,839
ssf scorecard badges so here's an

413
00:16:48,839 --> 00:16:50,279
example of what you can expect to see

414
00:16:50,279 --> 00:16:52,740
it's a pretty standard looking badge on

415
00:16:52,740 --> 00:16:55,019
a GitHub readme when it comes to

416
00:16:55,019 --> 00:16:57,240
actually adding this in

417
00:16:57,240 --> 00:17:00,060
kind of narrate What's Happening Here

418
00:17:00,060 --> 00:17:02,100
you can just go to the openssf

419
00:17:02,100 --> 00:17:04,619
scorecards GitHub page there's a

420
00:17:04,619 --> 00:17:07,799
specific section in it that talks about

421
00:17:07,799 --> 00:17:10,500
how to add Badges and if you go to that

422
00:17:10,500 --> 00:17:13,199
section there's just a snippet of code

423
00:17:13,199 --> 00:17:16,260
that you can grab you can copy it you

424
00:17:16,260 --> 00:17:18,119
can go into your readme of a project

425
00:17:18,119 --> 00:17:19,559
that you have

426
00:17:19,559 --> 00:17:21,359
you can paste it in

427
00:17:21,359 --> 00:17:23,819
and then you just have to tweak it a

428
00:17:23,819 --> 00:17:25,619
little bit take the name of the project

429
00:17:25,619 --> 00:17:29,700
that you want the badge to represent put

430
00:17:29,700 --> 00:17:31,080
it there

431
00:17:31,080 --> 00:17:32,820
and then

432
00:17:32,820 --> 00:17:35,760
once you have those changes made it's a

433
00:17:35,760 --> 00:17:38,340
pretty standard change to to the readme

434
00:17:38,340 --> 00:17:40,500
just commit it announce that you're

435
00:17:40,500 --> 00:17:43,140
adding a scorecard badge and as soon as

436
00:17:43,140 --> 00:17:45,360
it's pushed you should see the badge

437
00:17:45,360 --> 00:17:48,299
generated right away the one caveat here

438
00:17:48,299 --> 00:17:51,240
is that you do need to have data behind

439
00:17:51,240 --> 00:17:54,360
that badge in order to populate it so if

440
00:17:54,360 --> 00:17:56,100
you're already a large project and

441
00:17:56,100 --> 00:17:59,580
you're one of those 1.2 million that

442
00:17:59,580 --> 00:18:02,400
we're scanning on a regular basis you

443
00:18:02,400 --> 00:18:05,039
can expect to see that badge populate

444
00:18:05,039 --> 00:18:07,260
itself if you're not or you just want to

445
00:18:07,260 --> 00:18:09,360
make sure to guarantee it you can

446
00:18:09,360 --> 00:18:12,000
install that GitHub action and at that

447
00:18:12,000 --> 00:18:14,220
point you'll have that data guaranteed

448
00:18:14,220 --> 00:18:16,919
to be in the repo itself that we're

449
00:18:16,919 --> 00:18:18,059
pulling from

450
00:18:18,059 --> 00:18:21,120
and it will populate that way

451
00:18:21,120 --> 00:18:24,840
so we don't need to see that again

452
00:18:24,840 --> 00:18:26,700
but uh Naveen if you want to talk about

453
00:18:26,700 --> 00:18:28,799
just how to get involved yeah

454
00:18:28,799 --> 00:18:30,720
um we have a bi-weekly you should be

455
00:18:30,720 --> 00:18:31,740
able to hit the

456
00:18:31,740 --> 00:18:34,140
the QR code we have a bi-weekly meeting

457
00:18:34,140 --> 00:18:37,080
uh please come and hang out we are

458
00:18:37,080 --> 00:18:39,299
looking for contributors or if you're

459
00:18:39,299 --> 00:18:40,980
even using the project please come and

460
00:18:40,980 --> 00:18:43,740
let us know how we can improve

461
00:18:43,740 --> 00:18:44,539
um

462
00:18:44,539 --> 00:18:48,240
we are all active in the slack and the

463
00:18:48,240 --> 00:18:50,700
issues we constantly are all the

464
00:18:50,700 --> 00:18:53,539
maintainers are pretty active in helping

465
00:18:53,539 --> 00:18:56,960
grow this project

466
00:18:57,419 --> 00:18:59,220
so I think at this point we are way

467
00:18:59,220 --> 00:19:00,960
ahead of schedule so we we have plenty

468
00:19:00,960 --> 00:19:02,820
of time for questions

469
00:19:02,820 --> 00:19:07,440
um if people want to just ask uh we can

470
00:19:07,440 --> 00:19:09,120
just kind of try to ask me anything

471
00:19:09,120 --> 00:19:10,679
right now

472
00:19:10,679 --> 00:19:13,160
yes

473
00:19:19,200 --> 00:19:21,200
um

474
00:19:26,280 --> 00:19:29,100
so that's a fantastic question uh and

475
00:19:29,100 --> 00:19:30,539
actually one that's I would say talked

476
00:19:30,539 --> 00:19:32,340
about a fair amount in the project

477
00:19:32,340 --> 00:19:33,840
itself

478
00:19:33,840 --> 00:19:36,780
honestly both of those cases I see is

479
00:19:36,780 --> 00:19:38,940
very viable so

480
00:19:38,940 --> 00:19:40,980
if you're in that case of trying to take

481
00:19:40,980 --> 00:19:43,080
on a new dependency we think it's useful

482
00:19:43,080 --> 00:19:45,120
information to have so that you can make

483
00:19:45,120 --> 00:19:47,580
a more informed decision about is this

484
00:19:47,580 --> 00:19:49,500
really a dependency that I want to take

485
00:19:49,500 --> 00:19:52,559
in you know or is this something that

486
00:19:52,559 --> 00:19:54,600
that maybe needs a little bit more work

487
00:19:54,600 --> 00:19:57,120
or maybe has a few follow-up questions

488
00:19:57,120 --> 00:19:59,000
before you'd want to take it on

489
00:19:59,000 --> 00:20:01,500
if you are the maintainer of a project

490
00:20:01,500 --> 00:20:05,280
or you're looking to contribute to one I

491
00:20:05,280 --> 00:20:07,860
think it's a great starting point to see

492
00:20:07,860 --> 00:20:10,500
what are some of the key security

493
00:20:10,500 --> 00:20:12,720
changes that could be made that would be

494
00:20:12,720 --> 00:20:15,960
really impactful for a project so we've

495
00:20:15,960 --> 00:20:18,120
seen that in a few different places too

496
00:20:18,120 --> 00:20:19,620
where

497
00:20:19,620 --> 00:20:21,600
anyone who's looking at trying to just

498
00:20:21,600 --> 00:20:23,820
improve how they're doing software

499
00:20:23,820 --> 00:20:26,160
supply chain security they'll generate a

500
00:20:26,160 --> 00:20:27,600
scorecard as a starting point and then

501
00:20:27,600 --> 00:20:28,980
say what do we need to do to bump up

502
00:20:28,980 --> 00:20:31,140
this score or celebrate that they're

503
00:20:31,140 --> 00:20:32,580
doing a really good job already and

504
00:20:32,580 --> 00:20:34,919
hopefully put up a badge

505
00:20:34,919 --> 00:20:37,320
we're getting a 10 on that and the whole

506
00:20:37,320 --> 00:20:40,200
score is hard scorecard does not have a

507
00:20:40,200 --> 00:20:44,179
10 so just giving some heads up

508
00:20:44,460 --> 00:20:47,900
Olympic style scoring

509
00:20:48,960 --> 00:20:51,980
any other questions

510
00:20:53,220 --> 00:20:55,820
yes

511
00:21:03,960 --> 00:21:05,280
but are you talking of some sort to have

512
00:21:05,280 --> 00:21:07,460
access

513
00:21:10,919 --> 00:21:12,539
yes

514
00:21:12,539 --> 00:21:15,780
um that's a configurable you don't you

515
00:21:15,780 --> 00:21:17,460
don't say anything you can say please

516
00:21:17,460 --> 00:21:19,440
don't publish results and the land

517
00:21:19,440 --> 00:21:21,480
publish anything

518
00:21:21,480 --> 00:21:23,340
so

519
00:21:23,340 --> 00:21:27,360
um second thing if we find issues We're

520
00:21:27,360 --> 00:21:28,919
Not Gonna

521
00:21:28,919 --> 00:21:30,539
the moment your score is bad we're not

522
00:21:30,539 --> 00:21:31,980
going to put it out open for everybody

523
00:21:31,980 --> 00:21:34,200
to come and attack you

524
00:21:34,200 --> 00:21:36,720
we're going to write to your security

525
00:21:36,720 --> 00:21:40,140
dashboard so you can go as a maintainer

526
00:21:40,140 --> 00:21:42,179
or administrator of the project to go

527
00:21:42,179 --> 00:21:45,900
address them so we take that we take

528
00:21:45,900 --> 00:21:48,720
that we take care of that just wanted to

529
00:21:48,720 --> 00:21:50,220
add that to that

530
00:21:50,220 --> 00:21:53,100
so yeah should be flexible and fit

531
00:21:53,100 --> 00:21:55,500
whatever kind of data you do or don't

532
00:21:55,500 --> 00:21:57,860
want to share

533
00:22:06,179 --> 00:22:09,059
so great question at this point it's

534
00:22:09,059 --> 00:22:11,000
still something that we're working on

535
00:22:11,000 --> 00:22:14,039
we we do want scorecard to be flexible

536
00:22:14,039 --> 00:22:16,559
in that it can run not just on GitHub

537
00:22:16,559 --> 00:22:18,840
projects but you know any open source

538
00:22:18,840 --> 00:22:22,320
project or dependency that someone would

539
00:22:22,320 --> 00:22:23,760
you know either like to be making

540
00:22:23,760 --> 00:22:26,700
improvements on or be considering

541
00:22:26,700 --> 00:22:28,140
whether or not to pull into their own

542
00:22:28,140 --> 00:22:30,120
project

543
00:22:30,120 --> 00:22:32,100
there are some things in the work uh

544
00:22:32,100 --> 00:22:34,679
there's get lab work going on yes

545
00:22:34,679 --> 00:22:37,980
um and to add to that there are some

546
00:22:37,980 --> 00:22:39,419
take example if you have a good boss

547
00:22:39,419 --> 00:22:42,419
tree uh on gitlab or somewhere else

548
00:22:42,419 --> 00:22:44,880
you can run scorecard but it'll not be

549
00:22:44,880 --> 00:22:46,500
able to get all the checks it will be

550
00:22:46,500 --> 00:22:47,940
able to get you a contrive amount of

551
00:22:47,940 --> 00:22:50,340
checks with score only pertain to that

552
00:22:50,340 --> 00:22:52,380
so it'll be able to say hey are you

553
00:22:52,380 --> 00:22:54,480
pinning your dependencies

554
00:22:54,480 --> 00:22:57,000
um do you have this XYZ do you have

555
00:22:57,000 --> 00:22:59,039
binary artifacts we don't because it's

556
00:22:59,039 --> 00:23:00,659
irrespective whether it's in GitHub or

557
00:23:00,659 --> 00:23:02,520
gitlab or anywhere it is so there are

558
00:23:02,520 --> 00:23:04,320
something that it will run so to answer

559
00:23:04,320 --> 00:23:06,120
your question on that we should be able

560
00:23:06,120 --> 00:23:08,340
to run them but not get comprehensive

561
00:23:08,340 --> 00:23:10,200
results like what you get and get up

562
00:23:10,200 --> 00:23:11,700
right now

563
00:23:11,700 --> 00:23:14,360
you're welcome

564
00:23:17,220 --> 00:23:19,919
very good question we have all of this

565
00:23:19,919 --> 00:23:22,020
data available in our bigquery it's

566
00:23:22,020 --> 00:23:23,940
available free so you should be able to

567
00:23:23,940 --> 00:23:29,100
go pull this data to plot out to say

568
00:23:29,100 --> 00:23:31,440
repository was here

569
00:23:31,440 --> 00:23:35,120
are they going up or coming down

570
00:23:37,620 --> 00:23:41,100
up okay to answer your question we ran

571
00:23:41,100 --> 00:23:45,020
we run weekly scans scanning

572
00:23:45,020 --> 00:23:47,580
1.2 million repositories with the amount

573
00:23:47,580 --> 00:23:50,100
of tokens GitHub tokens we have takes us

574
00:23:50,100 --> 00:23:52,320
roughly about four or five days

575
00:23:52,320 --> 00:23:55,500
um to do that so we ran if I'm not wrong

576
00:23:55,500 --> 00:23:58,320
last year 52 times so you should be able

577
00:23:58,320 --> 00:23:59,580
to take

578
00:23:59,580 --> 00:24:02,159
whatever the current window is yes

579
00:24:02,159 --> 00:24:04,080
you should be able to take that and plot

580
00:24:04,080 --> 00:24:06,260
it

581
00:24:14,400 --> 00:24:18,120
absolutely yeah right so um

582
00:24:18,120 --> 00:24:23,760
on that front we are having plans on

583
00:24:23,760 --> 00:24:27,720
release working on a feature Within

584
00:24:27,720 --> 00:24:29,240
if you're going to add a new dependency

585
00:24:29,240 --> 00:24:31,980
what if your pull request gets a

586
00:24:31,980 --> 00:24:35,960
scorecard result on that to say

587
00:24:36,059 --> 00:24:39,600
and you decide I want of these 17 checks

588
00:24:39,600 --> 00:24:41,640
I want four checks I just want these

589
00:24:41,640 --> 00:24:43,140
four checks and I don't want it to go

590
00:24:43,140 --> 00:24:45,120
below eight below seven whatever number

591
00:24:45,120 --> 00:24:46,559
you want to configure

592
00:24:46,559 --> 00:24:49,260
so be it it's on our works we are

593
00:24:49,260 --> 00:24:50,700
working on that

594
00:24:50,700 --> 00:24:52,740
so to answer your question on that so

595
00:24:52,740 --> 00:24:54,900
that you don't have to fly blind when

596
00:24:54,900 --> 00:24:57,299
you're taking new dependency

597
00:24:57,299 --> 00:24:59,820
yeah and I think you know obviously the

598
00:24:59,820 --> 00:25:02,100
more granular we can get the better off

599
00:25:02,100 --> 00:25:04,440
we'll be you start bootstrapping the

600
00:25:04,440 --> 00:25:06,600
infrastructure to get that initial set

601
00:25:06,600 --> 00:25:09,299
of scores I think

602
00:25:09,299 --> 00:25:11,760
you know generally not much changes on a

603
00:25:11,760 --> 00:25:14,820
day by day so much as a week by week but

604
00:25:14,820 --> 00:25:17,059
but

605
00:25:17,340 --> 00:25:19,980
we made a decision a year ago somebody

606
00:25:19,980 --> 00:25:21,240
goes in one

607
00:25:21,240 --> 00:25:24,179
to talk about these things

608
00:25:24,179 --> 00:25:26,520
yeah yeah you can at least get that to

609
00:25:26,520 --> 00:25:29,580
that date range yeah

610
00:25:29,580 --> 00:25:32,640
yeah that's a great use case

611
00:25:32,640 --> 00:25:35,179
yes

612
00:25:48,179 --> 00:25:49,980
um so so what are you trying to say is

613
00:25:49,980 --> 00:25:52,980
hey from the cve I want to go back and

614
00:25:52,980 --> 00:25:55,679
look at that underscore

615
00:25:55,679 --> 00:25:58,159
okay

616
00:26:07,799 --> 00:26:10,919
right now great great feedback but at

617
00:26:10,919 --> 00:26:12,900
the moment we don't have that

618
00:26:12,900 --> 00:26:15,179
there are

619
00:26:15,179 --> 00:26:18,000
other projects which are working trying

620
00:26:18,000 --> 00:26:20,820
to integrate scorecard into that

621
00:26:20,820 --> 00:26:22,860
um but we can take offline talk about

622
00:26:22,860 --> 00:26:23,940
that

623
00:26:23,940 --> 00:26:25,620
yeah essentially you'd need some

624
00:26:25,620 --> 00:26:27,240
third-party service to do that lookup

625
00:26:27,240 --> 00:26:29,100
right now that's that's another open

626
00:26:29,100 --> 00:26:30,419
source project which is trying to build

627
00:26:30,419 --> 00:26:32,659
that

628
00:26:34,740 --> 00:26:37,700
give me the questions

629
00:26:39,179 --> 00:26:42,900
okay going once going twice

630
00:26:42,900 --> 00:26:44,760
all right maybe extended coffee break

631
00:26:44,760 --> 00:26:46,240
thank you

632
00:26:46,240 --> 00:26:49,900
[Applause]

