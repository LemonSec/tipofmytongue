1
00:00:00,399 --> 00:00:02,480
welcome to challenges in cloud native

2
00:00:02,480 --> 00:00:05,040
forensics here at cloud native security

3
00:00:05,040 --> 00:00:05,600
day

4
00:00:05,600 --> 00:00:09,120
happy to be here i'm andrew krug i'm a

5
00:00:09,120 --> 00:00:10,880
security geek at datadog

6
00:00:10,880 --> 00:00:13,759
and also a technical evangelist and up

7
00:00:13,759 --> 00:00:15,280
on screen here is of course where you

8
00:00:15,280 --> 00:00:17,039
can reach me if you have questions or

9
00:00:17,039 --> 00:00:18,320
feedback

10
00:00:18,320 --> 00:00:22,400
about the talk i started my career

11
00:00:22,400 --> 00:00:25,439
in forensics a long time ago

12
00:00:25,439 --> 00:00:26,480
i actually had the pleasure of

13
00:00:26,480 --> 00:00:28,800
participating in a college program to

14
00:00:28,800 --> 00:00:29,760
teach folks

15
00:00:29,760 --> 00:00:32,238
industrial and law enforcement style

16
00:00:32,238 --> 00:00:33,680
forensics

17
00:00:33,680 --> 00:00:36,000
in today's time there may be a variety

18
00:00:36,000 --> 00:00:37,760
of reasons that you have to perform

19
00:00:37,760 --> 00:00:38,559
forensics

20
00:00:38,559 --> 00:00:40,640
two primary domains being of course

21
00:00:40,640 --> 00:00:43,200
security and legal incidents

22
00:00:43,200 --> 00:00:45,000
things such as breaches due to

23
00:00:45,000 --> 00:00:46,960
misconfigurations which we see all the

24
00:00:46,960 --> 00:00:47,440
time

25
00:00:47,440 --> 00:00:50,480
or even incidents like employment law

26
00:00:50,480 --> 00:00:52,879
related things will force you to sift

27
00:00:52,879 --> 00:00:54,160
through

28
00:00:54,160 --> 00:00:56,879
logs and disk images and memory samples

29
00:00:56,879 --> 00:00:58,239
from your environment

30
00:00:58,239 --> 00:01:00,399
regardless of the reason though i tend

31
00:01:00,399 --> 00:01:01,840
to think of forensics

32
00:01:01,840 --> 00:01:05,360
as kind of the definition in that purple

33
00:01:05,360 --> 00:01:06,400
box there which is

34
00:01:06,400 --> 00:01:08,159
telling stories that occurred in a

35
00:01:08,159 --> 00:01:10,000
specific time window using

36
00:01:10,000 --> 00:01:13,280
facts that can be derived provably and

37
00:01:13,280 --> 00:01:16,159
repeatedly

38
00:01:16,400 --> 00:01:17,840
so let's just talk for a minute about

39
00:01:17,840 --> 00:01:19,759
what it means for a process to be

40
00:01:19,759 --> 00:01:23,439
provable and also repeatable

41
00:01:23,439 --> 00:01:25,680
we used to talk about this as using

42
00:01:25,680 --> 00:01:27,759
things that we called validated

43
00:01:27,759 --> 00:01:31,119
tooling and also keeping track

44
00:01:31,119 --> 00:01:33,439
of the chain of custody for pieces of

45
00:01:33,439 --> 00:01:35,119
evidence and tool validation

46
00:01:35,119 --> 00:01:37,600
put simply is just that we can use a

47
00:01:37,600 --> 00:01:39,360
tool over and over and that tool has

48
00:01:39,360 --> 00:01:40,880
been studied and proven

49
00:01:40,880 --> 00:01:42,880
to yield the same results hundreds or

50
00:01:42,880 --> 00:01:45,360
thousands of times in in academic tests

51
00:01:45,360 --> 00:01:46,640
in stress tests

52
00:01:46,640 --> 00:01:49,920
and also proven not to modify the actual

53
00:01:49,920 --> 00:01:52,000
artifacts that we've gathered as pieces

54
00:01:52,000 --> 00:01:53,759
of evidence because you might think of

55
00:01:53,759 --> 00:01:56,799
how important that actually is to have

56
00:01:56,799 --> 00:01:58,719
your artifacts be the same at the

57
00:01:58,719 --> 00:02:00,240
beginning of your investigation as they

58
00:02:00,240 --> 00:02:02,479
are at the end because we can prove

59
00:02:02,479 --> 00:02:04,320
beyond the shadow of a doubt that we

60
00:02:04,320 --> 00:02:06,000
haven't actually

61
00:02:06,000 --> 00:02:08,160
sort of fussed with the the evidence

62
00:02:08,160 --> 00:02:10,000
that we have available

63
00:02:10,000 --> 00:02:11,599
and then that chain of custody is just a

64
00:02:11,599 --> 00:02:13,840
complete record of of who checked out

65
00:02:13,840 --> 00:02:15,120
what piece of evidence

66
00:02:15,120 --> 00:02:17,840
who may have modified it uh etc so that

67
00:02:17,840 --> 00:02:19,200
we can go back and we can see the

68
00:02:19,200 --> 00:02:20,239
complete log

69
00:02:20,239 --> 00:02:22,800
of just what happened over the course of

70
00:02:22,800 --> 00:02:24,000
an investigation

71
00:02:24,000 --> 00:02:26,000
this is one of the things that's notably

72
00:02:26,000 --> 00:02:28,000
gotten a tiny bit easier with cloud

73
00:02:28,000 --> 00:02:30,000
provider control plane

74
00:02:30,000 --> 00:02:33,519
logs like aws cloudtrail

75
00:02:33,519 --> 00:02:35,040
which brings us to kind of the problem

76
00:02:35,040 --> 00:02:36,879
statement here which is that

77
00:02:36,879 --> 00:02:39,280
the more we embrace kind of this idea of

78
00:02:39,280 --> 00:02:40,480
devops and

79
00:02:40,480 --> 00:02:43,680
and cattle not pets the more

80
00:02:43,680 --> 00:02:45,680
challenged uh some of these forensic

81
00:02:45,680 --> 00:02:48,000
processes do become

82
00:02:48,000 --> 00:02:50,319
and that's due to like kind of three

83
00:02:50,319 --> 00:02:52,160
different distinct

84
00:02:52,160 --> 00:02:54,239
pillars uh that continue to challenge us

85
00:02:54,239 --> 00:02:55,680
when we talk about cloud native

86
00:02:55,680 --> 00:02:56,879
forensics

87
00:02:56,879 --> 00:03:00,239
ephemerality or short-lived instances

88
00:03:00,239 --> 00:03:02,480
scale which is of course the the number

89
00:03:02,480 --> 00:03:03,760
of workloads that we might have to

90
00:03:03,760 --> 00:03:05,440
perform forensics on

91
00:03:05,440 --> 00:03:07,680
and also the scope maybe it's a single

92
00:03:07,680 --> 00:03:10,239
aws account or one kubernetes cluster or

93
00:03:10,239 --> 00:03:11,760
it could be hundreds of kubernetes

94
00:03:11,760 --> 00:03:13,280
clusters depending

95
00:03:13,280 --> 00:03:16,239
and also technology um the the very

96
00:03:16,239 --> 00:03:19,040
technologies that we put in place to

97
00:03:19,040 --> 00:03:22,319
help us do security sometimes actually

98
00:03:22,319 --> 00:03:23,120
hinder us

99
00:03:23,120 --> 00:03:24,080
and we're going to talk a little bit

100
00:03:24,080 --> 00:03:27,599
about that but first let's talk about

101
00:03:27,599 --> 00:03:29,440
those short-lived instances or

102
00:03:29,440 --> 00:03:31,040
short-lived uh workloads

103
00:03:31,040 --> 00:03:34,560
ephemeral workloads

104
00:03:34,560 --> 00:03:36,640
i still remember a time not that long

105
00:03:36,640 --> 00:03:37,680
ago when you used to put

106
00:03:37,680 --> 00:03:39,519
servers in racks and you installed

107
00:03:39,519 --> 00:03:41,440
operating systems on them

108
00:03:41,440 --> 00:03:43,920
and then they ran for five years before

109
00:03:43,920 --> 00:03:45,440
unracking

110
00:03:45,440 --> 00:03:48,080
today we have much shorter and shorter

111
00:03:48,080 --> 00:03:48,799
lived

112
00:03:48,799 --> 00:03:51,840
workloads and what you're seeing on

113
00:03:51,840 --> 00:03:52,400
screen is

114
00:03:52,400 --> 00:03:55,599
is some some facts from a datadog report

115
00:03:55,599 --> 00:03:56,879
which is how long

116
00:03:56,879 --> 00:03:59,760
uh different uh classes of workloads

117
00:03:59,760 --> 00:04:01,599
exist so in serverless compute you might

118
00:04:01,599 --> 00:04:03,439
have a workload that lives for

119
00:04:03,439 --> 00:04:05,840
four minutes um in orchestrated

120
00:04:05,840 --> 00:04:07,439
containers they might live for

121
00:04:07,439 --> 00:04:10,720
for half a day to a day and

122
00:04:10,720 --> 00:04:12,560
in unorchestrated containers they might

123
00:04:12,560 --> 00:04:14,319
live you know for like something like

124
00:04:14,319 --> 00:04:16,160
four to six days still

125
00:04:16,160 --> 00:04:18,478
that's not very long compared to the

126
00:04:18,478 --> 00:04:19,839
span of years

127
00:04:19,839 --> 00:04:22,479
that uh something might be uh in

128
00:04:22,479 --> 00:04:23,280
production

129
00:04:23,280 --> 00:04:26,479
providing compute uh versus today

130
00:04:26,479 --> 00:04:29,600
so we're cycling things out quite a bit

131
00:04:29,600 --> 00:04:31,919
faster

132
00:04:31,919 --> 00:04:33,919
and that actually is a problem for

133
00:04:33,919 --> 00:04:36,400
forensics because it destroys evidence

134
00:04:36,400 --> 00:04:38,560
um when when you do a deploy your

135
00:04:38,560 --> 00:04:40,320
containers go away when you do a ploy

136
00:04:40,320 --> 00:04:40,639
your

137
00:04:40,639 --> 00:04:43,199
deploy your ec2 instances go away when

138
00:04:43,199 --> 00:04:44,960
your auto scale group

139
00:04:44,960 --> 00:04:47,840
expands and contracts we're actually

140
00:04:47,840 --> 00:04:49,440
throwing away

141
00:04:49,440 --> 00:04:52,720
valuable instance data

142
00:04:52,720 --> 00:04:54,160
and according to google's state of

143
00:04:54,160 --> 00:04:55,919
devops report the average company

144
00:04:55,919 --> 00:04:56,840
deploys

145
00:04:56,840 --> 00:04:59,600
626 times a year that's that's almost

146
00:04:59,600 --> 00:05:00,720
twice a day

147
00:05:00,720 --> 00:05:03,759
for kind of a medium competency devops

148
00:05:03,759 --> 00:05:04,160
shop

149
00:05:04,160 --> 00:05:06,000
that that's quite frequently and

150
00:05:06,000 --> 00:05:08,160
considering that the mean time to detect

151
00:05:08,160 --> 00:05:10,639
an incident or a breach could be

152
00:05:10,639 --> 00:05:12,479
weeks or months depending on how you

153
00:05:12,479 --> 00:05:14,560
find out about a breach

154
00:05:14,560 --> 00:05:16,479
you could already have kind of gotten

155
00:05:16,479 --> 00:05:18,080
rid of all of the evidence that would

156
00:05:18,080 --> 00:05:19,680
help you kind of break the case and

157
00:05:19,680 --> 00:05:20,320
figure out

158
00:05:20,320 --> 00:05:22,080
you know exactly how somebody got in

159
00:05:22,080 --> 00:05:23,360
what they got out

160
00:05:23,360 --> 00:05:26,400
etc so that's kind of a problem and

161
00:05:26,400 --> 00:05:28,240
scale adds another dimension

162
00:05:28,240 --> 00:05:31,919
to this as well so most environments

163
00:05:31,919 --> 00:05:34,320
running orchestrated containers or any

164
00:05:34,320 --> 00:05:35,840
sort of orchestration

165
00:05:35,840 --> 00:05:39,039
on top of aws or gcp

166
00:05:39,039 --> 00:05:42,160
or azure are running a lot of workloads

167
00:05:42,160 --> 00:05:44,560
and this is just a statistic from one

168
00:05:44,560 --> 00:05:46,960
single report so take it for what it is

169
00:05:46,960 --> 00:05:48,880
the bottom line though is that most

170
00:05:48,880 --> 00:05:50,320
environments are

171
00:05:50,320 --> 00:05:52,880
large environments kind of by design now

172
00:05:52,880 --> 00:05:54,400
and many are multi-cloud

173
00:05:54,400 --> 00:05:56,880
or multi-tenant they have containers and

174
00:05:56,880 --> 00:05:58,160
ec2 instances

175
00:05:58,160 --> 00:06:00,560
and this makes the evidence collection

176
00:06:00,560 --> 00:06:02,639
and custody chain problem even more

177
00:06:02,639 --> 00:06:03,440
prominent

178
00:06:03,440 --> 00:06:06,639
than it has ever been and

179
00:06:06,639 --> 00:06:08,479
for years now i've been doing talks on

180
00:06:08,479 --> 00:06:10,160
forensics in the cloud using cloud

181
00:06:10,160 --> 00:06:11,520
technology because i'm convinced that

182
00:06:11,520 --> 00:06:12,479
the only way

183
00:06:12,479 --> 00:06:14,800
to actually do incident response in the

184
00:06:14,800 --> 00:06:16,479
cloud and do this kind of analysis in

185
00:06:16,479 --> 00:06:17,199
the cloud is

186
00:06:17,199 --> 00:06:20,240
actually to use cloud compute

187
00:06:20,240 --> 00:06:23,199
to kind of scale out that analysis

188
00:06:23,199 --> 00:06:24,720
effort in the same way that we scale our

189
00:06:24,720 --> 00:06:26,560
workloads

190
00:06:26,560 --> 00:06:28,800
at some point though this becomes this

191
00:06:28,800 --> 00:06:30,560
incredibly heavy burden

192
00:06:30,560 --> 00:06:31,919
if you need to start to collect data

193
00:06:31,919 --> 00:06:34,000
from hundreds of instances or thousands

194
00:06:34,000 --> 00:06:38,720
of systems in a single fleet all at once

195
00:06:38,720 --> 00:06:41,360
and the pace of technology here that the

196
00:06:41,360 --> 00:06:42,000
tooling

197
00:06:42,000 --> 00:06:44,479
that allows us to do forensics isn't

198
00:06:44,479 --> 00:06:46,160
really keeping up necessarily with the

199
00:06:46,160 --> 00:06:48,000
security controls that are kind of

200
00:06:48,000 --> 00:06:49,759
preventing us from doing an effective

201
00:06:49,759 --> 00:06:51,520
job doing

202
00:06:51,520 --> 00:06:54,639
timeline reconstruction

203
00:06:55,039 --> 00:06:56,720
back in the good old days we talked

204
00:06:56,720 --> 00:06:58,479
about two different types of forensics

205
00:06:58,479 --> 00:06:59,840
right and and i want you just to

206
00:06:59,840 --> 00:07:00,560
remember these

207
00:07:00,560 --> 00:07:01,919
two distinctly different types of

208
00:07:01,919 --> 00:07:03,919
forensics one was what we called

209
00:07:03,919 --> 00:07:06,400
cold forensics or dead system which was

210
00:07:06,400 --> 00:07:07,680
where we'd actually take

211
00:07:07,680 --> 00:07:09,599
hard drives and take them out of systems

212
00:07:09,599 --> 00:07:10,880
image them

213
00:07:10,880 --> 00:07:13,199
carve the the actual file system for

214
00:07:13,199 --> 00:07:14,240
deleted files

215
00:07:14,240 --> 00:07:15,919
artifacts that would help us reconstruct

216
00:07:15,919 --> 00:07:17,280
a timeline

217
00:07:17,280 --> 00:07:20,639
the second is live forensics and that's

218
00:07:20,639 --> 00:07:22,319
the act of getting things from

219
00:07:22,319 --> 00:07:25,199
volatile system data that would go away

220
00:07:25,199 --> 00:07:26,479
when you turn the machine off and this

221
00:07:26,479 --> 00:07:27,520
wasn't just memory

222
00:07:27,520 --> 00:07:28,800
there's also things like network

223
00:07:28,800 --> 00:07:30,960
information process information

224
00:07:30,960 --> 00:07:32,240
things that wouldn't necessarily be

225
00:07:32,240 --> 00:07:34,720
resident on disk and for a time

226
00:07:34,720 --> 00:07:36,400
we thought this was actually going to be

227
00:07:36,400 --> 00:07:38,160
this massive boon

228
00:07:38,160 --> 00:07:39,599
to the industry right because we could

229
00:07:39,599 --> 00:07:42,160
do this so much faster

230
00:07:42,160 --> 00:07:44,560
using live memory samples to like crack

231
00:07:44,560 --> 00:07:45,199
the case

232
00:07:45,199 --> 00:07:48,879
then we could carve through a disk um

233
00:07:48,879 --> 00:07:51,759
it turned out though that despite the

234
00:07:51,759 --> 00:07:53,520
efficacy of this and the fact that we

235
00:07:53,520 --> 00:07:54,080
could

236
00:07:54,080 --> 00:07:55,520
we could use it to solve problems we

237
00:07:55,520 --> 00:07:57,840
couldn't use uh

238
00:07:57,840 --> 00:08:01,520
disk forensics for it was short-lived

239
00:08:01,520 --> 00:08:03,520
because operating systems started to add

240
00:08:03,520 --> 00:08:05,039
more and more security features

241
00:08:05,039 --> 00:08:07,120
uh kind of beginning in 2010 with data

242
00:08:07,120 --> 00:08:09,039
execution prevention

243
00:08:09,039 --> 00:08:11,440
and address space layout randomization

244
00:08:11,440 --> 00:08:12,639
which would take

245
00:08:12,639 --> 00:08:15,680
the address at which a given process was

246
00:08:15,680 --> 00:08:17,360
loaded into memory and sort of

247
00:08:17,360 --> 00:08:20,240
uh offset that randomly at any given

248
00:08:20,240 --> 00:08:21,680
time and then

249
00:08:21,680 --> 00:08:23,360
kernel level address space layout

250
00:08:23,360 --> 00:08:25,199
randomization came to be a thing

251
00:08:25,199 --> 00:08:26,879
and that was actually changing the

252
00:08:26,879 --> 00:08:28,400
location of pid

253
00:08:28,400 --> 00:08:31,759
0 or the kernel which made it inherently

254
00:08:31,759 --> 00:08:34,559
very very difficult to reconstruct

255
00:08:34,559 --> 00:08:36,479
memory samples

256
00:08:36,479 --> 00:08:39,760
from systems that were running k-a-s-l-r

257
00:08:39,760 --> 00:08:42,479
and this effectively broke an entire

258
00:08:42,479 --> 00:08:44,320
ecosystem of tools

259
00:08:44,320 --> 00:08:47,680
when the security features dropped and

260
00:08:47,680 --> 00:08:49,920
there are a variety of good tools that

261
00:08:49,920 --> 00:08:50,959
exist they just

262
00:08:50,959 --> 00:08:52,720
can't necessarily keep up with all of

263
00:08:52,720 --> 00:08:54,160
the innovations going on with kind of

264
00:08:54,160 --> 00:08:55,839
the randomization of memory and now if

265
00:08:55,839 --> 00:08:56,720
you look at

266
00:08:56,720 --> 00:08:59,760
hardware they're actually putting memory

267
00:08:59,760 --> 00:09:02,000
obfuscation features and hardware that

268
00:09:02,000 --> 00:09:04,080
makes it increasingly difficult

269
00:09:04,080 --> 00:09:06,560
to analyze memory samples and so often

270
00:09:06,560 --> 00:09:07,680
what we end up with

271
00:09:07,680 --> 00:09:09,760
even if we do everything right is a

272
00:09:09,760 --> 00:09:11,760
complete lack of ability

273
00:09:11,760 --> 00:09:14,880
to analyze live system data

274
00:09:14,880 --> 00:09:16,560
at any kind of practical scale

275
00:09:16,560 --> 00:09:18,480
especially as memory sizes increase

276
00:09:18,480 --> 00:09:21,680
instant sizes increase etc so

277
00:09:21,680 --> 00:09:25,360
we really need to make the art of

278
00:09:25,360 --> 00:09:27,519
forensics a first-class citizen

279
00:09:27,519 --> 00:09:29,360
we need to be thinking about this as we

280
00:09:29,360 --> 00:09:31,600
build out operating systems

281
00:09:31,600 --> 00:09:34,000
as we build out orchestrators that

282
00:09:34,000 --> 00:09:34,640
eventually

283
00:09:34,640 --> 00:09:36,480
during a security incident someone is

284
00:09:36,480 --> 00:09:38,000
going to need to kind of

285
00:09:38,000 --> 00:09:40,480
lawfully intercept if you will the data

286
00:09:40,480 --> 00:09:42,640
that's flowing through that system

287
00:09:42,640 --> 00:09:45,120
in a way that they can reconstruct it

288
00:09:45,120 --> 00:09:46,160
and that needs to be

289
00:09:46,160 --> 00:09:48,160
provable and validatable just like we

290
00:09:48,160 --> 00:09:49,760
talked about so if you think this is a

291
00:09:49,760 --> 00:09:50,000
good

292
00:09:50,000 --> 00:09:53,440
idea please go and plus one github

293
00:09:53,440 --> 00:09:55,440
issues on any of those projects i put on

294
00:09:55,440 --> 00:09:56,320
screen

295
00:09:56,320 --> 00:10:00,080
that have to do with aslr or kaslr

296
00:10:00,080 --> 00:10:01,600
or if you are on the board of a

297
00:10:01,600 --> 00:10:03,440
prominent project like kubernetes or the

298
00:10:03,440 --> 00:10:04,800
linux kernel

299
00:10:04,800 --> 00:10:06,560
let's have a chat let's think about

300
00:10:06,560 --> 00:10:08,720
forensics a little bit differently

301
00:10:08,720 --> 00:10:10,800
you too can be an advocate for all

302
00:10:10,800 --> 00:10:11,920
things forensics

303
00:10:11,920 --> 00:10:13,760
and we can work together to make the

304
00:10:13,760 --> 00:10:16,160
world a better place

305
00:10:16,160 --> 00:10:18,000
thanks again i'm andrew krug here's

306
00:10:18,000 --> 00:10:19,920
where to contact me i hope you enjoyed

307
00:10:19,920 --> 00:10:22,160
my lightning talk on concerns with cloud

308
00:10:22,160 --> 00:10:25,439
native forensics

