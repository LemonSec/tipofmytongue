1
00:00:01,040 --> 00:00:03,600
hello my name is david a wheeler

2
00:00:03,600 --> 00:00:06,160
and i'm here to talk about securing open

3
00:00:06,160 --> 00:00:08,560
source

4
00:00:09,679 --> 00:00:11,920
i hope to convince you about four key

5
00:00:11,920 --> 00:00:12,960
points

6
00:00:12,960 --> 00:00:16,640
attacks weakness hope change

7
00:00:16,640 --> 00:00:19,680
attacks hope weakness hope

8
00:00:19,680 --> 00:00:22,240
change what do i mean by that well the

9
00:00:22,240 --> 00:00:23,279
first part

10
00:00:23,279 --> 00:00:25,760
part i hope you already are convinced of

11
00:00:25,760 --> 00:00:26,560
attackers

12
00:00:26,560 --> 00:00:29,519
are attacking systems they're attacking

13
00:00:29,519 --> 00:00:31,599
those systems via the vulnerabilities

14
00:00:31,599 --> 00:00:32,800
that they have

15
00:00:32,800 --> 00:00:34,880
when they are deployed and also through

16
00:00:34,880 --> 00:00:36,239
their supply chains

17
00:00:36,239 --> 00:00:39,440
weakness sadly those attackers are often

18
00:00:39,440 --> 00:00:40,719
succeeding

19
00:00:40,719 --> 00:00:43,520
um and this is primarily because current

20
00:00:43,520 --> 00:00:44,079
development

21
00:00:44,079 --> 00:00:46,559
and supply chain processes really often

22
00:00:46,559 --> 00:00:48,640
don't adequately counter attacks

23
00:00:48,640 --> 00:00:50,640
and even when they're fixed they often

24
00:00:50,640 --> 00:00:53,360
don't get deployed in a timely way

25
00:00:53,360 --> 00:00:55,600
but i don't want you to leave without

26
00:00:55,600 --> 00:00:57,280
hope there is hope

27
00:00:57,280 --> 00:00:59,520
there are counter measures to attacks

28
00:00:59,520 --> 00:01:02,000
and there's ongoing work to ease their

29
00:01:02,000 --> 00:01:04,319
deployment

30
00:01:04,319 --> 00:01:07,040
for change we need to change how we

31
00:01:07,040 --> 00:01:09,040
develop software how we select it how we

32
00:01:09,040 --> 00:01:10,000
deploy it

33
00:01:10,000 --> 00:01:12,000
uh things like making sure that things

34
00:01:12,000 --> 00:01:13,600
are secure by default

35
00:01:13,600 --> 00:01:15,920
and we're going to need to continuously

36
00:01:15,920 --> 00:01:17,439
learn from adversaries

37
00:01:17,439 --> 00:01:21,439
and anticipate adversaries

38
00:01:23,520 --> 00:01:24,960
i think that first point about

39
00:01:24,960 --> 00:01:26,640
software's under attack is pretty

40
00:01:26,640 --> 00:01:27,360
obvious

41
00:01:27,360 --> 00:01:30,159
um i mean these are just some logos and

42
00:01:30,159 --> 00:01:30,720
and some

43
00:01:30,720 --> 00:01:33,520
indications of examples of software

44
00:01:33,520 --> 00:01:34,400
under attack

45
00:01:34,400 --> 00:01:36,400
uh the top left symbol there is heart

46
00:01:36,400 --> 00:01:38,159
bleed um

47
00:01:38,159 --> 00:01:40,079
but in fact there's a whole bunch of

48
00:01:40,079 --> 00:01:42,640
different attacks and vulnerabilities

49
00:01:42,640 --> 00:01:45,280
um but of course repositories have been

50
00:01:45,280 --> 00:01:46,560
under attack

51
00:01:46,560 --> 00:01:49,520
um the more recent solarwinds orion

52
00:01:49,520 --> 00:01:50,479
subversion

53
00:01:50,479 --> 00:01:52,399
was caused through a subverted build

54
00:01:52,399 --> 00:01:54,079
environment it didn't matter what the

55
00:01:54,079 --> 00:01:55,920
software developers wrote because the

56
00:01:55,920 --> 00:01:57,759
code they wrote wasn't what was going to

57
00:01:57,759 --> 00:01:59,920
be used for shipping

58
00:01:59,920 --> 00:02:02,320
um there's a an interesting paper called

59
00:02:02,320 --> 00:02:03,840
the backstabbers knife collection that

60
00:02:03,840 --> 00:02:07,680
reviewed over 174 supply chain attacks

61
00:02:07,680 --> 00:02:09,758
found a dominance of type of squatting

62
00:02:09,758 --> 00:02:12,640
attacks for example

63
00:02:14,000 --> 00:02:16,879
a good part of this problem is that most

64
00:02:16,879 --> 00:02:18,640
projects and organizations

65
00:02:18,640 --> 00:02:22,319
simply cannot accurately summarize

66
00:02:22,319 --> 00:02:26,640
what software is within their system

67
00:02:29,760 --> 00:02:32,080
and some of you may say oh hey we use

68
00:02:32,080 --> 00:02:33,200
cloud therefore

69
00:02:33,200 --> 00:02:34,959
somehow we're immune to all this so of

70
00:02:34,959 --> 00:02:36,879
course that's ridiculous

71
00:02:36,879 --> 00:02:39,920
um dan lawrence has this interesting um

72
00:02:39,920 --> 00:02:42,800
article where uh he notes that today's

73
00:02:42,800 --> 00:02:43,680
cloud

74
00:02:43,680 --> 00:02:45,519
infrastructure is still being built out

75
00:02:45,519 --> 00:02:48,000
of duct tape and kite strings

76
00:02:48,000 --> 00:02:51,519
um so he played around with um uh helm3

77
00:02:51,519 --> 00:02:53,040
he looked at a particular helm

78
00:02:53,040 --> 00:02:55,200
chart and tried to answer what you would

79
00:02:55,200 --> 00:02:56,720
think would be simple questions

80
00:02:56,720 --> 00:02:58,560
you know exactly what software was

81
00:02:58,560 --> 00:03:00,400
installed where did it come from

82
00:03:00,400 --> 00:03:03,200
how was it built and he could not answer

83
00:03:03,200 --> 00:03:04,959
those questions

84
00:03:04,959 --> 00:03:08,239
and as a result you know he he made some

85
00:03:08,239 --> 00:03:09,920
interesting observations one of course

86
00:03:09,920 --> 00:03:11,599
is if you think your container scanning

87
00:03:11,599 --> 00:03:13,440
setup is catching everything

88
00:03:13,440 --> 00:03:15,760
think again he found 25 vulnerabilities

89
00:03:15,760 --> 00:03:17,040
in just that one

90
00:03:17,040 --> 00:03:20,080
package um and he noted that hey package

91
00:03:20,080 --> 00:03:21,920
managers add convenience but

92
00:03:21,920 --> 00:03:25,040
every layer adds trust and i would also

93
00:03:25,040 --> 00:03:26,480
add adds time

94
00:03:26,480 --> 00:03:29,599
it can take a long time for a

95
00:03:29,599 --> 00:03:31,599
vulnerability that's been fixed to get

96
00:03:31,599 --> 00:03:35,359
through all those layers

97
00:03:38,319 --> 00:03:39,920
so it's i think it's helpful to think

98
00:03:39,920 --> 00:03:42,640
about how is software developed

99
00:03:42,640 --> 00:03:44,720
um you know and so this is a simple

100
00:03:44,720 --> 00:03:46,879
model of the software supply chain

101
00:03:46,879 --> 00:03:48,959
called a supply chain integrity map as

102
00:03:48,959 --> 00:03:51,040
you can see you know it's a simple map

103
00:03:51,040 --> 00:03:53,519
what's what goes on developers work

104
00:03:53,519 --> 00:03:55,519
within their local environments

105
00:03:55,519 --> 00:03:58,080
then send their changes and so on off to

106
00:03:58,080 --> 00:04:00,720
source and data repositories

107
00:04:00,720 --> 00:04:03,599
then they that software gets built and

108
00:04:03,599 --> 00:04:04,640
verified

109
00:04:04,640 --> 00:04:06,720
eventually it's approved for release to

110
00:04:06,720 --> 00:04:08,319
be sent out to various package

111
00:04:08,319 --> 00:04:11,360
repositories and distribution platforms

112
00:04:11,360 --> 00:04:13,519
uh hopefully they're that's assessed in

113
00:04:13,519 --> 00:04:14,480
various ways

114
00:04:14,480 --> 00:04:15,840
both the builds and the eventual

115
00:04:15,840 --> 00:04:17,918
packages

116
00:04:17,918 --> 00:04:20,160
finally people select and acquire them

117
00:04:20,160 --> 00:04:21,358
and then bring them into their

118
00:04:21,358 --> 00:04:22,639
environments to be

119
00:04:22,639 --> 00:04:25,040
uh to go through the cycle all again and

120
00:04:25,040 --> 00:04:25,759
eventually

121
00:04:25,759 --> 00:04:29,520
things get deployed out to operations

122
00:04:29,520 --> 00:04:30,960
and of course there are cycles here

123
00:04:30,960 --> 00:04:32,880
because smaller components get

124
00:04:32,880 --> 00:04:34,639
brought into larger components which get

125
00:04:34,639 --> 00:04:37,840
into larger components

126
00:04:38,880 --> 00:04:40,800
but of course if you look at this from

127
00:04:40,800 --> 00:04:42,160
the point of view

128
00:04:42,160 --> 00:04:45,120
of an attacker that's a system and

129
00:04:45,120 --> 00:04:46,960
systems can be attacked

130
00:04:46,960 --> 00:04:48,560
and a great way to learn how to attack

131
00:04:48,560 --> 00:04:50,160
them is to look at those parts

132
00:04:50,160 --> 00:04:53,199
and see how those various parts of the

133
00:04:53,199 --> 00:04:54,720
system can be attacked

134
00:04:54,720 --> 00:04:57,120
and those these red squares are just

135
00:04:57,120 --> 00:04:59,199
sample kinds of attacks and there's a

136
00:04:59,199 --> 00:05:00,240
lot of them

137
00:05:00,240 --> 00:05:02,880
uh typo squatting which is basically

138
00:05:02,880 --> 00:05:03,759
confusing

139
00:05:03,759 --> 00:05:06,880
uh acquirers and developers uh

140
00:05:06,880 --> 00:05:08,240
into thinking they're installing one

141
00:05:08,240 --> 00:05:10,240
package when they're installing another

142
00:05:10,240 --> 00:05:12,400
dependency confusion where they think

143
00:05:12,400 --> 00:05:14,000
it's the software's coming from one

144
00:05:14,000 --> 00:05:15,039
repository

145
00:05:15,039 --> 00:05:17,039
but it's actually coming from another

146
00:05:17,039 --> 00:05:18,960
there's malicious software

147
00:05:18,960 --> 00:05:22,080
um there's all sorts of

148
00:05:22,080 --> 00:05:24,800
vulnerabilities that go in as part of

149
00:05:24,800 --> 00:05:25,759
developments

150
00:05:25,759 --> 00:05:27,840
and just there's a whole host of

151
00:05:27,840 --> 00:05:29,759
problems

152
00:05:29,759 --> 00:05:31,680
but i don't want you to leave with oh my

153
00:05:31,680 --> 00:05:34,160
gosh there are so many problems

154
00:05:34,160 --> 00:05:36,880
because in fact there are counter

155
00:05:36,880 --> 00:05:38,080
measures

156
00:05:38,080 --> 00:05:40,000
and these are again just a sample of

157
00:05:40,000 --> 00:05:41,120
counter measures

158
00:05:41,120 --> 00:05:43,759
various approaches where you can do

159
00:05:43,759 --> 00:05:44,720
various things

160
00:05:44,720 --> 00:05:48,000
to counter some of those attacks i

161
00:05:48,000 --> 00:05:51,039
certainly can't talk about all of them

162
00:05:51,039 --> 00:05:53,199
but a trivial one i'll note for example

163
00:05:53,199 --> 00:05:54,160
is you know

164
00:05:54,160 --> 00:05:55,759
one of the big problems right now is

165
00:05:55,759 --> 00:05:57,759
developers often don't understand a lot

166
00:05:57,759 --> 00:06:00,319
of things nobody teaches them in classes

167
00:06:00,319 --> 00:06:02,080
and so a little education and training

168
00:06:02,080 --> 00:06:03,919
can go a long way

169
00:06:03,919 --> 00:06:06,319
and of course that's not enough there's

170
00:06:06,319 --> 00:06:08,319
various tools you can add to say the

171
00:06:08,319 --> 00:06:10,800
build verification processes and so on

172
00:06:10,800 --> 00:06:13,600
to really help

173
00:06:16,479 --> 00:06:19,120
there's no silver bullet there is no one

174
00:06:19,120 --> 00:06:20,000
thing if you do

175
00:06:20,000 --> 00:06:22,479
the one thing congratulations you have

176
00:06:22,479 --> 00:06:23,680
solved all problems

177
00:06:23,680 --> 00:06:26,240
that's not how it works instead you need

178
00:06:26,240 --> 00:06:26,960
to bring

179
00:06:26,960 --> 00:06:29,440
a variety of approaches to bear to

180
00:06:29,440 --> 00:06:31,840
counter the different kinds of attacks

181
00:06:31,840 --> 00:06:34,960
that attackers can do

182
00:06:34,960 --> 00:06:36,800
so what can open source software

183
00:06:36,800 --> 00:06:38,639
developers and users do

184
00:06:38,639 --> 00:06:40,560
well if you're not already doing these

185
00:06:40,560 --> 00:06:42,639
already here's some first starting steps

186
00:06:42,639 --> 00:06:44,479
you'll learn how to develop and acquire

187
00:06:44,479 --> 00:06:45,680
secure software

188
00:06:45,680 --> 00:06:48,479
uh if you don't have if you if nothing

189
00:06:48,479 --> 00:06:48,880
else

190
00:06:48,880 --> 00:06:50,560
take a look at the secure software

191
00:06:50,560 --> 00:06:52,080
development fundamentals course it's

192
00:06:52,080 --> 00:06:52,639
free

193
00:06:52,639 --> 00:06:54,800
it's on edx go take it there's others

194
00:06:54,800 --> 00:06:56,319
take those

195
00:06:56,319 --> 00:06:59,599
but learn how to do this stuff make the

196
00:06:59,599 --> 00:07:01,680
software secure by default

197
00:07:01,680 --> 00:07:04,160
make it easy to use securely harden it

198
00:07:04,160 --> 00:07:05,120
up

199
00:07:05,120 --> 00:07:07,599
against attacks if you're doing open

200
00:07:07,599 --> 00:07:08,720
source software development

201
00:07:08,720 --> 00:07:10,880
work to earn an open source i'm sorry

202
00:07:10,880 --> 00:07:14,400
cii best practices badge there's the url

203
00:07:14,400 --> 00:07:16,800
use many tools to find vulnerabilities

204
00:07:16,800 --> 00:07:18,160
in your build and verification

205
00:07:18,160 --> 00:07:18,880
environment

206
00:07:18,880 --> 00:07:21,039
no tools will not find everything but

207
00:07:21,039 --> 00:07:22,400
they're helpful as

208
00:07:22,400 --> 00:07:25,599
part of a solution of course monitor for

209
00:07:25,599 --> 00:07:26,880
known vulnerabilities

210
00:07:26,880 --> 00:07:29,919
in the in whatever you depend on so that

211
00:07:29,919 --> 00:07:31,440
you can immediately respond and

212
00:07:31,440 --> 00:07:33,199
immediately update

213
00:07:33,199 --> 00:07:34,800
of course in order to do that rapid

214
00:07:34,800 --> 00:07:36,800
update you need to use package managers

215
00:07:36,800 --> 00:07:39,440
and automated tools so you can rapidly

216
00:07:39,440 --> 00:07:40,400
respond

217
00:07:40,400 --> 00:07:42,240
when a vulnerability is found and i

218
00:07:42,240 --> 00:07:43,919
mentioned these tests those need to

219
00:07:43,919 --> 00:07:45,360
include negative tests

220
00:07:45,360 --> 00:07:46,960
in other words there are some things

221
00:07:46,960 --> 00:07:48,560
that should not be allowed

222
00:07:48,560 --> 00:07:50,960
test for that make sure they stay not

223
00:07:50,960 --> 00:07:51,599
allowed

224
00:07:51,599 --> 00:07:52,960
this is something that people often

225
00:07:52,960 --> 00:07:55,680
forget particularly if they're using tdd

226
00:07:55,680 --> 00:07:57,759
finally evaluate software before you

227
00:07:57,759 --> 00:07:59,599
select it you know look for typo

228
00:07:59,599 --> 00:08:01,599
squatting is that really the right name

229
00:08:01,599 --> 00:08:03,440
is that software malicious do you have

230
00:08:03,440 --> 00:08:06,560
reason to believe it secure

231
00:08:07,039 --> 00:08:08,960
and when you're evaluating here's some

232
00:08:08,960 --> 00:08:10,639
sample things to consider

233
00:08:10,639 --> 00:08:12,400
is it easy to use securely is there

234
00:08:12,400 --> 00:08:14,000
evidence that developers work to make it

235
00:08:14,000 --> 00:08:14,639
secure

236
00:08:14,639 --> 00:08:17,360
is it maintained has significant use

237
00:08:17,360 --> 00:08:18,479
what's the license

238
00:08:18,479 --> 00:08:21,680
um if it has a not an open source

239
00:08:21,680 --> 00:08:22,240
license

240
00:08:22,240 --> 00:08:24,720
shockingly it's not going to be

241
00:08:24,720 --> 00:08:26,400
collaboratively developed like an open

242
00:08:26,400 --> 00:08:28,000
source project

243
00:08:28,000 --> 00:08:29,840
if it's important what is your own

244
00:08:29,840 --> 00:08:32,799
evaluation of it

245
00:08:32,799 --> 00:08:35,279
the good news is lots of folks are

246
00:08:35,279 --> 00:08:36,479
working to make

247
00:08:36,479 --> 00:08:39,839
things better the open ssf for example

248
00:08:39,839 --> 00:08:41,919
open source security foundation

249
00:08:41,919 --> 00:08:43,679
uh is working on this there's a number

250
00:08:43,679 --> 00:08:45,360
of other projects here in fact this is a

251
00:08:45,360 --> 00:08:48,320
short list there's many more uh uh

252
00:08:48,320 --> 00:08:50,000
projects and foundations and

253
00:08:50,000 --> 00:08:52,839
organizations working to make things

254
00:08:52,839 --> 00:08:55,519
better

255
00:08:55,519 --> 00:08:58,240
so if you are an open source software

256
00:08:58,240 --> 00:08:59,839
developer user

257
00:08:59,839 --> 00:09:01,279
you need to do all those things i

258
00:09:01,279 --> 00:09:02,800
mentioned earlier but you also need to

259
00:09:02,800 --> 00:09:03,839
prep for the future

260
00:09:03,839 --> 00:09:05,839
here's some things that i see coming

261
00:09:05,839 --> 00:09:07,279
down the pike

262
00:09:07,279 --> 00:09:10,640
um you need to start being prepared to

263
00:09:10,640 --> 00:09:12,640
generate and request software build

264
00:09:12,640 --> 00:09:15,200
materials uh there's a lot of pressure

265
00:09:15,200 --> 00:09:17,600
in even high levels of government and so

266
00:09:17,600 --> 00:09:20,000
on to start saying we need to know

267
00:09:20,000 --> 00:09:21,680
what's in our software

268
00:09:21,680 --> 00:09:23,839
and we need to be prepared to answer

269
00:09:23,839 --> 00:09:27,680
that question it's a reasonable question

270
00:09:27,680 --> 00:09:29,120
look for more information about the

271
00:09:29,120 --> 00:09:30,800
software before you select it there's

272
00:09:30,800 --> 00:09:32,720
organizations like those within the open

273
00:09:32,720 --> 00:09:33,440
ssf

274
00:09:33,440 --> 00:09:36,560
that are working to improve information

275
00:09:36,560 --> 00:09:37,839
about the software

276
00:09:37,839 --> 00:09:40,240
uh that you're to improve information

277
00:09:40,240 --> 00:09:41,519
about the software so you can have

278
00:09:41,519 --> 00:09:43,360
better information when you select it

279
00:09:43,360 --> 00:09:45,360
i think verified reproducible builds are

280
00:09:45,360 --> 00:09:47,040
important that's particularly useful for

281
00:09:47,040 --> 00:09:47,920
countering

282
00:09:47,920 --> 00:09:51,040
uh subverted builds um improved

283
00:09:51,040 --> 00:09:53,440
cryptographic signature verification

284
00:09:53,440 --> 00:09:55,519
um you know we've had this for a long

285
00:09:55,519 --> 00:09:56,959
time but it's challenging to do

286
00:09:56,959 --> 00:09:58,080
verification

287
00:09:58,080 --> 00:10:01,200
i think sigstor has a lot of promise um

288
00:10:01,200 --> 00:10:02,640
but you know we'll see but no matter

289
00:10:02,640 --> 00:10:04,640
what i think this is something we need

290
00:10:04,640 --> 00:10:06,480
to see more of

291
00:10:06,480 --> 00:10:09,279
more generally integrity attestation

292
00:10:09,279 --> 00:10:11,200
approaches like in toto

293
00:10:11,200 --> 00:10:13,839
and increasing use of memory safe and

294
00:10:13,839 --> 00:10:15,760
more generally safe languages

295
00:10:15,760 --> 00:10:18,560
and more broadly working with others to

296
00:10:18,560 --> 00:10:19,519
help things

297
00:10:19,519 --> 00:10:22,800
to help make things better there's a lot

298
00:10:22,800 --> 00:10:23,839
of opportunity

299
00:10:23,839 --> 00:10:25,519
and frankly there are folks who could

300
00:10:25,519 --> 00:10:27,120
really use your help to

301
00:10:27,120 --> 00:10:30,880
speed these up so let me do a quick

302
00:10:30,880 --> 00:10:31,519
recap

303
00:10:31,519 --> 00:10:33,120
i came and said there are four key

304
00:10:33,120 --> 00:10:34,640
points i wanted to talk about

305
00:10:34,640 --> 00:10:37,839
attacks weakness hope change

306
00:10:37,839 --> 00:10:40,480
and i hope that you'll see that it's yes

307
00:10:40,480 --> 00:10:42,399
they're attacks and yes there's weakness

308
00:10:42,399 --> 00:10:44,640
but there is hope and but will need to

309
00:10:44,640 --> 00:10:48,000
change to take advantage of that hope

310
00:10:48,000 --> 00:10:50,320
a quick parting thought developing and

311
00:10:50,320 --> 00:10:52,320
deploying secure software is a journey

312
00:10:52,320 --> 00:10:52,959
of learning

313
00:10:52,959 --> 00:10:56,079
and improving it's not a single event

314
00:10:56,079 --> 00:10:58,560
but that's okay we just need to get

315
00:10:58,560 --> 00:10:59,279
started

316
00:10:59,279 --> 00:11:03,519
thank you very much for your time

