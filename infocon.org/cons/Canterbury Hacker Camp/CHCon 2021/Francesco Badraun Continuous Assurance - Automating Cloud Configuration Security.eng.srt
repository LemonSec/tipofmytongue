1
00:00:05,040 --> 00:00:07,839
i'm francesco bedrown um i originally

2
00:00:07,839 --> 00:00:09,519
did this talk at isig wellington you

3
00:00:09,519 --> 00:00:11,440
should come along it's pretty fun it's

4
00:00:11,440 --> 00:00:13,120
kind of like a local meetup for security

5
00:00:13,120 --> 00:00:16,160
people um they have chapters around

6
00:00:16,160 --> 00:00:17,520
around new zealand like auckland and

7
00:00:17,520 --> 00:00:18,960
christchurch and

8
00:00:18,960 --> 00:00:21,279
wellington obviously um

9
00:00:21,279 --> 00:00:22,080
so

10
00:00:22,080 --> 00:00:23,600
i originally did this talk and it took

11
00:00:23,600 --> 00:00:26,080
about 45 minutes and i cut it down so

12
00:00:26,080 --> 00:00:28,160
it might be a bit dynamic so depending

13
00:00:28,160 --> 00:00:29,760
on what happens i might have a gift for

14
00:00:29,760 --> 00:00:30,880
you at the end

15
00:00:30,880 --> 00:00:32,399
um

16
00:00:32,399 --> 00:00:34,960
yeah so my name is francesco

17
00:00:34,960 --> 00:00:38,000
you can call me franciacon

18
00:00:38,000 --> 00:00:41,760
thank you yeah yeah you're good

19
00:00:41,760 --> 00:00:44,000
no more like francis continuous

20
00:00:44,000 --> 00:00:45,840
assurance

21
00:00:45,840 --> 00:00:47,600
yeah

22
00:00:47,600 --> 00:00:50,000
okay that's as good as it'll get so um

23
00:00:50,000 --> 00:00:52,640
you can leave now um yes i'll just like

24
00:00:52,640 --> 00:00:54,000
talk roughly about what continuous

25
00:00:54,000 --> 00:00:55,760
assurance is it's a relatively new

26
00:00:55,760 --> 00:00:57,520
concept so i'm pretty sure a lot of

27
00:00:57,520 --> 00:01:00,160
people know about it um i'll explain why

28
00:01:00,160 --> 00:01:02,320
i think personally pretty much everyone

29
00:01:02,320 --> 00:01:04,080
should be using it and if you're not it

30
00:01:04,080 --> 00:01:05,760
might kind of give you some reasons to

31
00:01:05,760 --> 00:01:07,439
start looking into it

32
00:01:07,439 --> 00:01:09,119
i'll look at the components of

33
00:01:09,119 --> 00:01:11,119
continuous assurance kind of how you can

34
00:01:11,119 --> 00:01:13,040
make it more modular and kind of build

35
00:01:13,040 --> 00:01:16,720
your own continuous insurance capability

36
00:01:16,720 --> 00:01:19,040
then i'll talk through my experience

37
00:01:19,040 --> 00:01:21,280
having a first crack of it

38
00:01:21,280 --> 00:01:22,240
didn't go

39
00:01:22,240 --> 00:01:24,400
too smoothly so you know i'll give you

40
00:01:24,400 --> 00:01:26,400
some of my recommendations and

41
00:01:26,400 --> 00:01:28,799
challenges that i found along the way um

42
00:01:28,799 --> 00:01:30,079
yeah and then i just wrap it up at the

43
00:01:30,079 --> 00:01:31,360
end so

44
00:01:31,360 --> 00:01:32,799
real quick my background i've been in

45
00:01:32,799 --> 00:01:35,360
security for five years um i started as

46
00:01:35,360 --> 00:01:37,119
a security engineer so doing things like

47
00:01:37,119 --> 00:01:39,520
scripting with python working with wafs

48
00:01:39,520 --> 00:01:41,439
cdn

49
00:01:41,439 --> 00:01:43,759
just looking after the cloud environment

50
00:01:43,759 --> 00:01:46,000
of our company and then i moved into a

51
00:01:46,000 --> 00:01:47,600
security specialist

52
00:01:47,600 --> 00:01:49,520
position where it's kind of like kind of

53
00:01:49,520 --> 00:01:51,200
architectee

54
00:01:51,200 --> 00:01:52,399
and that's where i worked on this

55
00:01:52,399 --> 00:01:53,360
project that i'm going to talk about

56
00:01:53,360 --> 00:01:54,720
later on the

57
00:01:54,720 --> 00:01:56,240
presentation

58
00:01:56,240 --> 00:01:57,600
and then more recently i've become a

59
00:01:57,600 --> 00:02:00,479
consultant at zx security um

60
00:02:00,479 --> 00:02:03,280
love you guys uh

61
00:02:03,280 --> 00:02:05,040
yeah and i've worked for continued

62
00:02:05,040 --> 00:02:07,439
insurance for about a year

63
00:02:07,439 --> 00:02:10,000
painfully um

64
00:02:10,000 --> 00:02:11,840
it's not it wasn't like fully on the

65
00:02:11,840 --> 00:02:13,680
technical capability and building it all

66
00:02:13,680 --> 00:02:15,599
a lot of it was kind of

67
00:02:15,599 --> 00:02:17,840
more challenges related to

68
00:02:17,840 --> 00:02:19,360
the environment i was in versus the

69
00:02:19,360 --> 00:02:20,640
actual continuous assurance stuff so

70
00:02:20,640 --> 00:02:23,040
i'll talk more about that but um

71
00:02:23,040 --> 00:02:25,280
yeah i i've i've done it enough to know

72
00:02:25,280 --> 00:02:27,840
it's difficult so it's not it's not a

73
00:02:27,840 --> 00:02:29,360
piece of cake

74
00:02:29,360 --> 00:02:30,319
um

75
00:02:30,319 --> 00:02:31,760
yeah just some hobby stuff you know i'm

76
00:02:31,760 --> 00:02:33,280
a coffee geek

77
00:02:33,280 --> 00:02:34,959
i like programming in python and doing

78
00:02:34,959 --> 00:02:37,680
web stuff uh playing around with music

79
00:02:37,680 --> 00:02:39,840
production i always you know pull out

80
00:02:39,840 --> 00:02:40,959
pull out the

81
00:02:40,959 --> 00:02:42,640
digital audio workstation and have a

82
00:02:42,640 --> 00:02:43,680
have a little go playing on some

83
00:02:43,680 --> 00:02:45,120
instruments but i never actually managed

84
00:02:45,120 --> 00:02:46,640
to finish a song

85
00:02:46,640 --> 00:02:48,400
so i can't really show you anything but

86
00:02:48,400 --> 00:02:51,280
i also do a bit of gaming so

87
00:02:51,280 --> 00:02:53,040
yeah i've watched my favorite game it's

88
00:02:53,040 --> 00:02:54,959
i know down and overwatch and coffee any

89
00:02:54,959 --> 00:02:56,160
day

90
00:02:56,160 --> 00:02:57,280
um

91
00:02:57,280 --> 00:02:58,879
yeah so just a quick overview of what

92
00:02:58,879 --> 00:03:00,480
connectors assurance is

93
00:03:00,480 --> 00:03:01,920
basically the core issue is

94
00:03:01,920 --> 00:03:06,159
misconfigured infrastructure so

95
00:03:06,159 --> 00:03:07,920
misconfigured infrastructure is the

96
00:03:07,920 --> 00:03:10,000
number one cause

97
00:03:10,000 --> 00:03:12,239
of cloud data breaches i know i know it

98
00:03:12,239 --> 00:03:14,800
sounds quite clickbaity but

99
00:03:14,800 --> 00:03:16,319
it's real it's you know i got two data

100
00:03:16,319 --> 00:03:19,599
sources for that at least for 2020. um

101
00:03:19,599 --> 00:03:21,040
it was the number one cause at least of

102
00:03:21,040 --> 00:03:26,480
the first vector of an attack chain um

103
00:03:26,480 --> 00:03:28,239
in line with

104
00:03:28,239 --> 00:03:30,480
i think yeah another 19 of compromised

105
00:03:30,480 --> 00:03:32,080
credentials so you know that being

106
00:03:32,080 --> 00:03:33,280
pretty common

107
00:03:33,280 --> 00:03:34,560
you probably didn't realize that this is

108
00:03:34,560 --> 00:03:37,280
also a really common thing

109
00:03:37,280 --> 00:03:39,200
it's also not hard to do so in this

110
00:03:39,200 --> 00:03:40,400
graph

111
00:03:40,400 --> 00:03:42,799
you can kind of see it i hope the bottom

112
00:03:42,799 --> 00:03:43,760
right

113
00:03:43,760 --> 00:03:45,760
box kind of shows that

114
00:03:45,760 --> 00:03:48,080
it's really easy to do it's on the

115
00:03:48,080 --> 00:03:51,120
lowest side of the attack and it's also

116
00:03:51,120 --> 00:03:52,959
really prevalent like it it's quite

117
00:03:52,959 --> 00:03:54,000
common

118
00:03:54,000 --> 00:03:57,280
so that's that's a bit of an issue

119
00:03:57,280 --> 00:03:59,360
um the goals of continuous assurance is

120
00:03:59,360 --> 00:04:01,760
to provide automated remediation of

121
00:04:01,760 --> 00:04:03,920
insecure infrastructure

122
00:04:03,920 --> 00:04:06,000
so you're not getting an alert and you

123
00:04:06,000 --> 00:04:07,120
know trying to figure out where it is

124
00:04:07,120 --> 00:04:08,720
and fix it manually

125
00:04:08,720 --> 00:04:10,319
hopefully if you've set it up right it's

126
00:04:10,319 --> 00:04:12,720
done for you and that provides a bunch

127
00:04:12,720 --> 00:04:14,959
of benefits that i'll talk about later

128
00:04:14,959 --> 00:04:17,358
and it also gives you assurance so

129
00:04:17,358 --> 00:04:18,560
really good for the risk and compliance

130
00:04:18,560 --> 00:04:20,880
people um it gives you assurance that

131
00:04:20,880 --> 00:04:23,040
you have controls and those controls

132
00:04:23,040 --> 00:04:23,919
exist

133
00:04:23,919 --> 00:04:26,880
and its operating effectiveness is x

134
00:04:26,880 --> 00:04:28,720
and and you know what's happening in

135
00:04:28,720 --> 00:04:30,720
real time at any point

136
00:04:30,720 --> 00:04:32,479
um and it's done through a mix of kind

137
00:04:32,479 --> 00:04:34,160
of monitoring stuff and enforcing

138
00:04:34,160 --> 00:04:35,600
configurations

139
00:04:35,600 --> 00:04:37,120
um so an example of what you'd want to

140
00:04:37,120 --> 00:04:39,520
use uh continuous insurance for is like

141
00:04:39,520 --> 00:04:42,479
data protection stuff um

142
00:04:42,479 --> 00:04:44,560
in aws is this thing called an s3 bucket

143
00:04:44,560 --> 00:04:46,880
it's basically just like a really

144
00:04:46,880 --> 00:04:49,520
abstracted way of storing data so you

145
00:04:49,520 --> 00:04:51,199
upload files to it and then you retrieve

146
00:04:51,199 --> 00:04:52,240
them

147
00:04:52,240 --> 00:04:54,160
and for encryption for example there's

148
00:04:54,160 --> 00:04:55,759
multiple things you can do for that you

149
00:04:55,759 --> 00:04:57,440
can enable default encryption and it

150
00:04:57,440 --> 00:04:59,120
basically turns on a setting on the

151
00:04:59,120 --> 00:05:00,960
bucket so every time you put an object

152
00:05:00,960 --> 00:05:02,320
into the bucket it's automatically

153
00:05:02,320 --> 00:05:04,639
encrypted at rest

154
00:05:04,639 --> 00:05:06,479
and you can you can enforce tls so you

155
00:05:06,479 --> 00:05:08,560
can enforce every time you're uploading

156
00:05:08,560 --> 00:05:10,320
those objects to the bucket it's through

157
00:05:10,320 --> 00:05:11,919
an encrypted channel

158
00:05:11,919 --> 00:05:13,120
um

159
00:05:13,120 --> 00:05:14,639
you can enforce things like access

160
00:05:14,639 --> 00:05:16,639
control so

161
00:05:16,639 --> 00:05:18,240
make sure the bucket's not public if

162
00:05:18,240 --> 00:05:20,000
it's not supposed to be

163
00:05:20,000 --> 00:05:21,440
and just look in the bucket policy to

164
00:05:21,440 --> 00:05:23,280
see if that's good

165
00:05:23,280 --> 00:05:24,479
another thing you might want to look at

166
00:05:24,479 --> 00:05:26,880
is backup of your data so with s3 you

167
00:05:26,880 --> 00:05:28,000
can do this thing called object

168
00:05:28,000 --> 00:05:30,320
versioning so it just stores every

169
00:05:30,320 --> 00:05:32,080
object version every time you upload to

170
00:05:32,080 --> 00:05:33,199
it

171
00:05:33,199 --> 00:05:35,039
and you can do cross region replication

172
00:05:35,039 --> 00:05:36,240
and these are all settings within the

173
00:05:36,240 --> 00:05:38,160
bucket that you can automatically kind

174
00:05:38,160 --> 00:05:40,560
of check for through automation

175
00:05:40,560 --> 00:05:42,800
um so these things are really quite easy

176
00:05:42,800 --> 00:05:44,160
to look at

177
00:05:44,160 --> 00:05:45,120
um

178
00:05:45,120 --> 00:05:47,039
it's part of devsecops i'm not going to

179
00:05:47,039 --> 00:05:48,479
talk about devsecops because i think

180
00:05:48,479 --> 00:05:49,759
enough people have

181
00:05:49,759 --> 00:05:51,280
if you haven't heard of it it's actually

182
00:05:51,280 --> 00:05:52,880
quite interesting and i suggest learning

183
00:05:52,880 --> 00:05:54,880
more about it but basically this is part

184
00:05:54,880 --> 00:05:56,240
of the devshek ops movement where you

185
00:05:56,240 --> 00:05:58,160
want to encourage developers to create

186
00:05:58,160 --> 00:06:00,720
secure stuff from the very beginning so

187
00:06:00,720 --> 00:06:02,400
from the very point you deploy

188
00:06:02,400 --> 00:06:03,919
infrastructure it's secure you're not

189
00:06:03,919 --> 00:06:05,520
kind of reviewing stuff after the fact

190
00:06:05,520 --> 00:06:06,960
and you know finding that there's a

191
00:06:06,960 --> 00:06:08,560
bunch of vulnerabilities and they need

192
00:06:08,560 --> 00:06:09,919
to go back and change it and becomes

193
00:06:09,919 --> 00:06:12,080
more expensive um

194
00:06:12,080 --> 00:06:13,600
the cool thing about this though is it

195
00:06:13,600 --> 00:06:16,000
also gives you the ongoing maintenance

196
00:06:16,000 --> 00:06:17,680
of the infrastructure and the assurance

197
00:06:17,680 --> 00:06:19,199
that it's still secure still secure you

198
00:06:19,199 --> 00:06:21,840
know after updates and updates and

199
00:06:21,840 --> 00:06:23,600
changes within the environment

200
00:06:23,600 --> 00:06:24,720
um

201
00:06:24,720 --> 00:06:27,680
like i said it's quite a new concept so

202
00:06:27,680 --> 00:06:29,280
i kind of struggled to find more

203
00:06:29,280 --> 00:06:30,639
information about it and kind of more

204
00:06:30,639 --> 00:06:32,319
names about it

205
00:06:32,319 --> 00:06:33,919
so one way i've kind of described it as

206
00:06:33,919 --> 00:06:35,840
just cloud wrangling i think that

207
00:06:35,840 --> 00:06:37,600
describes my experience personally

208
00:06:37,600 --> 00:06:39,280
pretty accurately

209
00:06:39,280 --> 00:06:40,400
um

210
00:06:40,400 --> 00:06:41,440
yeah so why would you want to use

211
00:06:41,440 --> 00:06:44,800
continuous assurance um basically

212
00:06:44,800 --> 00:06:46,240
it's part of a well-managed cloud it's

213
00:06:46,240 --> 00:06:48,960
part of being mature in the cloud

214
00:06:48,960 --> 00:06:51,360
there is this concept in aws called the

215
00:06:51,360 --> 00:06:53,680
shared responsibility model where you

216
00:06:53,680 --> 00:06:55,280
know the infrastructure the hardware the

217
00:06:55,280 --> 00:06:56,639
switches the

218
00:06:56,639 --> 00:06:58,479
data transferring between the services

219
00:06:58,479 --> 00:07:01,199
are all managed by aws but it's your job

220
00:07:01,199 --> 00:07:03,919
as a customer to manage how secure that

221
00:07:03,919 --> 00:07:05,599
configuration of the infrastructure is

222
00:07:05,599 --> 00:07:07,199
they give you all the tools

223
00:07:07,199 --> 00:07:09,599
but they kind of don't really tell you

224
00:07:09,599 --> 00:07:11,680
how to do it succinctly

225
00:07:11,680 --> 00:07:14,080
so it's really easy to to go really

226
00:07:14,080 --> 00:07:15,919
wrong and so this goes continuous

227
00:07:15,919 --> 00:07:17,440
insurance goes like a really long way

228
00:07:17,440 --> 00:07:18,639
towards

229
00:07:18,639 --> 00:07:20,800
providing this you know secure in the

230
00:07:20,800 --> 00:07:23,440
cloud my responsibility as a customer

231
00:07:23,440 --> 00:07:25,759
does a pretty good job of that and it's

232
00:07:25,759 --> 00:07:27,280
really good at kind of telling you what

233
00:07:27,280 --> 00:07:29,199
you manage what you maintain

234
00:07:29,199 --> 00:07:30,720
you know what if you get cyber insurance

235
00:07:30,720 --> 00:07:31,759
and they ask you well what do you have

236
00:07:31,759 --> 00:07:33,280
in your environment if you don't have

237
00:07:33,280 --> 00:07:34,960
something like this you don't really

238
00:07:34,960 --> 00:07:35,840
know

239
00:07:35,840 --> 00:07:37,120
um

240
00:07:37,120 --> 00:07:39,120
it helps with billing it helps with

241
00:07:39,120 --> 00:07:40,720
compliance reasons it helps with you

242
00:07:40,720 --> 00:07:42,400
know optimization maybe you want to

243
00:07:42,400 --> 00:07:43,680
reduce your resources all that kind of

244
00:07:43,680 --> 00:07:45,039
stuff

245
00:07:45,039 --> 00:07:46,319
and it helps with scale so really

246
00:07:46,319 --> 00:07:48,240
important in large companies but also

247
00:07:48,240 --> 00:07:51,360
like very small startups

248
00:07:51,360 --> 00:07:52,879
if you set this up right and you set it

249
00:07:52,879 --> 00:07:55,520
up once it should work throughout the

250
00:07:55,520 --> 00:07:56,960
scale of your cloud environment you

251
00:07:56,960 --> 00:07:57,759
shouldn't have to make many

252
00:07:57,759 --> 00:07:59,759
modifications it should just scale with

253
00:07:59,759 --> 00:08:02,720
the scale of your environment um

254
00:08:02,720 --> 00:08:04,080
you know when when you're a lot smaller

255
00:08:04,080 --> 00:08:06,000
you tend to start doing manual reviews

256
00:08:06,000 --> 00:08:08,240
of infrastructure kind of a pull request

257
00:08:08,240 --> 00:08:09,759
time or just

258
00:08:09,759 --> 00:08:11,199
you know a project team is about to go

259
00:08:11,199 --> 00:08:12,479
live and you kind of have have a look

260
00:08:12,479 --> 00:08:14,639
over it that works to a certain extent

261
00:08:14,639 --> 00:08:15,840
but you know as soon as you start

262
00:08:15,840 --> 00:08:17,039
getting a lot bigger and a large

263
00:08:17,039 --> 00:08:19,440
enterprise you know 4 000 employees that

264
00:08:19,440 --> 00:08:21,840
becomes very impractical not possible

265
00:08:21,840 --> 00:08:24,879
but very difficult and time consuming

266
00:08:24,879 --> 00:08:27,039
and so just supports like innova uh

267
00:08:27,039 --> 00:08:29,199
innovation speed you know developers can

268
00:08:29,199 --> 00:08:30,560
do these things on their own without

269
00:08:30,560 --> 00:08:33,360
having to introduce security as a

270
00:08:33,360 --> 00:08:34,719
you know roadblock they can kind of just

271
00:08:34,719 --> 00:08:36,958
do it on their own self-service and it's

272
00:08:36,958 --> 00:08:38,640
really useful for everyone

273
00:08:38,640 --> 00:08:41,760
um it helps auditing so much so i'm not

274
00:08:41,760 --> 00:08:43,279
actually a risk and compliance kind of

275
00:08:43,279 --> 00:08:45,600
person i i personally don't like that

276
00:08:45,600 --> 00:08:48,160
type of work have immense respect for

277
00:08:48,160 --> 00:08:50,080
people who do it but um i just

278
00:08:50,080 --> 00:08:51,680
personally don't like it but

279
00:08:51,680 --> 00:08:53,440
um if i was

280
00:08:53,440 --> 00:08:54,800
in that role i would definitely want

281
00:08:54,800 --> 00:08:56,640
something like this um

282
00:08:56,640 --> 00:08:57,519
you know you've got a bunch of

283
00:08:57,519 --> 00:08:58,880
frameworks that you have to comply

284
00:08:58,880 --> 00:09:01,279
against for various reasons you know iso

285
00:09:01,279 --> 00:09:08,720
27001 soc2 pci dss lmao gdpr lol nzsim

286
00:09:08,720 --> 00:09:12,000
ncism um

287
00:09:12,000 --> 00:09:13,680
those things are very difficult to kind

288
00:09:13,680 --> 00:09:15,360
of keep a record of what you've done to

289
00:09:15,360 --> 00:09:16,959
implement controls for that and then

290
00:09:16,959 --> 00:09:20,800
prove it i'll talk more about it um

291
00:09:20,800 --> 00:09:23,200
in this next section actually uh

292
00:09:23,200 --> 00:09:25,680
so manual versus automated um

293
00:09:25,680 --> 00:09:27,279
manual being like the legacy way of

294
00:09:27,279 --> 00:09:29,600
doing auditing um i haven't

295
00:09:29,600 --> 00:09:31,279
as i said i wasn't in you know risking

296
00:09:31,279 --> 00:09:33,600
compliance type roles so i don't know it

297
00:09:33,600 --> 00:09:36,320
end-to-end and in depth but i know

298
00:09:36,320 --> 00:09:37,920
enough that i think

299
00:09:37,920 --> 00:09:40,240
this is how it works um basically an

300
00:09:40,240 --> 00:09:42,640
auditor asks you where your controls how

301
00:09:42,640 --> 00:09:44,399
have you implemented them so you you

302
00:09:44,399 --> 00:09:46,480
take a snapshot and time of your cloud

303
00:09:46,480 --> 00:09:48,480
environment you kind of show them what

304
00:09:48,480 --> 00:09:50,800
it looks like kind of what controls have

305
00:09:50,800 --> 00:09:52,160
been implemented on those things and

306
00:09:52,160 --> 00:09:53,760
then that's it for the year or for the

307
00:09:53,760 --> 00:09:55,360
two years and then they come again the

308
00:09:55,360 --> 00:09:57,040
next year and then you know suddenly

309
00:09:57,040 --> 00:09:58,800
everything's changed and you you don't

310
00:09:58,800 --> 00:10:01,279
really know what's happened in between

311
00:10:01,279 --> 00:10:02,640
and if you rely on that data again in

312
00:10:02,640 --> 00:10:05,120
the future you know it's a point in time

313
00:10:05,120 --> 00:10:06,720
you know something happened a year ago

314
00:10:06,720 --> 00:10:08,560
and you don't know where it's at now

315
00:10:08,560 --> 00:10:10,160
whereas this is real time you just check

316
00:10:10,160 --> 00:10:11,920
it at any point

317
00:10:11,920 --> 00:10:15,279
it's real time it's it's accurate um

318
00:10:15,279 --> 00:10:17,120
it's really handy

319
00:10:17,120 --> 00:10:18,480
the

320
00:10:18,480 --> 00:10:20,000
manual way of doing it is you provide a

321
00:10:20,000 --> 00:10:22,240
small sample so like say you have 100 s3

322
00:10:22,240 --> 00:10:25,200
buckets and you provide like five those

323
00:10:25,200 --> 00:10:26,560
five

324
00:10:26,560 --> 00:10:29,600
random buckets show good good controls

325
00:10:29,600 --> 00:10:31,279
um but that doesn't show you an accurate

326
00:10:31,279 --> 00:10:33,360
representation of everything because

327
00:10:33,360 --> 00:10:35,360
there could be outliers it could be

328
00:10:35,360 --> 00:10:37,600
a huge difference in the risk that

329
00:10:37,600 --> 00:10:39,120
you're not checking whereas this checks

330
00:10:39,120 --> 00:10:40,560
absolutely everything is automated that

331
00:10:40,560 --> 00:10:42,160
you know it's looking at everything it

332
00:10:42,160 --> 00:10:43,920
gives you total it gives you you can

333
00:10:43,920 --> 00:10:45,200
break it down to categories all that

334
00:10:45,200 --> 00:10:47,360
kind of stuff of like configurations and

335
00:10:47,360 --> 00:10:49,680
compliance um

336
00:10:49,680 --> 00:10:51,519
and the big thing is it proves controls

337
00:10:51,519 --> 00:10:54,079
exist um so with the legacy way of doing

338
00:10:54,079 --> 00:10:56,079
you kind of have a word document or you

339
00:10:56,079 --> 00:10:57,680
know you have some legal document that

340
00:10:57,680 --> 00:10:58,880
you've stored somewhere in a google

341
00:10:58,880 --> 00:11:01,120
drive you show that to the auditor and

342
00:11:01,120 --> 00:11:03,040
then you kind of show that those

343
00:11:03,040 --> 00:11:04,480
controls have been implemented but

344
00:11:04,480 --> 00:11:05,600
there's no

345
00:11:05,600 --> 00:11:07,760
there's no kind of overarching

346
00:11:07,760 --> 00:11:09,920
process or anything to enforce those

347
00:11:09,920 --> 00:11:11,200
controls you kind of just have to ask

348
00:11:11,200 --> 00:11:12,959
your developers to do it

349
00:11:12,959 --> 00:11:16,160
this has a direct correlation to i have

350
00:11:16,160 --> 00:11:18,160
a policy with rules

351
00:11:18,160 --> 00:11:20,160
you know a resource must look like this

352
00:11:20,160 --> 00:11:21,839
this this and that and if it doesn't

353
00:11:21,839 --> 00:11:24,000
this is what happens and it's it's super

354
00:11:24,000 --> 00:11:25,920
accurate it's like that's all you need

355
00:11:25,920 --> 00:11:27,040
to look at right you need to look at

356
00:11:27,040 --> 00:11:28,800
that and then the inventory to see if

357
00:11:28,800 --> 00:11:30,640
those controls have actually been

358
00:11:30,640 --> 00:11:33,040
effective

359
00:11:33,839 --> 00:11:35,760
so why wouldn't you want to lint

360
00:11:35,760 --> 00:11:37,920
configuration templates well i think you

361
00:11:37,920 --> 00:11:38,880
should

362
00:11:38,880 --> 00:11:41,680
that's a weird question

363
00:11:41,680 --> 00:11:44,000
the thing about linting configuration

364
00:11:44,000 --> 00:11:45,519
templates is it's really good at

365
00:11:45,519 --> 00:11:47,040
preventing

366
00:11:47,040 --> 00:11:49,440
infrastructure from being deployed in an

367
00:11:49,440 --> 00:11:51,360
insecure way

368
00:11:51,360 --> 00:11:54,560
from the get-go but

369
00:11:55,040 --> 00:11:56,720
there's this thing called drift

370
00:11:56,720 --> 00:11:59,519
where resources kind of change over time

371
00:11:59,519 --> 00:12:01,200
you know you deploy once and then

372
00:12:01,200 --> 00:12:03,680
someone adds a tag to it someone changes

373
00:12:03,680 --> 00:12:05,040
the encryption configuration and doesn't

374
00:12:05,040 --> 00:12:06,880
tell anyone and there's no record of

375
00:12:06,880 --> 00:12:08,839
that unless you've set it up

376
00:12:08,839 --> 00:12:11,760
um so linting only gives you that point

377
00:12:11,760 --> 00:12:14,160
in time before it's deployed and it's

378
00:12:14,160 --> 00:12:15,760
good for that but again like it doesn't

379
00:12:15,760 --> 00:12:16,959
show you the full picture of what's

380
00:12:16,959 --> 00:12:19,279
going on let's skip the first bit

381
00:12:19,279 --> 00:12:21,200
the other thing with linting is everyone

382
00:12:21,200 --> 00:12:23,200
uses different tools they use different

383
00:12:23,200 --> 00:12:24,800
configuration as code tools like

384
00:12:24,800 --> 00:12:27,920
cloudformation in aws terraform chef

385
00:12:27,920 --> 00:12:31,760
ansible whatever people are still using

386
00:12:31,760 --> 00:12:34,399
it's really hard to enforce

387
00:12:34,399 --> 00:12:37,200
linting over all of those tools

388
00:12:37,200 --> 00:12:38,880
i mean i'm sure there's tools that work

389
00:12:38,880 --> 00:12:40,160
across everything but it's you know it's

390
00:12:40,160 --> 00:12:41,839
quite difficult to make sure that

391
00:12:41,839 --> 00:12:43,519
everyone's using the same thing and then

392
00:12:43,519 --> 00:12:44,480
you've got different deployment

393
00:12:44,480 --> 00:12:46,560
pipelines um so it's just it's very hard

394
00:12:46,560 --> 00:12:48,000
to get everyone

395
00:12:48,000 --> 00:12:49,519
into a single point where you can kind

396
00:12:49,519 --> 00:12:50,800
of control that point because there's

397
00:12:50,800 --> 00:12:52,160
always gonna be people who kind of work

398
00:12:52,160 --> 00:12:54,800
around those controls um

399
00:12:54,800 --> 00:12:56,959
so drift is good use it if you can but i

400
00:12:56,959 --> 00:12:59,839
wouldn't rely on it

401
00:12:59,920 --> 00:13:01,839
so the elements of continuous assurance

402
00:13:01,839 --> 00:13:03,839
it's all about kind of monitoring and

403
00:13:03,839 --> 00:13:06,079
remediation

404
00:13:06,079 --> 00:13:08,240
so those are the two main components of

405
00:13:08,240 --> 00:13:10,079
it and you can kind of break it down

406
00:13:10,079 --> 00:13:14,959
into multiple different modular parts

407
00:13:14,959 --> 00:13:16,399
with monitoring you have the resource

408
00:13:16,399 --> 00:13:17,839
inventory that i talked about so that's

409
00:13:17,839 --> 00:13:20,320
just like a database of all of your

410
00:13:20,320 --> 00:13:22,720
resources every configuration of that

411
00:13:22,720 --> 00:13:24,800
resource if it's compliant against

412
00:13:24,800 --> 00:13:27,279
certain frameworks if it's secure versus

413
00:13:27,279 --> 00:13:28,959
certain

414
00:13:28,959 --> 00:13:30,160
you know rules

415
00:13:30,160 --> 00:13:33,440
uh you know is it tagged whatever

416
00:13:33,440 --> 00:13:34,720
all the information is there for you to

417
00:13:34,720 --> 00:13:36,560
look at and you don't have to kind of

418
00:13:36,560 --> 00:13:38,560
trawl through the aws console or do

419
00:13:38,560 --> 00:13:39,760
anything like that

420
00:13:39,760 --> 00:13:42,000
um

421
00:13:42,399 --> 00:13:45,120
you track the changes so

422
00:13:45,120 --> 00:13:47,120
chronic monitoring of changes i looked

423
00:13:47,120 --> 00:13:49,199
at the theosaurus for like ongoing or

424
00:13:49,199 --> 00:13:50,240
continuous because i thought that was

425
00:13:50,240 --> 00:13:51,279
getting boring

426
00:13:51,279 --> 00:13:52,560
um

427
00:13:52,560 --> 00:13:54,160
you want to look at every time a

428
00:13:54,160 --> 00:13:55,920
resource changes and you want to track

429
00:13:55,920 --> 00:13:58,160
that change resource inventory is good

430
00:13:58,160 --> 00:13:59,680
but if you just do it once and kind of

431
00:13:59,680 --> 00:14:00,800
let it sit there again you're going to

432
00:14:00,800 --> 00:14:02,399
work with the drift and it's it's not

433
00:14:02,399 --> 00:14:04,240
going to be accurate you want to make

434
00:14:04,240 --> 00:14:05,680
sure that all of those changes to

435
00:14:05,680 --> 00:14:07,920
resources are recorded in the resource

436
00:14:07,920 --> 00:14:09,040
inventory

437
00:14:09,040 --> 00:14:10,959
um

438
00:14:10,959 --> 00:14:12,399
and you want to detect when

439
00:14:12,399 --> 00:14:14,000
non-compliance

440
00:14:14,000 --> 00:14:16,160
is detected so you have a bunch of rules

441
00:14:16,160 --> 00:14:18,639
policies and if those

442
00:14:18,639 --> 00:14:20,880
configurations of the resources don't

443
00:14:20,880 --> 00:14:22,639
match what you're expecting then you

444
00:14:22,639 --> 00:14:24,800
want to detect that alert on it and act

445
00:14:24,800 --> 00:14:25,839
on it

446
00:14:25,839 --> 00:14:27,040
so you want to do something with that

447
00:14:27,040 --> 00:14:28,320
data

448
00:14:28,320 --> 00:14:30,320
um

449
00:14:30,320 --> 00:14:32,800
with remediation um

450
00:14:32,800 --> 00:14:35,440
there's kind of two parts to it you can

451
00:14:35,440 --> 00:14:37,040
you know you can detect a resource when

452
00:14:37,040 --> 00:14:38,560
it's being deployed

453
00:14:38,560 --> 00:14:41,680
and i personally prefer deleting it

454
00:14:41,680 --> 00:14:44,240
because if you kind of just modify it or

455
00:14:44,240 --> 00:14:45,519
do something else with a developer

456
00:14:45,519 --> 00:14:46,959
thinks they've deployed a resource and

457
00:14:46,959 --> 00:14:48,560
then called like that's what i was

458
00:14:48,560 --> 00:14:50,320
expecting and then they come back to a

459
00:14:50,320 --> 00:14:51,680
day later and they realize something's

460
00:14:51,680 --> 00:14:52,880
happened to it but they're not quite

461
00:14:52,880 --> 00:14:54,800
sure why or what's happened

462
00:14:54,800 --> 00:14:56,320
if you delete it they know it's deleted

463
00:14:56,320 --> 00:14:58,240
instantly and they can kind of try and

464
00:14:58,240 --> 00:14:59,760
figure out why they happen

465
00:14:59,760 --> 00:15:01,199
um and that goes on to the next point of

466
00:15:01,199 --> 00:15:02,959
notifying owners like you want to tell

467
00:15:02,959 --> 00:15:04,800
them when you delete a resource or when

468
00:15:04,800 --> 00:15:06,320
you modify it or when you detect

469
00:15:06,320 --> 00:15:08,399
non-compliance and how to fix it you

470
00:15:08,399 --> 00:15:10,000
don't just want to say

471
00:15:10,000 --> 00:15:12,320
this isn't encrypted for whatever reason

472
00:15:12,320 --> 00:15:13,839
and leave it at that you kind of want to

473
00:15:13,839 --> 00:15:15,279
make it as easy as possible for these

474
00:15:15,279 --> 00:15:17,360
developers to um

475
00:15:17,360 --> 00:15:19,199
to be secure and compliant

476
00:15:19,199 --> 00:15:20,880
um

477
00:15:20,880 --> 00:15:23,360
the other thing is uh on modification so

478
00:15:23,360 --> 00:15:24,639
on creation you can delete it on

479
00:15:24,639 --> 00:15:26,959
modification like on a pre-deployed

480
00:15:26,959 --> 00:15:28,240
resource

481
00:15:28,240 --> 00:15:30,639
uh you might want to maybe revert a

482
00:15:30,639 --> 00:15:33,040
configuration someone's just changed or

483
00:15:33,040 --> 00:15:34,800
modify it to be the

484
00:15:34,800 --> 00:15:37,040
you know accurate mod the accurate

485
00:15:37,040 --> 00:15:39,279
configuration that you want

486
00:15:39,279 --> 00:15:40,800
that runs into the same issue where you

487
00:15:40,800 --> 00:15:43,759
kind of developers don't realize what

488
00:15:43,759 --> 00:15:45,920
might have happened so you kind of have

489
00:15:45,920 --> 00:15:47,680
to be really really accurate and really

490
00:15:47,680 --> 00:15:49,839
good with the notifying of the owners so

491
00:15:49,839 --> 00:15:52,000
on on creation delete it that's fine on

492
00:15:52,000 --> 00:15:53,759
modification probably just change it

493
00:15:53,759 --> 00:15:56,399
back to what you want

494
00:15:56,399 --> 00:15:57,839
um

495
00:15:57,839 --> 00:16:00,079
then this talks about the linting so

496
00:16:00,079 --> 00:16:01,920
uh there's actually

497
00:16:01,920 --> 00:16:04,079
a

498
00:16:04,800 --> 00:16:06,959
there's there's a setting in ec2 so each

499
00:16:06,959 --> 00:16:09,440
ec2 is like the aws server kind of

500
00:16:09,440 --> 00:16:12,399
service and aws um

501
00:16:12,399 --> 00:16:14,399
there's a setting that you can enable in

502
00:16:14,399 --> 00:16:16,560
there which kind of enforces every new

503
00:16:16,560 --> 00:16:19,120
ec2 instance has to be encrypted so the

504
00:16:19,120 --> 00:16:21,839
ebs volume the ebs is just like the disk

505
00:16:21,839 --> 00:16:23,839
attached to the instance

506
00:16:23,839 --> 00:16:25,600
that enforces that encryption

507
00:16:25,600 --> 00:16:26,800
configuration so this is really good

508
00:16:26,800 --> 00:16:28,079
this isn't technically you know

509
00:16:28,079 --> 00:16:29,680
continuous assurance but it helps

510
00:16:29,680 --> 00:16:31,519
towards that because if you enable the

511
00:16:31,519 --> 00:16:33,839
setting then it's just

512
00:16:33,839 --> 00:16:35,680
it's going to be hard to deploy insecure

513
00:16:35,680 --> 00:16:37,600
stuff from the beginning you know

514
00:16:37,600 --> 00:16:39,440
um and then linting so you just prevent

515
00:16:39,440 --> 00:16:40,480
it from

516
00:16:40,480 --> 00:16:42,079
uh happening

517
00:16:42,079 --> 00:16:43,680
before being deployed so you're moving

518
00:16:43,680 --> 00:16:45,519
left and the diff sick ops

519
00:16:45,519 --> 00:16:48,480
chain if you know that

520
00:16:48,720 --> 00:16:50,639
so yeah i'm going to talk a little bit

521
00:16:50,639 --> 00:16:53,759
about my experience doing this to be

522
00:16:53,759 --> 00:16:56,079
fair i kind of did this and didn't

523
00:16:56,079 --> 00:16:57,360
really know what i was doing and then

524
00:16:57,360 --> 00:16:59,120
afterwards i kind of retro you know

525
00:16:59,120 --> 00:17:01,519
retractively looked on what i'd done

526
00:17:01,519 --> 00:17:02,320
and

527
00:17:02,320 --> 00:17:04,640
kind of formed this talk so i kind of

528
00:17:04,640 --> 00:17:06,799
created these concepts after the fact so

529
00:17:06,799 --> 00:17:08,799
some of these things didn't quite work

530
00:17:08,799 --> 00:17:11,039
out

531
00:17:12,640 --> 00:17:16,880
um for context we were operating in aws

532
00:17:16,880 --> 00:17:18,720
um

533
00:17:18,720 --> 00:17:21,119
yeah disclaimer uh we like i just said

534
00:17:21,119 --> 00:17:22,720
we didn't implement a full solution you

535
00:17:22,720 --> 00:17:24,400
know like everything i just talked about

536
00:17:24,400 --> 00:17:26,300
that's not fully working um

537
00:17:26,300 --> 00:17:27,919
[Music]

538
00:17:27,919 --> 00:17:30,000
we did what we could in the time that we

539
00:17:30,000 --> 00:17:32,880
had which you know mvp like we just had

540
00:17:32,880 --> 00:17:34,400
to get it done we weren't able to do all

541
00:17:34,400 --> 00:17:36,559
the bells and whistles um

542
00:17:36,559 --> 00:17:38,880
and yeah we were in aws we had hundreds

543
00:17:38,880 --> 00:17:40,160
of accounts

544
00:17:40,160 --> 00:17:42,559
um we had hundreds of thousands of

545
00:17:42,559 --> 00:17:44,080
resources

546
00:17:44,080 --> 00:17:46,000
so it's a pretty it's a pretty big scale

547
00:17:46,000 --> 00:17:48,000
of environment you can see why we kind

548
00:17:48,000 --> 00:17:50,559
of worked on this one project for a year

549
00:17:50,559 --> 00:17:50,880
um

550
00:17:50,880 --> 00:17:52,000
[Music]

551
00:17:52,000 --> 00:17:53,919
and we use multiple different services a

552
00:17:53,919 --> 00:17:57,760
lot of data services a lot of you know

553
00:17:58,960 --> 00:17:59,679
like

554
00:17:59,679 --> 00:18:01,919
data processing services like machine

555
00:18:01,919 --> 00:18:04,240
learning just data storage

556
00:18:04,240 --> 00:18:06,720
instances like anything that has

557
00:18:06,720 --> 00:18:08,000
anything to do with data we're probably

558
00:18:08,000 --> 00:18:10,160
using it um

559
00:18:10,160 --> 00:18:12,160
yeah so i'll just talk about the kind of

560
00:18:12,160 --> 00:18:14,799
stack that we ended up with

561
00:18:14,799 --> 00:18:16,160
we chose this tool called cloud

562
00:18:16,160 --> 00:18:19,760
custodian c7n um

563
00:18:19,760 --> 00:18:21,280
basically it's an open source tool on

564
00:18:21,280 --> 00:18:24,320
github made by um

565
00:18:24,320 --> 00:18:26,320
i can't remember host i'm not gonna

566
00:18:26,320 --> 00:18:30,080
yeah thanks guys i appreciate it

567
00:18:30,080 --> 00:18:32,880
uh basically we used it for

568
00:18:32,880 --> 00:18:35,039
two components of of the setup the

569
00:18:35,039 --> 00:18:37,120
monitoring side and the remediation side

570
00:18:37,120 --> 00:18:40,000
we chose to use this for

571
00:18:40,000 --> 00:18:42,160
the resource inventory i'll explain why

572
00:18:42,160 --> 00:18:44,240
that was a bad idea later but um

573
00:18:44,240 --> 00:18:46,640
basically to kind of get a view of all

574
00:18:46,640 --> 00:18:48,240
of our infrastructure hold it in our

575
00:18:48,240 --> 00:18:49,760
database

576
00:18:49,760 --> 00:18:51,360
and then we used it to detect when

577
00:18:51,360 --> 00:18:53,280
non-compliance was

578
00:18:53,280 --> 00:18:54,799
happening in the environment so if a

579
00:18:54,799 --> 00:18:57,360
configuration was detected that we

580
00:18:57,360 --> 00:18:58,320
didn't

581
00:18:58,320 --> 00:18:59,679
think was right or you know wasn't

582
00:18:59,679 --> 00:19:02,080
compliant with a certain policy um this

583
00:19:02,080 --> 00:19:03,919
is what we used it for and with

584
00:19:03,919 --> 00:19:06,320
remediation uh cloud custodian uses

585
00:19:06,320 --> 00:19:08,240
compliance as code or policy as code so

586
00:19:08,240 --> 00:19:10,720
you kind of define like a yaml template

587
00:19:10,720 --> 00:19:12,880
of you know these these are the exact

588
00:19:12,880 --> 00:19:15,039
things i'm looking for um

589
00:19:15,039 --> 00:19:17,520
this is what i want to do if if this

590
00:19:17,520 --> 00:19:18,960
resource isn't

591
00:19:18,960 --> 00:19:22,480
uh compliant and this is how i notify

592
00:19:22,480 --> 00:19:25,520
owners um and then yeah so there's

593
00:19:25,520 --> 00:19:27,200
actions in there so we can we can delete

594
00:19:27,200 --> 00:19:29,280
the resource we can modify it we can you

595
00:19:29,280 --> 00:19:31,200
know spawn a subprocess or a lambda or

596
00:19:31,200 --> 00:19:32,720
something to

597
00:19:32,720 --> 00:19:34,880
run some other code because of that so

598
00:19:34,880 --> 00:19:36,240
it's kind of all a complete package

599
00:19:36,240 --> 00:19:37,760
which was really cool

600
00:19:37,760 --> 00:19:39,600
for those who know about aws and know

601
00:19:39,600 --> 00:19:41,760
about aws config

602
00:19:41,760 --> 00:19:44,080
awc config is

603
00:19:44,080 --> 00:19:46,960
a compliance and remediation type tool

604
00:19:46,960 --> 00:19:49,440
as a service you know provided by aws

605
00:19:49,440 --> 00:19:51,280
um so you might be wondering why we

606
00:19:51,280 --> 00:19:53,280
didn't use that at the time we were

607
00:19:53,280 --> 00:19:55,280
doing comparison between cloud custodian

608
00:19:55,280 --> 00:19:57,760
and a service in aws

609
00:19:57,760 --> 00:20:00,880
and the findings shocked us

610
00:20:00,880 --> 00:20:02,640
clickbait now um

611
00:20:02,640 --> 00:20:04,960
really it came down to cloud custodian

612
00:20:04,960 --> 00:20:06,960
being more powerful which

613
00:20:06,960 --> 00:20:07,840
you know

614
00:20:07,840 --> 00:20:08,960
they were

615
00:20:08,960 --> 00:20:11,360
providing more granular filters and and

616
00:20:11,360 --> 00:20:13,360
actions so we could drill down to the

617
00:20:13,360 --> 00:20:15,520
very individual configurations of each

618
00:20:15,520 --> 00:20:16,480
resource

619
00:20:16,480 --> 00:20:18,080
um you know we could check the values we

620
00:20:18,080 --> 00:20:18,960
could do

621
00:20:18,960 --> 00:20:21,280
data transforms on the value so we could

622
00:20:21,280 --> 00:20:23,120
you know looking at a tag we could kind

623
00:20:23,120 --> 00:20:25,679
of transform the tag value within the

624
00:20:25,679 --> 00:20:28,640
tool um which seemed quite powerful

625
00:20:28,640 --> 00:20:30,080
and multiple different actions so you

626
00:20:30,080 --> 00:20:31,919
know deleting the resource

627
00:20:31,919 --> 00:20:34,159
modifying it or you know notifying

628
00:20:34,159 --> 00:20:36,000
someone else uh there was just it seemed

629
00:20:36,000 --> 00:20:37,200
like there was a lot of capabilities

630
00:20:37,200 --> 00:20:39,440
here so that's that felt pretty good to

631
00:20:39,440 --> 00:20:40,159
us

632
00:20:40,159 --> 00:20:42,240
um

633
00:20:42,240 --> 00:20:43,919
bit of a surprise it supported more

634
00:20:43,919 --> 00:20:45,840
services within aws

635
00:20:45,840 --> 00:20:46,720
um

636
00:20:46,720 --> 00:20:49,039
this isn't a digger aws because without

637
00:20:49,039 --> 00:20:52,640
them i wouldn't have a job but um

638
00:20:52,960 --> 00:20:55,120
yeah an open source tool had more

639
00:20:55,120 --> 00:20:58,960
support than the aws provided one at the

640
00:20:58,960 --> 00:21:00,720
time it it's definitely changed over

641
00:21:00,720 --> 00:21:04,320
time you know this was over a year ago

642
00:21:04,320 --> 00:21:06,880
there was also more kind of

643
00:21:06,880 --> 00:21:09,760
options within each resource so although

644
00:21:09,760 --> 00:21:11,120
aws config might have supported a

645
00:21:11,120 --> 00:21:12,640
resource it might have been only limited

646
00:21:12,640 --> 00:21:14,559
to like three configurations out of the

647
00:21:14,559 --> 00:21:16,400
10 that it could have had for example

648
00:21:16,400 --> 00:21:19,280
so just it didn't feel quite um complete

649
00:21:19,280 --> 00:21:21,120
the other thing is it's multi-cloud so

650
00:21:21,120 --> 00:21:23,200
at the time we weren't multi-cloud but

651
00:21:23,200 --> 00:21:25,360
if we were you know this is good uh

652
00:21:25,360 --> 00:21:27,760
scalability um gives us the option to

653
00:21:27,760 --> 00:21:29,919
move into other clouds like azure or gcp

654
00:21:29,919 --> 00:21:31,679
if we wanted to so it just felt like a

655
00:21:31,679 --> 00:21:33,679
nice wrapper package over everything in

656
00:21:33,679 --> 00:21:35,760
the cloud

657
00:21:35,760 --> 00:21:37,200
it came with a bunch of scripts and

658
00:21:37,200 --> 00:21:39,840
tools that we could use for kind of

659
00:21:39,840 --> 00:21:41,600
related purposes like generating

660
00:21:41,600 --> 00:21:45,760
documentation for example um and

661
00:21:45,760 --> 00:21:47,840
if we wanted to it acts as a wrapper for

662
00:21:47,840 --> 00:21:49,440
aws conflict anyway so if we wanted a

663
00:21:49,440 --> 00:21:50,880
nato is configurable we could have just

664
00:21:50,880 --> 00:21:52,880
created it with cloud custodian so it

665
00:21:52,880 --> 00:21:54,880
felt pretty complete to us

666
00:21:54,880 --> 00:21:57,280
the downsides

667
00:21:57,280 --> 00:21:59,039
n is a new mirron

668
00:21:59,039 --> 00:22:00,320
i don't know if anyone's heard of this

669
00:22:00,320 --> 00:22:01,760
but this was the first time i kind of

670
00:22:01,760 --> 00:22:03,360
discovered it you know all those kind of

671
00:22:03,360 --> 00:22:04,720
weird acronyms with the numbers in

672
00:22:04,720 --> 00:22:07,360
between like i 18 n and

673
00:22:07,360 --> 00:22:09,760
k at s what the hell's k it is now for

674
00:22:09,760 --> 00:22:11,760
the longest time i saw kds and i had no

675
00:22:11,760 --> 00:22:13,760
clue what it was and so i just ignored

676
00:22:13,760 --> 00:22:16,080
it and then i realized that's kubernetes

677
00:22:16,080 --> 00:22:18,240
numeronum is basically an acronym where

678
00:22:18,240 --> 00:22:20,640
you take the first letter

679
00:22:20,640 --> 00:22:22,400
of the of the word and then the last

680
00:22:22,400 --> 00:22:24,400
letter of the word and then whatever

681
00:22:24,400 --> 00:22:26,720
letters in between are left over it's

682
00:22:26,720 --> 00:22:28,080
like shortened to

683
00:22:28,080 --> 00:22:31,360
a number and i hate acronyms and anyone

684
00:22:31,360 --> 00:22:33,039
who knows me knows that i'm passionate

685
00:22:33,039 --> 00:22:34,960
about hating acronyms so this is like a

686
00:22:34,960 --> 00:22:38,320
step up this is like like a big you know

687
00:22:38,320 --> 00:22:40,880
big giant kind of i don't know what i'm

688
00:22:40,880 --> 00:22:42,960
saying but you understand you understand

689
00:22:42,960 --> 00:22:43,840
um

690
00:22:43,840 --> 00:22:46,000
i hate new mirandas they're really like

691
00:22:46,000 --> 00:22:47,600
exclusive you know it's just difficult

692
00:22:47,600 --> 00:22:49,200
to figure out what they are

693
00:22:49,200 --> 00:22:51,520
uh that's my main gripe with clay

694
00:22:51,520 --> 00:22:53,200
custodian so if that's the biggest thing

695
00:22:53,200 --> 00:22:54,880
that i found wrong you know it's a

696
00:22:54,880 --> 00:22:56,960
pretty good job then um

697
00:22:56,960 --> 00:22:58,559
this isn't really a limitation with

698
00:22:58,559 --> 00:23:00,640
cloud custodian but more so just with

699
00:23:00,640 --> 00:23:03,039
general tools um aws has this thing

700
00:23:03,039 --> 00:23:05,440
called cloud trail

701
00:23:05,440 --> 00:23:08,240
sit there like it's a you know um

702
00:23:08,240 --> 00:23:10,400
cloudtrail and it's basically just a

703
00:23:10,400 --> 00:23:12,080
an audit log of all of the actions that

704
00:23:12,080 --> 00:23:14,480
happen within aws so every service has

705
00:23:14,480 --> 00:23:17,600
an api internally and cloudtrail tracks

706
00:23:17,600 --> 00:23:20,240
all of those api calls and gives you

707
00:23:20,240 --> 00:23:21,520
you know more information about like who

708
00:23:21,520 --> 00:23:23,120
called there when it happened all that

709
00:23:23,120 --> 00:23:24,320
kind of stuff so it's basically just a

710
00:23:24,320 --> 00:23:27,760
central audit um log for aws

711
00:23:27,760 --> 00:23:29,760
the thing with cloudtrail is that for

712
00:23:29,760 --> 00:23:31,679
some reason it doesn't like show every

713
00:23:31,679 --> 00:23:34,080
single resource in action there's

714
00:23:34,080 --> 00:23:35,679
there's it shows the majority but

715
00:23:35,679 --> 00:23:37,600
there's some actions that aren't

716
00:23:37,600 --> 00:23:39,440
actually recorded in cloud trails so

717
00:23:39,440 --> 00:23:41,360
if you rely on this fully for you know

718
00:23:41,360 --> 00:23:43,200
100 of everything

719
00:23:43,200 --> 00:23:44,480
you're going to find there might be some

720
00:23:44,480 --> 00:23:46,720
cases where uh configurations were

721
00:23:46,720 --> 00:23:48,080
missed because they weren't recorded in

722
00:23:48,080 --> 00:23:50,240
cloudtrail the other thing is it's it's

723
00:23:50,240 --> 00:23:51,919
there's a delay of up to like 15 minutes

724
00:23:51,919 --> 00:23:54,080
or something but i mean you can't really

725
00:23:54,080 --> 00:23:57,200
get much better than that so it's not

726
00:23:57,200 --> 00:23:59,279
insanely real time but it's as real time

727
00:23:59,279 --> 00:24:01,440
as aws supports

728
00:24:01,440 --> 00:24:02,960
um

729
00:24:02,960 --> 00:24:04,240
yeah and it just basically works on

730
00:24:04,240 --> 00:24:05,520
having filters so like you look for a

731
00:24:05,520 --> 00:24:08,320
certain config and when that policy is

732
00:24:08,320 --> 00:24:10,640
matched with that config um

733
00:24:10,640 --> 00:24:12,720
then you run actions over it so you you

734
00:24:12,720 --> 00:24:14,480
know again you like delete the resource

735
00:24:14,480 --> 00:24:17,200
or modify it um spawn other resources so

736
00:24:17,200 --> 00:24:18,480
it just it seemed quite straightforward

737
00:24:18,480 --> 00:24:21,039
and quite like easy to read and kind of

738
00:24:21,039 --> 00:24:22,880
easy to transport between

739
00:24:22,880 --> 00:24:25,039
repositories and between teams it felt

740
00:24:25,039 --> 00:24:27,600
like people who weren't super technical

741
00:24:27,600 --> 00:24:30,480
could write these policies

742
00:24:30,480 --> 00:24:31,919
i was wrong about that because they're

743
00:24:31,919 --> 00:24:34,000
actually there's a lot of bugs and it's

744
00:24:34,000 --> 00:24:36,880
actually quite technical um but

745
00:24:36,880 --> 00:24:39,440
on the onset it looks pretty simple

746
00:24:39,440 --> 00:24:40,480
um

747
00:24:40,480 --> 00:24:42,320
for our resource inventory we used new

748
00:24:42,320 --> 00:24:43,840
relic no particular reason it was just

749
00:24:43,840 --> 00:24:45,600
the tool that we were using at the time

750
00:24:45,600 --> 00:24:47,520
and we had access to

751
00:24:47,520 --> 00:24:50,400
so we kind of had this summary dashboard

752
00:24:50,400 --> 00:24:52,240
and then details dashboard summary

753
00:24:52,240 --> 00:24:54,159
dashboard just showed like compliance

754
00:24:54,159 --> 00:24:56,080
overall or you know like

755
00:24:56,080 --> 00:24:58,320
totals of categories of things

756
00:24:58,320 --> 00:24:59,600
things that

757
00:24:59,600 --> 00:25:02,640
people invested in the overall project

758
00:25:02,640 --> 00:25:05,440
would want to look at

759
00:25:06,960 --> 00:25:09,279
and then i also used a spreadsheet

760
00:25:09,279 --> 00:25:11,919
google sheets i'll talk about this a bit

761
00:25:11,919 --> 00:25:14,480
more later but i highly don't recommend

762
00:25:14,480 --> 00:25:15,840
it

763
00:25:15,840 --> 00:25:18,320
when you're storing tens of thousands of

764
00:25:18,320 --> 00:25:22,559
you know rows in a in a online connected

765
00:25:22,559 --> 00:25:24,880
uh spreadsheet it doesn't

766
00:25:24,880 --> 00:25:27,440
it stops working

767
00:25:27,440 --> 00:25:28,960
but that was like what we had access to

768
00:25:28,960 --> 00:25:30,320
that was the easiest way to provide

769
00:25:30,320 --> 00:25:32,080
access to like you know product owners

770
00:25:32,080 --> 00:25:33,679
and and developers and any any

771
00:25:33,679 --> 00:25:35,840
stakeholders and the owners of the

772
00:25:35,840 --> 00:25:37,120
resource

773
00:25:37,120 --> 00:25:39,279
um we also use this thing called aw step

774
00:25:39,279 --> 00:25:41,120
functions so it's kind of like just our

775
00:25:41,120 --> 00:25:42,880
deployment pipeline like running a bunch

776
00:25:42,880 --> 00:25:45,360
of cloud custodian stuff uh processing

777
00:25:45,360 --> 00:25:46,400
their data

778
00:25:46,400 --> 00:25:48,480
running a bunch of sub-actions to kind

779
00:25:48,480 --> 00:25:52,000
of saturate that data um and deploy it

780
00:25:52,000 --> 00:25:53,760
to you know like new relic and in the

781
00:25:53,760 --> 00:25:55,039
spreadsheet

782
00:25:55,039 --> 00:25:57,440
um

783
00:25:57,440 --> 00:25:59,360
this is what we wanted on the left and

784
00:25:59,360 --> 00:26:00,640
then this is what we ended up on the

785
00:26:00,640 --> 00:26:01,440
right

786
00:26:01,440 --> 00:26:03,440
i don't know if i can complain but

787
00:26:03,440 --> 00:26:04,880
this was the first time this was the

788
00:26:04,880 --> 00:26:06,320
first time i'd done an architecture

789
00:26:06,320 --> 00:26:08,320
diagram okay so don't don't judge i try

790
00:26:08,320 --> 00:26:10,559
to make it as readable as possible but

791
00:26:10,559 --> 00:26:12,240
there's a lot of moving parts

792
00:26:12,240 --> 00:26:14,080
um you know we had a pipeline to deploy

793
00:26:14,080 --> 00:26:15,279
the pipeline

794
00:26:15,279 --> 00:26:19,039
and and a developer would um

795
00:26:19,039 --> 00:26:20,960
do a pull request into

796
00:26:20,960 --> 00:26:23,120
the repo you know and and deploy a

797
00:26:23,120 --> 00:26:24,720
policy and then the policies you know

798
00:26:24,720 --> 00:26:26,480
tested and and documentation is

799
00:26:26,480 --> 00:26:28,240
automatically generated and

800
00:26:28,240 --> 00:26:29,679
um it

801
00:26:29,679 --> 00:26:31,039
does you know like

802
00:26:31,039 --> 00:26:33,520
um canary releases and it does all these

803
00:26:33,520 --> 00:26:34,799
things that everyone should do when

804
00:26:34,799 --> 00:26:36,000
deploying stuff

805
00:26:36,000 --> 00:26:37,600
um but

806
00:26:37,600 --> 00:26:39,600
something happened and we that made it

807
00:26:39,600 --> 00:26:41,679
sound real bad uh it just just suddenly

808
00:26:41,679 --> 00:26:43,200
happened and like another team wanted to

809
00:26:43,200 --> 00:26:45,919
take control of it um and so we kind of

810
00:26:45,919 --> 00:26:47,440
ended up handing that over to them so

811
00:26:47,440 --> 00:26:49,440
they maintained the deployment and the

812
00:26:49,440 --> 00:26:51,360
management of custodian so it's good for

813
00:26:51,360 --> 00:26:52,720
us because we just provided them the

814
00:26:52,720 --> 00:26:54,080
policies

815
00:26:54,080 --> 00:26:55,840
to be honest i don't know what they did

816
00:26:55,840 --> 00:26:58,320
with those policies um tested it and

817
00:26:58,320 --> 00:27:00,320
just integrated into the environment

818
00:27:00,320 --> 00:27:01,200
and then

819
00:27:01,200 --> 00:27:03,039
we ended up with our compliance that was

820
00:27:03,039 --> 00:27:03,840
cool

821
00:27:03,840 --> 00:27:06,240
um

822
00:27:06,240 --> 00:27:07,840
yeah so this is the project i was

823
00:27:07,840 --> 00:27:10,159
talking about um that i worked on for a

824
00:27:10,159 --> 00:27:11,200
year

825
00:27:11,200 --> 00:27:12,480
um

826
00:27:12,480 --> 00:27:14,799
enforcing encryption at rest

827
00:27:14,799 --> 00:27:16,400
please don't judge me

828
00:27:16,400 --> 00:27:17,679
um

829
00:27:17,679 --> 00:27:19,120
there's there's a difference between you

830
00:27:19,120 --> 00:27:20,880
know being doing stuff to be secure and

831
00:27:20,880 --> 00:27:22,960
doing stuff to be compliant this was a

832
00:27:22,960 --> 00:27:24,640
compliance exercise

833
00:27:24,640 --> 00:27:26,559
um basically we had a need to ensure

834
00:27:26,559 --> 00:27:29,279
data arrest was encrypted um and it

835
00:27:29,279 --> 00:27:31,039
wasn't it wasn't enforced like it was

836
00:27:31,039 --> 00:27:33,120
you know it was enforced but it wasn't

837
00:27:33,120 --> 00:27:35,120
enforced

838
00:27:35,120 --> 00:27:38,799
there was s3 resources and ec2 so ebs

839
00:27:38,799 --> 00:27:40,720
ebs is just like like i said the the

840
00:27:40,720 --> 00:27:42,720
data volume of the instance and there's

841
00:27:42,720 --> 00:27:45,760
about 30 000 of these resources

842
00:27:45,760 --> 00:27:46,880
so

843
00:27:46,880 --> 00:27:48,480
pretty big scale that we're working at

844
00:27:48,480 --> 00:27:50,000
here especially when it's like the first

845
00:27:50,000 --> 00:27:52,320
time we're kind of building this up

846
00:27:52,320 --> 00:27:54,159
um

847
00:27:54,159 --> 00:27:56,480
so the solution for that was our build

848
00:27:56,480 --> 00:27:58,240
pipeline where

849
00:27:58,240 --> 00:27:59,039
you know

850
00:27:59,039 --> 00:28:00,960
the first box we kind of run the

851
00:28:00,960 --> 00:28:03,200
inventory so we we get an idea of

852
00:28:03,200 --> 00:28:05,279
everything that's in our environment

853
00:28:05,279 --> 00:28:07,840
what resources aren't secure or rather

854
00:28:07,840 --> 00:28:09,600
what resources aren't compliant with

855
00:28:09,600 --> 00:28:12,799
certain configurations um we store that

856
00:28:12,799 --> 00:28:14,960
data in an e3 bucket and then we process

857
00:28:14,960 --> 00:28:16,399
that data so

858
00:28:16,399 --> 00:28:18,880
you know we add tags we we add owners to

859
00:28:18,880 --> 00:28:20,799
the resources a bunch of stuff that like

860
00:28:20,799 --> 00:28:22,720
makes it useful basically

861
00:28:22,720 --> 00:28:26,559
um and then we send the results to

862
00:28:26,559 --> 00:28:28,399
excuse me to new relic and to google

863
00:28:28,399 --> 00:28:30,880
spreadsheets um

864
00:28:30,880 --> 00:28:33,760
this ran about every two hours so it's

865
00:28:33,760 --> 00:28:35,360
just arbitrary time i don't know like a

866
00:28:35,360 --> 00:28:37,440
good balance between real time and not

867
00:28:37,440 --> 00:28:40,399
being super expensive

868
00:28:40,720 --> 00:28:43,440
i won't run through the entire policy um

869
00:28:43,440 --> 00:28:44,720
just i don't have enough time but

870
00:28:44,720 --> 00:28:46,159
basically

871
00:28:46,159 --> 00:28:47,600
this is an example of a cloud custodian

872
00:28:47,600 --> 00:28:49,679
policy and

873
00:28:49,679 --> 00:28:51,679
in the end all it does is it looks for

874
00:28:51,679 --> 00:28:53,600
s3 buckets that were just deployed in

875
00:28:53,600 --> 00:28:57,279
cloudtrail is an action you can look for

876
00:28:57,279 --> 00:28:59,520
and if the encryption configuration of

877
00:28:59,520 --> 00:29:01,200
that bucket doesn't match a very

878
00:29:01,200 --> 00:29:03,679
specific encryption configuration uh we

879
00:29:03,679 --> 00:29:05,200
delete it and then we just send a

880
00:29:05,200 --> 00:29:08,640
message to the owner in slack

881
00:29:08,640 --> 00:29:09,840
this was the thing i was talking about

882
00:29:09,840 --> 00:29:11,520
prevention so technically it's not

883
00:29:11,520 --> 00:29:13,440
really part of continuous assurance but

884
00:29:13,440 --> 00:29:15,440
it helps towards it

885
00:29:15,440 --> 00:29:17,520
so this isn't linting but basically if

886
00:29:17,520 --> 00:29:19,120
you have

887
00:29:19,120 --> 00:29:21,200
the ability to provide

888
00:29:21,200 --> 00:29:23,840
you know secure defaults or compliant

889
00:29:23,840 --> 00:29:25,039
defaults

890
00:29:25,039 --> 00:29:26,880
you should do that because it makes

891
00:29:26,880 --> 00:29:28,960
everyone's job a lot easier the the

892
00:29:28,960 --> 00:29:30,640
developer finds out a lot sooner before

893
00:29:30,640 --> 00:29:34,320
this kind of stuff starts happening um

894
00:29:34,320 --> 00:29:37,360
so in ec2 we had this setting called

895
00:29:37,360 --> 00:29:39,039
default encryption and basically you

896
00:29:39,039 --> 00:29:40,640
just sit there on the account you know

897
00:29:40,640 --> 00:29:42,480
on all hundreds of accounts

898
00:29:42,480 --> 00:29:45,039
and every time a new ec2 instance is

899
00:29:45,039 --> 00:29:46,880
created it um it's automatically

900
00:29:46,880 --> 00:29:48,880
encrypted so that just makes the job a

901
00:29:48,880 --> 00:29:51,840
lot easier for new resources

902
00:29:51,840 --> 00:29:54,159
and that so cloud custodian has a bunch

903
00:29:54,159 --> 00:29:55,840
of different kind of deployment modes

904
00:29:55,840 --> 00:29:57,919
you can put it in the cloud so it runs

905
00:29:57,919 --> 00:30:00,159
you know on a cron job or it can run

906
00:30:00,159 --> 00:30:02,240
when it's triggered by a certain rule or

907
00:30:02,240 --> 00:30:04,320
certain action in cloud trail but you

908
00:30:04,320 --> 00:30:05,919
can also run them manually um in your

909
00:30:05,919 --> 00:30:07,440
terminal so like on your computer or in

910
00:30:07,440 --> 00:30:09,039
a container

911
00:30:09,039 --> 00:30:10,880
an ecs or something like that

912
00:30:10,880 --> 00:30:12,720
so this was just an on-demand policy we

913
00:30:12,720 --> 00:30:14,480
created just to set the the

914
00:30:14,480 --> 00:30:15,760
configuration on the account so we just

915
00:30:15,760 --> 00:30:17,120
do it once and then once it's set it's

916
00:30:17,120 --> 00:30:19,360
done

917
00:30:19,679 --> 00:30:21,360
this isn't related to to continuous

918
00:30:21,360 --> 00:30:22,880
insurance but this was a weird thing we

919
00:30:22,880 --> 00:30:25,679
found with s3 buckets when you turn on

920
00:30:25,679 --> 00:30:27,600
default encryption it turns on the

921
00:30:27,600 --> 00:30:28,960
setting to

922
00:30:28,960 --> 00:30:30,880
encrypt new objects that get put in the

923
00:30:30,880 --> 00:30:31,840
bucket

924
00:30:31,840 --> 00:30:33,440
but it doesn't touch any of the existing

925
00:30:33,440 --> 00:30:34,880
objects

926
00:30:34,880 --> 00:30:36,720
so we found that there were a lot of

927
00:30:36,720 --> 00:30:38,960
history buckets that had existing data

928
00:30:38,960 --> 00:30:40,960
and we turned on this uh the setting to

929
00:30:40,960 --> 00:30:43,279
make it encrypted for new resources cool

930
00:30:43,279 --> 00:30:44,799
um but

931
00:30:44,799 --> 00:30:46,640
there was nothing that was encrypting

932
00:30:46,640 --> 00:30:48,640
the existing resources in there in that

933
00:30:48,640 --> 00:30:51,039
bucket so we created a tool to to

934
00:30:51,039 --> 00:30:52,559
basically run through every history

935
00:30:52,559 --> 00:30:53,919
bucket

936
00:30:53,919 --> 00:30:56,640
take the object out put it back in once

937
00:30:56,640 --> 00:30:58,559
the default encryption setting was back

938
00:30:58,559 --> 00:31:01,679
there and then it automatically encrypts

939
00:31:01,679 --> 00:31:04,720
it um

940
00:31:04,720 --> 00:31:07,039
yeah so some challenges hopefully

941
00:31:07,039 --> 00:31:09,360
you get something out of this because um

942
00:31:09,360 --> 00:31:10,880
i wish i kind of knew these things

943
00:31:10,880 --> 00:31:12,559
before i started

944
00:31:12,559 --> 00:31:14,640
with cloud custodian it's an open source

945
00:31:14,640 --> 00:31:16,480
tool so it's great but with most open

946
00:31:16,480 --> 00:31:18,240
source tools there's kind of bugs

947
00:31:18,240 --> 00:31:19,679
there's undocumented stuff the

948
00:31:19,679 --> 00:31:22,640
documentation isn't always accurate or

949
00:31:22,640 --> 00:31:24,480
or easy to understand

950
00:31:24,480 --> 00:31:26,000
most of it was really good and you know

951
00:31:26,000 --> 00:31:27,200
i picked it up pretty quickly but

952
00:31:27,200 --> 00:31:29,360
there's just each cases and corner cases

953
00:31:29,360 --> 00:31:31,600
that just kind of catch you

954
00:31:31,600 --> 00:31:34,320
so there's a lot of troubleshooting and

955
00:31:34,320 --> 00:31:36,320
resource configuration caching so

956
00:31:36,320 --> 00:31:38,399
when you run the tool locally on your

957
00:31:38,399 --> 00:31:39,440
laptop

958
00:31:39,440 --> 00:31:42,320
it scans the resources in your account

959
00:31:42,320 --> 00:31:43,919
and then it stores that information it

960
00:31:43,919 --> 00:31:46,640
caches it in a directory on your laptop

961
00:31:46,640 --> 00:31:47,919
but from what i could see that wasn't

962
00:31:47,919 --> 00:31:49,279
documented anywhere so when i was

963
00:31:49,279 --> 00:31:50,720
developing these policies and changing a

964
00:31:50,720 --> 00:31:52,799
resource in real time and aws

965
00:31:52,799 --> 00:31:54,640
i was trying to figure out why are my

966
00:31:54,640 --> 00:31:57,039
resources not responding to this policy

967
00:31:57,039 --> 00:31:58,399
and it's because

968
00:31:58,399 --> 00:32:00,080
every time i changed the resource in the

969
00:32:00,080 --> 00:32:01,200
cloud

970
00:32:01,200 --> 00:32:02,960
it wasn't being updated in my cache on

971
00:32:02,960 --> 00:32:05,360
my laptop um so i found a lot of time i

972
00:32:05,360 --> 00:32:08,080
was just wasting um so

973
00:32:08,080 --> 00:32:10,080
there's there's a directory where they

974
00:32:10,080 --> 00:32:11,600
store the cache and if you use click

975
00:32:11,600 --> 00:32:12,960
australian delete the cache when you're

976
00:32:12,960 --> 00:32:15,679
developing policies um

977
00:32:15,679 --> 00:32:17,360
no concurrency so

978
00:32:17,360 --> 00:32:18,799
in a policy you can have multiple

979
00:32:18,799 --> 00:32:21,039
different policies so that didn't make

980
00:32:21,039 --> 00:32:23,519
sense and like in a policy file like a

981
00:32:23,519 --> 00:32:25,519
yaml file you can have multiple groups

982
00:32:25,519 --> 00:32:28,320
of policies if you run that policy file

983
00:32:28,320 --> 00:32:29,519
all of those policies are run

984
00:32:29,519 --> 00:32:31,360
synchronously so they run one after the

985
00:32:31,360 --> 00:32:33,120
other in series so there's no

986
00:32:33,120 --> 00:32:35,840
parallelism there's no optimization you

987
00:32:35,840 --> 00:32:38,000
know it's if you end up with like pretty

988
00:32:38,000 --> 00:32:41,760
expensive policies it can get quite slow

989
00:32:41,760 --> 00:32:44,640
and i'll talk about that in the next one

990
00:32:44,640 --> 00:32:46,320
resource inventory so we use this for

991
00:32:46,320 --> 00:32:47,919
the resource inventory but

992
00:32:47,919 --> 00:32:49,760
it's not really built for it

993
00:32:49,760 --> 00:32:51,120
we kind of just used it because we'd

994
00:32:51,120 --> 00:32:54,320
already set it up and we were used to it

995
00:32:54,320 --> 00:32:55,600
basically

996
00:32:55,600 --> 00:32:58,559
we had to set up an individual policy

997
00:32:58,559 --> 00:32:59,519
per

998
00:32:59,519 --> 00:33:02,799
like permutation of a resource so

999
00:33:02,799 --> 00:33:05,039
one resource was described in one one

1000
00:33:05,039 --> 00:33:06,559
resource configuration was described in

1001
00:33:06,559 --> 00:33:08,720
one policy and you know you change the

1002
00:33:08,720 --> 00:33:11,600
resource a tiny bit like you change a

1003
00:33:11,600 --> 00:33:12,960
tag or you change the encryption

1004
00:33:12,960 --> 00:33:14,240
configuration and it's a whole new

1005
00:33:14,240 --> 00:33:16,480
policy so instead of one policy to kind

1006
00:33:16,480 --> 00:33:18,480
of look at everything it's multiple

1007
00:33:18,480 --> 00:33:20,880
policies to check on every single

1008
00:33:20,880 --> 00:33:23,679
iteration of a possible resource

1009
00:33:23,679 --> 00:33:26,159
so we ended up with about 30 policies

1010
00:33:26,159 --> 00:33:29,200
just to look at uh e3 buckets ebs

1011
00:33:29,200 --> 00:33:31,039
volumes and ebs snapshots they're just

1012
00:33:31,039 --> 00:33:33,679
like backups or vbs volumes

1013
00:33:33,679 --> 00:33:36,399
so very very quickly got out of hand and

1014
00:33:36,399 --> 00:33:37,919
this is just for looking at one thing

1015
00:33:37,919 --> 00:33:39,840
you know looking at encryption

1016
00:33:39,840 --> 00:33:41,840
for a resource for three resources we

1017
00:33:41,840 --> 00:33:44,480
end up with 30 policies uh so don't use

1018
00:33:44,480 --> 00:33:46,399
this for resource inventory

1019
00:33:46,399 --> 00:33:48,559
um go with another tool like aws config

1020
00:33:48,559 --> 00:33:50,960
or other tools that are designed to give

1021
00:33:50,960 --> 00:33:53,679
you a full picture of your environment

1022
00:33:53,679 --> 00:33:55,919
uh in in an easy way

1023
00:33:55,919 --> 00:33:58,080
with google sheets yeah so we ended up

1024
00:33:58,080 --> 00:34:01,279
checking in about 40 000 rows

1025
00:34:01,279 --> 00:34:03,679
uh which was very slow and at times it

1026
00:34:03,679 --> 00:34:05,679
just crashed you know i put updates in

1027
00:34:05,679 --> 00:34:06,960
the spreadsheet and it would just drop

1028
00:34:06,960 --> 00:34:08,079
it sometimes

1029
00:34:08,079 --> 00:34:11,359
um when sending the sending new data to

1030
00:34:11,359 --> 00:34:13,679
google sheets uh the requests

1031
00:34:13,679 --> 00:34:15,599
pretty often timed out so i have to have

1032
00:34:15,599 --> 00:34:18,079
uh you know a lot of retries

1033
00:34:18,079 --> 00:34:20,000
and with new relic the only thing really

1034
00:34:20,000 --> 00:34:22,719
we found was that queries are somewhat

1035
00:34:22,719 --> 00:34:24,079
limited probably just for user

1036
00:34:24,079 --> 00:34:25,119
experience i don't want to get it too

1037
00:34:25,119 --> 00:34:27,280
complicated but i found i was wanting to

1038
00:34:27,280 --> 00:34:29,359
do a lot with the data to display to

1039
00:34:29,359 --> 00:34:31,440
people you know transform the data in a

1040
00:34:31,440 --> 00:34:33,280
way that it was valuable to

1041
00:34:33,280 --> 00:34:34,879
non-technical people

1042
00:34:34,879 --> 00:34:36,399
but you really have to process their

1043
00:34:36,399 --> 00:34:37,679
data before you put in your relic

1044
00:34:37,679 --> 00:34:39,119
because neuralink doesn't really give

1045
00:34:39,119 --> 00:34:41,520
you a lot of those tools

1046
00:34:41,520 --> 00:34:42,960
this was the

1047
00:34:42,960 --> 00:34:45,440
main thing that we we faced with the

1048
00:34:45,440 --> 00:34:47,199
project

1049
00:34:47,199 --> 00:34:49,280
basically a lot of

1050
00:34:49,280 --> 00:34:52,079
teams that kind of get spawned

1051
00:34:52,079 --> 00:34:53,918
get created to kind of run a project

1052
00:34:53,918 --> 00:34:55,760
build a project build build a product

1053
00:34:55,760 --> 00:34:57,359
whatever and then you kind of move on to

1054
00:34:57,359 --> 00:34:59,680
the next one and there's no real set

1055
00:34:59,680 --> 00:35:01,599
definition there is now but back in the

1056
00:35:01,599 --> 00:35:03,760
day there wasn't uh of like who should

1057
00:35:03,760 --> 00:35:05,440
maintain those resources who owns them

1058
00:35:05,440 --> 00:35:07,760
who who's responsible for them and so we

1059
00:35:07,760 --> 00:35:09,359
had to solve this piece before we ended

1060
00:35:09,359 --> 00:35:11,040
up going with the you know we're

1061
00:35:11,040 --> 00:35:12,480
modifying your resources can you help us

1062
00:35:12,480 --> 00:35:13,839
out because

1063
00:35:13,839 --> 00:35:15,599
more times than not we would find there

1064
00:35:15,599 --> 00:35:17,119
was no one owning this resource and we

1065
00:35:17,119 --> 00:35:18,320
weren't just going to modify it on

1066
00:35:18,320 --> 00:35:20,560
behalf of someone or delete it

1067
00:35:20,560 --> 00:35:21,680
because we don't know what it does we

1068
00:35:21,680 --> 00:35:22,720
don't know what it's connected to you

1069
00:35:22,720 --> 00:35:24,320
know it's the whole no one wants to

1070
00:35:24,320 --> 00:35:25,920
touch the old

1071
00:35:25,920 --> 00:35:27,040
instance

1072
00:35:27,040 --> 00:35:28,320
server running something because it

1073
00:35:28,320 --> 00:35:30,880
might break um so that that took a long

1074
00:35:30,880 --> 00:35:33,760
time for us to fix

1075
00:35:34,079 --> 00:35:36,880
and it was a little political just with

1076
00:35:36,880 --> 00:35:38,240
it was really it was really difficult to

1077
00:35:38,240 --> 00:35:40,000
get buy-in and movement and traction

1078
00:35:40,000 --> 00:35:41,280
with this project we had this track we

1079
00:35:41,280 --> 00:35:43,119
had this project because we had a

1080
00:35:43,119 --> 00:35:45,280
compliance need we needed to

1081
00:35:45,280 --> 00:35:47,359
uh you know do something by a certain

1082
00:35:47,359 --> 00:35:49,119
date so it's very important the business

1083
00:35:49,119 --> 00:35:50,960
definitely needed to do it but without

1084
00:35:50,960 --> 00:35:53,520
the right investment at the leadership

1085
00:35:53,520 --> 00:35:55,200
level you know coming down to the

1086
00:35:55,200 --> 00:35:57,040
developers and kind of re-prioritizing

1087
00:35:57,040 --> 00:35:59,520
things it was very difficult to get

1088
00:35:59,520 --> 00:36:01,359
engagement

1089
00:36:01,359 --> 00:36:03,040
and the old swedish handoff that's a

1090
00:36:03,040 --> 00:36:05,359
term i've coined myself um

1091
00:36:05,359 --> 00:36:07,440
basically we got given the project with

1092
00:36:07,440 --> 00:36:09,839
like six months to do it we're just out

1093
00:36:09,839 --> 00:36:11,200
of the blue and

1094
00:36:11,200 --> 00:36:12,960
you know had been known about for a

1095
00:36:12,960 --> 00:36:14,240
while so

1096
00:36:14,240 --> 00:36:16,079
that was a little frustrating in the

1097
00:36:16,079 --> 00:36:17,760
fact that

1098
00:36:17,760 --> 00:36:18,560
we

1099
00:36:18,560 --> 00:36:20,079
didn't have a lot of time to do this in

1100
00:36:20,079 --> 00:36:22,160
the best way we wanted to do it

1101
00:36:22,160 --> 00:36:24,079
um you know we kind of have to just get

1102
00:36:24,079 --> 00:36:27,040
the project out mvp um we we couldn't do

1103
00:36:27,040 --> 00:36:28,240
all the beautiful things i said at the

1104
00:36:28,240 --> 00:36:30,240
beginning that i hope everyone else does

1105
00:36:30,240 --> 00:36:32,720
um so it's a bit rushed

1106
00:36:32,720 --> 00:36:35,520
and yeah when everything's a priority um

1107
00:36:35,520 --> 00:36:37,359
nothing is and that's definitely what we

1108
00:36:37,359 --> 00:36:40,800
found with our project

1109
00:36:40,800 --> 00:36:44,320
so summary um i think assurance is very

1110
00:36:44,320 --> 00:36:45,520
important and i think everyone should be

1111
00:36:45,520 --> 00:36:48,400
doing it um

1112
00:36:48,400 --> 00:36:50,240
it's it's definitely one of the best

1113
00:36:50,240 --> 00:36:51,920
solutions to insecure infrastructure

1114
00:36:51,920 --> 00:36:52,960
there's obviously a lot more that you

1115
00:36:52,960 --> 00:36:54,560
need to do than you know like patching

1116
00:36:54,560 --> 00:36:55,839
and

1117
00:36:55,839 --> 00:36:58,000
a bunch of other stuff but this provides

1118
00:36:58,000 --> 00:37:00,400
a really good way to automate it and to

1119
00:37:00,400 --> 00:37:02,640
to scale um

1120
00:37:02,640 --> 00:37:04,240
yeah just part of well-managed cloud you

1121
00:37:04,240 --> 00:37:06,160
know part of your responsibility as the

1122
00:37:06,160 --> 00:37:08,400
customer in aws to make sure that your

1123
00:37:08,400 --> 00:37:11,359
stuff is secure it's a huge burden and

1124
00:37:11,359 --> 00:37:12,960
without the right tools it's very

1125
00:37:12,960 --> 00:37:15,200
difficult to do and it very very quickly

1126
00:37:15,200 --> 00:37:18,000
gets uh complicated so this this does a

1127
00:37:18,000 --> 00:37:19,520
really good job of kind of doing it for

1128
00:37:19,520 --> 00:37:21,280
you you know once it's set up

1129
00:37:21,280 --> 00:37:23,200
you're good uh makes auditing a lot

1130
00:37:23,200 --> 00:37:24,560
easier and

1131
00:37:24,560 --> 00:37:26,640
choose your tools wisely because

1132
00:37:26,640 --> 00:37:27,680
uh

1133
00:37:27,680 --> 00:37:30,079
don't use 3g um yeah and then just

1134
00:37:30,079 --> 00:37:31,359
enterprise issues you know when you've

1135
00:37:31,359 --> 00:37:32,320
got

1136
00:37:32,320 --> 00:37:35,119
a company of 4 000 people 5 000 people

1137
00:37:35,119 --> 00:37:36,400
um

1138
00:37:36,400 --> 00:37:38,160
implementing this type of thing in an

1139
00:37:38,160 --> 00:37:40,240
existing environment is extremely

1140
00:37:40,240 --> 00:37:41,359
difficult

1141
00:37:41,359 --> 00:37:43,280
so i urge anyone who's looking at this

1142
00:37:43,280 --> 00:37:45,280
to do it as quick as possible as early

1143
00:37:45,280 --> 00:37:47,760
on in your cloud journey you know

1144
00:37:47,760 --> 00:37:49,599
do this do this from the very get-go so

1145
00:37:49,599 --> 00:37:51,040
it's so you don't have to mess around

1146
00:37:51,040 --> 00:37:53,359
with ownership issues or doing stuff

1147
00:37:53,359 --> 00:37:54,480
when it's already been deployed in

1148
00:37:54,480 --> 00:37:56,320
production that's very difficult to

1149
00:37:56,320 --> 00:37:58,320
figure out

1150
00:37:58,320 --> 00:38:00,480
and yeah um this is the first time i've

1151
00:38:00,480 --> 00:38:02,560
spoken at a conference so if i'd

1152
00:38:02,560 --> 00:38:04,079
appreciate any feedback if you could you

1153
00:38:04,079 --> 00:38:05,599
know let me know how it go that would be

1154
00:38:05,599 --> 00:38:07,599
uh really cool and you can talk to me on

1155
00:38:07,599 --> 00:38:09,280
linkedin i kind of had to cut out a

1156
00:38:09,280 --> 00:38:10,800
bunch of content you know the technical

1157
00:38:10,800 --> 00:38:13,040
stuff um to fit it into 30 minutes so if

1158
00:38:13,040 --> 00:38:14,960
you have questions about very specific

1159
00:38:14,960 --> 00:38:16,839
technical things i'm happy to answer

1160
00:38:16,839 --> 00:38:19,520
them and last thing zx security is

1161
00:38:19,520 --> 00:38:21,359
hiring so we're looking for any

1162
00:38:21,359 --> 00:38:23,040
consultant from a

1163
00:38:23,040 --> 00:38:26,320
junior to a lead in our pintesting cloud

1164
00:38:26,320 --> 00:38:28,720
and our risk compliance kind of

1165
00:38:28,720 --> 00:38:31,359
divisions of of the company so

1166
00:38:31,359 --> 00:38:33,599
if this type of thing interests you

1167
00:38:33,599 --> 00:38:34,880
you know come have a chat to me or

1168
00:38:34,880 --> 00:38:37,440
anyone else in zdx um and we've got a

1169
00:38:37,440 --> 00:38:39,119
lot of exciting projects like this type

1170
00:38:39,119 --> 00:38:41,119
of thing lined up for

1171
00:38:41,119 --> 00:38:43,040
zx cloud

1172
00:38:43,040 --> 00:38:45,440
yeah that's uh

1173
00:38:45,440 --> 00:38:48,920
yeah that's my talk

