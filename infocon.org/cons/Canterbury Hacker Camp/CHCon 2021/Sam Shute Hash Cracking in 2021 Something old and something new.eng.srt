1
00:00:05,279 --> 00:00:07,600
cool uh thank you for coming everyone um

2
00:00:07,600 --> 00:00:10,080
and sticking with us uh

3
00:00:10,080 --> 00:00:11,599
i'm here today to talk about password

4
00:00:11,599 --> 00:00:13,040
hash cracking

5
00:00:13,040 --> 00:00:15,759
um just a brief bit about me

6
00:00:15,759 --> 00:00:17,680
i'm sam shoot you may also know me as

7
00:00:17,680 --> 00:00:19,840
goldstein i'm a principal technical

8
00:00:19,840 --> 00:00:22,720
consultant at quantum security so

9
00:00:22,720 --> 00:00:24,320
that's doing things like network pen

10
00:00:24,320 --> 00:00:25,279
testing

11
00:00:25,279 --> 00:00:27,439
web app pen testing host configuration

12
00:00:27,439 --> 00:00:29,119
reviews

13
00:00:29,119 --> 00:00:31,840
wi-fi pen testing uh red teaming stuff

14
00:00:31,840 --> 00:00:33,040
like that

15
00:00:33,040 --> 00:00:34,000
um

16
00:00:34,000 --> 00:00:35,760
my sort of general interests involve

17
00:00:35,760 --> 00:00:37,440
network pen testing physical security

18
00:00:37,440 --> 00:00:39,520
and electronics i also do a bit of 3d

19
00:00:39,520 --> 00:00:41,200
printing and i've done some research on

20
00:00:41,200 --> 00:00:44,239
that sort of thing in the past as well

21
00:00:44,239 --> 00:00:46,079
but today we're here to talk about some

22
00:00:46,079 --> 00:00:48,000
stuff to do with

23
00:00:48,000 --> 00:00:49,200
hashing

24
00:00:49,200 --> 00:00:51,120
so first i want to do a bit of a

25
00:00:51,120 --> 00:00:52,800
explanation of the difference between

26
00:00:52,800 --> 00:00:55,839
hashing and encryption

27
00:00:56,640 --> 00:00:59,359
so both encryption and hashing take in

28
00:00:59,359 --> 00:01:01,359
our plain text values that we want to

29
00:01:01,359 --> 00:01:02,960
keep kind of secret

30
00:01:02,960 --> 00:01:05,119
and convert them into an unrecognizable

31
00:01:05,119 --> 00:01:06,960
value

32
00:01:06,960 --> 00:01:09,040
the difference at a high level depends

33
00:01:09,040 --> 00:01:12,799
on what we want to use that value for

34
00:01:12,799 --> 00:01:14,960
if we ever need to see that original

35
00:01:14,960 --> 00:01:17,200
value again in future then we need to

36
00:01:17,200 --> 00:01:19,520
encrypt it so that we can decrypt it so

37
00:01:19,520 --> 00:01:21,680
it's a sort of a reversible function

38
00:01:21,680 --> 00:01:23,600
whereas for hashing if we never need to

39
00:01:23,600 --> 00:01:24,960
see it again

40
00:01:24,960 --> 00:01:27,119
then we can use a one-way function

41
00:01:27,119 --> 00:01:28,000
um

42
00:01:28,000 --> 00:01:31,360
you can think of it kind of like

43
00:01:31,360 --> 00:01:33,200
for encryption you'd want to send a

44
00:01:33,200 --> 00:01:34,880
secret message to someone you want to be

45
00:01:34,880 --> 00:01:36,320
able to show be sure that they can

46
00:01:36,320 --> 00:01:37,600
actually read it on the other end

47
00:01:37,600 --> 00:01:38,799
because if they can't it's kind of

48
00:01:38,799 --> 00:01:40,400
useless

49
00:01:40,400 --> 00:01:41,920
and with hashing it would be for

50
00:01:41,920 --> 00:01:43,680
something like validating passwords like

51
00:01:43,680 --> 00:01:46,560
we're going to talk about today

52
00:01:46,560 --> 00:01:48,399
where you want to authenticate someone

53
00:01:48,399 --> 00:01:51,040
so it doesn't actually matter what the

54
00:01:51,040 --> 00:01:52,799
value that they give you is as long as

55
00:01:52,799 --> 00:01:54,479
we know that it matches what it's

56
00:01:54,479 --> 00:01:57,119
supposed to be

57
00:01:58,399 --> 00:02:00,560
um oh actually there's a bit more to

58
00:02:00,560 --> 00:02:03,040
talk about there um yeah sorry you can

59
00:02:03,040 --> 00:02:04,479
think of it kind of like making fruit

60
00:02:04,479 --> 00:02:06,799
juice

61
00:02:06,799 --> 00:02:08,560
if we get a collection of fruits and put

62
00:02:08,560 --> 00:02:10,160
them into a blender we get some juice

63
00:02:10,160 --> 00:02:11,520
out at the end that's kind of like our

64
00:02:11,520 --> 00:02:13,599
one-way function because you can't turn

65
00:02:13,599 --> 00:02:16,080
juice back into fruit

66
00:02:16,080 --> 00:02:18,239
but if we put all the same fruits into

67
00:02:18,239 --> 00:02:20,160
the blender again we should get the same

68
00:02:20,160 --> 00:02:21,760
juice out and if we taste them they

69
00:02:21,760 --> 00:02:24,640
should taste exactly the same

70
00:02:24,640 --> 00:02:26,720
cool

71
00:02:26,720 --> 00:02:28,720
so now i want to do a bit of a brief

72
00:02:28,720 --> 00:02:32,319
talk through password requirements

73
00:02:33,680 --> 00:02:35,920
you might be familiar with things like

74
00:02:35,920 --> 00:02:37,760
having a bike lock

75
00:02:37,760 --> 00:02:39,200
where you have three or four little

76
00:02:39,200 --> 00:02:42,000
dials that have zero to nine on them

77
00:02:42,000 --> 00:02:44,080
so in the case of having three dials you

78
00:02:44,080 --> 00:02:45,040
have

79
00:02:45,040 --> 00:02:47,440
a thousand different combinations from

80
00:02:47,440 --> 00:02:49,840
zeros up to

81
00:02:49,840 --> 00:02:52,560
999

82
00:02:52,879 --> 00:02:54,239
if you were to go through these and

83
00:02:54,239 --> 00:02:57,440
check one combination every 10 seconds

84
00:02:57,440 --> 00:02:59,040
it would only take you

85
00:02:59,040 --> 00:03:01,440
2 hours and 47 minutes to try every

86
00:03:01,440 --> 00:03:02,879
different combination on one of these

87
00:03:02,879 --> 00:03:05,040
bike locks

88
00:03:05,040 --> 00:03:06,959
that's something to keep in mind as we

89
00:03:06,959 --> 00:03:10,080
go through the rest of this talk

90
00:03:10,239 --> 00:03:12,239
because when we change our password

91
00:03:12,239 --> 00:03:14,239
requirements to increase that number it

92
00:03:14,239 --> 00:03:16,000
takes longer to do things so if you were

93
00:03:16,000 --> 00:03:17,360
to have

94
00:03:17,360 --> 00:03:19,040
four rotors on your lock instead it

95
00:03:19,040 --> 00:03:22,079
would take you much longer

96
00:03:22,720 --> 00:03:24,080
where we're doing this with passwords

97
00:03:24,080 --> 00:03:25,440
you're not sitting there typing in one

98
00:03:25,440 --> 00:03:27,120
password at a time trying them manually

99
00:03:27,120 --> 00:03:29,200
by hand one every 10 seconds instead

100
00:03:29,200 --> 00:03:31,519
you're trying to crack these

101
00:03:31,519 --> 00:03:33,280
automatically like computationally

102
00:03:33,280 --> 00:03:34,159
through

103
00:03:34,159 --> 00:03:36,798
gpus

104
00:03:38,799 --> 00:03:41,920
the nzism sets out some password

105
00:03:41,920 --> 00:03:45,040
requirements for government agencies

106
00:03:45,040 --> 00:03:47,280
this is fairly common sort of password

107
00:03:47,280 --> 00:03:48,480
requirements

108
00:03:48,480 --> 00:03:50,080
that you'll

109
00:03:50,080 --> 00:03:52,000
see around everywhere

110
00:03:52,000 --> 00:03:54,319
uh is password lengths of being 10 with

111
00:03:54,319 --> 00:03:56,239
a mixture of characters

112
00:03:56,239 --> 00:04:01,040
or 16 with no complexity requirements

113
00:04:01,040 --> 00:04:03,439
you'll notice some of the slides have

114
00:04:03,439 --> 00:04:05,599
gold stars on them

115
00:04:05,599 --> 00:04:06,959
if you

116
00:04:06,959 --> 00:04:08,640
keep a note of those ones there'll be

117
00:04:08,640 --> 00:04:11,599
something at the end for that

118
00:04:12,640 --> 00:04:15,280
so where we're talking about uh password

119
00:04:15,280 --> 00:04:17,759
requirements uh those complexity

120
00:04:17,759 --> 00:04:19,680
requirements that we had before we had

121
00:04:19,680 --> 00:04:21,519
lowercase letters uppercase letters

122
00:04:21,519 --> 00:04:24,320
digits and special characters

123
00:04:24,320 --> 00:04:25,440
um

124
00:04:25,440 --> 00:04:28,000
this is based on a standard us keyboard

125
00:04:28,000 --> 00:04:30,240
you'll have 95 different characters that

126
00:04:30,240 --> 00:04:32,000
are involved so previously when we had a

127
00:04:32,000 --> 00:04:33,520
look at that bike lock before there was

128
00:04:33,520 --> 00:04:35,120
only 10 different values that you could

129
00:04:35,120 --> 00:04:38,320
have between 0 and 9

130
00:04:38,320 --> 00:04:40,400
whereas for a password each character

131
00:04:40,400 --> 00:04:41,280
can be

132
00:04:41,280 --> 00:04:43,199
95 different values and so that

133
00:04:43,199 --> 00:04:47,120
massively increases the complexity

134
00:04:48,880 --> 00:04:50,479
you can think of it kind of like this

135
00:04:50,479 --> 00:04:53,120
using these

136
00:04:53,440 --> 00:04:54,800
sort of

137
00:04:54,800 --> 00:04:56,960
mathematical displays of what they are

138
00:04:56,960 --> 00:04:58,479
um

139
00:04:58,479 --> 00:04:59,840
for

140
00:04:59,840 --> 00:05:01,199
that bike lock that we looked at at

141
00:05:01,199 --> 00:05:03,199
start um

142
00:05:03,199 --> 00:05:04,560
you'd have

143
00:05:04,560 --> 00:05:07,360
uh 10 to the power of 3 where you have

144
00:05:07,360 --> 00:05:09,600
10 characters to the power of how long

145
00:05:09,600 --> 00:05:12,000
the password is

146
00:05:12,000 --> 00:05:14,320
so for something like old password

147
00:05:14,320 --> 00:05:16,800
requirements or you might still have

148
00:05:16,800 --> 00:05:18,400
applications like

149
00:05:18,400 --> 00:05:20,080
your password for your bank that only

150
00:05:20,080 --> 00:05:23,199
require you to have eight characters

151
00:05:23,199 --> 00:05:25,440
that's not great but it's still

152
00:05:25,440 --> 00:05:28,479
95 different instances to the power of 8

153
00:05:28,479 --> 00:05:30,960
which is the length of that password

154
00:05:30,960 --> 00:05:32,880
that's what that actually looks like in

155
00:05:32,880 --> 00:05:35,520
terms of what that number means

156
00:05:35,520 --> 00:05:36,639
so it

157
00:05:36,639 --> 00:05:38,800
it is still kind of heaps

158
00:05:38,800 --> 00:05:42,000
um but it's not heaps um

159
00:05:42,000 --> 00:05:45,039
as we'll see later on um

160
00:05:45,039 --> 00:05:48,960
this number is six quadrillion 634

161
00:05:48,960 --> 00:05:52,560
trillion 204 billion 300 million

162
00:05:52,560 --> 00:05:54,240
um so that sounds like a lot to me but

163
00:05:54,240 --> 00:05:57,039
in reality it's kind of not

164
00:05:57,039 --> 00:05:58,720
um

165
00:05:58,720 --> 00:05:59,840
you'll see the

166
00:05:59,840 --> 00:06:02,319
e plus on the end that's kind of how

167
00:06:02,319 --> 00:06:04,560
many digits back you need to move that

168
00:06:04,560 --> 00:06:06,800
full stop that's there that decimal

169
00:06:06,800 --> 00:06:08,080
point

170
00:06:08,080 --> 00:06:10,000
so by the time you get down to

171
00:06:10,000 --> 00:06:12,479
10 with no complexity or 16 with no

172
00:06:12,479 --> 00:06:13,759
complexity

173
00:06:13,759 --> 00:06:17,520
you're ending up with huge numbers

174
00:06:18,319 --> 00:06:19,759
one thing that you can note here is the

175
00:06:19,759 --> 00:06:21,360
difference between eight characters with

176
00:06:21,360 --> 00:06:23,919
no complexity and eight characters with

177
00:06:23,919 --> 00:06:25,440
three complexity

178
00:06:25,440 --> 00:06:27,600
um i won't bore you with the maths of

179
00:06:27,600 --> 00:06:29,039
how you go about doing that but you'll

180
00:06:29,039 --> 00:06:30,720
see that it's actually less than half so

181
00:06:30,720 --> 00:06:32,560
by enforcing a complexity requirement

182
00:06:32,560 --> 00:06:34,080
you actually reduce the number of

183
00:06:34,080 --> 00:06:36,000
possible passwords that someone can have

184
00:06:36,000 --> 00:06:37,759
in half

185
00:06:37,759 --> 00:06:39,600
which

186
00:06:39,600 --> 00:06:42,400
can massively decrease the

187
00:06:42,400 --> 00:06:45,840
the hash cracking time later on

188
00:06:46,000 --> 00:06:47,840
we'll also briefly cover over where you

189
00:06:47,840 --> 00:06:50,560
can collect passwords from um this is a

190
00:06:50,560 --> 00:06:53,520
picture of the uh first hash cracking

191
00:06:53,520 --> 00:06:56,400
rig that we built at quantum that had uh

192
00:06:56,400 --> 00:07:00,160
four 28 etis in it um so we've moved on

193
00:07:00,160 --> 00:07:01,360
a little bit since then in terms of what

194
00:07:01,360 --> 00:07:03,280
we can do

195
00:07:03,280 --> 00:07:04,800
but some places that you can get

196
00:07:04,800 --> 00:07:06,479
passwords include

197
00:07:06,479 --> 00:07:08,319
responder so if you're on a network

198
00:07:08,319 --> 00:07:11,440
somewhere and you set up responder

199
00:07:11,440 --> 00:07:12,880
you can trick people into thinking that

200
00:07:12,880 --> 00:07:14,639
you're a network share or some other

201
00:07:14,639 --> 00:07:16,000
things and they'll just send you

202
00:07:16,000 --> 00:07:17,520
password hashes which is great and then

203
00:07:17,520 --> 00:07:21,039
we can take those offline and crack them

204
00:07:21,039 --> 00:07:22,560
sometimes during an engagement you'll

205
00:07:22,560 --> 00:07:24,479
actually breach a host or a domain

206
00:07:24,479 --> 00:07:26,960
controller and you'll get

207
00:07:26,960 --> 00:07:32,638
dumps of sam hashes or lsas or ntds

208
00:07:34,080 --> 00:07:38,639
these tend to be in ntlm format

209
00:07:39,120 --> 00:07:41,520
if you had only eight characters like we

210
00:07:41,520 --> 00:07:44,879
talked about previously using

211
00:07:44,879 --> 00:07:47,440
modern gpus like the rtx 3090s that are

212
00:07:47,440 --> 00:07:49,039
available at the moment

213
00:07:49,039 --> 00:07:52,160
you could crack those in under two hours

214
00:07:52,160 --> 00:07:53,759
so eight characters is obviously not

215
00:07:53,759 --> 00:07:56,080
sufficient

216
00:07:56,080 --> 00:07:57,360
one thing to keep in mind is that you

217
00:07:57,360 --> 00:07:59,039
don't always have to crack the hashes

218
00:07:59,039 --> 00:08:01,759
though um even though this is the point

219
00:08:01,759 --> 00:08:04,080
of this talk is two hack uh two crack

220
00:08:04,080 --> 00:08:05,039
hashes

221
00:08:05,039 --> 00:08:06,560
um there are other techniques that you

222
00:08:06,560 --> 00:08:08,000
can use that don't require you to do

223
00:08:08,000 --> 00:08:09,440
that and you can just use those hashes

224
00:08:09,440 --> 00:08:12,680
straight away

225
00:08:12,720 --> 00:08:14,160
uh you can also get passwords from

226
00:08:14,160 --> 00:08:15,680
database stumps so sometimes you'll

227
00:08:15,680 --> 00:08:16,960
break into an application you'll be able

228
00:08:16,960 --> 00:08:19,199
to dump out the database um different

229
00:08:19,199 --> 00:08:21,120
algorithms depending on how the person

230
00:08:21,120 --> 00:08:22,560
who built the database is storing their

231
00:08:22,560 --> 00:08:23,840
passwords

232
00:08:23,840 --> 00:08:25,680
um you can get those like i was saying

233
00:08:25,680 --> 00:08:28,319
on the job um there's also

234
00:08:28,319 --> 00:08:30,400
both private and public dumps available

235
00:08:30,400 --> 00:08:31,759
online depending on whether you just

236
00:08:31,759 --> 00:08:33,440
want to take what's available or buy

237
00:08:33,440 --> 00:08:34,640
something

238
00:08:34,640 --> 00:08:35,440
um

239
00:08:35,440 --> 00:08:36,958
these are often really useful because

240
00:08:36,958 --> 00:08:39,440
people tend to reuse account passwords

241
00:08:39,440 --> 00:08:40,399
as we know

242
00:08:40,399 --> 00:08:41,839
which is kind of the value in cracking

243
00:08:41,839 --> 00:08:43,599
that hash back into a clear text value

244
00:08:43,599 --> 00:08:45,040
is then we can go and use it to try and

245
00:08:45,040 --> 00:08:46,160
log into

246
00:08:46,160 --> 00:08:48,880
everything else

247
00:08:50,000 --> 00:08:52,480
sometimes you'll also come across

248
00:08:52,480 --> 00:08:55,279
other sources of passwords

249
00:08:55,279 --> 00:08:57,440
um where the big four will just leave

250
00:08:57,440 --> 00:08:59,760
password dumps on network shares for you

251
00:08:59,760 --> 00:09:01,360
and you can take these offline and

252
00:09:01,360 --> 00:09:04,959
that's fantastic on the job

253
00:09:05,120 --> 00:09:07,200
um so now we'll get into how to actually

254
00:09:07,200 --> 00:09:08,959
do hash cracking so we've collected some

255
00:09:08,959 --> 00:09:10,320
hashes

256
00:09:10,320 --> 00:09:12,240
what do we do with them

257
00:09:12,240 --> 00:09:13,360
um

258
00:09:13,360 --> 00:09:15,519
we can use dictionary attacks brute

259
00:09:15,519 --> 00:09:19,440
force attacks masks or rules

260
00:09:19,440 --> 00:09:21,200
these are kind of the the broad four

261
00:09:21,200 --> 00:09:24,399
categories that most attacks fit into

262
00:09:24,399 --> 00:09:26,399
um

263
00:09:26,399 --> 00:09:28,080
dictionary attacks we're just trying the

264
00:09:28,080 --> 00:09:30,640
most common passwords um there's lots of

265
00:09:30,640 --> 00:09:32,560
password lists that are available online

266
00:09:32,560 --> 00:09:35,120
that you can use from things like

267
00:09:35,120 --> 00:09:38,080
sec lists or crack station um

268
00:09:38,080 --> 00:09:40,080
that will give you the million most

269
00:09:40,080 --> 00:09:42,080
common passwords that you can go and try

270
00:09:42,080 --> 00:09:44,160
really quickly

271
00:09:44,160 --> 00:09:45,920
where we were talking before about using

272
00:09:45,920 --> 00:09:48,160
those uh bike locks and you try one

273
00:09:48,160 --> 00:09:50,800
every 10 seconds if you were to try this

274
00:09:50,800 --> 00:09:52,480
using a gpu you're instead trying

275
00:09:52,480 --> 00:09:55,839
millions of passwords per second

276
00:09:57,760 --> 00:09:59,440
so brute force attacks you can see that

277
00:09:59,440 --> 00:10:01,600
this is kind of different where

278
00:10:01,600 --> 00:10:03,120
you start with the first value then you

279
00:10:03,120 --> 00:10:05,279
kind of just increment it by one and by

280
00:10:05,279 --> 00:10:07,279
one and by one and by one and you try

281
00:10:07,279 --> 00:10:10,079
every possible value

282
00:10:10,079 --> 00:10:12,560
the difference between these is that

283
00:10:12,560 --> 00:10:15,600
this is sort of a very fast approach

284
00:10:15,600 --> 00:10:17,600
that works really well for getting most

285
00:10:17,600 --> 00:10:18,800
passwords

286
00:10:18,800 --> 00:10:20,079
whereas if you have the time and

287
00:10:20,079 --> 00:10:21,519
computational ability this will

288
00:10:21,519 --> 00:10:25,200
eventually get you every password

289
00:10:28,240 --> 00:10:29,839
there are some

290
00:10:29,839 --> 00:10:31,680
tools available so things like hashcat

291
00:10:31,680 --> 00:10:32,959
that will let you do

292
00:10:32,959 --> 00:10:36,000
um masked text instead so where you

293
00:10:36,000 --> 00:10:38,000
generate those random passwords like all

294
00:10:38,000 --> 00:10:39,360
the bruteforce passwords like we were

295
00:10:39,360 --> 00:10:41,360
looking at before

296
00:10:41,360 --> 00:10:42,959
instead of going through every single

297
00:10:42,959 --> 00:10:45,040
one we can specify some constraints of

298
00:10:45,040 --> 00:10:46,640
what we want to do so we only want to

299
00:10:46,640 --> 00:10:48,320
look at lowercase characters and we only

300
00:10:48,320 --> 00:10:50,079
want to look at numbers so for example

301
00:10:50,079 --> 00:10:52,000
if we know that

302
00:10:52,000 --> 00:10:56,000
this person has generated their password

303
00:10:56,800 --> 00:10:58,240
and we know that the first character is

304
00:10:58,240 --> 00:11:00,160
uppercase and then it's seven lowercase

305
00:11:00,160 --> 00:11:01,279
characters

306
00:11:01,279 --> 00:11:03,360
or eight lowercase characters and then a

307
00:11:03,360 --> 00:11:05,600
number on the end because that's

308
00:11:05,600 --> 00:11:08,480
the organization's password requirements

309
00:11:08,480 --> 00:11:09,519
um

310
00:11:09,519 --> 00:11:12,079
then we can just use these masks where

311
00:11:12,079 --> 00:11:13,920
you select whatever the value is that

312
00:11:13,920 --> 00:11:17,440
you want for each character and sequence

313
00:11:17,440 --> 00:11:19,040
and then it'll only generate passwords

314
00:11:19,040 --> 00:11:22,240
that meet those requirements

315
00:11:23,440 --> 00:11:27,200
um the s character there is the special

316
00:11:27,200 --> 00:11:28,640
character set

317
00:11:28,640 --> 00:11:31,920
um that is the i think it was the 33

318
00:11:31,920 --> 00:11:33,839
characters that we looked at before

319
00:11:33,839 --> 00:11:36,640
that make up the part of the 95

320
00:11:36,640 --> 00:11:38,640
the others being lower case uppercase

321
00:11:38,640 --> 00:11:41,120
and numbers

322
00:11:41,360 --> 00:11:43,680
so you can actually see that in

323
00:11:43,680 --> 00:11:46,720
the a set so the a set is made up of

324
00:11:46,720 --> 00:11:48,640
lowercase uppercase

325
00:11:48,640 --> 00:11:51,440
decimals or and

326
00:11:51,440 --> 00:11:53,920
specials

327
00:11:54,720 --> 00:11:55,519
cool

328
00:11:55,519 --> 00:11:58,720
uh rules is kind of a variation of the

329
00:11:58,720 --> 00:12:00,079
dictionary attack that we looked at

330
00:12:00,079 --> 00:12:02,240
before so you take in a pre-known

331
00:12:02,240 --> 00:12:04,079
password list and then you apply rules

332
00:12:04,079 --> 00:12:05,519
to it to change it

333
00:12:05,519 --> 00:12:07,200
so say we've run our dictionary attack

334
00:12:07,200 --> 00:12:08,880
and it's only taken us five minutes to

335
00:12:08,880 --> 00:12:11,040
run it but we've only got 10 of the

336
00:12:11,040 --> 00:12:12,560
passwords that we have and we want to

337
00:12:12,560 --> 00:12:13,760
get more

338
00:12:13,760 --> 00:12:16,399
instead what we can do is we can check

339
00:12:16,399 --> 00:12:18,240
change all characters to uppercase or

340
00:12:18,240 --> 00:12:20,000
make sure we capitalize the first

341
00:12:20,000 --> 00:12:22,560
character of every password or we can

342
00:12:22,560 --> 00:12:25,440
replace every instance of a with the at

343
00:12:25,440 --> 00:12:27,120
symbol

344
00:12:27,120 --> 00:12:28,800
so we can go through things like that

345
00:12:28,800 --> 00:12:30,320
that'll sort of

346
00:12:30,320 --> 00:12:32,240
provide those common transforms on

347
00:12:32,240 --> 00:12:34,160
passwords that make can make old

348
00:12:34,160 --> 00:12:36,720
password lists useful again such as

349
00:12:36,720 --> 00:12:39,920
appending um 2021 to every single

350
00:12:39,920 --> 00:12:41,760
password

351
00:12:41,760 --> 00:12:44,000
because service desk loves adding the

352
00:12:44,000 --> 00:12:47,200
year on the end of the password

353
00:12:50,959 --> 00:12:52,320
this is kind of a bit of a jump from

354
00:12:52,320 --> 00:12:54,800
what we were just talking about um

355
00:12:54,800 --> 00:12:56,560
but it's a way of adding extra

356
00:12:56,560 --> 00:12:58,000
protection so i guess this is kind of

357
00:12:58,000 --> 00:13:00,240
one for any developers in the room

358
00:13:00,240 --> 00:13:03,360
um you can salt passwords to make

359
00:13:03,360 --> 00:13:04,639
cracking them

360
00:13:04,639 --> 00:13:07,040
more difficult

361
00:13:07,040 --> 00:13:08,000
the

362
00:13:08,000 --> 00:13:09,440
first

363
00:13:09,440 --> 00:13:11,200
line here is

364
00:13:11,200 --> 00:13:12,800
so we're going to apply

365
00:13:12,800 --> 00:13:14,800
the sha2 hashing algorithm to the

366
00:13:14,800 --> 00:13:17,839
password one two

367
00:13:18,399 --> 00:13:20,000
and it'll end up with that hash every

368
00:13:20,000 --> 00:13:21,600
time we apply that hashing algorithm to

369
00:13:21,600 --> 00:13:23,200
that password we'll get the same value

370
00:13:23,200 --> 00:13:25,360
out

371
00:13:25,360 --> 00:13:27,360
that's really useful for when we want to

372
00:13:27,360 --> 00:13:29,519
validate who a person is because they

373
00:13:29,519 --> 00:13:31,680
give us the password every time we hash

374
00:13:31,680 --> 00:13:33,120
it we get the same value back we know

375
00:13:33,120 --> 00:13:35,279
it's still them

376
00:13:35,279 --> 00:13:38,079
that becomes a bit of a problem when we

377
00:13:38,079 --> 00:13:40,320
have millions of users and a lot of

378
00:13:40,320 --> 00:13:41,600
these users will be using the same

379
00:13:41,600 --> 00:13:43,199
password

380
00:13:43,199 --> 00:13:45,760
every time we hash those passwords we're

381
00:13:45,760 --> 00:13:47,440
going to get the same value out that

382
00:13:47,440 --> 00:13:48,800
means that if anyone ever dumps the

383
00:13:48,800 --> 00:13:50,639
database and they see a whole lot of

384
00:13:50,639 --> 00:13:52,560
hashes that are exactly the same we know

385
00:13:52,560 --> 00:13:54,240
that that's probably a priority hash

386
00:13:54,240 --> 00:13:55,440
that we want to go and crack really

387
00:13:55,440 --> 00:13:57,040
quickly because it will give us access

388
00:13:57,040 --> 00:13:59,199
to a whole ton of accounts

389
00:13:59,199 --> 00:14:02,000
one way to get around that is to apply a

390
00:14:02,000 --> 00:14:04,639
value called assault to the password

391
00:14:04,639 --> 00:14:06,800
so that just adds an additional string

392
00:14:06,800 --> 00:14:08,560
which is randomized for each password

393
00:14:08,560 --> 00:14:10,320
that's stored

394
00:14:10,320 --> 00:14:13,120
to modify the value that we get out of

395
00:14:13,120 --> 00:14:15,440
the hash at the end

396
00:14:15,440 --> 00:14:17,839
so you can see that at the bottom there

397
00:14:17,839 --> 00:14:20,240
this is the way that hashes get stored

398
00:14:20,240 --> 00:14:21,920
in

399
00:14:21,920 --> 00:14:25,279
the etsy shadow file

400
00:14:25,360 --> 00:14:28,639
for the sha-256 algorithm

401
00:14:28,639 --> 00:14:32,240
it says the dollars five five being the

402
00:14:32,240 --> 00:14:35,040
sha-256 hash algorithm another dollar

403
00:14:35,040 --> 00:14:36,560
sign as a separator

404
00:14:36,560 --> 00:14:38,079
then we've got that value in there where

405
00:14:38,079 --> 00:14:41,319
it's s-d-u-f-h-i-u

406
00:14:42,800 --> 00:14:44,000
and then another dollar sign is a

407
00:14:44,000 --> 00:14:45,440
separator

408
00:14:45,440 --> 00:14:47,360
when the user provides their password we

409
00:14:47,360 --> 00:14:50,240
can go and grab that chunk out again

410
00:14:50,240 --> 00:14:53,279
concatenate the two together apply the

411
00:14:53,279 --> 00:14:55,040
algorithm that's defined and we should

412
00:14:55,040 --> 00:14:56,240
get that

413
00:14:56,240 --> 00:14:57,680
hash out

414
00:14:57,680 --> 00:14:59,440
so we can see that that's different for

415
00:14:59,440 --> 00:15:01,279
these two here where we've applied two

416
00:15:01,279 --> 00:15:03,360
different salts to the same password and

417
00:15:03,360 --> 00:15:05,519
we get two very different hashes out at

418
00:15:05,519 --> 00:15:07,920
the end

419
00:15:09,360 --> 00:15:10,959
so now you're saying okay cool sam i've

420
00:15:10,959 --> 00:15:12,639
got some hashes and i know theoretically

421
00:15:12,639 --> 00:15:14,480
kind of how to do this but but what do

422
00:15:14,480 --> 00:15:15,760
we do

423
00:15:15,760 --> 00:15:17,199
so there's a few ways that you can go

424
00:15:17,199 --> 00:15:19,519
about practically doing this

425
00:15:19,519 --> 00:15:21,920
you can build your own cracking rig

426
00:15:21,920 --> 00:15:24,880
you can build multiple cracking rigs and

427
00:15:24,880 --> 00:15:26,480
sort of do a distributed method of

428
00:15:26,480 --> 00:15:28,720
cracking them you can use cloud hosted

429
00:15:28,720 --> 00:15:30,800
hash cracking or community distributed

430
00:15:30,800 --> 00:15:32,639
hash cracking

431
00:15:32,639 --> 00:15:34,720
the first one of those that we'll cover

432
00:15:34,720 --> 00:15:37,680
is building a cracking rig

433
00:15:37,680 --> 00:15:39,759
so this was

434
00:15:39,759 --> 00:15:41,440
one that i built a few months ago just

435
00:15:41,440 --> 00:15:42,959
sitting on the carpet at home which is

436
00:15:42,959 --> 00:15:46,480
you know great for electrical components

437
00:15:46,480 --> 00:15:48,720
um the first thing that we need to do is

438
00:15:48,720 --> 00:15:51,040
get all the sort of base components

439
00:15:51,040 --> 00:15:52,560
together

440
00:15:52,560 --> 00:15:54,959
so that's things like a motherboard cpu

441
00:15:54,959 --> 00:15:57,920
ram all that kind of stuff

442
00:15:57,920 --> 00:15:59,680
for the most part the ram and the cpu

443
00:15:59,680 --> 00:16:01,759
that you get don't really matter as long

444
00:16:01,759 --> 00:16:03,440
as it's enough to run whatever operating

445
00:16:03,440 --> 00:16:05,279
system you're wanting um there are some

446
00:16:05,279 --> 00:16:07,199
constraints involved in certain cpus

447
00:16:07,199 --> 00:16:09,680
where they only allow you to have

448
00:16:09,680 --> 00:16:12,320
certain numbers of pcie lines for use of

449
00:16:12,320 --> 00:16:14,320
devices like graphics cards but that

450
00:16:14,320 --> 00:16:16,240
would be kind of a whole talk on its own

451
00:16:16,240 --> 00:16:18,560
so i'll leave that out for now

452
00:16:18,560 --> 00:16:19,920
and then two other sort of things that

453
00:16:19,920 --> 00:16:20,959
you need

454
00:16:20,959 --> 00:16:22,720
besides the gpus

455
00:16:22,720 --> 00:16:25,360
pcie rises and splitters you don't have

456
00:16:25,360 --> 00:16:26,880
to have these but they make it way

457
00:16:26,880 --> 00:16:29,199
easier

458
00:16:30,160 --> 00:16:32,240
so risers are these devices here that

459
00:16:32,240 --> 00:16:34,079
sort of remove the physical constraints

460
00:16:34,079 --> 00:16:36,800
of motherboards

461
00:16:37,360 --> 00:16:38,639
if you've seen a motherboard before you

462
00:16:38,639 --> 00:16:39,839
know those lines that you put the

463
00:16:39,839 --> 00:16:41,680
graphics cards into are way too close

464
00:16:41,680 --> 00:16:43,519
together and it means that you can only

465
00:16:43,519 --> 00:16:46,079
really fit like two or at most three

466
00:16:46,079 --> 00:16:49,360
graphics cards on a single motherboard

467
00:16:49,360 --> 00:16:51,600
so these are kind of made to to fix that

468
00:16:51,600 --> 00:16:53,680
problem so you put the tiny piece in the

469
00:16:53,680 --> 00:16:55,440
middle into the motherboard and then you

470
00:16:55,440 --> 00:16:57,519
connect the cable onto the riser and

471
00:16:57,519 --> 00:16:58,959
then you can put the riser wherever you

472
00:16:58,959 --> 00:17:01,079
want connected to the graphics

473
00:17:01,079 --> 00:17:04,319
card um

474
00:17:04,319 --> 00:17:06,480
there's a url at the bottom there that

475
00:17:06,480 --> 00:17:08,799
you can go to later that has a cool sort

476
00:17:08,799 --> 00:17:10,959
of history of how we got to this point

477
00:17:10,959 --> 00:17:12,880
from where we are today um and i'll

478
00:17:12,880 --> 00:17:14,799
cover over that really briefly um so the

479
00:17:14,799 --> 00:17:18,559
next uh all of the images or most of the

480
00:17:18,559 --> 00:17:20,480
images from what i'm about to talk about

481
00:17:20,480 --> 00:17:22,959
have come from that url

482
00:17:22,959 --> 00:17:24,000
um

483
00:17:24,000 --> 00:17:26,000
these were sort of the very first

484
00:17:26,000 --> 00:17:29,360
version of risers that existed where

485
00:17:29,360 --> 00:17:31,280
you sort of cut the bottom off of

486
00:17:31,280 --> 00:17:34,480
another pcie based device

487
00:17:34,480 --> 00:17:35,679
and

488
00:17:35,679 --> 00:17:38,240
cut the bottom off of the

489
00:17:38,240 --> 00:17:41,039
pcie slot and then soldered ribbon cable

490
00:17:41,039 --> 00:17:42,960
between the two of them

491
00:17:42,960 --> 00:17:44,400
this obviously had a lot of problems and

492
00:17:44,400 --> 00:17:46,480
was a pretty hacky approach to getting

493
00:17:46,480 --> 00:17:48,320
something to work

494
00:17:48,320 --> 00:17:50,799
um this was kind of driven by

495
00:17:50,799 --> 00:17:52,480
the massive rising cryptocurrencies and

496
00:17:52,480 --> 00:17:55,360
the need to be able to put more gpus per

497
00:17:55,360 --> 00:17:58,240
motherboard together to um

498
00:17:58,240 --> 00:18:01,280
to mine cryptocurrencies faster

499
00:18:01,280 --> 00:18:02,640
um

500
00:18:02,640 --> 00:18:04,960
lots of these thick ribbon cables like

501
00:18:04,960 --> 00:18:06,080
this would obviously have a pretty

502
00:18:06,080 --> 00:18:08,160
severe impact on

503
00:18:08,160 --> 00:18:10,000
airflow within wherever you've got the

504
00:18:10,000 --> 00:18:11,919
cards though so that's obviously a

505
00:18:11,919 --> 00:18:13,120
really big problem for something like

506
00:18:13,120 --> 00:18:16,799
gpus that generate a lot of heat

507
00:18:16,799 --> 00:18:20,000
so that sort of led to this

508
00:18:20,320 --> 00:18:22,240
for most mining and hash cracking we

509
00:18:22,240 --> 00:18:24,240
don't actually care about having a times

510
00:18:24,240 --> 00:18:27,200
16 line which is the really long

511
00:18:27,200 --> 00:18:29,039
slot that we've got at the top we

512
00:18:29,039 --> 00:18:30,320
physically have to have that for the

513
00:18:30,320 --> 00:18:31,840
graphics cards

514
00:18:31,840 --> 00:18:33,360
but in terms of throughput we only

515
00:18:33,360 --> 00:18:35,440
really need like a one times pcie

516
00:18:35,440 --> 00:18:36,799
connection

517
00:18:36,799 --> 00:18:38,640
so you can do that with having the

518
00:18:38,640 --> 00:18:41,200
smaller bit at the bottom

519
00:18:41,200 --> 00:18:43,039
just sold it in exactly like it was

520
00:18:43,039 --> 00:18:43,919
before

521
00:18:43,919 --> 00:18:45,919
um this kind of migrated to having

522
00:18:45,919 --> 00:18:48,080
thinner cables which meant better

523
00:18:48,080 --> 00:18:51,440
airflow but still pretty hacky approach

524
00:18:51,440 --> 00:18:53,280
it also meant that because you have way

525
00:18:53,280 --> 00:18:57,039
more of those slots that have

526
00:18:57,039 --> 00:18:59,120
small pcie slots on a motherboard you

527
00:18:59,120 --> 00:19:00,880
can have more gpus so you're now looking

528
00:19:00,880 --> 00:19:02,160
at like

529
00:19:02,160 --> 00:19:06,960
five six kind of gpus per motherboard

530
00:19:08,240 --> 00:19:10,320
but as you have that many gpus they

531
00:19:10,320 --> 00:19:12,960
start to have to be spaced further apart

532
00:19:12,960 --> 00:19:14,559
just because they are physically large

533
00:19:14,559 --> 00:19:15,919
devices

534
00:19:15,919 --> 00:19:17,280
as well as generating quite a lot of

535
00:19:17,280 --> 00:19:18,720
heat

536
00:19:18,720 --> 00:19:21,039
so that causes some problems with those

537
00:19:21,039 --> 00:19:25,919
cables becoming too long um as well as

538
00:19:25,919 --> 00:19:27,679
the motherboards not having enough

539
00:19:27,679 --> 00:19:30,400
12-volt power supply

540
00:19:30,400 --> 00:19:33,280
to send power up those lines

541
00:19:33,280 --> 00:19:35,760
so what ended up happening next was

542
00:19:35,760 --> 00:19:38,559
you'd separately power each of the gpus

543
00:19:38,559 --> 00:19:42,160
over a molex connection like that

544
00:19:42,320 --> 00:19:43,679
um

545
00:19:43,679 --> 00:19:45,360
this is one of those things where it was

546
00:19:45,360 --> 00:19:48,160
a it was also a safety hazard because

547
00:19:48,160 --> 00:19:49,679
you'd end up with motherboards being set

548
00:19:49,679 --> 00:19:51,679
on fire from trying to put too much

549
00:19:51,679 --> 00:19:54,480
power through a single line

550
00:19:54,480 --> 00:19:56,160
um that was where we sort of moved into

551
00:19:56,160 --> 00:19:59,760
the the more modern age of gpu rises uh

552
00:19:59,760 --> 00:20:02,320
sort of this looks very similar to the

553
00:20:02,320 --> 00:20:03,520
picture that i showed you before but

554
00:20:03,520 --> 00:20:06,080
it's actually quite different

555
00:20:06,080 --> 00:20:08,320
this one only has three capacitors on it

556
00:20:08,320 --> 00:20:10,320
it doesn't have any power

557
00:20:10,320 --> 00:20:11,919
regulate like voltage regulators or

558
00:20:11,919 --> 00:20:13,440
anything like that on it this was kind

559
00:20:13,440 --> 00:20:15,280
of the first thing that came out as the

560
00:20:15,280 --> 00:20:17,840
modern age

561
00:20:17,840 --> 00:20:21,840
so these devices have the little chunk

562
00:20:21,840 --> 00:20:23,600
that clips into the board like i showed

563
00:20:23,600 --> 00:20:26,559
you before a usb cable that goes between

564
00:20:26,559 --> 00:20:28,960
that piece and the board

565
00:20:28,960 --> 00:20:31,200
the boards don't actually use the usb

566
00:20:31,200 --> 00:20:33,360
protocol they purely use the usb cables

567
00:20:33,360 --> 00:20:34,559
because they're really cheap and they

568
00:20:34,559 --> 00:20:37,360
have the right number of wires in them

569
00:20:37,360 --> 00:20:39,840
so they're just readily available

570
00:20:39,840 --> 00:20:41,280
as well as being if you need to buy

571
00:20:41,280 --> 00:20:42,799
longer ones or shorter ones you can do

572
00:20:42,799 --> 00:20:44,720
that at a shop down the road rather than

573
00:20:44,720 --> 00:20:48,480
having to have it custom made

574
00:20:48,480 --> 00:20:50,159
then we went through kind of a few

575
00:20:50,159 --> 00:20:52,400
variations over the ages of these boards

576
00:20:52,400 --> 00:20:53,840
becoming better and better and better so

577
00:20:53,840 --> 00:20:54,960
adding things like i was talking about

578
00:20:54,960 --> 00:20:56,880
before like voltage stabilization and

579
00:20:56,880 --> 00:20:59,360
just sort of general improvements

580
00:20:59,360 --> 00:21:01,039
you can see this was the change between

581
00:21:01,039 --> 00:21:02,320
i think it was version three version

582
00:21:02,320 --> 00:21:04,080
four and version five there wasn't

583
00:21:04,080 --> 00:21:06,159
really huge noticeable changes beyond

584
00:21:06,159 --> 00:21:09,200
like stabilization and voltage

585
00:21:09,200 --> 00:21:11,679
uh then moved into version six which was

586
00:21:11,679 --> 00:21:13,919
the most common version for

587
00:21:13,919 --> 00:21:17,240
several years

588
00:21:17,840 --> 00:21:21,039
these ones introduced 6 pin pcie as a

589
00:21:21,039 --> 00:21:22,799
much more reliable power method than

590
00:21:22,799 --> 00:21:26,080
using molex like we had before

591
00:21:26,080 --> 00:21:28,480
they also introduced more capacitors

592
00:21:28,480 --> 00:21:30,640
analog stabilization voltage regulation

593
00:21:30,640 --> 00:21:33,120
things like that that just made it that

594
00:21:33,120 --> 00:21:34,559
the cards weren't going to disconnect

595
00:21:34,559 --> 00:21:36,000
all the time which was a massive pain

596
00:21:36,000 --> 00:21:37,600
when you're right in the middle of

597
00:21:37,600 --> 00:21:38,960
cracking some hashes or doing some

598
00:21:38,960 --> 00:21:41,120
crypto mining and

599
00:21:41,120 --> 00:21:42,640
everything just stops working for

600
00:21:42,640 --> 00:21:45,840
unknown reasons

601
00:21:46,559 --> 00:21:47,760
and then you kind of get to where we are

602
00:21:47,760 --> 00:21:48,720
today

603
00:21:48,720 --> 00:21:51,600
so this is a version 10 riser

604
00:21:51,600 --> 00:21:53,280
this is kind of the standard at the

605
00:21:53,280 --> 00:21:55,600
moment you have twice as many capacitors

606
00:21:55,600 --> 00:21:57,039
they've got redundancy for that they've

607
00:21:57,039 --> 00:22:00,400
got metal shielding and the

608
00:22:00,400 --> 00:22:02,320
pcie slots are

609
00:22:02,320 --> 00:22:03,520
like

610
00:22:03,520 --> 00:22:05,600
soldered into the board more strongly so

611
00:22:05,600 --> 00:22:07,520
they support a lot more weight

612
00:22:07,520 --> 00:22:09,679
you've got a whole myriad of different

613
00:22:09,679 --> 00:22:12,400
connectors that you can use they now

614
00:22:12,400 --> 00:22:14,559
come with six pin just on different

615
00:22:14,559 --> 00:22:16,559
angles in case you want to mount them at

616
00:22:16,559 --> 00:22:18,880
different angles um leds some of them

617
00:22:18,880 --> 00:22:20,480
come with little temperature displays to

618
00:22:20,480 --> 00:22:21,760
tell you what temperature things are

619
00:22:21,760 --> 00:22:24,879
running at which is kind of cool

620
00:22:25,600 --> 00:22:27,120
um so now we actually want to build

621
00:22:27,120 --> 00:22:28,240
something

622
00:22:28,240 --> 00:22:30,400
we also need power supplies

623
00:22:30,400 --> 00:22:31,440
um

624
00:22:31,440 --> 00:22:33,520
these cards consume a huge amount of

625
00:22:33,520 --> 00:22:35,200
power um

626
00:22:35,200 --> 00:22:38,159
you're talking about ranging between

627
00:22:38,159 --> 00:22:40,880
maybe 50 watts for a really low end card

628
00:22:40,880 --> 00:22:42,080
up to like

629
00:22:42,080 --> 00:22:43,600
three or four hundred watts for your

630
00:22:43,600 --> 00:22:46,240
higher end cards like 30 90s um and if

631
00:22:46,240 --> 00:22:47,280
you're going to be running eight of

632
00:22:47,280 --> 00:22:49,039
those in a single rig you're now looking

633
00:22:49,039 --> 00:22:50,480
at what is that like

634
00:22:50,480 --> 00:22:51,520
uh

635
00:22:51,520 --> 00:22:54,559
like 3.2 kilowatts

636
00:22:54,559 --> 00:22:56,080
most of the power supplies that you buy

637
00:22:56,080 --> 00:22:57,679
if you've ever built a gaming pc you're

638
00:22:57,679 --> 00:23:00,320
kind of in that range of like

639
00:23:00,320 --> 00:23:03,120
500 to 800 watts whereas when you start

640
00:23:03,120 --> 00:23:05,360
to move up into a thousand watts

641
00:23:05,360 --> 00:23:06,880
um

642
00:23:06,880 --> 00:23:09,520
that like as it becomes really expensive

643
00:23:09,520 --> 00:23:10,480
and

644
00:23:10,480 --> 00:23:12,640
that's not even enough uh so we'd need

645
00:23:12,640 --> 00:23:17,120
four of those just to power our our rig

646
00:23:17,520 --> 00:23:18,880
which obviously that doesn't work

647
00:23:18,880 --> 00:23:20,559
particularly well without having these

648
00:23:20,559 --> 00:23:23,200
multi-power supply switch connectors

649
00:23:23,200 --> 00:23:24,799
so these are kind of like the high-end

650
00:23:24,799 --> 00:23:26,159
power supplies that i was talking about

651
00:23:26,159 --> 00:23:28,559
before

652
00:23:28,880 --> 00:23:32,559
most of these come with a whole bunch of

653
00:23:32,559 --> 00:23:34,880
pcie power connectors so that's these

654
00:23:34,880 --> 00:23:37,840
ones here um

655
00:23:37,840 --> 00:23:39,679
uh but you can see that even on these

656
00:23:39,679 --> 00:23:41,360
really high-end power supplies you've

657
00:23:41,360 --> 00:23:43,360
only got six of them and if each gpu

658
00:23:43,360 --> 00:23:45,600
uses two or three of those each

659
00:23:45,600 --> 00:23:47,360
um then yeah you're gonna have to spend

660
00:23:47,360 --> 00:23:48,640
a huge amount of money on these power

661
00:23:48,640 --> 00:23:50,320
supplies as well as finding some way of

662
00:23:50,320 --> 00:23:53,120
linking them together

663
00:23:53,120 --> 00:23:55,440
which is where these multi-psu switch

664
00:23:55,440 --> 00:23:58,240
connectors came through came out and

665
00:23:58,240 --> 00:24:00,000
it lets you daisy chain power supplies

666
00:24:00,000 --> 00:24:02,640
together so you can use different like a

667
00:24:02,640 --> 00:24:04,559
whole bunch of power supplies to one uh

668
00:24:04,559 --> 00:24:06,720
run one rig

669
00:24:06,720 --> 00:24:08,640
uh it means that you can use cheapest

670
00:24:08,640 --> 00:24:12,480
power supplies or what's available um

671
00:24:12,480 --> 00:24:13,440
you can

672
00:24:13,440 --> 00:24:15,840
like daisy chain these connectors to run

673
00:24:15,840 --> 00:24:18,000
as many power supplies

674
00:24:18,000 --> 00:24:21,039
together as you want

675
00:24:22,480 --> 00:24:24,000
you can also use

676
00:24:24,000 --> 00:24:26,240
server power supply breakout boards

677
00:24:26,240 --> 00:24:28,080
so this kind of fixes that issue that we

678
00:24:28,080 --> 00:24:30,720
had before of only having six pcie pins

679
00:24:30,720 --> 00:24:33,679
on a single power supply um

680
00:24:33,679 --> 00:24:36,080
six pcie

681
00:24:36,080 --> 00:24:38,400
cables on a single power supply sorry so

682
00:24:38,400 --> 00:24:39,520
on this one here you can see that we

683
00:24:39,520 --> 00:24:41,200
have four rows of four as well as one in

684
00:24:41,200 --> 00:24:44,559
the middle so now i have 17 cables

685
00:24:44,559 --> 00:24:46,320
where previously we only had six that

686
00:24:46,320 --> 00:24:47,440
will let you power a whole bunch more

687
00:24:47,440 --> 00:24:48,720
graphics cards

688
00:24:48,720 --> 00:24:50,640
um as well as you can buy a server power

689
00:24:50,640 --> 00:24:52,960
supplies that come in uh much bigger

690
00:24:52,960 --> 00:24:55,440
ranges of power

691
00:24:55,440 --> 00:24:56,880
the downside to those power supplies is

692
00:24:56,880 --> 00:24:58,320
they tend to be really really noisy

693
00:24:58,320 --> 00:24:59,919
though so it's probably not something

694
00:24:59,919 --> 00:25:01,919
that you want to have

695
00:25:01,919 --> 00:25:03,360
like sitting in your office while you're

696
00:25:03,360 --> 00:25:07,039
working or in your bedroom at home

697
00:25:07,919 --> 00:25:09,600
um

698
00:25:09,600 --> 00:25:11,120
i will kind of just briefly touch on

699
00:25:11,120 --> 00:25:12,400
this here is if you're dealing with

700
00:25:12,400 --> 00:25:14,159
anything that has large amounts of power

701
00:25:14,159 --> 00:25:15,440
going through it you should be very very

702
00:25:15,440 --> 00:25:17,760
careful

703
00:25:17,840 --> 00:25:20,240
you should know the amount of power that

704
00:25:20,240 --> 00:25:23,679
the wires that you're using can handle

705
00:25:23,679 --> 00:25:25,840
where people were daisy chaining those

706
00:25:25,840 --> 00:25:27,760
molex connectors and things in the past

707
00:25:27,760 --> 00:25:31,200
they were running way too many of them

708
00:25:31,200 --> 00:25:34,799
that ended up in stuff catching fire

709
00:25:34,880 --> 00:25:37,520
you don't want to be this guy

710
00:25:37,520 --> 00:25:40,400
things are not fine

711
00:25:40,840 --> 00:25:44,880
cool uh the next piece being uh cooling

712
00:25:44,880 --> 00:25:46,240
uh when we're dealing with that much

713
00:25:46,240 --> 00:25:47,760
power you know those heaters that you

714
00:25:47,760 --> 00:25:49,200
have at home that you have out in winter

715
00:25:49,200 --> 00:25:50,559
that are like 2 000 watts and you're

716
00:25:50,559 --> 00:25:52,240
like oh this is fantastic this heats up

717
00:25:52,240 --> 00:25:53,440
the whole room

718
00:25:53,440 --> 00:25:54,799
um you're now dealing with something as

719
00:25:54,799 --> 00:25:57,760
one and a half times as powerful as that

720
00:25:57,760 --> 00:25:59,360
so that's going to generate a huge

721
00:25:59,360 --> 00:26:00,559
amount of heat

722
00:26:00,559 --> 00:26:02,000
so you need to find some way of cooling

723
00:26:02,000 --> 00:26:04,320
those

724
00:26:04,559 --> 00:26:05,679
i'm not really sure why i've got

725
00:26:05,679 --> 00:26:06,960
overclocking here it doesn't really fit

726
00:26:06,960 --> 00:26:08,559
with what i'm talking about but yeah you

727
00:26:08,559 --> 00:26:12,000
can overclock the cards to or under

728
00:26:12,000 --> 00:26:15,600
underpower them so power limiting um

729
00:26:15,600 --> 00:26:17,919
so most graphics cards are

730
00:26:17,919 --> 00:26:21,120
sent out in a um

731
00:26:21,120 --> 00:26:22,799
like in a configuration that's useful

732
00:26:22,799 --> 00:26:25,760
for using them for things like gaming

733
00:26:25,760 --> 00:26:26,880
whereas

734
00:26:26,880 --> 00:26:28,400
when we're doing hash cracking we don't

735
00:26:28,400 --> 00:26:30,080
actually need that much wattage running

736
00:26:30,080 --> 00:26:31,679
through it

737
00:26:31,679 --> 00:26:33,840
to get it to run the algorithms at the

738
00:26:33,840 --> 00:26:35,679
right speed so you can cut the power

739
00:26:35,679 --> 00:26:37,919
usage often in half

740
00:26:37,919 --> 00:26:39,919
and only lose less than one percent of

741
00:26:39,919 --> 00:26:42,320
your computation rate

742
00:26:42,320 --> 00:26:44,080
that obviously has a massive impact on

743
00:26:44,080 --> 00:26:46,000
your power bill as well

744
00:26:46,000 --> 00:26:47,279
so where you're running a whole bunch of

745
00:26:47,279 --> 00:26:49,279
these together

746
00:26:49,279 --> 00:26:51,279
like this

747
00:26:51,279 --> 00:26:53,360
so this is my setup at home for doing

748
00:26:53,360 --> 00:26:56,720
hash cracking um it's got 21 gpus but

749
00:26:56,720 --> 00:26:58,480
that consumes a massive amount of power

750
00:26:58,480 --> 00:27:00,720
if i was to run this at

751
00:27:00,720 --> 00:27:02,400
full power consumption i'd probably burn

752
00:27:02,400 --> 00:27:04,640
my house down

753
00:27:04,640 --> 00:27:06,480
so instead i only run it at like 50 to

754
00:27:06,480 --> 00:27:07,760
60

755
00:27:07,760 --> 00:27:10,320
um but i still get 99 of the hash

756
00:27:10,320 --> 00:27:12,480
cracking rate out of that

757
00:27:12,480 --> 00:27:15,679
um an individual one of those rtx 3090s

758
00:27:15,679 --> 00:27:16,559
um

759
00:27:16,559 --> 00:27:18,799
could crack hashes at the rates kind of

760
00:27:18,799 --> 00:27:21,120
explained there we were talking about

761
00:27:21,120 --> 00:27:23,039
trying one combination on a bike lock

762
00:27:23,039 --> 00:27:24,159
before

763
00:27:24,159 --> 00:27:25,919
every 10 seconds you're now looking at

764
00:27:25,919 --> 00:27:27,120
trying

765
00:27:27,120 --> 00:27:30,880
65 billion passwords every second

766
00:27:30,880 --> 00:27:34,240
for md5 um

767
00:27:34,240 --> 00:27:35,399
up to like

768
00:27:35,399 --> 00:27:38,559
121 billion passwords per second in

769
00:27:38,559 --> 00:27:40,159
original ntlm

770
00:27:40,159 --> 00:27:41,679
um

771
00:27:41,679 --> 00:27:44,240
the examples given below uh

772
00:27:44,240 --> 00:27:47,120
for net ntlm v2 which is the hashes that

773
00:27:47,120 --> 00:27:48,399
you get out of responder that we're

774
00:27:48,399 --> 00:27:50,080
talking about at the start i've used

775
00:27:50,080 --> 00:27:51,679
this as an example because it's the

776
00:27:51,679 --> 00:27:53,919
slowest hash rate of the ones listed

777
00:27:53,919 --> 00:27:55,039
there

778
00:27:55,039 --> 00:27:59,360
as sort of common hashing algorithms

779
00:27:59,440 --> 00:28:00,559
um

780
00:28:00,559 --> 00:28:02,240
from having eight of those cards you

781
00:28:02,240 --> 00:28:03,840
could crack an eight character space in

782
00:28:03,840 --> 00:28:05,919
46 hours or it's actually less than 46

783
00:28:05,919 --> 00:28:07,600
hours um so eight character space is

784
00:28:07,600 --> 00:28:10,080
obviously not sufficient in terms of um

785
00:28:10,080 --> 00:28:11,760
password length anymore

786
00:28:11,760 --> 00:28:13,919
um yeah if you were to have 32 of those

787
00:28:13,919 --> 00:28:14,640
so

788
00:28:14,640 --> 00:28:16,159
not quite there yet but two thirds of

789
00:28:16,159 --> 00:28:18,240
the way it would only take you 11 to 12

790
00:28:18,240 --> 00:28:19,440
hours to crack

791
00:28:19,440 --> 00:28:22,799
that entire character space

792
00:28:24,720 --> 00:28:26,080
modern hash cracking so we're going to

793
00:28:26,080 --> 00:28:27,679
talk about some things that are up and

794
00:28:27,679 --> 00:28:29,360
coming

795
00:28:29,360 --> 00:28:30,720
you can run these in a distributed

796
00:28:30,720 --> 00:28:32,000
fashion so sort of like the fixture that

797
00:28:32,000 --> 00:28:33,440
i showed you before

798
00:28:33,440 --> 00:28:35,760
you can set these all up um to run as a

799
00:28:35,760 --> 00:28:37,919
cluster and then distribute the cracking

800
00:28:37,919 --> 00:28:39,360
that you're doing over several different

801
00:28:39,360 --> 00:28:41,440
rigs all connected together

802
00:28:41,440 --> 00:28:43,360
um with that sort of helps you bypass

803
00:28:43,360 --> 00:28:45,440
those limitations of only having so many

804
00:28:45,440 --> 00:28:48,480
pcie slots

805
00:28:48,640 --> 00:28:50,480
in a single computer

806
00:28:50,480 --> 00:28:52,480
you can sort of cluster them and you

807
00:28:52,480 --> 00:28:55,679
essentially have unlimited now

808
00:28:55,679 --> 00:28:57,360
we can also look at

809
00:28:57,360 --> 00:28:59,039
cloud hosting

810
00:28:59,039 --> 00:29:01,760
or community distributed hosting

811
00:29:01,760 --> 00:29:03,360
so that was kind of what i just went

812
00:29:03,360 --> 00:29:04,559
through probably should have waited for

813
00:29:04,559 --> 00:29:06,320
this slide

814
00:29:06,320 --> 00:29:07,760
the benefits of this is that yeah you

815
00:29:07,760 --> 00:29:10,080
keep everything on premise

816
00:29:10,080 --> 00:29:11,919
that obviously has some pretty important

817
00:29:11,919 --> 00:29:13,760
security implications depending on who

818
00:29:13,760 --> 00:29:15,200
your client is and where you got these

819
00:29:15,200 --> 00:29:16,559
hashes from and what you're doing with

820
00:29:16,559 --> 00:29:17,360
them

821
00:29:17,360 --> 00:29:19,039
um

822
00:29:19,039 --> 00:29:21,360
if you're doing this as a business

823
00:29:21,360 --> 00:29:22,799
cracking hashes

824
00:29:22,799 --> 00:29:23,840
it's

825
00:29:23,840 --> 00:29:25,360
kind of irresponsible for you to put

826
00:29:25,360 --> 00:29:26,559
those up in the cloud they should

827
00:29:26,559 --> 00:29:28,240
probably be dealt with on-prem so that

828
00:29:28,240 --> 00:29:32,000
you can secure those yourself

829
00:29:33,360 --> 00:29:34,960
the downside being that the power and

830
00:29:34,960 --> 00:29:37,840
cooling requirements sort of

831
00:29:37,840 --> 00:29:41,120
massively increase as you scale

832
00:29:41,120 --> 00:29:42,399
to the point now that my house is

833
00:29:42,399 --> 00:29:44,159
ridiculously hot and i have to leave the

834
00:29:44,159 --> 00:29:47,520
balcony open every day

835
00:29:49,279 --> 00:29:52,000
so cloud hash cracking

836
00:29:52,000 --> 00:29:54,000
aws have these instances available they

837
00:29:54,000 --> 00:29:56,240
have a whole bunch of gpus they have

838
00:29:56,240 --> 00:29:58,080
each instance having eight

839
00:29:58,080 --> 00:30:00,000
a100 gpus

840
00:30:00,000 --> 00:30:02,320
a100s are kind of comparable to an rtx

841
00:30:02,320 --> 00:30:05,760
3090 in terms of their

842
00:30:06,159 --> 00:30:08,080
hash ability if we look at that before

843
00:30:08,080 --> 00:30:11,840
we've got 65 on md5 22 on cha one um

844
00:30:11,840 --> 00:30:14,159
ntlm is 120

845
00:30:14,159 --> 00:30:16,000
um like we talked about ntlm was only

846
00:30:16,000 --> 00:30:20,640
121 on an rtx 3090 so basically the same

847
00:30:20,640 --> 00:30:22,640
and pretty much the same again for ntlm

848
00:30:22,640 --> 00:30:24,399
v2

849
00:30:24,399 --> 00:30:27,200
um they have these gpu instances built

850
00:30:27,200 --> 00:30:28,480
into things that they call ultra

851
00:30:28,480 --> 00:30:29,600
clusters

852
00:30:29,600 --> 00:30:32,000
which are like 500 of these individual

853
00:30:32,000 --> 00:30:34,559
instances

854
00:30:35,760 --> 00:30:37,200
you can't just buy that off the shelf

855
00:30:37,200 --> 00:30:39,440
you have to apply to be able to use

856
00:30:39,440 --> 00:30:42,000
ultra clusters as a cluster um

857
00:30:42,000 --> 00:30:43,760
but if you were to use one of those

858
00:30:43,760 --> 00:30:45,760
ultra clusters to hack uh to crack these

859
00:30:45,760 --> 00:30:47,760
hashes you'd be able to do the entire

860
00:30:47,760 --> 00:30:49,200
eight character space in five and a half

861
00:30:49,200 --> 00:30:51,200
minutes or the 10 character space in 35

862
00:30:51,200 --> 00:30:53,039
days

863
00:30:53,039 --> 00:30:55,279
that makes it kind of practical to crack

864
00:30:55,279 --> 00:30:56,640
these hashes it's going to cost you an

865
00:30:56,640 --> 00:30:58,640
absolute fortune to do it

866
00:30:58,640 --> 00:31:00,000
like we're going to talk about here but

867
00:31:00,000 --> 00:31:02,000
it is possible

868
00:31:02,000 --> 00:31:03,440
so for just renting one of these

869
00:31:03,440 --> 00:31:05,600
instances not an ultra cluster just one

870
00:31:05,600 --> 00:31:07,200
of those instances

871
00:31:07,200 --> 00:31:09,440
you're looking at um

872
00:31:09,440 --> 00:31:12,480
sort of between 16 and 45 dollars per

873
00:31:12,480 --> 00:31:15,039
hour that ranges depending on how many

874
00:31:15,039 --> 00:31:17,120
how much of this time that you're buying

875
00:31:17,120 --> 00:31:19,279
to get that 16 per hour rate you're

876
00:31:19,279 --> 00:31:21,519
looking at pre buying

877
00:31:21,519 --> 00:31:24,320
three years worth of time to do this

878
00:31:24,320 --> 00:31:26,159
which is going to cost you pretty big

879
00:31:26,159 --> 00:31:27,200
dollars

880
00:31:27,200 --> 00:31:28,799
if you want a spot instance here you're

881
00:31:28,799 --> 00:31:32,799
looking at like 45 46 an hour um

882
00:31:32,799 --> 00:31:34,960
comparing that to building it yourself

883
00:31:34,960 --> 00:31:36,640
um so for this breakdown i've used

884
00:31:36,640 --> 00:31:38,240
twenty eight thousand dollars for gpus

885
00:31:38,240 --> 00:31:41,200
that would get you eight um rtx 3090s

886
00:31:41,200 --> 00:31:42,960
thousand dollars in power supplies eight

887
00:31:42,960 --> 00:31:45,440
hundred dollars and motherboards cpu ram

888
00:31:45,440 --> 00:31:48,480
and then 200 for rises and incidentals

889
00:31:48,480 --> 00:31:50,960
because things always break

890
00:31:50,960 --> 00:31:51,919
um

891
00:31:51,919 --> 00:31:54,799
so your breakeven time is only 27 days

892
00:31:54,799 --> 00:31:55,760
so

893
00:31:55,760 --> 00:31:57,279
the whole point of doing things in the

894
00:31:57,279 --> 00:31:59,440
cloud was often sold as

895
00:31:59,440 --> 00:32:00,880
it's cheaper and i don't have to host it

896
00:32:00,880 --> 00:32:03,360
myself and it's it's so much better

897
00:32:03,360 --> 00:32:04,880
for something like this

898
00:32:04,880 --> 00:32:06,720
if you only ever have to do it once it

899
00:32:06,720 --> 00:32:08,080
probably is better that you do it that

900
00:32:08,080 --> 00:32:08,880
way

901
00:32:08,880 --> 00:32:10,799
but it very quickly becomes

902
00:32:10,799 --> 00:32:14,880
cost effective to do it yourself instead

903
00:32:14,880 --> 00:32:17,039
community distributed so this is pretty

904
00:32:17,039 --> 00:32:20,000
theoretical at the moment

905
00:32:20,000 --> 00:32:22,159
so ethereum is switching from proof of

906
00:32:22,159 --> 00:32:23,679
work to proof of stake which means that

907
00:32:23,679 --> 00:32:24,799
there's going to be a huge amount of

908
00:32:24,799 --> 00:32:27,760
computation power become available

909
00:32:27,760 --> 00:32:29,679
like i mean it's been in six months for

910
00:32:29,679 --> 00:32:33,039
the last three years but like um

911
00:32:33,039 --> 00:32:34,799
hopefully in six months all this

912
00:32:34,799 --> 00:32:37,200
computation should become available um

913
00:32:37,200 --> 00:32:38,799
which yeah you're looking at like peta

914
00:32:38,799 --> 00:32:41,519
hashes per second instead of giga hashes

915
00:32:41,519 --> 00:32:44,880
like we were talking about before

916
00:32:44,880 --> 00:32:46,799
if you were to use all of that hashing

917
00:32:46,799 --> 00:32:48,880
power to crack

918
00:32:48,880 --> 00:32:50,720
net ntl mv2 hashes you could do the

919
00:32:50,720 --> 00:32:54,559
entire 10 character space in 30 minutes

920
00:32:55,279 --> 00:32:57,360
and as kind of more of these services

921
00:32:57,360 --> 00:32:58,880
become available

922
00:32:58,880 --> 00:33:00,799
so things like nicehash where they're

923
00:33:00,799 --> 00:33:02,799
making hashing power available to people

924
00:33:02,799 --> 00:33:04,720
for doing

925
00:33:04,720 --> 00:33:06,799
whatever they want with it

926
00:33:06,799 --> 00:33:08,960
this kind of thing is going to become

927
00:33:08,960 --> 00:33:10,240
possible in the future so it'll be

928
00:33:10,240 --> 00:33:12,720
interesting to see where that goes

929
00:33:12,720 --> 00:33:13,600
um

930
00:33:13,600 --> 00:33:14,640
these are just sort of some other

931
00:33:14,640 --> 00:33:16,240
considerations because i've kind of gone

932
00:33:16,240 --> 00:33:17,760
over time um

933
00:33:17,760 --> 00:33:19,840
you can do mining as cost recovery so

934
00:33:19,840 --> 00:33:21,679
when you're not on a job cracking hashes

935
00:33:21,679 --> 00:33:23,039
you can just run this thing mining

936
00:33:23,039 --> 00:33:24,799
something like ethereum or ergo and sort

937
00:33:24,799 --> 00:33:27,039
of do cost recovery through that

938
00:33:27,039 --> 00:33:28,240
you can tune them like i was talking

939
00:33:28,240 --> 00:33:29,519
about before you can cut your power

940
00:33:29,519 --> 00:33:31,360
costs in half as well as increasing

941
00:33:31,360 --> 00:33:34,080
performance by like up to 20ish percent

942
00:33:34,080 --> 00:33:37,039
depending on which gpus you're using

943
00:33:37,039 --> 00:33:38,559
you should keep in mind that lots of

944
00:33:38,559 --> 00:33:40,000
these risers and motherboards and things

945
00:33:40,000 --> 00:33:41,919
will throw pcie errors all the time and

946
00:33:41,919 --> 00:33:43,200
you'll probably run out of disk space

947
00:33:43,200 --> 00:33:45,039
and that'll cause your rig to seem like

948
00:33:45,039 --> 00:33:47,279
it's crashed when it actually hasn't so

949
00:33:47,279 --> 00:33:48,720
keep that in mind

950
00:33:48,720 --> 00:33:50,159
and like we talked about before is it

951
00:33:50,159 --> 00:33:51,600
actually a good idea to put client

952
00:33:51,600 --> 00:33:54,879
hashes into the cloud

953
00:33:55,919 --> 00:33:58,240
this was the prize question that i was

954
00:33:58,240 --> 00:34:01,039
talking about before um so if you can

955
00:34:01,039 --> 00:34:03,600
have a look at the piece at the bottom

956
00:34:03,600 --> 00:34:04,960
there

957
00:34:04,960 --> 00:34:07,840
um it's got

958
00:34:07,840 --> 00:34:10,159
a mask that we could use for cracking

959
00:34:10,159 --> 00:34:11,839
hashes um

960
00:34:11,839 --> 00:34:13,359
does anyone have an idea of why this

961
00:34:13,359 --> 00:34:16,000
would not be good for cracking nzsr nz

962
00:34:16,000 --> 00:34:19,480
ism passwords

963
00:34:23,440 --> 00:34:24,800
uh

964
00:34:24,800 --> 00:34:27,760
i do have a prize available if someone

965
00:34:27,760 --> 00:34:30,320
knows why

966
00:34:33,119 --> 00:34:34,560
uh

967
00:34:34,560 --> 00:34:35,520
close

968
00:34:35,520 --> 00:34:37,199
um

969
00:34:37,199 --> 00:34:40,000
that's very close

970
00:34:42,079 --> 00:34:45,079
anymore

971
00:34:49,040 --> 00:34:51,599
uh no so it can be ten with complexity

972
00:34:51,599 --> 00:34:52,800
um so that

973
00:34:52,800 --> 00:34:55,440
in there has got uh ten of the all

974
00:34:55,440 --> 00:34:58,440
characters

975
00:35:11,520 --> 00:35:12,560
yes

976
00:35:12,560 --> 00:35:14,240
yeah so you'd end up hacking uh you'd

977
00:35:14,240 --> 00:35:15,680
end up trying to crack twice as many

978
00:35:15,680 --> 00:35:17,119
hashes as you should

979
00:35:17,119 --> 00:35:18,480
um that was where you looked at those

980
00:35:18,480 --> 00:35:19,839
numbers at the start where you switched

981
00:35:19,839 --> 00:35:21,200
from

982
00:35:21,200 --> 00:35:25,040
6 at the 15 to 3 at the 15

983
00:35:25,040 --> 00:35:27,040
yeah you'd cut your cracking time in

984
00:35:27,040 --> 00:35:28,560
half if you were to actually optimize

985
00:35:28,560 --> 00:35:30,960
this instead

986
00:35:30,960 --> 00:35:33,119
oh so the price was uh one of the

987
00:35:33,119 --> 00:35:36,079
version 10 rises um

988
00:35:36,079 --> 00:35:38,720
so sort of some takeaways

989
00:35:38,720 --> 00:35:40,880
yeah it's time to move to 16 characters

990
00:35:40,880 --> 00:35:43,280
as your minimum password length

991
00:35:43,280 --> 00:35:45,200
as we kind of demonstrated 10 characters

992
00:35:45,200 --> 00:35:47,119
is no longer sufficient

993
00:35:47,119 --> 00:35:48,880
it's feasible to break that in a time

994
00:35:48,880 --> 00:35:52,400
frame that's actually going to be useful

995
00:35:53,680 --> 00:35:55,359
removing the complexity requirement has

996
00:35:55,359 --> 00:35:57,520
its pros and cons

997
00:35:57,520 --> 00:35:58,960
from the sort of

998
00:35:58,960 --> 00:36:00,640
human element side of things we know

999
00:36:00,640 --> 00:36:02,400
that people will pick the weakest

1000
00:36:02,400 --> 00:36:05,119
passwords that we let them pick

1001
00:36:05,119 --> 00:36:07,040
if you set a 10 character limit people

1002
00:36:07,040 --> 00:36:09,200
will only pick character passwords that

1003
00:36:09,200 --> 00:36:10,800
are 10 characters

1004
00:36:10,800 --> 00:36:12,720
if you don't enforce complexity they'll

1005
00:36:12,720 --> 00:36:15,119
probably just use lowercase everything

1006
00:36:15,119 --> 00:36:17,280
um

1007
00:36:17,280 --> 00:36:18,960
but that does reduce your complexity

1008
00:36:18,960 --> 00:36:20,960
pools so those passwords that you do

1009
00:36:20,960 --> 00:36:22,720
want to actually protect like admin

1010
00:36:22,720 --> 00:36:23,920
passwords where those people are

1011
00:36:23,920 --> 00:36:25,119
probably going to pick really strong

1012
00:36:25,119 --> 00:36:26,480
passwords anyway you're actually

1013
00:36:26,480 --> 00:36:28,160
negatively impacting those passwords in

1014
00:36:28,160 --> 00:36:30,720
some cases

1015
00:36:31,760 --> 00:36:33,520
if you want to crack a one-off password

1016
00:36:33,520 --> 00:36:35,599
your cloud cracking

1017
00:36:35,599 --> 00:36:40,160
could be a way to go for you um

1018
00:36:40,160 --> 00:36:42,160
yeah i sort of can't stress that

1019
00:36:42,160 --> 00:36:44,000
point enough that like putting client

1020
00:36:44,000 --> 00:36:45,760
hashes into the clouds probably isn't a

1021
00:36:45,760 --> 00:36:48,800
good idea um

1022
00:36:48,800 --> 00:36:50,000
yeah take everything that you read

1023
00:36:50,000 --> 00:36:52,880
online with a bit of salt

1024
00:36:52,880 --> 00:36:54,160
and you should probably be using some

1025
00:36:54,160 --> 00:36:56,720
salt to store your passwords cool

1026
00:36:56,720 --> 00:36:58,400
um please come and talk to me about pen

1027
00:36:58,400 --> 00:37:00,480
testing things or hash cracking later on

1028
00:37:00,480 --> 00:37:03,440
i'll be around at the pub uh yeah thank

1029
00:37:03,440 --> 00:37:06,839
you for your time everybody

1030
00:37:09,119 --> 00:37:11,200
you

