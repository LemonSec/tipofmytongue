1
00:00:00,000 --> 00:00:07,710
a bit about me to start with so yeah

2
00:00:07,710 --> 00:00:10,260
this is pretty much me at the b-sides

3
00:00:10,260 --> 00:00:11,759
after-party with a bunch of other con

4
00:00:11,759 --> 00:00:14,519
organizers but other than organizing

5
00:00:14,519 --> 00:00:16,740
b-sides Canberra which which I do with

6
00:00:16,740 --> 00:00:21,029
Silvio I have a pretty long background

7
00:00:21,029 --> 00:00:24,029
in computer networking so I did my

8
00:00:24,029 --> 00:00:27,000
electrical engineering degree at Anu

9
00:00:27,000 --> 00:00:30,810
back in the 90s worked for Telstra as a

10
00:00:30,810 --> 00:00:33,780
mobile phone engineer doing a you know

11
00:00:33,780 --> 00:00:36,390
radio radio tailored design and

12
00:00:36,390 --> 00:00:39,239
optimization I moved into research with

13
00:00:39,239 --> 00:00:41,399
Telstra and then decided to move into

14
00:00:41,399 --> 00:00:44,129
computer networking I'm about probably

15
00:00:44,129 --> 00:00:46,980
eight years ago I was seconded into a

16
00:00:46,980 --> 00:00:49,410
security team as the network specialist

17
00:00:49,410 --> 00:00:51,510
I don't know if I felt super happy about

18
00:00:51,510 --> 00:00:54,719
that but Here I am eight years later

19
00:00:54,719 --> 00:00:57,600
loving it and and and enjoying myself

20
00:00:57,600 --> 00:01:00,629
safe that's a bit about me then I'll get

21
00:01:00,629 --> 00:01:03,270
into what I'm gonna talk about so I'm

22
00:01:03,270 --> 00:01:06,210
here to talk about layer two attacks on

23
00:01:06,210 --> 00:01:08,400
virtual switches today so layer two

24
00:01:08,400 --> 00:01:10,380
attacks on a new thing I'm not talking

25
00:01:10,380 --> 00:01:12,990
about any new attacks in the layer two

26
00:01:12,990 --> 00:01:15,509
domain but I am talking about attacking

27
00:01:15,509 --> 00:01:17,729
virtual switches which is where the

28
00:01:17,729 --> 00:01:20,640
novelty of this talk lies so I'm going

29
00:01:20,640 --> 00:01:23,070
to introduce first what virtual switches

30
00:01:23,070 --> 00:01:25,080
are or what I define virtual switches to

31
00:01:25,080 --> 00:01:28,259
be then I'll talk about the layer two

32
00:01:28,259 --> 00:01:31,110
attacks explain each attack and and tell

33
00:01:31,110 --> 00:01:34,110
you the result of attacking virtual

34
00:01:34,110 --> 00:01:36,990
switches some mitigations options and

35
00:01:36,990 --> 00:01:39,000
then I'm gonna look a little bit at NSX

36
00:01:39,000 --> 00:01:40,619
and some of the new protocols that are

37
00:01:40,619 --> 00:01:43,320
coming out in the virtual domain for

38
00:01:43,320 --> 00:01:46,740
networks I've only got about two demo so

39
00:01:46,740 --> 00:01:49,439
I didn't record everything I did and the

40
00:01:49,439 --> 00:01:51,780
demos may be a bit unclear but I'll try

41
00:01:51,780 --> 00:01:53,310
to talk you through them I don't have

42
00:01:53,310 --> 00:01:55,020
any demos attacking NSX

43
00:01:55,020 --> 00:01:57,090
unfortunately so hope you weren't here

44
00:01:57,090 --> 00:02:01,049
for that so I'll start off as I said

45
00:02:01,049 --> 00:02:02,310
with an introduction on virtual

46
00:02:02,310 --> 00:02:04,619
switching when it's used where does it

47
00:02:04,619 --> 00:02:07,170
fit in our data center environment and

48
00:02:07,170 --> 00:02:08,669
how does it interact with the rest of

49
00:02:08,669 --> 00:02:12,209
the network and and why would you care

50
00:02:12,209 --> 00:02:15,750
so it's pretty simple for those most

51
00:02:15,750 --> 00:02:18,510
people probably do no virtual switches a

52
00:02:18,510 --> 00:02:20,819
switch that contains virtual links so

53
00:02:20,819 --> 00:02:22,290
it's implemented fully and software

54
00:02:22,290 --> 00:02:24,470
doesn't have Hardware Asics or anything

55
00:02:24,470 --> 00:02:28,170
in my diagram there the red circle

56
00:02:28,170 --> 00:02:30,420
circles the virtual switch so it's used

57
00:02:30,420 --> 00:02:31,829
for communication between virtual

58
00:02:31,829 --> 00:02:33,870
machines and then it usually has a

59
00:02:33,870 --> 00:02:36,209
hardware link out to the rest of the the

60
00:02:36,209 --> 00:02:39,540
network so on scale it would be

61
00:02:39,540 --> 00:02:40,769
something like this where you have

62
00:02:40,769 --> 00:02:42,629
multiple virtual switches or these could

63
00:02:42,629 --> 00:02:44,940
be replaced by a distributed virtual

64
00:02:44,940 --> 00:02:49,650
switch short or nsx I'm so in a bit more

65
00:02:49,650 --> 00:02:52,140
detail this is my virtual switch at home

66
00:02:52,140 --> 00:02:55,170
so really simple you can see your VMs

67
00:02:55,170 --> 00:02:56,790
are attached on the left there you can

68
00:02:56,790 --> 00:02:58,409
have different port groups in different

69
00:02:58,409 --> 00:03:00,299
VLANs and then you usually have a

70
00:03:00,299 --> 00:03:01,709
physical network card that's going to

71
00:03:01,709 --> 00:03:04,019
connect those VMs out to the rest of the

72
00:03:04,019 --> 00:03:07,769
data set of data center environment um

73
00:03:07,769 --> 00:03:10,409
so so why do we care why am I looking at

74
00:03:10,409 --> 00:03:12,359
this well there's a lot of talks on

75
00:03:12,359 --> 00:03:14,730
breaking out of hypervisors getting down

76
00:03:14,730 --> 00:03:18,720
to the to the hosts but maybe you've got

77
00:03:18,720 --> 00:03:20,459
a bad guy on your VM and he's just going

78
00:03:20,459 --> 00:03:23,760
to start attacking directly the virtual

79
00:03:23,760 --> 00:03:26,549
switch from there so I just wanted to

80
00:03:26,549 --> 00:03:28,829
see the effect of that there was some

81
00:03:28,829 --> 00:03:30,989
work done on this at Def Con last year

82
00:03:30,989 --> 00:03:33,000
so sort of went through what they had

83
00:03:33,000 --> 00:03:34,799
done and extended a bit more with a few

84
00:03:34,799 --> 00:03:37,410
more protocols so they didn't look at

85
00:03:37,410 --> 00:03:40,549
spanning tree I included that in mine

86
00:03:40,549 --> 00:03:42,959
I'm so the attacks I'm going to look at

87
00:03:42,959 --> 00:03:45,739
and they're all well known attacks I

88
00:03:45,739 --> 00:03:48,239
didn't look at our poofing because

89
00:03:48,239 --> 00:03:50,430
everyone does that but I looked at Mac

90
00:03:50,430 --> 00:03:52,470
flooding feeling hopping the two types

91
00:03:52,470 --> 00:03:56,310
so double tagging and VTP attacks and

92
00:03:56,310 --> 00:03:58,519
the spanning tree protocol which is a

93
00:03:58,519 --> 00:04:05,220
pretty devastating attack so first

94
00:04:05,220 --> 00:04:08,669
attack is Mac flooding so I try to get

95
00:04:08,669 --> 00:04:09,989
gifts that are relevant but sometimes

96
00:04:09,989 --> 00:04:11,340
I'll just throw in because it's funny

97
00:04:11,340 --> 00:04:15,959
see so if anyone who can't remember or

98
00:04:15,959 --> 00:04:17,488
just need a refresher on what Mac

99
00:04:17,488 --> 00:04:19,978
flooding is a switch will have a cam

100
00:04:19,978 --> 00:04:21,839
table where it stores information about

101
00:04:21,839 --> 00:04:24,630
the MAC addresses it sees which port

102
00:04:24,630 --> 00:04:25,139
it's come

103
00:04:25,139 --> 00:04:27,900
from and and this allows it to send

104
00:04:27,900 --> 00:04:29,879
frames to the correct port when a frame

105
00:04:29,879 --> 00:04:32,819
is received as opposed to a hub which

106
00:04:32,819 --> 00:04:35,099
will send out every port so the way Mac

107
00:04:35,099 --> 00:04:37,110
flooding works is the attacker simply

108
00:04:37,110 --> 00:04:39,389
sends a bunch of frames from different

109
00:04:39,389 --> 00:04:41,520
MAC addresses this fills up the cam

110
00:04:41,520 --> 00:04:46,080
table which has a fixed size once the

111
00:04:46,080 --> 00:04:48,330
cam tables fool the switch will go into

112
00:04:48,330 --> 00:04:50,490
hub like mode and start broadcasting out

113
00:04:50,490 --> 00:04:54,840
all the all the ports I'm so envious

114
00:04:54,840 --> 00:04:57,569
which is like testing this against B

115
00:04:57,569 --> 00:05:00,360
switches is very similar so there's a

116
00:05:00,360 --> 00:05:01,590
dotted line there I don't know if the

117
00:05:01,590 --> 00:05:03,599
colors showing up well the left is pink

118
00:05:03,599 --> 00:05:05,699
that's the virtual environment so we

119
00:05:05,699 --> 00:05:07,800
have our attacker on the Left attacking

120
00:05:07,800 --> 00:05:09,680
the virtual switch with the Mac flooding

121
00:05:09,680 --> 00:05:11,909
and then we have a physical switch on

122
00:05:11,909 --> 00:05:14,909
the outside world so I did this against

123
00:05:14,909 --> 00:05:17,099
ESX but it was already done pretty

124
00:05:17,099 --> 00:05:19,139
extensively at Def Con so I didn't

125
00:05:19,139 --> 00:05:22,349
record it because it was actually really

126
00:05:22,349 --> 00:05:24,659
effective against most open-source

127
00:05:24,659 --> 00:05:28,770
switches and the V switches in in ESX

128
00:05:28,770 --> 00:05:31,169
and there's a link there you can read

129
00:05:31,169 --> 00:05:33,539
more about it they did did it pretty

130
00:05:33,539 --> 00:05:36,469
thoroughly and so this is some of the

131
00:05:36,469 --> 00:05:39,599
the stats they got so obviously as the

132
00:05:39,599 --> 00:05:41,159
switch goes into broadcast mode it

133
00:05:41,159 --> 00:05:45,960
starts slowing down the network and they

134
00:05:45,960 --> 00:05:47,879
did it with the 2950 there is a hardware

135
00:05:47,879 --> 00:05:53,399
I'm control to compare so I'll move on

136
00:05:53,399 --> 00:05:56,300
to the VLAN hopping

137
00:05:57,710 --> 00:06:00,330
okay so refresher on VLANs

138
00:06:00,330 --> 00:06:02,009
for people that can't remember it's

139
00:06:02,009 --> 00:06:03,750
configured as a security measure to

140
00:06:03,750 --> 00:06:05,370
limit the number of hosts susceptible to

141
00:06:05,370 --> 00:06:08,159
a layer to attack so pretty much limits

142
00:06:08,159 --> 00:06:11,310
your broadcast domain and and villains

143
00:06:11,310 --> 00:06:14,339
will create boundaries over which those

144
00:06:14,339 --> 00:06:17,069
broadcasts can't cross so in the data

145
00:06:17,069 --> 00:06:20,250
center environment you may have VLAN 1 2

146
00:06:20,250 --> 00:06:25,110
& 3 and because you want your your VMs

147
00:06:25,110 --> 00:06:26,729
to be able to migrate between hosts

148
00:06:26,729 --> 00:06:29,069
you'll generally put a trunk and allow

149
00:06:29,069 --> 00:06:34,649
the emotion between between the hosts so

150
00:06:34,649 --> 00:06:37,410
the way this works on a virtual switch

151
00:06:37,410 --> 00:06:39,740
and this is the ESX model is that

152
00:06:39,740 --> 00:06:42,330
similar to a hardware switch the VM will

153
00:06:42,330 --> 00:06:45,810
send the frame untagged the virtual

154
00:06:45,810 --> 00:06:48,050
switch knows which VLAN that that

155
00:06:48,050 --> 00:06:51,060
machine should be in and adds the tag to

156
00:06:51,060 --> 00:06:53,610
it if it sends it across the trunk if it

157
00:06:53,610 --> 00:06:55,170
sends it locally it's just going to keep

158
00:06:55,170 --> 00:07:01,710
it untagged so then we come to VLAN

159
00:07:01,710 --> 00:07:06,870
double tagging so the the top frame

160
00:07:06,870 --> 00:07:09,000
there is a general Ethernet frame the

161
00:07:09,000 --> 00:07:13,800
second frame there is the 802 dot1q tag

162
00:07:13,800 --> 00:07:16,410
which you can see in inside the frame

163
00:07:16,410 --> 00:07:18,330
just after the destination and source

164
00:07:18,330 --> 00:07:21,390
addresses and then the second one down

165
00:07:21,390 --> 00:07:23,220
is the queuing queue which is a double

166
00:07:23,220 --> 00:07:25,020
tagged frame where you have two tags in

167
00:07:25,020 --> 00:07:26,910
the frame so the spec allows for this

168
00:07:26,910 --> 00:07:29,640
but it does allow us to misuse feel ends

169
00:07:29,640 --> 00:07:32,610
so you can see the CVE there where they

170
00:07:32,610 --> 00:07:35,430
are they say that um the protocol

171
00:07:35,430 --> 00:07:37,440
actually allows us to bypass be landing

172
00:07:37,440 --> 00:07:40,920
by putting this extra tag in and it can

173
00:07:40,920 --> 00:07:45,420
be done in yesenia so just to talk that

174
00:07:45,420 --> 00:07:47,880
down a bit more in case that was a bit

175
00:07:47,880 --> 00:07:50,700
too quick so this is our network with

176
00:07:50,700 --> 00:07:53,730
our VLANs so a normal tagging process

177
00:07:53,730 --> 00:07:55,680
here you'd have the server in feel and

178
00:07:55,680 --> 00:07:58,830
to sends a frame to the switch the

179
00:07:58,830 --> 00:08:01,020
switch acknowledges that Cynthia on to

180
00:08:01,020 --> 00:08:02,670
adds the dot1q

181
00:08:02,670 --> 00:08:06,390
header tag to sends it across the trunk

182
00:08:06,390 --> 00:08:09,210
the next switch will receive it see that

183
00:08:09,210 --> 00:08:11,880
it was in the land to pull off the tag

184
00:08:11,880 --> 00:08:14,280
and send it down to any machines with

185
00:08:14,280 --> 00:08:18,270
ports in VLAN to so a special case is

186
00:08:18,270 --> 00:08:20,670
VLAN one which is known as the native

187
00:08:20,670 --> 00:08:23,370
VLAN it can be changed from VLAN one but

188
00:08:23,370 --> 00:08:26,340
not many people do change it it the way

189
00:08:26,340 --> 00:08:29,400
it works is it's a legacy I mean it's

190
00:08:29,400 --> 00:08:31,080
implemented for legacy reasons so it

191
00:08:31,080 --> 00:08:33,630
doesn't tag across the trunk so pretty

192
00:08:33,630 --> 00:08:36,659
much when the switch receives a frame

193
00:08:36,659 --> 00:08:38,580
from VLAN 1 it will just send it

194
00:08:38,580 --> 00:08:40,950
untagged across the trunk and then

195
00:08:40,950 --> 00:08:43,320
likewise when the other side sees it

196
00:08:43,320 --> 00:08:45,720
says well must be native VLAN 1 and

197
00:08:45,720 --> 00:08:47,850
sends it out VLAN 1 so it's the native

198
00:08:47,850 --> 00:08:50,910
VLAN VLAN that we miss used to get VLAN

199
00:08:50,910 --> 00:08:55,620
copying happening so this is a VLAN

200
00:08:55,620 --> 00:08:58,860
hopping so pretty much on your honor on

201
00:08:58,860 --> 00:09:01,740
VLAN 1 the native VLAN so some lazy

202
00:09:01,740 --> 00:09:03,530
engineers forgot to put you in a VLAN

203
00:09:03,530 --> 00:09:07,350
you double tagged it with 1 & 2 when the

204
00:09:07,350 --> 00:09:08,760
switch receives it it looks at the

205
00:09:08,760 --> 00:09:11,640
outside tag and it says okay well this

206
00:09:11,640 --> 00:09:14,130
is VLAN 1 this is my native VLAN strips

207
00:09:14,130 --> 00:09:15,960
the tag off sends it across thinking

208
00:09:15,960 --> 00:09:18,600
it's sending it untagged the other side

209
00:09:18,600 --> 00:09:20,820
it receives it and sees the inside tag

210
00:09:20,820 --> 00:09:23,760
which is 2 and then forwards the frame

211
00:09:23,760 --> 00:09:27,300
on to any server in VLAN 2 so that's a

212
00:09:27,300 --> 00:09:31,080
double tagging so double tagging on

213
00:09:31,080 --> 00:09:33,690
virtual switches it works if there's at

214
00:09:33,690 --> 00:09:35,730
least one physical switch between the

215
00:09:35,730 --> 00:09:38,910
VMS as in you're heading out a trunk

216
00:09:38,910 --> 00:09:42,030
come back down in open V switch and

217
00:09:42,030 --> 00:09:43,950
Linux bridging the DEF CON guys actually

218
00:09:43,950 --> 00:09:45,960
said it worked without that I didn't get

219
00:09:45,960 --> 00:09:51,720
that working though so moving on to VLAN

220
00:09:51,720 --> 00:09:53,820
trunking protocol and I recorded the

221
00:09:53,820 --> 00:09:55,520
demo for this one at the end hopefully

222
00:09:55,520 --> 00:09:58,320
it will work

223
00:09:58,320 --> 00:10:00,480
so the VLAN trunk protocol is the

224
00:10:00,480 --> 00:10:03,510
protocol used by Cisco to you enable the

225
00:10:03,510 --> 00:10:05,130
switches to negotiate a trunk between

226
00:10:05,130 --> 00:10:07,320
themselves and by default and this is

227
00:10:07,320 --> 00:10:10,260
still current Cisco will put their ports

228
00:10:10,260 --> 00:10:11,940
into auto mode which means they will

229
00:10:11,940 --> 00:10:13,860
respond to dynamic dynamic trunk

230
00:10:13,860 --> 00:10:18,180
protocol requests yeah so the way VTP

231
00:10:18,180 --> 00:10:19,770
works is the switch will just say hey

232
00:10:19,770 --> 00:10:22,200
I'm I'm capable of trunking will you

233
00:10:22,200 --> 00:10:23,670
trunk with me and the other switch says

234
00:10:23,670 --> 00:10:24,300
yeah ok

235
00:10:24,300 --> 00:10:27,060
so the way the attack works is the bad

236
00:10:27,060 --> 00:10:29,700
guy who's just a server sitting there on

237
00:10:29,700 --> 00:10:33,740
a port that has been set to auto will

238
00:10:33,740 --> 00:10:36,750
send the DTP packet and request a trunk

239
00:10:36,750 --> 00:10:38,460
and the switch will bring up a trunk and

240
00:10:38,460 --> 00:10:40,770
then of course you're able to to

241
00:10:40,770 --> 00:10:44,900
communicate communicate across any VLAN

242
00:10:46,010 --> 00:10:48,840
so in the virtual world so this is how I

243
00:10:48,840 --> 00:10:52,520
had it set up I had on the left is a

244
00:10:52,520 --> 00:10:56,370
4500 running iOS 16 just modern iOS 6 a

245
00:10:56,370 --> 00:10:58,950
straight out of the box on the right

246
00:10:58,950 --> 00:11:00,600
I had my carly machine and a virtual

247
00:11:00,600 --> 00:11:02,310
switch so I had my ESX plugging straight

248
00:11:02,310 --> 00:11:04,470
into a 4500

249
00:11:04,470 --> 00:11:06,870
and all I do is I spin up your senior

250
00:11:06,870 --> 00:11:09,180
and send a DTP packet to try to

251
00:11:09,180 --> 00:11:12,840
negotiate a trunk so this is the demo

252
00:11:12,840 --> 00:11:16,770
sue I hope you can see it it's super

253
00:11:16,770 --> 00:11:20,430
small so anyway on the left is my switch

254
00:11:20,430 --> 00:11:22,740
i've ssh den - and you can see i do a

255
00:11:22,740 --> 00:11:25,890
route run show run in t13 just to see

256
00:11:25,890 --> 00:11:27,780
the config on that port you can see it's

257
00:11:27,780 --> 00:11:29,460
got no config but the description that

258
00:11:29,460 --> 00:11:32,130
I've put on there I'm showing trunk

259
00:11:32,130 --> 00:11:33,720
there's no trunk so it's just sitting

260
00:11:33,720 --> 00:11:36,840
there on the default VLAN 1 and when I

261
00:11:36,840 --> 00:11:39,180
look at VLANs I can see I've set up

262
00:11:39,180 --> 00:11:41,250
I've set up a prod 10 VLAN that I want

263
00:11:41,250 --> 00:11:43,800
to try to access on the right is my

264
00:11:43,800 --> 00:11:46,770
kylie machine so I'm going to which is

265
00:11:46,770 --> 00:11:49,770
in a VM attached to a virtual switch so

266
00:11:49,770 --> 00:11:53,940
I'm gonna try sending my DTP packet from

267
00:11:53,940 --> 00:11:56,220
my Kali machine against the virtual

268
00:11:56,220 --> 00:11:58,440
switch and see what happens on the

269
00:11:58,440 --> 00:12:01,230
hardware switch so coming back to the

270
00:12:01,230 --> 00:12:07,020
hardware switch I do a show in trunk

271
00:12:07,020 --> 00:12:10,020
again you can see that and now there's a

272
00:12:10,020 --> 00:12:10,530
new trunk

273
00:12:10,530 --> 00:12:12,360
that's trunking or all the veil ends

274
00:12:12,360 --> 00:12:16,220
that are on that switch so that's my

275
00:12:16,220 --> 00:12:19,710
yeah it worked so yeah so now I have a

276
00:12:19,710 --> 00:12:23,040
trunk so there was some there were some

277
00:12:23,040 --> 00:12:24,660
limitations I thought yeah ok cool let's

278
00:12:24,660 --> 00:12:27,720
attack prod VLAN 10 I'm really going to

279
00:12:27,720 --> 00:12:30,540
earn this person but um it actually in

280
00:12:30,540 --> 00:12:32,370
actual fact the trunk actually only

281
00:12:32,370 --> 00:12:34,140
created itself between my Hardware

282
00:12:34,140 --> 00:12:36,900
switch the VR what I call VR switch and

283
00:12:36,900 --> 00:12:39,090
the virtual switch it didn't trunk all

284
00:12:39,090 --> 00:12:41,600
the way to the VM so I wasn't able to

285
00:12:41,600 --> 00:12:43,800
create sub interfaces and jump across

286
00:12:43,800 --> 00:12:47,250
the VLAN 10 but um but but it's still

287
00:12:47,250 --> 00:12:49,650
you know perform in that I could

288
00:12:49,650 --> 00:12:52,200
possibly Dawson environment by removing

289
00:12:52,200 --> 00:12:54,120
trunks from that VLAN by sending DTP

290
00:12:54,120 --> 00:13:00,660
packets I see the last layer to attack

291
00:13:00,660 --> 00:13:05,960
is the spanning tree protocol attack so

292
00:13:05,960 --> 00:13:08,250
yeah I found a gift for redundancy

293
00:13:08,250 --> 00:13:10,560
because the spanning tree is to mitigate

294
00:13:10,560 --> 00:13:13,020
the problems that redundancy causes in

295
00:13:13,020 --> 00:13:15,410
your network

296
00:13:16,529 --> 00:13:19,259
yes so spanning-tree pretty much

297
00:13:19,259 --> 00:13:21,239
protects the network from loops caused

298
00:13:21,239 --> 00:13:23,639
by redundancy so once you put in

299
00:13:23,639 --> 00:13:25,229
multiple links between switches you

300
00:13:25,229 --> 00:13:28,169
start getting loops around your network

301
00:13:28,169 --> 00:13:29,819
which can quickly - your network so

302
00:13:29,819 --> 00:13:31,469
that's what spanning tree is developed

303
00:13:31,469 --> 00:13:36,509
for I'll quickly talk through spanning

304
00:13:36,509 --> 00:13:38,489
tree just to get everyone on the same

305
00:13:38,489 --> 00:13:44,159
path the same point on spanning tree I'm

306
00:13:44,159 --> 00:13:45,809
just going to talk about basic spanning

307
00:13:45,809 --> 00:13:47,459
tree so there's rapid spanning tree and

308
00:13:47,459 --> 00:13:49,799
per VLAN spanning tree and MST but I'll

309
00:13:49,799 --> 00:13:51,269
just stick with normal spanning tree at

310
00:13:51,269 --> 00:13:55,139
this point so pretty much each route

311
00:13:55,139 --> 00:13:57,029
each bridge each switch in your network

312
00:13:57,029 --> 00:13:59,429
has a bridge ID which is built from your

313
00:13:59,429 --> 00:14:02,519
priority and your lowest MAC address and

314
00:14:02,519 --> 00:14:04,439
you can see in this network I've given

315
00:14:04,439 --> 00:14:07,279
we it's actually cut off at the top but

316
00:14:07,279 --> 00:14:09,689
the priority is the first number there

317
00:14:09,689 --> 00:14:11,519
so the lowest bridge ID will become the

318
00:14:11,519 --> 00:14:13,049
root bridge in the network so as an as

319
00:14:13,049 --> 00:14:14,969
an engineer you generally do your course

320
00:14:14,969 --> 00:14:17,699
which is your root bridge so that would

321
00:14:17,699 --> 00:14:19,619
elect this switch here is the root

322
00:14:19,619 --> 00:14:22,529
bridge once the root bridge is elected

323
00:14:22,529 --> 00:14:24,689
and this is done through sending bpdu

324
00:14:24,689 --> 00:14:26,989
packets I don't know if you live all

325
00:14:26,989 --> 00:14:28,829
connected to a network and how to look

326
00:14:28,829 --> 00:14:30,449
you may have seen as seen a spanning

327
00:14:30,449 --> 00:14:33,359
tree frames coming through every two

328
00:14:33,359 --> 00:14:34,879
seconds is default

329
00:14:34,879 --> 00:14:38,579
so these BP views are sending through

330
00:14:38,579 --> 00:14:40,109
saying I'm the root bridge I'm the root

331
00:14:40,109 --> 00:14:42,089
bridge until they receive one where they

332
00:14:42,089 --> 00:14:43,229
think oh no you're the root bridge

333
00:14:43,229 --> 00:14:46,589
you're better than me once all these are

334
00:14:46,589 --> 00:14:48,059
going through adding the costs of the

335
00:14:48,059 --> 00:14:50,789
paths the each switch elects its root

336
00:14:50,789 --> 00:14:52,649
port which is the port that is closest

337
00:14:52,649 --> 00:14:55,589
to the root bridge so in this diagram

338
00:14:55,589 --> 00:14:57,679
they've all elected their root ports

339
00:14:57,679 --> 00:15:01,109
once the root port election happens the

340
00:15:01,109 --> 00:15:02,849
designated ports are elected and these

341
00:15:02,849 --> 00:15:05,429
are for each link which port is closest

342
00:15:05,429 --> 00:15:07,339
to the root bridge so in this situation

343
00:15:07,339 --> 00:15:10,379
these would be the designated ports once

344
00:15:10,379 --> 00:15:12,629
reports and designated ports are elected

345
00:15:12,629 --> 00:15:15,089
the rest of the ports go into blocking

346
00:15:15,089 --> 00:15:17,939
State and that's to stop those those

347
00:15:17,939 --> 00:15:21,239
loops in the network so this redundant

348
00:15:21,239 --> 00:15:23,579
network once spanning trees done with it

349
00:15:23,579 --> 00:15:25,999
would look something similar to this

350
00:15:25,999 --> 00:15:28,139
where there's only a single path between

351
00:15:28,139 --> 00:15:29,530
each switch

352
00:15:29,530 --> 00:15:31,750
so there are other parts of

353
00:15:31,750 --> 00:15:33,250
spanning-tree that I haven't haven't

354
00:15:33,250 --> 00:15:35,590
covered such as topology change

355
00:15:35,590 --> 00:15:38,110
notifications this is what a switch will

356
00:15:38,110 --> 00:15:40,390
send if a link goes down to trigger a

357
00:15:40,390 --> 00:15:43,000
reconvergence of the network so there's

358
00:15:43,000 --> 00:15:44,620
definitely attacks you can do by sending

359
00:15:44,620 --> 00:15:47,530
these that will mess up your network and

360
00:15:47,530 --> 00:15:49,060
also there's the forward delay timer

361
00:15:49,060 --> 00:15:51,340
which is how long you know a port will

362
00:15:51,340 --> 00:15:52,930
go into listening before it starts to

363
00:15:52,930 --> 00:15:56,650
forward again so anyway looking at how

364
00:15:56,650 --> 00:15:58,930
as an attacker we can misuse spanning

365
00:15:58,930 --> 00:16:01,180
tree if you're lucky enough to get in

366
00:16:01,180 --> 00:16:03,330
and be able to plug into two switches

367
00:16:03,330 --> 00:16:06,310
you can start sending your BP to use and

368
00:16:06,310 --> 00:16:08,740
tell tell the network that you're the

369
00:16:08,740 --> 00:16:11,050
root bridge so once that happens and the

370
00:16:11,050 --> 00:16:12,790
switches start receiving your BP to use

371
00:16:12,790 --> 00:16:15,040
there's no checking to see if you're

372
00:16:15,040 --> 00:16:16,360
legitimately supposed to be on the

373
00:16:16,360 --> 00:16:19,090
network everyone will start to elect

374
00:16:19,090 --> 00:16:22,560
their report to face the new root bridge

375
00:16:22,560 --> 00:16:24,940
and again the designated ports will be

376
00:16:24,940 --> 00:16:26,710
elected and then the rest of the links

377
00:16:26,710 --> 00:16:28,780
will go into blocking and then you'll

378
00:16:28,780 --> 00:16:30,600
have a network that looks more like this

379
00:16:30,600 --> 00:16:33,040
which means that pretty much anyone

380
00:16:33,040 --> 00:16:34,300
connected down on the bottom right

381
00:16:34,300 --> 00:16:36,430
switch is going to traverse your

382
00:16:36,430 --> 00:16:41,890
attacker so bringing it back to virtual

383
00:16:41,890 --> 00:16:46,810
world they say I mean this is a quote

384
00:16:46,810 --> 00:16:48,400
that taking over root bridge is one of

385
00:16:48,400 --> 00:16:49,990
the most disruptive layer 2 attacks that

386
00:16:49,990 --> 00:16:52,480
can be done so I don't think many people

387
00:16:52,480 --> 00:16:55,300
do this in the normal attack regime

388
00:16:55,300 --> 00:16:57,880
unless they're really bad bad guys but

389
00:16:57,880 --> 00:16:59,500
um yeah you can pretty much pull down

390
00:16:59,500 --> 00:17:01,570
the network from from spanning tree

391
00:17:01,570 --> 00:17:04,810
attacks which I've done many times but

392
00:17:04,810 --> 00:17:07,270
um in the virtual world what I've done

393
00:17:07,270 --> 00:17:10,089
is I've got my Kali VM attached to my

394
00:17:10,089 --> 00:17:11,980
virtual switch which then trunks through

395
00:17:11,980 --> 00:17:14,709
to my Hardware switch I mean I start

396
00:17:14,709 --> 00:17:16,810
sending B PDUs to the virtual switch and

397
00:17:16,810 --> 00:17:19,420
see how it reacts to a spanning tree

398
00:17:19,420 --> 00:17:24,870
attack should be working

399
00:17:27,630 --> 00:17:29,700
so it's exactly the same environment I

400
00:17:29,700 --> 00:17:32,460
have my hardware switch on the Left I've

401
00:17:32,460 --> 00:17:34,980
done in a show spanning tree I'm running

402
00:17:34,980 --> 00:17:36,600
per view and spanning tree but we're

403
00:17:36,600 --> 00:17:38,309
only interested in VLAN 1 because that's

404
00:17:38,309 --> 00:17:41,100
where my VM is I'm you can see there it

405
00:17:41,100 --> 00:17:44,130
says this this bridge is the root so

406
00:17:44,130 --> 00:17:46,350
this switch is the root in the network

407
00:17:46,350 --> 00:17:49,950
at the moment if I look at I did a show

408
00:17:49,950 --> 00:17:53,400
run on t13 you can see all all that

409
00:17:53,400 --> 00:17:57,240
setup there is that it's a trunk so I

410
00:17:57,240 --> 00:17:59,450
come back to your Center and I just

411
00:17:59,450 --> 00:18:02,669
launch the spanning tree attacks I think

412
00:18:02,669 --> 00:18:04,169
I just turned a bit of logging first

413
00:18:04,169 --> 00:18:08,280
onto my hardware switch that's a bit

414
00:18:08,280 --> 00:18:10,679
more clear when when the BPD is start

415
00:18:10,679 --> 00:18:12,980
coming through

416
00:18:18,490 --> 00:18:20,740
yeah so now I trigger the spanning tree

417
00:18:20,740 --> 00:18:23,470
attack and you can see there the logging

418
00:18:23,470 --> 00:18:25,210
on the switch is showing that it's

419
00:18:25,210 --> 00:18:28,600
detecting a new root bridge on VLAN 1 so

420
00:18:28,600 --> 00:18:33,430
when I do a show a spanning tree again

421
00:18:33,430 --> 00:18:37,540
on the switch you can see there for VLAN

422
00:18:37,540 --> 00:18:40,840
1 that it has a root port there on t13

423
00:18:40,840 --> 00:18:43,600
which means it thinks that the VM is now

424
00:18:43,600 --> 00:18:46,720
the root bridge for that network so yeah

425
00:18:46,720 --> 00:18:51,400
tacked it again but um yeah so that was

426
00:18:51,400 --> 00:18:53,140
successful attack so just looking

427
00:18:53,140 --> 00:18:55,360
through some of the mitigation options

428
00:18:55,360 --> 00:18:57,100
so you can either harden the hardware

429
00:18:57,100 --> 00:18:59,260
switch or the virtual switch to try to

430
00:18:59,260 --> 00:19:01,360
mitigate some of these problems so for

431
00:19:01,360 --> 00:19:03,400
the hardware switch you can enable Mac

432
00:19:03,400 --> 00:19:06,040
security which is normally what we do

433
00:19:06,040 --> 00:19:09,670
for um for Mac flooding but that's tough

434
00:19:09,670 --> 00:19:11,110
if there's many virtual switches so

435
00:19:11,110 --> 00:19:13,810
probably there's something hinder on the

436
00:19:13,810 --> 00:19:17,230
virtual switch instead disabled VTP so

437
00:19:17,230 --> 00:19:19,180
if you do switch port mode trunk or

438
00:19:19,180 --> 00:19:20,950
access that that's not going to respond

439
00:19:20,950 --> 00:19:24,700
to any more DT DT P packets and enable B

440
00:19:24,700 --> 00:19:27,310
bpdu guards so don't accept spanning

441
00:19:27,310 --> 00:19:30,900
tree packets from your virtual network

442
00:19:30,900 --> 00:19:33,760
they're simple mitigations but they're

443
00:19:33,760 --> 00:19:35,440
not on by default and not many people do

444
00:19:35,440 --> 00:19:39,340
them for handing the virtual switch so

445
00:19:39,340 --> 00:19:42,430
these optional security policies that

446
00:19:42,430 --> 00:19:45,100
come on the-- switches by default there

447
00:19:45,100 --> 00:19:49,770
will always accept but i think maybe in

448
00:19:49,770 --> 00:19:52,570
ESX 5 5 they they've changed it to

449
00:19:52,570 --> 00:19:55,480
reject which is great but just hop in

450
00:19:55,480 --> 00:19:57,210
there and make sure i'm you shouldn't

451
00:19:57,210 --> 00:19:59,950
unless you have a purpose to a check to

452
00:19:59,950 --> 00:20:01,720
have your MAC address change on your VM

453
00:20:01,720 --> 00:20:04,540
I mean ESX knows what what MAC address

454
00:20:04,540 --> 00:20:06,670
they've assigned the VM it won't let

455
00:20:06,670 --> 00:20:08,620
anything but that MAC address come out

456
00:20:08,620 --> 00:20:12,520
of the VM so yep so definitely hadn't

457
00:20:12,520 --> 00:20:15,040
your so a summary of what I've covered

458
00:20:15,040 --> 00:20:18,970
in the mitigation options so max

459
00:20:18,970 --> 00:20:23,110
flooding was effective but is easy to

460
00:20:23,110 --> 00:20:25,770
prevent by hopping on V switch and

461
00:20:25,770 --> 00:20:29,080
rejecting MAC address changes v TP

462
00:20:29,080 --> 00:20:31,580
switch spoofing I

463
00:20:31,580 --> 00:20:34,460
saw that the DTP frames were passed

464
00:20:34,460 --> 00:20:35,750
straight through the virtual switch to

465
00:20:35,750 --> 00:20:37,400
the hardware switch so set the hardware

466
00:20:37,400 --> 00:20:39,860
port connected to the hypervisor to

467
00:20:39,860 --> 00:20:43,160
specific VLANs that you you want to come

468
00:20:43,160 --> 00:20:47,240
up don't leave it in Auto VLAN hopping

469
00:20:47,240 --> 00:20:48,650
will work if there's at least one

470
00:20:48,650 --> 00:20:51,200
physical switch between the VMS so don't

471
00:20:51,200 --> 00:20:55,400
use VLAN one and spanning tree attacks

472
00:20:55,400 --> 00:20:58,070
it passes through the spanning tree

473
00:20:58,070 --> 00:21:01,190
frames through the virtual switch to the

474
00:21:01,190 --> 00:21:03,260
hardware switch so again enable bpdu so

475
00:21:03,260 --> 00:21:06,470
you don't enter any enter into any STP

476
00:21:06,470 --> 00:21:11,570
negotiations with any of your VMs okay

477
00:21:11,570 --> 00:21:14,420
so fill up for the last part I just want

478
00:21:14,420 --> 00:21:15,830
to cover off a little bit on on the

479
00:21:15,830 --> 00:21:20,510
newer veterus which is there so I'll go

480
00:21:20,510 --> 00:21:23,240
through it fairly quickly so I looked at

481
00:21:23,240 --> 00:21:25,130
in VMware NSX I was like well you know

482
00:21:25,130 --> 00:21:27,800
I've looked at the normal switches let's

483
00:21:27,800 --> 00:21:30,760
have a look at what NSX can do or not do

484
00:21:30,760 --> 00:21:35,330
so I'll do a little intro because I

485
00:21:35,330 --> 00:21:38,240
built it up as fairly new so I had to

486
00:21:38,240 --> 00:21:40,160
build NSX at home because I didn't want

487
00:21:40,160 --> 00:21:42,410
to start attacking my customer or

488
00:21:42,410 --> 00:21:46,580
clients networks I needed a minimum of

489
00:21:46,580 --> 00:21:48,830
two a sxs to be able to test some of the

490
00:21:48,830 --> 00:21:52,160
functionality that that NSX brings I

491
00:21:52,160 --> 00:21:54,890
need needed a V Center a shared data

492
00:21:54,890 --> 00:21:56,930
store and I actually needed minimum of

493
00:21:56,930 --> 00:21:58,400
four calls for the control of the Em's

494
00:21:58,400 --> 00:22:00,680
they require that which my

495
00:22:00,680 --> 00:22:02,540
microprocessors only had two which was a

496
00:22:02,540 --> 00:22:06,200
bit of a bummer so I had a lab already

497
00:22:06,200 --> 00:22:07,490
that I'd set up because I did some

498
00:22:07,490 --> 00:22:09,590
research on I'm hacking the fibre

499
00:22:09,590 --> 00:22:12,470
channel protocol so I reused it a bunch

500
00:22:12,470 --> 00:22:16,160
of that which was really good I bought a

501
00:22:16,160 --> 00:22:18,920
new server with 4 cores yay it's good

502
00:22:18,920 --> 00:22:22,490
fun I have my VM family uses a group

503
00:22:22,490 --> 00:22:23,720
membership which is really good if you

504
00:22:23,720 --> 00:22:25,130
like testing and playing around with

505
00:22:25,130 --> 00:22:27,410
this stuff it's like $200 a year and you

506
00:22:27,410 --> 00:22:30,200
get licenses for vCenter nor all the new

507
00:22:30,200 --> 00:22:32,630
things that you need licenses for you

508
00:22:32,630 --> 00:22:34,100
just can't use it in an enterprise

509
00:22:34,100 --> 00:22:37,460
environment so all up is about a hundred

510
00:22:37,460 --> 00:22:38,900
eight hundred and fifty dollars just to

511
00:22:38,900 --> 00:22:42,730
build NSX and test it at home so

512
00:22:42,730 --> 00:22:45,410
installing it is super easy

513
00:22:45,410 --> 00:22:47,180
you pretty much just download the nsx

514
00:22:47,180 --> 00:22:49,430
manager deploy the VM and it starts

515
00:22:49,430 --> 00:22:52,490
deploying all the components for you you

516
00:22:52,490 --> 00:22:54,470
pick a distributed virtual switch that

517
00:22:54,470 --> 00:22:56,120
you want to deploy to and it just adds

518
00:22:56,120 --> 00:22:59,540
the modules in for the functionality so

519
00:22:59,540 --> 00:23:03,050
nsx manager it's the the centralized

520
00:23:03,050 --> 00:23:05,030
management for nsx it's the first

521
00:23:05,030 --> 00:23:07,280
component you deploy it pretty much as

522
00:23:07,280 --> 00:23:09,170
soon as you deployed it in injects a

523
00:23:09,170 --> 00:23:12,800
plug-in or plugging into the center so

524
00:23:12,800 --> 00:23:15,110
you get a new menu option that's allows

525
00:23:15,110 --> 00:23:17,570
you to configure and manage nsx i'm and

526
00:23:17,570 --> 00:23:18,980
then and that just goes and installs the

527
00:23:18,980 --> 00:23:20,540
rest of the components of nsx

528
00:23:20,540 --> 00:23:23,300
it's an nsx controller which is the the

529
00:23:23,300 --> 00:23:27,380
beefy vm that needed for full course it

530
00:23:27,380 --> 00:23:30,260
stores it's like the brains of nsx it

531
00:23:30,260 --> 00:23:33,320
stores aren't tables and that tables the

532
00:23:33,320 --> 00:23:35,930
v types which is the tunnel endpoints

533
00:23:35,930 --> 00:23:38,630
we'll talk a bit more about and and all

534
00:23:38,630 --> 00:23:40,400
the routing tables so it's the brains

535
00:23:40,400 --> 00:23:44,000
for the for the virtual networks um so

536
00:23:44,000 --> 00:23:46,430
some of the spiel that vmware give it

537
00:23:46,430 --> 00:23:48,980
can run on vmware Xen and KVM I only ran

538
00:23:48,980 --> 00:23:51,890
it on VMware it works by adding vid to a

539
00:23:51,890 --> 00:23:54,890
VDI switch which is pretty much a VMware

540
00:23:54,890 --> 00:23:56,920
kernel module that allows vex land

541
00:23:56,920 --> 00:23:59,060
distributed logical router Zoar

542
00:23:59,060 --> 00:23:59,690
firewalls

543
00:23:59,690 --> 00:24:03,170
so traditionally virtual switches were

544
00:24:03,170 --> 00:24:05,870
any layer 2 this adds layer 3 to the

545
00:24:05,870 --> 00:24:09,310
virtual switch which means less s east

546
00:24:09,310 --> 00:24:11,960
which allows east-west traffic and not

547
00:24:11,960 --> 00:24:13,430
north-south so you're not heading down

548
00:24:13,430 --> 00:24:18,830
to your hardware switch for routing C so

549
00:24:18,830 --> 00:24:21,020
I built it and I'm like ok let's try

550
00:24:21,020 --> 00:24:22,460
these lay to attacks let's see if they

551
00:24:22,460 --> 00:24:25,430
work but yeah I have much to talk about

552
00:24:25,430 --> 00:24:26,900
that because it pretty much wasn't

553
00:24:26,900 --> 00:24:30,320
effective but I did notice there was a

554
00:24:30,320 --> 00:24:32,030
new protocol of the excellent protocol

555
00:24:32,030 --> 00:24:34,550
and it's like out there as one of the

556
00:24:34,550 --> 00:24:37,490
main editions for NSX so so now let's

557
00:24:37,490 --> 00:24:39,020
look at this

558
00:24:39,020 --> 00:24:41,300
so I theorize a bit about the excellent

559
00:24:41,300 --> 00:24:42,530
here and just explained it but I don't

560
00:24:42,530 --> 00:24:46,090
have any demos or results for you

561
00:24:46,090 --> 00:24:49,389
unfortunately sorry

562
00:24:49,509 --> 00:24:50,919
so the excellent protocol is a

563
00:24:50,919 --> 00:24:54,849
standards-based overlay protocol RFC 73

564
00:24:54,849 --> 00:24:56,589
for eight should go read it it's really

565
00:24:56,589 --> 00:24:59,799
interesting it leverages layer three so

566
00:24:59,799 --> 00:25:01,749
pretty much underneath everything's

567
00:25:01,749 --> 00:25:02,979
layer three we don't have to worry about

568
00:25:02,979 --> 00:25:04,929
spanning tree and then it creates a

569
00:25:04,929 --> 00:25:08,559
layer two tunnel over the top it has an

570
00:25:08,559 --> 00:25:10,599
increased namespace or has 6 million

571
00:25:10,599 --> 00:25:12,849
identifies as opposed to VLANs which are

572
00:25:12,849 --> 00:25:16,749
four thousand and ninety four and it's

573
00:25:16,749 --> 00:25:18,099
an integration of physical and virtual

574
00:25:18,099 --> 00:25:22,329
worlds so this is how I see the X land

575
00:25:22,329 --> 00:25:24,309
it's pretty much how you have two

576
00:25:24,309 --> 00:25:26,229
virtual switches you have your V tab and

577
00:25:26,229 --> 00:25:28,389
points on each switch and it creates a

578
00:25:28,389 --> 00:25:30,070
layer to tunnel over the top of your

579
00:25:30,070 --> 00:25:34,329
layer 3 network I'm so it's designed for

580
00:25:34,329 --> 00:25:35,859
large cloud environments if you have

581
00:25:35,859 --> 00:25:38,669
data centers in different locations um

582
00:25:38,669 --> 00:25:41,559
there's the X plane gateway type so once

583
00:25:41,559 --> 00:25:44,820
you hit your V tip you can then move

584
00:25:44,820 --> 00:25:48,549
layer to bridging onto a VLAN tag link

585
00:25:48,549 --> 00:25:50,950
you can do the excellent effects LAN rat

586
00:25:50,950 --> 00:25:53,459
routing or the excellent of VLAN routing

587
00:25:53,459 --> 00:25:56,979
so this is what the VX LAN header looks

588
00:25:56,979 --> 00:25:59,169
like which when I saw it I was pretty

589
00:25:59,169 --> 00:26:00,999
pretty excited because it's pretty

590
00:26:00,999 --> 00:26:05,889
simple it's it pretty much is just made

591
00:26:05,889 --> 00:26:08,259
up of a bunch of reserved bytes and bits

592
00:26:08,259 --> 00:26:10,989
and then the the excellent network

593
00:26:10,989 --> 00:26:14,139
identifier is just stuck in there it's

594
00:26:14,139 --> 00:26:16,179
great to write force KP because you

595
00:26:16,179 --> 00:26:17,379
don't have to write check sums or

596
00:26:17,379 --> 00:26:20,889
anything so it's really simple so this

597
00:26:20,889 --> 00:26:22,419
is what the excellent looks like in

598
00:26:22,419 --> 00:26:24,909
scape here I don't know if it if it's in

599
00:26:24,909 --> 00:26:26,799
scaping out wasn't when I when I was

600
00:26:26,799 --> 00:26:28,929
looking at it so pretty much it the

601
00:26:28,929 --> 00:26:32,499
class extends the packet class it has

602
00:26:32,499 --> 00:26:35,079
field say the flags field it has I'm

603
00:26:35,079 --> 00:26:37,539
just the default value of 8 which sets

604
00:26:37,539 --> 00:26:39,579
one for the I bet which is what you need

605
00:26:39,579 --> 00:26:42,159
if you have an ID in there then you have

606
00:26:42,159 --> 00:26:45,999
three hex bytes which set to 0 then 3

607
00:26:45,999 --> 00:26:47,859
bytes for the VIN end which is the VLAN

608
00:26:47,859 --> 00:26:52,059
VXLAN ID and then one reserved by it all

609
00:26:52,059 --> 00:26:58,049
set to 0 as well so looking more at the

610
00:26:58,049 --> 00:27:02,680
how the VX line fits into the the frame

611
00:27:02,680 --> 00:27:04,360
because this is how you'll lay it out in

612
00:27:04,360 --> 00:27:06,010
scape you if you wanted to start trying

613
00:27:06,010 --> 00:27:08,470
out attacks so the outer Ethernet

614
00:27:08,470 --> 00:27:10,690
contains the next hop MAC address and

615
00:27:10,690 --> 00:27:13,390
the saw speed tap MAC address the outer

616
00:27:13,390 --> 00:27:15,790
IP contains the source IP for the

617
00:27:15,790 --> 00:27:17,610
ingress feet up and the decimal

618
00:27:17,610 --> 00:27:20,560
destination I pay for the egress feet up

619
00:27:20,560 --> 00:27:23,980
and then there's the UDP header which

620
00:27:23,980 --> 00:27:25,990
has a source port of four seven eight

621
00:27:25,990 --> 00:27:27,820
nine and then there's a villain header

622
00:27:27,820 --> 00:27:30,670
and then the rest of that is is the

623
00:27:30,670 --> 00:27:32,460
actual frame that you're sending

624
00:27:32,460 --> 00:27:35,350
so in scape II you can bind layers and

625
00:27:35,350 --> 00:27:37,480
this just means that when you're using

626
00:27:37,480 --> 00:27:40,090
it later it will populate four seven

627
00:27:40,090 --> 00:27:42,850
eight nine as the UDP destination port

628
00:27:42,850 --> 00:27:44,440
which comes before the excellent and

629
00:27:44,440 --> 00:27:46,150
then after the x-plane there's always an

630
00:27:46,150 --> 00:27:51,280
Ethernet field so this is an example of

631
00:27:51,280 --> 00:27:56,170
using of sending an ICMP packet inscape

632
00:27:56,170 --> 00:27:59,200
II I'm using VX LAN so you can see

633
00:27:59,200 --> 00:28:01,150
you're just pretty much layer what we

634
00:28:01,150 --> 00:28:04,050
saw in the in the front in the the frame

635
00:28:04,050 --> 00:28:08,140
so we have IP UDP the excellent if I pee

636
00:28:08,140 --> 00:28:10,260
and then ICMP that will send an ICMP

637
00:28:10,260 --> 00:28:15,850
encapsulated in a V excellent hello so

638
00:28:15,850 --> 00:28:17,530
this would be an example of misusing the

639
00:28:17,530 --> 00:28:21,150
X lab once you've got your V excellent

640
00:28:21,150 --> 00:28:25,060
class since KP so so in this situation

641
00:28:25,060 --> 00:28:28,990
we've got IP UDP the X LAN and then

642
00:28:28,990 --> 00:28:32,200
ether then we do another VX LAN and

643
00:28:32,200 --> 00:28:33,820
ether and this is like copying off

644
00:28:33,820 --> 00:28:36,610
double VLAN tagging but using the newer

645
00:28:36,610 --> 00:28:38,830
protocol that's come out so

646
00:28:38,830 --> 00:28:41,890
theoretically the V tape should strip

647
00:28:41,890 --> 00:28:43,450
the first V excellent header and then

648
00:28:43,450 --> 00:28:48,070
what then like looking out for people

649
00:28:48,070 --> 00:28:51,550
testing this and then another example

650
00:28:51,550 --> 00:28:52,780
would be just sending it straight from

651
00:28:52,780 --> 00:28:54,730
your VM which shouldn't be sending the

652
00:28:54,730 --> 00:28:56,470
excellent tagged frames and where would

653
00:28:56,470 --> 00:29:01,630
that go yeah see yeah see erratically

654
00:29:01,630 --> 00:29:03,100
according to the spec and reading

655
00:29:03,100 --> 00:29:04,660
through the spec there's absolutely no

656
00:29:04,660 --> 00:29:06,310
checking in the X line so a lot of these

657
00:29:06,310 --> 00:29:08,110
attacks could possibly work depending on

658
00:29:08,110 --> 00:29:10,360
the vendor implementation it's not just

659
00:29:10,360 --> 00:29:13,870
NSX that runs the excellence it is cisco

660
00:29:13,870 --> 00:29:15,850
ACI and a few other

661
00:29:15,850 --> 00:29:18,490
cloud products I think in general just

662
00:29:18,490 --> 00:29:19,900
because the vendor says something is

663
00:29:19,900 --> 00:29:22,120
more secure doesn't mean we shouldn't

664
00:29:22,120 --> 00:29:23,350
test that and have a look for ourselves

665
00:29:23,350 --> 00:29:27,340
so in summary I covered off on Mac

666
00:29:27,340 --> 00:29:29,740
flooding VTP VLAN hopping and spanning

667
00:29:29,740 --> 00:29:31,480
tree against virtual switches some

668
00:29:31,480 --> 00:29:33,880
mitigation strategies and then I looked

669
00:29:33,880 --> 00:29:37,110
at VMware NSX and the excellent protocol

670
00:29:37,110 --> 00:29:40,400
see thanks thanks for having me thanks

671
00:29:40,400 --> 00:29:44,309
[Applause]

