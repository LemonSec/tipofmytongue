1
00:00:04,880 --> 00:00:06,640
hello

2
00:00:06,640 --> 00:00:10,080
um so i'm ben for those that don't know

3
00:00:10,080 --> 00:00:13,280
me um i go by the hacker elias zanti

4
00:00:13,280 --> 00:00:14,960
it's a bit of a throwback from my

5
00:00:14,960 --> 00:00:17,119
teenage years

6
00:00:17,119 --> 00:00:18,960
you may recognize me from previous

7
00:00:18,960 --> 00:00:22,160
christchurch cons where i talked about

8
00:00:22,160 --> 00:00:23,439
finding command injection

9
00:00:23,439 --> 00:00:25,519
vulnerabilities in some

10
00:00:25,519 --> 00:00:28,000
consumer routers and i also last year

11
00:00:28,000 --> 00:00:30,000
talked about hacking the playstation

12
00:00:30,000 --> 00:00:32,719
classic for loading up more game roms

13
00:00:32,719 --> 00:00:34,960
and stuff like that

14
00:00:34,960 --> 00:00:38,079
i run a hardware hacking meetup in

15
00:00:38,079 --> 00:00:39,200
wellington

16
00:00:39,200 --> 00:00:40,879
it's currently on hold because of the

17
00:00:40,879 --> 00:00:42,320
coronavirus i just haven't felt

18
00:00:42,320 --> 00:00:44,559
comfortable running in person meetups

19
00:00:44,559 --> 00:00:46,640
during this time but there is a slack

20
00:00:46,640 --> 00:00:47,840
channel where we talk about hardware

21
00:00:47,840 --> 00:00:49,840
hacking so if you're interested in

22
00:00:49,840 --> 00:00:52,399
hardware hacking embedded systems just

23
00:00:52,399 --> 00:00:54,160
flick my email there's details on the

24
00:00:54,160 --> 00:00:56,960
website the url is on there

25
00:00:56,960 --> 00:00:59,600
anyone is you know free to join just ask

26
00:00:59,600 --> 00:01:00,800
questions

27
00:01:00,800 --> 00:01:04,959
um and yeah please be interested

28
00:01:05,920 --> 00:01:09,520
so today i'm going to talk about

29
00:01:09,520 --> 00:01:12,880
this thing so this is a a dj controller

30
00:01:12,880 --> 00:01:15,119
right so i was born in christchurch and

31
00:01:15,119 --> 00:01:17,439
i was brought up in christchurch i moved

32
00:01:17,439 --> 00:01:20,640
um when i was about 17. um but

33
00:01:20,640 --> 00:01:22,240
i feel that because i was born in

34
00:01:22,240 --> 00:01:23,759
christchurch i was sort of genetically

35
00:01:23,759 --> 00:01:26,000
engineered with this idea that

36
00:01:26,000 --> 00:01:27,680
i should be listening and mixing drum

37
00:01:27,680 --> 00:01:29,280
and bass i don't know like

38
00:01:29,280 --> 00:01:31,620
is it a christchurch thing or not um

39
00:01:31,620 --> 00:01:32,960
[Music]

40
00:01:32,960 --> 00:01:36,320
so when i bought this dj controller it's

41
00:01:36,320 --> 00:01:38,799
it's just a usb midi controller when i

42
00:01:38,799 --> 00:01:40,079
bought it it was kind of the

43
00:01:40,079 --> 00:01:43,360
start of this this transition to people

44
00:01:43,360 --> 00:01:44,799
making these devices

45
00:01:44,799 --> 00:01:47,040
previously it was like cdjs vinyl that

46
00:01:47,040 --> 00:01:48,720
kind of stuff so this is nearly 10 years

47
00:01:48,720 --> 00:01:50,079
old this thing

48
00:01:50,079 --> 00:01:52,079
but it was the first device it was kind

49
00:01:52,079 --> 00:01:54,560
of um

50
00:01:54,560 --> 00:01:56,640
actually kind of competing with these

51
00:01:56,640 --> 00:01:58,640
more expensive alternatives

52
00:01:58,640 --> 00:02:02,399
um when i bought this particular one

53
00:02:02,399 --> 00:02:05,040
i had two options i had the the tractor

54
00:02:05,040 --> 00:02:07,200
dj for anyone that's used dj software

55
00:02:07,200 --> 00:02:09,199
before i had the track diversion model

56
00:02:09,199 --> 00:02:10,479
which is the one that i bought which is

57
00:02:10,479 --> 00:02:11,599
the one in that picture

58
00:02:11,599 --> 00:02:14,480
and then there was the serato dj version

59
00:02:14,480 --> 00:02:16,640
as you know sorry i

60
00:02:16,640 --> 00:02:19,920
may know as a new zealand company and i

61
00:02:19,920 --> 00:02:21,680
opted not to buy that

62
00:02:21,680 --> 00:02:23,280
just because i felt the tractor software

63
00:02:23,280 --> 00:02:26,239
was a bit better at that time

64
00:02:26,239 --> 00:02:28,959
but time has moved on sorry is a very

65
00:02:28,959 --> 00:02:30,800
very good piece of software

66
00:02:30,800 --> 00:02:32,560
and nowadays everyone's streaming stuff

67
00:02:32,560 --> 00:02:34,720
with streaming services like spotify

68
00:02:34,720 --> 00:02:37,280
soundcloud or whatever

69
00:02:37,280 --> 00:02:40,239
now the serato software does allow you

70
00:02:40,239 --> 00:02:41,920
to tie into some of these so i thought

71
00:02:41,920 --> 00:02:42,640
you know

72
00:02:42,640 --> 00:02:46,319
like could these are very similar

73
00:02:46,319 --> 00:02:50,480
could i just make my tractor

74
00:02:50,480 --> 00:02:53,840
model device work with serato um

75
00:02:53,840 --> 00:02:55,519
and i kind of thought you know what how

76
00:02:55,519 --> 00:02:57,280
would you do that well maybe by just

77
00:02:57,280 --> 00:02:59,360
faking the usb information you know you

78
00:02:59,360 --> 00:03:00,879
plug it in and says it's a

79
00:03:00,879 --> 00:03:04,400
blah model now i want tempo expectations

80
00:03:04,400 --> 00:03:05,040
here

81
00:03:05,040 --> 00:03:08,319
um and say ultimately this

82
00:03:08,319 --> 00:03:10,879
didn't work so i don't want you to sort

83
00:03:10,879 --> 00:03:11,440
of think this is

84
00:03:11,440 --> 00:03:12,640
all building up to something really

85
00:03:12,640 --> 00:03:15,120
exciting and it works unfortunately this

86
00:03:15,120 --> 00:03:16,319
talk isn't that

87
00:03:16,319 --> 00:03:18,400
but the journey is really interesting

88
00:03:18,400 --> 00:03:19,840
and there's some hardware hacks there's

89
00:03:19,840 --> 00:03:21,440
some interesting things to think about

90
00:03:21,440 --> 00:03:21,920
so

91
00:03:21,920 --> 00:03:23,519
i think the journey is interesting

92
00:03:23,519 --> 00:03:25,840
anyway

93
00:03:29,519 --> 00:03:33,040
so i i kind of yellowed a bit here

94
00:03:33,040 --> 00:03:36,400
um so i went on the pioneer website

95
00:03:36,400 --> 00:03:38,159
and i saw that they released a firmware

96
00:03:38,159 --> 00:03:40,560
update image for the serato model

97
00:03:40,560 --> 00:03:42,560
and i thought well you know firmware

98
00:03:42,560 --> 00:03:44,159
that's what i want i want my one to look

99
00:03:44,159 --> 00:03:45,200
like that one

100
00:03:45,200 --> 00:03:47,200
so i downloaded the firmware it was only

101
00:03:47,200 --> 00:03:48,640
you know it's pretty small it's just a

102
00:03:48,640 --> 00:03:49,840
pretty simple

103
00:03:49,840 --> 00:03:52,959
device and it comes with an updated tool

104
00:03:52,959 --> 00:03:54,000
for windows

105
00:03:54,000 --> 00:03:56,159
which is just an executable and a dll i

106
00:03:56,159 --> 00:03:57,040
thought well

107
00:03:57,040 --> 00:03:58,720
why didn't i just pretend to be the

108
00:03:58,720 --> 00:04:00,799
correct model have it spit the firmware

109
00:04:00,799 --> 00:04:04,080
onto my one and maybe magic will happen

110
00:04:04,080 --> 00:04:07,840
it did not so

111
00:04:07,840 --> 00:04:10,000
what i did to trick the updater into

112
00:04:10,000 --> 00:04:12,080
saying hey this is the correct model is

113
00:04:12,080 --> 00:04:13,120
i just

114
00:04:13,120 --> 00:04:15,439
literally bite swapped the the usb

115
00:04:15,439 --> 00:04:16,238
product id

116
00:04:16,238 --> 00:04:17,759
in the dll to say hey this is the

117
00:04:17,759 --> 00:04:19,918
correct one attached it and it started

118
00:04:19,918 --> 00:04:21,759
writing firmware image and i thought

119
00:04:21,759 --> 00:04:22,960
well this is looking really good there's

120
00:04:22,960 --> 00:04:24,880
a progress bar you know it's it's doing

121
00:04:24,880 --> 00:04:25,440
stuff

122
00:04:25,440 --> 00:04:28,320
clearly it's right in the image but but

123
00:04:28,320 --> 00:04:29,600
no it did not work

124
00:04:29,600 --> 00:04:32,800
um when i turned when i turned it back

125
00:04:32,800 --> 00:04:34,800
on i was just presented with a single

126
00:04:34,800 --> 00:04:36,240
flashing led and i thought else doesn't

127
00:04:36,240 --> 00:04:36,960
look good

128
00:04:36,960 --> 00:04:39,280
plugged into the computer and there was

129
00:04:39,280 --> 00:04:40,960
no evidence it was communicating with

130
00:04:40,960 --> 00:04:42,880
the computer so okay

131
00:04:42,880 --> 00:04:46,240
back to the drawing board really um

132
00:04:46,240 --> 00:04:48,479
and that is also when i discovered we're

133
00:04:48,479 --> 00:04:50,240
back on the pioneer website

134
00:04:50,240 --> 00:04:51,759
tried to find the firmware for the model

135
00:04:51,759 --> 00:04:54,240
that i had and it doesn't exist

136
00:04:54,240 --> 00:04:55,680
it doesn't exist on the internet at

137
00:04:55,680 --> 00:04:57,759
least it probably exists on someone's

138
00:04:57,759 --> 00:05:00,479
computer somewhere um and i did this

139
00:05:00,479 --> 00:05:01,919
crazy thing i thought you know when i

140
00:05:01,919 --> 00:05:02,720
just ask

141
00:05:02,720 --> 00:05:04,960
like when i email people and say hey do

142
00:05:04,960 --> 00:05:07,120
you have this firmware and i did that i

143
00:05:07,120 --> 00:05:09,039
i sort of emailed anyone that looks like

144
00:05:09,039 --> 00:05:11,039
a service provider of these

145
00:05:11,039 --> 00:05:14,560
or like repair of these devices um

146
00:05:14,560 --> 00:05:16,320
and i said hey do you have this firmware

147
00:05:16,320 --> 00:05:18,960
and i got kind of a range of

148
00:05:18,960 --> 00:05:22,639
of answers from like a confusion like

149
00:05:22,639 --> 00:05:24,160
why are you asking for this this is

150
00:05:24,160 --> 00:05:25,919
strange to oh yeah we can try and help

151
00:05:25,919 --> 00:05:28,000
you and then ultimately they couldn't

152
00:05:28,000 --> 00:05:32,080
so um i had to spend money

153
00:05:32,080 --> 00:05:34,240
so surprisingly there is this company in

154
00:05:34,240 --> 00:05:36,240
the us called instrumental parts they

155
00:05:36,240 --> 00:05:38,639
sell the individual parts for

156
00:05:38,639 --> 00:05:42,080
the controller and they sell this

157
00:05:42,080 --> 00:05:44,160
part which is the eucom assembly which

158
00:05:44,160 --> 00:05:46,240
has the micro control and all the

159
00:05:46,240 --> 00:05:47,520
interesting bits on it

160
00:05:47,520 --> 00:05:49,280
but it was kind of expensive when you

161
00:05:49,280 --> 00:05:52,160
add when you you when you in zitify it

162
00:05:52,160 --> 00:05:53,919
and you put shipping on top of it

163
00:05:53,919 --> 00:05:55,840
um so it was a bit frustrating you know

164
00:05:55,840 --> 00:05:57,840
i had to i had to spend money

165
00:05:57,840 --> 00:06:02,000
to get it back to a point that it was at

166
00:06:02,000 --> 00:06:03,919
just because i was so impatient and i

167
00:06:03,919 --> 00:06:05,120
just tried things so

168
00:06:05,120 --> 00:06:07,919
kind of the lesson here was just when

169
00:06:07,919 --> 00:06:09,919
you're dealing with a piece of hardware

170
00:06:09,919 --> 00:06:11,360
you know be aware that you could break

171
00:06:11,360 --> 00:06:13,600
it or get it to a point where

172
00:06:13,600 --> 00:06:17,039
um you know it's it's not coming back so

173
00:06:17,039 --> 00:06:19,360
um i kind of learned a lesson here about

174
00:06:19,360 --> 00:06:20,240
being a bit more

175
00:06:20,240 --> 00:06:24,160
methodical when approaching something

176
00:06:24,160 --> 00:06:27,199
so anyway i bought that and i got it and

177
00:06:27,199 --> 00:06:29,759
i installed it and it was working again

178
00:06:29,759 --> 00:06:31,440
so i thought okay let's

179
00:06:31,440 --> 00:06:34,160
let's learn from my mistake and let's

180
00:06:34,160 --> 00:06:35,680
just think about the attack surface of

181
00:06:35,680 --> 00:06:37,199
this device

182
00:06:37,199 --> 00:06:39,759
fundamentally all i'm trying to do is

183
00:06:39,759 --> 00:06:41,840
change the usb information descriptor

184
00:06:41,840 --> 00:06:43,680
information i want to pretend to be

185
00:06:43,680 --> 00:06:47,600
the serato one pretty simple thing right

186
00:06:47,600 --> 00:06:49,440
and there's kind of one really

187
00:06:49,440 --> 00:06:51,039
interesting part of the

188
00:06:51,039 --> 00:06:54,000
um of the controller and it's the usb

189
00:06:54,000 --> 00:06:55,360
like the rest of it is just

190
00:06:55,360 --> 00:06:57,840
audio input microphone output for

191
00:06:57,840 --> 00:06:59,840
speakers you know so it's the usb

192
00:06:59,840 --> 00:07:03,599
that i'm really interested in

193
00:07:03,599 --> 00:07:05,759
so

194
00:07:06,960 --> 00:07:09,198
um

195
00:07:10,080 --> 00:07:12,479
when you plug it into a computer you see

196
00:07:12,479 --> 00:07:14,719
this

197
00:07:15,120 --> 00:07:18,400
and it is just a human interface device

198
00:07:18,400 --> 00:07:20,319
it's just a head device it's just like a

199
00:07:20,319 --> 00:07:21,680
keyboard or a mouse

200
00:07:21,680 --> 00:07:23,680
or whatever it's a pretty simple device

201
00:07:23,680 --> 00:07:25,120
and you'll probably see from there it's

202
00:07:25,120 --> 00:07:26,960
like kind of generic raw device

203
00:07:26,960 --> 00:07:28,400
that is because it's just going to send

204
00:07:28,400 --> 00:07:31,120
the midi over head

205
00:07:31,120 --> 00:07:32,720
there's not really more to it than that

206
00:07:32,720 --> 00:07:36,240
it's a pretty simple device

207
00:07:36,880 --> 00:07:40,560
so this talk is about hardware hacking

208
00:07:40,560 --> 00:07:43,360
so let's talk about some hardware

209
00:07:43,360 --> 00:07:46,800
i opened up the controller it had 6 000

210
00:07:46,800 --> 00:07:48,560
screws holding the bottom on it was just

211
00:07:48,560 --> 00:07:50,639
absolutely nuts and when i opened it up

212
00:07:50,639 --> 00:07:52,319
i was actually pretty shocked to see

213
00:07:52,319 --> 00:07:55,440
how much electronics there is on this

214
00:07:55,440 --> 00:07:56,240
thing right

215
00:07:56,240 --> 00:07:58,960
but if you look at that picture it looks

216
00:07:58,960 --> 00:08:00,319
like there's a lot going on right but

217
00:08:00,319 --> 00:08:00,960
actually fun

218
00:08:00,960 --> 00:08:02,400
there's not really too much we're

219
00:08:02,400 --> 00:08:04,560
interested in there's the two platters

220
00:08:04,560 --> 00:08:05,520
on the side

221
00:08:05,520 --> 00:08:07,919
there's the two smaller boards you can

222
00:08:07,919 --> 00:08:09,360
see in the bottom left and the bottom

223
00:08:09,360 --> 00:08:09,840
right

224
00:08:09,840 --> 00:08:11,919
one is for the audio input staff and one

225
00:08:11,919 --> 00:08:12,960
is for the usb

226
00:08:12,960 --> 00:08:14,400
and the one that i've highlighted is

227
00:08:14,400 --> 00:08:16,160
that yukon assembly

228
00:08:16,160 --> 00:08:17,599
um that's the one that we're really

229
00:08:17,599 --> 00:08:18,960
interested and you can see all the

230
00:08:18,960 --> 00:08:20,879
ribbon cables are going to

231
00:08:20,879 --> 00:08:22,160
to that you know they're all feeding

232
00:08:22,160 --> 00:08:23,599
into that like that is the computer

233
00:08:23,599 --> 00:08:25,759
that's the interesting bit

234
00:08:25,759 --> 00:08:27,120
and we can kind of just like ignore

235
00:08:27,120 --> 00:08:29,840
everything else

236
00:08:30,960 --> 00:08:34,320
so let's zoom in on that a little bit so

237
00:08:34,320 --> 00:08:36,320
on that you com assembly there really

238
00:08:36,320 --> 00:08:38,320
are three chips that we care about there

239
00:08:38,320 --> 00:08:39,919
is the microcontroller which is a

240
00:08:39,919 --> 00:08:40,719
renaissance

241
00:08:40,719 --> 00:08:44,480
m16c uh there is a usb controller made

242
00:08:44,480 --> 00:08:46,480
by texas instruments

243
00:08:46,480 --> 00:08:48,000
that just deals with all the packets

244
00:08:48,000 --> 00:08:49,360
going from the computer to the

245
00:08:49,360 --> 00:08:50,560
microcontroller

246
00:08:50,560 --> 00:08:52,720
and then there is a serial eprom which

247
00:08:52,720 --> 00:08:54,160
is flash which is

248
00:08:54,160 --> 00:08:55,920
about eight kilobytes in size it's

249
00:08:55,920 --> 00:08:57,680
pretty small and at this point i'm

250
00:08:57,680 --> 00:08:59,839
thinking what is the serial eprom for

251
00:08:59,839 --> 00:09:03,279
and we'll get into that in a moment but

252
00:09:03,279 --> 00:09:04,640
before i do that i just want to

253
00:09:04,640 --> 00:09:06,320
highlight this

254
00:09:06,320 --> 00:09:08,959
really really really excellent talk that

255
00:09:08,959 --> 00:09:10,080
i stumbled across

256
00:09:10,080 --> 00:09:12,000
when i was looking at this because it's

257
00:09:12,000 --> 00:09:14,640
the same microcontroller the m16c

258
00:09:14,640 --> 00:09:17,600
um they talked about bypassing the

259
00:09:17,600 --> 00:09:19,360
password on a toshiba

260
00:09:19,360 --> 00:09:21,839
the bios password on a toshiba laptop

261
00:09:21,839 --> 00:09:23,920
but they found really interesting stuff

262
00:09:23,920 --> 00:09:27,600
like a timing attack in the bootloader

263
00:09:27,600 --> 00:09:28,959
of the m16c

264
00:09:28,959 --> 00:09:31,120
that lets you recover there's a seven

265
00:09:31,120 --> 00:09:32,000
byte

266
00:09:32,000 --> 00:09:33,839
unlock code to read the flash from the

267
00:09:33,839 --> 00:09:35,120
microcontroller

268
00:09:35,120 --> 00:09:37,519
and so they went to real real depths

269
00:09:37,519 --> 00:09:39,920
understanding how the m16c works

270
00:09:39,920 --> 00:09:42,000
how to attack it so i highly recommend

271
00:09:42,000 --> 00:09:43,040
if you're interested

272
00:09:43,040 --> 00:09:46,240
in embedded devices etc have a read

273
00:09:46,240 --> 00:09:47,519
through their log have a read through

274
00:09:47,519 --> 00:09:49,120
their slides it was really excellent

275
00:09:49,120 --> 00:09:50,080
piece of of

276
00:09:50,080 --> 00:09:52,480
hacking

277
00:09:53,760 --> 00:09:55,760
so now that i know the components that

278
00:09:55,760 --> 00:09:57,440
i'm dealing with the three the

279
00:09:57,440 --> 00:09:58,880
microcontroller the usb

280
00:09:58,880 --> 00:10:02,959
controller and the eprom the the thing

281
00:10:02,959 --> 00:10:04,720
kind of to approach next is like let's

282
00:10:04,720 --> 00:10:05,920
find the data sheets for these

283
00:10:05,920 --> 00:10:07,200
components and

284
00:10:07,200 --> 00:10:08,720
as you can see from my professionally

285
00:10:08,720 --> 00:10:10,240
made scrolling gif

286
00:10:10,240 --> 00:10:12,240
data sheets are complex right they're

287
00:10:12,240 --> 00:10:14,320
long they're lots of pages and you think

288
00:10:14,320 --> 00:10:16,720
like you know i'm not an engineer what

289
00:10:16,720 --> 00:10:18,800
does this all mean and the simple fact

290
00:10:18,800 --> 00:10:20,000
of the matter is

291
00:10:20,000 --> 00:10:22,880
most of it is irrelevant for you if

292
00:10:22,880 --> 00:10:24,560
you're hacking the device

293
00:10:24,560 --> 00:10:26,880
and the real key is to find the

294
00:10:26,880 --> 00:10:28,320
interesting bits

295
00:10:28,320 --> 00:10:30,480
to to pull out those bits and not be

296
00:10:30,480 --> 00:10:31,360
overwhelming

297
00:10:31,360 --> 00:10:32,880
much in the same way as the the

298
00:10:32,880 --> 00:10:34,880
circuitry seems really overwhelming

299
00:10:34,880 --> 00:10:36,399
there's lots going on

300
00:10:36,399 --> 00:10:38,399
um data sheets can be really

301
00:10:38,399 --> 00:10:40,079
overwhelming but

302
00:10:40,079 --> 00:10:43,120
um let's have a look at the usb

303
00:10:43,120 --> 00:10:44,800
controller data sheet first

304
00:10:44,800 --> 00:10:46,240
i've pulled out the bits that i think

305
00:10:46,240 --> 00:10:47,839
are really important

306
00:10:47,839 --> 00:10:50,959
so um firstly

307
00:10:50,959 --> 00:10:54,079
it mentions is 8k

308
00:10:54,079 --> 00:10:58,880
flash on usb controller it loads

309
00:10:58,880 --> 00:11:01,680
sorry 4k flash that loads has a program

310
00:11:01,680 --> 00:11:02,959
that loads

311
00:11:02,959 --> 00:11:06,000
8k off and eat prom well we know we have

312
00:11:06,000 --> 00:11:07,519
an eat prom so

313
00:11:07,519 --> 00:11:08,959
that has now answered the question of

314
00:11:08,959 --> 00:11:10,720
what is the eproms purpose

315
00:11:10,720 --> 00:11:12,959
on the board and the purpose is to be

316
00:11:12,959 --> 00:11:15,120
the program that gets loaded by the usb

317
00:11:15,120 --> 00:11:16,079
controller

318
00:11:16,079 --> 00:11:17,680
the usb controller is the bit we're

319
00:11:17,680 --> 00:11:19,920
interested in because we want to fake

320
00:11:19,920 --> 00:11:22,000
the product id so we want to change that

321
00:11:22,000 --> 00:11:23,920
program so we're definitely looking at

322
00:11:23,920 --> 00:11:26,800
the right place here

323
00:11:26,800 --> 00:11:28,240
and you can see in the last picture

324
00:11:28,240 --> 00:11:30,320
there it actually reads the vendor id

325
00:11:30,320 --> 00:11:32,560
product id that's the usb descriptor

326
00:11:32,560 --> 00:11:34,320
information so all of that

327
00:11:34,320 --> 00:11:37,040
information is being set by data

328
00:11:37,040 --> 00:11:40,000
retrieved off our

329
00:11:40,839 --> 00:11:43,519
eeprom so let's have a look at the

330
00:11:43,519 --> 00:11:45,920
the eeprom data sheet next now it's also

331
00:11:45,920 --> 00:11:47,040
really really long

332
00:11:47,040 --> 00:11:48,320
but i pulled out the one piece of

333
00:11:48,320 --> 00:11:49,680
information i think is the most

334
00:11:49,680 --> 00:11:51,519
important and that's the pin layer of

335
00:11:51,519 --> 00:11:51,920
the

336
00:11:51,920 --> 00:11:53,839
of the chip because we're going to want

337
00:11:53,839 --> 00:11:55,680
to read it get a dump of it

338
00:11:55,680 --> 00:11:58,079
change it just a little bit and then

339
00:11:58,079 --> 00:11:59,440
write that back so we're going to need

340
00:11:59,440 --> 00:12:00,720
to know what the pin layout is

341
00:12:00,720 --> 00:12:02,240
and as you can see it's pretty basic

342
00:12:02,240 --> 00:12:03,760
there's only eight pins

343
00:12:03,760 --> 00:12:07,920
you know some data pins power ground etc

344
00:12:07,920 --> 00:12:10,800
yeah an important um thing to mention

345
00:12:10,800 --> 00:12:11,200
with

346
00:12:11,200 --> 00:12:12,560
with these chips is if you're looking

347
00:12:12,560 --> 00:12:14,000
for pin one you're wondering where is

348
00:12:14,000 --> 00:12:14,560
pin

349
00:12:14,560 --> 00:12:16,800
one you might be looking at a a picture

350
00:12:16,800 --> 00:12:18,399
like in the data sheet

351
00:12:18,399 --> 00:12:21,360
pin one is often identified by some type

352
00:12:21,360 --> 00:12:23,519
of marking usually like a little circle

353
00:12:23,519 --> 00:12:24,880
you can see that's highlighted in the

354
00:12:24,880 --> 00:12:27,040
red so just look for that

355
00:12:27,040 --> 00:12:29,040
that's a good place to good place to

356
00:12:29,040 --> 00:12:30,480
start

357
00:12:30,480 --> 00:12:33,200
and i also did get quite lucky here um

358
00:12:33,200 --> 00:12:34,880
if you search online there are actually

359
00:12:34,880 --> 00:12:36,800
service manuals for these two models

360
00:12:36,800 --> 00:12:38,079
online i have no idea

361
00:12:38,079 --> 00:12:40,000
why maybe one of these service repair

362
00:12:40,000 --> 00:12:43,440
people uploaded it to the internet

363
00:12:43,440 --> 00:12:45,440
so that was kind of helpful and i asked

364
00:12:45,440 --> 00:12:47,200
answered some questions about the dj

365
00:12:47,200 --> 00:12:49,760
controller for example this mode here

366
00:12:49,760 --> 00:12:51,519
hold down a couple buttons the function

367
00:12:51,519 --> 00:12:53,279
button the loop out button

368
00:12:53,279 --> 00:12:54,639
and the bootloader will then be

369
00:12:54,639 --> 00:12:57,360
instructed to copy its contents of the

370
00:12:57,360 --> 00:13:00,399
the eprom well what would be on the

371
00:13:00,399 --> 00:13:01,440
apron the usb

372
00:13:01,440 --> 00:13:03,600
program back on to the eprom my

373
00:13:03,600 --> 00:13:04,880
understanding is it's a bit of a

374
00:13:04,880 --> 00:13:06,560
recovery mode like if you mess up the

375
00:13:06,560 --> 00:13:07,519
eprom

376
00:13:07,519 --> 00:13:09,519
um you can kind of recover it by copying

377
00:13:09,519 --> 00:13:10,720
the data back across

378
00:13:10,720 --> 00:13:13,760
that was interesting to know and also

379
00:13:13,760 --> 00:13:15,519
there's this picture here on the right

380
00:13:15,519 --> 00:13:17,440
which has the micro controller the usb

381
00:13:17,440 --> 00:13:18,880
controller and the eeprom

382
00:13:18,880 --> 00:13:20,320
all sitting next to each other and we

383
00:13:20,320 --> 00:13:21,760
can see that they're all talking to each

384
00:13:21,760 --> 00:13:22,560
other over i

385
00:13:22,560 --> 00:13:24,720
squared c so that answers the question

386
00:13:24,720 --> 00:13:26,000
well how are these components

387
00:13:26,000 --> 00:13:27,760
actually talking to each other and we'll

388
00:13:27,760 --> 00:13:31,200
go into that in a sec

389
00:13:31,200 --> 00:13:34,320
what is i squared c i squared c is a

390
00:13:34,320 --> 00:13:36,320
serial communication protocol

391
00:13:36,320 --> 00:13:39,360
like sbi um

392
00:13:39,360 --> 00:13:41,519
it's often used for that kind of short

393
00:13:41,519 --> 00:13:43,360
range communication so

394
00:13:43,360 --> 00:13:45,760
in this instance between components on a

395
00:13:45,760 --> 00:13:46,880
board

396
00:13:46,880 --> 00:13:49,040
it's a master slave configuration so you

397
00:13:49,040 --> 00:13:51,199
give multiple slaves up to a thousand or

398
00:13:51,199 --> 00:13:52,160
whatever

399
00:13:52,160 --> 00:13:55,279
um and it's quite nice in that it's

400
00:13:55,279 --> 00:13:56,720
really simple it's only got two pins

401
00:13:56,720 --> 00:13:58,000
it's got a data pin

402
00:13:58,000 --> 00:14:02,160
and a clock pin and

403
00:14:02,160 --> 00:14:04,240
as opposed to spi that has quite a few

404
00:14:04,240 --> 00:14:05,279
pins of

405
00:14:05,279 --> 00:14:07,120
six or eight or something like that it's

406
00:14:07,120 --> 00:14:08,639
a bit more complex

407
00:14:08,639 --> 00:14:12,720
um and it's also an open drain which

408
00:14:12,720 --> 00:14:16,000
means that the signal uh sits high and a

409
00:14:16,000 --> 00:14:18,800
component on the la on the bus can pull

410
00:14:18,800 --> 00:14:19,839
the signal

411
00:14:19,839 --> 00:14:22,240
low but it cannot drive it higher which

412
00:14:22,240 --> 00:14:23,199
means

413
00:14:23,199 --> 00:14:25,440
that multiple components can sit on the

414
00:14:25,440 --> 00:14:26,240
bus at once

415
00:14:26,240 --> 00:14:28,959
but only one can talk at once because

416
00:14:28,959 --> 00:14:30,320
when it's been pulled low

417
00:14:30,320 --> 00:14:33,519
you can't pull it low again obviously

418
00:14:33,519 --> 00:14:35,360
and so that's how you can have multiple

419
00:14:35,360 --> 00:14:36,800
devices on the same bus

420
00:14:36,800 --> 00:14:39,920
communicating with only two pins they

421
00:14:39,920 --> 00:14:41,199
don't have to talk about how when

422
00:14:41,199 --> 00:14:42,800
they're going to talk

423
00:14:42,800 --> 00:14:46,000
they just pull the signal low

424
00:14:46,560 --> 00:14:49,279
so i connect it up to the pins on the

425
00:14:49,279 --> 00:14:50,320
the eeprom

426
00:14:50,320 --> 00:14:52,560
um some people may recognize these kind

427
00:14:52,560 --> 00:14:54,320
of connectors they just like you pull it

428
00:14:54,320 --> 00:14:55,040
back

429
00:14:55,040 --> 00:14:56,880
and it's just some kind of middle teeth

430
00:14:56,880 --> 00:14:58,720
that go around the pen

431
00:14:58,720 --> 00:15:00,320
especially when you're dealing with a

432
00:15:00,320 --> 00:15:03,760
chip that has the pens on the outside

433
00:15:03,760 --> 00:15:05,519
you can potentially you know just clip

434
00:15:05,519 --> 00:15:06,880
onto them rather than doing more

435
00:15:06,880 --> 00:15:08,399
destructive things

436
00:15:08,399 --> 00:15:10,240
an alternative approach would be for

437
00:15:10,240 --> 00:15:12,079
example like a chip off

438
00:15:12,079 --> 00:15:14,000
where you get a heat gun you point it at

439
00:15:14,000 --> 00:15:16,240
the chip you desolder the solder under

440
00:15:16,240 --> 00:15:17,839
the pads and you actually pull the chip

441
00:15:17,839 --> 00:15:18,720
completely off

442
00:15:18,720 --> 00:15:20,639
which is obviously more risky you know

443
00:15:20,639 --> 00:15:22,320
you might damage other components on the

444
00:15:22,320 --> 00:15:23,279
board so

445
00:15:23,279 --> 00:15:25,199
if you can i'd say you know attempt to

446
00:15:25,199 --> 00:15:27,120
clip onto existing pins if they're

447
00:15:27,120 --> 00:15:28,240
accessible

448
00:15:28,240 --> 00:15:31,040
um but sometimes they're not for example

449
00:15:31,040 --> 00:15:32,079
bga is

450
00:15:32,079 --> 00:15:35,360
you know the balls are under the chip um

451
00:15:35,360 --> 00:15:37,440
and also it's something to be aware of

452
00:15:37,440 --> 00:15:38,880
if you leave a chip on a board and

453
00:15:38,880 --> 00:15:40,000
you're trying to communicate

454
00:15:40,000 --> 00:15:42,480
with it when you when you power the chip

455
00:15:42,480 --> 00:15:44,560
you know you supply some voltage to vcc

456
00:15:44,560 --> 00:15:45,920
you might find that it actually powers

457
00:15:45,920 --> 00:15:47,839
other components on the board

458
00:15:47,839 --> 00:15:49,920
which make you unable to communicate

459
00:15:49,920 --> 00:15:51,360
with it because they interrupt with each

460
00:15:51,360 --> 00:15:52,720
other

461
00:15:52,720 --> 00:15:56,320
i've seen people for example pulling off

462
00:15:56,320 --> 00:15:59,040
the vcc pin from the board just slightly

463
00:15:59,040 --> 00:16:00,880
just so it's off the board

464
00:16:00,880 --> 00:16:03,519
and then powering the chip that's an

465
00:16:03,519 --> 00:16:05,199
option but again it's risky just like

466
00:16:05,199 --> 00:16:07,440
taking the chip off

467
00:16:07,440 --> 00:16:10,959
but it's it's worthwhile considering um

468
00:16:10,959 --> 00:16:12,480
and something else i wanted to point out

469
00:16:12,480 --> 00:16:14,720
here was the reader here on the

470
00:16:14,720 --> 00:16:17,920
on the left here so the first thing that

471
00:16:17,920 --> 00:16:19,040
i did was

472
00:16:19,040 --> 00:16:22,079
kind of sniff the i squared c data

473
00:16:22,079 --> 00:16:24,800
that was going over over the bus so

474
00:16:24,800 --> 00:16:27,040
rather than completely read the chip

475
00:16:27,040 --> 00:16:28,880
i just kind of wanted to sit on the pins

476
00:16:28,880 --> 00:16:30,959
of the chip and just

477
00:16:30,959 --> 00:16:33,759
have activity happen and just like sniff

478
00:16:33,759 --> 00:16:35,040
the

479
00:16:35,040 --> 00:16:37,040
capture the the data as it was going

480
00:16:37,040 --> 00:16:39,519
across the bus with a logic analyzer

481
00:16:39,519 --> 00:16:41,120
uh the one thing to point out here is

482
00:16:41,120 --> 00:16:42,959
like you see it's open drain

483
00:16:42,959 --> 00:16:44,639
so you're going to want to configure a

484
00:16:44,639 --> 00:16:46,480
logic analyzer to look for the falling

485
00:16:46,480 --> 00:16:47,920
edge of the signal

486
00:16:47,920 --> 00:16:50,639
um usually you know it's it's rising

487
00:16:50,639 --> 00:16:51,199
edge

488
00:16:51,199 --> 00:16:53,199
um is that kind of default and the other

489
00:16:53,199 --> 00:16:54,560
thing that i found was

490
00:16:54,560 --> 00:16:56,399
you know the the import the the end

491
00:16:56,399 --> 00:16:57,920
result is you get something that looks

492
00:16:57,920 --> 00:16:59,279
like the picture there

493
00:16:59,279 --> 00:17:01,600
um but i don't know like if that's not

494
00:17:01,600 --> 00:17:03,040
super meaningful to me it's you know

495
00:17:03,040 --> 00:17:04,480
some bites in the neck or

496
00:17:04,480 --> 00:17:06,000
some more bites you know really i want

497
00:17:06,000 --> 00:17:08,240
to see some raw data that i can

498
00:17:08,240 --> 00:17:11,439
compare with with other raw data um i

499
00:17:11,439 --> 00:17:14,240
found this script here it's pretty um

500
00:17:14,240 --> 00:17:16,079
really good python script called we

501
00:17:16,079 --> 00:17:17,679
cause it sniff from um

502
00:17:17,679 --> 00:17:20,480
it just takes the capture you know like

503
00:17:20,480 --> 00:17:21,679
the picture

504
00:17:21,679 --> 00:17:23,839
which i think outputs a csv tunes into a

505
00:17:23,839 --> 00:17:26,319
raw uh binary that you can kind of

506
00:17:26,319 --> 00:17:28,079
actually do stuff with so

507
00:17:28,079 --> 00:17:29,440
that was that was really good and

508
00:17:29,440 --> 00:17:32,240
comparing that um so the

509
00:17:32,240 --> 00:17:34,799
um the raw binary it spit out is on the

510
00:17:34,799 --> 00:17:35,520
left

511
00:17:35,520 --> 00:17:37,919
and then the downloaded firmware image

512
00:17:37,919 --> 00:17:39,840
is on the right so

513
00:17:39,840 --> 00:17:41,280
it's you know you can kind of see that

514
00:17:41,280 --> 00:17:43,120
they're pretty much the same

515
00:17:43,120 --> 00:17:45,520
so at least i know i'm looking in the

516
00:17:45,520 --> 00:17:47,440
right place

517
00:17:47,440 --> 00:17:49,200
now the next thing that i did was was

518
00:17:49,200 --> 00:17:52,600
used this 24 series

519
00:17:52,600 --> 00:17:56,240
ch34 one

520
00:17:56,240 --> 00:17:58,880
programmer that will let me just talk i

521
00:17:58,880 --> 00:17:59,679
squared c

522
00:17:59,679 --> 00:18:01,520
to the chip and get a full read from the

523
00:18:01,520 --> 00:18:03,600
start of the chip to the end of the chip

524
00:18:03,600 --> 00:18:05,120
really simple to use i mean you just

525
00:18:05,120 --> 00:18:06,720
connect up the pins

526
00:18:06,720 --> 00:18:08,720
read it and the the key thing to mention

527
00:18:08,720 --> 00:18:10,320
here is just if you're going to write

528
00:18:10,320 --> 00:18:11,919
data to the chip just make sure you

529
00:18:11,919 --> 00:18:14,559
erase it first or you'll get all sorts

530
00:18:14,559 --> 00:18:17,280
of garbage at the other end

531
00:18:17,280 --> 00:18:20,880
now comparing the the sniff data with

532
00:18:20,880 --> 00:18:22,960
the doing the full read this kind of

533
00:18:22,960 --> 00:18:24,960
highlights that

534
00:18:24,960 --> 00:18:26,799
the data you see going across the bus is

535
00:18:26,799 --> 00:18:28,000
not necessarily just

536
00:18:28,000 --> 00:18:30,960
the entirety of the chip so um they're

537
00:18:30,960 --> 00:18:32,320
very similar you can see a whole bunch

538
00:18:32,320 --> 00:18:34,799
of f's at the end that's the unused area

539
00:18:34,799 --> 00:18:36,880
that was captured in the full dump

540
00:18:36,880 --> 00:18:39,600
um so they're similar but not the same

541
00:18:39,600 --> 00:18:40,480
and it just just

542
00:18:40,480 --> 00:18:41,679
sort of highlights the difference

543
00:18:41,679 --> 00:18:44,000
between reading a chip and seeing

544
00:18:44,000 --> 00:18:46,000
what's being sent between components on

545
00:18:46,000 --> 00:18:48,480
the board

546
00:18:49,280 --> 00:18:52,080
so i would recommend if you're going to

547
00:18:52,080 --> 00:18:52,880
mess with

548
00:18:52,880 --> 00:18:54,240
data that you don't really understand

549
00:18:54,240 --> 00:18:56,799
it's just kind of raw binary data

550
00:18:56,799 --> 00:18:59,120
um i would always recommend just

551
00:18:59,120 --> 00:19:00,000
changing one

552
00:19:00,000 --> 00:19:02,640
byte you know if you make a big change

553
00:19:02,640 --> 00:19:04,240
more could go wrong you change just one

554
00:19:04,240 --> 00:19:04,880
byte

555
00:19:04,880 --> 00:19:07,200
especially one byte of a string you know

556
00:19:07,200 --> 00:19:08,880
and a string that gets output somewhere

557
00:19:08,880 --> 00:19:10,000
that you can read

558
00:19:10,000 --> 00:19:11,919
that just helps answer the question am i

559
00:19:11,919 --> 00:19:14,240
doing this right is it working

560
00:19:14,240 --> 00:19:17,760
so i opted to change the p to b so

561
00:19:17,760 --> 00:19:20,080
p became b and when it connected up to

562
00:19:20,080 --> 00:19:20,799
the computer

563
00:19:20,799 --> 00:19:24,080
it became bioneer controller so when i

564
00:19:24,080 --> 00:19:24,720
plugged it in

565
00:19:24,720 --> 00:19:27,360
it worked all good and i was i was happy

566
00:19:27,360 --> 00:19:28,640
that i could

567
00:19:28,640 --> 00:19:31,039
make a change to the donald neat prom

568
00:19:31,039 --> 00:19:32,720
rewrite that

569
00:19:32,720 --> 00:19:35,200
to the chip plug the controller in and

570
00:19:35,200 --> 00:19:36,840
now it's a bioneer

571
00:19:36,840 --> 00:19:39,200
so now i can start thinking about sort

572
00:19:39,200 --> 00:19:40,080
of changing

573
00:19:40,080 --> 00:19:42,000
other areas of the data which i'm which

574
00:19:42,000 --> 00:19:44,880
may not be immediately visible

575
00:19:44,880 --> 00:19:49,840
so really to to kind of do that test was

576
00:19:49,840 --> 00:19:52,480
change the the usb pid value the product

577
00:19:52,480 --> 00:19:52,880
id

578
00:19:52,880 --> 00:19:54,799
and again are so close to each other

579
00:19:54,799 --> 00:19:55,919
it's a it's a b

580
00:19:55,919 --> 00:19:57,760
versus a c kind of thing so it's a one

581
00:19:57,760 --> 00:19:59,440
byte swap um

582
00:19:59,440 --> 00:20:01,919
and also i changed all the t's to s's

583
00:20:01,919 --> 00:20:02,720
because

584
00:20:02,720 --> 00:20:04,640
the windows driver for the controller

585
00:20:04,640 --> 00:20:06,400
got really confused when

586
00:20:06,400 --> 00:20:09,919
the product id didn't match the name um

587
00:20:09,919 --> 00:20:12,480
so i went through and changed all those

588
00:20:12,480 --> 00:20:13,760
and

589
00:20:13,760 --> 00:20:15,280
well you already know the spoiler that

590
00:20:15,280 --> 00:20:17,360
it didn't work but

591
00:20:17,360 --> 00:20:20,480
it kind of worked so serato got

592
00:20:20,480 --> 00:20:24,000
a bit confused um and it said hey you've

593
00:20:24,000 --> 00:20:25,120
attached

594
00:20:25,120 --> 00:20:28,400
your you know ddjs3

595
00:20:28,400 --> 00:20:30,640
to the software and the way that serrato

596
00:20:30,640 --> 00:20:32,240
works is the licensing

597
00:20:32,240 --> 00:20:35,360
is if you connect the correct hardware

598
00:20:35,360 --> 00:20:37,679
it's licensed to use so that's why it

599
00:20:37,679 --> 00:20:39,679
says all your hardware activated

600
00:20:39,679 --> 00:20:41,280
but when you look at the logs it goes

601
00:20:41,280 --> 00:20:42,720
yeah i'm connecting to the device and

602
00:20:42,720 --> 00:20:44,640
you get a connection timeout

603
00:20:44,640 --> 00:20:49,360
so it's not worked why not

604
00:20:49,360 --> 00:20:51,679
so i sort of thought well how how do you

605
00:20:51,679 --> 00:20:53,120
troubleshoot this

606
00:20:53,120 --> 00:20:55,280
and the best answer i could come up with

607
00:20:55,280 --> 00:20:56,880
was just we'll just see what packets are

608
00:20:56,880 --> 00:20:58,720
happening across the usb

609
00:20:58,720 --> 00:21:00,480
and i had never actually thought about

610
00:21:00,480 --> 00:21:02,320
it before how do you

611
00:21:02,320 --> 00:21:05,840
look at usb traffic and the answer was

612
00:21:05,840 --> 00:21:06,640
really simple

613
00:21:06,640 --> 00:21:09,679
and the answer was wireshark um you can

614
00:21:09,679 --> 00:21:11,840
wire shark usb it's just it's just like

615
00:21:11,840 --> 00:21:14,240
any network device

616
00:21:14,240 --> 00:21:17,200
and the thing that really stuck out

617
00:21:17,200 --> 00:21:18,640
really highlighted itself to me was

618
00:21:18,640 --> 00:21:19,280
these

619
00:21:19,280 --> 00:21:22,960
midi uh midi system exclusive commands

620
00:21:22,960 --> 00:21:26,159
these sys x messages this is kind of

621
00:21:26,159 --> 00:21:27,120
like

622
00:21:27,120 --> 00:21:29,120
an ex it's an extension of the midi

623
00:21:29,120 --> 00:21:30,159
specification

624
00:21:30,159 --> 00:21:32,480
where manufacturers can create their own

625
00:21:32,480 --> 00:21:34,640
kind of custom messaging it's like

626
00:21:34,640 --> 00:21:36,559
you know you say this you respond with

627
00:21:36,559 --> 00:21:38,080
this it's it's just to

628
00:21:38,080 --> 00:21:40,720
allow manufacturers to do whatever and

629
00:21:40,720 --> 00:21:41,440
as it's

630
00:21:41,440 --> 00:21:45,360
as a as it happens dj software

631
00:21:45,360 --> 00:21:48,799
often uses this um protocol to say

632
00:21:48,799 --> 00:21:51,280
hey what kind of device are you i'm a

633
00:21:51,280 --> 00:21:51,919
blah

634
00:21:51,919 --> 00:21:53,520
and then often they also use it to

635
00:21:53,520 --> 00:21:55,440
configure the user interface so you plug

636
00:21:55,440 --> 00:21:56,720
the dj controller in

637
00:21:56,720 --> 00:21:59,360
you know the knob is off slightly and so

638
00:21:59,360 --> 00:22:00,080
then the ui

639
00:22:00,080 --> 00:22:01,919
changes a little bit to match the the

640
00:22:01,919 --> 00:22:03,679
real world um

641
00:22:03,679 --> 00:22:06,159
but as i discovered my dj controller is

642
00:22:06,159 --> 00:22:07,360
a head device

643
00:22:07,360 --> 00:22:10,159
and it talks midi over the hood but it

644
00:22:10,159 --> 00:22:10,799
does not

645
00:22:10,799 --> 00:22:14,000
talk cis x messages at all so

646
00:22:14,000 --> 00:22:16,240
it kind of i did answer that question

647
00:22:16,240 --> 00:22:18,480
how different are the two

648
00:22:18,480 --> 00:22:23,440
controllers and the answer was quite um

649
00:22:24,480 --> 00:22:26,799
you know what would be my next options

650
00:22:26,799 --> 00:22:28,559
uh maybe

651
00:22:28,559 --> 00:22:30,480
kind of reverse engineer patch the

652
00:22:30,480 --> 00:22:32,240
serato software to

653
00:22:32,240 --> 00:22:34,400
kind of say yeah you you know you got

654
00:22:34,400 --> 00:22:36,080
the right response from the success

655
00:22:36,080 --> 00:22:37,600
messages but i don't know if they

656
00:22:37,600 --> 00:22:39,280
are heavily used in the communication

657
00:22:39,280 --> 00:22:42,240
with the controller i suspect they are

658
00:22:42,240 --> 00:22:44,480
i guess option two is completely write

659
00:22:44,480 --> 00:22:46,159
my own firm become a sort of

660
00:22:46,159 --> 00:22:49,039
embedded device developer write my own

661
00:22:49,039 --> 00:22:50,880
firmware but that seems like a lot of

662
00:22:50,880 --> 00:22:53,360
hard work

663
00:22:53,360 --> 00:22:56,799
and i guess the option that would be my

664
00:22:56,799 --> 00:22:57,840
preferred option

665
00:22:57,840 --> 00:23:00,480
would be is there a device and of course

666
00:23:00,480 --> 00:23:01,039
there are

667
00:23:01,039 --> 00:23:04,240
usb in the middle kind of devices um

668
00:23:04,240 --> 00:23:05,760
is there a device it's going to let me

669
00:23:05,760 --> 00:23:08,080
sit in the middle of the the usb

670
00:23:08,080 --> 00:23:11,039
and respond to this text messages you

671
00:23:11,039 --> 00:23:11,840
know

672
00:23:11,840 --> 00:23:13,520
receive them and then and kind of just

673
00:23:13,520 --> 00:23:15,200
sit in the middle and pretend to be the

674
00:23:15,200 --> 00:23:16,480
right one and just see if you can get it

675
00:23:16,480 --> 00:23:17,919
working that way

676
00:23:17,919 --> 00:23:20,320
it really did highlight to me there's an

677
00:23:20,320 --> 00:23:21,520
interesting

678
00:23:21,520 --> 00:23:23,760
place to be looking at um you know

679
00:23:23,760 --> 00:23:25,520
sitting in the middle of a usb

680
00:23:25,520 --> 00:23:27,360
connection because there's a lot of

681
00:23:27,360 --> 00:23:28,559
trust that

682
00:23:28,559 --> 00:23:30,400
the you know the packers are coming from

683
00:23:30,400 --> 00:23:32,320
the device you know are untempered on

684
00:23:32,320 --> 00:23:33,200
their way

685
00:23:33,200 --> 00:23:35,919
into the computer for a device like that

686
00:23:35,919 --> 00:23:36,240
so

687
00:23:36,240 --> 00:23:38,159
i certainly learned a lot going through

688
00:23:38,159 --> 00:23:39,919
this process around

689
00:23:39,919 --> 00:23:42,000
you dumping chips and getting

690
00:23:42,000 --> 00:23:43,600
comfortable with there and

691
00:23:43,600 --> 00:23:47,120
um but as i said ultimately it didn't

692
00:23:47,120 --> 00:23:48,080
work

693
00:23:48,080 --> 00:23:50,240
and maybe with some more work um you

694
00:23:50,240 --> 00:23:51,520
could get there

695
00:23:51,520 --> 00:23:55,760
um but um hacking a bit of devices

696
00:23:55,760 --> 00:23:58,400
i think area is a good fun you know you

697
00:23:58,400 --> 00:23:59,279
often

698
00:23:59,279 --> 00:24:01,120
start hands-on you're soldering stuff

699
00:24:01,120 --> 00:24:02,720
there's a bit of fear there's a bit of

700
00:24:02,720 --> 00:24:03,520
like

701
00:24:03,520 --> 00:24:04,880
you know confidence that you need to

702
00:24:04,880 --> 00:24:06,720
build there but i think the true

703
00:24:06,720 --> 00:24:09,120
the the reward is is quite quite great

704
00:24:09,120 --> 00:24:10,799
when stuff really works

705
00:24:10,799 --> 00:24:14,400
um so really i do encourage strongly

706
00:24:14,400 --> 00:24:15,679
encourage people

707
00:24:15,679 --> 00:24:18,480
if you've got you know routers or or you

708
00:24:18,480 --> 00:24:20,080
know some cheap electronics at home that

709
00:24:20,080 --> 00:24:21,520
you want to mess around with i highly

710
00:24:21,520 --> 00:24:23,760
encourage you just to give it a go

711
00:24:23,760 --> 00:24:26,559
as i said there is a slack channel there

712
00:24:26,559 --> 00:24:29,279
hardware hacking dot nz

713
00:24:29,279 --> 00:24:30,799
if you're interested in the space or

714
00:24:30,799 --> 00:24:32,799
want to get into the space

715
00:24:32,799 --> 00:24:35,760
um and yeah be prepared to break things

716
00:24:35,760 --> 00:24:36,880
and potentially fix

717
00:24:36,880 --> 00:24:38,880
things you know you might find you know

718
00:24:38,880 --> 00:24:40,640
you tried to solder something or it went

719
00:24:40,640 --> 00:24:42,000
wrong and you broke something

720
00:24:42,000 --> 00:24:43,200
but you know maybe there's just a

721
00:24:43,200 --> 00:24:44,480
resistor that's dead or something you

722
00:24:44,480 --> 00:24:45,600
could replace it so

723
00:24:45,600 --> 00:24:48,000
you find yourself doing repairs you know

724
00:24:48,000 --> 00:24:49,600
um

725
00:24:49,600 --> 00:24:51,840
and also i would recommend you know just

726
00:24:51,840 --> 00:24:53,039
tooling up as well

727
00:24:53,039 --> 00:24:56,799
like um there's a bit of a higher entry

728
00:24:56,799 --> 00:24:58,799
in terms of starting hardware hacking

729
00:24:58,799 --> 00:25:00,159
and that you need a soldering iron

730
00:25:00,159 --> 00:25:01,760
probably a hot air gun maybe a

731
00:25:01,760 --> 00:25:03,120
microscope

732
00:25:03,120 --> 00:25:05,840
you know these stuff they can be

733
00:25:05,840 --> 00:25:06,880
expensive but

734
00:25:06,880 --> 00:25:08,720
you know you jump on aliexpress you

735
00:25:08,720 --> 00:25:10,240
could probably you know get

736
00:25:10,240 --> 00:25:12,000
a handful of things or borrow things off

737
00:25:12,000 --> 00:25:13,760
other people but um

738
00:25:13,760 --> 00:25:17,039
i think it's well worth it you know

739
00:25:17,039 --> 00:25:19,600
also in the hardware hacking space i'd

740
00:25:19,600 --> 00:25:21,360
highly recommend getting to know the

741
00:25:21,360 --> 00:25:22,159
communication

742
00:25:22,159 --> 00:25:25,200
protocols like sbi i squid c also the

743
00:25:25,200 --> 00:25:27,760
debug kind of interfaces like uart

744
00:25:27,760 --> 00:25:29,760
jtag stuff like that they'll be very

745
00:25:29,760 --> 00:25:32,320
common in embedded devices

746
00:25:32,320 --> 00:25:36,400
um also flash i have like i love emmc

747
00:25:36,400 --> 00:25:39,120
flash specifically for some reason but

748
00:25:39,120 --> 00:25:40,559
just sort of understanding how all the

749
00:25:40,559 --> 00:25:42,240
different types of flash work you know

750
00:25:42,240 --> 00:25:43,520
often there's going to be a starting

751
00:25:43,520 --> 00:25:44,559
point you dump

752
00:25:44,559 --> 00:25:45,840
you know firmware that's probably on a

753
00:25:45,840 --> 00:25:48,400
flash image somewhere um

754
00:25:48,400 --> 00:25:50,320
as we saw you know reading the data

755
00:25:50,320 --> 00:25:52,240
sheets really pulling out the

756
00:25:52,240 --> 00:25:53,840
important bits of the data sheets and

757
00:25:53,840 --> 00:25:55,919
not being overwhelmed by the lots of

758
00:25:55,919 --> 00:25:56,880
electronics

759
00:25:56,880 --> 00:25:58,799
not being overwhelmed by the lots of

760
00:25:58,799 --> 00:26:01,919
pages and a data sheet

761
00:26:01,919 --> 00:26:05,840
and yeah just just giving it a go

762
00:26:05,840 --> 00:26:11,840
and that's me thank you very much

763
00:26:22,240 --> 00:26:24,320
you

