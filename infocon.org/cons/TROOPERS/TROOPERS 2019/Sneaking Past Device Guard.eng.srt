1
00:00:00,859 --> 00:00:06,860
welcome to<font color="#E5E5E5"> high</font><font color="#CCCCCC"> block Philip as far as I</font>

2
00:00:04,850 --> 00:00:14,509
know this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> first time</font><font color="#CCCCCC"> it is a</font>

3
00:00:06,860 --> 00:00:16,970
<font color="#CCCCCC">true puss</font><font color="#E5E5E5"> and we had usually</font><font color="#CCCCCC"> in the dnm</font>

4
00:00:14,509 --> 00:00:19,849
track as we say there has have<font color="#E5E5E5"> been</font>

5
00:00:16,970 --> 00:00:21,698
talks on the ice cart<font color="#E5E5E5"> in the past but I</font>

6
00:00:19,849 --> 00:00:28,059
would say this is<font color="#CCCCCC"> the most like</font>

7
00:00:21,699 --> 00:00:32,599
technical one on how to say circumvent

8
00:00:28,059 --> 00:00:34,609
not attack but not<font color="#E5E5E5"> so much like from a</font>

9
00:00:32,598 --> 00:00:37,059
defense<font color="#CCCCCC"> perspective but look at device</font>

10
00:00:34,609 --> 00:00:44,390
<font color="#CCCCCC">guard from</font><font color="#E5E5E5"> an offense perspective and</font>

11
00:00:37,059 --> 00:00:46,819
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> it is</font>

12
00:00:44,390 --> 00:00:49,280
so hi my name<font color="#CCCCCC"> is Philip I do</font><font color="#E5E5E5"> security</font>

13
00:00:46,820 --> 00:00:51,170
research for cyber reason and sometimes

14
00:00:49,280 --> 00:00:52,730
I forget just<font color="#CCCCCC"> how terrified I get of</font>

15
00:00:51,170 --> 00:00:57,379
public<font color="#E5E5E5"> speaking which leads me to</font>

16
00:00:52,730 --> 00:00:59,718
situations such as this so as<font color="#CCCCCC"> you say</font>

17
00:00:57,379 --> 00:01:01,608
this talk<font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be about a feature</font>

18
00:00:59,719 --> 00:01:03,670
<font color="#E5E5E5">called device guard and a couple of ways</font>

19
00:01:01,609 --> 00:01:07,009
<font color="#E5E5E5">to bypass</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> some of those use VBA</font>

20
00:01:03,670 --> 00:01:08,780
<font color="#E5E5E5">styles do not use VBA</font><font color="#CCCCCC"> and actually</font><font color="#E5E5E5"> most</font>

21
00:01:07,009 --> 00:01:11,180
of<font color="#E5E5E5"> them are not recognized by Microsoft</font>

22
00:01:08,780 --> 00:01:13,729
as actual vulnerabilities<font color="#E5E5E5"> but you know</font>

23
00:01:11,180 --> 00:01:15,619
if you have an actual attacker trying to

24
00:01:13,729 --> 00:01:17,869
penetrate<font color="#CCCCCC"> your</font><font color="#E5E5E5"> network they're not gonna</font>

25
00:01:15,619 --> 00:01:20,840
<font color="#E5E5E5">go oh no the hacker code prevents me</font>

26
00:01:17,869 --> 00:01:23,030
from<font color="#E5E5E5"> using these bypasses I mean I need</font>

27
00:01:20,840 --> 00:01:24,950
to<font color="#E5E5E5"> find my</font><font color="#CCCCCC"> own real</font><font color="#E5E5E5"> zero-day and only to</font>

28
00:01:23,030 --> 00:01:26,630
use that<font color="#CCCCCC"> no they're</font><font color="#E5E5E5"> just you know</font>

29
00:01:24,950 --> 00:01:27,079
<font color="#E5E5E5">they're just gonna use whatever is at</font>

30
00:01:26,630 --> 00:01:30,158
hand

31
00:01:27,079 --> 00:01:32,779
so just because<font color="#E5E5E5"> these things are not</font>

32
00:01:30,159 --> 00:01:35,420
vulnerabilities<font color="#CCCCCC"> it does</font><font color="#E5E5E5"> not mean that</font>

33
00:01:32,780 --> 00:01:36,920
you're not vulnerable<font color="#E5E5E5"> to them</font><font color="#CCCCCC"> we'll see</font>

34
00:01:35,420 --> 00:01:38,329
a<font color="#E5E5E5"> couple of other benefits of the</font>

35
00:01:36,920 --> 00:01:40,399
<font color="#CCCCCC">techniques I'm gonna show because</font>

36
00:01:38,329 --> 00:01:43,329
they're not only<font color="#E5E5E5"> device guard bypasses</font>

37
00:01:40,399 --> 00:01:46,130
they're just other<font color="#CCCCCC"> fun stuff</font>

38
00:01:43,329 --> 00:01:47,619
well<font color="#CCCCCC"> write</font><font color="#E5E5E5"> in so let's begin with</font><font color="#CCCCCC"> a</font>

39
00:01:46,130 --> 00:01:50,570
quick intro to device guard and

40
00:01:47,619 --> 00:01:52,399
application whitelisting<font color="#CCCCCC"> all together so</font>

41
00:01:50,570 --> 00:01:55,158
device guard is an<font color="#E5E5E5"> application</font>

42
00:01:52,399 --> 00:01:56,960
whitelisting that was introduced in

43
00:01:55,159 --> 00:02:00,320
<font color="#E5E5E5">Windows 10 and it's actually the</font>

44
00:01:56,960 --> 00:02:03,500
successor of<font color="#CCCCCC"> a different feature called</font>

45
00:02:00,320 --> 00:02:04,070
<font color="#CCCCCC">app Locker now what application</font>

46
00:02:03,500 --> 00:02:06,380
whitelisting

47
00:02:04,070 --> 00:02:09,109
and device<font color="#CCCCCC"> guards specifically tries to</font>

48
00:02:06,380 --> 00:02:11,780
prevent<font color="#E5E5E5"> is to have an attacker execute</font>

49
00:02:09,110 --> 00:02:14,540
arbitrary code on an machine that's

50
00:02:11,780 --> 00:02:17,390
already compromised<font color="#CCCCCC"> it does so by</font>

51
00:02:14,540 --> 00:02:19,849
basically<font color="#E5E5E5"> taking a user admin specified</font>

52
00:02:17,390 --> 00:02:23,029
policy<font color="#E5E5E5"> that could contain stuff like</font>

53
00:02:19,849 --> 00:02:26,510
certificates or hashes names etc<font color="#CCCCCC"> and</font>

54
00:02:23,030 --> 00:02:30,079
saying well if it's not compliant<font color="#E5E5E5"> with</font>

55
00:02:26,510 --> 00:02:33,140
this policy<font color="#E5E5E5"> this code won't run</font><font color="#CCCCCC"> and this</font>

56
00:02:30,079 --> 00:02:36,049
gives us pretty permissive and pretty

57
00:02:33,140 --> 00:02:38,659
<font color="#E5E5E5">interesting threat model because the way</font>

58
00:02:36,049 --> 00:02:40,780
the types<font color="#E5E5E5"> of things you could abuse to</font>

59
00:02:38,659 --> 00:02:43,608
circumvent<font color="#E5E5E5"> device guard are pretty much</font>

60
00:02:40,780 --> 00:02:45,549
anything you can a tably will<font color="#CCCCCC"> you will</font>

61
00:02:43,609 --> 00:02:48,409
natively have on a machine<font color="#CCCCCC"> because</font>

62
00:02:45,549 --> 00:02:50,299
you're<font color="#CCCCCC"> basically already able to execute</font>

63
00:02:48,409 --> 00:02:53,659
<font color="#E5E5E5">commands</font><font color="#CCCCCC"> you're just not able to</font><font color="#E5E5E5"> execute</font>

64
00:02:50,299 --> 00:02:56,389
arbitrary<font color="#E5E5E5"> code so to better define what</font>

65
00:02:53,659 --> 00:02:58,608
<font color="#CCCCCC">isn't a device got bypass will give a</font>

66
00:02:56,389 --> 00:03:00,590
bit more<font color="#E5E5E5"> formal definition of arbitrary</font>

67
00:02:58,609 --> 00:03:02,780
code which at least in this case will<font color="#CCCCCC"> be</font>

68
00:03:00,590 --> 00:03:04,970
the<font color="#CCCCCC"> ability to interact</font><font color="#E5E5E5"> with the</font><font color="#CCCCCC"> us</font>

69
00:03:02,780 --> 00:03:07,940
freely<font color="#E5E5E5"> meaning</font><font color="#CCCCCC"> that you can try to ask</font>

70
00:03:04,970 --> 00:03:09,950
the<font color="#E5E5E5"> u.s. anything and your only</font><font color="#CCCCCC"> problem</font>

71
00:03:07,940 --> 00:03:11,629
is going to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> privilege you may</font><font color="#E5E5E5"> receive</font>

72
00:03:09,950 --> 00:03:15,349
<font color="#CCCCCC">the answer that well you're not allowed</font>

73
00:03:11,629 --> 00:03:18,108
<font color="#CCCCCC">to do this API</font><font color="#E5E5E5"> call or this API call</font>

74
00:03:15,349 --> 00:03:20,209
will fail<font color="#E5E5E5"> but still you will able you</font>

75
00:03:18,109 --> 00:03:21,799
will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to try and the most direct</font>

76
00:03:20,209 --> 00:03:23,629
way to do this is<font color="#CCCCCC"> just having</font><font color="#E5E5E5"> your own</font>

77
00:03:21,799 --> 00:03:26,650
process<font color="#CCCCCC"> and running in the context of</font>

78
00:03:23,629 --> 00:03:29,328
<font color="#E5E5E5">whatever you want and you</font><font color="#CCCCCC"> gain this by</font>

79
00:03:26,650 --> 00:03:31,989
being able to<font color="#E5E5E5"> allocate code and jump to</font>

80
00:03:29,329 --> 00:03:35,180
it or by<font color="#E5E5E5"> being able to execute arbitrary</font>

81
00:03:31,989 --> 00:03:36,799
<font color="#CCCCCC">windows</font><font color="#E5E5E5"> API calls or sis calls and of</font>

82
00:03:35,180 --> 00:03:39,889
course it's<font color="#E5E5E5"> really easy to jump between</font>

83
00:03:36,799 --> 00:03:41,989
<font color="#E5E5E5">those two so you might</font><font color="#CCCCCC"> notice that</font><font color="#E5E5E5"> well</font>

84
00:03:39,889 --> 00:03:45,500
this<font color="#E5E5E5"> looks like everything our</font><font color="#CCCCCC"> C tries</font>

85
00:03:41,989 --> 00:03:47,629
to do but I won't<font color="#E5E5E5"> speak buffer overflows</font>

86
00:03:45,500 --> 00:03:50,329
or anything like<font color="#E5E5E5"> that because well</font>

87
00:03:47,629 --> 00:03:53,569
technically if you can't execute code so

88
00:03:50,329 --> 00:03:56,030
it's a it's a device called bypass but

89
00:03:53,569 --> 00:03:58,638
you know<font color="#CCCCCC"> it's a bit out of scope</font><font color="#E5E5E5"> here so</font>

90
00:03:56,030 --> 00:04:03,440
<font color="#E5E5E5">we'll try to find a bit more let's say</font>

91
00:03:58,639 --> 00:04:06,319
logical flavored bypasses now without

92
00:04:03,440 --> 00:04:08,329
application<font color="#E5E5E5"> while I think arbitrary</font><font color="#CCCCCC"> came</font>

93
00:04:06,319 --> 00:04:10,099
as simply equal arbitrary code so

94
00:04:08,329 --> 00:04:12,199
there's no<font color="#E5E5E5"> need for this formal</font>

95
00:04:10,099 --> 00:04:14,298
definition or whatever because<font color="#E5E5E5"> well you</font>

96
00:04:12,199 --> 00:04:16,039
could run an arbitrary command<font color="#E5E5E5"> so the</font>

97
00:04:14,299 --> 00:04:19,400
way to<font color="#E5E5E5"> run</font><font color="#CCCCCC"> arbitrary code from</font><font color="#E5E5E5"> this is</font>

98
00:04:16,039 --> 00:04:21,260
<font color="#E5E5E5">like launch malware that</font><font color="#CCCCCC"> XE and your</font>

99
00:04:19,399 --> 00:04:23,570
<font color="#E5E5E5">mouth and this file</font><font color="#CCCCCC"> contains your code</font>

100
00:04:21,260 --> 00:04:26,229
and<font color="#CCCCCC"> that's it you have the</font><font color="#E5E5E5"> ability to do</font>

101
00:04:23,570 --> 00:04:29,330
whatever you like<font color="#E5E5E5"> but the moment</font>

102
00:04:26,229 --> 00:04:33,320
application whitelisting goes into

103
00:04:29,330 --> 00:04:36,198
<font color="#E5E5E5">you suddenly have to rely</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> only what's</font>

104
00:04:33,320 --> 00:04:41,000
<font color="#E5E5E5">permitted by</font><font color="#CCCCCC"> the policy</font><font color="#E5E5E5"> and while there</font>

105
00:04:36,199 --> 00:04:43,669
<font color="#E5E5E5">is this whole</font><font color="#CCCCCC"> loeben trend going</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> you</font>

106
00:04:41,000 --> 00:04:47,449
can't really implement things like mini

107
00:04:43,669 --> 00:04:49,250
cats<font color="#E5E5E5"> using only native executables same</font>

108
00:04:47,449 --> 00:04:51,440
thing with command and<font color="#E5E5E5"> control and let's</font>

109
00:04:49,250 --> 00:04:53,810
say that<font color="#E5E5E5"> even if you have like this</font>

110
00:04:51,440 --> 00:04:56,330
<font color="#CCCCCC">really</font><font color="#E5E5E5"> cool privilege escalation</font>

111
00:04:53,810 --> 00:04:58,220
vulnerability you<font color="#CCCCCC"> simply can't run it</font>

112
00:04:56,330 --> 00:05:01,789
because<font color="#CCCCCC"> it will</font><font color="#E5E5E5"> still require your own</font>

113
00:04:58,220 --> 00:05:03,830
code<font color="#CCCCCC"> so this will seriously hinder an</font>

114
00:05:01,789 --> 00:05:05,690
attacker<font color="#E5E5E5"> because if you have like a code</font>

115
00:05:03,830 --> 00:05:07,609
execution vulnerability and you're<font color="#CCCCCC"> able</font>

116
00:05:05,690 --> 00:05:09,650
to<font color="#E5E5E5"> run</font><font color="#CCCCCC"> a process and you're popping</font>

117
00:05:07,610 --> 00:05:12,440
calculators<font color="#E5E5E5"> left and right on your test</font>

118
00:05:09,650 --> 00:05:15,080
machine and you<font color="#E5E5E5"> just could reach your</font>

119
00:05:12,440 --> 00:05:17,000
target machine and find<font color="#E5E5E5"> out that well I</font>

120
00:05:15,080 --> 00:05:21,139
can't pop a calculator but this won't

121
00:05:17,000 --> 00:05:25,610
<font color="#E5E5E5">help me on</font><font color="#CCCCCC"> my target</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> now we</font>

122
00:05:21,139 --> 00:05:27,289
understand why device guard<font color="#CCCCCC"> is extremely</font>

123
00:05:25,610 --> 00:05:31,009
annoying<font color="#CCCCCC"> from an attackers perspective</font>

124
00:05:27,289 --> 00:05:34,250
<font color="#CCCCCC">because well you could circumvent</font><font color="#E5E5E5"> and do</font>

125
00:05:31,009 --> 00:05:36,620
a<font color="#E5E5E5"> bit of malicious activity you under</font>

126
00:05:34,250 --> 00:05:39,770
the<font color="#CCCCCC"> Vice card but it's still</font><font color="#E5E5E5"> not what</font>

127
00:05:36,620 --> 00:05:41,810
you want<font color="#CCCCCC"> and if it's not</font><font color="#E5E5E5"> enough let's</font>

128
00:05:39,770 --> 00:05:44,570
say you have gained the control of<font color="#E5E5E5"> a</font>

129
00:05:41,810 --> 00:05:47,510
single<font color="#CCCCCC"> process</font><font color="#E5E5E5"> it's really easy to cross</font>

130
00:05:44,570 --> 00:05:49,580
<font color="#E5E5E5">a couple of boundaries and again be sort</font>

131
00:05:47,510 --> 00:05:52,010
of diminished into arbitrary command

132
00:05:49,580 --> 00:05:54,830
execution<font color="#E5E5E5"> which we have determined just</font>

133
00:05:52,010 --> 00:05:57,260
sucks<font color="#E5E5E5"> so for example if you want to</font>

134
00:05:54,830 --> 00:05:59,000
persist<font color="#E5E5E5"> on the system almost every</font>

135
00:05:57,260 --> 00:06:00,400
persistence mechanism in Windows lets

136
00:05:59,000 --> 00:06:03,889
you run an arbitrary command

137
00:06:00,400 --> 00:06:05,719
<font color="#E5E5E5">congratulations on calculator</font><font color="#CCCCCC"> same thing</font>

138
00:06:03,889 --> 00:06:07,550
with privilege escalations me and

139
00:06:05,720 --> 00:06:11,080
sandbox escapes many of them allow you

140
00:06:07,550 --> 00:06:13,310
to just<font color="#E5E5E5"> run an orbit</font><font color="#CCCCCC"> recommand so</font>

141
00:06:11,080 --> 00:06:16,310
<font color="#CCCCCC">calculator system or a calculator</font>

142
00:06:13,310 --> 00:06:19,070
<font color="#CCCCCC">outside of your</font><font color="#E5E5E5"> sandbox which is again</font>

143
00:06:16,310 --> 00:06:22,760
<font color="#E5E5E5">not satisfactory and the same thing goes</font>

144
00:06:19,070 --> 00:06:26,300
with lateral<font color="#E5E5E5"> movement so even if you</font>

145
00:06:22,760 --> 00:06:28,070
have somehow<font color="#E5E5E5"> gained control of a single</font>

146
00:06:26,300 --> 00:06:30,919
process<font color="#E5E5E5"> you really need some kind of</font>

147
00:06:28,070 --> 00:06:34,070
reliable device<font color="#E5E5E5"> guard bypass to be able</font>

148
00:06:30,919 --> 00:06:37,479
<font color="#CCCCCC">to always run your code</font><font color="#E5E5E5"> no matter in</font>

149
00:06:34,070 --> 00:06:37,479
which context you are<font color="#E5E5E5"> in</font>

150
00:06:37,820 --> 00:06:42,620
now<font color="#E5E5E5"> the Vice</font><font color="#CCCCCC"> card actually</font><font color="#E5E5E5"> tries to</font>

151
00:06:40,730 --> 00:06:46,070
<font color="#E5E5E5">protect a couple of different contains</font>

152
00:06:42,620 --> 00:06:48,710
containers of code<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> most</font>

153
00:06:46,070 --> 00:06:50,750
direct one is<font color="#E5E5E5"> B files basically you know</font>

154
00:06:48,710 --> 00:06:54,049
<font color="#E5E5E5">these are the blobs of machine</font><font color="#CCCCCC"> code that</font>

155
00:06:50,750 --> 00:06:55,760
<font color="#E5E5E5">you load so if somebody can load an</font>

156
00:06:54,050 --> 00:06:57,620
arbitrary blow the blob of machine code

157
00:06:55,760 --> 00:07:00,740
<font color="#E5E5E5">well they have an arbitrary code</font>

158
00:06:57,620 --> 00:07:03,110
execution of on everybody<font color="#CCCCCC"> and</font><font color="#E5E5E5"> device</font>

159
00:07:00,740 --> 00:07:04,670
<font color="#E5E5E5">guards please so if it's not</font><font color="#CCCCCC"> whitelisted</font>

160
00:07:03,110 --> 00:07:07,160
it won't execute<font color="#E5E5E5"> it's pretty</font>

161
00:07:04,670 --> 00:07:09,350
<font color="#CCCCCC">straightforward</font><font color="#E5E5E5"> but there are a bit</font>

162
00:07:07,160 --> 00:07:11,300
subtler ways device guard protects

163
00:07:09,350 --> 00:07:13,610
against arbitrary execution and these

164
00:07:11,300 --> 00:07:18,500
find themselves in<font color="#CCCCCC"> PowerShell and</font><font color="#E5E5E5"> active</font>

165
00:07:13,610 --> 00:07:21,800
script engines<font color="#E5E5E5"> in PowerShell you could</font>

166
00:07:18,500 --> 00:07:25,430
actually execute<font color="#CCCCCC"> a non signed</font>

167
00:07:21,800 --> 00:07:26,930
<font color="#E5E5E5">unpermitted script but this will execute</font>

168
00:07:25,430 --> 00:07:28,790
in what's called<font color="#E5E5E5"> constrained language</font>

169
00:07:26,930 --> 00:07:32,030
mode which allows<font color="#CCCCCC"> only very specific</font>

170
00:07:28,790 --> 00:07:36,800
restricted types and non whitelisted

171
00:07:32,030 --> 00:07:39,260
scripts<font color="#E5E5E5"> meaning that your whole</font><font color="#CCCCCC"> 2-day</font>

172
00:07:36,800 --> 00:07:41,720
<font color="#CCCCCC">powershell course becomes a bit useless</font>

173
00:07:39,260 --> 00:07:43,969
when you can't use any<font color="#CCCCCC"> of the tricks</font>

174
00:07:41,720 --> 00:07:45,590
you've been taught so you need to

175
00:07:43,970 --> 00:07:47,330
somehow circumvent this to be able<font color="#CCCCCC"> to</font>

176
00:07:45,590 --> 00:07:48,289
<font color="#E5E5E5">again do whatever you want on the</font>

177
00:07:47,330 --> 00:07:50,120
machine

178
00:07:48,290 --> 00:07:52,370
same thing happens with active script

179
00:07:50,120 --> 00:07:54,830
engines which are the engines<font color="#CCCCCC"> that</font>

180
00:07:52,370 --> 00:07:57,170
implement<font color="#CCCCCC"> a script and VB script etc</font>

181
00:07:54,830 --> 00:07:59,240
these communicate with the operating

182
00:07:57,170 --> 00:08:01,750
<font color="#E5E5E5">system</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> much only through calm</font>

183
00:07:59,240 --> 00:08:03,820
objects and when<font color="#E5E5E5"> you run an</font>

184
00:08:01,750 --> 00:08:07,160
non-permitted

185
00:08:03,820 --> 00:08:09,680
<font color="#E5E5E5">active script script you basically only</font>

186
00:08:07,160 --> 00:08:12,200
get a very restricted set of<font color="#CCCCCC"> comm</font>

187
00:08:09,680 --> 00:08:16,880
<font color="#CCCCCC">objects--</font><font color="#E5E5E5"> so you can't use stuff like W</font>

188
00:08:12,200 --> 00:08:19,400
script shell or<font color="#E5E5E5"> today like the latest</font>

189
00:08:16,880 --> 00:08:21,050
trendy way to achieve full arbitrary

190
00:08:19,400 --> 00:08:23,330
execution using active script which is

191
00:08:21,050 --> 00:08:26,300
<font color="#CCCCCC">dog</font><font color="#E5E5E5"> native jscript you're restricted</font><font color="#CCCCCC"> to</font>

192
00:08:23,330 --> 00:08:29,690
stuff like<font color="#E5E5E5"> scripting dictionary so you</font>

193
00:08:26,300 --> 00:08:31,910
could you know<font color="#CCCCCC"> enter strings into a hash</font>

194
00:08:29,690 --> 00:08:37,490
table<font color="#E5E5E5"> which will immensely help you and</font>

195
00:08:31,910 --> 00:08:40,040
your red team operation<font color="#CCCCCC"> now this is a</font>

196
00:08:37,490 --> 00:08:41,630
bit of a visual<font color="#E5E5E5"> example of device guard</font>

197
00:08:40,039 --> 00:08:43,610
I'm trying to run unsigned<font color="#CCCCCC"> at eggsy</font>

198
00:08:41,630 --> 00:08:45,980
<font color="#E5E5E5">instead of execution I'm just having</font>

199
00:08:43,610 --> 00:08:47,900
this pretty blue pop up with a really

200
00:08:45,980 --> 00:08:49,580
neat<font color="#E5E5E5"> a</font><font color="#CCCCCC"> copy to clipboard feature which</font>

201
00:08:47,900 --> 00:08:50,970
is a really<font color="#E5E5E5"> nice addition</font><font color="#CCCCCC"> into Windows</font>

202
00:08:49,580 --> 00:08:57,450
10

203
00:08:50,970 --> 00:09:00,990
yeah so<font color="#E5E5E5"> device code actually tries to be</font>

204
00:08:57,450 --> 00:09:01,980
user agnostic<font color="#E5E5E5"> this means that unlike</font><font color="#CCCCCC"> the</font>

205
00:09:00,990 --> 00:09:04,500
older<font color="#E5E5E5"> AppLocker</font>

206
00:09:01,980 --> 00:09:06,030
if you have device guard<font color="#E5E5E5"> on</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> on for</font>

207
00:09:04,500 --> 00:09:09,360
everybody<font color="#CCCCCC"> and it's pretty</font><font color="#E5E5E5"> much the same</font>

208
00:09:06,030 --> 00:09:13,680
<font color="#E5E5E5">for</font><font color="#CCCCCC"> everybody</font><font color="#E5E5E5"> but administrators could</font>

209
00:09:09,360 --> 00:09:16,020
disable<font color="#CCCCCC"> device card</font><font color="#E5E5E5"> and yet this</font>

210
00:09:13,680 --> 00:09:19,290
requires a restart<font color="#E5E5E5"> this throws a pretty</font>

211
00:09:16,020 --> 00:09:21,689
nasty<font color="#E5E5E5"> event</font><font color="#CCCCCC"> log so if you've taken the</font>

212
00:09:19,290 --> 00:09:24,240
effort<font color="#CCCCCC"> to implement device guard in your</font>

213
00:09:21,690 --> 00:09:26,550
<font color="#CCCCCC">environment</font><font color="#E5E5E5"> you should</font><font color="#CCCCCC"> see like device</font>

214
00:09:24,240 --> 00:09:30,270
guard<font color="#E5E5E5"> going off as a pretty strong</font>

215
00:09:26,550 --> 00:09:32,670
<font color="#E5E5E5">signal that something went wrong so if</font>

216
00:09:30,270 --> 00:09:33,000
you're not<font color="#CCCCCC"> doing this</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a huge</font>

217
00:09:32,670 --> 00:09:34,860
mistake

218
00:09:33,000 --> 00:09:37,410
<font color="#CCCCCC">if you are doing</font><font color="#E5E5E5"> this you</font><font color="#CCCCCC"> basically and</font>

219
00:09:34,860 --> 00:09:39,060
this<font color="#CCCCCC"> is the only way</font><font color="#E5E5E5"> to bypass device</font>

220
00:09:37,410 --> 00:09:42,060
guard<font color="#CCCCCC"> as an admin you basically force an</font>

221
00:09:39,060 --> 00:09:46,650
attacker into asking themselves<font color="#E5E5E5"> well do</font>

222
00:09:42,060 --> 00:09:48,689
I<font color="#E5E5E5"> want to force take like real arbitrary</font>

223
00:09:46,650 --> 00:09:53,250
execution<font color="#E5E5E5"> or do I want to get caught</font><font color="#CCCCCC"> and</font>

224
00:09:48,690 --> 00:09:54,540
none<font color="#CCCCCC"> of these is good this is why some</font>

225
00:09:53,250 --> 00:09:56,550
of the<font color="#E5E5E5"> things I'm</font><font color="#CCCCCC"> gonna show here or</font>

226
00:09:54,540 --> 00:09:59,520
actually<font color="#E5E5E5"> require are actually gonna</font>

227
00:09:56,550 --> 00:10:01,680
require administrative credentials<font color="#E5E5E5"> but</font>

228
00:09:59,520 --> 00:10:03,750
<font color="#E5E5E5">they will be able to</font><font color="#CCCCCC"> bypass device guard</font>

229
00:10:01,680 --> 00:10:07,829
<font color="#E5E5E5">without actually turning it off and</font>

230
00:10:03,750 --> 00:10:09,900
those non vulnerability<font color="#E5E5E5"> admin style</font>

231
00:10:07,830 --> 00:10:11,820
techniques are sometimes what makes the

232
00:10:09,900 --> 00:10:13,800
<font color="#CCCCCC">difference between</font><font color="#E5E5E5"> an adversary staying</font>

233
00:10:11,820 --> 00:10:15,660
in your network for<font color="#E5E5E5"> a couple of hours</font>

234
00:10:13,800 --> 00:10:20,219
<font color="#CCCCCC">and an adversary</font><font color="#E5E5E5"> staying in your network</font>

235
00:10:15,660 --> 00:10:21,630
for<font color="#E5E5E5"> a couple of years so the more the</font>

236
00:10:20,220 --> 00:10:23,550
<font color="#E5E5E5">more of these</font><font color="#CCCCCC"> you have the more you have</font>

237
00:10:21,630 --> 00:10:26,430
to<font color="#E5E5E5"> monitor for lots of lots of different</font>

238
00:10:23,550 --> 00:10:28,349
<font color="#E5E5E5">techniques and you again gain a</font><font color="#CCCCCC"> lotta</font>

239
00:10:26,430 --> 00:10:30,630
<font color="#E5E5E5">Teague and you don't have this really</font>

240
00:10:28,350 --> 00:10:32,670
good baseline<font color="#E5E5E5"> which allows you to say oh</font>

241
00:10:30,630 --> 00:10:33,120
here's an anomaly<font color="#E5E5E5"> and you know this is</font>

242
00:10:32,670 --> 00:10:35,579
bad

243
00:10:33,120 --> 00:10:40,440
you just have lots of different

244
00:10:35,580 --> 00:10:43,680
behaviors<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so let's look</font><font color="#CCCCCC"> at a</font>

245
00:10:40,440 --> 00:10:49,440
<font color="#E5E5E5">couple of actual bypasses the first will</font>

246
00:10:43,680 --> 00:10:51,750
<font color="#E5E5E5">be VBA now</font><font color="#CCCCCC"> VBA VBA is basically Visual</font>

247
00:10:49,440 --> 00:10:55,140
Basic for applications or<font color="#CCCCCC"> the engine</font>

248
00:10:51,750 --> 00:10:56,880
that<font color="#CCCCCC"> powers office macros and it's</font>

249
00:10:55,140 --> 00:10:58,860
simply not instrumented by device guard

250
00:10:56,880 --> 00:11:01,140
meaning that if<font color="#E5E5E5"> you run VBA you can run</font>

251
00:10:58,860 --> 00:11:04,570
whatever VBA you'd like and this allows

252
00:11:01,140 --> 00:11:06,490
you<font color="#E5E5E5"> to run arbitrary when a dir</font>

253
00:11:04,570 --> 00:11:10,870
functions<font color="#E5E5E5"> and run shell code arbitrary</font>

254
00:11:06,490 --> 00:11:13,480
execution or use arbitrary<font color="#E5E5E5"> conduct like</font>

255
00:11:10,870 --> 00:11:17,850
and do stuff<font color="#E5E5E5"> like dotnet to jscript</font><font color="#CCCCCC"> and</font>

256
00:11:13,480 --> 00:11:20,260
again<font color="#E5E5E5"> arbitrary execution and well</font>

257
00:11:17,850 --> 00:11:22,330
<font color="#CCCCCC">microsoft has told me that because</font><font color="#E5E5E5"> it's</font>

258
00:11:20,260 --> 00:11:26,500
not an<font color="#E5E5E5"> integral part of Windows</font><font color="#CCCCCC"> it won't</font>

259
00:11:22,330 --> 00:11:28,090
be instrumented with<font color="#E5E5E5"> and like device</font>

260
00:11:26,500 --> 00:11:31,480
<font color="#CCCCCC">card will not be implemented</font><font color="#E5E5E5"> at least</font>

261
00:11:28,090 --> 00:11:33,340
<font color="#E5E5E5">soon for this but you know office is</font>

262
00:11:31,480 --> 00:11:35,020
<font color="#E5E5E5">pretty ubiquitous so unless you want to</font>

263
00:11:33,340 --> 00:11:37,270
<font color="#E5E5E5">say well this is</font><font color="#CCCCCC"> a feature for service</font>

264
00:11:35,020 --> 00:11:39,730
only you<font color="#CCCCCC"> are going to have office on</font>

265
00:11:37,270 --> 00:11:42,310
<font color="#CCCCCC">your device guarded machines and this</font>

266
00:11:39,730 --> 00:11:47,920
will give you a pretty much tons of

267
00:11:42,310 --> 00:11:50,859
holes in your defense<font color="#E5E5E5"> now running an</font>

268
00:11:47,920 --> 00:11:53,199
office macro the naive way is it's

269
00:11:50,860 --> 00:11:54,700
pretty<font color="#CCCCCC"> vain like I'm I'm going on easy</font>

270
00:11:53,200 --> 00:11:57,070
mode I'm not doing lots of real

271
00:11:54,700 --> 00:11:59,830
vulnerabilities but this this is too

272
00:11:57,070 --> 00:12:02,710
much<font color="#E5E5E5"> like you have</font><font color="#CCCCCC"> to actually click</font><font color="#E5E5E5"> the</font>

273
00:11:59,830 --> 00:12:06,280
enable content<font color="#E5E5E5"> stuff and well well no</font>

274
00:12:02,710 --> 00:12:09,400
that's the way so even if you already<font color="#CCCCCC"> be</font>

275
00:12:06,280 --> 00:12:13,420
<font color="#CCCCCC">to a machines still it's a bit too</font><font color="#E5E5E5"> much</font>

276
00:12:09,400 --> 00:12:16,540
<font color="#E5E5E5">so could we</font><font color="#CCCCCC"> actually run macros from a</font>

277
00:12:13,420 --> 00:12:18,250
post exploitation scenario without<font color="#E5E5E5"> going</font>

278
00:12:16,540 --> 00:12:20,500
<font color="#CCCCCC">through the through the sole protected</font>

279
00:12:18,250 --> 00:12:23,760
mode stuff and well I'm speaking<font color="#CCCCCC"> about</font>

280
00:12:20,500 --> 00:12:28,060
<font color="#E5E5E5">this so probably yes</font><font color="#CCCCCC"> and one</font><font color="#E5E5E5"> approach is</font>

281
00:12:23,760 --> 00:12:30,430
using lateral movement so while you

282
00:12:28,060 --> 00:12:32,859
can't<font color="#E5E5E5"> really reach those very</font><font color="#CCCCCC"> easily</font>

283
00:12:30,430 --> 00:12:36,969
<font color="#E5E5E5">from a local</font><font color="#CCCCCC"> machine you could</font><font color="#E5E5E5"> actually</font>

284
00:12:32,860 --> 00:12:39,490
<font color="#E5E5E5">use the office</font><font color="#CCCCCC"> applications call objects</font>

285
00:12:36,970 --> 00:12:42,790
and make<font color="#CCCCCC"> them</font><font color="#E5E5E5"> execute your own macros</font>

286
00:12:39,490 --> 00:12:46,390
<font color="#E5E5E5">and you can</font><font color="#CCCCCC"> actually also use</font><font color="#E5E5E5"> this</font>

287
00:12:42,790 --> 00:12:49,990
policy and but this still requires admin

288
00:12:46,390 --> 00:12:52,990
which is the the biggest shortcoming of

289
00:12:49,990 --> 00:12:55,180
this of this technique<font color="#E5E5E5"> but I have seen</font>

290
00:12:52,990 --> 00:12:57,520
environments<font color="#E5E5E5"> that have enabled</font><font color="#CCCCCC"> decom</font>

291
00:12:55,180 --> 00:12:59,530
access to<font color="#CCCCCC"> office applications</font><font color="#E5E5E5"> to regular</font>

292
00:12:57,520 --> 00:13:04,439
users so first of all<font color="#E5E5E5"> don't do that</font>

293
00:12:59,530 --> 00:13:04,439
second<font color="#E5E5E5"> don't do that actually that's it</font>

294
00:13:04,980 --> 00:13:11,800
right<font color="#CCCCCC"> so the way you do this is</font>

295
00:13:07,810 --> 00:13:14,079
basically create a remote instance of

296
00:13:11,800 --> 00:13:16,479
let's say the Excel<font color="#CCCCCC"> application</font><font color="#E5E5E5"> call</font>

297
00:13:14,080 --> 00:13:18,410
object you could use pretty<font color="#CCCCCC"> much any</font>

298
00:13:16,480 --> 00:13:21,260
other office application

299
00:13:18,410 --> 00:13:23,660
you save your macro as a string<font color="#E5E5E5"> and you</font>

300
00:13:21,260 --> 00:13:27,080
do a bit of<font color="#CCCCCC"> WMI magic to change the</font>

301
00:13:23,660 --> 00:13:29,270
registry<font color="#E5E5E5"> at the remote machine</font><font color="#CCCCCC"> to change</font>

302
00:13:27,080 --> 00:13:31,220
a small<font color="#E5E5E5"> key called access VB om that</font>

303
00:13:29,270 --> 00:13:33,800
<font color="#E5E5E5">basically lets you inject macros into</font>

304
00:13:31,220 --> 00:13:35,660
memory<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can also use this with</font>

305
00:13:33,800 --> 00:13:38,449
<font color="#E5E5E5">with an actual file but I don't like</font>

306
00:13:35,660 --> 00:13:40,790
files so if I can't avoid<font color="#E5E5E5"> them I do and</font>

307
00:13:38,450 --> 00:13:43,790
after<font color="#CCCCCC"> you do that</font><font color="#E5E5E5"> you simply</font><font color="#CCCCCC"> open an</font>

308
00:13:40,790 --> 00:13:46,880
empty workbook<font color="#CCCCCC"> you can also have it</font>

309
00:13:43,790 --> 00:13:49,130
<font color="#E5E5E5">absolutely anonymous you add your macro</font>

310
00:13:46,880 --> 00:13:51,439
<font color="#E5E5E5">from a string you just execute the macro</font>

311
00:13:49,130 --> 00:13:55,040
<font color="#E5E5E5">the macro runs nobody</font><font color="#CCCCCC"> asks any asks any</font>

312
00:13:51,440 --> 00:13:57,170
questions<font color="#CCCCCC"> and that's about it and if you</font>

313
00:13:55,040 --> 00:13:59,900
don't save the<font color="#E5E5E5"> workbook</font><font color="#CCCCCC"> you don't even</font>

314
00:13:57,170 --> 00:14:02,959
<font color="#E5E5E5">drop a file to the machine which is</font>

315
00:13:59,900 --> 00:14:05,410
<font color="#E5E5E5">pretty nice but it would be better if</font><font color="#CCCCCC"> we</font>

316
00:14:02,960 --> 00:14:07,790
could do this locally<font color="#E5E5E5"> and unprivileged</font>

317
00:14:05,410 --> 00:14:10,130
<font color="#E5E5E5">so let's try to find something with</font>

318
00:14:07,790 --> 00:14:12,620
these<font color="#CCCCCC"> requirements</font><font color="#E5E5E5"> and to do this we</font>

319
00:14:10,130 --> 00:14:15,230
need<font color="#CCCCCC"> to know when does office just not</font>

320
00:14:12,620 --> 00:14:17,870
use protected mode locally<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> don't</font>

321
00:14:15,230 --> 00:14:19,910
want<font color="#E5E5E5"> to change all</font><font color="#CCCCCC"> of the macro settings</font>

322
00:14:17,870 --> 00:14:22,100
<font color="#CCCCCC">because again if if you suddenly</font><font color="#E5E5E5"> see</font>

323
00:14:19,910 --> 00:14:24,199
<font color="#CCCCCC">that all</font><font color="#E5E5E5"> of the security settings on one</font>

324
00:14:22,100 --> 00:14:26,720
<font color="#E5E5E5">machine just go down this is</font><font color="#CCCCCC"> really bad</font>

325
00:14:24,200 --> 00:14:30,550
unless<font color="#E5E5E5"> it's the security researchers</font>

326
00:14:26,720 --> 00:14:33,260
machine and then just use a<font color="#E5E5E5"> VM please</font>

327
00:14:30,550 --> 00:14:36,650
<font color="#E5E5E5">but there are two main</font><font color="#CCCCCC"> ways to</font><font color="#E5E5E5"> do so</font>

328
00:14:33,260 --> 00:14:38,810
<font color="#CCCCCC">without</font><font color="#E5E5E5"> like turning down everything and</font>

329
00:14:36,650 --> 00:14:41,500
one is well if you've ever clicked on

330
00:14:38,810 --> 00:14:43,969
enable<font color="#CCCCCC"> content on a macro</font><font color="#E5E5E5"> you know that</font>

331
00:14:41,500 --> 00:14:45,710
next<font color="#E5E5E5"> time you open this document</font><font color="#CCCCCC"> it will</font>

332
00:14:43,970 --> 00:14:48,710
simply run<font color="#CCCCCC"> the</font><font color="#E5E5E5"> macro automatically and</font>

333
00:14:45,710 --> 00:14:50,660
this<font color="#E5E5E5"> is because these documents become</font>

334
00:14:48,710 --> 00:14:52,250
trusted<font color="#E5E5E5"> and they're saved in the</font>

335
00:14:50,660 --> 00:14:54,380
registry and there's like<font color="#E5E5E5"> a bit of</font>

336
00:14:52,250 --> 00:14:56,840
encoded<font color="#CCCCCC"> information about the</font><font color="#E5E5E5"> identity</font>

337
00:14:54,380 --> 00:14:58,580
of<font color="#E5E5E5"> the document that</font><font color="#CCCCCC"> says well this is</font>

338
00:14:56,840 --> 00:15:00,830
trusted just open<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and that's it but</font>

339
00:14:58,580 --> 00:15:03,170
<font color="#E5E5E5">it's encoded and I was and I was a bit</font>

340
00:15:00,830 --> 00:15:05,750
<font color="#E5E5E5">lazy so</font><font color="#CCCCCC"> I found</font><font color="#E5E5E5"> another way and the</font>

341
00:15:03,170 --> 00:15:08,810
other way<font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> trusted locations</font>

342
00:15:05,750 --> 00:15:11,330
so there are trusted locations for each

343
00:15:08,810 --> 00:15:13,369
<font color="#CCCCCC">office application from which documents</font>

344
00:15:11,330 --> 00:15:17,420
will simply run without<font color="#E5E5E5"> opening in</font>

345
00:15:13,370 --> 00:15:19,700
protected<font color="#CCCCCC"> mode because you know trusted</font>

346
00:15:17,420 --> 00:15:23,870
<font color="#E5E5E5">is ins and it's in the name</font><font color="#CCCCCC"> so you must</font>

347
00:15:19,700 --> 00:15:26,330
<font color="#CCCCCC">open it and trust it and the so called</font>

348
00:15:23,870 --> 00:15:29,060
defense against<font color="#E5E5E5"> this is that the default</font>

349
00:15:26,330 --> 00:15:31,150
ones are writable<font color="#E5E5E5"> only by admins so here</font>

350
00:15:29,060 --> 00:15:36,390
we have for example

351
00:15:31,150 --> 00:15:39,910
ACC<font color="#E5E5E5"> whiz</font><font color="#CCCCCC"> which is the</font><font color="#E5E5E5"> Microsoft Access</font>

352
00:15:36,390 --> 00:15:42,370
<font color="#E5E5E5">default trusted directory and well I</font>

353
00:15:39,910 --> 00:15:46,390
can't<font color="#E5E5E5"> write</font><font color="#CCCCCC"> as and I cannot write to</font><font color="#E5E5E5"> it</font>

354
00:15:42,370 --> 00:15:49,480
as an as an unprivileged user<font color="#E5E5E5"> so well</font>

355
00:15:46,390 --> 00:15:51,550
fine<font color="#CCCCCC"> I still have this requirement that</font>

356
00:15:49,480 --> 00:15:52,380
I don't want to use a privileged user

357
00:15:51,550 --> 00:15:55,510
for this

358
00:15:52,380 --> 00:15:57,820
so let's look how these<font color="#E5E5E5"> things are</font>

359
00:15:55,510 --> 00:16:01,569
actually represented in the registry<font color="#CCCCCC"> so</font>

360
00:15:57,820 --> 00:16:03,580
<font color="#CCCCCC">we have office 16 access security</font>

361
00:16:01,570 --> 00:16:07,240
trusted locations and the very

362
00:16:03,580 --> 00:16:10,660
descriptive location<font color="#CCCCCC"> too and we</font><font color="#E5E5E5"> have</font>

363
00:16:07,240 --> 00:16:13,980
like<font color="#E5E5E5"> path of the directory</font><font color="#CCCCCC"> itself</font><font color="#E5E5E5"> and a</font>

364
00:16:10,660 --> 00:16:16,480
description and well that's<font color="#E5E5E5"> all fine but</font>

365
00:16:13,980 --> 00:16:18,250
<font color="#E5E5E5">in a post exploitation scenario you</font>

366
00:16:16,480 --> 00:16:21,880
<font color="#E5E5E5">could see a small</font><font color="#CCCCCC"> problem here</font><font color="#E5E5E5"> and it is</font>

367
00:16:18,250 --> 00:16:24,130
this<font color="#E5E5E5"> so who even cares who can write to</font>

368
00:16:21,880 --> 00:16:26,350
a trusted location<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> can just add</font>

369
00:16:24,130 --> 00:16:29,020
your<font color="#CCCCCC"> own trusted location as your</font><font color="#E5E5E5"> own</font>

370
00:16:26,350 --> 00:16:31,510
user because you can always write your

371
00:16:29,020 --> 00:16:33,490
own HKC you meaning<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I don't care</font>

372
00:16:31,510 --> 00:16:36,370
<font color="#E5E5E5">about this</font><font color="#CCCCCC"> ACC wasting what I'm gonna do</font>

373
00:16:33,490 --> 00:16:39,520
is<font color="#E5E5E5"> just modify the registry I can do</font>

374
00:16:36,370 --> 00:16:41,440
this<font color="#E5E5E5"> pretty much directly in PowerShell</font>

375
00:16:39,520 --> 00:16:43,209
<font color="#CCCCCC">and constraint language mode because</font>

376
00:16:41,440 --> 00:16:45,580
constraint language mode and PowerShell

377
00:16:43,209 --> 00:16:49,650
will allow you to<font color="#CCCCCC"> use WMI which i think</font>

378
00:16:45,580 --> 00:16:52,660
is a bit of<font color="#CCCCCC"> a problem</font><font color="#E5E5E5"> in itself</font><font color="#CCCCCC"> but</font>

379
00:16:49,650 --> 00:16:56,020
that's another<font color="#E5E5E5"> thing just</font><font color="#CCCCCC"> to talk</font><font color="#E5E5E5"> about</font>

380
00:16:52,660 --> 00:16:58,569
<font color="#E5E5E5">so the moment we add let's say C temp as</font>

381
00:16:56,020 --> 00:17:00,040
the trusted directory<font color="#E5E5E5"> we're again in a</font>

382
00:16:58,570 --> 00:17:03,700
post exploitation scenario so we<font color="#E5E5E5"> could</font>

383
00:17:00,040 --> 00:17:06,129
<font color="#CCCCCC">just run any command and all we eat it</font>

384
00:17:03,700 --> 00:17:10,089
later<font color="#CCCCCC"> is to run Microsoft</font><font color="#E5E5E5"> Access</font><font color="#CCCCCC"> directs</font>

385
00:17:06,130 --> 00:17:12,939
see with our malicious<font color="#E5E5E5"> Access database</font>

386
00:17:10,089 --> 00:17:16,059
or I<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> know excel sheet Word</font>

387
00:17:12,939 --> 00:17:18,939
document or whatever<font color="#E5E5E5"> and probably supply</font>

388
00:17:16,059 --> 00:17:21,699
this<font color="#E5E5E5"> embedding flag that doesn't pop up</font>

389
00:17:18,939 --> 00:17:24,339
<font color="#E5E5E5">a very suspicious</font><font color="#CCCCCC"> GUI because</font><font color="#E5E5E5"> you ever</font>

390
00:17:21,699 --> 00:17:27,760
<font color="#CCCCCC">experienced just having Microsoft Access</font>

391
00:17:24,339 --> 00:17:31,780
<font color="#CCCCCC">or</font><font color="#E5E5E5"> just pull up on your screen without</font>

392
00:17:27,760 --> 00:17:34,000
any<font color="#CCCCCC"> for without any notice that this</font>

393
00:17:31,780 --> 00:17:36,399
does<font color="#E5E5E5"> look suspicious</font><font color="#CCCCCC"> so you can</font><font color="#E5E5E5"> just use</font>

394
00:17:34,000 --> 00:17:39,490
<font color="#CCCCCC">it without</font><font color="#E5E5E5"> GUI and then you have no</font>

395
00:17:36,400 --> 00:17:41,140
doubt because<font color="#E5E5E5"> I even be even if I'm</font>

396
00:17:39,490 --> 00:17:43,600
joking<font color="#CCCCCC"> about oh yeah the attackers can</font>

397
00:17:41,140 --> 00:17:45,100
only use notepad etc<font color="#E5E5E5"> I'm gonna use</font>

398
00:17:43,600 --> 00:17:47,649
arbitrary<font color="#E5E5E5"> code to launch</font><font color="#CCCCCC"> No</font>

399
00:17:45,100 --> 00:17:53,379
because you're only allowed to launch

400
00:17:47,650 --> 00:17:58,300
notepad or calc<font color="#E5E5E5"> in demos</font><font color="#CCCCCC"> right then so</font>

401
00:17:53,380 --> 00:18:00,730
now we understand that<font color="#CCCCCC"> VBA is crap and</font>

402
00:17:58,300 --> 00:18:03,399
if you've taken the<font color="#E5E5E5"> effort to</font><font color="#CCCCCC"> actually</font>

403
00:18:00,730 --> 00:18:05,470
implement<font color="#E5E5E5"> this thing which is pretty</font>

404
00:18:03,400 --> 00:18:07,780
<font color="#E5E5E5">hard to do and</font><font color="#CCCCCC"> you have like</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> really</font>

405
00:18:05,470 --> 00:18:10,890
<font color="#E5E5E5">modern environment</font><font color="#CCCCCC"> maybe you should not</font>

406
00:18:07,780 --> 00:18:16,300
use office macros<font color="#E5E5E5"> because please don't</font>

407
00:18:10,890 --> 00:18:20,650
please<font color="#CCCCCC"> so let's try to</font><font color="#E5E5E5"> find some non VBA</font>

408
00:18:16,300 --> 00:18:23,620
based<font color="#CCCCCC"> by</font><font color="#E5E5E5"> spices so let's look at a</font>

409
00:18:20,650 --> 00:18:25,720
couple<font color="#E5E5E5"> of these well we stopped using</font>

410
00:18:23,620 --> 00:18:30,189
VBA macros so<font color="#E5E5E5"> the next thing we're gonna</font>

411
00:18:25,720 --> 00:18:33,610
use is more macros but just worse<font color="#CCCCCC"> so</font>

412
00:18:30,190 --> 00:18:36,000
Excel has another<font color="#E5E5E5"> macro system another</font>

413
00:18:33,610 --> 00:18:39,159
<font color="#E5E5E5">macro feature that was introduced in 92</font>

414
00:18:36,000 --> 00:18:41,620
<font color="#E5E5E5">called Excel for macros or Excel macros</font>

415
00:18:39,160 --> 00:18:44,230
and this is implemented<font color="#CCCCCC"> in Excel</font>

416
00:18:41,620 --> 00:18:46,209
<font color="#E5E5E5">directly itself and it actually gives</font>

417
00:18:44,230 --> 00:18:48,250
<font color="#E5E5E5">you a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of primitives</font><font color="#CCCCCC"> for arbitrary</font>

418
00:18:46,210 --> 00:18:51,040
execution<font color="#CCCCCC"> because the call and register</font>

419
00:18:48,250 --> 00:18:54,550
functions allow you to<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> take of</font>

420
00:18:51,040 --> 00:19:00,460
a<font color="#E5E5E5"> library a name of function some really</font>

421
00:18:54,550 --> 00:19:03,070
gross way to to<font color="#E5E5E5"> represent the arguments</font>

422
00:19:00,460 --> 00:19:05,650
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the function and then just call it so</font>

423
00:19:03,070 --> 00:19:09,939
<font color="#E5E5E5">it's disgusting</font><font color="#CCCCCC"> but it works</font><font color="#E5E5E5"> but at</font>

424
00:19:05,650 --> 00:19:11,530
<font color="#E5E5E5">first but at first I was not able</font><font color="#CCCCCC"> to</font>

425
00:19:09,940 --> 00:19:13,540
<font color="#CCCCCC">actually use it for arbitrary execution</font>

426
00:19:11,530 --> 00:19:16,870
because<font color="#CCCCCC"> I was able</font><font color="#E5E5E5"> to like run a process</font>

427
00:19:13,540 --> 00:19:18,760
which well<font color="#E5E5E5"> I can run a PE file I can't</font>

428
00:19:16,870 --> 00:19:20,979
run my PE file because again device

429
00:19:18,760 --> 00:19:24,190
<font color="#E5E5E5">guard I could run a column scriptlet</font>

430
00:19:20,980 --> 00:19:25,990
<font color="#E5E5E5">which runs JavaScript which is</font>

431
00:19:24,190 --> 00:19:29,680
instrumented by device<font color="#CCCCCC"> cards so I can do</font>

432
00:19:25,990 --> 00:19:32,680
anything<font color="#E5E5E5"> and Stan</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> Peter's from</font><font color="#CCCCCC"> Al</font>

433
00:19:29,680 --> 00:19:35,200
Frank just recently had this really

434
00:19:32,680 --> 00:19:37,060
<font color="#CCCCCC">really great derbycon</font><font color="#E5E5E5"> talk and they</font>

435
00:19:35,200 --> 00:19:39,190
showed<font color="#CCCCCC"> that you could actually run x86</font>

436
00:19:37,060 --> 00:19:43,620
<font color="#E5E5E5">shellcode which is exactly what I</font><font color="#CCCCCC"> needed</font>

437
00:19:39,190 --> 00:19:47,560
<font color="#CCCCCC">for</font><font color="#E5E5E5"> this so you can</font><font color="#CCCCCC"> actually do</font><font color="#E5E5E5"> this via</font>

438
00:19:43,620 --> 00:19:50,800
via Excel for macros<font color="#E5E5E5"> and you can't</font>

439
00:19:47,560 --> 00:19:54,429
really<font color="#E5E5E5"> do this with with</font><font color="#CCCCCC"> 64-bit stuff</font>

440
00:19:50,800 --> 00:19:57,580
because the maximum<font color="#CCCCCC"> size of the</font><font color="#E5E5E5"> argument</font>

441
00:19:54,430 --> 00:19:58,840
is is 32 bits so I just I just can't

442
00:19:57,580 --> 00:20:01,540
<font color="#E5E5E5">cram a pointer in</font>

443
00:19:58,840 --> 00:20:03,730
it but as of today most office

444
00:20:01,540 --> 00:20:07,149
installations are still<font color="#E5E5E5"> 32 bits so</font><font color="#CCCCCC"> best</font>

445
00:20:03,730 --> 00:20:10,290
will<font color="#CCCCCC"> work</font><font color="#E5E5E5"> almost anywhere and this looks</font>

446
00:20:07,150 --> 00:20:13,180
<font color="#E5E5E5">like this what we do is simply register</font>

447
00:20:10,290 --> 00:20:16,930
<font color="#CCCCCC">let's</font><font color="#E5E5E5"> say the usual suspects of</font>

448
00:20:13,180 --> 00:20:19,600
<font color="#CCCCCC">shellcode like right process memory</font>

449
00:20:16,930 --> 00:20:22,660
<font color="#E5E5E5">virtual a lock and create</font><font color="#CCCCCC"> read we</font>

450
00:20:19,600 --> 00:20:27,310
actually push our shellcode as a byte

451
00:20:22,660 --> 00:20:29,530
<font color="#CCCCCC">array into a bit of into a cell which is</font>

452
00:20:27,310 --> 00:20:31,960
this weird value thing in the first row

453
00:20:29,530 --> 00:20:34,510
because<font color="#E5E5E5"> Excel actually knows how to</font>

454
00:20:31,960 --> 00:20:36,040
store long byte arrays in a single cell

455
00:20:34,510 --> 00:20:39,310
<font color="#E5E5E5">and then it doesn't</font><font color="#CCCCCC"> know how to</font>

456
00:20:36,040 --> 00:20:41,230
represent<font color="#E5E5E5"> them so we get an error</font><font color="#CCCCCC"> but if</font>

457
00:20:39,310 --> 00:20:43,840
the macro does not get an error<font color="#E5E5E5"> and we</font>

458
00:20:41,230 --> 00:20:45,820
don't really care<font color="#CCCCCC"> about how it looks</font><font color="#E5E5E5"> and</font>

459
00:20:43,840 --> 00:20:48,780
again we have<font color="#E5E5E5"> this enable content thing</font>

460
00:20:45,820 --> 00:20:51,580
but we already<font color="#E5E5E5"> know how to do macros</font>

461
00:20:48,780 --> 00:20:55,450
<font color="#E5E5E5">without protected mode in an in a post</font>

462
00:20:51,580 --> 00:20:58,389
<font color="#CCCCCC">excommunication scenario</font><font color="#E5E5E5"> so first we</font>

463
00:20:55,450 --> 00:21:01,390
<font color="#E5E5E5">have the ability to do so through decom</font>

464
00:20:58,390 --> 00:21:05,020
again remotely and you connect to the

465
00:21:01,390 --> 00:21:08,200
<font color="#E5E5E5">excel</font><font color="#CCCCCC"> data application decom object on</font>

466
00:21:05,020 --> 00:21:09,970
<font color="#E5E5E5">your target machine you open the</font>

467
00:21:08,200 --> 00:21:11,350
workbook that<font color="#E5E5E5"> you've sent beforehand</font>

468
00:21:09,970 --> 00:21:15,240
this time using<font color="#E5E5E5"> a file you could</font>

469
00:21:11,350 --> 00:21:18,939
actually also<font color="#CCCCCC"> use a comm method called</font>

470
00:21:15,240 --> 00:21:20,440
execute<font color="#CCCCCC"> excel for macro that just takes</font>

471
00:21:18,940 --> 00:21:22,650
the macro from<font color="#E5E5E5"> a string and executes it</font>

472
00:21:20,440 --> 00:21:26,260
because of course<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have this</font>

473
00:21:22,650 --> 00:21:28,200
and then<font color="#E5E5E5"> you do run automaker's and it</font>

474
00:21:26,260 --> 00:21:32,920
runs the whole<font color="#CCCCCC"> shellcode thing and</font><font color="#E5E5E5"> again</font>

475
00:21:28,200 --> 00:21:37,000
launches a calculator<font color="#E5E5E5"> so this is it for</font>

476
00:21:32,920 --> 00:21:38,620
<font color="#E5E5E5">macros now the trusted directory trick</font>

477
00:21:37,000 --> 00:21:40,870
works exactly<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same you trust the</font>

478
00:21:38,620 --> 00:21:44,310
directory push your pushier file into

479
00:21:40,870 --> 00:21:48,370
trusted directory run it and it<font color="#E5E5E5"> runs</font>

480
00:21:44,310 --> 00:21:49,929
without any problem it's the same demo

481
00:21:48,370 --> 00:21:52,090
so I'm<font color="#CCCCCC"> just</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> I'm not even gonna</font>

482
00:21:49,930 --> 00:21:55,870
show<font color="#E5E5E5"> the screenshot and the benefit of</font>

483
00:21:52,090 --> 00:21:58,810
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that these macros are actually</font>

484
00:21:55,870 --> 00:22:02,020
implemented in Excel<font color="#CCCCCC"> there eggsy meaning</font>

485
00:21:58,810 --> 00:22:03,639
<font color="#E5E5E5">that you can't</font><font color="#CCCCCC"> really take your policy</font>

486
00:22:02,020 --> 00:22:06,250
<font color="#E5E5E5">and say well</font><font color="#CCCCCC"> i'm not going to allow this</font>

487
00:22:03,640 --> 00:22:09,160
<font color="#E5E5E5">dll this part of the code to</font><font color="#CCCCCC"> execute to</font>

488
00:22:06,250 --> 00:22:10,870
load<font color="#E5E5E5"> because if you're using excel you</font>

489
00:22:09,160 --> 00:22:12,610
have already<font color="#E5E5E5"> loaded</font><font color="#CCCCCC"> the macro</font>

490
00:22:10,870 --> 00:22:14,799
functionality

491
00:22:12,610 --> 00:22:18,399
<font color="#CCCCCC">it doesn't really matter</font><font color="#E5E5E5"> how hard you</font>

492
00:22:14,799 --> 00:22:20,350
tinker with<font color="#CCCCCC"> with the settings most of</font>

493
00:22:18,399 --> 00:22:22,149
them are in HK<font color="#CCCCCC"> Cu meaning that an</font>

494
00:22:20,350 --> 00:22:24,539
attacker would pretty<font color="#CCCCCC"> much always be</font>

495
00:22:22,149 --> 00:22:28,479
<font color="#CCCCCC">able to just change</font><font color="#E5E5E5"> it back and execute</font>

496
00:22:24,539 --> 00:22:31,720
<font color="#CCCCCC">anyway so if you have excel on your</font>

497
00:22:28,480 --> 00:22:34,750
device guarded machine you could disable

498
00:22:31,720 --> 00:22:38,019
<font color="#E5E5E5">VBA you could</font><font color="#CCCCCC"> actually specifically</font>

499
00:22:34,750 --> 00:22:40,240
blacklist vb7<font color="#CCCCCC"> DLL and</font><font color="#E5E5E5"> still these macros</font>

500
00:22:38,019 --> 00:22:41,679
will work<font color="#E5E5E5"> so if you have Excel</font><font color="#CCCCCC"> you have</font>

501
00:22:40,240 --> 00:22:44,370
pretty much a device card for every day

502
00:22:41,679 --> 00:22:47,620
unless<font color="#E5E5E5"> somebody decides to fix</font><font color="#CCCCCC"> it</font>

503
00:22:44,370 --> 00:22:50,709
because<font color="#CCCCCC"> I'm not sure does did any</font><font color="#E5E5E5"> money</font>

504
00:22:47,620 --> 00:23:06,969
use in an<font color="#CCCCCC"> Excel for macro for good in</font>

505
00:22:50,710 --> 00:23:09,490
recent years yeah so let's move<font color="#CCCCCC"> to</font>

506
00:23:06,970 --> 00:23:13,419
another category<font color="#E5E5E5"> called active script</font>

507
00:23:09,490 --> 00:23:14,950
bypasses this will<font color="#E5E5E5"> basically abuse</font>

508
00:23:13,419 --> 00:23:17,559
active script technology which is a

509
00:23:14,950 --> 00:23:19,600
generic window scripting technology or

510
00:23:17,559 --> 00:23:21,158
specification<font color="#E5E5E5"> and it's what's behind</font>

511
00:23:19,600 --> 00:23:24,370
vbscript and jscript

512
00:23:21,159 --> 00:23:26,559
and it has already been a target<font color="#E5E5E5"> of a</font>

513
00:23:24,370 --> 00:23:31,510
couple<font color="#E5E5E5"> of recent bypasses such as the</font>

514
00:23:26,559 --> 00:23:34,090
<font color="#E5E5E5">squiggly whatever stuff there's a whole</font>

515
00:23:31,510 --> 00:23:38,500
<font color="#CCCCCC">category of squiggly something by device</font>

516
00:23:34,090 --> 00:23:41,019
<font color="#E5E5E5">guard in app Locker bypasses and what</font>

517
00:23:38,500 --> 00:23:44,139
<font color="#E5E5E5">active script actually</font><font color="#CCCCCC"> does is allows</font>

518
00:23:41,019 --> 00:23:46,720
you<font color="#E5E5E5"> to implement</font><font color="#CCCCCC"> different scripting</font>

519
00:23:44,139 --> 00:23:50,158
languages and then use any such

520
00:23:46,720 --> 00:23:52,809
implementation<font color="#CCCCCC"> inside a lot</font><font color="#E5E5E5"> of different</font>

521
00:23:50,159 --> 00:23:54,850
scripting hosts and it looks pretty<font color="#CCCCCC"> much</font>

522
00:23:52,809 --> 00:23:58,000
<font color="#E5E5E5">like this</font><font color="#CCCCCC"> you have two main components</font>

523
00:23:54,850 --> 00:23:59,769
<font color="#E5E5E5">one is the scripting engine which is the</font>

524
00:23:58,000 --> 00:24:02,590
actual implementation<font color="#E5E5E5"> of a scripting</font>

525
00:23:59,769 --> 00:24:04,210
language<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> other is the scripting</font>

526
00:24:02,590 --> 00:24:06,279
host which actually does the

527
00:24:04,210 --> 00:24:08,889
<font color="#E5E5E5">behind-the-scenes magic that suddenly</font>

528
00:24:06,279 --> 00:24:11,169
allows<font color="#E5E5E5"> VB script inside Internet</font>

529
00:24:08,889 --> 00:24:13,840
<font color="#E5E5E5">Explorer to know whatever the hell HTML</font>

530
00:24:11,169 --> 00:24:17,500
in the<font color="#CCCCCC"> Dom</font><font color="#E5E5E5"> is because if</font><font color="#CCCCCC"> you run VB</font>

531
00:24:13,840 --> 00:24:19,840
script in let's say W script no idea

532
00:24:17,500 --> 00:24:21,850
what<font color="#E5E5E5"> hTML is suddenly you put it into</font>

533
00:24:19,840 --> 00:24:26,530
<font color="#CCCCCC">Internet Explorer</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> ah</font><font color="#E5E5E5"> yes of course</font>

534
00:24:21,850 --> 00:24:28,899
tags<font color="#E5E5E5"> yeah sure and it does so by simple</font>

535
00:24:26,530 --> 00:24:32,050
<font color="#E5E5E5">exposing a lot</font><font color="#CCCCCC"> of methods</font><font color="#E5E5E5"> and objects to</font>

536
00:24:28,900 --> 00:24:34,240
<font color="#CCCCCC">the scripting engine itself</font><font color="#E5E5E5"> so we have</font>

537
00:24:32,050 --> 00:24:36,669
these two main parts<font color="#E5E5E5"> and there's a</font>

538
00:24:34,240 --> 00:24:40,270
<font color="#E5E5E5">couple of instances</font><font color="#CCCCCC"> of those components</font>

539
00:24:36,670 --> 00:24:42,100
<font color="#E5E5E5">that</font><font color="#CCCCCC"> are natively already present in</font>

540
00:24:40,270 --> 00:24:45,580
<font color="#E5E5E5">every Windows installation this is</font><font color="#CCCCCC"> not a</font>

541
00:24:42,100 --> 00:24:47,919
full<font color="#CCCCCC"> list</font><font color="#E5E5E5"> but in terms of hosts you have</font>

542
00:24:45,580 --> 00:24:52,620
stuff like<font color="#CCCCCC"> V like W and C script</font><font color="#E5E5E5"> you</font>

543
00:24:47,920 --> 00:24:56,170
have<font color="#CCCCCC"> STR Abdi ll which actually</font>

544
00:24:52,620 --> 00:25:00,250
implements comm scriptlets<font color="#E5E5E5"> you have</font>

545
00:24:56,170 --> 00:25:02,470
stuff like msxml<font color="#CCCCCC"> 3 & 6</font><font color="#E5E5E5"> star DLL that do</font>

546
00:25:00,250 --> 00:25:06,790
some<font color="#CCCCCC"> xml transform stuff and you have MS</font>

547
00:25:02,470 --> 00:25:09,850
HTML DLL that<font color="#E5E5E5"> implements basically the</font>

548
00:25:06,790 --> 00:25:12,430
Internet Explorer<font color="#E5E5E5"> HTML engine and in</font>

549
00:25:09,850 --> 00:25:14,290
terms of engines you have<font color="#E5E5E5"> J script which</font>

550
00:25:12,430 --> 00:25:16,150
<font color="#CCCCCC">is a JavaScript implementation</font><font color="#E5E5E5"> you have</font>

551
00:25:14,290 --> 00:25:17,889
VB script and you have jscript 9 which

552
00:25:16,150 --> 00:25:21,970
<font color="#CCCCCC">is another JavaScript</font><font color="#E5E5E5"> implementation</font>

553
00:25:17,890 --> 00:25:24,250
because<font color="#E5E5E5"> one is not enough and what the</font>

554
00:25:21,970 --> 00:25:27,250
active script<font color="#CCCCCC"> specification actually</font>

555
00:25:24,250 --> 00:25:31,500
allows you is<font color="#E5E5E5"> that you could run every</font>

556
00:25:27,250 --> 00:25:33,760
single scripting engine under under any

557
00:25:31,500 --> 00:25:36,040
scripting host<font color="#E5E5E5"> meaning that each of</font>

558
00:25:33,760 --> 00:25:39,010
those could run both jscript VB script

559
00:25:36,040 --> 00:25:41,800
<font color="#CCCCCC">etc and if I for example</font><font color="#E5E5E5"> want to</font>

560
00:25:39,010 --> 00:25:44,020
implement<font color="#CCCCCC"> version of Python for this</font>

561
00:25:41,800 --> 00:25:46,990
which<font color="#E5E5E5"> actually exists</font><font color="#CCCCCC"> it will also be</font>

562
00:25:44,020 --> 00:25:50,110
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> run in W scripts STR Rob and</font>

563
00:25:46,990 --> 00:25:51,850
even under<font color="#CCCCCC"> MS HTML DOL so I'm pretty</font>

564
00:25:50,110 --> 00:25:54,280
<font color="#E5E5E5">sure you could run Python an</font><font color="#CCCCCC"> internet</font>

565
00:25:51,850 --> 00:25:58,570
<font color="#CCCCCC">explorer if you really try which sounds</font>

566
00:25:54,280 --> 00:26:00,970
terrible so the way<font color="#E5E5E5"> device guard is</font>

567
00:25:58,570 --> 00:26:03,490
implemented an active script<font color="#E5E5E5"> as I've</font>

568
00:26:00,970 --> 00:26:06,400
said before is by using<font color="#CCCCCC"> comm object</font>

569
00:26:03,490 --> 00:26:08,200
filtering meaning that<font color="#E5E5E5"> I can't get any</font>

570
00:26:06,400 --> 00:26:11,350
common object<font color="#E5E5E5"> that I want I can get</font><font color="#CCCCCC"> it</font>

571
00:26:08,200 --> 00:26:14,200
like one of a very small<font color="#E5E5E5"> hard-coded</font>

572
00:26:11,350 --> 00:26:16,240
<font color="#CCCCCC">lists so let's say that I wanna write</font><font color="#E5E5E5"> a</font>

573
00:26:14,200 --> 00:26:21,390
<font color="#E5E5E5">script that wants</font><font color="#CCCCCC"> to create W script</font>

574
00:26:16,240 --> 00:26:24,100
shell or infamous CMD running<font color="#E5E5E5"> object and</font>

575
00:26:21,390 --> 00:26:25,900
what the scripting engine does in an

576
00:26:24,100 --> 00:26:29,469
internal function is called class ID

577
00:26:25,900 --> 00:26:33,220
from probe ID to turn<font color="#E5E5E5"> this friendly name</font>

578
00:26:29,470 --> 00:26:36,760
into the comm<font color="#CCCCCC"> classes good what it does</font>

579
00:26:33,220 --> 00:26:40,060
later is send this<font color="#CCCCCC"> good</font><font color="#E5E5E5"> to method in the</font>

580
00:26:36,760 --> 00:26:41,049
host called is class allowed and this

581
00:26:40,060 --> 00:26:45,399
one checks

582
00:26:41,049 --> 00:26:48,220
against<font color="#CCCCCC"> hard-coded list</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> WL DP DLL</font>

583
00:26:45,399 --> 00:26:51,820
which<font color="#CCCCCC"> is actually the user mode</font>

584
00:26:48,220 --> 00:26:55,049
implementation of device guard<font color="#E5E5E5"> and if it</font>

585
00:26:51,820 --> 00:26:58,720
returns<font color="#CCCCCC"> that</font><font color="#E5E5E5"> well that's</font><font color="#CCCCCC"> not in</font><font color="#E5E5E5"> my list</font>

586
00:26:55,049 --> 00:27:01,480
<font color="#E5E5E5">class creation simply fails and the</font>

587
00:26:58,720 --> 00:27:03,909
script<font color="#CCCCCC"> fails</font><font color="#E5E5E5"> if it's in your list you</font>

588
00:27:01,480 --> 00:27:05,830
simply<font color="#CCCCCC"> call co-create instance</font><font color="#E5E5E5"> and you</font>

589
00:27:03,909 --> 00:27:08,679
have your script<font color="#CCCCCC"> up and running with any</font>

590
00:27:05,830 --> 00:27:10,360
object that<font color="#E5E5E5"> you want now of course this</font>

591
00:27:08,679 --> 00:27:12,100
<font color="#E5E5E5">only happens when you have an unsigned</font>

592
00:27:10,360 --> 00:27:14,668
script<font color="#E5E5E5"> if your script is sign it's</font>

593
00:27:12,100 --> 00:27:18,039
permitted<font color="#E5E5E5"> it just runs in</font><font color="#CCCCCC"> full mode and</font>

594
00:27:14,669 --> 00:27:21,519
nobody stops you<font color="#CCCCCC"> from</font><font color="#E5E5E5"> running W script</font>

595
00:27:18,039 --> 00:27:23,169
<font color="#E5E5E5">or chill now this now what happens when</font>

596
00:27:21,519 --> 00:27:26,289
you<font color="#E5E5E5"> don't have this is grass allowed</font>

597
00:27:23,169 --> 00:27:29,230
function is that it<font color="#E5E5E5"> falls back on simply</font>

598
00:27:26,289 --> 00:27:33,759
well let's create it anyway who cares<font color="#CCCCCC"> so</font>

599
00:27:29,230 --> 00:27:35,919
the the most simple the simplest way<font color="#E5E5E5"> to</font>

600
00:27:33,759 --> 00:27:38,169
bypass<font color="#E5E5E5"> this is to find a host that does</font>

601
00:27:35,919 --> 00:27:41,499
not have this is class loud function

602
00:27:38,169 --> 00:27:45,070
implemented<font color="#E5E5E5"> meaning this host is not</font>

603
00:27:41,499 --> 00:27:46,899
enlightened<font color="#CCCCCC"> by device</font><font color="#E5E5E5"> guard so once a</font>

604
00:27:45,070 --> 00:27:50,820
toast<font color="#E5E5E5"> is the active script event</font>

605
00:27:46,899 --> 00:27:54,129
consumer<font color="#E5E5E5"> which you might know from the</font>

606
00:27:50,820 --> 00:27:57,189
most common<font color="#CCCCCC"> W</font><font color="#E5E5E5"> my persistence method and</font>

607
00:27:54,129 --> 00:27:58,809
it's implemented<font color="#E5E5E5"> in ser constant</font><font color="#CCCCCC"> XE now</font>

608
00:27:57,190 --> 00:28:00,730
it does<font color="#E5E5E5"> not use any of the other</font>

609
00:27:58,809 --> 00:28:02,559
executables or<font color="#CCCCCC"> DLL that I've mentioned</font>

610
00:28:00,730 --> 00:28:05,230
<font color="#CCCCCC">in</font><font color="#E5E5E5"> the previous list as the scripting</font>

611
00:28:02,559 --> 00:28:09,399
host<font color="#E5E5E5"> it implements its own host and this</font>

612
00:28:05,230 --> 00:28:11,169
one is not supported by<font color="#E5E5E5"> device guard</font><font color="#CCCCCC"> so</font>

613
00:28:09,399 --> 00:28:13,178
while it's only available<font color="#CCCCCC"> as admin which</font>

614
00:28:11,169 --> 00:28:17,799
is of course always worse than being

615
00:28:13,179 --> 00:28:20,409
<font color="#CCCCCC">available just</font><font color="#E5E5E5"> for everybody it's still</font>

616
00:28:17,799 --> 00:28:23,289
not instrumented and<font color="#E5E5E5"> if your and you can</font>

617
00:28:20,409 --> 00:28:26,259
use<font color="#E5E5E5"> it as admin pretty simply</font><font color="#CCCCCC"> this is</font>

618
00:28:23,289 --> 00:28:28,809
the simplest implementation of W my

619
00:28:26,259 --> 00:28:30,700
persistence<font color="#E5E5E5"> and you don't need to change</font>

620
00:28:28,809 --> 00:28:34,749
anything at all to make<font color="#CCCCCC"> it a device</font>

621
00:28:30,700 --> 00:28:38,529
<font color="#E5E5E5">guard bypass</font><font color="#CCCCCC"> what you do is simply write</font>

622
00:28:34,749 --> 00:28:41,710
your script text into the script<font color="#CCCCCC"> text</font>

623
00:28:38,529 --> 00:28:43,929
variable probability of the active

624
00:28:41,710 --> 00:28:46,659
script events consumer object you<font color="#E5E5E5"> create</font>

625
00:28:43,929 --> 00:28:48,519
a trigger<font color="#E5E5E5"> that's basically a W my query</font>

626
00:28:46,659 --> 00:28:50,950
that<font color="#E5E5E5"> says well here it says every time</font>

627
00:28:48,519 --> 00:28:52,929
notepad runs do something<font color="#E5E5E5"> so we're gonna</font>

628
00:28:50,950 --> 00:28:54,429
we're gonna run CMD every time notepad

629
00:28:52,929 --> 00:28:56,499
runs and then

630
00:28:54,429 --> 00:28:59,710
buying those two<font color="#E5E5E5"> things so every time</font>

631
00:28:56,499 --> 00:29:01,749
<font color="#E5E5E5">our trigger filter our event filter is</font>

632
00:28:59,710 --> 00:29:04,840
triggered<font color="#CCCCCC"> our script</font><font color="#E5E5E5"> is going to run</font>

633
00:29:01,749 --> 00:29:06,850
<font color="#E5E5E5">again we have scripting host that's not</font>

634
00:29:04,840 --> 00:29:11,889
instrumented by device guard so our code

635
00:29:06,850 --> 00:29:15,158
is gonna run<font color="#E5E5E5"> uninterrupted another such</font>

636
00:29:11,889 --> 00:29:18,699
host<font color="#E5E5E5"> is the one that implements</font><font color="#CCCCCC"> XSLT</font>

637
00:29:15,159 --> 00:29:22,360
transforms now these are<font color="#E5E5E5"> basically files</font>

638
00:29:18,700 --> 00:29:24,909
that allow you<font color="#E5E5E5"> to transform an XML from</font>

639
00:29:22,360 --> 00:29:28,508
one format<font color="#CCCCCC"> to the other and these</font>

640
00:29:24,909 --> 00:29:32,499
support embedded scripting<font color="#E5E5E5"> meaning that</font>

641
00:29:28,509 --> 00:29:34,749
you could<font color="#E5E5E5"> basically right</font><font color="#CCCCCC"> inline jscript</font>

642
00:29:32,499 --> 00:29:38,019
or<font color="#CCCCCC"> vbscript</font><font color="#E5E5E5"> or whatever and it will</font>

643
00:29:34,749 --> 00:29:41,710
execute<font color="#E5E5E5"> when</font><font color="#CCCCCC"> the transform is</font><font color="#E5E5E5"> actually</font>

644
00:29:38,019 --> 00:29:44,769
<font color="#E5E5E5">being used so again this is implemented</font>

645
00:29:41,710 --> 00:29:49,179
<font color="#CCCCCC">in msxml six or three DLL and if you're</font>

646
00:29:44,769 --> 00:29:51,039
able<font color="#E5E5E5"> to use to use an</font><font color="#CCCCCC"> excel transform it</font>

647
00:29:49,179 --> 00:29:52,389
will go<font color="#E5E5E5"> through a</font><font color="#CCCCCC"> mess XML which is not</font>

648
00:29:51,039 --> 00:29:55,360
instrumented by<font color="#E5E5E5"> device</font><font color="#CCCCCC"> guard</font><font color="#E5E5E5"> meaning</font>

649
00:29:52,389 --> 00:29:57,639
that<font color="#E5E5E5"> applying an arbitrary XSL to</font>

650
00:29:55,360 --> 00:29:59,649
whatever XML you want will<font color="#CCCCCC"> reserve will</font>

651
00:29:57,639 --> 00:30:02,049
result in running your arbitrary code

652
00:29:59,649 --> 00:30:06,610
because you<font color="#CCCCCC"> will be able</font><font color="#E5E5E5"> to create any</font>

653
00:30:02,049 --> 00:30:08,950
<font color="#CCCCCC">calm now one way to</font><font color="#E5E5E5"> do this is again</font>

654
00:30:06,610 --> 00:30:13,360
<font color="#E5E5E5">going back</font><font color="#CCCCCC"> to office</font><font color="#E5E5E5"> using the access</font>

655
00:30:08,950 --> 00:30:15,759
transform<font color="#E5E5E5"> XML method the access</font><font color="#CCCCCC"> KOB ject</font>

656
00:30:13,360 --> 00:30:20,439
has this nice transform<font color="#CCCCCC"> XML method that</font>

657
00:30:15,759 --> 00:30:24,460
just<font color="#CCCCCC"> takes your</font><font color="#E5E5E5"> eye of a transform of an</font>

658
00:30:20,440 --> 00:30:26,799
<font color="#E5E5E5">XSL transform a URI of of an XML file</font><font color="#CCCCCC"> a</font>

659
00:30:24,460 --> 00:30:29,249
very nice option of do you wanna run

660
00:30:26,799 --> 00:30:31,929
scripts yes I do<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> run</font><font color="#CCCCCC"> scripts and</font>

661
00:30:29,249 --> 00:30:36,070
that's it so it<font color="#E5E5E5"> just</font><font color="#CCCCCC"> creates your access</font>

662
00:30:31,929 --> 00:30:40,869
application object<font color="#CCCCCC"> create a database and</font>

663
00:30:36,070 --> 00:30:42,759
use transform XML with with your XSL

664
00:30:40,869 --> 00:30:44,949
stylesheet and<font color="#CCCCCC"> you don't really need an</font>

665
00:30:42,759 --> 00:30:46,779
actual<font color="#E5E5E5"> XML file we</font><font color="#CCCCCC"> just need to give it</font>

666
00:30:44,950 --> 00:30:49,389
something<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I gave the same stylesheet</font>

667
00:30:46,779 --> 00:30:51,970
and because this whole<font color="#CCCCCC"> thing is going to</font>

668
00:30:49,389 --> 00:30:54,639
fail<font color="#E5E5E5"> XML wise that won't fail code</font>

669
00:30:51,970 --> 00:30:56,440
execution wise so I'm giving it<font color="#E5E5E5"> so I'm</font>

670
00:30:54,639 --> 00:30:59,799
telling<font color="#E5E5E5"> you oh yeah sure save this to</font>

671
00:30:56,440 --> 00:31:02,440
this path does not<font color="#E5E5E5"> exist on XML and it</font>

672
00:30:59,799 --> 00:31:05,830
won't get saved<font color="#E5E5E5"> anyway so you don't get</font>

673
00:31:02,440 --> 00:31:06,850
any auto text on the disk<font color="#CCCCCC"> so this is one</font>

674
00:31:05,830 --> 00:31:09,460
way

675
00:31:06,850 --> 00:31:12,100
to use<font color="#CCCCCC"> XSLT transforms another way is</font>

676
00:31:09,460 --> 00:31:13,930
<font color="#E5E5E5">actually a modification of lateral</font>

677
00:31:12,100 --> 00:31:16,780
movement method by Matt Nelson<font color="#E5E5E5"> of</font>

678
00:31:13,930 --> 00:31:19,870
<font color="#CCCCCC">Spectre UPS is to use outlook</font><font color="#E5E5E5"> which</font>

679
00:31:16,780 --> 00:31:21,399
allows you to<font color="#E5E5E5"> create pretty much any</font>

680
00:31:19,870 --> 00:31:23,979
<font color="#E5E5E5">color you like there are some</font>

681
00:31:21,400 --> 00:31:26,760
limitations<font color="#E5E5E5"> and the original method</font>

682
00:31:23,980 --> 00:31:29,410
<font color="#CCCCCC">actually only works on 32 bits</font><font color="#E5E5E5"> and used</font>

683
00:31:26,760 --> 00:31:31,510
an object that was instrumented by

684
00:31:29,410 --> 00:31:33,310
device guards so you could try to use<font color="#CCCCCC"> a</font>

685
00:31:31,510 --> 00:31:35,650
trip to run a script but it<font color="#E5E5E5"> will be</font>

686
00:31:33,310 --> 00:31:37,419
stopped because<font color="#CCCCCC"> your script will not be</font>

687
00:31:35,650 --> 00:31:40,690
signed and the<font color="#CCCCCC"> kalam tricks are</font><font color="#E5E5E5"> going to</font>

688
00:31:37,420 --> 00:31:45,120
be filtered but instead<font color="#E5E5E5"> of that</font><font color="#CCCCCC"> object</font>

689
00:31:40,690 --> 00:31:47,710
we could use again as<font color="#CCCCCC"> xso templates and</font>

690
00:31:45,120 --> 00:31:50,139
these work<font color="#CCCCCC"> almost the</font><font color="#E5E5E5"> same you</font><font color="#CCCCCC"> just need</font>

691
00:31:47,710 --> 00:31:54,150
to do two different<font color="#E5E5E5"> cob</font><font color="#CCCCCC"> jex instead of</font>

692
00:31:50,140 --> 00:31:57,160
one and again<font color="#E5E5E5"> you pretty much apply the</font>

693
00:31:54,150 --> 00:32:00,910
the XSL template to itself<font color="#E5E5E5"> or</font><font color="#CCCCCC"> to</font>

694
00:31:57,160 --> 00:32:05,320
<font color="#E5E5E5">anything call transform and that's it</font>

695
00:32:00,910 --> 00:32:08,590
your arbitrary code is<font color="#E5E5E5"> running right so</font>

696
00:32:05,320 --> 00:32:11,350
when<font color="#E5E5E5"> I first showed you this thing this</font>

697
00:32:08,590 --> 00:32:13,899
was a bit<font color="#E5E5E5"> of a lie by omission because</font>

698
00:32:11,350 --> 00:32:15,879
<font color="#CCCCCC">we do understand how a script</font><font color="#E5E5E5"> gets</font>

699
00:32:13,900 --> 00:32:18,550
compiled and runs it's in its own

700
00:32:15,880 --> 00:32:21,070
environment<font color="#E5E5E5"> we do understand that the</font>

701
00:32:18,550 --> 00:32:23,620
host calls wld<font color="#CCCCCC"> PDL from some kind of</font>

702
00:32:21,070 --> 00:32:25,629
import<font color="#E5E5E5"> but we don't exactly understand</font>

703
00:32:23,620 --> 00:32:28,570
how the engine communicates with the

704
00:32:25,630 --> 00:32:33,130
<font color="#CCCCCC">hosts and and asks it hey is this</font>

705
00:32:28,570 --> 00:32:36,189
allowed and the answer is there is<font color="#CCCCCC"> no</font>

706
00:32:33,130 --> 00:32:38,320
single implementation<font color="#E5E5E5"> and there are a</font>

707
00:32:36,190 --> 00:32:42,760
couple<font color="#CCCCCC"> of different ones</font><font color="#E5E5E5"> and this</font>

708
00:32:38,320 --> 00:32:46,540
actually led<font color="#CCCCCC"> to type of vulnerability</font><font color="#E5E5E5"> so</font>

709
00:32:42,760 --> 00:32:48,250
here we have to call stacks<font color="#E5E5E5"> that</font><font color="#CCCCCC"> show</font>

710
00:32:46,540 --> 00:32:49,960
two<font color="#CCCCCC"> different implementations</font><font color="#E5E5E5"> now you</font>

711
00:32:48,250 --> 00:32:53,200
could<font color="#E5E5E5"> actually look at the disassembly</font>

712
00:32:49,960 --> 00:32:54,640
<font color="#CCCCCC">but you you but it's</font><font color="#E5E5E5"> actually easier to</font>

713
00:32:53,200 --> 00:32:57,360
just look at the call stacks and

714
00:32:54,640 --> 00:33:01,030
understand why the vulnerability happens

715
00:32:57,360 --> 00:33:04,179
<font color="#E5E5E5">so in the upper image we have</font><font color="#CCCCCC"> jscript</font>

716
00:33:01,030 --> 00:33:06,970
<font color="#CCCCCC">9gl running under the</font><font color="#E5E5E5"> MS HTML engine as</font>

717
00:33:04,180 --> 00:33:10,210
<font color="#CCCCCC">the scripting host and we see that the</font>

718
00:33:06,970 --> 00:33:12,280
script engine<font color="#E5E5E5"> calls</font><font color="#CCCCCC"> function called</font><font color="#E5E5E5"> can</font>

719
00:33:10,210 --> 00:33:16,780
objects run and relinquishes<font color="#E5E5E5"> extra</font>

720
00:33:12,280 --> 00:33:18,520
execution<font color="#CCCCCC"> - MS HTML which runs function</font>

721
00:33:16,780 --> 00:33:20,830
called host query<font color="#CCCCCC"> custom</font><font color="#E5E5E5"> policy which</font>

722
00:33:18,520 --> 00:33:23,710
does a couple<font color="#E5E5E5"> of different</font><font color="#CCCCCC"> checks</font>

723
00:33:20,830 --> 00:33:26,740
on a<font color="#CCCCCC"> comm object and it's subsequently</font>

724
00:33:23,710 --> 00:33:30,280
after after another call calls or is

725
00:33:26,740 --> 00:33:34,059
class allowed method which is not

726
00:33:30,280 --> 00:33:36,250
exactly<font color="#CCCCCC"> the case with</font><font color="#E5E5E5"> with the bottom</font>

727
00:33:34,059 --> 00:33:38,410
picture<font color="#E5E5E5"> here we have a</font><font color="#CCCCCC"> script</font><font color="#E5E5E5"> DLL</font>

728
00:33:36,250 --> 00:33:40,720
running<font color="#CCCCCC"> under C script and we see that</font>

729
00:33:38,410 --> 00:33:44,500
we have<font color="#CCCCCC"> this</font><font color="#E5E5E5"> function</font><font color="#CCCCCC"> called get object</font>

730
00:33:40,720 --> 00:33:48,250
from probe ID<font color="#E5E5E5"> and it directly calls is</font>

731
00:33:44,500 --> 00:33:51,070
class allowed on<font color="#E5E5E5"> C script so this means</font>

732
00:33:48,250 --> 00:33:54,429
we<font color="#CCCCCC"> have two different approaches MS HTML</font>

733
00:33:51,070 --> 00:33:56,439
says well I'm responsible for device

734
00:33:54,429 --> 00:33:58,720
guard<font color="#E5E5E5"> I'm gonna call his class allowed</font>

735
00:33:56,440 --> 00:34:01,540
each time<font color="#E5E5E5"> somebody's gonna ask something</font>

736
00:33:58,720 --> 00:34:05,140
about<font color="#CCCCCC"> cobb object safety</font><font color="#E5E5E5"> so this is my</font>

737
00:34:01,540 --> 00:34:07,809
responsibility while<font color="#CCCCCC"> C</font><font color="#E5E5E5"> script</font><font color="#CCCCCC"> what it</font>

738
00:34:05,140 --> 00:34:10,510
does is says well here's a pointer to is

739
00:34:07,809 --> 00:34:13,060
class<font color="#CCCCCC"> allowed you're a bunch of adults</font>

740
00:34:10,510 --> 00:34:14,919
<font color="#CCCCCC">you could just use this pointer whenever</font>

741
00:34:13,060 --> 00:34:17,560
you want to<font color="#CCCCCC"> verify a class is allowed</font>

742
00:34:14,918 --> 00:34:20,168
and basically<font color="#E5E5E5"> throws the responsibility</font>

743
00:34:17,560 --> 00:34:22,360
<font color="#E5E5E5">on the scripting engine now both of</font>

744
00:34:20,168 --> 00:34:25,060
<font color="#E5E5E5">these approaches work because you know</font>

745
00:34:22,360 --> 00:34:28,330
the<font color="#E5E5E5"> the function gets called</font><font color="#CCCCCC"> eventually</font>

746
00:34:25,060 --> 00:34:32,049
and everything is fine as long as<font color="#E5E5E5"> the</font>

747
00:34:28,330 --> 00:34:34,600
scripting engine developers know of both

748
00:34:32,050 --> 00:34:37,149
approaches and this<font color="#E5E5E5"> is not the case with</font>

749
00:34:34,600 --> 00:34:41,009
<font color="#CCCCCC">Jacob</font><font color="#E5E5E5"> 9 it was actually only meant to</font>

750
00:34:37,149 --> 00:34:44,949
<font color="#E5E5E5">run under</font><font color="#CCCCCC"> MS HTML</font><font color="#E5E5E5"> because it's basically</font>

751
00:34:41,010 --> 00:34:47,470
the latest<font color="#E5E5E5"> Internet Explorer engine so</font>

752
00:34:44,949 --> 00:34:50,549
the developers of<font color="#E5E5E5"> jscript 9 made an</font>

753
00:34:47,469 --> 00:34:54,330
assumption that the scripting host is

754
00:34:50,550 --> 00:34:58,330
responsible for<font color="#CCCCCC"> calling is class allowed</font>

755
00:34:54,330 --> 00:35:02,020
meaning that<font color="#CCCCCC"> Jacob</font><font color="#E5E5E5"> 9 never calls it by</font>

756
00:34:58,330 --> 00:35:04,450
itself<font color="#E5E5E5"> now we can make it run using</font><font color="#CCCCCC"> a</font>

757
00:35:02,020 --> 00:35:07,180
pretty simple trick<font color="#E5E5E5"> under let's</font><font color="#CCCCCC"> say C</font>

758
00:35:04,450 --> 00:35:10,299
<font color="#E5E5E5">script so now we have two different</font>

759
00:35:07,180 --> 00:35:13,270
<font color="#CCCCCC">components</font><font color="#E5E5E5"> jscript 9 says well</font><font color="#CCCCCC"> i rely on</font>

760
00:35:10,300 --> 00:35:18,310
<font color="#E5E5E5">my host to run</font><font color="#CCCCCC"> his class</font><font color="#E5E5E5"> allowed</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> MS</font>

761
00:35:13,270 --> 00:35:20,050
<font color="#CCCCCC">HTML and</font><font color="#E5E5E5"> C script says well I rely on</font>

762
00:35:18,310 --> 00:35:22,630
<font color="#E5E5E5">the scripting engine to run as glass</font>

763
00:35:20,050 --> 00:35:25,600
<font color="#E5E5E5">allowed so nobody runs</font><font color="#CCCCCC"> as class allowed</font>

764
00:35:22,630 --> 00:35:28,600
at all<font color="#CCCCCC"> meaning that it's never called</font>

765
00:35:25,600 --> 00:35:32,589
<font color="#E5E5E5">nothing is verified and object creation</font>

766
00:35:28,600 --> 00:35:34,009
is just<font color="#E5E5E5"> goes on as</font><font color="#CCCCCC"> usual</font><font color="#E5E5E5"> no checks</font>

767
00:35:32,590 --> 00:35:37,670
whatsoever

768
00:35:34,010 --> 00:35:41,090
and we're bypassing device guard so here

769
00:35:37,670 --> 00:35:43,250
we have me trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> run</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> script with J</font>

770
00:35:41,090 --> 00:35:45,770
with a<font color="#CCCCCC"> JavaScript file</font><font color="#E5E5E5"> that tries to</font><font color="#CCCCCC"> run</font>

771
00:35:43,250 --> 00:35:48,500
calculator<font color="#E5E5E5"> just</font><font color="#CCCCCC"> the normal way</font><font color="#E5E5E5"> and we</font>

772
00:35:45,770 --> 00:35:51,920
have this automation<font color="#CCCCCC"> server</font><font color="#E5E5E5"> can't create</font>

773
00:35:48,500 --> 00:35:53,840
object<font color="#E5E5E5"> error now this is expected</font>

774
00:35:51,920 --> 00:35:55,640
behavior because that's what device

775
00:35:53,840 --> 00:35:58,130
<font color="#CCCCCC">guard does we can't create W script</font>

776
00:35:55,640 --> 00:36:00,799
shell we<font color="#CCCCCC"> can't create and we can't use</font>

777
00:35:58,130 --> 00:36:02,390
<font color="#E5E5E5">it to run calculator but C script and W</font>

778
00:36:00,800 --> 00:36:05,270
script<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> have this very nice</font>

779
00:36:02,390 --> 00:36:07,129
parameter /e that receives the name of

780
00:36:05,270 --> 00:36:09,410
the friendly name the<font color="#E5E5E5"> probe ID of a</font><font color="#CCCCCC"> calm</font>

781
00:36:07,130 --> 00:36:11,060
object--<font color="#CCCCCC"> or the</font><font color="#E5E5E5"> gooood as a string of a</font>

782
00:36:09,410 --> 00:36:13,790
coop<font color="#CCCCCC"> jecht and says</font><font color="#E5E5E5"> I'm going to use</font>

783
00:36:11,060 --> 00:36:17,000
this as my scripting engine so<font color="#E5E5E5"> we could</font>

784
00:36:13,790 --> 00:36:21,230
simply<font color="#E5E5E5"> give it the jscript</font><font color="#CCCCCC"> 9 dot d</font><font color="#E5E5E5"> ll</font>

785
00:36:17,000 --> 00:36:24,619
scripting engine<font color="#E5E5E5"> gooood as the parameter</font>

786
00:36:21,230 --> 00:36:27,200
<font color="#E5E5E5">and this will force C</font><font color="#CCCCCC"> script to use</font><font color="#E5E5E5"> J</font>

787
00:36:24,619 --> 00:36:29,930
script and triggering or vulnerability

788
00:36:27,200 --> 00:36:32,899
so<font color="#E5E5E5"> is class loud is never called</font>

789
00:36:29,930 --> 00:36:34,490
anywhere and we can run<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> now of</font>

790
00:36:32,900 --> 00:36:37,330
course I'm running calculator you could

791
00:36:34,490 --> 00:36:40,490
<font color="#E5E5E5">use dotnet J script and this is</font>

792
00:36:37,330 --> 00:36:44,000
absolutely unprivileged<font color="#CCCCCC"> and it worked</font>

793
00:36:40,490 --> 00:36:46,459
<font color="#E5E5E5">anywhere until</font><font color="#CCCCCC"> november now we could</font>

794
00:36:44,000 --> 00:36:50,180
actually do the same thing<font color="#CCCCCC"> about using</font>

795
00:36:46,460 --> 00:36:52,760
scriptlets because<font color="#E5E5E5"> SCR Abdi ll the</font>

796
00:36:50,180 --> 00:36:54,950
windows<font color="#E5E5E5"> scriptlet host actually</font><font color="#CCCCCC"> works</font>

797
00:36:52,760 --> 00:36:57,140
exactly the same<font color="#E5E5E5"> as</font><font color="#CCCCCC"> c script meaning</font>

798
00:36:54,950 --> 00:36:59,210
<font color="#E5E5E5">that</font><font color="#CCCCCC"> it's relinquishes responsibility</font>

799
00:36:57,140 --> 00:37:04,490
for calling is class allowed to the

800
00:36:59,210 --> 00:37:07,940
scripting engine<font color="#E5E5E5"> and that means that if</font>

801
00:37:04,490 --> 00:37:10,549
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> able to load a script</font><font color="#E5E5E5"> 9 into</font><font color="#CCCCCC"> STR</font>

802
00:37:07,940 --> 00:37:13,790
<font color="#CCCCCC">a</font><font color="#E5E5E5"> bol as a host you</font><font color="#CCCCCC"> can again circumvent</font>

803
00:37:10,550 --> 00:37:15,790
<font color="#E5E5E5">all of the device guard checks</font><font color="#CCCCCC"> the only</font>

804
00:37:13,790 --> 00:37:19,279
additional<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that you need</font><font color="#E5E5E5"> to do is</font>

805
00:37:15,790 --> 00:37:24,890
actually<font color="#E5E5E5"> register a prop ID a friendly</font>

806
00:37:19,280 --> 00:37:28,310
name for J step 9 because<font color="#CCCCCC"> STR</font><font color="#E5E5E5"> optional</font>

807
00:37:24,890 --> 00:37:30,680
does not know how to<font color="#E5E5E5"> use</font><font color="#CCCCCC"> goods so all</font>

808
00:37:28,310 --> 00:37:33,320
you<font color="#E5E5E5"> need to do is write</font><font color="#CCCCCC"> your own strip</font>

809
00:37:30,680 --> 00:37:37,669
<font color="#CCCCCC">let say the</font><font color="#E5E5E5"> language is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> J script but</font>

810
00:37:33,320 --> 00:37:41,090
also J script and then<font color="#E5E5E5"> register also</font><font color="#CCCCCC"> J</font>

811
00:37:37,670 --> 00:37:43,820
script has a real<font color="#E5E5E5"> calm object</font><font color="#CCCCCC"> to to</font>

812
00:37:41,090 --> 00:37:46,609
point to our class ID go ahead of

813
00:37:43,820 --> 00:37:47,950
jscript 9 and then you can draw on<font color="#E5E5E5"> Vegas</font>

814
00:37:46,609 --> 00:37:50,150
<font color="#E5E5E5">VR</font>

815
00:37:47,950 --> 00:37:52,460
using the now<font color="#E5E5E5"> pretty well-known</font>

816
00:37:50,150 --> 00:37:56,600
<font color="#E5E5E5">execution method and this time it will</font>

817
00:37:52,460 --> 00:37:58,310
circumvent the buys<font color="#CCCCCC"> guard and you I'm</font>

818
00:37:56,600 --> 00:38:01,610
doing this<font color="#E5E5E5"> locally but you could do this</font>

819
00:37:58,310 --> 00:38:06,350
<font color="#E5E5E5">from like a URL</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> something so you can</font>

820
00:38:01,610 --> 00:38:08,750
make it<font color="#CCCCCC"> Palace so this is basically the</font>

821
00:38:06,350 --> 00:38:11,270
<font color="#E5E5E5">one vulnerability the one real one</font>

822
00:38:08,750 --> 00:38:15,500
vulnerability that got a<font color="#E5E5E5"> CV</font><font color="#CCCCCC"> that was</font>

823
00:38:11,270 --> 00:38:17,240
closed<font color="#CCCCCC"> in November but there's actually</font>

824
00:38:15,500 --> 00:38:20,390
a more systemic problem with device

825
00:38:17,240 --> 00:38:26,029
guard<font color="#E5E5E5"> that allows me today to pretty</font>

826
00:38:20,390 --> 00:38:28,580
much ignore most patches for device

827
00:38:26,030 --> 00:38:30,440
guard bypasses but I am as of today

828
00:38:28,580 --> 00:38:32,180
<font color="#CCCCCC">still in</font><font color="#E5E5E5"> contact with Microsoft and</font><font color="#CCCCCC"> I'm</font>

829
00:38:30,440 --> 00:38:35,150
not really<font color="#E5E5E5"> going to drop a zero day</font>

830
00:38:32,180 --> 00:38:38,020
today so sorry about<font color="#CCCCCC"> that but I really</font>

831
00:38:35,150 --> 00:38:41,360
<font color="#CCCCCC">hope</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I could</font><font color="#E5E5E5"> update</font><font color="#CCCCCC"> my slides a</font>

832
00:38:38,020 --> 00:38:43,100
couple of<font color="#E5E5E5"> months from now and change</font>

833
00:38:41,360 --> 00:38:45,290
this redacted<font color="#E5E5E5"> to something a bit</font><font color="#CCCCCC"> more</font>

834
00:38:43,100 --> 00:38:47,930
meaningful<font color="#E5E5E5"> it's actually pretty</font>

835
00:38:45,290 --> 00:38:51,230
technologically boring<font color="#E5E5E5"> even even if it's</font>

836
00:38:47,930 --> 00:38:55,310
<font color="#CCCCCC">very impactful so story for the redacted</font>

837
00:38:51,230 --> 00:38:59,480
stuff so this is pretty<font color="#E5E5E5"> much it for</font><font color="#CCCCCC"> the</font>

838
00:38:55,310 --> 00:39:01,250
<font color="#E5E5E5">bypasses themselves but well what if you</font>

839
00:38:59,480 --> 00:39:04,460
don't<font color="#E5E5E5"> use the Vice guard like pretty</font>

840
00:39:01,250 --> 00:39:07,670
much everybody<font color="#E5E5E5"> what can you gain from</font>

841
00:39:04,460 --> 00:39:12,410
these weird techniques that<font color="#CCCCCC"> I've just</font>

842
00:39:07,670 --> 00:39:14,840
shown so first of all this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a</font>

843
00:39:12,410 --> 00:39:18,290
couple of<font color="#E5E5E5"> less known and I think</font><font color="#CCCCCC"> most of</font>

844
00:39:14,840 --> 00:39:21,080
them<font color="#E5E5E5"> unpublished new execution</font>

845
00:39:18,290 --> 00:39:22,820
techniques<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> always good to</font><font color="#CCCCCC"> know</font>

846
00:39:21,080 --> 00:39:25,130
that you can execute things<font color="#E5E5E5"> in a way</font>

847
00:39:22,820 --> 00:39:29,570
that<font color="#E5E5E5"> defenders blue</font><font color="#CCCCCC"> teens don't</font>

848
00:39:25,130 --> 00:39:31,580
recognize so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have a couple</font><font color="#CCCCCC"> of new</font>

849
00:39:29,570 --> 00:39:33,680
lateral movement methods<font color="#CCCCCC"> some of them</font>

850
00:39:31,580 --> 00:39:36,920
are far less which<font color="#E5E5E5"> is also which is</font>

851
00:39:33,680 --> 00:39:41,540
always nice and actually the jscript

852
00:39:36,920 --> 00:39:43,820
<font color="#CCCCCC">nine exploit is also an msi bypass and</font>

853
00:39:41,540 --> 00:39:47,000
this was not and<font color="#CCCCCC"> probably will not get</font>

854
00:39:43,820 --> 00:39:49,400
fixed<font color="#E5E5E5"> because earlier today</font><font color="#CCCCCC"> had a talk</font>

855
00:39:47,000 --> 00:39:51,080
with<font color="#E5E5E5"> carlos perez and he said he was</font>

856
00:39:49,400 --> 00:39:52,640
teaching<font color="#E5E5E5"> this a Maasai bypass for a</font>

857
00:39:51,080 --> 00:39:56,480
couple<font color="#E5E5E5"> of years in his PowerShell course</font>

858
00:39:52,640 --> 00:39:59,240
<font color="#E5E5E5">and he told Microsoft about it's quite a</font>

859
00:39:56,480 --> 00:40:01,640
while ago<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> not going away</font><font color="#E5E5E5"> so</font>

860
00:39:59,240 --> 00:40:02,899
if you want<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> w script or c</font>

861
00:40:01,640 --> 00:40:05,359
script or whatever<font color="#E5E5E5"> and you're afraid of</font>

862
00:40:02,900 --> 00:40:08,980
<font color="#E5E5E5">a massage just use the jscript</font><font color="#CCCCCC"> 9 trick</font>

863
00:40:05,359 --> 00:40:11,569
and<font color="#E5E5E5"> no</font><font color="#CCCCCC"> aim is</font><font color="#E5E5E5"> high for you</font><font color="#CCCCCC"> and that's it</font>

864
00:40:08,980 --> 00:40:13,910
<font color="#E5E5E5">and I thought about</font><font color="#CCCCCC"> it and thought</font><font color="#E5E5E5"> and</font>

865
00:40:11,569 --> 00:40:16,369
found out you could you could use a very

866
00:40:13,910 --> 00:40:19,220
similar trick to again<font color="#E5E5E5"> bypassing</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Masai</font>

867
00:40:16,369 --> 00:40:21,890
because it's not<font color="#E5E5E5"> enough that there are</font>

868
00:40:19,220 --> 00:40:24,230
<font color="#E5E5E5">two active script JavaScript</font>

869
00:40:21,890 --> 00:40:26,299
implementations<font color="#E5E5E5"> there are made natively</font>

870
00:40:24,230 --> 00:40:29,720
three active script based<font color="#CCCCCC"> j/s</font>

871
00:40:26,299 --> 00:40:32,329
implementations<font color="#CCCCCC"> now chakra DLL is as</font>

872
00:40:29,720 --> 00:40:34,730
another library less related<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

873
00:40:32,329 --> 00:40:36,740
other<font color="#E5E5E5"> two</font><font color="#CCCCCC"> and it actually has no ActiveX</font>

874
00:40:34,730 --> 00:40:38,869
functionality of itself<font color="#E5E5E5"> meaning that</font>

875
00:40:36,740 --> 00:40:41,660
well fine<font color="#E5E5E5"> don't have any MSI but I also</font>

876
00:40:38,869 --> 00:40:44,109
don't have<font color="#CCCCCC"> calm objects so I can't</font>

877
00:40:41,660 --> 00:40:47,359
really interact<font color="#E5E5E5"> with the machine itself</font>

878
00:40:44,109 --> 00:40:50,299
<font color="#E5E5E5">but if it's run under W script or C</font>

879
00:40:47,359 --> 00:40:52,940
script<font color="#E5E5E5"> as the scripting host it actually</font>

880
00:40:50,299 --> 00:40:56,538
provides an object in a method<font color="#E5E5E5"> that</font>

881
00:40:52,940 --> 00:40:59,240
<font color="#CCCCCC">allows you to</font><font color="#E5E5E5"> create arbitrary</font><font color="#CCCCCC"> cobb jex</font>

882
00:40:56,539 --> 00:41:01,880
of your own so instead of using new

883
00:40:59,240 --> 00:41:03,529
ActiveX<font color="#E5E5E5"> object you just</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> W script</font>

884
00:41:01,880 --> 00:41:06,920
create object which is a function

885
00:41:03,529 --> 00:41:09,890
<font color="#E5E5E5">provided by the host and create objects</font>

886
00:41:06,920 --> 00:41:11,960
anyway now this is not another device

887
00:41:09,890 --> 00:41:14,500
guard vulnerability because the

888
00:41:11,960 --> 00:41:17,750
developers of<font color="#E5E5E5"> C and W script</font><font color="#CCCCCC"> actually</font>

889
00:41:14,500 --> 00:41:21,140
<font color="#CCCCCC">wired</font><font color="#E5E5E5"> W script doctor</font><font color="#CCCCCC"> via the object to</font>

890
00:41:17,750 --> 00:41:22,730
the<font color="#E5E5E5"> is class allowed function so if you</font>

891
00:41:21,140 --> 00:41:24,920
try to<font color="#E5E5E5"> use this under the</font><font color="#CCCCCC"> Vice car it</font>

892
00:41:22,730 --> 00:41:28,490
won't<font color="#E5E5E5"> work but if you try to use this</font>

893
00:41:24,920 --> 00:41:30,799
just on a<font color="#CCCCCC"> normal machine</font><font color="#E5E5E5"> this will be</font>

894
00:41:28,490 --> 00:41:35,569
another pretty obscure<font color="#CCCCCC"> inside bypass</font>

895
00:41:30,799 --> 00:41:37,788
which is also<font color="#E5E5E5"> nice and you can do some</font>

896
00:41:35,569 --> 00:41:40,759
neat tricks like taking jscript or

897
00:41:37,789 --> 00:41:42,740
chakra<font color="#E5E5E5"> DLL not making it do anything</font>

898
00:41:40,759 --> 00:41:47,420
malicious by itself but<font color="#CCCCCC"> actually use it</font>

899
00:41:42,740 --> 00:41:50,479
<font color="#CCCCCC">to drive excel using using Excel for</font>

900
00:41:47,420 --> 00:41:54,039
macros<font color="#CCCCCC"> so you have an instance of excel</font>

901
00:41:50,480 --> 00:41:56,839
<font color="#E5E5E5">without any file pretty much executing</font>

902
00:41:54,039 --> 00:42:00,109
<font color="#E5E5E5">pretty much executing arbitrary</font><font color="#CCCCCC"> when API</font>

903
00:41:56,839 --> 00:42:06,349
commands without any injections without

904
00:42:00,109 --> 00:42:09,200
anything<font color="#CCCCCC"> and</font><font color="#E5E5E5"> and you have an instance of</font>

905
00:42:06,349 --> 00:42:13,790
of<font color="#E5E5E5"> W script not really</font><font color="#CCCCCC"> interacting with</font>

906
00:42:09,200 --> 00:42:15,919
in with the operating<font color="#E5E5E5"> system</font><font color="#CCCCCC"> that much</font>

907
00:42:13,790 --> 00:42:18,230
and I don't<font color="#E5E5E5"> know have</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> ever seen like</font>

908
00:42:15,920 --> 00:42:20,270
<font color="#CCCCCC">a</font><font color="#E5E5E5"> single instance of Excel not loading</font>

909
00:42:18,230 --> 00:42:21,920
<font color="#CCCCCC">any file not getting injected</font><font color="#E5E5E5"> or</font>

910
00:42:20,270 --> 00:42:25,100
anything<font color="#E5E5E5"> in fact</font><font color="#CCCCCC"> oh wow this is</font><font color="#E5E5E5"> super</font>

911
00:42:21,920 --> 00:42:28,270
<font color="#CCCCCC">suspicious I think there are things that</font>

912
00:42:25,100 --> 00:42:32,350
are a<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more suspicious than that</font><font color="#E5E5E5"> so</font>

913
00:42:28,270 --> 00:42:37,370
now let's move on<font color="#E5E5E5"> to a quick conclusion</font>

914
00:42:32,350 --> 00:42:40,040
<font color="#E5E5E5">so first of all I've shown a couple</font><font color="#CCCCCC"> of</font>

915
00:42:37,370 --> 00:42:43,069
<font color="#E5E5E5">pretty different techniques but actually</font>

916
00:42:40,040 --> 00:42:45,050
if<font color="#E5E5E5"> you if you're monitoring</font><font color="#CCCCCC"> your network</font>

917
00:42:43,070 --> 00:42:48,470
even for a bit<font color="#CCCCCC"> you</font><font color="#E5E5E5"> probably have most of</font>

918
00:42:45,050 --> 00:42:50,480
the optics that<font color="#E5E5E5"> you need to detect all</font>

919
00:42:48,470 --> 00:42:51,770
these<font color="#E5E5E5"> techniques because almost</font>

920
00:42:50,480 --> 00:42:54,880
everything could<font color="#CCCCCC"> be detected</font><font color="#E5E5E5"> using</font>

921
00:42:51,770 --> 00:42:57,800
<font color="#CCCCCC">command line</font><font color="#E5E5E5"> or loaded dll's</font>

922
00:42:54,880 --> 00:42:59,570
or maybe a tiny bit<font color="#E5E5E5"> of registry</font>

923
00:42:57,800 --> 00:43:02,660
monitoring you don't need to find some

924
00:42:59,570 --> 00:43:05,750
kind<font color="#CCCCCC"> of obscure way to to view what's</font>

925
00:43:02,660 --> 00:43:09,500
going on so all you need<font color="#E5E5E5"> to do is to</font>

926
00:43:05,750 --> 00:43:12,320
actually<font color="#E5E5E5"> recognize these types of of</font>

927
00:43:09,500 --> 00:43:13,460
attacks<font color="#E5E5E5"> and you only need to implement</font>

928
00:43:12,320 --> 00:43:16,100
you probably only<font color="#E5E5E5"> need to implement</font>

929
00:43:13,460 --> 00:43:20,570
detection logic and not<font color="#E5E5E5"> new collection</font>

930
00:43:16,100 --> 00:43:22,069
mechanisms<font color="#CCCCCC"> I have a I have</font><font color="#E5E5E5"> a couple of</font>

931
00:43:20,570 --> 00:43:25,160
<font color="#E5E5E5">thoughts about how the features should</font>

932
00:43:22,070 --> 00:43:28,940
develop and the first<font color="#E5E5E5"> is please lock</font>

933
00:43:25,160 --> 00:43:30,379
down office because again if we won't if

934
00:43:28,940 --> 00:43:32,780
we don't want<font color="#CCCCCC"> device guard to be a</font>

935
00:43:30,380 --> 00:43:35,030
server feature<font color="#E5E5E5"> we really need to look at</font>

936
00:43:32,780 --> 00:43:37,340
<font color="#E5E5E5">like the most ubiquitous Microsoft made</font>

937
00:43:35,030 --> 00:43:38,870
software package<font color="#E5E5E5"> and maybe lock it down</font>

938
00:43:37,340 --> 00:43:43,040
<font color="#CCCCCC">too</font>

939
00:43:38,870 --> 00:43:44,890
also I'm not exactly sure<font color="#E5E5E5"> I</font><font color="#CCCCCC"> abuse the</font>

940
00:43:43,040 --> 00:43:46,640
only bug<font color="#E5E5E5"> that stems for those</font>

941
00:43:44,890 --> 00:43:52,190
inconsistent<font color="#E5E5E5"> device guard</font>

942
00:43:46,640 --> 00:43:54,410
implementations<font color="#E5E5E5"> and even now this and</font>

943
00:43:52,190 --> 00:43:56,540
even now this patch<font color="#E5E5E5"> it stops this</font>

944
00:43:54,410 --> 00:43:59,930
vulnerability<font color="#E5E5E5"> but it doesn't really make</font>

945
00:43:56,540 --> 00:44:01,910
<font color="#E5E5E5">a consistent implementations so we still</font>

946
00:43:59,930 --> 00:44:03,919
have a couple<font color="#E5E5E5"> of differences which could</font>

947
00:44:01,910 --> 00:44:07,430
be abused and<font color="#CCCCCC"> this is probably what I'm</font>

948
00:44:03,920 --> 00:44:09,470
gonna do when you go<font color="#E5E5E5"> home and</font><font color="#CCCCCC"> also well</font>

949
00:44:07,430 --> 00:44:11,509
let's say you want to<font color="#E5E5E5"> use Java on your</font>

950
00:44:09,470 --> 00:44:13,370
machine<font color="#CCCCCC"> well that's it device guard</font><font color="#E5E5E5"> is</font>

951
00:44:11,510 --> 00:44:15,470
blow<font color="#CCCCCC"> it's broken</font><font color="#E5E5E5"> because it's not a PE</font>

952
00:44:13,370 --> 00:44:18,140
file it's not a script and it's not

953
00:44:15,470 --> 00:44:20,600
<font color="#E5E5E5">PowerShell so it would be really nice</font><font color="#CCCCCC"> to</font>

954
00:44:18,140 --> 00:44:23,569
have like some<font color="#CCCCCC"> kind of API</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> toolkit to</font>

955
00:44:20,600 --> 00:44:26,509
be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> give to software vendors</font>

956
00:44:23,570 --> 00:44:27,260
<font color="#CCCCCC">especially like scripting interpreter</font>

957
00:44:26,510 --> 00:44:29,599
and

958
00:44:27,260 --> 00:44:32,359
<font color="#CCCCCC">jittered language vendors to say well</font>

959
00:44:29,599 --> 00:44:34,579
here's how you<font color="#E5E5E5"> can implement application</font>

960
00:44:32,359 --> 00:44:36,529
whitelisting<font color="#CCCCCC"> on top of device guards</font><font color="#E5E5E5"> so</font>

961
00:44:34,579 --> 00:44:39,859
<font color="#CCCCCC">I won't</font><font color="#E5E5E5"> be afraid to use Java on a</font>

962
00:44:36,530 --> 00:44:43,460
device<font color="#CCCCCC"> guard environment</font><font color="#E5E5E5"> and this is</font>

963
00:44:39,859 --> 00:44:46,369
pretty much<font color="#E5E5E5"> it</font><font color="#CCCCCC"> for my talk because of</font>

964
00:44:43,460 --> 00:44:48,109
<font color="#E5E5E5">time constraints I couldn't I couldn't</font>

965
00:44:46,369 --> 00:44:51,109
<font color="#E5E5E5">really reference all of the previous</font>

966
00:44:48,109 --> 00:44:53,630
work because there's tons<font color="#E5E5E5"> but if you're</font>

967
00:44:51,109 --> 00:44:55,549
<font color="#E5E5E5">interested in device guard itself</font><font color="#CCCCCC"> these</font>

968
00:44:53,630 --> 00:44:58,400
<font color="#E5E5E5">are pretty much</font><font color="#CCCCCC"> the people that you</font>

969
00:44:55,550 --> 00:44:59,750
should<font color="#E5E5E5"> follow</font><font color="#CCCCCC"> each of them has a couple</font>

970
00:44:58,400 --> 00:45:02,240
of<font color="#CCCCCC"> very interesting</font><font color="#E5E5E5"> device guard</font>

971
00:44:59,750 --> 00:45:03,920
bypasses and explanation and

972
00:45:02,240 --> 00:45:08,660
explanations about how the<font color="#CCCCCC"> file card is</font>

973
00:45:03,920 --> 00:45:13,030
implemented so follow these guys anyway

974
00:45:08,660 --> 00:45:13,029
this was my<font color="#E5E5E5"> talk so any questions</font>

