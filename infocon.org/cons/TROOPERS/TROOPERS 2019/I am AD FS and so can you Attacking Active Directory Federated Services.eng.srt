1
00:00:01,730 --> 00:00:08,280
welcome back to the ad<font color="#E5E5E5"> security track</font><font color="#CCCCCC"> I</font>

2
00:00:04,520 --> 00:00:10,410
hope you enjoyed your lunch next up we

3
00:00:08,280 --> 00:00:13,320
have duck and Austin who will give a

4
00:00:10,410 --> 00:00:15,629
talk on how<font color="#CCCCCC"> you can compromise ad</font><font color="#E5E5E5"> FS in</font>

5
00:00:13,320 --> 00:00:18,380
Active Directory<font color="#CCCCCC"> and what you can do</font>

6
00:00:15,629 --> 00:00:22,529
with<font color="#E5E5E5"> that as an attacker this H is yours</font>

7
00:00:18,380 --> 00:00:24,538
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> good afternoon everyone thank</font>

8
00:00:22,529 --> 00:00:27,090
you<font color="#CCCCCC"> for</font><font color="#E5E5E5"> attending our talk I am a DFS</font>

9
00:00:24,539 --> 00:00:34,070
and<font color="#E5E5E5"> so can you</font><font color="#CCCCCC"> re becoming the greatest</font>

10
00:00:27,090 --> 00:00:34,070
<font color="#E5E5E5">identity provider we never worked</font><font color="#CCCCCC"> so</font>

11
00:00:34,730 --> 00:00:39,750
<font color="#CCCCCC">yeah so what are</font><font color="#E5E5E5"> we looking to cover</font>

12
00:00:37,710 --> 00:00:42,690
today<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> start by</font><font color="#CCCCCC"> talking about who</font>

13
00:00:39,750 --> 00:00:43,740
we<font color="#CCCCCC"> are so you know all about that</font><font color="#E5E5E5"> we're</font>

14
00:00:42,690 --> 00:00:45,809
gonna talk about<font color="#CCCCCC"> ad FS</font>

15
00:00:43,740 --> 00:00:48,270
how ad FS<font color="#E5E5E5"> actually works it's a bit of a</font>

16
00:00:45,810 --> 00:00:50,420
complex system<font color="#E5E5E5"> how can we actually find</font>

17
00:00:48,270 --> 00:00:53,640
<font color="#CCCCCC">ad FS servers in a target environment</font>

18
00:00:50,420 --> 00:00:54,900
<font color="#E5E5E5">how do we attack ad FS and then the</font>

19
00:00:53,640 --> 00:00:56,580
<font color="#E5E5E5">focus of the talk really how do we</font>

20
00:00:54,900 --> 00:00:59,100
actually<font color="#E5E5E5"> become how do we take over an</font>

21
00:00:56,580 --> 00:01:00,750
ad FS server<font color="#CCCCCC"> we'll talk about some tools</font>

22
00:00:59,100 --> 00:01:02,820
<font color="#E5E5E5">and demos that actually allow us to do</font>

23
00:01:00,750 --> 00:01:04,080
these attacks<font color="#CCCCCC"> and then of course</font><font color="#E5E5E5"> us</font>

24
00:01:02,820 --> 00:01:05,580
being incident responders we're gonna

25
00:01:04,080 --> 00:01:08,340
want to talk<font color="#E5E5E5"> about best practices and</font>

26
00:01:05,580 --> 00:01:09,660
<font color="#CCCCCC">mitigations so by the end of the talk we</font>

27
00:01:08,340 --> 00:01:14,040
hope that you<font color="#E5E5E5"> have a solid</font><font color="#CCCCCC"> understanding</font>

28
00:01:09,660 --> 00:01:15,539
of<font color="#CCCCCC"> AD FS</font><font color="#E5E5E5"> how we can attack ad FS why</font>

29
00:01:14,040 --> 00:01:17,430
it's<font color="#E5E5E5"> actually an important target</font><font color="#CCCCCC"> for us</font>

30
00:01:15,540 --> 00:01:21,180
<font color="#E5E5E5">to attack</font><font color="#CCCCCC"> and of course how to keep it</font>

31
00:01:17,430 --> 00:01:23,250
safe<font color="#CCCCCC"> so my name</font><font color="#E5E5E5"> is Doug</font><font color="#CCCCCC"> Bienstock I'm a</font>

32
00:01:21,180 --> 00:01:25,140
principal consultant at<font color="#E5E5E5"> mandiant where I</font>

33
00:01:23,250 --> 00:01:26,820
am a Incident Response<font color="#E5E5E5"> as well as a</font><font color="#CCCCCC"> Red</font>

34
00:01:25,140 --> 00:01:29,250
<font color="#CCCCCC">Team Lead I've been with the company for</font>

35
00:01:26,820 --> 00:01:30,779
about<font color="#E5E5E5"> four and a half years now my past</font>

36
00:01:29,250 --> 00:01:32,610
year my research has focused<font color="#E5E5E5"> on</font>

37
00:01:30,780 --> 00:01:34,290
organizations and their move<font color="#CCCCCC"> to the</font>

38
00:01:32,610 --> 00:01:36,450
cloud<font color="#E5E5E5"> so I've done</font><font color="#CCCCCC"> some other talks</font>

39
00:01:34,290 --> 00:01:38,340
about<font color="#CCCCCC"> office 365</font><font color="#E5E5E5"> about multi-factor</font>

40
00:01:36,450 --> 00:01:41,880
authentication<font color="#E5E5E5"> and that's really been</font><font color="#CCCCCC"> my</font>

41
00:01:38,340 --> 00:01:44,640
research as<font color="#CCCCCC"> ibly and I am Austin Baker</font>

42
00:01:41,880 --> 00:01:46,619
<font color="#E5E5E5">similar to Doug</font><font color="#CCCCCC"> I do both Incident</font>

43
00:01:44,640 --> 00:01:48,240
Response<font color="#E5E5E5"> / security research and then I</font>

44
00:01:46,620 --> 00:01:49,830
moonlight as<font color="#E5E5E5"> a red teamer every now and</font>

45
00:01:48,240 --> 00:01:52,408
then<font color="#CCCCCC"> I've been at mandiant for five and</font>

46
00:01:49,830 --> 00:01:53,789
<font color="#CCCCCC">a half years part of</font><font color="#E5E5E5"> my responsibilities</font>

47
00:01:52,409 --> 00:01:55,290
I get to teach some classes like

48
00:01:53,790 --> 00:01:57,659
<font color="#E5E5E5">Enterprise Incident Response</font><font color="#CCCCCC"> I enjoy</font>

49
00:01:55,290 --> 00:02:00,780
that<font color="#E5E5E5"> and I also enjoy playing games</font><font color="#CCCCCC"> and</font>

50
00:01:57,659 --> 00:02:02,670
<font color="#E5E5E5">John okay so what</font><font color="#CCCCCC"> actually is a DFS</font>

51
00:02:00,780 --> 00:02:04,920
anyone who reads a lot of Microsoft

52
00:02:02,670 --> 00:02:07,049
documentation knows<font color="#E5E5E5"> that Microsoft loves</font>

53
00:02:04,920 --> 00:02:09,600
to have confusing acronyms<font color="#CCCCCC"> that we get</font>

54
00:02:07,049 --> 00:02:11,220
to<font color="#E5E5E5"> remember so we need to understand</font>

55
00:02:09,600 --> 00:02:14,109
what all<font color="#E5E5E5"> these acronyms</font><font color="#CCCCCC"> mean and how</font>

56
00:02:11,220 --> 00:02:15,340
they<font color="#E5E5E5"> play together</font>

57
00:02:14,110 --> 00:02:17,710
so at<font color="#E5E5E5"> its core Active Directory</font>

58
00:02:15,340 --> 00:02:19,120
Federation services or<font color="#CCCCCC"> ad</font><font color="#E5E5E5"> FS can be</font>

59
00:02:17,710 --> 00:02:21,760
thought<font color="#E5E5E5"> of as a single sign-on solution</font>

60
00:02:19,120 --> 00:02:24,610
<font color="#E5E5E5">that allows users in an organization to</font>

61
00:02:21,760 --> 00:02:27,340
<font color="#E5E5E5">access resources in another organization</font>

62
00:02:24,610 --> 00:02:30,040
<font color="#E5E5E5">even simpler if I'm an organization</font><font color="#CCCCCC"> I</font>

63
00:02:27,340 --> 00:02:32,020
want to give my users the<font color="#CCCCCC"> ability to</font><font color="#E5E5E5"> use</font>

64
00:02:30,040 --> 00:02:34,150
their corporate on-premise credentials

65
00:02:32,020 --> 00:02:36,660
to access<font color="#CCCCCC"> applications and</font><font color="#E5E5E5"> resources</font>

66
00:02:34,150 --> 00:02:39,130
that<font color="#E5E5E5"> are not stored in my</font><font color="#CCCCCC"> own network</font>

67
00:02:36,660 --> 00:02:41,020
<font color="#CCCCCC">it's a central management place for</font>

68
00:02:39,130 --> 00:02:45,040
authentication<font color="#E5E5E5"> identity management and</font>

69
00:02:41,020 --> 00:02:47,890
token issuance<font color="#E5E5E5"> so why do we actually</font>

70
00:02:45,040 --> 00:02:49,720
<font color="#E5E5E5">care about</font><font color="#CCCCCC"> AD FS</font><font color="#E5E5E5"> organizations are</font>

71
00:02:47,890 --> 00:02:51,010
moving<font color="#E5E5E5"> more</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> more of their assets</font>

72
00:02:49,720 --> 00:02:54,370
more and more of their computing power

73
00:02:51,010 --> 00:02:56,500
<font color="#E5E5E5">into the cloud</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> AD can no longer</font>

74
00:02:54,370 --> 00:02:58,390
really be thought of as a security<font color="#CCCCCC"> or as</font>

75
00:02:56,500 --> 00:03:01,260
a data boundary right how many<font color="#CCCCCC"> people</font>

76
00:02:58,390 --> 00:03:03,850
use office<font color="#CCCCCC"> 365 as their email</font><font color="#E5E5E5"> platform</font><font color="#CCCCCC"> a</font>

77
00:03:01,260 --> 00:03:05,200
lot<font color="#E5E5E5"> of hands if you are if you</font><font color="#CCCCCC"> are here</font>

78
00:03:03,850 --> 00:03:08,470
<font color="#E5E5E5">than in the</font><font color="#CCCCCC"> States which is interesting</font>

79
00:03:05,200 --> 00:03:10,690
<font color="#E5E5E5">but still</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> people use the cloud</font><font color="#CCCCCC"> ad</font>

80
00:03:08,470 --> 00:03:13,380
FS<font color="#E5E5E5"> usually in a large organization is</font>

81
00:03:10,690 --> 00:03:15,310
the<font color="#E5E5E5"> gateway</font><font color="#CCCCCC"> to the cloud for users so</font>

82
00:03:13,380 --> 00:03:17,620
<font color="#E5E5E5">our parent company fireEye</font>

83
00:03:15,310 --> 00:03:19,209
we use ad FS<font color="#E5E5E5"> a lot of the organizations</font>

84
00:03:17,620 --> 00:03:21,580
that we do<font color="#CCCCCC"> read</font><font color="#E5E5E5"> teams for they have ad</font>

85
00:03:19,209 --> 00:03:23,799
FS<font color="#E5E5E5"> as well and it's important target for</font>

86
00:03:21,580 --> 00:03:27,070
<font color="#CCCCCC">us</font><font color="#E5E5E5"> because if we can own ad FS</font><font color="#CCCCCC"> if we can</font>

87
00:03:23,799 --> 00:03:28,510
become ad FS<font color="#E5E5E5"> we now own the cloud and as</font>

88
00:03:27,070 --> 00:03:29,980
security practitioners we need to keep

89
00:03:28,510 --> 00:03:32,170
<font color="#E5E5E5">up with this move to the cloud because</font>

90
00:03:29,980 --> 00:03:33,429
attackers are moving there as well<font color="#CCCCCC"> so we</font>

91
00:03:32,170 --> 00:03:35,980
need to be able<font color="#E5E5E5"> to understand what this</font>

92
00:03:33,430 --> 00:03:38,170
<font color="#E5E5E5">means right</font><font color="#CCCCCC"> and and one additional thing</font>

93
00:03:35,980 --> 00:03:40,510
<font color="#E5E5E5">is that as anyone who does pen testing</font>

94
00:03:38,170 --> 00:03:42,100
knows it's not simply a can you get

95
00:03:40,510 --> 00:03:42,790
domain admin it's what you can actually

96
00:03:42,100 --> 00:03:44,019
do with<font color="#E5E5E5"> it</font>

97
00:03:42,790 --> 00:03:46,510
so as more<font color="#E5E5E5"> of those valuable</font><font color="#CCCCCC"> resources</font>

98
00:03:44,019 --> 00:03:48,910
move out of<font color="#E5E5E5"> the actual organization</font><font color="#CCCCCC"> into</font>

99
00:03:46,510 --> 00:03:50,859
the cloud we as attackers<font color="#CCCCCC"> have to keep</font>

100
00:03:48,910 --> 00:03:52,690
motivating security changes<font color="#E5E5E5"> by</font>

101
00:03:50,860 --> 00:03:54,790
demonstrating<font color="#E5E5E5"> that we can still access</font>

102
00:03:52,690 --> 00:03:57,310
those exploiting security flaws<font color="#CCCCCC"> that</font>

103
00:03:54,790 --> 00:04:00,310
still<font color="#E5E5E5"> exist today so now we're gonna</font>

104
00:03:57,310 --> 00:04:01,750
<font color="#E5E5E5">enter a</font><font color="#CCCCCC"> roll win tour of a DFS in about</font>

105
00:04:00,310 --> 00:04:05,290
<font color="#CCCCCC">ten minutes you're</font><font color="#E5E5E5"> gonna become a</font><font color="#CCCCCC"> TFS</font>

106
00:04:01,750 --> 00:04:07,780
experts so the building blocks of a DFS

107
00:04:05,290 --> 00:04:09,548
<font color="#E5E5E5">are claims claims are</font><font color="#CCCCCC"> the currency and</font>

108
00:04:07,780 --> 00:04:10,870
Active Directory Federation services

109
00:04:09,549 --> 00:04:13,090
they<font color="#CCCCCC"> are just statements about</font><font color="#E5E5E5"> a user</font>

110
00:04:10,870 --> 00:04:15,430
<font color="#E5E5E5">things like a user's account</font><font color="#CCCCCC"> name users</font>

111
00:04:13,090 --> 00:04:17,769
<font color="#CCCCCC">email address this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> what a DFS lives</font>

112
00:04:15,430 --> 00:04:20,500
on and these claims are<font color="#E5E5E5"> gonna come from</font>

113
00:04:17,769 --> 00:04:21,820
an attribute store in 99%<font color="#E5E5E5"> of cases your</font>

114
00:04:20,500 --> 00:04:24,160
<font color="#E5E5E5">attribute store is just</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be</font>

115
00:04:21,820 --> 00:04:26,050
active directory and then claims are

116
00:04:24,160 --> 00:04:28,000
operated on<font color="#E5E5E5"> with rules and they're just</font>

117
00:04:26,050 --> 00:04:29,800
business logic<font color="#E5E5E5"> that</font><font color="#CCCCCC"> can take a claim</font>

118
00:04:28,000 --> 00:04:31,570
apply some<font color="#E5E5E5"> sort of</font><font color="#CCCCCC"> condition</font><font color="#E5E5E5"> and then</font>

119
00:04:29,800 --> 00:04:32,800
<font color="#E5E5E5">output a new claim and it's important</font>

120
00:04:31,570 --> 00:04:34,240
<font color="#E5E5E5">for us</font><font color="#CCCCCC"> because we need</font><font color="#E5E5E5"> to know what</font>

121
00:04:32,800 --> 00:04:36,130
<font color="#E5E5E5">these claims are so that we can</font>

122
00:04:34,240 --> 00:04:37,960
understand<font color="#CCCCCC"> what the security tokens are</font>

123
00:04:36,130 --> 00:04:38,380
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> look like we have an example claim</font>

124
00:04:37,960 --> 00:04:40,690
here

125
00:04:38,380 --> 00:04:42,310
our condition<font color="#CCCCCC"> is in red</font><font color="#E5E5E5"> we're looking</font>

126
00:04:40,690 --> 00:04:44,170
for a claim of the type windows account

127
00:04:42,310 --> 00:04:46,000
<font color="#E5E5E5">name</font><font color="#CCCCCC"> so just an authenticated user</font><font color="#E5E5E5"> and</font>

128
00:04:44,170 --> 00:04:47,680
then our statement is in blue<font color="#CCCCCC"> so we're</font>

129
00:04:46,000 --> 00:04:49,900
actually in<font color="#E5E5E5"> a query active directory and</font>

130
00:04:47,680 --> 00:04:51,520
we're gonna look up the users mail

131
00:04:49,900 --> 00:04:53,739
attribute and then<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> issue</font>

132
00:04:51,520 --> 00:04:56,070
that as a claim of this<font color="#E5E5E5"> nice long type</font>

133
00:04:53,740 --> 00:04:58,420
of<font color="#E5E5E5"> email address</font>

134
00:04:56,070 --> 00:04:59,469
<font color="#E5E5E5">all right so talking about claims in</font>

135
00:04:58,420 --> 00:05:00,940
order<font color="#CCCCCC"> to understand</font><font color="#E5E5E5"> how those are</font>

136
00:04:59,470 --> 00:05:03,190
handled<font color="#CCCCCC"> we have to look</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> pipeline</font>

137
00:05:00,940 --> 00:05:05,020
<font color="#CCCCCC">so for</font><font color="#E5E5E5"> example you're</font><font color="#CCCCCC"> going to get a</font>

138
00:05:03,190 --> 00:05:08,110
claim<font color="#E5E5E5"> from Active Directory so I hit</font>

139
00:05:05,020 --> 00:05:10,150
stage<font color="#CCCCCC"> 1a DFS has to determine</font><font color="#E5E5E5"> if the</font>

140
00:05:08,110 --> 00:05:13,600
claim<font color="#CCCCCC"> meets</font><font color="#E5E5E5"> the desired format and</font>

141
00:05:10,150 --> 00:05:14,979
expectation from<font color="#E5E5E5"> that source after</font><font color="#CCCCCC"> it's</font>

142
00:05:13,600 --> 00:05:16,060
determined<font color="#E5E5E5"> that this actually meets that</font>

143
00:05:14,980 --> 00:05:18,250
requirement and<font color="#CCCCCC"> it's going</font><font color="#E5E5E5"> to be</font>

144
00:05:16,060 --> 00:05:19,900
processed<font color="#E5E5E5"> it goes to stage 2</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

145
00:05:18,250 --> 00:05:21,730
where we apply the authorization<font color="#E5E5E5"> rules</font>

146
00:05:19,900 --> 00:05:23,620
we check to<font color="#E5E5E5"> see that the entity</font>

147
00:05:21,730 --> 00:05:25,780
described in the claim is<font color="#CCCCCC"> actually</font>

148
00:05:23,620 --> 00:05:28,210
authorized to<font color="#CCCCCC"> access whatever object is</font>

149
00:05:25,780 --> 00:05:31,090
being discussed<font color="#E5E5E5"> after that authorization</font>

150
00:05:28,210 --> 00:05:32,739
<font color="#CCCCCC">is either confirmed or</font><font color="#E5E5E5"> denied then it</font>

151
00:05:31,090 --> 00:05:34,869
gets passed<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> issuance step where</font>

152
00:05:32,740 --> 00:05:36,940
we<font color="#E5E5E5"> take the claim we transform it in a</font>

153
00:05:34,870 --> 00:05:40,240
particular<font color="#CCCCCC"> way and pass it on</font><font color="#E5E5E5"> to the</font>

154
00:05:36,940 --> 00:05:42,610
relying party<font color="#E5E5E5"> and why this is important</font>

155
00:05:40,240 --> 00:05:44,260
is<font color="#CCCCCC"> because that final step</font><font color="#E5E5E5"> we really as</font>

156
00:05:42,610 --> 00:05:45,729
attackers only care about the final step

157
00:05:44,260 --> 00:05:47,680
<font color="#E5E5E5">the issuance rules what comes out</font><font color="#CCCCCC"> of our</font>

158
00:05:45,729 --> 00:05:49,390
pipeline<font color="#E5E5E5"> this is because these claims</font>

159
00:05:47,680 --> 00:05:51,790
that come<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of the pipeline are used</font>

160
00:05:49,390 --> 00:05:53,830
in our security<font color="#E5E5E5"> tokens</font><font color="#CCCCCC"> and these</font>

161
00:05:51,790 --> 00:05:55,479
security tokens<font color="#E5E5E5"> are what</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> relying</font>

162
00:05:53,830 --> 00:05:57,099
party so I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> use office 365</font>

163
00:05:55,479 --> 00:06:00,039
throughout this talk it's what office

164
00:05:57,100 --> 00:06:01,780
365<font color="#CCCCCC"> actually expects to see in a</font>

165
00:06:00,040 --> 00:06:04,540
security token<font color="#CCCCCC"> so it can</font><font color="#E5E5E5"> make its</font>

166
00:06:01,780 --> 00:06:06,159
<font color="#E5E5E5">authorization decisions and a DFS speaks</font>

167
00:06:04,540 --> 00:06:07,900
<font color="#CCCCCC">to different types of security token</font>

168
00:06:06,160 --> 00:06:10,510
depending on your relying party it's

169
00:06:07,900 --> 00:06:13,479
either gonna<font color="#E5E5E5"> issue saml 1.1 or sam'l 2.0</font>

170
00:06:10,510 --> 00:06:15,340
and again as attackers<font color="#E5E5E5"> and as developers</font>

171
00:06:13,479 --> 00:06:16,570
the nice<font color="#E5E5E5"> thing about sam'l tokens is</font>

172
00:06:15,340 --> 00:06:18,460
that they're standardized right there's

173
00:06:16,570 --> 00:06:20,050
the whole<font color="#E5E5E5"> oasis body that standardized</font>

174
00:06:18,460 --> 00:06:22,030
what these<font color="#CCCCCC"> tokens needs to look</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> as</font>

175
00:06:20,050 --> 00:06:24,100
developers that's good<font color="#CCCCCC"> because we can</font>

176
00:06:22,030 --> 00:06:26,380
now<font color="#CCCCCC"> program any sort of application to</font>

177
00:06:24,100 --> 00:06:28,330
federate with<font color="#CCCCCC"> a DFS as attackers that</font>

178
00:06:26,380 --> 00:06:30,760
means we have a basis to form templates

179
00:06:28,330 --> 00:06:32,409
we have a basis<font color="#CCCCCC"> for our</font><font color="#E5E5E5"> attack and how</font>

180
00:06:30,760 --> 00:06:34,180
<font color="#E5E5E5">these tokens are actually transmitted</font>

181
00:06:32,410 --> 00:06:36,940
<font color="#CCCCCC">between the two parties</font><font color="#E5E5E5"> is also</font>

182
00:06:34,180 --> 00:06:38,830
standardized so<font color="#CCCCCC"> sam'l consumers they're</font>

183
00:06:36,940 --> 00:06:40,810
generally going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take it as a</font><font color="#CCCCCC"> post</font>

184
00:06:38,830 --> 00:06:41,859
parameter and that<font color="#E5E5E5"> post parameter is</font>

185
00:06:40,810 --> 00:06:43,270
sam'l response

186
00:06:41,860 --> 00:06:45,220
so we already<font color="#E5E5E5"> sort of have an</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> of</font>

187
00:06:43,270 --> 00:06:49,090
how we might be able<font color="#CCCCCC"> to become an ad FS</font>

188
00:06:45,220 --> 00:06:50,620
server<font color="#E5E5E5"> so I mentioned that claim the</font>

189
00:06:49,090 --> 00:06:51,849
rules are very<font color="#E5E5E5"> important for us as</font>

190
00:06:50,620 --> 00:06:53,650
attackers because they help us

191
00:06:51,850 --> 00:06:55,750
understand what these security tokens

192
00:06:53,650 --> 00:06:57,520
are going to look<font color="#E5E5E5"> like</font><font color="#CCCCCC"> so at the end of</font>

193
00:06:55,750 --> 00:07:00,100
the day<font color="#CCCCCC"> ad</font><font color="#E5E5E5"> FS is going to take a claim</font>

194
00:06:57,520 --> 00:07:02,080
<font color="#E5E5E5">and it's going to translate it into an</font>

195
00:07:00,100 --> 00:07:04,060
attribute<font color="#CCCCCC"> in sam'l Towe</font><font color="#E5E5E5"> talk this is</font>

196
00:07:02,080 --> 00:07:06,490
<font color="#E5E5E5">also called</font><font color="#CCCCCC"> an assertion so a statement</font>

197
00:07:04,060 --> 00:07:08,140
<font color="#E5E5E5">about a user so we can see that we have</font>

198
00:07:06,490 --> 00:07:10,060
a sam'l assertion the type is email

199
00:07:08,140 --> 00:07:12,729
address<font color="#E5E5E5"> it's coming from our issuance</font>

200
00:07:10,060 --> 00:07:14,860
rule and the value in this case<font color="#E5E5E5"> is the</font>

201
00:07:12,730 --> 00:07:17,410
users email<font color="#E5E5E5"> address</font><font color="#CCCCCC"> so my test lab is</font>

202
00:07:14,860 --> 00:07:23,320
<font color="#E5E5E5">doc or</font><font color="#CCCCCC"> com so the users email address is</font>

203
00:07:17,410 --> 00:07:24,240
their<font color="#CCCCCC"> robinette doke or com okay</font><font color="#E5E5E5"> we're</font>

204
00:07:23,320 --> 00:07:27,580
almost done

205
00:07:24,240 --> 00:07:29,380
ad<font color="#E5E5E5"> FS is called the identity</font><font color="#CCCCCC"> provider if</font>

206
00:07:27,580 --> 00:07:31,680
you've ever worked<font color="#E5E5E5"> with Oh F before and</font>

207
00:07:29,380 --> 00:07:34,330
<font color="#E5E5E5">that sign in flow it's the same concepts</font>

208
00:07:31,680 --> 00:07:36,760
<font color="#E5E5E5">active directory and the ad FS service</font>

209
00:07:34,330 --> 00:07:38,680
<font color="#E5E5E5">together they work to verify an identity</font>

210
00:07:36,760 --> 00:07:40,630
so authenticating a<font color="#CCCCCC"> user's credentials</font>

211
00:07:38,680 --> 00:07:41,860
<font color="#E5E5E5">they build up claims about the users</font>

212
00:07:40,630 --> 00:07:44,880
through that pipeline we talked about

213
00:07:41,860 --> 00:07:47,980
<font color="#E5E5E5">and finally they issue a security token</font>

214
00:07:44,880 --> 00:07:50,680
the receiving end of that<font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to be</font>

215
00:07:47,980 --> 00:07:52,630
our relying parties so that's any sort

216
00:07:50,680 --> 00:07:54,790
of<font color="#E5E5E5"> federated application generally these</font>

217
00:07:52,630 --> 00:07:57,130
are<font color="#CCCCCC"> cloud-based apps</font><font color="#E5E5E5"> they receive a</font>

218
00:07:54,790 --> 00:07:59,200
security token<font color="#E5E5E5"> they verify it's valid</font>

219
00:07:57,130 --> 00:08:01,150
<font color="#E5E5E5">they unpack the claims and using those</font>

220
00:07:59,200 --> 00:08:03,070
claims they decide if this user<font color="#CCCCCC"> can</font>

221
00:08:01,150 --> 00:08:04,960
<font color="#CCCCCC">access it and how they can</font><font color="#E5E5E5"> access it and</font>

222
00:08:03,070 --> 00:08:09,460
so examples<font color="#E5E5E5"> of some relying parties</font>

223
00:08:04,960 --> 00:08:11,620
office 365<font color="#E5E5E5"> Dropbox slack AWS Zendesk</font>

224
00:08:09,460 --> 00:08:14,530
<font color="#E5E5E5">Bomgar these are all relying parties</font>

225
00:08:11,620 --> 00:08:15,850
that<font color="#E5E5E5"> I've seen clients use with a DFS on</font>

226
00:08:14,530 --> 00:08:16,960
<font color="#E5E5E5">red</font><font color="#CCCCCC"> team's that</font><font color="#E5E5E5"> I've done and they're</font>

227
00:08:15,850 --> 00:08:19,660
all relying parties that have

228
00:08:16,960 --> 00:08:21,940
compromised<font color="#E5E5E5"> through a DFS attacks right</font>

229
00:08:19,660 --> 00:08:24,130
<font color="#E5E5E5">and when we're talking about the scope</font>

230
00:08:21,940 --> 00:08:26,560
of<font color="#E5E5E5"> the problem these are all integral</font>

231
00:08:24,130 --> 00:08:28,150
<font color="#E5E5E5">parts of so many organizations</font><font color="#CCCCCC"> if your</font>

232
00:08:26,560 --> 00:08:30,040
<font color="#E5E5E5">organization uses Active Directory and</font>

233
00:08:28,150 --> 00:08:32,289
<font color="#E5E5E5">is trying to synchronize that somewhere</font>

234
00:08:30,040 --> 00:08:35,740
<font color="#CCCCCC">odds are it falls on Active Directory</font>

235
00:08:32,289 --> 00:08:37,270
Federation services to do that work<font color="#E5E5E5"> so</font>

236
00:08:35,740 --> 00:08:39,250
tying<font color="#E5E5E5"> it all</font><font color="#CCCCCC"> together in a</font><font color="#E5E5E5"> nice little</font>

237
00:08:37,270 --> 00:08:40,840
<font color="#E5E5E5">flow</font><font color="#CCCCCC"> we've got our user in the dough</font>

238
00:08:39,250 --> 00:08:43,510
Corp domain he wants to access<font color="#E5E5E5"> his</font>

239
00:08:40,840 --> 00:08:46,630
office 365 email<font color="#E5E5E5"> so he navigates in his</font>

240
00:08:43,510 --> 00:08:48,520
browser<font color="#E5E5E5"> to portal office.com</font><font color="#CCCCCC"> and he</font>

241
00:08:46,630 --> 00:08:51,340
types in his email<font color="#E5E5E5"> address at</font><font color="#CCCCCC"> doe Corp</font>

242
00:08:48,520 --> 00:08:53,740
<font color="#CCCCCC">comm office</font><font color="#E5E5E5"> 365 we're gonna check</font><font color="#CCCCCC"> that</font>

243
00:08:51,340 --> 00:08:54,470
domain<font color="#E5E5E5"> to see if it's federated if it is</font>

244
00:08:53,740 --> 00:08:57,260
it's<font color="#E5E5E5"> going to</font>

245
00:08:54,470 --> 00:09:00,140
turn with a 302 redirect<font color="#E5E5E5"> to our</font><font color="#CCCCCC"> adfs</font>

246
00:08:57,260 --> 00:09:02,630
<font color="#E5E5E5">servers Public DNS</font><font color="#CCCCCC"> name STS go court</font>

247
00:09:00,140 --> 00:09:05,000
<font color="#E5E5E5">comm we're going to be talking to a web</font>

248
00:09:02,630 --> 00:09:06,710
application proxy<font color="#E5E5E5"> we don't want our ad</font>

249
00:09:05,000 --> 00:09:08,450
FS server<font color="#E5E5E5"> to expose</font><font color="#CCCCCC"> to the internet</font>

250
00:09:06,710 --> 00:09:10,190
because<font color="#CCCCCC"> it contains some very</font><font color="#E5E5E5"> important</font>

251
00:09:08,450 --> 00:09:11,810
cryptographic material<font color="#E5E5E5"> so we have a</font>

252
00:09:10,190 --> 00:09:14,540
<font color="#E5E5E5">proxy</font><font color="#CCCCCC"> and it's basically just a dumb</font>

253
00:09:11,810 --> 00:09:17,449
reverse proxy<font color="#E5E5E5"> and we get our webs based</font>

254
00:09:14,540 --> 00:09:21,290
authentication page the<font color="#E5E5E5"> user types in</font>

255
00:09:17,450 --> 00:09:23,390
their username<font color="#CCCCCC"> and password and</font><font color="#E5E5E5"> a DFS</font>

256
00:09:21,290 --> 00:09:25,160
receives<font color="#E5E5E5"> that username</font><font color="#CCCCCC"> that password</font><font color="#E5E5E5"> it</font>

257
00:09:23,390 --> 00:09:27,470
talks to Active Directory to actually

258
00:09:25,160 --> 00:09:29,270
authenticate the user and then a<font color="#E5E5E5"> DFS</font>

259
00:09:27,470 --> 00:09:30,770
<font color="#E5E5E5">receives some claims about the user and</font>

260
00:09:29,270 --> 00:09:32,630
goes through<font color="#E5E5E5"> that claims pipeline we</font>

261
00:09:30,770 --> 00:09:34,340
talked about eventually it's going<font color="#E5E5E5"> to</font>

262
00:09:32,630 --> 00:09:36,800
issue this<font color="#E5E5E5"> security token which I have a</font>

263
00:09:34,340 --> 00:09:39,140
really<font color="#E5E5E5"> dumbed down version of here it's</font>

264
00:09:36,800 --> 00:09:42,949
just<font color="#CCCCCC"> an XML document</font><font color="#E5E5E5"> the the important</font>

265
00:09:39,140 --> 00:09:45,020
part about<font color="#E5E5E5"> this is the sam'l token how</font>

266
00:09:42,950 --> 00:09:46,640
the relying party actually<font color="#E5E5E5"> verifies that</font>

267
00:09:45,020 --> 00:09:48,319
this token was issued by Active

268
00:09:46,640 --> 00:09:50,569
Directory that the user is who they<font color="#CCCCCC"> say</font>

269
00:09:48,320 --> 00:09:52,310
that they<font color="#CCCCCC"> are is a digital signature</font><font color="#E5E5E5"> so</font>

270
00:09:50,570 --> 00:09:54,320
the ad<font color="#E5E5E5"> FS</font><font color="#CCCCCC"> server has what's called</font><font color="#E5E5E5"> a</font>

271
00:09:52,310 --> 00:09:56,599
signing certificate<font color="#E5E5E5"> it's a private key</font>

272
00:09:54,320 --> 00:09:59,480
<font color="#CCCCCC">and public key pair</font><font color="#E5E5E5"> it's going to sign</font>

273
00:09:56,600 --> 00:10:01,520
the sam'l token using<font color="#CCCCCC"> a standard again</font>

274
00:09:59,480 --> 00:10:04,640
it's using<font color="#E5E5E5"> XML</font><font color="#CCCCCC"> D sig which is a standard</font>

275
00:10:01,520 --> 00:10:06,650
<font color="#E5E5E5">for</font><font color="#CCCCCC"> signing XML documents and then it's</font>

276
00:10:04,640 --> 00:10:09,500
gonna<font color="#E5E5E5"> send that signed token on to the</font>

277
00:10:06,650 --> 00:10:11,449
<font color="#E5E5E5">end user that user is going to</font><font color="#CCCCCC"> then go</font>

278
00:10:09,500 --> 00:10:14,150
<font color="#CCCCCC">ahead and provide their signed token</font>

279
00:10:11,450 --> 00:10:16,670
back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> office 365's</font><font color="#E5E5E5"> consumer endpoint</font>

280
00:10:14,150 --> 00:10:18,860
office 365 verifies the digital

281
00:10:16,670 --> 00:10:20,689
signature in the sam'l token<font color="#E5E5E5"> it then</font>

282
00:10:18,860 --> 00:10:23,810
unpacks what are called the assertions

283
00:10:20,690 --> 00:10:25,460
now those claims and if the<font color="#E5E5E5"> user is if</font>

284
00:10:23,810 --> 00:10:27,859
the signature is valid<font color="#E5E5E5"> and everything</font>

285
00:10:25,460 --> 00:10:29,690
else<font color="#CCCCCC"> adds up it's going to return to the</font>

286
00:10:27,860 --> 00:10:31,990
<font color="#E5E5E5">user and authorization cookie so that</font>

287
00:10:29,690 --> 00:10:34,520
they can actually access<font color="#E5E5E5"> office 365</font>

288
00:10:31,990 --> 00:10:35,900
<font color="#E5E5E5">right and for those of you who are still</font>

289
00:10:34,520 --> 00:10:38,090
<font color="#CCCCCC">awake in the audience</font>

290
00:10:35,900 --> 00:10:40,610
what's one step that<font color="#CCCCCC"> we would expect</font><font color="#E5E5E5"> to</font>

291
00:10:38,090 --> 00:10:42,410
see in any generally secure organization

292
00:10:40,610 --> 00:10:49,910
as<font color="#CCCCCC"> part of this</font><font color="#E5E5E5"> process</font><font color="#CCCCCC"> that is missing</font>

293
00:10:42,410 --> 00:10:51,680
<font color="#E5E5E5">from this chain MFA tada MFA now MFA</font>

294
00:10:49,910 --> 00:10:53,209
integrates directly with Active

295
00:10:51,680 --> 00:10:56,689
Directory Federation<font color="#E5E5E5"> services in the</font>

296
00:10:53,210 --> 00:10:58,940
form of an identity provider<font color="#E5E5E5"> adapter any</font>

297
00:10:56,690 --> 00:11:00,770
<font color="#E5E5E5">additional layer of security</font><font color="#CCCCCC"> that you're</font>

298
00:10:58,940 --> 00:11:02,510
going<font color="#E5E5E5"> to install from a vendor is going</font>

299
00:11:00,770 --> 00:11:04,880
<font color="#CCCCCC">to be installed directly on</font><font color="#E5E5E5"> your ad FS</font>

300
00:11:02,510 --> 00:11:06,380
server<font color="#E5E5E5"> in the form of these adapters</font><font color="#CCCCCC"> so</font>

301
00:11:04,880 --> 00:11:08,029
we have to talk about<font color="#E5E5E5"> them</font><font color="#CCCCCC"> because it</font>

302
00:11:06,380 --> 00:11:11,089
turns out they're<font color="#E5E5E5"> pretty important</font>

303
00:11:08,029 --> 00:11:13,630
why do we need<font color="#CCCCCC"> adaptors</font><font color="#E5E5E5"> well because we</font>

304
00:11:11,089 --> 00:11:15,889
need a key point<font color="#E5E5E5"> of</font><font color="#CCCCCC"> integration</font><font color="#E5E5E5"> to add</font>

305
00:11:13,630 --> 00:11:17,300
extensible third party support<font color="#E5E5E5"> for</font>

306
00:11:15,889 --> 00:11:19,250
<font color="#E5E5E5">additional kinds of authentication</font>

307
00:11:17,300 --> 00:11:21,769
<font color="#E5E5E5">including ones that</font><font color="#CCCCCC"> we haven't</font><font color="#E5E5E5"> conceived</font>

308
00:11:19,250 --> 00:11:24,260
of yet<font color="#E5E5E5"> right</font><font color="#CCCCCC"> in the list of supported</font>

309
00:11:21,769 --> 00:11:26,600
<font color="#CCCCCC">schema claims</font><font color="#E5E5E5"> there's actually one for</font>

310
00:11:24,260 --> 00:11:29,000
biometric authentication<font color="#CCCCCC"> via voice</font>

311
00:11:26,600 --> 00:11:30,860
analysis<font color="#E5E5E5"> so things that haven't</font>

312
00:11:29,000 --> 00:11:33,170
generally been deployed in<font color="#CCCCCC"> the field yet</font>

313
00:11:30,860 --> 00:11:36,680
still have to be accounted for<font color="#E5E5E5"> in the</font>

314
00:11:33,170 --> 00:11:38,870
form of this adapter<font color="#CCCCCC"> interface so a DFS</font>

315
00:11:36,680 --> 00:11:41,209
is the<font color="#CCCCCC"> nexus of</font><font color="#E5E5E5"> all of this identity</font>

316
00:11:38,870 --> 00:11:43,360
provision<font color="#E5E5E5"> so all of the vendors have to</font>

317
00:11:41,209 --> 00:11:45,469
provide some<font color="#CCCCCC"> sort of</font><font color="#E5E5E5"> integration point</font>

318
00:11:43,360 --> 00:11:49,839
<font color="#E5E5E5">which turns out to</font><font color="#CCCCCC"> be a pretty</font>

319
00:11:45,470 --> 00:11:54,139
<font color="#E5E5E5">interesting point of focus</font><font color="#CCCCCC"> that said</font>

320
00:11:49,839 --> 00:11:56,120
okay<font color="#E5E5E5"> so we're all</font><font color="#CCCCCC"> ad FS</font><font color="#E5E5E5"> experts now</font>

321
00:11:54,139 --> 00:11:58,100
right<font color="#E5E5E5"> so we can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> move on to</font>

322
00:11:56,120 --> 00:12:01,000
attacking ad FS<font color="#CCCCCC"> the first step is</font>

323
00:11:58,100 --> 00:12:03,199
actually finding them in an organization

324
00:12:01,000 --> 00:12:05,029
so one<font color="#CCCCCC"> of the best ways is to use just</font>

325
00:12:03,199 --> 00:12:06,979
<font color="#CCCCCC">your whatever your preferred Osen</font>

326
00:12:05,029 --> 00:12:08,930
provider is<font color="#CCCCCC"> to search for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> subdomains</font>

327
00:12:06,980 --> 00:12:11,570
<font color="#E5E5E5">that microsoft recommends you use most</font>

328
00:12:08,930 --> 00:12:15,888
people follow<font color="#E5E5E5"> Microsoft's advice so we</font>

329
00:12:11,570 --> 00:12:17,389
can search<font color="#CCCCCC"> for ad FS</font><font color="#E5E5E5"> s TS FS and a quick</font>

330
00:12:15,889 --> 00:12:20,209
<font color="#CCCCCC">showdown search I did last week found</font>

331
00:12:17,389 --> 00:12:22,760
over 10,000 instances<font color="#E5E5E5"> of AD FS servers</font>

332
00:12:20,209 --> 00:12:24,619
or their proxies<font color="#E5E5E5"> exposed to the</font><font color="#CCCCCC"> Internet</font>

333
00:12:22,760 --> 00:12:27,350
really simple<font color="#E5E5E5"> way</font><font color="#CCCCCC"> to see if your</font><font color="#E5E5E5"> target</font>

334
00:12:24,620 --> 00:12:29,329
<font color="#E5E5E5">organization is</font><font color="#CCCCCC"> using ad FS</font><font color="#E5E5E5"> if they have</font>

335
00:12:27,350 --> 00:12:30,560
office<font color="#CCCCCC"> 365 chances are</font><font color="#E5E5E5"> they're</font>

336
00:12:29,329 --> 00:12:33,050
federating their domains<font color="#CCCCCC"> their</font>

337
00:12:30,560 --> 00:12:34,489
federating that office<font color="#E5E5E5"> 365</font><font color="#CCCCCC"> so you can</font>

338
00:12:33,050 --> 00:12:35,959
try logging<font color="#CCCCCC"> in with a</font><font color="#E5E5E5"> bogus email</font>

339
00:12:34,490 --> 00:12:38,209
address it doesn't even<font color="#E5E5E5"> need to exist</font><font color="#CCCCCC"> it</font>

340
00:12:35,959 --> 00:12:39,680
just needs to<font color="#E5E5E5"> be the domain if that</font>

341
00:12:38,209 --> 00:12:41,619
<font color="#E5E5E5">domain is federated you're gonna get</font>

342
00:12:39,680 --> 00:12:43,489
<font color="#CCCCCC">redirected to the ad</font><font color="#E5E5E5"> FS server</font><font color="#CCCCCC"> and</font>

343
00:12:41,620 --> 00:12:45,230
because there was no actual

344
00:12:43,490 --> 00:12:46,550
authentication interaction there's not

345
00:12:45,230 --> 00:12:48,230
gonna be any logs for the<font color="#E5E5E5"> blue team to</font>

346
00:12:46,550 --> 00:12:49,819
<font color="#E5E5E5">look at to</font><font color="#CCCCCC"> know that you've just</font><font color="#E5E5E5"> been</font>

347
00:12:48,230 --> 00:12:52,880
enumerated whether or not they actually

348
00:12:49,819 --> 00:12:55,099
<font color="#E5E5E5">use ad FS and there's also a whole</font><font color="#CCCCCC"> bunch</font>

349
00:12:52,880 --> 00:12:56,600
of required URL paths<font color="#E5E5E5"> and ports that</font>

350
00:12:55,100 --> 00:12:58,699
<font color="#E5E5E5">need to be exposed to the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> that</font>

351
00:12:56,600 --> 00:13:02,839
<font color="#CCCCCC">you</font><font color="#E5E5E5"> could search on to see is my target</font>

352
00:12:58,699 --> 00:13:04,550
<font color="#E5E5E5">organization using ad FS turns out</font>

353
00:13:02,839 --> 00:13:07,970
there's<font color="#CCCCCC"> some fun things that come</font><font color="#E5E5E5"> out of</font>

354
00:13:04,550 --> 00:13:10,310
<font color="#E5E5E5">the required and recommended features of</font>

355
00:13:07,970 --> 00:13:12,949
an ad FS proxy<font color="#E5E5E5"> so when you're deploying</font>

356
00:13:10,310 --> 00:13:14,930
ad FS we've just<font color="#E5E5E5"> realized that it's very</font>

357
00:13:12,949 --> 00:13:17,000
<font color="#E5E5E5">complex</font><font color="#CCCCCC"> you're all our experts from</font><font color="#E5E5E5"> the</font>

358
00:13:14,930 --> 00:13:18,739
<font color="#E5E5E5">past</font><font color="#CCCCCC"> 10 minutes one of the things</font>

359
00:13:17,000 --> 00:13:20,810
Microsoft's recommends you do is

360
00:13:18,740 --> 00:13:21,590
<font color="#E5E5E5">initiate this feature called IDP</font>

361
00:13:20,810 --> 00:13:23,449
initiated

362
00:13:21,590 --> 00:13:25,220
<font color="#CCCCCC">sign on now it's a legacy feature that</font>

363
00:13:23,450 --> 00:13:27,080
you really<font color="#E5E5E5"> don't need but what it</font>

364
00:13:25,220 --> 00:13:29,270
<font color="#E5E5E5">provides for</font><font color="#CCCCCC"> us as attackers</font><font color="#E5E5E5"> is at this</font>

365
00:13:27,080 --> 00:13:31,370
<font color="#E5E5E5">really lovely URL we have a nice</font>

366
00:13:29,270 --> 00:13:33,170
forms-based authentication page<font color="#E5E5E5"> that we</font>

367
00:13:31,370 --> 00:13:34,310
can use<font color="#CCCCCC"> to conduct a password spray so</font>

368
00:13:33,170 --> 00:13:36,079
we don't actually<font color="#E5E5E5"> have to go</font><font color="#CCCCCC"> through an</font>

369
00:13:34,310 --> 00:13:37,699
authentication<font color="#E5E5E5"> flow that we</font><font color="#CCCCCC"> outlined</font>

370
00:13:36,080 --> 00:13:40,940
earlier<font color="#CCCCCC"> we just navigate to this page</font>

371
00:13:37,700 --> 00:13:43,310
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> can start</font><font color="#E5E5E5"> our password spray also</font>

372
00:13:40,940 --> 00:13:45,380
<font color="#E5E5E5">if this organization</font><font color="#CCCCCC"> is federating any</font>

373
00:13:43,310 --> 00:13:48,260
sam'l applications<font color="#CCCCCC"> so Dropbox for</font>

374
00:13:45,380 --> 00:13:49,820
example Zendesk<font color="#E5E5E5"> this page is also going</font>

375
00:13:48,260 --> 00:13:51,710
to provide<font color="#CCCCCC"> a nice list</font><font color="#E5E5E5"> of them so as</font>

376
00:13:49,820 --> 00:13:53,630
attackers this is a nice little piece<font color="#CCCCCC"> of</font>

377
00:13:51,710 --> 00:13:55,970
<font color="#CCCCCC">information we can use maybe to form a</font>

378
00:13:53,630 --> 00:13:58,280
good<font color="#E5E5E5"> social engineering scenario</font><font color="#CCCCCC"> we at</font>

379
00:13:55,970 --> 00:14:01,100
least know you know if my flag is<font color="#CCCCCC"> to</font>

380
00:13:58,280 --> 00:14:03,020
actually<font color="#CCCCCC"> access let's say Bomgar I know</font>

381
00:14:01,100 --> 00:14:06,770
and now know that I need to<font color="#E5E5E5"> attack</font><font color="#CCCCCC"> ad FS</font>

382
00:14:03,020 --> 00:14:09,230
<font color="#CCCCCC">in order to do so the second sort of fun</font>

383
00:14:06,770 --> 00:14:11,300
thing<font color="#CCCCCC"> is that ad FS supports ntlm based</font>

384
00:14:09,230 --> 00:14:13,040
authentication<font color="#CCCCCC"> now this</font><font color="#E5E5E5"> makes sense if</font>

385
00:14:11,300 --> 00:14:14,900
we're on<font color="#E5E5E5"> Prem we want our users to be</font>

386
00:14:13,040 --> 00:14:19,040
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to seamlessly authenticate</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> ad FS</font>

387
00:14:14,900 --> 00:14:21,170
<font color="#E5E5E5">using ntlm sure but by default</font><font color="#CCCCCC"> these</font>

388
00:14:19,040 --> 00:14:24,050
<font color="#CCCCCC">URLs are also exposed</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> Internet</font>

389
00:14:21,170 --> 00:14:25,520
via<font color="#E5E5E5"> the ad FS proxy and in general as</font>

390
00:14:24,050 --> 00:14:27,859
security practitioners we know it's a

391
00:14:25,520 --> 00:14:30,079
<font color="#E5E5E5">bad idea</font><font color="#CCCCCC"> to expose ntlm authentication</font>

392
00:14:27,860 --> 00:14:32,000
to the Internet<font color="#E5E5E5"> one of the main reasons</font>

393
00:14:30,080 --> 00:14:34,190
is<font color="#E5E5E5"> that it's going to leak</font><font color="#CCCCCC"> information</font>

394
00:14:32,000 --> 00:14:36,080
about<font color="#E5E5E5"> your internal network to these</font>

395
00:14:34,190 --> 00:14:38,330
<font color="#CCCCCC">internet bound users so if you go</font>

396
00:14:36,080 --> 00:14:40,220
<font color="#E5E5E5">through</font><font color="#CCCCCC"> a bogus challenge response</font><font color="#E5E5E5"> the</font>

397
00:14:38,330 --> 00:14:41,870
server is<font color="#CCCCCC"> gonna respond with a</font><font color="#E5E5E5"> base64</font>

398
00:14:40,220 --> 00:14:43,760
encoded string and in that string you're

399
00:14:41,870 --> 00:14:46,190
gonna get<font color="#E5E5E5"> the fully qualified</font><font color="#CCCCCC"> hostname</font>

400
00:14:43,760 --> 00:14:48,140
of the ad<font color="#E5E5E5"> FS server so for targeting</font>

401
00:14:46,190 --> 00:14:50,330
purposes it's not the proxy it's the

402
00:14:48,140 --> 00:14:52,280
actual ad FS<font color="#CCCCCC"> server which</font><font color="#E5E5E5"> will need to</font>

403
00:14:50,330 --> 00:14:53,990
<font color="#CCCCCC">target later on in our attack and we</font>

404
00:14:52,280 --> 00:14:55,610
also have the fqdn of the<font color="#CCCCCC"> Active</font>

405
00:14:53,990 --> 00:14:58,370
<font color="#CCCCCC">Directory domain name helpful</font><font color="#E5E5E5"> for other</font>

406
00:14:55,610 --> 00:15:00,230
sorts of attacks and it also is<font color="#CCCCCC"> just a</font>

407
00:14:58,370 --> 00:15:02,120
nice<font color="#CCCCCC"> little interface</font><font color="#E5E5E5"> or two interfaces</font>

408
00:15:00,230 --> 00:15:08,540
<font color="#CCCCCC">for us to conduct</font><font color="#E5E5E5"> password spray attacks</font>

409
00:15:02,120 --> 00:15:11,000
as<font color="#CCCCCC"> well okay so</font><font color="#E5E5E5"> now that we know what</font><font color="#CCCCCC"> ad</font>

410
00:15:08,540 --> 00:15:11,990
<font color="#CCCCCC">FS Sue's we have a really a set</font><font color="#E5E5E5"> of</font>

411
00:15:11,000 --> 00:15:13,940
different<font color="#E5E5E5"> methods that we can</font><font color="#CCCCCC"> use to</font>

412
00:15:11,990 --> 00:15:17,120
<font color="#E5E5E5">quickly identify it let's talk about</font>

413
00:15:13,940 --> 00:15:19,730
attacking<font color="#E5E5E5"> it so of course the immutable</font>

414
00:15:17,120 --> 00:15:22,310
rule of security is that the more

415
00:15:19,730 --> 00:15:23,630
<font color="#E5E5E5">complex systems become the more attack</font>

416
00:15:22,310 --> 00:15:26,000
surface gets exposed and the more

417
00:15:23,630 --> 00:15:28,820
mistakes<font color="#E5E5E5"> or design decisions start to</font>

418
00:15:26,000 --> 00:15:31,730
impact the overall<font color="#E5E5E5"> security of the item</font>

419
00:15:28,820 --> 00:15:34,400
<font color="#CCCCCC">so</font><font color="#E5E5E5"> we begin first of course by targeting</font>

420
00:15:31,730 --> 00:15:35,510
<font color="#E5E5E5">the weak links so dividing it up into</font>

421
00:15:34,400 --> 00:15:37,850
<font color="#E5E5E5">three core areas</font>

422
00:15:35,510 --> 00:15:39,560
that we can attack<font color="#E5E5E5"> first and foremost we</font>

423
00:15:37,850 --> 00:15:41,660
have the<font color="#E5E5E5"> relying party supporting</font>

424
00:15:39,560 --> 00:15:43,910
applications<font color="#CCCCCC"> these are your duo's your</font>

425
00:15:41,660 --> 00:15:46,279
<font color="#CCCCCC">Haris a is your does the</font><font color="#E5E5E5"> management</font>

426
00:15:43,910 --> 00:15:47,959
interfaces<font color="#E5E5E5"> for those applications</font><font color="#CCCCCC"> so</font>

427
00:15:46,279 --> 00:15:49,880
anyone<font color="#E5E5E5"> who does any</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of multi-factor</font>

428
00:15:47,959 --> 00:15:51,319
authentication<font color="#CCCCCC"> management knows that</font>

429
00:15:49,880 --> 00:15:53,060
there's actually a lot<font color="#CCCCCC"> of really</font>

430
00:15:51,320 --> 00:15:56,240
<font color="#E5E5E5">important and valuable settings that you</font>

431
00:15:53,060 --> 00:15:57,680
can configure<font color="#E5E5E5"> exceptions etc on your say</font>

432
00:15:56,240 --> 00:15:59,540
duo management page right

433
00:15:57,680 --> 00:16:01,339
this doesn't even integrate directly

434
00:15:59,540 --> 00:16:04,939
<font color="#CCCCCC">with a DFS it's not on the ad FS</font><font color="#E5E5E5"> server</font>

435
00:16:01,339 --> 00:16:08,329
<font color="#E5E5E5">it's just the duo app second is the</font>

436
00:16:04,940 --> 00:16:10,699
identity provider<font color="#CCCCCC"> so</font><font color="#E5E5E5"> ad FS policies and</font>

437
00:16:08,329 --> 00:16:13,130
exceptions<font color="#E5E5E5"> there is some control as you</font>

438
00:16:10,699 --> 00:16:16,130
<font color="#E5E5E5">can see from the screenshot here</font><font color="#CCCCCC"> that</font>

439
00:16:13,130 --> 00:16:17,689
the ad FS<font color="#E5E5E5"> manager has in terms of what</font>

440
00:16:16,130 --> 00:16:18,529
entities require multi-factor

441
00:16:17,690 --> 00:16:20,630
authentication

442
00:16:18,529 --> 00:16:23,570
what kind of multi-factor authentication

443
00:16:20,630 --> 00:16:25,279
is going to be supported<font color="#CCCCCC"> these are</font>

444
00:16:23,570 --> 00:16:27,019
important pieces<font color="#CCCCCC"> as well that we</font><font color="#E5E5E5"> have to</font>

445
00:16:25,279 --> 00:16:29,149
take<font color="#CCCCCC"> a</font><font color="#E5E5E5"> look at and then</font><font color="#CCCCCC"> of course last</font>

446
00:16:27,019 --> 00:16:30,709
but<font color="#E5E5E5"> not least the relying party adapter</font>

447
00:16:29,149 --> 00:16:34,360
specifically multi-factor authentication

448
00:16:30,709 --> 00:16:36,920
<font color="#E5E5E5">adapters now for the relying party</font>

449
00:16:34,360 --> 00:16:39,230
<font color="#E5E5E5">specific pieces</font><font color="#CCCCCC"> we've already</font><font color="#E5E5E5"> covered</font>

450
00:16:36,920 --> 00:16:41,060
that material<font color="#E5E5E5"> pretty in-depth at a talk</font>

451
00:16:39,230 --> 00:16:42,649
we gave in Derby con<font color="#E5E5E5"> so we're not going</font>

452
00:16:41,060 --> 00:16:44,149
<font color="#E5E5E5">to cover that</font><font color="#CCCCCC"> here but</font><font color="#E5E5E5"> I do suggest you</font>

453
00:16:42,649 --> 00:16:47,480
read it<font color="#E5E5E5"> because there are a lot of</font>

454
00:16:44,149 --> 00:16:48,860
common<font color="#E5E5E5"> mistakes and miss assumptions</font>

455
00:16:47,480 --> 00:16:50,810
that are made<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the security of</font>

456
00:16:48,860 --> 00:16:55,339
<font color="#E5E5E5">these kind of management portals that</font>

457
00:16:50,810 --> 00:16:59,060
are exploited exploitable<font color="#CCCCCC"> now talking</font>

458
00:16:55,339 --> 00:17:03,110
about the<font color="#E5E5E5"> IDP side talk about adaptive</font>

459
00:16:59,060 --> 00:17:05,299
<font color="#CCCCCC">so what is an authentication</font><font color="#E5E5E5"> adapter for</font>

460
00:17:03,110 --> 00:17:07,099
your identity<font color="#CCCCCC"> provider</font><font color="#E5E5E5"> basically it's</font>

461
00:17:05,299 --> 00:17:09,199
just<font color="#E5E5E5"> a piece</font><font color="#CCCCCC"> of code a</font><font color="#E5E5E5"> DLL that</font>

462
00:17:07,099 --> 00:17:11,899
<font color="#E5E5E5">implements the necessary</font><font color="#CCCCCC"> methods to</font>

463
00:17:09,199 --> 00:17:14,150
<font color="#E5E5E5">interface</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> DFS's</font><font color="#E5E5E5"> claims processing</font>

464
00:17:11,900 --> 00:17:15,650
pipeline<font color="#E5E5E5"> so there's a list of the</font>

465
00:17:14,150 --> 00:17:17,720
methods that<font color="#E5E5E5"> are required pretty</font>

466
00:17:15,650 --> 00:17:20,120
<font color="#E5E5E5">straightforward you can suspect what</font>

467
00:17:17,720 --> 00:17:22,160
they're there to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> and so each of these</font>

468
00:17:20,119 --> 00:17:25,040
dll's is actually<font color="#E5E5E5"> registered in the</font><font color="#CCCCCC"> CAC</font>

469
00:17:22,160 --> 00:17:27,580
so that's the global<font color="#E5E5E5"> assembly cache this</font>

470
00:17:25,040 --> 00:17:30,649
is basically a place where we can define

471
00:17:27,579 --> 00:17:32,299
signed and strongly named pieces of code

472
00:17:30,650 --> 00:17:33,980
<font color="#CCCCCC">that are going</font><font color="#E5E5E5"> to be shared by several</font>

473
00:17:32,299 --> 00:17:36,679
applications so<font color="#E5E5E5"> we don't have</font><font color="#CCCCCC"> to worry</font>

474
00:17:33,980 --> 00:17:38,240
<font color="#E5E5E5">about like DLL hell problems basically</font>

475
00:17:36,679 --> 00:17:39,919
<font color="#CCCCCC">it's a safe</font><font color="#E5E5E5"> way to structure it</font><font color="#CCCCCC"> so that</font>

476
00:17:38,240 --> 00:17:42,620
you know consistently where to go find

477
00:17:39,919 --> 00:17:44,870
the code you need<font color="#E5E5E5"> interestingly enough</font>

478
00:17:42,620 --> 00:17:46,699
despite<font color="#E5E5E5"> being signed</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> doesn't</font>

479
00:17:44,870 --> 00:17:48,889
enforce any kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> integrity check you</font>

480
00:17:46,700 --> 00:17:50,810
can replace these<font color="#CCCCCC"> dll's and we'll talk</font>

481
00:17:48,890 --> 00:17:53,710
about<font color="#E5E5E5"> different reasons to potentially</font>

482
00:17:50,810 --> 00:17:55,970
do that as an attacker vendor<font color="#E5E5E5"> adapters</font>

483
00:17:53,710 --> 00:17:57,980
<font color="#E5E5E5">have to support all of the functions</font>

484
00:17:55,970 --> 00:17:59,390
above but they add in their own code<font color="#CCCCCC"> to</font>

485
00:17:57,980 --> 00:18:01,640
do their processing so if you're doing<font color="#E5E5E5"> a</font>

486
00:17:59,390 --> 00:18:03,950
multi-factor authentication adapter<font color="#E5E5E5"> you</font>

487
00:18:01,640 --> 00:18:05,960
<font color="#E5E5E5">actually have to set the code to cut you</font>

488
00:18:03,950 --> 00:18:07,490
know connect to your<font color="#E5E5E5"> API determine</font>

489
00:18:05,960 --> 00:18:09,530
<font color="#E5E5E5">whether or not this user is a registered</font>

490
00:18:07,490 --> 00:18:12,560
device you know what requirements<font color="#E5E5E5"> are</font>

491
00:18:09,530 --> 00:18:14,899
<font color="#E5E5E5">there do they support pin push call</font>

492
00:18:12,560 --> 00:18:17,000
<font color="#E5E5E5">right that all happens on the relying</font>

493
00:18:14,900 --> 00:18:18,350
party side<font color="#E5E5E5"> so there's several different</font>

494
00:18:17,000 --> 00:18:20,660
routes that<font color="#E5E5E5"> you can take when you're</font>

495
00:18:18,350 --> 00:18:22,459
<font color="#CCCCCC">thinking</font><font color="#E5E5E5"> about this one which is very</font>

496
00:18:20,660 --> 00:18:24,200
<font color="#E5E5E5">simple that we won't talk about it's</font>

497
00:18:22,460 --> 00:18:26,570
<font color="#E5E5E5">just register a new adapter</font><font color="#CCCCCC"> so add</font>

498
00:18:24,200 --> 00:18:29,030
support<font color="#CCCCCC"> for your own</font><font color="#E5E5E5"> custom adapter you</font>

499
00:18:26,570 --> 00:18:31,460
<font color="#CCCCCC">can define the code there and process</font>

500
00:18:29,030 --> 00:18:32,600
the claims yourself<font color="#E5E5E5"> or more</font>

501
00:18:31,460 --> 00:18:34,670
<font color="#E5E5E5">interestingly we can actually</font><font color="#CCCCCC"> adjust</font>

502
00:18:32,600 --> 00:18:37,370
existing<font color="#E5E5E5"> adapters</font><font color="#CCCCCC"> to preserve the</font>

503
00:18:34,670 --> 00:18:40,070
functionality that's in place so here's

504
00:18:37,370 --> 00:18:42,290
a simple<font color="#E5E5E5"> walkthrough of you know let's</font>

505
00:18:40,070 --> 00:18:44,120
talk about do well for<font color="#CCCCCC"> example so we</font>

506
00:18:42,290 --> 00:18:46,490
know<font color="#CCCCCC"> that there's a duo adapter</font>

507
00:18:44,120 --> 00:18:49,010
installed<font color="#CCCCCC"> on a TFS</font><font color="#E5E5E5"> so what do we do we</font>

508
00:18:46,490 --> 00:18:50,780
pull up<font color="#CCCCCC"> proc</font><font color="#E5E5E5"> Explorer we search for</font>

509
00:18:49,010 --> 00:18:53,750
<font color="#E5E5E5">anything that has a handle to our</font>

510
00:18:50,780 --> 00:18:55,879
adapter<font color="#E5E5E5"> DLL you can see it highlighted</font>

511
00:18:53,750 --> 00:18:58,370
there<font color="#E5E5E5"> there's a file in a deal a load</font>

512
00:18:55,880 --> 00:19:00,910
for<font color="#E5E5E5"> that adapter for the Microsoft</font>

513
00:18:58,370 --> 00:19:03,350
<font color="#E5E5E5">identity server server host</font><font color="#CCCCCC"> exe</font>

514
00:19:00,910 --> 00:19:05,120
executable<font color="#E5E5E5"> this is the service</font>

515
00:19:03,350 --> 00:19:09,080
<font color="#E5E5E5">executable for Active Directory</font>

516
00:19:05,120 --> 00:19:11,689
Federation<font color="#E5E5E5"> services so we go to that DLL</font>

517
00:19:09,080 --> 00:19:14,360
we pull<font color="#CCCCCC"> up our</font><font color="#E5E5E5"> trusty</font><font color="#CCCCCC"> DN spy because it</font>

518
00:19:11,690 --> 00:19:17,360
will<font color="#E5E5E5"> allow</font><font color="#CCCCCC"> us to</font><font color="#E5E5E5"> read and edit the code</font>

519
00:19:14,360 --> 00:19:19,570
relatively simply<font color="#E5E5E5"> and we start to learn</font>

520
00:19:17,360 --> 00:19:21,679
<font color="#CCCCCC">the flow of</font><font color="#E5E5E5"> the authentication right so</font>

521
00:19:19,570 --> 00:19:23,120
authentication<font color="#E5E5E5"> adapters are structured</font>

522
00:19:21,680 --> 00:19:24,890
very<font color="#E5E5E5"> clearly that make it relatively</font>

523
00:19:23,120 --> 00:19:26,449
easy to understand<font color="#E5E5E5"> they have usually</font>

524
00:19:24,890 --> 00:19:28,970
have a begin I think<font color="#E5E5E5"> begin</font>

525
00:19:26,450 --> 00:19:30,800
authentication method and a try to try

526
00:19:28,970 --> 00:19:32,330
and authentication<font color="#E5E5E5"> method and by</font>

527
00:19:30,800 --> 00:19:34,190
comparing those two you can kind of

528
00:19:32,330 --> 00:19:37,490
understand the flow of<font color="#E5E5E5"> what's happening</font>

529
00:19:34,190 --> 00:19:39,410
<font color="#E5E5E5">between the start and</font><font color="#CCCCCC"> stop</font><font color="#E5E5E5"> points</font><font color="#CCCCCC"> so in</font>

530
00:19:37,490 --> 00:19:41,270
this particular<font color="#CCCCCC"> example</font><font color="#E5E5E5"> again this is</font>

531
00:19:39,410 --> 00:19:45,170
the duo authentication<font color="#CCCCCC"> begin</font>

532
00:19:41,270 --> 00:19:47,660
authentication method I decided to edit

533
00:19:45,170 --> 00:19:50,480
it<font color="#CCCCCC"> I added a little exception</font><font color="#E5E5E5"> here that</font>

534
00:19:47,660 --> 00:19:53,330
said if the<font color="#E5E5E5"> user name contains</font><font color="#CCCCCC"> deem D</font>

535
00:19:50,480 --> 00:19:56,750
<font color="#CCCCCC">Bienstock I'm going to manually register</font>

536
00:19:53,330 --> 00:19:58,399
a fail open exception and pass it on and

537
00:19:56,750 --> 00:20:01,370
return<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and basically skip all</font><font color="#CCCCCC"> of the</font>

538
00:19:58,400 --> 00:20:02,800
second factor<font color="#CCCCCC"> verification code so this</font>

539
00:20:01,370 --> 00:20:05,919
does not<font color="#CCCCCC"> rely on</font>

540
00:20:02,800 --> 00:20:08,320
fail open<font color="#E5E5E5"> being set to true because</font><font color="#CCCCCC"> this</font>

541
00:20:05,920 --> 00:20:09,910
is the entity that determines and loads

542
00:20:08,320 --> 00:20:11,649
that setting from<font color="#CCCCCC"> the registry so I'm</font>

543
00:20:09,910 --> 00:20:13,870
manually changing<font color="#E5E5E5"> it in the claim and</font>

544
00:20:11,650 --> 00:20:16,240
passing it along and it<font color="#CCCCCC"> processes it and</font>

545
00:20:13,870 --> 00:20:17,649
if<font color="#CCCCCC"> D being stock tries to login he's</font>

546
00:20:16,240 --> 00:20:20,710
<font color="#E5E5E5">gonna get skipped for multi-factor</font>

547
00:20:17,650 --> 00:20:23,380
authentication<font color="#E5E5E5"> so that's pretty neat</font>

548
00:20:20,710 --> 00:20:25,120
right<font color="#E5E5E5"> easy way to avoid multi-factor</font>

549
00:20:23,380 --> 00:20:27,040
authentication<font color="#CCCCCC"> you can get really</font>

550
00:20:25,120 --> 00:20:29,919
creative<font color="#E5E5E5"> you can add IP source</font>

551
00:20:27,040 --> 00:20:31,480
exceptions<font color="#E5E5E5"> so only from my</font><font color="#CCCCCC"> IPS do I want</font>

552
00:20:29,920 --> 00:20:34,750
to<font color="#E5E5E5"> skip multi-factor authentication for</font>

553
00:20:31,480 --> 00:20:37,300
<font color="#E5E5E5">every one time limitations</font>

554
00:20:34,750 --> 00:20:38,830
you can even<font color="#CCCCCC"> cross-reference</font><font color="#E5E5E5"> different</font>

555
00:20:37,300 --> 00:20:41,350
users that aren't the one that are

556
00:20:38,830 --> 00:20:43,960
authenticating so<font color="#E5E5E5"> here's an interesting</font>

557
00:20:41,350 --> 00:20:47,139
agnostic example<font color="#E5E5E5"> this is basically</font>

558
00:20:43,960 --> 00:20:48,700
saying if someone tries to<font color="#E5E5E5"> log in with</font>

559
00:20:47,140 --> 00:20:51,930
the user account<font color="#E5E5E5"> containing beep-beep</font>

560
00:20:48,700 --> 00:20:54,130
I'm a GP<font color="#CCCCCC"> then</font><font color="#E5E5E5"> I want to run PowerShell</font>

561
00:20:51,930 --> 00:20:56,980
<font color="#CCCCCC">this is you can replace that</font><font color="#E5E5E5"> with</font>

562
00:20:54,130 --> 00:20:58,930
literally<font color="#E5E5E5"> anything backdoors code</font><font color="#CCCCCC"> to</font>

563
00:20:56,980 --> 00:21:00,940
<font color="#CCCCCC">dump say important</font><font color="#E5E5E5"> cryptographic signing</font>

564
00:20:58,930 --> 00:21:03,310
materials and relay it<font color="#CCCCCC"> to the user and</font>

565
00:21:00,940 --> 00:21:05,590
an HTTP response<font color="#E5E5E5"> whatever your</font>

566
00:21:03,310 --> 00:21:08,710
imagination might want why is this

567
00:21:05,590 --> 00:21:11,050
effective<font color="#E5E5E5"> well because that sign-in page</font>

568
00:21:08,710 --> 00:21:12,130
is<font color="#CCCCCC"> usually exposed</font><font color="#E5E5E5"> via sort of office</font>

569
00:21:11,050 --> 00:21:15,280
<font color="#E5E5E5">365</font><font color="#CCCCCC"> etcetera</font>

570
00:21:12,130 --> 00:21:17,320
<font color="#E5E5E5">and we can trigger it remotely so we</font>

571
00:21:15,280 --> 00:21:20,350
contribute we can trigger code<font color="#E5E5E5"> execution</font>

572
00:21:17,320 --> 00:21:22,060
on the<font color="#CCCCCC"> ad FS server remotely after we've</font>

573
00:21:20,350 --> 00:21:24,010
installed<font color="#E5E5E5"> this backdoor</font><font color="#CCCCCC"> so here you can</font>

574
00:21:22,060 --> 00:21:25,870
see a simple<font color="#E5E5E5"> example</font><font color="#CCCCCC"> tried</font><font color="#E5E5E5"> to log in as</font>

575
00:21:24,010 --> 00:21:29,560
<font color="#CCCCCC">beep-beep I'm in Jeep</font><font color="#E5E5E5"> note this account</font>

576
00:21:25,870 --> 00:21:30,969
does not<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> exist and</font><font color="#E5E5E5"> it kicks the</font>

577
00:21:29,560 --> 00:21:33,250
<font color="#E5E5E5">PowerShell dot exe process off</font>

578
00:21:30,970 --> 00:21:35,380
<font color="#E5E5E5">underneath the identity server</font>

579
00:21:33,250 --> 00:21:36,850
executable<font color="#CCCCCC"> yeah so in this case it's</font>

580
00:21:35,380 --> 00:21:38,740
it's basically<font color="#CCCCCC"> a web shell</font><font color="#E5E5E5"> that we've</font>

581
00:21:36,850 --> 00:21:40,000
just<font color="#E5E5E5"> created but instead of being just</font>

582
00:21:38,740 --> 00:21:41,440
on you know some random<font color="#CCCCCC"> tomcat server</font>

583
00:21:40,000 --> 00:21:43,420
out there it doesn't<font color="#CCCCCC"> we don't really</font>

584
00:21:41,440 --> 00:21:45,070
<font color="#E5E5E5">care</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> we now have a website web</font>

585
00:21:43,420 --> 00:21:46,720
shell on a system<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> basically</font>

586
00:21:45,070 --> 00:21:49,540
<font color="#E5E5E5">equivalent to a domain controller which</font>

587
00:21:46,720 --> 00:21:50,830
<font color="#E5E5E5">we'll get out later yep so there's a lot</font>

588
00:21:49,540 --> 00:21:52,420
<font color="#CCCCCC">of interesting methods that</font><font color="#E5E5E5"> are</font>

589
00:21:50,830 --> 00:21:53,649
implemented<font color="#E5E5E5"> that I recommend people who</font>

590
00:21:52,420 --> 00:21:56,260
are interested<font color="#E5E5E5"> in</font><font color="#CCCCCC"> looking at</font><font color="#E5E5E5"> the</font>

591
00:21:53,650 --> 00:21:58,980
different<font color="#CCCCCC"> dll's</font><font color="#E5E5E5"> to go through here's an</font>

592
00:21:56,260 --> 00:22:01,860
<font color="#CCCCCC">interesting one so a DFS</font><font color="#E5E5E5"> does have a</font>

593
00:21:58,980 --> 00:22:03,880
utility<font color="#CCCCCC"> that's not enabled</font><font color="#E5E5E5"> by default</font>

594
00:22:01,860 --> 00:22:06,070
<font color="#CCCCCC">that is</font><font color="#E5E5E5"> externally accessible</font><font color="#CCCCCC"> that</font>

595
00:22:03,880 --> 00:22:07,990
allows you<font color="#E5E5E5"> to change user allow users to</font>

596
00:22:06,070 --> 00:22:10,060
<font color="#E5E5E5">change their</font><font color="#CCCCCC"> own password</font><font color="#E5E5E5"> so it's the</font>

597
00:22:07,990 --> 00:22:11,670
standard<font color="#E5E5E5"> old password new passwords new</font>

598
00:22:10,060 --> 00:22:14,740
<font color="#E5E5E5">password</font><font color="#CCCCCC"> again</font>

599
00:22:11,670 --> 00:22:16,800
now you can utilize the method that

600
00:22:14,740 --> 00:22:19,350
supports that<font color="#CCCCCC"> in any piece of</font><font color="#E5E5E5"> code</font>

601
00:22:16,800 --> 00:22:22,020
that's on that<font color="#CCCCCC"> adfs system</font><font color="#E5E5E5"> and</font>

602
00:22:19,350 --> 00:22:23,419
potentially say change user passwords to

603
00:22:22,020 --> 00:22:26,340
maintain access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> certain account</font>

604
00:22:23,420 --> 00:22:28,950
again<font color="#E5E5E5"> whatever your mind can think up</font>

605
00:22:26,340 --> 00:22:31,889
<font color="#E5E5E5">you can probably do it within editing</font>

606
00:22:28,950 --> 00:22:34,620
the<font color="#CCCCCC"> dll's here</font><font color="#E5E5E5"> on the ad FS</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> so</font>

607
00:22:31,890 --> 00:22:36,240
very simple<font color="#CCCCCC"> process</font><font color="#E5E5E5"> kill suspend the</font>

608
00:22:34,620 --> 00:22:40,979
service basically<font color="#E5E5E5"> release the handle</font>

609
00:22:36,240 --> 00:22:42,630
<font color="#CCCCCC">replace the DLL restart it now there's a</font>

610
00:22:40,980 --> 00:22:44,310
lot of different adapters out there so

611
00:22:42,630 --> 00:22:46,620
<font color="#E5E5E5">you basically have</font><font color="#CCCCCC"> to just read</font><font color="#E5E5E5"> the read</font>

612
00:22:44,310 --> 00:22:49,379
<font color="#CCCCCC">the code to understand the flow but all</font>

613
00:22:46,620 --> 00:22:51,389
of them in the end can be<font color="#E5E5E5"> subverted</font>

614
00:22:49,380 --> 00:22:54,120
<font color="#E5E5E5">because at the end of the day as Doug</font>

615
00:22:51,390 --> 00:22:56,760
said<font color="#CCCCCC"> ad</font><font color="#E5E5E5"> FS</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the final word on</font>

616
00:22:54,120 --> 00:22:58,679
<font color="#E5E5E5">authentication if</font><font color="#CCCCCC"> 80 FS is that you are</font>

617
00:22:56,760 --> 00:23:00,740
allowed<font color="#CCCCCC"> to access something</font><font color="#E5E5E5"> it does not</font>

618
00:22:58,680 --> 00:23:04,440
matter what other identity provider says

619
00:23:00,740 --> 00:23:06,000
you can just get access now<font color="#E5E5E5"> these</font>

620
00:23:04,440 --> 00:23:07,920
techniques<font color="#CCCCCC"> can also</font><font color="#E5E5E5"> be used dynamically</font>

621
00:23:06,000 --> 00:23:10,080
<font color="#CCCCCC">so for example you could patch the</font><font color="#E5E5E5"> dll's</font>

622
00:23:07,920 --> 00:23:11,550
in memory if you<font color="#E5E5E5"> wanted to it's a more</font>

623
00:23:10,080 --> 00:23:14,490
stealthy way to do it but there<font color="#CCCCCC"> are some</font>

624
00:23:11,550 --> 00:23:16,680
drawbacks<font color="#CCCCCC"> in large environments AD</font><font color="#E5E5E5"> FS is</font>

625
00:23:14,490 --> 00:23:18,870
usually farmed so you'd have to<font color="#E5E5E5"> install</font>

626
00:23:16,680 --> 00:23:20,820
memory patches on every<font color="#E5E5E5"> ad</font><font color="#CCCCCC"> F sub ad FS</font>

627
00:23:18,870 --> 00:23:23,879
server<font color="#E5E5E5"> if you wanted to consistently</font>

628
00:23:20,820 --> 00:23:25,470
trigger that exception<font color="#CCCCCC"> also</font><font color="#E5E5E5"> if the</font>

629
00:23:23,880 --> 00:23:27,180
system has<font color="#CCCCCC"> to restart or get patched</font>

630
00:23:25,470 --> 00:23:28,950
<font color="#E5E5E5">then you have to have some sort</font><font color="#CCCCCC"> of</font>

631
00:23:27,180 --> 00:23:31,800
persistence mechanism that<font color="#E5E5E5"> reinstalls</font>

632
00:23:28,950 --> 00:23:33,480
<font color="#E5E5E5">the the shim in memory</font><font color="#CCCCCC"> so there</font><font color="#E5E5E5"> are some</font>

633
00:23:31,800 --> 00:23:36,810
<font color="#CCCCCC">trade-offs but the technique still</font>

634
00:23:33,480 --> 00:23:38,850
applies here<font color="#E5E5E5"> so that said here's direct</font>

635
00:23:36,810 --> 00:23:40,139
attacks<font color="#E5E5E5"> on ad FS where you can go and</font>

636
00:23:38,850 --> 00:23:42,330
play<font color="#CCCCCC"> around</font><font color="#E5E5E5"> and muck about with the code</font>

637
00:23:40,140 --> 00:23:44,130
but there's still<font color="#E5E5E5"> another level of</font>

638
00:23:42,330 --> 00:23:45,470
abstraction<font color="#E5E5E5"> that's a little more</font>

639
00:23:44,130 --> 00:23:48,450
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> that Doug will talk</font><font color="#E5E5E5"> about</font>

640
00:23:45,470 --> 00:23:49,860
thank you<font color="#E5E5E5"> so when I first</font><font color="#CCCCCC"> started</font>

641
00:23:48,450 --> 00:23:51,540
looking<font color="#CCCCCC"> into</font><font color="#E5E5E5"> this I really got</font>

642
00:23:49,860 --> 00:23:53,669
interested<font color="#CCCCCC"> because</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> my existing</font>

643
00:23:51,540 --> 00:23:55,830
research<font color="#E5E5E5"> and office</font><font color="#CCCCCC"> 365 and how many</font>

644
00:23:53,670 --> 00:23:57,660
<font color="#CCCCCC">organizations were using ad FS as the</font>

645
00:23:55,830 --> 00:24:00,629
authentication<font color="#E5E5E5"> gateway to that</font><font color="#CCCCCC"> so I</font>

646
00:23:57,660 --> 00:24:02,100
<font color="#E5E5E5">started reading</font><font color="#CCCCCC"> up on</font><font color="#E5E5E5"> ad FS and I found</font>

647
00:24:00,630 --> 00:24:04,980
this<font color="#E5E5E5"> really nice quote by Microsoft</font>

648
00:24:02,100 --> 00:24:07,409
<font color="#E5E5E5">which basically sums up the the rest of</font>

649
00:24:04,980 --> 00:24:09,570
the talk<font color="#E5E5E5"> and it says the token signing</font>

650
00:24:07,410 --> 00:24:11,430
certificate is considered the bedrock<font color="#E5E5E5"> of</font>

651
00:24:09,570 --> 00:24:13,260
security and<font color="#CCCCCC"> AD FS if someone were to</font>

652
00:24:11,430 --> 00:24:15,110
<font color="#E5E5E5">get</font><font color="#CCCCCC"> ahold</font><font color="#E5E5E5"> of this certificate</font><font color="#CCCCCC"> they could</font>

653
00:24:13,260 --> 00:24:18,270
easily impersonate your<font color="#E5E5E5"> ad FS server</font>

654
00:24:15,110 --> 00:24:20,310
<font color="#E5E5E5">that makes sense we are ad FS experts we</font>

655
00:24:18,270 --> 00:24:22,650
know that the token signing certificate

656
00:24:20,310 --> 00:24:25,020
digitally signs our security tokens<font color="#E5E5E5"> and</font>

657
00:24:22,650 --> 00:24:27,030
that<font color="#E5E5E5"> are relying parties office 365</font>

658
00:24:25,020 --> 00:24:29,970
<font color="#E5E5E5">Dropbox</font><font color="#CCCCCC"> all they do is verify that</font>

659
00:24:27,030 --> 00:24:30,690
<font color="#E5E5E5">digital signature so these certificates</font>

660
00:24:29,970 --> 00:24:33,390
<font color="#E5E5E5">are</font>

661
00:24:30,690 --> 00:24:35,610
stored in the ad FS<font color="#CCCCCC"> server</font><font color="#E5E5E5"> service</font>

662
00:24:33,390 --> 00:24:37,830
accounts certificate store<font color="#E5E5E5"> you could</font>

663
00:24:35,610 --> 00:24:40,050
very simply<font color="#E5E5E5"> use me me cats to export the</font>

664
00:24:37,830 --> 00:24:41,699
certificate<font color="#CCCCCC"> but when I was</font><font color="#E5E5E5"> thinking</font>

665
00:24:40,050 --> 00:24:43,230
about this talk I realized<font color="#E5E5E5"> this wouldn't</font>

666
00:24:41,700 --> 00:24:45,600
<font color="#CCCCCC">make a very good conclusion to a talk</font>

667
00:24:43,230 --> 00:24:47,460
<font color="#E5E5E5">just</font><font color="#CCCCCC"> use me me cats so I decided to</font><font color="#E5E5E5"> go</font>

668
00:24:45,600 --> 00:24:51,209
deeper and<font color="#E5E5E5"> see if we actually can do</font>

669
00:24:47,460 --> 00:24:54,090
<font color="#CCCCCC">away with me me cats</font><font color="#E5E5E5"> in this case so</font>

670
00:24:51,210 --> 00:24:55,860
looking at the components<font color="#E5E5E5"> we have the</font>

671
00:24:54,090 --> 00:24:57,629
windows internal database<font color="#E5E5E5"> also known as</font>

672
00:24:55,860 --> 00:24:59,610
the wid<font color="#CCCCCC"> this is a relational database</font>

673
00:24:57,630 --> 00:25:02,160
that's<font color="#E5E5E5"> intended</font><font color="#CCCCCC"> to be used</font><font color="#E5E5E5"> only by</font>

674
00:24:59,610 --> 00:25:06,000
Microsoft products so products<font color="#CCCCCC"> like wsus</font>

675
00:25:02,160 --> 00:25:08,750
use the wid<font color="#E5E5E5"> not sure a TFS uses it a</font>

676
00:25:06,000 --> 00:25:11,700
couple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> ones</font><font color="#CCCCCC"> its MS sequel Lite</font>

677
00:25:08,750 --> 00:25:13,410
<font color="#E5E5E5">it's only accessible locally on the</font>

678
00:25:11,700 --> 00:25:16,800
system and<font color="#E5E5E5"> it's accessible over this</font>

679
00:25:13,410 --> 00:25:18,810
funky named pipe<font color="#E5E5E5"> luckily for us though</font>

680
00:25:16,800 --> 00:25:20,669
if we're local on<font color="#E5E5E5"> the server</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font>

681
00:25:18,810 --> 00:25:23,070
still<font color="#E5E5E5"> use sequel management studio to</font>

682
00:25:20,670 --> 00:25:24,930
connect to this wid and execute queries

683
00:25:23,070 --> 00:25:27,240
<font color="#CCCCCC">just as we would against a normal and</font>

684
00:25:24,930 --> 00:25:29,250
the sequel database and this is the

685
00:25:27,240 --> 00:25:31,920
<font color="#CCCCCC">default option for a TFS to use the wid</font>

686
00:25:29,250 --> 00:25:33,660
<font color="#E5E5E5">you can use a standalone MS sequel</font>

687
00:25:31,920 --> 00:25:36,120
server<font color="#E5E5E5"> but that introduces more</font>

688
00:25:33,660 --> 00:25:37,920
complexity<font color="#E5E5E5"> more risks it also allows you</font>

689
00:25:36,120 --> 00:25:40,679
<font color="#CCCCCC">to</font><font color="#E5E5E5"> use some interesting features</font><font color="#CCCCCC"> of a</font>

690
00:25:37,920 --> 00:25:42,420
DFS that you can't use with the<font color="#E5E5E5"> wid but</font>

691
00:25:40,680 --> 00:25:44,790
from at least<font color="#E5E5E5"> my anecdotal experience</font>

692
00:25:42,420 --> 00:25:49,410
most client organizations are just using

693
00:25:44,790 --> 00:25:50,879
<font color="#CCCCCC">the default</font><font color="#E5E5E5"> wid so how do we</font><font color="#CCCCCC"> access the</font>

694
00:25:49,410 --> 00:25:52,170
<font color="#CCCCCC">wid we already mentioned that</font><font color="#E5E5E5"> you need</font>

695
00:25:50,880 --> 00:25:55,710
to be local on<font color="#E5E5E5"> the server and you</font>

696
00:25:52,170 --> 00:25:58,430
<font color="#CCCCCC">actually have to be the a DFS service</font>

697
00:25:55,710 --> 00:26:01,680
account in my case<font color="#CCCCCC"> SBC underscore a DFS</font>

698
00:25:58,430 --> 00:26:03,120
the<font color="#CCCCCC"> SA account is disabled</font><font color="#E5E5E5"> you couldn't</font>

699
00:26:01,680 --> 00:26:05,280
even<font color="#E5E5E5"> access this database if you were a</font>

700
00:26:03,120 --> 00:26:08,820
domain admin you need to be the<font color="#E5E5E5"> a DFS</font>

701
00:26:05,280 --> 00:26:10,320
service account in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> access it</font><font color="#E5E5E5"> so</font>

702
00:26:08,820 --> 00:26:13,439
looking around at the different<font color="#CCCCCC"> tables</font>

703
00:26:10,320 --> 00:26:15,870
and<font color="#E5E5E5"> there are many I found the identity</font>

704
00:26:13,440 --> 00:26:18,510
server policy service setting table<font color="#E5E5E5"> it's</font>

705
00:26:15,870 --> 00:26:20,879
a table<font color="#E5E5E5"> with a single row and the the</font>

706
00:26:18,510 --> 00:26:22,830
column that is<font color="#E5E5E5"> of interest</font><font color="#CCCCCC"> to us</font><font color="#E5E5E5"> is a</font>

707
00:26:20,880 --> 00:26:24,660
column that<font color="#CCCCCC"> contains an XML document</font>

708
00:26:22,830 --> 00:26:27,620
with all sorts of configuration

709
00:26:24,660 --> 00:26:30,060
information<font color="#E5E5E5"> that</font><font color="#CCCCCC"> a DFS needs to start up</font>

710
00:26:27,620 --> 00:26:33,000
one<font color="#E5E5E5"> of them that caught my eye was the</font>

711
00:26:30,060 --> 00:26:34,889
signing token XML tag it has a couple<font color="#CCCCCC"> of</font>

712
00:26:33,000 --> 00:26:36,930
<font color="#CCCCCC">different child element child elements</font>

713
00:26:34,890 --> 00:26:39,180
one of them is this thing here which is

714
00:26:36,930 --> 00:26:40,980
just<font color="#E5E5E5"> a certificate fingerprint and it</font>

715
00:26:39,180 --> 00:26:42,630
matched up<font color="#E5E5E5"> to the fingerprint of</font><font color="#CCCCCC"> the ad</font>

716
00:26:40,980 --> 00:26:44,100
FS signing certificate<font color="#E5E5E5"> in the</font>

717
00:26:42,630 --> 00:26:44,580
<font color="#E5E5E5">certificate store so I knew I was on the</font>

718
00:26:44,100 --> 00:26:46,800
<font color="#E5E5E5">right</font><font color="#CCCCCC"> track</font>

719
00:26:44,580 --> 00:26:48,629
we also have the raw certificate which

720
00:26:46,800 --> 00:26:49,860
<font color="#CCCCCC">is just the public component and then we</font>

721
00:26:48,630 --> 00:26:52,350
have this interesting<font color="#E5E5E5"> thing called</font>

722
00:26:49,860 --> 00:26:54,090
encrypted pfx<font color="#E5E5E5"> which is a basic ste</font><font color="#CCCCCC"> 4</font>

723
00:26:52,350 --> 00:26:57,120
encoded<font color="#E5E5E5"> string that from the title</font>

724
00:26:54,090 --> 00:27:00,480
stands to reason<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> PF X file so</font><font color="#E5E5E5"> a</font>

725
00:26:57,120 --> 00:27:03,209
pkcs12<font color="#E5E5E5"> archive format that</font><font color="#CCCCCC"> has been</font>

726
00:27:00,480 --> 00:27:05,960
encrypted somehow so<font color="#E5E5E5"> I started</font><font color="#CCCCCC"> thinking</font>

727
00:27:03,210 --> 00:27:08,550
<font color="#CCCCCC">about how could</font><font color="#E5E5E5"> this be encrypted</font><font color="#CCCCCC"> DP</font><font color="#E5E5E5"> API</font>

728
00:27:05,960 --> 00:27:11,460
<font color="#CCCCCC">some sort of encrypt symmetric</font>

729
00:27:08,550 --> 00:27:13,409
encryption<font color="#E5E5E5"> wasn't really sure but</font>

730
00:27:11,460 --> 00:27:15,480
looking<font color="#CCCCCC"> through that XML document I saw</font>

731
00:27:13,410 --> 00:27:17,370
<font color="#E5E5E5">another interesting element called dkm</font>

732
00:27:15,480 --> 00:27:19,860
<font color="#E5E5E5">settings and it caught my eye</font><font color="#CCCCCC"> because I</font>

733
00:27:17,370 --> 00:27:21,270
had no<font color="#E5E5E5"> idea what dkm meant and also</font>

734
00:27:19,860 --> 00:27:23,969
because I could see a lot<font color="#CCCCCC"> of kind of</font>

735
00:27:21,270 --> 00:27:27,120
<font color="#CCCCCC">Active Directory</font><font color="#E5E5E5"> kind of stuff so</font><font color="#CCCCCC"> caught</font>

736
00:27:23,970 --> 00:27:29,070
my eye<font color="#E5E5E5"> quick Google search returned some</font>

737
00:27:27,120 --> 00:27:32,100
results<font color="#E5E5E5"> among them a nice Microsoft</font>

738
00:27:29,070 --> 00:27:33,659
Research<font color="#E5E5E5"> article about dkm a distributed</font>

739
00:27:32,100 --> 00:27:36,240
key management<font color="#E5E5E5"> system with a</font>

740
00:27:33,660 --> 00:27:38,880
cryptographically verified codebase<font color="#CCCCCC"> DKIM</font>

741
00:27:36,240 --> 00:27:42,270
implements<font color="#CCCCCC"> a new data protection API</font><font color="#E5E5E5"> huh</font>

742
00:27:38,880 --> 00:27:43,920
data<font color="#E5E5E5"> protection API maybe that is what</font>

743
00:27:42,270 --> 00:27:47,790
is being<font color="#CCCCCC"> used to encrypt the certificate</font>

744
00:27:43,920 --> 00:27:49,800
so<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> an ad</font><font color="#CCCCCC"> Explorer we can find it</font>

745
00:27:47,790 --> 00:27:51,510
here along<font color="#E5E5E5"> this little path and I can</font>

746
00:27:49,800 --> 00:27:53,100
see that<font color="#E5E5E5"> in</font><font color="#CCCCCC"> addition to the</font><font color="#E5E5E5"> sort of</font>

747
00:27:51,510 --> 00:27:54,870
normal privileged groups that<font color="#E5E5E5"> I would</font>

748
00:27:53,100 --> 00:27:57,449
expect<font color="#E5E5E5"> have access to some sort</font><font color="#CCCCCC"> of</font>

749
00:27:54,870 --> 00:27:59,610
important<font color="#E5E5E5"> crypto material can</font><font color="#CCCCCC"> also see</font>

750
00:27:57,450 --> 00:28:02,610
that my<font color="#E5E5E5"> ad FS service account has</font>

751
00:27:59,610 --> 00:28:04,169
<font color="#E5E5E5">read/write control of this object which</font>

752
00:28:02,610 --> 00:28:06,959
is of the<font color="#E5E5E5"> type of contact so not a user</font>

753
00:28:04,170 --> 00:28:09,080
but<font color="#CCCCCC"> a contact</font><font color="#E5E5E5"> so again probably</font><font color="#CCCCCC"> on the</font>

754
00:28:06,960 --> 00:28:11,310
right<font color="#E5E5E5"> track but</font><font color="#CCCCCC"> I needed to go further</font>

755
00:28:09,080 --> 00:28:14,220
<font color="#E5E5E5">we</font><font color="#CCCCCC"> needed to start looking at</font><font color="#E5E5E5"> the actual</font>

756
00:28:11,310 --> 00:28:15,840
<font color="#E5E5E5">code so all of the ad FS service is just</font>

757
00:28:14,220 --> 00:28:18,990
written in dotnet<font color="#E5E5E5"> so we can very easily</font>

758
00:28:15,840 --> 00:28:21,439
<font color="#E5E5E5">inspect it Indian spy very useful I have</font>

759
00:28:18,990 --> 00:28:24,290
no idea how Ida works so this saved me

760
00:28:21,440 --> 00:28:26,310
<font color="#CCCCCC">and we see</font><font color="#E5E5E5"> load certificate collection</font>

761
00:28:24,290 --> 00:28:28,379
pretty easy to understand what that

762
00:28:26,310 --> 00:28:29,610
<font color="#E5E5E5">function</font><font color="#CCCCCC"> is going to do and the</font><font color="#E5E5E5"> first</font>

763
00:28:28,380 --> 00:28:31,200
<font color="#E5E5E5">thing it's gonna try is to load the</font>

764
00:28:29,610 --> 00:28:32,969
certificate from<font color="#E5E5E5"> the user store this</font>

765
00:28:31,200 --> 00:28:35,610
makes<font color="#E5E5E5"> sense it's</font><font color="#CCCCCC"> just easy</font><font color="#E5E5E5"> right we're</font>

766
00:28:32,970 --> 00:28:38,010
using built-in<font color="#CCCCCC"> windows features but if</font>

767
00:28:35,610 --> 00:28:39,810
for<font color="#E5E5E5"> some reason</font><font color="#CCCCCC"> that fails</font><font color="#E5E5E5"> it's going to</font>

768
00:28:38,010 --> 00:28:41,900
start<font color="#CCCCCC"> looking at the encrypted pfx</font>

769
00:28:39,810 --> 00:28:44,850
blob<font color="#E5E5E5"> from the configuration database</font>

770
00:28:41,900 --> 00:28:46,410
<font color="#CCCCCC">it's gonna base64 decode it and</font><font color="#E5E5E5"> it's</font>

771
00:28:44,850 --> 00:28:49,709
<font color="#E5E5E5">gonna pass it to this little unprotect</font>

772
00:28:46,410 --> 00:28:52,230
method the unprotect method is from the

773
00:28:49,710 --> 00:28:53,820
dkm data protector class<font color="#CCCCCC"> okay so I'm</font>

774
00:28:52,230 --> 00:28:57,360
<font color="#E5E5E5">probably on</font><font color="#CCCCCC"> the right track still with</font>

775
00:28:53,820 --> 00:28:57,840
my<font color="#CCCCCC"> dkn thing it's going</font><font color="#E5E5E5"> to call some</font>

776
00:28:57,360 --> 00:28:59,850
<font color="#E5E5E5">other</font>

777
00:28:57,840 --> 00:29:02,820
unprotect methods<font color="#CCCCCC"> eventually we're going</font>

778
00:28:59,850 --> 00:29:04,918
<font color="#E5E5E5">to get to an object of the</font><font color="#CCCCCC"> class dkm</font>

779
00:29:02,820 --> 00:29:07,590
base and this<font color="#E5E5E5"> is where the</font><font color="#CCCCCC"> magic happens</font>

780
00:29:04,919 --> 00:29:09,510
<font color="#CCCCCC">I can see my unprotect method and I've</font>

781
00:29:07,590 --> 00:29:12,510
got a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different things there's a</font>

782
00:29:09,510 --> 00:29:14,330
call<font color="#E5E5E5"> to decode protected blob</font><font color="#CCCCCC"> so some</font>

783
00:29:12,510 --> 00:29:17,850
sort<font color="#E5E5E5"> of decoding is being done</font><font color="#CCCCCC"> I'm</font>

784
00:29:14,330 --> 00:29:20,668
getting a key length<font color="#CCCCCC"> I am reading my dkm</font>

785
00:29:17,850 --> 00:29:22,678
key<font color="#CCCCCC"> okay it</font><font color="#E5E5E5"> looks like there's</font><font color="#CCCCCC"> actually</font>

786
00:29:20,669 --> 00:29:25,320
some key derivation<font color="#CCCCCC"> here so some</font><font color="#E5E5E5"> more</font>

787
00:29:22,679 --> 00:29:26,880
fun crypto time<font color="#CCCCCC"> and then finally we have</font>

788
00:29:25,320 --> 00:29:28,918
an authenticated decrypt call so that's

789
00:29:26,880 --> 00:29:32,549
<font color="#E5E5E5">probably where finally I have a</font><font color="#CCCCCC"> usable</font>

790
00:29:28,919 --> 00:29:34,049
<font color="#E5E5E5">signing certificate so unpacking that</font><font color="#CCCCCC"> a</font>

791
00:29:32,549 --> 00:29:36,418
little bit we have<font color="#E5E5E5"> our first function</font>

792
00:29:34,049 --> 00:29:38,399
<font color="#E5E5E5">called decode protected blob it turns</font>

793
00:29:36,419 --> 00:29:40,409
out the<font color="#E5E5E5"> encrypted pfx blob from the</font>

794
00:29:38,399 --> 00:29:41,879
<font color="#E5E5E5">configuration database</font><font color="#CCCCCC"> is not just</font>

795
00:29:40,409 --> 00:29:43,919
<font color="#CCCCCC">ciphertext of the certificate it's</font>

796
00:29:41,880 --> 00:29:46,380
actually a binary blob that contains a

797
00:29:43,919 --> 00:29:48,779
<font color="#E5E5E5">bunch of asn.1 encoded</font><font color="#CCCCCC"> D are encoded</font>

798
00:29:46,380 --> 00:29:51,210
asn.1<font color="#E5E5E5"> types and they're all the types</font>

799
00:29:48,779 --> 00:29:52,950
that<font color="#E5E5E5"> a TFS needs in</font><font color="#CCCCCC"> order to actually</font>

800
00:29:51,210 --> 00:29:54,090
decrypt<font color="#E5E5E5"> our</font><font color="#CCCCCC"> cypher</font><font color="#E5E5E5"> text</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> have</font>

801
00:29:52,950 --> 00:29:56,970
things<font color="#CCCCCC"> like</font><font color="#E5E5E5"> the encryption and</font>

802
00:29:54,090 --> 00:29:58,889
<font color="#E5E5E5">initialization vector a nonce different</font>

803
00:29:56,970 --> 00:30:01,529
object identifier for the<font color="#E5E5E5"> actual</font>

804
00:29:58,890 --> 00:30:03,779
algorithms<font color="#E5E5E5"> being used the</font><font color="#CCCCCC"> ciphertext</font>

805
00:30:01,529 --> 00:30:05,730
<font color="#CCCCCC">obviously and then a</font><font color="#E5E5E5"> max value</font><font color="#CCCCCC"> that's</font>

806
00:30:03,779 --> 00:30:10,860
going<font color="#E5E5E5"> to be used to validate the</font>

807
00:30:05,730 --> 00:30:13,230
integrity of the<font color="#CCCCCC"> ciphertext itself we're</font>

808
00:30:10,860 --> 00:30:16,080
also doing some key derivation<font color="#E5E5E5"> so the</font>

809
00:30:13,230 --> 00:30:17,850
key derivation<font color="#CCCCCC"> here is H max sha-256</font>

810
00:30:16,080 --> 00:30:21,720
<font color="#E5E5E5">which is a standard</font><font color="#CCCCCC"> P derivation</font>

811
00:30:17,850 --> 00:30:23,370
function defined by nist SP 800 -<font color="#E5E5E5"> 108 so</font>

812
00:30:21,720 --> 00:30:25,380
we're taking the<font color="#E5E5E5"> DK</font><font color="#CCCCCC"> m key</font><font color="#E5E5E5"> from active</font>

813
00:30:23,370 --> 00:30:27,149
directory as input we're putting it

814
00:30:25,380 --> 00:30:30,059
<font color="#E5E5E5">through our key derivation algorithm and</font>

815
00:30:27,149 --> 00:30:33,779
we're<font color="#CCCCCC"> getting out of it an aes symmetric</font>

816
00:30:30,059 --> 00:30:35,428
key as well<font color="#E5E5E5"> as a shot 256</font><font color="#CCCCCC"> h matt key and</font>

817
00:30:33,779 --> 00:30:37,020
this<font color="#E5E5E5"> is pretty simple thankfully the the</font>

818
00:30:35,429 --> 00:30:39,750
<font color="#E5E5E5">function name tells us that we're</font>

819
00:30:37,020 --> 00:30:41,850
following the<font color="#CCCCCC"> NIST</font><font color="#E5E5E5"> standard exactly it's</font>

820
00:30:39,750 --> 00:30:42,960
close<font color="#CCCCCC"> to the standard</font><font color="#E5E5E5"> not exactly to the</font>

821
00:30:41,850 --> 00:30:44,158
standard I<font color="#CCCCCC"> had to do some</font><font color="#E5E5E5"> little</font>

822
00:30:42,960 --> 00:30:47,309
tweaking<font color="#CCCCCC"> and</font><font color="#E5E5E5"> Python</font>

823
00:30:44,159 --> 00:30:49,080
I'm not a cryptographer so I cannot tell

824
00:30:47,309 --> 00:30:50,879
<font color="#E5E5E5">you if this does or does not change like</font>

825
00:30:49,080 --> 00:30:53,010
<font color="#CCCCCC">the integrity of the key derivation I</font>

826
00:30:50,880 --> 00:30:56,580
don't think it<font color="#E5E5E5"> does</font><font color="#CCCCCC"> but it did require</font><font color="#E5E5E5"> a</font>

827
00:30:53,010 --> 00:30:59,250
<font color="#E5E5E5">slight modification so I have my a</font><font color="#CCCCCC"> AES</font>

828
00:30:56,580 --> 00:31:02,549
encryption key I<font color="#E5E5E5"> have my</font><font color="#CCCCCC"> 16 byte</font>

829
00:30:59,250 --> 00:31:04,380
initialization vector from the blob<font color="#E5E5E5"> and</font>

830
00:31:02,549 --> 00:31:06,179
<font color="#CCCCCC">then I just used the standard Windows</font>

831
00:31:04,380 --> 00:31:08,340
crypto library to actually decrypt my

832
00:31:06,179 --> 00:31:10,260
<font color="#CCCCCC">ciphertext</font><font color="#E5E5E5"> and get a usable signing</font>

833
00:31:08,340 --> 00:31:11,580
certificate<font color="#E5E5E5"> and the nice</font><font color="#CCCCCC"> thing about</font>

834
00:31:10,260 --> 00:31:13,379
this is that<font color="#E5E5E5"> the signings</font>

835
00:31:11,580 --> 00:31:15,179
certificate is valid<font color="#CCCCCC"> for one year which</font>

836
00:31:13,380 --> 00:31:17,030
means I<font color="#E5E5E5"> get</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be an ad FS server for a</font>

837
00:31:15,180 --> 00:31:21,210
whole year

838
00:31:17,030 --> 00:31:22,770
so<font color="#E5E5E5"> I really like this mean except this</font>

839
00:31:21,210 --> 00:31:25,560
<font color="#E5E5E5">time I decided to become an ad FS server</font>

840
00:31:22,770 --> 00:31:28,440
<font color="#E5E5E5">instead of a domain controller</font><font color="#CCCCCC"> to sum it</font>

841
00:31:25,560 --> 00:31:30,330
all up<font color="#CCCCCC"> I'm reading an encrypted pfx</font><font color="#E5E5E5"> blob</font>

842
00:31:28,440 --> 00:31:32,640
<font color="#E5E5E5">from the configuration database</font><font color="#CCCCCC"> I'm</font>

843
00:31:30,330 --> 00:31:35,220
<font color="#E5E5E5">pulling out some asn.1 types and the</font>

844
00:31:32,640 --> 00:31:37,740
<font color="#CCCCCC">ciphertext</font><font color="#E5E5E5"> I'm gonna read a DK</font><font color="#CCCCCC"> M key</font>

845
00:31:35,220 --> 00:31:41,090
<font color="#E5E5E5">from</font><font color="#CCCCCC"> Active Directory that DK</font><font color="#E5E5E5"> M key is</font>

846
00:31:37,740 --> 00:31:44,010
then used<font color="#E5E5E5"> to derive an</font><font color="#CCCCCC"> AES symmetric key</font>

847
00:31:41,090 --> 00:31:47,340
finally I can decrypt my ciphertext into

848
00:31:44,010 --> 00:31:49,140
a<font color="#CCCCCC"> usable pkcs12 object</font><font color="#E5E5E5"> and finally I've</font>

849
00:31:47,340 --> 00:31:53,699
become an ad FS<font color="#E5E5E5"> server I can</font><font color="#CCCCCC"> actually</font>

850
00:31:49,140 --> 00:31:56,190
sign my own<font color="#E5E5E5"> security tokens</font><font color="#CCCCCC"> so we talked</font>

851
00:31:53,700 --> 00:31:58,200
<font color="#E5E5E5">about</font><font color="#CCCCCC"> mfa and we're all maybe</font><font color="#E5E5E5"> some of us</font>

852
00:31:56,190 --> 00:31:59,970
<font color="#E5E5E5">are thinking all but</font><font color="#CCCCCC"> i have</font><font color="#E5E5E5"> m fa a-- so</font>

853
00:31:58,200 --> 00:32:02,250
<font color="#CCCCCC">i'm</font><font color="#E5E5E5"> okay right you can create the tokens</font>

854
00:31:59,970 --> 00:32:03,420
but they're still<font color="#CCCCCC"> they're still MSIM</font><font color="#E5E5E5"> fa</font>

855
00:32:02,250 --> 00:32:06,690
is you know it's a<font color="#E5E5E5"> silver bullet for</font>

856
00:32:03,420 --> 00:32:08,910
security well the issue is<font color="#E5E5E5"> that ad FS</font>

857
00:32:06,690 --> 00:32:11,310
<font color="#CCCCCC">actually controls what they call strong</font>

858
00:32:08,910 --> 00:32:13,860
authentication<font color="#E5E5E5"> strong</font><font color="#CCCCCC"> authentication is</font>

859
00:32:11,310 --> 00:32:16,169
any<font color="#E5E5E5"> additional factor it can be an</font><font color="#CCCCCC"> mfa</font>

860
00:32:13,860 --> 00:32:18,449
can be certificates it could be a blood

861
00:32:16,170 --> 00:32:21,510
oath whatever you want<font color="#CCCCCC"> a DFS is actually</font>

862
00:32:18,450 --> 00:32:23,880
<font color="#E5E5E5">controlling it so if we can issue our</font>

863
00:32:21,510 --> 00:32:25,650
own security<font color="#E5E5E5"> tokens then we can just say</font>

864
00:32:23,880 --> 00:32:28,320
yeah I<font color="#CCCCCC"> don't care</font><font color="#E5E5E5"> about MFA actually I'm</font>

865
00:32:25,650 --> 00:32:31,170
just<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to ignore it</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> the relying</font>

866
00:32:28,320 --> 00:32:33,389
parties so office 365<font color="#E5E5E5"> drop boxes and</font>

867
00:32:31,170 --> 00:32:35,040
desk<font color="#CCCCCC"> they actually have no idea what</font>

868
00:32:33,390 --> 00:32:36,930
these strong authentication<font color="#CCCCCC"> requirements</font>

869
00:32:35,040 --> 00:32:38,460
are the only<font color="#E5E5E5"> thing they care about the</font>

870
00:32:36,930 --> 00:32:40,860
only<font color="#E5E5E5"> thing they live to do is receive a</font>

871
00:32:38,460 --> 00:32:43,590
security token<font color="#E5E5E5"> verify</font><font color="#CCCCCC"> it's digital</font>

872
00:32:40,860 --> 00:32:45,510
signature and give someone<font color="#E5E5E5"> access so we</font>

873
00:32:43,590 --> 00:32:47,310
<font color="#CCCCCC">just can throw MFA out the window if we</font>

874
00:32:45,510 --> 00:32:49,710
can create our<font color="#E5E5E5"> own security</font><font color="#CCCCCC"> tokens</font><font color="#E5E5E5"> right</font>

875
00:32:47,310 --> 00:32:51,330
and that that distinction is important

876
00:32:49,710 --> 00:32:53,400
because when someone installs

877
00:32:51,330 --> 00:32:55,620
multi-factor authentication<font color="#CCCCCC"> they think</font>

878
00:32:53,400 --> 00:32:58,200
<font color="#E5E5E5">that there's some integral piece or</font>

879
00:32:55,620 --> 00:33:00,629
information that that<font color="#E5E5E5"> service has that</font>

880
00:32:58,200 --> 00:33:03,960
authentication can't happen without but

881
00:33:00,630 --> 00:33:05,730
with a DFS<font color="#E5E5E5"> duo may as well get removed</font>

882
00:33:03,960 --> 00:33:06,990
<font color="#E5E5E5">from the entire chain because we don't</font>

883
00:33:05,730 --> 00:33:08,850
<font color="#E5E5E5">need any of</font><font color="#CCCCCC"> their information</font>

884
00:33:06,990 --> 00:33:10,980
we're telling<font color="#E5E5E5"> duo don't worry guys we</font>

885
00:33:08,850 --> 00:33:13,169
have this right<font color="#E5E5E5"> so that applies</font><font color="#CCCCCC"> to all</font>

886
00:33:10,980 --> 00:33:14,670
of<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> that gets protected by</font>

887
00:33:13,170 --> 00:33:17,220
multi-factor multi-factor authentication

888
00:33:14,670 --> 00:33:19,770
<font color="#CCCCCC">all your cloud resources your email all</font>

889
00:33:17,220 --> 00:33:22,170
<font color="#CCCCCC">of this applies yeah and that's because</font>

890
00:33:19,770 --> 00:33:24,150
the bedrock<font color="#CCCCCC"> of a TFS security is the</font>

891
00:33:22,170 --> 00:33:26,160
signing certificate<font color="#E5E5E5"> once you possess it</font>

892
00:33:24,150 --> 00:33:28,720
you are now<font color="#CCCCCC"> eightieth</font>

893
00:33:26,160 --> 00:33:30,370
so how can we actually leverage this how

894
00:33:28,720 --> 00:33:33,580
are we actually gonna weaponize this as

895
00:33:30,370 --> 00:33:35,590
operators<font color="#E5E5E5"> as red teamers</font><font color="#CCCCCC"> we're releasing</font>

896
00:33:33,580 --> 00:33:37,990
today<font color="#CCCCCC"> to tools</font><font color="#E5E5E5"> that will</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> available on</font>

897
00:33:35,590 --> 00:33:40,120
github immediately after the talk<font color="#E5E5E5"> the</font>

898
00:33:37,990 --> 00:33:42,070
<font color="#E5E5E5">first is called a DFS dump this is a</font>

899
00:33:40,120 --> 00:33:44,469
dotnet assembly<font color="#E5E5E5"> it's designed to be run</font>

900
00:33:42,070 --> 00:33:46,659
<font color="#E5E5E5">on the ad FS server itself and as we</font>

901
00:33:44,470 --> 00:33:49,090
already<font color="#E5E5E5"> mentioned</font><font color="#CCCCCC"> you need to be the SVC</font>

902
00:33:46,660 --> 00:33:51,039
<font color="#CCCCCC">sorry you must be</font><font color="#E5E5E5"> the ad</font><font color="#CCCCCC"> FS</font><font color="#E5E5E5"> service</font>

903
00:33:49,090 --> 00:33:53,289
account in order<font color="#E5E5E5"> to access the</font>

904
00:33:51,039 --> 00:33:54,910
<font color="#CCCCCC">configuration database</font><font color="#E5E5E5"> this tool assumes</font>

905
00:33:53,289 --> 00:33:56,410
you're using the<font color="#E5E5E5"> windows internal</font>

906
00:33:54,910 --> 00:33:58,470
<font color="#E5E5E5">database</font><font color="#CCCCCC"> although it's very easy to</font>

907
00:33:56,410 --> 00:34:00,610
<font color="#CCCCCC">change it to use an external</font><font color="#E5E5E5"> database</font>

908
00:33:58,470 --> 00:34:02,169
you run it on<font color="#E5E5E5"> the server</font><font color="#CCCCCC"> it's going to</font>

909
00:34:00,610 --> 00:34:04,209
dump all sorts of<font color="#CCCCCC"> information that you</font>

910
00:34:02,169 --> 00:34:07,390
need<font color="#CCCCCC"> to become an ad FS server that</font>

911
00:34:04,210 --> 00:34:09,040
encrypted<font color="#CCCCCC"> pfx the dkm group key the</font>

912
00:34:07,390 --> 00:34:10,780
<font color="#CCCCCC">information about</font><font color="#E5E5E5"> the relying parties</font>

913
00:34:09,040 --> 00:34:12,790
and very importantly the issuance rules

914
00:34:10,780 --> 00:34:15,070
for those relying parties<font color="#E5E5E5"> so we know</font>

915
00:34:12,790 --> 00:34:16,659
what information<font color="#CCCCCC"> we need to take and put</font>

916
00:34:15,070 --> 00:34:20,320
<font color="#E5E5E5">into our security tokens that</font><font color="#CCCCCC"> work</font>

917
00:34:16,659 --> 00:34:22,990
creating<font color="#E5E5E5"> our second tool</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> a DFS</font><font color="#CCCCCC"> spoof</font>

918
00:34:20,320 --> 00:34:24,460
also available<font color="#CCCCCC"> on github it's going to</font>

919
00:34:22,989 --> 00:34:26,408
be a Python program that's<font color="#CCCCCC"> designed to</font>

920
00:34:24,460 --> 00:34:28,570
be<font color="#E5E5E5"> offline run offline so run on your</font>

921
00:34:26,409 --> 00:34:29,980
own attacker system it does two main

922
00:34:28,570 --> 00:34:33,460
things<font color="#E5E5E5"> it's going to decrypt an</font>

923
00:34:29,980 --> 00:34:36,490
encrypted pfx blob<font color="#E5E5E5"> given a</font><font color="#CCCCCC"> dkm key so</font>

924
00:34:33,460 --> 00:34:38,500
give you a usable<font color="#E5E5E5"> signing certificate it</font>

925
00:34:36,489 --> 00:34:40,118
can also take just a plain certificate

926
00:34:38,500 --> 00:34:42,668
file that you<font color="#E5E5E5"> dumped using me me cats or</font>

927
00:34:40,119 --> 00:34:43,810
<font color="#E5E5E5">other tools if you</font><font color="#CCCCCC"> wanted and the second</font>

928
00:34:42,668 --> 00:34:45,580
thing it's<font color="#E5E5E5"> going to do is it's going to</font>

929
00:34:43,810 --> 00:34:47,379
<font color="#E5E5E5">generate signed sam'l tokens that you</font>

930
00:34:45,580 --> 00:34:50,980
<font color="#CCCCCC">can then send to any of the relying</font>

931
00:34:47,379 --> 00:34:52,839
parties configured as any user and going

932
00:34:50,980 --> 00:34:55,510
thinking back to sam'l and the standards

933
00:34:52,840 --> 00:34:57,850
<font color="#E5E5E5">why this is really</font><font color="#CCCCCC"> possible is</font><font color="#E5E5E5"> because</font>

934
00:34:55,510 --> 00:34:59,500
we know<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the sam'l tokens need to</font>

935
00:34:57,850 --> 00:35:01,810
look a specific way they need to<font color="#E5E5E5"> follow</font>

936
00:34:59,500 --> 00:35:04,000
the standard and we have the issuance

937
00:35:01,810 --> 00:35:05,770
rules<font color="#E5E5E5"> which actually tell us the</font>

938
00:35:04,000 --> 00:35:07,390
different attributes<font color="#CCCCCC"> the different</font>

939
00:35:05,770 --> 00:35:09,670
assertions<font color="#CCCCCC"> that we need to put into our</font>

940
00:35:07,390 --> 00:35:11,589
security token so from those issuance

941
00:35:09,670 --> 00:35:13,869
rules<font color="#E5E5E5"> we transform them into</font><font color="#CCCCCC"> xml</font>

942
00:35:11,590 --> 00:35:16,960
assertions we put them into<font color="#E5E5E5"> our token</font>

943
00:35:13,869 --> 00:35:18,609
<font color="#E5E5E5">and we sign it because I'm a nice</font><font color="#CCCCCC"> guy</font>

944
00:35:16,960 --> 00:35:20,590
I'm releasing<font color="#E5E5E5"> three templates with this</font>

945
00:35:18,609 --> 00:35:23,080
tool the<font color="#E5E5E5"> first is a template for office</font>

946
00:35:20,590 --> 00:35:25,390
365<font color="#CCCCCC"> the second is a template</font><font color="#E5E5E5"> for Dropbox</font>

947
00:35:23,080 --> 00:35:27,369
<font color="#CCCCCC">and the third is a generic sam'l 2.0</font>

948
00:35:25,390 --> 00:35:30,040
template so with the<font color="#E5E5E5"> last template you</font>

949
00:35:27,369 --> 00:35:32,500
should be able<font color="#E5E5E5"> to create signing signed</font>

950
00:35:30,040 --> 00:35:37,390
security tokens<font color="#E5E5E5"> for any relying party</font>

951
00:35:32,500 --> 00:35:40,959
that uses sam'l 2.0<font color="#CCCCCC"> ok so I don't trust</font>

952
00:35:37,390 --> 00:35:43,459
the demo gods I just do videos<font color="#E5E5E5"> instead</font>

953
00:35:40,959 --> 00:35:45,589
so we can see<font color="#E5E5E5"> I'm in cobalt strike</font><font color="#CCCCCC"> I've</font>

954
00:35:43,459 --> 00:35:48,198
compromised<font color="#CCCCCC"> in ad FS server and I'm</font>

955
00:35:45,589 --> 00:35:50,630
running<font color="#E5E5E5"> as the ad FS service account so</font>

956
00:35:48,199 --> 00:35:53,479
I<font color="#E5E5E5"> can now begin running my compromised</font>

957
00:35:50,630 --> 00:35:55,849
tools so I've run ad FS<font color="#E5E5E5"> dump using</font>

958
00:35:53,479 --> 00:35:58,009
execute assembly<font color="#E5E5E5"> I have the</font><font color="#CCCCCC"> DK MP from</font>

959
00:35:55,849 --> 00:36:01,849
<font color="#CCCCCC">Active Directory I have the encrypted</font>

960
00:35:58,009 --> 00:36:04,009
<font color="#E5E5E5">pfx blob it's going to tell me</font><font color="#CCCCCC"> that it's</font>

961
00:36:01,849 --> 00:36:05,599
<font color="#E5E5E5">ad FS 2016 which is important there's</font>

962
00:36:04,009 --> 00:36:07,369
some distinctions between versions<font color="#E5E5E5"> and</font>

963
00:36:05,599 --> 00:36:09,799
now it's dumped out<font color="#CCCCCC"> information about</font>

964
00:36:07,369 --> 00:36:11,900
the relying parties so office 365<font color="#E5E5E5"> and</font>

965
00:36:09,799 --> 00:36:14,059
this gives me<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the information I</font>

966
00:36:11,900 --> 00:36:15,739
would<font color="#CCCCCC"> need to</font><font color="#E5E5E5"> create a security token</font>

967
00:36:14,059 --> 00:36:18,439
template<font color="#E5E5E5"> if there wasn't</font><font color="#CCCCCC"> already one</font>

968
00:36:15,739 --> 00:36:20,180
that existed so the signing<font color="#CCCCCC"> algorithm</font>

969
00:36:18,439 --> 00:36:23,209
<font color="#E5E5E5">the</font><font color="#CCCCCC"> endpoint that I need to send the</font>

970
00:36:20,180 --> 00:36:25,549
<font color="#CCCCCC">token to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> hash type so most of</font><font color="#E5E5E5"> them</font>

971
00:36:23,209 --> 00:36:28,519
use<font color="#E5E5E5"> RSA sha-256 though there are older</font>

972
00:36:25,549 --> 00:36:30,380
ones<font color="#E5E5E5"> that use RSA sha-1 and then the</font>

973
00:36:28,519 --> 00:36:32,629
important part is<font color="#E5E5E5"> the issuance rules so</font>

974
00:36:30,380 --> 00:36:35,329
<font color="#E5E5E5">office</font><font color="#CCCCCC"> 365</font><font color="#E5E5E5"> the rules are extremely</font>

975
00:36:32,630 --> 00:36:37,219
<font color="#E5E5E5">complex I don't know why but most</font>

976
00:36:35,329 --> 00:36:38,719
relying parties like Dropbox for example

977
00:36:37,219 --> 00:36:40,699
Zendesk<font color="#CCCCCC"> their rules are simple</font><font color="#E5E5E5"> there</font>

978
00:36:38,719 --> 00:36:42,709
<font color="#CCCCCC">maybe have two or three rules and it's</font>

979
00:36:40,699 --> 00:36:44,779
very<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> for us to see</font><font color="#E5E5E5"> ok this rule</font>

980
00:36:42,709 --> 00:36:46,788
translates to this XML tag this rule

981
00:36:44,779 --> 00:36:49,279
translates to this XML tag<font color="#CCCCCC"> it's very</font>

982
00:36:46,789 --> 00:36:50,660
easy<font color="#CCCCCC"> to form your templates</font><font color="#E5E5E5"> and we have</font>

983
00:36:49,279 --> 00:36:52,759
an example<font color="#E5E5E5"> of a rule here we can see</font>

984
00:36:50,660 --> 00:36:54,379
we're<font color="#E5E5E5"> querying ad for the users user</font>

985
00:36:52,759 --> 00:36:56,660
principal name which is what office 365

986
00:36:54,380 --> 00:36:59,229
likes to use a lot<font color="#CCCCCC"> and then we're</font><font color="#E5E5E5"> going</font>

987
00:36:56,660 --> 00:37:01,489
to output<font color="#E5E5E5"> it as a claim of the type UPN</font>

988
00:36:59,229 --> 00:37:05,149
so I've got<font color="#CCCCCC"> all my information</font><font color="#E5E5E5"> I can now</font>

989
00:37:01,489 --> 00:37:07,069
use<font color="#CCCCCC"> ad</font><font color="#E5E5E5"> FS spoof I'm using office 365</font><font color="#CCCCCC"> and</font>

990
00:37:05,150 --> 00:37:08,479
the two different assertions<font color="#E5E5E5"> office 365</font>

991
00:37:07,069 --> 00:37:10,400
really needs at the end of the day is

992
00:37:08,479 --> 00:37:12,348
the user principal name<font color="#CCCCCC"> and the users</font>

993
00:37:10,400 --> 00:37:15,049
object<font color="#CCCCCC"> grid which we can</font><font color="#E5E5E5"> get from Active</font>

994
00:37:12,349 --> 00:37:17,599
Directory<font color="#CCCCCC"> as a simple query</font><font color="#E5E5E5"> I'm also</font>

995
00:37:15,049 --> 00:37:21,229
giving<font color="#E5E5E5"> it the encrypted pfx blob and the</font>

996
00:37:17,599 --> 00:37:24,410
dkm key so I hit go it<font color="#E5E5E5"> gives me this</font>

997
00:37:21,229 --> 00:37:27,109
nice garbage which is basically just<font color="#CCCCCC"> the</font>

998
00:37:24,410 --> 00:37:30,019
token<font color="#E5E5E5"> URL encoded so I can simply copy</font>

999
00:37:27,109 --> 00:37:32,269
<font color="#E5E5E5">and paste it somewhere I'm gonna use</font>

1000
00:37:30,019 --> 00:37:34,640
burp just because it's simple<font color="#E5E5E5"> we can see</font>

1001
00:37:32,269 --> 00:37:36,618
I'm sending the token<font color="#E5E5E5"> to office</font><font color="#CCCCCC"> 365's</font>

1002
00:37:34,640 --> 00:37:41,589
<font color="#E5E5E5">consumer endpoint login dot Microsoft</font>

1003
00:37:36,619 --> 00:37:44,929
online<font color="#CCCCCC"> com I just</font><font color="#E5E5E5"> paste in the token</font>

1004
00:37:41,589 --> 00:37:46,640
click go now I'm going to copy this

1005
00:37:44,929 --> 00:37:48,559
using<font color="#E5E5E5"> burp magic and put it into a</font>

1006
00:37:46,640 --> 00:37:52,790
incognito window<font color="#E5E5E5"> so I don't have any</font>

1007
00:37:48,559 --> 00:37:55,250
existing sessions<font color="#CCCCCC"> burp is really great</font>

1008
00:37:52,790 --> 00:37:57,529
just hit go<font color="#CCCCCC"> can see that</font><font color="#E5E5E5"> it's consumed</font>

1009
00:37:55,250 --> 00:38:00,050
the token<font color="#E5E5E5"> I'm Robinette DOE Corp</font><font color="#CCCCCC"> Co and</font>

1010
00:37:57,530 --> 00:38:05,360
it's very nicely logged me in to<font color="#E5E5E5"> office</font>

1011
00:38:00,050 --> 00:38:07,040
<font color="#CCCCCC">365 as our user Robin and I didn't know</font>

1012
00:38:05,360 --> 00:38:08,810
the users<font color="#CCCCCC"> password i</font><font color="#E5E5E5"> bypassed all the</font>

1013
00:38:07,040 --> 00:38:11,630
multi-factor requirements<font color="#E5E5E5"> that I had and</font>

1014
00:38:08,810 --> 00:38:13,130
I've now<font color="#E5E5E5"> accessed this users email just</font>

1015
00:38:11,630 --> 00:38:25,370
<font color="#E5E5E5">because I decided to become an ad FS</font>

1016
00:38:13,130 --> 00:38:27,050
<font color="#E5E5E5">server right so as part of this</font><font color="#CCCCCC"> as</font>

1017
00:38:25,370 --> 00:38:30,830
<font color="#E5E5E5">security practitioners we have to ask</font>

1018
00:38:27,050 --> 00:38:32,870
<font color="#E5E5E5">ourselves why does this matter so just</font>

1019
00:38:30,830 --> 00:38:34,700
as a<font color="#E5E5E5"> quick</font><font color="#CCCCCC"> question how many</font><font color="#E5E5E5"> people</font>

1020
00:38:32,870 --> 00:38:36,799
who've been<font color="#E5E5E5"> involved in incident</font>

1021
00:38:34,700 --> 00:38:39,529
response have ever heard of remediation

1022
00:38:36,800 --> 00:38:42,310
activity directly resetting material on

1023
00:38:39,530 --> 00:38:43,550
the ad<font color="#E5E5E5"> FS</font><font color="#CCCCCC"> server as</font><font color="#E5E5E5"> part of a compromise</font>

1024
00:38:42,310 --> 00:38:45,920
<font color="#E5E5E5">nice</font>

1025
00:38:43,550 --> 00:38:47,990
no hands are up in<font color="#E5E5E5"> this room that either</font>

1026
00:38:45,920 --> 00:38:50,090
<font color="#E5E5E5">means attackers have never compromised</font>

1027
00:38:47,990 --> 00:38:52,339
the ad FS<font color="#CCCCCC"> server or we've never thought</font>

1028
00:38:50,090 --> 00:38:55,040
<font color="#E5E5E5">to</font><font color="#CCCCCC"> actually look there for evidence of</font>

1029
00:38:52,340 --> 00:38:56,450
compromise so<font color="#CCCCCC"> that is what we're here</font>

1030
00:38:55,040 --> 00:38:57,680
<font color="#CCCCCC">for we're</font><font color="#E5E5E5"> not going to just drop this</font>

1031
00:38:56,450 --> 00:39:01,339
tool out<font color="#CCCCCC"> there without</font><font color="#E5E5E5"> giving some</font>

1032
00:38:57,680 --> 00:39:04,040
guidelines first and<font color="#E5E5E5"> foremost we cannot</font>

1033
00:39:01,340 --> 00:39:07,550
say this<font color="#CCCCCC"> enough you have</font><font color="#E5E5E5"> to secure</font><font color="#CCCCCC"> your</font>

1034
00:39:04,040 --> 00:39:11,360
privileged user access the ad<font color="#E5E5E5"> FS server</font>

1035
00:39:07,550 --> 00:39:13,700
<font color="#E5E5E5">is essentially</font><font color="#CCCCCC"> a domain controller you</font>

1036
00:39:11,360 --> 00:39:15,650
have<font color="#CCCCCC"> to treat it like</font><font color="#E5E5E5"> that what does</font>

1037
00:39:13,700 --> 00:39:17,359
<font color="#CCCCCC">that mean</font><font color="#E5E5E5"> you have to limit privileged</font>

1038
00:39:15,650 --> 00:39:19,850
access<font color="#CCCCCC"> you have to use multi-factor</font>

1039
00:39:17,360 --> 00:39:21,740
authentication jump boxes<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to</font>

1040
00:39:19,850 --> 00:39:24,230
read and take very detailed notes<font color="#E5E5E5"> as you</font>

1041
00:39:21,740 --> 00:39:26,060
<font color="#E5E5E5">watch</font><font color="#CCCCCC"> Shawn Metcalfe's</font><font color="#E5E5E5"> detailed talk on</font>

1042
00:39:24,230 --> 00:39:28,430
how to securely administer<font color="#E5E5E5"> your domain</font>

1043
00:39:26,060 --> 00:39:31,790
<font color="#E5E5E5">because he tells you how you should</font><font color="#CCCCCC"> be</font>

1044
00:39:28,430 --> 00:39:33,710
<font color="#E5E5E5">protecting your tier 0 devices but not</font>

1045
00:39:31,790 --> 00:39:37,820
everyone knows<font color="#CCCCCC"> that the ad FS</font><font color="#E5E5E5"> server is</font>

1046
00:39:33,710 --> 00:39:39,830
a tier 0 device second enhanced auditing

1047
00:39:37,820 --> 00:39:42,200
<font color="#E5E5E5">if you're</font><font color="#CCCCCC"> responsible for an ad FS</font>

1048
00:39:39,830 --> 00:39:44,390
<font color="#CCCCCC">server</font><font color="#E5E5E5"> you should</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> turn on success and</font>

1049
00:39:42,200 --> 00:39:47,330
failure audit logs<font color="#E5E5E5"> forward them to your</font>

1050
00:39:44,390 --> 00:39:51,710
sim enable audit application generated

1051
00:39:47,330 --> 00:39:53,750
events on<font color="#E5E5E5"> your ad FS via GPO</font><font color="#CCCCCC"> why the</font>

1052
00:39:51,710 --> 00:39:55,430
more<font color="#E5E5E5"> data you have</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> higher likelihood</font>

1053
00:39:53,750 --> 00:39:57,560
<font color="#E5E5E5">that you can trace evidence of</font>

1054
00:39:55,430 --> 00:39:59,540
compromised back to an ad FS<font color="#CCCCCC"> server</font>

1055
00:39:57,560 --> 00:40:01,160
<font color="#E5E5E5">because that is a critical piece we</font>

1056
00:39:59,540 --> 00:40:02,330
couldn't imagine a situation<font color="#E5E5E5"> where</font><font color="#CCCCCC"> we</font>

1057
00:40:01,160 --> 00:40:04,399
said well we<font color="#E5E5E5"> don't have any visibility</font>

1058
00:40:02,330 --> 00:40:05,259
<font color="#E5E5E5">on our domain controllers so we're</font><font color="#CCCCCC"> just</font>

1059
00:40:04,400 --> 00:40:09,700
<font color="#E5E5E5">going to ignore</font><font color="#CCCCCC"> it</font>

1060
00:40:05,260 --> 00:40:13,120
part of<font color="#E5E5E5"> our response make the adfs</font>

1061
00:40:09,700 --> 00:40:14,830
service account<font color="#CCCCCC"> AGM sa</font><font color="#E5E5E5"> generally</font>

1062
00:40:13,120 --> 00:40:16,120
speaking managed service accounts are

1063
00:40:14,830 --> 00:40:18,130
sort<font color="#CCCCCC"> of the way of the future</font>

1064
00:40:16,120 --> 00:40:20,620
they help resolve a lot<font color="#E5E5E5"> of problems with</font>

1065
00:40:18,130 --> 00:40:22,390
things like<font color="#E5E5E5"> Kerberos ting</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> ensures</font>

1066
00:40:20,620 --> 00:40:23,920
that Active Directory is taking<font color="#E5E5E5"> care of</font>

1067
00:40:22,390 --> 00:40:25,690
all the nuts and<font color="#E5E5E5"> bolts</font><font color="#CCCCCC"> of that account</font>

1068
00:40:23,920 --> 00:40:29,530
changing the password making it<font color="#E5E5E5"> highly</font>

1069
00:40:25,690 --> 00:40:31,800
complex use it<font color="#E5E5E5"> love it embrace</font><font color="#CCCCCC"> it</font>

1070
00:40:29,530 --> 00:40:34,870
additionally for<font color="#E5E5E5"> those people who are</font>

1071
00:40:31,800 --> 00:40:36,160
<font color="#CCCCCC">extremely paranoid you do have the</font>

1072
00:40:34,870 --> 00:40:38,560
<font color="#E5E5E5">option to use things like hardware</font>

1073
00:40:36,160 --> 00:40:41,170
<font color="#E5E5E5">security modules you can store the</font>

1074
00:40:38,560 --> 00:40:43,600
<font color="#E5E5E5">cryptographic material for</font><font color="#CCCCCC"> ad FS</font><font color="#E5E5E5"> in the</font>

1075
00:40:41,170 --> 00:40:45,700
hardware<font color="#E5E5E5"> isolate it further from access</font>

1076
00:40:43,600 --> 00:40:48,759
<font color="#E5E5E5">from attackers</font><font color="#CCCCCC"> and raise the bar much</font>

1077
00:40:45,700 --> 00:40:50,950
higher<font color="#E5E5E5"> on becoming an Active Directory</font>

1078
00:40:48,760 --> 00:40:52,330
Federation server<font color="#CCCCCC"> a federated services</font>

1079
00:40:50,950 --> 00:40:55,480
serving yeah it's important to note that

1080
00:40:52,330 --> 00:40:57,040
<font color="#E5E5E5">in this case ad FS is no longer managing</font>

1081
00:40:55,480 --> 00:40:59,110
your cryptographic material right the

1082
00:40:57,040 --> 00:41:00,610
default<font color="#CCCCCC"> configuration is</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> I think they</font>

1083
00:40:59,110 --> 00:41:02,710
call it<font color="#E5E5E5"> Windows managed certificates</font>

1084
00:41:00,610 --> 00:41:03,850
<font color="#CCCCCC">idiot Windows takes care of the signing</font>

1085
00:41:02,710 --> 00:41:05,890
certificate<font color="#E5E5E5"> it takes care of the</font>

1086
00:41:03,850 --> 00:41:07,690
<font color="#E5E5E5">encryption certificate if you want to</font>

1087
00:41:05,890 --> 00:41:09,640
forego all<font color="#E5E5E5"> of this you can</font><font color="#CCCCCC"> just buy a</font>

1088
00:41:07,690 --> 00:41:11,680
<font color="#E5E5E5">certificate or make your own self signed</font>

1089
00:41:09,640 --> 00:41:13,720
certificate<font color="#E5E5E5"> and port it into the ad FS</font>

1090
00:41:11,680 --> 00:41:15,970
<font color="#E5E5E5">management</font><font color="#CCCCCC"> snapping and then</font><font color="#E5E5E5"> the this</font>

1091
00:41:13,720 --> 00:41:18,549
whole encrypted pfx mess<font color="#CCCCCC"> is not going to</font>

1092
00:41:15,970 --> 00:41:19,959
affect you<font color="#E5E5E5"> but by default</font><font color="#CCCCCC"> and again from</font>

1093
00:41:18,550 --> 00:41:22,210
my experience<font color="#E5E5E5"> most people go</font><font color="#CCCCCC"> with the</font>

1094
00:41:19,960 --> 00:41:24,490
default<font color="#E5E5E5"> Windows manages the certificates</font>

1095
00:41:22,210 --> 00:41:26,830
for you<font color="#CCCCCC"> and thus we can</font><font color="#E5E5E5"> do this attack</font>

1096
00:41:24,490 --> 00:41:28,600
right<font color="#E5E5E5"> and that's not</font><font color="#CCCCCC"> to say that simply</font>

1097
00:41:26,830 --> 00:41:30,190
<font color="#E5E5E5">using</font><font color="#CCCCCC"> your own certificate magically</font>

1098
00:41:28,600 --> 00:41:32,170
removes the<font color="#CCCCCC"> possibility that someone can</font>

1099
00:41:30,190 --> 00:41:33,910
spoof it it just means they have to<font color="#E5E5E5"> go</font>

1100
00:41:32,170 --> 00:41:35,590
after<font color="#E5E5E5"> your certificate and they can't</font>

1101
00:41:33,910 --> 00:41:38,770
<font color="#E5E5E5">just get the key</font><font color="#CCCCCC"> derivation and signing</font>

1102
00:41:35,590 --> 00:41:39,880
material directly<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> check last but</font>

1103
00:41:38,770 --> 00:41:43,570
<font color="#E5E5E5">not least while we're at it talking</font>

1104
00:41:39,880 --> 00:41:46,360
<font color="#E5E5E5">about best practices for</font><font color="#CCCCCC"> ad</font><font color="#E5E5E5"> FS for 2016</font>

1105
00:41:43,570 --> 00:41:48,670
and up you can turn on extranet smart

1106
00:41:46,360 --> 00:41:52,090
lockout policies which basically allows

1107
00:41:48,670 --> 00:41:53,740
you<font color="#CCCCCC"> to prevent easy password spraying</font>

1108
00:41:52,090 --> 00:41:56,170
attacks<font color="#E5E5E5"> pretend prevent them from</font>

1109
00:41:53,740 --> 00:41:57,970
locking out identifying noisy IP

1110
00:41:56,170 --> 00:41:59,530
addresses that<font color="#CCCCCC"> are you know throwing a</font>

1111
00:41:57,970 --> 00:42:01,689
bunch of authentication<font color="#E5E5E5"> attempts against</font>

1112
00:41:59,530 --> 00:42:03,850
your ad FS<font color="#E5E5E5"> endpoints because as Doug</font>

1113
00:42:01,690 --> 00:42:06,280
pointed out earlier<font color="#E5E5E5"> these are easy to</font>

1114
00:42:03,850 --> 00:42:08,380
identify<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know ntlm authentication is</font>

1115
00:42:06,280 --> 00:42:09,780
exposed<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can throw a bunch of</font>

1116
00:42:08,380 --> 00:42:11,800
attempts against it<font color="#E5E5E5"> right now</font>

1117
00:42:09,780 --> 00:42:15,160
<font color="#E5E5E5">potentially locking out accounts so</font>

1118
00:42:11,800 --> 00:42:18,420
something to keep in<font color="#CCCCCC"> mind talking</font>

1119
00:42:15,160 --> 00:42:20,730
specifically about Incident Response

1120
00:42:18,420 --> 00:42:22,170
we have to treat identity providers as a

1121
00:42:20,730 --> 00:42:24,569
core<font color="#CCCCCC"> part of the Incident Response</font>

1122
00:42:22,170 --> 00:42:26,250
<font color="#E5E5E5">process they are just like domain</font>

1123
00:42:24,569 --> 00:42:28,380
controllers they are just as important

1124
00:42:26,250 --> 00:42:31,619
we have to<font color="#CCCCCC"> start talking about them</font><font color="#E5E5E5"> from</font>

1125
00:42:28,380 --> 00:42:34,109
a remediation perspective<font color="#E5E5E5"> so if you have</font>

1126
00:42:31,619 --> 00:42:35,970
good visibility<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you have high</font>

1127
00:42:34,109 --> 00:42:37,589
confidence<font color="#CCCCCC"> that an attacker has targeted</font>

1128
00:42:35,970 --> 00:42:41,009
<font color="#E5E5E5">your Active Directory Federation</font>

1129
00:42:37,589 --> 00:42:42,660
<font color="#E5E5E5">services server then you can reset the</font>

1130
00:42:41,010 --> 00:42:44,339
<font color="#E5E5E5">signing</font><font color="#CCCCCC"> key material now you're thinking</font>

1131
00:42:42,660 --> 00:42:46,109
to<font color="#CCCCCC"> yourself</font><font color="#E5E5E5"> there must be a button</font><font color="#CCCCCC"> that</font>

1132
00:42:44,339 --> 00:42:48,299
<font color="#E5E5E5">you can just press in</font><font color="#CCCCCC"> ad FS</font><font color="#E5E5E5"> that</font>

1133
00:42:46,109 --> 00:42:51,299
magically<font color="#E5E5E5"> resets</font><font color="#CCCCCC"> your material</font><font color="#E5E5E5"> Doug does</font>

1134
00:42:48,299 --> 00:42:52,829
that button<font color="#CCCCCC"> exist</font><font color="#E5E5E5"> more or less you can</font>

1135
00:42:51,299 --> 00:42:54,690
use there's a pretty simple<font color="#E5E5E5"> PowerShell</font>

1136
00:42:52,829 --> 00:42:57,599
command to reset the signing certificate

1137
00:42:54,690 --> 00:42:59,220
<font color="#E5E5E5">but the the important part is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

1138
00:42:57,599 --> 00:43:02,309
are<font color="#E5E5E5"> dealing with a trust relationship</font>

1139
00:42:59,220 --> 00:43:04,919
<font color="#CCCCCC">right you have a private key that you're</font>

1140
00:43:02,309 --> 00:43:07,470
using to digitally<font color="#CCCCCC"> sign something</font><font color="#E5E5E5"> you</font>

1141
00:43:04,920 --> 00:43:09,089
also have a relying party<font color="#E5E5E5"> that has a</font>

1142
00:43:07,470 --> 00:43:11,490
public<font color="#E5E5E5"> key somewhere that it's actually</font>

1143
00:43:09,089 --> 00:43:13,740
using to verify<font color="#E5E5E5"> that okay this is</font><font color="#CCCCCC"> signed</font>

1144
00:43:11,490 --> 00:43:15,240
with the digital signature with the

1145
00:43:13,740 --> 00:43:17,339
private<font color="#CCCCCC"> key that</font><font color="#E5E5E5"> I'm expecting right</font>

1146
00:43:15,240 --> 00:43:18,990
<font color="#E5E5E5">this prevents me from just making my own</font>

1147
00:43:17,339 --> 00:43:22,019
key pair signing it<font color="#E5E5E5"> and sending it to</font>

1148
00:43:18,990 --> 00:43:24,000
<font color="#E5E5E5">office</font><font color="#CCCCCC"> 365</font><font color="#E5E5E5"> so if you reset</font><font color="#CCCCCC"> the signing</font>

1149
00:43:22,019 --> 00:43:26,519
key<font color="#CCCCCC"> you then</font><font color="#E5E5E5"> need to go to all</font><font color="#CCCCCC"> of your</font>

1150
00:43:24,000 --> 00:43:28,880
relying parties office 365 Dropbox

1151
00:43:26,519 --> 00:43:31,769
Bomgar and say hey I've<font color="#CCCCCC"> got a new</font>

1152
00:43:28,880 --> 00:43:33,359
<font color="#E5E5E5">private key public key pair here it is</font>

1153
00:43:31,769 --> 00:43:36,180
you should trust<font color="#E5E5E5"> this one going forward</font>

1154
00:43:33,359 --> 00:43:37,380
<font color="#CCCCCC">so why we say carefully is because you</font>

1155
00:43:36,180 --> 00:43:39,868
have to make<font color="#E5E5E5"> sure that you actually do</font>

1156
00:43:37,380 --> 00:43:42,029
that<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> don't break access to email</font>

1157
00:43:39,869 --> 00:43:45,960
for<font color="#CCCCCC"> all of your users right because that</font>

1158
00:43:42,029 --> 00:43:48,029
would be really bad<font color="#CCCCCC"> ii have a</font><font color="#E5E5E5"> baseline</font>

1159
00:43:45,960 --> 00:43:49,829
to understand the configurations that

1160
00:43:48,029 --> 00:43:51,750
<font color="#E5E5E5">you want to be set</font><font color="#CCCCCC"> up you can use</font>

1161
00:43:49,829 --> 00:43:53,579
<font color="#CCCCCC">PowerShell to quickly compare your</font>

1162
00:43:51,750 --> 00:43:56,789
expected configurations to your current

1163
00:43:53,579 --> 00:43:58,890
configuration<font color="#CCCCCC"> understand what</font><font color="#E5E5E5"> the state</font>

1164
00:43:56,789 --> 00:44:00,539
that you want<font color="#CCCCCC"> ad</font><font color="#E5E5E5"> FS to be in so that you</font>

1165
00:43:58,890 --> 00:44:02,940
can<font color="#E5E5E5"> more quickly identify when it's in a</font>

1166
00:44:00,539 --> 00:44:05,819
state<font color="#CCCCCC"> that you did</font><font color="#E5E5E5"> not expect finally</font>

1167
00:44:02,940 --> 00:44:08,940
verify your core<font color="#E5E5E5"> adapters are intact</font><font color="#CCCCCC"> you</font>

1168
00:44:05,819 --> 00:44:10,619
can easily go and<font color="#E5E5E5"> edit the core dll's</font>

1169
00:44:08,940 --> 00:44:13,440
<font color="#E5E5E5">that under you know support the entire</font>

1170
00:44:10,619 --> 00:44:14,700
process<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the Microsoft side you</font>

1171
00:44:13,440 --> 00:44:17,190
<font color="#E5E5E5">could even do this for</font><font color="#CCCCCC"> just dotnet</font>

1172
00:44:14,700 --> 00:44:19,529
<font color="#E5E5E5">system dll's anyway right you should</font>

1173
00:44:17,190 --> 00:44:21,720
always have some form<font color="#CCCCCC"> of file</font><font color="#E5E5E5"> integrity</font>

1174
00:44:19,529 --> 00:44:24,630
when you're dealing<font color="#E5E5E5"> with high value</font>

1175
00:44:21,720 --> 00:44:26,490
targets because as we<font color="#E5E5E5"> demonstrated you</font>

1176
00:44:24,630 --> 00:44:29,309
can set<font color="#E5E5E5"> up essentially a remote web</font>

1177
00:44:26,490 --> 00:44:31,750
shell on your ad FS server<font color="#CCCCCC"> and if you</font>

1178
00:44:29,309 --> 00:44:33,040
have no visibility<font color="#CCCCCC"> into that well</font>

1179
00:44:31,750 --> 00:44:36,180
mediation isn't going to be<font color="#CCCCCC"> very</font>

1180
00:44:33,040 --> 00:44:38,380
successful<font color="#E5E5E5"> one point before</font><font color="#CCCCCC"> we wrap is</font>

1181
00:44:36,180 --> 00:44:41,140
looking forward<font color="#CCCCCC"> and sort of wrapping</font><font color="#E5E5E5"> up</font>

1182
00:44:38,380 --> 00:44:45,400
this talk focused on attacks against<font color="#CCCCCC"> ad</font>

1183
00:44:41,140 --> 00:44:47,500
<font color="#CCCCCC">FS</font><font color="#E5E5E5"> itself so relying adapters multi with</font>

1184
00:44:45,400 --> 00:44:49,270
multi factor and editing the code how we

1185
00:44:47,500 --> 00:44:51,400
can<font color="#CCCCCC"> actually become an ad FS server</font><font color="#E5E5E5"> so</font>

1186
00:44:49,270 --> 00:44:53,850
for you know some period of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> year I can</font>

1187
00:44:51,400 --> 00:44:57,070
create my own sam'l tokens<font color="#E5E5E5"> from anywhere</font>

1188
00:44:53,850 --> 00:44:59,529
<font color="#CCCCCC">ad FS is a huge huge piece of</font><font color="#E5E5E5"> software</font>

1189
00:44:57,070 --> 00:45:01,510
<font color="#E5E5E5">it's got a lot</font><font color="#CCCCCC"> of components</font><font color="#E5E5E5"> looking</font>

1190
00:44:59,530 --> 00:45:03,190
forward<font color="#E5E5E5"> to</font><font color="#CCCCCC"> additional features and</font>

1191
00:45:01,510 --> 00:45:05,770
attacks<font color="#E5E5E5"> that will probably start talking</font>

1192
00:45:03,190 --> 00:45:08,400
about<font color="#CCCCCC"> AD FS</font><font color="#E5E5E5"> when you are internal it</font>

1193
00:45:05,770 --> 00:45:11,200
accepts Kerberos authentication<font color="#E5E5E5"> so</font>

1194
00:45:08,400 --> 00:45:13,330
<font color="#E5E5E5">thinking forward this may be an</font>

1195
00:45:11,200 --> 00:45:15,490
<font color="#CCCCCC">interesting way to get a sam'l token</font>

1196
00:45:13,330 --> 00:45:17,680
<font color="#E5E5E5">just by having a Kerberos ticket right</font>

1197
00:45:15,490 --> 00:45:19,959
so maybe another way of<font color="#CCCCCC"> bypassing</font>

1198
00:45:17,680 --> 00:45:22,180
multi-factor<font color="#CCCCCC"> by passing the</font><font color="#E5E5E5"> need to have</font>

1199
00:45:19,960 --> 00:45:23,920
a<font color="#E5E5E5"> user's password</font><font color="#CCCCCC"> there might be a way</font>

1200
00:45:22,180 --> 00:45:27,089
that<font color="#E5E5E5"> we can just send a Kerberos ticket</font>

1201
00:45:23,920 --> 00:45:29,350
to a<font color="#CCCCCC"> DFS and access a relying party</font><font color="#E5E5E5"> yep</font>

1202
00:45:27,090 --> 00:45:32,860
<font color="#CCCCCC">and last but not least if</font><font color="#E5E5E5"> you have good</font>

1203
00:45:29,350 --> 00:45:33,940
<font color="#E5E5E5">logs</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a technique that I haven't</font>

1204
00:45:32,860 --> 00:45:35,980
had the chance<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use in the</font><font color="#E5E5E5"> field but</font>

1205
00:45:33,940 --> 00:45:39,280
<font color="#E5E5E5">it's an idea</font><font color="#CCCCCC"> where you can line up</font><font color="#E5E5E5"> your</font>

1206
00:45:35,980 --> 00:45:41,140
<font color="#E5E5E5">Active Directory</font><font color="#CCCCCC"> logs and your relying</font>

1207
00:45:39,280 --> 00:45:43,180
party logs so like your duo application

1208
00:45:41,140 --> 00:45:45,400
logs<font color="#E5E5E5"> and attempt to</font><font color="#CCCCCC"> verify that</font><font color="#E5E5E5"> there is</font>

1209
00:45:43,180 --> 00:45:47,770
a<font color="#CCCCCC"> one to one relationship</font><font color="#E5E5E5"> if Doug is</font>

1210
00:45:45,400 --> 00:45:49,750
impersonating your<font color="#CCCCCC"> ad FS and signing in</font>

1211
00:45:47,770 --> 00:45:52,090
to<font color="#E5E5E5"> office 365</font><font color="#CCCCCC"> they will have an</font>

1212
00:45:49,750 --> 00:45:53,980
authentication log<font color="#E5E5E5"> but the Active</font>

1213
00:45:52,090 --> 00:45:56,440
<font color="#E5E5E5">Directory Federation server on your</font>

1214
00:45:53,980 --> 00:45:58,960
premises<font color="#E5E5E5"> will not have evidence</font><font color="#CCCCCC"> that you</font>

1215
00:45:56,440 --> 00:46:01,090
specifically requested signing a signed

1216
00:45:58,960 --> 00:46:02,890
a sam'l token<font color="#E5E5E5"> from them right so if you</font>

1217
00:46:01,090 --> 00:46:04,480
have<font color="#E5E5E5"> those detailed logs</font><font color="#CCCCCC"> that is another</font>

1218
00:46:02,890 --> 00:46:06,549
<font color="#E5E5E5">option of identifying if there's</font>

1219
00:46:04,480 --> 00:46:09,370
something funky<font color="#E5E5E5"> going on with your</font>

1220
00:46:06,550 --> 00:46:12,640
server<font color="#CCCCCC"> one thing I wanted to</font><font color="#E5E5E5"> mention</font><font color="#CCCCCC"> at</font>

1221
00:46:09,370 --> 00:46:14,890
the very<font color="#E5E5E5"> end here</font><font color="#CCCCCC"> while the tool sort of</font>

1222
00:46:12,640 --> 00:46:16,540
release for<font color="#E5E5E5"> this is new this is not</font>

1223
00:46:14,890 --> 00:46:18,549
necessarily a new material<font color="#CCCCCC"> especially</font>

1224
00:46:16,540 --> 00:46:20,680
for attackers out there<font color="#E5E5E5"> there was a blog</font>

1225
00:46:18,550 --> 00:46:22,270
post by<font color="#E5E5E5"> cyber-ark several years ago that</font>

1226
00:46:20,680 --> 00:46:25,359
<font color="#E5E5E5">talked about you know the idea</font><font color="#CCCCCC"> of a</font>

1227
00:46:22,270 --> 00:46:26,650
golden sam'l<font color="#CCCCCC"> and they released some</font><font color="#E5E5E5"> key</font>

1228
00:46:25,360 --> 00:46:28,480
signing code but not<font color="#E5E5E5"> the code to</font>

1229
00:46:26,650 --> 00:46:29,890
actually<font color="#CCCCCC"> get the material to sign</font>

1230
00:46:28,480 --> 00:46:31,480
<font color="#E5E5E5">everything for you</font>

1231
00:46:29,890 --> 00:46:33,940
so this is an extension of that<font color="#E5E5E5"> work</font>

1232
00:46:31,480 --> 00:46:37,300
<font color="#CCCCCC">hopefully coupled with the talk about</font>

1233
00:46:33,940 --> 00:46:39,250
<font color="#CCCCCC">ADF a a TFS as an architecture you guys</font>

1234
00:46:37,300 --> 00:46:41,260
feel much better<font color="#CCCCCC"> informed</font><font color="#E5E5E5"> and as</font>

1235
00:46:39,250 --> 00:46:43,840
attackers<font color="#E5E5E5"> and defenders can rely on this</font>

1236
00:46:41,260 --> 00:46:47,310
<font color="#E5E5E5">information</font><font color="#CCCCCC"> to help secure</font><font color="#E5E5E5"> your clients</font>

1237
00:46:43,840 --> 00:46:47,310
and make the world a safer<font color="#E5E5E5"> place</font>

1238
00:46:47,700 --> 00:46:54,290
[Applause]

