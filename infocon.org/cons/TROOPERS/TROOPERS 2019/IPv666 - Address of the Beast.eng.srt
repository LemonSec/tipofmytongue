1
00:00:01,360 --> 00:00:05,470
<font color="#E5E5E5">all right well thank you everyone for</font>

2
00:00:03,170 --> 00:00:09,769
<font color="#E5E5E5">joining us today</font><font color="#CCCCCC"> this talk is titled</font>

3
00:00:05,470 --> 00:00:13,070
<font color="#E5E5E5">ipv6</font><font color="#CCCCCC"> 66 address of the beast</font><font color="#E5E5E5"> and I'm</font>

4
00:00:09,769 --> 00:00:14,150
marking this<font color="#E5E5E5"> is Chris hello</font><font color="#CCCCCC"> yes so my</font>

5
00:00:13,070 --> 00:00:17,060
name is Chris<font color="#CCCCCC"> Grayson</font>

6
00:00:14,150 --> 00:00:20,359
I'm originally from Atlanta<font color="#CCCCCC"> I've been</font><font color="#E5E5E5"> a</font>

7
00:00:17,060 --> 00:00:21,650
research scientist<font color="#E5E5E5"> with DARPA</font><font color="#CCCCCC"> I was the</font>

8
00:00:20,359 --> 00:00:24,710
head<font color="#CCCCCC"> of the Georgia Tech hacking Club</font>

9
00:00:21,650 --> 00:00:27,198
<font color="#E5E5E5">have also done penetration testing both</font>

10
00:00:24,710 --> 00:00:30,410
<font color="#E5E5E5">as like a</font><font color="#CCCCCC"> full-time job and also a side</font>

11
00:00:27,199 --> 00:00:32,390
gig<font color="#CCCCCC"> I had an attack service enumeration</font>

12
00:00:30,410 --> 00:00:34,520
company<font color="#E5E5E5"> that went under it turns out</font>

13
00:00:32,390 --> 00:00:37,070
<font color="#E5E5E5">being an entrepreneur is difficult</font><font color="#CCCCCC"> and</font>

14
00:00:34,520 --> 00:00:39,590
then most<font color="#CCCCCC"> recently headed up the red</font>

15
00:00:37,070 --> 00:00:42,020
team at snapchat<font color="#E5E5E5"> and then left that for</font>

16
00:00:39,590 --> 00:00:44,570
greener pastures<font color="#E5E5E5"> at bird rides where</font><font color="#CCCCCC"> I</font>

17
00:00:42,020 --> 00:00:46,789
<font color="#CCCCCC">am on</font><font color="#E5E5E5"> the he's pretty</font><font color="#CCCCCC"> engineer there</font>

18
00:00:44,570 --> 00:00:48,289
yeah I work with<font color="#CCCCCC"> the Chris bird rides</font>

19
00:00:46,789 --> 00:00:50,239
I've done a lot<font color="#CCCCCC"> of work</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> wireless</font>

20
00:00:48,289 --> 00:00:52,570
security<font color="#E5E5E5"> space a lot of wireless versus</font>

21
00:00:50,239 --> 00:00:55,070
engineering and vulnerability research I

22
00:00:52,570 --> 00:00:57,050
do DARPA challenges in my spare time

23
00:00:55,070 --> 00:00:58,670
so I've done the shredder challenge

24
00:00:57,050 --> 00:01:01,370
which was reassembly<font color="#CCCCCC"> in feted documents</font>

25
00:00:58,670 --> 00:01:03,500
<font color="#E5E5E5">did the first spectrum challenge in 2013</font>

26
00:01:01,370 --> 00:01:04,910
and<font color="#CCCCCC"> 14 and</font><font color="#E5E5E5"> I'm currently competing ad</font>

27
00:01:03,500 --> 00:01:06,530
spectrum collaboration challenge which

28
00:01:04,910 --> 00:01:10,580
is<font color="#E5E5E5"> their soccer define</font><font color="#CCCCCC"> radiogram</font>

29
00:01:06,530 --> 00:01:12,110
challenge and so if the track name and

30
00:01:10,580 --> 00:01:13,610
the title<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a talk wasn't self-evident</font>

31
00:01:12,110 --> 00:01:15,290
we're gonna answer this question of what

32
00:01:13,610 --> 00:01:16,880
<font color="#CCCCCC">are we</font><font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> and we're talking</font>

33
00:01:15,290 --> 00:01:18,110
<font color="#E5E5E5">about the</font><font color="#CCCCCC"> future</font><font color="#E5E5E5"> and if you didn't know</font>

34
00:01:16,880 --> 00:01:19,429
this Chris and I recently visited<font color="#E5E5E5"> the</font>

35
00:01:18,110 --> 00:01:21,409
future and we<font color="#E5E5E5"> brought back this footage</font>

36
00:01:19,430 --> 00:01:23,240
<font color="#E5E5E5">and it's full of</font><font color="#CCCCCC"> these rocket powered</font>

37
00:01:21,409 --> 00:01:25,400
water jetpack things that are pretty

38
00:01:23,240 --> 00:01:28,250
terrible<font color="#CCCCCC"> but we also found in the future</font>

39
00:01:25,400 --> 00:01:29,479
a<font color="#E5E5E5"> lot of ipv6 addresses so we're gonna</font>

40
00:01:28,250 --> 00:01:31,759
start<font color="#E5E5E5"> with some background on our</font>

41
00:01:29,479 --> 00:01:33,860
interests for doing this ipv6 research

42
00:01:31,759 --> 00:01:35,960
<font color="#CCCCCC">and talk about some</font><font color="#E5E5E5"> of the problems of</font>

43
00:01:33,860 --> 00:01:37,729
scanning<font color="#E5E5E5"> the ipv6 address space namely</font>

44
00:01:35,960 --> 00:01:39,529
<font color="#E5E5E5">it's huge</font><font color="#CCCCCC"> we're gonna go through the</font>

45
00:01:37,729 --> 00:01:41,869
different<font color="#CCCCCC"> methodologies we tried for</font>

46
00:01:39,530 --> 00:01:43,579
discovery<font color="#CCCCCC"> and</font><font color="#E5E5E5"> ipv6 addresses some worked</font>

47
00:01:41,869 --> 00:01:45,079
some didn't work<font color="#E5E5E5"> then we'll look at</font><font color="#CCCCCC"> some</font>

48
00:01:43,579 --> 00:01:47,600
results<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> latest iteration of our</font>

49
00:01:45,079 --> 00:01:50,479
<font color="#CCCCCC">toolset which is called ipv6</font><font color="#E5E5E5"> 66 then</font>

50
00:01:47,600 --> 00:01:52,579
we'll<font color="#E5E5E5"> conclude with</font><font color="#CCCCCC"> a bit of QA</font><font color="#E5E5E5"> so for</font>

51
00:01:50,479 --> 00:01:54,860
some background<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a graph of the</font>

52
00:01:52,579 --> 00:01:56,809
percentage of Google users who have

53
00:01:54,860 --> 00:01:59,119
connected to Google using an ipv6

54
00:01:56,810 --> 00:02:00,590
address<font color="#E5E5E5"> this is spanning a decade on the</font>

55
00:01:59,119 --> 00:02:03,439
left here we<font color="#CCCCCC"> have very little</font><font color="#E5E5E5"> traffic</font>

56
00:02:00,590 --> 00:02:06,649
starting<font color="#E5E5E5"> to pick up in 2013</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> 14 and by</font>

57
00:02:03,439 --> 00:02:08,449
now in 2019 we have over<font color="#CCCCCC"> one-quarter of</font>

58
00:02:06,649 --> 00:02:10,669
<font color="#E5E5E5">the Google traffic is being served over</font>

59
00:02:08,449 --> 00:02:12,200
ipv6<font color="#CCCCCC"> and this is just</font><font color="#E5E5E5"> a single company</font>

60
00:02:10,669 --> 00:02:13,730
this<font color="#CCCCCC"> is you know may not</font><font color="#E5E5E5"> extrapolate out</font>

61
00:02:12,200 --> 00:02:14,899
to the<font color="#E5E5E5"> entire Internet but this is a</font>

62
00:02:13,730 --> 00:02:16,518
good indication

63
00:02:14,900 --> 00:02:17,930
that ipv6 is becoming<font color="#E5E5E5"> more and more</font>

64
00:02:16,519 --> 00:02:20,209
prevalent<font color="#CCCCCC"> and something that's</font><font color="#E5E5E5"> getting</font>

65
00:02:17,930 --> 00:02:21,950
more<font color="#CCCCCC"> and more on our radar</font><font color="#E5E5E5"> so we got</font>

66
00:02:20,209 --> 00:02:24,019
<font color="#E5E5E5">interested in this space</font><font color="#CCCCCC"> through a</font>

67
00:02:21,950 --> 00:02:26,298
vulnerability<font color="#E5E5E5"> research project we took</font>

68
00:02:24,019 --> 00:02:28,129
on in 2017 with our friend<font color="#E5E5E5"> Logan</font><font color="#CCCCCC"> Lam</font><font color="#E5E5E5"> and</font>

69
00:02:26,299 --> 00:02:29,810
<font color="#E5E5E5">we found a</font><font color="#CCCCCC"> bunch of vulnerabilities and</font>

70
00:02:28,129 --> 00:02:32,540
<font color="#CCCCCC">comcast</font><font color="#E5E5E5"> equipment so this was capable</font>

71
00:02:29,810 --> 00:02:34,489
modems and<font color="#CCCCCC"> set-top boxes and as part of</font>

72
00:02:32,540 --> 00:02:36,379
this a<font color="#E5E5E5"> number of the vulnerabilities we</font>

73
00:02:34,489 --> 00:02:38,840
found were pretty severe but only

74
00:02:36,379 --> 00:02:40,518
exploitable<font color="#E5E5E5"> if you knew the ipv6 address</font>

75
00:02:38,840 --> 00:02:42,439
of the<font color="#CCCCCC"> target device you were trying</font><font color="#E5E5E5"> to</font>

76
00:02:40,519 --> 00:02:45,200
attack<font color="#E5E5E5"> and so this is our first hint</font>

77
00:02:42,439 --> 00:02:46,489
that<font color="#CCCCCC"> discovering ipv6 addresses without</font>

78
00:02:45,200 --> 00:02:48,888
<font color="#E5E5E5">some pretty interesting security</font>

79
00:02:46,489 --> 00:02:50,569
implications<font color="#CCCCCC"> and so for a little bit</font>

80
00:02:48,889 --> 00:02:51,799
more depth we<font color="#CCCCCC"> have this one</font>

81
00:02:50,569 --> 00:02:53,929
<font color="#E5E5E5">vulnerability here which is my</font><font color="#CCCCCC"> favorite</font>

82
00:02:51,799 --> 00:02:57,680
<font color="#CCCCCC">attack</font><font color="#E5E5E5"> chain from this project called</font>

83
00:02:53,930 --> 00:03:01,579
sent a TP so send<font color="#CCCCCC"> to TP is a Comcast</font>

84
00:02:57,680 --> 00:03:04,159
service cannot accomplish<font color="#CCCCCC"> an 2tv you put</font>

85
00:03:01,579 --> 00:03:05,540
<font color="#E5E5E5">a new</font><font color="#CCCCCC"> URL and it shows up on your TV</font><font color="#E5E5E5"> and</font>

86
00:03:04,159 --> 00:03:07,849
the way this works your<font color="#CCCCCC"> set-top box</font>

87
00:03:05,540 --> 00:03:10,340
renders<font color="#E5E5E5"> everything that you see in a web</font>

88
00:03:07,849 --> 00:03:12,078
browser<font color="#CCCCCC"> and so you put</font><font color="#E5E5E5"> this URL in it</font>

89
00:03:10,340 --> 00:03:15,409
loads<font color="#E5E5E5"> that in the web browser on your</font>

90
00:03:12,079 --> 00:03:17,420
<font color="#E5E5E5">set-top box on your TV</font><font color="#CCCCCC"> now also Comcast</font>

91
00:03:15,409 --> 00:03:19,459
has cable modems of course and so you

92
00:03:17,420 --> 00:03:22,040
have multiple ipv6 addresses on<font color="#CCCCCC"> your</font>

93
00:03:19,459 --> 00:03:24,260
modem<font color="#E5E5E5"> some of them are internet routable</font>

94
00:03:22,040 --> 00:03:26,418
and one of the<font color="#CCCCCC"> ipv6 addresses is only</font>

95
00:03:24,260 --> 00:03:28,220
routable from certain protected<font color="#CCCCCC"> comcast</font>

96
00:03:26,419 --> 00:03:31,819
<font color="#E5E5E5">network segments and what we discovered</font>

97
00:03:28,220 --> 00:03:33,620
<font color="#CCCCCC">is that the</font><font color="#E5E5E5"> set-top box is living in one</font>

98
00:03:31,819 --> 00:03:35,810
of<font color="#CCCCCC"> these protected network segments so</font>

99
00:03:33,620 --> 00:03:38,239
<font color="#E5E5E5">we were</font><font color="#CCCCCC"> able to put in the ipv6 address</font>

100
00:03:35,810 --> 00:03:40,190
of another Comcast customers modem into

101
00:03:38,239 --> 00:03:41,540
this<font color="#E5E5E5"> service and because we were in</font><font color="#CCCCCC"> that</font>

102
00:03:40,190 --> 00:03:42,919
protected<font color="#E5E5E5"> Network segment on the set-top</font>

103
00:03:41,540 --> 00:03:44,989
box we could actually bring<font color="#E5E5E5"> up the</font>

104
00:03:42,919 --> 00:03:47,209
administrative web user interface<font color="#E5E5E5"> of the</font>

105
00:03:44,989 --> 00:03:48,440
target customers modem<font color="#CCCCCC"> on our TV and</font>

106
00:03:47,209 --> 00:03:50,599
<font color="#E5E5E5">then login with hard-coded credentials</font>

107
00:03:48,440 --> 00:03:52,940
<font color="#E5E5E5">and this is pretty bad but we had the</font>

108
00:03:50,599 --> 00:03:55,129
<font color="#CCCCCC">realization that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is only as bad as</font>

109
00:03:52,940 --> 00:03:57,470
it<font color="#E5E5E5"> is easy to discover these ipv6</font>

110
00:03:55,129 --> 00:03:59,209
addresses and so we got<font color="#E5E5E5"> interested in</font>

111
00:03:57,470 --> 00:04:01,459
<font color="#E5E5E5">really trying to dig in and understand a</font>

112
00:03:59,209 --> 00:04:03,109
<font color="#CCCCCC">little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more about ipv6 and I want to</font>

113
00:04:01,459 --> 00:04:05,299
preface<font color="#CCCCCC"> this by saying we're not</font><font color="#E5E5E5"> network</font>

114
00:04:03,109 --> 00:04:07,400
engineers<font color="#E5E5E5"> I only learned how to read an</font>

115
00:04:05,299 --> 00:04:09,919
ipv6 address<font color="#CCCCCC"> about a year</font><font color="#E5E5E5"> and a half ago</font>

116
00:04:07,400 --> 00:04:11,599
<font color="#E5E5E5">and we're actively learning so if we get</font>

117
00:04:09,919 --> 00:04:14,209
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> wrong please</font><font color="#CCCCCC"> correct us we look</font>

118
00:04:11,599 --> 00:04:16,969
forward<font color="#E5E5E5"> to that and we wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> start</font>

119
00:04:14,209 --> 00:04:18,649
to understand ipv6<font color="#E5E5E5"> and look at some of</font>

120
00:04:16,970 --> 00:04:20,269
the<font color="#E5E5E5"> things that had potential security</font>

121
00:04:18,649 --> 00:04:21,948
implications to us so one thing that

122
00:04:20,269 --> 00:04:24,409
<font color="#CCCCCC">concerned</font><font color="#E5E5E5"> us right off</font><font color="#CCCCCC"> the way is</font><font color="#E5E5E5"> that</font>

123
00:04:21,949 --> 00:04:25,580
<font color="#E5E5E5">the automatic</font><font color="#CCCCCC"> configuration of ipv6 is</font>

124
00:04:24,409 --> 00:04:28,550
such that if you<font color="#CCCCCC"> have a device that</font>

125
00:04:25,580 --> 00:04:30,140
speaks ipv6 plug it<font color="#E5E5E5"> into an ipv6 enabled</font>

126
00:04:28,550 --> 00:04:31,760
work<font color="#E5E5E5"> it will automatically configure</font>

127
00:04:30,140 --> 00:04:33,590
itself<font color="#E5E5E5"> and route</font><font color="#CCCCCC"> to the internet if</font>

128
00:04:31,760 --> 00:04:35,030
possible<font color="#CCCCCC"> so we have the suspicion that</font>

129
00:04:33,590 --> 00:04:37,340
we might have devices<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are routing</font>

130
00:04:35,030 --> 00:04:39,049
to the<font color="#CCCCCC"> internet over</font><font color="#E5E5E5"> ipv6 that have been</font>

131
00:04:37,340 --> 00:04:42,049
explicitly<font color="#E5E5E5"> or intended</font><font color="#CCCCCC"> to be configure</font>

132
00:04:39,050 --> 00:04:44,660
<font color="#E5E5E5">that way we also have this lack</font><font color="#CCCCCC"> of</font>

133
00:04:42,050 --> 00:04:47,090
private address space<font color="#E5E5E5"> we have Matt and</font>

134
00:04:44,660 --> 00:04:49,340
<font color="#E5E5E5">Pat with ipv4 that's less though with</font>

135
00:04:47,090 --> 00:04:50,690
<font color="#E5E5E5">ipv6 so we have more addresses that are</font>

136
00:04:49,340 --> 00:04:53,929
apparently<font color="#E5E5E5"> going to be publicly routable</font>

137
00:04:50,690 --> 00:04:55,580
<font color="#E5E5E5">we have a discovery we made is that we</font>

138
00:04:53,930 --> 00:04:57,140
<font color="#E5E5E5">thought IP tables was IP</font><font color="#CCCCCC"> tables for</font>

139
00:04:55,580 --> 00:04:59,690
everything in the discovery<font color="#E5E5E5"> that IP</font><font color="#CCCCCC"> six</font>

140
00:04:57,140 --> 00:05:02,000
tables is a separate binary was news to

141
00:04:59,690 --> 00:05:04,190
<font color="#CCCCCC">us and so that was an indication that</font>

142
00:05:02,000 --> 00:05:06,020
the general<font color="#E5E5E5"> level of knowledge of ipv6</font>

143
00:05:04,190 --> 00:05:08,570
<font color="#E5E5E5">for security practitioners like this was</font>

144
00:05:06,020 --> 00:05:10,010
not terribly high and so getting<font color="#E5E5E5"> more</font>

145
00:05:08,570 --> 00:05:12,770
<font color="#CCCCCC">education about</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> was important</font>

146
00:05:10,010 --> 00:05:15,110
we can't just block ICMP like we can in

147
00:05:12,770 --> 00:05:16,400
general<font color="#CCCCCC"> of ipv4 and then we're also</font>

148
00:05:15,110 --> 00:05:18,740
<font color="#CCCCCC">interested in this ability</font><font color="#E5E5E5"> to</font>

149
00:05:16,400 --> 00:05:22,070
<font color="#CCCCCC">potentially</font><font color="#E5E5E5"> relay ipv6 packets to lots</font>

150
00:05:18,740 --> 00:05:24,440
and<font color="#E5E5E5"> lots of hosts so we no need to find</font>

151
00:05:22,070 --> 00:05:26,150
some ipv6 addresses<font color="#E5E5E5"> and we discovered</font>

152
00:05:24,440 --> 00:05:28,190
<font color="#CCCCCC">that there were some publicly available</font>

153
00:05:26,150 --> 00:05:29,719
<font color="#E5E5E5">datasets but in general being able to</font>

154
00:05:28,190 --> 00:05:31,490
discover new addresses<font color="#E5E5E5"> was going to be</font>

155
00:05:29,720 --> 00:05:33,470
key<font color="#CCCCCC"> to identifying devices that</font><font color="#E5E5E5"> have</font>

156
00:05:31,490 --> 00:05:36,080
<font color="#E5E5E5">potential security vulnerabilities</font><font color="#CCCCCC"> with</font>

157
00:05:33,470 --> 00:05:38,510
ipv4<font color="#E5E5E5"> this is relatively easy we have a</font>

158
00:05:36,080 --> 00:05:40,099
4.3 billion address space that's a lot

159
00:05:38,510 --> 00:05:42,170
of<font color="#CCCCCC"> addresses but</font><font color="#E5E5E5"> you can still port scan</font>

160
00:05:40,100 --> 00:05:45,110
a single port<font color="#E5E5E5"> across the entire ipv4</font>

161
00:05:42,170 --> 00:05:47,570
<font color="#CCCCCC">space in an afternoon</font><font color="#E5E5E5"> with ipv6 we have</font>

162
00:05:45,110 --> 00:05:49,490
this huge<font color="#CCCCCC"> number of addresses 13</font><font color="#E5E5E5"> commas</font>

163
00:05:47,570 --> 00:05:51,409
<font color="#CCCCCC">no idea how to pronounce this but it's</font>

164
00:05:49,490 --> 00:05:54,410
very impressive all to<font color="#E5E5E5"> actually try and</font>

165
00:05:51,410 --> 00:05:56,540
<font color="#E5E5E5">brute force</font><font color="#CCCCCC"> campus space</font><font color="#E5E5E5"> then we have</font>

166
00:05:54,410 --> 00:05:58,910
the<font color="#E5E5E5"> problem of the entropy introduced</font>

167
00:05:56,540 --> 00:06:00,320
with the privacy extensions<font color="#CCCCCC"> for slack</font><font color="#E5E5E5"> so</font>

168
00:05:58,910 --> 00:06:02,120
the way this works<font color="#E5E5E5"> with classic slack</font>

169
00:06:00,320 --> 00:06:04,340
you have your MAC address<font color="#CCCCCC"> which is</font>

170
00:06:02,120 --> 00:06:07,160
transformed<font color="#E5E5E5"> into the host bits of the</font>

171
00:06:04,340 --> 00:06:09,349
<font color="#E5E5E5">ipv6 address</font><font color="#CCCCCC"> if you connect to a website</font>

172
00:06:07,160 --> 00:06:10,910
from<font color="#E5E5E5"> your</font><font color="#CCCCCC"> home and then from a coffee</font>

173
00:06:09,350 --> 00:06:13,040
shop<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> two different ipv6</font>

174
00:06:10,910 --> 00:06:15,080
addresses<font color="#E5E5E5"> but your host bits are the</font>

175
00:06:13,040 --> 00:06:16,820
same<font color="#E5E5E5"> so the privacy extensions for slack</font>

176
00:06:15,080 --> 00:06:19,340
introduces<font color="#E5E5E5"> pseudo-random entropy so that</font>

177
00:06:16,820 --> 00:06:21,260
you have a different<font color="#E5E5E5"> set</font><font color="#CCCCCC"> of host bits</font>

178
00:06:19,340 --> 00:06:23,299
<font color="#E5E5E5">for</font><font color="#CCCCCC"> each IP address that</font><font color="#E5E5E5"> you have and</font>

179
00:06:21,260 --> 00:06:24,380
the problem is<font color="#CCCCCC"> even with a</font><font color="#E5E5E5"> small</font><font color="#CCCCCC"> network</font>

180
00:06:23,300 --> 00:06:26,300
like a slash 96

181
00:06:24,380 --> 00:06:28,550
there's still 32<font color="#E5E5E5"> bits of entropy</font><font color="#CCCCCC"> and</font>

182
00:06:26,300 --> 00:06:31,130
it's something<font color="#E5E5E5"> where it's unlikely</font><font color="#CCCCCC"> that</font>

183
00:06:28,550 --> 00:06:32,720
we're going<font color="#E5E5E5"> to randomly guess addresses</font>

184
00:06:31,130 --> 00:06:35,270
or use<font color="#E5E5E5"> modeling to generate addresses</font>

185
00:06:32,720 --> 00:06:36,710
that are<font color="#E5E5E5"> using P slack so now we're</font>

186
00:06:35,270 --> 00:06:38,810
<font color="#E5E5E5">breaking this down into two separate</font>

187
00:06:36,710 --> 00:06:40,760
<font color="#E5E5E5">problems we have the problem of</font>

188
00:06:38,810 --> 00:06:42,570
<font color="#CCCCCC">identifying P slack hosts and the</font>

189
00:06:40,760 --> 00:06:45,240
problem of<font color="#E5E5E5"> identifying non P slacks</font>

190
00:06:42,570 --> 00:06:47,219
so for the piece<font color="#E5E5E5"> flat case we decided to</font>

191
00:06:45,240 --> 00:06:49,860
try some<font color="#CCCCCC"> honeypot II</font><font color="#E5E5E5"> in which had some</font>

192
00:06:47,220 --> 00:06:50,550
success I'm not so<font color="#E5E5E5"> much so we set up a</font>

193
00:06:49,860 --> 00:06:52,680
server

194
00:06:50,550 --> 00:06:54,900
we're running a DNS server SMTP server

195
00:06:52,680 --> 00:06:57,120
and a web<font color="#CCCCCC"> server and the intention was</font>

196
00:06:54,900 --> 00:06:58,679
we would have users connect to this

197
00:06:57,120 --> 00:07:01,590
website and<font color="#CCCCCC"> use this as a way to start</font>

198
00:06:58,680 --> 00:07:03,690
collecting their ipv6 addresses and we

199
00:07:01,590 --> 00:07:06,030
used<font color="#E5E5E5"> the service called pop</font><font color="#CCCCCC"> abs to</font>

200
00:07:03,690 --> 00:07:09,270
generate some of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> traffic so pop</font><font color="#CCCCCC"> ads</font>

201
00:07:06,030 --> 00:07:11,489
is this completely legitimate<font color="#E5E5E5"> ad network</font>

202
00:07:09,270 --> 00:07:13,349
where you<font color="#E5E5E5"> told them money and they they</font>

203
00:07:11,490 --> 00:07:14,880
have real users with real browsers and

204
00:07:13,350 --> 00:07:16,650
<font color="#E5E5E5">real computers connect your</font><font color="#CCCCCC"> website and</font>

205
00:07:14,880 --> 00:07:18,120
we selected pop ads because there's no

206
00:07:16,650 --> 00:07:19,530
real real computers I just don't know

207
00:07:18,120 --> 00:07:21,930
right right<font color="#CCCCCC"> I know that they're</font>

208
00:07:19,530 --> 00:07:24,000
connecting<font color="#CCCCCC"> to it exactly</font><font color="#E5E5E5"> so we have but</font>

209
00:07:21,930 --> 00:07:26,610
we set up<font color="#E5E5E5"> a blind DNS server on this</font>

210
00:07:24,000 --> 00:07:29,010
<font color="#E5E5E5">this cloud instance we had new records</font>

211
00:07:26,610 --> 00:07:30,480
<font color="#E5E5E5">pointing ipv6 and then we had some what</font>

212
00:07:29,010 --> 00:07:32,400
we<font color="#E5E5E5"> thought at the time</font><font color="#CCCCCC"> was some fancy</font>

213
00:07:30,480 --> 00:07:35,130
logic to try and redirect<font color="#E5E5E5"> all traffic</font>

214
00:07:32,400 --> 00:07:36,659
<font color="#E5E5E5">from ipv4</font><font color="#CCCCCC"> to ipv6 what we</font><font color="#E5E5E5"> discovered</font>

215
00:07:35,130 --> 00:07:38,490
after<font color="#CCCCCC"> the</font><font color="#E5E5E5"> fact is that if a device can</font>

216
00:07:36,660 --> 00:07:40,320
speak ipv6 it will prefer it and will do

217
00:07:38,490 --> 00:07:44,070
<font color="#CCCCCC">so and so</font><font color="#E5E5E5"> that was all unnecessary</font><font color="#CCCCCC"> and</font>

218
00:07:40,320 --> 00:07:45,960
here we have a graph of the DNS queries

219
00:07:44,070 --> 00:07:47,520
over<font color="#E5E5E5"> time over the</font><font color="#CCCCCC"> course of</font><font color="#E5E5E5"> the year</font><font color="#CCCCCC"> so</font>

220
00:07:45,960 --> 00:07:49,680
<font color="#E5E5E5">we have</font><font color="#CCCCCC"> a few spikes</font><font color="#E5E5E5"> correlating with</font>

221
00:07:47,520 --> 00:07:51,659
<font color="#E5E5E5">the pop ads campaigns we ran and then a</font>

222
00:07:49,680 --> 00:07:53,700
bit<font color="#CCCCCC"> of a long tail of some Redmond</font>

223
00:07:51,660 --> 00:07:56,340
organic<font color="#CCCCCC"> traffic but not a huge amount of</font>

224
00:07:53,700 --> 00:08:00,000
<font color="#E5E5E5">traffic and so with pop ads this is a</font>

225
00:07:56,340 --> 00:08:02,190
graph of a<font color="#E5E5E5"> 90 second window of requests</font>

226
00:08:00,000 --> 00:08:04,410
coming<font color="#E5E5E5"> in from a pop ads campaign and we</font>

227
00:08:02,190 --> 00:08:06,120
gave them $20 or something and then

228
00:08:04,410 --> 00:08:07,650
<font color="#CCCCCC">within 2</font><font color="#E5E5E5"> minutes they had sent</font>

229
00:08:06,120 --> 00:08:11,120
approximately 50,000 requests to our

230
00:08:07,650 --> 00:08:13,380
<font color="#E5E5E5">website and so it's effective way to get</font>

231
00:08:11,120 --> 00:08:15,960
independent distinct IP addresses to

232
00:08:13,380 --> 00:08:18,300
<font color="#CCCCCC">connect you but they're</font><font color="#E5E5E5"> not actual users</font>

233
00:08:15,960 --> 00:08:20,489
and one of the common referring<font color="#CCCCCC"> URLs we</font>

234
00:08:18,300 --> 00:08:22,410
saw was this page which<font color="#E5E5E5"> is a very</font>

235
00:08:20,490 --> 00:08:24,990
<font color="#E5E5E5">legitimate website which had an anchor</font>

236
00:08:22,410 --> 00:08:27,360
tag pointing<font color="#E5E5E5"> to our website then had a</font>

237
00:08:24,990 --> 00:08:29,190
Bitcoin<font color="#E5E5E5"> crypto minor and so we're we're</font>

238
00:08:27,360 --> 00:08:31,530
suspecting<font color="#CCCCCC"> that it may not</font><font color="#E5E5E5"> be legitimate</font>

239
00:08:29,190 --> 00:08:35,130
traffic<font color="#E5E5E5"> and that was literally it was</font>

240
00:08:31,530 --> 00:08:36,990
body<font color="#E5E5E5"> crypto minor anchor tag and no</font>

241
00:08:35,130 --> 00:08:39,330
indication<font color="#CCCCCC"> as to how that anchor tag</font>

242
00:08:36,990 --> 00:08:42,450
might have gotten clicked which is

243
00:08:39,330 --> 00:08:43,890
fairly<font color="#CCCCCC"> interesting in</font><font color="#E5E5E5"> and of itself yeah</font>

244
00:08:42,450 --> 00:08:45,900
and then this<font color="#E5E5E5"> led us to this web browser</font>

245
00:08:43,890 --> 00:08:47,400
called which we think is doing

246
00:08:45,900 --> 00:08:50,220
Facebook<font color="#CCCCCC"> credential harvesting and it's</font>

247
00:08:47,400 --> 00:08:52,260
a whole other another<font color="#E5E5E5"> rabbit hole so we</font>

248
00:08:50,220 --> 00:08:54,300
set up this honeypot web server at ipv6

249
00:08:52,260 --> 00:08:56,260
<font color="#E5E5E5">dot exposed and</font><font color="#CCCCCC"> we have this Derby know</font>

250
00:08:54,300 --> 00:08:58,719
for both ipv4<font color="#CCCCCC"> and ipv6</font>

251
00:08:56,260 --> 00:08:59,890
we had images<font color="#CCCCCC"> Serbian only over ipv6</font><font color="#E5E5E5"> and</font>

252
00:08:58,720 --> 00:09:01,900
<font color="#CCCCCC">I thought there was that</font><font color="#E5E5E5"> if people</font><font color="#CCCCCC"> hit</font>

253
00:08:59,890 --> 00:09:03,460
the website over<font color="#CCCCCC"> ipv4</font><font color="#E5E5E5"> we could still get</font>

254
00:09:01,900 --> 00:09:04,810
ipv6 requests but again that was

255
00:09:03,460 --> 00:09:07,060
unnecessary because<font color="#E5E5E5"> everything that</font>

256
00:09:04,810 --> 00:09:10,180
<font color="#E5E5E5">every machine which loaded anything over</font>

257
00:09:07,060 --> 00:09:11,560
ipv6<font color="#CCCCCC"> only talked to us over ipv6 we're</font>

258
00:09:10,180 --> 00:09:13,000
kind<font color="#CCCCCC"> of stubborn so the main way we</font>

259
00:09:11,560 --> 00:09:16,390
learn is through<font color="#CCCCCC"> empirical testing</font><font color="#E5E5E5"> and</font>

260
00:09:13,000 --> 00:09:18,160
we fail a lot and it's like<font color="#E5E5E5"> exactly</font><font color="#CCCCCC"> and</font>

261
00:09:16,390 --> 00:09:19,990
then we had a web RTC payload on there

262
00:09:18,160 --> 00:09:22,060
which would give us<font color="#E5E5E5"> the potential local</font>

263
00:09:19,990 --> 00:09:24,850
ipv4 address of the browser as well<font color="#CCCCCC"> as</font>

264
00:09:22,060 --> 00:09:26,530
one<font color="#CCCCCC"> or more</font><font color="#E5E5E5"> of the ipv6 addresses so</font>

265
00:09:24,850 --> 00:09:28,810
here we have some graphs on the top<font color="#E5E5E5"> this</font>

266
00:09:26,530 --> 00:09:30,850
<font color="#CCCCCC">is access log hits from the web server</font>

267
00:09:28,810 --> 00:09:32,920
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then we have post backs from the</font>

268
00:09:30,850 --> 00:09:34,600
<font color="#CCCCCC">WebRTC</font><font color="#E5E5E5"> payload down below and so we can</font>

269
00:09:32,920 --> 00:09:35,800
see on the top or on<font color="#E5E5E5"> the scale of</font><font color="#CCCCCC"> tens</font>

270
00:09:34,600 --> 00:09:37,810
of thousands and only on the scale of

271
00:09:35,800 --> 00:09:40,390
<font color="#E5E5E5">thousands</font><font color="#CCCCCC"> below and this told us that</font>

272
00:09:37,810 --> 00:09:43,359
while<font color="#E5E5E5"> we</font><font color="#CCCCCC"> were getting traffic from</font><font color="#E5E5E5"> these</font>

273
00:09:40,390 --> 00:09:44,800
pop ads campaigns<font color="#E5E5E5"> only a small subset of</font>

274
00:09:43,360 --> 00:09:47,080
the<font color="#E5E5E5"> requests were actually loading the</font>

275
00:09:44,800 --> 00:09:48,430
web RTC<font color="#E5E5E5"> pail and executing that so was</font>

276
00:09:47,080 --> 00:09:50,320
<font color="#E5E5E5">another indication that the quality of</font>

277
00:09:48,430 --> 00:09:53,469
<font color="#CCCCCC">crap and pop ads wasn't very high and</font>

278
00:09:50,320 --> 00:09:56,050
wasn't actual<font color="#E5E5E5"> browsers loading these</font>

279
00:09:53,470 --> 00:09:58,960
things in all cases<font color="#E5E5E5"> so</font><font color="#CCCCCC"> then we set up a</font>

280
00:09:56,050 --> 00:10:01,240
honeypot<font color="#E5E5E5"> SMTP server and this was kind</font>

281
00:09:58,960 --> 00:10:03,100
<font color="#E5E5E5">of ill-conceived but we had the idea</font>

282
00:10:01,240 --> 00:10:04,810
that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> would have individual machines</font>

283
00:10:03,100 --> 00:10:06,160
connected<font color="#CCCCCC"> to this SMTP server if we</font>

284
00:10:04,810 --> 00:10:08,109
could get<font color="#CCCCCC"> all a bunch of spam</font><font color="#E5E5E5"> lists and</font>

285
00:10:06,160 --> 00:10:09,750
so forth<font color="#E5E5E5"> and in the end of</font><font color="#CCCCCC"> course that</font>

286
00:10:08,110 --> 00:10:12,280
did not happen<font color="#CCCCCC"> and all we got was some</font>

287
00:10:09,750 --> 00:10:13,930
hotmail infrastructure and Yahoo Mail

288
00:10:12,280 --> 00:10:16,510
infrastructure hitting our SMTP server

289
00:10:13,930 --> 00:10:18,939
and so the SMTP server honeypot was kind

290
00:10:16,510 --> 00:10:21,460
of a<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of bunk so after a year of</font>

291
00:10:18,940 --> 00:10:25,360
doing<font color="#E5E5E5"> this honeypot</font><font color="#CCCCCC"> II and we spent in</font>

292
00:10:21,460 --> 00:10:27,730
the end<font color="#E5E5E5"> more like thousand or</font><font color="#CCCCCC"> $1200 MSS</font>

293
00:10:25,360 --> 00:10:29,890
on the plus sign<font color="#CCCCCC"> and we know we got 92</font>

294
00:10:27,730 --> 00:10:31,330
thousand unique IP addresses and for our

295
00:10:29,890 --> 00:10:33,030
first attempt at<font color="#E5E5E5"> doing this kind of</font>

296
00:10:31,330 --> 00:10:37,450
discovery<font color="#E5E5E5"> we were happy</font><font color="#CCCCCC"> that we got some</font>

297
00:10:33,030 --> 00:10:39,189
<font color="#E5E5E5">and then we went to do a connect scan or</font>

298
00:10:37,450 --> 00:10:40,540
port scan of these to see how many<font color="#E5E5E5"> hosts</font>

299
00:10:39,190 --> 00:10:43,330
were alive and<font color="#CCCCCC"> what they look like</font>

300
00:10:40,540 --> 00:10:45,370
<font color="#E5E5E5">and then we learned about ephemeral ipv6</font>

301
00:10:43,330 --> 00:10:46,630
addresses and most of these clients<font color="#CCCCCC"> from</font>

302
00:10:45,370 --> 00:10:48,490
<font color="#E5E5E5">the pop ads campaigns were actually</font>

303
00:10:46,630 --> 00:10:51,130
hitting<font color="#E5E5E5"> us with ephemeral ipv6 addresses</font>

304
00:10:48,490 --> 00:10:52,540
so<font color="#E5E5E5"> we went</font><font color="#CCCCCC"> back to</font><font color="#E5E5E5"> do port scans or ICMP</font>

305
00:10:51,130 --> 00:10:54,040
pink scans at these most<font color="#E5E5E5"> of them were</font>

306
00:10:52,540 --> 00:10:56,500
offline<font color="#E5E5E5"> because they were ephemeral</font>

307
00:10:54,040 --> 00:10:57,640
addresses so we<font color="#CCCCCC"> then have this</font>

308
00:10:56,500 --> 00:10:59,740
realization<font color="#CCCCCC"> that we're gonna have</font><font color="#E5E5E5"> to</font>

309
00:10:57,640 --> 00:11:01,900
<font color="#CCCCCC">look at some other techniques because</font>

310
00:10:59,740 --> 00:11:05,140
our year and expensive<font color="#CCCCCC"> honey potting</font>

311
00:11:01,900 --> 00:11:07,390
<font color="#E5E5E5">techniques was completely wasted yeah</font>

312
00:11:05,140 --> 00:11:08,949
and I<font color="#CCCCCC"> think it's a good hallmark of a</font>

313
00:11:07,390 --> 00:11:10,000
research project<font color="#CCCCCC"> that you spend a bunch</font>

314
00:11:08,950 --> 00:11:13,350
<font color="#CCCCCC">of money</font><font color="#E5E5E5"> and waste a bunch</font><font color="#CCCCCC"> of</font>

315
00:11:10,000 --> 00:11:17,230
for absolutely<font color="#CCCCCC"> no reason really</font><font color="#E5E5E5"> really</font>

316
00:11:13,350 --> 00:11:18,250
informative<font color="#E5E5E5"> process so that's how we</font>

317
00:11:17,230 --> 00:11:19,750
were looking at the cryptographic

318
00:11:18,250 --> 00:11:22,329
randomness<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we were</font><font color="#E5E5E5"> trying to deal</font>

319
00:11:19,750 --> 00:11:25,600
<font color="#E5E5E5">within</font><font color="#CCCCCC"> these addresses and you know as</font>

320
00:11:22,329 --> 00:11:28,989
<font color="#CCCCCC">far as as far as we have</font><font color="#E5E5E5"> found thus thus</font>

321
00:11:25,600 --> 00:11:31,389
far<font color="#CCCCCC"> there's not really much</font><font color="#E5E5E5"> we can do on</font>

322
00:11:28,990 --> 00:11:32,829
that<font color="#E5E5E5"> end because like the one way that</font>

323
00:11:31,389 --> 00:11:34,779
we thought<font color="#E5E5E5"> of</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> this was gonna be honey</font>

324
00:11:32,829 --> 00:11:36,790
<font color="#E5E5E5">potty and honey potting like so and just</font>

325
00:11:34,779 --> 00:11:38,800
<font color="#E5E5E5">a further elaborate on those ephemeral</font>

326
00:11:36,790 --> 00:11:41,139
dresses it's the same sort<font color="#CCCCCC"> of</font><font color="#E5E5E5"> idea</font><font color="#CCCCCC"> that</font>

327
00:11:38,800 --> 00:11:42,910
you have with the ephemeral ports<font color="#CCCCCC"> now</font>

328
00:11:41,139 --> 00:11:44,139
<font color="#E5E5E5">we're like an outbound connection</font><font color="#CCCCCC"> just</font>

329
00:11:42,910 --> 00:11:45,310
picks a random<font color="#E5E5E5"> port that doesn't</font>

330
00:11:44,139 --> 00:11:47,139
actually have anything listening on it

331
00:11:45,310 --> 00:11:48,430
<font color="#CCCCCC">so if you're</font><font color="#E5E5E5"> the server and you're</font>

332
00:11:47,139 --> 00:11:50,259
receiving the connection from<font color="#E5E5E5"> a client</font>

333
00:11:48,430 --> 00:11:51,670
<font color="#E5E5E5">and they have an ipv6 address that might</font>

334
00:11:50,259 --> 00:11:52,750
not even<font color="#CCCCCC"> be an</font><font color="#E5E5E5"> address for their</font>

335
00:11:51,670 --> 00:11:54,069
interface it might<font color="#CCCCCC"> just be</font><font color="#E5E5E5"> something</font>

336
00:11:52,750 --> 00:11:55,420
<font color="#CCCCCC">completely random within the network</font>

337
00:11:54,069 --> 00:11:59,410
that<font color="#E5E5E5"> they're on that they're listening</font>

338
00:11:55,420 --> 00:12:00,910
to<font color="#E5E5E5"> so we kind of</font><font color="#CCCCCC"> just shelved that and</font>

339
00:11:59,410 --> 00:12:03,219
you're<font color="#CCCCCC"> like alright let's look at</font>

340
00:12:00,910 --> 00:12:04,899
addresses that<font color="#E5E5E5"> are allocated</font><font color="#CCCCCC"> via other</font>

341
00:12:03,220 --> 00:12:11,620
means<font color="#E5E5E5"> whether that's</font><font color="#CCCCCC"> DHCP static</font>

342
00:12:04,899 --> 00:12:13,240
configuration<font color="#E5E5E5"> or non P slack so these</font>

343
00:12:11,620 --> 00:12:16,300
are ipv6 addresses if you've never seen

344
00:12:13,240 --> 00:12:18,670
them<font color="#E5E5E5"> before</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if you kind of cross</font>

345
00:12:16,300 --> 00:12:21,550
your<font color="#CCCCCC"> eyes a little bit</font><font color="#E5E5E5"> you might see a</font>

346
00:12:18,670 --> 00:12:23,500
bit<font color="#CCCCCC"> of</font><font color="#E5E5E5"> structure in there you'll see</font>

347
00:12:21,550 --> 00:12:26,019
kind<font color="#E5E5E5"> of like common</font><font color="#CCCCCC"> byte boundaries that</font>

348
00:12:23,500 --> 00:12:28,569
<font color="#E5E5E5">are used for</font><font color="#CCCCCC"> network iteration you'll</font>

349
00:12:26,019 --> 00:12:32,500
see a<font color="#E5E5E5"> number of patterns with like where</font>

350
00:12:28,569 --> 00:12:34,180
the kind of expansion<font color="#E5E5E5"> bits go</font><font color="#CCCCCC"> but like</font>

351
00:12:32,500 --> 00:12:36,790
we were<font color="#E5E5E5"> looking at these addresses</font><font color="#CCCCCC"> and</font>

352
00:12:34,180 --> 00:12:39,638
like these you know a humans are

353
00:12:36,790 --> 00:12:41,099
creatures of<font color="#E5E5E5"> habit</font><font color="#CCCCCC"> B this looks like</font>

354
00:12:39,639 --> 00:12:43,449
there's a lot of structure in there I

355
00:12:41,100 --> 00:12:45,850
wonder<font color="#E5E5E5"> if we could have something learn</font>

356
00:12:43,449 --> 00:12:48,160
that structure and then guess new

357
00:12:45,850 --> 00:12:50,050
addresses<font color="#CCCCCC"> and so what</font><font color="#E5E5E5"> does any</font>

358
00:12:48,160 --> 00:12:51,730
self-respecting computer science based

359
00:12:50,050 --> 00:12:54,309
person do we need trying to solve<font color="#E5E5E5"> a</font>

360
00:12:51,730 --> 00:12:56,649
<font color="#CCCCCC">problem like that well obviously you use</font>

361
00:12:54,309 --> 00:12:59,889
machine<font color="#CCCCCC"> learning because</font><font color="#E5E5E5"> it's the</font>

362
00:12:56,649 --> 00:13:01,720
<font color="#CCCCCC">solution to</font><font color="#E5E5E5"> all problems</font><font color="#CCCCCC"> and so not only</font>

363
00:12:59,889 --> 00:13:05,110
are we not network engineers we are also

364
00:13:01,720 --> 00:13:07,930
not machine learning experts<font color="#E5E5E5"> so this was</font>

365
00:13:05,110 --> 00:13:09,309
rather difficult but the so I'm going<font color="#CCCCCC"> to</font>

366
00:13:07,930 --> 00:13:10,269
explain this<font color="#E5E5E5"> in a similar</font><font color="#CCCCCC"> way that</font><font color="#E5E5E5"> it</font>

367
00:13:09,309 --> 00:13:13,329
was explained<font color="#E5E5E5"> to me</font><font color="#CCCCCC"> and I'm</font><font color="#E5E5E5"> probably</font>

368
00:13:10,269 --> 00:13:14,920
gonna mess it<font color="#CCCCCC"> up and</font><font color="#E5E5E5"> doing so but if you</font>

369
00:13:13,329 --> 00:13:17,769
think<font color="#E5E5E5"> about the way the</font><font color="#CCCCCC"> human</font><font color="#E5E5E5"> eye works</font>

370
00:13:14,920 --> 00:13:19,750
if you have<font color="#CCCCCC"> like 20/20 vision or</font>

371
00:13:17,769 --> 00:13:21,759
nothing's messed up with with your lens

372
00:13:19,750 --> 00:13:23,770
then the light rays that<font color="#CCCCCC"> you are</font>

373
00:13:21,759 --> 00:13:25,630
observing<font color="#CCCCCC"> go through the lens</font>

374
00:13:23,770 --> 00:13:29,410
flip<font color="#CCCCCC"> over hit the back of your eye and</font>

375
00:13:25,630 --> 00:13:31,290
then<font color="#E5E5E5"> it registers as your vision</font><font color="#CCCCCC"> and you</font>

376
00:13:29,410 --> 00:13:35,079
get you know with good vision<font color="#E5E5E5"> you have</font>

377
00:13:31,290 --> 00:13:37,630
fairly perfect<font color="#E5E5E5"> recreation of what</font><font color="#CCCCCC"> you're</font>

378
00:13:35,080 --> 00:13:39,550
actually<font color="#E5E5E5"> looking at and then as your</font>

379
00:13:37,630 --> 00:13:40,960
vision degrades the quality<font color="#CCCCCC"> of that</font>

380
00:13:39,550 --> 00:13:45,490
<font color="#E5E5E5">image degrade so you get like an error</font>

381
00:13:40,960 --> 00:13:46,680
rate effectively<font color="#CCCCCC"> so what what you are</font>

382
00:13:45,490 --> 00:13:50,560
<font color="#E5E5E5">doing with these machine learning</font>

383
00:13:46,680 --> 00:13:53,170
<font color="#CCCCCC">autoencoders</font><font color="#E5E5E5"> as they're called is you</font>

384
00:13:50,560 --> 00:13:55,569
are trying<font color="#E5E5E5"> to create a lens that you can</font>

385
00:13:53,170 --> 00:13:57,520
project<font color="#E5E5E5"> data through and you're trying</font>

386
00:13:55,570 --> 00:13:59,230
to<font color="#E5E5E5"> create a lens that has an error</font>

387
00:13:57,520 --> 00:14:00,939
<font color="#E5E5E5">threshold or basically an error</font>

388
00:13:59,230 --> 00:14:03,430
percentage<font color="#CCCCCC"> and what's really</font><font color="#E5E5E5"> cool</font><font color="#CCCCCC"> about</font>

389
00:14:00,940 --> 00:14:06,040
<font color="#E5E5E5">these lenses is that</font><font color="#CCCCCC"> the error is</font>

390
00:14:03,430 --> 00:14:08,859
<font color="#E5E5E5">actually going to be indicative of the</font>

391
00:14:06,040 --> 00:14:11,770
structure of<font color="#CCCCCC"> the data that you train the</font>

392
00:14:08,860 --> 00:14:13,480
<font color="#CCCCCC">model on</font><font color="#E5E5E5"> so the idea is you build a</font>

393
00:14:11,770 --> 00:14:14,829
model<font color="#CCCCCC"> the model is imperfect</font><font color="#E5E5E5"> but the</font>

394
00:14:13,480 --> 00:14:15,910
model learns a lot<font color="#E5E5E5"> about</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> structure</font>

395
00:14:14,830 --> 00:14:18,280
of the data that<font color="#E5E5E5"> you're putting into it</font>

396
00:14:15,910 --> 00:14:20,860
<font color="#CCCCCC">then you take a list of ipv6</font><font color="#E5E5E5"> addresses</font>

397
00:14:18,280 --> 00:14:22,689
pass it through the lens<font color="#E5E5E5"> because the</font>

398
00:14:20,860 --> 00:14:25,090
lens is<font color="#CCCCCC"> not perfect</font><font color="#E5E5E5"> it basically</font>

399
00:14:22,690 --> 00:14:27,340
transforms that<font color="#E5E5E5"> data into a</font><font color="#CCCCCC"> new data set</font>

400
00:14:25,090 --> 00:14:29,710
<font color="#E5E5E5">but because of the way that it is broken</font>

401
00:14:27,340 --> 00:14:31,960
it transforms it into a data set<font color="#CCCCCC"> that is</font>

402
00:14:29,710 --> 00:14:34,900
novel<font color="#E5E5E5"> and representative of the</font>

403
00:14:31,960 --> 00:14:37,660
structure of<font color="#E5E5E5"> the underlying data so</font>

404
00:14:34,900 --> 00:14:39,100
that's<font color="#CCCCCC"> what we were told but</font><font color="#E5E5E5"> so we might</font>

405
00:14:37,660 --> 00:14:41,770
not<font color="#E5E5E5"> be machine learning experts but we</font>

406
00:14:39,100 --> 00:14:44,560
<font color="#E5E5E5">are really good at making</font><font color="#CCCCCC"> perfect lenses</font>

407
00:14:41,770 --> 00:14:47,230
<font color="#E5E5E5">because no matter like how few weights</font>

408
00:14:44,560 --> 00:14:48,790
<font color="#E5E5E5">or how like we tried</font><font color="#CCCCCC"> vinay that we and</font>

409
00:14:47,230 --> 00:14:50,830
we even<font color="#E5E5E5"> kind of employed the help</font><font color="#CCCCCC"> of one</font>

410
00:14:48,790 --> 00:14:52,270
<font color="#E5E5E5">of our one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> our friends who is machine</font>

411
00:14:50,830 --> 00:14:53,800
learning expert and he didn't even

412
00:14:52,270 --> 00:14:56,500
<font color="#E5E5E5">figure it out so I feel better about it</font>

413
00:14:53,800 --> 00:14:58,359
but basically<font color="#E5E5E5"> we create a perfect lens</font>

414
00:14:56,500 --> 00:14:59,290
<font color="#E5E5E5">every time so we would take</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> okay</font>

415
00:14:58,360 --> 00:15:00,580
we're gonna take<font color="#E5E5E5"> our 10 million</font>

416
00:14:59,290 --> 00:15:02,199
addresses pass them through<font color="#E5E5E5"> this lens</font>

417
00:15:00,580 --> 00:15:04,120
<font color="#E5E5E5">and it would just give us back</font><font color="#CCCCCC"> the exact</font>

418
00:15:02,200 --> 00:15:06,450
same addresses<font color="#CCCCCC"> which was really</font><font color="#E5E5E5"> not</font>

419
00:15:04,120 --> 00:15:11,980
helpful<font color="#E5E5E5"> as far</font><font color="#CCCCCC"> as we</font><font color="#E5E5E5"> were</font><font color="#CCCCCC"> concerned</font>

420
00:15:06,450 --> 00:15:13,870
so one kind<font color="#E5E5E5"> of like common</font><font color="#CCCCCC"> thing we</font><font color="#E5E5E5"> like</font>

421
00:15:11,980 --> 00:15:16,000
<font color="#CCCCCC">to do is get</font><font color="#E5E5E5"> really dumb about things</font>

422
00:15:13,870 --> 00:15:19,060
one of<font color="#CCCCCC"> my favorite sayings</font><font color="#E5E5E5"> is if it's</font>

423
00:15:16,000 --> 00:15:20,260
<font color="#E5E5E5">stupid and it works it still works so</font><font color="#CCCCCC"> we</font>

424
00:15:19,060 --> 00:15:22,060
were like okay<font color="#E5E5E5"> we can't do machine</font>

425
00:15:20,260 --> 00:15:24,280
<font color="#E5E5E5">learning let's just get something out</font>

426
00:15:22,060 --> 00:15:27,339
the<font color="#CCCCCC"> door so</font><font color="#E5E5E5"> we came</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> with a really</font>

427
00:15:24,280 --> 00:15:30,130
dumb probability model with this paper

428
00:15:27,340 --> 00:15:31,450
<font color="#CCCCCC">coming to us as kind</font><font color="#E5E5E5"> of some some</font>

429
00:15:30,130 --> 00:15:33,910
<font color="#E5E5E5">encouragement that we were released</font>

430
00:15:31,450 --> 00:15:35,890
heading in the right<font color="#CCCCCC"> direction so this</font>

431
00:15:33,910 --> 00:15:37,550
entropy IP paper<font color="#CCCCCC"> I highly</font><font color="#E5E5E5"> recommend</font>

432
00:15:35,890 --> 00:15:39,470
looking<font color="#E5E5E5"> at it it's from a group of folks</font>

433
00:15:37,550 --> 00:15:41,420
associated<font color="#E5E5E5"> with Akamai and they had this</font>

434
00:15:39,470 --> 00:15:42,290
like<font color="#E5E5E5"> I believe absolutely massive data</font>

435
00:15:41,420 --> 00:15:44,240
said that<font color="#CCCCCC"> they're working with on the</font>

436
00:15:42,290 --> 00:15:46,610
<font color="#E5E5E5">order</font><font color="#CCCCCC"> of billions</font><font color="#E5E5E5"> of ipv6 addresses and</font>

437
00:15:44,240 --> 00:15:49,339
they did this analysis of entropy

438
00:15:46,610 --> 00:15:51,890
breakdown within<font color="#E5E5E5"> the addresses which is</font>

439
00:15:49,339 --> 00:15:55,100
what you see<font color="#CCCCCC"> here so left</font><font color="#E5E5E5"> to right on</font>

440
00:15:51,890 --> 00:15:56,660
the top here<font color="#CCCCCC"> is bit position and then</font>

441
00:15:55,100 --> 00:15:59,000
the blue line is showing<font color="#CCCCCC"> you</font><font color="#E5E5E5"> how much</font>

442
00:15:56,660 --> 00:16:00,829
entropy they observe<font color="#E5E5E5"> in those addresses</font>

443
00:15:59,000 --> 00:16:03,620
<font color="#E5E5E5">so it makes sense that you</font><font color="#CCCCCC"> see much more</font>

444
00:16:00,829 --> 00:16:05,239
<font color="#E5E5E5">entropy on the right hand side because</font>

445
00:16:03,620 --> 00:16:06,589
that's going to<font color="#E5E5E5"> be the</font><font color="#CCCCCC"> host bits when</font>

446
00:16:05,240 --> 00:16:07,490
you're using P slack those are the bits

447
00:16:06,589 --> 00:16:09,980
<font color="#E5E5E5">that are</font><font color="#CCCCCC"> gonna be generated using</font>

448
00:16:07,490 --> 00:16:11,000
cryptographic entropy<font color="#CCCCCC"> but</font><font color="#E5E5E5"> this at</font><font color="#CCCCCC"> least</font>

449
00:16:09,980 --> 00:16:12,260
told us<font color="#CCCCCC"> that we were in</font><font color="#E5E5E5"> the right</font>

450
00:16:11,000 --> 00:16:15,050
<font color="#E5E5E5">direction in this whole like perfect</font>

451
00:16:12,260 --> 00:16:16,339
lens thing was a peb<font color="#CCCCCC"> CAC user error</font><font color="#E5E5E5"> and</font>

452
00:16:15,050 --> 00:16:20,449
<font color="#E5E5E5">that we should we</font><font color="#CCCCCC"> should at least keep</font>

453
00:16:16,339 --> 00:16:24,200
going so we came up<font color="#CCCCCC"> with this really</font>

454
00:16:20,450 --> 00:16:25,730
simple and<font color="#CCCCCC"> stupid way to do</font><font color="#E5E5E5"> things so</font>

455
00:16:24,200 --> 00:16:27,980
here's the way it works<font color="#CCCCCC"> we would</font><font color="#E5E5E5"> take an</font>

456
00:16:25,730 --> 00:16:31,399
ipv6 address<font color="#CCCCCC"> and we would break it down</font>

457
00:16:27,980 --> 00:16:34,040
into<font color="#CCCCCC"> 32 nibbles</font><font color="#E5E5E5"> and what we wanted to do</font>

458
00:16:31,399 --> 00:16:36,440
was create a probability<font color="#CCCCCC"> distribution on</font>

459
00:16:34,040 --> 00:16:40,160
a per nibble basis of what we've<font color="#CCCCCC"> seen in</font>

460
00:16:36,440 --> 00:16:43,100
our<font color="#E5E5E5"> input data set so basically we would</font>

461
00:16:40,160 --> 00:16:46,250
go<font color="#CCCCCC"> through and say okay at position</font><font color="#E5E5E5"> zero</font>

462
00:16:43,100 --> 00:16:48,020
<font color="#E5E5E5">when it's the value of</font><font color="#CCCCCC"> oh x2</font><font color="#E5E5E5"> we've seen</font>

463
00:16:46,250 --> 00:16:50,870
<font color="#E5E5E5">the value of Oh X 8 as</font><font color="#CCCCCC"> the next nibble</font>

464
00:16:48,020 --> 00:16:52,399
one more time and<font color="#E5E5E5"> then position</font><font color="#CCCCCC"> 1 with</font>

465
00:16:50,870 --> 00:16:54,980
the value of<font color="#E5E5E5"> x8 we've seen the next</font>

466
00:16:52,399 --> 00:16:56,329
value<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> X</font><font color="#CCCCCC"> 0 one more time and we go</font>

467
00:16:54,980 --> 00:16:58,040
<font color="#E5E5E5">through every single one of the</font>

468
00:16:56,329 --> 00:17:00,260
<font color="#E5E5E5">addresses</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we have and then we have</font>

469
00:16:58,040 --> 00:17:02,180
a probability<font color="#E5E5E5"> distribution for every</font>

470
00:17:00,260 --> 00:17:04,030
position for the current nibble value

471
00:17:02,180 --> 00:17:05,948
here's what we've seen in the past

472
00:17:04,030 --> 00:17:09,709
<font color="#E5E5E5">around all the data</font><font color="#CCCCCC"> that we've ingested</font>

473
00:17:05,949 --> 00:17:11,240
<font color="#CCCCCC">and this it kind of works but one of</font><font color="#E5E5E5"> the</font>

474
00:17:09,709 --> 00:17:12,760
things that this doesn't<font color="#E5E5E5"> do that the</font>

475
00:17:11,240 --> 00:17:15,770
entropy IP paper really<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font>

476
00:17:12,760 --> 00:17:18,199
emphasizes<font color="#E5E5E5"> is you only have causality</font>

477
00:17:15,770 --> 00:17:20,329
between<font color="#CCCCCC"> adjacent nibbles whereas you</font>

478
00:17:18,199 --> 00:17:22,850
actually tend to have causality much

479
00:17:20,329 --> 00:17:24,589
further<font color="#E5E5E5"> away</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> ipv6 addresses</font>

480
00:17:22,849 --> 00:17:26,030
especially considering<font color="#E5E5E5"> like let's say</font>

481
00:17:24,589 --> 00:17:28,879
that you have a network operator that<font color="#CCCCCC"> is</font>

482
00:17:26,030 --> 00:17:31,100
allocating<font color="#CCCCCC"> at like the</font><font color="#E5E5E5"> 32 32 bit</font>

483
00:17:28,880 --> 00:17:32,240
boundary<font color="#CCCCCC"> and then has some addressing</font>

484
00:17:31,100 --> 00:17:34,399
scheme that they're using<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the hosts</font>

485
00:17:32,240 --> 00:17:37,429
within it so you actually<font color="#E5E5E5"> have causality</font>

486
00:17:34,400 --> 00:17:39,980
much further away<font color="#E5E5E5"> than just adjacent but</font>

487
00:17:37,429 --> 00:17:42,050
it worked to some<font color="#E5E5E5"> extent so when we were</font>

488
00:17:39,980 --> 00:17:44,780
<font color="#E5E5E5">using this model to</font><font color="#CCCCCC"> generate</font><font color="#E5E5E5"> new</font>

489
00:17:42,050 --> 00:17:46,309
addresses<font color="#CCCCCC"> this is what we would</font><font color="#E5E5E5"> do we</font>

490
00:17:44,780 --> 00:17:47,629
would<font color="#E5E5E5"> start with Oh X 2</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> that's</font>

491
00:17:46,309 --> 00:17:49,910
going to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> the publicly allocated</font>

492
00:17:47,630 --> 00:17:51,080
address ranges we would say<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> and</font>

493
00:17:49,910 --> 00:17:53,299
positions you

494
00:17:51,080 --> 00:17:54,500
with value of<font color="#E5E5E5"> x-two what is the</font>

495
00:17:53,299 --> 00:17:56,539
<font color="#CCCCCC">probability distribution for the</font>

496
00:17:54,500 --> 00:17:58,490
<font color="#E5E5E5">following nibble so we say okay here's</font>

497
00:17:56,539 --> 00:18:01,700
the different weights<font color="#CCCCCC"> we take these</font>

498
00:17:58,490 --> 00:18:03,440
weights<font color="#E5E5E5"> we create a way to die we roll</font>

499
00:18:01,700 --> 00:18:05,000
the die<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that gives us</font><font color="#E5E5E5"> the value for</font>

500
00:18:03,440 --> 00:18:07,720
the<font color="#E5E5E5"> next nibble and then we say</font><font color="#CCCCCC"> okay</font>

501
00:18:05,000 --> 00:18:09,710
<font color="#CCCCCC">then for position one value of oxa</font>

502
00:18:07,720 --> 00:18:11,570
<font color="#E5E5E5">what's the</font><font color="#CCCCCC"> probability distribution</font><font color="#E5E5E5"> for</font>

503
00:18:09,710 --> 00:18:13,070
the next nibble do that for all 32<font color="#E5E5E5"> now</font>

504
00:18:11,570 --> 00:18:14,629
we have an address<font color="#CCCCCC"> do that however</font><font color="#E5E5E5"> many</font>

505
00:18:13,070 --> 00:18:17,960
times<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to generate however many</font>

506
00:18:14,630 --> 00:18:20,289
addresses<font color="#E5E5E5"> you want</font><font color="#CCCCCC"> and so it turns out</font>

507
00:18:17,960 --> 00:18:23,210
<font color="#E5E5E5">that</font><font color="#CCCCCC"> stupidity is regularly awarded</font>

508
00:18:20,289 --> 00:18:26,269
because this worked<font color="#E5E5E5"> and at first we</font>

509
00:18:23,210 --> 00:18:29,360
thought<font color="#CCCCCC"> it looks really well another</font>

510
00:18:26,269 --> 00:18:32,240
kind of<font color="#E5E5E5"> like tip with research projects</font>

511
00:18:29,360 --> 00:18:35,029
when<font color="#CCCCCC"> you when you see results that look</font>

512
00:18:32,240 --> 00:18:37,730
really really good hold off<font color="#E5E5E5"> on your</font>

513
00:18:35,029 --> 00:18:40,610
excitement<font color="#E5E5E5"> because it's too</font><font color="#CCCCCC"> much of a</font>

514
00:18:37,730 --> 00:18:41,779
<font color="#CCCCCC">rollercoaster</font><font color="#E5E5E5"> otherwise so we this first</font>

515
00:18:40,610 --> 00:18:44,870
time we generated<font color="#CCCCCC"> ten million addresses</font>

516
00:18:41,779 --> 00:18:47,419
<font color="#E5E5E5">and we did ICMP ping scan across all of</font>

517
00:18:44,870 --> 00:18:50,149
them and like<font color="#CCCCCC"> fifty</font><font color="#E5E5E5"> thousand of them</font>

518
00:18:47,419 --> 00:18:51,620
responded<font color="#CCCCCC"> oh it's like wow we really</font>

519
00:18:50,149 --> 00:18:54,139
<font color="#CCCCCC">solved this problem that was way easier</font>

520
00:18:51,620 --> 00:18:59,959
<font color="#E5E5E5">than I thought it would be but we're</font>

521
00:18:54,139 --> 00:19:01,939
<font color="#E5E5E5">pretty great at this apparently I don't</font>

522
00:18:59,960 --> 00:19:04,700
<font color="#E5E5E5">know that feels that feels</font><font color="#CCCCCC"> too good to</font>

523
00:19:01,940 --> 00:19:08,000
be true<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's when we discovered</font>

524
00:19:04,700 --> 00:19:10,429
<font color="#E5E5E5">these guys and to this day I still don't</font>

525
00:19:08,000 --> 00:19:12,950
<font color="#E5E5E5">really understand what the</font><font color="#CCCCCC"> purpose</font><font color="#E5E5E5"> of</font>

526
00:19:10,429 --> 00:19:14,870
these things<font color="#E5E5E5"> are but</font><font color="#CCCCCC"> their alias</font><font color="#E5E5E5"> network</font>

527
00:19:12,950 --> 00:19:17,330
ranges and what this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> there's</font>

528
00:19:14,870 --> 00:19:18,949
<font color="#CCCCCC">basically an entire network</font><font color="#E5E5E5"> range every</font>

529
00:19:17,330 --> 00:19:22,309
single IP address is mapped<font color="#E5E5E5"> to a single</font>

530
00:19:18,950 --> 00:19:24,889
<font color="#E5E5E5">host so when you ping scan the range</font>

531
00:19:22,309 --> 00:19:26,178
<font color="#E5E5E5">every single host appears to be live but</font>

532
00:19:24,889 --> 00:19:28,340
it's actually<font color="#E5E5E5"> all the same machine and</font>

533
00:19:26,179 --> 00:19:29,870
we're not<font color="#E5E5E5"> talking about like small</font>

534
00:19:28,340 --> 00:19:32,000
networks we're talking<font color="#CCCCCC"> about like a</font><font color="#E5E5E5"> / 32</font>

535
00:19:29,870 --> 00:19:33,979
<font color="#E5E5E5">we're talking</font><font color="#CCCCCC"> about like hundreds of</font>

536
00:19:32,000 --> 00:19:36,799
billions of billions of addresses all

537
00:19:33,980 --> 00:19:38,539
pointing to the<font color="#CCCCCC"> same</font><font color="#E5E5E5"> one so it turns out</font>

538
00:19:36,799 --> 00:19:41,629
<font color="#E5E5E5">that when you have a feedback loop</font>

539
00:19:38,539 --> 00:19:43,700
<font color="#E5E5E5">between your prediction model and the</font>

540
00:19:41,630 --> 00:19:44,929
addresses<font color="#CCCCCC"> that you find and you're</font>

541
00:19:43,700 --> 00:19:47,450
really<font color="#E5E5E5"> and you start finding these</font>

542
00:19:44,929 --> 00:19:49,700
addresses your model very<font color="#CCCCCC"> quickly trains</font>

543
00:19:47,450 --> 00:19:53,059
itself to be completely useless because

544
00:19:49,700 --> 00:19:54,139
<font color="#E5E5E5">it only finds like these bad</font><font color="#CCCCCC"> network</font>

545
00:19:53,059 --> 00:19:55,340
ranges<font color="#E5E5E5"> that we really</font><font color="#CCCCCC"> don't care about</font>

546
00:19:54,139 --> 00:19:57,789
<font color="#CCCCCC">because it's like for every</font><font color="#E5E5E5"> network</font>

547
00:19:55,340 --> 00:20:01,340
range<font color="#CCCCCC"> we've found one machine like yay</font>

548
00:19:57,789 --> 00:20:03,260
<font color="#E5E5E5">so this is a gigantic pain and we had to</font>

549
00:20:01,340 --> 00:20:04,790
figure<font color="#E5E5E5"> out how to deal</font><font color="#CCCCCC"> with it</font><font color="#E5E5E5"> and so</font>

550
00:20:03,260 --> 00:20:07,520
here was a solution<font color="#E5E5E5"> that we came up</font>

551
00:20:04,790 --> 00:20:10,280
with so let's say<font color="#CCCCCC"> that we did a pink</font>

552
00:20:07,520 --> 00:20:13,100
skin<font color="#E5E5E5"> and this ipv6 address responds and</font>

553
00:20:10,280 --> 00:20:14,990
<font color="#CCCCCC">says hey yeah I'm real</font><font color="#E5E5E5"> we say hold on</font>

554
00:20:13,100 --> 00:20:17,389
<font color="#E5E5E5">you're not tricking us like that</font><font color="#CCCCCC"> again</font>

555
00:20:14,990 --> 00:20:19,820
we<font color="#CCCCCC"> gotta</font><font color="#E5E5E5"> figure this out so we first</font>

556
00:20:17,390 --> 00:20:21,320
wrap it in a<font color="#CCCCCC"> slash 96 we have been told</font>

557
00:20:19,820 --> 00:20:24,139
that we<font color="#CCCCCC"> should wrap this in</font><font color="#E5E5E5"> a slash 64</font>

558
00:20:21,320 --> 00:20:25,490
<font color="#E5E5E5">because</font><font color="#CCCCCC"> of the way</font><font color="#E5E5E5"> that address range is</font>

559
00:20:24,140 --> 00:20:28,460
allocated we have not made<font color="#CCCCCC"> that change</font>

560
00:20:25,490 --> 00:20:30,410
yet<font color="#CCCCCC"> but we say okay</font><font color="#E5E5E5"> we're gonna wrap you</font>

561
00:20:28,460 --> 00:20:32,030
<font color="#CCCCCC">in a / 96 Network and then we're gonna</font>

562
00:20:30,410 --> 00:20:34,430
just generate a true<font color="#CCCCCC"> random addresses</font>

563
00:20:32,030 --> 00:20:36,050
<font color="#E5E5E5">within that network right so it's eight</font>

564
00:20:34,430 --> 00:20:38,990
addresses out of<font color="#E5E5E5"> four point three</font>

565
00:20:36,050 --> 00:20:41,840
<font color="#E5E5E5">billion</font><font color="#CCCCCC"> and then we're gonna do</font><font color="#E5E5E5"> an ICMP</font>

566
00:20:38,990 --> 00:20:44,720
scan of all<font color="#E5E5E5"> of those and we say hey if</font>

567
00:20:41,840 --> 00:20:46,610
<font color="#CCCCCC">50% of those addresses</font><font color="#E5E5E5"> respond then</font>

568
00:20:44,720 --> 00:20:47,930
we're pretty<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> the slash 96 is at</font>

569
00:20:46,610 --> 00:20:49,639
least<font color="#E5E5E5"> alias right because what are the</font>

570
00:20:47,930 --> 00:20:50,930
chances<font color="#E5E5E5"> that you're gonna guess eight</font>

571
00:20:49,640 --> 00:20:52,040
<font color="#E5E5E5">random addresses out of four point three</font>

572
00:20:50,930 --> 00:20:55,370
<font color="#E5E5E5">billion and four of them</font><font color="#CCCCCC"> are actually</font>

573
00:20:52,040 --> 00:20:56,600
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> be like hosts I don't I</font><font color="#CCCCCC"> don't feel</font>

574
00:20:55,370 --> 00:20:59,570
particularly confident that I<font color="#CCCCCC"> can do</font>

575
00:20:56,600 --> 00:21:02,090
<font color="#E5E5E5">that so if you say okay it is aliased</font>

576
00:20:59,570 --> 00:21:03,980
<font color="#E5E5E5">now the next step is</font><font color="#CCCCCC"> to find</font><font color="#E5E5E5"> the actual</font>

577
00:21:02,090 --> 00:21:07,250
<font color="#E5E5E5">network boundary for where</font><font color="#CCCCCC"> it's aliased</font>

578
00:21:03,980 --> 00:21:10,190
<font color="#CCCCCC">at so we would take this address and we</font>

579
00:21:07,250 --> 00:21:12,500
would map to<font color="#CCCCCC"> the bits okay say okay</font><font color="#E5E5E5"> we</font>

580
00:21:10,190 --> 00:21:15,230
know the rightmost<font color="#E5E5E5"> 32 bits are within</font>

581
00:21:12,500 --> 00:21:19,250
the alias<font color="#CCCCCC"> network</font><font color="#E5E5E5"> but the other 96 bits</font>

582
00:21:15,230 --> 00:21:22,220
<font color="#CCCCCC">we don't know about yet</font><font color="#E5E5E5"> and so we want</font>

583
00:21:19,250 --> 00:21:24,650
<font color="#E5E5E5">to do a binary search</font><font color="#CCCCCC"> so again</font><font color="#E5E5E5"> because</font>

584
00:21:22,220 --> 00:21:27,610
every single<font color="#E5E5E5"> address in these ranges are</font>

585
00:21:24,650 --> 00:21:30,110
going to respond<font color="#E5E5E5"> if we flip every bit</font>

586
00:21:27,610 --> 00:21:32,479
<font color="#CCCCCC">within</font><font color="#E5E5E5"> that network range then it should</font>

587
00:21:30,110 --> 00:21:34,159
respond as well<font color="#CCCCCC"> and so that's the logic</font>

588
00:21:32,480 --> 00:21:36,080
<font color="#CCCCCC">here so we take the right half of the</font>

589
00:21:34,160 --> 00:21:38,690
<font color="#CCCCCC">bits</font><font color="#E5E5E5"> that we don't know about and we</font>

590
00:21:36,080 --> 00:21:42,560
flip<font color="#E5E5E5"> them all and then we do an ICMP</font>

591
00:21:38,690 --> 00:21:44,390
scan and then that results in one of two

592
00:21:42,560 --> 00:21:47,929
things happening<font color="#E5E5E5"> either no responses</font>

593
00:21:44,390 --> 00:21:49,460
received<font color="#E5E5E5"> in which case we know that the</font>

594
00:21:47,930 --> 00:21:50,810
boundary<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the alias network must</font><font color="#E5E5E5"> be</font>

595
00:21:49,460 --> 00:21:52,100
somewhere within the bits that<font color="#E5E5E5"> we</font>

596
00:21:50,810 --> 00:21:53,870
flipped<font color="#E5E5E5"> otherwise it would have</font>

597
00:21:52,100 --> 00:21:55,879
<font color="#E5E5E5">responded</font><font color="#CCCCCC"> so in this case we know that</font>

598
00:21:53,870 --> 00:21:57,739
the bits<font color="#CCCCCC"> that we didn't flip are clearly</font>

599
00:21:55,880 --> 00:21:59,180
not in the alias<font color="#CCCCCC"> Network range and the</font>

600
00:21:57,740 --> 00:22:01,790
bits<font color="#CCCCCC"> that we did</font><font color="#E5E5E5"> the boundary is</font>

601
00:21:59,180 --> 00:22:03,770
<font color="#E5E5E5">somewhere within there and if we do</font>

602
00:22:01,790 --> 00:22:05,149
receive<font color="#E5E5E5"> a response it's the opposite</font>

603
00:22:03,770 --> 00:22:06,920
<font color="#E5E5E5">because the bits that we flipped are</font>

604
00:22:05,150 --> 00:22:09,500
within the<font color="#CCCCCC"> Elliots Network</font><font color="#E5E5E5"> range and the</font>

605
00:22:06,920 --> 00:22:10,910
ones to<font color="#CCCCCC"> the left of them are not</font><font color="#E5E5E5"> so now</font>

606
00:22:09,500 --> 00:22:13,760
we've narrowed down the bits<font color="#CCCCCC"> that we</font>

607
00:22:10,910 --> 00:22:15,290
don't know about to half and we do this

608
00:22:13,760 --> 00:22:18,230
<font color="#E5E5E5">again</font><font color="#CCCCCC"> and it takes about five</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> six</font>

609
00:22:15,290 --> 00:22:21,200
<font color="#CCCCCC">iterations</font><font color="#E5E5E5"> for us to actually</font>

610
00:22:18,230 --> 00:22:28,070
the boundary<font color="#CCCCCC"> it turns out</font><font color="#E5E5E5"> that this</font>

611
00:22:21,200 --> 00:22:30,740
works pretty<font color="#E5E5E5"> well</font><font color="#CCCCCC"> and that was the state</font>

612
00:22:28,070 --> 00:22:33,889
of<font color="#CCCCCC"> our project up to the</font><font color="#E5E5E5"> release</font><font color="#CCCCCC"> of the</font>

613
00:22:30,740 --> 00:22:36,290
version 0.1<font color="#CCCCCC"> that is something that we</font>

614
00:22:33,890 --> 00:22:39,110
released back in November we've given

615
00:22:36,290 --> 00:22:41,120
another<font color="#E5E5E5"> talk since then on this topic</font>

616
00:22:39,110 --> 00:22:44,270
<font color="#E5E5E5">and our second release that one with</font>

617
00:22:41,120 --> 00:22:45,830
<font color="#E5E5E5">that talk focused on packaging things up</font>

618
00:22:44,270 --> 00:22:47,480
in a way<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was it was really easy to</font>

619
00:22:45,830 --> 00:22:50,360
<font color="#E5E5E5">install</font>

620
00:22:47,480 --> 00:22:54,740
and so for this release which is Bureau

621
00:22:50,360 --> 00:22:57,020
version 0.3<font color="#CCCCCC"> this is our general mantra</font>

622
00:22:54,740 --> 00:22:59,090
in life but<font color="#E5E5E5"> also</font><font color="#CCCCCC"> the main mantra behind</font>

623
00:22:57,020 --> 00:23:00,470
what we wanted<font color="#E5E5E5"> to contribute</font><font color="#CCCCCC"> for this</font>

624
00:22:59,090 --> 00:23:05,270
release<font color="#E5E5E5"> because we don't like giving the</font>

625
00:23:00,470 --> 00:23:07,040
same talk twice<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to get better</font>

626
00:23:05,270 --> 00:23:09,800
<font color="#CCCCCC">we wanted</font><font color="#E5E5E5"> to get a</font><font color="#CCCCCC"> better probability</font>

627
00:23:07,040 --> 00:23:12,200
<font color="#E5E5E5">model for finding addresses and then we</font>

628
00:23:09,800 --> 00:23:13,730
wanted<font color="#E5E5E5"> to be able to search around the</font>

629
00:23:12,200 --> 00:23:15,320
<font color="#E5E5E5">address space that that we found</font>

630
00:23:13,730 --> 00:23:19,550
addresses in which is what Mark<font color="#CCCCCC"> is gonna</font>

631
00:23:15,320 --> 00:23:21,350
<font color="#CCCCCC">talk</font><font color="#E5E5E5"> about next but so this is another</font>

632
00:23:19,550 --> 00:23:25,280
really<font color="#E5E5E5"> interesting paper published in</font>

633
00:23:21,350 --> 00:23:28,820
2017 out of UC Berkeley<font color="#CCCCCC"> and I highly</font>

634
00:23:25,280 --> 00:23:30,620
<font color="#E5E5E5">recommend reading it it's got an</font>

635
00:23:28,820 --> 00:23:34,939
algorithm<font color="#CCCCCC"> with it that is entitled six</font>

636
00:23:30,620 --> 00:23:37,489
<font color="#E5E5E5">gen and it's a pretty a</font><font color="#CCCCCC"> pretty in-depth</font>

637
00:23:34,940 --> 00:23:39,260
analysis<font color="#CCCCCC"> and a lot of</font><font color="#E5E5E5"> really good</font><font color="#CCCCCC"> and</font>

638
00:23:37,490 --> 00:23:41,530
<font color="#E5E5E5">like kind of like contributions</font><font color="#CCCCCC"> around</font>

639
00:23:39,260 --> 00:23:44,870
how we should<font color="#CCCCCC"> think about</font><font color="#E5E5E5"> the problem</font>

640
00:23:41,530 --> 00:23:46,730
also<font color="#E5E5E5"> another another kind of like side</font>

641
00:23:44,870 --> 00:23:48,830
note if you<font color="#E5E5E5"> ever reading a paper and</font>

642
00:23:46,730 --> 00:23:50,600
there's a section<font color="#E5E5E5"> that's like here's the</font>

643
00:23:48,830 --> 00:23:52,220
algorithm<font color="#E5E5E5"> and then it's immediately</font>

644
00:23:50,600 --> 00:23:54,100
followed by here's how you can optimize

645
00:23:52,220 --> 00:23:56,420
<font color="#E5E5E5">the</font><font color="#CCCCCC"> algorithm to actually get it to</font><font color="#E5E5E5"> run</font>

646
00:23:54,100 --> 00:23:57,980
<font color="#E5E5E5">it's probably not something you're</font><font color="#CCCCCC"> gonna</font>

647
00:23:56,420 --> 00:24:00,890
<font color="#E5E5E5">be able to package into a tool all that</font>

648
00:23:57,980 --> 00:24:09,170
<font color="#E5E5E5">easily because it's very expensive</font><font color="#CCCCCC"> to</font>

649
00:24:00,890 --> 00:24:11,990
<font color="#CCCCCC">run</font><font color="#E5E5E5"> another thing that we learned the</font>

650
00:24:09,170 --> 00:24:13,640
biggest contribution in my mind<font color="#E5E5E5"> or at</font>

651
00:24:11,990 --> 00:24:15,710
least to the work<font color="#E5E5E5"> that we did that came</font>

652
00:24:13,640 --> 00:24:18,970
out of<font color="#CCCCCC"> this paper was</font><font color="#E5E5E5"> their notion of</font>

653
00:24:15,710 --> 00:24:22,340
what a cluster in ipv6 address space is

654
00:24:18,970 --> 00:24:26,330
and so they<font color="#CCCCCC"> defined a cluster as an IP</font>

655
00:24:22,340 --> 00:24:28,879
<font color="#CCCCCC">address and a set of wildcard</font><font color="#E5E5E5"> nibble</font>

656
00:24:26,330 --> 00:24:30,530
indices so you have an IP address<font color="#E5E5E5"> you</font>

657
00:24:28,880 --> 00:24:31,549
break it down into<font color="#E5E5E5"> 32 nibbles and then</font>

658
00:24:30,530 --> 00:24:33,499
you say

659
00:24:31,549 --> 00:24:36,679
here are the<font color="#CCCCCC"> nibbles that our wild cards</font>

660
00:24:33,499 --> 00:24:38,570
<font color="#E5E5E5">and what a</font><font color="#CCCCCC"> wild card nibble means is</font>

661
00:24:36,679 --> 00:24:40,549
that for<font color="#E5E5E5"> an IP address to be contained</font>

662
00:24:38,570 --> 00:24:42,379
<font color="#E5E5E5">within a cluster all of the nibbles have</font>

663
00:24:40,549 --> 00:24:44,799
to match but if it's a wild<font color="#CCCCCC"> card in that</font>

664
00:24:42,379 --> 00:24:48,019
<font color="#CCCCCC">position it</font><font color="#E5E5E5"> can be any nibble</font>

665
00:24:44,799 --> 00:24:50,330
so I'll elaborate<font color="#CCCCCC"> on that a little bit</font>

666
00:24:48,019 --> 00:24:52,519
in a second<font color="#CCCCCC"> but in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> to measure</font><font color="#E5E5E5"> kind</font>

667
00:24:50,330 --> 00:24:54,230
<font color="#E5E5E5">of like how good a cluster is where we</font>

668
00:24:52,519 --> 00:24:57,049
think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> two things capacity and</font>

669
00:24:54,230 --> 00:24:59,059
density so capacity is how many IP

670
00:24:57,049 --> 00:25:01,639
addresses can we have within<font color="#E5E5E5"> this</font>

671
00:24:59,059 --> 00:25:04,129
cluster<font color="#CCCCCC"> and then density is of that</font>

672
00:25:01,639 --> 00:25:06,469
<font color="#E5E5E5">number of IP addresses</font><font color="#CCCCCC"> how many of them</font>

673
00:25:04,129 --> 00:25:08,449
are<font color="#CCCCCC"> from the data set that you built the</font>

674
00:25:06,470 --> 00:25:12,109
cluster off of so if we have a cluster

675
00:25:08,450 --> 00:25:13,489
<font color="#CCCCCC">of size 16 and 8 of those IP addresses</font>

676
00:25:12,109 --> 00:25:15,320
<font color="#CCCCCC">are from the data set that we're</font>

677
00:25:13,489 --> 00:25:20,239
<font color="#CCCCCC">building this model off of then it has a</font>

678
00:25:15,320 --> 00:25:22,249
density<font color="#E5E5E5"> of</font><font color="#CCCCCC"> 50% so just to</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> a bit of</font>

679
00:25:20,239 --> 00:25:24,919
an example<font color="#E5E5E5"> here's our same from the IP</font>

680
00:25:22,249 --> 00:25:26,659
address that we looked<font color="#E5E5E5"> at before we</font>

681
00:25:24,919 --> 00:25:29,179
would<font color="#E5E5E5"> take this and we would create a</font>

682
00:25:26,659 --> 00:25:31,039
cluster<font color="#E5E5E5"> up size</font><font color="#CCCCCC"> 1 out</font><font color="#E5E5E5"> of it which is</font>

683
00:25:29,179 --> 00:25:32,779
<font color="#E5E5E5">fairly uninteresting because at this</font>

684
00:25:31,039 --> 00:25:35,450
point there's no wild card indices it's

685
00:25:32,779 --> 00:25:37,460
<font color="#E5E5E5">effectively just an IP</font><font color="#CCCCCC"> address but</font><font color="#E5E5E5"> then</font>

686
00:25:35,450 --> 00:25:40,309
if<font color="#E5E5E5"> we said</font><font color="#CCCCCC"> ok we want to expand this</font>

687
00:25:37,460 --> 00:25:42,980
cluster out to<font color="#E5E5E5"> include a second type</font><font color="#CCCCCC"> e</font>

688
00:25:40,309 --> 00:25:45,499
address of<font color="#E5E5E5"> our choosing represented by</font>

689
00:25:42,980 --> 00:25:46,909
this one right here<font color="#E5E5E5"> we take the second</font>

690
00:25:45,499 --> 00:25:48,350
IP address we break it<font color="#CCCCCC"> down</font><font color="#E5E5E5"> into the</font>

691
00:25:46,909 --> 00:25:50,269
nibbles and<font color="#E5E5E5"> we say how many nibbles</font>

692
00:25:48,350 --> 00:25:53,869
actually<font color="#CCCCCC"> lineup in this case for this</font>

693
00:25:50,269 --> 00:25:55,249
<font color="#CCCCCC">example</font><font color="#E5E5E5"> there's only one offset where</font>

694
00:25:53,869 --> 00:25:58,459
there's a difference<font color="#E5E5E5"> which is right here</font>

695
00:25:55,249 --> 00:25:59,809
<font color="#CCCCCC">so the</font><font color="#E5E5E5"> question then becomes</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> what</font>

696
00:25:58,460 --> 00:26:01,159
sort<font color="#E5E5E5"> of transformations we have to do</font>

697
00:25:59,809 --> 00:26:03,080
this cluster so that it includes both<font color="#E5E5E5"> of</font>

698
00:26:01,159 --> 00:26:06,200
these IP addresses<font color="#CCCCCC"> now and in this case</font>

699
00:26:03,080 --> 00:26:09,949
we<font color="#E5E5E5"> would now have a wild card in</font><font color="#CCCCCC"> that</font>

700
00:26:06,200 --> 00:26:11,600
index<font color="#E5E5E5"> or at that index so in this case</font>

701
00:26:09,950 --> 00:26:12,859
the capacity would<font color="#CCCCCC"> be 16 because</font><font color="#E5E5E5"> we have</font>

702
00:26:11,600 --> 00:26:14,899
one wild card which can<font color="#E5E5E5"> have 16</font>

703
00:26:12,859 --> 00:26:16,549
<font color="#E5E5E5">different values</font><font color="#CCCCCC"> if these are</font><font color="#E5E5E5"> the only</font>

704
00:26:14,899 --> 00:26:17,779
two data<font color="#CCCCCC"> points that</font><font color="#E5E5E5"> we have and data</font>

705
00:26:16,549 --> 00:26:19,908
set we're building the cluster off of

706
00:26:17,779 --> 00:26:22,249
then it's got a<font color="#CCCCCC"> capacity or a captured</font>

707
00:26:19,909 --> 00:26:26,570
of<font color="#CCCCCC"> 2 which means</font><font color="#E5E5E5"> it has a density of</font>

708
00:26:22,249 --> 00:26:28,609
12.5%<font color="#CCCCCC"> and just kind of to hammer this</font>

709
00:26:26,570 --> 00:26:30,859
home<font color="#E5E5E5"> here's the 16 possible values in</font>

710
00:26:28,609 --> 00:26:33,049
that<font color="#E5E5E5"> cluster right all the nibbles are</font>

711
00:26:30,859 --> 00:26:34,279
held in common<font color="#CCCCCC"> is held constant except</font>

712
00:26:33,049 --> 00:26:37,460
for<font color="#CCCCCC"> the ones</font><font color="#E5E5E5"> in a</font><font color="#CCCCCC"> position where we have</font>

713
00:26:34,279 --> 00:26:39,889
a wild card<font color="#E5E5E5"> and that is the cluster and</font>

714
00:26:37,460 --> 00:26:41,929
so<font color="#E5E5E5"> going back</font><font color="#CCCCCC"> to what I was</font><font color="#E5E5E5"> saying</font>

715
00:26:39,889 --> 00:26:44,449
<font color="#E5E5E5">before about the causality</font><font color="#CCCCCC"> between</font>

716
00:26:41,929 --> 00:26:45,350
different areas<font color="#E5E5E5"> or different offsets</font>

717
00:26:44,450 --> 00:26:48,830
within

718
00:26:45,350 --> 00:26:52,039
ipv6 address<font color="#CCCCCC"> this really</font><font color="#E5E5E5"> maps that well</font>

719
00:26:48,830 --> 00:26:53,480
because you can say<font color="#E5E5E5"> okay well here's the</font>

720
00:26:52,039 --> 00:26:55,070
here's the<font color="#E5E5E5"> nibbles that they're commonly</font>

721
00:26:53,480 --> 00:26:57,650
iterating on over<font color="#E5E5E5"> here and also over</font>

722
00:26:55,070 --> 00:26:59,389
<font color="#CCCCCC">here and they can be</font><font color="#E5E5E5"> entirely separate</font>

723
00:26:57,650 --> 00:27:03,350
parts of the address which I really

724
00:26:59,390 --> 00:27:04,850
liked about this about<font color="#E5E5E5"> this idea so with</font>

725
00:27:03,350 --> 00:27:07,699
that in mind<font color="#CCCCCC"> we tell you about the</font>

726
00:27:04,850 --> 00:27:10,610
<font color="#E5E5E5">original</font><font color="#CCCCCC"> algorithm or the</font><font color="#E5E5E5"> algorithm put</font>

727
00:27:07,700 --> 00:27:12,590
forth in<font color="#CCCCCC"> that paper so first we're gonna</font>

728
00:27:10,610 --> 00:27:15,020
take every single ipv6 address that we

729
00:27:12,590 --> 00:27:18,230
<font color="#E5E5E5">have and we create</font><font color="#CCCCCC"> a cluster</font><font color="#E5E5E5"> from every</font>

730
00:27:15,020 --> 00:27:19,908
single<font color="#CCCCCC"> one every</font><font color="#E5E5E5"> single cluster is of</font>

731
00:27:18,230 --> 00:27:21,530
size<font color="#E5E5E5"> one it has a single IP address in</font>

732
00:27:19,909 --> 00:27:23,840
it and that's where we start from<font color="#CCCCCC"> and</font>

733
00:27:21,530 --> 00:27:25,520
then we<font color="#E5E5E5"> say</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> for every cluster that</font>

734
00:27:23,840 --> 00:27:27,830
I have I'm going to<font color="#E5E5E5"> look at what it</font>

735
00:27:25,520 --> 00:27:30,049
takes<font color="#E5E5E5"> to create a cluster with every</font>

736
00:27:27,830 --> 00:27:31,580
other one one at a time right<font color="#E5E5E5"> so this</font>

737
00:27:30,049 --> 00:27:34,190
cluster and<font color="#CCCCCC"> this IP address over</font><font color="#E5E5E5"> here</font>

738
00:27:31,580 --> 00:27:35,449
what is the what are<font color="#E5E5E5"> the</font><font color="#CCCCCC"> wildcard</font>

739
00:27:34,190 --> 00:27:36,860
indices that<font color="#E5E5E5"> I would need to add to</font>

740
00:27:35,450 --> 00:27:39,350
<font color="#E5E5E5">create a cluster</font><font color="#CCCCCC"> that contains both of</font>

741
00:27:36,860 --> 00:27:41,928
them and then once I<font color="#E5E5E5"> have this cluster I</font>

742
00:27:39,350 --> 00:27:43,459
<font color="#E5E5E5">say how good is this cluster compared</font><font color="#CCCCCC"> to</font>

743
00:27:41,929 --> 00:27:45,169
all the data that<font color="#E5E5E5"> I've got</font>

744
00:27:43,460 --> 00:27:47,450
so you're basically evaluating the

745
00:27:45,169 --> 00:27:49,820
density of<font color="#E5E5E5"> the cluster given I'm taking</font>

746
00:27:47,450 --> 00:27:52,220
<font color="#E5E5E5">this one and adding it</font><font color="#CCCCCC"> to it and then</font>

747
00:27:49,820 --> 00:27:53,689
for for all<font color="#E5E5E5"> of this for every cluster</font>

748
00:27:52,220 --> 00:27:56,450
you're trying to find the best<font color="#E5E5E5"> upgrade</font>

749
00:27:53,690 --> 00:27:57,500
candidate so of all the transformations

750
00:27:56,450 --> 00:28:00,049
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you can make which one gives you</font>

751
00:27:57,500 --> 00:28:01,789
<font color="#E5E5E5">the best density and then you take all</font>

752
00:28:00,049 --> 00:28:04,190
those upgrades and you sort<font color="#E5E5E5"> them by</font>

753
00:28:01,789 --> 00:28:05,658
<font color="#CCCCCC">density in</font><font color="#E5E5E5"> Reverse so now we have a list</font>

754
00:28:04,190 --> 00:28:07,520
of clusters<font color="#E5E5E5"> that we consider to be our</font>

755
00:28:05,659 --> 00:28:09,470
<font color="#E5E5E5">model and then</font><font color="#CCCCCC"> we have a list of upgrade</font>

756
00:28:07,520 --> 00:28:11,408
candidates that we're<font color="#CCCCCC"> choosing from that</font>

757
00:28:09,470 --> 00:28:15,200
are sorted with<font color="#E5E5E5"> density at the top and</font>

758
00:28:11,409 --> 00:28:17,659
then we have this notion of a scanning

759
00:28:15,200 --> 00:28:19,580
budget<font color="#E5E5E5"> and and the kind of the intuition</font>

760
00:28:17,659 --> 00:28:22,190
<font color="#CCCCCC">behind the scanning budget is maybe I</font>

761
00:28:19,580 --> 00:28:25,220
only<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> send like 10 million ICMP</font>

762
00:28:22,190 --> 00:28:28,580
probe packets<font color="#CCCCCC"> so my scanning budget is</font>

763
00:28:25,220 --> 00:28:30,260
<font color="#E5E5E5">10 million</font><font color="#CCCCCC"> and the idea here is that</font><font color="#E5E5E5"> we</font>

764
00:28:28,580 --> 00:28:32,449
<font color="#E5E5E5">are going to continue to grow the</font>

765
00:28:30,260 --> 00:28:34,549
cluster set until the accumulative

766
00:28:32,450 --> 00:28:37,039
capacity of all the clusters within<font color="#E5E5E5"> it</font>

767
00:28:34,549 --> 00:28:38,750
exceeds<font color="#CCCCCC"> ten million</font><font color="#E5E5E5"> because then we can</font>

768
00:28:37,039 --> 00:28:41,030
scan every single<font color="#E5E5E5"> possible address and</font>

769
00:28:38,750 --> 00:28:42,169
every single<font color="#E5E5E5"> one of these clusters so</font>

770
00:28:41,030 --> 00:28:44,299
while the scanning budget is not

771
00:28:42,169 --> 00:28:46,700
exhausted we take the best upgrade off

772
00:28:44,299 --> 00:28:49,309
the top<font color="#E5E5E5"> move it into our model and then</font>

773
00:28:46,700 --> 00:28:50,900
recalculate<font color="#CCCCCC"> what</font><font color="#E5E5E5"> the next upgrade the</font>

774
00:28:49,309 --> 00:28:52,700
next best upgrade for that cluster<font color="#E5E5E5"> could</font>

775
00:28:50,900 --> 00:28:53,540
be<font color="#CCCCCC"> right so we're iterating on potential</font>

776
00:28:52,700 --> 00:28:57,350
upgrades<font color="#E5E5E5"> for things that we're</font>

777
00:28:53,540 --> 00:28:59,520
<font color="#CCCCCC">introducing into our model</font><font color="#E5E5E5"> it's a really</font>

778
00:28:57,350 --> 00:29:01,590
cool<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> and the</font>

779
00:28:59,520 --> 00:29:03,540
kind<font color="#E5E5E5"> of the prowess that was made in</font>

780
00:29:01,590 --> 00:29:06,120
this<font color="#E5E5E5"> paper it like to not be understated</font>

781
00:29:03,540 --> 00:29:08,490
<font color="#E5E5E5">it works really well</font><font color="#CCCCCC"> but the problem for</font>

782
00:29:06,120 --> 00:29:09,540
us was<font color="#E5E5E5"> like right</font><font color="#CCCCCC"> off the</font><font color="#E5E5E5"> bat</font><font color="#CCCCCC"> the data</font>

783
00:29:08,490 --> 00:29:12,480
set<font color="#CCCCCC"> that we were working with is about</font>

784
00:29:09,540 --> 00:29:15,420
<font color="#E5E5E5">15 million IP addresses long so you</font>

785
00:29:12,480 --> 00:29:17,100
<font color="#E5E5E5">immediately get</font><font color="#CCCCCC"> x-squared because you're</font>

786
00:29:15,420 --> 00:29:18,270
<font color="#E5E5E5">taking every IP address creating cluster</font>

787
00:29:17,100 --> 00:29:22,550
and<font color="#E5E5E5"> then checking</font><font color="#CCCCCC"> it against every other</font>

788
00:29:18,270 --> 00:29:25,290
<font color="#E5E5E5">IP address and then if you don't do this</font>

789
00:29:22,550 --> 00:29:27,060
well and if you<font color="#E5E5E5"> don't have specialized</font>

790
00:29:25,290 --> 00:29:29,520
data structures<font color="#CCCCCC"> for this it turns into</font><font color="#E5E5E5"> X</font>

791
00:29:27,060 --> 00:29:31,409
cubed because then once you have this

792
00:29:29,520 --> 00:29:33,240
cluster<font color="#E5E5E5"> you have to see how</font><font color="#CCCCCC"> many of your</font>

793
00:29:31,410 --> 00:29:34,680
input data<font color="#CCCCCC"> set actually</font><font color="#E5E5E5"> fall within it</font>

794
00:29:33,240 --> 00:29:36,630
<font color="#E5E5E5">so you're</font><font color="#CCCCCC"> having to analyze</font><font color="#E5E5E5"> your entire</font>

795
00:29:34,680 --> 00:29:39,360
data set again so you don't<font color="#CCCCCC"> do it</font><font color="#E5E5E5"> right</font>

796
00:29:36,630 --> 00:29:41,550
it can<font color="#CCCCCC"> be executed off the bat</font><font color="#E5E5E5"> this</font>

797
00:29:39,360 --> 00:29:42,990
scanning budget<font color="#E5E5E5"> didn't really map to</font>

798
00:29:41,550 --> 00:29:44,250
what we wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do we're trying to</font><font color="#E5E5E5"> get</font>

799
00:29:42,990 --> 00:29:45,180
<font color="#E5E5E5">to a point where we can give you like an</font>

800
00:29:44,250 --> 00:29:49,890
nmap<font color="#CCCCCC"> esque</font>

801
00:29:45,180 --> 00:29:52,860
experience for ipv6<font color="#CCCCCC"> so and also the</font>

802
00:29:49,890 --> 00:29:54,240
cluster model<font color="#E5E5E5"> is being built with the</font>

803
00:29:52,860 --> 00:29:56,280
intention<font color="#E5E5E5"> they'd like you're gonna scan</font>

804
00:29:54,240 --> 00:29:58,770
<font color="#CCCCCC">everything in it which is like okay cool</font>

805
00:29:56,280 --> 00:30:00,149
like have this<font color="#E5E5E5"> tool go scan this bunch</font>

806
00:29:58,770 --> 00:30:01,950
<font color="#E5E5E5">of IP addresses</font><font color="#CCCCCC"> that we already had</font><font color="#E5E5E5"> and</font>

807
00:30:00,150 --> 00:30:04,050
like have fun<font color="#CCCCCC"> didn't</font><font color="#E5E5E5"> really know how are</font>

808
00:30:01,950 --> 00:30:06,570
you<font color="#E5E5E5"> gonna make use of that</font><font color="#CCCCCC"> alright and</font>

809
00:30:04,050 --> 00:30:08,520
again<font color="#E5E5E5"> this evaluation</font><font color="#CCCCCC"> same sort of</font>

810
00:30:06,570 --> 00:30:10,129
evaluation<font color="#E5E5E5"> that adds up top if you don't</font>

811
00:30:08,520 --> 00:30:15,120
do it<font color="#CCCCCC"> right it can be expensive as well</font>

812
00:30:10,130 --> 00:30:16,110
<font color="#E5E5E5">so I wrote code that ran this algorithm</font>

813
00:30:15,120 --> 00:30:17,780
and then I'm<font color="#E5E5E5"> just like sitting there</font>

814
00:30:16,110 --> 00:30:19,949
<font color="#CCCCCC">watching the log output thing</font><font color="#E5E5E5"> I'm like</font>

815
00:30:17,780 --> 00:30:21,629
well I should have paid<font color="#E5E5E5"> more attention</font>

816
00:30:19,950 --> 00:30:22,920
to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> section of the</font><font color="#E5E5E5"> paper that</font><font color="#CCCCCC"> was</font>

817
00:30:21,630 --> 00:30:26,610
like here's the optimizations<font color="#E5E5E5"> you can</font>

818
00:30:22,920 --> 00:30:28,410
make<font color="#E5E5E5"> and lastly this</font><font color="#CCCCCC"> is not intended to</font>

819
00:30:26,610 --> 00:30:31,139
<font color="#CCCCCC">identify new addresses</font><font color="#E5E5E5"> so if you really</font>

820
00:30:28,410 --> 00:30:33,450
<font color="#E5E5E5">grok like the the idea behind what is</font>

821
00:30:31,140 --> 00:30:35,040
trying<font color="#E5E5E5"> to be accomplished here</font><font color="#CCCCCC"> it's we</font>

822
00:30:33,450 --> 00:30:36,720
want to find you have<font color="#E5E5E5"> like a budget of</font>

823
00:30:35,040 --> 00:30:38,730
scanning<font color="#E5E5E5"> that you want to do we want to</font>

824
00:30:36,720 --> 00:30:40,290
find super dense clusters or at least

825
00:30:38,730 --> 00:30:41,880
the densest clusters from<font color="#E5E5E5"> your input</font>

826
00:30:40,290 --> 00:30:43,800
data<font color="#CCCCCC"> set and then we have the</font><font color="#E5E5E5"> ability to</font>

827
00:30:41,880 --> 00:30:46,200
scan every possible<font color="#E5E5E5"> address within them</font>

828
00:30:43,800 --> 00:30:48,060
<font color="#E5E5E5">in that case it's kind of like you're</font>

829
00:30:46,200 --> 00:30:50,490
finding these bounds<font color="#CCCCCC"> around your data</font>

830
00:30:48,060 --> 00:30:51,990
<font color="#E5E5E5">that have a high probability</font><font color="#CCCCCC"> of like the</font>

831
00:30:50,490 --> 00:30:55,590
missing holes that<font color="#E5E5E5"> you don't have yet</font>

832
00:30:51,990 --> 00:30:57,540
<font color="#E5E5E5">are worth scanning which for the purpose</font>

833
00:30:55,590 --> 00:30:59,429
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the paper</font><font color="#CCCCCC"> sounds great</font><font color="#E5E5E5"> but it wasn't</font>

834
00:30:57,540 --> 00:31:00,420
<font color="#E5E5E5">intended to be like we're gonna generate</font>

835
00:30:59,430 --> 00:31:05,670
<font color="#E5E5E5">new addresses</font><font color="#CCCCCC"> we've never seen before</font>

836
00:31:00,420 --> 00:31:07,800
<font color="#CCCCCC">and and find them</font><font color="#E5E5E5"> so we added two sixes</font>

837
00:31:05,670 --> 00:31:09,660
<font color="#E5E5E5">to the name of the to the name of the</font>

838
00:31:07,800 --> 00:31:12,300
algorithm<font color="#CCCCCC"> and dumbed it down as we're</font>

839
00:31:09,660 --> 00:31:13,170
pretty good<font color="#E5E5E5"> at doing</font><font color="#CCCCCC"> and so here's the</font>

840
00:31:12,300 --> 00:31:15,870
way<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

841
00:31:13,170 --> 00:31:17,910
do it so we start in roughly the<font color="#E5E5E5"> same</font>

842
00:31:15,870 --> 00:31:19,889
<font color="#CCCCCC">way every single</font><font color="#E5E5E5"> IP address we have a</font>

843
00:31:17,910 --> 00:31:21,600
cluster of<font color="#E5E5E5"> size</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> for it but instead</font><font color="#CCCCCC"> of</font>

844
00:31:19,890 --> 00:31:24,510
<font color="#E5E5E5">then going back and analyzing it against</font>

845
00:31:21,600 --> 00:31:27,030
every IP address<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we have we</font><font color="#CCCCCC"> just</font>

846
00:31:24,510 --> 00:31:29,340
say<font color="#CCCCCC"> ok there's 32 offsets</font><font color="#E5E5E5"> that we can</font>

847
00:31:27,030 --> 00:31:32,610
pick wild cards at let's see what each

848
00:31:29,340 --> 00:31:37,590
one<font color="#E5E5E5"> of those choices gives us and so</font>

849
00:31:32,610 --> 00:31:41,669
it's only<font color="#CCCCCC"> X times 32 that also gives</font><font color="#E5E5E5"> us</font>

850
00:31:37,590 --> 00:31:44,220
<font color="#CCCCCC">the</font><font color="#E5E5E5"> ability to identify when a cluster</font>

851
00:31:41,670 --> 00:31:45,720
<font color="#E5E5E5">has no good</font><font color="#CCCCCC"> upgrade options if the</font>

852
00:31:44,220 --> 00:31:48,150
constraint is you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> only get</font><font color="#CCCCCC"> to add</font>

853
00:31:45,720 --> 00:31:49,920
one wild card<font color="#CCCCCC"> at a time</font><font color="#E5E5E5"> and if every</font>

854
00:31:48,150 --> 00:31:51,630
addition gives<font color="#E5E5E5"> you the same</font><font color="#CCCCCC"> density it</font>

855
00:31:49,920 --> 00:31:53,250
means that none of the wild cards that

856
00:31:51,630 --> 00:31:54,930
you add are actually capturing<font color="#E5E5E5"> any</font>

857
00:31:53,250 --> 00:31:56,430
additional IP addresses in<font color="#CCCCCC"> your data set</font>

858
00:31:54,930 --> 00:31:59,360
<font color="#CCCCCC">I mean either</font><font color="#E5E5E5"> this IP</font><font color="#CCCCCC"> address is just</font>

859
00:31:56,430 --> 00:32:02,460
<font color="#E5E5E5">kind of out there in the ether</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> not</font>

860
00:31:59,360 --> 00:32:04,500
<font color="#E5E5E5">not all that closely related to any of</font>

861
00:32:02,460 --> 00:32:05,460
<font color="#E5E5E5">your other addresses so we then take all</font>

862
00:32:04,500 --> 00:32:09,480
the<font color="#CCCCCC"> ones</font><font color="#E5E5E5"> that don't</font><font color="#CCCCCC"> have any good</font>

863
00:32:05,460 --> 00:32:10,590
<font color="#CCCCCC">upgraded candidates</font><font color="#E5E5E5"> and remove them from</font>

864
00:32:09,480 --> 00:32:12,840
<font color="#E5E5E5">there and we sort</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> upgrades by</font>

865
00:32:10,590 --> 00:32:15,929
<font color="#E5E5E5">density and then instead</font><font color="#CCCCCC"> of having</font><font color="#E5E5E5"> a</font>

866
00:32:12,840 --> 00:32:20,639
scanning budget we have a scoring<font color="#CCCCCC"> system</font>

867
00:32:15,930 --> 00:32:23,010
<font color="#CCCCCC">and we score based on</font><font color="#E5E5E5"> density</font><font color="#CCCCCC"> the total</font>

868
00:32:20,640 --> 00:32:26,190
<font color="#E5E5E5">capacity so how big the</font><font color="#CCCCCC"> the accumulative</font>

869
00:32:23,010 --> 00:32:27,960
<font color="#E5E5E5">size is and then also a number of</font>

870
00:32:26,190 --> 00:32:29,490
<font color="#CCCCCC">clusters</font><font color="#E5E5E5"> within the cluster set because</font>

871
00:32:27,960 --> 00:32:30,990
if we can have the<font color="#CCCCCC"> fewest clusters with</font>

872
00:32:29,490 --> 00:32:33,930
the biggest size and the best density

873
00:32:30,990 --> 00:32:39,020
that seems intuitively where we want to

874
00:32:33,930 --> 00:32:41,010
go and so<font color="#E5E5E5"> this like I said before</font>

875
00:32:39,020 --> 00:32:44,100
<font color="#CCCCCC">reduces the complexity by a decent</font>

876
00:32:41,010 --> 00:32:45,690
<font color="#CCCCCC">margin</font><font color="#E5E5E5"> and then again when we're</font>

877
00:32:44,100 --> 00:32:47,870
actually<font color="#CCCCCC"> removing all those IP addresses</font>

878
00:32:45,690 --> 00:32:51,090
<font color="#CCCCCC">that don't have any</font><font color="#E5E5E5"> nearby neighbors</font>

879
00:32:47,870 --> 00:32:52,459
<font color="#CCCCCC">this gets rid of like 80 to 90%</font><font color="#E5E5E5"> of the</font>

880
00:32:51,090 --> 00:32:54,570
<font color="#E5E5E5">addresses that we have in our data set</font>

881
00:32:52,460 --> 00:32:56,400
and<font color="#E5E5E5"> we don't</font><font color="#CCCCCC"> throw them away</font><font color="#E5E5E5"> when I talk</font>

882
00:32:54,570 --> 00:32:59,250
about what we<font color="#E5E5E5"> use those for</font><font color="#CCCCCC"> it might</font>

883
00:32:56,400 --> 00:33:01,020
make<font color="#CCCCCC"> more sense</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> there's no scanning</font>

884
00:32:59,250 --> 00:33:02,910
budget<font color="#E5E5E5"> so we continue to improve a model</font>

885
00:33:01,020 --> 00:33:05,280
basically<font color="#E5E5E5"> so long as the score of the</font>

886
00:33:02,910 --> 00:33:06,960
model<font color="#E5E5E5"> that continues to grow we continue</font>

887
00:33:05,280 --> 00:33:09,240
<font color="#E5E5E5">to iterate</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> it but then as soon</font><font color="#CCCCCC"> as it</font>

888
00:33:06,960 --> 00:33:10,500
like kind<font color="#CCCCCC"> of falls down then</font><font color="#E5E5E5"> we say</font><font color="#CCCCCC"> ok</font>

889
00:33:09,240 --> 00:33:13,560
this<font color="#E5E5E5"> is as good as a model is going to</font>

890
00:33:10,500 --> 00:33:15,030
<font color="#E5E5E5">get and then we're happy</font><font color="#CCCCCC"> but one thing</font>

891
00:33:13,560 --> 00:33:18,030
<font color="#CCCCCC">that I haven't talked</font><font color="#E5E5E5"> about yet</font><font color="#CCCCCC"> that is</font>

892
00:33:15,030 --> 00:33:20,940
still expensive<font color="#CCCCCC"> is deduplication</font><font color="#E5E5E5"> so when</font>

893
00:33:18,030 --> 00:33:23,430
we pick a<font color="#CCCCCC"> new upgrade to move over to</font>

894
00:33:20,940 --> 00:33:25,710
<font color="#CCCCCC">our</font><font color="#E5E5E5"> model there</font><font color="#CCCCCC"> is a chance that that</font>

895
00:33:23,430 --> 00:33:26,890
new cluster entirely contains other

896
00:33:25,710 --> 00:33:28,809
clusters<font color="#E5E5E5"> that we have</font>

897
00:33:26,890 --> 00:33:29,710
at which<font color="#CCCCCC"> point we need to be removing</font>

898
00:33:28,809 --> 00:33:31,120
the clusters<font color="#E5E5E5"> that are already there</font>

899
00:33:29,710 --> 00:33:33,190
<font color="#CCCCCC">already contained by we</font><font color="#E5E5E5"> don't want to</font>

900
00:33:31,120 --> 00:33:36,909
count<font color="#E5E5E5"> them twice and that's actually</font>

901
00:33:33,190 --> 00:33:40,000
<font color="#E5E5E5">fairly expensive</font><font color="#CCCCCC"> so we pick kind of a</font>

902
00:33:36,910 --> 00:33:41,320
step size and we say like<font color="#E5E5E5"> right now for</font>

903
00:33:40,000 --> 00:33:45,070
<font color="#CCCCCC">the model</font><font color="#E5E5E5"> that we have</font><font color="#CCCCCC"> package left</font><font color="#E5E5E5"> and</font>

904
00:33:41,320 --> 00:33:46,899
<font color="#CCCCCC">master we take 25,000 upgrade candidates</font>

905
00:33:45,070 --> 00:33:48,370
and then evaluate and then look at<font color="#E5E5E5"> the</font>

906
00:33:46,900 --> 00:33:50,020
score and<font color="#E5E5E5"> then if everything</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> good we</font>

907
00:33:48,370 --> 00:33:51,549
take another<font color="#E5E5E5"> 25,000 so we're not having</font>

908
00:33:50,020 --> 00:33:53,440
<font color="#CCCCCC">to recalculate or</font><font color="#E5E5E5"> do you do this</font>

909
00:33:51,549 --> 00:33:58,330
deduplication<font color="#E5E5E5"> every single time we pick</font>

910
00:33:53,440 --> 00:33:59,890
an upgrade<font color="#CCCCCC"> so once we have that</font><font color="#E5E5E5"> model we</font>

911
00:33:58,330 --> 00:34:01,570
then move to<font color="#E5E5E5"> the problem of what do we</font>

912
00:33:59,890 --> 00:34:04,900
do<font color="#E5E5E5"> this model to actually predict new IP</font>

913
00:34:01,570 --> 00:34:06,610
addresses<font color="#CCCCCC"> and so what we do is we first</font>

914
00:34:04,900 --> 00:34:09,909
pick a cluster out of the cluster set at

915
00:34:06,610 --> 00:34:11,830
random and<font color="#E5E5E5"> then for every nibble that we</font>

916
00:34:09,909 --> 00:34:13,720
need to generate we have a like

917
00:34:11,830 --> 00:34:17,379
probability<font color="#CCCCCC"> threshold right</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> in</font>

918
00:34:13,719 --> 00:34:19,509
master it's<font color="#CCCCCC"> 10% so 10% of the time it is</font>

919
00:34:17,379 --> 00:34:21,279
<font color="#E5E5E5">going to pick a nibble from the</font>

920
00:34:19,510 --> 00:34:22,780
probability distribution<font color="#CCCCCC"> that we've seen</font>

921
00:34:21,280 --> 00:34:26,800
in all of<font color="#CCCCCC"> those loans</font><font color="#E5E5E5"> we didn't include</font>

922
00:34:22,780 --> 00:34:28,300
<font color="#E5E5E5">in the model at random</font><font color="#CCCCCC"> so basically</font><font color="#E5E5E5"> all</font>

923
00:34:26,800 --> 00:34:30,429
of<font color="#E5E5E5"> the stuff</font><font color="#CCCCCC"> that did not make it</font><font color="#E5E5E5"> into</font>

924
00:34:28,300 --> 00:34:32,649
<font color="#E5E5E5">the clusters that that we have in</font><font color="#CCCCCC"> our</font>

925
00:34:30,429 --> 00:34:34,389
<font color="#CCCCCC">model</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have a per nibble probably</font>

926
00:34:32,649 --> 00:34:35,799
probability distribution<font color="#E5E5E5"> so if we were</font>

927
00:34:34,389 --> 00:34:38,980
choosing to pick<font color="#E5E5E5"> from that</font><font color="#CCCCCC"> model</font><font color="#E5E5E5"> we'd</font>

928
00:34:35,800 --> 00:34:40,330
say okay<font color="#E5E5E5"> at this</font><font color="#CCCCCC"> position what is</font><font color="#E5E5E5"> the</font>

929
00:34:38,980 --> 00:34:42,550
distribution<font color="#E5E5E5"> of nibbles that we've seen</font>

930
00:34:40,330 --> 00:34:44,259
and<font color="#E5E5E5"> we create a way to die from that</font>

931
00:34:42,550 --> 00:34:46,929
<font color="#CCCCCC">roll it</font><font color="#E5E5E5"> and that's the value that we go</font>

932
00:34:44,260 --> 00:34:48,700
with the other<font color="#E5E5E5"> 90% of the time we</font>

933
00:34:46,929 --> 00:34:50,139
generate it from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> cluster and if</font>

934
00:34:48,699 --> 00:34:52,719
<font color="#E5E5E5">we're generating from the cluster it's</font>

935
00:34:50,139 --> 00:34:54,369
simpler logic if it's a<font color="#E5E5E5"> wild</font><font color="#CCCCCC"> card</font><font color="#E5E5E5"> you</font>

936
00:34:52,719 --> 00:34:55,868
roll a 16 sided die and<font color="#E5E5E5"> that gives you</font>

937
00:34:54,369 --> 00:34:57,670
what value you want<font color="#E5E5E5"> if it's not a wild</font>

938
00:34:55,869 --> 00:35:00,460
<font color="#E5E5E5">card</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> just taking</font><font color="#CCCCCC"> the nibble value</font>

939
00:34:57,670 --> 00:35:02,470
<font color="#E5E5E5">directly</font><font color="#CCCCCC"> from that</font><font color="#E5E5E5"> cluster and so now</font>

940
00:35:00,460 --> 00:35:05,140
<font color="#CCCCCC">Mark</font><font color="#E5E5E5"> is going to talk</font><font color="#CCCCCC"> about what we do</font>

941
00:35:02,470 --> 00:35:07,660
in<font color="#E5E5E5"> relation to expanding out our search</font>

942
00:35:05,140 --> 00:35:09,730
from individual IP addresses<font color="#E5E5E5"> so after</font>

943
00:35:07,660 --> 00:35:11,710
we've done<font color="#CCCCCC"> this generation and discovery</font>

944
00:35:09,730 --> 00:35:13,060
step<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> found some new ipv6</font>

945
00:35:11,710 --> 00:35:14,830
addresses that<font color="#E5E5E5"> are associated with live</font>

946
00:35:13,060 --> 00:35:16,240
posts<font color="#E5E5E5"> we want to take advantage</font><font color="#CCCCCC"> of the</font>

947
00:35:14,830 --> 00:35:17,980
fact<font color="#CCCCCC"> that there may be either</font>

948
00:35:16,240 --> 00:35:20,169
neighboring addresses in<font color="#E5E5E5"> sequential</font>

949
00:35:17,980 --> 00:35:22,840
<font color="#E5E5E5">order or other addresses with small</font>

950
00:35:20,170 --> 00:35:24,490
nibble changes to the initial address<font color="#CCCCCC"> it</font>

951
00:35:22,840 --> 00:35:26,950
might<font color="#E5E5E5"> be valid as well and so we found</font>

952
00:35:24,490 --> 00:35:28,419
<font color="#CCCCCC">out using</font><font color="#E5E5E5"> these two techniques we start</font>

953
00:35:26,950 --> 00:35:30,250
with the nibble adjacent<font color="#E5E5E5"> fan-out</font>

954
00:35:28,420 --> 00:35:32,020
premise here<font color="#CCCCCC"> is that we've discovered an</font>

955
00:35:30,250 --> 00:35:33,850
address so this bottom address is the

956
00:35:32,020 --> 00:35:36,100
example address we've discovered we have

957
00:35:33,850 --> 00:35:40,569
a target<font color="#CCCCCC"> network that we are scanning</font>

958
00:35:36,100 --> 00:35:43,060
and we vary each nibble in the

959
00:35:40,570 --> 00:35:44,680
we<font color="#E5E5E5"> discovered</font><font color="#CCCCCC"> address and generate 15</font>

960
00:35:43,060 --> 00:35:46,810
new addresses<font color="#E5E5E5"> for each nimble that it's</font>

961
00:35:44,680 --> 00:35:48,819
not part<font color="#E5E5E5"> of the network mask so this</font>

962
00:35:46,810 --> 00:35:50,170
network mask is<font color="#E5E5E5"> a slashed</font><font color="#CCCCCC"> four so the</font>

963
00:35:48,820 --> 00:35:52,240
first nibble<font color="#CCCCCC"> that first two and</font><font color="#E5E5E5"> the</font>

964
00:35:50,170 --> 00:35:54,220
address<font color="#CCCCCC"> is fixed</font><font color="#E5E5E5"> but we can vary every</font>

965
00:35:52,240 --> 00:35:56,890
other nibble in the address<font color="#E5E5E5"> this gives</font>

966
00:35:54,220 --> 00:35:59,109
us up to 465 new candidate addresses for

967
00:35:56,890 --> 00:36:02,710
each discovered address so we start<font color="#CCCCCC"> by</font>

968
00:35:59,110 --> 00:36:04,990
setting<font color="#E5E5E5"> the 31st or 32nd nibble to</font><font color="#CCCCCC"> zero</font>

969
00:36:02,710 --> 00:36:06,490
<font color="#CCCCCC">and then to because we</font><font color="#E5E5E5"> have one in the</font>

970
00:36:04,990 --> 00:36:08,410
original<font color="#CCCCCC"> address and we go down and</font>

971
00:36:06,490 --> 00:36:11,169
we've created<font color="#E5E5E5"> now</font><font color="#CCCCCC"> fifteen new candidate</font>

972
00:36:08,410 --> 00:36:13,060
addresses based on this starting<font color="#CCCCCC"> address</font>

973
00:36:11,170 --> 00:36:14,200
and then<font color="#E5E5E5"> we do the same</font><font color="#CCCCCC"> for all of the</font>

974
00:36:13,060 --> 00:36:16,060
nibbles that are not<font color="#E5E5E5"> included in the</font>

975
00:36:14,200 --> 00:36:17,379
network mask<font color="#E5E5E5"> and this actually proves to</font>

976
00:36:16,060 --> 00:36:19,060
be<font color="#E5E5E5"> pretty effective</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> we have a</font>

977
00:36:17,380 --> 00:36:20,770
lot<font color="#CCCCCC"> of addresses which have different</font>

978
00:36:19,060 --> 00:36:22,810
nibble variations from<font color="#E5E5E5"> what we've</font>

979
00:36:20,770 --> 00:36:24,580
actually discovered<font color="#E5E5E5"> and this gives us</font>

980
00:36:22,810 --> 00:36:27,180
approximately an order of<font color="#CCCCCC"> magnitude more</font>

981
00:36:24,580 --> 00:36:30,610
<font color="#E5E5E5">addresses and we get just from doing the</font>

982
00:36:27,180 --> 00:36:33,730
<font color="#E5E5E5">666 trend discovery step and we also do</font>

983
00:36:30,610 --> 00:36:35,890
a<font color="#CCCCCC"> / 64 sequential fan-out</font><font color="#E5E5E5"> the premise</font>

984
00:36:33,730 --> 00:36:37,900
<font color="#CCCCCC">here is that</font><font color="#E5E5E5"> if we discover any colon</font>

985
00:36:35,890 --> 00:36:40,000
colon 1/64 addresses so this is an

986
00:36:37,900 --> 00:36:43,330
address<font color="#E5E5E5"> where the right 64 bits are 1</font>

987
00:36:40,000 --> 00:36:46,240
<font color="#E5E5E5">the left 64 bits are these / 64 Network</font>

988
00:36:43,330 --> 00:36:47,560
bits we monotonically increase the

989
00:36:46,240 --> 00:36:49,600
<font color="#E5E5E5">network bits and also monotonically</font>

990
00:36:47,560 --> 00:36:52,570
decreasing Network bits<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we generate</font>

991
00:36:49,600 --> 00:36:54,790
<font color="#E5E5E5">neighboring / 64 networks and so in this</font>

992
00:36:52,570 --> 00:36:56,740
<font color="#E5E5E5">case we're</font><font color="#CCCCCC"> taking</font><font color="#E5E5E5"> in that last left 64</font>

993
00:36:54,790 --> 00:36:59,140
bits<font color="#E5E5E5"> and going up and down and by</font>

994
00:36:56,740 --> 00:37:01,120
default<font color="#E5E5E5"> now we generate 1000 / 54</font>

995
00:36:59,140 --> 00:37:03,250
networks<font color="#E5E5E5"> on each side of</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> we've</font>

996
00:37:01,120 --> 00:37:05,020
discovered and<font color="#E5E5E5"> then we do a similar step</font>

997
00:37:03,250 --> 00:37:07,360
for identifying hosts<font color="#E5E5E5"> within these</font>

998
00:37:05,020 --> 00:37:09,009
networks<font color="#E5E5E5"> the idea here</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> people</font>

999
00:37:07,360 --> 00:37:11,410
<font color="#E5E5E5">can manually configure devices</font><font color="#CCCCCC"> with</font>

1000
00:37:09,010 --> 00:37:13,060
monotonically increasing<font color="#E5E5E5"> addresses or if</font>

1001
00:37:11,410 --> 00:37:14,830
they're using<font color="#E5E5E5"> DHCP with monotonically</font>

1002
00:37:13,060 --> 00:37:16,330
increasing addresses we might have

1003
00:37:14,830 --> 00:37:18,670
addresses<font color="#E5E5E5"> that are sequentially up from</font>

1004
00:37:16,330 --> 00:37:21,279
these / 64<font color="#CCCCCC"> s</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be discovered so by</font>

1005
00:37:18,670 --> 00:37:22,720
<font color="#E5E5E5">default we generate the first 500 hosts</font>

1006
00:37:21,280 --> 00:37:25,060
within each flashes before<font color="#E5E5E5"> that we've</font>

1007
00:37:22,720 --> 00:37:27,040
seen and then scan for those and with

1008
00:37:25,060 --> 00:37:29,470
the sequential fan out along with<font color="#E5E5E5"> the</font>

1009
00:37:27,040 --> 00:37:31,180
nipple adjacent<font color="#E5E5E5"> fan out we're getting</font><font color="#CCCCCC"> a</font>

1010
00:37:29,470 --> 00:37:32,560
considerably larger number<font color="#CCCCCC"> of addresses</font>

1011
00:37:31,180 --> 00:37:34,899
<font color="#E5E5E5">now than we had with our previous</font>

1012
00:37:32,560 --> 00:37:37,000
<font color="#CCCCCC">implementation</font><font color="#E5E5E5"> and so the question we</font>

1013
00:37:34,900 --> 00:37:38,650
<font color="#E5E5E5">want to ask ourselves is is a smarter</font>

1014
00:37:37,000 --> 00:37:41,560
have we<font color="#CCCCCC"> helped we improve how we</font><font color="#E5E5E5"> learn</font>

1015
00:37:38,650 --> 00:37:43,060
<font color="#CCCCCC">for this</font><font color="#E5E5E5"> and so version</font><font color="#CCCCCC"> 2 version</font><font color="#E5E5E5"> zero</font>

1016
00:37:41,560 --> 00:37:45,220
<font color="#E5E5E5">point</font><font color="#CCCCCC"> two which we</font><font color="#E5E5E5"> released at shmoocon</font>

1017
00:37:43,060 --> 00:37:47,230
<font color="#E5E5E5">you're pretty proud of and yes this is</font>

1018
00:37:45,220 --> 00:37:48,790
<font color="#E5E5E5">pretty good we were running this for</font>

1019
00:37:47,230 --> 00:37:50,290
<font color="#E5E5E5">eight days and we discovered</font><font color="#CCCCCC"> fifty eight</font>

1020
00:37:48,790 --> 00:37:52,240
thousand eight hundred<font color="#CCCCCC"> thirty-eight</font><font color="#E5E5E5"> new</font>

1021
00:37:50,290 --> 00:37:53,990
<font color="#E5E5E5">addresses</font><font color="#CCCCCC"> 80 percent of</font><font color="#E5E5E5"> these were a lot</font>

1022
00:37:52,240 --> 00:37:55,399
<font color="#CCCCCC">of public datasets so we're</font><font color="#E5E5E5"> able</font>

1023
00:37:53,990 --> 00:37:57,430
<font color="#E5E5E5">Emma straight that we can generate</font><font color="#CCCCCC"> tens</font>

1024
00:37:55,400 --> 00:38:00,590
<font color="#CCCCCC">of thousands</font><font color="#E5E5E5"> of addresses</font><font color="#CCCCCC"> that are novel</font>

1025
00:37:57,430 --> 00:38:03,740
<font color="#CCCCCC">now we've made</font><font color="#E5E5E5"> a few improvements for</font>

1026
00:38:00,590 --> 00:38:06,440
this version<font color="#E5E5E5"> 0.3 release and it's been</font>

1027
00:38:03,740 --> 00:38:08,990
pretty remarkable<font color="#E5E5E5"> so we ran a scan this</font>

1028
00:38:06,440 --> 00:38:10,940
morning for one hour<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the current</font>

1029
00:38:08,990 --> 00:38:14,450
implementation<font color="#E5E5E5"> and our current model and</font>

1030
00:38:10,940 --> 00:38:17,390
we discovered<font color="#E5E5E5"> 1.5 7</font><font color="#CCCCCC"> million new</font><font color="#E5E5E5"> IP</font><font color="#CCCCCC"> bees</font>

1031
00:38:14,450 --> 00:38:20,299
<font color="#E5E5E5">or live ipv6 addresses 78% of which were</font>

1032
00:38:17,390 --> 00:38:22,190
not in any<font color="#E5E5E5"> of our existing</font><font color="#CCCCCC"> data sets</font><font color="#E5E5E5"> so</font>

1033
00:38:20,300 --> 00:38:25,010
this gives<font color="#E5E5E5"> us approximately 1.2 million</font>

1034
00:38:22,190 --> 00:38:25,520
live ipv6<font color="#E5E5E5"> so so we discovered in one</font>

1035
00:38:25,010 --> 00:38:27,500
hour

1036
00:38:25,520 --> 00:38:29,630
this was throttled<font color="#E5E5E5"> to 50 megabits per</font>

1037
00:38:27,500 --> 00:38:32,600
second on a<font color="#CCCCCC"> digital</font><font color="#E5E5E5"> ocean cloud instance</font>

1038
00:38:29,630 --> 00:38:34,520
<font color="#E5E5E5">this might this is also more</font><font color="#CCCCCC"> of a</font>

1039
00:38:32,600 --> 00:38:40,460
testament to<font color="#E5E5E5"> how comically bad we were</font>

1040
00:38:34,520 --> 00:38:42,650
<font color="#CCCCCC">before</font><font color="#E5E5E5"> it how great we</font><font color="#CCCCCC"> are now</font><font color="#E5E5E5"> but it we</font>

1041
00:38:40,460 --> 00:38:44,480
got this number<font color="#E5E5E5"> like earlier today</font><font color="#CCCCCC"> so</font>

1042
00:38:42,650 --> 00:38:50,119
this<font color="#E5E5E5"> is still kind of sinking in that</font>

1043
00:38:44,480 --> 00:38:52,030
<font color="#E5E5E5">this actually works yeah so we're I feel</font>

1044
00:38:50,119 --> 00:38:54,290
it was<font color="#CCCCCC"> reasonably happy to have a</font>

1045
00:38:52,030 --> 00:38:57,520
<font color="#CCCCCC">500,000</font><font color="#E5E5E5"> percent improvement</font><font color="#CCCCCC"> yes it's</font><font color="#E5E5E5"> all</font>

1046
00:38:54,290 --> 00:38:59,420
<font color="#CCCCCC">right</font><font color="#E5E5E5"> and so we took a sampling</font><font color="#CCCCCC"> of</font>

1047
00:38:57,520 --> 00:39:01,790
100,000 of<font color="#E5E5E5"> these addresses that we</font>

1048
00:38:59,420 --> 00:39:03,920
<font color="#E5E5E5">generated this morning and TCP connect</font>

1049
00:39:01,790 --> 00:39:05,000
scans for some common ports<font color="#E5E5E5"> and wanted a</font>

1050
00:39:03,920 --> 00:39:06,290
standard<font color="#E5E5E5"> you check ourselves and make</font>

1051
00:39:05,000 --> 00:39:08,300
sure you know are these actual<font color="#E5E5E5"> live</font>

1052
00:39:06,290 --> 00:39:10,970
posts are we just crazy<font color="#E5E5E5"> and we have some</font>

1053
00:39:08,300 --> 00:39:13,480
pretty good<font color="#CCCCCC"> response</font><font color="#E5E5E5"> so a lot of SSH and</font>

1054
00:39:10,970 --> 00:39:15,950
telnet<font color="#E5E5E5"> service is a lot of web services</font>

1055
00:39:13,480 --> 00:39:17,180
<font color="#CCCCCC">there are a lot of networking equipment</font>

1056
00:39:15,950 --> 00:39:18,680
and this<font color="#E5E5E5"> is both infrastructure</font>

1057
00:39:17,180 --> 00:39:20,419
networking equipment as well<font color="#CCCCCC"> as consumer</font>

1058
00:39:18,680 --> 00:39:21,799
premises equipment<font color="#CCCCCC"> so cable modems that</font>

1059
00:39:20,420 --> 00:39:23,480
<font color="#E5E5E5">sort of thing</font>

1060
00:39:21,800 --> 00:39:26,030
lots of ancient<font color="#CCCCCC"> SSH</font><font color="#E5E5E5"> and tell that</font>

1061
00:39:23,480 --> 00:39:28,880
servers some<font color="#E5E5E5"> no off Mongo instances also</font>

1062
00:39:26,030 --> 00:39:30,470
<font color="#E5E5E5">Windows RPC all kinds</font><font color="#CCCCCC"> of things this</font><font color="#E5E5E5"> is</font>

1063
00:39:28,880 --> 00:39:32,570
good<font color="#E5E5E5"> validation of the fact that our</font>

1064
00:39:30,470 --> 00:39:34,250
generated<font color="#CCCCCC"> dataset is in fact Internet</font>

1065
00:39:32,570 --> 00:39:35,869
connected<font color="#E5E5E5"> live posts with network</font>

1066
00:39:34,250 --> 00:39:37,850
<font color="#E5E5E5">services running on them this is really</font>

1067
00:39:35,869 --> 00:39:40,100
<font color="#E5E5E5">promising</font><font color="#CCCCCC"> because if we've been able to</font>

1068
00:39:37,850 --> 00:39:42,770
<font color="#CCCCCC">generate this set of 1.57 million in an</font>

1069
00:39:40,100 --> 00:39:45,109
hour we<font color="#CCCCCC"> can quickly start to amass a</font>

1070
00:39:42,770 --> 00:39:48,200
pretty good set of<font color="#CCCCCC"> novel</font><font color="#E5E5E5"> ipv6 addresses</font>

1071
00:39:45,109 --> 00:39:49,670
and one one thing<font color="#E5E5E5"> that it's kind</font><font color="#CCCCCC"> of</font>

1072
00:39:48,200 --> 00:39:53,330
<font color="#CCCCCC">interesting about</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> so going</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to</font>

1073
00:39:49,670 --> 00:39:55,880
the comment<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I had</font><font color="#CCCCCC"> about how icmpv6</font>

1074
00:39:53,330 --> 00:40:00,259
<font color="#CCCCCC">there that</font><font color="#E5E5E5"> Mark had about icmpv6 being a</font>

1075
00:39:55,880 --> 00:40:01,910
critical protocol now<font color="#E5E5E5"> so there was</font><font color="#CCCCCC"> one</font>

1076
00:40:00,260 --> 00:40:04,790
day that<font color="#CCCCCC"> mark sitting at his apartment</font>

1077
00:40:01,910 --> 00:40:07,160
<font color="#CCCCCC">I'm sitting at mine and he</font><font color="#E5E5E5"> was able</font><font color="#CCCCCC"> to</font>

1078
00:40:04,790 --> 00:40:07,940
ping in my chromecast

1079
00:40:07,160 --> 00:40:11,270
from

1080
00:40:07,940 --> 00:40:13,010
<font color="#E5E5E5">his</font><font color="#CCCCCC"> network right I wasn't able to so</font><font color="#E5E5E5"> we</font>

1081
00:40:11,270 --> 00:40:15,560
could also pick my laptop could<font color="#CCCCCC"> ping</font><font color="#E5E5E5"> all</font>

1082
00:40:13,010 --> 00:40:17,960
the devices on my network<font color="#CCCCCC"> but could</font><font color="#E5E5E5"> only</font>

1083
00:40:15,560 --> 00:40:21,170
do TCP connect scans<font color="#CCCCCC"> - I don't even</font>

1084
00:40:17,960 --> 00:40:22,910
<font color="#CCCCCC">think you can</font><font color="#E5E5E5"> do it - Maya</font><font color="#CCCCCC"> I'm all so</font><font color="#E5E5E5"> so</font>

1085
00:40:21,170 --> 00:40:25,490
could still get<font color="#E5E5E5"> the pings through but</font>

1086
00:40:22,910 --> 00:40:28,549
<font color="#E5E5E5">TCP UDP were being correctly firewall at</font>

1087
00:40:25,490 --> 00:40:30,080
all<font color="#E5E5E5"> so I that will be another kind</font><font color="#CCCCCC"> of</font>

1088
00:40:28,550 --> 00:40:31,820
interesting<font color="#E5E5E5"> iteration of this work is</font>

1089
00:40:30,080 --> 00:40:34,009
you know with how much we were able<font color="#CCCCCC"> to</font>

1090
00:40:31,820 --> 00:40:36,620
see via ICMP what can we what<font color="#E5E5E5"> can we</font>

1091
00:40:34,010 --> 00:40:42,800
then do with it<font color="#CCCCCC"> I</font><font color="#E5E5E5"> believe that the</font>

1092
00:40:36,620 --> 00:40:45,770
icmpv6<font color="#CCCCCC"> parsing stack</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> linux</font><font color="#E5E5E5"> is new</font>

1093
00:40:42,800 --> 00:40:48,680
well not not not new<font color="#E5E5E5"> but is not the same</font>

1094
00:40:45,770 --> 00:40:49,880
as ICMP so if there are any sort<font color="#E5E5E5"> of</font>

1095
00:40:48,680 --> 00:40:53,680
memory<font color="#E5E5E5"> corruption exploits or</font>

1096
00:40:49,880 --> 00:40:55,580
vulnerabilities<font color="#E5E5E5"> that</font><font color="#CCCCCC"> could target that</font><font color="#E5E5E5"> I</font>

1097
00:40:53,680 --> 00:40:59,480
think they<font color="#E5E5E5"> probably have a pretty wide</font>

1098
00:40:55,580 --> 00:41:04,900
reach<font color="#E5E5E5"> anyways our tool set</font><font color="#CCCCCC"> is called</font>

1099
00:40:59,480 --> 00:41:08,210
ipv6<font color="#CCCCCC"> 66 as I said before our 0.2 release</font>

1100
00:41:04,900 --> 00:41:10,130
<font color="#E5E5E5">which had a bunch of bunch of</font><font color="#CCCCCC"> feedback</font>

1101
00:41:08,210 --> 00:41:13,490
from<font color="#CCCCCC"> HD more so many many thanks to him</font>

1102
00:41:10,130 --> 00:41:14,990
<font color="#CCCCCC">it was like hey</font><font color="#E5E5E5"> this tool is cool but</font>

1103
00:41:13,490 --> 00:41:17,689
you should package it up so it's not<font color="#E5E5E5"> a</font>

1104
00:41:14,990 --> 00:41:20,209
gigantic pain to install so now if you

1105
00:41:17,690 --> 00:41:22,040
have<font color="#CCCCCC"> golang 1.11 or a</font><font color="#E5E5E5"> grater on</font><font color="#CCCCCC"> a</font>

1106
00:41:20,210 --> 00:41:24,650
machine<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> all you</font><font color="#CCCCCC"> have to do and</font>

1107
00:41:22,040 --> 00:41:27,710
then so long as go<font color="#CCCCCC"> past</font><font color="#E5E5E5"> slash bin is in</font>

1108
00:41:24,650 --> 00:41:31,310
your path then you can<font color="#E5E5E5"> just run it it</font>

1109
00:41:27,710 --> 00:41:33,800
also has<font color="#E5E5E5"> its ICMP scanning</font><font color="#CCCCCC"> built-in it</font>

1110
00:41:31,310 --> 00:41:35,270
only supports<font color="#E5E5E5"> Linux right now we don't</font>

1111
00:41:33,800 --> 00:41:37,700
<font color="#E5E5E5">really have any plans to put on anything</font>

1112
00:41:35,270 --> 00:41:38,810
<font color="#E5E5E5">else because it's apparently</font><font color="#CCCCCC"> a gigantic</font>

1113
00:41:37,700 --> 00:41:40,580
<font color="#E5E5E5">pain to keep these sort of like</font>

1114
00:41:38,810 --> 00:41:42,290
guaranteed speed<font color="#E5E5E5"> throughputs across</font>

1115
00:41:40,580 --> 00:41:44,180
different<font color="#CCCCCC"> operating systems</font><font color="#E5E5E5"> but yeah</font>

1116
00:41:42,290 --> 00:41:46,370
please<font color="#CCCCCC"> please give it</font><font color="#E5E5E5"> away give</font><font color="#CCCCCC"> it a</font>

1117
00:41:44,180 --> 00:41:49,509
<font color="#CCCCCC">whirl see what you think</font><font color="#E5E5E5"> you know as I</font>

1118
00:41:46,370 --> 00:41:52,220
<font color="#CCCCCC">said</font><font color="#E5E5E5"> before 0.3 we focused on candidate</font>

1119
00:41:49,510 --> 00:41:54,740
address generation and then discovery<font color="#E5E5E5"> so</font>

1120
00:41:52,220 --> 00:41:56,299
we have the new model as well<font color="#E5E5E5"> as once we</font>

1121
00:41:54,740 --> 00:41:58,430
find initial<font color="#E5E5E5"> landing points we kind of</font>

1122
00:41:56,300 --> 00:41:59,780
start a search<font color="#CCCCCC"> around that</font><font color="#E5E5E5"> space we</font>

1123
00:41:58,430 --> 00:42:02,390
still have<font color="#E5E5E5"> plenty of other things we'd</font>

1124
00:41:59,780 --> 00:42:05,240
like<font color="#CCCCCC"> to add</font><font color="#E5E5E5"> but we're pretty</font><font color="#CCCCCC"> happy with</font>

1125
00:42:02,390 --> 00:42:06,680
<font color="#CCCCCC">it at this</font><font color="#E5E5E5"> point</font><font color="#CCCCCC"> so there's</font><font color="#E5E5E5"> seven</font>

1126
00:42:05,240 --> 00:42:09,890
<font color="#E5E5E5">different utilities that come packaged</font>

1127
00:42:06,680 --> 00:42:11,180
with<font color="#CCCCCC"> the tool the first one is the one</font>

1128
00:42:09,890 --> 00:42:12,560
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I think would probably the most</font>

1129
00:42:11,180 --> 00:42:14,240
<font color="#CCCCCC">interesting to folks here and that's</font>

1130
00:42:12,560 --> 00:42:16,190
<font color="#E5E5E5">just the discovery scan that we've been</font>

1131
00:42:14,240 --> 00:42:18,709
<font color="#E5E5E5">talking about this whole</font><font color="#CCCCCC"> time we're like</font>

1132
00:42:16,190 --> 00:42:20,420
<font color="#E5E5E5">little if you do go get blah honey can</font>

1133
00:42:18,710 --> 00:42:21,440
just<font color="#E5E5E5"> do ipv6 scan discovery it will</font>

1134
00:42:20,420 --> 00:42:22,940
start

1135
00:42:21,440 --> 00:42:26,450
and it will<font color="#E5E5E5"> start going across the</font>

1136
00:42:22,940 --> 00:42:28,310
<font color="#E5E5E5">global address</font><font color="#CCCCCC"> space we have scan alias</font>

1137
00:42:26,450 --> 00:42:29,720
<font color="#CCCCCC">so if there's a</font><font color="#E5E5E5"> particular ipv6 range</font>

1138
00:42:28,310 --> 00:42:31,820
that you're looking at<font color="#E5E5E5"> that you want to</font>

1139
00:42:29,720 --> 00:42:34,279
see is this ipv6 range aliased or not

1140
00:42:31,820 --> 00:42:35,930
it's a way to basically<font color="#E5E5E5"> it carves out</font>

1141
00:42:34,280 --> 00:42:37,160
that one little<font color="#E5E5E5"> kind of alias detection</font>

1142
00:42:35,930 --> 00:42:40,100
<font color="#CCCCCC">thing so you</font><font color="#E5E5E5"> can target it at one</font>

1143
00:42:37,160 --> 00:42:41,060
specific<font color="#CCCCCC"> network</font><font color="#E5E5E5"> generated addresses I</font>

1144
00:42:40,100 --> 00:42:44,930
think this is another one<font color="#CCCCCC"> that people</font>

1145
00:42:41,060 --> 00:42:47,090
<font color="#E5E5E5">might be</font><font color="#CCCCCC"> interested in</font><font color="#E5E5E5"> and pull it down</font>

1146
00:42:44,930 --> 00:42:48,500
ipv6<font color="#E5E5E5"> generate addresses and then give it</font>

1147
00:42:47,090 --> 00:42:50,240
<font color="#E5E5E5">an output file path and it'll generate</font>

1148
00:42:48,500 --> 00:42:52,640
<font color="#CCCCCC">10</font><font color="#E5E5E5"> million</font><font color="#CCCCCC"> addresses and write it's a</font>

1149
00:42:50,240 --> 00:42:55,520
file path based on the model<font color="#E5E5E5"> that we</font>

1150
00:42:52,640 --> 00:42:56,930
package<font color="#E5E5E5"> up with it if you want to</font>

1151
00:42:55,520 --> 00:42:58,490
generate<font color="#E5E5E5"> your own model we have that</font>

1152
00:42:56,930 --> 00:43:00,259
utility as<font color="#CCCCCC"> well if you have a big list</font>

1153
00:42:58,490 --> 00:43:04,700
<font color="#E5E5E5">of ipv6 addresses you can throw it at</font>

1154
00:43:00,260 --> 00:43:07,430
<font color="#E5E5E5">this it is a memory hog</font><font color="#CCCCCC"> so on my on my</font>

1155
00:43:04,700 --> 00:43:10,640
<font color="#CCCCCC">macbook pro</font><font color="#E5E5E5"> that has like 16 gigs of</font>

1156
00:43:07,430 --> 00:43:12,919
<font color="#E5E5E5">memory</font><font color="#CCCCCC"> I cannot build</font><font color="#E5E5E5"> a model with all</font>

1157
00:43:10,640 --> 00:43:14,450
<font color="#E5E5E5">15 million</font><font color="#CCCCCC"> addresses I have to remove a</font>

1158
00:43:12,920 --> 00:43:16,670
<font color="#E5E5E5">bunch of stuff I can</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> with about nine</font>

1159
00:43:14,450 --> 00:43:19,069
<font color="#E5E5E5">point five mil so if you have a big</font>

1160
00:43:16,670 --> 00:43:21,230
beefy memory box then like<font color="#CCCCCC"> it'll</font>

1161
00:43:19,070 --> 00:43:22,430
probably<font color="#E5E5E5"> work just fine</font><font color="#CCCCCC"> but also</font><font color="#E5E5E5"> the</font>

1162
00:43:21,230 --> 00:43:24,170
<font color="#E5E5E5">model that we were talking about before</font>

1163
00:43:22,430 --> 00:43:26,779
<font color="#E5E5E5">that has given us million of millions of</font>

1164
00:43:24,170 --> 00:43:28,720
addresses since this morning<font color="#CCCCCC"> came from</font>

1165
00:43:26,780 --> 00:43:30,710
<font color="#CCCCCC">nine point eight million addresses oh</font>

1166
00:43:28,720 --> 00:43:35,930
and actually<font color="#E5E5E5"> one thing that's kind of</font>

1167
00:43:30,710 --> 00:43:38,300
<font color="#E5E5E5">cool about that is we see a fall off to</font>

1168
00:43:35,930 --> 00:43:41,870
some extent with how many<font color="#CCCCCC"> addresses it</font>

1169
00:43:38,300 --> 00:43:43,160
can find<font color="#E5E5E5"> on a per model basis so like we</font>

1170
00:43:41,870 --> 00:43:45,140
<font color="#E5E5E5">were kind of conceptually thinking of it</font>

1171
00:43:43,160 --> 00:43:46,490
as we're building this<font color="#E5E5E5"> model around all</font>

1172
00:43:45,140 --> 00:43:48,830
these clusters and<font color="#E5E5E5"> you have this</font><font color="#CCCCCC"> kind of</font>

1173
00:43:46,490 --> 00:43:50,540
<font color="#E5E5E5">like dense crust</font><font color="#CCCCCC"> around these clusters</font>

1174
00:43:48,830 --> 00:43:52,580
<font color="#E5E5E5">of IP</font><font color="#CCCCCC"> addresses that</font><font color="#E5E5E5"> haven't</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> seen</font>

1175
00:43:50,540 --> 00:43:53,870
before<font color="#CCCCCC"> and</font><font color="#E5E5E5"> once you exhaust that crust</font>

1176
00:43:52,580 --> 00:43:55,870
kind of your hit rate goes down

1177
00:43:53,870 --> 00:43:58,549
considerably

1178
00:43:55,870 --> 00:44:00,380
so we built<font color="#CCCCCC"> another model this morning</font>

1179
00:43:58,550 --> 00:44:03,410
with more<font color="#CCCCCC"> addresses and then</font><font color="#E5E5E5"> rent</font>

1180
00:44:00,380 --> 00:44:04,880
scanning on it<font color="#E5E5E5"> and then check</font><font color="#CCCCCC"> to see</font>

1181
00:44:03,410 --> 00:44:06,350
like hey is<font color="#E5E5E5"> there much overlap in the</font>

1182
00:44:04,880 --> 00:44:10,340
addresses these<font color="#E5E5E5"> two models are finding</font>

1183
00:44:06,350 --> 00:44:12,470
and there was like less than<font color="#CCCCCC"> 0.5</font><font color="#E5E5E5"> percent</font>

1184
00:44:10,340 --> 00:44:14,450
overlap<font color="#CCCCCC"> suggests that we can continually</font>

1185
00:44:12,470 --> 00:44:17,330
<font color="#CCCCCC">generate new models as the existing ones</font>

1186
00:44:14,450 --> 00:44:21,049
get exhausted and hopefully<font color="#E5E5E5"> continue</font>

1187
00:44:17,330 --> 00:44:22,819
this<font color="#E5E5E5"> process</font><font color="#CCCCCC"> so generate</font><font color="#E5E5E5"> blacklist</font><font color="#CCCCCC"> yeah</font>

1188
00:44:21,050 --> 00:44:24,740
if you have IP addresses<font color="#CCCCCC"> that you don't</font>

1189
00:44:22,820 --> 00:44:26,630
want to scan you<font color="#CCCCCC"> can throw I can do so</font>

1190
00:44:24,740 --> 00:44:28,069
excited<font color="#E5E5E5"> jizz to this tool and</font><font color="#CCCCCC"> it will</font>

1191
00:44:26,630 --> 00:44:31,490
add them to the blacklist<font color="#CCCCCC"> that it</font>

1192
00:44:28,070 --> 00:44:33,080
doesn't scan clean<font color="#E5E5E5"> will take a list of</font>

1193
00:44:31,490 --> 00:44:35,270
<font color="#E5E5E5">ipv6 addresses and remove all the</font>

1194
00:44:33,080 --> 00:44:36,680
addresses<font color="#E5E5E5"> in it from the blacklist</font><font color="#CCCCCC"> that</font>

1195
00:44:35,270 --> 00:44:39,050
is either packaged up or the one<font color="#E5E5E5"> that</font>

1196
00:44:36,680 --> 00:44:41,509
has<font color="#E5E5E5"> been added to through through your</font>

1197
00:44:39,050 --> 00:44:43,010
use of<font color="#E5E5E5"> the tool and then convert is kind</font>

1198
00:44:41,510 --> 00:44:45,260
of<font color="#E5E5E5"> a tool that we use mostly for</font>

1199
00:44:43,010 --> 00:44:47,060
<font color="#E5E5E5">converting files of ipv6 addresses from</font>

1200
00:44:45,260 --> 00:44:52,550
<font color="#E5E5E5">one format to</font><font color="#CCCCCC"> another whether</font><font color="#E5E5E5"> it's text</font>

1201
00:44:47,060 --> 00:44:56,420
or binary or hex here's a<font color="#CCCCCC"> zelda</font><font color="#E5E5E5"> and some</font>

1202
00:44:52,550 --> 00:44:59,570
<font color="#E5E5E5">links and I'll wrap it up with a</font>

1203
00:44:56,420 --> 00:45:01,280
<font color="#E5E5E5">conclusion supposed to wrap up we</font>

1204
00:44:59,570 --> 00:45:02,990
started with some background<font color="#E5E5E5"> on our</font>

1205
00:45:01,280 --> 00:45:05,180
interest<font color="#E5E5E5"> for getting into the space and</font>

1206
00:45:02,990 --> 00:45:06,799
some of the things<font color="#CCCCCC"> we tried with varying</font>

1207
00:45:05,180 --> 00:45:09,290
<font color="#CCCCCC">degrees of</font><font color="#E5E5E5"> success for discovering</font>

1208
00:45:06,800 --> 00:45:11,090
addresses and finally we<font color="#CCCCCC"> decided to be</font>

1209
00:45:09,290 --> 00:45:13,279
less dumb and that<font color="#CCCCCC"> worked</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> pretty</font>

1210
00:45:11,090 --> 00:45:15,580
well<font color="#CCCCCC"> we've</font><font color="#E5E5E5"> shown</font><font color="#CCCCCC"> that we were able to</font>

1211
00:45:13,280 --> 00:45:18,350
<font color="#E5E5E5">generate a significant amount of</font>

1212
00:45:15,580 --> 00:45:20,540
previously<font color="#E5E5E5"> unseen to us ipv6 addresses</font>

1213
00:45:18,350 --> 00:45:22,640
with live posts and we have our<font color="#E5E5E5"> toolset</font>

1214
00:45:20,540 --> 00:45:24,800
<font color="#CCCCCC">ipv6 66 and we encourage you all to take</font>

1215
00:45:22,640 --> 00:45:27,890
a<font color="#E5E5E5"> look at it and now we have time for</font>

1216
00:45:24,800 --> 00:45:29,510
some<font color="#CCCCCC"> Q&A and here are a few</font><font color="#E5E5E5"> links we'll</font>

1217
00:45:27,890 --> 00:45:31,819
leave up for a minute<font color="#E5E5E5"> of some related</font>

1218
00:45:29,510 --> 00:45:33,590
work which we<font color="#E5E5E5"> definitely take recommend</font>

1219
00:45:31,820 --> 00:45:39,080
take a look at do you want to show the

1220
00:45:33,590 --> 00:45:41,000
what the current count<font color="#E5E5E5"> is up to yes</font>

1221
00:45:39,080 --> 00:45:42,799
we've had this<font color="#E5E5E5"> running so we were at one</font>

1222
00:45:41,000 --> 00:45:45,730
<font color="#CCCCCC">point</font><font color="#E5E5E5"> five seven million after the first</font>

1223
00:45:42,800 --> 00:45:49,180
hour after<font color="#E5E5E5"> the second hour</font><font color="#CCCCCC"> we were at</font>

1224
00:45:45,730 --> 00:45:52,400
<font color="#CCCCCC">2.6 million</font><font color="#E5E5E5"> and we last checked after</font>

1225
00:45:49,180 --> 00:45:54,710
<font color="#E5E5E5">say four</font><font color="#CCCCCC"> hours in and about five million</font>

1226
00:45:52,400 --> 00:45:57,770
addresses so it's just<font color="#CCCCCC"> humming</font><font color="#E5E5E5"> along so</font>

1227
00:45:54,710 --> 00:45:59,690
yeah<font color="#E5E5E5"> so from like the entire so we went</font>

1228
00:45:57,770 --> 00:46:03,680
<font color="#E5E5E5">to as many different</font><font color="#CCCCCC"> places as we could</font>

1229
00:45:59,690 --> 00:46:05,570
to get public ipv6<font color="#CCCCCC"> datasets</font><font color="#E5E5E5"> and we did</font>

1230
00:46:03,680 --> 00:46:06,830
this<font color="#E5E5E5"> about a year</font><font color="#CCCCCC"> ago now so I'm</font><font color="#E5E5E5"> sure a</font>

1231
00:46:05,570 --> 00:46:08,810
<font color="#E5E5E5">bunch of it is outdated I bet there's</font>

1232
00:46:06,830 --> 00:46:10,609
more<font color="#E5E5E5"> out</font><font color="#CCCCCC"> there but the corpus that</font><font color="#E5E5E5"> we're</font>

1233
00:46:08,810 --> 00:46:12,920
<font color="#CCCCCC">building off of is 15 million large and</font>

1234
00:46:10,609 --> 00:46:15,440
in the span<font color="#CCCCCC"> of</font><font color="#E5E5E5"> four hours</font><font color="#CCCCCC"> we've been</font>

1235
00:46:12,920 --> 00:46:17,540
able to get a third of<font color="#E5E5E5"> the way there</font>

1236
00:46:15,440 --> 00:46:19,990
<font color="#E5E5E5">with completely new addresses that we</font>

1237
00:46:17,540 --> 00:46:19,990
haven't seen<font color="#E5E5E5"> before</font>

1238
00:46:21,910 --> 00:46:23,970
<font color="#E5E5E5">you</font>

