1
00:00:01,020 --> 00:00:06,180
all right so<font color="#E5E5E5"> I'm a claimant</font><font color="#CCCCCC"> I work at a</font>

2
00:00:04,260 --> 00:00:08,580
French company called a prophetess<font color="#CCCCCC"> and</font>

3
00:00:06,180 --> 00:00:12,239
indeed I'm going to talk about abusing

4
00:00:08,580 --> 00:00:17,009
<font color="#E5E5E5">privilege file operations for privilege</font>

5
00:00:12,240 --> 00:00:19,859
escalation<font color="#E5E5E5"> on Windows so privilege file</font>

6
00:00:17,010 --> 00:00:21,960
operation<font color="#E5E5E5"> bugs are when you have</font><font color="#CCCCCC"> a</font>

7
00:00:19,859 --> 00:00:24,689
trivial operation that are performed by

8
00:00:21,960 --> 00:00:28,289
<font color="#CCCCCC">a</font><font color="#E5E5E5"> sorry Fido direction that I performed</font>

9
00:00:24,689 --> 00:00:30,410
by<font color="#CCCCCC"> privilege</font><font color="#E5E5E5"> processes and if an</font>

10
00:00:28,289 --> 00:00:34,530
unprivileged user of some<font color="#CCCCCC"> software</font>

11
00:00:30,410 --> 00:00:37,440
<font color="#E5E5E5">control over this file then you</font><font color="#CCCCCC"> may have</font>

12
00:00:34,530 --> 00:00:40,950
a problem some example that are<font color="#E5E5E5"> well</font>

13
00:00:37,440 --> 00:00:42,959
<font color="#E5E5E5">known</font><font color="#CCCCCC"> to pen testers are here for</font>

14
00:00:40,950 --> 00:00:45,600
instance if you have if<font color="#E5E5E5"> you can if you</font>

15
00:00:42,960 --> 00:00:48,900
have a<font color="#E5E5E5"> right access to an executive file</font>

16
00:00:45,600 --> 00:00:51,180
that is<font color="#E5E5E5"> used by a service a pretty</font>

17
00:00:48,900 --> 00:00:56,940
<font color="#E5E5E5">little service then obviously you</font><font color="#CCCCCC"> can</font>

18
00:00:51,180 --> 00:00:58,920
get your payload to to be<font color="#CCCCCC"> loaded</font><font color="#E5E5E5"> are</font>

19
00:00:56,940 --> 00:01:01,320
confused by that service by<font color="#CCCCCC"> your</font><font color="#E5E5E5"> just</font>

20
00:00:58,920 --> 00:01:04,019
<font color="#CCCCCC">overwriting</font><font color="#E5E5E5"> the exit file if other</font>

21
00:01:01,320 --> 00:01:06,960
<font color="#E5E5E5">service is not yet running we're going</font>

22
00:01:04,019 --> 00:01:09,509
<font color="#CCCCCC">to see some other example of this type</font>

23
00:01:06,960 --> 00:01:12,538
<font color="#E5E5E5">of</font><font color="#CCCCCC"> bug and because these are logic</font><font color="#E5E5E5"> bugs</font>

24
00:01:09,509 --> 00:01:14,789
<font color="#E5E5E5">they're usually very stable</font><font color="#CCCCCC"> there is</font><font color="#E5E5E5"> no</font>

25
00:01:12,539 --> 00:01:18,270
memory corruption involved and they

26
00:01:14,789 --> 00:01:20,549
often<font color="#E5E5E5"> survive code refactor refactoring</font>

27
00:01:18,270 --> 00:01:23,009
so as long<font color="#E5E5E5"> as the file logic by</font>

28
00:01:20,549 --> 00:01:25,109
manipulation logic does not<font color="#E5E5E5"> change you</font>

29
00:01:23,009 --> 00:01:30,090
can find the same bug in a<font color="#E5E5E5"> several</font>

30
00:01:25,109 --> 00:01:32,369
versions<font color="#E5E5E5"> of the same product and the</font>

31
00:01:30,090 --> 00:01:33,990
thing is to<font color="#E5E5E5"> find this book artist the</font>

32
00:01:32,369 --> 00:01:35,579
<font color="#CCCCCC">low-hanging one most of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> time we</font>

33
00:01:33,990 --> 00:01:38,699
don't<font color="#CCCCCC"> have to start the tedious</font><font color="#E5E5E5"> process</font>

34
00:01:35,579 --> 00:01:42,538
of reverse<font color="#CCCCCC"> engineering we just have to</font>

35
00:01:38,700 --> 00:01:45,299
fire<font color="#CCCCCC"> our five favorite</font><font color="#E5E5E5"> process monitor</font>

36
00:01:42,539 --> 00:01:48,600
or a debugger<font color="#E5E5E5"> and start looking at what</font>

37
00:01:45,299 --> 00:01:51,539
<font color="#E5E5E5">the privileged process are doing</font><font color="#CCCCCC"> with</font>

38
00:01:48,600 --> 00:01:55,229
our files<font color="#E5E5E5"> and obviously we'll</font><font color="#CCCCCC"> need a way</font>

39
00:01:51,539 --> 00:01:58,200
<font color="#CCCCCC">to also check</font><font color="#E5E5E5"> ACL on</font><font color="#CCCCCC"> the file so just</font>

40
00:01:55,229 --> 00:01:59,999
<font color="#E5E5E5">explore dot exe is a fine but you can</font>

41
00:01:58,200 --> 00:02:03,780
also use<font color="#CCCCCC"> as access check</font><font color="#E5E5E5"> for instance</font>

42
00:01:59,999 --> 00:02:06,689
and the techniques and<font color="#E5E5E5"> tools that we are</font>

43
00:02:03,780 --> 00:02:10,320
<font color="#CCCCCC">going to use to exploit</font><font color="#E5E5E5"> these types of</font>

44
00:02:06,689 --> 00:02:14,459
this type<font color="#CCCCCC"> of bugs were published by</font>

45
00:02:10,320 --> 00:02:18,329
<font color="#E5E5E5">James for show</font><font color="#CCCCCC"> he'd in numerous</font>

46
00:02:14,459 --> 00:02:20,370
<font color="#CCCCCC">really article and conferences so I</font>

47
00:02:18,330 --> 00:02:22,379
would encourage<font color="#CCCCCC"> to watch his</font><font color="#E5E5E5"> individual</font>

48
00:02:20,370 --> 00:02:25,379
<font color="#E5E5E5">talk for instance and he also</font>

49
00:02:22,379 --> 00:02:29,190
implemented them in a<font color="#E5E5E5"> toolkit and a</font>

50
00:02:25,379 --> 00:02:32,099
library<font color="#E5E5E5"> that we can use when the built</font>

51
00:02:29,190 --> 00:02:37,079
<font color="#E5E5E5">in tools do not exactly</font><font color="#CCCCCC"> fit what</font><font color="#E5E5E5"> we need</font>

52
00:02:32,099 --> 00:02:39,450
<font color="#E5E5E5">and these techniques and tools made in</font>

53
00:02:37,079 --> 00:02:42,360
my opinion<font color="#CCCCCC"> fights with this type of file</font>

54
00:02:39,450 --> 00:02:44,099
system attacks a kind of a new<font color="#E5E5E5"> kind of</font>

55
00:02:42,360 --> 00:02:48,150
<font color="#E5E5E5">low-hanging fruit for privilege</font>

56
00:02:44,099 --> 00:02:51,140
<font color="#E5E5E5">escalation so the first technique is a</font>

57
00:02:48,150 --> 00:02:53,400
simple<font color="#CCCCCC"> NTFS moon point or a junction</font>

58
00:02:51,140 --> 00:02:55,410
which basically<font color="#E5E5E5"> works are the</font>

59
00:02:53,400 --> 00:02:58,890
redirection<font color="#CCCCCC"> from one directory to</font>

60
00:02:55,410 --> 00:03:02,280
another<font color="#E5E5E5"> you can think of it as</font><font color="#CCCCCC"> the kind</font>

61
00:02:58,890 --> 00:03:05,339
<font color="#E5E5E5">of symbolic</font><font color="#CCCCCC"> link that</font><font color="#E5E5E5"> only works on</font>

62
00:03:02,280 --> 00:03:07,709
directories so here for<font color="#CCCCCC"> instance if</font><font color="#E5E5E5"> I</font>

63
00:03:05,340 --> 00:03:10,500
have a<font color="#CCCCCC"> privileged application</font><font color="#E5E5E5"> I tried to</font>

64
00:03:07,709 --> 00:03:15,299
access<font color="#E5E5E5"> CDR file dot exe it will actually</font>

65
00:03:10,500 --> 00:03:17,700
access<font color="#E5E5E5"> the</font><font color="#CCCCCC"> author file dot exe</font><font color="#E5E5E5"> and while</font>

66
00:03:15,299 --> 00:03:21,569
and privileged users on Windows system

67
00:03:17,700 --> 00:03:23,459
<font color="#E5E5E5">cannot create a file system symbolic</font>

68
00:03:21,569 --> 00:03:24,599
<font color="#E5E5E5">link there is a specific privilege for</font>

69
00:03:23,459 --> 00:03:27,359
that that is only<font color="#CCCCCC"> granted to</font>

70
00:03:24,599 --> 00:03:29,910
administrators by default they can

71
00:03:27,359 --> 00:03:34,049
create symbolic<font color="#E5E5E5"> links in the object</font>

72
00:03:29,910 --> 00:03:37,109
manager namespace<font color="#E5E5E5"> and if we combine and</font>

73
00:03:34,049 --> 00:03:40,049
this symbolic link can point to files<font color="#CCCCCC"> so</font>

74
00:03:37,109 --> 00:03:44,489
if we combine<font color="#E5E5E5"> this with a junction that</font>

75
00:03:40,049 --> 00:03:47,579
points to an object directory in which

76
00:03:44,489 --> 00:03:53,040
we created<font color="#E5E5E5"> a symbolic link we</font><font color="#CCCCCC"> can have</font>

77
00:03:47,579 --> 00:03:55,319
<font color="#CCCCCC">something that works</font><font color="#E5E5E5"> similarly as as a</font>

78
00:03:53,040 --> 00:03:58,918
symbolic link so here if the application

79
00:03:55,319 --> 00:04:04,010
tries to access<font color="#E5E5E5"> CDR file dot txt it will</font>

80
00:03:58,919 --> 00:04:04,010
actually<font color="#E5E5E5"> open see other stuff dot any</font>

81
00:04:04,430 --> 00:04:11,609
and to exploit arbitrary file right but

82
00:04:08,209 --> 00:04:14,250
we can of course<font color="#E5E5E5"> replace the existing</font>

83
00:04:11,609 --> 00:04:20,130
<font color="#E5E5E5">binary or config file if we can</font>

84
00:04:14,250 --> 00:04:23,760
overwrite them or do a basic DLL hijack

85
00:04:20,130 --> 00:04:28,080
and drop<font color="#CCCCCC"> a DLL</font><font color="#E5E5E5"> if of course we can</font>

86
00:04:23,760 --> 00:04:32,520
<font color="#E5E5E5">restart the the process one example</font>

87
00:04:28,080 --> 00:04:35,609
the<font color="#E5E5E5"> 64 look that</font><font color="#CCCCCC"> DLL</font><font color="#E5E5E5"> because this DLL</font>

88
00:04:32,520 --> 00:04:37,740
<font color="#CCCCCC">does not exist by default on Windows</font>

89
00:04:35,610 --> 00:04:40,919
system but if it does exist<font color="#E5E5E5"> in the</font>

90
00:04:37,740 --> 00:04:46,139
<font color="#CCCCCC">system 32 directory</font><font color="#E5E5E5"> it will get loaded</font>

91
00:04:40,919 --> 00:04:48,990
in every<font color="#CCCCCC"> 32-bit processes started so if</font>

92
00:04:46,139 --> 00:04:51,930
you have a<font color="#E5E5E5"> privilege</font><font color="#CCCCCC"> so 32-bit process</font>

93
00:04:48,990 --> 00:04:55,789
<font color="#E5E5E5">this is a nice one you can try to drop</font>

94
00:04:51,930 --> 00:04:59,849
on the<font color="#E5E5E5"> disk</font><font color="#CCCCCC"> to get code execution</font><font color="#E5E5E5"> and</font>

95
00:04:55,789 --> 00:05:02,669
another one is a another treat<font color="#E5E5E5"> by James</font>

96
00:04:59,849 --> 00:05:07,580
<font color="#E5E5E5">which is using the diagnostic tab</font>

97
00:05:02,669 --> 00:05:11,250
service<font color="#E5E5E5"> that ran that as a system</font><font color="#CCCCCC"> and</font>

98
00:05:07,580 --> 00:05:14,580
using specific calls this service can be

99
00:05:11,250 --> 00:05:18,330
made to load a file with any extension

100
00:05:14,580 --> 00:05:21,750
so for instance dot txt file<font color="#CCCCCC"> as if it</font>

101
00:05:18,330 --> 00:05:24,448
were<font color="#E5E5E5"> a DLL</font><font color="#CCCCCC"> as long as that file is in</font>

102
00:05:21,750 --> 00:05:27,210
<font color="#E5E5E5">system 32 so we will use the bugs to</font>

103
00:05:24,449 --> 00:05:30,000
drop files in system 32 and then use

104
00:05:27,210 --> 00:05:35,460
this trick to<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> privileged service</font>

105
00:05:30,000 --> 00:05:37,889
load our file as if it's a DLL typical

106
00:05:35,460 --> 00:05:39,989
example<font color="#CCCCCC"> for this type of</font><font color="#E5E5E5"> bug is a</font>

107
00:05:37,889 --> 00:05:43,830
<font color="#E5E5E5">arbitrary file right in the logging</font>

108
00:05:39,990 --> 00:05:46,589
picture of a project and this needs

109
00:05:43,830 --> 00:05:49,560
<font color="#E5E5E5">three ingredients the first is a log</font>

110
00:05:46,589 --> 00:05:52,699
file with permissive<font color="#E5E5E5"> ACL so for instance</font>

111
00:05:49,560 --> 00:05:57,000
here everyone has full control<font color="#E5E5E5"> over the</font>

112
00:05:52,699 --> 00:05:59,009
<font color="#CCCCCC">created log files the second is that the</font>

113
00:05:57,000 --> 00:06:02,610
file<font color="#CCCCCC"> is created in a user writable</font>

114
00:05:59,009 --> 00:06:04,259
location so for instance in<font color="#E5E5E5"> program data</font>

115
00:06:02,610 --> 00:06:06,690
<font color="#E5E5E5">this directory is really interesting</font>

116
00:06:04,259 --> 00:06:09,620
because by<font color="#CCCCCC"> default and</font><font color="#E5E5E5"> privileged user</font>

117
00:06:06,690 --> 00:06:15,659
can add create new files and directories

118
00:06:09,620 --> 00:06:19,229
<font color="#E5E5E5">but not modify</font><font color="#CCCCCC"> an existing one</font><font color="#E5E5E5"> so if if</font>

119
00:06:15,659 --> 00:06:21,419
we can use this folder<font color="#CCCCCC"> for instance if</font>

120
00:06:19,229 --> 00:06:23,520
<font color="#E5E5E5">we</font><font color="#CCCCCC"> cannot create a file in this folder</font>

121
00:06:21,419 --> 00:06:26,128
this<font color="#CCCCCC"> will allow us to perform data I</font>

122
00:06:23,520 --> 00:06:28,940
will<font color="#CCCCCC"> as we will see later</font><font color="#E5E5E5"> and the third</font>

123
00:06:26,129 --> 00:06:35,069
ingredient is a<font color="#CCCCCC"> write</font><font color="#E5E5E5"> from a</font><font color="#CCCCCC"> privileged</font>

124
00:06:28,940 --> 00:06:38,009
<font color="#E5E5E5">service or process so to exploit this</font>

125
00:06:35,069 --> 00:06:42,449
type of<font color="#E5E5E5"> bug with the</font><font color="#CCCCCC"> Jakob services for</font>

126
00:06:38,009 --> 00:06:45,259
instance we can delete existing<font color="#CCCCCC"> log</font>

127
00:06:42,449 --> 00:06:48,360
because everyone has<font color="#CCCCCC"> full access to them</font>

128
00:06:45,259 --> 00:06:50,669
replace<font color="#CCCCCC"> because we have write access</font>

129
00:06:48,360 --> 00:06:53,689
with the default rights of program data

130
00:06:50,669 --> 00:06:57,659
sub directories we can replace the logs

131
00:06:53,689 --> 00:07:01,979
<font color="#E5E5E5">directory with a junction that points to</font>

132
00:06:57,659 --> 00:07:05,280
system<font color="#CCCCCC"> 32 so when our service will tried</font>

133
00:07:01,979 --> 00:07:07,919
our product<font color="#E5E5E5"> will try to create the the</font>

134
00:07:05,280 --> 00:07:12,330
log<font color="#E5E5E5"> it will actually create it in system</font>

135
00:07:07,919 --> 00:07:14,938
32<font color="#E5E5E5"> and</font><font color="#CCCCCC"> set the permissive ACL</font><font color="#E5E5E5"> on it and</font>

136
00:07:12,330 --> 00:07:18,210
because<font color="#CCCCCC"> of that permissive ACL we can no</font>

137
00:07:14,939 --> 00:07:24,419
replace the content of the log file with

138
00:07:18,210 --> 00:07:28,049
our<font color="#CCCCCC"> DLL</font><font color="#E5E5E5"> and start the</font><font color="#CCCCCC"> hub service and</font>

139
00:07:24,419 --> 00:07:32,188
have it load<font color="#E5E5E5"> our file and</font><font color="#CCCCCC"> gain</font><font color="#E5E5E5"> system</font>

140
00:07:28,050 --> 00:07:35,039
code execution to do more<font color="#CCCCCC"> generic</font><font color="#E5E5E5"> DLL</font>

141
00:07:32,189 --> 00:07:38,969
<font color="#E5E5E5">hijacking</font><font color="#CCCCCC"> we can do basically the same</font>

142
00:07:35,039 --> 00:07:42,210
thing<font color="#E5E5E5"> except that we replace the log</font>

143
00:07:38,969 --> 00:07:45,240
folder<font color="#E5E5E5"> which turn it into a junction to</font>

144
00:07:42,210 --> 00:07:47,909
the object an object<font color="#E5E5E5"> directory in which</font>

145
00:07:45,240 --> 00:07:50,430
we<font color="#E5E5E5"> create a symbolic link with the same</font>

146
00:07:47,909 --> 00:07:53,490
name as<font color="#E5E5E5"> the file the process is going to</font>

147
00:07:50,430 --> 00:07:56,879
create<font color="#E5E5E5"> that points to the file we</font><font color="#CCCCCC"> want</font>

148
00:07:53,490 --> 00:08:00,839
<font color="#CCCCCC">to create and here we</font><font color="#E5E5E5"> can also have an</font>

149
00:07:56,879 --> 00:08:02,879
<font color="#E5E5E5">arbitrary file name then the project</font>

150
00:08:00,839 --> 00:08:07,409
will follow this<font color="#CCCCCC"> redirections</font>

151
00:08:02,879 --> 00:08:10,830
<font color="#E5E5E5">and create our file and again set a</font>

152
00:08:07,409 --> 00:08:13,110
permissive ACL so that we can override

153
00:08:10,830 --> 00:08:16,349
the the content of the file and then

154
00:08:13,110 --> 00:08:19,349
when our process starts<font color="#E5E5E5"> if we drop the</font>

155
00:08:16,349 --> 00:08:25,580
<font color="#CCCCCC">DLL in the right directory it will</font><font color="#E5E5E5"> load</font>

156
00:08:19,349 --> 00:08:28,830
it and execute<font color="#CCCCCC"> our code</font><font color="#E5E5E5"> so this is the</font>

157
00:08:25,580 --> 00:08:30,948
this pattern is the basic unisexual

158
00:08:28,830 --> 00:08:33,899
implementation of a common need so

159
00:08:30,949 --> 00:08:36,959
multiple component with different access

160
00:08:33,899 --> 00:08:39,599
level that need that<font color="#E5E5E5"> all need</font><font color="#CCCCCC"> rights</font><font color="#E5E5E5"> log</font>

161
00:08:36,958 --> 00:08:41,609
files<font color="#CCCCCC"> and when it's implemented</font><font color="#E5E5E5"> like</font>

162
00:08:39,599 --> 00:08:45,660
this<font color="#E5E5E5"> you get basically an exploitable</font>

163
00:08:41,610 --> 00:08:48,930
condition<font color="#CCCCCC"> and multiple invents instances</font>

164
00:08:45,660 --> 00:08:52,230
of this specific<font color="#CCCCCC"> bug</font><font color="#E5E5E5"> we are found in</font>

165
00:08:48,930 --> 00:08:55,370
multiple<font color="#CCCCCC"> products</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> over</font>

166
00:08:52,230 --> 00:08:55,370
the<font color="#E5E5E5"> last year</font><font color="#CCCCCC"> or so</font>

167
00:08:56,880 --> 00:09:04,010
but in this<font color="#CCCCCC"> example of</font><font color="#E5E5E5"> course we have a</font>

168
00:09:00,660 --> 00:09:07,410
<font color="#E5E5E5">really easy</font><font color="#CCCCCC"> exploitation method because</font>

169
00:09:04,010 --> 00:09:10,080
we<font color="#CCCCCC"> have a permissive SEL that is set on</font>

170
00:09:07,410 --> 00:09:13,770
<font color="#CCCCCC">the created file so it's quite</font><font color="#E5E5E5"> easy to</font>

171
00:09:10,080 --> 00:09:16,320
see<font color="#E5E5E5"> how we can get right access to</font><font color="#CCCCCC"> the</font>

172
00:09:13,770 --> 00:09:19,680
<font color="#E5E5E5">file but for the general case for</font>

173
00:09:16,320 --> 00:09:23,459
<font color="#CCCCCC">instance</font><font color="#E5E5E5"> if we drop a file in system 32</font>

174
00:09:19,680 --> 00:09:26,969
<font color="#E5E5E5">it will inherit the the permission from</font>

175
00:09:23,459 --> 00:09:29,310
the parent folder<font color="#CCCCCC"> so we won't be</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to</font>

176
00:09:26,970 --> 00:09:34,440
modify<font color="#E5E5E5"> the file and put our</font><font color="#CCCCCC"> pillow</font>

177
00:09:29,310 --> 00:09:36,719
<font color="#CCCCCC">within it so what</font><font color="#E5E5E5"> we can do is to target</font>

178
00:09:34,440 --> 00:09:41,610
<font color="#CCCCCC">a</font><font color="#E5E5E5"> different operation so staying with</font>

179
00:09:36,720 --> 00:09:43,440
<font color="#E5E5E5">our log file example we can target the</font>

180
00:09:41,610 --> 00:09:46,560
log file rotation<font color="#E5E5E5"> maybe the project</font><font color="#CCCCCC"> has</font>

181
00:09:43,440 --> 00:09:49,920
a rotation feature that we can abuse<font color="#CCCCCC"> it</font>

182
00:09:46,560 --> 00:09:52,020
will for instance rename<font color="#E5E5E5"> the log file</font>

183
00:09:49,920 --> 00:09:55,020
let's say it's<font color="#E5E5E5"> ABC dot log it will</font>

184
00:09:52,020 --> 00:09:57,449
rename it<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> ABC</font><font color="#CCCCCC"> dot all dot log for</font>

185
00:09:55,020 --> 00:10:01,350
instance and we can target<font color="#CCCCCC"> this</font>

186
00:09:57,450 --> 00:10:04,770
operation by replacing the source and

187
00:10:01,350 --> 00:10:08,700
destination<font color="#CCCCCC"> too so we replace the source</font>

188
00:10:04,770 --> 00:10:10,620
<font color="#CCCCCC">2 by a link</font><font color="#E5E5E5"> to our payload and replace</font>

189
00:10:08,700 --> 00:10:12,570
the destination by<font color="#CCCCCC"> your link to the file</font>

190
00:10:10,620 --> 00:10:16,410
we<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> create so when the project</font>

191
00:10:12,570 --> 00:10:19,020
<font color="#E5E5E5">will perform the operation so for</font>

192
00:10:16,410 --> 00:10:21,689
instance we made our payload<font color="#E5E5E5"> big enough</font>

193
00:10:19,020 --> 00:10:24,750
so that the project<font color="#CCCCCC"> 6 thinks</font><font color="#E5E5E5"> ok the log</font>

194
00:10:21,690 --> 00:10:27,450
is too big I need<font color="#CCCCCC"> to rotate</font><font color="#E5E5E5"> it will do</font>

195
00:10:24,750 --> 00:10:30,660
the move or rename operation<font color="#E5E5E5"> and</font>

196
00:10:27,450 --> 00:10:34,770
actually move our payload to<font color="#CCCCCC"> the target</font>

197
00:10:30,660 --> 00:10:37,230
location<font color="#CCCCCC"> so this way</font><font color="#E5E5E5"> we have defined the</font>

198
00:10:34,770 --> 00:10:42,569
content and the location of<font color="#E5E5E5"> the of the</font>

199
00:10:37,230 --> 00:10:44,670
file so we see that we can look at some

200
00:10:42,570 --> 00:10:46,980
file operations as kind<font color="#E5E5E5"> of exploit</font>

201
00:10:44,670 --> 00:10:49,620
primitive and some of them are<font color="#E5E5E5"> very</font>

202
00:10:46,980 --> 00:10:53,160
<font color="#CCCCCC">powerful for instance of course move</font>

203
00:10:49,620 --> 00:10:56,220
rename<font color="#E5E5E5"> but also if you</font><font color="#CCCCCC"> can control a</font>

204
00:10:53,160 --> 00:10:58,230
copy so if you can<font color="#E5E5E5"> control</font><font color="#CCCCCC"> both</font><font color="#E5E5E5"> source</font>

205
00:10:56,220 --> 00:11:01,230
<font color="#E5E5E5">and destination basically the same thing</font>

206
00:10:58,230 --> 00:11:03,570
<font color="#E5E5E5">and if you control the source but not</font>

207
00:11:01,230 --> 00:11:06,120
the<font color="#CCCCCC"> destination but the destination is</font>

208
00:11:03,570 --> 00:11:08,310
somewhere the unprivileged user can read

209
00:11:06,120 --> 00:11:10,200
well then you can

210
00:11:08,310 --> 00:11:14,810
you got an arbitrary file read and you

211
00:11:10,200 --> 00:11:18,029
can try to exploit this<font color="#CCCCCC"> to read</font><font color="#E5E5E5"> secrets</font>

212
00:11:14,810 --> 00:11:20,839
<font color="#E5E5E5">and again we can use</font><font color="#CCCCCC"> procurement</font><font color="#E5E5E5"> or</font>

213
00:11:18,029 --> 00:11:24,480
debugger to see if everything works<font color="#E5E5E5"> and</font>

214
00:11:20,840 --> 00:11:27,690
some operation<font color="#E5E5E5"> do require precise timing</font>

215
00:11:24,480 --> 00:11:31,200
as you can imagine<font color="#E5E5E5"> and for this there</font>

216
00:11:27,690 --> 00:11:34,290
<font color="#E5E5E5">are</font><font color="#CCCCCC"> blocks which are kind of which are</font>

217
00:11:31,200 --> 00:11:36,390
locks that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can put on files that</font>

218
00:11:34,290 --> 00:11:39,810
will allow you to<font color="#CCCCCC"> get a</font><font color="#E5E5E5"> call back</font>

219
00:11:36,390 --> 00:11:42,000
<font color="#CCCCCC">whenever</font><font color="#E5E5E5"> another process want to access</font>

220
00:11:39,810 --> 00:11:44,760
this file and the<font color="#CCCCCC"> other process will be</font>

221
00:11:42,000 --> 00:11:48,540
blocked from accessing the file<font color="#CCCCCC"> as long</font>

222
00:11:44,760 --> 00:11:50,760
<font color="#E5E5E5">as you until you leave the lock until</font>

223
00:11:48,540 --> 00:11:54,270
<font color="#E5E5E5">you release the lock so this is</font>

224
00:11:50,760 --> 00:11:59,130
<font color="#E5E5E5">obviously useful to block processes at</font>

225
00:11:54,270 --> 00:12:02,750
arbitrary times<font color="#E5E5E5"> so that we can reliably</font>

226
00:11:59,130 --> 00:12:05,330
<font color="#E5E5E5">exploit</font><font color="#CCCCCC"> and win some race condition and</font>

227
00:12:02,750 --> 00:12:08,820
of course we can combine<font color="#E5E5E5"> this with</font>

228
00:12:05,330 --> 00:12:12,839
<font color="#CCCCCC">previous techniques so here we are</font><font color="#E5E5E5"> our</font>

229
00:12:08,820 --> 00:12:16,620
pseudo<font color="#E5E5E5"> symlink again</font><font color="#CCCCCC"> and if we can place</font>

230
00:12:12,839 --> 00:12:18,750
an<font color="#E5E5E5"> OP lock on the on the file when the</font>

231
00:12:16,620 --> 00:12:20,850
file<font color="#E5E5E5"> gets accessed we can change the</font>

232
00:12:18,750 --> 00:12:24,750
<font color="#E5E5E5">same link so not the file but the</font>

233
00:12:20,850 --> 00:12:27,900
<font color="#CCCCCC">symlink to point to another file so if</font>

234
00:12:24,750 --> 00:12:30,570
we remember that<font color="#CCCCCC"> our applications</font><font color="#E5E5E5"> try to</font>

235
00:12:27,900 --> 00:12:32,939
access<font color="#E5E5E5"> CDR</font><font color="#CCCCCC"> five dot txt</font><font color="#E5E5E5"> it will actually</font>

236
00:12:30,570 --> 00:12:35,640
<font color="#E5E5E5">access the first file on the first</font>

237
00:12:32,940 --> 00:12:42,810
access and all subsequent access will go

238
00:12:35,640 --> 00:12:45,120
to the second file ad is obviously a

239
00:12:42,810 --> 00:12:47,099
nice target<font color="#E5E5E5"> for this kind of file</font>

240
00:12:45,120 --> 00:12:49,020
because they will<font color="#CCCCCC"> manipulate a lot of</font>

241
00:12:47,100 --> 00:12:51,150
sorry<font color="#E5E5E5"> for this kind of a tax base</font>

242
00:12:49,020 --> 00:12:54,209
<font color="#E5E5E5">because they will manipulate</font><font color="#CCCCCC"> a lot of</font>

243
00:12:51,150 --> 00:12:59,670
files and they will manipulate<font color="#CCCCCC"> them</font><font color="#E5E5E5"> with</font>

244
00:12:54,209 --> 00:13:01,920
high privileges and often the many

245
00:12:59,670 --> 00:13:05,430
operations from<font color="#E5E5E5"> the ID can</font><font color="#CCCCCC"> be triggered</font>

246
00:13:01,920 --> 00:13:08,219
by<font color="#E5E5E5"> unprivileged users</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> drop in for</font>

247
00:13:05,430 --> 00:13:12,660
<font color="#CCCCCC">instance a file on the file system will</font>

248
00:13:08,220 --> 00:13:15,240
trigger<font color="#E5E5E5"> for instance a scan and it has a</font>

249
00:13:12,660 --> 00:13:17,790
lot of abuse potential<font color="#E5E5E5"> these are typical</font>

250
00:13:15,240 --> 00:13:20,200
operation that you will do and there<font color="#E5E5E5"> are</font>

251
00:13:17,790 --> 00:13:24,699
as many potential<font color="#CCCCCC"> road</font><font color="#E5E5E5"> to</font>

252
00:13:20,200 --> 00:13:27,670
escalation<font color="#E5E5E5"> and some IV will perform very</font>

253
00:13:24,700 --> 00:13:30,280
interesting operations<font color="#CCCCCC"> when they detect</font>

254
00:13:27,670 --> 00:13:33,849
an infected file<font color="#E5E5E5"> so for instance I will</font>

255
00:13:30,280 --> 00:13:37,390
create temporary copies of the file in

256
00:13:33,850 --> 00:13:40,030
the same in<font color="#E5E5E5"> the same folder</font><font color="#CCCCCC"> or try to</font>

257
00:13:37,390 --> 00:13:51,790
rename the file but still in the<font color="#E5E5E5"> same</font>

258
00:13:40,030 --> 00:13:54,280
folder or stuff<font color="#CCCCCC"> like that and so here we</font>

259
00:13:51,790 --> 00:13:58,120
create a directory test and we drop a

260
00:13:54,280 --> 00:14:04,630
car in the directory we sleep a little

261
00:13:58,120 --> 00:14:09,610
<font color="#E5E5E5">bit we see that our a car file got</font>

262
00:14:04,630 --> 00:14:13,390
detected and here we set an<font color="#E5E5E5"> OP lock on a</font>

263
00:14:09,610 --> 00:14:17,260
specific log file<font color="#CCCCCC"> because we know</font><font color="#E5E5E5"> that</font>

264
00:14:13,390 --> 00:14:22,810
this log<font color="#CCCCCC"> this log will get written to</font>

265
00:14:17,260 --> 00:14:27,189
just before<font color="#E5E5E5"> the copy of the infected</font>

266
00:14:22,810 --> 00:14:30,849
file is<font color="#E5E5E5"> performed so we use the setup</font>

267
00:14:27,190 --> 00:14:36,910
block tool to place an upload on the

268
00:14:30,850 --> 00:14:39,940
<font color="#CCCCCC">file and we wait so in I shortened it</font><font color="#E5E5E5"> a</font>

269
00:14:36,910 --> 00:14:42,010
bit but in the original<font color="#E5E5E5"> video it was</font>

270
00:14:39,940 --> 00:14:48,340
something like<font color="#E5E5E5"> one minute</font><font color="#CCCCCC"> okay the</font>

271
00:14:42,010 --> 00:14:51,130
upload got triggered so<font color="#E5E5E5"> no we remove the</font>

272
00:14:48,340 --> 00:14:54,360
directory we created and we<font color="#E5E5E5"> replace our</font>

273
00:14:51,130 --> 00:14:56,550
file<font color="#CCCCCC"> so our infected</font><font color="#E5E5E5"> file a car dot txt</font>

274
00:14:54,360 --> 00:14:59,890
<font color="#E5E5E5">by a symlink</font>

275
00:14:56,550 --> 00:15:08,560
to our payload so here<font color="#E5E5E5"> get system shell</font>

276
00:14:59,890 --> 00:15:11,430
<font color="#E5E5E5">dot exe and we replace the destination</font>

277
00:15:08,560 --> 00:15:15,880
so the copy<font color="#E5E5E5"> that the privileged process</font>

278
00:15:11,430 --> 00:15:19,030
<font color="#E5E5E5">will do will create by a symlink</font>

279
00:15:15,880 --> 00:15:21,790
to the file we want<font color="#CCCCCC"> to create</font>

280
00:15:19,030 --> 00:15:28,810
<font color="#CCCCCC">so we create a</font><font color="#E5E5E5"> symlink and have it point</font>

281
00:15:21,790 --> 00:15:30,640
to<font color="#E5E5E5"> you</font><font color="#CCCCCC"> lu handler dot exe</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we use the</font>

282
00:15:28,810 --> 00:15:33,729
bait and<font color="#E5E5E5"> switch which implements the</font>

283
00:15:30,640 --> 00:15:34,180
switching methods in before<font color="#CCCCCC"> to have</font><font color="#E5E5E5"> it</font>

284
00:15:33,730 --> 00:15:36,399
point

285
00:15:34,180 --> 00:15:39,010
after just<font color="#CCCCCC"> after the the Coty</font><font color="#E5E5E5"> to</font>

286
00:15:36,399 --> 00:15:41,649
somewhere<font color="#E5E5E5"> else</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> obviously the</font>

287
00:15:39,010 --> 00:15:43,899
<font color="#E5E5E5">atheist</font><font color="#CCCCCC"> on at some point will destroy</font>

288
00:15:41,649 --> 00:15:52,089
the<font color="#CCCCCC"> cookie</font><font color="#E5E5E5"> his</font><font color="#CCCCCC"> made and we don't want</font><font color="#E5E5E5"> it</font>

289
00:15:43,899 --> 00:15:54,490
to destroy the file we just created and

290
00:15:52,089 --> 00:15:58,589
once this has been<font color="#CCCCCC"> performed you lu han</font>

291
00:15:54,490 --> 00:15:58,589
lu<font color="#E5E5E5"> is actually the</font>

292
00:15:58,720 --> 00:16:05,179
the executable that<font color="#E5E5E5"> is used to perform</font>

293
00:16:02,929 --> 00:16:19,089
<font color="#CCCCCC">the update on this service</font><font color="#E5E5E5"> and the</font>

294
00:16:05,179 --> 00:16:21,559
update<font color="#E5E5E5"> run as thank you</font><font color="#CCCCCC"> other ways to</font>

295
00:16:19,089 --> 00:16:27,559
<font color="#E5E5E5">abuse file deletion in a more generic</font>

296
00:16:21,559 --> 00:16:30,699
<font color="#E5E5E5">sense but still</font><font color="#CCCCCC"> when they are performed</font>

297
00:16:27,559 --> 00:16:36,618
by<font color="#E5E5E5"> your</font><font color="#CCCCCC"> ad or other stuff but mostly ad</font>

298
00:16:30,699 --> 00:16:40,128
is to<font color="#CCCCCC"> exploit the the delete to delete</font>

299
00:16:36,619 --> 00:16:42,199
file that we can later replace for

300
00:16:40,129 --> 00:16:45,079
instance in program data or see<font color="#CCCCCC"> windows</font>

301
00:16:42,199 --> 00:16:48,738
temp<font color="#CCCCCC"> where unprivileged user can create</font>

302
00:16:45,079 --> 00:16:51,079
file but not replace existing one<font color="#E5E5E5"> so if</font>

303
00:16:48,739 --> 00:16:54,399
we can delete<font color="#E5E5E5"> this file</font><font color="#CCCCCC"> they no longer</font>

304
00:16:51,079 --> 00:16:57,258
<font color="#E5E5E5">exist</font><font color="#CCCCCC"> so we can recreate them and then</font>

305
00:16:54,399 --> 00:17:00,379
if a<font color="#E5E5E5"> privileged process</font><font color="#CCCCCC"> is of the same</font>

306
00:16:57,259 --> 00:17:03,049
<font color="#E5E5E5">process or another process</font><font color="#CCCCCC"> use this file</font>

307
00:17:00,379 --> 00:17:04,970
<font color="#E5E5E5">well we go back we are</font><font color="#CCCCCC"> back to the same</font>

308
00:17:03,049 --> 00:17:07,279
<font color="#CCCCCC">situation as trying</font><font color="#E5E5E5"> to exploit an</font>

309
00:17:04,970 --> 00:17:09,679
arbitrary file right because we own this

310
00:17:07,279 --> 00:17:14,839
file<font color="#E5E5E5"> so it's like a privileged process</font>

311
00:17:09,679 --> 00:17:17,629
accessing user<font color="#CCCCCC"> own file and Ava target</font>

312
00:17:14,839 --> 00:17:19,730
is<font color="#E5E5E5"> not the only table</font><font color="#CCCCCC"> juice target but</font>

313
00:17:17,628 --> 00:17:22,069
<font color="#E5E5E5">you can also use this</font><font color="#CCCCCC"> for instance</font><font color="#E5E5E5"> to</font>

314
00:17:19,730 --> 00:17:24,378
exploit any kind<font color="#E5E5E5"> of software that do not</font>

315
00:17:22,069 --> 00:17:31,340
check for<font color="#E5E5E5"> pre-existing files like</font>

316
00:17:24,378 --> 00:17:35,360
<font color="#E5E5E5">installers and another</font><font color="#CCCCCC"> tricks we can use</font>

317
00:17:31,340 --> 00:17:38,750
with<font color="#CCCCCC"> ad is try to redirect a file</font>

318
00:17:35,360 --> 00:17:43,129
deletion so with if we have<font color="#E5E5E5"> talked to in</font>

319
00:17:38,750 --> 00:17:46,070
<font color="#E5E5E5">the file deletion process we drop the a</font>

320
00:17:43,129 --> 00:17:48,559
car payload or<font color="#E5E5E5"> anything malicious so</font>

321
00:17:46,070 --> 00:17:52,850
maybe not<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first version of the mini</font>

322
00:17:48,559 --> 00:17:57,168
cats but another<font color="#E5E5E5"> one</font><font color="#CCCCCC"> some somewhere in</font>

323
00:17:52,850 --> 00:18:00,049
the directory and<font color="#E5E5E5"> wait for it to be</font>

324
00:17:57,169 --> 00:18:02,210
<font color="#CCCCCC">detected and before</font><font color="#E5E5E5"> the deletion but</font>

325
00:18:00,049 --> 00:18:04,039
after<font color="#E5E5E5"> its detection we replace the</font>

326
00:18:02,210 --> 00:18:07,340
directory by the junction<font color="#CCCCCC"> to system32</font>

327
00:18:04,039 --> 00:18:10,960
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you can easily guess which file will</font>

328
00:18:07,340 --> 00:18:10,959
get deleted by<font color="#E5E5E5"> the</font><font color="#CCCCCC"> AV</font>

329
00:18:13,340 --> 00:18:19,369
so these are some bugs that were

330
00:18:15,259 --> 00:18:22,399
reported<font color="#CCCCCC"> over the last year or so as</font>

331
00:18:19,369 --> 00:18:26,629
part of this research<font color="#CCCCCC"> not all of</font><font color="#E5E5E5"> them</font>

332
00:18:22,399 --> 00:18:28,668
are<font color="#E5E5E5"> patch the</font><font color="#CCCCCC"> field</font><font color="#E5E5E5"> city or one the</font><font color="#CCCCCC"> cv</font>

333
00:18:26,629 --> 00:18:30,498
indicate that<font color="#CCCCCC"> it's patch but in my</font>

334
00:18:28,669 --> 00:18:37,309
testing with the last version<font color="#E5E5E5"> it's not</font>

335
00:18:30,499 --> 00:18:40,549
so you can show a link later<font color="#CCCCCC"> and to</font>

336
00:18:37,309 --> 00:18:42,408
prevent the this kind<font color="#E5E5E5"> of bug obviously</font>

337
00:18:40,549 --> 00:18:45,080
the applications<font color="#E5E5E5"> the</font><font color="#CCCCCC"> privileged</font>

338
00:18:42,409 --> 00:18:46,879
application<font color="#CCCCCC"> need to not break the</font>

339
00:18:45,080 --> 00:18:48,799
security<font color="#E5E5E5"> boundary the first place so</font>

340
00:18:46,879 --> 00:18:52,820
either impersonate or<font color="#E5E5E5"> your restriction</font>

341
00:18:48,799 --> 00:18:55,639
token or do some architectural change<font color="#E5E5E5"> so</font>

342
00:18:52,820 --> 00:19:01,039
<font color="#E5E5E5">as not to access user</font><font color="#CCCCCC"> controlled files</font>

343
00:18:55,639 --> 00:19:04,609
and the also<font color="#E5E5E5"> to take into account</font><font color="#CCCCCC"> this</font>

344
00:19:01,039 --> 00:19:07,730
<font color="#E5E5E5">kind of attacks when they harden the</font>

345
00:19:04,609 --> 00:19:12,139
<font color="#E5E5E5">product and the</font><font color="#CCCCCC"> offenders can try to</font>

346
00:19:07,730 --> 00:19:14,029
detect this<font color="#CCCCCC"> because it does it will</font>

347
00:19:12,139 --> 00:19:15,678
potentially<font color="#E5E5E5"> generate some sun</font><font color="#CCCCCC"> block</font>

348
00:19:14,029 --> 00:19:17,960
depending on the activity for instance

349
00:19:15,679 --> 00:19:21,320
if you start dropping<font color="#E5E5E5"> a car everywhere</font>

350
00:19:17,960 --> 00:19:23,149
<font color="#CCCCCC">and it will also</font><font color="#E5E5E5"> have some weird</font>

351
00:19:21,320 --> 00:19:25,129
behavior like creating<font color="#E5E5E5"> up</font><font color="#CCCCCC"> blocks and</font>

352
00:19:23,149 --> 00:19:26,768
using junctions and stuff like that<font color="#CCCCCC"> that</font>

353
00:19:25,129 --> 00:19:33,158
is not performed by your typical

354
00:19:26,769 --> 00:19:37,549
<font color="#E5E5E5">application there are some more examples</font>

355
00:19:33,159 --> 00:19:39,859
<font color="#CCCCCC">in at this link</font><font color="#E5E5E5"> and I don't know if we</font>

356
00:19:37,549 --> 00:19:42,259
have time for some<font color="#CCCCCC"> questions but</font>

357
00:19:39,859 --> 00:19:45,289
otherwise you can catch me later<font color="#CCCCCC"> and</font>

358
00:19:42,259 --> 00:19:48,710
there is also a blog post version of

359
00:19:45,289 --> 00:19:54,999
this talk at the<font color="#E5E5E5"> same address so that</font>

360
00:19:48,710 --> 00:19:54,999
can just<font color="#E5E5E5"> go</font><font color="#CCCCCC"> there and read everything</font>

361
00:20:02,440 --> 00:20:13,370
thank you for<font color="#E5E5E5"> the great technical talk I</font>

362
00:20:05,030 --> 00:20:14,990
think we have time<font color="#E5E5E5"> for one</font><font color="#CCCCCC"> question when</font>

363
00:20:13,370 --> 00:20:18,939
taking advantage of this<font color="#E5E5E5"> let's say I</font>

364
00:20:14,990 --> 00:20:22,730
have some fully obfuscated<font color="#CCCCCC"> Cobalt strike</font>

365
00:20:18,940 --> 00:20:24,830
<font color="#CCCCCC">payload and several team</font><font color="#E5E5E5"> server</font><font color="#CCCCCC"> setups</font>

366
00:20:22,730 --> 00:20:27,800
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I can do kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that shuffle dance</font>

367
00:20:24,830 --> 00:20:30,800
and have persistence<font color="#E5E5E5"> in doing this will</font>

368
00:20:27,800 --> 00:20:32,600
this prevent the original executable

369
00:20:30,800 --> 00:20:32,960
from<font color="#E5E5E5"> operating correctly as</font><font color="#CCCCCC"> it should</font>

370
00:20:32,600 --> 00:20:35,719
have

371
00:20:32,960 --> 00:20:37,220
like<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example will that</font><font color="#E5E5E5"> AV scan</font>

372
00:20:35,720 --> 00:20:40,790
normally or will there<font color="#E5E5E5"> be something that</font>

373
00:20:37,220 --> 00:20:42,710
might seem suspicious<font color="#E5E5E5"> to the user</font><font color="#CCCCCC"> this I</font>

374
00:20:40,790 --> 00:20:45,230
think would depend on which<font color="#CCCCCC"> file you</font>

375
00:20:42,710 --> 00:20:47,090
your target<font color="#E5E5E5"> for instance and how you</font>

376
00:20:45,230 --> 00:20:50,690
implement<font color="#CCCCCC"> your payload so for</font><font color="#E5E5E5"> instance</font>

377
00:20:47,090 --> 00:20:52,760
if you're dropping a DLL somewhere that

378
00:20:50,690 --> 00:20:54,740
will get loaded<font color="#E5E5E5"> by a privileged process</font>

379
00:20:52,760 --> 00:20:56,900
and that privileged process performs

380
00:20:54,740 --> 00:21:00,290
some important<font color="#E5E5E5"> tasks well of course if</font>

381
00:20:56,900 --> 00:21:03,380
you don't correctly implement the<font color="#CCCCCC"> the</font>

382
00:21:00,290 --> 00:21:07,299
callbacks to<font color="#E5E5E5"> the original DLL then you</font>

383
00:21:03,380 --> 00:21:09,909
will probably prevent the

384
00:21:07,299 --> 00:21:13,000
the process<font color="#E5E5E5"> from working as expected</font><font color="#CCCCCC"> so</font>

385
00:21:09,909 --> 00:21:15,340
<font color="#CCCCCC">you might want to</font><font color="#E5E5E5"> avoid that but</font>

386
00:21:13,000 --> 00:21:18,730
otherwise<font color="#E5E5E5"> you can for instance if you</font>

387
00:21:15,340 --> 00:21:22,199
targeting a completely separate service

388
00:21:18,730 --> 00:21:25,539
<font color="#E5E5E5">like using the jacket trick</font><font color="#CCCCCC"> then you</font>

389
00:21:22,200 --> 00:21:28,809
<font color="#E5E5E5">that shouldn't be a problem</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> it's</font>

390
00:21:25,539 --> 00:21:34,539
not<font color="#CCCCCC"> something that is supposed to</font><font color="#E5E5E5"> be a</font>

391
00:21:28,809 --> 00:21:36,600
critical for most use cases<font color="#E5E5E5"> okay thank</font>

392
00:21:34,539 --> 00:21:36,600
you

393
00:21:37,710 --> 00:21:41,099
[Applause]

