1
00:00:01,140 --> 00:00:03,340
may wake up from

2
00:00:03,340 --> 00:00:06,980
the security I am would give us talk
about

3
00:00:06,980 --> 00:00:10,010
security Java frameworks think it's

4
00:00:10,010 --> 00:00:13,400
not exactly about security more halt get

5
00:00:13,400 --> 00:00:18,400
right wrecked yes so let's see how you
can get into modern Joffre brock's

6
00:00:18,400 --> 00:00:24,510
yeah hi I'm so it see at the title is
milking a horse exited in remote code in

7
00:00:24,510 --> 00:00:25,640
jail frameworks

8
00:00:25,640 --> 00:00:30,560
nade that if you thought that nyse: over
those two things were possible then you

9
00:00:30,560 --> 00:00:31,160
are wrong

10
00:00:31,160 --> 00:00:34,370
so I had to get them milking Horse Pike

11
00:00:34,370 --> 00:00:39,219
of Adam agenda right so a you may wonder
why would you want a new course in the

12
00:00:39,219 --> 00:00:42,500
first place right and so in reality

13
00:00:42,500 --> 00:00:46,670
an in Central Asia in the region RAM
from we actually make a drink from

14
00:00:46,670 --> 00:00:47,910
fermented or smell

15
00:00:47,910 --> 00:00:52,050
and an interesting thing that when you
milk a horse ride

16
00:00:52,050 --> 00:00:55,090
you can just come out to a horse in Stat
milk in it

17
00:00:55,090 --> 00:00:59,219
what you have to do you have to bring in
baby horse this tax hike in the mail

18
00:00:59,219 --> 00:01:03,670
and then you move the baby horse away
and that while it's still tax in the

19
00:01:03,670 --> 00:01:04,189
horse

20
00:01:04,189 --> 00:01:07,590
humankind's and starts milk in so horse
gets

21
00:01:07,590 --> 00:01:11,650
owned an a little bit red get straight
and

22
00:01:11,650 --> 00:01:15,840
its ambient authorities have used
confuse deputy problem

23
00:01:15,840 --> 00:01:19,619
and back to security so web frameworks

24
00:01:19,619 --> 00:01:24,850
and wat remarks and have evolved along
where I don't know how many of you have

25
00:01:24,850 --> 00:01:26,400
actually written in Java code

26
00:01:26,400 --> 00:01:29,890
ever see I love you

27
00:01:29,890 --> 00:01:34,310
good so I in the beginning and the
beginning when we use to write servlet

28
00:01:34,310 --> 00:01:37,520
and we use to write some code what we do
is we would actually take

29
00:01:37,520 --> 00:01:42,130
at a servlet we a created do get do post
method

30
00:01:42,130 --> 00:01:46,490
any we need to produce some HTML so we
do what we do to it simply speed out the

31
00:01:46,490 --> 00:01:47,229
html

32
00:01:47,229 --> 00:01:50,290
right on then on their dad output

33
00:01:50,290 --> 00:01:55,060
for the connected socket right at some
point we realize that it may not be a

34
00:01:55,060 --> 00:01:55,450
big

35
00:01:55,450 --> 00:01:59,060
the brightest idea because what we have
to do now is there

36
00:01:59,060 --> 00:02:02,490
we have to I write a lot of custom code
if you want to customize

37
00:02:02,490 --> 00:02:07,380
our front-end a so I what we've got now
is we got GSP

38
00:02:07,380 --> 00:02:11,440
or Java Server Pages so the way things
are happening now

39
00:02:11,440 --> 00:02:15,890
is you create an object you do all the
things she your method get executed

40
00:02:15,890 --> 00:02:19,450
you before my love the things and then
you pass the object down to us

41
00:02:19,450 --> 00:02:22,720
at page like a JSP page in this case

42
00:02:22,720 --> 00:02:26,220
the page retrieves the object that
you've sent it and that

43
00:02:26,220 --> 00:02:31,510
shows that object to the user the cool
thing about this is a giant ESP general

44
00:02:31,510 --> 00:02:35,910
provide you with the way to create
custom tags all custom tag libraries and

45
00:02:35,910 --> 00:02:38,160
this custom tag libraries allow you to
produce

46
00:02:38,160 --> 00:02:43,200
a different output based on different
different criteria so you can have the

47
00:02:43,200 --> 00:02:44,459
same JSP page

48
00:02:44,459 --> 00:02:48,560
but form a mild version it's gonna get
displayed mobile version of the website

49
00:02:48,560 --> 00:02:51,269
in for normal version is going to be a
normal vision

50
00:02:51,269 --> 00:02:54,720
as you can see in this code and

51
00:02:54,720 --> 00:02:58,510
there are a lot of problems that arose
from this what we've realized that we

52
00:02:58,510 --> 00:02:59,840
doing is erecting a lotta

53
00:02:59,840 --> 00:03:03,190
boilerplate code so because you you
getting

54
00:03:03,190 --> 00:03:06,360
I love the HP parameters from a from a

55
00:03:06,360 --> 00:03:09,599
HTTP request strings if you want to do

56
00:03:09,599 --> 00:03:13,110
any sort of conversion of you want to
store their data as an integer or any

57
00:03:13,110 --> 00:03:14,050
other data type

58
00:03:14,050 --> 00:03:17,090
which you have to do is you have to
actually perform manual conversion of

59
00:03:17,090 --> 00:03:20,989
those things and handle exceptions when
your input does not comply

60
00:03:20,989 --> 00:03:25,519
and in addition to that input validation
right so if you have an object

61
00:03:25,519 --> 00:03:30,129
and you get an an integer witcha asking
which represents agent we use it what

62
00:03:30,129 --> 00:03:32,720
you have to do you have to a convert
that to an integer

63
00:03:32,720 --> 00:03:35,750
and then perform some comparisons to
make sure it's not negative

64
00:03:35,750 --> 00:03:39,159
not two million yes track and then

65
00:03:39,159 --> 00:03:44,349
and in addition to that if you want to
have clean code and you wanna pass

66
00:03:44,349 --> 00:03:44,840
around

67
00:03:44,840 --> 00:03:48,890
objects as opposed to strains what you
have to do is you have to create an

68
00:03:48,890 --> 00:03:49,610
object

69
00:03:49,610 --> 00:03:54,530
for example if you have yeah form that
represents your profile users profile

70
00:03:54,530 --> 00:03:59,080
once you submit that form you have to
create an object called user

71
00:03:59,080 --> 00:04:03,170
you have to I get I love the values can
be relative value set to love the values

72
00:04:03,170 --> 00:04:07,450
on the object and then start passing
this subject so as you can see

73
00:04:07,450 --> 00:04:10,790
that there's a lot of boilerplate code
that we do on the right

74
00:04:10,790 --> 00:04:15,370
and we and it's always the same so what
modern frame ones did as they came in

75
00:04:15,370 --> 00:04:16,190
they said hey

76
00:04:16,190 --> 00:04:20,859
how bad these we take back all these
boring tasks of conversion things and

77
00:04:20,859 --> 00:04:22,720
Satan things in validating that

78
00:04:22,720 --> 00:04:26,020
and what we're gonna let you do is right
simple purchase

79
00:04:26,020 --> 00:04:29,250
that means you simply write a Java
object

80
00:04:29,250 --> 00:04:32,720
which does not extend to any interfaces
which doesn't implement

81
00:04:32,720 --> 00:04:37,310
any magic method it's a simple class
maybe with an annotation that says a

82
00:04:37,310 --> 00:04:39,290
data controller class

83
00:04:39,290 --> 00:04:43,560
& Fri Mar will do the rest if you think
about it

84
00:04:43,560 --> 00:04:47,090
I love the complexity that you had to do
all the complex code that you had to

85
00:04:47,090 --> 00:04:48,650
write yourself

86
00:04:48,650 --> 00:04:52,350
such as conversion validation and I'll
and constructional object

87
00:04:52,350 --> 00:04:56,630
had to be done by someone so the
complexity most from your code into the

88
00:04:56,630 --> 00:04:58,690
framework ok any to actually became

89
00:04:58,690 --> 00:05:02,050
even more complex because of remarks had
to do

90
00:05:02,050 --> 00:05:05,620
is they had to make it generic and make
it work

91
00:05:05,620 --> 00:05:09,110
is every class and and different iraqis

92
00:05:09,110 --> 00:05:12,919
so you the use things like reflection
very heavily to make sure that they can

93
00:05:12,919 --> 00:05:14,500
enumerate dynamically

94
00:05:14,500 --> 00:05:17,520
what can object you got what what the
type of the object

95
00:05:17,520 --> 00:05:20,610
and construct invalidated accordingly

96
00:05:20,610 --> 00:05:24,800
if I had to summarize the current state
over Java Enterprise Development dislike

97
00:05:24,800 --> 00:05:26,110
would summarize it

98
00:05:26,110 --> 00:05:30,400
half the abbreviation at aberrations on
that slide on actually no

99
00:05:30,400 --> 00:05:34,650
bed at bad there's address so many
technologists in

100
00:05:34,650 --> 00:05:38,789
in a simple hello world application you
can have megabytes of jar files

101
00:05:38,789 --> 00:05:45,030
which all do a lot of crazy things just
to break something simple out

102
00:05:45,030 --> 00:05:48,699
so the question is how secure those
frameworks so I N

103
00:05:48,699 --> 00:05:52,289
we have a lot of code and as we know it
the mall code you have

104
00:05:52,289 --> 00:05:56,460
the more vulnerabilities you have a net
code so looking back at the history of

105
00:05:56,460 --> 00:05:57,669
when their villages in this

106
00:05:57,669 --> 00:06:01,470
in a Java frameworks we see that in
addition to them

107
00:06:01,470 --> 00:06:05,819
them not made a serious XSS
vulnerabilities and directory traversal

108
00:06:05,819 --> 00:06:09,030
there was one when they're building
strategy was actually interesting

109
00:06:09,030 --> 00:06:14,229
which had to do with validation satiated
text field an insider the text field

110
00:06:14,229 --> 00:06:18,460
you entered a OJ L statement and I'm
gonna talk about OJ later on but for

111
00:06:18,460 --> 00:06:19,940
example you and Ted

112
00:06:19,940 --> 00:06:23,150
as special marker and in one class 1

113
00:06:23,150 --> 00:06:26,729
and you submit the form if the value
does not pass

114
00:06:26,729 --> 00:06:29,930
the past the validation at

115
00:06:29,930 --> 00:06:33,610
error page is going to be shown and your
values gonna be shown back to using

116
00:06:33,610 --> 00:06:38,009
out this is an invalid value and if you
ended gmail statement one plus one

117
00:06:38,009 --> 00:06:42,150
the value that you gonna see there will
be two so the statement that you entered

118
00:06:42,150 --> 00:06:44,710
if it failed validation would actually
get executed

119
00:06:44,710 --> 00:06:49,410
which effectively was and remote code
execution in net and then

120
00:06:49,410 --> 00:06:53,120
in strat there was the only two years on
there if there was a scout

121
00:06:53,120 --> 00:06:57,840
n et spring had 07 man number into
singer modality service

122
00:06:57,840 --> 00:07:01,910
so what I've done is at I van I bad

123
00:07:01,910 --> 00:07:04,949
takin at three most popular frameworks

124
00:07:04,949 --> 00:07:08,630
which I J boss Jaipur seems to PAX East
rats

125
00:07:08,630 --> 00:07:12,449
and their with the third one

126
00:07:12,449 --> 00:07:15,610
forget the in third third frame like

127
00:07:15,610 --> 00:07:19,259
I what I did is a toucan an intelligent
which is a really great

128
00:07:19,259 --> 00:07:23,800
ID for Java and the reason why when the
user ID is because modern Java code in

129
00:07:23,800 --> 00:07:25,440
Java programs in general

130
00:07:25,440 --> 00:07:29,539
I really obsessed with at have in your a
testable code meaning

131
00:07:29,539 --> 00:07:33,550
that when you have your code what you
pass around actually interfaces with

132
00:07:33,550 --> 00:07:33,849
that

133
00:07:33,849 --> 00:07:37,479
with no implementation and you can have
two or three implementations and what

134
00:07:37,479 --> 00:07:38,449
happens is

135
00:07:38,449 --> 00:07:43,889
I think all dependency injection and ed
rant and it could the people I injecting

136
00:07:43,889 --> 00:07:47,620
specific implementations of those
interfaces and a lot of times when the

137
00:07:47,620 --> 00:07:49,240
audit an application

138
00:07:49,240 --> 00:07:53,180
you look what is this code you can you
go to the definition of that go

139
00:07:53,180 --> 00:07:57,560
and you see it's just an interface and
you can only see 304 implementations and

140
00:07:57,560 --> 00:08:00,379
you don't really know which
implementation is used when

141
00:08:00,379 --> 00:08:05,220
so at I D helps you do it at at least
navigate all this code faster

142
00:08:05,220 --> 00:08:08,970
debugging also let you quickly down
below the mapping agency which

143
00:08:08,970 --> 00:08:10,740
implementation is used exactly

144
00:08:10,740 --> 00:08:14,910
in there when the application is running
I took a sample application

145
00:08:14,910 --> 00:08:19,270
so usually it's raining where can
supplies you with a sample application

146
00:08:19,270 --> 00:08:23,520
which tries to at show as many features
as possible

147
00:08:23,520 --> 00:08:28,330
and which get which guarantees pretty
good coverage features

148
00:08:28,330 --> 00:08:32,260
and its vulnerability took about five
min days to find and exploit

149
00:08:32,260 --> 00:08:36,260
fully and what it would have focused on
is at the Magic right

150
00:08:36,260 --> 00:08:39,849
we're focused on is how the framework is
doing

151
00:08:39,849 --> 00:08:44,600
all those things why developers love
this remix soul conversion of things

152
00:08:44,600 --> 00:08:48,910
at night the constructional object
validation and all those things

153
00:08:48,910 --> 00:08:55,250
so let's let's look at the PAX East rats
and how many have you use Apache Struts

154
00:08:55,250 --> 00:08:58,709
really no one just scary

155
00:08:58,709 --> 00:09:02,720
seat so at like two strategies you're
really adds a really popular frame like

156
00:09:02,720 --> 00:09:03,970
actually a lot of

157
00:09:03,970 --> 00:09:07,019
be companies like banks that i've seen.
I use in cities

158
00:09:07,019 --> 00:09:10,670
these frameworks I so it has a cooler
each tag library

159
00:09:10,670 --> 00:09:14,320
which allows you to it create a fancy
custom tag link for this is an example

160
00:09:14,320 --> 00:09:15,149
of

161
00:09:15,149 --> 00:09:20,450
provided custom tag which performs ajax
request for you the minute user clicks

162
00:09:20,450 --> 00:09:22,209
on the make requesting

163
00:09:22,209 --> 00:09:25,240
and populates the diva by of
automatically

164
00:09:25,240 --> 00:09:29,000
but another cool thing that hasn't I
love people love it is OG NL

165
00:09:29,000 --> 00:09:32,209
an original is object graph navigation
language

166
00:09:32,209 --> 00:09:35,860
and when it lets you do in this
particular case inside the tag

167
00:09:35,860 --> 00:09:38,890
with instead of actually calling methods
and

168
00:09:38,890 --> 00:09:42,080
objects directly what you can do is you
can write the following you can write

169
00:09:42,080 --> 00:09:45,420
past session dot user dot username

170
00:09:45,420 --> 00:09:48,640
or inside images P parameters which you
can do it you can do

171
00:09:48,640 --> 00:09:53,760
use a dot address dot CD and if we can
look at what it gets convert convert it

172
00:09:53,760 --> 00:09:54,950
to

173
00:09:54,950 --> 00:09:58,500
it actually gets converted interesting
into the pollens if you do use a dot

174
00:09:58,500 --> 00:09:59,510
address dot

175
00:09:59,510 --> 00:10:03,320
CT in a should be parameter when it gets
directly communities

176
00:10:03,320 --> 00:10:06,700
action which is current action and
handles the code

177
00:10:06,700 --> 00:10:10,680
don't get use a dot get address dot fed
CG

178
00:10:10,680 --> 00:10:14,269
automatically and in the yeah the case
it gets converted to you

179
00:10:14,269 --> 00:10:17,820
eritrean session context and getting the
username

180
00:10:17,820 --> 00:10:22,190
attributes on the session so it's very
interesting so I am

181
00:10:22,190 --> 00:10:25,560
in addition to that OJ now which is a
which is in

182
00:10:25,560 --> 00:10:29,370
Anat lab a spicy which is actually
important for this on their ability

183
00:10:29,370 --> 00:10:33,140
provide the future such as as they've
shown property settings so you can do

184
00:10:33,140 --> 00:10:34,600
food on buyer

185
00:10:34,600 --> 00:10:38,779
because buys which it becomes action dad
get food at said bye

186
00:10:38,779 --> 00:10:42,390
it provides you is at awesome feature of
calling methods so you can just simply

187
00:10:42,390 --> 00:10:43,529
call the method

188
00:10:43,529 --> 00:10:47,880
which practices and pass arguments T you
can call static methods to

189
00:10:47,880 --> 00:10:51,850
so this is an example of how you would
call system da tax it

190
00:10:51,850 --> 00:10:56,089
and it allowed to call constructors so
you can actually I betray deconstruct

191
00:10:56,089 --> 00:10:57,890
arbitrary objects passing

192
00:10:57,890 --> 00:11:02,160
arbitrary argument state and that it
allows you to

193
00:11:02,160 --> 00:11:05,660
save things into context variables so in
the last example

194
00:11:05,660 --> 00:11:10,240
what we take is we create in my class
object and we save that

195
00:11:10,240 --> 00:11:13,800
instance into their full property

196
00:11:13,800 --> 00:11:18,540
now you may wonder if HTTP parameters
actually original statements

197
00:11:18,540 --> 00:11:23,220
why you can I do something like this why
you can't simply called victim

198
00:11:23,220 --> 00:11:26,360
that to whatever is the action handler
and simply pass

199
00:11:26,360 --> 00:11:29,899
original statement at at juggling system
at

200
00:11:29,899 --> 00:11:33,720
exit and then practice is right in
reality you can

201
00:11:33,720 --> 00:11:37,410
are you could the thing is that what
prevents this is to

202
00:11:37,410 --> 00:11:41,680
variables dead actually at prevent you
from doing this one is called

203
00:11:41,680 --> 00:11:45,000
it's actually and a property in original
context

204
00:11:45,000 --> 00:11:48,579
which as you can see is called the
United Methodist to Shin

205
00:11:48,579 --> 00:11:52,480
save this value set to true then any
method eg

206
00:11:52,480 --> 00:11:56,620
read prior to executing a method is
gonna Paseo input as a method

207
00:11:56,620 --> 00:12:00,079
but right before executing it its gonna
go and check whether the property allows

208
00:12:00,079 --> 00:12:01,320
you to choose method

209
00:12:01,320 --> 00:12:05,250
and if it doesn't it's gonna throw an
exception and another thing if you wanna

210
00:12:05,250 --> 00:12:05,920
axis

211
00:12:05,920 --> 00:12:10,959
and static methods such as job as system
got exit on more interested

212
00:12:10,959 --> 00:12:15,010
interestingly runtime: dot exact which
allows you to execute operating system

213
00:12:15,010 --> 00:12:16,649
commands

214
00:12:16,649 --> 00:12:21,200
since it's a static method at well
obtaining right after obtaining ragtime

215
00:12:21,200 --> 00:12:24,649
Annie deciding method is another private
if you've got a last tragic method

216
00:12:24,649 --> 00:12:27,079
access which is also set to false

217
00:12:27,079 --> 00:12:30,329
so these are the two things that
actually control the

218
00:12:30,329 --> 00:12:34,980
execution of methods so %uh
vulnerability is actually based on my

219
00:12:34,980 --> 00:12:37,010
peers from their beauty that I
discovered

220
00:12:37,010 --> 00:12:41,420
and in OJ NL what's important is this
hash

221
00:12:41,420 --> 00:12:44,820
side so the house and actually
representing OJ now

222
00:12:44,820 --> 00:12:48,010
a reference to so-called context
variables and the I love interest in

223
00:12:48,010 --> 00:12:50,910
context variables as you can see one of
them is session

224
00:12:50,910 --> 00:12:54,829
so if you can reference to hash session
and then simply put

225
00:12:54,829 --> 00:12:57,860
and square brackets and some string in
there

226
00:12:57,860 --> 00:13:01,540
what it's going to translate into his
getting session and more defined service

227
00:13:01,540 --> 00:13:04,579
citation attitude and sending it to
something i

228
00:13:04,579 --> 00:13:07,550
in your coding applications a lot of
time when you can do that you can

229
00:13:07,550 --> 00:13:11,300
probably looking as another user or
elevated privileges by change in

230
00:13:11,300 --> 00:13:14,540
Hannah at the bid tells that

231
00:13:14,540 --> 00:13:18,300
you an admin if you look and drive-by to
either

232
00:13:18,300 --> 00:13:22,610
and SoCal attributes such as parameters
and attributes: now

233
00:13:22,610 --> 00:13:27,350
what stops you from beating code just
finish your paper and the insane hash

234
00:13:27,350 --> 00:13:28,980
session and modified thanks

235
00:13:28,980 --> 00:13:32,910
is a thing called parameters intercepted
this intercept is actually the one

236
00:13:32,910 --> 00:13:34,380
responsible for processing

237
00:13:34,380 --> 00:13:38,050
I love the OJ in a statement and what
does it actually blacklist

238
00:13:38,050 --> 00:13:41,670
the hash it simply look today she you
question it says

239
00:13:41,670 --> 00:13:45,329
oh there is a hash simply ignore this
each the primary

240
00:13:45,329 --> 00:13:48,649
so this x.org 601 on their ability was

241
00:13:48,649 --> 00:13:52,000
was due to the fact that it wasn't Anat
lab a spicy in

242
00:13:52,000 --> 00:13:55,060
in jail I don't actually know there is a
notation we allowed to

243
00:13:55,060 --> 00:13:58,470
represent characters using slash you and
then a.m.

244
00:13:58,470 --> 00:14:02,870
hex value the character so in this
particular case at 23 is a hex code for

245
00:14:02,870 --> 00:14:03,959
hash

246
00:14:03,959 --> 00:14:08,320
so in this case if we do this as you can
see I use a concatenation

247
00:14:08,320 --> 00:14:12,300
if you can catch a nation it actually
result in these been at been actually

248
00:14:12,300 --> 00:14:14,209
translated correctly to hash

249
00:14:14,209 --> 00:14:19,040
and this way what is gonna get
translated into is

250
00:14:19,040 --> 00:14:22,199
session user and then the next one is
gonna an

251
00:14:22,199 --> 00:14:25,620
simply get session and put attributes
user with your value own

252
00:14:25,620 --> 00:14:29,970
right %ah when they report this from
their bill to the way they fixed it is

253
00:14:29,970 --> 00:14:31,300
day s simply

254
00:14:31,300 --> 00:14:35,589
cleared the value stack what it means it
now that the values I said will actually

255
00:14:35,589 --> 00:14:36,940
persist

256
00:14:36,940 --> 00:14:40,500
so I modify staff but it still gets
deleted and

257
00:14:40,500 --> 00:14:45,029
your ex and Natalie I left it at that I
i figured that was insufficient fix

258
00:14:45,029 --> 00:14:46,800
because they should actually

259
00:14:46,800 --> 00:14:51,019
fix the bag underlined by the fact that
I can bypass that but they did

260
00:14:51,019 --> 00:14:54,519
after that about year later I finally
got around to come back to this on their

261
00:14:54,519 --> 00:14:56,940
ability and I looked inside of the OJ in
Elko

262
00:14:56,940 --> 00:15:00,930
so little bit about the OJ n logn alice
is

263
00:15:00,930 --> 00:15:04,820
unrelated third party jar file which was
maintained by someone is no longer

264
00:15:04,820 --> 00:15:06,209
maintained

265
00:15:06,209 --> 00:15:09,399
no one knows what's going on inside the
jar file and

266
00:15:09,399 --> 00:15:12,829
a lot of remarks use it at these two
frameworks for using its in the way they

267
00:15:12,829 --> 00:15:14,130
use it is a simply

268
00:15:14,130 --> 00:15:17,350
get the jar file get source code and
they maintain it

269
00:15:17,350 --> 00:15:21,639
and by maintaining mean they'd the
probably fix bugs and stuff but no one

270
00:15:21,639 --> 00:15:25,290
deeply understand what's actually
happening inside OJ now

271
00:15:25,290 --> 00:15:28,660
so I look inside and you know how the
way by two variables that I showed you

272
00:15:28,660 --> 00:15:30,490
previously like application

273
00:15:30,490 --> 00:15:34,829
and all that they're actually a lot more
internal variables if you look at the

274
00:15:34,829 --> 00:15:35,959
original code

275
00:15:35,959 --> 00:15:39,500
if you look at them one this context one
is member access route

276
00:15:39,500 --> 00:15:43,810
and I told you that there are two
variables that control method execution

277
00:15:43,810 --> 00:15:48,060
one was original context and one was a
secure member access

278
00:15:48,060 --> 00:15:51,970
and if you look here there they act so
I'm

279
00:15:51,970 --> 00:15:57,240
what happens now is that it turns out
that use in my treaties is less you 00

280
00:15:57,240 --> 00:16:01,620
23 we can actually modified two very
important variables

281
00:16:01,620 --> 00:16:04,680
inside OJ L context and secure member
access

282
00:16:04,680 --> 00:16:07,889
and effectively disable I love the

283
00:16:07,889 --> 00:16:12,709
method execution checks and execute
methods just from the Europa rawness

284
00:16:12,709 --> 00:16:16,810
so am simple a simple exploit for this
would be

285
00:16:16,810 --> 00:16:21,709
as has fallen pass context deny method
execution equals falls

286
00:16:21,709 --> 00:16:25,769
a last tragic member access equals two
weekend a

287
00:16:25,769 --> 00:16:29,880
because the full exploit lexilogos
fallen so we we do a last tragic method

288
00:16:29,880 --> 00:16:31,139
was true

289
00:16:31,139 --> 00:16:34,339
its gonna take a at the K here

290
00:16:34,339 --> 00:16:37,920
it's gonna it's gonna sign and and
modify the private moment said it to it

291
00:16:37,920 --> 00:16:39,320
through

292
00:16:39,320 --> 00:16:42,410
next what we do is we actually need to
because when they're

293
00:16:42,410 --> 00:16:46,240
code checks whether you can execute
methods and it takes the value what does

294
00:16:46,240 --> 00:16:48,589
it casts it to bully in

295
00:16:48,589 --> 00:16:51,810
and center operating on strings when he
said this

296
00:16:51,810 --> 00:16:56,430
excusing said this attribute in the map
it's actually said as a string

297
00:16:56,430 --> 00:16:59,649
so when they cast if you put a few
casting into bullion

298
00:16:59,649 --> 00:17:03,589
it's always an exception since you can't
do that so the way we bypass it is by

299
00:17:03,589 --> 00:17:03,959
using

300
00:17:03,959 --> 00:17:07,339
awesome features over OJ now such as at

301
00:17:07,339 --> 00:17:11,370
arbitrary object construction in context
variables so what we do is we construct

302
00:17:11,370 --> 00:17:12,770
bully in class

303
00:17:12,770 --> 00:17:16,579
assign it to fu and then since it
represents false and

304
00:17:16,579 --> 00:17:21,079
assign assign that to the actually did
and cast checks passes Allen

305
00:17:21,079 --> 00:17:25,360
immediately neck so we do simply obtain
rant and call

306
00:17:25,360 --> 00:17:29,669
front and exec and huge a kid victory
operating system commands

307
00:17:29,669 --> 00:17:33,380
the full exploit looks like this

308
00:17:33,380 --> 00:17:37,780
and you have to use a lot of expression
evaluation this practice is features

309
00:17:37,780 --> 00:17:40,919
for Janelle and what it does effective
is it

310
00:17:40,919 --> 00:17:44,710
eg created tmp directory called phone
and

311
00:17:44,710 --> 00:17:47,460
when you see this this is actually
that's what you enter in your browser

312
00:17:47,460 --> 00:17:47,760
right

313
00:17:47,760 --> 00:17:52,169
aunt in your browser sheet and 10 you
operating system commands

314
00:17:52,169 --> 00:17:55,530
interestingly when they're put this on
their ability to catch it took

315
00:17:55,530 --> 00:17:59,100
strats framework which is actually an
open source framework under Apache

316
00:17:59,100 --> 00:18:02,990
exit three months to fix it and there's
a reason for that is in

317
00:18:02,990 --> 00:18:06,590
apparently its tracks and I think some
other projects to

318
00:18:06,590 --> 00:18:11,210
what they do they have so-called Council
Apache strata council and when you fix

319
00:18:11,210 --> 00:18:12,429
something

320
00:18:12,429 --> 00:18:15,789
and you want to release this council has
to actually vote

321
00:18:15,789 --> 00:18:19,210
and you have to get 30 for binding votes
at

322
00:18:19,210 --> 00:18:22,990
that we locate the release and for
whatever reason at that time some people

323
00:18:22,990 --> 00:18:27,169
one vacation some people will go on some
people are simply ignoring the emails

324
00:18:27,169 --> 00:18:30,299
when the person who shakes the
vulnerability and that

325
00:18:30,299 --> 00:18:34,030
finally cut the reason wanted to release
it it took them three months

326
00:18:34,030 --> 00:18:38,669
effectively to vote on it and I kept
emailing everyone a kept telling them

327
00:18:38,669 --> 00:18:41,650
hey guys this is actually pretty bad
it's pretty serious vulnerability the

328
00:18:41,650 --> 00:18:43,850
last by default execute everyone

329
00:18:43,850 --> 00:18:48,820
a.m. arbitrary code and their and they
can ignored it and then they finally got

330
00:18:48,820 --> 00:18:49,890
around to it and

331
00:18:49,890 --> 00:18:53,299
yes after three months so much for open
source security

332
00:18:53,299 --> 00:18:56,880
but at at the same time you could
actually work around

333
00:18:56,880 --> 00:19:01,410
using exclude parameters an attribute of
parameters interceptor

334
00:19:01,410 --> 00:19:04,410
so you can actually supply regular
expression to blacklist the following

335
00:19:04,410 --> 00:19:05,429
characters

336
00:19:05,429 --> 00:19:11,190
and their it would actually make the bag
impossible to explain

337
00:19:11,190 --> 00:19:14,850
any questions about this on their Realty

338
00:19:14,850 --> 00:19:19,320
yet spree precinct 4 spree in the season
at a frame like that

339
00:19:19,320 --> 00:19:23,270
whose name I forget so spring in MBC's
very complex family have a lot of stuff

340
00:19:23,270 --> 00:19:25,090
you can write to each client's

341
00:19:25,090 --> 00:19:29,990
you can write a lot of things and a vet
component of spring is called Spring MVC

342
00:19:29,990 --> 00:19:34,130
amnesty stance model-view-controller and
interestingly the user

343
00:19:34,130 --> 00:19:39,100
a JavaBean API it's a it's an API which
is provided by at the JDK

344
00:19:39,100 --> 00:19:43,450
to work with beads wannabes in Jack in
Java Beans a simple objects

345
00:19:43,450 --> 00:19:48,289
which have set and get methods for acted
so you can have a being called person

346
00:19:48,289 --> 00:19:52,620
which will have first name and last name
so if you have two methods for each

347
00:19:52,620 --> 00:19:53,440
attribute

348
00:19:53,440 --> 00:19:56,820
such as get first name set first name
and

349
00:19:56,820 --> 00:20:00,049
and get last name and get said last name

350
00:20:00,049 --> 00:20:04,220
do properties that will be returned for
these particular object to be first name

351
00:20:04,220 --> 00:20:05,539
and last name

352
00:20:05,539 --> 00:20:08,850
to interest introspection API provides
if you look at the

353
00:20:08,850 --> 00:20:12,309
definition of the introspective it tried
to use two methods wanna

354
00:20:12,309 --> 00:20:16,539
love the messages get been info and you
simply pass the class

355
00:20:16,539 --> 00:20:19,640
and entertains you been info and another
one

356
00:20:19,640 --> 00:20:24,190
is when you pass also in addition to the
class you pass a so-called stop class

357
00:20:24,190 --> 00:20:28,650
which means once interest using
reflection is gonna keep this class

358
00:20:28,650 --> 00:20:31,440
because it does it occur simply it looks
at the parent class

359
00:20:31,440 --> 00:20:35,049
and what did the minute it hits to stop
class is gonna stop looking for more

360
00:20:35,049 --> 00:20:36,789
property

361
00:20:36,789 --> 00:20:41,039
now a lot of people the way they use
this code is just by calling

362
00:20:41,039 --> 00:20:45,080
get been in for and simply supplying the
class and that's it

363
00:20:45,080 --> 00:20:48,610
and that if we have the following
objects such as per cent as I said

364
00:20:48,610 --> 00:20:49,070
earlier

365
00:20:49,070 --> 00:20:52,400
first name last name if we're gonna call
get be named for

366
00:20:52,400 --> 00:20:55,799
on the person class was gonna return is
gonna return

367
00:20:55,799 --> 00:21:00,720
first name last name which a expected
attributes right because that's what

368
00:21:00,720 --> 00:21:02,390
we've had created in the subject but

369
00:21:02,390 --> 00:21:06,380
another tribute is gonna tennis had to
be called class

370
00:21:06,380 --> 00:21:10,830
and when you see you cannot year class
yet whatever

371
00:21:10,830 --> 00:21:14,559
but then what if you look at it class
actually belongs to an object

372
00:21:14,559 --> 00:21:17,750
object right every object in Java
actually inherits from

373
00:21:17,750 --> 00:21:21,210
object eventually so object belongs to
class

374
00:21:21,210 --> 00:21:24,220
Inc a response to it getclass method

375
00:21:24,220 --> 00:21:28,960
that every object in Java had Hess so if
you submit and you go further if you

376
00:21:28,960 --> 00:21:30,250
submit a request which

377
00:21:30,250 --> 00:21:33,450
which is class dogged and Fu something
random

378
00:21:33,450 --> 00:21:37,530
and you break in the bag I there and you
can see what class

379
00:21:37,530 --> 00:21:41,419
what can attribute class returns you
will see that ones activity to attend

380
00:21:41,419 --> 00:21:42,870
this class loader

381
00:21:42,870 --> 00:21:47,159
and this class loader actually do you
corresponds to get classloader method

382
00:21:47,159 --> 00:21:50,640
now if you go further in do class dot
classloader dot

383
00:21:50,640 --> 00:21:53,720
and then look at I love the and then

384
00:21:53,720 --> 00:21:56,909
and properties that it returns you will
see that

385
00:21:56,909 --> 00:22:01,100
is working dear there is and TJ like it
there's jackpot I love those three

386
00:22:01,100 --> 00:22:04,610
correspond to I the ghetto set method so

387
00:22:04,610 --> 00:22:08,039
for example your health a response to
method which is called get

388
00:22:08,039 --> 00:22:12,090
your health interestingly your else
method returns an array

389
00:22:12,090 --> 00:22:16,250
array of your else that that that

390
00:22:16,250 --> 00:22:20,240
and that their on I in the class loader
now

391
00:22:20,240 --> 00:22:23,520
so what happens is it because if the
incorrect usage of API

392
00:22:23,520 --> 00:22:27,620
we can submit an HTTP request as
following:

393
00:22:27,620 --> 00:22:30,890
we can simply to class dog classloader
dot your else

394
00:22:30,890 --> 00:22:34,980
0 equals and the pass to a fire

395
00:22:34,980 --> 00:22:38,010
now you may wanna oh man he is in the
Square in 20

396
00:22:38,010 --> 00:22:41,010
why's it like this what what what's
taking care of everything

397
00:22:41,010 --> 00:22:44,409
well framework is doing all that in the
background when when you

398
00:22:44,409 --> 00:22:48,530
when you refer to your house it's
getting retrieved to get your L's method

399
00:22:48,530 --> 00:22:51,789
it's going to look at the return value
is gonna see that it's actually an array

400
00:22:51,789 --> 00:22:55,669
is going to invoke special handling for
array its gonna pat parse

401
00:22:55,669 --> 00:22:59,740
our square brackets and the index and it
will actually handle all over the magic

402
00:22:59,740 --> 00:23:03,679
and Denise for ice we don't have to
worry about it's part of the freemen

403
00:23:03,679 --> 00:23:07,270
and fortunately this pass is not
actually used

404
00:23:07,270 --> 00:23:11,220
to look for classes the way I in Java
class loading works that when you

405
00:23:11,220 --> 00:23:12,970
request class which has not been loaded

406
00:23:12,970 --> 00:23:17,429
what happens it goes and tries to find
that class well when we modify the past

407
00:23:17,429 --> 00:23:18,140
year

408
00:23:18,140 --> 00:23:21,900
this pass is not actually used to look
for classes

409
00:23:21,900 --> 00:23:25,350
bad it turns out after a little bit of
searching the Jasper

410
00:23:25,350 --> 00:23:29,330
Jaspers ag's PPH compiler by Apache what
does it actually when it

411
00:23:29,330 --> 00:23:33,299
tries to resolve TLD files or or custom
tag libraries

412
00:23:33,299 --> 00:23:36,650
its gonna use our URL to resolve and
look for them

413
00:23:36,650 --> 00:23:40,029
so there are two problems here a we need
to figure out how to execute arbitrary

414
00:23:40,029 --> 00:23:42,409
code using TLD files

415
00:23:42,409 --> 00:23:45,809
and second is how do we as a player
remotely remote

416
00:23:45,809 --> 00:23:49,090
attacker controlled to.the right

417
00:23:49,090 --> 00:23:52,990
so I had to execute code a the way it
works in john is a teal defile

418
00:23:52,990 --> 00:23:57,980
at as you can see below here with you
the file that is still the file defines

419
00:23:57,980 --> 00:24:01,039
tags: and tells you which code handles

420
00:24:01,039 --> 00:24:04,570
staggs and when you say which code
handles the Stags

421
00:24:04,570 --> 00:24:08,919
you can specify i the class name against
black specified Attack File

422
00:24:08,919 --> 00:24:13,730
and here's what we do here we say that
input tag in the JSP page

423
00:24:13,730 --> 00:24:16,850
is gonna be handled by slash MITI slash
tax

424
00:24:16,850 --> 00:24:21,650
input dog tag and let's get weird jasper
is gonna do is there

425
00:24:21,650 --> 00:24:26,659
just was gonna go open at file and
executed before because tax files a

426
00:24:26,659 --> 00:24:29,279
factory just simple Java text class

427
00:24:29,279 --> 00:24:33,090
so you can actually Supplier betray Java
code inside tech path

428
00:24:33,090 --> 00:24:36,400
so this is our sample an simple tax Paso

429
00:24:36,400 --> 00:24:40,510
boom we solve the problem of how to use
a cute code remote we can do it by

430
00:24:40,510 --> 00:24:43,600
attack files and and if i TLD

431
00:24:43,600 --> 00:24:46,909
how do you supply remotely an attacker
controlled I well it turns out that

432
00:24:46,909 --> 00:24:48,710
inside the use the URL class

433
00:24:48,710 --> 00:24:52,539
in N'Djamena the URL class is actually
capable of doing a lot of things

434
00:24:52,539 --> 00:24:56,190
and one other thing is capable of doing
is that if you supply that Uriel right

435
00:24:56,190 --> 00:24:56,919
there

436
00:24:56,919 --> 00:25:00,640
Jack callin HTTP attackers Creek at
springform TV

437
00:25:00,640 --> 00:25:04,120
was gonna go is gonna transplant before
you go

438
00:25:04,120 --> 00:25:08,299
send an HTTP request two attackers host
retrieve the jar file

439
00:25:08,299 --> 00:25:11,480
open the jar file and see if the jar
file

440
00:25:11,480 --> 00:25:14,549
and for you can have a happen absolutely
transparently

441
00:25:14,549 --> 00:25:18,549
the code doesn't know that is dealing
with remote Co

442
00:25:18,549 --> 00:25:22,450
and interestingly the attack files the
ones I've shown you area our troops on

443
00:25:22,450 --> 00:25:23,610
the same jar file

444
00:25:23,610 --> 00:25:27,000
to the full exploit for these will
actually look like

445
00:25:27,000 --> 00:25:30,190
this with download the as spring servlet

446
00:25:30,190 --> 00:25:34,580
Servlet code and said that's percent let
go we have a teal defile followed the

447
00:25:34,580 --> 00:25:35,860
springform tax

448
00:25:35,860 --> 00:25:39,779
things like form input form text field
form

449
00:25:39,779 --> 00:25:43,789
form what we do is we edit this spring
form to: defile

450
00:25:43,789 --> 00:25:46,830
modify all the tax 2.2 our input

451
00:25:46,830 --> 00:25:50,330
tag file we create the following Attack
File

452
00:25:50,330 --> 00:25:53,870
which will simply execute our arbitrary
code would bundle back everything

453
00:25:53,870 --> 00:25:55,809
together into spring form jar

454
00:25:55,809 --> 00:25:59,210
will put it on attackers host and then
with them me

455
00:25:59,210 --> 00:26:03,460
the following form request which gets
fired before in control it

456
00:26:03,460 --> 00:26:07,360
we override the URL for next time when
someone the request

457
00:26:07,360 --> 00:26:10,809
a JSP page which has not been compiled

458
00:26:10,809 --> 00:26:14,750
what it was gonna happen is G jasper is
gonna go

459
00:26:14,750 --> 00:26:18,830
and start looking for the two packs a
day using and its gonna try to resolve

460
00:26:18,830 --> 00:26:21,940
those tags and when it's gonna try to
resolve this tax is actually gonna

461
00:26:21,940 --> 00:26:25,820
go and that look into wanna buy your
else to try to resolve it and we're

462
00:26:25,820 --> 00:26:26,380
gonna give

463
00:26:26,380 --> 00:26:31,320
what it wants and boom out could get
executed

464
00:26:31,320 --> 00:26:35,350
the way you do anyway you correctly fix
this right at least that you would think

465
00:26:35,350 --> 00:26:36,100
so

466
00:26:36,100 --> 00:26:39,600
would be Bice by supplying to stop class
like in this case here

467
00:26:39,600 --> 00:26:43,820
so we say out get has been informed
person class but stop at objects don't

468
00:26:43,820 --> 00:26:46,919
show a senior object attributes

469
00:26:46,919 --> 00:26:51,690
guess how they fixed it spring simply
blacklisted class taught class loader

470
00:26:51,690 --> 00:26:56,010
mister specifying that and ask them why
they did that they said that because

471
00:26:56,010 --> 00:26:57,640
sometimes people want to access

472
00:26:57,640 --> 00:27:02,870
a class name used in class object so
they do class taught me

473
00:27:02,870 --> 00:27:06,669
sold obviously the question is why you
couldn't just why police that as opposed

474
00:27:06,669 --> 00:27:08,220
to blacklisting that

475
00:27:08,220 --> 00:27:12,320
but and it that's the opposite to the
Quick made quickly fix this on their

476
00:27:12,320 --> 00:27:13,090
ability

477
00:27:13,090 --> 00:27:16,140
interesting thing about this if you do
code search for these there it's a very

478
00:27:16,140 --> 00:27:17,179
common pattern

479
00:27:17,179 --> 00:27:22,520
LN a lot of code as it so Jasper adenine
JSP pages you can have a set property

480
00:27:22,520 --> 00:27:24,799
attributes which allows you to do the
same said

481
00:27:24,799 --> 00:27:28,700
RB two properties the use this API
corrected pretty much

482
00:27:28,700 --> 00:27:32,520
muster the freemen saluted the use this
API correctly

483
00:27:32,520 --> 00:27:35,860
so yeah if you use this code make sure
you

484
00:27:35,860 --> 00:27:40,630
use it correctly in space fast topless
any questions about this

485
00:27:40,630 --> 00:27:45,330
on their beauty see it's gotta be a
better way to exploit it

486
00:27:45,330 --> 00:27:50,210
then that waiting for that and compiled
a JSP page is better

487
00:27:50,210 --> 00:27:53,549
I'm shows possible and so on we will
look at it

488
00:27:53,549 --> 00:27:58,110
tabor seem very interesting may just him
back so before we actually proceed

489
00:27:58,110 --> 00:28:01,299
quick interaction into a reflection

490
00:28:01,299 --> 00:28:05,429
so what reflection as in general
election allows you to

491
00:28:05,429 --> 00:28:09,700
look at the class obtain a class that
represents that class

492
00:28:09,700 --> 00:28:13,279
well represents that object and
enumerate I love the methods

493
00:28:13,279 --> 00:28:17,230
I love the fields that this class has so
that you can

494
00:28:17,230 --> 00:28:21,230
arbitrarily invoke laboratory methods
you can even access private fields and

495
00:28:21,230 --> 00:28:22,700
do a lot of crazy things is

496
00:28:22,700 --> 00:28:27,580
reflection in this particular case we
take this training class

497
00:28:27,580 --> 00:28:31,909
and we look for a method called length
and

498
00:28:31,909 --> 00:28:34,909
as you can see we do class don't get
declared method length

499
00:28:34,909 --> 00:28:38,419
with the would get declared method and

500
00:28:38,419 --> 00:28:42,659
returns is a method instance and if you
want to invoke that message we simply do

501
00:28:42,659 --> 00:28:44,220
Lance mad dog invoke

502
00:28:44,220 --> 00:28:48,230
as a first actually did you have to pass
an instance on which to involve that

503
00:28:48,230 --> 00:28:52,590
invoke that netted in this case you say
0 invoke it on the string instance we

504
00:28:52,590 --> 00:28:53,429
have constructed

505
00:28:53,429 --> 00:28:59,100
by Guinea invoke it and return you the
value which you cast into did you get it

506
00:28:59,100 --> 00:29:03,279
Bay simple well it is pretty simple if
you look at it

507
00:29:03,279 --> 00:29:06,380
here J bussey another very popular
framework

508
00:29:06,380 --> 00:29:12,020
an it combines Egbe series JSS whatever
that means

509
00:29:12,020 --> 00:29:15,409
then it but they do these poachers as so
that means

510
00:29:15,409 --> 00:29:18,360
what you do is you don't write servlet
anymore with iraq as you read

511
00:29:18,360 --> 00:29:19,130
controllers

512
00:29:19,130 --> 00:29:23,399
see iraq simple Java object which has a
method to test something

513
00:29:23,399 --> 00:29:26,860
and you annotated you say oh this is a
controller dispatch

514
00:29:26,860 --> 00:29:30,419
and that framework is gonna
automatically discover

515
00:29:30,419 --> 00:29:33,470
I love you control this upon loading

516
00:29:33,470 --> 00:29:37,330
see don't have to create any on the
configuration file say no this filed

517
00:29:37,330 --> 00:29:42,110
described as these in these guys that it
automatically discovers it

518
00:29:42,110 --> 00:29:45,580
an initiative interesting thing it does
it does at it has a JBoss

519
00:29:45,580 --> 00:29:48,870
X unified expression language remember
head OJ NL

520
00:29:48,870 --> 00:29:52,809
in an abstract so here they actually
created their own

521
00:29:52,809 --> 00:29:56,529
and the minute you see custom expression
language

522
00:29:56,529 --> 00:30:00,460
in the framework this is the first thing
you have to look at because

523
00:30:00,460 --> 00:30:04,260
chances that the use it so extensively
that they forgot

524
00:30:04,260 --> 00:30:08,409
an the trash founders at some point
somewhere in the Co

525
00:30:08,409 --> 00:30:11,860
JBoss expression language here's how
expression looks like to YouTube right

526
00:30:11,860 --> 00:30:13,179
hash and then

527
00:30:13,179 --> 00:30:16,720
curly brackets and you put your
expression in their supports method

528
00:30:16,720 --> 00:30:17,220
calling

529
00:30:17,220 --> 00:30:20,529
so you cannot simply randomly call and
methods like

530
00:30:20,529 --> 00:30:23,539
java.lang.runtimeexception: runtime:
because

531
00:30:23,539 --> 00:30:26,970
at the object you're calling it on has
to be actually defined

532
00:30:26,970 --> 00:30:31,440
a predefined so you do it several
predefined objects like request sessions

533
00:30:31,440 --> 00:30:33,690
and Sat said Rep

534
00:30:33,690 --> 00:30:36,799
as usual it has continued support so if
your method

535
00:30:36,799 --> 00:30:40,940
or your your call the returns any sort
of containing beat an array and Matt

536
00:30:40,940 --> 00:30:42,750
list

537
00:30:42,750 --> 00:30:46,559
she's mean anything and they can
automatically index it and support for

538
00:30:46,559 --> 00:30:47,299
UN

539
00:30:47,299 --> 00:30:51,630
and do all the basically so it turned
out

540
00:30:51,630 --> 00:30:54,630
after looking and step into the code it
turns out that there is a special

541
00:30:54,630 --> 00:30:55,620
parameter called

542
00:30:55,620 --> 00:31:00,549
action out can and if this parameter
action outcomes back to the slash

543
00:31:00,549 --> 00:31:03,840
then it it can it denotes a relative URL

544
00:31:03,840 --> 00:31:08,210
and then every value up the URL that you
supply

545
00:31:08,210 --> 00:31:11,809
every chick people at a value of the URL
you supplied

546
00:31:11,809 --> 00:31:14,990
is gonna be so-called interpolated
meaning

547
00:31:14,990 --> 00:31:18,330
I love the JBoss expressions that you
have a net URL

548
00:31:18,330 --> 00:31:23,019
gonna be executed for you and this is
externally cheaper and

549
00:31:23,019 --> 00:31:27,220
so it's a want to execute this
particular expression as an example

550
00:31:27,220 --> 00:31:30,409
for souley URL encoded after this week

551
00:31:30,409 --> 00:31:34,570
as I said it's HP parameter values to
create a parameter called poland

552
00:31:34,570 --> 00:31:39,470
equals and then that value

553
00:31:39,470 --> 00:31:43,120
and then as follows: if we should meet
this request so slash and whatever seem

554
00:31:43,120 --> 00:31:44,549
application handler

555
00:31:44,549 --> 00:31:47,549
then we do action out can slash and then
the URL

556
00:31:47,549 --> 00:31:51,159
NH parameters our code gets executed now
the question is

557
00:31:51,159 --> 00:31:55,570
how can we execute operating system
commands in this case goes

558
00:31:55,570 --> 00:31:58,870
it appears as if you can sing you can
only call methods

559
00:31:58,870 --> 00:32:04,269
on the AM predefined objects so you can
simply call javelin runtime:

560
00:32:04,269 --> 00:32:08,730
class Java is not actually registered as
a predefined object

561
00:32:08,730 --> 00:32:12,559
so it turns out that there is a awesome
teaching reflection

562
00:32:12,559 --> 00:32:17,120
at once you obtain class and every
object has a get classmate

563
00:32:17,120 --> 00:32:20,330
the class object has a method called for
any

564
00:32:20,330 --> 00:32:24,370
which returns you another class instance
and 24 name you can pass

565
00:32:24,370 --> 00:32:28,080
arbitrary class names so I

566
00:32:28,080 --> 00:32:32,480
and and the line below here there you
can see we do have you don't get class

567
00:32:32,480 --> 00:32:35,779
dot for name java.lang.runtimeexception:

568
00:32:35,779 --> 00:32:40,470
and they say we actually get access to
the runtime rant and class

569
00:32:40,470 --> 00:32:43,539
why forget access to the right time
class I showed you earlier we need to

570
00:32:43,539 --> 00:32:44,200
find

571
00:32:44,200 --> 00:32:47,220
corresponding methods love these love
this

572
00:32:47,220 --> 00:32:51,190
up the above the love the inside if they
read that want to execute

573
00:32:51,190 --> 00:32:54,799
so the exploit will be as follows: we
call Java

574
00:32:54,799 --> 00:32:58,539
view getclass for name

575
00:32:58,539 --> 00:33:02,090
runtime: they would do don't get
declared method

576
00:33:02,090 --> 00:33:05,440
once we get get declared message when it
does it actually returns an array

577
00:33:05,440 --> 00:33:11,890
array of methods was there and mess it
is done what we do is we simply index it

578
00:33:11,890 --> 00:33:18,429
we say 19th element in the IRA returns
by get declared method

579
00:33:18,429 --> 00:33:21,909
and we simply call invoke and it will
invoke the

580
00:33:21,909 --> 00:33:25,760
nineties method on-air on the

581
00:33:25,760 --> 00:33:29,390
up the around 10 class if you execute
static

582
00:33:29,390 --> 00:33:33,419
static method you do need to provide
instance you can just provide now

583
00:33:33,419 --> 00:33:37,230
said it so you do when you get a runtime
instance now

584
00:33:37,230 --> 00:33:40,309
so at in this particular case in order
for us to call

585
00:33:40,309 --> 00:33:44,360
java.lang.runtimeexception: 22 to do two
things we need to obtain a reference to

586
00:33:44,360 --> 00:33:45,340
run time:

587
00:33:45,340 --> 00:33:49,179
because exec method is action is
actually not a static method

588
00:33:49,179 --> 00:33:53,919
it's an instant but the way we get there
on time is by calling a static method

589
00:33:53,919 --> 00:33:57,010
at runtime dog get there on time

590
00:33:57,010 --> 00:34:01,840
I know its confusing anyway so you may
wonder so how do we know all those

591
00:34:01,840 --> 00:34:06,240
in this is right how do we know that
exact method to is that index 19

592
00:34:06,240 --> 00:34:11,230
or are it will be different between
classes in different versions of Java

593
00:34:11,230 --> 00:34:14,960
it's actually cool because you know
what's the point of this feature it

594
00:34:14,960 --> 00:34:17,970
probably is is when you specify action
Alcan

595
00:34:17,970 --> 00:34:22,359
so that you could redirect user to a
page that is C

596
00:34:22,359 --> 00:34:25,480
a specific to them for example if they
have organization ID

597
00:34:25,480 --> 00:34:30,560
you can dynamically Retief organization
AG by using the JBoss expression such as

598
00:34:30,560 --> 00:34:33,839
an .org.ag for example if we call this

599
00:34:33,839 --> 00:34:37,250
what's gonna happen is it we're gonna
get actually redirected because that's

600
00:34:37,250 --> 00:34:40,970
what it's supposed to do its gonna say
oh action out camp sweet

601
00:34:40,970 --> 00:34:44,649
are you wanna read it to see book in up
on that XHTML

602
00:34:44,649 --> 00:34:47,679
sweet the parameters phone equals and

603
00:34:47,679 --> 00:34:51,889
here's the output of the JBoss
expression that you supply

604
00:34:51,889 --> 00:34:55,310
so in this case it simply to stream call

605
00:34:55,310 --> 00:34:59,579
for the method so in this particular
case the method if we refer to nineties

606
00:34:59,579 --> 00:35:00,119
method

607
00:35:00,119 --> 00:35:04,190
by just looking at the output what can
you tell me it's an exec method

608
00:35:04,190 --> 00:35:07,270
right and the argument that it takes is
a strain

609
00:35:07,270 --> 00:35:11,510
exactly what we won string is operating
system command

610
00:35:11,510 --> 00:35:16,720
and very direct I mean just redirect the
browser so the full exploit for this is

611
00:35:16,720 --> 00:35:20,400
is like this so we do get runtime: we
call

612
00:35:20,400 --> 00:35:23,880
nineties method invoke and then inside
of that

613
00:35:23,880 --> 00:35:28,490
we need to pass an argument right to to
iraq time instance in which involve the

614
00:35:28,490 --> 00:35:29,410
exact method

615
00:35:29,410 --> 00:35:32,950
to this who makes it make it more
difficult family a slightly easier so

616
00:35:32,950 --> 00:35:37,230
first we obtain the call the exact
method but it because exec is actually

617
00:35:37,230 --> 00:35:37,869
AM

618
00:35:37,869 --> 00:35:41,890
non-static method we have to pass an
instant solely due to a colleague at

619
00:35:41,890 --> 00:35:42,599
runtime

620
00:35:42,599 --> 00:35:47,079
at method and is she at past now to
invoke

621
00:35:47,079 --> 00:35:50,859
because it a it doesn't take any
arguments and be too static method

622
00:35:50,859 --> 00:35:52,500
doesn't need any instant

623
00:35:52,500 --> 00:35:57,280
and the third argument is simply a
command that we want to execute

624
00:35:57,280 --> 00:36:01,060
and that's it he supplied on their on
the on the URL

625
00:36:01,060 --> 00:36:04,280
this is the full exploit see simply do
seem

626
00:36:04,280 --> 00:36:08,320
seen booking is a sample application
that it can be seen

627
00:36:08,320 --> 00:36:11,440
you do Honda team action out concept
specify your Allen

628
00:36:11,440 --> 00:36:15,170
and do and I'm gonna show you a damn lie
demoss another impressive

629
00:36:15,170 --> 00:36:18,599
with with on their bill dislike this

630
00:36:18,599 --> 00:36:22,070
is all you do is to simply enter your
email

631
00:36:22,070 --> 00:36:25,530
so I copied festival to make sure

632
00:36:25,530 --> 00:36:30,339
on line the

633
00:36:30,339 --> 00:36:36,410
Lessman SLT people and there is no size
directory

634
00:36:36,410 --> 00:36:42,280
ago here end to the year as you can see
it to come and just like I showed you in

635
00:36:42,280 --> 00:36:42,839
a piece

636
00:36:42,839 --> 00:36:47,369
we call in key MKD your opponent get
declared message 7

637
00:36:47,369 --> 00:36:50,560
Lana hit enter what we get

638
00:36:50,560 --> 00:36:54,619
in return is as you can see we get
redirected to a URL and with what you

639
00:36:54,619 --> 00:36:55,230
see here

640
00:36:55,230 --> 00:37:00,190
is that to street output of what was
produced when you call exact method when

641
00:37:00,190 --> 00:37:02,710
it returns it returns UNIX process class

642
00:37:02,710 --> 00:37:06,420
because it executed operating system
command and that's all we Gott

643
00:37:06,420 --> 00:37:10,270
UNIX process right here and then the air

644
00:37:10,270 --> 00:37:16,960
less moon the director was created so
code was executed from the browser

645
00:37:16,960 --> 00:37:20,589
and the set name

646
00:37:20,589 --> 00:37:23,640
as impressive to eat so I'm

647
00:37:23,640 --> 00:37:27,390
what does it tell us to tell her that
Javert vulnerabilities account a complex

648
00:37:27,390 --> 00:37:28,270
right

649
00:37:28,270 --> 00:37:31,660
that there is so much code and that we
we've assumed that

650
00:37:31,660 --> 00:37:35,000
because it's jamming it doesn't have
inherent problems like

651
00:37:35,000 --> 00:37:38,560
for example C&C class class applications
where

652
00:37:38,560 --> 00:37:42,359
you you had need to worry about memory
management and bounds checking and all

653
00:37:42,359 --> 00:37:43,140
that

654
00:37:43,140 --> 00:37:46,859
we shall we assume that the worst thing
that can happen is XSS vulnerability

655
00:37:46,859 --> 00:37:48,420
access a raft

656
00:37:48,420 --> 00:37:52,440
maybe some access control issues bad we
can assume that

657
00:37:52,440 --> 00:37:55,680
no one's gonna pop a shell any
obligation and then and then on your

658
00:37:55,680 --> 00:37:57,670
right

659
00:37:57,670 --> 00:38:00,760
luckily unlike other languages Java

660
00:38:00,760 --> 00:38:04,660
thanks to the way it was originally
designed and what it was designed for

661
00:38:04,660 --> 00:38:08,099
an app lets java app lets has a feature

662
00:38:08,099 --> 00:38:11,410
at a facility called Java security
manager

663
00:38:11,410 --> 00:38:14,800
with Joe security manager is is
effectively a single tone

664
00:38:14,800 --> 00:38:18,450
which is set on their all love the
runtime

665
00:38:18,450 --> 00:38:22,730
speak all assistant dot said security
managing you provide an instance of

666
00:38:22,730 --> 00:38:23,950
security manager

667
00:38:23,950 --> 00:38:29,329
and then I love the classes at access
critical resources such as files

668
00:38:29,329 --> 00:38:32,430
sockets class loaders and all that

669
00:38:32,430 --> 00:38:35,770
they have a chance that looks like this
so they simply check with the security

670
00:38:35,770 --> 00:38:37,540
manages not now

671
00:38:37,540 --> 00:38:40,670
and if it's not now they're gonna call a
corresponding check method

672
00:38:40,670 --> 00:38:45,349
for example if we have a prices build a
class which executes operating system

673
00:38:45,349 --> 00:38:46,170
commands

674
00:38:46,170 --> 00:38:49,970
before its gonna execute anything as a
check

675
00:38:49,970 --> 00:38:53,470
if security manages set gonna call check
exec and we're gonna pass

676
00:38:53,470 --> 00:38:57,369
the path to a file that we're trying to
educate it securely manage to find an

677
00:38:57,369 --> 00:38:59,250
exception it's sooo this is disallowed

678
00:38:59,250 --> 00:39:03,960
it can store security exception and the
action is not going to be carried out

679
00:39:03,960 --> 00:39:08,410
really awesome a really awesome I am
facilities can I like said boxing be a

680
00:39:08,410 --> 00:39:09,540
building to

681
00:39:09,540 --> 00:39:12,920
the an into the language I've done on my
blog

682
00:39:12,920 --> 00:39:16,130
little survey by no means a conclusive
survey

683
00:39:16,130 --> 00:39:19,859
but at 27 people took it and I love them
only

684
00:39:19,859 --> 00:39:24,849
seven people were actually using a job
security managing in the application

685
00:39:24,849 --> 00:39:28,500
and to have much more than more than
half

686
00:39:28,500 --> 00:39:32,770
day said the couldn't get it to work or
the performance impact was too

687
00:39:32,770 --> 00:39:38,359
too high so the question is why no one
is using it if it's awesome and so great

688
00:39:38,359 --> 00:39:41,890
as several problems for civil its
originally was designed to run and

689
00:39:41,890 --> 00:39:43,070
trusted code

690
00:39:43,070 --> 00:39:47,060
and your application that you have
created is not very and trusted code

691
00:39:47,060 --> 00:39:47,700
right

692
00:39:47,700 --> 00:39:51,160
it's a trusted go with potential for
vulnerabilities

693
00:39:51,160 --> 00:39:55,660
and because because if the assumption
that its untrusted code they have checks

694
00:39:55,660 --> 00:39:59,460
like this building two things you don't
really care about

695
00:39:59,460 --> 00:40:03,280
sowie everytime ecosystem dont get
property its gonna call to

696
00:40:03,280 --> 00:40:06,890
at calling to security manager every
time you

697
00:40:06,890 --> 00:40:10,140
do you use reflection its gonna call
into security manager every time you

698
00:40:10,140 --> 00:40:11,890
create a custom classloader

699
00:40:11,890 --> 00:40:15,730
its gonna call into security manager so
it adds up and the performance impact

700
00:40:15,730 --> 00:40:17,440
there was some research done

701
00:40:17,440 --> 00:40:21,490
just one paper the bursaries by someone
very useless because what they said the

702
00:40:21,490 --> 00:40:22,589
performance impact from

703
00:40:22,589 --> 00:40:25,940
to to 100 percent so

704
00:40:25,940 --> 00:40:29,910
so and from that perspective depending
on the policy in depending on how many

705
00:40:29,910 --> 00:40:31,109
rules you have

706
00:40:31,109 --> 00:40:34,690
impact out on the performance can be
quite significant

707
00:40:34,690 --> 00:40:38,640
another problem is it permissions
assigned by Jars

708
00:40:38,640 --> 00:40:41,869
so that means if you have a giant say
you have

709
00:40:41,869 --> 00:40:45,930
web or a jar and if OJ Mayo was bundled
into the board jar

710
00:40:45,930 --> 00:40:49,280
there's no way you could actually
distinguish the two you have to

711
00:40:49,280 --> 00:40:52,700
and bundle it bundle it in two separate
Giants and that's how you assign

712
00:40:52,700 --> 00:40:55,550
privileges

713
00:40:55,550 --> 00:40:58,569
and now the problem is that yet another
problem is there

714
00:40:58,569 --> 00:41:02,420
socal privilege blocks and then several
issues were discovered do that

715
00:41:02,420 --> 00:41:06,540
no se ni koi if you've seen a slight
lead slightly different perspective

716
00:41:06,540 --> 00:41:11,270
she because he's attacking an his attack
in so-called an

717
00:41:11,270 --> 00:41:14,760
at let but he found some really amazing
when their abilities

718
00:41:14,760 --> 00:41:18,119
with Java where he was able to in
addition to find in

719
00:41:18,119 --> 00:41:21,369
a simple mission access context he was
able to

720
00:41:21,369 --> 00:41:25,780
I landed by Juve objects in such a way
in Cheney bunch of calls in such a way

721
00:41:25,780 --> 00:41:26,940
that he would get

722
00:41:26,940 --> 00:41:31,020
elevated privileges an really good stuff

723
00:41:31,020 --> 00:41:34,609
nasa how do we solve this problem weld
two solos problem what we can do in

724
00:41:34,609 --> 00:41:35,790
Javea as usual

725
00:41:35,790 --> 00:41:39,950
we can extend the Jets Security Manager
class and create our own class

726
00:41:39,950 --> 00:41:43,599
which will do things that we care about
so what are some of the key things we

727
00:41:43,599 --> 00:41:44,579
don't care about

728
00:41:44,579 --> 00:41:48,359
we don't care about class loaders we
don't care if you up ligation is

729
00:41:48,359 --> 00:41:50,130
creating custom classloader

730
00:41:50,130 --> 00:41:54,890
because BS it's your obligation its Yoko
if they can create a classloader they

731
00:41:54,890 --> 00:41:55,500
can

732
00:41:55,500 --> 00:41:59,040
in in ap lit mode if they can create a
classloader they can assigned arbitrary

733
00:41:59,040 --> 00:42:00,520
permissions d

734
00:42:00,520 --> 00:42:04,599
since we don't care but classloader even
they cannot we use our own permission

735
00:42:04,599 --> 00:42:05,940
model internally

736
00:42:05,940 --> 00:42:09,980
we don't care they can assign all
privileges we don't look at them at all

737
00:42:09,980 --> 00:42:13,119
we not gonna care but do privileged look
when they gonna care but protection

738
00:42:13,119 --> 00:42:14,839
domains in the love this context

739
00:42:14,839 --> 00:42:18,010
well we're gonna care by is gonna care
but file access

740
00:42:18,010 --> 00:42:21,520
and when I mean file accesses reading
files right and fast executing

741
00:42:21,520 --> 00:42:26,220
our OS commands organic hair is socket
access when you find a socket

742
00:42:26,220 --> 00:42:31,630
when you connect my socket and now we're
gonna care little bit about reflection

743
00:42:31,630 --> 00:42:35,250
and will and the additional cool feature
we're gonna support is gonna support

744
00:42:35,250 --> 00:42:38,250
ability to assign privileges based in
class me

745
00:42:38,250 --> 00:42:41,560
so if you want to assign one very
sensitive permission for example wanna

746
00:42:41,560 --> 00:42:42,819
be a Class S

747
00:42:42,819 --> 00:42:47,390
absolutely has to invoke being a sage
using exact method and

748
00:42:47,390 --> 00:42:51,690
I have seen that if if if you could
absolutely has to do that where you can

749
00:42:51,690 --> 00:42:53,290
do is you can assign

750
00:42:53,290 --> 00:42:57,660
that one privilege teach you'd been sh2
only one class

751
00:42:57,660 --> 00:43:01,670
and and now when secure when security
manager is gonna be

752
00:43:01,670 --> 00:43:05,339
making checks and is getting its fine no
some was trying to execute code it can

753
00:43:05,339 --> 00:43:07,589
actually inspect the stack trace and say
oh

754
00:43:07,589 --> 00:43:10,790
is that class on the stack

755
00:43:10,790 --> 00:43:13,800
and the reason why we're gonna care
about perfection is because it was a

756
00:43:13,800 --> 00:43:15,869
reflection you can actually disable

757
00:43:15,869 --> 00:43:19,270
Security Manager see can do things like
this

758
00:43:19,270 --> 00:43:23,560
and security manzi in the in using
reflection you can get a.m.

759
00:43:23,560 --> 00:43:27,440
security feel because security manages
effectively just it

760
00:43:27,440 --> 00:43:31,470
private field on their on the system
class you can do that

761
00:43:31,470 --> 00:43:34,859
you can make it said accessible that
means if you even though its products I

762
00:43:34,859 --> 00:43:37,339
i want is to modify it and said it turn
out

763
00:43:37,339 --> 00:43:41,210
and that's effectively disable security
made it so we're going to prevent that

764
00:43:41,210 --> 00:43:44,730
what are the price said addresses
performance concerts cuz now

765
00:43:44,730 --> 00:43:48,740
for things you don't care bout the
minute the call into security manages

766
00:43:48,740 --> 00:43:49,170
made

767
00:43:49,170 --> 00:43:53,050
it immediately returns getting them to
method because we don't care about this

768
00:43:53,050 --> 00:43:56,300
so it's a sort out some other
performance a issues

769
00:43:56,300 --> 00:43:59,940
at it solves the permission assignment
problem because it allows you to do that

770
00:43:59,940 --> 00:44:01,670
by classes:

771
00:44:01,670 --> 00:44:06,280
and will detect interesting bags ride a
bike you care about a path reversal in

772
00:44:06,280 --> 00:44:07,140
their abilities

773
00:44:07,140 --> 00:44:10,690
code execution vulnerability just like
the 1i showed you

774
00:44:10,690 --> 00:44:13,810
and external XML entity inclusion
vulnerabilities

775
00:44:13,810 --> 00:44:17,670
and et cetera so it will catch all that
interesting back to care about

776
00:44:17,670 --> 00:44:20,650
the problem is that it's not gonna solve
problems like this a few running

777
00:44:20,650 --> 00:44:22,349
internet banking application

778
00:44:22,349 --> 00:44:27,150
and I am an attacker and i download I
love the jar files for the obligation

779
00:44:27,150 --> 00:44:30,910
I reverse them and then after that I
figure out that you have a special class

780
00:44:30,910 --> 00:44:31,480
called

781
00:44:31,480 --> 00:44:36,339
band transaction which encapsulates I
love their PCs in calling

782
00:44:36,339 --> 00:44:40,770
calling into the database and updating
my balance if I do this

783
00:44:40,770 --> 00:44:44,700
using the code that I can execute and if
I do the security manager

784
00:44:44,700 --> 00:44:48,410
obviously is not gonna catch that but
the chances of above the attack it

785
00:44:48,410 --> 00:44:49,800
regained some alerts

786
00:44:49,800 --> 00:44:52,920
for you before he gets to that point is
very hikers

787
00:44:52,920 --> 00:44:55,990
once you get the remote code execution
somewhere you wanna make sure you

788
00:44:55,990 --> 00:44:57,170
actually have it

789
00:44:57,170 --> 00:45:00,280
see probably gonna go try to do a last
somewhere

790
00:45:00,280 --> 00:45:04,560
you get attracted to you namely gonna
try to open EC password

791
00:45:04,560 --> 00:45:08,780
and when you do it add you will have an
alert for that

792
00:45:08,780 --> 00:45:12,640
have open source code it's right here
see if you use an application you can't

793
00:45:12,640 --> 00:45:13,079
ride

794
00:45:13,079 --> 00:45:16,160
trained you to try and use it and
ideally

795
00:45:16,160 --> 00:45:19,450
if we could work on makin policy

796
00:45:19,450 --> 00:45:22,520
really nice and easy to do for standard

797
00:45:22,520 --> 00:45:26,670
engines such as tom cat in JBoss they'll
be great

798
00:45:26,670 --> 00:45:30,829
and before we part some ideas for usage
of a must have been ignored

799
00:45:30,829 --> 00:45:34,589
for a lot of time but Delhi actually now
more than job right so many cool

800
00:45:34,589 --> 00:45:35,170
features

801
00:45:35,170 --> 00:45:39,390
that allow you to do instrumentation it
allows you to instrument classes

802
00:45:39,390 --> 00:45:43,109
after they've been loaded into s see can
do cool things like change

803
00:45:43,109 --> 00:45:46,700
dynamic taint propagation and all that
as far as I know there are some

804
00:45:46,700 --> 00:45:52,420
companies that do that but and there's
no open public implementation of this

805
00:45:52,420 --> 00:45:55,480
and in addition to that as you've seen a
lot of these vulnerabilities

806
00:45:55,480 --> 00:45:59,190
they require you to have certain special
set of characters in it

807
00:45:59,190 --> 00:46:02,880
so what you can do is you can modify an
instrument the street class

808
00:46:02,880 --> 00:46:06,730
after he's been loaded to always return
true to whatever

809
00:46:06,730 --> 00:46:10,200
code is asking for safe code is asking
that the value

810
00:46:10,200 --> 00:46:13,480
is there is a substring like with Slash
or something like this:

811
00:46:13,480 --> 00:46:17,119
you can always return true in and then
create such an object

812
00:46:17,119 --> 00:46:21,400
dynamically so this where you can
actually track how the input track

813
00:46:21,400 --> 00:46:26,089
travels the application and it
potentially can provide you love clues

814
00:46:26,089 --> 00:46:30,619
what's happening yep and is there any
questions I'll be more than happy to

815
00:46:30,619 --> 00:46:37,619
answer them

816
00:46:37,960 --> 00:46:38,599
sweet thank you

