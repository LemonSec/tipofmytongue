1
00:00:04,380 --> 00:00:07,379
good morning everyone so this talk I

2
00:00:07,379 --> 00:00:09,599
expected it to go two ways either it's

3
00:00:09,599 --> 00:00:11,580
quite full or almost no one is here

4
00:00:11,580 --> 00:00:13,500
because kubernetes is always something

5
00:00:13,500 --> 00:00:16,320
either very interesting or very scary

6
00:00:16,320 --> 00:00:19,320
for people so I'm happy to see that

7
00:00:19,320 --> 00:00:21,779
quite a lot of people chose to stop by

8
00:00:21,779 --> 00:00:23,520
so

9
00:00:23,520 --> 00:00:25,199
let me tell you a little bit about

10
00:00:25,199 --> 00:00:28,199
kubernetes deployments and actually what

11
00:00:28,199 --> 00:00:31,140
happens to them in the internet so

12
00:00:31,140 --> 00:00:32,640
basically

13
00:00:32,640 --> 00:00:34,440
we'll we'll open up with little intro

14
00:00:34,440 --> 00:00:36,960
I'll serve you some basics of honeypots

15
00:00:36,960 --> 00:00:38,760
and kubernetes so

16
00:00:38,760 --> 00:00:41,460
all easy there introduce the honey pot

17
00:00:41,460 --> 00:00:43,559
and then talk a little bit about what

18
00:00:43,559 --> 00:00:45,899
you can do and what you can take away

19
00:00:45,899 --> 00:00:49,379
from the stock and the data I gathered

20
00:00:49,379 --> 00:00:51,180
so

21
00:00:51,180 --> 00:00:53,280
you may ask yourself who's this guy and

22
00:00:53,280 --> 00:00:56,760
what credentials has he so I am Matthias

23
00:00:56,760 --> 00:01:00,059
mightinga I'm I happen to work for

24
00:01:00,059 --> 00:01:02,340
Redhead Advanced cluster security which

25
00:01:02,340 --> 00:01:06,540
is part of openshift so I know a thing

26
00:01:06,540 --> 00:01:09,380
or two about kubernetes you might say

27
00:01:09,380 --> 00:01:13,619
and as redhead and as red hat is an open

28
00:01:13,619 --> 00:01:16,439
source company they recently also open

29
00:01:16,439 --> 00:01:18,600
sourced the Upstream project which is

30
00:01:18,600 --> 00:01:20,820
called stack rocks which is the open

31
00:01:20,820 --> 00:01:25,979
source mother project of ACS and I do I

32
00:01:25,979 --> 00:01:28,560
am the community manager together with a

33
00:01:28,560 --> 00:01:30,960
colleague of mine so you might see me

34
00:01:30,960 --> 00:01:33,479
stick around at GitHub and as well as

35
00:01:33,479 --> 00:01:35,040
the regular Community meetings and

36
00:01:35,040 --> 00:01:36,299
office hours

37
00:01:36,299 --> 00:01:38,520
so

38
00:01:38,520 --> 00:01:41,579
for fun I do photography honeypots and

39
00:01:41,579 --> 00:01:43,740
threat hunting which might surprise you

40
00:01:43,740 --> 00:01:47,280
but I also used to work at an AV

41
00:01:47,280 --> 00:01:50,880
industry in the AV industry before so I

42
00:01:50,880 --> 00:01:52,619
picked up honeypots there and found it

43
00:01:52,619 --> 00:01:55,320
super interesting and I want to share a

44
00:01:55,320 --> 00:01:57,540
little bit my my passion for them

45
00:01:57,540 --> 00:01:59,520
because you can do really fun things

46
00:01:59,520 --> 00:02:02,159
with honeypots

47
00:02:02,159 --> 00:02:04,320
so again

48
00:02:04,320 --> 00:02:06,659
regarding the target audience I don't

49
00:02:06,659 --> 00:02:08,280
expect you to know a lot about

50
00:02:08,280 --> 00:02:10,800
kubernetes because

51
00:02:10,800 --> 00:02:13,379
it is quite complex and I know that it's

52
00:02:13,379 --> 00:02:15,480
a little bit of a scary topic regarding

53
00:02:15,480 --> 00:02:17,819
com uh programming in honeypots I don't

54
00:02:17,819 --> 00:02:20,160
expect any prior knowledge from you so

55
00:02:20,160 --> 00:02:23,099
I'll I'll get everyone up to speed and

56
00:02:23,099 --> 00:02:25,500
that said actually

57
00:02:25,500 --> 00:02:27,480
we're all standing on the shoulders of

58
00:02:27,480 --> 00:02:29,819
giants so the people that know a little

59
00:02:29,819 --> 00:02:32,340
bit about it security

60
00:02:32,340 --> 00:02:35,220
as well as kubernetes might recognize

61
00:02:35,220 --> 00:02:37,620
one or two best practices that I have

62
00:02:37,620 --> 00:02:40,560
because they are I guess across our

63
00:02:40,560 --> 00:02:43,739
domain almost Universe universally

64
00:02:43,739 --> 00:02:45,260
um

65
00:02:45,260 --> 00:02:47,760
yeah you can you can basically apply

66
00:02:47,760 --> 00:02:49,140
them universally

67
00:02:49,140 --> 00:02:52,140
and that said let's dive into the fun

68
00:02:52,140 --> 00:02:54,540
bits so

69
00:02:54,540 --> 00:02:57,000
kubernetes really quick just two slides

70
00:02:57,000 --> 00:02:59,280
I'm not going to bore you uh the thing

71
00:02:59,280 --> 00:03:00,360
is

72
00:03:00,360 --> 00:03:02,700
that's not with me because at least for

73
00:03:02,700 --> 00:03:04,980
someone that has a little bit of fun

74
00:03:04,980 --> 00:03:07,920
so nowadays kubernetes is running in a

75
00:03:07,920 --> 00:03:09,540
lot of places you might not even expect

76
00:03:09,540 --> 00:03:12,840
it so even in socializing with other

77
00:03:12,840 --> 00:03:15,420
people the last two days I already

78
00:03:15,420 --> 00:03:17,760
learned a ton of new applications that I

79
00:03:17,760 --> 00:03:19,200
was surprised where kubernetes is

80
00:03:19,200 --> 00:03:20,400
already running

81
00:03:20,400 --> 00:03:23,519
so you keep hearing it you keep seeing

82
00:03:23,519 --> 00:03:25,620
it but what is it

83
00:03:25,620 --> 00:03:29,760
so technically nowadays it is a platform

84
00:03:29,760 --> 00:03:33,540
so at its core it runs containers and

85
00:03:33,540 --> 00:03:36,180
unlike Docker it's it's it takes a

86
00:03:36,180 --> 00:03:38,580
little bit more of an automated approach

87
00:03:38,580 --> 00:03:41,879
so it can scale it can sell feel and it

88
00:03:41,879 --> 00:03:44,099
can manage and do everything on a little

89
00:03:44,099 --> 00:03:46,920
bit of a different scale and it actually

90
00:03:46,920 --> 00:03:49,500
does that for you as opposed to Docker

91
00:03:49,500 --> 00:03:51,540
where you do almost everything by

92
00:03:51,540 --> 00:03:53,420
yourself

93
00:03:53,420 --> 00:03:56,099
the modern kubernetes is actually an

94
00:03:56,099 --> 00:03:59,879
ecosystem which is there is not only the

95
00:03:59,879 --> 00:04:01,560
one kubernetes there is vanilla

96
00:04:01,560 --> 00:04:03,780
kubernetes but there is also

97
00:04:03,780 --> 00:04:06,360
things like Cloud specific ones so red

98
00:04:06,360 --> 00:04:09,000
hat openshift Amazon AWS the the whole

99
00:04:09,000 --> 00:04:12,540
Azure Cloud gcp you probably have no her

100
00:04:12,540 --> 00:04:15,680
have heard of them by now there is also

101
00:04:15,680 --> 00:04:18,839
on-prem variants which is

102
00:04:18,839 --> 00:04:21,000
which are things like red hat ocp or

103
00:04:21,000 --> 00:04:24,120
VMware tanzu or even Susa Rancher

104
00:04:24,120 --> 00:04:26,759
and then there is the for me most

105
00:04:26,759 --> 00:04:29,460
interesting thing for today which is

106
00:04:29,460 --> 00:04:32,639
developer or Edge kubernetes these are

107
00:04:32,639 --> 00:04:34,800
clusters that are

108
00:04:34,800 --> 00:04:37,919
basically very small and require not a

109
00:04:37,919 --> 00:04:39,540
lot of Hardware to run so they can run

110
00:04:39,540 --> 00:04:42,060
basically anywhere and one of these

111
00:04:42,060 --> 00:04:45,000
examples is minicube which is originally

112
00:04:45,000 --> 00:04:48,300
or was originally planned to be

113
00:04:48,300 --> 00:04:51,660
a bit of a developer or Edge Computing

114
00:04:51,660 --> 00:04:53,820
thing so it's a single node it's very

115
00:04:53,820 --> 00:04:56,699
small it's very quick and I decided to

116
00:04:56,699 --> 00:04:58,740
build a Honeypot around that with the

117
00:04:58,740 --> 00:05:01,500
idea being hey this is a little small

118
00:05:01,500 --> 00:05:03,240
honey for this is this little small

119
00:05:03,240 --> 00:05:05,280
kubernetes instance that someone that

120
00:05:05,280 --> 00:05:07,080
doesn't know their thing exposes to the

121
00:05:07,080 --> 00:05:09,840
Internet so what would happen to that

122
00:05:09,840 --> 00:05:12,500
so

123
00:05:12,780 --> 00:05:17,040
I keep saying that so super quick last

124
00:05:17,040 --> 00:05:18,900
slide I promise at least for kubernetes

125
00:05:18,900 --> 00:05:20,520
is

126
00:05:20,520 --> 00:05:23,699
kubernetes is usually comprised of two

127
00:05:23,699 --> 00:05:25,440
big Parts which are the control plane

128
00:05:25,440 --> 00:05:28,320
which hosts the API server which does a

129
00:05:28,320 --> 00:05:30,720
lot of management stuff for you and then

130
00:05:30,720 --> 00:05:34,380
you have multiple one or multiple nodes

131
00:05:34,380 --> 00:05:37,860
that actually run the workloads so this

132
00:05:37,860 --> 00:05:42,180
is these what I have here is just a

133
00:05:42,180 --> 00:05:44,400
super small part of kubernetes so it's

134
00:05:44,400 --> 00:05:47,940
it's way bigger than that but I'm only

135
00:05:47,940 --> 00:05:49,500
interested in these two parts which is

136
00:05:49,500 --> 00:05:52,020
the API server which you interact with

137
00:05:52,020 --> 00:05:54,600
with for example Cube control

138
00:05:54,600 --> 00:05:58,020
and the cubelet the cube LED is what's

139
00:05:58,020 --> 00:06:00,180
running on your node and what is

140
00:06:00,180 --> 00:06:01,500
actually

141
00:06:01,500 --> 00:06:04,259
looking it basically ensures that

142
00:06:04,259 --> 00:06:07,380
containers are running as you are as you

143
00:06:07,380 --> 00:06:09,180
have defined them so it takes care of

144
00:06:09,180 --> 00:06:11,280
running the containers itself which

145
00:06:11,280 --> 00:06:13,979
makes it a valuable Target because

146
00:06:13,979 --> 00:06:16,919
actually if you don't watch out you can

147
00:06:16,919 --> 00:06:19,199
expose cubecon the cubelet to the

148
00:06:19,199 --> 00:06:21,419
internet which means basically anyone

149
00:06:21,419 --> 00:06:23,039
can play around with it if it's not

150
00:06:23,039 --> 00:06:25,818
configured correctly

151
00:06:26,160 --> 00:06:28,819
so

152
00:06:31,259 --> 00:06:34,199
basically

153
00:06:34,199 --> 00:06:36,240
that's it for kubernetes

154
00:06:36,240 --> 00:06:38,460
so let's talk a little bit about

155
00:06:38,460 --> 00:06:40,979
honeypots or pots for short

156
00:06:40,979 --> 00:06:43,020
which is

157
00:06:43,020 --> 00:06:45,600
honeypots are

158
00:06:45,600 --> 00:06:48,180
a system intended to mimic likely

159
00:06:48,180 --> 00:06:51,539
attacks attack they basically

160
00:06:51,539 --> 00:06:52,319
um

161
00:06:52,319 --> 00:06:54,720
are

162
00:06:54,720 --> 00:06:56,819
basically they are looking like they are

163
00:06:56,819 --> 00:06:59,520
a misconfigured kubernetes instance in

164
00:06:59,520 --> 00:07:00,800
my case

165
00:07:00,800 --> 00:07:04,259
and it look it is just sitting out there

166
00:07:04,259 --> 00:07:05,759
collecting data

167
00:07:05,759 --> 00:07:08,460
and basically trying to find actively

168
00:07:08,460 --> 00:07:10,139
occurring threats

169
00:07:10,139 --> 00:07:13,620
so usually there are they there are two

170
00:07:13,620 --> 00:07:15,620
categories of uh honeypots which are

171
00:07:15,620 --> 00:07:18,060
servers so they emulate either they

172
00:07:18,060 --> 00:07:20,580
emulate a server or they emulate a

173
00:07:20,580 --> 00:07:23,400
client today we are talking about server

174
00:07:23,400 --> 00:07:26,220
honeypots which is the kubernetes API

175
00:07:26,220 --> 00:07:28,680
server as well as the cubelet

176
00:07:28,680 --> 00:07:31,020
so technically the Kate spot is even

177
00:07:31,020 --> 00:07:33,960
comprised of two servers

178
00:07:33,960 --> 00:07:37,979
and generally you can say that there are

179
00:07:37,979 --> 00:07:39,900
multiple different interaction types so

180
00:07:39,900 --> 00:07:41,160
you can have

181
00:07:41,160 --> 00:07:44,520
low interaction honeypots and I'm I'm

182
00:07:44,520 --> 00:07:47,039
taking SSH as a comp as an example

183
00:07:47,039 --> 00:07:50,099
because I guess at this point almost

184
00:07:50,099 --> 00:07:53,400
anyone in this room knows SSH

185
00:07:53,400 --> 00:07:55,620
so the idea is a low interaction

186
00:07:55,620 --> 00:07:59,400
honeypod is just giving you a username

187
00:07:59,400 --> 00:08:01,259
and password prompt and just logs that

188
00:08:01,259 --> 00:08:03,479
so that's all it does

189
00:08:03,479 --> 00:08:07,319
there are the next step would be medium

190
00:08:07,319 --> 00:08:09,240
interaction honeypots these have some

191
00:08:09,240 --> 00:08:12,060
simulations so you give it a username

192
00:08:12,060 --> 00:08:14,520
and password it lets you in and it lets

193
00:08:14,520 --> 00:08:16,979
you run some commands

194
00:08:16,979 --> 00:08:19,139
it might look like you're you're doing

195
00:08:19,139 --> 00:08:22,979
an uh an LS on route but in in practice

196
00:08:22,979 --> 00:08:25,620
you're not really executing a command on

197
00:08:25,620 --> 00:08:27,599
a system but instead you're just getting

198
00:08:27,599 --> 00:08:30,479
a string basically a string answer from

199
00:08:30,479 --> 00:08:32,219
a Honeypot

200
00:08:32,219 --> 00:08:35,399
and the last and the biggest thing are

201
00:08:35,399 --> 00:08:38,580
full systems that are basically men in

202
00:08:38,580 --> 00:08:40,020
the middle proxied

203
00:08:40,020 --> 00:08:42,599
these are real systems that you interact

204
00:08:42,599 --> 00:08:45,120
with and these just log everything you

205
00:08:45,120 --> 00:08:46,020
do

206
00:08:46,020 --> 00:08:48,300
so in that case you could think for

207
00:08:48,300 --> 00:08:50,700
example of a Docker container that you

208
00:08:50,700 --> 00:08:53,220
SSH into and you have a man in the

209
00:08:53,220 --> 00:08:54,959
middle proxy that acts as your Honeypot

210
00:08:54,959 --> 00:08:58,260
and decides whether you actually run

211
00:08:58,260 --> 00:09:00,660
that command or not but it also logs

212
00:09:00,660 --> 00:09:03,240
every single thing that you do these are

213
00:09:03,240 --> 00:09:05,760
the hardest to detect

214
00:09:05,760 --> 00:09:08,100
speaking of it so

215
00:09:08,100 --> 00:09:11,339
it is like an inverse pyramid so if you

216
00:09:11,339 --> 00:09:13,440
look from low to high interaction

217
00:09:13,440 --> 00:09:15,180
honeypots

218
00:09:15,180 --> 00:09:18,959
the the detail in the inside grow with

219
00:09:18,959 --> 00:09:21,240
each layer so low low interaction

220
00:09:21,240 --> 00:09:22,500
honeypots

221
00:09:22,500 --> 00:09:24,420
you get a username and password and

222
00:09:24,420 --> 00:09:26,160
that's basically it high interaction

223
00:09:26,160 --> 00:09:27,959
honeypots you can even see what people

224
00:09:27,959 --> 00:09:29,700
are doing what payloads they're trying

225
00:09:29,700 --> 00:09:31,380
to download and run

226
00:09:31,380 --> 00:09:35,760
but with detail and insight also the

227
00:09:35,760 --> 00:09:37,980
error potential and the attack surface

228
00:09:37,980 --> 00:09:40,320
increases because this the Honeypot

229
00:09:40,320 --> 00:09:42,720
itself as a system is getting more and

230
00:09:42,720 --> 00:09:45,420
more complex for you to run which also

231
00:09:45,420 --> 00:09:47,040
means it's more and more demanding on

232
00:09:47,040 --> 00:09:49,920
the hardware I mean for low interaction

233
00:09:49,920 --> 00:09:51,600
Honeypot you can get away with the with

234
00:09:51,600 --> 00:09:53,580
the Raspberry Pi one which is what I

235
00:09:53,580 --> 00:09:55,440
actually started with

236
00:09:55,440 --> 00:09:57,959
um running a full size full-fledged

237
00:09:57,959 --> 00:10:01,380
kubernetes on that this is gonna be hard

238
00:10:01,380 --> 00:10:03,360
so

239
00:10:03,360 --> 00:10:06,000
coming back to a decade spot

240
00:10:06,000 --> 00:10:08,220
this is a medium interaction Honeypot at

241
00:10:08,220 --> 00:10:11,580
this point so what I'm doing is I'm not

242
00:10:11,580 --> 00:10:14,100
running a rear kubernetes but what I did

243
00:10:14,100 --> 00:10:17,459
was I I started a cluster and then

244
00:10:17,459 --> 00:10:20,279
pulled all the Json apis and basically

245
00:10:20,279 --> 00:10:23,279
all the responses so now I'm kind of

246
00:10:23,279 --> 00:10:26,760
replaying or redelivering API responses

247
00:10:26,760 --> 00:10:29,339
from a kubernetes cluster which is

248
00:10:29,339 --> 00:10:31,560
pretty convenient especially from a

249
00:10:31,560 --> 00:10:33,899
liability perspective because whatever

250
00:10:33,899 --> 00:10:37,200
an attacker tries at least it won't run

251
00:10:37,200 --> 00:10:39,959
on your real kubernetes cluster so

252
00:10:39,959 --> 00:10:41,940
you're not sacrificing a cluster or

253
00:10:41,940 --> 00:10:43,380
anything

254
00:10:43,380 --> 00:10:46,500
that's sad keep in mind even honeypots

255
00:10:46,500 --> 00:10:48,060
are software even honeypots are

256
00:10:48,060 --> 00:10:49,920
exploitable so

257
00:10:49,920 --> 00:10:51,720
also there

258
00:10:51,720 --> 00:10:54,060
you might get code execution on a

259
00:10:54,060 --> 00:10:55,500
Honeypot which is also something I've

260
00:10:55,500 --> 00:10:57,480
seen happening so keep that in mind when

261
00:10:57,480 --> 00:10:59,220
you when you want to deploy something

262
00:10:59,220 --> 00:11:01,760
like that

263
00:11:01,860 --> 00:11:05,220
so again let me maybe summarize a little

264
00:11:05,220 --> 00:11:08,700
bit the Kate spot is a medium

265
00:11:08,700 --> 00:11:11,220
interaction Honeypot it is written in go

266
00:11:11,220 --> 00:11:13,560
because kubernetes itself is written in

267
00:11:13,560 --> 00:11:16,560
go and I'm trying to build something

268
00:11:16,560 --> 00:11:19,200
that looks like kubernetes and that is

269
00:11:19,200 --> 00:11:20,760
most easy if you stick to the same

270
00:11:20,760 --> 00:11:22,260
language because you can run the same

271
00:11:22,260 --> 00:11:25,800
grpc servers and basically mimic as much

272
00:11:25,800 --> 00:11:28,040
as possible the original

273
00:11:28,040 --> 00:11:30,779
kubernetes interfaces

274
00:11:30,779 --> 00:11:33,720
so it even interacts with Cube cuddles

275
00:11:33,720 --> 00:11:36,000
so if you point your Cube Catalan your

276
00:11:36,000 --> 00:11:39,300
cube cutter to my honey pot it will just

277
00:11:39,300 --> 00:11:42,720
show you the running pods and nodes and

278
00:11:42,720 --> 00:11:46,019
that is what I wanted it to do right so

279
00:11:46,019 --> 00:11:49,200
you want it to look like a real thing

280
00:11:49,200 --> 00:11:51,540
and what I'm currently collecting is

281
00:11:51,540 --> 00:11:55,500
mainly user agents all API calls and

282
00:11:55,500 --> 00:11:58,680
command container command execution and

283
00:11:58,680 --> 00:12:02,220
creation so should anyone try to

284
00:12:02,220 --> 00:12:05,360
try to actually run anything

285
00:12:05,360 --> 00:12:08,040
container-wise on these honeypots

286
00:12:08,040 --> 00:12:10,800
I will lock that I will see that

287
00:12:10,800 --> 00:12:15,060
so that's all cool and well but how does

288
00:12:15,060 --> 00:12:18,779
that look like so I have actually

289
00:12:18,779 --> 00:12:22,620
prepared something which is let me see

290
00:12:22,620 --> 00:12:25,700
if I can okay

291
00:12:27,180 --> 00:12:31,019
so what you can see here is

292
00:12:31,019 --> 00:12:32,880
the honey for itself

293
00:12:32,880 --> 00:12:35,839
which is

294
00:12:38,160 --> 00:12:41,459
so basically it's for now what you can

295
00:12:41,459 --> 00:12:45,060
see is when I point my Cube cattle at it

296
00:12:45,060 --> 00:12:48,839
which is exactly what I just

297
00:12:48,839 --> 00:12:52,440
explained which is wait there it is

298
00:12:52,440 --> 00:12:54,899
let me just increase the synthesize a

299
00:12:54,899 --> 00:12:57,660
little bit so you give it basically this

300
00:12:57,660 --> 00:12:58,800
is a little

301
00:12:58,800 --> 00:13:01,440
weird witness with my Cube cattle config

302
00:13:01,440 --> 00:13:04,800
I don't remember why it did that but as

303
00:13:04,800 --> 00:13:06,899
you can see it is a cube cattle get pods

304
00:13:06,899 --> 00:13:09,360
and it would it basically gives you the

305
00:13:09,360 --> 00:13:11,279
same command output that real cluster

306
00:13:11,279 --> 00:13:14,579
would which also means I can get the

307
00:13:14,579 --> 00:13:18,120
notes which will tell me oh which will

308
00:13:18,120 --> 00:13:19,500
tell me

309
00:13:19,500 --> 00:13:21,240
that it is

310
00:13:21,240 --> 00:13:23,100
a mini Cube

311
00:13:23,100 --> 00:13:24,660
which is

312
00:13:24,660 --> 00:13:27,660
the one thing to do which is Cube cuddle

313
00:13:27,660 --> 00:13:29,519
but there are also

314
00:13:29,519 --> 00:13:32,339
offensive security tools

315
00:13:32,339 --> 00:13:34,320
which are for example the cubelet

316
00:13:34,320 --> 00:13:37,260
control which is specifically tailored

317
00:13:37,260 --> 00:13:42,120
towards exploiting exposed cubelets and

318
00:13:42,120 --> 00:13:46,260
even that one I can basically run

319
00:13:46,260 --> 00:13:49,139
and obviously it gives me no output at

320
00:13:49,139 --> 00:13:50,940
this point because I didn't configure it

321
00:13:50,940 --> 00:13:53,880
to do so but the thing is the command

322
00:13:53,880 --> 00:13:57,899
returns it gives me all the parts so

323
00:13:57,899 --> 00:14:01,200
wait so basically I see all the parts

324
00:14:01,200 --> 00:14:03,660
that are running I see all the things

325
00:14:03,660 --> 00:14:06,540
that are happening and on the

326
00:14:06,540 --> 00:14:09,360
Honeypot itself

327
00:14:09,360 --> 00:14:12,120
I expected it

328
00:14:12,120 --> 00:14:14,279
I think I have a little problem with my

329
00:14:14,279 --> 00:14:18,180
demo Gods because it looks like I my LNF

330
00:14:18,180 --> 00:14:23,519
isn't uh my okay so technically what you

331
00:14:23,519 --> 00:14:27,540
should have seen there should have been

332
00:14:27,540 --> 00:14:31,620
um actually Json logs which I will

333
00:14:31,620 --> 00:14:35,940
and which I have handily prepared a

334
00:14:35,940 --> 00:14:38,220
screenshot for you because it wasn't

335
00:14:38,220 --> 00:14:41,880
working as intended

336
00:14:41,880 --> 00:14:43,800
so

337
00:14:43,800 --> 00:14:46,019
the problem with that is

338
00:14:46,019 --> 00:14:49,500
you now have like thousands or hundred

339
00:14:49,500 --> 00:14:51,899
thousands of line of Json

340
00:14:51,899 --> 00:14:54,000
that's all good and well but that's

341
00:14:54,000 --> 00:14:56,699
nothing that a human actually wants to

342
00:14:56,699 --> 00:15:00,540
sift through right so not even that you

343
00:15:00,540 --> 00:15:03,000
have an IP address you have the API

344
00:15:03,000 --> 00:15:06,959
endpoint what do you do with it so what

345
00:15:06,959 --> 00:15:10,620
I do with it is I take it and put it

346
00:15:10,620 --> 00:15:12,180
into a Splunk dashboard

347
00:15:12,180 --> 00:15:13,800
but you

348
00:15:13,800 --> 00:15:15,660
at this point you have Json log so

349
00:15:15,660 --> 00:15:18,000
whatever you use as a log visualizer if

350
00:15:18,000 --> 00:15:20,220
you want to use Sumo or the elk stack

351
00:15:20,220 --> 00:15:23,040
you're free to use whatever you want

352
00:15:23,040 --> 00:15:25,740
I chose Splunk because I have historical

353
00:15:25,740 --> 00:15:28,500
ties to the product and I know it a

354
00:15:28,500 --> 00:15:31,320
little bit so

355
00:15:31,320 --> 00:15:34,519
looking at that

356
00:15:38,160 --> 00:15:41,120
you can see that

357
00:15:41,120 --> 00:15:44,459
basically this is the cubelet so

358
00:15:44,459 --> 00:15:47,639
basically the thing that looks like it

359
00:15:47,639 --> 00:15:49,560
is running on a node

360
00:15:49,560 --> 00:15:51,300
and

361
00:15:51,300 --> 00:15:54,660
what this gives me is a rough idea of

362
00:15:54,660 --> 00:15:57,480
what traffic I see what happens on the

363
00:15:57,480 --> 00:15:59,100
pods themselves

364
00:15:59,100 --> 00:16:02,820
and also what user agents I see

365
00:16:02,820 --> 00:16:04,380
this is

366
00:16:04,380 --> 00:16:06,480
not that bad

367
00:16:06,480 --> 00:16:08,279
but the thing is

368
00:16:08,279 --> 00:16:11,399
on the big kubernetes server I'm seeing

369
00:16:11,399 --> 00:16:14,240
so on The Big Cube API

370
00:16:14,240 --> 00:16:18,180
Honeypot I see a lot of traffic but the

371
00:16:18,180 --> 00:16:20,519
interesting thing about that is it's not

372
00:16:20,519 --> 00:16:22,920
all kubernetes traffic as it is https

373
00:16:22,920 --> 00:16:24,720
exposed

374
00:16:24,720 --> 00:16:28,620
we actually see a lot of

375
00:16:28,620 --> 00:16:31,620
General exploitation traffic so

376
00:16:31,620 --> 00:16:35,220
entering that let me actually talk a

377
00:16:35,220 --> 00:16:39,720
little bit more about the general uh the

378
00:16:39,720 --> 00:16:43,079
general learnings and the general things

379
00:16:43,079 --> 00:16:46,500
that we that I see each day on these

380
00:16:46,500 --> 00:16:48,899
honeypots

381
00:16:48,899 --> 00:16:52,980
so I can tell you now that

382
00:16:52,980 --> 00:16:55,199
for

383
00:16:55,199 --> 00:16:59,459
the data and learnings is I had a look

384
00:16:59,459 --> 00:17:04,439
at the last 60 days of traffic so I've

385
00:17:04,439 --> 00:17:06,720
been running them for longer but in the

386
00:17:06,720 --> 00:17:09,900
interest of uh of having most up-to-date

387
00:17:09,900 --> 00:17:12,480
data I was only looking at the last 60

388
00:17:12,480 --> 00:17:16,260
days so mostly what we see is or what I

389
00:17:16,260 --> 00:17:18,839
saw is opportunistic data collections so

390
00:17:18,839 --> 00:17:22,020
read-only mode things like what pods are

391
00:17:22,020 --> 00:17:24,000
running what version is it what is

392
00:17:24,000 --> 00:17:26,280
happening there was an occasional delete

393
00:17:26,280 --> 00:17:28,980
request so I saw multiple triers of

394
00:17:28,980 --> 00:17:31,620
people actually deleting the cube API

395
00:17:31,620 --> 00:17:34,320
controller or the Ingress and egress

396
00:17:34,320 --> 00:17:36,840
configurations

397
00:17:36,840 --> 00:17:43,140
but the rest was web exploits owa spring

398
00:17:43,140 --> 00:17:46,440
framework exploitation crypto mining so

399
00:17:46,440 --> 00:17:49,559
it is and also botnets so this is

400
00:17:49,559 --> 00:17:52,500
something that we see we've seen for

401
00:17:52,500 --> 00:17:55,919
years and years especially on SSH for

402
00:17:55,919 --> 00:17:59,400
example we've seen a lot of active

403
00:17:59,400 --> 00:18:01,140
exploitation or or

404
00:18:01,140 --> 00:18:05,580
of active distribution of crypto Mining

405
00:18:05,580 --> 00:18:08,280
and botnets so this is nothing new I

406
00:18:08,280 --> 00:18:10,559
guess this is something that most people

407
00:18:10,559 --> 00:18:14,700
here know already so the question is why

408
00:18:14,700 --> 00:18:17,280
did I see so few attacks that are

409
00:18:17,280 --> 00:18:19,860
specifically tailored towards kubernetes

410
00:18:19,860 --> 00:18:22,200
so

411
00:18:22,200 --> 00:18:25,140
I actually had a talk with a lot of

412
00:18:25,140 --> 00:18:27,299
people already at the conference and

413
00:18:27,299 --> 00:18:29,520
these are some ideas that we came up

414
00:18:29,520 --> 00:18:32,700
with so the problem is

415
00:18:32,700 --> 00:18:35,940
first of all I'm I I built the whole

416
00:18:35,940 --> 00:18:38,580
honey pot or at least the API requests

417
00:18:38,580 --> 00:18:40,559
that I'm currently use around the mini

418
00:18:40,559 --> 00:18:43,020
Cube so it's it's like a small little

419
00:18:43,020 --> 00:18:45,240
kubernetes instance used for Edge

420
00:18:45,240 --> 00:18:48,299
Computing and it's not one of the big

421
00:18:48,299 --> 00:18:51,419
large-scale deployments so it's no gke

422
00:18:51,419 --> 00:18:56,340
it's no Azure cluster which also means

423
00:18:56,340 --> 00:18:59,880
it is it is also hosted on a small

424
00:18:59,880 --> 00:19:03,360
German holster and that also means it

425
00:19:03,360 --> 00:19:06,480
has if if people are targeting the room

426
00:19:06,480 --> 00:19:08,460
of the the IP address room of cloud

427
00:19:08,460 --> 00:19:12,480
providers they will likely won't find my

428
00:19:12,480 --> 00:19:15,179
infrastructure there

429
00:19:15,179 --> 00:19:16,440
and also

430
00:19:16,440 --> 00:19:19,440
there are no real payloads running on it

431
00:19:19,440 --> 00:19:22,679
so the idea was I have a cluster I just

432
00:19:22,679 --> 00:19:24,360
configured it I expose it to the

433
00:19:24,360 --> 00:19:27,179
internet and come back later to it and

434
00:19:27,179 --> 00:19:29,160
you never come back to it that was the

435
00:19:29,160 --> 00:19:31,919
original idea of the Honeypot I'm still

436
00:19:31,919 --> 00:19:33,480
working on changing that up a little bit

437
00:19:33,480 --> 00:19:35,100
to make it a little bit more of a juicy

438
00:19:35,100 --> 00:19:37,080
Target but right now

439
00:19:37,080 --> 00:19:39,600
the configuration isn't changing

440
00:19:39,600 --> 00:19:42,240
which also means maybe you maybe an

441
00:19:42,240 --> 00:19:44,520
attacker doesn't want to burn his fancy

442
00:19:44,520 --> 00:19:47,820
containers or his fancy tooling on such

443
00:19:47,820 --> 00:19:50,820
a small uninteresting Target

444
00:19:50,820 --> 00:19:52,140
and

445
00:19:52,140 --> 00:19:55,559
last but not least kubernetes is a very

446
00:19:55,559 --> 00:19:58,980
complex platform so I would argue that

447
00:19:58,980 --> 00:20:01,380
people are more interested in low

448
00:20:01,380 --> 00:20:03,960
hanging fruits so if you expose a Docker

449
00:20:03,960 --> 00:20:05,880
socket on the internet for example

450
00:20:05,880 --> 00:20:07,679
things are completely looking completely

451
00:20:07,679 --> 00:20:09,539
different there's quite a lot of people

452
00:20:09,539 --> 00:20:12,120
doing funny things with exposed doctor

453
00:20:12,120 --> 00:20:14,820
sockets but kubernetes

454
00:20:14,820 --> 00:20:17,700
so far at least as what from what I've

455
00:20:17,700 --> 00:20:20,640
seen I would I would argue that many

456
00:20:20,640 --> 00:20:23,340
people are not jumping on that train yet

457
00:20:23,340 --> 00:20:27,080
because it's simply too complex

458
00:20:27,240 --> 00:20:28,620
so

459
00:20:28,620 --> 00:20:29,760
again

460
00:20:29,760 --> 00:20:32,820
it is it has a lot of

461
00:20:32,820 --> 00:20:35,520
specific attack surface not in terms of

462
00:20:35,520 --> 00:20:39,059
actual software flaws but most of it is

463
00:20:39,059 --> 00:20:41,640
configuration because kubernetes gives

464
00:20:41,640 --> 00:20:43,860
you a million switches and knobs you can

465
00:20:43,860 --> 00:20:47,340
turn and usually for anything you want

466
00:20:47,340 --> 00:20:49,980
to do with it there is the vanilla way

467
00:20:49,980 --> 00:20:52,919
so the the the way of original

468
00:20:52,919 --> 00:20:55,200
kubernetes and then there is the whole

469
00:20:55,200 --> 00:20:58,559
cncf ecosystem of usually five to ten

470
00:20:58,559 --> 00:21:01,320
Alternatives that you can use that do

471
00:21:01,320 --> 00:21:03,360
some things better or different than the

472
00:21:03,360 --> 00:21:04,679
vanilla one

473
00:21:04,679 --> 00:21:08,100
so it is actually a platform with lots

474
00:21:08,100 --> 00:21:09,960
of unique challenges and lots of moving

475
00:21:09,960 --> 00:21:14,700
parts so what do you do about it it is

476
00:21:14,700 --> 00:21:17,220
especially the question of increased

477
00:21:17,220 --> 00:21:19,440
operational complexity so

478
00:21:19,440 --> 00:21:22,160
it is a highly distributed and ephemeral

479
00:21:22,160 --> 00:21:25,380
product or platform which means you're

480
00:21:25,380 --> 00:21:28,740
you don't you usually don't update or

481
00:21:28,740 --> 00:21:30,480
change your your containers or your

482
00:21:30,480 --> 00:21:31,860
infrastructure if you want to change

483
00:21:31,860 --> 00:21:33,480
something you throw it away and you

484
00:21:33,480 --> 00:21:35,159
build it up in a new way

485
00:21:35,159 --> 00:21:38,159
so what I'm showing you is a little bit

486
00:21:38,159 --> 00:21:41,340
of a combination of best practices and

487
00:21:41,340 --> 00:21:43,620
learnings that I had that I've picked up

488
00:21:43,620 --> 00:21:46,679
at work as well as from the honeypots

489
00:21:46,679 --> 00:21:49,980
and also there is a lot of very good

490
00:21:49,980 --> 00:21:51,840
documentation for example the ovas

491
00:21:51,840 --> 00:21:54,679
kubernetes cheat sheet is

492
00:21:54,679 --> 00:21:57,659
an extremely valuable resource if you

493
00:21:57,659 --> 00:21:59,820
want to if you want to look at some best

494
00:21:59,820 --> 00:22:01,799
practices

495
00:22:01,799 --> 00:22:04,440
so

496
00:22:04,440 --> 00:22:05,700
so I guess

497
00:22:05,700 --> 00:22:07,320
the most

498
00:22:07,320 --> 00:22:10,380
interesting topic for people is updates

499
00:22:10,380 --> 00:22:12,980
because kubernetes is

500
00:22:12,980 --> 00:22:15,780
basically releasing three times a year

501
00:22:15,780 --> 00:22:18,780
which means you need to stay on top most

502
00:22:18,780 --> 00:22:21,720
of the cloud providers don't provide you

503
00:22:21,720 --> 00:22:24,059
that many Legacy versions so if you run

504
00:22:24,059 --> 00:22:27,360
on really if you run basically not the

505
00:22:27,360 --> 00:22:29,940
current release it will happen sooner or

506
00:22:29,940 --> 00:22:31,559
later that they force you to upgrade

507
00:22:31,559 --> 00:22:34,679
your cluster so this is something you

508
00:22:34,679 --> 00:22:37,020
need to be aware of and I guess at least

509
00:22:37,020 --> 00:22:39,179
in discussions with customers I've seen

510
00:22:39,179 --> 00:22:41,940
it happen quite a bit that people are a

511
00:22:41,940 --> 00:22:44,460
little bit uh

512
00:22:44,460 --> 00:22:46,860
it is it is a hard change for many

513
00:22:46,860 --> 00:22:49,679
people because this doesn't play well

514
00:22:49,679 --> 00:22:50,820
with

515
00:22:50,820 --> 00:22:51,480
um

516
00:22:51,480 --> 00:22:53,280
I would say

517
00:22:53,280 --> 00:22:55,860
the well-established development and

518
00:22:55,860 --> 00:22:58,020
upgrade Cycles because you need to be

519
00:22:58,020 --> 00:22:59,280
quick

520
00:22:59,280 --> 00:23:02,640
the other thing I saw is cloud metadata

521
00:23:02,640 --> 00:23:05,220
access so you have your dot AWS paths

522
00:23:05,220 --> 00:23:07,080
you have your data and paths in all of

523
00:23:07,080 --> 00:23:09,720
your Cloud providers and I've seen a lot

524
00:23:09,720 --> 00:23:11,539
of active

525
00:23:11,539 --> 00:23:14,039
requests to actually see if that was

526
00:23:14,039 --> 00:23:16,799
exposed so if you have that if that is

527
00:23:16,799 --> 00:23:18,419
available and mounted in your machines

528
00:23:18,419 --> 00:23:20,520
in your infrastructure make sure it's

529
00:23:20,520 --> 00:23:22,380
not publicly available

530
00:23:22,380 --> 00:23:26,640
and finally again o wasp cisness major

531
00:23:26,640 --> 00:23:29,460
so there are a lot of Frameworks that

532
00:23:29,460 --> 00:23:31,020
can help you and give you a little bit

533
00:23:31,020 --> 00:23:34,200
of guidance I know these are quite big

534
00:23:34,200 --> 00:23:36,120
and complex as well

535
00:23:36,120 --> 00:23:38,220
so this is one of the reasons I'm here

536
00:23:38,220 --> 00:23:41,100
so to give you at least some pointers as

537
00:23:41,100 --> 00:23:43,679
to where you could start

538
00:23:43,679 --> 00:23:47,039
so regarding configuration

539
00:23:47,039 --> 00:23:48,539
there is

540
00:23:48,539 --> 00:23:51,059
also something I've seen a lot of people

541
00:23:51,059 --> 00:23:53,100
a little bit shy away from which is our

542
00:23:53,100 --> 00:23:55,980
back which is called which is role-based

543
00:23:55,980 --> 00:23:59,039
access control so it is the idea is it

544
00:23:59,039 --> 00:24:01,020
gives you granular permissions on a

545
00:24:01,020 --> 00:24:03,960
resource level from single namespaces to

546
00:24:03,960 --> 00:24:06,419
cluster-wide or even all namespaces on

547
00:24:06,419 --> 00:24:07,260
it

548
00:24:07,260 --> 00:24:09,299
and honestly

549
00:24:09,299 --> 00:24:12,840
use it it is it might be complex but

550
00:24:12,840 --> 00:24:17,039
this is what what is is is basically I

551
00:24:17,039 --> 00:24:19,340
wouldn't consider it a low hanging fruit

552
00:24:19,340 --> 00:24:22,559
but the thing is if you do it right you

553
00:24:22,559 --> 00:24:26,039
have a lot of use cases and attacks that

554
00:24:26,039 --> 00:24:28,080
simply are impossible because people

555
00:24:28,080 --> 00:24:30,059
aren't allowed to do them

556
00:24:30,059 --> 00:24:31,500
so

557
00:24:31,500 --> 00:24:34,500
that's one thing the next thing is close

558
00:24:34,500 --> 00:24:37,380
ports that's I Guess That's a classic

559
00:24:37,380 --> 00:24:40,799
that uh most I.T security folks should

560
00:24:40,799 --> 00:24:43,380
should and will know by now so for

561
00:24:43,380 --> 00:24:46,020
example the cubelet this is what runs

562
00:24:46,020 --> 00:24:48,720
the pods themselves on a node

563
00:24:48,720 --> 00:24:50,460
you can expose that to the internet

564
00:24:50,460 --> 00:24:52,919
which is basically the same as exposing

565
00:24:52,919 --> 00:24:55,080
a Docker socket to the internet anyone

566
00:24:55,080 --> 00:24:57,960
can just run their stuff on it so maybe

567
00:24:57,960 --> 00:25:00,419
don't expose it or if you have to expose

568
00:25:00,419 --> 00:25:02,220
it at least make sure you have

569
00:25:02,220 --> 00:25:05,340
authorization on that

570
00:25:05,340 --> 00:25:08,340
general practice as well kubernetes has

571
00:25:08,340 --> 00:25:11,880
audit logging so how about enabling

572
00:25:11,880 --> 00:25:14,280
auditing audit logging and then uses CM

573
00:25:14,280 --> 00:25:17,280
like Splunk or any other CM that you

574
00:25:17,280 --> 00:25:20,700
have to your that you have available

575
00:25:20,700 --> 00:25:23,220
and finally there is a thing that is

576
00:25:23,220 --> 00:25:25,940
called the port security

577
00:25:25,940 --> 00:25:29,700
admission and it's deprecated little

578
00:25:29,700 --> 00:25:32,039
sister which are part security policies

579
00:25:32,039 --> 00:25:35,940
and this is already what I meant with uh

580
00:25:35,940 --> 00:25:38,340
a lot of updates so when I started

581
00:25:38,340 --> 00:25:40,080
started writing that talk part security

582
00:25:40,080 --> 00:25:42,840
policies were actually the thing and

583
00:25:42,840 --> 00:25:44,940
part security admission wasn't even

584
00:25:44,940 --> 00:25:47,520
there so nowadays it's just the other

585
00:25:47,520 --> 00:25:49,020
way around part security policies are

586
00:25:49,020 --> 00:25:51,840
deprecated so you need to that's one of

587
00:25:51,840 --> 00:25:52,980
the problems that you have with

588
00:25:52,980 --> 00:25:55,440
kubernetes you need to be a little bit

589
00:25:55,440 --> 00:25:58,799
on the you you should skim at least skim

590
00:25:58,799 --> 00:26:01,559
the the release notes because things are

591
00:26:01,559 --> 00:26:03,419
changing quite quickly

592
00:26:03,419 --> 00:26:04,919
so

593
00:26:04,919 --> 00:26:06,860
talking about the Pod security admission

594
00:26:06,860 --> 00:26:09,840
and the part security policies what they

595
00:26:09,840 --> 00:26:12,779
do is basically they allow you to Define

596
00:26:12,779 --> 00:26:15,900
what a Docker container or what a pod is

597
00:26:15,900 --> 00:26:17,940
allowed and isn't allowed to do so for

598
00:26:17,940 --> 00:26:20,100
example is it allowed to open a port is

599
00:26:20,100 --> 00:26:22,740
it allowed to mount host paths or pids

600
00:26:22,740 --> 00:26:25,620
or is it allowed to run as uh is it

601
00:26:25,620 --> 00:26:27,539
allowed to run as an elevated user so

602
00:26:27,539 --> 00:26:30,539
run as root these are things that you

603
00:26:30,539 --> 00:26:32,279
can basically

604
00:26:32,279 --> 00:26:36,720
disallow or forbid with these two things

605
00:26:36,720 --> 00:26:39,720
and then the final thing for your

606
00:26:39,720 --> 00:26:41,580
workloads themselves so what you run on

607
00:26:41,580 --> 00:26:42,900
kubernetes

608
00:26:42,900 --> 00:26:46,980
there the question is you have again the

609
00:26:46,980 --> 00:26:49,320
topic of network policies and admission

610
00:26:49,320 --> 00:26:52,200
controllers so this is more like the

611
00:26:52,200 --> 00:26:54,419
runtime of kubernetes itself whereas

612
00:26:54,419 --> 00:26:55,980
everything before was more like

613
00:26:55,980 --> 00:26:58,380
configuration General system

614
00:26:58,380 --> 00:27:01,860
so Network policies I guess best known

615
00:27:01,860 --> 00:27:05,940
to to networking folks is this is

616
00:27:05,940 --> 00:27:08,279
basically your firewall configuration so

617
00:27:08,279 --> 00:27:09,480
you can

618
00:27:09,480 --> 00:27:11,880
tell kubernetes or

619
00:27:11,880 --> 00:27:14,039
you can decide on a workload or even

620
00:27:14,039 --> 00:27:16,919
part basis who is allowed to talk to

621
00:27:16,919 --> 00:27:19,740
what and on which ports and

622
00:27:19,740 --> 00:27:20,940
it is

623
00:27:20,940 --> 00:27:24,419
it is the thing use it make good use of

624
00:27:24,419 --> 00:27:27,240
it I would even recommend use that over

625
00:27:27,240 --> 00:27:30,360
for example segmenting your network or

626
00:27:30,360 --> 00:27:32,580
introducing any kind of external

627
00:27:32,580 --> 00:27:33,840
firewall

628
00:27:33,840 --> 00:27:36,840
try running first at least for internal

629
00:27:36,840 --> 00:27:38,880
traffic in inside the Clusters try

630
00:27:38,880 --> 00:27:40,799
running with network policies they're

631
00:27:40,799 --> 00:27:43,380
like they're there for a reason they're

632
00:27:43,380 --> 00:27:45,480
good good enough for most things they

633
00:27:45,480 --> 00:27:46,860
want to do

634
00:27:46,860 --> 00:27:48,960
the other thing that you that you can do

635
00:27:48,960 --> 00:27:51,900
is using admission controllers

636
00:27:51,900 --> 00:27:54,539
what admission controllers do is they

637
00:27:54,539 --> 00:27:57,000
intercept API calls so anything you do

638
00:27:57,000 --> 00:27:58,620
with your cluster any interaction that

639
00:27:58,620 --> 00:28:00,120
you have with a cluster

640
00:28:00,120 --> 00:28:02,820
they can decide whether this is allowed

641
00:28:02,820 --> 00:28:05,520
or not which means

642
00:28:05,520 --> 00:28:08,400
are you allowed to deploy this image are

643
00:28:08,400 --> 00:28:09,840
you allowed to deploy this image in a

644
00:28:09,840 --> 00:28:12,059
specific namespace yes or no

645
00:28:12,059 --> 00:28:16,020
so this is something that may be

646
00:28:16,020 --> 00:28:17,820
disruptive introducing into running

647
00:28:17,820 --> 00:28:19,620
clusters but especially if you build a

648
00:28:19,620 --> 00:28:21,419
new one from the ground up

649
00:28:21,419 --> 00:28:23,880
think about what people can do what and

650
00:28:23,880 --> 00:28:25,919
basically you can combine this with our

651
00:28:25,919 --> 00:28:28,799
back and have a pretty good overview of

652
00:28:28,799 --> 00:28:30,000
what people are allowed to do and

653
00:28:30,000 --> 00:28:31,380
whatnot

654
00:28:31,380 --> 00:28:35,580
and also the the the whole thing of

655
00:28:35,580 --> 00:28:37,820
supply chain security use signed images

656
00:28:37,820 --> 00:28:40,799
there are automated image scanners that

657
00:28:40,799 --> 00:28:44,460
you can use that you basically can and

658
00:28:44,460 --> 00:28:47,640
also there is you can enforce if you can

659
00:28:47,640 --> 00:28:51,240
even enforce the use of signed images if

660
00:28:51,240 --> 00:28:52,440
you choose so

661
00:28:52,440 --> 00:28:54,299
and finally

662
00:28:54,299 --> 00:28:56,000
Network

663
00:28:56,000 --> 00:29:00,120
you have namespaces so namespaces

664
00:29:00,120 --> 00:29:03,720
they don't really so they are the core

665
00:29:03,720 --> 00:29:06,179
concept of kubernetes and usually they

666
00:29:06,179 --> 00:29:08,039
you can use them to at least separate

667
00:29:08,039 --> 00:29:10,860
your workloads to an extent there it is

668
00:29:10,860 --> 00:29:12,480
a little bit more complex than that but

669
00:29:12,480 --> 00:29:14,340
the thing is

670
00:29:14,340 --> 00:29:16,740
that namespace you can even if you can

671
00:29:16,740 --> 00:29:18,179
usually Define your security on a

672
00:29:18,179 --> 00:29:20,039
namespace basis so this is something

673
00:29:20,039 --> 00:29:22,020
that is quite nice and that you should

674
00:29:22,020 --> 00:29:24,840
do because yes it is not perfect but at

675
00:29:24,840 --> 00:29:26,940
least you have a start and you can also

676
00:29:26,940 --> 00:29:30,480
use our back and network policies on an

677
00:29:30,480 --> 00:29:32,940
on a basis for that so so you can be

678
00:29:32,940 --> 00:29:35,580
basically lock down one namespace and

679
00:29:35,580 --> 00:29:37,200
have another end name space a little bit

680
00:29:37,200 --> 00:29:38,940
easy so

681
00:29:38,940 --> 00:29:41,520
as I've probably borrowed every last one

682
00:29:41,520 --> 00:29:43,520
of you by now

683
00:29:43,520 --> 00:29:46,200
let's do a bonus round of fun things I

684
00:29:46,200 --> 00:29:48,840
found in the pots because configuration

685
00:29:48,840 --> 00:29:52,260
security important but we're also here

686
00:29:52,260 --> 00:29:54,179
for a little bit of fun

687
00:29:54,179 --> 00:29:56,720
so

688
00:29:58,860 --> 00:30:00,360
what this is

689
00:30:00,360 --> 00:30:04,380
a tomcat bypass so again as I said

690
00:30:04,380 --> 00:30:07,080
this is running on on the box standard

691
00:30:07,080 --> 00:30:09,360
https Port so I see a lot of traffic

692
00:30:09,360 --> 00:30:11,460
that is happening that is not

693
00:30:11,460 --> 00:30:14,220
necessarily kubernetes specific so

694
00:30:14,220 --> 00:30:17,039
obviously thankfully a tomcat bypass

695
00:30:17,039 --> 00:30:18,840
doesn't impact me

696
00:30:18,840 --> 00:30:20,820
but it's also something that might be

697
00:30:20,820 --> 00:30:22,860
happening so if you choose to expose

698
00:30:22,860 --> 00:30:24,539
your kubernetes instance to the internet

699
00:30:24,539 --> 00:30:26,880
also keep in mind that you see a lot of

700
00:30:26,880 --> 00:30:28,620
other traffic that might even impact you

701
00:30:28,620 --> 00:30:32,520
depending on how robust your ingest is

702
00:30:32,520 --> 00:30:34,860
then of course I've seen the big

703
00:30:34,860 --> 00:30:38,100
scanners so be it Showdown be it Palo

704
00:30:38,100 --> 00:30:40,919
Alto senses I even saw Baidu stopping by

705
00:30:40,919 --> 00:30:43,440
and collecting some

706
00:30:43,440 --> 00:30:46,620
I would say yeah basically everyone

707
00:30:46,620 --> 00:30:48,899
looked a little bit at the endpoints at

708
00:30:48,899 --> 00:30:50,640
the pods what I have

709
00:30:50,640 --> 00:30:53,700
but also I saw some interesting thing

710
00:30:53,700 --> 00:30:57,360
which is uh gdn plus I've actually never

711
00:30:57,360 --> 00:31:00,120
heard of them and I saw that they do

712
00:31:00,120 --> 00:31:03,419
that they had a user also bear in mind

713
00:31:03,419 --> 00:31:04,860
these are user agents so I wouldn't

714
00:31:04,860 --> 00:31:06,659
trust them as far as I can throw them

715
00:31:06,659 --> 00:31:10,080
but still the interesting thing is if

716
00:31:10,080 --> 00:31:12,480
you have gdn Plus or if you have your

717
00:31:12,480 --> 00:31:14,640
company name in your user agent of

718
00:31:14,640 --> 00:31:15,899
course I'm going to look at your home

719
00:31:15,899 --> 00:31:19,260
page and gdn plus a few folks are

720
00:31:19,260 --> 00:31:21,659
interested in or if anyone knows them

721
00:31:21,659 --> 00:31:24,179
please let me know because I looked at

722
00:31:24,179 --> 00:31:25,919
their website I have still no idea what

723
00:31:25,919 --> 00:31:27,120
they do

724
00:31:27,120 --> 00:31:29,940
so technically they say gather analyze

725
00:31:29,940 --> 00:31:32,419
provide they say something about

726
00:31:32,419 --> 00:31:34,980
internet-wide scanning services but they

727
00:31:34,980 --> 00:31:37,440
basically have no offerings as to what

728
00:31:37,440 --> 00:31:40,620
they do so if it's a front to something

729
00:31:40,620 --> 00:31:42,600
also let me know because I would be

730
00:31:42,600 --> 00:31:46,440
really interested as to what

731
00:31:46,440 --> 00:31:49,020
speaking of General traffic

732
00:31:49,020 --> 00:31:53,159
I was a little bit surprised so this is

733
00:31:53,159 --> 00:31:54,860
again

734
00:31:54,860 --> 00:31:58,200
this is the ASN distribution so every

735
00:31:58,200 --> 00:31:59,940
traffic that I've seen over the last

736
00:31:59,940 --> 00:32:01,080
months

737
00:32:01,080 --> 00:32:03,779
what didn't surprise me was that I saw a

738
00:32:03,779 --> 00:32:06,000
third of the traffic from digitalocean

739
00:32:06,000 --> 00:32:08,279
that is something that has been ongoing

740
00:32:08,279 --> 00:32:11,399
for years because digitalocean I don't

741
00:32:11,399 --> 00:32:13,140
know if they still do it but they used

742
00:32:13,140 --> 00:32:15,659
to give out platform credit if you if

743
00:32:15,659 --> 00:32:18,480
you um add if you sign up with a credit

744
00:32:18,480 --> 00:32:21,419
card so basically they give you free

745
00:32:21,419 --> 00:32:24,059
free platform credit to play around with

746
00:32:24,059 --> 00:32:26,520
what surprised me really though were

747
00:32:26,520 --> 00:32:29,700
were two things which is Microsoft so I

748
00:32:29,700 --> 00:32:32,880
saw a lot of traffic from Microsoft asns

749
00:32:32,880 --> 00:32:36,720
and the last thing fun fact I used to

750
00:32:36,720 --> 00:32:40,919
see a lot of ovh traffic so ovh also was

751
00:32:40,919 --> 00:32:43,860
hell or in some circles they were

752
00:32:43,860 --> 00:32:46,320
notorious for ignoring takedown requests

753
00:32:46,320 --> 00:32:50,360
and basically abuse and ovh traffic

754
00:32:50,360 --> 00:32:52,740
basically dropped to next to nothing

755
00:32:52,740 --> 00:32:55,200
since the data center burned down in

756
00:32:55,200 --> 00:32:57,059
France

757
00:32:57,059 --> 00:33:00,980
so kind of interesting to see

758
00:33:01,140 --> 00:33:03,480
so to give you a little bit more detail

759
00:33:03,480 --> 00:33:06,659
what I saw is I mean again these ASN

760
00:33:06,659 --> 00:33:08,460
resolutions

761
00:33:08,460 --> 00:33:10,740
I I wouldn't take them for granted it's

762
00:33:10,740 --> 00:33:12,899
it's just the last hop of traffic where

763
00:33:12,899 --> 00:33:18,059
it came from so I is I was not so much

764
00:33:18,059 --> 00:33:20,580
uh surprised to see a lot of traffic

765
00:33:20,580 --> 00:33:22,100
from

766
00:33:22,100 --> 00:33:25,980
as202 984 I'm not going to try I'm not

767
00:33:25,980 --> 00:33:27,600
going to bother and try to pronounce

768
00:33:27,600 --> 00:33:30,240
that that Folk's name because I will

769
00:33:30,240 --> 00:33:33,360
Slaughter it anyway so the thing is this

770
00:33:33,360 --> 00:33:35,519
ASM they've

771
00:33:35,519 --> 00:33:37,799
I've seen them for years and years on

772
00:33:37,799 --> 00:33:40,260
all of my honeypots so be it SSH 10 at

773
00:33:40,260 --> 00:33:42,600
SMTP so this is nothing kubernetes

774
00:33:42,600 --> 00:33:44,880
specific but it's still interesting

775
00:33:44,880 --> 00:33:50,039
because he was only or this ASN only uh

776
00:33:50,039 --> 00:33:53,880
connected to my kubernetes API it did

777
00:33:53,880 --> 00:33:57,659
not in fact touch the mini Cube the the

778
00:33:57,659 --> 00:33:59,279
cubelet

779
00:33:59,279 --> 00:34:01,559
so this is something that was kind of

780
00:34:01,559 --> 00:34:03,059
interesting to me and I'm still trying

781
00:34:03,059 --> 00:34:05,640
to figure out why that is

782
00:34:05,640 --> 00:34:08,639
So speaking of the cubelet

783
00:34:08,639 --> 00:34:11,040
I saw a surprising amount from of

784
00:34:11,040 --> 00:34:14,159
traffic from from Prague from chesia

785
00:34:14,159 --> 00:34:16,260
which is also something I didn't expect

786
00:34:16,260 --> 00:34:18,839
and didn't see before because

787
00:34:18,839 --> 00:34:20,879
maybe as a little bit of a context I've

788
00:34:20,879 --> 00:34:24,239
been running honeypots for I think six

789
00:34:24,239 --> 00:34:26,219
or seven years now so I have a pretty

790
00:34:26,219 --> 00:34:30,119
good feeling for usual asns or usual

791
00:34:30,119 --> 00:34:33,960
traffic sources that I see so this kind

792
00:34:33,960 --> 00:34:36,000
of surprised me

793
00:34:36,000 --> 00:34:37,320
so

794
00:34:37,320 --> 00:34:40,139
if any one of you knows a little bit

795
00:34:40,139 --> 00:34:41,699
more or can provide me a little bit of

796
00:34:41,699 --> 00:34:44,280
insight about these asns or no or

797
00:34:44,280 --> 00:34:46,500
recognizes anything please feel free to

798
00:34:46,500 --> 00:34:48,480
flag me down after the talk I'd be super

799
00:34:48,480 --> 00:34:50,760
interested to talk a little bit about it

800
00:34:50,760 --> 00:34:53,820
and to close that up with some key

801
00:34:53,820 --> 00:34:56,280
takeaways for you so

802
00:34:56,280 --> 00:34:59,220
if you see something say something

803
00:34:59,220 --> 00:35:01,320
which is

804
00:35:01,320 --> 00:35:05,160
please do the usual dance of monitoring

805
00:35:05,160 --> 00:35:08,580
logging and inventory so basically

806
00:35:08,580 --> 00:35:12,240
you should know what is on fire and if

807
00:35:12,240 --> 00:35:15,540
that belongs to you so if something runs

808
00:35:15,540 --> 00:35:18,000
in your cluster you better know who to

809
00:35:18,000 --> 00:35:21,060
flag down and who to kick whose Shin to

810
00:35:21,060 --> 00:35:25,079
kick to stop it from burning hopefully

811
00:35:25,079 --> 00:35:28,079
and also you might you should hopefully

812
00:35:28,079 --> 00:35:30,839
be aware of is that stuff that is

813
00:35:30,839 --> 00:35:32,880
running in your cluster even your owns

814
00:35:32,880 --> 00:35:34,980
or is there someone else's that just

815
00:35:34,980 --> 00:35:38,820
stopped by and dropped a container

816
00:35:38,820 --> 00:35:41,220
so

817
00:35:41,220 --> 00:35:42,660
also

818
00:35:42,660 --> 00:35:45,960
I I really wanted to nail down this

819
00:35:45,960 --> 00:35:47,579
point which is

820
00:35:47,579 --> 00:35:48,780
please

821
00:35:48,780 --> 00:35:52,020
try to use the native things first so

822
00:35:52,020 --> 00:35:55,440
kubernetes has a lot of stuff that it

823
00:35:55,440 --> 00:35:57,599
already ships which is one of the

824
00:35:57,599 --> 00:35:59,579
problems because it ships with a lot of

825
00:35:59,579 --> 00:36:00,839
stuff

826
00:36:00,839 --> 00:36:04,200
so the idea is try Network policies

827
00:36:04,200 --> 00:36:08,180
before you introduce big proxies try

828
00:36:08,180 --> 00:36:10,619
role based try rolling out roll based

829
00:36:10,619 --> 00:36:12,060
Access Control

830
00:36:12,060 --> 00:36:15,240
and also there is a lot of tools out

831
00:36:15,240 --> 00:36:17,640
there many of them even open source that

832
00:36:17,640 --> 00:36:20,339
can help you and that can actually

833
00:36:20,339 --> 00:36:23,160
point out some best practices or even

834
00:36:23,160 --> 00:36:24,960
introduce new functionality that you

835
00:36:24,960 --> 00:36:26,099
might like

836
00:36:26,099 --> 00:36:28,619
but before you try them or even a

837
00:36:28,619 --> 00:36:30,599
commercial product maybe think about

838
00:36:30,599 --> 00:36:33,359
looking at the native things first that

839
00:36:33,359 --> 00:36:35,400
kubernetes has to provide

840
00:36:35,400 --> 00:36:38,940
and speaking of paid services

841
00:36:38,940 --> 00:36:41,460
we we heard in the last talk a little

842
00:36:41,460 --> 00:36:44,040
bit about the idea of of managed

843
00:36:44,040 --> 00:36:46,140
services or basically letting other

844
00:36:46,140 --> 00:36:48,660
people build stuff for you but still I

845
00:36:48,660 --> 00:36:50,280
would argue

846
00:36:50,280 --> 00:36:54,119
maybe evaluate if managed Services might

847
00:36:54,119 --> 00:36:56,640
be a thing for you because especially as

848
00:36:56,640 --> 00:36:58,320
kubernetes has quite a lot of moving

849
00:36:58,320 --> 00:37:01,800
Parts managed Services typically run on

850
00:37:01,800 --> 00:37:04,500
best practices and recommendations and

851
00:37:04,500 --> 00:37:07,800
as kubernetes has a lot of surface you

852
00:37:07,800 --> 00:37:09,780
usually need quite a bit of engineering

853
00:37:09,780 --> 00:37:12,720
power to really make it secure and keep

854
00:37:12,720 --> 00:37:14,339
it secure

855
00:37:14,339 --> 00:37:17,420
so maybe keep in mind

856
00:37:17,420 --> 00:37:20,760
monitoring inventory logging and have a

857
00:37:20,760 --> 00:37:22,800
look at the native capabilities that

858
00:37:22,800 --> 00:37:25,260
kubernetes has

859
00:37:25,260 --> 00:37:28,380
and with that you can find the Honeypot

860
00:37:28,380 --> 00:37:31,020
itself the Splunk dashboards as well as

861
00:37:31,020 --> 00:37:34,380
the slides over at the GitHub repository

862
00:37:34,380 --> 00:37:35,820
fee free

863
00:37:35,820 --> 00:37:39,660
to scan the QR code if you want to

864
00:37:39,660 --> 00:37:41,760
hopefully you have a link review

865
00:37:41,760 --> 00:37:44,520
as a little security exercise but for

866
00:37:44,520 --> 00:37:46,500
any further questions please feel free

867
00:37:46,500 --> 00:37:48,960
to chat me up after the conference or

868
00:37:48,960 --> 00:37:52,280
ask them no

869
00:37:53,380 --> 00:38:00,300
[Applause]

870
00:38:00,300 --> 00:38:02,400
all right thank you very much are there

871
00:38:02,400 --> 00:38:03,420
any questions

872
00:38:03,420 --> 00:38:05,960
someone

873
00:38:06,119 --> 00:38:10,040
yes two one just one second

874
00:38:12,720 --> 00:38:15,300
so you mentioned in your talk that you

875
00:38:15,300 --> 00:38:18,060
have the assumption that some of the

876
00:38:18,060 --> 00:38:19,800
attackers didn't drop by because you

877
00:38:19,800 --> 00:38:22,020
were not hosting your Honeypot on one of

878
00:38:22,020 --> 00:38:26,040
the big clusters like AKs or whatever is

879
00:38:26,040 --> 00:38:28,680
this plan for the future or do you think

880
00:38:28,680 --> 00:38:30,480
you run in trouble if you for example

881
00:38:30,480 --> 00:38:33,000
host your Honeypot of an Azure cluster

882
00:38:33,000 --> 00:38:36,240
so the thing is technically I don't need

883
00:38:36,240 --> 00:38:38,880
a cluster to run my Honeypot so

884
00:38:38,880 --> 00:38:42,000
then I mean the the guy that is doing

885
00:38:42,000 --> 00:38:45,660
the next talk by the way stick by stick

886
00:38:45,660 --> 00:38:47,280
over here because he's doing another

887
00:38:47,280 --> 00:38:49,140
take on this uh this is going to be

888
00:38:49,140 --> 00:38:51,480
interesting uh so he also he already

889
00:38:51,480 --> 00:38:54,300
recommended basically how about building

890
00:38:54,300 --> 00:38:56,700
that as a as a Lambda function and try

891
00:38:56,700 --> 00:38:59,160
to run it because the thing is I don't

892
00:38:59,160 --> 00:39:01,320
need to I know basically that thing runs

893
00:39:01,320 --> 00:39:04,380
on a potato so it's it's compiled go

894
00:39:04,380 --> 00:39:06,540
code so it's super lightweight

895
00:39:06,540 --> 00:39:08,280
the thing is

896
00:39:08,280 --> 00:39:10,680
hopefully I don't get in trouble I will

897
00:39:10,680 --> 00:39:12,900
try to deploy it on some Cloud

898
00:39:12,900 --> 00:39:14,940
infrastructure to have at least the IP

899
00:39:14,940 --> 00:39:17,760
range honestly I have now that you

900
00:39:17,760 --> 00:39:18,960
mentioned it I've never actually

901
00:39:18,960 --> 00:39:22,020
investigated whether the um

902
00:39:22,020 --> 00:39:26,099
whether the the kubernetes specific if

903
00:39:26,099 --> 00:39:28,619
whether they argument at a specific IP

904
00:39:28,619 --> 00:39:31,619
ranges that are in the cloud providers I

905
00:39:31,619 --> 00:39:33,839
but that's that's actually a good idea

906
00:39:33,839 --> 00:39:36,599
so long story short yes it's planned um

907
00:39:36,599 --> 00:39:39,540
it's also planned to basically switch it

908
00:39:39,540 --> 00:39:41,280
up a little bit and not make it look

909
00:39:41,280 --> 00:39:44,160
like a mini Cube but maybe instead like

910
00:39:44,160 --> 00:39:46,260
a big cluster like big production

911
00:39:46,260 --> 00:39:47,880
cluster that might be more of an

912
00:39:47,880 --> 00:39:50,420
interesting Target

913
00:39:52,740 --> 00:39:54,180
hi

914
00:39:54,180 --> 00:39:56,520
um I just have the question if you are

915
00:39:56,520 --> 00:39:58,680
collaborating with others or if you're

916
00:39:58,680 --> 00:40:00,839
accepting data from others or do you

917
00:40:00,839 --> 00:40:03,060
have any plans to do so

918
00:40:03,060 --> 00:40:06,079
so if that even makes sense

919
00:40:06,079 --> 00:40:08,700
if others deploy their honey plots and

920
00:40:08,700 --> 00:40:11,040
just share data that they get

921
00:40:11,040 --> 00:40:13,800
the problem of with me if for me is I

922
00:40:13,800 --> 00:40:15,720
don't know how to aggregate this data

923
00:40:15,720 --> 00:40:17,760
from external sources but I would be

924
00:40:17,760 --> 00:40:21,420
very interested if anyone wants to run

925
00:40:21,420 --> 00:40:24,119
this Honeypot or anything else feel free

926
00:40:24,119 --> 00:40:26,099
to tag me down because it's super

927
00:40:26,099 --> 00:40:28,020
interesting for me I would love to get

928
00:40:28,020 --> 00:40:30,540
more insights I mean I know that the

929
00:40:30,540 --> 00:40:34,200
Honeypot Community is rather small but

930
00:40:34,200 --> 00:40:36,540
it is still something that I would

931
00:40:36,540 --> 00:40:38,520
everyone recommend to at least try

932
00:40:38,520 --> 00:40:41,160
because it's really fun to see what's

933
00:40:41,160 --> 00:40:43,560
happening to your infrastructure so if

934
00:40:43,560 --> 00:40:45,780
anyone wants to share their data and or

935
00:40:45,780 --> 00:40:48,060
wants to run their own please feel free

936
00:40:48,060 --> 00:40:50,400
to contact me through GitHub Twitter or

937
00:40:50,400 --> 00:40:52,920
whatever I'm happy to help I'm happy to

938
00:40:52,920 --> 00:40:56,240
collect and I'm happy to share

939
00:40:57,480 --> 00:40:59,400
all right thank you very much if you

940
00:40:59,400 --> 00:41:00,660
want to chat with him he will be around

941
00:41:00,660 --> 00:41:02,400
the whole conference and we'll be happy

942
00:41:02,400 --> 00:41:04,800
to share his experience with you of

943
00:41:04,800 --> 00:41:06,960
course so thank you again uh for your

944
00:41:06,960 --> 00:41:10,450
presentation and then uh we so

945
00:41:10,450 --> 00:41:17,710
[Applause]

