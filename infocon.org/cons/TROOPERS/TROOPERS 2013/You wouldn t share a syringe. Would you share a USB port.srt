1
00:00:04,700 --> 00:00:09,210
I'm sergei's wife would like you to know
that she was not present when we named

2
00:00:09,210 --> 00:00:14,180
our sites for up

3
00:00:14,180 --> 00:00:17,240
this is just because you know when you
know

4
00:00:17,240 --> 00:00:20,410
you're talking a little too network
service

5
00:00:20,410 --> 00:00:23,810
when you're talking to a web server
error when you're speaking to Sky fear

6
00:00:23,810 --> 00:00:24,720
that such things

7
00:00:24,720 --> 00:00:28,269
%uh you know that it's a dumb idea to
implement those look for a

8
00:00:28,269 --> 00:00:32,870
you know that it's a dumb idea to allow
London trusted third-party

9
00:00:32,870 --> 00:00:35,910
to talk directly to any software hi
privileges

10
00:00:35,910 --> 00:00:41,310
I you know that's a dumb idea to allow
trusted third party to talk to

11
00:00:41,310 --> 00:00:44,470
%uh likes regions have code where

12
00:00:44,470 --> 00:00:48,580
like area is as software if you have a
server you just install

13
00:00:48,580 --> 00:00:53,670
every PHP script you can find online
it'll be about an hour before somebody

14
00:00:53,670 --> 00:00:54,450
pops up

15
00:00:54,450 --> 00:00:57,580
well the same thing actually happens to
USB

16
00:00:57,580 --> 00:01:02,340
it's just that because it doesn't run
over the Internet its

17
00:01:02,340 --> 00:01:05,710
difficult to had to tell whether anyone
is exploiting

18
00:01:05,710 --> 00:01:10,420
out so I can tell you whether or not
people it's like this but I can tell you

19
00:01:10,420 --> 00:01:11,810
that it's a lot of fun to exploit

20
00:01:11,810 --> 00:01:15,540
and I can show you where the bugs are
and I can also show is so that the

21
00:01:15,540 --> 00:01:17,320
things you might be able to do to

22
00:01:17,320 --> 00:01:21,960
I'll biggest lesson an issue for you a
super glue and the USB port works great

23
00:01:21,960 --> 00:01:24,990
than just the best method as thats

24
00:01:24,990 --> 00:01:30,560
us before we get would like to thank you
as Sergio Alvarez

25
00:01:30,560 --> 00:01:35,670
and to be traded on stuff a dimitri
manage to manufacture

26
00:01:35,670 --> 00:01:39,890
a prototype 4s when the original
prototype had been seized by German

27
00:01:39,890 --> 00:01:42,380
customs and we we thank you ever so
kindly for that

28
00:01:42,380 --> 00:01:45,630
out Sergio assertive

29
00:01:45,630 --> 00:01:49,310
acted as I i can't. taken that he used
this framework

30
00:01:49,310 --> 00:01:52,580
at the time that we were developing at
and pointed out a number missing

31
00:01:52,580 --> 00:01:54,590
features and bust that

32
00:01:54,590 --> 00:01:58,190
that helped us immensely up

33
00:01:58,190 --> 00:02:02,130
and up also I shall call goes to any
business

34
00:02:02,130 --> 00:02:06,390
who published this so I would love to
white paper called fifty lessons from

35
00:02:06,390 --> 00:02:09,659
a USB bus we're going to use

36
00:02:09,659 --> 00:02:13,040
as some of his examples how

37
00:02:13,040 --> 00:02:17,130
fighting such a thing but good neighbors
beat us to it

38
00:02:17,130 --> 00:02:20,450
and though occurred at phase them surfer

39
00:02:20,450 --> 00:02:23,580
are being a Canadian thing to work with
so K

40
00:02:23,580 --> 00:02:26,640
shut up so

41
00:02:26,640 --> 00:02:29,819
wanna do this there is this thing

42
00:02:29,819 --> 00:02:33,200
week will be rights law and if you
attended the

43
00:02:33,200 --> 00:02:36,940
out my question and i mix pills a
presentation last time

44
00:02:36,940 --> 00:02:40,770
I you should be familiar with it
security doesn't get better

45
00:02:40,770 --> 00:02:44,459
until tools for practical exploration
attack surface I made available

46
00:02:44,459 --> 00:02:48,989
just right said the subtopic one out we
published at that the next show called

47
00:02:48,989 --> 00:02:49,959
as rights law

48
00:02:49,959 --> 00:02:53,410
we ate put it on Wikipedia and some

49
00:02:53,410 --> 00:02:56,910
I'm neighborly editor I deleted it my
students

50
00:02:56,910 --> 00:03:00,459
my still did their best to argue with
him but

51
00:03:00,459 --> 00:03:03,620
you now it's their ground other over the
forest

52
00:03:03,620 --> 00:03:08,370
the bill wins yeah this

53
00:03:08,370 --> 00:03:11,440
is the original prototype that a dimitri

54
00:03:11,440 --> 00:03:15,200
help a yes again this tool allows you to

55
00:03:15,200 --> 00:03:20,790
write your own USB devices on your
regular workstation with olive the

56
00:03:20,790 --> 00:03:22,060
memory and

57
00:03:22,060 --> 00:03:25,970
tools that you have access to so if when
you're prototyping at

58
00:03:25,970 --> 00:03:30,180
you what lotsa resources this is what it
gives you it also gives you room for

59
00:03:30,180 --> 00:03:32,250
logging you've got disk access you've
got

60
00:03:32,250 --> 00:03:36,560
a network access you can store all the
records in a database you can store

61
00:03:36,560 --> 00:03:37,690
whatever metric see what

62
00:03:37,690 --> 00:03:42,810
and these are things that you can't
doing your programming embedded system a

63
00:03:42,810 --> 00:03:46,260
and you get incredible flexibility by
doing this

64
00:03:46,260 --> 00:03:50,000
these things on the hosts rather than in
the embedded system because you exploit

65
00:03:50,000 --> 00:03:52,430
doesn't have to fit into 32 kilobytes
coat

66
00:03:52,430 --> 00:03:55,750
plus you get to realize your fantasy of
connecting

67
00:03:55,750 --> 00:03:59,489
to computers or USB in

68
00:03:59,489 --> 00:04:03,000
Irene we don't know how hard I tried

69
00:04:03,000 --> 00:04:06,290
but there was a.m. view things all that
crap

70
00:04:06,290 --> 00:04:10,319
know this is the way to go this is the
route this is the network

71
00:04:10,319 --> 00:04:14,480
sale let's think about networks

72
00:04:14,480 --> 00:04:17,489
we want to respect one of those ports

73
00:04:17,489 --> 00:04:21,790
right rj-45 want to respect that with

74
00:04:21,790 --> 00:04:25,330
put follows on from that all we look
after our

75
00:04:25,330 --> 00:04:29,360
up local lands and so on well

76
00:04:29,360 --> 00:04:33,210
quickly learned to respect other ports
however

77
00:04:33,210 --> 00:04:36,600
if we walk act out with the network

78
00:04:36,600 --> 00:04:39,690
yes and what we do to a network well

79
00:04:39,690 --> 00:04:42,940
where packets right

80
00:04:42,940 --> 00:04:46,630
we have lawyers abstraction that CIOs IT
model

81
00:04:46,630 --> 00:04:49,889
off from the fire where to the link
layer on top

82
00:04:49,889 --> 00:04:53,280
and all we do we do to all those layers

83
00:04:53,280 --> 00:04:57,680
we prospects then we send them

84
00:04:57,680 --> 00:05:00,800
I or that port ending

85
00:05:00,800 --> 00:05:05,600
sometimes do interesting things to
applications or coyotes

86
00:05:05,600 --> 00:05:09,270
also was scammed up and some people make
up

87
00:05:09,270 --> 00:05:13,210
every business selling those things that
of find week

88
00:05:13,210 --> 00:05:17,090
imports it now you have this thing

89
00:05:17,090 --> 00:05:20,100
I bet you call a box

90
00:05:20,100 --> 00:05:23,300
and just ask yourself way ok

91
00:05:23,300 --> 00:05:27,150
how are similar is it

92
00:05:27,150 --> 00:05:32,150
to this network that we note of how how
to hack

93
00:05:32,150 --> 00:05:35,389
sooo you start looking into this

94
00:05:35,389 --> 00:05:39,380
yeah really nice at chippy AP steps

95
00:05:39,380 --> 00:05:44,340
since 1990 is the improved quite a lot i
sending over long pink packet does not

96
00:05:44,340 --> 00:05:44,880
crash

97
00:05:44,880 --> 00:05:48,470
our windows anymore all having

98
00:05:48,470 --> 00:05:51,720
the same a source and destination IP
wrap-up

99
00:05:51,720 --> 00:05:54,930
for an IP address does not crash

100
00:05:54,930 --> 00:06:01,030
up girls anymore lipstick is more or
less under control

101
00:06:01,030 --> 00:06:04,229
then of course you have the USB which

102
00:06:04,229 --> 00:06:08,360
can do also many things and some are you
may remember that time when

103
00:06:08,360 --> 00:06:11,660
it was the on your cereal box but

104
00:06:11,660 --> 00:06:14,699
I now of course if you ask yourself what
Kings

105
00:06:14,699 --> 00:06:18,500
on that port well the answer is

106
00:06:18,500 --> 00:06:23,310
everything so all these different USB
devices you can think I've

107
00:06:23,310 --> 00:06:27,580
as services that your kernel is willing
to run and the device drivers being the

108
00:06:27,580 --> 00:06:28,520
services

109
00:06:28,520 --> 00:06:33,050
so if you plug in a high desk your
kernel happily loads the module that

110
00:06:33,050 --> 00:06:34,750
implements USB Mass Storage

111
00:06:34,750 --> 00:06:38,060
and it happily connects you to discuss
the framework for the cartel

112
00:06:38,060 --> 00:06:42,360
and through their the automatic will
happily melt any filesystem the

113
00:06:42,360 --> 00:06:46,699
you can touch the filesystem device
drivers through USB

114
00:06:46,699 --> 00:06:50,220
similarly you can emulate networks but
not just

115
00:06:50,220 --> 00:06:54,539
Ethernet cards you can also emulate life
I carts so all those bugs they came out

116
00:06:54,539 --> 00:06:57,550
in 2007 that allowed you to

117
00:06:57,550 --> 00:07:00,789
remotely explain occurred ultra
malformed wifi packets

118
00:07:00,789 --> 00:07:05,380
well you can trigger those bugs by first
making the wifi card waiting for the

119
00:07:05,380 --> 00:07:06,630
driver to load and then

120
00:07:06,630 --> 00:07:10,289
popping but I never forget

121
00:07:10,289 --> 00:07:14,750
how all of those bugs were actually up
rendered exploitable

122
00:07:14,750 --> 00:07:19,660
good neighbors created injection pop
chips

123
00:07:19,660 --> 00:07:24,449
cards were created or modified and then
simply bought when I thera switch to

124
00:07:24,449 --> 00:07:28,509
all are a software defined radio the
software-defined

125
00:07:28,509 --> 00:07:32,360
for their radio or configurations

126
00:07:32,360 --> 00:07:36,110
that you could just port in a byte
buffer

127
00:07:36,110 --> 00:07:39,370
put together by buffer operative into
the cart

128
00:07:39,370 --> 00:07:43,280
then have a transmitted over the air
entirely

129
00:07:43,280 --> 00:07:46,470
a as your request and so

130
00:07:46,470 --> 00:07:49,870
what else you could injector or packets
from

131
00:07:49,870 --> 00:07:53,060
are all buffers of your head your

132
00:07:53,060 --> 00:07:57,330
hijacking the netbook in 60 seconds %um
all the interesting crashes they could

133
00:07:57,330 --> 00:08:00,599
to invoke in every wifi driver

134
00:08:00,599 --> 00:08:05,039
and so on this is the equivalent

135
00:08:05,039 --> 00:08:08,389
0 an injection capable cart it

136
00:08:08,389 --> 00:08:11,789
takes of our essentially and transmitted

137
00:08:11,789 --> 00:08:16,039
at the packet over USB and that's all
there is to it

138
00:08:16,039 --> 00:08:21,380
and this is the kinda exploration that
we invite you to join

139
00:08:21,380 --> 00:08:24,840
sale you got everything L

140
00:08:24,840 --> 00:08:30,370
oK what's think about what happens when
the packet hits a curl

141
00:08:30,370 --> 00:08:34,849
sometimes the packet self-destructs
sometimes a big break brings out the car

142
00:08:34,849 --> 00:08:38,349
right if you think about that now that
you're

143
00:08:38,349 --> 00:08:43,009
a step which is much richer you've got

144
00:08:43,009 --> 00:08:48,519
outweigh all possibly much more brittle
stack

145
00:08:48,519 --> 00:08:52,429
then the birds have just gotten angrier
right

146
00:08:52,429 --> 00:08:57,170
those Brits are so damn angry

147
00:08:57,170 --> 00:09:00,209
effect I let's take a moment for up

148
00:09:00,209 --> 00:09:04,499
up public service announcement do you
understand what's going on in this world

149
00:09:04,499 --> 00:09:05,029
right

150
00:09:05,029 --> 00:09:09,769
this silly little game glorifies
attackers

151
00:09:09,769 --> 00:09:13,910
we should be distributing games called
peaceful pigs

152
00:09:13,910 --> 00:09:20,399
building solid defensive structures

153
00:09:20,399 --> 00:09:24,679
girls are so their anger

154
00:09:24,679 --> 00:09:27,939
so let's look at those birds

155
00:09:27,939 --> 00:09:32,050
I P these are my favorite flights TCPIP

156
00:09:32,050 --> 00:09:36,410
at my favorite depiction of TCP IP
packets taken literally of someone's

157
00:09:36,410 --> 00:09:37,269
back

158
00:09:37,269 --> 00:09:42,329
as those I T shirts on which they're
printed I what we're

159
00:09:42,329 --> 00:09:45,379
not very are I complex

160
00:09:45,379 --> 00:09:49,749
still course from March trouble
including fragmentation

161
00:09:49,749 --> 00:09:53,069
including I'll various to sheepishly X

162
00:09:53,069 --> 00:09:56,439
okay so now let's look at structures

163
00:09:56,439 --> 00:09:59,519
that arkin packets have crossed the USB

164
00:09:59,519 --> 00:10:03,350
of so-called boss and we hope to
convince you that this is

165
00:10:03,350 --> 00:10:07,189
actually a network obvious for example

166
00:10:07,189 --> 00:10:10,439
is one of those descriptors which
describes

167
00:10:10,439 --> 00:10:13,899
a a a human interface device that

168
00:10:13,899 --> 00:10:17,220
you know just things like

169
00:10:17,220 --> 00:10:21,579
fields these things of their boy

170
00:10:21,579 --> 00:10:25,470
types which wife to your out what the

171
00:10:25,470 --> 00:10:29,339
a links are so here's a typical put that
on a t-shirt

172
00:10:29,339 --> 00:10:32,879
right how many kinds over there was
descriptors are there

173
00:10:32,879 --> 00:10:37,110
and the answer is many the somewhat
typical one looks like

174
00:10:37,110 --> 00:10:40,739
notice 411 different link fields

175
00:10:40,739 --> 00:10:44,220
in different places and a descriptor

176
00:10:44,220 --> 00:10:47,420
I'll link that must agree with well

177
00:10:47,420 --> 00:10:51,769
in other other place say role

178
00:10:51,769 --> 00:10:58,110
now we're going to play a game the game
is called guess the parser bug

179
00:10:58,110 --> 00:11:01,220
so here is a field here is a string feel

180
00:11:01,220 --> 00:11:04,749
that I have a wank that is in the packet

181
00:11:04,749 --> 00:11:09,920
but they also the op during the SF top

182
00:11:09,920 --> 00:11:13,989
you get another bit of information
another field

183
00:11:13,989 --> 00:11:17,529
that tells you how long the packets are
expected to be

184
00:11:17,529 --> 00:11:21,850
guess what buffers allocated Bay stop

185
00:11:21,850 --> 00:11:26,910
now that's not all when you've got to
feel that mean took agree with each

186
00:11:26,910 --> 00:11:27,600
other

187
00:11:27,600 --> 00:11:31,600
for the packet to be apart correctly
I'll

188
00:11:31,600 --> 00:11:35,230
well M that's exactly you you might I
expect that

189
00:11:35,230 --> 00:11:39,579
the parser will trust at some point that
they agree in value

190
00:11:39,579 --> 00:11:42,809
and this is exactly what happens here
that killing fields

191
00:11:42,809 --> 00:11:46,769
said not only that but they have to the
agree with each other

192
00:11:46,769 --> 00:11:49,779
and you view them as a table is being
something step

193
00:11:49,779 --> 00:11:53,839
set in stone you read that off with the
device and it's the way that it is

194
00:11:53,839 --> 00:11:57,929
but the device might be asked for the
structure more than what's

195
00:11:57,929 --> 00:12:02,509
the PlayStation groove x-play which
allows you to jailbreak PlayStation 3

196
00:12:02,509 --> 00:12:07,290
that functions by providing a short
length the first time

197
00:12:07,290 --> 00:12:11,059
which is when the buffers allocated and
a longer length the second time which is

198
00:12:11,059 --> 00:12:13,290
when the buffer is copied

199
00:12:13,290 --> 00:12:17,350
and any legitimate device these two
likes week with each other

200
00:12:17,350 --> 00:12:20,929
but because the devices asked multiple
times it's able to lie

201
00:12:20,929 --> 00:12:24,259
and it's able to change its mind in
between and bugs like that are

202
00:12:24,259 --> 00:12:27,269
everywhere within the stacks now

203
00:12:27,269 --> 00:12:30,609
consider how those text to keep up their
debug

204
00:12:30,609 --> 00:12:37,609
a case and actual device which doesn't
know how to why so many lights

205
00:12:37,629 --> 00:12:43,369
I when aren't you get something that is
essentially a or injection

206
00:12:43,369 --> 00:12:46,649
backup capability way lol

207
00:12:46,649 --> 00:12:51,149
you know you can lie out with much
agility

208
00:12:51,149 --> 00:12:54,899
so let's take a deeper dive into that
whole

209
00:12:54,899 --> 00:12:59,689
I'll ecosystem you want the USB port

210
00:12:59,689 --> 00:13:03,609
endure with several layers so the
current ok

211
00:13:03,609 --> 00:13:07,149
that the packet would go through and I
you can

212
00:13:07,149 --> 00:13:11,059
it turns out reach more just the USB
specific code

213
00:13:11,059 --> 00:13:14,160
not just your controller not just your
boss

214
00:13:14,160 --> 00:13:17,569
but also other bus and

215
00:13:17,569 --> 00:13:20,970
up virtual of bosses as well

216
00:13:20,970 --> 00:13:24,999
virtual are colonel communication
pathways

217
00:13:24,999 --> 00:13:28,160
and I if you look at this I in even

218
00:13:28,160 --> 00:13:31,499
their in in the systems like

219
00:13:31,499 --> 00:13:37,129
a Linux and BSD wet cold is not pretty

220
00:13:37,129 --> 00:13:42,119
and there's really a lift the Kings one
that subsystem

221
00:13:42,119 --> 00:13:45,269
so systems programmer you think

222
00:13:45,269 --> 00:13:49,619
okay here's my filesystem code so I
should implement

223
00:13:49,619 --> 00:13:53,160
up well opening files and

224
00:13:53,160 --> 00:13:56,910
are reading from files and writing to
files

225
00:13:56,910 --> 00:14:00,529
and maybe some IOC drops some special
commands where you post put the binary

226
00:14:00,529 --> 00:14:03,369
but buffer and hope that something on
the colonel and

227
00:14:03,369 --> 00:14:06,619
catches and processed correctly

228
00:14:06,619 --> 00:14:10,209
and there is a subtraction later that
you're dealing with

229
00:14:10,209 --> 00:14:14,129
that allows you to write to talk to
devices %uh that use different

230
00:14:14,129 --> 00:14:18,069
alchemy and system such as a scuzzy or
atopy

231
00:14:18,069 --> 00:14:21,919
or the mass storage driver then it hits

232
00:14:21,919 --> 00:14:25,129
up the actual controllers

233
00:14:25,129 --> 00:14:28,230
but what happens in and

234
00:14:28,230 --> 00:14:34,049
of your us cuz you're not happy drivers
are going to talk film abstraction layer

235
00:14:34,049 --> 00:14:39,009
so again you trust your obstruction
letters

236
00:14:39,009 --> 00:14:42,239
the most interesting thing starts
happening though

237
00:14:42,239 --> 00:14:46,509
Wembley re sports hits

238
00:14:46,509 --> 00:14:50,749
response goes the other way and this is
how the device itself actually answers

239
00:14:50,749 --> 00:14:52,879
to every question is posed to it

240
00:14:52,879 --> 00:14:57,919
but they're also its implicit
assumptions that the device will behave

241
00:14:57,919 --> 00:15:02,449
as the device always has so it's a sin
for example that every desk

242
00:15:02,449 --> 00:15:06,369
is a plot device and whatever you write
to a given block

243
00:15:06,369 --> 00:15:10,160
you can read back is that same block and
that the disc will move things under the

244
00:15:10,160 --> 00:15:11,009
hood

245
00:15:11,009 --> 00:15:16,350
but its perfectly possible for a desk to
change the contents of a file

246
00:15:16,350 --> 00:15:20,850
between two times that it's red and thus
I get time object typeof use a tax

247
00:15:20,850 --> 00:15:24,350
it's also possible for an emulated
device

248
00:15:24,350 --> 00:15:28,769
to send longer packets then would ever
be sent by the legitimate one

249
00:15:28,769 --> 00:15:32,970
or two to send data structures with the
legal values

250
00:15:32,970 --> 00:15:36,279
and all that requires is that you be
able to speak the language that you be

251
00:15:36,279 --> 00:15:39,189
able to get the right socket and then
say things across it

252
00:15:39,189 --> 00:15:42,829
and that's what the face decir allows
you to do so once you

253
00:15:42,829 --> 00:15:46,999
treat this game as the game up injecting
or packets

254
00:15:46,999 --> 00:15:51,739
it's pretty much over are you willing to
bet that the drivers

255
00:15:51,739 --> 00:15:55,199
do their safety checks consistently and
check for

256
00:15:55,199 --> 00:15:59,059
every condition that could be like the
ball once has been believed wipe

257
00:15:59,059 --> 00:16:02,689
and a previous stage incurred I

258
00:16:02,689 --> 00:16:06,019
just a little bit of terminology you've
got I

259
00:16:06,019 --> 00:16:09,389
transfers you got transfer sessions

260
00:16:09,389 --> 00:16:12,759
you've got up operetta course

261
00:16:12,759 --> 00:16:17,759
encapsulated your fight them you've got
us cuz your copy commands in particular

262
00:16:17,759 --> 00:16:18,649
ok

263
00:16:18,649 --> 00:16:22,369
and have that during the initial
negotiations

264
00:16:22,369 --> 00:16:26,689
sets up the ROO tick all the pack up
through the car

265
00:16:26,689 --> 00:16:29,919
so well packets come from the actual
port

266
00:16:29,919 --> 00:16:33,929
after the set-top the real simply handed

267
00:16:33,929 --> 00:16:37,139
to the appropriate a piece of code

268
00:16:37,139 --> 00:16:41,239
in each respectively there oh this
system

269
00:16:41,239 --> 00:16:45,369
so you are delivering

270
00:16:45,369 --> 00:16:48,999
your payloads well where were the core

271
00:16:48,999 --> 00:16:53,059
then you can choose any Braintree

272
00:16:53,059 --> 00:16:56,149
opt to get to one place or the other

273
00:16:56,149 --> 00:17:01,999
one subsystem or the other so its as if
you're falling down the rabbit hole

274
00:17:01,999 --> 00:17:05,549
every time every time a packet comes in

275
00:17:05,549 --> 00:17:08,889
except your set-top some sweet ships

276
00:17:08,889 --> 00:17:12,539
and you know exactly in which place of
this rabbit hole

277
00:17:12,539 --> 00:17:16,889
you're going to go to and then of course
as you step falling down the rabbit hole

278
00:17:16,889 --> 00:17:21,519
like Alice your going to she only
interesting stuff

279
00:17:21,519 --> 00:17:24,959
that if you remember she sees one she
falls down I

280
00:17:24,959 --> 00:17:28,189
some bookshelves I some

281
00:17:28,189 --> 00:17:31,919
furniture pictures who knows what else

282
00:17:31,919 --> 00:17:37,210
this picture is so much better on my
screen than on this one

283
00:17:37,210 --> 00:17:41,019
so are you following us

284
00:17:41,019 --> 00:17:45,370
nope City consider just how many targets
you have

285
00:17:45,370 --> 00:17:49,630
a event if you notice that the next
supports every USB device

286
00:17:49,630 --> 00:17:53,679
ever manufactured in the history of time
except for the wireless card in your

287
00:17:53,679 --> 00:17:55,220
laptop

288
00:17:55,220 --> 00:18:00,130
but we can impersonate any of those

289
00:18:00,130 --> 00:18:04,090
and we can target and attack and exploit
bad code in

290
00:18:04,090 --> 00:18:07,159
anyone have those drivers but for these

291
00:18:07,159 --> 00:18:10,730
devices that are so rarely used

292
00:18:10,730 --> 00:18:15,779
the bad quality that code never affects
the stability of the kernel unless that

293
00:18:15,779 --> 00:18:18,149
devices plugged it

294
00:18:18,149 --> 00:18:22,250
so it's never a target for improvement
or furry factor

295
00:18:22,250 --> 00:18:26,929
it's a hit a world of hurt it's a hidden
world of pay

296
00:18:26,929 --> 00:18:30,929
now imagine me being that boy wonder
from up

297
00:18:30,929 --> 00:18:34,070
what was that movie which movie

298
00:18:34,070 --> 00:18:39,059
I see dead people a sixth sense

299
00:18:39,059 --> 00:18:42,370
I see their drivers have

300
00:18:42,370 --> 00:18:47,139
so this is a a webcam and webcams a kind
of unique in that they exist

301
00:18:47,139 --> 00:18:50,399
both as a standard a

302
00:18:50,399 --> 00:18:54,450
which is why the I'm the more modern
ones all seem to work

303
00:18:54,450 --> 00:18:57,919
but you also have non standard ones each
which requires a vendor proprietary

304
00:18:57,919 --> 00:18:59,870
driver

305
00:18:59,870 --> 00:19:03,779
for their as astronomic photography

306
00:19:03,779 --> 00:19:08,139
for taking pictures the stars you really
what a CCD camera and dot

307
00:19:08,139 --> 00:19:12,149
a CMOS camera silver astronomers have
been hoarding

308
00:19:12,149 --> 00:19:17,289
these Phillips webcams from 1999

309
00:19:17,289 --> 00:19:20,639
which have a CCD camera and

310
00:19:20,639 --> 00:19:23,880
because if this Linex still shits ships
with drivers

311
00:19:23,880 --> 00:19:27,179
and you look at the reviews on Amazon
dot com you see these great little

312
00:19:27,179 --> 00:19:28,639
statements that God

313
00:19:28,639 --> 00:19:31,720
works great with Windows ME

314
00:19:31,720 --> 00:19:35,179
and this is still shipping now imagine

315
00:19:35,179 --> 00:19:40,059
seeing this on your network

316
00:19:40,059 --> 00:19:44,639
what you see in code for the same
vintage

317
00:19:44,639 --> 00:19:49,100
now up surprising

318
00:19:49,100 --> 00:19:52,990
you think well how is this going to hit
me

319
00:19:52,990 --> 00:19:56,330
how is this going to be delivered and
now I'm not plugged in I'm

320
00:19:56,330 --> 00:20:00,409
air kept then of course there is this
also might

321
00:20:00,409 --> 00:20:03,769
up sneaker net let's take a nap

322
00:20:03,769 --> 00:20:07,529
you she devices like this being brought
in all the time and you can tell that

323
00:20:07,529 --> 00:20:11,909
this is a PT because these are Chinese
letters here

324
00:20:11,909 --> 00:20:15,470
and this is indeed if

325
00:20:15,470 --> 00:20:20,110
this is a thumb drive that's been
reprogrammed to appear larger than it is

326
00:20:20,110 --> 00:20:23,820
including into the casing have a larger
hi desk

327
00:20:23,820 --> 00:20:26,940
and then they include bolts for Wat

328
00:20:26,940 --> 00:20:30,429
if Madison this correct except of course

329
00:20:30,429 --> 00:20:35,230
it just turns out if you're right the
large file run at on the 512

330
00:20:35,230 --> 00:20:40,309
up nigga bites overt and this is done to
scam Russian tourists

331
00:20:40,309 --> 00:20:45,779
this is not this is not done for
security reasons or if it has but it

332
00:20:45,779 --> 00:20:47,059
hasn't been found

333
00:20:47,059 --> 00:20:50,139
but if you really wanted to do this
properly you do it with replacement

334
00:20:50,139 --> 00:20:50,929
firmware

335
00:20:50,929 --> 00:20:54,360
and no one would notice

336
00:20:54,360 --> 00:20:58,409
and from where is more all that top
infect you can prototype this

337
00:20:58,409 --> 00:21:02,899
in ok as as we will show

338
00:21:02,899 --> 00:21:07,080
so why aren't we following that why are
we

339
00:21:07,080 --> 00:21:10,269
became all the zombies in the kernel
still and

340
00:21:10,269 --> 00:21:13,419
and workplaces I when we are present

341
00:21:13,419 --> 00:21:18,470
as a a device thats just happens to be
the sloppy webcam

342
00:21:18,470 --> 00:21:22,720
as your 0.00 that somebody written for
their course project

343
00:21:22,720 --> 00:21:25,950
up we need but

344
00:21:25,950 --> 00:21:29,179
to do what we do with other traffic

345
00:21:29,179 --> 00:21:32,240
that hits the vulnerable insights a
trusted insights

346
00:21:32,240 --> 00:21:35,259
over our machines we need to file

347
00:21:35,259 --> 00:21:39,139
us effect we have this excellent
business plan

348
00:21:39,139 --> 00:21:45,200
I ok we're going to take application
firewalls

349
00:21:45,200 --> 00:21:48,600
and replace them everywhere in text

350
00:21:48,600 --> 00:21:51,769
with driver firewalls

351
00:21:51,769 --> 00:21:56,289
and them I don't know collect underpants
and profits

352
00:21:56,289 --> 00:22:00,299
say this but we need I love you to sign
the NDA that I said accompany the

353
00:22:00,299 --> 00:22:01,779
passing out for the back

354
00:22:01,779 --> 00:22:05,460
if I

355
00:22:05,460 --> 00:22:08,730
I'm sure yeah W have are

356
00:22:08,730 --> 00:22:13,490
up perfect lawyers but seriously if you
wanna scan this is a pretty good scan to

357
00:22:13,490 --> 00:22:14,500
get into

358
00:22:14,500 --> 00:22:17,710
you could make a ton of money and
deliver nothing when in fact quite a few

359
00:22:17,710 --> 00:22:18,429
people do

360
00:22:18,429 --> 00:22:22,309
because are you see the USB protection
products

361
00:22:22,309 --> 00:22:25,610
then you ask yourself I which are not
super glue

362
00:22:25,610 --> 00:22:29,409
for some reason can you ask yourself
well how many

363
00:22:29,409 --> 00:22:32,909
over the different all levels of
commands

364
00:22:32,909 --> 00:22:36,600
that you can send through the different
pathways of the kernel

365
00:22:36,600 --> 00:22:40,750
if you control the packet entirely how
many of those

366
00:22:40,750 --> 00:22:43,919
do the recognize and trap

367
00:22:43,919 --> 00:22:48,929
I really sure that this thing that
presents a scuzzy device on present as i

368
00:22:48,929 --> 00:22:50,330
TAPPI device

369
00:22:50,330 --> 00:22:55,029
%uh just on the next right which you
might not even notice

370
00:22:55,029 --> 00:22:58,669
and even read the restrictions are well
implemented

371
00:22:58,669 --> 00:23:02,029
they're still rather easy to bypass for
example if you lock

372
00:23:02,029 --> 00:23:05,940
if you like a machine down so they can
only take keyboards and printers

373
00:23:05,940 --> 00:23:09,340
well that an attacker could emulate the
keyword and'. emulate a printer and type

374
00:23:09,340 --> 00:23:13,740
the PowerShell commands to print
everything out

375
00:23:13,740 --> 00:23:17,450
a and there are all sorts it bypasses
like this and the only reason they're

376
00:23:17,450 --> 00:23:18,720
not worth publishing at

377
00:23:18,720 --> 00:23:23,009
is that no one's actually using the
software to defend the USB ports

378
00:23:23,009 --> 00:23:27,379
but when they do driver firewalls

379
00:23:27,379 --> 00:23:30,730
so the only way up to understand

380
00:23:30,730 --> 00:23:34,149
how or something I like this works and
two

381
00:23:34,149 --> 00:23:37,840
actually deal with that efficiently is

382
00:23:37,840 --> 00:23:43,549
understanding the actual encapsulation
100

383
00:23:43,549 --> 00:23:46,749
it as you start looking at the code

384
00:23:46,749 --> 00:23:50,919
despite that many differences despite
the fact that

385
00:23:50,919 --> 00:23:55,389
I'm like up internet packets that carry
the address

386
00:23:55,389 --> 00:23:58,860
every packet and USB doesn't do that

387
00:23:58,860 --> 00:24:02,090
USB sets up all those up of ways

388
00:24:02,090 --> 00:24:05,710
at the initial stage a the enumeration

389
00:24:05,710 --> 00:24:10,230
a which we're going to talk later so
despite all those differences

390
00:24:10,230 --> 00:24:13,740
view still packets and they map

391
00:24:13,740 --> 00:24:18,129
pretty much 12 the engineering schema

392
00:24:18,129 --> 00:24:21,779
I love of network protocols and their
encapsulation

393
00:24:21,779 --> 00:24:24,799
of course you have the electric part

394
00:24:24,799 --> 00:24:29,340
so you start from the foul air from this
differential signaling

395
00:24:29,340 --> 00:24:32,779
are on the spare I love are wires that

396
00:24:32,779 --> 00:24:37,019
actually carry the signal and USB other
is another one for power

397
00:24:37,019 --> 00:24:41,620
on and are you're just about done

398
00:24:41,620 --> 00:24:44,909
huh cell what happens

399
00:24:44,909 --> 00:24:48,399
if you can't miss with that whale

400
00:24:48,399 --> 00:24:52,129
the caller answers: of various
controllers are quite higher than the

401
00:24:52,129 --> 00:24:53,549
standard it turns out

402
00:24:53,549 --> 00:24:57,460
so this is I you where you can't play
with the file air

403
00:24:57,460 --> 00:25:02,019
we have not quite done that we're using
a an off-the-shelf

404
00:25:02,019 --> 00:25:06,999
a USB controller chip I that plays the
wrong I love that card that accumulates

405
00:25:06,999 --> 00:25:07,799
the buffer

406
00:25:07,799 --> 00:25:12,009
and then sends the packet are just as we
request the to do

407
00:25:12,009 --> 00:25:15,539
up from 3.1 you have something that
looks like

408
00:25:15,539 --> 00:25:19,970
a packet fragment in IP well that's the

409
00:25:19,970 --> 00:25:23,600
USB packed and there are many

410
00:25:23,600 --> 00:25:27,169
implicit links and up

411
00:25:27,169 --> 00:25:30,190
explicit information about that length

412
00:25:30,190 --> 00:25:34,059
because the device is just so diverse
some of them support

413
00:25:34,059 --> 00:25:37,309
a larger packets some of them support
smaller packets

414
00:25:37,309 --> 00:25:40,399
I some of them can on the duo

415
00:25:40,399 --> 00:25:44,789
certain things others are can do a lot
more

416
00:25:44,789 --> 00:25:48,629
so you've got this stage at which the
packets

417
00:25:48,629 --> 00:25:52,460
are assembled into it a transaction

418
00:25:52,460 --> 00:25:56,350
and other transactions accumulate to
transfers

419
00:25:56,350 --> 00:25:59,570
and you've got at the bit where up

420
00:25:59,570 --> 00:26:04,659
a serious of up packets are assembled
into a buffer that

421
00:26:04,659 --> 00:26:08,259
constitutes a higher protocol all level

422
00:26:08,259 --> 00:26:13,200
entity but what they have those we know
what to do

423
00:26:13,200 --> 00:26:16,440
we've been we've done it to TCP IP
stacks

424
00:26:16,440 --> 00:26:21,169
we're doing it to ipv6 tax we should be
doing this to USB

425
00:26:21,169 --> 00:26:24,610
as well because the methodology is the
same

426
00:26:24,610 --> 00:26:28,159
the mapping at despite the differences
is

427
00:26:28,159 --> 00:26:33,019
up quite and quite surprisingly

428
00:26:33,019 --> 00:26:37,200
a similar after all the Zacks stepped

429
00:26:37,200 --> 00:26:41,480
all pieces of code that he invoked
encapsulated wrapped

430
00:26:41,480 --> 00:26:44,539
entities so let's talk about the

431
00:26:44,539 --> 00:26:48,730
physics of how to do this as this began
when I was

432
00:26:48,730 --> 00:26:54,509
teaching and a day is lectures for sig
is operating systems class at dartmouth

433
00:26:54,509 --> 00:26:57,970
and eyes explaining how different that
it passes work

434
00:26:57,970 --> 00:27:02,509
SPI and i2c a the buses that allow
microchips in a circuit board to talk to

435
00:27:02,509 --> 00:27:03,249
each other

436
00:27:03,249 --> 00:27:07,059
and he gets really excited on this ranch
that it's not a bus is just a network

437
00:27:07,059 --> 00:27:08,779
and there's nothing special about it

438
00:27:08,779 --> 00:27:12,070
and then he asked for a network adapter

439
00:27:12,070 --> 00:27:15,950
for USB adapter that allows him to speak
it in the rock so this is

440
00:27:15,950 --> 00:27:20,340
are of same day prototype we overnight
it is

441
00:27:20,340 --> 00:27:24,820
this set Max and development kit that's
designed for allowing you to write your

442
00:27:24,820 --> 00:27:26,269
own USB devices

443
00:27:26,269 --> 00:27:30,149
and the wired into a good fat which is
supportive mind for exposing SPID the

444
00:27:30,149 --> 00:27:31,279
host

445
00:27:31,279 --> 00:27:34,820
so were just speaking SPI over a good
fat

446
00:27:34,820 --> 00:27:39,269
to a USB chip and in the end you get a
Python library that lets you speak

447
00:27:39,269 --> 00:27:41,159
directly to the USB chip

448
00:27:41,159 --> 00:27:46,139
and it takes care of the rest for you I
we design a custom PCB which promptly

449
00:27:46,139 --> 00:27:48,320
got seized by German customs

450
00:27:48,320 --> 00:27:53,999
a the you just a little bit worse than
Australia when it comes to season my

451
00:27:53,999 --> 00:27:54,749
mail

452
00:27:54,749 --> 00:27:57,899
but another rep for another time a

453
00:27:57,899 --> 00:28:02,289
survey nobody two major dead PCB milling
machine and he actually carve out a

454
00:28:02,289 --> 00:28:03,600
board for me

455
00:28:03,600 --> 00:28:06,980
on this is that the first unit after its
been assembled

456
00:28:06,980 --> 00:28:11,499
and then the we can now network these
machines together

457
00:28:11,499 --> 00:28:15,259
through it the face dancer with a Python
script

458
00:28:15,259 --> 00:28:20,970
on one machine implementing whatever USB
device we want the other machine to see

459
00:28:20,970 --> 00:28:24,259
I we have a couple limitations as far as
how fast we can speak

460
00:28:24,259 --> 00:28:27,450
or how large the packet we can send
rather highlights the fact that they can

461
00:28:27,450 --> 00:28:28,289
set

462
00:28:28,289 --> 00:28:32,119
but aside from those we can emulate
pretty much anything

463
00:28:32,119 --> 00:28:35,850
so before we up take a deeper dive

464
00:28:35,850 --> 00:28:39,850
just look at this up beautiful diagram
you should she lives

465
00:28:39,850 --> 00:28:44,179
this is the mix controller chip now I
haven't got any electronics work in my

466
00:28:44,179 --> 00:28:47,299
life so when Travis says we have to
really mean stress

467
00:28:47,299 --> 00:28:50,389
ok but are

468
00:28:50,389 --> 00:28:54,139
this was a revelation here's a
microcontroller

469
00:28:54,139 --> 00:28:57,619
which is programmable in assembly I
understand

470
00:28:57,619 --> 00:29:02,649
in him as the has become for chip which
girls to the USB

471
00:29:02,649 --> 00:29:05,649
are a folk

472
00:29:05,649 --> 00:29:11,230
oh and this is your up many of my call
it whatever you are whatever you like

473
00:29:11,230 --> 00:29:15,429
share electricity etc calls ok properly
modulated

474
00:29:15,429 --> 00:29:19,570
when those people of the minus wires
right there

475
00:29:19,570 --> 00:29:23,440
now what this I microcontroller sales

476
00:29:23,440 --> 00:29:27,269
%um just basically phiri's receiving
from the host

477
00:29:27,269 --> 00:29:30,950
is albright's their rights good 1b

478
00:29:30,950 --> 00:29:34,669
SPI bus the three leads over there up
there

479
00:29:34,669 --> 00:29:39,299
all the FBI so we're just a big out she
really

480
00:29:39,299 --> 00:29:42,710
other bits all a bot

481
00:29:42,710 --> 00:29:46,200
and I the controller takes over all the
work

482
00:29:46,200 --> 00:29:49,639
of transforming them recording them into
the

483
00:29:49,639 --> 00:29:52,830
at Electric psycho the USB

484
00:29:52,830 --> 00:29:58,649
this is the most liberating thing I've
ever seen in my life

485
00:29:58,649 --> 00:30:01,749
yes of it demystified

486
00:30:01,749 --> 00:30:05,909
this our entire up game from

487
00:30:05,909 --> 00:30:09,289
if you will SL get out back in

488
00:30:09,289 --> 00:30:13,169
IOC Iran where I'm much more comfortable

489
00:30:13,169 --> 00:30:16,659
oh this is the year this is the protocol
that you speak

490
00:30:16,659 --> 00:30:19,840
RK that at max controller

491
00:30:19,840 --> 00:30:22,950
federally backed up MSP

492
00:30:22,950 --> 00:30:26,200
of 430 I'll CPU

493
00:30:26,200 --> 00:30:30,159
air literally you start we have saying

494
00:30:30,159 --> 00:30:34,879
okay the habits register number

495
00:30:34,879 --> 00:30:39,919
I want to talk to register number such a
fat when the controller chip

496
00:30:39,919 --> 00:30:43,379
this is I banged out all 100 s

497
00:30:43,379 --> 00:30:48,929
highs and lows on the SPI bus which is
just a glorified serial bus with a clock

498
00:30:48,929 --> 00:30:53,580
friend up you can say whether you are
writing or reading

499
00:30:53,580 --> 00:30:57,070
a particular that particular register

500
00:30:57,070 --> 00:31:01,360
de Mayo the most important bit ac step
bit

501
00:31:01,360 --> 00:31:05,059
when you're done with the actual but for

502
00:31:05,059 --> 00:31:08,169
at 10 those registers is a buffer

503
00:31:08,169 --> 00:31:13,590
and it will accumulate the bike that you
send over

504
00:31:13,590 --> 00:31:16,980
I V the this is the command by then
there is the date the bite

505
00:31:16,980 --> 00:31:20,690
and the data bytes will be accumulated
when your doc

506
00:31:20,690 --> 00:31:24,179
you said extabit and it says okay

507
00:31:24,179 --> 00:31:27,989
it transmits the entire accumulate the
buffer

508
00:31:27,989 --> 00:31:34,239
so you've got up your packet it's just
that easy

509
00:31:34,239 --> 00:31:38,080
and alright this wonderful trip is well

510
00:31:38,080 --> 00:31:42,899
out terrorist David s a bath yeah as
this is a a photograph with the chip

511
00:31:42,899 --> 00:31:46,429
a we have much there's a kind of the
regulations the United States so you can

512
00:31:46,429 --> 00:31:47,460
just buy a

513
00:31:47,460 --> 00:31:50,830
a couple leaders election in nitric acid
and take care of yourself

514
00:31:50,830 --> 00:31:54,710
a hear these pine resin cuz that's sick

515
00:31:54,710 --> 00:31:58,239
more environmentally friendly or some
similar happy nonsense but the

516
00:31:58,239 --> 00:32:01,360
the chip itself is publicly documented
so

517
00:32:01,360 --> 00:32:05,539
Maxim publishes two books on this chip
at the rather short you can print them

518
00:32:05,539 --> 00:32:06,179
out

519
00:32:06,179 --> 00:32:10,590
at home and these books explain
everything that you need to know in

520
00:32:10,590 --> 00:32:11,600
order to

521
00:32:11,600 --> 00:32:16,019
speak to the chip and develop the
beginnings your USB stack

522
00:32:16,019 --> 00:32:20,840
and they also include example code in C
for implementing a keyboard and mouse

523
00:32:20,840 --> 00:32:22,649
with this chip

524
00:32:22,649 --> 00:32:25,649
tonight taking these examples and
putting them the Python

525
00:32:25,649 --> 00:32:29,629
we were able to get our initial
prototype speaking USB and pretending to

526
00:32:29,629 --> 00:32:30,659
be a keyboard

527
00:32:30,659 --> 00:32:33,769
with only a second and develop

528
00:32:33,769 --> 00:32:37,149
and there was much rejoicing was much
rejoicing

529
00:32:37,149 --> 00:32:40,970
and there were many of those a

530
00:32:40,970 --> 00:32:44,169
this is a a panic n

531
00:32:44,169 --> 00:32:48,249
x.org specifically in the and video
drivers for x.org

532
00:32:48,249 --> 00:32:53,549
I because of course you get to speak to
those

533
00:32:53,549 --> 00:32:57,049
a expect all sorts of things the air

534
00:32:57,049 --> 00:33:00,619
a bit when you're when you're doing
these traces you also want to be able to

535
00:33:00,619 --> 00:33:02,279
Steph legitimate devices

536
00:33:02,279 --> 00:33:06,369
and the the traffic that you generate
with the faced answer of course you have

537
00:33:06,369 --> 00:33:07,139
a log I love

538
00:33:07,139 --> 00:33:10,759
because it's reading to your own Python
code but the same is not true for a

539
00:33:10,759 --> 00:33:12,409
legitimate keyboard or mouse

540
00:33:12,409 --> 00:33:15,809
see solutions are a rather varied this

541
00:33:15,809 --> 00:33:19,600
is a transaction log from VMware

542
00:33:19,600 --> 00:33:23,080
VMware allows you to record all serial
traffic

543
00:33:23,080 --> 00:33:26,869
and then there's a a graphical interface
for viewing the packets later on

544
00:33:26,869 --> 00:33:30,759
order if the device that you're trying
to emulate happens to be supported by

545
00:33:30,759 --> 00:33:31,899
the next

546
00:33:31,899 --> 00:33:36,110
you can just use Wireshark and Wireshark
out of the box on modern the next will

547
00:33:36,110 --> 00:33:38,200
sniff USB devices

548
00:33:38,200 --> 00:33:42,610
this a is particularly nice because it
allows you to decode the packets

549
00:33:42,610 --> 00:33:46,169
so if your own traffic isn't working you
can

550
00:33:46,169 --> 00:33:49,779
find your own the buds in Europe
fermentation more easily this way

551
00:33:49,779 --> 00:33:52,789
I began avoid a couple of unexpected

552
00:33:52,789 --> 00:33:56,119
colonel FedEx yeah it is terribly

553
00:33:56,119 --> 00:33:59,759
frustrating when you're trying to get a
legitimate

554
00:33:59,759 --> 00:34:03,399
drive every legitimate emulator working
so that you can later fis

555
00:34:03,399 --> 00:34:07,989
and before you get to the sizing phase
the stock kernel panicking your laptop

556
00:34:07,989 --> 00:34:11,090
a which just speaks to the

557
00:34:11,090 --> 00:34:14,629
at many layers which are trusted I to
handle

558
00:34:14,629 --> 00:34:17,659
the USB pockets as if they were the most

559
00:34:17,659 --> 00:34:21,399
friendly thing ever that you could
ultimately trust between the two

560
00:34:21,399 --> 00:34:23,290
different code points and your car

561
00:34:23,290 --> 00:34:27,339
and you kept it someone could steal a
bottle of Pellegrino for me I would

562
00:34:27,339 --> 00:34:30,309
appreciate that

563
00:34:30,309 --> 00:34:33,579
so let's see how the devices

564
00:34:33,579 --> 00:34:37,619
announce themselves and set-top or their
communication pathways

565
00:34:37,619 --> 00:34:42,230
with the host of two USB to up to and
including USB 20

566
00:34:42,230 --> 00:34:46,250
the devices are a silent if not spoken
to

567
00:34:46,250 --> 00:34:49,339
so they only respond two commands

568
00:34:49,339 --> 00:34:53,079
from the a host and the host that has
what is called

569
00:34:53,079 --> 00:34:57,000
enumeration it in this enumeration

570
00:34:57,000 --> 00:35:00,910
they sell those are gigantic see
structures J get to get back overseas

571
00:35:00,910 --> 00:35:01,910
structures

572
00:35:01,910 --> 00:35:05,030
or variable sizes the charcoal
descriptors

573
00:35:05,030 --> 00:35:09,799
in a cell layers of descriptors that
descriptor specific to a vendor

574
00:35:09,799 --> 00:35:14,510
to a class up to a device

575
00:35:14,510 --> 00:35:18,309
initially a device starts with a
broadcast

576
00:35:18,309 --> 00:35:21,869
address address is Justin integer but

577
00:35:21,869 --> 00:35:25,589
%uh again think about as a network in
point

578
00:35:25,589 --> 00:35:29,150
in fact the easy thing to call them
endpoint out in the

579
00:35:29,150 --> 00:35:32,540
USB specification in these I like ports

580
00:35:32,540 --> 00:35:36,480
a device has several and points usually
four

581
00:35:36,480 --> 00:35:41,680
are the I am .0 is typically used for
configuration

582
00:35:41,680 --> 00:35:45,849
so the first assigns

583
00:35:45,849 --> 00:35:50,589
the device number that after that a
compliant devices

584
00:35:50,589 --> 00:35:53,619
well stick to that number then let's
pick

585
00:35:53,619 --> 00:35:57,089
as any other device on the same hop

586
00:35:57,089 --> 00:36:03,140
and guess what we could do so of this is
their depiction from the Air Max

587
00:36:03,140 --> 00:36:06,589
are many alls of the any she'll um

588
00:36:06,589 --> 00:36:11,119
transaction I here is the host talking
to the device

589
00:36:11,119 --> 00:36:15,660
I now that the device is electrically
connected itself the command get

590
00:36:15,660 --> 00:36:17,549
described or

591
00:36:17,549 --> 00:36:21,339
then it sends it to ok the well

592
00:36:21,339 --> 00:36:25,210
broadcast address shall we call it

593
00:36:25,210 --> 00:36:29,490
the device here is that Henry split with
the descriptor

594
00:36:29,490 --> 00:36:32,819
here's the update the choc

595
00:36:32,819 --> 00:36:37,359
okay I several more transactions like
this will take place

596
00:36:37,359 --> 00:36:40,470
and these transactions will increase

597
00:36:40,470 --> 00:36:44,890
out most likely at the solace over the
packets being exchanged

598
00:36:44,890 --> 00:36:48,180
are they will all configured are various

599
00:36:48,180 --> 00:36:51,869
are tables in the kernel

600
00:36:51,869 --> 00:36:56,579
that will be used to quell there right
himmler functionals

601
00:36:56,579 --> 00:37:01,540
that when the back at the rice in the
kernel I think of this as a routing

602
00:37:01,540 --> 00:37:05,329
and so should you your writing your
payload

603
00:37:05,329 --> 00:37:08,770
from one up point in the code art to
another

604
00:37:08,770 --> 00:37:12,119
and we have a doctoral student but
working on

605
00:37:12,119 --> 00:37:15,170
mapping this out and

606
00:37:15,170 --> 00:37:21,369
on the tools that would allow you to
just produce those payloads at will

607
00:37:21,369 --> 00:37:24,740
then the device accepts the number
headed

608
00:37:24,740 --> 00:37:28,099
all the up next %uh layers

609
00:37:28,099 --> 00:37:31,640
of the protocol get to work

610
00:37:31,640 --> 00:37:36,430
now is whether a complication here that
the max 3420 takes care of for us

611
00:37:36,430 --> 00:37:41,089
a which is that USB has very strict
requirements for how quickly you need to

612
00:37:41,089 --> 00:37:41,780
reply

613
00:37:41,780 --> 00:37:47,829
to a query and this being a ass speak
when spoken to protocol

614
00:37:47,829 --> 00:37:53,170
the USB devices kinda like a child being
held up by a very patient parent

615
00:37:53,170 --> 00:37:56,329
so long as the child says that he'll
clean up his room after the next

616
00:37:56,329 --> 00:37:57,559
commercial

617
00:37:57,559 --> 00:38:01,000
the parent will %uh allowed to keep
watching cartoons

618
00:38:01,000 --> 00:38:03,920
that a child doesn't actually have to do
it after next commercially he just has

619
00:38:03,920 --> 00:38:05,670
to make some sort of eight excuse

620
00:38:05,670 --> 00:38:09,220
and in USB the same thing happens so if
you look at this

621
00:38:09,220 --> 00:38:13,619
on the USB wire as opposed to the FBI
wire

622
00:38:13,619 --> 00:38:17,660
the only additional thing I these knack
instructions

623
00:38:17,660 --> 00:38:21,319
in which the devices replying saying
that its not yet ready to take any new

624
00:38:21,319 --> 00:38:23,150
data

625
00:38:23,150 --> 00:38:27,020
and this allows the good fat ha I said
if a sensor hardware

626
00:38:27,020 --> 00:38:31,579
to stall wow it's waiting for the hosts
to reply

627
00:38:31,579 --> 00:38:35,150
and this is how we're able to speak USB
over USB

628
00:38:35,150 --> 00:38:39,579
without any terribly complicated
firmware or infect any timeouts

629
00:38:39,579 --> 00:38:42,890
I which would be gruesome if this
picture we're not implemented by Max

630
00:38:42,890 --> 00:38:44,109
itself

631
00:38:44,109 --> 00:38:47,349
but it actually does so automatically so
long as that

632
00:38:47,349 --> 00:38:50,819
extabit does not set at the end the year

633
00:38:50,819 --> 00:38:54,359
register that is a buffer accumulating
your bike some Tupac it's not ready to

634
00:38:54,359 --> 00:38:54,950
go

635
00:38:54,950 --> 00:38:58,349
it will automatically send those next
and this is just it

636
00:38:58,349 --> 00:39:01,440
and of course this is an essential
feature the protocol because it was

637
00:39:01,440 --> 00:39:02,619
supposed to support

638
00:39:02,619 --> 00:39:06,490
are very fast device us %um very slow
device

639
00:39:06,490 --> 00:39:09,569
are and devices that need to think long
and hard

640
00:39:09,569 --> 00:39:13,510
up before responding with one of those
descriptors to acquire

641
00:39:13,510 --> 00:39:16,599
sale well this out luckily

642
00:39:16,599 --> 00:39:20,359
is I'll neatly swept under the rug

643
00:39:20,359 --> 00:39:23,950
and you can right USB devices in part

644
00:39:23,950 --> 00:39:27,970
to and I'm not joking when I say that if
you can write a web server

645
00:39:27,970 --> 00:39:33,700
you can write a hike desk a hard disk is
not that much more complicated

646
00:39:33,700 --> 00:39:36,750
in fact you can write any device at all

647
00:39:36,750 --> 00:39:40,059
and you can't present as any device at
all

648
00:39:40,059 --> 00:39:43,470
op me at the devices

649
00:39:43,470 --> 00:39:48,220
have standards you you gotta have
stepped

650
00:39:48,220 --> 00:39:52,160
that across types which %uh standardized

651
00:39:52,160 --> 00:39:55,930
if this is really the reason why your
keyboard and mouse

652
00:39:55,930 --> 00:39:59,540
a pretty much do just about the same
effect under the hood

653
00:39:59,540 --> 00:40:04,049
off but then vendor types which are not
standardized at all

654
00:40:04,049 --> 00:40:09,299
is so each of these has its own quirks
and implementation

655
00:40:09,299 --> 00:40:14,869
and beyond that you have a competition
between the standard device cut this is

656
00:40:14,869 --> 00:40:18,619
and the vendor specific types for
example in wet campus there is a

657
00:40:18,619 --> 00:40:20,950
standard for USB imaging device

658
00:40:20,950 --> 00:40:24,869
but it doesn't have all the features
that a given camera might support

659
00:40:24,869 --> 00:40:29,059
so some cameras will have additional
features and break from the

660
00:40:29,059 --> 00:40:33,470
standard others are just too old order
to

661
00:40:33,470 --> 00:40:37,309
device-specific for some reason wifi
drivers have not been standardized

662
00:40:37,309 --> 00:40:41,680
there's no good reason why each wifi
card needs to have different drivers

663
00:40:41,680 --> 00:40:43,460
than competing vendors

664
00:40:43,460 --> 00:40:47,710
but it does and so is you look through
these

665
00:40:47,710 --> 00:40:51,740
you is the attacker have the ability to
hit something standardized in which case

666
00:40:51,740 --> 00:40:52,799
you can expect

667
00:40:52,799 --> 00:40:56,349
every operating system except for
Windows to support or something which is

668
00:40:56,349 --> 00:40:59,859
not standardized in which case you might
have to load driver

669
00:40:59,859 --> 00:41:05,930
so if you are a Frank Herbert fan you
might remember the phase dancer race

670
00:41:05,930 --> 00:41:09,099
I who could or shapeshifters and could
assume

671
00:41:09,099 --> 00:41:12,420
any I shape whatsoever

672
00:41:12,420 --> 00:41:16,200
rock if you can make the web server you
can read a desk

673
00:41:16,200 --> 00:41:20,740
the designs for this the code and the
hardware all free

674
00:41:20,740 --> 00:41:24,970
the hardware itself we sell for the cost
of shipping or free shipping for

675
00:41:24,970 --> 00:41:26,200
students

676
00:41:26,200 --> 00:41:31,160
and I've got Pakistan here sergei has a
couple so we can set you up afterward

677
00:41:31,160 --> 00:41:34,260
you do need to solder this device
yourself

678
00:41:34,260 --> 00:41:37,670
if you're not yet comfortable with
soldering I suggest that you get to

679
00:41:37,670 --> 00:41:41,140
and blackmail somebody look like a space
into helping you out

680
00:41:41,140 --> 00:41:44,270
by the my beer

681
00:41:44,270 --> 00:41:47,359
so let's talk about the targets

682
00:41:47,359 --> 00:41:50,780
the structure of those bugs is pretty
much

683
00:41:50,780 --> 00:41:56,089
the same so you see if there is the Nick
local of interface that you're using as

684
00:41:56,089 --> 00:41:59,170
up a programmer and then of course there
is the ugly

685
00:41:59,170 --> 00:42:02,589
I backside personal

686
00:42:02,589 --> 00:42:05,640
you can exploit op enumeration

687
00:42:05,640 --> 00:42:11,910
so this is a win your sake we want to be
and the host believes you

688
00:42:11,910 --> 00:42:15,230
if up and

689
00:42:15,230 --> 00:42:18,559
whale it used to cart at your head

690
00:42:18,559 --> 00:42:21,619
up great platforms like TMZ

691
00:42:21,619 --> 00:42:25,220
but you couldn't really program them
fast

692
00:42:25,220 --> 00:42:28,450
because you needed to reprogram them
before every try

693
00:42:28,450 --> 00:42:31,460
well now we don't need to up

694
00:42:31,460 --> 00:42:34,819
soul its I much

695
00:42:34,819 --> 00:42:38,869
much cut down a development a

696
00:42:38,869 --> 00:42:42,280
time I am Asus and simple examples to
play with

697
00:42:42,280 --> 00:42:45,510
a hrt emulation is the first demo that

698
00:42:45,510 --> 00:42:48,900
any given USB platform implements whoa

699
00:42:48,900 --> 00:42:53,470
quips at home so after expanding

700
00:42:53,470 --> 00:42:57,500
HID is sorta stuck being able to make a
keyboard and a mouse

701
00:42:57,500 --> 00:43:00,700
and you want to do something beyond that
so the

702
00:43:00,700 --> 00:43:05,289
dissolution this issue that is to

703
00:43:05,289 --> 00:43:10,780
I to look for to first look for
investing bugs Nhat

704
00:43:10,780 --> 00:43:15,220
as he hears the HIV format string bag
the Chrome OS guys found this sick

705
00:43:15,220 --> 00:43:21,359
and exhort so up you know however lines
and

706
00:43:21,359 --> 00:43:25,420
and such have all these kiosks on the
seats that run the

707
00:43:25,420 --> 00:43:30,049
old Linux well Lex until about a year
ago had this format string bag we could

708
00:43:30,049 --> 00:43:31,299
have percent

709
00:43:31,299 --> 00:43:36,140
that we give a format string in the
manufacturer or device track

710
00:43:36,140 --> 00:43:39,470
now no legitimate C programmer has ever
known

711
00:43:39,470 --> 00:43:43,099
what percent and does but what it does

712
00:43:43,099 --> 00:43:46,480
is it says that the object I didn't

713
00:43:46,480 --> 00:43:49,970
the the value that comes after it in the

714
00:43:49,970 --> 00:43:53,200
in the the premise that format strings
if you do that print after the percent

715
00:43:53,200 --> 00:43:53,849
and

716
00:43:53,849 --> 00:43:57,020
it says that the length should be
written to the address that in that

717
00:43:57,020 --> 00:43:58,380
variable

718
00:43:58,380 --> 00:44:01,809
that's this allows you to overwrite
arbitrary piece is a memory

719
00:44:01,809 --> 00:44:05,500
which can get you code execution now I
and modern

720
00:44:05,500 --> 00:44:08,890
desktop Linux around modern and writer
and mother Windows these a rather

721
00:44:08,890 --> 00:44:10,490
difficult to explain

722
00:44:10,490 --> 00:44:14,260
on Linux from 10 years ago which is what
a lot of these kiosks run

723
00:44:14,260 --> 00:44:18,400
their piece a cake to exploit and this
is an X 11 if all things

724
00:44:18,400 --> 00:44:22,539
until last year I am

725
00:44:22,539 --> 00:44:26,569
airlines have these to also when he
finds hada

726
00:44:26,569 --> 00:44:29,650
you find that's the weirdest places so

727
00:44:29,650 --> 00:44:32,670
Skype crashes on OSX

728
00:44:32,670 --> 00:44:39,670
if the descriptor for your keyboard is
now for

729
00:44:41,280 --> 00:44:45,390
on it's also headed to host but
emulation our initial prototype did this

730
00:44:45,390 --> 00:44:49,289
but I cut the feature out thinking that
it wasn't necessary and then I realized

731
00:44:49,289 --> 00:44:51,130
how long it takes to enumerate

732
00:44:51,130 --> 00:44:55,210
a device and I realize it's really handy
when facing a device

733
00:44:55,210 --> 00:44:59,369
for vulnerabilities in the device that
allow you to cook to get code execution

734
00:44:59,369 --> 00:45:03,420
inside a bit in order to replace the
firmware it up the firmware

735
00:45:03,420 --> 00:45:08,020
that it's incredibly handy I so higher
is now available the face ten to twenty

736
00:45:08,020 --> 00:45:11,930
and I'm it's great you can know

737
00:45:11,930 --> 00:45:15,359
you can let these devices up you can say
speak to a high disk

738
00:45:15,359 --> 00:45:18,920
and just repeatedly request the same
sector and whatever the hard disk

739
00:45:18,920 --> 00:45:22,599
crashes you already back in the same
position without having to remember it

740
00:45:22,599 --> 00:45:25,770
an iOS device bugs are a lot easier to
exploit

741
00:45:25,770 --> 00:45:29,829
than her side box because you never have
any address space layout randomization

742
00:45:29,829 --> 00:45:34,579
any Data Execution Prevention isn't for
security it's just because the designers

743
00:45:34,579 --> 00:45:37,720
were too lazy to allow you to execute
from rap

744
00:45:37,720 --> 00:45:41,700
a and there's this one but everywhere
which

745
00:45:41,700 --> 00:45:45,549
is that devices have the strings table
about a quarter of them allow you to

746
00:45:45,549 --> 00:45:47,569
read past the end of it as a memory leak

747
00:45:47,569 --> 00:45:51,900
ever exposure %uh there's the device
firmware update protocol which the face

748
00:45:51,900 --> 00:45:53,099
dancer for months

749
00:45:53,099 --> 00:45:57,589
this is how the firmware of your iPhone
or iPod is updated

750
00:45:57,589 --> 00:46:00,660
and on the iPhone's of course they have
for

751
00:46:00,660 --> 00:46:03,700
cryptographic check signs and it's
rather difficult it's like this

752
00:46:03,700 --> 00:46:07,640
but that's not true for the other
targets so you can emulate

753
00:46:07,640 --> 00:46:10,760
cheap mp3 players

754
00:46:10,760 --> 00:46:14,109
give it a firmware update and use that
to get a copy of the firmware without

755
00:46:14,109 --> 00:46:17,140
even bothering up reverse engineering
the update tool

756
00:46:17,140 --> 00:46:21,549
you can then replay this to reflash the
mp3 player perhaps the patch

757
00:46:21,549 --> 00:46:25,130
and every all that were kept is new
again because now we just have to make

758
00:46:25,130 --> 00:46:25,920
me

759
00:46:25,920 --> 00:46:30,640
a router or gateway a so I tested this
by eight

760
00:46:30,640 --> 00:46:33,849
emulating the bootloader from my clothes
pins

761
00:46:33,849 --> 00:46:38,150
ever tooth here you can see the firmware
coming across the host believes that I'm

762
00:46:38,150 --> 00:46:39,839
on over to

763
00:46:39,839 --> 00:46:43,579
and he wrote me the nicest cease desist
letter I've ever gotten the

764
00:46:43,579 --> 00:46:46,079
dear mister could speed it has come to
my attention that you've created a

765
00:46:46,079 --> 00:46:47,569
hacking tool

766
00:46:47,569 --> 00:46:51,319
that may be used to intercept from
intended for deployment USB devices and

767
00:46:51,319 --> 00:46:54,059
that you have used this to capture
firmware for my productivity

768
00:46:54,059 --> 00:46:58,079
one I demand that you cease and desist
reverse engineering a publication

769
00:46:58,079 --> 00:47:01,650
of technical information related to it
which is what the richest firmer as open

770
00:47:01,650 --> 00:47:03,819
source maybe for downloaded freely

771
00:47:03,819 --> 00:47:07,140
I insist that you instead turn your
attention to proprietary technology that

772
00:47:07,140 --> 00:47:09,589
is less widely available and understood

773
00:47:09,589 --> 00:47:16,589
of %ah

774
00:47:16,690 --> 00:47:21,220
I got a phone call when this hit Twitter
with a guy offering to lend me legal

775
00:47:21,220 --> 00:47:22,150
services

776
00:47:22,150 --> 00:47:28,029
and and to donate ten dollars to my
defence fund

777
00:47:28,029 --> 00:47:32,510
if that's not true the paper that was
tried in with the

778
00:47:32,510 --> 00:47:36,640
a marker on printer paper as all proper
law firms to

779
00:47:36,640 --> 00:47:41,140
I you know 78 mass storage

780
00:47:41,140 --> 00:47:44,839
at the USENIX workshop in effect
technologies in

781
00:47:44,839 --> 00:47:49,200
that last year Colin Myler published as
description of how a jailbroken

782
00:47:49,200 --> 00:47:52,500
a Samsung television and he did so

783
00:47:52,500 --> 00:47:58,990
by having an XML file the excel file
reference is a plugin by file name:

784
00:47:58,990 --> 00:48:03,720
the plugin either ends and I SWS in
which it safe to install

785
00:48:03,720 --> 00:48:08,630
or dot SL in which case it's not
considered safe to install

786
00:48:08,630 --> 00:48:13,299
know it jailbreak for an earlier version
of this had simply included ISO

787
00:48:13,299 --> 00:48:16,770
back when they were allowed with that
the tell that the men

788
00:48:16,770 --> 00:48:20,549
linked into it and then as soon as you
loaded this you could just tell that in

789
00:48:20,549 --> 00:48:23,260
your television and get a a shelf

790
00:48:23,260 --> 00:48:27,220
to a car and it was he made 300
megabytes is patting

791
00:48:27,220 --> 00:48:31,660
white space this XML file animated desk
where the first time the

792
00:48:31,660 --> 00:48:35,470
you read the file it gives you the dot
SWF extension

793
00:48:35,470 --> 00:48:39,260
the second time they can see that eso
extension

794
00:48:39,260 --> 00:48:43,190
so in the shell script says if this is
safe that install it

795
00:48:43,190 --> 00:48:46,339
well it is safe but a different one is
installed

796
00:48:46,339 --> 00:48:49,980
and this is how I jail broke the TV and
this is

797
00:48:49,980 --> 00:48:54,569
up war-weary scratching the layer of
trust assumptions

798
00:48:54,569 --> 00:48:58,220
made throughout the Colonels

799
00:48:58,220 --> 00:49:01,910
and you can also do active just get a
forensics so

800
00:49:01,910 --> 00:49:05,470
at the 29th CCC congress II presented

801
00:49:05,470 --> 00:49:09,930
a disc emulator that allows you to tell
when you're in a forensics lab

802
00:49:09,930 --> 00:49:13,190
and if you are different sects lab you
can behave differently so

803
00:49:13,190 --> 00:49:16,390
for example the disc candidate present a
blank image

804
00:49:16,390 --> 00:49:20,339
and the race itself if it's being read
linearly

805
00:49:20,339 --> 00:49:24,020
because DD reads a desk from the
beginning to the end in order

806
00:49:24,020 --> 00:49:28,890
what they're really fancy tools that
read from the and back to the beginning

807
00:49:28,890 --> 00:49:32,099
out but they don't crawl a filesystem

808
00:49:32,099 --> 00:49:36,510
in the way that a legitimate client does
so a legitimate client will

809
00:49:36,510 --> 00:49:40,900
%uh sorry read parents before children
it follows the directory structure

810
00:49:40,900 --> 00:49:44,700
it never reads a file before the
directory that contains that file

811
00:49:44,700 --> 00:49:48,910
and you can check for these things it's
also trivially easy to you fingerprint

812
00:49:48,910 --> 00:49:50,460
on the operating system

813
00:49:50,460 --> 00:49:55,559
windows will write a time step the desk
as soon as it melts at

814
00:49:55,559 --> 00:50:00,400
and max will have spotlight call the
desk in order to index

815
00:50:00,400 --> 00:50:05,869
athletics will I have behavior that
varies by the autumn outer

816
00:50:05,869 --> 00:50:09,520
and you can also fingerprint the autumn
outer windows also has this delightful

817
00:50:09,520 --> 00:50:10,180
have it

818
00:50:10,180 --> 00:50:14,569
love reading the master boot record nine
times whereas maxillary at five times

819
00:50:14,569 --> 00:50:17,839
because neither these figured out how
cashing works

820
00:50:17,839 --> 00:50:21,819
sleep

821
00:50:21,819 --> 00:50:24,869
a was the first time that is a week m-f
for this

822
00:50:24,869 --> 00:50:28,339
a it was said a USB serial port emulator

823
00:50:28,339 --> 00:50:32,710
and this is trivially easy it's the
easiest emulator I've ever written

824
00:50:32,710 --> 00:50:36,180
but out you start wonder what's useful
for well you can emulate an

825
00:50:36,180 --> 00:50:39,099
uninterruptible power supply in order
the computer to reboot

826
00:50:39,099 --> 00:50:42,359
you could emulate a modem or phone or
radio

827
00:50:42,359 --> 00:50:45,829
you can emulate the face dancer itself
because actually use this USB to serial

828
00:50:45,829 --> 00:50:48,710
chip in the face dancer

829
00:50:48,710 --> 00:50:52,200
plans with plans for them I I took apart

830
00:50:52,200 --> 00:50:56,910
this machine at the top a this is a
memory card reader

831
00:50:56,910 --> 00:51:01,400
for an election systems & Services as a
election systems & Software

832
00:51:01,400 --> 00:51:05,770
voting machine I so this is what you
actually use to read the votes out into

833
00:51:05,770 --> 00:51:07,690
the workstation the polling place

834
00:51:07,690 --> 00:51:12,779
and if it up the firmware from this its
my first USB serial port

835
00:51:12,779 --> 00:51:17,760
attacking that actually the title it's
for the pic 16

836
00:51:17,760 --> 00:51:21,079
and you can even find the source code
for it by googling for strings that are

837
00:51:21,079 --> 00:51:23,410
found within the former image

838
00:51:23,410 --> 00:51:26,839
that's how you start a programming
project boilerplate

839
00:51:26,839 --> 00:51:31,579
the boilerplate lives forever

840
00:51:31,579 --> 00:51:36,319
when you're targeting Windows I'm I
maintains drive is a great

841
00:51:36,319 --> 00:51:41,150
but they're not included by default I
however is auto installation

842
00:51:41,150 --> 00:51:44,420
she get the same variety of device apart
as you do in latex

843
00:51:44,420 --> 00:51:48,170
you just have to wait for the driver to
be downloaded and installed

844
00:51:48,170 --> 00:51:52,559
add you also it get to choose between
the manufacturers

845
00:51:52,559 --> 00:51:57,099
%uh the driver so the same chip will be
sold under different brand names

846
00:51:57,099 --> 00:52:01,069
see you have an Atheros wireless adapter
and you have a Hello Kitty wireless

847
00:52:01,069 --> 00:52:02,020
adapter

848
00:52:02,020 --> 00:52:05,410
and because they use the same chipset it
right your emulator will work for

849
00:52:05,410 --> 00:52:09,740
either of them I'll between %uh throws
and Hello Kitty which is more likely to

850
00:52:09,740 --> 00:52:12,119
patch bucks

851
00:52:12,119 --> 00:52:15,339
Hello Kitty

852
00:52:15,339 --> 00:52:18,490
actually a Windows is moving towards
user Outland

853
00:52:18,490 --> 00:52:23,460
USB sticks and this is at definitely the
way things are supposed to go

854
00:52:23,460 --> 00:52:27,309
given how easy these things are to
exploit within the kernel

855
00:52:27,309 --> 00:52:30,339
I'm in Linux all drivers are included by
default

856
00:52:30,339 --> 00:52:34,210
you want to just builds every last USB
driver it can and they're automatically

857
00:52:34,210 --> 00:52:35,190
loaded

858
00:52:35,190 --> 00:52:38,400
I'm and there no looting delays see
taxes can throw love these

859
00:52:38,400 --> 00:52:41,859
and just fill the curl up with models it
doesn't need

860
00:52:41,859 --> 00:52:44,930
out and this is massive attack surface
there

861
00:52:44,930 --> 00:52:49,720
out on a Mac the stacks performances
crap

862
00:52:49,720 --> 00:52:53,299
it's really slow Apple is the only
platform in which

863
00:52:53,299 --> 00:52:57,690
a face dancer can't emulate a device for
the computer that it's running on

864
00:52:57,690 --> 00:53:01,510
because the USB stack freezes halfway
through our

865
00:53:01,510 --> 00:53:07,210
initialization I see can't emulate a
keyboard on your own computer

866
00:53:07,210 --> 00:53:11,079
you also how does speed problems so
we're not able to emulate

867
00:53:11,079 --> 00:53:14,630
at we're not able to act as a host all
the time on a Mac because we can't

868
00:53:14,630 --> 00:53:15,529
always speak

869
00:53:15,529 --> 00:53:19,069
to the device fast enough for the device
to think that we're still there

870
00:53:19,069 --> 00:53:24,029
I and there's a I'll active driver
diversity so it'll support these devices

871
00:53:24,029 --> 00:53:25,220
on the right

872
00:53:25,220 --> 00:53:28,660
and keyboards and mice but that's about
it and any other drivers have to be

873
00:53:28,660 --> 00:53:30,299
manually installed

874
00:53:30,299 --> 00:53:35,130
a hopefully Apple will add automatic
installation traversing the App Store

875
00:53:35,130 --> 00:53:39,369
and then we can start putting them as
well as the others

876
00:53:39,369 --> 00:53:42,869
I FreeBSD is a little bit weird in the
complex drivers are not included by

877
00:53:42,869 --> 00:53:43,549
default

878
00:53:43,549 --> 00:53:46,770
see you have to actually tell it that
you want it to load say the Atheros

879
00:53:46,770 --> 00:53:47,549
driver

880
00:53:47,549 --> 00:53:52,819
before it will do anything complicated
it also has a USB packet filter

881
00:53:52,819 --> 00:53:58,640
a which at seven point might be used to
set up firewall style rules for devices

882
00:53:58,640 --> 00:54:02,869
I adesso it West 2012 in Tampa

883
00:54:02,869 --> 00:54:06,319
Finland sick and I published a a paper
along with the

884
00:54:06,319 --> 00:54:09,760
addressed in the we work with and this
paper we actually map through the

885
00:54:09,760 --> 00:54:11,109
FreeBSD kernel

886
00:54:11,109 --> 00:54:16,869
using T trace and were able to map all
the pieces that were accessed by a given

887
00:54:16,869 --> 00:54:21,160
USB transaction

888
00:54:21,160 --> 00:54:24,260
and so we come to the conclusion

889
00:54:24,260 --> 00:54:28,480
I you should do following those ports or
gluing them shot

890
00:54:28,480 --> 00:54:31,980
those way too much I code

891
00:54:31,980 --> 00:54:36,990
I trustee code that makes up completely
on reasonable assumptions

892
00:54:36,990 --> 00:54:42,809
that a device would never lie the device
will stay consistent and so on

893
00:54:42,809 --> 00:54:46,140
network stack exploration mapping

894
00:54:46,140 --> 00:54:50,359
skinning the week in points works for
USB sticks

895
00:54:50,359 --> 00:54:53,369
as well so you never need to

896
00:54:53,369 --> 00:54:57,119
up actually go beyond enumerating

897
00:54:57,119 --> 00:55:01,390
out with devices might be a loadable and
then just find the weakest want that you

898
00:55:01,390 --> 00:55:03,140
have the exploit 4

899
00:55:03,140 --> 00:55:06,309
I this is so familiar to locating a week
service

900
00:55:06,309 --> 00:55:09,799
in the a network

901
00:55:09,799 --> 00:55:13,660
artwork we've begun building are tools
to exploit this

902
00:55:13,660 --> 00:55:18,010
are there is a PhD thesis in progress on
how to undo the suckage

903
00:55:18,010 --> 00:55:21,519
and do the a proper

904
00:55:21,519 --> 00:55:27,000
stacks that would not be vulnerable are
you could be using a user LAMP stack

905
00:55:27,000 --> 00:55:31,349
of the Windows is moving towards up and
that is definitely preferable

906
00:55:31,349 --> 00:55:34,750
because all that mess is at least
isolated

907
00:55:34,750 --> 00:55:38,150
up from your current offer some
definition of isolated

908
00:55:38,150 --> 00:55:41,349
and I you should not be obstructionists

909
00:55:41,349 --> 00:55:45,849
magic box is why unrealistic validity
assumptions

910
00:55:45,849 --> 00:55:49,339
Corp ownage and of course

911
00:55:49,339 --> 00:55:54,069
other bus yeah as a few days ago sergei
came to me and said hey can we do face

912
00:55:54,069 --> 00:55:56,029
dancer for PCI Express

913
00:55:56,029 --> 00:56:00,670
as I said no dice is gonna beat us to it

914
00:56:00,670 --> 00:56:03,880
so we're not targeting the faster buses
I

915
00:56:03,880 --> 00:56:08,160
but for many things like USB you don't
need to have extreme speed in order to

916
00:56:08,160 --> 00:56:08,730
have

917
00:56:08,730 --> 00:56:11,859
a functioning emulator or malicious I

918
00:56:11,859 --> 00:56:17,089
and up these days you can pretty easily
emulate a keyboard

919
00:56:17,089 --> 00:56:20,619
and this is an I in fact part to the
social engineering kit

920
00:56:20,619 --> 00:56:24,089
if you manage to sleep with them I but
the fact is let your

921
00:56:24,089 --> 00:56:28,049
we will be limited to the keyboard if
you can write

922
00:56:28,049 --> 00:56:33,599
web server you can like this and
anything that's less complex on a disk

923
00:56:33,599 --> 00:56:40,599
and with that op we leave you with a
couple of pretty pictures

924
00:56:49,440 --> 00:56:52,090
so thank you very much Travis said a for

925
00:56:52,090 --> 00:56:55,970
I think I'm happy that I own a Mac a at
least for now okay

926
00:56:55,970 --> 00:56:59,990
I a.m. other questions maybe whether
through

927
00:56:59,990 --> 00:57:06,690
just a short question is do any
difference between usb2

928
00:57:06,690 --> 00:57:11,100
0 in 30 in yes there are significant
differences

929
00:57:11,100 --> 00:57:14,840
unfortunately and they know usb2 a usb3

930
00:57:14,840 --> 00:57:18,410
allows the device to preemptively start
a

931
00:57:18,410 --> 00:57:21,730
transfer so that it doesn't have to wait
on the host

932
00:57:21,730 --> 00:57:26,780
to begin the transaction I it's quite
likely that bugs will be found in that

933
00:57:26,780 --> 00:57:27,280
area

934
00:57:27,280 --> 00:57:32,230
I other if you want a usb3 faced at sea
are going to have to wait on Mike's

935
00:57:32,230 --> 00:57:32,920
project

936
00:57:32,920 --> 00:57:37,580
because I was won't be extendable
another out that that bus is just too

937
00:57:37,580 --> 00:57:38,140
fast

938
00:57:38,140 --> 00:57:41,870
just a quick comment

939
00:57:41,870 --> 00:57:45,260
I just wanted to say that all the injury
devices out there have

940
00:57:45,260 --> 00:57:48,310
an equivalent ship to your Mac's Maxim

941
00:57:48,310 --> 00:57:51,940
on there's a mentor graphics chip that
can do a lot of the emulation stuff that

942
00:57:51,940 --> 00:57:52,710
you're doing so

943
00:57:52,710 --> 00:57:56,400
all Android devices are capable
emulating I devices like

944
00:57:56,400 --> 00:58:00,580
and you're describing we've heard
reports of neighbors

945
00:58:00,580 --> 00:58:05,020
going around offering to charge up
people's phones I

946
00:58:05,020 --> 00:58:09,170
it's very neighborly of the of Google

947
00:58:09,170 --> 00:58:13,810
costs cable for the costs it's a

948
00:58:13,810 --> 00:58:20,070
has them a bit surreal that way okay
let's just make sure that we're

949
00:58:20,070 --> 00:58:24,130
stay in time um service sector thank you
very much

950
00:58:24,130 --> 00:58:31,130
and at least able to ask questions I
think the guys will be away with the

951
00:58:33,200 --> 00:58:35,050
break so I'm feel free to

952
00:58:35,050 --> 00:58:36,500
a to all stumps

