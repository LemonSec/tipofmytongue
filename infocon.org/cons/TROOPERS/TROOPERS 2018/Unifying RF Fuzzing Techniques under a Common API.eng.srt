1
00:00:04,520 --> 00:00:09,789
<font color="#E5E5E5">all right welcome back from lunch break</font>

2
00:00:06,970 --> 00:00:13,790
<font color="#CCCCCC">next up we're</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to talk about</font>

3
00:00:09,789 --> 00:00:16,880
wireless signals and fuzzing<font color="#CCCCCC"> and the</font>

4
00:00:13,790 --> 00:00:22,539
stage is belongs to<font color="#CCCCCC"> Matt and Ryan now</font>

5
00:00:16,880 --> 00:00:22,538
<font color="#CCCCCC">Matt Ryan have fun all</font><font color="#E5E5E5"> right</font>

6
00:00:24,880 --> 00:00:28,759
hello everyone thanks<font color="#CCCCCC"> for being here</font>

7
00:00:27,289 --> 00:00:30,500
my name is<font color="#CCCCCC"> matt night</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> Ryan</font>

8
00:00:28,759 --> 00:00:32,540
<font color="#CCCCCC">Spears</font><font color="#E5E5E5"> today we're gonna be talking</font>

9
00:00:30,500 --> 00:00:34,910
<font color="#CCCCCC">about</font><font color="#E5E5E5"> a piece of software</font><font color="#CCCCCC"> that we</font>

10
00:00:32,540 --> 00:00:36,620
developed to<font color="#E5E5E5"> unify and approach to to</font>

11
00:00:34,910 --> 00:00:40,580
provide a unified approach to RF fuzzing

12
00:00:36,620 --> 00:00:41,360
<font color="#E5E5E5">we're calling it tumble RF</font><font color="#CCCCCC"> so my name</font><font color="#E5E5E5"> is</font>

13
00:00:40,580 --> 00:00:42,949
<font color="#E5E5E5">matt night</font>

14
00:00:41,360 --> 00:00:47,390
as of<font color="#E5E5E5"> recently I'm an independent</font>

15
00:00:42,949 --> 00:00:50,150
<font color="#E5E5E5">software hardware and RF engineer</font><font color="#CCCCCC"> it's a</font>

16
00:00:47,390 --> 00:00:51,559
<font color="#E5E5E5">lot more to say about</font><font color="#CCCCCC"> that I'm</font><font color="#E5E5E5"> sure but</font>

17
00:00:50,150 --> 00:00:53,869
I also in my free time do<font color="#E5E5E5"> some work with</font>

18
00:00:51,559 --> 00:00:56,089
<font color="#E5E5E5">reverbs security which the consultancy</font>

19
00:00:53,869 --> 00:00:57,260
<font color="#CCCCCC">that he and I are both</font><font color="#E5E5E5"> involved with</font><font color="#CCCCCC"> I</font>

20
00:00:56,089 --> 00:00:59,659
have a bachelor's in electrical

21
00:00:57,260 --> 00:01:03,049
engineering from Dartmouth in<font color="#E5E5E5"> my</font>

22
00:00:59,659 --> 00:01:05,689
interests<font color="#E5E5E5"> really</font><font color="#CCCCCC"> encompasses</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> things</font>

23
00:01:03,049 --> 00:01:07,189
RF software-defined radio as well<font color="#CCCCCC"> as</font>

24
00:01:05,689 --> 00:01:08,839
<font color="#E5E5E5">physical layers and embedded</font><font color="#CCCCCC"> systems too</font>

25
00:01:07,189 --> 00:01:11,270
so that's me

26
00:01:08,840 --> 00:01:12,679
great and as matt said<font color="#E5E5E5"> i'm ryan spears</font>

27
00:01:11,270 --> 00:01:14,869
very happy to be with you<font color="#E5E5E5"> guys today</font>

28
00:01:12,679 --> 00:01:16,640
thanks for<font color="#E5E5E5"> having us</font><font color="#CCCCCC"> I was one of the</font>

29
00:01:14,869 --> 00:01:19,130
<font color="#CCCCCC">co-founders at River</font><font color="#E5E5E5"> loop security and</font>

30
00:01:16,640 --> 00:01:21,259
<font color="#E5E5E5">also lead research at ionic security we</font>

31
00:01:19,130 --> 00:01:22,399
get to do a lot<font color="#CCCCCC"> of cryptography</font><font color="#E5E5E5"> embedded</font>

32
00:01:21,259 --> 00:01:25,640
reverse engineering

33
00:01:22,399 --> 00:01:28,100
I love 802<font color="#E5E5E5"> 15 4 and you'll probably love</font>

34
00:01:25,640 --> 00:01:31,420
attacking 802 15 4 and you'll<font color="#E5E5E5"> probably</font>

35
00:01:28,100 --> 00:01:31,419
see a little bit<font color="#E5E5E5"> of that today</font>

36
00:01:32,350 --> 00:01:35,770
<font color="#CCCCCC">I don't know if you actually</font><font color="#E5E5E5"> wanted me</font>

37
00:01:33,850 --> 00:01:38,919
<font color="#E5E5E5">to make a joke about you quitting just</font>

38
00:01:35,770 --> 00:01:40,420
<font color="#E5E5E5">for this talk your job and</font><font color="#CCCCCC"> ten days of</font>

39
00:01:38,920 --> 00:01:42,250
<font color="#E5E5E5">unemployment</font><font color="#CCCCCC"> yeah</font>

40
00:01:40,420 --> 00:01:45,640
congratula-- so I came<font color="#E5E5E5"> to troopers to</font>

41
00:01:42,250 --> 00:01:47,170
celebrate<font color="#E5E5E5"> so great there's a few</font>

42
00:01:45,640 --> 00:01:48,549
background topics that we<font color="#E5E5E5"> want to give</font>

43
00:01:47,170 --> 00:01:50,860
credit<font color="#CCCCCC"> to</font><font color="#E5E5E5"> other people we've worked</font><font color="#CCCCCC"> with</font>

44
00:01:48,549 --> 00:01:54,030
<font color="#CCCCCC">in the past on these</font><font color="#E5E5E5"> materials at</font>

45
00:01:50,860 --> 00:01:55,930
troopers<font color="#CCCCCC"> 14 Xavier</font><font color="#E5E5E5"> and I gave a</font><font color="#CCCCCC"> talk on</font>

46
00:01:54,030 --> 00:01:58,060
making a wireless intrusion detection

47
00:01:55,930 --> 00:01:59,830
system and<font color="#E5E5E5"> then immediately breaking it</font>

48
00:01:58,060 --> 00:02:03,190
you'll see some<font color="#E5E5E5"> of those techniques</font>

49
00:01:59,830 --> 00:02:06,280
<font color="#E5E5E5">today and also</font><font color="#CCCCCC"> we published with some of</font>

50
00:02:03,190 --> 00:02:09,030
these<font color="#E5E5E5"> other neighbors here</font><font color="#CCCCCC"> Travis and</font>

51
00:02:06,280 --> 00:02:11,470
and is able<font color="#E5E5E5"> to be here today</font><font color="#CCCCCC"> somewhere</font>

52
00:02:09,030 --> 00:02:15,100
<font color="#E5E5E5">he's probably sleeping after last night</font>

53
00:02:11,470 --> 00:02:16,600
<font color="#E5E5E5">he's here in sorrow</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> in spirit and so</font>

54
00:02:15,100 --> 00:02:18,670
we published<font color="#CCCCCC"> the paper</font><font color="#E5E5E5"> going into more</font>

55
00:02:16,600 --> 00:02:21,160
<font color="#CCCCCC">of the science</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> depth behind some of</font>

56
00:02:18,670 --> 00:02:22,420
<font color="#E5E5E5">these materials</font><font color="#CCCCCC"> there with the ACM but</font>

57
00:02:21,160 --> 00:02:24,670
today we're going<font color="#E5E5E5"> to be focusing on</font>

58
00:02:22,420 --> 00:02:27,160
mechanisms for<font color="#E5E5E5"> doing our fuzzing how do</font>

59
00:02:24,670 --> 00:02:29,829
we do bug discovery on these and how<font color="#CCCCCC"> can</font>

60
00:02:27,160 --> 00:02:32,739
we generate fingerprints of<font color="#E5E5E5"> the actual</font>

61
00:02:29,830 --> 00:02:34,569
physical silicon that's being<font color="#E5E5E5"> used in</font>

62
00:02:32,739 --> 00:02:38,320
the file a<font color="#E5E5E5"> er</font><font color="#CCCCCC"> they're specifically</font>

63
00:02:34,569 --> 00:02:40,089
<font color="#CCCCCC">they're finite state machine</font><font color="#E5E5E5"> or FSM so</font>

64
00:02:38,320 --> 00:02:41,380
that's the agenda<font color="#CCCCCC"> we're going to go</font>

65
00:02:40,090 --> 00:02:42,850
through we're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to show you some of</font>

66
00:02:41,380 --> 00:02:45,459
the background<font color="#CCCCCC"> we're gonna actually tell</font>

67
00:02:42,850 --> 00:02:48,850
you why existing tools we're<font color="#E5E5E5"> lacking we</font>

68
00:02:45,459 --> 00:02:50,140
didn't just do this for<font color="#E5E5E5"> fun trust me and</font>

69
00:02:48,850 --> 00:02:52,358
<font color="#E5E5E5">then we'll go</font><font color="#CCCCCC"> through sort of how we</font>

70
00:02:50,140 --> 00:02:54,458
thought about architecting a system

71
00:02:52,359 --> 00:02:56,829
designed to<font color="#E5E5E5"> do this type of fuzzing on</font>

72
00:02:54,459 --> 00:02:58,930
different<font color="#CCCCCC"> hardware platforms and then</font>

73
00:02:56,829 --> 00:03:00,310
we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> do a live demo</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we did</font>

74
00:02:58,930 --> 00:03:04,060
<font color="#E5E5E5">not</font><font color="#CCCCCC"> have time to record it</font><font color="#E5E5E5"> so it's</font>

75
00:03:00,310 --> 00:03:06,730
better<font color="#E5E5E5"> work</font><font color="#CCCCCC"> life and that's more fun</font>

76
00:03:04,060 --> 00:03:09,220
anyways so first of all some background

77
00:03:06,730 --> 00:03:12,429
on traditional fuzzing techniques right

78
00:03:09,220 --> 00:03:14,620
so what is fuzzing<font color="#E5E5E5"> don't worry I'm not</font>

79
00:03:12,430 --> 00:03:17,140
gonna<font color="#E5E5E5"> bore you guys with this right</font><font color="#CCCCCC"> most</font>

80
00:03:14,620 --> 00:03:18,820
people know but as a background<font color="#CCCCCC"> it's how</font>

81
00:03:17,140 --> 00:03:20,950
do we automate discovery of crashes how

82
00:03:18,820 --> 00:03:23,320
do we find corner<font color="#E5E5E5"> cases so we're</font>

83
00:03:20,950 --> 00:03:25,209
basically<font color="#CCCCCC"> feeding in unexpected input or</font>

84
00:03:23,320 --> 00:03:27,250
permutations<font color="#E5E5E5"> of legitimate input and</font>

85
00:03:25,209 --> 00:03:30,840
looking for the state to<font color="#E5E5E5"> be something</font>

86
00:03:27,250 --> 00:03:30,840
that<font color="#CCCCCC"> changes from normal</font>

87
00:03:31,960 --> 00:03:35,500
so typical<font color="#E5E5E5"> fuzzing right I'm sure many</font>

88
00:03:34,300 --> 00:03:37,690
<font color="#CCCCCC">people in the</font><font color="#E5E5E5"> room have done this</font>

89
00:03:35,500 --> 00:03:39,880
<font color="#E5E5E5">input-output fuzzing on programs file</font>

90
00:03:37,690 --> 00:03:41,530
format parsers<font color="#CCCCCC"> right a lot of great work</font>

91
00:03:39,880 --> 00:03:43,299
there fuzzing different network

92
00:03:41,530 --> 00:03:45,670
interfaces<font color="#E5E5E5"> and there's great tools for</font>

93
00:03:43,300 --> 00:03:49,180
these right<font color="#CCCCCC"> there's you know</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> maybe</font>

94
00:03:45,670 --> 00:03:51,100
<font color="#E5E5E5">doing it on a program using</font><font color="#CCCCCC"> AFL or AFL</font>

95
00:03:49,180 --> 00:03:51,930
<font color="#E5E5E5">unicorn which I'll talk</font><font color="#CCCCCC"> more about in a</font>

96
00:03:51,100 --> 00:03:55,030
bit

97
00:03:51,930 --> 00:03:56,560
Pete's<font color="#CCCCCC"> Cappy and</font><font color="#E5E5E5"> plenty of tools that</font>

98
00:03:55,030 --> 00:04:00,700
either you have<font color="#E5E5E5"> used or maybe even your</font>

99
00:03:56,560 --> 00:04:02,890
<font color="#E5E5E5">companies make and so for software</font>

100
00:04:00,700 --> 00:04:04,660
fuzzing it is a<font color="#E5E5E5"> well developed thing for</font>

101
00:04:02,890 --> 00:04:07,600
network services<font color="#CCCCCC"> these work well for</font>

102
00:04:04,660 --> 00:04:08,710
file formats<font color="#E5E5E5"> these work great</font><font color="#CCCCCC"> because</font>

103
00:04:07,600 --> 00:04:10,239
software<font color="#E5E5E5"> is something that we can</font>

104
00:04:08,710 --> 00:04:12,010
instrument and hook at different levels

105
00:04:10,240 --> 00:04:14,920
<font color="#CCCCCC">right and especially</font><font color="#E5E5E5"> when you see stuff</font>

106
00:04:12,010 --> 00:04:17,320
like AFL that hooks very deeply<font color="#E5E5E5"> into the</font>

107
00:04:14,920 --> 00:04:19,209
<font color="#CCCCCC">memory of</font><font color="#E5E5E5"> a program</font><font color="#CCCCCC"> you see why that</font>

108
00:04:17,320 --> 00:04:21,909
instrumentation really helps do great

109
00:04:19,209 --> 00:04:24,250
fuzzing<font color="#E5E5E5"> but what else can we</font><font color="#CCCCCC"> fuss</font><font color="#E5E5E5"> right</font>

110
00:04:21,910 --> 00:04:25,870
and fuzzing<font color="#E5E5E5"> hardware is what we like</font><font color="#CCCCCC"> to</font>

111
00:04:24,250 --> 00:04:28,150
focus<font color="#E5E5E5"> on right we attack as I said</font>

112
00:04:25,870 --> 00:04:30,610
mostly<font color="#E5E5E5"> at River loop embedded systems</font>

113
00:04:28,150 --> 00:04:33,340
<font color="#E5E5E5">and so that a lot of those tools are</font>

114
00:04:30,610 --> 00:04:36,460
difficult<font color="#E5E5E5"> for us to</font><font color="#CCCCCC"> use for the purposes</font>

115
00:04:33,340 --> 00:04:39,760
<font color="#E5E5E5">that</font><font color="#CCCCCC"> we need so</font><font color="#E5E5E5"> hardware you know why</font>

116
00:04:36,460 --> 00:04:41,349
<font color="#CCCCCC">right hardware is often in many cases</font><font color="#E5E5E5"> a</font>

117
00:04:39,760 --> 00:04:42,700
one-off<font color="#E5E5E5"> for that specific piece</font><font color="#CCCCCC"> of</font>

118
00:04:41,350 --> 00:04:44,710
hardware it has different input/output

119
00:04:42,700 --> 00:04:46,330
<font color="#E5E5E5">it's configured differently</font><font color="#CCCCCC"> somebody has</font>

120
00:04:44,710 --> 00:04:48,130
written<font color="#CCCCCC"> bare</font><font color="#E5E5E5"> metal firmware we can't</font>

121
00:04:46,330 --> 00:04:51,490
write a harness<font color="#E5E5E5"> that just sits on a</font>

122
00:04:48,130 --> 00:04:53,400
generic OS or<font color="#CCCCCC"> three OS is four</font><font color="#E5E5E5"> six</font>

123
00:04:51,490 --> 00:04:55,630
<font color="#E5E5E5">whatever we want to claim there</font><font color="#CCCCCC"> are and</font>

124
00:04:53,400 --> 00:04:58,570
you know have a test<font color="#CCCCCC"> harness around</font>

125
00:04:55,630 --> 00:05:01,300
things<font color="#E5E5E5"> so there are some existing things</font>

126
00:04:58,570 --> 00:05:04,210
in<font color="#E5E5E5"> this space right AFL unicorn allows</font>

127
00:05:01,300 --> 00:05:07,169
us if we can<font color="#E5E5E5"> properly simulate and put</font>

128
00:05:04,210 --> 00:05:09,969
the<font color="#CCCCCC"> unicorn emulation engine around</font>

129
00:05:07,169 --> 00:05:12,609
<font color="#E5E5E5">embedded piece of firmware then we can</font>

130
00:05:09,970 --> 00:05:15,310
do<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> hooking AFL to that and do</font>

131
00:05:12,610 --> 00:05:16,630
fuzzing when we do this we<font color="#E5E5E5"> see it does</font>

132
00:05:15,310 --> 00:05:20,470
take a<font color="#E5E5E5"> lot of time to set</font><font color="#CCCCCC"> up that</font>

133
00:05:16,630 --> 00:05:22,330
<font color="#E5E5E5">emulation environment</font><font color="#CCCCCC"> a bust pirate</font>

134
00:05:20,470 --> 00:05:23,740
jtagulator plenty of other tools<font color="#E5E5E5"> that</font>

135
00:05:22,330 --> 00:05:26,109
<font color="#E5E5E5">are</font><font color="#CCCCCC"> made and in the</font><font color="#E5E5E5"> open source</font>

136
00:05:23,740 --> 00:05:28,180
<font color="#E5E5E5">community will help us permute different</font>

137
00:05:26,110 --> 00:05:29,770
pin outs<font color="#CCCCCC"> to find things</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> JTAG</font><font color="#E5E5E5"> and</font>

138
00:05:28,180 --> 00:05:31,120
serial buses but what we're talking

139
00:05:29,770 --> 00:05:33,190
<font color="#CCCCCC">about today</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> from</font>

140
00:05:31,120 --> 00:05:35,090
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we're talking about how do we fuzz</font>

141
00:05:33,190 --> 00:05:38,840
in on these RF interface

142
00:05:35,090 --> 00:05:41,900
so there<font color="#E5E5E5"> are a few that</font><font color="#CCCCCC"> exist</font><font color="#E5E5E5"> why fuzz</font>

143
00:05:38,840 --> 00:05:42,859
was very focused on 802 11<font color="#E5E5E5"> very</font>

144
00:05:41,900 --> 00:05:44,960
<font color="#CCCCCC">protocol-specific</font>

145
00:05:42,860 --> 00:05:47,200
mark<font color="#E5E5E5"> thanks for coming</font><font color="#CCCCCC"> mark you didn't</font>

146
00:05:44,960 --> 00:05:49,760
know this was<font color="#E5E5E5"> going to be up here</font><font color="#CCCCCC"> is</font>

147
00:05:47,200 --> 00:05:51,770
injecting he<font color="#CCCCCC"> builds</font><font color="#E5E5E5"> some tools which I</font>

148
00:05:49,760 --> 00:05:56,210
hope he releases the code in<font color="#E5E5E5"> this</font>

149
00:05:51,770 --> 00:05:59,690
framework later to inject<font color="#E5E5E5"> RF packets for</font>

150
00:05:56,210 --> 00:06:03,890
<font color="#E5E5E5">the NRF 2.4 gigahertz dongle trying to</font>

151
00:05:59,690 --> 00:06:05,210
find issues<font color="#E5E5E5"> in USB things and great</font>

152
00:06:03,890 --> 00:06:07,159
research<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you guys should</font><font color="#E5E5E5"> look at if</font>

153
00:06:05,210 --> 00:06:08,870
you haven't looked at<font color="#E5E5E5"> mouth check and</font>

154
00:06:07,160 --> 00:06:11,360
then I had done some work<font color="#CCCCCC"> with some</font>

155
00:06:08,870 --> 00:06:14,210
<font color="#CCCCCC">other people a while ago doing</font><font color="#E5E5E5"> some</font>

156
00:06:11,360 --> 00:06:16,790
fuzzing under name of isotope again<font color="#E5E5E5"> I</font>

157
00:06:14,210 --> 00:06:20,030
was just as terrible as<font color="#CCCCCC"> mark wise we did</font>

158
00:06:16,790 --> 00:06:21,950
not<font color="#E5E5E5"> build nice flexible libraries we</font>

159
00:06:20,030 --> 00:06:23,570
banged out some code<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get the project</font>

160
00:06:21,950 --> 00:06:25,159
over right and<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> really what we're</font>

161
00:06:23,570 --> 00:06:28,250
trying<font color="#E5E5E5"> to</font><font color="#CCCCCC"> address</font><font color="#E5E5E5"> how can we make a</font>

162
00:06:25,160 --> 00:06:30,110
framework<font color="#E5E5E5"> that's easy to extend so that</font>

163
00:06:28,250 --> 00:06:35,030
mark<font color="#E5E5E5"> and I can contribute to it</font>

164
00:06:30,110 --> 00:06:37,010
especially<font color="#CCCCCC"> Mike so</font><font color="#E5E5E5"> the existing fuzzers</font>

165
00:06:35,030 --> 00:06:39,710
as<font color="#E5E5E5"> I just mentioned about</font><font color="#CCCCCC"> marks</font><font color="#E5E5E5"> terrible</font>

166
00:06:37,010 --> 00:06:42,590
existing fuzzer<font color="#E5E5E5"> is siloed and protocol</font>

167
00:06:39,710 --> 00:06:44,210
specific it's generally thanks for

168
00:06:42,590 --> 00:06:46,729
sitting<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> front</font><font color="#E5E5E5"> by the way</font><font color="#CCCCCC"> it's</font>

169
00:06:44,210 --> 00:06:49,219
<font color="#E5E5E5">generally limited to the Mac layer</font><font color="#CCCCCC"> or</font>

170
00:06:46,730 --> 00:06:51,110
above<font color="#E5E5E5"> and then you have to figure out</font>

171
00:06:49,220 --> 00:06:53,720
what is a crash what's a bug right and

172
00:06:51,110 --> 00:06:56,120
an RF is tough to instrument we can't

173
00:06:53,720 --> 00:06:59,210
just hook<font color="#E5E5E5"> into the memory and watch for</font>

174
00:06:56,120 --> 00:07:00,590
a<font color="#CCCCCC"> bit to flip so how do</font><font color="#E5E5E5"> we measure these</font>

175
00:06:59,210 --> 00:07:02,510
different<font color="#E5E5E5"> things where we have different</font>

176
00:07:00,590 --> 00:07:04,099
levels<font color="#CCCCCC"> of</font><font color="#E5E5E5"> access sometimes we never even</font>

177
00:07:02,510 --> 00:07:06,500
have<font color="#CCCCCC"> serial on</font><font color="#E5E5E5"> the system that</font><font color="#CCCCCC"> we're</font>

178
00:07:04,100 --> 00:07:08,240
fuzzing<font color="#E5E5E5"> right so we can't go in a</font>

179
00:07:06,500 --> 00:07:12,350
console and look for things right other

180
00:07:08,240 --> 00:07:14,270
times we<font color="#E5E5E5"> can and then maybe most notably</font>

181
00:07:12,350 --> 00:07:16,400
there's also<font color="#E5E5E5"> we hit this issue with</font>

182
00:07:14,270 --> 00:07:18,830
implicit<font color="#E5E5E5"> trust in the chipset</font><font color="#CCCCCC"> that we're</font>

183
00:07:16,400 --> 00:07:21,219
using<font color="#E5E5E5"> if we're asking</font><font color="#CCCCCC"> a piece of</font>

184
00:07:18,830 --> 00:07:23,479
hardware<font color="#CCCCCC"> to</font><font color="#E5E5E5"> give us radio symbols</font>

185
00:07:21,220 --> 00:07:25,660
<font color="#E5E5E5">there's things about it as we'll show</font>

186
00:07:23,480 --> 00:07:27,550
today<font color="#E5E5E5"> they</font>

187
00:07:25,660 --> 00:07:29,770
matter right and it says that<font color="#E5E5E5"> it's</font>

188
00:07:27,550 --> 00:07:31,630
<font color="#CCCCCC">protocol-specific it should be the same</font>

189
00:07:29,770 --> 00:07:33,460
it<font color="#CCCCCC"> should be standard but they're not</font>

190
00:07:31,630 --> 00:07:36,280
exactly and we'll show you how we find

191
00:07:33,460 --> 00:07:38,440
some of<font color="#CCCCCC"> those</font><font color="#E5E5E5"> differences so that was</font>

192
00:07:36,280 --> 00:07:40,179
<font color="#E5E5E5">basically in summary not all physical</font>

193
00:07:38,440 --> 00:07:42,280
layer state machines especially<font color="#E5E5E5"> on these</font>

194
00:07:40,180 --> 00:07:44,020
RF chips are created the same<font color="#CCCCCC"> they</font>

195
00:07:42,280 --> 00:07:46,869
implement the state machines differently

196
00:07:44,020 --> 00:07:50,140
<font color="#CCCCCC">we can fingerprint and exploit those</font>

197
00:07:46,870 --> 00:07:52,050
differences<font color="#E5E5E5"> and we found you know in the</font>

198
00:07:50,140 --> 00:07:54,370
trooper last troopers talk I gave I

199
00:07:52,050 --> 00:07:57,820
promise I'm gonna break this theme<font color="#E5E5E5"> next</font>

200
00:07:54,370 --> 00:08:00,370
time<font color="#CCCCCC"> was some results on eight a few 15</font>

201
00:07:57,820 --> 00:08:02,349
<font color="#CCCCCC">four where we can specifically craft</font>

202
00:08:00,370 --> 00:08:04,960
<font color="#E5E5E5">physical layer frames that are seen by</font>

203
00:08:02,350 --> 00:08:06,940
some radios and not by others and this

204
00:08:04,960 --> 00:08:08,680
<font color="#E5E5E5">is</font><font color="#CCCCCC"> not directional antennas this is not</font>

205
00:08:06,940 --> 00:08:11,080
different power this<font color="#E5E5E5"> is not different</font>

206
00:08:08,680 --> 00:08:13,390
<font color="#E5E5E5">protocols this is same power</font><font color="#CCCCCC"> same</font>

207
00:08:11,080 --> 00:08:16,120
direction<font color="#E5E5E5"> same RF</font><font color="#CCCCCC"> noises</font><font color="#E5E5E5"> getting to both</font>

208
00:08:13,390 --> 00:08:19,510
of<font color="#E5E5E5"> these chips but one is made by</font><font color="#CCCCCC"> Atmel</font>

209
00:08:16,120 --> 00:08:21,010
one is made by<font color="#CCCCCC"> TI or whoever</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> they</font>

210
00:08:19,510 --> 00:08:22,870
implement the state machines<font color="#E5E5E5"> slightly</font>

211
00:08:21,010 --> 00:08:24,909
differently<font color="#E5E5E5"> and we can craft special</font>

212
00:08:22,870 --> 00:08:26,950
frames that one can see but it's totally

213
00:08:24,910 --> 00:08:28,750
<font color="#E5E5E5">blind to the other and that's what we're</font>

214
00:08:26,950 --> 00:08:31,000
gonna<font color="#E5E5E5"> go through getting to today</font><font color="#CCCCCC"> so</font>

215
00:08:28,750 --> 00:08:32,440
Matt's gonna take over<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so I'm</font>

216
00:08:31,000 --> 00:08:35,080
gonna do a just a brief high-level

217
00:08:32,440 --> 00:08:36,580
<font color="#E5E5E5">walkthrough of how radio physical airs</font>

218
00:08:35,080 --> 00:08:38,950
work so they can<font color="#E5E5E5"> better understand</font>

219
00:08:36,580 --> 00:08:43,090
exactly how we how<font color="#CCCCCC"> we can crack</font><font color="#E5E5E5"> these</font>

220
00:08:38,950 --> 00:08:45,550
characterizations<font color="#E5E5E5"> so a transmitter is</font>

221
00:08:43,090 --> 00:08:48,430
essentially a radio that<font color="#CCCCCC"> goes</font><font color="#E5E5E5"> from</font>

222
00:08:45,550 --> 00:08:50,560
digital data bits into<font color="#E5E5E5"> analog RF energy</font>

223
00:08:48,430 --> 00:08:52,540
<font color="#E5E5E5">so you're going from a</font><font color="#CCCCCC"> discretely</font>

224
00:08:50,560 --> 00:08:55,569
sampled<font color="#E5E5E5"> quantity of information</font><font color="#CCCCCC"> to</font>

225
00:08:52,540 --> 00:08:58,420
continuous continuous<font color="#E5E5E5"> analog properties</font>

226
00:08:55,570 --> 00:09:01,120
the receiver does the opposite<font color="#CCCCCC"> it's</font>

227
00:08:58,420 --> 00:09:04,150
taking this continuous continuous<font color="#E5E5E5"> analog</font>

228
00:09:01,120 --> 00:09:07,030
signal and is sampling<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so it's</font>

229
00:09:04,150 --> 00:09:09,850
converting<font color="#E5E5E5"> that from from analog RF</font>

230
00:09:07,030 --> 00:09:11,920
energy<font color="#CCCCCC"> into bits so receiving comes down</font>

231
00:09:09,850 --> 00:09:15,460
to sampling and synchronization<font color="#E5E5E5"> of those</font>

232
00:09:11,920 --> 00:09:17,920
those radio signals<font color="#CCCCCC"> just going to do a</font>

233
00:09:15,460 --> 00:09:20,450
little little kind<font color="#E5E5E5"> of thought</font><font color="#CCCCCC"> exercise</font>

234
00:09:17,920 --> 00:09:23,030
here here's<font color="#E5E5E5"> a picture</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> waveform</font>

235
00:09:20,450 --> 00:09:25,310
have time in the x-axis<font color="#CCCCCC"> and frequency in</font>

236
00:09:23,030 --> 00:09:28,160
the y<font color="#CCCCCC"> axis and then powers in the the z</font>

237
00:09:25,310 --> 00:09:29,660
axis from how bright it is and if you

238
00:09:28,160 --> 00:09:32,060
<font color="#CCCCCC">look on</font><font color="#E5E5E5"> the left hand</font><font color="#CCCCCC"> side you see</font>

239
00:09:29,660 --> 00:09:34,490
there's a pattern<font color="#E5E5E5"> there the signal</font>

240
00:09:32,060 --> 00:09:38,030
alternates between two frequencies<font color="#CCCCCC"> for a</font>

241
00:09:34,490 --> 00:09:40,550
<font color="#E5E5E5">period of time before</font><font color="#CCCCCC"> becoming less less</font>

242
00:09:38,030 --> 00:09:44,390
consistent<font color="#E5E5E5"> in its in its structure there</font>

243
00:09:40,550 --> 00:09:46,849
so that a first element<font color="#CCCCCC"> indicated by the</font>

244
00:09:44,390 --> 00:09:49,160
red arrow is<font color="#CCCCCC"> the preamble</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font>

245
00:09:46,850 --> 00:09:51,110
preamble is essentially a header that's

246
00:09:49,160 --> 00:09:53,810
<font color="#E5E5E5">prefixed</font><font color="#CCCCCC"> onto the packet</font><font color="#E5E5E5"> to tell a</font>

247
00:09:51,110 --> 00:09:55,640
receiving radio<font color="#E5E5E5"> a that there's a packet</font>

248
00:09:53,810 --> 00:09:58,430
heading its way<font color="#E5E5E5"> and</font><font color="#CCCCCC"> be some information</font>

249
00:09:55,640 --> 00:10:00,260
<font color="#CCCCCC">about the clock characteristics so</font><font color="#E5E5E5"> that</font>

250
00:09:58,430 --> 00:10:01,550
it can<font color="#CCCCCC"> synchronize against it it's</font>

251
00:10:00,260 --> 00:10:04,100
<font color="#E5E5E5">finished you see that discontinuity</font>

252
00:10:01,550 --> 00:10:05,510
pointed that by the yellow arrow<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

253
00:10:04,100 --> 00:10:08,000
called a start of frame delimiter<font color="#E5E5E5"> or a</font>

254
00:10:05,510 --> 00:10:09,860
sync word<font color="#CCCCCC"> and that</font><font color="#E5E5E5"> is essentially a</font>

255
00:10:08,000 --> 00:10:11,960
magic number<font color="#CCCCCC"> or magic value that the</font>

256
00:10:09,860 --> 00:10:14,060
receiver<font color="#E5E5E5"> is looking for and when it sees</font>

257
00:10:11,960 --> 00:10:16,580
that it<font color="#E5E5E5"> knows from that from seeing that</font>

258
00:10:14,060 --> 00:10:18,260
value<font color="#CCCCCC"> that the is it knows</font><font color="#E5E5E5"> from seeing</font>

259
00:10:16,580 --> 00:10:19,820
that value<font color="#CCCCCC"> that the preamble</font><font color="#E5E5E5"> is over and</font>

260
00:10:18,260 --> 00:10:21,140
what follows it is data<font color="#E5E5E5"> that</font><font color="#CCCCCC"> should</font><font color="#E5E5E5"> be</font>

261
00:10:19,820 --> 00:10:22,760
synchronized and sampled<font color="#CCCCCC"> and</font><font color="#E5E5E5"> sampled</font>

262
00:10:21,140 --> 00:10:24,860
from and that's the blue arrow the<font color="#CCCCCC"> arrow</font>

263
00:10:22,760 --> 00:10:28,640
there<font color="#E5E5E5"> it's actually</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> what you can see</font>

264
00:10:24,860 --> 00:10:30,980
modulated there so this<font color="#E5E5E5"> is a very</font>

265
00:10:28,640 --> 00:10:33,860
<font color="#CCCCCC">simplistic view of</font><font color="#E5E5E5"> an RF physical</font><font color="#CCCCCC"> air</font>

266
00:10:30,980 --> 00:10:36,020
state machine<font color="#CCCCCC"> we start in kind</font><font color="#E5E5E5"> of</font>

267
00:10:33,860 --> 00:10:37,250
default<font color="#E5E5E5"> into that idle case up top where</font>

268
00:10:36,020 --> 00:10:40,490
the radio is just sitting<font color="#E5E5E5"> and looking</font>

269
00:10:37,250 --> 00:10:42,200
<font color="#E5E5E5">for the preamble</font><font color="#CCCCCC"> once it sees that</font>

270
00:10:40,490 --> 00:10:43,340
alternating pattern<font color="#E5E5E5"> it moves in the next</font>

271
00:10:42,200 --> 00:10:45,020
state where it looks<font color="#E5E5E5"> for the start of</font>

272
00:10:43,340 --> 00:10:47,420
frame<font color="#E5E5E5"> delimiter</font><font color="#CCCCCC"> and once it hits that</font>

273
00:10:45,020 --> 00:10:49,550
<font color="#E5E5E5">that other magic value</font><font color="#CCCCCC"> it runs through</font>

274
00:10:47,420 --> 00:10:50,870
<font color="#E5E5E5">the rest of the states where it</font><font color="#CCCCCC"> goes and</font>

275
00:10:49,550 --> 00:10:52,370
tries<font color="#E5E5E5"> to extract a length from the</font>

276
00:10:50,870 --> 00:10:54,890
header<font color="#E5E5E5"> if there is one to figure out how</font>

277
00:10:52,370 --> 00:10:56,570
<font color="#CCCCCC">many bits the sample out it</font><font color="#E5E5E5"> D modulates</font>

278
00:10:54,890 --> 00:10:59,090
that many bits most<font color="#CCCCCC"> of the time</font><font color="#E5E5E5"> we'll</font>

279
00:10:56,570 --> 00:11:01,760
check a CRC<font color="#CCCCCC"> and then we'll present that</font>

280
00:10:59,090 --> 00:11:03,680
frame back up to the<font color="#E5E5E5"> late layer</font><font color="#CCCCCC"> 2 parser</font>

281
00:11:01,760 --> 00:11:05,180
<font color="#E5E5E5">whether that's another element within</font>

282
00:11:03,680 --> 00:11:07,329
<font color="#CCCCCC">that</font><font color="#E5E5E5"> chipset or if it's passing it over</font>

283
00:11:05,180 --> 00:11:09,620
<font color="#E5E5E5">some sort of a serial bus back to</font><font color="#CCCCCC"> a host</font>

284
00:11:07,330 --> 00:11:11,060
<font color="#CCCCCC">that's basically where the the interface</font>

285
00:11:09,620 --> 00:11:13,610
<font color="#E5E5E5">ends and then it returns to that</font>

286
00:11:11,060 --> 00:11:15,050
preamble state so we're<font color="#CCCCCC"> gonna begin</font><font color="#E5E5E5"> just</font>

287
00:11:13,610 --> 00:11:17,540
by<font color="#E5E5E5"> digging into these first two states</font>

288
00:11:15,050 --> 00:11:19,130
and talking<font color="#CCCCCC"> about how they're</font>

289
00:11:17,540 --> 00:11:22,140
instrumented

290
00:11:19,130 --> 00:11:24,420
so<font color="#CCCCCC"> ascent the way to</font><font color="#E5E5E5"> think about about</font>

291
00:11:22,140 --> 00:11:26,340
<font color="#E5E5E5">these two states is essentially within</font>

292
00:11:24,420 --> 00:11:29,099
your radio<font color="#CCCCCC"> there's a shift register</font>

293
00:11:26,340 --> 00:11:30,480
<font color="#CCCCCC">where when bits are received they get</font>

294
00:11:29,100 --> 00:11:33,720
<font color="#E5E5E5">too modulated and they get pushed into</font>

295
00:11:30,480 --> 00:11:36,900
<font color="#CCCCCC">that register in</font><font color="#E5E5E5"> parallel with this we</font>

296
00:11:33,720 --> 00:11:38,640
have<font color="#E5E5E5"> essentially a correlation operation</font>

297
00:11:36,900 --> 00:11:40,380
where those bits are getting extra word

298
00:11:38,640 --> 00:11:42,090
against against<font color="#E5E5E5"> the pattern that's being</font>

299
00:11:40,380 --> 00:11:43,260
<font color="#E5E5E5">looked for so if we're looking</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the</font>

300
00:11:42,090 --> 00:11:46,290
preamble<font color="#CCCCCC"> we're looking for that</font>

301
00:11:43,260 --> 00:11:48,390
alternating pattern of 1<font color="#CCCCCC"> & 0 1 0 and if</font>

302
00:11:46,290 --> 00:11:50,099
we're looking<font color="#E5E5E5"> for a sync & sfd we're</font>

303
00:11:48,390 --> 00:11:52,680
looking instead for the s50 to appear in

304
00:11:50,100 --> 00:11:54,690
that shift register<font color="#CCCCCC"> so</font><font color="#E5E5E5"> these bits are</font>

305
00:11:52,680 --> 00:11:57,630
getting<font color="#CCCCCC"> shifted through</font><font color="#E5E5E5"> and in that</font>

306
00:11:54,690 --> 00:12:01,230
operation<font color="#E5E5E5"> is hat is happening with every</font>

307
00:11:57,630 --> 00:12:03,300
symbol<font color="#E5E5E5"> that comes in</font><font color="#CCCCCC"> so it turns out</font>

308
00:12:01,230 --> 00:12:05,010
<font color="#E5E5E5">that not all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these sync words and</font>

309
00:12:03,300 --> 00:12:06,390
preamble<font color="#E5E5E5"> detection algorithms are</font>

310
00:12:05,010 --> 00:12:08,069
created equally

311
00:12:06,390 --> 00:12:10,860
you know<font color="#E5E5E5"> RF standards are really</font>

312
00:12:08,070 --> 00:12:12,810
<font color="#CCCCCC">complicated the I Triple</font><font color="#E5E5E5"> E 802 15 4 spec</font>

313
00:12:10,860 --> 00:12:15,930
which is a protocol<font color="#E5E5E5"> or gonna be talking</font>

314
00:12:12,810 --> 00:12:17,579
about more<font color="#CCCCCC"> in this presentation is like</font>

315
00:12:15,930 --> 00:12:19,680
thousands<font color="#E5E5E5"> of pages long it's very dense</font>

316
00:12:17,580 --> 00:12:21,720
<font color="#E5E5E5">there are multiple different actual fly</font>

317
00:12:19,680 --> 00:12:25,620
implementations that can be<font color="#CCCCCC"> chosen from</font>

318
00:12:21,720 --> 00:12:27,120
but even within a single<font color="#CCCCCC"> 5 Ariens very</font>

319
00:12:25,620 --> 00:12:29,280
complicated there are<font color="#E5E5E5"> lots of things to</font>

320
00:12:27,120 --> 00:12:30,960
get right<font color="#CCCCCC"> and wrong but there are also</font>

321
00:12:29,280 --> 00:12:33,089
some things that<font color="#CCCCCC"> are not necessarily</font>

322
00:12:30,960 --> 00:12:36,570
deterministically defined in the physics

323
00:12:33,090 --> 00:12:39,510
in the standard so when a standards body

324
00:12:36,570 --> 00:12:40,590
creates this document<font color="#E5E5E5"> they they come to</font>

325
00:12:39,510 --> 00:12:42,210
some consensus of<font color="#CCCCCC"> what they want the</font>

326
00:12:40,590 --> 00:12:43,590
physical air to look like and then it

327
00:12:42,210 --> 00:12:45,090
<font color="#CCCCCC">gets handed</font><font color="#E5E5E5"> over to the manufacturers</font>

328
00:12:43,590 --> 00:12:47,670
who then have to<font color="#E5E5E5"> have to take that</font>

329
00:12:45,090 --> 00:12:49,200
document<font color="#CCCCCC"> and interpret it into their</font><font color="#E5E5E5"> own</font>

330
00:12:47,670 --> 00:12:53,010
design<font color="#E5E5E5"> of what that physical layer</font>

331
00:12:49,200 --> 00:12:56,090
<font color="#E5E5E5">implementations</font><font color="#CCCCCC"> gonna look like</font><font color="#E5E5E5"> and if</font>

332
00:12:53,010 --> 00:12:59,400
you go to the<font color="#E5E5E5"> next slide</font><font color="#CCCCCC"> essentially</font>

333
00:12:56,090 --> 00:13:01,320
<font color="#E5E5E5">some of these some of these preambles</font>

334
00:12:59,400 --> 00:13:04,110
and syncwords<font color="#E5E5E5"> get implemented with</font>

335
00:13:01,320 --> 00:13:05,700
different degrees<font color="#CCCCCC"> of sensitivity and</font><font color="#E5E5E5"> the</font>

336
00:13:04,110 --> 00:13:08,100
research<font color="#CCCCCC"> that the Ryan presented the</font>

337
00:13:05,700 --> 00:13:10,170
<font color="#CCCCCC">last time he was here showed</font><font color="#E5E5E5"> that some</font>

338
00:13:08,100 --> 00:13:12,450
of these chips that's correlate on on

339
00:13:10,170 --> 00:13:15,540
different<font color="#CCCCCC"> values for preamble and</font><font color="#E5E5E5"> sync</font>

340
00:13:12,450 --> 00:13:19,490
and if we strategically malformed them

341
00:13:15,540 --> 00:13:21,839
by say sitting<font color="#CCCCCC"> a short preamble</font><font color="#E5E5E5"> or</font>

342
00:13:19,490 --> 00:13:23,720
alternating<font color="#E5E5E5"> the sync word we can reveal</font>

343
00:13:21,839 --> 00:13:26,330
some<font color="#CCCCCC"> interesting characteristics</font>

344
00:13:23,720 --> 00:13:28,700
so fuzzing is how we're<font color="#CCCCCC"> going to take</font>

345
00:13:26,330 --> 00:13:34,490
this<font color="#E5E5E5"> approach from 15</font><font color="#CCCCCC"> 4 and apply it to</font>

346
00:13:28,700 --> 00:13:36,800
<font color="#CCCCCC">2 other protocols in a generic way so</font>

347
00:13:34,490 --> 00:13:38,720
when we were<font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> earlier what</font>

348
00:13:36,800 --> 00:13:42,109
<font color="#E5E5E5">help what can we do that helps make a</font>

349
00:13:38,720 --> 00:13:43,910
framework that can be used and we used

350
00:13:42,110 --> 00:13:45,980
for other<font color="#E5E5E5"> purposes not just</font><font color="#CCCCCC"> for what</font>

351
00:13:43,910 --> 00:13:47,839
we're<font color="#E5E5E5"> showing you today but extended we</font>

352
00:13:45,980 --> 00:13:50,540
thought through what<font color="#E5E5E5"> is the ideal state</font>

353
00:13:47,840 --> 00:13:52,100
machine design here right<font color="#E5E5E5"> so we first of</font>

354
00:13:50,540 --> 00:13:54,079
<font color="#E5E5E5">all wanted to be extensible we want to</font>

355
00:13:52,100 --> 00:13:57,380
be easy<font color="#E5E5E5"> to add new radios to this</font>

356
00:13:54,080 --> 00:13:58,970
framework<font color="#E5E5E5"> we want to be a plug-in based</font>

357
00:13:57,380 --> 00:14:00,290
<font color="#E5E5E5">right we want to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to change in</font>

358
00:13:58,970 --> 00:14:02,600
different<font color="#E5E5E5"> test</font><font color="#CCCCCC"> cases different</font>

359
00:14:00,290 --> 00:14:05,240
interfaces different harnesses which

360
00:14:02,600 --> 00:14:07,370
you'll see<font color="#CCCCCC"> later</font><font color="#E5E5E5"> and we want to be</font><font color="#CCCCCC"> able</font>

361
00:14:05,240 --> 00:14:08,720
<font color="#CCCCCC">to reuse</font><font color="#E5E5E5"> concepts and designs right so</font>

362
00:14:07,370 --> 00:14:12,530
the stuff we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be showing</font><font color="#CCCCCC"> on a</font>

363
00:14:08,720 --> 00:14:14,600
tour<font color="#E5E5E5"> 2:15 for today modulating preamble</font>

364
00:14:12,530 --> 00:14:16,520
we want to be able<font color="#E5E5E5"> to take</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and with</font>

365
00:14:14,600 --> 00:14:18,440
the right interface<font color="#E5E5E5"> do that on many</font>

366
00:14:16,520 --> 00:14:20,060
different<font color="#E5E5E5"> types of radios to see where</font>

367
00:14:18,440 --> 00:14:23,300
in other protocols whether that be

368
00:14:20,060 --> 00:14:25,400
Bluetooth or<font color="#CCCCCC"> Laura</font><font color="#E5E5E5"> Matt's favorite or</font>

369
00:14:23,300 --> 00:14:27,290
whatever you know anything that<font color="#CCCCCC"> Mike</font>

370
00:14:25,400 --> 00:14:29,600
finds in<font color="#E5E5E5"> Mouse</font><font color="#CCCCCC"> jack or anything</font><font color="#E5E5E5"> that you</font>

371
00:14:27,290 --> 00:14:31,760
want to<font color="#E5E5E5"> explore and take these same</font>

372
00:14:29,600 --> 00:14:36,140
concepts with minimal effort<font color="#CCCCCC"> import them</font>

373
00:14:31,760 --> 00:14:38,120
over to<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we want to expose the</font>

374
00:14:36,140 --> 00:14:39,620
file<font color="#CCCCCC"> ey're instead of just</font><font color="#E5E5E5"> the mac or</font>

375
00:14:38,120 --> 00:14:40,910
<font color="#E5E5E5">just the application layer because we</font>

376
00:14:39,620 --> 00:14:43,730
<font color="#E5E5E5">think that that reveals to</font><font color="#CCCCCC"> me</font>

377
00:14:40,910 --> 00:14:46,069
<font color="#E5E5E5">interesting properties so how do we go</font>

378
00:14:43,730 --> 00:14:47,600
about<font color="#CCCCCC"> actually delivering</font><font color="#E5E5E5"> this what</font>

379
00:14:46,070 --> 00:14:49,130
we're gonna be<font color="#CCCCCC"> sharing today</font><font color="#E5E5E5"> and we'll</font>

380
00:14:47,600 --> 00:14:50,750
<font color="#CCCCCC">post the code I didn't get a chance to</font>

381
00:14:49,130 --> 00:14:52,970
push it to github before this talk but<font color="#E5E5E5"> I</font>

382
00:14:50,750 --> 00:14:54,890
promise I will do it<font color="#E5E5E5"> before I leave this</font>

383
00:14:52,970 --> 00:14:56,960
<font color="#CCCCCC">room or at least before</font><font color="#E5E5E5"> the second beer</font>

384
00:14:54,890 --> 00:14:59,870
after<font color="#CCCCCC"> this talk we will push this to</font>

385
00:14:56,960 --> 00:15:02,450
github is a framework<font color="#E5E5E5"> called tumble RF</font>

386
00:14:59,870 --> 00:15:04,520
where we implemented<font color="#E5E5E5"> this</font><font color="#CCCCCC"> you may</font><font color="#E5E5E5"> have</font>

387
00:15:02,450 --> 00:15:06,800
seen you may say then<font color="#E5E5E5"> talk it was called</font>

388
00:15:04,520 --> 00:15:09,170
on API and I really wanted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> know that</font>

389
00:15:06,800 --> 00:15:10,319
was what that<font color="#CCCCCC"> was</font><font color="#E5E5E5"> for we just didn't</font>

390
00:15:09,170 --> 00:15:14,339
have<font color="#E5E5E5"> a name yet</font>

391
00:15:10,320 --> 00:15:16,740
ignore that<font color="#E5E5E5"> so what it is is a software</font>

392
00:15:14,340 --> 00:15:19,380
<font color="#CCCCCC">framework for to enable fuzzing of</font>

393
00:15:16,740 --> 00:15:21,720
arbitrary RF protocols<font color="#E5E5E5"> we try to</font>

394
00:15:19,380 --> 00:15:23,220
abstract the key concepts for it<font color="#E5E5E5"> so if</font>

395
00:15:21,720 --> 00:15:26,160
you take a look<font color="#CCCCCC"> from a in an</font>

396
00:15:23,220 --> 00:15:28,530
architecture point of view<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have a few</font>

397
00:15:26,160 --> 00:15:30,089
components<font color="#E5E5E5"> right the the in the top left</font>

398
00:15:28,530 --> 00:15:32,670
we have<font color="#CCCCCC"> a generator for different test</font>

399
00:15:30,090 --> 00:15:35,760
<font color="#E5E5E5">cases</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is what</font><font color="#CCCCCC"> basically you can</font>

400
00:15:32,670 --> 00:15:37,589
be hooked<font color="#E5E5E5"> in with other</font><font color="#CCCCCC"> frameworks is</font>

401
00:15:35,760 --> 00:15:39,390
you know<font color="#E5E5E5"> Sulli fuzzing anything peach</font>

402
00:15:37,590 --> 00:15:42,420
anything else that you want to<font color="#E5E5E5"> use and</font>

403
00:15:39,390 --> 00:15:45,569
take in test cases<font color="#E5E5E5"> or that you can write</font>

404
00:15:42,420 --> 00:15:48,089
<font color="#CCCCCC">right in this framework that goes into a</font>

405
00:15:45,570 --> 00:15:49,950
test case management<font color="#E5E5E5"> suite which we</font>

406
00:15:48,090 --> 00:15:53,160
drive via pretty flexible<font color="#CCCCCC"> command line</font>

407
00:15:49,950 --> 00:15:55,410
interface and then sends out data over

408
00:15:53,160 --> 00:15:58,620
different<font color="#CCCCCC"> Phi interfaces or different</font>

409
00:15:55,410 --> 00:16:00,510
transmit interfaces that magical RF

410
00:15:58,620 --> 00:16:03,060
energy<font color="#E5E5E5"> that Matt thinks looks a lot like</font>

411
00:16:00,510 --> 00:16:04,590
a lightning bolt<font color="#E5E5E5"> in this slide goes over</font>

412
00:16:03,060 --> 00:16:07,079
to the<font color="#E5E5E5"> harness on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> right hand side</font>

413
00:16:04,590 --> 00:16:10,260
<font color="#CCCCCC">and the harness I mean that's</font><font color="#E5E5E5"> really how</font>

414
00:16:07,080 --> 00:16:13,020
<font color="#CCCCCC">it looks guys and the harness is what</font>

415
00:16:10,260 --> 00:16:15,480
measures<font color="#E5E5E5"> the state of the receiver right</font>

416
00:16:13,020 --> 00:16:17,970
so this can be<font color="#CCCCCC"> as</font><font color="#E5E5E5"> simple as did I get an</font>

417
00:16:15,480 --> 00:16:20,490
acknowledgement frame back<font color="#E5E5E5"> or this could</font>

418
00:16:17,970 --> 00:16:22,950
<font color="#CCCCCC">be if you have more access to</font><font color="#E5E5E5"> the device</font>

419
00:16:20,490 --> 00:16:25,980
under<font color="#E5E5E5"> test you could be sitting watching</font>

420
00:16:22,950 --> 00:16:28,050
<font color="#E5E5E5">the serial out port or watching over at</font>

421
00:16:25,980 --> 00:16:30,840
the<font color="#CCCCCC"> states</font><font color="#E5E5E5"> to see if a process crashes</font>

422
00:16:28,050 --> 00:16:32,670
or<font color="#E5E5E5"> something happens and then of course</font>

423
00:16:30,840 --> 00:16:34,740
<font color="#E5E5E5">it's not helpful if you don't log out</font>

424
00:16:32,670 --> 00:16:39,949
the results<font color="#E5E5E5"> so we even threw that in for</font>

425
00:16:34,740 --> 00:16:39,950
<font color="#CCCCCC">free so based on this architecture</font>

426
00:16:40,360 --> 00:16:42,940
we're<font color="#E5E5E5"> gonna now walk</font><font color="#CCCCCC"> through the</font>

427
00:16:41,500 --> 00:16:45,310
<font color="#E5E5E5">different</font><font color="#CCCCCC"> components of that to show you</font>

428
00:16:42,940 --> 00:16:47,770
what can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> extended into</font><font color="#CCCCCC"> and how you</font>

429
00:16:45,310 --> 00:16:50,439
can<font color="#E5E5E5"> build on top</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> it sure so we're</font>

430
00:16:47,770 --> 00:16:53,439
<font color="#E5E5E5">talking about</font><font color="#CCCCCC"> going after RF interfaces</font>

431
00:16:50,440 --> 00:16:55,330
and hardware as well<font color="#CCCCCC"> so in order</font><font color="#E5E5E5"> to be</font>

432
00:16:53,440 --> 00:16:57,130
able<font color="#E5E5E5"> to instrument</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> in order to be</font>

433
00:16:55,330 --> 00:16:58,480
able<font color="#E5E5E5"> to interact with those protocols we</font>

434
00:16:57,130 --> 00:17:00,820
<font color="#CCCCCC">have to have</font><font color="#E5E5E5"> access to interfaces</font>

435
00:16:58,480 --> 00:17:03,610
<font color="#CCCCCC">whether</font><font color="#E5E5E5"> that's a software-defined radio</font>

436
00:17:00,820 --> 00:17:06,310
or<font color="#E5E5E5"> or</font><font color="#CCCCCC"> hardware radios whatever we're</font>

437
00:17:03,610 --> 00:17:08,410
<font color="#E5E5E5">using to both transmit signals as</font><font color="#CCCCCC"> a</font>

438
00:17:06,310 --> 00:17:09,460
<font color="#E5E5E5">stimulus at the device under test and</font>

439
00:17:08,410 --> 00:17:13,080
then how we monitor the device under

440
00:17:09,460 --> 00:17:15,910
<font color="#E5E5E5">test itself so basically what we've</font><font color="#CCCCCC"> done</font>

441
00:17:13,079 --> 00:17:17,079
in<font color="#CCCCCC"> order to to</font><font color="#E5E5E5"> represent that is we've</font>

442
00:17:15,910 --> 00:17:18,940
created this component called the

443
00:17:17,079 --> 00:17:21,579
interface<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the interface is</font>

444
00:17:18,940 --> 00:17:24,160
essentially an API that<font color="#E5E5E5"> abstracts all of</font>

445
00:17:21,579 --> 00:17:26,579
the the common and really necessary RF

446
00:17:24,160 --> 00:17:30,340
functions<font color="#E5E5E5"> to be as</font><font color="#CCCCCC"> generic as</font><font color="#E5E5E5"> possible</font>

447
00:17:26,579 --> 00:17:31,540
<font color="#CCCCCC">so say you have a new radio chipset or</font><font color="#E5E5E5"> a</font>

448
00:17:30,340 --> 00:17:34,540
new protocol that<font color="#E5E5E5"> you want to be able to</font>

449
00:17:31,540 --> 00:17:35,860
go after<font color="#CCCCCC"> and fuzz</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is likely going</font>

450
00:17:34,540 --> 00:17:39,040
to have a driver of its own

451
00:17:35,860 --> 00:17:41,740
whether it's<font color="#CCCCCC"> your whether it's</font><font color="#E5E5E5"> something</font>

452
00:17:39,040 --> 00:17:43,270
like<font color="#E5E5E5"> like</font><font color="#CCCCCC"> Killer Bee for 802 15</font><font color="#E5E5E5"> 4 or any</font>

453
00:17:41,740 --> 00:17:46,690
<font color="#E5E5E5">of like the host</font><font color="#CCCCCC"> host based upper tooth</font>

454
00:17:43,270 --> 00:17:47,980
drivers<font color="#CCCCCC"> what have you</font><font color="#E5E5E5"> what you what you</font>

455
00:17:46,690 --> 00:17:51,580
<font color="#E5E5E5">would have to do in order</font><font color="#CCCCCC"> to hook it up</font>

456
00:17:47,980 --> 00:17:53,920
with with tumble RF is<font color="#E5E5E5"> inherit our</font><font color="#CCCCCC"> base</font>

457
00:17:51,580 --> 00:17:56,080
interface class and then redefine<font color="#E5E5E5"> these</font>

458
00:17:53,920 --> 00:17:58,990
functions<font color="#E5E5E5"> that you see here to map from</font>

459
00:17:56,080 --> 00:18:01,210
our abstracted API into your protocol

460
00:17:58,990 --> 00:18:02,160
specific API some of these are pretty

461
00:18:01,210 --> 00:18:04,450
<font color="#E5E5E5">straightforward</font>

462
00:18:02,160 --> 00:18:05,680
<font color="#CCCCCC">setting and</font><font color="#E5E5E5"> getting the channel is</font><font color="#CCCCCC"> just</font>

463
00:18:04,450 --> 00:18:07,990
tuning<font color="#CCCCCC"> the radio</font><font color="#E5E5E5"> you know what</font>

464
00:18:05,680 --> 00:18:09,790
frequencies are looking at<font color="#E5E5E5"> we're going</font>

465
00:18:07,990 --> 00:18:11,650
<font color="#E5E5E5">to add you know</font><font color="#CCCCCC"> four you can also</font>

466
00:18:09,790 --> 00:18:12,730
<font color="#CCCCCC">optionally extend the</font><font color="#E5E5E5"> class to add</font>

467
00:18:11,650 --> 00:18:15,190
others in case there<font color="#E5E5E5"> are other</font>

468
00:18:12,730 --> 00:18:16,390
modulation parameters<font color="#CCCCCC"> to so maybe change</font>

469
00:18:15,190 --> 00:18:17,680
like changing<font color="#CCCCCC"> the modulation order</font>

470
00:18:16,390 --> 00:18:19,750
changing the<font color="#E5E5E5"> symbol rate the bitrate</font>

471
00:18:17,680 --> 00:18:21,850
<font color="#CCCCCC">things like that that's</font><font color="#E5E5E5"> not part of the</font>

472
00:18:19,750 --> 00:18:23,760
<font color="#E5E5E5">core functionality but this is where you</font>

473
00:18:21,850 --> 00:18:25,959
could extend it to<font color="#E5E5E5"> implement that</font>

474
00:18:23,760 --> 00:18:28,180
<font color="#CCCCCC">setting and</font><font color="#E5E5E5"> getting the s50 and preamble</font>

475
00:18:25,960 --> 00:18:29,380
<font color="#E5E5E5">are pretty straightforward as well and</font>

476
00:18:28,180 --> 00:18:31,360
you<font color="#E5E5E5"> can hook</font><font color="#CCCCCC"> that up to</font><font color="#E5E5E5"> your generator</font>

477
00:18:29,380 --> 00:18:35,020
to be able<font color="#E5E5E5"> to to change all those</font>

478
00:18:31,360 --> 00:18:36,820
automatically<font color="#CCCCCC"> transmitted you</font><font color="#E5E5E5"> pass</font><font color="#CCCCCC"> the</font>

479
00:18:35,020 --> 00:18:38,770
buffer it sends out<font color="#E5E5E5"> the packet and then</font>

480
00:18:36,820 --> 00:18:41,710
<font color="#E5E5E5">rx stops start and pull</font><font color="#CCCCCC"> are all</font><font color="#E5E5E5"> around</font>

481
00:18:38,770 --> 00:18:43,090
<font color="#E5E5E5">receiving so rx start turns on the</font><font color="#CCCCCC"> radio</font>

482
00:18:41,710 --> 00:18:43,790
receiver and puts it into a<font color="#CCCCCC"> listening</font>

483
00:18:43,090 --> 00:18:46,550
mode

484
00:18:43,790 --> 00:18:47,960
<font color="#CCCCCC">our ex stop till stop but then</font><font color="#E5E5E5"> our ex</font>

485
00:18:46,550 --> 00:18:51,260
<font color="#E5E5E5">poll is what you call</font><font color="#CCCCCC"> well you're in</font>

486
00:18:47,960 --> 00:18:55,250
<font color="#E5E5E5">that receive mode to</font><font color="#CCCCCC"> get packets</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> if</font>

487
00:18:51,260 --> 00:18:56,720
if there were any detected<font color="#E5E5E5"> so it really</font>

488
00:18:55,250 --> 00:18:58,820
is<font color="#CCCCCC"> that simple it really just does come</font>

489
00:18:56,720 --> 00:19:02,420
down<font color="#CCCCCC"> to these</font><font color="#E5E5E5"> functions and</font><font color="#CCCCCC"> it's pretty</font>

490
00:18:58,820 --> 00:19:04,220
<font color="#E5E5E5">easy to to interface an extent so then</font>

491
00:19:02,420 --> 00:19:05,960
the next<font color="#E5E5E5"> component is a generator right</font>

492
00:19:04,220 --> 00:19:09,080
so as I said<font color="#CCCCCC"> earlier this is where the</font>

493
00:19:05,960 --> 00:19:10,850
test cases are created<font color="#E5E5E5"> you can extend</font>

494
00:19:09,080 --> 00:19:13,820
this<font color="#E5E5E5"> and the two things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to</font>

495
00:19:10,850 --> 00:19:16,219
<font color="#E5E5E5">provide at minimum is something that can</font>

496
00:19:13,820 --> 00:19:18,310
spit out control<font color="#E5E5E5"> cases which sort of is</font>

497
00:19:16,220 --> 00:19:20,900
<font color="#E5E5E5">your normal unpermitted</font>

498
00:19:18,310 --> 00:19:23,090
normal packet<font color="#CCCCCC"> right and then the test</font>

499
00:19:20,900 --> 00:19:25,370
case<font color="#CCCCCC"> and</font><font color="#E5E5E5"> these are implemented as Python</font>

500
00:19:23,090 --> 00:19:28,159
<font color="#E5E5E5">iterators so you can produce a lot</font><font color="#CCCCCC"> of</font>

501
00:19:25,370 --> 00:19:30,620
different test<font color="#E5E5E5"> cases out of</font><font color="#CCCCCC"> these we</font>

502
00:19:28,160 --> 00:19:32,930
have put in for<font color="#CCCCCC"> today for the initial</font>

503
00:19:30,620 --> 00:19:35,020
release<font color="#E5E5E5"> three different generators we</font>

504
00:19:32,930 --> 00:19:37,820
<font color="#CCCCCC">ported and</font><font color="#E5E5E5"> cleaned up from my old ugly</font>

505
00:19:35,020 --> 00:19:40,220
<font color="#E5E5E5">isotope code the preamble length</font>

506
00:19:37,820 --> 00:19:44,480
generator<font color="#E5E5E5"> and something called</font><font color="#CCCCCC"> Franconia</font>

507
00:19:40,220 --> 00:19:46,160
<font color="#CCCCCC">Notch</font><font color="#E5E5E5"> which is puts non-standard symbols</font>

508
00:19:44,480 --> 00:19:49,490
in the preamble like apps instead of

509
00:19:46,160 --> 00:19:51,050
zeros<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then we also have one</font><font color="#CCCCCC"> that</font>

510
00:19:49,490 --> 00:19:54,500
spits in random payloads into<font color="#E5E5E5"> the</font>

511
00:19:51,050 --> 00:19:56,480
messages so to<font color="#CCCCCC"> extend and be able to try</font>

512
00:19:54,500 --> 00:19:57,620
out<font color="#CCCCCC"> new fuzz cases you actually if</font>

513
00:19:56,480 --> 00:19:59,570
you're on a protocol<font color="#CCCCCC"> that's already</font>

514
00:19:57,620 --> 00:20:02,780
supported<font color="#E5E5E5"> from an interface perspective</font>

515
00:19:59,570 --> 00:20:05,340
<font color="#E5E5E5">you just have to add one of these</font>

516
00:20:02,780 --> 00:20:07,379
and then the harnesses are in charge of

517
00:20:05,340 --> 00:20:09,000
as I said<font color="#E5E5E5"> earlier hearing back and</font>

518
00:20:07,380 --> 00:20:12,450
<font color="#E5E5E5">seeing what the state</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the device</font>

519
00:20:09,000 --> 00:20:14,240
under<font color="#E5E5E5"> test is so we have put in three</font>

520
00:20:12,450 --> 00:20:17,520
we're gonna be<font color="#CCCCCC"> using in the demo today</font>

521
00:20:14,240 --> 00:20:18,900
<font color="#CCCCCC">the received frame</font><font color="#E5E5E5"> track harness this is</font>

522
00:20:17,520 --> 00:20:21,059
one that is<font color="#CCCCCC"> very simple</font>

523
00:20:18,900 --> 00:20:22,980
it actually takes another interface<font color="#E5E5E5"> puts</font>

524
00:20:21,059 --> 00:20:25,410
it into<font color="#E5E5E5"> a</font><font color="#CCCCCC"> thief mode and says hey did I</font>

525
00:20:22,980 --> 00:20:27,420
get<font color="#E5E5E5"> that packet and for five layer</font>

526
00:20:25,410 --> 00:20:31,380
fingerprinting<font color="#E5E5E5"> this actually is very</font>

527
00:20:27,420 --> 00:20:34,920
<font color="#CCCCCC">effective very reliable and what works</font>

528
00:20:31,380 --> 00:20:37,170
fine for<font color="#CCCCCC"> it for systems</font><font color="#E5E5E5"> that you don't</font>

529
00:20:34,920 --> 00:20:39,300
have<font color="#CCCCCC"> control over or you can't</font><font color="#E5E5E5"> directly</font>

530
00:20:37,170 --> 00:20:41,640
interface with the radio<font color="#E5E5E5"> you need to use</font>

531
00:20:39,300 --> 00:20:44,520
one of<font color="#E5E5E5"> the other two or extend an</font>

532
00:20:41,640 --> 00:20:46,470
additional one so we have there's

533
00:20:44,520 --> 00:20:48,389
there's code in there to watch serial

534
00:20:46,470 --> 00:20:51,000
lines coming in to basically<font color="#E5E5E5"> look</font><font color="#CCCCCC"> for a</font>

535
00:20:48,390 --> 00:20:52,980
log<font color="#CCCCCC"> output like</font><font color="#E5E5E5"> clopped frame</font><font color="#CCCCCC"> received</font>

536
00:20:51,000 --> 00:20:55,980
or something like<font color="#E5E5E5"> that this one actually</font>

537
00:20:52,980 --> 00:20:58,920
<font color="#CCCCCC">I believe also can implement we power</font>

538
00:20:55,980 --> 00:21:01,380
cycling the<font color="#E5E5E5"> target by pulling a reset</font>

539
00:20:58,920 --> 00:21:02,429
pin on it<font color="#CCCCCC"> so if it</font><font color="#E5E5E5"> gets into</font><font color="#CCCCCC"> a crash</font>

540
00:21:01,380 --> 00:21:07,140
<font color="#E5E5E5">state you can bring it back</font>

541
00:21:02,429 --> 00:21:09,540
automatically<font color="#CCCCCC"> and then we also have an</font>

542
00:21:07,140 --> 00:21:11,280
<font color="#CCCCCC">ssh</font><font color="#E5E5E5"> process check one which obviously</font>

543
00:21:09,540 --> 00:21:14,010
with our<font color="#E5E5E5"> favorite reboot commands can</font>

544
00:21:11,280 --> 00:21:17,000
reset it<font color="#E5E5E5"> but moreover is looking to see</font>

545
00:21:14,010 --> 00:21:17,000
if a process crashes

546
00:21:17,309 --> 00:21:21,450
and then the last<font color="#E5E5E5"> component I promise</font><font color="#CCCCCC"> we</font>

547
00:21:19,860 --> 00:21:23,758
will stop going<font color="#E5E5E5"> over software</font>

548
00:21:21,450 --> 00:21:26,669
<font color="#E5E5E5">architecture right after lunch</font><font color="#CCCCCC"> and move</font>

549
00:21:23,759 --> 00:21:28,200
on to a demo<font color="#CCCCCC"> but the</font><font color="#E5E5E5"> last one is how do</font>

550
00:21:26,669 --> 00:21:30,629
<font color="#E5E5E5">we coordinate how do we tie all</font><font color="#CCCCCC"> of these</font>

551
00:21:28,200 --> 00:21:32,610
together<font color="#CCCCCC"> so you either implement a run</font>

552
00:21:30,629 --> 00:21:36,149
test which is basically nested for-loops

553
00:21:32,610 --> 00:21:37,168
very classy<font color="#E5E5E5"> or you can extend the one</font>

554
00:21:36,149 --> 00:21:39,320
we're gonna<font color="#E5E5E5"> be using</font><font color="#CCCCCC"> today as an</font>

555
00:21:37,169 --> 00:21:42,120
extension<font color="#CCCCCC"> of the alternative</font><font color="#E5E5E5"> case which</font>

556
00:21:39,320 --> 00:21:44,428
basically<font color="#E5E5E5"> has two things it tries out</font>

557
00:21:42,120 --> 00:21:46,918
doing the control case make sure<font color="#CCCCCC"> that</font>

558
00:21:44,429 --> 00:21:49,710
passes and once it does pass then<font color="#CCCCCC"> it'll</font>

559
00:21:46,919 --> 00:21:52,559
throw<font color="#CCCCCC"> a test case</font><font color="#E5E5E5"> reset if needed and</font>

560
00:21:49,710 --> 00:21:54,360
continue on going<font color="#E5E5E5"> through those and the</font>

561
00:21:52,559 --> 00:21:56,369
control case is important<font color="#E5E5E5"> because we're</font>

562
00:21:54,360 --> 00:21:57,719
looking<font color="#CCCCCC"> for for behavior</font><font color="#E5E5E5"> that induces</font>

563
00:21:56,369 --> 00:22:00,209
non-standard behavior within<font color="#E5E5E5"> our</font>

564
00:21:57,720 --> 00:22:01,740
<font color="#CCCCCC">physical layer so if say we send</font><font color="#E5E5E5"> a</font>

565
00:22:00,210 --> 00:22:03,690
packet<font color="#E5E5E5"> that gets the radio into some</font>

566
00:22:01,740 --> 00:22:05,369
state<font color="#CCCCCC"> that it can't recover from we want</font>

567
00:22:03,690 --> 00:22:06,779
to know that<font color="#CCCCCC"> the radio</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> in that</font>

568
00:22:05,369 --> 00:22:08,428
unrecoverable<font color="#CCCCCC"> state before we continue</font>

569
00:22:06,779 --> 00:22:10,619
<font color="#CCCCCC">with our testing because that may induce</font>

570
00:22:08,429 --> 00:22:11,940
false positives<font color="#CCCCCC"> so that alternator is a</font>

571
00:22:10,619 --> 00:22:13,529
way of<font color="#CCCCCC"> ensuring that the radios in a</font>

572
00:22:11,940 --> 00:22:14,999
known good<font color="#E5E5E5"> state ensuring</font><font color="#CCCCCC"> that it's</font>

573
00:22:13,529 --> 00:22:16,919
still<font color="#E5E5E5"> receiving packets is still able to</font>

574
00:22:14,999 --> 00:22:20,970
respond<font color="#CCCCCC"> before continuing with</font>

575
00:22:16,919 --> 00:22:23,009
subsequent<font color="#E5E5E5"> tests so same diagram that's</font>

576
00:22:20,970 --> 00:22:24,840
<font color="#E5E5E5">before just two additional boxes to show</font>

577
00:22:23,009 --> 00:22:27,090
you the exact architecture<font color="#CCCCCC"> setup that</font>

578
00:22:24,840 --> 00:22:28,740
we're<font color="#CCCCCC"> gonna be</font><font color="#E5E5E5"> using in the demo</font><font color="#CCCCCC"> the</font>

579
00:22:27,090 --> 00:22:30,509
<font color="#E5E5E5">only change here is that</font><font color="#CCCCCC"> the harness</font>

580
00:22:28,740 --> 00:22:32,850
we're using that received<font color="#E5E5E5"> frame check</font>

581
00:22:30,509 --> 00:22:34,139
harness<font color="#E5E5E5"> so if we look inside of it it's</font>

582
00:22:32,850 --> 00:22:36,509
<font color="#E5E5E5">actually going to have a receive</font>

583
00:22:34,139 --> 00:22:38,490
interface for<font color="#E5E5E5"> the demo it looks like not</font>

584
00:22:36,509 --> 00:22:42,450
plugged in and ours a USB stick<font color="#CCCCCC"> which is</font>

585
00:22:38,490 --> 00:22:44,340
<font color="#E5E5E5">an</font><font color="#CCCCCC"> atmel 802 15 fort stick then there's</font>

586
00:22:42,450 --> 00:22:46,980
obviously<font color="#CCCCCC"> the comparison logic inside</font>

587
00:22:44,340 --> 00:22:49,529
the<font color="#E5E5E5"> hall to see if the the right frame</font>

588
00:22:46,980 --> 00:22:51,210
came in did the one we send come<font color="#E5E5E5"> in to</font>

589
00:22:49,529 --> 00:22:53,159
the receive side right we<font color="#E5E5E5"> don't want to</font>

590
00:22:51,210 --> 00:22:54,779
pick up something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you guys</font>

591
00:22:53,159 --> 00:22:57,990
<font color="#E5E5E5">especially</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> people in the front row</font>

592
00:22:54,779 --> 00:23:00,559
<font color="#E5E5E5">are injecting into the thing in the</font>

593
00:22:57,990 --> 00:23:00,559
<font color="#E5E5E5">middle of the talk</font>

594
00:23:00,780 --> 00:23:08,700
and the<font color="#CCCCCC"> the transmit</font><font color="#E5E5E5"> interface is for</font>

595
00:23:04,590 --> 00:23:11,399
this demo going to be a<font color="#CCCCCC"> USRP b210 which</font>

596
00:23:08,700 --> 00:23:13,530
<font color="#E5E5E5">is a software-defined radio so what are</font>

597
00:23:11,400 --> 00:23:17,100
we going to<font color="#E5E5E5"> be generating as the data</font>

598
00:23:13,530 --> 00:23:19,230
<font color="#E5E5E5">sure so we're going to be buzzing this</font>

599
00:23:17,100 --> 00:23:22,320
802 15<font color="#E5E5E5"> for radio with different cases of</font>

600
00:23:19,230 --> 00:23:25,110
<font color="#E5E5E5">non-standard preambles so Ryan mentioned</font>

601
00:23:22,320 --> 00:23:27,889
<font color="#E5E5E5">we've</font><font color="#CCCCCC"> got this Atmel or</font><font color="#E5E5E5"> a USB</font><font color="#CCCCCC"> stick it's</font>

602
00:23:25,110 --> 00:23:31,050
essentially a dev board that has a

603
00:23:27,890 --> 00:23:32,670
standard<font color="#CCCCCC"> Atmel 802 15 for radio</font><font color="#E5E5E5"> bolded</font>

604
00:23:31,050 --> 00:23:35,399
<font color="#CCCCCC">to I think it's like an ADR 32 or</font>

605
00:23:32,670 --> 00:23:37,560
<font color="#CCCCCC">something like</font><font color="#E5E5E5"> that if you are</font><font color="#CCCCCC"> 32 USB</font>

606
00:23:35,400 --> 00:23:38,850
back to a host and we have software

607
00:23:37,560 --> 00:23:41,310
support to interface with<font color="#CCCCCC"> that via</font>

608
00:23:38,850 --> 00:23:43,409
killer B which is an 802<font color="#E5E5E5"> 15 4 framework</font>

609
00:23:41,310 --> 00:23:47,760
that that Ryan<font color="#E5E5E5"> and the team</font><font color="#CCCCCC"> that really</font>

610
00:23:43,410 --> 00:23:49,260
<font color="#E5E5E5">maintains so when when this thing</font>

611
00:23:47,760 --> 00:23:50,940
receives a packet will<font color="#E5E5E5"> be able to or</font>

612
00:23:49,260 --> 00:23:53,190
will be<font color="#CCCCCC"> able to control it so the</font>

613
00:23:50,940 --> 00:23:55,560
channel<font color="#CCCCCC"> you know put in</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> different</font>

614
00:23:53,190 --> 00:23:57,450
states through killer B and receive

615
00:23:55,560 --> 00:24:01,230
packets just<font color="#CCCCCC"> nicely over USB whenever</font>

616
00:23:57,450 --> 00:24:03,390
they come in as<font color="#E5E5E5"> a as a stimulus to this</font>

617
00:24:01,230 --> 00:24:07,470
I'm going to<font color="#E5E5E5"> be injecting packets via</font>

618
00:24:03,390 --> 00:24:10,020
this<font color="#CCCCCC"> you are at USRP I have a I'll talk</font>

619
00:24:07,470 --> 00:24:11,580
<font color="#CCCCCC">more about the the signal generation</font><font color="#E5E5E5"> in</font>

620
00:24:10,020 --> 00:24:12,720
a moment but the case<font color="#E5E5E5"> that we're going</font>

621
00:24:11,580 --> 00:24:15,270
<font color="#E5E5E5">to be running through is sending</font>

622
00:24:12,720 --> 00:24:18,180
different variants of non-standard<font color="#CCCCCC"> 802</font>

623
00:24:15,270 --> 00:24:20,790
<font color="#CCCCCC">15-4 preambles</font><font color="#E5E5E5"> so this is what the</font>

624
00:24:18,180 --> 00:24:23,520
standard<font color="#E5E5E5"> 15 the standards-compliant 15</font>

625
00:24:20,790 --> 00:24:28,409
<font color="#E5E5E5">for preamble looks like we have four</font>

626
00:24:23,520 --> 00:24:31,500
octets of of<font color="#CCCCCC"> 0 value 0 valid code words</font>

627
00:24:28,410 --> 00:24:34,770
here so<font color="#CCCCCC"> 4 of</font><font color="#E5E5E5"> those followed by a</font><font color="#CCCCCC"> sync</font>

628
00:24:31,500 --> 00:24:36,360
word or<font color="#CCCCCC"> sfd that's valued at a 7 and</font>

629
00:24:34,770 --> 00:24:37,620
then there's a length value which we're

630
00:24:36,360 --> 00:24:41,100
not<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to touch</font><font color="#E5E5E5"> but then what follows</font>

631
00:24:37,620 --> 00:24:42,149
<font color="#E5E5E5">that is the</font><font color="#CCCCCC"> mac frame so what we're</font>

632
00:24:41,100 --> 00:24:44,790
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to do is we're going to begin</font><font color="#E5E5E5"> by</font>

633
00:24:42,150 --> 00:24:46,230
<font color="#E5E5E5">sending a compliant 15 for frame and</font>

634
00:24:44,790 --> 00:24:48,930
then we're slowly going<font color="#E5E5E5"> to take away</font>

635
00:24:46,230 --> 00:24:50,190
some of those some of those octet until

636
00:24:48,930 --> 00:24:52,800
finally<font color="#CCCCCC"> we're just left with</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> s FD</font>

637
00:24:50,190 --> 00:24:56,310
<font color="#E5E5E5">and we're gonna see if if this chipset</font>

638
00:24:52,800 --> 00:24:58,169
is willing and<font color="#E5E5E5"> able to to play along</font>

639
00:24:56,310 --> 00:24:59,940
with<font color="#E5E5E5"> a non standard compliant preamble</font>

640
00:24:58,170 --> 00:25:01,320
<font color="#E5E5E5">and again if</font><font color="#CCCCCC"> we think</font><font color="#E5E5E5"> back to the state</font>

641
00:24:59,940 --> 00:25:02,750
machine think about the logic<font color="#CCCCCC"> of</font><font color="#E5E5E5"> how</font>

642
00:25:01,320 --> 00:25:05,480
this is<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> work</font>

643
00:25:02,750 --> 00:25:06,860
the radio is is is<font color="#E5E5E5"> you know it's running</font>

644
00:25:05,480 --> 00:25:09,220
through<font color="#E5E5E5"> a deterministic algorithm this</font>

645
00:25:06,860 --> 00:25:13,040
<font color="#CCCCCC">baked into its</font><font color="#E5E5E5"> silicon it's looking for</font>

646
00:25:09,220 --> 00:25:15,740
<font color="#E5E5E5">for some correlation score against the</font>

647
00:25:13,040 --> 00:25:18,379
preamble and<font color="#E5E5E5"> against the</font><font color="#CCCCCC"> sfd so if</font><font color="#E5E5E5"> it's</font>

648
00:25:15,740 --> 00:25:19,940
correlating for for just the 8-bit<font color="#CCCCCC"> sft</font>

649
00:25:18,380 --> 00:25:21,620
and doesn't care<font color="#E5E5E5"> about the preamble then</font>

650
00:25:19,940 --> 00:25:24,320
we would expect<font color="#CCCCCC"> expect to detect packets</font>

651
00:25:21,620 --> 00:25:26,989
with this but maybe it's looking for for

652
00:25:24,320 --> 00:25:28,820
the<font color="#CCCCCC"> SMT and</font><font color="#E5E5E5"> 16 bits of preamble</font><font color="#CCCCCC"> these</font>

653
00:25:26,990 --> 00:25:30,320
are all decisions<font color="#E5E5E5"> that the that the</font>

654
00:25:28,820 --> 00:25:31,460
chipset designers have to make when

655
00:25:30,320 --> 00:25:33,710
<font color="#E5E5E5">they're when they're</font><font color="#CCCCCC"> designing this this</font>

656
00:25:31,460 --> 00:25:35,570
<font color="#E5E5E5">IC so by doing this test we're gonna be</font>

657
00:25:33,710 --> 00:25:38,180
able<font color="#E5E5E5"> to fingerprint</font><font color="#CCCCCC"> whether or not</font>

658
00:25:35,570 --> 00:25:42,620
whether or<font color="#CCCCCC"> not</font><font color="#E5E5E5"> this chipset is is able</font>

659
00:25:38,180 --> 00:25:46,850
<font color="#CCCCCC">to accept kind of</font><font color="#E5E5E5"> poorly formed or or</font>

660
00:25:42,620 --> 00:25:48,800
corrupted preambles so to<font color="#E5E5E5"> generate the</font>

661
00:25:46,850 --> 00:25:51,379
preamble data<font color="#E5E5E5"> I'm going to be using a</font>

662
00:25:48,800 --> 00:25:53,210
software<font color="#E5E5E5"> defined</font><font color="#CCCCCC"> radio framework</font><font color="#E5E5E5"> to to</font>

663
00:25:51,380 --> 00:25:55,580
produce<font color="#E5E5E5"> non-standard</font><font color="#CCCCCC"> eight or to fifteen</font>

664
00:25:53,210 --> 00:25:57,230
for non-standard<font color="#E5E5E5"> a</font><font color="#CCCCCC"> o</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> fifteen for</font>

665
00:25:55,580 --> 00:25:59,570
frames<font color="#E5E5E5"> you don't have to use a</font>

666
00:25:57,230 --> 00:26:02,150
software-defined radio to do<font color="#E5E5E5"> this you</font>

667
00:25:59,570 --> 00:26:05,740
can<font color="#E5E5E5"> use a device</font><font color="#CCCCCC"> like the a P mode which</font>

668
00:26:02,150 --> 00:26:07,880
is a 802<font color="#E5E5E5"> 15 for injector that you can</font>

669
00:26:05,740 --> 00:26:11,380
consume tricks some embedded tricks you

670
00:26:07,880 --> 00:26:13,490
can or you can configure it to send

671
00:26:11,380 --> 00:26:17,900
non-standard physical<font color="#E5E5E5"> earth frames as</font>

672
00:26:13,490 --> 00:26:19,370
<font color="#E5E5E5">well but</font><font color="#CCCCCC"> SDR is pretty easy</font><font color="#E5E5E5"> to do this</font>

673
00:26:17,900 --> 00:26:21,980
and<font color="#CCCCCC"> there was some well instrumented</font>

674
00:26:19,370 --> 00:26:24,739
tools to get up and running with<font color="#E5E5E5"> this so</font>

675
00:26:21,980 --> 00:26:26,960
there's a wonderful<font color="#E5E5E5"> the new radio</font>

676
00:26:24,740 --> 00:26:29,990
auditory module called<font color="#E5E5E5"> gr i triple e ãao</font>

677
00:26:26,960 --> 00:26:33,040
<font color="#E5E5E5">215 for its maintained by bastion</font><font color="#CCCCCC"> glow</font>

678
00:26:29,990 --> 00:26:35,390
<font color="#E5E5E5">so</font><font color="#CCCCCC"> does a really</font><font color="#E5E5E5"> nice job</font><font color="#CCCCCC"> with it</font><font color="#E5E5E5"> and</font>

679
00:26:33,040 --> 00:26:37,430
getting<font color="#E5E5E5"> it to so that</font><font color="#CCCCCC"> we can send</font>

680
00:26:35,390 --> 00:26:39,500
arbitrary an arbitrary fly header was as

681
00:26:37,430 --> 00:26:43,160
easy<font color="#E5E5E5"> as bypassing that access code</font>

682
00:26:39,500 --> 00:26:44,960
prefix or block which and that's what

683
00:26:43,160 --> 00:26:47,480
puts in the preamble octet<font color="#E5E5E5"> the</font><font color="#CCCCCC"> s FD</font>

684
00:26:44,960 --> 00:26:50,090
<font color="#E5E5E5">length and all that so by disabling that</font>

685
00:26:47,480 --> 00:26:52,130
<font color="#E5E5E5">in in rebuilding</font><font color="#CCCCCC"> it we're able to</font>

686
00:26:50,090 --> 00:26:55,000
present it with five values of our own

687
00:26:52,130 --> 00:26:57,490
and<font color="#E5E5E5"> it's happy to modulate and send them</font>

688
00:26:55,000 --> 00:27:00,159
so that's the<font color="#E5E5E5"> setup let's let's do it</font>

689
00:26:57,490 --> 00:27:05,350
live so<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> jump over to my VM</font>

690
00:27:00,159 --> 00:27:07,150
here<font color="#E5E5E5"> and see the work these</font><font color="#CCCCCC"> mining is</font>

691
00:27:05,350 --> 00:27:11,168
through the command line<font color="#CCCCCC"> of the</font>

692
00:27:07,150 --> 00:27:13,150
interface and this command<font color="#E5E5E5"> line is going</font>

693
00:27:11,169 --> 00:27:14,440
<font color="#E5E5E5">to you see it takes</font><font color="#CCCCCC"> in this</font><font color="#E5E5E5"> is just a</font>

694
00:27:13,150 --> 00:27:16,450
standard<font color="#E5E5E5"> one it takes in</font><font color="#CCCCCC"> that we're</font>

695
00:27:14,440 --> 00:27:18,039
gonna run the generator<font color="#CCCCCC"> Matt I think</font>

696
00:27:16,450 --> 00:27:19,270
you're<font color="#CCCCCC"> actually running Franconian</font><font color="#E5E5E5"> not</font>

697
00:27:18,039 --> 00:27:22,480
which instead of preamble thank you very

698
00:27:19,270 --> 00:27:24,429
much<font color="#E5E5E5"> wrong test</font><font color="#CCCCCC"> ahead then we're going</font>

699
00:27:22,480 --> 00:27:27,039
<font color="#CCCCCC">to</font><font color="#E5E5E5"> use the</font><font color="#CCCCCC"> received frame harness we're</font>

700
00:27:24,429 --> 00:27:30,400
going to use the<font color="#E5E5E5"> transmit interface if</font>

701
00:27:27,039 --> 00:27:32,200
that can<font color="#E5E5E5"> do radio 802 15 for that</font><font color="#CCCCCC"> Matt</font>

702
00:27:30,400 --> 00:27:34,030
was just<font color="#E5E5E5"> mentioning gonna be doing this</font>

703
00:27:32,200 --> 00:27:36,789
on channel 11 for anyone who wants<font color="#CCCCCC"> to</font>

704
00:27:34,030 --> 00:27:38,408
<font color="#E5E5E5">jam us</font><font color="#CCCCCC"> and we're gonna be running five</font>

705
00:27:36,789 --> 00:27:41,230
<font color="#CCCCCC">iterations because</font><font color="#E5E5E5"> we don't want you to</font>

706
00:27:38,409 --> 00:27:44,380
<font color="#E5E5E5">get bored so what you see</font><font color="#CCCCCC"> now is we're</font>

707
00:27:41,230 --> 00:27:45,970
running<font color="#E5E5E5"> through the test cases</font><font color="#CCCCCC"> each time</font>

708
00:27:44,380 --> 00:27:47,620
through and it'll go<font color="#E5E5E5"> through each test</font>

709
00:27:45,970 --> 00:27:52,630
<font color="#CCCCCC">case I think there's ten test cases</font><font color="#E5E5E5"> in</font>

710
00:27:47,620 --> 00:27:54,158
this one five five iterations<font color="#CCCCCC"> of each so</font>

711
00:27:52,630 --> 00:27:56,350
we're gonna run<font color="#E5E5E5"> through 50 packets we're</font>

712
00:27:54,159 --> 00:27:58,000
gonna make<font color="#CCCCCC"> sure for each one we get a</font>

713
00:27:56,350 --> 00:27:59,770
control case we have a<font color="#E5E5E5"> stable state</font>

714
00:27:58,000 --> 00:28:02,830
beforehand<font color="#E5E5E5"> and then we're gonna go ahead</font>

715
00:27:59,770 --> 00:28:04,629
<font color="#E5E5E5">run the test case and</font><font color="#CCCCCC"> see if we receive</font>

716
00:28:02,830 --> 00:28:06,580
it<font color="#CCCCCC"> right to see if</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> radios state</font>

717
00:28:04,630 --> 00:28:10,690
machine is<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> pick up that modified</font>

718
00:28:06,580 --> 00:28:14,820
length so just twiddle your thumbs for a

719
00:28:10,690 --> 00:28:14,820
moment here right in Tulsa joke

720
00:28:15,059 --> 00:28:21,820
that's number one<font color="#CCCCCC"> if anyone who needs</font>

721
00:28:19,750 --> 00:28:24,720
random for any other tests you<font color="#E5E5E5"> could use</font>

722
00:28:21,820 --> 00:28:28,539
a new framework that will soon be up at

723
00:28:24,720 --> 00:28:31,360
random<font color="#E5E5E5"> dot online are a ND m dot online</font>

724
00:28:28,539 --> 00:28:34,750
<font color="#E5E5E5">it's random available via a restful</font>

725
00:28:31,360 --> 00:28:37,990
interface<font color="#CCCCCC"> and our lead developers</font><font color="#E5E5E5"> are in</font>

726
00:28:34,750 --> 00:28:41,049
<font color="#CCCCCC">the front well</font><font color="#E5E5E5"> I think our marketing</font>

727
00:28:37,990 --> 00:28:41,860
team<font color="#E5E5E5"> is somewhere here hopefully so be</font>

728
00:28:41,049 --> 00:28:45,429
up in<font color="#CCCCCC"> no time</font>

729
00:28:41,860 --> 00:28:46,840
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so um so when it runs this test</font>

730
00:28:45,429 --> 00:28:48,429
it's good<font color="#E5E5E5"> the when it runs through these</font>

731
00:28:46,840 --> 00:28:51,789
test cases<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> gonna log the results</font>

732
00:28:48,429 --> 00:28:57,760
out<font color="#E5E5E5"> to to a JSON file</font><font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> little</font>

733
00:28:51,789 --> 00:28:59,860
script<font color="#CCCCCC"> here to visualize them so</font><font color="#E5E5E5"> okay so</font>

734
00:28:57,760 --> 00:29:01,299
what we're looking<font color="#E5E5E5"> at</font><font color="#CCCCCC"> here are the ten</font>

735
00:28:59,860 --> 00:29:03,309
<font color="#E5E5E5">different test cases</font><font color="#CCCCCC"> that were jet that</font>

736
00:29:01,299 --> 00:29:05,710
<font color="#E5E5E5">were presented by the generator remember</font>

737
00:29:03,309 --> 00:29:07,899
we did five<font color="#E5E5E5"> only five</font><font color="#CCCCCC"> iterations with</font>

738
00:29:05,710 --> 00:29:10,330
this<font color="#E5E5E5"> so the sample size isn't huge but</font>

739
00:29:07,900 --> 00:29:13,150
even even<font color="#CCCCCC"> with</font><font color="#E5E5E5"> that small sample size we</font>

740
00:29:10,330 --> 00:29:16,120
<font color="#E5E5E5">can begin to see a trend</font><font color="#CCCCCC"> so if you look</font>

741
00:29:13,150 --> 00:29:17,799
<font color="#CCCCCC">down a case of</font><font color="#E5E5E5"> seven and nine</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can see</font>

742
00:29:16,120 --> 00:29:19,389
<font color="#E5E5E5">that those were really</font><font color="#CCCCCC"> the only excuse</font>

743
00:29:17,799 --> 00:29:23,020
me six<font color="#E5E5E5"> and eight those were the only</font><font color="#CCCCCC"> two</font>

744
00:29:19,390 --> 00:29:25,270
cases<font color="#E5E5E5"> that the passed</font><font color="#CCCCCC"> here so basically</font>

745
00:29:23,020 --> 00:29:27,760
<font color="#CCCCCC">what that</font><font color="#E5E5E5"> means is that this chipset</font>

746
00:29:25,270 --> 00:29:31,750
implements a<font color="#CCCCCC"> or takes a very fairly</font>

747
00:29:27,760 --> 00:29:36,010
strict<font color="#E5E5E5"> look at the preamble</font><font color="#CCCCCC"> so by by</font>

748
00:29:31,750 --> 00:29:38,140
generating<font color="#E5E5E5"> a short preamble by generator</font>

749
00:29:36,010 --> 00:29:40,059
<font color="#E5E5E5">short preamble were able to basically</font>

750
00:29:38,140 --> 00:29:42,909
send frames this<font color="#E5E5E5"> this radio is not</font><font color="#CCCCCC"> able</font>

751
00:29:40,059 --> 00:29:44,678
<font color="#CCCCCC">to see now let's look</font><font color="#E5E5E5"> at some other</font>

752
00:29:42,909 --> 00:29:46,419
radios that<font color="#E5E5E5"> we've read on this test on</font>

753
00:29:44,679 --> 00:29:50,200
so this is data<font color="#E5E5E5"> that we computed earlier</font>

754
00:29:46,419 --> 00:29:51,340
today<font color="#CCCCCC"> fifty iterations each so we did</font>

755
00:29:50,200 --> 00:29:52,730
this<font color="#E5E5E5"> in advance so that you</font><font color="#CCCCCC"> guys</font>

756
00:29:51,340 --> 00:29:55,490
wouldn't have to you know

757
00:29:52,730 --> 00:29:58,610
sit here<font color="#E5E5E5"> for 20</font><font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> per radio</font><font color="#CCCCCC"> we did</font>

758
00:29:55,490 --> 00:30:01,070
this but<font color="#E5E5E5"> here are the results so we</font>

759
00:29:58,610 --> 00:30:03,469
looked<font color="#E5E5E5"> at three</font><font color="#CCCCCC"> different chipsets we</font>

760
00:30:01,070 --> 00:30:06,820
looked at the CC<font color="#CCCCCC"> 2420</font><font color="#E5E5E5"> which is a TI</font>

761
00:30:03,470 --> 00:30:10,070
radio that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that is on the yappy mode</font>

762
00:30:06,820 --> 00:30:12,260
<font color="#CCCCCC">we looked at the CC 25:31</font><font color="#E5E5E5"> which is</font>

763
00:30:10,070 --> 00:30:15,770
another<font color="#CCCCCC"> TI radio that's on a more more</font>

764
00:30:12,260 --> 00:30:18,980
modern<font color="#CCCCCC"> it's a it's a more modern variant</font>

765
00:30:15,770 --> 00:30:21,049
of of that radio made by ta TI<font color="#CCCCCC"> but we</font>

766
00:30:18,980 --> 00:30:22,370
just had that a little USB<font color="#E5E5E5"> dongle and</font>

767
00:30:21,049 --> 00:30:25,250
then also we looked at this<font color="#E5E5E5"> at</font><font color="#CCCCCC"> mill</font>

768
00:30:22,370 --> 00:30:26,510
Atmel chip<font color="#CCCCCC"> set as well</font><font color="#E5E5E5"> and you know just</font>

769
00:30:25,250 --> 00:30:27,470
by looking<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> data we can see</font><font color="#CCCCCC"> that</font>

770
00:30:26,510 --> 00:30:29,600
there are<font color="#E5E5E5"> some pretty different</font>

771
00:30:27,470 --> 00:30:32,450
<font color="#E5E5E5">characteristics among them all so the</font>

772
00:30:29,600 --> 00:30:33,860
<font color="#E5E5E5">two TI radios were able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> accept they</font>

773
00:30:32,450 --> 00:30:35,570
were able<font color="#E5E5E5"> to accept and receive frames</font>

774
00:30:33,860 --> 00:30:37,850
<font color="#E5E5E5">that only had one</font><font color="#CCCCCC"> octet</font><font color="#E5E5E5"> of preamble</font>

775
00:30:35,570 --> 00:30:39,500
whereas the<font color="#E5E5E5"> ours a USB stick</font>

776
00:30:37,850 --> 00:30:41,480
as we mentioned expected there to be

777
00:30:39,500 --> 00:30:43,190
there to be at least<font color="#E5E5E5"> three octet</font><font color="#CCCCCC"> Cyprian</font>

778
00:30:41,480 --> 00:30:45,260
<font color="#CCCCCC">below in</font><font color="#E5E5E5"> order for that to for those</font>

779
00:30:43,190 --> 00:30:46,549
messages<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be received so the</font>

780
00:30:45,260 --> 00:30:49,640
implications of this are<font color="#E5E5E5"> pretty</font>

781
00:30:46,549 --> 00:30:50,900
interesting<font color="#CCCCCC"> just with this knowledge</font><font color="#E5E5E5"> if</font>

782
00:30:49,640 --> 00:30:53,570
we knew that<font color="#E5E5E5"> we wanted to attack a</font>

783
00:30:50,900 --> 00:30:56,059
device that was based<font color="#E5E5E5"> on it was based on</font>

784
00:30:53,570 --> 00:30:57,860
a<font color="#E5E5E5"> TI radio</font><font color="#CCCCCC"> we would be able</font><font color="#E5E5E5"> to craft</font>

785
00:30:56,059 --> 00:30:59,570
short frames that only that<font color="#E5E5E5"> target would</font>

786
00:30:57,860 --> 00:31:01,159
be<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to see but that other</font><font color="#E5E5E5"> devices</font>

787
00:30:59,570 --> 00:31:03,918
implementing other chipsets would be

788
00:31:01,160 --> 00:31:05,450
<font color="#E5E5E5">blind too so you know with this</font>

789
00:31:03,919 --> 00:31:06,919
<font color="#CCCCCC">knowledge</font><font color="#E5E5E5"> of how the physical physical</font>

790
00:31:05,450 --> 00:31:09,770
layer state machine works we can begin

791
00:31:06,919 --> 00:31:11,419
<font color="#CCCCCC">to fingerprint and in apply these</font>

792
00:31:09,770 --> 00:31:14,110
fingerprints<font color="#E5E5E5"> to different attacks that</font>

793
00:31:11,419 --> 00:31:14,110
we may want to<font color="#E5E5E5"> pursue</font>

794
00:31:17,840 --> 00:31:23,459
here's our<font color="#CCCCCC"> back back</font><font color="#E5E5E5"> up slide in case</font>

795
00:31:20,610 --> 00:31:26,850
that<font color="#E5E5E5"> didn't work</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I'm yeah just just</font>

796
00:31:23,460 --> 00:31:27,990
<font color="#CCCCCC">to recap</font><font color="#E5E5E5"> with knowledge of how these</font>

797
00:31:26,850 --> 00:31:29,820
state machines work and the<font color="#E5E5E5"> ability to</font>

798
00:31:27,990 --> 00:31:31,740
conduct<font color="#E5E5E5"> this sort of fingerprinting we</font>

799
00:31:29,820 --> 00:31:33,710
can do things like evade<font color="#E5E5E5"> wireless</font>

800
00:31:31,740 --> 00:31:37,500
intrusion detection systems we can evade

801
00:31:33,710 --> 00:31:39,679
<font color="#CCCCCC">you know any sort of</font><font color="#E5E5E5"> a you know tested</font>

802
00:31:37,500 --> 00:31:41,370
detection apparatus<font color="#E5E5E5"> and then we can do</font>

803
00:31:39,679 --> 00:31:44,580
<font color="#CCCCCC">selective targeting</font><font color="#E5E5E5"> at different</font>

804
00:31:41,370 --> 00:31:46,139
chipsets so as we said we're<font color="#E5E5E5"> gonna put</font>

805
00:31:44,580 --> 00:31:49,949
this up on<font color="#E5E5E5"> github it'll be</font><font color="#CCCCCC"> at River</font>

806
00:31:46,140 --> 00:31:51,630
<font color="#CCCCCC">loops SEC</font><font color="#E5E5E5"> slash tumble RF and I will</font>

807
00:31:49,950 --> 00:31:52,919
push it<font color="#E5E5E5"> the repos there so you know you</font>

808
00:31:51,630 --> 00:31:55,830
got the right<font color="#CCCCCC"> place I'll push it right</font>

809
00:31:52,919 --> 00:31:57,299
after<font color="#E5E5E5"> the talk</font><font color="#CCCCCC"> we would</font><font color="#E5E5E5"> love that the</font>

810
00:31:55,830 --> 00:31:59,100
point of this<font color="#E5E5E5"> and why we spent so much</font>

811
00:31:57,299 --> 00:32:01,710
time<font color="#CCCCCC"> developing it to make it something</font>

812
00:31:59,100 --> 00:32:03,750
that<font color="#E5E5E5"> is extensible is because we want</font>

813
00:32:01,710 --> 00:32:06,570
contributions not just for marks but

814
00:32:03,750 --> 00:32:08,309
from the rest of<font color="#E5E5E5"> you as well so you</font><font color="#CCCCCC"> do</font>

815
00:32:06,570 --> 00:32:10,559
not need to have a<font color="#E5E5E5"> radio interface to</font>

816
00:32:08,309 --> 00:32:11,879
contribute right you could add a new

817
00:32:10,559 --> 00:32:14,460
interface you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> for your favorite</font>

818
00:32:11,880 --> 00:32:17,610
radio<font color="#E5E5E5"> but you could also add a harness</font>

819
00:32:14,460 --> 00:32:19,679
<font color="#CCCCCC">to check the state of</font><font color="#E5E5E5"> a target you could</font>

820
00:32:17,610 --> 00:32:21,299
add a generator to<font color="#E5E5E5"> just brainstorm</font><font color="#CCCCCC"> a new</font>

821
00:32:19,679 --> 00:32:23,460
concept<font color="#CCCCCC"> that you want to see how it</font>

822
00:32:21,299 --> 00:32:25,260
comes<font color="#CCCCCC"> out</font><font color="#E5E5E5"> and we will do our best</font><font color="#CCCCCC"> to run</font>

823
00:32:23,460 --> 00:32:29,370
<font color="#E5E5E5">those for you if you don't have the</font>

824
00:32:25,260 --> 00:32:31,260
radio gear to set up and we ask<font color="#E5E5E5"> that you</font>

825
00:32:29,370 --> 00:32:33,120
know also<font color="#E5E5E5"> there's a few things in the</font>

826
00:32:31,260 --> 00:32:35,908
code you'll<font color="#CCCCCC"> see some two deuce</font><font color="#E5E5E5"> if you</font>

827
00:32:33,120 --> 00:32:38,639
want<font color="#E5E5E5"> to help me out I'd</font><font color="#CCCCCC"> appreciate it on</font>

828
00:32:35,909 --> 00:32:40,350
<font color="#CCCCCC">that</font><font color="#E5E5E5"> so some</font><font color="#CCCCCC"> of the dynamic plug-in</font>

829
00:32:38,640 --> 00:32:43,080
loading is pretty flexible but it can be

830
00:32:40,350 --> 00:32:45,799
impaired so we<font color="#CCCCCC"> wanted to give a big</font>

831
00:32:43,080 --> 00:32:47,970
THANK YOU to troopers in the<font color="#CCCCCC"> erw crew</font>

832
00:32:45,799 --> 00:32:50,760
everyone who helps make this this

833
00:32:47,970 --> 00:32:52,440
conference possible<font color="#CCCCCC"> I I say it with true</font>

834
00:32:50,760 --> 00:32:54,480
sincerity<font color="#E5E5E5"> I think Matt does as well this</font>

835
00:32:52,440 --> 00:32:56,909
<font color="#E5E5E5">is one</font><font color="#CCCCCC"> of our</font><font color="#E5E5E5"> favorite conferences in</font>

836
00:32:54,480 --> 00:32:59,460
<font color="#CCCCCC">the</font><font color="#E5E5E5"> world and</font><font color="#CCCCCC"> also to the people who let</font>

837
00:32:56,909 --> 00:33:01,890
us not work for a<font color="#E5E5E5"> week or a</font><font color="#CCCCCC"> few weeks</font><font color="#E5E5E5"> on</font>

838
00:32:59,460 --> 00:33:03,750
<font color="#CCCCCC">paying</font><font color="#E5E5E5"> things and</font><font color="#CCCCCC"> instead get</font><font color="#E5E5E5"> to to</font>

839
00:33:01,890 --> 00:33:05,930
program this yeah I only have myself<font color="#E5E5E5"> to</font>

840
00:33:03,750 --> 00:33:08,310
thank for that<font color="#E5E5E5"> so yeah</font>

841
00:33:05,930 --> 00:33:10,710
those are my<font color="#E5E5E5"> thank-yous Matt thanks</font>

842
00:33:08,310 --> 00:33:13,320
himself<font color="#E5E5E5"> we appreciate him taking time</font>

843
00:33:10,710 --> 00:33:16,170
off<font color="#E5E5E5"> to</font><font color="#CCCCCC"> to write this presentation</font><font color="#E5E5E5"> it was</font>

844
00:33:13,320 --> 00:33:20,300
<font color="#E5E5E5">a little drastic but it's all good</font><font color="#CCCCCC"> so</font>

845
00:33:16,170 --> 00:33:20,300
yeah<font color="#E5E5E5"> we're happy to take your questions</font>

846
00:33:26,600 --> 00:33:32,600
questions from draw lots of<font color="#E5E5E5"> quit lots of</font>

847
00:33:30,840 --> 00:33:34,649
questions from the front row

848
00:33:32,600 --> 00:33:36,510
excellent<font color="#CCCCCC"> yeah what</font><font color="#E5E5E5"> we'll just pass it</font>

849
00:33:34,650 --> 00:33:38,340
back<font color="#E5E5E5"> and</font><font color="#CCCCCC"> forward you don't have places</font>

850
00:33:36,510 --> 00:33:40,470
to be do you<font color="#E5E5E5"> the sound technician can</font>

851
00:33:38,340 --> 00:33:42,959
shut it<font color="#E5E5E5"> off</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> to have a question</font>

852
00:33:40,470 --> 00:33:48,000
<font color="#CCCCCC">about case 8 here okay</font><font color="#E5E5E5"> like isn't Casey</font>

853
00:33:42,960 --> 00:33:52,710
<font color="#E5E5E5">a valid pocket yes</font><font color="#CCCCCC"> no case 9</font><font color="#E5E5E5"> is a valid</font>

854
00:33:48,000 --> 00:33:55,110
packet<font color="#CCCCCC"> um case no case cases</font><font color="#E5E5E5"> develop</font>

855
00:33:52,710 --> 00:33:57,299
pocket<font color="#E5E5E5"> so so on all three sets of</font>

856
00:33:55,110 --> 00:33:58,139
results<font color="#E5E5E5"> you had like invalid reception</font>

857
00:33:57,299 --> 00:34:00,270
<font color="#E5E5E5">on</font><font color="#CCCCCC"> yes</font>

858
00:33:58,140 --> 00:34:02,010
case<font color="#CCCCCC"> eight which is</font><font color="#E5E5E5"> valid</font><font color="#CCCCCC"> packet</font><font color="#E5E5E5"> right</font>

859
00:34:00,270 --> 00:34:04,620
so is that<font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the reasons you have</font>

860
00:34:02,010 --> 00:34:06,360
to run it multiple times<font color="#E5E5E5"> like what</font><font color="#CCCCCC"> there</font>

861
00:34:04,620 --> 00:34:08,098
<font color="#CCCCCC">you're saying</font><font color="#E5E5E5"> like both negative</font><font color="#CCCCCC"> yeah</font>

862
00:34:06,360 --> 00:34:10,618
we're probably getting just a frame loss

863
00:34:08,099 --> 00:34:12,599
or a<font color="#CCCCCC"> corruption or something on it are</font>

864
00:34:10,619 --> 00:34:14,639
RF being a lossy interface means<font color="#E5E5E5"> that</font>

865
00:34:12,599 --> 00:34:16,080
<font color="#E5E5E5">that there's going to be contention in</font>

866
00:34:14,639 --> 00:34:17,940
collision<font color="#E5E5E5"> especially in a protocol</font><font color="#CCCCCC"> like</font>

867
00:34:16,080 --> 00:34:19,980
<font color="#CCCCCC">fifteen for that lives in what's called</font>

868
00:34:17,940 --> 00:34:22,168
<font color="#E5E5E5">an</font><font color="#CCCCCC"> ASM band it's the same by</font><font color="#E5E5E5"> the same</font>

869
00:34:19,980 --> 00:34:23,490
band that the Wi-Fi uses so there's<font color="#E5E5E5"> in</font>

870
00:34:22,168 --> 00:34:26,270
<font color="#E5E5E5">Bluetooth so there's lots of other stuff</font>

871
00:34:23,489 --> 00:34:29,089
<font color="#CCCCCC">that can interfere with your signals and</font>

872
00:34:26,270 --> 00:34:31,469
<font color="#CCCCCC">cause your cousin to have a bad</font><font color="#E5E5E5"> day</font><font color="#CCCCCC"> so</font>

873
00:34:29,090 --> 00:34:33,389
<font color="#CCCCCC">typically in applications you have</font>

874
00:34:31,469 --> 00:34:35,040
things like<font color="#E5E5E5"> you know check sums and</font>

875
00:34:33,389 --> 00:34:36,359
acknowledgments and in you know

876
00:34:35,040 --> 00:34:38,940
automatic retries things like that

877
00:34:36,359 --> 00:34:41,699
<font color="#CCCCCC">built-in to to get around that so it's</font>

878
00:34:38,940 --> 00:34:42,929
all it's it's all invisible<font color="#E5E5E5"> but uh but</font>

879
00:34:41,699 --> 00:34:45,118
here we want<font color="#CCCCCC"> to build up a large enough</font>

880
00:34:42,929 --> 00:34:47,339
sample<font color="#E5E5E5"> sample size that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can you know</font>

881
00:34:45,119 --> 00:34:49,560
a get around<font color="#CCCCCC"> miss frames like that and</font>

882
00:34:47,339 --> 00:34:51,659
be<font color="#E5E5E5"> also determine if there's any sort of</font>

883
00:34:49,560 --> 00:34:53,489
you know selectivity or sensitivity to

884
00:34:51,659 --> 00:34:54,990
any of these<font color="#E5E5E5"> cases I think there's one</font>

885
00:34:53,489 --> 00:34:58,470
<font color="#E5E5E5">we can talk about here yeah</font><font color="#CCCCCC"> actually so</font>

886
00:34:54,989 --> 00:35:01,439
if you look at the CC<font color="#CCCCCC"> 2531 results there</font>

887
00:34:58,470 --> 00:35:03,899
you'll see case<font color="#CCCCCC"> 213 were valid</font><font color="#E5E5E5"> in 37</font>

888
00:35:01,440 --> 00:35:05,910
were invalid<font color="#E5E5E5"> so that's a case that that</font>

889
00:35:03,900 --> 00:35:07,380
you know we can we can you know<font color="#E5E5E5"> pause it</font>

890
00:35:05,910 --> 00:35:09,779
is right on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> margin of what that</font>

891
00:35:07,380 --> 00:35:11,609
radios will in tolerate so you know if

892
00:35:09,780 --> 00:35:13,260
it happened to you<font color="#CCCCCC"> know be in</font><font color="#E5E5E5"> a state or</font>

893
00:35:11,609 --> 00:35:14,819
<font color="#E5E5E5">maybe a couple you know symbols just</font>

894
00:35:13,260 --> 00:35:17,010
<font color="#CCCCCC">happen</font><font color="#E5E5E5"> to be in</font><font color="#CCCCCC"> the being that that</font>

895
00:35:14,820 --> 00:35:18,540
<font color="#E5E5E5">shift register before we sent</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> short</font>

896
00:35:17,010 --> 00:35:21,240
<font color="#CCCCCC">short preamble that</font><font color="#E5E5E5"> got its got the</font>

897
00:35:18,540 --> 00:35:22,619
trigger<font color="#CCCCCC"> by</font><font color="#E5E5E5"> increasing our you know</font>

898
00:35:21,240 --> 00:35:26,220
sample size and doing lots<font color="#CCCCCC"> of iterations</font>

899
00:35:22,619 --> 00:35:27,750
<font color="#E5E5E5">we can begin to just get generally</font>

900
00:35:26,220 --> 00:35:29,279
better results<font color="#E5E5E5"> and more insight into</font>

901
00:35:27,750 --> 00:35:31,400
into how sensitive<font color="#E5E5E5"> is to Kate these</font>

902
00:35:29,280 --> 00:35:35,549
cases are

903
00:35:31,400 --> 00:35:36,930
to answer<font color="#E5E5E5"> your question cool and well we</font>

904
00:35:35,549 --> 00:35:39,780
<font color="#E5E5E5">take your questions</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> just gonna gonna</font>

905
00:35:36,930 --> 00:35:42,270
run more results<font color="#E5E5E5"> I'm just curious if</font>

906
00:35:39,780 --> 00:35:45,180
there's a like a<font color="#CCCCCC"> general abstraction for</font>

907
00:35:42,270 --> 00:35:48,390
speaking to an SDR or if that<font color="#E5E5E5"> needs to</font>

908
00:35:45,180 --> 00:35:50,730
<font color="#CCCCCC">be implemented</font><font color="#E5E5E5"> per protocol or how that</font>

909
00:35:48,390 --> 00:35:52,319
<font color="#E5E5E5">works yes so it's it's not too</font><font color="#CCCCCC"> generic</font>

910
00:35:50,730 --> 00:35:54,750
but it is built within<font color="#CCCCCC"> the that</font>

911
00:35:52,319 --> 00:35:57,180
interface<font color="#CCCCCC"> framework so what I've</font><font color="#E5E5E5"> done is</font>

912
00:35:54,750 --> 00:36:00,630
<font color="#CCCCCC">I I mentioned I modified that that I</font>

913
00:35:57,180 --> 00:36:02,368
<font color="#CCCCCC">triple IDO to 15 for flow graph I</font>

914
00:36:00,630 --> 00:36:03,809
bypassed<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and then you</font>

915
00:36:02,369 --> 00:36:05,760
<font color="#CCCCCC">auto-generated the can you radio Python</font>

916
00:36:03,809 --> 00:36:08,760
and then once you have<font color="#CCCCCC"> that that's super</font>

917
00:36:05,760 --> 00:36:12,030
<font color="#CCCCCC">easy to hook into</font><font color="#E5E5E5"> just make a socket and</font>

918
00:36:08,760 --> 00:36:14,190
<font color="#CCCCCC">write to it to drive it</font><font color="#E5E5E5"> that way</font><font color="#CCCCCC"> so we</font>

919
00:36:12,030 --> 00:36:17,069
don't<font color="#CCCCCC"> have like a generic</font><font color="#E5E5E5"> like there's</font>

920
00:36:14,190 --> 00:36:18,869
no<font color="#E5E5E5"> like Guinea radio you know module or</font>

921
00:36:17,069 --> 00:36:20,250
can you radio<font color="#E5E5E5"> you know block for for</font>

922
00:36:18,869 --> 00:36:21,839
<font color="#E5E5E5">doing something like that like this but</font>

923
00:36:20,250 --> 00:36:24,329
it should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> easy to script up</font>

924
00:36:21,839 --> 00:36:25,890
<font color="#CCCCCC">accessing and for by layer stuff being</font>

925
00:36:24,329 --> 00:36:28,740
<font color="#E5E5E5">able to say I want to use this</font>

926
00:36:25,890 --> 00:36:31,470
<font color="#E5E5E5">modulation and then input this bit</font>

927
00:36:28,740 --> 00:36:33,660
stream into it<font color="#E5E5E5"> pretty useful sounds like</font>

928
00:36:31,470 --> 00:36:35,490
a great pull request<font color="#E5E5E5"> mark look forward</font>

929
00:36:33,660 --> 00:36:40,339
to your contribution<font color="#E5E5E5"> I'll get right on</font>

930
00:36:35,490 --> 00:36:40,339
<font color="#CCCCCC">that anyone else</font>

931
00:36:41,380 --> 00:36:44,380
questions

932
00:36:47,130 --> 00:36:50,490
I mean this<font color="#E5E5E5"> can keep</font><font color="#CCCCCC"> going for a</font><font color="#E5E5E5"> while</font>

933
00:36:48,990 --> 00:36:52,200
so I'd at least<font color="#CCCCCC"> suggest you ask</font>

934
00:36:50,490 --> 00:36:54,779
questions<font color="#CCCCCC"> cuz we're</font><font color="#E5E5E5"> just gonna wait till</font>

935
00:36:52,200 --> 00:36:56,370
time runs out showing<font color="#CCCCCC"> you packets there</font>

936
00:36:54,780 --> 00:37:01,860
we go<font color="#CCCCCC"> Emily</font><font color="#E5E5E5"> decided it was a</font><font color="#CCCCCC"> good idea</font>

937
00:36:56,370 --> 00:37:03,569
<font color="#E5E5E5">yeah and maybe after these fun we can</font>

938
00:37:01,860 --> 00:37:05,720
switch to<font color="#E5E5E5"> one of the other cases yeah</font>

939
00:37:03,570 --> 00:37:07,710
sure

940
00:37:05,720 --> 00:37:11,669
actually why<font color="#CCCCCC"> don't I do that</font><font color="#E5E5E5"> now I mean</font>

941
00:37:07,710 --> 00:37:15,540
this<font color="#E5E5E5"> this yeah</font><font color="#CCCCCC"> so before you before</font><font color="#E5E5E5"> you</font>

942
00:37:11,670 --> 00:37:17,670
ask<font color="#E5E5E5"> your question</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> well we answer it</font>

943
00:37:15,540 --> 00:37:19,740
<font color="#E5E5E5">I'm gonna start up the the Franconia</font>

944
00:37:17,670 --> 00:37:24,480
Notch generator<font color="#E5E5E5"> what that's going to do</font>

945
00:37:19,740 --> 00:37:28,200
is that's<font color="#E5E5E5"> going to insert</font><font color="#CCCCCC"> non zero</font>

946
00:37:24,480 --> 00:37:29,520
valued symbols into the preamble so in

947
00:37:28,200 --> 00:37:31,200
this case it's going<font color="#E5E5E5"> to begin to add in</font>

948
00:37:29,520 --> 00:37:32,940
<font color="#CCCCCC">just a bunch of s the important thing is</font>

949
00:37:31,200 --> 00:37:35,490
that<font color="#CCCCCC"> there it's</font><font color="#E5E5E5"> not the pattern</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

950
00:37:32,940 --> 00:37:36,780
shift register<font color="#CCCCCC"> is looking for</font><font color="#E5E5E5"> so it's</font>

951
00:37:35,490 --> 00:37:39,959
going to<font color="#E5E5E5"> generate a whole bunch of whole</font>

952
00:37:36,780 --> 00:37:42,420
bunch<font color="#E5E5E5"> of preambles with that that are</font>

953
00:37:39,960 --> 00:37:45,780
not compliant and we'll see if the radio

954
00:37:42,420 --> 00:37:49,080
is able to compensate<font color="#E5E5E5"> no it's my turn</font>

955
00:37:45,780 --> 00:37:53,540
<font color="#CCCCCC">okay and</font><font color="#E5E5E5"> I have a question regarding</font>

956
00:37:49,080 --> 00:37:57,990
this<font color="#E5E5E5"> the bit error rate during the</font>

957
00:37:53,540 --> 00:38:00,930
preamble<font color="#E5E5E5"> phase and some chips that it is</font>

958
00:37:57,990 --> 00:38:02,720
allowed to<font color="#E5E5E5"> have that</font><font color="#CCCCCC"> as a parameter so</font>

959
00:38:00,930 --> 00:38:05,819
wouldn't<font color="#CCCCCC"> that render</font><font color="#E5E5E5"> your measurements</font>

960
00:38:02,720 --> 00:38:08,819
<font color="#E5E5E5">bit useless if you can change this on</font>

961
00:38:05,820 --> 00:38:12,210
the firmware side there<font color="#CCCCCC"> are some tips</font>

962
00:38:08,820 --> 00:38:14,210
<font color="#E5E5E5">that specifically the</font><font color="#CCCCCC"> cccc 2420 the</font>

963
00:38:12,210 --> 00:38:18,030
first one here that allows you<font color="#E5E5E5"> to change</font>

964
00:38:14,210 --> 00:38:19,590
the<font color="#E5E5E5"> required length of the preamble</font><font color="#CCCCCC"> are</font>

965
00:38:18,030 --> 00:38:22,320
there ones that allow you<font color="#E5E5E5"> to change the</font>

966
00:38:19,590 --> 00:38:24,690
the code word mapping yes so the CC<font color="#CCCCCC"> 2420</font>

967
00:38:22,320 --> 00:38:28,590
you can change the sync<font color="#E5E5E5"> word think way</font>

968
00:38:24,690 --> 00:38:31,120
but yeah oh and<font color="#E5E5E5"> check back and check</font>

969
00:38:28,590 --> 00:38:34,010
back in a<font color="#E5E5E5"> few weeks</font><font color="#CCCCCC"> but the</font>

970
00:38:31,120 --> 00:38:35,690
the you know<font color="#E5E5E5"> you're absolutely</font><font color="#CCCCCC"> right</font>

971
00:38:34,010 --> 00:38:37,280
<font color="#CCCCCC">that there</font><font color="#E5E5E5"> are definitely parameters and</font>

972
00:38:35,690 --> 00:38:39,770
knobs that radios can you know

973
00:38:37,280 --> 00:38:41,030
developers can can turn to to<font color="#E5E5E5"> change the</font>

974
00:38:39,770 --> 00:38:43,670
way that<font color="#E5E5E5"> the radio state machine works</font>

975
00:38:41,030 --> 00:38:45,500
<font color="#E5E5E5">but the I think the the</font><font color="#CCCCCC"> answer to that</font>

976
00:38:43,670 --> 00:38:48,020
<font color="#E5E5E5">is that those are all things that</font><font color="#CCCCCC"> can be</font>

977
00:38:45,500 --> 00:38:50,150
fingerprinted<font color="#CCCCCC"> so you know you can make</font>

978
00:38:48,020 --> 00:38:51,350
some inferences about<font color="#E5E5E5"> the chipset but</font>

979
00:38:50,150 --> 00:38:52,310
<font color="#CCCCCC">then say if you have a device</font><font color="#E5E5E5"> that</font>

980
00:38:51,350 --> 00:38:54,770
<font color="#E5E5E5">you're going after</font>

981
00:38:52,310 --> 00:38:56,630
you can fingerprint<font color="#CCCCCC"> you can fingerprint</font>

982
00:38:54,770 --> 00:38:58,460
<font color="#E5E5E5">its particular configuration of the</font>

983
00:38:56,630 --> 00:39:01,490
physical layer so<font color="#E5E5E5"> you might say that</font>

984
00:38:58,460 --> 00:39:02,030
<font color="#E5E5E5">like well you know a traffic light</font>

985
00:39:01,490 --> 00:39:04,879
controller

986
00:39:02,030 --> 00:39:06,560
you know uses the radio<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> tune</font>

987
00:39:04,880 --> 00:39:09,320
<font color="#E5E5E5">this way really strictly but maybe my</font>

988
00:39:06,560 --> 00:39:11,360
water meters really lacks<font color="#E5E5E5"> so you can</font>

989
00:39:09,320 --> 00:39:13,550
<font color="#E5E5E5">start to characterize things on the</font>

990
00:39:11,360 --> 00:39:15,350
device<font color="#E5E5E5"> level as well yeah for these</font>

991
00:39:13,550 --> 00:39:16,610
tests we left all of<font color="#E5E5E5"> the radios the</font>

992
00:39:15,350 --> 00:39:19,250
receive radios in their standard

993
00:39:16,610 --> 00:39:21,260
<font color="#E5E5E5">configuration</font><font color="#CCCCCC"> so we're just</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> what</font>

994
00:39:19,250 --> 00:39:23,900
<font color="#CCCCCC">would what would off-the-shelf</font><font color="#E5E5E5"> look like</font>

995
00:39:21,260 --> 00:39:25,580
and I we've seen those registers being

996
00:39:23,900 --> 00:39:28,150
removed on some of the newer radios so

997
00:39:25,580 --> 00:39:30,529
like the<font color="#CCCCCC"> 2531 does</font><font color="#E5E5E5"> not have documented</font>

998
00:39:28,150 --> 00:39:33,760
registers registers to allow you<font color="#E5E5E5"> to make</font>

999
00:39:30,530 --> 00:39:36,650
those<font color="#E5E5E5"> changes</font><font color="#CCCCCC"> same with the Atmel chip</font>

1000
00:39:33,760 --> 00:39:38,780
<font color="#CCCCCC">and we have not</font><font color="#E5E5E5"> found the undocumented</font>

1001
00:39:36,650 --> 00:39:40,250
ones yet so we're not<font color="#CCCCCC"> sure if they're</font>

1002
00:39:38,780 --> 00:39:42,380
there and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> haven't found them or if</font>

1003
00:39:40,250 --> 00:39:43,730
they're not<font color="#E5E5E5"> there all right so we</font><font color="#CCCCCC"> have</font>

1004
00:39:42,380 --> 00:39:44,870
<font color="#CCCCCC">some results from the</font><font color="#E5E5E5"> Frank Franconia</font>

1005
00:39:43,730 --> 00:39:47,210
Notch case that we can talk<font color="#CCCCCC"> about</font>

1006
00:39:44,870 --> 00:39:49,299
briefly so if you look<font color="#E5E5E5"> at case</font><font color="#CCCCCC"> zero here</font>

1007
00:39:47,210 --> 00:39:51,830
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> b compliant</font>

1008
00:39:49,300 --> 00:39:54,260
<font color="#CCCCCC">15 for preamble</font><font color="#E5E5E5"> you see we have we have</font>

1009
00:39:51,830 --> 00:39:56,960
the<font color="#E5E5E5"> four octet</font><font color="#CCCCCC"> sub-zero's followed by</font>

1010
00:39:54,260 --> 00:39:59,120
the the<font color="#CCCCCC"> traditional code word then four</font>

1011
00:39:56,960 --> 00:40:02,170
<font color="#E5E5E5">for subsequent iterations what we're</font>

1012
00:39:59,120 --> 00:40:07,520
doing is we're inserting a non-standard

1013
00:40:02,170 --> 00:40:10,430
preamble symbol<font color="#E5E5E5"> as we go so down</font><font color="#CCCCCC"> at the</font>

1014
00:40:07,520 --> 00:40:12,290
<font color="#E5E5E5">bottom case</font><font color="#CCCCCC"> eight there</font><font color="#E5E5E5"> are no zeros on</font>

1015
00:40:10,430 --> 00:40:14,810
the<font color="#E5E5E5"> preamble it's all just just some</font>

1016
00:40:12,290 --> 00:40:16,340
<font color="#E5E5E5">other symbol so if we look at the</font>

1017
00:40:14,810 --> 00:40:17,540
results<font color="#CCCCCC"> here we see that this Radia is</font>

1018
00:40:16,340 --> 00:40:19,970
actually able<font color="#E5E5E5"> to do pretty well</font><font color="#CCCCCC"> with</font>

1019
00:40:17,540 --> 00:40:23,300
this so the Atmel radio is able to

1020
00:40:19,970 --> 00:40:25,730
detect the case where there are<font color="#E5E5E5"> only two</font>

1021
00:40:23,300 --> 00:40:28,340
<font color="#E5E5E5">zero valued symbols in there to give</font><font color="#CCCCCC"> it</font>

1022
00:40:25,730 --> 00:40:29,780
a you know awareness that<font color="#E5E5E5"> there's a</font>

1023
00:40:28,340 --> 00:40:31,599
packet about<font color="#E5E5E5"> to be received and</font><font color="#CCCCCC"> B the</font>

1024
00:40:29,780 --> 00:40:34,449
clock recovery<font color="#CCCCCC"> information</font>

1025
00:40:31,599 --> 00:40:36,999
so<font color="#CCCCCC"> I'm that's another case where if you</font>

1026
00:40:34,449 --> 00:40:38,769
had a device<font color="#E5E5E5"> that that was on</font><font color="#CCCCCC"> an admiral</font>

1027
00:40:36,999 --> 00:40:41,558
radio versus a TI radio<font color="#E5E5E5"> you could</font>

1028
00:40:38,769 --> 00:40:44,589
<font color="#E5E5E5">implement a you can implement this type</font>

1029
00:40:41,559 --> 00:40:47,380
<font color="#E5E5E5">of state machine to you know do even</font>

1030
00:40:44,589 --> 00:40:50,319
<font color="#E5E5E5">more precise selective targeting you</font>

1031
00:40:47,380 --> 00:40:51,699
want to<font color="#E5E5E5"> do that no I guess you could be</font>

1032
00:40:50,319 --> 00:40:53,769
really risky<font color="#E5E5E5"> and try to run it on</font><font color="#CCCCCC"> the</font>

1033
00:40:51,699 --> 00:40:58,329
<font color="#CCCCCC">other box to show them the other</font><font color="#E5E5E5"> radio</font>

1034
00:40:53,769 --> 00:41:00,069
chip<font color="#CCCCCC"> love which</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> 2051 not probably</font>

1035
00:40:58,329 --> 00:41:01,839
<font color="#E5E5E5">not worth doing life</font><font color="#CCCCCC"> we cannot</font><font color="#E5E5E5"> work</font>

1036
00:41:00,069 --> 00:41:03,489
doing<font color="#E5E5E5"> live</font><font color="#CCCCCC"> but I</font><font color="#E5E5E5"> will take questions</font>

1037
00:41:01,839 --> 00:41:06,839
while we watch Matt crash the system

1038
00:41:03,489 --> 00:41:06,839
<font color="#E5E5E5">it's really it's really finicky I</font>

1039
00:41:09,660 --> 00:41:14,199
actually have two questions<font color="#E5E5E5"> for you</font><font color="#CCCCCC"> how</font>

1040
00:41:12,099 --> 00:41:16,779
<font color="#CCCCCC">distinctive is your Python or</font><font color="#E5E5E5"> DSL</font>

1041
00:41:14,199 --> 00:41:19,809
language in Python<font color="#E5E5E5"> to describe different</font>

1042
00:41:16,779 --> 00:41:23,499
state machines<font color="#E5E5E5"> and the other one is did</font>

1043
00:41:19,809 --> 00:41:26,579
you<font color="#E5E5E5"> ever try like or</font><font color="#CCCCCC"> something similar</font>

1044
00:41:23,499 --> 00:41:31,618
<font color="#CCCCCC">that you listen to</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> the air than</font><font color="#E5E5E5"> you</font>

1045
00:41:26,579 --> 00:41:36,489
logically try to flip<font color="#E5E5E5"> it yeah basically</font>

1046
00:41:31,619 --> 00:41:39,130
<font color="#E5E5E5">dunes or mutations or yeah</font><font color="#CCCCCC"> so for this</font>

1047
00:41:36,489 --> 00:41:41,079
<font color="#E5E5E5">we all answer the second one first we</font>

1048
00:41:39,130 --> 00:41:43,839
have the<font color="#E5E5E5"> generators</font><font color="#CCCCCC"> stubbed out</font>

1049
00:41:41,079 --> 00:41:46,089
expecting to need to do<font color="#E5E5E5"> that to do the</font>

1050
00:41:43,839 --> 00:41:47,828
the<font color="#E5E5E5"> mutation based fuzzing so there's</font>

1051
00:41:46,089 --> 00:41:49,749
<font color="#CCCCCC">places where it can listen on</font><font color="#E5E5E5"> a radio</font>

1052
00:41:47,829 --> 00:41:51,779
and feed in a sample<font color="#E5E5E5"> set and then the</font>

1053
00:41:49,749 --> 00:41:54,569
<font color="#E5E5E5">generator can use that to permute over</font>

1054
00:41:51,779 --> 00:41:57,819
none<font color="#E5E5E5"> of the tests</font><font color="#CCCCCC"> we have in today</font>

1055
00:41:54,569 --> 00:41:59,709
<font color="#CCCCCC">permute off of live radio</font><font color="#E5E5E5"> traffic</font><font color="#CCCCCC"> there</font>

1056
00:41:57,819 --> 00:42:00,969
based off of either<font color="#CCCCCC"> we have one</font><font color="#E5E5E5"> more</font>

1057
00:41:59,709 --> 00:42:03,999
that we haven't<font color="#CCCCCC"> shown that's</font><font color="#E5E5E5"> based off</font>

1058
00:42:00,969 --> 00:42:06,369
of a captured or a base frame<font color="#CCCCCC"> and then</font>

1059
00:42:03,999 --> 00:42:07,749
just<font color="#CCCCCC"> randomizes off of there but</font>

1060
00:42:06,369 --> 00:42:10,509
<font color="#CCCCCC">definitely something</font><font color="#E5E5E5"> could be</font><font color="#CCCCCC"> done in</font>

1061
00:42:07,749 --> 00:42:13,738
<font color="#E5E5E5">something</font><font color="#CCCCCC"> i want</font><font color="#E5E5E5"> to add in test cases</font>

1062
00:42:10,509 --> 00:42:13,739
for<font color="#E5E5E5"> and sorry that</font>

1063
00:42:17,260 --> 00:42:21,700
yes so for<font color="#E5E5E5"> the state machine we don't</font>

1064
00:42:19,480 --> 00:42:25,000
actually try<font color="#CCCCCC"> to model the receive radio</font>

1065
00:42:21,700 --> 00:42:27,129
state machine currently<font color="#E5E5E5"> what we do have</font>

1066
00:42:25,000 --> 00:42:29,109
in our<font color="#E5E5E5"> DSL is inside the generator</font>

1067
00:42:27,130 --> 00:42:33,190
<font color="#E5E5E5">describing how you want to make those</font>

1068
00:42:29,109 --> 00:42:35,680
packets so we are currently<font color="#E5E5E5"> using SCAP</font>

1069
00:42:33,190 --> 00:42:36,880
<font color="#CCCCCC">II to do the you know to describe</font><font color="#E5E5E5"> the</font>

1070
00:42:35,680 --> 00:42:39,299
packet so<font color="#CCCCCC"> that gives us very good</font>

1071
00:42:36,880 --> 00:42:45,940
flexibility so in the 802<font color="#E5E5E5"> 15</font><font color="#CCCCCC"> 4 space</font>

1072
00:42:39,300 --> 00:42:47,680
across zigbee 6lowpan<font color="#CCCCCC"> and 802 802 15 4</font>

1073
00:42:45,940 --> 00:42:53,670
and<font color="#E5E5E5"> should work for</font><font color="#CCCCCC"> i don't</font><font color="#E5E5E5"> think this</font>

1074
00:42:47,680 --> 00:42:57,490
<font color="#CCCCCC">thread implemented on it wait</font><font color="#E5E5E5"> I'm self</font>

1075
00:42:53,670 --> 00:42:59,460
we did not put<font color="#E5E5E5"> any</font><font color="#CCCCCC"> cell in I will defer</font>

1076
00:42:57,490 --> 00:43:02,379
<font color="#CCCCCC">to math if he wants to answer that one</font>

1077
00:42:59,460 --> 00:43:05,080
<font color="#E5E5E5">yeah that'd be pretty interesting</font><font color="#CCCCCC"> that</font>

1078
00:43:02,380 --> 00:43:07,780
would be<font color="#E5E5E5"> a lot more</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> instrument and</font>

1079
00:43:05,080 --> 00:43:09,490
script up than a you know a little

1080
00:43:07,780 --> 00:43:11,350
complexity commodity radio like this<font color="#CCCCCC"> but</font>

1081
00:43:09,490 --> 00:43:14,319
it would be<font color="#E5E5E5"> really</font><font color="#CCCCCC"> interesting yeah</font>

1082
00:43:11,350 --> 00:43:16,868
so my<font color="#E5E5E5"> um the other the other</font><font color="#CCCCCC"> dongles not</font>

1083
00:43:14,320 --> 00:43:21,850
<font color="#E5E5E5">cooperating</font><font color="#CCCCCC"> okay so just</font><font color="#E5E5E5"> just one live</font>

1084
00:43:16,869 --> 00:43:23,859
demo<font color="#CCCCCC"> today - yeah it would</font><font color="#E5E5E5"> be we want to</font>

1085
00:43:21,850 --> 00:43:25,839
add this<font color="#E5E5E5"> I just to answer that one we do</font>

1086
00:43:23,859 --> 00:43:27,069
want to<font color="#E5E5E5"> add on those things on top so I</font>

1087
00:43:25,840 --> 00:43:29,440
<font color="#CCCCCC">think one of the next</font><font color="#E5E5E5"> ones we're gonna</font>

1088
00:43:27,070 --> 00:43:33,040
add was<font color="#CCCCCC"> that Bluetooth</font><font color="#E5E5E5"> probably using</font>

1089
00:43:29,440 --> 00:43:35,940
uber - oh and and RF cat as well<font color="#E5E5E5"> yeah</font>

1090
00:43:33,040 --> 00:43:35,940
we'll make<font color="#E5E5E5"> it our custom</font>

1091
00:43:36,600 --> 00:43:41,279
right now<font color="#E5E5E5"> SCAP is just being</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> to</font>

1092
00:43:38,490 --> 00:43:42,750
build up<font color="#E5E5E5"> these packets actually right</font>

1093
00:43:41,280 --> 00:43:44,280
now it's<font color="#CCCCCC"> just</font><font color="#E5E5E5"> building the</font><font color="#CCCCCC"> Mac layer if</font>

1094
00:43:42,750 --> 00:43:46,650
those<font color="#E5E5E5"> packets so then we're just adding</font>

1095
00:43:44,280 --> 00:43:49,680
<font color="#E5E5E5">on the thigh</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> in the client demos</font>

1096
00:43:46,650 --> 00:43:51,750
yeah<font color="#CCCCCC"> I think the important thing about</font>

1097
00:43:49,680 --> 00:43:54,120
the<font color="#CCCCCC"> architecture is that</font><font color="#E5E5E5"> the way the</font>

1098
00:43:51,750 --> 00:43:57,120
generators are abstracted<font color="#E5E5E5"> you can use</font>

1099
00:43:54,120 --> 00:43:59,339
any fuzzer<font color="#CCCCCC"> any any software fuzzer you</font>

1100
00:43:57,120 --> 00:44:00,779
want including your own fuzzing logic so

1101
00:43:59,340 --> 00:44:04,740
we happen to use<font color="#CCCCCC"> Scotty because it has</font>

1102
00:44:00,780 --> 00:44:07,560
you know<font color="#E5E5E5"> pretty good</font><font color="#CCCCCC"> 15-4 support thanks</font>

1103
00:44:04,740 --> 00:44:09,930
<font color="#E5E5E5">Ryan</font><font color="#CCCCCC"> but if you wanted</font><font color="#E5E5E5"> to say you know</font>

1104
00:44:07,560 --> 00:44:12,810
<font color="#E5E5E5">use peach or any of any other you know</font>

1105
00:44:09,930 --> 00:44:14,520
generate any other fuzzer<font color="#E5E5E5"> you can just</font>

1106
00:44:12,810 --> 00:44:16,529
you know<font color="#E5E5E5"> implement a generator class</font>

1107
00:44:14,520 --> 00:44:18,690
that hooks into<font color="#E5E5E5"> that in the metal and</font>

1108
00:44:16,530 --> 00:44:20,100
then the<font color="#E5E5E5"> framework will handle the</font>

1109
00:44:18,690 --> 00:44:24,330
conversion and management<font color="#E5E5E5"> of that data</font>

1110
00:44:20,100 --> 00:44:25,950
<font color="#E5E5E5">into the radio domain and back yes</font>

1111
00:44:24,330 --> 00:44:28,200
so first<font color="#CCCCCC"> cell you need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> implement a</font>

1112
00:44:25,950 --> 00:44:30,240
harness<font color="#E5E5E5"> as well right to take</font><font color="#CCCCCC"> care to</font>

1113
00:44:28,200 --> 00:44:31,890
<font color="#E5E5E5">capture what's happening right see it</font>

1114
00:44:30,240 --> 00:44:33,419
either<font color="#CCCCCC"> you'd have to say have</font><font color="#E5E5E5"> some</font>

1115
00:44:31,890 --> 00:44:34,650
feedback<font color="#E5E5E5"> mechanism whether it's an</font>

1116
00:44:33,420 --> 00:44:36,870
acknowledgement frame that<font color="#E5E5E5"> you're</font>

1117
00:44:34,650 --> 00:44:38,670
listening<font color="#CCCCCC"> for or something on a base</font>

1118
00:44:36,870 --> 00:44:41,339
station<font color="#CCCCCC"> right</font><font color="#E5E5E5"> if you have a base</font><font color="#CCCCCC"> station</font>

1119
00:44:38,670 --> 00:44:43,110
you can test with<font color="#E5E5E5"> then you'd implement</font>

1120
00:44:41,340 --> 00:44:44,570
the harness on there yeah<font color="#E5E5E5"> you need both</font>

1121
00:44:43,110 --> 00:44:47,220
<font color="#CCCCCC">sides</font>

1122
00:44:44,570 --> 00:44:49,230
yeah the harness<font color="#CCCCCC"> was also pluggable so</font>

1123
00:44:47,220 --> 00:44:51,799
right now we have<font color="#CCCCCC"> the the serial that's</font>

1124
00:44:49,230 --> 00:44:54,060
the<font color="#CCCCCC"> states</font><font color="#E5E5E5"> and then listening for frames</font>

1125
00:44:51,800 --> 00:44:56,280
<font color="#CCCCCC">so I think</font><font color="#E5E5E5"> it would be a question of if</font>

1126
00:44:54,060 --> 00:44:58,560
you want to of how you want<font color="#CCCCCC"> to measure</font>

1127
00:44:56,280 --> 00:45:00,270
<font color="#CCCCCC">success if you use one of</font><font color="#E5E5E5"> those you may</font>

1128
00:44:58,560 --> 00:45:03,900
be able<font color="#E5E5E5"> to use the</font><font color="#CCCCCC"> SSH one on like an</font>

1129
00:45:00,270 --> 00:45:06,960
open BTS system to watch for<font color="#E5E5E5"> things</font>

1130
00:45:03,900 --> 00:45:08,670
coming through<font color="#E5E5E5"> on its side</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> yeah</font>

1131
00:45:06,960 --> 00:45:10,380
<font color="#CCCCCC">that's also a pluggable classified</font><font color="#E5E5E5"> so</font>

1132
00:45:08,670 --> 00:45:12,570
the<font color="#E5E5E5"> SSH arm is</font><font color="#CCCCCC"> just for a little</font><font color="#E5E5E5"> more</font>

1133
00:45:10,380 --> 00:45:14,880
context like you'd be able<font color="#CCCCCC"> to have the</font>

1134
00:45:12,570 --> 00:45:16,440
harness<font color="#CCCCCC"> login to a</font><font color="#E5E5E5"> system like Taylor</font>

1135
00:45:14,880 --> 00:45:17,910
log or<font color="#E5E5E5"> listen on some interface and</font>

1136
00:45:16,440 --> 00:45:20,610
compared against some regex<font color="#E5E5E5"> right and</font>

1137
00:45:17,910 --> 00:45:22,470
then you can make a comparison<font color="#CCCCCC"> over you</font>

1138
00:45:20,610 --> 00:45:24,060
know whether it<font color="#CCCCCC"> functioned properly</font><font color="#E5E5E5"> or</font>

1139
00:45:22,470 --> 00:45:25,709
<font color="#CCCCCC">not based on that</font><font color="#E5E5E5"> and that's all</font>

1140
00:45:24,060 --> 00:45:27,690
scripted<font color="#E5E5E5"> and that's the sort of thing</font>

1141
00:45:25,710 --> 00:45:29,580
that<font color="#E5E5E5"> you could you</font><font color="#CCCCCC"> could take it</font><font color="#E5E5E5"> very</font>

1142
00:45:27,690 --> 00:45:31,140
easily move into<font color="#E5E5E5"> a system like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

1143
00:45:29,580 --> 00:45:32,700
just<font color="#CCCCCC"> have to define what the you</font>

1144
00:45:31,140 --> 00:45:34,589
basically just<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> inherit that and</font>

1145
00:45:32,700 --> 00:45:38,910
then define what<font color="#E5E5E5"> merit success and</font>

1146
00:45:34,590 --> 00:45:41,250
failure in the point of<font color="#CCCCCC"> your system did</font>

1147
00:45:38,910 --> 00:45:43,980
you<font color="#E5E5E5"> ever consider</font><font color="#CCCCCC"> four things and</font><font color="#E5E5E5"> a lock</font>

1148
00:45:41,250 --> 00:45:46,800
part<font color="#E5E5E5"> so</font><font color="#CCCCCC"> to explain what I'm after</font>

1149
00:45:43,980 --> 00:45:48,780
so<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> I was designing for</font><font color="#CCCCCC"> maybe two</font>

1150
00:45:46,800 --> 00:45:51,330
years<font color="#CCCCCC"> a Dakota for</font><font color="#E5E5E5"> pretty simple</font>

1151
00:45:48,780 --> 00:45:53,610
protocol and what<font color="#CCCCCC"> I learned is that</font>

1152
00:45:51,330 --> 00:45:55,950
there are two kinds<font color="#CCCCCC"> of issues that you</font>

1153
00:45:53,610 --> 00:45:58,380
encounter one<font color="#E5E5E5"> is of course</font><font color="#CCCCCC"> on I would</font>

1154
00:45:55,950 --> 00:46:00,359
<font color="#E5E5E5">say the data was the digital</font><font color="#CCCCCC"> layer where</font>

1155
00:45:58,380 --> 00:46:02,700
<font color="#E5E5E5">you have ones where you would expect</font>

1156
00:46:00,360 --> 00:46:04,860
<font color="#E5E5E5">zeros or the other way</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> and the</font>

1157
00:46:02,700 --> 00:46:08,720
<font color="#E5E5E5">other thing is on the analog side you</font>

1158
00:46:04,860 --> 00:46:11,250
can have<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> cheetah</font><font color="#E5E5E5"> frequency</font>

1159
00:46:08,720 --> 00:46:12,509
variations so instability in<font color="#CCCCCC"> the</font>

1160
00:46:11,250 --> 00:46:16,140
frequency and<font color="#E5E5E5"> instability</font><font color="#CCCCCC"> in the</font>

1161
00:46:12,510 --> 00:46:17,300
frequency gives very interesting effects

1162
00:46:16,140 --> 00:46:19,520
in<font color="#CCCCCC"> your</font>

1163
00:46:17,300 --> 00:46:21,200
in the interface to<font color="#CCCCCC"> your state machine</font>

1164
00:46:19,520 --> 00:46:24,950
to<font color="#E5E5E5"> put it that way</font><font color="#CCCCCC"> so I would assume</font>

1165
00:46:21,200 --> 00:46:27,439
<font color="#E5E5E5">that if you start</font><font color="#CCCCCC"> who varies a carrier</font>

1166
00:46:24,950 --> 00:46:29,720
frequency or<font color="#E5E5E5"> a stuff on the analog side</font>

1167
00:46:27,440 --> 00:46:31,790
that should in theory not have any

1168
00:46:29,720 --> 00:46:33,919
<font color="#E5E5E5">impact on</font><font color="#CCCCCC"> Stickle side</font><font color="#E5E5E5"> that you would</font>

1169
00:46:31,790 --> 00:46:37,430
<font color="#E5E5E5">get completely</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> results out</font><font color="#CCCCCC"> of</font>

1170
00:46:33,920 --> 00:46:39,650
almost everything<font color="#CCCCCC"> but at this</font><font color="#E5E5E5"> point well</font>

1171
00:46:37,430 --> 00:46:41,839
I did not look<font color="#E5E5E5"> into</font><font color="#CCCCCC"> fastings are not</font>

1172
00:46:39,650 --> 00:46:44,090
aware of any hardware<font color="#E5E5E5"> that would provide</font>

1173
00:46:41,840 --> 00:46:46,310
as instrumentation<font color="#E5E5E5"> for that but did you</font>

1174
00:46:44,090 --> 00:46:49,250
<font color="#CCCCCC">ever think about</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> anybody else</font>

1175
00:46:46,310 --> 00:46:51,200
yeah so it's a<font color="#CCCCCC"> really interesting</font>

1176
00:46:49,250 --> 00:46:53,869
question<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you're right in the sense</font>

1177
00:46:51,200 --> 00:46:55,069
that you<font color="#E5E5E5"> know instability and things</font>

1178
00:46:53,869 --> 00:46:57,350
like<font color="#CCCCCC"> that can produce drastically</font>

1179
00:46:55,070 --> 00:46:58,610
different results in different<font color="#E5E5E5"> radios</font><font color="#CCCCCC"> if</font>

1180
00:46:57,350 --> 00:46:59,900
you were to<font color="#E5E5E5"> want to implement something</font>

1181
00:46:58,610 --> 00:47:00,770
<font color="#CCCCCC">like that within</font><font color="#E5E5E5"> this framework that's</font>

1182
00:46:59,900 --> 00:47:02,450
the sort of thing that<font color="#E5E5E5"> you could do</font>

1183
00:47:00,770 --> 00:47:05,330
<font color="#E5E5E5">within an interface you would inherit</font>

1184
00:47:02,450 --> 00:47:06,740
<font color="#E5E5E5">the interface and you would have to you</font>

1185
00:47:05,330 --> 00:47:08,660
<font color="#E5E5E5">know</font><font color="#CCCCCC"> basically bring your own radio that</font>

1186
00:47:06,740 --> 00:47:10,250
provided that<font color="#E5E5E5"> sort of exposure</font><font color="#CCCCCC"> and then</font>

1187
00:47:08,660 --> 00:47:12,290
<font color="#E5E5E5">you could you could use the</font><font color="#CCCCCC"> interface</font>

1188
00:47:10,250 --> 00:47:14,060
function to hook it hook<font color="#E5E5E5"> into</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> to</font>

1189
00:47:12,290 --> 00:47:16,580
<font color="#E5E5E5">change those parameters</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if there are</font>

1190
00:47:14,060 --> 00:47:18,560
no<font color="#CCCCCC"> parameters</font><font color="#E5E5E5"> in the default class that</font>

1191
00:47:16,580 --> 00:47:20,450
<font color="#E5E5E5">that suit your use case you can always</font>

1192
00:47:18,560 --> 00:47:22,670
add the hooks to<font color="#E5E5E5"> do that more</font>

1193
00:47:20,450 --> 00:47:23,930
<font color="#CCCCCC">fine-grained</font><font color="#E5E5E5"> control so could could that</font>

1194
00:47:22,670 --> 00:47:25,640
be done<font color="#E5E5E5"> with like a software-defined</font>

1195
00:47:23,930 --> 00:47:27,980
radio they just wouldn't<font color="#E5E5E5"> be able to use</font>

1196
00:47:25,640 --> 00:47:29,420
the same pipeline<font color="#E5E5E5"> exactly yeah so so you</font>

1197
00:47:27,980 --> 00:47:31,790
could you could use the software-defined

1198
00:47:29,420 --> 00:47:33,380
radio to generate a wave form that's

1199
00:47:31,790 --> 00:47:36,109
tweaked<font color="#CCCCCC"> and all sorts of arbitrary and</font>

1200
00:47:33,380 --> 00:47:38,810
<font color="#E5E5E5">you know finite ways</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> to write</font>

1201
00:47:36,109 --> 00:47:40,580
the DSP logic yourself but you wouldn't

1202
00:47:38,810 --> 00:47:42,410
be tied to you know performing functions

1203
00:47:40,580 --> 00:47:44,230
<font color="#E5E5E5">that that a commodity chipset would</font>

1204
00:47:42,410 --> 00:47:48,700
restrict you<font color="#CCCCCC"> to</font>

1205
00:47:44,230 --> 00:47:52,660
so yes maybe<font color="#E5E5E5"> so probably what what I</font>

1206
00:47:48,700 --> 00:47:55,450
would consider was not actually<font color="#E5E5E5"> many</font>

1207
00:47:52,660 --> 00:47:58,660
<font color="#CCCCCC">pull a ting so were way</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> most a</font><font color="#E5E5E5"> TSP</font>

1208
00:47:55,450 --> 00:48:01,240
site but actually manipulating the

1209
00:47:58,660 --> 00:48:04,680
frequency source of the of the whole

1210
00:48:01,240 --> 00:48:08,259
<font color="#CCCCCC">thingy because</font><font color="#E5E5E5"> this would introduce</font>

1211
00:48:04,680 --> 00:48:11,200
<font color="#E5E5E5">effects that are well beyond what</font><font color="#CCCCCC"> I</font>

1212
00:48:08,260 --> 00:48:13,089
<font color="#CCCCCC">could easily do on particular side so</font><font color="#E5E5E5"> I</font>

1213
00:48:11,200 --> 00:48:15,460
<font color="#E5E5E5">maybe discuss this later</font>

1214
00:48:13,089 --> 00:48:16,810
yeah sure be happy<font color="#CCCCCC"> to chat I think you</font>

1215
00:48:15,460 --> 00:48:18,910
know based<font color="#E5E5E5"> on</font><font color="#CCCCCC"> what you're</font><font color="#E5E5E5"> saying I</font><font color="#CCCCCC"> think</font>

1216
00:48:16,810 --> 00:48:20,529
<font color="#E5E5E5">that it would</font><font color="#CCCCCC"> be possible</font><font color="#E5E5E5"> to instrument</font>

1217
00:48:18,910 --> 00:48:23,109
<font color="#E5E5E5">that it's just the generation</font><font color="#CCCCCC"> of the</font>

1218
00:48:20,530 --> 00:48:25,089
<font color="#CCCCCC">waveform</font><font color="#E5E5E5"> would be left up to a radio</font>

1219
00:48:23,109 --> 00:48:27,000
<font color="#CCCCCC">that would be you know hooked up to</font>

1220
00:48:25,089 --> 00:48:29,560
through an interface but not you know

1221
00:48:27,000 --> 00:48:31,450
you know this the framework<font color="#E5E5E5"> doesn't</font>

1222
00:48:29,560 --> 00:48:33,250
provide the<font color="#E5E5E5"> radio it just provides the</font>

1223
00:48:31,450 --> 00:48:34,390
control so if you could provide the

1224
00:48:33,250 --> 00:48:36,130
radio then you could hook it<font color="#E5E5E5"> up to this</font>

1225
00:48:34,390 --> 00:48:38,970
yeah and<font color="#E5E5E5"> we can take in those parameters</font>

1226
00:48:36,130 --> 00:48:45,220
yeah yeah let's talk<font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> after</font><font color="#CCCCCC"> yeah</font>

1227
00:48:38,970 --> 00:48:47,109
any other questions<font color="#E5E5E5"> just</font><font color="#CCCCCC"> one suggestions</font>

1228
00:48:45,220 --> 00:48:49,270
for that you could use a random LAN line

1229
00:48:47,109 --> 00:48:51,098
to generate your randomness for

1230
00:48:49,270 --> 00:48:53,550
frequency variation and the generator

1231
00:48:51,099 --> 00:48:56,790
signal<font color="#E5E5E5"> you are correct you're correct</font>

1232
00:48:53,550 --> 00:48:56,790
<font color="#E5E5E5">thank you sir</font>

1233
00:48:57,270 --> 00:49:04,800
and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> with random</font><font color="#E5E5E5"> it's very good</font>

1234
00:49:00,070 --> 00:49:06,640
random the best random one might say

1235
00:49:04,800 --> 00:49:10,500
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> if there are no more questions</font>

1236
00:49:06,640 --> 00:49:13,658
<font color="#CCCCCC">then thank</font><font color="#E5E5E5"> you</font>

1237
00:49:10,500 --> 00:49:13,659
[Applause]

