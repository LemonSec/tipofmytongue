1
00:00:03,589 --> 00:00:10,079
<font color="#E5E5E5">all right everybody</font><font color="#CCCCCC"> thanks for</font><font color="#E5E5E5"> being</font>

2
00:00:06,509 --> 00:00:14,209
<font color="#CCCCCC">back from</font><font color="#E5E5E5"> lunch</font><font color="#CCCCCC"> next up is Chris</font><font color="#E5E5E5"> he's</font>

3
00:00:10,079 --> 00:00:17,220
going to talk about a new<font color="#CCCCCC"> approach to</font>

4
00:00:14,209 --> 00:00:20,550
<font color="#E5E5E5">analyze dynamically analyze malware on</font>

5
00:00:17,220 --> 00:00:23,549
Android<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> so I</font><font color="#E5E5E5"> don't want to waste</font>

6
00:00:20,550 --> 00:00:26,460
<font color="#E5E5E5">any time and the stage is yours Chris</font>

7
00:00:23,550 --> 00:00:30,990
thanks for in hello everyone how's

8
00:00:26,460 --> 00:00:33,839
everyone doing today<font color="#E5E5E5"> yes good</font><font color="#CCCCCC"> ok so</font><font color="#E5E5E5"> yeah</font>

9
00:00:30,990 --> 00:00:36,059
<font color="#E5E5E5">I know it's just off to lunch</font><font color="#CCCCCC"> so I'll</font>

10
00:00:33,839 --> 00:00:38,248
try<font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep it</font><font color="#CCCCCC"> short and sweet I</font><font color="#E5E5E5"> won't</font>

11
00:00:36,059 --> 00:00:40,379
try and<font color="#CCCCCC"> kill you by death by</font><font color="#E5E5E5"> powerpoints</font>

12
00:00:38,249 --> 00:00:42,719
but let's get<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the point</font>

13
00:00:40,379 --> 00:00:46,998
welcome to my talk<font color="#E5E5E5"> turtle hunting</font>

14
00:00:42,719 --> 00:00:50,909
Android malware<font color="#E5E5E5"> and what Florian said so</font>

15
00:00:46,999 --> 00:00:54,629
Who am<font color="#E5E5E5"> I</font><font color="#CCCCCC"> I am a security engineer by day</font>

16
00:00:50,909 --> 00:00:57,359
at a company called<font color="#E5E5E5"> Heroku</font><font color="#CCCCCC"> that's my</font>

17
00:00:54,629 --> 00:00:59,519
handle<font color="#E5E5E5"> or whatever you can call</font><font color="#CCCCCC"> it that</font>

18
00:00:57,359 --> 00:01:01,589
<font color="#CCCCCC">so you can find me on</font><font color="#E5E5E5"> the interwebs or</font>

19
00:00:59,519 --> 00:01:02,719
the<font color="#CCCCCC"> Saba's</font><font color="#E5E5E5"> you won't find</font><font color="#CCCCCC"> it on any</font>

20
00:01:01,589 --> 00:01:06,030
<font color="#CCCCCC">blockchains</font>

21
00:01:02,719 --> 00:01:09,120
so I'm being sarcastic by the way<font color="#E5E5E5"> so</font>

22
00:01:06,030 --> 00:01:11,580
that's what I do I'm a computer<font color="#E5E5E5"> geek at</font>

23
00:01:09,120 --> 00:01:15,660
heart<font color="#CCCCCC"> I love breaking stuff</font>

24
00:01:11,580 --> 00:01:18,330
I love Android probably for<font color="#E5E5E5"> different</font>

25
00:01:15,660 --> 00:01:23,240
reasons and<font color="#E5E5E5"> most people</font><font color="#CCCCCC"> but enough about</font>

26
00:01:18,330 --> 00:01:25,560
me<font color="#E5E5E5"> but firstly thank you to sense post</font>

27
00:01:23,240 --> 00:01:27,119
<font color="#E5E5E5">who supported me and</font><font color="#CCCCCC"> gave me</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font>

28
00:01:25,560 --> 00:01:29,310
time for the initial stages<font color="#CCCCCC"> of this</font>

29
00:01:27,120 --> 00:01:31,770
research as<font color="#CCCCCC"> to thank you to them and</font>

30
00:01:29,310 --> 00:01:34,790
also thank you to Roku who has continued

31
00:01:31,770 --> 00:01:37,050
to<font color="#E5E5E5"> support</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> with this research and</font>

32
00:01:34,790 --> 00:01:39,610
allowed me to be<font color="#CCCCCC"> a today to</font><font color="#E5E5E5"> share this</font>

33
00:01:37,050 --> 00:01:42,340
all with you so<font color="#E5E5E5"> just some thank is there</font>

34
00:01:39,610 --> 00:01:44,800
so the<font color="#CCCCCC"> ad line</font><font color="#E5E5E5"> I was told that for</font><font color="#CCCCCC"> every</font>

35
00:01:42,340 --> 00:01:46,360
<font color="#E5E5E5">presentation you need</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> slide a just</font>

36
00:01:44,800 --> 00:01:49,810
to remind you what you're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to talk</font>

37
00:01:46,360 --> 00:01:51,370
about<font color="#E5E5E5"> and be so that people can be kind</font>

38
00:01:49,810 --> 00:01:53,380
of<font color="#E5E5E5"> a way what they're going</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> into</font>

39
00:01:51,370 --> 00:01:54,610
now<font color="#CCCCCC"> so that's what we're going to look</font>

40
00:01:53,380 --> 00:01:57,009
at we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to look at a problem</font>

41
00:01:54,610 --> 00:01:59,650
<font color="#CCCCCC">because generally research attempts</font><font color="#E5E5E5"> to</font>

42
00:01:57,010 --> 00:02:02,110
solve some sort of problem<font color="#CCCCCC"> well</font><font color="#E5E5E5"> look at</font>

43
00:01:59,650 --> 00:02:04,030
<font color="#E5E5E5">a question so one question</font><font color="#CCCCCC"> to rule them</font>

44
00:02:02,110 --> 00:02:07,900
all<font color="#CCCCCC"> yes bad joke but we'll get to that</font>

45
00:02:04,030 --> 00:02:10,419
<font color="#E5E5E5">then there was some idea</font><font color="#CCCCCC"> Apoc</font><font color="#E5E5E5"> of</font>

46
00:02:07,900 --> 00:02:13,030
thoughts<font color="#E5E5E5"> results you could call it and</font>

47
00:02:10,419 --> 00:02:15,339
then of<font color="#CCCCCC"> course a conclusion now I must</font>

48
00:02:13,030 --> 00:02:18,220
<font color="#E5E5E5">just warn you in between each of</font><font color="#CCCCCC"> those</font>

49
00:02:15,340 --> 00:02:21,880
<font color="#CCCCCC">points there may be a higher possibility</font>

50
00:02:18,220 --> 00:02:24,040
of lame jokes<font color="#CCCCCC"> lame gifts and really</font>

51
00:02:21,880 --> 00:02:27,160
really<font color="#CCCCCC"> lamer memes</font><font color="#E5E5E5"> so I'm just</font><font color="#CCCCCC"> warning</font>

52
00:02:24,040 --> 00:02:27,730
and giving you a heads up<font color="#E5E5E5"> now what's the</font>

53
00:02:27,160 --> 00:02:31,450
<font color="#E5E5E5">problem</font>

54
00:02:27,730 --> 00:02:33,280
Android malware<font color="#E5E5E5"> Android am</font><font color="#CCCCCC"> i way those</font>

55
00:02:31,450 --> 00:02:36,790
<font color="#E5E5E5">two words are synonymous with each other</font>

56
00:02:33,280 --> 00:02:40,450
just<font color="#E5E5E5"> like sauerkraut</font><font color="#CCCCCC"> and beer</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

57
00:02:36,790 --> 00:02:42,310
<font color="#CCCCCC">appropriate yes No cool so if there's</font>

58
00:02:40,450 --> 00:02:44,738
any<font color="#E5E5E5"> other ones</font><font color="#CCCCCC"> that I should have used</font>

59
00:02:42,310 --> 00:02:47,230
please let me know<font color="#CCCCCC"> because</font><font color="#E5E5E5"> I'm quite</font>

60
00:02:44,739 --> 00:02:50,560
<font color="#E5E5E5">keen on sauerkraut and beer but Android</font>

61
00:02:47,230 --> 00:02:52,420
malware<font color="#E5E5E5"> it's not new this is just from</font>

62
00:02:50,560 --> 00:02:55,060
<font color="#CCCCCC">some recent headlines and we've been</font>

63
00:02:52,420 --> 00:02:58,630
<font color="#E5E5E5">hearing the same</font><font color="#CCCCCC"> old</font><font color="#E5E5E5"> story</font><font color="#CCCCCC"> over and over</font>

64
00:02:55,060 --> 00:03:00,850
<font color="#CCCCCC">and over again</font><font color="#E5E5E5"> and some time ago</font><font color="#CCCCCC"> I saw</font>

65
00:02:58,630 --> 00:03:04,450
this<font color="#E5E5E5"> problem in a different way such</font>

66
00:03:00,850 --> 00:03:07,030
<font color="#CCCCCC">that I wanted</font><font color="#E5E5E5"> to see how easy it was to</font>

67
00:03:04,450 --> 00:03:08,530
make<font color="#CCCCCC"> my own malware so I</font><font color="#E5E5E5"> created a</font>

68
00:03:07,030 --> 00:03:11,830
little tool<font color="#E5E5E5"> called</font><font color="#CCCCCC"> quite sir</font>

69
00:03:08,530 --> 00:03:14,530
and I was sharing<font color="#E5E5E5"> this tool with some</font>

70
00:03:11,830 --> 00:03:16,660
<font color="#E5E5E5">people in the desert in Las Vegas last</font>

71
00:03:14,530 --> 00:03:18,670
<font color="#CCCCCC">year</font><font color="#E5E5E5"> and basically this tool allows</font><font color="#CCCCCC"> you</font>

72
00:03:16,660 --> 00:03:19,810
to backdoor existing Android

73
00:03:18,670 --> 00:03:22,359
applications with<font color="#CCCCCC"> the meterpreter</font>

74
00:03:19,810 --> 00:03:26,200
backdoor<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I want</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> to see how easy</font>

75
00:03:22,360 --> 00:03:29,680
<font color="#E5E5E5">it was to basically evade antivirus for</font>

76
00:03:26,200 --> 00:03:32,130
<font color="#E5E5E5">shit's and gigs and what really stood</font>

77
00:03:29,680 --> 00:03:33,870
out<font color="#CCCCCC"> for me with this research was that</font>

78
00:03:32,130 --> 00:03:36,030
<font color="#CCCCCC">hey this was dog kicking research just</font>

79
00:03:33,870 --> 00:03:38,280
<font color="#E5E5E5">to</font><font color="#CCCCCC"> you know kick a door and get a</font><font color="#E5E5E5"> shot</font>

80
00:03:36,030 --> 00:03:39,930
and majority<font color="#E5E5E5"> of the questions</font><font color="#CCCCCC"> that I</font><font color="#E5E5E5"> was</font>

81
00:03:38,280 --> 00:03:41,880
<font color="#E5E5E5">being asked was hey Chris how do you</font>

82
00:03:39,930 --> 00:03:43,710
bypass the security<font color="#E5E5E5"> mechanism how do you</font>

83
00:03:41,880 --> 00:03:48,049
break out of<font color="#E5E5E5"> the sandbox how do you get</font>

84
00:03:43,710 --> 00:03:50,250
<font color="#CCCCCC">roots and these were the norm for me but</font>

85
00:03:48,050 --> 00:03:52,200
during this time<font color="#CCCCCC"> in Las Vegas there's</font>

86
00:03:50,250 --> 00:03:53,970
one<font color="#E5E5E5"> question that got my</font><font color="#CCCCCC"> attention and</font>

87
00:03:52,200 --> 00:03:58,260
it<font color="#E5E5E5"> was slightly different</font><font color="#CCCCCC"> to all the</font>

88
00:03:53,970 --> 00:04:00,510
rest<font color="#CCCCCC"> so I was asked Chris</font><font color="#E5E5E5"> how do I</font>

89
00:03:58,260 --> 00:04:02,970
protect<font color="#E5E5E5"> my app and myself from these</font>

90
00:04:00,510 --> 00:04:05,130
kinds of<font color="#E5E5E5"> attacks</font><font color="#CCCCCC"> and I thought that is a</font>

91
00:04:02,970 --> 00:04:07,740
really good<font color="#E5E5E5"> question</font><font color="#CCCCCC"> I am a professional</font>

92
00:04:05,130 --> 00:04:09,960
<font color="#E5E5E5">door kicker</font><font color="#CCCCCC"> I do not</font><font color="#E5E5E5"> think about defense</font>

93
00:04:07,740 --> 00:04:12,660
that's not my job which<font color="#E5E5E5"> is typically the</font>

94
00:04:09,960 --> 00:04:16,320
<font color="#E5E5E5">mentality in a lot of</font><font color="#CCCCCC"> pain</font><font color="#E5E5E5"> testing so I</font>

95
00:04:12,660 --> 00:04:17,909
kind of reacted and I said<font color="#E5E5E5"> okay dude</font><font color="#CCCCCC"> we</font>

96
00:04:16,320 --> 00:04:19,890
have to<font color="#CCCCCC"> look at this</font><font color="#E5E5E5"> thing statically so</font>

97
00:04:17,910 --> 00:04:21,570
that apk that<font color="#E5E5E5"> bag of bits we have to</font>

98
00:04:19,890 --> 00:04:23,520
<font color="#E5E5E5">look at that you know do some</font><font color="#CCCCCC"> grep on it</font>

99
00:04:21,570 --> 00:04:25,860
<font color="#E5E5E5">maybe some strings who knows maybe we'll</font>

100
00:04:23,520 --> 00:04:28,049
get<font color="#E5E5E5"> lucky</font><font color="#CCCCCC"> then of course in a sandbox of</font>

101
00:04:25,860 --> 00:04:30,330
<font color="#E5E5E5">sorts</font><font color="#CCCCCC"> so we want to look at how this</font>

102
00:04:28,050 --> 00:04:33,660
<font color="#CCCCCC">thing reacts inside the ecosystem in</font>

103
00:04:30,330 --> 00:04:35,520
<font color="#CCCCCC">which it is targeted for</font><font color="#E5E5E5"> and that</font>

104
00:04:33,660 --> 00:04:38,820
question<font color="#CCCCCC"> got me asking because</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> wasn't</font>

105
00:04:35,520 --> 00:04:40,169
really happy<font color="#CCCCCC"> with my answer and there's</font>

106
00:04:38,820 --> 00:04:43,740
pretty<font color="#E5E5E5"> much on the spot</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I was like</font>

107
00:04:40,170 --> 00:04:45,750
say<font color="#E5E5E5"> something which then led me to</font><font color="#CCCCCC"> look</font>

108
00:04:43,740 --> 00:04:46,950
at<font color="#CCCCCC"> some techniques</font><font color="#E5E5E5"> I want to do</font>

109
00:04:45,750 --> 00:04:49,080
entertain<font color="#E5E5E5"> this question a little bit</font>

110
00:04:46,950 --> 00:04:50,729
<font color="#CCCCCC">more and a lot of these techniques here</font>

111
00:04:49,080 --> 00:04:53,370
aren't necessarily specific to<font color="#E5E5E5"> Android</font>

112
00:04:50,730 --> 00:04:55,380
or<font color="#CCCCCC"> MOBA they tried and tested such as</font>

113
00:04:53,370 --> 00:04:57,420
your hashes and<font color="#E5E5E5"> your code signatures</font>

114
00:04:55,380 --> 00:05:00,870
<font color="#E5E5E5">nothing new it's been</font><font color="#CCCCCC"> around for a while</font>

115
00:04:57,420 --> 00:05:02,070
<font color="#CCCCCC">almost as old as</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> wheel then in</font>

116
00:05:00,870 --> 00:05:04,110
<font color="#E5E5E5">Android specifics</font>

117
00:05:02,070 --> 00:05:07,050
there's the permissions in<font color="#E5E5E5"> the Android</font>

118
00:05:04,110 --> 00:05:08,850
<font color="#E5E5E5">manifest which back in</font><font color="#CCCCCC"> the day if you're</font>

119
00:05:07,050 --> 00:05:10,260
analyzing malware you would<font color="#E5E5E5"> look at the</font>

120
00:05:08,850 --> 00:05:11,820
<font color="#E5E5E5">Android manifest and look at the</font>

121
00:05:10,260 --> 00:05:14,310
<font color="#CCCCCC">permissions and</font><font color="#E5E5E5"> say okay that</font><font color="#CCCCCC"> looks</font>

122
00:05:11,820 --> 00:05:16,110
dodgy<font color="#E5E5E5"> but these days if you compare the</font>

123
00:05:14,310 --> 00:05:18,780
Android manifest<font color="#E5E5E5"> you say I don't know</font>

124
00:05:16,110 --> 00:05:21,450
<font color="#E5E5E5">popular social networking apps and a</font>

125
00:05:18,780 --> 00:05:22,289
malware sample you'll struggle<font color="#E5E5E5"> to tell</font>

126
00:05:21,450 --> 00:05:24,780
the difference

127
00:05:22,290 --> 00:05:26,640
so that technique isn't<font color="#CCCCCC"> as useful as it</font>

128
00:05:24,780 --> 00:05:29,669
used to be then of<font color="#E5E5E5"> course there's</font>

129
00:05:26,640 --> 00:05:31,650
reputation<font color="#E5E5E5"> so for example Bob comes up</font>

130
00:05:29,670 --> 00:05:34,370
to me<font color="#CCCCCC"> and boxes hey Chris I</font><font color="#E5E5E5"> installed</font>

131
00:05:31,650 --> 00:05:37,859
this free torch<font color="#E5E5E5"> app on my</font>

132
00:05:34,370 --> 00:05:41,010
<font color="#E5E5E5">okay but every time I use it my mobile</font>

133
00:05:37,860 --> 00:05:43,500
data really skyrockets<font color="#CCCCCC"> and it keeps on</font>

134
00:05:41,010 --> 00:05:45,419
<font color="#CCCCCC">making this noise and that noise</font><font color="#E5E5E5"> was</font>

135
00:05:43,500 --> 00:05:48,630
supposed to<font color="#E5E5E5"> be the screen shot noise</font><font color="#CCCCCC"> FYI</font>

136
00:05:45,419 --> 00:05:51,299
<font color="#CCCCCC">so I would have stopped Bob</font><font color="#E5E5E5"> already at</font>

137
00:05:48,630 --> 00:05:52,830
free and that<font color="#E5E5E5"> torch app because as you</font>

138
00:05:51,300 --> 00:05:54,930
know if it's<font color="#E5E5E5"> for free you are the</font>

139
00:05:52,830 --> 00:05:56,190
product<font color="#E5E5E5"> but anyway I</font><font color="#CCCCCC"> won't go on a</font>

140
00:05:54,930 --> 00:05:58,500
tangent<font color="#E5E5E5"> about that I'm gonna stick to</font>

141
00:05:56,190 --> 00:06:01,229
<font color="#CCCCCC">the points</font><font color="#E5E5E5"> that were in my slide so</font>

142
00:05:58,500 --> 00:06:02,130
immediately I said well<font color="#E5E5E5"> okay so you got</font>

143
00:06:01,229 --> 00:06:04,440
<font color="#E5E5E5">the app for</font><font color="#CCCCCC"> free</font>

144
00:06:02,130 --> 00:06:05,760
<font color="#CCCCCC">that's a torch</font><font color="#E5E5E5"> app you know you could</font>

145
00:06:04,440 --> 00:06:06,750
have<font color="#E5E5E5"> just</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> your flash but anyway I</font>

146
00:06:05,760 --> 00:06:08,700
won't<font color="#E5E5E5"> go there as well</font>

147
00:06:06,750 --> 00:06:10,530
<font color="#E5E5E5">and in</font><font color="#CCCCCC"> media I would</font><font color="#E5E5E5"> have thought well</font>

148
00:06:08,700 --> 00:06:12,780
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> crunches reputation of these kinds</font>

149
00:06:10,530 --> 00:06:14,969
of apps is for free<font color="#E5E5E5"> as from some dodgy</font>

150
00:06:12,780 --> 00:06:17,460
supply on<font color="#CCCCCC"> the Play</font><font color="#E5E5E5"> Store</font><font color="#CCCCCC"> I should have a</font>

151
00:06:14,970 --> 00:06:20,280
<font color="#E5E5E5">look at it</font><font color="#CCCCCC"> then of</font><font color="#E5E5E5"> course this leads</font><font color="#CCCCCC"> to</font>

152
00:06:17,460 --> 00:06:22,169
behavior why would a torch app one to

153
00:06:20,280 --> 00:06:24,750
use my GPS location why would it be

154
00:06:22,169 --> 00:06:26,580
making<font color="#E5E5E5"> screenshot noises so on and so</font>

155
00:06:24,750 --> 00:06:28,950
forth<font color="#E5E5E5"> so these are some of the common</font>

156
00:06:26,580 --> 00:06:31,948
techniques<font color="#E5E5E5"> that we may use</font><font color="#CCCCCC"> to analyze</font>

157
00:06:28,950 --> 00:06:34,169
<font color="#E5E5E5">some malware samples which is often</font>

158
00:06:31,949 --> 00:06:35,669
<font color="#E5E5E5">integrated with some defenses so I saw</font>

159
00:06:34,169 --> 00:06:36,750
the techniques<font color="#CCCCCC"> and said</font><font color="#E5E5E5"> okay great this</font>

160
00:06:35,669 --> 00:06:39,180
is what we're going<font color="#E5E5E5"> to do to look at</font>

161
00:06:36,750 --> 00:06:41,430
some malware and what are the<font color="#E5E5E5"> defenses</font>

162
00:06:39,180 --> 00:06:43,500
that<font color="#E5E5E5"> are implemented in android</font><font color="#CCCCCC"> so such</font>

163
00:06:41,430 --> 00:06:45,389
as<font color="#E5E5E5"> google pay protect so pretty much an</font>

164
00:06:43,500 --> 00:06:47,840
upgraded version<font color="#CCCCCC"> of</font><font color="#E5E5E5"> android bouncer</font>

165
00:06:45,389 --> 00:06:50,039
anybody ever hear of android bouncer

166
00:06:47,840 --> 00:06:51,419
<font color="#E5E5E5">yeah that's the problem</font><font color="#CCCCCC"> of the android</font>

167
00:06:50,039 --> 00:06:53,669
<font color="#CCCCCC">bounce</font><font color="#E5E5E5"> that only two people</font><font color="#CCCCCC"> know about</font>

168
00:06:51,419 --> 00:06:57,840
it in the room<font color="#E5E5E5"> so that's pretty much</font>

169
00:06:53,669 --> 00:06:59,700
<font color="#E5E5E5">Google</font><font color="#CCCCCC"> Play</font><font color="#E5E5E5"> protect which kind of says</font>

170
00:06:57,840 --> 00:07:01,739
well this app looks dodgy let's send it

171
00:06:59,700 --> 00:07:03,570
<font color="#E5E5E5">to someone</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go and</font><font color="#CCCCCC"> analyze then</font>

172
00:07:01,740 --> 00:07:05,580
there's the Play Store which does<font color="#CCCCCC"> its</font>

173
00:07:03,570 --> 00:07:07,020
kind of verification<font color="#E5E5E5"> mechanisms</font><font color="#CCCCCC"> you have</font>

174
00:07:05,580 --> 00:07:10,169
to have a gmail<font color="#CCCCCC"> account</font><font color="#E5E5E5"> and then your</font>

175
00:07:07,020 --> 00:07:12,430
app goes on the Play<font color="#E5E5E5"> Store cool so</font>

176
00:07:10,169 --> 00:07:13,990
that's<font color="#CCCCCC"> the Google</font><font color="#E5E5E5"> Play Store defense</font>

177
00:07:12,430 --> 00:07:15,640
we didn't have third-party<font color="#CCCCCC"> software my</font>

178
00:07:13,990 --> 00:07:17,770
<font color="#CCCCCC">favorite</font><font color="#E5E5E5"> because I don't like picking on</font>

179
00:07:15,640 --> 00:07:21,190
third-party<font color="#E5E5E5"> software</font><font color="#CCCCCC"> at all</font><font color="#E5E5E5"> you have</font>

180
00:07:17,770 --> 00:07:23,380
<font color="#CCCCCC">antivirus so that stuff you can put</font><font color="#E5E5E5"> on</font>

181
00:07:21,190 --> 00:07:25,630
<font color="#E5E5E5">your phone yes I see the double codes</font>

182
00:07:23,380 --> 00:07:28,090
antivirus<font color="#CCCCCC"> my favorite thing about</font>

183
00:07:25,630 --> 00:07:30,520
Android antivirus is that the<font color="#E5E5E5"> Android</font>

184
00:07:28,090 --> 00:07:33,669
antivirus products are<font color="#E5E5E5"> only as capable</font>

185
00:07:30,520 --> 00:07:36,070
<font color="#E5E5E5">or</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> can only do what</font><font color="#CCCCCC"> the operating</font>

186
00:07:33,670 --> 00:07:38,230
system allows them to do so

187
00:07:36,070 --> 00:07:39,969
when<font color="#E5E5E5"> section not much then of course</font>

188
00:07:38,230 --> 00:07:43,180
there's your mDM's your mam's your<font color="#CCCCCC"> mom's</font>

189
00:07:39,970 --> 00:07:44,500
and those<font color="#CCCCCC"> gloss to acronyms own exist I</font>

190
00:07:43,180 --> 00:07:46,120
just put in there because I fill in the

191
00:07:44,500 --> 00:07:48,220
mobile space<font color="#E5E5E5"> you come up</font><font color="#CCCCCC"> with a</font><font color="#E5E5E5"> fancy</font>

192
00:07:46,120 --> 00:07:49,840
sounding acronym<font color="#E5E5E5"> you slap it on some</font>

193
00:07:48,220 --> 00:07:52,180
mobile<font color="#E5E5E5"> stuff and there you go you at the</font>

194
00:07:49,840 --> 00:07:55,599
<font color="#CCCCCC">next-gen cyber blockchain web our threat</font>

195
00:07:52,180 --> 00:07:57,820
management solutions in point DLP<font color="#CCCCCC"> so</font>

196
00:07:55,600 --> 00:07:59,950
those are some<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> current defenses</font>

197
00:07:57,820 --> 00:08:02,190
and<font color="#E5E5E5"> I looked at this and</font><font color="#CCCCCC"> I thought right</font>

198
00:07:59,950 --> 00:08:04,990
<font color="#E5E5E5">those headlines make a lot of sense now</font>

199
00:08:02,190 --> 00:08:07,380
so what were my frustrations<font color="#E5E5E5"> while</font>

200
00:08:04,990 --> 00:08:10,500
static analysis is hard for me

201
00:08:07,380 --> 00:08:13,630
<font color="#E5E5E5">especially</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> Android you</font><font color="#CCCCCC"> can now see</font>

202
00:08:10,500 --> 00:08:15,460
x86<font color="#E5E5E5"> arm and all its variants of course</font>

203
00:08:13,630 --> 00:08:18,760
you can look<font color="#E5E5E5"> at dalvik</font><font color="#CCCCCC"> op codes if you</font>

204
00:08:15,460 --> 00:08:20,500
are<font color="#E5E5E5"> special in</font><font color="#CCCCCC"> that way which is alright</font>

205
00:08:18,760 --> 00:08:22,539
if<font color="#E5E5E5"> you are I</font><font color="#CCCCCC"> just look at op codes and</font>

206
00:08:20,500 --> 00:08:24,820
that<font color="#E5E5E5"> touch</font><font color="#CCCCCC"> and have not</font><font color="#E5E5E5"> missed then of</font>

207
00:08:22,540 --> 00:08:28,240
<font color="#E5E5E5">course you can have look at</font><font color="#CCCCCC"> girl smiley</font>

208
00:08:24,820 --> 00:08:29,890
which is<font color="#CCCCCC"> fantastic but when looking at</font>

209
00:08:28,240 --> 00:08:32,140
<font color="#CCCCCC">code it's hard enough reading someone</font>

210
00:08:29,890 --> 00:08:34,630
else's code<font color="#E5E5E5"> never mind someone else's</font>

211
00:08:32,140 --> 00:08:35,980
crappy malware code so static analysis

212
00:08:34,630 --> 00:08:38,260
is hard for me

213
00:08:35,980 --> 00:08:39,900
also our<font color="#E5E5E5"> contra and</font><font color="#CCCCCC"> kuku on my phone</font>

214
00:08:38,260 --> 00:08:43,659
<font color="#CCCCCC">I've call</font>

215
00:08:39,900 --> 00:08:44,949
computer says no<font color="#E5E5E5"> yeah yeah</font><font color="#CCCCCC"> I'm glad</font><font color="#E5E5E5"> I'm</font>

216
00:08:43,659 --> 00:08:47,230
getting giggles<font color="#CCCCCC"> in Germany for that</font>

217
00:08:44,950 --> 00:08:49,000
reference<font color="#CCCCCC"> it</font><font color="#E5E5E5"> took me a while after</font>

218
00:08:47,230 --> 00:08:50,830
<font color="#CCCCCC">living</font><font color="#E5E5E5"> in London to actually figure out</font>

219
00:08:49,000 --> 00:08:53,020
when people<font color="#CCCCCC"> said that</font><font color="#E5E5E5"> decide to</font><font color="#CCCCCC"> watch</font>

220
00:08:50,830 --> 00:08:55,960
some British<font color="#E5E5E5"> series and I got it</font>

221
00:08:53,020 --> 00:08:57,730
anyway I'm coming back to<font color="#E5E5E5"> the point so I</font>

222
00:08:55,960 --> 00:08:59,650
can't run cuckoo<font color="#CCCCCC"> on</font><font color="#E5E5E5"> my phone I can't run</font>

223
00:08:57,730 --> 00:09:02,080
all the tools and all<font color="#CCCCCC"> the gadgets</font><font color="#E5E5E5"> that I</font>

224
00:08:59,650 --> 00:09:05,079
have on my<font color="#E5E5E5"> workstation on my phone it</font>

225
00:09:02,080 --> 00:09:06,010
doesn't<font color="#E5E5E5"> compute so this leads to</font>

226
00:09:05,080 --> 00:09:08,080
scalability

227
00:09:06,010 --> 00:09:10,900
<font color="#E5E5E5">I can't deploy ten of</font><font color="#CCCCCC"> meze or ten of</font>

228
00:09:08,080 --> 00:09:14,380
<font color="#E5E5E5">views or</font><font color="#CCCCCC"> hundred of user means to look</font>

229
00:09:10,900 --> 00:09:15,640
<font color="#E5E5E5">at my way it in terms of scalability the</font>

230
00:09:14,380 --> 00:09:17,439
things that we can scale or ineffective

231
00:09:15,640 --> 00:09:20,230
yes you can run a grip<font color="#CCCCCC"> and the strings</font>

232
00:09:17,440 --> 00:09:23,410
and md5 hashes on a big cloud<font color="#E5E5E5"> somewhere</font>

233
00:09:20,230 --> 00:09:25,570
but<font color="#E5E5E5"> that's ineffective then of course</font>

234
00:09:23,410 --> 00:09:28,829
what<font color="#CCCCCC"> if application is on the</font><font color="#E5E5E5"> Play</font><font color="#CCCCCC"> Store</font>

235
00:09:25,570 --> 00:09:31,300
<font color="#CCCCCC">so who here has ever</font><font color="#E5E5E5"> installed an app</font>

236
00:09:28,830 --> 00:09:32,860
from untrusted sources or<font color="#CCCCCC"> enabled</font>

237
00:09:31,300 --> 00:09:35,199
developer<font color="#CCCCCC"> options on their phone yeah</font>

238
00:09:32,860 --> 00:09:36,730
<font color="#E5E5E5">it's it's it's it's like using</font>

239
00:09:35,200 --> 00:09:38,890
PowerShell<font color="#E5E5E5"> on</font><font color="#CCCCCC"> a Windows</font><font color="#E5E5E5"> machine I mean</font>

240
00:09:36,730 --> 00:09:41,260
you know you need<font color="#CCCCCC"> that</font><font color="#E5E5E5"> power</font><font color="#CCCCCC"> option so</font>

241
00:09:38,890 --> 00:09:44,530
if your app if you're<font color="#E5E5E5"> installing apps</font>

242
00:09:41,260 --> 00:09:46,000
not from the Play Store<font color="#CCCCCC"> okay so you're</font>

243
00:09:44,530 --> 00:09:48,310
kind of missing some<font color="#E5E5E5"> of</font><font color="#CCCCCC"> those defenses</font>

244
00:09:46,000 --> 00:09:49,960
<font color="#E5E5E5">there which is necessary and then of</font>

245
00:09:48,310 --> 00:09:53,800
course<font color="#E5E5E5"> as</font><font color="#CCCCCC"> our source on</font><font color="#E5E5E5"> my research</font>

246
00:09:49,960 --> 00:09:56,170
<font color="#E5E5E5">bypassing AVS is too easy</font><font color="#CCCCCC"> if someone is</font>

247
00:09:53,800 --> 00:09:58,930
inclined and<font color="#E5E5E5"> has 30 minutes free account</font>

248
00:09:56,170 --> 00:10:01,300
<font color="#E5E5E5">exaggerating 31 minutes</font><font color="#CCCCCC"> three they can</font>

249
00:09:58,930 --> 00:10:05,949
create<font color="#CCCCCC"> something that av won't detect</font>

250
00:10:01,300 --> 00:10:07,660
<font color="#E5E5E5">and I challenge you to do this so of</font>

251
00:10:05,950 --> 00:10:09,490
course a reference<font color="#E5E5E5"> to one of the</font>

252
00:10:07,660 --> 00:10:11,740
greatest<font color="#E5E5E5"> movies of all time Zoolander</font>

253
00:10:09,490 --> 00:10:14,350
<font color="#E5E5E5">and this is one of my favorite scenes</font>

254
00:10:11,740 --> 00:10:16,600
because<font color="#E5E5E5"> they get told the files are</font><font color="#CCCCCC"> in</font>

255
00:10:14,350 --> 00:10:19,000
the<font color="#E5E5E5"> computer</font><font color="#CCCCCC"> so what</font><font color="#E5E5E5"> do they do they</font>

256
00:10:16,600 --> 00:10:20,290
look for<font color="#E5E5E5"> files in the computer which is</font>

257
00:10:19,000 --> 00:10:22,420
great because I want<font color="#E5E5E5"> to do the same for</font>

258
00:10:20,290 --> 00:10:24,730
<font color="#CCCCCC">malware on my phone and I can't do</font><font color="#E5E5E5"> that</font>

259
00:10:22,420 --> 00:10:27,699
the male is<font color="#E5E5E5"> on my phone</font>

260
00:10:24,730 --> 00:10:29,470
I can't look<font color="#CCCCCC"> and that is extremely</font>

261
00:10:27,699 --> 00:10:33,189
<font color="#CCCCCC">frustrating I don't want to submit</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> to</font>

262
00:10:29,470 --> 00:10:35,829
AV vendors<font color="#E5E5E5"> or you know do an ADB pull</font>

263
00:10:33,190 --> 00:10:40,570
and analyze that<font color="#CCCCCC"> I want to</font><font color="#E5E5E5"> look on my</font>

264
00:10:35,829 --> 00:10:43,239
<font color="#E5E5E5">phone so then I had an idea and this was</font>

265
00:10:40,570 --> 00:10:46,120
not a Eureka moment<font color="#CCCCCC"> I think I was</font><font color="#E5E5E5"> just</font>

266
00:10:43,240 --> 00:10:48,370
eating dinner<font color="#E5E5E5"> at home and I think I was</font>

267
00:10:46,120 --> 00:10:50,829
<font color="#CCCCCC">just rambling to my partner</font><font color="#E5E5E5"> and all of a</font>

268
00:10:48,370 --> 00:10:55,360
sudden<font color="#CCCCCC"> I thought</font><font color="#E5E5E5"> but hold on is heaps of</font>

269
00:10:50,829 --> 00:10:58,719
data<font color="#E5E5E5"> bad joke number two so I knew that</font>

270
00:10:55,360 --> 00:11:01,149
Android apps<font color="#CCCCCC"> make use of objects and</font>

271
00:10:58,720 --> 00:11:03,279
objects<font color="#CCCCCC"> and on the heap</font><font color="#E5E5E5"> and also knew</font>

272
00:11:01,149 --> 00:11:07,000
that<font color="#E5E5E5"> K when it comes to static analysis</font>

273
00:11:03,279 --> 00:11:09,100
input statements are useful but<font color="#CCCCCC"> you can</font>

274
00:11:07,000 --> 00:11:11,470
import<font color="#E5E5E5"> so you can import the string</font>

275
00:11:09,100 --> 00:11:13,870
class<font color="#E5E5E5"> but you're not</font><font color="#CCCCCC"> necessarily going</font>

276
00:11:11,470 --> 00:11:16,240
to<font color="#E5E5E5"> say string mu equals new string so</font>

277
00:11:13,870 --> 00:11:18,910
<font color="#E5E5E5">you can't necessarily infer that kind of</font>

278
00:11:16,240 --> 00:11:22,510
<font color="#E5E5E5">behavior</font><font color="#CCCCCC"> from import</font><font color="#E5E5E5"> statements but I</font>

279
00:11:18,910 --> 00:11:24,069
did know that<font color="#CCCCCC"> if it's instantiated so if</font>

280
00:11:22,510 --> 00:11:27,360
someone has gone through<font color="#E5E5E5"> the effort of</font>

281
00:11:24,070 --> 00:11:30,040
saying string<font color="#E5E5E5"> uber mu equals new string</font>

282
00:11:27,360 --> 00:11:31,990
<font color="#E5E5E5">uber mu is probably going to</font><font color="#CCCCCC"> be used at</font>

283
00:11:30,040 --> 00:11:33,099
<font color="#E5E5E5">some point</font><font color="#CCCCCC"> or it's just going</font><font color="#E5E5E5"> to take up</font>

284
00:11:31,990 --> 00:11:36,430
a whole bunch<font color="#E5E5E5"> of space on the heap just</font>

285
00:11:33,100 --> 00:11:39,040
<font color="#CCCCCC">like the rest</font><font color="#E5E5E5"> of Java so I know that if</font>

286
00:11:36,430 --> 00:11:41,229
it's instantiated<font color="#E5E5E5"> it must have some</font><font color="#CCCCCC"> kind</font>

287
00:11:39,040 --> 00:11:43,439
of data<font color="#E5E5E5"> because I think that's kind of</font>

288
00:11:41,230 --> 00:11:46,480
<font color="#E5E5E5">the point with object-oriented languages</font>

289
00:11:43,440 --> 00:11:48,940
encapsulation<font color="#CCCCCC"> put data in and you query</font>

290
00:11:46,480 --> 00:11:51,790
it so I<font color="#E5E5E5"> figured well if I can look at</font>

291
00:11:48,940 --> 00:11:54,010
these objects<font color="#E5E5E5"> or mark be able to get</font>

292
00:11:51,790 --> 00:11:56,380
some interesting<font color="#E5E5E5"> information</font><font color="#CCCCCC"> they can</font>

293
00:11:54,010 --> 00:11:59,350
<font color="#CCCCCC">help me say</font><font color="#E5E5E5"> no delete off now we can</font>

294
00:11:56,380 --> 00:12:00,639
keep this far<font color="#CCCCCC"> way on so what do</font><font color="#E5E5E5"> we do we</font>

295
00:11:59,350 --> 00:12:03,519
<font color="#E5E5E5">want to read the</font><font color="#CCCCCC"> heap want to read the</font>

296
00:12:00,639 --> 00:12:07,420
memory<font color="#E5E5E5"> the memory so we look at proc</font>

297
00:12:03,519 --> 00:12:09,040
<font color="#CCCCCC">maps prop</font><font color="#E5E5E5"> PRT Maps or proc PID mem sure</font>

298
00:12:07,420 --> 00:12:10,689
but then we can head ourselves for the

299
00:12:09,040 --> 00:12:13,149
next<font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of months going forward and</font>

300
00:12:10,690 --> 00:12:15,310
<font color="#CCCCCC">not see anyone else for a</font><font color="#E5E5E5"> couple of</font>

301
00:12:13,149 --> 00:12:18,519
<font color="#E5E5E5">months locked up in our basements oh we</font>

302
00:12:15,310 --> 00:12:22,239
could dump some HP Roth files and wait<font color="#CCCCCC"> 8</font>

303
00:12:18,519 --> 00:12:23,790
<font color="#CCCCCC">hours for</font><font color="#E5E5E5"> every iteration which led me</font>

304
00:12:22,240 --> 00:12:26,610
to<font color="#CCCCCC"> this response</font>

305
00:12:23,790 --> 00:12:28,620
<font color="#CCCCCC">I had a</font><font color="#E5E5E5"> quiet giggle and maybe a little</font>

306
00:12:26,610 --> 00:12:31,880
cry when I saw how frustrating<font color="#CCCCCC"> that was</font>

307
00:12:28,620 --> 00:12:34,070
and then realized but hold on now

308
00:12:31,880 --> 00:12:36,600
<font color="#E5E5E5">there's this wonderful thing</font><font color="#CCCCCC"> called</font>

309
00:12:34,070 --> 00:12:38,810
<font color="#E5E5E5">instrumentation my instrumentation is</font>

310
00:12:36,600 --> 00:12:40,950
not new it's been<font color="#CCCCCC"> around for some time</font>

311
00:12:38,810 --> 00:12:42,209
<font color="#E5E5E5">but now I'm gonna give a shout out to</font>

312
00:12:40,950 --> 00:12:44,700
the developers and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> maintenance of</font>

313
00:12:42,210 --> 00:12:46,200
<font color="#CCCCCC">Frieda</font><font color="#E5E5E5"> I'm a big fan of open source</font>

314
00:12:44,700 --> 00:12:48,150
<font color="#E5E5E5">software and they really have</font><font color="#CCCCCC"> created a</font>

315
00:12:46,200 --> 00:12:50,340
phenomenal tool if you're<font color="#CCCCCC"> not</font><font color="#E5E5E5"> familiar</font>

316
00:12:48,150 --> 00:12:53,880
with<font color="#E5E5E5"> it</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> highly recommend you play with</font>

317
00:12:50,340 --> 00:12:57,660
<font color="#CCCCCC">it I use</font><font color="#E5E5E5"> it a</font><font color="#CCCCCC"> lot</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Instrumentation</font>

318
00:12:53,880 --> 00:12:59,130
allows us to read objects on the heap<font color="#E5E5E5"> it</font>

319
00:12:57,660 --> 00:13:01,079
can also allow<font color="#E5E5E5"> us to trace calls and</font>

320
00:12:59,130 --> 00:13:02,400
behavior techniques and procedures that

321
00:13:01,080 --> 00:13:03,930
<font color="#E5E5E5">we've been doing</font><font color="#CCCCCC"> in there is in the</font>

322
00:13:02,400 --> 00:13:06,209
reversing<font color="#E5E5E5"> wall for quite some time</font>

323
00:13:03,930 --> 00:13:09,150
if you familiar with<font color="#CCCCCC"> Tsar crypt</font><font color="#E5E5E5"> same</font>

324
00:13:06,210 --> 00:13:12,630
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> thing but they've made it just a</font>

325
00:13:09,150 --> 00:13:14,040
little<font color="#CCCCCC"> bit more easier</font><font color="#E5E5E5"> and this has</font>

326
00:13:12,630 --> 00:13:16,860
allowed us<font color="#E5E5E5"> to have very very very</font>

327
00:13:14,040 --> 00:13:18,780
<font color="#CCCCCC">powerful capability and allows us to</font>

328
00:13:16,860 --> 00:13:20,580
<font color="#E5E5E5">gray</font><font color="#CCCCCC"> to gain great insight into</font>

329
00:13:18,780 --> 00:13:23,240
applications<font color="#E5E5E5"> when you're reversing</font>

330
00:13:20,580 --> 00:13:26,220
applications for me personally the<font color="#CCCCCC"> best</font>

331
00:13:23,240 --> 00:13:27,990
insight is at<font color="#E5E5E5"> runtime</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> only we could</font>

332
00:13:26,220 --> 00:13:29,820
get<font color="#E5E5E5"> a gdb instance and</font><font color="#CCCCCC"> breakpoints on</font>

333
00:13:27,990 --> 00:13:33,360
every single<font color="#E5E5E5"> process that we were</font>

334
00:13:29,820 --> 00:13:35,460
analyzing<font color="#E5E5E5"> instrumentation gives us that</font>

335
00:13:33,360 --> 00:13:37,080
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of capability</font><font color="#CCCCCC"> so it's extremely</font>

336
00:13:35,460 --> 00:13:39,450
<font color="#CCCCCC">powerful and I strongly believe that</font>

337
00:13:37,080 --> 00:13:42,840
<font color="#E5E5E5">runtime inspection is the best action</font>

338
00:13:39,450 --> 00:13:45,810
<font color="#CCCCCC">for example if you like animals and you</font>

339
00:13:42,840 --> 00:13:48,150
want to see a lion<font color="#E5E5E5"> sure you could go to</font>

340
00:13:45,810 --> 00:13:51,270
<font color="#E5E5E5">your nearest Natural History Museum</font><font color="#CCCCCC"> and</font>

341
00:13:48,150 --> 00:13:52,860
see<font color="#CCCCCC"> a dried-out</font><font color="#E5E5E5"> stuffed lion or you</font>

342
00:13:51,270 --> 00:13:55,560
could go<font color="#CCCCCC"> down to</font><font color="#E5E5E5"> Africa and see a lion</font>

343
00:13:52,860 --> 00:13:56,880
in the wild which I highly recommend<font color="#CCCCCC"> so</font>

344
00:13:55,560 --> 00:13:59,579
I think the one in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> wild is is</font>

345
00:13:56,880 --> 00:14:02,640
slightly better<font color="#E5E5E5"> run time action</font><font color="#CCCCCC"> there so</font>

346
00:13:59,580 --> 00:14:05,460
how does I do<font color="#CCCCCC"> the</font><font color="#E5E5E5"> instrumentation and I</font>

347
00:14:02,640 --> 00:14:08,310
thought<font color="#E5E5E5"> wouldn't it</font><font color="#CCCCCC"> be cool if at</font>

348
00:14:05,460 --> 00:14:10,020
runtime<font color="#E5E5E5"> so</font><font color="#CCCCCC"> while this app is running</font><font color="#E5E5E5"> if</font>

349
00:14:08,310 --> 00:14:13,109
I could see<font color="#E5E5E5"> which objects are</font>

350
00:14:10,020 --> 00:14:16,079
instantiated<font color="#CCCCCC"> and what are the</font><font color="#E5E5E5"> values for</font>

351
00:14:13,110 --> 00:14:17,080
<font color="#CCCCCC">these objects</font><font color="#E5E5E5"> and I wanted to know this</font>

352
00:14:16,080 --> 00:14:20,410
because

353
00:14:17,080 --> 00:14:23,250
this would give<font color="#CCCCCC"> me an idea</font><font color="#E5E5E5"> as to what</font><font color="#CCCCCC"> an</font>

354
00:14:20,410 --> 00:14:26,469
application<font color="#CCCCCC"> or process</font><font color="#E5E5E5"> is doing and how</font>

355
00:14:23,250 --> 00:14:31,870
<font color="#E5E5E5">to very pertinent points when</font><font color="#CCCCCC"> it comes</font>

356
00:14:26,470 --> 00:14:34,840
to analyzing<font color="#E5E5E5"> something dodgy for example</font>

357
00:14:31,870 --> 00:14:36,550
if I were<font color="#E5E5E5"> to analyze</font><font color="#CCCCCC"> an application with</font>

358
00:14:34,840 --> 00:14:37,870
a meterpreter<font color="#E5E5E5"> backdoor which I'm sure</font>

359
00:14:36,550 --> 00:14:41,439
<font color="#E5E5E5">you can see where I've got this example</font>

360
00:14:37,870 --> 00:14:44,470
<font color="#E5E5E5">from experience tells me to look for a</font>

361
00:14:41,440 --> 00:14:47,890
class loader<font color="#E5E5E5"> in meterpreter case a dex</font>

362
00:14:44,470 --> 00:14:50,710
<font color="#E5E5E5">class loader and a</font><font color="#CCCCCC"> tcp connection</font><font color="#E5E5E5"> as</font>

363
00:14:47,890 --> 00:14:53,650
there's<font color="#E5E5E5"> only reversed</font><font color="#CCCCCC"> tcp or reverse</font>

364
00:14:50,710 --> 00:14:57,220
<font color="#CCCCCC">HTTP connections enabled which tells me</font>

365
00:14:53,650 --> 00:14:59,829
<font color="#E5E5E5">if I can see something</font><font color="#CCCCCC"> about Dex class</font>

366
00:14:57,220 --> 00:15:02,260
letters or TCP connections this will

367
00:14:59,830 --> 00:15:05,440
tell me<font color="#E5E5E5"> that the application</font><font color="#CCCCCC"> is</font>

368
00:15:02,260 --> 00:15:08,500
injecting code at<font color="#E5E5E5"> runtime and it is</font>

369
00:15:05,440 --> 00:15:10,150
communicating remotely very very simple

370
00:15:08,500 --> 00:15:12,190
example<font color="#CCCCCC"> very</font><font color="#E5E5E5"> effective when you're</font>

371
00:15:10,150 --> 00:15:13,449
looking at an application<font color="#E5E5E5"> because if you</font>

372
00:15:12,190 --> 00:15:15,490
can get this<font color="#CCCCCC"> information about an</font>

373
00:15:13,450 --> 00:15:18,730
application<font color="#E5E5E5"> you can start looking at</font>

374
00:15:15,490 --> 00:15:22,120
some<font color="#CCCCCC"> interesting points</font><font color="#E5E5E5"> to help you so I</font>

375
00:15:18,730 --> 00:15:25,120
don't<font color="#CCCCCC"> like</font><font color="#E5E5E5"> to bore everyone</font><font color="#CCCCCC"> with slides</font>

376
00:15:22,120 --> 00:15:28,000
<font color="#E5E5E5">so we're going to look at some demos and</font>

377
00:15:25,120 --> 00:15:32,200
our first demo is a<font color="#E5E5E5"> simple malware</font>

378
00:15:28,000 --> 00:15:33,790
infection<font color="#E5E5E5"> so what I've done here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> I've</font>

379
00:15:32,200 --> 00:15:36,760
just backed all the latest Twitter

380
00:15:33,790 --> 00:15:39,459
<font color="#E5E5E5">applications for Android this is</font>

381
00:15:36,760 --> 00:15:42,550
the phone on the<font color="#E5E5E5"> right at the Nexus 5</font>

382
00:15:39,460 --> 00:15:44,350
old one I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> you the</font>

383
00:15:42,550 --> 00:15:46,900
research said that it does work<font color="#E5E5E5"> on all</font>

384
00:15:44,350 --> 00:15:49,480
the<font color="#E5E5E5"> devices and new ones as well but</font>

385
00:15:46,900 --> 00:15:52,329
yeah we back toward the latest Twitter

386
00:15:49,480 --> 00:15:53,950
<font color="#CCCCCC">application is running</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> device and</font>

387
00:15:52,330 --> 00:15:56,200
by the way if you're wondering<font color="#E5E5E5"> what I'm</font>

388
00:15:53,950 --> 00:15:57,400
using to emulate<font color="#CCCCCC"> that or what emulating</font>

389
00:15:56,200 --> 00:15:59,620
but to share<font color="#E5E5E5"> the</font><font color="#CCCCCC"> screen</font><font color="#E5E5E5"> it's an app</font>

390
00:15:57,400 --> 00:16:02,050
called<font color="#CCCCCC"> vassal</font><font color="#E5E5E5"> that's really great if</font><font color="#CCCCCC"> you</font>

391
00:15:59,620 --> 00:16:04,540
need<font color="#CCCCCC"> something like that</font><font color="#E5E5E5"> so what we're</font>

392
00:16:02,050 --> 00:16:06,849
<font color="#E5E5E5">going to do now is we</font><font color="#CCCCCC"> have a meterpreter</font>

393
00:16:04,540 --> 00:16:09,790
session on the mobile device through<font color="#E5E5E5"> the</font>

394
00:16:06,850 --> 00:16:11,170
backdoor<font color="#CCCCCC"> twitter</font><font color="#E5E5E5"> application and we're</font>

395
00:16:09,790 --> 00:16:12,969
going<font color="#E5E5E5"> to do some evilness so we're going</font>

396
00:16:11,170 --> 00:16:15,670
<font color="#CCCCCC">to take a screenshot</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> so we have</font>

397
00:16:12,970 --> 00:16:17,350
some malicious app to work with going

398
00:16:15,670 --> 00:16:22,150
<font color="#E5E5E5">forward and then we're going to take</font><font color="#CCCCCC"> a</font>

399
00:16:17,350 --> 00:16:26,110
<font color="#E5E5E5">screenshot and at this point if</font><font color="#CCCCCC"> we think</font>

400
00:16:22,150 --> 00:16:29,040
<font color="#CCCCCC">an application is suspicious or dodgy</font><font color="#E5E5E5"> we</font>

401
00:16:26,110 --> 00:16:32,350
would have to a run some antivirus

402
00:16:29,040 --> 00:16:34,630
antivirus<font color="#E5E5E5"> all we would have to reverse</font>

403
00:16:32,350 --> 00:16:38,140
<font color="#E5E5E5">it</font><font color="#CCCCCC"> now a lot of these things</font><font color="#E5E5E5"> are quite</font>

404
00:16:34,630 --> 00:16:40,780
<font color="#E5E5E5">difficult to do from our device so at</font>

405
00:16:38,140 --> 00:16:43,600
this point we've<font color="#CCCCCC"> got an app and I've get</font>

406
00:16:40,780 --> 00:16:45,760
the<font color="#CCCCCC"> apk</font><font color="#E5E5E5"> and I saw</font><font color="#CCCCCC"> it's reversing a whole</font>

407
00:16:43,600 --> 00:16:49,060
bunch of stuff<font color="#E5E5E5"> I got</font><font color="#CCCCCC"> it open up my</font>

408
00:16:45,760 --> 00:16:51,520
laptop<font color="#CCCCCC"> I've got to get</font><font color="#E5E5E5"> all my tools</font><font color="#CCCCCC"> so</font>

409
00:16:49,060 --> 00:16:53,469
on and so forth<font color="#E5E5E5"> and this is a little</font>

410
00:16:51,520 --> 00:16:58,329
frustrating so what I'm going<font color="#CCCCCC"> to show</font>

411
00:16:53,470 --> 00:17:02,500
<font color="#CCCCCC">you</font><font color="#E5E5E5"> next is a quick and easy way that</font>

412
00:16:58,330 --> 00:17:05,670
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can do</font><font color="#E5E5E5"> this at runtime</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> what I</font>

413
00:17:02,500 --> 00:17:08,109
have on the<font color="#E5E5E5"> left there is some</font><font color="#CCCCCC"> frida</font>

414
00:17:05,670 --> 00:17:11,920
<font color="#E5E5E5">JavaScript using the JavaScript API</font><font color="#CCCCCC"> I</font>

415
00:17:08,109 --> 00:17:14,979
<font color="#E5E5E5">basically have a list of packages or</font>

416
00:17:11,920 --> 00:17:17,140
objects<font color="#CCCCCC"> there basically</font><font color="#E5E5E5"> I'm going to</font>

417
00:17:14,980 --> 00:17:19,060
<font color="#E5E5E5">iterate through a list of instantiate</font>

418
00:17:17,140 --> 00:17:22,660
objects on the heap<font color="#E5E5E5"> for a particular</font>

419
00:17:19,060 --> 00:17:25,480
<font color="#E5E5E5">process all this code does is it goes</font>

420
00:17:22,660 --> 00:17:27,670
<font color="#CCCCCC">through the heap</font><font color="#E5E5E5"> then says</font><font color="#CCCCCC"> okay give</font><font color="#E5E5E5"> me</font>

421
00:17:25,480 --> 00:17:28,300
<font color="#E5E5E5">all the load of classes out of the load</font>

422
00:17:27,670 --> 00:17:30,040
of<font color="#CCCCCC"> classes</font>

423
00:17:28,300 --> 00:17:32,169
<font color="#E5E5E5">Tommy oceans have been instantiated</font><font color="#CCCCCC"> if</font>

424
00:17:30,040 --> 00:17:35,200
the instantiated object<font color="#CCCCCC"> mat matches the</font>

425
00:17:32,170 --> 00:17:36,850
one<font color="#CCCCCC"> in my list</font><font color="#E5E5E5"> prints out the details so</font>

426
00:17:35,200 --> 00:17:38,210
now we've got<font color="#CCCCCC"> our</font><font color="#E5E5E5"> infected Twitter</font>

427
00:17:36,850 --> 00:17:41,570
<font color="#CCCCCC">application</font>

428
00:17:38,210 --> 00:17:43,010
and we are now going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> run</font><font color="#CCCCCC"> script</font>

429
00:17:41,570 --> 00:17:45,320
against it<font color="#E5E5E5"> and as</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can see</font><font color="#CCCCCC"> it</font>

430
00:17:43,010 --> 00:17:47,419
provided us with a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> so</font>

431
00:17:45,320 --> 00:17:49,939
at this<font color="#E5E5E5"> point we can see that this</font>

432
00:17:47,419 --> 00:17:52,399
Twitter<font color="#CCCCCC"> application has established a</font>

433
00:17:49,940 --> 00:17:54,380
whole bunch of remote connections to a

434
00:17:52,399 --> 00:17:59,870
whole<font color="#CCCCCC"> bunch of hosts</font><font color="#E5E5E5"> so you can see</font>

435
00:17:54,380 --> 00:18:01,940
video dot<font color="#CCCCCC"> t w mg com2 port 443 localhost</font>

436
00:17:59,870 --> 00:18:03,379
port<font color="#CCCCCC"> 5 8 8 4 5</font>

437
00:18:01,940 --> 00:18:07,039
then if you look somewhere<font color="#E5E5E5"> in the middle</font>

438
00:18:03,380 --> 00:18:10,100
there is a TCP<font color="#CCCCCC"> connection to 1</font><font color="#E5E5E5"> & 2 & 6 8</font>

439
00:18:07,039 --> 00:18:12,470
<font color="#E5E5E5">address on port quad 4</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> our</font>

440
00:18:10,100 --> 00:18:15,230
meterpreter session<font color="#CCCCCC"> then at the bottom</font>

441
00:18:12,470 --> 00:18:17,330
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is very interesting ones</font><font color="#E5E5E5"> is that</font>

442
00:18:15,230 --> 00:18:20,360
<font color="#E5E5E5">this app the</font><font color="#CCCCCC"> Twitter app at this</font><font color="#E5E5E5"> point</font>

443
00:18:17,330 --> 00:18:24,470
<font color="#CCCCCC">in time has</font><font color="#E5E5E5"> two instantiated objects of</font>

444
00:18:20,360 --> 00:18:27,408
Dex<font color="#CCCCCC"> Klaus load</font><font color="#E5E5E5"> which means that at this</font>

445
00:18:24,470 --> 00:18:31,700
point<font color="#E5E5E5"> why is this app</font><font color="#CCCCCC"> that I have on my</font>

446
00:18:27,409 --> 00:18:33,830
<font color="#E5E5E5">phone dynamically</font><font color="#CCCCCC"> injecting</font>

447
00:18:31,700 --> 00:18:36,230
functionality from existing draws<font color="#CCCCCC"> in</font><font color="#E5E5E5"> apk</font>

448
00:18:33,830 --> 00:18:38,449
<font color="#E5E5E5">at runtime and that is our meterpreter</font>

449
00:18:36,230 --> 00:18:39,980
<font color="#E5E5E5">backdoor actually if we</font><font color="#CCCCCC"> were to run</font><font color="#E5E5E5"> it</font>

450
00:18:38,450 --> 00:18:41,840
against the legitimate<font color="#CCCCCC"> app</font><font color="#E5E5E5"> you wouldn't</font>

451
00:18:39,980 --> 00:18:43,789
see this kind of behavior<font color="#CCCCCC"> so this is</font>

452
00:18:41,840 --> 00:18:46,549
what we<font color="#E5E5E5"> can do it</font><font color="#CCCCCC"> runs on it's quite</font>

453
00:18:43,789 --> 00:18:52,250
<font color="#E5E5E5">easy it's quite effective</font><font color="#CCCCCC"> and you can</font>

454
00:18:46,549 --> 00:18:55,039
simply run<font color="#CCCCCC"> it using freedom so at this</font>

455
00:18:52,250 --> 00:18:57,409
point we can also see how this works

456
00:18:55,039 --> 00:19:00,200
with<font color="#CCCCCC"> other</font><font color="#E5E5E5"> apps so I ran this against</font>

457
00:18:57,409 --> 00:19:03,080
the YouTube app<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> if anyone can</font>

458
00:19:00,200 --> 00:19:05,670
<font color="#E5E5E5">see</font><font color="#CCCCCC"> anything interesting particularly</font>

459
00:19:03,080 --> 00:19:09,919
over here

460
00:19:05,670 --> 00:19:15,530
<font color="#CCCCCC">I don't know how I feel</font><font color="#E5E5E5"> about apps that</font>

461
00:19:09,920 --> 00:19:20,820
invoke<font color="#E5E5E5"> jaws or apks that are called a</font>

462
00:19:15,530 --> 00:19:23,520
<font color="#E5E5E5">ds8</font><font color="#CCCCCC"> double 7 2 8 4 4 4 so at that point</font>

463
00:19:20,820 --> 00:19:25,260
in time<font color="#CCCCCC"> when I ran</font><font color="#E5E5E5"> that script the</font>

464
00:19:23,520 --> 00:19:27,090
YouTube ever what the YouTube app of

465
00:19:25,260 --> 00:19:30,420
<font color="#CCCCCC">course was talking to some remote hosts</font>

466
00:19:27,090 --> 00:19:32,129
<font color="#E5E5E5">but it was also at runtime</font><font color="#CCCCCC"> inverting</font>

467
00:19:30,420 --> 00:19:35,970
some functionality<font color="#E5E5E5"> from a jar called</font>

468
00:19:32,130 --> 00:19:40,680
<font color="#E5E5E5">adds 1 to blah blah blah</font><font color="#CCCCCC"> so you can run</font>

469
00:19:35,970 --> 00:19:42,150
<font color="#E5E5E5">it against any Android process but I've</font>

470
00:19:40,680 --> 00:19:45,420
showed you<font color="#E5E5E5"> some stuff</font><font color="#CCCCCC"> that you could</font>

471
00:19:42,150 --> 00:19:47,850
probably infer the static analysis<font color="#E5E5E5"> but</font>

472
00:19:45,420 --> 00:19:50,400
there are some scenarios<font color="#CCCCCC"> where</font><font color="#E5E5E5"> you won't</font>

473
00:19:47,850 --> 00:19:53,790
be<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> see some information</font><font color="#CCCCCC"> and this</font>

474
00:19:50,400 --> 00:19:57,260
is where<font color="#E5E5E5"> static analysis won't show you</font>

475
00:19:53,790 --> 00:20:01,740
information<font color="#E5E5E5"> for</font><font color="#CCCCCC"> cost letters especially</font>

476
00:19:57,260 --> 00:20:04,500
dalvik<font color="#E5E5E5"> decks or a</font><font color="#CCCCCC"> rty if you familiar</font>

477
00:20:01,740 --> 00:20:06,180
with the<font color="#CCCCCC"> oil injection windows platform</font>

478
00:20:04,500 --> 00:20:08,130
you take your dear<font color="#CCCCCC"> old bag of</font><font color="#E5E5E5"> boots you</font>

479
00:20:06,180 --> 00:20:10,380
shove<font color="#CCCCCC"> it into</font><font color="#E5E5E5"> a process now if you're</font>

480
00:20:08,130 --> 00:20:13,920
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> static analysis you can only gain</font>

481
00:20:10,380 --> 00:20:16,200
access to the apk<font color="#CCCCCC"> if that app is</font><font color="#E5E5E5"> making</font>

482
00:20:13,920 --> 00:20:18,090
use of the Dex class loader<font color="#E5E5E5"> and it loads</font>

483
00:20:16,200 --> 00:20:19,260
up that<font color="#CCCCCC"> functionality</font><font color="#E5E5E5"> you're not going</font>

484
00:20:18,090 --> 00:20:22,110
to see that<font color="#E5E5E5"> functionality in the</font>

485
00:20:19,260 --> 00:20:25,110
original apk<font color="#E5E5E5"> you have to get access</font><font color="#CCCCCC"> to</font>

486
00:20:22,110 --> 00:20:26,490
the other jar apk<font color="#CCCCCC"> now if it's a piece of</font>

487
00:20:25,110 --> 00:20:30,030
malware that<font color="#CCCCCC"> is installed on a device</font>

488
00:20:26,490 --> 00:20:32,400
and<font color="#E5E5E5"> if that malware remotely downloads</font>

489
00:20:30,030 --> 00:20:34,200
<font color="#CCCCCC">there JA apk in its sandbox</font>

490
00:20:32,400 --> 00:20:37,560
<font color="#E5E5E5">how are you going to get it if you</font><font color="#CCCCCC"> don't</font>

491
00:20:34,200 --> 00:20:39,360
<font color="#E5E5E5">have a rooted device so in order</font><font color="#CCCCCC"> for you</font>

492
00:20:37,560 --> 00:20:42,060
<font color="#CCCCCC">to successfully</font><font color="#E5E5E5"> analyze that entire</font>

493
00:20:39,360 --> 00:20:45,270
piece of malware<font color="#E5E5E5"> you have to gain access</font>

494
00:20:42,060 --> 00:20:46,550
to<font color="#E5E5E5"> these other drawers</font><font color="#CCCCCC"> or apks which is</font>

495
00:20:45,270 --> 00:20:49,320
not<font color="#CCCCCC"> always</font><font color="#E5E5E5"> the case</font>

496
00:20:46,550 --> 00:20:55,139
now there's also this

497
00:20:49,320 --> 00:20:56,759
Ski Package<font color="#CCCCCC"> Javed Lang and why it's</font>

498
00:20:55,139 --> 00:20:58,289
important<font color="#CCCCCC"> to Mao is because if you're</font>

499
00:20:56,759 --> 00:21:00,779
going<font color="#E5E5E5"> to run any shell commands on an</font>

500
00:20:58,289 --> 00:21:03,269
Android device<font color="#CCCCCC"> you're going to run run</font>

501
00:21:00,779 --> 00:21:05,009
thumb<font color="#CCCCCC"> but exec and then burn</font><font color="#E5E5E5"> SH if you</font>

502
00:21:03,269 --> 00:21:06,690
want to show<font color="#E5E5E5"> now what's annoying with</font>

503
00:21:05,009 --> 00:21:09,090
<font color="#E5E5E5">Java dot</font><font color="#CCCCCC"> Lang</font><font color="#E5E5E5"> is that every single</font>

504
00:21:06,690 --> 00:21:12,149
Android process<font color="#E5E5E5"> gets an instantiated</font>

505
00:21:09,090 --> 00:21:14,070
object<font color="#E5E5E5"> in the classes under that package</font>

506
00:21:12,149 --> 00:21:16,320
<font color="#E5E5E5">so that means there's no import</font>

507
00:21:14,070 --> 00:21:19,168
statements on a<font color="#E5E5E5"> Java level so if you</font>

508
00:21:16,320 --> 00:21:21,149
want to<font color="#E5E5E5"> look for an app that is</font><font color="#CCCCCC"> making</font>

509
00:21:19,169 --> 00:21:23,039
use of runtime<font color="#E5E5E5"> dot exact you won't see</font>

510
00:21:21,149 --> 00:21:25,559
any import<font color="#E5E5E5"> to</font><font color="#CCCCCC"> runtime you have to see</font>

511
00:21:23,039 --> 00:21:28,799
the exact statement<font color="#CCCCCC"> but</font><font color="#E5E5E5"> what if the</font>

512
00:21:25,559 --> 00:21:30,990
exact statement<font color="#CCCCCC"> is inside the JA apk</font>

513
00:21:28,799 --> 00:21:33,840
that<font color="#E5E5E5"> you're going to invoke via a class</font>

514
00:21:30,990 --> 00:21:36,779
<font color="#CCCCCC">loader memory is your only</font><font color="#E5E5E5"> option</font>

515
00:21:33,840 --> 00:21:39,449
<font color="#E5E5E5">and I said instantiated</font><font color="#CCCCCC"> but kind of</font>

516
00:21:36,779 --> 00:21:40,950
<font color="#E5E5E5">immutable I'm talking nonsense they are</font>

517
00:21:39,450 --> 00:21:43,379
just said<font color="#E5E5E5"> because as well see it's not a</font>

518
00:21:40,950 --> 00:21:45,210
<font color="#E5E5E5">very</font><font color="#CCCCCC"> useful object to look at it</font><font color="#E5E5E5"> doesn't</font>

519
00:21:43,379 --> 00:21:48,120
<font color="#E5E5E5">really change in a way that makes it of</font>

520
00:21:45,210 --> 00:21:51,289
any<font color="#CCCCCC"> use to</font><font color="#E5E5E5"> us so I'm going to show</font><font color="#CCCCCC"> you</font>

521
00:21:48,120 --> 00:21:55,439
what static analysis<font color="#CCCCCC"> can</font><font color="#E5E5E5"> show you and</font>

522
00:21:51,289 --> 00:21:57,600
what<font color="#E5E5E5"> what you can see you when when you</font>

523
00:21:55,440 --> 00:21:59,730
<font color="#E5E5E5">are</font><font color="#CCCCCC"> looking at an application on the</font>

524
00:21:57,600 --> 00:22:02,549
heap<font color="#E5E5E5"> so we're making use of two apps</font>

525
00:21:59,730 --> 00:22:05,820
here the app on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> left is a victim</font><font color="#E5E5E5"> app</font>

526
00:22:02,549 --> 00:22:09,750
and what it is going<font color="#CCCCCC"> to do is it is</font>

527
00:22:05,820 --> 00:22:11,850
going<font color="#E5E5E5"> to import the functionality of an</font>

528
00:22:09,750 --> 00:22:13,320
<font color="#E5E5E5">apk</font><font color="#CCCCCC"> on the file</font><font color="#E5E5E5"> system which is the</font>

529
00:22:11,850 --> 00:22:14,850
source code here<font color="#E5E5E5"> so I'm showing you the</font>

530
00:22:13,320 --> 00:22:18,330
source<font color="#E5E5E5"> code</font><font color="#CCCCCC"> so you can see what it looks</font>

531
00:22:14,850 --> 00:22:20,219
like<font color="#CCCCCC"> and we're gonna</font><font color="#E5E5E5"> run our script that</font>

532
00:22:18,330 --> 00:22:24,330
<font color="#CCCCCC">were looking at earlier to</font><font color="#E5E5E5"> analyze the</font>

533
00:22:20,220 --> 00:22:25,950
malware against our victim app and all

534
00:22:24,330 --> 00:22:29,220
<font color="#E5E5E5">its gonna do is</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> going to have</font><font color="#CCCCCC"> one</font>

535
00:22:25,950 --> 00:22:31,830
very<font color="#E5E5E5"> very complex method being sarcastic</font>

536
00:22:29,220 --> 00:22:34,590
<font color="#CCCCCC">is a run stuff command and it's gonna</font>

537
00:22:31,830 --> 00:22:37,678
<font color="#E5E5E5">run this</font><font color="#CCCCCC"> over here which basically runs</font>

538
00:22:34,590 --> 00:22:39,720
this<font color="#E5E5E5"> code which is invoked over here so</font>

539
00:22:37,679 --> 00:22:42,000
<font color="#E5E5E5">you can see when we ran our script</font>

540
00:22:39,720 --> 00:22:44,100
at the<font color="#CCCCCC"> runtime of the app we got nothing</font>

541
00:22:42,000 --> 00:22:45,629
there's no java.net<font color="#CCCCCC"> eye</font><font color="#E5E5E5"> socket there's</font>

542
00:22:44,100 --> 00:22:48,149
no<font color="#CCCCCC"> text class loaders nothing of</font>

543
00:22:45,629 --> 00:22:50,759
interest<font color="#CCCCCC"> to the heap</font><font color="#E5E5E5"> so I've added a</font>

544
00:22:48,149 --> 00:22:53,789
<font color="#CCCCCC">breakpoint here and at this point in the</font>

545
00:22:50,759 --> 00:22:55,409
code<font color="#E5E5E5"> we'll see that there's nothing on</font>

546
00:22:53,789 --> 00:22:57,269
<font color="#E5E5E5">the heap</font><font color="#CCCCCC"> that is of</font><font color="#E5E5E5"> interest to us</font>

547
00:22:55,409 --> 00:23:00,210
no<font color="#E5E5E5"> instantiated objects that we want to</font>

548
00:22:57,269 --> 00:23:03,090
have a look at but we go<font color="#E5E5E5"> ahead now and</font>

549
00:23:00,210 --> 00:23:05,100
we then step<font color="#E5E5E5"> over a line of code which</font>

550
00:23:03,090 --> 00:23:09,149
<font color="#CCCCCC">then instantiates instance of dex class</font>

551
00:23:05,100 --> 00:23:11,908
loader<font color="#E5E5E5"> we rerun our script and there we</font>

552
00:23:09,149 --> 00:23:12,330
go we now see the instance<font color="#E5E5E5"> right over</font>

553
00:23:11,909 --> 00:23:14,340
here

554
00:23:12,330 --> 00:23:16,769
so we now<font color="#E5E5E5"> know at this point in time</font>

555
00:23:14,340 --> 00:23:19,860
this<font color="#CCCCCC"> process it has</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> object on the</font>

556
00:23:16,769 --> 00:23:22,769
heap<font color="#E5E5E5"> now there's a whole bunch</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> code</font>

557
00:23:19,860 --> 00:23:24,389
that<font color="#E5E5E5"> this app is going to run so the</font>

558
00:23:22,769 --> 00:23:27,509
first method that<font color="#E5E5E5"> it's going to run via</font>

559
00:23:24,389 --> 00:23:29,459
inflexion from our imported<font color="#CCCCCC"> apk called</font>

560
00:23:27,509 --> 00:23:32,730
<font color="#CCCCCC">meg beard</font><font color="#E5E5E5"> and that's where this came</font>

561
00:23:29,460 --> 00:23:35,129
from<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's basically</font><font color="#CCCCCC"> to system dot</font>

562
00:23:32,730 --> 00:23:36,960
out dot print<font color="#CCCCCC"> lands</font><font color="#E5E5E5"> and we run that</font>

563
00:23:35,129 --> 00:23:38,730
method<font color="#E5E5E5"> and we can see there's</font><font color="#CCCCCC"> nothing of</font>

564
00:23:36,960 --> 00:23:41,759
use because<font color="#CCCCCC"> why would we want to analyze</font>

565
00:23:38,730 --> 00:23:43,919
that<font color="#E5E5E5"> so we step over and we now move</font>

566
00:23:41,759 --> 00:23:46,200
<font color="#CCCCCC">over</font><font color="#E5E5E5"> a method which is called run shell</font>

567
00:23:43,919 --> 00:23:49,590
command<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> see the results</font><font color="#E5E5E5"> of the</font>

568
00:23:46,200 --> 00:23:53,940
shell command so ransom dot exact<font color="#CCCCCC"> burn</font>

569
00:23:49,590 --> 00:23:57,649
system<font color="#CCCCCC"> bin PS so it's executed will now</font>

570
00:23:53,940 --> 00:24:01,150
analyze the process<font color="#CCCCCC"> with our script and</font>

571
00:23:57,649 --> 00:24:03,550
what we'll see<font color="#CCCCCC"> is something</font><font color="#E5E5E5"> interesting</font>

572
00:24:01,150 --> 00:24:06,700
<font color="#E5E5E5">we'll see nothing</font><font color="#CCCCCC"> which is interesting</font>

573
00:24:03,550 --> 00:24:08,950
<font color="#E5E5E5">because we're not looking for the ransom</font>

574
00:24:06,700 --> 00:24:11,020
object every process gets<font color="#E5E5E5"> around some</font>

575
00:24:08,950 --> 00:24:13,330
object so we're gonna<font color="#E5E5E5"> skip over that</font>

576
00:24:11,020 --> 00:24:16,270
<font color="#E5E5E5">we're now going to look at a</font><font color="#CCCCCC"> method</font>

577
00:24:13,330 --> 00:24:18,520
which is which establishes an HTTP

578
00:24:16,270 --> 00:24:20,920
connection<font color="#CCCCCC"> at this time I was</font><font color="#E5E5E5"> connecting</font>

579
00:24:18,520 --> 00:24:22,750
<font color="#CCCCCC">to a router at home and we can see</font><font color="#E5E5E5"> that</font>

580
00:24:20,920 --> 00:24:25,300
this is the code that<font color="#E5E5E5"> is injected</font><font color="#CCCCCC"> into</font>

581
00:24:22,750 --> 00:24:27,700
memory<font color="#E5E5E5"> and executed and this is the ural</font>

582
00:24:25,300 --> 00:24:29,740
<font color="#E5E5E5">connection method which</font><font color="#CCCCCC"> has been invoked</font>

583
00:24:27,700 --> 00:24:33,850
<font color="#E5E5E5">over here by</font><font color="#CCCCCC"> inflexion</font><font color="#E5E5E5"> so it's currently</font>

584
00:24:29,740 --> 00:24:36,460
<font color="#E5E5E5">sitting in memory we now go ahead and we</font>

585
00:24:33,850 --> 00:24:38,080
look at my<font color="#E5E5E5"> android logs</font><font color="#CCCCCC"> are take their</font>

586
00:24:36,460 --> 00:24:40,840
<font color="#CCCCCC">photos</font><font color="#E5E5E5"> running it did because you're not</font>

587
00:24:38,080 --> 00:24:43,179
<font color="#E5E5E5">supposed to run HTTP</font><font color="#CCCCCC"> requests in</font><font color="#E5E5E5"> the</font>

588
00:24:40,840 --> 00:24:45,850
main activity for an<font color="#CCCCCC"> android app which I</font>

589
00:24:43,180 --> 00:24:48,790
don't<font color="#CCCCCC"> know but we just ran our script</font>

590
00:24:45,850 --> 00:24:51,040
again and what do we<font color="#E5E5E5"> see we now see and</font>

591
00:24:48,790 --> 00:24:53,350
<font color="#CCCCCC">instantiate an instance of java.net dot</font>

592
00:24:51,040 --> 00:24:57,129
URL<font color="#E5E5E5"> if we now compare</font><font color="#CCCCCC"> the import</font>

593
00:24:53,350 --> 00:24:59,590
statements of our<font color="#CCCCCC"> third-party apk that</font>

594
00:24:57,130 --> 00:25:03,520
<font color="#CCCCCC">we've injected</font><font color="#E5E5E5"> that has a reference to</font>

595
00:24:59,590 --> 00:25:06,610
java.net<font color="#E5E5E5"> DRL and this does not so if we</font>

596
00:25:03,520 --> 00:25:08,650
were to analyze this apk<font color="#E5E5E5"> or</font><font color="#CCCCCC"> for third</font>

597
00:25:06,610 --> 00:25:10,330
<font color="#CCCCCC">party Apple to try and analyze that it</font>

598
00:25:08,650 --> 00:25:12,820
would not<font color="#E5E5E5"> see any of this</font>

599
00:25:10,330 --> 00:25:14,740
now how we get hold of this in the more

600
00:25:12,820 --> 00:25:17,200
space is that we have to<font color="#E5E5E5"> interact with</font>

601
00:25:14,740 --> 00:25:18,880
other command control servers or some

602
00:25:17,200 --> 00:25:20,890
other ways of getting hold<font color="#E5E5E5"> of this</font><font color="#CCCCCC"> APK</font>

603
00:25:18,880 --> 00:25:23,200
if you don't get<font color="#E5E5E5"> hold of</font><font color="#CCCCCC"> APK and you</font>

604
00:25:20,890 --> 00:25:25,950
can't perform static analysis you<font color="#E5E5E5"> have</font>

605
00:25:23,200 --> 00:25:25,950
to look<font color="#E5E5E5"> at the memory</font>

606
00:25:27,129 --> 00:25:33,829
so<font color="#E5E5E5"> I've heaps of love for this process</font>

607
00:25:30,769 --> 00:25:39,499
<font color="#E5E5E5">bad joke number 4/5 of lost can't now</font>

608
00:25:33,829 --> 00:25:42,979
<font color="#E5E5E5">and cottonmouth and I'm not referring to</font>

609
00:25:39,499 --> 00:25:45,589
the USB gadget<font color="#E5E5E5"> the new</font><font color="#CCCCCC"> tool was</font><font color="#E5E5E5"> there</font>

610
00:25:42,979 --> 00:25:48,559
talking<font color="#E5E5E5"> about earlier we don't</font><font color="#CCCCCC"> have to</font>

611
00:25:45,589 --> 00:25:50,418
troll code<font color="#E5E5E5"> hey I like hacking stuff</font><font color="#CCCCCC"> B</font>

612
00:25:48,559 --> 00:25:52,729
I'm<font color="#E5E5E5"> very lazy and see if I can write a</font>

613
00:25:50,419 --> 00:25:55,609
<font color="#E5E5E5">script to do it our wall so and it also</font>

614
00:25:52,729 --> 00:25:58,419
<font color="#E5E5E5">applies to humans as well so we don't</font>

615
00:25:55,609 --> 00:26:01,728
have to troll code here we can identify

616
00:25:58,419 --> 00:26:03,549
specific anomalies<font color="#E5E5E5"> we can say I want to</font>

617
00:26:01,729 --> 00:26:05,929
<font color="#E5E5E5">look for attributes a B and C and</font>

618
00:26:03,549 --> 00:26:08,809
programmatically<font color="#E5E5E5"> query it and gain</font>

619
00:26:05,929 --> 00:26:12,469
access to that which is awesome but

620
00:26:08,809 --> 00:26:14,989
there's also frustrations<font color="#CCCCCC"> Java dot</font>

621
00:26:12,469 --> 00:26:17,539
<font color="#CCCCCC">Langer anthem</font><font color="#E5E5E5"> like I said every process</font>

622
00:26:14,989 --> 00:26:20,479
will have an instantiated object of this

623
00:26:17,539 --> 00:26:23,149
<font color="#E5E5E5">type so in this case we're saying hey if</font>

624
00:26:20,479 --> 00:26:23,989
there's an instantiated object<font color="#E5E5E5"> of</font><font color="#CCCCCC"> dex</font>

625
00:26:23,149 --> 00:26:26,988
<font color="#CCCCCC">classloader</font>

626
00:26:23,989 --> 00:26:28,399
<font color="#E5E5E5">let's have</font><font color="#CCCCCC"> an extra</font><font color="#E5E5E5"> look at this app but</font>

627
00:26:26,989 --> 00:26:30,289
if you do this<font color="#E5E5E5"> to every</font><font color="#CCCCCC"> android app</font>

628
00:26:28,399 --> 00:26:33,978
every single app will be<font color="#E5E5E5"> flagged because</font>

629
00:26:30,289 --> 00:26:37,249
<font color="#E5E5E5">every app has an instance of that so if</font>

630
00:26:33,979 --> 00:26:39,019
<font color="#E5E5E5">we want to execute a shell command we</font>

631
00:26:37,249 --> 00:26:42,469
want<font color="#E5E5E5"> to look at the state of the object</font>

632
00:26:39,019 --> 00:26:44,389
we want to see a before<font color="#CCCCCC"> and after now if</font>

633
00:26:42,469 --> 00:26:45,739
you look at the contents<font color="#E5E5E5"> of the runtime</font>

634
00:26:44,389 --> 00:26:48,319
object that's why I say it's<font color="#E5E5E5"> kind of</font>

635
00:26:45,739 --> 00:26:51,829
<font color="#E5E5E5">immutable because it changes but not in</font>

636
00:26:48,319 --> 00:26:54,859
a useful way that if<font color="#E5E5E5"> you run system</font><font color="#CCCCCC"> bin</font>

637
00:26:51,829 --> 00:26:57,678
PS<font color="#E5E5E5"> you can't really tell</font><font color="#CCCCCC"> if that</font><font color="#E5E5E5"> was the</font>

638
00:26:54,859 --> 00:27:00,240
command<font color="#E5E5E5"> that was run</font><font color="#CCCCCC"> on the heap in a</font>

639
00:26:57,679 --> 00:27:02,429
very effective<font color="#E5E5E5"> way</font><font color="#CCCCCC"> so</font>

640
00:27:00,240 --> 00:27:05,309
that got a bit<font color="#E5E5E5"> frustration a</font><font color="#CCCCCC"> bit</font>

641
00:27:02,429 --> 00:27:07,380
frustrating but if any of<font color="#E5E5E5"> you are young</font>

642
00:27:05,309 --> 00:27:09,920
<font color="#E5E5E5">enough to know who these</font><font color="#CCCCCC"> guys are</font>

643
00:27:07,380 --> 00:27:11,130
<font color="#CCCCCC">it's I'm hanging a few chuckles</font><font color="#E5E5E5"> they</font>

644
00:27:09,920 --> 00:27:13,350
awesome

645
00:27:11,130 --> 00:27:14,700
someone got my reference what's the plan

646
00:27:13,350 --> 00:27:17,300
what<font color="#E5E5E5"> do we do from now</font>

647
00:27:14,700 --> 00:27:20,160
well what's fundamental to objects

648
00:27:17,300 --> 00:27:22,290
methods methods allow us to<font color="#CCCCCC"> interact</font>

649
00:27:20,160 --> 00:27:23,940
with them<font color="#E5E5E5"> and we're using an</font>

650
00:27:22,290 --> 00:27:26,730
instrumentation toolkit so<font color="#E5E5E5"> what can we</font>

651
00:27:23,940 --> 00:27:28,410
<font color="#E5E5E5">do we</font><font color="#CCCCCC"> can hook methods</font><font color="#E5E5E5"> now it should be</font>

652
00:27:26,730 --> 00:27:31,020
<font color="#E5E5E5">noted that when you're hooking methods</font>

653
00:27:28,410 --> 00:27:34,770
you are<font color="#E5E5E5"> changing</font><font color="#CCCCCC"> register the values</font>

654
00:27:31,020 --> 00:27:38,250
start slightly intrusive<font color="#E5E5E5"> however this is</font>

655
00:27:34,770 --> 00:27:41,790
<font color="#CCCCCC">very cool</font><font color="#E5E5E5"> because what do we know about</font>

656
00:27:38,250 --> 00:27:44,190
the exact method<font color="#E5E5E5"> it gets invoked on the</font>

657
00:27:41,790 --> 00:27:46,050
<font color="#CCCCCC">runtime object and to hook an overload</font>

658
00:27:44,190 --> 00:27:47,940
objects on the heap the object has to be

659
00:27:46,050 --> 00:27:50,520
<font color="#CCCCCC">instantiated</font><font color="#E5E5E5"> and we know that every</font>

660
00:27:47,940 --> 00:27:53,250
<font color="#CCCCCC">process has</font><font color="#E5E5E5"> an instantiated object of</font>

661
00:27:50,520 --> 00:27:55,679
<font color="#CCCCCC">runtime so what do we</font><font color="#E5E5E5"> do we hook the</font>

662
00:27:53,250 --> 00:27:58,920
exact<font color="#E5E5E5"> method which means that every time</font>

663
00:27:55,679 --> 00:28:02,100
<font color="#CCCCCC">the exact</font><font color="#E5E5E5"> method is executed we say yes</font>

664
00:27:58,920 --> 00:28:04,410
tell<font color="#E5E5E5"> us and show</font><font color="#CCCCCC"> us the data</font><font color="#E5E5E5"> that has</font>

665
00:28:02,100 --> 00:28:06,330
<font color="#CCCCCC">been sent to the exact</font><font color="#E5E5E5"> method we can use</font>

666
00:28:04,410 --> 00:28:08,130
<font color="#CCCCCC">frida for this or</font><font color="#E5E5E5"> any other</font>

667
00:28:06,330 --> 00:28:11,070
instrumentation toolkit to make it

668
00:28:08,130 --> 00:28:13,770
easier<font color="#E5E5E5"> and this makes it quite useful</font><font color="#CCCCCC"> so</font>

669
00:28:11,070 --> 00:28:16,320
<font color="#CCCCCC">what's the plan so firstly when you</font>

670
00:28:13,770 --> 00:28:18,929
refer to the<font color="#E5E5E5"> Java Docs yes that</font><font color="#CCCCCC"> painful</font>

671
00:28:16,320 --> 00:28:20,730
thing that<font color="#CCCCCC"> just destroys</font><font color="#E5E5E5"> your soul but</font>

672
00:28:18,929 --> 00:28:22,650
it is quite<font color="#CCCCCC"> useful because</font><font color="#E5E5E5"> in this case</font>

673
00:28:20,730 --> 00:28:24,059
if you're<font color="#CCCCCC"> gonna overload a method</font><font color="#E5E5E5"> you</font>

674
00:28:22,650 --> 00:28:26,940
need<font color="#E5E5E5"> to know all the method signatures</font>

675
00:28:24,059 --> 00:28:29,940
and in this case exec has<font color="#E5E5E5"> six because we</font>

676
00:28:26,940 --> 00:28:31,980
don't know at runtime<font color="#CCCCCC"> what method</font>

677
00:28:29,940 --> 00:28:34,860
signature exactly is<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> invoked</font>

678
00:28:31,980 --> 00:28:37,170
so what do we<font color="#E5E5E5"> do is we implement all six</font>

679
00:28:34,860 --> 00:28:40,110
of them so<font color="#E5E5E5"> that if one of the six is run</font>

680
00:28:37,170 --> 00:28:42,000
<font color="#E5E5E5">we can get it so that's the Java Doc's</font>

681
00:28:40,110 --> 00:28:44,340
I'm sorry that I had<font color="#E5E5E5"> to</font>

682
00:28:42,000 --> 00:28:46,230
make you see that I know it's painful

683
00:28:44,340 --> 00:28:49,530
but<font color="#E5E5E5"> it's okay you will get through it</font>

684
00:28:46,230 --> 00:28:52,140
this is<font color="#CCCCCC"> them</font><font color="#E5E5E5"> the script very very simple</font>

685
00:28:49,530 --> 00:28:54,000
<font color="#E5E5E5">need the Java dad use command which</font>

686
00:28:52,140 --> 00:28:57,090
basically<font color="#E5E5E5"> only works on instantiate</font>

687
00:28:54,000 --> 00:28:59,930
objects<font color="#E5E5E5"> and we then overload each of the</font>

688
00:28:57,090 --> 00:29:03,600
method calls<font color="#E5E5E5"> what does it look like</font>

689
00:28:59,930 --> 00:29:06,450
<font color="#E5E5E5">looks like this I</font><font color="#CCCCCC"> pose for the tassel</font>

690
00:29:03,600 --> 00:29:11,189
<font color="#CCCCCC">actually I don't</font><font color="#E5E5E5"> I was in Texas when I</font>

691
00:29:06,450 --> 00:29:13,610
did this<font color="#CCCCCC"> video so hence the</font><font color="#E5E5E5"> tassel so we</font>

692
00:29:11,190 --> 00:29:15,900
are<font color="#E5E5E5"> going to look at our victim app as</font>

693
00:29:13,610 --> 00:29:18,959
well because remember we<font color="#E5E5E5"> are running</font>

694
00:29:15,900 --> 00:29:20,700
shell commands<font color="#E5E5E5"> and we couldn't</font><font color="#CCCCCC"> see</font>

695
00:29:18,960 --> 00:29:23,640
<font color="#E5E5E5">anything interesting</font><font color="#CCCCCC"> so we're going to</font>

696
00:29:20,700 --> 00:29:28,320
<font color="#E5E5E5">use this script now another victim</font><font color="#CCCCCC"> app</font>

697
00:29:23,640 --> 00:29:31,230
and see<font color="#CCCCCC"> well we dynamically</font><font color="#E5E5E5"> invoke this</font>

698
00:29:28,320 --> 00:29:33,389
code but there's no way<font color="#E5E5E5"> to see it so</font>

699
00:29:31,230 --> 00:29:35,010
we're now going to<font color="#E5E5E5"> try our script</font><font color="#CCCCCC"> we can</font>

700
00:29:33,390 --> 00:29:37,950
attach<font color="#CCCCCC"> it</font><font color="#E5E5E5"> onto the process which is</font>

701
00:29:35,010 --> 00:29:39,600
essentially<font color="#CCCCCC"> P trace and if you are doing</font>

702
00:29:37,950 --> 00:29:42,420
<font color="#E5E5E5">this make</font><font color="#CCCCCC"> sure that Android studio</font><font color="#E5E5E5"> is</font>

703
00:29:39,600 --> 00:29:45,959
using a different debugger not<font color="#CCCCCC"> P trace I</font>

704
00:29:42,420 --> 00:29:47,460
was a little crash FYI<font color="#E5E5E5"> so back to the</font>

705
00:29:45,960 --> 00:29:51,720
<font color="#E5E5E5">point we're</font><font color="#CCCCCC"> now going</font><font color="#E5E5E5"> to use load</font>

706
00:29:47,460 --> 00:29:55,800
classes again<font color="#CCCCCC"> and when we</font><font color="#E5E5E5"> run the shell</font>

707
00:29:51,720 --> 00:29:59,640
command run shell command method we want

708
00:29:55,800 --> 00:30:02,940
<font color="#E5E5E5">to see what it is sending to the method</font>

709
00:29:59,640 --> 00:30:05,400
and if it<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> is being called at</font>

710
00:30:02,940 --> 00:30:07,410
<font color="#CCCCCC">all so we can see</font><font color="#E5E5E5"> that's the code that's</font>

711
00:30:05,400 --> 00:30:11,490
currently sitting in memory through our

712
00:30:07,410 --> 00:30:14,310
victim app we run it<font color="#E5E5E5"> and that's what we</font>

713
00:30:11,490 --> 00:30:17,190
get<font color="#CCCCCC"> over here we can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> exec was</font>

714
00:30:14,310 --> 00:30:19,770
called on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> ransom object allocated to</font>

715
00:30:17,190 --> 00:30:21,120
<font color="#CCCCCC">that process</font><font color="#E5E5E5"> and we can see</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> system</font>

716
00:30:19,770 --> 00:30:23,790
<font color="#CCCCCC">burn PS</font>

717
00:30:21,120 --> 00:30:24,989
<font color="#E5E5E5">whereas the command that was sent so if</font>

718
00:30:23,790 --> 00:30:27,570
you're<font color="#CCCCCC"> looking at this app you could</font>

719
00:30:24,990 --> 00:30:31,020
wonder why is this app executing a shell

720
00:30:27,570 --> 00:30:34,189
commands and<font color="#E5E5E5"> be why is it</font><font color="#CCCCCC"> running the PS</font>

721
00:30:31,020 --> 00:30:37,350
command<font color="#CCCCCC"> so now that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> know that</font><font color="#E5E5E5"> our</font>

722
00:30:34,190 --> 00:30:39,720
script can successfully work<font color="#E5E5E5"> and we can</font>

723
00:30:37,350 --> 00:30:42,120
see the output<font color="#E5E5E5"> that's now working over</font>

724
00:30:39,720 --> 00:30:45,390
here we can<font color="#E5E5E5"> go forth and actually</font>

725
00:30:42,120 --> 00:30:47,250
<font color="#E5E5E5">analyze some more stuff and of course</font>

726
00:30:45,390 --> 00:30:49,380
I'm<font color="#E5E5E5"> not talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> our tutor</font>

727
00:30:47,250 --> 00:30:52,230
<font color="#E5E5E5">application that has been</font><font color="#CCCCCC"> backdoored so</font>

728
00:30:49,380 --> 00:30:54,780
we want to see if<font color="#CCCCCC"> we're looking at this</font>

729
00:30:52,230 --> 00:30:57,510
application<font color="#CCCCCC"> remember we have a</font><font color="#E5E5E5"> mature</font>

730
00:30:54,780 --> 00:31:00,750
<font color="#E5E5E5">procession on this application</font><font color="#CCCCCC"> we've</font>

731
00:30:57,510 --> 00:31:02,490
done a<font color="#CCCCCC"> screen shot</font><font color="#E5E5E5"> so let's attach our</font>

732
00:31:00,750 --> 00:31:04,260
<font color="#CCCCCC">script which we've done over here and</font>

733
00:31:02,490 --> 00:31:07,440
we're going<font color="#CCCCCC"> to get</font><font color="#E5E5E5"> a session on to this</font>

734
00:31:04,260 --> 00:31:11,220
and see what<font color="#CCCCCC"> happens so we've attached</font>

735
00:31:07,440 --> 00:31:13,920
our<font color="#E5E5E5"> script and yeah clears the LS</font>

736
00:31:11,220 --> 00:31:16,710
control I'll try<font color="#CCCCCC"> all the commands we</font>

737
00:31:13,920 --> 00:31:18,270
want to clear terminal once we have a

738
00:31:16,710 --> 00:31:21,690
session<font color="#E5E5E5"> we're now gonna run some shell</font>

739
00:31:18,270 --> 00:31:23,670
<font color="#E5E5E5">commands such as LS and we can see we</font>

740
00:31:21,690 --> 00:31:24,960
get<font color="#CCCCCC"> nothing in the bottom</font><font color="#E5E5E5"> right we run a</font>

741
00:31:23,670 --> 00:31:26,670
PWD command

742
00:31:24,960 --> 00:31:28,740
and we can see that<font color="#CCCCCC"> we are in the</font>

743
00:31:26,670 --> 00:31:31,860
<font color="#E5E5E5">Twitter sandbox for the application but</font>

744
00:31:28,740 --> 00:31:34,500
we<font color="#E5E5E5"> get no</font><font color="#CCCCCC"> outputs so let's not drop down</font>

745
00:31:31,860 --> 00:31:37,379
to an interactive<font color="#E5E5E5"> shell and what did we</font>

746
00:31:34,500 --> 00:31:40,620
get<font color="#E5E5E5"> over here we can see that exec was</font>

747
00:31:37,380 --> 00:31:45,960
<font color="#E5E5E5">cold by the process and there was the</font>

748
00:31:40,620 --> 00:31:48,330
parameter<font color="#E5E5E5"> SH - see SH with an additional</font>

749
00:31:45,960 --> 00:31:51,090
premise of data<font color="#E5E5E5"> data</font><font color="#CCCCCC"> comm Twitter</font>

750
00:31:48,330 --> 00:31:52,800
Android dot files<font color="#CCCCCC"> now if anybody's</font>

751
00:31:51,090 --> 00:31:57,300
familiar with<font color="#E5E5E5"> reverse shells and</font>

752
00:31:52,800 --> 00:31:59,669
interactive shells<font color="#E5E5E5"> SH - see SH should be</font>

753
00:31:57,300 --> 00:32:02,159
of interest<font color="#E5E5E5"> to you so we can see that</font>

754
00:31:59,670 --> 00:32:04,890
when we<font color="#E5E5E5"> ran some more commands in our</font>

755
00:32:02,160 --> 00:32:07,290
Android shell<font color="#E5E5E5"> they didn't come up now as</font>

756
00:32:04,890 --> 00:32:09,590
we can see over<font color="#E5E5E5"> here that's due to the</font>

757
00:32:07,290 --> 00:32:11,450
<font color="#E5E5E5">SH -</font><font color="#CCCCCC"> see</font>

758
00:32:09,590 --> 00:32:12,919
it's got its own path<font color="#CCCCCC"> so we're not</font><font color="#E5E5E5"> going</font>

759
00:32:11,450 --> 00:32:16,130
to see that<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> not being run by</font>

760
00:32:12,920 --> 00:32:18,740
ransom<font color="#CCCCCC"> but</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> exec</font><font color="#E5E5E5"> but if we kill</font><font color="#CCCCCC"> that</font>

761
00:32:16,130 --> 00:32:23,960
<font color="#E5E5E5">shell and create another one we will see</font>

762
00:32:18,740 --> 00:32:26,780
the call to exec again so a mass and

763
00:32:23,960 --> 00:32:30,410
simple and effective way<font color="#E5E5E5"> to go ahead</font><font color="#CCCCCC"> and</font>

764
00:32:26,780 --> 00:32:31,879
see what these things<font color="#E5E5E5"> do so you will</font>

765
00:32:30,410 --> 00:32:34,370
<font color="#CCCCCC">just</font><font color="#E5E5E5"> take</font><font color="#CCCCCC"> a quick snapshot and have a</font>

766
00:32:31,880 --> 00:32:36,110
look at what we have right<font color="#CCCCCC"> now we have</font>

767
00:32:34,370 --> 00:32:38,449
the<font color="#CCCCCC"> ability to analyse objects</font><font color="#E5E5E5"> on the</font>

768
00:32:36,110 --> 00:32:40,760
heap<font color="#E5E5E5"> we can hook methods for certain</font>

769
00:32:38,450 --> 00:32:44,210
objects on the heap<font color="#CCCCCC"> we can perform</font><font color="#E5E5E5"> this</font>

770
00:32:40,760 --> 00:32:46,220
at<font color="#CCCCCC"> runtime on a device</font><font color="#E5E5E5"> we can see more</font>

771
00:32:44,210 --> 00:32:50,390
<font color="#E5E5E5">than static analysis which I have</font>

772
00:32:46,220 --> 00:32:53,510
hopefully<font color="#E5E5E5"> demonstrated to you and we can</font>

773
00:32:50,390 --> 00:32:55,250
<font color="#CCCCCC">perform this from a workstation</font><font color="#E5E5E5"> so</font>

774
00:32:53,510 --> 00:32:58,490
that's another point<font color="#CCCCCC"> that we're going</font><font color="#E5E5E5"> to</font>

775
00:32:55,250 --> 00:33:01,700
get<font color="#CCCCCC"> to but we can do all of this so what</font>

776
00:32:58,490 --> 00:33:03,230
about<font color="#E5E5E5"> a solution so I'm not going to</font>

777
00:33:01,700 --> 00:33:06,169
introduce you introduce you to the

778
00:33:03,230 --> 00:33:07,970
safety<font color="#CCCCCC"> net at the station APR 10 you</font>

779
00:33:06,169 --> 00:33:10,610
heard of this API please put your hand

780
00:33:07,970 --> 00:33:15,110
up<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> cool so slightly better than</font>

781
00:33:10,610 --> 00:33:16,760
Android bouncer but can anybody tell<font color="#CCCCCC"> me</font>

782
00:33:15,110 --> 00:33:22,100
how<font color="#CCCCCC"> long the attestation</font><font color="#E5E5E5"> API has been</font>

783
00:33:16,760 --> 00:33:24,470
around for don't<font color="#E5E5E5"> two years your answers</font>

784
00:33:22,100 --> 00:33:26,990
as good as mine<font color="#E5E5E5"> I don't know it's been</font>

785
00:33:24,470 --> 00:33:28,850
<font color="#E5E5E5">around for quite some time</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> basically</font>

786
00:33:26,990 --> 00:33:31,910
what<font color="#E5E5E5"> it allows you to do is to</font>

787
00:33:28,850 --> 00:33:34,178
programmatically query the<font color="#E5E5E5"> environment</font>

788
00:33:31,910 --> 00:33:37,429
in<font color="#CCCCCC"> which your app is installed</font><font color="#E5E5E5"> on</font>

789
00:33:34,179 --> 00:33:39,860
basically<font color="#E5E5E5"> what it means is tell me if my</font>

790
00:33:37,429 --> 00:33:41,890
app is installed on a rooted device<font color="#CCCCCC"> tell</font>

791
00:33:39,860 --> 00:33:44,449
me if<font color="#E5E5E5"> my app is on supported hard way</font>

792
00:33:41,890 --> 00:33:47,179
<font color="#E5E5E5">basically that's what it</font><font color="#CCCCCC"> does very</font>

793
00:33:44,450 --> 00:33:48,830
useful very<font color="#CCCCCC"> powerful and architectural</font>

794
00:33:47,179 --> 00:33:50,720
<font color="#E5E5E5">II what it looks like is that it's a</font>

795
00:33:48,830 --> 00:33:52,730
<font color="#E5E5E5">client-server model so the</font><font color="#CCCCCC"> attestation</font>

796
00:33:50,720 --> 00:33:55,070
API lives inside the Google<font color="#E5E5E5"> Play</font>

797
00:33:52,730 --> 00:33:56,870
services<font color="#CCCCCC"> which</font><font color="#E5E5E5"> is a system privileged</font>

798
00:33:55,070 --> 00:33:59,889
application so you can<font color="#CCCCCC"> do a few</font><font color="#E5E5E5"> more</font>

799
00:33:56,870 --> 00:34:02,949
<font color="#CCCCCC">things than normal</font><font color="#E5E5E5"> apps cons and in the</font>

800
00:33:59,890 --> 00:34:04,240
back<font color="#CCCCCC"> in very firebase</font><font color="#E5E5E5"> Google cloud</font>

801
00:34:02,950 --> 00:34:05,620
messenger stuff happening<font color="#E5E5E5"> in the</font>

802
00:34:04,240 --> 00:34:08,620
<font color="#E5E5E5">background if you want some analytics</font>

803
00:34:05,620 --> 00:34:12,609
<font color="#E5E5E5">what I suggest is that we bundle in an</font>

804
00:34:08,620 --> 00:34:16,089
additional<font color="#CCCCCC"> APR over here so that</font><font color="#E5E5E5"> not</font>

805
00:34:12,610 --> 00:34:20,679
<font color="#CCCCCC">only</font><font color="#E5E5E5"> can we query</font><font color="#CCCCCC"> the context of the</font>

806
00:34:16,090 --> 00:34:22,540
device but maybe we can implement

807
00:34:20,679 --> 00:34:25,000
something<font color="#E5E5E5"> to query additional</font>

808
00:34:22,540 --> 00:34:27,580
applications on the device<font color="#CCCCCC"> so I'm going</font>

809
00:34:25,000 --> 00:34:30,340
to<font color="#E5E5E5"> introduce to</font><font color="#CCCCCC"> you a solution slash</font>

810
00:34:27,580 --> 00:34:32,560
<font color="#E5E5E5">library / APR / very ugly hacky code</font>

811
00:34:30,340 --> 00:34:34,090
that I've written<font color="#E5E5E5"> and of course these</font>

812
00:34:32,560 --> 00:34:36,639
<font color="#CCCCCC">days everything</font><font color="#E5E5E5"> needs</font><font color="#CCCCCC"> a labels are</font>

813
00:34:34,090 --> 00:34:38,260
called<font color="#CCCCCC"> at ate cake it's</font><font color="#E5E5E5"> off</font><font color="#CCCCCC"> pecans</font>

814
00:34:36,639 --> 00:34:39,819
<font color="#CCCCCC">you're more than</font><font color="#E5E5E5"> welcome</font><font color="#CCCCCC"> to use</font><font color="#E5E5E5"> Google</font>

815
00:34:38,260 --> 00:34:42,220
<font color="#E5E5E5">Translate to</font><font color="#CCCCCC"> see what it means</font><font color="#E5E5E5"> I'll</font>

816
00:34:39,820 --> 00:34:44,169
leave that to you<font color="#E5E5E5"> but what this library</font>

817
00:34:42,219 --> 00:34:46,750
does is it allows<font color="#CCCCCC"> you to</font>

818
00:34:44,168 --> 00:34:48,489
programmatically analyze<font color="#E5E5E5"> Android apps</font>

819
00:34:46,750 --> 00:34:50,830
<font color="#E5E5E5">using</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> techniques</font><font color="#CCCCCC"> that I mentioned</font>

820
00:34:48,489 --> 00:34:53,350
before<font color="#E5E5E5"> it's a custom Android</font><font color="#CCCCCC"> frida</font>

821
00:34:50,830 --> 00:34:56,080
library which is essentially<font color="#E5E5E5"> d-bus over</font>

822
00:34:53,350 --> 00:34:58,509
<font color="#CCCCCC">TCP which makes me shiver every time I</font>

823
00:34:56,080 --> 00:35:00,340
say<font color="#CCCCCC"> that which then provides us with</font>

824
00:34:58,510 --> 00:35:02,650
feeder server integration<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font>

825
00:35:00,340 --> 00:35:05,920
really awesome<font color="#CCCCCC"> and what this</font><font color="#E5E5E5"> allows us</font>

826
00:35:02,650 --> 00:35:07,990
<font color="#CCCCCC">to</font><font color="#E5E5E5"> possess is the</font><font color="#CCCCCC"> capability to</font><font color="#E5E5E5"> do what</font>

827
00:35:05,920 --> 00:35:10,600
I've<font color="#CCCCCC"> been showing</font><font color="#E5E5E5"> you before and more</font>

828
00:35:07,990 --> 00:35:14,109
<font color="#E5E5E5">but on an</font><font color="#CCCCCC"> android device</font><font color="#E5E5E5"> by an</font><font color="#CCCCCC"> android</font>

829
00:35:10,600 --> 00:35:15,850
<font color="#CCCCCC">application so for example if</font><font color="#E5E5E5"> I were to</font>

830
00:35:14,110 --> 00:35:19,060
say hey<font color="#CCCCCC"> Frida</font><font color="#E5E5E5"> tell me all the running</font>

831
00:35:15,850 --> 00:35:21,520
<font color="#E5E5E5">processes on a specific device cool I'll</font>

832
00:35:19,060 --> 00:35:24,759
take<font color="#E5E5E5"> my laptop</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> fern take my cable</font>

833
00:35:21,520 --> 00:35:27,340
running<font color="#E5E5E5"> in my terminal feeder - PS -</font><font color="#CCCCCC"> you</font>

834
00:35:24,760 --> 00:35:30,040
for USB<font color="#CCCCCC"> and I get this pretty output</font>

835
00:35:27,340 --> 00:35:31,540
over<font color="#E5E5E5"> here but I'm always gonna</font><font color="#CCCCCC"> have my</font>

836
00:35:30,040 --> 00:35:34,090
laptop<font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> always gonna have Frida</font>

837
00:35:31,540 --> 00:35:36,759
<font color="#E5E5E5">how do I do this from</font><font color="#CCCCCC"> an Android</font>

838
00:35:34,090 --> 00:35:38,810
<font color="#CCCCCC">application well you can use a cake and</font>

839
00:35:36,760 --> 00:35:41,480
<font color="#E5E5E5">you can say hey</font><font color="#CCCCCC"> 8k</font>

840
00:35:38,810 --> 00:35:44,740
run this for me and<font color="#CCCCCC"> that'll do all of</font>

841
00:35:41,480 --> 00:35:47,810
that<font color="#E5E5E5"> and give</font><font color="#CCCCCC"> you some mass</font><font color="#E5E5E5"> output and</font>

842
00:35:44,740 --> 00:35:50,720
basically it could be one line but I

843
00:35:47,810 --> 00:35:53,060
like saying object<font color="#E5E5E5"> mu equals new objects</font>

844
00:35:50,720 --> 00:35:55,040
as<font color="#E5E5E5"> you would have seen from today so</font>

845
00:35:53,060 --> 00:35:57,860
that's how you can do<font color="#E5E5E5"> it in an android</font>

846
00:35:55,040 --> 00:35:59,660
app if<font color="#E5E5E5"> you were to say hey</font><font color="#CCCCCC"> Frida</font><font color="#E5E5E5"> tell me</font>

847
00:35:57,860 --> 00:36:01,490
<font color="#E5E5E5">if this app looks a little suspicious</font><font color="#CCCCCC"> so</font>

848
00:35:59,660 --> 00:36:04,190
<font color="#CCCCCC">this was the script that we are running</font>

849
00:36:01,490 --> 00:36:08,089
earlier<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is how we ran it from</font><font color="#E5E5E5"> a</font>

850
00:36:04,190 --> 00:36:10,820
terminal on a host machine<font color="#E5E5E5"> how do</font><font color="#CCCCCC"> we do</font>

851
00:36:08,090 --> 00:36:11,300
<font color="#E5E5E5">it via</font><font color="#CCCCCC"> ate cake</font><font color="#E5E5E5"> what we can do it like</font>

852
00:36:10,820 --> 00:36:16,370
<font color="#CCCCCC">this</font>

853
00:36:11,300 --> 00:36:19,880
so a cake integrates with a<font color="#E5E5E5"> Frida</font><font color="#CCCCCC"> daemon</font>

854
00:36:16,370 --> 00:36:21,290
<font color="#E5E5E5">which is exposed over TCP and basically</font>

855
00:36:19,880 --> 00:36:23,900
you just need<font color="#E5E5E5"> to give it</font><font color="#CCCCCC"> a free to host</font>

856
00:36:21,290 --> 00:36:26,570
a free report and in this case<font color="#CCCCCC"> for</font>

857
00:36:23,900 --> 00:36:29,750
<font color="#CCCCCC">analyze process a PID which is quite</font>

858
00:36:26,570 --> 00:36:35,420
important<font color="#E5E5E5"> so</font><font color="#CCCCCC"> some of</font><font color="#E5E5E5"> you must be</font>

859
00:36:29,750 --> 00:36:37,370
<font color="#E5E5E5">wondering but how why magic not</font><font color="#CCCCCC"> ready so</font>

860
00:36:35,420 --> 00:36:41,720
why did I do it<font color="#E5E5E5"> firstly</font><font color="#CCCCCC"> while there was</font>

861
00:36:37,370 --> 00:36:43,819
no<font color="#CCCCCC"> Android Frida library out there so I</font>

862
00:36:41,720 --> 00:36:47,029
wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use feeder because it was just</font>

863
00:36:43,820 --> 00:36:48,740
<font color="#E5E5E5">really easy</font><font color="#CCCCCC"> to actually access</font><font color="#E5E5E5"> things</font>

864
00:36:47,030 --> 00:36:50,060
that were previously<font color="#E5E5E5"> quite difficult</font>

865
00:36:48,740 --> 00:36:51,939
like I said I don't want<font color="#CCCCCC"> to deal with</font>

866
00:36:50,060 --> 00:36:55,610
<font color="#CCCCCC">C++ code and I don't want</font><font color="#E5E5E5"> to deal</font><font color="#CCCCCC"> with</font>

867
00:36:51,940 --> 00:36:57,290
<font color="#CCCCCC">prop maps or mem or HP</font><font color="#E5E5E5"> raw files so</font>

868
00:36:55,610 --> 00:36:59,210
<font color="#CCCCCC">Frida could get the point across quite</font>

869
00:36:57,290 --> 00:37:02,420
<font color="#E5E5E5">quickly I</font><font color="#CCCCCC"> wanted a</font><font color="#E5E5E5"> client-server model</font>

870
00:36:59,210 --> 00:37:04,040
<font color="#E5E5E5">to align as much as possible with the</font>

871
00:37:02,420 --> 00:37:06,260
existing attestation in Google Play

872
00:37:04,040 --> 00:37:09,380
<font color="#E5E5E5">services API and of course I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> want</font>

873
00:37:06,260 --> 00:37:11,720
pain<font color="#CCCCCC"> when I saw</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> fita was written</font><font color="#E5E5E5"> or</font>

874
00:37:09,380 --> 00:37:13,340
the<font color="#CCCCCC"> D</font><font color="#E5E5E5"> bus naturally I looked at</font><font color="#CCCCCC"> divas</font>

875
00:37:11,720 --> 00:37:15,620
said well they must be<font color="#E5E5E5"> then an Android</font>

876
00:37:13,340 --> 00:37:17,450
<font color="#E5E5E5">divas library which there isn't and if</font>

877
00:37:15,620 --> 00:37:21,069
anybody<font color="#E5E5E5"> knows please let me know but I</font>

878
00:37:17,450 --> 00:37:22,730
saw this in<font color="#E5E5E5"> the documentation and</font><font color="#CCCCCC"> AI was</font>

879
00:37:21,070 --> 00:37:24,170
<font color="#E5E5E5">uncomfortable cuz I was looking at</font>

880
00:37:22,730 --> 00:37:26,570
documentation is you can set<font color="#CCCCCC"> unlike</font>

881
00:37:24,170 --> 00:37:27,890
documentation and<font color="#CCCCCC"> B I don't know how</font>

882
00:37:26,570 --> 00:37:30,800
anyone feels when they<font color="#CCCCCC"> see that in</font>

883
00:37:27,890 --> 00:37:33,850
documentation<font color="#E5E5E5"> so basically what I did</font>

884
00:37:30,800 --> 00:37:36,820
<font color="#E5E5E5">was</font><font color="#CCCCCC"> I wrote my own</font><font color="#E5E5E5"> so it's it's</font>

885
00:37:33,850 --> 00:37:38,319
<font color="#CCCCCC">eventually a TCP socket</font><font color="#E5E5E5"> to a demon that</font>

886
00:37:36,820 --> 00:37:41,380
just<font color="#E5E5E5"> pushes and pulls a bunch of</font><font color="#CCCCCC"> BOTS</font>

887
00:37:38,320 --> 00:37:42,910
<font color="#E5E5E5">over</font><font color="#CCCCCC"> the wire</font><font color="#E5E5E5"> how did I figure this out</font>

888
00:37:41,380 --> 00:37:45,220
<font color="#E5E5E5">well I sniffed a whole bunch of feeder</font>

889
00:37:42,910 --> 00:37:48,310
stations<font color="#E5E5E5"> between my device and the</font>

890
00:37:45,220 --> 00:37:50,049
server<font color="#CCCCCC"> I'd learn some TCP flags TCP</font>

891
00:37:48,310 --> 00:37:52,779
flags they're<font color="#E5E5E5"> all important to see how</font>

892
00:37:50,050 --> 00:37:55,360
things go<font color="#E5E5E5"> between a client and server</font><font color="#CCCCCC"> I</font>

893
00:37:52,780 --> 00:37:59,070
then identified some key<font color="#CCCCCC"> BOTS</font><font color="#E5E5E5"> so things</font>

894
00:37:55,360 --> 00:38:01,360
such as an agent ID or PID or a script

895
00:37:59,070 --> 00:38:03,190
which is<font color="#E5E5E5"> pretty much trial and error</font>

896
00:38:01,360 --> 00:38:05,770
which<font color="#CCCCCC"> is a fancy way for</font><font color="#E5E5E5"> me saying a</font>

897
00:38:03,190 --> 00:38:08,110
guest<font color="#CCCCCC"> and of course I stayed at</font><font color="#E5E5E5"> my</font>

898
00:38:05,770 --> 00:38:10,540
monitor profusely why because this<font color="#E5E5E5"> is</font>

899
00:38:08,110 --> 00:38:13,090
<font color="#E5E5E5">pretty much what a cake looks like it's</font>

900
00:38:10,540 --> 00:38:14,400
a whole bunch<font color="#E5E5E5"> of bot arrays and there's</font>

901
00:38:13,090 --> 00:38:16,780
some<font color="#CCCCCC"> linked lists to make</font><font color="#E5E5E5"> it interesting</font>

902
00:38:14,400 --> 00:38:21,030
<font color="#CCCCCC">but pretty much you</font><font color="#E5E5E5"> wash rinse repeat</font>

903
00:38:16,780 --> 00:38:23,770
this and that's how I ate cake<font color="#CCCCCC"> ate cakes</font>

904
00:38:21,030 --> 00:38:25,120
<font color="#E5E5E5">so this is the original path</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> PLC</font>

905
00:38:23,770 --> 00:38:27,550
someone told me that<font color="#E5E5E5"> if you're going to</font>

906
00:38:25,120 --> 00:38:30,160
<font color="#E5E5E5">talk about research</font><font color="#CCCCCC"> my math might help</font>

907
00:38:27,550 --> 00:38:32,110
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> add a little</font><font color="#E5E5E5"> bit of a story</font><font color="#CCCCCC"> so my</font>

908
00:38:30,160 --> 00:38:33,520
story is<font color="#E5E5E5"> I didn't</font><font color="#CCCCCC"> Python first that's</font>

909
00:38:32,110 --> 00:38:36,790
what it looked like<font color="#CCCCCC"> and when it actually</font>

910
00:38:33,520 --> 00:38:39,400
<font color="#E5E5E5">worked</font><font color="#CCCCCC"> so from the pcaps just copy that</font>

911
00:38:36,790 --> 00:38:41,470
<font color="#E5E5E5">the hex values and threw it into a path</font>

912
00:38:39,400 --> 00:38:43,270
<font color="#E5E5E5">and array it actually it actually worked</font>

913
00:38:41,470 --> 00:38:44,859
<font color="#CCCCCC">which kind of surprised me</font><font color="#E5E5E5"> and I don't</font>

914
00:38:43,270 --> 00:38:47,800
<font color="#E5E5E5">know why so that's what it looked like</font>

915
00:38:44,860 --> 00:38:51,550
in<font color="#E5E5E5"> the beginning and of course I'm going</font>

916
00:38:47,800 --> 00:38:56,310
<font color="#E5E5E5">to show you a demo</font><font color="#CCCCCC"> of it so right now</font>

917
00:38:51,550 --> 00:38:59,740
there is no<font color="#CCCCCC"> workstation except our</font>

918
00:38:56,310 --> 00:39:03,340
meterpreter session<font color="#E5E5E5"> we are working with</font>

919
00:38:59,740 --> 00:39:05,620
<font color="#E5E5E5">our device which has a infected</font><font color="#CCCCCC"> twitter</font>

920
00:39:03,340 --> 00:39:07,210
<font color="#E5E5E5">application now I'm on that on the</font>

921
00:39:05,620 --> 00:39:09,460
<font color="#E5E5E5">device and please do not judge</font><font color="#CCCCCC"> me for my</font>

922
00:39:07,210 --> 00:39:13,370
android UI skills that's why I am a

923
00:39:09,460 --> 00:39:15,500
security<font color="#E5E5E5"> person and not a developer so</font>

924
00:39:13,370 --> 00:39:17,029
you can run system processes which is

925
00:39:15,500 --> 00:39:20,360
the<font color="#CCCCCC"> fruit of PS so this is from</font><font color="#E5E5E5"> the app</font>

926
00:39:17,030 --> 00:39:22,430
so this is<font color="#CCCCCC"> 8kq tools but whatever name</font>

927
00:39:20,360 --> 00:39:24,650
that<font color="#E5E5E5"> method</font><font color="#CCCCCC"> I'll have to look</font><font color="#E5E5E5"> at the</font>

928
00:39:22,430 --> 00:39:26,149
documentation for<font color="#CCCCCC"> that and then of</font>

929
00:39:24,650 --> 00:39:29,120
course<font color="#CCCCCC"> you can add a PID</font><font color="#E5E5E5"> now in this</font>

930
00:39:26,150 --> 00:39:32,270
<font color="#E5E5E5">case the UI has gone a</font><font color="#CCCCCC"> bit weird but the</font>

931
00:39:29,120 --> 00:39:35,150
PID for the Twitter app is<font color="#E5E5E5"> that I give</font>

932
00:39:32,270 --> 00:39:38,540
it a refresh and I say hunt malware from

933
00:39:35,150 --> 00:39:40,970
the application<font color="#E5E5E5"> and what we have back</font><font color="#CCCCCC"> is</font>

934
00:39:38,540 --> 00:39:43,220
that<font color="#E5E5E5"> output</font><font color="#CCCCCC"> that looks</font><font color="#E5E5E5"> slightly similar</font>

935
00:39:40,970 --> 00:39:45,230
<font color="#E5E5E5">to</font><font color="#CCCCCC"> what we had</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> we ran feeder</font><font color="#E5E5E5"> from</font>

936
00:39:43,220 --> 00:39:47,209
our workstation so what the Android app

937
00:39:45,230 --> 00:39:50,090
is<font color="#CCCCCC"> doing its using the</font><font color="#E5E5E5"> ate cake library</font>

938
00:39:47,210 --> 00:39:53,000
which then goes ahead and runs all our

939
00:39:50,090 --> 00:39:54,350
<font color="#E5E5E5">freedom awesomeness which essentially</font>

940
00:39:53,000 --> 00:39:57,200
allows<font color="#CCCCCC"> us to look</font><font color="#E5E5E5"> at the heap and</font><font color="#CCCCCC"> then</font>

941
00:39:54,350 --> 00:39:59,930
give<font color="#CCCCCC"> it</font><font color="#E5E5E5"> back in a big ugly strength like</font>

942
00:39:57,200 --> 00:40:02,569
that<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is the raw API output if</font>

943
00:39:59,930 --> 00:40:06,589
this were to hypothetically be used for

944
00:40:02,570 --> 00:40:08,810
something<font color="#E5E5E5"> you would say well</font><font color="#CCCCCC"> alert</font><font color="#E5E5E5"> alert</font>

945
00:40:06,590 --> 00:40:10,520
<font color="#CCCCCC">like a</font><font color="#E5E5E5"> little snitch kind of thing the</font>

946
00:40:08,810 --> 00:40:12,710
app<font color="#E5E5E5"> that you just looked at</font><font color="#CCCCCC"> it's</font>

947
00:40:10,520 --> 00:40:14,750
communicating<font color="#E5E5E5"> to these are peas which</font>

948
00:40:12,710 --> 00:40:16,700
are blacklisted<font color="#CCCCCC"> and</font><font color="#E5E5E5"> also it's</font>

949
00:40:14,750 --> 00:40:18,950
downloading stuff off the internet<font color="#CCCCCC"> and</font>

950
00:40:16,700 --> 00:40:20,740
running that code<font color="#E5E5E5"> on your device by the</font>

951
00:40:18,950 --> 00:40:23,419
way just in<font color="#E5E5E5"> case you</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know so</font>

952
00:40:20,740 --> 00:40:26,299
that's how off<font color="#CCCCCC"> we'll see it being</font><font color="#E5E5E5"> used</font>

953
00:40:23,420 --> 00:40:29,080
in<font color="#E5E5E5"> some</font><font color="#CCCCCC"> way if it</font><font color="#E5E5E5"> is ever being</font><font color="#CCCCCC"> used so</font>

954
00:40:26,300 --> 00:40:31,240
that's how a cake works

955
00:40:29,080 --> 00:40:32,799
it's a library<font color="#E5E5E5"> it's an Android library</font>

956
00:40:31,240 --> 00:40:34,839
<font color="#E5E5E5">you can get it on github</font>

957
00:40:32,800 --> 00:40:36,940
<font color="#E5E5E5">I seen you press that publish</font><font color="#CCCCCC"> button if</font>

958
00:40:34,840 --> 00:40:37,870
the awesome delays<font color="#CCCCCC"> are we'll tweet about</font>

959
00:40:36,940 --> 00:40:40,690
<font color="#CCCCCC">us</font>

960
00:40:37,870 --> 00:40:42,100
all put it up<font color="#E5E5E5"> must you find a reliable</font>

961
00:40:40,690 --> 00:40:44,080
internet<font color="#CCCCCC"> connection someone is messing</font>

962
00:40:42,100 --> 00:40:46,690
around on the wireless<font color="#CCCCCC"> I don't know who</font>

963
00:40:44,080 --> 00:40:48,250
you are<font color="#E5E5E5"> but I will find you then there</font>

964
00:40:46,690 --> 00:40:50,890
will be some blog<font color="#E5E5E5"> posts explaining the</font>

965
00:40:48,250 --> 00:40:52,720
<font color="#E5E5E5">process behind it</font><font color="#CCCCCC"> all the Frida scripts</font>

966
00:40:50,890 --> 00:40:55,509
<font color="#E5E5E5">as well</font><font color="#CCCCCC"> if you want</font><font color="#E5E5E5"> to have a look and</font>

967
00:40:52,720 --> 00:40:58,689
then of course<font color="#E5E5E5"> the videos with that</font>

968
00:40:55,510 --> 00:41:01,510
shortened URL which is safe<font color="#E5E5E5"> it should</font>

969
00:40:58,690 --> 00:41:03,340
<font color="#CCCCCC">take you to my youtube channel but</font><font color="#E5E5E5"> then</font>

970
00:41:01,510 --> 00:41:06,940
again it has<font color="#E5E5E5"> been shortened so</font><font color="#CCCCCC"> I don't</font>

971
00:41:03,340 --> 00:41:08,890
know<font color="#CCCCCC"> FY</font><font color="#E5E5E5"> so that's where you can get some</font>

972
00:41:06,940 --> 00:41:12,850
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> of course</font>

973
00:41:08,890 --> 00:41:15,310
<font color="#CCCCCC">shortcomings I mean it's 2018 and we saw</font>

974
00:41:12,850 --> 00:41:18,100
trying to get basic security<font color="#E5E5E5"> rights not</font>

975
00:41:15,310 --> 00:41:20,529
<font color="#E5E5E5">just</font><font color="#CCCCCC"> in mobile I think especially in</font>

976
00:41:18,100 --> 00:41:22,240
<font color="#E5E5E5">mobile so if something like this were to</font>

977
00:41:20,530 --> 00:41:23,980
be implemented<font color="#CCCCCC"> internally to the</font>

978
00:41:22,240 --> 00:41:26,529
<font color="#E5E5E5">operating system because that's the idea</font>

979
00:41:23,980 --> 00:41:27,760
so if<font color="#E5E5E5"> Android went</font><font color="#CCCCCC"> ahead and said well</font>

980
00:41:26,530 --> 00:41:31,210
<font color="#CCCCCC">let's pull this into</font><font color="#E5E5E5"> the operating</font>

981
00:41:27,760 --> 00:41:34,090
<font color="#E5E5E5">system</font><font color="#CCCCCC"> and if they were to</font><font color="#E5E5E5"> expose it as</font>

982
00:41:31,210 --> 00:41:35,890
a<font color="#CCCCCC"> third-party</font><font color="#E5E5E5"> app yeah who's not going</font>

983
00:41:34,090 --> 00:41:38,290
to<font color="#CCCCCC"> abused that</font><font color="#E5E5E5"> I was the first</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> I</font>

984
00:41:35,890 --> 00:41:42,190
would<font color="#E5E5E5"> go for so there is an increased</font>

985
00:41:38,290 --> 00:41:43,630
attack surface<font color="#E5E5E5"> that's why companies pay</font>

986
00:41:42,190 --> 00:41:46,870
a lot<font color="#E5E5E5"> of clear for people</font><font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> that</font>

987
00:41:43,630 --> 00:41:49,120
problem at so those are some<font color="#E5E5E5"> of the</font>

988
00:41:46,870 --> 00:41:51,910
shortcomings where I might see it<font color="#E5E5E5"> may be</font>

989
00:41:49,120 --> 00:41:54,250
working<font color="#CCCCCC"> quite nicely</font><font color="#E5E5E5"> is an internal API</font>

990
00:41:51,910 --> 00:41:55,839
<font color="#E5E5E5">that's not necessarily exposed</font><font color="#CCCCCC"> because</font>

991
00:41:54,250 --> 00:41:57,820
hey who<font color="#CCCCCC"> wants the exposed stuff that</font>

992
00:41:55,840 --> 00:42:01,590
<font color="#E5E5E5">allows access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the heap in this case</font>

993
00:41:57,820 --> 00:42:04,510
we've<font color="#CCCCCC"> limited to reading only so yeah</font>

994
00:42:01,590 --> 00:42:06,820
which leads to the stuffs all a journey

995
00:42:04,510 --> 00:42:09,300
I think<font color="#E5E5E5"> these look actually awfully</font>

996
00:42:06,820 --> 00:42:12,420
similar to<font color="#E5E5E5"> the mountains and harderberg</font>

997
00:42:09,300 --> 00:42:14,820
but it's not<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think a cake is a step in</font>

998
00:42:12,420 --> 00:42:16,560
<font color="#E5E5E5">the</font><font color="#CCCCCC"> right direction I</font><font color="#E5E5E5"> think our current</font>

999
00:42:14,820 --> 00:42:20,220
techniques and defenses aren't working

1000
00:42:16,560 --> 00:42:22,500
as we speak<font color="#CCCCCC"> and this might be</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> way</font>

1001
00:42:20,220 --> 00:42:24,830
<font color="#CCCCCC">that might add some value</font><font color="#E5E5E5"> because</font>

1002
00:42:22,500 --> 00:42:26,010
there's no silver bullets<font color="#E5E5E5"> we want</font>

1003
00:42:24,830 --> 00:42:28,500
<font color="#E5E5E5">defense-in-depth</font>

1004
00:42:26,010 --> 00:42:31,380
<font color="#E5E5E5">we want multiple controls and I think if</font>

1005
00:42:28,500 --> 00:42:34,680
we just add a few<font color="#CCCCCC"> more capabilities like</font>

1006
00:42:31,380 --> 00:42:35,730
<font color="#E5E5E5">this it might add some value and at the</font>

1007
00:42:34,680 --> 00:42:38,069
end of<font color="#E5E5E5"> the day I think the Android</font>

1008
00:42:35,730 --> 00:42:41,220
operating system is its own worst enemy

1009
00:42:38,070 --> 00:42:42,810
<font color="#E5E5E5">and it is its best</font><font color="#CCCCCC"> ally to protect</font>

1010
00:42:41,220 --> 00:42:45,359
itself<font color="#CCCCCC"> I think it needs to implement</font>

1011
00:42:42,810 --> 00:42:47,430
<font color="#E5E5E5">more built-in</font><font color="#CCCCCC"> security mechanisms to</font>

1012
00:42:45,360 --> 00:42:48,750
help<font color="#CCCCCC"> protect itself because I don't</font>

1013
00:42:47,430 --> 00:42:50,879
think<font color="#E5E5E5"> you can rely on third-party</font>

1014
00:42:48,750 --> 00:42:53,070
applications to protect you<font color="#CCCCCC"> because</font>

1015
00:42:50,880 --> 00:42:56,310
<font color="#CCCCCC">remember if you give a third-party</font>

1016
00:42:53,070 --> 00:42:58,980
<font color="#E5E5E5">application</font><font color="#CCCCCC"> permission to monitor your</font>

1017
00:42:56,310 --> 00:43:01,350
VPN connections or to protect your

1018
00:42:58,980 --> 00:43:03,780
<font color="#E5E5E5">network connections what else are you</font>

1019
00:43:01,350 --> 00:43:04,770
allowing it to do so<font color="#E5E5E5"> those are the kinds</font>

1020
00:43:03,780 --> 00:43:08,340
of questions<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to ask</font>

1021
00:43:04,770 --> 00:43:11,120
ourselves and I<font color="#E5E5E5"> think we may</font><font color="#CCCCCC"> have some</font>

1022
00:43:08,340 --> 00:43:11,120
time for<font color="#CCCCCC"> some questions</font>

1023
00:43:11,300 --> 00:43:20,859
[Applause]

