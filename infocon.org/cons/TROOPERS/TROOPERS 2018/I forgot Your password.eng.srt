1
00:00:05,390 --> 00:00:09,920
so we continue with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> next speakers</font>

2
00:00:07,910 --> 00:00:11,540
<font color="#E5E5E5">Martin and now</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> form an abscess and</font>

3
00:00:09,920 --> 00:00:13,280
<font color="#CCCCCC">they will be speaking</font><font color="#E5E5E5"> about password</font>

4
00:00:11,540 --> 00:00:20,210
recovery mechanisms in Hana

5
00:00:13,280 --> 00:00:22,250
so please welcome them thank you<font color="#E5E5E5"> thank</font>

6
00:00:20,210 --> 00:00:24,320
you<font color="#E5E5E5"> for</font><font color="#CCCCCC"> being here today and also thank</font>

7
00:00:22,250 --> 00:00:26,840
you<font color="#E5E5E5"> for a troopers organization for such</font>

8
00:00:24,320 --> 00:00:29,690
an amazing<font color="#CCCCCC"> conference so as you know</font>

9
00:00:26,840 --> 00:00:31,850
<font color="#E5E5E5">today we will be speaking out they sit</font>

10
00:00:29,690 --> 00:00:33,890
behind<font color="#E5E5E5"> a security specifically out the</font>

11
00:00:31,850 --> 00:00:38,410
password<font color="#E5E5E5"> recovery</font><font color="#CCCCCC"> mechanism implemented</font>

12
00:00:33,890 --> 00:00:41,900
for this platform<font color="#CCCCCC"> so a disclaimer</font>

13
00:00:38,410 --> 00:00:45,290
<font color="#E5E5E5">somewhat sorry</font><font color="#CCCCCC"> about us my name is Noel</font>

14
00:00:41,900 --> 00:00:46,879
<font color="#E5E5E5">Sanchez I'm working at an abscess for</font>

15
00:00:45,290 --> 00:00:51,649
the last six<font color="#CCCCCC"> years as a security</font>

16
00:00:46,880 --> 00:00:54,460
<font color="#E5E5E5">researcher my mainly that we do research</font>

17
00:00:51,649 --> 00:00:57,170
<font color="#E5E5E5">I'm consulting please</font>

18
00:00:54,460 --> 00:00:58,760
my name is<font color="#E5E5E5"> Marta morena</font><font color="#CCCCCC"> I've been</font>

19
00:00:57,170 --> 00:01:02,570
working at the Nazis<font color="#E5E5E5"> for the past year</font>

20
00:00:58,760 --> 00:01:09,850
<font color="#E5E5E5">and my main area</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> research is</font><font color="#CCCCCC"> ACP Hana</font>

21
00:01:02,570 --> 00:01:13,310
<font color="#E5E5E5">and web applications so we</font><font color="#CCCCCC"> decided to</font>

22
00:01:09,850 --> 00:01:17,089
<font color="#CCCCCC">have three different sections on today's</font>

23
00:01:13,310 --> 00:01:20,290
talk<font color="#E5E5E5"> the first one is about channel</font>

24
00:01:17,090 --> 00:01:23,420
things our password recovery systems<font color="#E5E5E5"> we</font>

25
00:01:20,290 --> 00:01:26,090
<font color="#E5E5E5">see in different implementation</font>

26
00:01:23,420 --> 00:01:27,950
alternatives problems that developers

27
00:01:26,090 --> 00:01:32,420
could face when implementing this kind

28
00:01:27,950 --> 00:01:35,840
<font color="#E5E5E5">of systems and some mistakes at big</font>

29
00:01:32,420 --> 00:01:39,140
companies made implementing them<font color="#E5E5E5"> later</font>

30
00:01:35,840 --> 00:01:41,270
we will talk specifically about back

31
00:01:39,140 --> 00:01:43,670
some vulnerabilities that we<font color="#E5E5E5"> found in</font>

32
00:01:41,270 --> 00:01:45,798
the SMP implementation and they<font color="#E5E5E5"> see</font>

33
00:01:43,670 --> 00:01:48,259
<font color="#E5E5E5">behind implementation of a password this</font>

34
00:01:45,799 --> 00:01:49,250
password<font color="#CCCCCC"> encoding mechanism</font><font color="#E5E5E5"> and in the</font>

35
00:01:48,259 --> 00:01:51,830
last<font color="#E5E5E5"> part</font><font color="#CCCCCC"> of the talk</font>

36
00:01:49,250 --> 00:01:55,310
<font color="#E5E5E5">Martine will be showing to you how</font>

37
00:01:51,830 --> 00:01:56,869
different<font color="#E5E5E5"> bags with we found could be</font>

38
00:01:55,310 --> 00:01:57,950
chained<font color="#E5E5E5"> to fully compromised the</font>

39
00:01:56,869 --> 00:02:01,970
platform without<font color="#CCCCCC"> any kind</font><font color="#E5E5E5"> of</font>

40
00:01:57,950 --> 00:02:04,250
authentication<font color="#E5E5E5"> so when we started our</font>

41
00:02:01,970 --> 00:02:06,829
research<font color="#E5E5E5"> one question</font><font color="#CCCCCC"> that we had was</font>

42
00:02:04,250 --> 00:02:09,199
<font color="#E5E5E5">why attack this kind of code or these</font>

43
00:02:06,829 --> 00:02:11,900
functionalities<font color="#CCCCCC"> there are quite a lot of</font>

44
00:02:09,199 --> 00:02:15,619
reasons<font color="#E5E5E5"> but for us the most important</font>

45
00:02:11,900 --> 00:02:18,080
are those the<font color="#E5E5E5"> first one is that</font><font color="#CCCCCC"> it will</font>

46
00:02:15,620 --> 00:02:18,740
be present<font color="#CCCCCC"> in</font><font color="#E5E5E5"> almost every modern system</font>

47
00:02:18,080 --> 00:02:21,080
you can<font color="#E5E5E5"> think</font>

48
00:02:18,740 --> 00:02:24,440
online<font color="#E5E5E5"> services Google Microsoft</font>

49
00:02:21,080 --> 00:02:27,260
Facebook<font color="#CCCCCC"> also you can think on</font><font color="#E5E5E5"> your</font>

50
00:02:24,440 --> 00:02:29,840
company<font color="#E5E5E5"> maybe you have an enterprise</font>

51
00:02:27,260 --> 00:02:32,149
system<font color="#E5E5E5"> which also includes in a way to</font>

52
00:02:29,840 --> 00:02:36,290
allow<font color="#E5E5E5"> users to create new accounts</font>

53
00:02:32,150 --> 00:02:38,210
<font color="#E5E5E5">without user interaction or at least to</font>

54
00:02:36,290 --> 00:02:41,299
recover<font color="#E5E5E5"> password of already created</font>

55
00:02:38,210 --> 00:02:44,600
accounts<font color="#CCCCCC"> a good</font><font color="#E5E5E5"> one is there isn't any</font>

56
00:02:41,300 --> 00:02:47,630
good<font color="#E5E5E5"> default</font><font color="#CCCCCC"> solution</font><font color="#E5E5E5"> to a guy</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> given</font>

57
00:02:44,600 --> 00:02:51,530
this there is some link in the<font color="#E5E5E5"> August</font>

58
00:02:47,630 --> 00:02:53,630
project that speaks about problems or or

59
00:02:51,530 --> 00:02:55,700
challenges<font color="#E5E5E5"> that developers could face</font>

60
00:02:53,630 --> 00:02:57,890
implementing these kind of things<font color="#E5E5E5"> but</font>

61
00:02:55,700 --> 00:03:02,619
<font color="#E5E5E5">there isn't any out-of-the-box solution</font>

62
00:02:57,890 --> 00:03:05,540
that could work at least for every part

63
00:03:02,620 --> 00:03:08,630
the third reason is<font color="#E5E5E5"> a complexity of this</font>

64
00:03:05,540 --> 00:03:10,820
curve we tend to see<font color="#E5E5E5"> that these kind of</font>

65
00:03:08,630 --> 00:03:13,310
<font color="#E5E5E5">things from time to time has developed</font>

66
00:03:10,820 --> 00:03:15,859
developed by junior<font color="#E5E5E5"> developers and seen</font>

67
00:03:13,310 --> 00:03:18,590
just as a small part<font color="#E5E5E5"> of our really</font>

68
00:03:15,860 --> 00:03:20,900
<font color="#E5E5E5">complex application what leads that</font>

69
00:03:18,590 --> 00:03:23,150
having bugs in this code could lead to<font color="#E5E5E5"> a</font>

70
00:03:20,900 --> 00:03:26,120
full<font color="#E5E5E5"> compromise of a</font><font color="#CCCCCC"> plateau of</font><font color="#E5E5E5"> the</font>

71
00:03:23,150 --> 00:03:28,190
platform<font color="#E5E5E5"> as we will see that this kind</font>

72
00:03:26,120 --> 00:03:30,020
of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> performs really critical actions</font>

73
00:03:28,190 --> 00:03:31,690
such as<font color="#E5E5E5"> creating accounts changing</font>

74
00:03:30,020 --> 00:03:36,800
passwords the activating accounts and

75
00:03:31,690 --> 00:03:39,740
<font color="#E5E5E5">others as well unless what whether they</font>

76
00:03:36,800 --> 00:03:41,930
sell this<font color="#E5E5E5"> kind of functions</font><font color="#CCCCCC"> these kind</font>

77
00:03:39,740 --> 00:03:44,770
of functionalities in enterprise

78
00:03:41,930 --> 00:03:48,560
software<font color="#E5E5E5"> or in applications have</font><font color="#CCCCCC"> a</font>

79
00:03:44,770 --> 00:03:49,490
really high impact<font color="#E5E5E5"> as they perform</font>

80
00:03:48,560 --> 00:03:51,410
<font color="#CCCCCC">critical actions</font>

81
00:03:49,490 --> 00:03:54,560
<font color="#E5E5E5">changing passwords</font><font color="#CCCCCC"> including accounts</font>

82
00:03:51,410 --> 00:03:56,060
and<font color="#E5E5E5"> so of course most of the time this</font>

83
00:03:54,560 --> 00:03:58,250
functions are performed without

84
00:03:56,060 --> 00:04:01,010
<font color="#CCCCCC">authentication</font><font color="#E5E5E5"> as the main purpose is</font>

85
00:03:58,250 --> 00:04:04,100
creating<font color="#CCCCCC"> new accounts and one thing that</font>

86
00:04:01,010 --> 00:04:06,590
<font color="#CCCCCC">is important is it's</font><font color="#E5E5E5"> possible or we have</font>

87
00:04:04,100 --> 00:04:08,870
seen<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> difference and it's</font>

88
00:04:06,590 --> 00:04:12,230
possible<font color="#E5E5E5"> to configure to</font><font color="#CCCCCC"> develop this</font>

89
00:04:08,870 --> 00:04:16,540
kind of systems with the idea<font color="#CCCCCC"> of having</font>

90
00:04:12,230 --> 00:04:16,539
approval or not from from administrators

91
00:04:18,000 --> 00:04:25,569
here we have some default or the most

92
00:04:22,479 --> 00:04:27,969
<font color="#E5E5E5">common ways of doing this or what we</font>

93
00:04:25,569 --> 00:04:30,039
<font color="#E5E5E5">have seen the first one is plain text</font>

94
00:04:27,970 --> 00:04:33,430
storage and retrieval of credential

95
00:04:30,039 --> 00:04:36,818
<font color="#E5E5E5">obviously it's a really big fail you you</font>

96
00:04:33,430 --> 00:04:39,759
may know why the second one<font color="#E5E5E5"> and really</font>

97
00:04:36,819 --> 00:04:41,949
common is<font color="#CCCCCC"> to have a password</font><font color="#E5E5E5"> reset</font>

98
00:04:39,759 --> 00:04:43,840
mechanism that<font color="#E5E5E5"> resets useful passwords</font>

99
00:04:41,949 --> 00:04:45,729
to a random value this could be a good

100
00:04:43,840 --> 00:04:48,729
idea<font color="#E5E5E5"> the the</font><font color="#CCCCCC"> important thing here to</font>

101
00:04:45,729 --> 00:04:52,570
<font color="#E5E5E5">having - how</font><font color="#CCCCCC"> it's implemented there was</font>

102
00:04:48,729 --> 00:04:56,020
a bug<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> years ago affecting PHP</font><font color="#CCCCCC"> VV</font>

103
00:04:52,570 --> 00:04:58,419
<font color="#CCCCCC">forms very common forms that once an</font>

104
00:04:56,020 --> 00:05:01,060
attacker<font color="#E5E5E5"> reset his password to unknown</font>

105
00:04:58,419 --> 00:05:04,090
new and random value he could predict

106
00:05:01,060 --> 00:05:05,639
every new password<font color="#E5E5E5"> that was generated</font><font color="#CCCCCC"> by</font>

107
00:05:04,090 --> 00:05:10,119
<font color="#E5E5E5">the system</font><font color="#CCCCCC"> allowing</font><font color="#E5E5E5"> him to of course</font>

108
00:05:05,639 --> 00:05:12,039
take over any account created<font color="#E5E5E5"> they</font>

109
00:05:10,120 --> 00:05:14,650
<font color="#E5E5E5">served the service on the third metal</font>

110
00:05:12,039 --> 00:05:19,690
sorry<font color="#E5E5E5"> it's the the classic email we said</font>

111
00:05:14,650 --> 00:05:23,138
link this normally is used a<font color="#E5E5E5"> lot</font>

112
00:05:19,690 --> 00:05:25,810
<font color="#CCCCCC">omitting the</font><font color="#E5E5E5"> the common way</font><font color="#CCCCCC"> of ending it</font>

113
00:05:23,139 --> 00:05:28,630
is including like one<font color="#CCCCCC"> use token or</font>

114
00:05:25,810 --> 00:05:30,909
something like<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like that the</font>

115
00:05:28,630 --> 00:05:32,919
last<font color="#E5E5E5"> and also really common is the</font>

116
00:05:30,909 --> 00:05:34,930
security questions and answers during

117
00:05:32,919 --> 00:05:37,810
account<font color="#E5E5E5"> setup a user picks some</font>

118
00:05:34,930 --> 00:05:40,120
questions<font color="#E5E5E5"> and he has to put some answers</font>

119
00:05:37,810 --> 00:05:42,250
in the moment heavy he wants to visit

120
00:05:40,120 --> 00:05:44,560
the password you<font color="#CCCCCC"> already know how that</font>

121
00:05:42,250 --> 00:05:47,759
works<font color="#E5E5E5"> also</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> a really</font><font color="#CCCCCC"> good idea</font>

122
00:05:44,560 --> 00:05:50,949
<font color="#CCCCCC">as some Hollywood</font><font color="#E5E5E5"> people can tell you</font><font color="#CCCCCC"> a</font>

123
00:05:47,759 --> 00:05:55,180
<font color="#CCCCCC">CP</font><font color="#E5E5E5"> Hana is using a combination of these</font>

124
00:05:50,949 --> 00:06:00,400
two<font color="#E5E5E5"> options we will see how it works in</font>

125
00:05:55,180 --> 00:06:04,000
detail<font color="#E5E5E5"> later one thing we wanted to to</font>

126
00:06:00,400 --> 00:06:06,219
to show onto also to<font color="#CCCCCC"> explain to you is</font>

127
00:06:04,000 --> 00:06:09,280
that it's<font color="#E5E5E5"> not easy to create or to</font>

128
00:06:06,219 --> 00:06:11,620
<font color="#E5E5E5">develop this kind of code one can think</font>

129
00:06:09,280 --> 00:06:14,049
<font color="#E5E5E5">that junior</font><font color="#CCCCCC"> labelled developers who made</font>

130
00:06:11,620 --> 00:06:16,000
mistakes<font color="#CCCCCC"> or small companies but here we</font>

131
00:06:14,050 --> 00:06:18,310
have three different<font color="#CCCCCC"> examples of</font><font color="#E5E5E5"> really</font>

132
00:06:16,000 --> 00:06:21,009
big companies or tech companies<font color="#CCCCCC"> and</font><font color="#E5E5E5"> a</font>

133
00:06:18,310 --> 00:06:23,469
really really<font color="#E5E5E5"> important that made some</font>

134
00:06:21,009 --> 00:06:25,180
that had some bugs<font color="#E5E5E5"> in their systems and</font>

135
00:06:23,469 --> 00:06:28,060
<font color="#E5E5E5">at least in the password recording</font>

136
00:06:25,180 --> 00:06:31,180
mechanisms<font color="#E5E5E5"> here you can have the three</font>

137
00:06:28,060 --> 00:06:32,880
<font color="#CCCCCC">different</font><font color="#E5E5E5"> links to to check the details</font>

138
00:06:31,180 --> 00:06:36,400
for us the most interesting was

139
00:06:32,880 --> 00:06:40,300
affecting<font color="#CCCCCC"> Google the part of who related</font>

140
00:06:36,400 --> 00:06:42,190
with Gmail it<font color="#E5E5E5"> allow users an attacker to</font>

141
00:06:40,300 --> 00:06:43,600
change some different and small<font color="#E5E5E5"> bugs</font>

142
00:06:42,190 --> 00:06:45,490
such as<font color="#E5E5E5"> a</font><font color="#CCCCCC"> cross-site scripting</font><font color="#E5E5E5"> a</font>

143
00:06:43,600 --> 00:06:48,190
cross-site request forgery<font color="#E5E5E5"> another as</font>

144
00:06:45,490 --> 00:06:51,759
well<font color="#CCCCCC"> to trick a user into once he is</font>

145
00:06:48,190 --> 00:06:57,729
resetting his<font color="#E5E5E5"> password sending the new</font>

146
00:06:51,759 --> 00:07:02,259
<font color="#E5E5E5">passwords to attacker so while we found</font>

147
00:06:57,729 --> 00:07:04,210
in the<font color="#CCCCCC"> SAV</font><font color="#E5E5E5"> user self-service some</font>

148
00:07:02,259 --> 00:07:06,970
enjoyed three words for<font color="#E5E5E5"> those that</font><font color="#CCCCCC"> are</font>

149
00:07:04,210 --> 00:07:08,919
not used to<font color="#E5E5E5"> a</font><font color="#CCCCCC"> CP Hana I say be Hana it's</font>

150
00:07:06,970 --> 00:07:11,020
an in-memory database it's a really

151
00:07:08,919 --> 00:07:13,330
important<font color="#CCCCCC"> pulp recipe as it's the</font>

152
00:07:11,020 --> 00:07:16,120
default<font color="#E5E5E5"> database for all its new</font>

153
00:07:13,330 --> 00:07:19,389
subpoenaed<font color="#E5E5E5"> even installation but also it</font>

154
00:07:16,120 --> 00:07:21,580
includes<font color="#CCCCCC"> what a development platform and</font>

155
00:07:19,389 --> 00:07:23,410
what application server that allows<font color="#E5E5E5"> a</font>

156
00:07:21,580 --> 00:07:26,349
<font color="#CCCCCC">see behind developers to create</font>

157
00:07:23,410 --> 00:07:29,380
<font color="#CCCCCC">applications in a language called xsj</font>

158
00:07:26,349 --> 00:07:32,139
yes<font color="#E5E5E5"> now there will be more languages</font>

159
00:07:29,380 --> 00:07:35,199
<font color="#E5E5E5">available but at least</font><font color="#CCCCCC"> before this xsj</font>

160
00:07:32,139 --> 00:07:38,639
<font color="#E5E5E5">yes and this allows them to rapidly</font>

161
00:07:35,199 --> 00:07:41,349
prototype and design new<font color="#E5E5E5"> applications</font>

162
00:07:38,639 --> 00:07:43,300
those<font color="#E5E5E5"> applications run in a web</font>

163
00:07:41,349 --> 00:07:48,789
<font color="#E5E5E5">application server that burns with the</font>

164
00:07:43,300 --> 00:07:51,610
<font color="#E5E5E5">data they use</font><font color="#CCCCCC"> all cell</font><font color="#E5E5E5"> service it's the</font>

165
00:07:48,789 --> 00:07:54,729
default application<font color="#E5E5E5"> that was created</font><font color="#CCCCCC"> to</font>

166
00:07:51,610 --> 00:07:56,860
<font color="#E5E5E5">allow Hana users to reset and to ask for</font>

167
00:07:54,729 --> 00:07:59,710
<font color="#E5E5E5">new</font><font color="#CCCCCC"> accounts it was decided by default</font>

168
00:07:56,860 --> 00:08:02,740
<font color="#E5E5E5">so companies wanting to use it</font>

169
00:07:59,710 --> 00:08:05,258
shooting<font color="#E5E5E5"> should have</font><font color="#CCCCCC"> to sorry to to</font>

170
00:08:02,740 --> 00:08:08,970
enable it<font color="#E5E5E5"> it was available by</font><font color="#CCCCCC"> default</font>

171
00:08:05,259 --> 00:08:12,580
with the<font color="#CCCCCC"> same pecan isolation</font><font color="#E5E5E5"> it was</font>

172
00:08:08,970 --> 00:08:15,880
possible to<font color="#E5E5E5"> use</font><font color="#CCCCCC"> it from SPS</font><font color="#E5E5E5"> 9 until SPS</font>

173
00:08:12,580 --> 00:08:19,508
12 and what we found is a<font color="#E5E5E5"> led that we</font>

174
00:08:15,880 --> 00:08:22,870
<font color="#E5E5E5">found here were presented on until</font><font color="#CCCCCC"> XPS</font>

175
00:08:19,509 --> 00:08:28,720
<font color="#CCCCCC">12 so it was</font><font color="#E5E5E5"> possible for an attacker to</font>

176
00:08:22,870 --> 00:08:31,090
use them<font color="#E5E5E5"> during all this time and what</font>

177
00:08:28,720 --> 00:08:33,909
we found was that<font color="#CCCCCC"> what different kind of</font>

178
00:08:31,090 --> 00:08:35,319
facts<font color="#E5E5E5"> from</font><font color="#CCCCCC"> Sione sections</font><font color="#E5E5E5"> user</font>

179
00:08:33,909 --> 00:08:37,870
<font color="#E5E5E5">numeration attacks that are really</font>

180
00:08:35,320 --> 00:08:41,110
common in<font color="#E5E5E5"> use of recording mechanisms</font>

181
00:08:37,870 --> 00:08:43,690
<font color="#E5E5E5">but also logic errors or designers as</font>

182
00:08:41,110 --> 00:08:45,040
well<font color="#CCCCCC"> as we will we will</font><font color="#E5E5E5"> see it was</font>

183
00:08:43,690 --> 00:08:46,990
developed in this

184
00:08:45,040 --> 00:08:48,849
<font color="#CCCCCC">probably language called access to yes</font>

185
00:08:46,990 --> 00:08:51,449
<font color="#CCCCCC">that is</font><font color="#E5E5E5"> kind of JavaScript but</font>

186
00:08:48,850 --> 00:08:51,449
<font color="#E5E5E5">server-side</font>

187
00:08:59,690 --> 00:09:06,450
here we have what the user sees<font color="#E5E5E5"> when</font>

188
00:09:04,080 --> 00:09:08,880
tries to use this application<font color="#CCCCCC"> he can</font>

189
00:09:06,450 --> 00:09:11,220
reset his password is his he has already

190
00:09:08,880 --> 00:09:13,950
an<font color="#E5E5E5"> account one also</font><font color="#CCCCCC"> asked for a new</font>

191
00:09:11,220 --> 00:09:15,780
<font color="#E5E5E5">account</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> the account</font>

192
00:09:13,950 --> 00:09:18,890
creation<font color="#CCCCCC"> process could</font><font color="#E5E5E5"> be confused</font><font color="#CCCCCC"> to</font>

193
00:09:15,780 --> 00:09:22,740
ask Anna straighter user for approval or

194
00:09:18,890 --> 00:09:24,810
<font color="#CCCCCC">not depends on on</font><font color="#E5E5E5"> the configuration but</font>

195
00:09:22,740 --> 00:09:27,210
how this application interacts with the

196
00:09:24,810 --> 00:09:30,239
data<font color="#CCCCCC"> as I explained it this is running</font>

197
00:09:27,210 --> 00:09:35,190
<font color="#E5E5E5">in our application server that interacts</font>

198
00:09:30,240 --> 00:09:38,580
<font color="#CCCCCC">with a</font><font color="#E5E5E5"> database we</font><font color="#CCCCCC"> have our</font><font color="#E5E5E5"> us user</font>

199
00:09:35,190 --> 00:09:41,250
<font color="#CCCCCC">self-service</font><font color="#E5E5E5"> front-end</font><font color="#CCCCCC"> that in the in</font>

200
00:09:38,580 --> 00:09:44,040
the<font color="#E5E5E5"> bagon uses this a big</font><font color="#CCCCCC"> hand address</font>

201
00:09:41,250 --> 00:09:46,650
and to connect with<font color="#E5E5E5"> them it's near a</font>

202
00:09:44,040 --> 00:09:48,180
technical user this<font color="#CCCCCC"> is a special kind of</font>

203
00:09:46,650 --> 00:09:50,660
user<font color="#CCCCCC"> that cannot</font><font color="#E5E5E5"> be used to</font><font color="#CCCCCC"> login</font>

204
00:09:48,180 --> 00:09:53,310
<font color="#E5E5E5">interactive in the platform that user</font>

205
00:09:50,660 --> 00:09:57,780
<font color="#E5E5E5">includes on a specific role that will</font>

206
00:09:53,310 --> 00:10:01,290
allow it to modify or to<font color="#E5E5E5"> create user we</font>

207
00:09:57,780 --> 00:10:03,600
will see the privileges<font color="#E5E5E5"> later and this</font>

208
00:10:01,290 --> 00:10:07,230
both these two things are confuse

209
00:10:03,600 --> 00:10:09,360
in this sequel<font color="#E5E5E5"> CC file amplify that this</font>

210
00:10:07,230 --> 00:10:14,990
kind of a configuration<font color="#E5E5E5"> connect a</font>

211
00:10:09,360 --> 00:10:18,600
connection of<font color="#CCCCCC"> eurasian file so</font><font color="#E5E5E5"> let's</font>

212
00:10:14,990 --> 00:10:21,920
<font color="#CCCCCC">explain it we need a</font><font color="#E5E5E5"> data is user new</font>

213
00:10:18,600 --> 00:10:24,480
users for users or new accounts in

214
00:10:21,920 --> 00:10:25,949
<font color="#E5E5E5">required by new users</font><font color="#CCCCCC"> i'll</font><font color="#E5E5E5"> created a</font>

215
00:10:24,480 --> 00:10:30,090
<font color="#E5E5E5">data</font><font color="#CCCCCC"> each level</font><font color="#E5E5E5"> that's an important</font>

216
00:10:25,950 --> 00:10:32,430
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> to mention and because of that the</font>

217
00:10:30,090 --> 00:10:36,240
<font color="#E5E5E5">freights required by the application</font><font color="#CCCCCC"> to</font>

218
00:10:32,430 --> 00:10:40,229
properly work<font color="#E5E5E5"> a little bit high I mean</font>

219
00:10:36,240 --> 00:10:42,810
it will<font color="#E5E5E5"> need the to execute create user</font>

220
00:10:40,230 --> 00:10:45,350
role to use a sequel statements and that

221
00:10:42,810 --> 00:10:48,920
means that it will<font color="#E5E5E5"> have</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> privilege</font>

222
00:10:45,350 --> 00:10:51,510
user admin privilege to to properly work

223
00:10:48,920 --> 00:10:54,930
<font color="#E5E5E5">some interesting design decision made by</font>

224
00:10:51,510 --> 00:10:57,090
ASAP was that there<font color="#CCCCCC"> isn't any</font><font color="#E5E5E5"> god or</font>

225
00:10:54,930 --> 00:10:58,650
untouchable user view we have the system

226
00:10:57,090 --> 00:11:02,310
user<font color="#E5E5E5"> nothing will be</font><font color="#CCCCCC"> talked about that</font>

227
00:10:58,650 --> 00:11:04,350
<font color="#E5E5E5">later</font><font color="#CCCCCC"> but any user</font><font color="#E5E5E5"> having the proper</font>

228
00:11:02,310 --> 00:11:07,140
rights to<font color="#E5E5E5"> create or the</font><font color="#CCCCCC"> user so to</font><font color="#E5E5E5"> know</font>

229
00:11:04,350 --> 00:11:09,510
<font color="#E5E5E5">if a user can even modify the system</font>

230
00:11:07,140 --> 00:11:11,449
<font color="#CCCCCC">user that's important because we later</font>

231
00:11:09,510 --> 00:11:13,939
we will present<font color="#E5E5E5"> an attack</font>

232
00:11:11,450 --> 00:11:15,980
abusing that<font color="#E5E5E5"> and of</font><font color="#CCCCCC"> course it's not</font>

233
00:11:13,940 --> 00:11:17,780
<font color="#CCCCCC">possible to this to us</font><font color="#E5E5E5"> help us what we</font>

234
00:11:15,980 --> 00:11:22,760
said<font color="#E5E5E5"> for the system user the application</font>

235
00:11:17,780 --> 00:11:25,370
won't let you the<font color="#E5E5E5"> word</font><font color="#CCCCCC"> a quick recap of</font>

236
00:11:22,760 --> 00:11:27,610
<font color="#E5E5E5">how the freshest</font><font color="#CCCCCC"> eration of the password</font>

237
00:11:25,370 --> 00:11:31,130
reset<font color="#E5E5E5"> process works once the user clicks</font>

238
00:11:27,610 --> 00:11:32,960
<font color="#CCCCCC">the link for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> reset password the</font>

239
00:11:31,130 --> 00:11:35,510
web application sends an email

240
00:11:32,960 --> 00:11:40,490
<font color="#E5E5E5">containing a link with a token</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it</font>

241
00:11:35,510 --> 00:11:44,330
<font color="#CCCCCC">can Lee we use one time and the user</font>

242
00:11:40,490 --> 00:11:48,200
<font color="#E5E5E5">once the user receives that</font><font color="#CCCCCC"> email he has</font>

243
00:11:44,330 --> 00:11:50,270
to complete<font color="#E5E5E5"> some some information such</font>

244
00:11:48,200 --> 00:11:54,110
as a new password or<font color="#E5E5E5"> the security answer</font>

245
00:11:50,270 --> 00:11:57,770
and that's<font color="#E5E5E5"> performed using a post</font>

246
00:11:54,110 --> 00:12:03,440
request<font color="#E5E5E5"> but what is happening a database</font>

247
00:11:57,770 --> 00:12:04,910
level<font color="#CCCCCC"> ok once the email was</font><font color="#E5E5E5"> sent</font>

248
00:12:03,440 --> 00:12:07,250
suppose<font color="#CCCCCC"> that the user</font><font color="#E5E5E5"> is asking for a</font>

249
00:12:04,910 --> 00:12:09,290
new account<font color="#CCCCCC"> once the email containing</font>

250
00:12:07,250 --> 00:12:12,080
the<font color="#E5E5E5"> token was sent the account is</font>

251
00:12:09,290 --> 00:12:14,209
<font color="#E5E5E5">already created and database level the</font>

252
00:12:12,080 --> 00:12:16,700
only<font color="#CCCCCC"> thing that it remains to</font><font color="#E5E5E5"> to even</font>

253
00:12:14,210 --> 00:12:18,440
<font color="#E5E5E5">from is to activate it</font><font color="#CCCCCC"> it's really</font>

254
00:12:16,700 --> 00:12:20,630
<font color="#E5E5E5">important to understand that once the</font>

255
00:12:18,440 --> 00:12:22,700
user asked for the account besides the

256
00:12:20,630 --> 00:12:24,050
administrator approved it or not<font color="#E5E5E5"> the</font>

257
00:12:22,700 --> 00:12:26,420
account is<font color="#CCCCCC"> already created by the</font>

258
00:12:24,050 --> 00:12:29,199
<font color="#CCCCCC">activator and it's also created with a</font>

259
00:12:26,420 --> 00:12:29,199
random<font color="#CCCCCC"> password</font>

260
00:12:31,740 --> 00:12:38,670
<font color="#CCCCCC">oh sorry</font><font color="#E5E5E5"> when the user wants</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> receive</font>

261
00:12:36,750 --> 00:12:41,760
the confirmation you made the email

262
00:12:38,670 --> 00:12:44,099
confirming his own email and has to

263
00:12:41,760 --> 00:12:46,980
complete in the case of the<font color="#CCCCCC"> registration</font>

264
00:12:44,100 --> 00:12:48,630
<font color="#E5E5E5">process has to select a security</font>

265
00:12:46,980 --> 00:12:52,410
question and<font color="#E5E5E5"> put an answer</font>

266
00:12:48,630 --> 00:12:54,390
that also is a store in a in a

267
00:12:52,410 --> 00:12:56,579
predictable way for the attacker<font color="#E5E5E5"> in the</font>

268
00:12:54,390 --> 00:12:58,110
<font color="#CCCCCC">latter's</font><font color="#E5E5E5"> that's another thing as Martin</font>

269
00:12:56,580 --> 00:13:00,990
will be explaining<font color="#E5E5E5"> a little bit more</font>

270
00:12:58,110 --> 00:13:03,990
detail later<font color="#CCCCCC"> but just</font><font color="#E5E5E5"> keep that</font><font color="#CCCCCC"> in mind</font>

271
00:13:00,990 --> 00:13:07,320
security question answer and the token

272
00:13:03,990 --> 00:13:10,170
are all things story in the<font color="#E5E5E5"> rabbi's so</font>

273
00:13:07,320 --> 00:13:12,120
I'll show<font color="#E5E5E5"> you some</font><font color="#CCCCCC"> bugs</font><font color="#E5E5E5"> that we found</font>

274
00:13:10,170 --> 00:13:15,000
<font color="#E5E5E5">during our research and Martin later</font>

275
00:13:12,120 --> 00:13:17,820
<font color="#E5E5E5">will show another different</font><font color="#CCCCCC"> box that</font>

276
00:13:15,000 --> 00:13:22,050
could be used with<font color="#E5E5E5"> this also with this</font>

277
00:13:17,820 --> 00:13:24,570
price to make a full attack<font color="#CCCCCC"> the first</font>

278
00:13:22,050 --> 00:13:27,750
one as I<font color="#E5E5E5"> explained it is pretty basic</font>

279
00:13:24,570 --> 00:13:29,940
<font color="#CCCCCC">and almost we saw when doing this</font>

280
00:13:27,750 --> 00:13:31,770
research<font color="#E5E5E5"> that a lot of possible</font>

281
00:13:29,940 --> 00:13:34,350
recording mechanisms were affected by

282
00:13:31,770 --> 00:13:37,260
this<font color="#CCCCCC"> also there</font><font color="#E5E5E5"> is a lot of bug bounties</font>

283
00:13:34,350 --> 00:13:38,280
<font color="#E5E5E5">that paid these kind of things it's a</font>

284
00:13:37,260 --> 00:13:41,310
user numeration

285
00:13:38,280 --> 00:13:46,380
I think I already all know that<font color="#E5E5E5"> what's</font>

286
00:13:41,310 --> 00:13:50,000
about<font color="#E5E5E5"> an attacker abusing this this URL</font>

287
00:13:46,380 --> 00:13:52,710
and sending<font color="#CCCCCC"> Shaitaan</font><font color="#E5E5E5"> like this one could</font>

288
00:13:50,000 --> 00:13:54,360
know which accounts or<font color="#E5E5E5"> user name</font>

289
00:13:52,710 --> 00:13:56,700
<font color="#E5E5E5">accounts are valid or and which not</font>

290
00:13:54,360 --> 00:13:59,600
based on<font color="#E5E5E5"> the different error message</font>

291
00:13:56,700 --> 00:14:02,550
that is shown by<font color="#CCCCCC"> the</font><font color="#E5E5E5"> web application</font>

292
00:13:59,600 --> 00:14:05,490
allowing him to after that<font color="#E5E5E5"> for example</font>

293
00:14:02,550 --> 00:14:07,199
<font color="#E5E5E5">try to</font><font color="#CCCCCC"> brute-force</font><font color="#E5E5E5"> an account to fix</font>

294
00:14:05,490 --> 00:14:09,720
this<font color="#CCCCCC"> I</font><font color="#E5E5E5"> say be released and I</font><font color="#CCCCCC"> say be</font>

295
00:14:07,200 --> 00:14:11,340
<font color="#E5E5E5">security note all one thing I think</font><font color="#CCCCCC"> the</font>

296
00:14:09,720 --> 00:14:13,530
animation is at all back so we<font color="#E5E5E5"> are</font>

297
00:14:11,340 --> 00:14:16,850
showing today<font color="#E5E5E5"> I've already patch by ASAP</font>

298
00:14:13,530 --> 00:14:19,140
and there is a security<font color="#E5E5E5"> note fixing them</font>

299
00:14:16,850 --> 00:14:21,150
you should implement the security note

300
00:14:19,140 --> 00:14:24,300
and<font color="#E5E5E5"> it's not possible</font><font color="#CCCCCC"> that you can</font>

301
00:14:21,150 --> 00:14:26,610
update your<font color="#CCCCCC"> system</font><font color="#E5E5E5"> to these versions you</font>

302
00:14:24,300 --> 00:14:29,670
should only allow access<font color="#CCCCCC"> to</font><font color="#E5E5E5"> this</font>

303
00:14:26,610 --> 00:14:33,180
application<font color="#CCCCCC"> to trusted host</font><font color="#E5E5E5"> or disable</font>

304
00:14:29,670 --> 00:14:34,530
it is you are<font color="#E5E5E5"> not using it anymore the</font>

305
00:14:33,180 --> 00:14:38,010
second bag is a<font color="#E5E5E5"> little bit more</font>

306
00:14:34,530 --> 00:14:40,290
interesting as I<font color="#E5E5E5"> explained it you</font><font color="#CCCCCC"> can</font>

307
00:14:38,010 --> 00:14:42,600
configure your<font color="#CCCCCC"> recipe Hannah system to</font>

308
00:14:40,290 --> 00:14:44,880
send emails to users but<font color="#CCCCCC"> also to</font>

309
00:14:42,600 --> 00:14:45,540
administrate or asking them<font color="#CCCCCC"> to activate</font>

310
00:14:44,880 --> 00:14:48,660
<font color="#E5E5E5">user</font>

311
00:14:45,540 --> 00:14:51,569
bounce<font color="#CCCCCC"> those emails</font><font color="#E5E5E5"> are based on a</font>

312
00:14:48,660 --> 00:14:54,810
template we have<font color="#E5E5E5"> the template here for</font>

313
00:14:51,570 --> 00:14:57,149
the user<font color="#E5E5E5"> and the administrator as we can</font>

314
00:14:54,810 --> 00:14:59,189
see there are sent<font color="#E5E5E5"> at certain parts of</font>

315
00:14:57,149 --> 00:15:02,810
thing mail<font color="#E5E5E5"> that has to be completed on</font>

316
00:14:59,190 --> 00:15:05,040
<font color="#CCCCCC">run time</font><font color="#E5E5E5"> or when they mail sent and</font>

317
00:15:02,810 --> 00:15:08,008
checking the code that created those

318
00:15:05,040 --> 00:15:10,889
emails<font color="#CCCCCC"> we found that the code used the</font>

319
00:15:08,009 --> 00:15:13,680
<font color="#CCCCCC">hare</font><font color="#E5E5E5"> host without any kind of</font>

320
00:15:10,889 --> 00:15:15,269
standardization<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> header is</font>

321
00:15:13,680 --> 00:15:18,899
controlled by<font color="#E5E5E5"> the attacker</font>

322
00:15:15,269 --> 00:15:20,550
what he can do it's just<font color="#E5E5E5"> to inject that</font>

323
00:15:18,899 --> 00:15:24,269
with ready<font color="#E5E5E5"> content in the English this</font>

324
00:15:20,550 --> 00:15:26,609
<font color="#CCCCCC">is a really good attack vector for</font>

325
00:15:24,269 --> 00:15:28,800
example to perform phishing attacks over

326
00:15:26,610 --> 00:15:32,899
the Miss rate or user<font color="#E5E5E5"> we will see a demo</font>

327
00:15:28,800 --> 00:15:32,899
<font color="#CCCCCC">of that in a second</font>

328
00:15:52,850 --> 00:15:59,199
here we have the<font color="#E5E5E5"> the attacker asking</font><font color="#CCCCCC"> for</font>

329
00:15:56,750 --> 00:15:59,199
a new<font color="#E5E5E5"> account</font>

330
00:16:02,290 --> 00:16:08,259
while we what he will be<font color="#CCCCCC"> doing is using</font>

331
00:16:04,810 --> 00:16:10,268
warp to capture the HTTP<font color="#CCCCCC"> requests</font><font color="#E5E5E5"> from</font>

332
00:16:08,259 --> 00:16:13,690
<font color="#CCCCCC">formerly the application and allowing</font>

333
00:16:10,269 --> 00:16:16,180
him to modify it here we have the

334
00:16:13,690 --> 00:16:20,079
request of<font color="#E5E5E5"> this</font><font color="#CCCCCC"> mail the first one</font><font color="#E5E5E5"> now</font>

335
00:16:16,180 --> 00:16:23,859
this request<font color="#CCCCCC"> will be</font><font color="#E5E5E5"> creating</font><font color="#CCCCCC"> the that</font>

336
00:16:20,079 --> 00:16:26,949
we asked will be performing<font color="#E5E5E5"> the action</font>

337
00:16:23,860 --> 00:16:33,430
of creating account and<font color="#E5E5E5"> we has what he's</font>

338
00:16:26,949 --> 00:16:35,680
doing is changing changing the host the

339
00:16:33,430 --> 00:16:38,949
host<font color="#CCCCCC"> here</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> that he controls</font>

340
00:16:35,680 --> 00:16:42,540
<font color="#E5E5E5">he can put anything there in this case</font>

341
00:16:38,949 --> 00:16:45,279
<font color="#E5E5E5">he will use</font><font color="#CCCCCC"> an Hotel he already controls</font>

342
00:16:42,540 --> 00:16:48,490
and we will see what the what's the

343
00:16:45,279 --> 00:16:50,500
<font color="#E5E5E5">email that the initiative receives here</font>

344
00:16:48,490 --> 00:16:52,779
we had the mail of course<font color="#CCCCCC"> is in a real</font>

345
00:16:50,500 --> 00:16:55,240
bag<font color="#CCCCCC"> he will be more</font><font color="#E5E5E5"> a little our little</font>

346
00:16:52,779 --> 00:16:57,850
<font color="#E5E5E5">bit more subtle that this so the</font>

347
00:16:55,240 --> 00:17:00,910
administrator has to<font color="#E5E5E5"> click that link to</font>

348
00:16:57,850 --> 00:17:02,889
go<font color="#E5E5E5"> to a login page of the</font><font color="#CCCCCC"> AP Hana system</font>

349
00:17:00,910 --> 00:17:06,760
and activate the account or approved

350
00:17:02,889 --> 00:17:11,880
account what he had what he<font color="#E5E5E5"> attacker can</font>

351
00:17:06,760 --> 00:17:15,069
do is just to<font color="#E5E5E5"> create an fake login page</font>

352
00:17:11,880 --> 00:17:18,490
in this<font color="#E5E5E5"> case what he does is something</font>

353
00:17:15,069 --> 00:17:20,379
<font color="#E5E5E5">like that and after</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> rejecting the</font>

354
00:17:18,490 --> 00:17:23,169
administrator<font color="#CCCCCC"> to the real world</font><font color="#E5E5E5"> to a</font>

355
00:17:20,380 --> 00:17:23,890
real page just<font color="#E5E5E5"> to try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be as</font><font color="#CCCCCC"> sterile</font>

356
00:17:23,169 --> 00:17:26,380
as<font color="#E5E5E5"> possible</font>

357
00:17:23,890 --> 00:17:29,370
I mean the only<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> I he that he has</font>

358
00:17:26,380 --> 00:17:32,700
to do is checked for<font color="#CCCCCC"> the result of the</font>

359
00:17:29,370 --> 00:17:32,699
<font color="#CCCCCC">other process</font>

360
00:17:42,780 --> 00:17:48,270
so here we have the I<font color="#E5E5E5"> mean username and</font>

361
00:17:46,200 --> 00:17:50,430
the password<font color="#E5E5E5"> for that</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> this</font>

362
00:17:48,270 --> 00:17:53,700
<font color="#E5E5E5">administrative</font><font color="#CCCCCC"> user so it's a</font><font color="#E5E5E5"> really</font>

363
00:17:50,430 --> 00:17:56,430
useful attack as he I mean the attacker

364
00:17:53,700 --> 00:17:58,110
will be gaining access<font color="#E5E5E5"> to an</font>

365
00:17:56,430 --> 00:18:00,830
administrator as<font color="#CCCCCC"> a NSE</font><font color="#E5E5E5"> be an</font>

366
00:17:58,110 --> 00:18:00,830
administrator user

367
00:18:06,490 --> 00:18:12,610
<font color="#CCCCCC">si be released</font><font color="#E5E5E5"> security</font><font color="#CCCCCC"> no to face this</font>

368
00:18:09,639 --> 00:18:14,769
and all the combinations<font color="#E5E5E5"> are the same if</font>

369
00:18:12,610 --> 00:18:17,379
you kind of apply the note or<font color="#CCCCCC"> or patch</font>

370
00:18:14,769 --> 00:18:19,720
or update<font color="#E5E5E5"> your system</font><font color="#CCCCCC"> try to</font><font color="#E5E5E5"> restrict</font>

371
00:18:17,379 --> 00:18:23,889
access<font color="#E5E5E5"> to application also</font><font color="#CCCCCC"> disable it if</font>

372
00:18:19,720 --> 00:18:26,289
you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> not using it</font><font color="#CCCCCC"> the last attack</font>

373
00:18:23,889 --> 00:18:28,719
that I will show today<font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> blacklist</font>

374
00:18:26,289 --> 00:18:32,139
bypass the<font color="#E5E5E5"> Hannah use of cell service</font>

375
00:18:28,720 --> 00:18:34,480
allows<font color="#CCCCCC"> SMP I mean straight OSAP huh</font>

376
00:18:32,139 --> 00:18:36,998
administrators to set<font color="#CCCCCC"> up blacklist to</font>

377
00:18:34,480 --> 00:18:40,029
avoid users of accessing the application

378
00:18:36,999 --> 00:18:42,999
one<font color="#E5E5E5"> blacklist can be based on IP</font>

379
00:18:40,029 --> 00:18:44,559
addresses<font color="#E5E5E5"> and what we found was that the</font>

380
00:18:42,999 --> 00:18:47,919
checked is against what

381
00:18:44,559 --> 00:18:50,320
it's a<font color="#CCCCCC"> platform against the X for the</font>

382
00:18:47,919 --> 00:18:53,139
world<font color="#E5E5E5"> and</font><font color="#CCCCCC"> for her the attackers APRs</font>

383
00:18:50,320 --> 00:18:55,509
it's a lead to disk error and the

384
00:18:53,139 --> 00:18:58,209
attacker can't avoid that<font color="#E5E5E5"> but what he</font>

385
00:18:55,509 --> 00:19:01,899
<font color="#CCCCCC">can do is to add garbage to his/her</font>

386
00:18:58,210 --> 00:19:05,320
<font color="#CCCCCC">until the array</font><font color="#E5E5E5"> that is used to to</font>

387
00:19:01,899 --> 00:19:09,428
<font color="#E5E5E5">create the blog list is full and his IP</font>

388
00:19:05,320 --> 00:19:12,700
won't be able to to<font color="#E5E5E5"> to</font><font color="#CCCCCC"> array us it's not</font>

389
00:19:09,429 --> 00:19:15,639
it's not<font color="#E5E5E5"> any space left in</font><font color="#CCCCCC"> this case he</font>

390
00:19:12,700 --> 00:19:20,080
allowing him to probably<font color="#E5E5E5"> bypass the</font>

391
00:19:15,639 --> 00:19:23,320
blacklist<font color="#E5E5E5"> doing some tests we conclude</font>

392
00:19:20,080 --> 00:19:26,019
that<font color="#CCCCCC"> it's only</font><font color="#E5E5E5"> needed no more than one</font>

393
00:19:23,320 --> 00:19:29,139
thousand<font color="#E5E5E5"> and sixty sixty seven</font>

394
00:19:26,019 --> 00:19:32,470
characters to fully ripe as a blacklist

395
00:19:29,139 --> 00:19:36,428
<font color="#E5E5E5">or this kind of like East will see the</font>

396
00:19:32,470 --> 00:19:39,639
<font color="#E5E5E5">last demo of this and these</font><font color="#CCCCCC"> attacked</font>

397
00:19:36,429 --> 00:19:42,519
<font color="#CCCCCC">this attack is useful as nothing will be</font>

398
00:19:39,639 --> 00:19:45,039
<font color="#CCCCCC">show in another</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> half full chain</font>

399
00:19:42,519 --> 00:19:47,440
attack<font color="#E5E5E5"> but if supposedly this attacker</font>

400
00:19:45,039 --> 00:19:51,369
is blacklisted<font color="#E5E5E5"> he could also use this</font>

401
00:19:47,440 --> 00:19:53,440
one to<font color="#E5E5E5"> bypass the protection in this</font>

402
00:19:51,369 --> 00:19:58,090
case<font color="#E5E5E5"> he's trying to request for an</font>

403
00:19:53,440 --> 00:20:00,190
account but<font color="#E5E5E5"> he is we</font><font color="#CCCCCC"> will see</font><font color="#E5E5E5"> his blog</font>

404
00:19:58,090 --> 00:20:03,249
<font color="#CCCCCC">list</font><font color="#E5E5E5"> blog just like</font><font color="#CCCCCC"> the likes that</font>

405
00:20:00,190 --> 00:20:05,520
<font color="#E5E5E5">listed sorry here we</font><font color="#CCCCCC"> have the error</font>

406
00:20:03,249 --> 00:20:09,640
message

407
00:20:05,520 --> 00:20:12,879
so again he will<font color="#E5E5E5"> be</font><font color="#CCCCCC"> proxying his browser</font>

408
00:20:09,640 --> 00:20:17,830
than my<font color="#E5E5E5"> family requests this case it's</font>

409
00:20:12,880 --> 00:20:20,620
<font color="#E5E5E5">signed into a repeater capabilities here</font>

410
00:20:17,830 --> 00:20:23,590
we have your<font color="#CCCCCC"> at least being</font><font color="#E5E5E5"> forbidden</font>

411
00:20:20,620 --> 00:20:26,409
from<font color="#E5E5E5"> using this service</font><font color="#CCCCCC"> but we had has</font>

412
00:20:23,590 --> 00:20:28,540
<font color="#E5E5E5">to</font><font color="#CCCCCC"> don has to do sorry it's to add their</font>

413
00:20:26,410 --> 00:20:32,110
care<font color="#E5E5E5"> with a lot of coverage and in this</font>

414
00:20:28,540 --> 00:20:34,720
<font color="#E5E5E5">case we have at the</font><font color="#CCCCCC"> Centers 200 ok error</font>

415
00:20:32,110 --> 00:20:39,330
code here is his email<font color="#E5E5E5"> the attackers</font>

416
00:20:34,720 --> 00:20:41,640
email I have his account was already

417
00:20:39,330 --> 00:20:46,030
<font color="#E5E5E5">created</font>

418
00:20:41,640 --> 00:20:48,940
so now<font color="#CCCCCC"> Martine will continue with the</font>

419
00:20:46,030 --> 00:20:53,350
with the<font color="#E5E5E5"> rest the</font><font color="#CCCCCC"> most interesting part</font>

420
00:20:48,940 --> 00:20:57,990
of representation again as a fix we have

421
00:20:53,350 --> 00:21:00,040
a security<font color="#E5E5E5"> node a patch version the same</font>

422
00:20:57,990 --> 00:21:01,750
recommendation if you can't apply the

423
00:21:00,040 --> 00:21:04,590
patch<font color="#E5E5E5"> receive the access or they</font>

424
00:21:01,750 --> 00:21:04,590
activate the application

425
00:21:09,400 --> 00:21:16,059
<font color="#E5E5E5">okay so let's make a quick wake up about</font>

426
00:21:13,360 --> 00:21:18,550
<font color="#E5E5E5">the icon registration process first the</font>

427
00:21:16,059 --> 00:21:20,680
<font color="#CCCCCC">user will request for an account by</font>

428
00:21:18,550 --> 00:21:23,889
providing<font color="#E5E5E5"> a user name</font><font color="#CCCCCC"> and an email</font>

429
00:21:20,680 --> 00:21:26,980
address<font color="#E5E5E5"> next the system will generate</font>

430
00:21:23,890 --> 00:21:29,610
that<font color="#CCCCCC"> token</font><font color="#E5E5E5"> I run the maximal token and</font>

431
00:21:26,980 --> 00:21:33,370
it will be sent<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> email of the user</font>

432
00:21:29,610 --> 00:21:36,280
we this token he will then validate<font color="#E5E5E5"> his</font>

433
00:21:33,370 --> 00:21:39,030
new account<font color="#E5E5E5"> by setting a new password</font>

434
00:21:36,280 --> 00:21:41,920
and a new<font color="#E5E5E5"> security question and answer</font>

435
00:21:39,030 --> 00:21:44,590
<font color="#E5E5E5">both the security question answer are</font>

436
00:21:41,920 --> 00:21:48,309
stored in an encrypted<font color="#E5E5E5"> table called</font>

437
00:21:44,590 --> 00:21:52,510
secure storage as well as<font color="#E5E5E5"> the token we</font>

438
00:21:48,309 --> 00:21:54,428
will see this<font color="#E5E5E5"> later so when he sends the</font>

439
00:21:52,510 --> 00:21:56,200
password and the security question

440
00:21:54,429 --> 00:21:59,370
answer then the<font color="#E5E5E5"> account is validated and</font>

441
00:21:56,200 --> 00:22:01,660
as we said is not activated<font color="#E5E5E5"> yet but the</font>

442
00:21:59,370 --> 00:22:05,649
administration administrator need to do

443
00:22:01,660 --> 00:22:08,590
it two<font color="#E5E5E5"> interesting things</font><font color="#CCCCCC"> about this is</font>

444
00:22:05,650 --> 00:22:11,140
<font color="#E5E5E5">that the token</font><font color="#CCCCCC"> we generate when we</font>

445
00:22:08,590 --> 00:22:13,990
register our account<font color="#E5E5E5"> and when we forgot</font>

446
00:22:11,140 --> 00:22:17,160
<font color="#CCCCCC">our password would</font><font color="#E5E5E5"> be the same so if we</font>

447
00:22:13,990 --> 00:22:20,620
want we could use the account<font color="#CCCCCC"> the token</font>

448
00:22:17,160 --> 00:22:23,140
generated when we<font color="#E5E5E5"> forget our password to</font>

449
00:22:20,620 --> 00:22:25,570
validate an account and another<font color="#E5E5E5"> thing</font>

450
00:22:23,140 --> 00:22:27,429
<font color="#CCCCCC">that is it will be useful is that an</font>

451
00:22:25,570 --> 00:22:30,850
account<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be validated</font><font color="#E5E5E5"> even if it's</font>

452
00:22:27,429 --> 00:22:32,470
already<font color="#CCCCCC"> been validated so we can set</font><font color="#E5E5E5"> new</font>

453
00:22:30,850 --> 00:22:34,120
<font color="#CCCCCC">password and new</font><font color="#E5E5E5"> security question</font>

454
00:22:32,470 --> 00:22:37,410
answer for<font color="#E5E5E5"> an account</font><font color="#CCCCCC"> that already has a</font>

455
00:22:34,120 --> 00:22:42,239
<font color="#E5E5E5">password and a security question answer</font>

456
00:22:37,410 --> 00:22:44,980
as we see here when<font color="#E5E5E5"> the user tries to</font>

457
00:22:42,240 --> 00:22:48,429
generate<font color="#E5E5E5"> a new password by the forgot</font>

458
00:22:44,980 --> 00:22:52,000
password feature<font color="#E5E5E5"> he will have to set</font><font color="#CCCCCC"> to</font>

459
00:22:48,429 --> 00:22:53,860
provide a security<font color="#CCCCCC"> Glanzer</font><font color="#E5E5E5"> but if we use</font>

460
00:22:52,000 --> 00:22:56,260
a token generated in the<font color="#CCCCCC"> reset password</font>

461
00:22:53,860 --> 00:22:59,080
<font color="#E5E5E5">to validate our account</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> won't</font><font color="#CCCCCC"> begin</font>

462
00:22:56,260 --> 00:23:00,760
<font color="#CCCCCC">to</font><font color="#E5E5E5"> fail to provide this security answer</font>

463
00:22:59,080 --> 00:23:06,340
in fact<font color="#E5E5E5"> we will be</font><font color="#CCCCCC"> sending</font><font color="#E5E5E5"> a new</font>

464
00:23:00,760 --> 00:23:10,540
security answer<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so what we'll be</font>

465
00:23:06,340 --> 00:23:13,750
doing is<font color="#CCCCCC"> an example using john</font><font color="#E5E5E5"> trying to</font>

466
00:23:10,540 --> 00:23:17,830
<font color="#E5E5E5">create a new account so</font><font color="#CCCCCC"> for this</font>

467
00:23:13,750 --> 00:23:19,600
<font color="#CCCCCC">jong-min first Sena will try to register</font>

468
00:23:17,830 --> 00:23:21,928
<font color="#E5E5E5">his account by providing the</font><font color="#CCCCCC"> username</font>

469
00:23:19,600 --> 00:23:24,399
and<font color="#CCCCCC"> the email</font><font color="#E5E5E5"> as we see here</font>

470
00:23:21,929 --> 00:23:29,169
this is a<font color="#E5E5E5"> similar code that will be</font>

471
00:23:24,399 --> 00:23:32,589
executed in<font color="#E5E5E5"> the in the server so the</font>

472
00:23:29,169 --> 00:23:35,799
first thing we see is that<font color="#E5E5E5"> the the user</font>

473
00:23:32,589 --> 00:23:39,690
is created<font color="#E5E5E5"> as we said and what is</font>

474
00:23:35,799 --> 00:23:44,440
<font color="#E5E5E5">interesting about this this line is that</font>

475
00:23:39,690 --> 00:23:47,799
it doesn't only<font color="#E5E5E5"> create a new user but it</font>

476
00:23:44,440 --> 00:23:50,139
<font color="#E5E5E5">also validate that the user name is a</font>

477
00:23:47,799 --> 00:23:53,079
very user name<font color="#CCCCCC"> okay it</font><font color="#E5E5E5"> doesn't contain</font>

478
00:23:50,139 --> 00:23:55,869
<font color="#E5E5E5">any special characters or spaces why</font>

479
00:23:53,079 --> 00:23:58,479
well because the paper statement will

480
00:23:55,869 --> 00:24:01,178
try<font color="#CCCCCC"> to create it if it fails to</font><font color="#E5E5E5"> create</font>

481
00:23:58,479 --> 00:24:03,849
the new user<font color="#CCCCCC"> we will get an error</font><font color="#E5E5E5"> saying</font>

482
00:24:01,179 --> 00:24:08,559
we have an invalid username or it

483
00:24:03,849 --> 00:24:11,489
already exists<font color="#CCCCCC"> so here we we have to</font>

484
00:24:08,559 --> 00:24:15,249
actually two statements one creating the

485
00:24:11,489 --> 00:24:20,379
<font color="#CCCCCC">username</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the validating if it's</font>

486
00:24:15,249 --> 00:24:23,709
correct the<font color="#CCCCCC"> Anessa the next section will</font>

487
00:24:20,379 --> 00:24:29,468
be<font color="#E5E5E5"> creating the token as I said it's our</font>

488
00:24:23,709 --> 00:24:33,789
exile decimal value and when we<font color="#CCCCCC"> created</font>

489
00:24:29,469 --> 00:24:36,309
<font color="#E5E5E5">it</font><font color="#CCCCCC"> will be something</font><font color="#E5E5E5"> like this okay next</font>

490
00:24:33,789 --> 00:24:39,190
we<font color="#E5E5E5"> will be creating a</font><font color="#CCCCCC"> value for that</font>

491
00:24:36,309 --> 00:24:43,479
<font color="#E5E5E5">token it's stored in a secure storage</font>

492
00:24:39,190 --> 00:24:46,959
<font color="#E5E5E5">table and the value is a JSON containing</font>

493
00:24:43,479 --> 00:24:48,849
the<font color="#E5E5E5"> username we provided to</font><font color="#CCCCCC"> create</font><font color="#E5E5E5"> its</font>

494
00:24:46,959 --> 00:24:51,729
interest<font color="#E5E5E5"> it's interesting to see that</font>

495
00:24:48,849 --> 00:24:56,579
<font color="#E5E5E5">the</font><font color="#CCCCCC"> username is a valid one</font><font color="#E5E5E5"> as we said</font>

496
00:24:51,729 --> 00:25:00,789
it has already<font color="#E5E5E5"> been</font><font color="#CCCCCC"> created</font><font color="#E5E5E5"> and also</font>

497
00:24:56,579 --> 00:25:07,269
when<font color="#E5E5E5"> we store the token in this table we</font>

498
00:25:00,789 --> 00:25:10,749
will be<font color="#E5E5E5"> setting a username for e so</font><font color="#CCCCCC"> our</font>

499
00:25:07,269 --> 00:25:13,479
token so what we see here<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> a</font>

500
00:25:10,749 --> 00:25:16,779
token is as important<font color="#E5E5E5"> as a credentials</font>

501
00:25:13,479 --> 00:25:22,059
<font color="#E5E5E5">because we this token we will be able to</font>

502
00:25:16,779 --> 00:25:26,739
set new password for John finally<font color="#CCCCCC"> we</font>

503
00:25:22,059 --> 00:25:28,570
send<font color="#E5E5E5"> this token via email now when the</font>

504
00:25:26,739 --> 00:25:30,399
<font color="#E5E5E5">user received the email he will be able</font>

505
00:25:28,570 --> 00:25:33,609
to set the new<font color="#CCCCCC"> password and</font><font color="#E5E5E5"> security</font>

506
00:25:30,399 --> 00:25:35,500
question answer by<font color="#CCCCCC"> clicking save</font><font color="#E5E5E5"> he will</font>

507
00:25:33,609 --> 00:25:39,909
be sending<font color="#E5E5E5"> the post request with</font>

508
00:25:35,500 --> 00:25:43,900
here the action is safe password meaning

509
00:25:39,910 --> 00:25:45,730
the validation of the account<font color="#CCCCCC"> then the</font>

510
00:25:43,900 --> 00:25:48,040
<font color="#CCCCCC">new</font><font color="#E5E5E5"> password and a confirmation of</font><font color="#CCCCCC"> that</font>

511
00:25:45,730 --> 00:25:50,590
password they token which is the one

512
00:25:48,040 --> 00:25:53,610
receipt by email is that<font color="#CCCCCC"> XML value which</font>

513
00:25:50,590 --> 00:25:57,459
is associated<font color="#E5E5E5"> with the username John a</font>

514
00:25:53,610 --> 00:26:00,969
security question which tidy associated

515
00:25:57,460 --> 00:26:03,580
with a hard-coded string<font color="#CCCCCC"> a question and</font>

516
00:26:00,970 --> 00:26:07,570
they secrete the answer which can<font color="#E5E5E5"> be any</font>

517
00:26:03,580 --> 00:26:09,669
string we want without spaces<font color="#E5E5E5"> if we</font>

518
00:26:07,570 --> 00:26:10,480
enter any spaces in<font color="#E5E5E5"> this string they</font>

519
00:26:09,670 --> 00:26:15,670
will be deleted

520
00:26:10,480 --> 00:26:18,100
no<font color="#E5E5E5"> error but they will be deleted</font><font color="#CCCCCC"> so one</font>

521
00:26:15,670 --> 00:26:21,520
important<font color="#E5E5E5"> thing is that they secrete the</font>

522
00:26:18,100 --> 00:26:23,439
answer<font color="#E5E5E5"> does no get validated by this I</font>

523
00:26:21,520 --> 00:26:25,800
mean<font color="#E5E5E5"> we can include any special</font>

524
00:26:23,440 --> 00:26:29,980
character we<font color="#E5E5E5"> want in the security answer</font>

525
00:26:25,800 --> 00:26:32,800
<font color="#CCCCCC">even quotes or spaces well spaces will</font>

526
00:26:29,980 --> 00:26:36,520
be<font color="#E5E5E5"> deleted but we can include them dots</font>

527
00:26:32,800 --> 00:26:39,690
anything we want and also the<font color="#E5E5E5"> the</font>

528
00:26:36,520 --> 00:26:42,190
<font color="#CCCCCC">security token format isn't</font><font color="#E5E5E5"> valid also</font>

529
00:26:39,690 --> 00:26:44,620
we know that<font color="#E5E5E5"> the security token should</font>

530
00:26:42,190 --> 00:26:46,690
always be<font color="#CCCCCC"> accessible value but if we</font>

531
00:26:44,620 --> 00:26:49,989
send any string we want<font color="#E5E5E5"> we won't get an</font>

532
00:26:46,690 --> 00:26:53,410
error<font color="#E5E5E5"> we</font><font color="#CCCCCC"> will just get something</font><font color="#E5E5E5"> saying</font>

533
00:26:49,990 --> 00:26:59,410
the token<font color="#CCCCCC"> does no exist</font><font color="#E5E5E5"> no error because</font>

534
00:26:53,410 --> 00:27:02,050
this<font color="#E5E5E5"> not validated okay so what happens</font>

535
00:26:59,410 --> 00:27:05,380
with when we send that<font color="#CCCCCC"> Paul</font><font color="#E5E5E5"> request well</font>

536
00:27:02,050 --> 00:27:09,340
first the<font color="#E5E5E5"> the server would try</font><font color="#CCCCCC"> to</font>

537
00:27:05,380 --> 00:27:11,620
retrieve it retrieve the<font color="#E5E5E5"> username by</font>

538
00:27:09,340 --> 00:27:15,669
this<font color="#E5E5E5"> it will use the key basic view</font>

539
00:27:11,620 --> 00:27:18,810
token that<font color="#E5E5E5"> we provided</font><font color="#CCCCCC"> to get the JSON</font>

540
00:27:15,670 --> 00:27:20,470
and then<font color="#CCCCCC"> get the value of that JSON</font>

541
00:27:18,810 --> 00:27:27,490
which is this<font color="#E5E5E5"> way</font>

542
00:27:20,470 --> 00:27:30,730
the<font color="#E5E5E5"> username next we see that we check</font>

543
00:27:27,490 --> 00:27:33,370
if<font color="#CCCCCC"> the on this token value</font><font color="#E5E5E5"> exists if it</font>

544
00:27:30,730 --> 00:27:35,050
doesn't<font color="#E5E5E5"> as I said so if we provide for</font>

545
00:27:33,370 --> 00:27:37,870
<font color="#E5E5E5">example any student one that</font><font color="#CCCCCC"> doesn't</font>

546
00:27:35,050 --> 00:27:41,620
<font color="#E5E5E5">exist in</font><font color="#CCCCCC"> the keys</font><font color="#E5E5E5"> we will see an arrow</font>

547
00:27:37,870 --> 00:27:43,300
saying the token does not exist but<font color="#E5E5E5"> if</font>

548
00:27:41,620 --> 00:27:45,760
it does exist<font color="#E5E5E5"> then the evaluation</font>

549
00:27:43,300 --> 00:27:48,050
<font color="#E5E5E5">process is considered to be started and</font>

550
00:27:45,760 --> 00:27:50,960
the token is deleted

551
00:27:48,050 --> 00:27:56,360
<font color="#E5E5E5">okay so here the value actually is value</font>

552
00:27:50,960 --> 00:27:59,240
<font color="#E5E5E5">username so the token is deleted we</font>

553
00:27:56,360 --> 00:28:02,659
<font color="#E5E5E5">already have in the token</font><font color="#CCCCCC"> value the JSON</font>

554
00:27:59,240 --> 00:28:04,190
<font color="#E5E5E5">so we don't need a token anymore next we</font>

555
00:28:02,660 --> 00:28:06,890
will sanitize the password<font color="#E5E5E5"> that was</font>

556
00:28:04,190 --> 00:28:09,710
provided in<font color="#E5E5E5"> the post request because as</font>

557
00:28:06,890 --> 00:28:13,340
we see will be concatenating it in a

558
00:28:09,710 --> 00:28:16,130
query from to the database so<font color="#E5E5E5"> we need we</font>

559
00:28:13,340 --> 00:28:18,919
already analyzed<font color="#E5E5E5"> this sanitize function</font>

560
00:28:16,130 --> 00:28:20,930
we<font color="#CCCCCC"> once here it's not possible to inject</font>

561
00:28:18,920 --> 00:28:24,680
<font color="#E5E5E5">anything in the password so we will say</font>

562
00:28:20,930 --> 00:28:38,320
it's<font color="#E5E5E5"> secured to or secure to concatenate</font>

563
00:28:24,680 --> 00:28:42,230
password with with<font color="#E5E5E5"> equip</font><font color="#CCCCCC"> okay next</font><font color="#E5E5E5"> the</font>

564
00:28:38,320 --> 00:28:44,870
<font color="#CCCCCC">username is</font><font color="#E5E5E5"> we do we saw that we have in</font>

565
00:28:42,230 --> 00:28:49,340
valued a JSON<font color="#E5E5E5"> we will get the username</font>

566
00:28:44,870 --> 00:28:51,530
which<font color="#CCCCCC"> is what we care about we will set</font>

567
00:28:49,340 --> 00:28:53,959
it<font color="#E5E5E5"> in a username and then we will</font>

568
00:28:51,530 --> 00:28:56,240
concatenate the alter user username

569
00:28:53,960 --> 00:28:58,850
password and the password which he was

570
00:28:56,240 --> 00:29:00,950
already<font color="#CCCCCC"> sanitized a one thing you might</font>

571
00:28:58,850 --> 00:29:03,949
notice is<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> username is</font><font color="#E5E5E5"> not being</font>

572
00:29:00,950 --> 00:29:07,790
sanitized<font color="#CCCCCC"> so we might inject</font><font color="#E5E5E5"> anything in</font>

573
00:29:03,950 --> 00:29:09,740
there well not because the username as I

574
00:29:07,790 --> 00:29:11,450
said must<font color="#CCCCCC"> be validated because it was</font>

575
00:29:09,740 --> 00:29:14,690
<font color="#E5E5E5">created so we cannot contain any spaces</font>

576
00:29:11,450 --> 00:29:20,300
<font color="#CCCCCC">any special characters</font><font color="#E5E5E5"> so here it</font><font color="#CCCCCC"> will</font>

577
00:29:14,690 --> 00:29:22,730
<font color="#CCCCCC">be saved</font><font color="#E5E5E5"> and finally we will be creating</font>

578
00:29:20,300 --> 00:29:24,649
<font color="#CCCCCC">the security question security answer</font>

579
00:29:22,730 --> 00:29:26,870
<font color="#CCCCCC">also the security</font><font color="#E5E5E5"> question but it's not</font>

580
00:29:24,650 --> 00:29:27,650
relevant<font color="#CCCCCC"> for us</font><font color="#E5E5E5"> so I won't be explaining</font>

581
00:29:26,870 --> 00:29:32,120
anything<font color="#E5E5E5"> about it</font>

582
00:29:27,650 --> 00:29:33,500
they security answer key is and this<font color="#CCCCCC"> is</font>

583
00:29:32,120 --> 00:29:35,770
important<font color="#CCCCCC"> it's something we can predict</font>

584
00:29:33,500 --> 00:29:38,510
<font color="#E5E5E5">because it</font><font color="#CCCCCC"> the username in uppercase and</font>

585
00:29:35,770 --> 00:29:42,230
concatenate with dot security underscore

586
00:29:38,510 --> 00:29:45,650
answer<font color="#CCCCCC"> okay as we see</font><font color="#E5E5E5"> here so our</font>

587
00:29:42,230 --> 00:29:47,750
security answer for John the key would

588
00:29:45,650 --> 00:29:51,050
<font color="#CCCCCC">be John</font><font color="#E5E5E5"> dot security underscore answer</font>

589
00:29:47,750 --> 00:29:56,120
or in uppercase and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> value is</font><font color="#E5E5E5"> the</font>

590
00:29:51,050 --> 00:29:58,850
string we provided finally we save this

591
00:29:56,120 --> 00:30:03,428
and we a new my notice that is also<font color="#E5E5E5"> the</font>

592
00:29:58,850 --> 00:30:10,070
same<font color="#CCCCCC"> table where we stored the tokens</font>

593
00:30:03,429 --> 00:30:14,929
<font color="#E5E5E5">okay so</font><font color="#CCCCCC"> username okay actually</font><font color="#E5E5E5"> and we</font>

594
00:30:10,070 --> 00:30:16,610
can predict it so<font color="#E5E5E5"> what is really</font>

595
00:30:14,929 --> 00:30:18,500
<font color="#E5E5E5">important about this is</font><font color="#CCCCCC"> that technically</font>

596
00:30:16,610 --> 00:30:22,399
<font color="#E5E5E5">there is no difference between our token</font>

597
00:30:18,500 --> 00:30:24,919
and a security answer<font color="#E5E5E5"> so I will ask you</font>

598
00:30:22,400 --> 00:30:26,480
<font color="#CCCCCC">how do you</font><font color="#E5E5E5"> differentiate between a token</font>

599
00:30:24,919 --> 00:30:28,549
as<font color="#E5E5E5"> you</font><font color="#CCCCCC"> give the answer and how you know</font>

600
00:30:26,480 --> 00:30:31,039
which one<font color="#E5E5E5"> is a token and you might say</font>

601
00:30:28,549 --> 00:30:32,980
okay<font color="#E5E5E5"> is the X item of value</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> because</font>

602
00:30:31,039 --> 00:30:35,929
the X estimate value is not checked so I

603
00:30:32,980 --> 00:30:38,120
assist<font color="#E5E5E5"> no validated we could send any</font>

604
00:30:35,929 --> 00:30:40,700
<font color="#E5E5E5">string including john dot security</font>

605
00:30:38,120 --> 00:30:43,250
underscore answer then<font color="#E5E5E5"> you can say okay</font>

606
00:30:40,700 --> 00:30:47,029
is the one<font color="#CCCCCC"> that contains</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> JSON yeah</font>

607
00:30:43,250 --> 00:30:51,230
but it's a string if I say so<font color="#E5E5E5"> so you</font>

608
00:30:47,029 --> 00:30:53,450
might<font color="#CCCCCC"> think</font><font color="#E5E5E5"> okay a spring a string what</font>

609
00:30:51,230 --> 00:30:56,770
<font color="#E5E5E5">can we do with this well we can try to</font>

610
00:30:53,450 --> 00:31:00,590
<font color="#E5E5E5">hijack an account using what we know</font>

611
00:30:56,770 --> 00:31:02,418
first when John<font color="#CCCCCC"> Queens his account</font><font color="#E5E5E5"> he</font>

612
00:31:00,590 --> 00:31:05,240
will try to<font color="#CCCCCC"> validate it with</font><font color="#E5E5E5"> a valid</font>

613
00:31:02,419 --> 00:31:07,309
token which actually contains<font color="#E5E5E5"> the ask</font>

614
00:31:05,240 --> 00:31:12,289
<font color="#E5E5E5">user</font><font color="#CCCCCC"> name his his</font><font color="#E5E5E5"> user name which will</font>

615
00:31:07,309 --> 00:31:14,539
<font color="#E5E5E5">be shown here and then when he sets his</font>

616
00:31:12,289 --> 00:31:18,620
security answer instead<font color="#E5E5E5"> of saving any</font>

617
00:31:14,539 --> 00:31:22,730
string he wants he will save it<font color="#E5E5E5"> as a</font>

618
00:31:18,620 --> 00:31:26,750
JSON as a string<font color="#CCCCCC"> of a JSON</font><font color="#E5E5E5"> okay here we</font>

619
00:31:22,730 --> 00:31:30,289
see we<font color="#CCCCCC"> escaped the quotation but it will</font>

620
00:31:26,750 --> 00:31:32,960
be stored as<font color="#E5E5E5"> a job as a JSON so now if</font>

621
00:31:30,289 --> 00:31:35,090
we<font color="#E5E5E5"> set this as a security answer we</font>

622
00:31:32,960 --> 00:31:37,880
cannot differentiate between<font color="#E5E5E5"> a security</font>

623
00:31:35,090 --> 00:31:40,668
answer and a<font color="#E5E5E5"> token because</font><font color="#CCCCCC"> as I said the</font>

624
00:31:37,880 --> 00:31:42,470
token is not we don't<font color="#E5E5E5"> indicate that is a</font>

625
00:31:40,669 --> 00:31:44,179
<font color="#CCCCCC">token</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> of the key as they are</font>

626
00:31:42,470 --> 00:31:45,799
both strings<font color="#E5E5E5"> and now we cannot</font>

627
00:31:44,179 --> 00:31:49,720
differentiate it because<font color="#E5E5E5"> because they</font>

628
00:31:45,799 --> 00:31:49,720
both have a string if I<font color="#E5E5E5"> JSON</font>

629
00:31:52,260 --> 00:31:59,110
so finally we will<font color="#E5E5E5"> be using instead of a</font>

630
00:31:56,140 --> 00:32:01,390
<font color="#CCCCCC">buddy token</font><font color="#E5E5E5"> the security answer as a</font>

631
00:31:59,110 --> 00:32:04,030
token<font color="#CCCCCC"> okay we can predict how this a</font>

632
00:32:01,390 --> 00:32:06,340
good token key will be because it's john

633
00:32:04,030 --> 00:32:09,970
dot<font color="#CCCCCC"> security underscore answer</font><font color="#E5E5E5"> so we'll</font>

634
00:32:06,340 --> 00:32:12,370
be setting that<font color="#E5E5E5"> as a token and now when</font>

635
00:32:09,970 --> 00:32:14,620
<font color="#E5E5E5">we set a new</font><font color="#CCCCCC"> password</font><font color="#E5E5E5"> instead of setting</font>

636
00:32:12,370 --> 00:32:17,290
the password<font color="#E5E5E5"> for our sample user or John</font>

637
00:32:14,620 --> 00:32:19,090
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> be setting this user this password</font>

638
00:32:17,290 --> 00:32:22,480
for the<font color="#CCCCCC"> victim's user that we can</font>

639
00:32:19,090 --> 00:32:24,580
control<font color="#E5E5E5"> and inject anybody we want this</font>

640
00:32:22,480 --> 00:32:31,450
way<font color="#E5E5E5"> being able to hijack any account in</font>

641
00:32:24,580 --> 00:32:33,580
a database so as I<font color="#E5E5E5"> said it's a two-step</font>

642
00:32:31,450 --> 00:32:37,030
attack<font color="#E5E5E5"> first we inject the payload in</font>

643
00:32:33,580 --> 00:32:40,449
the in the table and then<font color="#E5E5E5"> we will use</font>

644
00:32:37,030 --> 00:32:45,940
<font color="#E5E5E5">that payload to trigger the attack</font><font color="#CCCCCC"> and</font>

645
00:32:40,450 --> 00:32:47,770
<font color="#E5E5E5">set a new password okay doesn't that is</font>

646
00:32:45,940 --> 00:32:49,630
really cool we<font color="#E5E5E5"> can hijack any account we</font>

647
00:32:47,770 --> 00:32:53,470
want<font color="#E5E5E5"> why we ask ourselves is there</font>

648
00:32:49,630 --> 00:32:55,059
<font color="#E5E5E5">anything else we can do</font><font color="#CCCCCC"> with this so to</font>

649
00:32:53,470 --> 00:32:57,280
answer this we first need<font color="#CCCCCC"> to introduce</font>

650
00:32:55,059 --> 00:32:59,590
the<font color="#E5E5E5"> system user we really talk about the</font>

651
00:32:57,280 --> 00:33:00,730
system user but we need to talk<font color="#CCCCCC"> more</font>

652
00:32:59,590 --> 00:33:03,428
<font color="#E5E5E5">detail about it</font>

653
00:33:00,730 --> 00:33:07,600
first is the most powerful user in<font color="#E5E5E5"> ASAP</font>

654
00:33:03,429 --> 00:33:11,650
<font color="#E5E5E5">Hana it is created by default and you</font>

655
00:33:07,600 --> 00:33:14,590
<font color="#E5E5E5">can gain privileges being</font><font color="#CCCCCC"> directors</font><font color="#E5E5E5"> so</font>

656
00:33:11,650 --> 00:33:16,270
he can save his himself<font color="#E5E5E5"> privileges and</font>

657
00:33:14,590 --> 00:33:18,760
roles<font color="#E5E5E5"> all the pieces</font><font color="#CCCCCC"> aren't roles</font><font color="#E5E5E5"> that</font>

658
00:33:16,270 --> 00:33:22,059
he wants allowing him to read<font color="#CCCCCC"> and modify</font>

659
00:33:18,760 --> 00:33:24,910
<font color="#E5E5E5">any record</font><font color="#CCCCCC"> of the database and also</font>

660
00:33:22,059 --> 00:33:27,250
allowing<font color="#E5E5E5"> him to read</font><font color="#CCCCCC"> and modify the</font>

661
00:33:24,910 --> 00:33:29,170
source code<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> world applications so</font>

662
00:33:27,250 --> 00:33:32,050
we<font color="#E5E5E5"> would say that if an attacker can</font>

663
00:33:29,170 --> 00:33:34,540
have control<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> system user</font><font color="#E5E5E5"> he will</font>

664
00:33:32,050 --> 00:33:37,000
be able<font color="#E5E5E5"> to run actually any code he</font>

665
00:33:34,540 --> 00:33:38,909
wants in a<font color="#E5E5E5"> Java Script code including</font>

666
00:33:37,000 --> 00:33:43,540
the<font color="#CCCCCC"> SAS ap</font>

667
00:33:38,910 --> 00:33:46,420
<font color="#E5E5E5">API he will be able to run any code he</font>

668
00:33:43,540 --> 00:33:51,760
wants allowing him to fully<font color="#CCCCCC"> compromise</font>

669
00:33:46,420 --> 00:33:54,429
the<font color="#E5E5E5"> AP Hana a database on system but the</font>

670
00:33:51,760 --> 00:33:57,910
problem here is<font color="#CCCCCC"> ok we might say let's</font>

671
00:33:54,429 --> 00:34:00,580
hijack the system user well that's not a

672
00:33:57,910 --> 00:34:03,070
good<font color="#E5E5E5"> idea because it's</font><font color="#CCCCCC"> deactivated or at</font>

673
00:34:00,580 --> 00:34:04,350
least<font color="#CCCCCC"> is strongly recommended to be</font>

674
00:34:03,070 --> 00:34:07,678
deactivated and

675
00:34:04,350 --> 00:34:09,480
true for<font color="#E5E5E5"> most cases so if we hijack the</font>

676
00:34:07,679 --> 00:34:14,429
system user<font color="#E5E5E5"> we won't be able to do</font>

677
00:34:09,480 --> 00:34:17,210
anything with it but let's talk about

678
00:34:14,429 --> 00:34:21,179
the how the use of self-service

679
00:34:17,210 --> 00:34:26,280
concatenates sequel queries and how<font color="#CCCCCC"> the</font>

680
00:34:21,179 --> 00:34:30,359
<font color="#CCCCCC">user</font><font color="#E5E5E5"> name is being used as we saw the</font>

681
00:34:26,280 --> 00:34:33,300
<font color="#E5E5E5">first action</font><font color="#CCCCCC"> that the database</font><font color="#E5E5E5"> does is</font>

682
00:34:30,359 --> 00:34:36,869
<font color="#CCCCCC">wait the user so when we provide a</font>

683
00:34:33,300 --> 00:34:38,760
username this<font color="#E5E5E5"> must be valid one this</font>

684
00:34:36,869 --> 00:34:40,260
<font color="#E5E5E5">cannot be this kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> containing space</font>

685
00:34:38,760 --> 00:34:44,550
is an especial character so we cannot

686
00:34:40,260 --> 00:34:47,340
inject anything<font color="#E5E5E5"> in the in a query as we</font>

687
00:34:44,550 --> 00:34:52,109
see else we will<font color="#E5E5E5"> get an</font><font color="#CCCCCC"> error or</font><font color="#E5E5E5"> that</font>

688
00:34:47,340 --> 00:34:53,550
exists or is invalid<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> in</font>

689
00:34:52,109 --> 00:34:55,759
the<font color="#CCCCCC"> use</font><font color="#E5E5E5"> of service that in the</font><font color="#CCCCCC"> usual</font>

690
00:34:53,550 --> 00:34:57,930
<font color="#CCCCCC">cell service</font><font color="#E5E5E5"> that the user name is</font>

691
00:34:55,760 --> 00:35:00,720
concatenated with anything is not

692
00:34:57,930 --> 00:35:05,129
<font color="#E5E5E5">provided by</font><font color="#CCCCCC"> the user</font><font color="#E5E5E5"> it's actually being</font>

693
00:35:00,720 --> 00:35:07,410
retrieved from the<font color="#E5E5E5"> JSON so the Wendy but</font>

694
00:35:05,130 --> 00:35:10,350
<font color="#E5E5E5">probably when the developers code</font><font color="#CCCCCC"> this</font>

695
00:35:07,410 --> 00:35:14,670
they thought<font color="#E5E5E5"> okay it's</font><font color="#CCCCCC"> as actually a</font>

696
00:35:10,350 --> 00:35:17,220
<font color="#E5E5E5">secure variable because</font><font color="#CCCCCC"> the the user is</font>

697
00:35:14,670 --> 00:35:19,590
<font color="#E5E5E5">not providing it</font><font color="#CCCCCC"> and we know</font><font color="#E5E5E5"> that if we</font>

698
00:35:17,220 --> 00:35:22,680
are not<font color="#CCCCCC"> being we</font><font color="#E5E5E5"> are not</font><font color="#CCCCCC"> comparing data</font>

699
00:35:19,590 --> 00:35:24,869
that is provided<font color="#CCCCCC"> by the</font><font color="#E5E5E5"> user or we are</font>

700
00:35:22,680 --> 00:35:27,450
gonna<font color="#E5E5E5"> cut anything</font><font color="#CCCCCC"> sanitized data that</font>

701
00:35:24,869 --> 00:35:30,510
we know<font color="#E5E5E5"> it cannot inject anything then</font>

702
00:35:27,450 --> 00:35:34,740
this query might be<font color="#E5E5E5"> secure okay no</font>

703
00:35:30,510 --> 00:35:36,150
<font color="#CCCCCC">problem</font><font color="#E5E5E5"> should</font><font color="#CCCCCC"> be there but</font><font color="#E5E5E5"> again we</font>

704
00:35:34,740 --> 00:35:38,520
know that<font color="#E5E5E5"> we can control the user name</font>

705
00:35:36,150 --> 00:35:41,970
because when<font color="#E5E5E5"> we inject a JSON we could</font>

706
00:35:38,520 --> 00:35:44,160
also<font color="#E5E5E5"> inject we were injecting only user</font>

707
00:35:41,970 --> 00:35:45,899
names that were valid and<font color="#E5E5E5"> or existed in</font>

708
00:35:44,160 --> 00:35:47,970
<font color="#E5E5E5">this system but what if we inject</font>

709
00:35:45,900 --> 00:35:51,930
something<font color="#E5E5E5"> that does not exist</font><font color="#CCCCCC"> or hoc or</font>

710
00:35:47,970 --> 00:35:54,060
contains special characters so when we

711
00:35:51,930 --> 00:35:56,279
inject<font color="#CCCCCC"> that JSON instead of setting a</font>

712
00:35:54,060 --> 00:35:59,070
<font color="#E5E5E5">username that is valid and thus exists</font>

713
00:35:56,280 --> 00:36:01,500
we will inject<font color="#E5E5E5"> anything else so let's</font>

714
00:35:59,070 --> 00:36:03,750
say we inject spaces and any special

715
00:36:01,500 --> 00:36:06,750
<font color="#CCCCCC">characters we will get an</font><font color="#E5E5E5"> error a</font>

716
00:36:03,750 --> 00:36:11,460
database server<font color="#E5E5E5"> because it will try to</font>

717
00:36:06,750 --> 00:36:13,650
concatenate<font color="#CCCCCC"> with this but the idea is</font>

718
00:36:11,460 --> 00:36:16,650
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to activate the system the</font>

719
00:36:13,650 --> 00:36:17,970
<font color="#E5E5E5">system account how we can do it well we</font>

720
00:36:16,650 --> 00:36:21,410
we cannot enjoy

721
00:36:17,970 --> 00:36:23,669
spaces<font color="#E5E5E5"> so we will be</font><font color="#CCCCCC"> using comments</font><font color="#E5E5E5"> and</font>

722
00:36:21,410 --> 00:36:27,180
what<font color="#E5E5E5"> will be sitting as username is</font>

723
00:36:23,670 --> 00:36:31,160
system comments activate comments or

724
00:36:27,180 --> 00:36:31,160
space user<font color="#E5E5E5"> now</font>

725
00:36:31,310 --> 00:36:35,940
when compared<font color="#E5E5E5"> denied it with this we</font>

726
00:36:34,200 --> 00:36:38,700
will<font color="#E5E5E5"> see the alter user system activated</font>

727
00:36:35,940 --> 00:36:41,520
user now<font color="#CCCCCC"> uncommon the rest</font><font color="#E5E5E5"> allowing us</font>

728
00:36:38,700 --> 00:36:43,830
to<font color="#E5E5E5"> activate the system user so when we</font>

729
00:36:41,520 --> 00:36:46,349
inject this and send the request using

730
00:36:43,830 --> 00:36:48,810
<font color="#E5E5E5">the asset oak and</font><font color="#CCCCCC"> edge on security</font>

731
00:36:46,349 --> 00:36:54,510
answer<font color="#E5E5E5"> we will be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to activate</font><font color="#CCCCCC"> the</font>

732
00:36:48,810 --> 00:36:57,930
system<font color="#E5E5E5"> user so how the attack will work</font>

733
00:36:54,510 --> 00:37:00,710
well first<font color="#CCCCCC"> we'll send a request asking</font>

734
00:36:57,930 --> 00:37:04,140
<font color="#CCCCCC">for a new account</font><font color="#E5E5E5"> we will</font><font color="#CCCCCC"> use the token</font>

735
00:37:00,710 --> 00:37:09,720
<font color="#CCCCCC">to inject</font><font color="#E5E5E5"> sequel injection instead</font>

736
00:37:04,140 --> 00:37:12,509
<font color="#E5E5E5">inside a JSON injection when we trigger</font>

737
00:37:09,720 --> 00:37:14,520
these<font color="#E5E5E5"> this attack by using the as token</font>

738
00:37:12,510 --> 00:37:16,380
the sample the sample user<font color="#CCCCCC"> john dot</font>

739
00:37:14,520 --> 00:37:18,840
security underscore answer we will

740
00:37:16,380 --> 00:37:21,210
activate the<font color="#CCCCCC"> system user</font><font color="#E5E5E5"> and now we</font><font color="#CCCCCC"> just</font>

741
00:37:18,840 --> 00:37:24,750
<font color="#CCCCCC">need to hijack</font><font color="#E5E5E5"> the system user using the</font>

742
00:37:21,210 --> 00:37:26,970
same method as<font color="#E5E5E5"> i</font><font color="#CCCCCC"> explained we request</font>

743
00:37:24,750 --> 00:37:28,500
for a knockout<font color="#E5E5E5"> or in in the example we</font>

744
00:37:26,970 --> 00:37:30,509
will see we<font color="#E5E5E5"> are not</font><font color="#CCCCCC"> requesting for an</font>

745
00:37:28,500 --> 00:37:32,700
account again because we can say we

746
00:37:30,510 --> 00:37:35,160
forgot<font color="#CCCCCC"> our password</font><font color="#E5E5E5"> and use</font><font color="#CCCCCC"> the token</font><font color="#E5E5E5"> to</font>

747
00:37:32,700 --> 00:37:39,180
activate the to validate the account as

748
00:37:35,160 --> 00:37:42,270
<font color="#CCCCCC">i spin</font><font color="#E5E5E5"> at the beginning so we</font><font color="#CCCCCC"> ask</font><font color="#E5E5E5"> for</font>

749
00:37:39,180 --> 00:37:45,390
for an account or well for the new

750
00:37:42,270 --> 00:37:48,390
password<font color="#CCCCCC"> we use this token and set as a</font>

751
00:37:45,390 --> 00:37:51,150
security answer they use the JSON with

752
00:37:48,390 --> 00:37:54,240
the username system finally we use this

753
00:37:51,150 --> 00:37:56,730
token<font color="#E5E5E5"> and set the new password</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> now</font>

754
00:37:54,240 --> 00:38:01,589
<font color="#CCCCCC">we have the</font><font color="#E5E5E5"> system user activity and</font>

755
00:37:56,730 --> 00:38:09,140
with a new password so we<font color="#CCCCCC"> will try</font><font color="#E5E5E5"> to do</font>

756
00:38:01,589 --> 00:38:09,140
a live<font color="#CCCCCC"> demo i got disconnected so</font>

757
00:38:11,030 --> 00:38:37,310
<font color="#E5E5E5">call you anymore okay I need to connect</font>

758
00:38:28,950 --> 00:38:37,310
to<font color="#E5E5E5"> the VPN yeah you can face</font>

759
00:38:38,810 --> 00:38:45,230
<font color="#CCCCCC">one two three four shoulder surfing</font>

760
00:38:52,470 --> 00:38:55,540
[Applause]

761
00:38:59,970 --> 00:39:06,919
<font color="#E5E5E5">okay</font>

762
00:39:02,720 --> 00:39:13,149
study it I'm sorry open<font color="#CCCCCC"> all Oh</font><font color="#E5E5E5"> oh yeah</font>

763
00:39:06,920 --> 00:39:13,150
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> no way else</font><font color="#E5E5E5"> just walk that's it</font>

764
00:39:14,079 --> 00:39:17,440
how many<font color="#CCCCCC"> thank</font>

765
00:39:22,299 --> 00:39:28,220
<font color="#CCCCCC">Oh help</font>

766
00:39:25,080 --> 00:39:28,220
yeah I think that's<font color="#E5E5E5"> okay</font>

767
00:39:31,030 --> 00:39:34,530
you know what

768
00:39:36,759 --> 00:39:41,049
<font color="#E5E5E5">okay talk about</font><font color="#CCCCCC"> that</font>

769
00:39:44,109 --> 00:39:46,950
I'll tell you that

770
00:39:47,760 --> 00:39:54,780
don't wait up<font color="#CCCCCC"> yeah</font>

771
00:39:51,710 --> 00:39:54,780
[Music]

772
00:40:05,260 --> 00:40:08,260
<font color="#E5E5E5">hmm</font>

773
00:40:10,870 --> 00:40:20,120
<font color="#E5E5E5">okay the idea was</font><font color="#CCCCCC"> to show</font><font color="#E5E5E5"> a live demo we</font>

774
00:40:14,690 --> 00:40:26,090
are<font color="#CCCCCC"> having problems</font><font color="#E5E5E5"> with our VPN but</font>

775
00:40:20,120 --> 00:40:28,730
fortunately we<font color="#CCCCCC"> already have a video okay</font>

776
00:40:26,090 --> 00:40:31,250
<font color="#CCCCCC">so first what we do is check that the</font>

777
00:40:28,730 --> 00:40:32,570
<font color="#E5E5E5">system user is a greedy activated and we</font>

778
00:40:31,250 --> 00:40:37,850
don't know<font color="#E5E5E5"> the password</font><font color="#CCCCCC"> of the system</font>

779
00:40:32,570 --> 00:40:44,380
user now<font color="#E5E5E5"> we'll we will be requesting for</font>

780
00:40:37,850 --> 00:40:44,380
an account using<font color="#E5E5E5"> our test user</font>

781
00:40:53,569 --> 00:41:01,959
and we should receive a token<font color="#CCCCCC"> or a</font>

782
00:40:56,569 --> 00:41:01,959
validation<font color="#E5E5E5"> link in our email address</font>

783
00:41:03,159 --> 00:41:06,159
<font color="#CCCCCC">once</font>

784
00:41:09,849 --> 00:41:19,309
it's really slow<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> we got the email</font>

785
00:41:14,859 --> 00:41:24,589
<font color="#CCCCCC">and as we see we have</font><font color="#E5E5E5"> the token in</font><font color="#CCCCCC"> the</font>

786
00:41:19,309 --> 00:41:26,869
link that<font color="#CCCCCC"> is being sent</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> we will try</font>

787
00:41:24,589 --> 00:41:31,119
to validate<font color="#E5E5E5"> this account this just</font>

788
00:41:26,869 --> 00:41:31,119
<font color="#E5E5E5">created account</font><font color="#CCCCCC"> setting a new password</font>

789
00:41:33,099 --> 00:41:43,699
<font color="#E5E5E5">confirming this</font><font color="#CCCCCC"> password and setting a</font>

790
00:41:40,299 --> 00:41:46,759
security answer<font color="#E5E5E5"> okay we'll be using</font><font color="#CCCCCC"> Boop</font>

791
00:41:43,699 --> 00:41:51,469
to intercept the<font color="#CCCCCC"> request so we</font><font color="#E5E5E5"> can</font>

792
00:41:46,759 --> 00:41:53,449
modify it<font color="#E5E5E5"> there okay we send to a</font>

793
00:41:51,469 --> 00:41:54,619
repeater<font color="#CCCCCC"> and we will drop the</font><font color="#E5E5E5"> request</font>

794
00:41:53,449 --> 00:41:59,349
<font color="#CCCCCC">because we don't want</font><font color="#E5E5E5"> to use the token</font>

795
00:41:54,619 --> 00:42:01,640
<font color="#CCCCCC">that allows us to</font><font color="#E5E5E5"> validate account so</font>

796
00:41:59,349 --> 00:42:03,589
now we will inject<font color="#E5E5E5"> something in this</font>

797
00:42:01,640 --> 00:42:05,930
<font color="#E5E5E5">security answer and as I said we'll be</font>

798
00:42:03,589 --> 00:42:09,859
injecting the JSON containing the sequel

799
00:42:05,930 --> 00:42:14,239
injection<font color="#E5E5E5"> as you can see is just as the</font>

800
00:42:09,859 --> 00:42:17,449
example I saw in the slides<font color="#CCCCCC"> username the</font>

801
00:42:14,239 --> 00:42:19,479
time is a timestamp the I'll say for how

802
00:42:17,449 --> 00:42:25,489
long the tokens value which I said to

803
00:42:19,479 --> 00:42:28,129
2020<font color="#CCCCCC"> okay so we had</font><font color="#E5E5E5"> activated on our</font>

804
00:42:25,489 --> 00:42:31,009
account<font color="#E5E5E5"> and what has already been</font>

805
00:42:28,130 --> 00:42:34,130
<font color="#E5E5E5">injected in the table is the security</font>

806
00:42:31,009 --> 00:42:38,839
answer with the adjacent so now we just

807
00:42:34,130 --> 00:42:41,539
<font color="#CCCCCC">need to trigger</font><font color="#E5E5E5"> it for that we will use</font>

808
00:42:38,839 --> 00:42:44,449
<font color="#CCCCCC">as token the test user security answer</font>

809
00:42:41,539 --> 00:42:47,150
when<font color="#CCCCCC"> we send</font><font color="#E5E5E5"> this we see a</font><font color="#CCCCCC"> database</font>

810
00:42:44,449 --> 00:42:49,940
error this<font color="#E5E5E5"> is actually that our attack</font>

811
00:42:47,150 --> 00:42:52,039
was success<font color="#E5E5E5"> successful because after the</font>

812
00:42:49,940 --> 00:42:55,249
other user that we<font color="#CCCCCC"> already saw</font>

813
00:42:52,039 --> 00:42:58,160
we<font color="#E5E5E5"> have a request like connect that will</font>

814
00:42:55,249 --> 00:42:59,868
fail<font color="#E5E5E5"> so even though they that query</font>

815
00:42:58,160 --> 00:43:06,379
fails<font color="#E5E5E5"> we have already activated the</font>

816
00:42:59,869 --> 00:43:09,259
<font color="#E5E5E5">system user okay and now we will request</font>

817
00:43:06,380 --> 00:43:11,390
for a for a forgot password token<font color="#E5E5E5"> as I</font>

818
00:43:09,259 --> 00:43:14,509
said we<font color="#E5E5E5"> can use that token in the</font>

819
00:43:11,390 --> 00:43:16,609
validation<font color="#E5E5E5"> this is just to make</font><font color="#CCCCCC"> it</font>

820
00:43:14,509 --> 00:43:18,890
easier<font color="#CCCCCC"> we could</font><font color="#E5E5E5"> ask for a new account</font>

821
00:43:16,609 --> 00:43:20,470
and<font color="#E5E5E5"> do the process</font><font color="#CCCCCC"> again but this is</font>

822
00:43:18,890 --> 00:43:23,450
faster

823
00:43:20,470 --> 00:43:27,439
we'll see that<font color="#CCCCCC"> the system user was</font>

824
00:43:23,450 --> 00:43:30,020
actually activated so we don't see<font color="#E5E5E5"> the</font>

825
00:43:27,440 --> 00:43:33,220
deactivated<font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> and we can</font><font color="#CCCCCC"> actually</font>

826
00:43:30,020 --> 00:43:35,240
do activity so now so we<font color="#E5E5E5"> just need to</font>

827
00:43:33,220 --> 00:43:39,410
hijack the account by setting a new

828
00:43:35,240 --> 00:43:43,580
password<font color="#E5E5E5"> okay we already receive</font><font color="#CCCCCC"> the</font>

829
00:43:39,410 --> 00:43:48,230
<font color="#CCCCCC">email</font><font color="#E5E5E5"> no we didn't we will be receiving</font>

830
00:43:43,580 --> 00:43:51,380
it<font color="#E5E5E5"> okay there is the</font><font color="#CCCCCC"> set password email</font>

831
00:43:48,230 --> 00:43:54,530
and we will<font color="#CCCCCC"> use the token we will not be</font>

832
00:43:51,380 --> 00:43:56,750
<font color="#E5E5E5">using the</font><font color="#CCCCCC"> day link</font><font color="#E5E5E5"> because it</font><font color="#CCCCCC"> will ask</font>

833
00:43:54,530 --> 00:43:58,099
<font color="#E5E5E5">us to reset our password we don't want</font>

834
00:43:56,750 --> 00:44:02,060
to reset<font color="#CCCCCC"> our</font><font color="#E5E5E5"> password</font><font color="#CCCCCC"> we just need a</font>

835
00:43:58,099 --> 00:44:05,390
<font color="#E5E5E5">token so this time we will use</font><font color="#CCCCCC"> this</font>

836
00:44:02,060 --> 00:44:09,730
token to inject a JSON continuous

837
00:44:05,390 --> 00:44:09,730
<font color="#E5E5E5">username the system username</font>

838
00:44:18,570 --> 00:44:21,110
<font color="#E5E5E5">okay</font>

839
00:44:21,930 --> 00:44:25,740
we change the password<font color="#CCCCCC"> because we are</font>

840
00:44:24,300 --> 00:44:27,240
actually<font color="#E5E5E5"> changing</font><font color="#CCCCCC"> the password</font><font color="#E5E5E5"> for our</font>

841
00:44:25,740 --> 00:44:29,009
account we<font color="#CCCCCC"> are evaluating it again and</font>

842
00:44:27,240 --> 00:44:32,850
setting<font color="#E5E5E5"> new password and security</font>

843
00:44:29,010 --> 00:44:35,430
question answer<font color="#CCCCCC"> okay so now we</font><font color="#E5E5E5"> have the</font>

844
00:44:32,850 --> 00:44:37,950
new token<font color="#E5E5E5"> the security answer token</font>

845
00:44:35,430 --> 00:44:41,399
<font color="#E5E5E5">containing</font><font color="#CCCCCC"> the JSON</font><font color="#E5E5E5"> that corresponds to</font>

846
00:44:37,950 --> 00:44:44,460
the system user so now we will<font color="#E5E5E5"> be using</font>

847
00:44:41,400 --> 00:44:46,730
that token the test user security answer

848
00:44:44,460 --> 00:44:46,730
again

849
00:44:53,280 --> 00:44:57,810
and this time we will set the password

850
00:44:55,080 --> 00:45:02,580
<font color="#CCCCCC">but not for our</font><font color="#E5E5E5"> account but for the</font>

851
00:44:57,810 --> 00:45:08,850
system<font color="#E5E5E5"> account so say it says path test</font>

852
00:45:02,580 --> 00:45:11,190
password<font color="#CCCCCC"> zero send it and successful our</font>

853
00:45:08,850 --> 00:45:16,170
account is validated<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> actually says</font>

854
00:45:11,190 --> 00:45:19,020
activate but<font color="#CCCCCC"> it's validated so now the</font>

855
00:45:16,170 --> 00:45:23,360
system user must<font color="#E5E5E5"> be activated</font><font color="#CCCCCC"> and with</font>

856
00:45:19,020 --> 00:45:23,360
the password we set we will check<font color="#E5E5E5"> this</font>

857
00:45:31,640 --> 00:45:34,690
copy the<font color="#CCCCCC"> password</font>

858
00:45:37,280 --> 00:45:42,400
and we have the<font color="#E5E5E5"> system user activated</font>

859
00:45:41,000 --> 00:45:51,659
and<font color="#CCCCCC"> when</font><font color="#E5E5E5"> the bus</font><font color="#CCCCCC"> moves it</font>

860
00:45:42,400 --> 00:45:51,659
[Applause]

861
00:46:01,430 --> 00:46:10,980
to fix this sub ASAP released good news

862
00:46:06,140 --> 00:46:16,920
<font color="#CCCCCC">seg we denote and</font><font color="#E5E5E5"> we need to install it</font>

863
00:46:10,980 --> 00:46:19,980
or disable<font color="#E5E5E5"> the users a service so final</font>

864
00:46:16,920 --> 00:46:23,730
<font color="#E5E5E5">conclusions complexity complexity is the</font>

865
00:46:19,980 --> 00:46:26,310
enemy we<font color="#E5E5E5"> always so many ways of</font>

866
00:46:23,730 --> 00:46:31,109
<font color="#E5E5E5">implementing a security recovery</font>

867
00:46:26,310 --> 00:46:34,230
mechanism and we also see<font color="#CCCCCC"> that many many</font>

868
00:46:31,109 --> 00:46:36,560
applications<font color="#CCCCCC"> use a combination of them</font>

869
00:46:34,230 --> 00:46:40,440
<font color="#E5E5E5">instead of using one in a correct way</font><font color="#CCCCCC"> so</font>

870
00:46:36,560 --> 00:46:42,390
<font color="#CCCCCC">this is not just an SCP</font><font color="#E5E5E5"> problem but it</font>

871
00:46:40,440 --> 00:46:46,280
happens<font color="#E5E5E5"> in many</font><font color="#CCCCCC"> application and</font>

872
00:46:42,390 --> 00:46:49,230
important and important companies also

873
00:46:46,280 --> 00:46:52,770
that the recovery feature<font color="#E5E5E5"> impact in</font>

874
00:46:49,230 --> 00:46:56,040
critical data<font color="#E5E5E5"> and we should consider the</font>

875
00:46:52,770 --> 00:46:58,500
recovery as important as a<font color="#E5E5E5"> login or as</font>

876
00:46:56,040 --> 00:47:01,619
any other of the<font color="#CCCCCC"> education method rate</font>

877
00:46:58,500 --> 00:47:03,990
authentication feature and finally we

878
00:47:01,619 --> 00:47:05,820
say<font color="#E5E5E5"> stopping</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> making secure queries</font>

879
00:47:03,990 --> 00:47:07,618
<font color="#E5E5E5">we don't need to we have prepared</font>

880
00:47:05,820 --> 00:47:10,859
statements we can<font color="#CCCCCC"> do it correctly we</font>

881
00:47:07,619 --> 00:47:13,080
very<font color="#CCCCCC"> Sonico we could do that code in a</font>

882
00:47:10,859 --> 00:47:18,009
correct way<font color="#E5E5E5"> and there</font><font color="#CCCCCC"> would be no</font>

883
00:47:13,080 --> 00:47:24,078
<font color="#E5E5E5">security injection thank you</font>

884
00:47:18,010 --> 00:47:24,079
[Applause]

885
00:47:24,450 --> 00:47:33,960
thank you for<font color="#E5E5E5"> your contribution</font>

886
00:47:26,560 --> 00:47:37,740
<font color="#E5E5E5">questions thanks guys for some nice work</font>

887
00:47:33,960 --> 00:47:40,120
<font color="#E5E5E5">I know that the USS so the user</font>

888
00:47:37,740 --> 00:47:42,430
<font color="#E5E5E5">self-service stuff is not by default</font>

889
00:47:40,120 --> 00:47:44,529
switched on I think or is it<font color="#CCCCCC"> and do you</font>

890
00:47:42,430 --> 00:47:49,270
know how often<font color="#E5E5E5"> it's being used in terms</font>

891
00:47:44,530 --> 00:47:51,700
<font color="#CCCCCC">of percentage of customers any ID</font><font color="#E5E5E5"> no I'm</font>

892
00:47:49,270 --> 00:47:54,610
not pretty<font color="#CCCCCC"> sure but we</font><font color="#E5E5E5"> found some</font>

893
00:47:51,700 --> 00:47:57,700
companies with the<font color="#E5E5E5"> system</font><font color="#CCCCCC"> expose online</font>

894
00:47:54,610 --> 00:48:01,270
<font color="#E5E5E5">it's not a lot of them but at least we</font>

895
00:47:57,700 --> 00:48:03,850
<font color="#E5E5E5">saw one case for our customer we don't</font>

896
00:48:01,270 --> 00:48:06,040
know we don't<font color="#E5E5E5"> know but it's not</font>

897
00:48:03,850 --> 00:48:07,569
switching<font color="#E5E5E5"> my default yes very sure so</font>

898
00:48:06,040 --> 00:48:10,990
<font color="#E5E5E5">exactly you have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> activate your</font>

899
00:48:07,570 --> 00:48:12,130
activate by default<font color="#E5E5E5"> it's it's it's in</font>

900
00:48:10,990 --> 00:48:14,169
the system<font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> something that</font><font color="#CCCCCC"> you</font>

901
00:48:12,130 --> 00:48:16,150
<font color="#E5E5E5">have to install but</font><font color="#CCCCCC"> these deactivated</font>

902
00:48:14,170 --> 00:48:20,430
you<font color="#E5E5E5"> have to explicitly activate it it</font>

903
00:48:16,150 --> 00:48:20,430
might<font color="#E5E5E5"> help a little</font><font color="#CCCCCC"> yeah thanks</font>

904
00:48:23,010 --> 00:48:27,640
<font color="#CCCCCC">okay so I fully agree to prepare</font>

905
00:48:25,780 --> 00:48:30,790
<font color="#E5E5E5">statements and sort of concatenating</font>

906
00:48:27,640 --> 00:48:32,560
some but I want to know did<font color="#CCCCCC"> ICP change</font>

907
00:48:30,790 --> 00:48:35,080
anything<font color="#E5E5E5"> so because to my best knowledge</font>

908
00:48:32,560 --> 00:48:39,759
<font color="#E5E5E5">the last time I looked at it</font><font color="#CCCCCC"> author</font><font color="#E5E5E5"> user</font>

909
00:48:35,080 --> 00:48:42,009
was not prepared<font color="#E5E5E5"> at least as far</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> I</font>

910
00:48:39,760 --> 00:48:49,210
know the code was fixed<font color="#CCCCCC"> yes in the last</font>

911
00:48:42,010 --> 00:48:51,660
version<font color="#E5E5E5"> it was but okay through the</font>

912
00:48:49,210 --> 00:48:51,660
questions

913
00:48:58,520 --> 00:49:06,869
thanks again

914
00:49:00,010 --> 00:49:06,869
[Applause]

