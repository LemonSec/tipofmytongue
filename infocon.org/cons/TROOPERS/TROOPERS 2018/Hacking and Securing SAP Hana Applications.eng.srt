1
00:00:04,430 --> 00:00:10,190
<font color="#E5E5E5">okay so let's continue</font><font color="#CCCCCC"> next up is</font>

2
00:00:08,058 --> 00:00:12,469
<font color="#CCCCCC">Frederick vitamin from</font><font color="#E5E5E5"> virtual</font><font color="#CCCCCC"> forge and</font>

3
00:00:10,190 --> 00:00:14,480
he's speaking about<font color="#E5E5E5"> hacking and securing</font>

4
00:00:12,469 --> 00:00:16,270
<font color="#CCCCCC">sa P Hana</font><font color="#E5E5E5"> applications from a</font>

5
00:00:14,480 --> 00:00:24,980
<font color="#CCCCCC">penetration</font><font color="#E5E5E5"> test this point of view</font>

6
00:00:16,270 --> 00:00:27,799
<font color="#E5E5E5">thank you warm welcome so hi everybody</font>

7
00:00:24,980 --> 00:00:29,929
<font color="#E5E5E5">so thank</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> for the introduction so</font>

8
00:00:27,800 --> 00:00:32,870
I've been<font color="#E5E5E5"> doing penetration testing in</font>

9
00:00:29,929 --> 00:00:38,599
the<font color="#CCCCCC"> SMP environment for</font><font color="#E5E5E5"> about 12 years</font>

10
00:00:32,870 --> 00:00:40,730
<font color="#E5E5E5">now a couple</font><font color="#CCCCCC"> of years ago Mahana was</font>

11
00:00:38,600 --> 00:00:45,590
presented by ASAP so we are also

12
00:00:40,730 --> 00:00:47,779
starting investigating<font color="#E5E5E5"> that and we today</font>

13
00:00:45,590 --> 00:00:49,790
just want to see it<font color="#E5E5E5"> experience in terms</font>

14
00:00:47,780 --> 00:00:53,450
of<font color="#E5E5E5"> what</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> seen you're in code</font>

15
00:00:49,790 --> 00:00:55,970
reviews and<font color="#E5E5E5"> also what is possible within</font>

16
00:00:53,450 --> 00:01:00,110
custom applications that are written<font color="#E5E5E5"> on</font>

17
00:00:55,970 --> 00:01:02,180
<font color="#E5E5E5">top of Hana before we start maybe a</font>

18
00:01:00,110 --> 00:01:06,770
short question<font color="#CCCCCC"> whom of you</font><font color="#E5E5E5"> is a</font>

19
00:01:02,180 --> 00:01:09,830
penetration tester guy<font color="#E5E5E5"> okay so whom of</font>

20
00:01:06,770 --> 00:01:13,699
you is<font color="#CCCCCC"> sa</font><font color="#E5E5E5"> P basis or has</font><font color="#CCCCCC"> Haena basis</font>

21
00:01:09,830 --> 00:01:20,690
<font color="#E5E5E5">experience who is a Hana developer no</font>

22
00:01:13,700 --> 00:01:23,360
one at all<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> let's get started the</font>

23
00:01:20,690 --> 00:01:28,340
usual<font color="#CCCCCC"> disclaimer</font><font color="#E5E5E5"> short overview so I</font>

24
00:01:23,360 --> 00:01:31,190
have a lot<font color="#CCCCCC"> of content</font><font color="#E5E5E5"> let's see how much</font>

25
00:01:28,340 --> 00:01:33,020
time<font color="#CCCCCC"> we can have within questions</font>

26
00:01:31,190 --> 00:01:37,220
sections where we<font color="#E5E5E5"> could then also</font>

27
00:01:33,020 --> 00:01:40,490
elaborate on various<font color="#CCCCCC"> topics</font><font color="#E5E5E5"> Hana itself</font>

28
00:01:37,220 --> 00:01:43,820
is is is a huge<font color="#E5E5E5"> application</font><font color="#CCCCCC"> in therefore</font>

29
00:01:40,490 --> 00:01:47,210
there there's also a lot<font color="#CCCCCC"> of topics</font><font color="#E5E5E5"> you</font>

30
00:01:43,820 --> 00:01:50,419
<font color="#CCCCCC">could talk about so these are</font><font color="#E5E5E5"> just some</font>

31
00:01:47,210 --> 00:01:50,690
<font color="#CCCCCC">of them and I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to show you them</font>

32
00:01:50,420 --> 00:01:53,360
now

33
00:01:50,690 --> 00:01:56,840
so before we<font color="#CCCCCC"> start let's have a short</font>

34
00:01:53,360 --> 00:01:59,060
<font color="#CCCCCC">overview about</font><font color="#E5E5E5"> the Hana platform also</font>

35
00:01:56,840 --> 00:02:02,840
from architecture point of view how it

36
00:01:59,060 --> 00:02:05,390
is<font color="#E5E5E5"> typically deployed</font><font color="#CCCCCC"> with every s AP</font>

37
00:02:02,840 --> 00:02:07,850
application<font color="#E5E5E5"> and everyone who is already</font>

38
00:02:05,390 --> 00:02:09,429
<font color="#CCCCCC">running on the netweaver platform we</font>

39
00:02:07,850 --> 00:02:11,989
have<font color="#E5E5E5"> typically a</font><font color="#CCCCCC"> three-tier architecture</font>

40
00:02:09,429 --> 00:02:12,499
development<font color="#E5E5E5"> system</font><font color="#CCCCCC"> kunis</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> production</font>

41
00:02:11,989 --> 00:02:14,629
<font color="#E5E5E5">system</font>

42
00:02:12,499 --> 00:02:16,790
so what you could do<font color="#CCCCCC"> on one side is just</font>

43
00:02:14,629 --> 00:02:19,129
<font color="#E5E5E5">get rid of your Oracle db2 whatsoever</font>

44
00:02:16,790 --> 00:02:22,700
database running<font color="#CCCCCC"> beneath your netweaver</font>

45
00:02:19,129 --> 00:02:24,099
stack and just<font color="#E5E5E5"> exchange it with Hana so</font>

46
00:02:22,700 --> 00:02:26,659
that's one possibility

47
00:02:24,099 --> 00:02:28,760
<font color="#E5E5E5">second possibility</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> you can run Hana</font>

48
00:02:26,659 --> 00:02:31,249
standalone then you're running<font color="#CCCCCC"> the</font>

49
00:02:28,760 --> 00:02:33,739
database and includes an own application

50
00:02:31,249 --> 00:02:36,290
server<font color="#E5E5E5"> and you can develop of course on</font>

51
00:02:33,739 --> 00:02:38,629
<font color="#E5E5E5">top of that and you</font><font color="#CCCCCC"> can mix up</font><font color="#E5E5E5"> both</font>

52
00:02:36,290 --> 00:02:40,638
things and<font color="#E5E5E5"> then of course you can do</font>

53
00:02:38,629 --> 00:02:43,399
everything<font color="#E5E5E5"> on premise and you can also</font>

54
00:02:40,639 --> 00:02:48,680
put it into the couch and let's see

55
00:02:43,400 --> 00:02:50,950
<font color="#E5E5E5">where in the future</font><font color="#CCCCCC"> we will go so</font><font color="#E5E5E5"> that's</font>

56
00:02:48,680 --> 00:02:53,959
a short<font color="#E5E5E5"> overview about all the processes</font>

57
00:02:50,950 --> 00:02:56,589
that will run on<font color="#CCCCCC"> a Hana system it's just</font>

58
00:02:53,959 --> 00:02:59,029
<font color="#CCCCCC">to give you an overview</font>

59
00:02:56,590 --> 00:03:00,709
<font color="#CCCCCC">everyone who has already installed a</font>

60
00:02:59,029 --> 00:03:03,680
<font color="#CCCCCC">NetWeaver ABAB system as an example</font>

61
00:03:00,709 --> 00:03:06,409
<font color="#CCCCCC">already</font><font color="#E5E5E5"> knows there are quite some ports</font>

62
00:03:03,680 --> 00:03:09,650
that are<font color="#E5E5E5"> being opened</font><font color="#CCCCCC"> it's the same way</font>

63
00:03:06,409 --> 00:03:11,929
with the Hana system and especially<font color="#E5E5E5"> with</font>

64
00:03:09,650 --> 00:03:14,900
the XS advanced engine it will be that

65
00:03:11,930 --> 00:03:17,180
every<font color="#CCCCCC"> application you are running</font>

66
00:03:14,900 --> 00:03:20,209
<font color="#CCCCCC">depending on how you configure it</font><font color="#E5E5E5"> but</font>

67
00:03:17,180 --> 00:03:22,629
understand the configuration will use

68
00:03:20,209 --> 00:03:24,939
its own<font color="#CCCCCC"> Court</font>

69
00:03:22,629 --> 00:03:28,268
those of you who know the index server

70
00:03:24,939 --> 00:03:31,299
<font color="#E5E5E5">might see that Hana has a background</font>

71
00:03:28,269 --> 00:03:36,219
<font color="#CCCCCC">from</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> t-rex</font><font color="#E5E5E5"> so I think that's the</font>

72
00:03:31,299 --> 00:03:38,680
history<font color="#E5E5E5"> from where it evolved looking at</font>

73
00:03:36,219 --> 00:03:41,290
the custom code and the application

74
00:03:38,680 --> 00:03:45,310
development<font color="#CCCCCC"> we</font><font color="#E5E5E5"> basically need to</font>

75
00:03:41,290 --> 00:03:48,989
distinguish<font color="#E5E5E5"> between the let's say</font><font color="#CCCCCC"> hana</font>

76
00:03:45,310 --> 00:03:51,370
1.0 platform using<font color="#CCCCCC"> xsj as classic model</font>

77
00:03:48,989 --> 00:03:54,549
here<font color="#CCCCCC"> within the application development</font>

78
00:03:51,370 --> 00:03:57,099
we have<font color="#E5E5E5"> server-side xsj s</font><font color="#CCCCCC"> javascript</font><font color="#E5E5E5"> and</font>

79
00:03:54,549 --> 00:03:59,799
you can run secret script<font color="#CCCCCC"> on top of that</font>

80
00:03:57,099 --> 00:04:01,599
you have also<font color="#E5E5E5"> client</font><font color="#CCCCCC"> libraries</font><font color="#E5E5E5"> and you</font>

81
00:03:59,799 --> 00:04:04,359
have<font color="#E5E5E5"> those up you have 5 framework which</font>

82
00:04:01,599 --> 00:04:07,388
you can use<font color="#E5E5E5"> to access</font><font color="#CCCCCC"> those back-end</font>

83
00:04:04,359 --> 00:04:10,239
applications of<font color="#E5E5E5"> course you do have JDBC</font>

84
00:04:07,389 --> 00:04:12,700
and all that kind of<font color="#E5E5E5"> stuff if you go for</font>

85
00:04:10,239 --> 00:04:17,889
Hana 2.0<font color="#E5E5E5"> and it was already</font><font color="#CCCCCC"> introduced</font>

86
00:04:12,700 --> 00:04:21,279
in Hana 1.0<font color="#CCCCCC"> but it's now let's say the</font>

87
00:04:17,889 --> 00:04:23,110
<font color="#CCCCCC">standard way which is exist advanced the</font>

88
00:04:21,279 --> 00:04:25,299
corresponding engine then you have the

89
00:04:23,110 --> 00:04:28,330
<font color="#CCCCCC">possibilities</font><font color="#E5E5E5"> also to run nodejs</font>

90
00:04:25,300 --> 00:04:31,960
<font color="#E5E5E5">Java and basically also to embed any</font>

91
00:04:28,330 --> 00:04:34,680
custom language<font color="#E5E5E5"> in runtime</font><font color="#CCCCCC"> I'm not sure</font>

92
00:04:31,960 --> 00:04:37,210
how well this<font color="#E5E5E5"> is supported or</font><font color="#CCCCCC"> not</font>

93
00:04:34,680 --> 00:04:40,419
<font color="#CCCCCC">because</font><font color="#E5E5E5"> currently what I at least read</font>

94
00:04:37,210 --> 00:04:43,210
is<font color="#CCCCCC"> that it's not supported</font><font color="#E5E5E5"> however</font><font color="#CCCCCC"> it's</font>

95
00:04:40,419 --> 00:04:45,370
listed on<font color="#E5E5E5"> the feature list so let's see</font>

96
00:04:43,210 --> 00:04:47,250
where this will<font color="#CCCCCC"> go</font><font color="#E5E5E5"> and also in</font><font color="#CCCCCC"> terms</font><font color="#E5E5E5"> of</font>

97
00:04:45,370 --> 00:04:50,080
portability

98
00:04:47,250 --> 00:04:54,520
what could happen or what<font color="#E5E5E5"> could go wrong</font>

99
00:04:50,080 --> 00:04:56,710
<font color="#CCCCCC">so I'm quite looking forward</font><font color="#E5E5E5"> to the next</font>

100
00:04:54,520 --> 00:04:59,130
<font color="#CCCCCC">ticket what kind of features</font><font color="#E5E5E5"> will be</font>

101
00:04:56,710 --> 00:05:03,638
<font color="#E5E5E5">presented because the amount of</font>

102
00:04:59,130 --> 00:05:05,949
<font color="#E5E5E5">complexity that</font><font color="#CCCCCC"> came in going from</font><font color="#E5E5E5"> X SJS</font>

103
00:05:03,639 --> 00:05:08,889
<font color="#CCCCCC">and going then to</font><font color="#E5E5E5"> access advanced</font><font color="#CCCCCC"> this</font>

104
00:05:05,949 --> 00:05:10,840
<font color="#E5E5E5">is quite high and also takes a little</font>

105
00:05:08,889 --> 00:05:14,310
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> understanding and and all the</font>

106
00:05:10,840 --> 00:05:14,310
history to<font color="#E5E5E5"> get the full picture</font>

107
00:05:17,569 --> 00:05:24,750
so this is just<font color="#E5E5E5"> an overview</font><font color="#CCCCCC"> slide from</font>

108
00:05:21,150 --> 00:05:27,900
<font color="#CCCCCC">sa P it's a four it's basically from</font>

109
00:05:24,750 --> 00:05:31,979
<font color="#E5E5E5">help calm for those of you who have no</font>

110
00:05:27,900 --> 00:05:34,258
clue yet about the Hana<font color="#CCCCCC"> platform you get</font>

111
00:05:31,979 --> 00:05:36,030
<font color="#CCCCCC">a lot</font><font color="#E5E5E5"> of things out of the box and from</font>

112
00:05:34,259 --> 00:05:39,300
my perspective it<font color="#E5E5E5"> has been also</font>

113
00:05:36,030 --> 00:05:42,059
developed with<font color="#CCCCCC"> a security mindset</font><font color="#E5E5E5"> so you</font>

114
00:05:39,300 --> 00:05:44,190
get SSL you get data volume encryption

115
00:05:42,060 --> 00:05:46,740
you have roles you have<font color="#E5E5E5"> authentication</font>

116
00:05:44,190 --> 00:05:48,630
all those kinds of<font color="#E5E5E5"> things are basically</font>

117
00:05:46,740 --> 00:05:50,910
available<font color="#E5E5E5"> out of the box and of course</font>

118
00:05:48,630 --> 00:05:56,969
then it will depend on<font color="#E5E5E5"> how you configure</font>

119
00:05:50,910 --> 00:06:00,060
<font color="#E5E5E5">it and how you run it so that was the</font>

120
00:05:56,970 --> 00:06:03,539
very short introduction<font color="#CCCCCC"> let's look at</font>

121
00:06:00,060 --> 00:06:05,460
the<font color="#E5E5E5"> security settings you can have and</font>

122
00:06:03,539 --> 00:06:09,800
for<font color="#E5E5E5"> that first we want to</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at the</font>

123
00:06:05,460 --> 00:06:12,270
authorizations again<font color="#E5E5E5"> that's a very short</font>

124
00:06:09,800 --> 00:06:17,909
<font color="#E5E5E5">introduction so there are various kind</font>

125
00:06:12,270 --> 00:06:20,729
of privileges and<font color="#E5E5E5"> this is not working</font>

126
00:06:17,909 --> 00:06:24,840
<font color="#CCCCCC">okay so they're very</font><font color="#E5E5E5"> kind of privileges</font>

127
00:06:20,729 --> 00:06:27,330
<font color="#CCCCCC">you can have and</font><font color="#E5E5E5"> basically the</font><font color="#CCCCCC"> idea is</font>

128
00:06:24,840 --> 00:06:30,690
<font color="#E5E5E5">that you</font><font color="#CCCCCC"> have someone who is creating</font>

129
00:06:27,330 --> 00:06:33,090
roles<font color="#E5E5E5"> that one is doing</font><font color="#CCCCCC"> this during</font><font color="#E5E5E5"> the</font>

130
00:06:30,690 --> 00:06:35,699
design time then you've somehow activate

131
00:06:33,090 --> 00:06:37,880
it and then during runtime<font color="#CCCCCC"> a user</font>

132
00:06:35,699 --> 00:06:42,300
administrator is assigning these roads

133
00:06:37,880 --> 00:06:46,130
to users<font color="#E5E5E5"> that's the kind of concept you</font>

134
00:06:42,300 --> 00:06:48,599
<font color="#CCCCCC">can also during let's say</font><font color="#E5E5E5"> run time</font>

135
00:06:46,130 --> 00:06:50,400
dynamically create new roles<font color="#E5E5E5"> but then</font>

136
00:06:48,599 --> 00:06:52,800
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> the only</font><font color="#CCCCCC"> one who can grant</font><font color="#E5E5E5"> those</font>

137
00:06:50,400 --> 00:06:55,229
roads to other<font color="#E5E5E5"> users and</font><font color="#CCCCCC"> that's</font>

138
00:06:52,800 --> 00:06:56,820
<font color="#CCCCCC">something you should not use and it's</font>

139
00:06:55,229 --> 00:07:00,240
everywhere<font color="#E5E5E5"> written that you should not</font>

140
00:06:56,820 --> 00:07:03,570
<font color="#E5E5E5">use</font><font color="#CCCCCC"> it from an application</font><font color="#E5E5E5"> developers</font>

141
00:07:00,240 --> 00:07:06,750
perspective<font color="#CCCCCC"> you have the</font><font color="#E5E5E5"> possibility</font>

142
00:07:03,570 --> 00:07:09,289
<font color="#CCCCCC">that with every application you can also</font>

143
00:07:06,750 --> 00:07:13,740
assign authorizations and<font color="#E5E5E5"> create new</font>

144
00:07:09,289 --> 00:07:16,800
authorizations<font color="#E5E5E5"> so this is one example of</font>

145
00:07:13,740 --> 00:07:19,009
our test package where you<font color="#E5E5E5"> can configure</font>

146
00:07:16,800 --> 00:07:22,280
it and you can assign different

147
00:07:19,009 --> 00:07:22,280
<font color="#CCCCCC">privileges to it</font>

148
00:07:22,610 --> 00:07:30,300
looking at the<font color="#E5E5E5"> details every excess</font>

149
00:07:26,820 --> 00:07:33,060
application<font color="#CCCCCC"> will contain at least one</font>

150
00:07:30,300 --> 00:07:34,890
excess<font color="#CCCCCC"> excess file and within that</font>

151
00:07:33,060 --> 00:07:37,740
excess excess file you get the

152
00:07:34,890 --> 00:07:40,800
<font color="#E5E5E5">interesting settings so on one hand we</font>

153
00:07:37,740 --> 00:07:44,640
<font color="#CCCCCC">have exposed</font><font color="#E5E5E5"> true which means that this</font>

154
00:07:40,800 --> 00:07:48,540
is remotely<font color="#E5E5E5"> callable</font><font color="#CCCCCC"> and this will</font>

155
00:07:44,640 --> 00:07:51,300
basically be valid<font color="#E5E5E5"> for</font><font color="#CCCCCC"> everything within</font>

156
00:07:48,540 --> 00:07:54,090
<font color="#E5E5E5">the same package and then we have</font>

157
00:07:51,300 --> 00:07:55,830
authentication<font color="#E5E5E5"> you can look for method</font>

158
00:07:54,090 --> 00:07:58,229
form then<font color="#E5E5E5"> you need to authenticate</font>

159
00:07:55,830 --> 00:08:00,359
otherwise you cannot access the

160
00:07:58,230 --> 00:08:04,880
application or if you use authentication

161
00:08:00,360 --> 00:08:07,820
now<font color="#E5E5E5"> then you can connect anonymously</font>

162
00:08:04,880 --> 00:08:11,730
subsequently<font color="#E5E5E5"> you can also assign</font>

163
00:08:07,820 --> 00:08:17,460
authorizations<font color="#E5E5E5"> you can create rewrite</font>

164
00:08:11,730 --> 00:08:20,220
rules<font color="#E5E5E5"> so to beautify corresponding</font>

165
00:08:17,460 --> 00:08:23,849
entries as an example<font color="#E5E5E5"> you can enforce</font>

166
00:08:20,220 --> 00:08:28,650
the usage of<font color="#E5E5E5"> SSL you can enforce or</font>

167
00:08:23,850 --> 00:08:30,510
enforce<font color="#E5E5E5"> or should I say properly you can</font>

168
00:08:28,650 --> 00:08:34,228
configure what we would<font color="#CCCCCC"> say also</font><font color="#E5E5E5"> later</font>

169
00:08:30,510 --> 00:08:39,270
on and<font color="#CCCCCC"> out-of-the-box</font><font color="#E5E5E5"> xsrf protection</font>

170
00:08:34,229 --> 00:08:41,250
and<font color="#E5E5E5"> by just</font><font color="#CCCCCC"> turning it to true then we</font>

171
00:08:39,270 --> 00:08:42,780
<font color="#E5E5E5">have two different database connections</font>

172
00:08:41,250 --> 00:08:45,840
anonymous connection and default

173
00:08:42,780 --> 00:08:48,449
connection<font color="#E5E5E5"> so if you have an anonymous</font>

174
00:08:45,840 --> 00:08:50,340
application<font color="#E5E5E5"> somehow you need to</font><font color="#CCCCCC"> access</font>

175
00:08:48,450 --> 00:08:52,530
<font color="#E5E5E5">the database and the corresponding user</font>

176
00:08:50,340 --> 00:08:55,470
or technical user is then defined<font color="#CCCCCC"> any</font>

177
00:08:52,530 --> 00:08:58,110
anonymous<font color="#E5E5E5"> connection if you have</font>

178
00:08:55,470 --> 00:09:01,020
authorized users then you can define a

179
00:08:58,110 --> 00:09:02,670
default connection<font color="#CCCCCC"> and that's the</font>

180
00:09:01,020 --> 00:09:08,400
corresponding file but I'm not<font color="#E5E5E5"> going to</font>

181
00:09:02,670 --> 00:09:12,839
elaborate on<font color="#CCCCCC"> that</font><font color="#E5E5E5"> in the same way you</font>

182
00:09:08,400 --> 00:09:16,380
can<font color="#E5E5E5"> also define custom headers like</font><font color="#CCCCCC"> this</font>

183
00:09:12,840 --> 00:09:18,600
so to make your<font color="#E5E5E5"> applications your secure</font>

184
00:09:16,380 --> 00:09:21,330
against certain<font color="#E5E5E5"> type of weapon tax and</font>

185
00:09:18,600 --> 00:09:24,810
<font color="#E5E5E5">that gives you a first overview but your</font>

186
00:09:21,330 --> 00:09:27,390
responsibilities that developer has so<font color="#E5E5E5"> I</font>

187
00:09:24,810 --> 00:09:28,829
as the developer not only develop code<font color="#E5E5E5"> I</font>

188
00:09:27,390 --> 00:09:31,199
also need to take<font color="#E5E5E5"> care</font><font color="#CCCCCC"> about the</font>

189
00:09:28,830 --> 00:09:33,720
authorizations<font color="#E5E5E5"> and it might be that I</font>

190
00:09:31,200 --> 00:09:35,100
also<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to take</font><font color="#E5E5E5"> care</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font>

191
00:09:33,720 --> 00:09:38,520
<font color="#E5E5E5">security settings</font>

192
00:09:35,100 --> 00:09:40,950
this is thinking about DevOps<font color="#E5E5E5"> or mixing</font>

193
00:09:38,520 --> 00:09:44,100
<font color="#E5E5E5">two together in the past in the</font><font color="#CCCCCC"> a Bop</font>

194
00:09:40,950 --> 00:09:45,810
word for me it was like you<font color="#CCCCCC"> have someone</font>

195
00:09:44,100 --> 00:09:47,310
who<font color="#CCCCCC"> is doing basis you will still</font><font color="#E5E5E5"> have</font>

196
00:09:45,810 --> 00:09:49,410
that guy<font color="#E5E5E5"> you have someone who's doing</font>

197
00:09:47,310 --> 00:09:51,089
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the roles and authorizations</font><font color="#E5E5E5"> and</font>

198
00:09:49,410 --> 00:09:53,250
then you have someone<font color="#CCCCCC"> who is</font><font color="#E5E5E5"> the</font>

199
00:09:51,090 --> 00:09:55,290
developer<font color="#E5E5E5"> and here you have the case</font>

200
00:09:53,250 --> 00:10:01,740
that<font color="#CCCCCC"> the developer</font><font color="#E5E5E5"> at least for this</font>

201
00:09:55,290 --> 00:10:07,579
part is taking<font color="#E5E5E5"> over all three roles so</font>

202
00:10:01,740 --> 00:10:11,010
let's dive into the possibilities and

203
00:10:07,580 --> 00:10:14,310
technologies you have<font color="#E5E5E5"> one of the nice</font>

204
00:10:11,010 --> 00:10:20,430
<font color="#CCCCCC">things is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can easily expose any</font>

205
00:10:14,310 --> 00:10:22,650
any table<font color="#CCCCCC"> yr-old</font><font color="#E5E5E5"> data so</font><font color="#CCCCCC"> all you need</font><font color="#E5E5E5"> to</font>

206
00:10:20,430 --> 00:10:26,160
<font color="#CCCCCC">do is you need to define a</font><font color="#E5E5E5"> nexus</font><font color="#CCCCCC"> Oh data</font>

207
00:10:22,650 --> 00:10:29,490
<font color="#E5E5E5">fire which contains basically service</font>

208
00:10:26,160 --> 00:10:34,170
and then<font color="#E5E5E5"> you have either a schema or in</font>

209
00:10:29,490 --> 00:10:35,820
this case a table and<font color="#CCCCCC"> you define it here</font>

210
00:10:34,170 --> 00:10:38,760
<font color="#E5E5E5">it</font><font color="#CCCCCC"> is Trooper</font><font color="#E5E5E5"> stem or customer as</font>

211
00:10:35,820 --> 00:10:42,450
customers<font color="#E5E5E5"> and that's it and then it's</font>

212
00:10:38,760 --> 00:10:44,730
exposed and basically by just performing

213
00:10:42,450 --> 00:10:47,310
<font color="#E5E5E5">if you have the corresponding dot exist</font>

214
00:10:44,730 --> 00:10:50,970
<font color="#CCCCCC">Access file you can</font><font color="#E5E5E5"> directly</font><font color="#CCCCCC"> access it</font>

215
00:10:47,310 --> 00:10:54,900
you can as<font color="#CCCCCC"> a</font><font color="#E5E5E5"> data by</font><font color="#CCCCCC"> default</font><font color="#E5E5E5"> also allows</font>

216
00:10:50,970 --> 00:10:57,120
you<font color="#CCCCCC"> to perform</font><font color="#E5E5E5"> modifications you</font><font color="#CCCCCC"> can</font>

217
00:10:54,900 --> 00:11:01,699
again limit<font color="#E5E5E5"> these down so</font><font color="#CCCCCC"> you can say</font>

218
00:10:57,120 --> 00:11:01,700
<font color="#CCCCCC">create update delete</font><font color="#E5E5E5"> is forbidden</font>

219
00:11:06,940 --> 00:11:16,070
so if we do this then you can just

220
00:11:13,820 --> 00:11:18,590
directly go to<font color="#E5E5E5"> the URL you can access it</font>

221
00:11:16,070 --> 00:11:22,760
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then you have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> fold features of</font>

222
00:11:18,590 --> 00:11:25,010
<font color="#E5E5E5">all data so you</font><font color="#CCCCCC"> can use</font><font color="#E5E5E5"> dollar metadata</font>

223
00:11:22,760 --> 00:11:27,830
or whatsoever we see<font color="#E5E5E5"> a</font><font color="#CCCCCC"> customer's then</font>

224
00:11:25,010 --> 00:11:30,730
we can append a slash for customers and

225
00:11:27,830 --> 00:11:33,920
then we can crawl<font color="#CCCCCC"> through the ideas or</font>

226
00:11:30,730 --> 00:11:37,790
we can list everything<font color="#E5E5E5"> there have been</font>

227
00:11:33,920 --> 00:11:40,130
talks on<font color="#E5E5E5"> blackhat</font><font color="#CCCCCC"> I think already</font><font color="#E5E5E5"> in</font>

228
00:11:37,790 --> 00:11:43,969
2012<font color="#E5E5E5"> talking about our data so I don't</font>

229
00:11:40,130 --> 00:11:46,550
want to elaborate on<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I think it's</font>

230
00:11:43,970 --> 00:11:50,230
still important<font color="#E5E5E5"> because</font><font color="#CCCCCC"> Zab</font><font color="#E5E5E5"> ui5 is</font>

231
00:11:46,550 --> 00:11:54,770
heavily<font color="#E5E5E5"> using it so that's</font><font color="#CCCCCC"> a front-end</font>

232
00:11:50,230 --> 00:11:58,010
<font color="#E5E5E5">technology</font><font color="#CCCCCC"> and I see more</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> more</font>

233
00:11:54,770 --> 00:11:59,930
services using this I see also<font color="#E5E5E5"> the</font>

234
00:11:58,010 --> 00:12:02,830
challenge<font color="#CCCCCC"> that more and more developers</font>

235
00:11:59,930 --> 00:12:06,229
within<font color="#CCCCCC"> s ap systems are trying to set up</font>

236
00:12:02,830 --> 00:12:08,870
stateful applications using<font color="#CCCCCC"> old data</font>

237
00:12:06,230 --> 00:12:11,900
even<font color="#CCCCCC"> though that is initially a</font>

238
00:12:08,870 --> 00:12:15,230
stateless rest service so<font color="#CCCCCC"> that brings in</font>

239
00:12:11,900 --> 00:12:16,780
some challenges<font color="#CCCCCC"> for the developers</font><font color="#E5E5E5"> to</font>

240
00:12:15,230 --> 00:12:22,220
<font color="#E5E5E5">think about all the necessary</font>

241
00:12:16,780 --> 00:12:25,010
constraints so what we've seen it's

242
00:12:22,220 --> 00:12:26,930
super easy so<font color="#E5E5E5"> this will take you if you</font>

243
00:12:25,010 --> 00:12:28,790
have<font color="#E5E5E5"> basically access to your web</font>

244
00:12:26,930 --> 00:12:30,500
environment<font color="#CCCCCC"> and you just know okay I</font>

245
00:12:28,790 --> 00:12:32,660
<font color="#E5E5E5">need to apply the</font><font color="#CCCCCC"> file but</font><font color="#E5E5E5"> it takes you</font>

246
00:12:30,500 --> 00:12:34,010
<font color="#CCCCCC">one minute and</font><font color="#E5E5E5"> then you have your</font><font color="#CCCCCC"> old</font>

247
00:12:32,660 --> 00:12:36,890
data service right<font color="#E5E5E5"> there</font><font color="#CCCCCC"> so that's</font>

248
00:12:34,010 --> 00:12:39,290
that's quite<font color="#E5E5E5"> nice from</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> penetration</font>

249
00:12:36,890 --> 00:12:40,850
testers point of view everything is

250
00:12:39,290 --> 00:12:43,189
exposed<font color="#E5E5E5"> and I have a quite nice</font>

251
00:12:40,850 --> 00:12:44,960
interface<font color="#E5E5E5"> and I can sort the data you</font>

252
00:12:43,190 --> 00:12:48,290
can<font color="#CCCCCC"> also</font><font color="#E5E5E5"> set up any back-end input</font>

253
00:12:44,960 --> 00:12:49,850
validation<font color="#E5E5E5"> and stuff like that but from</font>

254
00:12:48,290 --> 00:12:51,560
a<font color="#E5E5E5"> penetration testers point of view I</font>

255
00:12:49,850 --> 00:12:53,030
can<font color="#CCCCCC"> easily crawl the data and pull out</font>

256
00:12:51,560 --> 00:12:54,770
all the<font color="#E5E5E5"> data and</font><font color="#CCCCCC"> it's really</font><font color="#E5E5E5"> the</font>

257
00:12:53,030 --> 00:12:57,260
question<font color="#E5E5E5"> about the authorizations and</font>

258
00:12:54,770 --> 00:13:01,660
<font color="#E5E5E5">how the application is behaving whether</font>

259
00:12:57,260 --> 00:13:01,660
that's an issue<font color="#E5E5E5"> and how critical it is</font>

260
00:13:01,720 --> 00:13:07,510
so take<font color="#CCCCCC"> care about authentication</font><font color="#E5E5E5"> and</font>

261
00:13:05,210 --> 00:13:07,510
authorization

262
00:13:08,470 --> 00:13:20,450
so let's go for a classical one which is

263
00:13:12,740 --> 00:13:22,790
cross-site scripting so for cross-site

264
00:13:20,450 --> 00:13:28,370
scripting I do have a short demo

265
00:13:22,790 --> 00:13:30,709
application<font color="#CCCCCC"> which which we can use so</font>

266
00:13:28,370 --> 00:13:35,320
first let's just talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> xsj s from</font>

267
00:13:30,710 --> 00:13:38,690
my perspective<font color="#E5E5E5"> xsj s</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> meant to provide</font>

268
00:13:35,320 --> 00:13:41,420
data<font color="#E5E5E5"> why</font><font color="#CCCCCC"> are JSON you can write your</font>

269
00:13:38,690 --> 00:13:45,440
<font color="#E5E5E5">back-end logic you could also abuse it</font>

270
00:13:41,420 --> 00:13:49,459
to write dynamic HTML pages so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

271
00:13:45,440 --> 00:13:52,430
do that<font color="#E5E5E5"> going for the XS advanced engine</font>

272
00:13:49,460 --> 00:13:55,190
you can also see that<font color="#CCCCCC"> then it's also a</font>

273
00:13:52,430 --> 00:13:59,270
possibility<font color="#E5E5E5"> to directly deploy html5</font>

274
00:13:55,190 --> 00:14:02,360
applications<font color="#E5E5E5"> and in the same way if you</font>

275
00:13:59,270 --> 00:14:04,880
<font color="#E5E5E5">create dynamically HTML pages then of</font>

276
00:14:02,360 --> 00:14:07,010
course it's<font color="#E5E5E5"> quite easy</font><font color="#CCCCCC"> you just</font><font color="#E5E5E5"> include</font>

277
00:14:04,880 --> 00:14:09,040
any sort<font color="#E5E5E5"> of input you forget about the</font>

278
00:14:07,010 --> 00:14:12,430
encoding and then you will end up with

279
00:14:09,040 --> 00:14:19,900
<font color="#CCCCCC">cross-site scripting in all its flavors</font>

280
00:14:12,430 --> 00:14:19,900
so let's see

281
00:15:04,310 --> 00:15:09,410
so that's<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> just an example</font>

282
00:15:06,680 --> 00:15:11,388
<font color="#CCCCCC">application which we created</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> uses</font>

283
00:15:09,410 --> 00:15:15,350
<font color="#CCCCCC">up UI 5 and we have some back-end</font>

284
00:15:11,389 --> 00:15:17,180
<font color="#E5E5E5">services</font><font color="#CCCCCC"> and with</font><font color="#E5E5E5"> these we can play</font>

285
00:15:15,350 --> 00:15:21,699
around and make<font color="#E5E5E5"> various demonstrations</font>

286
00:15:17,180 --> 00:15:24,050
and then we can also look at the<font color="#E5E5E5"> coach</font>

287
00:15:21,699 --> 00:15:27,469
<font color="#E5E5E5">what is the root cause for</font><font color="#CCCCCC"> the</font>

288
00:15:24,050 --> 00:15:30,019
corresponding content<font color="#E5E5E5"> so in this case so</font>

289
00:15:27,470 --> 00:15:33,170
sorry for<font color="#E5E5E5"> the zoom now I'm looking for</font>

290
00:15:30,019 --> 00:15:36,259
<font color="#E5E5E5">cross-site scripting I can also now say</font>

291
00:15:33,170 --> 00:15:39,829
let's just provide here any sort of user

292
00:15:36,259 --> 00:15:42,139
input<font color="#CCCCCC"> we can execute it</font><font color="#E5E5E5"> and then we have</font>

293
00:15:39,829 --> 00:15:48,339
the classical<font color="#CCCCCC"> lowered cross-site</font>

294
00:15:42,139 --> 00:15:48,339
scripting so that is one example<font color="#CCCCCC"> and</font>

295
00:15:48,699 --> 00:15:52,839
<font color="#CCCCCC">let's go for the second one</font>

296
00:16:05,720 --> 00:16:10,000
<font color="#E5E5E5">okay how many browsers windows open</font>

297
00:16:23,940 --> 00:16:28,040
so if<font color="#E5E5E5"> not I'm going to switch to the</font>

298
00:16:25,950 --> 00:16:28,040
slides

299
00:16:33,040 --> 00:16:37,620
so<font color="#CCCCCC"> not a</font><font color="#E5E5E5"> VPN a slow hooray</font>

300
00:16:43,620 --> 00:16:47,630
and if you<font color="#CCCCCC"> penis like really slow</font>

301
00:16:48,130 --> 00:16:54,050
so let's just go<font color="#CCCCCC"> back to the slides</font><font color="#E5E5E5"> and</font>

302
00:16:51,740 --> 00:16:56,870
maybe in a<font color="#CCCCCC"> couple of seconds it will run</font>

303
00:16:54,050 --> 00:17:00,800
better<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> that's a cross-site</font>

304
00:16:56,870 --> 00:17:03,800
scripting<font color="#CCCCCC"> we have been seeing in</font><font color="#E5E5E5"> the</font>

305
00:17:00,800 --> 00:17:07,459
same way<font color="#CCCCCC"> I hope that's sufficient in the</font>

306
00:17:03,800 --> 00:17:09,409
back if not I can zoom<font color="#E5E5E5"> in so that's a</font>

307
00:17:07,459 --> 00:17:11,540
clearly classical one so using<font color="#E5E5E5"> its</font>

308
00:17:09,410 --> 00:17:14,540
<font color="#CCCCCC">estrellas I can just create</font><font color="#E5E5E5"> a random</font>

309
00:17:11,540 --> 00:17:17,780
HTML page<font color="#CCCCCC"> I</font><font color="#E5E5E5"> can collect a get parameter</font>

310
00:17:14,540 --> 00:17:20,180
<font color="#E5E5E5">I can embed it into the page and</font><font color="#CCCCCC"> then I</font>

311
00:17:17,780 --> 00:17:26,149
will<font color="#E5E5E5"> end up with any sort of cross-site</font>

312
00:17:20,180 --> 00:17:27,800
scripting going back<font color="#E5E5E5"> to this example so</font>

313
00:17:26,150 --> 00:17:32,810
this is<font color="#E5E5E5"> something that should normally</font>

314
00:17:27,800 --> 00:17:36,050
not help not<font color="#CCCCCC"> or cure because</font><font color="#E5E5E5"> this up ui5</font>

315
00:17:32,810 --> 00:17:40,760
framework already<font color="#E5E5E5"> takes care about the</font>

316
00:17:36,050 --> 00:17:44,030
necessary encoding so earlier we<font color="#E5E5E5"> heard</font>

317
00:17:40,760 --> 00:17:46,190
from an abscess<font color="#CCCCCC"> that it's also about</font><font color="#E5E5E5"> the</font>

318
00:17:44,030 --> 00:17:48,170
developers and<font color="#E5E5E5"> the juniors</font><font color="#CCCCCC"> and how well</font>

319
00:17:46,190 --> 00:17:53,320
they understand all the technologies<font color="#CCCCCC"> and</font>

320
00:17:48,170 --> 00:17:53,320
<font color="#E5E5E5">the frameworks and what they</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> used to</font>

321
00:17:53,380 --> 00:17:59,440
use for<font color="#E5E5E5"> development and whether they</font>

322
00:17:56,120 --> 00:18:03,500
have as an<font color="#E5E5E5"> example a PHP background so</font>

323
00:17:59,440 --> 00:18:05,600
<font color="#E5E5E5">you can of</font><font color="#CCCCCC"> course always avoid the</font>

324
00:18:03,500 --> 00:18:07,910
existing frameworks<font color="#E5E5E5"> and build everything</font>

325
00:18:05,600 --> 00:18:13,250
<font color="#E5E5E5">on your own and then</font><font color="#CCCCCC"> you will of course</font>

326
00:18:07,910 --> 00:18:15,380
mess it up<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's the same what</font>

327
00:18:13,250 --> 00:18:20,150
happens here or what what happened

328
00:18:15,380 --> 00:18:22,100
<font color="#E5E5E5">within</font><font color="#CCCCCC"> this up ui5 so basically you just</font>

329
00:18:20,150 --> 00:18:22,970
<font color="#E5E5E5">need to have a</font><font color="#CCCCCC"> back-end service where</font>

330
00:18:22,100 --> 00:18:26,810
you<font color="#E5E5E5"> manually</font>

331
00:18:22,970 --> 00:18:28,340
<font color="#E5E5E5">build up your your Jason's and then in</font>

332
00:18:26,810 --> 00:18:31,669
the same way you can<font color="#E5E5E5"> have of course</font>

333
00:18:28,340 --> 00:18:33,980
<font color="#CCCCCC">there</font><font color="#E5E5E5"> also then cross-site scripting and</font>

334
00:18:31,670 --> 00:18:38,990
the recommendation of<font color="#E5E5E5"> course would be to</font>

335
00:18:33,980 --> 00:18:41,060
rely on the<font color="#E5E5E5"> UI</font><font color="#CCCCCC"> five controls so</font><font color="#E5E5E5"> 4x</font><font color="#CCCCCC"> SJS</font>

336
00:18:38,990 --> 00:18:44,870
<font color="#E5E5E5">I'm not aware</font><font color="#CCCCCC"> about any encoding</font>

337
00:18:41,060 --> 00:18:49,550
function<font color="#CCCCCC"> for HTML encoding</font><font color="#E5E5E5"> so you just</font>

338
00:18:44,870 --> 00:18:52,120
have<font color="#CCCCCC"> to encode your</font><font color="#E5E5E5"> I function so but I</font>

339
00:18:49,550 --> 00:18:52,120
mean<font color="#CCCCCC"> from my</font><font color="#E5E5E5"> perspective</font>

340
00:18:52,920 --> 00:19:01,510
don't create dynamic<font color="#E5E5E5"> HTML pages using</font>

341
00:18:57,880 --> 00:19:05,549
accessories so that's not the idea how

342
00:19:01,510 --> 00:19:10,809
it's meant<font color="#E5E5E5"> to be used so let's go for</font>

343
00:19:05,549 --> 00:19:15,100
cross-site<font color="#E5E5E5"> request forgery</font><font color="#CCCCCC"> so in the</font>

344
00:19:10,809 --> 00:19:20,760
excess excess<font color="#CCCCCC"> fire I mentioned the</font>

345
00:19:15,100 --> 00:19:24,070
prevent excess RF or CSRF<font color="#CCCCCC"> true</font>

346
00:19:20,760 --> 00:19:30,600
configuration parameter so what is this

347
00:19:24,070 --> 00:19:34,689
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> so let's assume we</font><font color="#CCCCCC"> have just a</font>

348
00:19:30,600 --> 00:19:38,469
static page<font color="#CCCCCC"> so this is just</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> an</font>

349
00:19:34,690 --> 00:19:44,040
<font color="#CCCCCC">example of a simple HTML page who is</font>

350
00:19:38,470 --> 00:19:48,910
doing a post request against<font color="#E5E5E5"> simple dot</font>

351
00:19:44,040 --> 00:19:53,799
<font color="#CCCCCC">xsj as this</font><font color="#E5E5E5"> one here so then we can</font><font color="#CCCCCC"> just</font>

352
00:19:48,910 --> 00:19:58,049
call<font color="#E5E5E5"> it then we can enter some data we</font>

353
00:19:53,799 --> 00:20:01,629
push submit<font color="#E5E5E5"> and then we end up with a</font>

354
00:19:58,049 --> 00:20:03,639
403 so one<font color="#E5E5E5"> remark here you get no</font>

355
00:20:01,630 --> 00:20:06,790
<font color="#CCCCCC">information about</font><font color="#E5E5E5"> that the cross-site</font>

356
00:20:03,640 --> 00:20:13,900
request forgery token is missing<font color="#E5E5E5"> so this</font>

357
00:20:06,790 --> 00:20:17,139
is how it behaves<font color="#E5E5E5"> and then in the same</font>

358
00:20:13,900 --> 00:20:20,049
way<font color="#E5E5E5"> of</font><font color="#CCCCCC"> course we can look on</font><font color="#E5E5E5"> protocol</font>

359
00:20:17,140 --> 00:20:23,590
<font color="#CCCCCC">level and here we get the information</font>

360
00:20:20,049 --> 00:20:24,970
<font color="#E5E5E5">and within the header and this is</font>

361
00:20:23,590 --> 00:20:28,418
<font color="#E5E5E5">something of course</font><font color="#CCCCCC"> you could also</font>

362
00:20:24,970 --> 00:20:30,840
evaluate then we get the required

363
00:20:28,419 --> 00:20:30,840
information

364
00:20:33,950 --> 00:20:44,360
so how<font color="#E5E5E5"> to do it on code level and maybe</font>

365
00:20:38,669 --> 00:20:44,360
now it's better to zoom in

366
00:20:49,490 --> 00:20:58,159
so that's an example<font color="#E5E5E5"> HTML page</font><font color="#CCCCCC"> and what</font>

367
00:20:55,909 --> 00:21:01,970
we will do first<font color="#E5E5E5"> if we enable</font><font color="#CCCCCC"> the</font>

368
00:20:58,159 --> 00:21:09,580
prevent xsrf protection<font color="#E5E5E5"> and then we were</font>

369
00:21:01,970 --> 00:21:13,760
first great so now the pointer is not

370
00:21:09,580 --> 00:21:16,520
doing<font color="#CCCCCC"> anymore okay</font>

371
00:21:13,760 --> 00:21:19,658
let's do it<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> so I'm quite hot</font>

372
00:21:16,520 --> 00:21:25,010
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we're in this line so there we set</font>

373
00:21:19,659 --> 00:21:28,070
please<font color="#E5E5E5"> obtain an excuse</font><font color="#CCCCCC"> RS token then it</font>

374
00:21:25,010 --> 00:21:32,299
will send it<font color="#CCCCCC"> out and then later on</font><font color="#E5E5E5"> if we</font>

375
00:21:28,070 --> 00:21:34,120
post a submit to the simple xsj<font color="#E5E5E5"> s we can</font>

376
00:21:32,299 --> 00:21:37,100
send out<font color="#CCCCCC"> the token the token will be</font>

377
00:21:34,120 --> 00:21:39,979
automatically generated<font color="#E5E5E5"> by the framework</font>

378
00:21:37,100 --> 00:21:42,439
<font color="#E5E5E5">it will be automatically validated and</font>

379
00:21:39,980 --> 00:21:44,870
then we are good to<font color="#E5E5E5"> go</font>

380
00:21:42,440 --> 00:21:50,149
so which we can see on the right<font color="#CCCCCC"> side</font>

381
00:21:44,870 --> 00:21:54,260
here<font color="#CCCCCC"> so first we get the</font><font color="#E5E5E5"> fetch then we</font>

382
00:21:50,149 --> 00:21:57,979
get the answer<font color="#E5E5E5"> and in the same way then</font>

383
00:21:54,260 --> 00:22:01,129
we are performing<font color="#E5E5E5"> the post and then it's</font>

384
00:21:57,980 --> 00:22:02,929
accepted<font color="#E5E5E5"> so this is how it works so</font>

385
00:22:01,130 --> 00:22:09,440
what's the challenge<font color="#CCCCCC"> again for the</font>

386
00:22:02,929 --> 00:22:12,890
developer<font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> web services</font><font color="#E5E5E5"> you</font>

387
00:22:09,440 --> 00:22:17,480
should not do any modifications<font color="#E5E5E5"> using</font>

388
00:22:12,890 --> 00:22:21,140
get requests so the<font color="#E5E5E5"> framework</font><font color="#CCCCCC"> itself</font>

389
00:22:17,480 --> 00:22:23,149
will protect you<font color="#E5E5E5"> but it will only be</font><font color="#CCCCCC"> for</font>

390
00:22:21,140 --> 00:22:27,890
post<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the other words it will not be</font>

391
00:22:23,149 --> 00:22:29,928
for get so forget and this is also

392
00:22:27,890 --> 00:22:32,000
<font color="#E5E5E5">something you need to take care</font><font color="#CCCCCC"> about</font>

393
00:22:29,929 --> 00:22:36,429
<font color="#CCCCCC">when</font><font color="#E5E5E5"> you do code review if someone is</font>

394
00:22:32,000 --> 00:22:36,429
basically doing<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like</font>

395
00:22:36,970 --> 00:22:43,039
collecting the input still why I get

396
00:22:40,029 --> 00:22:45,230
then this application will be<font color="#CCCCCC"> vulnerable</font>

397
00:22:43,039 --> 00:22:47,690
<font color="#CCCCCC">to cross-site request forgery</font><font color="#E5E5E5"> even</font>

398
00:22:45,230 --> 00:22:51,740
though that you<font color="#CCCCCC"> sent prevent excess RF</font>

399
00:22:47,690 --> 00:22:55,399
<font color="#E5E5E5">to true what you could also do is in</font>

400
00:22:51,740 --> 00:22:58,930
<font color="#E5E5E5">this case you</font><font color="#CCCCCC"> can make again a check</font><font color="#E5E5E5"> for</font>

401
00:22:55,399 --> 00:23:01,209
the HTTP verb but yeah

402
00:22:58,930 --> 00:23:06,550
basically doing<font color="#E5E5E5"> it again on your own</font><font color="#CCCCCC"> and</font>

403
00:23:01,210 --> 00:23:10,170
I think<font color="#CCCCCC"> that's not the</font><font color="#E5E5E5"> idea so which</font>

404
00:23:06,550 --> 00:23:13,320
brings us<font color="#CCCCCC"> to the next</font><font color="#E5E5E5"> topic which</font><font color="#CCCCCC"> is</font>

405
00:23:10,170 --> 00:23:13,320
sequel injection

406
00:23:27,940 --> 00:23:36,040
okay so<font color="#E5E5E5"> again</font>

407
00:23:33,070 --> 00:23:38,290
we have an example<font color="#E5E5E5"> for sequel injection</font>

408
00:23:36,040 --> 00:23:43,540
<font color="#E5E5E5">where we were basically in the</font>

409
00:23:38,290 --> 00:23:46,780
background<font color="#E5E5E5"> perform this query sort of</font>

410
00:23:43,540 --> 00:23:50,980
for<font color="#CCCCCC"> the sake of simplicity</font><font color="#E5E5E5"> I just now</font>

411
00:23:46,780 --> 00:23:54,010
provide expected user input<font color="#E5E5E5"> I can</font>

412
00:23:50,980 --> 00:23:56,380
<font color="#CCCCCC">execute the code</font><font color="#E5E5E5"> and then I have a</font>

413
00:23:54,010 --> 00:23:58,930
constraint<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> backend where I just</font>

414
00:23:56,380 --> 00:24:01,210
<font color="#CCCCCC">say</font><font color="#E5E5E5"> on this table there's a custom ID or</font>

415
00:23:58,930 --> 00:24:04,210
like a company called<font color="#CCCCCC"> bong skies</font>

416
00:24:01,210 --> 00:24:10,150
<font color="#E5E5E5">whatsoever and then is it</font><font color="#CCCCCC"> is limiting it</font>

417
00:24:04,210 --> 00:24:12,570
down<font color="#E5E5E5"> so in the same way I can now also</font>

418
00:24:10,150 --> 00:24:12,570
say

419
00:24:22,040 --> 00:24:32,810
just do the 1 1 or equals<font color="#CCCCCC"> 1 trick</font><font color="#E5E5E5"> and</font>

420
00:24:30,080 --> 00:24:38,020
then we will<font color="#E5E5E5"> end up with</font><font color="#CCCCCC"> all the data</font>

421
00:24:32,810 --> 00:24:38,020
<font color="#E5E5E5">being exposed</font><font color="#CCCCCC"> to the user</font>

422
00:24:43,600 --> 00:24:51,168
so let's continue<font color="#CCCCCC"> so that's the</font><font color="#E5E5E5"> example</font>

423
00:24:48,860 --> 00:24:53,840
we have just<font color="#E5E5E5"> been seeing so you get it</font>

424
00:24:51,169 --> 00:24:56,749
<font color="#E5E5E5">also in the slides</font><font color="#CCCCCC"> we do have some</font>

425
00:24:53,840 --> 00:24:59,779
variations on that topic<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you can have</font>

426
00:24:56,749 --> 00:25:03,970
a standard<font color="#E5E5E5"> sequel injection and then we</font>

427
00:24:59,779 --> 00:25:08,330
have the attack input in this case<font color="#E5E5E5"> and</font>

428
00:25:03,970 --> 00:25:10,249
please note so no apostrophes<font color="#E5E5E5"> whatsoever</font>

429
00:25:08,330 --> 00:25:13,220
so that's the way how<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can go and</font>

430
00:25:10,249 --> 00:25:16,039
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is how you also write it within the</font>

431
00:25:13,220 --> 00:25:21,320
URL<font color="#CCCCCC"> if you have a get request as an</font>

432
00:25:16,039 --> 00:25:24,980
example and of course<font color="#CCCCCC"> during mitigation</font>

433
00:25:21,320 --> 00:25:31,428
what B we use<font color="#E5E5E5"> prepared statements so</font>

434
00:25:24,980 --> 00:25:33,529
that's an example<font color="#E5E5E5"> but what I've seen</font><font color="#CCCCCC"> I</font>

435
00:25:31,429 --> 00:25:35,889
<font color="#E5E5E5">think this was</font><font color="#CCCCCC"> already in the first year</font>

436
00:25:33,529 --> 00:25:38,330
<font color="#CCCCCC">when I</font><font color="#E5E5E5"> started doing penetration testing</font>

437
00:25:35,889 --> 00:25:39,799
with prepared statements of course you

438
00:25:38,330 --> 00:25:41,779
can also<font color="#E5E5E5"> have prepared statement</font>

439
00:25:39,799 --> 00:25:49,129
<font color="#E5E5E5">injections so this will also work and</font>

440
00:25:41,779 --> 00:25:51,879
then again you were screwed then on top

441
00:25:49,129 --> 00:25:55,070
of<font color="#CCCCCC"> that you have also the possibility to</font>

442
00:25:51,879 --> 00:25:58,939
<font color="#E5E5E5">run sequel scripts so you can use secret</font>

443
00:25:55,070 --> 00:26:02,330
script<font color="#E5E5E5"> also as as an extra filter</font>

444
00:25:58,940 --> 00:26:06,559
function for input validation on exposed

445
00:26:02,330 --> 00:26:09,590
<font color="#E5E5E5">odata services as an example and secret</font>

446
00:26:06,559 --> 00:26:15,529
script<font color="#E5E5E5"> itself also provides the</font>

447
00:26:09,590 --> 00:26:19,699
possibility<font color="#CCCCCC"> to execute dynamic sequel</font>

448
00:26:15,529 --> 00:26:24,259
script using execute immediate or using

449
00:26:19,700 --> 00:26:26,149
exit<font color="#E5E5E5"> and in that case beforehand we were</font>

450
00:26:24,259 --> 00:26:28,940
kind of<font color="#CCCCCC"> limited into the where condition</font>

451
00:26:26,149 --> 00:26:31,008
<font color="#E5E5E5">and and so far I found no way of using</font>

452
00:26:28,940 --> 00:26:33,320
<font color="#E5E5E5">Union and that kind of stuff because you</font>

453
00:26:31,009 --> 00:26:39,109
need to<font color="#E5E5E5"> be on table level so that</font><font color="#CCCCCC"> you</font>

454
00:26:33,320 --> 00:26:40,970
can do those<font color="#E5E5E5"> joins but in this case we</font>

455
00:26:39,109 --> 00:26:44,090
have basically a generic table reader

456
00:26:40,970 --> 00:26:46,879
<font color="#E5E5E5">which you could</font><font color="#CCCCCC"> also write up</font><font color="#E5E5E5"> so how</font>

457
00:26:44,090 --> 00:26:48,499
critical is this<font color="#E5E5E5"> well as we have seen in</font>

458
00:26:46,879 --> 00:26:51,259
the previous<font color="#E5E5E5"> talk it's really dependent</font>

459
00:26:48,499 --> 00:26:54,529
<font color="#CCCCCC">on the</font><font color="#E5E5E5"> kind of authorizations so I think</font>

460
00:26:51,259 --> 00:26:57,570
from<font color="#E5E5E5"> from a academic point of view it's</font>

461
00:26:54,529 --> 00:26:59,850
an interesting<font color="#E5E5E5"> example however in real</font>

462
00:26:57,570 --> 00:27:03,330
the user who is<font color="#E5E5E5"> calling this procedure</font>

463
00:26:59,850 --> 00:27:07,490
then also<font color="#E5E5E5"> need dedicated authorizations</font>

464
00:27:03,330 --> 00:27:11,490
to<font color="#E5E5E5"> be allowed to execute this procedure</font>

465
00:27:07,490 --> 00:27:13,260
so it's<font color="#CCCCCC"> unlikely that someone will</font>

466
00:27:11,490 --> 00:27:15,210
<font color="#E5E5E5">except for the case our application is</font>

467
00:27:13,260 --> 00:27:16,919
not<font color="#E5E5E5"> running</font><font color="#CCCCCC"> and let's just assign all</font>

468
00:27:15,210 --> 00:27:18,750
authorizations and<font color="#E5E5E5"> then maybe</font><font color="#CCCCCC"> your work</font>

469
00:27:16,919 --> 00:27:21,390
so unless you<font color="#E5E5E5"> have that kind</font><font color="#CCCCCC"> of</font>

470
00:27:18,750 --> 00:27:25,950
<font color="#CCCCCC">situation where from my perspective</font>

471
00:27:21,390 --> 00:27:28,020
<font color="#E5E5E5">anyhow everything will fail everything</font>

472
00:27:25,950 --> 00:27:29,700
<font color="#E5E5E5">related to sequel injection is limited</font>

473
00:27:28,020 --> 00:27:32,039
by authorizations<font color="#E5E5E5"> and then of course</font>

474
00:27:29,700 --> 00:27:34,230
<font color="#CCCCCC">again it's the question on what kind of</font>

475
00:27:32,039 --> 00:27:38,490
authorizations does in an anonymous

476
00:27:34,230 --> 00:27:40,260
context<font color="#CCCCCC"> the user have so for for the</font>

477
00:27:38,490 --> 00:27:42,690
previous talk what we have seen we have

478
00:27:40,260 --> 00:27:44,640
<font color="#E5E5E5">very</font><font color="#CCCCCC"> interesting and high privilege high</font>

479
00:27:42,690 --> 00:27:48,840
privileges if you write<font color="#E5E5E5"> your own</font>

480
00:27:44,640 --> 00:27:50,789
application<font color="#CCCCCC"> I would expect that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font>

481
00:27:48,840 --> 00:27:53,189
only privileges in that corresponding

482
00:27:50,789 --> 00:27:55,740
context and then you might<font color="#CCCCCC"> have a sequel</font>

483
00:27:53,190 --> 00:27:57,299
injection<font color="#E5E5E5"> where a penetration test I</font>

484
00:27:55,740 --> 00:27:59,130
would<font color="#E5E5E5"> say yeah great we have a secret</font>

485
00:27:57,299 --> 00:28:02,280
injection but<font color="#E5E5E5"> in terms of exploitability</font>

486
00:27:59,130 --> 00:28:05,400
it's not so<font color="#E5E5E5"> great</font><font color="#CCCCCC"> because you're really</font>

487
00:28:02,280 --> 00:28:10,049
limited<font color="#CCCCCC"> to</font><font color="#E5E5E5"> where you are and it depends</font>

488
00:28:05,400 --> 00:28:13,770
on<font color="#E5E5E5"> the application logic so just just as</font>

489
00:28:10,049 --> 00:28:16,200
an<font color="#E5E5E5"> example here we can provide input</font>

490
00:28:13,770 --> 00:28:19,200
<font color="#E5E5E5">there so this is just running the sequel</font>

491
00:28:16,200 --> 00:28:21,990
console as a demo and of course then we

492
00:28:19,200 --> 00:28:23,370
<font color="#E5E5E5">get the corresponding output for a</font>

493
00:28:21,990 --> 00:28:26,490
secret<font color="#CCCCCC"> script it's a little bit</font>

494
00:28:23,370 --> 00:28:30,330
different<font color="#CCCCCC"> so if we</font><font color="#E5E5E5"> use dynamic sequel</font>

495
00:28:26,490 --> 00:28:34,110
script<font color="#CCCCCC"> then the answer</font><font color="#E5E5E5"> to it is again</font>

496
00:28:30,330 --> 00:28:36,030
escaping so and then it<font color="#E5E5E5"> depends on how</font>

497
00:28:34,110 --> 00:28:38,340
you build<font color="#CCCCCC"> your string</font>

498
00:28:36,030 --> 00:28:40,639
whether you need<font color="#E5E5E5"> escape singer chords</font>

499
00:28:38,340 --> 00:28:44,000
whether you need<font color="#E5E5E5"> escape double quotes</font>

500
00:28:40,640 --> 00:28:48,419
there's also this is sequel injection

501
00:28:44,000 --> 00:28:50,730
<font color="#CCCCCC">safe</font><font color="#E5E5E5"> and it will evaluate the amount of</font>

502
00:28:48,419 --> 00:28:53,309
tokens<font color="#CCCCCC"> with in the sequel string and</font>

503
00:28:50,730 --> 00:28:55,559
then you can<font color="#E5E5E5"> count the number two is</font>

504
00:28:53,309 --> 00:28:58,789
this matching up<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the number</font><font color="#CCCCCC"> you are</font>

505
00:28:55,559 --> 00:28:58,789
expecting but again

506
00:29:00,690 --> 00:29:06,630
<font color="#CCCCCC">I don't know what</font><font color="#E5E5E5"> let's just say for the</font>

507
00:29:04,020 --> 00:29:09,210
<font color="#E5E5E5">escape sequel</font><font color="#CCCCCC"> cords</font><font color="#E5E5E5"> escape double quotes</font>

508
00:29:06,630 --> 00:29:11,120
I feel quite safe that<font color="#CCCCCC"> you can use it in</font>

509
00:29:09,210 --> 00:29:13,620
the right way<font color="#CCCCCC"> for a sequel injection</font>

510
00:29:11,120 --> 00:29:16,199
safe<font color="#E5E5E5"> you could also use</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> but it</font>

511
00:29:13,620 --> 00:29:18,239
depends on<font color="#E5E5E5"> really what your secret</font>

512
00:29:16,200 --> 00:29:21,090
string is and if you just need<font color="#E5E5E5"> to change</font>

513
00:29:18,240 --> 00:29:26,040
<font color="#CCCCCC">the</font><font color="#E5E5E5"> boolean logic then the amount of</font>

514
00:29:21,090 --> 00:29:27,720
tokens won't change<font color="#E5E5E5"> okay and you can</font>

515
00:29:26,040 --> 00:29:29,790
<font color="#CCCCCC">always play around which is a nice</font>

516
00:29:27,720 --> 00:29:32,240
feature using the dummy table and then

517
00:29:29,790 --> 00:29:39,960
you can<font color="#E5E5E5"> get your own feedback</font><font color="#CCCCCC"> while</font>

518
00:29:32,240 --> 00:29:42,740
developing okay<font color="#E5E5E5"> so that's again the</font>

519
00:29:39,960 --> 00:29:45,330
remark<font color="#E5E5E5"> regarding the authorizations and</font>

520
00:29:42,740 --> 00:29:48,030
that's<font color="#E5E5E5"> also interesting for the part of</font>

521
00:29:45,330 --> 00:29:50,850
blind<font color="#E5E5E5"> sequel injection because if you do</font>

522
00:29:48,030 --> 00:29:52,560
have<font color="#CCCCCC"> a balance</font><font color="#E5E5E5"> equal injection you will</font>

523
00:29:50,850 --> 00:29:55,169
first get<font color="#E5E5E5"> errors and then it might be</font>

524
00:29:52,560 --> 00:29:57,510
<font color="#CCCCCC">that you end</font><font color="#E5E5E5"> up somewhere where you get</font>

525
00:29:55,170 --> 00:29:59,850
the<font color="#CCCCCC"> information</font><font color="#E5E5E5"> now the exception</font><font color="#CCCCCC"> is you</font>

526
00:29:57,510 --> 00:30:01,830
<font color="#CCCCCC">haven't</font><font color="#E5E5E5"> sufficient privileges then you</font>

527
00:29:59,850 --> 00:30:03,870
know you<font color="#E5E5E5"> have the right string but</font>

528
00:30:01,830 --> 00:30:06,409
you're<font color="#E5E5E5"> not authorized so you cannot</font>

529
00:30:03,870 --> 00:30:06,409
<font color="#CCCCCC">export it</font>

530
00:30:09,799 --> 00:30:22,559
so which brings us to code injection<font color="#E5E5E5"> so</font>

531
00:30:20,520 --> 00:30:25,200
there we<font color="#E5E5E5"> have two</font><font color="#CCCCCC"> examples which have</font>

532
00:30:22,559 --> 00:30:32,730
been<font color="#E5E5E5"> found within the</font><font color="#CCCCCC"> SLP standard by</font>

533
00:30:25,200 --> 00:30:36,570
<font color="#E5E5E5">the guys from</font><font color="#CCCCCC"> one abscess and</font><font color="#E5E5E5"> so in the</font>

534
00:30:32,730 --> 00:30:40,380
default it should<font color="#E5E5E5"> not be possible to</font><font color="#CCCCCC"> use</font>

535
00:30:36,570 --> 00:30:44,610
<font color="#CCCCCC">IVA somehow so the web</font><font color="#E5E5E5"> ID</font><font color="#CCCCCC"> our web IDE</font>

536
00:30:40,380 --> 00:30:48,720
<font color="#E5E5E5">which is the web development environment</font>

537
00:30:44,610 --> 00:30:51,570
<font color="#CCCCCC">running in a browser automatically makes</font>

538
00:30:48,720 --> 00:30:55,049
jslint<font color="#CCCCCC"> x and if you try to somehow</font><font color="#E5E5E5"> use</font>

539
00:30:51,570 --> 00:31:00,629
<font color="#CCCCCC">IVA</font><font color="#E5E5E5"> you will get the information</font><font color="#CCCCCC"> best</font>

540
00:30:55,049 --> 00:31:05,400
practice<font color="#CCCCCC"> eva can be harmful so but in</font>

541
00:31:00,630 --> 00:31:08,220
the same<font color="#CCCCCC"> way if you just look for</font><font color="#E5E5E5"> the</font>

542
00:31:05,400 --> 00:31:11,100
<font color="#CCCCCC">corresponding error messages you will</font>

543
00:31:08,220 --> 00:31:14,700
also<font color="#E5E5E5"> find yes</font><font color="#CCCCCC"> 'land</font>

544
00:31:11,100 --> 00:31:16,320
<font color="#E5E5E5">and there it's described basically what</font>

545
00:31:14,700 --> 00:31:18,179
it<font color="#CCCCCC"> is checking and what it's not</font>

546
00:31:16,320 --> 00:31:23,428
<font color="#E5E5E5">checking when it works and when</font><font color="#CCCCCC"> it</font>

547
00:31:18,179 --> 00:31:25,080
doesn't work so I mean it's like<font color="#E5E5E5"> with</font>

548
00:31:23,429 --> 00:31:27,240
<font color="#CCCCCC">the gun if you want to shoot yourself in</font>

549
00:31:25,080 --> 00:31:31,620
the foot then<font color="#E5E5E5"> you can do this and you</font>

550
00:31:27,240 --> 00:31:33,809
<font color="#CCCCCC">will end up</font><font color="#E5E5E5"> with X SJS injection so the</font>

551
00:31:31,620 --> 00:31:37,290
things that<font color="#CCCCCC"> were</font><font color="#E5E5E5"> found in the standard</font>

552
00:31:33,809 --> 00:31:42,899
<font color="#CCCCCC">were just I don't know related to</font>

553
00:31:37,290 --> 00:31:45,059
directly<font color="#E5E5E5"> evil</font><font color="#CCCCCC"> I'm not expecting lots of</font>

554
00:31:42,900 --> 00:31:47,880
findings in that<font color="#CCCCCC"> direction but I can</font>

555
00:31:45,059 --> 00:31:51,660
surely recommend<font color="#E5E5E5"> to perform a search for</font>

556
00:31:47,880 --> 00:31:53,160
<font color="#CCCCCC">IVA</font><font color="#E5E5E5"> still anyhow because it is possible</font>

557
00:31:51,660 --> 00:31:55,490
so it's not like the case it's

558
00:31:53,160 --> 00:31:55,490
impossible

559
00:32:01,010 --> 00:32:08,640
and then we can<font color="#E5E5E5"> just create a dynamic</font>

560
00:32:04,620 --> 00:32:10,370
large string<font color="#E5E5E5"> so we have now</font><font color="#CCCCCC"> two user</font>

561
00:32:08,640 --> 00:32:13,890
inputs which are<font color="#E5E5E5"> being rendered into</font>

562
00:32:10,370 --> 00:32:16,229
into the page<font color="#CCCCCC"> and here we just create</font>

563
00:32:13,890 --> 00:32:19,230
and you'll get connection we we build a

564
00:32:16,230 --> 00:32:24,720
new query we select the data and then<font color="#CCCCCC"> we</font>

565
00:32:19,230 --> 00:32:27,299
just basically<font color="#E5E5E5"> select new data from a</font>

566
00:32:24,720 --> 00:32:32,220
<font color="#CCCCCC">database table</font><font color="#E5E5E5"> and the output is here</font>

567
00:32:27,299 --> 00:32:36,980
<font color="#E5E5E5">rendered into input field</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and here</font>

568
00:32:32,220 --> 00:32:36,980
it is<font color="#E5E5E5"> just collecting our company name</font>

569
00:32:41,310 --> 00:32:48,810
again this is also dependent<font color="#CCCCCC"> on the</font>

570
00:32:46,230 --> 00:32:52,080
<font color="#CCCCCC">authorization</font><font color="#E5E5E5"> so where is the user</font>

571
00:32:48,810 --> 00:32:55,080
having access to<font color="#E5E5E5"> or not and in the same</font>

572
00:32:52,080 --> 00:32:57,960
way if<font color="#E5E5E5"> you</font><font color="#CCCCCC"> think about excess Reyes code</font>

573
00:32:55,080 --> 00:32:59,699
injection<font color="#CCCCCC"> and if you have somehow an</font>

574
00:32:57,960 --> 00:33:01,410
<font color="#E5E5E5">other background then you think oh</font>

575
00:32:59,700 --> 00:33:03,540
that's the<font color="#CCCCCC"> worst</font><font color="#E5E5E5"> case scenario</font><font color="#CCCCCC"> that</font>

576
00:33:01,410 --> 00:33:06,540
could possibly happen<font color="#E5E5E5"> so code injection</font>

577
00:33:03,540 --> 00:33:08,250
is always a bad thing<font color="#E5E5E5"> so then it's</font>

578
00:33:06,540 --> 00:33:10,980
interesting to look<font color="#CCCCCC"> at the API what</font>

579
00:33:08,250 --> 00:33:15,930
exists<font color="#E5E5E5"> is is offering or what it isn't</font>

580
00:33:10,980 --> 00:33:21,660
is offering<font color="#E5E5E5"> and from that perspective I</font>

581
00:33:15,930 --> 00:33:25,250
can<font color="#E5E5E5"> say we</font><font color="#CCCCCC"> are we own a better site and</font>

582
00:33:21,660 --> 00:33:27,720
we are on the application server<font color="#CCCCCC"> ABAB</font>

583
00:33:25,250 --> 00:33:29,910
because directory traversal and<font color="#E5E5E5"> AWS</font>

584
00:33:27,720 --> 00:33:33,600
command injection<font color="#E5E5E5"> should not be possible</font>

585
00:33:29,910 --> 00:33:35,970
<font color="#CCCCCC">I'm saying shut because in the</font><font color="#E5E5E5"> past of</font>

586
00:33:33,600 --> 00:33:39,389
course<font color="#CCCCCC"> I think that</font><font color="#E5E5E5"> was the example</font>

587
00:33:35,970 --> 00:33:41,520
<font color="#E5E5E5">using</font><font color="#CCCCCC"> R which you could still abuse so</font>

588
00:33:39,390 --> 00:33:44,430
that that was a vulnerability<font color="#E5E5E5"> within the</font>

589
00:33:41,520 --> 00:33:49,139
standard but the<font color="#E5E5E5"> API itself should not</font>

590
00:33:44,430 --> 00:33:51,360
<font color="#E5E5E5">offer any possibility for for executing</font>

591
00:33:49,140 --> 00:33:53,660
operating system commands and in the

592
00:33:51,360 --> 00:33:58,770
same way you do not<font color="#E5E5E5"> have any file IO</font>

593
00:33:53,660 --> 00:34:02,820
<font color="#E5E5E5">access so you should not be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

594
00:33:58,770 --> 00:34:04,260
<font color="#CCCCCC">access files</font><font color="#E5E5E5"> however again in the same</font>

595
00:34:02,820 --> 00:34:07,409
<font color="#E5E5E5">way</font><font color="#CCCCCC"> like the people who are searching</font>

596
00:34:04,260 --> 00:34:11,130
<font color="#E5E5E5">for how can I deal</font><font color="#CCCCCC"> with the situation</font>

597
00:34:07,410 --> 00:34:14,820
<font color="#E5E5E5">one of the funny answers I found so that</font>

598
00:34:11,130 --> 00:34:16,770
<font color="#E5E5E5">was on one of the</font><font color="#CCCCCC"> ASAP</font><font color="#E5E5E5"> forums was</font><font color="#CCCCCC"> ok if</font>

599
00:34:14,820 --> 00:34:18,630
you want to expose some fights then set

600
00:34:16,770 --> 00:34:21,630
up a local<font color="#E5E5E5"> web server and then you can</font>

601
00:34:18,630 --> 00:34:23,669
use an HTTP destination and then<font color="#E5E5E5"> exposed</font>

602
00:34:21,630 --> 00:34:29,010
<font color="#E5E5E5">to fights that way so you can make</font>

603
00:34:23,668 --> 00:34:32,520
outgoing calls in xsj s but it's not

604
00:34:29,010 --> 00:34:34,320
possible<font color="#CCCCCC"> to directly access the</font><font color="#E5E5E5"> what it</font>

605
00:34:32,520 --> 00:34:36,609
should not be possible<font color="#CCCCCC"> let's just say it</font>

606
00:34:34,320 --> 00:34:39,609
in<font color="#CCCCCC"> that way</font>

607
00:34:36,609 --> 00:34:39,609
<font color="#E5E5E5">okay</font>

608
00:34:40,360 --> 00:34:50,530
which brings us to excess advanced so

609
00:34:48,190 --> 00:34:57,750
that's the successor of the<font color="#CCCCCC"> excess</font>

610
00:34:50,530 --> 00:35:00,550
engine so it's polyglot<font color="#E5E5E5"> so that's what</font>

611
00:34:57,750 --> 00:35:05,860
ASAP are saying<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> going</font>

612
00:35:00,550 --> 00:35:07,240
<font color="#CCCCCC">to read it you can</font><font color="#E5E5E5"> read it</font><font color="#CCCCCC"> I don't know</font>

613
00:35:05,860 --> 00:35:09,580
whether you understand afterwards

614
00:35:07,240 --> 00:35:11,620
everything<font color="#E5E5E5"> what</font><font color="#CCCCCC"> is written</font><font color="#E5E5E5"> inside so in</font>

615
00:35:09,580 --> 00:35:13,180
<font color="#CCCCCC">simple terms is basically the Cloud</font>

616
00:35:11,620 --> 00:35:14,830
Foundry open source platform as a

617
00:35:13,180 --> 00:35:21,750
service with a number of<font color="#E5E5E5"> tweaks and</font>

618
00:35:14,830 --> 00:35:21,750
extensions<font color="#E5E5E5"> provided by</font><font color="#CCCCCC"> AP</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> okay I</font>

619
00:35:22,890 --> 00:35:28,080
mentioned earlier we<font color="#E5E5E5"> have no</font><font color="#CCCCCC"> other</font>

620
00:35:25,780 --> 00:35:33,570
possibilities of nodejs

621
00:35:28,080 --> 00:35:40,330
<font color="#CCCCCC">we also have</font><font color="#E5E5E5"> Java</font><font color="#CCCCCC"> we can also embed any</font>

622
00:35:33,570 --> 00:35:43,170
arbitrary language<font color="#CCCCCC"> in runtime so looking</font>

623
00:35:40,330 --> 00:35:46,440
at is<font color="#E5E5E5"> excess</font><font color="#CCCCCC"> advanced this can also be</font>

624
00:35:43,170 --> 00:35:49,480
deployed<font color="#E5E5E5"> on a separate note and</font>

625
00:35:46,440 --> 00:35:53,560
separately installed so<font color="#CCCCCC"> the standard web</font>

626
00:35:49,480 --> 00:35:55,900
IDE we have been seeing<font color="#CCCCCC"> beforehand</font><font color="#E5E5E5"> yes</font>

627
00:35:53,560 --> 00:35:59,230
of course also now<font color="#CCCCCC"> a succeeding web IDE</font>

628
00:35:55,900 --> 00:36:01,870
<font color="#E5E5E5">and this is running again as an own</font>

629
00:35:59,230 --> 00:36:03,700
application<font color="#E5E5E5"> so this is how</font><font color="#CCCCCC"> excess</font>

630
00:36:01,870 --> 00:36:07,029
advanced applications<font color="#E5E5E5"> typically will</font>

631
00:36:03,700 --> 00:36:09,160
look like internally<font color="#CCCCCC"> you have a hostname</font>

632
00:36:07,030 --> 00:36:12,400
<font color="#CCCCCC">you have a port</font><font color="#E5E5E5"> so this is the</font><font color="#CCCCCC"> default</font>

633
00:36:09,160 --> 00:36:14,620
port<font color="#CCCCCC"> for a</font><font color="#E5E5E5"> web IDE and here you can</font>

634
00:36:12,400 --> 00:36:18,070
develop<font color="#CCCCCC"> insight and then you have the</font>

635
00:36:14,620 --> 00:36:21,009
possibilities basic HTML<font color="#E5E5E5"> you can write</font>

636
00:36:18,070 --> 00:36:25,390
analytics you can<font color="#E5E5E5"> write a Java module</font>

637
00:36:21,010 --> 00:36:27,310
and so on and so forth and<font color="#E5E5E5"> in the same</font>

638
00:36:25,390 --> 00:36:31,960
way the same functionality<font color="#E5E5E5"> even though</font>

639
00:36:27,310 --> 00:36:35,320
that<font color="#E5E5E5"> s</font><font color="#CCCCCC"> ap nowaday says for Hana 2.0 it's</font>

640
00:36:31,960 --> 00:36:39,760
being deprecated<font color="#E5E5E5"> you can still use it</font>

641
00:36:35,320 --> 00:36:44,080
<font color="#CCCCCC">in the same way so we can write a new</font>

642
00:36:39,760 --> 00:36:46,750
application<font color="#E5E5E5"> and then of</font><font color="#CCCCCC"> course we</font><font color="#E5E5E5"> can</font>

643
00:36:44,080 --> 00:36:49,120
also use classical<font color="#CCCCCC"> X SJS and</font><font color="#E5E5E5"> this is</font>

644
00:36:46,750 --> 00:36:50,800
just a proof of concept<font color="#CCCCCC"> that</font><font color="#E5E5E5"> all of the</font>

645
00:36:49,120 --> 00:36:52,420
things I have been demonstrating

646
00:36:50,800 --> 00:36:56,230
<font color="#CCCCCC">beforehand still work on</font>

647
00:36:52,420 --> 00:36:59,410
xsj s-sorry still work<font color="#E5E5E5"> on excess</font>

648
00:36:56,230 --> 00:37:02,079
<font color="#E5E5E5">advanced and</font><font color="#CCCCCC"> i guess it will be a</font>

649
00:36:59,410 --> 00:37:05,049
challenge<font color="#E5E5E5"> to to look into the</font><font color="#CCCCCC"> future how</font>

650
00:37:02,079 --> 00:37:08,440
well the technology<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be adopted by</font>

651
00:37:05,049 --> 00:37:13,049
customers and how extensively it will be

652
00:37:08,440 --> 00:37:13,049
used within the<font color="#E5E5E5"> ASAP cloud environment</font>

653
00:37:13,109 --> 00:37:19,359
from a usability<font color="#E5E5E5"> perspective</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> can say</font>

654
00:37:17,260 --> 00:37:21,220
it's quite<font color="#E5E5E5"> nice because you just locally</font>

655
00:37:19,359 --> 00:37:24,038
develop and you can<font color="#CCCCCC"> easily push your</font>

656
00:37:21,220 --> 00:37:27,209
<font color="#E5E5E5">micro service into the cloud</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font>

657
00:37:24,039 --> 00:37:32,470
you can of course<font color="#E5E5E5"> easily scale</font>

658
00:37:27,210 --> 00:37:37,180
applications so that's the demonstration

659
00:37:32,470 --> 00:37:40,808
<font color="#E5E5E5">again for for cross-site scripting maybe</font>

660
00:37:37,180 --> 00:37:45,430
this is a simple remark<font color="#CCCCCC"> I can also say</font>

661
00:37:40,809 --> 00:37:51,640
in the same way that you might<font color="#E5E5E5"> know</font><font color="#CCCCCC"> from</font>

662
00:37:45,430 --> 00:37:54,788
the ICF<font color="#E5E5E5"> there's a there's a blacklist</font>

663
00:37:51,640 --> 00:37:57,549
filter on anything<font color="#E5E5E5"> that comes in but</font>

664
00:37:54,789 --> 00:38:00,250
this<font color="#E5E5E5"> is like super limited so it will</font>

665
00:37:57,549 --> 00:38:02,619
just<font color="#E5E5E5"> check on all input values that come</font>

666
00:38:00,250 --> 00:38:06,009
in why I get whether<font color="#CCCCCC"> there is a tech</font>

667
00:38:02,619 --> 00:38:11,049
open<font color="#E5E5E5"> slash script and if so the request</font>

668
00:38:06,009 --> 00:38:13,809
<font color="#E5E5E5">will be blocked so</font><font color="#CCCCCC"> I mean again Chrome</font>

669
00:38:11,049 --> 00:38:16,240
and and Internet Explorer<font color="#E5E5E5"> from my</font>

670
00:38:13,809 --> 00:38:18,099
perspective<font color="#E5E5E5"> already take a lot of care</font>

671
00:38:16,240 --> 00:38:20,979
so to avoid<font color="#E5E5E5"> a reflective cross-site</font>

672
00:38:18,099 --> 00:38:24,730
scripting but yeah<font color="#E5E5E5"> that's a simple way</font>

673
00:38:20,980 --> 00:38:26,980
how attackers could still bypass this

674
00:38:24,730 --> 00:38:29,220
<font color="#E5E5E5">and I don't see it as a bypass it's it's</font>

675
00:38:26,980 --> 00:38:35,380
just I don't know<font color="#CCCCCC"> a</font><font color="#E5E5E5"> limited</font>

676
00:38:29,220 --> 00:38:42,660
functionality or a basic example<font color="#E5E5E5"> so</font>

677
00:38:35,380 --> 00:38:42,660
which brings me<font color="#CCCCCC"> to the conclusions</font>

678
00:38:44,170 --> 00:38:50,950
so from my perspective<font color="#CCCCCC"> on I liked the</font>

679
00:38:47,900 --> 00:38:53,990
idea<font color="#CCCCCC"> and the approach of</font><font color="#E5E5E5"> xsj</font><font color="#CCCCCC"> s</font>

680
00:38:50,950 --> 00:38:56,779
personally because the<font color="#CCCCCC"> API is</font><font color="#E5E5E5"> really</font>

681
00:38:53,990 --> 00:38:59,240
limited<font color="#E5E5E5"> and it's focused on what you</font>

682
00:38:56,780 --> 00:39:02,569
<font color="#CCCCCC">should do with the database</font><font color="#E5E5E5"> and that's</font>

683
00:38:59,240 --> 00:39:05,270
<font color="#E5E5E5">in memory computer you have access for</font>

684
00:39:02,569 --> 00:39:07,430
<font color="#CCCCCC">for traces you can write down files and</font>

685
00:39:05,270 --> 00:39:11,960
you have certain types of back-end logic

686
00:39:07,430 --> 00:39:14,180
but<font color="#CCCCCC"> it's not like you can then I don't</font>

687
00:39:11,960 --> 00:39:17,420
know right fancy<font color="#E5E5E5"> i/o applications or</font>

688
00:39:14,180 --> 00:39:20,390
stuff<font color="#CCCCCC"> like that I also like the idea</font>

689
00:39:17,420 --> 00:39:24,380
<font color="#CCCCCC">that sequel injection is really also</font>

690
00:39:20,390 --> 00:39:26,629
mitigated or limited<font color="#CCCCCC"> by the</font>

691
00:39:24,380 --> 00:39:28,520
<font color="#E5E5E5">authorization suicide so that's that's</font>

692
00:39:26,630 --> 00:39:32,470
quite<font color="#E5E5E5"> a good thing</font><font color="#CCCCCC"> from architecture</font>

693
00:39:28,520 --> 00:39:35,089
point of view<font color="#E5E5E5"> but on the other</font><font color="#CCCCCC"> hand</font>

694
00:39:32,470 --> 00:39:36,740
let's just see where the<font color="#CCCCCC"> road will go</font>

695
00:39:35,089 --> 00:39:39,980
down<font color="#E5E5E5"> because what I have seen a</font>

696
00:39:36,740 --> 00:39:42,379
customers of<font color="#E5E5E5"> course this is not like</font>

697
00:39:39,980 --> 00:39:45,109
there are hundreds of audits I have been

698
00:39:42,380 --> 00:39:47,329
<font color="#E5E5E5">conducting but again from</font><font color="#CCCCCC"> our past</font>

699
00:39:45,109 --> 00:39:50,660
experience what I've seen what<font color="#CCCCCC"> can go</font>

700
00:39:47,329 --> 00:39:55,490
wrong<font color="#CCCCCC"> and we found two same things at at</font>

701
00:39:50,660 --> 00:39:58,279
at customers I think one of the biggest

702
00:39:55,490 --> 00:40:02,930
<font color="#E5E5E5">challenges for as ap customers will be</font>

703
00:39:58,280 --> 00:40:07,130
the<font color="#CCCCCC"> education when customers will move</font>

704
00:40:02,930 --> 00:40:09,230
from<font color="#CCCCCC"> netweaver technology to Hana in</font>

705
00:40:07,130 --> 00:40:12,109
Hana development and when all the<font color="#CCCCCC"> people</font>

706
00:40:09,230 --> 00:40:18,170
that have<font color="#CCCCCC"> been developing about</font>

707
00:40:12,109 --> 00:40:22,400
applications need<font color="#E5E5E5"> to be educated in</font><font color="#CCCCCC"> ok</font>

708
00:40:18,170 --> 00:40:24,890
<font color="#E5E5E5">need to be educated in in Hana</font>

709
00:40:22,400 --> 00:40:27,290
development so what I've seen from from

710
00:40:24,890 --> 00:40:29,779
the<font color="#E5E5E5"> secure programming trainings I'm</font>

711
00:40:27,290 --> 00:40:32,808
conducting<font color="#E5E5E5"> when I'm teaching the people</font>

712
00:40:29,780 --> 00:40:36,770
<font color="#CCCCCC">how to securely program ABAB</font><font color="#E5E5E5"> I see that</font>

713
00:40:32,809 --> 00:40:39,220
maybe<font color="#E5E5E5"> just one fourth of</font><font color="#CCCCCC"> the people</font>

714
00:40:36,770 --> 00:40:42,259
really<font color="#E5E5E5"> know about the web technology and</font>

715
00:40:39,220 --> 00:40:44,779
now they will not<font color="#E5E5E5"> only need to switch</font>

716
00:40:42,260 --> 00:40:46,280
<font color="#CCCCCC">the language</font><font color="#E5E5E5"> or depending if you mix it</font>

717
00:40:44,780 --> 00:40:48,260
up<font color="#CCCCCC"> for then</font><font color="#E5E5E5"> you somehow need to</font>

718
00:40:46,280 --> 00:40:50,420
<font color="#CCCCCC">communicate but if</font><font color="#E5E5E5"> if they completely</font>

719
00:40:48,260 --> 00:40:51,770
<font color="#E5E5E5">switch they also need</font><font color="#CCCCCC"> to understand</font>

720
00:40:50,420 --> 00:40:52,930
everything<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> related to web</font>

721
00:40:51,770 --> 00:40:55,990
security

722
00:40:52,930 --> 00:40:58,089
so that will be for sure<font color="#E5E5E5"> for</font><font color="#CCCCCC"> customers a</font>

723
00:40:55,990 --> 00:41:00,189
huge challenge<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's also</font><font color="#CCCCCC"> something</font>

724
00:40:58,090 --> 00:41:04,150
you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> take into</font><font color="#E5E5E5"> account when you do</font>

725
00:41:00,190 --> 00:41:06,160
code review<font color="#CCCCCC"> I think there</font><font color="#E5E5E5"> will be lots</font>

726
00:41:04,150 --> 00:41:08,170
of<font color="#CCCCCC"> people who understand JavaScript</font><font color="#E5E5E5"> but</font>

727
00:41:06,160 --> 00:41:14,200
that doesn't necessarily<font color="#E5E5E5"> mean that those</font>

728
00:41:08,170 --> 00:41:17,920
people<font color="#E5E5E5"> will understand how ASAP</font>

729
00:41:14,200 --> 00:41:21,370
internally works<font color="#E5E5E5"> and that is also a huge</font>

730
00:41:17,920 --> 00:41:23,140
challenge<font color="#E5E5E5"> sometimes so in</font><font color="#CCCCCC"> in the same</font>

731
00:41:21,370 --> 00:41:25,390
<font color="#E5E5E5">way</font>

732
00:41:23,140 --> 00:41:27,759
<font color="#E5E5E5">excess advanced I think that's also a</font>

733
00:41:25,390 --> 00:41:30,700
nice way<font color="#E5E5E5"> where it's where it's going but</font>

734
00:41:27,760 --> 00:41:34,090
it's it's it's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> really complex</font>

735
00:41:30,700 --> 00:41:35,620
architecture and I think it also takes

736
00:41:34,090 --> 00:41:39,700
some<font color="#E5E5E5"> extra time for</font><font color="#CCCCCC"> the security</font>

737
00:41:35,620 --> 00:41:46,120
researchers to take<font color="#E5E5E5"> into this so you're</font>

738
00:41:39,700 --> 00:41:52,200
smiling<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> which brings</font><font color="#E5E5E5"> me to</font><font color="#CCCCCC"> the end</font>

739
00:41:46,120 --> 00:41:52,200
<font color="#E5E5E5">and we have time for questions</font>

