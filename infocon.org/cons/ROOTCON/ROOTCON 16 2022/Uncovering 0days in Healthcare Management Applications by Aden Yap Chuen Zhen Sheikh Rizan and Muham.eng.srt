1
00:00:00,000 --> 00:00:03,419
much and and record it and and fix in

2
00:00:03,419 --> 00:00:05,759
the timely manner is there so this is

3
00:00:05,759 --> 00:00:08,160
one of a very important criteria

4
00:00:08,160 --> 00:00:12,679
um why we chose open EMR as our project

5
00:00:13,139 --> 00:00:16,379
now looking back a bit um on on the sum

6
00:00:16,379 --> 00:00:18,480
of the past security research done by

7
00:00:18,480 --> 00:00:22,020
other teams uh project insecurity

8
00:00:22,020 --> 00:00:25,320
um they had done a particular audit on a

9
00:00:25,320 --> 00:00:29,640
pen test on this open EMR version 5 and

10
00:00:29,640 --> 00:00:32,340
they have uncovered a number of SQL

11
00:00:32,340 --> 00:00:35,820
injections rce's in 2018 when it was

12
00:00:35,820 --> 00:00:38,880
publicized this proves that um yeah

13
00:00:38,880 --> 00:00:40,559
there are people out there looking at

14
00:00:40,559 --> 00:00:42,960
this application but at the same time it

15
00:00:42,960 --> 00:00:45,000
also means that it's going to be a bit

16
00:00:45,000 --> 00:00:47,160
challenging for us if the code base did

17
00:00:47,160 --> 00:00:50,579
not change much since 2018 we did this

18
00:00:50,579 --> 00:00:54,360
in 2021 it will be likely that we might

19
00:00:54,360 --> 00:00:57,980
not find the same vulnerabilities

20
00:00:59,039 --> 00:01:02,660
now um on Sonar block website uh it was

21
00:01:02,660 --> 00:01:05,640
publicized that a couple of

22
00:01:05,640 --> 00:01:09,780
um command injection xss insecure API

23
00:01:09,780 --> 00:01:11,640
permission and SQL injections were

24
00:01:11,640 --> 00:01:12,720
reported

25
00:01:12,720 --> 00:01:16,500
and it hit the news and it was widely

26
00:01:16,500 --> 00:01:18,780
known that the open EMR project was

27
00:01:18,780 --> 00:01:22,939
vulnerable to such vulnerabilities

28
00:01:23,400 --> 00:01:25,020
now I'll move on to the technical

29
00:01:25,020 --> 00:01:27,500
findings

30
00:01:27,540 --> 00:01:29,759
this is an overview of how how we

31
00:01:29,759 --> 00:01:31,380
perform the testing it is not nothing

32
00:01:31,380 --> 00:01:32,640
sophisticated

33
00:01:32,640 --> 00:01:33,720
um there's

34
00:01:33,720 --> 00:01:36,180
um nothing very difficult about it it

35
00:01:36,180 --> 00:01:38,159
was the combination of manual source

36
00:01:38,159 --> 00:01:40,079
code analysis and black box testing the

37
00:01:40,079 --> 00:01:41,759
kind of stuff that we do perform every

38
00:01:41,759 --> 00:01:44,159
day in fact what we found were

39
00:01:44,159 --> 00:01:46,619
insufficient authorization checks and

40
00:01:46,619 --> 00:01:48,720
also input validation uh insufficient

41
00:01:48,720 --> 00:01:51,119
input validation leading to xss

42
00:01:51,119 --> 00:01:53,880
now we reported the debugs to the

43
00:01:53,880 --> 00:01:56,820
directly to the open EMR project team

44
00:01:56,820 --> 00:01:58,079
um they they

45
00:01:58,079 --> 00:02:00,899
um they replied to us in a fairly um

46
00:02:00,899 --> 00:02:04,020
fast and promptly Manner and um after we

47
00:02:04,020 --> 00:02:07,020
even submitted the the pork

48
00:02:07,020 --> 00:02:09,360
um we we uh we waited for on them to fix

49
00:02:09,360 --> 00:02:12,120
the vulnerability and after which uh we

50
00:02:12,120 --> 00:02:15,120
we triage it into uh Mitra and and got

51
00:02:15,120 --> 00:02:18,260
the CV is published

52
00:02:18,959 --> 00:02:21,239
now this is a summary finding of the

53
00:02:21,239 --> 00:02:23,000
application that we

54
00:02:23,000 --> 00:02:26,520
researched it was open EMR version 6.0

55
00:02:26,520 --> 00:02:30,239
the version released was 2021 the

56
00:02:30,239 --> 00:02:32,580
researchers names are listed here and

57
00:02:32,580 --> 00:02:34,980
the type of bugs classification is Idol

58
00:02:34,980 --> 00:02:37,200
and xss in total we found eight

59
00:02:37,200 --> 00:02:39,239
vulnerabilities however one of the

60
00:02:39,239 --> 00:02:42,959
vulnerabilities led to 61 idors

61
00:02:42,959 --> 00:02:45,420
um obviously we weren't chasing um cves

62
00:02:45,420 --> 00:02:47,640
we don't want 61 in cves we just

63
00:02:47,640 --> 00:02:50,580
registered eight separate cves just to

64
00:02:50,580 --> 00:02:53,660
classify the bugs

65
00:02:54,000 --> 00:02:55,920
now the the

66
00:02:55,920 --> 00:02:58,620
um the top two vulnerabilities were

67
00:02:58,620 --> 00:03:03,180
rated as high uh CVSs 8.1 and 8.3 uh

68
00:03:03,180 --> 00:03:06,180
where uh non-privileged users were able

69
00:03:06,180 --> 00:03:08,879
to uh read or disclose uh patient

70
00:03:08,879 --> 00:03:10,140
records

71
00:03:10,140 --> 00:03:13,379
and followed by a couple of stocks uh

72
00:03:13,379 --> 00:03:15,720
cross-site scripting and uh

73
00:03:15,720 --> 00:03:17,959
unauthenticated well not unethical

74
00:03:17,959 --> 00:03:20,700
non-privileged uh download of patient

75
00:03:20,700 --> 00:03:23,400
records and a couple of stock site

76
00:03:23,400 --> 00:03:25,260
scripting which my colleagues behind

77
00:03:25,260 --> 00:03:28,700
here will walk you through some of it

78
00:03:29,519 --> 00:03:31,860
now the the first vulnerability on top

79
00:03:31,860 --> 00:03:36,659
was rated as high cve 2022 1459 uh what

80
00:03:36,659 --> 00:03:38,940
happened was a non-privileged user uh

81
00:03:38,940 --> 00:03:40,860
such as an accountant or a front office

82
00:03:40,860 --> 00:03:43,260
Personnel is able to view patient

83
00:03:43,260 --> 00:03:45,239
records on the system

84
00:03:45,239 --> 00:03:48,239
now um the problem here is is due to

85
00:03:48,239 --> 00:03:51,060
insufficient Access Control list on the

86
00:03:51,060 --> 00:03:53,280
endpoint the affected URL is mentioned

87
00:03:53,280 --> 00:03:55,560
in in the box at the bottom you can see

88
00:03:55,560 --> 00:03:58,280
that the URL has

89
00:03:58,280 --> 00:04:01,379
added edit lit equals three that is the

90
00:04:01,379 --> 00:04:03,000
parameter that was vulnerable that we

91
00:04:03,000 --> 00:04:05,640
found it requires authentication so

92
00:04:05,640 --> 00:04:07,440
therefore you will require at least a

93
00:04:07,440 --> 00:04:09,140
low privileged user

94
00:04:09,140 --> 00:04:13,819
in essence the application or the

95
00:04:13,819 --> 00:04:17,339
patient patient records should only be

96
00:04:17,339 --> 00:04:20,519
accessible by the Admin or the medical

97
00:04:20,519 --> 00:04:22,860
personnel but in this case a low

98
00:04:22,860 --> 00:04:26,419
privileged account was able to download

99
00:04:26,419 --> 00:04:30,240
patient records and in the following

100
00:04:30,240 --> 00:04:32,160
slides I will show you how we discovered

101
00:04:32,160 --> 00:04:34,699
the vulnerability

102
00:04:35,580 --> 00:04:39,840
over here is a snapshot of the um the UI

103
00:04:39,840 --> 00:04:43,500
and you can see on the the top right

104
00:04:43,500 --> 00:04:46,080
hand corner there is the administrator

105
00:04:46,080 --> 00:04:48,540
user he's he's the person that currently

106
00:04:48,540 --> 00:04:50,820
locked into the system and he can view

107
00:04:50,820 --> 00:04:53,100
the dashboard now the dashboard contains

108
00:04:53,100 --> 00:04:55,860
the the uh the patient medical records

109
00:04:55,860 --> 00:04:58,979
this this is considered um the correct

110
00:04:58,979 --> 00:05:02,180
behavior of the application

111
00:05:03,120 --> 00:05:05,400
now what happened is if when we download

112
00:05:05,400 --> 00:05:07,080
sorry when we

113
00:05:07,080 --> 00:05:09,720
um login when we log in as an accountant

114
00:05:09,720 --> 00:05:12,120
user by right the accountant user should

115
00:05:12,120 --> 00:05:13,919
only be able to view

116
00:05:13,919 --> 00:05:16,740
um non-medical records such as billing

117
00:05:16,740 --> 00:05:19,620
information however what we found by

118
00:05:19,620 --> 00:05:21,660
tampering the the parameter that I

119
00:05:21,660 --> 00:05:23,280
showed you in the previous slide we were

120
00:05:23,280 --> 00:05:25,800
able to view patient medical records so

121
00:05:25,800 --> 00:05:27,860
therefore this shows that there's a

122
00:05:27,860 --> 00:05:31,380
failure in the authorization check in in

123
00:05:31,380 --> 00:05:34,259
that particular web page or the endpoint

124
00:05:34,259 --> 00:05:37,039
in particular

125
00:05:38,039 --> 00:05:40,680
now this is the get request so they use

126
00:05:40,680 --> 00:05:42,660
uh just a simple get request like I

127
00:05:42,660 --> 00:05:44,340
showed in the previous slide

128
00:05:44,340 --> 00:05:46,860
um just by doing a get request to the

129
00:05:46,860 --> 00:05:49,259
record disclosure.php with the edit lead

130
00:05:49,259 --> 00:05:51,539
equals to 3 that is the temporal

131
00:05:51,539 --> 00:05:53,820
parameter at the bottom here you see the

132
00:05:53,820 --> 00:05:55,080
cookie

133
00:05:55,080 --> 00:05:57,720
now this is the accounting user cookie

134
00:05:57,720 --> 00:06:00,300
the non-privish user so what we did was

135
00:06:00,300 --> 00:06:02,580
we we swapped it instead of having the

136
00:06:02,580 --> 00:06:04,919
admin cookie we swapped it with the

137
00:06:04,919 --> 00:06:07,320
accounting user cookie and just by using

138
00:06:07,320 --> 00:06:09,360
the accountant user cookie we are able

139
00:06:09,360 --> 00:06:11,820
to fetch the patient record and the

140
00:06:11,820 --> 00:06:13,800
parameter added lit equals to three you

141
00:06:13,800 --> 00:06:15,300
can just increment that number three

142
00:06:15,300 --> 00:06:17,280
four five six and so forth and you'll be

143
00:06:17,280 --> 00:06:19,979
able to view other patient records so

144
00:06:19,979 --> 00:06:23,039
it's as simple as opening the browser

145
00:06:23,039 --> 00:06:25,860
pointing pointing the browser to that

146
00:06:25,860 --> 00:06:28,380
particular endpoint and just modify that

147
00:06:28,380 --> 00:06:30,180
last parameter at the back there the

148
00:06:30,180 --> 00:06:34,080
number and just keep incrementing it and

149
00:06:34,080 --> 00:06:36,240
you will be able to download patient

150
00:06:36,240 --> 00:06:37,560
records

151
00:06:37,560 --> 00:06:40,199
now we were wondering why this Behavior

152
00:06:40,199 --> 00:06:42,539
was prevalent uh in fact uh there are

153
00:06:42,539 --> 00:06:46,080
about 62 web pages or endpoints that had

154
00:06:46,080 --> 00:06:48,919
similar issue

155
00:06:49,199 --> 00:06:51,600
now I I took a look at the source code

156
00:06:51,600 --> 00:06:54,780
for example the record underscore

157
00:06:54,780 --> 00:06:58,979
disclosure dot PHP web page at the top

158
00:06:58,979 --> 00:07:01,380
as you can see from line number 12 all

159
00:07:01,380 --> 00:07:04,139
the way to line number 25

160
00:07:04,139 --> 00:07:07,440
there isn't any ACL checks this this was

161
00:07:07,440 --> 00:07:10,259
found on version 6.0 the particular

162
00:07:10,259 --> 00:07:12,479
application that we were doing our

163
00:07:12,479 --> 00:07:15,060
research now after we have reported the

164
00:07:15,060 --> 00:07:16,860
issue and such

165
00:07:16,860 --> 00:07:19,259
um they fixed the the problem on the

166
00:07:19,259 --> 00:07:23,099
following version uh 6.1.0 I download

167
00:07:23,099 --> 00:07:24,720
the source code again on the same

168
00:07:24,720 --> 00:07:26,759
particular web page just to find out

169
00:07:26,759 --> 00:07:29,720
what did they do

170
00:07:30,380 --> 00:07:34,919
and what I found was on line number 23

171
00:07:34,919 --> 00:07:38,280
to 27 they added the ACL check in fact

172
00:07:38,280 --> 00:07:41,759
on line number 30 to 34 they added

173
00:07:41,759 --> 00:07:43,860
another check where the if the

174
00:07:43,860 --> 00:07:46,319
authorization check failed the page will

175
00:07:46,319 --> 00:07:49,319
just exit so this was the missing piece

176
00:07:49,319 --> 00:07:51,360
of the um the code

177
00:07:51,360 --> 00:07:53,699
in the system that that what was not

178
00:07:53,699 --> 00:07:56,699
there was absent in version 6.0

179
00:07:56,699 --> 00:07:59,639
so only then I we we found out uh that's

180
00:07:59,639 --> 00:08:00,840
why the problem

181
00:08:00,840 --> 00:08:04,919
was prevalent on on uh 61 other uh Pages

182
00:08:04,919 --> 00:08:07,199
or endpoints on this particular

183
00:08:07,199 --> 00:08:09,960
application so we registered this as a

184
00:08:09,960 --> 00:08:11,819
as a cve by itself

185
00:08:11,819 --> 00:08:14,039
however the the following

186
00:08:14,039 --> 00:08:17,220
um uh sweep of the entire application

187
00:08:17,220 --> 00:08:19,560
was done by my colleague so he he

188
00:08:19,560 --> 00:08:21,900
thoroughly went through practically all

189
00:08:21,900 --> 00:08:23,759
the the endpoints uh belonging to open

190
00:08:23,759 --> 00:08:26,400
EMR and he found a total of 62 other

191
00:08:26,400 --> 00:08:28,800
issues similar issues which I will pass

192
00:08:28,800 --> 00:08:31,560
the mic to him now to tell you uh maybe

193
00:08:31,560 --> 00:08:33,360
he can tell you how how he discovered

194
00:08:33,360 --> 00:08:36,440
and how how he did it

195
00:08:37,799 --> 00:08:39,260
okay

196
00:08:39,260 --> 00:08:42,719
testing okay thank you reason so I was

197
00:08:42,719 --> 00:08:46,040
going to talk about the second cve uh

198
00:08:46,040 --> 00:08:47,660
2022

199
00:08:47,660 --> 00:08:50,580
2493 so this is a missing function level

200
00:08:50,580 --> 00:08:53,399
access control issue in the open EMR

201
00:08:53,399 --> 00:08:56,160
right there are total file user row type

202
00:08:56,160 --> 00:08:59,580
so they are a super aiming and

203
00:08:59,580 --> 00:09:01,980
accounting front office and vigination

204
00:09:01,980 --> 00:09:04,560
and clinician so the super enemy is the

205
00:09:04,560 --> 00:09:06,720
highest progress in this uh application

206
00:09:06,720 --> 00:09:09,839
so you can access all the modules within

207
00:09:09,839 --> 00:09:12,720
the application and another user row

208
00:09:12,720 --> 00:09:15,420
type they have they have they are

209
00:09:15,420 --> 00:09:18,180
considered as a standard user and they

210
00:09:18,180 --> 00:09:20,519
have their own permission and uh

211
00:09:20,519 --> 00:09:24,720
a mod use based on my findings any user

212
00:09:24,720 --> 00:09:28,080
in this application can access to some

213
00:09:28,080 --> 00:09:31,040
of the admin modules and other than that

214
00:09:31,040 --> 00:09:33,480
the user like

215
00:09:33,480 --> 00:09:35,279
accounting and front office and

216
00:09:35,279 --> 00:09:37,700
visitation

217
00:09:39,360 --> 00:09:43,440
uh they have a previous primary skewers

218
00:09:43,440 --> 00:09:46,200
previous issue meaning that for example

219
00:09:46,200 --> 00:09:48,420
accounting user is supposed to be viewed

220
00:09:48,420 --> 00:09:51,480
a billing and the payment data but in

221
00:09:51,480 --> 00:09:53,779
this case the the front office and

222
00:09:53,779 --> 00:09:56,580
visitation and creation is able to view

223
00:09:56,580 --> 00:09:58,140
the building and the payment payment

224
00:09:58,140 --> 00:10:01,019
data also so this proves that they're

225
00:10:01,019 --> 00:10:03,779
having a excess control issue usually

226
00:10:03,779 --> 00:10:05,760
this kind of a vulnerability can't be

227
00:10:05,760 --> 00:10:07,500
picked up by the automated tool and it

228
00:10:07,500 --> 00:10:11,540
requires menu testing to identify it

229
00:10:11,820 --> 00:10:14,519
in total we have discovered this is two

230
00:10:14,519 --> 00:10:17,519
Wonder instant and

231
00:10:17,519 --> 00:10:20,940
we have Consolidated them into one cve

232
00:10:20,940 --> 00:10:23,100
because they are in the same category

233
00:10:23,100 --> 00:10:26,360
and I don't think the owner will issue a

234
00:10:26,360 --> 00:10:30,959
62 CB for us and I will talk about the

235
00:10:30,959 --> 00:10:33,720
recommendation for this one is they are

236
00:10:33,720 --> 00:10:36,060
heavy relying on the UI to implement the

237
00:10:36,060 --> 00:10:38,040
access control this is not a good

238
00:10:38,040 --> 00:10:40,320
practice so they require a server-side

239
00:10:40,320 --> 00:10:43,880
validation to check the access control

240
00:10:44,519 --> 00:10:47,399
so this is a list of the vulnerable

241
00:10:47,399 --> 00:10:49,320
instance but I only show part of it here

242
00:10:49,320 --> 00:10:52,260
because it's too many early so uh red

243
00:10:52,260 --> 00:10:54,839
color means that this is a unauthorized

244
00:10:54,839 --> 00:10:58,440
access to those uh endpoints and modules

245
00:10:58,440 --> 00:11:00,959
we meaning that that user role is

246
00:11:00,959 --> 00:11:04,620
authorized to access to the modules so

247
00:11:04,620 --> 00:11:07,260
one thing to highlighting here is their

248
00:11:07,260 --> 00:11:09,120
list of endpoint is belonging to the

249
00:11:09,120 --> 00:11:12,060
admin which all the any user can be

250
00:11:12,060 --> 00:11:14,279
accessible and some of it is very

251
00:11:14,279 --> 00:11:16,620
critical I will show you in the field in

252
00:11:16,620 --> 00:11:18,839
the next few slides and another thing

253
00:11:18,839 --> 00:11:22,079
here is a clinician at the front office

254
00:11:22,079 --> 00:11:23,779
and the

255
00:11:23,779 --> 00:11:27,180
uh fund office and the visit nation and

256
00:11:27,180 --> 00:11:28,620
the queen Nation can access the building

257
00:11:28,620 --> 00:11:30,000
and the

258
00:11:30,000 --> 00:11:32,339
and the payment info which is not

259
00:11:32,339 --> 00:11:34,620
supposed to those are the modules can be

260
00:11:34,620 --> 00:11:37,940
accessible by the accounting

261
00:11:38,940 --> 00:11:41,760
okay this is the first POC I'm going to

262
00:11:41,760 --> 00:11:45,959
show so uh like what I say any user

263
00:11:45,959 --> 00:11:49,079
right can access to any modules so this

264
00:11:49,079 --> 00:11:50,459
is

265
00:11:50,459 --> 00:11:52,320
in order to exploit this kind of

266
00:11:52,320 --> 00:11:53,760
vulnerability right first we need to

267
00:11:53,760 --> 00:11:57,360
identify the endpoints so here is a mean

268
00:11:57,360 --> 00:11:59,579
Dash a mean dashboard as we can see

269
00:11:59,579 --> 00:12:02,820
there is a main header session which you

270
00:12:02,820 --> 00:12:05,700
wish to navigate to the admin modules so

271
00:12:05,700 --> 00:12:07,380
for this one I choose to navigate to

272
00:12:07,380 --> 00:12:09,959
form Administration so

273
00:12:09,959 --> 00:12:13,019
when we navigate to them or modules

274
00:12:13,019 --> 00:12:15,779
right the URL here is always remaining

275
00:12:15,779 --> 00:12:18,420
the same so it will be the same if I

276
00:12:18,420 --> 00:12:20,760
navigate to another module as well so

277
00:12:20,760 --> 00:12:22,800
the the path will be the same on the URL

278
00:12:22,800 --> 00:12:25,500
with stretch main.php

279
00:12:25,500 --> 00:12:28,079
so there's some percept on the breakout

280
00:12:28,079 --> 00:12:31,680
which we cannot see by our eyes

281
00:12:31,680 --> 00:12:34,620
so in order for us to discover the real

282
00:12:34,620 --> 00:12:38,579
endpoints or one thing one tool we can

283
00:12:38,579 --> 00:12:40,620
use on the viewing browser is an inspect

284
00:12:40,620 --> 00:12:43,019
element and as we can see here at the

285
00:12:43,019 --> 00:12:45,060
bottom we can when we browse to the

286
00:12:45,060 --> 00:12:47,220
modules if you're using the inspect

287
00:12:47,220 --> 00:12:49,320
element with the network we can view the

288
00:12:49,320 --> 00:12:51,300
network or the the traffic sending to

289
00:12:51,300 --> 00:12:53,279
which endpoint so this is how we can

290
00:12:53,279 --> 00:12:56,040
capture the endpoint but this may not

291
00:12:56,040 --> 00:12:57,720
very user friendly so the second

292
00:12:57,720 --> 00:13:00,000
approach we can use is we can use a tool

293
00:13:00,000 --> 00:13:03,420
it's called Uh bursary I believe uh this

294
00:13:03,420 --> 00:13:04,740
is an essential tool for the security

295
00:13:04,740 --> 00:13:07,019
testing I believe most of you may see

296
00:13:07,019 --> 00:13:10,079
and use it before and how the bus we do

297
00:13:10,079 --> 00:13:12,420
is it will capture all the HTTP requests

298
00:13:12,420 --> 00:13:16,500
before sending to the server and then uh

299
00:13:16,500 --> 00:13:18,600
as we can see on the screenshot those

300
00:13:18,600 --> 00:13:20,639
are the endpoint I captured the key

301
00:13:20,639 --> 00:13:22,320
finding here is the one I highlighted

302
00:13:22,320 --> 00:13:25,860
which is the phone admin.php

303
00:13:26,639 --> 00:13:29,760
now we managed to capture the Waterberg

304
00:13:29,760 --> 00:13:31,740
endpoint so the next thing we need to do

305
00:13:31,740 --> 00:13:35,100
is we can log in as any user on the

306
00:13:35,100 --> 00:13:37,740
application so what I choose is a front

307
00:13:37,740 --> 00:13:40,139
office because this user is considered

308
00:13:40,139 --> 00:13:42,300
as a lowest price user on this

309
00:13:42,300 --> 00:13:45,120
application so this is a dashboard

310
00:13:45,120 --> 00:13:47,519
of the front office looks like as we can

311
00:13:47,519 --> 00:13:49,740
see there is no Administration session

312
00:13:49,740 --> 00:13:53,100
header here this proof that this user is

313
00:13:53,100 --> 00:13:56,779
not allowed to access to that modules

314
00:13:57,720 --> 00:14:01,200
so we just need to what we have captured

315
00:14:01,200 --> 00:14:03,300
the one over endpoint just now what we

316
00:14:03,300 --> 00:14:05,100
need to do is we just need to copy paste

317
00:14:05,100 --> 00:14:07,019
and then and then we can browse it

318
00:14:07,019 --> 00:14:09,540
directly on the phone on the browser

319
00:14:09,540 --> 00:14:11,399
then we can access the

320
00:14:11,399 --> 00:14:13,680
modules this is the me models which is

321
00:14:13,680 --> 00:14:15,839
accessed by the front office and in this

322
00:14:15,839 --> 00:14:19,440
modules right uh it allowed a user to

323
00:14:19,440 --> 00:14:22,260
modify the access control for phones

324
00:14:22,260 --> 00:14:24,420
within the application meaning that this

325
00:14:24,420 --> 00:14:26,100
will allow attacker to modify the access

326
00:14:26,100 --> 00:14:28,200
control to gain more access to another

327
00:14:28,200 --> 00:14:31,380
modules which will compromise mostly the

328
00:14:31,380 --> 00:14:34,939
70 of the vacation

329
00:14:36,779 --> 00:14:39,600
and this is the second POC it's quite

330
00:14:39,600 --> 00:14:41,459
similar like the first one but this one

331
00:14:41,459 --> 00:14:44,940
is a building and the payment modules

332
00:14:44,940 --> 00:14:47,940
and this modules is uh also cannot be

333
00:14:47,940 --> 00:14:49,800
viewed by the front office but in this

334
00:14:49,800 --> 00:14:51,839
case the flying office is managed to

335
00:14:51,839 --> 00:14:53,760
browse the

336
00:14:53,760 --> 00:14:55,560
we managed to capture the endpoint and

337
00:14:55,560 --> 00:14:58,560
browse it on the on on this user session

338
00:14:58,560 --> 00:15:00,839
and we can see that we can see the

339
00:15:00,839 --> 00:15:03,300
building manager on the bottom we can

340
00:15:03,300 --> 00:15:05,459
see there is a patient uh payment record

341
00:15:05,459 --> 00:15:08,519
if we click further on the patient

342
00:15:08,519 --> 00:15:11,279
record actually we can issue the

343
00:15:11,279 --> 00:15:13,560
building without pay paying any fee so

344
00:15:13,560 --> 00:15:16,380
we can get a free medical Consulting on

345
00:15:16,380 --> 00:15:20,699
this so this is the two POC I'm going to

346
00:15:20,699 --> 00:15:22,260
present because there are too many due

347
00:15:22,260 --> 00:15:25,079
to the timing only pre I only selected

348
00:15:25,079 --> 00:15:26,760
two POC that I think is the most

349
00:15:26,760 --> 00:15:27,839
impactful

350
00:15:27,839 --> 00:15:31,199
and I that's it for my uh this TV I will

351
00:15:31,199 --> 00:15:36,019
pass it for Ali to continue his finding

352
00:15:37,920 --> 00:15:39,839
all right thank you Eden

353
00:15:39,839 --> 00:15:43,920
um morning everyone so Ali present uh

354
00:15:43,920 --> 00:15:46,380
one findings that I found which a

355
00:15:46,380 --> 00:15:48,959
non-privileged user can actually create

356
00:15:48,959 --> 00:15:51,600
a new rule and lead to store process

357
00:15:51,600 --> 00:15:52,800
scripting

358
00:15:52,800 --> 00:15:55,440
so this non-privileged user which

359
00:15:55,440 --> 00:15:58,680
include accountant or front office they

360
00:15:58,680 --> 00:16:00,839
can actually create a new rule by

361
00:16:00,839 --> 00:16:04,620
injecting a by three web script and lead

362
00:16:04,620 --> 00:16:06,899
to stock or satisfit thing in one

363
00:16:06,899 --> 00:16:10,160
endpoint which is interface superus

364
00:16:10,160 --> 00:16:14,880
index.php in that edit submit summary in

365
00:16:14,880 --> 00:16:17,220
one of the vulnerable parameter call FID

366
00:16:17,220 --> 00:16:18,480
title

367
00:16:18,480 --> 00:16:22,079
so this SSS payload will be triggered in

368
00:16:22,079 --> 00:16:24,600
the pen rules which can only be viewed

369
00:16:24,600 --> 00:16:27,420
by privileged user or you can call it as

370
00:16:27,420 --> 00:16:29,040
admin rules

371
00:16:29,040 --> 00:16:31,320
so our recombination is quite simple

372
00:16:31,320 --> 00:16:34,800
which is to ensure that all inputs from

373
00:16:34,800 --> 00:16:38,180
the user are sanitized before it being

374
00:16:38,180 --> 00:16:41,820
reflected or processed by the server

375
00:16:41,820 --> 00:16:43,139
itself

376
00:16:43,139 --> 00:16:46,259
so overall we found four star cross-site

377
00:16:46,259 --> 00:16:49,920
scripting and one reflected SSS and yes

378
00:16:49,920 --> 00:16:52,920
you need to authenticate it to reproduce

379
00:16:52,920 --> 00:16:55,320
all of the issues that I will share in

380
00:16:55,320 --> 00:16:57,920
the next slide

381
00:16:59,480 --> 00:17:03,120
so before I jump into all the issue

382
00:17:03,120 --> 00:17:05,640
production of the CVS I'm going to share

383
00:17:05,640 --> 00:17:08,220
what is actually you can see inside this

384
00:17:08,220 --> 00:17:10,199
open emrs MS

385
00:17:10,199 --> 00:17:12,660
so in this application there are a lot

386
00:17:12,660 --> 00:17:16,859
of inputs forms modules and also

387
00:17:16,859 --> 00:17:18,299
subcategory

388
00:17:18,299 --> 00:17:20,339
for me as a new beginner in

389
00:17:20,339 --> 00:17:22,740
vulnerability research I might feel

390
00:17:22,740 --> 00:17:24,720
overwhelmed so

391
00:17:24,720 --> 00:17:27,540
there are a few methodology and

392
00:17:27,540 --> 00:17:31,080
techniques that I would like to try and

393
00:17:31,080 --> 00:17:33,240
I found that this one simple technique

394
00:17:33,240 --> 00:17:35,760
is quite simple but it's helped me to

395
00:17:35,760 --> 00:17:40,039
find several cves in this application

396
00:17:41,100 --> 00:17:44,700
so I'm going to explain it on this page

397
00:17:44,700 --> 00:17:47,160
so if you look into this image you can

398
00:17:47,160 --> 00:17:49,200
see that there are a lot of inputs forms

399
00:17:49,200 --> 00:17:50,220
in here

400
00:17:50,220 --> 00:17:53,400
so what I did is very simple you just

401
00:17:53,400 --> 00:17:57,000
utilize Ctrl C to copy and Ctrl V to

402
00:17:57,000 --> 00:18:00,299
paste a simple payload as alert but the

403
00:18:00,299 --> 00:18:01,919
difference is you just put a unique

404
00:18:01,919 --> 00:18:05,039
numbers on all the inputs

405
00:18:05,039 --> 00:18:08,220
so for example if you found these input

406
00:18:08,220 --> 00:18:10,919
forms you set arrange for example 1

407
00:18:10,919 --> 00:18:15,000
until 9 I use in this one endpoint and I

408
00:18:15,000 --> 00:18:18,179
just take note of this endpoint

409
00:18:18,179 --> 00:18:20,160
so we when we try to browse into

410
00:18:20,160 --> 00:18:22,380
different pages and we found another

411
00:18:22,380 --> 00:18:24,960
input forms you set another range a

412
00:18:24,960 --> 00:18:27,720
unique one and just take note of that

413
00:18:27,720 --> 00:18:29,760
and points

414
00:18:29,760 --> 00:18:32,280
so keep browsing until you find the end

415
00:18:32,280 --> 00:18:34,260
of the input form that you can find in

416
00:18:34,260 --> 00:18:36,000
this application

417
00:18:36,000 --> 00:18:39,179
and with this simple techniques you can

418
00:18:39,179 --> 00:18:40,919
actually see that when we try to browse

419
00:18:40,919 --> 00:18:43,260
into different pages might be hidden one

420
00:18:43,260 --> 00:18:45,660
you might see this pop-up everywhere

421
00:18:45,660 --> 00:18:47,520
with different numbers

422
00:18:47,520 --> 00:18:49,559
so the reason behind this simple

423
00:18:49,559 --> 00:18:52,620
technique is to ensure that I could

424
00:18:52,620 --> 00:18:54,840
follow where is the payload coming from

425
00:18:54,840 --> 00:18:58,320
and it helped us to help the vendor

426
00:18:58,320 --> 00:19:00,539
itself to identify where is the payload

427
00:19:00,539 --> 00:19:01,559
coming from

428
00:19:01,559 --> 00:19:03,299
and that's how we could actually get

429
00:19:03,299 --> 00:19:06,840
these CVS so what I could say is that a

430
00:19:06,840 --> 00:19:09,539
simple technique but very efficient on

431
00:19:09,539 --> 00:19:12,440
this application

432
00:19:13,080 --> 00:19:15,840
so now I'm going to explain the issue

433
00:19:15,840 --> 00:19:20,459
reproduction of the cve 2022-1179

434
00:19:20,880 --> 00:19:23,460
if you look into this image we are now

435
00:19:23,460 --> 00:19:25,200
as administrator

436
00:19:25,200 --> 00:19:28,860
so as administrator you can see the

437
00:19:28,860 --> 00:19:31,200
rules subcategory

438
00:19:31,200 --> 00:19:33,660
but not in the case of accounting user

439
00:19:33,660 --> 00:19:37,020
you cannot see the UI access to the

440
00:19:37,020 --> 00:19:40,080
rules sub category

441
00:19:40,080 --> 00:19:42,960
so what I did is very simple you just

442
00:19:42,960 --> 00:19:45,240
intercept the requests for an

443
00:19:45,240 --> 00:19:47,340
administrator trying to create a new

444
00:19:47,340 --> 00:19:48,179
rules

445
00:19:48,179 --> 00:19:51,600
and by changing the cookie to a Content

446
00:19:51,600 --> 00:19:55,200
user a non-privileged user

447
00:19:55,200 --> 00:19:57,840
um we can and I also identified that the

448
00:19:57,840 --> 00:20:00,179
parameter of ID title is vulnerable to

449
00:20:00,179 --> 00:20:04,860
SSS so in this POC I use fetch where we

450
00:20:04,860 --> 00:20:08,059
pass the document.cookie in the server

451
00:20:08,059 --> 00:20:10,440
attacker server in here

452
00:20:10,440 --> 00:20:14,580
and we pass it in the URL parameter of C

453
00:20:14,580 --> 00:20:16,799
so by sending this request this

454
00:20:16,799 --> 00:20:19,799
non-privileged user could actually store

455
00:20:19,799 --> 00:20:23,780
this payload in the page rules

456
00:20:24,720 --> 00:20:27,900
so when administrator trying to view or

457
00:20:27,900 --> 00:20:31,080
browse to the page rules in the admin

458
00:20:31,080 --> 00:20:33,960
page eventually if you send and

459
00:20:33,960 --> 00:20:36,620
triggered the SSS payload

460
00:20:36,620 --> 00:20:40,200
to the attacker server and for example

461
00:20:40,200 --> 00:20:42,720
in here I use book collaborator

462
00:20:42,720 --> 00:20:45,140
and if you look into here this is the

463
00:20:45,140 --> 00:20:47,039
document.cookie which is passed to the

464
00:20:47,039 --> 00:20:48,960
attacker server

465
00:20:48,960 --> 00:20:51,900
and with this cookie the attacker can

466
00:20:51,900 --> 00:20:54,240
easily update it in their browser

467
00:20:54,240 --> 00:20:56,340
or if they know the endpoints that they

468
00:20:56,340 --> 00:20:59,340
want to to use or utilize they just need

469
00:20:59,340 --> 00:21:01,980
to update the cookies to the admin

470
00:21:01,980 --> 00:21:04,799
cookies that you got

471
00:21:04,799 --> 00:21:07,740
and if you look into here we are now a

472
00:21:07,740 --> 00:21:10,500
Content user but actually when we try to

473
00:21:10,500 --> 00:21:13,320
browse into different endpoints we are

474
00:21:13,320 --> 00:21:16,440
actually browse it as administrator so

475
00:21:16,440 --> 00:21:18,780
that is the kind of impact where from

476
00:21:18,780 --> 00:21:21,780
SSS we could actually get the admin

477
00:21:21,780 --> 00:21:25,380
cookies and view any endpoints as

478
00:21:25,380 --> 00:21:26,880
administrator

479
00:21:26,880 --> 00:21:28,980
and that's all from me I'll be passing

480
00:21:28,980 --> 00:21:31,140
back to resign for the next slide thank

481
00:21:31,140 --> 00:21:33,320
you

482
00:21:35,940 --> 00:21:38,400
all right so this is the disclosure

483
00:21:38,400 --> 00:21:40,260
timeline

484
00:21:40,260 --> 00:21:43,980
in September 2021 we initiated the

485
00:21:43,980 --> 00:21:47,220
report we sent it to the open EMR team

486
00:21:47,220 --> 00:21:49,380
um within a few days we received a

487
00:21:49,380 --> 00:21:51,360
confirmation from them

488
00:21:51,360 --> 00:21:54,120
and it took them quite some time

489
00:21:54,120 --> 00:21:58,440
until April 24 2022 to release the final

490
00:21:58,440 --> 00:22:00,299
patch the patches were released in

491
00:22:00,299 --> 00:22:03,659
batches the final patch was done in 24th

492
00:22:03,659 --> 00:22:06,360
April version 6.1

493
00:22:06,360 --> 00:22:08,940
and that's only only after that that's

494
00:22:08,940 --> 00:22:13,260
when we triage the cves with maitre

495
00:22:13,260 --> 00:22:15,320
um

496
00:22:15,360 --> 00:22:17,400
what I want to point out is the

497
00:22:17,400 --> 00:22:19,500
learnings

498
00:22:19,500 --> 00:22:23,460
now we we are basically pen testers um

499
00:22:23,460 --> 00:22:26,400
day in day out now a lot of times

500
00:22:26,400 --> 00:22:29,039
um there are very trivial methods that

501
00:22:29,039 --> 00:22:31,799
we report however for this particular

502
00:22:31,799 --> 00:22:35,340
research we focus slowly slow solely on

503
00:22:35,340 --> 00:22:38,220
the business impact so we forget about

504
00:22:38,220 --> 00:22:40,500
missing security haters weak ciphers the

505
00:22:40,500 --> 00:22:43,080
boring stuff but give them the stuff

506
00:22:43,080 --> 00:22:46,320
that we feel that needs to be fixed

507
00:22:46,320 --> 00:22:48,179
um we also use the source code for

508
00:22:48,179 --> 00:22:50,940
analysis being open source we had the

509
00:22:50,940 --> 00:22:52,740
luxury of downloading the source

510
00:22:52,740 --> 00:22:55,080
analyzing it manually and also using

511
00:22:55,080 --> 00:22:57,000
some automated tools gave us the

512
00:22:57,000 --> 00:22:59,159
confidence that we were able to produce

513
00:22:59,159 --> 00:23:01,159
some results

514
00:23:01,159 --> 00:23:03,480
the third point is very very important

515
00:23:03,480 --> 00:23:05,760
choose your VDP targets or program

516
00:23:05,760 --> 00:23:08,700
wisely there were times where we worked

517
00:23:08,700 --> 00:23:11,340
on other programs we found really

518
00:23:11,340 --> 00:23:13,320
critical bugs for some very large

519
00:23:13,320 --> 00:23:15,419
organizations which we can't even

520
00:23:15,419 --> 00:23:18,900
disclose they fixed it but we can't

521
00:23:18,900 --> 00:23:22,520
disclose so that's pretty much a bit um

522
00:23:22,520 --> 00:23:26,100
puts us in in a difficult position also

523
00:23:26,100 --> 00:23:28,440
um but anyway so choosing the right

524
00:23:28,440 --> 00:23:31,730
programs that have a full disclosure is

525
00:23:31,730 --> 00:23:33,740
[Music]

526
00:23:33,740 --> 00:23:37,260
as tradition sorry we have to post your

527
00:23:37,260 --> 00:23:40,260
presentation

528
00:23:42,900 --> 00:23:44,760
you have to share that with your

529
00:23:44,760 --> 00:23:47,820
teammates though you have to share that

530
00:23:47,820 --> 00:23:51,139
you're done okay

531
00:23:52,620 --> 00:23:55,200
um Ali and me can drink because we will

532
00:23:55,200 --> 00:23:58,580
just thank you thank you

533
00:23:59,340 --> 00:24:02,658
you need water Aiden

534
00:24:03,600 --> 00:24:07,580
yeah we we are allergic to alcohol

535
00:24:07,740 --> 00:24:09,659
all right so I mentioned about choosing

536
00:24:09,659 --> 00:24:11,760
the VDP very wisely uh choose programs

537
00:24:11,760 --> 00:24:15,240
that have full disclosure and um study

538
00:24:15,240 --> 00:24:17,940
the program before devolving into a VR

539
00:24:17,940 --> 00:24:20,340
project with them now uh look for

540
00:24:20,340 --> 00:24:22,980
appropriate channels for triage I

541
00:24:22,980 --> 00:24:25,500
mentioned that we tried to well we we

542
00:24:25,500 --> 00:24:28,260
tried to contact maitre they work

543
00:24:28,260 --> 00:24:30,600
fantastic uh unfortunately it was a bit

544
00:24:30,600 --> 00:24:33,620
slow uh we we found another platform uh

545
00:24:33,620 --> 00:24:37,080
hunter.dev this platform will triage

546
00:24:37,080 --> 00:24:41,220
cves for any project on GitHub

547
00:24:41,220 --> 00:24:43,919
so they were really fantastic they

548
00:24:43,919 --> 00:24:46,500
helped us to to get the CVS published in

549
00:24:46,500 --> 00:24:49,919
a timely manner and I I feel that VDP is

550
00:24:49,919 --> 00:24:52,340
a great way for beginners to get into VR

551
00:24:52,340 --> 00:24:55,039
especially if you're just starting out

552
00:24:55,039 --> 00:24:58,080
you don't know much about security

553
00:24:58,080 --> 00:24:59,419
research

554
00:24:59,419 --> 00:25:02,400
use your strong points like for us we do

555
00:25:02,400 --> 00:25:05,460
a lot of web pen testing so that's why

556
00:25:05,460 --> 00:25:09,900
we chose um web as our VR and most

557
00:25:09,900 --> 00:25:11,940
importantly work as a team with a

558
00:25:11,940 --> 00:25:14,340
combination of three of us between six

559
00:25:14,340 --> 00:25:16,980
to eight weeks last year we managed to

560
00:25:16,980 --> 00:25:19,860
produce um over 70 over vulnerabilities

561
00:25:19,860 --> 00:25:21,539
in a single program

562
00:25:21,539 --> 00:25:24,419
and remember to share whatever they will

563
00:25:24,419 --> 00:25:26,820
learn with the community much around go

564
00:25:26,820 --> 00:25:28,620
everything goes around we learn from

565
00:25:28,620 --> 00:25:32,239
each other that there's nothing to hide

566
00:25:32,760 --> 00:25:35,159
all right um thank you everyone any

567
00:25:35,159 --> 00:25:37,460
questions

568
00:25:37,530 --> 00:25:42,480
[Applause]

569
00:25:42,480 --> 00:25:44,820
all right thank you very much

570
00:25:44,820 --> 00:25:45,659
um

571
00:25:45,659 --> 00:25:47,100
are there any questions from the

572
00:25:47,100 --> 00:25:49,399
audience

573
00:25:50,600 --> 00:25:54,299
I think uh you will share your contact

574
00:25:54,299 --> 00:25:56,820
details probably yeah all right thank

575
00:25:56,820 --> 00:26:02,520
you very much Aiden and uh the Bae gangs

576
00:26:02,520 --> 00:26:05,179
thank you guys

