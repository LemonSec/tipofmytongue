1
00:00:00,979 --> 00:00:03,179
hi everyone

2
00:00:03,179 --> 00:00:06,540
thanks for inviting me I am happy to be

3
00:00:06,540 --> 00:00:07,620
here

4
00:00:07,620 --> 00:00:10,860
today I'll show you how malware can

5
00:00:10,860 --> 00:00:14,880
bypass can disable Microsoft Defender by

6
00:00:14,880 --> 00:00:18,240
abusing system mechanisms and how to

7
00:00:18,240 --> 00:00:20,580
avoid this kind of attacks

8
00:00:20,580 --> 00:00:24,000
I think that this topic is of crucial

9
00:00:24,000 --> 00:00:27,720
importance for all experts dealing with

10
00:00:27,720 --> 00:00:30,539
endpoint security and anti-viruses

11
00:00:30,539 --> 00:00:32,220
experts

12
00:00:32,220 --> 00:00:35,219
this work was done in collaboration with

13
00:00:35,219 --> 00:00:37,440
one of my students from National

14
00:00:37,440 --> 00:00:39,140
research nuclear University

15
00:00:39,140 --> 00:00:42,600
Dennis investigated attacks on Microsoft

16
00:00:42,600 --> 00:00:45,840
defender in his Bachelor thesis under my

17
00:00:45,840 --> 00:00:47,160
supervision

18
00:00:47,160 --> 00:00:49,860
I am eager I've been exploring OS

19
00:00:49,860 --> 00:00:53,340
security for more than 10 years I've

20
00:00:53,340 --> 00:00:55,320
been curious about discovering new

21
00:00:55,320 --> 00:00:57,780
attacks on Windows kernel and finding

22
00:00:57,780 --> 00:00:59,579
the ways to prevent them

23
00:00:59,579 --> 00:01:02,699
today I'll highlight that one of the

24
00:01:02,699 --> 00:01:05,519
recent malware Trends is to disable and

25
00:01:05,519 --> 00:01:08,220
Point Security Solutions I'll show you

26
00:01:08,220 --> 00:01:10,439
the analysis of attacks on Microsoft

27
00:01:10,439 --> 00:01:11,400
Defender

28
00:01:11,400 --> 00:01:14,159
will address the kernel attacks that can

29
00:01:14,159 --> 00:01:16,860
tamper with Security Solutions and I'll

30
00:01:16,860 --> 00:01:19,740
give you a new attack that can blind

31
00:01:19,740 --> 00:01:23,000
vast majority of antiviruses including

32
00:01:23,000 --> 00:01:25,439
Microsoft Defender

33
00:01:25,439 --> 00:01:28,320
finally I'll present you my memo Ranger

34
00:01:28,320 --> 00:01:32,040
the tool I designed and customized to

35
00:01:32,040 --> 00:01:35,840
protect Microsoft Defender

36
00:01:36,180 --> 00:01:39,299
after gaining an initial access cyber

37
00:01:39,299 --> 00:01:42,659
criminals always want to steal users

38
00:01:42,659 --> 00:01:46,380
data and perform lateral movement to

39
00:01:46,380 --> 00:01:48,720
install a back door and take the control

40
00:01:48,720 --> 00:01:52,560
for a long time to encrypt users files

41
00:01:52,560 --> 00:01:55,320
and demand a ransom payment

42
00:01:55,320 --> 00:01:57,899
to achieve these goals attackers can

43
00:01:57,899 --> 00:02:01,619
download and install the malware

44
00:02:01,619 --> 00:02:04,259
to avoid signature based detection on

45
00:02:04,259 --> 00:02:06,180
firewall stage attackers can use

46
00:02:06,180 --> 00:02:09,000
passwords protected archives

47
00:02:09,000 --> 00:02:12,599
attackers can extract the packed malware

48
00:02:12,599 --> 00:02:16,080
sample and launch malware to reach all

49
00:02:16,080 --> 00:02:18,000
the desired goals

50
00:02:18,000 --> 00:02:19,280
but

51
00:02:19,280 --> 00:02:22,379
antiviruses and Security Solutions can

52
00:02:22,379 --> 00:02:25,440
detect all these malware samples and

53
00:02:25,440 --> 00:02:27,980
remove them easily

54
00:02:27,980 --> 00:02:31,800
attackers are always up to disable or

55
00:02:31,800 --> 00:02:34,500
blind Security Solutions

56
00:02:34,500 --> 00:02:37,440
such attacks result in disabled Security

57
00:02:37,440 --> 00:02:41,340
Solutions and after that the malware can

58
00:02:41,340 --> 00:02:43,860
be installed without triggering any

59
00:02:43,860 --> 00:02:46,260
security reaction because the Security

60
00:02:46,260 --> 00:02:49,080
Solutions are disabled

61
00:02:49,080 --> 00:02:51,720
criminals are always looking for the

62
00:02:51,720 --> 00:02:55,220
ways to attack anti-viruses using both

63
00:02:55,220 --> 00:02:59,400
user mode techniques and kernel mode

64
00:02:59,400 --> 00:03:02,819
techniques this is a serious problem for

65
00:03:02,819 --> 00:03:05,879
Security Solutions and even for

66
00:03:05,879 --> 00:03:08,519
Microsoft Defender

67
00:03:08,519 --> 00:03:10,980
you know that Microsoft Defender is

68
00:03:10,980 --> 00:03:13,980
installed as a primary antivirus or more

69
00:03:13,980 --> 00:03:16,440
than half a billion devices

70
00:03:16,440 --> 00:03:18,620
the patent direct at Microsoft

71
00:03:18,620 --> 00:03:21,720
underlined that Microsoft Defender is

72
00:03:21,720 --> 00:03:26,040
facing a huge number of various attacks

73
00:03:26,040 --> 00:03:29,159
many Security Experts share their ideas

74
00:03:29,159 --> 00:03:33,060
about how to disable and bypass the

75
00:03:33,060 --> 00:03:34,739
Microsoft Defender

76
00:03:34,739 --> 00:03:37,860
they discussed code injection

77
00:03:37,860 --> 00:03:40,560
packing malware to bypass signature

78
00:03:40,560 --> 00:03:42,019
detection

79
00:03:42,019 --> 00:03:45,120
manipulation with exclusion path of

80
00:03:45,120 --> 00:03:48,060
Microsoft Defender abusing trusted

81
00:03:48,060 --> 00:03:51,060
installer to stop the Windows Defender

82
00:03:51,060 --> 00:03:52,560
service

83
00:03:52,560 --> 00:03:56,099
hackers leverage this technique

84
00:03:56,099 --> 00:03:59,879
these techniques in their malware

85
00:03:59,879 --> 00:04:03,120
here are the malware examples which are

86
00:04:03,120 --> 00:04:06,019
able to bypass Microsoft Defender

87
00:04:06,019 --> 00:04:08,640
Ragnarok ransomware that modifies

88
00:04:08,640 --> 00:04:11,580
registry that lower the bank in Trojan

89
00:04:11,580 --> 00:04:14,640
that uses Powershell scripting Kraken

90
00:04:14,640 --> 00:04:17,459
botnet that adds itself in the exclusion

91
00:04:17,459 --> 00:04:18,540
path

92
00:04:18,540 --> 00:04:21,180
various Mooring malware programs are

93
00:04:21,180 --> 00:04:25,080
attempting to disable Microsoft Defender

94
00:04:25,080 --> 00:04:28,380
Global cyber security Community widely

95
00:04:28,380 --> 00:04:30,240
discussed the attacks on Microsoft

96
00:04:30,240 --> 00:04:32,940
Defender here are some recent academic

97
00:04:32,940 --> 00:04:35,820
papers blogs and research talks that

98
00:04:35,820 --> 00:04:39,540
show how to bypass Microsoft Defender

99
00:04:39,540 --> 00:04:42,300
let me show you the current attack

100
00:04:42,300 --> 00:04:45,180
vectors on Microsoft Defender

101
00:04:45,180 --> 00:04:48,060
all attacks can be divided into two

102
00:04:48,060 --> 00:04:52,800
groups user mode and kernel mode attacks

103
00:04:52,800 --> 00:04:55,979
user mode attacks Target mostly user

104
00:04:55,979 --> 00:04:58,139
space components while kernel mode

105
00:04:58,139 --> 00:05:00,660
attacks can tamper with kernel mode

106
00:05:00,660 --> 00:05:03,780
Parts regarding user mode vectors

107
00:05:03,780 --> 00:05:06,600
attackers can change the configurations

108
00:05:06,600 --> 00:05:10,100
of Microsoft Defender and even terminate

109
00:05:10,100 --> 00:05:14,040
its process attackers can implant the

110
00:05:14,040 --> 00:05:16,979
code into the white listed processes for

111
00:05:16,979 --> 00:05:20,040
example to access internet without any

112
00:05:20,040 --> 00:05:21,479
obstacles

113
00:05:21,479 --> 00:05:24,419
attackers can confuse Microsoft Defender

114
00:05:24,419 --> 00:05:28,080
by modifying the files content on the

115
00:05:28,080 --> 00:05:31,500
disk after the image has been mapped

116
00:05:31,500 --> 00:05:33,900
attackers can use various techniques to

117
00:05:33,900 --> 00:05:36,960
bypass file scanning engine of Microsoft

118
00:05:36,960 --> 00:05:40,680
Defender such as packing and obfuscation

119
00:05:40,680 --> 00:05:43,039
attackers can manipulate with

120
00:05:43,039 --> 00:05:45,960
antisymbolic links which pushes

121
00:05:45,960 --> 00:05:48,539
Microsoft Defender to follow the wrong

122
00:05:48,539 --> 00:05:49,919
path

123
00:05:49,919 --> 00:05:53,580
attackers can bypass kernel callbacks to

124
00:05:53,580 --> 00:05:56,340
spoof the process name so that Microsoft

125
00:05:56,340 --> 00:06:00,780
Defender will receive a fake app name

126
00:06:00,780 --> 00:06:04,639
attackers can send books can isolate

127
00:06:04,639 --> 00:06:07,740
Microsoft Defender so that it cannot

128
00:06:07,740 --> 00:06:10,380
access any file or process

129
00:06:10,380 --> 00:06:12,960
this attack was published just a couple

130
00:06:12,960 --> 00:06:14,820
months ago

131
00:06:14,820 --> 00:06:17,400
but this attack can be blocked by

132
00:06:17,400 --> 00:06:21,960
Windows feature named trust label

133
00:06:21,960 --> 00:06:25,259
my student Dennis has independently

134
00:06:25,259 --> 00:06:27,720
discovered the kernel attack that

135
00:06:27,720 --> 00:06:30,600
produced the same result and cannot be

136
00:06:30,600 --> 00:06:33,600
blocked by trust labels

137
00:06:33,600 --> 00:06:36,780
okay one more kernel attack can blind

138
00:06:36,780 --> 00:06:39,660
Microsoft defended by attacking event

139
00:06:39,660 --> 00:06:41,580
Racing for Windows

140
00:06:41,580 --> 00:06:43,440
etw

141
00:06:43,440 --> 00:06:46,319
attackers can disable protection process

142
00:06:46,319 --> 00:06:49,680
light PPL to terminate Microsoft

143
00:06:49,680 --> 00:06:50,940
Defender

144
00:06:50,940 --> 00:06:53,520
attackless can blind Security Solutions

145
00:06:53,520 --> 00:06:57,120
by removing kernel callbacks

146
00:06:57,120 --> 00:06:59,940
attackers can terminate the Microsoft

147
00:06:59,940 --> 00:07:02,039
Defender process by calling the

148
00:07:02,039 --> 00:07:06,060
termination routine from a kernel driver

149
00:07:06,060 --> 00:07:08,699
to show the details of the discovered

150
00:07:08,699 --> 00:07:11,460
attack let me highlight some recent

151
00:07:11,460 --> 00:07:16,099
Trends in driver-based attacks

152
00:07:18,960 --> 00:07:22,020
using the first technique hackers can

153
00:07:22,020 --> 00:07:26,340
install any signed vulnerable driver and

154
00:07:26,340 --> 00:07:30,180
exploit its bugs to access kernel

155
00:07:30,180 --> 00:07:34,080
researchers from rapid7 showed about 30

156
00:07:34,080 --> 00:07:37,199
malware examples that exploit various

157
00:07:37,199 --> 00:07:39,180
legitimate drivers

158
00:07:39,180 --> 00:07:42,599
attackers can also use leaked digital

159
00:07:42,599 --> 00:07:45,180
certificates to sign their malware

160
00:07:45,180 --> 00:07:49,259
drivers let's look at some cases

161
00:07:49,259 --> 00:07:52,139
the notorious hackers group targeted any

162
00:07:52,139 --> 00:07:55,800
video to steal confidential information

163
00:07:55,800 --> 00:07:58,800
the data lake has been confirmed and the

164
00:07:58,800 --> 00:08:01,139
stolen digital certificates have already

165
00:08:01,139 --> 00:08:04,500
been used to sign malware

166
00:08:04,500 --> 00:08:07,500
hackers can easily buy League

167
00:08:07,500 --> 00:08:11,460
certificates using dark web Market

168
00:08:11,460 --> 00:08:14,960
now I want to raise concern about

169
00:08:14,960 --> 00:08:18,720
Windows Hardware certification program

170
00:08:18,720 --> 00:08:21,060
you know that developers can submit

171
00:08:21,060 --> 00:08:22,979
their drivers to the windows Hardware

172
00:08:22,979 --> 00:08:26,160
quality Labs that checks whether this

173
00:08:26,160 --> 00:08:28,139
driver is compatible

174
00:08:28,139 --> 00:08:31,139
is the drive a passive check it will be

175
00:08:31,139 --> 00:08:34,380
signed using a special digital signature

176
00:08:34,380 --> 00:08:38,120
but Microsoft has accidentally signed

177
00:08:38,120 --> 00:08:41,700
malware drivers such as net filter

178
00:08:41,700 --> 00:08:46,800
driver and 5 Series driver both of them

179
00:08:46,800 --> 00:08:49,500
a malware

180
00:08:49,500 --> 00:08:52,800
another big trend is malware implants

181
00:08:52,800 --> 00:08:55,860
working on firmware level

182
00:08:55,860 --> 00:08:59,880
such bugs in ufi firmware can impact

183
00:08:59,880 --> 00:09:02,760
millions of devices

184
00:09:02,760 --> 00:09:06,000
we can conclude that driver-based

185
00:09:06,000 --> 00:09:09,360
attacks are still very important

186
00:09:09,360 --> 00:09:13,680
let me introduce Microsoft Defender

187
00:09:13,680 --> 00:09:17,100
Microsoft Defender has about 20 years

188
00:09:17,100 --> 00:09:20,220
old history releasing as a free

189
00:09:20,220 --> 00:09:23,640
anti-spyware program and nowadays it is

190
00:09:23,640 --> 00:09:25,740
a lead in the endpoint protection

191
00:09:25,740 --> 00:09:27,540
platforms

192
00:09:27,540 --> 00:09:30,180
let me uncover Microsoft Defender

193
00:09:30,180 --> 00:09:33,480
components Microsoft Defender includes

194
00:09:33,480 --> 00:09:36,180
user mode applications such as processes

195
00:09:36,180 --> 00:09:39,660
and services and kernel mode drivers

196
00:09:39,660 --> 00:09:43,500
all in all there are about 10 apps and 6

197
00:09:43,500 --> 00:09:45,120
drivers

198
00:09:45,120 --> 00:09:48,540
in this research we analyze Microsoft

199
00:09:48,540 --> 00:09:52,320
malware protection engine process Ms MP

200
00:09:52,320 --> 00:09:55,920
Eng and Microsoft Defender file filter

201
00:09:55,920 --> 00:09:57,600
driver

202
00:09:57,600 --> 00:10:00,600
the process is just a normal Windows app

203
00:10:00,600 --> 00:10:04,860
that can detect the malware on the disk

204
00:10:04,860 --> 00:10:07,500
and in the memory

205
00:10:07,500 --> 00:10:11,899
one of its dll modulus named MP engine

206
00:10:11,899 --> 00:10:15,600
dot dll implements the signature based

207
00:10:15,600 --> 00:10:19,019
detection it is the brain of antiviruses

208
00:10:19,019 --> 00:10:22,620
engine that decides where the input is

209
00:10:22,620 --> 00:10:24,839
malicious or not

210
00:10:24,839 --> 00:10:28,019
an idea of the attack is to block the

211
00:10:28,019 --> 00:10:31,200
brain from receiving input data

212
00:10:31,200 --> 00:10:33,540
I'll show you how Windows built-in

213
00:10:33,540 --> 00:10:36,060
mechanism can be used to disable

214
00:10:36,060 --> 00:10:38,040
Microsoft Defender

215
00:10:38,040 --> 00:10:41,700
let's look at the mandatory Integrity

216
00:10:41,700 --> 00:10:45,060
control mic

217
00:10:47,640 --> 00:10:50,640
each time any app for example Microsoft

218
00:10:50,640 --> 00:10:53,760
Defender tries to access the object for

219
00:10:53,760 --> 00:10:56,040
example open a file the security

220
00:10:56,040 --> 00:10:59,040
reference monitor checks whether this

221
00:10:59,040 --> 00:11:01,079
access is allowed

222
00:11:01,079 --> 00:11:03,240
it was originally based on

223
00:11:03,240 --> 00:11:05,540
discretionally access control

224
00:11:05,540 --> 00:11:07,160
DAC

225
00:11:07,160 --> 00:11:11,279
mandatory Integrity control mic has been

226
00:11:11,279 --> 00:11:15,000
added in addition to DAC

227
00:11:15,000 --> 00:11:19,140
emic was designed to isolate and trusted

228
00:11:19,140 --> 00:11:21,480
apps from the rest of the OS

229
00:11:21,480 --> 00:11:26,360
now we have two different access checks

230
00:11:26,360 --> 00:11:30,839
DAC checks privileges using access token

231
00:11:30,839 --> 00:11:35,640
and security descriptor while mic reads

232
00:11:35,640 --> 00:11:39,000
and Compares Integrity level from access

233
00:11:39,000 --> 00:11:42,899
token and integrity level from object

234
00:11:42,899 --> 00:11:45,180
descriptor

235
00:11:45,180 --> 00:11:47,820
Windows first checks and access request

236
00:11:47,820 --> 00:11:50,459
against mic

237
00:11:50,459 --> 00:11:56,160
and if it is passes then it checks DAC

238
00:11:56,160 --> 00:11:59,940
to allow access it has passed both

239
00:11:59,940 --> 00:12:01,680
checks

240
00:12:01,680 --> 00:12:05,940
but if myc check didn't pass

241
00:12:05,940 --> 00:12:08,220
the access will be blocked

242
00:12:08,220 --> 00:12:11,399
attackers can patch Integrity level for

243
00:12:11,399 --> 00:12:14,519
the defender so that any Defenders

244
00:12:14,519 --> 00:12:17,220
access attempt will be blocked

245
00:12:17,220 --> 00:12:19,860
to demonstrate this attack let me first

246
00:12:19,860 --> 00:12:24,560
focus on Integrity levels

247
00:12:26,519 --> 00:12:29,040
Windows supports several Integrity

248
00:12:29,040 --> 00:12:32,839
levels to limit access to the resource

249
00:12:32,839 --> 00:12:35,820
untrusted and low Integrity levels are

250
00:12:35,820 --> 00:12:39,360
usually used by browsers to isolate web

251
00:12:39,360 --> 00:12:41,519
threads from the OS

252
00:12:41,519 --> 00:12:45,240
most apps that we use are running with

253
00:12:45,240 --> 00:12:48,240
medium Integrity level such as Explorer

254
00:12:48,240 --> 00:12:52,560
notepad office and Etc

255
00:12:52,560 --> 00:12:55,620
high integrity level is assigned with

256
00:12:55,620 --> 00:12:58,500
apps launched by user account control

257
00:12:58,500 --> 00:13:01,260
UAC

258
00:13:01,260 --> 00:13:03,959
system Integrity level is used by System

259
00:13:03,959 --> 00:13:07,500
level apps such as Microsoft Defender to

260
00:13:07,500 --> 00:13:10,380
protect them from other apps

261
00:13:10,380 --> 00:13:13,200
here is an example of Integrity levels

262
00:13:13,200 --> 00:13:16,019
for the running processes and files on

263
00:13:16,019 --> 00:13:17,700
the disk

264
00:13:17,700 --> 00:13:21,120
mic implements the Bell lapagel Access

265
00:13:21,120 --> 00:13:23,700
Control model you know it

266
00:13:23,700 --> 00:13:26,880
for example an app tries to get right

267
00:13:26,880 --> 00:13:28,800
access to the file

268
00:13:28,800 --> 00:13:31,139
according to the Bell La Petula model

269
00:13:31,139 --> 00:13:34,440
access check Compares Integrity levels

270
00:13:34,440 --> 00:13:38,279
of app and the file the access will be

271
00:13:38,279 --> 00:13:41,339
granted if the apps Integrity level is

272
00:13:41,339 --> 00:13:42,720
equal to

273
00:13:42,720 --> 00:13:46,860
or higher than the files Integrity level

274
00:13:46,860 --> 00:13:50,040
therefore apps with low Integrity levels

275
00:13:50,040 --> 00:13:54,300
cannot override the most OS objects

276
00:13:54,300 --> 00:13:57,300
let me show you how Integrity levels are

277
00:13:57,300 --> 00:14:00,859
implemented in Windows

278
00:14:02,880 --> 00:14:06,240
for each app Windows allocates a

279
00:14:06,240 --> 00:14:08,519
separate data structure in kernel memory

280
00:14:08,519 --> 00:14:12,300
named e-process

281
00:14:13,200 --> 00:14:15,920
this structure contains process name

282
00:14:15,920 --> 00:14:20,579
process ID and other process attributes

283
00:14:20,579 --> 00:14:23,399
this structure points to the Token

284
00:14:23,399 --> 00:14:25,980
structure that includes all information

285
00:14:25,980 --> 00:14:29,399
about the process privileges the set of

286
00:14:29,399 --> 00:14:31,980
process privileges is stored using

287
00:14:31,980 --> 00:14:36,120
security identifies as IDs

288
00:14:36,120 --> 00:14:39,480
to support mic the following two new

289
00:14:39,480 --> 00:14:41,639
Fields have been added

290
00:14:41,639 --> 00:14:44,459
Integrity level index and the

291
00:14:44,459 --> 00:14:46,740
corresponding seed and attribute

292
00:14:46,740 --> 00:14:48,360
structure

293
00:14:48,360 --> 00:14:51,600
Integrity level index is just an index

294
00:14:51,600 --> 00:14:54,600
into the array pointed by the user and

295
00:14:54,600 --> 00:14:56,579
groups

296
00:14:56,579 --> 00:14:59,399
this entry points to one of the

297
00:14:59,399 --> 00:15:02,699
Integrity level seed for example an

298
00:15:02,699 --> 00:15:06,120
example of Sids are here

299
00:15:06,120 --> 00:15:09,660
let me show you how Windows gets these

300
00:15:09,660 --> 00:15:12,500
Integrity levels

301
00:15:14,220 --> 00:15:17,220
an app can get or read the Integrity

302
00:15:17,220 --> 00:15:20,579
level or the Target app by calling get

303
00:15:20,579 --> 00:15:23,940
token information with the parameter

304
00:15:23,940 --> 00:15:26,720
the control goes to the NT query token

305
00:15:26,720 --> 00:15:30,000
into query information token function

306
00:15:30,000 --> 00:15:33,779
from ntdll and then to the kernel

307
00:15:33,779 --> 00:15:36,899
we have a list of function calls and

308
00:15:36,899 --> 00:15:40,459
finally the control goes to the function

309
00:15:40,459 --> 00:15:45,660
Seb locate token token integrity

310
00:15:45,660 --> 00:15:49,440
let's see inside it

311
00:15:49,440 --> 00:15:51,720
the function receives the pointer to the

312
00:15:51,720 --> 00:15:54,360
Token structure and it Returns the

313
00:15:54,360 --> 00:15:58,380
pointer to the seed and attributes the

314
00:15:58,380 --> 00:16:02,040
function reads the Integrity level value

315
00:16:02,040 --> 00:16:06,420
if it is -1 the function returns 0

316
00:16:06,420 --> 00:16:09,660
or else the function Returns the address

317
00:16:09,660 --> 00:16:12,300
or the structure that points to the

318
00:16:12,300 --> 00:16:15,899
Integrity level as ID

319
00:16:15,899 --> 00:16:18,860
the return value is used by the function

320
00:16:18,860 --> 00:16:24,360
SCP copy token Integrity let's see how

321
00:16:24,360 --> 00:16:26,639
the function receives the pointer to the

322
00:16:26,639 --> 00:16:29,339
Token structure and it fills the output

323
00:16:29,339 --> 00:16:30,600
pointer

324
00:16:30,600 --> 00:16:33,300
the function Source calls sap locate

325
00:16:33,300 --> 00:16:36,540
Integrity to get pointer to the seed and

326
00:16:36,540 --> 00:16:39,060
attribute structure

327
00:16:39,060 --> 00:16:42,060
if return value is non-zero the

328
00:16:42,060 --> 00:16:45,000
corresponding data are copied to the

329
00:16:45,000 --> 00:16:46,920
output

330
00:16:46,920 --> 00:16:49,079
or else

331
00:16:49,079 --> 00:16:53,940
for the zero value the untrusted Sid and

332
00:16:53,940 --> 00:16:57,959
its attributes are copied to the output

333
00:16:57,959 --> 00:17:01,680
it means that by setting -1 to the

334
00:17:01,680 --> 00:17:03,799
Integrity level index

335
00:17:03,799 --> 00:17:07,859
attackers can mark the target process as

336
00:17:07,859 --> 00:17:10,199
an untrusted

337
00:17:10,199 --> 00:17:14,780
let's see how it can happen

338
00:17:16,020 --> 00:17:18,959
at first attackers can load kernel

339
00:17:18,959 --> 00:17:20,579
driver

340
00:17:20,579 --> 00:17:23,900
to overwrite the Integrity level index

341
00:17:23,900 --> 00:17:27,059
and after that they can extract and

342
00:17:27,059 --> 00:17:29,700
launch a malware sample

343
00:17:29,700 --> 00:17:32,880
we will see if Defender will be able to

344
00:17:32,880 --> 00:17:35,640
detect malware files

345
00:17:35,640 --> 00:17:37,980
and malware processes

346
00:17:37,980 --> 00:17:41,100
malware process a few words about the

347
00:17:41,100 --> 00:17:44,880
infection part the mimikas app will be

348
00:17:44,880 --> 00:17:48,059
used as a malware we initially zipped

349
00:17:48,059 --> 00:17:51,600
mimikas with password Here is the batch

350
00:17:51,600 --> 00:17:54,120
script that extracts the mimicas from

351
00:17:54,120 --> 00:17:57,660
the archive file and launches and launch

352
00:17:57,660 --> 00:17:58,620
it

353
00:17:58,620 --> 00:18:03,320
let's see how it can happen

354
00:18:06,930 --> 00:18:11,240
[Music]

355
00:18:11,240 --> 00:18:14,580
let's check the windows version we have

356
00:18:14,580 --> 00:18:17,240
the newest one

357
00:18:18,000 --> 00:18:20,760
checking the Integrity level for

358
00:18:20,760 --> 00:18:25,020
Microsoft Defender it is system level

359
00:18:25,020 --> 00:18:28,980
let's run process monitor to track files

360
00:18:28,980 --> 00:18:30,960
activity

361
00:18:30,960 --> 00:18:34,380
apply a filter to monitor only malware

362
00:18:34,380 --> 00:18:36,799
activity

363
00:18:39,539 --> 00:18:43,320
run CMD with admin privilege

364
00:18:43,320 --> 00:18:46,380
run a script that extracts the archive

365
00:18:46,380 --> 00:18:48,780
and launches mimikats

366
00:18:48,780 --> 00:18:51,600
attackers failed to run mimikas

367
00:18:51,600 --> 00:18:56,899
Microsoft Defender detects mlware sample

368
00:18:57,480 --> 00:19:01,740
and also Microsoft Defender removes ml

369
00:19:01,740 --> 00:19:03,600
with sample

370
00:19:03,600 --> 00:19:05,880
let's double check that the file is

371
00:19:05,880 --> 00:19:07,020
removed

372
00:19:07,020 --> 00:19:09,240
yes it is

373
00:19:09,240 --> 00:19:14,039
let's see the logged file system events

374
00:19:14,039 --> 00:19:16,140
move to the end

375
00:19:16,140 --> 00:19:19,260
Microsoft Defender deletes mimikas file

376
00:19:19,260 --> 00:19:22,500
by changing the file information

377
00:19:22,500 --> 00:19:25,919
after closing the file handles the file

378
00:19:25,919 --> 00:19:29,000
will be removed

379
00:19:30,120 --> 00:19:32,280
we've just proved that Microsoft

380
00:19:32,280 --> 00:19:35,539
Defender is active

381
00:19:37,080 --> 00:19:40,020
while launching the dbg view to see the

382
00:19:40,020 --> 00:19:42,059
kernel output

383
00:19:42,059 --> 00:19:44,820
the attacker is launching the app which

384
00:19:44,820 --> 00:19:47,640
lower the driver the attacker patches

385
00:19:47,640 --> 00:19:51,299
Integrity level index we can see that

386
00:19:51,299 --> 00:19:54,960
Integrity level index has been modified

387
00:19:54,960 --> 00:19:58,140
let's extract the archive and run

388
00:19:58,140 --> 00:20:02,100
mimikas again we can see that now the

389
00:20:02,100 --> 00:20:04,200
situation is different Microsoft

390
00:20:04,200 --> 00:20:07,500
Defender can still detect malware but it

391
00:20:07,500 --> 00:20:10,760
can't remove the file

392
00:20:13,260 --> 00:20:16,200
let's run mimikats

393
00:20:16,200 --> 00:20:20,580
we can see that OS cannot run mimikas

394
00:20:20,580 --> 00:20:23,760
let's see the logged file system events

395
00:20:23,760 --> 00:20:27,299
we move to the end and see that OS

396
00:20:27,299 --> 00:20:30,900
returns 906 status

397
00:20:30,900 --> 00:20:33,059
let's clear the log and relaunch

398
00:20:33,059 --> 00:20:36,059
mimikats

399
00:20:36,059 --> 00:20:40,140
CMD fails to run mimikats and the OS

400
00:20:40,140 --> 00:20:44,299
returns 906 status

401
00:20:47,940 --> 00:20:52,740
each time a takers run mimic cuts the OS

402
00:20:52,740 --> 00:20:56,820
returns 906 status

403
00:20:56,820 --> 00:20:58,500
let me conclude

404
00:20:58,500 --> 00:21:01,919
patching Integrity level index helps to

405
00:21:01,919 --> 00:21:05,400
prevent removing mimicas file but it is

406
00:21:05,400 --> 00:21:08,580
not enough to allow launching mimikas

407
00:21:08,580 --> 00:21:11,000
process

408
00:21:14,520 --> 00:21:17,520
Microsoft Defender fails to remove the

409
00:21:17,520 --> 00:21:20,880
file but it is still able to block the

410
00:21:20,880 --> 00:21:22,860
running processes

411
00:21:22,860 --> 00:21:25,559
we've just seen some Microsoft Defender

412
00:21:25,559 --> 00:21:28,799
internals it uses pending delicious

413
00:21:28,799 --> 00:21:32,220
state to remove the malware file also

414
00:21:32,220 --> 00:21:35,940
we've been seen a new status that blocks

415
00:21:35,940 --> 00:21:39,919
creating a malware process

416
00:21:40,140 --> 00:21:43,380
let me show you the driver that returns

417
00:21:43,380 --> 00:21:46,020
this status

418
00:21:46,020 --> 00:21:48,720
my research has revealed that this

419
00:21:48,720 --> 00:21:51,539
status is returned by Microsoft Defender

420
00:21:51,539 --> 00:21:54,659
file filter driver

421
00:21:54,659 --> 00:21:58,200
this driver registers a mini filter to

422
00:21:58,200 --> 00:22:01,640
monitor file operations using pre and

423
00:22:01,640 --> 00:22:04,440
post-processing callbacks I have

424
00:22:04,440 --> 00:22:06,840
discovered that post-create callback

425
00:22:06,840 --> 00:22:10,200
function Returns the status for the

426
00:22:10,200 --> 00:22:11,760
malware apps

427
00:22:11,760 --> 00:22:14,940
it means that Microsoft Defender can

428
00:22:14,940 --> 00:22:18,480
still detect malware in apps memory

429
00:22:18,480 --> 00:22:21,440
but how

430
00:22:23,460 --> 00:22:26,700
we know that malware detection engine is

431
00:22:26,700 --> 00:22:28,559
located in the Microsoft Defender

432
00:22:28,559 --> 00:22:32,220
processes process each time the defender

433
00:22:32,220 --> 00:22:34,440
process gains the access to the running

434
00:22:34,440 --> 00:22:37,740
process Windows checks where the

435
00:22:37,740 --> 00:22:41,520
Privileges are enough using access token

436
00:22:41,520 --> 00:22:43,799
and security descriptor

437
00:22:43,799 --> 00:22:46,320
however

438
00:22:46,320 --> 00:22:48,960
defend the process has debug privilege

439
00:22:48,960 --> 00:22:51,960
as we know for processes with debug

440
00:22:51,960 --> 00:22:53,100
privileges

441
00:22:53,100 --> 00:22:56,960
security reference monitor always allows

442
00:22:56,960 --> 00:23:01,260
full access without any checks

443
00:23:01,260 --> 00:23:04,980
attackers can revoke debug approach from

444
00:23:04,980 --> 00:23:07,860
Microsoft Defender to restrict these

445
00:23:07,860 --> 00:23:09,419
access

446
00:23:09,419 --> 00:23:12,659
Dimension privilege is stored in token

447
00:23:12,659 --> 00:23:16,080
structure in memory and it can be

448
00:23:16,080 --> 00:23:19,559
patched by attackers let's see how it

449
00:23:19,559 --> 00:23:21,980
can happen

450
00:23:23,100 --> 00:23:26,460
at first attackers loads the kernel

451
00:23:26,460 --> 00:23:29,940
driver to perform both actions to

452
00:23:29,940 --> 00:23:33,000
override the Integrity level index and

453
00:23:33,000 --> 00:23:35,220
revoke process privilege

454
00:23:35,220 --> 00:23:37,919
after that they can extract and launch

455
00:23:37,919 --> 00:23:41,700
MLS sample let's see where these

456
00:23:41,700 --> 00:23:44,580
manipulations will be enough to disable

457
00:23:44,580 --> 00:23:47,780
Microsoft Defender

458
00:23:51,770 --> 00:23:56,360
[Music]

459
00:23:56,360 --> 00:23:59,340
let's check the windows version

460
00:23:59,340 --> 00:24:03,000
we have the newest one

461
00:24:03,000 --> 00:24:05,340
checking the Integrity level for

462
00:24:05,340 --> 00:24:10,220
Microsoft Defender it is system level

463
00:24:10,799 --> 00:24:14,460
let's run process monitor to track files

464
00:24:14,460 --> 00:24:16,620
activity

465
00:24:16,620 --> 00:24:19,320
apply a filter to monitor only a menu

466
00:24:19,320 --> 00:24:21,980
activity

467
00:24:24,840 --> 00:24:28,620
run CMD with admin privilege

468
00:24:28,620 --> 00:24:31,559
run a script that extracts the archive

469
00:24:31,559 --> 00:24:35,159
and launches mimikats attackers failed

470
00:24:35,159 --> 00:24:37,620
to run mimikats

471
00:24:37,620 --> 00:24:41,340
Microsoft Defender detects MLS sample

472
00:24:41,340 --> 00:24:44,659
and also Microsoft Defender

473
00:24:44,659 --> 00:24:48,659
removes the malware file

474
00:24:48,659 --> 00:24:50,940
let's double check that the file is

475
00:24:50,940 --> 00:24:52,500
removed

476
00:24:52,500 --> 00:24:54,900
yes it is

477
00:24:54,900 --> 00:24:58,320
let's see the locked file system events

478
00:24:58,320 --> 00:25:00,299
move to the end

479
00:25:00,299 --> 00:25:05,780
Microsoft Defender deletes mimikas file

480
00:25:07,799 --> 00:25:10,200
we've just proved that Microsoft

481
00:25:10,200 --> 00:25:12,000
Defender is active

482
00:25:12,000 --> 00:25:14,520
we are launching dbg view to see the

483
00:25:14,520 --> 00:25:17,460
kernel output the attacker is launching

484
00:25:17,460 --> 00:25:19,740
the app which slows the driver

485
00:25:19,740 --> 00:25:21,960
the attacker patches Integrity level

486
00:25:21,960 --> 00:25:27,260
index and revokes a process privilege

487
00:25:29,940 --> 00:25:33,059
we can see that Integrity level index

488
00:25:33,059 --> 00:25:35,940
has been modified here are the

489
00:25:35,940 --> 00:25:38,159
Privileges before

490
00:25:38,159 --> 00:25:41,640
and after patching the debug privilege

491
00:25:41,640 --> 00:25:44,539
has been cleared

492
00:25:45,120 --> 00:25:47,039
checking the Integrity level for

493
00:25:47,039 --> 00:25:50,000
Microsoft Defender

494
00:25:50,460 --> 00:25:53,720
it is untrusted now

495
00:25:54,240 --> 00:25:56,159
checking the Privileges

496
00:25:56,159 --> 00:25:59,700
the debug privilege has been disabled

497
00:25:59,700 --> 00:26:02,760
less extract the archive and run mimikas

498
00:26:02,760 --> 00:26:06,600
again mimikas has been sorted let's use

499
00:26:06,600 --> 00:26:09,059
these commands to extract passwords

500
00:26:09,059 --> 00:26:10,260
hashes

501
00:26:10,260 --> 00:26:12,720
the hashes have been dumped

502
00:26:12,720 --> 00:26:16,080
let's see the locked file system events

503
00:26:16,080 --> 00:26:18,360
move to the end

504
00:26:18,360 --> 00:26:21,240
we can see that now mimikas has been

505
00:26:21,240 --> 00:26:23,100
loaded

506
00:26:23,100 --> 00:26:26,520
let's check Windows security settings

507
00:26:26,520 --> 00:26:29,940
we open virus and thread protection

508
00:26:29,940 --> 00:26:33,299
allow thread there are no allow threads

509
00:26:33,299 --> 00:26:36,740
let's check the updates

510
00:26:37,919 --> 00:26:41,039
Microsoft cannot be updated

511
00:26:41,039 --> 00:26:43,799
let's wait for patch guard reaction

512
00:26:43,799 --> 00:26:46,919
which was designed to prevent attacks on

513
00:26:46,919 --> 00:26:49,820
Windows kernel

514
00:26:59,460 --> 00:27:02,039
10 hours have passed nothing has

515
00:27:02,039 --> 00:27:06,440
happened the OS is in danger

516
00:27:12,720 --> 00:27:16,140
we can see that Microsoft Defender has

517
00:27:16,140 --> 00:27:18,480
been completely disabled without

518
00:27:18,480 --> 00:27:23,240
triggering any page guard reaction

519
00:27:24,840 --> 00:27:28,380
this attack results in sandboxing or

520
00:27:28,380 --> 00:27:31,260
isolating Microsoft Defender from the

521
00:27:31,260 --> 00:27:32,700
rest of the OS

522
00:27:32,700 --> 00:27:36,240
the key point is that we don't terminate

523
00:27:36,240 --> 00:27:38,039
Microsoft Defender

524
00:27:38,039 --> 00:27:40,980
it is still running but it cannot detect

525
00:27:40,980 --> 00:27:44,159
any malware on the disk and in the

526
00:27:44,159 --> 00:27:45,240
memory

527
00:27:45,240 --> 00:27:48,299
micro Defender has been disabled what

528
00:27:48,299 --> 00:27:52,799
about other popular antiviruses

529
00:27:55,620 --> 00:27:58,020
here are the results of checking the

530
00:27:58,020 --> 00:28:01,140
given attack against top Windows

531
00:28:01,140 --> 00:28:04,740
antiviruses we can see that vast

532
00:28:04,740 --> 00:28:07,140
majority of antiviruses has been

533
00:28:07,140 --> 00:28:10,020
successfully disabled

534
00:28:10,020 --> 00:28:13,559
this attack is very dangerous

535
00:28:13,559 --> 00:28:15,960
let me show you how this attack can be

536
00:28:15,960 --> 00:28:18,380
blocked

537
00:28:19,799 --> 00:28:24,840
in windows in Windows kernel drivers

538
00:28:24,840 --> 00:28:27,779
share the same memory space with the OS

539
00:28:27,779 --> 00:28:29,100
kernel

540
00:28:29,100 --> 00:28:32,520
there is no built-in mechanism to

541
00:28:32,520 --> 00:28:35,100
restrict illegal X attempts to the

542
00:28:35,100 --> 00:28:37,020
kernel memory

543
00:28:37,020 --> 00:28:40,440
I designed memo range to solve this

544
00:28:40,440 --> 00:28:43,140
problem by allocating a separate kernel

545
00:28:43,140 --> 00:28:48,059
Enclave for each newly loaded driver

546
00:28:48,059 --> 00:28:51,380
as a result drivers are running inside

547
00:28:51,380 --> 00:28:55,140
separate enclaves with different memory

548
00:28:55,140 --> 00:28:57,360
access permissions

549
00:28:57,360 --> 00:29:00,600
this scheme helps to block illegal X

550
00:29:00,600 --> 00:29:03,120
attempts with affordable performance

551
00:29:03,120 --> 00:29:04,919
degradation

552
00:29:04,919 --> 00:29:08,039
originally I designed memo range as a

553
00:29:08,039 --> 00:29:11,520
tool as a framework to monitor access to

554
00:29:11,520 --> 00:29:15,480
the kernel data now a memo Ranger can

555
00:29:15,480 --> 00:29:18,539
hook kernel functions it can locate

556
00:29:18,539 --> 00:29:21,360
various sensitive data in kernel it can

557
00:29:21,360 --> 00:29:24,000
be easily customized

558
00:29:24,000 --> 00:29:26,760
let's have a look

559
00:29:26,760 --> 00:29:29,399
here are the examples of memory Ranger

560
00:29:29,399 --> 00:29:32,700
customizations that block various new

561
00:29:32,700 --> 00:29:35,039
attacks on Windows kernel

562
00:29:35,039 --> 00:29:38,159
in this research memorandum has been

563
00:29:38,159 --> 00:29:42,419
customized in the following way

564
00:29:42,419 --> 00:29:44,760
without memory range attackers driver

565
00:29:44,760 --> 00:29:48,059
can get access to the Token structure

566
00:29:48,059 --> 00:29:51,120
memoranger traps loading of attackers

567
00:29:51,120 --> 00:29:54,059
driver and moves it to the separate

568
00:29:54,059 --> 00:29:56,279
allocated Enclave

569
00:29:56,279 --> 00:29:58,919
in this Enclave the token structure

570
00:29:58,919 --> 00:30:01,020
cannot be accessed

571
00:30:01,020 --> 00:30:05,360
let's see how it can happen

572
00:30:08,690 --> 00:30:14,840
[Music]

573
00:30:14,840 --> 00:30:18,120
let's check the windows version we have

574
00:30:18,120 --> 00:30:20,279
the newest one

575
00:30:20,279 --> 00:30:22,860
we are launching dbg view to see the

576
00:30:22,860 --> 00:30:26,279
kernel output run memo range to protect

577
00:30:26,279 --> 00:30:29,179
kernel memory

578
00:30:30,720 --> 00:30:33,779
we can see that memo range is ready to

579
00:30:33,779 --> 00:30:37,220
protect token memory

580
00:30:37,559 --> 00:30:39,840
attackers are launching the app which

581
00:30:39,840 --> 00:30:41,520
lower the driver

582
00:30:41,520 --> 00:30:44,820
and look memor Ranger has moved the

583
00:30:44,820 --> 00:30:46,620
attacker's driver to the separate

584
00:30:46,620 --> 00:30:49,219
Enclave

585
00:30:50,340 --> 00:30:52,799
attackers are passing Integrity level

586
00:30:52,799 --> 00:30:55,380
index

587
00:30:55,380 --> 00:30:58,980
and Luke memoranger has blocked this

588
00:30:58,980 --> 00:31:02,039
illegal access so that attackers driver

589
00:31:02,039 --> 00:31:05,779
is fake no index

590
00:31:06,120 --> 00:31:10,699
attackers are evoking process privilege

591
00:31:12,419 --> 00:31:15,120
and look memo Ranger has blocked This

592
00:31:15,120 --> 00:31:16,980
legal X as well

593
00:31:16,980 --> 00:31:20,100
so that attackers driver reads fake null

594
00:31:20,100 --> 00:31:22,580
token

595
00:31:24,000 --> 00:31:27,539
around CMD with admin privilege run a

596
00:31:27,539 --> 00:31:30,179
script that extracts the archive and

597
00:31:30,179 --> 00:31:33,360
launches mimikats attackers failed to

598
00:31:33,360 --> 00:31:35,159
run mimikats

599
00:31:35,159 --> 00:31:40,340
Microsoft Defender detects MLS sample

600
00:31:41,399 --> 00:31:44,760
and also Microsoft Defender removes the

601
00:31:44,760 --> 00:31:47,340
malware file

602
00:31:47,340 --> 00:31:49,500
let's double check that the file is

603
00:31:49,500 --> 00:31:52,799
removed yes it is

604
00:31:52,799 --> 00:31:54,960
checking the Integrity level for

605
00:31:54,960 --> 00:31:56,640
Microsoft Defender

606
00:31:56,640 --> 00:31:59,039
it is still system level

607
00:31:59,039 --> 00:32:02,100
checking the Privileges

608
00:32:02,100 --> 00:32:06,600
the debug privilege is still enabled

609
00:32:06,600 --> 00:32:09,360
thanks to the memo range the windows

610
00:32:09,360 --> 00:32:11,700
Swiss and Microsoft Defender are

611
00:32:11,700 --> 00:32:12,630
protected

612
00:32:12,630 --> 00:32:18,840
[Music]

613
00:32:18,840 --> 00:32:22,080
let's discuss very briefly what we've

614
00:32:22,080 --> 00:32:22,980
seen

615
00:32:22,980 --> 00:32:26,039
without memory range attackers disable

616
00:32:26,039 --> 00:32:28,860
Microsoft Defender and install malware

617
00:32:28,860 --> 00:32:31,200
without any problem

618
00:32:31,200 --> 00:32:34,260
Microsoft Defender fails to remove the

619
00:32:34,260 --> 00:32:35,340
malware

620
00:32:35,340 --> 00:32:38,700
but with memory range the situation is

621
00:32:38,700 --> 00:32:39,659
different

622
00:32:39,659 --> 00:32:42,179
memory range our case the default

623
00:32:42,179 --> 00:32:45,360
Enclave for the OS kernel and all

624
00:32:45,360 --> 00:32:47,640
previously loaded drivers

625
00:32:47,640 --> 00:32:50,340
memoranger traps the loading of

626
00:32:50,340 --> 00:32:53,580
attackers driver and all case a separate

627
00:32:53,580 --> 00:32:56,880
memory Enclave for this driver

628
00:32:56,880 --> 00:33:01,140
in this Enclave memo Ranger restricts

629
00:33:01,140 --> 00:33:04,500
any axis attempt to the Token structure

630
00:33:04,500 --> 00:33:06,840
of Microsoft Defender

631
00:33:06,840 --> 00:33:10,559
as a result attackers failed to disable

632
00:33:10,559 --> 00:33:12,659
Microsoft Defender

633
00:33:12,659 --> 00:33:16,399
this is the way how memo range protects

634
00:33:16,399 --> 00:33:19,200
Microsoft Defender

635
00:33:19,200 --> 00:33:22,500
let me recap very briefly on what we

636
00:33:22,500 --> 00:33:24,600
have discussed so far

637
00:33:24,600 --> 00:33:27,539
first of all driver-based attacks are

638
00:33:27,539 --> 00:33:28,679
crucial

639
00:33:28,679 --> 00:33:32,039
Intruders uploading to bypass and Point

640
00:33:32,039 --> 00:33:34,740
Security Solutions and their target

641
00:33:34,740 --> 00:33:37,860
number one is Microsoft Defender

642
00:33:37,860 --> 00:33:41,519
attackers can apply mic and token

643
00:33:41,519 --> 00:33:44,940
privilege against Microsoft Defender to

644
00:33:44,940 --> 00:33:46,559
isolate it

645
00:33:46,559 --> 00:33:49,919
this is very serious attack because it

646
00:33:49,919 --> 00:33:53,039
blinds vast majority of antiviruses

647
00:33:53,039 --> 00:33:55,919
without triggering any page guard

648
00:33:55,919 --> 00:33:57,179
reaction

649
00:33:57,179 --> 00:34:00,600
I have presented my memo range that

650
00:34:00,600 --> 00:34:03,960
customized version can prevent this kind

651
00:34:03,960 --> 00:34:06,299
of attacks

652
00:34:06,299 --> 00:34:09,018
thank you

