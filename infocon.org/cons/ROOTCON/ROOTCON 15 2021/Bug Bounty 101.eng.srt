1
00:00:00,719 --> 00:00:02,960
good day to all of you and welcome to

2
00:00:02,960 --> 00:00:06,000
bug bounty 101 walking your first bug so

3
00:00:06,000 --> 00:00:08,160
basically in this talk i will introduce

4
00:00:08,160 --> 00:00:09,840
to you on how to spot common

5
00:00:09,840 --> 00:00:11,280
vulnerabilities

6
00:00:11,280 --> 00:00:13,360
in functionalities of the application

7
00:00:13,360 --> 00:00:15,120
also i will be providing on some

8
00:00:15,120 --> 00:00:18,960
pointers on how to create a good report

9
00:00:18,960 --> 00:00:20,800
okay let's move to the next slide my

10
00:00:20,800 --> 00:00:21,840
name is

11
00:00:21,840 --> 00:00:24,160
so who am i my name is snaps and i'm a

12
00:00:24,160 --> 00:00:26,320
root can goon currently i'm working as

13
00:00:26,320 --> 00:00:28,840
an application security engineer at bug

14
00:00:28,840 --> 00:00:30,480
crowd

15
00:00:30,480 --> 00:00:32,558
as an application security engineer we

16
00:00:32,558 --> 00:00:35,520
do try edge investigate and reproduce

17
00:00:35,520 --> 00:00:37,280
bug bounty reports

18
00:00:37,280 --> 00:00:41,120
from security researchers

19
00:00:41,120 --> 00:00:42,160
so

20
00:00:42,160 --> 00:00:45,760
bug bounty program is a deal offered by

21
00:00:45,760 --> 00:00:48,079
many websites organizations and software

22
00:00:48,079 --> 00:00:49,920
developers by which

23
00:00:49,920 --> 00:00:52,399
individuals can receive recognition and

24
00:00:52,399 --> 00:00:54,480
compensation for reporting bugs

25
00:00:54,480 --> 00:00:56,879
especially those pertaining to security

26
00:00:56,879 --> 00:00:59,760
exploits and vulnerabilities

27
00:00:59,760 --> 00:01:02,640
so bug bounty platforms are software

28
00:01:02,640 --> 00:01:06,720
used to deploy bug bounty programs

29
00:01:06,799 --> 00:01:08,960
so there are a lot of hovers nowadays

30
00:01:08,960 --> 00:01:12,000
that are interested in bug bounty

31
00:01:12,000 --> 00:01:14,159
probably because of the theme and the

32
00:01:14,159 --> 00:01:17,439
rewards so just imagine the rewards like

33
00:01:17,439 --> 00:01:19,759
thousands of dollars in just

34
00:01:19,759 --> 00:01:24,840
one critical vulnerability report

35
00:01:26,000 --> 00:01:28,479
so for beginners i'll be discussing some

36
00:01:28,479 --> 00:01:32,320
short introduction of http basic

37
00:01:32,320 --> 00:01:35,119
basic and let's have a quick dive of

38
00:01:35,119 --> 00:01:37,680
http basics

39
00:01:37,680 --> 00:01:39,520
so everything you do

40
00:01:39,520 --> 00:01:42,000
in browser there's uh

41
00:01:42,000 --> 00:01:44,880
there's a request and a response

42
00:01:44,880 --> 00:01:47,520
for example if you visit rootcoin.org

43
00:01:47,520 --> 00:01:49,600
you will be sending a request to the

44
00:01:49,600 --> 00:01:51,920
server

45
00:01:51,920 --> 00:01:55,920
and the server uh will respond to you

46
00:01:55,920 --> 00:01:59,119
and that's the response

47
00:01:59,360 --> 00:02:03,280
so in this example uh this is a request

48
00:02:03,280 --> 00:02:05,920
and response uh this is the request and

49
00:02:05,920 --> 00:02:09,119
this is the response uh we visited the

50
00:02:09,119 --> 00:02:12,479
rootkun.org and

51
00:02:12,480 --> 00:02:15,840
slash html rc15 talks and

52
00:02:15,840 --> 00:02:17,440
that's it

53
00:02:17,440 --> 00:02:20,959
so the request your endpoint is this one

54
00:02:20,959 --> 00:02:24,239
the url okay

55
00:02:24,720 --> 00:02:27,280
so moving on uh

56
00:02:27,280 --> 00:02:30,400
we'll be talking about parts of the

57
00:02:30,400 --> 00:02:31,599
request

58
00:02:31,599 --> 00:02:32,800
and

59
00:02:32,800 --> 00:02:35,680
this is what you call method

60
00:02:35,680 --> 00:02:38,480
or a verb

61
00:02:38,640 --> 00:02:40,640
it is located at the first line of the

62
00:02:40,640 --> 00:02:41,920
request

63
00:02:41,920 --> 00:02:44,560
it can be a get a post

64
00:02:44,560 --> 00:02:49,200
or delete or there are a lot of

65
00:02:49,200 --> 00:02:51,519
methods out there but we'll be

66
00:02:51,519 --> 00:02:53,840
discussing just get and post

67
00:02:53,840 --> 00:02:56,160
just for basic

68
00:02:56,160 --> 00:02:58,080
so

69
00:02:58,080 --> 00:02:59,519
next one is

70
00:02:59,519 --> 00:03:00,720
hosts

71
00:03:00,720 --> 00:03:03,120
host is the domain

72
00:03:03,120 --> 00:03:04,560
that you are requesting

73
00:03:04,560 --> 00:03:05,760
as you can see

74
00:03:05,760 --> 00:03:10,239
the domain here is rootcon.org

75
00:03:11,120 --> 00:03:13,599
so cookies are small blocks of data

76
00:03:13,599 --> 00:03:16,959
created by a web server while a user is

77
00:03:16,959 --> 00:03:20,080
browsing a website this is the cookie

78
00:03:20,080 --> 00:03:23,440
so usually when you log in you will be

79
00:03:23,440 --> 00:03:27,040
receiving a cookie

80
00:03:29,920 --> 00:03:33,680
so let's move on so that's the

81
00:03:33,680 --> 00:03:34,959
requests

82
00:03:34,959 --> 00:03:36,239
and

83
00:03:36,239 --> 00:03:38,720
they're also what you call response but

84
00:03:38,720 --> 00:03:41,040
i will not be discussing it since this

85
00:03:41,040 --> 00:03:44,080
just a quick dive okay

86
00:03:44,080 --> 00:03:46,159
so let's move on to the bug hunting

87
00:03:46,159 --> 00:03:47,040
tools

88
00:03:47,040 --> 00:03:48,480
uh

89
00:03:48,480 --> 00:03:50,560
of course we need tools to automate our

90
00:03:50,560 --> 00:03:53,439
bug bounty hunting to be more efficient

91
00:03:53,439 --> 00:03:57,360
and to lessen the time in finding bugs

92
00:03:57,360 --> 00:03:59,599
so i talked to some of the bug

93
00:03:59,599 --> 00:04:02,879
bounty hunters out there like uh

94
00:04:02,879 --> 00:04:05,920
evan ricafort the human payload

95
00:04:05,920 --> 00:04:08,319
and i will be discussing while

96
00:04:08,319 --> 00:04:12,319
why evan is a human payload later

97
00:04:12,319 --> 00:04:13,280
and

98
00:04:13,280 --> 00:04:14,799
j mark

99
00:04:14,799 --> 00:04:17,759
estonia cliff ford jason sabat and royce

100
00:04:17,759 --> 00:04:19,120
castillo

101
00:04:19,120 --> 00:04:21,519
and i asked them to provide the tools

102
00:04:21,519 --> 00:04:24,080
that they use in bug bounty hunting

103
00:04:24,080 --> 00:04:27,919
so i compiled them and put it here

104
00:04:27,919 --> 00:04:29,680
so there uh

105
00:04:29,680 --> 00:04:31,520
there are a lot of uh this is the list

106
00:04:31,520 --> 00:04:33,840
of the

107
00:04:33,919 --> 00:04:36,960
the tools so

108
00:04:36,960 --> 00:04:38,880
each tool have a specific use and

109
00:04:38,880 --> 00:04:40,479
function

110
00:04:40,479 --> 00:04:42,800
for today i will not be disc uh i will

111
00:04:42,800 --> 00:04:45,600
not be using all these tools but

112
00:04:45,600 --> 00:04:48,720
make sure to check them out uh

113
00:04:48,720 --> 00:04:51,280
i'll just be using uh

114
00:04:51,280 --> 00:04:53,280
my handy dandy

115
00:04:53,280 --> 00:04:55,440
burp suite so

116
00:04:55,440 --> 00:04:58,160
burp suite is a tool used for

117
00:04:58,160 --> 00:05:01,520
intercepting viewing and modifying

118
00:05:01,520 --> 00:05:04,560
all requests and responses and mostly

119
00:05:04,560 --> 00:05:08,720
these are http and https

120
00:05:08,800 --> 00:05:10,960
so for the sake of beginners that would

121
00:05:10,960 --> 00:05:13,680
like to learn this is a demonstration

122
00:05:13,680 --> 00:05:16,000
on how burp suite works

123
00:05:16,000 --> 00:05:17,919
let's just say

124
00:05:17,919 --> 00:05:19,600
rootcon.org

125
00:05:19,600 --> 00:05:22,080
have a chat functionality and you could

126
00:05:22,080 --> 00:05:24,560
talk to print styx

127
00:05:24,560 --> 00:05:27,840
so this is prince6 and

128
00:05:27,840 --> 00:05:30,240
we'll be chatting

129
00:05:30,240 --> 00:05:33,520
we will be sending a hello world a hello

130
00:05:33,520 --> 00:05:34,800
word

131
00:05:34,800 --> 00:05:36,240
to him

132
00:05:36,240 --> 00:05:38,000
so as mentioned before there will be a

133
00:05:38,000 --> 00:05:40,000
request and response now this is how it

134
00:05:40,000 --> 00:05:41,280
works

135
00:05:41,280 --> 00:05:43,520
when you send the chat hello to print

136
00:05:43,520 --> 00:05:45,919
sticks

137
00:05:46,720 --> 00:05:47,759
uh

138
00:05:47,759 --> 00:05:51,039
there will be a request to rootkon.org

139
00:05:51,039 --> 00:05:52,880
server

140
00:05:52,880 --> 00:05:56,720
specifically to the send message

141
00:05:56,720 --> 00:05:58,800
file

142
00:05:58,800 --> 00:06:01,360
so the parameter here is the goon and

143
00:06:01,360 --> 00:06:04,840
the message so as you can see there's a

144
00:06:04,840 --> 00:06:08,719
goon in burp suite

145
00:06:09,199 --> 00:06:11,680
it's open sending in verbs with we could

146
00:06:11,680 --> 00:06:13,600
what we could do is

147
00:06:13,600 --> 00:06:17,680
block or intercept that request

148
00:06:17,680 --> 00:06:19,120
so after that

149
00:06:19,120 --> 00:06:20,880
we can now

150
00:06:20,880 --> 00:06:22,240
modify it

151
00:06:22,240 --> 00:06:26,160
and change the gun parameter to sempix

152
00:06:26,160 --> 00:06:28,080
so

153
00:06:28,080 --> 00:06:31,360
now it is changed it is now the modified

154
00:06:31,360 --> 00:06:32,880
request and

155
00:06:32,880 --> 00:06:36,240
we could remove the intercept

156
00:06:36,240 --> 00:06:39,520
or the blocker of burp suite

157
00:06:39,520 --> 00:06:42,800
and now we can forward the request again

158
00:06:42,800 --> 00:06:45,039
now

159
00:06:46,000 --> 00:06:48,319
now that we know that burp suite can see

160
00:06:48,319 --> 00:06:52,319
requests http and https protocol we can

161
00:06:52,319 --> 00:06:54,000
also use this for debugging and

162
00:06:54,000 --> 00:06:56,319
analyzing application

163
00:06:56,319 --> 00:06:58,880
as long as we can modify the proxy of

164
00:06:58,880 --> 00:07:01,599
the application

165
00:07:01,680 --> 00:07:02,960
so just

166
00:07:02,960 --> 00:07:04,880
just for an example we will be using a

167
00:07:04,880 --> 00:07:08,159
sql map uh

168
00:07:09,039 --> 00:07:12,160
so i made a sql map command here just

169
00:07:12,160 --> 00:07:16,759
basic sql map and then

170
00:07:23,919 --> 00:07:27,120
so this is the burp suite

171
00:07:28,319 --> 00:07:30,479
so in sql map

172
00:07:30,479 --> 00:07:33,680
most commands is just uh

173
00:07:33,680 --> 00:07:35,759
you will just insert the

174
00:07:35,759 --> 00:07:37,120
url

175
00:07:37,120 --> 00:07:38,240
and then

176
00:07:38,240 --> 00:07:40,880
if you insert the proxy

177
00:07:40,880 --> 00:07:44,160
which is one two seven that's your 0.1

178
00:07:44,160 --> 00:07:46,479
that is the default proxy

179
00:07:46,479 --> 00:07:48,240
of burp suite

180
00:07:48,240 --> 00:07:51,520
so once we enter this

181
00:07:51,680 --> 00:07:53,280
as you can see

182
00:07:53,280 --> 00:07:55,758
there are

183
00:07:56,840 --> 00:08:00,560
requests from sql map

184
00:08:00,560 --> 00:08:01,759
and

185
00:08:01,759 --> 00:08:06,560
we could see it here in burp suite

186
00:08:06,720 --> 00:08:12,039
so in each request there is a payload

187
00:08:12,400 --> 00:08:13,599
see

188
00:08:13,599 --> 00:08:14,460
now uh

189
00:08:14,460 --> 00:08:17,589
[Music]

190
00:08:19,840 --> 00:08:23,359
there's no response because

191
00:08:23,680 --> 00:08:26,400
my server my local server

192
00:08:26,400 --> 00:08:27,599
3000

193
00:08:27,599 --> 00:08:28,639
uh

194
00:08:28,639 --> 00:08:30,000
port is

195
00:08:30,000 --> 00:08:33,279
currently offline

196
00:08:33,279 --> 00:08:35,679
so aside from sql map

197
00:08:35,679 --> 00:08:37,440
you could use this on different

198
00:08:37,440 --> 00:08:41,039
applications as well for example you

199
00:08:41,039 --> 00:08:43,200
downloaded you downloaded a python

200
00:08:43,200 --> 00:08:47,519
exploit and we need to modify or to know

201
00:08:47,519 --> 00:08:51,200
why it is not working or

202
00:08:51,200 --> 00:08:53,200
we could use the burp suite

203
00:08:53,200 --> 00:08:54,800
so

204
00:08:54,800 --> 00:08:56,880
such that you could understand the

205
00:08:56,880 --> 00:08:59,200
requests that the

206
00:08:59,200 --> 00:09:01,839
python exploit that we downloaded from

207
00:09:01,839 --> 00:09:04,160
the internet

208
00:09:04,160 --> 00:09:06,399
so you will also use this in the query

209
00:09:06,399 --> 00:09:09,279
requests

210
00:09:09,279 --> 00:09:12,720
so let's move forward

211
00:09:13,440 --> 00:09:15,600
so let's

212
00:09:15,600 --> 00:09:19,839
go to the comment box in the application

213
00:09:20,839 --> 00:09:24,000
uh most of the application has a

214
00:09:24,000 --> 00:09:26,800
registration form wherein we can

215
00:09:26,800 --> 00:09:29,600
register for our user

216
00:09:29,600 --> 00:09:30,560
so

217
00:09:30,560 --> 00:09:32,399
for our first bug

218
00:09:32,399 --> 00:09:34,720
is registration

219
00:09:34,720 --> 00:09:36,800
request our http

220
00:09:36,800 --> 00:09:39,040
so

221
00:09:43,120 --> 00:09:47,560
for registration over http

222
00:09:50,800 --> 00:09:54,240
i'll just play this here

223
00:09:54,320 --> 00:09:56,480
so what we need is to look for the

224
00:09:56,480 --> 00:09:59,519
registration form

225
00:10:02,800 --> 00:10:05,040
and

226
00:10:05,040 --> 00:10:06,160
there

227
00:10:06,160 --> 00:10:08,640
we will be just inserting our username

228
00:10:08,640 --> 00:10:11,360
and password

229
00:10:16,800 --> 00:10:18,399
confirm password

230
00:10:18,399 --> 00:10:18,570
so

231
00:10:18,570 --> 00:10:21,949
[Music]

232
00:10:24,079 --> 00:10:27,920
so after creation of the

233
00:10:27,920 --> 00:10:30,399
account

234
00:10:30,480 --> 00:10:33,279
as mentioned uh there will be a request

235
00:10:33,279 --> 00:10:35,920
for account creation

236
00:10:35,920 --> 00:10:38,240
since uh burst youtube could see the

237
00:10:38,240 --> 00:10:40,000
requesting

238
00:10:40,000 --> 00:10:42,880
will see all the requests from uh

239
00:10:42,880 --> 00:10:46,160
that are using http

240
00:10:46,160 --> 00:10:49,040
uh we could check this in the http

241
00:10:49,040 --> 00:10:52,319
history of burp suite

242
00:10:52,399 --> 00:10:54,640
so

243
00:10:55,120 --> 00:10:57,200
in this example as you can see this is

244
00:10:57,200 --> 00:11:00,000
the post method and we could see our

245
00:11:00,000 --> 00:11:02,640
username

246
00:11:04,000 --> 00:11:07,120
and then the password

247
00:11:08,640 --> 00:11:10,800
so

248
00:11:10,800 --> 00:11:12,800
as you can see

249
00:11:12,800 --> 00:11:14,399
the request

250
00:11:14,399 --> 00:11:15,600
is sent

251
00:11:15,600 --> 00:11:18,720
at http protocol

252
00:11:18,720 --> 00:11:21,200
so some

253
00:11:21,440 --> 00:11:23,040
some bug

254
00:11:23,040 --> 00:11:25,279
hunters out there i are

255
00:11:25,279 --> 00:11:28,399
thinking that this is the

256
00:11:28,399 --> 00:11:31,760
http protocol use but

257
00:11:31,760 --> 00:11:33,600
that's not

258
00:11:33,600 --> 00:11:34,320
the

259
00:11:34,320 --> 00:11:35,600
http

260
00:11:35,600 --> 00:11:37,200
it is the

261
00:11:37,200 --> 00:11:40,560
http version

262
00:11:40,800 --> 00:11:42,600
of the request

263
00:11:42,600 --> 00:11:44,640
[Music]

264
00:11:44,640 --> 00:11:47,360
so that's it

265
00:11:49,600 --> 00:11:53,440
okay so let's move to the another bug

266
00:11:53,440 --> 00:11:55,839
another another bug is registration

267
00:11:55,839 --> 00:11:57,680
request no rate limiting account

268
00:11:57,680 --> 00:11:59,839
creation

269
00:11:59,839 --> 00:12:02,839
so

270
00:12:11,519 --> 00:12:13,519
so in this one

271
00:12:13,519 --> 00:12:16,240
again this is for the registration form

272
00:12:16,240 --> 00:12:19,880
we just need to register

273
00:12:25,360 --> 00:12:28,720
so let's create an account

274
00:12:29,600 --> 00:12:32,160
so after account creation we will check

275
00:12:32,160 --> 00:12:34,880
the http history

276
00:12:34,880 --> 00:12:38,439
of burp suite

277
00:12:42,720 --> 00:12:45,200
so this is the registration request that

278
00:12:45,200 --> 00:12:47,680
we made

279
00:12:48,160 --> 00:12:52,760
so we will be sending it to the intruder

280
00:12:54,160 --> 00:12:56,079
and we will be clearing

281
00:12:56,079 --> 00:13:00,480
the payload position first

282
00:13:00,480 --> 00:13:01,920
so as you can see

283
00:13:01,920 --> 00:13:04,800
it is now cleared

284
00:13:05,120 --> 00:13:08,160
so we will insert the payload position

285
00:13:08,160 --> 00:13:09,839
at the last

286
00:13:09,839 --> 00:13:14,160
character of our username

287
00:13:14,880 --> 00:13:17,360
so that's the payload position

288
00:13:17,360 --> 00:13:21,839
and then we will go to the payload tab

289
00:13:22,560 --> 00:13:25,040
and then

290
00:13:25,360 --> 00:13:27,839
we will use numbers

291
00:13:27,839 --> 00:13:28,800
and

292
00:13:28,800 --> 00:13:31,600
start it from 2 to

293
00:13:31,600 --> 00:13:35,079
50 only

294
00:13:40,079 --> 00:13:43,680
so normally in

295
00:13:43,680 --> 00:13:46,000
bug hunting

296
00:13:46,000 --> 00:13:48,560
you should use around 100

297
00:13:48,560 --> 00:13:52,880
account creation uh from from one to 100

298
00:13:52,880 --> 00:13:53,760
so

299
00:13:53,760 --> 00:13:56,399
this for the for demo only we will be

300
00:13:56,399 --> 00:13:57,760
using uh

301
00:13:57,760 --> 00:14:01,720
49 requests only

302
00:14:04,880 --> 00:14:07,199
now

303
00:14:11,199 --> 00:14:13,600
so these are the payload as you can see

304
00:14:13,600 --> 00:14:18,320
for every request there is a payload

305
00:14:19,360 --> 00:14:20,639
so for

306
00:14:20,639 --> 00:14:22,639
for request number three the payload is

307
00:14:22,639 --> 00:14:25,120
number four that's why

308
00:14:25,120 --> 00:14:28,320
the username is robin

309
00:14:28,839 --> 00:14:31,519
four so as you can see it's changing

310
00:14:31,519 --> 00:14:34,240
robin 10

311
00:14:35,680 --> 00:14:36,639
now

312
00:14:36,639 --> 00:14:39,040
we will

313
00:14:43,360 --> 00:14:45,839
now we will just wait until the all the

314
00:14:45,839 --> 00:14:48,639
request is done

315
00:14:49,040 --> 00:14:53,800
we are now in the 37 requests

316
00:15:00,959 --> 00:15:03,359
okay

317
00:15:04,000 --> 00:15:07,839
43 requests 44

318
00:15:07,839 --> 00:15:11,399
almost done

319
00:15:15,120 --> 00:15:18,000
and let's go to the

320
00:15:18,000 --> 00:15:20,720
last request

321
00:15:20,720 --> 00:15:25,040
and that is the request number 49

322
00:15:25,040 --> 00:15:27,360
and to verify

323
00:15:27,360 --> 00:15:29,440
that

324
00:15:29,440 --> 00:15:31,040
all

325
00:15:31,040 --> 00:15:32,000
i mean

326
00:15:32,000 --> 00:15:33,040
that the

327
00:15:33,040 --> 00:15:36,800
account is created we will just use the

328
00:15:36,800 --> 00:15:38,240
last account

329
00:15:38,240 --> 00:15:41,120
created that is robin50 the username is

330
00:15:41,120 --> 00:15:43,199
robin50

331
00:15:43,199 --> 00:15:45,519
okay so we will try to log in as robin

332
00:15:45,519 --> 00:15:46,560
50

333
00:15:46,560 --> 00:15:47,839
to check

334
00:15:47,839 --> 00:15:52,120
if the account is created automatically

335
00:15:54,480 --> 00:15:56,320
so as you can see we are already logged

336
00:15:56,320 --> 00:15:58,639
in as robin 50.

337
00:15:58,639 --> 00:15:59,680
so

338
00:15:59,680 --> 00:16:01,759
the security impact

339
00:16:01,759 --> 00:16:04,800
of this kind of issue is we could create

340
00:16:04,800 --> 00:16:06,800
thousands of users

341
00:16:06,800 --> 00:16:09,199
or hundreds of user

342
00:16:09,199 --> 00:16:11,600
however for testing purposes only we

343
00:16:11,600 --> 00:16:14,959
created 50. so take note and please be

344
00:16:14,959 --> 00:16:17,279
mindful that do not create thousands of

345
00:16:17,279 --> 00:16:20,800
user just create 100 users and that's

346
00:16:20,800 --> 00:16:24,880
enough for poc demonstration

347
00:16:24,880 --> 00:16:27,120
okay

348
00:16:32,320 --> 00:16:36,279
now moving on

349
00:16:39,680 --> 00:16:43,040
our second bug for account registration

350
00:16:43,040 --> 00:16:44,920
form bugs is

351
00:16:44,920 --> 00:16:48,320
registration request no rate

352
00:16:48,320 --> 00:16:50,800
limit and that's done

353
00:16:50,800 --> 00:16:52,880
let's go for the third

354
00:16:52,880 --> 00:16:55,519
bug and that is registration request or

355
00:16:55,519 --> 00:16:59,680
it limit email triggering

356
00:16:59,680 --> 00:17:00,560
so

357
00:17:00,560 --> 00:17:02,079
this is the same as an account

358
00:17:02,079 --> 00:17:04,880
registration or rate limit for every

359
00:17:04,880 --> 00:17:07,119
account created there's a verification

360
00:17:07,119 --> 00:17:08,720
email right

361
00:17:08,720 --> 00:17:09,439
so

362
00:17:09,439 --> 00:17:11,280
this could

363
00:17:11,280 --> 00:17:14,000
this will be an issue because the mail

364
00:17:14,000 --> 00:17:16,959
server can send thousands of email again

365
00:17:16,959 --> 00:17:18,959
so take note that this

366
00:17:18,959 --> 00:17:21,280
uh take note that

367
00:17:21,280 --> 00:17:24,079
you should only

368
00:17:24,079 --> 00:17:26,720
send 50 to 100

369
00:17:26,720 --> 00:17:28,240
requests

370
00:17:28,240 --> 00:17:29,520
for this

371
00:17:29,520 --> 00:17:32,000
for this kind of issue

372
00:17:32,000 --> 00:17:32,960
so

373
00:17:32,960 --> 00:17:35,039
it's different

374
00:17:35,039 --> 00:17:36,400
from

375
00:17:36,400 --> 00:17:37,760
account

376
00:17:37,760 --> 00:17:40,320
account creation

377
00:17:40,320 --> 00:17:44,799
if the end point is different so

378
00:17:45,120 --> 00:17:48,080
always check that out

379
00:17:48,080 --> 00:17:49,919
so they're only

380
00:17:49,919 --> 00:17:52,960
so that's uh

381
00:17:53,520 --> 00:17:55,679
that's three bugs for account

382
00:17:55,679 --> 00:18:00,160
registration uh and

383
00:18:00,160 --> 00:18:02,720
and it's up to you to learn and to study

384
00:18:02,720 --> 00:18:04,720
what are the other bugs that you can

385
00:18:04,720 --> 00:18:05,840
find in

386
00:18:05,840 --> 00:18:09,360
account registration form box

387
00:18:09,360 --> 00:18:12,559
so let's move on to the login form box

388
00:18:12,559 --> 00:18:17,360
this is a login over http

389
00:18:17,360 --> 00:18:20,240
so in here we can see the request of a

390
00:18:20,240 --> 00:18:24,720
login is using http protocol

391
00:18:24,880 --> 00:18:27,120
so if you can see

392
00:18:27,120 --> 00:18:31,039
if you log in if you saw this

393
00:18:31,039 --> 00:18:34,000
it is using http protocol then

394
00:18:34,000 --> 00:18:36,799
you could report it

395
00:18:36,799 --> 00:18:40,000
so for our second bug for login

396
00:18:40,000 --> 00:18:41,440
form uh

397
00:18:41,440 --> 00:18:43,600
this is the login request no rate limit

398
00:18:43,600 --> 00:18:45,200
brute force

399
00:18:45,200 --> 00:18:47,440
so

400
00:18:47,600 --> 00:18:50,559
so for brute force

401
00:18:50,559 --> 00:18:52,879
um

402
00:18:54,160 --> 00:18:57,840
we'll be testing the brute force

403
00:19:00,880 --> 00:19:04,080
so by the way i use a motley day here

404
00:19:04,080 --> 00:19:07,840
it's a classic a vulnerable

405
00:19:07,840 --> 00:19:08,559
uh

406
00:19:08,559 --> 00:19:12,320
web application so for this is used for

407
00:19:12,320 --> 00:19:14,799
testing

408
00:19:16,480 --> 00:19:18,640
so

409
00:19:19,440 --> 00:19:22,840
what we need to do is to log in

410
00:19:22,840 --> 00:19:26,240
and just use an incorrect password and

411
00:19:26,240 --> 00:19:27,679
check

412
00:19:27,679 --> 00:19:32,480
the http history again of burp suite

413
00:19:33,360 --> 00:19:37,559
so send it to intruder

414
00:19:41,360 --> 00:19:43,520
remember to use an incorrect password at

415
00:19:43,520 --> 00:19:44,960
the first time

416
00:19:44,960 --> 00:19:47,120
so

417
00:19:47,840 --> 00:19:50,720
we will be adding the payload position

418
00:19:50,720 --> 00:19:52,640
at the password and then we will be

419
00:19:52,640 --> 00:19:54,000
loading

420
00:19:54,000 --> 00:19:55,120
the

421
00:19:55,120 --> 00:19:58,000
25 password

422
00:19:58,000 --> 00:19:59,919
word lists only

423
00:19:59,919 --> 00:20:00,880
so

424
00:20:00,880 --> 00:20:01,760
in

425
00:20:01,760 --> 00:20:03,840
bug bounty you could

426
00:20:03,840 --> 00:20:06,000
you should use 300

427
00:20:06,000 --> 00:20:09,600
password lists okay so for demo purposes

428
00:20:09,600 --> 00:20:14,240
we will be using 25 password lists only

429
00:20:14,480 --> 00:20:18,559
so after entering the password list

430
00:20:19,120 --> 00:20:21,760
we will be inserting our correct

431
00:20:21,760 --> 00:20:25,520
password which is robin

432
00:20:25,840 --> 00:20:27,679
so this is

433
00:20:27,679 --> 00:20:28,880
to

434
00:20:28,880 --> 00:20:31,039
why we inserted the correct password is

435
00:20:31,039 --> 00:20:31,919
to

436
00:20:31,919 --> 00:20:35,280
simulate the brute force

437
00:20:35,280 --> 00:20:37,760
login because sometimes

438
00:20:37,760 --> 00:20:39,679
server responses

439
00:20:39,679 --> 00:20:42,640
are different or sometimes it can

440
00:20:42,640 --> 00:20:45,360
provide you

441
00:20:45,520 --> 00:20:47,039
a false

442
00:20:47,039 --> 00:20:49,520
response so that's why you need to

443
00:20:49,520 --> 00:20:51,200
insert the

444
00:20:51,200 --> 00:20:54,400
correct password at the last

445
00:20:54,400 --> 00:20:57,679
at the last payload

446
00:20:57,679 --> 00:20:59,840
list

447
00:20:59,840 --> 00:21:04,000
so then we will start the attack

448
00:21:09,760 --> 00:21:14,320
so for each request we have different

449
00:21:14,320 --> 00:21:15,280
words

450
00:21:15,280 --> 00:21:17,039
as you can see

451
00:21:17,039 --> 00:21:19,840
there is a password

452
00:21:19,840 --> 00:21:24,080
and it's changing for every request

453
00:21:26,880 --> 00:21:29,120
yeah

454
00:21:29,520 --> 00:21:30,880
so that's it

455
00:21:30,880 --> 00:21:34,000
and at 26 request this is the correct

456
00:21:34,000 --> 00:21:35,200
password

457
00:21:35,200 --> 00:21:38,480
and as you can see the status

458
00:21:38,480 --> 00:21:40,400
and the link is different

459
00:21:40,400 --> 00:21:42,159
that means

460
00:21:42,159 --> 00:21:44,799
we are already logged in

461
00:21:44,799 --> 00:21:49,200
or we have a correct password

462
00:21:50,080 --> 00:21:53,080
okay

463
00:21:59,200 --> 00:22:01,760
let's put force

464
00:22:01,760 --> 00:22:03,840
so let's move on

465
00:22:03,840 --> 00:22:06,240
again there are other bugs aside from

466
00:22:06,240 --> 00:22:08,640
this but we just discussed

467
00:22:08,640 --> 00:22:10,840
two bugs

468
00:22:10,840 --> 00:22:14,480
right so let's move on to the other box

469
00:22:14,480 --> 00:22:18,400
uh which is account or profile page

470
00:22:18,400 --> 00:22:21,840
so what can you find in this

471
00:22:21,840 --> 00:22:25,280
form uh i mean in this page what kind of

472
00:22:25,280 --> 00:22:28,080
bugs you can find this is

473
00:22:28,080 --> 00:22:30,640
no password confirmation upon account

474
00:22:30,640 --> 00:22:32,880
deletion

475
00:22:32,880 --> 00:22:36,880
so in some cases that the application

476
00:22:36,880 --> 00:22:39,360
profile page does not have a password

477
00:22:39,360 --> 00:22:42,960
confirmation before account deletion

478
00:22:42,960 --> 00:22:46,000
you can report that kind of bug so in

479
00:22:46,000 --> 00:22:48,080
facebook whenever we delete our account

480
00:22:48,080 --> 00:22:51,200
i think there's a password confirmation

481
00:22:51,200 --> 00:22:53,280
so

482
00:22:53,280 --> 00:22:55,360
if ever you can delete

483
00:22:55,360 --> 00:22:57,200
your account without a password

484
00:22:57,200 --> 00:22:59,039
confirmation

485
00:22:59,039 --> 00:23:01,679
that's a bug

486
00:23:03,200 --> 00:23:04,080
so

487
00:23:04,080 --> 00:23:06,400
other bugs in the account profile page

488
00:23:06,400 --> 00:23:07,280
is

489
00:23:07,280 --> 00:23:10,240
acts if data is not removed on uploaded

490
00:23:10,240 --> 00:23:11,600
image

491
00:23:11,600 --> 00:23:14,320
so exif stands for

492
00:23:14,320 --> 00:23:17,280
exchangeable image file format

493
00:23:17,280 --> 00:23:19,520
every time you take a picture

494
00:23:19,520 --> 00:23:20,640
with your

495
00:23:20,640 --> 00:23:24,000
digital camera or mobile phone

496
00:23:24,000 --> 00:23:27,039
there is a meta metadata

497
00:23:27,039 --> 00:23:28,880
included like

498
00:23:28,880 --> 00:23:29,840
date

499
00:23:29,840 --> 00:23:31,679
time

500
00:23:31,679 --> 00:23:33,360
model

501
00:23:33,360 --> 00:23:35,440
or camera settings

502
00:23:35,440 --> 00:23:36,799
and

503
00:23:36,799 --> 00:23:38,720
to add further there is

504
00:23:38,720 --> 00:23:40,960
what you call gps coordinate

505
00:23:40,960 --> 00:23:43,200
okay

506
00:23:43,760 --> 00:23:46,000
so

507
00:23:48,480 --> 00:23:51,840
in this example

508
00:23:54,880 --> 00:23:56,400
uh what you need

509
00:23:56,400 --> 00:23:58,480
to do to verify

510
00:23:58,480 --> 00:23:59,600
the

511
00:23:59,600 --> 00:24:02,960
exif data is not removed is you need

512
00:24:02,960 --> 00:24:05,760
an image with an exif data so i

513
00:24:05,760 --> 00:24:08,400
downloaded an exit data

514
00:24:08,400 --> 00:24:10,400
an image with an exif data in the

515
00:24:10,400 --> 00:24:11,600
internet

516
00:24:11,600 --> 00:24:14,639
so as you can see

517
00:24:15,360 --> 00:24:18,480
there's a longitude and latitude or the

518
00:24:18,480 --> 00:24:21,760
gps coordinate of the image

519
00:24:21,760 --> 00:24:24,400
and

520
00:24:26,799 --> 00:24:28,720
what you can do is

521
00:24:28,720 --> 00:24:31,200
upload it in your

522
00:24:31,200 --> 00:24:32,480
profile page

523
00:24:32,480 --> 00:24:35,200
or your or your

524
00:24:35,200 --> 00:24:36,559
profile

525
00:24:36,559 --> 00:24:40,879
image as a proper image and then

526
00:24:41,200 --> 00:24:46,480
once uploaded to verify is you need to

527
00:24:46,480 --> 00:24:49,279
download it first

528
00:24:49,279 --> 00:24:52,400
because sometimes application

529
00:24:52,400 --> 00:24:56,400
nowadays process your uploaded image or

530
00:24:56,400 --> 00:24:57,840
remove the

531
00:24:57,840 --> 00:24:59,520
exif data

532
00:24:59,520 --> 00:25:02,240
that's why you need to

533
00:25:02,240 --> 00:25:05,760
download it just to verify if the exif

534
00:25:05,760 --> 00:25:08,799
data is not removed

535
00:25:11,440 --> 00:25:12,240
so

536
00:25:12,240 --> 00:25:14,640
we already downloaded it

537
00:25:14,640 --> 00:25:15,600
and

538
00:25:15,600 --> 00:25:18,960
this is the downloaded file

539
00:25:18,960 --> 00:25:21,440
and as you can see the longitude and

540
00:25:21,440 --> 00:25:24,559
latitude is still there that means that

541
00:25:24,559 --> 00:25:27,039
the exif data is not removed

542
00:25:27,039 --> 00:25:29,840
okay

543
00:25:33,039 --> 00:25:35,279
so that's how you verify for an exif

544
00:25:35,279 --> 00:25:37,679
data

545
00:25:37,679 --> 00:25:41,039
when the image is uploaded

546
00:25:41,039 --> 00:25:42,400
so

547
00:25:42,400 --> 00:25:45,279
make sure that the image is

548
00:25:45,279 --> 00:25:48,799
available to the public

549
00:25:49,279 --> 00:25:53,120
or other users of the applications

550
00:25:53,120 --> 00:25:56,720
such that there's a security impact

551
00:25:56,720 --> 00:25:59,840
so this issue can be found also

552
00:25:59,840 --> 00:26:01,840
in

553
00:26:01,840 --> 00:26:06,320
image gallery or file upload

554
00:26:08,159 --> 00:26:11,919
or or in i mean or in any file upload uh

555
00:26:11,919 --> 00:26:14,240
form

556
00:26:14,240 --> 00:26:16,640
so just make sure that it is available

557
00:26:16,640 --> 00:26:19,120
to the other users

558
00:26:19,120 --> 00:26:20,960
so i'm not sure if you already watched

559
00:26:20,960 --> 00:26:23,760
the netflix documentary don't with

560
00:26:23,760 --> 00:26:25,120
cats

561
00:26:25,120 --> 00:26:27,760
the exif data is one of the clues they

562
00:26:27,760 --> 00:26:30,400
use to identify the location of the

563
00:26:30,400 --> 00:26:32,640
serial killer

564
00:26:32,640 --> 00:26:34,960
what investigators did is they

565
00:26:34,960 --> 00:26:37,039
downloaded

566
00:26:37,039 --> 00:26:41,120
all the public images of the suspect in

567
00:26:41,120 --> 00:26:44,640
and check if there's an exit data

568
00:26:44,640 --> 00:26:47,120
so it's a pretty cool documentary

569
00:26:47,120 --> 00:26:51,320
make sure you watch it

570
00:26:53,600 --> 00:26:56,480
so that's two bugs again for profile

571
00:26:56,480 --> 00:26:58,720
page i'm pretty sure that there will be

572
00:26:58,720 --> 00:27:01,200
other bugs out there

573
00:27:01,200 --> 00:27:04,240
and it's up for it's up to you to find

574
00:27:04,240 --> 00:27:08,400
out and learn what are the other bugs

575
00:27:08,400 --> 00:27:11,120
so let's move on to the password reset

576
00:27:11,120 --> 00:27:13,200
or change

577
00:27:13,200 --> 00:27:14,640
password reset

578
00:27:14,640 --> 00:27:16,480
slash change

579
00:27:16,480 --> 00:27:21,120
so for password reset change bug

580
00:27:21,120 --> 00:27:23,919
there is a no rate limiting password

581
00:27:23,919 --> 00:27:25,840
reset

582
00:27:25,840 --> 00:27:27,120
request

583
00:27:27,120 --> 00:27:30,720
that leads to email flooding

584
00:27:30,720 --> 00:27:32,399
almost the same as an account

585
00:27:32,399 --> 00:27:36,000
registration form bugs that

586
00:27:36,000 --> 00:27:38,399
that the difference is this on the

587
00:27:38,399 --> 00:27:40,799
password request endpoint and

588
00:27:40,799 --> 00:27:43,120
there will be an email of a password

589
00:27:43,120 --> 00:27:45,520
reset url

590
00:27:45,520 --> 00:27:49,000
okay so

591
00:27:49,039 --> 00:27:51,679
these are the steps to validate this bug

592
00:27:51,679 --> 00:27:53,679
just intercept the password release

593
00:27:53,679 --> 00:27:55,919
reset request send the request to the

594
00:27:55,919 --> 00:27:58,399
intruder clear the payload position set

595
00:27:58,399 --> 00:27:59,200
this

596
00:27:59,200 --> 00:28:00,159
set the

597
00:28:00,159 --> 00:28:02,240
payload as adult payload and generate

598
00:28:02,240 --> 00:28:07,360
100 payloads and then start data okay

599
00:28:13,440 --> 00:28:15,600
so for no

600
00:28:15,600 --> 00:28:18,719
password policy

601
00:28:19,520 --> 00:28:21,360
if you change your password or if you

602
00:28:21,360 --> 00:28:23,200
reset your password and

603
00:28:23,200 --> 00:28:26,559
and it accepts one character and has no

604
00:28:26,559 --> 00:28:28,480
minimum length

605
00:28:28,480 --> 00:28:30,880
you could report it meaning you could

606
00:28:30,880 --> 00:28:32,000
insert

607
00:28:32,000 --> 00:28:36,399
one character only like a or you could

608
00:28:36,399 --> 00:28:38,240
it accepts

609
00:28:38,240 --> 00:28:42,080
uh a blank or a space character

610
00:28:42,080 --> 00:28:44,399
uh that that is an issue that you could

611
00:28:44,399 --> 00:28:46,719
report

612
00:28:47,279 --> 00:28:50,640
okay let's move on to our next bug

613
00:28:50,640 --> 00:28:53,520
and that is password reset token over

614
00:28:53,520 --> 00:28:56,240
http

615
00:28:57,440 --> 00:29:00,799
so this is an example of a password

616
00:29:00,799 --> 00:29:03,919
reset over http

617
00:29:03,919 --> 00:29:06,159
so

618
00:29:06,880 --> 00:29:09,120
as you can see

619
00:29:09,120 --> 00:29:10,480
uh

620
00:29:10,480 --> 00:29:13,120
what you need to do is you could check

621
00:29:13,120 --> 00:29:14,480
the

622
00:29:14,480 --> 00:29:18,880
url of the password reset

623
00:29:19,520 --> 00:29:20,399
so

624
00:29:20,399 --> 00:29:23,440
this one is using http and again that's

625
00:29:23,440 --> 00:29:25,520
an issue

626
00:29:25,520 --> 00:29:28,559
you could report it

627
00:29:29,840 --> 00:29:32,799
so for our next bug is password reset

628
00:29:32,799 --> 00:29:36,000
token is not invalidated after use

629
00:29:36,000 --> 00:29:38,720
this is when

630
00:29:38,880 --> 00:29:41,840
uh when you request for a password reset

631
00:29:41,840 --> 00:29:43,039
and you

632
00:29:43,039 --> 00:29:45,520
can use it multiple times meaning you

633
00:29:45,520 --> 00:29:47,440
could use the

634
00:29:47,440 --> 00:29:51,520
password reset url multiple times

635
00:29:51,520 --> 00:29:54,640
and it does not expire

636
00:29:54,640 --> 00:29:55,600
so

637
00:29:55,600 --> 00:29:57,679
if you saw something like that you could

638
00:29:57,679 --> 00:30:00,640
report it but sometimes the password

639
00:30:00,640 --> 00:30:02,640
have a long

640
00:30:02,640 --> 00:30:06,159
expiry time for example one day

641
00:30:06,159 --> 00:30:07,600
or two days

642
00:30:07,600 --> 00:30:08,399
but

643
00:30:08,399 --> 00:30:11,200
uh companies do as

644
00:30:11,200 --> 00:30:13,440
uh company um

645
00:30:13,440 --> 00:30:16,720
the company ex doesn't accept it if

646
00:30:16,720 --> 00:30:19,520
if it has a password

647
00:30:19,520 --> 00:30:21,120
i mean

648
00:30:21,120 --> 00:30:24,799
expiry of the password token

649
00:30:25,840 --> 00:30:28,799
okay let's move on

650
00:30:28,799 --> 00:30:31,760
so token leakage at the third party via

651
00:30:31,760 --> 00:30:34,080
referral

652
00:30:34,080 --> 00:30:36,559
so what you can do to check if the

653
00:30:36,559 --> 00:30:38,720
password reset token is looking at the

654
00:30:38,720 --> 00:30:41,520
third party is just to copy

655
00:30:41,520 --> 00:30:44,320
the url of the password reset so in this

656
00:30:44,320 --> 00:30:47,360
example our

657
00:30:47,360 --> 00:30:49,559
password reset is

658
00:30:49,559 --> 00:30:53,360
rootcon.org home reset

659
00:30:53,360 --> 00:30:55,279
as you can see that's the password reset

660
00:30:55,279 --> 00:30:56,799
url

661
00:30:56,799 --> 00:30:59,679
here's an example

662
00:31:00,240 --> 00:31:02,159
then

663
00:31:02,159 --> 00:31:05,679
make copy just copy it and make sure you

664
00:31:05,679 --> 00:31:08,399
use an incognito mode

665
00:31:08,399 --> 00:31:11,919
browser without any extensions on it

666
00:31:11,919 --> 00:31:14,960
sometimes browser extension leaks

667
00:31:14,960 --> 00:31:17,760
sensitive urls of the application

668
00:31:17,760 --> 00:31:19,840
so

669
00:31:20,320 --> 00:31:22,960
just copy the url and paste it in the

670
00:31:22,960 --> 00:31:26,080
incognito mode browser and

671
00:31:26,080 --> 00:31:27,440
you could

672
00:31:27,440 --> 00:31:29,600
click this part of the burps application

673
00:31:29,600 --> 00:31:31,760
to open the filter settings

674
00:31:31,760 --> 00:31:34,080
by the way this is for the

675
00:31:34,080 --> 00:31:36,000
burp suite pro

676
00:31:36,000 --> 00:31:38,640
i check it in the community edition and

677
00:31:38,640 --> 00:31:40,000
there's no

678
00:31:40,000 --> 00:31:41,600
filtering of

679
00:31:41,600 --> 00:31:44,158
requests

680
00:31:44,960 --> 00:31:45,679
so

681
00:31:45,679 --> 00:31:48,399
as you can see the this is the password

682
00:31:48,399 --> 00:31:51,200
reset token so i'm just guessing that

683
00:31:51,200 --> 00:31:53,440
this might be

684
00:31:53,440 --> 00:31:55,200
the e

685
00:31:55,200 --> 00:31:58,080
parameters value is the

686
00:31:58,080 --> 00:32:00,480
token so i will be just copying it and

687
00:32:00,480 --> 00:32:03,519
pasting it here

688
00:32:03,519 --> 00:32:06,960
in the filter by search term

689
00:32:06,960 --> 00:32:09,840
copy the token

690
00:32:09,840 --> 00:32:11,360
so

691
00:32:11,360 --> 00:32:14,320
again after you copy it copied it and

692
00:32:14,320 --> 00:32:16,480
then you visit

693
00:32:16,480 --> 00:32:17,840
uh

694
00:32:17,840 --> 00:32:20,399
you visit it by uh your

695
00:32:20,399 --> 00:32:22,399
browser's

696
00:32:22,399 --> 00:32:24,720
incognito mode and

697
00:32:24,720 --> 00:32:26,080
check the

698
00:32:26,080 --> 00:32:29,600
http history if there's a domain that

699
00:32:29,600 --> 00:32:32,640
leaks for the password reset token

700
00:32:32,640 --> 00:32:33,840
so

701
00:32:33,840 --> 00:32:36,080
that domain might be a social media or a

702
00:32:36,080 --> 00:32:38,559
third-party application so in this case

703
00:32:38,559 --> 00:32:42,080
the rootcode.org might be using

704
00:32:42,080 --> 00:32:44,000
walk the bug scripts

705
00:32:44,000 --> 00:32:46,000
hello.js

706
00:32:46,000 --> 00:32:48,399
so it is leaking the password reset

707
00:32:48,399 --> 00:32:52,080
token at what the bug.org at the

708
00:32:52,080 --> 00:32:53,679
referrer

709
00:32:53,679 --> 00:32:54,880
header

710
00:32:54,880 --> 00:32:57,840
here

711
00:33:03,760 --> 00:33:05,120
so

712
00:33:05,120 --> 00:33:07,600
our next bug is session is not

713
00:33:07,600 --> 00:33:11,840
invalidated upon password change

714
00:33:13,120 --> 00:33:13,919
so

715
00:33:13,919 --> 00:33:16,320
so to validate this kind of bug

716
00:33:16,320 --> 00:33:18,639
is

717
00:33:18,720 --> 00:33:21,440
you just use one user

718
00:33:21,440 --> 00:33:23,279
log in or authenticate in the

719
00:33:23,279 --> 00:33:24,960
application

720
00:33:24,960 --> 00:33:27,679
and use to browser let's call it browser

721
00:33:27,679 --> 00:33:29,919
a and browser b

722
00:33:29,919 --> 00:33:33,039
so change the password in browser a

723
00:33:33,039 --> 00:33:34,159
and

724
00:33:34,159 --> 00:33:36,399
check if the session is still valid in

725
00:33:36,399 --> 00:33:39,600
browser b so try to refresh the page in

726
00:33:39,600 --> 00:33:40,880
browser b

727
00:33:40,880 --> 00:33:43,919
or update any settings like your

728
00:33:43,919 --> 00:33:45,360
username

729
00:33:45,360 --> 00:33:48,158
or password

730
00:33:48,320 --> 00:33:50,960
i i mean your username or you could

731
00:33:50,960 --> 00:33:53,840
insert anything

732
00:33:53,840 --> 00:33:56,960
uh if it's still valid and then you

733
00:33:56,960 --> 00:33:59,440
could report that kind of issue

734
00:33:59,440 --> 00:34:01,760
because the session in

735
00:34:01,760 --> 00:34:06,080
is still valid in browser b

736
00:34:06,080 --> 00:34:07,039
so

737
00:34:07,039 --> 00:34:09,040
that's for our password we said change

738
00:34:09,040 --> 00:34:10,320
bug

739
00:34:10,320 --> 00:34:12,320
then let's go to the log out or sign out

740
00:34:12,320 --> 00:34:13,918
bug uh

741
00:34:13,918 --> 00:34:16,560
our first bug is failure to invalidate

742
00:34:16,560 --> 00:34:20,119
session on logout

743
00:34:20,399 --> 00:34:22,639
so for failure to evaluate session on

744
00:34:22,639 --> 00:34:25,280
log out this must be client and server

745
00:34:25,280 --> 00:34:26,719
side

746
00:34:26,719 --> 00:34:28,000
uh

747
00:34:28,000 --> 00:34:30,250
if you log out on the application

748
00:34:30,250 --> 00:34:33,040
[Music]

749
00:34:33,040 --> 00:34:34,399
the server

750
00:34:34,399 --> 00:34:36,079
uh the session

751
00:34:36,079 --> 00:34:37,599
must be

752
00:34:37,599 --> 00:34:41,040
removed or your all of your key must be

753
00:34:41,040 --> 00:34:43,440
removed

754
00:34:43,760 --> 00:34:46,000
but if you

755
00:34:46,000 --> 00:34:48,480
what you need to do to check

756
00:34:48,480 --> 00:34:49,440
if it's

757
00:34:49,440 --> 00:34:52,079
a valid issue is log in in the

758
00:34:52,079 --> 00:34:54,159
application and then

759
00:34:54,159 --> 00:34:56,239
try to click the back button of the

760
00:34:56,239 --> 00:34:57,820
browser and if you

761
00:34:57,820 --> 00:34:58,960
[Music]

762
00:34:58,960 --> 00:35:01,040
if your session is still valid and you

763
00:35:01,040 --> 00:35:03,119
could do anything like change the

764
00:35:03,119 --> 00:35:04,880
settings

765
00:35:04,880 --> 00:35:06,560
of your

766
00:35:06,560 --> 00:35:09,680
user or you could update your username

767
00:35:09,680 --> 00:35:11,680
that's an issue because the session is

768
00:35:11,680 --> 00:35:14,839
still valid at the client session

769
00:35:14,839 --> 00:35:16,480
okay

770
00:35:16,480 --> 00:35:19,839
so let's move on to the lack of security

771
00:35:19,839 --> 00:35:24,160
header cache control for sensitive page

772
00:35:25,680 --> 00:35:28,680
uh

773
00:35:32,640 --> 00:35:33,440
okay

774
00:35:33,440 --> 00:35:35,760
here

775
00:35:42,240 --> 00:35:43,520
so

776
00:35:43,520 --> 00:35:45,839
what you need to do is to log in

777
00:35:45,839 --> 00:35:48,480
your account

778
00:35:50,480 --> 00:35:53,200
and

779
00:35:53,920 --> 00:35:55,920
you need to look for

780
00:35:55,920 --> 00:36:00,079
a sensitive page in this example

781
00:36:00,079 --> 00:36:01,760
we'll be using

782
00:36:01,760 --> 00:36:06,160
the user profile just for example and

783
00:36:06,160 --> 00:36:09,119
there is an api keys

784
00:36:09,119 --> 00:36:12,800
api key at the username

785
00:36:12,800 --> 00:36:16,400
so this means that the this page is

786
00:36:16,400 --> 00:36:18,320
sensitive

787
00:36:18,320 --> 00:36:19,839
so

788
00:36:19,839 --> 00:36:23,040
what you need to do is

789
00:36:23,440 --> 00:36:25,760
click the log out

790
00:36:25,760 --> 00:36:29,359
log out bottom of the application

791
00:36:30,640 --> 00:36:32,880
and

792
00:36:32,880 --> 00:36:36,480
click the back button of the browser

793
00:36:36,480 --> 00:36:38,320
if you could see again if you could see

794
00:36:38,320 --> 00:36:40,960
it again the sensitive page then that

795
00:36:40,960 --> 00:36:43,599
will be an issue because there's no

796
00:36:43,599 --> 00:36:47,520
cache control header on that page

797
00:36:53,680 --> 00:36:54,720
okay

798
00:36:54,720 --> 00:36:57,040
then

799
00:37:00,160 --> 00:37:03,359
let's move on on

800
00:37:03,359 --> 00:37:06,839
other bug uh this is context spoofing

801
00:37:06,839 --> 00:37:11,839
impersonation via broken link hijacking

802
00:37:12,320 --> 00:37:14,400
this is our first bug

803
00:37:14,400 --> 00:37:19,880
for this content spoofing and

804
00:37:22,480 --> 00:37:26,960
i'll be showing you a demo here

805
00:37:29,200 --> 00:37:30,800
so as you can see

806
00:37:30,800 --> 00:37:32,320
rootkun.org

807
00:37:32,320 --> 00:37:34,800
has a

808
00:37:35,440 --> 00:37:37,119
social media

809
00:37:37,119 --> 00:37:38,960
icons that is

810
00:37:38,960 --> 00:37:41,839
linked to the

811
00:37:41,839 --> 00:37:43,599
external websites

812
00:37:43,599 --> 00:37:45,839
so in this example we'll be using this

813
00:37:45,839 --> 00:37:49,160
twitter account

814
00:37:52,560 --> 00:37:54,800
and after clicking that twitter account

815
00:37:54,800 --> 00:37:56,160
we could

816
00:37:56,160 --> 00:37:59,520
see that this account doesn't exist

817
00:37:59,520 --> 00:38:00,480
so

818
00:38:00,480 --> 00:38:03,520
that is for corn roots ph

819
00:38:03,520 --> 00:38:06,000
so what we need to do is edit our

820
00:38:06,000 --> 00:38:08,160
username

821
00:38:08,160 --> 00:38:09,280
on

822
00:38:09,280 --> 00:38:11,760
twitter

823
00:38:13,359 --> 00:38:17,119
so we will be copying the cornroots ph

824
00:38:17,119 --> 00:38:19,200
and then we will paste it

825
00:38:19,200 --> 00:38:23,040
as our username okay

826
00:38:26,240 --> 00:38:29,520
so after saving it

827
00:38:30,960 --> 00:38:34,000
we will check if we already claim the

828
00:38:34,000 --> 00:38:35,920
account so

829
00:38:35,920 --> 00:38:38,880
the link is not yet updated on my

830
00:38:38,880 --> 00:38:41,200
profile page of twitter

831
00:38:41,200 --> 00:38:43,359
so what we will need to do is to click

832
00:38:43,359 --> 00:38:45,040
again the

833
00:38:45,040 --> 00:38:48,560
link at the root con so as you can see

834
00:38:48,560 --> 00:38:51,839
we already claimed the horn roots ph

835
00:38:51,839 --> 00:38:52,720
of

836
00:38:52,720 --> 00:38:54,480
of the

837
00:38:54,480 --> 00:38:57,280
twitter account

838
00:38:57,359 --> 00:38:58,480
so

839
00:38:58,480 --> 00:39:01,040
most likely these are third parties for

840
00:39:01,040 --> 00:39:04,960
this kind of issue the hotel spoofing

841
00:39:04,960 --> 00:39:07,440
and you could see it

842
00:39:07,440 --> 00:39:10,400
somehow i mean sometimes it is

843
00:39:10,400 --> 00:39:13,839
social media or it might be a domain

844
00:39:13,839 --> 00:39:17,040
that is not registered or expired

845
00:39:17,040 --> 00:39:19,680
if you could claim it

846
00:39:19,680 --> 00:39:22,560
that's an issue

847
00:39:22,880 --> 00:39:25,040
so

848
00:39:26,720 --> 00:39:30,400
after claiming it of course

849
00:39:30,400 --> 00:39:33,440
just take note that do not post any

850
00:39:33,440 --> 00:39:35,520
offensive

851
00:39:35,520 --> 00:39:38,079
uh posts uh because this is not good for

852
00:39:38,079 --> 00:39:40,320
the company uh this is just an example

853
00:39:40,320 --> 00:39:43,359
of the

854
00:39:43,359 --> 00:39:46,319
offensive posts

855
00:39:46,560 --> 00:39:47,440
so

856
00:39:47,440 --> 00:39:49,520
so use something like this that post

857
00:39:49,520 --> 00:39:51,680
that

858
00:39:51,760 --> 00:39:55,440
that is not offensive uh poc by naps

859
00:39:55,440 --> 00:39:58,800
just insert your name to

860
00:39:58,800 --> 00:40:00,640
uh

861
00:40:00,640 --> 00:40:02,160
to be

862
00:40:02,160 --> 00:40:03,599
verified that

863
00:40:03,599 --> 00:40:05,920
this account is truly

864
00:40:05,920 --> 00:40:07,440
claimed by you

865
00:40:07,440 --> 00:40:10,440
okay

866
00:40:13,920 --> 00:40:17,280
so let's move on for content spoofing

867
00:40:17,280 --> 00:40:20,880
email html injection

868
00:40:20,880 --> 00:40:22,640
so an email

869
00:40:22,640 --> 00:40:25,440
html injection can exist everywhere

870
00:40:25,440 --> 00:40:28,240
especially if there's an email

871
00:40:28,240 --> 00:40:30,800
this is usually found in account

872
00:40:30,800 --> 00:40:33,920
registration profile pages

873
00:40:33,920 --> 00:40:35,599
because you could change your first name

874
00:40:35,599 --> 00:40:37,680
and last name so in this example we will

875
00:40:37,680 --> 00:40:40,160
be using account registration

876
00:40:40,160 --> 00:40:42,480
so normally we will input our names and

877
00:40:42,480 --> 00:40:45,200
last name here

878
00:40:45,359 --> 00:40:48,240
so upon registration or after there is

879
00:40:48,240 --> 00:40:50,640
registration you will be receiving this

880
00:40:50,640 --> 00:40:54,079
kind of email since i inputted naps in

881
00:40:54,079 --> 00:40:57,040
the first name i will receive high naps

882
00:40:57,040 --> 00:40:58,240
okay

883
00:40:58,240 --> 00:41:00,640
so what if

884
00:41:00,640 --> 00:41:02,720
what if we could inject

885
00:41:02,720 --> 00:41:06,240
html payloads such as this one uh in

886
00:41:06,240 --> 00:41:08,200
this example we will be using

887
00:41:08,200 --> 00:41:10,400
evandrecofport.com profile

888
00:41:10,400 --> 00:41:13,400
profile.png

889
00:41:14,480 --> 00:41:15,839
once

890
00:41:15,839 --> 00:41:18,319
the account is created you will be

891
00:41:18,319 --> 00:41:21,839
receiving an email like this

892
00:41:22,240 --> 00:41:24,400
so there's no name

893
00:41:24,400 --> 00:41:26,640
since we inserted

894
00:41:26,640 --> 00:41:29,599
an html payload

895
00:41:29,599 --> 00:41:32,400
the first name now that's the bug so as

896
00:41:32,400 --> 00:41:34,400
mentioned before event recovered is

897
00:41:34,400 --> 00:41:36,319
actually being used in bug bounty

898
00:41:36,319 --> 00:41:38,800
reports

899
00:41:41,200 --> 00:41:45,920
so for access control vulnerabilities

900
00:41:45,920 --> 00:41:48,640
broken access control vulnerabilities

901
00:41:48,640 --> 00:41:51,200
exist when a user can in fact access

902
00:41:51,200 --> 00:41:53,680
some resource or perform some action

903
00:41:53,680 --> 00:41:55,839
that they are not supposed to be able to

904
00:41:55,839 --> 00:41:57,920
access

905
00:41:57,920 --> 00:42:00,079
so let's say we have

906
00:42:00,079 --> 00:42:02,480
simple role based access control we have

907
00:42:02,480 --> 00:42:05,119
the three roles

908
00:42:05,119 --> 00:42:08,800
so each role have a specific permissions

909
00:42:08,800 --> 00:42:09,839
we have

910
00:42:09,839 --> 00:42:12,319
four functionalities like create view

911
00:42:12,319 --> 00:42:13,920
update delete

912
00:42:13,920 --> 00:42:16,160
so for

913
00:42:16,160 --> 00:42:19,760
the admin role uh he can do everything

914
00:42:19,760 --> 00:42:21,839
but for the editor role

915
00:42:21,839 --> 00:42:24,800
he can delete

916
00:42:24,800 --> 00:42:28,160
and the staff role can only view

917
00:42:28,160 --> 00:42:32,079
can only use the view function okay

918
00:42:32,079 --> 00:42:34,319
so

919
00:42:34,319 --> 00:42:36,319
for access control vulnerabilities for

920
00:42:36,319 --> 00:42:38,800
horizontal either or horizontal

921
00:42:38,800 --> 00:42:41,520
privilege escalation this is when a user

922
00:42:41,520 --> 00:42:44,079
gain access of another user who has the

923
00:42:44,079 --> 00:42:48,079
same access level as the attacker

924
00:42:48,400 --> 00:42:51,040
for vertical privilege escalation is

925
00:42:51,040 --> 00:42:53,839
when a user gain access to the rights of

926
00:42:53,839 --> 00:42:57,200
a user with higher privileges

927
00:42:57,200 --> 00:42:58,480
now

928
00:42:58,480 --> 00:43:00,319
i will giving

929
00:43:00,319 --> 00:43:02,270
you an example for

930
00:43:02,270 --> 00:43:04,160
[Music]

931
00:43:04,160 --> 00:43:05,760
the horizontal

932
00:43:05,760 --> 00:43:08,760
either

933
00:43:15,520 --> 00:43:17,200
so

934
00:43:17,200 --> 00:43:19,760
we are currently logged in as a but as

935
00:43:19,760 --> 00:43:22,640
batman the username is batman and we

936
00:43:22,640 --> 00:43:24,079
will be

937
00:43:24,079 --> 00:43:27,200
using i will be creating

938
00:43:27,200 --> 00:43:29,680
a blog post

939
00:43:29,680 --> 00:43:33,200
for testing purposes only

940
00:43:34,640 --> 00:43:37,680
so after creating that blog post we will

941
00:43:37,680 --> 00:43:38,800
check it

942
00:43:38,800 --> 00:43:41,839
in the burp suite

943
00:43:41,920 --> 00:43:42,490
so

944
00:43:42,490 --> 00:43:45,830
[Music]

945
00:43:46,480 --> 00:43:49,040
there you go

946
00:43:49,520 --> 00:43:52,720
as you can see this is the request of

947
00:43:52,720 --> 00:43:55,200
the blog post creation

948
00:43:55,200 --> 00:43:57,839
and

949
00:43:58,000 --> 00:44:00,319
what we need is this username

950
00:44:00,319 --> 00:44:02,960
batman and the uid

951
00:44:02,960 --> 00:44:07,160
okay we will copy it

952
00:44:10,000 --> 00:44:12,079
okay

953
00:44:12,079 --> 00:44:15,359
that's our victim

954
00:44:17,599 --> 00:44:18,640
so

955
00:44:18,640 --> 00:44:20,400
that's for batman and then we will be

956
00:44:20,400 --> 00:44:23,440
using our other browser which is

957
00:44:23,440 --> 00:44:25,760
superman

958
00:44:25,760 --> 00:44:29,200
so superman will have a superman will be

959
00:44:29,200 --> 00:44:31,119
creating again

960
00:44:31,119 --> 00:44:34,599
a blog post

961
00:44:41,680 --> 00:44:44,800
testing pose again and then

962
00:44:44,800 --> 00:44:48,079
let's check for that specific

963
00:44:48,079 --> 00:44:49,359
pose

964
00:44:49,359 --> 00:44:52,560
testing for superman

965
00:44:59,839 --> 00:45:02,160
okay then we will search we will search

966
00:45:02,160 --> 00:45:03,359
it

967
00:45:03,359 --> 00:45:05,359
so this is the

968
00:45:05,359 --> 00:45:08,400
blog entry

969
00:45:08,400 --> 00:45:11,040
this is the blog creation again and we

970
00:45:11,040 --> 00:45:14,480
will send this to the repeater

971
00:45:14,880 --> 00:45:16,960
so as you can see there is a username

972
00:45:16,960 --> 00:45:20,400
equals to superman and the uid

973
00:45:20,400 --> 00:45:23,359
equals to 80.

974
00:45:23,839 --> 00:45:25,760
then we will copy

975
00:45:25,760 --> 00:45:27,119
the

976
00:45:27,119 --> 00:45:30,160
previous request from batman and we will

977
00:45:30,160 --> 00:45:32,800
paste it here

978
00:45:32,800 --> 00:45:35,200
in the

979
00:45:35,280 --> 00:45:36,400
cookie

980
00:45:36,400 --> 00:45:39,040
we will change it to batman so by the

981
00:45:39,040 --> 00:45:42,240
way this request is superman right

982
00:45:42,240 --> 00:45:43,760
but we just

983
00:45:43,760 --> 00:45:48,240
we just change the username and the uid

984
00:45:48,800 --> 00:45:53,000
and then we will be sending it

985
00:46:03,119 --> 00:46:04,240
okay

986
00:46:04,240 --> 00:46:05,599
and then

987
00:46:05,599 --> 00:46:08,920
send it

988
00:46:14,880 --> 00:46:17,359
so as you can see this is the superman

989
00:46:17,359 --> 00:46:18,240
page

990
00:46:18,240 --> 00:46:20,960
and we will refresh it there's no post

991
00:46:20,960 --> 00:46:24,000
we will go to the batman user

992
00:46:24,000 --> 00:46:25,839
which is our big team

993
00:46:25,839 --> 00:46:30,640
and as you can see the batman

994
00:46:30,640 --> 00:46:34,000
created a pose so as a superman we

995
00:46:34,000 --> 00:46:36,880
successfully posted a blog entry

996
00:46:36,880 --> 00:46:38,800
for our

997
00:46:38,800 --> 00:46:39,839
victim

998
00:46:39,839 --> 00:46:42,839
batman

999
00:46:44,880 --> 00:46:47,880
okay

1000
00:47:07,119 --> 00:47:11,680
okay let's move on to our

1001
00:47:11,680 --> 00:47:12,640
so

1002
00:47:12,640 --> 00:47:14,880
horizontal either or privileged

1003
00:47:14,880 --> 00:47:17,599
escalation

1004
00:47:22,480 --> 00:47:24,640
so that's the horizontal either

1005
00:47:24,640 --> 00:47:27,760
privileges collision

1006
00:47:27,760 --> 00:47:30,240
meaning we could do what other users can

1007
00:47:30,240 --> 00:47:33,119
do and create requests on their behalf

1008
00:47:33,119 --> 00:47:35,839
since we supplied a user id

1009
00:47:35,839 --> 00:47:39,839
and username of our victim

1010
00:47:41,760 --> 00:47:42,720
so

1011
00:47:42,720 --> 00:47:45,040
guys in checking the if there's an

1012
00:47:45,040 --> 00:47:47,440
access control issue we need to have

1013
00:47:47,440 --> 00:47:49,760
multiple test accounts with different

1014
00:47:49,760 --> 00:47:51,200
roles

1015
00:47:51,200 --> 00:47:55,040
so in this case we use the same rules as

1016
00:47:55,040 --> 00:47:57,520
staff

1017
00:48:04,160 --> 00:48:07,040
so

1018
00:48:07,040 --> 00:48:09,359
uh

1019
00:48:10,480 --> 00:48:14,119
this is our next

1020
00:48:26,880 --> 00:48:27,680
so

1021
00:48:27,680 --> 00:48:29,200
uh

1022
00:48:29,200 --> 00:48:31,040
this other bug which is privileged

1023
00:48:31,040 --> 00:48:33,119
escalation but

1024
00:48:33,119 --> 00:48:35,200
and we are currently logged in as an

1025
00:48:35,200 --> 00:48:36,240
admin

1026
00:48:36,240 --> 00:48:39,118
administrator

1027
00:48:39,359 --> 00:48:42,000
and we are in this page administrator

1028
00:48:42,000 --> 00:48:45,200
administration page

1029
00:48:45,280 --> 00:48:48,480
so i so as an admin

1030
00:48:48,480 --> 00:48:50,400
we will just check for the deletion of

1031
00:48:50,400 --> 00:48:53,440
customer feedback

1032
00:48:53,440 --> 00:48:55,760
uh request

1033
00:48:55,760 --> 00:48:58,000
okay

1034
00:49:00,559 --> 00:49:01,359
so

1035
00:49:01,359 --> 00:49:03,680
we will be intercepting this let's clear

1036
00:49:03,680 --> 00:49:06,720
the history first

1037
00:49:07,520 --> 00:49:09,200
and then

1038
00:49:09,200 --> 00:49:11,839
turn on the interception of

1039
00:49:11,839 --> 00:49:13,280
burp suite

1040
00:49:13,280 --> 00:49:16,640
and then click the delete button

1041
00:49:16,640 --> 00:49:18,960
to check for the delete request

1042
00:49:18,960 --> 00:49:21,040
now as you can see this is the delete

1043
00:49:21,040 --> 00:49:23,520
request

1044
00:49:28,960 --> 00:49:31,920
so we will be sending it to the repeater

1045
00:49:31,920 --> 00:49:33,839
then drop it

1046
00:49:33,839 --> 00:49:36,800
since it is dropped the request was

1047
00:49:36,800 --> 00:49:38,880
never sent to the

1048
00:49:38,880 --> 00:49:40,400
server

1049
00:49:40,400 --> 00:49:41,760
now to check it

1050
00:49:41,760 --> 00:49:44,480
we will be reloading it or refreshing it

1051
00:49:44,480 --> 00:49:48,319
if the if that specific feedback is

1052
00:49:48,319 --> 00:49:50,160
is still there

1053
00:49:50,160 --> 00:49:52,399
okay

1054
00:49:55,359 --> 00:49:57,440
so that's for the admin

1055
00:49:57,440 --> 00:49:59,839
user

1056
00:50:03,440 --> 00:50:07,760
now we will go to the our other browser

1057
00:50:07,760 --> 00:50:10,480
currently we are already logged in

1058
00:50:10,480 --> 00:50:12,400
as

1059
00:50:12,400 --> 00:50:16,000
john doe truthcom.org

1060
00:50:16,160 --> 00:50:17,599
and

1061
00:50:17,599 --> 00:50:19,920
we will check if we could visit that

1062
00:50:19,920 --> 00:50:21,280
specific

1063
00:50:21,280 --> 00:50:23,359
administration page as you can see we

1064
00:50:23,359 --> 00:50:28,160
are not allowed to ask that page okay

1065
00:50:34,480 --> 00:50:36,160
now for testing purposes we will be

1066
00:50:36,160 --> 00:50:38,240
adding

1067
00:50:38,240 --> 00:50:41,319
a basket

1068
00:50:41,680 --> 00:50:45,839
we will add a product on our basket

1069
00:50:47,119 --> 00:50:49,359
so this is again this is

1070
00:50:49,359 --> 00:50:50,160
the

1071
00:50:50,160 --> 00:50:53,279
low privilege account

1072
00:50:53,520 --> 00:50:56,559
so we we just added uh

1073
00:50:56,559 --> 00:51:00,400
apple juice on our basket

1074
00:51:02,000 --> 00:51:03,839
and then

1075
00:51:03,839 --> 00:51:06,559
we will be sending it

1076
00:51:06,559 --> 00:51:08,559
to the

1077
00:51:08,559 --> 00:51:10,559
clip

1078
00:51:10,559 --> 00:51:12,319
to the repeater

1079
00:51:12,319 --> 00:51:14,400
so these cookies

1080
00:51:14,400 --> 00:51:16,000
are

1081
00:51:16,000 --> 00:51:17,280
for

1082
00:51:17,280 --> 00:51:20,319
john doe at rotcom.org the low privilege

1083
00:51:20,319 --> 00:51:23,319
user

1084
00:51:23,359 --> 00:51:26,480
so after sending it to the repeater

1085
00:51:26,480 --> 00:51:30,319
what we need to do next is

1086
00:51:35,680 --> 00:51:38,559
check it if the request is

1087
00:51:38,559 --> 00:51:39,920
correct

1088
00:51:39,920 --> 00:51:42,319
and then there you go there is a

1089
00:51:42,319 --> 00:51:44,480
status response

1090
00:51:44,480 --> 00:51:48,240
so we will go back again to our admin

1091
00:51:48,240 --> 00:51:49,280
page

1092
00:51:49,280 --> 00:51:52,319
i i mean for our admin user

1093
00:51:52,319 --> 00:51:55,359
delete feedback request and what we need

1094
00:51:55,359 --> 00:51:57,760
to use is this

1095
00:51:57,760 --> 00:52:00,720
top portion of the of that request

1096
00:52:00,720 --> 00:52:03,040
the delete api feedbacks

1097
00:52:03,040 --> 00:52:05,119
so we will check it again

1098
00:52:05,119 --> 00:52:06,319
in our

1099
00:52:06,319 --> 00:52:10,240
admin user if the specific feedback is

1100
00:52:10,240 --> 00:52:13,680
deleted and it's still there

1101
00:52:13,680 --> 00:52:15,839
so

1102
00:52:17,359 --> 00:52:20,640
we will just copy the top portion

1103
00:52:20,640 --> 00:52:24,078
copy it and

1104
00:52:24,160 --> 00:52:27,359
paste it here

1105
00:52:28,640 --> 00:52:33,400
then we will delete the post body

1106
00:52:33,599 --> 00:52:36,720
and then send it

1107
00:52:37,040 --> 00:52:38,400
so as you can see

1108
00:52:38,400 --> 00:52:39,599
it is

1109
00:52:39,599 --> 00:52:42,400
the response is 200 and status is

1110
00:52:42,400 --> 00:52:43,599
success

1111
00:52:43,599 --> 00:52:47,359
so to check it uh we will check it again

1112
00:52:47,359 --> 00:52:50,240
using an admin user and then refresh

1113
00:52:50,240 --> 00:52:53,359
this page

1114
00:52:57,440 --> 00:53:00,720
now it is deleted

1115
00:53:00,720 --> 00:53:01,760
using

1116
00:53:01,760 --> 00:53:04,960
cookies of a low privilege user we

1117
00:53:04,960 --> 00:53:06,319
deleted

1118
00:53:06,319 --> 00:53:08,640
the

1119
00:53:09,440 --> 00:53:11,839
the customer feedback

1120
00:53:11,839 --> 00:53:14,839
okay

1121
00:53:18,559 --> 00:53:21,200
so that's for the vertical

1122
00:53:21,200 --> 00:53:26,118
privilege escalation or vertical either

1123
00:53:28,319 --> 00:53:31,440
so uh in the previous demo the staff

1124
00:53:31,440 --> 00:53:33,920
does not have an access to the graphical

1125
00:53:33,920 --> 00:53:36,079
user interface of uh

1126
00:53:36,079 --> 00:53:38,240
customer feedback or the administration

1127
00:53:38,240 --> 00:53:40,558
page

1128
00:53:40,839 --> 00:53:44,720
so he that's why he can't delete it

1129
00:53:44,720 --> 00:53:46,240
so maybe

1130
00:53:46,240 --> 00:53:48,319
the developer thought if the staff role

1131
00:53:48,319 --> 00:53:50,720
does not have an access to the gui

1132
00:53:50,720 --> 00:53:53,119
or the graphical user interface it can't

1133
00:53:53,119 --> 00:53:57,800
use that specific functionality

1134
00:54:01,040 --> 00:54:04,480
however since we

1135
00:54:05,200 --> 00:54:09,440
copied the specific url

1136
00:54:09,440 --> 00:54:10,800
or the

1137
00:54:10,800 --> 00:54:15,040
yes this that specific url for the

1138
00:54:15,040 --> 00:54:19,599
deletion of the feedback we could delete

1139
00:54:19,599 --> 00:54:22,880
the feedback as a staff role

1140
00:54:22,880 --> 00:54:24,880
so

1141
00:54:24,880 --> 00:54:26,960
so in this kind of attack the staff role

1142
00:54:26,960 --> 00:54:29,920
just needs end points of the url of the

1143
00:54:29,920 --> 00:54:30,720
punk

1144
00:54:30,720 --> 00:54:33,760
of that specific functionality

1145
00:54:33,760 --> 00:54:36,079
okay

1146
00:54:37,440 --> 00:54:40,960
let's move on now that's for

1147
00:54:40,960 --> 00:54:43,520
authenticated users the vertical and the

1148
00:54:43,520 --> 00:54:44,960
horizontal

1149
00:54:44,960 --> 00:54:47,599
now there are some cases

1150
00:54:47,599 --> 00:54:47,930
the

1151
00:54:47,930 --> 00:54:49,280
[Music]

1152
00:54:49,280 --> 00:54:52,799
that an un open unauthenticated user can

1153
00:54:52,799 --> 00:54:54,960
access those functionalities now to

1154
00:54:54,960 --> 00:54:56,960
check this

1155
00:54:56,960 --> 00:54:58,079
to check

1156
00:54:58,079 --> 00:55:01,920
if an authenticated user can access

1157
00:55:01,920 --> 00:55:06,559
it is just omit or remove the cookies

1158
00:55:06,559 --> 00:55:07,920
so that means

1159
00:55:07,920 --> 00:55:09,280
everything

1160
00:55:09,280 --> 00:55:11,839
anyone could actually use

1161
00:55:11,839 --> 00:55:14,400
those functionalities given that they

1162
00:55:14,400 --> 00:55:17,680
know that endpoint

1163
00:55:17,680 --> 00:55:22,480
or that specific url okay

1164
00:55:24,880 --> 00:55:27,359
so that's for the column box in the

1165
00:55:27,359 --> 00:55:29,839
application we already discussed the

1166
00:55:29,839 --> 00:55:32,000
access control vulnerabilities content

1167
00:55:32,000 --> 00:55:33,280
spoofing

1168
00:55:33,280 --> 00:55:34,640
log out

1169
00:55:34,640 --> 00:55:38,400
password reset account profile page box

1170
00:55:38,400 --> 00:55:40,640
login form box and account registration

1171
00:55:40,640 --> 00:55:42,799
form bugs

1172
00:55:42,799 --> 00:55:44,799
now hopefully this will help you in

1173
00:55:44,799 --> 00:55:48,559
catching your very first bug

1174
00:55:48,559 --> 00:55:51,200
now let's move on on creating a bug

1175
00:55:51,200 --> 00:55:52,640
bounty report

1176
00:55:52,640 --> 00:55:55,680
always read the program b first so

1177
00:55:55,680 --> 00:55:57,760
always read the program brief first to

1178
00:55:57,760 --> 00:55:58,720
prevent

1179
00:55:58,720 --> 00:56:02,000
point deduction

1180
00:56:02,000 --> 00:56:05,520
okay so always start target the inschool

1181
00:56:05,520 --> 00:56:07,359
target if there

1182
00:56:07,359 --> 00:56:11,520
if there's a chance that you bump into a

1183
00:56:11,520 --> 00:56:13,839
a target or a bug that is not in the

1184
00:56:13,839 --> 00:56:16,400
program brief and you think that

1185
00:56:16,400 --> 00:56:18,480
that's critical bug

1186
00:56:18,480 --> 00:56:20,880
kindly ask the program owner or the bug

1187
00:56:20,880 --> 00:56:23,599
bounty platform supports team before you

1188
00:56:23,599 --> 00:56:27,200
create a report okay

1189
00:56:27,280 --> 00:56:29,280
so

1190
00:56:29,280 --> 00:56:33,359
for our second pointers is

1191
00:56:33,359 --> 00:56:35,680
to provide the vulnerable requests or

1192
00:56:35,680 --> 00:56:38,319
the full http requests

1193
00:56:38,319 --> 00:56:41,599
or the url endpoint so full http request

1194
00:56:41,599 --> 00:56:45,359
or http http dump

1195
00:56:45,359 --> 00:56:48,240
so this is the full http request from

1196
00:56:48,240 --> 00:56:49,920
the preview slides

1197
00:56:49,920 --> 00:56:53,119
on our horizontal door

1198
00:56:53,119 --> 00:56:55,200
what we need to do is

1199
00:56:55,200 --> 00:56:58,160
you copy the request and just

1200
00:56:58,160 --> 00:57:01,040
if you want you could reduce some data

1201
00:57:01,040 --> 00:57:03,119
that is not necessary just to make it

1202
00:57:03,119 --> 00:57:05,359
smaller and easier to read

1203
00:57:05,359 --> 00:57:07,119
and

1204
00:57:07,119 --> 00:57:10,480
if the value is dynamic or

1205
00:57:10,480 --> 00:57:13,720
if the

1206
00:57:14,480 --> 00:57:17,680
or it is changing per user

1207
00:57:17,680 --> 00:57:20,240
you could enclose the value with greater

1208
00:57:20,240 --> 00:57:22,880
than and less less than

1209
00:57:22,880 --> 00:57:25,200
okay

1210
00:57:25,599 --> 00:57:28,559
so in here i reducted

1211
00:57:28,559 --> 00:57:32,000
both uh some of the header like user

1212
00:57:32,000 --> 00:57:35,119
agent and

1213
00:57:35,119 --> 00:57:38,079
the accept language

1214
00:57:38,079 --> 00:57:41,839
so it's much more readable right

1215
00:57:42,160 --> 00:57:44,000
so our

1216
00:57:44,000 --> 00:57:46,960
next pointer is detailed poc steps

1217
00:57:46,960 --> 00:57:48,240
so

1218
00:57:48,240 --> 00:57:51,599
your proof of concept it doesn't need

1219
00:57:51,599 --> 00:57:52,839
to be a

1220
00:57:52,839 --> 00:57:54,480
long

1221
00:57:54,480 --> 00:57:57,680
steps but it can be short and detailed

1222
00:57:57,680 --> 00:57:59,280
and

1223
00:57:59,280 --> 00:58:02,799
for example this step one login as user

1224
00:58:02,799 --> 00:58:07,760
a at http.com login24 and visit url

1225
00:58:07,760 --> 00:58:10,400
this url

1226
00:58:10,400 --> 00:58:13,520
so i inserted the login page url because

1227
00:58:13,520 --> 00:58:15,760
sometimes uh

1228
00:58:15,760 --> 00:58:17,680
there are multiple login

1229
00:58:17,680 --> 00:58:20,079
pages for

1230
00:58:20,079 --> 00:58:22,400
each role or each user so it's a good

1231
00:58:22,400 --> 00:58:25,760
idea to add urls where to log in as

1232
00:58:25,760 --> 00:58:28,319
mentioned a while ago

1233
00:58:28,319 --> 00:58:29,839
so

1234
00:58:29,839 --> 00:58:30,880
this

1235
00:58:30,880 --> 00:58:31,680
on

1236
00:58:31,680 --> 00:58:35,200
our second step is as user a inject the

1237
00:58:35,200 --> 00:58:37,680
payload below as first name and then

1238
00:58:37,680 --> 00:58:40,000
that's your second step

1239
00:58:40,000 --> 00:58:42,079
and then put your payload

1240
00:58:42,079 --> 00:58:44,640
and for the third step is to trigger the

1241
00:58:44,640 --> 00:58:47,760
xss login as user b and visit the

1242
00:58:47,760 --> 00:58:49,359
following url

1243
00:58:49,359 --> 00:58:53,040
so as you can see we i added the

1244
00:58:53,040 --> 00:58:57,040
less than and greater than sign here

1245
00:59:01,599 --> 00:59:05,200
so insert a screenshot

1246
00:59:05,200 --> 00:59:07,680
so screenshot is usually helpful if

1247
00:59:07,680 --> 00:59:09,520
there's a lot of link

1248
00:59:09,520 --> 00:59:11,440
on the forms that you need to click in

1249
00:59:11,440 --> 00:59:14,880
order to reproduce the issue or the bug

1250
00:59:14,880 --> 00:59:16,720
so this will prevent the confusion

1251
00:59:16,720 --> 00:59:18,720
between the analysts and the researchers

1252
00:59:18,720 --> 00:59:21,359
so always use an arrow to pinpoint the

1253
00:59:21,359 --> 00:59:25,598
exact location where to click okay

1254
00:59:26,700 --> 00:59:28,079
[Music]

1255
00:59:28,079 --> 00:59:31,920
next pointer is insert a poc video only

1256
00:59:31,920 --> 00:59:34,559
if the bug is hard to replicate

1257
00:59:34,559 --> 00:59:36,960
so there are some case cases that the

1258
00:59:36,960 --> 00:59:39,760
bugs you found is complex uh you need to

1259
00:59:39,760 --> 00:59:41,839
click a lot of links

1260
00:59:41,839 --> 00:59:44,079
and repeat a lot of

1261
00:59:44,079 --> 00:59:45,599
a lot of requests

1262
00:59:45,599 --> 00:59:48,480
or you need to go to different pages in

1263
00:59:48,480 --> 00:59:51,280
order to reproduce the bug so in this

1264
00:59:51,280 --> 00:59:52,799
kind of scenario

1265
00:59:52,799 --> 00:59:55,839
plc video is a good choice

1266
00:59:55,839 --> 00:59:59,040
also take note in creating a poc video

1267
00:59:59,040 --> 01:00:01,280
add a caption

1268
01:00:01,280 --> 01:00:04,400
on it so just to make it more detailed

1269
01:00:04,400 --> 01:00:06,400
you don't need to edit the video you

1270
01:00:06,400 --> 01:00:08,400
could use the text file and do the

1271
01:00:08,400 --> 01:00:10,640
recording so for example

1272
01:00:10,640 --> 01:00:12,880
this is the steps

1273
01:00:12,880 --> 01:00:15,119
what you need is to highlight it and

1274
01:00:15,119 --> 01:00:17,119
continue the recording and then

1275
01:00:17,119 --> 01:00:19,280
highlight this light highlight this

1276
01:00:19,280 --> 01:00:20,319
again

1277
01:00:20,319 --> 01:00:22,400
and then continue the recording continue

1278
01:00:22,400 --> 01:00:24,160
what you're doing

1279
01:00:24,160 --> 01:00:26,160
on the application and then highlight

1280
01:00:26,160 --> 01:00:27,760
this so

1281
01:00:27,760 --> 01:00:29,440
that's

1282
01:00:29,440 --> 01:00:31,680
in that way that will be

1283
01:00:31,680 --> 01:00:33,599
more detailed

1284
01:00:33,599 --> 01:00:35,839
okay

1285
01:00:38,559 --> 01:00:39,680
so

1286
01:00:39,680 --> 01:00:41,359
the last

1287
01:00:41,359 --> 01:00:43,359
pointer is the bug must have a security

1288
01:00:43,359 --> 01:00:45,599
impact so make sure that it can affect

1289
01:00:45,599 --> 01:00:49,440
users application or the server

1290
01:00:49,440 --> 01:00:50,640
or

1291
01:00:50,640 --> 01:00:52,559
it can disclose

1292
01:00:52,559 --> 01:00:56,240
any assets of the companies so make sure

1293
01:00:56,240 --> 01:00:58,960
always provide the security impact

1294
01:00:58,960 --> 01:01:00,640
details

1295
01:01:00,640 --> 01:01:02,960
okay

1296
01:01:02,960 --> 01:01:04,720
so that's it

1297
01:01:04,720 --> 01:01:07,119
hopefully you learned something new from

1298
01:01:07,119 --> 01:01:10,319
my talk and don't forget to keep safe

1299
01:01:10,319 --> 01:01:13,960
and hack the planet

