1
00:00:06,480 --> 00:00:07,759
hey guys

2
00:00:07,759 --> 00:00:14,000
my name is evan aka nph and i'll be your

3
00:00:14,000 --> 00:00:16,960
instructor for today uh with

4
00:00:16,960 --> 00:00:20,240
the recon 101 village called path to

5
00:00:20,240 --> 00:00:21,439
college

6
00:00:21,439 --> 00:00:22,640
so

7
00:00:22,640 --> 00:00:24,080
this uh

8
00:00:24,080 --> 00:00:25,920
in this 101 session

9
00:00:25,920 --> 00:00:30,320
we'll be covering the basics of

10
00:00:30,320 --> 00:00:31,679
pawning machines

11
00:00:31,679 --> 00:00:33,920
how to find your first machine the

12
00:00:33,920 --> 00:00:37,040
initial steps necessary steps that

13
00:00:37,040 --> 00:00:39,360
you need to take and

14
00:00:39,360 --> 00:00:42,719
that are essential to

15
00:00:43,520 --> 00:00:45,680
getting the keys to the kingdom uh

16
00:00:45,680 --> 00:00:47,280
escalation's root

17
00:00:47,280 --> 00:00:48,719
all those things

18
00:00:48,719 --> 00:00:51,520
so um

19
00:00:51,840 --> 00:00:55,480
let's let's start

20
00:01:01,120 --> 00:01:03,920
okay so basically here's the

21
00:01:03,920 --> 00:01:07,200
current table of contents that i have uh

22
00:01:07,200 --> 00:01:08,080
over

23
00:01:08,080 --> 00:01:10,080
over the course

24
00:01:10,080 --> 00:01:14,240
of the training um i'll cover multiple

25
00:01:14,240 --> 00:01:16,320
aspects of

26
00:01:16,320 --> 00:01:18,560
of

27
00:01:18,560 --> 00:01:20,240
penetration testing

28
00:01:20,240 --> 00:01:22,640
um

29
00:01:22,640 --> 00:01:24,159
and

30
00:01:24,159 --> 00:01:26,479
share a little bit of of common

31
00:01:26,479 --> 00:01:28,479
vulnerabilities methodologies and

32
00:01:28,479 --> 00:01:30,560
different technologies that you can use

33
00:01:30,560 --> 00:01:32,560
to

34
00:01:32,560 --> 00:01:33,920
successfully

35
00:01:33,920 --> 00:01:36,880
gain access and

36
00:01:36,880 --> 00:01:41,439
gain root to your your first box so

37
00:01:41,439 --> 00:01:43,840
over here we have a pen chest

38
00:01:43,840 --> 00:01:45,759
penetration testing

39
00:01:45,759 --> 00:01:47,680
penetration testing and vulnerability

40
00:01:47,680 --> 00:01:49,200
assessment

41
00:01:49,200 --> 00:01:51,200
different vulnerabilities methodologies

42
00:01:51,200 --> 00:01:52,799
and technologies

43
00:01:52,799 --> 00:01:54,479
different tools

44
00:01:54,479 --> 00:01:55,280
again

45
00:01:55,280 --> 00:01:56,320
these are

46
00:01:56,320 --> 00:01:59,360
only some and not not going to be all of

47
00:01:59,360 --> 00:02:01,520
it and the

48
00:02:01,520 --> 00:02:03,840
usual penetration testing approach so

49
00:02:03,840 --> 00:02:06,000
the penetration testing approach is very

50
00:02:06,000 --> 00:02:08,399
important because it's your

51
00:02:08,399 --> 00:02:10,639
it's going to be your life cycle on on

52
00:02:10,639 --> 00:02:13,360
your engagements and on how you're going

53
00:02:13,360 --> 00:02:15,360
to

54
00:02:15,360 --> 00:02:18,560
pawn your first boxes

55
00:02:19,280 --> 00:02:20,319
all right

56
00:02:20,319 --> 00:02:23,200
so over here we have penetration testing

57
00:02:23,200 --> 00:02:26,879
so what is penetration testing

58
00:02:26,879 --> 00:02:29,040
all right so penetration testing or pen

59
00:02:29,040 --> 00:02:31,040
testing is uh

60
00:02:31,040 --> 00:02:33,200
is the practice of testing a system

61
00:02:33,200 --> 00:02:36,239
network or a web application to find

62
00:02:36,239 --> 00:02:38,239
security vulnerabilities that an

63
00:02:38,239 --> 00:02:41,360
attacker could exploit

64
00:02:42,319 --> 00:02:44,000
so

65
00:02:44,000 --> 00:02:46,800
it's basically

66
00:02:47,440 --> 00:02:50,720
assessment a security assessment of of a

67
00:02:50,720 --> 00:02:53,680
system network or web application

68
00:02:53,680 --> 00:02:55,760
so that

69
00:02:55,760 --> 00:02:57,120
you can

70
00:02:57,120 --> 00:02:58,319
you can

71
00:02:58,319 --> 00:02:59,599
try to

72
00:02:59,599 --> 00:03:01,840
discover it first before malicious

73
00:03:01,840 --> 00:03:04,000
hackers do

74
00:03:04,000 --> 00:03:06,080
right so the goal of penetration testing

75
00:03:06,080 --> 00:03:08,800
is to identify weak spots in an

76
00:03:08,800 --> 00:03:11,599
organization's security posture

77
00:03:11,599 --> 00:03:12,720
so

78
00:03:12,720 --> 00:03:17,280
apart from that it's also used as a

79
00:03:17,280 --> 00:03:20,319
a way to measure the compliance of an

80
00:03:20,319 --> 00:03:22,800
organization's security policy

81
00:03:22,800 --> 00:03:25,120
test the staff's awareness of security

82
00:03:25,120 --> 00:03:26,640
issues and

83
00:03:26,640 --> 00:03:28,640
determine how

84
00:03:28,640 --> 00:03:30,799
the company would react to these certain

85
00:03:30,799 --> 00:03:33,519
security disasters

86
00:03:33,519 --> 00:03:35,680
so a penetration test can also highlight

87
00:03:35,680 --> 00:03:40,000
weaknesses in company security policies

88
00:03:40,000 --> 00:03:42,640
for example

89
00:03:43,680 --> 00:03:45,040
different

90
00:03:45,040 --> 00:03:47,519
security policies that that focus on

91
00:03:47,519 --> 00:03:50,319
preventing and detecting attacks

92
00:03:50,319 --> 00:03:52,159
may not be

93
00:03:52,159 --> 00:03:53,519
uh

94
00:03:53,519 --> 00:03:55,519
may not be effective

95
00:03:55,519 --> 00:03:56,560
if

96
00:03:56,560 --> 00:03:58,799
uh if the

97
00:03:58,799 --> 00:04:02,159
the system or the network is uh

98
00:04:02,159 --> 00:04:04,720
is already compromised so

99
00:04:04,720 --> 00:04:06,000
it also

100
00:04:06,000 --> 00:04:10,080
also helps different organizations to

101
00:04:10,080 --> 00:04:13,200
identify what they're lacking in and

102
00:04:13,200 --> 00:04:16,720
put it in their security roadmap to

103
00:04:16,720 --> 00:04:18,720
to say that

104
00:04:18,720 --> 00:04:20,959
they are at the

105
00:04:20,959 --> 00:04:24,160
the average level of security maturity

106
00:04:24,160 --> 00:04:27,600
that they can ensure their customers

107
00:04:27,600 --> 00:04:29,919
that uh no one

108
00:04:29,919 --> 00:04:31,199
uh

109
00:04:31,199 --> 00:04:33,040
they're they're not going to be

110
00:04:33,040 --> 00:04:36,320
compromised that easily

111
00:04:36,800 --> 00:04:38,000
all right

112
00:04:38,000 --> 00:04:40,000
so in brief um

113
00:04:40,000 --> 00:04:41,520
we'll have

114
00:04:41,520 --> 00:04:42,880
a short

115
00:04:42,880 --> 00:04:45,520
explanation about penetration testing

116
00:04:45,520 --> 00:04:48,080
versus vulnerability assessment because

117
00:04:48,080 --> 00:04:50,960
most people tend to

118
00:04:50,960 --> 00:04:54,080
mix up these two

119
00:04:54,160 --> 00:04:57,840
so a vulnerability assessment involves

120
00:04:57,840 --> 00:05:00,400
vulnerability identification use of

121
00:05:00,400 --> 00:05:02,560
automated tools

122
00:05:02,560 --> 00:05:05,360
um this may not be backed with actual

123
00:05:05,360 --> 00:05:07,280
exploitation

124
00:05:07,280 --> 00:05:10,800
it may include false positives

125
00:05:10,800 --> 00:05:12,479
so

126
00:05:12,479 --> 00:05:13,759
it's basically

127
00:05:13,759 --> 00:05:17,120
kind of uh an assessment on what

128
00:05:17,120 --> 00:05:19,600
possible vulnerabilities there are that

129
00:05:19,600 --> 00:05:22,240
are lying in the enterprise system or

130
00:05:22,240 --> 00:05:25,919
network or application whatsoever

131
00:05:25,919 --> 00:05:26,720
so

132
00:05:26,720 --> 00:05:27,759
there's

133
00:05:27,759 --> 00:05:30,000
there's going to be a lot of false

134
00:05:30,000 --> 00:05:31,680
positives

135
00:05:31,680 --> 00:05:33,520
most likely because

136
00:05:33,520 --> 00:05:36,000
it only checks the rules based on based

137
00:05:36,000 --> 00:05:39,320
on the script

138
00:05:39,759 --> 00:05:40,880
meanwhile

139
00:05:40,880 --> 00:05:42,479
penetration testing has the same

140
00:05:42,479 --> 00:05:45,840
elements but the difference is there are

141
00:05:45,840 --> 00:05:48,720
dedicated tools or exploits and there is

142
00:05:48,720 --> 00:05:50,840
an attempt for

143
00:05:50,840 --> 00:05:53,039
exploitation there are

144
00:05:53,039 --> 00:05:55,680
there are also similar proof of concepts

145
00:05:55,680 --> 00:05:57,039
that

146
00:05:57,039 --> 00:05:59,039
are generated to

147
00:05:59,039 --> 00:06:00,720
make sure that

148
00:06:00,720 --> 00:06:02,800
um

149
00:06:02,800 --> 00:06:05,039
this serve as evidence

150
00:06:05,039 --> 00:06:08,160
that the system has been compromised or

151
00:06:08,160 --> 00:06:10,319
is uh

152
00:06:10,319 --> 00:06:13,360
is is vulnerable to to

153
00:06:13,360 --> 00:06:15,840
the vulnerability identified

154
00:06:15,840 --> 00:06:17,680
it's it's proved that

155
00:06:17,680 --> 00:06:20,720
the hackers leverage the vulnerability

156
00:06:20,720 --> 00:06:24,240
into gaining access to the machine

157
00:06:25,520 --> 00:06:27,680
all right so next we'll go to

158
00:06:27,680 --> 00:06:30,080
vulnerabilities methodologies and and

159
00:06:30,080 --> 00:06:32,880
the different technologies

160
00:06:32,880 --> 00:06:36,240
so the first and foremost the definition

161
00:06:36,240 --> 00:06:38,479
of a vulnerability

162
00:06:38,479 --> 00:06:41,680
so there are a lot of

163
00:06:41,680 --> 00:06:43,440
vulnerability definitions scattered

164
00:06:43,440 --> 00:06:45,039
across the internet

165
00:06:45,039 --> 00:06:46,479
here are

166
00:06:46,479 --> 00:06:50,080
some of them um as per

167
00:06:50,080 --> 00:06:52,639
the computer emergency response team uh

168
00:06:52,639 --> 00:06:56,240
it's regarded as a software defect

169
00:06:56,240 --> 00:06:59,120
as as per the bug bounty platform hacker

170
00:06:59,120 --> 00:07:02,240
one it's a software bug

171
00:07:02,240 --> 00:07:04,960
as for microsoft it's a weakness in in

172
00:07:04,960 --> 00:07:08,160
the cia of of the application or the

173
00:07:08,160 --> 00:07:09,680
system which

174
00:07:09,680 --> 00:07:12,160
which means

175
00:07:12,160 --> 00:07:14,000
the cia is

176
00:07:14,000 --> 00:07:15,680
confidentiality

177
00:07:15,680 --> 00:07:19,680
integrity and availability

178
00:07:19,919 --> 00:07:21,360
it's also

179
00:07:21,360 --> 00:07:23,759
the same definition

180
00:07:23,759 --> 00:07:27,039
it's also weakness according to the nist

181
00:07:27,039 --> 00:07:29,520
but it's a weakness in logic

182
00:07:29,520 --> 00:07:32,160
and as per isaka

183
00:07:32,160 --> 00:07:34,479
it's a weakness in design and an

184
00:07:34,479 --> 00:07:38,159
implementation of an application

185
00:07:39,599 --> 00:07:40,800
so

186
00:07:40,800 --> 00:07:42,720
there are a lot of vulnerabilities there

187
00:07:42,720 --> 00:07:45,840
are a lot of types of vulnerabilities

188
00:07:45,840 --> 00:07:48,080
that you'll encounter

189
00:07:48,080 --> 00:07:49,759
sooner or later

190
00:07:49,759 --> 00:07:53,199
but the most common ones are

191
00:07:53,199 --> 00:07:55,919
going to be presented here so

192
00:07:55,919 --> 00:07:58,160
you'll probably hear you've probably

193
00:07:58,160 --> 00:07:59,840
heard a lot of these

194
00:07:59,840 --> 00:08:03,840
already since you came to the talk so

195
00:08:03,840 --> 00:08:05,199
first one would be

196
00:08:05,199 --> 00:08:07,280
remote code execution

197
00:08:07,280 --> 00:08:09,520
so remote code execution

198
00:08:09,520 --> 00:08:11,039
is

199
00:08:11,039 --> 00:08:14,800
the execution of of commands

200
00:08:14,800 --> 00:08:17,440
remotely

201
00:08:17,759 --> 00:08:19,840
so

202
00:08:19,840 --> 00:08:21,039
if

203
00:08:21,039 --> 00:08:22,319
let's say

204
00:08:22,319 --> 00:08:24,879
you compromise the system and you're

205
00:08:24,879 --> 00:08:27,520
sending you're sending different

206
00:08:27,520 --> 00:08:30,479
commands via a vulnerable segment in the

207
00:08:30,479 --> 00:08:32,320
application

208
00:08:32,320 --> 00:08:33,360
and

209
00:08:33,360 --> 00:08:35,839
it runs operating system level commands

210
00:08:35,839 --> 00:08:38,479
or or

211
00:08:38,640 --> 00:08:39,950
runs it runs the

212
00:08:39,950 --> 00:08:41,200
[Music]

213
00:08:41,200 --> 00:08:44,080
programming language that

214
00:08:44,080 --> 00:08:46,240
you pick for example over here in the

215
00:08:46,240 --> 00:08:48,560
screenshot

216
00:08:48,560 --> 00:08:50,480
we have a

217
00:08:50,480 --> 00:08:55,040
a php remote code execution um

218
00:08:55,040 --> 00:08:56,320
example

219
00:08:56,320 --> 00:08:58,800
so as you can see the php code includes

220
00:08:58,800 --> 00:09:00,480
echo shell exec

221
00:09:00,480 --> 00:09:02,560
and it gets cmd

222
00:09:02,560 --> 00:09:04,880
so it's cmd because the target is

223
00:09:04,880 --> 00:09:05,839
windows

224
00:09:05,839 --> 00:09:08,480
so it's going to spawn a command prompt

225
00:09:08,480 --> 00:09:11,279
and on the command prompt of course most

226
00:09:11,279 --> 00:09:12,800
of you all know there are a lot of

227
00:09:12,800 --> 00:09:14,480
things to do

228
00:09:14,480 --> 00:09:16,399
because it's the equivalent of the

229
00:09:16,399 --> 00:09:19,440
terminal in linux

230
00:09:19,600 --> 00:09:20,959
so the way that

231
00:09:20,959 --> 00:09:23,680
that this vulnerability works is there's

232
00:09:23,680 --> 00:09:26,720
a client and there's a server of course

233
00:09:26,720 --> 00:09:28,560
it wouldn't be remote if it's just

234
00:09:28,560 --> 00:09:29,839
one-sided

235
00:09:29,839 --> 00:09:31,040
so client

236
00:09:31,040 --> 00:09:35,199
sends a request to the server

237
00:09:35,279 --> 00:09:36,880
and

238
00:09:36,880 --> 00:09:39,279
within that request is

239
00:09:39,279 --> 00:09:40,320
uh

240
00:09:40,320 --> 00:09:42,000
the command that

241
00:09:42,000 --> 00:09:45,279
the client wants the server to execute

242
00:09:45,279 --> 00:09:47,839
so the server then responds with

243
00:09:47,839 --> 00:09:50,000
the appropriate command if the remote

244
00:09:50,000 --> 00:09:54,160
code execution was successful

245
00:09:54,160 --> 00:09:56,399
now

246
00:09:56,959 --> 00:10:00,480
we use cmd date to check if if the

247
00:10:00,480 --> 00:10:03,600
server is actually responding to

248
00:10:03,600 --> 00:10:06,160
operating system level commands

249
00:10:06,160 --> 00:10:07,200
and

250
00:10:07,200 --> 00:10:08,959
the server returned with the current

251
00:10:08,959 --> 00:10:11,199
date

252
00:10:11,360 --> 00:10:15,760
so what if we try to execute a malicious

253
00:10:15,760 --> 00:10:17,120
malicious

254
00:10:17,120 --> 00:10:20,160
command like dir

255
00:10:20,160 --> 00:10:23,279
so dir lists the directories and files

256
00:10:23,279 --> 00:10:24,880
that are in the

257
00:10:24,880 --> 00:10:26,880
present working directory

258
00:10:26,880 --> 00:10:28,240
on windows

259
00:10:28,240 --> 00:10:30,640
so it's it's

260
00:10:30,640 --> 00:10:33,120
it can be used maliciously because uh it

261
00:10:33,120 --> 00:10:35,600
gives an attacker the

262
00:10:35,600 --> 00:10:38,480
file structure of

263
00:10:38,480 --> 00:10:40,320
the present working directory also

264
00:10:40,320 --> 00:10:42,720
allows the attacker to crawl around and

265
00:10:42,720 --> 00:10:44,480
see

266
00:10:44,480 --> 00:10:45,680
whether

267
00:10:45,680 --> 00:10:48,160
different files are

268
00:10:48,160 --> 00:10:50,959
accessible or whether

269
00:10:50,959 --> 00:10:53,519
he can exfiltrate other

270
00:10:53,519 --> 00:10:55,519
sensitive data

271
00:10:55,519 --> 00:10:56,959
so

272
00:10:56,959 --> 00:10:58,720
assuming that

273
00:10:58,720 --> 00:11:02,480
cmd date work we'll try cmd dir

274
00:11:02,480 --> 00:11:04,160
which return

275
00:11:04,160 --> 00:11:05,120
the

276
00:11:05,120 --> 00:11:07,519
directory contents

277
00:11:07,519 --> 00:11:09,680
so over here you'll see that there's a

278
00:11:09,680 --> 00:11:12,839
directory content called

279
00:11:12,839 --> 00:11:16,480
index.php.html dot text and another.php

280
00:11:16,480 --> 00:11:17,760
file

281
00:11:17,760 --> 00:11:18,800
so

282
00:11:18,800 --> 00:11:21,839
uh remote code execution in

283
00:11:21,839 --> 00:11:25,440
in general is very very simple

284
00:11:25,760 --> 00:11:26,839
you as a

285
00:11:26,839 --> 00:11:29,440
client remotely

286
00:11:29,440 --> 00:11:31,519
executing code on the server which

287
00:11:31,519 --> 00:11:33,519
shouldn't happen because you don't have

288
00:11:33,519 --> 00:11:36,320
authorization

289
00:11:36,320 --> 00:11:38,320
so another example for remote code

290
00:11:38,320 --> 00:11:41,279
execution an actual example is

291
00:11:41,279 --> 00:11:44,640
uh the drupal exploit uh called

292
00:11:44,640 --> 00:11:46,480
propogadon 2

293
00:11:46,480 --> 00:11:49,360
way back 2017 2018

294
00:11:49,360 --> 00:11:52,160
so as you can see over here um the

295
00:11:52,160 --> 00:11:54,079
exploit is

296
00:11:54,079 --> 00:11:57,440
using the echo command to test if

297
00:11:57,440 --> 00:12:00,800
remote code execution is is

298
00:12:00,800 --> 00:12:03,040
exploitable or the vulnerability is

299
00:12:03,040 --> 00:12:04,959
explainable to

300
00:12:04,959 --> 00:12:06,639
against the stack

301
00:12:06,639 --> 00:12:07,440
so

302
00:12:07,440 --> 00:12:09,440
as you can see on the highlighted

303
00:12:09,440 --> 00:12:10,560
red

304
00:12:10,560 --> 00:12:13,360
the echo command and on the highlighted

305
00:12:13,360 --> 00:12:14,480
yellow

306
00:12:14,480 --> 00:12:16,399
um

307
00:12:16,399 --> 00:12:18,320
it got the result

308
00:12:18,320 --> 00:12:20,079
of

309
00:12:20,079 --> 00:12:23,040
the echo command from from cmd so after

310
00:12:23,040 --> 00:12:25,760
that the tool deemed that

311
00:12:25,760 --> 00:12:29,040
this is uh explainable for remote code

312
00:12:29,040 --> 00:12:31,680
execution

313
00:12:34,320 --> 00:12:35,760
right so

314
00:12:35,760 --> 00:12:38,560
basically uh code execution is is very

315
00:12:38,560 --> 00:12:40,160
very simple

316
00:12:40,160 --> 00:12:42,240
this is just a straightforward example

317
00:12:42,240 --> 00:12:45,440
there are lots of of ways of

318
00:12:45,440 --> 00:12:47,200
how vulnerabilities are going to be

319
00:12:47,200 --> 00:12:49,200
exploited how you're going to leverage

320
00:12:49,200 --> 00:12:50,880
these vulnerabilities

321
00:12:50,880 --> 00:12:54,480
so moving on to the next vulnerability

322
00:12:54,480 --> 00:12:55,440
uh

323
00:12:55,440 --> 00:12:57,760
denial of service i'm pretty sure you've

324
00:12:57,760 --> 00:13:01,040
heard of this a lot because uh it's it's

325
00:13:01,040 --> 00:13:03,600
one of the most common attacks that that

326
00:13:03,600 --> 00:13:06,480
anyone can can make and the

327
00:13:06,480 --> 00:13:09,279
information security industry

328
00:13:09,279 --> 00:13:11,360
so denial of service

329
00:13:11,360 --> 00:13:15,040
via resource exhaustion is is

330
00:13:15,040 --> 00:13:18,959
a type of denial of service which

331
00:13:19,440 --> 00:13:22,320
which spends the resources of the client

332
00:13:22,320 --> 00:13:24,800
or the server

333
00:13:24,800 --> 00:13:27,920
in order for it to be inaccessible

334
00:13:27,920 --> 00:13:30,079
so

335
00:13:30,560 --> 00:13:35,040
this is a java applet that

336
00:13:35,200 --> 00:13:40,000
that basically is a a map

337
00:13:40,160 --> 00:13:42,399
so it's it's downloadable

338
00:13:42,399 --> 00:13:46,639
easy to reverse engineer or decompile

339
00:13:46,639 --> 00:13:49,199
and once you decompile the code since

340
00:13:49,199 --> 00:13:52,560
it's a java applet you can use

341
00:13:52,560 --> 00:13:56,160
jd gui or jdx to decompile this and

342
00:13:56,160 --> 00:13:58,000
browse the source code

343
00:13:58,000 --> 00:13:59,600
um

344
00:13:59,600 --> 00:14:03,199
you'll see over here that there's a

345
00:14:03,199 --> 00:14:05,680
integer

346
00:14:06,079 --> 00:14:07,519
that's

347
00:14:07,519 --> 00:14:10,160
tagged with

348
00:14:10,399 --> 00:14:12,880
the anti-carton value

349
00:14:12,880 --> 00:14:14,839
so k1 is

350
00:14:14,839 --> 00:14:16,480
also

351
00:14:16,480 --> 00:14:19,600
uh used in in the for loop which is

352
00:14:19,600 --> 00:14:20,880
basically

353
00:14:20,880 --> 00:14:23,760
uh going to run

354
00:14:23,760 --> 00:14:26,240
depending on the value of

355
00:14:26,240 --> 00:14:29,440
the under carbon global value

356
00:14:29,440 --> 00:14:33,360
so what if we change the global variable

357
00:14:33,360 --> 00:14:34,880
uh value to

358
00:14:34,880 --> 00:14:38,399
something like you know 10 million

359
00:14:38,399 --> 00:14:40,880
so the loop is going to run 10 million

360
00:14:40,880 --> 00:14:43,519
times before before it finishes

361
00:14:43,519 --> 00:14:46,800
10 million if if it's uh

362
00:14:46,800 --> 00:14:47,680
it's

363
00:14:47,680 --> 00:14:51,120
probably something that

364
00:14:51,839 --> 00:14:52,959
that's

365
00:14:52,959 --> 00:14:53,760
uh

366
00:14:53,760 --> 00:14:56,560
computing heavy uh it's not going to be

367
00:14:56,560 --> 00:15:00,079
an easy task to perform so it's going to

368
00:15:00,079 --> 00:15:03,199
spend resources way more

369
00:15:03,199 --> 00:15:04,399
rather than

370
00:15:04,399 --> 00:15:08,160
the the intended

371
00:15:09,519 --> 00:15:11,760
so over here after changing the value 10

372
00:15:11,760 --> 00:15:14,320
million you can see that cpus is just

373
00:15:14,320 --> 00:15:16,480
spiked up to 100 percent

374
00:15:16,480 --> 00:15:19,600
which means i can't do anything to my

375
00:15:19,600 --> 00:15:22,079
computer

376
00:15:22,320 --> 00:15:24,560
because you know what the cpu uses is

377
00:15:24,560 --> 00:15:27,199
100 if if i'm going to try to do any

378
00:15:27,199 --> 00:15:29,199
other thing it's going to be

379
00:15:29,199 --> 00:15:31,279
awfully slow

380
00:15:31,279 --> 00:15:33,360
so basically

381
00:15:33,360 --> 00:15:36,399
i've exhausted my resources on

382
00:15:36,399 --> 00:15:40,320
upon opening the the map application

383
00:15:40,320 --> 00:15:41,759
that

384
00:15:41,759 --> 00:15:43,839
i'm not going to be able to access the

385
00:15:43,839 --> 00:15:44,639
map

386
00:15:44,639 --> 00:15:46,399
at the same time i'm not going to be

387
00:15:46,399 --> 00:15:48,880
able to access any other

388
00:15:48,880 --> 00:15:50,240
application

389
00:15:50,240 --> 00:15:52,480
that's readily available to me because

390
00:15:52,480 --> 00:15:55,440
uh 100 of my

391
00:15:55,440 --> 00:15:58,880
cpu has been spent

392
00:16:00,320 --> 00:16:02,240
here you can see the proof that it's

393
00:16:02,240 --> 00:16:03,360
taking up

394
00:16:03,360 --> 00:16:04,720
98

395
00:16:04,720 --> 00:16:06,480
of the cpu

396
00:16:06,480 --> 00:16:09,279
it's a java applet

397
00:16:09,279 --> 00:16:12,480
so the way this works

398
00:16:13,519 --> 00:16:15,120
is

399
00:16:15,120 --> 00:16:17,759
if we're going to weaponize it

400
00:16:17,759 --> 00:16:20,720
we have for example two remote users an

401
00:16:20,720 --> 00:16:22,399
attacker and then of course the web

402
00:16:22,399 --> 00:16:25,120
server that serves the application

403
00:16:25,120 --> 00:16:27,040
so the remote users

404
00:16:27,040 --> 00:16:28,880
ask for the map

405
00:16:28,880 --> 00:16:30,959
the attacker injects

406
00:16:30,959 --> 00:16:32,560
the

407
00:16:32,560 --> 00:16:33,759
new

408
00:16:33,759 --> 00:16:35,519
high value

409
00:16:35,519 --> 00:16:37,040
on

410
00:16:37,040 --> 00:16:38,000
the

411
00:16:38,000 --> 00:16:41,440
uh on the application

412
00:16:41,440 --> 00:16:44,000
right so he changes the anti-carbon

413
00:16:44,000 --> 00:16:46,079
value to 10 million which makes the for

414
00:16:46,079 --> 00:16:49,440
loop iterate 10 million times

415
00:16:49,440 --> 00:16:52,160
now when the web server

416
00:16:52,160 --> 00:16:53,759
receives the

417
00:16:53,759 --> 00:16:56,480
new value

418
00:16:57,360 --> 00:16:59,440
of course the remote users that

419
00:16:59,440 --> 00:17:01,839
requested the map

420
00:17:01,839 --> 00:17:03,440
are going to be

421
00:17:03,440 --> 00:17:04,559
shipped out

422
00:17:04,559 --> 00:17:06,240
the malicious application that will

423
00:17:06,240 --> 00:17:09,359
exhaust their resources so

424
00:17:09,359 --> 00:17:13,198
once the web server gives the map

425
00:17:13,439 --> 00:17:15,199
of course

426
00:17:15,199 --> 00:17:17,760
the remote users are going to have to

427
00:17:17,760 --> 00:17:19,679
deal with uh their

428
00:17:19,679 --> 00:17:20,799
their

429
00:17:20,799 --> 00:17:22,720
cpus

430
00:17:22,720 --> 00:17:26,559
spiking up to 100 usage and it exhausts

431
00:17:26,559 --> 00:17:28,079
their resources

432
00:17:28,079 --> 00:17:31,760
so that they they can't use any other

433
00:17:31,760 --> 00:17:35,200
any other application in their computer

434
00:17:35,200 --> 00:17:37,200
so this is a denial of service via

435
00:17:37,200 --> 00:17:39,760
resource exhaustion

436
00:17:39,760 --> 00:17:42,320
basically it denies the service

437
00:17:42,320 --> 00:17:43,679
by

438
00:17:43,679 --> 00:17:47,600
spending the client resources instead of

439
00:17:47,600 --> 00:17:48,400
just

440
00:17:48,400 --> 00:17:51,600
bringing down the web server

441
00:17:52,640 --> 00:17:56,480
right so going ahead um we have tools

442
00:17:56,480 --> 00:17:58,640
different tools that

443
00:17:58,640 --> 00:17:59,679
make up

444
00:17:59,679 --> 00:18:01,120
the usual

445
00:18:01,120 --> 00:18:02,799
arsenal

446
00:18:02,799 --> 00:18:05,679
uh first one would be enough so enough

447
00:18:05,679 --> 00:18:07,039
is pretty

448
00:18:07,039 --> 00:18:09,600
important for you because uh this is

449
00:18:09,600 --> 00:18:11,840
going to be your

450
00:18:11,840 --> 00:18:12,640
uh

451
00:18:12,640 --> 00:18:15,039
one of your go-to

452
00:18:15,039 --> 00:18:16,559
recon

453
00:18:16,559 --> 00:18:18,240
recon tools

454
00:18:18,240 --> 00:18:20,240
so nmap gives you

455
00:18:20,240 --> 00:18:22,400
a

456
00:18:22,480 --> 00:18:24,480
a high level

457
00:18:24,480 --> 00:18:28,400
output of of what ports are running uh

458
00:18:28,400 --> 00:18:31,360
is it open closed so the state what

459
00:18:31,360 --> 00:18:33,679
service is running on the specific port

460
00:18:33,679 --> 00:18:34,640
and

461
00:18:34,640 --> 00:18:37,919
uh if you if it can uh it detects uh

462
00:18:37,919 --> 00:18:40,799
what version and what application is

463
00:18:40,799 --> 00:18:43,120
running behind that port

464
00:18:43,120 --> 00:18:46,160
uh nmap can also

465
00:18:46,160 --> 00:18:47,360
return

466
00:18:47,360 --> 00:18:51,440
uh operating systems uh users and many

467
00:18:51,440 --> 00:18:53,440
more

468
00:18:53,440 --> 00:18:55,919
next would be netcat so netcat is

469
00:18:55,919 --> 00:18:58,880
commonly used to interact with different

470
00:18:58,880 --> 00:19:02,720
ports and uh open

471
00:19:03,360 --> 00:19:05,600
listeners or

472
00:19:05,600 --> 00:19:08,400
connect to to listening ports

473
00:19:08,400 --> 00:19:11,039
right so nmap is

474
00:19:11,039 --> 00:19:12,240
and and

475
00:19:12,240 --> 00:19:13,760
netcat is

476
00:19:13,760 --> 00:19:15,840
uh

477
00:19:15,840 --> 00:19:17,200
mostly used

478
00:19:17,200 --> 00:19:19,440
to open up uh

479
00:19:19,440 --> 00:19:21,039
to make

480
00:19:21,039 --> 00:19:23,360
vine shells or reverse shells

481
00:19:23,360 --> 00:19:26,000
so when when the target interacts with

482
00:19:26,000 --> 00:19:28,559
the attacker and the attacker

483
00:19:28,559 --> 00:19:30,480
interacts with the target so on and so

484
00:19:30,480 --> 00:19:32,720
forth

485
00:19:33,679 --> 00:19:34,559
so

486
00:19:34,559 --> 00:19:35,919
what are these

487
00:19:35,919 --> 00:19:39,440
these shells um of course first one

488
00:19:39,440 --> 00:19:41,919
would be bind shell

489
00:19:41,919 --> 00:19:43,600
so

490
00:19:43,600 --> 00:19:44,400
uh

491
00:19:44,400 --> 00:19:47,039
a bind shell is is

492
00:19:47,039 --> 00:19:49,760
kind of like a remote code

493
00:19:49,760 --> 00:19:52,720
execution vulnerability

494
00:19:52,720 --> 00:19:55,520
um it's it's very similar

495
00:19:55,520 --> 00:19:56,720
but

496
00:19:56,720 --> 00:19:58,799
you're directly interacting with with

497
00:19:58,799 --> 00:20:00,559
the machine itself

498
00:20:00,559 --> 00:20:03,760
right so you can open up shells to

499
00:20:03,760 --> 00:20:06,559
access the target remotely

500
00:20:06,559 --> 00:20:08,640
and execute codes

501
00:20:08,640 --> 00:20:13,120
remotely so a bind shell works by

502
00:20:13,120 --> 00:20:15,280
an attacker sending an exploit to the

503
00:20:15,280 --> 00:20:17,678
target

504
00:20:17,840 --> 00:20:20,480
and the exploit would contain something

505
00:20:20,480 --> 00:20:23,720
like open port 4444 and serve

506
00:20:23,720 --> 00:20:27,520
cmd.exe on that port

507
00:20:27,600 --> 00:20:28,880
and then

508
00:20:28,880 --> 00:20:31,919
the target would would open that port

509
00:20:31,919 --> 00:20:34,159
and then the attacker would connect to

510
00:20:34,159 --> 00:20:37,120
the listening port that

511
00:20:37,120 --> 00:20:39,520
his x-play is open

512
00:20:39,520 --> 00:20:41,600
so this is going to be

513
00:20:41,600 --> 00:20:43,840
one directional

514
00:20:43,840 --> 00:20:45,840
the attacker is the one that connects to

515
00:20:45,840 --> 00:20:48,240
the target

516
00:20:48,240 --> 00:20:49,280
whereas

517
00:20:49,280 --> 00:20:51,039
the reverse shell

518
00:20:51,039 --> 00:20:53,440
we also have two clients

519
00:20:53,440 --> 00:20:55,520
but

520
00:20:55,520 --> 00:20:56,880
in in this

521
00:20:56,880 --> 00:20:59,360
in this scenario the attacker is the one

522
00:20:59,360 --> 00:21:02,640
that opens a listening port and then

523
00:21:02,640 --> 00:21:04,159
sends the exploit

524
00:21:04,159 --> 00:21:06,960
now the exploit contains

525
00:21:06,960 --> 00:21:08,320
uh

526
00:21:08,320 --> 00:21:10,720
code that makes the target connect to

527
00:21:10,720 --> 00:21:13,440
the attacker's ip and

528
00:21:13,440 --> 00:21:15,520
its port

529
00:21:15,520 --> 00:21:17,039
um

530
00:21:17,039 --> 00:21:19,840
basically it's called reverse because uh

531
00:21:19,840 --> 00:21:21,840
the rules are reversed so the target is

532
00:21:21,840 --> 00:21:25,360
the one that connects to the attacker

533
00:21:26,240 --> 00:21:29,280
right next is dirt so derp is basically

534
00:21:29,280 --> 00:21:31,600
your uh fuzzer um

535
00:21:31,600 --> 00:21:35,120
direct directory brute forcer for

536
00:21:35,120 --> 00:21:38,559
web applications uh derby's is still

537
00:21:38,559 --> 00:21:40,080
okay i guess

538
00:21:40,080 --> 00:21:42,240
but there are a lot of

539
00:21:42,240 --> 00:21:44,880
faster alternatives right now like grow

540
00:21:44,880 --> 00:21:47,919
buster dirtbuster

541
00:21:47,919 --> 00:21:51,120
and deersearch and and many more

542
00:21:51,120 --> 00:21:53,520
so if if you have

543
00:21:53,520 --> 00:21:56,000
if you have

544
00:21:56,400 --> 00:21:58,880
a different tool that's that's okay it's

545
00:21:58,880 --> 00:22:01,440
it's not going to matter uh i mean

546
00:22:01,440 --> 00:22:03,039
different hackers have different

547
00:22:03,039 --> 00:22:04,799
toolkits

548
00:22:04,799 --> 00:22:06,400
to each his own

549
00:22:06,400 --> 00:22:08,480
tools only help you

550
00:22:08,480 --> 00:22:10,400
achieve your goal

551
00:22:10,400 --> 00:22:12,640
and is not going to be a basis of your

552
00:22:12,640 --> 00:22:14,720
skill set

553
00:22:14,720 --> 00:22:17,120
it's it's always going to be

554
00:22:17,120 --> 00:22:20,720
how you operate it how you use it and

555
00:22:20,720 --> 00:22:24,000
what's possible to do with it

556
00:22:24,880 --> 00:22:28,559
right so next would be um sql map so sql

557
00:22:28,559 --> 00:22:32,240
map is is an automated sql injection

558
00:22:32,240 --> 00:22:34,480
um

559
00:22:34,480 --> 00:22:36,799
assessment

560
00:22:36,799 --> 00:22:37,600
tool

561
00:22:37,600 --> 00:22:38,640
so

562
00:22:38,640 --> 00:22:41,840
uh it tests for for vulnerable

563
00:22:41,840 --> 00:22:45,679
parameters of vulnerable urls

564
00:22:45,679 --> 00:22:48,960
checks whether whether

565
00:22:49,039 --> 00:22:51,120
an application is

566
00:22:51,120 --> 00:22:54,400
is susceptible to a an sql injection

567
00:22:54,400 --> 00:22:55,919
attack

568
00:22:55,919 --> 00:22:57,919
so it's automated but

569
00:22:57,919 --> 00:23:00,799
yours you can also have these manual

570
00:23:00,799 --> 00:23:02,640
flags and

571
00:23:02,640 --> 00:23:05,360
i can also

572
00:23:05,600 --> 00:23:08,720
put in custom exploits with it

573
00:23:08,720 --> 00:23:11,039
this is usually used for for web

574
00:23:11,039 --> 00:23:13,919
applications also

575
00:23:14,000 --> 00:23:18,400
all right next hydra so hydra is is a

576
00:23:18,400 --> 00:23:21,360
directory brute forcer i mean a brute

577
00:23:21,360 --> 00:23:23,600
forcer in general not just a directory

578
00:23:23,600 --> 00:23:26,880
so it can it can conduct password sprays

579
00:23:26,880 --> 00:23:28,559
uh

580
00:23:28,559 --> 00:23:31,919
it can conduct uh brute forcing login

581
00:23:31,919 --> 00:23:34,720
brute forcing uh it can also

582
00:23:34,720 --> 00:23:38,640
be your directory fuzzer if you want but

583
00:23:38,640 --> 00:23:41,919
mostly it's it's uh it's used for for

584
00:23:41,919 --> 00:23:44,480
logins

585
00:23:44,640 --> 00:23:47,840
so over here you can see that it's

586
00:23:47,840 --> 00:23:49,520
it's

587
00:23:49,520 --> 00:23:51,679
hooked to

588
00:23:51,679 --> 00:23:53,600
connecting to a

589
00:23:53,600 --> 00:23:55,200
port a

590
00:23:55,200 --> 00:23:59,840
service and is is spraying different

591
00:23:59,840 --> 00:24:05,000
login combinations the username password

592
00:24:05,279 --> 00:24:08,000
all right next is openvas so openvas is

593
00:24:08,000 --> 00:24:10,400
an open source vulnerability assessment

594
00:24:10,400 --> 00:24:13,120
platform it's a scanner

595
00:24:13,120 --> 00:24:15,120
so it it's uh

596
00:24:15,120 --> 00:24:18,000
it's a platform that that scans for

597
00:24:18,000 --> 00:24:20,080
different vulnerabilities potential

598
00:24:20,080 --> 00:24:23,039
vulnerabilities if i may add

599
00:24:23,039 --> 00:24:24,559
and

600
00:24:24,559 --> 00:24:27,760
it gives the the user an idea of what

601
00:24:27,760 --> 00:24:30,080
possible vulnerabilities there are that

602
00:24:30,080 --> 00:24:33,360
exists in the system so after after

603
00:24:33,360 --> 00:24:35,600
scanning with open bas you can you can

604
00:24:35,600 --> 00:24:36,640
try to

605
00:24:36,640 --> 00:24:38,240
to leverage

606
00:24:38,240 --> 00:24:40,559
these different vulnerabilities

607
00:24:40,559 --> 00:24:45,120
try for a poc or or try to execute

608
00:24:45,760 --> 00:24:48,320
but again you'll have to verify manually

609
00:24:48,320 --> 00:24:49,360
because

610
00:24:49,360 --> 00:24:50,400
this is

611
00:24:50,400 --> 00:24:51,760
this is a

612
00:24:51,760 --> 00:24:54,159
vulnerability scanner only

613
00:24:54,159 --> 00:24:57,520
it's it's not going to give you 100

614
00:24:57,520 --> 00:24:59,760
uh

615
00:24:59,760 --> 00:25:03,039
success rate on on each uh vulnerability

616
00:25:03,039 --> 00:25:04,480
at the text

617
00:25:04,480 --> 00:25:06,640
not everything will be exploitable uh

618
00:25:06,640 --> 00:25:10,240
some will be false positives

619
00:25:10,400 --> 00:25:13,360
all right so next is is a swiss knife

620
00:25:13,360 --> 00:25:15,600
for web application security testers

621
00:25:15,600 --> 00:25:18,400
called burp suite

622
00:25:18,400 --> 00:25:19,360
the main

623
00:25:19,360 --> 00:25:21,840
function of this is to intercept

624
00:25:21,840 --> 00:25:22,799
and

625
00:25:22,799 --> 00:25:25,840
tamper with with requests

626
00:25:25,840 --> 00:25:27,360
so you can also

627
00:25:27,360 --> 00:25:29,520
you can also

628
00:25:29,520 --> 00:25:31,120
brute force this

629
00:25:31,120 --> 00:25:33,600
using the intruder i

630
00:25:33,600 --> 00:25:35,039
also easily

631
00:25:35,039 --> 00:25:38,159
resend requests using the repeater

632
00:25:38,159 --> 00:25:40,159
sequencers

633
00:25:40,159 --> 00:25:42,159
you can also use the coder uh you can

634
00:25:42,159 --> 00:25:44,799
also use collaborator so there are a lot

635
00:25:44,799 --> 00:25:47,679
of tools within this this application

636
00:25:47,679 --> 00:25:49,440
that most web application security

637
00:25:49,440 --> 00:25:52,000
testers use and is very very vital if

638
00:25:52,000 --> 00:25:55,799
you're testing web applications

639
00:25:56,720 --> 00:25:59,279
right so next would be a responder so

640
00:25:59,279 --> 00:26:01,120
responder is mainly used on network

641
00:26:01,120 --> 00:26:03,760
penetration testing engagements uh

642
00:26:03,760 --> 00:26:05,039
say

643
00:26:05,039 --> 00:26:09,440
nbtns lemonr and mdns responder

644
00:26:09,440 --> 00:26:13,200
can also be used as smb relays

645
00:26:13,200 --> 00:26:16,080
mtlm relays

646
00:26:16,080 --> 00:26:20,159
smb you can you can host fake smb shares

647
00:26:20,159 --> 00:26:23,279
to get credentials

648
00:26:23,279 --> 00:26:25,520
and uh you can

649
00:26:25,520 --> 00:26:27,039
try to

650
00:26:27,039 --> 00:26:29,279
uh

651
00:26:30,240 --> 00:26:31,360
poison

652
00:26:31,360 --> 00:26:32,240
the

653
00:26:32,240 --> 00:26:33,200
the

654
00:26:33,200 --> 00:26:35,279
internal network with it

655
00:26:35,279 --> 00:26:37,760
and then try to gain more uh more

656
00:26:37,760 --> 00:26:39,520
information about

657
00:26:39,520 --> 00:26:41,679
the users

658
00:26:41,679 --> 00:26:45,440
the the available smb shares

659
00:26:45,440 --> 00:26:49,919
which ones access which etc etc

660
00:26:50,880 --> 00:26:53,440
right so next would be uh metasploit so

661
00:26:53,440 --> 00:26:55,840
metasploit is

662
00:26:55,840 --> 00:26:56,799
um

663
00:26:56,799 --> 00:26:58,320
is a

664
00:26:58,320 --> 00:27:00,880
platform that

665
00:27:00,880 --> 00:27:03,679
is an exploitation platform right so it

666
00:27:03,679 --> 00:27:06,559
has a collection of different exploits

667
00:27:06,559 --> 00:27:08,320
payloads

668
00:27:08,320 --> 00:27:11,360
that you can use to

669
00:27:11,360 --> 00:27:13,039
make your life easier

670
00:27:13,039 --> 00:27:15,279
so the exploits are already coded you

671
00:27:15,279 --> 00:27:19,279
just have to set your target and

672
00:27:19,279 --> 00:27:23,120
uh the ip address of

673
00:27:23,120 --> 00:27:24,960
where you want the target to connect if

674
00:27:24,960 --> 00:27:27,840
if you're if you're using a reverse uh

675
00:27:27,840 --> 00:27:29,679
reverse shell

676
00:27:29,679 --> 00:27:32,399
and many many more so basically it makes

677
00:27:32,399 --> 00:27:34,320
your job easier of exploiting the

678
00:27:34,320 --> 00:27:35,760
machine

679
00:27:35,760 --> 00:27:37,919
and getting access to it

680
00:27:37,919 --> 00:27:40,159
instead of manually compiling your own

681
00:27:40,159 --> 00:27:41,200
code

682
00:27:41,200 --> 00:27:43,360
so if it's

683
00:27:43,360 --> 00:27:45,200
if it's already published ready

684
00:27:45,200 --> 00:27:46,960
available you can just

685
00:27:46,960 --> 00:27:49,919
update your metasploit pull the new

686
00:27:49,919 --> 00:27:52,799
express from the database and

687
00:27:52,799 --> 00:27:56,960
see if you can you can get lucky

688
00:27:58,159 --> 00:28:00,399
alright so next would be wireshark so

689
00:28:00,399 --> 00:28:02,640
wireshark is a packet capture analysis

690
00:28:02,640 --> 00:28:03,520
tool

691
00:28:03,520 --> 00:28:06,000
um there are a lot of uses for wireshark

692
00:28:06,000 --> 00:28:08,480
mainly number one for engagements this

693
00:28:08,480 --> 00:28:11,679
can serve as your golden ticket to

694
00:28:11,679 --> 00:28:15,279
get out of jail free so

695
00:28:15,279 --> 00:28:17,840
if if your testing goes wrong and

696
00:28:17,840 --> 00:28:19,440
you're pretty sure that you didn't break

697
00:28:19,440 --> 00:28:21,760
anything you can show them capture these

698
00:28:21,760 --> 00:28:23,840
are the packets i sent

699
00:28:23,840 --> 00:28:26,399
uh it was not made out that brought down

700
00:28:26,399 --> 00:28:28,720
the network um

701
00:28:28,720 --> 00:28:30,960
these these packets are

702
00:28:30,960 --> 00:28:31,840
are

703
00:28:31,840 --> 00:28:34,320
are the ones that i sent this is my

704
00:28:34,320 --> 00:28:36,559
source ip destination ip everything is

705
00:28:36,559 --> 00:28:38,640
recorded et cetera et cetera

706
00:28:38,640 --> 00:28:42,480
i can also use this to

707
00:28:42,880 --> 00:28:45,679
monitor the responses from

708
00:28:45,679 --> 00:28:47,840
from different uh

709
00:28:47,840 --> 00:28:49,600
machines

710
00:28:49,600 --> 00:28:52,720
so this is overall uh this is a very

711
00:28:52,720 --> 00:28:55,360
very useful tool that that can help you

712
00:28:55,360 --> 00:28:59,360
and the network level and

713
00:28:59,360 --> 00:29:00,320
uh

714
00:29:00,320 --> 00:29:01,120
it's

715
00:29:01,120 --> 00:29:04,240
it's widely used along network security

716
00:29:04,240 --> 00:29:06,880
fantastic

717
00:29:07,600 --> 00:29:10,159
next would be hashgat so hashcat is a

718
00:29:10,159 --> 00:29:12,480
password recovery file i mean

719
00:29:12,480 --> 00:29:14,720
application

720
00:29:14,720 --> 00:29:17,600
it basically cracks different hashes

721
00:29:17,600 --> 00:29:20,080
you just have to specify the hash type

722
00:29:20,080 --> 00:29:22,240
and

723
00:29:22,880 --> 00:29:25,600
give it a word list and depending on

724
00:29:25,600 --> 00:29:28,159
your hardware it's going to crack it

725
00:29:28,159 --> 00:29:32,399
really fast or really really slow

726
00:29:33,440 --> 00:29:35,520
right so next would be mimikatz so

727
00:29:35,520 --> 00:29:39,120
mimikatz is a

728
00:29:39,120 --> 00:29:43,600
a go-to tool for red team practitioners

729
00:29:43,600 --> 00:29:46,799
mimikatz is is

730
00:29:46,799 --> 00:29:49,279
what it mainly does is to get

731
00:29:49,279 --> 00:29:50,880
credentials

732
00:29:50,880 --> 00:29:53,760
get credentials

733
00:29:53,760 --> 00:29:57,600
get s ids get

734
00:29:58,080 --> 00:30:01,919
possible tickets forge tickets to to

735
00:30:01,919 --> 00:30:04,559
kerberos uh i've used the kerberos

736
00:30:04,559 --> 00:30:05,919
service

737
00:30:05,919 --> 00:30:08,720
so there's uh

738
00:30:08,720 --> 00:30:12,240
the main the main uh

739
00:30:12,399 --> 00:30:14,799
function of mimikas is to

740
00:30:14,799 --> 00:30:16,960
gain credentials

741
00:30:16,960 --> 00:30:19,840
in in the windows environment

742
00:30:19,840 --> 00:30:21,440
this is

743
00:30:21,440 --> 00:30:23,360
really really exceptional

744
00:30:23,360 --> 00:30:25,520
and this is one of the essentials if

745
00:30:25,520 --> 00:30:28,320
you're going to try to dive into active

746
00:30:28,320 --> 00:30:31,520
directory pen testing

747
00:30:32,960 --> 00:30:37,520
next would be a power split empire

748
00:30:37,520 --> 00:30:40,320
so this is a

749
00:30:41,360 --> 00:30:44,720
post exploitation framework that

750
00:30:44,720 --> 00:30:46,000
most

751
00:30:46,000 --> 00:30:49,200
red teamers used way back

752
00:30:49,200 --> 00:30:50,880
because of

753
00:30:50,880 --> 00:30:52,480
the different

754
00:30:52,480 --> 00:30:54,880
techniques already embedded again this

755
00:30:54,880 --> 00:30:56,240
is

756
00:30:56,240 --> 00:30:58,480
this is for

757
00:30:58,480 --> 00:31:00,799
mostly for for

758
00:31:00,799 --> 00:31:03,120
windows active directory red teaming

759
00:31:03,120 --> 00:31:05,760
tests because uh

760
00:31:05,760 --> 00:31:09,279
it has these uh av bypasses uh different

761
00:31:09,279 --> 00:31:11,200
code execution vulnerabilities within

762
00:31:11,200 --> 00:31:13,200
the ad

763
00:31:13,200 --> 00:31:14,960
how you're going to exfiltrate data

764
00:31:14,960 --> 00:31:16,240
within that

765
00:31:16,240 --> 00:31:17,039
the

766
00:31:17,039 --> 00:31:19,200
active directory try to get domain

767
00:31:19,200 --> 00:31:21,760
controllers uh try to get domain admin

768
00:31:21,760 --> 00:31:22,880
so

769
00:31:22,880 --> 00:31:25,120
um this is one of the

770
00:31:25,120 --> 00:31:26,960
red team tools that are

771
00:31:26,960 --> 00:31:28,559
used

772
00:31:28,559 --> 00:31:31,600
way back it's not i don't think it's

773
00:31:31,600 --> 00:31:33,360
it's that much

774
00:31:33,360 --> 00:31:37,440
uh used up till now until now because uh

775
00:31:37,440 --> 00:31:38,559
most

776
00:31:38,559 --> 00:31:39,440
uh

777
00:31:39,440 --> 00:31:43,279
avs uh have improved and windows amsi

778
00:31:43,279 --> 00:31:45,919
has improved also uh there are also the

779
00:31:45,919 --> 00:31:47,120
presence of

780
00:31:47,120 --> 00:31:51,679
edrs so if they use power split empire

781
00:31:51,679 --> 00:31:54,559
on engagements or renting engagements

782
00:31:54,559 --> 00:31:56,559
it's more likely to get caught rather

783
00:31:56,559 --> 00:31:58,960
than to

784
00:31:58,960 --> 00:32:02,559
successfully compromise further the

785
00:32:02,559 --> 00:32:05,840
active directory network

786
00:32:06,080 --> 00:32:08,720
right so overall uh we're going to go

787
00:32:08,720 --> 00:32:11,440
with the penetration testing approach so

788
00:32:11,440 --> 00:32:13,360
we have

789
00:32:13,360 --> 00:32:16,080
five different methodologies that

790
00:32:16,080 --> 00:32:18,320
uh

791
00:32:18,320 --> 00:32:20,080
that have

792
00:32:20,080 --> 00:32:23,039
been the life cycle for for pen testing

793
00:32:23,039 --> 00:32:26,240
and hacking in general

794
00:32:26,240 --> 00:32:29,600
so uh there's first one is information

795
00:32:29,600 --> 00:32:31,840
gathering or recon

796
00:32:31,840 --> 00:32:33,840
as you all know information is very very

797
00:32:33,840 --> 00:32:36,559
vital when you're trying to

798
00:32:36,559 --> 00:32:39,200
hack a system

799
00:32:39,200 --> 00:32:40,880
you're not going to attack unless you

800
00:32:40,880 --> 00:32:43,440
know more about your enemy right so you

801
00:32:43,440 --> 00:32:46,320
know more about your target

802
00:32:46,320 --> 00:32:48,080
the more you know

803
00:32:48,080 --> 00:32:50,320
the more dangerous it's going to be for

804
00:32:50,320 --> 00:32:51,840
them

805
00:32:51,840 --> 00:32:53,360
the more vulnerabilities you can

806
00:32:53,360 --> 00:32:55,919
leverage uh the more the more attack

807
00:32:55,919 --> 00:32:59,120
vectors you can think of

808
00:32:59,200 --> 00:33:00,799
overall

809
00:33:00,799 --> 00:33:02,000
every single

810
00:33:02,000 --> 00:33:03,679
penetration test

811
00:33:03,679 --> 00:33:05,440
involves in how you gather your

812
00:33:05,440 --> 00:33:07,519
information what information is readily

813
00:33:07,519 --> 00:33:09,519
available to you and

814
00:33:09,519 --> 00:33:11,600
from there you can base

815
00:33:11,600 --> 00:33:13,919
different vulnerabilities so going on

816
00:33:13,919 --> 00:33:16,799
next is vulnerability identification so

817
00:33:16,799 --> 00:33:18,399
after you've got

818
00:33:18,399 --> 00:33:20,559
your different information

819
00:33:20,559 --> 00:33:22,399
from from your recon

820
00:33:22,399 --> 00:33:24,399
uh you can now proceed to identify

821
00:33:24,399 --> 00:33:26,320
multiple vulnerabilities within the

822
00:33:26,320 --> 00:33:27,360
system

823
00:33:27,360 --> 00:33:29,519
that that you're targeting

824
00:33:29,519 --> 00:33:31,440
and once you identify these

825
00:33:31,440 --> 00:33:33,120
vulnerabilities you proceed to

826
00:33:33,120 --> 00:33:35,440
exploitation

827
00:33:35,440 --> 00:33:37,440
and try to gain access

828
00:33:37,440 --> 00:33:39,840
after gaining access

829
00:33:39,840 --> 00:33:42,799
you proceed to post exploitation

830
00:33:42,799 --> 00:33:45,440
which is mainly established persistence

831
00:33:45,440 --> 00:33:47,760
exfiltration of data

832
00:33:47,760 --> 00:33:50,000
so that you don't have to run the

833
00:33:50,000 --> 00:33:53,200
exploit again and again and you'll have

834
00:33:53,200 --> 00:33:56,159
a more secure way of reaccessing the

835
00:33:56,159 --> 00:33:59,440
target machine if ever your shell dies

836
00:33:59,440 --> 00:34:01,600
and then after post exploitation of

837
00:34:01,600 --> 00:34:03,919
course you're going to report this

838
00:34:03,919 --> 00:34:07,600
because as you all know over here we're

839
00:34:07,600 --> 00:34:09,199
ethical

840
00:34:09,199 --> 00:34:11,839
so you report these vulnerabilities uh

841
00:34:11,839 --> 00:34:14,239
of course together with the

842
00:34:14,239 --> 00:34:16,399
proof of concepts if you successfully

843
00:34:16,399 --> 00:34:17,918
exploited

844
00:34:17,918 --> 00:34:21,599
and leverage that vulnerability

845
00:34:21,599 --> 00:34:24,480
so overall these five uh

846
00:34:24,480 --> 00:34:27,520
steps these are going to be

847
00:34:27,520 --> 00:34:29,760
your life cycle when you're doing fan

848
00:34:29,760 --> 00:34:31,359
testing or when you're doing hacking in

849
00:34:31,359 --> 00:34:32,719
general

850
00:34:32,719 --> 00:34:34,399
this applies to everything this applies

851
00:34:34,399 --> 00:34:35,440
to all

852
00:34:35,440 --> 00:34:37,679
it's going to be your bread and butter

853
00:34:37,679 --> 00:34:41,440
into getting that first box

854
00:34:42,960 --> 00:34:45,040
so information gathering

855
00:34:45,040 --> 00:34:48,079
uh as you can see there are various ways

856
00:34:48,079 --> 00:34:50,239
of gathering information for example

857
00:34:50,239 --> 00:34:54,320
over here you use nmap to map the

858
00:34:54,320 --> 00:34:58,800
different ports different services

859
00:34:58,960 --> 00:35:02,560
over here we can see uh

860
00:35:02,560 --> 00:35:05,200
the change log of of a

861
00:35:05,200 --> 00:35:06,960
drupal uh

862
00:35:06,960 --> 00:35:08,160
stack

863
00:35:08,160 --> 00:35:10,720
that says

864
00:35:10,720 --> 00:35:13,040
there's multiple security issues that

865
00:35:13,040 --> 00:35:15,280
have been fixed

866
00:35:15,280 --> 00:35:17,680
you can also see that the date is 2016

867
00:35:17,680 --> 00:35:21,200
so which means it's very very updated

868
00:35:21,200 --> 00:35:23,280
and the next is the penetration testing

869
00:35:23,280 --> 00:35:24,560
approach

870
00:35:24,560 --> 00:35:25,599
so

871
00:35:25,599 --> 00:35:26,400
um

872
00:35:26,400 --> 00:35:29,680
after you get your recon

873
00:35:29,680 --> 00:35:31,200
you do

874
00:35:31,200 --> 00:35:33,440
the search for your vulnerabilities

875
00:35:33,440 --> 00:35:36,000
right so you search

876
00:35:36,000 --> 00:35:38,880
apache exploits

877
00:35:38,880 --> 00:35:40,880
drupal exploits

878
00:35:40,880 --> 00:35:43,119
there's a lot so

879
00:35:43,119 --> 00:35:46,000
the one we saw earlier was running 2016.

880
00:35:46,000 --> 00:35:47,680
the pass was

881
00:35:47,680 --> 00:35:51,200
over here is release 2018 so

882
00:35:51,200 --> 00:35:54,079
since it's using a 2016 version

883
00:35:54,079 --> 00:35:55,920
and the drupal

884
00:35:55,920 --> 00:35:58,160
change log states that the version is

885
00:35:58,160 --> 00:35:59,280
vulnerable

886
00:35:59,280 --> 00:36:03,839
we now have our identified vulnerability

887
00:36:03,839 --> 00:36:07,920
now we can try to use this exploit and

888
00:36:07,920 --> 00:36:10,240
over here as you can see on on the

889
00:36:10,240 --> 00:36:12,480
yellow highlight

890
00:36:12,480 --> 00:36:14,560
code execution work

891
00:36:14,560 --> 00:36:17,280
so it means that the exploit worked and

892
00:36:17,280 --> 00:36:18,640
we are now

893
00:36:18,640 --> 00:36:19,680
going to be

894
00:36:19,680 --> 00:36:23,040
able to access the machine remotely

895
00:36:23,040 --> 00:36:25,760
so after post

896
00:36:25,760 --> 00:36:28,240
uh post-exploitation and

897
00:36:28,240 --> 00:36:30,800
includes exfiltration of data

898
00:36:30,800 --> 00:36:32,720
setting up persistence

899
00:36:32,720 --> 00:36:34,720
privilege escalation

900
00:36:34,720 --> 00:36:36,000
so over here

901
00:36:36,000 --> 00:36:38,079
you can see that

902
00:36:38,079 --> 00:36:40,160
after connection the remote connection

903
00:36:40,160 --> 00:36:41,520
has been made

904
00:36:41,520 --> 00:36:44,160
um we're trying to

905
00:36:44,160 --> 00:36:47,520
figure out what files we can open uh we

906
00:36:47,520 --> 00:36:48,880
can try

907
00:36:48,880 --> 00:36:52,560
uh what permissions are there for for us

908
00:36:52,560 --> 00:36:54,480
so over here you can see

909
00:36:54,480 --> 00:36:57,040
important documents how we have no

910
00:36:57,040 --> 00:36:59,520
permission over so

911
00:36:59,520 --> 00:37:02,000
we need to escalate privileges into an

912
00:37:02,000 --> 00:37:04,640
admin so we proceed to

913
00:37:04,640 --> 00:37:07,200
identification of vulnerabilities again

914
00:37:07,200 --> 00:37:10,079
so we now know the stack because

915
00:37:10,079 --> 00:37:12,320
we have access to the system

916
00:37:12,320 --> 00:37:13,839
so over here

917
00:37:13,839 --> 00:37:15,839
uh we need to

918
00:37:15,839 --> 00:37:17,520
check

919
00:37:17,520 --> 00:37:18,640
the

920
00:37:18,640 --> 00:37:20,640
operating system version if there are

921
00:37:20,640 --> 00:37:22,480
any ways to

922
00:37:22,480 --> 00:37:24,160
privilege

923
00:37:24,160 --> 00:37:26,320
escalate our local privileges on the

924
00:37:26,320 --> 00:37:27,280
machine

925
00:37:27,280 --> 00:37:30,800
so upon searching x-ray bb

926
00:37:30,800 --> 00:37:31,839
we can

927
00:37:31,839 --> 00:37:34,720
find that there is an overlay fs local

928
00:37:34,720 --> 00:37:36,800
privilege escalation technique

929
00:37:36,800 --> 00:37:39,280
exploit that's readily available

930
00:37:39,280 --> 00:37:42,160
since it fits with our

931
00:37:42,160 --> 00:37:44,320
linux kernel version and our ubuntu

932
00:37:44,320 --> 00:37:46,240
version

933
00:37:46,240 --> 00:37:48,079
we can try to use this

934
00:37:48,079 --> 00:37:49,359
so

935
00:37:49,359 --> 00:37:51,280
after uh

936
00:37:51,280 --> 00:37:53,839
compiling and executing the

937
00:37:53,839 --> 00:37:56,640
exploit you can see over here that we

938
00:37:56,640 --> 00:37:59,520
are root so our escalate

939
00:37:59,520 --> 00:38:02,000
our escalation work we are now the

940
00:38:02,000 --> 00:38:05,280
highest level of user in a linux system

941
00:38:05,280 --> 00:38:07,440
so we do not have access to important

942
00:38:07,440 --> 00:38:11,680
documents so we now own the system

943
00:38:12,800 --> 00:38:14,800
basically this is this is going to be a

944
00:38:14,800 --> 00:38:17,280
roadmap this is going to be your bread

945
00:38:17,280 --> 00:38:19,520
and butter is going to be your your

946
00:38:19,520 --> 00:38:21,359
usual methodology

947
00:38:21,359 --> 00:38:24,240
this is going to be what's going to be

948
00:38:24,240 --> 00:38:26,880
on your mind what's going to be your

949
00:38:26,880 --> 00:38:31,040
everyday process as you practice

950
00:38:31,040 --> 00:38:34,320
and after that you can you know take

951
00:38:34,320 --> 00:38:35,920
certifications

952
00:38:35,920 --> 00:38:37,920
if you have time and money and why not

953
00:38:37,920 --> 00:38:38,880
right

954
00:38:38,880 --> 00:38:41,200
so there's a lot of tracks within the

955
00:38:41,200 --> 00:38:44,160
infosec industry uh you can go for

956
00:38:44,160 --> 00:38:47,200
offensive defensive operations uh

957
00:38:47,200 --> 00:38:50,000
management analysis implementation

958
00:38:50,000 --> 00:38:52,160
so all these

959
00:38:52,160 --> 00:38:54,720
these are very very broad

960
00:38:54,720 --> 00:38:56,480
um

961
00:38:56,480 --> 00:38:57,280
again

962
00:38:57,280 --> 00:38:59,520
you can take these certifications as as

963
00:38:59,520 --> 00:39:03,839
a baseline for for you if you actually

964
00:39:03,839 --> 00:39:06,880
if you want external validation

965
00:39:06,880 --> 00:39:09,920
that you you are an expert in this topic

966
00:39:09,920 --> 00:39:12,480
or you are a professional in this topic

967
00:39:12,480 --> 00:39:16,640
it's not required but it's good to have

968
00:39:17,280 --> 00:39:19,040
right so

969
00:39:19,040 --> 00:39:22,960
that's that's basically my talk um

970
00:39:22,960 --> 00:39:25,200
i'm going to go over and

971
00:39:25,200 --> 00:39:29,040
show you a couple of things um

972
00:39:29,040 --> 00:39:30,400
over here

973
00:39:30,400 --> 00:39:32,000
i have

974
00:39:32,000 --> 00:39:35,119
a hands-on example of

975
00:39:35,119 --> 00:39:37,520
the tools that i mentioned so

976
00:39:37,520 --> 00:39:40,079
uh we have a metasploitable box over

977
00:39:40,079 --> 00:39:41,040
here

978
00:39:41,040 --> 00:39:43,839
that

979
00:39:44,000 --> 00:39:46,800
we are currently running

980
00:39:46,800 --> 00:39:51,280
and we ran an nmap scan against it

981
00:39:51,280 --> 00:39:54,560
so nmap released

982
00:39:54,640 --> 00:39:57,680
different information so there's uh ftp

983
00:39:57,680 --> 00:40:01,520
service uh vsftpd234

984
00:40:01,520 --> 00:40:06,160
uh there's ssh running telnet there's uh

985
00:40:06,160 --> 00:40:08,319
smtp

986
00:40:08,319 --> 00:40:10,960
and then there's a dns

987
00:40:10,960 --> 00:40:13,119
and

988
00:40:13,200 --> 00:40:16,319
an http server

989
00:40:16,319 --> 00:40:19,200
so there are a lot of ports open

990
00:40:19,200 --> 00:40:20,050
that can be

991
00:40:20,050 --> 00:40:21,280
[Music]

992
00:40:21,280 --> 00:40:22,839
that can

993
00:40:22,839 --> 00:40:26,160
be leverage right so maybe we can also

994
00:40:26,160 --> 00:40:27,920
see the service versions

995
00:40:27,920 --> 00:40:30,160
so

996
00:40:32,640 --> 00:40:35,680
apart from that there's also

997
00:40:35,680 --> 00:40:38,319
different directories on on the web page

998
00:40:38,319 --> 00:40:42,720
so this is uh durb

999
00:40:42,720 --> 00:40:44,480
right so

1000
00:40:44,480 --> 00:40:46,720
there

