1
00:00:02,560 --> 00:00:04,880
hey everyone uh hope everyone is doing

2
00:00:04,880 --> 00:00:06,160
good

3
00:00:06,160 --> 00:00:08,559
so this time on uh recon uh we'll be

4
00:00:08,559 --> 00:00:11,599
presenting our uh talk on uh buzzard

5
00:00:11,599 --> 00:00:13,519
crafting your post exploitation

6
00:00:13,519 --> 00:00:17,520
framework and odds so probably uh today

7
00:00:17,520 --> 00:00:19,119
everyone has been drafting the post

8
00:00:19,119 --> 00:00:21,279
exploitation framework but this

9
00:00:21,279 --> 00:00:23,439
presentation will be free uh like

10
00:00:23,439 --> 00:00:26,160
focusing on our challenges and what are

11
00:00:26,160 --> 00:00:29,199
the ideas we did implemented on our post

12
00:00:29,199 --> 00:00:30,880
exploitation framework

13
00:00:30,880 --> 00:00:31,760
so

14
00:00:31,760 --> 00:00:35,600
let's get started next slide please

15
00:00:35,600 --> 00:00:36,559
uh

16
00:00:36,559 --> 00:00:39,920
a little bit our about uh ourselves my

17
00:00:39,920 --> 00:00:42,160
name is subhajit and i mostly go by the

18
00:00:42,160 --> 00:00:45,600
name elementalx online uh i do reverse

19
00:00:45,600 --> 00:00:47,440
engineering and i'm still learning

20
00:00:47,440 --> 00:00:49,840
malware analysis to be honest and i my

21
00:00:49,840 --> 00:00:51,680
favorite programming languages are rust

22
00:00:51,680 --> 00:00:54,000
and i still love uh studying about

23
00:00:54,000 --> 00:00:56,079
system internals my free time so

24
00:00:56,079 --> 00:00:58,879
currently i'm leading the axial and

25
00:00:58,879 --> 00:01:00,960
infosec community focus on all these

26
00:01:00,960 --> 00:01:04,559
domains i just explored so i'll pass it

27
00:01:04,559 --> 00:01:06,880
on to my next uh teammate avinda for

28
00:01:06,880 --> 00:01:09,040
this quick introduction

29
00:01:09,040 --> 00:01:10,400
so

30
00:01:10,400 --> 00:01:13,600
hello everyone my name is aravinda riven

31
00:01:13,600 --> 00:01:16,400
i'm also known as techwizard in online

32
00:01:16,400 --> 00:01:19,680
so by day i'm a final year graduate

33
00:01:19,680 --> 00:01:20,560
and

34
00:01:20,560 --> 00:01:24,080
by night i work as a web app and tester

35
00:01:24,080 --> 00:01:26,880
i love to play ctfs and hackathons

36
00:01:26,880 --> 00:01:28,960
currently i'm part of actual community

37
00:01:28,960 --> 00:01:32,000
as a foreigner

38
00:01:32,880 --> 00:01:34,640
all right thank you aravinda for your uh

39
00:01:34,640 --> 00:01:37,840
real quick and sweet introduction so

40
00:01:37,840 --> 00:01:40,240
i'm sorry uh we'll uh focus on whatever

41
00:01:40,240 --> 00:01:42,159
the agent does will uh

42
00:01:42,159 --> 00:01:44,479
our slide and our you know presentation

43
00:01:44,479 --> 00:01:46,479
contains so we'll be explaining what is

44
00:01:46,479 --> 00:01:48,320
buzzard and you know what if we keep

45
00:01:48,320 --> 00:01:50,880
this cool name why do we need all the i

46
00:01:50,880 --> 00:01:53,119
mean uh the need of this player i mean

47
00:01:53,119 --> 00:01:55,439
the post exploitation framework keeping

48
00:01:55,439 --> 00:01:59,200
in mind all the existing and better uh

49
00:01:59,200 --> 00:02:01,360
post exploration frameworks in the

50
00:02:01,360 --> 00:02:04,159
community and third key components we'll

51
00:02:04,159 --> 00:02:06,640
just go one by one on the components

52
00:02:06,640 --> 00:02:08,878
will describe the ui and

53
00:02:08,878 --> 00:02:12,560
what did it take to compose that and

54
00:02:12,560 --> 00:02:14,480
exploration of features all the feature

55
00:02:14,480 --> 00:02:16,640
the c2 operator has

56
00:02:16,640 --> 00:02:17,680
to

57
00:02:17,680 --> 00:02:20,319
i mean and the

58
00:02:20,319 --> 00:02:23,360
advantages of using buzzard and on fifth

59
00:02:23,360 --> 00:02:25,840
what's buzz yeah that's quite a you know

60
00:02:25,840 --> 00:02:27,840
funny term but it will explain why did

61
00:02:27,840 --> 00:02:30,959
we use it and buzzard in docker you know

62
00:02:30,959 --> 00:02:32,959
how do you load up our c20 framework

63
00:02:32,959 --> 00:02:34,480
that's a kind of feature honestly but

64
00:02:34,480 --> 00:02:36,640
yeah as we would like to you know

65
00:02:36,640 --> 00:02:38,640
explain a bit about that on that we

66
00:02:38,640 --> 00:02:40,800
actually allocated a different slide for

67
00:02:40,800 --> 00:02:43,519
that and then we'll my friend aravinda

68
00:02:43,519 --> 00:02:46,560
will do a quick demo of all the implants

69
00:02:46,560 --> 00:02:47,360
and

70
00:02:47,360 --> 00:02:49,040
uh

71
00:02:49,040 --> 00:02:51,440
modules post exploitation modules we

72
00:02:51,440 --> 00:02:54,800
made up for uh buzzard eighth hour uh

73
00:02:54,800 --> 00:02:58,319
two cents on uh detection and buzzard

74
00:02:58,319 --> 00:03:00,560
and nine the future updates which will

75
00:03:00,560 --> 00:03:02,959
promise and then finally we will end up

76
00:03:02,959 --> 00:03:05,519
credits and thanks all right i'm in the

77
00:03:05,519 --> 00:03:08,000
next slide please

78
00:03:08,000 --> 00:03:10,000
thank you very much so uh what is

79
00:03:10,000 --> 00:03:11,920
buzzard buzzard is open source yeah we

80
00:03:11,920 --> 00:03:13,840
definitely will go for open source post

81
00:03:13,840 --> 00:03:15,200
exploitation framework designed for

82
00:03:15,200 --> 00:03:17,920
researchers students and enthusiasts and

83
00:03:17,920 --> 00:03:20,400
people who are you know nowadays we see

84
00:03:20,400 --> 00:03:21,920
a lot of influx of students and

85
00:03:21,920 --> 00:03:23,599
enthusiasts you know they're trying to

86
00:03:23,599 --> 00:03:24,959
build their own post exploitation

87
00:03:24,959 --> 00:03:27,599
framework so we thought why not give us

88
00:03:27,599 --> 00:03:29,680
our part of contribution to the

89
00:03:29,680 --> 00:03:30,879
community building the sports

90
00:03:30,879 --> 00:03:32,560
exploitation framework

91
00:03:32,560 --> 00:03:33,920
although there are a lot of existing

92
00:03:33,920 --> 00:03:36,159
post exploration frameworks those are

93
00:03:36,159 --> 00:03:37,040
you know

94
00:03:37,040 --> 00:03:38,879
kind of uh

95
00:03:38,879 --> 00:03:41,040
they have they do have all these

96
00:03:41,040 --> 00:03:42,879
extraordinary features but most of them

97
00:03:42,879 --> 00:03:45,519
are paid keeping us i mean researchers

98
00:03:45,519 --> 00:03:47,680
or students or enthusiasts on the dark

99
00:03:47,680 --> 00:03:50,480
corners so as we cannot explain or we

100
00:03:50,480 --> 00:03:53,840
cannot put a lot of r d into our own if

101
00:03:53,840 --> 00:03:55,760
we start to build our own custom

102
00:03:55,760 --> 00:03:58,239
exploration framework from the scratch

103
00:03:58,239 --> 00:04:02,080
and on the other hand if the ui we tried

104
00:04:02,080 --> 00:04:04,000
our best to put in the

105
00:04:04,000 --> 00:04:05,920
good things in the ui so if someone

106
00:04:05,920 --> 00:04:08,799
wants to deploy their own implant and

107
00:04:08,799 --> 00:04:09,599
the

108
00:04:09,599 --> 00:04:11,840
modules using buzzard that's another

109
00:04:11,840 --> 00:04:13,200
advantage also

110
00:04:13,200 --> 00:04:15,040
and currently uh

111
00:04:15,040 --> 00:04:17,519
it's an initial release so buzzers

112
00:04:17,519 --> 00:04:20,079
supports uh 10 plus post exploitation

113
00:04:20,079 --> 00:04:22,079
modules for linux framework currently

114
00:04:22,079 --> 00:04:23,600
and we're planning for future to go for

115
00:04:23,600 --> 00:04:27,520
cross platform support also and

116
00:04:27,520 --> 00:04:29,759
then the

117
00:04:29,759 --> 00:04:31,520
support for windows machines will be

118
00:04:31,520 --> 00:04:34,160
there in the next update and

119
00:04:34,160 --> 00:04:37,440
would uh like to clarify that buzzard is

120
00:04:37,440 --> 00:04:38,479
still not

121
00:04:38,479 --> 00:04:41,120
capable of operating in mature and

122
00:04:41,120 --> 00:04:43,840
covert environment but yeah it's a

123
00:04:43,840 --> 00:04:46,240
best option if you're trying to you know

124
00:04:46,240 --> 00:04:48,479
go for developing your own and we

125
00:04:48,479 --> 00:04:51,040
promise that in the next uh

126
00:04:51,040 --> 00:04:53,280
update will definitely

127
00:04:53,280 --> 00:04:54,960
make it capable of being you know

128
00:04:54,960 --> 00:04:57,199
operated and uh covert and mature

129
00:04:57,199 --> 00:04:59,280
environments and definitely direct team

130
00:04:59,280 --> 00:05:01,199
engagements okay other than the next

131
00:05:01,199 --> 00:05:03,680
slide please

132
00:05:04,080 --> 00:05:07,360
so uh anyway uh so the next slide

133
00:05:07,360 --> 00:05:09,520
contains like why did we build buzzard

134
00:05:09,520 --> 00:05:11,360
you know although there are like many

135
00:05:11,360 --> 00:05:13,840
marvelous post expedition frameworks but

136
00:05:13,840 --> 00:05:15,919
like we would like to name a few like

137
00:05:15,919 --> 00:05:18,560
shadow brute rattle by pandora ninja uh

138
00:05:18,560 --> 00:05:21,440
pause c2 nighthawk by mdc labs and many

139
00:05:21,440 --> 00:05:23,039
more so

140
00:05:23,039 --> 00:05:24,560
our main inspiration for building

141
00:05:24,560 --> 00:05:27,520
buzzard comes up from these frameworks

142
00:05:27,520 --> 00:05:29,759
actually so

143
00:05:29,759 --> 00:05:31,680
so and other things like you know we'll

144
00:05:31,680 --> 00:05:34,000
definitely learn a thing or two on while

145
00:05:34,000 --> 00:05:35,440
building our own post exploration

146
00:05:35,440 --> 00:05:38,560
framework and the techniques or

147
00:05:38,560 --> 00:05:40,400
pseudo persistent or persistent

148
00:05:40,400 --> 00:05:42,800
techniques or whatever we uh

149
00:05:42,800 --> 00:05:44,240
are packing up in buzzard and the

150
00:05:44,240 --> 00:05:45,919
initial release those would like to

151
00:05:45,919 --> 00:05:48,160
clarify those are not definitely noble

152
00:05:48,160 --> 00:05:50,960
but yeah definitely like we have uh

153
00:05:50,960 --> 00:05:53,840
implemented ideas to make that uh

154
00:05:53,840 --> 00:05:58,000
tactics quite noble and you know

155
00:05:58,000 --> 00:05:59,919
we'll uh definitely go

156
00:05:59,919 --> 00:06:01,919
on the next slides and

157
00:06:01,919 --> 00:06:03,440
implants

158
00:06:03,440 --> 00:06:04,800
programmed in non-traditional

159
00:06:04,800 --> 00:06:07,520
programming languages so yeah i think

160
00:06:07,520 --> 00:06:10,240
this has been performed but yeah we did

161
00:06:10,240 --> 00:06:12,720
focus on this thing because we'd like to

162
00:06:12,720 --> 00:06:15,199
uh include a videos and uh

163
00:06:15,199 --> 00:06:17,919
quite a few slides from uh sacred

164
00:06:17,919 --> 00:06:21,120
cascode tipping and definitely that's

165
00:06:21,120 --> 00:06:22,560
our main reason and yeah we'll

166
00:06:22,560 --> 00:06:24,639
definitely explain why do we use

167
00:06:24,639 --> 00:06:26,160
non-traditional or non-native

168
00:06:26,160 --> 00:06:27,919
programming languages for designing our

169
00:06:27,919 --> 00:06:29,360
implants and

170
00:06:29,360 --> 00:06:30,960
uh

171
00:06:30,960 --> 00:06:32,000
beacons

172
00:06:32,000 --> 00:06:34,479
and yeah definitely applying ntra

173
00:06:34,479 --> 00:06:38,880
techniques you know every c2 nowadays uh

174
00:06:38,880 --> 00:06:40,560
like if we build one

175
00:06:40,560 --> 00:06:43,039
has this core component of applying ntra

176
00:06:43,039 --> 00:06:44,960
techniques so yeah definitely this is

177
00:06:44,960 --> 00:06:47,199
all this has also been one of our goal

178
00:06:47,199 --> 00:06:51,599
you know so next slider avenger

179
00:06:52,880 --> 00:06:54,639
all right so

180
00:06:54,639 --> 00:06:57,039
now i'll pass it up to my you know other

181
00:06:57,039 --> 00:06:58,720
teammate or when the hurrier and to

182
00:06:58,720 --> 00:07:01,680
describe the features and you know

183
00:07:01,680 --> 00:07:04,800
overlook of what and how can you display

184
00:07:04,800 --> 00:07:06,639
a plug and play around this quick setup

185
00:07:06,639 --> 00:07:08,800
framework

186
00:07:08,800 --> 00:07:10,000
okay

187
00:07:10,000 --> 00:07:12,160
bassett is built on a hybrid

188
00:07:12,160 --> 00:07:13,759
architecture

189
00:07:13,759 --> 00:07:16,000
that means it comprises of multiple

190
00:07:16,000 --> 00:07:17,440
components to

191
00:07:17,440 --> 00:07:19,840
have a smooth running of process so they

192
00:07:19,840 --> 00:07:21,840
cannot come back and

193
00:07:21,840 --> 00:07:25,199
break the c2 server and we have we

194
00:07:25,199 --> 00:07:28,560
follow current operations through

195
00:07:28,560 --> 00:07:31,120
front end is built up on top of node.js

196
00:07:31,120 --> 00:07:33,680
and html bootstrap all those stuff

197
00:07:33,680 --> 00:07:35,840
we have a middleware with apa which is

198
00:07:35,840 --> 00:07:38,400
made up of python and uh the node.js

199
00:07:38,400 --> 00:07:40,960
will be interacting with python to

200
00:07:40,960 --> 00:07:41,840
create

201
00:07:41,840 --> 00:07:44,160
create delete read and update all the

202
00:07:44,160 --> 00:07:46,639
tasks so let me switch back to the

203
00:07:46,639 --> 00:07:48,240
interface and show you

204
00:07:48,240 --> 00:07:50,400
so this is how

205
00:07:50,400 --> 00:07:53,199
the interface the node.js and html looks

206
00:07:53,199 --> 00:07:55,759
like you have a classic

207
00:07:55,759 --> 00:07:58,319
login page as well but once you log in

208
00:07:58,319 --> 00:08:00,319
you will have this kind of dashboard

209
00:08:00,319 --> 00:08:01,520
with

210
00:08:01,520 --> 00:08:04,319
sidebar as well so you will have options

211
00:08:04,319 --> 00:08:06,800
to create you edit and

212
00:08:06,800 --> 00:08:09,840
do stuff and you will have the list of

213
00:08:09,840 --> 00:08:13,120
tasks that are that are created by you

214
00:08:13,120 --> 00:08:16,400
and this is a data table which will be

215
00:08:16,400 --> 00:08:17,520
sorted

216
00:08:17,520 --> 00:08:21,359
you can search among the

217
00:08:21,680 --> 00:08:24,080
tasks that you need you can search by

218
00:08:24,080 --> 00:08:26,639
the ip address you can go with the time

219
00:08:26,639 --> 00:08:27,599
stamp

220
00:08:27,599 --> 00:08:30,560
uh and we have a status indicator also

221
00:08:30,560 --> 00:08:33,120
so if that particular task is

222
00:08:33,120 --> 00:08:36,080
not started or not scheduled

223
00:08:36,080 --> 00:08:38,479
then we have three stages so

224
00:08:38,479 --> 00:08:42,640
not not it started or in progress or if

225
00:08:42,640 --> 00:08:44,560
that particular task is completed then

226
00:08:44,560 --> 00:08:47,040
it will be marked as completed so you

227
00:08:47,040 --> 00:08:49,680
can switch back between them and filter

228
00:08:49,680 --> 00:08:50,640
it

229
00:08:50,640 --> 00:08:52,480
and then we have a

230
00:08:52,480 --> 00:08:54,720
one liner over here so you can just copy

231
00:08:54,720 --> 00:08:56,399
it immediately and paste it into the

232
00:08:56,399 --> 00:08:59,279
target machine to get started let me go

233
00:08:59,279 --> 00:09:01,120
back to the slides and show you that

234
00:09:01,120 --> 00:09:02,320
aspect

235
00:09:02,320 --> 00:09:05,519
so this is the architecture which we

236
00:09:05,519 --> 00:09:07,200
are referring to so this is wrapped

237
00:09:07,200 --> 00:09:09,040
around the talker

238
00:09:09,040 --> 00:09:12,000
so we have client and a client web

239
00:09:12,000 --> 00:09:14,080
interface and command line interface as

240
00:09:14,080 --> 00:09:15,279
well so

241
00:09:15,279 --> 00:09:16,800
that will be talking to the reverse

242
00:09:16,800 --> 00:09:20,240
proxy that we set up in the server side

243
00:09:20,240 --> 00:09:22,560
so that will redirect to the respective

244
00:09:22,560 --> 00:09:23,920
services like

245
00:09:23,920 --> 00:09:26,959
the rest api the node.js one and then

246
00:09:26,959 --> 00:09:28,320
mongodb

247
00:09:28,320 --> 00:09:31,279
we have the websocket to get a real-time

248
00:09:31,279 --> 00:09:34,399
update when you create a task or any

249
00:09:34,399 --> 00:09:36,560
edit or when you get an

250
00:09:36,560 --> 00:09:38,959
uh schedule notification will be

251
00:09:38,959 --> 00:09:41,120
notified through web sockets

252
00:09:41,120 --> 00:09:43,519
and then we have beacons and implants

253
00:09:43,519 --> 00:09:45,279
which will be solved through the

254
00:09:45,279 --> 00:09:47,040
rest api

255
00:09:47,040 --> 00:09:49,519
and this all goes and we have the

256
00:09:49,519 --> 00:09:51,839
implant we planted into the compromised

257
00:09:51,839 --> 00:09:54,880
server or the system where

258
00:09:54,880 --> 00:09:57,360
we refer it as a victim machine

259
00:09:57,360 --> 00:10:00,160
so this will be implanted into the

260
00:10:00,160 --> 00:10:02,880
vector machine and you need to you can

261
00:10:02,880 --> 00:10:04,959
access through the server which we have

262
00:10:04,959 --> 00:10:07,279
set up with the public id of the

263
00:10:07,279 --> 00:10:10,000
attacker machine

264
00:10:10,399 --> 00:10:11,519
so

265
00:10:11,519 --> 00:10:13,680
you might have a question how we will be

266
00:10:13,680 --> 00:10:15,680
loading this implant into the target

267
00:10:15,680 --> 00:10:16,560
machine

268
00:10:16,560 --> 00:10:19,040
so we have made two different

269
00:10:19,040 --> 00:10:21,680
implants one is for the windows windows

270
00:10:21,680 --> 00:10:24,720
version and others for linux so this

271
00:10:24,720 --> 00:10:27,360
this is how the one liner will look like

272
00:10:27,360 --> 00:10:29,200
you just need to copy and paste it into

273
00:10:29,200 --> 00:10:30,640
the terminal

274
00:10:30,640 --> 00:10:34,000
and what this will do is it will create

275
00:10:34,000 --> 00:10:35,920
the

276
00:10:35,920 --> 00:10:38,000
unit script so

277
00:10:38,000 --> 00:10:40,160
when the

278
00:10:40,160 --> 00:10:42,320
victim restarts or powers off the

279
00:10:42,320 --> 00:10:45,440
computer and turns back in tomorrow it

280
00:10:45,440 --> 00:10:47,680
will be automatically starting up

281
00:10:47,680 --> 00:10:50,000
and we will have a persistent connection

282
00:10:50,000 --> 00:10:52,079
if he is going to find

283
00:10:52,079 --> 00:10:53,600
the

284
00:10:53,600 --> 00:10:56,399
script which we planted it will be

285
00:10:56,399 --> 00:10:58,640
renamed or re-run in a

286
00:10:58,640 --> 00:11:00,399
different name so

287
00:11:00,399 --> 00:11:02,800
it it is not being caught by

288
00:11:02,800 --> 00:11:05,920
the victim so this is how the

289
00:11:05,920 --> 00:11:08,399
one liner look and you can just copy it

290
00:11:08,399 --> 00:11:09,440
from here

291
00:11:09,440 --> 00:11:11,920
and you can post it into the

292
00:11:11,920 --> 00:11:13,760
victor machine let me show you how to do

293
00:11:13,760 --> 00:11:14,480
that

294
00:11:14,480 --> 00:11:16,640
uh you can just click it and it will

295
00:11:16,640 --> 00:11:19,200
copy it to the clipboard you just need

296
00:11:19,200 --> 00:11:22,000
to go to go into the

297
00:11:22,000 --> 00:11:23,920
victim machine and then you need to

298
00:11:23,920 --> 00:11:25,440
paste it

299
00:11:25,440 --> 00:11:27,120
so this will

300
00:11:27,120 --> 00:11:28,399
pull some

301
00:11:28,399 --> 00:11:30,399
required files from the

302
00:11:30,399 --> 00:11:33,200
machine and it will create a init dot py

303
00:11:33,200 --> 00:11:35,040
with any buzzer

304
00:11:35,040 --> 00:11:38,470
so this has been set and you can see the

305
00:11:38,470 --> 00:11:39,760
[Music]

306
00:11:39,760 --> 00:11:43,920
implant has been put into safe site

307
00:11:43,920 --> 00:11:46,079
then we'll switch back to the slides

308
00:11:46,079 --> 00:11:48,160
again

309
00:11:48,160 --> 00:11:50,480
so now coming to the first feature we

310
00:11:50,480 --> 00:11:51,360
have

311
00:11:51,360 --> 00:11:53,040
monitoring targets

312
00:11:53,040 --> 00:11:55,440
where buzzer gives you a feature of

313
00:11:55,440 --> 00:11:57,519
looking into your targets in real time

314
00:11:57,519 --> 00:11:59,519
so if a target is

315
00:11:59,519 --> 00:12:02,560
on online then you can you have a

316
00:12:02,560 --> 00:12:04,800
monitoring feature over here which is

317
00:12:04,800 --> 00:12:06,399
called as profile

318
00:12:06,399 --> 00:12:07,680
and then we have

319
00:12:07,680 --> 00:12:09,330
targets as well

320
00:12:09,330 --> 00:12:12,489
[Music]

321
00:12:12,959 --> 00:12:15,120
okay over here you can see different

322
00:12:15,120 --> 00:12:16,320
targets

323
00:12:16,320 --> 00:12:18,560
that are being given

324
00:12:18,560 --> 00:12:21,120
so it just wait for 15 seconds whether

325
00:12:21,120 --> 00:12:24,560
the target comes up online or not if the

326
00:12:24,560 --> 00:12:26,639
target does not come it reports it

327
00:12:26,639 --> 00:12:29,200
doesn't offline and if that particular

328
00:12:29,200 --> 00:12:31,360
target is up and then you can see this

329
00:12:31,360 --> 00:12:33,440
particular green signal

330
00:12:33,440 --> 00:12:36,839
you can see the notification as well

331
00:12:36,839 --> 00:12:39,440
so when the target is up and running you

332
00:12:39,440 --> 00:12:40,320
can

333
00:12:40,320 --> 00:12:41,120
check

334
00:12:41,120 --> 00:12:42,720
whether the target is

335
00:12:42,720 --> 00:12:44,959
online or often

336
00:12:44,959 --> 00:12:47,839
so there's an issue that's why it's

337
00:12:47,839 --> 00:12:50,160
showing like this we will go back to the

338
00:12:50,160 --> 00:12:53,160
slides

339
00:12:53,839 --> 00:12:56,720
then creating tasks in passage are quite

340
00:12:56,720 --> 00:12:58,240
simple and easy

341
00:12:58,240 --> 00:13:00,000
you just need to click on the create

342
00:13:00,000 --> 00:13:03,279
task button with the dashboard or if you

343
00:13:03,279 --> 00:13:05,519
prefer cli version the command line

344
00:13:05,519 --> 00:13:07,200
interface then you can download them

345
00:13:07,200 --> 00:13:08,800
from the dashboard

346
00:13:08,800 --> 00:13:11,040
and then you can create using the

347
00:13:11,040 --> 00:13:13,519
commands which we will showcase

348
00:13:13,519 --> 00:13:16,800
and then you just need to type in few

349
00:13:16,800 --> 00:13:19,040
information about the victim like the

350
00:13:19,040 --> 00:13:21,279
task name the ip address and it will

351
00:13:21,279 --> 00:13:22,880
just create

352
00:13:22,880 --> 00:13:24,079
so let me

353
00:13:24,079 --> 00:13:27,120
show you how to create it

354
00:13:30,399 --> 00:13:32,639
over here you see the dashboard and we

355
00:13:32,639 --> 00:13:34,880
have the new task or the create task

356
00:13:34,880 --> 00:13:38,240
button or on the right type right side

357
00:13:38,240 --> 00:13:40,480
and once you click it should read out to

358
00:13:40,480 --> 00:13:42,720
a new page of create task

359
00:13:42,720 --> 00:13:44,959
and then you just need to type in

360
00:13:44,959 --> 00:13:46,959
something the name which should be

361
00:13:46,959 --> 00:13:49,760
unique and then the target id

362
00:13:49,760 --> 00:13:51,839
and we support the two different

363
00:13:51,839 --> 00:13:54,399
operating system windows and linux

364
00:13:54,399 --> 00:13:56,800
so next we have like the modes of

365
00:13:56,800 --> 00:14:00,000
operating the beacons so that's the next

366
00:14:00,000 --> 00:14:01,279
option

367
00:14:01,279 --> 00:14:04,240
so we have two different modes us

368
00:14:04,240 --> 00:14:06,720
longhouse and shorter

369
00:14:06,720 --> 00:14:08,720
what does that mean

370
00:14:08,720 --> 00:14:09,600
as

371
00:14:09,600 --> 00:14:11,199
long hole is the

372
00:14:11,199 --> 00:14:13,440
beacons that will be scheduled

373
00:14:13,440 --> 00:14:15,360
later in part so

374
00:14:15,360 --> 00:14:17,760
it will be slow and still

375
00:14:17,760 --> 00:14:20,800
but it will be able to bypass the

376
00:14:20,800 --> 00:14:23,199
techniques using the traditional method

377
00:14:23,199 --> 00:14:24,720
and avs and

378
00:14:24,720 --> 00:14:28,480
erd and then it will be

379
00:14:28,480 --> 00:14:32,240
stealth and it will run 15 minutes once

380
00:14:32,240 --> 00:14:34,880
so it has not been caught by some other

381
00:14:34,880 --> 00:14:36,639
packet tracing tool or something like

382
00:14:36,639 --> 00:14:37,839
that

383
00:14:37,839 --> 00:14:41,519
we have short hole also which will make

384
00:14:41,519 --> 00:14:44,000
a lot of noise in the machine

385
00:14:44,000 --> 00:14:46,959
pretend to be caught by someone when

386
00:14:46,959 --> 00:14:49,600
they look back into the beacons

387
00:14:49,600 --> 00:14:50,560
so

388
00:14:50,560 --> 00:14:52,399
we have two different longhorns

389
00:14:52,399 --> 00:14:55,040
shorthand

390
00:14:56,480 --> 00:14:59,760
then we have like

391
00:14:59,760 --> 00:15:01,920
give options to the operator the

392
00:15:01,920 --> 00:15:05,199
attacker to choose various programming

393
00:15:05,199 --> 00:15:07,440
language that we have made

394
00:15:07,440 --> 00:15:11,279
so like if the attacker likes to

395
00:15:11,279 --> 00:15:12,959
give a payload on

396
00:15:12,959 --> 00:15:16,000
python or in c programming or in trust

397
00:15:16,000 --> 00:15:17,920
then he can choose that particular

398
00:15:17,920 --> 00:15:18,959
language

399
00:15:18,959 --> 00:15:21,519
and currently we support three languages

400
00:15:21,519 --> 00:15:22,720
the

401
00:15:22,720 --> 00:15:25,360
bash python and trust so

402
00:15:25,360 --> 00:15:26,480
that will be

403
00:15:26,480 --> 00:15:28,720
capable to make

404
00:15:28,720 --> 00:15:29,759
that will

405
00:15:29,759 --> 00:15:31,759
create the beacons and it will be

406
00:15:31,759 --> 00:15:33,360
deployed into the

407
00:15:33,360 --> 00:15:36,880
victim pc so i'll just show you that so

408
00:15:36,880 --> 00:15:38,720
we have languages

409
00:15:38,720 --> 00:15:40,800
based on the operating system and prefer

410
00:15:40,800 --> 00:15:43,199
so if it's going to be windows then we

411
00:15:43,199 --> 00:15:45,199
have the python powershell if it is

412
00:15:45,199 --> 00:15:47,199
going to be the linux one then we have

413
00:15:47,199 --> 00:15:48,880
python based address

414
00:15:48,880 --> 00:15:51,920
so on clicking up the

415
00:15:51,920 --> 00:15:54,480
particular language you have called bus

416
00:15:54,480 --> 00:15:58,160
so let's look what is bus then

417
00:15:58,160 --> 00:16:00,320
bus is nothing but the name of the

418
00:16:00,320 --> 00:16:02,000
beacons that we kept

419
00:16:02,000 --> 00:16:04,240
just because it is going to be fancy we

420
00:16:04,240 --> 00:16:07,279
kept it so versus the beacons that we

421
00:16:07,279 --> 00:16:09,120
refer and

422
00:16:09,120 --> 00:16:11,460
these are the modules that will be

423
00:16:11,460 --> 00:16:12,720
[Music]

424
00:16:12,720 --> 00:16:15,120
used to gather information in different

425
00:16:15,120 --> 00:16:17,360
pc so we have

426
00:16:17,360 --> 00:16:18,880
different

427
00:16:18,880 --> 00:16:21,279
beacons that we build and then you can

428
00:16:21,279 --> 00:16:24,079
choose among them or else we have the

429
00:16:24,079 --> 00:16:26,639
custom beacon script as well so you can

430
00:16:26,639 --> 00:16:28,800
build your own beacon

431
00:16:28,800 --> 00:16:31,920
and then you can give a name to that bus

432
00:16:31,920 --> 00:16:33,600
and then you can

433
00:16:33,600 --> 00:16:36,160
we have a code editor over here so you

434
00:16:36,160 --> 00:16:37,040
can

435
00:16:37,040 --> 00:16:39,600
type in all of all the codes into this

436
00:16:39,600 --> 00:16:42,880
and you can create a task

437
00:16:44,399 --> 00:16:45,199
so

438
00:16:45,199 --> 00:16:48,079
on click on submitting or creating a new

439
00:16:48,079 --> 00:16:51,120
task it will be on your dashboard

440
00:16:51,120 --> 00:16:53,040
and once the

441
00:16:53,040 --> 00:16:56,000
the payload or the implant which we

442
00:16:56,000 --> 00:16:58,800
planted into the vector machine once he

443
00:16:58,800 --> 00:17:00,160
the

444
00:17:00,160 --> 00:17:02,480
the program gets to know about the new

445
00:17:02,480 --> 00:17:04,880
task it will just schedule the task in

446
00:17:04,880 --> 00:17:05,919
the time

447
00:17:05,919 --> 00:17:06,799
and

448
00:17:06,799 --> 00:17:08,400
long haul and chart how different

449
00:17:08,400 --> 00:17:09,760
difference will be running in

450
00:17:09,760 --> 00:17:11,359
asynchronous process

451
00:17:11,359 --> 00:17:13,839
so once these are scheduled you will be

452
00:17:13,839 --> 00:17:15,760
getting a notification that this

453
00:17:15,760 --> 00:17:19,199
particular process is scheduled so

454
00:17:19,199 --> 00:17:21,039
and once the task is completed you will

455
00:17:21,039 --> 00:17:22,720
get a notification that that particular

456
00:17:22,720 --> 00:17:25,119
task is completed

457
00:17:25,119 --> 00:17:28,640
so this is how it works

458
00:17:28,640 --> 00:17:31,760
then let me show all the beacons and

459
00:17:31,760 --> 00:17:32,559
stuff

460
00:17:32,559 --> 00:17:35,039
so let's go back into the

461
00:17:35,039 --> 00:17:37,600
dashboard

462
00:17:38,080 --> 00:17:39,360
let's

463
00:17:39,360 --> 00:17:42,000
create something new so

464
00:17:42,000 --> 00:17:44,400
i'll just delete those things so that

465
00:17:44,400 --> 00:17:46,320
you can see you can see those

466
00:17:46,320 --> 00:17:50,000
notifications once the task is deleted

467
00:17:50,000 --> 00:17:53,280
so let me create a new task

468
00:17:53,280 --> 00:17:57,120
uh let me have it as a sys information

469
00:17:57,120 --> 00:17:58,799
i just need to grab the system

470
00:17:58,799 --> 00:18:00,799
information from the attacker pc

471
00:18:00,799 --> 00:18:03,760
for that and i just need to grab the

472
00:18:03,760 --> 00:18:06,160
public id of this machine

473
00:18:06,160 --> 00:18:08,080
assume this as the

474
00:18:08,080 --> 00:18:09,600
victim pc so

475
00:18:09,600 --> 00:18:11,280
this is the

476
00:18:11,280 --> 00:18:12,840
public ip of this

477
00:18:12,840 --> 00:18:16,240
machine and

478
00:18:16,240 --> 00:18:18,640
once i get it i can paste in the target

479
00:18:18,640 --> 00:18:21,120
ip since this is a linux mission i'm

480
00:18:21,120 --> 00:18:22,720
going with the linux one

481
00:18:22,720 --> 00:18:24,799
i just need to grab the output as soon

482
00:18:24,799 --> 00:18:26,160
as possible so

483
00:18:26,160 --> 00:18:28,640
i'm just grabbing the short half

484
00:18:28,640 --> 00:18:31,600
and that will go with python one and

485
00:18:31,600 --> 00:18:33,360
we'll select

486
00:18:33,360 --> 00:18:36,160
the beacon that says this info

487
00:18:36,160 --> 00:18:38,799
so once i click on that everything looks

488
00:18:38,799 --> 00:18:39,679
good

489
00:18:39,679 --> 00:18:43,520
so let me submit it so once you submit

490
00:18:43,520 --> 00:18:45,440
it you should see a

491
00:18:45,440 --> 00:18:49,120
create task new task let me replant the

492
00:18:49,120 --> 00:18:52,120
implant

493
00:18:56,400 --> 00:18:58,640
you can see the there is no much of the

494
00:18:58,640 --> 00:19:00,799
output because every task that is

495
00:19:00,799 --> 00:19:03,200
performed on the victim machine is like

496
00:19:03,200 --> 00:19:05,520
a quiet operation which does not make

497
00:19:05,520 --> 00:19:06,640
any noise

498
00:19:06,640 --> 00:19:09,600
and it will not be detected in the

499
00:19:09,600 --> 00:19:12,320
avs or the antivirus that is present in

500
00:19:12,320 --> 00:19:13,679
the machine

501
00:19:13,679 --> 00:19:16,640
and let's create couple more

502
00:19:16,640 --> 00:19:17,600
and

503
00:19:17,600 --> 00:19:20,080
let's check

504
00:19:22,960 --> 00:19:25,360
let's grab the screenshot of that

505
00:19:25,360 --> 00:19:27,840
particular

506
00:19:29,039 --> 00:19:31,360
motion

507
00:19:32,480 --> 00:19:35,440
let's have a test launch oh and then

508
00:19:35,440 --> 00:19:38,480
we can grab the screenshot model which

509
00:19:38,480 --> 00:19:40,320
will grab

510
00:19:40,320 --> 00:19:42,240
which will take a screenshot and upload

511
00:19:42,240 --> 00:19:45,679
it upload it to the server

512
00:19:45,679 --> 00:19:48,640
and then we have

513
00:19:48,860 --> 00:19:51,200
[Music]

514
00:19:51,200 --> 00:19:52,960
we have keyloggers

515
00:19:52,960 --> 00:19:54,240
so let's

516
00:19:54,240 --> 00:19:57,280
press keyloggers

517
00:19:58,480 --> 00:20:00,400
we can see the notifications

518
00:20:00,400 --> 00:20:02,720
so that that particular process is

519
00:20:02,720 --> 00:20:04,240
completed

520
00:20:04,240 --> 00:20:06,559
and we will look into the output in a

521
00:20:06,559 --> 00:20:07,600
minute

522
00:20:07,600 --> 00:20:08,400
so

523
00:20:08,400 --> 00:20:11,280
i will schedule this one aspect

524
00:20:11,280 --> 00:20:12,880
so you can see the

525
00:20:12,880 --> 00:20:15,760
system and the information

526
00:20:15,760 --> 00:20:19,280
task that i set it right now has been

527
00:20:19,280 --> 00:20:21,360
completed

528
00:20:21,360 --> 00:20:23,120
once you click this particular button

529
00:20:23,120 --> 00:20:24,320
you will see the

530
00:20:24,320 --> 00:20:27,039
task details so you have the task

531
00:20:27,039 --> 00:20:28,640
information

532
00:20:28,640 --> 00:20:31,840
about the task name target ip language

533
00:20:31,840 --> 00:20:33,039
and what

534
00:20:33,039 --> 00:20:34,799
we can we use

535
00:20:34,799 --> 00:20:36,640
the limits

536
00:20:36,640 --> 00:20:39,280
and whether it is scheduled or completed

537
00:20:39,280 --> 00:20:41,679
at what time it has been completed

538
00:20:41,679 --> 00:20:43,760
and then here we have the output of that

539
00:20:43,760 --> 00:20:46,000
particular beacon so we have the system

540
00:20:46,000 --> 00:20:47,679
information

541
00:20:47,679 --> 00:20:48,640
memory

542
00:20:48,640 --> 00:20:51,919
disks and then types of partitions we

543
00:20:51,919 --> 00:20:53,200
have

544
00:20:53,200 --> 00:20:55,440
and then the network information and all

545
00:20:55,440 --> 00:20:58,480
those stuff so let's go back

546
00:20:58,480 --> 00:21:00,799
so based on the long haul of short haul

547
00:21:00,799 --> 00:21:03,760
it will

548
00:21:03,760 --> 00:21:06,559
act according since i have made the

549
00:21:06,559 --> 00:21:09,840
keylogger let me type something so

550
00:21:09,840 --> 00:21:11,840
it gets captured

551
00:21:11,840 --> 00:21:13,280
and

552
00:21:13,280 --> 00:21:17,039
it will report back to the server

553
00:21:17,039 --> 00:21:19,760
so let me show you you can see that

554
00:21:19,760 --> 00:21:22,400
it was in progress

555
00:21:22,400 --> 00:21:23,440
and then

556
00:21:23,440 --> 00:21:25,679
we can get the process list of the linux

557
00:21:25,679 --> 00:21:26,720
speaker

558
00:21:26,720 --> 00:21:30,400
let's have this process list

559
00:21:34,559 --> 00:21:37,600
asynchronous manner so even if this

560
00:21:37,600 --> 00:21:39,039
particular is

561
00:21:39,039 --> 00:21:41,360
running it does not stop from running

562
00:21:41,360 --> 00:21:43,760
this particular task but since we have

563
00:21:43,760 --> 00:21:46,799
made it just it doesn't long haul

564
00:21:46,799 --> 00:21:48,799
uh it will run only after five minutes

565
00:21:48,799 --> 00:21:50,960
so we just need to wait for some time

566
00:21:50,960 --> 00:21:52,640
and meanwhile we will schedule other

567
00:21:52,640 --> 00:21:55,280
tasks so you can see this it is a long

568
00:21:55,280 --> 00:21:58,280
hour

569
00:21:59,039 --> 00:22:01,120
so we will show you

570
00:22:01,120 --> 00:22:05,200
other tasks and we will get the output

571
00:22:05,200 --> 00:22:07,039
yeah

572
00:22:07,039 --> 00:22:12,120
we have port scan one and then file scan

573
00:22:27,760 --> 00:22:30,158
so

574
00:22:31,280 --> 00:22:33,600
we just need to rerun the process

575
00:22:33,600 --> 00:22:37,799
there's something wrong

576
00:22:43,840 --> 00:22:47,120
i'll just show you the last one

577
00:22:47,120 --> 00:22:49,120
which is the profile feature where you

578
00:22:49,120 --> 00:22:52,080
will have the username lady the login

579
00:22:52,080 --> 00:22:53,440
information

580
00:22:53,440 --> 00:22:56,159
and then we have the ap key which will

581
00:22:56,159 --> 00:22:57,679
be used by the

582
00:22:57,679 --> 00:23:00,080
attacker to get access through the cli

583
00:23:00,080 --> 00:23:01,039
version

584
00:23:01,039 --> 00:23:02,559
and then we have the

585
00:23:02,559 --> 00:23:04,960
download feature as well so this will

586
00:23:04,960 --> 00:23:07,600
get your cli.py file

587
00:23:07,600 --> 00:23:09,840
into the

588
00:23:09,840 --> 00:23:12,799
and this should

589
00:23:12,799 --> 00:23:15,520
this should have your

590
00:23:15,520 --> 00:23:16,799
all the

591
00:23:16,799 --> 00:23:20,240
features and then the apa keys

592
00:23:20,240 --> 00:23:22,640
and you can interact with the buzzer

593
00:23:22,640 --> 00:23:25,520
through that if you don't like the web

594
00:23:25,520 --> 00:23:28,240
interface let me showcase that as well

595
00:23:28,240 --> 00:23:31,679
and then we'll move on

596
00:23:31,679 --> 00:23:33,200
so

597
00:23:33,200 --> 00:23:36,200
sorry

598
00:23:39,280 --> 00:23:41,360
and it talks data

599
00:23:41,360 --> 00:23:43,760
it takes few other

600
00:23:43,760 --> 00:23:46,320
arguments so you can create tasks you

601
00:23:46,320 --> 00:23:48,159
can check the result of that particular

602
00:23:48,159 --> 00:23:50,799
task you can list the task

603
00:23:50,799 --> 00:23:52,240
then we

604
00:23:52,240 --> 00:23:54,640
when we create a task we just need to

605
00:23:54,640 --> 00:23:57,440
name the task and give a target id

606
00:23:57,440 --> 00:23:59,840
and then what type of we can be used and

607
00:23:59,840 --> 00:24:01,840
whether it is a short haul or a long

608
00:24:01,840 --> 00:24:03,520
curve

609
00:24:03,520 --> 00:24:08,240
and you can list the task as well so

610
00:24:08,320 --> 00:24:10,640
and it will go and look up for the tasks

611
00:24:10,640 --> 00:24:12,240
that are assigned by

612
00:24:12,240 --> 00:24:14,640
this particular user and you will have

613
00:24:14,640 --> 00:24:17,960
all the information

614
00:24:24,960 --> 00:24:27,200
and you can see the screen grabber the

615
00:24:27,200 --> 00:24:28,320
screenshot

616
00:24:28,320 --> 00:24:30,159
beacon has been completed

617
00:24:30,159 --> 00:24:32,559
and you can see the screenshot that has

618
00:24:32,559 --> 00:24:34,240
been grabbed from the

619
00:24:34,240 --> 00:24:37,440
beacon that we implanted and

620
00:24:37,440 --> 00:24:40,640
you can see over here

621
00:24:40,799 --> 00:24:43,200
and then

622
00:24:45,279 --> 00:24:46,799
i guess that uh

623
00:24:46,799 --> 00:24:49,279
let me hand over to the elementary and

624
00:24:49,279 --> 00:24:52,480
we will take some yeah

625
00:24:53,120 --> 00:24:55,279
all right uh i wanna thank you very much

626
00:24:55,279 --> 00:24:58,000
for your real quick demo

627
00:24:58,000 --> 00:25:00,559
so uh i'm sorry i'll just uh do a quick

628
00:25:00,559 --> 00:25:03,039
overrun on all the things you know when

629
00:25:03,039 --> 00:25:05,520
the test calls so the first thing before

630
00:25:05,520 --> 00:25:08,640
getting to this slide the

631
00:25:08,640 --> 00:25:10,720
first thing is like with all the

632
00:25:10,720 --> 00:25:12,559
modules we have

633
00:25:12,559 --> 00:25:13,440
are

634
00:25:13,440 --> 00:25:15,919
and should be propagated via this short

635
00:25:15,919 --> 00:25:18,640
howl because you know i think you know

636
00:25:18,640 --> 00:25:22,400
it's not persistent enough and it uh

637
00:25:22,400 --> 00:25:24,159
creates a lot of noise in the you know

638
00:25:24,159 --> 00:25:26,960
the client machine to be honest so

639
00:25:26,960 --> 00:25:29,840
currently buzzard is not capable of

640
00:25:29,840 --> 00:25:32,720
handling anti-detection techniques so i

641
00:25:32,720 --> 00:25:33,840
mean i can just get to the detection

642
00:25:33,840 --> 00:25:36,480
slide if you don't mind

643
00:25:36,480 --> 00:25:38,880
all right thank you very much so as i

644
00:25:38,880 --> 00:25:41,360
just discussed that

645
00:25:41,360 --> 00:25:43,679
buzzard is not capable in this first

646
00:25:43,679 --> 00:25:47,760
release to bypass uh custom edrs and avs

647
00:25:47,760 --> 00:25:49,760
but yeah definitely uh on the next

648
00:25:49,760 --> 00:25:52,559
release will back it up with the stealth

649
00:25:52,559 --> 00:25:55,039
and persistent beacons and whoever the

650
00:25:55,039 --> 00:25:58,159
operator will be using buzzer should and

651
00:25:58,159 --> 00:26:00,880
must go for long haul moment because a

652
00:26:00,880 --> 00:26:04,000
long haul uh mode sorry so uh so that

653
00:26:04,000 --> 00:26:06,240
you know just you can deploy steal and

654
00:26:06,240 --> 00:26:08,799
position based beacons all right i live

655
00:26:08,799 --> 00:26:11,840
in the next slide please

656
00:26:12,080 --> 00:26:14,480
yeah future updates so

657
00:26:14,480 --> 00:26:16,559
once again you know just uh doing a

658
00:26:16,559 --> 00:26:19,279
quick overrun all the beacons we have

659
00:26:19,279 --> 00:26:23,200
right now are made of python uh

660
00:26:23,200 --> 00:26:28,159
bash and uh rust so basically uh we are

661
00:26:28,159 --> 00:26:29,360
planning to

662
00:26:29,360 --> 00:26:32,640
uh develop more full-fledged uh modules

663
00:26:32,640 --> 00:26:34,880
or beacons you know in the future

664
00:26:34,880 --> 00:26:37,919
updates and cross-platform support now

665
00:26:37,919 --> 00:26:40,240
although our you know custom beacons or

666
00:26:40,240 --> 00:26:43,360
modules whatever you call it support uh

667
00:26:43,360 --> 00:26:45,279
windows uh uh

668
00:26:45,279 --> 00:26:47,840
based operations but yeah definitely we

669
00:26:47,840 --> 00:26:50,240
think as uh developers we think it's not

670
00:26:50,240 --> 00:26:53,279
full-fledgedly uh you know supporting so

671
00:26:53,279 --> 00:26:56,240
it's in a semi-stable mode and as you

672
00:26:56,240 --> 00:26:57,840
know the the

673
00:26:57,840 --> 00:26:58,720
main

674
00:26:58,720 --> 00:27:01,200
goal of you know modern day c2 should be

675
00:27:01,200 --> 00:27:03,679
you know to

676
00:27:03,679 --> 00:27:07,440
play around the custom avs and ideas and

677
00:27:07,440 --> 00:27:09,760
help the detection engineers to you know

678
00:27:09,760 --> 00:27:13,279
uh have a look on how actually attackers

679
00:27:13,279 --> 00:27:17,200
can you know evade their

680
00:27:17,279 --> 00:27:18,240
daily

681
00:27:18,240 --> 00:27:19,039
job

682
00:27:19,039 --> 00:27:22,000
so making you know it's a

683
00:27:22,000 --> 00:27:23,840
sort of

684
00:27:23,840 --> 00:27:25,200
uh

685
00:27:25,200 --> 00:27:28,240
persistent and then uh modules and

686
00:27:28,240 --> 00:27:31,039
implant and rust go and name so you

687
00:27:31,039 --> 00:27:33,200
might be you know curious like why do

688
00:27:33,200 --> 00:27:35,440
you uh include neem go and rush all this

689
00:27:35,440 --> 00:27:38,480
you can go for native beacons so

690
00:27:38,480 --> 00:27:41,279
based on this uh this uh ros go and name

691
00:27:41,279 --> 00:27:43,120
i guess uh

692
00:27:43,120 --> 00:27:45,840
i mean uh all these languages are

693
00:27:45,840 --> 00:27:48,159
backed up by llvm which is definitely

694
00:27:48,159 --> 00:27:50,240
you know is a good candidate for av you

695
00:27:50,240 --> 00:27:52,640
know bypass to be honest so that's why

696
00:27:52,640 --> 00:27:54,640
we will be going for roger go and neem

697
00:27:54,640 --> 00:27:57,039
and more and more implants in future and

698
00:27:57,039 --> 00:27:59,520
definitely as hip as programmers you

699
00:27:59,520 --> 00:28:01,760
know we always prefer dark over white

700
00:28:01,760 --> 00:28:02,399
right

701
00:28:02,399 --> 00:28:03,279
so

702
00:28:03,279 --> 00:28:04,960
uh all these themes and all so

703
00:28:04,960 --> 00:28:07,520
definitely all this uh on the next

704
00:28:07,520 --> 00:28:10,080
update will be bringing a dark theme you

705
00:28:10,080 --> 00:28:13,039
know which else also relaxes it and

706
00:28:13,039 --> 00:28:14,320
definitely

707
00:28:14,320 --> 00:28:17,200
additional modules in python and more

708
00:28:17,200 --> 00:28:19,200
and more still than possession modules

709
00:28:19,200 --> 00:28:20,880
in python in the next update

710
00:28:20,880 --> 00:28:24,080
i mean the next slide please

711
00:28:25,760 --> 00:28:28,559
i'm sorry uh our two cents as uh you

712
00:28:28,559 --> 00:28:29,520
know

713
00:28:29,520 --> 00:28:30,320
us

714
00:28:30,320 --> 00:28:32,720
authors or developers honestly it was a

715
00:28:32,720 --> 00:28:35,440
bit tedious work for us because without

716
00:28:35,440 --> 00:28:38,399
having you know custom or prior team

717
00:28:38,399 --> 00:28:40,559
experience and full-time research as you

718
00:28:40,559 --> 00:28:42,320
know being students and learners but

719
00:28:42,320 --> 00:28:44,399
yeah definitely uh

720
00:28:44,399 --> 00:28:47,360
as we told we aim it for uh making it

721
00:28:47,360 --> 00:28:49,360
that's tilt and possessed in our future

722
00:28:49,360 --> 00:28:52,080
updates and definitely right now the

723
00:28:52,080 --> 00:28:53,360
release

724
00:28:53,360 --> 00:28:54,320
uh

725
00:28:54,320 --> 00:28:57,200
of buzzard is in beta version and yes

726
00:28:57,200 --> 00:28:58,640
you can play around plug and play around

727
00:28:58,640 --> 00:29:01,520
with as my friend ravinder you know this

728
00:29:01,520 --> 00:29:04,720
uh uh demonstrator that you can uh add

729
00:29:04,720 --> 00:29:06,640
your own custom beacons also

730
00:29:06,640 --> 00:29:08,000
so you know that's a quite a good

731
00:29:08,000 --> 00:29:09,600
feature you can just play around and

732
00:29:09,600 --> 00:29:11,919
test over your skills around you this uh

733
00:29:11,919 --> 00:29:13,760
customers and ideas so that's a good

734
00:29:13,760 --> 00:29:16,960
skill and definitely we do have you know

735
00:29:16,960 --> 00:29:19,679
like uh decent ui for you know making

736
00:29:19,679 --> 00:29:22,720
the operator's job quite easy and

737
00:29:22,720 --> 00:29:25,039
yeah definitely uh we would like to

738
00:29:25,039 --> 00:29:27,679
appreciate the red team community and

739
00:29:27,679 --> 00:29:30,559
definitely post exploration feature uh

740
00:29:30,559 --> 00:29:33,360
developers for inspiring us to

741
00:29:33,360 --> 00:29:37,440
make buzzard whatever it is and

742
00:29:37,440 --> 00:29:39,760
then uh yeah then this project will be

743
00:29:39,760 --> 00:29:41,520
completely open source and will be we're

744
00:29:41,520 --> 00:29:43,279
planning to maintain it for next one

745
00:29:43,279 --> 00:29:46,320
half years deploying beacons uh

746
00:29:46,320 --> 00:29:48,399
programmed in all those languages which

747
00:29:48,399 --> 00:29:50,000
are a good candidate for you know

748
00:29:50,000 --> 00:29:52,799
bypassing avs and adrs that it helps

749
00:29:52,799 --> 00:29:54,799
both the red team and the detection

750
00:29:54,799 --> 00:29:56,240
engineering community

751
00:29:56,240 --> 00:29:59,360
i'll be the next slide please

752
00:29:59,360 --> 00:30:02,080
all right uh time for a uh

753
00:30:02,080 --> 00:30:03,679
quick credit

754
00:30:03,679 --> 00:30:06,000
and thanks session uh definitely would

755
00:30:06,000 --> 00:30:08,480
like to include a bad set in our world

756
00:30:08,480 --> 00:30:10,480
because this guy helped a lot because

757
00:30:10,480 --> 00:30:12,880
and as uh with his uh

758
00:30:12,880 --> 00:30:15,679
all his knowledge with he had and

759
00:30:15,679 --> 00:30:17,919
definitely allocated allocating his time

760
00:30:17,919 --> 00:30:19,919
ninja paranoid for helping us but never

761
00:30:19,919 --> 00:30:22,320
raised him and yeah definitely broad

762
00:30:22,320 --> 00:30:24,399
rattle actually spatters to build you

763
00:30:24,399 --> 00:30:28,000
know a basic uh forward i mean custom

764
00:30:28,000 --> 00:30:29,919
post exploration framework like buzzard

765
00:30:29,919 --> 00:30:32,720
rkvl for helping us out whenever we used

766
00:30:32,720 --> 00:30:34,960
him and support for his uh

767
00:30:34,960 --> 00:30:37,600
go beacons shogun lab shogun lab

768
00:30:37,600 --> 00:30:39,279
actually released a you know acquired a

769
00:30:39,279 --> 00:30:41,120
white book you must check it out uh

770
00:30:41,120 --> 00:30:43,039
building a post explorer

771
00:30:43,039 --> 00:30:44,880
expression framework from scratch and

772
00:30:44,880 --> 00:30:47,679
that book has actually helped us a lot

773
00:30:47,679 --> 00:30:50,399
to you know uh design buzzard if that

774
00:30:50,399 --> 00:30:52,320
book hadn't been released probably

775
00:30:52,320 --> 00:30:53,919
buzzer would not exist honestly so

776
00:30:53,919 --> 00:30:56,320
thanks a lot shogun lab and awesome red

777
00:30:56,320 --> 00:30:59,200
taming community for their r d against

778
00:30:59,200 --> 00:31:02,000
edrs and avs and definitely

779
00:31:02,000 --> 00:31:03,840
uh we would like to include detection

780
00:31:03,840 --> 00:31:06,399
engineers in their in our worlds because

781
00:31:06,399 --> 00:31:08,399
they're the one who you know

782
00:31:08,399 --> 00:31:10,399
gave us provide us feedback to improve

783
00:31:10,399 --> 00:31:11,840
ourselves so without detection

784
00:31:11,840 --> 00:31:14,399
engineering community uh probably more

785
00:31:14,399 --> 00:31:17,120
we would not be able to you know develop

786
00:31:17,120 --> 00:31:20,559
c2 so a huge helps off for defenders and

787
00:31:20,559 --> 00:31:23,039
listening community and yeah definitely

788
00:31:23,039 --> 00:31:25,120
sacred cash cow taping workshops for

789
00:31:25,120 --> 00:31:27,760
that unique idea you know to include uh

790
00:31:27,760 --> 00:31:30,640
the beacons and implants for the without

791
00:31:30,640 --> 00:31:32,399
the this um

792
00:31:32,399 --> 00:31:34,559
languages various programming languages

793
00:31:34,559 --> 00:31:37,279
and veil for providing us a decent

794
00:31:37,279 --> 00:31:39,519
amount of you know overview and

795
00:31:39,519 --> 00:31:42,240
improvements and trickster zero because

796
00:31:42,240 --> 00:31:43,039
uh

797
00:31:43,039 --> 00:31:44,880
for its offensive ross triple we have

798
00:31:44,880 --> 00:31:46,960
included some plus beacons

799
00:31:46,960 --> 00:31:49,679
so definitely a huge thanks goes to him

800
00:31:49,679 --> 00:31:51,600
all right i've been and the next slide

801
00:31:51,600 --> 00:31:53,840
please

802
00:31:53,840 --> 00:31:55,919
all right that's a wrap quick wrap of

803
00:31:55,919 --> 00:31:58,960
our you know post exploitation uh

804
00:31:58,960 --> 00:32:01,440
module uh or whatever framework you call

805
00:32:01,440 --> 00:32:04,320
it and yeah definitely all the promises

806
00:32:04,320 --> 00:32:05,279
of

807
00:32:05,279 --> 00:32:07,039
this custom beacons and all these things

808
00:32:07,039 --> 00:32:09,919
will definitely keep it engaging

809
00:32:09,919 --> 00:32:10,880
so

810
00:32:10,880 --> 00:32:13,600
all right so that's a wrap

811
00:32:13,600 --> 00:32:15,200
feel free to ask us a question in our

812
00:32:15,200 --> 00:32:17,039
discord chat and definitely if you've

813
00:32:17,039 --> 00:32:18,640
got suggestions that definitely will

814
00:32:18,640 --> 00:32:19,440
have

815
00:32:19,440 --> 00:32:20,960
love to have your suggestions and you

816
00:32:20,960 --> 00:32:23,200
know uh positive criticism to you know

817
00:32:23,200 --> 00:32:25,919
improve ourselves differently so if you

818
00:32:25,919 --> 00:32:27,919
you know reach us out as our official

819
00:32:27,919 --> 00:32:29,679
discord server the slides will also be

820
00:32:29,679 --> 00:32:31,519
available so

821
00:32:31,519 --> 00:32:33,440
all right and thank you very much for

822
00:32:33,440 --> 00:32:35,360
hanging us out and you know dedicating

823
00:32:35,360 --> 00:32:38,000
your important time to you know hear us

824
00:32:38,000 --> 00:32:41,039
about our challenges on developing a

825
00:32:41,039 --> 00:32:43,279
post-exploration framework against odd

826
00:32:43,279 --> 00:32:45,840
odds all right that's a quick wrap and

827
00:32:45,840 --> 00:32:48,000
hack the plan thank you very much thanks

828
00:32:48,000 --> 00:32:51,000
arabinda

