1
00:00:02,080 --> 00:00:04,560
hello everyone um our talk is about

2
00:00:04,560 --> 00:00:06,000
securing process control data

3
00:00:06,000 --> 00:00:07,359
transmission

4
00:00:07,359 --> 00:00:09,599
to the blockchain network today we're

5
00:00:09,599 --> 00:00:11,280
going to talk about blockchain

6
00:00:11,280 --> 00:00:13,280
integration to industrial control

7
00:00:13,280 --> 00:00:14,480
systems

8
00:00:14,480 --> 00:00:16,800
why the ics industry is taking too long

9
00:00:16,800 --> 00:00:18,720
to adopt blockchain and you know

10
00:00:18,720 --> 00:00:20,240
how blockchain technology could have

11
00:00:20,240 --> 00:00:22,480
been a solution in speeding up the

12
00:00:22,480 --> 00:00:24,480
production of coveted 19 pandemic

13
00:00:24,480 --> 00:00:26,720
vaccine as a sample use case

14
00:00:26,720 --> 00:00:28,960
so we'll talk about that later

15
00:00:28,960 --> 00:00:31,359
but before of all of those let us first

16
00:00:31,359 --> 00:00:34,320
introduce ourselves

17
00:00:34,559 --> 00:00:36,880
i am ken tugbo i'm a former

18
00:00:36,880 --> 00:00:38,559
resource speaker and a college

19
00:00:38,559 --> 00:00:39,680
instructor

20
00:00:39,680 --> 00:00:42,320
i am more on automation

21
00:00:42,320 --> 00:00:44,640
instrumentation and control system

22
00:00:44,640 --> 00:00:47,039
security i'm pretty i'm also a certified

23
00:00:47,039 --> 00:00:48,000
architect

24
00:00:48,000 --> 00:00:50,320
focusing in uh security as well

25
00:00:50,320 --> 00:00:51,760
i'm a software security engineer at

26
00:00:51,760 --> 00:00:53,920
amazon um that develops hybrid

27
00:00:53,920 --> 00:00:55,360
technologies like

28
00:00:55,360 --> 00:00:58,000
distributed control system in scada

29
00:00:58,000 --> 00:00:59,840
today i have my friend and colleague

30
00:00:59,840 --> 00:01:01,600
jimmy aryan haley's she's currently

31
00:01:01,600 --> 00:01:03,120
working as a software engineer at amazon

32
00:01:03,120 --> 00:01:04,000
as well

33
00:01:04,000 --> 00:01:04,799
and

34
00:01:04,799 --> 00:01:08,880
her interest lies in ics cyber security

35
00:01:08,880 --> 00:01:11,520
vulnerability management and application

36
00:01:11,520 --> 00:01:13,760
security

37
00:01:13,760 --> 00:01:15,280
today um

38
00:01:15,280 --> 00:01:17,759
our discussion will be subdivided in the

39
00:01:17,759 --> 00:01:20,080
following segments um blockchain

40
00:01:20,080 --> 00:01:22,560
diversified isis succession criteria and

41
00:01:22,560 --> 00:01:23,759
etc

42
00:01:23,759 --> 00:01:24,560
so

43
00:01:24,560 --> 00:01:29,040
let me demystify blockchain first

44
00:01:30,560 --> 00:01:33,439
before we go any further let me explain

45
00:01:33,439 --> 00:01:35,840
what blockchain technology is and you

46
00:01:35,840 --> 00:01:37,200
know how it works

47
00:01:37,200 --> 00:01:39,680
the um original blockchain is open

48
00:01:39,680 --> 00:01:41,920
source technology that replaces the

49
00:01:41,920 --> 00:01:43,840
traditional intermediary

50
00:01:43,840 --> 00:01:44,560
for

51
00:01:44,560 --> 00:01:45,520
uh

52
00:01:45,520 --> 00:01:47,759
bitcoin transfer the ecosystems

53
00:01:47,759 --> 00:01:49,759
collectively verify verification

54
00:01:49,759 --> 00:01:51,119
replaces the

55
00:01:51,119 --> 00:01:53,360
intermediary increasing the um

56
00:01:53,360 --> 00:01:54,399
traceability

57
00:01:54,399 --> 00:01:56,079
and security

58
00:01:56,079 --> 00:01:58,479
um well blockchain technology can now be

59
00:01:58,479 --> 00:01:59,360
used in

60
00:01:59,360 --> 00:02:03,119
private public and hybrid setup as well

61
00:02:03,119 --> 00:02:05,200
as you know outside of the financial

62
00:02:05,200 --> 00:02:06,159
sector

63
00:02:06,159 --> 00:02:08,160
which we will discuss later so how it

64
00:02:08,160 --> 00:02:09,919
works so

65
00:02:09,919 --> 00:02:12,160
if a transaction is requested it is

66
00:02:12,160 --> 00:02:14,720
broadcasted to a peer-to-peer network

67
00:02:14,720 --> 00:02:18,000
computers it is also called nodes then a

68
00:02:18,000 --> 00:02:20,560
verified transaction can involve

69
00:02:20,560 --> 00:02:24,000
cryptocurrency um contracts records or

70
00:02:24,000 --> 00:02:25,920
you know other information depending on

71
00:02:25,920 --> 00:02:27,280
the use case

72
00:02:27,280 --> 00:02:29,520
once verified the transaction is

73
00:02:29,520 --> 00:02:32,080
combined with other transactions to

74
00:02:32,080 --> 00:02:35,120
create a new ledger block

75
00:02:35,120 --> 00:02:36,800
the new block is then added to the

76
00:02:36,800 --> 00:02:38,319
existing blockchain which is you know

77
00:02:38,319 --> 00:02:42,000
permanent and unalterable

78
00:02:42,000 --> 00:02:43,040
you know

79
00:02:43,040 --> 00:02:45,840
um blockchain technology is really hype

80
00:02:45,840 --> 00:02:48,319
right now well in fact aside from

81
00:02:48,319 --> 00:02:50,480
finance we're seeing a lot of

82
00:02:50,480 --> 00:02:52,959
new games being developed in blockchain

83
00:02:52,959 --> 00:02:55,200
filipinos are one of the highest users

84
00:02:55,200 --> 00:02:57,519
of actually infinity in fact

85
00:02:57,519 --> 00:02:59,200
ansi infinity is a crypto gaming

86
00:02:59,200 --> 00:03:01,200
platform its mission is to make

87
00:03:01,200 --> 00:03:04,080
blockchain technology accessible to all

88
00:03:04,080 --> 00:03:06,319
it is actually built on ethereum

89
00:03:06,319 --> 00:03:08,239
platform it is actually a paper in

90
00:03:08,239 --> 00:03:09,519
crypto

91
00:03:09,519 --> 00:03:10,400
and

92
00:03:10,400 --> 00:03:13,040
actually mechanisms reward players

93
00:03:13,040 --> 00:03:15,200
for you know interacting with axe

94
00:03:15,200 --> 00:03:17,200
infinity while also encouraging them to

95
00:03:17,200 --> 00:03:21,120
keep their tokens to earn more rewards

96
00:03:21,120 --> 00:03:23,280
it also decentralized access infinity

97
00:03:23,280 --> 00:03:25,760
ownership and governance so overall

98
00:03:25,760 --> 00:03:28,159
they use blockchain for governance

99
00:03:28,159 --> 00:03:31,440
taking and payment so not just for a

100
00:03:31,440 --> 00:03:33,519
single transactions

101
00:03:33,519 --> 00:03:34,720
so

102
00:03:34,720 --> 00:03:36,319
to dismay

103
00:03:36,319 --> 00:03:38,799
the uh the gamers the cryptocurrency

104
00:03:38,799 --> 00:03:40,400
craze has led

105
00:03:40,400 --> 00:03:43,360
to an increase in the price of gpus

106
00:03:43,360 --> 00:03:44,959
due to the worldwide shortness of the

107
00:03:44,959 --> 00:03:47,920
new and used gpus and video the company

108
00:03:47,920 --> 00:03:49,760
you know that embedded gpus

109
00:03:49,760 --> 00:03:52,319
announced a new line of graphic cards

110
00:03:52,319 --> 00:03:55,120
with reduced husk rates to make them you

111
00:03:55,120 --> 00:03:58,319
know that's desirable for miners

112
00:03:58,319 --> 00:03:59,599
and

113
00:03:59,599 --> 00:04:01,840
um when i presented a similar topic in

114
00:04:01,840 --> 00:04:05,120
blockchain being overhyped last 2017

115
00:04:05,120 --> 00:04:07,599
we saw back then that there's a lot of

116
00:04:07,599 --> 00:04:10,080
startup companies that are failing to

117
00:04:10,080 --> 00:04:12,000
penetrate the embassy

118
00:04:12,000 --> 00:04:14,000
we think this is because they just

119
00:04:14,000 --> 00:04:15,920
implement that without validating the

120
00:04:15,920 --> 00:04:18,000
use case so you know

121
00:04:18,000 --> 00:04:20,478
when implementing blockchain it is very

122
00:04:20,478 --> 00:04:22,639
important that you know your valid use

123
00:04:22,639 --> 00:04:25,520
case before you can use the technology

124
00:04:25,520 --> 00:04:27,360
so that your startup company hopefully

125
00:04:27,360 --> 00:04:28,880
will be successful

126
00:04:28,880 --> 00:04:29,759
so

127
00:04:29,759 --> 00:04:31,840
here we are showing you where is it

128
00:04:31,840 --> 00:04:33,120
worst

129
00:04:33,120 --> 00:04:35,040
it is okay to use and technically the

130
00:04:35,040 --> 00:04:37,600
best purpose of blockchain

131
00:04:37,600 --> 00:04:39,199
you know um

132
00:04:39,199 --> 00:04:42,639
since 2017 when i started to learn about

133
00:04:42,639 --> 00:04:43,919
blockchain

134
00:04:43,919 --> 00:04:46,320
there's a lot of use cases we're seeing

135
00:04:46,320 --> 00:04:48,800
right now let's say for example in

136
00:04:48,800 --> 00:04:51,680
luxury items in r7 we're seeing nowadays

137
00:04:51,680 --> 00:04:53,360
a lot of nfc

138
00:04:53,360 --> 00:04:55,120
use cases like as you can see in the

139
00:04:55,120 --> 00:04:57,440
screen stephen curry bought an art

140
00:04:57,440 --> 00:05:00,479
technically an image for you know 180

141
00:05:00,479 --> 00:05:02,479
000 that's used

142
00:05:02,479 --> 00:05:04,320
well definitely you can copy that image

143
00:05:04,320 --> 00:05:06,639
and post it in your twitter account but

144
00:05:06,639 --> 00:05:08,880
you can't prove your own the ownership

145
00:05:08,880 --> 00:05:10,400
of that image so basically

146
00:05:10,400 --> 00:05:13,039
that's where blockchain comes in another

147
00:05:13,039 --> 00:05:15,280
use case is marriage

148
00:05:15,280 --> 00:05:18,240
couples choose this route you know for

149
00:05:18,240 --> 00:05:21,199
them to personalize their vows

150
00:05:21,199 --> 00:05:22,720
and finally

151
00:05:22,720 --> 00:05:25,199
by scanning the qr code of your turkey

152
00:05:25,199 --> 00:05:28,400
you can verify that it was it was raised

153
00:05:28,400 --> 00:05:33,280
on their farm or fed a specific diet

154
00:05:33,280 --> 00:05:35,199
so

155
00:05:35,199 --> 00:05:37,520
you know there's a lot of use use cases

156
00:05:37,520 --> 00:05:39,680
for blockchain now but we're still not

157
00:05:39,680 --> 00:05:42,400
seeing a widespread adoption for

158
00:05:42,400 --> 00:05:44,880
industrial control control systems

159
00:05:44,880 --> 00:05:47,199
well in fact security is one of

160
00:05:47,199 --> 00:05:48,960
blockchain's benefit like it can

161
00:05:48,960 --> 00:05:51,360
guarantee validity in data integrity as

162
00:05:51,360 --> 00:05:54,240
i you know mentioned earlier but

163
00:05:54,240 --> 00:05:55,280
still

164
00:05:55,280 --> 00:05:58,000
it's rare that blockchain penetrate the

165
00:05:58,000 --> 00:05:59,360
ics

166
00:05:59,360 --> 00:06:02,319
which we will talk about later on

167
00:06:02,319 --> 00:06:04,840
it might be overhyped in

168
00:06:04,840 --> 00:06:07,120
cryptocurrency and there are already a

169
00:06:07,120 --> 00:06:09,360
lot of use case available

170
00:06:09,360 --> 00:06:12,160
but we are still not seeing adoption for

171
00:06:12,160 --> 00:06:14,639
industrial systems

172
00:06:14,639 --> 00:06:15,759
so why

173
00:06:15,759 --> 00:06:17,520
okay so

174
00:06:17,520 --> 00:06:19,120
um

175
00:06:19,120 --> 00:06:21,440
basically if your solution isn't broken

176
00:06:21,440 --> 00:06:23,280
then not fix it technically don't use

177
00:06:23,280 --> 00:06:24,639
blockchain

178
00:06:24,639 --> 00:06:27,680
in all areas of your business

179
00:06:27,680 --> 00:06:30,240
it is a technical technologically sound

180
00:06:30,240 --> 00:06:32,479
concept with you know what we gave you a

181
00:06:32,479 --> 00:06:34,880
real world application but

182
00:06:34,880 --> 00:06:37,919
it has very specific uses and

183
00:06:37,919 --> 00:06:40,160
not a universal solution

184
00:06:40,160 --> 00:06:42,639
you know people love to tell how great

185
00:06:42,639 --> 00:06:44,560
blockchain is but

186
00:06:44,560 --> 00:06:46,639
that's because they've never tried using

187
00:06:46,639 --> 00:06:48,960
it blockchain has become a password

188
00:06:48,960 --> 00:06:50,960
nowadays used by companies to appear

189
00:06:50,960 --> 00:06:52,240
innovative

190
00:06:52,240 --> 00:06:53,520
but

191
00:06:53,520 --> 00:06:55,680
do you really need one before you join

192
00:06:55,680 --> 00:06:58,080
the hive take a look at the big picture

193
00:06:58,080 --> 00:07:00,639
do we really need blockchain for ics so

194
00:07:00,639 --> 00:07:01,520
for us

195
00:07:01,520 --> 00:07:02,960
um there are

196
00:07:02,960 --> 00:07:04,800
there should be general considerations

197
00:07:04,800 --> 00:07:07,280
like you know statefulness is there a

198
00:07:07,280 --> 00:07:08,479
need

199
00:07:08,479 --> 00:07:11,039
to store state in ics

200
00:07:11,039 --> 00:07:12,560
assets are you know are there any

201
00:07:12,560 --> 00:07:14,840
physical assets convertible

202
00:07:14,840 --> 00:07:18,800
to digital assets transactions

203
00:07:18,800 --> 00:07:21,199
are transaction involves if not can the

204
00:07:21,199 --> 00:07:24,000
overall process be broken down into mini

205
00:07:24,000 --> 00:07:25,840
transactions for example

206
00:07:25,840 --> 00:07:27,599
intermediaries does removing

207
00:07:27,599 --> 00:07:30,639
intermediaries result in reduce costs

208
00:07:30,639 --> 00:07:34,400
be in time or in resources for ics

209
00:07:34,400 --> 00:07:36,080
and finally trusts are there any

210
00:07:36,080 --> 00:07:37,840
multiple parties involved

211
00:07:37,840 --> 00:07:39,759
or are there parties which are untrusted

212
00:07:39,759 --> 00:07:41,599
for ics you know

213
00:07:41,599 --> 00:07:43,440
these are the general considerations

214
00:07:43,440 --> 00:07:45,120
that you need to check before

215
00:07:45,120 --> 00:07:47,280
considering the technology

216
00:07:47,280 --> 00:07:49,360
and all of these general considerations

217
00:07:49,360 --> 00:07:51,840
are are present in ics thus there's a

218
00:07:51,840 --> 00:07:55,120
benefit using blockchain ics so

219
00:07:55,120 --> 00:07:56,400
for us to

220
00:07:56,400 --> 00:07:57,599
um

221
00:07:57,599 --> 00:08:00,560
to validate that use case

222
00:08:00,560 --> 00:08:02,879
um

223
00:08:03,360 --> 00:08:05,120
let me check that so to further

224
00:08:05,120 --> 00:08:07,759
emphasize that you know we i i will give

225
00:08:07,759 --> 00:08:10,800
you a sample um use case

226
00:08:10,800 --> 00:08:12,720
george thule is one of the inventors of

227
00:08:12,720 --> 00:08:15,120
this patent um which was granted to us

228
00:08:15,120 --> 00:08:18,720
last year by the u.s patent board so our

229
00:08:18,720 --> 00:08:20,479
invention is called machine to machine

230
00:08:20,479 --> 00:08:23,280
transaction using distributed ledgers in

231
00:08:23,280 --> 00:08:25,520
process control system so our invention

232
00:08:25,520 --> 00:08:27,520
will provide a trusted secure and

233
00:08:27,520 --> 00:08:30,000
immutable record of transactions within

234
00:08:30,000 --> 00:08:31,520
a process plan

235
00:08:31,520 --> 00:08:33,120
there were techniques that we described

236
00:08:33,120 --> 00:08:34,559
there for you know utilizing a

237
00:08:34,559 --> 00:08:36,320
distributed ledger in process control

238
00:08:36,320 --> 00:08:38,159
systems and

239
00:08:38,159 --> 00:08:40,240
the um the distributed ledger may be

240
00:08:40,240 --> 00:08:42,000
maintained by nodes which receive

241
00:08:42,000 --> 00:08:44,320
transactions broadcasted from the field

242
00:08:44,320 --> 00:08:46,800
devices controllers and what else

243
00:08:46,800 --> 00:08:49,440
operator workstation or other devices

244
00:08:49,440 --> 00:08:50,800
operating within

245
00:08:50,800 --> 00:08:53,120
the process plan so

246
00:08:53,120 --> 00:08:55,200
um in this manner recorded process

247
00:08:55,200 --> 00:08:57,440
parameter values and product parameter

248
00:08:57,440 --> 00:09:00,080
values may be retrieved to verify the

249
00:09:00,080 --> 00:09:02,640
quality of the products so the use case

250
00:09:02,640 --> 00:09:05,839
here specifically is regulatory data

251
00:09:05,839 --> 00:09:08,160
may be recorded in response to you know

252
00:09:08,160 --> 00:09:09,839
triggering events so that

253
00:09:09,839 --> 00:09:12,959
regulatory agencies can review the data

254
00:09:12,959 --> 00:09:16,640
so the idea is blockchain can be used

255
00:09:16,640 --> 00:09:19,120
in a regulatory compliance purposes for

256
00:09:19,120 --> 00:09:22,399
ics that was we mentioned that it is the

257
00:09:22,399 --> 00:09:25,600
best use case for ics this use case used

258
00:09:25,600 --> 00:09:27,920
blockchain within the secure zone

259
00:09:27,920 --> 00:09:29,519
network of manufacturing plant as you

260
00:09:29,519 --> 00:09:31,519
can see in the screen

261
00:09:31,519 --> 00:09:34,000
we still have a use case outside the

262
00:09:34,000 --> 00:09:36,959
manufacturing plant secure zone so

263
00:09:36,959 --> 00:09:38,560
let's have a let's have a typical

264
00:09:38,560 --> 00:09:41,680
example an approval of covid19 vaccine

265
00:09:41,680 --> 00:09:44,720
so some vaccines are

266
00:09:44,720 --> 00:09:47,720
still awaiting wh or approval and one of

267
00:09:47,720 --> 00:09:51,120
who's requirement is

268
00:09:51,120 --> 00:09:52,959
vaccine manufacturing plants follow

269
00:09:52,959 --> 00:09:55,519
recommended manufacturing best practices

270
00:09:55,519 --> 00:09:57,360
let's use the storage temperature for

271
00:09:57,360 --> 00:09:58,959
example

272
00:09:58,959 --> 00:10:00,320
um

273
00:10:00,320 --> 00:10:02,880
wu monitored parameter

274
00:10:02,880 --> 00:10:04,560
the vaccine storage parameter or

275
00:10:04,560 --> 00:10:06,079
temperature should be kept between

276
00:10:06,079 --> 00:10:08,959
negative 90 degree celsius and negative

277
00:10:08,959 --> 00:10:11,120
60 degree celsius and should be

278
00:10:11,120 --> 00:10:14,320
discarded if it is exists the set limit

279
00:10:14,320 --> 00:10:15,279
you know

280
00:10:15,279 --> 00:10:18,160
also temperature record must be kept for

281
00:10:18,160 --> 00:10:20,160
at least three years

282
00:10:20,160 --> 00:10:22,880
for tracking purposes so now a

283
00:10:22,880 --> 00:10:24,320
blockchain network between

284
00:10:24,320 --> 00:10:26,640
pharmaceutical companies

285
00:10:26,640 --> 00:10:29,600
and regulatory bodies in this case wh o

286
00:10:29,600 --> 00:10:33,120
and fda will speed up the process and

287
00:10:33,120 --> 00:10:35,120
ensure the integrity of data being sent

288
00:10:35,120 --> 00:10:36,560
for approval

289
00:10:36,560 --> 00:10:39,600
okay so another use case for for this

290
00:10:39,600 --> 00:10:42,160
one is to ramp up equipment procurement

291
00:10:42,160 --> 00:10:43,600
for example

292
00:10:43,600 --> 00:10:45,279
in the event of manufacturing plant

293
00:10:45,279 --> 00:10:47,279
device failure the system health is

294
00:10:47,279 --> 00:10:50,079
monitored in real time

295
00:10:50,079 --> 00:10:53,040
and replacement device alarms can be set

296
00:10:53,040 --> 00:10:55,760
up so one once the request is made you

297
00:10:55,760 --> 00:10:58,800
know bids can can be sent out for you

298
00:10:58,800 --> 00:11:00,959
know evaluation the third party

299
00:11:00,959 --> 00:11:02,880
contractors who provide

300
00:11:02,880 --> 00:11:04,880
these services

301
00:11:04,880 --> 00:11:06,480
so as you can see these are all valid

302
00:11:06,480 --> 00:11:07,760
use cases

303
00:11:07,760 --> 00:11:10,240
so now now that we have a valid use case

304
00:11:10,240 --> 00:11:12,959
for ics let's dive into it blockchain

305
00:11:12,959 --> 00:11:14,880
should not only revolve around finances

306
00:11:14,880 --> 00:11:16,959
and cryptocurrencies right in spite of

307
00:11:16,959 --> 00:11:18,880
valid use cases that we talked about

308
00:11:18,880 --> 00:11:21,839
earlier in for ics we have not yet to

309
00:11:21,839 --> 00:11:23,600
see a blockchain based regulatory use

310
00:11:23,600 --> 00:11:24,560
case

311
00:11:24,560 --> 00:11:26,240
in production right now you know that

312
00:11:26,240 --> 00:11:28,079
will help ensure the validity and data

313
00:11:28,079 --> 00:11:30,240
integrity

314
00:11:30,240 --> 00:11:31,680
so let's check for the acceptance

315
00:11:31,680 --> 00:11:33,120
criteria

316
00:11:33,120 --> 00:11:35,040
so first

317
00:11:35,040 --> 00:11:37,279
um we are done on identifying the valid

318
00:11:37,279 --> 00:11:38,640
use case right we talked about that

319
00:11:38,640 --> 00:11:41,120
earlier and we know that it is very

320
00:11:41,120 --> 00:11:43,760
important in applying blockchain so we

321
00:11:43,760 --> 00:11:47,440
validate that the use case is definitely

322
00:11:47,440 --> 00:11:49,279
okay and best to use blockchain now

323
00:11:49,279 --> 00:11:51,680
let's focus on security

324
00:11:51,680 --> 00:11:52,800
as we all know

325
00:11:52,800 --> 00:11:55,040
blockchains blockchain is in famous of

326
00:11:55,040 --> 00:11:57,600
its you know security technologies

327
00:11:57,600 --> 00:11:59,200
and security is one of the main

328
00:11:59,200 --> 00:12:00,639
roadblocks for implementing blockchain

329
00:12:00,639 --> 00:12:02,000
in ics

330
00:12:02,000 --> 00:12:04,800
why because there is a question a minor

331
00:12:04,800 --> 00:12:06,880
question to ensure the secure input of

332
00:12:06,880 --> 00:12:09,200
sensory data to the blockchain you know

333
00:12:09,200 --> 00:12:11,600
how can we ensure the confidentiality of

334
00:12:11,600 --> 00:12:14,160
transmitting data up by hub

335
00:12:14,160 --> 00:12:16,480
in the ics networks for example so you

336
00:12:16,480 --> 00:12:17,920
know overall

337
00:12:17,920 --> 00:12:19,760
data security is the problem since we

338
00:12:19,760 --> 00:12:22,240
all know that data is very important in

339
00:12:22,240 --> 00:12:24,480
industrial control systems

340
00:12:24,480 --> 00:12:25,600
and you know

341
00:12:25,600 --> 00:12:27,360
technology complexity is also a weakness

342
00:12:27,360 --> 00:12:28,639
because right now

343
00:12:28,639 --> 00:12:30,320
none of the blockchain platforms

344
00:12:30,320 --> 00:12:32,720
implements iot focused transaction

345
00:12:32,720 --> 00:12:34,880
validation rules and iot oriented

346
00:12:34,880 --> 00:12:36,880
consensus protocol

347
00:12:36,880 --> 00:12:38,720
so the primary challenge is none

348
00:12:38,720 --> 00:12:41,440
availability of the i the iot centric

349
00:12:41,440 --> 00:12:43,360
consensus protocol

350
00:12:43,360 --> 00:12:44,959
these protocols are for you know

351
00:12:44,959 --> 00:12:46,399
embedded devices for blockchain

352
00:12:46,399 --> 00:12:49,519
implementation in an ics network

353
00:12:49,519 --> 00:12:51,839
we will give you details on that later

354
00:12:51,839 --> 00:12:53,600
on we'll talk about some solutions for

355
00:12:53,600 --> 00:12:55,600
this acceptance criteria at the latter

356
00:12:55,600 --> 00:12:57,680
part of our presentation

357
00:12:57,680 --> 00:12:59,200
and you know other factors such as

358
00:12:59,200 --> 00:13:01,760
performance integration costs

359
00:13:01,760 --> 00:13:04,880
data management etc are still

360
00:13:04,880 --> 00:13:07,839
considered for ics industry acceptance

361
00:13:07,839 --> 00:13:09,760
but we will not talk about that in

362
00:13:09,760 --> 00:13:11,680
details in this session we will just

363
00:13:11,680 --> 00:13:14,160
focus on the security part

364
00:13:14,160 --> 00:13:16,399
okay

365
00:13:16,720 --> 00:13:18,240
so

366
00:13:18,240 --> 00:13:21,600
let's talk about um first why security

367
00:13:21,600 --> 00:13:23,200
is the main roadblock

368
00:13:23,200 --> 00:13:24,160
okay

369
00:13:24,160 --> 00:13:25,920
we talk about data integrity data

370
00:13:25,920 --> 00:13:27,680
privacy and overall data security in

371
00:13:27,680 --> 00:13:29,680
general are all important for ics but

372
00:13:29,680 --> 00:13:32,480
why so for isis use cases

373
00:13:32,480 --> 00:13:35,200
ensuring data accuracy and consistency

374
00:13:35,200 --> 00:13:37,200
throughout its lifetime lifecycle is

375
00:13:37,200 --> 00:13:38,480
critical

376
00:13:38,480 --> 00:13:39,440
you know

377
00:13:39,440 --> 00:13:41,199
data privacy is important because it

378
00:13:41,199 --> 00:13:42,959
protects intellectual properties like

379
00:13:42,959 --> 00:13:44,079
formulas

380
00:13:44,079 --> 00:13:46,480
it is very important for pharmaceutical

381
00:13:46,480 --> 00:13:47,839
pharmaceutical companies to protect

382
00:13:47,839 --> 00:13:49,440
their formulas

383
00:13:49,440 --> 00:13:51,600
as well as recipes when sending them

384
00:13:51,600 --> 00:13:54,000
over the network you know so blockchain

385
00:13:54,000 --> 00:13:56,320
has existing mechanisms all these

386
00:13:56,320 --> 00:13:59,120
issues by using cryptography and we all

387
00:13:59,120 --> 00:14:01,519
know that cryptography is the blockchain

388
00:14:01,519 --> 00:14:02,639
core

389
00:14:02,639 --> 00:14:06,480
right making it immutable and reliable

390
00:14:06,480 --> 00:14:09,279
so let's deep dive more on on blockchain

391
00:14:09,279 --> 00:14:10,880
cryptography

392
00:14:10,880 --> 00:14:12,160
um

393
00:14:12,160 --> 00:14:13,760
blockchains use

394
00:14:13,760 --> 00:14:15,680
asymmetric key algorithms and hash

395
00:14:15,680 --> 00:14:16,959
functions

396
00:14:16,959 --> 00:14:19,839
and participants get a single blockchain

397
00:14:19,839 --> 00:14:21,680
by hash functions and

398
00:14:21,680 --> 00:14:23,839
that should for example use sha-256 and

399
00:14:23,839 --> 00:14:25,760
above bashing algorithm depending on the

400
00:14:25,760 --> 00:14:27,839
framework and the hash functions are

401
00:14:27,839 --> 00:14:30,160
vital in maintaining the you know

402
00:14:30,160 --> 00:14:32,000
integrity of the data stored inside each

403
00:14:32,000 --> 00:14:34,639
block as well as linking them together

404
00:14:34,639 --> 00:14:35,680
okay so

405
00:14:35,680 --> 00:14:38,240
any change to the block data can cause

406
00:14:38,240 --> 00:14:40,800
inconsistency and it will invalidate the

407
00:14:40,800 --> 00:14:42,399
blockchain

408
00:14:42,399 --> 00:14:43,279
um

409
00:14:43,279 --> 00:14:45,120
as well as digital signature

410
00:14:45,120 --> 00:14:47,279
cryptocurrency cryptocurrency uses

411
00:14:47,279 --> 00:14:49,600
digital signatures and we all know

412
00:14:49,600 --> 00:14:51,040
um they are also used for

413
00:14:51,040 --> 00:14:53,519
multi-signature contracts and digital

414
00:14:53,519 --> 00:14:55,839
wallets for example

415
00:14:55,839 --> 00:14:58,000
also to execute any action from these

416
00:14:58,000 --> 00:15:00,000
multi-signature contracts

417
00:15:00,000 --> 00:15:02,160
and digital wallets multiple

418
00:15:02,160 --> 00:15:04,160
or different private keys must be you

419
00:15:04,160 --> 00:15:07,519
know digitally signed as well

420
00:15:07,519 --> 00:15:10,480
dig deeper into the encryption part um

421
00:15:10,480 --> 00:15:12,560
we have encryption in transit and

422
00:15:12,560 --> 00:15:15,760
encryption at rest both common practices

423
00:15:15,760 --> 00:15:17,600
induction frameworks as well

424
00:15:17,600 --> 00:15:20,560
tls for example eclipse data in transit

425
00:15:20,560 --> 00:15:22,320
as shown here

426
00:15:22,320 --> 00:15:24,880
um the example.com service as you can

427
00:15:24,880 --> 00:15:27,760
see in the screen uses both in transit

428
00:15:27,760 --> 00:15:29,759
and address encryption to protect user

429
00:15:29,759 --> 00:15:31,759
data you know this

430
00:15:31,759 --> 00:15:34,639
this message is sent over three hops two

431
00:15:34,639 --> 00:15:37,440
secured by encryption in transit and one

432
00:15:37,440 --> 00:15:38,480
secured

433
00:15:38,480 --> 00:15:41,440
by encryption address so

434
00:15:41,440 --> 00:15:44,079
this is a series of secure tops and each

435
00:15:44,079 --> 00:15:46,639
hub is secured by different key

436
00:15:46,639 --> 00:15:48,800
and each server along the path has a key

437
00:15:48,800 --> 00:15:50,639
for each app so

438
00:15:50,639 --> 00:15:53,199
there's a gap for that you know every

439
00:15:53,199 --> 00:15:54,959
server involved in a message

440
00:15:54,959 --> 00:15:57,040
transmission must bridge a

441
00:15:57,040 --> 00:15:59,519
confidentiality gap a a fundamental

442
00:15:59,519 --> 00:16:01,040
limitation of you know hop by up

443
00:16:01,040 --> 00:16:04,160
encryption that is every server in part

444
00:16:04,160 --> 00:16:06,880
of a message through example.com

445
00:16:06,880 --> 00:16:09,360
if the crypts and encrypts as shown in

446
00:16:09,360 --> 00:16:10,320
the survey

447
00:16:10,320 --> 00:16:12,399
showing the picture in server a and so

448
00:16:12,399 --> 00:16:13,519
in general

449
00:16:13,519 --> 00:16:15,920
it implies that a server attacker must

450
00:16:15,920 --> 00:16:17,839
sufficient privileges

451
00:16:17,839 --> 00:16:20,480
that can read alice messages somehow

452
00:16:20,480 --> 00:16:22,079
some of some of the industry accept

453
00:16:22,079 --> 00:16:24,480
these risks because there are

454
00:16:24,480 --> 00:16:26,800
um safeguards to protect us from you

455
00:16:26,800 --> 00:16:29,279
know for these attacks while hub by hub

456
00:16:29,279 --> 00:16:30,959
encryption protects against network and

457
00:16:30,959 --> 00:16:33,120
storage attacks it is

458
00:16:33,120 --> 00:16:35,199
insufficient to protect against attacks

459
00:16:35,199 --> 00:16:38,079
on the computer resources like

460
00:16:38,079 --> 00:16:40,399
firewalls nasa's etc

461
00:16:40,399 --> 00:16:41,199
that

462
00:16:41,199 --> 00:16:43,600
messages traverse right so

463
00:16:43,600 --> 00:16:46,160
it's possible for compromised compute

464
00:16:46,160 --> 00:16:47,360
node

465
00:16:47,360 --> 00:16:49,360
like you know the firewalls etc in the

466
00:16:49,360 --> 00:16:52,639
system to expose every message that

467
00:16:52,639 --> 00:16:54,560
traverses it so

468
00:16:54,560 --> 00:16:56,480
that's the problem for the hub by hub

469
00:16:56,480 --> 00:16:57,680
encryption

470
00:16:57,680 --> 00:17:00,240
and we know that it's important for ics

471
00:17:00,240 --> 00:17:04,319
to protect the data right so

472
00:17:04,319 --> 00:17:06,799
this there's a uh there's a solution

473
00:17:06,799 --> 00:17:10,079
like the end-to-end solution wherein

474
00:17:10,079 --> 00:17:12,160
it fills in the gap left by half by half

475
00:17:12,160 --> 00:17:13,520
encryption

476
00:17:13,520 --> 00:17:14,480
you know

477
00:17:14,480 --> 00:17:17,280
um blockchain nowadays don't use this

478
00:17:17,280 --> 00:17:18,720
there's actually no implemented

479
00:17:18,720 --> 00:17:20,319
implementation right now that uses

480
00:17:20,319 --> 00:17:21,839
end-to-end encryption

481
00:17:21,839 --> 00:17:23,520
it creates a private channel that

482
00:17:23,520 --> 00:17:25,599
extends the entire path from the sender

483
00:17:25,599 --> 00:17:27,199
to recipient and

484
00:17:27,199 --> 00:17:29,039
antenna encryption can be

485
00:17:29,039 --> 00:17:31,600
achieved in various ways

486
00:17:31,600 --> 00:17:33,120
you know it can have a secure channel it

487
00:17:33,120 --> 00:17:35,440
can be built on top of you know hop by

488
00:17:35,440 --> 00:17:37,760
up encryption foundation as shown here

489
00:17:37,760 --> 00:17:40,080
in the slide so

490
00:17:40,080 --> 00:17:42,880
within server a the original message is

491
00:17:42,880 --> 00:17:44,640
not and cannot be exposed as a clear

492
00:17:44,640 --> 00:17:46,960
text for example even even full root and

493
00:17:46,960 --> 00:17:49,200
physical access to the server

494
00:17:49,200 --> 00:17:51,520
and database will not be able to

495
00:17:51,520 --> 00:17:54,320
compromise the message confidentiality

496
00:17:54,320 --> 00:17:55,520
that's why

497
00:17:55,520 --> 00:17:58,400
end-to-end encryption is so popular for

498
00:17:58,400 --> 00:18:00,880
instant messaging apps like buyer

499
00:18:00,880 --> 00:18:02,799
facebook etc

500
00:18:02,799 --> 00:18:04,799
however a challenge for end-to-end

501
00:18:04,799 --> 00:18:07,120
encryption for blockchain is that it

502
00:18:07,120 --> 00:18:09,600
creates a safe space for criminals to

503
00:18:09,600 --> 00:18:11,520
communicate where no third party can

504
00:18:11,520 --> 00:18:13,440
read or perform

505
00:18:13,440 --> 00:18:15,200
security checks on their messages so in

506
00:18:15,200 --> 00:18:17,280
other words the technology meant to

507
00:18:17,280 --> 00:18:18,880
protect millions of people and

508
00:18:18,880 --> 00:18:21,280
businesses also protect criminals

509
00:18:21,280 --> 00:18:22,960
so there's an argument on that so that's

510
00:18:22,960 --> 00:18:25,520
why some governments prohibit end-to-end

511
00:18:25,520 --> 00:18:27,039
encryption but

512
00:18:27,039 --> 00:18:29,200
we still need to use that because it

513
00:18:29,200 --> 00:18:31,280
protects the data right

514
00:18:31,280 --> 00:18:34,799
so by comparing the two um

515
00:18:34,799 --> 00:18:36,559
the two strategies for protecting user

516
00:18:36,559 --> 00:18:39,200
data we can draw some general conclusion

517
00:18:39,200 --> 00:18:40,320
of this

518
00:18:40,320 --> 00:18:42,960
on one hand half by hub encryption is

519
00:18:42,960 --> 00:18:45,440
simple and easy to use right it it only

520
00:18:45,440 --> 00:18:47,120
requires the adoption of the existing

521
00:18:47,120 --> 00:18:49,760
mechanism for securing data in network

522
00:18:49,760 --> 00:18:50,880
and storage

523
00:18:50,880 --> 00:18:53,760
which we can apply in blockchain

524
00:18:53,760 --> 00:18:55,600
and an encryption however on the other

525
00:18:55,600 --> 00:18:56,400
hand

526
00:18:56,400 --> 00:18:58,799
provides all the benefits of hub by up

527
00:18:58,799 --> 00:19:00,160
encryption

528
00:19:00,160 --> 00:19:02,480
plus many more primarily it secures user

529
00:19:02,480 --> 00:19:04,960
data from attacks on the compute

530
00:19:04,960 --> 00:19:08,480
resources thereby closing the pervasive

531
00:19:08,480 --> 00:19:11,520
confidentiality gap as a result only

532
00:19:11,520 --> 00:19:14,000
those with exclusive authorization can

533
00:19:14,000 --> 00:19:15,840
access user data

534
00:19:15,840 --> 00:19:18,559
and it exemplifies the principle of this

535
00:19:18,559 --> 00:19:21,039
privilege you know an attack at one

536
00:19:21,039 --> 00:19:23,440
layer can be mitigated by an attack at

537
00:19:23,440 --> 00:19:26,000
another layer so combining up by uh

538
00:19:26,000 --> 00:19:27,280
and end-to-end encryption is a full

539
00:19:27,280 --> 00:19:29,919
defense in the implementation somehow

540
00:19:29,919 --> 00:19:33,120
so for ics blockchain use case we think

541
00:19:33,120 --> 00:19:35,039
we we need to implement some sort of

542
00:19:35,039 --> 00:19:36,880
end-to-end encryption because

543
00:19:36,880 --> 00:19:40,480
data security is critical for ics

544
00:19:40,480 --> 00:19:42,640
so that it can be accepted

545
00:19:42,640 --> 00:19:45,360
and we need protection in each laser in

546
00:19:45,360 --> 00:19:46,960
each layer of the

547
00:19:46,960 --> 00:19:49,280
ics network

548
00:19:49,280 --> 00:19:52,960
to ensure the data security but

549
00:19:52,960 --> 00:19:53,919
you know

550
00:19:53,919 --> 00:19:56,480
the next question is what is the best

551
00:19:56,480 --> 00:19:58,880
end-to-end um encryption protocol for

552
00:19:58,880 --> 00:20:02,240
blockchain in ics let me dive into that

553
00:20:02,240 --> 00:20:03,200
so

554
00:20:03,200 --> 00:20:04,320
um

555
00:20:04,320 --> 00:20:06,960
if end-to-end is the solution

556
00:20:06,960 --> 00:20:08,559
are there any current end-to-end

557
00:20:08,559 --> 00:20:11,520
protocol that meets the uh iss

558
00:20:11,520 --> 00:20:14,320
blockchain implementation so

559
00:20:14,320 --> 00:20:16,240
we we need to check certain criteria

560
00:20:16,240 --> 00:20:18,640
like it should be easy to integrate

561
00:20:18,640 --> 00:20:20,159
you know so it can easily adapt the

562
00:20:20,159 --> 00:20:22,480
blockchain implementation

563
00:20:22,480 --> 00:20:23,840
um

564
00:20:23,840 --> 00:20:25,440
this is the main argument for blockchain

565
00:20:25,440 --> 00:20:26,559
somehow

566
00:20:26,559 --> 00:20:29,200
especially the decentralization

567
00:20:29,200 --> 00:20:31,360
of the uh protocol it should adopt

568
00:20:31,360 --> 00:20:32,880
blockchain as well

569
00:20:32,880 --> 00:20:35,200
and the protocol should be secure and

570
00:20:35,200 --> 00:20:38,400
trusted with no known vulnerabilities

571
00:20:38,400 --> 00:20:41,280
for you know for the e3 protocols you

572
00:20:41,280 --> 00:20:42,559
that you chose especially if the

573
00:20:42,559 --> 00:20:44,720
protocols are open source

574
00:20:44,720 --> 00:20:46,799
you know we need an active community

575
00:20:46,799 --> 00:20:48,159
it's essential to have an active

576
00:20:48,159 --> 00:20:50,720
community to keep that going

577
00:20:50,720 --> 00:20:51,840
and

578
00:20:51,840 --> 00:20:54,320
um finally ensure that the protocol is

579
00:20:54,320 --> 00:20:56,480
compatible with the ics transaction

580
00:20:56,480 --> 00:20:58,720
especially for iot encryption

581
00:20:58,720 --> 00:21:02,000
so with this um key element that we we

582
00:21:02,000 --> 00:21:04,720
chose there are three stand out um

583
00:21:04,720 --> 00:21:06,159
endpoint protocols that we chose to

584
00:21:06,159 --> 00:21:07,280
study

585
00:21:07,280 --> 00:21:08,559
and

586
00:21:08,559 --> 00:21:10,879
um

587
00:21:10,960 --> 00:21:13,840
as we saw e3 are used in viver and in

588
00:21:13,840 --> 00:21:15,840
facebook messenger widely but not that

589
00:21:15,840 --> 00:21:17,360
but the technology is not trump but

590
00:21:17,360 --> 00:21:19,919
again for for blockchain

591
00:21:19,919 --> 00:21:21,760
uh we know secure messaging system

592
00:21:21,760 --> 00:21:23,840
employs you know varying degrees of

593
00:21:23,840 --> 00:21:25,440
security principles depending on the

594
00:21:25,440 --> 00:21:27,039
protocol

595
00:21:27,039 --> 00:21:30,000
these are vital when comparing secure

596
00:21:30,000 --> 00:21:32,400
messaging protocols or applications

597
00:21:32,400 --> 00:21:34,640
so we examine the three um

598
00:21:34,640 --> 00:21:37,679
signal otr or off the record and matrix

599
00:21:37,679 --> 00:21:40,000
protocol because they meet the main

600
00:21:40,000 --> 00:21:41,919
criteria which is

601
00:21:41,919 --> 00:21:43,280
which are actually

602
00:21:43,280 --> 00:21:46,240
encryption and decentralization right so

603
00:21:46,240 --> 00:21:47,520
these three

604
00:21:47,520 --> 00:21:49,280
should have antenna control and

605
00:21:49,280 --> 00:21:51,360
decentralization properties

606
00:21:51,360 --> 00:21:54,240
so signal is has has an encryption

607
00:21:54,240 --> 00:21:55,600
powered by the open source signal

608
00:21:55,600 --> 00:21:57,679
protocol that keeps the user

609
00:21:57,679 --> 00:22:00,159
compensation conversation secure

610
00:22:00,159 --> 00:22:03,360
update record or otr messaging provides

611
00:22:03,360 --> 00:22:05,440
encryption as well

612
00:22:05,440 --> 00:22:07,600
which we will discuss later on and

613
00:22:07,600 --> 00:22:08,799
matrix

614
00:22:08,799 --> 00:22:10,880
is an open source project that publishes

615
00:22:10,880 --> 00:22:14,559
the um matrix open standard protocol for

616
00:22:14,559 --> 00:22:16,640
secure decentralized and real-time

617
00:22:16,640 --> 00:22:18,559
communication the conversations are

618
00:22:18,559 --> 00:22:20,960
protected as well by end-to-end

619
00:22:20,960 --> 00:22:23,440
encryption

620
00:22:23,440 --> 00:22:24,799
so

621
00:22:24,799 --> 00:22:27,360
when we check on these um

622
00:22:27,360 --> 00:22:30,159
protocols we also found issues with

623
00:22:30,159 --> 00:22:32,720
with them no uh they're all

624
00:22:32,720 --> 00:22:34,799
there are

625
00:22:34,799 --> 00:22:36,640
there are properties that we study and

626
00:22:36,640 --> 00:22:38,640
these are divided in these areas

627
00:22:38,640 --> 00:22:40,480
security and privacy

628
00:22:40,480 --> 00:22:43,360
uh usability and adoption and group chat

629
00:22:43,360 --> 00:22:44,559
features

630
00:22:44,559 --> 00:22:46,720
of the record only supports one-to-one

631
00:22:46,720 --> 00:22:48,960
synchronous conversations

632
00:22:48,960 --> 00:22:52,840
um requiring users to be online whereas

633
00:22:52,840 --> 00:22:55,039
signal uh and matrix support

634
00:22:55,039 --> 00:22:56,880
asynchronous conversation

635
00:22:56,880 --> 00:22:58,000
you know

636
00:22:58,000 --> 00:22:59,600
the secured messaging protocols do not

637
00:22:59,600 --> 00:23:01,520
provide all

638
00:23:01,520 --> 00:23:04,000
the security properties

639
00:23:04,000 --> 00:23:07,120
as you can see in table a so there's

640
00:23:07,120 --> 00:23:08,720
this is there is a room for improvement

641
00:23:08,720 --> 00:23:10,799
for these protocols

642
00:23:10,799 --> 00:23:11,919
and

643
00:23:11,919 --> 00:23:14,400
only signal in matrix satisfy most of

644
00:23:14,400 --> 00:23:16,480
the properties that we consider for this

645
00:23:16,480 --> 00:23:18,559
solution

646
00:23:18,559 --> 00:23:19,760
so

647
00:23:19,760 --> 00:23:23,200
for this one we can see that signal and

648
00:23:23,200 --> 00:23:25,039
the matrix

649
00:23:25,039 --> 00:23:27,120
should be considered and should be

650
00:23:27,120 --> 00:23:29,679
checked for further analysis so we check

651
00:23:29,679 --> 00:23:31,440
now for compatibility of that for

652
00:23:31,440 --> 00:23:33,200
blockchain

653
00:23:33,200 --> 00:23:34,159
so

654
00:23:34,159 --> 00:23:36,720
we listed down blockchain related

655
00:23:36,720 --> 00:23:38,480
properties and checked their protocol

656
00:23:38,480 --> 00:23:40,080
compatibility

657
00:23:40,080 --> 00:23:41,440
so far

658
00:23:41,440 --> 00:23:43,679
only the matrix protocol can support

659
00:23:43,679 --> 00:23:46,240
public private and hybrid setup of

660
00:23:46,240 --> 00:23:48,400
blockchain implementation strategies

661
00:23:48,400 --> 00:23:50,000
it also includes the support for

662
00:23:50,000 --> 00:23:51,840
permissionness and permission-based

663
00:23:51,840 --> 00:23:54,400
authentication which nowadays

664
00:23:54,400 --> 00:23:56,640
blockchain also implement this kind of

665
00:23:56,640 --> 00:23:58,720
strategy

666
00:23:58,720 --> 00:24:01,360
again we don't need new technology to

667
00:24:01,360 --> 00:24:03,360
close the security gap that we mentioned

668
00:24:03,360 --> 00:24:06,400
earlier right now as we saw as we

669
00:24:06,400 --> 00:24:09,039
analyze these properties so far matrix

670
00:24:09,039 --> 00:24:10,799
is fully compatible for blockchain-based

671
00:24:10,799 --> 00:24:12,320
implementation

672
00:24:12,320 --> 00:24:14,400
and we know we can use this technology

673
00:24:14,400 --> 00:24:16,240
technology to speed up you know the

674
00:24:16,240 --> 00:24:19,679
adaptation of blockchain for ics when we

675
00:24:19,679 --> 00:24:22,000
receive data from the manufacturing plan

676
00:24:22,000 --> 00:24:23,200
right

677
00:24:23,200 --> 00:24:25,520
it is in order to trust the integrity of

678
00:24:25,520 --> 00:24:27,120
data

679
00:24:27,120 --> 00:24:28,400
uh at the

680
00:24:28,400 --> 00:24:30,720
manufacturing time right

681
00:24:30,720 --> 00:24:31,760
but

682
00:24:31,760 --> 00:24:33,279
at the plant level device there's

683
00:24:33,279 --> 00:24:36,559
another problem for the plant level part

684
00:24:36,559 --> 00:24:39,840
um we have embedded devices at the plant

685
00:24:39,840 --> 00:24:42,640
level we have nodes there so

686
00:24:42,640 --> 00:24:44,559
we need to check what are the possible

687
00:24:44,559 --> 00:24:46,480
solutions if you have no uh if we have

688
00:24:46,480 --> 00:24:48,480
now a solution for

689
00:24:48,480 --> 00:24:51,360
um enterprise

690
00:24:51,360 --> 00:24:53,840
setup where we can receive data from the

691
00:24:53,840 --> 00:24:55,360
blockchain

692
00:24:55,360 --> 00:24:57,279
how can we process that at the lower

693
00:24:57,279 --> 00:24:59,039
level of the of the manufacturing fact

694
00:24:59,039 --> 00:25:02,000
so my friend and colleague will discuss

695
00:25:02,000 --> 00:25:05,200
how to send data to the blockchain

696
00:25:05,200 --> 00:25:07,279
using an existing solution as well at

697
00:25:07,279 --> 00:25:09,760
the device level or at the lower level

698
00:25:09,760 --> 00:25:12,080
of the network

699
00:25:12,080 --> 00:25:14,159
all right thanks ken i'll be taking it

700
00:25:14,159 --> 00:25:15,760
from here

701
00:25:15,760 --> 00:25:18,880
um hi everyone i am jimmy argan and i'll

702
00:25:18,880 --> 00:25:21,039
be uh continuing this part of the

703
00:25:21,039 --> 00:25:23,279
discussion so the use case has been

704
00:25:23,279 --> 00:25:24,960
described by ken earlier and we have

705
00:25:24,960 --> 00:25:26,640
seen how we can connect the enterprise

706
00:25:26,640 --> 00:25:28,720
network to external stakeholders via

707
00:25:28,720 --> 00:25:30,000
blockchain

708
00:25:30,000 --> 00:25:32,720
as the picture slowly comes together one

709
00:25:32,720 --> 00:25:35,200
question remains how can we seamlessly

710
00:25:35,200 --> 00:25:38,640
integrate plant devices or l0 devices in

711
00:25:38,640 --> 00:25:40,960
this case into the blockchain network

712
00:25:40,960 --> 00:25:42,880
but first let me explain a common

713
00:25:42,880 --> 00:25:46,320
scenario in manufacturing plants

714
00:25:46,320 --> 00:25:48,880
nowadays most factories use the purdue

715
00:25:48,880 --> 00:25:51,200
enterprise reference architecture or

716
00:25:51,200 --> 00:25:53,600
pera the purdue model describes an

717
00:25:53,600 --> 00:25:55,679
enterprise architecture's layers or

718
00:25:55,679 --> 00:25:58,000
levels there are five levels in the

719
00:25:58,000 --> 00:26:00,240
purdue reference model

720
00:26:00,240 --> 00:26:02,880
level zero or the physical process this

721
00:26:02,880 --> 00:26:04,799
layer defines the processes used to

722
00:26:04,799 --> 00:26:07,679
create or support the company's products

723
00:26:07,679 --> 00:26:09,919
the next one is level one intelligent

724
00:26:09,919 --> 00:26:11,200
devices

725
00:26:11,200 --> 00:26:13,440
an example of this would be a robot arm

726
00:26:13,440 --> 00:26:15,679
that positions and attaches

727
00:26:15,679 --> 00:26:17,840
a wheel to the shaft

728
00:26:17,840 --> 00:26:19,919
and the next layer is the control

729
00:26:19,919 --> 00:26:20,960
systems

730
00:26:20,960 --> 00:26:22,880
which is on the level two this is where

731
00:26:22,880 --> 00:26:25,520
the physical processes are supervised

732
00:26:25,520 --> 00:26:28,320
monitored and controlled

733
00:26:28,320 --> 00:26:30,559
on level three we have manufacturing

734
00:26:30,559 --> 00:26:32,960
systems the performance management

735
00:26:32,960 --> 00:26:34,880
systems and data historians are

736
00:26:34,880 --> 00:26:37,120
frequently found here

737
00:26:37,120 --> 00:26:39,120
next we have the business logistics

738
00:26:39,120 --> 00:26:42,400
systems for level fours and level five

739
00:26:42,400 --> 00:26:45,679
here the erp is the main system

740
00:26:45,679 --> 00:26:47,600
setting the plant's basic production

741
00:26:47,600 --> 00:26:50,320
schedule and inventory levels

742
00:26:50,320 --> 00:26:52,960
with the purdue model as their reference

743
00:26:52,960 --> 00:26:56,080
end users system integrators and oem

744
00:26:56,080 --> 00:26:58,159
vendors can easily adapt it to their

745
00:26:58,159 --> 00:26:59,440
needs

746
00:26:59,440 --> 00:27:01,919
integrating these layers is difficult

747
00:27:01,919 --> 00:27:03,919
due to the multiple hubs required to get

748
00:27:03,919 --> 00:27:06,320
to the next one which may violate the

749
00:27:06,320 --> 00:27:07,919
requirements of a trustworthy

750
00:27:07,919 --> 00:27:10,000
environment if compromised mid

751
00:27:10,000 --> 00:27:11,440
transmission

752
00:27:11,440 --> 00:27:13,440
we researched several options and

753
00:27:13,440 --> 00:27:16,559
settled on two technologies

754
00:27:16,559 --> 00:27:19,120
first let's start with e4 e4 was

755
00:27:19,120 --> 00:27:20,720
designed with a client server

756
00:27:20,720 --> 00:27:22,640
architecture for machine to machine

757
00:27:22,640 --> 00:27:25,520
communications it uses a publish

758
00:27:25,520 --> 00:27:27,760
subscribe protocol where a client

759
00:27:27,760 --> 00:27:29,919
subscribed to a topic receives all

760
00:27:29,919 --> 00:27:32,640
messages published by the server on that

761
00:27:32,640 --> 00:27:33,679
topic

762
00:27:33,679 --> 00:27:36,480
but e4 is still in its early stage and

763
00:27:36,480 --> 00:27:38,480
lacks one of blockchain's requirements

764
00:27:38,480 --> 00:27:40,559
which is the centralization

765
00:27:40,559 --> 00:27:42,799
because the server stores the client and

766
00:27:42,799 --> 00:27:45,520
topic keys is a single point of failure

767
00:27:45,520 --> 00:27:48,080
and could be compromised

768
00:27:48,080 --> 00:27:50,159
malicious clients may also ignore the

769
00:27:50,159 --> 00:27:52,480
remove topic command and continue to

770
00:27:52,480 --> 00:27:55,120
receive messages from the topic

771
00:27:55,120 --> 00:27:57,919
to avoid all of these all clients should

772
00:27:57,919 --> 00:28:00,240
have topic keys updated

773
00:28:00,240 --> 00:28:02,480
since e4 is an open source project and

774
00:28:02,480 --> 00:28:04,720
is still in its establishing stage

775
00:28:04,720 --> 00:28:06,799
manufacturers are less likely to trust

776
00:28:06,799 --> 00:28:08,960
it as an integration solution for their

777
00:28:08,960 --> 00:28:11,520
devices

778
00:28:11,840 --> 00:28:14,080
the next solution that we've looked into

779
00:28:14,080 --> 00:28:17,520
is fdi or field device integration

780
00:28:17,520 --> 00:28:19,600
fieldcom group an organization that

781
00:28:19,600 --> 00:28:21,760
maintains existing industry technologies

782
00:28:21,760 --> 00:28:24,000
like heart and fieldbus leads the

783
00:28:24,000 --> 00:28:27,200
initiative of developing fdi

784
00:28:27,200 --> 00:28:29,039
achieved in collaboration with major

785
00:28:29,039 --> 00:28:31,120
industry suppliers it aims to

786
00:28:31,120 --> 00:28:33,200
standardize software and tool packaging

787
00:28:33,200 --> 00:28:35,039
and distribution

788
00:28:35,039 --> 00:28:37,440
fdi offers end-to-end security and

789
00:28:37,440 --> 00:28:39,840
interoperability with major control

790
00:28:39,840 --> 00:28:42,000
system manufacturers

791
00:28:42,000 --> 00:28:44,240
because every layer of the purdue model

792
00:28:44,240 --> 00:28:46,399
requires an additional component

793
00:28:46,399 --> 00:28:48,640
manufacturers are moving to the more

794
00:28:48,640 --> 00:28:51,360
open architecture which converges ot and

795
00:28:51,360 --> 00:28:54,080
id devices via a second communication

796
00:28:54,080 --> 00:28:58,960
channel which is mainly through opcua

797
00:28:58,960 --> 00:29:01,679
fdi supports natively heart wireless

798
00:29:01,679 --> 00:29:04,960
heart foundation field bus profibus

799
00:29:04,960 --> 00:29:06,240
profinet

800
00:29:06,240 --> 00:29:08,799
and iso 100 field communication

801
00:29:08,799 --> 00:29:10,720
protocols

802
00:29:10,720 --> 00:29:13,039
an fdi communication server may handle

803
00:29:13,039 --> 00:29:15,520
various automation protocols like modbus

804
00:29:15,520 --> 00:29:18,080
ethernet proprietary or any other

805
00:29:18,080 --> 00:29:19,679
protocol

806
00:29:19,679 --> 00:29:22,640
an fdi server uses an opc ua server to

807
00:29:22,640 --> 00:29:25,840
access non-native networks

808
00:29:25,840 --> 00:29:28,480
fbi secures an end user's infrastructure

809
00:29:28,480 --> 00:29:30,240
in three ways

810
00:29:30,240 --> 00:29:32,240
first time stamping and digital

811
00:29:32,240 --> 00:29:34,559
signatures ensure that fdi device

812
00:29:34,559 --> 00:29:36,960
packages are genuine and have not been

813
00:29:36,960 --> 00:29:39,120
changed by the manufacturer

814
00:29:39,120 --> 00:29:41,039
it facilitates the fdi package

815
00:29:41,039 --> 00:29:42,880
registration procedure that

816
00:29:42,880 --> 00:29:46,320
manufacturers must strictly adhere to

817
00:29:46,320 --> 00:29:48,720
since having a user interface presents a

818
00:29:48,720 --> 00:29:50,960
significant risk to the system

819
00:29:50,960 --> 00:29:53,919
uip is only optional and must function

820
00:29:53,919 --> 00:29:57,279
only in a sandbox environment

821
00:29:57,279 --> 00:30:00,720
fdi also supports opcua security

822
00:30:00,720 --> 00:30:03,440
opcua is the interoperability standard

823
00:30:03,440 --> 00:30:06,080
for industrial equipment

824
00:30:06,080 --> 00:30:08,480
a secure communication mechanism between

825
00:30:08,480 --> 00:30:10,480
fdi servers and clients is then

826
00:30:10,480 --> 00:30:11,679
implemented

827
00:30:11,679 --> 00:30:13,600
here is an illustration of a device

828
00:30:13,600 --> 00:30:14,559
sensor

829
00:30:14,559 --> 00:30:17,440
this will be integrated into an fdi host

830
00:30:17,440 --> 00:30:19,279
which could either be a process control

831
00:30:19,279 --> 00:30:21,679
or asset management system a device

832
00:30:21,679 --> 00:30:24,159
configuration tool on a laptop or a

833
00:30:24,159 --> 00:30:26,799
handheld field communicator

834
00:30:26,799 --> 00:30:29,520
the fdi host always supports all fdi

835
00:30:29,520 --> 00:30:31,600
device functionalities

836
00:30:31,600 --> 00:30:34,480
the fdi package is at the core of fdi

837
00:30:34,480 --> 00:30:36,000
technology

838
00:30:36,000 --> 00:30:38,640
electronic device description or edb

839
00:30:38,640 --> 00:30:41,360
comprises device definition business

840
00:30:41,360 --> 00:30:44,240
logic and user interface description or

841
00:30:44,240 --> 00:30:45,840
uid

842
00:30:45,840 --> 00:30:47,919
imagine it as a single device driver

843
00:30:47,919 --> 00:30:49,919
that you install on your host to make

844
00:30:49,919 --> 00:30:52,559
your integration successful

845
00:30:52,559 --> 00:30:54,960
the fdi device package defines which

846
00:30:54,960 --> 00:30:57,840
data functionalities and user interfaces

847
00:30:57,840 --> 00:31:01,760
are stored on the fdi server

848
00:31:01,919 --> 00:31:04,240
now the fdi architecture is built on the

849
00:31:04,240 --> 00:31:07,120
opc unified architecture or opcua

850
00:31:07,120 --> 00:31:09,679
information model which allows platform

851
00:31:09,679 --> 00:31:11,279
independence

852
00:31:11,279 --> 00:31:14,000
fdi server imports fdi device packages

853
00:31:14,000 --> 00:31:16,480
into its device catalog and is in charge

854
00:31:16,480 --> 00:31:18,559
of handling all the inputs from the fdi

855
00:31:18,559 --> 00:31:19,679
hosts

856
00:31:19,679 --> 00:31:22,240
now to connect an fdi host each device

857
00:31:22,240 --> 00:31:26,159
must first be mapped to an fdi package

858
00:31:26,159 --> 00:31:27,840
example of these devices are the

859
00:31:27,840 --> 00:31:30,840
communication gadgets found on the plant

860
00:31:30,840 --> 00:31:33,600
floor now all communications related

861
00:31:33,600 --> 00:31:36,159
processes and services are described and

862
00:31:36,159 --> 00:31:39,840
provided using eddl code as part of an

863
00:31:39,840 --> 00:31:42,399
fdi communication package

864
00:31:42,399 --> 00:31:45,279
then on the control layer the fdi server

865
00:31:45,279 --> 00:31:48,240
executes and manages all tasks

866
00:31:48,240 --> 00:31:50,320
devices that connect to networks require

867
00:31:50,320 --> 00:31:52,320
hardware resources which the

868
00:31:52,320 --> 00:31:55,200
communication server readily supports

869
00:31:55,200 --> 00:31:58,080
and then through opcua the data is sent

870
00:31:58,080 --> 00:32:00,399
to the plant network for processing by

871
00:32:00,399 --> 00:32:02,240
fdi clients

872
00:32:02,240 --> 00:32:04,000
to interact with devices in

873
00:32:04,000 --> 00:32:07,120
heterogeneous hierarchical networks any

874
00:32:07,120 --> 00:32:10,240
communication hardware can be used

875
00:32:10,240 --> 00:32:12,480
now let us now turn to ken to help us

876
00:32:12,480 --> 00:32:14,480
complete the big picture on how we could

877
00:32:14,480 --> 00:32:16,159
securely connect healthy to the

878
00:32:16,159 --> 00:32:18,720
blockchain

879
00:32:19,039 --> 00:32:20,880
thank you aryan so yeah

880
00:32:20,880 --> 00:32:23,440
as aryan talked about earlier we saw

881
00:32:23,440 --> 00:32:27,279
that fdi technology is capable of you

882
00:32:27,279 --> 00:32:29,679
know sending data from

883
00:32:29,679 --> 00:32:32,399
the l0 of the purdue model

884
00:32:32,399 --> 00:32:35,919
to the l 2.5 to 3

885
00:32:35,919 --> 00:32:38,159
uh layer of the purdue model as well

886
00:32:38,159 --> 00:32:40,840
then once we receive that data from

887
00:32:40,840 --> 00:32:44,480
l3 the matrix server will then you know

888
00:32:44,480 --> 00:32:46,399
receive that and process that as we

889
00:32:46,399 --> 00:32:48,159
talked about uh

890
00:32:48,159 --> 00:32:49,200
earlier

891
00:32:49,200 --> 00:32:52,320
but before we go on to the details of

892
00:32:52,320 --> 00:32:54,240
how can we completely integrate that in

893
00:32:54,240 --> 00:32:55,679
the big picture

894
00:32:55,679 --> 00:32:58,640
we examine we we talk about matrix as a

895
00:32:58,640 --> 00:33:02,640
solution for an end-to-end protocol um

896
00:33:02,640 --> 00:33:05,200
and matrix has all of the qualities that

897
00:33:05,200 --> 00:33:08,960
we require for an endpoint protocols for

898
00:33:08,960 --> 00:33:11,360
blockchain implementation

899
00:33:11,360 --> 00:33:14,320
again matrix is somehow

900
00:33:14,320 --> 00:33:15,840
um

901
00:33:15,840 --> 00:33:18,480
is a standard protocol for real-time

902
00:33:18,480 --> 00:33:20,559
communication

903
00:33:20,559 --> 00:33:22,480
and um

904
00:33:22,480 --> 00:33:23,679
the

905
00:33:23,679 --> 00:33:25,120
they launched on

906
00:33:25,120 --> 00:33:28,000
a in anthem encryption called all

907
00:33:28,000 --> 00:33:30,640
uh they can be implemented in web ios or

908
00:33:30,640 --> 00:33:33,039
android and the platform underwent a

909
00:33:33,039 --> 00:33:36,159
full review matrix on encryption library

910
00:33:36,159 --> 00:33:36,880
uh

911
00:33:36,880 --> 00:33:39,440
it is audited by the ncc group

912
00:33:39,440 --> 00:33:42,240
technically so basically all

913
00:33:42,240 --> 00:33:43,279
um

914
00:33:43,279 --> 00:33:45,600
encryption protocol is for field to peer

915
00:33:45,600 --> 00:33:46,960
communications

916
00:33:46,960 --> 00:33:48,480
the other protocol goes by the name

917
00:33:48,480 --> 00:33:51,120
malcolm again it is used for group chats

918
00:33:51,120 --> 00:33:52,799
and 10 encryption

919
00:33:52,799 --> 00:33:56,080
conceptually it deviates quite a bit for

920
00:33:56,080 --> 00:33:56,880
all

921
00:33:56,880 --> 00:33:59,039
as it contains some of

922
00:33:59,039 --> 00:34:00,799
modifications that

923
00:34:00,799 --> 00:34:03,519
it more suitable for the multi-device

924
00:34:03,519 --> 00:34:04,799
use games

925
00:34:04,799 --> 00:34:06,880
again matrix somehow

926
00:34:06,880 --> 00:34:08,719
is for group chat or one-on-one

927
00:34:08,719 --> 00:34:10,239
conversation

928
00:34:10,239 --> 00:34:12,079
webrtc

929
00:34:12,079 --> 00:34:14,239
um bridging comps

930
00:34:14,239 --> 00:34:16,399
internet of things data

931
00:34:16,399 --> 00:34:19,040
basically anything else which needs to

932
00:34:19,040 --> 00:34:21,599
pub sub versus data to the world which

933
00:34:21,599 --> 00:34:22,960
may we think

934
00:34:22,960 --> 00:34:24,960
it is very suitable for blockchain

935
00:34:24,960 --> 00:34:28,079
implementation so as using in the screen

936
00:34:28,079 --> 00:34:29,440
right now

937
00:34:29,440 --> 00:34:33,359
matex protocol somehow is federated

938
00:34:33,359 --> 00:34:34,480
and

939
00:34:34,480 --> 00:34:36,000
federation allows you separate

940
00:34:36,000 --> 00:34:37,760
deployments of a communication service

941
00:34:37,760 --> 00:34:40,079
to communicate with each other

942
00:34:40,079 --> 00:34:42,560
and matrix provides open federation

943
00:34:42,560 --> 00:34:44,239
meaning that anyone

944
00:34:44,239 --> 00:34:46,560
on the internet can join

945
00:34:46,560 --> 00:34:48,399
into the matrix ecosystem by deploying

946
00:34:48,399 --> 00:34:49,760
their own server

947
00:34:49,760 --> 00:34:51,918
so similar to what we checked on

948
00:34:51,918 --> 00:34:53,440
blockchain properties

949
00:34:53,440 --> 00:34:55,599
matrix also can be implemented privately

950
00:34:55,599 --> 00:34:57,920
or hybrid similar to other you know

951
00:34:57,920 --> 00:34:59,440
blockchain frameworks

952
00:34:59,440 --> 00:35:00,160
so

953
00:35:00,160 --> 00:35:01,760
in the screen

954
00:35:01,760 --> 00:35:04,720
here's a simple integration of pages

955
00:35:04,720 --> 00:35:06,240
um can you go back on the previous

956
00:35:06,240 --> 00:35:08,880
screen please

957
00:35:08,880 --> 00:35:11,599
no the other one

958
00:35:14,079 --> 00:35:17,839
okay okay oops

959
00:35:20,160 --> 00:35:21,839
okay so

960
00:35:21,839 --> 00:35:23,200
so let's have a simple integration

961
00:35:23,200 --> 00:35:25,440
matrix on this usb basically

962
00:35:25,440 --> 00:35:26,240
um

963
00:35:26,240 --> 00:35:27,839
we will receive the data from the

964
00:35:27,839 --> 00:35:30,560
security network of the ics as aryan

965
00:35:30,560 --> 00:35:32,400
talked about earlier right

966
00:35:32,400 --> 00:35:35,599
by uh via fdi integration we can ensure

967
00:35:35,599 --> 00:35:38,880
that the data from the plant is secure

968
00:35:38,880 --> 00:35:40,880
because it possesses all of the

969
00:35:40,880 --> 00:35:43,440
end-to-end encryption digital signatures

970
00:35:43,440 --> 00:35:45,520
all of the devices are signed as well

971
00:35:45,520 --> 00:35:48,800
and we know that the integrity of data

972
00:35:48,800 --> 00:35:51,680
is somehow there right so when we

973
00:35:51,680 --> 00:35:53,599
receive the data it is time for us to

974
00:35:53,599 --> 00:35:55,359
send that to blockchain

975
00:35:55,359 --> 00:35:57,599
we can definitely send data to the

976
00:35:57,599 --> 00:35:58,400
blockchain

977
00:35:58,400 --> 00:36:01,119
without an end-to-end encryption we can

978
00:36:01,119 --> 00:36:02,880
just use the typical encryption

979
00:36:02,880 --> 00:36:04,240
mechanism

980
00:36:04,240 --> 00:36:06,400
of any blockchain framework for example

981
00:36:06,400 --> 00:36:08,880
serious or you know

982
00:36:08,880 --> 00:36:11,599
um ethereum etc all of the blockchain

983
00:36:11,599 --> 00:36:13,280
framework available there there are a

984
00:36:13,280 --> 00:36:15,040
lot of encryption mechanism that are

985
00:36:15,040 --> 00:36:17,200
available for for this blockchain

986
00:36:17,200 --> 00:36:19,760
frameworks so for example you will have

987
00:36:19,760 --> 00:36:21,200
a mobile app that will have a blockchain

988
00:36:21,200 --> 00:36:23,200
account that will send encrypted

989
00:36:23,200 --> 00:36:25,040
messages using the sdk of the blockchain

990
00:36:25,040 --> 00:36:27,119
framework but again

991
00:36:27,119 --> 00:36:29,920
going back to our issue it will will not

992
00:36:29,920 --> 00:36:31,520
be secure it will not be okay for a

993
00:36:31,520 --> 00:36:34,560
typical ics use case because again

994
00:36:34,560 --> 00:36:37,040
the data integrity and confidentiality

995
00:36:37,040 --> 00:36:38,960
are needed somehow

996
00:36:38,960 --> 00:36:41,119
there is a strict requirement for data

997
00:36:41,119 --> 00:36:43,599
confidentiality especially for world

998
00:36:43,599 --> 00:36:45,280
health organizations

999
00:36:45,280 --> 00:36:47,119
where they if if we will apply

1000
00:36:47,119 --> 00:36:49,200
blockchain use case there they need to

1001
00:36:49,200 --> 00:36:52,079
trust that you know that data

1002
00:36:52,079 --> 00:36:54,240
should be you know protected at all time

1003
00:36:54,240 --> 00:36:57,359
right so with matrix end-to-end protocol

1004
00:36:57,359 --> 00:36:59,440
we can integrate and develop a matrix

1005
00:36:59,440 --> 00:37:00,880
kind app

1006
00:37:00,880 --> 00:37:02,160
and

1007
00:37:02,160 --> 00:37:04,079
and that will perform an end-to-end

1008
00:37:04,079 --> 00:37:06,079
encryption and we'll send that that data

1009
00:37:06,079 --> 00:37:09,040
to the metic server so that natick

1010
00:37:09,040 --> 00:37:10,720
server will send the data to the

1011
00:37:10,720 --> 00:37:12,880
blockchain network so technically that's

1012
00:37:12,880 --> 00:37:15,440
the whole concept so in our example use

1013
00:37:15,440 --> 00:37:17,280
case a while ago we talked about the

1014
00:37:17,280 --> 00:37:19,839
pharmaceutical industry right so

1015
00:37:19,839 --> 00:37:22,320
as you can see here matrix will be

1016
00:37:22,320 --> 00:37:24,160
helpful on doing an end-to-end

1017
00:37:24,160 --> 00:37:25,280
encryption

1018
00:37:25,280 --> 00:37:27,520
across its clients in the blockchain

1019
00:37:27,520 --> 00:37:29,280
right so

1020
00:37:29,280 --> 00:37:32,400
this can be in private public and in a

1021
00:37:32,400 --> 00:37:34,240
hybrid setup depending on the

1022
00:37:34,240 --> 00:37:36,480
requirement of the manufacturing plant

1023
00:37:36,480 --> 00:37:39,040
or the walder organization

1024
00:37:39,040 --> 00:37:40,560
or the um

1025
00:37:40,560 --> 00:37:41,440
full

1026
00:37:41,440 --> 00:37:42,400
world

1027
00:37:42,400 --> 00:37:44,000
and drugs

1028
00:37:44,000 --> 00:37:44,800
and

1029
00:37:44,800 --> 00:37:48,000
and the fda as well so

1030
00:37:48,000 --> 00:37:51,920
um this technology is definitely

1031
00:37:51,920 --> 00:37:54,640
a valid a valid solution for

1032
00:37:54,640 --> 00:37:58,160
for a blockchain implementation now

1033
00:37:58,160 --> 00:38:02,079
we can combine the uh fdi solution

1034
00:38:02,079 --> 00:38:05,040
and the matrix existing technology

1035
00:38:05,040 --> 00:38:07,200
and create a big picture for that so

1036
00:38:07,200 --> 00:38:10,400
again similar to what we have in uh

1037
00:38:10,400 --> 00:38:14,079
in pharmaceutical industry use case

1038
00:38:14,079 --> 00:38:15,040
um

1039
00:38:15,040 --> 00:38:17,599
first we have our fbi

1040
00:38:17,599 --> 00:38:19,280
registered temperature sensor at the

1041
00:38:19,280 --> 00:38:21,359
bottom right at the level zero of the

1042
00:38:21,359 --> 00:38:23,119
purdue model

1043
00:38:23,119 --> 00:38:24,720
and

1044
00:38:24,720 --> 00:38:25,680
um

1045
00:38:25,680 --> 00:38:28,240
the fdi again will ensure that the

1046
00:38:28,240 --> 00:38:30,560
device package used to represent the

1047
00:38:30,560 --> 00:38:31,520
sensor

1048
00:38:31,520 --> 00:38:33,839
was registered under the

1049
00:38:33,839 --> 00:38:36,400
fdi registration authority and therefore

1050
00:38:36,400 --> 00:38:40,240
was not pampered or altered in any way

1051
00:38:40,240 --> 00:38:42,560
let's make sure that you know the the

1052
00:38:42,560 --> 00:38:44,720
world health organization

1053
00:38:44,720 --> 00:38:47,920
ensure that at the level zero

1054
00:38:47,920 --> 00:38:51,040
of the data it was not pampered at all

1055
00:38:51,040 --> 00:38:53,359
right so all of these data are being

1056
00:38:53,359 --> 00:38:56,800
sent to the fda server in the level two

1057
00:38:56,800 --> 00:38:59,040
which you know then transmit the

1058
00:38:59,040 --> 00:39:02,240
information to the fdi clients

1059
00:39:02,240 --> 00:39:05,839
located in level 2.5 or 3

1060
00:39:05,839 --> 00:39:07,599
depending on the plant structure i saw a

1061
00:39:07,599 --> 00:39:09,040
lot of plants structure that way they

1062
00:39:09,040 --> 00:39:11,359
have they have 2.5 there are plant

1063
00:39:11,359 --> 00:39:13,440
structures that they have level three of

1064
00:39:13,440 --> 00:39:15,359
the purdue model so depending on the

1065
00:39:15,359 --> 00:39:17,119
that structure but since

1066
00:39:17,119 --> 00:39:19,599
the fdi supports opc aids obviously is

1067
00:39:19,599 --> 00:39:20,640
one of the

1068
00:39:20,640 --> 00:39:23,760
um biggest protocol for

1069
00:39:23,760 --> 00:39:25,920
um sending data

1070
00:39:25,920 --> 00:39:27,680
in the enterprise

1071
00:39:27,680 --> 00:39:29,839
level we will utilize that as a sample

1072
00:39:29,839 --> 00:39:31,839
protocol to transmit the information

1073
00:39:31,839 --> 00:39:34,160
security to the higher layers of the

1074
00:39:34,160 --> 00:39:36,960
purdue model you know inside the plant's

1075
00:39:36,960 --> 00:39:38,400
enterprise network there should be a

1076
00:39:38,400 --> 00:39:41,280
server dedicated to communicate

1077
00:39:41,280 --> 00:39:44,240
to the decentralized matrix server by a

1078
00:39:44,240 --> 00:39:46,000
you know generic messaging protocol

1079
00:39:46,000 --> 00:39:47,680
example of that

1080
00:39:47,680 --> 00:39:48,400
uh

1081
00:39:48,400 --> 00:39:51,680
rabbitmq mqtt etc so

1082
00:39:51,680 --> 00:39:53,920
through this connection we can we could

1083
00:39:53,920 --> 00:39:55,359
we could transmit the storage

1084
00:39:55,359 --> 00:39:56,800
temperature

1085
00:39:56,800 --> 00:39:59,280
to the blockchain while ensuring data

1086
00:39:59,280 --> 00:40:02,000
integrity which is again crucial in this

1087
00:40:02,000 --> 00:40:03,920
scenario

1088
00:40:03,920 --> 00:40:06,319
again once once the data is in the

1089
00:40:06,319 --> 00:40:08,319
blockchain already it is ready for

1090
00:40:08,319 --> 00:40:11,040
approval right once once the wu

1091
00:40:11,040 --> 00:40:13,200
actually requests the data from the

1092
00:40:13,200 --> 00:40:14,319
blockchain

1093
00:40:14,319 --> 00:40:16,400
for uh you know if they want to approve

1094
00:40:16,400 --> 00:40:18,240
that data for example for the approval

1095
00:40:18,240 --> 00:40:19,359
process

1096
00:40:19,359 --> 00:40:20,800
once the block data has been stored in

1097
00:40:20,800 --> 00:40:22,560
blockchain again the government the

1098
00:40:22,560 --> 00:40:25,280
government or the governing body can now

1099
00:40:25,280 --> 00:40:28,079
check the uh data via their native

1100
00:40:28,079 --> 00:40:30,400
matrix client matrix client app you can

1101
00:40:30,400 --> 00:40:32,560
develop that using the sdk as well and

1102
00:40:32,560 --> 00:40:34,880
ensure with confidence that the data has

1103
00:40:34,880 --> 00:40:36,560
not been tampered with

1104
00:40:36,560 --> 00:40:38,640
they could now move on to either approve

1105
00:40:38,640 --> 00:40:40,560
or reject the vaccine batches depending

1106
00:40:40,560 --> 00:40:42,800
on whether you know the parameters have

1107
00:40:42,800 --> 00:40:44,160
met the

1108
00:40:44,160 --> 00:40:46,800
uh they establish um hunting standards

1109
00:40:46,800 --> 00:40:48,960
successfully it's for example what we

1110
00:40:48,960 --> 00:40:51,119
talk about on the on the temperature of

1111
00:40:51,119 --> 00:40:54,160
the of the storage for example of the

1112
00:40:54,160 --> 00:40:57,040
whole batch of that vaccine and who

1113
00:40:57,040 --> 00:41:00,560
decision is whether or not

1114
00:41:00,560 --> 00:41:02,319
to approve or reject

1115
00:41:02,319 --> 00:41:04,720
will be sent on the decentralized

1116
00:41:04,720 --> 00:41:07,040
matrix server as well and eventually

1117
00:41:07,040 --> 00:41:09,760
recorded in the blockchain

1118
00:41:09,760 --> 00:41:10,560
and

1119
00:41:10,560 --> 00:41:12,720
for that purpose the manufacturing plan

1120
00:41:12,720 --> 00:41:15,440
can that data as well can uh can

1121
00:41:15,440 --> 00:41:17,599
actually get that data as well right so

1122
00:41:17,599 --> 00:41:20,640
they can validate that data and check if

1123
00:41:20,640 --> 00:41:24,079
who approved that as well through their

1124
00:41:24,079 --> 00:41:27,440
um matrix client app too

1125
00:41:27,440 --> 00:41:29,599
so

1126
00:41:29,599 --> 00:41:31,359
what has to be done so that you know

1127
00:41:31,359 --> 00:41:33,760
this kind of solution that we talked

1128
00:41:33,760 --> 00:41:35,680
about earlier

1129
00:41:35,680 --> 00:41:37,680
we talked about this time what what can

1130
00:41:37,680 --> 00:41:39,440
we done so that this kind of solution

1131
00:41:39,440 --> 00:41:41,760
will be available and can be easily

1132
00:41:41,760 --> 00:41:43,200
adaptable for

1133
00:41:43,200 --> 00:41:45,520
for for blockchain implementation

1134
00:41:45,520 --> 00:41:47,440
because right now we are not seeing this

1135
00:41:47,440 --> 00:41:49,599
in the industrial control

1136
00:41:49,599 --> 00:41:51,839
systems as me as work i'm currently

1137
00:41:51,839 --> 00:41:52,960
working on

1138
00:41:52,960 --> 00:41:55,040
in dcs and scada systems you are not

1139
00:41:55,040 --> 00:41:58,079
seeing this kind of implementation and

1140
00:41:58,079 --> 00:42:00,480
as a software security engineer we think

1141
00:42:00,480 --> 00:42:01,440
that

1142
00:42:01,440 --> 00:42:03,599
we need to create a framework right we

1143
00:42:03,599 --> 00:42:06,000
need to create some guidance on this so

1144
00:42:06,000 --> 00:42:06,720
that

1145
00:42:06,720 --> 00:42:08,319
everyone should adapt

1146
00:42:08,319 --> 00:42:10,880
adapt blockchain easily

1147
00:42:10,880 --> 00:42:13,040
you know um

1148
00:42:13,040 --> 00:42:16,480
i've been um studying blockchain and i'm

1149
00:42:16,480 --> 00:42:18,720
i'm kind of sad that there's no

1150
00:42:18,720 --> 00:42:19,520
uh

1151
00:42:19,520 --> 00:42:22,560
there's no valid use case for blockchain

1152
00:42:22,560 --> 00:42:26,400
specifically for for ics so for me

1153
00:42:26,400 --> 00:42:30,640
uh for me there's need on the creation

1154
00:42:30,640 --> 00:42:32,240
of the framework so that

1155
00:42:32,240 --> 00:42:35,200
it can be adapted easily so first what

1156
00:42:35,200 --> 00:42:37,760
we did is to

1157
00:42:37,760 --> 00:42:39,920
have a valid use case we talked about a

1158
00:42:39,920 --> 00:42:42,720
solid example on you know how can we use

1159
00:42:42,720 --> 00:42:45,440
blockchain in pharmaceutical industry

1160
00:42:45,440 --> 00:42:47,200
and there are a lot of use cases that

1161
00:42:47,200 --> 00:42:49,359
can that that we can do

1162
00:42:49,359 --> 00:42:52,079
and we we need to somehow regulate these

1163
00:42:52,079 --> 00:42:54,560
use cases on where and when you know

1164
00:42:54,560 --> 00:42:56,480
again blockchain can be used

1165
00:42:56,480 --> 00:42:58,720
it is okay to use it is best to use in

1166
00:42:58,720 --> 00:43:01,200
this use case because again blockchain

1167
00:43:01,200 --> 00:43:02,720
is not always a solution for every

1168
00:43:02,720 --> 00:43:04,640
problem so we need to consider that so

1169
00:43:04,640 --> 00:43:07,760
we now we need to check on what specific

1170
00:43:07,760 --> 00:43:11,040
area in ics that we can use blockchain

1171
00:43:11,040 --> 00:43:14,000
as well okay so once we know that valid

1172
00:43:14,000 --> 00:43:16,000
use case we need to identify the risk so

1173
00:43:16,000 --> 00:43:18,480
what we did we identify the security

1174
00:43:18,480 --> 00:43:20,480
risk for that use case

1175
00:43:20,480 --> 00:43:21,440
so

1176
00:43:21,440 --> 00:43:24,319
we talk about data security data privacy

1177
00:43:24,319 --> 00:43:27,280
and confidentiality right so we need to

1178
00:43:27,280 --> 00:43:29,680
identify the risks of that particular

1179
00:43:29,680 --> 00:43:30,800
use case

1180
00:43:30,800 --> 00:43:32,560
finally we also

1181
00:43:32,560 --> 00:43:34,319
check for

1182
00:43:34,319 --> 00:43:36,400
security requirements so you know

1183
00:43:36,400 --> 00:43:39,119
once you identify the risks

1184
00:43:39,119 --> 00:43:40,880
on your use case you you need to

1185
00:43:40,880 --> 00:43:42,400
technically have some sort of

1186
00:43:42,400 --> 00:43:44,560
requirements so that you can solve this

1187
00:43:44,560 --> 00:43:47,200
risk by identifying solutions

1188
00:43:47,200 --> 00:43:49,359
we talk about these requirements and we

1189
00:43:49,359 --> 00:43:51,040
validate some technology integration for

1190
00:43:51,040 --> 00:43:52,640
the following requirements

1191
00:43:52,640 --> 00:43:55,040
we use some existing solutions why

1192
00:43:55,040 --> 00:43:57,200
because technically if you want to have

1193
00:43:57,200 --> 00:44:00,240
uh an easily adaptable implementation we

1194
00:44:00,240 --> 00:44:02,560
can definitely we don't need to create a

1195
00:44:02,560 --> 00:44:05,280
new solution or a new a new concept

1196
00:44:05,280 --> 00:44:06,800
there are a lot of existing solutions

1197
00:44:06,800 --> 00:44:08,640
there just we just need to some sort of

1198
00:44:08,640 --> 00:44:11,680
integrate them together right so we have

1199
00:44:11,680 --> 00:44:13,599
an end-to-end solution suggestion on

1200
00:44:13,599 --> 00:44:15,839
security data transmission for

1201
00:44:15,839 --> 00:44:18,400
the requirement of level 0 to the level

1202
00:44:18,400 --> 00:44:19,680
3 network

1203
00:44:19,680 --> 00:44:21,599
and some sort of level 3 to the

1204
00:44:21,599 --> 00:44:23,920
blockchain network by using matrix

1205
00:44:23,920 --> 00:44:24,960
so

1206
00:44:24,960 --> 00:44:26,800
we also check some compatibility

1207
00:44:26,800 --> 00:44:29,440
requirements we don't need to you know

1208
00:44:29,440 --> 00:44:31,680
have compatibility issues when it comes

1209
00:44:31,680 --> 00:44:35,440
to um you know e3 protocols etc so we

1210
00:44:35,440 --> 00:44:37,040
check and validate some technology

1211
00:44:37,040 --> 00:44:39,280
integration for these requirements so we

1212
00:44:39,280 --> 00:44:42,079
analyze e2e properties of instant

1213
00:44:42,079 --> 00:44:44,000
messaging protocols because as we all

1214
00:44:44,000 --> 00:44:45,280
know

1215
00:44:45,280 --> 00:44:47,200
instant messaging protocols are

1216
00:44:47,200 --> 00:44:49,440
rampant in

1217
00:44:49,440 --> 00:44:52,560
in chats in uh in messaging apps like

1218
00:44:52,560 --> 00:44:54,720
driver facebook so we analyze the

1219
00:44:54,720 --> 00:44:56,400
properties of that if it is applicable

1220
00:44:56,400 --> 00:44:58,560
for blockchain so we also check this

1221
00:44:58,560 --> 00:45:01,520
intel instantly messaging protocol if

1222
00:45:01,520 --> 00:45:05,520
they are okay with um with the iot

1223
00:45:05,520 --> 00:45:07,200
properties

1224
00:45:07,200 --> 00:45:09,280
at the lower level of the purdue model

1225
00:45:09,280 --> 00:45:11,440
we check for solutions on that as well

1226
00:45:11,440 --> 00:45:13,920
as aryan talk about the fdi

1227
00:45:13,920 --> 00:45:17,119
and the traditional industrial devices

1228
00:45:17,119 --> 00:45:19,839
we also check on how can they adapt on

1229
00:45:19,839 --> 00:45:21,040
these um

1230
00:45:21,040 --> 00:45:23,760
new technologies so fdi solved these um

1231
00:45:23,760 --> 00:45:25,040
issues

1232
00:45:25,040 --> 00:45:26,720
as we talked about that

1233
00:45:26,720 --> 00:45:27,760
earlier

1234
00:45:27,760 --> 00:45:30,720
and also we consider some existing

1235
00:45:30,720 --> 00:45:32,480
security standards

1236
00:45:32,480 --> 00:45:34,400
right now we also need to consider to

1237
00:45:34,400 --> 00:45:36,640
utilize standards available for ics

1238
00:45:36,640 --> 00:45:37,839
there is

1239
00:45:37,839 --> 00:45:41,280
a very popular standard iccu standard

1240
00:45:41,280 --> 00:45:43,440
which uses the purdue model architecture

1241
00:45:43,440 --> 00:45:44,240
so

1242
00:45:44,240 --> 00:45:46,960
our are suggested solutions somehow for

1243
00:45:46,960 --> 00:45:49,280
for blockchain to be easily adaptable to

1244
00:45:49,280 --> 00:45:52,079
ics is to consider some standard already

1245
00:45:52,079 --> 00:45:53,760
available for them

1246
00:45:53,760 --> 00:45:55,359
we talk about the purdue model

1247
00:45:55,359 --> 00:45:57,359
architecture right so

1248
00:45:57,359 --> 00:45:59,119
the purdue model architecture will

1249
00:45:59,119 --> 00:46:00,800
protect data and have secure zone in the

1250
00:46:00,800 --> 00:46:03,920
ics network so your solution somehow

1251
00:46:03,920 --> 00:46:06,160
should consider this and should be

1252
00:46:06,160 --> 00:46:08,480
compatible on this standard as well as

1253
00:46:08,480 --> 00:46:11,440
the sda standard that um

1254
00:46:11,440 --> 00:46:12,880
a lot of companies right now are

1255
00:46:12,880 --> 00:46:15,040
currently using this will help the

1256
00:46:15,040 --> 00:46:17,200
integration to be easily adaptable for

1257
00:46:17,200 --> 00:46:18,480
for blockchain

1258
00:46:18,480 --> 00:46:20,400
and finally we talk about some sort of

1259
00:46:20,400 --> 00:46:22,720
um governance compliance

1260
00:46:22,720 --> 00:46:24,160
we also

1261
00:46:24,160 --> 00:46:26,400
must consider government requirements

1262
00:46:26,400 --> 00:46:28,480
for blockchain especially you know on

1263
00:46:28,480 --> 00:46:30,640
implementing secure endpoint encryption

1264
00:46:30,640 --> 00:46:33,520
since not all of the countries are okay

1265
00:46:33,520 --> 00:46:35,280
with antenna encryptions as we talk

1266
00:46:35,280 --> 00:46:38,880
about on the one of the challenges of uh

1267
00:46:38,880 --> 00:46:40,640
doing an end-to-end encryption the

1268
00:46:40,640 --> 00:46:42,400
framework should still be

1269
00:46:42,400 --> 00:46:44,960
again drafted to have a

1270
00:46:44,960 --> 00:46:46,560
favorable agreement between the

1271
00:46:46,560 --> 00:46:48,400
regulation bodies

1272
00:46:48,400 --> 00:46:49,440
so

1273
00:46:49,440 --> 00:46:50,400
so yeah

1274
00:46:50,400 --> 00:46:53,520
so this somehow are the building blocks

1275
00:46:53,520 --> 00:46:56,240
for for me or for us on creating

1276
00:46:56,240 --> 00:46:58,480
blockchain security framework

1277
00:46:58,480 --> 00:47:00,160
you know there are many similar

1278
00:47:00,160 --> 00:47:02,640
strategies and alternatives for matrix

1279
00:47:02,640 --> 00:47:04,240
and fdi technology

1280
00:47:04,240 --> 00:47:06,160
that are you know still remain

1281
00:47:06,160 --> 00:47:07,920
unexplored

1282
00:47:07,920 --> 00:47:10,800
but still we believe that the solutions

1283
00:47:10,800 --> 00:47:11,680
are

1284
00:47:11,680 --> 00:47:13,359
capable of successfully adapting

1285
00:47:13,359 --> 00:47:16,160
blockchain for ics utilizing existing

1286
00:47:16,160 --> 00:47:19,680
technology as long as they comply

1287
00:47:19,680 --> 00:47:21,599
with the framework that we think they

1288
00:47:21,599 --> 00:47:22,640
need to do

1289
00:47:22,640 --> 00:47:24,640
and the similar approach that we did as

1290
00:47:24,640 --> 00:47:25,920
well

1291
00:47:25,920 --> 00:47:28,559
so although the ideas and solutions we

1292
00:47:28,559 --> 00:47:30,720
suggested are purely focused on security

1293
00:47:30,720 --> 00:47:32,880
there are other factors to consider such

1294
00:47:32,880 --> 00:47:35,760
as performance usability and so on but

1295
00:47:35,760 --> 00:47:36,839
again

1296
00:47:36,839 --> 00:47:40,079
security is a critical component and for

1297
00:47:40,079 --> 00:47:41,599
us a stepping stone

1298
00:47:41,599 --> 00:47:44,319
for the ics industry to use and adopt

1299
00:47:44,319 --> 00:47:45,440
blockchain

1300
00:47:45,440 --> 00:47:46,960
if we can secure the data of the

1301
00:47:46,960 --> 00:47:48,800
blockchain then definitely

1302
00:47:48,800 --> 00:47:49,760
the

1303
00:47:49,760 --> 00:47:52,720
icn ics industry will adopt this

1304
00:47:52,720 --> 00:47:54,000
and

1305
00:47:54,000 --> 00:47:56,480
ultimately we will look at the available

1306
00:47:56,480 --> 00:47:58,319
technologies for completely integrating

1307
00:47:58,319 --> 00:48:00,559
and using blockchain for ics use case

1308
00:48:00,559 --> 00:48:03,280
this is just to speed up the adaptation

1309
00:48:03,280 --> 00:48:05,920
we know that somehow the technology is

1310
00:48:05,920 --> 00:48:08,000
ready to be implemented in blockchain

1311
00:48:08,000 --> 00:48:08,960
it's not

1312
00:48:08,960 --> 00:48:12,319
it is not a zero effort right but

1313
00:48:12,319 --> 00:48:13,359
somehow

1314
00:48:13,359 --> 00:48:14,720
there are

1315
00:48:14,720 --> 00:48:16,400
readily available technologies that we

1316
00:48:16,400 --> 00:48:19,119
can integrate that can solve the issues

1317
00:48:19,119 --> 00:48:21,359
right now for blockchain and we believe

1318
00:48:21,359 --> 00:48:23,599
that establishing a blockchain security

1319
00:48:23,599 --> 00:48:26,240
framework as you can see here

1320
00:48:26,240 --> 00:48:28,960
for for the ics is somehow a vital

1321
00:48:28,960 --> 00:48:31,359
component if we want it to be you know

1322
00:48:31,359 --> 00:48:32,800
part of

1323
00:48:32,800 --> 00:48:35,280
the ics industry if you want to be

1324
00:48:35,280 --> 00:48:38,480
if you want blockchain to be successful

1325
00:48:38,480 --> 00:48:42,079
valid and secure for ics okay so again

1326
00:48:42,079 --> 00:48:44,480
thank you very much guys and let me know

1327
00:48:44,480 --> 00:48:46,480
if you have questions

1328
00:48:46,480 --> 00:48:49,520
and again don't forget to hack the

1329
00:48:49,520 --> 00:48:52,520
planet

