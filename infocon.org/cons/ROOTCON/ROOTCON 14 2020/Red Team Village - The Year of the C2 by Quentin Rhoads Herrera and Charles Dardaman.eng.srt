1
00:00:05,920 --> 00:00:08,080
hello and thank you for joining the talk

2
00:00:08,080 --> 00:00:11,200
uh about the year of the c2 with chase

3
00:00:11,200 --> 00:00:14,080
dartmouth and myself uh so to begin just

4
00:00:14,080 --> 00:00:14,960
a little intro

5
00:00:14,960 --> 00:00:18,000
my name is quentin rhodes or paragon sec

6
00:00:18,000 --> 00:00:18,720
on twitter

7
00:00:18,720 --> 00:00:21,199
i've been doing pin testing for quite a

8
00:00:21,199 --> 00:00:22,720
while exploit development

9
00:00:22,720 --> 00:00:24,960
and exploit research and a bunch of

10
00:00:24,960 --> 00:00:25,840
other stuff that really

11
00:00:25,840 --> 00:00:28,160
isn't important or pertaining to this

12
00:00:28,160 --> 00:00:29,359
chase

13
00:00:29,359 --> 00:00:31,199
my name is chase with charles dardaman

14
00:00:31,199 --> 00:00:32,880
i've been doing red teaming for

15
00:00:32,880 --> 00:00:35,280
a little over two years now love

16
00:00:35,280 --> 00:00:36,719
breaking software because i absolutely

17
00:00:36,719 --> 00:00:38,399
hate computers and i like to develop

18
00:00:38,399 --> 00:00:39,920
tools for um

19
00:00:39,920 --> 00:00:42,480
for hacking

20
00:00:43,200 --> 00:00:44,320
so the first thing we really want to

21
00:00:44,320 --> 00:00:46,800
cover is what is the c2 because

22
00:00:46,800 --> 00:00:48,719
quite often we run against red and blue

23
00:00:48,719 --> 00:00:49,840
teamers who

24
00:00:49,840 --> 00:00:52,399
either have a separate definition or

25
00:00:52,399 --> 00:00:53,520
they just don't know what it is

26
00:00:53,520 --> 00:00:54,559
altogether so

27
00:00:54,559 --> 00:00:56,640
in basic terms the command and control

28
00:00:56,640 --> 00:00:58,640
system is used to obtain

29
00:00:58,640 --> 00:01:01,520
uh persistence on compromise machines so

30
00:01:01,520 --> 00:01:03,039
let's say you use

31
00:01:03,039 --> 00:01:05,119
the newest uh exploit out there zero

32
00:01:05,119 --> 00:01:07,520
login and you gain da

33
00:01:07,520 --> 00:01:09,439
and you want to then compromise or

34
00:01:09,439 --> 00:01:10,960
maintain access to all those compromised

35
00:01:10,960 --> 00:01:11,760
machines

36
00:01:11,760 --> 00:01:13,360
you would use something like a command

37
00:01:13,360 --> 00:01:15,280
and control infrastructure to maintain

38
00:01:15,280 --> 00:01:17,280
that access across the board

39
00:01:17,280 --> 00:01:20,720
as well as being able to execute

40
00:01:20,720 --> 00:01:23,759
commands one time against many machines

41
00:01:23,759 --> 00:01:26,080
maintain looted data or anything that

42
00:01:26,080 --> 00:01:26,799
you've pulled off

43
00:01:26,799 --> 00:01:29,040
all in one central location so it makes

44
00:01:29,040 --> 00:01:30,880
red teaming and post exploitation

45
00:01:30,880 --> 00:01:33,759
a little easier

46
00:01:34,880 --> 00:01:38,479
so red teams are the most

47
00:01:38,479 --> 00:01:41,280
widely used uh teams that use c2s

48
00:01:41,280 --> 00:01:43,439
they're mostly used as i said for post

49
00:01:43,439 --> 00:01:44,640
exploitation

50
00:01:44,640 --> 00:01:46,159
mostly for red team engagements that

51
00:01:46,159 --> 00:01:48,320
include like phishing or any type of

52
00:01:48,320 --> 00:01:49,520
more complex

53
00:01:49,520 --> 00:01:52,159
uh threat actor emulations however it

54
00:01:52,159 --> 00:01:54,240
can be done in internal pin tests where

55
00:01:54,240 --> 00:01:55,439
you're just

56
00:01:55,439 --> 00:01:56,960
checking for vulnerabilities on servers

57
00:01:56,960 --> 00:01:58,640
it is helpful in that ex

58
00:01:58,640 --> 00:02:02,320
that exercise they like i said

59
00:02:02,320 --> 00:02:05,439
really enable us to maintain access to

60
00:02:05,439 --> 00:02:07,200
multiple machines instead of having to

61
00:02:07,200 --> 00:02:08,720
have shells

62
00:02:08,720 --> 00:02:11,120
uh beaconing back to like netcat or

63
00:02:11,120 --> 00:02:12,879
anything else in a more

64
00:02:12,879 --> 00:02:15,760
less organized fashion it also helps us

65
00:02:15,760 --> 00:02:17,440
to build advanced

66
00:02:17,440 --> 00:02:20,000
techniques to bypass tools such as

67
00:02:20,000 --> 00:02:22,239
carbon black silence or any edr av

68
00:02:22,239 --> 00:02:25,440
out there and bypass blue team defenses

69
00:02:25,440 --> 00:02:28,080
that have been put in place

70
00:02:28,080 --> 00:02:29,760
however that doesn't mean blue teams

71
00:02:29,760 --> 00:02:31,760
can't use it and we really encourage

72
00:02:31,760 --> 00:02:32,480
blue teams

73
00:02:32,480 --> 00:02:34,959
to actually test out all of the command

74
00:02:34,959 --> 00:02:36,720
and control systems that they can

75
00:02:36,720 --> 00:02:39,200
against their defenses you can learn

76
00:02:39,200 --> 00:02:40,640
several things as a blue team are using

77
00:02:40,640 --> 00:02:41,280
a c2

78
00:02:41,280 --> 00:02:43,599
such as the techniques that red teams

79
00:02:43,599 --> 00:02:45,120
are using to bypass

80
00:02:45,120 --> 00:02:48,720
tool sets or logging you can see

81
00:02:48,720 --> 00:02:50,720
common themes such as reading into

82
00:02:50,720 --> 00:02:53,680
memory and you can also just understand

83
00:02:53,680 --> 00:02:55,840
more in depth about how a red teamer

84
00:02:55,840 --> 00:02:56,879
will go about

85
00:02:56,879 --> 00:02:59,840
using a c2 in order to maintain access

86
00:02:59,840 --> 00:03:00,319
to your

87
00:03:00,319 --> 00:03:03,040
infrastructure this level of knowledge

88
00:03:03,040 --> 00:03:04,080
will help you

89
00:03:04,080 --> 00:03:05,920
further defend yourself by either

90
00:03:05,920 --> 00:03:08,000
enhancing the tool sets you already have

91
00:03:08,000 --> 00:03:11,519
or by building custom you know logs or

92
00:03:11,519 --> 00:03:12,400
alerts

93
00:03:12,400 --> 00:03:15,280
that can help you detect a compromise or

94
00:03:15,280 --> 00:03:16,319
a red teamer

95
00:03:16,319 --> 00:03:19,839
that's within the infrastructure

96
00:03:20,400 --> 00:03:22,080
so there are lots of c2s out there right

97
00:03:22,080 --> 00:03:24,319
now c2 matrix themselves have

98
00:03:24,319 --> 00:03:26,640
probably about 50-ish now if i remember

99
00:03:26,640 --> 00:03:27,760
correctly

100
00:03:27,760 --> 00:03:30,319
so the ones you would have heard of like

101
00:03:30,319 --> 00:03:31,760
cobalt strike or

102
00:03:31,760 --> 00:03:34,239
covenant or empire and all or even

103
00:03:34,239 --> 00:03:35,760
merlin and all those

104
00:03:35,760 --> 00:03:38,560
um have been out there for some time and

105
00:03:38,560 --> 00:03:38,879
um

106
00:03:38,879 --> 00:03:42,239
are continuing development today so

107
00:03:42,239 --> 00:03:44,400
some of the two biggest ones we're gonna

108
00:03:44,400 --> 00:03:46,000
go over here one is ps empire

109
00:03:46,000 --> 00:03:48,080
so you guys probably heard of it because

110
00:03:48,080 --> 00:03:50,319
it was written by spectre ops

111
00:03:50,319 --> 00:03:53,120
i think nine or ten years ago now and

112
00:03:53,120 --> 00:03:56,080
their goal was basically to show

113
00:03:56,080 --> 00:03:58,640
that powershell was not secure right

114
00:03:58,640 --> 00:04:00,319
there was no monitoring on it there was

115
00:04:00,319 --> 00:04:01,840
nothing that people were doing to watch

116
00:04:01,840 --> 00:04:03,760
it and that it could be easily utilized

117
00:04:03,760 --> 00:04:05,760
for malicious purposes so

118
00:04:05,760 --> 00:04:08,640
they wrote it it was cli based only uh

119
00:04:08,640 --> 00:04:10,400
written in powershell

120
00:04:10,400 --> 00:04:12,000
the agents were all powershell the back

121
00:04:12,000 --> 00:04:15,120
end was mostly python 2

122
00:04:15,120 --> 00:04:18,560
and they deprecated about last year

123
00:04:18,560 --> 00:04:21,358
and since then bs empire took it over

124
00:04:21,358 --> 00:04:23,759
they moved imported over to python 3

125
00:04:23,759 --> 00:04:25,199
which was good and they started adding a

126
00:04:25,199 --> 00:04:27,440
ui because

127
00:04:27,440 --> 00:04:31,040
they realize that cli based only

128
00:04:31,040 --> 00:04:33,360
c2s are kind of getting old at this

129
00:04:33,360 --> 00:04:34,080
point

130
00:04:34,080 --> 00:04:36,400
um so as you can see here this is

131
00:04:36,400 --> 00:04:37,919
basically what their cli look like if

132
00:04:37,919 --> 00:04:38,800
you guys have ever used

133
00:04:38,800 --> 00:04:42,080
meta metasploit or any really any

134
00:04:42,080 --> 00:04:44,800
hacking cli based tool is kind of look

135
00:04:44,800 --> 00:04:46,800
the same right

136
00:04:46,800 --> 00:04:48,560
and then this is what their new ui looks

137
00:04:48,560 --> 00:04:50,160
like so you're allowed to run commands

138
00:04:50,160 --> 00:04:51,440
it's supposed to make it a little easier

139
00:04:51,440 --> 00:04:53,199
to interpret the data you are

140
00:04:53,199 --> 00:04:54,960
especially as you get campaigns with

141
00:04:54,960 --> 00:04:57,280
larger amounts of targets

142
00:04:57,280 --> 00:05:00,400
you really need help um keeping up with

143
00:05:00,400 --> 00:05:02,160
it

144
00:05:02,160 --> 00:05:04,000
so the other big another big one is

145
00:05:04,000 --> 00:05:06,160
cobalt strike so cobalt strike is paid

146
00:05:06,160 --> 00:05:06,560
for

147
00:05:06,560 --> 00:05:09,039
right now costs about three grand was

148
00:05:09,039 --> 00:05:10,000
created

149
00:05:10,000 --> 00:05:12,240
eight years ago and pretty much the de

150
00:05:12,240 --> 00:05:13,280
facto for

151
00:05:13,280 --> 00:05:16,639
professional teams or even

152
00:05:16,639 --> 00:05:19,759
apts use it cracked versions are out

153
00:05:19,759 --> 00:05:21,120
there for

154
00:05:21,120 --> 00:05:22,960
crimeware all sorts of stuff so it's

155
00:05:22,960 --> 00:05:25,680
been java with agents based in c

156
00:05:25,680 --> 00:05:27,840
um it does have collaboration features

157
00:05:27,840 --> 00:05:31,120
so it has the team server with the ui

158
00:05:31,120 --> 00:05:32,639
and then it's mainly windows focus it's

159
00:05:32,639 --> 00:05:34,160
not a whole lot i think they

160
00:05:34,160 --> 00:05:36,080
do a little linux but they're pretty

161
00:05:36,080 --> 00:05:37,759
much focused on windows and very good at

162
00:05:37,759 --> 00:05:39,759
it

163
00:05:39,759 --> 00:05:41,280
so one thing that coal strike does is

164
00:05:41,280 --> 00:05:42,400
pretty neat is it allows you to

165
00:05:42,400 --> 00:05:43,280
visualize

166
00:05:43,280 --> 00:05:46,080
what their what your campaign looks like

167
00:05:46,080 --> 00:05:47,840
so if you'll see the

168
00:05:47,840 --> 00:05:49,759
firewall there that's your egress point

169
00:05:49,759 --> 00:05:51,199
and basically it's showing that how you

170
00:05:51,199 --> 00:05:52,800
as you move into the environment it

171
00:05:52,800 --> 00:05:54,080
allows you to keep track of how

172
00:05:54,080 --> 00:05:55,680
everything is connected to each other

173
00:05:55,680 --> 00:05:58,240
because sometimes excessive firewalls

174
00:05:58,240 --> 00:05:59,600
really just don't let you out

175
00:05:59,600 --> 00:06:00,960
of the environment so you need to be

176
00:06:00,960 --> 00:06:03,039
creative with how you get your data back

177
00:06:03,039 --> 00:06:05,199
out

178
00:06:05,680 --> 00:06:08,800
so there was some problems with c2s that

179
00:06:08,800 --> 00:06:11,120
chase and i realized when we first

180
00:06:11,120 --> 00:06:12,720
started looking into

181
00:06:12,720 --> 00:06:14,880
either purchasing a c2 using an open

182
00:06:14,880 --> 00:06:15,759
source

183
00:06:15,759 --> 00:06:18,400
or building our own right one of the

184
00:06:18,400 --> 00:06:19,840
biggest problems that we found was the

185
00:06:19,840 --> 00:06:21,840
lack of flexibility due to them being

186
00:06:21,840 --> 00:06:23,600
developed in a very specific language

187
00:06:23,600 --> 00:06:24,160
right

188
00:06:24,160 --> 00:06:26,240
so powershell empire is the example as

189
00:06:26,240 --> 00:06:28,639
the open source de facto at the time

190
00:06:28,639 --> 00:06:31,360
it was all powershell based agents for

191
00:06:31,360 --> 00:06:32,880
the most part modules

192
00:06:32,880 --> 00:06:36,240
in and etc were all built around one

193
00:06:36,240 --> 00:06:38,160
language right so if you weren't fluent

194
00:06:38,160 --> 00:06:39,600
in that language or you had some

195
00:06:39,600 --> 00:06:41,680
deficiencies in knowledge or lack of

196
00:06:41,680 --> 00:06:42,319
knowledge

197
00:06:42,319 --> 00:06:44,720
then you had to really get up to speed

198
00:06:44,720 --> 00:06:47,440
quickly in order to expand upon that c2

199
00:06:47,440 --> 00:06:50,319
in order to make it really uh usable for

200
00:06:50,319 --> 00:06:50,720
you

201
00:06:50,720 --> 00:06:52,000
and your team because that's another

202
00:06:52,000 --> 00:06:53,919
thing we had to think about is not

203
00:06:53,919 --> 00:06:54,720
everyone on

204
00:06:54,720 --> 00:06:56,400
a red team is going to have the same

205
00:06:56,400 --> 00:06:57,759
knowledge base right some of us are

206
00:06:57,759 --> 00:06:58,800
going to be really good at

207
00:06:58,800 --> 00:07:01,280
you know powershell some python and

208
00:07:01,280 --> 00:07:02,720
other languages right so

209
00:07:02,720 --> 00:07:05,840
the lack of flexibility really caused us

210
00:07:05,840 --> 00:07:06,720
to question

211
00:07:06,720 --> 00:07:10,080
what direction we were going to go

212
00:07:10,160 --> 00:07:12,319
the next problem is we know that most

213
00:07:12,319 --> 00:07:14,080
organizations are windows

214
00:07:14,080 --> 00:07:17,919
primarily right however red hat centos

215
00:07:17,919 --> 00:07:19,840
is within most environments mac or

216
00:07:19,840 --> 00:07:21,520
darwin devices are within

217
00:07:21,520 --> 00:07:24,880
uh enterprises even mobile is within

218
00:07:24,880 --> 00:07:27,520
enterprise infrastructure so we wanted

219
00:07:27,520 --> 00:07:29,759
something that could be used across

220
00:07:29,759 --> 00:07:31,440
different platforms right we didn't want

221
00:07:31,440 --> 00:07:32,000
to have

222
00:07:32,000 --> 00:07:34,800
a c2 that operated only in windows and

223
00:07:34,800 --> 00:07:37,280
then find another c2 or another way

224
00:07:37,280 --> 00:07:40,319
managing compromised linux devices

225
00:07:40,319 --> 00:07:43,440
that splinter really caused us to have

226
00:07:43,440 --> 00:07:44,240
some

227
00:07:44,240 --> 00:07:47,039
added overhead or excessive work that we

228
00:07:47,039 --> 00:07:48,000
really had to overcome

229
00:07:48,000 --> 00:07:50,720
so that was another you know issue that

230
00:07:50,720 --> 00:07:52,560
we found with what was currently out

231
00:07:52,560 --> 00:07:52,879
there

232
00:07:52,879 --> 00:07:54,800
at the time that we were investigating

233
00:07:54,800 --> 00:07:57,039
this

234
00:07:57,120 --> 00:07:59,680
another part is our red team today team

235
00:07:59,680 --> 00:08:00,639
aries is

236
00:08:00,639 --> 00:08:03,199
uh roughly about 12 people uh different

237
00:08:03,199 --> 00:08:04,879
varying skill levels

238
00:08:04,879 --> 00:08:08,240
uh different interactions with c2s

239
00:08:08,240 --> 00:08:10,319
and other tool sets and other commands

240
00:08:10,319 --> 00:08:12,319
other operating systems so

241
00:08:12,319 --> 00:08:14,160
we wanted something that was multi-user

242
00:08:14,160 --> 00:08:15,759
platform right something that

243
00:08:15,759 --> 00:08:18,879
could be used by anybody on the team

244
00:08:18,879 --> 00:08:20,720
they can see what others are doing there

245
00:08:20,720 --> 00:08:22,560
was logging capabilities

246
00:08:22,560 --> 00:08:24,720
and they can communicate and collaborate

247
00:08:24,720 --> 00:08:26,240
within that c2

248
00:08:26,240 --> 00:08:28,720
so that was really imperative for us

249
00:08:28,720 --> 00:08:30,080
especially as we hire

250
00:08:30,080 --> 00:08:33,519
younger or newer analysts within the red

251
00:08:33,519 --> 00:08:34,320
team who

252
00:08:34,320 --> 00:08:36,399
we want to catch up to speed and teach

253
00:08:36,399 --> 00:08:38,719
how to you know become an effective red

254
00:08:38,719 --> 00:08:39,279
teamer

255
00:08:39,279 --> 00:08:43,120
we wanted the ability to add comments or

256
00:08:43,120 --> 00:08:44,880
you know suggestions on how they should

257
00:08:44,880 --> 00:08:47,120
approach maybe that next

258
00:08:47,120 --> 00:08:50,800
step within the c2 and that really goes

259
00:08:50,800 --> 00:08:51,200
into

260
00:08:51,200 --> 00:08:53,279
the difficulty of new analysts being

261
00:08:53,279 --> 00:08:55,440
able to use c2s in the real world

262
00:08:55,440 --> 00:08:56,560
scenarios

263
00:08:56,560 --> 00:08:59,120
right cli base is kind of the de facto

264
00:08:59,120 --> 00:09:01,120
standard for a lot of tools red teamers

265
00:09:01,120 --> 00:09:01,920
have and it's

266
00:09:01,920 --> 00:09:03,519
partly because it's really easy to write

267
00:09:03,519 --> 00:09:05,680
a cli base right you don't have to know

268
00:09:05,680 --> 00:09:07,360
javascript you don't have to know ui

269
00:09:07,360 --> 00:09:08,480
development

270
00:09:08,480 --> 00:09:11,120
so with new beginners entering the world

271
00:09:11,120 --> 00:09:12,399
of c2s

272
00:09:12,399 --> 00:09:14,240
they don't really visualize the workflow

273
00:09:14,240 --> 00:09:15,680
or the process of

274
00:09:15,680 --> 00:09:18,560
a an engagement leveraging c2 so we

275
00:09:18,560 --> 00:09:19,279
wanted

276
00:09:19,279 --> 00:09:22,320
the ability to have a c2 with a ui and

277
00:09:22,320 --> 00:09:24,240
at the time there wasn't any really out

278
00:09:24,240 --> 00:09:24,959
there

279
00:09:24,959 --> 00:09:29,600
except for paid tools like cobalt strike

280
00:09:29,600 --> 00:09:32,560
so after all of the analysis of the

281
00:09:32,560 --> 00:09:34,320
problems that we were facing and where

282
00:09:34,320 --> 00:09:36,480
we wanted to actually go chase and i

283
00:09:36,480 --> 00:09:37,839
decided to

284
00:09:37,839 --> 00:09:40,640
go about building our own right one that

285
00:09:40,640 --> 00:09:41,279
would

286
00:09:41,279 --> 00:09:42,959
effectively solve the problems that we

287
00:09:42,959 --> 00:09:45,120
were facing and at the same time

288
00:09:45,120 --> 00:09:48,720
teach us how to develop so we developed

289
00:09:48,720 --> 00:09:50,720
this tool called demo c2 which we

290
00:09:50,720 --> 00:09:51,680
launched

291
00:09:51,680 --> 00:09:54,800
this year the primary reasons

292
00:09:54,800 --> 00:09:56,399
you know outside of just solving some of

293
00:09:56,399 --> 00:09:58,240
those problems you know is to learn

294
00:09:58,240 --> 00:09:58,560
right

295
00:09:58,560 --> 00:10:00,560
if you want to learn any concept within

296
00:10:00,560 --> 00:10:01,760
blue or red team or

297
00:10:01,760 --> 00:10:04,000
anything in the technical technical

298
00:10:04,000 --> 00:10:05,920
world the best way to do it is just to

299
00:10:05,920 --> 00:10:07,360
get hands-on and do it

300
00:10:07,360 --> 00:10:09,760
and really the last reason to develop is

301
00:10:09,760 --> 00:10:10,560
because i'm cheap

302
00:10:10,560 --> 00:10:12,480
uh you know i didn't want to spend money

303
00:10:12,480 --> 00:10:14,399
on cobalt strike or another tool

304
00:10:14,399 --> 00:10:16,320
when i could have leveraged that funds

305
00:10:16,320 --> 00:10:18,959
to train our analysts to become better

306
00:10:18,959 --> 00:10:21,040
and so really with all solving our

307
00:10:21,040 --> 00:10:23,360
issues learning how c2s operate learning

308
00:10:23,360 --> 00:10:25,120
these different operating systems

309
00:10:25,120 --> 00:10:27,680
and because i'm cheap came about us

310
00:10:27,680 --> 00:10:30,239
developing

311
00:10:30,839 --> 00:10:32,240
democ2

312
00:10:32,240 --> 00:10:34,079
so some of the biggest benefits that we

313
00:10:34,079 --> 00:10:36,160
got from this right off the bat

314
00:10:36,160 --> 00:10:38,640
after you know many months upon months

315
00:10:38,640 --> 00:10:39,360
of development

316
00:10:39,360 --> 00:10:42,079
is we built it in a way that agents and

317
00:10:42,079 --> 00:10:44,000
modules can be built in any language

318
00:10:44,000 --> 00:10:44,399
right

319
00:10:44,399 --> 00:10:46,720
the server itself is expecting

320
00:10:46,720 --> 00:10:48,399
communications in a certain fashion in

321
00:10:48,399 --> 00:10:49,680
json right

322
00:10:49,680 --> 00:10:52,720
however that allows us to build an agent

323
00:10:52,720 --> 00:10:54,959
in c or if we wanted to build it in

324
00:10:54,959 --> 00:10:56,800
python technically we could

325
00:10:56,800 --> 00:10:58,480
modules are the same way we can build

326
00:10:58,480 --> 00:11:00,240
them in any type of operator or any type

327
00:11:00,240 --> 00:11:01,760
of language

328
00:11:01,760 --> 00:11:04,480
since the back end is built in golang

329
00:11:04,480 --> 00:11:06,560
and our agents currently are in goling

330
00:11:06,560 --> 00:11:07,600
we support all

331
00:11:07,600 --> 00:11:10,160
operating systems to include mobile this

332
00:11:10,160 --> 00:11:10,720
was really

333
00:11:10,720 --> 00:11:12,480
big for us because one of the problems

334
00:11:12,480 --> 00:11:15,360
was the lack of cross os compatibility

335
00:11:15,360 --> 00:11:17,680
and golang just natively has that

336
00:11:17,680 --> 00:11:19,120
capability

337
00:11:19,120 --> 00:11:21,920
multi-user support demo c2 with its ui

338
00:11:21,920 --> 00:11:22,959
capabilities

339
00:11:22,959 --> 00:11:25,920
with its commenting features has

340
00:11:25,920 --> 00:11:27,600
multi-user support multiple users can

341
00:11:27,600 --> 00:11:28,240
interact

342
00:11:28,240 --> 00:11:30,000
with agents at the same time they can

343
00:11:30,000 --> 00:11:31,279
see what others have done

344
00:11:31,279 --> 00:11:32,959
there's logging across the entire

345
00:11:32,959 --> 00:11:35,120
platform

346
00:11:35,120 --> 00:11:37,680
and also archiving replaying one of the

347
00:11:37,680 --> 00:11:39,040
problems i get from a lot of clients

348
00:11:39,040 --> 00:11:40,800
that come to us is asking us what did

349
00:11:40,800 --> 00:11:41,360
you do

350
00:11:41,360 --> 00:11:44,480
and can we retest or redo something

351
00:11:44,480 --> 00:11:47,200
or maybe the assessment is really long

352
00:11:47,200 --> 00:11:48,800
you need to bring down the server or the

353
00:11:48,800 --> 00:11:50,320
server just went down

354
00:11:50,320 --> 00:11:52,800
you could actually back up the entire

355
00:11:52,800 --> 00:11:55,120
server or archive it we call it end game

356
00:11:55,120 --> 00:11:56,399
is the feature

357
00:11:56,399 --> 00:11:58,959
and you can pass it back up and call

358
00:11:58,959 --> 00:12:00,160
replay function

359
00:12:00,160 --> 00:12:02,079
which will stand up the database all

360
00:12:02,079 --> 00:12:03,680
compiled binaries

361
00:12:03,680 --> 00:12:06,000
uh all logs back in place all comments

362
00:12:06,000 --> 00:12:07,200
back in place

363
00:12:07,200 --> 00:12:09,440
allowing it to be like as if it never

364
00:12:09,440 --> 00:12:10,880
ended right the only difference is

365
00:12:10,880 --> 00:12:12,720
obviously the agents on the victim

366
00:12:12,720 --> 00:12:13,519
servers

367
00:12:13,519 --> 00:12:15,360
uh would no longer be communicating

368
00:12:15,360 --> 00:12:16,720
backwards you would have to find your

369
00:12:16,720 --> 00:12:18,720
way back within that environment

370
00:12:18,720 --> 00:12:20,560
and lastly it's going to be open source

371
00:12:20,560 --> 00:12:22,079
forever we're never planning on making

372
00:12:22,079 --> 00:12:23,519
sponsor wear

373
00:12:23,519 --> 00:12:27,440
a closed pro version of it

374
00:12:27,440 --> 00:12:30,240
so one of the biggest design choices was

375
00:12:30,240 --> 00:12:32,240
for the gui was to make it easy to

376
00:12:32,240 --> 00:12:34,160
visualize the workflow of a command and

377
00:12:34,160 --> 00:12:36,000
control infrastructure

378
00:12:36,000 --> 00:12:38,160
we wanted to make it easy for new users

379
00:12:38,160 --> 00:12:39,120
to navigate

380
00:12:39,120 --> 00:12:42,160
c2 uh dark theme obviously because

381
00:12:42,160 --> 00:12:43,760
we all live in basements for the most

382
00:12:43,760 --> 00:12:46,639
part and you know bright screens hurt us

383
00:12:46,639 --> 00:12:48,320
uh multiple language for not our

384
00:12:48,320 --> 00:12:50,000
non-english speakers right we understand

385
00:12:50,000 --> 00:12:51,839
that not everybody who's in red team

386
00:12:51,839 --> 00:12:54,000
who's in pentastine speaks english so

387
00:12:54,000 --> 00:12:56,560
we wanted localization so that it can be

388
00:12:56,560 --> 00:12:58,560
easy to use for those who aren't

389
00:12:58,560 --> 00:12:59,920
speaking english

390
00:12:59,920 --> 00:13:02,000
uh who don't speak english and just

391
00:13:02,000 --> 00:13:03,920
overall we wanted the entire

392
00:13:03,920 --> 00:13:06,720
front end easy for people to use making

393
00:13:06,720 --> 00:13:08,880
bridging that gap between complexity of

394
00:13:08,880 --> 00:13:10,399
actually running a red team engagement

395
00:13:10,399 --> 00:13:14,480
with the c2 to making it easier

396
00:13:14,480 --> 00:13:16,000
and we really wanted to call out kind of

397
00:13:16,000 --> 00:13:17,760
the the collaboration right that's

398
00:13:17,760 --> 00:13:19,600
a really big piece so in this example

399
00:13:19,600 --> 00:13:21,279
i'm running some commands

400
00:13:21,279 --> 00:13:24,320
we're you know taking some data and we

401
00:13:24,320 --> 00:13:26,079
ran tasks we want to see what's going on

402
00:13:26,079 --> 00:13:26,720
there

403
00:13:26,720 --> 00:13:28,720
and we want to paste it in there so if

404
00:13:28,720 --> 00:13:30,000
another user goes in

405
00:13:30,000 --> 00:13:33,120
they can see who ran that

406
00:13:33,120 --> 00:13:35,040
uh data who copied it you know we can

407
00:13:35,040 --> 00:13:36,639
leave notes for each other

408
00:13:36,639 --> 00:13:38,639
um you know allowing collaboration

409
00:13:38,639 --> 00:13:40,399
across so if chase decided to log into

410
00:13:40,399 --> 00:13:42,399
that same agent he could see that i've

411
00:13:42,399 --> 00:13:44,000
already printed out some of the tasks

412
00:13:44,000 --> 00:13:46,320
maybe i found some passwords and clear

413
00:13:46,320 --> 00:13:47,680
text i didn't want to pull them down so

414
00:13:47,680 --> 00:13:49,199
i put it in the comments section

415
00:13:49,199 --> 00:13:51,040
or maybe i just want to leave a nice

416
00:13:51,040 --> 00:13:53,519
youtube link to rick astley's video

417
00:13:53,519 --> 00:13:56,079
for chase

418
00:13:57,360 --> 00:13:59,040
so part of the design choices we went

419
00:13:59,040 --> 00:14:00,880
with with the server was we wanted to be

420
00:14:00,880 --> 00:14:02,000
very lightweight

421
00:14:02,000 --> 00:14:05,519
so not everybody who's getting into

422
00:14:05,519 --> 00:14:07,839
red teaming or even in a red team has

423
00:14:07,839 --> 00:14:09,519
the resources needed to run

424
00:14:09,519 --> 00:14:11,120
really heavy tools so we wanted to be

425
00:14:11,120 --> 00:14:12,959
able to run this on a raspberry pi

426
00:14:12,959 --> 00:14:15,519
and it does currently run on a raspberry

427
00:14:15,519 --> 00:14:16,320
pi

428
00:14:16,320 --> 00:14:18,240
um probably you could probably get about

429
00:14:18,240 --> 00:14:19,920
100 agents connected to it

430
00:14:19,920 --> 00:14:21,680
before it would start to slow down at

431
00:14:21,680 --> 00:14:24,399
all we also want to make it web-based so

432
00:14:24,399 --> 00:14:26,880
we're everyone's tired of electron apps

433
00:14:26,880 --> 00:14:28,720
taking up all their ram so we decided

434
00:14:28,720 --> 00:14:30,079
not to go with that

435
00:14:30,079 --> 00:14:32,800
instead we just went with a straight web

436
00:14:32,800 --> 00:14:35,040
server based

437
00:14:35,040 --> 00:14:36,639
server that way everyone can reach it

438
00:14:36,639 --> 00:14:39,680
you can reach it on your phone

439
00:14:39,680 --> 00:14:41,600
and without having to really need to

440
00:14:41,600 --> 00:14:43,040
install anything and

441
00:14:43,040 --> 00:14:44,639
keep the dependencies down across the

442
00:14:44,639 --> 00:14:46,880
board

443
00:14:47,199 --> 00:14:49,120
so going backwards a little bit this

444
00:14:49,120 --> 00:14:50,399
actually started

445
00:14:50,399 --> 00:14:52,160
after you know before we analyzed all

446
00:14:52,160 --> 00:14:54,160
the weaknesses within c2s

447
00:14:54,160 --> 00:14:56,079
chase and i were on an engagement where

448
00:14:56,079 --> 00:14:58,240
we gained domain admin remotely

449
00:14:58,240 --> 00:15:00,959
in under an hour due to an arbitrary web

450
00:15:00,959 --> 00:15:02,959
shell upload for this client

451
00:15:02,959 --> 00:15:05,120
and i had to look around and say well i

452
00:15:05,120 --> 00:15:06,880
didn't want to upload a shell that was

453
00:15:06,880 --> 00:15:08,480
on github that you know

454
00:15:08,480 --> 00:15:10,320
didn't have any password requirements so

455
00:15:10,320 --> 00:15:11,519
i wanted to come up with the idea of

456
00:15:11,519 --> 00:15:13,199
making secure web shells

457
00:15:13,199 --> 00:15:15,440
and so we went down that path first and

458
00:15:15,440 --> 00:15:17,120
then we got into writing jsp and i

459
00:15:17,120 --> 00:15:18,399
didn't want to do that so we ended up

460
00:15:18,399 --> 00:15:19,760
writing binaries and

461
00:15:19,760 --> 00:15:22,639
you know deimos became a c2 full-fledged

462
00:15:22,639 --> 00:15:23,440
c2

463
00:15:23,440 --> 00:15:25,680
however we still when we went through

464
00:15:25,680 --> 00:15:27,120
building out finding out what the

465
00:15:27,120 --> 00:15:28,000
deficiencies

466
00:15:28,000 --> 00:15:31,120
with c2s are how we are going to fix it

467
00:15:31,120 --> 00:15:32,720
and our approach forward we wanted to

468
00:15:32,720 --> 00:15:34,240
keep web shells because i still believe

469
00:15:34,240 --> 00:15:34,880
there

470
00:15:34,880 --> 00:15:37,040
is a really solid need for web shells

471
00:15:37,040 --> 00:15:38,079
within the command and control

472
00:15:38,079 --> 00:15:39,440
infrastructure

473
00:15:39,440 --> 00:15:41,279
main reasons really is they don't get

474
00:15:41,279 --> 00:15:42,720
caught right

475
00:15:42,720 --> 00:15:44,480
most companies are not monitoring their

476
00:15:44,480 --> 00:15:47,519
iis server and saying hey a new is or

477
00:15:47,519 --> 00:15:48,399
aspx

478
00:15:48,399 --> 00:15:50,399
file was uploaded right and so you can

479
00:15:50,399 --> 00:15:51,920
actually interact with those web shells

480
00:15:51,920 --> 00:15:53,600
through demo c2

481
00:15:53,600 --> 00:15:55,199
we do have php it's a little bit broken

482
00:15:55,199 --> 00:15:56,560
right now but we're still trying to get

483
00:15:56,560 --> 00:15:57,600
it working

484
00:15:57,600 --> 00:16:00,720
uh for both windows and linux

485
00:16:00,720 --> 00:16:02,959
the other really big thing about our web

486
00:16:02,959 --> 00:16:04,959
shelves is you can pivot easily from

487
00:16:04,959 --> 00:16:07,120
having a web shell into a full-blown

488
00:16:07,120 --> 00:16:08,000
demo c2

489
00:16:08,000 --> 00:16:10,399
going agent either through quick or

490
00:16:10,399 --> 00:16:11,680
whatever method by

491
00:16:11,680 --> 00:16:13,680
just deploying it through the web shell

492
00:16:13,680 --> 00:16:15,279
it would delete the web shell now you

493
00:16:15,279 --> 00:16:16,000
would have a full

494
00:16:16,000 --> 00:16:18,959
agent on the actual victim machine

495
00:16:18,959 --> 00:16:20,160
allowing you to

496
00:16:20,160 --> 00:16:22,240
move through and start pivoting into the

497
00:16:22,240 --> 00:16:25,040
internal network

498
00:16:26,639 --> 00:16:28,240
so some of the design choices for our

499
00:16:28,240 --> 00:16:30,160
agents were that

500
00:16:30,160 --> 00:16:32,240
we really wanted them to run on any os

501
00:16:32,240 --> 00:16:33,759
so one of the reasons

502
00:16:33,759 --> 00:16:36,079
we're going is the cross compiling made

503
00:16:36,079 --> 00:16:38,639
it super easy for us to do that

504
00:16:38,639 --> 00:16:42,560
we want it to be difficult to

505
00:16:42,560 --> 00:16:44,720
find as well and so luckily with us

506
00:16:44,720 --> 00:16:46,320
golang makes it kind of hard

507
00:16:46,320 --> 00:16:49,120
to analyze not many avs really work on

508
00:16:49,120 --> 00:16:50,160
that right now

509
00:16:50,160 --> 00:16:51,759
and we wanted to make it so that it

510
00:16:51,759 --> 00:16:53,360
would work over multiple different

511
00:16:53,360 --> 00:16:54,560
listener types so

512
00:16:54,560 --> 00:16:55,680
one of the things we implemented

513
00:16:55,680 --> 00:16:57,759
specifically was quick

514
00:16:57,759 --> 00:17:01,040
quick is a udp http 3 protocol that

515
00:17:01,040 --> 00:17:04,079
most people aren't monitoring for right

516
00:17:04,079 --> 00:17:04,880
now

517
00:17:04,880 --> 00:17:07,039
and very little tools can even catch it

518
00:17:07,039 --> 00:17:08,559
so most people aren't looking for

519
00:17:08,559 --> 00:17:11,039
443 udp traffic going out and we can

520
00:17:11,039 --> 00:17:12,480
operate fully

521
00:17:12,480 --> 00:17:15,760
um over that as well

522
00:17:16,400 --> 00:17:18,480
so on top of the fact that we wrote them

523
00:17:18,480 --> 00:17:20,480
in golang we actually made agents

524
00:17:20,480 --> 00:17:22,720
um we kind of made it like a platform

525
00:17:22,720 --> 00:17:24,480
really so you could write an agent

526
00:17:24,480 --> 00:17:27,199
in c right so if you want to make your

527
00:17:27,199 --> 00:17:28,480
own custom agent which is always the

528
00:17:28,480 --> 00:17:30,559
best thing to do to avoid

529
00:17:30,559 --> 00:17:33,120
detection as long as you talk to us our

530
00:17:33,120 --> 00:17:34,880
server in the correct way

531
00:17:34,880 --> 00:17:36,240
you can write it anything you want you

532
00:17:36,240 --> 00:17:37,919
could write it in python

533
00:17:37,919 --> 00:17:41,440
powershell c sharp um

534
00:17:41,440 --> 00:17:44,080
anything you want really um we also have

535
00:17:44,080 --> 00:17:45,840
modules that work with it and those

536
00:17:45,840 --> 00:17:49,200
operate over json rpc so as long as you

537
00:17:49,200 --> 00:17:50,559
write a module that

538
00:17:50,559 --> 00:17:53,600
can talk over json then you're fine

539
00:17:53,600 --> 00:17:56,160
so it allows a lot more flexibility in

540
00:17:56,160 --> 00:18:00,320
how we expand this and continue to avoid

541
00:18:00,320 --> 00:18:02,559
and can continue to increase the

542
00:18:02,559 --> 00:18:03,840
capabilities of the

543
00:18:03,840 --> 00:18:08,400
c2 so going into kind of agents are

544
00:18:08,400 --> 00:18:09,520
their own platform

545
00:18:09,520 --> 00:18:11,919
during defcon this year there was a

546
00:18:11,919 --> 00:18:12,720
great talk

547
00:18:12,720 --> 00:18:15,760
given about domain hiding right how in

548
00:18:15,760 --> 00:18:16,480
the past

549
00:18:16,480 --> 00:18:18,480
uh you know a lot of you know

550
00:18:18,480 --> 00:18:20,480
implementations prevented us from doing

551
00:18:20,480 --> 00:18:21,600
domain fronting

552
00:18:21,600 --> 00:18:25,360
or domain hiding using tls 1.3 and using

553
00:18:25,360 --> 00:18:27,360
the es and i are the encrypted

554
00:18:27,360 --> 00:18:30,640
uh destination if you will of

555
00:18:30,640 --> 00:18:33,840
your server uh the you know speaker at

556
00:18:33,840 --> 00:18:36,480
defcon showed that you could effectively

557
00:18:36,480 --> 00:18:38,799
put an agent on a victim machine and

558
00:18:38,799 --> 00:18:41,120
have it look as if it came from or was

559
00:18:41,120 --> 00:18:42,400
talking to

560
00:18:42,400 --> 00:18:44,480
anything behind cloudflare at this point

561
00:18:44,480 --> 00:18:46,080
like bitdefender in the screenshot to

562
00:18:46,080 --> 00:18:47,120
the left

563
00:18:47,120 --> 00:18:50,640
this individual used uh you know our

564
00:18:50,640 --> 00:18:53,360
demo c2 platform to emulate this during

565
00:18:53,360 --> 00:18:54,000
the talk

566
00:18:54,000 --> 00:18:56,160
and so we decided within three days to

567
00:18:56,160 --> 00:18:57,679
actually implement it full-fledged

568
00:18:57,679 --> 00:18:59,280
within demo so currently

569
00:18:59,280 --> 00:19:02,000
all of our https agents uh currently

570
00:19:02,000 --> 00:19:03,840
support domain hiding

571
00:19:03,840 --> 00:19:06,640
which again all it does i mean they did

572
00:19:06,640 --> 00:19:07,039
fix

573
00:19:07,039 --> 00:19:08,720
a little piece of it cloudflare did they

574
00:19:08,720 --> 00:19:10,640
no longer show the s9 value because per

575
00:19:10,640 --> 00:19:11,679
the rfc

576
00:19:11,679 --> 00:19:14,400
for tls 1.3 you don't need to show that

577
00:19:14,400 --> 00:19:14,880
but

578
00:19:14,880 --> 00:19:17,679
still the ip of destination and still

579
00:19:17,679 --> 00:19:19,280
appears to be bitdefender as you can see

580
00:19:19,280 --> 00:19:20,240
on the left

581
00:19:20,240 --> 00:19:22,640
but truly truthfully the communications

582
00:19:22,640 --> 00:19:24,400
is actually going to

583
00:19:24,400 --> 00:19:26,799
the demo c2 server so if you were a blue

584
00:19:26,799 --> 00:19:28,160
team or looking at this

585
00:19:28,160 --> 00:19:31,039
you wouldn't be able to actually clearly

586
00:19:31,039 --> 00:19:31,440
see

587
00:19:31,440 --> 00:19:33,840
the malicious traffic uh because it

588
00:19:33,840 --> 00:19:35,760
would appear to be going to a trusted

589
00:19:35,760 --> 00:19:38,320
host like bitdefender or octa this just

590
00:19:38,320 --> 00:19:40,720
goes to show the real flexibility

591
00:19:40,720 --> 00:19:43,840
of our agents and how as chase said

592
00:19:43,840 --> 00:19:47,199
it's really its own platform

593
00:19:48,160 --> 00:19:51,280
so one of the design choices that we

594
00:19:51,280 --> 00:19:52,320
really wanted to

595
00:19:52,320 --> 00:19:54,400
incorporate was the fact that just like

596
00:19:54,400 --> 00:19:56,000
in every engagement you kind of work

597
00:19:56,000 --> 00:19:58,400
your way in so you get in from external

598
00:19:58,400 --> 00:20:00,000
you pivot internally and you work

599
00:20:00,000 --> 00:20:02,240
towards whatever your objective is a lot

600
00:20:02,240 --> 00:20:03,840
of times the basic objective is

601
00:20:03,840 --> 00:20:07,360
domain admin so as you work towards that

602
00:20:07,360 --> 00:20:08,400
you're going to run through different

603
00:20:08,400 --> 00:20:11,120
network segments and so pivoting through

604
00:20:11,120 --> 00:20:11,600
those

605
00:20:11,600 --> 00:20:13,840
and pivoting in general is is required

606
00:20:13,840 --> 00:20:15,679
in order to really be able to hit all of

607
00:20:15,679 --> 00:20:17,440
your goals whilst continuing to use the

608
00:20:17,440 --> 00:20:18,799
z2

609
00:20:18,799 --> 00:20:21,600
so currently we support um pivoting over

610
00:20:21,600 --> 00:20:22,640
tcp

611
00:20:22,640 --> 00:20:24,240
we plan to expand that we're probably

612
00:20:24,240 --> 00:20:26,159
going to add smb

613
00:20:26,159 --> 00:20:28,159
even though it's caught by most fortune

614
00:20:28,159 --> 00:20:30,080
500 companies these days

615
00:20:30,080 --> 00:20:33,200
as well as quick um

616
00:20:33,200 --> 00:20:36,240
lateral pivoting as well um and so the

617
00:20:36,240 --> 00:20:37,520
goal of that is just to increase it so

618
00:20:37,520 --> 00:20:39,600
you have more options of pivoting as the

619
00:20:39,600 --> 00:20:40,000
as

620
00:20:40,000 --> 00:20:42,159
they start to catch them and it makes

621
00:20:42,159 --> 00:20:44,080
companies go hey i need to monitor more

622
00:20:44,080 --> 00:20:46,840
lateral uh east-west movement not just

623
00:20:46,840 --> 00:20:48,159
north-south

624
00:20:48,159 --> 00:20:50,080
the agents also stay asynchronous so the

625
00:20:50,080 --> 00:20:51,840
benefit of that while it might take a

626
00:20:51,840 --> 00:20:53,280
little bit longer for your command to

627
00:20:53,280 --> 00:20:54,880
run if you're 10 chains deep

628
00:20:54,880 --> 00:20:58,400
in your for the agent you want to run

629
00:20:58,400 --> 00:21:01,200
the benefit is it doesn't it's not a

630
00:21:01,200 --> 00:21:02,159
constant connection

631
00:21:02,159 --> 00:21:03,919
right so it's always going to be that

632
00:21:03,919 --> 00:21:05,440
slow

633
00:21:05,440 --> 00:21:07,840
every minute i check in every however

634
00:21:07,840 --> 00:21:09,600
long you want every day even so

635
00:21:09,600 --> 00:21:11,039
it's going to take a lot longer it's

636
00:21:11,039 --> 00:21:13,120
going to be quieter harder to pick up

637
00:21:13,120 --> 00:21:14,880
with your network monitoring

638
00:21:14,880 --> 00:21:16,320
as you increase your network monitoring

639
00:21:16,320 --> 00:21:19,439
with the clients we go against

640
00:21:21,200 --> 00:21:24,320
module in addition to that we also have

641
00:21:24,320 --> 00:21:25,360
more modular

642
00:21:25,360 --> 00:21:27,440
modules there on front end backend and

643
00:21:27,440 --> 00:21:29,200
since that they run on the server and

644
00:21:29,200 --> 00:21:30,240
the agent um

645
00:21:30,240 --> 00:21:31,600
you can write them in any language as

646
00:21:31,600 --> 00:21:34,159
long as you talk over json

647
00:21:34,159 --> 00:21:37,520
like i said before they work through the

648
00:21:37,520 --> 00:21:38,720
pivot agents

649
00:21:38,720 --> 00:21:40,000
like i said it just takes a little bit

650
00:21:40,000 --> 00:21:42,400
of time as you push them down because

651
00:21:42,400 --> 00:21:44,960
you're pushing full binaries down

652
00:21:44,960 --> 00:21:47,039
and it's the same encryption scheme so

653
00:21:47,039 --> 00:21:48,640
just because if you write a module

654
00:21:48,640 --> 00:21:50,400
that's sending some sensitive data back

655
00:21:50,400 --> 00:21:51,200
like you're dumping

656
00:21:51,200 --> 00:21:53,120
uh lsas or something like that you don't

657
00:21:53,120 --> 00:21:54,640
want that to be sent in the clear

658
00:21:54,640 --> 00:21:56,320
well don't worry all that data is still

659
00:21:56,320 --> 00:21:58,159
being sent back through the agent

660
00:21:58,159 --> 00:21:59,200
channels

661
00:21:59,200 --> 00:22:00,559
so you don't have to write any

662
00:22:00,559 --> 00:22:02,240
communication channels at all

663
00:22:02,240 --> 00:22:05,039
on the way back out

664
00:22:06,559 --> 00:22:09,360
so some of the things that we want to

665
00:22:09,360 --> 00:22:09,840
you know

666
00:22:09,840 --> 00:22:12,559
do moving forward with demo c2 is we

667
00:22:12,559 --> 00:22:14,159
want to really support mobile and the

668
00:22:14,159 --> 00:22:15,679
biggest reason is is

669
00:22:15,679 --> 00:22:17,600
we want to show the weaknesses within

670
00:22:17,600 --> 00:22:20,159
the ios or android platform

671
00:22:20,159 --> 00:22:22,559
security in terms of detections right

672
00:22:22,559 --> 00:22:24,320
we've found in the past or others have

673
00:22:24,320 --> 00:22:25,280
found in the past

674
00:22:25,280 --> 00:22:27,520
operators or malicious actors with you

675
00:22:27,520 --> 00:22:28,480
know http

676
00:22:28,480 --> 00:22:30,880
agents in the clear running on mobile

677
00:22:30,880 --> 00:22:31,760
devices that

678
00:22:31,760 --> 00:22:32,799
you know don't get caught for an

679
00:22:32,799 --> 00:22:34,159
extended amount of time and we know

680
00:22:34,159 --> 00:22:35,440
enterprises

681
00:22:35,440 --> 00:22:37,840
are fully supporting mobile platforms so

682
00:22:37,840 --> 00:22:39,200
we really wanted to

683
00:22:39,200 --> 00:22:41,280
take this in the direction eventually of

684
00:22:41,280 --> 00:22:42,799
showing that

685
00:22:42,799 --> 00:22:44,400
mobile sports similar to how powershell

686
00:22:44,400 --> 00:22:46,400
empire showed how powershell needed

687
00:22:46,400 --> 00:22:47,840
further detections we plan on doing the

688
00:22:47,840 --> 00:22:49,039
same for mobile with

689
00:22:49,039 --> 00:22:51,919
the c2 so we want more modules agent

690
00:22:51,919 --> 00:22:53,600
different languages really just to show

691
00:22:53,600 --> 00:22:54,000
that it's

692
00:22:54,000 --> 00:22:56,799
possible and how it works because you

693
00:22:56,799 --> 00:22:57,360
know

694
00:22:57,360 --> 00:22:59,760
part of believing in what we say is

695
00:22:59,760 --> 00:23:01,919
actually showing so

696
00:23:01,919 --> 00:23:03,520
we do plan on writing some agents in

697
00:23:03,520 --> 00:23:05,440
different languages like c sharp or just

698
00:23:05,440 --> 00:23:05,679
c

699
00:23:05,679 --> 00:23:09,120
itself more web shells php jsp because

700
00:23:09,120 --> 00:23:10,960
you know i know not everything runs on

701
00:23:10,960 --> 00:23:12,159
iis and

702
00:23:12,159 --> 00:23:14,880
and php is a heavily used web language

703
00:23:14,880 --> 00:23:15,919
out there

704
00:23:15,919 --> 00:23:18,559
and we obviou also want to get better at

705
00:23:18,559 --> 00:23:19,440
obfuscation

706
00:23:19,440 --> 00:23:22,720
and evasion of avs edrs and other

707
00:23:22,720 --> 00:23:24,640
defensive tools loggings

708
00:23:24,640 --> 00:23:26,640
we really want to make our tools harder

709
00:23:26,640 --> 00:23:28,799
to detect so that the blue team works

710
00:23:28,799 --> 00:23:30,159
harder to catch us

711
00:23:30,159 --> 00:23:32,880
further making it one making them more

712
00:23:32,880 --> 00:23:33,600
secure

713
00:23:33,600 --> 00:23:36,720
and us work harder in order to make rc2

714
00:23:36,720 --> 00:23:39,280
fully work

715
00:23:41,039 --> 00:23:44,000
speaking of mobile agents um one of the

716
00:23:44,000 --> 00:23:45,440
things we wanted to do was the

717
00:23:45,440 --> 00:23:47,360
show and we're working on android

718
00:23:47,360 --> 00:23:49,039
currently in that it's very easy to

719
00:23:49,039 --> 00:23:50,320
trojan um

720
00:23:50,320 --> 00:23:53,360
apks so in this video what you're going

721
00:23:53,360 --> 00:23:53,840
to see

722
00:23:53,840 --> 00:23:56,960
is a simple simple hello world app

723
00:23:56,960 --> 00:23:58,480
basically and when you click it

724
00:23:58,480 --> 00:24:00,000
it's going to reach back and touch our

725
00:24:00,000 --> 00:24:02,880
c2 and show that we have

726
00:24:02,880 --> 00:24:07,360
control over the phone um currently

727
00:24:07,360 --> 00:24:10,640
we support android is binary so if you

728
00:24:10,640 --> 00:24:11,200
have

729
00:24:11,200 --> 00:24:12,640
an exploit and you're on the phone

730
00:24:12,640 --> 00:24:14,559
already you can run the binary

731
00:24:14,559 --> 00:24:16,880
and that's working almost 100 at this

732
00:24:16,880 --> 00:24:17,840
point

733
00:24:17,840 --> 00:24:19,440
and the apks we're working on the

734
00:24:19,440 --> 00:24:20,720
trojaning over right now there's still

735
00:24:20,720 --> 00:24:22,240
some issues with it

736
00:24:22,240 --> 00:24:24,159
um specifically around the different

737
00:24:24,159 --> 00:24:25,760
ways that it's being sandboxed

738
00:24:25,760 --> 00:24:29,520
or um but the goal is to

739
00:24:29,520 --> 00:24:31,520
very shortly come out with it and have a

740
00:24:31,520 --> 00:24:33,200
full write-up on how you can

741
00:24:33,200 --> 00:24:35,039
trojan any of the apks that you might

742
00:24:35,039 --> 00:24:36,960
want we're also working on

743
00:24:36,960 --> 00:24:38,740
ios binary

744
00:24:38,740 --> 00:24:40,159
[Music]

745
00:24:40,159 --> 00:24:43,120
that one will be after the apk comes out

746
00:24:43,120 --> 00:24:44,240
we're probably not going to work on

747
00:24:44,240 --> 00:24:46,320
trojaning ios at this point

748
00:24:46,320 --> 00:24:47,760
but we're going to put the binary in

749
00:24:47,760 --> 00:24:50,559
there pretty soon

750
00:24:50,640 --> 00:24:52,240
so stated quite a bit during this talk

751
00:24:52,240 --> 00:24:53,760
modules is a big thing for us

752
00:24:53,760 --> 00:24:57,279
partly because with all c2s it allows us

753
00:24:57,279 --> 00:24:57,760
to

754
00:24:57,760 --> 00:25:00,320
execute you know more complex commands

755
00:25:00,320 --> 00:25:01,679
or functions

756
00:25:01,679 --> 00:25:03,679
on multiple compromised hosts through

757
00:25:03,679 --> 00:25:05,520
one system so some of the things that

758
00:25:05,520 --> 00:25:06,400
we've already

759
00:25:06,400 --> 00:25:08,000
looked at is key logging for all

760
00:25:08,000 --> 00:25:10,640
operating systems in a way where

761
00:25:10,640 --> 00:25:12,640
the key logs don't actually touch disk

762
00:25:12,640 --> 00:25:14,159
they just stream over

763
00:25:14,159 --> 00:25:17,039
uh the agents and to a server side

764
00:25:17,039 --> 00:25:18,000
remote rdp

765
00:25:18,000 --> 00:25:19,840
virtual console capability similar to

766
00:25:19,840 --> 00:25:21,360
how cobalt strike has

767
00:25:21,360 --> 00:25:24,880
uh so if you're you know remotely uh

768
00:25:24,880 --> 00:25:26,400
you know let's say your compromise has

769
00:25:26,400 --> 00:25:27,919
an internal

770
00:25:27,919 --> 00:25:30,240
infrastructure but your remote you can

771
00:25:30,240 --> 00:25:32,799
gain remote visual access

772
00:25:32,799 --> 00:25:34,720
similar to rdp over vnc or something

773
00:25:34,720 --> 00:25:35,919
along those lines

774
00:25:35,919 --> 00:25:37,840
memory dumping for all operating systems

775
00:25:37,840 --> 00:25:39,279
to find passwords running

776
00:25:39,279 --> 00:25:41,440
in memory for other processes like java

777
00:25:41,440 --> 00:25:42,400
processes

778
00:25:42,400 --> 00:25:44,559
it's commonly found and anything else

779
00:25:44,559 --> 00:25:46,559
really that helps red teams succeed

780
00:25:46,559 --> 00:25:47,279
right

781
00:25:47,279 --> 00:25:49,760
again the goal being to make this as

782
00:25:49,760 --> 00:25:51,200
flexible as possible

783
00:25:51,200 --> 00:25:54,400
and as competitive to the page products

784
00:25:54,400 --> 00:25:55,360
as possible

785
00:25:55,360 --> 00:25:58,320
so trying to build this up to be

786
00:25:58,320 --> 00:26:02,000
comparable to cobalt strike

787
00:26:03,679 --> 00:26:04,960
one of the things we're also continuing

788
00:26:04,960 --> 00:26:07,039
to work on is evasion so luckily for us

789
00:26:07,039 --> 00:26:08,240
going provides

790
00:26:08,240 --> 00:26:11,279
a certain level of obfuscation um an

791
00:26:11,279 --> 00:26:12,480
annoyance already for

792
00:26:12,480 --> 00:26:15,360
reversing so uh over here on the right i

793
00:26:15,360 --> 00:26:15,840
have

794
00:26:15,840 --> 00:26:18,480
a tweet from the creator of ida pro

795
00:26:18,480 --> 00:26:20,000
basically saying that they do not

796
00:26:20,000 --> 00:26:21,120
currently support

797
00:26:21,120 --> 00:26:24,320
golang because of the way that the uh

798
00:26:24,320 --> 00:26:25,200
retirement

799
00:26:25,200 --> 00:26:27,760
the way the function returns work um so

800
00:26:27,760 --> 00:26:29,520
i've had some friends like jimmy there

801
00:26:29,520 --> 00:26:30,640
who's basically is

802
00:26:30,640 --> 00:26:32,720
he had to reverse some goaling malware

803
00:26:32,720 --> 00:26:33,840
and

804
00:26:33,840 --> 00:26:35,520
has had the fun time of going down a

805
00:26:35,520 --> 00:26:37,039
massive rabbit hole in order to get it

806
00:26:37,039 --> 00:26:37,840
worked

807
00:26:37,840 --> 00:26:39,840
to get it working because on a base

808
00:26:39,840 --> 00:26:41,200
level going

809
00:26:41,200 --> 00:26:43,679
pretty much isn't very supported by a

810
00:26:43,679 --> 00:26:45,200
lot of the reversing tools out there

811
00:26:45,200 --> 00:26:46,720
guidra doesn't

812
00:26:46,720 --> 00:26:48,320
bring the return functions in correctly

813
00:26:48,320 --> 00:26:50,480
either so you have to know how to

814
00:26:50,480 --> 00:26:53,200
fix that or um to really continue to go

815
00:26:53,200 --> 00:26:53,840
into it

816
00:26:53,840 --> 00:26:56,720
so that helps us out and as well as the

817
00:26:56,720 --> 00:26:59,520
size of the going binaries also just

818
00:26:59,520 --> 00:27:02,240
um can be large right so going away

819
00:27:02,240 --> 00:27:03,600
compiles it puts everything in there

820
00:27:03,600 --> 00:27:04,400
together

821
00:27:04,400 --> 00:27:08,480
so like your hello worlds over meg um so

822
00:27:08,480 --> 00:27:10,960
it makes it more annoying to if you're

823
00:27:10,960 --> 00:27:12,960
not a strong reverse engineer

824
00:27:12,960 --> 00:27:14,720
to really get into it and find out what

825
00:27:14,720 --> 00:27:17,200
it's doing

826
00:27:18,320 --> 00:27:20,320
so we're gonna also add some more um

827
00:27:20,320 --> 00:27:22,240
just straight obfuscation so going

828
00:27:22,240 --> 00:27:23,760
when it compiles it puts the path of

829
00:27:23,760 --> 00:27:24,880
everything in there so if you don't

830
00:27:24,880 --> 00:27:26,320
compile with obfuscation it's going to

831
00:27:26,320 --> 00:27:26,720
say

832
00:27:26,720 --> 00:27:27,600
there's going to be strings in there

833
00:27:27,600 --> 00:27:30,320
that say demo c2 and the current

834
00:27:30,320 --> 00:27:32,720
obfuscation is basically just

835
00:27:32,720 --> 00:27:34,480
randomizing the strings

836
00:27:34,480 --> 00:27:36,000
and things like and function names and

837
00:27:36,000 --> 00:27:37,520
stuff to stop it from

838
00:27:37,520 --> 00:27:40,720
um saying demos or saying any string

839
00:27:40,720 --> 00:27:42,480
that's easy to find

840
00:27:42,480 --> 00:27:44,159
but we would like that to make it look

841
00:27:44,159 --> 00:27:45,919
more legitimate so we're currently in

842
00:27:45,919 --> 00:27:48,159
development of a way to make the binary

843
00:27:48,159 --> 00:27:50,399
basically point it at a github repo

844
00:27:50,399 --> 00:27:52,000
that's going and it's going to start

845
00:27:52,000 --> 00:27:54,000
copying those strings and functions and

846
00:27:54,000 --> 00:27:54,960
things like that

847
00:27:54,960 --> 00:27:56,320
in order to make it look like a

848
00:27:56,320 --> 00:27:59,279
legitimate binary from another company

849
00:27:59,279 --> 00:28:00,960
because like we've seen with other avs i

850
00:28:00,960 --> 00:28:02,480
remember silence had an issue where if

851
00:28:02,480 --> 00:28:04,240
you threw a bunch of known good strings

852
00:28:04,240 --> 00:28:05,679
at the end it doesn't matter if it

853
00:28:05,679 --> 00:28:06,480
caught it before

854
00:28:06,480 --> 00:28:09,039
it doesn't catch it anymore so the goal

855
00:28:09,039 --> 00:28:10,080
is to make

856
00:28:10,080 --> 00:28:13,120
malicious behavior look more legit

857
00:28:13,120 --> 00:28:15,360
and that's going to make it harder for

858
00:28:15,360 --> 00:28:17,039
us to be detected

859
00:28:17,039 --> 00:28:18,799
yep we also want to do some sandbox and

860
00:28:18,799 --> 00:28:20,399
vm detections um

861
00:28:20,399 --> 00:28:22,159
one you know if if you don't want to be

862
00:28:22,159 --> 00:28:25,039
in a vm uh not have it execute or if

863
00:28:25,039 --> 00:28:26,399
malware reverse engineer catches the

864
00:28:26,399 --> 00:28:29,520
binary uh not have it detonate

865
00:28:29,520 --> 00:28:31,360
you know checking sandboxing waiting

866
00:28:31,360 --> 00:28:32,799
until delay until it's out of the

867
00:28:32,799 --> 00:28:34,559
sandbox

868
00:28:34,559 --> 00:28:36,960
and whatever else really helps us become

869
00:28:36,960 --> 00:28:38,480
better at evading

870
00:28:38,480 --> 00:28:40,640
detections so that we can improve the

871
00:28:40,640 --> 00:28:41,679
detections again

872
00:28:41,679 --> 00:28:43,440
everything red team does really is to

873
00:28:43,440 --> 00:28:45,120
help push defense's

874
00:28:45,120 --> 00:28:47,279
defensive measures forward and so if we

875
00:28:47,279 --> 00:28:49,279
can add more capabilities to

876
00:28:49,279 --> 00:28:52,720
bypass these detections and logging or

877
00:28:52,720 --> 00:28:53,679
alerting

878
00:28:53,679 --> 00:28:56,240
we can hopefully help the blue teamers

879
00:28:56,240 --> 00:28:57,600
the defenders

880
00:28:57,600 --> 00:28:59,760
find other ways around us so that you

881
00:28:59,760 --> 00:29:02,320
know it makes our job harder

882
00:29:02,320 --> 00:29:03,679
obviously like i said at the beginning

883
00:29:03,679 --> 00:29:05,520
this is open source will remain

884
00:29:05,520 --> 00:29:06,799
constantly open source

885
00:29:06,799 --> 00:29:08,799
um as you know chase and i are both in a

886
00:29:08,799 --> 00:29:10,559
var and we're going into q4 we're quite

887
00:29:10,559 --> 00:29:12,080
busy so we haven't added a lot

888
00:29:12,080 --> 00:29:14,399
to demo since its release however that

889
00:29:14,399 --> 00:29:15,520
is the github

890
00:29:15,520 --> 00:29:18,480
we encourage everyone to collaborate if

891
00:29:18,480 --> 00:29:19,919
you have anything that you want

892
00:29:19,919 --> 00:29:22,480
add it to issues or or if you can see

893
00:29:22,480 --> 00:29:23,679
something in our projects that you're

894
00:29:23,679 --> 00:29:25,039
interested in developing

895
00:29:25,039 --> 00:29:26,880
reach out to chase or i we're very you

896
00:29:26,880 --> 00:29:29,120
know friendly to talk to sometimes

897
00:29:29,120 --> 00:29:30,720
and more than willing to answer any

898
00:29:30,720 --> 00:29:32,240
questions or guide you

899
00:29:32,240 --> 00:29:33,679
on the right path but we really want to

900
00:29:33,679 --> 00:29:36,880
make this a highly competitive

901
00:29:36,880 --> 00:29:39,360
c2 that people want to use competing

902
00:29:39,360 --> 00:29:42,559
against closed source

903
00:29:42,799 --> 00:29:45,440
so to contribute really again agents and

904
00:29:45,440 --> 00:29:46,960
modules right whatever

905
00:29:46,960 --> 00:29:48,960
helps you succeed it doesn't matter what

906
00:29:48,960 --> 00:29:50,000
language it is

907
00:29:50,000 --> 00:29:53,279
or even if it helps the larger community

908
00:29:53,279 --> 00:29:55,279
if it helps you write it i'm sure

909
00:29:55,279 --> 00:29:57,200
somebody else will be interested in what

910
00:29:57,200 --> 00:29:58,080
you have

911
00:29:58,080 --> 00:29:59,600
helping expand pivoting capabilities

912
00:29:59,600 --> 00:30:01,360
like s b through name pipes even though

913
00:30:01,360 --> 00:30:03,520
it is detected at fortune 40 and below

914
00:30:03,520 --> 00:30:04,159
companies

915
00:30:04,159 --> 00:30:06,159
or companies who've invested a lot into

916
00:30:06,159 --> 00:30:07,520
cyber security

917
00:30:07,520 --> 00:30:09,679
it still will bypass a lot of detections

918
00:30:09,679 --> 00:30:11,360
in other entities

919
00:30:11,360 --> 00:30:13,440
help with obfuscation invasion right if

920
00:30:13,440 --> 00:30:14,799
there's something that you see that

921
00:30:14,799 --> 00:30:16,080
we're doing wrong

922
00:30:16,080 --> 00:30:18,000
reach out or if there's a better way of

923
00:30:18,000 --> 00:30:20,240
doing it reach out right

924
00:30:20,240 --> 00:30:22,960
again we want to make demo c2 really

925
00:30:22,960 --> 00:30:23,679
amazing

926
00:30:23,679 --> 00:30:26,480
as the you know de facto open source

927
00:30:26,480 --> 00:30:28,880
free c2 and rival the paid ones

928
00:30:28,880 --> 00:30:30,559
um there are a lot of good open source

929
00:30:30,559 --> 00:30:32,320
ones out there we've used

930
00:30:32,320 --> 00:30:35,360
as inspiration to build this but we

931
00:30:35,360 --> 00:30:37,679
you know really look at cobalt strike as

932
00:30:37,679 --> 00:30:39,600
being the direction we want to take this

933
00:30:39,600 --> 00:30:40,399
right as

934
00:30:40,399 --> 00:30:43,679
but you know instead of paid open source

935
00:30:43,679 --> 00:30:46,000
so in conclusion we know you know c2s

936
00:30:46,000 --> 00:30:47,600
are invaluable for red and blue teams we

937
00:30:47,600 --> 00:30:47,919
see

938
00:30:47,919 --> 00:30:49,600
you know breach tax simulation tools are

939
00:30:49,600 --> 00:30:51,600
effectively just automated c2s and they

940
00:30:51,600 --> 00:30:53,200
help blue teams further

941
00:30:53,200 --> 00:30:55,919
so using a c2 like demos or any of the

942
00:30:55,919 --> 00:30:56,559
others

943
00:30:56,559 --> 00:30:58,559
is no different than using some of those

944
00:30:58,559 --> 00:31:00,880
paid products it's just more manual

945
00:31:00,880 --> 00:31:03,279
and the you know manual way is you're

946
00:31:03,279 --> 00:31:05,440
going to learn a lot more right

947
00:31:05,440 --> 00:31:07,120
offensive tools do push the whole

948
00:31:07,120 --> 00:31:08,240
industry forward there's a lot of

949
00:31:08,240 --> 00:31:08,960
argument about

950
00:31:08,960 --> 00:31:10,799
okay bad guys are going to use the tools

951
00:31:10,799 --> 00:31:12,080
that may be true

952
00:31:12,080 --> 00:31:14,799
in most you know in some cases however

953
00:31:14,799 --> 00:31:15,919
if they're open source

954
00:31:15,919 --> 00:31:17,440
you can see the code you can see how to

955
00:31:17,440 --> 00:31:19,519
stop it we've already seen individuals

956
00:31:19,519 --> 00:31:20,559
take demos

957
00:31:20,559 --> 00:31:22,960
and write some rules against the yar

958
00:31:22,960 --> 00:31:24,960
rules against it to try to detect

959
00:31:24,960 --> 00:31:26,399
what we're doing and so we're going to

960
00:31:26,399 --> 00:31:28,480
then turn around and try to bypass that

961
00:31:28,480 --> 00:31:29,760
and it's going to be a constant battle

962
00:31:29,760 --> 00:31:31,600
but at the same time it's going to push

963
00:31:31,600 --> 00:31:33,519
both the red and blue team industry

964
00:31:33,519 --> 00:31:35,279
forward and

965
00:31:35,279 --> 00:31:36,960
you know finally if you want to learn

966
00:31:36,960 --> 00:31:38,880
something regardless of its c2

967
00:31:38,880 --> 00:31:41,440
or if it's how to do a certain technique

968
00:31:41,440 --> 00:31:43,200
just build it right you will learn

969
00:31:43,200 --> 00:31:46,399
more by doing hands-on then by reading a

970
00:31:46,399 --> 00:31:46,880
book

971
00:31:46,880 --> 00:31:49,840
or going through you know and asking

972
00:31:49,840 --> 00:31:51,679
somebody questions just build it like we

973
00:31:51,679 --> 00:31:52,640
did with demos

974
00:31:52,640 --> 00:31:54,320
chase and i learned a ton through this

975
00:31:54,320 --> 00:31:56,240
entire process

976
00:31:56,240 --> 00:31:59,200
and it's definitely opened our eyes to

977
00:31:59,200 --> 00:32:00,559
different avenues that we want to take

978
00:32:00,559 --> 00:32:00,960
in our

979
00:32:00,960 --> 00:32:04,159
professional careers as well uh as uh

980
00:32:04,159 --> 00:32:06,399
you know our personal hobby and learning

981
00:32:06,399 --> 00:32:08,799
different aspects of bypassing or

982
00:32:08,799 --> 00:32:11,918
or writing different things

983
00:32:12,000 --> 00:32:15,279
so thank you for uh attending this talk

984
00:32:15,279 --> 00:32:16,480
you can reach out to us

985
00:32:16,480 --> 00:32:18,320
both uh chase and i are part of team

986
00:32:18,320 --> 00:32:19,519
aries that's the

987
00:32:19,519 --> 00:32:22,399
team's twitter up there uh both uh chase

988
00:32:22,399 --> 00:32:23,760
and my twitter are right there

989
00:32:23,760 --> 00:32:26,640
if you have any questions over democ2 or

990
00:32:26,640 --> 00:32:28,320
you know how to collaborate or

991
00:32:28,320 --> 00:32:29,279
contribute

992
00:32:29,279 --> 00:32:31,440
feel free to reach out to us we really

993
00:32:31,440 --> 00:32:32,640
again want to make this

994
00:32:32,640 --> 00:32:35,519
a great open source project that rivals

995
00:32:35,519 --> 00:32:37,120
cobalt strike and some of the other paid

996
00:32:37,120 --> 00:32:37,760
ones

997
00:32:37,760 --> 00:32:40,000
we want to give a better open source

998
00:32:40,000 --> 00:32:40,960
option

999
00:32:40,960 --> 00:32:44,240
that can help others and you know

1000
00:32:44,240 --> 00:32:47,360
make it last for many years to come so

1001
00:32:47,360 --> 00:32:56,399
thank you all for attending

