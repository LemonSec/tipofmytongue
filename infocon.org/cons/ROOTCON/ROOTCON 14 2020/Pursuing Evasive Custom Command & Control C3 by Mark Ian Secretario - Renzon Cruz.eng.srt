1
00:00:00,880 --> 00:00:03,760
right so welcome to our talk on

2
00:00:03,760 --> 00:00:06,080
uh pursuing evasive custom command and

3
00:00:06,080 --> 00:00:07,759
control

4
00:00:07,759 --> 00:00:11,759
uh we are co-presenting this uh talk uh

5
00:00:11,759 --> 00:00:13,840
we'll be we'll be discussing and going

6
00:00:13,840 --> 00:00:16,079
through our agenda which is uh

7
00:00:16,079 --> 00:00:18,400
we will discuss about cyber kill chain

8
00:00:18,400 --> 00:00:19,600
and the problem

9
00:00:19,600 --> 00:00:22,240
we'll discuss about how can we improve

10
00:00:22,240 --> 00:00:23,439
and how can we

11
00:00:23,439 --> 00:00:26,240
uh defend or improve the security

12
00:00:26,240 --> 00:00:28,400
posture of our organization or

13
00:00:28,400 --> 00:00:31,199
the company we are working for so we'll

14
00:00:31,199 --> 00:00:33,200
discuss about traditional command and

15
00:00:33,200 --> 00:00:34,399
control

16
00:00:34,399 --> 00:00:37,760
one drive basically we will also have

17
00:00:37,760 --> 00:00:41,760
uh some quick overview on how

18
00:00:41,760 --> 00:00:44,079
common command and control frameworks

19
00:00:44,079 --> 00:00:46,399
work so we'll also introduce

20
00:00:46,399 --> 00:00:49,920
a custom command and control c3

21
00:00:49,920 --> 00:00:53,760
so it's made by f-secure and mwr labs

22
00:00:53,760 --> 00:00:56,079
so we'll also discuss most of the common

23
00:00:56,079 --> 00:00:58,559
channels that are already out of the box

24
00:00:58,559 --> 00:00:59,039
uh

25
00:00:59,039 --> 00:01:03,039
in the c3 so we will also cover

26
00:01:03,039 --> 00:01:05,360
attack surface using command and control

27
00:01:05,360 --> 00:01:06,159
we'll have

28
00:01:06,159 --> 00:01:09,840
the video demonstration on how it works

29
00:01:09,840 --> 00:01:10,840
and

30
00:01:10,840 --> 00:01:14,080
how you can track

31
00:01:14,080 --> 00:01:17,520
and see its behavior so we'll also be

32
00:01:17,520 --> 00:01:20,320
covering a live demo on splunk and

33
00:01:20,320 --> 00:01:22,159
detection strategies

34
00:01:22,159 --> 00:01:24,479
on how to detect custom command and

35
00:01:24,479 --> 00:01:27,119
control and of course lastly we have

36
00:01:27,119 --> 00:01:30,880
a q and a section as well

37
00:01:31,040 --> 00:01:34,079
so my uh i was already introduced

38
00:01:34,079 --> 00:01:37,759
uh so my interest lies uh

39
00:01:37,759 --> 00:01:40,400
especially in red teaming and

40
00:01:40,400 --> 00:01:42,079
penetration testing

41
00:01:42,079 --> 00:01:44,479
so uh you can call me ian you can call

42
00:01:44,479 --> 00:01:45,600
me mark

43
00:01:45,600 --> 00:01:49,200
i'm also working as a penetration tester

44
00:01:49,200 --> 00:01:53,119
in uh on in a law firm right now

45
00:01:53,119 --> 00:01:57,759
so uh giving it to uh ransom goose

46
00:01:57,759 --> 00:02:00,719
yes so again my name is renzon cruz so i

47
00:02:00,719 --> 00:02:02,640
was introduced already by

48
00:02:02,640 --> 00:02:06,320
jamie um so i normally work

49
00:02:06,320 --> 00:02:09,520
as a blue team guy and focuses more

50
00:02:09,520 --> 00:02:11,360
towards dfir

51
00:02:11,360 --> 00:02:13,760
and i love going to the conference uh

52
00:02:13,760 --> 00:02:14,480
sadly

53
00:02:14,480 --> 00:02:16,640
we have kobe right now but uh thankful

54
00:02:16,640 --> 00:02:17,760
to rootkin that

55
00:02:17,760 --> 00:02:20,160
they made it uh still possible through

56
00:02:20,160 --> 00:02:21,200
virtual

57
00:02:21,200 --> 00:02:24,319
meetups um so

58
00:02:24,319 --> 00:02:26,560
yeah i like i like going to conference i

59
00:02:26,560 --> 00:02:28,480
like going and hanging out with

60
00:02:28,480 --> 00:02:32,239
jay docman and some other stuff

61
00:02:32,239 --> 00:02:37,599
and that's it

62
00:02:37,599 --> 00:02:40,800
so um we here are presenting as

63
00:02:40,800 --> 00:02:44,640
gaiden again so this is uh me and ian we

64
00:02:44,640 --> 00:02:47,280
co-founded this uh training provider in

65
00:02:47,280 --> 00:02:49,440
the philippines to provide a real world

66
00:02:49,440 --> 00:02:50,560
approach of

67
00:02:50,560 --> 00:02:52,160
having an offensive and as well as

68
00:02:52,160 --> 00:02:54,720
defensive disciplines of cyber security

69
00:02:54,720 --> 00:02:56,560
because we noticed that there's a lot of

70
00:02:56,560 --> 00:02:57,519
gaps

71
00:02:57,519 --> 00:02:59,840
in the philippines talking about

72
00:02:59,840 --> 00:03:02,000
trainings

73
00:03:02,000 --> 00:03:04,879
so we also do some services but we're

74
00:03:04,879 --> 00:03:06,640
still at the early stage

75
00:03:06,640 --> 00:03:09,920
uh and we provide highly technical and

76
00:03:09,920 --> 00:03:11,120
purely hands-on

77
00:03:11,120 --> 00:03:13,280
activities to our students and to our

78
00:03:13,280 --> 00:03:14,480
enrolls

79
00:03:14,480 --> 00:03:17,440
and here are some of our um gigs and

80
00:03:17,440 --> 00:03:18,400
also

81
00:03:18,400 --> 00:03:20,560
um some media exposures uh throughout

82
00:03:20,560 --> 00:03:23,040
this year

83
00:03:24,640 --> 00:03:28,239
okay and um before we start

84
00:03:28,239 --> 00:03:31,280
we need to um we need to discuss um the

85
00:03:31,280 --> 00:03:32,000
lab setup

86
00:03:32,000 --> 00:03:34,239
that we have set up so we actually have

87
00:03:34,239 --> 00:03:35,440
three labs set up

88
00:03:35,440 --> 00:03:37,599
but i'm going to discuss first my home

89
00:03:37,599 --> 00:03:38,879
lab set up so

90
00:03:38,879 --> 00:03:41,599
we're actually using detection lab so

91
00:03:41,599 --> 00:03:43,440
shout out to chris long for providing

92
00:03:43,440 --> 00:03:44,080
this

93
00:03:44,080 --> 00:03:47,120
a very great open source project um

94
00:03:47,120 --> 00:03:50,480
we have here um um like

95
00:03:50,480 --> 00:03:52,959
an enterprise level set up wherein we

96
00:03:52,959 --> 00:03:54,159
have a domain controller

97
00:03:54,159 --> 00:03:56,239
we have a logger we have windows event

98
00:03:56,239 --> 00:03:57,200
collector

99
00:03:57,200 --> 00:03:59,200
and also a windows 10 where we can

100
00:03:59,200 --> 00:04:00,400
perform our

101
00:04:00,400 --> 00:04:03,920
um adversaries simulations um

102
00:04:03,920 --> 00:04:06,080
so we we have different sensors we have

103
00:04:06,080 --> 00:04:07,120
network sensors

104
00:04:07,120 --> 00:04:10,319
like bro z clocks oricata we have host

105
00:04:10,319 --> 00:04:13,599
logs wherein we utilize this

106
00:04:13,599 --> 00:04:16,839
we also have um

107
00:04:16,839 --> 00:04:20,238
relocator for uh for forensics thing

108
00:04:20,238 --> 00:04:23,919
and also os queries um so this is

109
00:04:23,919 --> 00:04:26,000
my home lab setup which i'm going to

110
00:04:26,000 --> 00:04:28,400
show you later um some splunk

111
00:04:28,400 --> 00:04:32,000
full and some process chains that uh

112
00:04:32,000 --> 00:04:34,639
really um make sense to discuss when

113
00:04:34,639 --> 00:04:36,960
talking about situ

114
00:04:36,960 --> 00:04:39,840
and the other set up would be discussed

115
00:04:39,840 --> 00:04:40,160
by

116
00:04:40,160 --> 00:04:43,919
the next slide so uh for

117
00:04:43,919 --> 00:04:47,120
our next uh laboratory is we

118
00:04:47,120 --> 00:04:49,199
have this alternative laboratory uh

119
00:04:49,199 --> 00:04:51,360
which is uh based on cloud

120
00:04:51,360 --> 00:04:54,160
so we deployed it on aws so that we can

121
00:04:54,160 --> 00:04:56,560
collaborate both on the offensive side

122
00:04:56,560 --> 00:04:57,840
and defensive side of

123
00:04:57,840 --> 00:05:00,800
uh cyber security discipline uh we also

124
00:05:00,800 --> 00:05:01,199
use

125
00:05:01,199 --> 00:05:05,680
uh the detection lab so uh this one uh

126
00:05:05,680 --> 00:05:08,880
we had uh an elk elastic logstash and

127
00:05:08,880 --> 00:05:10,000
kibana for our

128
00:05:10,000 --> 00:05:13,600
sim just to have an alternative

129
00:05:13,600 --> 00:05:16,880
on uh what's the difference between uh

130
00:05:16,880 --> 00:05:20,400
how it it can be detected on elk or how

131
00:05:20,400 --> 00:05:22,880
you can query on splunk so

132
00:05:22,880 --> 00:05:25,199
that's why we have practical examples as

133
00:05:25,199 --> 00:05:26,400
well

134
00:05:26,400 --> 00:05:29,680
so for our last uh laboratory setup we

135
00:05:29,680 --> 00:05:32,000
have this one deployed in azure

136
00:05:32,000 --> 00:05:35,039
so we have this uh this lab

137
00:05:35,039 --> 00:05:37,919
is originally from uh defensive origins

138
00:05:37,919 --> 00:05:40,479
and black hills infosec so credits to uh

139
00:05:40,479 --> 00:05:43,600
kent and uh rev

140
00:05:43,600 --> 00:05:45,919
for uh setting this one up so you can

141
00:05:45,919 --> 00:05:47,360
set this one up

142
00:05:47,360 --> 00:05:49,919
uh in like 25 minutes so it's a

143
00:05:49,919 --> 00:05:50,960
terraform the

144
00:05:50,960 --> 00:05:53,840
deployment script that uh basically you

145
00:05:53,840 --> 00:05:54,800
will have an

146
00:05:54,800 --> 00:05:57,520
environment wherein there is a verbose

147
00:05:57,520 --> 00:05:58,560
logging uh

148
00:05:58,560 --> 00:06:01,440
there is uh already sysmon configured

149
00:06:01,440 --> 00:06:02,960
and you have here

150
00:06:02,960 --> 00:06:06,160
help by uh cyber war dog

151
00:06:06,160 --> 00:06:10,080
this one we integrated also our custom

152
00:06:10,080 --> 00:06:12,240
machines for the attackers such as koben

153
00:06:12,240 --> 00:06:13,280
and c2

154
00:06:13,280 --> 00:06:16,800
empire and starkiller we also have here

155
00:06:16,800 --> 00:06:21,840
c3 by f-secure as well

156
00:06:22,479 --> 00:06:25,600
so now um the question is why do we care

157
00:06:25,600 --> 00:06:27,360
why are we providing this

158
00:06:27,360 --> 00:06:29,840
kind of research as well as

159
00:06:29,840 --> 00:06:31,840
presentations to everyone

160
00:06:31,840 --> 00:06:34,720
because we notice that a lot of apts a

161
00:06:34,720 --> 00:06:36,400
lot of attackers right now

162
00:06:36,400 --> 00:06:38,960
are leveraging command and control which

163
00:06:38,960 --> 00:06:39,600
is

164
00:06:39,600 --> 00:06:42,240
um given already but they're blending in

165
00:06:42,240 --> 00:06:43,039
the noise

166
00:06:43,039 --> 00:06:45,600
and they're using different web services

167
00:06:45,600 --> 00:06:46,880
cloud providers

168
00:06:46,880 --> 00:06:50,000
as well as some applications that was

169
00:06:50,000 --> 00:06:52,080
used commonly heavily commonly

170
00:06:52,080 --> 00:06:54,160
used on the enterprise level such as

171
00:06:54,160 --> 00:06:55,759
slack twitter

172
00:06:55,759 --> 00:06:58,880
um gmail office 365

173
00:06:58,880 --> 00:07:01,280
etc etc and this has been for a while

174
00:07:01,280 --> 00:07:02,080
it's not really

175
00:07:02,080 --> 00:07:04,880
a new thing but talking about different

176
00:07:04,880 --> 00:07:06,160
soft professionals

177
00:07:06,160 --> 00:07:08,560
security professionals out there if we

178
00:07:08,560 --> 00:07:10,560
talk about how to detect c2

179
00:07:10,560 --> 00:07:12,160
they just leverage the threat intel

180
00:07:12,160 --> 00:07:14,160
feeds that they have on their

181
00:07:14,160 --> 00:07:16,560
enterprise but how can we perform like

182
00:07:16,560 --> 00:07:17,440
hunting

183
00:07:17,440 --> 00:07:20,560
and how can we um how can we

184
00:07:20,560 --> 00:07:22,960
analyze the deviation between the normal

185
00:07:22,960 --> 00:07:24,000
and the evilness

186
00:07:24,000 --> 00:07:27,199
of those things so that's why we have

187
00:07:27,199 --> 00:07:30,240
this stuff

188
00:07:30,240 --> 00:07:33,440
and the next one um so talking about the

189
00:07:33,440 --> 00:07:34,400
cyber kill chain

190
00:07:34,400 --> 00:07:38,479
normally sock just focus on

191
00:07:38,479 --> 00:07:41,440
people from external network that

192
00:07:41,440 --> 00:07:42,080
performs

193
00:07:42,080 --> 00:07:45,440
recon weaponizations and delivery um

194
00:07:45,440 --> 00:07:49,120
so as you can see on the on the slides

195
00:07:49,120 --> 00:07:53,039
um so the complexity of the collar

196
00:07:53,039 --> 00:07:57,360
defines on how granular the attack is

197
00:07:57,360 --> 00:08:00,000
so from the recon uh initial vector so

198
00:08:00,000 --> 00:08:00,400
that's

199
00:08:00,400 --> 00:08:02,479
mostly soft professionals are focusing

200
00:08:02,479 --> 00:08:03,440
on but

201
00:08:03,440 --> 00:08:05,840
going into the deep side of the attack

202
00:08:05,840 --> 00:08:06,479
vector

203
00:08:06,479 --> 00:08:09,440
like the post compromise thing um

204
00:08:09,440 --> 00:08:10,560
command and control

205
00:08:10,560 --> 00:08:13,280
is on the second to the last of the kill

206
00:08:13,280 --> 00:08:14,400
chain which is

207
00:08:14,400 --> 00:08:16,960
um technically like a full control of

208
00:08:16,960 --> 00:08:17,520
your

209
00:08:17,520 --> 00:08:20,560
enterprise um so they

210
00:08:20,560 --> 00:08:23,840
really just focus first on how to triage

211
00:08:23,840 --> 00:08:25,759
false positive alerts

212
00:08:25,759 --> 00:08:28,479
as well as those things that are coming

213
00:08:28,479 --> 00:08:30,800
from external but what if the attacker

214
00:08:30,800 --> 00:08:33,440
was able to gain his access like during

215
00:08:33,440 --> 00:08:34,080
weekend

216
00:08:34,080 --> 00:08:37,360
and leveraging a very very

217
00:08:37,360 --> 00:08:39,839
uh rare misconfiguration how can you

218
00:08:39,839 --> 00:08:42,000
detect how can you perform hunting

219
00:08:42,000 --> 00:08:44,320
um if they're performing commanding

220
00:08:44,320 --> 00:08:46,080
controller and leveraging your slack

221
00:08:46,080 --> 00:08:46,720
channel

222
00:08:46,720 --> 00:08:49,839
or your office 365 or even your gmail or

223
00:08:49,839 --> 00:08:51,279
even your twitter account

224
00:08:51,279 --> 00:08:54,640
how can they just get your um

225
00:08:54,640 --> 00:09:00,000
files and exfiltrate data from within

226
00:09:01,040 --> 00:09:03,519
so uh just a brief introduction on

227
00:09:03,519 --> 00:09:05,519
command and control 101

228
00:09:05,519 --> 00:09:07,200
so there are many terms that we can

229
00:09:07,200 --> 00:09:08,880
define or we call uh

230
00:09:08,880 --> 00:09:12,000
command and control or c2 we can

231
00:09:12,000 --> 00:09:14,240
call it cnc and command and control

232
00:09:14,240 --> 00:09:15,200
framework

233
00:09:15,200 --> 00:09:18,880
so essentially how we

234
00:09:18,880 --> 00:09:22,640
describe command and control is how

235
00:09:22,640 --> 00:09:25,519
it's the way uh an attacker actually

236
00:09:25,519 --> 00:09:26,480
communicates to

237
00:09:26,480 --> 00:09:29,120
its victim machine or its compromise

238
00:09:29,120 --> 00:09:30,160
machine so it

239
00:09:30,160 --> 00:09:32,320
it may use different network protocols

240
00:09:32,320 --> 00:09:33,680
such as http

241
00:09:33,680 --> 00:09:36,959
or https most probably some leveraged

242
00:09:36,959 --> 00:09:37,680
dns

243
00:09:37,680 --> 00:09:41,360
and others as well so we also have seen

244
00:09:41,360 --> 00:09:42,880
uh icmp

245
00:09:42,880 --> 00:09:46,000
was reportedly being used to uh

246
00:09:46,000 --> 00:09:49,360
target uh organizations as well so

247
00:09:49,360 --> 00:09:52,720
uh we actually saw a lot of dns

248
00:09:52,720 --> 00:09:55,040
traffic uh being leveraged by command

249
00:09:55,040 --> 00:09:56,959
and control channel because

250
00:09:56,959 --> 00:10:01,040
um there's a lot of uh dns traffic

251
00:10:01,040 --> 00:10:03,920
uh it's too much noise and they can

252
00:10:03,920 --> 00:10:04,720
blend in

253
00:10:04,720 --> 00:10:07,760
to the traffic so they can be con or

254
00:10:07,760 --> 00:10:10,720
what we call heartbeat uh of the command

255
00:10:10,720 --> 00:10:12,959
and control basically uh the beacon is

256
00:10:12,959 --> 00:10:14,480
just uh waiting

257
00:10:14,480 --> 00:10:17,519
for a command that will be issued by an

258
00:10:17,519 --> 00:10:20,320
attacker based on what's uh what's the

259
00:10:20,320 --> 00:10:21,519
objective of

260
00:10:21,519 --> 00:10:25,440
that instruction as well

261
00:10:25,519 --> 00:10:28,320
so c2 or command and control hides in

262
00:10:28,320 --> 00:10:29,360
plain sight

263
00:10:29,360 --> 00:10:32,640
so most of the times uh we currently see

264
00:10:32,640 --> 00:10:33,200
that the

265
00:10:33,200 --> 00:10:35,519
threat landscape nowadays uh when it

266
00:10:35,519 --> 00:10:37,279
comes to uh

267
00:10:37,279 --> 00:10:39,120
establishing command and control

268
00:10:39,120 --> 00:10:40,800
channels are

269
00:10:40,800 --> 00:10:42,720
the first objective is to blend with the

270
00:10:42,720 --> 00:10:44,399
noise uh

271
00:10:44,399 --> 00:10:48,000
look for uh the organizations uh

272
00:10:48,000 --> 00:10:51,040
applications that are being used uh

273
00:10:51,040 --> 00:10:53,680
leverage them in order for them to blind

274
00:10:53,680 --> 00:10:54,079
uh

275
00:10:54,079 --> 00:10:56,880
perfectly or stealth stealthily uh

276
00:10:56,880 --> 00:10:59,279
inside the network environment wherein

277
00:10:59,279 --> 00:11:01,600
uh defenders actually have a hard time

278
00:11:01,600 --> 00:11:02,640
on detecting

279
00:11:02,640 --> 00:11:05,279
uh detecting these malicious activities

280
00:11:05,279 --> 00:11:06,720
so

281
00:11:06,720 --> 00:11:10,079
uh such as

282
00:11:10,079 --> 00:11:13,440
we have outlook we have seen apt groups

283
00:11:13,440 --> 00:11:16,480
use twitter gmail slack onedrive

284
00:11:16,480 --> 00:11:18,880
onedrive as well so the more benign the

285
00:11:18,880 --> 00:11:19,680
better

286
00:11:19,680 --> 00:11:23,120
so uh low and slow traffic usage uh most

287
00:11:23,120 --> 00:11:24,800
of the times uh

288
00:11:24,800 --> 00:11:28,720
apt groups take advantage of

289
00:11:28,720 --> 00:11:31,200
having their traffic very low and uh

290
00:11:31,200 --> 00:11:31,839
using

291
00:11:31,839 --> 00:11:34,880
uh command and control only on times

292
00:11:34,880 --> 00:11:35,680
where they are

293
00:11:35,680 --> 00:11:38,320
mostly active users as well so that they

294
00:11:38,320 --> 00:11:41,360
can blend into the traffic

295
00:11:41,360 --> 00:11:44,399
so basically um

296
00:11:44,399 --> 00:11:46,959
once communication is established

297
00:11:46,959 --> 00:11:48,240
between the victim

298
00:11:48,240 --> 00:11:50,720
so the infected the infected machine

299
00:11:50,720 --> 00:11:51,279
sends

300
00:11:51,279 --> 00:11:54,240
a signal to the attacker and then uh the

301
00:11:54,240 --> 00:11:56,240
server will look for the instruction

302
00:11:56,240 --> 00:12:00,079
and then uh they will basically uh

303
00:12:00,079 --> 00:12:03,200
be uh connected with each other and then

304
00:12:03,200 --> 00:12:04,399
uh the attacker

305
00:12:04,399 --> 00:12:08,560
mostly uh will uh indicate um

306
00:12:08,560 --> 00:12:11,040
other commands in order for him to

307
00:12:11,040 --> 00:12:11,920
actually

308
00:12:11,920 --> 00:12:15,519
uh gain more access or more foothold

309
00:12:15,519 --> 00:12:16,959
into the environment

310
00:12:16,959 --> 00:12:19,680
so there are many ways as we said

311
00:12:19,680 --> 00:12:20,639
earlier to

312
00:12:20,639 --> 00:12:23,519
actually leverage uh different protocols

313
00:12:23,519 --> 00:12:25,279
some tend to be more stealthy than

314
00:12:25,279 --> 00:12:26,000
others

315
00:12:26,000 --> 00:12:29,120
and uh sometimes uh

316
00:12:29,120 --> 00:12:32,560
they also leverage uh current exploits

317
00:12:32,560 --> 00:12:34,000
or zero days

318
00:12:34,000 --> 00:12:37,440
so um they also tend to bypass existing

319
00:12:37,440 --> 00:12:38,959
uh and modified

320
00:12:38,959 --> 00:12:40,880
tools that are currently available as

321
00:12:40,880 --> 00:12:43,040
well

322
00:12:45,200 --> 00:12:47,600
so traditional command and control

323
00:12:47,600 --> 00:12:50,720
communication is a user gets compromised

324
00:12:50,720 --> 00:12:52,800
then the attacker establishes the

325
00:12:52,800 --> 00:12:53,920
command and control

326
00:12:53,920 --> 00:12:55,920
channel through the user's compromise

327
00:12:55,920 --> 00:12:57,680
machine so once this

328
00:12:57,680 --> 00:13:00,480
uh bi-directional communication is

329
00:13:00,480 --> 00:13:02,639
already available to the attacker

330
00:13:02,639 --> 00:13:05,120
or the threat actor the attacker will

331
00:13:05,120 --> 00:13:07,279
then issue out commands on demand on the

332
00:13:07,279 --> 00:13:08,800
compromise machines and

333
00:13:08,800 --> 00:13:11,120
send callback instructions as well so

334
00:13:11,120 --> 00:13:15,040
this is also known as a beacon

335
00:13:15,519 --> 00:13:18,480
so talking about mapping and what are

336
00:13:18,480 --> 00:13:20,959
the references or guidelines

337
00:13:20,959 --> 00:13:23,600
uh that we can leverage on how to detect

338
00:13:23,600 --> 00:13:24,639
and how to

339
00:13:24,639 --> 00:13:27,120
or how where can we read some references

340
00:13:27,120 --> 00:13:28,720
about c2

341
00:13:28,720 --> 00:13:32,720
uh we well almost everyone right now is

342
00:13:32,720 --> 00:13:34,399
mapping their detections

343
00:13:34,399 --> 00:13:36,880
uh into miter framework or miter att and

344
00:13:36,880 --> 00:13:38,079
ck

345
00:13:38,079 --> 00:13:41,120
so we can see that we have 16

346
00:13:41,120 --> 00:13:43,680
techniques even as of today we have 16

347
00:13:43,680 --> 00:13:44,639
techniques

348
00:13:44,639 --> 00:13:47,760
and some sub techniques on each part

349
00:13:47,760 --> 00:13:49,519
where in we can see what are the

350
00:13:49,519 --> 00:13:53,199
different types of the attacker the apt

351
00:13:53,199 --> 00:13:56,959
when they are using command and control

352
00:13:57,519 --> 00:14:00,160
and talking about what we have discussed

353
00:14:00,160 --> 00:14:02,160
recently so they keep on blending

354
00:14:02,160 --> 00:14:04,320
on the noise for them to be more

355
00:14:04,320 --> 00:14:05,600
stealthy and for

356
00:14:05,600 --> 00:14:09,839
for them to um do whatever they want

357
00:14:09,839 --> 00:14:12,160
not being detected so they leverage

358
00:14:12,160 --> 00:14:13,040
telegram

359
00:14:13,040 --> 00:14:15,199
so i was surprised that spotify was also

360
00:14:15,199 --> 00:14:16,240
used as

361
00:14:16,240 --> 00:14:19,440
part of the c2 channel uh dropback so

362
00:14:19,440 --> 00:14:22,160
these are the see these are the web

363
00:14:22,160 --> 00:14:22,880
services

364
00:14:22,880 --> 00:14:24,560
these are the applications that we

365
00:14:24,560 --> 00:14:26,240
normally use we have

366
00:14:26,240 --> 00:14:29,360
like um an enterprise account for this

367
00:14:29,360 --> 00:14:31,920
uh when we go to work we also have a

368
00:14:31,920 --> 00:14:33,519
personal account for this when we go

369
00:14:33,519 --> 00:14:33,920
well

370
00:14:33,920 --> 00:14:36,639
when we're doing our personal thing so

371
00:14:36,639 --> 00:14:37,680
it's really

372
00:14:37,680 --> 00:14:41,519
um the question there is to how can we

373
00:14:41,519 --> 00:14:45,600
how can we detect it

374
00:14:45,600 --> 00:14:48,480
and um so how some use cases here

375
00:14:48,480 --> 00:14:50,240
talking about twitter on how they can

376
00:14:50,240 --> 00:14:50,959
use it so

377
00:14:50,959 --> 00:14:54,160
bots uh use social media now for command

378
00:14:54,160 --> 00:14:55,279
and control

379
00:14:55,279 --> 00:14:58,800
um they've also used dga for like domain

380
00:14:58,800 --> 00:15:00,320
name generation

381
00:15:00,320 --> 00:15:03,040
uh to do their malicious thing and a lot

382
00:15:03,040 --> 00:15:05,199
of adversaries i think i've seen

383
00:15:05,199 --> 00:15:07,760
the first report for twitter as early as

384
00:15:07,760 --> 00:15:08,800
2015.

385
00:15:08,800 --> 00:15:11,199
i'm not really sure but it's not really

386
00:15:11,199 --> 00:15:12,160
a new thing now

387
00:15:12,160 --> 00:15:14,959
it's not a new thing uh but it's still

388
00:15:14,959 --> 00:15:18,399
being leveraged by the attacker

389
00:15:18,399 --> 00:15:20,880
and here are some of the apts uh that

390
00:15:20,880 --> 00:15:22,880
was provided by f-secure

391
00:15:22,880 --> 00:15:25,839
uh that leveraged the the twitter as a

392
00:15:25,839 --> 00:15:27,839
command and control channel

393
00:15:27,839 --> 00:15:29,839
so we have onion duke so these are like

394
00:15:29,839 --> 00:15:31,199
a duke uh groups

395
00:15:31,199 --> 00:15:35,279
hamadu cozyduke and minido

396
00:15:36,959 --> 00:15:40,240
so uh we have here uh another uh channel

397
00:15:40,240 --> 00:15:42,720
that is being leveraged by apt groups

398
00:15:42,720 --> 00:15:45,759
so uh gadolinium so

399
00:15:45,759 --> 00:15:47,680
nation state activity group that has

400
00:15:47,680 --> 00:15:50,160
been compromising targets for nearly a

401
00:15:50,160 --> 00:15:51,040
decade

402
00:15:51,040 --> 00:15:54,240
so uh they have optimized the use of

403
00:15:54,240 --> 00:15:55,839
onedrive api

404
00:15:55,839 --> 00:15:59,279
and office 365 as a c2 they leverage

405
00:15:59,279 --> 00:16:02,480
on creating an application on azure and

406
00:16:02,480 --> 00:16:04,720
actually registering with certain

407
00:16:04,720 --> 00:16:05,680
permissions

408
00:16:05,680 --> 00:16:08,160
with regards to onedrive api and

409
00:16:08,160 --> 00:16:09,600
leveraging it

410
00:16:09,600 --> 00:16:12,000
in order for them to use it as a command

411
00:16:12,000 --> 00:16:13,360
and control channel

412
00:16:13,360 --> 00:16:16,240
so this uh type of technique is really

413
00:16:16,240 --> 00:16:16,720
useful

414
00:16:16,720 --> 00:16:20,320
as a lot of organizations actually use

415
00:16:20,320 --> 00:16:23,440
office five one driving out look

416
00:16:23,440 --> 00:16:26,959
um it be it's because microsoft inspires

417
00:16:26,959 --> 00:16:29,759
infrastructure uh sometimes uh a lot of

418
00:16:29,759 --> 00:16:31,920
organizations actually leverage

419
00:16:31,920 --> 00:16:34,880
uh a microsoft powerhouse environment

420
00:16:34,880 --> 00:16:37,759
where in uh it's very difficult to block

421
00:16:37,759 --> 00:16:39,920
organizations that are utilizing office

422
00:16:39,920 --> 00:16:41,199
365

423
00:16:41,199 --> 00:16:43,600
but then again it will rely on the

424
00:16:43,600 --> 00:16:44,480
policies

425
00:16:44,480 --> 00:16:47,120
and restrictions that you have for your

426
00:16:47,120 --> 00:16:47,759
users

427
00:16:47,759 --> 00:16:50,399
uh in order for them to actually uh

428
00:16:50,399 --> 00:16:53,519
conduct this campaign

429
00:16:53,680 --> 00:16:57,040
so uh here we have an example

430
00:16:57,040 --> 00:17:00,800
of one drive being used as a

431
00:17:00,800 --> 00:17:03,839
command and control channel using empire

432
00:17:03,839 --> 00:17:04,559
so

433
00:17:04,559 --> 00:17:08,480
this is a typical example uh wherein

434
00:17:08,480 --> 00:17:13,599
um the target actually uh

435
00:17:13,599 --> 00:17:15,760
depending on the delivery most probably

436
00:17:15,760 --> 00:17:16,880
it's done by

437
00:17:16,880 --> 00:17:20,079
email so we assume that empire c2 is uh

438
00:17:20,079 --> 00:17:20,959
configured

439
00:17:20,959 --> 00:17:24,079
and then um it can be uh

440
00:17:24,079 --> 00:17:27,359
in uh integrated with empire have an

441
00:17:27,359 --> 00:17:28,720
available listener and

442
00:17:28,720 --> 00:17:31,840
you can actually use it uh for your own

443
00:17:31,840 --> 00:17:32,400
uh

444
00:17:32,400 --> 00:17:34,799
experiment in order for you to actually

445
00:17:34,799 --> 00:17:36,799
improve your detection and

446
00:17:36,799 --> 00:17:41,039
know the behavior of this c2 channel

447
00:17:41,039 --> 00:17:44,000
so uh in order for an attacker or a

448
00:17:44,000 --> 00:17:45,600
threat actor to actually

449
00:17:45,600 --> 00:17:49,840
create a channel so he will need to

450
00:17:49,840 --> 00:17:52,160
create an application and register with

451
00:17:52,160 --> 00:17:54,559
appropriate permissions on the azure

452
00:17:54,559 --> 00:17:56,799
so set up microsoft account permissions

453
00:17:56,799 --> 00:17:58,640
and obtain the auth code

454
00:17:58,640 --> 00:18:01,120
or authentication code as well as the

455
00:18:01,120 --> 00:18:02,880
client id and the tenant

456
00:18:02,880 --> 00:18:06,400
id wherever it may apply also the client

457
00:18:06,400 --> 00:18:07,760
secret as well so

458
00:18:07,760 --> 00:18:11,520
and then runs the listener so

459
00:18:11,520 --> 00:18:15,039
once an attacker successfully

460
00:18:15,039 --> 00:18:18,960
has these requirements

461
00:18:18,960 --> 00:18:22,000
uh we can see here an example of

462
00:18:22,000 --> 00:18:23,760
activity that is being

463
00:18:23,760 --> 00:18:26,720
uh utilized already by this command and

464
00:18:26,720 --> 00:18:29,360
control channel so once the agent has

465
00:18:29,360 --> 00:18:31,440
been uh created and delivering the

466
00:18:31,440 --> 00:18:32,400
payload

467
00:18:32,400 --> 00:18:35,120
through email it would be very trivial

468
00:18:35,120 --> 00:18:35,520
uh

469
00:18:35,520 --> 00:18:39,120
as the as the victim will uh

470
00:18:39,120 --> 00:18:43,840
will be sending out uh unknowingly

471
00:18:44,080 --> 00:18:46,400
that his machine or her machine is

472
00:18:46,400 --> 00:18:48,000
compromised already

473
00:18:48,000 --> 00:18:51,360
so once uh the user

474
00:18:51,360 --> 00:18:53,919
here we can see that the user actually

475
00:18:53,919 --> 00:18:55,360
um

476
00:18:55,360 --> 00:18:58,480
executed the payload and then we used uh

477
00:18:58,480 --> 00:19:01,760
in this example uh empire and starkiller

478
00:19:01,760 --> 00:19:02,880
which is uh

479
00:19:02,880 --> 00:19:05,919
from bc security and spectre ops so

480
00:19:05,919 --> 00:19:09,520
um the attacker sends communicate

481
00:19:09,520 --> 00:19:12,400
through the c2 channel using one drive

482
00:19:12,400 --> 00:19:14,559
so

483
00:19:18,000 --> 00:19:21,360
okay so so this is now um on how we

484
00:19:21,360 --> 00:19:25,200
detect uh the situ which is a common c2

485
00:19:25,200 --> 00:19:27,840
uh of onedrive again what is why

486
00:19:27,840 --> 00:19:28,559
onedrive

487
00:19:28,559 --> 00:19:31,120
wide boy attacker leverage this because

488
00:19:31,120 --> 00:19:32,240
this is

489
00:19:32,240 --> 00:19:35,760
default installed on most common windows

490
00:19:35,760 --> 00:19:39,600
um systems uh so we have here

491
00:19:39,600 --> 00:19:42,080
um well let's go to map this on miter

492
00:19:42,080 --> 00:19:44,799
framework so we have here t1059

493
00:19:44,799 --> 00:19:48,080
so we call it technique id and t159

494
00:19:48,080 --> 00:19:51,360
is related to a tactic called execution

495
00:19:51,360 --> 00:19:53,919
and the technique is specifically called

496
00:19:53,919 --> 00:19:54,559
being a

497
00:19:54,559 --> 00:19:58,000
command scripting interpreter which is

498
00:19:58,000 --> 00:20:00,960
powershell so this is the technique when

499
00:20:00,960 --> 00:20:01,919
an attacker

500
00:20:01,919 --> 00:20:04,080
leverages powershell to execute it can

501
00:20:04,080 --> 00:20:05,280
download can

502
00:20:05,280 --> 00:20:08,400
um upload and run executables even from

503
00:20:08,400 --> 00:20:10,080
internet without touching the disk so

504
00:20:10,080 --> 00:20:10,720
they call it

505
00:20:10,720 --> 00:20:14,320
in-memory attack um so since empire is

506
00:20:14,320 --> 00:20:15,280
also using

507
00:20:15,280 --> 00:20:18,080
a powershell uh to launch this attack so

508
00:20:18,080 --> 00:20:19,919
we can detect most of this

509
00:20:19,919 --> 00:20:22,000
initial vector through investigating

510
00:20:22,000 --> 00:20:23,360
partial events

511
00:20:23,360 --> 00:20:27,360
so enabling 4103 as an event id

512
00:20:27,360 --> 00:20:29,679
the module script blocking the

513
00:20:29,679 --> 00:20:30,960
transcript plugging

514
00:20:30,960 --> 00:20:34,240
4104 can capture those mechanisms of

515
00:20:34,240 --> 00:20:37,120
in-memory attack

516
00:20:39,280 --> 00:20:42,400
so next um so uh initially we

517
00:20:42,400 --> 00:20:44,880
said that we're using cismod uh we

518
00:20:44,880 --> 00:20:46,080
really like cesman

519
00:20:46,080 --> 00:20:49,440
because it detects so much and uh

520
00:20:49,440 --> 00:20:53,039
it's also customizable uh so after we

521
00:20:53,039 --> 00:20:55,120
attack or after we perform the one drive

522
00:20:55,120 --> 00:20:56,000
co2 using

523
00:20:56,000 --> 00:20:59,120
empire we have here detections where in

524
00:20:59,120 --> 00:21:02,320
we have an event id3 which is a network

525
00:21:02,320 --> 00:21:03,120
connection

526
00:21:03,120 --> 00:21:05,200
so as you can see here that the power

527
00:21:05,200 --> 00:21:06,559
shell has

528
00:21:06,559 --> 00:21:08,240
an internet connections or network

529
00:21:08,240 --> 00:21:11,120
connectivity towards those specific ib

530
00:21:11,120 --> 00:21:13,360
so this ip is actually from azure so

531
00:21:13,360 --> 00:21:15,520
this is an external ip that we are using

532
00:21:15,520 --> 00:21:18,640
which we host our um kali linux which is

533
00:21:18,640 --> 00:21:19,679
the attacker's

534
00:21:19,679 --> 00:21:23,520
vm uh in azure cloud

535
00:21:23,520 --> 00:21:25,440
so checking the destination ip would be

536
00:21:25,440 --> 00:21:27,280
beneficial for you when you're detecting

537
00:21:27,280 --> 00:21:28,720
this kind of attack

538
00:21:28,720 --> 00:21:32,000
um so check it into into your thread

539
00:21:32,000 --> 00:21:33,280
intel feeds if

540
00:21:33,280 --> 00:21:36,080
there's a matches and if there's any

541
00:21:36,080 --> 00:21:37,440
reports that has been

542
00:21:37,440 --> 00:21:41,520
um submitted to that id

543
00:21:43,039 --> 00:21:46,480
and also event code 22 we love detecting

544
00:21:46,480 --> 00:21:47,120
dns

545
00:21:47,120 --> 00:21:50,480
especially when performing hunting so uh

546
00:21:50,480 --> 00:21:53,520
when we go to empire and the one drive

547
00:21:53,520 --> 00:21:55,520
the pui which is the python script for

548
00:21:55,520 --> 00:21:57,600
the onedrive module

549
00:21:57,600 --> 00:22:00,080
as a c2 channel for empire you can see

550
00:22:00,080 --> 00:22:01,440
on the code that they leverage

551
00:22:01,440 --> 00:22:02,559
powershell

552
00:22:02,559 --> 00:22:05,039
and they also have the stage url which

553
00:22:05,039 --> 00:22:06,400
is their stager

554
00:22:06,400 --> 00:22:09,679
so if this stager has been executed

555
00:22:09,679 --> 00:22:13,280
and then connect backs to the c2 server

556
00:22:13,280 --> 00:22:15,360
that the attacker has then we can see

557
00:22:15,360 --> 00:22:18,159
that it connects to the different api

558
00:22:18,159 --> 00:22:18,880
calls

559
00:22:18,880 --> 00:22:22,960
um and the api um dns query is related

560
00:22:22,960 --> 00:22:25,200
to onedrive so we have here public

561
00:22:25,200 --> 00:22:28,039
dot dm files onedrive.com

562
00:22:28,039 --> 00:22:29,200
api.onedrive.com

563
00:22:29,200 --> 00:22:32,400
etc etc

564
00:22:35,840 --> 00:22:38,880
okay so um event code one

565
00:22:38,880 --> 00:22:41,360
uh this is uh related to process

566
00:22:41,360 --> 00:22:43,520
execution or process creation

567
00:22:43,520 --> 00:22:46,000
um so if you don't have sysmon then

568
00:22:46,000 --> 00:22:48,400
you're familiar with event id 4688

569
00:22:48,400 --> 00:22:48,960
talking

570
00:22:48,960 --> 00:22:51,760
into a windows event logs language uh

571
00:22:51,760 --> 00:22:54,240
this is the same thing on this one

572
00:22:54,240 --> 00:22:56,400
we can see here the powershell

573
00:22:56,400 --> 00:22:58,240
executions that has um

574
00:22:58,240 --> 00:23:00,480
command line parameters that commonly

575
00:23:00,480 --> 00:23:01,840
used by the attacker

576
00:23:01,840 --> 00:23:05,440
we have nop which means no profile

577
00:23:05,440 --> 00:23:09,600
we have dash sta w window style hidden

578
00:23:09,600 --> 00:23:11,760
dash enc which is really an interesting

579
00:23:11,760 --> 00:23:13,440
thing because they try to

580
00:23:13,440 --> 00:23:15,840
encode uh their commands as part of

581
00:23:15,840 --> 00:23:16,880
their obfuscation

582
00:23:16,880 --> 00:23:18,640
so if you see like a bunch of basic

583
00:23:18,640 --> 00:23:20,320
stafford strings on a

584
00:23:20,320 --> 00:23:23,039
compared command line parameter uh with

585
00:23:23,039 --> 00:23:24,559
the dash enc

586
00:23:24,559 --> 00:23:26,320
then that needs to be investigated

587
00:23:26,320 --> 00:23:28,000
further from the defender

588
00:23:28,000 --> 00:23:30,960
folks out there and uh looking at the

589
00:23:30,960 --> 00:23:31,600
code

590
00:23:31,600 --> 00:23:33,760
specifically for the empire with this

591
00:23:33,760 --> 00:23:35,120
one drive channel

592
00:23:35,120 --> 00:23:37,760
you can see that the default launcher um

593
00:23:37,760 --> 00:23:39,120
has a value of

594
00:23:39,120 --> 00:23:42,240
this this um command parameters so

595
00:23:42,240 --> 00:23:45,760
if you see on my query on my splunk um

596
00:23:45,760 --> 00:23:47,840
on my splunk instance i have here the

597
00:23:47,840 --> 00:23:49,200
parent command line with

598
00:23:49,200 --> 00:23:53,840
enc so that's how we detect it

599
00:23:54,159 --> 00:23:57,360
talking on the host artifacts oops

600
00:23:57,360 --> 00:24:01,600
sorry uh can you go up again here

601
00:24:01,679 --> 00:24:04,480
so that is the equivalent of the

602
00:24:04,480 --> 00:24:06,559
powershell events so when we go to the

603
00:24:06,559 --> 00:24:08,240
windows event lags that we have

604
00:24:08,240 --> 00:24:11,360
if we open up uh the transcript blocking

605
00:24:11,360 --> 00:24:13,120
um especially if you're using powershell

606
00:24:13,120 --> 00:24:15,760
v5 that gives you so much visibility of

607
00:24:15,760 --> 00:24:16,799
what's happening

608
00:24:16,799 --> 00:24:18,640
using the powershell so you can see

609
00:24:18,640 --> 00:24:21,520
there that this is an event id 4103

610
00:24:21,520 --> 00:24:25,200
which is a module uh logging capability

611
00:24:25,200 --> 00:24:30,000
and this is heavily used as well by

612
00:24:30,840 --> 00:24:32,240
empire

613
00:24:32,240 --> 00:24:35,200
okay so what we're talking recently is

614
00:24:35,200 --> 00:24:36,400
the beaconing

615
00:24:36,400 --> 00:24:39,039
so if you if you notice something here

616
00:24:39,039 --> 00:24:40,960
there is like a strange

617
00:24:40,960 --> 00:24:44,559
um pattern of how

618
00:24:44,559 --> 00:24:46,960
the implants or the stager checks into

619
00:24:46,960 --> 00:24:48,080
the situ server

620
00:24:48,080 --> 00:24:50,960
so this is actually another dilemma of a

621
00:24:50,960 --> 00:24:51,840
defender

622
00:24:51,840 --> 00:24:54,799
because finding the malicious beaconing

623
00:24:54,799 --> 00:24:56,480
traffic

624
00:24:56,480 --> 00:24:58,320
performance performed by the different

625
00:24:58,320 --> 00:24:59,919
attackers are really really hard

626
00:24:59,919 --> 00:25:01,520
especially if you are

627
00:25:01,520 --> 00:25:04,080
um if you are monitoring a lot of

628
00:25:04,080 --> 00:25:06,080
endpoints like we're talking about here

629
00:25:06,080 --> 00:25:08,240
10 000 20 000 endpoints

630
00:25:08,240 --> 00:25:10,559
how can you make sure that you are also

631
00:25:10,559 --> 00:25:11,600
monitoring

632
00:25:11,600 --> 00:25:14,400
uh the beaconing of those beaconing

633
00:25:14,400 --> 00:25:16,720
traffic

634
00:25:18,080 --> 00:25:20,880
so this is the pattern that i'm telling

635
00:25:20,880 --> 00:25:23,440
you um every two hours

636
00:25:23,440 --> 00:25:26,159
as part of being stealthy of apt and

637
00:25:26,159 --> 00:25:28,159
different attackers group adversaries

638
00:25:28,159 --> 00:25:28,799
groups

639
00:25:28,799 --> 00:25:33,120
uh they they tend to not be more greedy

640
00:25:33,120 --> 00:25:35,679
like um if i'm attacker i'm going to

641
00:25:35,679 --> 00:25:36,240
push

642
00:25:36,240 --> 00:25:38,320
like a one gig of data in just 15

643
00:25:38,320 --> 00:25:40,400
minutes so that could be a red flag for

644
00:25:40,400 --> 00:25:42,000
a normal stock environment but if we

645
00:25:42,000 --> 00:25:43,919
make it like every two hours and then

646
00:25:43,919 --> 00:25:45,120
just a couple of

647
00:25:45,120 --> 00:25:48,000
um megabytes of files that we try to

648
00:25:48,000 --> 00:25:48,720
exfiltrate

649
00:25:48,720 --> 00:25:52,559
then that could be hard to detect so um

650
00:25:52,559 --> 00:25:54,799
we are now leveraging here the zig logs

651
00:25:54,799 --> 00:25:55,679
which is

652
00:25:55,679 --> 00:25:58,000
really powerful when we are performing a

653
00:25:58,000 --> 00:25:59,679
network security monitoring

654
00:25:59,679 --> 00:26:02,000
so as you can see on the left side on

655
00:26:02,000 --> 00:26:02,799
the timing

656
00:26:02,799 --> 00:26:05,440
so every two hours there is a checking

657
00:26:05,440 --> 00:26:06,240
checking in

658
00:26:06,240 --> 00:26:09,600
interval of uh the c2 the attacker to

659
00:26:09,600 --> 00:26:11,520
the compromise mission

660
00:26:11,520 --> 00:26:13,919
and uh you can see here the transaction

661
00:26:13,919 --> 00:26:15,440
id is the same

662
00:26:15,440 --> 00:26:20,799
um on the uh depending on the time

663
00:26:22,880 --> 00:26:24,960
okay so this one is also interesting

664
00:26:24,960 --> 00:26:26,480
because we're talking about network

665
00:26:26,480 --> 00:26:29,360
forensics which was leveraged by ga3 so

666
00:26:29,360 --> 00:26:30,720
shout out to

667
00:26:30,720 --> 00:26:33,600
uh salesforce who created this kind of

668
00:26:33,600 --> 00:26:34,720
um

669
00:26:34,720 --> 00:26:37,919
a very good framework um so j3 is

670
00:26:37,919 --> 00:26:40,400
basically the concept of of getting all

671
00:26:40,400 --> 00:26:41,039
the

672
00:26:41,039 --> 00:26:44,080
uh cryptographic exchanges and hashing

673
00:26:44,080 --> 00:26:44,559
it so

674
00:26:44,559 --> 00:26:47,440
if we if you know about hashing uh or

675
00:26:47,440 --> 00:26:49,840
some of the files like md5 show one

676
00:26:49,840 --> 00:26:51,120
channel two five six so this is

677
00:26:51,120 --> 00:26:52,320
basically the

678
00:26:52,320 --> 00:26:54,080
uh the comparison of that into the

679
00:26:54,080 --> 00:26:55,919
network level so

680
00:26:55,919 --> 00:26:59,760
uh what j3 does is um

681
00:26:59,760 --> 00:27:02,720
it is uh yeah it just has all those

682
00:27:02,720 --> 00:27:03,600
values

683
00:27:03,600 --> 00:27:06,960
uh from the ssl fields such as tls

684
00:27:06,960 --> 00:27:08,320
version cipher

685
00:27:08,320 --> 00:27:11,840
extensions and cache it into md5

686
00:27:11,840 --> 00:27:13,600
and then make a fingerprint of it and

687
00:27:13,600 --> 00:27:16,400
then there are like 13 000 15 000

688
00:27:16,400 --> 00:27:19,279
or more out there that you can check if

689
00:27:19,279 --> 00:27:21,919
that fingerprint is malicious or if that

690
00:27:21,919 --> 00:27:23,679
fingerprint is just a normal activity

691
00:27:23,679 --> 00:27:24,720
from your environment

692
00:27:24,720 --> 00:27:27,760
so when i check um the j83 capability

693
00:27:27,760 --> 00:27:30,320
of uh the the bro or the zig that we

694
00:27:30,320 --> 00:27:31,679
have in our lab

695
00:27:31,679 --> 00:27:34,480
um i've noticed that the third one is

696
00:27:34,480 --> 00:27:36,480
actually pertaining to the powershell

697
00:27:36,480 --> 00:27:39,679
so if you go to j83year.com and

698
00:27:39,679 --> 00:27:41,840
slash form if you check that there will

699
00:27:41,840 --> 00:27:43,120
be a comment that this is

700
00:27:43,120 --> 00:27:46,159
actually a powershell so this is like um

701
00:27:46,159 --> 00:27:48,640
an empire connecting to its uh

702
00:27:48,640 --> 00:27:49,760
compromise machine

703
00:27:49,760 --> 00:27:52,640
through powershell

704
00:27:54,960 --> 00:27:58,799
so uh we also have uh khalido situ

705
00:27:58,799 --> 00:28:01,200
which was developed by uh tehran salva

706
00:28:01,200 --> 00:28:03,279
this one is a really interesting uh

707
00:28:03,279 --> 00:28:04,880
command and control channel

708
00:28:04,880 --> 00:28:08,480
and uh as i may say it's a modern type

709
00:28:08,480 --> 00:28:10,320
of c2 channel where

710
00:28:10,320 --> 00:28:13,760
it leverages microsoft gap graph as

711
00:28:13,760 --> 00:28:17,440
its gateway to actually uh

712
00:28:17,440 --> 00:28:22,000
issue out its communication so

713
00:28:22,080 --> 00:28:24,640
the way an attacker or a threat after

714
00:28:24,640 --> 00:28:25,760
can actually uh

715
00:28:25,760 --> 00:28:28,799
create this is uh as a red teamer you

716
00:28:28,799 --> 00:28:30,159
can also create this

717
00:28:30,159 --> 00:28:33,120
by registering an application on azure

718
00:28:33,120 --> 00:28:35,600
and setting up the proper permissions

719
00:28:35,600 --> 00:28:39,200
which is uh for microsoft graph api

720
00:28:39,200 --> 00:28:44,080
so here we has just set an example on uh

721
00:28:44,080 --> 00:28:47,039
basically a simple uh command and

722
00:28:47,039 --> 00:28:47,919
control channel

723
00:28:47,919 --> 00:28:51,679
utilizing uh and using kali to c2 so for

724
00:28:51,679 --> 00:28:56,159
as of the moment uh khalidou c2 supports

725
00:28:56,159 --> 00:28:59,360
onenote outlook and team c2

726
00:28:59,360 --> 00:29:01,919
so you can see on the screenshot on the

727
00:29:01,919 --> 00:29:02,640
left is

728
00:29:02,640 --> 00:29:04,799
that we have an outlook command and

729
00:29:04,799 --> 00:29:06,080
control channel

730
00:29:06,080 --> 00:29:09,200
where in uh the folder uh

731
00:29:09,200 --> 00:29:13,120
c2 is being used as a c2 channel

732
00:29:13,120 --> 00:29:15,360
so a more clarity in this video

733
00:29:15,360 --> 00:29:17,760
demonstration as well wherein we have on

734
00:29:17,760 --> 00:29:19,679
the left part is the victim which is the

735
00:29:19,679 --> 00:29:21,039
windows machine

736
00:29:21,039 --> 00:29:23,840
and attacker c2 you can see here that we

737
00:29:23,840 --> 00:29:25,919
issue out the hostname command and then

738
00:29:25,919 --> 00:29:26,679
uh

739
00:29:26,679 --> 00:29:30,159
momentarily there's uh some uh

740
00:29:30,159 --> 00:29:34,480
inputs on the c2 folder wherein um

741
00:29:34,480 --> 00:29:37,520
it is being transported by uh or

742
00:29:37,520 --> 00:29:38,640
transmitted by

743
00:29:38,640 --> 00:29:42,880
the khalidou c2 uh outlook client as

744
00:29:42,880 --> 00:29:47,440
uh that exe so in order for uh

745
00:29:47,440 --> 00:29:49,760
the communication to happen is it

746
00:29:49,760 --> 00:29:50,960
leverages the

747
00:29:50,960 --> 00:29:55,840
microsoft grub api

748
00:29:58,559 --> 00:30:02,399
so here we can see uh we just uh

749
00:30:02,399 --> 00:30:05,679
added another user and uh just a proof

750
00:30:05,679 --> 00:30:06,480
of concept

751
00:30:06,480 --> 00:30:10,159
to demonstrate that our execution is

752
00:30:10,159 --> 00:30:13,440
actually going through not just uh

753
00:30:13,440 --> 00:30:23,840
by reading out its input and output

754
00:30:30,480 --> 00:30:33,039
and uh talking about the detections of

755
00:30:33,039 --> 00:30:34,799
what ian has just presented

756
00:30:34,799 --> 00:30:37,840
is to check checking as well the dns

757
00:30:37,840 --> 00:30:41,679
um of the dns logs that you have

758
00:30:41,679 --> 00:30:45,120
and the or the dns traffic so as he just

759
00:30:45,120 --> 00:30:49,720
said that um this one is leveraging

760
00:30:49,720 --> 00:30:51,200
graphmicrosoft.com

761
00:30:51,200 --> 00:30:53,840
uh which is the gateway of uh the data

762
00:30:53,840 --> 00:30:55,360
and the intelligence in the microsoft

763
00:30:55,360 --> 00:30:58,240
o365 environment so if there's any dns

764
00:30:58,240 --> 00:30:59,120
queries

765
00:30:59,120 --> 00:31:02,960
getting into that um domain would be uh

766
00:31:02,960 --> 00:31:06,720
be an uh a pointer of for your uh

767
00:31:06,720 --> 00:31:10,080
investigations in the future

768
00:31:10,720 --> 00:31:13,039
next is uh if you have like an unsigned

769
00:31:13,039 --> 00:31:14,720
binaries and then performing such

770
00:31:14,720 --> 00:31:15,679
commands

771
00:31:15,679 --> 00:31:18,799
uh like ipconfig who am i uh

772
00:31:18,799 --> 00:31:21,440
and also adding a user using a net use

773
00:31:21,440 --> 00:31:23,039
that would be highly suspicious from the

774
00:31:23,039 --> 00:31:24,159
detection standpoint

775
00:31:24,159 --> 00:31:25,919
so if i'm going to make like a detection

776
00:31:25,919 --> 00:31:27,519
query of this is that

777
00:31:27,519 --> 00:31:30,080
um if there's like a weird binaries like

778
00:31:30,080 --> 00:31:32,559
an unsigned which are um

779
00:31:32,559 --> 00:31:35,279
we have here in this example down here

780
00:31:35,279 --> 00:31:35,600
like

781
00:31:35,600 --> 00:31:39,200
outlook to client.exe um

782
00:31:39,200 --> 00:31:41,840
what else yeah that's it and having a

783
00:31:41,840 --> 00:31:43,600
command line parameters of this

784
00:31:43,600 --> 00:31:46,399
this could be a highly um value findings

785
00:31:46,399 --> 00:31:46,880
from

786
00:31:46,880 --> 00:31:50,960
the text detecting perspective

787
00:31:52,240 --> 00:31:55,360
so um just to add to those statements

788
00:31:55,360 --> 00:31:58,559
by uh renzon is uh where

789
00:31:58,559 --> 00:32:01,039
in environments actually leverage the

790
00:32:01,039 --> 00:32:01,840
use of

791
00:32:01,840 --> 00:32:06,159
office 365 outlook um

792
00:32:06,159 --> 00:32:09,760
using kylie c2 or using the graph api as

793
00:32:09,760 --> 00:32:11,679
a command control channel can be

794
00:32:11,679 --> 00:32:14,720
uh difficult to uh detect if

795
00:32:14,720 --> 00:32:17,840
it blends in uh or uh

796
00:32:17,840 --> 00:32:20,559
conducts uh some process injections as

797
00:32:20,559 --> 00:32:21,360
well

798
00:32:21,360 --> 00:32:25,279
so uh that's it for the traditional and

799
00:32:25,279 --> 00:32:27,360
uh modern c2s that

800
00:32:27,360 --> 00:32:30,320
we uh actually uh have seen so uh this

801
00:32:30,320 --> 00:32:31,840
one is our uh

802
00:32:31,840 --> 00:32:35,519
introduction to c3 so c3 is made by f

803
00:32:35,519 --> 00:32:36,159
secure

804
00:32:36,159 --> 00:32:39,360
and mwr labs so credits to these guys

805
00:32:39,360 --> 00:32:39,679
for

806
00:32:39,679 --> 00:32:43,279
actually uh creating this uh great tool

807
00:32:43,279 --> 00:32:44,240
that can help

808
00:32:44,240 --> 00:32:47,360
uh rent teams and blue teams

809
00:32:47,360 --> 00:32:50,399
uh perform uh simulation exercises

810
00:32:50,399 --> 00:32:54,080
in order to uh effectively create

811
00:32:54,080 --> 00:32:56,399
detection engineering strategies and

812
00:32:56,399 --> 00:32:58,159
improve the security posture of the

813
00:32:58,159 --> 00:32:59,440
organization

814
00:32:59,440 --> 00:33:02,960
maybe to check of uh which data sets are

815
00:33:02,960 --> 00:33:04,960
actually reporting and uh

816
00:33:04,960 --> 00:33:08,159
to simulate if uh these channels

817
00:33:08,159 --> 00:33:10,399
being used by threat actors can be

818
00:33:10,399 --> 00:33:12,480
detected on their environment

819
00:33:12,480 --> 00:33:15,840
so c3 started as an external c2

820
00:33:15,840 --> 00:33:17,279
implementation

821
00:33:17,279 --> 00:33:21,200
um it actually uh leverages uh

822
00:33:21,200 --> 00:33:24,399
it actually uh acts as a gateway wherein

823
00:33:24,399 --> 00:33:26,799
you can actually uh

824
00:33:26,799 --> 00:33:30,000
extend the red team tooling into a

825
00:33:30,000 --> 00:33:34,320
cobalt strike and covenant so

826
00:33:34,559 --> 00:33:37,679
this framework allows for red teams to

827
00:33:37,679 --> 00:33:39,360
develop their custom

828
00:33:39,360 --> 00:33:42,960
command and control channels quite

829
00:33:42,960 --> 00:33:46,399
easily and

830
00:33:46,399 --> 00:33:49,200
can be used in order for detection as

831
00:33:49,200 --> 00:33:49,840
well

832
00:33:49,840 --> 00:33:52,960
so we have here uh

833
00:33:52,960 --> 00:33:56,159
a diagram on how this works so um

834
00:33:56,159 --> 00:33:58,480
the attacker uses these channels and

835
00:33:58,480 --> 00:34:00,320
then uh it

836
00:34:00,320 --> 00:34:04,000
c3 acts as a gateway wherein um

837
00:34:04,000 --> 00:34:06,480
the gateway actually connects uh to the

838
00:34:06,480 --> 00:34:08,239
main node which allows the other

839
00:34:08,239 --> 00:34:11,040
infrastructure around it such as a c2

840
00:34:11,040 --> 00:34:14,000
so the components are are here so we

841
00:34:14,000 --> 00:34:15,359
have a connector

842
00:34:15,359 --> 00:34:17,679
the connector is the connection between

843
00:34:17,679 --> 00:34:20,159
gateway and the c2 framework

844
00:34:20,159 --> 00:34:23,679
this one these components of c3 is much

845
00:34:23,679 --> 00:34:24,480
more clearer

846
00:34:24,480 --> 00:34:28,320
in uh the demonstration later um

847
00:34:28,320 --> 00:34:31,040
so we also have the channel which is a

848
00:34:31,040 --> 00:34:32,560
communication medium

849
00:34:32,560 --> 00:34:35,839
by default we can use slack or unc

850
00:34:35,839 --> 00:34:39,440
share one drive we can also optimize

851
00:34:39,440 --> 00:34:42,879
uh the use of g drive and dropbox as

852
00:34:42,879 --> 00:34:43,599
well

853
00:34:43,599 --> 00:34:47,520
so the channels are

854
00:34:47,520 --> 00:34:51,520
developed by uh contributors also

855
00:34:51,520 --> 00:34:54,639
and um there are out of the box channels

856
00:34:54,639 --> 00:34:57,440
uh that we have used uh in order for

857
00:34:57,440 --> 00:34:59,440
this uh presentation as well

858
00:34:59,440 --> 00:35:02,960
so relay this is the payload of the c3

859
00:35:02,960 --> 00:35:06,560
so uh the the relay is an executable or

860
00:35:06,560 --> 00:35:09,440
a shell code that uh if executed to the

861
00:35:09,440 --> 00:35:11,440
victim it will connect to the gateway

862
00:35:11,440 --> 00:35:11,920
and then

863
00:35:11,920 --> 00:35:15,119
uh you can set up a relay

864
00:35:15,119 --> 00:35:18,079
in order for you to execute commands or

865
00:35:18,079 --> 00:35:18,880
perform the

866
00:35:18,880 --> 00:35:22,000
data exfiltration

867
00:35:22,160 --> 00:35:25,280
so uh we have uh

868
00:35:25,280 --> 00:35:27,440
the c3 extensions as well we have

869
00:35:27,440 --> 00:35:29,920
channel interface and implant interface

870
00:35:29,920 --> 00:35:30,480
so

871
00:35:30,480 --> 00:35:34,480
this basically just uh implies that

872
00:35:34,480 --> 00:35:38,079
uh you can actually use uh one channel

873
00:35:38,079 --> 00:35:40,800
for input and one channel for output

874
00:35:40,800 --> 00:35:43,200
that that's what they describe this

875
00:35:43,200 --> 00:35:44,640
framework as modular

876
00:35:44,640 --> 00:35:47,839
is because you can actually

877
00:35:47,839 --> 00:35:51,200
um i might say that the limitation

878
00:35:51,200 --> 00:35:55,040
is uh there is not

879
00:35:55,040 --> 00:35:59,599
no really limitation on the um

880
00:35:59,599 --> 00:36:02,960
on the path that you can create here

881
00:36:02,960 --> 00:36:05,520
because uh it's really extensive and

882
00:36:05,520 --> 00:36:06,560
modular

883
00:36:06,560 --> 00:36:09,680
so we have here an example of a c3

884
00:36:09,680 --> 00:36:11,440
channel optimizing slab

885
00:36:11,440 --> 00:36:14,960
so um why slack so organizations are

886
00:36:14,960 --> 00:36:17,520
using slap for their collaboration

887
00:36:17,520 --> 00:36:21,359
so uh this is uh oftenly seen that

888
00:36:21,359 --> 00:36:25,119
um apt groups has actually used

889
00:36:25,119 --> 00:36:28,240
this one so uh we have the default c2

890
00:36:28,240 --> 00:36:29,119
channel or

891
00:36:29,119 --> 00:36:32,240
the previous the c2 channels developed

892
00:36:32,240 --> 00:36:35,440
such as slack or slack situ bot and

893
00:36:35,440 --> 00:36:36,480
slack shell

894
00:36:36,480 --> 00:36:40,400
so these ones are uh

895
00:36:40,400 --> 00:36:43,200
used uh as a standalone framework

896
00:36:43,200 --> 00:36:43,839
wherein

897
00:36:43,839 --> 00:36:47,520
c3 actually has its own uh slack channel

898
00:36:47,520 --> 00:36:48,320
wherein

899
00:36:48,320 --> 00:36:52,000
you can actually uh do a lot more and uh

900
00:36:52,000 --> 00:36:55,040
integrate it with covenant and cobalt

901
00:36:55,040 --> 00:36:55,680
strike or

902
00:36:55,680 --> 00:36:58,960
other c2 tools as well so

903
00:36:58,960 --> 00:37:03,599
um what we have here is a legitimate

904
00:37:03,599 --> 00:37:04,560
application that

905
00:37:04,560 --> 00:37:08,240
will try to blend in on the traffic of

906
00:37:08,240 --> 00:37:09,280
the environment

907
00:37:09,280 --> 00:37:11,599
and uh there is little risk that uh

908
00:37:11,599 --> 00:37:13,119
endpoint solutions

909
00:37:13,119 --> 00:37:15,440
or antivirus solutions can detect the

910
00:37:15,440 --> 00:37:18,079
infiltration of malicious code in the

911
00:37:18,079 --> 00:37:21,280
legitimate application it uses uh as

912
00:37:21,280 --> 00:37:21,680
well

913
00:37:21,680 --> 00:37:24,720
api calls

914
00:37:24,800 --> 00:37:27,359
so here is just an example of the

915
00:37:27,359 --> 00:37:28,800
traditional

916
00:37:28,800 --> 00:37:31,760
execution of a c2 we're in a win

917
00:37:31,760 --> 00:37:34,960
underscore slab underscore implant.exe

918
00:37:34,960 --> 00:37:38,960
so um it's from uh slacker i think

919
00:37:38,960 --> 00:37:41,599
so uh running who am i using slap

920
00:37:41,599 --> 00:37:43,680
against the channel it actually execute

921
00:37:43,680 --> 00:37:44,480
the code

922
00:37:44,480 --> 00:37:46,960
so you can we provided also the

923
00:37:46,960 --> 00:37:48,800
reference link below for the

924
00:37:48,800 --> 00:37:52,079
uh using attack web services for miter

925
00:37:52,079 --> 00:37:53,680
as well

926
00:37:53,680 --> 00:37:57,200
so here we demonstrate on a c3 channel

927
00:37:57,200 --> 00:37:59,680
wherein we created a slap negotiation

928
00:37:59,680 --> 00:38:00,960
channel and then

929
00:38:00,960 --> 00:38:04,800
on the left part we have a slap

930
00:38:04,800 --> 00:38:08,960
channel open so we have created here

931
00:38:08,960 --> 00:38:12,240
a relay we're in the relay

932
00:38:12,240 --> 00:38:15,280
once executed on the victim machine

933
00:38:15,280 --> 00:38:18,560
it's it will actually be connect back to

934
00:38:18,560 --> 00:38:20,320
the gateway

935
00:38:20,320 --> 00:38:23,680
so uh the requirement for this is to

936
00:38:23,680 --> 00:38:26,000
have a slack api token with the proper

937
00:38:26,000 --> 00:38:27,040
permissions

938
00:38:27,040 --> 00:38:29,359
so we didn't obfuscate the slack token

939
00:38:29,359 --> 00:38:30,240
because it's not

940
00:38:30,240 --> 00:38:33,680
active anymore so here you can see

941
00:38:33,680 --> 00:38:36,880
uh the actual execution of the exe and

942
00:38:36,880 --> 00:38:38,400
then you can see that

943
00:38:38,400 --> 00:38:41,599
um the execution is already happening

944
00:38:41,599 --> 00:38:42,000
and

945
00:38:42,000 --> 00:38:45,920
uh the slack uh channel has its uh

946
00:38:45,920 --> 00:38:47,119
gibberish uh

947
00:38:47,119 --> 00:38:50,480
inputs being uh deleted and uh

948
00:38:50,480 --> 00:38:52,480
used to actually communicate to the

949
00:38:52,480 --> 00:38:54,240
channel

950
00:38:54,240 --> 00:38:57,520
so once uh this relay and channel is

951
00:38:57,520 --> 00:38:59,359
already set up we have a full

952
00:38:59,359 --> 00:39:02,400
uh we have a way to actually integrate

953
00:39:02,400 --> 00:39:04,640
this into our command and control

954
00:39:04,640 --> 00:39:05,520
framework

955
00:39:05,520 --> 00:39:09,280
wherein uh we just have to uh select a

956
00:39:09,280 --> 00:39:11,280
feature called turn on covenant

957
00:39:11,280 --> 00:39:15,119
and uh connect to our uh covenant or c2

958
00:39:15,119 --> 00:39:16,320
infrastructure

959
00:39:16,320 --> 00:39:20,240
wherein we can actually leverage more uh

960
00:39:20,240 --> 00:39:23,280
attacks so here you can see that the api

961
00:39:23,280 --> 00:39:23,920
call from

962
00:39:23,920 --> 00:39:27,680
uh the c3 actually success and connected

963
00:39:27,680 --> 00:39:29,599
created a bridge we're in

964
00:39:29,599 --> 00:39:32,720
uh the c3 and uh our covenant command

965
00:39:32,720 --> 00:39:34,800
and control is actually integrated with

966
00:39:34,800 --> 00:39:35,760
each other

967
00:39:35,760 --> 00:39:39,040
uh after it uh we issue out another

968
00:39:39,040 --> 00:39:42,720
uh a peripheral grant we're in

969
00:39:42,720 --> 00:39:45,760
um it will send out a payload to

970
00:39:45,760 --> 00:39:48,880
the uh slack channel and then we can uh

971
00:39:48,880 --> 00:39:49,440
there

972
00:39:49,440 --> 00:39:52,079
we can now finally have a grunt or

973
00:39:52,079 --> 00:39:54,800
wherein we have successful communication

974
00:39:54,800 --> 00:39:57,119
so the purpose of showing a slab

975
00:39:57,119 --> 00:39:59,440
and covenant side by side is that you

976
00:39:59,440 --> 00:40:01,760
can actually see the live demonstration

977
00:40:01,760 --> 00:40:02,400
on

978
00:40:02,400 --> 00:40:06,240
um live execution what's happening

979
00:40:06,240 --> 00:40:09,359
so you can see that once the payload or

980
00:40:09,359 --> 00:40:09,760
uh

981
00:40:09,760 --> 00:40:13,040
the the the identifiers are

982
00:40:13,040 --> 00:40:16,240
already executed uh it will

983
00:40:16,240 --> 00:40:18,240
then go through slap and then it will

984
00:40:18,240 --> 00:40:19,920
get deleted immediately

985
00:40:19,920 --> 00:40:25,520
it's basically uh uh input and output

986
00:40:25,520 --> 00:40:28,240
so here we just issued more commands so

987
00:40:28,240 --> 00:40:29,040
that we can

988
00:40:29,040 --> 00:40:32,240
actually see uh that the slash

989
00:40:32,240 --> 00:40:35,520
c2 channel has been created and uh

990
00:40:35,520 --> 00:40:39,599
it actually inputs and outputs out

991
00:40:39,599 --> 00:40:41,760
the necessary command and instructions

992
00:40:41,760 --> 00:40:42,640
for

993
00:40:42,640 --> 00:40:45,680
command and control

994
00:40:47,760 --> 00:40:50,400
so here

995
00:40:50,880 --> 00:40:55,119
we also uh have um

996
00:40:55,119 --> 00:40:58,240
implied that uh sometimes it takes a

997
00:40:58,240 --> 00:40:59,040
while

998
00:40:59,040 --> 00:41:01,599
because you can actually set the delay

999
00:41:01,599 --> 00:41:02,800
and jitter on

1000
00:41:02,800 --> 00:41:05,359
the gateway on the relays which makes it

1001
00:41:05,359 --> 00:41:06,640
more modular

1002
00:41:06,640 --> 00:41:10,560
wherein you can actually um

1003
00:41:10,560 --> 00:41:12,960
set this type of behavior depending on

1004
00:41:12,960 --> 00:41:14,560
the environment

1005
00:41:14,560 --> 00:41:17,920
so in order for you to blend in

1006
00:41:17,920 --> 00:41:20,720
so here is just a summary of uh what has

1007
00:41:20,720 --> 00:41:22,079
happened there

1008
00:41:22,079 --> 00:41:25,440
so uh what uh on that we have

1009
00:41:25,440 --> 00:41:28,240
in this part of the diagram we actually

1010
00:41:28,240 --> 00:41:28,640
uh

1011
00:41:28,640 --> 00:41:31,760
had another uh victim connect back to

1012
00:41:31,760 --> 00:41:33,200
the gateway and uh

1013
00:41:33,200 --> 00:41:37,280
see if and observe the behavior

1014
00:41:37,280 --> 00:41:40,079
so uh later on we will actually uh

1015
00:41:40,079 --> 00:41:40,800
discuss

1016
00:41:40,800 --> 00:41:43,680
how the detection part of it works so

1017
00:41:43,680 --> 00:41:44,400
right now

1018
00:41:44,400 --> 00:41:47,839
most of these are we have uh provided

1019
00:41:47,839 --> 00:41:49,280
the evidence and

1020
00:41:49,280 --> 00:41:52,079
uh some guidance on how to detect these

1021
00:41:52,079 --> 00:41:54,640
types of activities in the environment

1022
00:41:54,640 --> 00:41:58,960
so next is we have a dropbox c2 channel

1023
00:41:58,960 --> 00:42:01,599
or c3 channel so dropbox has a rich and

1024
00:42:01,599 --> 00:42:04,160
well documented api you can actually

1025
00:42:04,160 --> 00:42:05,520
leverage it

1026
00:42:05,520 --> 00:42:07,200
for a command and control so

1027
00:42:07,200 --> 00:42:08,960
traditionally before

1028
00:42:08,960 --> 00:42:12,319
we have dropbox c2

1029
00:42:12,319 --> 00:42:15,280
which is the first uh command i think it

1030
00:42:15,280 --> 00:42:16,000
was it was

1031
00:42:16,000 --> 00:42:17,760
the first command and control for uh

1032
00:42:17,760 --> 00:42:19,520
utilizing dropbox

1033
00:42:19,520 --> 00:42:22,240
so once you have created an uh

1034
00:42:22,240 --> 00:42:24,319
application on dropbox you create an

1035
00:42:24,319 --> 00:42:27,359
api and then you can actually extend it

1036
00:42:27,359 --> 00:42:27,680
to

1037
00:42:27,680 --> 00:42:30,800
the external c2 feature of cobalt strike

1038
00:42:30,800 --> 00:42:35,040
and also on the c3 framework

1039
00:42:38,240 --> 00:42:41,040
so here is just a diagram showing the

1040
00:42:41,040 --> 00:42:42,560
overview of the process

1041
00:42:42,560 --> 00:42:45,280
so once the file has been created on the

1042
00:42:45,280 --> 00:42:46,400
dropbox and the

1043
00:42:46,400 --> 00:42:50,160
uh uuid or the unique identifier

1044
00:42:50,160 --> 00:42:54,799
it will pull dropbox and then issue out

1045
00:42:56,839 --> 00:42:59,839
commands

1046
00:43:00,720 --> 00:43:04,400
so friends can you yes this is just

1047
00:43:04,400 --> 00:43:07,839
the uh victims um victim view so me

1048
00:43:07,839 --> 00:43:10,800
actually uh this is me performing or

1049
00:43:10,800 --> 00:43:11,359
running

1050
00:43:11,359 --> 00:43:14,400
the malicious binary that was created as

1051
00:43:14,400 --> 00:43:15,440
an implant

1052
00:43:15,440 --> 00:43:18,480
from c3 and running this um

1053
00:43:18,480 --> 00:43:20,720
i can see in the task manager that it

1054
00:43:20,720 --> 00:43:21,599
runs

1055
00:43:21,599 --> 00:43:24,400
after running it on via command line it

1056
00:43:24,400 --> 00:43:26,480
also connects back to

1057
00:43:26,480 --> 00:43:28,480
an external ip checking on the network

1058
00:43:28,480 --> 00:43:30,560
summary uh i've also opened up the

1059
00:43:30,560 --> 00:43:32,240
process monitor before running it so i

1060
00:43:32,240 --> 00:43:33,040
can see

1061
00:43:33,040 --> 00:43:36,319
uh the behavior that it does once

1062
00:43:36,319 --> 00:43:41,599
running it

1063
00:43:41,599 --> 00:43:43,440
so here we have just the same

1064
00:43:43,440 --> 00:43:45,520
demonstration actually utilizing and

1065
00:43:45,520 --> 00:43:46,480
leveraging the

1066
00:43:46,480 --> 00:43:50,160
command and control uh for dropbox

1067
00:43:50,160 --> 00:43:52,839
so what we wanted to show here is that

1068
00:43:52,839 --> 00:43:54,400
uh

1069
00:43:54,400 --> 00:43:56,079
the execution for the command and

1070
00:43:56,079 --> 00:43:57,599
control channel

1071
00:43:57,599 --> 00:44:00,720
in dropbox as well

1072
00:44:05,839 --> 00:44:09,119
so once uh the dropbox channel works

1073
00:44:09,119 --> 00:44:10,720
it's basically the same

1074
00:44:10,720 --> 00:44:13,440
way uh it behaves on uh the slack

1075
00:44:13,440 --> 00:44:16,319
channel as well

1076
00:44:16,800 --> 00:44:19,920
so uh the summary of this is we actually

1077
00:44:19,920 --> 00:44:20,720
used uh

1078
00:44:20,720 --> 00:44:24,000
dropbox to exfiltrate later on we will

1079
00:44:24,000 --> 00:44:25,359
actually

1080
00:44:25,359 --> 00:44:28,000
see how it looks like on the

1081
00:44:28,000 --> 00:44:29,760
exfiltration but

1082
00:44:29,760 --> 00:44:33,160
in summary uh we have here the

1083
00:44:33,160 --> 00:44:34,480
exfiltrated

1084
00:44:34,480 --> 00:44:38,880
data wherein uh it is actually on the c2

1085
00:44:38,880 --> 00:44:43,359
on the relay uh of the dropbox

1086
00:44:44,560 --> 00:44:48,000
so um another c3 channel is the unc

1087
00:44:48,000 --> 00:44:51,440
chair so uh c3 can use unc path in order

1088
00:44:51,440 --> 00:44:53,520
to move laterally on the network so as

1089
00:44:53,520 --> 00:44:54,560
you can see in the

1090
00:44:54,560 --> 00:44:58,640
below uh we have uh this uh security

1091
00:44:58,640 --> 00:45:02,000
this identifier wherein uh c3 uses

1092
00:45:02,000 --> 00:45:05,920
it to leverage communication via unc

1093
00:45:05,920 --> 00:45:08,160
path

1094
00:45:09,839 --> 00:45:13,599
so uh using the same drop box up

1095
00:45:13,599 --> 00:45:16,400
we can create this uh c3 channel we're

1096
00:45:16,400 --> 00:45:16,839
in

1097
00:45:16,839 --> 00:45:20,560
uh this is just a summary of uh

1098
00:45:20,560 --> 00:45:22,640
the latter part uh the earlier part

1099
00:45:22,640 --> 00:45:23,760
where in the

1100
00:45:23,760 --> 00:45:26,960
uh channel actually executes to the

1101
00:45:26,960 --> 00:45:30,000
uh folder

1102
00:45:31,520 --> 00:45:34,720
so uh what we see here is that the

1103
00:45:34,720 --> 00:45:37,119
integration between uh the gateway and

1104
00:45:37,119 --> 00:45:38,720
the relay are actually

1105
00:45:38,720 --> 00:45:42,079
you can see that we already know uh the

1106
00:45:42,079 --> 00:45:43,119
computer name

1107
00:45:43,119 --> 00:45:45,280
hostname and then we can actually issue

1108
00:45:45,280 --> 00:45:47,839
out exfiltration data as well

1109
00:45:47,839 --> 00:45:50,000
so

1110
00:45:51,040 --> 00:46:00,560
let me just

1111
00:46:00,560 --> 00:46:02,400
so the next channel is the google drive

1112
00:46:02,400 --> 00:46:05,119
so uh we have here a use case on apt

1113
00:46:05,119 --> 00:46:06,880
groups actually leverage the use of

1114
00:46:06,880 --> 00:46:07,920
google drive

1115
00:46:07,920 --> 00:46:11,440
so um raw globin malware uses google

1116
00:46:11,440 --> 00:46:13,280
drive as a c2 channel

1117
00:46:13,280 --> 00:46:16,720
wherein uh you can also use it on c3 as

1118
00:46:16,720 --> 00:46:18,959
well

1119
00:46:20,079 --> 00:46:23,040
so we have here a creation of the uh one

1120
00:46:23,040 --> 00:46:24,160
google drive

1121
00:46:24,160 --> 00:46:26,960
so uh the same approach we're in uh we

1122
00:46:26,960 --> 00:46:28,560
just need the client id

1123
00:46:28,560 --> 00:46:32,160
secret and refresh token so after

1124
00:46:32,160 --> 00:46:35,920
uh these has been filled out

1125
00:46:35,920 --> 00:46:38,560
c3 actually creates a channel for us to

1126
00:46:38,560 --> 00:46:39,280
use

1127
00:46:39,280 --> 00:46:42,720
so um

1128
00:46:42,720 --> 00:46:45,200
once the execution happens it will then

1129
00:46:45,200 --> 00:46:46,319
uh have us

1130
00:46:46,319 --> 00:46:49,920
the same uh c2 channel uh

1131
00:46:49,920 --> 00:46:52,000
actually integrated into the c3

1132
00:46:52,000 --> 00:46:54,839
framework wherein you can provide more

1133
00:46:54,839 --> 00:46:57,839
flexibility

1134
00:46:58,240 --> 00:47:00,319
so this is uh the victim where we

1135
00:47:00,319 --> 00:47:01,599
perform

1136
00:47:01,599 --> 00:47:03,839
or where we run the implant of the

1137
00:47:03,839 --> 00:47:06,160
google drive coming from the c3

1138
00:47:06,160 --> 00:47:10,000
so as as the same example before so

1139
00:47:10,000 --> 00:47:12,319
this is just the task manager and also

1140
00:47:12,319 --> 00:47:14,079
enable the process monitor

1141
00:47:14,079 --> 00:47:15,599
uh while running it so we can see the

1142
00:47:15,599 --> 00:47:24,480
behaviors of that

1143
00:47:24,480 --> 00:47:26,800
and this is just the attacker's view

1144
00:47:26,800 --> 00:47:28,960
where in ian is performing

1145
00:47:28,960 --> 00:47:32,160
a google drive um channel custom and

1146
00:47:32,160 --> 00:47:34,400
commander control channel via c3

1147
00:47:34,400 --> 00:47:39,839
and also covenant

1148
00:47:40,559 --> 00:47:43,520
and um here we are now talking about

1149
00:47:43,520 --> 00:47:44,480
detections

1150
00:47:44,480 --> 00:47:47,520
so detections um when it comes to

1151
00:47:47,520 --> 00:47:49,760
network tracing connections that is kind

1152
00:47:49,760 --> 00:47:51,920
of weird especially from those unsigned

1153
00:47:51,920 --> 00:47:52,960
binaries again

1154
00:47:52,960 --> 00:47:55,040
so here i have your splunk query of

1155
00:47:55,040 --> 00:47:56,720
cismo event id3

1156
00:47:56,720 --> 00:48:00,079
wherein i have a binary that connects to

1157
00:48:00,079 --> 00:48:03,839
our azure which is our attackers

1158
00:48:04,839 --> 00:48:06,000
ip

1159
00:48:06,000 --> 00:48:09,040
uh also a dns query so if you have like

1160
00:48:09,040 --> 00:48:11,280
an assigned binaries that performs

1161
00:48:11,280 --> 00:48:15,119
a weird dns query going or towards to

1162
00:48:15,119 --> 00:48:16,240
your

1163
00:48:16,240 --> 00:48:20,160
normal um normal channel or a normal uh

1164
00:48:20,160 --> 00:48:21,920
web applications that you are using in

1165
00:48:21,920 --> 00:48:23,359
your enterprise so that could be highly

1166
00:48:23,359 --> 00:48:24,559
suspicious as well

1167
00:48:24,559 --> 00:48:26,400
so you can also detect that via event

1168
00:48:26,400 --> 00:48:28,880
code 22 from sysmon

1169
00:48:28,880 --> 00:48:32,559
next okay so this

1170
00:48:32,559 --> 00:48:35,680
is actually a normal slack

1171
00:48:35,680 --> 00:48:38,640
um slack network traffic but again check

1172
00:48:38,640 --> 00:48:39,520
the source

1173
00:48:39,520 --> 00:48:41,520
connecting to this one that would help

1174
00:48:41,520 --> 00:48:43,119
the stock professionals

1175
00:48:43,119 --> 00:48:46,559
or the defenders um that uh to them

1176
00:48:46,559 --> 00:48:49,680
to check uh what are the uh deviations

1177
00:48:49,680 --> 00:48:50,319
of that

1178
00:48:50,319 --> 00:48:52,640
and also one thing about this stuff is

1179
00:48:52,640 --> 00:48:54,319
to uh make sure that

1180
00:48:54,319 --> 00:48:56,960
you can also enable the etw so what is

1181
00:48:56,960 --> 00:48:59,680
etw this is the event tracing on windows

1182
00:48:59,680 --> 00:49:02,079
so this is really an efficient kernel

1183
00:49:02,079 --> 00:49:02,720
level

1184
00:49:02,720 --> 00:49:05,839
tracing facility that lets you unlock

1185
00:49:05,839 --> 00:49:08,000
the kernel or even the application

1186
00:49:08,000 --> 00:49:10,319
defined event to a log file

1187
00:49:10,319 --> 00:49:13,119
but again remember that enabling etw is

1188
00:49:13,119 --> 00:49:14,079
too noisy

1189
00:49:14,079 --> 00:49:16,480
so it is commonly used for debugging an

1190
00:49:16,480 --> 00:49:17,440
application

1191
00:49:17,440 --> 00:49:19,599
so this one is more of a post

1192
00:49:19,599 --> 00:49:21,200
exploitation wherein

1193
00:49:21,200 --> 00:49:24,480
uh the victim machine has executed

1194
00:49:24,480 --> 00:49:27,280
the unsigned binaries from the c3 and

1195
00:49:27,280 --> 00:49:29,520
then performing a weird process command

1196
00:49:29,520 --> 00:49:31,359
line parameters such as who am i

1197
00:49:31,359 --> 00:49:34,640
adding a net user ipconfig all and those

1198
00:49:34,640 --> 00:49:35,040
things

1199
00:49:35,040 --> 00:49:36,880
so mapping into the miter framework

1200
00:49:36,880 --> 00:49:38,559
that's going to be a t1

1201
00:49:38,559 --> 00:49:42,160
0 33 and event id 22 is

1202
00:49:42,160 --> 00:49:44,400
talking about dns query again so if

1203
00:49:44,400 --> 00:49:46,400
you're if that source ip is

1204
00:49:46,400 --> 00:49:49,440
not really needs to connect to some api

1205
00:49:49,440 --> 00:49:51,599
calls from the dropbox or from twitter

1206
00:49:51,599 --> 00:49:53,359
gmail office 365

1207
00:49:53,359 --> 00:49:58,000
then that could start an investigation

1208
00:49:58,000 --> 00:50:01,440
next is the bro dns again so this is

1209
00:50:01,440 --> 00:50:03,440
just an equivalent into splunk

1210
00:50:03,440 --> 00:50:08,400
um so next

1211
00:50:08,800 --> 00:50:12,319
and um also uh connecting to this

1212
00:50:12,319 --> 00:50:15,680
eyepiece from the implants that we have

1213
00:50:15,680 --> 00:50:17,200
so we're just showing to you and how you

1214
00:50:17,200 --> 00:50:18,720
do that uh into your

1215
00:50:18,720 --> 00:50:21,440
lag aggregation such as flank and this

1216
00:50:21,440 --> 00:50:21,839
one

1217
00:50:21,839 --> 00:50:24,960
is the different functions that was used

1218
00:50:24,960 --> 00:50:26,800
by the c3 channel

1219
00:50:26,800 --> 00:50:29,280
if they leverage the dropbox as a custom

1220
00:50:29,280 --> 00:50:30,240
command and control

1221
00:50:30,240 --> 00:50:32,880
so you can check all those activities

1222
00:50:32,880 --> 00:50:33,520
towards

1223
00:50:33,520 --> 00:50:36,319
this urls

1224
00:50:39,119 --> 00:50:43,119
next um so this one is uh interesting

1225
00:50:43,119 --> 00:50:44,720
because uh we've noticed that

1226
00:50:44,720 --> 00:50:49,119
nt dl um nt dl l that dll

1227
00:50:49,119 --> 00:50:51,920
is uh can be a good point of all chord

1228
00:50:51,920 --> 00:50:52,800
called trace

1229
00:50:52,800 --> 00:50:55,119
which is uh can lead into a process

1230
00:50:55,119 --> 00:50:56,160
injection so

1231
00:50:56,160 --> 00:50:57,920
you can see here that we have here the

1232
00:50:57,920 --> 00:50:59,760
implant as a target image

1233
00:50:59,760 --> 00:51:01,760
and then on the call trace it calls up

1234
00:51:01,760 --> 00:51:02,960
the ntdl

1235
00:51:02,960 --> 00:51:07,359
that dll so the ntdl.dll

1236
00:51:07,359 --> 00:51:10,240
is more of interface to a windows kernel

1237
00:51:10,240 --> 00:51:11,680
and then one of the host artifacts that

1238
00:51:11,680 --> 00:51:13,200
we've noticed as well is

1239
00:51:13,200 --> 00:51:14,640
especially if you're performing an

1240
00:51:14,640 --> 00:51:17,200
empire as your c2 you can also see some

1241
00:51:17,200 --> 00:51:18,400
powershell events

1242
00:51:18,400 --> 00:51:21,040
but if the attacker was able to delete

1243
00:51:21,040 --> 00:51:22,000
those logs from

1244
00:51:22,000 --> 00:51:24,240
the powershell event logs uh perspective

1245
00:51:24,240 --> 00:51:25,280
then we can also

1246
00:51:25,280 --> 00:51:28,000
see those ps transcripts uh in your

1247
00:51:28,000 --> 00:51:29,440
windows environment so you can just go

1248
00:51:29,440 --> 00:51:30,240
to uh

1249
00:51:30,240 --> 00:51:32,160
this folder ps transcripts and you can

1250
00:51:32,160 --> 00:51:34,319
see uh most of the

1251
00:51:34,319 --> 00:51:36,319
command line parameters or the commands

1252
00:51:36,319 --> 00:51:37,920
that was used or leveraged by the

1253
00:51:37,920 --> 00:51:40,400
powershell

1254
00:51:40,640 --> 00:51:43,359
and uh this one creation of account so

1255
00:51:43,359 --> 00:51:43,680
this

1256
00:51:43,680 --> 00:51:46,880
is a part of a persistence uh mechanism

1257
00:51:46,880 --> 00:51:48,400
of an attacker so once

1258
00:51:48,400 --> 00:51:50,240
they got the initial foothold they'll

1259
00:51:50,240 --> 00:51:51,760
just create different accounts or

1260
00:51:51,760 --> 00:51:53,359
multiple accounts as their

1261
00:51:53,359 --> 00:51:55,040
uh you know back door so they can just

1262
00:51:55,040 --> 00:51:56,640
connect back if ever

1263
00:51:56,640 --> 00:51:59,440
their initial access has been revoked by

1264
00:51:59,440 --> 00:52:03,280
a security guys or from stock

1265
00:52:03,599 --> 00:52:05,760
and this one is just the graphical um

1266
00:52:05,760 --> 00:52:07,760
process chains where you know we can see

1267
00:52:07,760 --> 00:52:08,480
that

1268
00:52:08,480 --> 00:52:11,119
uh we have here um the count of the

1269
00:52:11,119 --> 00:52:12,960
executions of this are very low

1270
00:52:12,960 --> 00:52:15,200
you can see that it's just one execution

1271
00:52:15,200 --> 00:52:17,200
one count and then two counts

1272
00:52:17,200 --> 00:52:20,000
um but it can lead to a domain

1273
00:52:20,000 --> 00:52:21,359
compromise or the

1274
00:52:21,359 --> 00:52:22,960
the whole entire enterprise can be

1275
00:52:22,960 --> 00:52:25,520
compromised by this implants

1276
00:52:25,520 --> 00:52:29,119
uh so from cmd.exe it calls um

1277
00:52:29,119 --> 00:52:31,599
or it executes uh different implants

1278
00:52:31,599 --> 00:52:35,119
from the c3 channels that we have

1279
00:52:35,520 --> 00:52:38,800
and so this one is uh we also perform a

1280
00:52:38,800 --> 00:52:41,040
c3 channel using a github

1281
00:52:41,040 --> 00:52:44,000
and we see the dns queries that it calls

1282
00:52:44,000 --> 00:52:45,359
to it different

1283
00:52:45,359 --> 00:52:49,839
um api um dns result names

1284
00:52:49,839 --> 00:52:53,440
from github so now how can we improve

1285
00:52:53,440 --> 00:52:55,599
so of course we need to identify if we

1286
00:52:55,599 --> 00:52:57,599
have the capability to detect it

1287
00:52:57,599 --> 00:52:59,680
do we have enough data sources are we

1288
00:52:59,680 --> 00:53:01,440
actually monitoring the

1289
00:53:01,440 --> 00:53:03,839
uh network traffic are we monitoring the

1290
00:53:03,839 --> 00:53:05,599
process executions of different command

1291
00:53:05,599 --> 00:53:06,480
lines

1292
00:53:06,480 --> 00:53:09,760
uh if the dll is has been connecting

1293
00:53:09,760 --> 00:53:11,200
into a different network

1294
00:53:11,200 --> 00:53:13,280
are we also connect are we also getting

1295
00:53:13,280 --> 00:53:15,040
that kind of data sources

1296
00:53:15,040 --> 00:53:17,440
so first is to just determine what data

1297
00:53:17,440 --> 00:53:18,800
sources do you have

1298
00:53:18,800 --> 00:53:23,359
and then um study and check what are the

1299
00:53:23,359 --> 00:53:25,440
public resources or references that are

1300
00:53:25,440 --> 00:53:26,800
available

1301
00:53:26,800 --> 00:53:28,800
and then from there you can create or

1302
00:53:28,800 --> 00:53:30,400
craft your detection engineering or

1303
00:53:30,400 --> 00:53:31,760
detection strategies

1304
00:53:31,760 --> 00:53:33,839
from that standpoint and also leverage

1305
00:53:33,839 --> 00:53:36,160
the uc usage of a miter framework

1306
00:53:36,160 --> 00:53:37,040
because everyone

1307
00:53:37,040 --> 00:53:39,839
is tracking or mapping all of their

1308
00:53:39,839 --> 00:53:40,800
detection

1309
00:53:40,800 --> 00:53:42,960
queries search queries watch release

1310
00:53:42,960 --> 00:53:44,960
into a miter

1311
00:53:44,960 --> 00:53:47,440
so i just uh an overview on how we

1312
00:53:47,440 --> 00:53:48,559
detected this

1313
00:53:48,559 --> 00:53:50,800
uh we need to look for unknown protocols

1314
00:53:50,800 --> 00:53:53,280
but nowadays as c3 has been introduced

1315
00:53:53,280 --> 00:53:54,079
for us

1316
00:53:54,079 --> 00:53:57,520
it also uh uses um known protocols

1317
00:53:57,520 --> 00:54:02,000
like dns over https or

1318
00:54:02,000 --> 00:54:05,280
icmp as well can be used so to

1319
00:54:05,280 --> 00:54:08,400
look for a beaconing behavior as we have

1320
00:54:08,400 --> 00:54:10,960
said that uh those network connections

1321
00:54:10,960 --> 00:54:13,200
uh tracing network connections that

1322
00:54:13,200 --> 00:54:16,240
are connecting with an interval and

1323
00:54:16,240 --> 00:54:18,559
having some jitter of it so most of the

1324
00:54:18,559 --> 00:54:19,440
c2 can

1325
00:54:19,440 --> 00:54:21,760
customize those kind of configurations

1326
00:54:21,760 --> 00:54:24,079
from from their server uh

1327
00:54:24,079 --> 00:54:26,400
weird user agents uh if you've seen

1328
00:54:26,400 --> 00:54:27,200
something like

1329
00:54:27,200 --> 00:54:30,800
empire powershell uh beats admin so

1330
00:54:30,800 --> 00:54:32,079
those are just leaving of the land

1331
00:54:32,079 --> 00:54:33,280
binary digits that

1332
00:54:33,280 --> 00:54:35,599
can appear into a user agent so if they

1333
00:54:35,599 --> 00:54:37,200
try to download something

1334
00:54:37,200 --> 00:54:40,480
then those are the binaries that

1335
00:54:40,480 --> 00:54:43,520
can be rarely seen doing that

1336
00:54:43,520 --> 00:54:45,839
um tools that we can recommend recommend

1337
00:54:45,839 --> 00:54:48,960
here rita is an open source freak.py so

1338
00:54:48,960 --> 00:54:50,799
it was created by a science instructor

1339
00:54:50,799 --> 00:54:51,760
and mike

1340
00:54:51,760 --> 00:54:54,960
i think that's his name so it just um

1341
00:54:54,960 --> 00:54:58,319
see the stocking and can easily uh

1342
00:54:58,319 --> 00:55:01,040
check from anomalies like uh if it's

1343
00:55:01,040 --> 00:55:03,280
performing dga or domain generations

1344
00:55:03,280 --> 00:55:04,319
algorithm

1345
00:55:04,319 --> 00:55:07,599
ga3 from salesforce uh this is uh on how

1346
00:55:07,599 --> 00:55:08,000
you

1347
00:55:08,000 --> 00:55:10,559
perform ssl fingerprinting so you can

1348
00:55:10,559 --> 00:55:11,359
also use that

1349
00:55:11,359 --> 00:55:14,000
c2 matrix so it's a collaborations of a

1350
00:55:14,000 --> 00:55:15,359
different people but

1351
00:55:15,359 --> 00:55:17,040
i think george is also one of the

1352
00:55:17,040 --> 00:55:18,400
speaker of root con

1353
00:55:18,400 --> 00:55:21,520
um he uh and brian also

1354
00:55:21,520 --> 00:55:23,920
made this project open for public so you

1355
00:55:23,920 --> 00:55:26,400
can reference what are the different c2

1356
00:55:26,400 --> 00:55:28,400
tools that we can use from the attack

1357
00:55:28,400 --> 00:55:29,920
standpoint and study it from the

1358
00:55:29,920 --> 00:55:32,640
defensive side

1359
00:55:33,280 --> 00:55:36,559
and that's it uh we're done

1360
00:55:36,559 --> 00:55:39,599
thank you guys for listening so again

1361
00:55:39,599 --> 00:55:42,640
um you can follow us on twitter

1362
00:55:42,640 --> 00:55:45,280
link in and also uh you can also like

1363
00:55:45,280 --> 00:55:46,079
our page

1364
00:55:46,079 --> 00:55:47,839
follow us on twitter linkedin using our

1365
00:55:47,839 --> 00:55:49,440
guiding page

1366
00:55:49,440 --> 00:55:51,920
and on behalf of ian again once and for

1367
00:55:51,920 --> 00:55:53,359
all thank you so much

1368
00:55:53,359 --> 00:55:55,440
for listening to us and again to root

1369
00:55:55,440 --> 00:55:56,559
con goons

1370
00:55:56,559 --> 00:55:59,599
uh thank you so much for having us here

1371
00:55:59,599 --> 00:56:02,720
so we are now opening up if we still

1372
00:56:02,720 --> 00:56:03,280
have time

1373
00:56:03,280 --> 00:56:06,880
we're sorry i think we just extended a

1374
00:56:06,880 --> 00:56:09,760
few minutes here

1375
00:56:13,040 --> 00:56:15,920
right the uh no worries about that uh we

1376
00:56:15,920 --> 00:56:18,960
are actually flexible here in rootcon

1377
00:56:18,960 --> 00:56:22,640
so uh there is uh actually a q a a

1378
00:56:22,640 --> 00:56:25,680
question for

1379
00:56:25,680 --> 00:56:29,119
for you guys and there's also an edition

1380
00:56:29,119 --> 00:56:31,200
from gagan jatana

1381
00:56:31,200 --> 00:56:33,359
gagan said that just to addition into

1382
00:56:33,359 --> 00:56:36,240
the prevention public cloud storage

1383
00:56:36,240 --> 00:56:38,319
can be blocked by the next generation

1384
00:56:38,319 --> 00:56:39,760
firewalls example

1385
00:56:39,760 --> 00:56:43,119
palo alto and then for

1386
00:56:43,119 --> 00:56:45,839
um you know you said that you you

1387
00:56:45,839 --> 00:56:46,400
started

1388
00:56:46,400 --> 00:56:51,440
seeing twitter uh c2 since 2015 um

1389
00:56:51,440 --> 00:56:56,400
actually uh c2 in twitter has been long

1390
00:56:56,480 --> 00:57:00,000
long been seen since 2009 there's a uh

1391
00:57:00,000 --> 00:57:03,200
there is a presentation in root con

1392
00:57:03,200 --> 00:57:06,559
about twitter c2 since 2000 uh

1393
00:57:06,559 --> 00:57:09,520
i think that was root can two or three

1394
00:57:09,520 --> 00:57:12,000
wherein we had a presentation

1395
00:57:12,000 --> 00:57:15,520
about yeah c2 frameworks for uh using

1396
00:57:15,520 --> 00:57:16,480
twitter

1397
00:57:16,480 --> 00:57:19,760
and then we have um a question

1398
00:57:19,760 --> 00:57:22,799
here right now aside from detection what

1399
00:57:22,799 --> 00:57:25,760
proactive controls can you recommend

1400
00:57:25,760 --> 00:57:29,680
to defend against c3

1401
00:57:31,520 --> 00:57:35,760
um prevention side um

1402
00:57:35,760 --> 00:57:40,079
so uh checking the network traffic and

1403
00:57:40,079 --> 00:57:41,599
also making sure that you have the

1404
00:57:41,599 --> 00:57:42,799
visibility of

1405
00:57:42,799 --> 00:57:44,480
what you're trying to detect especially

1406
00:57:44,480 --> 00:57:46,559
the etw that i've discussed

1407
00:57:46,559 --> 00:57:49,440
uh those dll that connects into uh weird

1408
00:57:49,440 --> 00:57:52,000
public ips external ips that

1409
00:57:52,000 --> 00:57:54,160
shouldn't be connecting that would be a

1410
00:57:54,160 --> 00:57:57,359
great value findings for me

1411
00:57:57,359 --> 00:58:01,680
um ian can you add more to that context

1412
00:58:01,680 --> 00:58:04,720
also um i think uh for uh

1413
00:58:04,720 --> 00:58:07,839
since we already uh are

1414
00:58:07,839 --> 00:58:11,119
being uh forced to use

1415
00:58:11,119 --> 00:58:14,640
cloud services or rather it's very

1416
00:58:14,640 --> 00:58:16,880
seen nowadays that uh most of the

1417
00:58:16,880 --> 00:58:18,000
infrastructure are

1418
00:58:18,000 --> 00:58:20,480
on cloud services it's notable that we

1419
00:58:20,480 --> 00:58:23,440
must apply a proper access controls or

1420
00:58:23,440 --> 00:58:26,480
iam in order to secure our

1421
00:58:26,480 --> 00:58:29,920
api key secure the installation of these

1422
00:58:29,920 --> 00:58:31,280
uh malicious

1423
00:58:31,280 --> 00:58:34,400
applications that are not from our

1424
00:58:34,400 --> 00:58:35,760
organization

1425
00:58:35,760 --> 00:58:38,000
we are talking about access controls

1426
00:58:38,000 --> 00:58:40,400
also about the logic capability of this

1427
00:58:40,400 --> 00:58:41,520
channel such as

1428
00:58:41,520 --> 00:58:44,640
microsoft office 365 uh there uh

1429
00:58:44,640 --> 00:58:46,240
there has been a very great audit

1430
00:58:46,240 --> 00:58:48,079
logging capability of this platform

1431
00:58:48,079 --> 00:58:49,040
nowadays

1432
00:58:49,040 --> 00:58:51,119
so you can also check that out or you

1433
00:58:51,119 --> 00:58:52,240
can just

1434
00:58:52,240 --> 00:58:54,720
get these logs push out into your sim

1435
00:58:54,720 --> 00:58:56,480
solutions and then make

1436
00:58:56,480 --> 00:58:59,599
aggregations and that

1437
00:59:03,200 --> 00:59:05,839
all right any any other questions uh i

1438
00:59:05,839 --> 00:59:08,640
think we've answered everything uh

1439
00:59:08,640 --> 00:59:10,400
have we answered this question are there

1440
00:59:10,400 --> 00:59:12,480
already automated technologies or tools

1441
00:59:12,480 --> 00:59:13,839
that could

1442
00:59:13,839 --> 00:59:17,280
detect and identify c2 c3 traffic from a

1443
00:59:17,280 --> 00:59:19,839
normal one

1444
00:59:21,599 --> 00:59:25,040
um so as per gagan from nobody

1445
00:59:25,040 --> 00:59:28,240
guy so he said that most of the next

1446
00:59:28,240 --> 00:59:30,640
generation firewalls such as palo alto

1447
00:59:30,640 --> 00:59:34,799
can detect this kind of malicious thing

1448
00:59:34,799 --> 00:59:37,680
and then can sign image like chrome uh

1449
00:59:37,680 --> 00:59:39,760
chrome executable can be used to

1450
00:59:39,760 --> 00:59:42,559
generate c2 traffic

1451
00:59:42,559 --> 00:59:47,359
uh i would say yes um so um

1452
00:59:47,359 --> 00:59:50,640
so yeah um i um

1453
00:59:50,640 --> 00:59:53,280
it can be used to uh even powershell

1454
00:59:53,280 --> 00:59:55,119
like uh we've seen the c2 channels that

1455
00:59:55,119 --> 00:59:57,280
just leverage powershell and then

1456
00:59:57,280 --> 01:00:00,160
connect backs to uh the github repo

1457
01:00:00,160 --> 01:00:01,520
where they hosted it

1458
01:00:01,520 --> 01:00:04,160
so having more visibility on your

1459
01:00:04,160 --> 01:00:04,960
enterprise

1460
01:00:04,960 --> 01:00:08,160
can detect the most interesting things

1461
01:00:08,160 --> 01:00:08,880
out from

1462
01:00:08,880 --> 01:00:12,000
the normal behavior all right

1463
01:00:12,000 --> 01:00:14,880
sorry uh i know we still have uh other

1464
01:00:14,880 --> 01:00:16,960
questions to be answered but

1465
01:00:16,960 --> 01:00:20,160
uh i would encourage for you

1466
01:00:20,160 --> 01:00:22,640
to uh touch base with our speakers

1467
01:00:22,640 --> 01:00:23,760
directly

1468
01:00:23,760 --> 01:00:25,599
so there's more interaction happening i

1469
01:00:25,599 --> 01:00:27,920
trust that ransom and mark has already

1470
01:00:27,920 --> 01:00:29,520
and discord

1471
01:00:29,520 --> 01:00:31,760
right so easiest way to reach them out

1472
01:00:31,760 --> 01:00:33,440
is at discord

1473
01:00:33,440 --> 01:00:36,559
uh other ways of reaching to both of you

1474
01:00:36,559 --> 01:00:39,839
could you share them with us please

1475
01:00:40,640 --> 01:00:43,760
yes ian can you show the uh follow us

1476
01:00:43,760 --> 01:00:47,359
slide oh sorry

1477
01:00:48,319 --> 01:00:52,480
yeah that one so we are on twitter

1478
01:00:52,480 --> 01:00:54,880
so i'm uh renzek and the en en

1479
01:00:54,880 --> 01:00:56,880
secretario so you can just follow us

1480
01:00:56,880 --> 01:01:00,000
them us or you can also uh pmr page

1481
01:01:00,000 --> 01:01:02,319
which is a guided training

1482
01:01:02,319 --> 01:01:05,359
so normally we answer common queries

1483
01:01:05,359 --> 01:01:06,720
there

1484
01:01:06,720 --> 01:01:09,760
all right mark uh renzon thank you very

1485
01:01:09,760 --> 01:01:10,079
much

1486
01:01:10,079 --> 01:01:13,680
for you know again putting yourselves

1487
01:01:13,680 --> 01:01:16,000
in front of the crowd putting yourselves

1488
01:01:16,000 --> 01:01:16,720
in the spot

1489
01:01:16,720 --> 01:01:19,040
uh for this talk uh we really appreciate

1490
01:01:19,040 --> 01:01:21,440
the time and we also appreciate

1491
01:01:21,440 --> 01:01:23,280
the information that you have shared

1492
01:01:23,280 --> 01:01:25,200
with us very very helpful

1493
01:01:25,200 --> 01:01:27,839
i know for all our infosec buddies out

1494
01:01:27,839 --> 01:01:29,839
there and professionals uh

1495
01:01:29,839 --> 01:01:32,160
they'd be able to take a look at this

1496
01:01:32,160 --> 01:01:32,880
and

1497
01:01:32,880 --> 01:01:35,920
uh have a try themselves right

1498
01:01:35,920 --> 01:01:38,960
yeah all right so with that

1499
01:01:38,960 --> 01:01:41,520
with that said uh again thank you uh

1500
01:01:41,520 --> 01:01:42,559
i'll be

1501
01:01:42,559 --> 01:01:46,000
we'll ask you to drop off from um

1502
01:01:46,000 --> 01:01:48,799
from being here thank you thank you so

1503
01:01:48,799 --> 01:01:51,119
much

