1
00:00:00,000 --> 00:00:02,610
we are now ready to begin the second

2
00:00:02,610 --> 00:00:04,740
presentation for this session so please

3
00:00:04,740 --> 00:00:06,390
welcome James White we will be

4
00:00:06,390 --> 00:00:07,980
presenting on zero access command

5
00:00:07,980 --> 00:00:13,110
control communications good afternoon

6
00:00:13,110 --> 00:00:15,000
everyone I welcome to back channels and

7
00:00:15,000 --> 00:00:17,520
bitcoins my name is James White i'm a

8
00:00:17,520 --> 00:00:19,470
senior threat researcher with saw us in

9
00:00:19,470 --> 00:00:22,980
the UK this presentation aims to expose

10
00:00:22,980 --> 00:00:24,960
some of the less well-known aspects of

11
00:00:24,960 --> 00:00:26,910
the zero access botnet which is one of

12
00:00:26,910 --> 00:00:28,349
the most widespread threats on the

13
00:00:28,349 --> 00:00:30,750
internet in particular we're going to

14
00:00:30,750 --> 00:00:33,570
look at the technical reasons for zero

15
00:00:33,570 --> 00:00:36,180
accesses longevity and success by

16
00:00:36,180 --> 00:00:37,920
examining several ways that the author

17
00:00:37,920 --> 00:00:39,629
is actively attempt to mislead and

18
00:00:39,629 --> 00:00:50,100
deceive the security a navy community so

19
00:00:50,100 --> 00:00:52,230
let's start by looking at the agenda for

20
00:00:52,230 --> 00:00:54,629
the presentation will begin with a brief

21
00:00:54,629 --> 00:00:57,000
introduction into exactly what 0 access

22
00:00:57,000 --> 00:00:59,160
is for taking a look at some of the

23
00:00:59,160 --> 00:01:00,629
interesting aspects that occur during

24
00:01:00,629 --> 00:01:03,600
installation will then take a look at a

25
00:01:03,600 --> 00:01:06,119
few of the downloaded modules in

26
00:01:06,119 --> 00:01:07,740
particular the tracker module the click

27
00:01:07,740 --> 00:01:09,600
fraud module and the Bitcoin mining

28
00:01:09,600 --> 00:01:11,939
module will then try and make some

29
00:01:11,939 --> 00:01:13,680
estimations about how much money the

30
00:01:13,680 --> 00:01:15,750
botnet might be earning before finishing

31
00:01:15,750 --> 00:01:19,740
with a conclusion so brief recap of

32
00:01:19,740 --> 00:01:22,770
exactly what zero access is so zero

33
00:01:22,770 --> 00:01:24,689
access is effectively a downloading bot

34
00:01:24,689 --> 00:01:26,670
that connects into a custom peer-to-peer

35
00:01:26,670 --> 00:01:29,900
network to download binary module files

36
00:01:29,900 --> 00:01:32,430
these modules effectively carry out the

37
00:01:32,430 --> 00:01:34,590
payload of the botnet which is the

38
00:01:34,590 --> 00:01:36,570
monetizing activity that gets performed

39
00:01:36,570 --> 00:01:39,750
on the endpoint so the main component of

40
00:01:39,750 --> 00:01:41,520
zero access in the peer-to-peer protocol

41
00:01:41,520 --> 00:01:43,170
itself have undergone several visions

42
00:01:43,170 --> 00:01:45,600
over time in particular they've moved

43
00:01:45,600 --> 00:01:47,610
away from a kernel mode architecture

44
00:01:47,610 --> 00:01:50,430
where they used kernel level brew kit

45
00:01:50,430 --> 00:01:52,229
techniques to hide various aspects of

46
00:01:52,229 --> 00:01:54,600
the activity towards a more user mode

47
00:01:54,600 --> 00:01:56,729
approach that's more easy to maintain

48
00:01:56,729 --> 00:01:58,619
and more adaptable and can be employed

49
00:01:58,619 --> 00:02:00,600
across architectures and our newer

50
00:02:00,600 --> 00:02:03,090
versions of Windows the peer-to-peer

51
00:02:03,090 --> 00:02:04,979
protocol itself has also undergone

52
00:02:04,979 --> 00:02:06,509
several revisions in particular it's

53
00:02:06,509 --> 00:02:09,780
moved away from a purely TCP model to a

54
00:02:09,780 --> 00:02:11,819
more UDP aunty

55
00:02:11,819 --> 00:02:13,859
to be combined combined model where most

56
00:02:13,859 --> 00:02:16,349
of the protocol takes place over UDP but

57
00:02:16,349 --> 00:02:18,709
file transfers are carried out with tcp

58
00:02:18,709 --> 00:02:20,670
throughout both provisions of the

59
00:02:20,670 --> 00:02:23,670
peer-to-peer protocol and one thing has

60
00:02:23,670 --> 00:02:25,200
remained and that's that it's extremely

61
00:02:25,200 --> 00:02:27,780
noisy anyone with the packet sniffer on

62
00:02:27,780 --> 00:02:30,120
an infected machine quickly notices a

63
00:02:30,120 --> 00:02:34,620
large amount of very suspicious data so

64
00:02:34,620 --> 00:02:36,870
it's a very brief overview of the

65
00:02:36,870 --> 00:02:39,930
peer-to-peer protocol and so each node

66
00:02:39,930 --> 00:02:42,329
connects to all the other nodes it knows

67
00:02:42,329 --> 00:02:44,760
about and the live nodes responds back

68
00:02:44,760 --> 00:02:47,939
with information so the current version

69
00:02:47,939 --> 00:02:50,340
of the protocol sends out get requests

70
00:02:50,340 --> 00:02:52,889
to peer addresses and each peer responds

71
00:02:52,889 --> 00:02:55,439
with the RET el command which contains a

72
00:02:55,439 --> 00:02:57,329
subset of the peers that that node knows

73
00:02:57,329 --> 00:02:59,639
about and the list of the files that it

74
00:02:59,639 --> 00:03:03,510
has on its endpoint and so each infected

75
00:03:03,510 --> 00:03:05,400
machine will send out a get request at

76
00:03:05,400 --> 00:03:07,500
the rate of one per second which if the

77
00:03:07,500 --> 00:03:09,689
box of life for 24-hour period will

78
00:03:09,689 --> 00:03:12,750
result in over 8,000 packets of data a

79
00:03:12,750 --> 00:03:15,900
day added to this the protocol uses

80
00:03:15,900 --> 00:03:17,849
fixed port numbers which means that the

81
00:03:17,849 --> 00:03:19,859
traffic itself is very easy to identify

82
00:03:19,859 --> 00:03:23,699
and detect and but it seems that the

83
00:03:23,699 --> 00:03:27,030
authors intentionally use to a degree

84
00:03:27,030 --> 00:03:29,099
the noise of the protocol to mask

85
00:03:29,099 --> 00:03:31,889
certain other aspects of the command and

86
00:03:31,889 --> 00:03:33,780
control infrastructure that's used to

87
00:03:33,780 --> 00:03:37,590
administer the botnet so let's look at

88
00:03:37,590 --> 00:03:39,810
what happens installation so essentially

89
00:03:39,810 --> 00:03:42,509
each drop of phones home with certain

90
00:03:42,509 --> 00:03:44,280
information about the infected machine

91
00:03:44,280 --> 00:03:46,319
during installation there are two

92
00:03:46,319 --> 00:03:49,409
techniques used the first is an HTTP GET

93
00:03:49,409 --> 00:03:52,259
request and the second is by encoding a

94
00:03:52,259 --> 00:03:54,569
packet of data and sending out on UDP

95
00:03:54,569 --> 00:03:56,819
port 53 so it's designed to look like

96
00:03:56,819 --> 00:04:00,090
DNS traffic the purpose of this data is

97
00:04:00,090 --> 00:04:02,400
to feed the affiliate program which is

98
00:04:02,400 --> 00:04:05,129
used to distribute 0 access so another

99
00:04:05,129 --> 00:04:06,810
request that happens installation is

100
00:04:06,810 --> 00:04:09,870
that the bot will send out a HTTP

101
00:04:09,870 --> 00:04:12,659
request to a geoip service to retrieve

102
00:04:12,659 --> 00:04:14,819
the country code of the externally

103
00:04:14,819 --> 00:04:16,440
facing IP address of the infected

104
00:04:16,440 --> 00:04:18,180
machine this is important to the

105
00:04:18,180 --> 00:04:19,798
affiliate program because it pays out

106
00:04:19,798 --> 00:04:22,349
primarily based on the location of the

107
00:04:22,349 --> 00:04:25,260
infected machine the US for example

108
00:04:25,260 --> 00:04:27,390
will pay out far more than any other

109
00:04:27,390 --> 00:04:31,890
country in the affiliate program so this

110
00:04:31,890 --> 00:04:35,420
is what the geo IP lookup looks like and

111
00:04:35,420 --> 00:04:37,860
it's a simple get request the server

112
00:04:37,860 --> 00:04:40,230
responds with some JavaScript which is

113
00:04:40,230 --> 00:04:41,880
then passed by the bot to retrieve the

114
00:04:41,880 --> 00:04:44,370
country code of the infected machine so

115
00:04:44,370 --> 00:04:46,920
currently a URL on max mind calm is

116
00:04:46,920 --> 00:04:48,810
being used which is a legitimate geoip

117
00:04:48,810 --> 00:04:51,450
service although previously they were

118
00:04:51,450 --> 00:04:56,640
using a URL on fling.com so a closer

119
00:04:56,640 --> 00:04:59,250
look at the HTTP GET request so this is

120
00:04:59,250 --> 00:05:02,130
made to a legitimate seeming web counter

121
00:05:02,130 --> 00:05:04,890
URL and it's legitimate seeming in the

122
00:05:04,890 --> 00:05:06,840
sense that you can also you can visit

123
00:05:06,840 --> 00:05:08,340
the domain you can sign up for a web

124
00:05:08,340 --> 00:05:10,710
counter yourself put it on your website

125
00:05:10,710 --> 00:05:13,620
and it will act as a web counter should

126
00:05:13,620 --> 00:05:15,300
do it will display a number and every

127
00:05:15,300 --> 00:05:16,770
time I hit happens the number is

128
00:05:16,770 --> 00:05:19,200
incremented however there's certain

129
00:05:19,200 --> 00:05:21,030
information encoded into the headers of

130
00:05:21,030 --> 00:05:23,190
the get request specifically in the user

131
00:05:23,190 --> 00:05:25,590
agent field about the infected machine

132
00:05:25,590 --> 00:05:27,360
which means that the zero access

133
00:05:27,360 --> 00:05:30,300
author's must have access to some extent

134
00:05:30,300 --> 00:05:32,640
to the web server logs on the web

135
00:05:32,640 --> 00:05:35,220
counter domain so there's certain

136
00:05:35,220 --> 00:05:36,600
relationship between the owners of the

137
00:05:36,600 --> 00:05:38,640
web counter and the zero access authors

138
00:05:38,640 --> 00:05:42,090
they may even be the same people so most

139
00:05:42,090 --> 00:05:44,040
multiple get requests are made and each

140
00:05:44,040 --> 00:05:46,860
time a numeric value in the URL is

141
00:05:46,860 --> 00:05:49,650
modified based on the path of execution

142
00:05:49,650 --> 00:05:51,270
through the dropper that happens on the

143
00:05:51,270 --> 00:05:53,820
endpoint so for example if the dropper

144
00:05:53,820 --> 00:05:55,650
was executed as administrator a

145
00:05:55,650 --> 00:05:57,660
different numeric value is added to the

146
00:05:57,660 --> 00:05:59,400
string and we get a different hit

147
00:05:59,400 --> 00:06:02,700
counter is incremented with each hit so

148
00:06:02,700 --> 00:06:05,130
this means that the author's can count

149
00:06:05,130 --> 00:06:07,740
the total installs for each stage of

150
00:06:07,740 --> 00:06:10,050
execution that the drop app that the

151
00:06:10,050 --> 00:06:14,580
drop it takes so this is what that get

152
00:06:14,580 --> 00:06:16,320
request looks like there are three

153
00:06:16,320 --> 00:06:18,210
highlighted values in the user agent

154
00:06:18,210 --> 00:06:20,340
field the first is an operating system

155
00:06:20,340 --> 00:06:23,070
version value the second is a country

156
00:06:23,070 --> 00:06:25,860
code in this case is BG for Bulgaria and

157
00:06:25,860 --> 00:06:28,320
the third denotes the architecture of

158
00:06:28,320 --> 00:06:30,900
the infected machine this time x86 but

159
00:06:30,900 --> 00:06:33,960
it could be x64 we then see the sequence

160
00:06:33,960 --> 00:06:36,540
of each HTTP GET request the numeric

161
00:06:36,540 --> 00:06:38,729
value modified each time indicating

162
00:06:38,729 --> 00:06:41,639
what stage of execution the path affects

163
00:06:41,639 --> 00:06:44,759
the path took then underneath there's a

164
00:06:44,759 --> 00:06:47,550
capture of one of the hit counters at a

165
00:06:47,550 --> 00:06:50,789
particular point in time so because the

166
00:06:50,789 --> 00:06:53,969
hit counter functions correctly we can

167
00:06:53,969 --> 00:06:56,490
visit that URL and effectively count the

168
00:06:56,490 --> 00:06:58,050
total number of installs at any

169
00:06:58,050 --> 00:07:00,479
particular point in time and if we plot

170
00:07:00,479 --> 00:07:02,669
this over a longer period then we might

171
00:07:02,669 --> 00:07:05,309
be able to estimate the infection rate

172
00:07:05,309 --> 00:07:07,430
that zero access is managing to achieve

173
00:07:07,430 --> 00:07:10,650
so earlier in the year there was one

174
00:07:10,650 --> 00:07:12,449
portion of the zero access botnet that

175
00:07:12,449 --> 00:07:16,349
was performing this technique and so

176
00:07:16,349 --> 00:07:19,889
over a 17-day period the current counter

177
00:07:19,889 --> 00:07:22,499
was measured measured and even though

178
00:07:22,499 --> 00:07:24,149
this is only one portion of zero access

179
00:07:24,149 --> 00:07:26,129
it's still some very high figures so it

180
00:07:26,129 --> 00:07:28,949
starts out at around 300,000 and after

181
00:07:28,949 --> 00:07:31,490
17 days it's already got over a million

182
00:07:31,490 --> 00:07:34,259
so if we look at just the number of new

183
00:07:34,259 --> 00:07:37,199
installs on a day-by-day basis and we

184
00:07:37,199 --> 00:07:38,520
can see that just one portion of the

185
00:07:38,520 --> 00:07:40,889
botnet is managing to get in between 60

186
00:07:40,889 --> 00:07:44,339
and 20,000 new installs every day so the

187
00:07:44,339 --> 00:07:45,749
average number over that period is

188
00:07:45,749 --> 00:07:48,060
actually 49,000 again it's only one

189
00:07:48,060 --> 00:07:51,330
portion of the botnet in 2012 when all

190
00:07:51,330 --> 00:07:53,490
zero access droppers and therefore all

191
00:07:53,490 --> 00:07:55,349
portions of the zero access botnet were

192
00:07:55,349 --> 00:07:57,240
performing this technique the same thing

193
00:07:57,240 --> 00:07:58,979
was done in over a three-month period

194
00:07:58,979 --> 00:08:01,199
the average number of new installs on a

195
00:08:01,199 --> 00:08:06,349
day-by-day basis was 140,000 every day

196
00:08:07,279 --> 00:08:10,050
so the other techniques sent used to

197
00:08:10,050 --> 00:08:12,449
send information back installation is by

198
00:08:12,449 --> 00:08:14,520
sending an encrypted packet on port on

199
00:08:14,520 --> 00:08:17,459
UDP port 53 so this data is designed to

200
00:08:17,459 --> 00:08:20,129
look like DNS data as you can see from

201
00:08:20,129 --> 00:08:22,139
the packet capture Wireshark will

202
00:08:22,139 --> 00:08:24,240
interpret this as malformed or corrupt

203
00:08:24,240 --> 00:08:28,319
data and and the address is used to send

204
00:08:28,319 --> 00:08:29,550
the data back to which are hard-coded

205
00:08:29,550 --> 00:08:32,190
into the dropper have changed relatively

206
00:08:32,190 --> 00:08:34,260
little over time the service has not

207
00:08:34,260 --> 00:08:36,510
been brought down so this tape seems to

208
00:08:36,510 --> 00:08:38,159
be this technique seems to be relatively

209
00:08:38,159 --> 00:08:43,409
successful at not being noticed so let's

210
00:08:43,409 --> 00:08:45,449
take a look at the module files that are

211
00:08:45,449 --> 00:08:47,060
downloaded from the peer-to-peer network

212
00:08:47,060 --> 00:08:49,680
staying with the tracker module this

213
00:08:49,680 --> 00:08:51,990
module is downloaded by all for the

214
00:08:51,990 --> 00:08:55,770
access botnets and both 32-bit and

215
00:08:55,770 --> 00:08:58,620
64-bit and its purpose is to send

216
00:08:58,620 --> 00:09:00,810
information back about the infected

217
00:09:00,810 --> 00:09:03,450
machine to centralized servers and 50

218
00:09:03,450 --> 00:09:06,899
minute intervals the main functionality

219
00:09:06,899 --> 00:09:08,850
the main purpose of this data is to

220
00:09:08,850 --> 00:09:11,250
ensure that when new droppers are pushed

221
00:09:11,250 --> 00:09:14,060
out onto the Internet the initial

222
00:09:14,060 --> 00:09:16,200
seedpeer address lists that those

223
00:09:16,200 --> 00:09:18,899
droppers carry with them will be very

224
00:09:18,899 --> 00:09:21,540
accurate in terms of live peers they

225
00:09:21,540 --> 00:09:23,040
have very accurate information on which

226
00:09:23,040 --> 00:09:24,630
peers alive at one particular point in

227
00:09:24,630 --> 00:09:26,459
time and they can ensure that when new

228
00:09:26,459 --> 00:09:27,899
droppers are executed they're very

229
00:09:27,899 --> 00:09:29,700
likely to connect successfully into the

230
00:09:29,700 --> 00:09:31,500
peer-to-peer network and download the

231
00:09:31,500 --> 00:09:34,440
module files so the address is that this

232
00:09:34,440 --> 00:09:36,120
data is sent to are retrieved

233
00:09:36,120 --> 00:09:37,560
dynamically from another module

234
00:09:37,560 --> 00:09:38,610
downloaded through the peer-to-peer

235
00:09:38,610 --> 00:09:42,420
network a data module and again we see

236
00:09:42,420 --> 00:09:44,370
that these the IP address in particular

237
00:09:44,370 --> 00:09:46,110
changes relatively little over time

238
00:09:46,110 --> 00:09:48,000
meaning that the technique is being

239
00:09:48,000 --> 00:09:51,270
missed and and the port number although

240
00:09:51,270 --> 00:09:53,970
it can be changed by the new module

241
00:09:53,970 --> 00:09:55,950
being seeded into the network hasn't

242
00:09:55,950 --> 00:09:57,300
changed at all and it's been

243
00:09:57,300 --> 00:09:59,670
consistently port one two three so

244
00:09:59,670 --> 00:10:01,620
because this data is sent over UDP this

245
00:10:01,620 --> 00:10:05,570
looks like network traffic protocol data

246
00:10:06,560 --> 00:10:09,089
so the actual information encoded into

247
00:10:09,089 --> 00:10:12,180
this packet and two important fields

248
00:10:12,180 --> 00:10:14,310
here are the affiliate ID in the body

249
00:10:14,310 --> 00:10:16,890
and these remain consistent across

250
00:10:16,890 --> 00:10:19,380
reboot because the dropper encodes them

251
00:10:19,380 --> 00:10:21,870
into the ntfs extending attribute of the

252
00:10:21,870 --> 00:10:24,420
new directory which is where the zero

253
00:10:24,420 --> 00:10:27,089
access module files are stored so the

254
00:10:27,089 --> 00:10:29,220
tracker module will always send back the

255
00:10:29,220 --> 00:10:32,070
same affiliate ID in the same bot ID for

256
00:10:32,070 --> 00:10:37,980
anyone infected machine so this is what

257
00:10:37,980 --> 00:10:40,579
that data looks like in wireshark and

258
00:10:40,579 --> 00:10:44,160
you can see it interprets it as corrupt

259
00:10:44,160 --> 00:10:47,520
ntp data and only one packet every 15

260
00:10:47,520 --> 00:10:49,410
minutes is very easily missed in a busy

261
00:10:49,410 --> 00:10:52,860
pcap file and very easy to dismiss as OS

262
00:10:52,860 --> 00:10:55,529
as normal activity generated by the OS

263
00:10:55,529 --> 00:11:00,449
not by the malware itself so now let's

264
00:11:00,449 --> 00:11:03,209
take a look at the click fraud module so

265
00:11:03,209 --> 00:11:04,770
this is downloaded by two of the zero

266
00:11:04,770 --> 00:11:07,260
access botnets the 32-bit version

267
00:11:07,260 --> 00:11:10,410
running on port 16 464 and the 64-bit

268
00:11:10,410 --> 00:11:13,470
version running on port 16 465 so this

269
00:11:13,470 --> 00:11:15,180
module has been very actively maintained

270
00:11:15,180 --> 00:11:17,459
going through a number of revisions but

271
00:11:17,459 --> 00:11:19,130
most of the changes sent around the

272
00:11:19,130 --> 00:11:21,600
interplay between client and server to

273
00:11:21,600 --> 00:11:23,300
retrieve the click fraud URLs and

274
00:11:23,300 --> 00:11:27,240
process them and common to each revision

275
00:11:27,240 --> 00:11:29,550
has been that the initiator of the click

276
00:11:29,550 --> 00:11:32,490
full process is an outbound HTTP request

277
00:11:32,490 --> 00:11:35,430
and also common to revisions is the

278
00:11:35,430 --> 00:11:38,160
technique of spoofing the host field in

279
00:11:38,160 --> 00:11:41,130
that HTTP request now for a while the

280
00:11:41,130 --> 00:11:42,990
version that was in the network was

281
00:11:42,990 --> 00:11:45,360
using a demain generation algorithm to

282
00:11:45,360 --> 00:11:48,900
generate that host value so no DNS

283
00:11:48,900 --> 00:11:50,339
request was actually ever made because

284
00:11:50,339 --> 00:11:52,440
it's a spoofed value but it was sort of

285
00:11:52,440 --> 00:11:54,540
used as a kind of semi authentication

286
00:11:54,540 --> 00:11:58,020
where if you made the get request but

287
00:11:58,020 --> 00:12:01,020
didn't include the correct generated

288
00:12:01,020 --> 00:12:03,720
hosts no click full data was returned by

289
00:12:03,720 --> 00:12:05,670
the server but it's not always obvious

290
00:12:05,670 --> 00:12:08,610
that the host is not being genuinely

291
00:12:08,610 --> 00:12:11,520
used and so members of the security

292
00:12:11,520 --> 00:12:14,070
community started to pre generate the

293
00:12:14,070 --> 00:12:16,260
future domains and pre registered them

294
00:12:16,260 --> 00:12:18,180
in an attempt to sinkhole this part the

295
00:12:18,180 --> 00:12:20,550
botnet and in fact it has no effect

296
00:12:20,550 --> 00:12:23,760
whatsoever another technique used by

297
00:12:23,760 --> 00:12:27,120
this module has been to employ at décor

298
00:12:27,120 --> 00:12:29,459
URLs into the data returned from the

299
00:12:29,459 --> 00:12:34,649
server so for a while after the HTTP GET

300
00:12:34,649 --> 00:12:37,410
request is made and the server responded

301
00:12:37,410 --> 00:12:39,270
with some encoded data which after

302
00:12:39,270 --> 00:12:42,779
decoding contained a series of URLs

303
00:12:42,779 --> 00:12:45,420
which appeared to form part of the

304
00:12:45,420 --> 00:12:47,300
future click fold process perhaps as

305
00:12:47,300 --> 00:12:50,750
URLs to be clicked or referrer urls and

306
00:12:50,750 --> 00:12:53,100
but they don't actually appear anywhere

307
00:12:53,100 --> 00:12:55,770
in a subsequent click fraud exchange so

308
00:12:55,770 --> 00:12:57,420
it looks like they have no purpose and

309
00:12:57,420 --> 00:13:01,829
that is until they visited with a web

310
00:13:01,829 --> 00:13:04,740
browser and as it appeared that the IP

311
00:13:04,740 --> 00:13:06,800
address that visited that URL

312
00:13:06,800 --> 00:13:09,839
subsequently no longer received genuine

313
00:13:09,839 --> 00:13:13,260
click fraud data from the web server so

314
00:13:13,260 --> 00:13:14,700
acting a machine and connecting out to

315
00:13:14,700 --> 00:13:16,620
the same IP address the clip food

316
00:13:16,620 --> 00:13:19,440
component no longer worked properly so

317
00:13:19,440 --> 00:13:21,960
it appears that these URLs were

318
00:13:21,960 --> 00:13:24,000
intentionally embedded in the code and

319
00:13:24,000 --> 00:13:25,980
as the only people who are going to be

320
00:13:25,980 --> 00:13:28,740
seeing them were people analyzing the

321
00:13:28,740 --> 00:13:30,960
data exchange they D obfuscator the data

322
00:13:30,960 --> 00:13:32,370
and they got curious about the deep

323
00:13:32,370 --> 00:13:34,890
about the URLs so they're very likely to

324
00:13:34,890 --> 00:13:37,080
be AV companies or security researchers

325
00:13:37,080 --> 00:13:38,910
so they were immediately added to a

326
00:13:38,910 --> 00:13:40,950
blacklist and the click full process no

327
00:13:40,950 --> 00:13:45,690
longer worked off that machine let's

328
00:13:45,690 --> 00:13:48,270
move on to the Bitcoin mining module so

329
00:13:48,270 --> 00:13:51,660
the two botnets that not do not download

330
00:13:51,660 --> 00:13:53,700
the main click fraud module have been

331
00:13:53,700 --> 00:13:56,520
downloading a Bitcoin mining module so

332
00:13:56,520 --> 00:13:58,140
this is a modification of the ephah soft

333
00:13:58,140 --> 00:14:00,420
Bitcoin miner which is an open-source

334
00:14:00,420 --> 00:14:02,760
minor that can be downloaded freely on

335
00:14:02,760 --> 00:14:05,580
the Internet it connects with an HTTP

336
00:14:05,580 --> 00:14:07,830
POST request to a push-pull type mining

337
00:14:07,830 --> 00:14:10,590
server which then responds with JSON

338
00:14:10,590 --> 00:14:12,690
data which is processed by the client

339
00:14:12,690 --> 00:14:17,250
and executed as a mining task so this is

340
00:14:17,250 --> 00:14:19,290
what the post request looks like it's

341
00:14:19,290 --> 00:14:21,840
very easy to identify it's on a

342
00:14:21,840 --> 00:14:24,120
non-standard port and there's clear

343
00:14:24,120 --> 00:14:26,010
headers such as the X mining extensions

344
00:14:26,010 --> 00:14:28,470
header and in the user agent field the

345
00:14:28,470 --> 00:14:30,900
name of minor is included and engines

346
00:14:30,900 --> 00:14:32,850
host then responds with mining tasks to

347
00:14:32,850 --> 00:14:36,060
be carried out so in the early part of

348
00:14:36,060 --> 00:14:39,390
2013 the Bitcoin currency started making

349
00:14:39,390 --> 00:14:41,580
headlines across the world as it went

350
00:14:41,580 --> 00:14:43,530
through an extreme boom in the exchange

351
00:14:43,530 --> 00:14:46,980
rate there were financial problems in

352
00:14:46,980 --> 00:14:49,310
the eurozone and in Cyprus in particular

353
00:14:49,310 --> 00:14:52,200
people were moving their money out of

354
00:14:52,200 --> 00:14:53,610
traditional bank accounts into

355
00:14:53,610 --> 00:14:55,650
electronic currency in an attempt to

356
00:14:55,650 --> 00:14:57,720
stop the government from seizing those

357
00:14:57,720 --> 00:15:00,240
funds this had some interesting effects

358
00:15:00,240 --> 00:15:03,210
on the Bitcoin mining module in that the

359
00:15:03,210 --> 00:15:05,640
module and first appeared in to the

360
00:15:05,640 --> 00:15:08,940
network on the twelfth of May 2012 and

361
00:15:08,940 --> 00:15:10,800
didn't receive an update for over nine

362
00:15:10,800 --> 00:15:13,860
months this is very unusual for zero

363
00:15:13,860 --> 00:15:15,780
access modules as every other module

364
00:15:15,780 --> 00:15:17,400
downloaded through the network underwent

365
00:15:17,400 --> 00:15:18,860
several revisions in this time period

366
00:15:18,860 --> 00:15:22,530
and when an update did finally occur it

367
00:15:22,530 --> 00:15:24,840
actually disabled the module and so a

368
00:15:24,840 --> 00:15:26,850
new version with the same file name as

369
00:15:26,850 --> 00:15:28,860
east into the network is downloaded by

370
00:15:28,860 --> 00:15:31,290
each peer and overwrites the existing

371
00:15:31,290 --> 00:15:33,509
module but the new version doesn't have

372
00:15:33,509 --> 00:15:36,149
any code so it has no functionality and

373
00:15:36,149 --> 00:15:38,459
it effectively just disables the mining

374
00:15:38,459 --> 00:15:42,029
ability of the module so this happened

375
00:15:42,029 --> 00:15:44,370
just before the price boom in Bitcoin

376
00:15:44,370 --> 00:15:47,250
exchange rate as the price went up to

377
00:15:47,250 --> 00:15:49,529
near a hundred dollars another update is

378
00:15:49,529 --> 00:15:51,779
issued into the network this time rhian

379
00:15:51,779 --> 00:15:54,329
abling the mining functionality this

380
00:15:54,329 --> 00:15:55,829
stays in the network for about a month

381
00:15:55,829 --> 00:16:00,480
until it's again disabled so looking at

382
00:16:00,480 --> 00:16:02,850
this on a timeline you can see in

383
00:16:02,850 --> 00:16:04,529
February when the price is round about

384
00:16:04,529 --> 00:16:09,750
$25 the module is first disabled as the

385
00:16:09,750 --> 00:16:12,449
price new is a hundred dollars a new

386
00:16:12,449 --> 00:16:13,769
module is released which again we

387
00:16:13,769 --> 00:16:16,079
enables the mining functionality the

388
00:16:16,079 --> 00:16:17,880
price goes up past two hundred dollars

389
00:16:17,880 --> 00:16:20,009
has a crash but it's still above 100

390
00:16:20,009 --> 00:16:22,230
when again the miner is disabled and

391
00:16:22,230 --> 00:16:24,649
that's the way things stand now the

392
00:16:24,649 --> 00:16:26,730
Bitcoin mining functionality of zero

393
00:16:26,730 --> 00:16:31,290
access there's no longer exists so why

394
00:16:31,290 --> 00:16:33,199
was the Bitcoin miner disabled and

395
00:16:33,199 --> 00:16:35,459
obviously we can't know for sure but we

396
00:16:35,459 --> 00:16:39,120
can make some educated guesses possibly

397
00:16:39,120 --> 00:16:41,610
the currency was seen as too unstable by

398
00:16:41,610 --> 00:16:44,370
the zero access authors when the price

399
00:16:44,370 --> 00:16:46,079
is going up to that extent and down

400
00:16:46,079 --> 00:16:47,790
again it's very difficult to estimate

401
00:16:47,790 --> 00:16:49,920
from one day to the next how much an

402
00:16:49,920 --> 00:16:52,500
infected machine is worth another

403
00:16:52,500 --> 00:16:54,630
possible reason is that it was either

404
00:16:54,630 --> 00:16:57,149
too difficult to cash out mine bitcoins

405
00:16:57,149 --> 00:16:59,250
or in fact that the Bitcoin mining

406
00:16:59,250 --> 00:17:01,110
functionality was not really working

407
00:17:01,110 --> 00:17:03,389
very well and not many bitcoins were

408
00:17:03,389 --> 00:17:06,569
successfully being mined and a machine

409
00:17:06,569 --> 00:17:08,549
that's performing Bitcoin mining tends

410
00:17:08,549 --> 00:17:10,049
to use a lot of resources and is

411
00:17:10,049 --> 00:17:12,390
therefore very noticeable from a user's

412
00:17:12,390 --> 00:17:14,189
point of view therefore they're probably

413
00:17:14,189 --> 00:17:16,349
going to reboot it a lot and it might be

414
00:17:16,349 --> 00:17:18,209
that it's not very frequent that mine

415
00:17:18,209 --> 00:17:19,949
that coins actually get successfully

416
00:17:19,949 --> 00:17:23,760
mined the third reason is that with the

417
00:17:23,760 --> 00:17:25,289
Bitcoin currency gaining so much

418
00:17:25,289 --> 00:17:28,230
attention throughout the world so too

419
00:17:28,230 --> 00:17:29,880
there's a botnet that is known for

420
00:17:29,880 --> 00:17:33,299
mining bitcoins so perhaps

421
00:17:33,299 --> 00:17:36,269
and when the profile of the botnet rises

422
00:17:36,269 --> 00:17:38,340
and there's a lot of unwanted attention

423
00:17:38,340 --> 00:17:41,489
from law enforcement AV companies and

424
00:17:41,489 --> 00:17:43,649
security companies so maybe the zero

425
00:17:43,649 --> 00:17:45,600
access thoughts authors decided that

426
00:17:45,600 --> 00:17:49,549
bitcoin wasn't worth the trouble anymore

427
00:17:51,169 --> 00:17:53,610
so the final module we're going to look

428
00:17:53,610 --> 00:17:55,590
at is it's more of a general-purpose

429
00:17:55,590 --> 00:17:58,230
module but it's primarily used for click

430
00:17:58,230 --> 00:18:00,960
fraud so it makes an outbound HTTP

431
00:18:00,960 --> 00:18:04,110
request and a server responds with tasks

432
00:18:04,110 --> 00:18:06,509
for the module to perform this can be

433
00:18:06,509 --> 00:18:09,059
arbitrary file download and execute but

434
00:18:09,059 --> 00:18:10,799
currently it's only being used for click

435
00:18:10,799 --> 00:18:14,759
fraud so again with the outbound HTTP

436
00:18:14,759 --> 00:18:17,820
request the authors decide to spoof the

437
00:18:17,820 --> 00:18:21,299
whole field and the way this module does

438
00:18:21,299 --> 00:18:22,710
it is slightly more subtle than the

439
00:18:22,710 --> 00:18:25,470
previous module in that a initial DNS

440
00:18:25,470 --> 00:18:28,169
request is made to the fake domain but

441
00:18:28,169 --> 00:18:30,239
the response is ignored and the real

442
00:18:30,239 --> 00:18:32,369
address that the HTTP request is sent to

443
00:18:32,369 --> 00:18:35,249
is retrieved from the data module which

444
00:18:35,249 --> 00:18:36,389
is downloaded through the peer-to-peer

445
00:18:36,389 --> 00:18:40,289
network so because there's initial DNS

446
00:18:40,289 --> 00:18:42,779
requests it's very obvious to miss the

447
00:18:42,779 --> 00:18:44,399
fact that that address is not really

448
00:18:44,399 --> 00:18:46,169
being used when you're looking at a pcap

449
00:18:46,169 --> 00:18:49,049
file what complicates this is that if

450
00:18:49,049 --> 00:18:50,700
you're using an intersecting proxy to

451
00:18:50,700 --> 00:18:52,950
analyze the traffic the proxy itself

452
00:18:52,950 --> 00:18:54,809
will intercept the request make another

453
00:18:54,809 --> 00:18:57,239
DNS request and it will send it out to

454
00:18:57,239 --> 00:18:59,879
the actual address recede from DNS

455
00:18:59,879 --> 00:19:01,769
rather than address applied by zero

456
00:19:01,769 --> 00:19:04,859
access and this looks even worse when

457
00:19:04,859 --> 00:19:07,289
some of those fake domains are sinkhole

458
00:19:07,289 --> 00:19:11,309
by security researchers and so that when

459
00:19:11,309 --> 00:19:13,289
you're analyzing it in a proxy it looks

460
00:19:13,289 --> 00:19:15,480
very much like this component zero

461
00:19:15,480 --> 00:19:17,249
access has successfully been sinkhole

462
00:19:17,249 --> 00:19:19,289
and in fact it hasn't it's only the fake

463
00:19:19,289 --> 00:19:26,309
domain so this is the list of fixed fake

464
00:19:26,309 --> 00:19:28,230
domains that's embedded into the module

465
00:19:28,230 --> 00:19:30,539
they look random but they're fixed and

466
00:19:30,539 --> 00:19:32,369
once you have the list it's very easy to

467
00:19:32,369 --> 00:19:33,860
know what they are

468
00:19:33,860 --> 00:19:38,600
and this is the ignored DNS request so

469
00:19:38,600 --> 00:19:40,700
when the DNS requests initially goes out

470
00:19:40,700 --> 00:19:43,460
before the response is received a new

471
00:19:43,460 --> 00:19:46,220
tcp request new TCP connection is

472
00:19:46,220 --> 00:19:49,880
initiated an HTTP GET request is made to

473
00:19:49,880 --> 00:19:52,280
a different address which we eventually

474
00:19:52,280 --> 00:19:58,220
receive from the DNS request and we can

475
00:19:58,220 --> 00:19:59,840
see that the response is differ when the

476
00:19:59,840 --> 00:20:01,100
server is sync cold and when it's

477
00:20:01,100 --> 00:20:03,710
genuine the sinkhole server will respond

478
00:20:03,710 --> 00:20:05,630
with a very nice X sinkhole header

479
00:20:05,630 --> 00:20:07,490
whereas that doesn't appear in the

480
00:20:07,490 --> 00:20:09,320
genuine response and the server is

481
00:20:09,320 --> 00:20:11,030
different as well as Apache as opposed

482
00:20:11,030 --> 00:20:15,410
to engines so how much money might the

483
00:20:15,410 --> 00:20:19,400
zero access botnet be earning start by

484
00:20:19,400 --> 00:20:21,049
trying to estimate how much Bitcoin

485
00:20:21,049 --> 00:20:23,900
might be earning so previous work has

486
00:20:23,900 --> 00:20:25,970
put the possible number of Bitcoin

487
00:20:25,970 --> 00:20:30,049
mining nodes at around 500,000 if we

488
00:20:30,049 --> 00:20:32,360
give them a reasonably generous estimate

489
00:20:32,360 --> 00:20:35,090
of an average hash rate of four megan

490
00:20:35,090 --> 00:20:37,760
has per second this gives the total

491
00:20:37,760 --> 00:20:40,880
capacity of the mining pool at 2000 Giga

492
00:20:40,880 --> 00:20:43,520
hash per second so this is a reasonable

493
00:20:43,520 --> 00:20:45,380
size mining pool it's not one of the

494
00:20:45,380 --> 00:20:46,730
biggest on the internet but nevertheless

495
00:20:46,730 --> 00:20:50,090
is pretty good size so at various rates

496
00:20:50,090 --> 00:20:54,200
of exchange for Bitcoin and we can see

497
00:20:54,200 --> 00:20:57,350
that at ten dollars per bitcoin the

498
00:20:57,350 --> 00:20:58,970
botnet might be earning over six hundred

499
00:20:58,970 --> 00:21:01,490
dollars a day at two hundred it's more

500
00:21:01,490 --> 00:21:04,340
like 12,000 a day but we know that this

501
00:21:04,340 --> 00:21:06,620
module was disabled so it seems very

502
00:21:06,620 --> 00:21:09,770
unlikely that zeroaccess was managing to

503
00:21:09,770 --> 00:21:11,900
earn anywhere near these sorts of

504
00:21:11,900 --> 00:21:14,230
figures in terms of Bitcoin mining

505
00:21:14,230 --> 00:21:16,190
possibly for the reasons we outlined

506
00:21:16,190 --> 00:21:20,360
earlier so let me try and estimate how

507
00:21:20,360 --> 00:21:22,120
much money click fraud might be earning

508
00:21:22,120 --> 00:21:24,470
again we can only make some estimations

509
00:21:24,470 --> 00:21:27,980
and this depends very much on how often

510
00:21:27,980 --> 00:21:30,290
the fraudulent clicks that are executed

511
00:21:30,290 --> 00:21:33,190
by the module end up in money being

512
00:21:33,190 --> 00:21:35,360
attributed to the zero access authors

513
00:21:35,360 --> 00:21:37,720
and this in turn depends on how good the

514
00:21:37,720 --> 00:21:39,830
anti-fraud departments are in the

515
00:21:39,830 --> 00:21:41,990
various ad networks that are being

516
00:21:41,990 --> 00:21:45,380
defrauded so these two previous works go

517
00:21:45,380 --> 00:21:46,909
into detail about how to

518
00:21:46,909 --> 00:21:48,830
an estimate how much a botnet the size

519
00:21:48,830 --> 00:21:50,840
of zero access can earn through click

520
00:21:50,840 --> 00:21:53,059
fraud and it's a reasonable estimate to

521
00:21:53,059 --> 00:21:54,919
say that between 90 and two hundred

522
00:21:54,919 --> 00:21:56,720
thousand dollars a day could be made

523
00:21:56,720 --> 00:22:01,909
through click fraud so finally what

524
00:22:01,909 --> 00:22:04,279
conclusions can we draw well we know

525
00:22:04,279 --> 00:22:06,590
that zero access is a very resilient and

526
00:22:06,590 --> 00:22:10,039
long-lasting botnet it's been around for

527
00:22:10,039 --> 00:22:11,899
several years and is showing no signs

528
00:22:11,899 --> 00:22:14,690
whatsoever of dying out we know it's

529
00:22:14,690 --> 00:22:17,059
extremely widespread and there's an

530
00:22:17,059 --> 00:22:18,529
enormous number of new installs

531
00:22:18,529 --> 00:22:20,690
happening a day upwards of 100,000 new

532
00:22:20,690 --> 00:22:22,759
installations every day means that this

533
00:22:22,759 --> 00:22:26,419
is extremely widespread botnet and we

534
00:22:26,419 --> 00:22:28,039
know that the authors are very adaptable

535
00:22:28,039 --> 00:22:31,009
they very closely monitor publications

536
00:22:31,009 --> 00:22:33,349
from the security industry they've moved

537
00:22:33,349 --> 00:22:35,929
away from a kernel mode architecture to

538
00:22:35,929 --> 00:22:37,789
allow it to be more updateable more

539
00:22:37,789 --> 00:22:40,009
maintainable and user mode they've

540
00:22:40,009 --> 00:22:43,249
changed the peer-to-peer protocol and to

541
00:22:43,249 --> 00:22:45,019
make it more resistant to sink holing

542
00:22:45,019 --> 00:22:49,849
attempts they frequently use

543
00:22:49,849 --> 00:22:53,450
misdirection in the form of pointless

544
00:22:53,450 --> 00:22:55,820
domain generation algorithms décor URLs

545
00:22:55,820 --> 00:22:59,840
fake DNS requests to try and commit

546
00:22:59,840 --> 00:23:02,450
resources into areas that they shouldn't

547
00:23:02,450 --> 00:23:04,720
be there won't have any effect on

548
00:23:04,720 --> 00:23:08,210
destroying the zero access botnet we've

549
00:23:08,210 --> 00:23:10,429
seen they like to masquerade important

550
00:23:10,429 --> 00:23:12,909
network traffic as legitimate seeming

551
00:23:12,909 --> 00:23:15,590
network data so they try and hide it as

552
00:23:15,590 --> 00:23:18,649
ntp data as DNS data embed information

553
00:23:18,649 --> 00:23:22,129
in HTTP requests and we've seen they

554
00:23:22,129 --> 00:23:25,039
move away from more high profile money

555
00:23:25,039 --> 00:23:27,499
earning schemes like bitcoin to less

556
00:23:27,499 --> 00:23:30,440
noticeable schemes like click fold in an

557
00:23:30,440 --> 00:23:33,940
attempt to try and stay under the radar

558
00:23:35,080 --> 00:23:37,849
so that concludes presentation thank you

559
00:23:37,849 --> 00:23:39,619
very much for listening think as a

560
00:23:39,619 --> 00:23:41,769
practical

561
00:23:45,800 --> 00:23:48,330
we have time for a couple questions so

562
00:23:48,330 --> 00:23:56,700
is there any question in the room no

563
00:23:56,700 --> 00:23:58,890
question i have a small one for you

564
00:23:58,890 --> 00:24:03,240
James when you're describing the current

565
00:24:03,240 --> 00:24:06,450
control protocol you you show that one

566
00:24:06,450 --> 00:24:09,540
counter is returned to the but when it's

567
00:24:09,540 --> 00:24:11,610
reporting why do you think that the

568
00:24:11,610 --> 00:24:14,040
mower operator would disclose this

569
00:24:14,040 --> 00:24:16,980
information to any infected system what

570
00:24:16,980 --> 00:24:19,410
was question again sorry when the when

571
00:24:19,410 --> 00:24:21,510
the but is reporting after installation

572
00:24:21,510 --> 00:24:24,120
it it reports to a counter and the

573
00:24:24,120 --> 00:24:25,920
command control server returns the

574
00:24:25,920 --> 00:24:27,870
counter of the number of butts that were

575
00:24:27,870 --> 00:24:29,940
added are active why do you think that

576
00:24:29,940 --> 00:24:31,170
the operator is disclosing this

577
00:24:31,170 --> 00:24:34,650
information I think because it makes it

578
00:24:34,650 --> 00:24:37,110
seem less innocuous so it seems like

579
00:24:37,110 --> 00:24:41,100
it's just normal web request from the

580
00:24:41,100 --> 00:24:42,780
end point to a normal web counter it

581
00:24:42,780 --> 00:24:44,730
doesn't seem like its associated with

582
00:24:44,730 --> 00:24:46,620
zero access I think that's the main

583
00:24:46,620 --> 00:24:48,060
reason for it but it's also something

584
00:24:48,060 --> 00:24:50,820
that this technique tends to be used

585
00:24:50,820 --> 00:24:53,460
sometimes for example it was used all

586
00:24:53,460 --> 00:24:56,010
the time last last year start to be used

587
00:24:56,010 --> 00:24:57,570
again by part of the botnet this year

588
00:24:57,570 --> 00:24:59,220
and now they've dropped that technique

589
00:24:59,220 --> 00:25:01,110
because they tend it people are starting

590
00:25:01,110 --> 00:25:07,350
to notice what they're doing we're

591
00:25:07,350 --> 00:25:09,530
pushing

592
00:25:10,999 --> 00:25:16,109
hi James the the news last couple of

593
00:25:16,109 --> 00:25:21,289
days that symantec have been supposedly

594
00:25:21,289 --> 00:25:24,479
cleaned up a quarter of all infections

595
00:25:24,479 --> 00:25:26,159
what do you think that this will have

596
00:25:26,159 --> 00:25:31,259
done 40 access and so yeah they're

597
00:25:31,259 --> 00:25:34,979
apparently 500,000 infected machines

598
00:25:34,979 --> 00:25:38,209
have been sink hold and so anything that

599
00:25:38,209 --> 00:25:41,129
inconvenience is the malware authors is

600
00:25:41,129 --> 00:25:44,759
fine by me but when you've got upwards

601
00:25:44,759 --> 00:25:46,619
of 100,000 new installations every day

602
00:25:46,619 --> 00:25:48,659
it doesn't take very long before you

603
00:25:48,659 --> 00:25:51,359
regain those sinkhole nodes and they

604
00:25:51,359 --> 00:25:53,309
also updated the peer-to-peer protocol

605
00:25:53,309 --> 00:25:55,499
so that you can no longer sinkhole new

606
00:25:55,499 --> 00:25:58,619
nodes and and certainly in our

607
00:25:58,619 --> 00:26:00,389
statistics have seen over the last month

608
00:26:00,389 --> 00:26:04,169
or so a large spike in new 0 access

609
00:26:04,169 --> 00:26:06,299
droppers as they're seeking to rapidly

610
00:26:06,299 --> 00:26:08,369
replace the sink hold nodes so I think

611
00:26:08,369 --> 00:26:10,559
we're basically pretty much back to

612
00:26:10,559 --> 00:26:12,179
where we were before the sinkhole in

613
00:26:12,179 --> 00:26:14,509
happened

614
00:26:19,309 --> 00:26:20,779
James do you think there is a

615
00:26:20,779 --> 00:26:22,210
correlation between the price and

616
00:26:22,210 --> 00:26:24,889
exchange rate for bitcoins and how many

617
00:26:24,889 --> 00:26:27,740
botnets are actually involved in mining

618
00:26:27,740 --> 00:26:32,600
and it's good question and to be honest

619
00:26:32,600 --> 00:26:35,210
i don't think the mining aspect has a

620
00:26:35,210 --> 00:26:38,409
huge impact on the price of Bitcoin

621
00:26:38,409 --> 00:26:42,830
there it's much more to do with some

622
00:26:42,830 --> 00:26:45,080
extremely suspicious trading activity

623
00:26:45,080 --> 00:26:48,139
and where if you watch the price against

624
00:26:48,139 --> 00:26:51,889
certain block trades that happen you can

625
00:26:51,889 --> 00:26:54,350
see that you can almost predict the

626
00:26:54,350 --> 00:26:55,909
risers and fallers certainly when there

627
00:26:55,909 --> 00:26:57,740
was going through big peaks and big

628
00:26:57,740 --> 00:26:59,629
trusts you could almost sort of pots

629
00:26:59,629 --> 00:27:01,100
plot the pattern where it was going to

630
00:27:01,100 --> 00:27:03,289
peak and you can see lots and lots of

631
00:27:03,289 --> 00:27:05,929
suspicious activity sort of trying to

632
00:27:05,929 --> 00:27:07,669
manipulate the price so that people can

633
00:27:07,669 --> 00:27:08,990
just drop their coins buy them again

634
00:27:08,990 --> 00:27:10,879
cheap and then sell them again I think

635
00:27:10,879 --> 00:27:13,210
the mining functionality from botnets

636
00:27:13,210 --> 00:27:15,830
represents a relatively small portion of

637
00:27:15,830 --> 00:27:17,840
the amount of Bitcoin mining that's

638
00:27:17,840 --> 00:27:22,039
going on I'm not sure that it really

639
00:27:22,039 --> 00:27:25,549
works that well as a concept because the

640
00:27:25,549 --> 00:27:27,889
when you look at the really large public

641
00:27:27,889 --> 00:27:29,240
mining pools on the Internet the

642
00:27:29,240 --> 00:27:32,600
capacity they have is enormous and the

643
00:27:32,600 --> 00:27:34,929
people performing the mining have

644
00:27:34,929 --> 00:27:37,490
systems that are vastly different to the

645
00:27:37,490 --> 00:27:39,080
kind of systems that get infected by

646
00:27:39,080 --> 00:27:41,419
normal malware the hash capacity of

647
00:27:41,419 --> 00:27:43,970
normal machine is pretty miniscule its

648
00:27:43,970 --> 00:27:46,730
orders of magnitude more massive when

649
00:27:46,730 --> 00:27:47,929
you're actually building a system

650
00:27:47,929 --> 00:27:51,369
designed to do Bitcoin mining

651
00:27:55,389 --> 00:27:57,489
right so thank you again for this

652
00:27:57,489 --> 00:27:59,999
presentation

