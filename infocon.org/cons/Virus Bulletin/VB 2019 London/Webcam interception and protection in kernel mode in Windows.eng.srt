1
00:00:00,060 --> 00:00:06,839
a few years ago Mark Zuckerberg became

2
00:00:06,839 --> 00:00:13,290
quite infamous for posting a photograph

3
00:00:13,290 --> 00:00:16,740
where in the back taken on the Facebook

4
00:00:16,740 --> 00:00:18,390
offices and in the background was his

5
00:00:18,390 --> 00:00:20,160
workstation and there was a very obvious

6
00:00:20,160 --> 00:00:23,359
piece of sticky tape over the webcam and

7
00:00:23,359 --> 00:00:25,800
that drew an enormous amount of

8
00:00:25,800 --> 00:00:28,920
attention it got posted and reposted and

9
00:00:28,920 --> 00:00:30,779
people talked about it there were media

10
00:00:30,779 --> 00:00:32,759
news articles written about and all

11
00:00:32,759 --> 00:00:35,250
kinds of things and little devices like

12
00:00:35,250 --> 00:00:37,710
this had existed before and probably

13
00:00:37,710 --> 00:00:40,530
became much more popular in fact so much

14
00:00:40,530 --> 00:00:42,570
so that my new laptop that I got earlier

15
00:00:42,570 --> 00:00:45,059
this year actually has one built in the

16
00:00:45,059 --> 00:00:47,960
manufacturers building them and now and

17
00:00:47,960 --> 00:00:50,730
the reason is because of issues around

18
00:00:50,730 --> 00:00:53,309
webcam security and concerns about that

19
00:00:53,309 --> 00:00:57,660
and Michael melts up from reason

20
00:00:57,660 --> 00:01:00,149
cybersecurity is going to talk to you

21
00:01:00,149 --> 00:01:02,250
he's going to get quite deep into the

22
00:01:02,250 --> 00:01:05,369
internals of controlling webcams and the

23
00:01:05,369 --> 00:01:07,500
Windows kernel it's a quite fascinating

24
00:01:07,500 --> 00:01:09,750
presentation so without any further

25
00:01:09,750 --> 00:01:11,490
introduction or the mic we'll take it

26
00:01:11,490 --> 00:01:14,610
away thank you very much hi everyone and

27
00:01:14,610 --> 00:01:16,650
welcome to the talk about webcam

28
00:01:16,650 --> 00:01:18,840
interception and protection in kernel

29
00:01:18,840 --> 00:01:21,240
mode in Windows and we'll get back to

30
00:01:21,240 --> 00:01:24,390
Mark Zuckerberg and your note okay

31
00:01:24,390 --> 00:01:26,610
just a second before I begin I will make

32
00:01:26,610 --> 00:01:29,820
a quick introduction so I am mike amato

33
00:01:29,820 --> 00:01:32,820
and i am a developer and a researcher in

34
00:01:32,820 --> 00:01:36,240
a company recent cyber security our

35
00:01:36,240 --> 00:01:39,119
company was founded in 2012 by andrew

36
00:01:39,119 --> 00:01:39,979
new one

37
00:01:39,979 --> 00:01:43,409
we are we're focused on privacy

38
00:01:43,409 --> 00:01:46,770
protection and we have several relevant

39
00:01:46,770 --> 00:01:49,890
products our flagship product is Reason

40
00:01:49,890 --> 00:01:53,280
antivirus and this product has a

41
00:01:53,280 --> 00:01:56,130
considerable amount of users and we scan

42
00:01:56,130 --> 00:01:58,560
a huge amount of files every day and

43
00:01:58,560 --> 00:02:01,500
have quite a bit of insights for more

44
00:02:01,500 --> 00:02:02,909
details you are more than welcome to

45
00:02:02,909 --> 00:02:05,010
come to our booth and

46
00:02:05,010 --> 00:02:08,820
and get more details our outline for

47
00:02:08,820 --> 00:02:11,760
this talk will be we're going to talk

48
00:02:11,760 --> 00:02:14,010
about the importance of webkinz security

49
00:02:14,010 --> 00:02:17,220
then we're going to mention a different

50
00:02:17,220 --> 00:02:18,810
multimedia frameworks that are available

51
00:02:18,810 --> 00:02:21,810
in Windows and allow programs to access

52
00:02:21,810 --> 00:02:24,690
the webcam afterwards we are going to

53
00:02:24,690 --> 00:02:26,580
talk about attack strategies that an

54
00:02:26,580 --> 00:02:30,300
attacker can use in order to spy a

55
00:02:30,300 --> 00:02:34,220
victim and then we're going to develop a

56
00:02:34,220 --> 00:02:36,990
kernel mode the protection driver on

57
00:02:36,990 --> 00:02:41,120
Windows to defend ourselves from a

58
00:02:41,120 --> 00:02:44,700
unwanted camera usage and finally we're

59
00:02:44,700 --> 00:02:46,350
going to look at existing protection

60
00:02:46,350 --> 00:02:48,440
solutions on the market and compare them

61
00:02:48,440 --> 00:02:52,320
great so the importance of web cam

62
00:02:52,320 --> 00:02:55,980
security I assume that every one of you

63
00:02:55,980 --> 00:02:58,050
are almost every one of you has a laptop

64
00:02:58,050 --> 00:03:01,220
or a desktop computer that has a webcam

65
00:03:01,220 --> 00:03:05,120
either built-in or a USB camera whatever

66
00:03:05,120 --> 00:03:09,450
so this will be relevant for almost

67
00:03:09,450 --> 00:03:10,350
every one of you

68
00:03:10,350 --> 00:03:12,990
so you might wonder whether it's even

69
00:03:12,990 --> 00:03:15,840
worth talking about so there are several

70
00:03:15,840 --> 00:03:20,160
reasons and that can it can be relevant

71
00:03:20,160 --> 00:03:24,510
for you and I wish I wish 3 so first of

72
00:03:24,510 --> 00:03:27,420
all global surveillance right I don't

73
00:03:27,420 --> 00:03:29,790
need to elaborate and it's a snow then

74
00:03:29,790 --> 00:03:32,790
maybe of her hacking team and so cetera

75
00:03:32,790 --> 00:03:36,150
etc I want to elaborate I will just say

76
00:03:36,150 --> 00:03:38,730
that as there are documents with

77
00:03:38,730 --> 00:03:40,950
documents that specific we talked about

78
00:03:40,950 --> 00:03:44,010
webcam usage for spying on victims and

79
00:03:44,010 --> 00:03:48,560
there is also a source code which which

80
00:03:48,560 --> 00:03:53,330
uses the camera of those companies and

81
00:03:53,330 --> 00:03:58,310
and governments alright so this is a

82
00:03:58,310 --> 00:04:02,280
possible way for somebody to misuse your

83
00:04:02,280 --> 00:04:06,110
camera but you might say that your

84
00:04:06,110 --> 00:04:09,150
regular boring guy you're going to work

85
00:04:09,150 --> 00:04:10,770
when going back home you're not an

86
00:04:10,770 --> 00:04:12,239
activist or something this is not

87
00:04:12,239 --> 00:04:14,880
relevant for you so there are other

88
00:04:14,880 --> 00:04:17,040
reasons it might be more relevant for

89
00:04:17,040 --> 00:04:17,529
you

90
00:04:17,529 --> 00:04:20,048
one other example is Tokyo where all

91
00:04:20,048 --> 00:04:22,300
rights Tokyo where is a relatively new

92
00:04:22,300 --> 00:04:25,990
term which talks about program which is

93
00:04:25,990 --> 00:04:29,200
like an adware with a certificate all

94
00:04:29,200 --> 00:04:31,180
right you can purchase it and store it

95
00:04:31,180 --> 00:04:33,580
on somebody's computer and take over it

96
00:04:33,580 --> 00:04:36,820
including accessing the camera now it

97
00:04:36,820 --> 00:04:40,120
might have widget a usage for example

98
00:04:40,120 --> 00:04:43,090
parental control but it might also be

99
00:04:43,090 --> 00:04:45,400
installed on your computer by somebody

100
00:04:45,400 --> 00:04:48,610
and maybe a friend your coworker your

101
00:04:48,610 --> 00:04:52,060
spouse whatever so you better be aware

102
00:04:52,060 --> 00:04:55,360
of it and be ready to protect yourself

103
00:04:55,360 --> 00:04:58,960
and last but not least an example of

104
00:04:58,960 --> 00:05:01,450
webcam ransom right so it happened

105
00:05:01,450 --> 00:05:04,030
before and it probably happens also

106
00:05:04,030 --> 00:05:07,210
nowadays so some random guy over the

107
00:05:07,210 --> 00:05:09,430
world can check over your computer they

108
00:05:09,430 --> 00:05:12,400
use your camera to capture some

109
00:05:12,400 --> 00:05:15,010
unfortunate moment of yours and ask for

110
00:05:15,010 --> 00:05:16,990
an ransom that if it's not going to be

111
00:05:16,990 --> 00:05:20,830
paid it is this video is going to be

112
00:05:20,830 --> 00:05:23,229
published which is not a pleasant

113
00:05:23,229 --> 00:05:24,640
situation to be in

114
00:05:24,640 --> 00:05:28,720
right and finally an extra food for shot

115
00:05:28,720 --> 00:05:31,270
just like Mark said right Mark

116
00:05:31,270 --> 00:05:33,690
Zuckerberg this is the popular

117
00:05:33,690 --> 00:05:37,060
photograph so he knows a thing or two

118
00:05:37,060 --> 00:05:42,610
about privacy so you probably can think

119
00:05:42,610 --> 00:05:48,400
about it and make conclusions great so

120
00:05:48,400 --> 00:05:52,330
now that I hope we manage to make a

121
00:05:52,330 --> 00:05:56,890
point that this is a topic worse worst

122
00:05:56,890 --> 00:06:01,210
considering right so we will dive into

123
00:06:01,210 --> 00:06:03,790
the technology and for beginning we will

124
00:06:03,790 --> 00:06:05,350
with the multimedia framework on

125
00:06:05,350 --> 00:06:08,470
frameworks on windows so the first

126
00:06:08,470 --> 00:06:10,800
multimedia framework which allowed

127
00:06:10,800 --> 00:06:13,060
applications to access the camera on

128
00:06:13,060 --> 00:06:16,810
Windows was VFW short for video for

129
00:06:16,810 --> 00:06:20,290
windows it was released in 1992 was

130
00:06:20,290 --> 00:06:23,800
available on Windows 95 and newer and

131
00:06:23,800 --> 00:06:26,560
nowadays it's obsolete but there is a

132
00:06:26,560 --> 00:06:28,780
compatibility layer which allows old

133
00:06:28,780 --> 00:06:29,620
programs

134
00:06:29,620 --> 00:06:32,910
to still operate and they use the camera

135
00:06:32,910 --> 00:06:34,090
afterwards

136
00:06:34,090 --> 00:06:36,880
in 1996 in the direct show and

137
00:06:36,880 --> 00:06:38,710
multimedia framework was released and

138
00:06:38,710 --> 00:06:43,360
finally in 2006 and the newest framework

139
00:06:43,360 --> 00:06:48,100
up today a media foundation and if we

140
00:06:48,100 --> 00:06:51,220
zoom in and see the flow on the wall

141
00:06:51,220 --> 00:06:53,830
level and let's assume that we have a

142
00:06:53,830 --> 00:06:56,530
program called webcam capture latexing

143
00:06:56,530 --> 00:06:59,980
right and it accesses the camera the

144
00:06:59,980 --> 00:07:02,050
webcam on the computer what happens on

145
00:07:02,050 --> 00:07:04,500
the recovers that it ends up loading the

146
00:07:04,500 --> 00:07:08,860
multimedia framework DLL it can be video

147
00:07:08,860 --> 00:07:12,340
for Windows and direct role or a media

148
00:07:12,340 --> 00:07:15,610
foundation right and finally this

149
00:07:15,610 --> 00:07:18,490
library communicates with the kernel

150
00:07:18,490 --> 00:07:21,610
mode driver which gets the stream from

151
00:07:21,610 --> 00:07:24,820
the camera and The Weavers it to the

152
00:07:24,820 --> 00:07:27,340
application now for the scope of our

153
00:07:27,340 --> 00:07:30,550
talk it's not very relevant which a

154
00:07:30,550 --> 00:07:33,580
media framework is being used right so

155
00:07:33,580 --> 00:07:35,410
the frameworks are different they have

156
00:07:35,410 --> 00:07:37,240
different capabilities different api's

157
00:07:37,240 --> 00:07:40,720
maybe support different resolutions but

158
00:07:40,720 --> 00:07:43,390
at the level it doesn't really matter

159
00:07:43,390 --> 00:07:45,330
because the program at the end

160
00:07:45,330 --> 00:07:48,040
communicates to the kernel mode driver

161
00:07:48,040 --> 00:07:50,800
in the same way and this is what we're

162
00:07:50,800 --> 00:07:52,900
interested in in our talk right this

163
00:07:52,900 --> 00:07:54,460
communication between the user mode

164
00:07:54,460 --> 00:07:56,560
world and the kernel mode because this

165
00:07:56,560 --> 00:07:59,050
is what we're going to intercept so a

166
00:07:59,050 --> 00:08:00,360
techno

167
00:08:00,360 --> 00:08:04,200
great now this was the architecture

168
00:08:04,200 --> 00:08:07,480
before the introduction of Windows 10

169
00:08:07,480 --> 00:08:09,430
anniversary update Windows 10

170
00:08:09,430 --> 00:08:11,730
anniversary update brought with it two

171
00:08:11,730 --> 00:08:14,410
innovations to the architecture of

172
00:08:14,410 --> 00:08:17,290
webcams on Windows so the first one is

173
00:08:17,290 --> 00:08:19,960
called digital bridge a digital bridge

174
00:08:19,960 --> 00:08:22,690
is basically a proxy which allows

175
00:08:22,690 --> 00:08:25,450
applications designed for direct Joe to

176
00:08:25,450 --> 00:08:28,690
use media foundation under the covers it

177
00:08:28,690 --> 00:08:31,510
can be enabled or disabled per a camera

178
00:08:31,510 --> 00:08:34,809
device and applications can be

179
00:08:34,809 --> 00:08:37,059
blacklisted from using it in the

180
00:08:37,059 --> 00:08:41,650
registry just a side note there is a

181
00:08:41,650 --> 00:08:43,159
launcher mind

182
00:08:43,159 --> 00:08:45,079
take the entry in the registry which

183
00:08:45,079 --> 00:08:48,319
comes out of the box with Windows and it

184
00:08:48,319 --> 00:08:50,629
was probably created for compatibility

185
00:08:50,629 --> 00:08:53,690
reasons for with a program of Logitech

186
00:08:53,690 --> 00:08:56,209
so it is handy for testing right you can

187
00:08:56,209 --> 00:08:58,339
call your program I want your men and it

188
00:08:58,339 --> 00:09:00,589
won't use the dish or bridge

189
00:09:00,589 --> 00:09:03,560
great and the second and the more

190
00:09:03,560 --> 00:09:05,389
interesting innovation is the frame

191
00:09:05,389 --> 00:09:08,569
server the frame server was introduced a

192
00:09:08,569 --> 00:09:10,699
just like digital bridge in a Windows 10

193
00:09:10,699 --> 00:09:13,819
anniversary update and it is a server

194
00:09:13,819 --> 00:09:16,069
which allows the camera device to be

195
00:09:16,069 --> 00:09:18,829
shared between multiple applications now

196
00:09:18,829 --> 00:09:22,069
this is in theory in practice as the

197
00:09:22,069 --> 00:09:24,670
sharing capabilities reserved only for

198
00:09:24,670 --> 00:09:27,980
Microsoft edge services such as Windows

199
00:09:27,980 --> 00:09:30,680
hello and the hololens and maybe some

200
00:09:30,680 --> 00:09:34,250
others so still if two regular

201
00:09:34,250 --> 00:09:36,740
applications try to use a camera device

202
00:09:36,740 --> 00:09:39,439
at the same time as the second one will

203
00:09:39,439 --> 00:09:42,560
fail for regular apps it's the access is

204
00:09:42,560 --> 00:09:46,910
still exclusive and if we look at the

205
00:09:46,910 --> 00:09:49,699
architecture and the low-level flow of a

206
00:09:49,699 --> 00:09:51,920
program which accesses the camera by

207
00:09:51,920 --> 00:09:53,750
using the frame server is going to okhla

208
00:09:53,750 --> 00:09:56,569
exists so we have the webcam capture

209
00:09:56,569 --> 00:09:59,720
detects a program which tries to access

210
00:09:59,720 --> 00:10:02,990
the camera it ends up adding and the

211
00:10:02,990 --> 00:10:06,680
frame frame server client dll a library

212
00:10:06,680 --> 00:10:08,689
which operates a frame server from

213
00:10:08,689 --> 00:10:14,029
usermod this dll this rubbery ends up

214
00:10:14,029 --> 00:10:16,130
communicating with a frame server

215
00:10:16,130 --> 00:10:20,019
service via RPC remote procedure call

216
00:10:20,019 --> 00:10:23,839
and it sends it comments right like

217
00:10:23,839 --> 00:10:27,680
start capturing stop capturing etc once

218
00:10:27,680 --> 00:10:30,410
the frame server got the command to

219
00:10:30,410 --> 00:10:32,779
start capturing from the camera it

220
00:10:32,779 --> 00:10:35,660
basically and does the work just like

221
00:10:35,660 --> 00:10:38,209
we've seen before with media foundation

222
00:10:38,209 --> 00:10:42,230
so the lower part of this graph of this

223
00:10:42,230 --> 00:10:44,569
wall is just the same as we've seen

224
00:10:44,569 --> 00:10:46,970
several flights before right a regular

225
00:10:46,970 --> 00:10:49,639
usage of media foundation a just that

226
00:10:49,639 --> 00:10:52,730
instead of a regular program we have

227
00:10:52,730 --> 00:10:55,339
this service which is part of the

228
00:10:55,339 --> 00:10:57,220
operating system

229
00:10:57,220 --> 00:11:00,020
so it starts capturing from the camera

230
00:11:00,020 --> 00:11:02,270
and it publishes the frames it sends the

231
00:11:02,270 --> 00:11:05,000
frames to another a kernel-mode driver

232
00:11:05,000 --> 00:11:06,950
which is part of the operating system a

233
00:11:06,950 --> 00:11:11,030
code is a kernel streaming server so

234
00:11:11,030 --> 00:11:16,880
here it is right and finally the frame

235
00:11:16,880 --> 00:11:20,530
server client you get those frames and

236
00:11:20,530 --> 00:11:23,930
they end up being in the control of our

237
00:11:23,930 --> 00:11:25,820
program webcam capture dot ezza

238
00:11:25,820 --> 00:11:28,610
and it can display the frames right to

239
00:11:28,610 --> 00:11:30,560
the user or save them on disk or or

240
00:11:30,560 --> 00:11:33,740
whatever so as you can see a things got

241
00:11:33,740 --> 00:11:36,170
a little bit more complex with the

242
00:11:36,170 --> 00:11:38,180
introduction of the frame server and the

243
00:11:38,180 --> 00:11:40,040
verbs that you can imagine how more than

244
00:11:40,040 --> 00:11:43,070
one program can be in this flow and the

245
00:11:43,070 --> 00:11:47,930
share is the same a camera device great

246
00:11:47,930 --> 00:11:50,900
a couple of additional facts about the

247
00:11:50,900 --> 00:11:54,590
frame server so it is enabled only for

248
00:11:54,590 --> 00:11:56,090
applications which use a media

249
00:11:56,090 --> 00:11:59,960
foundation is there directly or via the

250
00:11:59,960 --> 00:12:03,830
digital bridge it can be disabled in the

251
00:12:03,830 --> 00:12:05,750
registry but it is enabled by default

252
00:12:05,750 --> 00:12:09,500
and fun fact it is disabled for

253
00:12:09,500 --> 00:12:12,170
applications host pass it contains the

254
00:12:12,170 --> 00:12:16,160
string real sense DCM and also probably

255
00:12:16,160 --> 00:12:19,910
for compatibility with some software of

256
00:12:19,910 --> 00:12:23,180
Intel and also it is handy for testing

257
00:12:23,180 --> 00:12:25,460
right if you don't want a program to use

258
00:12:25,460 --> 00:12:27,770
the frame server just make sure that the

259
00:12:27,770 --> 00:12:29,960
string gives in your path and you are

260
00:12:29,960 --> 00:12:34,670
good to go great so basically this is

261
00:12:34,670 --> 00:12:40,300
the architecture and we can proceed and

262
00:12:40,300 --> 00:12:43,550
develop a kernel mode icon or driver but

263
00:12:43,550 --> 00:12:45,830
just before we do that in order to get

264
00:12:45,830 --> 00:12:48,380
the full picture we will see it attack

265
00:12:48,380 --> 00:12:50,270
strategist and see what are the options

266
00:12:50,270 --> 00:12:52,550
of an attacker so that we will know what

267
00:12:52,550 --> 00:12:56,780
to defend against right okay so let's

268
00:12:56,780 --> 00:12:59,210
imagine for a moment that we are the bad

269
00:12:59,210 --> 00:13:01,760
guys we took over a computer remote

270
00:13:01,760 --> 00:13:04,430
computer and which runs on Windows and

271
00:13:04,430 --> 00:13:06,360
we know that this computer

272
00:13:06,360 --> 00:13:10,440
webcam and we know we want to use this

273
00:13:10,440 --> 00:13:12,480
webcam to spy on the victim for our

274
00:13:12,480 --> 00:13:16,279
evening's right so what are our options

275
00:13:16,279 --> 00:13:20,160
first option is simple just start

276
00:13:20,160 --> 00:13:22,769
recording so we have this computer there

277
00:13:22,769 --> 00:13:26,160
are many common line tools open source

278
00:13:26,160 --> 00:13:28,500
code that we can use we can get started

279
00:13:28,500 --> 00:13:31,380
in several minutes right so start

280
00:13:31,380 --> 00:13:34,649
recording and then get the data so the

281
00:13:34,649 --> 00:13:36,269
advantage of this is it this is very

282
00:13:36,269 --> 00:13:38,430
simple and accessible Windows doesn't

283
00:13:38,430 --> 00:13:39,300
ask questions

284
00:13:39,300 --> 00:13:42,450
and the downside is that there is this

285
00:13:42,450 --> 00:13:45,810
weather indicator which is available on

286
00:13:45,810 --> 00:13:48,630
almost every camera device and it will

287
00:13:48,630 --> 00:13:52,529
expose our our activity it's not a cure

288
00:13:52,529 --> 00:13:55,050
and so the victim can see that there is

289
00:13:55,050 --> 00:13:57,510
an unusual wet indicator and there may

290
00:13:57,510 --> 00:14:00,810
be put a tape on the camera or format

291
00:14:00,810 --> 00:14:03,930
the computer or whatever so we don't

292
00:14:03,930 --> 00:14:07,220
want this another option that we have is

293
00:14:07,220 --> 00:14:10,890
what I call stealth we can take over an

294
00:14:10,890 --> 00:14:14,220
existing session of a camera usage for

295
00:14:14,220 --> 00:14:17,339
example when the victim man uses a Skype

296
00:14:17,339 --> 00:14:20,160
or Chrome or whatever and hijack the

297
00:14:20,160 --> 00:14:22,560
session and get the camera recording and

298
00:14:22,560 --> 00:14:25,980
send it to us as an attacker so this is

299
00:14:25,980 --> 00:14:28,769
something that can work and it doesn't

300
00:14:28,769 --> 00:14:31,470
expose us why as an usual indicator web

301
00:14:31,470 --> 00:14:34,019
and on the one hand on the other hand it

302
00:14:34,019 --> 00:14:36,660
has serious drawbacks that we can no

303
00:14:36,660 --> 00:14:40,440
longer choose when to record right so it

304
00:14:40,440 --> 00:14:42,390
might be more difficult for us as an

305
00:14:42,390 --> 00:14:44,910
attacker to get more valuable captures

306
00:14:44,910 --> 00:14:48,480
that we can use also it is not as easy

307
00:14:48,480 --> 00:14:51,449
to implement finally we have a third

308
00:14:51,449 --> 00:14:55,620
option we shall call record mode so it's

309
00:14:55,620 --> 00:14:57,480
similar to the first one just start

310
00:14:57,480 --> 00:14:59,579
recording right but with the wet turned

311
00:14:59,579 --> 00:15:02,850
off and now in theory it shouldn't be

312
00:15:02,850 --> 00:15:04,829
possible right you shouldn't be able to

313
00:15:04,829 --> 00:15:07,050
use a camera while the web is not turned

314
00:15:07,050 --> 00:15:09,240
on but in practice there are several

315
00:15:09,240 --> 00:15:11,640
vendors which allow this one way or

316
00:15:11,640 --> 00:15:13,550
another

317
00:15:13,550 --> 00:15:16,070
vendors having a documented or

318
00:15:16,070 --> 00:15:18,260
undocumented option for example registry

319
00:15:18,260 --> 00:15:20,450
option to turn of the indicator LED and

320
00:15:20,450 --> 00:15:24,980
other vendors and implemented in the

321
00:15:24,980 --> 00:15:28,519
software so the firmer or the files can

322
00:15:28,519 --> 00:15:30,980
be patched and then the indicator that

323
00:15:30,980 --> 00:15:33,529
can be turned off while the camera still

324
00:15:33,529 --> 00:15:36,860
operates so it's not theoretical which

325
00:15:36,860 --> 00:15:38,570
was done before several times for

326
00:15:38,570 --> 00:15:40,850
several vendors and here's the video

327
00:15:40,850 --> 00:15:43,839
which demonstrates once at usage from

328
00:15:43,839 --> 00:15:51,550
2013 all right let's see it hey audio

329
00:15:52,149 --> 00:15:55,579
never mind there are subtitles right so

330
00:15:55,579 --> 00:15:58,279
there is a webcam and here's an

331
00:15:58,279 --> 00:16:01,370
indicator LED and here is a guy who page

332
00:16:01,370 --> 00:16:04,310
the files replaces them right and now

333
00:16:04,310 --> 00:16:06,019
there's a webcam as you can see the

334
00:16:06,019 --> 00:16:08,660
webcam operates but there is no web

335
00:16:08,660 --> 00:16:11,930
turned on so it's possible it was done

336
00:16:11,930 --> 00:16:14,930
in 2013 this time it was done afterwards

337
00:16:14,930 --> 00:16:17,750
and it was done via the street for other

338
00:16:17,750 --> 00:16:23,720
models so if you until this day I hope

339
00:16:23,720 --> 00:16:26,810
that you can rely on the indicator head

340
00:16:26,810 --> 00:16:29,120
to see if your camera has been used or

341
00:16:29,120 --> 00:16:31,399
not you can see that it can be bypassed

342
00:16:31,399 --> 00:16:36,920
for several models so take notice great

343
00:16:36,920 --> 00:16:39,709
so those are the attack strategies right

344
00:16:39,709 --> 00:16:41,420
the options of the attack are now that

345
00:16:41,420 --> 00:16:43,190
you are familiar with this we're

346
00:16:43,190 --> 00:16:46,850
familiar with the architecture let's try

347
00:16:46,850 --> 00:16:50,329
to implement a protection kernel-mode

348
00:16:50,329 --> 00:16:52,399
protection driver from Windows which

349
00:16:52,399 --> 00:16:56,300
will and find ourself from from unwanted

350
00:16:56,300 --> 00:17:00,760
camera usage and great so if we will

351
00:17:00,760 --> 00:17:04,369
take on this task and we'll try to find

352
00:17:04,369 --> 00:17:06,079
some information on the Internet

353
00:17:06,079 --> 00:17:08,419
you will find out that it's mostly

354
00:17:08,419 --> 00:17:10,160
undocumented there is no much

355
00:17:10,160 --> 00:17:14,569
information almost no examples and

356
00:17:14,569 --> 00:17:16,760
there's no know something that you can

357
00:17:16,760 --> 00:17:20,000
just take and use but after some

358
00:17:20,000 --> 00:17:22,220
research you will be able to come to the

359
00:17:22,220 --> 00:17:24,199
conclusion the way to go with this is to

360
00:17:24,199 --> 00:17:25,010
implement a

361
00:17:25,010 --> 00:17:29,240
filter driver and to to be placed

362
00:17:29,240 --> 00:17:32,030
between the kernel mode camera driver

363
00:17:32,030 --> 00:17:35,929
and the user mode world and before we

364
00:17:35,929 --> 00:17:38,660
proceed in implementing an actual

365
00:17:38,660 --> 00:17:41,240
protection driver let's implement a

366
00:17:41,240 --> 00:17:43,730
simple filter lever which logs the

367
00:17:43,730 --> 00:17:46,520
Europe's pass through Tuesday and Driver

368
00:17:46,520 --> 00:17:49,700
and the logs everything sorted to see

369
00:17:49,700 --> 00:17:51,710
the flow and we'll see what's even going

370
00:17:51,710 --> 00:17:53,090
on there right

371
00:17:53,090 --> 00:17:56,630
and here is an i/o request packet it's

372
00:17:56,630 --> 00:17:58,970
basically a message which is being sent

373
00:17:58,970 --> 00:18:02,240
to the to the kernel mode device like

374
00:18:02,240 --> 00:18:04,340
for example start caption from the

375
00:18:04,340 --> 00:18:06,710
camera get the next frame stop capturing

376
00:18:06,710 --> 00:18:09,770
etc we will soon see a several other

377
00:18:09,770 --> 00:18:12,830
examples so it's going to exist we have

378
00:18:12,830 --> 00:18:15,559
our program again our example we can

379
00:18:15,559 --> 00:18:19,610
capture detects and it sends comments to

380
00:18:19,610 --> 00:18:21,919
the camera and can AMA driver and our

381
00:18:21,919 --> 00:18:23,830
filter driver will be placed between the

382
00:18:23,830 --> 00:18:26,540
camera Kenema driver and the user mode

383
00:18:26,540 --> 00:18:30,350
world so we implemented such driver

384
00:18:30,350 --> 00:18:33,559
which walks everything and here's where

385
00:18:33,559 --> 00:18:36,049
the most interesting in relevant ears it

386
00:18:36,049 --> 00:18:39,860
comes true so the first two are creating

387
00:18:39,860 --> 00:18:43,669
two handles for further usage of the

388
00:18:43,669 --> 00:18:45,559
camera the first one is the kernel

389
00:18:45,559 --> 00:18:47,150
streaming filter and the second one is

390
00:18:47,150 --> 00:18:50,270
the kernel streaming pin so the meaning

391
00:18:50,270 --> 00:18:52,549
of these terms are a bit out of scope

392
00:18:52,549 --> 00:18:54,740
for his talk but let's just assume that

393
00:18:54,740 --> 00:18:57,049
they are necessary for the operation of

394
00:18:57,049 --> 00:19:01,160
the webcam afterwards and several

395
00:19:01,160 --> 00:19:04,900
comments are being sent of the type a

396
00:19:04,900 --> 00:19:08,000
case property connection state basically

397
00:19:08,000 --> 00:19:10,160
those comments change the state of the

398
00:19:10,160 --> 00:19:13,610
camera the first one is a change the to

399
00:19:13,610 --> 00:19:15,799
Cal State acquire so it's basically

400
00:19:15,799 --> 00:19:19,040
acquires control over the camera and

401
00:19:19,040 --> 00:19:21,980
then k-state polls and then k-state run

402
00:19:21,980 --> 00:19:25,130
when k-state run is being sent as the

403
00:19:25,130 --> 00:19:27,620
camera start streaming and the

404
00:19:27,620 --> 00:19:30,470
application can begin to request frames

405
00:19:30,470 --> 00:19:33,370
from a camera which is what happens next

406
00:19:33,370 --> 00:19:39,399
here it is so while the stream is active

407
00:19:39,399 --> 00:19:43,330
and the program sends iocked lks rich

408
00:19:43,330 --> 00:19:45,700
stream Commons and every such comment

409
00:19:45,700 --> 00:19:50,440
gets the next frame from the camera and

410
00:19:50,440 --> 00:19:52,210
finally when we decide to stop the

411
00:19:52,210 --> 00:19:56,259
stream is the connection state is being

412
00:19:56,259 --> 00:19:58,719
changed to k-state stop and the handles

413
00:19:58,719 --> 00:20:01,570
are being closed so this is basically

414
00:20:01,570 --> 00:20:05,589
the flow now we want to walk access to

415
00:20:05,589 --> 00:20:08,469
the camera for programs because we don't

416
00:20:08,469 --> 00:20:10,690
want any other programs to use it

417
00:20:10,690 --> 00:20:13,299
so the simplest option for us is to just

418
00:20:13,299 --> 00:20:16,179
blog the I hope Tokyo's property common

419
00:20:16,179 --> 00:20:19,239
when the k-state acquire and comment is

420
00:20:19,239 --> 00:20:22,269
being used right so we won't allow other

421
00:20:22,269 --> 00:20:24,190
programs to acquire access to the camera

422
00:20:24,190 --> 00:20:27,039
and they won't be able to use it and

423
00:20:27,039 --> 00:20:28,979
they start streaming and get information

424
00:20:28,979 --> 00:20:32,739
and here is how it's going to look for

425
00:20:32,739 --> 00:20:36,669
example for a built in Windows 10 camera

426
00:20:36,669 --> 00:20:38,919
program right access denied

427
00:20:38,919 --> 00:20:43,659
the user sees an error and our camera is

428
00:20:43,659 --> 00:20:47,469
protected this is great but this is too

429
00:20:47,469 --> 00:20:49,960
restricting right we will probably still

430
00:20:49,960 --> 00:20:52,210
want to use the camera when we intend it

431
00:20:52,210 --> 00:20:54,609
for example when we want to chat with a

432
00:20:54,609 --> 00:20:58,119
friend or coworker or whatever so one

433
00:20:58,119 --> 00:21:00,190
way to implement it is per process

434
00:21:00,190 --> 00:21:02,859
selective blocking so we will want to

435
00:21:02,859 --> 00:21:06,369
have a whitelist of programs and that we

436
00:21:06,369 --> 00:21:08,739
trust and that are using the camera by

437
00:21:08,739 --> 00:21:12,009
design and the one we want to block all

438
00:21:12,009 --> 00:21:14,200
other programs which are unknown or

439
00:21:14,200 --> 00:21:16,210
which aren't supposed to use the camera

440
00:21:16,210 --> 00:21:19,239
at all so before the introduction of the

441
00:21:19,239 --> 00:21:21,639
frame server it was a quite

442
00:21:21,639 --> 00:21:24,580
straightforward right so this is the

443
00:21:24,580 --> 00:21:28,619
flow as we've already seen and we can

444
00:21:28,619 --> 00:21:32,679
intercept the traffic between the user

445
00:21:32,679 --> 00:21:34,380
mode world and

446
00:21:34,380 --> 00:21:38,190
the camera driver and allow access only

447
00:21:38,190 --> 00:21:40,460
for programs which are white listed

448
00:21:40,460 --> 00:21:41,730
great

449
00:21:41,730 --> 00:21:43,920
hey but with the introduction or frame

450
00:21:43,920 --> 00:21:45,930
server it became a little bit more

451
00:21:45,930 --> 00:21:50,130
complex because if we intercept the same

452
00:21:50,130 --> 00:21:54,000
right we will think that the process

453
00:21:54,000 --> 00:21:56,880
svchost.exe is the one accessing the

454
00:21:56,880 --> 00:21:58,950
camera which is not really true because

455
00:21:58,950 --> 00:22:01,350
this is a part of the operating system

456
00:22:01,350 --> 00:22:04,790
and the part of all of this architecture

457
00:22:04,790 --> 00:22:08,580
so one possible solution for this is to

458
00:22:08,580 --> 00:22:11,280
intercept at the traffic between a zero

459
00:22:11,280 --> 00:22:14,520
mode world and the Microsoft kernel

460
00:22:14,520 --> 00:22:17,370
streaming server instead so here the

461
00:22:17,370 --> 00:22:19,380
real programs that uses the camera is

462
00:22:19,380 --> 00:22:21,660
the one accessing the kernel mode driver

463
00:22:21,660 --> 00:22:23,850
so we will be able to check it against

464
00:22:23,850 --> 00:22:26,670
the whitelist and decide and if we are

465
00:22:26,670 --> 00:22:29,460
doing this we will have to allow access

466
00:22:29,460 --> 00:22:32,010
to the frame server and basically to

467
00:22:32,010 --> 00:22:34,650
whitelist it because therein doesn't

468
00:22:34,650 --> 00:22:36,450
make sense to walk it since it's part of

469
00:22:36,450 --> 00:22:40,260
the OS in the architecture so this is

470
00:22:40,260 --> 00:22:42,320
something that we can do and it works

471
00:22:42,320 --> 00:22:46,530
and great and now we will review

472
00:22:46,530 --> 00:22:48,900
existing protections oceans on the

473
00:22:48,900 --> 00:22:51,660
market how they do it how they how it

474
00:22:51,660 --> 00:22:54,270
compares to what we've just seen and

475
00:22:54,270 --> 00:22:59,730
maybe how we can bypass them right so we

476
00:22:59,730 --> 00:23:02,070
reviewed six well-known security

477
00:23:02,070 --> 00:23:05,060
products on the market which provide

478
00:23:05,060 --> 00:23:08,760
similar functionality to a new protector

479
00:23:08,760 --> 00:23:11,540
webcam and we don't show the names here

480
00:23:11,540 --> 00:23:15,660
basically because our aim is not to

481
00:23:15,660 --> 00:23:18,390
better products right spoilers there

482
00:23:18,390 --> 00:23:21,150
will be bypasses so the aim is not to

483
00:23:21,150 --> 00:23:24,210
actually say as if the production is not

484
00:23:24,210 --> 00:23:26,610
good enough say our goal is to increase

485
00:23:26,610 --> 00:23:29,880
awareness and to show their weak points

486
00:23:29,880 --> 00:23:31,860
that can be improved in order to

487
00:23:31,860 --> 00:23:33,930
basically improve the protection of our

488
00:23:33,930 --> 00:23:37,050
users oh great so there are six products

489
00:23:37,050 --> 00:23:40,020
here and two columns one of them is for

490
00:23:40,020 --> 00:23:42,180
M server support if there is no frame

491
00:23:42,180 --> 00:23:44,310
server support it means that every

492
00:23:44,310 --> 00:23:46,920
program which accesses the cameras roses

493
00:23:46,920 --> 00:23:47,860
frame server

494
00:23:47,860 --> 00:23:51,669
it's being detected svchost.exe and the

495
00:23:51,669 --> 00:23:53,820
second column is upper filter register

496
00:23:53,820 --> 00:23:56,620
if there's a tick that means that there

497
00:23:56,620 --> 00:23:59,679
is a registry entry that specifies that

498
00:23:59,679 --> 00:24:02,470
tells the OS to load the protection

499
00:24:02,470 --> 00:24:04,809
driver and we will soon see why it's

500
00:24:04,809 --> 00:24:08,409
relevant great so we looked at this

501
00:24:08,409 --> 00:24:10,330
product and we took product number one

502
00:24:10,330 --> 00:24:13,240
and we thought and how can we maybe

503
00:24:13,240 --> 00:24:18,700
bypass it right so its characteristics

504
00:24:18,700 --> 00:24:20,710
is there is frame several support and

505
00:24:20,710 --> 00:24:22,630
there is a upper filter which is

506
00:24:22,630 --> 00:24:24,970
registered and we hooked at the frame

507
00:24:24,970 --> 00:24:28,570
server support and we after some

508
00:24:28,570 --> 00:24:31,450
experimentation we notice that it's

509
00:24:31,450 --> 00:24:35,919
being implemented and by blocking access

510
00:24:35,919 --> 00:24:38,440
to the journal streaming server just as

511
00:24:38,440 --> 00:24:41,139
we've seen a couple of minutes ago and

512
00:24:41,139 --> 00:24:43,389
in this case the frame server user mode

513
00:24:43,389 --> 00:24:45,909
process which hosts service as we see

514
00:24:45,909 --> 00:24:48,460
hodo Texan is probably why twisted as

515
00:24:48,460 --> 00:24:52,000
we've seen so we thought what happens if

516
00:24:52,000 --> 00:24:53,889
we inject into it and try to capture

517
00:24:53,889 --> 00:24:55,809
from within this process since it's

518
00:24:55,809 --> 00:24:58,929
white whitelisted so here's how it works

519
00:24:58,929 --> 00:25:02,169
right here an unknown program is being

520
00:25:02,169 --> 00:25:05,200
blocked from using the camera and as we

521
00:25:05,200 --> 00:25:07,029
show the tags the process is white

522
00:25:07,029 --> 00:25:08,950
listed so we are going to do the

523
00:25:08,950 --> 00:25:11,700
following we're going to inject the DLL

524
00:25:11,700 --> 00:25:15,190
into SVC host and capture from there and

525
00:25:15,190 --> 00:25:17,710
here is a video which demonstrates what

526
00:25:17,710 --> 00:25:19,289
happens

527
00:25:19,289 --> 00:25:22,750
so for beginning there is a simple

528
00:25:22,750 --> 00:25:25,090
program which tries to capture and there

529
00:25:25,090 --> 00:25:26,720
is a

530
00:25:26,720 --> 00:25:30,110
all right some blocking window which we

531
00:25:30,110 --> 00:25:33,559
mask the product name so we cannot

532
00:25:33,559 --> 00:25:34,999
capture from the camera where being

533
00:25:34,999 --> 00:25:37,369
blocked and now here is the frame server

534
00:25:37,369 --> 00:25:41,330
there's the PID I took some generic

535
00:25:41,330 --> 00:25:43,929
injector from github right nothing

536
00:25:43,929 --> 00:25:46,519
sophisticated and I inject my DLL we

537
00:25:46,519 --> 00:25:48,799
just capture from the camera into this

538
00:25:48,799 --> 00:25:51,619
process so injection successful and

539
00:25:51,619 --> 00:25:55,070
there this dll capture select for five

540
00:25:55,070 --> 00:25:57,200
seconds and then stops and you can see

541
00:25:57,200 --> 00:26:00,139
that there is an mp4 file and it just

542
00:26:00,139 --> 00:26:07,759
works right so bypassed and okay we were

543
00:26:07,759 --> 00:26:10,129
able to do that and then I thought maybe

544
00:26:10,129 --> 00:26:12,799
there is something even simpler we have

545
00:26:12,799 --> 00:26:16,220
this upper filter registered so what

546
00:26:16,220 --> 00:26:19,009
happens if I just go to the registry and

547
00:26:19,009 --> 00:26:22,369
remove it I expected to get some self

548
00:26:22,369 --> 00:26:25,399
protection right to stop me but

549
00:26:25,399 --> 00:26:27,049
surprisingly nothing stopped me from

550
00:26:27,049 --> 00:26:30,139
doing it and it just worked so after I

551
00:26:30,139 --> 00:26:31,789
do with the century it's enough to

552
00:26:31,789 --> 00:26:34,789
disable and re-enable the webcam device

553
00:26:34,789 --> 00:26:38,480
to remove the protection right so bypass

554
00:26:38,480 --> 00:26:42,350
number two okay and then I went on to

555
00:26:42,350 --> 00:26:45,590
the second product and it has a little

556
00:26:45,590 --> 00:26:47,720
bit different characteristics there is

557
00:26:47,720 --> 00:26:49,519
no frame server support and there is no

558
00:26:49,519 --> 00:26:51,830
upper filter registered in the registry

559
00:26:51,830 --> 00:26:54,289
is being loaded in runtime and by

560
00:26:54,289 --> 00:26:56,869
different means so the upper filter

561
00:26:56,869 --> 00:27:00,049
registry is not relevant anymore but the

562
00:27:00,049 --> 00:27:03,169
frame server is not supported so since

563
00:27:03,169 --> 00:27:04,850
it's not supported every program

564
00:27:04,850 --> 00:27:06,470
accesses camera whereas the frame server

565
00:27:06,470 --> 00:27:11,509
is being reported svchost.exe and for

566
00:27:11,509 --> 00:27:14,570
this security product as we shows the

567
00:27:14,570 --> 00:27:16,789
text is white listed there internally

568
00:27:16,789 --> 00:27:18,440
since this is part of the operating

569
00:27:18,440 --> 00:27:21,799
system and turns out that in order to

570
00:27:21,799 --> 00:27:23,990
bypass the protection it's enough for

571
00:27:23,990 --> 00:27:26,690
our malware to use the frame server

572
00:27:26,690 --> 00:27:31,789
right so it's as easy as that so we went

573
00:27:31,789 --> 00:27:33,710
on and checked all the other products

574
00:27:33,710 --> 00:27:36,619
and here is a summary right five out of

575
00:27:36,619 --> 00:27:38,070
six products

576
00:27:38,070 --> 00:27:41,880
we were able to bypass by one of these

577
00:27:41,880 --> 00:27:44,280
three methods and product number six

578
00:27:44,280 --> 00:27:47,600
wasn't prone to any of those three but

579
00:27:47,600 --> 00:27:51,270
take note that this product doesn't have

580
00:27:51,270 --> 00:27:53,610
working capital beauty it only notifies

581
00:27:53,610 --> 00:27:56,340
when the webcam is being used so it's

582
00:27:56,340 --> 00:28:01,440
not very helpful anyway right so this is

583
00:28:01,440 --> 00:28:05,100
the status a lessons from this right

584
00:28:05,100 --> 00:28:07,200
lesson number one if you trust the

585
00:28:07,200 --> 00:28:10,470
system service in our case it is the

586
00:28:10,470 --> 00:28:12,930
frame server service make sure it can be

587
00:28:12,930 --> 00:28:17,420
tampered to is right I would expect

588
00:28:17,420 --> 00:28:21,210
security product to block this injection

589
00:28:21,210 --> 00:28:24,420
Mattie didn't happen lesson number two

590
00:28:24,420 --> 00:28:27,060
don't forget to apply so protection for

591
00:28:27,060 --> 00:28:29,160
features that can otherwise be disabled

592
00:28:29,160 --> 00:28:31,470
right in our case I could just remove

593
00:28:31,470 --> 00:28:34,710
the upper filter entry which is not okay

594
00:28:34,710 --> 00:28:38,280
and finally following the Dobbs OS

595
00:28:38,280 --> 00:28:40,740
architecture change in our case the

596
00:28:40,740 --> 00:28:43,710
frame server some of the products I was

597
00:28:43,710 --> 00:28:45,750
able to bypass them only because they

598
00:28:45,750 --> 00:28:47,490
weren't up to date with the architecture

599
00:28:47,490 --> 00:28:50,360
changes of Windows 10 anniversary update

600
00:28:50,360 --> 00:28:54,960
and great so let's conclude we talked

601
00:28:54,960 --> 00:28:58,380
about the importance of web cam security

602
00:28:58,380 --> 00:29:01,260
which is a significant privacy threat I

603
00:29:01,260 --> 00:29:03,780
hope that I convinced you that it is

604
00:29:03,780 --> 00:29:08,760
serious and it is real then we talked

605
00:29:08,760 --> 00:29:11,970
about the windows related webcam related

606
00:29:11,970 --> 00:29:13,710
Windows internals right which is not

607
00:29:13,710 --> 00:29:15,540
something that you can easily find

608
00:29:15,540 --> 00:29:19,710
online and so hopefully this will help

609
00:29:19,710 --> 00:29:23,010
other products maybe you guys implement

610
00:29:23,010 --> 00:29:25,460
better protection for our users and

611
00:29:25,460 --> 00:29:27,720
finally we've seen the software

612
00:29:27,720 --> 00:29:29,610
protection is not perfect it can be

613
00:29:29,610 --> 00:29:32,160
bypassed and we've seen a several weak

614
00:29:32,160 --> 00:29:34,410
areas which can be improved and of

615
00:29:34,410 --> 00:29:38,130
course it's better to use both both the

616
00:29:38,130 --> 00:29:40,170
software protection and harder

617
00:29:40,170 --> 00:29:43,230
protection right thank you if you will a

618
00:29:43,230 --> 00:29:47,190
tape or a or a shutter and so both are

619
00:29:47,190 --> 00:29:50,780
always better and finally

620
00:29:50,780 --> 00:29:53,630
miss Karen and so I tell you this

621
00:29:53,630 --> 00:29:55,910
information as I said so that we can

622
00:29:55,910 --> 00:29:57,620
make better products and better

623
00:29:57,620 --> 00:29:59,870
protection for our users and you can

624
00:29:59,870 --> 00:30:01,760
find more information and tech in a

625
00:30:01,760 --> 00:30:04,850
technical paper which is in bureaus

626
00:30:04,850 --> 00:30:07,490
buton blog echoed through the working

627
00:30:07,490 --> 00:30:09,980
class webcam interception and protection

628
00:30:09,980 --> 00:30:12,710
in kernel mode we also have a sample

629
00:30:12,710 --> 00:30:15,050
driver for blocking access to the camera

630
00:30:15,050 --> 00:30:18,740
which is on our data page and also this

631
00:30:18,740 --> 00:30:22,640
repository contains slides of the stock

632
00:30:22,640 --> 00:30:25,340
and finally if you have any questions or

633
00:30:25,340 --> 00:30:27,710
ideas of or feedback you can contact me

634
00:30:27,710 --> 00:30:31,670
by email or Twitter I will be glad to

635
00:30:31,670 --> 00:30:34,850
answer anything and that's about it

636
00:30:34,850 --> 00:30:37,600
thank you very much

