1
00:00:00,800 --> 00:00:03,149
excellent so we're ready for our final

2
00:00:03,149 --> 00:00:04,950
presentation before the break now if we

3
00:00:04,950 --> 00:00:07,440
can welcome Benoit and cell and met eat

4
00:00:07,440 --> 00:00:08,910
Albie to the stage they're going to

5
00:00:08,910 --> 00:00:11,040
present debugging and monitoring malware

6
00:00:11,040 --> 00:00:16,949
Network activities with haka thank you

7
00:00:16,949 --> 00:00:19,580
all for joining our immediate Albie

8
00:00:19,580 --> 00:00:22,080
security researcher and this is my

9
00:00:22,080 --> 00:00:24,210
colleague and friend Ben Massell malware

10
00:00:24,210 --> 00:00:27,990
analyst he really does cool stuff with

11
00:00:27,990 --> 00:00:31,380
malware we are working both for storm

12
00:00:31,380 --> 00:00:33,239
shield a company that develops mainly

13
00:00:33,239 --> 00:00:35,579
security solutions host basin and

14
00:00:35,579 --> 00:00:36,660
network-based intrusion detection

15
00:00:36,660 --> 00:00:39,750
systems and today we will talk about

16
00:00:39,750 --> 00:00:42,719
become an open source security oriented

17
00:00:42,719 --> 00:00:45,390
language and why a CAC will be useful to

18
00:00:45,390 --> 00:00:48,120
debug and monitor Maricruz network

19
00:00:48,120 --> 00:00:52,289
traffic so here is the agenda

20
00:00:52,289 --> 00:00:55,789
first we will motivate briefly our work

21
00:00:55,789 --> 00:00:58,949
then we will present akka and its main

22
00:00:58,949 --> 00:01:03,030
features during this work we have

23
00:01:03,030 --> 00:01:05,850
monitor to malware families china z and

24
00:01:05,850 --> 00:01:08,400
asana so we will present the protocol

25
00:01:08,400 --> 00:01:10,170
they use to communicate and how we have

26
00:01:10,170 --> 00:01:12,150
specified this protocol in Ocalan would

27
00:01:12,150 --> 00:01:15,150
we will also showcase the debugging and

28
00:01:15,150 --> 00:01:17,009
monitoring of this malware through two

29
00:01:17,009 --> 00:01:19,170
scenarios and finally we will conclude

30
00:01:19,170 --> 00:01:21,509
with some remarks and how we can improve

31
00:01:21,509 --> 00:01:26,310
this world ok so what are our

32
00:01:26,310 --> 00:01:29,490
motivations first today we think that it

33
00:01:29,490 --> 00:01:31,799
is very important to monitor malware on

34
00:01:31,799 --> 00:01:34,799
long time periods for obvious reasons to

35
00:01:34,799 --> 00:01:37,220
get fresh IOC to get malware updates

36
00:01:37,220 --> 00:01:40,680
this enables to better to better track

37
00:01:40,680 --> 00:01:42,420
malware campaigns and draw a

38
00:01:42,420 --> 00:01:44,369
comprehensive view of the real intention

39
00:01:44,369 --> 00:01:47,659
behind the malware but unfortunately

40
00:01:47,659 --> 00:01:49,860
malagueña at least have a lot of tools

41
00:01:49,860 --> 00:01:53,850
to reverse malware like ID AE d BG but

42
00:01:53,850 --> 00:01:56,399
like the means to monitor the malicious

43
00:01:56,399 --> 00:01:59,030
network traffic so in this presentation

44
00:01:59,030 --> 00:02:02,040
we propose the use of account and open

45
00:02:02,040 --> 00:02:04,640
source security or third language and

46
00:02:04,640 --> 00:02:09,449
the rationale of this is multiple first

47
00:02:09,449 --> 00:02:12,140
been specially designed to specify

48
00:02:12,140 --> 00:02:14,760
network protocols so one that can

49
00:02:14,760 --> 00:02:17,220
naturally express malware protocol this

50
00:02:17,220 --> 00:02:23,400
sector then a provides probably the most

51
00:02:23,400 --> 00:02:26,160
advanced api to for packet and stream

52
00:02:26,160 --> 00:02:29,640
manipulation one can filter drop create

53
00:02:29,640 --> 00:02:33,090
new packets and inject them with a car

54
00:02:33,090 --> 00:02:36,209
also we can alter packet on the fly this

55
00:02:36,209 --> 00:02:38,280
is useful for example to hijack some

56
00:02:38,280 --> 00:02:41,250
botnet commands we have also an

57
00:02:41,250 --> 00:02:43,319
interactive packet filtering mode that

58
00:02:43,319 --> 00:02:47,640
allows one to debug into to break into a

59
00:02:47,640 --> 00:02:49,829
particular packet inspect its content

60
00:02:49,829 --> 00:02:53,670
change its the value of its field we

61
00:02:53,670 --> 00:02:57,209
have also an instruction disassembler

62
00:02:57,209 --> 00:03:01,290
module based on capstone and shine that

63
00:03:01,290 --> 00:03:04,530
allows one to disassemble packet content

64
00:03:04,530 --> 00:03:06,720
into assembly instruction at network

65
00:03:06,720 --> 00:03:09,410
level which is useful for example to

66
00:03:09,410 --> 00:03:13,380
detect obfuscated shellcode and finally

67
00:03:13,380 --> 00:03:15,060
we have a dedicated and customizable

68
00:03:15,060 --> 00:03:16,889
tool that provides real-time

69
00:03:16,889 --> 00:03:21,450
visualization of network traffic through

70
00:03:21,450 --> 00:03:24,000
Cabana dashboards this tool is called a

71
00:03:24,000 --> 00:03:26,250
Cabana which a mix between a current

72
00:03:26,250 --> 00:03:29,819
gabbana and this tool consists of a set

73
00:03:29,819 --> 00:03:31,739
of security rules writing in a language

74
00:03:31,739 --> 00:03:34,380
that pushed some stuff on about the

75
00:03:34,380 --> 00:03:36,030
traffic into an elastic search server

76
00:03:36,030 --> 00:03:37,859
and then made them available through

77
00:03:37,859 --> 00:03:42,480
keep and other sports so here we have

78
00:03:42,480 --> 00:03:46,010
the big picture of a key architecture

79
00:03:46,010 --> 00:03:48,989
Hakka has been designed into modular

80
00:03:48,989 --> 00:03:51,420
fashion we have several modules for

81
00:03:51,420 --> 00:03:54,090
example in the bottom we have pick up a

82
00:03:54,090 --> 00:03:56,970
packet capture modules one can use for

83
00:03:56,970 --> 00:03:58,859
example the pcap capture modules to read

84
00:03:58,859 --> 00:04:01,920
packet either from trace file or from or

85
00:04:01,920 --> 00:04:04,680
from a network interface we can also use

86
00:04:04,680 --> 00:04:07,349
the net wield the net filter cue packet

87
00:04:07,349 --> 00:04:10,169
capture module we have also logging

88
00:04:10,169 --> 00:04:12,510
several logging and alert module to log

89
00:04:12,510 --> 00:04:16,139
and report malicious activities and we

90
00:04:16,139 --> 00:04:18,139
have also additional module like

91
00:04:18,139 --> 00:04:20,629
pattern-matching in giant module the

92
00:04:20,629 --> 00:04:22,370
disassembler module and the Krypton

93
00:04:22,370 --> 00:04:25,569
module this module allows one to write

94
00:04:25,569 --> 00:04:28,189
fine-grained security rules to detect

95
00:04:28,189 --> 00:04:31,189
advanced attacks or to the obfuscate

96
00:04:31,189 --> 00:04:34,699
some protocol communications and in the

97
00:04:34,699 --> 00:04:37,099
middle we have our öcalan which this

98
00:04:37,099 --> 00:04:39,439
language is based on newer language and

99
00:04:39,439 --> 00:04:41,629
the scope of this language is double we

100
00:04:41,629 --> 00:04:44,060
can write with this language security

101
00:04:44,060 --> 00:04:45,860
rules and we can write protocol

102
00:04:45,860 --> 00:04:48,860
detectors protocol detectors will

103
00:04:48,860 --> 00:04:51,500
trigger some event that in turn will

104
00:04:51,500 --> 00:04:53,360
lead to the evaluation of all security

105
00:04:53,360 --> 00:04:57,620
rules listening on that events so as I

106
00:04:57,620 --> 00:05:00,830
said the scope of this language is done

107
00:05:00,830 --> 00:05:02,599
we can write security rules and protocol

108
00:05:02,599 --> 00:05:04,190
dissections here we will focus on

109
00:05:04,190 --> 00:05:07,129
protocol this section acha features the

110
00:05:07,129 --> 00:05:09,520
grammar that allows one to write to

111
00:05:09,520 --> 00:05:12,139
specify the protocol misses and tags and

112
00:05:12,139 --> 00:05:14,979
also the state machine of the protocol

113
00:05:14,979 --> 00:05:17,900
this drama supports both types of

114
00:05:17,900 --> 00:05:21,439
protocol text based protocol like HTTP

115
00:05:21,439 --> 00:05:24,349
and stream based protocol like gns it

116
00:05:24,349 --> 00:05:26,629
supports also packet based protocol like

117
00:05:26,629 --> 00:05:29,960
ICMP IP t city but also stream based

118
00:05:29,960 --> 00:05:33,529
protocol like HTTP and DNS and all the

119
00:05:33,529 --> 00:05:35,330
parts it fields are available in

120
00:05:35,330 --> 00:05:37,190
readwrite access mode to all security

121
00:05:37,190 --> 00:05:43,190
rules so basically we specify protocol

122
00:05:43,190 --> 00:05:44,839
by combining what we call bramma

123
00:05:44,839 --> 00:05:47,629
entities we have two types of grammar

124
00:05:47,629 --> 00:05:51,800
entities we have element final entities

125
00:05:51,800 --> 00:05:53,960
that allows two parts elementary data

126
00:05:53,960 --> 00:05:57,469
types like numbers flags and bytes and

127
00:05:57,469 --> 00:05:59,930
we have compound entities that allows to

128
00:05:59,930 --> 00:06:02,120
parse complex data structures for

129
00:06:02,120 --> 00:06:06,080
example the record allows to parse could

130
00:06:06,080 --> 00:06:09,020
be used to parse a structure of compound

131
00:06:09,020 --> 00:06:12,020
and final entities the array could be

132
00:06:12,020 --> 00:06:14,120
used to present a table of Records for

133
00:06:14,120 --> 00:06:16,729
example this is useful to parse a list

134
00:06:16,729 --> 00:06:19,580
of HTTP headers and finally we have the

135
00:06:19,580 --> 00:06:22,099
branch entities but allows one to select

136
00:06:22,099 --> 00:06:25,099
a parsing path according to a previously

137
00:06:25,099 --> 00:06:28,699
parse of data here we have an example of

138
00:06:28,699 --> 00:06:32,030
a specification of a protocol P in occur

139
00:06:32,030 --> 00:06:35,940
in our grammar so on the Left we have a

140
00:06:35,940 --> 00:06:40,770
naive protocol P made of fear of field M

141
00:06:40,770 --> 00:06:44,550
and a couple of Integris a and B and on

142
00:06:44,550 --> 00:06:46,410
the right we have its specification in

143
00:06:46,410 --> 00:06:49,440
our grammar so usually when we write in

144
00:06:49,440 --> 00:06:53,310
a new protocol dissector we create a new

145
00:06:53,310 --> 00:06:55,620
grammar for this protocol so this is the

146
00:06:55,620 --> 00:06:59,310
first line then we define a record

147
00:06:59,310 --> 00:07:02,699
made of two named fields a and B defined

148
00:07:02,699 --> 00:07:06,419
as a number entity the content of this

149
00:07:06,419 --> 00:07:08,819
field in a and B will be made available

150
00:07:08,819 --> 00:07:11,909
to security rules and here we can also

151
00:07:11,909 --> 00:07:14,460
specify the engine s as an extra

152
00:07:14,460 --> 00:07:17,520
argument to the number entity and then

153
00:07:17,520 --> 00:07:20,970
we specify the whole message M of the

154
00:07:20,970 --> 00:07:24,150
protocol as a record made of the name it

155
00:07:24,150 --> 00:07:27,509
field N and an array of the previously

156
00:07:27,509 --> 00:07:31,470
defined at the record and the size of

157
00:07:31,470 --> 00:07:33,750
this array is determined by applying

158
00:07:33,750 --> 00:07:37,080
accounting options more precisely the

159
00:07:37,080 --> 00:07:39,780
size of this array is set dynamically

160
00:07:39,780 --> 00:07:44,639
from a previously parsad field and ok

161
00:07:44,639 --> 00:07:47,340
now we will switch to security rules so

162
00:07:47,340 --> 00:07:50,520
here are the main things that we can do

163
00:07:50,520 --> 00:07:53,870
when writing security rules so as I said

164
00:07:53,870 --> 00:07:56,300
security rules have access to all

165
00:07:56,300 --> 00:07:58,380
protocol fields so one can write

166
00:07:58,380 --> 00:08:00,210
security rules to check some properties

167
00:08:00,210 --> 00:08:03,150
on these fields we can also write

168
00:08:03,150 --> 00:08:04,830
security rules that lever on some

169
00:08:04,830 --> 00:08:06,900
modules for example can use the pattern

170
00:08:06,900 --> 00:08:09,000
matching in join to try to match a

171
00:08:09,000 --> 00:08:10,590
malicious pattern across multiple

172
00:08:10,590 --> 00:08:15,300
packets and we can also do some basic

173
00:08:15,300 --> 00:08:18,090
operation like filtering and dropping

174
00:08:18,090 --> 00:08:20,550
packets and connections we can also

175
00:08:20,550 --> 00:08:22,849
create new packets and inject them and

176
00:08:22,849 --> 00:08:25,580
we can also alter packets on the fly

177
00:08:25,580 --> 00:08:27,960
please note here that a cat does not

178
00:08:27,960 --> 00:08:30,300
does not act as a proxy but we really

179
00:08:30,300 --> 00:08:32,370
modify packets on the fly which means

180
00:08:32,370 --> 00:08:34,890
that the size of this packet will be

181
00:08:34,890 --> 00:08:37,649
resized the sequence number will be

182
00:08:37,649 --> 00:08:39,750
adjusted may be packet will be referred

183
00:08:39,750 --> 00:08:44,279
mented and so on here we have an example

184
00:08:44,279 --> 00:08:45,340
of a security

185
00:08:45,340 --> 00:08:48,070
so when we write the security rule we

186
00:08:48,070 --> 00:08:50,050
usually start by loading the required

187
00:08:50,050 --> 00:08:54,010
detector here we load in our example the

188
00:08:54,010 --> 00:08:57,790
stateful TCP detector then we load some

189
00:08:57,790 --> 00:09:00,250
additional modules here below for

190
00:09:00,250 --> 00:09:02,020
example the pattern matching engine and

191
00:09:02,020 --> 00:09:04,990
comp and compiled some pattern we load

192
00:09:04,990 --> 00:09:07,090
our disassemble module and set some

193
00:09:07,090 --> 00:09:10,330
options and then we're out we write out

194
00:09:10,330 --> 00:09:12,340
our security rule using the keywords

195
00:09:12,340 --> 00:09:16,390
occurred a security rule is made of a

196
00:09:16,390 --> 00:09:18,700
hook which is an event to listen to and

197
00:09:18,700 --> 00:09:21,640
an evaluation function that is evaluated

198
00:09:21,640 --> 00:09:24,250
whenever this event is triggered in our

199
00:09:24,250 --> 00:09:26,530
example this security rule will be

200
00:09:26,530 --> 00:09:28,930
evaluated whenever we receive new TCP

201
00:09:28,930 --> 00:09:32,290
data and in this security rule we will

202
00:09:32,290 --> 00:09:37,150
try to match our compiler pattern to try

203
00:09:37,150 --> 00:09:40,150
to find if in the stream if the stream

204
00:09:40,150 --> 00:09:42,610
contains an OPS LED and if this is the

205
00:09:42,610 --> 00:09:46,030
case we will raise an alert and then we

206
00:09:46,030 --> 00:09:47,980
will the disassembler module to dump the

207
00:09:47,980 --> 00:09:51,780
instruction for long in a snap slit

208
00:09:51,810 --> 00:09:59,590
okay and here to move from theory to

209
00:09:59,590 --> 00:10:02,440
practice is to use case firstly every

210
00:10:02,440 --> 00:10:05,260
present you china sea linux device but

211
00:10:05,260 --> 00:10:07,040
net

212
00:10:07,040 --> 00:10:09,090
[Music]

213
00:10:09,090 --> 00:10:12,430
so first of all about district of

214
00:10:12,430 --> 00:10:13,870
china's each channel is a well-known

215
00:10:13,870 --> 00:10:16,270
Chinese did us but net with a family

216
00:10:16,270 --> 00:10:19,720
like Bill Gates elk not a yes and so on

217
00:10:19,720 --> 00:10:23,080
it spread typical Linux attack vectors

218
00:10:23,080 --> 00:10:26,260
like SSL read first and Kelvin ability

219
00:10:26,260 --> 00:10:29,280
that Surgenor ability shock and so on

220
00:10:29,280 --> 00:10:32,410
the malware include some typical DDoS

221
00:10:32,410 --> 00:10:36,130
features like TCP UDP icmp NTP and so on

222
00:10:36,130 --> 00:10:38,680
and something that features you can read

223
00:10:38,680 --> 00:10:43,360
the configuration ordinary itself when

224
00:10:43,360 --> 00:10:45,520
we monitor this but net we saw that the

225
00:10:45,520 --> 00:10:47,980
webmaster use about need to launch some

226
00:10:47,980 --> 00:10:50,680
DDoS campaign again against Asian

227
00:10:50,680 --> 00:10:53,260
infrastructure so we have chosen this

228
00:10:53,260 --> 00:10:55,300
merio because it's a very active but net

229
00:10:55,300 --> 00:10:55,710
and

230
00:10:55,710 --> 00:10:57,840
is your first to film a live scene see

231
00:10:57,840 --> 00:11:00,150
if I will you see if you want no

232
00:11:00,150 --> 00:11:01,980
information about the study I strongly

233
00:11:01,980 --> 00:11:03,750
recommend you to attend tomorrow to the

234
00:11:03,750 --> 00:11:06,690
torque the ignited us but net we would

235
00:11:06,690 --> 00:11:10,800
by q3 600 to read the tone of blog post

236
00:11:10,800 --> 00:11:15,870
wrote by Morales a so China's he uses

237
00:11:15,870 --> 00:11:18,840
TCP for communication but requested

238
00:11:18,840 --> 00:11:20,760
composed of many fields the first field

239
00:11:20,760 --> 00:11:24,360
is a DDoS statute if he said to one but

240
00:11:24,360 --> 00:11:27,000
is busy to do so target it is to know

241
00:11:27,000 --> 00:11:29,820
the belt is available you have killed

242
00:11:29,820 --> 00:11:32,280
objects an operating system information

243
00:11:32,280 --> 00:11:35,910
like memory available CPU network speed

244
00:11:35,910 --> 00:11:38,520
and so on the server response is

245
00:11:38,520 --> 00:11:40,560
composed of many shield to two are

246
00:11:40,560 --> 00:11:41,430
really important

247
00:11:41,430 --> 00:11:44,040
the first one is a common field if the

248
00:11:44,040 --> 00:11:48,330
commercial sector did yes DDoS debt the

249
00:11:48,330 --> 00:11:49,830
second important thing contains the

250
00:11:49,830 --> 00:11:52,200
period of the list of tyrella trees on

251
00:11:52,200 --> 00:11:54,840
the right you can see the detector

252
00:11:54,840 --> 00:11:57,000
corresponding to China Sea protocol as

253
00:11:57,000 --> 00:11:58,890
you can see it's very easy to wrote any

254
00:11:58,890 --> 00:12:01,500
verbal if you look at the end of the

255
00:12:01,500 --> 00:12:03,600
detector cancer branch that describe

256
00:12:03,600 --> 00:12:06,630
every common it's three easy to describe

257
00:12:06,630 --> 00:12:12,960
this kind of communication when I can

258
00:12:12,960 --> 00:12:15,780
allow us to monitor traffic bank we can

259
00:12:15,780 --> 00:12:17,850
interact with the string to when we want

260
00:12:17,850 --> 00:12:21,330
to monitor but net we want to be sure

261
00:12:21,330 --> 00:12:24,780
that not that arrows monitoring system

262
00:12:24,780 --> 00:12:26,550
is not used to launch attack on other

263
00:12:26,550 --> 00:12:29,040
people for example with China Sea we

264
00:12:29,040 --> 00:12:31,170
want to be sure that we don't send us

265
00:12:31,170 --> 00:12:33,300
requests around the world for this kind

266
00:12:33,300 --> 00:12:35,400
of progress is very easy to implement

267
00:12:35,400 --> 00:12:38,130
with sacred jewel for example this

268
00:12:38,130 --> 00:12:41,610
security will be if we saw a DDoS : on

269
00:12:41,610 --> 00:12:44,670
the on the tree we just store every

270
00:12:44,670 --> 00:12:46,620
targeted IP and she saw some connection

271
00:12:46,620 --> 00:12:48,600
to the targeted IP we just drop every

272
00:12:48,600 --> 00:12:53,340
packet sweetie - - it's time for the

273
00:12:53,340 --> 00:12:55,970
first move

274
00:12:57,220 --> 00:13:02,129
so in this demo we will use I care

275
00:13:02,129 --> 00:13:06,009
we will use again in a slang word to not

276
00:13:06,009 --> 00:13:20,139
expose our infrastructure okay so we

277
00:13:20,139 --> 00:13:26,339
launched a car is our own pickup sorry

278
00:13:27,750 --> 00:13:30,399
and this is a dash valve designed for

279
00:13:30,399 --> 00:13:32,829
chinesey protocol as you can see you can

280
00:13:32,829 --> 00:13:34,930
find every every information you won't

281
00:13:34,930 --> 00:13:37,839
have some sub target with geolocation

282
00:13:37,839 --> 00:13:41,519
information you have some bit statistic

283
00:13:41,519 --> 00:13:44,889
some you can found the list of DDoS the

284
00:13:44,889 --> 00:13:47,709
list of IP targeted some information of

285
00:13:47,709 --> 00:13:50,649
a DDoS type here only have only one type

286
00:13:50,649 --> 00:13:56,920
slippy and some global summary about now

287
00:13:56,920 --> 00:13:59,319
let's imagine that you want to you have

288
00:13:59,319 --> 00:14:01,420
a big backup of an attack that drop

289
00:14:01,420 --> 00:14:04,389
change and you want to understand how

290
00:14:04,389 --> 00:14:07,089
this attack works for that we provide a

291
00:14:07,089 --> 00:14:10,000
second s blog which contain a lot of

292
00:14:10,000 --> 00:14:13,750
network information so for example some

293
00:14:13,750 --> 00:14:16,779
Dennis information some details about

294
00:14:16,779 --> 00:14:22,139
protocols and details about geolocation

295
00:14:23,970 --> 00:14:26,769
some details about Dennis against

296
00:14:26,769 --> 00:14:34,060
queries Dennis type HTTP details if you

297
00:14:34,060 --> 00:14:36,970
look at the HTTP details you can see

298
00:14:36,970 --> 00:14:39,519
from request with the user agent I

299
00:14:39,519 --> 00:14:42,339
believe it can be a hint because a lot

300
00:14:42,339 --> 00:14:45,459
of metal just leave the default user

301
00:14:45,459 --> 00:14:49,329
agent with so if we look deeper inside

302
00:14:49,329 --> 00:14:52,649
inside this request

303
00:14:56,920 --> 00:15:00,250
you can sew very strong cookie with what

304
00:15:00,250 --> 00:15:04,450
looked like nap sled so now it's time to

305
00:15:04,450 --> 00:15:07,270
use the interactive notification where

306
00:15:07,270 --> 00:15:09,880
this cookie for that you just need a

307
00:15:09,880 --> 00:15:13,170
very little security work

308
00:15:13,800 --> 00:15:16,000
this rule is composed of two parts the

309
00:15:16,000 --> 00:15:18,100
first part you just configure a SM if

310
00:15:18,100 --> 00:15:20,740
you want a TNT or intestine taxis and

311
00:15:20,740 --> 00:15:23,440
stuff like that and after that you just

312
00:15:23,440 --> 00:15:26,020
put a hook on every HTTP request with

313
00:15:26,020 --> 00:15:28,360
the user agents Python you are live and

314
00:15:28,360 --> 00:15:30,670
you want to do you want to break on this

315
00:15:30,670 --> 00:15:38,350
request okay so we lunge back a pickup

316
00:15:38,350 --> 00:15:40,390
and our security role and it will break

317
00:15:40,390 --> 00:15:44,250
on the first request that match

318
00:15:51,610 --> 00:15:54,820
so you have a first request we knew that

319
00:15:54,820 --> 00:15:56,440
the interesting part is inside the

320
00:15:56,440 --> 00:15:58,510
header oh you want to look at the cookie

321
00:15:58,510 --> 00:16:08,890
so let's deeper inside the header can we

322
00:16:08,890 --> 00:16:11,860
found again around strange cookie so now

323
00:16:11,860 --> 00:16:15,600
we want to use a DSM column to do some

324
00:16:15,600 --> 00:16:18,870
this blood

325
00:16:34,750 --> 00:16:37,870
okay and as you can see we can see a

326
00:16:37,870 --> 00:16:39,850
kind of NAPLAN and what's look like a

327
00:16:39,850 --> 00:16:43,000
64-byte sheltered we have everything we

328
00:16:43,000 --> 00:16:44,800
want to understand the attack in the

329
00:16:44,800 --> 00:16:47,290
network point of view just with this

330
00:16:47,290 --> 00:16:50,219
kind of situation

331
00:16:59,670 --> 00:17:02,670
sorry

332
00:17:08,109 --> 00:17:11,109
sorry

333
00:17:39,000 --> 00:17:41,820
okay sorry so now let's move on the

334
00:17:41,820 --> 00:17:43,919
second is chase it at analyze the

335
00:17:43,919 --> 00:17:45,570
windows-based malware it's a very old

336
00:17:45,570 --> 00:17:47,880
man where groups loves this mara because

337
00:17:47,880 --> 00:17:50,370
a lot of situate provide can do some

338
00:17:50,370 --> 00:17:53,130
click-fraud DDoS you have a bunch of

339
00:17:53,130 --> 00:17:55,020
features you can leave the couch alone

340
00:17:55,020 --> 00:17:56,270
and so on

341
00:17:56,270 --> 00:17:59,720
the communication is a HTTP with

342
00:17:59,720 --> 00:18:02,490
applicated post request the obfuscation

343
00:18:02,490 --> 00:18:06,750
is just modified base64 so she more

344
00:18:06,750 --> 00:18:09,090
details about the communication you can

345
00:18:09,090 --> 00:18:12,179
just look at the paper we chose this

346
00:18:12,179 --> 00:18:15,090
area because of the lot of different

347
00:18:15,090 --> 00:18:17,700
coming he provides it's morphin or two

348
00:18:17,700 --> 00:18:19,169
as two minute of this kind of botnets

349
00:18:19,169 --> 00:18:21,570
that for example the path of terror like

350
00:18:21,570 --> 00:18:24,929
Pony after the discussion a request

351
00:18:24,929 --> 00:18:26,880
looked like that the first field is

352
00:18:26,880 --> 00:18:30,750
judge intervals in second it's used by

353
00:18:30,750 --> 00:18:32,850
the bot to know when he have to contact

354
00:18:32,850 --> 00:18:35,789
the CNC joseph hillier piazza party like

355
00:18:35,789 --> 00:18:41,400
task IG pipe pillow when we work on a

356
00:18:41,400 --> 00:18:43,650
tina we so very interesting feature at

357
00:18:43,650 --> 00:18:45,630
an error but must have to design factor

358
00:18:45,630 --> 00:18:48,059
specifically team so the game here is to

359
00:18:48,059 --> 00:18:51,450
try to use a security able to eject some

360
00:18:51,450 --> 00:18:53,880
botnet common to replace them with

361
00:18:53,880 --> 00:18:57,110
minister common to try to install to

362
00:18:57,110 --> 00:19:00,570
infect some victims so you can see it's

363
00:19:00,570 --> 00:19:03,450
very easy to vote we just put a hook on

364
00:19:03,450 --> 00:19:06,690
it at each eternal request and we

365
00:19:06,690 --> 00:19:10,830
replace the communist it's time for

366
00:19:10,830 --> 00:19:13,280
second

367
00:19:20,170 --> 00:19:23,170
okay

368
00:19:28,980 --> 00:19:31,980
so

369
00:19:33,500 --> 00:19:37,500
let's look inside at the inner panels we

370
00:19:37,500 --> 00:19:39,900
have a lot of DDoS feature different if

371
00:19:39,900 --> 00:19:43,680
DDoS feature we can create different you

372
00:19:43,680 --> 00:19:46,110
can exactly been area do some click for

373
00:19:46,110 --> 00:19:49,350
a particular feature in Eclipse and

374
00:19:49,350 --> 00:19:50,070
she'll come on

375
00:19:50,070 --> 00:19:53,220
and so now we want to use a cane real

376
00:19:53,220 --> 00:19:55,320
mode so we launched a care with our

377
00:19:55,320 --> 00:20:00,150
detector and we infect our labs with

378
00:20:00,150 --> 00:20:01,380
specially crafted

379
00:20:01,380 --> 00:20:10,280
at in a sample after a few seconds but

380
00:20:10,280 --> 00:20:16,140
inside that happen ok and now we want to

381
00:20:16,140 --> 00:20:18,000
create some commands that will be shown

382
00:20:18,000 --> 00:20:22,110
inside our specially designed at

383
00:20:22,110 --> 00:20:25,710
inaudible so we don't show did us on a

384
00:20:25,710 --> 00:20:35,160
random website ok and we try to download

385
00:20:35,160 --> 00:20:37,500
and execute a binary patch in this

386
00:20:37,500 --> 00:20:40,560
example and the creek foot come just a

387
00:20:40,560 --> 00:20:47,670
second okay can found a resume of you

388
00:20:47,670 --> 00:20:51,510
come on in the active active company so

389
00:20:51,510 --> 00:20:54,270
now let's look inside the - bone and as

390
00:20:54,270 --> 00:20:56,430
you can see you have every information

391
00:20:56,430 --> 00:21:00,210
you need to do some real Intel in Latin

392
00:21:00,210 --> 00:21:03,990
American found some but information for

393
00:21:03,990 --> 00:21:06,150
example you have some statistic about

394
00:21:06,150 --> 00:21:09,840
our bits because the list of come on

395
00:21:09,840 --> 00:21:14,209
such that she sent by the seller

396
00:21:20,930 --> 00:21:28,170
and some DDoS details and the kicked

397
00:21:28,170 --> 00:21:30,770
footpath

398
00:21:42,740 --> 00:21:46,059
okay has remained in attend a provide

399
00:21:46,059 --> 00:21:50,000
Minister feature so now we will just try

400
00:21:50,000 --> 00:21:53,929
to launch all security rules to eject

401
00:21:53,929 --> 00:21:57,679
some Conan and Lannister so something so

402
00:21:57,679 --> 00:22:02,230
will occur with the specific spiritual

403
00:22:10,570 --> 00:22:15,250
and we wait for a cumin to be inject so

404
00:22:15,250 --> 00:22:18,150
it's a really slow

405
00:22:28,020 --> 00:22:30,720
okay come on with successfully eject and

406
00:22:30,720 --> 00:22:32,850
if you look inside

407
00:22:32,850 --> 00:22:37,559
Tina panel after 35 second time out but

408
00:22:37,559 --> 00:22:41,059
really good Frank

409
00:22:55,270 --> 00:22:58,300
okay the was successfully eject and

410
00:22:58,300 --> 00:23:04,059
Bert was now an aster so just before the

411
00:23:04,059 --> 00:23:06,400
yen little bonus for this demo when we

412
00:23:06,400 --> 00:23:08,170
work on Atena protocol we saw a

413
00:23:08,170 --> 00:23:10,390
potentially fatal SQL injection in the

414
00:23:10,390 --> 00:23:13,200
gates in the server gates this kind of

415
00:23:13,200 --> 00:23:15,730
vulnerability can be painful to exploit

416
00:23:15,730 --> 00:23:17,800
you to the application batteries or the

417
00:23:17,800 --> 00:23:21,790
sector it's real easy so we just need a

418
00:23:21,790 --> 00:23:25,660
little security rule to to exploit this

419
00:23:25,660 --> 00:23:27,790
vulnerability so we just we infect our

420
00:23:27,790 --> 00:23:36,250
lab after the last hour with a specific

421
00:23:36,250 --> 00:23:39,160
signature if information about this rule

422
00:23:39,160 --> 00:23:48,550
everything is on paper this so now we

423
00:23:48,550 --> 00:23:50,710
just have to wait for the time-based

424
00:23:50,710 --> 00:23:53,309
exploitation

425
00:24:01,480 --> 00:24:04,649
singing dried

426
00:24:24,920 --> 00:24:27,710
okay the seller was seasick free

427
00:24:27,710 --> 00:24:30,440
successfully exploited and as you can

428
00:24:30,440 --> 00:24:32,870
see is but net is made of one but so

429
00:24:32,870 --> 00:24:44,030
huge but so to conclude as we explained

430
00:24:44,030 --> 00:24:47,270
this presentation hacker is an

431
00:24:47,270 --> 00:24:49,580
open-source tools to DeBerg and

432
00:24:49,580 --> 00:24:52,550
monitoring traffic it can fit the lack

433
00:24:52,550 --> 00:24:55,520
of to litigate to Marriott C&C traffic

434
00:24:55,520 --> 00:25:00,020
debug just before this presentation you

435
00:25:00,020 --> 00:25:02,330
want to create a repository of malware

436
00:25:02,330 --> 00:25:04,640
protocol dissector so if you want to add

437
00:25:04,640 --> 00:25:09,440
us to create new detector thanks again

438
00:25:09,440 --> 00:25:14,240
for coming thanks last word we can find

439
00:25:14,240 --> 00:25:16,280
all the documentation about akka on our

440
00:25:16,280 --> 00:25:18,500
website you can also check out the

441
00:25:18,500 --> 00:25:20,420
source code of a kind our github account

442
00:25:20,420 --> 00:25:22,310
and if you want some news you can follow

443
00:25:22,310 --> 00:25:27,399
us on our Twitter account thanks again

444
00:25:30,110 --> 00:25:32,140
[Applause]

445
00:25:32,140 --> 00:25:34,160
we have time for a couple questions

446
00:25:34,160 --> 00:25:36,770
anybody have any questions for man Wong

447
00:25:36,770 --> 00:25:45,860
Mehdi I see one at the very back uses

448
00:25:45,860 --> 00:25:48,460
for things like

449
00:25:48,460 --> 00:25:51,230
exploit kits and other kind of purely

450
00:25:51,230 --> 00:25:53,600
network based things could you use

451
00:25:53,600 --> 00:25:56,930
hacker as well to analyze this it's not

452
00:25:56,930 --> 00:26:02,270
intended to be used like this do we use

453
00:26:02,270 --> 00:26:06,730
it at tool to exploit vulnerabilities

454
00:26:12,310 --> 00:26:15,680
just have to write some detector you can

455
00:26:15,680 --> 00:26:17,780
write the dedicated security rules to do

456
00:26:17,780 --> 00:26:20,830
that yeah you can do that

457
00:26:23,040 --> 00:26:29,010
it's what Scott I've got one myself that

458
00:26:29,010 --> 00:26:31,760
I was just curious about is there any

459
00:26:31,760 --> 00:26:33,540
capability of dealing with things that

460
00:26:33,540 --> 00:26:35,550
are encrypted like HTTP traffic that

461
00:26:35,550 --> 00:26:37,590
type of thing or because it's encrypted

462
00:26:37,590 --> 00:26:39,990
it's kind of blind to the traffic or we

463
00:26:39,990 --> 00:26:44,100
don't have any currently we don't have

464
00:26:44,100 --> 00:26:49,980
an SSL D sector but maybe really soon so

465
00:26:49,980 --> 00:26:52,740
we can be able to detect some obfuscated

466
00:26:52,740 --> 00:26:56,370
communication well if we can get a round

467
00:26:56,370 --> 00:26:58,140
of applause again for Ben Wan Medi thank

468
00:26:58,140 --> 00:27:02,450
you very much and we're off to our break

