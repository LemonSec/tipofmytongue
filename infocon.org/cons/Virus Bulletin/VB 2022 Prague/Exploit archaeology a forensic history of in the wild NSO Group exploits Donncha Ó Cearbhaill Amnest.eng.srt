1
00:00:04,259 --> 00:00:05,580
um so I'm very excited to be here today

2
00:00:05,580 --> 00:00:08,220
and share some of our uh I joined joint

3
00:00:08,220 --> 00:00:10,740
investigation joint um presentation

4
00:00:10,740 --> 00:00:12,300
about our independent work over the last

5
00:00:12,300 --> 00:00:14,160
number of years investing in NSO and

6
00:00:14,160 --> 00:00:15,599
particularly in this talk we're going to

7
00:00:15,599 --> 00:00:17,039
focus on some of the exploits and

8
00:00:17,039 --> 00:00:18,660
technical details of hot and so was

9
00:00:18,660 --> 00:00:19,920
doing and how they were compromising

10
00:00:19,920 --> 00:00:21,900
devices

11
00:00:21,900 --> 00:00:23,520
so you might be wondering who we are um

12
00:00:23,520 --> 00:00:25,560
we will work for civil society

13
00:00:25,560 --> 00:00:27,420
organizations with the particular goal

14
00:00:27,420 --> 00:00:29,099
of investigating target attacks against

15
00:00:29,099 --> 00:00:30,779
Civil Society so it's journalists

16
00:00:30,779 --> 00:00:32,759
activists sometimes opposition

17
00:00:32,759 --> 00:00:35,340
politicians we've booked our teams have

18
00:00:35,340 --> 00:00:36,719
both been doing this work independently

19
00:00:36,719 --> 00:00:38,700
for now for a number of years citizen

20
00:00:38,700 --> 00:00:40,800
lab found the first NSO exploit in the

21
00:00:40,800 --> 00:00:43,559
world back in 2016 already

22
00:00:43,559 --> 00:00:44,820
um this is working on NSO since about

23
00:00:44,820 --> 00:00:47,040
2018 including with the Pegasus project

24
00:00:47,040 --> 00:00:48,960
last year

25
00:00:48,960 --> 00:00:50,520
um we kind of realized introduce Yoda we

26
00:00:50,520 --> 00:00:52,079
found a lot of cases

27
00:00:52,079 --> 00:00:53,280
um but we haven't really spent the time

28
00:00:53,280 --> 00:00:54,600
to like dig in some of the technical

29
00:00:54,600 --> 00:00:56,399
details and understand exactly what is

30
00:00:56,399 --> 00:00:58,559
the history of how these capabilities by

31
00:00:58,559 --> 00:01:00,480
NSO have evolved over time and so we

32
00:01:00,480 --> 00:01:01,860
decided a good idea to start comparing

33
00:01:01,860 --> 00:01:03,180
some of our notes look at some of the

34
00:01:03,180 --> 00:01:04,799
forensic evidence we have and see what

35
00:01:04,799 --> 00:01:06,420
we can learn from this by taking a

36
00:01:06,420 --> 00:01:07,439
different perspective and digging into

37
00:01:07,439 --> 00:01:09,600
the the technical details and the

38
00:01:09,600 --> 00:01:11,580
forensic evidence

39
00:01:11,580 --> 00:01:12,960
I think everyone is here in this room

40
00:01:12,960 --> 00:01:14,460
will not known about NSO and I've heard

41
00:01:14,460 --> 00:01:15,900
of them before

42
00:01:15,900 --> 00:01:17,760
um just to make sure we're on the same

43
00:01:17,760 --> 00:01:19,979
page NSO is really cyber surveillance

44
00:01:19,979 --> 00:01:21,299
company they make spyware tools that

45
00:01:21,299 --> 00:01:23,159
they sell specifically to governments

46
00:01:23,159 --> 00:01:24,659
around the world they say it's

47
00:01:24,659 --> 00:01:26,100
retargeting terrorists and criminals but

48
00:01:26,100 --> 00:01:27,960
we'll see that that's really not often

49
00:01:27,960 --> 00:01:29,400
the case

50
00:01:29,400 --> 00:01:31,740
um on the right hand side here we'll see

51
00:01:31,740 --> 00:01:33,119
um a picture of some of the capabilities

52
00:01:33,119 --> 00:01:35,040
this is from old brochure from about six

53
00:01:35,040 --> 00:01:36,720
years ago and they talk about what they

54
00:01:36,720 --> 00:01:38,100
can retrieve from a mobile device it's

55
00:01:38,100 --> 00:01:40,020
basically all of the data like SMS email

56
00:01:40,020 --> 00:01:42,720
turning on the mic and just to make it a

57
00:01:42,720 --> 00:01:44,880
bit more personal the actual name NSO

58
00:01:44,880 --> 00:01:46,860
comes from the initials of the three

59
00:01:46,860 --> 00:01:49,500
co-founders so um people still love the

60
00:01:49,500 --> 00:01:50,939
company are the guy here on the far left

61
00:01:50,939 --> 00:01:53,280
as a child of Julio and the person of

62
00:01:53,280 --> 00:01:55,740
default fire right I'm really Julio is

63
00:01:55,740 --> 00:01:57,600
the long time CEO and he's a he's an

64
00:01:57,600 --> 00:01:58,740
intern character who might come back to

65
00:01:58,740 --> 00:02:00,720
him simulator

66
00:02:00,720 --> 00:02:02,899
foreign

67
00:02:05,899 --> 00:02:07,979
but actually how often they're getting

68
00:02:07,979 --> 00:02:09,720
caught and how often their Aspire has

69
00:02:09,720 --> 00:02:11,280
been found on the devices of journalists

70
00:02:11,280 --> 00:02:13,200
and activists and uh illegitimate

71
00:02:13,200 --> 00:02:14,700
targets around the world here are just

72
00:02:14,700 --> 00:02:16,560
some of the cases that uh ourselves

73
00:02:16,560 --> 00:02:18,000
amnesty and also citizen lab have found

74
00:02:18,000 --> 00:02:20,040
over the last number of years in this

75
00:02:20,040 --> 00:02:21,060
talk we're not really going to focus on

76
00:02:21,060 --> 00:02:22,500
the individual cases we've talked about

77
00:02:22,500 --> 00:02:24,060
it elsewhere instead we're going to look

78
00:02:24,060 --> 00:02:25,920
at more in the technical technical

79
00:02:25,920 --> 00:02:28,760
evidence technical information

80
00:02:29,040 --> 00:02:30,900
so that bill go ahead with what are zero

81
00:02:30,900 --> 00:02:32,099
clicks

82
00:02:32,099 --> 00:02:34,080
yeah thanks thanks Danica and it's great

83
00:02:34,080 --> 00:02:35,520
to be here this is my first Forest

84
00:02:35,520 --> 00:02:37,040
bulletin so very excited to be talking

85
00:02:37,040 --> 00:02:39,720
uh so you've probably all heard of this

86
00:02:39,720 --> 00:02:41,940
term zero click or zero click exploit

87
00:02:41,940 --> 00:02:43,920
and a lot of the exploits in fact pretty

88
00:02:43,920 --> 00:02:45,060
much all of them that we're going to be

89
00:02:45,060 --> 00:02:47,940
discussing today are zero click exploits

90
00:02:47,940 --> 00:02:50,220
so what is the precise definition that

91
00:02:50,220 --> 00:02:51,840
we're using here what it what exactly is

92
00:02:51,840 --> 00:02:54,900
zero click well uh the way that we

93
00:02:54,900 --> 00:02:56,640
Define zero clicks for the purpose of

94
00:02:56,640 --> 00:03:00,360
this talk are exploits which are both

95
00:03:00,360 --> 00:03:04,200
remote and interactionless so what do we

96
00:03:04,200 --> 00:03:06,959
mean by remote well we mean that there

97
00:03:06,959 --> 00:03:09,959
is no privileged vantage point no

98
00:03:09,959 --> 00:03:12,659
special access to the Target this can

99
00:03:12,659 --> 00:03:14,280
really be deployed essentially from

100
00:03:14,280 --> 00:03:16,319
anywhere in the world against the target

101
00:03:16,319 --> 00:03:19,879
so things like uh attacks where you're

102
00:03:19,879 --> 00:03:21,720
screwing with the person's internet

103
00:03:21,720 --> 00:03:24,480
connection like packet injection or man

104
00:03:24,480 --> 00:03:26,280
in the middle attacks or obviously

105
00:03:26,280 --> 00:03:28,379
physical access to the device even

106
00:03:28,379 --> 00:03:30,360
though those don't involve the victim

107
00:03:30,360 --> 00:03:32,159
interacting with anything to become

108
00:03:32,159 --> 00:03:35,099
infected uh it it these do not qualify

109
00:03:35,099 --> 00:03:37,019
as zero clicks by our definition because

110
00:03:37,019 --> 00:03:39,659
they're not remote and similarly the

111
00:03:39,659 --> 00:03:42,180
attack has to be interactionless so

112
00:03:42,180 --> 00:03:44,940
things like clicking on a link in an SMS

113
00:03:44,940 --> 00:03:47,340
to become infected installing an app

114
00:03:47,340 --> 00:03:49,739
accepting an invite these are things

115
00:03:49,739 --> 00:03:51,900
which you know I mean obviously involve

116
00:03:51,900 --> 00:03:54,180
more than zero clicks uh which is where

117
00:03:54,180 --> 00:03:56,239
the where the term comes from

118
00:03:56,239 --> 00:03:59,940
so back in the quote unquote good old

119
00:03:59,940 --> 00:04:03,900
days of 2001 uh zero click attacks were

120
00:04:03,900 --> 00:04:06,659
actually not super hard in many cases to

121
00:04:06,659 --> 00:04:09,420
carry off to carry out because there was

122
00:04:09,420 --> 00:04:11,819
this great uh standard from the

123
00:04:11,819 --> 00:04:13,439
perspective of attackers called WAP

124
00:04:13,439 --> 00:04:14,879
which I guess is what Wireless

125
00:04:14,879 --> 00:04:17,399
application protocol I it's so old I

126
00:04:17,399 --> 00:04:18,720
don't even know what it stands for but

127
00:04:18,720 --> 00:04:20,880
it stands for something like that and

128
00:04:20,880 --> 00:04:22,979
there were Provisions within the WAP

129
00:04:22,979 --> 00:04:25,560
standard to be able to push

130
00:04:25,560 --> 00:04:27,900
messages at phones and then the phone

131
00:04:27,900 --> 00:04:29,820
would take a certain action based on the

132
00:04:29,820 --> 00:04:32,160
type of message that was pushed so in

133
00:04:32,160 --> 00:04:34,380
particular uh I'm not sure if you can

134
00:04:34,380 --> 00:04:36,240
read read that in the back but basically

135
00:04:36,240 --> 00:04:37,800
there was a type of message called a

136
00:04:37,800 --> 00:04:39,479
service loading message and there were

137
00:04:39,479 --> 00:04:41,100
various parameters that you could pass

138
00:04:41,100 --> 00:04:43,020
through this message uh so the service

139
00:04:43,020 --> 00:04:45,660
loading message would instruct the phone

140
00:04:45,660 --> 00:04:48,540
that received it to open a URL and I

141
00:04:48,540 --> 00:04:50,460
guess you could specify this execute low

142
00:04:50,460 --> 00:04:53,220
action which the standard says you know

143
00:04:53,220 --> 00:04:55,680
opening the URL in a browser must be

144
00:04:55,680 --> 00:04:57,540
carried out in a non-user intrusive

145
00:04:57,540 --> 00:05:00,419
manner which is sort of a interesting

146
00:05:00,419 --> 00:05:03,419
way to kind of get a free zero click

147
00:05:03,419 --> 00:05:06,120
exploit if you have access to the you

148
00:05:06,120 --> 00:05:08,400
know sort of massive Buffet of browser

149
00:05:08,400 --> 00:05:10,500
exploits which are constantly uh being

150
00:05:10,500 --> 00:05:13,919
found out there so kind of a nice way to

151
00:05:13,919 --> 00:05:15,660
convert a browser exploit which might

152
00:05:15,660 --> 00:05:17,340
ordinarily require the victim to click

153
00:05:17,340 --> 00:05:19,860
on a link into this sort of remotely

154
00:05:19,860 --> 00:05:22,860
Deployable zero click exploit uh

155
00:05:22,860 --> 00:05:26,039
fortunately nowadays this uh WAP has

156
00:05:26,039 --> 00:05:28,500
gone by the wayside and if you actually

157
00:05:28,500 --> 00:05:31,139
want a true zero click exploit you need

158
00:05:31,139 --> 00:05:33,419
to work just a little bit harder than

159
00:05:33,419 --> 00:05:35,460
finding a browser exploit

160
00:05:35,460 --> 00:05:38,699
so the first indications that we started

161
00:05:38,699 --> 00:05:40,800
seeing uh in media reporting and other

162
00:05:40,800 --> 00:05:43,199
sources that there were this sort of

163
00:05:43,199 --> 00:05:45,600
sort of new generation of zeroclick

164
00:05:45,600 --> 00:05:48,380
exploits being deployed came around uh

165
00:05:48,380 --> 00:05:51,139
2017 there were some reports about

166
00:05:51,139 --> 00:05:54,000
Pegasus 3 which was the successor to

167
00:05:54,000 --> 00:05:57,300
Pegasus 2 uh which is NSO groups

168
00:05:57,300 --> 00:06:00,360
Flagship spyware product and reports

169
00:06:00,360 --> 00:06:03,120
said well this is so sophisticated the

170
00:06:03,120 --> 00:06:04,740
target doesn't even need to click on a

171
00:06:04,740 --> 00:06:07,620
link uh it was sold reportedly to the

172
00:06:07,620 --> 00:06:10,680
Saudis for 55 million so not necessarily

173
00:06:10,680 --> 00:06:12,259
a cheap thing to buy

174
00:06:12,259 --> 00:06:15,360
and in 2019 was sort of the first

175
00:06:15,360 --> 00:06:17,699
Concrete technical evidence that these

176
00:06:17,699 --> 00:06:20,340
zero clicks were being exploited so

177
00:06:20,340 --> 00:06:22,620
there was a famous uh case the the

178
00:06:22,620 --> 00:06:24,720
WhatsApp case the WhatsApp missed call

179
00:06:24,720 --> 00:06:27,840
hack where WhatsApp was able to detect

180
00:06:27,840 --> 00:06:30,720
that there was active exploitation of a

181
00:06:30,720 --> 00:06:32,639
vulnerability in the WhatsApp call stack

182
00:06:32,639 --> 00:06:35,400
going on and they were able to or in a

183
00:06:35,400 --> 00:06:37,620
two-week period between April and May

184
00:06:37,620 --> 00:06:41,039
2019 they were able to identify based on

185
00:06:41,039 --> 00:06:43,620
their systems their Telemetry 1400

186
00:06:43,620 --> 00:06:45,240
mobile phones were targeted with this

187
00:06:45,240 --> 00:06:49,160
exploit and it was CDE 2019

188
00:06:49,160 --> 00:06:51,800
3568 they issued a patch

189
00:06:51,800 --> 00:06:54,120
and this was sort of the first Concrete

190
00:06:54,120 --> 00:06:55,800
technical evidence hey these zero clicks

191
00:06:55,800 --> 00:06:58,139
are out there the attack obviously

192
00:06:58,139 --> 00:07:00,600
didn't require picking up the call this

193
00:07:00,600 --> 00:07:02,940
was a buffer overflow in the the crypto

194
00:07:02,940 --> 00:07:05,460
negotiation that rather unfortunately

195
00:07:05,460 --> 00:07:07,259
happened before the call was was picked

196
00:07:07,259 --> 00:07:09,780
up by the by the victim

197
00:07:09,780 --> 00:07:11,400
of course there was also a very famous

198
00:07:11,400 --> 00:07:14,039
report from Reuters in 2019 about how

199
00:07:14,039 --> 00:07:16,919
UAE used this exploit called karma to

200
00:07:16,919 --> 00:07:19,860
spy on uh activists foreign governments

201
00:07:19,860 --> 00:07:23,039
dissidents journalists Etc in 2016 and

202
00:07:23,039 --> 00:07:26,220
2017 uh and then of course last year in

203
00:07:26,220 --> 00:07:29,880
2021 there was uh the the famous case of

204
00:07:29,880 --> 00:07:32,759
uh this exploit uh which was captured I

205
00:07:32,759 --> 00:07:34,080
was the first zero-click iMessage

206
00:07:34,080 --> 00:07:36,120
exploit uh we were actually able to to

207
00:07:36,120 --> 00:07:38,639
recover it from a from a victim phone uh

208
00:07:38,639 --> 00:07:41,039
this was a pegasus exploit essentially

209
00:07:41,039 --> 00:07:43,560
there was a bug in iMessage that we'll

210
00:07:43,560 --> 00:07:46,080
talk about a little bit later dealing

211
00:07:46,080 --> 00:07:48,120
with processing of of certain types of

212
00:07:48,120 --> 00:07:51,060
attachments

213
00:07:51,060 --> 00:07:52,380
um and I'll head it back over to my to

214
00:07:52,380 --> 00:07:53,880
my co-speaker Danica to talk a little

215
00:07:53,880 --> 00:07:55,560
bit about uh the title of the talk

216
00:07:55,560 --> 00:07:57,720
exploit archeology how are we finding

217
00:07:57,720 --> 00:07:59,220
these exploits from forensic analysis

218
00:07:59,220 --> 00:08:02,960
and and and what is the process there

219
00:08:03,360 --> 00:08:05,220
um so as you can imagine we started

220
00:08:05,220 --> 00:08:07,020
talking a little bit about zero clicks

221
00:08:07,020 --> 00:08:08,520
um and we started investigating zero

222
00:08:08,520 --> 00:08:09,599
clicks because of some of these media

223
00:08:09,599 --> 00:08:10,620
articles we're realizing this is

224
00:08:10,620 --> 00:08:11,819
something that's being deployed in the

225
00:08:11,819 --> 00:08:13,500
wild I started to realize okay we need

226
00:08:13,500 --> 00:08:14,940
to investigate this because this is

227
00:08:14,940 --> 00:08:16,199
actually quite a different

228
00:08:16,199 --> 00:08:17,400
um approach to what we're using before

229
00:08:17,400 --> 00:08:19,560
typically we would uh rely on

230
00:08:19,560 --> 00:08:20,879
journalists or activists coming to us

231
00:08:20,879 --> 00:08:22,560
being like I got this weird SMS message

232
00:08:22,560 --> 00:08:24,539
I got this weird link or a weird email

233
00:08:24,539 --> 00:08:26,220
they would come to us with this evidence

234
00:08:26,220 --> 00:08:27,840
we would check it and try to investigate

235
00:08:27,840 --> 00:08:29,639
that so when we started to realize that

236
00:08:29,639 --> 00:08:31,199
zero clicks might be deployed we needed

237
00:08:31,199 --> 00:08:33,240
to realize okay the individual is not

238
00:08:33,240 --> 00:08:34,320
going to detect it themselves and said

239
00:08:34,320 --> 00:08:35,700
we need to be more proactive and we need

240
00:08:35,700 --> 00:08:37,080
to go and start finding ways to attack

241
00:08:37,080 --> 00:08:38,940
this on our device even when a user does

242
00:08:38,940 --> 00:08:41,219
not notice it themselves so how we do

243
00:08:41,219 --> 00:08:43,440
this is we start collecting some

244
00:08:43,440 --> 00:08:45,720
forensic data from a device on iPhones

245
00:08:45,720 --> 00:08:47,519
is actually quite straightforward a lot

246
00:08:47,519 --> 00:08:48,660
of information is included in iPhone

247
00:08:48,660 --> 00:08:50,399
backup so we'll create an iPhone backup

248
00:08:50,399 --> 00:08:51,660
of the phone and then we'll write

249
00:08:51,660 --> 00:08:53,399
parishes for different databases on the

250
00:08:53,399 --> 00:08:55,080
on the system so it might be for SMS

251
00:08:55,080 --> 00:08:57,240
databases Eye Master databases other

252
00:08:57,240 --> 00:08:59,160
system log files and then we'd start

253
00:08:59,160 --> 00:09:00,480
looking for known indicators and

254
00:09:00,480 --> 00:09:02,279
compromise on this phone so for example

255
00:09:02,279 --> 00:09:03,660
maybe we'd look for a known Pegasus

256
00:09:03,660 --> 00:09:05,399
domain that we have previously

257
00:09:05,399 --> 00:09:07,019
identified then we'll see okay is there

258
00:09:07,019 --> 00:09:08,820
any suspicious processes on the phone

259
00:09:08,820 --> 00:09:10,740
shortly after that link is opened and

260
00:09:10,740 --> 00:09:12,000
then we'll know that process name for

261
00:09:12,000 --> 00:09:14,100
example is a Pegasus related process and

262
00:09:14,100 --> 00:09:15,240
then we'll kind of do the person reverse

263
00:09:15,240 --> 00:09:16,620
so instead we'll go and look at a

264
00:09:16,620 --> 00:09:18,839
different phone see this Pegasus process

265
00:09:18,839 --> 00:09:20,640
showing up on the device and then try to

266
00:09:20,640 --> 00:09:22,680
look around at the same time at the same

267
00:09:22,680 --> 00:09:24,180
time on that phone and figure out how

268
00:09:24,180 --> 00:09:26,040
did that actual Pegasus installation get

269
00:09:26,040 --> 00:09:27,779
on the device so maybe that they opened

270
00:09:27,779 --> 00:09:29,399
the link or maybe that they shortly

271
00:09:29,399 --> 00:09:30,839
beforehand received an iMessage message

272
00:09:30,839 --> 00:09:32,640
and through this kind of process of

273
00:09:32,640 --> 00:09:34,440
chaining over time we can start

274
00:09:34,440 --> 00:09:36,000
understanding here's no malicious

275
00:09:36,000 --> 00:09:37,260
behavior and then try to figure out how

276
00:09:37,260 --> 00:09:40,080
exactly that that reached the device

277
00:09:40,080 --> 00:09:41,640
um so you can do this manually and also

278
00:09:41,640 --> 00:09:43,320
you can use tools like mvt which helps

279
00:09:43,320 --> 00:09:44,580
automate some of this process of

280
00:09:44,580 --> 00:09:46,560
extracting the data and creating

281
00:09:46,560 --> 00:09:48,180
timelines that you can then use to to

282
00:09:48,180 --> 00:09:49,320
look for this kind of suspicious

283
00:09:49,320 --> 00:09:50,580
behavior and try to understand how

284
00:09:50,580 --> 00:09:53,940
exactly it got to the to the phone

285
00:09:53,940 --> 00:09:56,040
so now we're going to get into the meat

286
00:09:56,040 --> 00:09:56,940
of the talk we're going to go through

287
00:09:56,940 --> 00:09:59,160
some of the exploits that we have seen

288
00:09:59,160 --> 00:10:00,720
being used in the wild and talk a little

289
00:10:00,720 --> 00:10:02,399
bit about how well do you use and what

290
00:10:02,399 --> 00:10:04,140
we suspect they were uh they're

291
00:10:04,140 --> 00:10:06,899
exploiting exploding other phones

292
00:10:06,899 --> 00:10:09,420
so the first one we have is uh this

293
00:10:09,420 --> 00:10:11,040
vulnerability here is actually called a

294
00:10:11,040 --> 00:10:12,899
Golden Gate uh like the Golden Gate

295
00:10:12,899 --> 00:10:15,180
Bridge so this is uh the earliest zero

296
00:10:15,180 --> 00:10:16,500
click exploit we saw you to use in the

297
00:10:16,500 --> 00:10:18,839
wild all the way back in iOS 10. so

298
00:10:18,839 --> 00:10:20,339
remember this is already like two years

299
00:10:20,339 --> 00:10:21,600
before the WhatsApp hacks is really

300
00:10:21,600 --> 00:10:22,860
early before there's really any public

301
00:10:22,860 --> 00:10:24,899
knowledge about zero clicks being used

302
00:10:24,899 --> 00:10:27,060
so in this case we saw it being uh used

303
00:10:27,060 --> 00:10:30,060
against a few targets successfully

304
00:10:30,060 --> 00:10:31,800
um it affected some versions of iOS 10

305
00:10:31,800 --> 00:10:33,660
and we believe it happened it was it was

306
00:10:33,660 --> 00:10:35,580
exploring the phone somewhat uh over I'm

307
00:10:35,580 --> 00:10:37,200
somehow over iMessage

308
00:10:37,200 --> 00:10:38,700
so you may be wondering how do we know

309
00:10:38,700 --> 00:10:40,680
this so we actually know this based on

310
00:10:40,680 --> 00:10:43,080
one quite key file that we were able to

311
00:10:43,080 --> 00:10:44,760
find on iPhones it's called the ID

312
00:10:44,760 --> 00:10:46,680
status cache file so you can see the

313
00:10:46,680 --> 00:10:48,300
full title here it's com Apple ID

314
00:10:48,300 --> 00:10:51,060
Services ID stagecast.plist and so what

315
00:10:51,060 --> 00:10:52,980
this file is it's basically a cache of

316
00:10:52,980 --> 00:10:54,300
all those different Apple accounts that

317
00:10:54,300 --> 00:10:55,860
have interacted with that particular

318
00:10:55,860 --> 00:10:58,079
phone so example if you call sensor on

319
00:10:58,079 --> 00:11:00,240
iMessage or you FaceTime them or maybe

320
00:11:00,240 --> 00:11:01,920
even airdrop them something this file

321
00:11:01,920 --> 00:11:03,540
will keep a record of which other Apple

322
00:11:03,540 --> 00:11:05,100
account was interacting with your with

323
00:11:05,100 --> 00:11:07,140
your phone so what we did is we looked

324
00:11:07,140 --> 00:11:08,880
at these devices that were compromised

325
00:11:08,880 --> 00:11:10,680
by Golden Gate and the Golden Gate

326
00:11:10,680 --> 00:11:12,300
process and then we see around the same

327
00:11:12,300 --> 00:11:13,980
time maybe a little bit beforehand a

328
00:11:13,980 --> 00:11:15,959
little bit afterwards we see that a

329
00:11:15,959 --> 00:11:17,640
malicious attacker controlled Apple

330
00:11:17,640 --> 00:11:19,680
account is on the phone

331
00:11:19,680 --> 00:11:21,899
um and we see that it's related to

332
00:11:21,899 --> 00:11:23,459
iMessage and so we saw this on a number

333
00:11:23,459 --> 00:11:24,899
of phones you could say Okay quite

334
00:11:24,899 --> 00:11:26,339
clearly this iMessage this Apple account

335
00:11:26,339 --> 00:11:28,200
is is delivering this this one ability

336
00:11:28,200 --> 00:11:30,740
over iMessage

337
00:11:30,959 --> 00:11:32,220
um this is a little bit of what the

338
00:11:32,220 --> 00:11:33,480
timeline looks like we see a crash

339
00:11:33,480 --> 00:11:35,160
report a file drop the process starts

340
00:11:35,160 --> 00:11:38,640
another Pegasus process starts pcsd and

341
00:11:38,640 --> 00:11:40,019
this is what it looks like on the phone

342
00:11:40,019 --> 00:11:41,880
we also see the email address was found

343
00:11:41,880 --> 00:11:43,800
on this on this table

344
00:11:43,800 --> 00:11:45,120
so next one we're going to look at is

345
00:11:45,120 --> 00:11:46,440
called uh what we call this is called

346
00:11:46,440 --> 00:11:48,540
tamper exploit so this is the next

347
00:11:48,540 --> 00:11:51,000
version of iOS for iOS 11. and it was

348
00:11:51,000 --> 00:11:52,860
targeted quite broadly from January 2018

349
00:11:52,860 --> 00:11:55,680
until December 2018. in this case what's

350
00:11:55,680 --> 00:11:56,579
interesting is that it actually wasn't

351
00:11:56,579 --> 00:11:58,079
an iMessage exploit as far as you can

352
00:11:58,079 --> 00:11:59,579
tell instead when we look at the ID

353
00:11:59,579 --> 00:12:02,519
stages cache file we see lookups with a

354
00:12:02,519 --> 00:12:04,200
malicious Pegasus linked email address

355
00:12:04,200 --> 00:12:06,180
but it's time for the com apple Tumblr

356
00:12:06,180 --> 00:12:08,519
service so I don't know what this is but

357
00:12:08,519 --> 00:12:10,380
a com apple Thumper is actually the

358
00:12:10,380 --> 00:12:12,899
internal Apple name for a feature called

359
00:12:12,899 --> 00:12:14,880
voice over Wi-Fi it's some kind of a

360
00:12:14,880 --> 00:12:16,680
handoff feature to let you have phone

361
00:12:16,680 --> 00:12:18,120
calls over the Wi-Fi network instead of

362
00:12:18,120 --> 00:12:19,560
your mobile operator so we don't know

363
00:12:19,560 --> 00:12:21,120
exactly how this exploit operated we

364
00:12:21,120 --> 00:12:22,500
don't have many cases of this but we do

365
00:12:22,500 --> 00:12:24,779
know that this uh service was something

366
00:12:24,779 --> 00:12:27,480
used by NSO by their customers to try

367
00:12:27,480 --> 00:12:29,640
and deliver this exploit successfully on

368
00:12:29,640 --> 00:12:31,079
the phone so I've seen quite a few

369
00:12:31,079 --> 00:12:33,240
countries in Hungary India Morocco and

370
00:12:33,240 --> 00:12:34,620
so we know we know what happened we just

371
00:12:34,620 --> 00:12:37,800
don't know exactly how it was being used

372
00:12:37,800 --> 00:12:40,920
and we really see a message exploits and

373
00:12:40,920 --> 00:12:42,839
zero clicks kickoff is just uh with

374
00:12:42,839 --> 00:12:45,000
vulnerability in iOS 12. so because the

375
00:12:45,000 --> 00:12:46,560
role can de-explode again it was uh

376
00:12:46,560 --> 00:12:48,480
explored very broadly I think from all

377
00:12:48,480 --> 00:12:49,860
investigations we found at least dozens

378
00:12:49,860 --> 00:12:51,360
With Friends of confirmation but it's

379
00:12:51,360 --> 00:12:52,200
probably hundreds or maybe even

380
00:12:52,200 --> 00:12:54,180
thousands of of devices are compromised

381
00:12:54,180 --> 00:12:55,620
with this it's really really extensive

382
00:12:55,620 --> 00:12:58,620
uh it was airless exploded in iOS 12.1.4

383
00:12:58,620 --> 00:13:00,660
and we know this is again um what

384
00:13:00,660 --> 00:13:02,279
iMessage what's really interesting about

385
00:13:02,279 --> 00:13:03,899
this particular exploit is how the

386
00:13:03,899 --> 00:13:05,639
attackers succeeded in getting full code

387
00:13:05,639 --> 00:13:07,079
execution on the device

388
00:13:07,079 --> 00:13:09,240
so what we suspect about zero clicks is

389
00:13:09,240 --> 00:13:10,680
that it's a much difficult more

390
00:13:10,680 --> 00:13:12,600
difficult environment to compromise the

391
00:13:12,600 --> 00:13:13,620
device you don't have a JavaScript

392
00:13:13,620 --> 00:13:14,940
running you don't have all these other

393
00:13:14,940 --> 00:13:16,260
nice features that help you calculate

394
00:13:16,260 --> 00:13:17,940
the offsets and calculate the memory you

395
00:13:17,940 --> 00:13:19,200
only just get one shot to send the

396
00:13:19,200 --> 00:13:21,600
payload and hope you get successful so

397
00:13:21,600 --> 00:13:24,000
what we suspect happened here is that uh

398
00:13:24,000 --> 00:13:26,820
NSO is just using the the zero click

399
00:13:26,820 --> 00:13:28,440
kind of like what the what push was

400
00:13:28,440 --> 00:13:29,760
doing simply to get the initial code

401
00:13:29,760 --> 00:13:31,560
execution and then pivot from the

402
00:13:31,560 --> 00:13:33,899
iMessage to a webkit instance open the

403
00:13:33,899 --> 00:13:36,240
webkit instance which we saw here which

404
00:13:36,240 --> 00:13:38,820
the Pegasus zeroclick opened Apple music

405
00:13:38,820 --> 00:13:40,980
loaded this URL at the bottom which is a

406
00:13:40,980 --> 00:13:43,200
known Pegasus exploit domain and from

407
00:13:43,200 --> 00:13:44,940
building this HTML or JavaScript they're

408
00:13:44,940 --> 00:13:46,139
able to run a regular kind of browser

409
00:13:46,139 --> 00:13:47,820
Expo on the phone and then proceed to

410
00:13:47,820 --> 00:13:49,740
exploit the phone this is quite

411
00:13:49,740 --> 00:13:51,120
interesting and see this kind of see

412
00:13:51,120 --> 00:13:53,459
this pattern uh going going through the

413
00:13:53,459 --> 00:13:54,959
something exploits where they try and go

414
00:13:54,959 --> 00:13:56,760
from this constrained environment to a

415
00:13:56,760 --> 00:13:59,899
full webkit environment

416
00:14:00,240 --> 00:14:01,560
um

417
00:14:01,560 --> 00:14:03,120
so I guess one question we want to know

418
00:14:03,120 --> 00:14:05,040
is like how severe is the risk of zero

419
00:14:05,040 --> 00:14:06,899
click vulnerabilities uh so this is

420
00:14:06,899 --> 00:14:08,600
we've created a metric which we call the

421
00:14:08,600 --> 00:14:11,279
observed update deficit and what this is

422
00:14:11,279 --> 00:14:14,040
trying to capture is what risk is there

423
00:14:14,040 --> 00:14:15,360
to a user who's always on the latest

424
00:14:15,360 --> 00:14:17,760
version of iOS and so we because we have

425
00:14:17,760 --> 00:14:18,899
the quite a number of cases this we have

426
00:14:18,899 --> 00:14:20,519
to calculate so when was the first time

427
00:14:20,519 --> 00:14:22,019
we saw a particular version exploited

428
00:14:22,019 --> 00:14:23,579
and how long is it before the next

429
00:14:23,579 --> 00:14:25,800
version of iOS is released and so for

430
00:14:25,800 --> 00:14:27,300
this particular exploit we see it was 75

431
00:14:27,300 --> 00:14:29,519
days in 2019 for a user who has very

432
00:14:29,519 --> 00:14:30,839
security cautious was also the latest

433
00:14:30,839 --> 00:14:32,760
version of iOS could have theoretically

434
00:14:32,760 --> 00:14:34,860
been compromised using this NSO group

435
00:14:34,860 --> 00:14:37,139
iMessage exploit and zeroclick and

436
00:14:37,139 --> 00:14:37,860
there's very little they could have done

437
00:14:37,860 --> 00:14:40,320
it done about it at the time

438
00:14:40,320 --> 00:14:41,940
so we see this is being exploded really

439
00:14:41,940 --> 00:14:44,880
widely all the way until August uh 2019

440
00:14:44,880 --> 00:14:46,740
so then what happened why did why did it

441
00:14:46,740 --> 00:14:47,940
stop it seems like it was a good exploit

442
00:14:47,940 --> 00:14:50,220
it was very reliable uh and so that's

443
00:14:50,220 --> 00:14:51,959
also an interesting story

444
00:14:51,959 --> 00:14:53,339
so we're going to go back to some other

445
00:14:53,339 --> 00:14:54,720
research that Google project zero

446
00:14:54,720 --> 00:14:57,120
released back in 2019 and so they were

447
00:14:57,120 --> 00:14:58,199
also looking at some of these media

448
00:14:58,199 --> 00:14:59,160
reports some of these talk about

449
00:14:59,160 --> 00:15:01,079
iMessage zero clicks and what they

450
00:15:01,079 --> 00:15:02,160
decided to do was to do their own

451
00:15:02,160 --> 00:15:03,660
research and figure out thinking like an

452
00:15:03,660 --> 00:15:05,940
attacker can they create their own zero

453
00:15:05,940 --> 00:15:07,920
click exploit targeting iPhone

454
00:15:07,920 --> 00:15:09,120
So In This research they talk about

455
00:15:09,120 --> 00:15:10,860
checking different attack surfaces and

456
00:15:10,860 --> 00:15:12,000
they also kind of realize that iMessage

457
00:15:12,000 --> 00:15:14,459
seems the most promising place to look

458
00:15:14,459 --> 00:15:16,320
at when they looked at iMessage they

459
00:15:16,320 --> 00:15:17,760
realized there were some problems with

460
00:15:17,760 --> 00:15:19,380
how iMessage was deserializing

461
00:15:19,380 --> 00:15:21,180
particular classes sent over iMessage

462
00:15:21,180 --> 00:15:23,040
and they could kind of abuse this to

463
00:15:23,040 --> 00:15:24,660
deserialize some child classes and use

464
00:15:24,660 --> 00:15:26,639
this to take control of the phone

465
00:15:26,639 --> 00:15:27,660
basically

466
00:15:27,660 --> 00:15:30,060
so they reported this to Apple in the

467
00:15:30,060 --> 00:15:32,940
summer of 2019 and we see her tweet from

468
00:15:32,940 --> 00:15:34,860
Samuel gross where he says that in iOS

469
00:15:34,860 --> 00:15:37,800
12.4.1 Apple deployed a mitigation which

470
00:15:37,800 --> 00:15:38,639
didn't completely fix the

471
00:15:38,639 --> 00:15:40,440
deserialization bug but at least it made

472
00:15:40,440 --> 00:15:44,100
it unreachable in iMessage and so this

473
00:15:44,100 --> 00:15:47,160
was uh yeah it basically stops um the

474
00:15:47,160 --> 00:15:49,260
iPhone from unserializing chart classes

475
00:15:49,260 --> 00:15:50,639
so what's really interesting is that

476
00:15:50,639 --> 00:15:52,079
this version where they purchased and

477
00:15:52,079 --> 00:15:54,600
iOS 12.41 is also the same version where

478
00:15:54,600 --> 00:15:55,980
this predictive vulnerability stops

479
00:15:55,980 --> 00:15:58,260
being deployed so what we believe from

480
00:15:58,260 --> 00:16:00,240
this is it's quite likely that project

481
00:16:00,240 --> 00:16:02,100
zero figured out that this this

482
00:16:02,100 --> 00:16:03,360
particular attack surface was being

483
00:16:03,360 --> 00:16:04,920
likely to be used and they actually

484
00:16:04,920 --> 00:16:06,300
managed to fix an attack surface that

485
00:16:06,300 --> 00:16:08,279
was actively being exploited by NSO

486
00:16:08,279 --> 00:16:09,660
group and maybe other track doctors in

487
00:16:09,660 --> 00:16:11,399
the wild and patched this vulnerability

488
00:16:11,399 --> 00:16:12,899
that was being used in like real time to

489
00:16:12,899 --> 00:16:14,940
Target uh civil society around the world

490
00:16:14,940 --> 00:16:17,480
so this is like a really positive

491
00:16:17,480 --> 00:16:19,500
outcome of kind of independent security

492
00:16:19,500 --> 00:16:23,120
research and offensive security research

493
00:16:23,699 --> 00:16:28,019
let's go so this brings us to the uh the

494
00:16:28,019 --> 00:16:30,120
next vulnerabilities we've seen iOS 10

495
00:16:30,120 --> 00:16:33,180
IOS 11 iOS 12 and iOS 12 the roll

496
00:16:33,180 --> 00:16:34,920
account D exploits stopped working as

497
00:16:34,920 --> 00:16:38,160
Danica said uh right when uh Apple was

498
00:16:38,160 --> 00:16:40,440
able to mitigate uh the issue that that

499
00:16:40,440 --> 00:16:43,980
Google project zero disclosed however uh

500
00:16:43,980 --> 00:16:46,259
while they were able to mitigate the

501
00:16:46,259 --> 00:16:47,639
issue in other words render the code

502
00:16:47,639 --> 00:16:50,339
unreachable through iMessage we heard

503
00:16:50,339 --> 00:16:52,860
that they didn't Apple didn't fully fix

504
00:16:52,860 --> 00:16:58,680
the issue OS wide until iOS 13.2 and

505
00:16:58,680 --> 00:17:01,560
perhaps interestingly we see another

506
00:17:01,560 --> 00:17:04,439
exploit deployed against iOS 13 but only

507
00:17:04,439 --> 00:17:06,780
against a single version and that

508
00:17:06,780 --> 00:17:09,540
exploits stops working in 13.2 which is

509
00:17:09,540 --> 00:17:12,059
when Apple mitigated the issue or

510
00:17:12,059 --> 00:17:15,179
resolved the issue OS wide so the

511
00:17:15,179 --> 00:17:17,819
potential thing that this suggests is

512
00:17:17,819 --> 00:17:20,280
that potentially the attack surface that

513
00:17:20,280 --> 00:17:22,020
Google project zero identified so that

514
00:17:22,020 --> 00:17:24,660
was closed for iMessage which NSO might

515
00:17:24,660 --> 00:17:27,059
have been exploiting in iOS 12 and then

516
00:17:27,059 --> 00:17:29,340
NSO might have found a different way to

517
00:17:29,340 --> 00:17:31,260
get at that same attack surface through

518
00:17:31,260 --> 00:17:34,380
a different service in this case uh calm

519
00:17:34,380 --> 00:17:36,720
Apple private alloy Photo Stream which

520
00:17:36,720 --> 00:17:38,760
is not iMessage it's I guess a separate

521
00:17:38,760 --> 00:17:41,039
service for doing like photo sharing and

522
00:17:41,039 --> 00:17:44,100
shared albums and that sort of stuff so

523
00:17:44,100 --> 00:17:47,039
potentially another indication that what

524
00:17:47,039 --> 00:17:48,539
Google project zero found was actually

525
00:17:48,539 --> 00:17:52,260
being used by NSO in the wild and just

526
00:17:52,260 --> 00:17:55,320
like the iOS 12 exploit this iOS 13

527
00:17:55,320 --> 00:17:58,860
exploit had the pivot to webkit so on

528
00:17:58,860 --> 00:18:01,500
devices that were targeted or infected

529
00:18:01,500 --> 00:18:03,059
with this exploit we were able to

530
00:18:03,059 --> 00:18:05,700
recover uh files from the cache which

531
00:18:05,700 --> 00:18:08,640
showed that webkit instances had been

532
00:18:08,640 --> 00:18:11,160
opened and JavaScript unfortunately

533
00:18:11,160 --> 00:18:12,780
there was no exploit saved in the cache

534
00:18:12,780 --> 00:18:13,980
but JavaScript that would then download

535
00:18:13,980 --> 00:18:16,039
an exploit was saved in the cache

536
00:18:16,039 --> 00:18:18,299
unfortunately as we recovered it you

537
00:18:18,299 --> 00:18:21,000
know years or months after the fact we

538
00:18:21,000 --> 00:18:22,740
couldn't actually get the juicy full

539
00:18:22,740 --> 00:18:24,600
contents of the exploit but you can see

540
00:18:24,600 --> 00:18:26,160
we're getting like a little bit a little

541
00:18:26,160 --> 00:18:28,679
bit closer here

542
00:18:28,679 --> 00:18:32,220
so oh I forgot to set up the joke here

543
00:18:32,220 --> 00:18:33,840
um so sorry about that

544
00:18:33,840 --> 00:18:37,500
um basically uh this uh period uh so

545
00:18:37,500 --> 00:18:39,360
basically we have the the iOS 12 exploit

546
00:18:39,360 --> 00:18:41,039
which was burned the iOS 13 exploit

547
00:18:41,039 --> 00:18:43,140
which was burned very quickly

548
00:18:43,140 --> 00:18:44,760
um and then there was a period of about

549
00:18:44,760 --> 00:18:48,179
eight months where we don't see any zero

550
00:18:48,179 --> 00:18:49,559
clicks being deployed against the latest

551
00:18:49,559 --> 00:18:52,559
versions of iOS so you might call this

552
00:18:52,559 --> 00:18:54,360
the great zero click winter it's the

553
00:18:54,360 --> 00:18:56,400
largest period of time that we've

554
00:18:56,400 --> 00:18:58,260
identified where there was no active

555
00:18:58,260 --> 00:19:00,059
zero click against the latest IOS

556
00:19:00,059 --> 00:19:02,039
versions however they were still going

557
00:19:02,039 --> 00:19:04,679
ham on the old iOS versions uh so you

558
00:19:04,679 --> 00:19:06,059
might call this the the great zero click

559
00:19:06,059 --> 00:19:08,700
winter I've very cleverly uh transfer

560
00:19:08,700 --> 00:19:11,100
interposed child of Julio the CEO of NSO

561
00:19:11,100 --> 00:19:13,440
former CEO of nso's photo on the head of

562
00:19:13,440 --> 00:19:15,720
a Game of Thrones character here

563
00:19:15,720 --> 00:19:17,400
um which I wish I had set up better on

564
00:19:17,400 --> 00:19:19,320
the last slide but anyway

565
00:19:19,320 --> 00:19:21,000
um so we have the grade zero click

566
00:19:21,000 --> 00:19:23,400
winter right the attack surface that NSO

567
00:19:23,400 --> 00:19:25,260
has been fishing out of looks to have

568
00:19:25,260 --> 00:19:27,840
been closed by project zero and Apple's

569
00:19:27,840 --> 00:19:30,000
patch so what do they have to do they

570
00:19:30,000 --> 00:19:32,760
have to find a new attack surface to go

571
00:19:32,760 --> 00:19:34,460
after so

572
00:19:34,460 --> 00:19:38,640
it looks like they did and around July

573
00:19:38,640 --> 00:19:41,160
2010 we started seeing them pivot to a

574
00:19:41,160 --> 00:19:43,500
new attack surface I am transcoder agent

575
00:19:43,500 --> 00:19:45,660
so no longer are they fishing off of

576
00:19:45,660 --> 00:19:47,880
this you know deserialized deserializing

577
00:19:47,880 --> 00:19:49,320
the child classes issue that has been

578
00:19:49,320 --> 00:19:52,380
fixed in 13.2 they're now looking at a

579
00:19:52,380 --> 00:19:54,419
new attack Target

580
00:19:54,419 --> 00:19:57,419
so around 5th of July 2020 we saw

581
00:19:57,419 --> 00:19:59,700
examples of this compromise beginning to

582
00:19:59,700 --> 00:20:00,960
happen

583
00:20:00,960 --> 00:20:03,240
and we saw in the system logs for the

584
00:20:03,240 --> 00:20:04,799
compromised phones you know the first

585
00:20:04,799 --> 00:20:07,140
thing was like you know oh a preview was

586
00:20:07,140 --> 00:20:09,360
being generated and there was some some

587
00:20:09,360 --> 00:20:11,400
error you know okay that that seems

588
00:20:11,400 --> 00:20:13,380
pretty pretty suspicious

589
00:20:13,380 --> 00:20:14,760
um but the next thing the thing that

590
00:20:14,760 --> 00:20:16,679
really sealed the deal as this being the

591
00:20:16,679 --> 00:20:20,100
vector is we see that as I am transcoder

592
00:20:20,100 --> 00:20:22,860
agent is generating this preview somehow

593
00:20:22,860 --> 00:20:25,500
it launches a webkit instance and this

594
00:20:25,500 --> 00:20:27,720
is really bad because we know that

595
00:20:27,720 --> 00:20:29,880
there's sort of an infinite supply of

596
00:20:29,880 --> 00:20:31,860
web webkit exploits out there that they

597
00:20:31,860 --> 00:20:33,840
can be drawing from and they can use

598
00:20:33,840 --> 00:20:35,820
this to compromise the device via the

599
00:20:35,820 --> 00:20:39,059
you know pivot to webkit technique

600
00:20:39,059 --> 00:20:41,400
so indeed that's what we saw in the next

601
00:20:41,400 --> 00:20:43,980
log log file element we saw that this

602
00:20:43,980 --> 00:20:46,140
webkit process launched by IM transcoder

603
00:20:46,140 --> 00:20:48,000
agent was downloading about 500

604
00:20:48,000 --> 00:20:49,679
kilobytes which is the size of sort of

605
00:20:49,679 --> 00:20:52,320
the first stage payload of Pegasus from

606
00:20:52,320 --> 00:20:55,440
uh this Pegasus installation server

607
00:20:55,440 --> 00:20:57,720
um now one of the interesting things

608
00:20:57,720 --> 00:21:00,780
here is again this exploit was was wound

609
00:21:00,780 --> 00:21:02,940
up and patched pretty quickly we didn't

610
00:21:02,940 --> 00:21:04,679
actually get the full full code of the

611
00:21:04,679 --> 00:21:06,539
exploit but it seems that in mitigation

612
00:21:06,539 --> 00:21:08,760
that Apple introduced in iOS 14 called

613
00:21:08,760 --> 00:21:12,419
Blast door uh prevented the exploit from

614
00:21:12,419 --> 00:21:14,460
working against iOS 14. so this was only

615
00:21:14,460 --> 00:21:17,220
deployed as a zero day for 14 days

616
00:21:17,220 --> 00:21:18,900
against thirteen five one and thirteen

617
00:21:18,900 --> 00:21:22,020
seven with a notable absence of 13 6. I

618
00:21:22,020 --> 00:21:23,220
don't think that's because we're we're

619
00:21:23,220 --> 00:21:24,660
missing data I think it's just because

620
00:21:24,660 --> 00:21:26,520
for whatever reason there was something

621
00:21:26,520 --> 00:21:28,380
different about 13 6 or they didn't want

622
00:21:28,380 --> 00:21:30,120
to deploy it against 13 6 for whatever

623
00:21:30,120 --> 00:21:31,620
reason

624
00:21:31,620 --> 00:21:35,640
um anyway as I mentioned blast door was

625
00:21:35,640 --> 00:21:37,440
the Apple mitigation that was introduced

626
00:21:37,440 --> 00:21:39,960
that that fixed this black last door

627
00:21:39,960 --> 00:21:42,059
introduced some additional sandboxing

628
00:21:42,059 --> 00:21:43,559
around preview generation for IM

629
00:21:43,559 --> 00:21:46,260
transcoder agent so you can see here

630
00:21:46,260 --> 00:21:50,520
Apple CEO Tim Cook laughing but it turns

631
00:21:50,520 --> 00:21:53,880
out that it was in fact Chalet Julio who

632
00:21:53,880 --> 00:21:55,620
had the last laugh on IM transcoder

633
00:21:55,620 --> 00:21:56,760
agent

634
00:21:56,760 --> 00:21:59,940
so it looks like you know we saw in the

635
00:21:59,940 --> 00:22:02,400
beginning of 2021 some some compromises

636
00:22:02,400 --> 00:22:05,280
that looked like potentially Pegasus was

637
00:22:05,280 --> 00:22:07,679
somehow breaking through blast door

638
00:22:07,679 --> 00:22:10,799
and what was going on well we dug in a

639
00:22:10,799 --> 00:22:13,740
little bit further and we were able to

640
00:22:13,740 --> 00:22:16,500
to identify both from from capturing the

641
00:22:16,500 --> 00:22:17,760
exploit and sharing with Google project

642
00:22:17,760 --> 00:22:20,100
zero and apple uh they did some great

643
00:22:20,100 --> 00:22:22,200
analyzes that they published on this

644
00:22:22,200 --> 00:22:24,659
um what was the root cause here so it

645
00:22:24,659 --> 00:22:26,760
turns out that iMessage like many

646
00:22:26,760 --> 00:22:29,220
messaging platforms loves animated gifs

647
00:22:29,220 --> 00:22:31,380
right and they want to make animated

648
00:22:31,380 --> 00:22:34,020
gifs Loop forever some animated gifs

649
00:22:34,020 --> 00:22:35,640
have a loop counter field which is set

650
00:22:35,640 --> 00:22:37,919
to like one or two so the GIF will show

651
00:22:37,919 --> 00:22:39,360
one or two times and then it'll stop

652
00:22:39,360 --> 00:22:40,740
being animated but you don't want that

653
00:22:40,740 --> 00:22:42,659
you want it to always be animated always

654
00:22:42,659 --> 00:22:45,120
be a looping so in case someone reads

655
00:22:45,120 --> 00:22:46,500
the message later they'll still see the

656
00:22:46,500 --> 00:22:47,520
animation

657
00:22:47,520 --> 00:22:50,340
so how do you make a gif Loop forever

658
00:22:50,340 --> 00:22:53,039
well the way that iMessage did it was

659
00:22:53,039 --> 00:22:55,559
they copied the animated gif made a copy

660
00:22:55,559 --> 00:22:57,780
of it edited the loop counter field in

661
00:22:57,780 --> 00:22:59,940
the copy and then displayed the edited

662
00:22:59,940 --> 00:23:01,380
GIF to the user so that they would see

663
00:23:01,380 --> 00:23:03,299
the infinite animation

664
00:23:03,299 --> 00:23:05,640
so okay step one copy the animated gif

665
00:23:05,640 --> 00:23:07,620
so they use this this function that

666
00:23:07,620 --> 00:23:09,600
sounds pretty innocuous right copy GIF

667
00:23:09,600 --> 00:23:12,299
from path to destination right it's just

668
00:23:12,299 --> 00:23:13,860
going to copy copy the GIF no issue

669
00:23:13,860 --> 00:23:15,539
there

670
00:23:15,539 --> 00:23:16,140
um

671
00:23:16,140 --> 00:23:18,780
actually there was a problem

672
00:23:18,780 --> 00:23:21,299
so this function is misleadingly named

673
00:23:21,299 --> 00:23:24,179
it does way more than just copy a gif

674
00:23:24,179 --> 00:23:27,419
file in fact it parsed the image outside

675
00:23:27,419 --> 00:23:30,360
of blast door it used the full image i o

676
00:23:30,360 --> 00:23:32,580
stack comprising 20 formats against

677
00:23:32,580 --> 00:23:35,820
anything with a DOT GIF extension so if

678
00:23:35,820 --> 00:23:37,200
you're an attacker and you find just

679
00:23:37,200 --> 00:23:40,080
like one like old crafty old image

680
00:23:40,080 --> 00:23:42,299
standard that has some bug in it you can

681
00:23:42,299 --> 00:23:44,520
just name it as dot GIF send it to the

682
00:23:44,520 --> 00:23:45,900
victim phone and it'll process it

683
00:23:45,900 --> 00:23:48,659
outside of blast door so at this point

684
00:23:48,659 --> 00:23:51,659
uh the phone gets pwned

685
00:23:51,659 --> 00:23:54,539
um and uh in in actuality they're not

686
00:23:54,539 --> 00:23:56,460
breaking through blast drawer as is

687
00:23:56,460 --> 00:23:57,960
common insecurity you know when you come

688
00:23:57,960 --> 00:23:59,159
up with a new mitigation new security

689
00:23:59,159 --> 00:24:01,440
feature there's probably some way to get

690
00:24:01,440 --> 00:24:03,120
around it because there's probably some

691
00:24:03,120 --> 00:24:04,740
old code path you forgot about or

692
00:24:04,740 --> 00:24:06,720
something that your expectation doesn't

693
00:24:06,720 --> 00:24:08,280
match the reality

694
00:24:08,280 --> 00:24:11,220
so after the exploit achieve code

695
00:24:11,220 --> 00:24:13,200
execution it then had to you know do

696
00:24:13,200 --> 00:24:14,460
stuff because it's in this sort of

697
00:24:14,460 --> 00:24:17,460
limited uh uh iMessage sandbox uh so

698
00:24:17,460 --> 00:24:19,200
what did it do we'll chain together some

699
00:24:19,200 --> 00:24:21,539
NS Expressions that downloaded the next

700
00:24:21,539 --> 00:24:23,880
stage and decrypted it with an AES key

701
00:24:23,880 --> 00:24:26,340
which was randomized unfortunately per

702
00:24:26,340 --> 00:24:30,059
attempt so if you get like one bit of

703
00:24:30,059 --> 00:24:31,860
the exploit chain from one attempt you

704
00:24:31,860 --> 00:24:33,419
can't necessarily decrypt it unless you

705
00:24:33,419 --> 00:24:35,039
have the full chain so it prevents us

706
00:24:35,039 --> 00:24:36,960
from seeing you know what was the whole

707
00:24:36,960 --> 00:24:38,700
uh chain that was being used we just got

708
00:24:38,700 --> 00:24:40,440
the the sort of first Parts in this

709
00:24:40,440 --> 00:24:43,020
entry this exploit is of course referred

710
00:24:43,020 --> 00:24:45,360
to as forced entry and also Megalodon

711
00:24:45,360 --> 00:24:47,640
you can see highlighted here uh in the

712
00:24:47,640 --> 00:24:49,440
uh the example of the URL that was

713
00:24:49,440 --> 00:24:51,659
fetched from from cloudfront Amazon

714
00:24:51,659 --> 00:24:53,700
cloudfront so Amazon eventually found

715
00:24:53,700 --> 00:24:56,340
out about this and shut it down

716
00:24:56,340 --> 00:24:58,080
um this this exploit was enormously

717
00:24:58,080 --> 00:24:59,700
successful on our observed update

718
00:24:59,700 --> 00:25:03,900
deficit metric 131 days in uh 2021 that

719
00:25:03,900 --> 00:25:05,940
you were vulnerable even if you were you

720
00:25:05,940 --> 00:25:07,799
know mashing that update button staying

721
00:25:07,799 --> 00:25:11,039
on the latest version of of iOS

722
00:25:11,039 --> 00:25:13,620
um Apple nicely enough uh sent out a

723
00:25:13,620 --> 00:25:15,120
notification because this exploit was

724
00:25:15,120 --> 00:25:16,980
delivered via iMessage they were able to

725
00:25:16,980 --> 00:25:18,840
see who was targeted and there were

726
00:25:18,840 --> 00:25:22,200
Targets in about 150 countries so headed

727
00:25:22,200 --> 00:25:24,059
back over to Danica to mention the the

728
00:25:24,059 --> 00:25:26,400
one android exploit that we have details

729
00:25:26,400 --> 00:25:27,840
on so I know we don't have much time

730
00:25:27,840 --> 00:25:30,419
left so I'll try to be um be quick here

731
00:25:30,419 --> 00:25:32,279
um so we looked a lot of a message on

732
00:25:32,279 --> 00:25:34,799
iOS exploits was not to say that there

733
00:25:34,799 --> 00:25:36,179
isn't exploits in zero clicks on Android

734
00:25:36,179 --> 00:25:38,039
it's just with all this visibility on

735
00:25:38,039 --> 00:25:39,960
Android person technical reasons so

736
00:25:39,960 --> 00:25:42,720
thinking back to this uh piece from

737
00:25:42,720 --> 00:25:44,700
WhatsApp so they said they found 400

738
00:25:44,700 --> 00:25:46,500
targets being targeted in just two weeks

739
00:25:46,500 --> 00:25:49,320
in April and May 2019. so what we want

740
00:25:49,320 --> 00:25:50,580
to do is we wanted to look and see if we

741
00:25:50,580 --> 00:25:52,260
could actually find some cases of this

742
00:25:52,260 --> 00:25:54,000
exploit being targeted maybe outside of

743
00:25:54,000 --> 00:25:55,679
this range

744
00:25:55,679 --> 00:25:57,419
and so what we did is we looked at some

745
00:25:57,419 --> 00:25:58,799
of the Android targets we had worked

746
00:25:58,799 --> 00:25:59,820
with previously that we identified

747
00:25:59,820 --> 00:26:01,620
through the Packers project many of

748
00:26:01,620 --> 00:26:03,480
these that already received one-click

749
00:26:03,480 --> 00:26:06,659
links uh sms's text messages so we try

750
00:26:06,659 --> 00:26:08,159
to find what's running on these phones

751
00:26:08,159 --> 00:26:10,080
that could link to the WhatsApp exploit

752
00:26:10,080 --> 00:26:11,580
and on one phone we found some

753
00:26:11,580 --> 00:26:12,779
particularly interesting interesting

754
00:26:12,779 --> 00:26:15,059
files so you'll see here this person's

755
00:26:15,059 --> 00:26:16,200
number was interested in the Pegasus

756
00:26:16,200 --> 00:26:18,059
project data and then a few seconds

757
00:26:18,059 --> 00:26:19,380
later maybe a minute later they started

758
00:26:19,380 --> 00:26:20,820
getting some calls from this unknown

759
00:26:20,820 --> 00:26:22,260
number and then what's really

760
00:26:22,260 --> 00:26:23,520
interesting is about a minute later a

761
00:26:23,520 --> 00:26:25,380
crash happens in WhatsApp

762
00:26:25,380 --> 00:26:27,299
again they start getting some more calls

763
00:26:27,299 --> 00:26:28,980
and later there's a crash there's some

764
00:26:28,980 --> 00:26:30,720
specifically in the WhatsApp Voiceover

765
00:26:30,720 --> 00:26:32,580
IP calling trade so if you remember when

766
00:26:32,580 --> 00:26:33,840
that build description earlier this was

767
00:26:33,840 --> 00:26:35,220
the same area of the code that was

768
00:26:35,220 --> 00:26:36,779
involved in establishing the call crypto

769
00:26:36,779 --> 00:26:38,940
uh that WhatsApp found the vulnerability

770
00:26:38,940 --> 00:26:41,039
and

771
00:26:41,039 --> 00:26:42,659
um what's really interesting to to see

772
00:26:42,659 --> 00:26:45,240
is that this particular crash files were

773
00:26:45,240 --> 00:26:48,000
from already uh in July 2018 so this is

774
00:26:48,000 --> 00:26:49,860
10 months before WhatsApp discovered

775
00:26:49,860 --> 00:26:51,539
vulnerability it seems almost certain

776
00:26:51,539 --> 00:26:52,799
that they are quite likely that this

777
00:26:52,799 --> 00:26:54,779
person was being targeted by what's by a

778
00:26:54,779 --> 00:26:56,880
NSO group customer and has their phone

779
00:26:56,880 --> 00:26:59,100
exploded with this vulnerability if we

780
00:26:59,100 --> 00:27:00,600
look back at the slides from at the

781
00:27:00,600 --> 00:27:02,400
court documents from WhatsApp we'll see

782
00:27:02,400 --> 00:27:04,020
that they mentioned that a number of

783
00:27:04,020 --> 00:27:06,600
accounts were generated by NSO from

784
00:27:06,600 --> 00:27:09,059
January 2018 until May 2019 to help

785
00:27:09,059 --> 00:27:11,279
deliver these exploits and it even then

786
00:27:11,279 --> 00:27:12,779
she mentioned some of the countries that

787
00:27:12,779 --> 00:27:14,100
were used to register the accounts so

788
00:27:14,100 --> 00:27:16,020
the first list is Cyprus Israel Brazil

789
00:27:16,020 --> 00:27:17,460
and if we look at this phone number that

790
00:27:17,460 --> 00:27:18,900
I appeared in the crash logs we see

791
00:27:18,900 --> 00:27:20,100
specifically that this phone number is

792
00:27:20,100 --> 00:27:22,559
also from from Cyprus so this is quite

793
00:27:22,559 --> 00:27:24,240
concerning because we saw that WhatsApp

794
00:27:24,240 --> 00:27:26,700
said they found 1400 Targets in just two

795
00:27:26,700 --> 00:27:28,140
weeks and now we see that this exploit

796
00:27:28,140 --> 00:27:30,299
actually being uh targeted for 10 months

797
00:27:30,299 --> 00:27:32,100
so there's the potential scale of the

798
00:27:32,100 --> 00:27:33,600
people who are victims to this is a much

799
00:27:33,600 --> 00:27:35,820
much much bigger

800
00:27:35,820 --> 00:27:37,320
so I'm not going to get into this but

801
00:27:37,320 --> 00:27:38,940
you can see a bit more about this in our

802
00:27:38,940 --> 00:27:40,559
in our paper and please do read the

803
00:27:40,559 --> 00:27:41,460
paper there's a lot of more interesting

804
00:27:41,460 --> 00:27:43,620
information there

805
00:27:43,620 --> 00:27:44,760
um so here's just a summary of some of

806
00:27:44,760 --> 00:27:46,080
these exploits so basically every major

807
00:27:46,080 --> 00:27:48,539
version of iOS NSO has field of some

808
00:27:48,539 --> 00:27:50,460
capability or maybe multiple zero click

809
00:27:50,460 --> 00:27:52,140
capabilities that could Target those

810
00:27:52,140 --> 00:27:54,000
phones you'll see that they had a quite

811
00:27:54,000 --> 00:27:55,440
long-lived Android WhatsApp

812
00:27:55,440 --> 00:27:56,520
vulnerability that their clients were

813
00:27:56,520 --> 00:27:59,520
able to use Target Android phones

814
00:27:59,520 --> 00:28:00,659
um and again this is all the technical

815
00:28:00,659 --> 00:28:02,640
information we shouldn't forget that all

816
00:28:02,640 --> 00:28:04,260
of these uh cases all of this evidence

817
00:28:04,260 --> 00:28:06,120
was all found on the phones of

818
00:28:06,120 --> 00:28:08,039
journalists activists people who really

819
00:28:08,039 --> 00:28:09,840
should not be legitimately targeted with

820
00:28:09,840 --> 00:28:11,820
these kinds of tools and so we also

821
00:28:11,820 --> 00:28:13,500
shouldn't forget uh the scale of the

822
00:28:13,500 --> 00:28:15,299
problem and the personal cost people are

823
00:28:15,299 --> 00:28:17,159
being targeted with this stuff

824
00:28:17,159 --> 00:28:19,260
and I will really quickly conclude here

825
00:28:19,260 --> 00:28:21,900
before our time runs out so just to

826
00:28:21,900 --> 00:28:24,000
re-emphasize uh what donica was saying

827
00:28:24,000 --> 00:28:26,220
earlier about Google project zero their

828
00:28:26,220 --> 00:28:28,200
sort of clean room implementation of a

829
00:28:28,200 --> 00:28:30,360
zero click wound up colliding with a

830
00:28:30,360 --> 00:28:32,580
real world attack service suggesting

831
00:28:32,580 --> 00:28:35,460
that the potential uh size of the zero

832
00:28:35,460 --> 00:28:38,520
click attack surface is small so a good

833
00:28:38,520 --> 00:28:41,279
uh a good offensive strategy that

834
00:28:41,279 --> 00:28:42,900
focuses on trying to replicate attacker

835
00:28:42,900 --> 00:28:44,880
capabilities in the lab can collide with

836
00:28:44,880 --> 00:28:46,740
attacker capabilities and provide good

837
00:28:46,740 --> 00:28:49,620
defense so more efforts like this are

838
00:28:49,620 --> 00:28:51,360
quite useful

839
00:28:51,360 --> 00:28:53,159
um speaking of of things that would be

840
00:28:53,159 --> 00:28:55,620
useful also you might have heard Apple's

841
00:28:55,620 --> 00:28:58,140
IOS 16 feature of lockdown mode and of

842
00:28:58,140 --> 00:28:59,580
course Google for a long time has had

843
00:28:59,580 --> 00:29:02,100
Advanced protection these sorts of modes

844
00:29:02,100 --> 00:29:03,539
which are designed to be enabled by

845
00:29:03,539 --> 00:29:05,460
activists who are essentially saying

846
00:29:05,460 --> 00:29:07,520
give me fewer features and more security

847
00:29:07,520 --> 00:29:09,900
so we need I think more companies

848
00:29:09,900 --> 00:29:11,700
looking into options like this as well

849
00:29:11,700 --> 00:29:13,919
as user studies that examine how well

850
00:29:13,919 --> 00:29:16,260
these options work with activists and

851
00:29:16,260 --> 00:29:18,299
dissident workflows

852
00:29:18,299 --> 00:29:20,279
um and also uh back to this issue of

853
00:29:20,279 --> 00:29:22,980
notifications uh notifications are a

854
00:29:22,980 --> 00:29:26,100
great example of a way that industry and

855
00:29:26,100 --> 00:29:28,260
Civil Society groups and researchers

856
00:29:28,260 --> 00:29:30,600
like Bill and dunika like us can

857
00:29:30,600 --> 00:29:32,220
potentially collaborate to help bring

858
00:29:32,220 --> 00:29:34,080
better security to users around the

859
00:29:34,080 --> 00:29:36,419
world we can hunt for months and months

860
00:29:36,419 --> 00:29:37,799
and months checking thousands of phones

861
00:29:37,799 --> 00:29:40,140
and find nothing but all of a sudden

862
00:29:40,140 --> 00:29:42,899
notifications go out and we know who to

863
00:29:42,899 --> 00:29:44,820
dig deeper on so that can be really

864
00:29:44,820 --> 00:29:46,260
helpful in terms of understanding these

865
00:29:46,260 --> 00:29:48,659
capabilities and with that I would like

866
00:29:48,659 --> 00:29:51,179
to say thank you and please reach out to

867
00:29:51,179 --> 00:29:52,679
us during the coffee breaks or at the

868
00:29:52,679 --> 00:29:54,120
happy hour and we'll be happy to chat

869
00:29:54,120 --> 00:29:56,860
more yeah thank you Danica and Bill

870
00:29:56,860 --> 00:30:00,830
[Applause]

