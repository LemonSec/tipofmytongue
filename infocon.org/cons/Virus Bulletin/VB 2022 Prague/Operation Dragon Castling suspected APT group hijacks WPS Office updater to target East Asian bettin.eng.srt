1
00:00:03,000 --> 00:00:05,880
hello everyone and today we would like

2
00:00:05,880 --> 00:00:08,220
to talk to you about a campaign we've

3
00:00:08,220 --> 00:00:10,800
discovered targeting multiple countries

4
00:00:10,800 --> 00:00:13,500
in the Asian region

5
00:00:13,500 --> 00:00:16,079
uh so my name is sigour Morgenstern and

6
00:00:16,079 --> 00:00:18,480
I work as a malware researcher for Avast

7
00:00:18,480 --> 00:00:21,420
and this is Michael Eugene kamastra

8
00:00:21,420 --> 00:00:25,019
hello everyone and I also work as a

9
00:00:25,019 --> 00:00:26,840
Marvel researcher at Avast

10
00:00:26,840 --> 00:00:29,400
mostly hunting apts and reverse

11
00:00:29,400 --> 00:00:31,320
engineering malicious files

12
00:00:31,320 --> 00:00:35,100
and also there was a one quality with us

13
00:00:35,100 --> 00:00:37,860
Vian Holman he's also my researchers

14
00:00:37,860 --> 00:00:40,559
so okay we'd like to help now thanks

15
00:00:40,559 --> 00:00:43,739
thank you okay let's see how it all

16
00:00:43,739 --> 00:00:47,520
started so uh while hunting for uh

17
00:00:47,520 --> 00:00:50,100
samples from a different campaign we

18
00:00:50,100 --> 00:00:52,500
came across this binary which was log

19
00:00:52,500 --> 00:00:54,059
dll

20
00:00:54,059 --> 00:00:57,719
so an attacker abused side loading to

21
00:00:57,719 --> 00:00:59,219
load this dll

22
00:00:59,219 --> 00:01:02,340
this binary had really low detection

23
00:01:02,340 --> 00:01:04,979
rate at that time

24
00:01:04,979 --> 00:01:07,040
most of the victims

25
00:01:07,040 --> 00:01:11,220
were in Taiwan and according to some

26
00:01:11,220 --> 00:01:12,680
additional

27
00:01:12,680 --> 00:01:15,840
Telemetry that we had they were most

28
00:01:15,840 --> 00:01:17,939
likely related to online gambling

29
00:01:17,939 --> 00:01:19,080
industry

30
00:01:19,080 --> 00:01:21,000
and this industry is known to be

31
00:01:21,000 --> 00:01:23,460
targeted by Chinese CPT groups so we

32
00:01:23,460 --> 00:01:25,619
thought that it can be an interesting

33
00:01:25,619 --> 00:01:29,640
for for the investigation so let's try

34
00:01:29,640 --> 00:01:32,040
to explore the timeline from discovering

35
00:01:32,040 --> 00:01:33,500
this dll

36
00:01:33,500 --> 00:01:36,780
backwards till we finally find the

37
00:01:36,780 --> 00:01:38,700
infection vector and are able to build

38
00:01:38,700 --> 00:01:42,000
the entire infection chain

39
00:01:42,000 --> 00:01:45,840
Okay so the we are going to start with

40
00:01:45,840 --> 00:01:48,740
the stage three which several log dll

41
00:01:48,740 --> 00:01:52,320
we call it corrects

42
00:01:52,320 --> 00:01:55,540
as I've mentioned they used side loading

43
00:01:55,540 --> 00:01:57,560
[Music]

44
00:01:57,560 --> 00:02:02,220
so the payloads are encrypted and stored

45
00:02:02,220 --> 00:02:06,060
in Resources with aes256

46
00:02:06,060 --> 00:02:08,160
the decryption parameters are also

47
00:02:08,160 --> 00:02:12,360
stored in the research as a key hash IV

48
00:02:12,360 --> 00:02:16,319
as a white string

49
00:02:16,319 --> 00:02:18,959
when executed this

50
00:02:18,959 --> 00:02:21,840
stages taking checking for this process

51
00:02:21,840 --> 00:02:24,239
presenting on the system which is a

52
00:02:24,239 --> 00:02:26,400
service process

53
00:02:26,400 --> 00:02:29,760
if they find this process they uh remap

54
00:02:29,760 --> 00:02:33,480
enter dll to bypass the hooking

55
00:02:33,480 --> 00:02:35,760
after that they execute the shell codes

56
00:02:35,760 --> 00:02:39,019
and load the next stage

57
00:02:39,060 --> 00:02:41,580
some interesting technique that they

58
00:02:41,580 --> 00:02:45,260
used in Shell codes was that they

59
00:02:45,260 --> 00:02:49,200
enumerated exports of ntdll and built an

60
00:02:49,200 --> 00:02:53,040
array with hashes of these names of ZW

61
00:02:53,040 --> 00:02:54,540
functions which are basically the

62
00:02:54,540 --> 00:02:58,200
ciscals then the sort of this array by

63
00:02:58,200 --> 00:03:01,680
RBA and by doing so they exploited the

64
00:03:01,680 --> 00:03:03,900
fact that the order of RVs of ZW

65
00:03:03,900 --> 00:03:07,080
functions is equals to the order of

66
00:03:07,080 --> 00:03:10,500
corresponding ciscoles so an index in

67
00:03:10,500 --> 00:03:13,620
this array is basically Cisco which can

68
00:03:13,620 --> 00:03:15,900
be called directly with the Cisco

69
00:03:15,900 --> 00:03:17,840
instruction

70
00:03:17,840 --> 00:03:21,980
by doing so you can bypass some security

71
00:03:21,980 --> 00:03:24,900
products based on hooking API in user

72
00:03:24,900 --> 00:03:27,080
space

73
00:03:27,140 --> 00:03:31,940
okay let's recap stage two

74
00:03:33,239 --> 00:03:35,940
uh in this stage they used the comb

75
00:03:35,940 --> 00:03:37,920
session moniker for privilege escalation

76
00:03:37,920 --> 00:03:40,319
on the system

77
00:03:40,319 --> 00:03:43,080
uh binaries are also stored in the

78
00:03:43,080 --> 00:03:44,940
resources

79
00:03:44,940 --> 00:03:49,500
they are encrypted with the as256

80
00:03:49,580 --> 00:03:53,700
IV is hard coded in the binary and the

81
00:03:53,700 --> 00:03:56,340
decryption key is derived from hashing

82
00:03:56,340 --> 00:03:58,739
and multiple bytes in the resource adult

83
00:03:58,739 --> 00:04:01,700
set of AIDS

84
00:04:01,860 --> 00:04:06,420
uh after that these stages uh execute

85
00:04:06,420 --> 00:04:09,440
the next next one

86
00:04:10,680 --> 00:04:13,260
here is a summary of

87
00:04:13,260 --> 00:04:17,399
multiple resources we've seen on this

88
00:04:17,399 --> 00:04:19,519
stage from this stage

89
00:04:19,519 --> 00:04:22,740
uh they they have multiple types of

90
00:04:22,740 --> 00:04:26,940
resources multiple types of payloads as

91
00:04:26,940 --> 00:04:30,540
uh for instance different configuration

92
00:04:30,540 --> 00:04:35,400
files list of cncs some helper dlls for

93
00:04:35,400 --> 00:04:40,139
UHC bypass they also had the next stage

94
00:04:40,139 --> 00:04:44,160
which was dialog dll and the PE which is

95
00:04:44,160 --> 00:04:45,060
a

96
00:04:45,060 --> 00:04:50,120
meant to sideload this load yellow

97
00:04:51,060 --> 00:04:52,680
okay

98
00:04:52,680 --> 00:04:55,440
so now we are

99
00:04:55,440 --> 00:04:59,960
at stage one which consists of two parts

100
00:04:59,960 --> 00:05:04,380
the the main executable was this setup

101
00:05:04,380 --> 00:05:08,460
CN that the whole uh binary name was

102
00:05:08,460 --> 00:05:13,979
mimicking a name of the setup of WPS

103
00:05:13,979 --> 00:05:15,360
office

104
00:05:15,360 --> 00:05:18,920
and we are going to explain why

105
00:05:18,920 --> 00:05:21,780
[Music]

106
00:05:21,780 --> 00:05:25,800
okay so this stage also was abusing side

107
00:05:25,800 --> 00:05:27,539
loading

108
00:05:27,539 --> 00:05:29,120
so to access

109
00:05:29,120 --> 00:05:33,560
the current current user Hive of the

110
00:05:33,560 --> 00:05:36,539
user locked in on the system they

111
00:05:36,539 --> 00:05:38,060
impersonated

112
00:05:38,060 --> 00:05:42,979
token of Explorer and used reg override

113
00:05:42,979 --> 00:05:46,400
Windows API

114
00:05:46,440 --> 00:05:49,080
after that

115
00:05:49,080 --> 00:05:49,979
um

116
00:05:49,979 --> 00:05:53,580
they constructed JavaScript code with

117
00:05:53,580 --> 00:05:55,620
some hard-coded values

118
00:05:55,620 --> 00:05:58,740
as you can see it was a server which is

119
00:05:58,740 --> 00:06:04,320
the just CNC and the key for decryption

120
00:06:04,320 --> 00:06:07,020
rest of the script is retrieved during

121
00:06:07,020 --> 00:06:09,539
the execution from the server and

122
00:06:09,539 --> 00:06:11,340
unfortunately we didn't have we do not

123
00:06:11,340 --> 00:06:13,740
have it because the server was not

124
00:06:13,740 --> 00:06:16,020
available during the time of the

125
00:06:16,020 --> 00:06:18,419
investigation

126
00:06:18,419 --> 00:06:21,720
but from the Telemetry we could

127
00:06:21,720 --> 00:06:24,300
we can say that this script was just

128
00:06:24,300 --> 00:06:26,340
downloading the next stage decrypting it

129
00:06:26,340 --> 00:06:29,119
and executing it

130
00:06:30,900 --> 00:06:34,319
okay let's recap here are our three

131
00:06:34,319 --> 00:06:35,280
stages

132
00:06:35,280 --> 00:06:37,620
and let's take a look at the infection

133
00:06:37,620 --> 00:06:40,500
Vector so we could see that the first

134
00:06:40,500 --> 00:06:43,759
stage was dropped by WPS update process

135
00:06:43,759 --> 00:06:48,539
which is the update process of WPS

136
00:06:48,539 --> 00:06:52,220
office which is the office

137
00:06:52,220 --> 00:06:56,000
developed by kingsoft

138
00:06:56,240 --> 00:06:59,840
uh this payload was downloaded from

139
00:06:59,840 --> 00:07:05,400
official domain which was update.wpscn

140
00:07:05,819 --> 00:07:09,800
but it was served from this IP which

141
00:07:09,800 --> 00:07:13,199
which is located in Japan and has no

142
00:07:13,199 --> 00:07:16,500
relation to the kingsoft company itself

143
00:07:16,500 --> 00:07:19,800
which was uh pretty weird and we had a

144
00:07:19,800 --> 00:07:22,319
few ideas on how to explain that

145
00:07:22,319 --> 00:07:25,020
so first we've thought that this might

146
00:07:25,020 --> 00:07:28,860
be a DNS spoofing or they might have

147
00:07:28,860 --> 00:07:30,599
compromised the infrastructure of

148
00:07:30,599 --> 00:07:32,759
kingsoft themselves

149
00:07:32,759 --> 00:07:36,840
but we could eliminate these theories by

150
00:07:36,840 --> 00:07:39,300
checking some additional information

151
00:07:39,300 --> 00:07:42,180
and other idea that we had was the

152
00:07:42,180 --> 00:07:45,599
vulnerability in this update process

153
00:07:45,599 --> 00:07:47,880
itself

154
00:07:47,880 --> 00:07:51,240
and we decided to check this

155
00:07:51,240 --> 00:07:55,800
so we had multiple objectives uh

156
00:07:55,800 --> 00:07:57,560
so we have to be able to download

157
00:07:57,560 --> 00:08:00,919
executable from an arbitrary location

158
00:08:00,919 --> 00:08:03,479
uh the this process should look

159
00:08:03,479 --> 00:08:06,419
legitimate and uh

160
00:08:06,419 --> 00:08:09,419
we should be able then to execute the

161
00:08:09,419 --> 00:08:12,000
this binary on the system

162
00:08:12,000 --> 00:08:14,340
and luckily we could do that

163
00:08:14,340 --> 00:08:17,940
so we had to update just single single

164
00:08:17,940 --> 00:08:21,539
registry value on the the machine and

165
00:08:21,539 --> 00:08:25,800
this value is under current user Hive so

166
00:08:25,800 --> 00:08:28,020
it doesn't require any additional

167
00:08:28,020 --> 00:08:29,759
privileges

168
00:08:29,759 --> 00:08:32,339
by doing so we also get persistence on

169
00:08:32,339 --> 00:08:34,740
the system because every time update

170
00:08:34,740 --> 00:08:36,539
process is going to be executed it's

171
00:08:36,539 --> 00:08:40,399
going to talk to our malicious server

172
00:08:40,399 --> 00:08:44,880
uh and all our malicious binaries that

173
00:08:44,880 --> 00:08:47,820
are going to be downloaded are going to

174
00:08:47,820 --> 00:08:51,660
be executed by WPS uh legitimate science

175
00:08:51,660 --> 00:08:54,560
process

176
00:08:55,519 --> 00:08:58,920
here is a just quick demo on the left

177
00:08:58,920 --> 00:09:03,200
you can see uh the screen of the victim

178
00:09:03,200 --> 00:09:07,440
and on the right it's just emulates the

179
00:09:07,440 --> 00:09:11,180
attacker server and in this case I

180
00:09:11,180 --> 00:09:14,820
invoke the update process manually but

181
00:09:14,820 --> 00:09:16,320
you don't have to do that because it's

182
00:09:16,320 --> 00:09:18,440
going to be

183
00:09:18,440 --> 00:09:21,720
invoked automatically through the

184
00:09:21,720 --> 00:09:24,980
scheduled task on the system

185
00:09:25,880 --> 00:09:30,000
then at this point we already had like

186
00:09:30,000 --> 00:09:31,800
full chain from infection Vector

187
00:09:31,800 --> 00:09:34,560
throughout all the stages but we had

188
00:09:34,560 --> 00:09:37,680
multiple binaries from the stage one for

189
00:09:37,680 --> 00:09:41,160
which we did not have the infection that

190
00:09:41,160 --> 00:09:44,580
and we decided to talk to team T5 which

191
00:09:44,580 --> 00:09:49,320
is a security company based in Taiwan

192
00:09:49,320 --> 00:09:54,300
um for other possible IVs and they had

193
00:09:54,300 --> 00:09:59,459
another IV actually for when an attacker

194
00:09:59,459 --> 00:10:02,160
sent an email with the

195
00:10:02,160 --> 00:10:06,540
I infected infected installer to the

196
00:10:06,540 --> 00:10:10,320
support team of the targeted company uh

197
00:10:10,320 --> 00:10:13,260
just asking them to check for the bug in

198
00:10:13,260 --> 00:10:15,959
their software so this way they

199
00:10:15,959 --> 00:10:20,119
compromise the uh the network

200
00:10:22,320 --> 00:10:25,220
here are just few examples of

201
00:10:25,220 --> 00:10:29,760
this infected installers

202
00:10:29,760 --> 00:10:33,420
okay so the next stage is going to be

203
00:10:33,420 --> 00:10:36,600
handled my my colleague

204
00:10:36,600 --> 00:10:40,980
uh thank you uh thanks to Igor uh

205
00:10:40,980 --> 00:10:44,160
describe the whole kill chain from two

206
00:10:44,160 --> 00:10:48,540
different infection Vector to car car X

207
00:10:48,540 --> 00:10:51,180
that is going to drop another stage in

208
00:10:51,180 --> 00:10:53,760
the memory and this stage we call Proto

209
00:10:53,760 --> 00:10:56,240
8.

210
00:10:56,779 --> 00:10:59,519
proto8 is quite robust as a modular dll

211
00:10:59,519 --> 00:11:02,339
written in C plus plus and

212
00:11:02,339 --> 00:11:05,160
in the first phase it's checking if that

213
00:11:05,160 --> 00:11:08,240
was loaded by the right executable

214
00:11:08,240 --> 00:11:11,579
and then it starts setting up some basic

215
00:11:11,579 --> 00:11:13,519
environment for the right functionality

216
00:11:13,519 --> 00:11:16,680
such as marvelous walking directory

217
00:11:16,680 --> 00:11:19,980
May loaded some configuration files

218
00:11:19,980 --> 00:11:23,100
also May update itself but that is

219
00:11:23,100 --> 00:11:24,620
necessary

220
00:11:24,620 --> 00:11:27,480
prototype is responsible for loading

221
00:11:27,480 --> 00:11:29,100
plugins that

222
00:11:29,100 --> 00:11:32,880
are extends the portraits functionality

223
00:11:32,880 --> 00:11:36,000
are those plugins may be obtained from a

224
00:11:36,000 --> 00:11:40,800
Chinese cloud storage service and the to

225
00:11:40,800 --> 00:11:44,040
access this storage you need to have the

226
00:11:44,040 --> 00:11:45,839
product needs to have

227
00:11:45,839 --> 00:11:47,820
the credentials which are hard-coded

228
00:11:47,820 --> 00:11:51,200
within within the binaries

229
00:11:51,480 --> 00:11:54,060
so one of the things why I described the

230
00:11:54,060 --> 00:11:57,300
robust and modular is that it may choose

231
00:11:57,300 --> 00:11:59,000
one of the different communication

232
00:11:59,000 --> 00:12:01,440
functionality for the communication with

233
00:12:01,440 --> 00:12:04,920
the CNC server and this decision is made

234
00:12:04,920 --> 00:12:07,680
by the configuration file drawed by ICBC

235
00:12:07,680 --> 00:12:09,360
log

236
00:12:09,360 --> 00:12:12,480
as you can see on the slides there are

237
00:12:12,480 --> 00:12:15,720
nine different strings you might find in

238
00:12:15,720 --> 00:12:16,680
the

239
00:12:16,680 --> 00:12:19,940
configuration file

240
00:12:19,940 --> 00:12:23,339
part 8 may also receive a command from a

241
00:12:23,339 --> 00:12:26,519
CNC server and one of those functions is

242
00:12:26,519 --> 00:12:30,420
update is configuration file that holds

243
00:12:30,420 --> 00:12:35,100
the API IP address of a CNC server uh

244
00:12:35,100 --> 00:12:40,620
and one of the nine strings that were

245
00:12:40,620 --> 00:12:43,200
in the SM cache data

246
00:12:43,200 --> 00:12:44,639
so

247
00:12:44,639 --> 00:12:48,480
these strings this string that are in

248
00:12:48,480 --> 00:12:50,220
the SM cache data is going to really

249
00:12:50,220 --> 00:12:52,800
describe like which function is going to

250
00:12:52,800 --> 00:12:54,899
use for the communication with the CNC

251
00:12:54,899 --> 00:12:56,339
server

252
00:12:56,339 --> 00:12:58,920
may also receive a plugin

253
00:12:58,920 --> 00:13:01,560
those plug this plugin can be loaded and

254
00:13:01,560 --> 00:13:03,480
dropped uh

255
00:13:03,480 --> 00:13:05,880
also it may impersonate the token from

256
00:13:05,880 --> 00:13:07,380
the Explorer

257
00:13:07,380 --> 00:13:11,760
and we we found that some functions are

258
00:13:11,760 --> 00:13:15,180
not yet implemented

259
00:13:15,180 --> 00:13:18,360
so that we make a kind of

260
00:13:18,360 --> 00:13:20,760
reverse we are assuming that the binary

261
00:13:20,760 --> 00:13:23,279
is actively being developed by by the

262
00:13:23,279 --> 00:13:25,440
attacker

263
00:13:25,440 --> 00:13:29,639
so far we found four different plugins

264
00:13:29,639 --> 00:13:32,880
uh one of them is a core plugin

265
00:13:32,880 --> 00:13:37,019
that loads the rest of three plugins and

266
00:13:37,019 --> 00:13:39,480
each of them corresponds with different

267
00:13:39,480 --> 00:13:41,880
functionality such as achieving

268
00:13:41,880 --> 00:13:45,600
persistence bypassing UAC registering an

269
00:13:45,600 --> 00:13:49,500
RPC interface creating a new account and

270
00:13:49,500 --> 00:13:52,139
one of those plugins has regular

271
00:13:52,139 --> 00:13:54,800
capabilities

272
00:13:55,019 --> 00:13:57,000
well we will now talk about the first

273
00:13:57,000 --> 00:14:01,019
plugin core plugin this plugin is loaded

274
00:14:01,019 --> 00:14:03,660
by proto8

275
00:14:03,660 --> 00:14:08,959
uh to manage additional plugins

276
00:14:09,060 --> 00:14:12,060
so it may load plugin remove a plugin

277
00:14:12,060 --> 00:14:13,740
and

278
00:14:13,740 --> 00:14:16,800
also in my find information about the

279
00:14:16,800 --> 00:14:19,579
plugin location and this information

280
00:14:19,579 --> 00:14:24,139
sent to a CNC server

281
00:14:24,139 --> 00:14:27,480
uh the the main purpose of this make

282
00:14:27,480 --> 00:14:29,220
game

283
00:14:29,220 --> 00:14:32,700
is it executing the is it executes the

284
00:14:32,700 --> 00:14:35,880
legitimate binary that loads uh car X

285
00:14:35,880 --> 00:14:40,620
loader and that loads Proto 8 in the in

286
00:14:40,620 --> 00:14:41,820
the memory

287
00:14:41,820 --> 00:14:45,300
uh we found that it was also registering

288
00:14:45,300 --> 00:14:48,420
IPC interface that corresponds with the

289
00:14:48,420 --> 00:14:49,800
functionality

290
00:14:49,800 --> 00:14:55,579
to decode and execute the Shell Code

291
00:14:56,899 --> 00:14:59,820
z-load is doing two things

292
00:14:59,820 --> 00:15:02,579
the first one is setting up the

293
00:15:02,579 --> 00:15:04,500
persistence

294
00:15:04,500 --> 00:15:08,279
and the second one it creates an easy

295
00:15:08,279 --> 00:15:11,040
access to the infected machine

296
00:15:11,040 --> 00:15:13,139
now we'll talk about the setting of The

297
00:15:13,139 --> 00:15:14,279
persistence

298
00:15:14,279 --> 00:15:17,940
uh this is done by two methods one of

299
00:15:17,940 --> 00:15:22,019
them is a it can register itself

300
00:15:22,019 --> 00:15:24,480
uh into the list of security support

301
00:15:24,480 --> 00:15:27,440
providers and a second one

302
00:15:27,440 --> 00:15:31,139
it's setting up the make game path to

303
00:15:31,139 --> 00:15:32,699
the register key

304
00:15:32,699 --> 00:15:34,079
so

305
00:15:34,079 --> 00:15:34,920
um

306
00:15:34,920 --> 00:15:37,380
to make game will be loaded each time

307
00:15:37,380 --> 00:15:41,639
when winsock library is invoked

308
00:15:41,639 --> 00:15:45,000
and also it

309
00:15:45,000 --> 00:15:48,779
has this capability to bypass the USC

310
00:15:48,779 --> 00:15:51,300
mechanism mechanism with a specific

311
00:15:51,300 --> 00:15:53,699
Common Core com interface

312
00:15:53,699 --> 00:15:56,639
after setting up the persistence The

313
00:15:56,639 --> 00:16:00,860
Next Step was creating an account

314
00:16:01,019 --> 00:16:02,399
uh

315
00:16:02,399 --> 00:16:05,699
then afterwards it's it lowers the

316
00:16:05,699 --> 00:16:08,820
system protection by registry

317
00:16:08,820 --> 00:16:10,199
manipulation

318
00:16:10,199 --> 00:16:12,839
as you can see on the slides on the

319
00:16:12,839 --> 00:16:13,800
slide

320
00:16:13,800 --> 00:16:15,420
uh

321
00:16:15,420 --> 00:16:18,920
we will go step by step

322
00:16:18,920 --> 00:16:22,560
so in the first one it is used to

323
00:16:22,560 --> 00:16:26,339
disable a UIC UIC remote instruction

324
00:16:26,339 --> 00:16:30,720
then it also allows the disable USC

325
00:16:30,720 --> 00:16:33,420
mechanism for building Administration

326
00:16:33,420 --> 00:16:35,279
account

327
00:16:35,279 --> 00:16:36,440
then

328
00:16:36,440 --> 00:16:38,399
enables uh

329
00:16:38,399 --> 00:16:39,899
empty

330
00:16:39,899 --> 00:16:42,240
password on network

331
00:16:42,240 --> 00:16:46,380
also uh Anonymous Sid

332
00:16:46,380 --> 00:16:50,339
is going to be in everyone Windows group

333
00:16:50,339 --> 00:16:52,199
and

334
00:16:52,199 --> 00:16:55,560
and this also setting up that

335
00:16:55,560 --> 00:16:58,680
allows Anonymous user to list all

336
00:16:58,680 --> 00:17:01,320
account names and enumerates all shared

337
00:17:01,320 --> 00:17:02,519
resources

338
00:17:02,519 --> 00:17:05,640
and the last one it allows a new session

339
00:17:05,640 --> 00:17:09,740
user to access name types

340
00:17:10,260 --> 00:17:12,059
now we're going to talk about the

341
00:17:12,059 --> 00:17:16,020
Malcolm that's a fully fledged Vector it

342
00:17:16,020 --> 00:17:19,199
may receive a command to upload and

343
00:17:19,199 --> 00:17:21,839
download files

344
00:17:21,839 --> 00:17:25,220
may do some basic

345
00:17:25,220 --> 00:17:28,940
file operations May create a process

346
00:17:28,940 --> 00:17:31,520
also it can collect

347
00:17:31,520 --> 00:17:35,280
if I mean it can enumerate the root

348
00:17:35,280 --> 00:17:38,720
disks Also may collect some uh

349
00:17:38,720 --> 00:17:42,840
information about files and gather some

350
00:17:42,840 --> 00:17:47,720
basic information about infected machine

351
00:17:48,799 --> 00:17:54,000
can communicate with two protocols uh

352
00:17:54,000 --> 00:17:56,059
the HTTP and TCP

353
00:17:56,059 --> 00:17:59,160
and this communication with the CNC

354
00:17:59,160 --> 00:18:00,900
server is

355
00:18:00,900 --> 00:18:04,520
compressed and encrypted

356
00:18:04,559 --> 00:18:07,380
and

357
00:18:07,380 --> 00:18:10,740
it also has this functionality when if

358
00:18:10,740 --> 00:18:12,539
it finds out that

359
00:18:12,539 --> 00:18:13,140
um

360
00:18:13,140 --> 00:18:15,000
there is a proxy server in the network

361
00:18:15,000 --> 00:18:17,820
it has this functionality to make

362
00:18:17,820 --> 00:18:22,399
authenticate with the proxy server

363
00:18:22,440 --> 00:18:26,340
that was our analysis technical analysis

364
00:18:26,340 --> 00:18:28,740
of the binaries now we are going to talk

365
00:18:28,740 --> 00:18:31,200
about the victims

366
00:18:31,200 --> 00:18:34,260
so far we found victims that are mostly

367
00:18:34,260 --> 00:18:37,940
located in Asia

368
00:18:38,940 --> 00:18:42,179
more specifically we found the for

369
00:18:42,179 --> 00:18:44,039
dissidents

370
00:18:44,039 --> 00:18:48,059
in China also we found from our

371
00:18:48,059 --> 00:18:50,240
Telemetry gameplay companies in Taiwan

372
00:18:50,240 --> 00:18:54,200
governments institutions and railways

373
00:18:54,200 --> 00:18:57,740
gambling company in Philippines

374
00:18:57,740 --> 00:19:01,200
Telecom company to Telco companies in

375
00:19:01,200 --> 00:19:04,080
Kazakhstan and dissidents

376
00:19:04,080 --> 00:19:07,460
located in Hong Kong

377
00:19:10,440 --> 00:19:13,260
everyone is trying to do the attribution

378
00:19:13,260 --> 00:19:15,480
but

379
00:19:15,480 --> 00:19:20,160
I was really scared so I of it so I

380
00:19:20,160 --> 00:19:23,039
I'm going to share with you just what

381
00:19:23,039 --> 00:19:26,100
what we found and what we think it's

382
00:19:26,100 --> 00:19:28,080
it's important to say

383
00:19:28,080 --> 00:19:30,780
we found code similarities

384
00:19:30,780 --> 00:19:35,340
between Malcolm and ffrat mostly in the

385
00:19:35,340 --> 00:19:39,480
implementation of proxy Authentication

386
00:19:39,480 --> 00:19:43,020
and afterwards we found the also called

387
00:19:43,020 --> 00:19:45,120
similarities between FF favorite and

388
00:19:45,120 --> 00:19:47,640
winning TI sample

389
00:19:47,640 --> 00:19:52,260
and in this case we found uh same debug

390
00:19:52,260 --> 00:19:54,980
strings and overall the implementation

391
00:19:54,980 --> 00:19:58,140
was very similar

392
00:19:58,140 --> 00:20:00,840
we also are we are sharing the the

393
00:20:00,840 --> 00:20:03,379
hashes

394
00:20:03,919 --> 00:20:08,700
so you can see by yourself as well

395
00:20:08,700 --> 00:20:12,960
I also did some either screenshots on

396
00:20:12,960 --> 00:20:15,900
the left you can see

397
00:20:15,900 --> 00:20:20,039
uh implementation of uh to of of proxy

398
00:20:20,039 --> 00:20:23,280
authentication that's from Malcom and

399
00:20:23,280 --> 00:20:26,880
from the right and the right that is

400
00:20:26,880 --> 00:20:30,200
from FF favorite

401
00:20:31,320 --> 00:20:35,940
okay that was it we will wrap things up

402
00:20:35,940 --> 00:20:38,280
we discovered a campaign targeting uh

403
00:20:38,280 --> 00:20:41,100
gambling companies and dissidents

404
00:20:41,100 --> 00:20:44,220
we discovered vulnerability in the VPS

405
00:20:44,220 --> 00:20:47,000
update

406
00:20:47,059 --> 00:20:52,140
uh the Bad actors we think that

407
00:20:52,140 --> 00:20:55,039
they

408
00:20:55,440 --> 00:20:58,620
infiltrate in the network with infratec

409
00:20:58,620 --> 00:21:00,059
installer

410
00:21:00,059 --> 00:21:04,380
or possible thanks to vulnerability in

411
00:21:04,380 --> 00:21:07,520
the VPS update

412
00:21:07,860 --> 00:21:11,520
uh we in the institute in the infected

413
00:21:11,520 --> 00:21:13,440
Network we observed various developers

414
00:21:13,440 --> 00:21:17,460
and loaders magdar and there was a table

415
00:21:17,460 --> 00:21:19,220
called similarities between

416
00:21:19,220 --> 00:21:21,660
ffrat and mocom

417
00:21:21,660 --> 00:21:24,600
and thanks to this we

418
00:21:24,600 --> 00:21:26,940
we hide there is a we think that there

419
00:21:26,940 --> 00:21:29,760
is a high possibility of culturing among

420
00:21:29,760 --> 00:21:32,280
these Chinese threat groups

421
00:21:32,280 --> 00:21:34,860
and that was it from us thank you for

422
00:21:34,860 --> 00:21:36,580
your attention

423
00:21:36,580 --> 00:21:42,679
[Applause]

424
00:21:42,679 --> 00:21:46,700
so any questions

425
00:21:48,240 --> 00:21:49,500
yes

426
00:21:49,500 --> 00:21:51,059
over there

427
00:21:51,059 --> 00:21:55,399
although the mic is coming

428
00:21:56,400 --> 00:21:58,140
uh guys thank you so much for your talk

429
00:21:58,140 --> 00:21:59,220
excellent

430
00:21:59,220 --> 00:22:00,960
um I know you were very careful with

431
00:22:00,960 --> 00:22:03,000
attribution uh but I'm asking you to be

432
00:22:03,000 --> 00:22:05,760
a bit not careful did you see any any

433
00:22:05,760 --> 00:22:07,500
overlaps between groups that you

434
00:22:07,500 --> 00:22:11,240
currently track and this through actor

435
00:22:13,500 --> 00:22:15,600
uh

436
00:22:15,600 --> 00:22:18,659
sorry can you repeat the last two words

437
00:22:18,659 --> 00:22:21,179
to be sure

438
00:22:21,179 --> 00:22:23,520
did you see any cover code overlaps or

439
00:22:23,520 --> 00:22:24,360
any

440
00:22:24,360 --> 00:22:27,840
um any ioc or TTP overlaps between this

441
00:22:27,840 --> 00:22:31,080
particular threat actor and one that you

442
00:22:31,080 --> 00:22:32,520
currently track

443
00:22:32,520 --> 00:22:35,520
and now yet

444
00:22:35,520 --> 00:22:37,440
that's

445
00:22:37,440 --> 00:22:38,659
I mean

446
00:22:38,659 --> 00:22:41,880
we are tracking this group for for for

447
00:22:41,880 --> 00:22:45,059
some quiet time and

448
00:22:45,059 --> 00:22:46,380
uh

449
00:22:46,380 --> 00:22:49,020
there is some speculation like which

450
00:22:49,020 --> 00:22:51,140
group it may be but

451
00:22:51,140 --> 00:22:54,720
I don't have 100 I'm not 100 sure

452
00:22:54,720 --> 00:22:57,780
and so I'm rather to not attributed yet

453
00:22:57,780 --> 00:23:01,440
and wait for more data than telling you

454
00:23:01,440 --> 00:23:04,860
something that is not exactly agree

455
00:23:04,860 --> 00:23:07,559
okay there is some other question over

456
00:23:07,559 --> 00:23:10,020
there yeah just um probably I missed it

457
00:23:10,020 --> 00:23:12,960
during the the TalkBack did you it was

458
00:23:12,960 --> 00:23:14,880
the the vulnerability in that component

459
00:23:14,880 --> 00:23:18,539
that made them being able to change the

460
00:23:18,539 --> 00:23:20,880
final IP

461
00:23:20,880 --> 00:23:23,059
with that domain that should not be

462
00:23:23,059 --> 00:23:25,740
translated into that IP

463
00:23:25,740 --> 00:23:28,080
I mean the the updater thing you

464
00:23:28,080 --> 00:23:30,320
remember that we have a uh

465
00:23:30,320 --> 00:23:33,299
lady domain but we'll pass Point into an

466
00:23:33,299 --> 00:23:35,460
IP in Japan and didn't make sense did

467
00:23:35,460 --> 00:23:38,820
you finally manage how they did that

468
00:23:38,820 --> 00:23:41,820
Yeah so basically it's not that they

469
00:23:41,820 --> 00:23:44,340
managed to change the IP it's just from

470
00:23:44,340 --> 00:23:47,580
the HTTP traffic if you look at it it

471
00:23:47,580 --> 00:23:51,480
looks uh legitimate but like if you if

472
00:23:51,480 --> 00:23:54,840
you dig a bit deeper and you you see

473
00:23:54,840 --> 00:23:57,840
where it's actually connecting uh it

474
00:23:57,840 --> 00:24:01,760
goes through other routes so

475
00:24:02,820 --> 00:24:07,799
okay any other question yes over there

476
00:24:07,799 --> 00:24:09,360
in front

477
00:24:09,360 --> 00:24:12,500
the mic is coming

478
00:24:13,799 --> 00:24:16,559
I'm not sure if I missed it but what was

479
00:24:16,559 --> 00:24:20,580
the what was the uh the end goal for the

480
00:24:20,580 --> 00:24:23,039
uh for the group by targeting the

481
00:24:23,039 --> 00:24:25,799
gambling industry we were expecting this

482
00:24:25,799 --> 00:24:28,140
question uh

483
00:24:28,140 --> 00:24:29,700
you are talking about the motivation of

484
00:24:29,700 --> 00:24:31,380
the group right yes

485
00:24:31,380 --> 00:24:32,520
yeah

486
00:24:32,520 --> 00:24:34,580
um

487
00:24:34,980 --> 00:24:38,520
I was also have this problem to trying

488
00:24:38,520 --> 00:24:40,320
to figure out like what was what is

489
00:24:40,320 --> 00:24:42,840
their motivation so so far

490
00:24:42,840 --> 00:24:45,720
or we think that

491
00:24:45,720 --> 00:24:49,580
in China there is a

492
00:24:49,679 --> 00:24:51,600
yeah so it's basically it's known that

493
00:24:51,600 --> 00:24:52,880
China is

494
00:24:52,880 --> 00:24:55,440
breaking down on the gambling industry

495
00:24:55,440 --> 00:24:58,620
and they try and they try to and during

496
00:24:58,620 --> 00:25:01,400
the um the covet uh

497
00:25:01,400 --> 00:25:05,700
pandemic the gambling industry or online

498
00:25:05,700 --> 00:25:09,240
gambling industry uh grew up like like

499
00:25:09,240 --> 00:25:13,860
crazy so they try to do as much as they

500
00:25:13,860 --> 00:25:16,440
can to

501
00:25:16,440 --> 00:25:21,120
to disrupt disrupt their yeah their work

502
00:25:21,120 --> 00:25:23,400
and they they also have a financial

503
00:25:23,400 --> 00:25:25,620
motivation obviously there is money in

504
00:25:25,620 --> 00:25:28,260
this industry so it's both like

505
00:25:28,260 --> 00:25:31,640
political and uh

506
00:25:32,480 --> 00:25:37,620
sorry so we think there is a

507
00:25:37,620 --> 00:25:39,480
I would rather say it Espionage to

508
00:25:39,480 --> 00:25:40,980
disrupt really online gambling

509
00:25:40,980 --> 00:25:44,460
Industries in the in other countries

510
00:25:44,460 --> 00:25:46,260
so it was not the gamblers who was

511
00:25:46,260 --> 00:25:47,760
losing money

512
00:25:47,760 --> 00:25:50,820
sorry it was not the gamblers no that

513
00:25:50,820 --> 00:25:53,100
was losing money or being targeted

514
00:25:53,100 --> 00:25:56,580
with yes it was the uh the gambling

515
00:25:56,580 --> 00:25:58,620
industry online gaming industry yeah

516
00:25:58,620 --> 00:26:01,460
like in some cases they they even use uh

517
00:26:01,460 --> 00:26:04,440
ransomware or something like that to to

518
00:26:04,440 --> 00:26:06,360
then

519
00:26:06,360 --> 00:26:08,580
run some data companies yeah so there

520
00:26:08,580 --> 00:26:14,000
are many many ways where it can can go

