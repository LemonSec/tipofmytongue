1
00:00:00,030 --> 00:00:02,520
ladies and gentlemen take your seats

2
00:00:02,520 --> 00:00:03,950
please

3
00:00:03,950 --> 00:00:08,670
so I think the next presentation will

4
00:00:08,670 --> 00:00:11,700
taking a deep dive in crash override

5
00:00:11,700 --> 00:00:15,210
isn't it too Slavic the room is yours

6
00:00:15,210 --> 00:00:17,699
thank you sorry for the slight delay

7
00:00:17,699 --> 00:00:20,490
folks thank you for showing up pleasure

8
00:00:20,490 --> 00:00:21,600
to be at virus bulletin

9
00:00:21,600 --> 00:00:24,570
so first Who am I who is this guy up

10
00:00:24,570 --> 00:00:27,060
here on stage so I started out my career

11
00:00:27,060 --> 00:00:30,179
I was a information warfare officer in

12
00:00:30,179 --> 00:00:32,009
the u.s. Navy and then did incident

13
00:00:32,009 --> 00:00:32,910
response at Los Alamos National

14
00:00:32,910 --> 00:00:35,460
Laboratory but at present I have moved

15
00:00:35,460 --> 00:00:37,200
on from government life and I now hunt

16
00:00:37,200 --> 00:00:39,270
adversaries working for a Drago's in the

17
00:00:39,270 --> 00:00:41,730
private sector so still hunting bad guys

18
00:00:41,730 --> 00:00:44,070
but doing it on my own terms and away

19
00:00:44,070 --> 00:00:46,079
from at least the direct supervision of

20
00:00:46,079 --> 00:00:47,910
the US government so what do we really

21
00:00:47,910 --> 00:00:49,379
want to talk about today is we want to

22
00:00:49,379 --> 00:00:51,120
talk about crash override let's talk

23
00:00:51,120 --> 00:00:52,949
about the background Levent a little bit

24
00:00:52,949 --> 00:00:55,590
go into the initial intrusion activity

25
00:00:55,590 --> 00:00:58,739
leading up to the headline ICS impacts

26
00:00:58,739 --> 00:01:00,090
and then talk about what we can conclude

27
00:01:00,090 --> 00:01:02,129
from this event what we could learn from

28
00:01:02,129 --> 00:01:02,640
it

29
00:01:02,640 --> 00:01:05,700
so first in context crash override also

30
00:01:05,700 --> 00:01:07,680
known as in destroyer by ESET is the

31
00:01:07,680 --> 00:01:09,869
first publicly known that's to say that

32
00:01:09,869 --> 00:01:11,040
there might be some things out there

33
00:01:11,040 --> 00:01:12,680
that we haven't found out about just yet

34
00:01:12,680 --> 00:01:15,390
malware designed to impact grid

35
00:01:15,390 --> 00:01:17,009
operations most specifically

36
00:01:17,009 --> 00:01:19,560
distribution operations designed to

37
00:01:19,560 --> 00:01:21,720
disrupt those operations and then impede

38
00:01:21,720 --> 00:01:23,640
recovery through some rather s holy SH

39
00:01:23,640 --> 00:01:25,710
moves at the end and wiping files and

40
00:01:25,710 --> 00:01:28,049
doing some other sorts of things the

41
00:01:28,049 --> 00:01:30,060
event itself took place in 17 December

42
00:01:30,060 --> 00:01:32,880
of 2016 just before midnight resulted in

43
00:01:32,880 --> 00:01:34,860
a substation de-energizing as a result

44
00:01:34,860 --> 00:01:36,329
of the malware interacting with the

45
00:01:36,329 --> 00:01:38,040
control equipment within the environment

46
00:01:38,040 --> 00:01:40,380
and thanks to a transition into manual

47
00:01:40,380 --> 00:01:42,270
mode at the impacted site they were able

48
00:01:42,270 --> 00:01:43,770
to get power back on within 30 minutes

49
00:01:43,770 --> 00:01:45,840
so this might not seem like a big deal I

50
00:01:45,840 --> 00:01:47,909
go as a blipping of lights or a little

51
00:01:47,909 --> 00:01:49,560
bit ukraine's kind of cold that time of

52
00:01:49,560 --> 00:01:51,030
year and just from a messaging

53
00:01:51,030 --> 00:01:53,220
standpoint fairly significant now you

54
00:01:53,220 --> 00:01:55,530
may be wondering no wait a minute we've

55
00:01:55,530 --> 00:01:57,420
already talked about this haven't we and

56
00:01:57,420 --> 00:02:00,420
to some extent yes we have he said did a

57
00:02:00,420 --> 00:02:02,100
great job in their reporting last year

58
00:02:02,100 --> 00:02:03,960
as well as in a presentation I believe

59
00:02:03,960 --> 00:02:05,969
at this very event not at this location

60
00:02:05,969 --> 00:02:08,580
last year one point of note you'll see

61
00:02:08,580 --> 00:02:10,258
the in destroyer in crash override names

62
00:02:10,258 --> 00:02:11,459
this is a point of difference between

63
00:02:11,459 --> 00:02:13,170
our organizations that

64
00:02:13,170 --> 00:02:14,760
in destroyer has the implication that

65
00:02:14,760 --> 00:02:15,900
this is something that could be

66
00:02:15,900 --> 00:02:18,300
industry-wide in effects whereas really

67
00:02:18,300 --> 00:02:20,160
in our opinion a Drago's in my opinion

68
00:02:20,160 --> 00:02:21,300
and looking at how this was built

69
00:02:21,300 --> 00:02:23,160
designed and intended it really is

70
00:02:23,160 --> 00:02:26,010
limited to grid distribution operations

71
00:02:26,010 --> 00:02:27,959
electric grid operations as opposed to

72
00:02:27,959 --> 00:02:29,550
being a Multi framework for multiple

73
00:02:29,550 --> 00:02:31,709
industry verticals hence the change in

74
00:02:31,709 --> 00:02:33,450
name because it has an implication to it

75
00:02:33,450 --> 00:02:34,980
but enough of that the event was

76
00:02:34,980 --> 00:02:36,810
seemingly well documented but some

77
00:02:36,810 --> 00:02:38,070
critical questions at least in my mind

78
00:02:38,070 --> 00:02:40,800
and I brought this up at the cooked the

79
00:02:40,800 --> 00:02:42,319
joint black hat talk we did together

80
00:02:42,319 --> 00:02:44,700
we're an answer how do they get into the

81
00:02:44,700 --> 00:02:47,730
ICS network what was the ICS capability

82
00:02:47,730 --> 00:02:49,380
in Deaf beyond just looking at the

83
00:02:49,380 --> 00:02:50,790
modules at a very high level and

84
00:02:50,790 --> 00:02:52,650
unfortunately due to time we won't have

85
00:02:52,650 --> 00:02:54,209
that opportunity here but it will be in

86
00:02:54,209 --> 00:02:56,280
the paper provided along with this

87
00:02:56,280 --> 00:02:58,080
presentation and then how do we start

88
00:02:58,080 --> 00:02:59,730
building up layered defense instead of

89
00:02:59,730 --> 00:03:01,620
focusing at the very end of what should

90
00:03:01,620 --> 00:03:03,600
be a complex attack chain in order to

91
00:03:03,600 --> 00:03:05,970
identify initial intrusion all the way

92
00:03:05,970 --> 00:03:08,250
into final execution so really in

93
00:03:08,250 --> 00:03:09,989
orienting this rather than looking at

94
00:03:09,989 --> 00:03:12,150
you know this one final stage of

95
00:03:12,150 --> 00:03:14,190
executing an ICS attack what we really

96
00:03:14,190 --> 00:03:15,420
want to take as a whole of attack

97
00:03:15,420 --> 00:03:17,190
approach just why I called this an

98
00:03:17,190 --> 00:03:19,230
anatomy of an attack looking from

99
00:03:19,230 --> 00:03:21,060
initial network penetration to the

100
00:03:21,060 --> 00:03:23,910
enterprise IT side migrating through

101
00:03:23,910 --> 00:03:25,739
that network getting into the industrial

102
00:03:25,739 --> 00:03:27,660
control network pivoting there until you

103
00:03:27,660 --> 00:03:29,670
get to places where it's possible to

104
00:03:29,670 --> 00:03:31,019
communicate with actual control

105
00:03:31,019 --> 00:03:32,820
equipment and then delivering an attack

106
00:03:32,820 --> 00:03:35,130
because by viewing it as this interlink

107
00:03:35,130 --> 00:03:37,320
chain of dependent events we can then

108
00:03:37,320 --> 00:03:39,390
view crash override in the attack

109
00:03:39,390 --> 00:03:42,060
sequence in its completeness as multiple

110
00:03:42,060 --> 00:03:43,890
stages where defenders can identify and

111
00:03:43,890 --> 00:03:45,420
potentially mitigate the attack in

112
00:03:45,420 --> 00:03:47,190
progress rather than just looking at

113
00:03:47,190 --> 00:03:48,750
this as a bolt from the blue at the very

114
00:03:48,750 --> 00:03:50,880
end so they bred a little bit more

115
00:03:50,880 --> 00:03:52,799
context this wasn't the first power

116
00:03:52,799 --> 00:03:55,170
event in Ukraine 2015 featured something

117
00:03:55,170 --> 00:03:57,269
as well but it was very manual in nature

118
00:03:57,269 --> 00:03:59,220
there was no ICS specific malware

119
00:03:59,220 --> 00:04:01,350
involved just basically remote access

120
00:04:01,350 --> 00:04:03,239
into the network and the manipulating

121
00:04:03,239 --> 00:04:05,519
gear the significant alteration from

122
00:04:05,519 --> 00:04:07,739
2015 to 2016 was the change in

123
00:04:07,739 --> 00:04:10,200
tradecraft where that interaction with

124
00:04:10,200 --> 00:04:12,120
ICS equipment was instead codified

125
00:04:12,120 --> 00:04:14,100
within software so that really the

126
00:04:14,100 --> 00:04:16,950
person on keyboard who executed crash

127
00:04:16,950 --> 00:04:18,810
override or as we shall see scheduled a

128
00:04:18,810 --> 00:04:20,880
service to run at a specific time didn't

129
00:04:20,880 --> 00:04:22,380
need to know a damn thing about how

130
00:04:22,380 --> 00:04:24,390
control gear works they just needed to

131
00:04:24,390 --> 00:04:26,070
have the binary know that they were

132
00:04:26,070 --> 00:04:27,150
right place to execute it

133
00:04:27,150 --> 00:04:29,430
fire-and-forget and walk away so really

134
00:04:29,430 --> 00:04:31,170
what this enables is not only because

135
00:04:31,170 --> 00:04:32,790
you now are no longer have a human

136
00:04:32,790 --> 00:04:34,410
directly in the loop for interacting

137
00:04:34,410 --> 00:04:36,960
with the control gear you can also start

138
00:04:36,960 --> 00:04:39,390
scaling operations widely and narrowly

139
00:04:39,390 --> 00:04:41,490
because you can start spinning up

140
00:04:41,490 --> 00:04:43,950
operators whom know nothing about how

141
00:04:43,950 --> 00:04:45,570
ICS actually works they just need to

142
00:04:45,570 --> 00:04:48,300
know how to hack so in looking at this

143
00:04:48,300 --> 00:04:50,010
what were the events then that led up to

144
00:04:50,010 --> 00:04:52,410
crash itself so we talked about this

145
00:04:52,410 --> 00:04:54,000
whole of kill chain approach of looking

146
00:04:54,000 --> 00:04:56,160
both at your stage one enterprise IT

147
00:04:56,160 --> 00:04:57,960
initial operations and then getting into

148
00:04:57,960 --> 00:05:00,270
your initial ICS actions

149
00:05:00,270 --> 00:05:02,340
so the initial intrusion well quite

150
00:05:02,340 --> 00:05:04,260
frankly the precise methodology on this

151
00:05:04,260 --> 00:05:06,120
is unknown there was some large-scale

152
00:05:06,120 --> 00:05:08,070
fishing events that were reported by

153
00:05:08,070 --> 00:05:10,320
ESET publicly after the 2015 Ukraine

154
00:05:10,320 --> 00:05:12,240
event which are somewhat insightful

155
00:05:12,240 --> 00:05:13,620
insightful because they seem to be

156
00:05:13,620 --> 00:05:15,840
energy sector focus that maybe the

157
00:05:15,840 --> 00:05:17,700
initial action but quite frankly we just

158
00:05:17,700 --> 00:05:19,290
don't know at least I don't know at this

159
00:05:19,290 --> 00:05:20,640
point in time and have not uncovered any

160
00:05:20,640 --> 00:05:23,370
evidence to that point however thanks to

161
00:05:23,370 --> 00:05:25,110
some evidence that was shared with us

162
00:05:25,110 --> 00:05:26,400
through a partner organization that

163
00:05:26,400 --> 00:05:28,410
would like to remain fairly quiet we

164
00:05:28,410 --> 00:05:30,120
were able to uncover significant amounts

165
00:05:30,120 --> 00:05:31,740
of forensic detail from the event in

166
00:05:31,740 --> 00:05:33,630
question and you can say with some level

167
00:05:33,630 --> 00:05:35,610
of certainty that we first start seeing

168
00:05:35,610 --> 00:05:37,350
indications of activity within the

169
00:05:37,350 --> 00:05:41,730
impacted network in October of 2016 so

170
00:05:41,730 --> 00:05:43,830
approximately two months before we start

171
00:05:43,830 --> 00:05:47,070
we got the actual ICS impact now once we

172
00:05:47,070 --> 00:05:48,540
started seeing this initial activity

173
00:05:48,540 --> 00:05:49,830
within the network there's really not a

174
00:05:49,830 --> 00:05:51,390
whole lot except for some scanning and

175
00:05:51,390 --> 00:05:53,910
probing with ICS operations kicking off

176
00:05:53,910 --> 00:05:55,020
on the 1st of December

177
00:05:55,020 --> 00:05:57,480
this included attempts of using captured

178
00:05:57,480 --> 00:05:59,700
credentials against a multitude of posts

179
00:05:59,700 --> 00:06:01,830
which implies scripting and recovering

180
00:06:01,830 --> 00:06:03,210
scripts of trying to remotely

181
00:06:03,210 --> 00:06:05,070
authenticate with hard-coded credentials

182
00:06:05,070 --> 00:06:06,810
to hundreds of hosts within the network

183
00:06:06,810 --> 00:06:09,510
as well as once gaining access to the

184
00:06:09,510 --> 00:06:11,160
network creating some attacker

185
00:06:11,160 --> 00:06:14,060
controlled accounts admin and system in

186
00:06:14,060 --> 00:06:18,330
Ukrainian we saw this as a means of both

187
00:06:18,330 --> 00:06:20,340
moving laterally in elevating privileges

188
00:06:20,340 --> 00:06:21,930
to start taking action within the system

189
00:06:21,930 --> 00:06:23,310
then as we'll see as we proceed through

190
00:06:23,310 --> 00:06:25,050
this attack this was not simply a

191
00:06:25,050 --> 00:06:26,550
one-off a rather represents the

192
00:06:26,550 --> 00:06:28,460
methodology behind this attack

193
00:06:28,460 --> 00:06:31,140
issuing malware or any custom sort of

194
00:06:31,140 --> 00:06:32,550
tools for the most part for initial

195
00:06:32,550 --> 00:06:34,500
operations but rather relying on

196
00:06:34,500 --> 00:06:37,530
captured credential replay and scripting

197
00:06:37,530 --> 00:06:38,630
activity in as well as

198
00:06:38,630 --> 00:06:40,700
system commands to both compromised

199
00:06:40,700 --> 00:06:42,350
systems subvert them and then move

200
00:06:42,350 --> 00:06:44,840
laterally throughout the network what

201
00:06:44,840 --> 00:06:46,400
really struck out though in reviewing

202
00:06:46,400 --> 00:06:48,290
logs from the activity and recovering

203
00:06:48,290 --> 00:06:49,670
artifacts within the system in question

204
00:06:49,670 --> 00:06:52,310
is that we identified some very focused

205
00:06:52,310 --> 00:06:54,320
connectivity and operations surrounding

206
00:06:54,320 --> 00:06:56,540
free servers running Windows 2008

207
00:06:56,540 --> 00:06:58,790
running Microsoft sequel server that

208
00:06:58,790 --> 00:07:01,160
appeared to be functioning as data

209
00:07:01,160 --> 00:07:03,260
historians which with an ICS environment

210
00:07:03,260 --> 00:07:05,750
are your databases that record lots of

211
00:07:05,750 --> 00:07:08,150
process control information really vital

212
00:07:08,150 --> 00:07:09,770
in order to understand how from an

213
00:07:09,770 --> 00:07:11,390
Operations perspective your network is

214
00:07:11,390 --> 00:07:13,250
functioning so you know different from

215
00:07:13,250 --> 00:07:14,690
straight-up logging but really capturing

216
00:07:14,690 --> 00:07:16,730
things like rpms fuel usage and other

217
00:07:16,730 --> 00:07:18,650
sorts of items what's interesting about

218
00:07:18,650 --> 00:07:20,390
these though as a pivot point is that by

219
00:07:20,390 --> 00:07:21,860
their very nature these devices are

220
00:07:21,860 --> 00:07:23,540
going to be connected to lots of other

221
00:07:23,540 --> 00:07:25,010
equipment of interest because they have

222
00:07:25,010 --> 00:07:26,780
to have some connectivity to collect

223
00:07:26,780 --> 00:07:29,270
data the adversary knew this and first

224
00:07:29,270 --> 00:07:31,730
accessed these Microsoft sequel servers

225
00:07:31,730 --> 00:07:33,110
which appeared to be roll-your-own

226
00:07:33,110 --> 00:07:36,050
historian type input installations on

227
00:07:36,050 --> 00:07:38,180
the 12th of December and use these as a

228
00:07:38,180 --> 00:07:40,160
central pivot point then to access other

229
00:07:40,160 --> 00:07:42,830
nodes within the network so using them

230
00:07:42,830 --> 00:07:44,210
as a pivot point was interesting because

231
00:07:44,210 --> 00:07:46,010
not only did it afford the attacker some

232
00:07:46,010 --> 00:07:47,930
level of connectivity in order to get to

233
00:07:47,930 --> 00:07:50,150
equipment of interest but they also did

234
00:07:50,150 --> 00:07:51,650
something really interesting is that

235
00:07:51,650 --> 00:07:53,030
instead of running commands on the

236
00:07:53,030 --> 00:07:54,620
command line or even having access on

237
00:07:54,620 --> 00:07:56,660
the command line the adversaries were

238
00:07:56,660 --> 00:07:58,010
able to leverage the privileges at which

239
00:07:58,010 --> 00:07:59,990
the database was running in order to use

240
00:07:59,990 --> 00:08:02,090
the legacy XP command shell from older

241
00:08:02,090 --> 00:08:04,310
versions of MS sequel to being able to

242
00:08:04,310 --> 00:08:06,470
run arbitrary commands pipe from the

243
00:08:06,470 --> 00:08:08,600
database to the command line so you see

244
00:08:08,600 --> 00:08:11,510
lots of commands such as this used in

245
00:08:11,510 --> 00:08:12,770
order to do things like move files

246
00:08:12,770 --> 00:08:14,720
around remotely execute commands call

247
00:08:14,720 --> 00:08:17,480
scripts etc so based upon these older

248
00:08:17,480 --> 00:08:19,010
devices sitting within the network that

249
00:08:19,010 --> 00:08:20,180
could have been hardened perhaps a

250
00:08:20,180 --> 00:08:21,830
little bit better it's always tough to

251
00:08:21,830 --> 00:08:24,230
blame the victim with an ICS environment

252
00:08:24,230 --> 00:08:25,520
because we're talking about lots of very

253
00:08:25,520 --> 00:08:27,650
fragile gear most of the time and these

254
00:08:27,650 --> 00:08:29,630
networks tend to not be as up-to-date as

255
00:08:29,630 --> 00:08:31,400
we would like them anyway but in this

256
00:08:31,400 --> 00:08:33,469
case the attacker was able to leverage a

257
00:08:33,469 --> 00:08:35,479
very specific environmental setup in

258
00:08:35,479 --> 00:08:37,340
order to allow further access and

259
00:08:37,340 --> 00:08:39,320
execution within the environment so very

260
00:08:39,320 --> 00:08:40,909
much a case of knowing where you're

261
00:08:40,909 --> 00:08:42,409
operating and how to leverage that for

262
00:08:42,409 --> 00:08:44,930
your own needs now to facilitate all of

263
00:08:44,930 --> 00:08:46,250
this we've already seen some level of

264
00:08:46,250 --> 00:08:47,930
credential capture and reuse activity

265
00:08:47,930 --> 00:08:50,540
some of the initial credential capture

266
00:08:50,540 --> 00:08:52,200
the source of that is unknown

267
00:08:52,200 --> 00:08:53,820
but we do know that there was extensive

268
00:08:53,820 --> 00:08:55,560
use of mini cats and meanie cats like

269
00:08:55,560 --> 00:08:57,090
functionality within the environment

270
00:08:57,090 --> 00:08:59,120
with two specific variants identified

271
00:08:59,120 --> 00:09:02,010
one a straight-up compilation of mr.

272
00:09:02,010 --> 00:09:04,140
Dell pees github code and then the other

273
00:09:04,140 --> 00:09:06,260
applying just one little wrinkle of

274
00:09:06,260 --> 00:09:10,560
packing it with upx sort of a flipping

275
00:09:10,560 --> 00:09:11,730
of the middle finger to defenders in

276
00:09:11,730 --> 00:09:13,290
this case of saying I bet I can't see

277
00:09:13,290 --> 00:09:15,140
you and I'll use these tools anyway

278
00:09:15,140 --> 00:09:17,070
irrespective of that this really goes to

279
00:09:17,070 --> 00:09:18,510
the point of increased logging

280
00:09:18,510 --> 00:09:20,340
monitoring and visibility within control

281
00:09:20,340 --> 00:09:22,350
system networks to catch stuff like this

282
00:09:22,350 --> 00:09:24,450
because the idea that you know maybe

283
00:09:24,450 --> 00:09:25,890
antivirus will catch it which it should

284
00:09:25,890 --> 00:09:28,380
catch this if nothing else is a moot

285
00:09:28,380 --> 00:09:30,450
point and it was in this investigation

286
00:09:30,450 --> 00:09:31,710
because it appears that this was used

287
00:09:31,710 --> 00:09:33,780
quite extensively to harvest credentials

288
00:09:33,780 --> 00:09:35,580
in order to replay them to move

289
00:09:35,580 --> 00:09:37,650
throughout the network now once within

290
00:09:37,650 --> 00:09:40,500
and possessing credentials to enable

291
00:09:40,500 --> 00:09:42,810
further activity then essentially it's

292
00:09:42,810 --> 00:09:45,420
game on within the target network once

293
00:09:45,420 --> 00:09:46,920
within the network filed movement was

294
00:09:46,920 --> 00:09:48,810
initiated as I saw the earlier XP

295
00:09:48,810 --> 00:09:50,910
command shell examples not through some

296
00:09:50,910 --> 00:09:53,400
custom backdoor or throwing exploits but

297
00:09:53,400 --> 00:09:56,490
just using net use there were scripts

298
00:09:56,490 --> 00:09:58,620
that were created that leveraged WMI and

299
00:09:58,620 --> 00:09:59,910
some other native system functionality

300
00:09:59,910 --> 00:10:02,070
to do more or less the same essentially

301
00:10:02,070 --> 00:10:03,300
once you had ways to authenticate

302
00:10:03,300 --> 00:10:05,940
remotely the adversary was able to start

303
00:10:05,940 --> 00:10:07,140
moving tools throughout the network

304
00:10:07,140 --> 00:10:09,720
essentially it will from a process

305
00:10:09,720 --> 00:10:11,460
execution standpoint we already saw that

306
00:10:11,460 --> 00:10:14,130
XP command show was used for command

307
00:10:14,130 --> 00:10:17,010
execution on the pivot point servers

308
00:10:17,010 --> 00:10:18,750
themselves against serving as that

309
00:10:18,750 --> 00:10:20,700
central point of expansion but for other

310
00:10:20,700 --> 00:10:22,110
devices and for that remote code

311
00:10:22,110 --> 00:10:24,750
execution on to follow on targets other

312
00:10:24,750 --> 00:10:26,700
means where X were leveraged including

313
00:10:26,700 --> 00:10:28,920
custom developed scripts similar which

314
00:10:28,920 --> 00:10:30,360
unfortunately we weren't able to get the

315
00:10:30,360 --> 00:10:32,820
content of and also using PS exec quite

316
00:10:32,820 --> 00:10:36,000
extensively from a script perspective we

317
00:10:36,000 --> 00:10:37,710
saw lots of batch scripts process

318
00:10:37,710 --> 00:10:39,090
execution system serving and

319
00:10:39,090 --> 00:10:40,230
reconnaissance and attack pre

320
00:10:40,230 --> 00:10:42,720
positioning what's really the highlight

321
00:10:42,720 --> 00:10:44,250
of all of this and this may seem quite

322
00:10:44,250 --> 00:10:45,660
boring is that well this doesn't seem

323
00:10:45,660 --> 00:10:46,860
very interesting this sounds like pen

324
00:10:46,860 --> 00:10:48,810
tester 101 what you would get in a sans

325
00:10:48,810 --> 00:10:49,890
course or something along those lines

326
00:10:49,890 --> 00:10:52,110
and the point is is that yes it does

327
00:10:52,110 --> 00:10:53,550
seem so boring and also from the

328
00:10:53,550 --> 00:10:55,320
perspective of industrial control

329
00:10:55,320 --> 00:10:57,480
security operations damn hard to detect

330
00:10:57,480 --> 00:11:00,090
because quite frankly a lot of the host

331
00:11:00,090 --> 00:11:01,740
visibility including just straight-up

332
00:11:01,740 --> 00:11:03,690
Windows Event log recording and shipping

333
00:11:03,690 --> 00:11:05,850
it off to other hosts let alone your fan

334
00:11:05,850 --> 00:11:08,519
the next generation EDR products don't

335
00:11:08,519 --> 00:11:10,589
exist in these environments as a result

336
00:11:10,589 --> 00:11:12,449
not only do you get the same benefits of

337
00:11:12,449 --> 00:11:14,040
living off the land as you'd see with

338
00:11:14,040 --> 00:11:15,810
some of our headline and quite frankly

339
00:11:15,810 --> 00:11:18,209
very advanced IT based intrusions but

340
00:11:18,209 --> 00:11:20,279
you also get the added benefit of quite

341
00:11:20,279 --> 00:11:21,569
simply blending in with the noise and

342
00:11:21,569 --> 00:11:22,980
remaining invisible because there's no

343
00:11:22,980 --> 00:11:24,720
good way to see this within Industrial

344
00:11:24,720 --> 00:11:26,399
networks at least not how many are

345
00:11:26,399 --> 00:11:29,940
presently architected so again sort of

346
00:11:29,940 --> 00:11:31,500
showing almost the middle finger to

347
00:11:31,500 --> 00:11:33,120
defenders in this case we recovered a

348
00:11:33,120 --> 00:11:34,889
PowerShell script which you know

349
00:11:34,889 --> 00:11:37,079
everyone in this room probably looks at

350
00:11:37,079 --> 00:11:38,970
that it's like yep that's dirty the

351
00:11:38,970 --> 00:11:40,529
thing is that that's exactly how it

352
00:11:40,529 --> 00:11:42,449
appears within data recovered there's no

353
00:11:42,449 --> 00:11:43,850
obfuscation there's no attempt to hide

354
00:11:43,850 --> 00:11:46,680
just flat-out PowerShell reaching out to

355
00:11:46,680 --> 00:11:48,810
a hard-coded IP on a funny-looking port

356
00:11:48,810 --> 00:11:50,850
to pull down a mysterious MS update

357
00:11:50,850 --> 00:11:52,589
don't know exactly what MS update is

358
00:11:52,589 --> 00:11:55,019
unfortunately in this case but in using

359
00:11:55,019 --> 00:11:57,209
one power show frequent friend and Ally

360
00:11:57,209 --> 00:11:58,589
of many of n attacker as well as

361
00:11:58,589 --> 00:12:01,050
defender not even trying to hide by

362
00:12:01,050 --> 00:12:02,610
encoding this script through you know

363
00:12:02,610 --> 00:12:03,870
even just something as simple as the

364
00:12:03,870 --> 00:12:06,569
base64 encode looking at some remote

365
00:12:06,569 --> 00:12:08,730
visual basic scripting this which is

366
00:12:08,730 --> 00:12:10,649
quite the word salad right now might as

367
00:12:10,649 --> 00:12:11,790
well be something you pull off of

368
00:12:11,790 --> 00:12:13,740
Microsoft TechNet as far as being able

369
00:12:13,740 --> 00:12:15,329
to remotely administer an query other

370
00:12:15,329 --> 00:12:17,550
devices again no obfuscation right here

371
00:12:17,550 --> 00:12:18,959
this is fairly obvious what it's trying

372
00:12:18,959 --> 00:12:21,060
to do really showing the level of

373
00:12:21,060 --> 00:12:22,560
brazenness perhaps but also an

374
00:12:22,560 --> 00:12:24,569
understanding of just what the adversary

375
00:12:24,569 --> 00:12:26,459
could get away with this environment due

376
00:12:26,459 --> 00:12:28,889
to lack of visibility and

377
00:12:28,889 --> 00:12:32,430
instrumentation and finally this could

378
00:12:32,430 --> 00:12:34,380
pre figure some of the crash overwrite

379
00:12:34,380 --> 00:12:36,540
activity itself but extensive use of a

380
00:12:36,540 --> 00:12:38,279
custom VBS script in order to do file

381
00:12:38,279 --> 00:12:41,329
copying don't know quite the exact

382
00:12:41,329 --> 00:12:43,680
contents of that script but by looking

383
00:12:43,680 --> 00:12:45,540
at the command line options it's pretty

384
00:12:45,540 --> 00:12:47,759
obvious that this is moving different

385
00:12:47,759 --> 00:12:49,620
files to a remote host in this case the

386
00:12:49,620 --> 00:12:51,180
different components of the crash

387
00:12:51,180 --> 00:12:53,370
override framework so the 1:04 framework

388
00:12:53,370 --> 00:12:55,310
including its effects module

389
00:12:55,310 --> 00:12:57,630
configuration file and the wiper module

390
00:12:57,630 --> 00:12:58,550
that we'll talk about

391
00:12:58,550 --> 00:13:02,550
etc and doing so to various specified

392
00:13:02,550 --> 00:13:05,130
target IP addresses so the takeaway here

393
00:13:05,130 --> 00:13:07,050
is that there's no use of obfuscation

394
00:13:07,050 --> 00:13:09,420
these are reasonably well written pieces

395
00:13:09,420 --> 00:13:11,759
of code you know they're not commented

396
00:13:11,759 --> 00:13:13,439
necessarily but they look pretty clean

397
00:13:13,439 --> 00:13:15,059
and the main thing is that if there is

398
00:13:15,059 --> 00:13:16,500
just a little bit of visibility either

399
00:13:16,500 --> 00:13:18,570
PowerShell logging or some command line

400
00:13:18,570 --> 00:13:20,610
for how these were being executed this

401
00:13:20,610 --> 00:13:22,020
is something that defenders could spot

402
00:13:22,020 --> 00:13:23,490
and shoot it in the face in its tracks

403
00:13:23,490 --> 00:13:26,490
when you see it one other point that I

404
00:13:26,490 --> 00:13:28,020
found very interesting about this is

405
00:13:28,020 --> 00:13:29,790
that and the use of PS exact within this

406
00:13:29,790 --> 00:13:32,940
environment you know straight up windows

407
00:13:32,940 --> 00:13:34,710
utility that's fine we see a lot of it

408
00:13:34,710 --> 00:13:37,110
hackers use this this almost seemed

409
00:13:37,110 --> 00:13:38,640
indicative of someone using an old

410
00:13:38,640 --> 00:13:40,920
library or an old toolkit that was used

411
00:13:40,920 --> 00:13:42,590
by the organization in question because

412
00:13:42,590 --> 00:13:45,660
they use version 2.0 leaven the PS exec

413
00:13:45,660 --> 00:13:47,880
which was released in April 2014 whereas

414
00:13:47,880 --> 00:13:49,200
the latest version when the attack took

415
00:13:49,200 --> 00:13:52,020
place that entire period actually was

416
00:13:52,020 --> 00:13:54,330
2.2 and we've seen in subsequent

417
00:13:54,330 --> 00:13:56,640
activities that look that appear to be

418
00:13:56,640 --> 00:13:58,650
linked to the same adversary the same

419
00:13:58,650 --> 00:14:00,420
continued use of the old version of PS

420
00:14:00,420 --> 00:14:02,820
exact and subsequent operations so

421
00:14:02,820 --> 00:14:04,110
definitely it appears as though

422
00:14:04,110 --> 00:14:06,120
someone's pulling things from the same

423
00:14:06,120 --> 00:14:09,060
old toolkit finally there was one point

424
00:14:09,060 --> 00:14:10,980
that was very interesting in presenting

425
00:14:10,980 --> 00:14:12,930
this material last year and analyzing it

426
00:14:12,930 --> 00:14:14,520
based upon the at the initial very

427
00:14:14,520 --> 00:14:16,380
narrow aperture that we had into the

428
00:14:16,380 --> 00:14:18,780
crash override activity is that the

429
00:14:18,780 --> 00:14:20,460
adversary in question designed and

430
00:14:20,460 --> 00:14:22,350
deployed a custom backdoor that

431
00:14:22,350 --> 00:14:24,180
initially appeared to be sort of the

432
00:14:24,180 --> 00:14:26,040
launching point for everything however

433
00:14:26,040 --> 00:14:28,410
based upon what we were able to glean

434
00:14:28,410 --> 00:14:30,360
from additional data that was provided

435
00:14:30,360 --> 00:14:32,040
to us by another party and then

436
00:14:32,040 --> 00:14:34,050
subsequent investigation from there that

437
00:14:34,050 --> 00:14:36,570
backdoor was never necessary it didn't

438
00:14:36,570 --> 00:14:39,120
really come into play as far as all the

439
00:14:39,120 --> 00:14:40,410
other activity we saw from the

440
00:14:40,410 --> 00:14:42,720
standpoints of file movement execution

441
00:14:42,720 --> 00:14:45,750
etc furthermore while that back to her

442
00:14:45,750 --> 00:14:47,370
provided some basic remote access to a

443
00:14:47,370 --> 00:14:48,840
functionality that was about it

444
00:14:48,840 --> 00:14:51,810
and I'm mentioned this last year at the

445
00:14:51,810 --> 00:14:54,450
time but the timing of it was also very

446
00:14:54,450 --> 00:14:55,980
odd so if you look at just straight-up

447
00:14:55,980 --> 00:14:57,810
file metadata timestamps are blown away

448
00:14:57,810 --> 00:15:00,090
okay but if you look at debug strings

449
00:15:00,090 --> 00:15:02,160
within the binary itself not everything

450
00:15:02,160 --> 00:15:03,870
was blown away and you see a compile

451
00:15:03,870 --> 00:15:06,300
time there's a time zone artifact in

452
00:15:06,300 --> 00:15:08,040
here altering this but depending on how

453
00:15:08,040 --> 00:15:09,360
you want to read this at least from

454
00:15:09,360 --> 00:15:11,160
samples recovered we're talking about

455
00:15:11,160 --> 00:15:12,720
something that was compiled and

456
00:15:12,720 --> 00:15:14,250
delivered within hours of the actual

457
00:15:14,250 --> 00:15:16,740
attack taking place so we're not really

458
00:15:16,740 --> 00:15:19,110
not seeing any sort of custom code of

459
00:15:19,110 --> 00:15:20,490
interest entering in the environment

460
00:15:20,490 --> 00:15:22,290
including the backdoor that was linked

461
00:15:22,290 --> 00:15:24,240
to the crash override framework until

462
00:15:24,240 --> 00:15:25,860
right before the event in question so

463
00:15:25,860 --> 00:15:27,090
looking at this again from that kill

464
00:15:27,090 --> 00:15:28,860
chain perspective trying to think that

465
00:15:28,860 --> 00:15:30,180
you're going to be able to flag off of

466
00:15:30,180 --> 00:15:31,900
the odd or new buying

467
00:15:31,900 --> 00:15:33,760
in question to catch this attack at

468
00:15:33,760 --> 00:15:35,950
least not before you get an imminent

469
00:15:35,950 --> 00:15:38,500
attack is what is occurring is very

470
00:15:38,500 --> 00:15:40,450
unlikely and thus going back to the

471
00:15:40,450 --> 00:15:42,040
methodology that we had observed in

472
00:15:42,040 --> 00:15:44,200
terms of native system command execution

473
00:15:44,200 --> 00:15:46,300
credential harvesting and credential

474
00:15:46,300 --> 00:15:47,860
reads within the environment are the

475
00:15:47,860 --> 00:15:49,510
keys to identifying this that an earth

476
00:15:49,510 --> 00:15:52,150
at the earliest possible stage so yes

477
00:15:52,150 --> 00:15:53,800
you know back door in context you know

478
00:15:53,800 --> 00:15:55,480
the capabilities we've discovered so far

479
00:15:55,480 --> 00:15:57,310
we're already included in the TTP's that

480
00:15:57,310 --> 00:15:59,800
we observed in that intrusion activity

481
00:15:59,800 --> 00:16:01,240
leading into the network that's the

482
00:16:01,240 --> 00:16:03,550
purpose for this back door quite frankly

483
00:16:03,550 --> 00:16:06,160
somewhat unknown so we've talked a lot

484
00:16:06,160 --> 00:16:08,200
about you know again short period of

485
00:16:08,200 --> 00:16:10,180
time I again please read the paper in

486
00:16:10,180 --> 00:16:11,230
order to see this in greater detail

487
00:16:11,230 --> 00:16:13,120
we've talked a lot about initial

488
00:16:13,120 --> 00:16:14,830
intrusion what about that actual

489
00:16:14,830 --> 00:16:16,390
headline impact though since now we're

490
00:16:16,390 --> 00:16:18,100
at the point where we've compromised

491
00:16:18,100 --> 00:16:19,600
multiple systems we put ourselves in

492
00:16:19,600 --> 00:16:21,460
position in order to deliver some sort

493
00:16:21,460 --> 00:16:25,150
of effect now what so crash override is

494
00:16:25,150 --> 00:16:27,370
dependent upon deployment on prior steps

495
00:16:27,370 --> 00:16:30,580
that goes without saying that XP command

496
00:16:30,580 --> 00:16:32,410
shell from the sequel servers though is

497
00:16:32,410 --> 00:16:33,880
instrumental in getting command

498
00:16:33,880 --> 00:16:36,580
execution to pre position the MV malware

499
00:16:36,580 --> 00:16:38,230
itself and then execute it with

500
00:16:38,230 --> 00:16:39,640
credentials captured and previous

501
00:16:39,640 --> 00:16:41,620
operations used to remotely copy and

502
00:16:41,620 --> 00:16:43,510
move files over to the designated

503
00:16:43,510 --> 00:16:45,310
targets than the industrial network and

504
00:16:45,310 --> 00:16:47,560
that a scripted or process execution was

505
00:16:47,560 --> 00:16:49,089
used in order to launch the payloads

506
00:16:49,089 --> 00:16:51,580
themselves so you can see this all done

507
00:16:51,580 --> 00:16:54,160
as a scheduled service start passed

508
00:16:54,160 --> 00:16:56,560
through via XP command shell calling C

509
00:16:56,560 --> 00:16:59,890
script with then a unknown what exactly

510
00:16:59,890 --> 00:17:02,020
the content of this is but from the

511
00:17:02,020 --> 00:17:04,300
various flags you can get an idea that

512
00:17:04,300 --> 00:17:05,650
this is calling some sort of command

513
00:17:05,650 --> 00:17:08,679
execution to create a new service i mapy

514
00:17:08,679 --> 00:17:10,689
service pointing to the previously

515
00:17:10,689 --> 00:17:12,540
copied crash override launcher module

516
00:17:12,540 --> 00:17:14,709
specifying the command line parameters

517
00:17:14,709 --> 00:17:17,349
of the crash over line effects module

518
00:17:17,349 --> 00:17:21,069
the crash override configuration file

519
00:17:21,069 --> 00:17:23,470
and then setting it as an auto start now

520
00:17:23,470 --> 00:17:24,730
the auto start didn't mean that this

521
00:17:24,730 --> 00:17:26,470
fired off right away because each of the

522
00:17:26,470 --> 00:17:27,579
samples at least the ones that we

523
00:17:27,579 --> 00:17:29,890
analyzed all had hard-coded timestamps

524
00:17:29,890 --> 00:17:32,290
to fire off at that again 17 December

525
00:17:32,290 --> 00:17:34,480
timeframe and for a couple of others on

526
00:17:34,480 --> 00:17:37,690
19 December then again using fairly

527
00:17:37,690 --> 00:17:39,640
standard techniques here nothing very

528
00:17:39,640 --> 00:17:41,290
special in order to pre position these

529
00:17:41,290 --> 00:17:44,520
and then you know set the timer for the

530
00:17:44,520 --> 00:17:46,320
in question to go off within the target

531
00:17:46,320 --> 00:17:49,170
environment so the crash override

532
00:17:49,170 --> 00:17:51,960
launcher itself starts with a dedicated

533
00:17:51,960 --> 00:17:53,340
launcher executive all with one

534
00:17:53,340 --> 00:17:54,690
exception that we found that was a

535
00:17:54,690 --> 00:17:56,460
standalone executable that combines

536
00:17:56,460 --> 00:17:58,020
several pieces of functionality in one

537
00:17:58,020 --> 00:18:00,210
service to initiate the payload manage

538
00:18:00,210 --> 00:18:02,340
execution and clean up after itself and

539
00:18:02,340 --> 00:18:05,130
terminate before passing execution on to

540
00:18:05,130 --> 00:18:07,320
the wiper functionality the reason we

541
00:18:07,320 --> 00:18:09,330
call this crash is because well the

542
00:18:09,330 --> 00:18:10,440
authors called it crash

543
00:18:10,440 --> 00:18:13,470
so the DLL export that is referenced in

544
00:18:13,470 --> 00:18:15,660
all the modules is simply crash which

545
00:18:15,660 --> 00:18:17,100
given what the malware does turn the

546
00:18:17,100 --> 00:18:18,480
lights off and then crash them systems

547
00:18:18,480 --> 00:18:21,120
and make some degree of sense now in

548
00:18:21,120 --> 00:18:23,280
terms of ICS impact this was very much

549
00:18:23,280 --> 00:18:25,760
designed with the specific focus of

550
00:18:25,760 --> 00:18:27,390
impacting electric distribution

551
00:18:27,390 --> 00:18:29,940
operations without going into a very

552
00:18:29,940 --> 00:18:31,290
long treatise on how electric

553
00:18:31,290 --> 00:18:32,760
distribution operations work in what

554
00:18:32,760 --> 00:18:34,650
protocols are involved I'll just list a

555
00:18:34,650 --> 00:18:38,010
few so you have an IEC 101 104 and 61

556
00:18:38,010 --> 00:18:40,350
850 ma methodologies for communicating

557
00:18:40,350 --> 00:18:42,480
with grid management equipment there are

558
00:18:42,480 --> 00:18:44,700
differences in communication IEC 101 as

559
00:18:44,700 --> 00:18:47,730
a serial only whereas 104 61 850 are

560
00:18:47,730 --> 00:18:50,400
operating over Ethernet and then the OPC

561
00:18:50,400 --> 00:18:52,590
OPC da specifically protocol for

562
00:18:52,590 --> 00:18:55,380
additional IDE communication the main

563
00:18:55,380 --> 00:18:57,360
takeaway from this is that as this was

564
00:18:57,360 --> 00:18:59,430
designed and implemented that different

565
00:18:59,430 --> 00:19:01,920
modules were imprisoned and shipped in

566
00:19:01,920 --> 00:19:03,390
order to target different aspects of

567
00:19:03,390 --> 00:19:05,460
distribution operations to create a sort

568
00:19:05,460 --> 00:19:08,130
of nested or not necess getting is a bad

569
00:19:08,130 --> 00:19:10,620
word but a progressively increasing

570
00:19:10,620 --> 00:19:12,390
outage event by targeting different

571
00:19:12,390 --> 00:19:14,790
pieces of the industrial gear in

572
00:19:14,790 --> 00:19:17,760
question now different modules might

573
00:19:17,760 --> 00:19:20,250
sound fairly exciting but in terms of

574
00:19:20,250 --> 00:19:21,690
ultimate functionality these all do

575
00:19:21,690 --> 00:19:23,610
basically the same thing manipulate

576
00:19:23,610 --> 00:19:25,470
breakers and switch gear really just

577
00:19:25,470 --> 00:19:28,020
cycling things from on to off close to

578
00:19:28,020 --> 00:19:30,300
open open being bad because that means

579
00:19:30,300 --> 00:19:31,350
that you have an open circuit and power

580
00:19:31,350 --> 00:19:35,760
is no longer flowing in terms of how

581
00:19:35,760 --> 00:19:37,350
many targets were talking about so the

582
00:19:37,350 --> 00:19:39,090
way and this was was leveraged is that

583
00:19:39,090 --> 00:19:42,450
you see host connected to again that the

584
00:19:42,450 --> 00:19:45,150
sequel server hosts in question using

585
00:19:45,150 --> 00:19:48,090
the pre position crash override payloads

586
00:19:48,090 --> 00:19:50,100
on those devices to then communicate all

587
00:19:50,100 --> 00:19:52,830
of the PLC's or the actual distribution

588
00:19:52,830 --> 00:19:55,740
gear connected to the hosts on which the

589
00:19:55,740 --> 00:19:57,900
malware is running within these and

590
00:19:57,900 --> 00:19:58,290
looking at

591
00:19:58,290 --> 00:20:00,690
configuration files we can identify tens

592
00:20:00,690 --> 00:20:02,670
and in some cases almost hundreds of

593
00:20:02,670 --> 00:20:04,440
targets in question both from the

594
00:20:04,440 --> 00:20:06,330
configuration files that indicate you

595
00:20:06,330 --> 00:20:08,340
know 80 or so targets or some of the IEC

596
00:20:08,340 --> 00:20:10,500
104 equipment as well as potentially

597
00:20:10,500 --> 00:20:12,210
over a hundred hundreds of potential

598
00:20:12,210 --> 00:20:14,370
targets looking at the OPC servers that

599
00:20:14,370 --> 00:20:16,230
were enumerated to identify controlled

600
00:20:16,230 --> 00:20:18,990
OPC gear from those targets in question

601
00:20:18,990 --> 00:20:20,790
what's important to take away from this

602
00:20:20,790 --> 00:20:22,350
and going back to the earlier point of

603
00:20:22,350 --> 00:20:24,120
the change in tradecraft from 2015 to

604
00:20:24,120 --> 00:20:26,970
2016 is that you can't do this very

605
00:20:26,970 --> 00:20:28,920
easily if you're stuck in manual mode

606
00:20:28,920 --> 00:20:31,050
operations yeah if you're sitting high

607
00:20:31,050 --> 00:20:32,460
end up in the stack and distribution

608
00:20:32,460 --> 00:20:34,050
operations you can probably get some

609
00:20:34,050 --> 00:20:36,300
level of impact but impacting that many

610
00:20:36,300 --> 00:20:37,830
targets in quick succession just doesn't

611
00:20:37,830 --> 00:20:39,600
happen so you need something to be at

612
00:20:39,600 --> 00:20:41,730
least semi automated in functionality in

613
00:20:41,730 --> 00:20:43,200
order to scale your operation to hit

614
00:20:43,200 --> 00:20:45,000
that much gear within a short period of

615
00:20:45,000 --> 00:20:46,830
time and you can see here the

616
00:20:46,830 --> 00:20:48,660
enumeration of the OPC servers in

617
00:20:48,660 --> 00:20:49,710
question within the target environment

618
00:20:49,710 --> 00:20:52,050
of really just going after each of them

619
00:20:52,050 --> 00:20:54,030
in identifying state and then changing

620
00:20:54,030 --> 00:20:56,820
the state in question now we did

621
00:20:56,820 --> 00:20:58,950
identify I said again a standalone that

622
00:20:58,950 --> 00:21:02,190
targeted the IEC 61 850 protocol and

623
00:21:02,190 --> 00:21:03,330
this is where it seems like there's some

624
00:21:03,330 --> 00:21:04,710
variations with how things were

625
00:21:04,710 --> 00:21:06,090
developed over time it almost looked

626
00:21:06,090 --> 00:21:07,920
like they were pushing things out of dev

627
00:21:07,920 --> 00:21:09,720
into prod as soon as they were allegedly

628
00:21:09,720 --> 00:21:11,280
completed and we'll see an example of

629
00:21:11,280 --> 00:21:12,990
that that really emphasizes this at the

630
00:21:12,990 --> 00:21:14,790
end so in this case it had a hard-coded

631
00:21:14,790 --> 00:21:17,370
not just in terms of spacing on the

632
00:21:17,370 --> 00:21:18,660
command line but even looking for the

633
00:21:18,660 --> 00:21:20,640
file name of I die and I for what the

634
00:21:20,640 --> 00:21:22,950
target should be and then also we had a

635
00:21:22,950 --> 00:21:25,650
hybrid of both the OPC in 61 850 modules

636
00:21:25,650 --> 00:21:27,420
that really just sort of jams them both

637
00:21:27,420 --> 00:21:29,220
together and creates two threads in

638
00:21:29,220 --> 00:21:30,780
secession that really then just trigger

639
00:21:30,780 --> 00:21:32,730
the same sort of payloads that we well

640
00:21:32,730 --> 00:21:34,140
it's very similar payloads to what we

641
00:21:34,140 --> 00:21:36,030
saw in the separate modules so yeah as

642
00:21:36,030 --> 00:21:37,350
much as this looks like it might be

643
00:21:37,350 --> 00:21:39,180
modular and plug and play sort of

644
00:21:39,180 --> 00:21:41,280
malware much of this is still very

645
00:21:41,280 --> 00:21:42,990
dependent upon itself and very much

646
00:21:42,990 --> 00:21:44,520
fragile and brittle with how it's put

647
00:21:44,520 --> 00:21:46,350
together in terms of both parameters

648
00:21:46,350 --> 00:21:47,790
passed to it and how those parameters

649
00:21:47,790 --> 00:21:48,950
will interact with one another

650
00:21:48,950 --> 00:21:52,230
now following the actual grid amp to

651
00:21:52,230 --> 00:21:54,210
impact crash override moves to that a

652
00:21:54,210 --> 00:21:56,880
new stage a malicious wiper stage this

653
00:21:56,880 --> 00:21:58,230
is a destructive component that's

654
00:21:58,230 --> 00:21:59,730
launched that's specified by the

655
00:21:59,730 --> 00:22:02,370
launcher that does three primary things

656
00:22:02,370 --> 00:22:04,760
first it goes into the registry and

657
00:22:04,760 --> 00:22:07,500
zeros out the registry key for the image

658
00:22:07,500 --> 00:22:09,300
path for critical services actually

659
00:22:09,300 --> 00:22:11,929
somewhat similar at least in intent is

660
00:22:11,929 --> 00:22:13,399
we saw with olympic destroyer although

661
00:22:13,399 --> 00:22:15,289
looking at the code in question the two

662
00:22:15,289 --> 00:22:16,639
are dissimilar so please don't take that

663
00:22:16,639 --> 00:22:19,009
is like oh my god attribution no not

664
00:22:19,009 --> 00:22:21,230
going there that anyway the main point

665
00:22:21,230 --> 00:22:22,399
behind all of that is that it renders

666
00:22:22,399 --> 00:22:23,869
the system unbootable because as the

667
00:22:23,869 --> 00:22:24,919
system will start will see these

668
00:22:24,919 --> 00:22:27,080
services or unmapped oh noes bad things

669
00:22:27,080 --> 00:22:30,980
happen after that a the wiper goes

670
00:22:30,980 --> 00:22:33,259
through and starts eliminating files not

671
00:22:33,259 --> 00:22:34,999
just any files so it goes after some you

672
00:22:34,999 --> 00:22:37,519
know system files executable files etc

673
00:22:37,519 --> 00:22:40,129
but really narrowly focuses on files

674
00:22:40,129 --> 00:22:43,039
associated with ABB equipment operations

675
00:22:43,039 --> 00:22:44,690
such as project files and configuration

676
00:22:44,690 --> 00:22:46,759
files the so what there is that if

677
00:22:46,759 --> 00:22:48,799
you're operating especially in the North

678
00:22:48,799 --> 00:22:50,960
American grid context that chances are

679
00:22:50,960 --> 00:22:52,639
manual mode is not an option because

680
00:22:52,639 --> 00:22:55,070
your office is sitting hundreds of miles

681
00:22:55,070 --> 00:22:56,389
away from where your actual distribution

682
00:22:56,389 --> 00:22:58,399
gear is so you're gonna rely upon

683
00:22:58,399 --> 00:23:00,350
automated configuration to restore

684
00:23:00,350 --> 00:23:03,409
operations when things go sour by wiping

685
00:23:03,409 --> 00:23:04,580
that sort of information you're

686
00:23:04,580 --> 00:23:06,740
inhibiting recovery the Ukrainians got

687
00:23:06,740 --> 00:23:08,210
lucky in that their operations weren't

688
00:23:08,210 --> 00:23:09,440
as highly automated and they just went

689
00:23:09,440 --> 00:23:11,240
out to the yard and switch things over

690
00:23:11,240 --> 00:23:13,940
finally to finish this sequence of

691
00:23:13,940 --> 00:23:16,009
events processes are killed resulting in

692
00:23:16,009 --> 00:23:18,379
system instability system shutdown can't

693
00:23:18,379 --> 00:23:19,940
bring it up at least not very easily and

694
00:23:19,940 --> 00:23:21,830
oh by the way once you finally restore

695
00:23:21,830 --> 00:23:23,330
your system or you forensically recover

696
00:23:23,330 --> 00:23:23,840
files

697
00:23:23,840 --> 00:23:25,429
you can't pull back the project files

698
00:23:25,429 --> 00:23:27,159
you need to get up and running again now

699
00:23:27,159 --> 00:23:29,990
there is one final part about this which

700
00:23:29,990 --> 00:23:31,940
was interesting is that you know sort of

701
00:23:31,940 --> 00:23:34,039
continuing with the crash override it

702
00:23:34,039 --> 00:23:35,629
really just represents one massive dick

703
00:23:35,629 --> 00:23:37,970
move when it comes to trying to impact

704
00:23:37,970 --> 00:23:39,529
power operations is that there was a

705
00:23:39,529 --> 00:23:41,720
denial of service boner ability that was

706
00:23:41,720 --> 00:23:43,850
targeted in Siemens suprotec devices it

707
00:23:43,850 --> 00:23:46,309
was a theoretically old vulnerability

708
00:23:46,309 --> 00:23:48,830
and that was from 2015 but with an ICS

709
00:23:48,830 --> 00:23:50,869
2015 is still pretty damn recent as far

710
00:23:50,869 --> 00:23:53,029
as patching cycles and whatnot it's a

711
00:23:53,029 --> 00:23:54,740
denial of service by spending sending a

712
00:23:54,740 --> 00:23:57,409
specially crafted packet to UDP port

713
00:23:57,409 --> 00:23:59,690
50,000 what was interesting about this

714
00:23:59,690 --> 00:24:00,619
though is that they got the

715
00:24:00,619 --> 00:24:03,169
vulnerability right but the executive

716
00:24:03,169 --> 00:24:04,639
all itself was very brittle in that it

717
00:24:04,639 --> 00:24:06,320
was created with the IP addresses for

718
00:24:06,320 --> 00:24:08,450
the targets as hard-coded values in the

719
00:24:08,450 --> 00:24:09,740
binary itself doesn't take a

720
00:24:09,740 --> 00:24:11,539
configuration file like a lot of the

721
00:24:11,539 --> 00:24:12,679
other pieces of the crash override

722
00:24:12,679 --> 00:24:15,139
malware so again very much a target

723
00:24:15,139 --> 00:24:18,080
dependent piece of software only useful

724
00:24:18,080 --> 00:24:19,549
in that environment but what was

725
00:24:19,549 --> 00:24:21,289
interesting is that they applied the

726
00:24:21,289 --> 00:24:23,059
improper bite conversion for the

727
00:24:23,059 --> 00:24:25,080
hard-coded IP addresses in the file

728
00:24:25,080 --> 00:24:29,369
so if you were targeting 172 1001 or

729
00:24:29,369 --> 00:24:30,480
whatever that would have actually been

730
00:24:30,480 --> 00:24:33,230
executed and created a socket for 1 0 10

731
00:24:33,230 --> 00:24:36,269
172 it couldn't change that on the fly

732
00:24:36,269 --> 00:24:37,950
by reversing your configuration file

733
00:24:37,950 --> 00:24:39,720
because there was none reason I like to

734
00:24:39,720 --> 00:24:41,610
bring this up is that we like to put our

735
00:24:41,610 --> 00:24:43,440
apts or whatever on a pedestal that

736
00:24:43,440 --> 00:24:46,200
there are so burly and whatnot but even

737
00:24:46,200 --> 00:24:47,759
simple coding errors like this come into

738
00:24:47,759 --> 00:24:49,559
play and thus we don't see exactly

739
00:24:49,559 --> 00:24:52,289
everything executing as perfectly as one

740
00:24:52,289 --> 00:24:54,389
might like so we're running out of time

741
00:24:54,389 --> 00:24:56,519
here so what conclusions can we draw so

742
00:24:56,519 --> 00:24:58,259
crash override itself isn't just one

743
00:24:58,259 --> 00:24:59,700
sort of event but rather the last

744
00:24:59,700 --> 00:25:01,230
sequence in a chain of intrusion

745
00:25:01,230 --> 00:25:03,659
operations from start to finish and in

746
00:25:03,659 --> 00:25:05,309
looking at how that intrusion took place

747
00:25:05,309 --> 00:25:06,840
much of it avoided malware in the

748
00:25:06,840 --> 00:25:08,580
classic sense of the term primarily

749
00:25:08,580 --> 00:25:10,440
relying on native system utilities and

750
00:25:10,440 --> 00:25:12,330
credential capture in order to win the

751
00:25:12,330 --> 00:25:15,059
day defending against this is a little

752
00:25:15,059 --> 00:25:17,340
tricky because doing something as simple

753
00:25:17,340 --> 00:25:18,960
as like oh I'll blacklist these hashes

754
00:25:18,960 --> 00:25:20,759
or create your own rules for some of the

755
00:25:20,759 --> 00:25:22,139
functionality on this well the problem

756
00:25:22,139 --> 00:25:24,659
is it's very much limited based upon the

757
00:25:24,659 --> 00:25:26,159
target environment that crash was going

758
00:25:26,159 --> 00:25:27,779
after in terms of both the distribution

759
00:25:27,779 --> 00:25:29,700
protocols used and as we saw with some

760
00:25:29,700 --> 00:25:32,100
of the particular pieces of software

761
00:25:32,100 --> 00:25:34,139
with hard-coded values very much tuned

762
00:25:34,139 --> 00:25:35,789
to the environment in question so

763
00:25:35,789 --> 00:25:37,379
instead of looking at crash as being the

764
00:25:37,379 --> 00:25:39,239
example of what to defend against I like

765
00:25:39,239 --> 00:25:40,799
to think that that methodology leading

766
00:25:40,799 --> 00:25:42,480
up to crashes deployment and execution

767
00:25:42,480 --> 00:25:46,230
is important of looking for the abuse of

768
00:25:46,230 --> 00:25:47,909
system commands harvesting credentials

769
00:25:47,909 --> 00:25:49,049
and trying to look like an engineer

770
00:25:49,049 --> 00:25:50,879
pivoting throughout the environment so

771
00:25:50,879 --> 00:25:52,320
the lessons for defense that we can look

772
00:25:52,320 --> 00:25:55,529
for are preventative so protecting login

773
00:25:55,529 --> 00:25:57,690
info isolating and segregating networks

774
00:25:57,690 --> 00:25:59,249
where possible more of an architectural

775
00:25:59,249 --> 00:26:01,529
item than anything else are pretty hard

776
00:26:01,529 --> 00:26:03,989
to do that on the fly detection

777
00:26:03,989 --> 00:26:05,999
improving host visibility in ICS is

778
00:26:05,999 --> 00:26:07,200
something that I repeat in every

779
00:26:07,200 --> 00:26:09,389
audience public or private clients or

780
00:26:09,389 --> 00:26:11,489
whatnot because the only way to catch

781
00:26:11,489 --> 00:26:13,379
things such as PowerShell dummy I use

782
00:26:13,379 --> 00:26:16,830
subversion of CMD it cetera is by

783
00:26:16,830 --> 00:26:18,149
gaining host level versus built

784
00:26:18,149 --> 00:26:20,639
visibility through a syst bond at W OS

785
00:26:20,639 --> 00:26:23,429
it cetera OS query you know take your

786
00:26:23,429 --> 00:26:24,629
pick there's plenty of open source

787
00:26:24,629 --> 00:26:26,940
frameworks that allow this and using

788
00:26:26,940 --> 00:26:29,070
when that's not possible network

789
00:26:29,070 --> 00:26:31,230
visibility to try and capture lateral

790
00:26:31,230 --> 00:26:33,210
movements such as egregious RPC logon

791
00:26:33,210 --> 00:26:35,249
attempts or moving files throughout the

792
00:26:35,249 --> 00:26:36,600
network to different segments where such

793
00:26:36,600 --> 00:26:38,490
movement shouldn't be taking place

794
00:26:38,490 --> 00:26:40,320
from a mitigation standpoint I recommend

795
00:26:40,320 --> 00:26:42,030
always implementing Bastion hosts within

796
00:26:42,030 --> 00:26:44,040
these networks so that remote login has

797
00:26:44,040 --> 00:26:45,809
to go through at least one especially

798
00:26:45,809 --> 00:26:47,850
hardened and well monitored host that

799
00:26:47,850 --> 00:26:49,620
yes you might not be able you will never

800
00:26:49,620 --> 00:26:51,690
be able to get that ideal level of host

801
00:26:51,690 --> 00:26:53,429
base monitoring in all places but you

802
00:26:53,429 --> 00:26:55,650
can on certain elements you control and

803
00:26:55,650 --> 00:26:57,210
funneling adversary traffic to go

804
00:26:57,210 --> 00:26:58,950
through those nodes is important to

805
00:26:58,950 --> 00:27:00,750
build out robust detection and this

806
00:27:00,750 --> 00:27:01,920
allows you then to structure your

807
00:27:01,920 --> 00:27:04,170
detections to take place higher on the

808
00:27:04,170 --> 00:27:05,460
level of that kill chain as opposed to

809
00:27:05,460 --> 00:27:07,380
lower where you have actual disruptive

810
00:27:07,380 --> 00:27:10,080
events just one click or press the Enter

811
00:27:10,080 --> 00:27:12,210
key away finally and this is the last

812
00:27:12,210 --> 00:27:13,620
point that's always difficult to bring

813
00:27:13,620 --> 00:27:15,120
up in industrial environments because no

814
00:27:15,120 --> 00:27:16,230
one ever wants to see something bad

815
00:27:16,230 --> 00:27:17,790
happened to begin with but in the

816
00:27:17,790 --> 00:27:19,710
Ukranian example operations were

817
00:27:19,710 --> 00:27:21,240
restored in a relatively short amount of

818
00:27:21,240 --> 00:27:22,890
time because they had a plan to respond

819
00:27:22,890 --> 00:27:24,750
maybe not necessarily to a cyber attack

820
00:27:24,750 --> 00:27:26,760
but certainly to an electric disruption

821
00:27:26,760 --> 00:27:30,210
so having the ability to respond to and

822
00:27:30,210 --> 00:27:32,460
remediate operations to bring things

823
00:27:32,460 --> 00:27:34,770
back online is critical but also having

824
00:27:34,770 --> 00:27:36,660
secure storage and backup of files in an

825
00:27:36,660 --> 00:27:39,210
offline location is key so that is a

826
00:27:39,210 --> 00:27:40,770
whirlwind presentation in a short period

827
00:27:40,770 --> 00:27:42,420
of time I thank everyone for sitting

828
00:27:42,420 --> 00:27:45,020
through that we have

