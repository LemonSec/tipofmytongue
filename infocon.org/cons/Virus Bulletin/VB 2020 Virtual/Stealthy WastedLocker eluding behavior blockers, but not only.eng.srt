1
00:00:08,960 --> 00:00:09,920
hi everyone

2
00:00:09,920 --> 00:00:12,160
i'm alexander adama the founder of the

3
00:00:12,160 --> 00:00:14,000
research laboratory called niagara

4
00:00:14,000 --> 00:00:15,440
security lab

5
00:00:15,440 --> 00:00:17,840
i'm also teaching cyber security in the

6
00:00:17,840 --> 00:00:18,960
university

7
00:00:18,960 --> 00:00:21,840
for the last decade and now i'm going to

8
00:00:21,840 --> 00:00:24,560
tell the wasted lockers story of success

9
00:00:24,560 --> 00:00:26,400
that will shed light on the defense

10
00:00:26,400 --> 00:00:28,000
evasion techniques

11
00:00:28,000 --> 00:00:31,679
used by this ransomware

12
00:00:31,679 --> 00:00:33,440
let's start with the brief overview of

13
00:00:33,440 --> 00:00:36,079
the attack within lockers allegedly

14
00:00:36,079 --> 00:00:38,079
operated by the evil corp group headed

15
00:00:38,079 --> 00:00:38,800
by

16
00:00:38,800 --> 00:00:41,760
the famous russian hacker maximia kubitz

17
00:00:41,760 --> 00:00:43,440
who has a moniker aqua

18
00:00:43,440 --> 00:00:46,000
and known to be connected to jeff's

19
00:00:46,000 --> 00:00:47,200
andriidix

20
00:00:47,200 --> 00:00:50,719
financial malware campaigns the fbi even

21
00:00:50,719 --> 00:00:52,559
offers a reward of up to five million

22
00:00:52,559 --> 00:00:54,160
dollars for information leading to his

23
00:00:54,160 --> 00:00:55,600
arrest

24
00:00:55,600 --> 00:00:58,879
wasted locker attacked at least

25
00:00:58,879 --> 00:01:01,760
31 u.s based organizations since may

26
00:01:01,760 --> 00:01:02,879
2020

27
00:01:02,879 --> 00:01:06,320
including garmin the attack happened on

28
00:01:06,320 --> 00:01:09,600
july 23 according to the

29
00:01:09,600 --> 00:01:11,680
unconfirmed information the attackers

30
00:01:11,680 --> 00:01:13,760
initially asked for 10 million dollars

31
00:01:13,760 --> 00:01:16,960
as a ransom a few days later

32
00:01:16,960 --> 00:01:18,960
garmin somehow managed to obtain the

33
00:01:18,960 --> 00:01:20,320
crypto and get

34
00:01:20,320 --> 00:01:21,840
the garmin connect service back to

35
00:01:21,840 --> 00:01:24,240
operation on july

36
00:01:24,240 --> 00:01:26,799
27 according to the tweets that you can

37
00:01:26,799 --> 00:01:29,119
see on the slide

38
00:01:29,119 --> 00:01:31,920
the defense evasion techniques include

39
00:01:31,920 --> 00:01:33,119
digital signing

40
00:01:33,119 --> 00:01:35,439
alternated stream and lazy writing

41
00:01:35,439 --> 00:01:37,360
technologies

42
00:01:37,360 --> 00:01:39,520
well the first two are well-known

43
00:01:39,520 --> 00:01:40,640
techniques

44
00:01:40,640 --> 00:01:43,280
used by the attackers to bypass cyber

45
00:01:43,280 --> 00:01:43,920
defense

46
00:01:43,920 --> 00:01:46,799
the third one called lazy writing is

47
00:01:46,799 --> 00:01:49,520
somewhat new

48
00:01:49,520 --> 00:01:51,840
similar to locker gorga and mega cortex

49
00:01:51,840 --> 00:01:54,479
the wasted lockers executables

50
00:01:54,479 --> 00:01:57,360
are signed with digital certificates but

51
00:01:57,360 --> 00:01:59,920
in this case with the self-signed one

52
00:01:59,920 --> 00:02:02,560
issue 2 and issued by fields contain the

53
00:02:02,560 --> 00:02:04,880
same value

54
00:02:04,880 --> 00:02:07,200
the signing time is the 10th of june

55
00:02:07,200 --> 00:02:09,199
2020 that may indicate

56
00:02:09,199 --> 00:02:11,440
the approximate time of the beginning of

57
00:02:11,440 --> 00:02:13,920
the attack

58
00:02:14,400 --> 00:02:16,720
next techniques is the usage of

59
00:02:16,720 --> 00:02:19,120
alternate data stream or ids

60
00:02:19,120 --> 00:02:22,160
ads is the ability of ntfs file system

61
00:02:22,160 --> 00:02:24,000
to store files metadata

62
00:02:24,000 --> 00:02:26,400
but misused by attackers to hide the

63
00:02:26,400 --> 00:02:28,239
malicious code

64
00:02:28,239 --> 00:02:31,040
in case of wasted lockers the ransomware

65
00:02:31,040 --> 00:02:33,120
drops its copy to the stream called

66
00:02:33,120 --> 00:02:36,480
bin in the roman users folder

67
00:02:36,480 --> 00:02:39,760
and executes it after that wasted locker

68
00:02:39,760 --> 00:02:41,519
terminates the parent process

69
00:02:41,519 --> 00:02:45,360
and deletes its original file

70
00:02:45,360 --> 00:02:49,040
technique number three is lazy writing

71
00:02:49,040 --> 00:02:50,959
it is used by windows cache manager to

72
00:02:50,959 --> 00:02:52,879
reduce the overall num

73
00:02:52,879 --> 00:02:55,440
number of disk input output operations

74
00:02:55,440 --> 00:02:57,760
the file's data is stored in cache pages

75
00:02:57,760 --> 00:02:58,879
in the memory

76
00:02:58,879 --> 00:03:01,120
and then written to disk by the cache

77
00:03:01,120 --> 00:03:03,440
manager allowing to accumulate

78
00:03:03,440 --> 00:03:05,840
file changes in the memory and then

79
00:03:05,840 --> 00:03:06,640
flash them

80
00:03:06,640 --> 00:03:09,920
all at once this is enabled with memory

81
00:03:09,920 --> 00:03:10,720
map files

82
00:03:10,720 --> 00:03:14,159
in a regular way we need first to open a

83
00:03:14,159 --> 00:03:15,840
file for modification

84
00:03:15,840 --> 00:03:19,040
and get its size to know how many memory

85
00:03:19,040 --> 00:03:21,200
pages to allocate

86
00:03:21,200 --> 00:03:23,760
then we call create file mapping and map

87
00:03:23,760 --> 00:03:25,200
uo file functions

88
00:03:25,200 --> 00:03:28,480
to load the file's content to the memory

89
00:03:28,480 --> 00:03:32,080
and after modifying data in the memory

90
00:03:32,080 --> 00:03:35,840
we call unmap view of file function

91
00:03:35,840 --> 00:03:38,400
then close the handle to the memory mode

92
00:03:38,400 --> 00:03:39,120
file

93
00:03:39,120 --> 00:03:42,720
and only then a file handle

94
00:03:42,720 --> 00:03:46,159
what wasted locker does to force lazy

95
00:03:46,159 --> 00:03:47,519
writing on behalf

96
00:03:47,519 --> 00:03:50,080
of the operating system is it closes the

97
00:03:50,080 --> 00:03:51,280
file handle

98
00:03:51,280 --> 00:03:54,560
right after mapping the file but before

99
00:03:54,560 --> 00:03:55,599
encrypting the data

100
00:03:55,599 --> 00:03:58,159
to let the cache manager write back the

101
00:03:58,159 --> 00:04:00,159
encrypted data

102
00:04:00,159 --> 00:04:03,680
later on behalf of the system process

103
00:04:03,680 --> 00:04:08,400
let's take a look at it in action

104
00:04:08,400 --> 00:04:11,519
we start this demo from the point uh

105
00:04:11,519 --> 00:04:13,599
where target file has been already

106
00:04:13,599 --> 00:04:15,439
renamed

107
00:04:15,439 --> 00:04:17,759
and now it will be open to map the

108
00:04:17,759 --> 00:04:21,040
content to the memory

109
00:04:22,880 --> 00:04:25,680
once create file mapping and map view of

110
00:04:25,680 --> 00:04:28,080
file function have been called we can

111
00:04:28,080 --> 00:04:30,160
discover the file's content loaded to

112
00:04:30,160 --> 00:04:31,120
the memory

113
00:04:31,120 --> 00:04:36,639
by the address stored in rax register

114
00:04:36,639 --> 00:04:39,040
we can see that the data is not yet

115
00:04:39,040 --> 00:04:43,199
encrypted in the memory after that

116
00:04:43,199 --> 00:04:46,000
a wizard locker closes the handle to the

117
00:04:46,000 --> 00:04:48,160
opened file

118
00:04:48,160 --> 00:04:50,639
but still it keeps the handle to the

119
00:04:50,639 --> 00:04:52,800
memory map file returned by create

120
00:04:52,800 --> 00:04:54,840
filemaker

121
00:04:54,840 --> 00:04:58,000
function we can also check the file's

122
00:04:58,000 --> 00:04:58,560
content

123
00:04:58,560 --> 00:05:03,600
on the disk to make sure it is untouched

124
00:05:06,800 --> 00:05:09,759
then we execute the wasted locker until

125
00:05:09,759 --> 00:05:10,000
it

126
00:05:10,000 --> 00:05:14,160
calls unmapped view of file function

127
00:05:14,240 --> 00:05:16,560
at that point as you can see the data in

128
00:05:16,560 --> 00:05:17,520
the memory

129
00:05:17,520 --> 00:05:20,960
has been already encrypted

130
00:05:23,680 --> 00:05:25,759
next we resume the ransomware process

131
00:05:25,759 --> 00:05:28,160
and now we can check again the file's

132
00:05:28,160 --> 00:05:28,720
content

133
00:05:28,720 --> 00:05:31,440
on the disk

134
00:05:32,000 --> 00:05:33,840
as you can see the encrypted data has

135
00:05:33,840 --> 00:05:35,280
been successfully

136
00:05:35,280 --> 00:05:38,080
flashed to the file on the disk by the

137
00:05:38,080 --> 00:05:38,960
cache manager

138
00:05:38,960 --> 00:05:42,000
let's go to process monitor

139
00:05:42,000 --> 00:05:44,320
to see how it happened i'm going to

140
00:05:44,320 --> 00:05:46,479
exclude the read file events from total

141
00:05:46,479 --> 00:05:47,440
commander

142
00:05:47,440 --> 00:05:50,160
and wait for the flashing events to

143
00:05:50,160 --> 00:05:50,720
appear

144
00:05:50,720 --> 00:05:53,520
in the lock in the regular operation

145
00:05:53,520 --> 00:05:54,160
mode

146
00:05:54,160 --> 00:05:57,199
every second the lazy writer queues 1 8

147
00:05:57,199 --> 00:05:59,280
of dirty pages from the cache

148
00:05:59,280 --> 00:06:06,720
to be written to the disk

149
00:06:06,720 --> 00:06:10,400
as we can see our 4096 bytes which is

150
00:06:10,400 --> 00:06:12,639
the standard size of the memory page

151
00:06:12,639 --> 00:06:15,520
were written to the disk it's done by

152
00:06:15,520 --> 00:06:16,560
the system process

153
00:06:16,560 --> 00:06:18,880
because the cache manager's lazy writer

154
00:06:18,880 --> 00:06:19,759
function

155
00:06:19,759 --> 00:06:22,960
executes on a system worker thread

156
00:06:22,960 --> 00:06:24,960
after the lazy writer flushed the pages

157
00:06:24,960 --> 00:06:26,560
to the disk the cache manager instructs

158
00:06:26,560 --> 00:06:27,600
the file system

159
00:06:27,600 --> 00:06:30,639
to update its view of the valid data

160
00:06:30,639 --> 00:06:31,280
lens

161
00:06:31,280 --> 00:06:34,960
for the file if you want to learn more

162
00:06:34,960 --> 00:06:37,039
about the cache manager and lazy

163
00:06:37,039 --> 00:06:39,520
writing technique i would recommend you

164
00:06:39,520 --> 00:06:40,319
to read a

165
00:06:40,319 --> 00:06:43,600
windows internals part 2 book and

166
00:06:43,600 --> 00:06:45,680
have a look at the publication by sophos

167
00:06:45,680 --> 00:06:47,600
team for more details about the wasted

168
00:06:47,600 --> 00:06:48,479
locker

169
00:06:48,479 --> 00:06:50,880
attack

170
00:06:51,520 --> 00:06:55,199
we go next and uh with this lockers

171
00:06:55,199 --> 00:06:57,520
lazy writing can make blind not only

172
00:06:57,520 --> 00:06:59,680
entering somewhere behavior blockers

173
00:06:59,680 --> 00:07:02,400
but also cloud synthetic tools such as

174
00:07:02,400 --> 00:07:03,440
google drives

175
00:07:03,440 --> 00:07:06,560
backup and sync and luckily to user

176
00:07:06,560 --> 00:07:08,880
save the private data store it on google

177
00:07:08,880 --> 00:07:10,960
drive

178
00:07:10,960 --> 00:07:12,800
to demonstrate this i am going to

179
00:07:12,800 --> 00:07:14,479
execute wasted locker

180
00:07:14,479 --> 00:07:16,880
and see what will happen to my files

181
00:07:16,880 --> 00:07:17,520
sync

182
00:07:17,520 --> 00:07:21,039
with google drive first

183
00:07:21,039 --> 00:07:23,759
we can see that my files were named and

184
00:07:23,759 --> 00:07:25,199
ransom nodes were

185
00:07:25,199 --> 00:07:28,720
added in the local folder

186
00:07:28,720 --> 00:07:32,000
sometime later the new file names and

187
00:07:32,000 --> 00:07:36,160
ransom nodes appear on google drive

188
00:07:36,560 --> 00:07:38,160
but even though the files have been

189
00:07:38,160 --> 00:07:40,479
renamed we still can see the preview of

190
00:07:40,479 --> 00:07:44,800
the pdf file on google drive

191
00:07:44,800 --> 00:07:47,440
let's check the file's content on the

192
00:07:47,440 --> 00:07:48,879
local disk

193
00:07:48,879 --> 00:07:51,919
and on google drive to see if it's been

194
00:07:51,919 --> 00:07:54,080
encrypted

195
00:07:54,080 --> 00:07:55,919
loading the pdf from the local disk

196
00:07:55,919 --> 00:07:59,120
result in error

197
00:07:59,120 --> 00:08:02,879
and if we open the docx file in

198
00:08:02,879 --> 00:08:06,160
wordpod we can also find out that the

199
00:08:06,160 --> 00:08:09,360
content has been encrypted

200
00:08:09,360 --> 00:08:11,199
but the same document on google drive

201
00:08:11,199 --> 00:08:13,440
can be still viewed

202
00:08:13,440 --> 00:08:16,720
let's download it and view

203
00:08:16,720 --> 00:08:20,879
it locally to verify this as you can see

204
00:08:20,879 --> 00:08:24,879
the document is not encrypted

205
00:08:25,520 --> 00:08:28,960
so where is the trick if we go to the

206
00:08:28,960 --> 00:08:30,400
properties of the file

207
00:08:30,400 --> 00:08:32,799
and look at the modification time we'll

208
00:08:32,799 --> 00:08:33,760
see that it

209
00:08:33,760 --> 00:08:36,559
hasn't been changed after encryption and

210
00:08:36,559 --> 00:08:37,519
is equal to

211
00:08:37,519 --> 00:08:40,159
creation time which is a 26 minutes ago

212
00:08:40,159 --> 00:08:41,679
from the current moment

213
00:08:41,679 --> 00:08:43,599
the same situation with the modification

214
00:08:43,599 --> 00:08:47,120
time of the copies on google drive

215
00:08:47,120 --> 00:08:49,600
to sum up if a user uses google drives

216
00:08:49,600 --> 00:08:51,360
backup and sync and the sync files were

217
00:08:51,360 --> 00:08:53,600
encrypted by wasted locker

218
00:08:53,600 --> 00:08:55,519
the files still remain untouched on

219
00:08:55,519 --> 00:08:58,160
google drive

220
00:08:58,800 --> 00:09:02,160
in the end i would like to discuss the

221
00:09:02,160 --> 00:09:03,360
outcomes

222
00:09:03,360 --> 00:09:05,680
from the wasted locker attack the first

223
00:09:05,680 --> 00:09:06,720
one is

224
00:09:06,720 --> 00:09:09,839
that syncing files in real time with the

225
00:09:09,839 --> 00:09:11,760
cloud storage like in version control

226
00:09:11,760 --> 00:09:13,519
does not sound like a good idea

227
00:09:13,519 --> 00:09:15,600
especially when a ransomware is

228
00:09:15,600 --> 00:09:17,680
encrypting your disk

229
00:09:17,680 --> 00:09:21,120
second making daily and weekly

230
00:09:21,120 --> 00:09:24,399
backups of your data is a secret to your

231
00:09:24,399 --> 00:09:26,720
good night sleep

232
00:09:26,720 --> 00:09:28,560
having a reliable anti-ransomware

233
00:09:28,560 --> 00:09:30,000
protection installed

234
00:09:30,000 --> 00:09:33,360
can save you money time and also good

235
00:09:33,360 --> 00:09:35,200
mood

236
00:09:35,200 --> 00:09:37,839
and the last one advice to vendors test

237
00:09:37,839 --> 00:09:40,399
your anti-ransomware solutions against

238
00:09:40,399 --> 00:09:42,800
these techniques to be in a good shape

239
00:09:42,800 --> 00:09:44,560
when

240
00:09:44,560 --> 00:09:47,360
your solution meets a new breed of

241
00:09:47,360 --> 00:09:49,120
ransomware

242
00:09:49,120 --> 00:09:52,320
that's all thank you for attention and

243
00:09:52,320 --> 00:09:54,160
if you have any question i'll be

244
00:09:54,160 --> 00:10:04,719
happy to answer

