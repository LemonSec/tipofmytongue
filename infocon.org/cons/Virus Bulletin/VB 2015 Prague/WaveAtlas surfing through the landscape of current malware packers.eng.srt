1
00:00:00,140 --> 00:00:05,430
you ready okay okay so we're ready for

2
00:00:05,430 --> 00:00:07,410
our second presentation for the

3
00:00:07,410 --> 00:00:12,420
afternoon and from a well known

4
00:00:12,420 --> 00:00:13,769
researcher and a good friend of mine

5
00:00:13,769 --> 00:00:15,900
Jose Fernandez he's going to present

6
00:00:15,900 --> 00:00:21,180
about some current malware packing

7
00:00:21,180 --> 00:00:25,230
trends yes thank you thank you Andrew so

8
00:00:25,230 --> 00:00:28,710
this work was done by Jacques lv when he

9
00:00:28,710 --> 00:00:30,390
was a graduate student with me he

10
00:00:30,390 --> 00:00:33,719
finished his PhD in 2013 and he built a

11
00:00:33,719 --> 00:00:35,520
tool and a methodology for looking at

12
00:00:35,520 --> 00:00:38,579
Packers not from not so much from a how

13
00:00:38,579 --> 00:00:40,440
to unpack it how to get around the

14
00:00:40,440 --> 00:00:43,200
protection but to to the motivation of

15
00:00:43,200 --> 00:00:45,149
the work was to try to understand the

16
00:00:45,149 --> 00:00:47,070
different ways in which Packers are

17
00:00:47,070 --> 00:00:49,200
working or at least in the malware world

18
00:00:49,200 --> 00:00:52,649
and whether there are any trends or that

19
00:00:52,649 --> 00:00:54,469
we could detect so he built this tool

20
00:00:54,469 --> 00:00:59,129
that I called wave Atlas like the movie

21
00:00:59,129 --> 00:01:01,320
that came at a time Cloud Atlas the

22
00:01:01,320 --> 00:01:04,519
notion of wave here is waves of optic of

23
00:01:04,519 --> 00:01:07,830
unpacking so how do make a cartography

24
00:01:07,830 --> 00:01:10,320
if you wish of how the unpacking happens

25
00:01:10,320 --> 00:01:14,460
so we we did some more recent

26
00:01:14,460 --> 00:01:17,490
experiments with it we did explore quite

27
00:01:17,490 --> 00:01:20,220
a few malware samples we did this in two

28
00:01:20,220 --> 00:01:23,100
thousand fourteen and fifteen fanny who

29
00:01:23,100 --> 00:01:25,140
is here in the audience Francois and one

30
00:01:25,140 --> 00:01:27,659
helped with experimental setup and John

31
00:01:27,659 --> 00:01:30,150
Eve is that gives the co-inventor he was

32
00:01:30,150 --> 00:01:34,560
a director of wandering his thesis so

33
00:01:34,560 --> 00:01:38,220
what we're going to present is the

34
00:01:38,220 --> 00:01:41,100
question why are we looking at this why

35
00:01:41,100 --> 00:01:44,820
we think it's important how we went

36
00:01:44,820 --> 00:01:48,060
around to answer the question of how is

37
00:01:48,060 --> 00:01:52,259
malware being unpacked and finally we'll

38
00:01:52,259 --> 00:01:54,450
discuss the results what we saw and some

39
00:01:54,450 --> 00:01:57,479
of the conclusion will see some of the

40
00:01:57,479 --> 00:01:59,040
limitations of the work and also what

41
00:01:59,040 --> 00:02:01,520
where we think we can take this forward

42
00:02:01,520 --> 00:02:05,549
so a packer you know I'm a professor I

43
00:02:05,549 --> 00:02:07,110
cannot start a talk without giving a

44
00:02:07,110 --> 00:02:09,119
definition so what do we mean by Packer

45
00:02:09,119 --> 00:02:12,190
here we mean a problem

46
00:02:12,190 --> 00:02:14,320
transformation where the output is a

47
00:02:14,320 --> 00:02:17,200
program that will decompress the crypt

48
00:02:17,200 --> 00:02:19,990
or they compress a part of the of its

49
00:02:19,990 --> 00:02:24,340
original code so there are a lot of

50
00:02:24,340 --> 00:02:25,770
techniques that are being used for

51
00:02:25,770 --> 00:02:28,930
packing or for unpacking and they're

52
00:02:28,930 --> 00:02:32,740
there and there's different tools but

53
00:02:32,740 --> 00:02:35,020
what we want to know is independently of

54
00:02:35,020 --> 00:02:38,620
the tool is there a generic pattern a

55
00:02:38,620 --> 00:02:40,990
model of how malware in particular and

56
00:02:40,990 --> 00:02:43,360
we're not talking about a DRM here model

57
00:02:43,360 --> 00:02:45,940
in particular is being packed or is

58
00:02:45,940 --> 00:02:48,610
being unpacked so why does it matter it

59
00:02:48,610 --> 00:02:50,650
matters because if we can find some

60
00:02:50,650 --> 00:02:52,870
common features of that our tool

61
00:02:52,870 --> 00:02:55,200
independent that our family independent

62
00:02:55,200 --> 00:02:57,580
there are group of malware author

63
00:02:57,580 --> 00:02:59,440
independent then we can have a better

64
00:02:59,440 --> 00:03:01,840
understanding of the unpacking process

65
00:03:01,840 --> 00:03:03,940
and maybe we can devise better defenses

66
00:03:03,940 --> 00:03:07,540
for either reversing or detecting more

67
00:03:07,540 --> 00:03:09,490
importantly I think what I think is

68
00:03:09,490 --> 00:03:11,860
interesting is the differences different

69
00:03:11,860 --> 00:03:13,960
tools will unpack differently up to what

70
00:03:13,960 --> 00:03:16,750
point different groups different crime

71
00:03:16,750 --> 00:03:20,020
crime families or malware families and

72
00:03:20,020 --> 00:03:22,380
also potentially different authors might

73
00:03:22,380 --> 00:03:24,640
have different patterns and this is

74
00:03:24,640 --> 00:03:25,870
interesting from the point of view of

75
00:03:25,870 --> 00:03:29,830
attribution and also classification so

76
00:03:29,830 --> 00:03:33,340
if you look at other work in the field

77
00:03:33,340 --> 00:03:35,489
mostly it falls into two categories

78
00:03:35,489 --> 00:03:40,390
you've had tools like PE ID that gives

79
00:03:40,390 --> 00:03:42,760
you some identification of what Parker

80
00:03:42,760 --> 00:03:46,090
tool was used but it does not tell you

81
00:03:46,090 --> 00:03:49,420
much about how the unpacking is

82
00:03:49,420 --> 00:03:52,000
happening for that particular sample and

83
00:03:52,000 --> 00:03:53,950
of course and in particular gives you no

84
00:03:53,950 --> 00:03:57,190
idea about what is going on what are the

85
00:03:57,190 --> 00:03:59,650
patterns of unpacking when it's an

86
00:03:59,650 --> 00:04:01,120
unknown Packer when you cannot detect

87
00:04:01,120 --> 00:04:04,570
what packer it's being used also there

88
00:04:04,570 --> 00:04:07,840
are a few papers and a few presentations

89
00:04:07,840 --> 00:04:11,280
about describing the inner workings of

90
00:04:11,280 --> 00:04:13,959
particular Packers but there isn't

91
00:04:13,959 --> 00:04:15,430
really much work in terms of a global

92
00:04:15,430 --> 00:04:17,290
picture of Packers in the malware world

93
00:04:17,290 --> 00:04:21,370
so which is why we wanted to do that so

94
00:04:21,370 --> 00:04:23,940
what do we mean by a packer model

95
00:04:23,940 --> 00:04:26,100
here's where we have the notion of wave

96
00:04:26,100 --> 00:04:27,930
if you wish when you start with a packed

97
00:04:27,930 --> 00:04:31,470
file that is wave number zero every

98
00:04:31,470 --> 00:04:35,280
piece of code that is being generated or

99
00:04:35,280 --> 00:04:38,810
written by this file is then wave one

100
00:04:38,810 --> 00:04:41,730
the code in wave one then is going to

101
00:04:41,730 --> 00:04:44,130
unpack some more files or sorry sorry

102
00:04:44,130 --> 00:04:47,130
some more code in that code that is

103
00:04:47,130 --> 00:04:50,040
being unpacked in wave one is wave 2 and

104
00:04:50,040 --> 00:04:53,310
so forth so if you wish of the final

105
00:04:53,310 --> 00:04:56,610
payload or the final code and the end

106
00:04:56,610 --> 00:04:58,620
you will have bits of code that are in

107
00:04:58,620 --> 00:05:02,730
the original untouched wave 1 voice 0

108
00:05:02,730 --> 00:05:09,000
then wave 1 wave 2 up to n and the model

109
00:05:09,000 --> 00:05:12,540
that we hypothesize is that the payload

110
00:05:12,540 --> 00:05:14,880
of the malware is going to be at the end

111
00:05:14,880 --> 00:05:17,540
in the last bit that was unpacked okay

112
00:05:17,540 --> 00:05:19,650
why do we thought this was a reasonable

113
00:05:19,650 --> 00:05:21,840
model we thought with we thought so

114
00:05:21,840 --> 00:05:25,620
because here the objective of this

115
00:05:25,620 --> 00:05:28,200
packing is to protect the logic of the

116
00:05:28,200 --> 00:05:30,930
the malware the payload what is the

117
00:05:30,930 --> 00:05:33,000
alternative what is the other I counter

118
00:05:33,000 --> 00:05:34,740
in a counter hypothesis that we're

119
00:05:34,740 --> 00:05:36,540
putting aside is that the actual payload

120
00:05:36,540 --> 00:05:41,220
could be split along the waves right you

121
00:05:41,220 --> 00:05:42,690
could have some of the payload that is

122
00:05:42,690 --> 00:05:44,760
actually was untouched it's in the code

123
00:05:44,760 --> 00:05:47,640
in waves 0 and some more functions are

124
00:05:47,640 --> 00:05:50,970
in code wave 2 3 4 and then maybe a

125
00:05:50,970 --> 00:05:53,400
little bit at the end but I practices or

126
00:05:53,400 --> 00:05:55,890
intuition was that it was all towards

127
00:05:55,890 --> 00:06:00,930
the end in the last in the last wave so

128
00:06:00,930 --> 00:06:05,220
how do we prove this so we build a tool

129
00:06:05,220 --> 00:06:08,100
to do the analysis called wave Atlas and

130
00:06:08,100 --> 00:06:12,240
we did some experts a field study use

131
00:06:12,240 --> 00:06:15,900
using malware so the sample selection

132
00:06:15,900 --> 00:06:17,700
problem how do we address it in a row

133
00:06:17,700 --> 00:06:19,710
case so the first thing is that we

134
00:06:19,710 --> 00:06:22,230
cannot of course analyze all malware so

135
00:06:22,230 --> 00:06:24,000
therefore there's going to be some bias

136
00:06:24,000 --> 00:06:25,560
and experiment and we have to accept

137
00:06:25,560 --> 00:06:28,080
that it's not it's the result that

138
00:06:28,080 --> 00:06:29,669
you're going to see is about a certain

139
00:06:29,669 --> 00:06:33,090
subset of malware also we wanted to

140
00:06:33,090 --> 00:06:35,039
focus and this is funny because I just

141
00:06:35,039 --> 00:06:37,260
listened to holy stuck on the other

142
00:06:37,260 --> 00:06:40,050
room we wanted to focus on prevalent

143
00:06:40,050 --> 00:06:42,600
malware and we wanted to focus on

144
00:06:42,600 --> 00:06:44,190
successful families in particular

145
00:06:44,190 --> 00:06:48,090
because here the idea is that those that

146
00:06:48,090 --> 00:06:49,440
pack better probably are more successful

147
00:06:49,440 --> 00:06:51,990
where we wanted to see the sophisticated

148
00:06:51,990 --> 00:06:56,430
ones the anti viruses so what do we use

149
00:06:56,430 --> 00:07:00,180
we use the antivirus rankings in order

150
00:07:00,180 --> 00:07:02,670
to measure how successful of a malware

151
00:07:02,670 --> 00:07:07,350
was we use two indicators how talked

152
00:07:07,350 --> 00:07:10,530
about the malware was an academic in

153
00:07:10,530 --> 00:07:14,340
industry research and and other things

154
00:07:14,340 --> 00:07:16,440
like you know I were there where there

155
00:07:16,440 --> 00:07:19,040
any takedown attempts in the end we

156
00:07:19,040 --> 00:07:23,640
selected these six families that most of

157
00:07:23,640 --> 00:07:25,710
you know about and then for each of

158
00:07:25,710 --> 00:07:28,970
these families with we selected 100

159
00:07:28,970 --> 00:07:32,010
samples at least 100 samples as a matter

160
00:07:32,010 --> 00:07:35,130
of fact more than 100 and of course on

161
00:07:35,130 --> 00:07:36,720
each of these samples being different

162
00:07:36,720 --> 00:07:39,720
having being packed differently the

163
00:07:39,720 --> 00:07:41,280
experimental setup with that we had is

164
00:07:41,280 --> 00:07:44,070
the following essentially we run the

165
00:07:44,070 --> 00:07:46,290
malware and virtualized machines in what

166
00:07:46,290 --> 00:07:48,420
we call the analyzers and we let them

167
00:07:48,420 --> 00:07:50,850
run for about 20 minutes with the

168
00:07:50,850 --> 00:07:52,920
objective or gineering a trace a lot of

169
00:07:52,920 --> 00:07:54,660
these malware has call back so therefore

170
00:07:54,660 --> 00:07:59,910
we had a sister or brother isolator

171
00:07:59,910 --> 00:08:01,680
machine that was essentially providing a

172
00:08:01,680 --> 00:08:04,230
network emulation and providing some

173
00:08:04,230 --> 00:08:06,750
request response to network requests and

174
00:08:06,750 --> 00:08:09,600
the whole thing was run by a controller

175
00:08:09,600 --> 00:08:11,670
that was essentially scheduling the

176
00:08:11,670 --> 00:08:13,260
values experiments and also tracking

177
00:08:13,260 --> 00:08:16,230
which experiments failed or not the

178
00:08:16,230 --> 00:08:18,810
important notion here is that not all

179
00:08:18,810 --> 00:08:21,000
runs were successful so what was the

180
00:08:21,000 --> 00:08:22,890
criteria for determining that industry

181
00:08:22,890 --> 00:08:26,940
that when a run was successful is when

182
00:08:26,940 --> 00:08:28,890
the trace had more than 500 instructions

183
00:08:28,890 --> 00:08:30,990
and of course it doesn't work sometimes

184
00:08:30,990 --> 00:08:33,870
because either the malware detects

185
00:08:33,870 --> 00:08:36,120
virtualization or detects that it's not

186
00:08:36,120 --> 00:08:37,860
it's in a lab environment because of

187
00:08:37,860 --> 00:08:40,229
callbacks or sometimes it happens you're

188
00:08:40,229 --> 00:08:44,610
the sample is corrupted what about the

189
00:08:44,610 --> 00:08:49,380
results first question is

190
00:08:49,380 --> 00:08:51,990
of all of these software that we saw how

191
00:08:51,990 --> 00:08:54,630
much fact it was how deep did this

192
00:08:54,630 --> 00:08:57,450
process of successful waves of packing

193
00:08:57,450 --> 00:09:00,720
or unpacking it was and here you have

194
00:09:00,720 --> 00:09:05,070
the graph it tells you that the

195
00:09:05,070 --> 00:09:12,120
percentage of samples that that for

196
00:09:12,120 --> 00:09:14,370
which there was code in only in a

197
00:09:14,370 --> 00:09:16,710
certain wave so for example only one

198
00:09:16,710 --> 00:09:18,540
point seven two percent seventy-two

199
00:09:18,540 --> 00:09:21,960
percent a very small number of of this

200
00:09:21,960 --> 00:09:25,260
malware was only having one wave by the

201
00:09:25,260 --> 00:09:27,990
way the fact that it so that means that

202
00:09:27,990 --> 00:09:30,720
it wasn't packed at all right actually

203
00:09:30,720 --> 00:09:33,000
the correction it was packed but it was

204
00:09:33,000 --> 00:09:36,390
only one one iteration through the

205
00:09:36,390 --> 00:09:38,520
packing process most of it as you can

206
00:09:38,520 --> 00:09:41,340
see had at least two to five different

207
00:09:41,340 --> 00:09:45,720
num waves so relatively sophisticated in

208
00:09:45,720 --> 00:09:48,270
terms of home how much iterations there

209
00:09:48,270 --> 00:09:54,510
are through the packing process in

210
00:09:54,510 --> 00:09:57,720
addition to just characterize how much

211
00:09:57,720 --> 00:09:59,070
how many waves there where we wanted to

212
00:09:59,070 --> 00:10:02,640
know of course whether the the payload

213
00:10:02,640 --> 00:10:05,520
was in the first wave I'm sorry in the

214
00:10:05,520 --> 00:10:08,400
last wave or in the intermediate ones in

215
00:10:08,400 --> 00:10:11,700
our case of course n is equal to five or

216
00:10:11,700 --> 00:10:17,100
six and most so what what criteria did

217
00:10:17,100 --> 00:10:19,490
we use to determine whether the code in

218
00:10:19,490 --> 00:10:22,560
those ways was actually the payload the

219
00:10:22,560 --> 00:10:24,810
first one was to see whether they were

220
00:10:24,810 --> 00:10:26,610
and there are several criteria i'm just

221
00:10:26,610 --> 00:10:28,470
going to describe few in the talk the

222
00:10:28,470 --> 00:10:33,300
first one was how exotic the machine

223
00:10:33,300 --> 00:10:35,580
code was in it so one of the measures of

224
00:10:35,580 --> 00:10:37,980
exoticness is really to look at the

225
00:10:37,980 --> 00:10:40,550
mnemonics of the machine code if you

226
00:10:40,550 --> 00:10:43,770
look at the mnemonics what we did is we

227
00:10:43,770 --> 00:10:46,260
essentially took note bad I think Oh

228
00:10:46,260 --> 00:10:50,730
calculator Cal DXE as a mnemonics in it

229
00:10:50,730 --> 00:10:56,790
as the the subset of normal or mnemonics

230
00:10:56,790 --> 00:10:59,000
that you would find in a non malicious

231
00:10:59,000 --> 00:11:02,790
and there were about 80 of those

232
00:11:02,790 --> 00:11:05,340
non malicious program and then we took

233
00:11:05,340 --> 00:11:07,980
those as a baseline of saying okay how

234
00:11:07,980 --> 00:11:10,020
many mnemonics that are non-standard

235
00:11:10,020 --> 00:11:14,060
exist in wave one two three and four and

236
00:11:14,060 --> 00:11:18,480
then you know in hump if they were more

237
00:11:18,480 --> 00:11:20,670
than ten so the result is that the first

238
00:11:20,670 --> 00:11:23,610
code wave is the only one that really

239
00:11:23,610 --> 00:11:26,310
has a substantial or certain a

240
00:11:26,310 --> 00:11:28,170
substantial and significant number of

241
00:11:28,170 --> 00:11:31,590
non classical mnemonics non-classical

242
00:11:31,590 --> 00:11:33,230
mnemonics being of course one way to

243
00:11:33,230 --> 00:11:38,100
obfuscate one way to thwart the reverser

244
00:11:38,100 --> 00:11:43,830
so all of these sort of throwing nails

245
00:11:43,830 --> 00:11:45,480
in the road of the reverser we're only

246
00:11:45,480 --> 00:11:48,270
present in the first wave another

247
00:11:48,270 --> 00:11:52,560
another telltale sign is the use of

248
00:11:52,560 --> 00:11:56,640
unconventional all the in conventional

249
00:11:56,640 --> 00:11:59,520
use of the call the call mnemonic so the

250
00:11:59,520 --> 00:12:01,920
colony monic normally in normal programs

251
00:12:01,920 --> 00:12:03,540
is for calling a subroutine or a

252
00:12:03,540 --> 00:12:06,060
function and it ends with a return or

253
00:12:06,060 --> 00:12:08,250
read going back to the next instruction

254
00:12:08,250 --> 00:12:12,150
in malware for application purposes call

255
00:12:12,150 --> 00:12:15,690
is used often just to jump around in the

256
00:12:15,690 --> 00:12:18,000
program with that with read instructions

257
00:12:18,000 --> 00:12:20,850
just to officiate these assemblers and

258
00:12:20,850 --> 00:12:26,100
so forth so how many so we counted in

259
00:12:26,100 --> 00:12:28,260
each wave how many of the calls were

260
00:12:28,260 --> 00:12:31,050
unconventional not fall not followed by

261
00:12:31,050 --> 00:12:33,180
a rat and this we can do of course

262
00:12:33,180 --> 00:12:35,420
because we have the dynamic trace and

263
00:12:35,420 --> 00:12:37,950
the use of call in a non-standard

264
00:12:37,950 --> 00:12:41,040
fashion without returns ie from non

265
00:12:41,040 --> 00:12:43,440
compiled code was only prevalent in the

266
00:12:43,440 --> 00:12:51,360
first wave ok so I'm stating the obvious

267
00:12:51,360 --> 00:12:53,760
in a very scientific fashion right the

268
00:12:53,760 --> 00:12:56,850
first wave which is essentially the the

269
00:12:56,850 --> 00:12:59,040
pack code is where all of the protection

270
00:12:59,040 --> 00:13:02,220
is most of the protection is another

271
00:13:02,220 --> 00:13:06,120
another telltale sign is whether there

272
00:13:06,120 --> 00:13:07,980
is any system modification no this is a

273
00:13:07,980 --> 00:13:09,600
telltale sign not of protection but a

274
00:13:09,600 --> 00:13:12,240
telltale sign of the malware is actually

275
00:13:12,240 --> 00:13:14,070
doing something so it's probably the

276
00:13:14,070 --> 00:13:16,260
payload so what is this something well

277
00:13:16,260 --> 00:13:17,010
it's

278
00:13:17,010 --> 00:13:20,520
it's either modifying registry entries

279
00:13:20,520 --> 00:13:25,290
or calling network system functions and

280
00:13:25,290 --> 00:13:27,420
and so forth this access functions and

281
00:13:27,420 --> 00:13:30,090
so forth so what we discovered is that

282
00:13:30,090 --> 00:13:33,240
all of that all of those telltale signs

283
00:13:33,240 --> 00:13:36,170
of network of network activity and

284
00:13:36,170 --> 00:13:39,660
payload activity is all almost all in

285
00:13:39,660 --> 00:13:43,830
the last wave okay thus confirming the

286
00:13:43,830 --> 00:13:45,900
obvious that the payload is in the last

287
00:13:45,900 --> 00:13:49,980
wave there's a whole lot more thing that

288
00:13:49,980 --> 00:13:51,420
we looked at I don't want to spend too

289
00:13:51,420 --> 00:13:57,420
much time on these details but yeah I I

290
00:13:57,420 --> 00:13:59,070
encourage you to look at the paper for

291
00:13:59,070 --> 00:14:01,560
for more details on those so I guess the

292
00:14:01,560 --> 00:14:05,280
first the first thing from all of this

293
00:14:05,280 --> 00:14:08,870
is where we write is the model correct

294
00:14:08,870 --> 00:14:11,790
in as much as we were able to validate

295
00:14:11,790 --> 00:14:14,850
it on those samples the answer is yes in

296
00:14:14,850 --> 00:14:19,260
particular the first code waves do not

297
00:14:19,260 --> 00:14:22,920
have any useful payload in it all they

298
00:14:22,920 --> 00:14:28,100
have is essentially packing or unpacking

299
00:14:28,100 --> 00:14:30,570
they do not interact with the system and

300
00:14:30,570 --> 00:14:33,390
they are quite aggressive in that in

301
00:14:33,390 --> 00:14:35,940
terms of protection the you they do use

302
00:14:35,940 --> 00:14:40,080
exciting instructions bad calls and also

303
00:14:40,080 --> 00:14:42,570
accept exception throwing we what's one

304
00:14:42,570 --> 00:14:43,740
of the things that it sends a paper I

305
00:14:43,740 --> 00:14:46,620
didn't talk about it is how much except

306
00:14:46,620 --> 00:14:48,510
exception throwing there was in the in

307
00:14:48,510 --> 00:14:51,150
the waves because that is also a way in

308
00:14:51,150 --> 00:14:55,950
which you can handle a flow within the

309
00:14:55,950 --> 00:14:57,780
program in a way that is very hard for

310
00:14:57,780 --> 00:15:03,780
these assemblers to detect and all of

311
00:15:03,780 --> 00:15:06,990
the activity seems to be in the last

312
00:15:06,990 --> 00:15:09,240
code wave and that's the one that

313
00:15:09,240 --> 00:15:11,160
interacts with the system and the fact

314
00:15:11,160 --> 00:15:14,210
that we do not see any dissipation

315
00:15:14,210 --> 00:15:18,350
obfuscation primitive signs that we like

316
00:15:18,350 --> 00:15:21,270
exceptional throwing in cal conventions

317
00:15:21,270 --> 00:15:23,820
also leads us to believe that the that

318
00:15:23,820 --> 00:15:25,440
the code in the last wave is actually

319
00:15:25,440 --> 00:15:27,810
regular compiled code which is

320
00:15:27,810 --> 00:15:29,910
consistent with what we know about

321
00:15:29,910 --> 00:15:30,600
malware

322
00:15:30,600 --> 00:15:34,139
authors and some interesting there's

323
00:15:34,139 --> 00:15:35,730
always some wall moment since I was

324
00:15:35,730 --> 00:15:37,259
great because you know you start with

325
00:15:37,259 --> 00:15:40,019
the night passes and the epiphysis comes

326
00:15:40,019 --> 00:15:42,029
from what from what you you guys know

327
00:15:42,029 --> 00:15:45,000
from the folklore right it is what we

328
00:15:45,000 --> 00:15:48,029
think is the truth and then you do some

329
00:15:48,029 --> 00:15:50,009
experiments and then you say yes I was

330
00:15:50,009 --> 00:15:52,860
right but when it really becomes

331
00:15:52,860 --> 00:15:56,399
interesting is like I was right but but

332
00:15:56,399 --> 00:15:58,949
what what is the but the but here is

333
00:15:58,949 --> 00:16:02,699
that what we discovered is that the it's

334
00:16:02,699 --> 00:16:05,940
not always the last wave that contains

335
00:16:05,940 --> 00:16:07,709
the payload and a lot of the samples

336
00:16:07,709 --> 00:16:10,560
good chunk of them it was the one before

337
00:16:10,560 --> 00:16:14,190
the last okay so that's interesting why

338
00:16:14,190 --> 00:16:16,170
the one before the last so we looked at

339
00:16:16,170 --> 00:16:18,810
the code of the last wave and mostly

340
00:16:18,810 --> 00:16:22,319
contains hooks that are put in place by

341
00:16:22,319 --> 00:16:25,380
the by the malware so it's so these

342
00:16:25,380 --> 00:16:29,910
hooks or these hooked functions that are

343
00:16:29,910 --> 00:16:31,079
going to be hooked through interrupts

344
00:16:31,079 --> 00:16:33,449
the code for them is actually written

345
00:16:33,449 --> 00:16:35,430
out of the last wave which is the

346
00:16:35,430 --> 00:16:39,089
payload okay and because of what our

347
00:16:39,089 --> 00:16:41,550
tool detects that these areas of memory

348
00:16:41,550 --> 00:16:43,079
are being written by the payload they

349
00:16:43,079 --> 00:16:46,050
arc and this eras of memory these hooked

350
00:16:46,050 --> 00:16:50,100
functions are the last wave as for

351
00:16:50,100 --> 00:16:55,170
definition so the hypothesis is almost

352
00:16:55,170 --> 00:16:58,470
validated it's the payload is always in

353
00:16:58,470 --> 00:17:00,329
the last wave except when it's in the

354
00:17:00,329 --> 00:17:04,559
last the one before the last okay and

355
00:17:04,559 --> 00:17:07,859
that's about that was only 11 of family

356
00:17:07,859 --> 00:17:13,199
i believe so in conclusion we have

357
00:17:13,199 --> 00:17:16,919
painfully proven what for you is

358
00:17:16,919 --> 00:17:21,329
probably the obvious which is the way

359
00:17:21,329 --> 00:17:25,470
that malware is being packed is by

360
00:17:25,470 --> 00:17:29,370
having as much anti reversing in the

361
00:17:29,370 --> 00:17:31,820
first wave of code in the pact code and

362
00:17:31,820 --> 00:17:34,860
after that the successful wave of some

363
00:17:34,860 --> 00:17:37,830
packing are just there to provide extra

364
00:17:37,830 --> 00:17:40,890
protection and the nuggets the payload

365
00:17:40,890 --> 00:17:42,780
is at the end of that process in the

366
00:17:42,780 --> 00:17:43,940
last

367
00:17:43,940 --> 00:17:52,669
the last wave of packing so and by the

368
00:17:52,669 --> 00:17:55,159
way guess no better measure did before

369
00:17:55,159 --> 00:17:57,830
how many waves well it's between two and

370
00:17:57,830 --> 00:18:00,350
five okay for most of the malware and

371
00:18:00,350 --> 00:18:02,830
you've seen it's it's about the same its

372
00:18:02,830 --> 00:18:05,389
twenty percent for two three four and

373
00:18:05,389 --> 00:18:10,100
five and never more than six so the

374
00:18:10,100 --> 00:18:11,720
first question that we can ask ourselves

375
00:18:11,720 --> 00:18:16,759
is why are not malware authors doing why

376
00:18:16,759 --> 00:18:19,039
they putting it all at the end it sort

377
00:18:19,039 --> 00:18:20,480
of makes it obvious right because in

378
00:18:20,480 --> 00:18:22,730
some sense it makes it easy for us you

379
00:18:22,730 --> 00:18:25,090
let the Machine run until the end and

380
00:18:25,090 --> 00:18:28,399
you sort of and then if you it's

381
00:18:28,399 --> 00:18:29,659
probably a very inefficient way to

382
00:18:29,659 --> 00:18:33,200
unpack but you could let it run for 20

383
00:18:33,200 --> 00:18:36,350
minutes like we did and and then you

384
00:18:36,350 --> 00:18:38,179
just look at this the trace you look at

385
00:18:38,179 --> 00:18:40,850
the various parts of the memory or tool

386
00:18:40,850 --> 00:18:42,710
will label which parts of the memory

387
00:18:42,710 --> 00:18:45,110
correspond to which wave and then okay I

388
00:18:45,110 --> 00:18:46,549
just need to concentrate on the last

389
00:18:46,549 --> 00:18:47,899
wave because that's the one that I know

390
00:18:47,899 --> 00:18:50,450
by my hypothesis contains the nuggets I

391
00:18:50,450 --> 00:18:52,190
don't even have to reverse the rest it's

392
00:18:52,190 --> 00:18:54,049
just going to be unpacking code so in

393
00:18:54,049 --> 00:18:55,850
some sense this the fact that this model

394
00:18:55,850 --> 00:18:58,279
this truth makes it easier for reversers

395
00:18:58,279 --> 00:19:00,950
so why are they not sort of spreading

396
00:19:00,950 --> 00:19:03,409
the payload across the various waves

397
00:19:03,409 --> 00:19:05,690
which would make it harder in some sense

398
00:19:05,690 --> 00:19:07,700
because it would force the reverser to

399
00:19:07,700 --> 00:19:10,220
look at all of the wave code or all of

400
00:19:10,220 --> 00:19:12,860
the code in each of the waves to see to

401
00:19:12,860 --> 00:19:14,870
sort of try to reassemble the the full

402
00:19:14,870 --> 00:19:19,490
logic of the program so maybe next year

403
00:19:19,490 --> 00:19:21,919
and vb somebody will use our tool and

404
00:19:21,919 --> 00:19:24,019
show that they found some malware that

405
00:19:24,019 --> 00:19:25,639
does this and i think i was talking with

406
00:19:25,639 --> 00:19:27,710
somebody yesterday i can't remember the

407
00:19:27,710 --> 00:19:30,620
name I can't remember who it was it was

408
00:19:30,620 --> 00:19:32,059
after equalizer two three o'clock in the

409
00:19:32,059 --> 00:19:34,250
morning who mentioned that there was at

410
00:19:34,250 --> 00:19:36,200
least one malware sample of which he had

411
00:19:36,200 --> 00:19:38,360
seen that but it's from what we've seen

412
00:19:38,360 --> 00:19:44,419
it's not a permanent model and and in

413
00:19:44,419 --> 00:19:46,250
the question which is open-ended which

414
00:19:46,250 --> 00:19:49,039
is ok now we know a bit better how the

415
00:19:49,039 --> 00:19:53,090
unpacking model or or the trend is how

416
00:19:53,090 --> 00:19:56,960
useful is this can we does it allow us

417
00:19:56,960 --> 00:19:57,680
to develop

418
00:19:57,680 --> 00:19:59,810
better reversing tool does it allow us

419
00:19:59,810 --> 00:20:02,780
to think of potentially having some nice

420
00:20:02,780 --> 00:20:05,690
behavioral rules that we didn't think of

421
00:20:05,690 --> 00:20:08,920
previously in terms of the of detecting

422
00:20:08,920 --> 00:20:11,660
the malware and then of course the last

423
00:20:11,660 --> 00:20:15,700
question is we've only looked at six

424
00:20:15,700 --> 00:20:19,340
malware families I'll be yet we were

425
00:20:19,340 --> 00:20:20,720
careful in selecting ones that we

426
00:20:20,720 --> 00:20:22,220
thought were significant because of

427
00:20:22,220 --> 00:20:27,980
their prevalence but that obviously this

428
00:20:27,980 --> 00:20:30,860
is a question that would need probably

429
00:20:30,860 --> 00:20:32,390
more research we like to say that in

430
00:20:32,390 --> 00:20:35,390
academia more research is needed here

431
00:20:35,390 --> 00:20:38,300
the the research is essentially can we

432
00:20:38,300 --> 00:20:41,330
do this at large and I end at large with

433
00:20:41,330 --> 00:20:43,880
you know actually what I will even

434
00:20:43,880 --> 00:20:47,360
suggest here is that well we are going

435
00:20:47,360 --> 00:20:50,440
to make the tool available open source

436
00:20:50,440 --> 00:20:54,500
and it would be nice that all of you who

437
00:20:54,500 --> 00:20:57,740
work with AV companies as you are going

438
00:20:57,740 --> 00:20:59,990
through the process of maybe analyzing

439
00:20:59,990 --> 00:21:02,780
some of these malware that you maybe

440
00:21:02,780 --> 00:21:05,060
just run the tool on a couple of samples

441
00:21:05,060 --> 00:21:08,420
and sort of that becomes part of your

442
00:21:08,420 --> 00:21:09,920
business process in which you say okay

443
00:21:09,920 --> 00:21:12,350
well this malware sample has seven waves

444
00:21:12,350 --> 00:21:14,750
or ten waves oh this unusual it's more

445
00:21:14,750 --> 00:21:17,960
than before so that allows us to I hope

446
00:21:17,960 --> 00:21:20,870
that will give you some some extra

447
00:21:20,870 --> 00:21:23,480
things to look at that are not too

448
00:21:23,480 --> 00:21:25,040
expensive to look at that might give you

449
00:21:25,040 --> 00:21:27,680
some against on how different socially

450
00:21:27,680 --> 00:21:29,150
those of you working malware research

451
00:21:29,150 --> 00:21:31,310
how different these samples are wearing

452
00:21:31,310 --> 00:21:34,550
country are and in if you so please this

453
00:21:34,550 --> 00:21:36,740
let us know that using at all and let us

454
00:21:36,740 --> 00:21:39,350
know what you find it's different from

455
00:21:39,350 --> 00:21:43,190
what we did find in our study and that

456
00:21:43,190 --> 00:21:46,520
much is in so did I don't have any

457
00:21:46,520 --> 00:21:49,570
questions for his life

458
00:21:52,019 --> 00:21:54,730
so I have a question let's say I wanted

459
00:21:54,730 --> 00:21:59,409
the weather the one of the things is

460
00:21:59,409 --> 00:22:01,600
with when when you look inside the

461
00:22:01,600 --> 00:22:03,220
package when you when you say there are

462
00:22:03,220 --> 00:22:04,840
different way to practice with young

463
00:22:04,840 --> 00:22:08,289
only in the first case it's the really

464
00:22:08,289 --> 00:22:09,940
this really happy off after the

465
00:22:09,940 --> 00:22:11,889
obfuscation techniques used what is the

466
00:22:11,889 --> 00:22:13,690
one of the one of those other way it's

467
00:22:13,690 --> 00:22:15,879
really doing it apart from just adding

468
00:22:15,879 --> 00:22:22,809
time way to the question um it's

469
00:22:22,809 --> 00:22:24,700
probably just that it's very just biding

470
00:22:24,700 --> 00:22:26,980
time right it's probably actually i'm

471
00:22:26,980 --> 00:22:29,379
guessing that it's probably adding time

472
00:22:29,379 --> 00:22:31,720
because a lot of the e a lot of the

473
00:22:31,720 --> 00:22:36,369
evite products not all of them use use

474
00:22:36,369 --> 00:22:43,059
the sandbox.a online to food according

475
00:22:43,059 --> 00:22:45,399
to start doing a full of mal when you

476
00:22:45,399 --> 00:22:46,749
start doing the things that are telltale

477
00:22:46,749 --> 00:22:50,139
signs which are in the payload so i'm

478
00:22:50,139 --> 00:22:52,210
guessing that these efficient way that

479
00:22:52,210 --> 00:22:58,090
is probably just delay also i think the

480
00:22:58,090 --> 00:23:00,580
other thing is that if you are reversing

481
00:23:00,580 --> 00:23:03,489
the code and you are doing it you know

482
00:23:03,489 --> 00:23:05,230
by hand without the debug were either

483
00:23:05,230 --> 00:23:09,090
pro but you you actually have to find

484
00:23:09,090 --> 00:23:12,340
the place where the next wave is being

485
00:23:12,340 --> 00:23:13,989
you know the move that is generating the

486
00:23:13,989 --> 00:23:16,359
next one and then okay so then you will

487
00:23:16,359 --> 00:23:19,960
run it until until we find that first

488
00:23:19,960 --> 00:23:21,369
wave and then you have to sort of

489
00:23:21,369 --> 00:23:23,379
reverse the first that 2nd way of

490
00:23:23,379 --> 00:23:24,999
defining the point where the third one

491
00:23:24,999 --> 00:23:27,070
is being generated and so forth so it's

492
00:23:27,070 --> 00:23:29,710
also adding time in terms of a reversing

493
00:23:29,710 --> 00:23:32,019
time so i think that's the reason why

494
00:23:32,019 --> 00:23:36,129
these there is so many ways but you just

495
00:23:36,129 --> 00:23:37,749
slow down the reversing where they swing

496
00:23:37,749 --> 00:23:39,609
down on line in the sand boxing and I

497
00:23:39,609 --> 00:23:43,059
manually by the reverser but did you

498
00:23:43,059 --> 00:23:45,249
find any particular markers that were

499
00:23:45,249 --> 00:23:47,980
different between site now where that

500
00:23:47,980 --> 00:23:50,440
has two wives and well that has six

501
00:23:50,440 --> 00:23:52,659
wives there's some different markers in

502
00:23:52,659 --> 00:23:54,789
there that with indicator that was going

503
00:23:54,789 --> 00:23:56,940
to happen beforehand or no

504
00:23:56,940 --> 00:24:00,700
no no what was surprising though is that

505
00:24:00,700 --> 00:24:03,909
the number of waves was not consistent

506
00:24:03,909 --> 00:24:09,520
across a family so what we didn't go

507
00:24:09,520 --> 00:24:11,890
into the details of what that suggests

508
00:24:11,890 --> 00:24:16,150
is that these samples were not packed so

509
00:24:16,150 --> 00:24:17,950
there might be some randomness and how

510
00:24:17,950 --> 00:24:20,590
the Packer is generating a dirtbag

511
00:24:20,590 --> 00:24:22,539
version because the way they play live

512
00:24:22,539 --> 00:24:24,400
with the wave number was not a system or

513
00:24:24,400 --> 00:24:27,789
the malware authors could be different

514
00:24:27,789 --> 00:24:30,760
switching switching packin families or

515
00:24:30,760 --> 00:24:33,580
pastor is switching packers during the

516
00:24:33,580 --> 00:24:35,799
lifetime of the the malware but we

517
00:24:35,799 --> 00:24:37,960
didn't do the deep analysis of saying

518
00:24:37,960 --> 00:24:41,799
within a family one was a sample

519
00:24:41,799 --> 00:24:46,090
captured on how the wave numbers evolved

520
00:24:46,090 --> 00:24:47,559
over time things like that we didn't do

521
00:24:47,559 --> 00:24:51,880
that would be the next step are there

522
00:24:51,880 --> 00:24:57,909
any other questions yeah just sorry if

523
00:24:57,909 --> 00:25:00,610
it was certain I just missed it but how

524
00:25:00,610 --> 00:25:04,659
do you say that one wave has just ended

525
00:25:04,659 --> 00:25:07,240
and another started we're just looking

526
00:25:07,240 --> 00:25:09,659
at a specific piece of code and whenever

527
00:25:09,659 --> 00:25:12,190
the particular instruction has changed

528
00:25:12,190 --> 00:25:14,500
it's another way for yes so so the

529
00:25:14,500 --> 00:25:16,690
details the details of that actually not

530
00:25:16,690 --> 00:25:18,640
in the paper it's another academic paper

531
00:25:18,640 --> 00:25:21,279
with that we're just publishing in and

532
00:25:21,279 --> 00:25:23,890
ccs and academic conference but there is

533
00:25:23,890 --> 00:25:26,200
a recursive definition the recursive

534
00:25:26,200 --> 00:25:30,309
definition is that it's by looking at

535
00:25:30,309 --> 00:25:32,970
the memory okay so you have a memory

536
00:25:32,970 --> 00:25:36,669
gather a file that is in memory and by

537
00:25:36,669 --> 00:25:39,549
default everything in there gets labeled

538
00:25:39,549 --> 00:25:44,049
as waves 0 okay whenever a program

539
00:25:44,049 --> 00:25:49,419
writes into a memory location we're

540
00:25:49,419 --> 00:25:51,370
never code in a wave in that has been

541
00:25:51,370 --> 00:25:53,470
labeled zero writes into a memory

542
00:25:53,470 --> 00:25:55,419
location that memo irrigations get

543
00:25:55,419 --> 00:25:59,830
labeled as one okay then whenever code

544
00:25:59,830 --> 00:26:01,870
that has a label one writes on to

545
00:26:01,870 --> 00:26:04,179
another part of memory that has that is

546
00:26:04,179 --> 00:26:06,850
being labeled as being too okay so

547
00:26:06,850 --> 00:26:08,890
whenever code that has a label and

548
00:26:08,890 --> 00:26:10,330
writes something

549
00:26:10,330 --> 00:26:12,640
whatever that it writes is being labeled

550
00:26:12,640 --> 00:26:16,120
at n plus 1 in the end your memory will

551
00:26:16,120 --> 00:26:19,029
will have different labels okay and and

552
00:26:19,029 --> 00:26:23,049
then we just look at these as being the

553
00:26:23,049 --> 00:26:26,049
waves okay it's a it's a mathematical

554
00:26:26,049 --> 00:26:28,600
definition but it's also a shortcut

555
00:26:28,600 --> 00:26:32,529
because it it prevents us from having to

556
00:26:32,529 --> 00:26:34,510
actually semantically go through the

557
00:26:34,510 --> 00:26:37,899
code and see what each way it is okay

558
00:26:37,899 --> 00:26:41,080
and in the coin side does that answer

559
00:26:41,080 --> 00:26:47,440
your question any more questions okay

560
00:26:47,440 --> 00:26:48,970
with that I would like to thank Jose

561
00:26:48,970 --> 00:26:50,600
whose presentation

562
00:26:50,600 --> 00:26:54,369
[Applause]

