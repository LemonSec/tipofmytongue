1
00:00:00,000 --> 00:00:03,330
I know I did up next here we have the as

2
00:00:03,330 --> 00:00:05,660
mentioned in the keynote this morning a

3
00:00:05,660 --> 00:00:08,250
substitution talk

4
00:00:08,250 --> 00:00:11,190
we have Vlad and me Hal from BitDefender

5
00:00:11,190 --> 00:00:13,049
and they're going to present it's a file

6
00:00:13,049 --> 00:00:15,900
infector it's ransomware it's V Rock and

7
00:00:15,900 --> 00:00:20,029
I will hand things over to you gentlemen

8
00:00:26,390 --> 00:00:28,769
together with my colleague we will

9
00:00:28,769 --> 00:00:31,980
present today a new kind of model that

10
00:00:31,980 --> 00:00:37,550
will that combines finally factor and

11
00:00:37,550 --> 00:00:42,989
ransomware techniques so the modern

12
00:00:42,989 --> 00:00:52,850
nowadays are firstly we will we will

13
00:00:52,850 --> 00:00:55,680
overview some well-known modern

14
00:00:55,680 --> 00:00:58,739
techniques so afterwards we could we can

15
00:00:58,739 --> 00:01:01,020
understand how this can come together

16
00:01:01,020 --> 00:01:04,019
creating a new more complex moral

17
00:01:04,019 --> 00:01:07,950
structure and then we will we will see

18
00:01:07,950 --> 00:01:11,850
how one of these compounds materializes

19
00:01:11,850 --> 00:01:14,369
itself in the form of a few lakh which

20
00:01:14,369 --> 00:01:18,210
is the case study of our presentation in

21
00:01:18,210 --> 00:01:21,420
the second part we will will provide a

22
00:01:21,420 --> 00:01:25,890
more detailed insight of pillock by

23
00:01:25,890 --> 00:01:29,790
looking at its technical detail details

24
00:01:29,790 --> 00:01:35,000
and particularity and at the end we will

25
00:01:35,000 --> 00:01:38,670
overview its impact by looking at the

26
00:01:38,670 --> 00:01:41,159
spreading of the infection worldwide and

27
00:01:41,159 --> 00:01:46,049
will draw some conclusions ok so I was

28
00:01:46,049 --> 00:01:46,490
saying

29
00:01:46,490 --> 00:01:50,880
most modern or nowadays are combining

30
00:01:50,880 --> 00:01:56,119
the series of technologies in order to

31
00:01:56,119 --> 00:02:04,610
facilitate their their spreading and to

32
00:02:04,610 --> 00:02:07,799
make their infection more persistent

33
00:02:07,799 --> 00:02:10,878
thus enabling them to carry on with the

34
00:02:10,878 --> 00:02:12,959
modern payload

35
00:02:12,959 --> 00:02:17,310
so if you look here it successively

36
00:02:17,310 --> 00:02:23,760
combines the difficulty of data recovery

37
00:02:23,760 --> 00:02:25,890
and the ease of spreading of piling

38
00:02:25,890 --> 00:02:28,739
factor with the easy money making

39
00:02:28,739 --> 00:02:32,340
technique of all ransomware

40
00:02:32,340 --> 00:02:39,719
so for firstly we will we will get to

41
00:02:39,719 --> 00:02:41,939
have a look a brief look a short

42
00:02:41,939 --> 00:02:45,319
reminder of these two individual

43
00:02:45,319 --> 00:02:48,900
techniques that it has been built on

44
00:02:48,900 --> 00:02:53,159
which are Ransome words and final factor

45
00:02:53,159 --> 00:02:57,540
so ransomware basically what they do are

46
00:02:57,540 --> 00:03:01,319
is blocking or limited the user access

47
00:03:01,319 --> 00:03:04,709
to their accounts or files and demanding

48
00:03:04,709 --> 00:03:06,930
money for exchange for regaining access

49
00:03:06,930 --> 00:03:13,409
to those resources yeah they can they

50
00:03:13,409 --> 00:03:18,349
can be file lockers or screen lockers as

51
00:03:18,349 --> 00:03:20,699
we will see in the following example

52
00:03:20,699 --> 00:03:23,609
that seem to have been quite a source of

53
00:03:23,609 --> 00:03:27,900
inspiration for the lock so what we see

54
00:03:27,900 --> 00:03:30,419
here is a screen Locker called

55
00:03:30,419 --> 00:03:33,389
high school this interface here is

56
00:03:33,389 --> 00:03:35,609
blocking all the infected computer the

57
00:03:35,609 --> 00:03:37,590
entire infected computer screen and also

58
00:03:37,590 --> 00:03:41,720
capturing all the user input and it also

59
00:03:41,720 --> 00:03:48,509
displays threatening messages and this

60
00:03:48,509 --> 00:03:50,930
together with the screen locking is in

61
00:03:50,930 --> 00:03:55,859
trying to maximize the chance that the

62
00:03:55,859 --> 00:04:01,079
scared user will pay the ransom and here

63
00:04:01,079 --> 00:04:02,909
we have a file Locker a custom one

64
00:04:02,909 --> 00:04:06,120
similar to crypto wall well file lockers

65
00:04:06,120 --> 00:04:10,189
are able to do lots of almost

66
00:04:10,189 --> 00:04:13,049
unrecoverable damage leaving behind only

67
00:04:13,049 --> 00:04:17,279
encrypted files and as here a code that

68
00:04:17,279 --> 00:04:20,759
can't could be used to recover the files

69
00:04:20,759 --> 00:04:25,710
but only the ransom has been paid

70
00:04:25,710 --> 00:04:28,680
we can also see here that the modeler

71
00:04:28,680 --> 00:04:35,340
also pretty accurately explains the

72
00:04:35,340 --> 00:04:38,100
sheep shape with encryption encryption

73
00:04:38,100 --> 00:04:42,229
system that is used and once applied

74
00:04:42,229 --> 00:04:45,720
this actually leaves no chance of

75
00:04:45,720 --> 00:04:51,470
recovery but but paying the ransom and

76
00:04:51,470 --> 00:04:56,580
and here finally we have ransomware

77
00:04:56,580 --> 00:05:00,180
whose name stands for anti cybercrime

78
00:05:00,180 --> 00:05:02,789
Department of federal Internet Security

79
00:05:02,789 --> 00:05:04,560
Agency right who wouldn't fear that

80
00:05:04,560 --> 00:05:08,610
right and this one is combining both

81
00:05:08,610 --> 00:05:10,440
screen locking and file locking

82
00:05:10,440 --> 00:05:13,650
techniques the the encryption the

83
00:05:13,650 --> 00:05:15,449
encrypted files are actually password

84
00:05:15,449 --> 00:05:19,199
protected archives and the passwords are

85
00:05:19,199 --> 00:05:21,270
stored in the modern process memory a

86
00:05:21,270 --> 00:05:24,389
memory unaccessible though due to the

87
00:05:24,389 --> 00:05:29,099
screen lock you so if the if the

88
00:05:29,099 --> 00:05:30,960
computer is started is restarted

89
00:05:30,960 --> 00:05:32,729
everything is lost

90
00:05:32,729 --> 00:05:35,880
shamefully yeah and the second category

91
00:05:35,880 --> 00:05:39,930
is our finally factors which are among

92
00:05:39,930 --> 00:05:45,630
the most used the most to know the among

93
00:05:45,630 --> 00:05:48,599
them the well-known martyrs predicted

94
00:05:48,599 --> 00:05:52,440
techniques firstly because the infection

95
00:05:52,440 --> 00:05:56,610
is very contagious and hardly note card

96
00:05:56,610 --> 00:05:59,430
Lee noticeable bye-bye common users at

97
00:05:59,430 --> 00:06:04,289
at is as its hides inside legitimate and

98
00:06:04,289 --> 00:06:06,090
frequently used files and secondly

99
00:06:06,090 --> 00:06:10,229
because such infection persists not only

100
00:06:10,229 --> 00:06:13,590
until the ordinary user notices and nor

101
00:06:13,590 --> 00:06:18,780
until the security products come to

102
00:06:18,780 --> 00:06:21,419
detected but until they also come up

103
00:06:21,419 --> 00:06:23,729
with the disinfection solution for it

104
00:06:23,729 --> 00:06:25,889
and this process can be very

105
00:06:25,889 --> 00:06:27,720
time-consuming depending on the

106
00:06:27,720 --> 00:06:30,120
complexity of the Malheur and they tend

107
00:06:30,120 --> 00:06:33,990
to be pretty complex yeah so basically

108
00:06:33,990 --> 00:06:37,320
what a final factor does a final file

109
00:06:37,320 --> 00:06:39,740
affected by a file effector

110
00:06:39,740 --> 00:06:44,520
also contains an execute mother code

111
00:06:44,520 --> 00:06:48,000
mother payload for the infection while

112
00:06:48,000 --> 00:06:50,789
still maintaining the legitimate file

113
00:06:50,789 --> 00:06:54,930
functionality okay so what we have here

114
00:06:54,930 --> 00:06:59,060
is a simple final factor that we can see

115
00:06:59,060 --> 00:07:04,229
it has its code appended to a portable

116
00:07:04,229 --> 00:07:07,050
executable and file yeah it also

117
00:07:07,050 --> 00:07:10,289
hijacked the header so the entry point

118
00:07:10,289 --> 00:07:13,050
will point to the mother which will do

119
00:07:13,050 --> 00:07:14,789
his work and then pass on the execution

120
00:07:14,789 --> 00:07:19,110
to the clean file like nothing ever

121
00:07:19,110 --> 00:07:19,740
happened

122
00:07:19,740 --> 00:07:23,070
and here we have a sketch of a more

123
00:07:23,070 --> 00:07:27,330
complex final effect or savety with

124
00:07:27,330 --> 00:07:31,949
where the mother code and the clean code

125
00:07:31,949 --> 00:07:34,740
are intertwined and also packed and

126
00:07:34,740 --> 00:07:37,110
obfuscated although there are many many

127
00:07:37,110 --> 00:07:40,770
final factor that creates create this

128
00:07:40,770 --> 00:07:44,190
kind of infection mess let's call it

129
00:07:44,190 --> 00:07:46,530
that way we chose sanity because it's

130
00:07:46,530 --> 00:07:51,800
pretty close to what to what v-loc does

131
00:07:51,800 --> 00:07:56,940
so yeah good luck it's a hybrid my

132
00:07:56,940 --> 00:08:01,080
hunter kind of a creature yeah and it's

133
00:08:01,080 --> 00:08:03,469
using ransomware screen locking features

134
00:08:03,469 --> 00:08:06,419
to get money directly from its victims

135
00:08:06,419 --> 00:08:09,360
and using a well designed infection

136
00:08:09,360 --> 00:08:11,849
mechanism as we are about seeing the

137
00:08:11,849 --> 00:08:15,750
slides below so this is what it actually

138
00:08:15,750 --> 00:08:17,550
looks like on the outside

139
00:08:17,550 --> 00:08:24,719
yeah it's similar to to ice ball that we

140
00:08:24,719 --> 00:08:27,539
have previously met and because this

141
00:08:27,539 --> 00:08:30,840
kind of screen lockers are usually

142
00:08:30,840 --> 00:08:34,620
easily by possible by offline accessing

143
00:08:34,620 --> 00:08:38,849
yeah live CD well in case of in case of

144
00:08:38,849 --> 00:08:43,349
of ear lock this procedure lists to list

145
00:08:43,349 --> 00:08:45,750
the user into a second trap which

146
00:08:45,750 --> 00:08:48,930
consists of cleverly infected files and

147
00:08:48,930 --> 00:08:50,730
system changes

148
00:08:50,730 --> 00:08:53,670
that will be presented with more details

149
00:08:53,670 --> 00:08:57,680
by my colleague Vlad here who will take

150
00:08:57,680 --> 00:08:59,640
we'll take over from here

151
00:08:59,640 --> 00:09:03,779
what hi I will try to further provide a

152
00:09:03,779 --> 00:09:06,420
better insight into what actually mother

153
00:09:06,420 --> 00:09:10,670
does so we will talk about how it

154
00:09:10,670 --> 00:09:13,170
installs to infected new infected

155
00:09:13,170 --> 00:09:17,459
systems a few things about anti a

156
00:09:17,459 --> 00:09:19,920
analysis techniques and we all try to

157
00:09:19,920 --> 00:09:24,750
finally provide some statistics and draw

158
00:09:24,750 --> 00:09:29,700
some conclusions okay what we have here

159
00:09:29,700 --> 00:09:33,149
is a piece of code which actually switch

160
00:09:33,149 --> 00:09:36,720
between some hard-coded Flags inside

161
00:09:36,720 --> 00:09:41,130
different malware drops so we have five

162
00:09:41,130 --> 00:09:45,540
different kind of drops starting with a

163
00:09:45,540 --> 00:09:49,680
hard-coded 0 value which will talk which

164
00:09:49,680 --> 00:09:53,220
will try to install to execute model

165
00:09:53,220 --> 00:09:56,430
processes this kind of drop is actually

166
00:09:56,430 --> 00:09:59,640
executed at startup right after a user

167
00:09:59,640 --> 00:10:06,620
logs on a value one tells us that the

168
00:10:06,620 --> 00:10:09,450
new infected file is actually running

169
00:10:09,450 --> 00:10:13,970
for the first time and beside the other

170
00:10:13,970 --> 00:10:20,149
actions taken the model has to to clean

171
00:10:20,149 --> 00:10:25,079
the clean file and drop and executed so

172
00:10:25,079 --> 00:10:29,360
a user will see actually it's clean file

173
00:10:29,360 --> 00:10:34,010
not knowing that a model payload just

174
00:10:34,010 --> 00:10:38,190
just run from that place into the entire

175
00:10:38,190 --> 00:10:42,450
system in fact in yet ok a value of 2 is

176
00:10:42,450 --> 00:10:46,470
hard-coded for drop files which once

177
00:10:46,470 --> 00:10:49,079
it's acute it will try to brute-force

178
00:10:49,079 --> 00:10:51,180
user account password as we will see

179
00:10:51,180 --> 00:10:58,500
further 3 there is an environment

180
00:10:58,500 --> 00:11:01,280
routing method to

181
00:11:01,280 --> 00:11:05,340
get access to all all important things

182
00:11:05,340 --> 00:11:09,270
so they mother creates all kind of

183
00:11:09,270 --> 00:11:12,020
threads communicating each other and the

184
00:11:12,020 --> 00:11:16,070
passing data from one process to another

185
00:11:16,070 --> 00:11:20,460
finally there is a service running on

186
00:11:20,460 --> 00:11:23,940
infected computers so mother actually

187
00:11:23,940 --> 00:11:30,510
has has higher privileges and doing all

188
00:11:30,510 --> 00:11:36,680
kind of things we have here described

189
00:11:36,680 --> 00:11:40,340
the hard-coded value of one shown before

190
00:11:40,340 --> 00:11:46,230
so there is a compare there or switching

191
00:11:46,230 --> 00:11:50,280
for afresh executed malware on a clean

192
00:11:50,280 --> 00:11:53,730
system and the we have some hard-coded

193
00:11:53,730 --> 00:11:59,030
values right after that which try to get

194
00:11:59,030 --> 00:12:03,690
to the clean file inside the mother body

195
00:12:03,690 --> 00:12:08,160
so we have here all the data we need to

196
00:12:08,160 --> 00:12:12,900
recover the actual claim file we can see

197
00:12:12,900 --> 00:12:16,890
here the clean foil embodied inside the

198
00:12:16,890 --> 00:12:22,410
model just in the end where all the

199
00:12:22,410 --> 00:12:29,250
decryption phases or were over so we

200
00:12:29,250 --> 00:12:31,740
have 8 byte header

201
00:12:31,740 --> 00:12:33,660
describing the entire clean file

202
00:12:33,660 --> 00:12:36,720
describing its name name length where

203
00:12:36,720 --> 00:12:40,290
actually bought for start and how what

204
00:12:40,290 --> 00:12:48,079
is it sighs okay a strange use of name

205
00:12:50,660 --> 00:12:55,770
as it as I said before if a drop has an

206
00:12:55,770 --> 00:12:59,010
hard-coded value of 2 and is wrong then

207
00:12:59,010 --> 00:13:01,890
the model will try to brute-force the

208
00:13:01,890 --> 00:13:03,930
user password account this is a

209
00:13:03,930 --> 00:13:06,330
screenshot from our system or infected

210
00:13:06,330 --> 00:13:10,020
with the lock and the random use the

211
00:13:10,020 --> 00:13:10,870
name is a

212
00:13:10,870 --> 00:13:14,160
the username created by the malware

213
00:13:14,160 --> 00:13:16,270
cracking the administrator password

214
00:13:16,270 --> 00:13:20,500
which actually is a mini strata okay but

215
00:13:20,500 --> 00:13:25,110
any of this look familiar to any of you

216
00:13:25,110 --> 00:13:31,570
well if if you're using that kind of

217
00:13:31,570 --> 00:13:36,970
strong password then I get you have to

218
00:13:36,970 --> 00:13:42,640
reconsider them okay so this is how a

219
00:13:42,640 --> 00:13:45,820
clean file looks like the green area

220
00:13:45,820 --> 00:13:48,850
inside the mother's body we have the

221
00:13:48,850 --> 00:13:52,930
blue areas which are some kind of

222
00:13:52,930 --> 00:13:56,260
decoration code obfuscated and trying to

223
00:13:56,260 --> 00:13:59,770
get rid of most common analysis

224
00:13:59,770 --> 00:14:03,010
techniques and the core engine of the

225
00:14:03,010 --> 00:14:07,480
malware the red area is a sin in the

226
00:14:07,480 --> 00:14:09,370
picture in the middle side-by-side with

227
00:14:09,370 --> 00:14:14,140
the plain fire all of this is packed

228
00:14:14,140 --> 00:14:17,860
with two different algorithms or not

229
00:14:17,860 --> 00:14:19,890
revealing anything in the end we're

230
00:14:19,890 --> 00:14:24,610
currently looking at some new packed

231
00:14:24,610 --> 00:14:32,520
file which might be doing anything okay

232
00:14:32,520 --> 00:14:35,860
so a few things about NT analysis

233
00:14:35,860 --> 00:14:43,170
techniques Mollet has both anty anty

234
00:14:43,170 --> 00:14:46,779
analysis of techniques for static

235
00:14:46,779 --> 00:14:49,660
analysis and also for dynamic analysis

236
00:14:49,660 --> 00:14:53,020
static analysis we will support the

237
00:14:53,020 --> 00:14:56,250
polymorphic engine which builds up the

238
00:14:56,250 --> 00:14:59,890
decoration code or here it tries to get

239
00:14:59,890 --> 00:15:02,260
rid of a possible debugger there are two

240
00:15:02,260 --> 00:15:06,100
there are two metal methods which can be

241
00:15:06,100 --> 00:15:10,589
involved in this technique wearing a

242
00:15:10,589 --> 00:15:14,920
flag will with each debugger present but

243
00:15:14,920 --> 00:15:19,810
Marvel actually does this the hard way

244
00:15:19,810 --> 00:15:24,270
it actually try to see if

245
00:15:24,270 --> 00:15:27,240
these being debugged located in the

246
00:15:27,240 --> 00:15:30,810
process environment block is set at 1

247
00:15:30,810 --> 00:15:34,920
this is we see this top picture the

248
00:15:34,920 --> 00:15:40,350
bottom one shows us a different branch

249
00:15:40,350 --> 00:15:43,950
which model takes to execute if the

250
00:15:43,950 --> 00:15:46,740
burger is present and it actually calls

251
00:15:46,740 --> 00:15:48,680
sleep from time to time doing nothing

252
00:15:48,680 --> 00:15:56,660
special anti emulation techniques a

253
00:15:56,660 --> 00:16:00,960
well-known method known to disable

254
00:16:00,960 --> 00:16:06,120
emulation when an unknown system call is

255
00:16:06,120 --> 00:16:10,260
encountered so in this generation there

256
00:16:10,260 --> 00:16:13,170
are actually many persons below this is

257
00:16:13,170 --> 00:16:16,890
the first generation contains a sequence

258
00:16:16,890 --> 00:16:22,760
of call compare conditional jump

259
00:16:23,390 --> 00:16:27,690
instructions followed by a lot of random

260
00:16:27,690 --> 00:16:38,450
system calls so if we're going to to get

261
00:16:38,450 --> 00:16:42,690
to know and pass by this ante analysis

262
00:16:42,690 --> 00:16:44,640
technique we should have an emulator

263
00:16:44,640 --> 00:16:47,490
which would emulate all courts and calls

264
00:16:47,490 --> 00:16:51,270
which would be a hard task to achieve

265
00:16:51,270 --> 00:16:54,330
and on the other hand we could have

266
00:16:54,330 --> 00:16:59,100
emulators which could enter at some

267
00:16:59,100 --> 00:17:03,450
point into the emulation so we could

268
00:17:03,450 --> 00:17:05,250
pass the same but we need some minimal

269
00:17:05,250 --> 00:17:08,609
initialization there ok another

270
00:17:08,609 --> 00:17:12,740
interesting thing not so common among

271
00:17:12,740 --> 00:17:21,470
among filing factors is decrypting

272
00:17:21,470 --> 00:17:24,450
executing green encrypting technique

273
00:17:24,450 --> 00:17:27,569
this looks like very similar to a linear

274
00:17:27,569 --> 00:17:30,909
linked list with sub lists sub lists are

275
00:17:30,909 --> 00:17:34,669
function calls actually so there is

276
00:17:34,669 --> 00:17:38,529
always a hash checking on on the

277
00:17:38,529 --> 00:17:45,080
encrypted code if the hash match then it

278
00:17:45,080 --> 00:17:49,429
is a decrypted executing and executed

279
00:17:49,429 --> 00:17:53,330
only in the end re-encrypted back so if

280
00:17:53,330 --> 00:17:55,610
we're going to make some memory dumps

281
00:17:55,610 --> 00:17:58,760
then we'll actually see at each memory

282
00:17:58,760 --> 00:18:01,039
Tom only the piece of code executed by

283
00:18:01,039 --> 00:18:05,470
the model at that time this picture

284
00:18:05,470 --> 00:18:08,330
provide more details about the previous

285
00:18:08,330 --> 00:18:12,470
slide we have at the top of the right

286
00:18:12,470 --> 00:18:17,450
arrow a compare with the hash on the

287
00:18:17,450 --> 00:18:20,570
encrypted code this will match only when

288
00:18:20,570 --> 00:18:24,559
the piece of code is first executed

289
00:18:24,559 --> 00:18:26,809
because at the bottom of the right arrow

290
00:18:26,809 --> 00:18:30,880
right after the the decrypted code is

291
00:18:30,880 --> 00:18:35,149
executed the hash is is changed and

292
00:18:35,149 --> 00:18:41,029
patched back to the top of code and it

293
00:18:41,029 --> 00:18:44,389
will actually want work a second time at

294
00:18:44,389 --> 00:18:47,510
the bottom of the first arrow there is

295
00:18:47,510 --> 00:18:50,690
the decryption procedure which actually

296
00:18:50,690 --> 00:18:53,210
gets the code at the right and the

297
00:18:53,210 --> 00:19:00,340
yellow square there are some basic

298
00:19:00,340 --> 00:19:05,809
worship techniques used to build the

299
00:19:05,809 --> 00:19:08,539
decoration code as we seen in our

300
00:19:08,539 --> 00:19:11,929
previous slide the blue areas are built

301
00:19:11,929 --> 00:19:15,519
with the kind of code at the left here

302
00:19:15,519 --> 00:19:20,110
which builds up a sequence of

303
00:19:20,110 --> 00:19:23,990
instructions on the right what we what I

304
00:19:23,990 --> 00:19:28,760
said about call compare conditional jump

305
00:19:28,760 --> 00:19:33,100
and then a lot of random system calls

306
00:19:34,809 --> 00:19:42,230
okay we have here five different modern

307
00:19:42,230 --> 00:19:44,950
versions

308
00:19:46,520 --> 00:19:49,950
the pieces of code doing the hash

309
00:19:49,950 --> 00:19:54,240
checking of the next pieces of code to

310
00:19:54,240 --> 00:19:55,679
be executed this is some kind of

311
00:19:55,679 --> 00:19:57,929
template used by Muller

312
00:19:57,929 --> 00:20:02,280
so maybe this can be used to detect the

313
00:20:02,280 --> 00:20:06,690
mothers families this provides a better

314
00:20:06,690 --> 00:20:10,590
insight in what what is similar and what

315
00:20:10,590 --> 00:20:13,429
differs from version to version

316
00:20:13,429 --> 00:20:17,309
actually there are dashing with junk

317
00:20:17,309 --> 00:20:20,700
code inserted obfuscated but which can

318
00:20:20,700 --> 00:20:24,070
be easily eliminated there are also

319
00:20:24,070 --> 00:20:25,490
[Music]

320
00:20:25,490 --> 00:20:29,309
hard-coded Flags hard coded addresses

321
00:20:29,309 --> 00:20:33,929
hard coded references so in order to get

322
00:20:33,929 --> 00:20:38,070
to the body of the clean file inside the

323
00:20:38,070 --> 00:20:42,120
model we have to follow precisely the

324
00:20:42,120 --> 00:20:44,670
sequence of instructions where we can

325
00:20:44,670 --> 00:20:47,640
find those hard-coded values and from

326
00:20:47,640 --> 00:20:51,090
infection to infection this actually

327
00:20:51,090 --> 00:21:02,270
differs a lot in order to trick users in

328
00:21:02,270 --> 00:21:07,260
deliver their own files infected

329
00:21:07,260 --> 00:21:14,730
actually malware tries to keep the icon

330
00:21:14,730 --> 00:21:17,850
of the infected file as similar as

331
00:21:17,850 --> 00:21:21,750
possible with the cleaning clean file so

332
00:21:21,750 --> 00:21:26,280
if we have an executable file the icon

333
00:21:26,280 --> 00:21:28,650
resources of the external file will get

334
00:21:28,650 --> 00:21:32,309
to the final infected file if we have a

335
00:21:32,309 --> 00:21:34,530
usual document files or PDFs

336
00:21:34,530 --> 00:21:37,470
the model will try to grab the icon

337
00:21:37,470 --> 00:21:40,770
associated with the application from

338
00:21:40,770 --> 00:21:44,850
registry and inserted after in the final

339
00:21:44,850 --> 00:21:48,360
executable file and if we have images

340
00:21:48,360 --> 00:21:52,070
just like in the image on screen then

341
00:21:52,070 --> 00:21:57,230
the local try to to change

342
00:21:57,230 --> 00:22:00,770
that image to research making it an icon

343
00:22:00,770 --> 00:22:04,520
and finally we still have file very

344
00:22:04,520 --> 00:22:07,760
similar overall with the initial file

345
00:22:07,760 --> 00:22:10,400
what is different here is the extension

346
00:22:10,400 --> 00:22:16,270
is the extension which and in exit and

347
00:22:16,270 --> 00:22:19,400
disabling the showing of Accession for

348
00:22:19,400 --> 00:22:21,350
long filenames this is the pictures were

349
00:22:21,350 --> 00:22:25,669
taken from malware or infection

350
00:22:25,669 --> 00:22:31,730
reproduction in our systems we have here

351
00:22:31,730 --> 00:22:36,020
two different develop family generation

352
00:22:36,020 --> 00:22:39,500
one and third first and third

353
00:22:39,500 --> 00:22:41,570
generations the full generation is

354
00:22:41,570 --> 00:22:43,429
highlighted in blue and the third

355
00:22:43,429 --> 00:22:47,470
generation is highlighted in red or

356
00:22:47,500 --> 00:22:51,140
x-axis we have a timeline between middle

357
00:22:51,140 --> 00:22:53,809
of March and the beginning of this month

358
00:22:53,809 --> 00:22:58,870
and axis there are some persons persons

359
00:22:58,870 --> 00:23:02,809
related to the total number of infected

360
00:23:02,809 --> 00:23:06,169
systems so we can see that the first

361
00:23:06,169 --> 00:23:12,429
generation is more common another

362
00:23:12,429 --> 00:23:15,980
statistics about our infected systems

363
00:23:15,980 --> 00:23:18,770
around the globe both for Virginia 1st

364
00:23:18,770 --> 00:23:23,270
and 3rd generation we can see that third

365
00:23:23,270 --> 00:23:27,380
generation is is more common in Canada

366
00:23:27,380 --> 00:23:33,040
and fourth version more common in China

367
00:23:33,040 --> 00:23:37,090
ok so we have here a correlation between

368
00:23:37,090 --> 00:23:41,000
countries and actual number of infected

369
00:23:41,000 --> 00:23:43,880
files different from the infected

370
00:23:43,880 --> 00:23:48,100
systems in the previous slides the most

371
00:23:48,100 --> 00:23:53,929
infected piles until now are found in

372
00:23:53,929 --> 00:23:58,610
Canada for all four generations of model

373
00:23:58,610 --> 00:24:02,120
actually there are eight versions of the

374
00:24:02,120 --> 00:24:04,309
malware we have here presented olive-oil

375
00:24:04,309 --> 00:24:07,520
the others three we're still analyzing

376
00:24:07,520 --> 00:24:09,710
them and we hope soon to

377
00:24:09,710 --> 00:24:13,700
we'll get an update for detection and

378
00:24:13,700 --> 00:24:19,700
clean okay we face new generations of

379
00:24:19,700 --> 00:24:24,050
malware so they combine all kind of

380
00:24:24,050 --> 00:24:27,080
technologies compiler technologies and

381
00:24:27,080 --> 00:24:30,460
the same time they try to impaired

382
00:24:30,460 --> 00:24:37,490
emulators to not to not get the analyst

383
00:24:37,490 --> 00:24:41,740
analyst to what they're up to

384
00:24:41,740 --> 00:24:47,200
so I think the block is among first

385
00:24:47,200 --> 00:24:50,600
generations of that kind of model which

386
00:24:50,600 --> 00:24:54,080
combines file vector with plan small

387
00:24:54,080 --> 00:24:58,550
technologies or making money by Lance

388
00:24:58,550 --> 00:25:00,680
Moore technologies and the same time

389
00:25:00,680 --> 00:25:04,400
making a hard life for analyst with the

390
00:25:04,400 --> 00:25:09,340
poly traction technologies okay we

391
00:25:09,340 --> 00:25:13,000
expect somehow in near future similar

392
00:25:13,000 --> 00:25:19,760
kind of threats thank you

393
00:25:19,760 --> 00:25:26,330
[Applause]

394
00:25:26,330 --> 00:25:29,790
yeah we do have we have a few minutes

395
00:25:29,790 --> 00:25:32,250
for questions I see someone right there

396
00:25:32,250 --> 00:25:34,940
thank you very much

397
00:25:34,940 --> 00:25:37,770
you've shown several screenshots from

398
00:25:37,770 --> 00:25:39,210
Windows XP

399
00:25:39,210 --> 00:25:41,400
have you checked also the behavior of

400
00:25:41,400 --> 00:25:44,310
this dismal err on new versions of

401
00:25:44,310 --> 00:25:47,540
Windows Thanks

402
00:25:47,540 --> 00:25:50,520
behavior of marvel or among different

403
00:25:50,520 --> 00:25:59,910
versions I mean new versions of Windows

404
00:25:59,910 --> 00:26:04,260
for example Windows 8 well no it does

405
00:26:04,260 --> 00:26:06,330
not behave the same on all Windows

406
00:26:06,330 --> 00:26:13,020
version I guess it gets to infect

407
00:26:13,020 --> 00:26:16,680
Windows 8 versions it run with

408
00:26:16,680 --> 00:26:19,590
administrative privileges I don't know

409
00:26:19,590 --> 00:26:24,900
if it can if it gets to crack user

410
00:26:24,900 --> 00:26:29,240
account passwords but it runs

411
00:26:29,240 --> 00:26:34,490
successfully or not least to Windows 7

412
00:26:34,490 --> 00:26:41,190
yes yes hi

413
00:26:41,190 --> 00:26:43,680
so when a ver lock infected file is run

414
00:26:43,680 --> 00:26:46,440
it will drop the original file decrypt

415
00:26:46,440 --> 00:26:48,180
it from within itself and at the same

416
00:26:48,180 --> 00:26:50,430
time it recreates all the files

417
00:26:50,430 --> 00:26:52,200
according to the list of file extensions

418
00:26:52,200 --> 00:26:54,420
and displays the ransom message so

419
00:26:54,420 --> 00:26:55,770
what's the point in that doesn't really

420
00:26:55,770 --> 00:26:58,200
make sense though yeah we actually had a

421
00:26:58,200 --> 00:27:02,150
slide with that kind of stuff and we

422
00:27:02,150 --> 00:27:11,250
removed it because it actually is it

423
00:27:11,250 --> 00:27:14,310
tries too hard to make a hard life for

424
00:27:14,310 --> 00:27:22,530
both user users and analysts so so if we

425
00:27:22,530 --> 00:27:26,040
have a lot of infected files which are

426
00:27:26,040 --> 00:27:28,920
not easily to recover then we actually

427
00:27:28,920 --> 00:27:33,110
were looking at file locals technology

428
00:27:33,110 --> 00:27:37,440
combining that with screen locking user

429
00:27:37,440 --> 00:27:41,519
is getting more discouraged you know

430
00:27:41,519 --> 00:27:47,450
trying to figure out rescue versions so

431
00:27:47,450 --> 00:27:55,159
the only method in to achieve the clean

432
00:27:55,159 --> 00:27:58,620
method we're getting good to some files

433
00:27:58,620 --> 00:28:06,029
by using some rescue CDs and getting

434
00:28:06,029 --> 00:28:11,100
some files or if it is it is not a task

435
00:28:11,100 --> 00:28:17,490
done by some someone with knowledge

436
00:28:17,490 --> 00:28:19,440
about this thing there and it might

437
00:28:19,440 --> 00:28:24,330
propagate the infection further probably

438
00:28:24,330 --> 00:28:25,649
have time for one more question if

439
00:28:25,649 --> 00:28:27,690
there's any other questions there's one

440
00:28:27,690 --> 00:28:29,340
at the far back if we can get a mic back

441
00:28:29,340 --> 00:28:42,059
there hello with any CNC no it has a

442
00:28:42,059 --> 00:28:48,389
minimum network traffic but no not not

443
00:28:48,389 --> 00:28:53,460
that kind of what botnet does great I

444
00:28:53,460 --> 00:28:54,750
think that's what all the time we have

445
00:28:54,750 --> 00:28:57,889
things to fly my helper presentation

446
00:28:57,889 --> 00:29:01,440
just a couple minutes time to transition

447
00:29:01,440 --> 00:29:03,179
routes if you'd like to go over to the

448
00:29:03,179 --> 00:29:05,960
Red Room

