1
00:00:05,660 --> 00:00:08,490
alrighty so the last talk of the session

2
00:00:08,490 --> 00:00:12,660
is by John Young park and it promises to

3
00:00:12,660 --> 00:00:14,700
take us or part of it promises to take

4
00:00:14,700 --> 00:00:16,560
us beyond our senses so I love the title

5
00:00:16,560 --> 00:00:18,000
I'm interested to see how that works

6
00:00:18,000 --> 00:00:22,439
please thank you thank you very much hi

7
00:00:22,439 --> 00:00:26,060
everybody I am very happy to be here

8
00:00:26,060 --> 00:00:29,210
especially it's my first time in prop

9
00:00:29,210 --> 00:00:34,290
beautiful city and delicious beers the

10
00:00:34,290 --> 00:00:37,260
title of this presentation is pale devil

11
00:00:37,260 --> 00:00:42,140
beyond your senses with tax visualizer

12
00:00:42,559 --> 00:00:45,420
let me introduce myself quickly I'm

13
00:00:45,420 --> 00:00:48,629
joonyoung / a security researcher of

14
00:00:48,629 --> 00:00:51,899
unnav in south korea the main focus of

15
00:00:51,899 --> 00:00:55,829
my research is automated male analysis

16
00:00:55,829 --> 00:00:58,620
system in listen ears I enjoy liver sing

17
00:00:58,620 --> 00:01:04,619
and visualizing Android marea so the

18
00:01:04,619 --> 00:01:07,439
agenda of today as follows I will start

19
00:01:07,439 --> 00:01:09,600
the presentation with motivations and

20
00:01:09,600 --> 00:01:12,990
talk about apple life cycle n a life

21
00:01:12,990 --> 00:01:16,350
cycle cycle graph then I will introduce

22
00:01:16,350 --> 00:01:19,409
tab you'll also known as the expedia

23
00:01:19,409 --> 00:01:22,020
lighter many about each construction and

24
00:01:22,020 --> 00:01:25,590
how will show how to realize on a life

25
00:01:25,590 --> 00:01:29,189
cycle graph next we will have a general

26
00:01:29,189 --> 00:01:34,530
idea of live cycling next in case

27
00:01:34,530 --> 00:01:38,100
studies I will walk through five legal

28
00:01:38,100 --> 00:01:41,369
moral samples including downloader and

29
00:01:41,369 --> 00:01:45,360
banking Trojan l80 information stiller

30
00:01:45,360 --> 00:01:48,420
and also the packaging Maria finally I

31
00:01:48,420 --> 00:01:49,920
will conclude with some interesting

32
00:01:49,920 --> 00:01:59,340
points given the leafy growth of Android

33
00:01:59,340 --> 00:02:00,960
more well the number of vandalism

34
00:02:00,960 --> 00:02:03,930
Orioles seen every day has over Helen

35
00:02:03,930 --> 00:02:06,560
domain power available to analyze

36
00:02:06,560 --> 00:02:08,970
classified them the most challenging

37
00:02:08,970 --> 00:02:14,280
task is pig out small unusual patterns

38
00:02:14,280 --> 00:02:18,420
from giant piles of binary codes but the

39
00:02:18,420 --> 00:02:21,300
daily Android morale responses are up to

40
00:02:21,300 --> 00:02:24,870
be repetitive and tedious hunting for a

41
00:02:24,870 --> 00:02:28,170
few suspicious code blocks as those

42
00:02:28,170 --> 00:02:32,510
angles we can see the wood for the trees

43
00:02:32,510 --> 00:02:35,970
rather than investigating a few

44
00:02:35,970 --> 00:02:38,580
suspicious code blocks to see the loot

45
00:02:38,580 --> 00:02:42,120
fortress is to figure out the app life

46
00:02:42,120 --> 00:02:48,720
cycle because every Android F has

47
00:02:48,720 --> 00:02:51,090
essential building blocks known as add

48
00:02:51,090 --> 00:02:53,880
component each component subs are

49
00:02:53,880 --> 00:02:57,420
distinct poppers and has a distinct life

50
00:02:57,420 --> 00:03:01,380
cycle that defines how that component is

51
00:03:01,380 --> 00:03:05,760
create created and destroyed some

52
00:03:05,760 --> 00:03:07,980
interact each other some depend on each

53
00:03:07,980 --> 00:03:11,610
other these relationships between the

54
00:03:11,610 --> 00:03:14,640
add component constructor lifecycle of

55
00:03:14,640 --> 00:03:22,580
app Android & of Android app and the app

56
00:03:22,580 --> 00:03:29,600
lifecycle is the big picture I think but

57
00:03:29,600 --> 00:03:32,910
in order to figure out the app like

58
00:03:32,910 --> 00:03:35,670
cycle better we need to build the

59
00:03:35,670 --> 00:03:38,370
automated analysis system that can

60
00:03:38,370 --> 00:03:41,510
assist our intelligence in addition

61
00:03:41,510 --> 00:03:43,950
visualization in the age of automative

62
00:03:43,950 --> 00:03:46,470
Murray analysis can heighten the senses

63
00:03:46,470 --> 00:03:49,170
of our intelligence researchers as we

64
00:03:49,170 --> 00:03:52,650
know a life cycle can be visualized by

65
00:03:52,650 --> 00:03:55,170
various wellin graph algorithm the

66
00:03:55,170 --> 00:03:57,810
visualization injectibles is one of most

67
00:03:57,810 --> 00:04:03,290
effective ways to identify Maria so

68
00:04:03,290 --> 00:04:07,860
prove Mike conserve mobile app life

69
00:04:07,860 --> 00:04:12,470
cycle and the graph visualization of it

70
00:04:12,739 --> 00:04:16,290
in March last year I began to write some

71
00:04:16,290 --> 00:04:19,920
small scripts in Python and JavaScript

72
00:04:19,920 --> 00:04:22,740
as my pal OH matured i named the devil

73
00:04:22,740 --> 00:04:25,440
as no net also known as the ex

74
00:04:25,440 --> 00:04:28,680
visualizer and nadir the same year devil

75
00:04:28,680 --> 00:04:33,260
was made available to my co-workers as

76
00:04:33,260 --> 00:04:36,060
you can see devil has a simple

77
00:04:36,060 --> 00:04:38,250
client-server architecture the reply is

78
00:04:38,250 --> 00:04:41,880
learning on the wsgi server configured

79
00:04:41,880 --> 00:04:46,620
with flask a user can submit APK file to

80
00:04:46,620 --> 00:04:48,300
the server and then the server sends

81
00:04:48,300 --> 00:04:51,480
Jason responses that contains the intro

82
00:04:51,480 --> 00:04:53,910
objects relationships generated from

83
00:04:53,910 --> 00:04:57,540
text file by static analysis on the

84
00:04:57,540 --> 00:05:00,420
client side Debu jas lenders the app

85
00:05:00,420 --> 00:05:04,260
life site graph using the first directed

86
00:05:04,260 --> 00:05:15,990
layer algorithm of d3.js as mentioned

87
00:05:15,990 --> 00:05:19,050
the relationship between a component of

88
00:05:19,050 --> 00:05:21,960
which there are four components for

89
00:05:21,960 --> 00:05:24,690
different types of ab component you know

90
00:05:24,690 --> 00:05:28,770
at the basis of a life cycle but the

91
00:05:28,770 --> 00:05:31,560
full component alone are not enough to

92
00:05:31,560 --> 00:05:35,160
reveal the behaviors of Android app take

93
00:05:35,160 --> 00:05:38,100
an initial high level view in in the

94
00:05:38,100 --> 00:05:42,150
best case so devil uses uses the app

95
00:05:42,150 --> 00:05:44,850
component only as the seed of the graph

96
00:05:44,850 --> 00:05:47,220
and then generate the relationship

97
00:05:47,220 --> 00:05:49,080
between the components and other

98
00:05:49,080 --> 00:05:52,970
meaningful objects such as intent

99
00:05:52,970 --> 00:05:57,270
permission thread and the more however

100
00:05:57,270 --> 00:06:00,570
it is not easy up to discuss low level

101
00:06:00,570 --> 00:06:03,270
technical details all at once to make

102
00:06:03,270 --> 00:06:06,290
our life simpler I will take a simple

103
00:06:06,290 --> 00:06:08,970
fictitious Morel sample and walk through

104
00:06:08,970 --> 00:06:12,690
the realization of app lifecycle graph

105
00:06:12,690 --> 00:06:18,020
step by step and people I will show the

106
00:06:18,020 --> 00:06:24,140
life learning devil I've suburb

107
00:06:26,169 --> 00:06:31,740
this is Devil's screen devil has

108
00:06:31,740 --> 00:06:34,840
actually so many functions but today I

109
00:06:34,840 --> 00:06:41,490
will show graph visualization mainly but

110
00:06:41,490 --> 00:06:46,960
well this one's so many buttons has many

111
00:06:46,960 --> 00:06:55,900
functions this is the graph of the our

112
00:06:55,900 --> 00:06:59,289
fictitious Maria and retest PN still p n

113
00:06:59,289 --> 00:07:01,900
stands for phone number these samples

114
00:07:01,900 --> 00:07:04,990
gives imei and phone number and send

115
00:07:04,990 --> 00:07:07,770
stolen data to specific email addresses

116
00:07:07,770 --> 00:07:11,560
ok let's start with adding our first

117
00:07:11,560 --> 00:07:16,020
note to empty graph of pn stila

118
00:07:16,949 --> 00:07:19,900
initially kept life cycle graph has only

119
00:07:19,900 --> 00:07:22,449
one f jef not EP entry point you know as

120
00:07:22,449 --> 00:07:25,719
will be seen adel EP note plays a more

121
00:07:25,719 --> 00:07:28,509
important note than any others so it has

122
00:07:28,509 --> 00:07:31,779
quite a large ladies and depicted in

123
00:07:31,779 --> 00:07:37,240
court next the intentional die added to

124
00:07:37,240 --> 00:07:38,949
the graph the intent and related

125
00:07:38,949 --> 00:07:41,169
information can be applied by a two

126
00:07:41,169 --> 00:07:43,629
techniques one is leading from under the

127
00:07:43,629 --> 00:07:47,520
manifest file and the other is analyzing

128
00:07:47,520 --> 00:07:51,520
data byte code objects file dev will

129
00:07:51,520 --> 00:07:53,740
emulate stultified code with the core

130
00:07:53,740 --> 00:07:58,539
being traced the life of objects see the

131
00:07:58,539 --> 00:08:02,620
graph pn steelo has main and launcher

132
00:08:02,620 --> 00:08:05,110
intent filters the main tent note

133
00:08:05,110 --> 00:08:07,120
indicates that this is main entry point

134
00:08:07,120 --> 00:08:09,819
in does not expect any intent data and

135
00:08:09,819 --> 00:08:12,999
launch our intent note indicates these

136
00:08:12,999 --> 00:08:15,370
activities icon should be placed in the

137
00:08:15,370 --> 00:08:19,360
loan system f launcher accordingly the

138
00:08:19,360 --> 00:08:23,110
main and launcher intent on old have the

139
00:08:23,110 --> 00:08:26,710
same color as EP node twitch domain node

140
00:08:26,710 --> 00:08:34,419
is connected next permission nodes are

141
00:08:34,419 --> 00:08:36,640
added to the graph or the permissions

142
00:08:36,640 --> 00:08:39,669
under the epic wires must be declared

143
00:08:39,669 --> 00:08:42,549
and under the manifest file but the

144
00:08:42,549 --> 00:08:45,970
manifest file could declare just a list

145
00:08:45,970 --> 00:08:48,700
of the quiet permission so devil tracks

146
00:08:48,700 --> 00:08:51,250
down all the details of those Commission

147
00:08:51,250 --> 00:08:53,770
you see geez by estetica analysis and

148
00:08:53,770 --> 00:08:57,460
type of propagation algorithm see the

149
00:08:57,460 --> 00:09:01,720
graph p.m. still has internet and leave

150
00:09:01,720 --> 00:09:08,500
your phone state permissions next a

151
00:09:08,500 --> 00:09:10,570
component know that I added to the graph

152
00:09:10,570 --> 00:09:13,630
before the Android system can start a

153
00:09:13,630 --> 00:09:16,090
web component the system also know that

154
00:09:16,090 --> 00:09:19,390
the component exists by leading under

155
00:09:19,390 --> 00:09:21,610
the manifest file however it is not

156
00:09:21,610 --> 00:09:24,070
enough food enough defender manifest

157
00:09:24,070 --> 00:09:26,860
file because singled x files are so me

158
00:09:26,860 --> 00:09:31,210
too submitted as moral samples every day

159
00:09:31,210 --> 00:09:35,080
so devil extracts add component classes

160
00:09:35,080 --> 00:09:37,990
by passing decks header this is done by

161
00:09:37,990 --> 00:09:41,970
simply by inspecting whether a class

162
00:09:41,970 --> 00:09:44,550
extends or implement

163
00:09:44,550 --> 00:09:47,110
android.app.activity class under the

164
00:09:47,110 --> 00:09:49,930
episode is class under the content

165
00:09:49,930 --> 00:09:52,030
content provider class Android content

166
00:09:52,030 --> 00:09:56,320
broadcast receiver class and like cedar

167
00:09:56,320 --> 00:10:01,020
grab PN still has one app component name

168
00:10:01,020 --> 00:10:04,630
main activity class and main activity

169
00:10:04,630 --> 00:10:08,110
class has main and launcher intent

170
00:10:08,110 --> 00:10:11,440
filters and acquires lead phone state

171
00:10:11,440 --> 00:10:14,070
permission

172
00:10:19,200 --> 00:10:23,730
sorry in android you shouldn'ta plop us

173
00:10:23,730 --> 00:10:26,430
wrath if you have operations to perform

174
00:10:26,430 --> 00:10:29,550
not instantaneous you'd make sure you

175
00:10:29,550 --> 00:10:33,090
date they are done in separate thread

176
00:10:33,090 --> 00:10:37,260
this applies to Android more rare as

177
00:10:37,260 --> 00:10:40,080
well this design patterns so vital that

178
00:10:40,080 --> 00:10:43,140
the long-running behaviors of Android

179
00:10:43,140 --> 00:10:45,570
marea must be implemented in Sepphoris

180
00:10:45,570 --> 00:10:48,900
threat hence none other components nodes

181
00:10:48,900 --> 00:10:52,380
are added to the graph devil defines lot

182
00:10:52,380 --> 00:10:54,480
of a component class as a class

183
00:10:54,480 --> 00:10:57,570
extending or implementing jabbering

184
00:10:57,570 --> 00:11:02,400
sweat java rang na noble class android

185
00:11:02,400 --> 00:11:07,290
OS a sink test class and the more so the

186
00:11:07,290 --> 00:11:10,320
main activity class OPN stealer is

187
00:11:10,320 --> 00:11:12,830
connected to send mails read class node

188
00:11:12,830 --> 00:11:21,780
which extends asynctask next import node

189
00:11:21,780 --> 00:11:24,840
editor de Graaff while analyzing any

190
00:11:24,840 --> 00:11:26,610
binary code you know cross reference

191
00:11:26,610 --> 00:11:29,340
information is more useful than one

192
00:11:29,340 --> 00:11:31,560
could imagine to online the

193
00:11:31,560 --> 00:11:33,560
functionality of the ejectors

194
00:11:33,560 --> 00:11:36,360
unfortunately the input important

195
00:11:36,360 --> 00:11:38,970
section like the information is not

196
00:11:38,970 --> 00:11:42,030
located in any specific section of text

197
00:11:42,030 --> 00:11:46,860
file header we must discover importa

198
00:11:46,860 --> 00:11:49,610
classes for our service as mentioned a

199
00:11:49,610 --> 00:11:53,040
component plays a significant role for

200
00:11:53,040 --> 00:11:54,600
the seat of breath therefore devil

201
00:11:54,600 --> 00:11:58,820
defines import class as a class

202
00:11:58,820 --> 00:12:03,120
referenced by a component classes and

203
00:12:03,120 --> 00:12:07,110
and more important class could also have

204
00:12:07,110 --> 00:12:11,030
its own imported import recursively of

205
00:12:11,030 --> 00:12:14,790
PN Stiller the gmail send the class is

206
00:12:14,790 --> 00:12:18,690
imported from both main activity class

207
00:12:18,690 --> 00:12:22,470
and the send mails read class and gmail

208
00:12:22,470 --> 00:12:25,320
sender class requires internet

209
00:12:25,320 --> 00:12:28,100
permission

210
00:12:29,500 --> 00:12:32,020
unless the string notoriety to the reps

211
00:12:32,020 --> 00:12:33,820
wild devil I'm already starving

212
00:12:33,820 --> 00:12:36,280
particles the virtual string object

213
00:12:36,280 --> 00:12:39,580
mimic King java.lang.string string bow

214
00:12:39,580 --> 00:12:43,120
string builder string blah blah etc are

215
00:12:43,120 --> 00:12:46,090
maintained them if the virtual string

216
00:12:46,090 --> 00:12:48,940
object I'll level instead parameter in

217
00:12:48,940 --> 00:12:50,980
the command delay to the either a

218
00:12:50,980 --> 00:12:54,850
component or import table will generate

219
00:12:54,850 --> 00:12:56,830
the relationship between the text and

220
00:12:56,830 --> 00:13:00,240
the class in which the commands issued

221
00:13:00,240 --> 00:13:03,910
pn still has two email addresses note

222
00:13:03,910 --> 00:13:06,550
issued in centimeters with class and one

223
00:13:06,550 --> 00:13:09,880
text node containing the q''-word imei

224
00:13:09,880 --> 00:13:17,170
issue the main activity class so this is

225
00:13:17,170 --> 00:13:20,290
our first and complete a life cycle

226
00:13:20,290 --> 00:13:23,710
graph of Android morale actually it was

227
00:13:23,710 --> 00:13:26,680
the first stable outfit of my

228
00:13:26,680 --> 00:13:32,790
visualization pilot devil and this is

229
00:13:32,790 --> 00:13:38,260
running version of graft ye this is P

230
00:13:38,260 --> 00:13:43,950
and stealer let's throw crap

231
00:13:48,220 --> 00:13:51,970
a little bit different different because

232
00:13:51,970 --> 00:13:55,390
is it is latest version my paper is jump

233
00:13:55,390 --> 00:14:08,590
some or ok so far we have focused on how

234
00:14:08,590 --> 00:14:10,630
to build the graph from now on we'll

235
00:14:10,630 --> 00:14:14,170
discuss how the lifecycle graph can be

236
00:14:14,170 --> 00:14:17,470
applied in detecting Android Maria prior

237
00:14:17,470 --> 00:14:19,750
to seeing the real samples in case

238
00:14:19,750 --> 00:14:23,200
studies we should have a general idea of

239
00:14:23,200 --> 00:14:27,460
a life cycling the app live cycling

240
00:14:27,460 --> 00:14:30,460
could simply be put as traversing or

241
00:14:30,460 --> 00:14:33,540
outgoing note from one node on a

242
00:14:33,540 --> 00:14:37,750
lifecycle graph recursively typically

243
00:14:37,750 --> 00:14:40,930
from entry point yes it's all about

244
00:14:40,930 --> 00:14:46,960
traversing a graph I will show animation

245
00:14:46,960 --> 00:14:52,950
of life cycling of pn stealer

246
00:15:02,499 --> 00:15:06,219
but as we'll see next the app life

247
00:15:06,219 --> 00:15:08,799
cycling is very useful for investigating

248
00:15:08,799 --> 00:15:11,829
the behavior of Android UF and also very

249
00:15:11,829 --> 00:15:14,879
effective identifying distinct behavior

250
00:15:14,879 --> 00:15:17,589
therefore I think app life cycling could

251
00:15:17,589 --> 00:15:20,409
be well suited to detecting suspicious

252
00:15:20,409 --> 00:15:26,949
behavior of Android moral the following

253
00:15:26,949 --> 00:15:29,019
walkthroughs will show some new

254
00:15:29,019 --> 00:15:31,359
perspectives and eventually tell a story

255
00:15:31,359 --> 00:15:35,079
how effectively a well-drawn graph could

256
00:15:35,079 --> 00:15:37,689
be used in finding unusual patterns and

257
00:15:37,689 --> 00:15:40,299
making a lesion assumption about

258
00:15:40,299 --> 00:15:45,039
maliciousness the first case studies

259
00:15:45,039 --> 00:15:49,149
tourjournal it is clear their main

260
00:15:49,149 --> 00:15:51,969
activity class is the main on entry

261
00:15:51,969 --> 00:15:55,089
point as it is connected main and

262
00:15:55,089 --> 00:15:58,509
launcher intent node 1 out Boing edge

263
00:15:58,509 --> 00:16:01,539
from main activity class northpoint the

264
00:16:01,539 --> 00:16:03,429
inter-service class node which means

265
00:16:03,429 --> 00:16:07,239
that main activity class Trott start the

266
00:16:07,239 --> 00:16:11,019
install service class and the install

267
00:16:11,019 --> 00:16:14,109
subscribes no disconnected little locked

268
00:16:14,109 --> 00:16:16,539
Thomason node this means you know

269
00:16:16,539 --> 00:16:18,579
instance of class requires the

270
00:16:18,579 --> 00:16:21,399
permission which are lost on application

271
00:16:21,399 --> 00:16:25,289
to list inaudible system load files also

272
00:16:25,289 --> 00:16:28,449
install sobs class node has one outgoing

273
00:16:28,449 --> 00:16:33,669
edge to application vnd android package

274
00:16:33,669 --> 00:16:36,939
a kite mine time node which means that

275
00:16:36,939 --> 00:16:39,189
instance of class has the functionality

276
00:16:39,189 --> 00:16:42,879
of downloading APK file finally install

277
00:16:42,879 --> 00:16:46,329
service class node has three outgoing

278
00:16:46,329 --> 00:16:52,720
edge to string all labeled exe chmod 347

279
00:16:52,720 --> 00:16:56,199
package manager installed which means

280
00:16:56,199 --> 00:16:59,199
that intercepted classes execute those

281
00:16:59,199 --> 00:17:03,009
commands in a nutshell children not you

282
00:17:03,009 --> 00:17:06,069
guys one unusual permission and if we

283
00:17:06,069 --> 00:17:08,409
start it download and install an APK

284
00:17:08,409 --> 00:17:12,459
file above everything else the eff life

285
00:17:12,459 --> 00:17:15,160
cycle graph of trojan or has the

286
00:17:15,160 --> 00:17:18,010
lead cover ratio of the graph putting

287
00:17:18,010 --> 00:17:22,240
together or of behaviors we've seen we

288
00:17:22,240 --> 00:17:24,730
can say that children are certainly

289
00:17:24,730 --> 00:17:32,020
militias the next case studies caught on

290
00:17:32,020 --> 00:17:34,210
this model has some distinct

291
00:17:34,210 --> 00:17:37,060
characteristics such as accessing SMS

292
00:17:37,060 --> 00:17:39,790
impacts hiding app icons in the launcher

293
00:17:39,790 --> 00:17:44,260
and registering device a demain receiver

294
00:17:44,260 --> 00:17:49,540
or at the beginning see the graph main

295
00:17:49,540 --> 00:17:52,750
activity class has two outgoing edges to

296
00:17:52,750 --> 00:17:55,420
string not label the address beginning

297
00:17:55,420 --> 00:17:58,300
content SMS which explains the behavior

298
00:17:58,300 --> 00:18:03,510
of accessing SMS inbox and the change

299
00:18:03,510 --> 00:18:06,280
componenti enabled state permission is

300
00:18:06,280 --> 00:18:09,010
required by main activity class which

301
00:18:09,010 --> 00:18:13,750
explains hiding of the icon in the

302
00:18:13,750 --> 00:18:18,370
launcher finally device a demain enabled

303
00:18:18,370 --> 00:18:22,060
intent node hassle has an incoming edge

304
00:18:22,060 --> 00:18:25,030
from main activity class node and has

305
00:18:25,030 --> 00:18:28,240
outgoing edge to air sex screen class

306
00:18:28,240 --> 00:18:31,510
node which requires buying the device

307
00:18:31,510 --> 00:18:34,780
admin permission these tells us that

308
00:18:34,780 --> 00:18:38,230
main activity class lived registers as

309
00:18:38,230 --> 00:18:41,080
extreme class as the device admin

310
00:18:41,080 --> 00:18:46,840
receiver as you seen even just a simple

311
00:18:46,840 --> 00:18:50,170
picture with nine nodes and 880 s or

312
00:18:50,170 --> 00:18:53,590
internally or leasable 8 into object

313
00:18:53,590 --> 00:18:56,440
relations could represent over 3

314
00:18:56,440 --> 00:19:01,510
malicious behaviors quite well and also

315
00:19:01,510 --> 00:19:04,060
true turncoat hawk has the main app

316
00:19:04,060 --> 00:19:07,480
class extending application class the

317
00:19:07,480 --> 00:19:10,620
inheritance of classes class is

318
00:19:10,620 --> 00:19:14,530
represented in yellow green color as you

319
00:19:14,530 --> 00:19:17,530
know well as the context of entire

320
00:19:17,530 --> 00:19:21,010
application the application class is the

321
00:19:21,010 --> 00:19:23,290
starting point when executing the

322
00:19:23,290 --> 00:19:26,980
program there are four EP node and the

323
00:19:26,980 --> 00:19:27,389
epi

324
00:19:27,389 --> 00:19:29,429
asian class note are connected to each

325
00:19:29,429 --> 00:19:33,979
other and then the main at class

326
00:19:33,979 --> 00:19:37,379
references Fievel receivers in total

327
00:19:37,379 --> 00:19:40,429
sent to jail deceiver singh naseeba

328
00:19:40,429 --> 00:19:43,289
delivered receiver ting naseebo and

329
00:19:43,289 --> 00:19:50,339
tickly see the class and all at the

330
00:19:50,339 --> 00:19:53,070
beginning even before the main

331
00:19:53,070 --> 00:19:56,579
activities created and you eyes as seen

332
00:19:56,579 --> 00:19:59,579
by the usual georgian hotel calls Fievel

333
00:19:59,579 --> 00:20:02,999
receivers in a stealth way and the fiber

334
00:20:02,999 --> 00:20:06,659
receivers also have both outgoing at two

335
00:20:06,659 --> 00:20:09,599
and incoming edge from their own intent

336
00:20:09,599 --> 00:20:13,739
action node which means that all five

337
00:20:13,739 --> 00:20:16,289
receivers themselves register themselves

338
00:20:16,289 --> 00:20:21,349
as broadcast receiver clearly measures

339
00:20:21,349 --> 00:20:25,499
these behaviors and the grab can make in

340
00:20:25,499 --> 00:20:28,349
tikis story quite simple in a manner

341
00:20:28,349 --> 00:20:35,219
never seen before next case study is

342
00:20:35,219 --> 00:20:40,489
true don't bank on this morale has

343
00:20:40,489 --> 00:20:44,039
interesting characteristics in that one

344
00:20:44,039 --> 00:20:47,219
broadcaster leasable in this case the a

345
00:20:47,219 --> 00:20:50,309
class on the graph has too many intense

346
00:20:50,309 --> 00:20:53,849
actions we could find this unusual

347
00:20:53,849 --> 00:20:57,269
feature by leading Android Memphis file

348
00:20:57,269 --> 00:21:00,209
and of course simply by doing the graph

349
00:21:00,209 --> 00:21:04,109
but the letter can tell the same story

350
00:21:04,109 --> 00:21:07,289
in a less boring and more representative

351
00:21:07,289 --> 00:21:10,919
ways the sky blue colored not represent

352
00:21:10,919 --> 00:21:13,739
the intentional actions in this case

353
00:21:13,739 --> 00:21:17,009
most of intent actions are connected to

354
00:21:17,009 --> 00:21:20,159
a class accordingly the ladies of a

355
00:21:20,159 --> 00:21:22,709
class note has grown to the largest of

356
00:21:22,709 --> 00:21:25,889
all furthermore force layout algorithm

357
00:21:25,889 --> 00:21:28,589
natural expand the range of a class note

358
00:21:28,589 --> 00:21:31,469
and each intent action node to the

359
00:21:31,469 --> 00:21:37,129
largest of all let's see

360
00:21:51,660 --> 00:22:03,270
our resolution is some low too low this

361
00:22:03,270 --> 00:22:07,590
is a class and has too many intent

362
00:22:07,590 --> 00:22:10,100
actions

363
00:22:17,159 --> 00:22:21,070
next case is dangerous when there are

364
00:22:21,070 --> 00:22:23,289
many prevalent variants of a one piece

365
00:22:23,289 --> 00:22:25,840
of model we should dig out the common

366
00:22:25,840 --> 00:22:28,269
characteristics and then contain the

367
00:22:28,269 --> 00:22:31,090
whole Moriya family as best as fast

368
00:22:31,090 --> 00:22:34,929
possible in this case also ab lifecycle

369
00:22:34,929 --> 00:22:37,809
graph could make our lives easier this

370
00:22:37,809 --> 00:22:41,049
graph represents the infamous Troodon

371
00:22:41,049 --> 00:22:44,919
generative family January is a custom

372
00:22:44,919 --> 00:22:47,470
limited access to key for Android the

373
00:22:47,470 --> 00:22:51,340
ticket is being sold for 300 US dollars

374
00:22:51,340 --> 00:22:53,470
to anyone who wants to automate the more

375
00:22:53,470 --> 00:22:55,889
rare distribution process the Creator

376
00:22:55,889 --> 00:22:59,559
promises that mireya can take pictures

377
00:22:59,559 --> 00:23:02,139
like of the audio and video downloaded

378
00:23:02,139 --> 00:23:04,509
recent pictures LaHood calls and the

379
00:23:04,509 --> 00:23:07,570
texts and more so the gender of the

380
00:23:07,570 --> 00:23:10,299
family has so many functions that it

381
00:23:10,299 --> 00:23:13,720
leads to heavy workload for us security

382
00:23:13,720 --> 00:23:16,749
researchers with the graph however it

383
00:23:16,749 --> 00:23:19,299
takes much less time and effort to

384
00:23:19,299 --> 00:23:22,029
determine our sample as a general parent

385
00:23:22,029 --> 00:23:25,450
because every Dan droid variant has a

386
00:23:25,450 --> 00:23:28,690
large Sun flower shaped sub graph in the

387
00:23:28,690 --> 00:23:33,669
center so to speak all the Android

388
00:23:33,669 --> 00:23:36,490
variants have many cross references to

389
00:23:36,490 --> 00:23:40,419
their inner classes in other words

390
00:23:40,419 --> 00:23:44,139
learnable component which he implement

391
00:23:44,139 --> 00:23:46,779
the majority of each malicious behaviors

392
00:23:46,779 --> 00:23:49,690
this capitalistic gives some flower like

393
00:23:49,690 --> 00:23:53,950
shape to the graph ok humans tend to

394
00:23:53,950 --> 00:23:55,840
perceive and remember the world in

395
00:23:55,840 --> 00:23:58,749
images and maria researchers are no

396
00:23:58,749 --> 00:24:01,389
exception they can perceive and remember

397
00:24:01,389 --> 00:24:04,289
more rare in images moreover with a

398
00:24:04,289 --> 00:24:07,210
well-made visualization engine in your

399
00:24:07,210 --> 00:24:09,940
arsenal it becomes much easier to

400
00:24:09,940 --> 00:24:12,159
identify a new more rare in your own

401
00:24:12,159 --> 00:24:16,240
senses for instance if you encounter new

402
00:24:16,240 --> 00:24:19,090
samples having subgraph very seemingly

403
00:24:19,090 --> 00:24:21,580
dead of danger you can assume it is

404
00:24:21,580 --> 00:24:24,369
malicious and predictable we're family

405
00:24:24,369 --> 00:24:27,959
it might belong to

406
00:24:28,020 --> 00:24:41,930
so this one is this one is 10 Troy and

407
00:24:42,560 --> 00:24:49,040
name have drawn service and each variant

408
00:24:51,710 --> 00:24:57,690
this is period of the Android has my

409
00:24:57,690 --> 00:25:04,980
service is my sobs although name is

410
00:25:04,980 --> 00:25:08,970
changes to my service the shape of graph

411
00:25:08,970 --> 00:25:18,810
is all the same of all types of under

412
00:25:18,810 --> 00:25:20,730
the more rail identifying a piece of

413
00:25:20,730 --> 00:25:23,700
lead packaging packaging more rare is

414
00:25:23,700 --> 00:25:25,770
more challenging than any others in this

415
00:25:25,770 --> 00:25:28,080
case also by comparing the graph of

416
00:25:28,080 --> 00:25:29,790
alleged to me to app with the dead of

417
00:25:29,790 --> 00:25:32,220
suspicious ones there maliciousness

418
00:25:32,220 --> 00:25:36,360
could be italy labeled the graph on the

419
00:25:36,360 --> 00:25:39,600
left is that of legitimate heir bounce

420
00:25:39,600 --> 00:25:43,140
ball while the graph of righty is that

421
00:25:43,140 --> 00:25:46,470
overly packaged one back to SMS monitor

422
00:25:46,470 --> 00:25:50,490
take a closer look at to add two graphs

423
00:25:50,490 --> 00:25:52,980
they have the main entry point

424
00:25:52,980 --> 00:25:55,500
burnsville activity class in common in

425
00:25:55,500 --> 00:25:58,710
green box in addition back door SMS

426
00:25:58,710 --> 00:26:01,410
motor has one more graph independent of

427
00:26:01,410 --> 00:26:06,480
the main one in red box on additional

428
00:26:06,480 --> 00:26:09,840
graph the broadcast receiver SMS money

429
00:26:09,840 --> 00:26:12,090
to class plays a role as an another

430
00:26:12,090 --> 00:26:14,760
entry point that deceives SMS received

431
00:26:14,760 --> 00:26:18,930
intent and requires internet lead roles

432
00:26:18,930 --> 00:26:21,740
little phone state a nexus fine location

433
00:26:21,740 --> 00:26:24,990
permissions and performs of a broadcast

434
00:26:24,990 --> 00:26:28,190
and also access these phone numbers and

435
00:26:28,190 --> 00:26:31,230
pictures and never insist the coding

436
00:26:31,230 --> 00:26:33,480
class which requires Lakota audio

437
00:26:33,480 --> 00:26:36,510
permission finally SMS monitor class

438
00:26:36,510 --> 00:26:41,010
widget too suspicious URLs as a scene

439
00:26:41,010 --> 00:26:44,370
the comparison of the two graph easily

440
00:26:44,370 --> 00:26:46,560
Livius the most common functionalities

441
00:26:46,560 --> 00:26:52,770
and additional ones I will conclude some

442
00:26:52,770 --> 00:26:56,880
interesting point every Android app has

443
00:26:56,880 --> 00:26:58,950
essential building blocks known as egg

444
00:26:58,950 --> 00:27:02,070
components the relationships between AB

445
00:27:02,070 --> 00:27:04,800
components construct the app life cycle

446
00:27:04,800 --> 00:27:08,130
which can effectively be visualized in a

447
00:27:08,130 --> 00:27:10,740
graph using force directed to layout

448
00:27:10,740 --> 00:27:14,070
algorithms the app lifecycle graph is

449
00:27:14,070 --> 00:27:17,100
well suited to analyzing how on android

450
00:27:17,100 --> 00:27:20,490
app operates the app life cycling

451
00:27:20,490 --> 00:27:22,920
travels or outgoing node from one model

452
00:27:22,920 --> 00:27:25,530
recursively typically from entry point

453
00:27:25,530 --> 00:27:28,680
and it's useful for analyzing the

454
00:27:28,680 --> 00:27:31,650
behavior and so effective in identifying

455
00:27:31,650 --> 00:27:36,270
a distinct behavior that can it can be

456
00:27:36,270 --> 00:27:40,970
used to detect malicious behavior and by

457
00:27:40,970 --> 00:27:43,080
comparing two graphs we can also

458
00:27:43,080 --> 00:27:46,020
identify the packaging more rare to sum

459
00:27:46,020 --> 00:27:48,900
up the proper visualization of morale as

460
00:27:48,900 --> 00:27:52,110
performed by devil could be a wonderful

461
00:27:52,110 --> 00:27:56,010
tool it can provide insight into wa

462
00:27:56,010 --> 00:27:58,680
beers of immoral and can even heighten

463
00:27:58,680 --> 00:28:01,560
the census of security researchers who

464
00:28:01,560 --> 00:28:05,070
are drowning in ad elegy of life italy

465
00:28:05,070 --> 00:28:07,920
increasing more well as the singles a

466
00:28:07,920 --> 00:28:14,460
picture is worth a thousand words that's

467
00:28:14,460 --> 00:28:20,190
all thank you any questions so thank you

468
00:28:20,190 --> 00:28:21,840
very much i think we do have time for

469
00:28:21,840 --> 00:28:23,760
just one question maybe although we are

470
00:28:23,760 --> 00:28:25,290
sitting right in front of a coffee break

471
00:28:25,290 --> 00:28:26,460
so if anybody has something they

472
00:28:26,460 --> 00:28:30,960
desperately want to ask okay we have one

473
00:28:30,960 --> 00:28:32,430
question right in the middle in the bank

474
00:28:32,430 --> 00:28:37,320
please hello I have was one question

475
00:28:37,320 --> 00:28:40,080
about architecture of your tool as I

476
00:28:40,080 --> 00:28:43,170
understand the very some client-server

477
00:28:43,170 --> 00:28:48,180
architecture yes you use some client for

478
00:28:48,180 --> 00:28:54,890
send samples to serve areas so important

479
00:28:54,890 --> 00:29:00,650
yes you have your tool have some

480
00:29:00,650 --> 00:29:10,530
architectural likely answer various so I

481
00:29:10,530 --> 00:29:13,110
think the question is the architecture

482
00:29:13,110 --> 00:29:16,190
is client and the server architecture

483
00:29:16,190 --> 00:29:21,360
yes okay so why client-server White's

484
00:29:21,360 --> 00:29:24,330
isn't only standalone tools standalone

485
00:29:24,330 --> 00:29:31,080
application why you using client and

486
00:29:31,080 --> 00:29:39,530
server why not only the one tool ah yes

487
00:29:39,530 --> 00:29:45,690
this is the our own automated male

488
00:29:45,690 --> 00:29:49,380
analysis tab part of this is real system

489
00:29:49,380 --> 00:29:57,900
and currently we we implement on the

490
00:29:57,900 --> 00:30:02,160
server side first and verified we deploy

491
00:30:02,160 --> 00:30:09,980
it to the client or one application okay

492
00:30:11,180 --> 00:30:14,910
okay and I think with that this will

493
00:30:14,910 --> 00:30:16,410
conclude our session I think it's up to

494
00:30:16,410 --> 00:30:19,460
us to thank you for an excellent

