1
00:00:05,850 --> 00:00:08,910
good afternoon everyone thank you very

2
00:00:08,910 --> 00:00:12,330
much for making it through to Friday

3
00:00:12,330 --> 00:00:18,439
afternoon the the Warriors as it were so

4
00:00:18,439 --> 00:00:22,320
I just like to introduce Mary Ann

5
00:00:22,320 --> 00:00:24,990
Marshall ik for a very informative talk

6
00:00:24,990 --> 00:00:27,560
about the elephant in the room

7
00:00:27,560 --> 00:00:29,789
thank you thank you for the introduction

8
00:00:29,789 --> 00:00:31,650
welcome everyone to my talk about the

9
00:00:31,650 --> 00:00:34,950
elephant in the room some of you might

10
00:00:34,950 --> 00:00:36,510
expect to talk about elephants but this

11
00:00:36,510 --> 00:00:39,450
is actually gonna be about malware I'll

12
00:00:39,450 --> 00:00:40,860
be speaking about some very interesting

13
00:00:40,860 --> 00:00:43,530
motor samples being encountered in the

14
00:00:43,530 --> 00:00:44,820
course of 2014

15
00:00:44,820 --> 00:00:48,690
being dubbed after Bob our famous french

16
00:00:48,690 --> 00:00:51,329
cartoon being an elephant alongside with

17
00:00:51,329 --> 00:00:53,370
other samples pinned up bunny Casper and

18
00:00:53,370 --> 00:00:56,489
Dino my name is very much like I'm a

19
00:00:56,489 --> 00:00:59,100
threat researcher focusing on Mel or

20
00:00:59,100 --> 00:01:01,500
analysis and development of threat

21
00:01:01,500 --> 00:01:03,780
detection technologies I work for a

22
00:01:03,780 --> 00:01:06,979
california-based start-up named ciphered

23
00:01:06,979 --> 00:01:11,970
which to advanced threat detection today

24
00:01:11,970 --> 00:01:14,670
I will be speaking about Mellor which

25
00:01:14,670 --> 00:01:17,070
was first mentioned in an article by

26
00:01:17,070 --> 00:01:21,229
French newspaper demo which mentioned in

27
00:01:21,229 --> 00:01:25,460
pink March 2014 the interesting mower

28
00:01:25,460 --> 00:01:27,810
supposedly being operated by the French

29
00:01:27,810 --> 00:01:30,360
government Dean and pop are back at the

30
00:01:30,360 --> 00:01:32,369
time we didn't know anything about Mel

31
00:01:32,369 --> 00:01:35,220
rapini and pop are didn't even have a

32
00:01:35,220 --> 00:01:37,740
link to the binaries but work went to

33
00:01:37,740 --> 00:01:41,180
doctors to find mentioned binaries

34
00:01:41,180 --> 00:01:43,340
starting with an overview of the

35
00:01:43,340 --> 00:01:46,530
uncovered Melbourne families here's the

36
00:01:46,530 --> 00:01:49,380
timeline the first families we found

37
00:01:49,380 --> 00:01:52,290
were rather dull my name is named TFC n

38
00:01:52,290 --> 00:01:56,159
dot and CBD and some more acronyms we

39
00:01:56,159 --> 00:01:58,439
couldn't identify so far these planners

40
00:01:58,439 --> 00:02:01,860
though didn't give away any link to the

41
00:02:01,860 --> 00:02:05,759
actor behind them or the interest of the

42
00:02:05,759 --> 00:02:08,280
actual operation that in bought them but

43
00:02:08,280 --> 00:02:12,390
they showed habits similar to another

44
00:02:12,390 --> 00:02:13,850
piece of malware

45
00:02:13,850 --> 00:02:19,070
uncovered in 2011 named bunny bunny was

46
00:02:19,070 --> 00:02:25,820
a scripting pot which was distributed

47
00:02:25,820 --> 00:02:26,980
through a spear phishing campaign

48
00:02:26,980 --> 00:02:29,840
involving and agreed super day exploit

49
00:02:29,840 --> 00:02:33,830
and it led us on on our switch to

50
00:02:33,830 --> 00:02:35,470
finally find the boundaries of the bar

51
00:02:35,470 --> 00:02:38,780
Bob Barr was compiled in 2010 and we

52
00:02:38,780 --> 00:02:41,480
expected the operation volume bar to be

53
00:02:41,480 --> 00:02:44,780
active from 2009 through 2010 and

54
00:02:44,780 --> 00:02:48,800
possibly 2011 further model we find

55
00:02:48,800 --> 00:02:51,650
researchers from ESET went on to find

56
00:02:51,650 --> 00:02:55,160
another mallow family which through

57
00:02:55,160 --> 00:02:57,350
binary linking could be identified as

58
00:02:57,350 --> 00:03:00,290
another entity in this cartoon menagerie

59
00:03:00,290 --> 00:03:03,380
which was Casper Casper has been

60
00:03:03,380 --> 00:03:06,860
spreading 2014 also involving through

61
00:03:06,860 --> 00:03:08,870
the exploits and furthermore it could be

62
00:03:08,870 --> 00:03:10,730
linked to another molar family named

63
00:03:10,730 --> 00:03:14,420
Dino as mentioned the first Maori we

64
00:03:14,420 --> 00:03:17,360
discovered words a plugins platformed

65
00:03:17,360 --> 00:03:19,400
namely TF c or ng buddy however you want

66
00:03:19,400 --> 00:03:21,200
to name it and what was it denial of

67
00:03:21,200 --> 00:03:25,160
service pot bunny as mentioned has been

68
00:03:25,160 --> 00:03:28,070
spread in 2011 using a spear phishing

69
00:03:28,070 --> 00:03:30,710
campaign for piracy declared superstar

70
00:03:30,710 --> 00:03:34,700
in this menagerie being active for 2009

71
00:03:34,700 --> 00:03:38,030
Dino sorry Casper has passed right

72
00:03:38,030 --> 00:03:40,640
through a watering hole campaign in

73
00:03:40,640 --> 00:03:44,690
Syria and you know unsurprisingly has

74
00:03:44,690 --> 00:03:47,390
been active in alright let's have a

75
00:03:47,390 --> 00:03:48,890
close look at the family so the first

76
00:03:48,890 --> 00:03:51,470
Rhino is run covered were invoked by

77
00:03:51,470 --> 00:03:55,480
Nerys rather doubt in all of three spots

78
00:03:55,480 --> 00:03:57,860
they were rather plain that wasn't

79
00:03:57,860 --> 00:03:59,540
runtime Packer involved they contained

80
00:03:59,540 --> 00:04:01,670
very telling strings as you can see on

81
00:04:01,670 --> 00:04:04,220
the screenshot telling us about their

82
00:04:04,220 --> 00:04:06,440
intentions but what was surprising for

83
00:04:06,440 --> 00:04:10,280
us was their intentions denial of cert

84
00:04:10,280 --> 00:04:12,050
spots which is rather uncommon to have

85
00:04:12,050 --> 00:04:13,820
1000 spots without any Packer

86
00:04:13,820 --> 00:04:17,810
obfuscating their intent so going on

87
00:04:17,810 --> 00:04:20,238
with our research we found more related

88
00:04:20,238 --> 00:04:24,140
binaries namely key TFC platform n G B D

89
00:04:24,140 --> 00:04:26,560
which

90
00:04:26,560 --> 00:04:29,180
dedicated to download plugins which can

91
00:04:29,180 --> 00:04:32,509
add activity to the mall are being

92
00:04:32,509 --> 00:04:34,520
installed on the system and extend the

93
00:04:34,520 --> 00:04:36,199
functionality but all these panels

94
00:04:36,199 --> 00:04:37,849
together were not fundamentally

95
00:04:37,849 --> 00:04:39,800
interesting from a research point of

96
00:04:39,800 --> 00:04:43,219
view however the furthermore uncovered

97
00:04:43,219 --> 00:04:46,219
Bunny malware could be linked to these

98
00:04:46,219 --> 00:04:48,349
binaries through similarities in in the

99
00:04:48,349 --> 00:04:52,789
code showed interesting behavior much

100
00:04:52,789 --> 00:04:54,770
more interesting than the banner is

101
00:04:54,770 --> 00:04:58,240
described before hosts own trust though

102
00:04:58,240 --> 00:05:01,400
was the name of the binary which

103
00:05:01,400 --> 00:05:03,319
reminded us of Bugs Bunny the cartoon

104
00:05:03,319 --> 00:05:06,259
the name of the banner is came from the

105
00:05:06,259 --> 00:05:08,539
embedded PDP string which wasn't

106
00:05:08,539 --> 00:05:11,210
stripped from the bunny showing us the

107
00:05:11,210 --> 00:05:13,370
name of the project namely bunny two

108
00:05:13,370 --> 00:05:15,530
point three point two what was funny

109
00:05:15,530 --> 00:05:18,379
bunny was a scriptable bot incorporating

110
00:05:18,379 --> 00:05:21,259
a Lua engine so bunny would go on to

111
00:05:21,259 --> 00:05:23,719
download Lua scripts to change its

112
00:05:23,719 --> 00:05:25,159
behavior to a certain extent at runtime

113
00:05:25,159 --> 00:05:26,930
by injecting the scripts into its own

114
00:05:26,930 --> 00:05:28,969
code poly how does it work

115
00:05:28,969 --> 00:05:31,099
so bunny is actually a pretty

116
00:05:31,099 --> 00:05:34,099
sophisticated pot in itself having a

117
00:05:34,099 --> 00:05:37,520
main part which is many busy with

118
00:05:37,520 --> 00:05:40,460
tunneling Lua scripts and commands from

119
00:05:40,460 --> 00:05:44,419
the scenes he executing the different

120
00:05:44,419 --> 00:05:46,580
threads which are dedicated to execute

121
00:05:46,580 --> 00:05:48,710
the Lua scripts from there

122
00:05:48,710 --> 00:05:52,180
it would fill the downloaded data to

123
00:05:52,180 --> 00:05:55,969
data files named III not cap one two and

124
00:05:55,969 --> 00:05:58,969
three which would then be worked on by

125
00:05:58,969 --> 00:06:01,099
the dedicated work of threads by the mod

126
00:06:01,099 --> 00:06:04,219
called hero threads there was a hero

127
00:06:04,219 --> 00:06:07,279
zero which would not expose any

128
00:06:07,279 --> 00:06:10,669
interesting behavior Alfie working here

129
00:06:10,669 --> 00:06:13,520
threads would be busy working on scripts

130
00:06:13,520 --> 00:06:15,620
tunneled through either HTTP to do

131
00:06:15,620 --> 00:06:18,860
direct script execution here on number

132
00:06:18,860 --> 00:06:21,259
two will execute cron tasks which was

133
00:06:21,259 --> 00:06:23,779
sort of scheduled tasks which were

134
00:06:23,779 --> 00:06:26,029
dedicated to be executed by the bot at a

135
00:06:26,029 --> 00:06:28,009
specific point in time and here number

136
00:06:28,009 --> 00:06:30,740
three would work on a sort of batch file

137
00:06:30,740 --> 00:06:33,080
called DB file within my

138
00:06:33,080 --> 00:06:36,860
within the mobile to enable the mother

139
00:06:36,860 --> 00:06:39,240
to execute in batch mode

140
00:06:39,240 --> 00:06:43,390
all of this together was being locked

141
00:06:43,390 --> 00:06:45,370
through clear text locked messages

142
00:06:45,370 --> 00:06:48,190
within the bot which would be done to a

143
00:06:48,190 --> 00:06:50,710
temple which would then be excavated to

144
00:06:50,710 --> 00:06:53,410
the scene Caesar all this together was

145
00:06:53,410 --> 00:06:55,060
monitored by a performance myself at

146
00:06:55,060 --> 00:06:57,070
which was it sure that the execution of

147
00:06:57,070 --> 00:06:58,780
the bot would not exceed a certain

148
00:06:58,780 --> 00:07:02,860
threshold at the point of operation all

149
00:07:02,860 --> 00:07:05,260
right all this together is for us fairly

150
00:07:05,260 --> 00:07:08,440
interesting as the inclusion of the Lua

151
00:07:08,440 --> 00:07:10,900
engine and about the pod to change its

152
00:07:10,900 --> 00:07:12,970
behavior to a certain extent as the Lua

153
00:07:12,970 --> 00:07:16,180
engine provides a vast set of

154
00:07:16,180 --> 00:07:17,530
functionality which can then be called

155
00:07:17,530 --> 00:07:20,110
through a Lua script who has originally

156
00:07:20,110 --> 00:07:22,770
been developed within the computer game

157
00:07:22,770 --> 00:07:26,020
industry to inject behavior to computer

158
00:07:26,020 --> 00:07:28,930
games at runtime and the authors of the

159
00:07:28,930 --> 00:07:31,750
Pawnee but used this functionality to

160
00:07:31,750 --> 00:07:35,910
extend their pot pie Lua scripts

161
00:07:35,910 --> 00:07:38,110
interesting on the panel morado was

162
00:07:38,110 --> 00:07:41,290
extensive evasiveness the bunny came

163
00:07:41,290 --> 00:07:44,010
with a long list of evasion techniques

164
00:07:44,010 --> 00:07:47,500
which partially focused on the behavior

165
00:07:47,500 --> 00:07:49,180
of antivirus engines being installed on

166
00:07:49,180 --> 00:07:52,030
the system pani would perform an

167
00:07:52,030 --> 00:07:54,450
interesting emulator check which

168
00:07:54,450 --> 00:07:56,260
suggested that the authors of the

169
00:07:56,260 --> 00:07:57,670
Malheur had a certain extent of

170
00:07:57,670 --> 00:08:00,730
knowledge of antivirus emulators the

171
00:08:00,730 --> 00:08:02,470
walls check its execution environment to

172
00:08:02,470 --> 00:08:05,320
see if it was properly setup and check

173
00:08:05,320 --> 00:08:06,880
the number of running processes on the

174
00:08:06,880 --> 00:08:08,320
machine to see if it was an actual real

175
00:08:08,320 --> 00:08:11,680
environment it was executed interesting

176
00:08:11,680 --> 00:08:14,230
also it would perform time API hope

177
00:08:14,230 --> 00:08:16,450
detection which is frequently performed

178
00:08:16,450 --> 00:08:20,950
in sandbox solutions to handle the

179
00:08:20,950 --> 00:08:24,730
malware in detecting the environment the

180
00:08:24,730 --> 00:08:26,140
most interesting trick in this list

181
00:08:26,140 --> 00:08:28,320
though for me personally was the

182
00:08:28,320 --> 00:08:31,990
emulator check which I first thought was

183
00:08:31,990 --> 00:08:35,740
a sandbox check so Bunny at startup

184
00:08:35,740 --> 00:08:38,229
would see if the own module file name

185
00:08:38,229 --> 00:08:40,270
contained one of these strings listed on

186
00:08:40,270 --> 00:08:42,340
the screen shot which I didn't know

187
00:08:42,340 --> 00:08:45,520
where they belong to but I supposed it

188
00:08:45,520 --> 00:08:47,550
were names being used within send boxes

189
00:08:47,550 --> 00:08:50,980
turned out later when a us-based

190
00:08:50,980 --> 00:08:52,210
researcher

191
00:08:52,210 --> 00:08:55,360
me under this one had sent boxes being

192
00:08:55,360 --> 00:08:57,670
searched for but actual antivirus

193
00:08:57,670 --> 00:09:00,130
emulators so he pointed out that in his

194
00:09:00,130 --> 00:09:01,779
research he had found out that the test

195
00:09:01,779 --> 00:09:03,520
app was named frequently used by the

196
00:09:03,520 --> 00:09:06,540
BitDefender emulator and that last

197
00:09:06,540 --> 00:09:10,300
string which looks rather random looks

198
00:09:10,300 --> 00:09:12,310
like something that the Kaspersky engine

199
00:09:12,310 --> 00:09:15,130
could produce during an execution but

200
00:09:15,130 --> 00:09:17,380
what he also pointed out was that this

201
00:09:17,380 --> 00:09:19,000
name is indeed rather random because he

202
00:09:19,000 --> 00:09:20,440
sends me a list of other names that he

203
00:09:20,440 --> 00:09:24,420
had extracted from the Kaspersky a later

204
00:09:24,420 --> 00:09:27,250
so after I could conclude that the

205
00:09:27,250 --> 00:09:30,459
authors of the bunny Miller had good

206
00:09:30,459 --> 00:09:32,170
intentions in in detecting him others

207
00:09:32,170 --> 00:09:34,660
but with this trick would not be quite

208
00:09:34,660 --> 00:09:39,810
successful in detecting any emulator

209
00:09:39,899 --> 00:09:43,540
going on with the next family which was

210
00:09:43,540 --> 00:09:48,149
named the bar let's disassemble the bar

211
00:09:48,149 --> 00:09:51,580
top bar it's my personal persistent

212
00:09:51,580 --> 00:09:54,420
elephant threat as mention was first

213
00:09:54,420 --> 00:09:56,980
published in the French newspaper Le

214
00:09:56,980 --> 00:10:00,640
Monde where the author stated that there

215
00:10:00,640 --> 00:10:03,279
is documents which had been leaked by

216
00:10:03,279 --> 00:10:05,680
Edward Snowden and originated from the

217
00:10:05,680 --> 00:10:09,190
Canadian Security Service this document

218
00:10:09,190 --> 00:10:12,459
supposedly described sophisticated

219
00:10:12,459 --> 00:10:15,610
espionage malware being supposedly

220
00:10:15,610 --> 00:10:18,220
operated by the French government but at

221
00:10:18,220 --> 00:10:19,930
the time the article came out no one had

222
00:10:19,930 --> 00:10:22,390
his hands on the binaries however

223
00:10:22,390 --> 00:10:25,480
through extensive research we finally

224
00:10:25,480 --> 00:10:27,220
figured out there are borrowed binaries

225
00:10:27,220 --> 00:10:28,920
we analyzed them and there indeed

226
00:10:28,920 --> 00:10:32,140
espionage Mauer performing basic

227
00:10:32,140 --> 00:10:34,540
keylogging grannie screenshots grabbing

228
00:10:34,540 --> 00:10:36,220
audio captures dropping like everything

229
00:10:36,220 --> 00:10:37,660
the malware could get his hands on on

230
00:10:37,660 --> 00:10:41,650
the infected machine but Barbarossa by

231
00:10:41,650 --> 00:10:43,570
operating a local instance on the

232
00:10:43,570 --> 00:10:46,180
machine which would do keylogging

233
00:10:46,180 --> 00:10:48,339
through a Uslan key logger would also

234
00:10:48,339 --> 00:10:52,570
apply a Uslan rootkit component which

235
00:10:52,570 --> 00:10:53,950
was able to steal information from

236
00:10:53,950 --> 00:10:56,459
remote processes running on the machine

237
00:10:56,459 --> 00:11:00,640
how does this work so but war itself was

238
00:11:00,640 --> 00:11:02,350
also rather quite sophisticated piece of

239
00:11:02,350 --> 00:11:04,450
mower using some rather quite simple

240
00:11:04,450 --> 00:11:06,160
tricks to achieve its goals

241
00:11:06,160 --> 00:11:09,339
but working fairly well it was fully

242
00:11:09,339 --> 00:11:12,069
operated in New Zealand being loaded at

243
00:11:12,069 --> 00:11:14,350
system startup by an instance of raucous

244
00:11:14,350 --> 00:11:16,839
VR 32 which would be loaded through a

245
00:11:16,839 --> 00:11:20,110
registry key which would then inject the

246
00:11:20,110 --> 00:11:22,000
babar yellow into the dedicated main

247
00:11:22,000 --> 00:11:24,550
instance which is another remote process

248
00:11:24,550 --> 00:11:26,829
in the machine randomly chosen from New

249
00:11:26,829 --> 00:11:28,899
Zealand which would then go on to create

250
00:11:28,899 --> 00:11:31,300
more challenge stances which used as a

251
00:11:31,300 --> 00:11:34,029
backup strategy so the main instance

252
00:11:34,029 --> 00:11:37,329
would still do the big part of the

253
00:11:37,329 --> 00:11:40,779
espionage tricks all the challenges

254
00:11:40,779 --> 00:11:42,730
would wait for the main instance to die

255
00:11:42,730 --> 00:11:44,620
to take over and create a new child

256
00:11:44,620 --> 00:11:47,370
instance instead the main instance would

257
00:11:47,370 --> 00:11:50,860
do the main part of his peonage namely

258
00:11:50,860 --> 00:11:52,509
performing the userland key logger and

259
00:11:52,509 --> 00:11:55,300
dumping the locked keystrokes to foul

260
00:11:55,300 --> 00:11:57,730
doing the clipboard snooping and all the

261
00:11:57,730 --> 00:12:01,180
other espionage techniques and dumping

262
00:12:01,180 --> 00:12:03,819
all the spite data into lock files which

263
00:12:03,819 --> 00:12:05,680
would then be exit rated to the remote

264
00:12:05,680 --> 00:12:08,439
server for the modem instance would

265
00:12:08,439 --> 00:12:10,449
place a global windows hook which

266
00:12:10,449 --> 00:12:13,029
enabled the malware to load its

267
00:12:13,029 --> 00:12:16,660
malicious code into a select list of

268
00:12:16,660 --> 00:12:20,290
processes on the windows desktop the

269
00:12:20,290 --> 00:12:22,420
processes of interest that bar would

270
00:12:22,420 --> 00:12:25,240
perform its API hooking on were handed

271
00:12:25,240 --> 00:12:27,040
to the malware through a configuration

272
00:12:27,040 --> 00:12:30,910
file and the API hooking would then be

273
00:12:30,910 --> 00:12:32,709
performed with the windows detours

274
00:12:32,709 --> 00:12:35,560
library api hoping would work through

275
00:12:35,560 --> 00:12:38,769
Toronto in functions I'll be speaking

276
00:12:38,769 --> 00:12:43,000
about this more in a little bit Bob are

277
00:12:43,000 --> 00:12:44,740
indeed was trying to hide in plain sight

278
00:12:44,740 --> 00:12:47,589
as mentioned it would quit its main

279
00:12:47,589 --> 00:12:49,180
instance the infection of remote

280
00:12:49,180 --> 00:12:52,149
processes would work through remote

281
00:12:52,149 --> 00:12:55,689
threats which would invoke a function

282
00:12:55,689 --> 00:12:58,029
stop that had been copied to the remote

283
00:12:58,029 --> 00:13:00,459
process beforehand and by using

284
00:13:00,459 --> 00:13:02,019
information being handed over through a

285
00:13:02,019 --> 00:13:04,449
section object would then load the

286
00:13:04,449 --> 00:13:07,180
malicious DLL of babar into the process

287
00:13:07,180 --> 00:13:08,889
space of the remote process and there

288
00:13:08,889 --> 00:13:11,410
execute a dedicated export of the binary

289
00:13:11,410 --> 00:13:15,189
in most cases this would involve the

290
00:13:15,189 --> 00:13:18,850
interaction of child instances being

291
00:13:18,850 --> 00:13:19,570
performed

292
00:13:19,570 --> 00:13:20,890
one of the exports but interestingly

293
00:13:20,890 --> 00:13:23,170
this technique was also used for the CNC

294
00:13:23,170 --> 00:13:24,700
communication so one day the key that

295
00:13:24,700 --> 00:13:27,310
exploited the bar DLL good performance

296
00:13:27,310 --> 00:13:29,800
in C communication so for communicating

297
00:13:29,800 --> 00:13:31,810
to the remote server a dedicated

298
00:13:31,810 --> 00:13:33,460
instance in a remote process would be

299
00:13:33,460 --> 00:13:36,550
created and from there babar would then

300
00:13:36,550 --> 00:13:41,980
call to its dedicated server interesting

301
00:13:41,980 --> 00:13:43,900
for me also was how simple and effective

302
00:13:43,900 --> 00:13:46,780
the key logger was implemented Bob are

303
00:13:46,780 --> 00:13:49,150
used to use ole and key logger based on

304
00:13:49,150 --> 00:13:51,280
the raw input model which basically

305
00:13:51,280 --> 00:13:54,550
means I will create an invisible message

306
00:13:54,550 --> 00:13:57,100
only window receiving keystrokes from

307
00:13:57,100 --> 00:14:00,550
the the keyboard and simply dumping them

308
00:14:00,550 --> 00:14:04,240
to a text file which is probably the

309
00:14:04,240 --> 00:14:06,160
most simple way of implementing key

310
00:14:06,160 --> 00:14:10,630
logger on a Windows workstation as

311
00:14:10,630 --> 00:14:12,250
managed me for the parking with the

312
00:14:12,250 --> 00:14:16,120
Uslan rootkit and this means that API

313
00:14:16,120 --> 00:14:17,650
addresses in remote processes of

314
00:14:17,650 --> 00:14:19,420
interest would be hooked and information

315
00:14:19,420 --> 00:14:20,800
at runtime would be stolen from

316
00:14:20,800 --> 00:14:23,290
dedicated applies this was performed

317
00:14:23,290 --> 00:14:24,940
through the windows theatres library

318
00:14:24,940 --> 00:14:27,310
which works as follows so usually a

319
00:14:27,310 --> 00:14:28,660
function called work from search

320
00:14:28,660 --> 00:14:31,620
function to a target function as a usual

321
00:14:31,620 --> 00:14:36,130
redirection of execution with an applied

322
00:14:36,130 --> 00:14:37,960
hook this looks a little bit different

323
00:14:37,960 --> 00:14:41,080
so the hook would place a detour

324
00:14:41,080 --> 00:14:43,500
function between the function call and

325
00:14:43,500 --> 00:14:45,580
between the source function and the

326
00:14:45,580 --> 00:14:46,300
target function

327
00:14:46,300 --> 00:14:48,040
the detour function would then perform

328
00:14:48,040 --> 00:14:50,200
the stealing of information which would

329
00:14:50,200 --> 00:14:53,140
either go into the API or come out as a

330
00:14:53,140 --> 00:14:56,590
return value from the call API and sniff

331
00:14:56,590 --> 00:14:58,870
this information on the run between the

332
00:14:58,870 --> 00:15:00,240
source function and the target function

333
00:15:00,240 --> 00:15:02,500
also necessary is a trampling function

334
00:15:02,500 --> 00:15:04,510
to do the cleanup after the detail

335
00:15:04,510 --> 00:15:08,130
function and the sure flawless execution

336
00:15:08,130 --> 00:15:11,290
throughout the hook here is our hook and

337
00:15:11,290 --> 00:15:13,870
but bar would do this for its internet

338
00:15:13,870 --> 00:15:15,130
communication for its file creation and

339
00:15:15,130 --> 00:15:17,710
for audio streams on the system to have

340
00:15:17,710 --> 00:15:20,050
a maximum impact on information going in

341
00:15:20,050 --> 00:15:25,420
that of the machine the next actor on

342
00:15:25,420 --> 00:15:28,630
stage is now Casper Casper's want in

343
00:15:28,630 --> 00:15:30,820
your binaries thankfully it is covered

344
00:15:30,820 --> 00:15:32,950
by Shannon Calvet

345
00:15:32,950 --> 00:15:35,890
who was willing to share this planet

346
00:15:35,890 --> 00:15:39,700
with me CRISPR is a recognizance malware

347
00:15:39,700 --> 00:15:44,110
namely malware which is just intended to

348
00:15:44,110 --> 00:15:47,440
snoop on information about the infected

349
00:15:47,440 --> 00:15:50,770
platform and about the user using the in

350
00:15:50,770 --> 00:15:53,110
fact a platform to enable the attacker

351
00:15:53,110 --> 00:15:54,970
to determine if this is an interesting

352
00:15:54,970 --> 00:15:57,550
target and potentially install more

353
00:15:57,550 --> 00:16:00,750
sophisticated malware or to ignore this

354
00:16:00,750 --> 00:16:03,970
infected machine totally interesting

355
00:16:03,970 --> 00:16:06,220
part about Casper was that it had a

356
00:16:06,220 --> 00:16:09,970
snooping model which would design

357
00:16:09,970 --> 00:16:13,270
antivirus evasion strategies so based on

358
00:16:13,270 --> 00:16:14,740
which antivirus product was installed

359
00:16:14,740 --> 00:16:17,440
and system Casper would either change

360
00:16:17,440 --> 00:16:19,450
his persistent method or change its

361
00:16:19,450 --> 00:16:22,120
presence action method to escape the

362
00:16:22,120 --> 00:16:24,190
dedicated antivirus product installed on

363
00:16:24,190 --> 00:16:28,030
the system Casper was poking in Syria

364
00:16:28,030 --> 00:16:29,500
which was probably the most interesting

365
00:16:29,500 --> 00:16:31,600
part for us it was discovered in 2014

366
00:16:31,600 --> 00:16:34,420
being spread through a watering hole the

367
00:16:34,420 --> 00:16:36,960
watering hole was hosted on the Syrian

368
00:16:36,960 --> 00:16:41,770
Ministry of Justice website and would

369
00:16:41,770 --> 00:16:43,960
make use of in total two zero day

370
00:16:43,960 --> 00:16:47,350
exploits being used to infect the

371
00:16:47,350 --> 00:16:52,360
dedicated target machines the data being

372
00:16:52,360 --> 00:16:54,730
exerted by Casper involved information

373
00:16:54,730 --> 00:16:56,200
about the system and information about

374
00:16:56,200 --> 00:16:58,000
the user that was logged in any user

375
00:16:58,000 --> 00:17:00,820
name and about the running processes on

376
00:17:00,820 --> 00:17:03,340
the system and also some information

377
00:17:03,340 --> 00:17:08,170
from the Windows registry the last

378
00:17:08,170 --> 00:17:10,510
sector I wanted to be speaking about

379
00:17:10,510 --> 00:17:11,579
today is Dino

380
00:17:11,579 --> 00:17:15,190
there is another espionage toolkit or

381
00:17:15,190 --> 00:17:19,089
and another espionage version with

382
00:17:19,089 --> 00:17:21,699
numbers features we found detections

383
00:17:21,699 --> 00:17:25,119
read in Iran 2013 which makes it a

384
00:17:25,119 --> 00:17:29,470
rather recent operation the other in

385
00:17:29,470 --> 00:17:32,260
total also shows its since the commands

386
00:17:32,260 --> 00:17:35,110
in clear text we could see that it's my

387
00:17:35,110 --> 00:17:39,220
intention was to do extensive espionage

388
00:17:39,220 --> 00:17:41,440
on the file system of the infected

389
00:17:41,440 --> 00:17:44,230
machine but would also download and

390
00:17:44,230 --> 00:17:46,240
execute further executables and

391
00:17:46,240 --> 00:17:49,600
install Chrome tasks as Spidey before

392
00:17:49,600 --> 00:17:52,269
not to mention that on Windows there are

393
00:17:52,269 --> 00:17:54,220
in generally cron tasks but rather

394
00:17:54,220 --> 00:17:57,190
scheduled tasks but the developers still

395
00:17:57,190 --> 00:18:02,049
used that kind of term and also you know

396
00:18:02,049 --> 00:18:03,940
would have a very interesting way of

397
00:18:03,940 --> 00:18:06,159
storing snooped information on the

398
00:18:06,159 --> 00:18:08,740
system designing its own kind of file

399
00:18:08,740 --> 00:18:15,220
system to store its data altogether the

400
00:18:15,220 --> 00:18:18,249
presented numbers are not highly

401
00:18:18,249 --> 00:18:21,570
technically interesting but very

402
00:18:21,570 --> 00:18:23,830
effective because we were uncovered for

403
00:18:23,830 --> 00:18:26,139
a long time but they were not not

404
00:18:26,139 --> 00:18:31,450
discovered for a long time and certainly

405
00:18:31,450 --> 00:18:34,809
their sophistication was enough for the

406
00:18:34,809 --> 00:18:38,889
purpose they were designed to do how did

407
00:18:38,889 --> 00:18:40,360
we find out these binaries are all

408
00:18:40,360 --> 00:18:42,730
linked together that was from a

409
00:18:42,730 --> 00:18:45,299
engineers point of view fairly easy but

410
00:18:45,299 --> 00:18:47,379
after publishing our model we had

411
00:18:47,379 --> 00:18:50,289
trouble explaining to our peers why we

412
00:18:50,289 --> 00:18:56,440
were so sure that the supposed extra

413
00:18:56,440 --> 00:18:59,350
which is said to be the French

414
00:18:59,350 --> 00:19:01,090
government would use denial of service

415
00:19:01,090 --> 00:19:03,789
pots or while you would use recognition

416
00:19:03,789 --> 00:19:06,519
over in Syria so we came up with a

417
00:19:06,519 --> 00:19:10,440
system to prove our our binary linking

418
00:19:10,440 --> 00:19:13,480
which is based on the idea that of

419
00:19:13,480 --> 00:19:15,460
course attributes within the binary can

420
00:19:15,460 --> 00:19:16,809
be faked so attributes can be linked

421
00:19:16,809 --> 00:19:19,539
together like binaries a question so how

422
00:19:19,539 --> 00:19:22,450
many can be faked and our our idea was

423
00:19:22,450 --> 00:19:24,549
to just collect as many attributes as we

424
00:19:24,549 --> 00:19:26,470
could to show the overlapping ones and

425
00:19:26,470 --> 00:19:29,710
prove our our conclusions without any

426
00:19:29,710 --> 00:19:31,720
doubt so we collected many many

427
00:19:31,720 --> 00:19:33,460
attributes from different domains to

428
00:19:33,460 --> 00:19:35,619
show that our binaries all belonged

429
00:19:35,619 --> 00:19:38,169
together to the same ten factor because

430
00:19:38,169 --> 00:19:40,389
the problem that we had basically with

431
00:19:40,389 --> 00:19:43,419
our Miller was that through the leaked

432
00:19:43,419 --> 00:19:46,480
document we had one link for babar to

433
00:19:46,480 --> 00:19:47,860
the alleged actor a french government

434
00:19:47,860 --> 00:19:50,320
but we didn't have a link for any of the

435
00:19:50,320 --> 00:19:52,600
other binaries to be analyzed so we

436
00:19:52,600 --> 00:19:55,090
still needed a way to prove that all the

437
00:19:55,090 --> 00:19:58,269
families that we found were being

438
00:19:58,269 --> 00:19:59,399
written and/or

439
00:19:59,399 --> 00:20:03,929
operated by the same actor so we came up

440
00:20:03,929 --> 00:20:06,539
with a long list of attributes which you

441
00:20:06,539 --> 00:20:09,269
can probably not read on the slide but

442
00:20:09,269 --> 00:20:12,479
if you're interested in how methodology

443
00:20:12,479 --> 00:20:14,249
works in detail there is two different

444
00:20:14,249 --> 00:20:17,039
papers every one the virus protein paper

445
00:20:17,039 --> 00:20:19,950
I published here and another paper we

446
00:20:19,950 --> 00:20:22,019
published in summer blanket where the

447
00:20:22,019 --> 00:20:24,419
entire list of attributes is outlined

448
00:20:24,419 --> 00:20:27,629
basically we try to collect attributes

449
00:20:27,629 --> 00:20:29,309
from binary structures we collect

450
00:20:29,309 --> 00:20:31,019
attributes from the strings being used

451
00:20:31,019 --> 00:20:33,509
in the binaries another set of

452
00:20:33,509 --> 00:20:36,080
attributes from the infrastructure the

453
00:20:36,080 --> 00:20:39,359
scene ceasers such as location or domain

454
00:20:39,359 --> 00:20:42,330
names and put all these attributes

455
00:20:42,330 --> 00:20:44,969
together to see if there's any overlaps

456
00:20:44,969 --> 00:20:47,519
with in our extracted features here you

457
00:20:47,519 --> 00:20:49,169
can see a spreadsheet um how I

458
00:20:49,169 --> 00:20:53,639
sophisticated science where I outlined

459
00:20:53,639 --> 00:20:55,440
the overlaps with color and as you can

460
00:20:55,440 --> 00:20:56,669
see there's a lot of color in

461
00:20:56,669 --> 00:20:58,739
spreadsheet which indicates the pioneers

462
00:20:58,739 --> 00:21:03,330
have a lot of overlap all this together

463
00:21:03,330 --> 00:21:06,479
enabled us to do our binary Halawa tree

464
00:21:06,479 --> 00:21:09,149
and Link babar to bunny from bunny to

465
00:21:09,149 --> 00:21:11,009
and bud from Android to Casper to Dino

466
00:21:11,009 --> 00:21:13,200
back to end but which leaves us with the

467
00:21:13,200 --> 00:21:18,149
question why would anyone care to create

468
00:21:18,149 --> 00:21:21,869
no of service pots if he has such a

469
00:21:21,869 --> 00:21:25,849
sophisticated set of his pinners toes

470
00:21:25,849 --> 00:21:29,039
however another interesting aspect of

471
00:21:29,039 --> 00:21:31,080
the discovered manner with peculiar IDs

472
00:21:31,080 --> 00:21:34,139
in how the actors implemented their

473
00:21:34,139 --> 00:21:36,179
binaries they need to work a lot of

474
00:21:36,179 --> 00:21:41,039
parks within the uncovered malware which

475
00:21:41,039 --> 00:21:42,629
you would not expect from a

476
00:21:42,629 --> 00:21:44,659
sophisticated actor however

477
00:21:44,659 --> 00:21:47,789
interestingly the proxy bypass method

478
00:21:47,789 --> 00:21:49,769
which was shared through a lot of

479
00:21:49,769 --> 00:21:52,830
different allows different samples

480
00:21:52,830 --> 00:21:55,950
within the uncovered set would care for

481
00:21:55,950 --> 00:21:57,200
a bypass around

482
00:21:57,200 --> 00:21:59,909
Firefox and Internet Explorer but would

483
00:21:59,909 --> 00:22:02,039
not think about any other potential

484
00:22:02,039 --> 00:22:04,139
browsers being used by the dedicated

485
00:22:04,139 --> 00:22:08,339
targets furthermore babar would be

486
00:22:08,339 --> 00:22:10,529
started up by an instance of fracas fear

487
00:22:10,529 --> 00:22:12,690
32 which would then as men

488
00:22:12,690 --> 00:22:15,120
and in checked the bar into it several

489
00:22:15,120 --> 00:22:17,490
instances but not care about stopping

490
00:22:17,490 --> 00:22:20,400
the loading process after injecting the

491
00:22:20,400 --> 00:22:20,700
rootkit

492
00:22:20,700 --> 00:22:24,440
so as much as the duck through the bar

493
00:22:24,440 --> 00:22:27,960
binary code they couldn't find any any

494
00:22:27,960 --> 00:22:29,940
method to actually stop the loading

495
00:22:29,940 --> 00:22:35,460
process from executing furthermore there

496
00:22:35,460 --> 00:22:37,590
was one end of the dropper which would

497
00:22:37,590 --> 00:22:39,480
crash in certain conditions namely if

498
00:22:39,480 --> 00:22:41,880
the director containing the executing

499
00:22:41,880 --> 00:22:45,630
dropper would not have write permissions

500
00:22:45,630 --> 00:22:49,430
or explorations through for every action

501
00:22:49,430 --> 00:22:53,390
executing Melbourne so the create file

502
00:22:53,390 --> 00:22:55,380
executed by the dropper on its own

503
00:22:55,380 --> 00:22:59,900
binary would cause the dropper to crash

504
00:23:00,830 --> 00:23:05,460
another pack were not entirely sure that

505
00:23:05,460 --> 00:23:08,370
the bug or feature was within the

506
00:23:08,370 --> 00:23:09,630
beneath wrapper which would drop its

507
00:23:09,630 --> 00:23:13,170
payload and not invoke it Mishra once

508
00:23:13,170 --> 00:23:16,760
has sense considering sandboxes which

509
00:23:16,760 --> 00:23:19,110
usually do not restart during the

510
00:23:19,110 --> 00:23:21,090
instruction process so the sandbox would

511
00:23:21,090 --> 00:23:23,280
not be able to analyze the drop payload

512
00:23:23,280 --> 00:23:25,290
which will only be started after reboot

513
00:23:25,290 --> 00:23:27,540
but also the panty-dropper forgot to

514
00:23:27,540 --> 00:23:29,550
delete its own dropper within the

515
00:23:29,550 --> 00:23:33,870
dropper so the drop pilot would

516
00:23:33,870 --> 00:23:35,100
eventually do lead to dropper but only

517
00:23:35,100 --> 00:23:37,050
after reboot which leaves interesting

518
00:23:37,050 --> 00:23:39,960
artifacts on the infected machine so

519
00:23:39,960 --> 00:23:41,280
it's not entirely sure this was

520
00:23:41,280 --> 00:23:44,220
intention or it's just forgot to delete

521
00:23:44,220 --> 00:23:50,490
their dropper however so much about the

522
00:23:50,490 --> 00:23:52,020
binaries let's look at the attribution

523
00:23:52,020 --> 00:23:54,690
doesn't come from attribution is hard so

524
00:23:54,690 --> 00:23:58,500
we can just conclude based on binary

525
00:23:58,500 --> 00:24:00,210
attributes on where the malware comes

526
00:24:00,210 --> 00:24:03,930
from in fact this is this is extremely

527
00:24:03,930 --> 00:24:06,690
hard to attribute the binary to an actor

528
00:24:06,690 --> 00:24:08,580
just paste in the attributes within the

529
00:24:08,580 --> 00:24:12,690
binary in our case like we had mentioned

530
00:24:12,690 --> 00:24:15,780
documents where the Canadian

531
00:24:15,780 --> 00:24:17,280
intelligence service already did very

532
00:24:17,280 --> 00:24:20,430
good work on the attribution but this in

533
00:24:20,430 --> 00:24:21,930
fact is the only thing that helps us

534
00:24:21,930 --> 00:24:24,210
linking the binaries indeed to the

535
00:24:24,210 --> 00:24:25,780
French intelligence service

536
00:24:25,780 --> 00:24:28,360
attribution is hard many people had

537
00:24:28,360 --> 00:24:30,580
their problems with this in the past and

538
00:24:30,580 --> 00:24:33,520
also some did mistakes in attributing to

539
00:24:33,520 --> 00:24:36,430
actually the the wrong operator here's a

540
00:24:36,430 --> 00:24:40,030
very good example that this excerpt is a

541
00:24:40,030 --> 00:24:43,180
piece of French newspaper talking about

542
00:24:43,180 --> 00:24:45,700
an Australian researcher named very much

543
00:24:45,700 --> 00:24:48,670
like where I have to tell you and not

544
00:24:48,670 --> 00:24:53,560
Australian I'm I'm Austrian however as

545
00:24:53,560 --> 00:24:55,030
mentioned the best attribute in this

546
00:24:55,030 --> 00:24:57,250
case we have is the link from the bar

547
00:24:57,250 --> 00:24:59,770
which was outlined in the CIA document

548
00:24:59,770 --> 00:25:03,090
linking it to the French government with

549
00:25:03,090 --> 00:25:08,920
moderate certainty a very interesting

550
00:25:08,920 --> 00:25:12,360
article about the interests of the

551
00:25:12,360 --> 00:25:14,410
alleged operated the French government

552
00:25:14,410 --> 00:25:16,800
in the targets that have been affected

553
00:25:16,800 --> 00:25:20,380
was published in springtime of this year

554
00:25:20,380 --> 00:25:22,270
by a French researcher named Matias

555
00:25:22,270 --> 00:25:24,460
which who outlines at the French

556
00:25:24,460 --> 00:25:27,640
interest in Iran Syria and the Middle

557
00:25:27,640 --> 00:25:29,380
East what still remains unanswered

558
00:25:29,380 --> 00:25:32,920
though is why the French government

559
00:25:32,920 --> 00:25:35,200
would try to spy on targets in Canada

560
00:25:35,200 --> 00:25:41,710
and potentially in Norway that was it so

561
00:25:41,710 --> 00:25:44,020
far from my side at this point I want to

562
00:25:44,020 --> 00:25:47,920
say my warm-hearted thank you to micro

563
00:25:47,920 --> 00:25:50,500
researchers named John Cabot and powers

564
00:25:50,500 --> 00:25:53,680
can use also supporting was Morgan

565
00:25:53,680 --> 00:25:55,660
Mackay bar and of course Edward Snowden

566
00:25:55,660 --> 00:25:58,240
and the seas like Canada by publishing

567
00:25:58,240 --> 00:26:04,440
their document thank you that's it

568
00:26:08,080 --> 00:26:10,610
thank you if you have more interest in

569
00:26:10,610 --> 00:26:12,049
the topic here's some links for further

570
00:26:12,049 --> 00:26:15,320
reading if you want to analyze the

571
00:26:15,320 --> 00:26:16,789
binaries yourself here is a collection

572
00:26:16,789 --> 00:26:19,520
of passions and that was it if you have

573
00:26:19,520 --> 00:26:20,900
any questions I'm happy to answer them

574
00:26:20,900 --> 00:26:26,390
now Thank You Marian is anybody have any

575
00:26:26,390 --> 00:26:33,169
questions about it to be honest I

576
00:26:33,169 --> 00:26:35,360
thought about it just to just to see

577
00:26:35,360 --> 00:26:37,780
what happens

578
00:26:42,280 --> 00:26:46,780
any questions nope okay I don't see any

579
00:26:46,780 --> 00:26:48,730
but it's quite bright up here so I don't

580
00:26:48,730 --> 00:26:52,960
see any hands okay all right well thank

581
00:26:52,960 --> 00:26:55,010
you very much thank you Mary

582
00:26:55,010 --> 00:27:01,960
[Applause]

