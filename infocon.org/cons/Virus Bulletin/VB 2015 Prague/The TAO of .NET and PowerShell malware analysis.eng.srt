1
00:00:00,030 --> 00:00:03,179
okay we're gonna get things started now

2
00:00:03,179 --> 00:00:05,819
I'd like you to welcome to the stage

3
00:00:05,819 --> 00:00:07,980
Santiago Ponte Rowley and Roberto

4
00:00:07,980 --> 00:00:10,530
Martinez from Kaspersky Lab they will be

5
00:00:10,530 --> 00:00:12,780
presenting the DAO of dotnet and

6
00:00:12,780 --> 00:00:15,660
PowerShell malware analysis okay thank

7
00:00:15,660 --> 00:00:18,720
you very much welcome everyone to the

8
00:00:18,720 --> 00:00:20,100
green room thank you very much for

9
00:00:20,100 --> 00:00:22,560
attending or talk my name is Santiago

10
00:00:22,560 --> 00:00:25,380
Yoli I'm a researcher for Kaspersky Lab

11
00:00:25,380 --> 00:00:27,300
Argentina and this is my colleague

12
00:00:27,300 --> 00:00:30,080
Roberto Martinez Kaspersky Lab Mexico

13
00:00:30,080 --> 00:00:33,180
before joining Kaspersky I was working

14
00:00:33,180 --> 00:00:36,690
as a developer for dotnet so from write

15
00:00:36,690 --> 00:00:39,180
the beginning I knew the power that this

16
00:00:39,180 --> 00:00:42,570
platform had I was using it obviously

17
00:00:42,570 --> 00:00:44,879
for relation to my purposes not what I'm

18
00:00:44,879 --> 00:00:46,739
going to show you now but nevertheless

19
00:00:46,739 --> 00:00:49,860
this is a very powerful tool and the

20
00:00:49,860 --> 00:00:53,699
reality is that this story started many

21
00:00:53,699 --> 00:00:57,539
many years ago it was in this same city

22
00:00:57,539 --> 00:01:01,050
in the year 2001 in in this conference

23
00:01:01,050 --> 00:01:04,080
in Virus Bulletin at 2001 were two

24
00:01:04,080 --> 00:01:07,979
researchers presented about dotnet and

25
00:01:07,979 --> 00:01:10,350
if it was going to become the next

26
00:01:10,350 --> 00:01:13,500
battleground and what did they mean by

27
00:01:13,500 --> 00:01:15,990
that they were proposing a new type of

28
00:01:15,990 --> 00:01:18,270
cybercrime or a new type of cyber

29
00:01:18,270 --> 00:01:22,380
criminal one that didn't mean the the

30
00:01:22,380 --> 00:01:24,420
technical abilities you know to to

31
00:01:24,420 --> 00:01:26,850
really no assembly code really get into

32
00:01:26,850 --> 00:01:30,930
the detail of every malware sample so

33
00:01:30,930 --> 00:01:35,540
let's go back in time just a little bit

34
00:01:35,720 --> 00:01:39,570
this is from the year 2002 maybe some

35
00:01:39,570 --> 00:01:42,150
you remember this electronic magazine

36
00:01:42,150 --> 00:01:44,909
the ischium from the twenty nine eight

37
00:01:44,909 --> 00:01:48,600
group and in this particular article a

38
00:01:48,600 --> 00:01:50,880
marvel writer here from Czech Republic

39
00:01:50,880 --> 00:01:55,229
also he wrote about prepended virus that

40
00:01:55,229 --> 00:01:59,100
he called oh really we called donut no

41
00:01:59,100 --> 00:02:01,170
it was actually really simple it was

42
00:02:01,170 --> 00:02:03,960
written mainly in assembly code and some

43
00:02:03,960 --> 00:02:06,200
intermediate language code from dotnet

44
00:02:06,200 --> 00:02:09,060
but the reality is that he wanted to

45
00:02:09,060 --> 00:02:11,760
show that it was possible to infect a

46
00:02:11,760 --> 00:02:13,330
dotnet executable

47
00:02:13,330 --> 00:02:17,920
and he did this by just modifying five

48
00:02:17,920 --> 00:02:24,490
bytes of the initialization header so he

49
00:02:24,490 --> 00:02:27,400
changed the way that the executable file

50
00:02:27,400 --> 00:02:30,910
was calling the execution engine and in

51
00:02:30,910 --> 00:02:33,460
this way he was able to inject code and

52
00:02:33,460 --> 00:02:36,940
then after doing this he was able to

53
00:02:36,940 --> 00:02:39,760
return back to the original code so it

54
00:02:39,760 --> 00:02:42,550
was a pretty simple pretty innocent

55
00:02:42,550 --> 00:02:46,090
example of total net malware and then we

56
00:02:46,090 --> 00:02:49,420
saw just a bit later on another code or

57
00:02:49,420 --> 00:02:51,520
another malware that we named shar-pei

58
00:02:51,520 --> 00:02:54,730
just as the dog and it was the first

59
00:02:54,730 --> 00:02:57,100
malware that was written entirely in a

60
00:02:57,100 --> 00:02:59,140
dotnet compliant language it was written

61
00:02:59,140 --> 00:03:02,380
in C sharp so it proved that it was very

62
00:03:02,380 --> 00:03:04,990
easy for someone with limited knowledge

63
00:03:04,990 --> 00:03:09,220
to write malware and from then on our

64
00:03:09,220 --> 00:03:16,180
lives became a lot harder so we're

65
00:03:16,180 --> 00:03:18,250
talking about malware but the reality is

66
00:03:18,250 --> 00:03:20,110
that malware writers want to write

67
00:03:20,110 --> 00:03:21,970
something that works on the victims

68
00:03:21,970 --> 00:03:25,360
computers and we the adoption of the.net

69
00:03:25,360 --> 00:03:26,050
framework

70
00:03:26,050 --> 00:03:29,950
especially since Microsoft started using

71
00:03:29,950 --> 00:03:32,410
it by default since Windows XP service

72
00:03:32,410 --> 00:03:36,310
pack 2 the adoption has been over 90% of

73
00:03:36,310 --> 00:03:39,130
Windows PCs already have the franco

74
00:03:39,130 --> 00:03:42,910
result so in the past if you were like a

75
00:03:42,910 --> 00:03:44,830
criminal thinking you know what can I do

76
00:03:44,830 --> 00:03:47,350
to infect the machine maybe you will

77
00:03:47,350 --> 00:03:50,200
think how this thing doesn't sound to

78
00:03:50,200 --> 00:03:52,720
whose I mean you need the dependency you

79
00:03:52,720 --> 00:03:54,070
need to download the framework that's

80
00:03:54,070 --> 00:03:57,610
like 40 megabytes no it doesn't work but

81
00:03:57,610 --> 00:03:59,410
nowadays you already have it in your

82
00:03:59,410 --> 00:04:02,020
computer and this is very easy for a

83
00:04:02,020 --> 00:04:04,780
cyber criminal to leverage you have a

84
00:04:04,780 --> 00:04:07,510
lot of already implemented libraries and

85
00:04:07,510 --> 00:04:09,400
as we have seen with the case of

86
00:04:09,400 --> 00:04:10,150
ransomware

87
00:04:10,150 --> 00:04:13,030
the bad guys don't need to call their

88
00:04:13,030 --> 00:04:13,209
own

89
00:04:13,209 --> 00:04:16,329
encryption schemes they just reuse what

90
00:04:16,329 --> 00:04:19,089
is already done by murder Microsoft

91
00:04:19,089 --> 00:04:22,300
engineers so we talked about the

92
00:04:22,300 --> 00:04:24,970
adoption of the framework but what about

93
00:04:24,970 --> 00:04:27,360
the other side the malware side

94
00:04:27,360 --> 00:04:33,190
so from the year 2009 we have less than

95
00:04:33,190 --> 00:04:36,550
1 million unique detections then in the

96
00:04:36,550 --> 00:04:39,669
year 2010 we have just over two million

97
00:04:39,669 --> 00:04:42,789
unique detections and then from that

98
00:04:42,789 --> 00:04:45,159
year to the next one it just exploded

99
00:04:45,159 --> 00:04:47,979
and why do I think this was the case

100
00:04:47,979 --> 00:04:52,330
well in 2010 Microsoft released Visual

101
00:04:52,330 --> 00:04:54,990
Studio 2010 and the dotnet framework

102
00:04:54,990 --> 00:04:58,810
version 4 and with that version with

103
00:04:58,810 --> 00:05:02,080
Visual Studio they just released a

104
00:05:02,080 --> 00:05:04,690
version that anyone could use freely and

105
00:05:04,690 --> 00:05:08,080
this was very powerful for any developer

106
00:05:08,080 --> 00:05:09,909
that really wants to cause and do

107
00:05:09,909 --> 00:05:12,880
applications quickly but the weather

108
00:05:12,880 --> 00:05:14,949
guys thought ok and maybe I can use this

109
00:05:14,949 --> 00:05:17,349
too I mean it's really easy to use right

110
00:05:17,349 --> 00:05:22,719
so nowadays we are seeing over 40 14

111
00:05:22,719 --> 00:05:25,379
million detection unique detections and

112
00:05:25,379 --> 00:05:28,270
this statistic was taken just before

113
00:05:28,270 --> 00:05:31,300
coming to the conference I took this

114
00:05:31,300 --> 00:05:35,099
same chart when I sent the paper and

115
00:05:35,099 --> 00:05:39,159
2015 was like 8 million then I took it

116
00:05:39,159 --> 00:05:42,159
before coming here and it was over 14

117
00:05:42,159 --> 00:05:44,289
million so let's wait to see what

118
00:05:44,289 --> 00:05:49,419
happens to the end of the year so this

119
00:05:49,419 --> 00:05:51,729
has been an increase of over 1,600

120
00:05:51,729 --> 00:05:55,479
percent that's a lot of detections just

121
00:05:55,479 --> 00:05:58,120
for dotnet malware and it's making our

122
00:05:58,120 --> 00:06:02,529
lives very complicated because of course

123
00:06:02,529 --> 00:06:04,630
you have automated systems of course you

124
00:06:04,630 --> 00:06:07,060
have the analyst researching into these

125
00:06:07,060 --> 00:06:09,880
samples but the bad guys are still ahead

126
00:06:09,880 --> 00:06:11,979
they know that they can't change the

127
00:06:11,979 --> 00:06:14,979
code so quickly that you're not able to

128
00:06:14,979 --> 00:06:16,630
provide with dictation so we need

129
00:06:16,630 --> 00:06:21,729
something else so I talked about that

130
00:06:21,729 --> 00:06:24,490
90% of Windows PCs have the framework

131
00:06:24,490 --> 00:06:26,889
installed but when it comes to the

132
00:06:26,889 --> 00:06:30,880
attackers what do they target oh I mean

133
00:06:30,880 --> 00:06:33,190
what Microsoft systems are they are

134
00:06:33,190 --> 00:06:36,159
after in the first place we have Windows

135
00:06:36,159 --> 00:06:40,159
7 then we have XP still

136
00:06:40,159 --> 00:06:42,559
and then windows 8.1 and I don't know

137
00:06:42,559 --> 00:06:44,270
why there are still some people using

138
00:06:44,270 --> 00:06:46,909
Vista but it appears there you know

139
00:06:46,909 --> 00:06:51,679
these are the statistics so right now we

140
00:06:51,679 --> 00:06:54,019
are seeing infections in Windows systems

141
00:06:54,019 --> 00:06:57,319
but Microsoft released parts of the

142
00:06:57,319 --> 00:07:00,589
dotnet framework as open source and we

143
00:07:00,589 --> 00:07:02,389
have seen implementation implementations

144
00:07:02,389 --> 00:07:06,219
such as mono and other frameworks that

145
00:07:06,219 --> 00:07:09,469
are compliant with the dotnet original

146
00:07:09,469 --> 00:07:13,669
framework so you can use this in Linux

147
00:07:13,669 --> 00:07:15,289
you can use it in your mobile phone you

148
00:07:15,289 --> 00:07:18,229
have the dotnet framework or micro

149
00:07:18,229 --> 00:07:20,839
framework if you are into using it with

150
00:07:20,839 --> 00:07:22,669
your Raspberry Pi whatever

151
00:07:22,669 --> 00:07:27,919
so the platforms and the systems they

152
00:07:27,919 --> 00:07:31,599
are after keeps increasing and expanding

153
00:07:31,599 --> 00:07:35,659
and what are the usual suspects I mean

154
00:07:35,659 --> 00:07:38,360
when it comes to malware classification

155
00:07:38,360 --> 00:07:41,089
in the first place we have toolbars and

156
00:07:41,089 --> 00:07:44,509
adware when I took this statistic I

157
00:07:44,509 --> 00:07:47,269
thought okay maybe this is wrong but the

158
00:07:47,269 --> 00:07:50,329
reality is that this comes in the first

159
00:07:50,329 --> 00:07:55,729
place because another bundle comes with

160
00:07:55,729 --> 00:07:58,159
many components and each component is

161
00:07:58,159 --> 00:08:01,159
detected individually so in our

162
00:08:01,159 --> 00:08:03,589
statistics it appears a lot of times so

163
00:08:03,589 --> 00:08:06,709
it was the first place but for me the

164
00:08:06,709 --> 00:08:09,379
really the most dangerous threat that we

165
00:08:09,379 --> 00:08:11,860
can find in the dotnet ecosystem our

166
00:08:11,860 --> 00:08:17,599
traditions and why Trojans I mean it's

167
00:08:17,599 --> 00:08:20,860
just so easy to disguise an application

168
00:08:20,860 --> 00:08:24,229
a legitimate application and make it

169
00:08:24,229 --> 00:08:26,569
look and feel like a legitimate

170
00:08:26,569 --> 00:08:29,569
application and then bundle something

171
00:08:29,569 --> 00:08:32,089
malicious inside it I'm going to talk a

172
00:08:32,089 --> 00:08:34,188
little bit about the Syrian malware

173
00:08:34,188 --> 00:08:37,099
campaign and if you see the samples you

174
00:08:37,099 --> 00:08:38,990
will notice that they spend more time

175
00:08:38,990 --> 00:08:41,568
working with the look and feel and the

176
00:08:41,568 --> 00:08:43,519
graphics of the application than in the

177
00:08:43,519 --> 00:08:47,000
code they just embed dark comet or any

178
00:08:47,000 --> 00:08:49,250
other remote administration tool and

179
00:08:49,250 --> 00:08:50,269
they just forget it

180
00:08:50,269 --> 00:08:53,569
they just need something that looks

181
00:08:53,569 --> 00:08:55,829
not suspicious that you're going to

182
00:08:55,829 --> 00:09:01,499
double click and just forget it so from

183
00:09:01,499 --> 00:09:04,049
our side from our perspective what's

184
00:09:04,049 --> 00:09:06,660
important about dotnet and how it works

185
00:09:06,660 --> 00:09:12,389
well when you are programming in dotnet

186
00:09:12,389 --> 00:09:15,739
whether it's visual basic.net or c-sharp

187
00:09:15,739 --> 00:09:18,600
all the code that you do when it's

188
00:09:18,600 --> 00:09:20,549
compiled it's compiled into an

189
00:09:20,549 --> 00:09:22,739
intermediate language code and this code

190
00:09:22,739 --> 00:09:26,369
it's something that is compiled in real

191
00:09:26,369 --> 00:09:29,910
time by module from the CLR from the

192
00:09:29,910 --> 00:09:34,319
runtime environment and what this means

193
00:09:34,319 --> 00:09:37,169
is that we sometimes doing the analysis

194
00:09:37,169 --> 00:09:39,149
we can get back the original source code

195
00:09:39,149 --> 00:09:43,619
or something that resembles it but what

196
00:09:43,619 --> 00:09:45,689
I find more interesting and this has

197
00:09:45,689 --> 00:09:48,600
helped many investigations is that the

198
00:09:48,600 --> 00:09:51,119
bad guys forget that dotnet embeds

199
00:09:51,119 --> 00:09:55,319
metadata into executable file so there

200
00:09:55,319 --> 00:09:57,239
is a lot of information there not only

201
00:09:57,239 --> 00:09:59,850
where it was compiled but about the

202
00:09:59,850 --> 00:10:03,449
machine itself so we all have seen many

203
00:10:03,449 --> 00:10:05,369
samples but they just forget the debug

204
00:10:05,369 --> 00:10:07,470
information but what about the metadata

205
00:10:07,470 --> 00:10:14,249
and I'm going to talk about some

206
00:10:14,249 --> 00:10:16,019
examples I think are the most

207
00:10:16,019 --> 00:10:18,809
representative in the.net ecosystem this

208
00:10:18,809 --> 00:10:24,509
was one that is not entirely new but now

209
00:10:24,509 --> 00:10:26,970
we are seeing like the revamped the new

210
00:10:26,970 --> 00:10:33,209
version this is Pluto's Pluto's is an

211
00:10:33,209 --> 00:10:35,549
ATM malware that first was spotted in

212
00:10:35,549 --> 00:10:38,339
Mexico and the interesting thing about

213
00:10:38,339 --> 00:10:41,299
this sample is that the first version

214
00:10:41,299 --> 00:10:44,850
needed a key code type into the ATM to

215
00:10:44,850 --> 00:10:46,980
open this graphical user interface and

216
00:10:46,980 --> 00:10:48,839
then you will click it and it would

217
00:10:48,839 --> 00:10:52,139
dispense the money so in this case the

218
00:10:52,139 --> 00:10:54,269
bad guys weren't cloning your debit card

219
00:10:54,269 --> 00:10:56,160
or were and after the clients they were

220
00:10:56,160 --> 00:11:00,029
after the bank so briefly after we

221
00:11:00,029 --> 00:11:03,110
publish the report they started changing

222
00:11:03,110 --> 00:11:04,730
plotters

223
00:11:04,730 --> 00:11:07,640
and they removed all the references for

224
00:11:07,640 --> 00:11:10,070
Spanish language because we knew it was

225
00:11:10,070 --> 00:11:12,260
from Mexico but they thought okay maybe

226
00:11:12,260 --> 00:11:14,360
if I remove all the Mexican parts they

227
00:11:14,360 --> 00:11:16,270
will just think it's from somewhere else

228
00:11:16,270 --> 00:11:19,400
so they did that and they thought okay

229
00:11:19,400 --> 00:11:21,350
maybe this graphical user interface

230
00:11:21,350 --> 00:11:24,140
looks quite suspicious if someone is

231
00:11:24,140 --> 00:11:26,750
looking at the ATM so what I did they

232
00:11:26,750 --> 00:11:29,270
remove this and they implemented another

233
00:11:29,270 --> 00:11:33,710
module to receive SMS codes so if you

234
00:11:33,710 --> 00:11:35,690
were the criminal you would just use

235
00:11:35,690 --> 00:11:39,440
your cell phone and type a key code and

236
00:11:39,440 --> 00:11:41,060
they the machine would dispense the

237
00:11:41,060 --> 00:11:42,650
money you would just need to look around

238
00:11:42,650 --> 00:11:48,980
that no one was there so this sample for

239
00:11:48,980 --> 00:11:51,080
me is a special because it shows the

240
00:11:51,080 --> 00:11:53,540
power of using dotnet for quick

241
00:11:53,540 --> 00:11:56,690
modifications they relied also on open

242
00:11:56,690 --> 00:11:59,330
source utilities so they were out

243
00:11:59,330 --> 00:12:02,690
skating this malware with confused which

244
00:12:02,690 --> 00:12:06,710
is a popular metal for just screw in

245
00:12:06,710 --> 00:12:09,410
every researchers life and then they

246
00:12:09,410 --> 00:12:12,140
also relied on another dll that was

247
00:12:12,140 --> 00:12:14,090
freely available to interface with the

248
00:12:14,090 --> 00:12:16,370
ATM machine they didn't need to be

249
00:12:16,370 --> 00:12:19,790
specialists in ATM hardware or anything

250
00:12:19,790 --> 00:12:22,610
they just needed to grab the DLL grab

251
00:12:22,610 --> 00:12:25,100
the discussion and just to kind of a

252
00:12:25,100 --> 00:12:30,500
nice interface for them to use then we

253
00:12:30,500 --> 00:12:33,230
have more serious threats in this case

254
00:12:33,230 --> 00:12:35,090
this is a sample from the Syrian malware

255
00:12:35,090 --> 00:12:39,200
campaign and again this is a very basic

256
00:12:39,200 --> 00:12:43,340
sample but they used a combination of

257
00:12:43,340 --> 00:12:45,290
social engineering because they were

258
00:12:45,290 --> 00:12:47,420
telling people on YouTube you know if

259
00:12:47,420 --> 00:12:49,610
you don't want to get prosecuted by the

260
00:12:49,610 --> 00:12:53,030
Syrian government download this excel

261
00:12:53,030 --> 00:12:54,830
spreadsheet so you would download this

262
00:12:54,830 --> 00:12:57,710
and this would open an Excel spreadsheet

263
00:12:57,710 --> 00:13:00,680
which contained all the lists of the

264
00:13:00,680 --> 00:13:03,140
Syrian citizens that were thought after

265
00:13:03,140 --> 00:13:05,110
the government or the government wanted

266
00:13:05,110 --> 00:13:08,270
the realities that this list was freely

267
00:13:08,270 --> 00:13:10,850
available I mean was leaked like months

268
00:13:10,850 --> 00:13:13,520
ago before this but still people like

269
00:13:13,520 --> 00:13:16,160
were afraid so they downloaded anything

270
00:13:16,160 --> 00:13:19,490
you'll find to protect themselves after

271
00:13:19,490 --> 00:13:21,829
you click on this you get tar comet in

272
00:13:21,829 --> 00:13:26,569
your computer just very simply and as

273
00:13:26,569 --> 00:13:28,519
you can see there are just too many

274
00:13:28,519 --> 00:13:31,129
videos that ask you to install something

275
00:13:31,129 --> 00:13:34,160
and for each video you have a lot of

276
00:13:34,160 --> 00:13:36,889
different utilities some I'll really

277
00:13:36,889 --> 00:13:39,759
miss spelled like Amazon with em or

278
00:13:39,759 --> 00:13:44,259
using Skype encryption with Latin I so

279
00:13:44,259 --> 00:13:46,879
they don't even care about the English

280
00:13:46,879 --> 00:13:49,490
they just wanted to look and feel nice

281
00:13:49,490 --> 00:13:52,029
so you have messenger messenger

282
00:13:52,029 --> 00:13:55,790
applications utilities has a firewall or

283
00:13:55,790 --> 00:13:59,420
SSH PBM because that were people

284
00:13:59,420 --> 00:14:01,639
citizens from Syria were looking at that

285
00:14:01,639 --> 00:14:04,339
time and with dotnet they were able to

286
00:14:04,339 --> 00:14:06,709
create these samples very quickly I mean

287
00:14:06,709 --> 00:14:08,810
every day you would wake up and check

288
00:14:08,810 --> 00:14:10,459
your error rules and you would see

289
00:14:10,459 --> 00:14:15,310
what's this what's up for oh not again

290
00:14:15,310 --> 00:14:19,100
so we talked briefly about ransomware

291
00:14:19,100 --> 00:14:23,060
and in the case of dotnet we have seen

292
00:14:23,060 --> 00:14:26,149
that the ransom were created using this

293
00:14:26,149 --> 00:14:30,560
platform it's very powerful I mean the

294
00:14:30,560 --> 00:14:32,899
guys at Microsoft did a wonderful job at

295
00:14:32,899 --> 00:14:35,630
really getting the cripton scheme

296
00:14:35,630 --> 00:14:39,740
correct so the case with coin vault was

297
00:14:39,740 --> 00:14:42,850
that the bad guys forgot many clues

298
00:14:42,850 --> 00:14:46,490
inside the samples and this led us to

299
00:14:46,490 --> 00:14:48,980
provide the information to the

300
00:14:48,980 --> 00:14:50,959
Netherlands police to the hide truck

301
00:14:50,959 --> 00:14:54,199
tech crime unit and they were in charge

302
00:14:54,199 --> 00:14:58,130
first of seizing a couple of servers

303
00:14:58,130 --> 00:15:01,160
that contain decryption keys after they

304
00:15:01,160 --> 00:15:03,649
got this decryption keys we were able to

305
00:15:03,649 --> 00:15:06,380
offer anyone that was infected by con

306
00:15:06,380 --> 00:15:09,250
Balt free utility just decrypt the files

307
00:15:09,250 --> 00:15:12,709
but as someone asked in the previous

308
00:15:12,709 --> 00:15:15,920
presentation if you don't have the key

309
00:15:15,920 --> 00:15:17,930
you can do that so you need the

310
00:15:17,930 --> 00:15:19,850
cooperation with the law enforcement you

311
00:15:19,850 --> 00:15:21,709
need someone to get the keys and you

312
00:15:21,709 --> 00:15:25,550
need to put the bad guys behind bars in

313
00:15:25,550 --> 00:15:28,040
this case two suspects were apprehended

314
00:15:28,040 --> 00:15:29,000
at the end

315
00:15:29,000 --> 00:15:32,750
a long investigation I mean when I first

316
00:15:32,750 --> 00:15:34,880
started this research I published the

317
00:15:34,880 --> 00:15:39,500
post in 2014 so just recently you know

318
00:15:39,500 --> 00:15:42,200
we'd seen some progress but it was worth

319
00:15:42,200 --> 00:15:46,730
it what I found interesting is the first

320
00:15:46,730 --> 00:15:48,650
time I opened this sample and after I

321
00:15:48,650 --> 00:15:51,620
removed all the station and encryption

322
00:15:51,620 --> 00:15:54,190
and it was a pain to just work with this

323
00:15:54,190 --> 00:15:57,860
it said your worst nightmare right now

324
00:15:57,860 --> 00:15:59,900
they are being prosecuted by the law

325
00:15:59,900 --> 00:16:03,950
so I find it quite ironic so this is the

326
00:16:03,950 --> 00:16:08,360
Decrypter that we offered is it going to

327
00:16:08,360 --> 00:16:10,010
end with a ransomware problem no of

328
00:16:10,010 --> 00:16:12,050
course not but I I want to highlight

329
00:16:12,050 --> 00:16:15,620
this that we can provide all the

330
00:16:15,620 --> 00:16:18,020
detection that we want but if we don't

331
00:16:18,020 --> 00:16:21,320
chase I mean we as private company we

332
00:16:21,320 --> 00:16:23,270
can but we can provide information for

333
00:16:23,270 --> 00:16:26,690
the law enforcement to work on I mean we

334
00:16:26,690 --> 00:16:28,280
need to reduce the marvel writer

335
00:16:28,280 --> 00:16:30,530
population because the reality is that

336
00:16:30,530 --> 00:16:34,339
samples will keep on appearing so you

337
00:16:34,339 --> 00:16:35,780
can provide the detection but you also

338
00:16:35,780 --> 00:16:38,240
need to cooperate with other law

339
00:16:38,240 --> 00:16:43,190
enforcement agencies so now I'm going to

340
00:16:43,190 --> 00:16:45,589
switch to Roberto who is going to talk

341
00:16:45,589 --> 00:16:48,080
mainly about powers from malware I have

342
00:16:48,080 --> 00:16:51,830
focus on just the dotnet part but I

343
00:16:51,830 --> 00:16:53,930
really like the presentation from Trend

344
00:16:53,930 --> 00:16:55,730
Micro today that they talked about

345
00:16:55,730 --> 00:16:58,700
fireless Marwar and roberto as a

346
00:16:58,700 --> 00:17:00,920
forensic investigator is going to tell

347
00:17:00,920 --> 00:17:04,069
you about why we have shift shift or

348
00:17:04,069 --> 00:17:07,790
focus from being just an analyst to

349
00:17:07,790 --> 00:17:09,709
forensic investigator because you need

350
00:17:09,709 --> 00:17:11,810
to find clues where there are none

351
00:17:11,810 --> 00:17:14,329
you need to correlate the pickups and

352
00:17:14,329 --> 00:17:16,790
the registry information you need to

353
00:17:16,790 --> 00:17:19,910
find a sample that is just isn't there

354
00:17:19,910 --> 00:17:25,810
so thank you thank you Santi well

355
00:17:25,810 --> 00:17:29,480
interesting things happen when you put

356
00:17:29,480 --> 00:17:34,250
together powerful tools and malicious

357
00:17:34,250 --> 00:17:38,320
actor or a bad guy and as you know

358
00:17:38,320 --> 00:17:41,179
PowerShell is a really really powerful

359
00:17:41,179 --> 00:17:42,080
tool

360
00:17:42,080 --> 00:17:45,169
for example you can create powerful

361
00:17:45,169 --> 00:17:49,940
scripts to automate complicated tasks as

362
00:17:49,940 --> 00:17:54,039
his based on net you can use or extents

363
00:17:54,039 --> 00:17:57,919
extend the possibility to use powerful

364
00:17:57,919 --> 00:18:01,269
powerful libraries from Punto net and

365
00:18:01,269 --> 00:18:05,289
you can interact directly with the

366
00:18:05,289 --> 00:18:10,369
Windows core system so this is the

367
00:18:10,369 --> 00:18:14,239
reason that why the bad guys are put

368
00:18:14,239 --> 00:18:17,350
their attention in PowerShell

369
00:18:17,350 --> 00:18:22,419
particularly so the big question here is

370
00:18:22,419 --> 00:18:26,389
why what kind of things can the

371
00:18:26,389 --> 00:18:29,749
attackers do I mean when an attacker

372
00:18:29,749 --> 00:18:33,710
have access to a computer or when an

373
00:18:33,710 --> 00:18:37,279
attacker want to do lateral movement

374
00:18:37,279 --> 00:18:41,539
what is the big question here well an

375
00:18:41,539 --> 00:18:44,059
attacker can take the control not only

376
00:18:44,059 --> 00:18:48,230
the operating system they can take the

377
00:18:48,230 --> 00:18:51,710
control of the another platforms or

378
00:18:51,710 --> 00:18:56,059
tools for example as you know almost

379
00:18:56,059 --> 00:19:01,429
every Microsoft application supports or

380
00:19:01,429 --> 00:19:06,309
work with PowerShell for example you can

381
00:19:06,309 --> 00:19:13,039
do remote queries to an SQL database you

382
00:19:13,039 --> 00:19:17,690
can manage for example exchange directly

383
00:19:17,690 --> 00:19:20,419
you can have access to the mailboxes you

384
00:19:20,419 --> 00:19:23,659
can create even mailboxes or you can

385
00:19:23,659 --> 00:19:25,960
interact directly with Active Directory

386
00:19:25,960 --> 00:19:31,279
so the problem isn't only to have access

387
00:19:31,279 --> 00:19:34,639
to the computer so what's the next step

388
00:19:34,639 --> 00:19:39,940
after that this is a big question and

389
00:19:39,940 --> 00:19:43,999
this is a good example and how a

390
00:19:43,999 --> 00:19:46,249
potential attacker can take the control

391
00:19:46,249 --> 00:19:48,250
to

392
00:19:48,250 --> 00:19:51,140
multi-platform environments for example

393
00:19:51,140 --> 00:19:56,420
in PowerShell DSS allows the or called

394
00:19:56,420 --> 00:19:59,090
allow the attacker or potential attacker

395
00:19:59,090 --> 00:20:02,600
to have access to another platforms like

396
00:20:02,600 --> 00:20:07,610
likeliness so this open source tool was

397
00:20:07,610 --> 00:20:13,120
created to centralize the operations of

398
00:20:13,120 --> 00:20:16,520
management of different kind of servers

399
00:20:16,520 --> 00:20:20,030
or computers but in a malicious way and

400
00:20:20,030 --> 00:20:22,310
potential a potential attacker can't

401
00:20:22,310 --> 00:20:27,880
call take the control of these computers

402
00:20:27,880 --> 00:20:32,030
at this time it's supported by many

403
00:20:32,030 --> 00:20:36,260
different Linux distributions this is

404
00:20:36,260 --> 00:20:39,850
why PowerShell could be considered like

405
00:20:39,850 --> 00:20:45,770
very powerful malicious tool because the

406
00:20:45,770 --> 00:20:48,580
bad guys can't take advantage of

407
00:20:48,580 --> 00:20:51,910
characteristics for example remoting

408
00:20:51,910 --> 00:20:56,510
access or remoting processing to another

409
00:20:56,510 --> 00:21:01,630
computers or even there are some

410
00:21:01,630 --> 00:21:04,870
security offensive frameworks that

411
00:21:04,870 --> 00:21:09,010
include components where you can create

412
00:21:09,010 --> 00:21:13,610
malicious files poisonous files or you

413
00:21:13,610 --> 00:21:18,490
can create for example phishing emails

414
00:21:18,490 --> 00:21:23,840
overfishing webpage - tricking to the

415
00:21:23,840 --> 00:21:29,990
users so the there is necessary a very

416
00:21:29,990 --> 00:21:32,230
important component in this case as

417
00:21:32,230 --> 00:21:37,930
social engineering because if one user

418
00:21:37,930 --> 00:21:42,200
open an attachment poisoning they gave

419
00:21:42,200 --> 00:21:44,990
the control to the attacker another

420
00:21:44,990 --> 00:21:48,530
important thing is considered there are

421
00:21:48,530 --> 00:21:52,070
many many security offensive frameworks

422
00:21:52,070 --> 00:21:55,430
right now I mean these frameworks were

423
00:21:55,430 --> 00:21:59,350
created to pentesting mainly but

424
00:21:59,350 --> 00:22:01,140
unfortunately

425
00:22:01,140 --> 00:22:05,010
many malware developers are using parts

426
00:22:05,010 --> 00:22:09,440
of these frameworks or are using

427
00:22:09,440 --> 00:22:12,120
components of these frameworks to create

428
00:22:12,120 --> 00:22:15,780
their own versions of the malware some

429
00:22:15,780 --> 00:22:21,860
of these potential attacking tools

430
00:22:21,860 --> 00:22:26,310
allows the attacker to integrate in a

431
00:22:26,310 --> 00:22:31,080
silly way the malicious components so

432
00:22:31,080 --> 00:22:32,580
what's the big deal

433
00:22:32,580 --> 00:22:36,000
there is a big challenge here because we

434
00:22:36,000 --> 00:22:40,140
need to find out how can we detect more

435
00:22:40,140 --> 00:22:43,320
efficiently this kind of attacks because

436
00:22:43,320 --> 00:22:45,900
as you know PowerShell is part of the

437
00:22:45,900 --> 00:22:49,260
patent system is while lasting by

438
00:22:49,260 --> 00:22:52,440
default so sometimes it's really

439
00:22:52,440 --> 00:22:55,560
difficult to detect attacks from the

440
00:22:55,560 --> 00:22:58,890
PowerShell side so it's very important

441
00:22:58,890 --> 00:23:06,330
to know what places can have clues about

442
00:23:06,330 --> 00:23:09,990
an attack so we need to put attention to

443
00:23:09,990 --> 00:23:14,280
information right right directly in the

444
00:23:14,280 --> 00:23:20,790
registry or network traffic or even from

445
00:23:20,790 --> 00:23:27,270
memory so mainly mainly these malicious

446
00:23:27,270 --> 00:23:30,420
or offensive security framework includes

447
00:23:30,420 --> 00:23:33,330
anti forensics capacities for example

448
00:23:33,330 --> 00:23:35,940
there are offensive frameworks that

449
00:23:35,940 --> 00:23:40,680
includes web clients so this word client

450
00:23:40,680 --> 00:23:44,060
download directly the the payload of

451
00:23:44,060 --> 00:23:48,120
legitimate websites to avoid the

452
00:23:48,120 --> 00:23:50,880
blocking or detection and then execute

453
00:23:50,880 --> 00:23:54,450
this code in directly in memory so this

454
00:23:54,450 --> 00:23:58,110
is hard to the techsan sometimes because

455
00:23:58,110 --> 00:24:04,040
we can confuse the normal processing or

456
00:24:04,040 --> 00:24:08,760
with the able processing so another

457
00:24:08,760 --> 00:24:10,580
thing

458
00:24:10,580 --> 00:24:13,250
that includes anti forensic capacities

459
00:24:13,250 --> 00:24:16,279
is the modification to the wreck the

460
00:24:16,279 --> 00:24:19,909
easily modification of policy execution

461
00:24:19,909 --> 00:24:25,429
policy so this code is executed in a

462
00:24:25,429 --> 00:24:33,289
freeway what's next well as we saw

463
00:24:33,289 --> 00:24:38,480
previously there are some platforms that

464
00:24:38,480 --> 00:24:40,779
allows the malware developers to create

465
00:24:40,779 --> 00:24:44,000
one kind of malware that runs directly

466
00:24:44,000 --> 00:24:47,690
in another plataforms for example as we

467
00:24:47,690 --> 00:24:52,610
saw with Java if malware developer

468
00:24:52,610 --> 00:24:57,769
create particular malware in Java this

469
00:24:57,769 --> 00:25:03,860
malware can run in any platform one

470
00:25:03,860 --> 00:25:07,399
example of this is machete machete was

471
00:25:07,399 --> 00:25:10,370
the first apt discovered in Latin

472
00:25:10,370 --> 00:25:12,590
America machete

473
00:25:12,590 --> 00:25:16,419
include included some parts of code

474
00:25:16,419 --> 00:25:19,940
generated by social engineering toolkit

475
00:25:19,940 --> 00:25:23,510
you know so the attackers create this

476
00:25:23,510 --> 00:25:31,059
code to run in Linux OS X or Windows

477
00:25:31,059 --> 00:25:34,730
because this malware was designed to run

478
00:25:34,730 --> 00:25:40,120
in Java environments another thing is

479
00:25:40,120 --> 00:25:44,409
these open-source platforms to create

480
00:25:44,409 --> 00:25:49,370
applications directly net framework and

481
00:25:49,370 --> 00:25:53,240
then make it portable to another

482
00:25:53,240 --> 00:25:58,490
platforms like Linux or OSX or summary

483
00:25:58,490 --> 00:26:02,600
it's another good example that how we

484
00:26:02,600 --> 00:26:05,210
can create a code develop at Internet

485
00:26:05,210 --> 00:26:08,120
and then they make portable to another

486
00:26:08,120 --> 00:26:12,019
platforms so well this was our

487
00:26:12,019 --> 00:26:15,919
presentation and we we want to remark

488
00:26:15,919 --> 00:26:20,090
the importance of put attention in the

489
00:26:20,090 --> 00:26:23,910
rise of the doughnut malware development

490
00:26:23,910 --> 00:26:27,300
and the possibility that malware

491
00:26:27,300 --> 00:26:32,870
developers are including dotnet and

492
00:26:32,870 --> 00:26:36,150
powershell capacities in their malware

493
00:26:36,150 --> 00:26:41,400
samples thank you very much gentlemen we

494
00:26:41,400 --> 00:26:42,960
have about three or four minutes for

495
00:26:42,960 --> 00:26:52,260
questions I'm spotting to see if I see

496
00:26:52,260 --> 00:26:55,400
any hands do we have any questions

497
00:26:56,750 --> 00:27:03,650
everybody wants coffee or beer beer

498
00:27:03,650 --> 00:27:06,780
great thank you very much again will

499
00:27:06,780 --> 00:27:08,850
after the break have a few more sessions

500
00:27:08,850 --> 00:27:12,139
this afternoon please join us

