1
00:00:00,000 --> 00:00:05,279
hello everyone<font color="#E5E5E5"> my presentation is about</font>

2
00:00:02,730 --> 00:00:07,710
the flashback malware on the OS 10

3
00:00:05,279 --> 00:00:10,530
platform for those of you who doesn't

4
00:00:07,710 --> 00:00:12,780
<font color="#E5E5E5">know flashback is a malware that hijacks</font>

5
00:00:10,530 --> 00:00:15,360
Google results and redirect them to

6
00:00:12,780 --> 00:00:18,060
third party advertisers for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> author's</font>

7
00:00:15,360 --> 00:00:21,090
profit it is also<font color="#CCCCCC"> the</font><font color="#E5E5E5"> most successful</font>

8
00:00:18,060 --> 00:00:23,939
malware on the OS 10 platform when it

9
00:00:21,090 --> 00:00:28,948
infected more than 650,000 max around

10
00:00:23,939 --> 00:00:31,590
the world earlier this year so for my

11
00:00:28,949 --> 00:00:37,829
presentation<font color="#CCCCCC"> I will quickly go through</font>

12
00:00:31,590 --> 00:00:40,410
the sorry so for my presentation<font color="#CCCCCC"> I will</font>

13
00:00:37,829 --> 00:00:43,739
quickly go through the infection vector

14
00:00:40,410 --> 00:00:46,468
and the installation then I<font color="#E5E5E5"> will focus</font>

15
00:00:43,739 --> 00:00:51,030
mainly on the main binary particularly

16
00:00:46,469 --> 00:00:53,460
on<font color="#CCCCCC"> the payload routines oh then I will</font>

17
00:00:51,030 --> 00:00:56,070
focus I will finish the presentation by

18
00:00:53,460 --> 00:00:59,760
quickly<font color="#E5E5E5"> going through the remaining</font>

19
00:00:56,070 --> 00:01:04,650
binaries so here<font color="#E5E5E5"> is a summary of a</font>

20
00:00:59,760 --> 00:01:10,229
flashback infection it starts it's<font color="#CCCCCC"> not</font>

21
00:01:04,650 --> 00:01:12,810
soon it starts<font color="#E5E5E5"> when a user visit a</font>

22
00:01:10,229 --> 00:01:16,350
legitimate but compromised website

23
00:01:12,810 --> 00:01:18,900
without their knowledge users are

24
00:01:16,350 --> 00:01:22,740
directed to a malicious website hosting

25
00:01:18,900 --> 00:01:26,009
the flashback malware early on in

26
00:01:22,740 --> 00:01:27,810
flashbacks history users visiting the

27
00:01:26,009 --> 00:01:30,030
malicious website would have seen an

28
00:01:27,810 --> 00:01:32,280
image like this this<font color="#E5E5E5"> is just an image</font>

29
00:01:30,030 --> 00:01:35,820
it's not a real event and on the

30
00:01:32,280 --> 00:01:38,640
background a fake flash player installer

31
00:01:35,820 --> 00:01:41,520
is downloaded and lunch this is where

32
00:01:38,640 --> 00:01:43,470
flashback got its name here the malware

33
00:01:41,520 --> 00:01:47,850
tries to entice the user into installing

34
00:01:43,470 --> 00:01:50,670
it flashback has evolved since then and

35
00:01:47,850 --> 00:01:53,189
has switched to use Java to spread a

36
00:01:50,670 --> 00:01:56,009
more recent social<font color="#E5E5E5"> engineering tactics</font>

37
00:01:53,189 --> 00:02:00,089
employed is to use a self-signed update

38
00:01:56,009 --> 00:02:02,369
pretending<font color="#E5E5E5"> to be from Apple flashback</font>

39
00:02:00,090 --> 00:02:04,829
has also been exploiting vulnerabilities

40
00:02:02,369 --> 00:02:09,030
in Java to spread one of them was

41
00:02:04,829 --> 00:02:11,310
unpatch at that time there<font color="#E5E5E5"> for users</font>

42
00:02:09,030 --> 00:02:13,200
with<font color="#E5E5E5"> Java installed at that time simply</font>

43
00:02:11,310 --> 00:02:18,780
needs<font color="#E5E5E5"> to be unlocked me to get in</font>

44
00:02:13,200 --> 00:02:20,879
upon successful exploitation in a binary

45
00:02:18,780 --> 00:02:23,640
is dropped to the system and executed

46
00:02:20,879 --> 00:02:25,768
this binary is the<font color="#CCCCCC"> same binary as the</font>

47
00:02:23,640 --> 00:02:29,518
fake flash player installer of earlier

48
00:02:25,769 --> 00:02:32,220
variants this binary is responsible for

49
00:02:29,519 --> 00:02:35,580
downloading and installing the rest of

50
00:02:32,220 --> 00:02:39,090
the components<font color="#E5E5E5"> to the system first let's</font>

51
00:02:35,580 --> 00:02:41,430
<font color="#E5E5E5">take a look at the main binary when it</font>

52
00:02:39,090 --> 00:02:44,040
is loaded<font color="#E5E5E5"> by an infected browser domain</font>

53
00:02:41,430 --> 00:02:46,140
binary creates a thread that connects to

54
00:02:44,040 --> 00:02:50,700
one of its update server every several

55
00:02:46,140 --> 00:02:52,619
<font color="#E5E5E5">minutes first it connects to a serve it</font>

56
00:02:50,700 --> 00:02:56,010
connects<font color="#E5E5E5"> loss were found in a hard-coded</font>

57
00:02:52,620 --> 00:02:59,190
disk if none of<font color="#E5E5E5"> the servers</font><font color="#CCCCCC"> in the list</font>

58
00:02:56,010 --> 00:03:02,670
are valid it contacts a<font color="#E5E5E5"> third-party</font>

59
00:02:59,190 --> 00:03:05,609
server to obtain the URL<font color="#CCCCCC"> of the next</font>

60
00:03:02,670 --> 00:03:09,569
update server in the samples analyzed

61
00:03:05,610 --> 00:03:12,090
the<font color="#E5E5E5"> third-party server is mobile twitter</font>

62
00:03:09,569 --> 00:03:14,640
with the hashtag generated using a

63
00:03:12,090 --> 00:03:18,780
custom algorithm based on the current

64
00:03:14,640 --> 00:03:21,569
<font color="#E5E5E5">day in newer variants there's an</font>

65
00:03:18,780 --> 00:03:24,120
additional<font color="#E5E5E5"> set or if the server returned</font>

66
00:03:21,569 --> 00:03:26,130
by the my mobile twitter is still not

67
00:03:24,120 --> 00:03:28,530
valid then flashback will generate an

68
00:03:26,130 --> 00:03:31,139
additional set of C&C server using the

69
00:03:28,530 --> 00:03:34,019
same algorithm it used to<font color="#CCCCCC"> generate the</font>

70
00:03:31,139 --> 00:03:36,959
hashtag for the mobile twitter this<font color="#E5E5E5"> may</font>

71
00:03:34,019 --> 00:03:39,870
<font color="#E5E5E5">be a sign that in this may be a sign</font>

72
00:03:36,959 --> 00:03:44,370
that<font color="#E5E5E5"> the authors of flashbacks intend to</font>

73
00:03:39,870 --> 00:03:47,700
or plan<font color="#CCCCCC"> to eliminate the need of using a</font>

74
00:03:44,370 --> 00:03:49,829
<font color="#E5E5E5">third-party server in</font><font color="#CCCCCC"> the future now</font>

75
00:03:47,700 --> 00:03:52,738
flashback expect<font color="#E5E5E5"> the response to contain</font>

76
00:03:49,829 --> 00:03:56,340
an update program with a matching RSA

77
00:03:52,739 --> 00:03:58,859
signature<font color="#CCCCCC"> oh if the</font><font color="#E5E5E5"> iris a signature is</font>

78
00:03:56,340 --> 00:04:01,470
valid then flashback would execute the

79
00:03:58,859 --> 00:04:04,079
update program provided that this was

80
00:04:01,470 --> 00:04:07,260
never executed on<font color="#CCCCCC"> the system before to</font>

81
00:04:04,079 --> 00:04:12,660
track this flashback logs the sha-1 of

82
00:04:07,260 --> 00:04:15,840
all executed program to a file in your

83
00:04:12,660 --> 00:04:17,940
variance in the<font color="#E5E5E5"> same thread flashback</font>

84
00:04:15,840 --> 00:04:21,478
would also connect to another set of CNC

85
00:04:17,940 --> 00:04:24,900
servers this time is to<font color="#E5E5E5"> select a server</font>

86
00:04:21,478 --> 00:04:27,060
for executing its payload again it first

87
00:04:24,900 --> 00:04:29,849
starts with servers found in the

88
00:04:27,060 --> 00:04:33,660
this time flashback maintains to this

89
00:04:29,850 --> 00:04:36,510
the one the only difference is that one

90
00:04:33,660 --> 00:04:38,310
this is<font color="#CCCCCC"> updatable at one time and just</font>

91
00:04:36,510 --> 00:04:40,560
<font color="#E5E5E5">like</font><font color="#CCCCCC"> in the update servers if none of</font>

92
00:04:38,310 --> 00:04:43,650
the servers in the<font color="#CCCCCC"> list are valid then</font>

93
00:04:40,560 --> 00:04:45,810
it generates an additional set of C&C

94
00:04:43,650 --> 00:04:50,489
server servers based on the current date

95
00:04:45,810 --> 00:04:52,560
this<font color="#E5E5E5"> is for that was for the newer</font>

96
00:04:50,490 --> 00:04:54,780
variants in all variants flashback oddly

97
00:04:52,560 --> 00:04:57,030
maintains one list and<font color="#CCCCCC"> there is no</font>

98
00:04:54,780 --> 00:05:01,169
thread that will update<font color="#CCCCCC"> this servers</font><font color="#E5E5E5"> Oh</font>

99
00:04:57,030 --> 00:05:03,030
once it is selected<font color="#CCCCCC"> so once it's</font>

100
00:05:01,169 --> 00:05:05,639
selected this servers are never changed

101
00:05:03,030 --> 00:05:08,849
unless<font color="#E5E5E5"> the flashback binary is reloaded</font>

102
00:05:05,639 --> 00:05:11,340
by the infected browser again so now if

103
00:05:08,850 --> 00:05:15,150
the determine if a server is valid then

104
00:05:11,340 --> 00:05:16,830
flashback expect the response to contain

105
00:05:15,150 --> 00:05:20,219
the shaman of<font color="#CCCCCC"> the server name and</font>

106
00:05:16,830 --> 00:05:24,180
followed by<font color="#CCCCCC"> a matching RSA signature if</font>

107
00:05:20,220 --> 00:05:27,060
none of the servers are valid then a

108
00:05:24,180 --> 00:05:29,040
default server is selected in all

109
00:05:27,060 --> 00:05:31,200
variants this is the second server found

110
00:05:29,040 --> 00:05:33,539
in the list while in new variants or

111
00:05:31,200 --> 00:05:37,680
newer variants it is the<font color="#E5E5E5"> first server</font>

112
00:05:33,539 --> 00:05:40,500
found in the lists now to execute the

113
00:05:37,680 --> 00:05:44,700
payload dash back hooks<font color="#CCCCCC"> apic use by</font>

114
00:05:40,500 --> 00:05:48,330
browsers to handle HTTP traffic in other

115
00:05:44,700 --> 00:05:50,610
variants the outbound<font color="#E5E5E5"> API hooks are used</font>

116
00:05:48,330 --> 00:05:55,229
to catch requests destined for google

117
00:05:50,610 --> 00:05:57,780
once this<font color="#CCCCCC"> one's found this requests are</font>

118
00:05:55,229 --> 00:06:01,710
modified to ask<font color="#E5E5E5"> Google to reply in a</font>

119
00:05:57,780 --> 00:06:04,500
format that<font color="#CCCCCC"> is possible by</font><font color="#E5E5E5"> flashback for</font>

120
00:06:01,710 --> 00:06:06,659
the inbound hooks or inbound API hooks

121
00:06:04,500 --> 00:06:09,750
these are used to catch responses that

122
00:06:06,660 --> 00:06:12,720
contain target strings once found

123
00:06:09,750 --> 00:06:15,240
additional content are injected to the

124
00:06:12,720 --> 00:06:17,820
responses before they are handed back to

125
00:06:15,240 --> 00:06:20,340
the browser the target string and the

126
00:06:17,820 --> 00:06:22,289
injected content are specified in<font color="#E5E5E5"> a</font>

127
00:06:20,340 --> 00:06:24,570
configure in the configuration data of

128
00:06:22,289 --> 00:06:26,880
the malware so I have a prepared the

129
00:06:24,570 --> 00:06:32,370
demo to help you better understand this

130
00:06:26,880 --> 00:06:34,700
so taking this configuration data as an

131
00:06:32,370 --> 00:06:34,700
example

132
00:06:37,260 --> 00:06:47,430
so Google checks if I response contain

133
00:06:44,100 --> 00:06:50,760
the<font color="#CCCCCC"> string Google duck time or Google</font>

134
00:06:47,430 --> 00:06:55,530
once found it will inject this

135
00:06:50,760 --> 00:06:58,349
<font color="#E5E5E5">JavaScript to the response before it is</font>

136
00:06:55,530 --> 00:07:00,090
handed back to the browser basically

137
00:06:58,350 --> 00:07:03,540
what this<font color="#E5E5E5"> JavaScript does is to execute</font>

138
00:07:00,090 --> 00:07:06,479
another JavaScript found in domain but

139
00:07:03,540 --> 00:07:09,630
in the actual injection the domain

140
00:07:06,480 --> 00:07:12,420
string disturbing string will<font color="#CCCCCC"> be</font>

141
00:07:09,630 --> 00:07:13,770
replaced by the Aqua flashback command

142
00:07:12,420 --> 00:07:16,440
and control server name that was

143
00:07:13,770 --> 00:07:18,599
selected earlier by<font color="#E5E5E5"> the way I'm doing</font>

144
00:07:16,440 --> 00:07:21,390
<font color="#E5E5E5">this demo on isolated virtual machine</font>

145
00:07:18,600 --> 00:07:23,940
without any network connectivity so to

146
00:07:21,390 --> 00:07:25,890
simulate<font color="#CCCCCC"> Internet connectivity I added</font>

147
00:07:23,940 --> 00:07:28,440
<font color="#CCCCCC">our default flashback commanding control</font>

148
00:07:25,890 --> 00:07:30,870
server to<font color="#CCCCCC"> though to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> host file I've</font>

149
00:07:28,440 --> 00:07:34,860
also added<font color="#E5E5E5"> the domain names that we're</font>

150
00:07:30,870 --> 00:07:36,750
going to<font color="#E5E5E5"> use in for the domain names of</font>

151
00:07:34,860 --> 00:07:38,520
our of the websites that we're going<font color="#CCCCCC"> to</font>

152
00:07:36,750 --> 00:07:41,790
<font color="#CCCCCC">use in the demo to the host file and</font>

153
00:07:38,520 --> 00:07:46,020
I've also added though<font color="#CCCCCC"> i've created the</font>

154
00:07:41,790 --> 00:07:48,600
<font color="#E5E5E5">garmin domain called www destination com</font>

155
00:07:46,020 --> 00:07:50,940
ask our dummy<font color="#E5E5E5"> advertiser website i</font>

156
00:07:48,600 --> 00:07:53,190
redirected all of them to<font color="#E5E5E5"> this locale</font>

157
00:07:50,940 --> 00:07:55,410
vertol machine so in this virtual

158
00:07:53,190 --> 00:07:57,810
machine<font color="#CCCCCC"> I have a script running that</font>

159
00:07:55,410 --> 00:08:01,050
emulates a flashback command and control

160
00:07:57,810 --> 00:08:02,910
server it<font color="#E5E5E5"> also served websites that</font>

161
00:08:01,050 --> 00:08:06,090
we're going to<font color="#E5E5E5"> use in the demo so let's</font>

162
00:08:02,910 --> 00:08:07,650
<font color="#E5E5E5">look at our fake in fake internet</font>

163
00:08:06,090 --> 00:08:10,859
connectivity looks like on a clean

164
00:08:07,650 --> 00:08:13,640
system so i'm going to<font color="#E5E5E5"> open google com</font>

165
00:08:10,860 --> 00:08:13,640
and

166
00:08:21,040 --> 00:08:26,050
open that belongs the google domain the

167
00:08:23,980 --> 00:08:28,840
script will return this dummy google

168
00:08:26,050 --> 00:08:31,450
result page now<font color="#CCCCCC"> i want you guys to take</font>

169
00:08:28,840 --> 00:08:35,919
note that<font color="#CCCCCC"> when i click this dummy google</font>

170
00:08:31,450 --> 00:08:38,770
result link on a clean system it should

171
00:08:35,919 --> 00:08:43,270
open the correct destination which is

172
00:08:38,770 --> 00:08:47,230
www phones com next I'm<font color="#CCCCCC"> going to open</font>

173
00:08:43,270 --> 00:08:50,860
<font color="#E5E5E5">the our dummy advertiser web page to see</font>

174
00:08:47,230 --> 00:08:53,680
how it<font color="#E5E5E5"> looks like and</font><font color="#CCCCCC"> this is how it</font>

175
00:08:50,860 --> 00:08:57,790
looks<font color="#E5E5E5"> like basically</font><font color="#CCCCCC"> that's all the</font>

176
00:08:53,680 --> 00:08:59,439
websites that the<font color="#E5E5E5"> script supports for</font>

177
00:08:57,790 --> 00:09:05,410
anything else it<font color="#E5E5E5"> will just return a</font>

178
00:08:59,440 --> 00:09:08,260
generic catch-all page like this so now

179
00:09:05,410 --> 00:09:10,510
to satisfy the condition that flashback

180
00:09:08,260 --> 00:09:14,710
is looking for i'm going<font color="#E5E5E5"> to edit this</font>

181
00:09:10,510 --> 00:09:16,920
catch-all page and put the google string

182
00:09:14,710 --> 00:09:16,920
in

183
00:09:23,480 --> 00:09:25,540
you

184
00:09:29,980 --> 00:09:36,640
so now on a clean system when<font color="#E5E5E5"> I click on</font>

185
00:09:33,910 --> 00:09:40,060
the reload button the expected result is

186
00:09:36,640 --> 00:09:42,280
that only the title should change so now

187
00:09:40,060 --> 00:09:44,849
<font color="#E5E5E5">I'm going to undo the change and install</font>

188
00:09:42,280 --> 00:09:44,850
flash back

189
00:10:01,769 --> 00:10:14,579
I'm just going<font color="#CCCCCC"> to clear the cache and</font>

190
00:10:10,290 --> 00:10:18,420
you start the browser and i'm going<font color="#E5E5E5"> to</font>

191
00:10:14,579 --> 00:10:22,199
<font color="#E5E5E5">open the our catch-all page again so</font>

192
00:10:18,420 --> 00:10:25,079
without the target string<font color="#CCCCCC"> targeted</font>

193
00:10:22,199 --> 00:10:29,209
string flashback didn't do anything so

194
00:10:25,079 --> 00:10:29,209
<font color="#E5E5E5">i'm going to put back</font><font color="#CCCCCC"> the google string</font>

195
00:10:39,440 --> 00:10:44,390
so now when<font color="#E5E5E5"> I click the reload button</font>

196
00:10:41,780 --> 00:10:47,930
then flashback would have done it's

197
00:10:44,390 --> 00:10:49,460
magic so now let's<font color="#CCCCCC"> look at the debug</font>

198
00:10:47,930 --> 00:10:55,069
prints of<font color="#CCCCCC"> the script</font><font color="#E5E5E5"> to see what</font>

199
00:10:49,460 --> 00:10:59,300
happened behind the scenes so when we

200
00:10:55,070 --> 00:11:01,340
opened the catch-all page the script

201
00:10:59,300 --> 00:11:04,939
simply returned the file page<font color="#CCCCCC"> catch all</font>

202
00:11:01,340 --> 00:11:06,320
that HTML if you guys remember when<font color="#E5E5E5"> we</font>

203
00:11:04,940 --> 00:11:08,960
edited the file it's just a<font color="#CCCCCC"> bait</font>

204
00:11:06,320 --> 00:11:12,110
<font color="#CCCCCC">barebone HTML file with the Google</font>

205
00:11:08,960 --> 00:11:14,600
string in it because of the string it

206
00:11:12,110 --> 00:11:17,180
causes<font color="#CCCCCC"> flashback</font><font color="#E5E5E5"> to do its magic and</font>

207
00:11:14,600 --> 00:11:20,210
request the JavaScript found in the

208
00:11:17,180 --> 00:11:22,640
flashback command and control server so

209
00:11:20,210 --> 00:11:26,030
in return the server returned the

210
00:11:22,640 --> 00:11:27,710
<font color="#E5E5E5">JavaScript called old payload</font><font color="#CCCCCC"> Jes that</font>

211
00:11:26,030 --> 00:11:33,110
bin so let's<font color="#E5E5E5"> look at what the script</font>

212
00:11:27,710 --> 00:11:36,260
does so basically the script<font color="#E5E5E5"> just</font>

213
00:11:33,110 --> 00:11:42,050
redirect the browser to our advertiser

214
00:11:36,260 --> 00:11:43,550
<font color="#CCCCCC">web page so as</font><font color="#E5E5E5"> you can see the result or</font>

215
00:11:42,050 --> 00:11:45,260
the final result<font color="#E5E5E5"> of the flashback</font>

216
00:11:43,550 --> 00:11:48,829
payload depends on the configuration

217
00:11:45,260 --> 00:11:50,600
data of the<font color="#E5E5E5"> of the malware and the</font>

218
00:11:48,830 --> 00:11:53,150
<font color="#E5E5E5">JavaScript returned by the command and</font>

219
00:11:50,600 --> 00:11:56,210
control server what if let's say that

220
00:11:53,150 --> 00:11:58,400
instead<font color="#E5E5E5"> of the google string the</font>

221
00:11:56,210 --> 00:12:00,950
configuration<font color="#CCCCCC"> data specify a name</font><font color="#E5E5E5"> of</font>

222
00:11:58,400 --> 00:12:03,350
some bank and instead of<font color="#E5E5E5"> returning this</font>

223
00:12:00,950 --> 00:12:06,500
<font color="#CCCCCC">JavaScript the command and</font><font color="#E5E5E5"> control</font>

224
00:12:03,350 --> 00:12:09,560
server returned script a<font color="#E5E5E5"> JavaScript that</font>

225
00:12:06,500 --> 00:12:15,770
renders our fishing HTML form so let's

226
00:12:09,560 --> 00:12:21,699
do that<font color="#E5E5E5"> and see how it looks like so</font><font color="#CCCCCC"> I'm</font>

227
00:12:15,770 --> 00:12:21,699
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> edit the configuration data</font>

228
00:12:25,420 --> 00:12:41,650
so<font color="#CCCCCC"> I'm going to change the target ID</font>

229
00:12:27,580 --> 00:12:45,610
string to to some bank then I'm going to

230
00:12:41,650 --> 00:12:47,880
update the configuration data of the

231
00:12:45,610 --> 00:12:47,880
<font color="#E5E5E5">binary</font>

232
00:12:55,830 --> 00:13:03,870
then<font color="#E5E5E5"> I'm going to replace the payload</font>

233
00:12:59,670 --> 00:13:07,430
<font color="#CCCCCC">javascript with something that renders</font>

234
00:13:03,870 --> 00:13:07,430
our fishing HTML form

235
00:13:15,150 --> 00:13:24,530
then<font color="#E5E5E5"> I'm going to create the website for</font>

236
00:13:22,050 --> 00:13:24,530
our band

237
00:13:39,200 --> 00:13:48,910
come back so now I'm going to clear the

238
00:13:46,460 --> 00:13:48,910
cache again

239
00:13:56,450 --> 00:14:04,970
I'm going<font color="#E5E5E5"> oh yeah I'm going to open the</font>

240
00:13:59,660 --> 00:14:06,860
website of our bank so now even with the

241
00:14:04,970 --> 00:14:08,450
<font color="#E5E5E5">Google string flashback didn't do</font>

242
00:14:06,860 --> 00:14:10,520
anything because<font color="#E5E5E5"> we've already changed</font>

243
00:14:08,450 --> 00:14:13,340
it to something else so<font color="#E5E5E5"> I'm going to</font>

244
00:14:10,520 --> 00:14:15,819
<font color="#E5E5E5">edit the catch-all page to satisfy the</font>

245
00:14:13,340 --> 00:14:15,820
condition

246
00:14:29,800 --> 00:14:35,410
now when<font color="#E5E5E5"> I click the reload button then</font>

247
00:14:32,860 --> 00:14:38,260
flashback would have done<font color="#E5E5E5"> its magic now</font>

248
00:14:35,410 --> 00:14:41,800
take note that the<font color="#E5E5E5"> address bar is still</font>

249
00:14:38,260 --> 00:14:44,230
displaying the URL<font color="#CCCCCC"> of our band as you</font>

250
00:14:41,800 --> 00:14:47,410
can<font color="#E5E5E5"> see flashback can be configured in a</font>

251
00:14:44,230 --> 00:14:50,410
way for use in a stealthy phishing

252
00:14:47,410 --> 00:14:52,930
attack so this could be<font color="#E5E5E5"> the basis of</font>

253
00:14:50,410 --> 00:14:54,969
reports saying that flashback is

254
00:14:52,930 --> 00:14:56,979
designed to steal banking password

255
00:14:54,970 --> 00:15:00,040
however we don't think<font color="#E5E5E5"> that is the case</font>

256
00:14:56,980 --> 00:15:01,690
<font color="#E5E5E5">because we haven't seen</font><font color="#CCCCCC"> any samples of</font>

257
00:15:00,040 --> 00:15:04,360
flashback that's targeting non google

258
00:15:01,690 --> 00:15:06,670
website and also in the next slide you

259
00:15:04,360 --> 00:15:13,329
<font color="#CCCCCC">will notice that in your variants this</font>

260
00:15:06,670 --> 00:15:17,620
setup is no longer possible so in your

261
00:15:13,329 --> 00:15:20,410
<font color="#E5E5E5">variance flashback cooks the CF right</font>

262
00:15:17,620 --> 00:15:24,160
stream right and the CF read stream with

263
00:15:20,410 --> 00:15:27,730
AP ice to catch a google search request

264
00:15:24,160 --> 00:15:31,569
and Google result clicks so when<font color="#E5E5E5"> a user</font>

265
00:15:27,730 --> 00:15:34,209
<font color="#E5E5E5">perform a google search the CF right</font>

266
00:15:31,570 --> 00:15:35,500
stream right hook will send the search

267
00:15:34,209 --> 00:15:37,660
keyword to the command and<font color="#E5E5E5"> control</font>

268
00:15:35,500 --> 00:15:40,930
server together with other system

269
00:15:37,660 --> 00:15:44,140
information in return the command and

270
00:15:40,930 --> 00:15:47,229
<font color="#E5E5E5">control server may may issue a redirect</font>

271
00:15:44,140 --> 00:15:50,589
redirection data<font color="#E5E5E5"> and/or other commands</font>

272
00:15:47,230 --> 00:15:53,500
and at the same time the hook will send

273
00:15:50,589 --> 00:15:56,260
the original<font color="#CCCCCC"> Google search result to</font>

274
00:15:53,500 --> 00:15:58,839
google to get the actual result but<font color="#E5E5E5"> for</font>

275
00:15:56,260 --> 00:16:00,579
<font color="#E5E5E5">now the CF</font><font color="#CCCCCC"> bridge stream</font><font color="#E5E5E5"> red hook</font>

276
00:15:58,839 --> 00:16:03,850
<font color="#E5E5E5">doesn't do anything unusual I've seen</font>

277
00:16:00,579 --> 00:16:07,449
and simply hand back the actual<font color="#E5E5E5"> Google</font>

278
00:16:03,850 --> 00:16:11,620
search result to the<font color="#E5E5E5"> browser now when</font>

279
00:16:07,450 --> 00:16:14,050
<font color="#CCCCCC">user click on</font><font color="#E5E5E5"> a link in the</font><font color="#CCCCCC"> google</font>

280
00:16:11,620 --> 00:16:16,180
search result this will be caught by the

281
00:16:14,050 --> 00:16:18,849
CF right stream right again but this

282
00:16:16,180 --> 00:16:20,800
time it will send tracking info to the

283
00:16:18,850 --> 00:16:22,870
command and<font color="#E5E5E5"> control server this is</font>

284
00:16:20,800 --> 00:16:24,609
presumably<font color="#E5E5E5"> to help the flashback authors</font>

285
00:16:22,870 --> 00:16:27,399
keep track of how much they should be

286
00:16:24,610 --> 00:16:30,610
earning already then at the<font color="#CCCCCC"> same time</font>

287
00:16:27,399 --> 00:16:34,630
the hook will send something to<font color="#CCCCCC"> Google</font>

288
00:16:30,610 --> 00:16:39,699
but instead of sending the<font color="#CCCCCC"> octo correct</font>

289
00:16:34,630 --> 00:16:41,770
<font color="#CCCCCC">google click request it will</font><font color="#E5E5E5"> make a</font>

290
00:16:39,699 --> 00:16:43,699
<font color="#CCCCCC">specially crafted request that contains</font>

291
00:16:41,770 --> 00:16:45,230
the redirection info

292
00:16:43,699 --> 00:16:49,488
what is actually happening here is that

293
00:16:45,230 --> 00:16:51,739
the CF right stream right hook is using

294
00:16:49,489 --> 00:16:56,239
google to communicate<font color="#CCCCCC"> with the CF read</font>

295
00:16:51,739 --> 00:16:59,449
stream<font color="#E5E5E5"> red hook you will see that when</font>

296
00:16:56,239 --> 00:17:03,049
you make a<font color="#E5E5E5"> non-existing resource request</font>

297
00:16:59,449 --> 00:17:06,260
to Google Google will simply issue a 201

298
00:17:03,049 --> 00:17:11,240
code and containing the up add up the

299
00:17:06,260 --> 00:17:14,329
<font color="#CCCCCC">original resource</font><font color="#E5E5E5"> request so now once</font>

300
00:17:11,240 --> 00:17:16,399
the CF<font color="#E5E5E5"> writes a CF breed stream red hook</font>

301
00:17:14,329 --> 00:17:19,250
recognize that the response is actually

302
00:17:16,398 --> 00:17:22,458
caused by the CF right stream right hook

303
00:17:19,250 --> 00:17:24,648
then it will hand a resurrection script

304
00:17:22,459 --> 00:17:28,789
to<font color="#CCCCCC"> the browser which causes the browser</font>

305
00:17:24,648 --> 00:17:32,870
to visit the the destination or the

306
00:17:28,789 --> 00:17:34,850
advertiser page however since the

307
00:17:32,870 --> 00:17:37,370
browser still thinks that<font color="#E5E5E5"> the response</font>

308
00:17:34,850 --> 00:17:40,039
actually<font color="#CCCCCC"> came from google</font><font color="#E5E5E5"> so well in the</font>

309
00:17:37,370 --> 00:17:43,639
<font color="#E5E5E5">in its request it will contain a</font>

310
00:17:40,039 --> 00:17:46,908
referrer value of<font color="#CCCCCC"> Google so to</font><font color="#E5E5E5"> make the</font>

311
00:17:43,639 --> 00:17:49,129
actual request look more legitimate once

312
00:17:46,909 --> 00:17:51,289
this is me it will be caught by the CF

313
00:17:49,130 --> 00:17:53,510
right stream right hook again then<font color="#E5E5E5"> it</font>

314
00:17:51,289 --> 00:17:55,220
will be more tender referrer field will

315
00:17:53,510 --> 00:17:58,490
be modified<font color="#CCCCCC"> to the desired value of</font>

316
00:17:55,220 --> 00:18:00,500
flashback so now<font color="#E5E5E5"> I have perfect I've</font>

317
00:17:58,490 --> 00:18:07,519
also prepared the demo for this type of

318
00:18:00,500 --> 00:18:09,019
were young<font color="#CCCCCC"> so now I'm</font><font color="#E5E5E5"> going to infect</font>

319
00:18:07,519 --> 00:18:11,470
<font color="#E5E5E5">the system with a newer variant of</font>

320
00:18:09,019 --> 00:18:11,470
flashback

321
00:18:20,360 --> 00:18:26,740
and I'm going<font color="#CCCCCC"> to do the usual stuff</font>

322
00:18:44,340 --> 00:18:53,129
now to to simulate a google search i'm

323
00:18:49,049 --> 00:18:55,799
going<font color="#E5E5E5"> to enter the proper syntax in the</font>

324
00:18:53,130 --> 00:18:58,830
URL so for this example this<font color="#E5E5E5"> is</font>

325
00:18:55,799 --> 00:19:03,539
<font color="#E5E5E5">equivalent to doing a google search with</font>

326
00:18:58,830 --> 00:19:05,010
a keyword of poems so now if you

327
00:19:03,539 --> 00:19:08,640
remember when we click on the dummy

328
00:19:05,010 --> 00:19:12,419
google result link it opened the it

329
00:19:08,640 --> 00:19:15,000
should open www<font color="#E5E5E5"> phones com but now that</font>

330
00:19:12,419 --> 00:19:18,840
flashback is active then it would have

331
00:19:15,000 --> 00:19:21,179
done its magic so now let's look<font color="#E5E5E5"> at the</font>

332
00:19:18,840 --> 00:19:27,389
debug prints again to see what actually

333
00:19:21,179 --> 00:19:31,559
<font color="#E5E5E5">happened during the scenes so when we</font>

334
00:19:27,390 --> 00:19:34,049
made a google search the actual search

335
00:19:31,559 --> 00:19:38,129
was actually sent to google to get the

336
00:19:34,049 --> 00:19:40,679
result but at the<font color="#E5E5E5"> same time the keyword</font>

337
00:19:38,130 --> 00:19:44,130
together with other system information

338
00:19:40,679 --> 00:19:49,200
was sent to the flashback command and

339
00:19:44,130 --> 00:19:51,149
control server in return the flashback

340
00:19:49,200 --> 00:19:53,730
<font color="#E5E5E5">abandon control server returned this</font>

341
00:19:51,149 --> 00:19:58,260
commands found in payload the txt so

342
00:19:53,730 --> 00:20:01,110
let's<font color="#E5E5E5"> take a look what it does so</font>

343
00:19:58,260 --> 00:20:04,830
<font color="#E5E5E5">basically it contains issue a command</font>

344
00:20:01,110 --> 00:20:07,439
that as we flashback to redirects the<font color="#E5E5E5"> to</font>

345
00:20:04,830 --> 00:20:10,649
<font color="#E5E5E5">redirect links to our</font><font color="#CCCCCC"> advertisers or web</font>

346
00:20:07,440 --> 00:20:13,620
site and the<font color="#CCCCCC"> keyboard is worth ten cents</font>

347
00:20:10,649 --> 00:20:17,250
and when it does<font color="#E5E5E5"> its resurrection it</font>

348
00:20:13,620 --> 00:20:26,039
should contain the referrer field of

349
00:20:17,250 --> 00:20:29,070
referral so so<font color="#E5E5E5"> after that once we click</font>

350
00:20:26,039 --> 00:20:31,049
on a link on the<font color="#E5E5E5"> Google result then</font>

351
00:20:29,070 --> 00:20:34,260
flashback make a made a

352
00:20:31,049 --> 00:20:36,658
<font color="#E5E5E5">specially-crafted requests obviously</font>

353
00:20:34,260 --> 00:20:39,000
this<font color="#CCCCCC"> will won't be it won't be existing</font>

354
00:20:36,659 --> 00:20:43,049
in<font color="#E5E5E5"> Google so Google will is simply just</font>

355
00:20:39,000 --> 00:20:45,149
issue a 201 containing<font color="#CCCCCC"> out the 301 code</font>

356
00:20:43,049 --> 00:20:49,230
containing the original resource

357
00:20:45,149 --> 00:20:52,439
requests so this will trigger the sea

358
00:20:49,230 --> 00:20:56,580
effort read stream red hook at<font color="#CCCCCC"> the same</font>

359
00:20:52,440 --> 00:20:58,200
time so the tracking data was some

360
00:20:56,580 --> 00:21:01,020
tracking data was sent to the

361
00:20:58,200 --> 00:21:04,410
command and control server the tracking

362
00:21:01,020 --> 00:21:08,460
<font color="#CCCCCC">data contains the search keyword and the</font>

363
00:21:04,410 --> 00:21:11,310
amount<font color="#CCCCCC"> that the authors are supposed to</font>

364
00:21:08,460 --> 00:21:13,920
be earning<font color="#E5E5E5"> already and then the early</font>

365
00:21:11,310 --> 00:21:16,679
original destination that was actually

366
00:21:13,920 --> 00:21:22,830
<font color="#CCCCCC">hi job perhaps to help them keep track</font>

367
00:21:16,680 --> 00:21:26,670
of the<font color="#E5E5E5"> statistics and after flashback</font>

368
00:21:22,830 --> 00:21:30,780
made its magic then the browser finally

369
00:21:26,670 --> 00:21:33,990
visit the advertiser page containing the

370
00:21:30,780 --> 00:21:36,060
desired the fair value of<font color="#E5E5E5"> flashback so</font>

371
00:21:33,990 --> 00:21:40,230
there<font color="#E5E5E5"> you have it this is the payload of</font>

372
00:21:36,060 --> 00:21:42,870
flashback so for the remaining slides<font color="#CCCCCC"> I</font>

373
00:21:40,230 --> 00:21:45,720
will<font color="#CCCCCC"> quickly go through the remaining</font>

374
00:21:42,870 --> 00:21:48,179
binaries so in newer<font color="#E5E5E5"> variants or sorry</font>

375
00:21:45,720 --> 00:21:50,580
in some variants<font color="#CCCCCC"> there is an</font><font color="#E5E5E5"> loader</font>

376
00:21:48,180 --> 00:21:53,490
binary and what it does<font color="#E5E5E5"> is to make sure</font>

377
00:21:50,580 --> 00:21:56,460
<font color="#E5E5E5">that</font><font color="#CCCCCC"> the main binary is loaded by</font><font color="#E5E5E5"> its</font>

378
00:21:53,490 --> 00:22:00,900
only<font color="#E5E5E5"> loaded by the</font><font color="#CCCCCC"> safari process or the</font>

379
00:21:56,460 --> 00:22:03,600
web process process however unfortunate

380
00:22:00,900 --> 00:22:07,290
for the unfortunately for<font color="#CCCCCC"> the flashbacks</font>

381
00:22:03,600 --> 00:22:10,530
author they committed the typo so the

382
00:22:07,290 --> 00:22:12,030
main binary won't be loaded by the it

383
00:22:10,530 --> 00:22:14,700
won't be loaded by the web process

384
00:22:12,030 --> 00:22:17,040
process however in the<font color="#E5E5E5"> Safari</font>

385
00:22:14,700 --> 00:22:19,260
application it is<font color="#CCCCCC"> actually the web</font>

386
00:22:17,040 --> 00:22:22,080
process process that handles<font color="#CCCCCC"> the HTTP</font>

387
00:22:19,260 --> 00:22:23,970
traffic therefore on some variants of

388
00:22:22,080 --> 00:22:27,030
flashback the payload simply won't work

389
00:22:23,970 --> 00:22:29,580
<font color="#E5E5E5">however take note that</font><font color="#CCCCCC"> although the</font>

390
00:22:27,030 --> 00:22:34,950
payload won't work but the updater

391
00:22:29,580 --> 00:22:37,500
module will still function as is now for

392
00:22:34,950 --> 00:22:39,870
the last binary the launch agent it is

393
00:22:37,500 --> 00:22:42,150
<font color="#E5E5E5">basically just a stand-alone light</font>

394
00:22:39,870 --> 00:22:45,000
version of the updater module found in

395
00:22:42,150 --> 00:22:47,790
the main binary one difference<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that</font>

396
00:22:45,000 --> 00:22:50,460
it<font color="#CCCCCC"> use</font><font color="#E5E5E5"> is it uses a different set of CNC</font>

397
00:22:47,790 --> 00:22:52,590
servers this time it start with a

398
00:22:50,460 --> 00:22:55,020
generated list of servers based a

399
00:22:52,590 --> 00:22:58,379
generated based on constant that is

400
00:22:55,020 --> 00:23:01,290
<font color="#E5E5E5">found on the binary the constants are</font>

401
00:22:58,380 --> 00:23:03,930
very own specific so the resulting

402
00:23:01,290 --> 00:23:07,350
generate that<font color="#E5E5E5"> list of servers will</font><font color="#CCCCCC"> be</font>

403
00:23:03,930 --> 00:23:10,020
very young specific if none<font color="#CCCCCC"> of this if</font>

404
00:23:07,350 --> 00:23:11,800
none<font color="#CCCCCC"> of the servers are valid then it</font>

405
00:23:10,020 --> 00:23:14,139
will generate another set of CNC

406
00:23:11,800 --> 00:23:18,340
<font color="#E5E5E5">verse using the same algorithm but this</font>

407
00:23:14,140 --> 00:23:20,980
<font color="#E5E5E5">time it uses the date as input so the</font>

408
00:23:18,340 --> 00:23:23,020
resulting CNC servers generate that will

409
00:23:20,980 --> 00:23:26,320
be the same for<font color="#CCCCCC"> all variants in this</font>

410
00:23:23,020 --> 00:23:30,220
case and finally it will<font color="#E5E5E5"> also try a</font>

411
00:23:26,320 --> 00:23:32,980
hard-coded list of CNC servers it also

412
00:23:30,220 --> 00:23:38,530
employed a similar type<font color="#CCCCCC"> of server</font>

413
00:23:32,980 --> 00:23:40,600
validation and it also logs all or it

414
00:23:38,530 --> 00:23:43,480
also logs the hashes of all executed

415
00:23:40,600 --> 00:23:46,209
update program update or installation

416
00:23:43,480 --> 00:23:48,700
program in this case but this<font color="#E5E5E5"> time it</font>

417
00:23:46,210 --> 00:23:52,660
uses the<font color="#E5E5E5"> CRC hashing algorithm and it</font>

418
00:23:48,700 --> 00:23:55,240
uses the temp directory so unlike in the

419
00:23:52,660 --> 00:23:56,860
<font color="#E5E5E5">main binary once the temp directory is</font>

420
00:23:55,240 --> 00:23:59,410
cleared so previously executed

421
00:23:56,860 --> 00:24:02,889
instruction may be executed again and

422
00:23:59,410 --> 00:24:07,450
finally<font color="#CCCCCC"> it has its own instructions that</font>

423
00:24:02,890 --> 00:24:09,730
previously the launch agent binary was

424
00:24:07,450 --> 00:24:14,110
distributed together with the<font color="#CCCCCC"> Installer</font>

425
00:24:09,730 --> 00:24:16,660
binary however in the most recent

426
00:24:14,110 --> 00:24:19,600
violence that is<font color="#E5E5E5"> no longer the</font><font color="#CCCCCC"> case</font>

427
00:24:16,660 --> 00:24:21,970
because the launch agent binary has

428
00:24:19,600 --> 00:24:24,070
taken over the<font color="#CCCCCC"> responsibility of</font>

429
00:24:21,970 --> 00:24:26,830
installing the rest of the components to

430
00:24:24,070 --> 00:24:29,260
<font color="#E5E5E5">the system so that's it for my</font>

431
00:24:26,830 --> 00:24:37,689
<font color="#E5E5E5">presentation and I yes I have six</font>

432
00:24:29,260 --> 00:24:46,780
<font color="#E5E5E5">minutes for questions thank you do we</font>

433
00:24:37,690 --> 00:25:01,390
have any questions so<font color="#E5E5E5"> Jasmine in blue</font>

434
00:24:46,780 --> 00:25:03,520
it's just a simulation of the what I

435
00:25:01,390 --> 00:25:10,830
discovered after reverse engineering I

436
00:25:03,520 --> 00:25:10,830
think someone your bottom

437
00:25:12,860 --> 00:25:24,080
it kind of feels<font color="#E5E5E5"> from your presentation</font>

438
00:25:19,429 --> 00:25:26,870
like it's nearly like a<font color="#E5E5E5"> proof of concept</font>

439
00:25:24,080 --> 00:25:30,439
still you know it's they haven't gone as

440
00:25:26,870 --> 00:25:34,040
far as that they have you<font color="#E5E5E5"> know with with</font>

441
00:25:30,440 --> 00:25:35,929
non mac OS<font color="#E5E5E5"> malware would you agree with</font>

442
00:25:34,040 --> 00:25:38,809
that or do you see this being actively

443
00:25:35,929 --> 00:25:40,910
developed and and and you know starting

444
00:25:38,809 --> 00:25:44,690
get more aggressive about about

445
00:25:40,910 --> 00:25:47,030
deployment and use in the field at least

446
00:25:44,690 --> 00:25:49,400
when I was doing this paper several

447
00:25:47,030 --> 00:25:56,059
months<font color="#CCCCCC"> ago it was really very active and</font>

448
00:25:49,400 --> 00:25:58,820
for<font color="#CCCCCC"> example after</font><font color="#E5E5E5"> initially in earlier</font>

449
00:25:56,059 --> 00:26:01,309
variants they<font color="#E5E5E5"> introduced like X protect</font>

450
00:25:58,820 --> 00:26:04,070
disabling routines those kind<font color="#E5E5E5"> of stuff</font>

451
00:26:01,309 --> 00:26:06,710
but then in recent violence they dumped

452
00:26:04,070 --> 00:26:09,439
it because they actually<font color="#E5E5E5"> discovered that</font>

453
00:26:06,710 --> 00:26:11,270
it is not actually<font color="#E5E5E5"> necessary for them to</font>

454
00:26:09,440 --> 00:26:13,640
do<font color="#E5E5E5"> that because X</font><font color="#CCCCCC"> protec is not really</font>

455
00:26:11,270 --> 00:26:16,040
designed<font color="#E5E5E5"> to protect against such kind of</font>

456
00:26:13,640 --> 00:26:17,900
threats so that is for<font color="#CCCCCC"> me that is a sign</font>

457
00:26:16,040 --> 00:26:20,510
that is it was actively being developed

458
00:26:17,900 --> 00:26:24,169
at that time however after it was

459
00:26:20,510 --> 00:26:26,900
published eyes I think they the<font color="#E5E5E5"> authors</font>

460
00:26:24,169 --> 00:26:31,250
simply just abandoned the their<font color="#E5E5E5"> project</font>

461
00:26:26,900 --> 00:26:32,750
however yeah some fellows from the lab

462
00:26:31,250 --> 00:26:37,370
was actually talking to this

463
00:26:32,750 --> 00:26:41,690
investigative journalist and he believed

464
00:26:37,370 --> 00:26:43,340
<font color="#CCCCCC">that the flashback author is onto</font>

465
00:26:41,690 --> 00:26:45,620
something I'm not<font color="#E5E5E5"> going to name</font><font color="#CCCCCC"> names</font>

466
00:26:43,340 --> 00:26:48,709
but I'm sure or i have<font color="#CCCCCC"> a feeling that</font>

467
00:26:45,620 --> 00:26:53,870
you guys are reading his blog so let's

468
00:26:48,710 --> 00:27:03,020
<font color="#E5E5E5">just keep our eyes open any more</font>

469
00:26:53,870 --> 00:27:04,370
questions splendid so please let's join

470
00:27:03,020 --> 00:27:07,179
and thank<font color="#CCCCCC"> Aquilina for revenge</font>

471
00:27:04,370 --> 00:27:07,178
presentation

472
00:27:07,929 --> 00:27:09,990
you

