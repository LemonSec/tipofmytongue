1
00:00:00,000 --> 00:00:02,310
okay if we can take our seats we can't

2
00:00:02,310 --> 00:00:05,549
continue sorry for a bit of the delay we

3
00:00:05,549 --> 00:00:07,620
had to set up the next presenter not to

4
00:00:07,620 --> 00:00:09,660
lose any time and we all want to have a

5
00:00:09,660 --> 00:00:11,700
coffee break the next presentation is by

6
00:00:11,700 --> 00:00:13,920
Mickey boom and neo 10 the broken our

7
00:00:13,920 --> 00:00:17,070
chat kappa also in the just take

8
00:00:17,070 --> 00:00:21,600
it away hi my name is Mickey and this is

9
00:00:21,600 --> 00:00:24,119
Neil we're both doing botnet researching

10
00:00:24,119 --> 00:00:25,680
for Annette today we are going to talk

11
00:00:25,680 --> 00:00:27,539
about one of the most high-profile

12
00:00:27,539 --> 00:00:29,340
banking children but net in the past few

13
00:00:29,340 --> 00:00:33,180
years cat hall for today's agenda I'm

14
00:00:33,180 --> 00:00:35,160
going to give a brief introduction of

15
00:00:35,160 --> 00:00:38,280
wut kappa is then we'll be going to talk

16
00:00:38,280 --> 00:00:40,440
about goals that kept her focus is on

17
00:00:40,440 --> 00:00:42,660
and the aggressive approach to address

18
00:00:42,660 --> 00:00:45,239
them i would also like to briefly

19
00:00:45,239 --> 00:00:48,120
summarize the campaign of cat paw on how

20
00:00:48,120 --> 00:00:50,520
he has evolved over time then i will

21
00:00:50,520 --> 00:00:52,260
hand over to kneel to talk about how

22
00:00:52,260 --> 00:00:54,809
capital works indeed these help focusing

23
00:00:54,809 --> 00:00:58,219
on is to see to network infrastructure

24
00:00:58,219 --> 00:01:00,690
communication protocol and encryption

25
00:01:00,690 --> 00:01:04,199
server request plugins and configuration

26
00:01:04,199 --> 00:01:06,299
file then i will conclude today's

27
00:01:06,299 --> 00:01:08,100
discussion of capo with a few

28
00:01:08,100 --> 00:01:09,930
observation and current state of this

29
00:01:09,930 --> 00:01:14,340
part net we have collected our first cap

30
00:01:14,340 --> 00:01:17,220
whole sample in late 2011 around

31
00:01:17,220 --> 00:01:20,280
november kappa was commonly known as

32
00:01:20,280 --> 00:01:22,710
 because his early sample

33
00:01:22,710 --> 00:01:24,270
contains quotes from Shakespeare's

34
00:01:24,270 --> 00:01:28,250
Merchant of Venice as it's easier

35
00:01:28,250 --> 00:01:31,650
capital was well known as men in boys

36
00:01:31,650 --> 00:01:34,259
men in the browser attack which targets

37
00:01:34,259 --> 00:01:38,220
bank websites cap hill has caught public

38
00:01:38,220 --> 00:01:41,159
attention in early 2013 because of his

39
00:01:41,159 --> 00:01:43,799
release of skype spreading mojo noting

40
00:01:43,799 --> 00:01:45,960
that msn messenger and skype surface

41
00:01:45,960 --> 00:01:48,869
merch around that time we have also

42
00:01:48,869 --> 00:01:50,880
discovered that in the later version

43
00:01:50,880 --> 00:01:53,880
kappa copy significant amount of code

44
00:01:53,880 --> 00:01:57,869
from sue's saw sleek kappa had operate

45
00:01:57,869 --> 00:02:00,689
for roughly three years and it has not

46
00:02:00,689 --> 00:02:02,210
been seen on sale on the black market

47
00:02:02,210 --> 00:02:04,799
there were no sauce leak of yourself

48
00:02:04,799 --> 00:02:07,110
this suggests that Kappa was privately

49
00:02:07,110 --> 00:02:09,149
owned and ran by the same poor people

50
00:02:09,149 --> 00:02:12,900
who were actively developing them

51
00:02:12,900 --> 00:02:15,450
so let's talk about three goals that

52
00:02:15,450 --> 00:02:18,209
kappa attempts to address the first goal

53
00:02:18,209 --> 00:02:20,939
is to get new victims the malware relies

54
00:02:20,939 --> 00:02:23,189
on a network of infected websites to

55
00:02:23,189 --> 00:02:25,409
perform drive-by downloads attack as its

56
00:02:25,409 --> 00:02:28,709
initial infection Victor for directing

57
00:02:28,709 --> 00:02:31,230
traffic Stu these sites one way to do it

58
00:02:31,230 --> 00:02:33,900
is through messaging service such as msn

59
00:02:33,900 --> 00:02:37,230
messenger or skype once it is resident

60
00:02:37,230 --> 00:02:40,049
on a newly infected machine it will go

61
00:02:40,049 --> 00:02:42,390
find a specific messaging application

62
00:02:42,390 --> 00:02:44,700
and it will use it to send malicious

63
00:02:44,700 --> 00:02:47,129
link to the victims contacts through the

64
00:02:47,129 --> 00:02:50,040
chat function likewise cap hill can also

65
00:02:50,040 --> 00:02:52,230
spread by hijacking Facebook account and

66
00:02:52,230 --> 00:02:55,519
posting malicious link into France walls

67
00:02:55,519 --> 00:02:58,980
they had also been seen using mal

68
00:02:58,980 --> 00:03:01,290
fertilizing spamming and other Burnett

69
00:03:01,290 --> 00:03:04,139
in distributing the catwalk client the

70
00:03:04,139 --> 00:03:06,510
second goal of kempo is stealing banking

71
00:03:06,510 --> 00:03:09,930
information banking has built sorry capo

72
00:03:09,930 --> 00:03:12,090
has building code and plucking modules

73
00:03:12,090 --> 00:03:14,400
to accomplish this mission such as

74
00:03:14,400 --> 00:03:17,359
taking video of the desktop key locking

75
00:03:17,359 --> 00:03:19,980
installing we NC server hooking up the

76
00:03:19,980 --> 00:03:23,370
browser to upload the browser cookies or

77
00:03:23,370 --> 00:03:25,650
make phishing sites locally available

78
00:03:25,650 --> 00:03:29,310
through the infected browser the final

79
00:03:29,310 --> 00:03:31,919
goal of Kappa is to maintain is control

80
00:03:31,919 --> 00:03:33,840
on a spot net terminal while being

81
00:03:33,840 --> 00:03:37,560
stealthy at the same time cap hull was

82
00:03:37,560 --> 00:03:39,780
designed to protect itself from being

83
00:03:39,780 --> 00:03:42,030
discovered or reversed by having cooked

84
00:03:42,030 --> 00:03:45,329
to detect sandboxing and the debugging

85
00:03:45,329 --> 00:03:48,479
environment it has also tried to impede

86
00:03:48,479 --> 00:03:50,639
the process of reversing reverse

87
00:03:50,639 --> 00:03:52,739
engineering by code obfuscation and

88
00:03:52,739 --> 00:03:56,970
traffic encryption using all the samples

89
00:03:56,970 --> 00:03:59,489
we have collected we has contract we

90
00:03:59,489 --> 00:04:02,370
have constructed a timeline for cap host

91
00:04:02,370 --> 00:04:04,979
build version number against sample

92
00:04:04,979 --> 00:04:07,530
collection date the malware writer has

93
00:04:07,530 --> 00:04:09,569
been actively updating his client for

94
00:04:09,569 --> 00:04:12,510
roughly three years we have collected

95
00:04:12,510 --> 00:04:15,079
our first batch of samples in November

96
00:04:15,079 --> 00:04:19,289
2011 marked as version 1.0 all the

97
00:04:19,289 --> 00:04:21,000
malicious drinks are reviewed once

98
00:04:21,000 --> 00:04:21,790
unpacked

99
00:04:21,790 --> 00:04:24,640
the custom pecker the original clients

100
00:04:24,640 --> 00:04:27,030
also only has a master and slave

101
00:04:27,030 --> 00:04:29,710
installation mode which we will be

102
00:04:29,710 --> 00:04:34,870
discussing that later in june 2012 capo

103
00:04:34,870 --> 00:04:37,630
had a lot of major updates in this 1.4

104
00:04:37,630 --> 00:04:41,560
version kappa has added NT BM mechanism

105
00:04:41,560 --> 00:04:44,190
by checking vm presence in system module

106
00:04:44,190 --> 00:04:47,260
registry register key value or running

107
00:04:47,260 --> 00:04:50,470
processes kappa has also added NT

108
00:04:50,470 --> 00:04:52,720
debugging mccann sorry anti debuff

109
00:04:52,720 --> 00:04:54,940
mechanism by making sure that the first

110
00:04:54,940 --> 00:04:57,190
time the client is run is within two

111
00:04:57,190 --> 00:05:00,970
hours after the client was built Kappa

112
00:05:00,970 --> 00:05:03,670
had been rewritten to accommodate copied

113
00:05:03,670 --> 00:05:06,730
code from Zeus the cote de copy from

114
00:05:06,730 --> 00:05:10,270
Zeus in qu included antivirus processes

115
00:05:10,270 --> 00:05:13,530
detection string encryption and API hash

116
00:05:13,530 --> 00:05:19,720
encryption in February 2013 there was a

117
00:05:19,720 --> 00:05:23,440
version 1.7 capo had added skype message

118
00:05:23,440 --> 00:05:25,750
spreader module as a download it has

119
00:05:25,750 --> 00:05:27,580
finally gained a lot of media's

120
00:05:27,580 --> 00:05:29,740
attention because microsoft has

121
00:05:29,740 --> 00:05:31,870
scheduled skype to replace msn measures

122
00:05:31,870 --> 00:05:34,630
messenger at that period of time in

123
00:05:34,630 --> 00:05:38,860
februari 2014 there was a minor

124
00:05:38,860 --> 00:05:40,570
improvement in cap halt string

125
00:05:40,570 --> 00:05:43,120
encryption algorithm this version had

126
00:05:43,120 --> 00:05:44,950
token out the four zeros which

127
00:05:44,950 --> 00:05:47,020
originally separated the key and

128
00:05:47,020 --> 00:05:49,330
encrypted string this has made the

129
00:05:49,330 --> 00:05:50,950
client smaller and at the same time

130
00:05:50,950 --> 00:05:53,110
making it harder to crack the code using

131
00:05:53,110 --> 00:05:55,240
four zeros as an anchor to apply the

132
00:05:55,240 --> 00:05:57,370
Christian method that will review all

133
00:05:57,370 --> 00:06:00,100
the malicious strings there are also a

134
00:06:00,100 --> 00:06:02,830
few kind of update inclined code through

135
00:06:02,830 --> 00:06:05,260
the whole timeline it is the XML tag in

136
00:06:05,260 --> 00:06:07,360
the configuration file that can be

137
00:06:07,360 --> 00:06:10,300
parsed by the clients we have observed

138
00:06:10,300 --> 00:06:13,090
certain modules that comes with the tag

139
00:06:13,090 --> 00:06:14,890
being introduced in the later version

140
00:06:14,890 --> 00:06:16,930
whereas some other texts were obsolete

141
00:06:16,930 --> 00:06:20,200
are available as a download plugin in

142
00:06:20,200 --> 00:06:22,270
other versions now i'm going to hand

143
00:06:22,270 --> 00:06:24,970
over to kneel to discuss the details of

144
00:06:24,970 --> 00:06:27,499
capo clients

145
00:06:27,499 --> 00:06:31,860
okay now the fun part kaho implemented

146
00:06:31,860 --> 00:06:33,959
multi processes and multithreading

147
00:06:33,959 --> 00:06:36,029
architecture in order to distribute the

148
00:06:36,029 --> 00:06:38,879
workload and to run efficiently it tries

149
00:06:38,879 --> 00:06:40,529
to inject yourself into multiple

150
00:06:40,529 --> 00:06:44,659
processes including Firefox ie Explorer

151
00:06:44,659 --> 00:06:46,740
svchost and so on depending on the

152
00:06:46,740 --> 00:06:48,990
variance to interpret to

153
00:06:48,990 --> 00:06:50,819
intercommunicating in between these

154
00:06:50,819 --> 00:06:53,699
processes it creates an empire and named

155
00:06:53,699 --> 00:06:56,819
pipes using names uniquely generated

156
00:06:56,819 --> 00:06:59,039
from the user environment there are

157
00:06:59,039 --> 00:07:01,169
three installation mode or injection

158
00:07:01,169 --> 00:07:05,519
mold master slave and plug in this is a

159
00:07:05,519 --> 00:07:07,889
typical control flow chart of the master

160
00:07:07,889 --> 00:07:11,069
mode installation the mask process was

161
00:07:11,069 --> 00:07:13,919
mainly responsible for the initial

162
00:07:13,919 --> 00:07:17,249
contact with the c2 server and injecting

163
00:07:17,249 --> 00:07:20,399
the slave process sending initial report

164
00:07:20,399 --> 00:07:22,289
and to get the initial configuration

165
00:07:22,289 --> 00:07:24,779
data once the configuration was

166
00:07:24,779 --> 00:07:26,879
downloaded to local it passed it and

167
00:07:26,879 --> 00:07:29,399
might inject more causes to start the

168
00:07:29,399 --> 00:07:31,769
plugins the slaves and the planning

169
00:07:31,769 --> 00:07:34,919
process also had ability to communicate

170
00:07:34,919 --> 00:07:37,469
with the sea to server pass the

171
00:07:37,469 --> 00:07:39,059
communication file and to load

172
00:07:39,059 --> 00:07:41,579
corresponding options if this may sound

173
00:07:41,579 --> 00:07:44,969
a little bit complex let's just think of

174
00:07:44,969 --> 00:07:47,339
that all these processes will act like a

175
00:07:47,339 --> 00:07:49,259
unity process with multithreading

176
00:07:49,259 --> 00:07:52,259
function here it will help you to

177
00:07:52,259 --> 00:07:57,929
understand the following concepts so how

178
00:07:57,929 --> 00:08:00,300
do you both find its ce2 server to start

179
00:08:00,300 --> 00:08:02,819
an initial contact this is usually I

180
00:08:02,819 --> 00:08:05,309
like the most because for the botnet and

181
00:08:05,309 --> 00:08:07,949
writer the most concern is to protect or

182
00:08:07,949 --> 00:08:10,129
to hide the c2 server infrastructure

183
00:08:10,129 --> 00:08:13,259
almost everybody has its own way of

184
00:08:13,259 --> 00:08:16,019
finding an updating c2 server or proxy

185
00:08:16,019 --> 00:08:20,129
server list so there are some examples I

186
00:08:20,129 --> 00:08:23,579
call the first one is the hard way the

187
00:08:23,579 --> 00:08:25,800
encrypt and hard coded the c2 server

188
00:08:25,800 --> 00:08:27,779
list inside of client binary such as

189
00:08:27,779 --> 00:08:32,339
Andromeda bot so the tongues I is quite

190
00:08:32,339 --> 00:08:34,620
obvious because if the port loose

191
00:08:34,620 --> 00:08:36,808
connection while the server changing the

192
00:08:36,808 --> 00:08:39,568
domain name then the board does not get

193
00:08:39,568 --> 00:08:40,299
the

194
00:08:40,299 --> 00:08:42,700
update hands it's lost forever but

195
00:08:42,700 --> 00:08:45,190
there's the upside of it it is not easy

196
00:08:45,190 --> 00:08:48,220
to track the latest server list if you

197
00:08:48,220 --> 00:08:51,690
don't have the latest spot client and

198
00:08:51,690 --> 00:08:54,730
the next one I call it is a software

199
00:08:54,730 --> 00:08:58,720
such as zebra croydex and Kraken Barnett

200
00:08:58,720 --> 00:09:00,910
the client and the server are both using

201
00:09:00,910 --> 00:09:02,560
the same domain name generating

202
00:09:02,560 --> 00:09:05,500
algorithm with the same seat so that the

203
00:09:05,500 --> 00:09:07,540
generated domain name is actually not

204
00:09:07,540 --> 00:09:10,680
random but predictable by both parties

205
00:09:10,680 --> 00:09:13,209
commonly they use current time in a

206
00:09:13,209 --> 00:09:14,970
specific time zone for the seat

207
00:09:14,970 --> 00:09:18,490
therefore even the server disappear or

208
00:09:18,490 --> 00:09:20,410
lost communication with declined for a

209
00:09:20,410 --> 00:09:22,630
period of time when it comes back home

210
00:09:22,630 --> 00:09:24,720
he still knows the currently active

211
00:09:24,720 --> 00:09:28,420
domain issue register and vice versa for

212
00:09:28,420 --> 00:09:31,510
the choir the downside of doing this is

213
00:09:31,510 --> 00:09:33,579
that once the domain name generating

214
00:09:33,579 --> 00:09:36,130
algorithm is reverse engineered you can

215
00:09:36,130 --> 00:09:37,990
just filter out all these possible

216
00:09:37,990 --> 00:09:41,260
possible domain names in ISPO that

217
00:09:41,260 --> 00:09:43,450
domain name server level to disrupt the

218
00:09:43,450 --> 00:09:47,079
ball net what cabal used for the

219
00:09:47,079 --> 00:09:48,839
see-through server communication

220
00:09:48,839 --> 00:09:51,640
connection is a combination of the two

221
00:09:51,640 --> 00:09:53,709
ways together with the cup with a

222
00:09:53,709 --> 00:09:56,770
configuration updates here in the middle

223
00:09:56,770 --> 00:09:59,740
here's a URL template for the client to

224
00:09:59,740 --> 00:10:03,070
connect the initial domain name were

225
00:10:03,070 --> 00:10:05,110
hard code it in the binary the Cayenne

226
00:10:05,110 --> 00:10:07,540
binary encrypted and the sub domain was

227
00:10:07,540 --> 00:10:10,120
going to be randomly generated generated

228
00:10:10,120 --> 00:10:13,420
here's a the lower parts of ceuta co of

229
00:10:13,420 --> 00:10:15,820
the get prefix the get sub domain name

230
00:10:15,820 --> 00:10:22,329
function it the boat use this function

231
00:10:22,329 --> 00:10:23,890
to generate a random sub domain name

232
00:10:23,890 --> 00:10:28,029
note that the cow random here was going

233
00:10:28,029 --> 00:10:30,610
to generate arbitrary numbers concerned

234
00:10:30,610 --> 00:10:34,120
by the word the variable count the child

235
00:10:34,120 --> 00:10:37,600
can max and use a random see as input

236
00:10:37,600 --> 00:10:40,540
inside this function so the client would

237
00:10:40,540 --> 00:10:42,519
keep trying the generated sub domain

238
00:10:42,519 --> 00:10:46,390
until you could get dns response as you

239
00:10:46,390 --> 00:10:49,060
can see in the Wireshark snapshot above

240
00:10:49,060 --> 00:10:51,310
the boat ride a bunch of subdomains

241
00:10:51,310 --> 00:10:54,230
until it hits the dns query

242
00:10:54,230 --> 00:10:57,860
response so for now it looks like the

243
00:10:57,860 --> 00:11:00,200
ball is shooting a shotgun blindly and

244
00:11:00,200 --> 00:11:02,030
wasting time doing all these milliner's

245
00:11:02,030 --> 00:11:06,260
effort here actually it's not here's a

246
00:11:06,260 --> 00:11:07,820
communication protocol and the

247
00:11:07,820 --> 00:11:11,480
encryption for communication protocol

248
00:11:11,480 --> 00:11:14,750
the botnet use secure sockets layer and

249
00:11:14,750 --> 00:11:17,150
on top of that the post message is

250
00:11:17,150 --> 00:11:21,080
encrypted using our c4 algorithm with

251
00:11:21,080 --> 00:11:23,180
key being the domain name it was

252
00:11:23,180 --> 00:11:24,980
querying with the fixed student

253
00:11:24,980 --> 00:11:27,380
appending to it and some of the very end

254
00:11:27,380 --> 00:11:32,000
uses server IP with the prefix as the

255
00:11:32,000 --> 00:11:35,960
rc4 key for decrypt the photo encryption

256
00:11:35,960 --> 00:11:38,510
as you can see the prefix is always a

257
00:11:38,510 --> 00:11:42,920
part of the cac-40 the idea is that it

258
00:11:42,920 --> 00:11:45,800
was the c2 servers to decide which sub

259
00:11:45,800 --> 00:11:48,560
domain he was going to use and only the

260
00:11:48,560 --> 00:11:50,480
right client with which had the right

261
00:11:50,480 --> 00:11:52,940
sub domain generated could be able to

262
00:11:52,940 --> 00:11:55,460
start initial communication with the c2

263
00:11:55,460 --> 00:11:58,640
server so if you for some reason no the

264
00:11:58,640 --> 00:12:01,400
c2 server IP and try to connect without

265
00:12:01,400 --> 00:12:04,220
knowing the prefix you cannot start a

266
00:12:04,220 --> 00:12:07,010
communication and the message sending

267
00:12:07,010 --> 00:12:10,460
back from the server to the client was

268
00:12:10,460 --> 00:12:12,470
also encrypted using our c4 key with a

269
00:12:12,470 --> 00:12:15,230
different key in the ID value generated

270
00:12:15,230 --> 00:12:18,800
using cpuid instruction and hashing

271
00:12:18,800 --> 00:12:23,750
function how did the server notice I be

272
00:12:23,750 --> 00:12:27,140
this RC four key it is in the initial

273
00:12:27,140 --> 00:12:30,250
request here's a list of parameters and

274
00:12:30,250 --> 00:12:32,480
descriptions of the data are sending to

275
00:12:32,480 --> 00:12:35,690
the server so you can see the there's a

276
00:12:35,690 --> 00:12:37,820
key vendor which is the first one that

277
00:12:37,820 --> 00:12:41,000
the lender key and the ID which is going

278
00:12:41,000 --> 00:12:43,340
to be used by the server to encrypt the

279
00:12:43,340 --> 00:12:46,360
message sending back to the client and

280
00:12:46,360 --> 00:12:49,610
installation mode and also the net the

281
00:12:49,610 --> 00:12:52,310
botnet name and the CMD and the double

282
00:12:52,310 --> 00:12:54,950
here together indicates the message type

283
00:12:54,950 --> 00:12:58,340
for example CMD equals to lock and W

284
00:12:58,340 --> 00:13:00,980
equals to compare informants this

285
00:13:00,980 --> 00:13:04,010
message contains a report of the

286
00:13:04,010 --> 00:13:05,040
infected

287
00:13:05,040 --> 00:13:11,310
house & Co LS means stolen flash cookie

288
00:13:11,310 --> 00:13:15,320
files and eskew but a nap UT means

289
00:13:15,320 --> 00:13:20,130
stolen Bitcoin wallets here are more

290
00:13:20,130 --> 00:13:22,380
parameters the version here is what we

291
00:13:22,380 --> 00:13:26,430
use to construct our timeline and here's

292
00:13:26,430 --> 00:13:29,940
an example of a request beings sent from

293
00:13:29,940 --> 00:13:32,880
a master master install installation

294
00:13:32,880 --> 00:13:36,449
mode process inside a botnet named USA

295
00:13:36,449 --> 00:13:39,810
and requesting for configuration file

296
00:13:39,810 --> 00:13:45,240
and the board collected an extensive

297
00:13:45,240 --> 00:13:47,720
user information from the local host

298
00:13:47,720 --> 00:13:51,569
here's the list of the information

299
00:13:51,569 --> 00:13:53,819
collected most of them could be used for

300
00:13:53,819 --> 00:13:56,240
user profiling and victim selection and

301
00:13:56,240 --> 00:13:58,139
there are some there are some

302
00:13:58,139 --> 00:14:01,019
interesting ones at the list of

303
00:14:01,019 --> 00:14:04,110
anti-malware products and whether it is

304
00:14:04,110 --> 00:14:06,630
running in the sandbox environment if it

305
00:14:06,630 --> 00:14:09,510
found any inside this report the server

306
00:14:09,510 --> 00:14:12,510
might repay reply back your fake

307
00:14:12,510 --> 00:14:15,389
complete configuration file instead so

308
00:14:15,389 --> 00:14:17,819
as an analyst you might be played with

309
00:14:17,819 --> 00:14:23,660
the fake downloading URL and got nothing

310
00:14:23,660 --> 00:14:25,829
now I will handle the rest of the

311
00:14:25,829 --> 00:14:29,029
present heading back to Mickey

312
00:14:29,050 --> 00:14:31,820
as I mentioned in the earlier session

313
00:14:31,820 --> 00:14:33,950
capo had employed a wide range of

314
00:14:33,950 --> 00:14:35,720
strategies to achieve his goal of

315
00:14:35,720 --> 00:14:37,880
sealing banking information a lot of

316
00:14:37,880 --> 00:14:40,460
these functions were not presented in

317
00:14:40,460 --> 00:14:43,339
the original catwalk back in 2011 they

318
00:14:43,339 --> 00:14:45,560
were at the slowly later since kappa

319
00:14:45,560 --> 00:14:47,360
uses named pipe to communicate between

320
00:14:47,360 --> 00:14:49,910
infected processes on the compromised

321
00:14:49,910 --> 00:14:52,100
machine plugins were able to install

322
00:14:52,100 --> 00:14:54,320
using a newer configuration file and

323
00:14:54,320 --> 00:14:56,480
still being able to still being

324
00:14:56,480 --> 00:14:59,510
compatible to capo client that might not

325
00:14:59,510 --> 00:15:03,529
be the latest one so here is a list of

326
00:15:03,529 --> 00:15:05,600
plugins that we have seen being download

327
00:15:05,600 --> 00:15:09,620
bike at all it had a browser cookies

328
00:15:09,620 --> 00:15:11,480
little stiller which extract information

329
00:15:11,480 --> 00:15:14,270
from the browser cookie database and use

330
00:15:14,270 --> 00:15:16,250
the cap host building archive to

331
00:15:16,250 --> 00:15:19,339
compressed it and uploaded the archival

332
00:15:19,339 --> 00:15:21,140
also does the same kind of thing for

333
00:15:21,140 --> 00:15:23,839
desktop screen shot videos there was

334
00:15:23,839 --> 00:15:26,000
also a VNC server which makes remote

335
00:15:26,000 --> 00:15:28,550
accessing the computer available ftp

336
00:15:28,550 --> 00:15:30,890
grabber took the locking credentials

337
00:15:30,890 --> 00:15:32,839
stolen in the infected machine from

338
00:15:32,839 --> 00:15:34,850
certain application and upload it to the

339
00:15:34,850 --> 00:15:38,420
sea to server at this spreader copies

340
00:15:38,420 --> 00:15:41,720
the catwalk line to removable drive or

341
00:15:41,720 --> 00:15:45,529
network shares there was a spambot

342
00:15:45,529 --> 00:15:47,750
blocking that uses the infected machine

343
00:15:47,750 --> 00:15:49,520
to distribute capital klein using

344
00:15:49,520 --> 00:15:52,520
download this band template and there's

345
00:15:52,520 --> 00:15:56,630
a back sock in which is a proxy server

346
00:15:56,630 --> 00:15:59,120
plugin that used the infected machine as

347
00:15:59,120 --> 00:16:02,270
a access point to bypass in Internet

348
00:16:02,270 --> 00:16:05,779
filtering the last plug-in skype

349
00:16:05,779 --> 00:16:07,550
spreader was the most interesting one

350
00:16:07,550 --> 00:16:09,670
which make cap Hall stands out as a

351
00:16:09,670 --> 00:16:14,300
banking children so the skype spreader

352
00:16:14,300 --> 00:16:16,670
first checked for the existence of skype

353
00:16:16,670 --> 00:16:19,010
application in the infected host then it

354
00:16:19,010 --> 00:16:21,529
test for the conductivity to the skype

355
00:16:21,529 --> 00:16:24,290
situ server the URL address of the sea

356
00:16:24,290 --> 00:16:26,390
to server is provided by the cap hull

357
00:16:26,390 --> 00:16:28,760
configuration file which will see be

358
00:16:28,760 --> 00:16:31,339
seeing that in the later slides next up

359
00:16:31,339 --> 00:16:33,410
it disabled the sound alert of the skype

360
00:16:33,410 --> 00:16:36,920
application and send HTTP request to the

361
00:16:36,920 --> 00:16:39,230
sea to server and retrieve a list of

362
00:16:39,230 --> 00:16:41,750
options on how they want to skype spare

363
00:16:41,750 --> 00:16:44,990
to be run let's say by using the weight

364
00:16:44,990 --> 00:16:47,720
away option skype spreader will be

365
00:16:47,720 --> 00:16:50,990
sleeping for and for a hard-coded amount

366
00:16:50,990 --> 00:16:52,850
of time before it's a spamming its

367
00:16:52,850 --> 00:16:58,180
contacts this sky spreader hoped the

368
00:16:58,180 --> 00:17:01,310
skype window using skype control API

369
00:17:01,310 --> 00:17:04,010
discover and skype control API attached

370
00:17:04,010 --> 00:17:07,130
however this will trigger the T sub

371
00:17:07,130 --> 00:17:10,819
communicator window to appear as you can

372
00:17:10,819 --> 00:17:13,250
see here to quickly get rid of this

373
00:17:13,250 --> 00:17:16,099
window the skype spreader will do some

374
00:17:16,099 --> 00:17:18,410
calculation on where the allow access

375
00:17:18,410 --> 00:17:20,689
button was located in this window and

376
00:17:20,689 --> 00:17:25,010
send a left mouse down event to make it

377
00:17:25,010 --> 00:17:29,090
go away with the authentication feature

378
00:17:29,090 --> 00:17:31,820
of skype from out of the window skype

379
00:17:31,820 --> 00:17:33,920
spreader proceed to retrieve the spam

380
00:17:33,920 --> 00:17:36,500
template from the sea to server by

381
00:17:36,500 --> 00:17:40,550
sending a at user HTTP requests then it

382
00:17:40,550 --> 00:17:42,440
will use this information to spam all

383
00:17:42,440 --> 00:17:46,360
the contacts in the infected skype user

384
00:17:46,360 --> 00:17:50,390
like this the last step of skype

385
00:17:50,390 --> 00:17:52,670
spreader was to clean up the Skype

386
00:17:52,670 --> 00:17:55,760
history database of his spam messages

387
00:17:55,760 --> 00:17:59,390
and send all done HTTP requests to the

388
00:17:59,390 --> 00:18:01,490
sea to server I would also like to point

389
00:18:01,490 --> 00:18:04,790
out that ng our bot was using a similar

390
00:18:04,790 --> 00:18:06,860
technique to spread the malicious

391
00:18:06,860 --> 00:18:08,900
software around the same time however

392
00:18:08,900 --> 00:18:11,330
this version of skype spreader we are

393
00:18:11,330 --> 00:18:13,490
seeing here farm of far more

394
00:18:13,490 --> 00:18:17,330
sophisticated seen it since it used it

395
00:18:17,330 --> 00:18:19,520
worked with cap hull configuration file

396
00:18:19,520 --> 00:18:21,680
and it requires to connect to a c2

397
00:18:21,680 --> 00:18:24,500
server the ngr bought skype spreader on

398
00:18:24,500 --> 00:18:26,990
the contrary had everything hard-coded

399
00:18:26,990 --> 00:18:30,050
in his spam time including its Pam

400
00:18:30,050 --> 00:18:34,550
template in there skype module now we

401
00:18:34,550 --> 00:18:36,590
are moving on to talk about cap whole

402
00:18:36,590 --> 00:18:39,050
configuration file after cap hull client

403
00:18:39,050 --> 00:18:40,880
is ran the first time on an on the

404
00:18:40,880 --> 00:18:43,610
machine kapil can inject itself into an

405
00:18:43,610 --> 00:18:46,940
existing process and install itself into

406
00:18:46,940 --> 00:18:49,400
this process under different modes they

407
00:18:49,400 --> 00:18:51,530
are restrictions on how the scattered

408
00:18:51,530 --> 00:18:54,029
process on the pc with the

409
00:18:54,029 --> 00:18:56,789
configuration father as it is indicated

410
00:18:56,789 --> 00:19:00,090
in this table here in each infected pc

411
00:19:00,090 --> 00:19:02,849
there are only one master which must not

412
00:19:02,849 --> 00:19:05,340
be injected into the browser process

413
00:19:05,340 --> 00:19:08,849
such as I Explorer AC or five Foxtrot

414
00:19:08,849 --> 00:19:11,279
Exe the master process main

415
00:19:11,279 --> 00:19:13,320
responsibility is to keep track of the

416
00:19:13,320 --> 00:19:16,649
c2 server information such as URL

417
00:19:16,649 --> 00:19:19,499
updates and capture of other cat hawk

418
00:19:19,499 --> 00:19:23,129
infected processes in the PC the

419
00:19:23,129 --> 00:19:25,440
infected process web slave installation

420
00:19:25,440 --> 00:19:27,479
mode could only be the browser processes

421
00:19:27,479 --> 00:19:30,869
though hence it focuses on parsing

422
00:19:30,869 --> 00:19:33,179
information in the HTTP tagg that

423
00:19:33,179 --> 00:19:35,969
contains information on how to do web

424
00:19:35,969 --> 00:19:39,119
page injection on specific pages the

425
00:19:39,119 --> 00:19:41,729
plug-in installation mode is used on all

426
00:19:41,729 --> 00:19:44,609
the downloaded modules hence these

427
00:19:44,609 --> 00:19:47,729
processes are allowed to parse all the

428
00:19:47,729 --> 00:19:50,309
texts that are related to the extra

429
00:19:50,309 --> 00:19:54,629
functionalities of this part here is

430
00:19:54,629 --> 00:19:56,639
what a cap hull configuration file looks

431
00:19:56,639 --> 00:19:59,099
like it contains the information about

432
00:19:59,099 --> 00:20:02,940
the botnet c2 server the other part of

433
00:20:02,940 --> 00:20:05,279
the configuration file will include

434
00:20:05,279 --> 00:20:08,070
instruction to run the building modules

435
00:20:08,070 --> 00:20:10,619
it also includes information regarding

436
00:20:10,619 --> 00:20:13,200
plugins it's download location or

437
00:20:13,200 --> 00:20:17,009
initial state after installation last

438
00:20:17,009 --> 00:20:18,690
and the most important part of the

439
00:20:18,690 --> 00:20:21,149
configuration file is the HTTP inject

440
00:20:21,149 --> 00:20:25,200
tag the download HT beach HTTP inject

441
00:20:25,200 --> 00:20:28,289
file is another XML format configuration

442
00:20:28,289 --> 00:20:31,109
file encrypted using the same method now

443
00:20:31,109 --> 00:20:32,759
we're going to discuss further about

444
00:20:32,759 --> 00:20:37,019
this file this configuration file is

445
00:20:37,019 --> 00:20:39,239
written to work with the hooked browser

446
00:20:39,239 --> 00:20:41,009
such that it could manipulate

447
00:20:41,009 --> 00:20:44,399
information in the browser based on an

448
00:20:44,399 --> 00:20:47,669
event it's detected such as alert box or

449
00:20:47,669 --> 00:20:51,929
URL visited based on these triggers the

450
00:20:51,929 --> 00:20:54,419
hooks browser will use the configuration

451
00:20:54,419 --> 00:20:56,339
files instruction to either inject

452
00:20:56,339 --> 00:20:59,070
script into the page or replacing

453
00:20:59,070 --> 00:21:01,679
certain string in the loader page which

454
00:21:01,679 --> 00:21:03,419
I will be demonstrating the later slides

455
00:21:03,419 --> 00:21:07,650
the URL visited or event can

456
00:21:07,650 --> 00:21:09,660
so trigger other modules of capital to

457
00:21:09,660 --> 00:21:12,360
assist in stealing user information such

458
00:21:12,360 --> 00:21:15,540
as login to the URL visited grabbing the

459
00:21:15,540 --> 00:21:18,870
forms initiating VNC session and so on

460
00:21:18,870 --> 00:21:21,360
it is interesting to point out that when

461
00:21:21,360 --> 00:21:23,220
the hooked browser detects a user is

462
00:21:23,220 --> 00:21:25,860
visiting the business of domain of a

463
00:21:25,860 --> 00:21:28,440
bank page the configuration file will

464
00:21:28,440 --> 00:21:30,600
enable the back contact server because

465
00:21:30,600 --> 00:21:32,520
the malware operator might think that

466
00:21:32,520 --> 00:21:34,890
the user is accessing from a copper

467
00:21:34,890 --> 00:21:36,840
environment and you will be easier to

468
00:21:36,840 --> 00:21:38,880
send back useful information to the sea

469
00:21:38,880 --> 00:21:41,400
to server if a proxy server has been set

470
00:21:41,400 --> 00:21:46,260
up from the HTTP inject file we can see

471
00:21:46,260 --> 00:21:49,140
that it was trying to replace bank help

472
00:21:49,140 --> 00:21:52,380
line numbers such as credit card fraud

473
00:21:52,380 --> 00:21:54,540
number to their own so that when the

474
00:21:54,540 --> 00:21:56,250
victim tries to call and report

475
00:21:56,250 --> 00:21:59,070
suspicious behavior in the account they

476
00:21:59,070 --> 00:22:01,320
will end up calling calling an answering

477
00:22:01,320 --> 00:22:07,020
machine another thing is that the HTTP

478
00:22:07,020 --> 00:22:08,880
inject configuration file can also

479
00:22:08,880 --> 00:22:11,910
duplicate in Portland input boxes and

480
00:22:11,910 --> 00:22:14,970
hide original ones such that it can use

481
00:22:14,970 --> 00:22:17,640
extra JavaScript to retrieve the users

482
00:22:17,640 --> 00:22:20,760
input information and send it back to

483
00:22:20,760 --> 00:22:27,810
the 2t server if all the key loggers or

484
00:22:27,810 --> 00:22:30,150
from foam grabbers doesn't work on

485
00:22:30,150 --> 00:22:32,490
certain bank websites there was also a

486
00:22:32,490 --> 00:22:35,310
module which captures a PC desktop into

487
00:22:35,310 --> 00:22:38,490
an avi video and upload it to the sea to

488
00:22:38,490 --> 00:22:44,430
server we have made a summary of all the

489
00:22:44,430 --> 00:22:46,800
banks being targeted by kappa from other

490
00:22:46,800 --> 00:22:49,710
HTTP inject configuration file we have

491
00:22:49,710 --> 00:22:52,440
collected there about 23 US based

492
00:22:52,440 --> 00:22:55,820
financial institution 28 from Italy and

493
00:22:55,820 --> 00:22:59,160
27 in UK and there are also mortgage

494
00:22:59,160 --> 00:23:02,790
loan companies credit card services us

495
00:23:02,790 --> 00:23:05,760
retirement saving services and treasury

496
00:23:05,760 --> 00:23:08,910
management services there are also some

497
00:23:08,910 --> 00:23:10,920
unlikely targets being discovered

498
00:23:10,920 --> 00:23:13,040
through these HTTP injection

499
00:23:13,040 --> 00:23:15,840
configuration file such as a library

500
00:23:15,840 --> 00:23:18,909
website a job search surface

501
00:23:18,909 --> 00:23:22,749
an Italian communication company the

502
00:23:22,749 --> 00:23:25,599
configuration file will just instruct a

503
00:23:25,599 --> 00:23:28,029
hoax browser to lock this URL visited

504
00:23:28,029 --> 00:23:31,149
for the case of the job search surface

505
00:23:31,149 --> 00:23:34,179
website the configuration file want to

506
00:23:34,179 --> 00:23:36,489
lock the URL only if it contains the

507
00:23:36,489 --> 00:23:39,099
search parameter which most likely will

508
00:23:39,099 --> 00:23:41,950
be containing information regarding job

509
00:23:41,950 --> 00:23:43,960
search we suspect that this information

510
00:23:43,960 --> 00:23:46,059
could be used against the victim by

511
00:23:46,059 --> 00:23:48,489
sending them better craft phishing

512
00:23:48,489 --> 00:23:51,700
emails or using as use it as a filter to

513
00:23:51,700 --> 00:23:53,799
data-mine victim who might be searching

514
00:23:53,799 --> 00:23:57,369
for a higher paid job in the month of

515
00:23:57,369 --> 00:24:00,849
May 2014 there were 12 see two servers

516
00:24:00,849 --> 00:24:03,279
in the united states and the rest of

517
00:24:03,279 --> 00:24:05,139
them are mostly located in european

518
00:24:05,139 --> 00:24:09,429
countries based on our observation

519
00:24:09,429 --> 00:24:11,739
capital requires two groups of people to

520
00:24:11,739 --> 00:24:13,869
work on some time consuming task for the

521
00:24:13,869 --> 00:24:17,349
botnet the one group will be the

522
00:24:17,349 --> 00:24:19,090
developers who are responsible in

523
00:24:19,090 --> 00:24:21,369
updated for updating configuration file

524
00:24:21,369 --> 00:24:23,440
to compare online banking security

525
00:24:23,440 --> 00:24:25,210
countermeasures or withdraw from

526
00:24:25,210 --> 00:24:28,450
difficult targets building new client to

527
00:24:28,450 --> 00:24:30,489
include the latest active c2 server

528
00:24:30,489 --> 00:24:33,549
domain updating the client with original

529
00:24:33,549 --> 00:24:36,489
code or copying rifle botnets code and

530
00:24:36,489 --> 00:24:39,429
adding new features and plugins there

531
00:24:39,429 --> 00:24:42,279
will be also a group of people who will

532
00:24:42,279 --> 00:24:44,889
be busy data mining for bank and credit

533
00:24:44,889 --> 00:24:47,139
card information filtering out Murphy

534
00:24:47,139 --> 00:24:49,529
victims from special browsing history

535
00:24:49,529 --> 00:24:52,570
monitoring VNC sessions or reviewing

536
00:24:52,570 --> 00:24:56,200
screenshot videos finally I have a few

537
00:24:56,200 --> 00:24:57,700
last word about what happened to cap

538
00:24:57,700 --> 00:25:01,840
hall now a botnet tracker has suddenly

539
00:25:01,840 --> 00:25:03,909
stopped all connections with C 2 servers

540
00:25:03,909 --> 00:25:08,080
in June 2014 after three years of

541
00:25:08,080 --> 00:25:10,809
operation multiple presses has reported

542
00:25:10,809 --> 00:25:13,690
that capital or was taken down

543
00:25:13,690 --> 00:25:16,919
by multi-agency joint effort in July

544
00:25:16,919 --> 00:25:21,309
2014 seizure of c2 server lead to

545
00:25:21,309 --> 00:25:24,039
discovery of Shiloh infrastructure I

546
00:25:24,039 --> 00:25:27,060
guess cat is out of the back by then

547
00:25:27,060 --> 00:25:30,040
last but not least no report of a rest

548
00:25:30,040 --> 00:25:37,500
has been made so far thank you okay

549
00:25:37,500 --> 00:25:40,180
thank you for the presentation we have

550
00:25:40,180 --> 00:25:41,890
like a minute or two for questions are

551
00:25:41,890 --> 00:25:46,890
there any questions the middle oh

