1
00:00:00,319 --> 00:00:04,049
okay welcome everybody to the second day

2
00:00:04,049 --> 00:00:05,879
of virus bulletin this is the second

3
00:00:05,879 --> 00:00:08,400
presentation in the red track today

4
00:00:08,400 --> 00:00:10,380
we're going to have a presentation on

5
00:00:10,380 --> 00:00:13,710
boot kits past present and future our

6
00:00:13,710 --> 00:00:15,830
presenters today will be Eugene

7
00:00:15,830 --> 00:00:19,970
radionova and Alexander mattress off

8
00:00:19,970 --> 00:00:22,529
please join me in welcoming them to the

9
00:00:22,529 --> 00:00:31,199
stage good morning everyone so we can

10
00:00:31,199 --> 00:00:33,750
start as the process the title of this

11
00:00:33,750 --> 00:00:35,940
presentation suggests today we are going

12
00:00:35,940 --> 00:00:38,340
to be talking about both gifts will

13
00:00:38,340 --> 00:00:41,570
consider how this kind of malware

14
00:00:41,570 --> 00:00:46,170
evolved over the recent years and

15
00:00:46,170 --> 00:00:49,820
discuss your the future attacks vectors

16
00:00:49,820 --> 00:00:51,989
against unified extensible firmware

17
00:00:51,989 --> 00:00:54,360
interface systems which again in

18
00:00:54,360 --> 00:00:56,940
popularity nowadays this is a joint

19
00:00:56,940 --> 00:00:59,449
presentation of three researchers

20
00:00:59,449 --> 00:01:01,500
unfortunately one of them David Harley

21
00:01:01,500 --> 00:01:06,119
was not able to make it here my name is

22
00:01:06,119 --> 00:01:07,650
Eugene rodionov and I am a specialized

23
00:01:07,650 --> 00:01:10,500
researcher we visit or in the last year

24
00:01:10,500 --> 00:01:12,650
a few years I've been doing their

25
00:01:12,650 --> 00:01:16,710
in-depth analysis uncomplicated the boot

26
00:01:16,710 --> 00:01:19,229
kids here his significant part of the

27
00:01:19,229 --> 00:01:22,020
complex threats I came through during

28
00:01:22,020 --> 00:01:24,270
the last few years I let lisa know matt

29
00:01:24,270 --> 00:01:26,400
rosoff to introduce himself I'm

30
00:01:26,400 --> 00:01:28,320
Alexander Morozov thank you for coming

31
00:01:28,320 --> 00:01:30,810
for this morning session I'm working for

32
00:01:30,810 --> 00:01:32,729
Intel advanced a jet research team with

33
00:01:32,729 --> 00:01:35,130
new team at the intro starting in the

34
00:01:35,130 --> 00:01:37,380
beginning of this year but we already

35
00:01:37,380 --> 00:01:39,630
made and use with module in SS library

36
00:01:39,630 --> 00:01:42,869
yesterday I highly recommend to update

37
00:01:42,869 --> 00:01:48,329
your browser Firefox and Chrome alright

38
00:01:48,329 --> 00:01:51,899
so this is their brief overview of the

39
00:01:51,899 --> 00:01:54,720
of this presentation or it consists of

40
00:01:54,720 --> 00:01:57,860
several parts so we'll start with vir

41
00:01:57,860 --> 00:02:00,750
another view a historical overview on

42
00:02:00,750 --> 00:02:03,479
the boot kids or how they evolved over

43
00:02:03,479 --> 00:02:07,649
the recent years will consider boot kit

44
00:02:07,649 --> 00:02:09,869
seen in the wild as well as their proof

45
00:02:09,869 --> 00:02:12,260
of concept implementations

46
00:02:12,260 --> 00:02:14,360
and your will speak about the

47
00:02:14,360 --> 00:02:16,579
classification of your legacy biased

48
00:02:16,579 --> 00:02:20,810
boot kids which we came across that will

49
00:02:20,810 --> 00:02:24,650
move to discuss in the year the the

50
00:02:24,650 --> 00:02:27,200
attack vectors which is kind of present

51
00:02:27,200 --> 00:02:29,420
and future against the unified

52
00:02:29,420 --> 00:02:31,760
extensible firmware interface will touch

53
00:02:31,760 --> 00:02:35,000
a secure boot implementation on Windows

54
00:02:35,000 --> 00:02:37,670
8 and the ways you're one can bypass

55
00:02:37,670 --> 00:02:43,220
this your security feature and as well

56
00:02:43,220 --> 00:02:45,319
we will discuss and present software

57
00:02:45,319 --> 00:02:48,200
which here which is used for forensic

58
00:02:48,200 --> 00:02:51,980
analysis against the boot kit so this is

59
00:02:51,980 --> 00:02:54,500
your ESET hidden FS reader and include

60
00:02:54,500 --> 00:02:58,519
chip stack frame work so I'm going to

61
00:02:58,519 --> 00:03:00,609
start with beer with this slide we sure

62
00:03:00,609 --> 00:03:04,280
depict severe the history of the modern

63
00:03:04,280 --> 00:03:06,470
boot kits or modern hero even buscas I

64
00:03:06,470 --> 00:03:09,709
hope everyone here can clearly severe

65
00:03:09,709 --> 00:03:13,609
the image so we're on top of the slide

66
00:03:13,609 --> 00:03:17,269
you can see there the boot kids seen in

67
00:03:17,269 --> 00:03:19,340
the wild while at the bottom these are

68
00:03:19,340 --> 00:03:22,750
your proof of concept implementations I

69
00:03:22,750 --> 00:03:25,129
want to bring the attention of the

70
00:03:25,129 --> 00:03:27,859
audience to this period which is marked

71
00:03:27,859 --> 00:03:30,889
as their Microsoft 64-bit platform games

72
00:03:30,889 --> 00:03:34,310
popularity and we can see that you're

73
00:03:34,310 --> 00:03:37,099
actually your most of the boot kids as

74
00:03:37,099 --> 00:03:40,519
well as their seen in the wild and proof

75
00:03:40,519 --> 00:03:43,609
of concept or appeared at this time so

76
00:03:43,609 --> 00:03:44,900
this is the time when they're modern

77
00:03:44,900 --> 00:03:47,449
booties you are flourishing and the main

78
00:03:47,449 --> 00:03:51,139
reason for that is their security

79
00:03:51,139 --> 00:03:53,480
enhancements in the windows 64-bit

80
00:03:53,480 --> 00:03:56,900
platform specifically Microsoft kernel

81
00:03:56,900 --> 00:03:59,060
mode Simon policy which prevented tour

82
00:03:59,060 --> 00:04:02,169
loading unauthorized kernel mode modules

83
00:04:02,169 --> 00:04:05,690
this pushed the root give developers to

84
00:04:05,690 --> 00:04:08,810
adopt a new vector specifically your

85
00:04:08,810 --> 00:04:11,030
bootcut vector to be able to circumvent

86
00:04:11,030 --> 00:04:17,060
this your security enhancement so

87
00:04:17,060 --> 00:04:20,728
this is a kind of person present the

88
00:04:20,728 --> 00:04:25,500
other period of time we can they're

89
00:04:25,500 --> 00:04:27,900
described as dear unified extensible

90
00:04:27,900 --> 00:04:29,699
firmware interface platforms gained

91
00:04:29,699 --> 00:04:31,229
popularity and secure boot is

92
00:04:31,229 --> 00:04:33,780
implemented in Windows 8 which was

93
00:04:33,780 --> 00:04:38,270
released in the end of 2013 so where

94
00:04:38,270 --> 00:04:41,419
this here this is an important milestone

95
00:04:41,419 --> 00:04:44,340
for a kind of newer boot get error

96
00:04:44,340 --> 00:04:47,310
because this is a new platform which is

97
00:04:47,310 --> 00:04:49,710
different to your legacy bias systems

98
00:04:49,710 --> 00:04:51,599
and here we can see that the racier

99
00:04:51,599 --> 00:04:54,030
first book a proof-of-concept boot kit

100
00:04:54,030 --> 00:04:56,009
targeting your unified extensible

101
00:04:56,009 --> 00:05:00,990
firmware interface by were clubs so this

102
00:05:00,990 --> 00:05:04,560
slide brings us to our discussion what's

103
00:05:04,560 --> 00:05:06,659
the difference between their legacy bias

104
00:05:06,659 --> 00:05:09,479
or systems and the new unified

105
00:05:09,479 --> 00:05:12,000
extensible firmware interface and your

106
00:05:12,000 --> 00:05:15,629
why the boot gets targeting the new

107
00:05:15,629 --> 00:05:19,650
platforms are different 2 to the legacy

108
00:05:19,650 --> 00:05:23,190
want so first of all we're there is no

109
00:05:23,190 --> 00:05:26,460
more MBR and BB are in the year unified

110
00:05:26,460 --> 00:05:28,520
extensible firmware interface platform

111
00:05:28,520 --> 00:05:31,319
so for those who are not familiar in

112
00:05:31,319 --> 00:05:33,569
your stands for master boot record and

113
00:05:33,569 --> 00:05:36,569
BB r is the volume Boot Record IPL use

114
00:05:36,569 --> 00:05:38,310
initial program loader so these

115
00:05:38,310 --> 00:05:41,900
components which are shown here

116
00:05:41,900 --> 00:05:43,740
disappear at the unified extensible

117
00:05:43,740 --> 00:05:45,900
firmware interface and that's why the

118
00:05:45,900 --> 00:05:48,810
malware targeting beer legacy by system

119
00:05:48,810 --> 00:05:52,050
is not able to infect the new systems

120
00:05:52,050 --> 00:05:55,349
the other difference is there the hard

121
00:05:55,349 --> 00:05:56,699
drive partitioning is rather different

122
00:05:56,699 --> 00:05:59,039
the your GP tier partitioning team is

123
00:05:59,039 --> 00:06:01,650
used in the you fi systems and secure

124
00:06:01,650 --> 00:06:03,240
boot technology is implemented in

125
00:06:03,240 --> 00:06:08,270
Windows 8 so this is a part of you UEFI

126
00:06:08,270 --> 00:06:13,610
specification which are enforces their

127
00:06:13,610 --> 00:06:16,080
authentication and integrity

128
00:06:16,080 --> 00:06:17,909
verification of their boot modules

129
00:06:17,909 --> 00:06:21,509
involved in the boot process so this

130
00:06:21,509 --> 00:06:24,120
technology is designed to work every

131
00:06:24,120 --> 00:06:26,099
decade they would get threats on there

132
00:06:26,099 --> 00:06:28,860
on the new systems

133
00:06:28,860 --> 00:06:32,320
so the previous slide actually is

134
00:06:32,320 --> 00:06:34,240
pleased your presentation and two parts

135
00:06:34,240 --> 00:06:36,250
on the first part of the presentation me

136
00:06:36,250 --> 00:06:39,910
I'm going to go through the leg through

137
00:06:39,910 --> 00:06:41,830
the boot is targeting legacy biases and

138
00:06:41,830 --> 00:06:44,430
in the second part of the presentation

139
00:06:44,430 --> 00:06:46,479
Alessandro matroska is going to

140
00:06:46,479 --> 00:06:49,199
concentrate on their you fi attack

141
00:06:49,199 --> 00:06:51,910
strategies and the ways to bypass secure

142
00:06:51,910 --> 00:06:55,150
boot so let's start with the year legacy

143
00:06:55,150 --> 00:06:58,330
r bias boot kids this slide you can see

144
00:06:58,330 --> 00:07:00,370
the generalized picture of the boot

145
00:07:00,370 --> 00:07:04,360
process for on this system so there is

146
00:07:04,360 --> 00:07:07,870
some bias in initialization which takes

147
00:07:07,870 --> 00:07:09,850
place in the first and there are and

148
00:07:09,850 --> 00:07:13,210
here is where MBR kicks in which it

149
00:07:13,210 --> 00:07:16,810
takes receives control and your handles

150
00:07:16,810 --> 00:07:19,810
the boot process these are the

151
00:07:19,810 --> 00:07:21,789
Companions which are frequently targeted

152
00:07:21,789 --> 00:07:25,419
by their legacy buys boot kits so it is

153
00:07:25,419 --> 00:07:29,590
in some sort of tampering with this code

154
00:07:29,590 --> 00:07:31,810
or replacement with the militias ones

155
00:07:31,810 --> 00:07:36,220
and here here is the classification of

156
00:07:36,220 --> 00:07:41,680
your NBR and vbr booties so generally we

157
00:07:41,680 --> 00:07:43,840
can be split in two parts the first one

158
00:07:43,840 --> 00:07:46,810
involves modification of the NBR where

159
00:07:46,810 --> 00:07:49,410
the second big big group and both

160
00:07:49,410 --> 00:07:52,570
modification that tampering with we beer

161
00:07:52,570 --> 00:07:56,440
right he'll the first group in turn may

162
00:07:56,440 --> 00:08:00,150
be split in two subgroups the first one

163
00:08:00,150 --> 00:08:02,800
involves in buren put modification the

164
00:08:02,800 --> 00:08:04,030
other one is partition table

165
00:08:04,030 --> 00:08:07,780
modification so impure is the is the

166
00:08:07,780 --> 00:08:09,490
data structure with the code which

167
00:08:09,490 --> 00:08:11,500
consists of two parts the first part is

168
00:08:11,500 --> 00:08:13,389
the empirical which handles the boot

169
00:08:13,389 --> 00:08:15,880
process and the second part is the

170
00:08:15,880 --> 00:08:17,470
partition table which defines the

171
00:08:17,470 --> 00:08:20,110
partitioning of their hard drive so dt

172
00:08:20,110 --> 00:08:24,370
deal for izzy is the representative of

173
00:08:24,370 --> 00:08:26,860
the first group when you just modifies

174
00:08:26,860 --> 00:08:28,660
the Imperial code but it leaves your

175
00:08:28,660 --> 00:08:31,539
partition table untouched almaz can turn

176
00:08:31,539 --> 00:08:35,169
is the different it doesn't touch in the

177
00:08:35,169 --> 00:08:38,229
record but it modifies partition table

178
00:08:38,229 --> 00:08:40,230
in fact it creates a new part

179
00:08:40,230 --> 00:08:44,520
table entry in the partition table marks

180
00:08:44,520 --> 00:08:47,940
it is it an active one and this is how

181
00:08:47,940 --> 00:08:49,620
it receives control at the next boot up

182
00:08:49,620 --> 00:08:54,030
of the system the next group Weber and

183
00:08:54,030 --> 00:08:57,780
appeal is different and a little bit

184
00:08:57,780 --> 00:08:59,640
more complicated than the previous one

185
00:08:59,640 --> 00:09:01,740
in terms of your detection and

186
00:09:01,740 --> 00:09:04,740
remediation it can be split and turn in

187
00:09:04,740 --> 00:09:06,660
two parts the first one is the IPL

188
00:09:06,660 --> 00:09:08,490
killed modification and as we will see

189
00:09:08,490 --> 00:09:10,830
on the next slide your this is how the

190
00:09:10,830 --> 00:09:13,230
blob Nixon thinks the systems and your

191
00:09:13,230 --> 00:09:16,200
the other one which is the way more

192
00:09:16,200 --> 00:09:18,810
interesting which was implemented in the

193
00:09:18,810 --> 00:09:21,240
gaps boot get it involves buys parameter

194
00:09:21,240 --> 00:09:26,030
block modification so let's see there

195
00:09:26,030 --> 00:09:32,370
ronix infection strategy on this slide

196
00:09:32,370 --> 00:09:34,890
there easier a picture of the layout of

197
00:09:34,890 --> 00:09:36,450
the harddrive before and not after

198
00:09:36,450 --> 00:09:38,790
infection we can see that the bootstrap

199
00:09:38,790 --> 00:09:41,970
code in fact this is an IPL which gets

200
00:09:41,970 --> 00:09:43,890
in fact is in the following way the

201
00:09:43,890 --> 00:09:45,330
malware I just can process it and

202
00:09:45,330 --> 00:09:47,760
advance to the malicious code and this

203
00:09:47,760 --> 00:09:49,980
is how it receives control at the next

204
00:09:49,980 --> 00:09:53,160
system startup you can get more

205
00:09:53,160 --> 00:09:57,090
information on this year threat and

206
00:09:57,090 --> 00:10:01,250
disinfection vector at this reference

207
00:10:02,480 --> 00:10:08,250
the second year the second type of vbr

208
00:10:08,250 --> 00:10:11,610
IPL infection strategist is the

209
00:10:11,610 --> 00:10:13,320
modification of the vice parameter block

210
00:10:13,320 --> 00:10:17,340
and this is your infection vector is

211
00:10:17,340 --> 00:10:20,700
adopted in the gaps boot kit so this is

212
00:10:20,700 --> 00:10:23,940
very interesting because the election

213
00:10:23,940 --> 00:10:27,150
results only in modification of only

214
00:10:27,150 --> 00:10:34,410
four bytes of the year of the VBR so on

215
00:10:34,410 --> 00:10:36,750
this slide you can see the layout over

216
00:10:36,750 --> 00:10:40,290
there vbr it starts with the first three

217
00:10:40,290 --> 00:10:42,390
bites of jump instruction then there is

218
00:10:42,390 --> 00:10:45,960
a vba code which takes over and this

219
00:10:45,960 --> 00:10:47,850
structure is the bias parameter block

220
00:10:47,850 --> 00:10:50,250
which describes the parameters of the

221
00:10:50,250 --> 00:10:52,140
UNT phase volume so this is a file

222
00:10:52,140 --> 00:10:53,130
system specific star

223
00:10:53,130 --> 00:10:58,500
sure here is how it looks like for ntfs

224
00:10:58,500 --> 00:11:00,540
file system and the highlight if you can

225
00:11:00,540 --> 00:11:03,510
see the year hidden sectors field this

226
00:11:03,510 --> 00:11:05,580
is actually the target only four bytes

227
00:11:05,580 --> 00:11:10,110
we should be gaps modifies so this is

228
00:11:10,110 --> 00:11:13,080
just in hex these are the four bars

229
00:11:13,080 --> 00:11:16,670
which are patched the rest of the VBR

230
00:11:16,670 --> 00:11:22,560
remains a unmodified so the meaning of

231
00:11:22,560 --> 00:11:24,690
the number of hidden sectors in the

232
00:11:24,690 --> 00:11:27,780
interface system that specifies the an

233
00:11:27,780 --> 00:11:29,910
offset to the initial program loader

234
00:11:29,910 --> 00:11:33,780
which is your I've used at the system

235
00:11:33,780 --> 00:11:36,150
startup so this is on the clean system

236
00:11:36,150 --> 00:11:38,280
the number of human sectors points to

237
00:11:38,280 --> 00:11:41,610
the correct location of the IPL on the

238
00:11:41,610 --> 00:11:44,580
infected system the modified number did

239
00:11:44,580 --> 00:11:48,270
they develop the hidden sectors point to

240
00:11:48,270 --> 00:11:50,700
somewhere else this is where the boot

241
00:11:50,700 --> 00:11:55,260
kit code is located while the rest of

242
00:11:55,260 --> 00:11:57,750
the VBR and embed code remains untouched

243
00:11:57,750 --> 00:12:01,860
and the it's actually quite difficult to

244
00:12:01,860 --> 00:12:04,590
spot this infection in the wild because

245
00:12:04,590 --> 00:12:06,630
the four bytes which gaps is modifying

246
00:12:06,630 --> 00:12:09,210
their they may be different on different

247
00:12:09,210 --> 00:12:13,500
systems and you're there for instance

248
00:12:13,500 --> 00:12:15,600
you cannot create a static signature

249
00:12:15,600 --> 00:12:18,000
that will be your bit allow you to

250
00:12:18,000 --> 00:12:20,910
easily spot this threat in the world one

251
00:12:20,910 --> 00:12:23,760
needs to take more deeper approach to be

252
00:12:23,760 --> 00:12:25,890
able to find the detection on the earth

253
00:12:25,890 --> 00:12:32,250
on the machine so this slide summarizes

254
00:12:32,250 --> 00:12:37,080
the year the features of your most

255
00:12:37,080 --> 00:12:39,890
widely spread the boot kit sir force

256
00:12:39,890 --> 00:12:44,180
seen in the world so such feature our

257
00:12:44,180 --> 00:12:48,180
aim BR if it's a mirror or vbr top of

258
00:12:48,180 --> 00:12:51,240
the type of modification if there is any

259
00:12:51,240 --> 00:12:53,310
kind of hidden storage implemented by

260
00:12:53,310 --> 00:12:55,170
the boot depressed because since the

261
00:12:55,170 --> 00:12:58,380
boot can threats take over before the

262
00:12:58,380 --> 00:13:00,680
operating system is initialized and

263
00:13:00,680 --> 00:13:03,990
therefore they cannot use the file

264
00:13:03,990 --> 00:13:06,030
system provided that by the operating

265
00:13:06,030 --> 00:13:06,780
system

266
00:13:06,780 --> 00:13:09,360
so in most of the cases the implement

267
00:13:09,360 --> 00:13:12,870
the wrong custom hidden storage as we

268
00:13:12,870 --> 00:13:15,870
can see here and it may be either fat32

269
00:13:15,870 --> 00:13:18,780
system or some custom implementations

270
00:13:18,780 --> 00:13:21,240
which is a generally encrypted sometimes

271
00:13:21,240 --> 00:13:24,630
compressed and now the interesting

272
00:13:24,630 --> 00:13:27,630
feature is the custom implementation of

273
00:13:27,630 --> 00:13:30,180
tcp/ip stack to communicate to cincy

274
00:13:30,180 --> 00:13:33,470
server so this is done to bypass

275
00:13:33,470 --> 00:13:36,210
personal firewalls and network the

276
00:13:36,210 --> 00:13:39,150
detection tools which are installed

277
00:13:39,150 --> 00:13:41,820
locally on the infected machine because

278
00:13:41,820 --> 00:13:44,090
the malware does not utilize your

279
00:13:44,090 --> 00:13:46,740
operating system tcp/ip stack which is

280
00:13:46,740 --> 00:13:48,330
usually hooked by this security software

281
00:13:48,330 --> 00:13:51,270
but implements its own and we can see

282
00:13:51,270 --> 00:13:53,430
that the gaps and the latest

283
00:13:53,430 --> 00:13:58,339
modification of ronix use this feature

284
00:13:58,610 --> 00:14:04,620
so to be able to do forensic analysis to

285
00:14:04,620 --> 00:14:07,050
be able to extract the information from

286
00:14:07,050 --> 00:14:10,200
the hidden storages in the course of our

287
00:14:10,200 --> 00:14:12,570
research we implemented a hidden FS

288
00:14:12,570 --> 00:14:14,520
reader is a forensic tool which allows

289
00:14:14,520 --> 00:14:17,550
toward am contents of the hidden storage

290
00:14:17,550 --> 00:14:19,260
so for instance on this image you can

291
00:14:19,260 --> 00:14:21,990
see that it's dumping their contents of

292
00:14:21,990 --> 00:14:25,380
the gaps vbr filesystem and all the

293
00:14:25,380 --> 00:14:27,540
configuration files and the modules and

294
00:14:27,540 --> 00:14:31,320
the payload and here is the year the

295
00:14:31,320 --> 00:14:36,690
least of all the of all the malware

296
00:14:36,690 --> 00:14:40,580
which is supported by this tool

297
00:14:41,649 --> 00:14:45,759
so this is your small conclusion of this

298
00:14:45,759 --> 00:14:48,040
part and I'm passing the word to

299
00:14:48,040 --> 00:14:50,589
Alexander much Joseph who will guide you

300
00:14:50,589 --> 00:14:52,089
through the your unified extensible

301
00:14:52,089 --> 00:14:57,490
firmware interface at X then world moved

302
00:14:57,490 --> 00:15:01,389
to you if I we have 20 more slides for

303
00:15:01,389 --> 00:15:03,490
the next 10 minutes and some slides I

304
00:15:03,490 --> 00:15:10,059
will be going quickly so after using qfi

305
00:15:10,059 --> 00:15:14,439
it's not mean legacy bias but it's not

306
00:15:14,439 --> 00:15:17,829
worked it's not worked with some new

307
00:15:17,829 --> 00:15:21,429
operating systems which support secure

308
00:15:21,429 --> 00:15:25,170
boot but if you use some as example

309
00:15:25,170 --> 00:15:28,959
windows 7 incorporated still used it's

310
00:15:28,959 --> 00:15:33,699
possible to boot with legacy and there

311
00:15:33,699 --> 00:15:38,429
will be our support with you ufi biases

312
00:15:38,429 --> 00:15:44,819
so it's the first break some last

313
00:15:44,819 --> 00:15:48,069
interesting trades overview Chernobyl

314
00:15:48,069 --> 00:15:51,420
first week for biases my bro me first

315
00:15:51,420 --> 00:15:56,350
first by skeet abusing bios update

316
00:15:56,350 --> 00:16:03,749
process ok it's a high level picture for

317
00:16:03,749 --> 00:16:06,939
you five firmer boot process we starting

318
00:16:06,939 --> 00:16:10,029
from cpu reset vector and going to the

319
00:16:10,029 --> 00:16:13,360
next steps most interesting sits driver

320
00:16:13,360 --> 00:16:15,490
execution for dixie drivers it's

321
00:16:15,490 --> 00:16:18,959
possible to abuse by malicious drivers

322
00:16:18,959 --> 00:16:23,350
also it's possible to modify some boot

323
00:16:23,350 --> 00:16:31,089
OS folders and on the steps ok on this

324
00:16:31,089 --> 00:16:34,049
picture you can see the hardware level

325
00:16:34,049 --> 00:16:37,179
system firmware level you fight driver

326
00:16:37,179 --> 00:16:40,209
and curve and some components of you

327
00:16:40,209 --> 00:16:43,600
file odors which booting the operating

328
00:16:43,600 --> 00:16:48,519
system and the first vector of attack is

329
00:16:48,519 --> 00:16:51,870
abusing bootloader

330
00:16:51,870 --> 00:16:56,870
on this level and we currently know

331
00:16:56,870 --> 00:17:01,080
three ways to do this the first one it's

332
00:17:01,080 --> 00:17:03,990
some old technique with replacing boot

333
00:17:03,990 --> 00:17:09,300
manager directly and also interesting is

334
00:17:09,300 --> 00:17:12,930
replacing faubourg bootloader directly

335
00:17:12,930 --> 00:17:16,880
in into the file system it's already

336
00:17:16,880 --> 00:17:20,280
presented by us in the last year by

337
00:17:20,280 --> 00:17:25,859
Sebastian from quarks lab and sources of

338
00:17:25,859 --> 00:17:32,160
this bios kid if I boot kit is available

339
00:17:32,160 --> 00:17:36,150
on the github and the last one it's

340
00:17:36,150 --> 00:17:39,510
adding new good loader also directly in

341
00:17:39,510 --> 00:17:42,750
file system it's really easy to detect

342
00:17:42,750 --> 00:17:45,540
by anti viruses because it's possible to

343
00:17:45,540 --> 00:17:47,429
recognize into the file system on

344
00:17:47,429 --> 00:17:51,450
operating system level the next one it's

345
00:17:51,450 --> 00:17:57,120
the if malware abused operating system

346
00:17:57,120 --> 00:18:02,460
and install malicious Dixie driver its

347
00:18:02,460 --> 00:18:10,380
start in special storage which starting

348
00:18:10,380 --> 00:18:14,520
fixed drive and it's not in bad in the

349
00:18:14,520 --> 00:18:18,480
volume but it's possible to boot before

350
00:18:18,480 --> 00:18:21,590
operating system if provided

351
00:18:21,590 --> 00:18:25,020
modification by what my by malware for

352
00:18:25,020 --> 00:18:31,230
driver order in efi variables also

353
00:18:31,230 --> 00:18:34,470
interesting it's abusing you fight

354
00:18:34,470 --> 00:18:40,590
option ROM this way presented by snare

355
00:18:40,590 --> 00:18:47,040
in black hat 2012 for mark books and Mac

356
00:18:47,040 --> 00:18:48,960
OS operating system which proof of

357
00:18:48,960 --> 00:18:51,480
concept at live demo it's a really

358
00:18:51,480 --> 00:18:55,880
interesting way but so complex and I

359
00:18:55,880 --> 00:18:59,220
don't see some public proof of concept

360
00:18:59,220 --> 00:19:01,350
for this technique

361
00:19:01,350 --> 00:19:05,010
and the last one it's replacing directly

362
00:19:05,010 --> 00:19:07,980
bootloaders window g5 in resume if I and

363
00:19:07,980 --> 00:19:11,190
punching grid partition table patching

364
00:19:11,190 --> 00:19:13,890
grid partition table it looks like go

365
00:19:13,890 --> 00:19:17,309
back to the legacy bias treads for in br

366
00:19:17,309 --> 00:19:21,679
br because directly working with some

367
00:19:21,679 --> 00:19:29,039
configuration for partitions okay if we

368
00:19:29,039 --> 00:19:33,510
compromised by malware all those levels

369
00:19:33,510 --> 00:19:39,360
we can abusing OS on the early booting

370
00:19:39,360 --> 00:19:45,059
steps what about secure boot of course

371
00:19:45,059 --> 00:19:48,510
on some new operating system Windows 8

372
00:19:48,510 --> 00:19:51,900
Windows 8 dot one using secure boot and

373
00:19:51,900 --> 00:19:57,480
it's really interesting and good

374
00:19:57,480 --> 00:20:02,360
technology for against boot kids but

375
00:20:02,360 --> 00:20:08,220
have has some information about attacks

376
00:20:08,220 --> 00:20:11,669
on secure boot too okay looking on this

377
00:20:11,669 --> 00:20:16,980
scheme and BIOS updates go directly into

378
00:20:16,980 --> 00:20:20,730
firmware available and if abused the

379
00:20:20,730 --> 00:20:27,809
UEFI we can modify we can break a chain

380
00:20:27,809 --> 00:20:30,659
of trust and a boonton kappa rating

381
00:20:30,659 --> 00:20:36,419
system without support of secure boot it

382
00:20:36,419 --> 00:20:38,970
looks like this exploit going from a

383
00:20:38,970 --> 00:20:42,419
grating system level directly to abusing

384
00:20:42,419 --> 00:20:48,570
firmware and on the next steps it's

385
00:20:48,570 --> 00:20:52,890
breaking chain of trust the first public

386
00:20:52,890 --> 00:20:56,370
windows 8 secure boot bypass presented

387
00:20:56,370 --> 00:21:00,990
in the last black hat in 2015 by my team

388
00:21:00,990 --> 00:21:06,419
and in this year mitra presented also

389
00:21:06,419 --> 00:21:08,309
really interesting technique for

390
00:21:08,309 --> 00:21:10,440
bypassing secure boot on windows 8 dot

391
00:21:10,440 --> 00:21:14,759
one more information you can

392
00:21:14,759 --> 00:21:19,919
finding the piper it's just

393
00:21:19,919 --> 00:21:22,469
demonstrations last year for bypass

394
00:21:22,469 --> 00:21:27,749
secure boot on the life platform in this

395
00:21:27,749 --> 00:21:29,909
year representing karidian defconn's the

396
00:21:29,909 --> 00:21:31,979
summary of attacks against bias and

397
00:21:31,979 --> 00:21:36,539
secure boot on this figure you can see

398
00:21:36,539 --> 00:21:39,929
eight different ways to compromise

399
00:21:39,929 --> 00:21:44,099
system failure and bias only five is efi

400
00:21:44,099 --> 00:21:49,469
support and all exploits demonstrated on

401
00:21:49,469 --> 00:21:54,690
DEFCON discuss it on DEFCON and we

402
00:21:54,690 --> 00:21:56,909
provide some live demo for bypassing

403
00:21:56,909 --> 00:22:03,509
secure boot to what is the main problem

404
00:22:03,509 --> 00:22:06,809
with bios vendors it's a lot of wires

405
00:22:06,809 --> 00:22:10,319
vendors but don't have a unified

406
00:22:10,319 --> 00:22:15,179
procedure for update the biases and each

407
00:22:15,179 --> 00:22:21,029
lender going to update by different

408
00:22:21,029 --> 00:22:26,249
rules in the beginning of this year was

409
00:22:26,249 --> 00:22:28,229
presenting really interesting system

410
00:22:28,229 --> 00:22:31,829
sub-zero by Teddy Reed it's the special

411
00:22:31,829 --> 00:22:35,849
crowler which downward bias updates and

412
00:22:35,849 --> 00:22:39,479
provide some simple positive technique

413
00:22:39,479 --> 00:22:43,499
and this technique really simple to

414
00:22:43,499 --> 00:22:47,389
recognize one days and it looks like

415
00:22:47,389 --> 00:22:51,479
bias exploits possible to use not just

416
00:22:51,479 --> 00:22:53,729
for targeted attacks it's not expensive

417
00:22:53,729 --> 00:22:57,089
to run a growler and recognize someone

418
00:22:57,089 --> 00:23:00,239
days because sometimes the patch it's

419
00:23:00,239 --> 00:23:02,879
really simple just modify one variable

420
00:23:02,879 --> 00:23:14,369
or removed some words okay the next part

421
00:23:14,369 --> 00:23:16,199
of my presentation i will be discussing

422
00:23:16,199 --> 00:23:18,299
the cheap check its platform for

423
00:23:18,299 --> 00:23:22,289
assessment for blood from security

424
00:23:22,289 --> 00:23:26,620
assessment and it's open source and

425
00:23:26,620 --> 00:23:28,930
on this week we released five new models

426
00:23:28,930 --> 00:23:35,500
and also support a new version of line

427
00:23:35,500 --> 00:23:37,180
of the driver for better support this

428
00:23:37,180 --> 00:23:40,720
platform it's possible to run from

429
00:23:40,720 --> 00:23:43,809
Windows operating system linux and also

430
00:23:43,809 --> 00:23:46,950
directly from you fi shell its

431
00:23:46,950 --> 00:23:51,220
architecture all functionality of chip

432
00:23:51,220 --> 00:23:54,850
shake working from Python and we have

433
00:23:54,850 --> 00:23:58,450
some hardware abstraction layer which

434
00:23:58,450 --> 00:24:03,929
working directly with hardware by driver

435
00:24:03,929 --> 00:24:06,790
and all this functionality you can used

436
00:24:06,790 --> 00:24:12,270
from Python it's really really useful to

437
00:24:12,420 --> 00:24:15,820
also today afternoon meteor will be

438
00:24:15,820 --> 00:24:18,370
presenting information about Copernicus

439
00:24:18,370 --> 00:24:22,600
it's the second tool for you five

440
00:24:22,600 --> 00:24:24,850
security assessment really interesting

441
00:24:24,850 --> 00:24:30,370
and i highly recommend to come okay it's

442
00:24:30,370 --> 00:24:33,220
some information about models it's the

443
00:24:33,220 --> 00:24:36,250
conference when this techniques was

444
00:24:36,250 --> 00:24:40,590
presented from chip stack

445
00:24:45,090 --> 00:24:48,480
cheap check possible to used for buyers

446
00:24:48,480 --> 00:24:52,419
forensics and firmer forensics a lot of

447
00:24:52,419 --> 00:24:57,360
information covering from configuration

448
00:25:00,480 --> 00:25:05,710
cheap chick has decoders for you fi and

449
00:25:05,710 --> 00:25:10,720
some biases and you can unpack all

450
00:25:10,720 --> 00:25:16,480
information for forensic process also

451
00:25:16,480 --> 00:25:20,440
chipset have software support to dump

452
00:25:20,440 --> 00:25:24,730
from spy flash firmware but i highly

453
00:25:24,730 --> 00:25:27,549
recommend to forensics used some

454
00:25:27,549 --> 00:25:31,720
hardware tools because if the platform

455
00:25:31,720 --> 00:25:34,960
abused by malware you don't have a

456
00:25:34,960 --> 00:25:38,769
guarantee if you get a firmware damn by

457
00:25:38,769 --> 00:25:41,789
software it's not modified by malware in

458
00:25:41,789 --> 00:25:45,630
in the damping process and it's some

459
00:25:45,630 --> 00:25:49,059
really cheap tool with bus pirate good

460
00:25:49,059 --> 00:25:54,519
fat just 30 bucks but you need the

461
00:25:54,519 --> 00:25:58,269
commendation but by spy flash chip for

462
00:25:58,269 --> 00:26:01,090
recognize right pins and not damage it

463
00:26:01,090 --> 00:26:06,159
cheap and did it broke it's more

464
00:26:06,159 --> 00:26:08,950
expensive to but have really good

465
00:26:08,950 --> 00:26:11,710
software with automatic automated

466
00:26:11,710 --> 00:26:15,460
recognizers for most known chips use it

467
00:26:15,460 --> 00:26:20,529
by my vendors not not only for buyers

468
00:26:20,529 --> 00:26:27,010
for a lot of things okay how many times

469
00:26:27,010 --> 00:26:31,149
we have with about 30 minutes okay we

470
00:26:31,149 --> 00:26:36,909
have some demonstration and we take bed

471
00:26:36,909 --> 00:26:41,049
bias image which share shared by dragus

472
00:26:41,049 --> 00:26:45,850
in internet and try to make some simple

473
00:26:45,850 --> 00:26:50,428
forensic procedure

474
00:26:51,719 --> 00:26:54,719
ok

475
00:26:58,710 --> 00:27:01,340
so

476
00:27:06,460 --> 00:27:10,020
Ronald Emma but I don't see the bottom

477
00:27:10,020 --> 00:27:13,020
okay

478
00:27:19,830 --> 00:27:26,370
so it's infected image it's update its

479
00:27:26,370 --> 00:27:29,370
original image going for bios update

480
00:27:29,370 --> 00:27:31,679
this version + download it from vendor

481
00:27:31,679 --> 00:27:37,289
side we run a chip stack chips tech

482
00:27:37,289 --> 00:27:41,760
support most common configurations for

483
00:27:41,760 --> 00:27:44,669
the platform for decode and we run the

484
00:27:44,669 --> 00:27:47,690
code for infected and for original one

485
00:27:47,690 --> 00:27:53,730
images and get all variables and

486
00:27:53,730 --> 00:28:00,440
structure and so on it's after damp

487
00:28:00,440 --> 00:28:05,179
structure of directories a lot of stuff

488
00:28:08,530 --> 00:28:11,190
ok

489
00:28:14,070 --> 00:28:21,080
and after we run recursive deef for each

490
00:28:21,080 --> 00:28:27,260
directory with the original 12 infected

491
00:28:27,380 --> 00:28:31,820
ok run a DS

492
00:28:34,250 --> 00:28:36,860
so

493
00:28:36,860 --> 00:28:40,470
you have some differences but if you

494
00:28:40,470 --> 00:28:42,840
look its differences in in veeram and

495
00:28:42,840 --> 00:28:45,360
bios update don't have in veeram in

496
00:28:45,360 --> 00:28:48,780
veeram it's initialized in into the

497
00:28:48,780 --> 00:28:52,650
platform and we don't find something

498
00:28:52,650 --> 00:28:55,200
interesting in the bed bias and just use

499
00:28:55,200 --> 00:29:05,910
this image forget your attention ok back

500
00:29:05,910 --> 00:29:08,810
to presentation

501
00:29:19,770 --> 00:29:24,750
so if we conclude our talk the legacy

502
00:29:24,750 --> 00:29:28,830
biases for not for operating system

503
00:29:28,830 --> 00:29:32,160
which not supported you fi and secure

504
00:29:32,160 --> 00:29:37,260
boot it still worked but a new operating

505
00:29:37,260 --> 00:29:40,950
system have also some techniques for

506
00:29:40,950 --> 00:29:44,760
bypassing security tiffany technologies

507
00:29:44,760 --> 00:29:49,440
as secure boot and we have don't have a

508
00:29:49,440 --> 00:29:53,060
lot of time and going to the next slide

509
00:29:53,060 --> 00:29:57,240
in the next year I am a Eugene and

510
00:29:57,240 --> 00:30:00,150
Eugene we presenting advanced admire

511
00:30:00,150 --> 00:30:03,600
malware analysis book be working with no

512
00:30:03,600 --> 00:30:06,240
starch press and highly recommend to get

513
00:30:06,240 --> 00:30:12,800
this book thank you for your attention

514
00:30:16,070 --> 00:30:18,510
Thank You Eugene and Alexander

515
00:30:18,510 --> 00:30:20,490
unfortunately we don't have any time for

516
00:30:20,490 --> 00:30:23,520
questions so again everyone join me in

517
00:30:23,520 --> 00:30:24,450
thanking them for their wonderful

518
00:30:24,450 --> 00:30:27,230
presentation

