1
00:00:00,829 --> 00:00:06,450
that parolee I know that parolee for a

2
00:00:03,389 --> 00:00:09,870
long time ago he actually won my capture

3
00:00:06,450 --> 00:00:12,509
the flag what 80 years ago or simply

4
00:00:09,870 --> 00:00:15,629
actually not eight years ago

5
00:00:12,509 --> 00:00:17,449
we're not that off but yeah we're done

6
00:00:15,630 --> 00:00:21,630
do what hang out to be pretty good with

7
00:00:17,449 --> 00:00:23,730
how can halted the enemy 10 2010 this

8
00:00:21,630 --> 00:00:26,189
guy was ready by hacking stuff and I

9
00:00:23,730 --> 00:00:27,109
remember I had a challenge there was a

10
00:00:26,189 --> 00:00:30,448
blog server

11
00:00:27,109 --> 00:00:31,260
it was a blog server he was the only one

12
00:00:30,449 --> 00:00:37,140
on puppet

13
00:00:31,260 --> 00:00:39,660
so he's amazing and now working at a big

14
00:00:37,140 --> 00:00:41,510
big company so I'm sure that well he's

15
00:00:39,660 --> 00:00:44,629
gonna say today's very intense you know

16
00:00:41,510 --> 00:00:46,489
technical so please join me in welcoming

17
00:00:44,629 --> 00:00:53,599
that girl

18
00:00:46,490 --> 00:00:53,599
[Applause]

19
00:01:01,579 --> 00:01:08,240
it's a switch tricky hello everybody so

20
00:01:05,770 --> 00:01:09,979
if you're unable to read the name of

21
00:01:08,240 --> 00:01:13,520
this talk is extending archive based

22
00:01:09,979 --> 00:01:15,710
path traversal attacks so let's go ahead

23
00:01:13,520 --> 00:01:17,750
and get started I got a fantastic

24
00:01:15,710 --> 00:01:20,000
introduction from rod but I want to tell

25
00:01:17,750 --> 00:01:23,119
you a little bit more about myself I am

26
00:01:20,000 --> 00:01:24,799
the research Baron at x-force read and

27
00:01:23,119 --> 00:01:27,259
I've been doing pen testing

28
00:01:24,799 --> 00:01:30,200
professionally since 2004 I've been a

29
00:01:27,259 --> 00:01:33,110
hobbyist for a few years before that I

30
00:01:30,200 --> 00:01:37,670
was time's 2006 Person of the Year it's

31
00:01:33,110 --> 00:01:39,440
true you can look it up and yeah that's

32
00:01:37,670 --> 00:01:42,140
a it's very funny when you look it up I

33
00:01:39,440 --> 00:01:43,520
highly recommend you do so to get the

34
00:01:42,140 --> 00:01:47,000
joke there

35
00:01:43,520 --> 00:01:49,399
I'm also a homebrewer I I accidentally

36
00:01:47,000 --> 00:01:52,720
double-booked between this conference

37
00:01:49,399 --> 00:01:56,119
and a homebrew competition so my wife is

38
00:01:52,720 --> 00:01:58,759
is slinging beer at this homebrew

39
00:01:56,119 --> 00:02:00,140
competition that we brewed together I'm

40
00:01:58,759 --> 00:02:02,330
very excited about it's made of sweet

41
00:02:00,140 --> 00:02:05,750
potatoes you should ask me about it

42
00:02:02,330 --> 00:02:08,139
later maybe also I hold the noble title

43
00:02:05,750 --> 00:02:10,550
of Baron in the micro nation of Sealand

44
00:02:08,139 --> 00:02:12,170
which if you're not familiar with it you

45
00:02:10,550 --> 00:02:16,220
should also look up because it's also a

46
00:02:12,170 --> 00:02:19,790
very funny story but I'd like to get

47
00:02:16,220 --> 00:02:23,359
into the background of this research by

48
00:02:19,790 --> 00:02:26,209
talking first about what archive file

49
00:02:23,360 --> 00:02:30,080
formats are now there's some confusion

50
00:02:26,209 --> 00:02:31,430
between archiving and compression but

51
00:02:30,080 --> 00:02:33,950
there are two different things and there

52
00:02:31,430 --> 00:02:35,780
are archive formats such as tar which do

53
00:02:33,950 --> 00:02:37,549
not have any compression but our

54
00:02:35,780 --> 00:02:40,580
archives so it's basically just taking

55
00:02:37,550 --> 00:02:43,040
several files and stuffing them into one

56
00:02:40,580 --> 00:02:45,700
file or actually that's a bit of a

57
00:02:43,040 --> 00:02:48,170
misnomer because there's multi volume

58
00:02:45,700 --> 00:02:50,720
archives where you take a number of

59
00:02:48,170 --> 00:02:54,109
files and then put them into separate

60
00:02:50,720 --> 00:02:55,970
volumes but potentially you have other

61
00:02:54,110 --> 00:02:58,220
features like compression or encryption

62
00:02:55,970 --> 00:03:00,920
that come along with it and some of the

63
00:02:58,220 --> 00:03:03,560
most common examples are zip and tar and

64
00:03:00,920 --> 00:03:05,839
rar and 7-zip and all that sort of thing

65
00:03:03,560 --> 00:03:08,120
and then you have compression formats

66
00:03:05,840 --> 00:03:10,130
which are sometimes mistaken for archive

67
00:03:08,120 --> 00:03:12,260
formats but are distinct so we're going

68
00:03:10,130 --> 00:03:14,430
to be talking about archive formats

69
00:03:12,260 --> 00:03:17,548
specifically now

70
00:03:14,430 --> 00:03:21,209
the whole point of this thing is path

71
00:03:17,549 --> 00:03:24,120
traversal now some of you might be

72
00:03:21,209 --> 00:03:25,920
familiar with path traversal if you have

73
00:03:24,120 --> 00:03:27,090
an application security background or a

74
00:03:25,920 --> 00:03:30,689
development background and you've

75
00:03:27,090 --> 00:03:33,359
studied a little bit of of application

76
00:03:30,689 --> 00:03:37,920
security but basically path traversal is

77
00:03:33,359 --> 00:03:41,159
when you're you're causing something to

78
00:03:37,920 --> 00:03:43,439
be referenced outside of a working

79
00:03:41,159 --> 00:03:46,409
directory through a number of different

80
00:03:43,439 --> 00:03:48,900
tricks the most simple is using parent

81
00:03:46,409 --> 00:03:51,358
directory markers this dot dot slash

82
00:03:48,900 --> 00:03:54,900
sequence which if you're unfamiliar with

83
00:03:51,359 --> 00:03:56,849
it means the next directory up so if you

84
00:03:54,900 --> 00:03:59,220
have this relative file path and you say

85
00:03:56,849 --> 00:04:01,589
I'm going to write a file to whatever

86
00:03:59,220 --> 00:04:04,560
path you give me but only in this you

87
00:04:01,590 --> 00:04:06,540
know temp directory and I say ok I want

88
00:04:04,560 --> 00:04:08,069
you to write it to dot dot slash dot dot

89
00:04:06,540 --> 00:04:11,280
slash dot dot slash dot dot slash

90
00:04:08,069 --> 00:04:13,920
whatever that goes up the chain of

91
00:04:11,280 --> 00:04:15,840
directories until the point where it

92
00:04:13,920 --> 00:04:18,180
reaches the root and then you can

93
00:04:15,840 --> 00:04:21,389
specify additional directories from

94
00:04:18,180 --> 00:04:21,989
there to get that file written wherever

95
00:04:21,389 --> 00:04:24,060
you want

96
00:04:21,988 --> 00:04:26,039
not as the essence of path traversal is

97
00:04:24,060 --> 00:04:28,080
that you traverse up and out of a

98
00:04:26,039 --> 00:04:32,340
working directory and into some other

99
00:04:28,080 --> 00:04:34,139
directory now there are other ways to

100
00:04:32,340 --> 00:04:35,729
achieve this for instance you can use

101
00:04:34,139 --> 00:04:41,340
absolute paths where something is

102
00:04:35,729 --> 00:04:44,669
expecting a relative path or you can you

103
00:04:41,340 --> 00:04:47,099
can use special markers like the that's

104
00:04:44,669 --> 00:04:51,210
not tilde it's is that till it that's

105
00:04:47,099 --> 00:04:55,139
squiggly the squiggly it is the tilde ok

106
00:04:51,210 --> 00:04:56,940
the tilde which in UNIX based operating

107
00:04:55,139 --> 00:05:03,060
systems has the special meaning of home

108
00:04:56,940 --> 00:05:07,830
directory and in in certain contexts you

109
00:05:03,060 --> 00:05:09,389
might also have you might also have like

110
00:05:07,830 --> 00:05:11,940
environment variables that can be

111
00:05:09,389 --> 00:05:14,940
replaced within the path so you might

112
00:05:11,940 --> 00:05:16,620
have something like a system drive which

113
00:05:14,940 --> 00:05:18,510
is a windows-based thing that just says

114
00:05:16,620 --> 00:05:20,300
you know whatever Drive Windows is

115
00:05:18,510 --> 00:05:23,610
installed on that's the one that I want

116
00:05:20,300 --> 00:05:26,969
right and now I'd like to without naming

117
00:05:23,610 --> 00:05:28,560
the research specifically and calling it

118
00:05:26,969 --> 00:05:30,690
out I would like to talk about

119
00:05:28,560 --> 00:05:34,050
a recent research effort which was

120
00:05:30,690 --> 00:05:35,580
effective but incomplete woefully

121
00:05:34,050 --> 00:05:38,550
incomplete in fact and the

122
00:05:35,580 --> 00:05:41,940
incompleteness was the reason that I did

123
00:05:38,550 --> 00:05:44,010
this research in the first place so it

124
00:05:41,940 --> 00:05:46,830
talks about path traversal as applied to

125
00:05:44,010 --> 00:05:50,789
archive formats so let's say that you

126
00:05:46,830 --> 00:05:52,950
have a zip file and you extract it in a

127
00:05:50,790 --> 00:05:56,100
working directory let's use the example

128
00:05:52,950 --> 00:05:59,880
of a web application that has a file

129
00:05:56,100 --> 00:06:03,660
upload utility built into it let's say

130
00:05:59,880 --> 00:06:06,920
it's a photo storage application so they

131
00:06:03,660 --> 00:06:12,060
allow you to upload multiple images at

132
00:06:06,920 --> 00:06:14,280
the same time using a zip file you

133
00:06:12,060 --> 00:06:16,110
upload a zip file with images and it's

134
00:06:14,280 --> 00:06:18,719
extracts it into a working directory

135
00:06:16,110 --> 00:06:22,830
somewhere in the file system outside the

136
00:06:18,720 --> 00:06:25,680
web route and and then copies the any

137
00:06:22,830 --> 00:06:30,330
files that end with something like jpg

138
00:06:25,680 --> 00:06:35,490
for instance into your particular user

139
00:06:30,330 --> 00:06:36,450
directory now if everything is working

140
00:06:35,490 --> 00:06:38,730
as it should

141
00:06:36,450 --> 00:06:41,159
none of the files that are extracted

142
00:06:38,730 --> 00:06:45,660
from this zip should land outside the

143
00:06:41,160 --> 00:06:48,450
working directory but if you have one of

144
00:06:45,660 --> 00:06:51,270
these path traversal sequences as an

145
00:06:48,450 --> 00:06:54,800
entry in this archive it can place these

146
00:06:51,270 --> 00:06:58,890
things outside that working directory so

147
00:06:54,800 --> 00:07:01,740
it might be the case that let's say that

148
00:06:58,890 --> 00:07:03,900
you're on a Windows based system and you

149
00:07:01,740 --> 00:07:05,640
have an entry in the OR zip file that

150
00:07:03,900 --> 00:07:07,580
you upload that is dot dot slash dot

151
00:07:05,640 --> 00:07:14,240
slash dot dot slash dot dot slash

152
00:07:07,580 --> 00:07:17,789
windows slash startup slash evil exe so

153
00:07:14,240 --> 00:07:20,610
the the web application takes this zip

154
00:07:17,790 --> 00:07:23,610
file and extract all the files into a

155
00:07:20,610 --> 00:07:25,490
working directory but this one that has

156
00:07:23,610 --> 00:07:27,600
this path reversal sequence in it

157
00:07:25,490 --> 00:07:32,310
traverses all the way up to the root and

158
00:07:27,600 --> 00:07:35,550
then into Windows startup which on any

159
00:07:32,310 --> 00:07:38,130
on any startup of Windows system all

160
00:07:35,550 --> 00:07:40,410
executables in the startup folder are

161
00:07:38,130 --> 00:07:42,180
executed so the next time that web

162
00:07:40,410 --> 00:07:46,490
server reboots

163
00:07:42,180 --> 00:07:51,509
that executable will be executed and so

164
00:07:46,490 --> 00:07:54,199
that's pretty interesting and so what

165
00:07:51,509 --> 00:07:57,840
that means is code execution right so

166
00:07:54,199 --> 00:07:59,340
just because you've placed a file you

167
00:07:57,840 --> 00:08:00,869
know you've done this path traversal you

168
00:07:59,340 --> 00:08:02,520
now have code execution in this

169
00:08:00,870 --> 00:08:04,680
particular circumstance and this is not

170
00:08:02,520 --> 00:08:08,389
a super contrived circumstance all you

171
00:08:04,680 --> 00:08:11,930
really have to do is get somebody to

172
00:08:08,389 --> 00:08:15,900
unarchive all of the files in a zip file

173
00:08:11,930 --> 00:08:18,150
or other archive format into a working

174
00:08:15,900 --> 00:08:21,299
directory and not deal with path

175
00:08:18,150 --> 00:08:24,840
traversal sequences now you would think

176
00:08:21,300 --> 00:08:28,139
this is something that was well dealt

177
00:08:24,840 --> 00:08:31,109
with or maybe not as it turns out this

178
00:08:28,139 --> 00:08:36,299
this recent research it broke a lot of

179
00:08:31,110 --> 00:08:40,079
things but it only used the the most the

180
00:08:36,299 --> 00:08:43,228
most basic case so the idea was

181
00:08:40,078 --> 00:08:45,120
basically you know you you use this one

182
00:08:43,229 --> 00:08:47,279
sort of path reversal sequence to drop

183
00:08:45,120 --> 00:08:50,070
files and in certain places like in

184
00:08:47,279 --> 00:08:52,860
Windows startup or replace Etsy password

185
00:08:50,070 --> 00:08:56,670
if you have that like high privileges or

186
00:08:52,860 --> 00:08:59,370
more likely drop an authorized Keys file

187
00:08:56,670 --> 00:09:05,219
into you know some SSH directory and

188
00:08:59,370 --> 00:09:08,130
then have SSH access so this was the

189
00:09:05,220 --> 00:09:13,199
idea but these were the only cases that

190
00:09:08,130 --> 00:09:16,860
this research effort tested was just

191
00:09:13,199 --> 00:09:21,149
this dot dot slash test case and this is

192
00:09:16,860 --> 00:09:23,670
a this is one test case this is not the

193
00:09:21,149 --> 00:09:27,420
only one there are others so things that

194
00:09:23,670 --> 00:09:29,660
this research did not cover there was

195
00:09:27,420 --> 00:09:32,760
there was no usage of absolute paths

196
00:09:29,660 --> 00:09:34,670
there was no absolute paths with

197
00:09:32,760 --> 00:09:39,390
extraneous slashes at the beginning or

198
00:09:34,670 --> 00:09:43,560
there was no use of what I've heard

199
00:09:39,390 --> 00:09:45,420
called filter autoimmune attacks so this

200
00:09:43,560 --> 00:09:50,310
is kind of cool take a look at this

201
00:09:45,420 --> 00:09:55,319
third one down let's say that you are

202
00:09:50,310 --> 00:09:57,119
the creator of a zip extraction library

203
00:09:55,320 --> 00:09:59,550
and you want to prevent these past

204
00:09:57,120 --> 00:10:01,980
reversal attacks so you say I'm gonna

205
00:09:59,550 --> 00:10:05,099
look for any instance of dot dot slash

206
00:10:01,980 --> 00:10:08,070
and before processing that entry I'm

207
00:10:05,100 --> 00:10:10,920
going to remove all instances of dot dot

208
00:10:08,070 --> 00:10:14,430
slash now if you look at this this dot

209
00:10:10,920 --> 00:10:16,469
dot dot dot slash slash take take that

210
00:10:14,430 --> 00:10:20,359
and remove dot dot slash from it and

211
00:10:16,470 --> 00:10:22,920
what do you get you get dot dot slash

212
00:10:20,360 --> 00:10:26,010
this also works for dot dot dot slash

213
00:10:22,920 --> 00:10:28,620
dot slash so you know if you're looking

214
00:10:26,010 --> 00:10:32,490
for this particular trick too you can

215
00:10:28,620 --> 00:10:34,710
you can also get around that but um it's

216
00:10:32,490 --> 00:10:37,440
a really cool little trick that works on

217
00:10:34,710 --> 00:10:40,020
path traversal in general in all its

218
00:10:37,440 --> 00:10:42,900
forms but in it it also works in

219
00:10:40,020 --> 00:10:47,460
particular cases here right they also

220
00:10:42,900 --> 00:10:50,640
didn't use UNC paths so UNC paths are

221
00:10:47,460 --> 00:10:54,830
like windows specific like SMB share

222
00:10:50,640 --> 00:10:58,170
stuff so the the way that the UNC share

223
00:10:54,830 --> 00:11:00,390
the UNC paths like net Windows network

224
00:10:58,170 --> 00:11:04,010
file sharing shares are specified are

225
00:11:00,390 --> 00:11:07,650
double backslash IP address or hostname

226
00:11:04,010 --> 00:11:10,980
backslash the share name backslash path

227
00:11:07,650 --> 00:11:13,500
right now on windows systems there are

228
00:11:10,980 --> 00:11:17,790
default shares that are built into

229
00:11:13,500 --> 00:11:20,100
Windows one of them being see dollar

230
00:11:17,790 --> 00:11:23,640
sign now the see dollar sign share is

231
00:11:20,100 --> 00:11:28,020
just the c drive on a Windows system so

232
00:11:23,640 --> 00:11:31,590
this double backslash one 27001 which is

233
00:11:28,020 --> 00:11:35,819
localhost right this machine slash c

234
00:11:31,590 --> 00:11:37,980
share well this is just equivalent to

235
00:11:35,820 --> 00:11:40,920
the c drive it's just you're going this

236
00:11:37,980 --> 00:11:45,750
sort of roundabout way and also there's

237
00:11:40,920 --> 00:11:49,349
this additional long unc form that you

238
00:11:45,750 --> 00:11:52,860
can use so if you have for instance some

239
00:11:49,350 --> 00:11:56,310
UNC share if it's trying to prevent you

240
00:11:52,860 --> 00:11:58,260
know UNC shares from being used if it

241
00:11:56,310 --> 00:12:01,290
says like I don't want anything like you

242
00:11:58,260 --> 00:12:03,930
know double backslash you know some IP

243
00:12:01,290 --> 00:12:05,250
address like I don't want that ok double

244
00:12:03,930 --> 00:12:08,670
backslash question mark

245
00:12:05,250 --> 00:12:10,470
backslash that I don't know what

246
00:12:08,670 --> 00:12:12,569
functional differences other than like

247
00:12:10,470 --> 00:12:15,540
certain character restrictions aren't in

248
00:12:12,570 --> 00:12:17,340
place with the question mark but this is

249
00:12:15,540 --> 00:12:20,130
just another way of expressing the exact

250
00:12:17,340 --> 00:12:25,280
same thing now interestingly yeah you

251
00:12:20,130 --> 00:12:28,260
can also with the UNC paths right -

252
00:12:25,280 --> 00:12:32,550
available shares on other machines and

253
00:12:28,260 --> 00:12:35,280
so if you had a Windows system on

254
00:12:32,550 --> 00:12:38,939
archiving a zip with one of these UNC

255
00:12:35,280 --> 00:12:41,610
paths you could in theory get it to

256
00:12:38,940 --> 00:12:43,350
write to a network share when you

257
00:12:41,610 --> 00:12:47,670
extract into some working directory

258
00:12:43,350 --> 00:12:49,980
which is really cool but you

259
00:12:47,670 --> 00:12:52,920
know that's just yet another case and

260
00:12:49,980 --> 00:12:58,950
then you have this temp you have the you

261
00:12:52,920 --> 00:13:03,750
know tilde symbolic links by show of

262
00:12:58,950 --> 00:13:05,940
hands did you did you who already knew

263
00:13:03,750 --> 00:13:10,700
that symbolic links were supported in

264
00:13:05,940 --> 00:13:15,540
zips and tars hey you got one very nice

265
00:13:10,700 --> 00:13:16,950
surprised me so this was actually this

266
00:13:15,540 --> 00:13:20,209
is supported in a number of different

267
00:13:16,950 --> 00:13:24,870
archive formats including tar and pkzip

268
00:13:20,210 --> 00:13:26,670
and cpio archives so there's a couple

269
00:13:24,870 --> 00:13:29,640
different ways that you can exploit this

270
00:13:26,670 --> 00:13:35,130
for path traversal so for instance you

271
00:13:29,640 --> 00:13:39,960
can have a a sim link to a directory as

272
00:13:35,130 --> 00:13:43,620
one entry and then a another archive

273
00:13:39,960 --> 00:13:46,410
entry that points to a path like below

274
00:13:43,620 --> 00:13:48,930
that directory where the sim link is so

275
00:13:46,410 --> 00:13:51,329
as it the operating system is trying to

276
00:13:48,930 --> 00:13:53,520
resolve this path it reaches this sim

277
00:13:51,330 --> 00:13:57,000
link that is just written and points to

278
00:13:53,520 --> 00:14:00,780
a totally different directory so now if

279
00:13:57,000 --> 00:14:02,790
you're looking for just anything that

280
00:14:00,780 --> 00:14:04,560
has any path traversal sequences

281
00:14:02,790 --> 00:14:08,819
whatsoever if you're looking purely at

282
00:14:04,560 --> 00:14:11,640
the names of the zip entries you're

283
00:14:08,820 --> 00:14:15,060
going to miss the attack

284
00:14:11,640 --> 00:14:16,800
you're not going to detect the attack so

285
00:14:15,060 --> 00:14:18,449
for instance we could have foo which

286
00:14:16,800 --> 00:14:21,300
points to Etsy and then have food

287
00:14:18,450 --> 00:14:22,889
password which ultimately would end up

288
00:14:21,300 --> 00:14:28,978
pointing to Etsy path

289
00:14:22,889 --> 00:14:31,769
and none of these things would have none

290
00:14:28,979 --> 00:14:32,849
of these things would none of these

291
00:14:31,769 --> 00:14:33,989
things would have past reversal

292
00:14:32,849 --> 00:14:35,549
sequences no these things would be

293
00:14:33,989 --> 00:14:37,889
absolutely past they would be relative

294
00:14:35,549 --> 00:14:39,509
but you still get to write whatever file

295
00:14:37,889 --> 00:14:45,599
you want with whatever contents in

296
00:14:39,509 --> 00:14:48,659
whatever place you want now you can also

297
00:14:45,599 --> 00:14:52,349
do a symlink to a file right so you can

298
00:14:48,659 --> 00:14:54,419
have depending on the the way that the

299
00:14:52,349 --> 00:14:56,999
zip file is yet the way that the archive

300
00:14:54,419 --> 00:14:59,819
is handled you can have two different

301
00:14:56,999 --> 00:15:03,749
entries with the same exact name now

302
00:14:59,819 --> 00:15:07,589
this is difficult to do with any normal

303
00:15:03,749 --> 00:15:10,619
library but you can do a little bit of

304
00:15:07,589 --> 00:15:12,449
clever hex editing to get a file to

305
00:15:10,619 --> 00:15:15,359
contain two zip entries with the same

306
00:15:12,449 --> 00:15:17,669
name and one should come first in

307
00:15:15,359 --> 00:15:20,009
canonical order just to make sure that

308
00:15:17,669 --> 00:15:22,379
that one gets extracted first because

309
00:15:20,009 --> 00:15:24,779
that's this sim link so you sim link to

310
00:15:22,379 --> 00:15:27,439
some particular file and then you have

311
00:15:24,779 --> 00:15:33,419
another entry that overwrites that file

312
00:15:27,439 --> 00:15:35,429
immediately afterwards and if you if it

313
00:15:33,419 --> 00:15:38,279
was originally written as a symlink it

314
00:15:35,429 --> 00:15:41,699
might resolve it before writing so this

315
00:15:38,279 --> 00:15:44,579
is sort of a different different abuse

316
00:15:41,699 --> 00:15:46,079
case where the the entries are handled

317
00:15:44,579 --> 00:15:49,469
slightly differently where the sim links

318
00:15:46,079 --> 00:15:51,529
are handled slightly differently but the

319
00:15:49,470 --> 00:15:56,249
path traversal variations apply here -

320
00:15:51,529 --> 00:15:58,949
if you have a thing where you know it

321
00:15:56,249 --> 00:16:02,579
doesn't like that your sim linking to an

322
00:15:58,949 --> 00:16:04,469
absolute path maybe you can at you can

323
00:16:02,579 --> 00:16:06,719
symlink to a relative path you can

324
00:16:04,470 --> 00:16:10,229
symlink - dot dot slash dot dot slash

325
00:16:06,720 --> 00:16:13,439
whatever right or you can simply to UNC

326
00:16:10,229 --> 00:16:14,639
share or you can simply - I guess that

327
00:16:13,439 --> 00:16:16,019
doesn't really work on Windows because

328
00:16:14,639 --> 00:16:19,319
Windows doesn't support symlinks oh

329
00:16:16,019 --> 00:16:21,659
never mind but you can you know you can

330
00:16:19,319 --> 00:16:23,909
imagine how all the path traversal

331
00:16:21,659 --> 00:16:28,159
variations that we just discussed fit

332
00:16:23,909 --> 00:16:31,829
into this sim link style archive attack

333
00:16:28,159 --> 00:16:33,839
now Facebook actually had a problem with

334
00:16:31,829 --> 00:16:36,300
sim links and zips and somebody cashed

335
00:16:33,839 --> 00:16:38,100
out on a a nice bug bounty as a Rizzo

336
00:16:36,300 --> 00:16:41,069
it was possible to upload multiple

337
00:16:38,100 --> 00:16:43,050
pictures by zip file and then the files

338
00:16:41,070 --> 00:16:45,210
were automatically extracted and made

339
00:16:43,050 --> 00:16:47,939
available to the user so somebody

340
00:16:45,210 --> 00:16:51,570
figured out you could upload a zip file

341
00:16:47,940 --> 00:16:53,700
with a symlink to Etsy password in it

342
00:16:51,570 --> 00:16:58,170
and Facebook would then give you access

343
00:16:53,700 --> 00:16:59,730
to Etsy password by virtue of extracting

344
00:16:58,170 --> 00:17:01,770
the zip and then giving you access to

345
00:16:59,730 --> 00:17:04,290
the sim linkle though it really it gave

346
00:17:01,770 --> 00:17:07,619
you access to what it pointed to so that

347
00:17:04,290 --> 00:17:13,129
was cool now you might think well this

348
00:17:07,619 --> 00:17:19,889
guy's pretty ninja thank you

349
00:17:13,130 --> 00:17:27,320
but most of these techniques are fairly

350
00:17:19,890 --> 00:17:32,480
well known to give you an idea here's a

351
00:17:27,319 --> 00:17:38,179
a little bit of a snippet of the

352
00:17:32,480 --> 00:17:40,950
security section of a man page for a a

353
00:17:38,180 --> 00:17:43,770
default our extraction utility for the

354
00:17:40,950 --> 00:17:45,600
tar utility and it says hey you know no

355
00:17:43,770 --> 00:17:48,810
absolute pathnames will remove the

356
00:17:45,600 --> 00:17:51,689
leading slash no path names that include

357
00:17:48,810 --> 00:17:55,200
dot dot components we'll just refuse to

358
00:17:51,690 --> 00:17:57,170
extract those and SIM links to other

359
00:17:55,200 --> 00:17:59,760
directories you know so it's like

360
00:17:57,170 --> 00:18:03,000
somebody's ahead of the game how far

361
00:17:59,760 --> 00:18:06,290
ahead of the game well this is from the

362
00:18:03,000 --> 00:18:10,800
BSD tar man page which was last updated

363
00:18:06,290 --> 00:18:16,740
circa October 2009 so about nine years

364
00:18:10,800 --> 00:18:19,680
ago the BSD tar maintainer x' knew more

365
00:18:16,740 --> 00:18:21,780
about attacking through these archives

366
00:18:19,680 --> 00:18:23,310
based path traversal attacks than the

367
00:18:21,780 --> 00:18:28,680
people who did this research effort

368
00:18:23,310 --> 00:18:31,649
which will remain unnamed what kills me

369
00:18:28,680 --> 00:18:33,630
about it is that this this this research

370
00:18:31,650 --> 00:18:35,360
really did poke holes in a lot of things

371
00:18:33,630 --> 00:18:37,770
a lot of things were found vulnerable

372
00:18:35,360 --> 00:18:41,280
which is why I decided I wanted to do

373
00:18:37,770 --> 00:18:44,400
this one thing that they missed as well

374
00:18:41,280 --> 00:18:48,420
is that there are a lot of file formats

375
00:18:44,400 --> 00:18:50,230
that are just simply they're derived

376
00:18:48,420 --> 00:18:52,540
from zip they extend

377
00:18:50,230 --> 00:18:55,950
the zip file format and add additional

378
00:18:52,540 --> 00:19:01,360
things they use it as a container right

379
00:18:55,950 --> 00:19:03,480
pardon me so for instance a jar is just

380
00:19:01,360 --> 00:19:08,918
a bunch of class files and metadata

381
00:19:03,480 --> 00:19:11,440
inside a zip archive and apk is just

382
00:19:08,919 --> 00:19:14,260
sort of us a special I a specialization

383
00:19:11,440 --> 00:19:19,230
in the same way where it contains you

384
00:19:14,260 --> 00:19:23,530
know a metadata file like a manifest and

385
00:19:19,230 --> 00:19:26,140
various code files and resources and all

386
00:19:23,530 --> 00:19:29,740
that sort of thing the Microsoft Office

387
00:19:26,140 --> 00:19:33,370
formats that the modern docx xlsx pptx

388
00:19:29,740 --> 00:19:36,100
etc in fact the file that I'm showing

389
00:19:33,370 --> 00:19:39,129
you right now through PowerPoint is

390
00:19:36,100 --> 00:19:42,159
based on zip yet you can actually rename

391
00:19:39,130 --> 00:19:45,820
like docx files or pptx files or

392
00:19:42,160 --> 00:19:47,770
whatever to dot zip files and then

393
00:19:45,820 --> 00:19:50,309
extract their contents and look through

394
00:19:47,770 --> 00:19:52,389
them and it's really kind of interesting

395
00:19:50,309 --> 00:19:54,730
you should try it sometime because

396
00:19:52,390 --> 00:19:56,650
there's it's it's it well I'm a nerd

397
00:19:54,730 --> 00:19:58,570
about file format so maybe you won't

398
00:19:56,650 --> 00:20:01,870
find it as interesting as I do but it's

399
00:19:58,570 --> 00:20:05,409
I think it's really cool right but the

400
00:20:01,870 --> 00:20:08,320
point being that in order to process a

401
00:20:05,410 --> 00:20:12,520
docx file and render it what do you have

402
00:20:08,320 --> 00:20:14,918
to do first on archive you have to

403
00:20:12,520 --> 00:20:20,080
extract all the entries from the archive

404
00:20:14,919 --> 00:20:21,760
and then read read out all the things

405
00:20:20,080 --> 00:20:26,139
that are referenced in there to pull out

406
00:20:21,760 --> 00:20:28,720
all the entries right so in order to

407
00:20:26,140 --> 00:20:32,650
process a docx file you first have to

408
00:20:28,720 --> 00:20:37,390
extract all the files which means game

409
00:20:32,650 --> 00:20:40,030
on I've already checked Microsoft Office

410
00:20:37,390 --> 00:20:43,080
and I haven't found any way to exploit

411
00:20:40,030 --> 00:20:46,059
it but there are so many third-party

412
00:20:43,080 --> 00:20:48,699
Microsoft Office format parsers that I

413
00:20:46,059 --> 00:20:51,700
would be surprised if none of them were

414
00:20:48,700 --> 00:20:56,740
vulnerable obviously there's a lot of

415
00:20:51,700 --> 00:20:58,419
things to check here but I I haven't

416
00:20:56,740 --> 00:21:00,429
gotten to it all yet I don't think I

417
00:20:58,419 --> 00:21:03,049
will it's a Herculean and possibly a

418
00:21:00,429 --> 00:21:08,669
Sisyphean effort

419
00:21:03,049 --> 00:21:12,299
so there's also the open document format

420
00:21:08,669 --> 00:21:14,269
there's the Mozilla Firefox I'm sure

421
00:21:12,299 --> 00:21:16,769
we'll come up with some more abuse cases

422
00:21:14,269 --> 00:21:26,519
but at this point I'd like to open it up

423
00:21:16,769 --> 00:21:30,110
to any questions that you might have if

424
00:21:26,519 --> 00:21:30,110
anybody's raising their hand I can't oh

425
00:21:31,880 --> 00:21:48,330
okay

426
00:21:33,000 --> 00:21:50,820
so it doesn't look Oh question so my

427
00:21:48,330 --> 00:21:53,129
particular role is not one of the threat

428
00:21:50,820 --> 00:21:55,860
intelligence so I'm not studying actual

429
00:21:53,130 --> 00:22:00,690
attacks in the wild or threat actors but

430
00:21:55,860 --> 00:22:05,059
I do see the relevance of this attack to

431
00:22:00,690 --> 00:22:07,559
both phishing style attacks and to

432
00:22:05,059 --> 00:22:11,580
attacks on things like web applications

433
00:22:07,559 --> 00:22:15,120
right because let's say that I send you

434
00:22:11,580 --> 00:22:17,820
a zip file and say hey can you read this

435
00:22:15,120 --> 00:22:19,739
document that I have and you open this

436
00:22:17,820 --> 00:22:22,799
up and like there's some document there

437
00:22:19,740 --> 00:22:24,779
that says ha ha made you look right you

438
00:22:22,799 --> 00:22:26,549
just hit its extract all and there's a

439
00:22:24,779 --> 00:22:28,470
document there and it's okay well what

440
00:22:26,549 --> 00:22:31,139
is this crap never mind blow this away

441
00:22:28,470 --> 00:22:34,110
delete this go back to whatever I was

442
00:22:31,139 --> 00:22:36,600
doing and meanwhile it's dropped a

443
00:22:34,110 --> 00:22:40,649
Trojan in some auto execute directory

444
00:22:36,600 --> 00:22:42,629
right it's applicable there and then we

445
00:22:40,649 --> 00:22:44,908
gave the example of the web application

446
00:22:42,630 --> 00:22:47,250
attack earlier where you have a file

447
00:22:44,909 --> 00:22:48,960
upload utility that extracts to a

448
00:22:47,250 --> 00:22:52,230
working directory and does not nullify

449
00:22:48,960 --> 00:22:56,179
these path traversal sequences good

450
00:22:52,230 --> 00:22:56,179
question thank you any other questions

451
00:22:59,230 --> 00:23:03,559
okay well I think that's it if you think

452
00:23:01,909 --> 00:23:05,390
of any questions later I will be around

453
00:23:03,559 --> 00:23:08,120
the conference both for the rest of the

454
00:23:05,390 --> 00:23:09,409
day and tomorrow so I'd love to field

455
00:23:08,120 --> 00:23:12,110
any questions you have or if you just

456
00:23:09,409 --> 00:23:13,720
want to chat about something completely

457
00:23:12,110 --> 00:23:16,879
unrelated ey asked me who does my hair

458
00:23:13,720 --> 00:23:19,770
you know I'm very friendly feel free to

459
00:23:16,880 --> 00:23:22,920
talk to me thank you

460
00:23:19,770 --> 00:23:22,920
[Applause]

