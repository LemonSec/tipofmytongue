1
00:00:00,060 --> 00:00:03,840
breaking or reminding their words<font color="#E5E5E5"> not</font><font color="#CCCCCC"> as</font>

2
00:00:02,639 --> 00:00:06,839
hard as<font color="#CCCCCC"> you think</font>

3
00:00:03,840 --> 00:00:08,429
Alex Bassanio Jesus<font color="#E5E5E5"> amico explicar animo</font>

4
00:00:06,839 --> 00:00:10,170
Stratton come<font color="#CCCCCC"> open</font><font color="#E5E5E5"> a table Davi Freya</font>

5
00:00:08,429 --> 00:00:14,610
meant a notable goddess in<font color="#CCCCCC"> imagine</font><font color="#E5E5E5"> F F</font>

6
00:00:10,170 --> 00:00:16,410
inverse u<font color="#CCCCCC"> e aí</font><font color="#E5E5E5"> EPMC Buena</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> are</font>

7
00:00:14,610 --> 00:00:19,470
separate unit<font color="#CCCCCC"> I can t</font><font color="#E5E5E5"> Tommy control</font>

8
00:00:16,410 --> 00:00:49,410
total<font color="#CCCCCC"> visit Emma presidencia elimi tada</font>

9
00:00:19,470 --> 00:00:51,890
<font color="#CCCCCC">yatta</font><font color="#E5E5E5"> disability</font><font color="#CCCCCC"> sistema</font><font color="#E5E5E5"> yeah my name is</font>

10
00:00:49,410 --> 00:00:51,889
<font color="#CCCCCC">Alex</font>

11
00:00:57,930 --> 00:01:00,979
[Music]

12
00:01:06,880 --> 00:01:13,610
is it better<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> sounds better alright</font>

13
00:01:11,240 --> 00:01:17,000
so in my name is Alex

14
00:01:13,610 --> 00:01:18,649
we have<font color="#E5E5E5"> Jesse here and we have a second</font>

15
00:01:17,000 --> 00:01:21,170
presentation<font color="#E5E5E5"> here in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> cup I'd say the</font>

16
00:01:18,649 --> 00:01:23,780
<font color="#E5E5E5">first one was yesterday</font><font color="#CCCCCC"> and there was</font>

17
00:01:21,170 --> 00:01:26,539
like some complaints that that our

18
00:01:23,780 --> 00:01:29,200
<font color="#CCCCCC">English is</font><font color="#E5E5E5"> not that good so I</font><font color="#CCCCCC"> switch</font><font color="#E5E5E5"> to</font>

19
00:01:26,539 --> 00:01:32,259
Russian because<font color="#E5E5E5"> I don't know much Spain</font>

20
00:01:29,200 --> 00:01:36,409
except<font color="#E5E5E5"> couple</font><font color="#CCCCCC"> words</font><font color="#E5E5E5"> I learned yesterday</font>

21
00:01:32,259 --> 00:01:39,590
<font color="#CCCCCC">I don't want to practice that</font><font color="#E5E5E5"> words but</font>

22
00:01:36,409 --> 00:01:42,819
I believe they're pretty convincing<font color="#E5E5E5"> so I</font>

23
00:01:39,590 --> 00:01:45,470
know a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that anyway so</font>

24
00:01:42,819 --> 00:01:50,720
<font color="#CCCCCC">we'll talk today about</font><font color="#E5E5E5"> breaking</font><font color="#CCCCCC"> in and</font>

25
00:01:45,470 --> 00:01:52,399
<font color="#CCCCCC">planting servers</font><font color="#E5E5E5"> so over our</font><font color="#CCCCCC"> overall</font>

26
00:01:50,720 --> 00:01:54,319
<font color="#CCCCCC">representation we'll go to the couple</font>

27
00:01:52,399 --> 00:01:58,399
different topic<font color="#E5E5E5"> some of you may expect</font>

28
00:01:54,319 --> 00:02:00,259
<font color="#CCCCCC">that it will be focused at onion BMC</font><font color="#E5E5E5"> it</font>

29
00:01:58,399 --> 00:02:03,170
will be it will<font color="#CCCCCC"> have couple different</font>

30
00:02:00,259 --> 00:02:06,619
topics<font color="#E5E5E5"> including BMC and we will go</font><font color="#CCCCCC"> over</font>

31
00:02:03,170 --> 00:02:09,610
like best practices<font color="#CCCCCC"> and what we think</font>

32
00:02:06,619 --> 00:02:11,750
<font color="#CCCCCC">attacker</font><font color="#E5E5E5"> think about in</font><font color="#CCCCCC"> plantings</font>

33
00:02:09,610 --> 00:02:14,360
different plots from different

34
00:02:11,750 --> 00:02:16,730
components as well<font color="#E5E5E5"> as breaking the</font>

35
00:02:14,360 --> 00:02:22,430
<font color="#CCCCCC">servers and</font><font color="#E5E5E5"> breaking different different</font>

36
00:02:16,730 --> 00:02:24,828
equipment<font color="#CCCCCC"> Wow so typical</font><font color="#E5E5E5"> Enterprise has</font>

37
00:02:22,430 --> 00:02:26,540
a bunch of servers<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> expensive</font>

38
00:02:24,829 --> 00:02:30,260
<font color="#CCCCCC">servers some</font><font color="#E5E5E5"> servers may cost like a</font>

39
00:02:26,540 --> 00:02:33,858
half of<font color="#E5E5E5"> the mill and they serve like</font><font color="#CCCCCC"> a</font>

40
00:02:30,260 --> 00:02:35,840
critical critical part of the<font color="#E5E5E5"> their</font>

41
00:02:33,859 --> 00:02:38,630
<font color="#E5E5E5">business for the</font><font color="#CCCCCC"> enterprise's it could</font>

42
00:02:35,840 --> 00:02:40,970
be a telecom it could be a banks it

43
00:02:38,630 --> 00:02:45,260
could be like really<font color="#E5E5E5"> critical one or two</font>

44
00:02:40,970 --> 00:02:48,500
servers<font color="#E5E5E5"> and in typical enterprise</font><font color="#CCCCCC"> there</font>

45
00:02:45,260 --> 00:02:51,200
is of course technology<font color="#CCCCCC"> to make a sort</font>

46
00:02:48,500 --> 00:02:53,480
of maintenance<font color="#E5E5E5"> period when there is like</font>

47
00:02:51,200 --> 00:02:55,399
one server replaces what another server

48
00:02:53,480 --> 00:02:58,130
and in have maintenance<font color="#E5E5E5"> period of that</font>

49
00:02:55,400 --> 00:02:59,870
when you make an updates or check the

50
00:02:58,130 --> 00:03:03,049
harder check your rate controller or

51
00:02:59,870 --> 00:03:05,540
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that but typically like</font>

52
00:03:03,049 --> 00:03:07,760
even if you have<font color="#E5E5E5"> the backup</font><font color="#CCCCCC"> you usually</font>

53
00:03:05,540 --> 00:03:09,620
<font color="#E5E5E5">use the</font><font color="#CCCCCC"> same harder for</font><font color="#E5E5E5"> the backup so</font>

54
00:03:07,760 --> 00:03:12,370
because it's much more easy if you have

55
00:03:09,620 --> 00:03:16,790
<font color="#E5E5E5">like exactly</font><font color="#CCCCCC"> the same card</font><font color="#E5E5E5"> you have less</font>

56
00:03:12,370 --> 00:03:17,700
less chances to have any<font color="#CCCCCC"> stability in</font><font color="#E5E5E5"> a</font>

57
00:03:16,790 --> 00:03:19,829
software

58
00:03:17,700 --> 00:03:21,359
<font color="#E5E5E5">you basically get the one hardware</font><font color="#CCCCCC"> make</font>

59
00:03:19,830 --> 00:03:23,550
<font color="#E5E5E5">an exactly the same</font><font color="#CCCCCC"> cocaine you</font><font color="#E5E5E5"> just</font>

60
00:03:21,360 --> 00:03:26,280
<font color="#CCCCCC">redirect traffic and you have same</font>

61
00:03:23,550 --> 00:03:29,310
hardware so and there<font color="#E5E5E5"> is a consequences</font>

62
00:03:26,280 --> 00:03:32,519
to having<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> across</font><font color="#E5E5E5"> cause</font>

63
00:03:29,310 --> 00:03:35,040
the backup and your production because

64
00:03:32,519 --> 00:03:36,930
if there is<font color="#E5E5E5"> any</font><font color="#CCCCCC"> infection could</font>

65
00:03:35,040 --> 00:03:39,179
compromise one of the server<font color="#E5E5E5"> over</font>

66
00:03:36,930 --> 00:03:41,940
<font color="#E5E5E5">hardware from that could make the</font>

67
00:03:39,180 --> 00:03:45,840
similar to the backup and make a system

68
00:03:41,940 --> 00:03:48,930
<font color="#E5E5E5">unbootable for some time and it may</font>

69
00:03:45,840 --> 00:03:50,819
damage<font color="#E5E5E5"> that critical business because if</font>

70
00:03:48,930 --> 00:03:53,010
you if you assume<font color="#E5E5E5"> like</font><font color="#CCCCCC"> ok I have a</font>

71
00:03:50,819 --> 00:03:56,458
really critical server if it will go

72
00:03:53,010 --> 00:03:58,500
down and then I<font color="#E5E5E5"> will I will recover my</font>

73
00:03:56,459 --> 00:04:00,180
backup<font color="#E5E5E5"> and then the backup come can go</font>

74
00:03:58,500 --> 00:04:01,860
down<font color="#CCCCCC"> because</font><font color="#E5E5E5"> that's what similar system</font>

75
00:04:00,180 --> 00:04:03,739
you<font color="#CCCCCC"> added and similar like networking</font>

76
00:04:01,860 --> 00:04:06,780
<font color="#CCCCCC">may have similar BMC vulnerability</font>

77
00:04:03,739 --> 00:04:08,549
exploited similarly and compromised it

78
00:04:06,780 --> 00:04:11,819
like a spy<font color="#E5E5E5"> controller and make system</font>

79
00:04:08,549 --> 00:04:13,799
<font color="#CCCCCC">applicable so that's that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> cop of</font>

80
00:04:11,819 --> 00:04:18,180
<font color="#E5E5E5">the that the problem which</font><font color="#CCCCCC"> you try to</font>

81
00:04:13,799 --> 00:04:20,760
understand what what the ways<font color="#CCCCCC"> attacker</font>

82
00:04:18,180 --> 00:04:22,950
may think<font color="#E5E5E5"> about break the</font><font color="#CCCCCC"> system make</font>

83
00:04:20,760 --> 00:04:24,930
the system unbootable<font color="#CCCCCC"> or what the</font><font color="#E5E5E5"> ways</font>

84
00:04:22,950 --> 00:04:27,150
attacker may use<font color="#E5E5E5"> to compromise the</font>

85
00:04:24,930 --> 00:04:29,850
<font color="#CCCCCC">system</font><font color="#E5E5E5"> to in front</font><font color="#CCCCCC"> the system so let's</font>

86
00:04:27,150 --> 00:04:32,090
<font color="#E5E5E5">talk a little bit</font><font color="#CCCCCC"> more we'll jump</font><font color="#E5E5E5"> in</font>

87
00:04:29,850 --> 00:04:35,520
details but<font color="#CCCCCC"> before before</font><font color="#E5E5E5"> we'll go there</font>

88
00:04:32,090 --> 00:04:38,570
<font color="#CCCCCC">there is a couple of in a wild attack</font>

89
00:04:35,520 --> 00:04:41,099
was demonstrated<font color="#CCCCCC"> that breaking this</font>

90
00:04:38,570 --> 00:04:43,860
infrastructure breaking the<font color="#E5E5E5"> system is is</font>

91
00:04:41,100 --> 00:04:46,440
kind of part of<font color="#E5E5E5"> the nation-state type of</font>

92
00:04:43,860 --> 00:04:50,220
factors<font color="#E5E5E5"> so there was a</font><font color="#CCCCCC"> couple of</font>

93
00:04:46,440 --> 00:04:52,610
examples<font color="#CCCCCC"> which is which is</font><font color="#E5E5E5"> wiping</font><font color="#CCCCCC"> MBR</font>

94
00:04:50,220 --> 00:04:55,650
any system to make system unbootable<font color="#CCCCCC"> and</font>

95
00:04:52,610 --> 00:04:57,570
if you if you're familiar was what is

96
00:04:55,650 --> 00:04:59,010
MBR<font color="#CCCCCC"> is it basically twenty years old</font>

97
00:04:57,570 --> 00:05:00,810
technology which is supposed<font color="#E5E5E5"> to never</font>

98
00:04:59,010 --> 00:05:03,510
exist like<font color="#E5E5E5"> for the last ten years but</font>

99
00:05:00,810 --> 00:05:05,160
<font color="#CCCCCC">they still support this</font><font color="#E5E5E5"> and operation</font>

100
00:05:03,510 --> 00:05:06,990
system vendors still support this a

101
00:05:05,160 --> 00:05:10,320
little<font color="#E5E5E5"> bit as the legacy as a</font>

102
00:05:06,990 --> 00:05:12,450
compatibility<font color="#E5E5E5"> and basically it doesn't</font>

103
00:05:10,320 --> 00:05:15,990
<font color="#E5E5E5">have any security so nothing to verify</font>

104
00:05:12,450 --> 00:05:17,880
MBR nothing to prevent MBR so any any

105
00:05:15,990 --> 00:05:20,250
attacker who got some privileges in the

106
00:05:17,880 --> 00:05:23,280
system could compromise MBR and<font color="#E5E5E5"> make</font>

107
00:05:20,250 --> 00:05:25,919
system unbootable<font color="#CCCCCC"> and ideal it is not</font>

108
00:05:23,280 --> 00:05:28,140
that hard to<font color="#E5E5E5"> recover but because there</font>

109
00:05:25,919 --> 00:05:29,460
was no backup of the MBR originally

110
00:05:28,140 --> 00:05:31,800
because there was no one

111
00:05:29,460 --> 00:05:35,669
thinking about<font color="#E5E5E5"> that case that the system</font>

112
00:05:31,800 --> 00:05:40,099
<font color="#E5E5E5">was</font><font color="#CCCCCC"> not easily to recover</font><font color="#E5E5E5"> and there was</font>

113
00:05:35,669 --> 00:05:45,229
some of the examples of icy essences

114
00:05:40,099 --> 00:05:48,330
<font color="#CCCCCC">campaigns which was targeting a device</font>

115
00:05:45,229 --> 00:05:50,099
<font color="#E5E5E5">serial over the net which is basically</font>

116
00:05:48,330 --> 00:05:53,818
part<font color="#E5E5E5"> of between communication between</font>

117
00:05:50,099 --> 00:05:56,190
ICS<font color="#E5E5E5"> and system and control unit and by</font>

118
00:05:53,819 --> 00:06:00,030
targeting<font color="#E5E5E5"> that device</font><font color="#CCCCCC"> you also could</font>

119
00:05:56,190 --> 00:06:02,729
make a<font color="#E5E5E5"> system</font><font color="#CCCCCC"> break</font><font color="#E5E5E5"> up some of the ICS</font>

120
00:06:00,030 --> 00:06:04,679
or sis system and apparently there<font color="#E5E5E5"> was</font>

121
00:06:02,729 --> 00:06:06,840
no backup<font color="#CCCCCC"> there was no really</font><font color="#E5E5E5"> easy to</font>

122
00:06:04,680 --> 00:06:09,780
way to verify<font color="#CCCCCC"> that</font><font color="#E5E5E5"> exactly this</font><font color="#CCCCCC"> device</font>

123
00:06:06,840 --> 00:06:12,810
was compromised<font color="#E5E5E5"> then there was not easy</font>

124
00:06:09,780 --> 00:06:14,729
way to<font color="#E5E5E5"> recover so you need to really</font>

125
00:06:12,810 --> 00:06:16,410
<font color="#CCCCCC">press</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> persist and really precisely</font>

126
00:06:14,729 --> 00:06:18,690
detective each of the component was

127
00:06:16,410 --> 00:06:22,289
targeted and really fast<font color="#E5E5E5"> to replace it</font>

128
00:06:18,690 --> 00:06:24,960
<font color="#E5E5E5">or record that so</font><font color="#CCCCCC"> that was</font><font color="#E5E5E5"> kind of</font>

129
00:06:22,289 --> 00:06:28,110
giving us<font color="#E5E5E5"> the idea that this type</font><font color="#CCCCCC"> of</font>

130
00:06:24,960 --> 00:06:30,270
<font color="#E5E5E5">threats is the real so let's talk a</font>

131
00:06:28,110 --> 00:06:32,699
little<font color="#E5E5E5"> bit about architecture we start a</font>

132
00:06:30,270 --> 00:06:35,729
little<font color="#E5E5E5"> bit explaining yesterday about</font>

133
00:06:32,699 --> 00:06:37,530
the architects<font color="#E5E5E5"> 86 architecture and why</font>

134
00:06:35,729 --> 00:06:39,180
are we<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> all the</font><font color="#E5E5E5"> different</font>

135
00:06:37,530 --> 00:06:40,799
components<font color="#CCCCCC"> in this architecture and what</font>

136
00:06:39,180 --> 00:06:42,360
we need<font color="#E5E5E5"> to look for what is the</font>

137
00:06:40,800 --> 00:06:43,949
important<font color="#E5E5E5"> part</font><font color="#CCCCCC"> for the security</font>

138
00:06:42,360 --> 00:06:46,289
perspective<font color="#E5E5E5"> on the platform security</font>

139
00:06:43,949 --> 00:06:48,449
<font color="#E5E5E5">perspective so in platform security</font>

140
00:06:46,289 --> 00:06:50,340
perspective<font color="#E5E5E5"> is important is what</font><font color="#CCCCCC"> the</font>

141
00:06:48,449 --> 00:06:50,520
components in the<font color="#E5E5E5"> system how old they</font>

142
00:06:50,340 --> 00:06:53,340
are

143
00:06:50,520 --> 00:06:56,669
<font color="#CCCCCC">does it have any from</font><font color="#E5E5E5"> does this room</font><font color="#CCCCCC"> is</font>

144
00:06:53,340 --> 00:06:58,590
<font color="#E5E5E5">updatable but also we</font><font color="#CCCCCC"> really interested</font>

145
00:06:56,669 --> 00:07:01,289
<font color="#E5E5E5">on two other really important things one</font>

146
00:06:58,590 --> 00:07:03,539
is persistency so we're interested in

147
00:07:01,289 --> 00:07:05,849
the component<font color="#CCCCCC"> which has non-volatile</font>

148
00:07:03,539 --> 00:07:08,520
storage<font color="#E5E5E5"> so the component which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> has</font>

149
00:07:05,849 --> 00:07:10,740
some memory<font color="#E5E5E5"> reprogrammable memory</font>

150
00:07:08,520 --> 00:07:13,169
<font color="#CCCCCC">neither for data</font><font color="#E5E5E5"> but for the call which</font>

151
00:07:10,740 --> 00:07:15,990
you can neither read<font color="#E5E5E5"> or write from the</font>

152
00:07:13,169 --> 00:07:18,690
software perspective<font color="#CCCCCC"> to run integrity or</font>

153
00:07:15,990 --> 00:07:20,280
to<font color="#CCCCCC"> update the configuration</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> want</font>

154
00:07:18,690 --> 00:07:22,680
to have it<font color="#E5E5E5"> because a bunch of components</font>

155
00:07:20,280 --> 00:07:24,809
<font color="#E5E5E5">has the functionality which you want to</font>

156
00:07:22,680 --> 00:07:26,490
<font color="#E5E5E5">have</font><font color="#CCCCCC"> configurable you</font><font color="#E5E5E5"> don't want to your</font>

157
00:07:24,810 --> 00:07:28,229
system boot every time and you<font color="#E5E5E5"> every</font>

158
00:07:26,490 --> 00:07:28,949
<font color="#E5E5E5">time set everything for yourself</font><font color="#CCCCCC"> in the</font>

159
00:07:28,229 --> 00:07:31,859
setup screen

160
00:07:28,949 --> 00:07:33,690
so you want to be you want<font color="#CCCCCC"> to have the</font>

161
00:07:31,860 --> 00:07:35,039
capability<font color="#CCCCCC"> that the buyers</font><font color="#E5E5E5"> save that</font>

162
00:07:33,690 --> 00:07:37,650
configuration somehow

163
00:07:35,039 --> 00:07:39,719
so<font color="#E5E5E5"> that's persistence is kind of one</font>

164
00:07:37,650 --> 00:07:41,279
really important aspect<font color="#CCCCCC"> for</font><font color="#E5E5E5"> us as</font>

165
00:07:39,719 --> 00:07:42,469
<font color="#E5E5E5">security</font><font color="#CCCCCC"> experts because</font><font color="#E5E5E5"> we want to</font>

166
00:07:41,279 --> 00:07:44,930
understand what

167
00:07:42,470 --> 00:07:49,760
kind of<font color="#E5E5E5"> persistent storage attacker can</font>

168
00:07:44,930 --> 00:07:52,550
try to compromise<font color="#E5E5E5"> and second is as it's</font>

169
00:07:49,760 --> 00:07:54,980
a protocols and buses<font color="#E5E5E5"> so all of these</font>

170
00:07:52,550 --> 00:07:56,810
components<font color="#CCCCCC"> is communicating for each</font>

171
00:07:54,980 --> 00:07:58,850
other over the buses<font color="#CCCCCC"> and depends which</font>

172
00:07:56,810 --> 00:08:01,520
<font color="#CCCCCC">basket communicated through it may allow</font>

173
00:07:58,850 --> 00:08:04,430
some extra capabilities to the attacker

174
00:08:01,520 --> 00:08:07,609
so they may allow<font color="#E5E5E5"> send a DMA transaction</font>

175
00:08:04,430 --> 00:08:10,340
<font color="#E5E5E5">or they may allow you bypass some</font><font color="#CCCCCC"> of the</font>

176
00:08:07,610 --> 00:08:13,100
spy cycles and like fake some of the

177
00:08:10,340 --> 00:08:15,260
values<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> spy controller so it</font>

178
00:08:13,100 --> 00:08:18,080
depends on what buses that components is

179
00:08:15,260 --> 00:08:20,630
sitting it may give<font color="#E5E5E5"> attacker different</font>

180
00:08:18,080 --> 00:08:21,770
advantage different capabilities<font color="#E5E5E5"> so if</font>

181
00:08:20,630 --> 00:08:23,719
the attacker will pick the proper

182
00:08:21,770 --> 00:08:25,729
component which has persistent storage

183
00:08:23,720 --> 00:08:27,320
and<font color="#CCCCCC"> compromised</font><font color="#E5E5E5"> that persistent storage</font>

184
00:08:25,730 --> 00:08:29,030
by replacing the key from<font color="#E5E5E5"> our</font>

185
00:08:27,320 --> 00:08:31,460
<font color="#CCCCCC">configuration and then use that</font>

186
00:08:29,030 --> 00:08:32,990
<font color="#CCCCCC">component</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> that buses to</font><font color="#E5E5E5"> compromise</font>

187
00:08:31,460 --> 00:08:35,179
the rest<font color="#E5E5E5"> of the system that's</font><font color="#CCCCCC"> the</font>

188
00:08:32,990 --> 00:08:38,030
<font color="#E5E5E5">scenario</font><font color="#CCCCCC"> vishakan was looking fund so</font>

189
00:08:35,179 --> 00:08:39,799
persistency<font color="#E5E5E5"> and full control plus</font>

190
00:08:38,030 --> 00:08:46,459
<font color="#E5E5E5">several times of sometimes stealthy</font>

191
00:08:39,799 --> 00:08:48,170
capabilities so and as we as we<font color="#CCCCCC"> as we a</font>

192
00:08:46,460 --> 00:08:51,140
little bit get the idea<font color="#E5E5E5"> of what we're</font>

193
00:08:48,170 --> 00:08:54,079
<font color="#CCCCCC">looking for</font><font color="#E5E5E5"> we want to understand how</font>

194
00:08:51,140 --> 00:08:56,650
<font color="#CCCCCC">does influence works</font><font color="#E5E5E5"> and how</font><font color="#CCCCCC"> does how</font>

195
00:08:54,080 --> 00:08:59,360
<font color="#E5E5E5">does implant go into the system</font><font color="#CCCCCC"> so</font>

196
00:08:56,650 --> 00:09:01,430
implant<font color="#E5E5E5"> implants like a simplest</font>

197
00:08:59,360 --> 00:09:03,200
possible way<font color="#E5E5E5"> it will it need</font><font color="#CCCCCC"> to find</font>

198
00:09:01,430 --> 00:09:05,630
<font color="#E5E5E5">that persistent storage which I was</font>

199
00:09:03,200 --> 00:09:09,500
mentioned in a second ago<font color="#CCCCCC"> and just to</font>

200
00:09:05,630 --> 00:09:12,410
<font color="#E5E5E5">just to find a method to update the date</font>

201
00:09:09,500 --> 00:09:15,170
on<font color="#E5E5E5"> that storage it could use physical</font>

202
00:09:12,410 --> 00:09:17,300
physical presence like physical access

203
00:09:15,170 --> 00:09:19,579
and find<font color="#CCCCCC"> a specific</font><font color="#E5E5E5"> controller</font><font color="#CCCCCC"> attached</font>

204
00:09:17,300 --> 00:09:21,949
programmer physically and in<font color="#E5E5E5"> plans the</font>

205
00:09:19,580 --> 00:09:23,630
system so that's<font color="#CCCCCC"> definitely possible</font>

206
00:09:21,950 --> 00:09:26,180
scenario<font color="#CCCCCC"> for the servers for the</font>

207
00:09:23,630 --> 00:09:28,400
desktops<font color="#E5E5E5"> and for many controllers like a</font>

208
00:09:26,180 --> 00:09:31,069
<font color="#CCCCCC">spec controller the harder</font><font color="#E5E5E5"> to reprogram</font>

209
00:09:28,400 --> 00:09:32,480
<font color="#E5E5E5">it really cheap so it doesn't cost much</font>

210
00:09:31,070 --> 00:09:34,400
to<font color="#CCCCCC"> do it you only need to</font><font color="#E5E5E5"> have a</font>

211
00:09:32,480 --> 00:09:36,320
physical<font color="#CCCCCC"> access to</font><font color="#E5E5E5"> the system near the</font>

212
00:09:34,400 --> 00:09:37,819
during<font color="#E5E5E5"> their supply chain or during the</font>

213
00:09:36,320 --> 00:09:40,670
<font color="#E5E5E5">maintenance period or</font><font color="#CCCCCC"> during their</font>

214
00:09:37,820 --> 00:09:42,920
<font color="#E5E5E5">samatha some other ways to to get the</font>

215
00:09:40,670 --> 00:09:45,349
<font color="#CCCCCC">physical access to the system second</font>

216
00:09:42,920 --> 00:09:48,400
<font color="#E5E5E5">ways from the software so basically run</font>

217
00:09:45,350 --> 00:09:50,660
<font color="#E5E5E5">in either the tools from the vendors</font>

218
00:09:48,400 --> 00:09:53,060
<font color="#E5E5E5">legitimate tools of the</font><font color="#CCCCCC"> update the</font><font color="#E5E5E5"> from</font>

219
00:09:50,660 --> 00:09:54,569
and be in the<font color="#E5E5E5"> middle of that process</font><font color="#CCCCCC"> and</font>

220
00:09:53,060 --> 00:09:56,640
inject the code there

221
00:09:54,570 --> 00:09:58,590
or from<font color="#E5E5E5"> the person system just to</font>

222
00:09:56,640 --> 00:10:00,470
investigate<font color="#E5E5E5"> some interfaces and find the</font>

223
00:09:58,590 --> 00:10:04,010
way how to go it from the software<font color="#E5E5E5"> side</font>

224
00:10:00,470 --> 00:10:06,390
<font color="#CCCCCC">yes sir the talk was actually about that</font>

225
00:10:04,010 --> 00:10:08,550
<font color="#CCCCCC">there is another way to implant the</font>

226
00:10:06,390 --> 00:10:11,220
system<font color="#E5E5E5"> it it's not always supposed to be</font>

227
00:10:08,550 --> 00:10:13,050
modifying the code it<font color="#E5E5E5"> combo also be just</font>

228
00:10:11,220 --> 00:10:16,620
a corrupting the data<font color="#E5E5E5"> or</font><font color="#CCCCCC"> modifying the</font>

229
00:10:13,050 --> 00:10:19,219
data so<font color="#CCCCCC"> you may just</font><font color="#E5E5E5"> disable some of</font><font color="#CCCCCC"> the</font>

230
00:10:16,620 --> 00:10:23,160
<font color="#E5E5E5">protections so with physical access</font>

231
00:10:19,220 --> 00:10:25,080
<font color="#E5E5E5">always over software you just instead</font><font color="#CCCCCC"> of</font>

232
00:10:23,160 --> 00:10:26,730
changing the<font color="#E5E5E5"> code you change the data</font>

233
00:10:25,080 --> 00:10:28,920
and when you run the<font color="#E5E5E5"> code integrity</font>

234
00:10:26,730 --> 00:10:31,140
you'll find<font color="#CCCCCC"> you'd need an implant</font><font color="#E5E5E5"> but</font>

235
00:10:28,920 --> 00:10:34,110
because the data was so sensitive like

236
00:10:31,140 --> 00:10:36,360
s3 was killed for example or some<font color="#E5E5E5"> other</font>

237
00:10:34,110 --> 00:10:38,430
like<font color="#CCCCCC"> a really sensitive configuration</font>

238
00:10:36,360 --> 00:10:41,550
that<font color="#E5E5E5"> will allow attackers</font><font color="#CCCCCC"> run the same</font>

239
00:10:38,430 --> 00:10:45,719
privileges as<font color="#E5E5E5"> persistency but over the</font>

240
00:10:41,550 --> 00:10:48,689
data<font color="#CCCCCC"> and even more implants him</font><font color="#E5E5E5"> could</font>

241
00:10:45,720 --> 00:10:50,880
mean in some cases<font color="#CCCCCC"> that attacker has has</font>

242
00:10:48,690 --> 00:10:53,760
to inject a device<font color="#E5E5E5"> inside the hardware</font>

243
00:10:50,880 --> 00:10:56,100
<font color="#E5E5E5">so it like for example find</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> way how</font>

244
00:10:53,760 --> 00:10:57,420
<font color="#E5E5E5">to inject in PCIe bars because of the</font>

245
00:10:56,100 --> 00:10:59,580
some of the<font color="#E5E5E5"> PCIe port</font>

246
00:10:57,420 --> 00:11:02,610
he built a<font color="#CCCCCC"> custom device plugin it</font>

247
00:10:59,580 --> 00:11:04,470
<font color="#E5E5E5">plugin it really carefully</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it's not</font>

248
00:11:02,610 --> 00:11:06,720
visible<font color="#E5E5E5"> and then connected</font><font color="#CCCCCC"> to a zermatt</font>

249
00:11:04,470 --> 00:11:09,120
for example and then he has a<font color="#E5E5E5"> persistent</font>

250
00:11:06,720 --> 00:11:10,710
device running<font color="#E5E5E5"> on the PCI bus</font><font color="#CCCCCC"> which is</font>

251
00:11:09,120 --> 00:11:14,010
<font color="#CCCCCC">the one</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> my capability which is</font>

252
00:11:10,710 --> 00:11:16,620
allowing<font color="#E5E5E5"> fully on the entire host host</font>

253
00:11:14,010 --> 00:11:18,090
<font color="#E5E5E5">of memory and</font><font color="#CCCCCC"> extract all secrets</font><font color="#E5E5E5"> and in</font>

254
00:11:16,620 --> 00:11:20,060
the same time this device could<font color="#CCCCCC"> be a</font>

255
00:11:18,090 --> 00:11:23,430
<font color="#CCCCCC">network device so it could send the data</font>

256
00:11:20,060 --> 00:11:25,530
outbound some invisible for<font color="#CCCCCC"> their</font>

257
00:11:23,430 --> 00:11:29,819
<font color="#CCCCCC">further</font><font color="#E5E5E5"> for the monitored software in</font>

258
00:11:25,530 --> 00:11:33,260
<font color="#CCCCCC">the</font><font color="#E5E5E5"> main host system so that was about</font>

259
00:11:29,820 --> 00:11:35,940
implanting what do you know about<font color="#CCCCCC"> breaks</font>

260
00:11:33,260 --> 00:11:39,060
<font color="#CCCCCC">breaks a</font><font color="#E5E5E5"> little bit different than in 20</font>

261
00:11:35,940 --> 00:11:41,040
<font color="#E5E5E5">minutes</font><font color="#CCCCCC"> we mostly</font><font color="#E5E5E5"> don't care about you</font>

262
00:11:39,060 --> 00:11:43,140
don't<font color="#CCCCCC"> care about like</font><font color="#E5E5E5"> be stealthy you</font>

263
00:11:41,040 --> 00:11:46,530
just want<font color="#E5E5E5"> to make system unbootable</font><font color="#CCCCCC"> and</font>

264
00:11:43,140 --> 00:11:48,090
it it's a little<font color="#CCCCCC"> bit similar with</font>

265
00:11:46,530 --> 00:11:50,370
<font color="#CCCCCC">implant</font><font color="#E5E5E5"> in the perspective of like it's</font>

266
00:11:48,090 --> 00:11:53,460
always<font color="#CCCCCC"> cat-and-mouse game</font><font color="#E5E5E5"> so it's always</font>

267
00:11:50,370 --> 00:11:55,680
<font color="#E5E5E5">like do</font><font color="#CCCCCC"> I know better</font><font color="#E5E5E5"> method to</font><font color="#CCCCCC"> infect</font>

268
00:11:53,460 --> 00:11:57,750
the system then someone who will try<font color="#E5E5E5"> to</font>

269
00:11:55,680 --> 00:11:59,579
detect me or do I know the better way to

270
00:11:57,750 --> 00:12:02,760
<font color="#E5E5E5">break a system</font><font color="#CCCCCC"> than someone will try</font><font color="#E5E5E5"> to</font>

271
00:11:59,580 --> 00:12:05,580
recover it<font color="#CCCCCC"> so in some</font><font color="#E5E5E5"> cases like a NPR</font>

272
00:12:02,760 --> 00:12:07,529
one or like a legacy system<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font>

273
00:12:05,580 --> 00:12:09,689
existence<font color="#E5E5E5"> from 90s we know</font>

274
00:12:07,529 --> 00:12:11,939
like sometimes system didn't move and we

275
00:12:09,689 --> 00:12:13,469
removed the<font color="#CCCCCC"> battery for for 30</font><font color="#E5E5E5"> seconds</font>

276
00:12:11,939 --> 00:12:15,779
reflected this battery back and system

277
00:12:13,470 --> 00:12:17,430
boot for some magic<font color="#E5E5E5"> so you sort of</font>

278
00:12:15,779 --> 00:12:20,399
figure<font color="#CCCCCC"> out the way how</font><font color="#E5E5E5"> to unbreak your</font>

279
00:12:17,430 --> 00:12:22,079
system by some<font color="#CCCCCC"> harder</font><font color="#E5E5E5"> faults but that</font>

280
00:12:20,399 --> 00:12:24,300
could<font color="#CCCCCC"> be</font><font color="#E5E5E5"> much more complicated it could</font>

281
00:12:22,079 --> 00:12:27,239
be more technique which<font color="#E5E5E5"> will allow them</font>

282
00:12:24,300 --> 00:12:29,069
the advanced attacker to break<font color="#CCCCCC"> a</font><font color="#E5E5E5"> system</font>

283
00:12:27,240 --> 00:12:31,079
and sometimes<font color="#E5E5E5"> it's not that</font><font color="#CCCCCC"> easy to</font>

284
00:12:29,069 --> 00:12:32,550
<font color="#CCCCCC">figure out how to</font><font color="#E5E5E5"> recover the system</font>

285
00:12:31,079 --> 00:12:35,069
because you need to<font color="#E5E5E5"> know exactly</font>

286
00:12:32,550 --> 00:12:36,870
<font color="#E5E5E5">component and how to record that company</font>

287
00:12:35,069 --> 00:12:38,370
<font color="#E5E5E5">sometimes the component could be sold</font>

288
00:12:36,870 --> 00:12:40,680
<font color="#CCCCCC">and in so you need to unsolder the</font>

289
00:12:38,370 --> 00:12:42,540
<font color="#E5E5E5">component from</font><font color="#CCCCCC"> the motherboard so this</font>

290
00:12:40,680 --> 00:12:44,160
makes the<font color="#CCCCCC"> process not that fast so</font>

291
00:12:42,540 --> 00:12:45,959
<font color="#E5E5E5">million that if it is part of the</font>

292
00:12:44,160 --> 00:12:48,420
<font color="#E5E5E5">critical infrastructure it could make</font>

293
00:12:45,959 --> 00:12:52,349
some<font color="#E5E5E5"> of financial damage to your</font>

294
00:12:48,420 --> 00:12:54,660
organization<font color="#E5E5E5"> so as</font><font color="#CCCCCC"> we going forward we</font>

295
00:12:52,350 --> 00:12:58,410
<font color="#E5E5E5">will go through couple components couple</font>

296
00:12:54,660 --> 00:13:01,170
main components which is<font color="#E5E5E5"> definitely easy</font>

297
00:12:58,410 --> 00:13:03,389
way to implant the system and break the

298
00:13:01,170 --> 00:13:05,969
system<font color="#E5E5E5"> and the first thing which</font><font color="#CCCCCC"> attack</font>

299
00:13:03,389 --> 00:13:09,389
<font color="#CCCCCC">an attacker will take a look so one in</font>

300
00:13:05,970 --> 00:13:12,629
what is the<font color="#CCCCCC"> despite storage the storage</font>

301
00:13:09,389 --> 00:13:17,879
for<font color="#E5E5E5"> the system from the main storage for</font>

302
00:13:12,629 --> 00:13:20,100
for them the basic configuration and

303
00:13:17,879 --> 00:13:22,259
basic code which is responsible<font color="#E5E5E5"> to wake</font>

304
00:13:20,100 --> 00:13:24,420
up the system when<font color="#E5E5E5"> you power in on the</font>

305
00:13:22,259 --> 00:13:26,279
button like when you<font color="#E5E5E5"> boot in the system</font>

306
00:13:24,420 --> 00:13:28,589
in going from<font color="#E5E5E5"> rosetta vector up to Dixie</font>

307
00:13:26,279 --> 00:13:31,290
<font color="#CCCCCC">phase to boot in the system that's that</font>

308
00:13:28,589 --> 00:13:32,790
code living and that spy controller spy

309
00:13:31,290 --> 00:13:36,180
chip which<font color="#E5E5E5"> is controlling</font><font color="#CCCCCC"> bus</font><font color="#E5E5E5"> by</font>

310
00:13:32,790 --> 00:13:38,160
controller also<font color="#CCCCCC"> there is another from</font>

311
00:13:36,180 --> 00:13:41,069
which is<font color="#E5E5E5"> living in that space storage a</font>

312
00:13:38,160 --> 00:13:44,629
me from<font color="#CCCCCC"> Inter</font><font color="#E5E5E5"> manageability and</font><font color="#CCCCCC"> Informer</font>

313
00:13:41,069 --> 00:13:48,930
which is part of the chips chipset

314
00:13:44,629 --> 00:13:51,839
<font color="#CCCCCC">controller which is running in a PC H so</font>

315
00:13:48,930 --> 00:13:54,239
<font color="#CCCCCC">that from is also store it</font><font color="#E5E5E5"> in that</font>

316
00:13:51,839 --> 00:13:56,970
persistent storage and there is also<font color="#CCCCCC"> GB</font>

317
00:13:54,240 --> 00:13:59,339
which is<font color="#E5E5E5"> a Gigabit Ethernet controller</font>

318
00:13:56,970 --> 00:14:01,769
configuration so basically if you<font color="#CCCCCC"> have</font>

319
00:13:59,339 --> 00:14:04,170
integrated network card<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> McCarter</font>

320
00:14:01,769 --> 00:14:06,300
story there<font color="#CCCCCC"> there smoke</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> resonant</font>

321
00:14:04,170 --> 00:14:08,128
configuration there<font color="#E5E5E5"> so by corrupting</font>

322
00:14:06,300 --> 00:14:10,319
that for example<font color="#E5E5E5"> you make this device</font>

323
00:14:08,129 --> 00:14:13,949
doesn't work<font color="#E5E5E5"> so if you rely on</font>

324
00:14:10,319 --> 00:14:15,750
integrated a network<font color="#E5E5E5"> card and it will</font>

325
00:14:13,949 --> 00:14:17,370
take you a couple<font color="#CCCCCC"> of minutes</font><font color="#E5E5E5"> or maybe a</font>

326
00:14:15,750 --> 00:14:19,790
couple<font color="#E5E5E5"> of hours to figure out that this</font>

327
00:14:17,370 --> 00:14:22,190
<font color="#E5E5E5">network card doesn't</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> anymore and</font>

328
00:14:19,790 --> 00:14:24,560
not work<font color="#E5E5E5"> because of the software reason</font>

329
00:14:22,190 --> 00:14:27,230
it has some<font color="#E5E5E5"> hardware faults and then you</font>

330
00:14:24,560 --> 00:14:29,239
need<font color="#E5E5E5"> to set the external</font><font color="#CCCCCC"> network card to</font>

331
00:14:27,230 --> 00:14:31,400
send traffic<font color="#E5E5E5"> over but you will you will</font>

332
00:14:29,240 --> 00:14:33,980
have<font color="#E5E5E5"> some time of that device will will</font>

333
00:14:31,400 --> 00:14:36,439
not<font color="#E5E5E5"> work and to recover it it you need</font>

334
00:14:33,980 --> 00:14:38,270
to<font color="#CCCCCC"> have a legitimate coffee of GB copy</font>

335
00:14:36,440 --> 00:14:40,460
of<font color="#CCCCCC"> GB region if you don't that</font><font color="#E5E5E5"> copy you</font>

336
00:14:38,270 --> 00:14:42,079
couldn't recover easily<font color="#E5E5E5"> so part of your</font>

337
00:14:40,460 --> 00:14:47,330
part of<font color="#E5E5E5"> your heart I would wouldn't be</font>

338
00:14:42,080 --> 00:14:49,250
bootable<font color="#E5E5E5"> so and that's why that's</font><font color="#CCCCCC"> PI</font>

339
00:14:47,330 --> 00:14:51,470
storage has something which is called

340
00:14:49,250 --> 00:14:53,690
spy descriptor it's like a first<font color="#CCCCCC"> for</font>

341
00:14:51,470 --> 00:14:55,790
kilobytes<font color="#E5E5E5"> of that storage which is</font>

342
00:14:53,690 --> 00:14:59,330
<font color="#CCCCCC">responsible</font><font color="#E5E5E5"> to define layout of that</font>

343
00:14:55,790 --> 00:15:02,270
<font color="#CCCCCC">storage and couple additional things</font><font color="#E5E5E5"> for</font>

344
00:14:59,330 --> 00:15:04,400
<font color="#CCCCCC">example it's responsible to set the</font>

345
00:15:02,270 --> 00:15:06,260
permission table which will tell which

346
00:15:04,400 --> 00:15:11,540
of<font color="#E5E5E5"> the region would</font><font color="#CCCCCC"> be accessible from</font>

347
00:15:06,260 --> 00:15:15,080
which<font color="#E5E5E5"> of the devices</font><font color="#CCCCCC"> it also has some of</font>

348
00:15:11,540 --> 00:15:18,550
<font color="#CCCCCC">the configuration about that spy</font><font color="#E5E5E5"> storage</font>

349
00:15:15,080 --> 00:15:21,110
so in case<font color="#E5E5E5"> if you corrupt spy descriptor</font>

350
00:15:18,550 --> 00:15:23,689
<font color="#CCCCCC">dense system at least will be</font><font color="#E5E5E5"> not</font>

351
00:15:21,110 --> 00:15:25,460
bootable<font color="#E5E5E5"> but if you try</font><font color="#CCCCCC"> to exploit you</font>

352
00:15:23,690 --> 00:15:27,290
can try to play<font color="#E5E5E5"> with the spy descriptor</font>

353
00:15:25,460 --> 00:15:31,880
if the spy descriptor is accessible to

354
00:15:27,290 --> 00:15:34,430
<font color="#CCCCCC">try to enable</font><font color="#E5E5E5"> different modes which may</font>

355
00:15:31,880 --> 00:15:38,750
not be documented<font color="#CCCCCC"> or make a privilege</font>

356
00:15:34,430 --> 00:15:43,880
escalation to the spy<font color="#E5E5E5"> to them at</font>

357
00:15:38,750 --> 00:15:46,340
<font color="#E5E5E5">override the spy content itself so</font>

358
00:15:43,880 --> 00:15:49,670
that's like a really really<font color="#E5E5E5"> quick</font>

359
00:15:46,340 --> 00:15:50,930
<font color="#E5E5E5">example of how</font><font color="#CCCCCC"> you can decode</font><font color="#E5E5E5"> spy</font>

360
00:15:49,670 --> 00:15:53,810
<font color="#CCCCCC">descriptor is some of the open-source</font>

361
00:15:50,930 --> 00:15:56,120
<font color="#E5E5E5">tools there is couple of them there's</font>

362
00:15:53,810 --> 00:15:57,739
<font color="#CCCCCC">flash from the Secretary's</font><font color="#E5E5E5"> couple models</font>

363
00:15:56,120 --> 00:16:00,320
which<font color="#CCCCCC"> is given your</font><font color="#E5E5E5"> good visibility on</font>

364
00:15:57,740 --> 00:16:01,310
despite descriptor<font color="#E5E5E5"> but then you also</font>

365
00:16:00,320 --> 00:16:03,560
<font color="#E5E5E5">want to understand</font>

366
00:16:01,310 --> 00:16:05,750
can you<font color="#E5E5E5"> does the attacker has access</font><font color="#CCCCCC"> to</font>

367
00:16:03,560 --> 00:16:07,910
<font color="#E5E5E5">it or not and then you need to take a</font>

368
00:16:05,750 --> 00:16:10,030
<font color="#E5E5E5">look on that</font><font color="#CCCCCC"> on the permission table</font>

369
00:16:07,910 --> 00:16:13,030
which is<font color="#E5E5E5"> part of the spy descriptor and</font>

370
00:16:10,030 --> 00:16:17,420
then you can see<font color="#E5E5E5"> like</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> here like</font>

371
00:16:13,030 --> 00:16:21,020
<font color="#E5E5E5">spy descriptor is read-only so basically</font>

372
00:16:17,420 --> 00:16:22,699
minion<font color="#CCCCCC"> that CPU is host basically so CPU</font>

373
00:16:21,020 --> 00:16:24,410
has<font color="#E5E5E5"> only read-only permission for the</font>

374
00:16:22,700 --> 00:16:26,390
spy descriptor mean that in this

375
00:16:24,410 --> 00:16:29,959
<font color="#E5E5E5">specific case software couldn't modify</font>

376
00:16:26,390 --> 00:16:31,640
<font color="#CCCCCC">this by descriptor</font><font color="#E5E5E5"> from during</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> it may</font>

377
00:16:29,960 --> 00:16:32,899
be another ways to do<font color="#CCCCCC"> it</font><font color="#E5E5E5"> but not from</font>

378
00:16:31,640 --> 00:16:34,939
the<font color="#E5E5E5"> software part</font>

379
00:16:32,899 --> 00:16:37,339
but then if<font color="#E5E5E5"> you will find something like</font>

380
00:16:34,939 --> 00:16:39,170
this<font color="#E5E5E5"> read right here then that's just</font>

381
00:16:37,339 --> 00:16:41,119
<font color="#E5E5E5">like a</font><font color="#CCCCCC"> vulnerability because this</font>

382
00:16:39,170 --> 00:16:43,519
<font color="#E5E5E5">meaning that ring zero could modify spy</font>

383
00:16:41,119 --> 00:16:44,209
descriptor and<font color="#E5E5E5"> spy descriptor contain</font>

384
00:16:43,519 --> 00:16:46,550
this table

385
00:16:44,209 --> 00:16:48,258
so if sorter could modify this<font color="#E5E5E5"> table it</font>

386
00:16:46,550 --> 00:16:49,910
could<font color="#E5E5E5"> move if it could modify spy the</font>

387
00:16:48,259 --> 00:16:53,119
script equipment<font color="#CCCCCC"> affine entire table</font><font color="#E5E5E5"> and</font>

388
00:16:49,910 --> 00:16:55,249
mess the permissions here<font color="#E5E5E5"> so at least</font>

389
00:16:53,119 --> 00:16:58,009
<font color="#E5E5E5">you will break the</font><font color="#CCCCCC"> system but you can</font>

390
00:16:55,249 --> 00:17:00,860
also make<font color="#CCCCCC"> some some nice</font><font color="#E5E5E5"> exploit</font><font color="#CCCCCC"> from</font>

391
00:16:58,009 --> 00:17:03,800
here as well so that's like a one of the

392
00:17:00,860 --> 00:17:05,360
basic mechanism how does<font color="#CCCCCC"> Hardware</font>

393
00:17:03,800 --> 00:17:07,849
supposed to be configured<font color="#E5E5E5"> properly to</font>

394
00:17:05,359 --> 00:17:09,889
<font color="#CCCCCC">prevent the</font><font color="#E5E5E5"> implant in the system to</font>

395
00:17:07,849 --> 00:17:12,349
prevent<font color="#E5E5E5"> them</font><font color="#CCCCCC"> breaking the</font><font color="#E5E5E5"> system but</font>

396
00:17:09,890 --> 00:17:15,169
there is also another<font color="#E5E5E5"> one of the most</font>

397
00:17:12,349 --> 00:17:16,819
important thing which supposed to be

398
00:17:15,169 --> 00:17:20,360
configured<font color="#CCCCCC"> in modern in</font><font color="#E5E5E5"> statistics</font>

399
00:17:16,819 --> 00:17:23,178
system<font color="#E5E5E5"> to prevent modification of</font><font color="#CCCCCC"> that</font>

400
00:17:20,359 --> 00:17:25,428
persistent<font color="#CCCCCC"> spice storage is something</font>

401
00:17:23,179 --> 00:17:27,470
which<font color="#E5E5E5"> is called bias control register</font>

402
00:17:25,429 --> 00:17:29,830
and this bias<font color="#E5E5E5"> control register is the</font>

403
00:17:27,470 --> 00:17:32,870
mechanism implemented in the PCH

404
00:17:29,830 --> 00:17:36,350
<font color="#E5E5E5">specifically designed</font><font color="#CCCCCC"> to prevent the</font><font color="#E5E5E5"> the</font>

405
00:17:32,870 --> 00:17:40,580
<font color="#E5E5E5">right cycle to the spice storage it does</font>

406
00:17:36,350 --> 00:17:42,559
work interest only because it's the this

407
00:17:40,580 --> 00:17:46,610
register it was designed<font color="#E5E5E5"> in a way that</font>

408
00:17:42,559 --> 00:17:49,250
<font color="#E5E5E5">you could deliver the legitimate updates</font>

409
00:17:46,610 --> 00:17:51,408
to the bias so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> cannot only set like</font>

410
00:17:49,250 --> 00:17:53,120
<font color="#E5E5E5">read-only forever</font><font color="#CCCCCC"> you cannot do it</font>

411
00:17:51,409 --> 00:17:55,250
because<font color="#CCCCCC"> in this case</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> will not update</font>

412
00:17:53,120 --> 00:17:56,959
your<font color="#E5E5E5"> bias</font><font color="#CCCCCC"> so you want</font><font color="#E5E5E5"> to have the</font>

413
00:17:55,250 --> 00:18:01,370
capabilities to<font color="#E5E5E5"> deliver some</font><font color="#CCCCCC"> of the</font>

414
00:17:56,960 --> 00:18:03,020
update<font color="#E5E5E5"> over some legitimate interface</font>

415
00:18:01,370 --> 00:18:05,719
and then you need to<font color="#CCCCCC"> play a</font><font color="#E5E5E5"> little bit</font>

416
00:18:03,020 --> 00:18:07,279
in who you will trust so and in this

417
00:18:05,720 --> 00:18:09,860
case there is<font color="#E5E5E5"> like something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> called</font>

418
00:18:07,279 --> 00:18:13,039
<font color="#CCCCCC">SMM system management mode a system</font>

419
00:18:09,860 --> 00:18:14,959
management mode<font color="#E5E5E5"> it is has the</font>

420
00:18:13,039 --> 00:18:17,000
capabilities<font color="#CCCCCC"> to override</font><font color="#E5E5E5"> this by content</font>

421
00:18:14,960 --> 00:18:19,460
and this register is<font color="#E5E5E5"> configured in a</font><font color="#CCCCCC"> way</font>

422
00:18:17,000 --> 00:18:21,289
that if you're not<font color="#CCCCCC"> in SMM</font><font color="#E5E5E5"> you don't have</font>

423
00:18:19,460 --> 00:18:22,940
permissions to<font color="#CCCCCC"> override this by content</font>

424
00:18:21,289 --> 00:18:24,980
if unison and<font color="#E5E5E5"> then you have the</font>

425
00:18:22,940 --> 00:18:26,720
permissions<font color="#E5E5E5"> of riders by content so</font>

426
00:18:24,980 --> 00:18:28,789
configuring this register<font color="#CCCCCC"> is highly</font>

427
00:18:26,720 --> 00:18:30,620
important<font color="#CCCCCC"> for each system if the</font><font color="#E5E5E5"> service</font>

428
00:18:28,789 --> 00:18:32,299
<font color="#E5E5E5">is not configured correctly that the</font>

429
00:18:30,620 --> 00:18:35,029
system could be<font color="#CCCCCC"> implanted or braked</font>

430
00:18:32,299 --> 00:18:38,450
<font color="#E5E5E5">really easily and we saw like yesterday</font>

431
00:18:35,029 --> 00:18:42,350
<font color="#CCCCCC">that</font><font color="#E5E5E5"> a PT 29 what was was presented by</font>

432
00:18:38,450 --> 00:18:44,090
ESET<font color="#CCCCCC"> in blue</font><font color="#E5E5E5"> hut that demonstrate that</font>

433
00:18:42,350 --> 00:18:48,080
the modern

434
00:18:44,090 --> 00:18:51,949
<font color="#E5E5E5">the modern</font><font color="#CCCCCC"> UEFA rootkits using</font><font color="#E5E5E5"> exploits</font>

435
00:18:48,080 --> 00:18:53,899
which is exploiting weaknesses in the

436
00:18:51,950 --> 00:18:56,840
<font color="#E5E5E5">configuration of this register so</font>

437
00:18:53,900 --> 00:18:59,840
basically the exploit checks<font color="#E5E5E5"> if this</font><font color="#CCCCCC"> not</font>

438
00:18:56,840 --> 00:19:03,049
properly configured then it writes a

439
00:18:59,840 --> 00:19:05,779
special like sequence or<font color="#CCCCCC"> send like some</font>

440
00:19:03,049 --> 00:19:09,080
of the cycles during<font color="#CCCCCC"> this condition to</font>

441
00:19:05,779 --> 00:19:10,640
override<font color="#E5E5E5"> this by content that was pretty</font>

442
00:19:09,080 --> 00:19:12,949
<font color="#E5E5E5">interesting and pretty impressive</font>

443
00:19:10,640 --> 00:19:17,289
because<font color="#E5E5E5"> it was in the wild exploiting</font>

444
00:19:12,950 --> 00:19:19,640
the vulnerability<font color="#CCCCCC"> to implant the system</font>

445
00:19:17,289 --> 00:19:20,270
<font color="#E5E5E5">yeah so really</font><font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> case study</font>

446
00:19:19,640 --> 00:19:24,529
<font color="#E5E5E5">anyway</font>

447
00:19:20,270 --> 00:19:26,658
move it forward<font color="#E5E5E5"> so</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> you figure</font><font color="#CCCCCC"> out</font>

448
00:19:24,529 --> 00:19:27,919
the ways how<font color="#CCCCCC"> to protect the system</font><font color="#E5E5E5"> if</font>

449
00:19:26,659 --> 00:19:29,779
you<font color="#E5E5E5"> guard the ways what you need to take</font>

450
00:19:27,919 --> 00:19:31,010
<font color="#CCCCCC">a look</font><font color="#E5E5E5"> when you in fact in the system</font>

451
00:19:29,779 --> 00:19:33,279
and<font color="#CCCCCC"> the attacker in</font><font color="#E5E5E5"> fact in the system</font>

452
00:19:31,010 --> 00:19:35,539
now you need to understand what exactly

453
00:19:33,279 --> 00:19:38,630
<font color="#E5E5E5">you would in fact what exactly you</font>

454
00:19:35,539 --> 00:19:41,690
wouldn't replace<font color="#E5E5E5"> so the easy target is</font>

455
00:19:38,630 --> 00:19:43,789
you will try to find<font color="#CCCCCC"> a UFO application</font>

456
00:19:41,690 --> 00:19:45,559
or<font color="#CCCCCC"> Dixie driver</font><font color="#E5E5E5"> the part of the boot</font>

457
00:19:43,789 --> 00:19:49,760
floor and you will replace that<font color="#CCCCCC"> part</font><font color="#E5E5E5"> of</font>

458
00:19:45,559 --> 00:19:51,980
the boot flow<font color="#E5E5E5"> so by to doing that you</font>

459
00:19:49,760 --> 00:19:53,658
need to understand the format of the

460
00:19:51,980 --> 00:19:55,279
content of<font color="#CCCCCC"> the spider script and there</font>

461
00:19:53,659 --> 00:19:56,390
is a<font color="#E5E5E5"> bunch of good technology and tools</font>

462
00:19:55,279 --> 00:19:58,100
which is doing that

463
00:19:56,390 --> 00:20:01,220
<font color="#CCCCCC">thus pretty complicated</font><font color="#E5E5E5"> flow you have</font>

464
00:19:58,100 --> 00:20:02,959
<font color="#CCCCCC">ufi volumes you have compressed sections</font>

465
00:20:01,220 --> 00:20:05,390
and then set the compression sections

466
00:20:02,960 --> 00:20:07,159
you<font color="#CCCCCC"> have the PE files so there is like</font>

467
00:20:05,390 --> 00:20:10,370
entire here<font color="#E5E5E5"> I</font><font color="#CCCCCC"> could think</font><font color="#E5E5E5"> about this as</font>

468
00:20:07,159 --> 00:20:12,500
<font color="#CCCCCC">a file system</font><font color="#E5E5E5"> so and then you will find</font>

469
00:20:10,370 --> 00:20:14,870
the file in the file system<font color="#CCCCCC"> but in</font><font color="#E5E5E5"> that</font>

470
00:20:12,500 --> 00:20:16,549
special file system and then<font color="#E5E5E5"> you will</font>

471
00:20:14,870 --> 00:20:18,559
replace that<font color="#E5E5E5"> file you just</font><font color="#CCCCCC"> need to make</font>

472
00:20:16,549 --> 00:20:20,690
<font color="#E5E5E5">sure</font><font color="#CCCCCC"> that whenever you will replace it</font>

473
00:20:18,559 --> 00:20:22,158
or will edit<font color="#CCCCCC"> any new one</font><font color="#E5E5E5"> and that</font><font color="#CCCCCC"> will</font>

474
00:20:20,690 --> 00:20:24,350
be<font color="#CCCCCC"> also</font><font color="#E5E5E5"> the part of the boot sequence</font>

475
00:20:22,159 --> 00:20:26,390
<font color="#E5E5E5">and the moment when you need it because</font>

476
00:20:24,350 --> 00:20:27,830
<font color="#E5E5E5">if it will be too early</font><font color="#CCCCCC"> you may not have</font>

477
00:20:26,390 --> 00:20:29,179
<font color="#E5E5E5">that capability switch you're looking</font>

478
00:20:27,830 --> 00:20:31,428
for it's<font color="#E5E5E5"> a little too late</font>

479
00:20:29,179 --> 00:20:32,870
you may the system may be already<font color="#CCCCCC"> locked</font>

480
00:20:31,429 --> 00:20:35,240
<font color="#E5E5E5">down so</font><font color="#CCCCCC"> you do not have that capability</font>

481
00:20:32,870 --> 00:20:36,949
switch you're looking for<font color="#E5E5E5"> so anyway you</font>

482
00:20:35,240 --> 00:20:39,350
need<font color="#E5E5E5"> you need to find the right time at</font>

483
00:20:36,950 --> 00:20:41,570
the right place<font color="#E5E5E5"> to in fact your yo-yo</font>

484
00:20:39,350 --> 00:20:44,629
executable code<font color="#E5E5E5"> and then you need to fix</font>

485
00:20:41,570 --> 00:20:46,340
some of the some of the<font color="#CCCCCC"> checks and</font><font color="#E5E5E5"> you</font>

486
00:20:44,630 --> 00:20:48,350
need to make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that you have the</font>

487
00:20:46,340 --> 00:20:50,270
proper size size is<font color="#E5E5E5"> not going over the</font>

488
00:20:48,350 --> 00:20:53,030
your<font color="#E5E5E5"> former volume and stuff like that</font>

489
00:20:50,270 --> 00:20:55,549
it's more engineering<font color="#E5E5E5"> work and in this</font>

490
00:20:53,030 --> 00:20:57,299
apt<font color="#E5E5E5"> 28 there there was a demonstration</font>

491
00:20:55,549 --> 00:21:00,480
<font color="#E5E5E5">that it could be done all out</font>

492
00:20:57,299 --> 00:21:03,450
<font color="#CCCCCC">matically</font><font color="#E5E5E5"> so any server</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> laptop which</font>

493
00:21:00,480 --> 00:21:04,889
is existent now<font color="#E5E5E5"> if there is not properly</font>

494
00:21:03,450 --> 00:21:06,779
<font color="#E5E5E5">set that protection</font><font color="#CCCCCC"> reserve was</font>

495
00:21:04,889 --> 00:21:09,600
mentioned<font color="#CCCCCC"> previously system could be</font>

496
00:21:06,779 --> 00:21:12,690
infected<font color="#E5E5E5"> making fully persistent fully</font>

497
00:21:09,600 --> 00:21:15,988
<font color="#E5E5E5">own attacker could make good fools</font><font color="#CCCCCC"> could</font>

498
00:21:12,690 --> 00:21:19,249
could own the system for in for like

499
00:21:15,989 --> 00:21:21,720
multiple years be<font color="#CCCCCC"> released</font><font color="#E5E5E5"> else</font>

500
00:21:19,249 --> 00:21:27,330
<font color="#E5E5E5">exfiltrate data from the center from</font><font color="#CCCCCC"> the</font>

501
00:21:21,720 --> 00:21:30,269
<font color="#CCCCCC">servers</font><font color="#E5E5E5"> over the time and there is</font>

502
00:21:27,330 --> 00:21:31,769
<font color="#E5E5E5">another really</font><font color="#CCCCCC"> interesting tools there</font>

503
00:21:30,269 --> 00:21:34,590
<font color="#CCCCCC">same same tools but another capability</font>

504
00:21:31,769 --> 00:21:36,570
<font color="#CCCCCC">under dos replacing the the executables</font>

505
00:21:34,590 --> 00:21:38,369
which makes it even<font color="#E5E5E5"> easily in attacker</font>

506
00:21:36,570 --> 00:21:39,418
perspective on the PLC perspective so if

507
00:21:38,369 --> 00:21:41,039
you want<font color="#CCCCCC"> to play around</font>

508
00:21:39,419 --> 00:21:43,350
you just<font color="#CCCCCC"> run ship</font><font color="#E5E5E5"> check find the</font>

509
00:21:41,039 --> 00:21:47,549
<font color="#E5E5E5">vulnerable platform and then you can use</font>

510
00:21:43,350 --> 00:21:51,629
the tools to<font color="#E5E5E5"> to</font><font color="#CCCCCC"> install a PLC implant</font>

511
00:21:47,549 --> 00:21:53,850
from<font color="#E5E5E5"> the github so we</font><font color="#CCCCCC"> talked a little</font>

512
00:21:51,629 --> 00:21:55,139
bit<font color="#CCCCCC"> about how all the</font><font color="#E5E5E5"> defense supposed</font>

513
00:21:53,850 --> 00:21:56,969
to work in perspective of<font color="#E5E5E5"> the</font>

514
00:21:55,139 --> 00:21:58,590
configuration<font color="#E5E5E5"> but there is also a bunch</font>

515
00:21:56,970 --> 00:22:01,049
of implementation around<font color="#CCCCCC"> and I mentioned</font>

516
00:21:58,590 --> 00:22:03,090
that<font color="#CCCCCC"> SMM should deliver the</font><font color="#E5E5E5"> BIOS update</font>

517
00:22:01,049 --> 00:22:04,830
<font color="#E5E5E5">but it's not really</font><font color="#CCCCCC"> like that there is a</font>

518
00:22:03,090 --> 00:22:08,399
special methods capsule update which is

519
00:22:04,830 --> 00:22:10,739
<font color="#E5E5E5">responsible to deliver the updates to</font>

520
00:22:08,399 --> 00:22:13,139
the system<font color="#CCCCCC"> and the capsule updated</font><font color="#E5E5E5"> it's</font>

521
00:22:10,739 --> 00:22:15,779
it's supposed<font color="#E5E5E5"> to run during the boot</font>

522
00:22:13,139 --> 00:22:17,758
time<font color="#CCCCCC"> or on</font><font color="#E5E5E5"> on when you waken up from the</font>

523
00:22:15,779 --> 00:22:20,100
sleep state for some of the other

524
00:22:17,759 --> 00:22:22,679
<font color="#E5E5E5">security</font><font color="#CCCCCC"> reasons so</font><font color="#E5E5E5"> if you will see any</font>

525
00:22:20,100 --> 00:22:24,748
of the tool is doing<font color="#CCCCCC"> runtime update for</font>

526
00:22:22,679 --> 00:22:26,909
the<font color="#E5E5E5"> buyers they probably</font><font color="#CCCCCC"> did it wrong</font>

527
00:22:24,749 --> 00:22:29,340
<font color="#E5E5E5">because at runtime there is a bunch of</font>

528
00:22:26,909 --> 00:22:31,859
<font color="#CCCCCC">devices running</font><font color="#E5E5E5"> in parallel which has a</font>

529
00:22:29,340 --> 00:22:34,408
button DMA capability which may give a

530
00:22:31,859 --> 00:22:37,379
attacker a huge room to run the attack

531
00:22:34,409 --> 00:22:38,970
against the<font color="#E5E5E5"> BIOS update mechanism and</font>

532
00:22:37,379 --> 00:22:42,689
this could<font color="#CCCCCC"> be used for other</font><font color="#E5E5E5"> attacker</font>

533
00:22:38,970 --> 00:22:44,700
<font color="#E5E5E5">also to update the spy content if the</font>

534
00:22:42,690 --> 00:22:48,029
capsule<font color="#CCCCCC"> audit was designed it not</font>

535
00:22:44,700 --> 00:22:50,070
properly<font color="#E5E5E5"> and that was we that was one of</font>

536
00:22:48,029 --> 00:22:53,100
the<font color="#E5E5E5"> cases which I will go in a second</font>

537
00:22:50,070 --> 00:22:55,019
but<font color="#CCCCCC"> before</font><font color="#E5E5E5"> that a little bit about super</font>

538
00:22:53,100 --> 00:22:57,090
<font color="#CCCCCC">michael well</font><font color="#E5E5E5"> in the part of our study</font>

539
00:22:55,019 --> 00:23:00,869
for<font color="#E5E5E5"> this specific curve for this</font>

540
00:22:57,090 --> 00:23:04,678
specific presentation<font color="#E5E5E5"> so</font><font color="#CCCCCC"> Super Micro</font><font color="#E5E5E5"> has</font>

541
00:23:00,869 --> 00:23:07,740
<font color="#CCCCCC">the</font><font color="#E5E5E5"> UEFI BIOS update it basically done</font>

542
00:23:04,679 --> 00:23:09,700
over the<font color="#E5E5E5"> DOS or Linux utilities like a</font>

543
00:23:07,740 --> 00:23:13,059
DOS

544
00:23:09,700 --> 00:23:15,730
<font color="#CCCCCC">o-over</font><font color="#E5E5E5"> BMC interface you can also run</font>

545
00:23:13,059 --> 00:23:18,850
the BIOS update to update the BMC<font color="#CCCCCC"> you</font>

546
00:23:15,730 --> 00:23:22,059
can use also the UI from the BMC<font color="#E5E5E5"> or the</font>

547
00:23:18,850 --> 00:23:24,370
<font color="#CCCCCC">local LAN interface which makes</font><font color="#E5E5E5"> it click</font>

548
00:23:22,059 --> 00:23:27,100
more less good<font color="#E5E5E5"> functionality for the</font>

549
00:23:24,370 --> 00:23:29,979
admin tool to deliver update but what we

550
00:23:27,100 --> 00:23:34,000
saw in a security perspective<font color="#E5E5E5"> that the</font>

551
00:23:29,980 --> 00:23:35,800
<font color="#CCCCCC">BIOS</font><font color="#E5E5E5"> update was not sign it so it was</font>

552
00:23:34,000 --> 00:23:38,050
not sign it<font color="#E5E5E5"> neither like a capsule</font>

553
00:23:35,800 --> 00:23:40,870
<font color="#CCCCCC">update but it was not sign it</font><font color="#E5E5E5"> at all so</font>

554
00:23:38,050 --> 00:23:43,990
basically you<font color="#E5E5E5"> can just put your own</font>

555
00:23:40,870 --> 00:23:47,409
module use legitimate tools<font color="#E5E5E5"> update the</font>

556
00:23:43,990 --> 00:23:49,750
buyers<font color="#E5E5E5"> and in fact the system moreover</font>

557
00:23:47,410 --> 00:23:51,670
it<font color="#CCCCCC"> it</font><font color="#E5E5E5"> update</font><font color="#CCCCCC"> an entire spice so you can</font>

558
00:23:49,750 --> 00:23:55,600
update every single<font color="#CCCCCC"> cluding spy</font>

559
00:23:51,670 --> 00:23:58,360
descriptor and<font color="#CCCCCC"> it doesn't have roll back</font>

560
00:23:55,600 --> 00:23:59,980
protections so in case<font color="#E5E5E5"> if in case if</font>

561
00:23:58,360 --> 00:24:01,959
<font color="#CCCCCC">that will be some updates</font>

562
00:23:59,980 --> 00:24:04,120
we shall fix<font color="#E5E5E5"> some vulnerabilities and</font>

563
00:24:01,960 --> 00:24:06,280
you like that vulnerabilities you<font color="#E5E5E5"> wanted</font>

564
00:24:04,120 --> 00:24:07,840
to run our<font color="#CCCCCC"> villages back</font><font color="#E5E5E5"> so like</font>

565
00:24:06,280 --> 00:24:10,420
attacker<font color="#E5E5E5"> one that</font><font color="#CCCCCC"> ran our abilities for</font>

566
00:24:07,840 --> 00:24:12,639
some other reason<font color="#E5E5E5"> they can gesture use</font>

567
00:24:10,420 --> 00:24:15,730
the<font color="#CCCCCC"> illegitimate</font><font color="#E5E5E5"> update to update</font><font color="#CCCCCC"> result</font>

568
00:24:12,640 --> 00:24:18,160
version<font color="#E5E5E5"> of the buyers so there was no</font>

569
00:24:15,730 --> 00:24:20,320
speed<font color="#E5E5E5"> interesting study and that's was</font>

570
00:24:18,160 --> 00:24:22,420
the<font color="#CCCCCC"> comment for entire vendor so all of</font>

571
00:24:20,320 --> 00:24:24,129
<font color="#CCCCCC">their harder is this vendor release they</font>

572
00:24:22,420 --> 00:24:27,160
use the same<font color="#E5E5E5"> mechanism</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> are</font>

573
00:24:24,130 --> 00:24:29,950
releasing<font color="#E5E5E5"> about a quarter</font><font color="#CCCCCC"> of a quarter</font>

574
00:24:27,160 --> 00:24:32,770
of<font color="#E5E5E5"> million server like about a million</font>

575
00:24:29,950 --> 00:24:35,950
server per year and all<font color="#E5E5E5"> of that could</font><font color="#CCCCCC"> be</font>

576
00:24:32,770 --> 00:24:38,200
infected<font color="#CCCCCC"> by only</font><font color="#E5E5E5"> by running only on the</font>

577
00:24:35,950 --> 00:24:40,300
source tool to repackage<font color="#E5E5E5"> the image and</font>

578
00:24:38,200 --> 00:24:44,340
<font color="#CCCCCC">demo the</font><font color="#E5E5E5"> legitimate tool which they are</font>

579
00:24:40,300 --> 00:24:48,340
provided to update to<font color="#E5E5E5"> infect the system</font>

580
00:24:44,340 --> 00:24:51,070
<font color="#CCCCCC">and there is a quick demo about</font><font color="#E5E5E5"> that how</font>

581
00:24:48,340 --> 00:24:59,439
to<font color="#E5E5E5"> in fact</font><font color="#CCCCCC"> okay so yeah that's</font><font color="#E5E5E5"> really</font>

582
00:24:51,070 --> 00:25:03,490
<font color="#E5E5E5">quick demo so super</font><font color="#CCCCCC"> micro</font><font color="#E5E5E5"> system boot</font>

583
00:24:59,440 --> 00:25:05,910
into the<font color="#E5E5E5"> DOS and then we run in from</font>

584
00:25:03,490 --> 00:25:09,460
here<font color="#E5E5E5"> yeah utilities</font><font color="#CCCCCC"> from Super Micro and</font>

585
00:25:05,910 --> 00:25:10,990
<font color="#E5E5E5">it</font><font color="#CCCCCC"> basically the</font><font color="#E5E5E5"> image was preparing a</font>

586
00:25:09,460 --> 00:25:13,840
little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> before so we infected this</font>

587
00:25:10,990 --> 00:25:15,850
<font color="#E5E5E5">image it could be done all from the OS</font>

588
00:25:13,840 --> 00:25:18,070
level<font color="#E5E5E5"> you just</font><font color="#CCCCCC"> need to figure</font><font color="#E5E5E5"> out which</font>

589
00:25:15,850 --> 00:25:20,860
of the SMI<font color="#E5E5E5"> it will trigger and then you</font>

590
00:25:18,070 --> 00:25:22,389
<font color="#E5E5E5">just simulate this tool it was just for</font>

591
00:25:20,860 --> 00:25:22,729
<font color="#E5E5E5">the demo</font><font color="#CCCCCC"> purpose we're just not</font><font color="#E5E5E5"> doing</font>

592
00:25:22,390 --> 00:25:25,100
that

593
00:25:22,730 --> 00:25:27,290
just took the original tool and run<font color="#E5E5E5"> it</font>

594
00:25:25,100 --> 00:25:30,678
<font color="#E5E5E5">from the</font><font color="#CCCCCC"> original</font><font color="#E5E5E5"> tool</font><font color="#CCCCCC"> to in</font><font color="#E5E5E5"> fact this</font>

595
00:25:27,290 --> 00:25:33,080
<font color="#E5E5E5">the the system from</font><font color="#CCCCCC"> in the supermarket</font>

596
00:25:30,679 --> 00:25:35,200
<font color="#CCCCCC">server</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> we use completely open</font>

597
00:25:33,080 --> 00:25:37,730
<font color="#CCCCCC">source that implant so it was like</font>

598
00:25:35,200 --> 00:25:39,770
<font color="#CCCCCC">nation' which you see need to do we just</font>

599
00:25:37,730 --> 00:25:43,280
take<font color="#CCCCCC"> it from the github</font><font color="#E5E5E5"> build it</font><font color="#CCCCCC"> in fact</font>

600
00:25:39,770 --> 00:25:45,020
the<font color="#CCCCCC"> image</font><font color="#E5E5E5"> and and and you down so with a</font>

601
00:25:43,280 --> 00:25:47,330
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more work attackers of</font><font color="#E5E5E5"> cost</font>

602
00:25:45,020 --> 00:25:49,850
can do much more<font color="#CCCCCC"> transit stuff like that</font>

603
00:25:47,330 --> 00:25:52,129
was<font color="#CCCCCC"> like the idea of how how simple it</font>

604
00:25:49,850 --> 00:25:53,840
could be it could<font color="#E5E5E5"> be as complicated as</font>

605
00:25:52,130 --> 00:25:56,390
<font color="#CCCCCC">attacker want in perspective</font><font color="#E5E5E5"> of post</font>

606
00:25:53,840 --> 00:25:57,678
exploitation<font color="#E5E5E5"> so if you see here that</font>

607
00:25:56,390 --> 00:25:59,510
will<font color="#E5E5E5"> erase on all of the chip</font><font color="#CCCCCC"> it's</font>

608
00:25:57,679 --> 00:26:02,419
writing<font color="#CCCCCC"> all the chip including NVRAM</font>

609
00:25:59,510 --> 00:26:05,179
including boot block including bias<font color="#E5E5E5"> bias</font>

610
00:26:02,419 --> 00:26:07,940
<font color="#CCCCCC">blog it runs some checks</font><font color="#E5E5E5"> rebooting the</font>

611
00:26:05,179 --> 00:26:09,710
system and during the boot flow before

612
00:26:07,940 --> 00:26:11,990
<font color="#CCCCCC">the</font><font color="#E5E5E5"> operation system start we see that</font>

613
00:26:09,710 --> 00:26:13,820
it is system is implanted<font color="#E5E5E5"> so from this</font>

614
00:26:11,990 --> 00:26:15,950
point<font color="#E5E5E5"> of</font><font color="#CCCCCC"> view attacker can control</font>

615
00:26:13,820 --> 00:26:18,379
everything<font color="#E5E5E5"> in a system make system</font>

616
00:26:15,950 --> 00:26:21,590
unbootable<font color="#CCCCCC"> or fully compromised the</font>

617
00:26:18,380 --> 00:26:26,510
operation<font color="#CCCCCC"> system and and hook all of the</font>

618
00:26:21,590 --> 00:26:30,889
<font color="#E5E5E5">API they want so let me come back</font><font color="#CCCCCC"> to the</font>

619
00:26:26,510 --> 00:26:35,720
slides<font color="#CCCCCC"> there is other methods to break</font>

620
00:26:30,890 --> 00:26:38,030
the<font color="#CCCCCC"> system one of that is SPG</font><font color="#E5E5E5"> xpg EEPROM</font>

621
00:26:35,720 --> 00:26:40,100
is basically a persistent memory<font color="#E5E5E5"> inside</font>

622
00:26:38,030 --> 00:26:43,190
the gym controller in this in<font color="#E5E5E5"> a system</font>

623
00:26:40,100 --> 00:26:45,860
memory<font color="#E5E5E5"> it could be in</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> cases</font>

624
00:26:43,190 --> 00:26:47,929
accessible for the read and if you will

625
00:26:45,860 --> 00:26:50,570
decode and read and<font color="#E5E5E5"> will understand what</font>

626
00:26:47,929 --> 00:26:52,610
what is<font color="#E5E5E5"> what</font><font color="#CCCCCC"> is inside that that</font><font color="#E5E5E5"> storage</font>

627
00:26:50,570 --> 00:26:54,889
there is a voltage information there is

628
00:26:52,610 --> 00:26:57,459
a frequency information<font color="#E5E5E5"> by correcting</font>

629
00:26:54,890 --> 00:27:00,530
<font color="#E5E5E5">the system you make your system memory</font>

630
00:26:57,460 --> 00:27:02,870
<font color="#E5E5E5">not work and</font><font color="#CCCCCC"> you that will</font><font color="#E5E5E5"> be hard to</font>

631
00:27:00,530 --> 00:27:05,600
figure out why<font color="#CCCCCC"> the</font><font color="#E5E5E5"> system doesn't</font><font color="#CCCCCC"> work</font>

632
00:27:02,870 --> 00:27:07,250
and the funny part of it<font color="#E5E5E5"> that</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a</font>

633
00:27:05,600 --> 00:27:11,480
<font color="#CCCCCC">specification which is telling you how</font>

634
00:27:07,250 --> 00:27:13,130
to<font color="#E5E5E5"> lock that that SPD but it's not it's</font>

635
00:27:11,480 --> 00:27:15,919
<font color="#E5E5E5">not always the case that BIOS is doing</font>

636
00:27:13,130 --> 00:27:17,150
that so there's<font color="#CCCCCC"> there is</font><font color="#E5E5E5"> a bunch</font><font color="#CCCCCC"> of work</font>

637
00:27:15,919 --> 00:27:22,100
need to be done<font color="#E5E5E5"> correctly and</font><font color="#CCCCCC"> advice to</font>

638
00:27:17,150 --> 00:27:23,419
<font color="#CCCCCC">set to set that log bit so</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> five</font>

639
00:27:22,100 --> 00:27:25,760
variables we<font color="#E5E5E5"> already mentioned</font><font color="#CCCCCC"> these</font>

640
00:27:23,419 --> 00:27:27,919
multiple years ago<font color="#E5E5E5"> like in</font><font color="#CCCCCC"> two thousand</font>

641
00:27:25,760 --> 00:27:30,260
<font color="#CCCCCC">fifteen sixteen seventeen</font><font color="#E5E5E5"> anyway it's</font>

642
00:27:27,919 --> 00:27:31,880
still a problem<font color="#E5E5E5"> but you still you</font><font color="#CCCCCC"> still</font>

643
00:27:30,260 --> 00:27:33,679
have the capabilities to break<font color="#E5E5E5"> a system</font>

644
00:27:31,880 --> 00:27:34,940
if you delete the<font color="#E5E5E5"> variable or if you</font>

645
00:27:33,679 --> 00:27:36,380
override<font color="#E5E5E5"> the variable or if you</font>

646
00:27:34,940 --> 00:27:38,030
duplicate the variable

647
00:27:36,380 --> 00:27:41,210
<font color="#CCCCCC">the fireballs is basically the</font>

648
00:27:38,030 --> 00:27:42,980
configuration of the<font color="#E5E5E5"> system</font><font color="#CCCCCC"> former so</font>

649
00:27:41,210 --> 00:27:44,990
that's the example<font color="#E5E5E5"> of the one of the</font>

650
00:27:42,980 --> 00:27:47,090
really popular variable<font color="#E5E5E5"> setup variable</font>

651
00:27:44,990 --> 00:27:48,890
which is if you will<font color="#E5E5E5"> corrupt that</font>

652
00:27:47,090 --> 00:27:51,560
variable in<font color="#CCCCCC"> mini system they will</font><font color="#E5E5E5"> not</font>

653
00:27:48,890 --> 00:27:53,900
work the<font color="#E5E5E5"> system will not boot it so</font>

654
00:27:51,560 --> 00:27:57,919
another really<font color="#CCCCCC"> interesting and not that</font>

655
00:27:53,900 --> 00:28:02,870
popular<font color="#E5E5E5"> is flesh over out basically the</font>

656
00:27:57,920 --> 00:28:05,210
the first chip is<font color="#E5E5E5"> it's making</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> good</font>

657
00:28:02,870 --> 00:28:09,639
could capable to make<font color="#E5E5E5"> only a certain</font>

658
00:28:05,210 --> 00:28:12,320
<font color="#E5E5E5">amount of</font><font color="#CCCCCC"> Rights</font><font color="#E5E5E5"> during the</font><font color="#CCCCCC"> lifetime</font><font color="#E5E5E5"> and</font>

659
00:28:09,640 --> 00:28:14,990
if your chip<font color="#E5E5E5"> is accessible for rights</font>

660
00:28:12,320 --> 00:28:17,210
<font color="#E5E5E5">you can write like two</font><font color="#CCCCCC"> hundred thousand</font>

661
00:28:14,990 --> 00:28:20,900
<font color="#E5E5E5">times over eight hours</font><font color="#CCCCCC"> and make the</font>

662
00:28:17,210 --> 00:28:22,970
system break a system and the way that

663
00:28:20,900 --> 00:28:25,160
<font color="#E5E5E5">someone need to disorder the chip and</font>

664
00:28:22,970 --> 00:28:27,080
solder the new one<font color="#E5E5E5"> to record</font><font color="#CCCCCC"> the system</font>

665
00:28:25,160 --> 00:28:28,400
and<font color="#E5E5E5"> that's like small</font><font color="#CCCCCC"> controllers which</font>

666
00:28:27,080 --> 00:28:32,270
could<font color="#E5E5E5"> make a bunch of</font><font color="#CCCCCC"> damage</font><font color="#E5E5E5"> for the</font>

667
00:28:28,400 --> 00:28:35,720
server option<font color="#CCCCCC"> wrong this</font><font color="#E5E5E5"> is a persistent</font>

668
00:28:32,270 --> 00:28:37,520
storage in the<font color="#E5E5E5"> devices you can if</font>

669
00:28:35,720 --> 00:28:39,230
<font color="#CCCCCC">optional base exists for some of the</font>

670
00:28:37,520 --> 00:28:42,920
devices like<font color="#E5E5E5"> a big network art or</font>

671
00:28:39,230 --> 00:28:45,740
something<font color="#CCCCCC"> like that you can</font><font color="#E5E5E5"> use a API</font>

672
00:28:42,920 --> 00:28:47,870
which<font color="#CCCCCC"> is vendor provide to you to read</font>

673
00:28:45,740 --> 00:28:50,060
that option<font color="#CCCCCC"> wrong but</font><font color="#E5E5E5"> sometimes you need</font>

674
00:28:47,870 --> 00:28:51,350
to<font color="#E5E5E5"> write</font><font color="#CCCCCC"> to the option roms</font><font color="#E5E5E5"> and if you</font>

675
00:28:50,060 --> 00:28:53,240
write<font color="#E5E5E5"> to the auction rooms you can also</font>

676
00:28:51,350 --> 00:28:55,070
break<font color="#E5E5E5"> the device but it's not only</font>

677
00:28:53,240 --> 00:28:57,110
<font color="#E5E5E5">biggest device option on is the part of</font>

678
00:28:55,070 --> 00:28:59,780
<font color="#E5E5E5">the main boot flow so you can put like</font>

679
00:28:57,110 --> 00:29:01,490
<font color="#E5E5E5">infinite loop and then that</font><font color="#CCCCCC"> tunic loop</font>

680
00:28:59,780 --> 00:29:03,379
will not let the<font color="#CCCCCC"> system boots</font>

681
00:29:01,490 --> 00:29:06,440
if the device will be<font color="#CCCCCC"> setted</font><font color="#E5E5E5"> in in</font>

682
00:29:03,380 --> 00:29:08,360
<font color="#E5E5E5">hardware so with this I will go and</font>

683
00:29:06,440 --> 00:29:10,610
<font color="#E5E5E5">switch to the</font><font color="#CCCCCC"> gesture to explain the</font>

684
00:29:08,360 --> 00:29:13,240
second part of the of the presentation

685
00:29:10,610 --> 00:29:13,240
about being seen

686
00:29:36,070 --> 00:29:48,490
yeah we will<font color="#E5E5E5"> fix it in a second don't</font>

687
00:29:46,040 --> 00:29:48,490
want<font color="#CCCCCC"> use mine</font>

688
00:29:50,590 --> 00:29:56,110
because this does work<font color="#CCCCCC"> I can give you</font>

689
00:29:53,960 --> 00:29:56,110
one

690
00:30:00,580 --> 00:30:17,860
what can we just<font color="#CCCCCC"> swap</font><font color="#E5E5E5"> it does work</font>

691
00:30:43,690 --> 00:30:52,010
okay<font color="#E5E5E5"> okay there we go</font>

692
00:30:46,390 --> 00:30:52,970
okay<font color="#E5E5E5"> thanks Alex so with another another</font>

693
00:30:52,010 --> 00:30:56,240
component<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> system that</font><font color="#E5E5E5"> we've</font>

694
00:30:52,970 --> 00:30:58,640
talked<font color="#CCCCCC"> about today and Niko Mattias</font>

695
00:30:56,240 --> 00:31:00,040
talked about the BMC also is<font color="#E5E5E5"> just</font>

696
00:30:58,640 --> 00:31:03,170
there's<font color="#CCCCCC"> this out-of-band management</font>

697
00:31:00,040 --> 00:31:04,639
component within servers<font color="#E5E5E5"> and if you</font>

698
00:31:03,170 --> 00:31:08,780
don't know anything<font color="#E5E5E5"> about this yet it's</font>

699
00:31:04,640 --> 00:31:11,090
used for sensor monitoring<font color="#CCCCCC"> KVM it's</font>

700
00:31:08,780 --> 00:31:14,510
basically<font color="#CCCCCC"> a management platform</font><font color="#E5E5E5"> within</font>

701
00:31:11,090 --> 00:31:17,090
<font color="#CCCCCC">the system that's</font><font color="#E5E5E5"> runs on its own you</font>

702
00:31:14,510 --> 00:31:18,920
can use it to reflash the<font color="#CCCCCC"> BIOS it that's</font>

703
00:31:17,090 --> 00:31:20,270
one of the the key<font color="#E5E5E5"> functions is being</font>

704
00:31:18,920 --> 00:31:22,580
able to flash the<font color="#E5E5E5"> BIOS make sure that</font>

705
00:31:20,270 --> 00:31:24,530
you can boot<font color="#E5E5E5"> up the system</font><font color="#CCCCCC"> you don't</font>

706
00:31:22,580 --> 00:31:30,320
<font color="#CCCCCC">want to go to the data</font><font color="#E5E5E5"> center and have</font>

707
00:31:24,530 --> 00:31:32,450
to<font color="#E5E5E5"> plug in a monitor and and fix the</font>

708
00:31:30,320 --> 00:31:34,250
system that<font color="#E5E5E5"> way so here's an</font><font color="#CCCCCC"> example of</font>

709
00:31:32,450 --> 00:31:36,320
one<font color="#CCCCCC"> of the interfaces</font><font color="#E5E5E5"> there's a remote</font>

710
00:31:34,250 --> 00:31:38,600
<font color="#E5E5E5">control there's</font><font color="#CCCCCC"> KBM you can power it</font><font color="#E5E5E5"> on</font>

711
00:31:36,320 --> 00:31:41,929
<font color="#E5E5E5">power it off there's a serial over LAN</font>

712
00:31:38,600 --> 00:31:45,409
functionality<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> also basically</font>

713
00:31:41,930 --> 00:31:47,060
emulate a floppy or<font color="#E5E5E5"> cd-rom from an image</font>

714
00:31:45,410 --> 00:31:50,540
shared across<font color="#CCCCCC"> the</font><font color="#E5E5E5"> network and</font><font color="#CCCCCC"> that shows</font>

715
00:31:47,060 --> 00:31:52,909
up<font color="#CCCCCC"> it shows</font><font color="#E5E5E5"> up on the seat on the the</font>

716
00:31:50,540 --> 00:31:55,940
<font color="#E5E5E5">target</font><font color="#CCCCCC"> system acting like a real</font>

717
00:31:52,910 --> 00:31:57,980
physical device and your operating

718
00:31:55,940 --> 00:32:00,140
<font color="#E5E5E5">system you can boot off of</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> it's a</font>

719
00:31:57,980 --> 00:32:02,150
pretty<font color="#E5E5E5"> useful</font><font color="#CCCCCC"> functionality you can</font>

720
00:32:00,140 --> 00:32:04,850
<font color="#CCCCCC">flash the BIOS from DAC that's a pretty</font>

721
00:32:02,150 --> 00:32:08,840
key feature this particular one<font color="#CCCCCC"> you need</font>

722
00:32:04,850 --> 00:32:09,800
to pay<font color="#CCCCCC"> to enable that</font><font color="#E5E5E5"> feature</font><font color="#CCCCCC"> there have</font>

723
00:32:08,840 --> 00:32:12,500
<font color="#E5E5E5">been a number of</font><font color="#CCCCCC"> vulnerabilities</font>

724
00:32:09,800 --> 00:32:16,340
discovered<font color="#E5E5E5"> in</font><font color="#CCCCCC"> BMC's in the past this</font><font color="#E5E5E5"> was</font>

725
00:32:12,500 --> 00:32:20,710
one<font color="#CCCCCC"> found just last year in</font><font color="#E5E5E5"> HP ILO where</font>

726
00:32:16,340 --> 00:32:23,389
they had a<font color="#E5E5E5"> pretty fun it was</font><font color="#CCCCCC"> a complete</font>

727
00:32:20,710 --> 00:32:26,030
<font color="#E5E5E5">authentication bypass</font><font color="#CCCCCC"> by having a</font>

728
00:32:23,390 --> 00:32:27,650
connection header<font color="#E5E5E5"> that had a</font><font color="#CCCCCC"> twenty nine</font>

729
00:32:26,030 --> 00:32:30,770
a is it basically overflowed a

730
00:32:27,650 --> 00:32:32,480
particular flag on the on the stack<font color="#CCCCCC"> that</font>

731
00:32:30,770 --> 00:32:34,580
determine if who is a local request<font color="#E5E5E5"> or a</font>

732
00:32:32,480 --> 00:32:36,740
remote request<font color="#E5E5E5"> and if it's a local</font>

733
00:32:34,580 --> 00:32:38,060
request it does not require any

734
00:32:36,740 --> 00:32:40,400
authentication and<font color="#E5E5E5"> it will just do</font>

735
00:32:38,060 --> 00:32:42,710
whatever<font color="#E5E5E5"> you want so you could say give</font>

736
00:32:40,400 --> 00:32:46,010
this<font color="#E5E5E5"> particular HTTP header and say</font>

737
00:32:42,710 --> 00:32:47,780
create a user with and create a new

738
00:32:46,010 --> 00:32:49,580
admin user for me with this password<font color="#E5E5E5"> and</font>

739
00:32:47,780 --> 00:32:52,850
it'll just<font color="#E5E5E5"> go do it</font><font color="#CCCCCC"> for you so that one</font>

740
00:32:49,580 --> 00:32:54,169
was pretty it was pretty<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> here's an</font>

741
00:32:52,850 --> 00:32:55,719
<font color="#E5E5E5">example of some</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> information</font><font color="#CCCCCC"> that</font>

742
00:32:54,170 --> 00:32:57,880
you can get from

743
00:32:55,720 --> 00:33:00,039
my over just<font color="#E5E5E5"> there's a get device ID</font>

744
00:32:57,880 --> 00:33:01,690
field which is a mandatory<font color="#CCCCCC"> IPMI command</font>

745
00:33:00,039 --> 00:33:04,360
and<font color="#E5E5E5"> will tell you things</font><font color="#CCCCCC"> like</font>

746
00:33:01,690 --> 00:33:06,549
<font color="#CCCCCC">manufacturer ID product ID device ID and</font>

747
00:33:04,360 --> 00:33:08,949
the firmware version<font color="#E5E5E5"> that's in that</font>

748
00:33:06,549 --> 00:33:10,840
particular device<font color="#E5E5E5"> and for this</font>

749
00:33:08,950 --> 00:33:12,909
particular<font color="#E5E5E5"> example</font><font color="#CCCCCC"> you can you can tell</font>

750
00:33:10,840 --> 00:33:15,490
if it's vulnerable<font color="#CCCCCC"> by checking the</font>

751
00:33:12,909 --> 00:33:17,380
device ID<font color="#CCCCCC"> manufacturer ID and if it's</font>

752
00:33:15,490 --> 00:33:20,620
below<font color="#CCCCCC"> a certain firmware level</font><font color="#E5E5E5"> then it's</font>

753
00:33:17,380 --> 00:33:24,970
it's<font color="#CCCCCC"> vulnerable to this we</font><font color="#E5E5E5"> also heard</font>

754
00:33:20,620 --> 00:33:26,320
about the dell idrac<font color="#E5E5E5"> issues that</font><font color="#CCCCCC"> nico</font>

755
00:33:24,970 --> 00:33:29,080
and Mattias talked about yesterday

756
00:33:26,320 --> 00:33:30,879
those were pretty<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> remote offer</font>

757
00:33:29,080 --> 00:33:36,010
<font color="#E5E5E5">unauthorized remote code execution in</font>

758
00:33:30,880 --> 00:33:39,909
<font color="#E5E5E5">the BMC is is pretty scary</font><font color="#CCCCCC"> one of the</font>

759
00:33:36,010 --> 00:33:45,580
other older vulnerabilities is the super

760
00:33:39,909 --> 00:33:47,320
<font color="#E5E5E5">my hero x9</font><font color="#CCCCCC"> back in</font><font color="#E5E5E5"> 2003 or 2013</font><font color="#CCCCCC"> dan</font>

761
00:33:45,580 --> 00:33:49,830
farmer and HD<font color="#CCCCCC"> Mora</font><font color="#E5E5E5"> work together and</font>

762
00:33:47,320 --> 00:33:53,320
published some interesting<font color="#CCCCCC"> results</font>

763
00:33:49,830 --> 00:33:55,539
<font color="#E5E5E5">basically they found a lot of bugs in</font>

764
00:33:53,320 --> 00:33:58,990
BMC including like static encryption

765
00:33:55,539 --> 00:34:00,879
keys are coded credentials when they

766
00:33:58,990 --> 00:34:03,789
were auditing the web applications<font color="#CCCCCC"> for</font>

767
00:34:00,880 --> 00:34:05,080
BMC they found so many places of unsafe

768
00:34:03,789 --> 00:34:07,990
string handling<font color="#E5E5E5"> that they just stopped</font>

769
00:34:05,080 --> 00:34:10,179
<font color="#E5E5E5">even trying to add</font><font color="#CCCCCC"> see the ease and just</font>

770
00:34:07,990 --> 00:34:13,179
gave this whole list<font color="#E5E5E5"> to super</font><font color="#CCCCCC"> micro and</font>

771
00:34:10,179 --> 00:34:14,800
had them go fix them<font color="#CCCCCC"> so we're gonna take</font>

772
00:34:13,179 --> 00:34:17,260
<font color="#E5E5E5">a closer look at some of</font><font color="#CCCCCC"> the different</font>

773
00:34:14,800 --> 00:34:20,589
<font color="#E5E5E5">super micro</font><font color="#CCCCCC"> bmc's</font><font color="#E5E5E5"> and some of the</font>

774
00:34:17,260 --> 00:34:23,200
different<font color="#CCCCCC"> generations x8 and</font><font color="#E5E5E5"> Exxon used</font>

775
00:34:20,589 --> 00:34:26,710
an older type<font color="#CCCCCC"> of a couple</font><font color="#E5E5E5"> different</font>

776
00:34:23,199 --> 00:34:29,649
types<font color="#E5E5E5"> of chips</font><font color="#CCCCCC"> with firmware</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> AMI 8n</font>

777
00:34:26,710 --> 00:34:31,270
when they<font color="#CCCCCC"> transition</font><font color="#E5E5E5"> to X 10 and</font><font color="#CCCCCC"> X 11</font>

778
00:34:29,649 --> 00:34:33,219
they move it over to a speed<font color="#E5E5E5"> instead</font>

779
00:34:31,270 --> 00:34:34,929
with<font color="#CCCCCC"> the different</font><font color="#E5E5E5"> basically the BMC</font>

780
00:34:33,219 --> 00:34:38,158
firmware came from a different<font color="#E5E5E5"> vendor</font>

781
00:34:34,929 --> 00:34:40,780
<font color="#E5E5E5">and things changed a little bit but</font>

782
00:34:38,159 --> 00:34:44,679
we'll<font color="#E5E5E5"> take a look at what specifically</font>

783
00:34:40,780 --> 00:34:46,119
changed<font color="#E5E5E5"> so figuring out what's in a BMC</font>

784
00:34:44,679 --> 00:34:48,190
in the image in the<font color="#E5E5E5"> first place we'll</font>

785
00:34:46,119 --> 00:34:50,109
just run<font color="#E5E5E5"> VIN walk in it and we'll see</font>

786
00:34:48,190 --> 00:34:53,409
some some<font color="#CCCCCC"> interesting things pop up</font><font color="#E5E5E5"> like</font>

787
00:34:50,109 --> 00:34:56,168
there's a cram FS<font color="#CCCCCC"> filesystem there's a</font>

788
00:34:53,409 --> 00:34:58,690
zip file which the name is Colonel dot

789
00:34:56,168 --> 00:35:00,569
<font color="#E5E5E5">bin which is kind of fun and then</font>

790
00:34:58,690 --> 00:35:04,240
there's another tram FS<font color="#CCCCCC"> filesystem and</font>

791
00:35:00,570 --> 00:35:05,380
we found some copyright strings but if

792
00:35:04,240 --> 00:35:07,310
we take a closer look<font color="#E5E5E5"> and actually</font>

793
00:35:05,380 --> 00:35:09,290
<font color="#E5E5E5">unpack the trauma FS</font><font color="#CCCCCC"> are</font>

794
00:35:07,310 --> 00:35:12,290
we can find the code that<font color="#CCCCCC"> actually</font>

795
00:35:09,290 --> 00:35:14,390
handles<font color="#E5E5E5"> those updates and in this</font>

796
00:35:12,290 --> 00:35:16,759
<font color="#E5E5E5">particular</font><font color="#CCCCCC"> example it basically scans</font>

797
00:35:14,390 --> 00:35:20,420
through the the update image to look for

798
00:35:16,760 --> 00:35:22,460
regions<font color="#E5E5E5"> using this magic</font><font color="#CCCCCC"> value and if we</font>

799
00:35:20,420 --> 00:35:25,270
<font color="#CCCCCC">then go</font><font color="#E5E5E5"> look in the the update file</font>

800
00:35:22,460 --> 00:35:28,820
<font color="#E5E5E5">itself we find</font><font color="#CCCCCC"> that magic value and</font>

801
00:35:25,270 --> 00:35:31,630
there's essentially metadata<font color="#E5E5E5"> at the end</font>

802
00:35:28,820 --> 00:35:34,370
of each region that has information<font color="#E5E5E5"> like</font>

803
00:35:31,630 --> 00:35:35,810
there's some there's a key piece of

804
00:35:34,370 --> 00:35:38,210
information<font color="#E5E5E5"> called the burn address</font>

805
00:35:35,810 --> 00:35:41,180
which is the address within the spy<font color="#E5E5E5"> that</font>

806
00:35:38,210 --> 00:35:42,710
this particular region<font color="#E5E5E5"> of the update is</font>

807
00:35:41,180 --> 00:35:44,390
going<font color="#CCCCCC"> to be burned to we do have the</font>

808
00:35:42,710 --> 00:35:47,030
name<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> region and then there is a</font>

809
00:35:44,390 --> 00:35:48,859
checksum just it's the checksum does

810
00:35:47,030 --> 00:35:52,360
doesn't<font color="#E5E5E5"> cover the</font><font color="#CCCCCC"> region it only covers</font>

811
00:35:48,860 --> 00:35:55,280
the the<font color="#CCCCCC"> metadata for this particular</font>

812
00:35:52,360 --> 00:35:58,940
region<font color="#E5E5E5"> so it detects if this is a valid</font>

813
00:35:55,280 --> 00:36:00,980
metadata so that that burn address like

814
00:35:58,940 --> 00:36:03,520
the base of the image is<font color="#E5E5E5"> four with seven</font>

815
00:36:00,980 --> 00:36:05,840
zeros after it<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> basically</font>

816
00:36:03,520 --> 00:36:08,810
subtract the base<font color="#CCCCCC"> address from the burn</font>

817
00:36:05,840 --> 00:36:10,790
<font color="#E5E5E5">add start offset if you if you remember</font>

818
00:36:08,810 --> 00:36:13,549
the the<font color="#CCCCCC"> cram FS from a few slides that</font>

819
00:36:10,790 --> 00:36:16,730
first one<font color="#CCCCCC"> was that</font><font color="#E5E5E5"> one eight and four</font>

820
00:36:13,550 --> 00:36:18,850
<font color="#E5E5E5">zeros which matches up with one of our</font>

821
00:36:16,730 --> 00:36:22,580
<font color="#CCCCCC">region's here so our</font><font color="#E5E5E5"> first file system</font>

822
00:36:18,850 --> 00:36:25,040
is at offset<font color="#E5E5E5"> one eight zeros and at the</font>

823
00:36:22,580 --> 00:36:27,140
end the<font color="#E5E5E5"> end of this region is</font><font color="#CCCCCC"> at nine to</font>

824
00:36:25,040 --> 00:36:29,150
zero zero so we we know how we can<font color="#CCCCCC"> carve</font>

825
00:36:27,140 --> 00:36:31,580
out<font color="#E5E5E5"> that specific</font><font color="#CCCCCC"> region and take a look</font>

826
00:36:29,150 --> 00:36:34,580
at it<font color="#E5E5E5"> if we kind of take a little bit of</font>

827
00:36:31,580 --> 00:36:35,990
a further look we determined<font color="#E5E5E5"> that the</font>

828
00:36:34,580 --> 00:36:38,930
the last region<font color="#E5E5E5"> in this particular</font>

829
00:36:35,990 --> 00:36:41,149
firmware image is special the the<font color="#CCCCCC"> update</font>

830
00:36:38,930 --> 00:36:44,899
<font color="#E5E5E5">code does look for this</font><font color="#CCCCCC"> eight 10s</font><font color="#E5E5E5"> from</font>

831
00:36:41,150 --> 00:36:48,350
<font color="#E5E5E5">where signature there's a couple bites</font>

832
00:36:44,900 --> 00:36:51,560
that<font color="#CCCCCC"> are better checked for but it it</font>

833
00:36:48,350 --> 00:36:53,690
doesn't<font color="#E5E5E5"> have it it's I think</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> be</font>

834
00:36:51,560 --> 00:36:55,009
there's a<font color="#CCCCCC"> 71 byte and the zero three</font>

835
00:36:53,690 --> 00:36:56,600
byte are the only ones<font color="#CCCCCC"> that it's really</font>

836
00:36:55,010 --> 00:36:58,880
<font color="#E5E5E5">looking for other this than this</font><font color="#CCCCCC"> 810</font>

837
00:36:56,600 --> 00:37:00,410
signature at<font color="#E5E5E5"> the end but if we put it</font>

838
00:36:58,880 --> 00:37:01,940
all together we basically have<font color="#CCCCCC"> our</font>

839
00:37:00,410 --> 00:37:04,670
layout kind of looks<font color="#CCCCCC"> like this where</font>

840
00:37:01,940 --> 00:37:05,540
there's a<font color="#CCCCCC"> bootloader for the first</font><font color="#E5E5E5"> 64 K</font>

841
00:37:04,670 --> 00:37:09,740
of the image

842
00:37:05,540 --> 00:37:12,020
it's just<font color="#CCCCCC"> W PCM 450 bootloader from wind</font>

843
00:37:09,740 --> 00:37:13,819
bond<font color="#E5E5E5"> we've got some</font><font color="#CCCCCC"> padding we've got a</font>

844
00:37:12,020 --> 00:37:15,830
<font color="#E5E5E5">cram FS for the</font><font color="#CCCCCC"> rich filesystem as if</font>

845
00:37:13,820 --> 00:37:17,220
<font color="#CCCCCC">journal</font><font color="#E5E5E5"> a crab crema fest for the web</font>

846
00:37:15,830 --> 00:37:19,440
<font color="#E5E5E5">filesystem</font>

847
00:37:17,220 --> 00:37:24,899
and we've got some metadata at the end

848
00:37:19,440 --> 00:37:27,510
of each of<font color="#CCCCCC"> those regions let's</font><font color="#E5E5E5"> see that</font>

849
00:37:24,900 --> 00:37:29,579
so<font color="#CCCCCC"> this was the the update image and</font>

850
00:37:27,510 --> 00:37:30,930
<font color="#E5E5E5">there's a like a padding region on a</font>

851
00:37:29,579 --> 00:37:33,480
live<font color="#E5E5E5"> file system that's actually</font>

852
00:37:30,930 --> 00:37:36,290
<font color="#E5E5E5">replaced with a GF FS</font><font color="#CCCCCC"> 2 file system</font>

853
00:37:33,480 --> 00:37:38,970
that's used<font color="#CCCCCC"> for non-volatile storage of</font>

854
00:37:36,290 --> 00:37:41,670
configuration and<font color="#CCCCCC"> information event log</font>

855
00:37:38,970 --> 00:37:45,540
and<font color="#E5E5E5"> anything that</font><font color="#CCCCCC"> it wants to persist</font><font color="#E5E5E5"> in</font>

856
00:37:41,670 --> 00:37:47,640
<font color="#E5E5E5">the BMC across reboots</font><font color="#CCCCCC"> the X the x8</font>

857
00:37:45,540 --> 00:37:51,900
generation uses the exact<font color="#E5E5E5"> same format as</font>

858
00:37:47,640 --> 00:37:54,900
as this for their<font color="#E5E5E5"> firmware updates so</font>

859
00:37:51,900 --> 00:37:56,579
for 4 X 10<font color="#E5E5E5"> they did change the processor</font>

860
00:37:54,900 --> 00:37:58,589
entirely using going with a speed

861
00:37:56,579 --> 00:38:01,020
instead<font color="#CCCCCC"> also they changed the bootloader</font>

862
00:37:58,589 --> 00:38:03,480
so they're<font color="#E5E5E5"> using you booting and they're</font>

863
00:38:01,020 --> 00:38:06,030
no<font color="#CCCCCC"> longer using</font><font color="#E5E5E5"> that end of region</font>

864
00:38:03,480 --> 00:38:07,890
metadata<font color="#E5E5E5"> but they have something</font><font color="#CCCCCC"> even</font>

865
00:38:06,030 --> 00:38:10,980
nicer<font color="#E5E5E5"> they basically have these image</font>

866
00:38:07,890 --> 00:38:14,670
tags that specify exactly like the start

867
00:38:10,980 --> 00:38:16,680
address<font color="#E5E5E5"> the start offset and offset this</font>

868
00:38:14,670 --> 00:38:20,099
time they actually<font color="#CCCCCC"> have a CRC for</font><font color="#E5E5E5"> the</font>

869
00:38:16,680 --> 00:38:21,629
region itself so<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> CRC</font><font color="#CCCCCC"> 30 32</font><font color="#E5E5E5"> you</font>

870
00:38:20,099 --> 00:38:23,670
need to recalculate<font color="#E5E5E5"> that when you change</font>

871
00:38:21,630 --> 00:38:25,440
<font color="#CCCCCC">the</font><font color="#E5E5E5"> region but then they also have</font><font color="#CCCCCC"> the</font>

872
00:38:23,670 --> 00:38:30,329
<font color="#E5E5E5">the name of the region</font><font color="#CCCCCC"> when they they</font>

873
00:38:25,440 --> 00:38:31,890
built this image from their file<font color="#E5E5E5"> so the</font>

874
00:38:30,329 --> 00:38:33,630
region is really<font color="#CCCCCC"> similar the only</font>

875
00:38:31,890 --> 00:38:36,299
<font color="#CCCCCC">difference</font><font color="#E5E5E5"> is the bootloader region is</font>

876
00:38:33,630 --> 00:38:38,160
bigger and it's<font color="#CCCCCC"> not a zipped kernel</font>

877
00:38:36,300 --> 00:38:41,520
anymore it's<font color="#CCCCCC"> just a like a standard</font>

878
00:38:38,160 --> 00:38:43,799
<font color="#CCCCCC">Linux image that would</font><font color="#E5E5E5"> be loaded by you</font>

879
00:38:41,520 --> 00:38:46,440
boot and then<font color="#E5E5E5"> there is the</font><font color="#CCCCCC"> the image</font>

880
00:38:43,800 --> 00:38:51,869
tags at a particular<font color="#E5E5E5"> address after those</font>

881
00:38:46,440 --> 00:38:53,280
<font color="#E5E5E5">two file systems</font><font color="#CCCCCC"> in kernel so they did</font>

882
00:38:51,869 --> 00:38:56,190
<font color="#E5E5E5">something really interesting for the</font><font color="#CCCCCC"> x11</font>

883
00:38:53,280 --> 00:38:57,720
generation<font color="#E5E5E5"> so the the part was basically</font>

884
00:38:56,190 --> 00:39:01,770
within<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> family just a small</font>

885
00:38:57,720 --> 00:39:04,109
change<font color="#CCCCCC"> but the firmware format we can't</font>

886
00:39:01,770 --> 00:39:06,540
tell what's in<font color="#E5E5E5"> it by using our previous</font>

887
00:39:04,109 --> 00:39:09,740
methods<font color="#E5E5E5"> even if you run</font><font color="#CCCCCC"> been walk</font><font color="#E5E5E5"> it</font>

888
00:39:06,540 --> 00:39:13,200
doesn't<font color="#E5E5E5"> detect anything except a ton of</font>

889
00:39:09,740 --> 00:39:15,149
individual compressed streams<font color="#E5E5E5"> and if you</font>

890
00:39:13,200 --> 00:39:17,730
try<font color="#E5E5E5"> to extract it</font><font color="#CCCCCC"> with bin walk</font><font color="#E5E5E5"> you'll</font>

891
00:39:15,150 --> 00:39:22,230
end up<font color="#E5E5E5"> with a multi-gigabyte mess that</font>

892
00:39:17,730 --> 00:39:23,880
is not useful at all but well<font color="#E5E5E5"> after some</font>

893
00:39:22,230 --> 00:39:26,540
<font color="#E5E5E5">further investigation one thing that we</font>

894
00:39:23,880 --> 00:39:29,720
figured out was<font color="#CCCCCC"> that they basically</font><font color="#E5E5E5"> had</font>

895
00:39:26,540 --> 00:39:33,009
used exactly the<font color="#CCCCCC"> same</font><font color="#E5E5E5"> format as</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> x10</font>

896
00:39:29,720 --> 00:39:35,359
but they used<font color="#CCCCCC"> hard-coded AES keys and</font>

897
00:39:33,010 --> 00:39:39,380
initialization<font color="#E5E5E5"> vectors to encrypt that</font>

898
00:39:35,359 --> 00:39:41,390
<font color="#E5E5E5">image tag and the very first section of</font>

899
00:39:39,380 --> 00:39:44,869
each of the<font color="#CCCCCC"> crammed FS regions</font><font color="#E5E5E5"> so they</font>

900
00:39:41,390 --> 00:39:46,549
didn't encrypt the entire image<font color="#E5E5E5"> just the</font>

901
00:39:44,869 --> 00:39:49,099
header of those<font color="#CCCCCC"> crammed FS regions and</font>

902
00:39:46,550 --> 00:39:51,020
it's only in<font color="#CCCCCC"> the update image</font><font color="#E5E5E5"> if you</font>

903
00:39:49,099 --> 00:39:53,630
<font color="#CCCCCC">actually flash this to the via</font><font color="#E5E5E5"> to a real</font>

904
00:39:51,020 --> 00:39:55,670
system<font color="#E5E5E5"> do an update to this it on</font>

905
00:39:53,630 --> 00:39:57,380
<font color="#E5E5E5">encrypts it writes it</font><font color="#CCCCCC"> to the spy in a</font>

906
00:39:55,670 --> 00:40:00,320
real system<font color="#CCCCCC"> and then it's not</font><font color="#E5E5E5"> completely</font>

907
00:39:57,380 --> 00:40:03,109
unencrypted<font color="#E5E5E5"> and it's super easy to</font>

908
00:40:00,320 --> 00:40:05,750
<font color="#CCCCCC">extract the encryption trees</font><font color="#E5E5E5"> using a</font>

909
00:40:03,109 --> 00:40:07,970
physical flash programmer<font color="#E5E5E5"> but also</font>

910
00:40:05,750 --> 00:40:10,640
because the encryption only covers<font color="#E5E5E5"> the</font>

911
00:40:07,970 --> 00:40:12,259
<font color="#E5E5E5">cram FS headers it's pretty trivial to</font>

912
00:40:10,640 --> 00:40:14,089
reconstruct the tram FS header and

913
00:40:12,260 --> 00:40:17,210
extract the file system and<font color="#E5E5E5"> find the</font>

914
00:40:14,090 --> 00:40:19,010
encryption key that<font color="#E5E5E5"> way here's a code</font>

915
00:40:17,210 --> 00:40:22,280
<font color="#CCCCCC">snippet that</font><font color="#E5E5E5"> we found in the</font><font color="#CCCCCC"> the code</font>

916
00:40:19,010 --> 00:40:25,460
<font color="#E5E5E5">that's handling that particular part of</font>

917
00:40:22,280 --> 00:40:27,170
the update<font color="#E5E5E5"> basically it checks</font><font color="#CCCCCC"> it goes</font>

918
00:40:25,460 --> 00:40:28,580
and checks<font color="#E5E5E5"> each of these two</font><font color="#CCCCCC"> addresses</font>

919
00:40:27,170 --> 00:40:31,450
to see if it's already been decrypted

920
00:40:28,580 --> 00:40:34,009
and if it isn't it goes and decrypts<font color="#E5E5E5"> it</font>

921
00:40:31,450 --> 00:40:36,310
<font color="#CCCCCC">so</font><font color="#E5E5E5"> that the region layout is completely</font>

922
00:40:34,010 --> 00:40:39,710
<font color="#E5E5E5">identical to x10 except they have these</font>

923
00:40:36,310 --> 00:40:42,200
slightly encrypted blobs<font color="#E5E5E5"> and it's it's</font>

924
00:40:39,710 --> 00:40:43,760
funny<font color="#CCCCCC"> that I I presume that</font><font color="#E5E5E5"> they tried</font>

925
00:40:42,200 --> 00:40:46,609
to do<font color="#E5E5E5"> this to make</font><font color="#CCCCCC"> it harder to attack</font>

926
00:40:43,760 --> 00:40:47,990
the system<font color="#E5E5E5"> but it's just off you see a</font>

927
00:40:46,609 --> 00:40:50,060
<font color="#E5E5E5">shoe at this point so it's completely</font>

928
00:40:47,990 --> 00:40:53,859
hard-coded encryption key it's<font color="#CCCCCC"> not a</font>

929
00:40:50,060 --> 00:40:53,859
real significant barrier<font color="#CCCCCC"> to any attacker</font>

930
00:40:54,580 --> 00:41:02,810
<font color="#E5E5E5">so we now know how</font><font color="#CCCCCC"> to extract</font><font color="#E5E5E5"> and repack</font>

931
00:41:00,010 --> 00:41:04,700
<font color="#E5E5E5">x8 through x11 generation</font><font color="#CCCCCC"> BMC images</font>

932
00:41:02,810 --> 00:41:07,070
which<font color="#E5E5E5"> is from 2009 to the current</font>

933
00:41:04,700 --> 00:41:09,859
generation<font color="#CCCCCC"> but how does</font><font color="#E5E5E5"> the update</font>

934
00:41:07,070 --> 00:41:11,810
mechanism<font color="#E5E5E5"> work itself</font><font color="#CCCCCC"> so in order</font><font color="#E5E5E5"> to</font>

935
00:41:09,859 --> 00:41:14,598
<font color="#CCCCCC">update the BMC</font><font color="#E5E5E5"> you basically send it I</font>

936
00:41:11,810 --> 00:41:17,180
PMI commands and those can either happen

937
00:41:14,599 --> 00:41:20,390
<font color="#E5E5E5">over the local system interface or over</font>

938
00:41:17,180 --> 00:41:21,470
the<font color="#CCCCCC"> IP mi LAN interface</font><font color="#E5E5E5"> and there's</font>

939
00:41:20,390 --> 00:41:23,930
something<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> interesting about</font><font color="#E5E5E5"> that</font>

940
00:41:21,470 --> 00:41:25,279
<font color="#E5E5E5">because the local system interface</font>

941
00:41:23,930 --> 00:41:27,470
between the host<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the BMC is</font>

942
00:41:25,280 --> 00:41:29,660
completely unauthenticated<font color="#E5E5E5"> so if you're</font>

943
00:41:27,470 --> 00:41:32,029
running code in the system maybe malware

944
00:41:29,660 --> 00:41:33,379
is running on<font color="#E5E5E5"> your server it can send</font>

945
00:41:32,030 --> 00:41:34,520
whatever commands<font color="#E5E5E5"> it wants to the BMC</font>

946
00:41:33,380 --> 00:41:39,020
<font color="#E5E5E5">and can it can do some pretty</font>

947
00:41:34,520 --> 00:41:41,119
<font color="#E5E5E5">interesting things</font><font color="#CCCCCC"> so we discovered also</font>

948
00:41:39,020 --> 00:41:42,119
<font color="#E5E5E5">that like the UEFI firmware updates</font>

949
00:41:41,119 --> 00:41:44,849
they're not doing any

950
00:41:42,119 --> 00:41:47,700
he signed a signature validation of the

951
00:41:44,849 --> 00:41:50,670
BMC<font color="#E5E5E5"> even though the BMC is a highly</font>

952
00:41:47,700 --> 00:41:54,799
privileged management component so we've

953
00:41:50,670 --> 00:41:57,559
got a hopefully quick example of

954
00:41:54,799 --> 00:42:04,970
basically flashing<font color="#E5E5E5"> this with a malicious</font>

955
00:41:57,559 --> 00:42:09,619
<font color="#E5E5E5">BMC image and all so we basically have</font>

956
00:42:04,970 --> 00:42:12,980
<font color="#E5E5E5">netcat listening we've created a a</font>

957
00:42:09,619 --> 00:42:17,069
malicious image that basically<font color="#E5E5E5"> has a</font>

958
00:42:12,980 --> 00:42:20,220
<font color="#E5E5E5">armed version of a mature reverse</font>

959
00:42:17,069 --> 00:42:22,859
<font color="#CCCCCC">Connect back shell in it and we'll run</font>

960
00:42:20,220 --> 00:42:24,990
the legitimate update<font color="#CCCCCC"> tool</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> Super</font>

961
00:42:22,859 --> 00:42:29,519
<font color="#CCCCCC">Micro to flash one of these modified</font>

962
00:42:24,990 --> 00:42:31,950
images to the system<font color="#E5E5E5"> it does have the</font>

963
00:42:29,519 --> 00:42:34,828
<font color="#E5E5E5">functionality to do this remotely over</font>

964
00:42:31,950 --> 00:42:36,868
<font color="#E5E5E5">the network and one thing that's pretty</font>

965
00:42:34,829 --> 00:42:40,049
<font color="#E5E5E5">interesting about the mi I P my spec is</font>

966
00:42:36,869 --> 00:42:42,269
that there is support<font color="#CCCCCC"> for IP my</font><font color="#E5E5E5"> group</font>

967
00:42:40,049 --> 00:42:44,670
managed systems<font color="#CCCCCC"> where</font><font color="#E5E5E5"> you can have a</font>

968
00:42:42,269 --> 00:42:47,848
large number<font color="#CCCCCC"> of servers</font><font color="#E5E5E5"> that all use the</font>

969
00:42:44,670 --> 00:42:50,130
same<font color="#CCCCCC"> credentials and that can be really</font>

970
00:42:47,849 --> 00:42:53,099
<font color="#CCCCCC">useful for</font><font color="#E5E5E5"> an attacker because if you if</font>

971
00:42:50,130 --> 00:42:56,670
you<font color="#E5E5E5"> own one system you could</font><font color="#CCCCCC"> potentially</font>

972
00:42:53,099 --> 00:42:58,769
steal that password<font color="#E5E5E5"> and use it to own</font>

973
00:42:56,670 --> 00:43:05,640
all the other servers in that<font color="#E5E5E5"> IP my</font>

974
00:42:58,769 --> 00:43:09,238
<font color="#CCCCCC">manage</font><font color="#E5E5E5"> group and this this process</font><font color="#CCCCCC"> over</font>

975
00:43:05,640 --> 00:43:11,220
the of the<font color="#CCCCCC"> ipmi link is pretty slow</font>

976
00:43:09,239 --> 00:43:17,369
because it basically<font color="#CCCCCC"> sends an individual</font>

977
00:43:11,220 --> 00:43:19,788
<font color="#E5E5E5">IP mi message for every I think</font><font color="#CCCCCC"> 52 bytes</font>

978
00:43:17,369 --> 00:43:23,249
of<font color="#E5E5E5"> the image and this is a 32 Meg</font>

979
00:43:19,789 --> 00:43:27,720
<font color="#CCCCCC">firmware image so it takes a while</font><font color="#E5E5E5"> so</font>

980
00:43:23,249 --> 00:43:34,140
we'll skip<font color="#E5E5E5"> ahead a little</font><font color="#CCCCCC"> is I think</font><font color="#E5E5E5"> the</font>

981
00:43:27,720 --> 00:43:37,019
full process<font color="#E5E5E5"> is about 15 minutes and</font>

982
00:43:34,140 --> 00:43:39,299
it's basically it's<font color="#E5E5E5"> basically just</font>

983
00:43:37,019 --> 00:43:40,738
<font color="#E5E5E5">passing it's like sending</font><font color="#CCCCCC"> ipmi messages</font>

984
00:43:39,299 --> 00:43:43,559
to send<font color="#E5E5E5"> each of these different</font><font color="#CCCCCC"> regions</font>

985
00:43:40,739 --> 00:43:46,589
<font color="#E5E5E5">across the the local system interface to</font>

986
00:43:43,559 --> 00:43:49,849
the BMC<font color="#E5E5E5"> where the BMC is receiving it</font>

987
00:43:46,589 --> 00:43:49,849
and and

988
00:43:50,119 --> 00:44:01,730
see so<font color="#CCCCCC"> at this point we've transferred</font>

989
00:43:58,940 --> 00:44:03,529
<font color="#E5E5E5">the complete image to the BMC the BMC is</font>

990
00:44:01,730 --> 00:44:09,559
validating it parsing it seeing if it

991
00:44:03,529 --> 00:44:13,180
looks<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and and then after</font><font color="#CCCCCC"> that it</font>

992
00:44:09,559 --> 00:44:13,180
goes ahead and<font color="#E5E5E5"> writes it to the flash</font>

993
00:44:24,590 --> 00:44:33,430
yeah so<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is kind</font><font color="#CCCCCC"> of a</font><font color="#E5E5E5"> slow process</font>

994
00:44:28,100 --> 00:44:33,430
<font color="#E5E5E5">also but we can skip ahead a little ways</font>

995
00:44:37,240 --> 00:44:43,839
so once it's<font color="#E5E5E5"> done</font><font color="#CCCCCC"> its rebooting so just</font>

996
00:44:40,480 --> 00:44:46,360
the BMC reboots the the server<font color="#CCCCCC"> stays up</font>

997
00:44:43,840 --> 00:44:48,190
<font color="#E5E5E5">and running if you have some application</font>

998
00:44:46,360 --> 00:44:50,500
running on<font color="#E5E5E5"> the system</font><font color="#CCCCCC"> and somebody runs</font>

999
00:44:48,190 --> 00:44:51,940
this while you're not looking<font color="#CCCCCC"> there</font>

1000
00:44:50,500 --> 00:44:54,580
there's no indication there's no

1001
00:44:51,940 --> 00:44:59,070
<font color="#E5E5E5">interruption of</font><font color="#CCCCCC"> the server</font><font color="#E5E5E5"> and it just</font>

1002
00:44:54,580 --> 00:44:59,069
it<font color="#E5E5E5"> keeps running</font><font color="#CCCCCC"> only the BMC reboots</font>

1003
00:45:14,339 --> 00:45:22,319
so we got our<font color="#E5E5E5"> connect back from the BMC</font>

1004
00:45:16,890 --> 00:45:24,209
<font color="#E5E5E5">and we can start taking</font><font color="#CCCCCC"> a look</font><font color="#E5E5E5"> around in</font>

1005
00:45:22,319 --> 00:45:27,569
the<font color="#E5E5E5"> system this is basically just a</font>

1006
00:45:24,209 --> 00:45:31,348
reverse<font color="#CCCCCC"> shell so it's a it's an ARM</font>

1007
00:45:27,569 --> 00:45:36,449
processor<font color="#E5E5E5"> we can we can take a look at</font>

1008
00:45:31,349 --> 00:45:39,630
the<font color="#CCCCCC"> cpu info</font><font color="#E5E5E5"> field or a</font><font color="#CCCCCC"> cpu info file it</font>

1009
00:45:36,449 --> 00:45:41,819
is the a speed<font color="#E5E5E5"> BMC so we do have</font>

1010
00:45:39,630 --> 00:45:48,299
successfully code<font color="#E5E5E5"> basically put</font><font color="#CCCCCC"> whatever</font>

1011
00:45:41,819 --> 00:45:50,249
<font color="#E5E5E5">we want in the BMC we can we can have</font>

1012
00:45:48,299 --> 00:46:01,969
this connect back to<font color="#E5E5E5"> the to a command</font>

1013
00:45:50,249 --> 00:46:06,269
control<font color="#E5E5E5"> and and run whatever we want so</font>

1014
00:46:01,969 --> 00:46:07,920
so all servers<font color="#CCCCCC"> from 2009 to extend the</font>

1015
00:46:06,269 --> 00:46:10,140
current generation are vulnerable<font color="#CCCCCC"> to</font>

1016
00:46:07,920 --> 00:46:11,910
this like Alex<font color="#E5E5E5"> said they still</font>

1017
00:46:10,140 --> 00:46:14,848
<font color="#CCCCCC">approximately a million servers</font><font color="#E5E5E5"> every</font>

1018
00:46:11,910 --> 00:46:18,629
year millions of servers<font color="#E5E5E5"> are vulnerable</font>

1019
00:46:14,849 --> 00:46:23,160
<font color="#E5E5E5">in the field so if we take another</font><font color="#CCCCCC"> look</font>

1020
00:46:18,630 --> 00:46:24,869
at a architecture diagram<font color="#E5E5E5"> before so now</font>

1021
00:46:23,160 --> 00:46:27,149
we know how we<font color="#E5E5E5"> can we know a number of</font>

1022
00:46:24,869 --> 00:46:30,269
ways<font color="#CCCCCC"> that we can brick the UEFI BIOS</font>

1023
00:46:27,150 --> 00:46:32,910
boot via<font color="#E5E5E5"> software but usually the BMC is</font>

1024
00:46:30,269 --> 00:46:34,649
used to recover<font color="#E5E5E5"> from this state</font><font color="#CCCCCC"> and but</font>

1025
00:46:32,910 --> 00:46:38,729
now we also<font color="#E5E5E5"> know how to</font><font color="#CCCCCC"> break the BMC</font>

1026
00:46:34,650 --> 00:46:42,029
via software so just in<font color="#E5E5E5"> this environment</font>

1027
00:46:38,729 --> 00:46:44,038
<font color="#CCCCCC">we can create it's a create we can</font>

1028
00:46:42,029 --> 00:46:45,660
create<font color="#E5E5E5"> a situation where the server</font>

1029
00:46:44,039 --> 00:46:47,910
won't<font color="#E5E5E5"> boot up again unless you have</font>

1030
00:46:45,660 --> 00:46:50,189
<font color="#E5E5E5">basically you need to go</font><font color="#CCCCCC"> take physical</font>

1031
00:46:47,910 --> 00:46:54,479
access and attach a flash programmer to

1032
00:46:50,189 --> 00:46:56,670
every BMC in order to recover<font color="#E5E5E5"> the system</font>

1033
00:46:54,479 --> 00:46:59,058
<font color="#CCCCCC">and that</font><font color="#E5E5E5"> could be hundreds of thousands</font>

1034
00:46:56,670 --> 00:47:01,170
of systems<font color="#CCCCCC"> in large data center and</font>

1035
00:46:59,059 --> 00:47:04,589
that's<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> take some time</font><font color="#CCCCCC"> and some</font>

1036
00:47:01,170 --> 00:47:07,859
money but there's also<font color="#E5E5E5"> another</font>

1037
00:47:04,589 --> 00:47:10,739
interesting<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that you you get if</font>

1038
00:47:07,859 --> 00:47:12,390
you own the BMC like this is<font color="#E5E5E5"> that maybe</font>

1039
00:47:10,739 --> 00:47:14,009
<font color="#CCCCCC">you have a couple</font><font color="#E5E5E5"> different servers one</font>

1040
00:47:12,390 --> 00:47:15,479
is connected the<font color="#CCCCCC"> internet one is only</font>

1041
00:47:14,009 --> 00:47:17,459
<font color="#E5E5E5">connected</font><font color="#CCCCCC"> to the private cloud to a</font>

1042
00:47:15,479 --> 00:47:19,140
private cloud there<font color="#E5E5E5"> isn't a direct</font>

1043
00:47:17,459 --> 00:47:21,328
connection<font color="#CCCCCC"> from the internet</font><font color="#E5E5E5"> into your</font>

1044
00:47:19,140 --> 00:47:25,319
<font color="#E5E5E5">cloud there isn't a direct connection</font>

1045
00:47:21,329 --> 00:47:26,930
between<font color="#E5E5E5"> these two servers so even if the</font>

1046
00:47:25,319 --> 00:47:29,569
but if the server<font color="#E5E5E5"> is</font>

1047
00:47:26,930 --> 00:47:32,720
and because this local<font color="#CCCCCC"> IPMI system</font>

1048
00:47:29,569 --> 00:47:35,839
interface is unauthenticated<font color="#CCCCCC"> you can</font>

1049
00:47:32,720 --> 00:47:38,689
<font color="#E5E5E5">pretty directly connect to the</font><font color="#CCCCCC"> BMC</font><font color="#E5E5E5"> you</font>

1050
00:47:35,839 --> 00:47:40,549
run<font color="#E5E5E5"> whatever you want in a BMC and the</font>

1051
00:47:38,690 --> 00:47:41,960
the BMC is often shared between that

1052
00:47:40,549 --> 00:47:46,579
management<font color="#E5E5E5"> interface is often shared</font>

1053
00:47:41,960 --> 00:47:50,869
<font color="#E5E5E5">between different servers</font><font color="#CCCCCC"> so you can use</font>

1054
00:47:46,579 --> 00:47:52,309
that to basically laterally move within

1055
00:47:50,869 --> 00:47:57,049
<font color="#E5E5E5">the</font><font color="#CCCCCC"> environment especially if you're</font>

1056
00:47:52,309 --> 00:47:59,059
using IP my group<font color="#E5E5E5"> managed systems so so</font>

1057
00:47:57,049 --> 00:48:01,069
we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> nessam ways</font><font color="#E5E5E5"> to detect some of</font>

1058
00:47:59,059 --> 00:48:03,289
these<font color="#CCCCCC"> chip suckers like I mentioned</font><font color="#E5E5E5"> it's</font>

1059
00:48:01,069 --> 00:48:05,808
a really great<font color="#CCCCCC"> tool for exploring</font><font color="#E5E5E5"> your</font>

1060
00:48:03,289 --> 00:48:08,240
system and<font color="#E5E5E5"> we do have the this whitelist</font>

1061
00:48:05,809 --> 00:48:11,059
capability so you<font color="#E5E5E5"> can basically generate</font>

1062
00:48:08,240 --> 00:48:13,430
<font color="#E5E5E5">a whitelist run that against the the</font>

1063
00:48:11,059 --> 00:48:17,180
server periodically<font color="#E5E5E5"> see if anything has</font>

1064
00:48:13,430 --> 00:48:19,250
changed<font color="#CCCCCC"> the spy descriptor there's also</font>

1065
00:48:17,180 --> 00:48:21,348
module<font color="#CCCCCC"> in</font><font color="#E5E5E5"> ship sect</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> will go and</font>

1066
00:48:19,250 --> 00:48:23,150
read your<font color="#E5E5E5"> spy descriptor it'll look for</font>

1067
00:48:21,349 --> 00:48:26,210
access permissions it'll warn you if

1068
00:48:23,150 --> 00:48:28,910
it's a writable<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this particular</font>

1069
00:48:26,210 --> 00:48:33,160
example when we did this<font color="#E5E5E5"> research there</font>

1070
00:48:28,910 --> 00:48:36,799
was almost a thousand vulnerable models

1071
00:48:33,160 --> 00:48:39,410
that we identified<font color="#CCCCCC"> vendors have started</font>

1072
00:48:36,799 --> 00:48:40,730
fixing the spy descriptors but it's

1073
00:48:39,410 --> 00:48:44,420
going<font color="#E5E5E5"> to take</font><font color="#CCCCCC"> a while for</font><font color="#E5E5E5"> all those to</font>

1074
00:48:40,730 --> 00:48:47,210
be fixed<font color="#E5E5E5"> so for checking the integrity</font>

1075
00:48:44,420 --> 00:48:48,260
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be of the BMC super micro is update</font>

1076
00:48:47,210 --> 00:48:50,270
tool<font color="#CCCCCC"> actually does have the</font>

1077
00:48:48,260 --> 00:48:53,839
<font color="#CCCCCC">functionality to</font><font color="#E5E5E5"> dump the existing</font>

1078
00:48:50,270 --> 00:48:56,960
firmware<font color="#CCCCCC"> so you can use that take a look</font>

1079
00:48:53,839 --> 00:48:57,920
<font color="#E5E5E5">at it and see</font><font color="#CCCCCC"> if it's the version that</font>

1080
00:48:56,960 --> 00:49:03,140
<font color="#CCCCCC">you're expect see if there's something</font>

1081
00:48:57,920 --> 00:49:07,279
<font color="#E5E5E5">that you don't</font><font color="#CCCCCC"> expect there so we</font>

1082
00:49:03,140 --> 00:49:09,400
reported the these UEFI and<font color="#CCCCCC"> bios issues</font>

1083
00:49:07,279 --> 00:49:13,089
back<font color="#CCCCCC"> in January it's a Super Micro and</font>

1084
00:49:09,400 --> 00:49:15,319
reported the BMC issues in March and

1085
00:49:13,089 --> 00:49:17,420
we've got a little<font color="#E5E5E5"> bit of additional</font>

1086
00:49:15,319 --> 00:49:20,119
<font color="#CCCCCC">information</font><font color="#E5E5E5"> about the timeline and</font><font color="#CCCCCC"> what</font>

1087
00:49:17,420 --> 00:49:23,599
we did at<font color="#CCCCCC"> these two links Egan's you</font>

1088
00:49:20,119 --> 00:49:27,289
guys can<font color="#E5E5E5"> check out later</font><font color="#CCCCCC"> so Super Micro</font>

1089
00:49:23,599 --> 00:49:31,849
<font color="#E5E5E5">basically they only fix this for the X 9</font>

1090
00:49:27,289 --> 00:49:35,630
and X 10 generation and they they're

1091
00:49:31,849 --> 00:49:38,150
making it optional to to update<font color="#CCCCCC"> the</font>

1092
00:49:35,630 --> 00:49:39,859
systems for existing<font color="#CCCCCC"> systems so you you</font>

1093
00:49:38,150 --> 00:49:41,599
basically<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to go ask them</font>

1094
00:49:39,859 --> 00:49:45,799
<font color="#CCCCCC">to to</font><font color="#E5E5E5"> get the update for these systems</font>

1095
00:49:41,599 --> 00:49:51,460
<font color="#E5E5E5">which is maybe</font><font color="#CCCCCC"> not the the</font><font color="#E5E5E5"> best for</font>

1096
00:49:45,799 --> 00:49:54,140
security<font color="#CCCCCC"> but one thing that</font><font color="#E5E5E5"> really was</font>

1097
00:49:51,460 --> 00:49:55,880
interesting about this<font color="#E5E5E5"> like at</font><font color="#CCCCCC"> least the</font>

1098
00:49:54,140 --> 00:49:59,299
<font color="#E5E5E5">last day a day or two was that like the</font>

1099
00:49:55,880 --> 00:50:01,420
apt<font color="#E5E5E5"> 28 did confirm that these UEFI</font>

1100
00:49:59,299 --> 00:50:04,220
implants do<font color="#E5E5E5"> really exist in the wild</font>

1101
00:50:01,420 --> 00:50:06,890
<font color="#E5E5E5">we've already seen examples of bricking</font>

1102
00:50:04,220 --> 00:50:10,578
systems used in like for real

1103
00:50:06,890 --> 00:50:14,828
at attack campaigns but<font color="#E5E5E5"> server firmware</font>

1104
00:50:10,579 --> 00:50:17,450
continues to be a just<font color="#E5E5E5"> a big problem and</font>

1105
00:50:14,829 --> 00:50:22,849
there have been so many fixes<font color="#CCCCCC"> of</font>

1106
00:50:17,450 --> 00:50:24,828
mitigations and<font color="#CCCCCC"> base basic hardening of</font>

1107
00:50:22,849 --> 00:50:27,019
operating system applications that

1108
00:50:24,829 --> 00:50:29,839
firmware security is lagging<font color="#E5E5E5"> way behind</font>

1109
00:50:27,019 --> 00:50:32,299
and you you can still have<font color="#E5E5E5"> some pretty</font>

1110
00:50:29,839 --> 00:50:34,460
serious damage<font color="#E5E5E5"> that comes out of</font>

1111
00:50:32,299 --> 00:50:37,350
bricking or implanting systems like this

1112
00:50:34,460 --> 00:50:40,480
and that's<font color="#E5E5E5"> it</font>

1113
00:50:37,350 --> 00:50:40,480
[Applause]

