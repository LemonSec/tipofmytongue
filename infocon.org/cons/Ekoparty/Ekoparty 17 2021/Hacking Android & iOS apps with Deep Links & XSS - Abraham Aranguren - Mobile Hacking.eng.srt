1
00:00:00,320 --> 00:00:02,240
so thank you very much for coming if you

2
00:00:02,240 --> 00:00:04,240
have any questions just type them in the

3
00:00:04,240 --> 00:00:06,960
chat as we go and i will take a look

4
00:00:06,960 --> 00:00:07,919
soon

5
00:00:07,919 --> 00:00:10,400
so this is a session for hacking android

6
00:00:10,400 --> 00:00:12,639
and ios applications

7
00:00:12,639 --> 00:00:15,120
using deep links and xss it's a free

8
00:00:15,120 --> 00:00:18,880
workshop and also they're recording the

9
00:00:18,880 --> 00:00:20,560
slides and all the vulnerable

10
00:00:20,560 --> 00:00:22,080
applications that i'm going to demo

11
00:00:22,080 --> 00:00:24,400
today this is all available for free on

12
00:00:24,400 --> 00:00:26,160
the training portal

13
00:00:26,160 --> 00:00:27,279
so

14
00:00:27,279 --> 00:00:30,160
um we will do a quick introduction about

15
00:00:30,160 --> 00:00:31,920
what the course is about because we have

16
00:00:31,920 --> 00:00:32,719
a

17
00:00:32,719 --> 00:00:35,920
live online session uh next week

18
00:00:35,920 --> 00:00:38,239
uh so i'll give you a bit of details

19
00:00:38,239 --> 00:00:40,480
about that and then we will talk about

20
00:00:40,480 --> 00:00:43,440
uh deep links attacks achieving user

21
00:00:43,440 --> 00:00:44,879
impersonation

22
00:00:44,879 --> 00:00:47,200
and bypassing authorization controls and

23
00:00:47,200 --> 00:00:49,680
the blink attacks to make phone calls

24
00:00:49,680 --> 00:00:50,800
right so

25
00:00:50,800 --> 00:00:54,079
a couple of very interesting um

26
00:00:54,079 --> 00:00:55,360
scenarios

27
00:00:55,360 --> 00:00:58,640
then we will also see xss attacks and

28
00:00:58,640 --> 00:01:01,440
data exfiltration on both android and

29
00:01:01,440 --> 00:01:03,440
ios if you have a question just type it

30
00:01:03,440 --> 00:01:05,360
on the chat i'll get back to you

31
00:01:05,360 --> 00:01:07,360
in a moment

32
00:01:07,360 --> 00:01:08,479
so

33
00:01:08,479 --> 00:01:11,520
i'm abraham gurin i'm the

34
00:01:11,520 --> 00:01:13,600
ceo of sony security so if you like this

35
00:01:13,600 --> 00:01:15,840
presentation there's some public fantasy

36
00:01:15,840 --> 00:01:18,000
reports and other stuff on the website

37
00:01:18,000 --> 00:01:19,759
uh all available for free we have

38
00:01:19,759 --> 00:01:21,520
delivered training at blackhead usa

39
00:01:21,520 --> 00:01:24,240
hacking the box oas global apps nulcon

40
00:01:24,240 --> 00:01:26,880
and many other well-known conferences

41
00:01:26,880 --> 00:01:27,680
so

42
00:01:27,680 --> 00:01:29,200
if you want to know where we will be

43
00:01:29,200 --> 00:01:30,880
teaching next you can check our training

44
00:01:30,880 --> 00:01:33,200
page there on the website and for

45
00:01:33,200 --> 00:01:35,360
reference i don't make any money out of

46
00:01:35,360 --> 00:01:37,280
this course anymore

47
00:01:37,280 --> 00:01:39,280
but i also wrote a course for e-learner

48
00:01:39,280 --> 00:01:42,240
security called practical web defense

49
00:01:42,240 --> 00:01:44,399
which was about hacking web applications

50
00:01:44,399 --> 00:01:46,799
and then fixing the bugs so that the

51
00:01:46,799 --> 00:01:48,560
issue was no longer exploitable right so

52
00:01:48,560 --> 00:01:49,759
it was a nice

53
00:01:49,759 --> 00:01:51,759
attack and defense kind of course

54
00:01:51,759 --> 00:01:55,360
i'm also one of the project leaders for

55
00:01:55,360 --> 00:01:58,799
osp wtf so if you type wtf.org

56
00:01:58,799 --> 00:02:00,399
in your browser that will take you to

57
00:02:00,399 --> 00:02:01,920
the os page

58
00:02:01,920 --> 00:02:04,159
this this is a link to some

59
00:02:04,159 --> 00:02:06,479
presentations that i have delivered

60
00:02:06,479 --> 00:02:07,280
and

61
00:02:07,280 --> 00:02:09,038
if after all the pandemic we meet

62
00:02:09,038 --> 00:02:11,200
someday i can explain to you how all

63
00:02:11,200 --> 00:02:13,280
these certification stuff happened which

64
00:02:13,280 --> 00:02:15,599
is a bit funny

65
00:02:15,599 --> 00:02:17,840
so on the website you will see a lot of

66
00:02:17,840 --> 00:02:19,840
things report

67
00:02:19,840 --> 00:02:21,760
some that got a bit of media attention

68
00:02:21,760 --> 00:02:24,080
are the following right so um the first

69
00:02:24,080 --> 00:02:25,599
two reports here

70
00:02:25,599 --> 00:02:28,319
are about smart sheriff so um this was

71
00:02:28,319 --> 00:02:29,920
so broken that we even gave a

72
00:02:29,920 --> 00:02:32,879
presentation about it so it was a

73
00:02:32,879 --> 00:02:34,640
mobile application mandated in the

74
00:02:34,640 --> 00:02:36,480
entire country of south korea this is

75
00:02:36,480 --> 00:02:38,319
the good korean not the communist one

76
00:02:38,319 --> 00:02:40,160
but the you know the supposedly good

77
00:02:40,160 --> 00:02:41,519
korea

78
00:02:41,519 --> 00:02:43,040
and in this country

79
00:02:43,040 --> 00:02:45,920
the government somehow decided that

80
00:02:45,920 --> 00:02:48,319
parents and all parents and all children

81
00:02:48,319 --> 00:02:50,560
should have by law

82
00:02:50,560 --> 00:02:52,560
to install an application

83
00:02:52,560 --> 00:02:55,040
where the parent would control the child

84
00:02:55,040 --> 00:02:56,959
uh you know what applications they can

85
00:02:56,959 --> 00:02:59,040
have installed during what times of the

86
00:02:59,040 --> 00:03:01,680
day the phone can be used and all that

87
00:03:01,680 --> 00:03:03,440
kind of stuff right

88
00:03:03,440 --> 00:03:05,200
so um

89
00:03:05,200 --> 00:03:08,000
in you know a typical uh political idea

90
00:03:08,000 --> 00:03:09,920
to uh to if you want to get something

91
00:03:09,920 --> 00:03:11,519
approved in politics you you have to

92
00:03:11,519 --> 00:03:13,440
save the children so

93
00:03:13,440 --> 00:03:14,959
this was uh

94
00:03:14,959 --> 00:03:16,800
you know the story with this

95
00:03:16,800 --> 00:03:18,400
um and then

96
00:03:18,400 --> 00:03:19,840
on the panthers reports you can see the

97
00:03:19,840 --> 00:03:21,280
first time that we tested them and then

98
00:03:21,280 --> 00:03:22,640
the second

99
00:03:22,640 --> 00:03:25,760
and in this presentation you can search

100
00:03:25,760 --> 00:03:28,159
smart sheriff in youtube and you will

101
00:03:28,159 --> 00:03:30,959
see a few talks that we delivered

102
00:03:30,959 --> 00:03:32,720
it was really really broken it's

103
00:03:32,720 --> 00:03:36,080
catastrophic and uh and yeah so this is

104
00:03:36,080 --> 00:03:38,400
more about mobile security and then the

105
00:03:38,400 --> 00:03:40,239
chinese government and surveillance and

106
00:03:40,239 --> 00:03:41,400
all these kind of apps

107
00:03:41,400 --> 00:03:42,720
[Music]

108
00:03:42,720 --> 00:03:44,560
these are more kind of privacy rates

109
00:03:44,560 --> 00:03:46,400
right so the context here is this a

110
00:03:46,400 --> 00:03:49,280
muslim minority in xinjiang

111
00:03:49,280 --> 00:03:51,040
and then there were some concerns from

112
00:03:51,040 --> 00:03:54,239
human rights activists about whether

113
00:03:54,239 --> 00:03:55,760
the applications were collecting too

114
00:03:55,760 --> 00:03:57,840
much data about citizens or whether that

115
00:03:57,840 --> 00:04:00,560
would be a human right violation or not

116
00:04:00,560 --> 00:04:01,360
so

117
00:04:01,360 --> 00:04:02,799
we just did the technical stuff just

118
00:04:02,799 --> 00:04:05,280
looking for vulnerabilities

119
00:04:05,280 --> 00:04:07,760
uh i'm trying to answer the questions

120
00:04:07,760 --> 00:04:09,519
from the human rights activists about

121
00:04:09,519 --> 00:04:11,760
what finding evidence about what kind of

122
00:04:11,760 --> 00:04:13,840
information was being collected so these

123
00:04:13,840 --> 00:04:16,000
reports are more privacy related and if

124
00:04:16,000 --> 00:04:18,399
you search on youtube chinese police and

125
00:04:18,399 --> 00:04:21,680
cloud pets i also delivered a talk uh

126
00:04:21,680 --> 00:04:23,360
about this if you want to learn more

127
00:04:23,360 --> 00:04:25,919
about it and if you join us for the live

128
00:04:25,919 --> 00:04:28,639
training this week uh all the

129
00:04:28,639 --> 00:04:30,400
all these applications are also

130
00:04:30,400 --> 00:04:32,960
available inside of your mobile course

131
00:04:32,960 --> 00:04:35,280
for your entertainment so

132
00:04:35,280 --> 00:04:37,520
so yeah you get to play with all these

133
00:04:37,520 --> 00:04:39,919
applications as part of the full course

134
00:04:39,919 --> 00:04:40,960
right

135
00:04:40,960 --> 00:04:43,520
there's a lot of other uh industries all

136
00:04:43,520 --> 00:04:45,280
dependence reports are available for

137
00:04:45,280 --> 00:04:47,199
free you can download them and it's a

138
00:04:47,199 --> 00:04:50,479
great way for you to to learn about

139
00:04:50,479 --> 00:04:53,040
mobile security right so reading pentas

140
00:04:53,040 --> 00:04:54,720
reports what other applications did

141
00:04:54,720 --> 00:04:57,040
wrong how the exploit worked and all

142
00:04:57,040 --> 00:05:00,240
this kind of stuff can be really useful

143
00:05:00,240 --> 00:05:02,680
so uh yeah in this course there's also

144
00:05:02,680 --> 00:05:06,000
anirudhanan so he's a member of the

145
00:05:06,000 --> 00:05:08,800
team bios team in india so

146
00:05:08,800 --> 00:05:11,759
the number one ranked uh ctf team has

147
00:05:11,759 --> 00:05:13,600
some certification this is his blog and

148
00:05:13,600 --> 00:05:14,880
his twitter

149
00:05:14,880 --> 00:05:17,840
uh also um there's a couple more people

150
00:05:17,840 --> 00:05:21,199
involved in this course like juan and

151
00:05:21,199 --> 00:05:23,199
but um we have to

152
00:05:23,199 --> 00:05:25,039
use the slides for that

153
00:05:25,039 --> 00:05:28,240
and and yeah if you take the course we

154
00:05:28,240 --> 00:05:30,720
recommend that you have the following

155
00:05:30,720 --> 00:05:33,759
so um ability to connect to wired

156
00:05:33,759 --> 00:05:35,759
wireless and wired networks so typical

157
00:05:35,759 --> 00:05:36,560
stuff

158
00:05:36,560 --> 00:05:38,400
we look to read pdf files now

159
00:05:38,400 --> 00:05:40,160
administrative rights this is more about

160
00:05:40,160 --> 00:05:41,680
importing vms and things like this

161
00:05:41,680 --> 00:05:43,280
sometimes people come with a corporate

162
00:05:43,280 --> 00:05:45,680
laptop so they cannot do certain things

163
00:05:45,680 --> 00:05:48,160
and this is a problem during the class

164
00:05:48,160 --> 00:05:50,000
so try to have a laptop where you have

165
00:05:50,000 --> 00:05:51,840
more access if you have 8 gigabytes of

166
00:05:51,840 --> 00:05:53,840
ram that should be plenty if you have 16

167
00:05:53,840 --> 00:05:55,440
or more that's even better but with 80

168
00:05:55,440 --> 00:05:56,800
you should be good

169
00:05:56,800 --> 00:05:59,440
and 60 gigabytes or so 3d space would be

170
00:05:59,440 --> 00:06:00,240
good

171
00:06:00,240 --> 00:06:02,240
for the android part it's good if you

172
00:06:02,240 --> 00:06:04,960
have a virtual box installed because we

173
00:06:04,960 --> 00:06:07,520
will be using genymotion

174
00:06:07,520 --> 00:06:10,240
as i will be using for the demo today

175
00:06:10,240 --> 00:06:12,720
angie motion uses virtualbox under the

176
00:06:12,720 --> 00:06:13,840
hood so

177
00:06:13,840 --> 00:06:15,919
having virtualbox and the virtualbox

178
00:06:15,919 --> 00:06:18,880
extension pack this would be helpful

179
00:06:18,880 --> 00:06:20,560
and then um

180
00:06:20,560 --> 00:06:22,720
yeah having burps up or fiddler some

181
00:06:22,720 --> 00:06:24,639
tool to do someone in the middle that

182
00:06:24,639 --> 00:06:27,199
would also be helpful

183
00:06:27,199 --> 00:06:30,880
uh now in our courses um

184
00:06:30,880 --> 00:06:32,400
the first four things are kind of the

185
00:06:32,400 --> 00:06:33,840
standard right digital copies of

186
00:06:33,840 --> 00:06:35,759
alternating material lab vms test apps

187
00:06:35,759 --> 00:06:37,039
and source codes for the test staff so

188
00:06:37,039 --> 00:06:39,120
this is kind of normal and what we do a

189
00:06:39,120 --> 00:06:41,840
little bit different is is this right so

190
00:06:41,840 --> 00:06:44,080
lifetime access to training portal

191
00:06:44,080 --> 00:06:45,840
so i don't like when

192
00:06:45,840 --> 00:06:47,759
you buy a course if you if i buy a

193
00:06:47,759 --> 00:06:49,759
course i want to have it forever

194
00:06:49,759 --> 00:06:52,240
including all future updates for free so

195
00:06:52,240 --> 00:06:54,479
that's what we need in 70 securities so

196
00:06:54,479 --> 00:06:56,400
all our courses including this workshop

197
00:06:56,400 --> 00:06:58,080
that you got for free

198
00:06:58,080 --> 00:07:00,319
you have later lifetime access to it so

199
00:07:00,319 --> 00:07:02,319
if we update the workshop if we add more

200
00:07:02,319 --> 00:07:04,880
demos if we add more apps you will also

201
00:07:04,880 --> 00:07:07,199
get these for free uh you also get

202
00:07:07,199 --> 00:07:09,440
step-by-step video recordings slides and

203
00:07:09,440 --> 00:07:11,840
lab pdfs and unlimited email support

204
00:07:11,840 --> 00:07:13,759
right so

205
00:07:13,759 --> 00:07:16,800
uh just to mention that and then i'm

206
00:07:16,800 --> 00:07:19,440
just going to re very briefly talk about

207
00:07:19,440 --> 00:07:21,440
what we cover in the full course and

208
00:07:21,440 --> 00:07:23,360
then while i do that i will tell you

209
00:07:23,360 --> 00:07:24,720
what we are going to talk about today

210
00:07:24,720 --> 00:07:25,840
right so

211
00:07:25,840 --> 00:07:27,599
the first part is hacking android and

212
00:07:27,599 --> 00:07:30,000
iot apps by example so we start with

213
00:07:30,000 --> 00:07:32,400
understanding android with thermox

214
00:07:32,400 --> 00:07:34,000
firmware is really cool tool because it

215
00:07:34,000 --> 00:07:36,479
gives you a shell so we can try to read

216
00:07:36,479 --> 00:07:38,000
all the files from other apps and see

217
00:07:38,000 --> 00:07:40,400
what happens so it's an easy way for you

218
00:07:40,400 --> 00:07:42,880
to understand how

219
00:07:42,880 --> 00:07:45,440
the android security system works so we

220
00:07:45,440 --> 00:07:48,319
cover a bunch of things about there

221
00:07:48,319 --> 00:07:51,440
and in lab two we talked more about uh

222
00:07:51,440 --> 00:07:53,919
reversing and uh source code analysis

223
00:07:53,919 --> 00:07:56,160
i'm going to move my face a little bit

224
00:07:56,160 --> 00:07:57,280
down

225
00:07:57,280 --> 00:08:00,639
um so um typical reversing like

226
00:08:00,639 --> 00:08:03,520
compiling apks uh what to look for some

227
00:08:03,520 --> 00:08:06,800
automated tools some manual methods um

228
00:08:06,800 --> 00:08:10,160
very interesting stuff um and also here

229
00:08:10,160 --> 00:08:12,879
we also show you like how to do reviews

230
00:08:12,879 --> 00:08:14,560
what to look for and how to look for

231
00:08:14,560 --> 00:08:17,599
vulnerabilities and then in lab three we

232
00:08:17,599 --> 00:08:19,759
convert drones or another

233
00:08:19,759 --> 00:08:21,599
couple of things right so this is a

234
00:08:21,599 --> 00:08:23,199
really cool lab which is one of the labs

235
00:08:23,199 --> 00:08:24,960
that people like the most

236
00:08:24,960 --> 00:08:26,400
because this is all about attacking

237
00:08:26,400 --> 00:08:27,840
right so here

238
00:08:27,840 --> 00:08:29,759
we attack all the attack surface with

239
00:08:29,759 --> 00:08:31,840
trouser like attack activities content

240
00:08:31,840 --> 00:08:34,719
providers services you name it

241
00:08:34,719 --> 00:08:37,679
and then here we also have a part about

242
00:08:37,679 --> 00:08:40,080
attacking deep links in android so today

243
00:08:40,080 --> 00:08:42,799
we will be doing this demo here um now

244
00:08:42,799 --> 00:08:44,640
this is a shorter version than the one

245
00:08:44,640 --> 00:08:46,959
in the course and i will

246
00:08:46,959 --> 00:08:49,279
rush through it a little bit today

247
00:08:49,279 --> 00:08:51,440
because we we only have

248
00:08:51,440 --> 00:08:53,279
about an hour

249
00:08:53,279 --> 00:08:55,279
but about deep links we have two case

250
00:08:55,279 --> 00:08:57,600
studies right so one with periscope and

251
00:08:57,600 --> 00:09:00,800
another uh with shopify uh nice uh so

252
00:09:00,800 --> 00:09:02,480
with shopify we have a nice fingerprint

253
00:09:02,480 --> 00:09:03,440
by pass

254
00:09:03,440 --> 00:09:05,600
and with periscope there's um

255
00:09:05,600 --> 00:09:08,000
a crosshaircus forgery using a deep link

256
00:09:08,000 --> 00:09:10,080
which is also cool and this one i will

257
00:09:10,080 --> 00:09:11,440
show today

258
00:09:11,440 --> 00:09:12,480
and then

259
00:09:12,480 --> 00:09:15,440
we also have nice attacks about webviews

260
00:09:15,440 --> 00:09:18,800
so how to get xss on a webview and then

261
00:09:18,800 --> 00:09:20,640
what can you do with these

262
00:09:20,640 --> 00:09:22,800
exercises right so in some scenarios you

263
00:09:22,800 --> 00:09:25,440
can exfiltrate data so we will see a

264
00:09:25,440 --> 00:09:27,200
little bit of this today right so today

265
00:09:27,200 --> 00:09:29,360
a little bit of periscope uh crosstalk

266
00:09:29,360 --> 00:09:31,839
request forgeries uh with deep links uh

267
00:09:31,839 --> 00:09:33,519
and a little bit of excesses and data

268
00:09:33,519 --> 00:09:35,760
exfiltration in android so we will go a

269
00:09:35,760 --> 00:09:37,440
bit off to showcase a little bit of the

270
00:09:37,440 --> 00:09:40,320
course these two parts here

271
00:09:40,320 --> 00:09:41,760
in lab4 we talk about money in the

272
00:09:41,760 --> 00:09:44,399
middle right how to set it up how to

273
00:09:44,399 --> 00:09:47,440
bypass certain things and so on

274
00:09:47,440 --> 00:09:50,320
uh uplift we talk about repackaging so

275
00:09:50,320 --> 00:09:53,200
if you have an application

276
00:09:53,200 --> 00:09:55,519
ways in which you can modify it for

277
00:09:55,519 --> 00:09:57,279
example if you don't have root how can

278
00:09:57,279 --> 00:09:59,200
you modify an apk

279
00:09:59,200 --> 00:10:01,360
to still get some decent level of access

280
00:10:01,360 --> 00:10:03,120
and be able to review

281
00:10:03,120 --> 00:10:05,519
files of the application and so on how

282
00:10:05,519 --> 00:10:07,279
to bypass root detection checks with

283
00:10:07,279 --> 00:10:09,920
repackaging and a lot of cool exercises

284
00:10:09,920 --> 00:10:11,040
like this

285
00:10:11,040 --> 00:10:13,120
then in lab6 we talk about

286
00:10:13,120 --> 00:10:14,800
exposed another method for

287
00:10:14,800 --> 00:10:17,200
instrumentation right so

288
00:10:17,200 --> 00:10:19,200
briefly introduction to exposed and when

289
00:10:19,200 --> 00:10:21,680
we cover some exposed modules to do a

290
00:10:21,680 --> 00:10:24,079
lot of really cool stuff in real time

291
00:10:24,079 --> 00:10:26,720
and modify as well the application in

292
00:10:26,720 --> 00:10:29,200
real time really nice stuff and each day

293
00:10:29,200 --> 00:10:31,680
it finishes with a cpa so everything

294
00:10:31,680 --> 00:10:33,680
i've said until now this will be part of

295
00:10:33,680 --> 00:10:36,560
the live training uh next week

296
00:10:36,560 --> 00:10:39,120
uh and then the ios part

297
00:10:39,120 --> 00:10:41,680
uh if you get a full course then this

298
00:10:41,680 --> 00:10:43,920
will be part of it right so this is the

299
00:10:43,920 --> 00:10:46,399
second part of uh

300
00:10:46,399 --> 00:10:48,240
of the full course but for next week it

301
00:10:48,240 --> 00:10:50,079
will be only android right so we will

302
00:10:50,079 --> 00:10:52,480
only be doing the android part

303
00:10:52,480 --> 00:10:55,200
so in ios we talk about uh you know the

304
00:10:55,200 --> 00:10:58,320
agile broken setup ios fundamentals and

305
00:10:58,320 --> 00:10:59,760
a lot of things like this how to

306
00:10:59,760 --> 00:11:02,640
transfer files how to uh jailbreak that

307
00:11:02,640 --> 00:11:04,079
your device and a lot of things like

308
00:11:04,079 --> 00:11:05,279
this

309
00:11:05,279 --> 00:11:07,760
then we talk about hyper description and

310
00:11:07,760 --> 00:11:09,279
blackboard analysis so if you don't have

311
00:11:09,279 --> 00:11:11,440
the source code what can you do how can

312
00:11:11,440 --> 00:11:13,440
you look for vulnerabilities how can you

313
00:11:13,440 --> 00:11:15,120
decrypt

314
00:11:15,120 --> 00:11:17,519
ipas from the app store

315
00:11:17,519 --> 00:11:20,320
and so on in lab three statical analysis

316
00:11:20,320 --> 00:11:21,440
so we look

317
00:11:21,440 --> 00:11:23,360
in cases where you have the thirst code

318
00:11:23,360 --> 00:11:25,040
how to look for vulnerabilities we show

319
00:11:25,040 --> 00:11:28,079
you some examples from real pen tests

320
00:11:28,079 --> 00:11:30,800
and some ultimate techniques to look for

321
00:11:30,800 --> 00:11:32,720
vulnerabilities lab4 with mine in the

322
00:11:32,720 --> 00:11:35,360
middle in ios

323
00:11:35,360 --> 00:11:37,920
and very some very interesting scenarios

324
00:11:37,920 --> 00:11:39,760
and useful tips for you for real

325
00:11:39,760 --> 00:11:42,800
assessment lab lab5 is similar to the

326
00:11:42,800 --> 00:11:45,920
in android so we modify the ios

327
00:11:45,920 --> 00:11:48,000
application at rest

328
00:11:48,000 --> 00:11:50,399
so we use the application make some

329
00:11:50,399 --> 00:11:51,920
changes and then

330
00:11:51,920 --> 00:11:53,600
install it again

331
00:11:53,600 --> 00:11:55,440
and see how the application changes

332
00:11:55,440 --> 00:11:56,399
right so

333
00:11:56,399 --> 00:11:58,560
here we we're not on we do not only

334
00:11:58,560 --> 00:12:01,680
cover uh the normal uh ios applications

335
00:12:01,680 --> 00:12:04,880
written in objective-c or swift but also

336
00:12:04,880 --> 00:12:07,279
this the same exercises about modifying

337
00:12:07,279 --> 00:12:09,040
applications written in javascript right

338
00:12:09,040 --> 00:12:11,120
with apache cordova for example there's

339
00:12:11,120 --> 00:12:13,519
other platforms that allow you to write

340
00:12:13,519 --> 00:12:15,519
javascript applications for android and

341
00:12:15,519 --> 00:12:17,200
ios for example

342
00:12:17,200 --> 00:12:20,720
um well cordova ionic phonegap

343
00:12:20,720 --> 00:12:22,399
and then there's also

344
00:12:22,399 --> 00:12:25,440
react native and others right so there's

345
00:12:25,440 --> 00:12:28,399
a lot of frameworks like this

346
00:12:28,399 --> 00:12:29,680
many lapses we talk about the

347
00:12:29,680 --> 00:12:33,120
instrumentation so lots of things um

348
00:12:33,120 --> 00:12:34,639
about instrumentation maybe i'll show

349
00:12:34,639 --> 00:12:36,639
you a little bit of

350
00:12:36,639 --> 00:12:38,959
flex today um

351
00:12:38,959 --> 00:12:42,000
and yeah so that's um pretty much it uh

352
00:12:42,000 --> 00:12:43,760
yeah and today i forgot to mention this

353
00:12:43,760 --> 00:12:46,000
so today we will see some of them

354
00:12:46,000 --> 00:12:47,440
exercises

355
00:12:47,440 --> 00:12:50,160
in here and something about attacking

356
00:12:50,160 --> 00:12:52,399
url handlers right so

357
00:12:52,399 --> 00:12:54,240
today we will cover a little bit of this

358
00:12:54,240 --> 00:12:56,079
uh and a little bit of this of course in

359
00:12:56,079 --> 00:12:57,760
the course everything is explained in

360
00:12:57,760 --> 00:13:00,240
much more detail but we only have and

361
00:13:00,240 --> 00:13:02,240
for so much today right and at the end

362
00:13:02,240 --> 00:13:04,839
there's some ctf open calendars

363
00:13:04,839 --> 00:13:06,480
applications uh

364
00:13:06,480 --> 00:13:08,079
interesting applications from real

365
00:13:08,079 --> 00:13:12,240
pentest and we also have scenarios for

366
00:13:12,240 --> 00:13:14,160
testing applications

367
00:13:14,160 --> 00:13:16,720
that control some iot devices and then

368
00:13:16,720 --> 00:13:18,399
it's very interesting how you can find

369
00:13:18,399 --> 00:13:21,040
vulnerabilities in the iot device

370
00:13:21,040 --> 00:13:23,279
without having the iot device by only

371
00:13:23,279 --> 00:13:24,160
looking

372
00:13:24,160 --> 00:13:25,760
at mobile

373
00:13:25,760 --> 00:13:27,760
but with this now we're ready to start

374
00:13:27,760 --> 00:13:30,639
with the actual content of this workshop

375
00:13:30,639 --> 00:13:32,720
going into detail about all these

376
00:13:32,720 --> 00:13:33,680
attacks

377
00:13:33,680 --> 00:13:36,079
so question for you does cursor request

378
00:13:36,079 --> 00:13:38,240
forgery existing mobile apps what do you

379
00:13:38,240 --> 00:13:40,480
think

380
00:13:44,000 --> 00:13:46,720
can we get link for all pdf mentioned in

381
00:13:46,720 --> 00:13:49,279
the slides yes so you have when you

382
00:13:49,279 --> 00:13:51,360
access the training portal uh you will

383
00:13:51,360 --> 00:13:54,399
have access to all the slides

384
00:13:54,399 --> 00:13:55,360
um

385
00:13:55,360 --> 00:13:58,560
and you can click on any link but also

386
00:13:58,560 --> 00:14:01,040
the pdfs in the slides you can see them

387
00:14:01,040 --> 00:14:02,399
on the website as well so if you go to

388
00:14:02,399 --> 00:14:04,480
70security.com

389
00:14:04,480 --> 00:14:07,279
um you can see there um

390
00:14:07,279 --> 00:14:08,399
all that

391
00:14:08,399 --> 00:14:11,279
so yeah with uh with deep links this is

392
00:14:11,279 --> 00:14:13,600
a very good answer so with deep links we

393
00:14:13,600 --> 00:14:14,639
have

394
00:14:14,639 --> 00:14:16,800
the possibility to have the equivalent

395
00:14:16,800 --> 00:14:20,160
of course i request forgery right so

396
00:14:20,160 --> 00:14:22,320
um so this is correct

397
00:14:22,320 --> 00:14:24,560
well let's talk about it so link attacks

398
00:14:24,560 --> 00:14:26,800
achieving user impersonation are some of

399
00:14:26,800 --> 00:14:28,000
the things that we're going to see and

400
00:14:28,000 --> 00:14:29,760
then we will also see deep link attacks

401
00:14:29,760 --> 00:14:32,560
to bypass authorization control

402
00:14:32,560 --> 00:14:33,760
so

403
00:14:33,760 --> 00:14:35,920
mobile deep link so how does this work

404
00:14:35,920 --> 00:14:39,120
right so a deep link is basically a uri

405
00:14:39,120 --> 00:14:40,639
that can be used to navigate to

406
00:14:40,639 --> 00:14:42,639
different parts of an application so

407
00:14:42,639 --> 00:14:44,639
these are available on both android and

408
00:14:44,639 --> 00:14:47,920
ios and they can have but do not have to

409
00:14:47,920 --> 00:14:49,920
have custom schemes

410
00:14:49,920 --> 00:14:52,639
right so they can here is kind of

411
00:14:52,639 --> 00:14:53,920
important

412
00:14:53,920 --> 00:14:54,959
so

413
00:14:54,959 --> 00:14:56,240
for example

414
00:14:56,240 --> 00:14:57,920
a social media application could

415
00:14:57,920 --> 00:14:59,519
register a

416
00:14:59,519 --> 00:15:01,519
social app column

417
00:15:01,519 --> 00:15:04,000
homepage kind of url right

418
00:15:04,000 --> 00:15:06,480
and then any click to search link will

419
00:15:06,480 --> 00:15:07,839
be automatically opened in the

420
00:15:07,839 --> 00:15:09,199
application

421
00:15:09,199 --> 00:15:10,800
so what's the deal with this right so

422
00:15:10,800 --> 00:15:12,959
you can for example have an application

423
00:15:12,959 --> 00:15:15,519
that has a social app column slash

424
00:15:15,519 --> 00:15:18,160
profile or social app called slash last

425
00:15:18,160 --> 00:15:20,240
profile profile picture

426
00:15:20,240 --> 00:15:22,160
and then like calling different things

427
00:15:22,160 --> 00:15:23,279
like this

428
00:15:23,279 --> 00:15:24,160
you can

429
00:15:24,160 --> 00:15:26,880
sometimes perform some actions

430
00:15:26,880 --> 00:15:28,880
and in some cases for example in the

431
00:15:28,880 --> 00:15:30,720
case of the

432
00:15:30,720 --> 00:15:32,880
shopify fingerprint bypass that we have

433
00:15:32,880 --> 00:15:34,000
in the course

434
00:15:34,000 --> 00:15:36,800
what happens is you leave the so the

435
00:15:36,800 --> 00:15:39,120
application locks itself and then it

436
00:15:39,120 --> 00:15:41,040
requires you to enter a fingerprint but

437
00:15:41,040 --> 00:15:44,160
then if there's some deep link sometimes

438
00:15:44,160 --> 00:15:45,680
it's possible to

439
00:15:45,680 --> 00:15:47,519
invoke the deep link and then this will

440
00:15:47,519 --> 00:15:49,920
bypass the fingerprint check right so

441
00:15:49,920 --> 00:15:51,120
there's something like this in the

442
00:15:51,120 --> 00:15:54,399
shopify bypass that we won't see today

443
00:15:54,399 --> 00:15:57,120
uh we will talk about periscope but i'm

444
00:15:57,120 --> 00:15:59,600
getting ahead of myself you did now

445
00:15:59,600 --> 00:16:01,759
so how do uh deep links work right so

446
00:16:01,759 --> 00:16:02,880
the first thing you need to do is to

447
00:16:02,880 --> 00:16:05,600
look at the android manifest and here we

448
00:16:05,600 --> 00:16:07,920
want to look uh at

449
00:16:07,920 --> 00:16:09,360
the activities

450
00:16:09,360 --> 00:16:11,040
so here you will notice that this

451
00:16:11,040 --> 00:16:12,800
activity doesn't have

452
00:16:12,800 --> 00:16:15,279
the word exported right so activities

453
00:16:15,279 --> 00:16:17,920
can be explicitly exported and that

454
00:16:17,920 --> 00:16:20,720
would be when you have the exported word

455
00:16:20,720 --> 00:16:21,600
here

456
00:16:21,600 --> 00:16:23,920
in this case we don't have exported

457
00:16:23,920 --> 00:16:27,199
but we have an intent filter so when you

458
00:16:27,199 --> 00:16:29,680
have an intent filter this is the same

459
00:16:29,680 --> 00:16:32,240
as having exported here and specifically

460
00:16:32,240 --> 00:16:35,360
this is saying how this activity

461
00:16:35,360 --> 00:16:37,199
should be invoked so in this case we

462
00:16:37,199 --> 00:16:39,279
have an activity called deep link

463
00:16:39,279 --> 00:16:40,720
activity

464
00:16:40,720 --> 00:16:43,199
and we have some specification about

465
00:16:43,199 --> 00:16:44,959
what the application expects right so

466
00:16:44,959 --> 00:16:47,600
the android scheme is some app the host

467
00:16:47,600 --> 00:16:49,120
is get credits and then the path

468
00:16:49,120 --> 00:16:51,040
prefixes user right so

469
00:16:51,040 --> 00:16:53,440
this means the url if you send

470
00:16:53,440 --> 00:16:55,440
this application a url like this like

471
00:16:55,440 --> 00:16:57,120
scheme host

472
00:16:57,120 --> 00:16:58,399
path

473
00:16:58,399 --> 00:17:00,079
um following

474
00:17:00,079 --> 00:17:02,720
you know this nomenclature here this

475
00:17:02,720 --> 00:17:05,119
means that this application will have a

476
00:17:05,119 --> 00:17:07,199
deep link like this like so some app

477
00:17:07,199 --> 00:17:09,599
columns slash get creds and user right

478
00:17:09,599 --> 00:17:12,000
so this is what this is telling you

479
00:17:12,000 --> 00:17:15,520
and then there's the possibility of uh

480
00:17:15,520 --> 00:17:17,679
the deep link being browseable

481
00:17:17,679 --> 00:17:19,839
right this is not required right you can

482
00:17:19,839 --> 00:17:21,839
still attack deep links when they are

483
00:17:21,839 --> 00:17:23,280
not browseable

484
00:17:23,280 --> 00:17:26,000
but if the deep link is also browsable

485
00:17:26,000 --> 00:17:27,760
then things can get even more

486
00:17:27,760 --> 00:17:29,760
interesting because the attack might be

487
00:17:29,760 --> 00:17:31,280
possible as well

488
00:17:31,280 --> 00:17:34,400
through our website because this means

489
00:17:34,400 --> 00:17:35,520
that

490
00:17:35,520 --> 00:17:38,080
from the android browser if you click on

491
00:17:38,080 --> 00:17:40,160
a deep link on a web page on the

492
00:17:40,160 --> 00:17:43,280
internet that can also call the

493
00:17:43,280 --> 00:17:45,280
the mobile app with the deep link right

494
00:17:45,280 --> 00:17:47,280
so we will see this in the in the demo

495
00:17:47,280 --> 00:17:49,360
today and it will make more sense but

496
00:17:49,360 --> 00:17:52,320
just to mention this is not required but

497
00:17:52,320 --> 00:17:54,320
it extends the attack surface right so

498
00:17:54,320 --> 00:17:56,080
without browsable

499
00:17:56,080 --> 00:17:59,200
uh this deep link can only be attacked

500
00:17:59,200 --> 00:18:01,280
from malicious applications installed on

501
00:18:01,280 --> 00:18:04,400
the same phone but with browseable

502
00:18:04,400 --> 00:18:06,559
the application can additionally be

503
00:18:06,559 --> 00:18:08,720
attacked from the browser right so not

504
00:18:08,720 --> 00:18:10,880
just malicious applications installed on

505
00:18:10,880 --> 00:18:12,480
the phone calling the

506
00:18:12,480 --> 00:18:14,400
deep link but also

507
00:18:14,400 --> 00:18:16,559
malicious websites when the user clicks

508
00:18:16,559 --> 00:18:18,880
on anything they can also call the deep

509
00:18:18,880 --> 00:18:21,440
link if you have uh the browseable theme

510
00:18:21,440 --> 00:18:23,600
here right so browseable browser so

511
00:18:23,600 --> 00:18:25,840
that's a quick way uh to remember it and

512
00:18:25,840 --> 00:18:28,480
that's what it means

513
00:18:28,480 --> 00:18:30,799
so let's talk about periscope so

514
00:18:30,799 --> 00:18:32,880
periscope is an application that has a

515
00:18:32,880 --> 00:18:35,840
bunch of users unfortunately twitter is

516
00:18:35,840 --> 00:18:38,480
going to kill it this year

517
00:18:38,480 --> 00:18:39,760
so we will

518
00:18:39,760 --> 00:18:40,960
modify

519
00:18:40,960 --> 00:18:43,039
the apk so that it keeps working and the

520
00:18:43,039 --> 00:18:45,679
exercise keeps working

521
00:18:45,679 --> 00:18:48,640
so we are working on that

522
00:18:48,640 --> 00:18:50,640
so the best is when you download the

523
00:18:50,640 --> 00:18:53,360
slides just use the apk from the

524
00:18:53,360 --> 00:18:54,799
training portal

525
00:18:54,799 --> 00:18:56,880
because this is the the specific

526
00:18:56,880 --> 00:18:59,280
vulnerable version affected by the

527
00:18:59,280 --> 00:19:01,919
diplin vulnerability uh that we're going

528
00:19:01,919 --> 00:19:03,200
to talk about right so if you get the

529
00:19:03,200 --> 00:19:05,039
latest periscope application this won't

530
00:19:05,039 --> 00:19:07,600
work you need this exact version

531
00:19:07,600 --> 00:19:08,480
um

532
00:19:08,480 --> 00:19:10,320
and in the training portal we will also

533
00:19:10,320 --> 00:19:12,720
modify it so that the exercise keeps

534
00:19:12,720 --> 00:19:15,440
working despite twitter killing

535
00:19:15,440 --> 00:19:17,280
periscope

536
00:19:17,280 --> 00:19:19,520
so uh this application has a lot of

537
00:19:19,520 --> 00:19:21,280
users and it was vulnerable to a

538
00:19:21,280 --> 00:19:23,600
crosshair request for three you can

539
00:19:23,600 --> 00:19:25,840
so

540
00:19:26,160 --> 00:19:28,559
periscope account now

541
00:19:28,559 --> 00:19:30,480
these may no longer be possible but we

542
00:19:30,480 --> 00:19:34,559
will get around it in the modified apk

543
00:19:34,559 --> 00:19:36,320
and then the first thing you need to do

544
00:19:36,320 --> 00:19:38,160
is to look at the android manifest right

545
00:19:38,160 --> 00:19:39,600
like which

546
00:19:39,600 --> 00:19:42,480
which are the activities being exported

547
00:19:42,480 --> 00:19:43,360
and

548
00:19:43,360 --> 00:19:45,520
how to call these links

549
00:19:45,520 --> 00:19:48,640
so you run for example apk2 and you

550
00:19:48,640 --> 00:19:51,039
decompile the apk and you will get some

551
00:19:51,039 --> 00:19:53,360
output like this and then you can start

552
00:19:53,360 --> 00:19:55,520
in the manifest right so you open the

553
00:19:55,520 --> 00:19:57,440
android manifest and you can look for

554
00:19:57,440 --> 00:19:59,120
browseable activities or you can just

555
00:19:59,120 --> 00:20:01,600
look for android scheme and look at the

556
00:20:01,600 --> 00:20:05,120
intent filters and this will show you

557
00:20:05,120 --> 00:20:08,799
all the possibilities to call um

558
00:20:08,799 --> 00:20:12,480
the periscope uh application right so

559
00:20:12,480 --> 00:20:14,240
in this case we can see there's a lot of

560
00:20:14,240 --> 00:20:16,480
possible android hosts you can see

561
00:20:16,480 --> 00:20:18,000
periscope tv

562
00:20:18,000 --> 00:20:20,880
user broadcast channel discover android

563
00:20:20,880 --> 00:20:23,440
scheme pscp right so there's a lot of

564
00:20:23,440 --> 00:20:25,520
different possibilities now very

565
00:20:25,520 --> 00:20:27,120
interesting is this thing here right so

566
00:20:27,120 --> 00:20:28,720
i mentioned before

567
00:20:28,720 --> 00:20:30,320
that deep links

568
00:20:30,320 --> 00:20:34,159
do not necessarily have to

569
00:20:34,159 --> 00:20:35,919
have a custom scheme right so in this

570
00:20:35,919 --> 00:20:37,679
case you can see you can have psp

571
00:20:37,679 --> 00:20:38,960
columns

572
00:20:38,960 --> 00:20:41,440
but you can also have https column slash

573
00:20:41,440 --> 00:20:43,200
lastperiscope.tv

574
00:20:43,200 --> 00:20:45,600
and this will also

575
00:20:45,600 --> 00:20:47,039
be called

576
00:20:47,039 --> 00:20:49,280
will be opened inside of the application

577
00:20:49,280 --> 00:20:50,960
right because this android manifest is

578
00:20:50,960 --> 00:20:52,720
telling android that this application

579
00:20:52,720 --> 00:20:55,520
can handle these urls so android will

580
00:20:55,520 --> 00:20:58,640
give you the choice of opening these biz

581
00:20:58,640 --> 00:21:01,600
link https link in periscope right so

582
00:21:01,600 --> 00:21:03,760
you can have deep links with https or

583
00:21:03,760 --> 00:21:04,799
http

584
00:21:04,799 --> 00:21:07,280
like urls that look like normal urls you

585
00:21:07,280 --> 00:21:09,200
would use on our website you do not

586
00:21:09,200 --> 00:21:13,039
necessarily have to have a custom theme

587
00:21:13,039 --> 00:21:15,120
okay so just to mention that

588
00:21:15,120 --> 00:21:18,159
and yeah so in this case um

589
00:21:18,159 --> 00:21:20,720
we can take a next existing user on

590
00:21:20,720 --> 00:21:22,960
periscope we will use this user as an

591
00:21:22,960 --> 00:21:24,960
example and this is how

592
00:21:24,960 --> 00:21:27,120
the tabling works so you can have psp

593
00:21:27,120 --> 00:21:29,760
column slash user and then

594
00:21:29,760 --> 00:21:32,240
the id of the user so one possible

595
00:21:32,240 --> 00:21:34,000
approach is to use

596
00:21:34,000 --> 00:21:36,400
deep link tester which is a

597
00:21:36,400 --> 00:21:38,480
mobile application you can get it on the

598
00:21:38,480 --> 00:21:39,760
training portal right so all these

599
00:21:39,760 --> 00:21:41,039
things that i'm saying you can get it on

600
00:21:41,039 --> 00:21:43,360
the training portal you just log in

601
00:21:43,360 --> 00:21:45,039
so everybody

602
00:21:45,039 --> 00:21:47,039
in this call got an invite

603
00:21:47,039 --> 00:21:48,480
if you didn't because you're watching

604
00:21:48,480 --> 00:21:50,159
the recording you can get this workshop

605
00:21:50,159 --> 00:21:53,039
for free on the store as well

606
00:21:53,039 --> 00:21:55,840
and you basically download the version

607
00:21:55,840 --> 00:21:57,360
from there

608
00:21:57,360 --> 00:21:59,440
you can here you can try this right so

609
00:21:59,440 --> 00:22:02,159
this simulates malicious application

610
00:22:02,159 --> 00:22:05,039
uh calling the deep link right so um

611
00:22:05,039 --> 00:22:07,200
with deep link tester we can type here

612
00:22:07,200 --> 00:22:09,600
the deep link that we want

613
00:22:09,600 --> 00:22:12,000
and then we can go to uri and we will

614
00:22:12,000 --> 00:22:14,320
see that the profile of this guy

615
00:22:14,320 --> 00:22:17,280
appears right so until now we are still

616
00:22:17,280 --> 00:22:18,960
not doing anything dangerous we're just

617
00:22:18,960 --> 00:22:20,880
opening the profile

618
00:22:20,880 --> 00:22:23,919
we can also do this with adb right so

619
00:22:23,919 --> 00:22:26,080
adb is my favorite when you talk to

620
00:22:26,080 --> 00:22:28,000
developers or you you're writing a

621
00:22:28,000 --> 00:22:30,559
pentas report you should always strive

622
00:22:30,559 --> 00:22:32,799
to use adb right because

623
00:22:32,799 --> 00:22:35,840
um the android developers that are going

624
00:22:35,840 --> 00:22:37,679
to read the pentax report and eventually

625
00:22:37,679 --> 00:22:40,159
have to fix the issues they will know

626
00:22:40,159 --> 00:22:42,799
adb right so they if you give them an

627
00:22:42,799 --> 00:22:44,720
adb command they will be able to

628
00:22:44,720 --> 00:22:46,799
replicate what you found very easily

629
00:22:46,799 --> 00:22:48,720
because they can run the command

630
00:22:48,720 --> 00:22:51,280
right so you should not not use draws or

631
00:22:51,280 --> 00:22:53,360
in japanese reports because

632
00:22:53,360 --> 00:22:54,960
uh

633
00:22:54,960 --> 00:22:56,799
like unless you have to write like this

634
00:22:56,799 --> 00:22:59,600
some scenarios where drawster can send

635
00:22:59,600 --> 00:23:01,840
intents that are more cumbersome to send

636
00:23:01,840 --> 00:23:03,039
with adb

637
00:23:03,039 --> 00:23:04,400
but if you can

638
00:23:04,400 --> 00:23:06,240
it's always better to use adb just

639
00:23:06,240 --> 00:23:08,080
because developers have it and they are

640
00:23:08,080 --> 00:23:10,880
familiar with it right so you can do adb

641
00:23:10,880 --> 00:23:13,840
shell and then am start and then this is

642
00:23:13,840 --> 00:23:16,159
the um

643
00:23:16,159 --> 00:23:18,320
the intent action right so dash a is the

644
00:23:18,320 --> 00:23:20,159
action of the intent so android intent

645
00:23:20,159 --> 00:23:21,360
action view

646
00:23:21,360 --> 00:23:23,280
and then the data of the intent is the

647
00:23:23,280 --> 00:23:26,400
url so pscp columns last user and then

648
00:23:26,400 --> 00:23:28,159
the id of the user

649
00:23:28,159 --> 00:23:30,559
um so that's another approach and then

650
00:23:30,559 --> 00:23:32,480
another possible approach is withdraw

651
00:23:32,480 --> 00:23:34,960
survey so truster is a very powerful

652
00:23:34,960 --> 00:23:37,120
tool

653
00:23:37,120 --> 00:23:38,240
so

654
00:23:38,240 --> 00:23:40,640
you should first run the drawstr

655
00:23:40,640 --> 00:23:41,919
application on the phone and this

656
00:23:41,919 --> 00:23:43,919
simulates a malicious application

657
00:23:43,919 --> 00:23:45,360
installed on the phone and then you can

658
00:23:45,360 --> 00:23:47,600
control it from your computer right so

659
00:23:47,600 --> 00:23:49,279
from your computer you connect to the

660
00:23:49,279 --> 00:23:50,960
device and then

661
00:23:50,960 --> 00:23:53,039
it's really nice because it has a

662
00:23:53,039 --> 00:23:54,080
scanner

663
00:23:54,080 --> 00:23:55,919
for checking browseable activities for

664
00:23:55,919 --> 00:23:58,559
example as well as other scanners that

665
00:23:58,559 --> 00:24:00,400
we cover in the course right so in this

666
00:24:00,400 --> 00:24:02,320
case we can run the scanner for

667
00:24:02,320 --> 00:24:04,480
browseable activities and then this is

668
00:24:04,480 --> 00:24:05,360
the

669
00:24:05,360 --> 00:24:08,400
id the package name of the periscope

670
00:24:08,400 --> 00:24:11,360
application so this will give us

671
00:24:11,360 --> 00:24:13,039
some information about possible

672
00:24:13,039 --> 00:24:15,039
activities now you will notice that the

673
00:24:15,039 --> 00:24:17,120
invokable urls

674
00:24:17,120 --> 00:24:19,600
uris like this list is very poor i'm

675
00:24:19,600 --> 00:24:20,960
very short

676
00:24:20,960 --> 00:24:22,000
so

677
00:24:22,000 --> 00:24:24,880
this is a a nice starting point but it

678
00:24:24,880 --> 00:24:27,200
is no replacement for looking at the

679
00:24:27,200 --> 00:24:28,799
android manifest

680
00:24:28,799 --> 00:24:30,400
and seeing all the combinations right

681
00:24:30,400 --> 00:24:31,840
because there's really a lot more

682
00:24:31,840 --> 00:24:35,039
combinations than these uh uris

683
00:24:35,039 --> 00:24:36,960
and you will see these by looking at the

684
00:24:36,960 --> 00:24:38,720
android manifest and looking at the

685
00:24:38,720 --> 00:24:41,840
source code and thinking right so um you

686
00:24:41,840 --> 00:24:44,080
know droughts would only take you so far

687
00:24:44,080 --> 00:24:46,240
but it can still be a very good starting

688
00:24:46,240 --> 00:24:48,559
point uh if you don't know anything or

689
00:24:48,559 --> 00:24:49,919
at the beginning of appendix just to

690
00:24:49,919 --> 00:24:52,080
give you something uh it can still be

691
00:24:52,080 --> 00:24:54,240
helpful but it's no replacement for uh

692
00:24:54,240 --> 00:24:56,080
you know manual assessment and looking

693
00:24:56,080 --> 00:24:57,520
at the android manifest and looking at

694
00:24:57,520 --> 00:25:00,240
source code and thinking right so uh

695
00:25:00,240 --> 00:25:02,480
just to mention that in here intros week

696
00:25:02,480 --> 00:25:04,480
and let's run

697
00:25:04,480 --> 00:25:07,760
start an action and uh same action as

698
00:25:07,760 --> 00:25:10,240
before so android intent action view and

699
00:25:10,240 --> 00:25:12,880
then data uri is psp user and then the

700
00:25:12,880 --> 00:25:14,880
id of the user so this will also open

701
00:25:14,880 --> 00:25:17,200
the profile now because this activity is

702
00:25:17,200 --> 00:25:18,480
browseable

703
00:25:18,480 --> 00:25:21,039
the fourth option that we have to invoke

704
00:25:21,039 --> 00:25:22,799
this uri is

705
00:25:22,799 --> 00:25:25,039
from a website right so

706
00:25:25,039 --> 00:25:26,559
from the slides you can click on this

707
00:25:26,559 --> 00:25:28,400
link and you can open this link on the

708
00:25:28,400 --> 00:25:30,080
browser in android

709
00:25:30,080 --> 00:25:32,640
and this will have the proof of concept

710
00:25:32,640 --> 00:25:34,400
that you can use from a website right so

711
00:25:34,400 --> 00:25:36,960
that you don't have to host it yourself

712
00:25:36,960 --> 00:25:37,679
so

713
00:25:37,679 --> 00:25:39,520
if you want you can open this on the

714
00:25:39,520 --> 00:25:41,360
browser using adb like this so you can

715
00:25:41,360 --> 00:25:42,720
do adb shell

716
00:25:42,720 --> 00:25:44,880
and start a android intent action view

717
00:25:44,880 --> 00:25:46,880
and then on the data you put the this

718
00:25:46,880 --> 00:25:49,520
url and this will open it in android if

719
00:25:49,520 --> 00:25:51,679
you want to you know copy and paste or

720
00:25:51,679 --> 00:25:54,480
you don't want to type the uri from from

721
00:25:54,480 --> 00:25:56,960
your phone which is messy you can

722
00:25:56,960 --> 00:25:58,000
like this

723
00:25:58,000 --> 00:25:59,679
so this will look something like this

724
00:25:59,679 --> 00:26:01,440
right so you have the option to open the

725
00:26:01,440 --> 00:26:04,559
user and this will open the user profile

726
00:26:04,559 --> 00:26:06,640
and you can see the follow button but

727
00:26:06,640 --> 00:26:09,679
we're still not following uh the user

728
00:26:09,679 --> 00:26:11,440
right so we open the user and this just

729
00:26:11,440 --> 00:26:14,000
shows the profile

730
00:26:14,000 --> 00:26:16,320
so then we can

731
00:26:16,320 --> 00:26:19,679
add the slash follow uh at the end and

732
00:26:19,679 --> 00:26:21,440
this will automatically follow the user

733
00:26:21,440 --> 00:26:23,360
right so this is actually the crosstalk

734
00:26:23,360 --> 00:26:25,440
request forgery vulnerability right like

735
00:26:25,440 --> 00:26:27,520
just opening the profile this is still

736
00:26:27,520 --> 00:26:29,120
not a vulnerability

737
00:26:29,120 --> 00:26:32,720
but the fact that you can follow anybody

738
00:26:32,720 --> 00:26:36,080
without any user prompt or any form of

739
00:26:36,080 --> 00:26:38,080
authorization this is the issue right

740
00:26:38,080 --> 00:26:41,120
this is an impersonation um where we are

741
00:26:41,120 --> 00:26:44,240
abusing the trust that the user has

742
00:26:44,240 --> 00:26:46,640
on the application and then when this is

743
00:26:46,640 --> 00:26:47,840
opened

744
00:26:47,840 --> 00:26:49,919
in periscope the user will be

745
00:26:49,919 --> 00:26:52,480
automatically followed without any more

746
00:26:52,480 --> 00:26:54,880
user interaction other than clicking on

747
00:26:54,880 --> 00:26:56,799
some link right so with the playing

748
00:26:56,799 --> 00:26:59,039
tester we only need to add the flash

749
00:26:59,039 --> 00:27:01,279
follow at the end

750
00:27:01,279 --> 00:27:03,600
you will see the following here

751
00:27:03,600 --> 00:27:06,320
and then we att with

752
00:27:06,320 --> 00:27:09,120
like this and then with browser we just

753
00:27:09,120 --> 00:27:09,919
uh

754
00:27:09,919 --> 00:27:12,000
we can do the same thing as before and

755
00:27:12,000 --> 00:27:13,760
just add the slash follow right so in

756
00:27:13,760 --> 00:27:16,880
all cases or from the website um

757
00:27:16,880 --> 00:27:19,600
you can click on fiscal crochet demo and

758
00:27:19,600 --> 00:27:22,240
you will see that you follow the user

759
00:27:22,240 --> 00:27:24,799
immediately without any other

760
00:27:24,799 --> 00:27:26,720
interaction right so this is the

761
00:27:26,720 --> 00:27:28,240
vulnerability

762
00:27:28,240 --> 00:27:30,080
so um

763
00:27:30,080 --> 00:27:31,679
yeah so that's how it works and this is

764
00:27:31,679 --> 00:27:34,080
the html from the site right so this is

765
00:27:34,080 --> 00:27:34,880
the

766
00:27:34,880 --> 00:27:36,640
just to open the user

767
00:27:36,640 --> 00:27:38,960
the this is just a normal link like this

768
00:27:38,960 --> 00:27:41,600
and then to follow the user uh we have

769
00:27:41,600 --> 00:27:43,120
the same and then at the end we have the

770
00:27:43,120 --> 00:27:45,279
slash follow and this automatically

771
00:27:45,279 --> 00:27:46,880
follows the user and this is actually

772
00:27:46,880 --> 00:27:49,039
the crosshair request portrait

773
00:27:49,039 --> 00:27:49,919
so

774
00:27:49,919 --> 00:27:51,200
that's the link

775
00:27:51,200 --> 00:27:53,760
so to mitigate these kinds of issues you

776
00:27:53,760 --> 00:27:56,640
should um try to have some prompts to

777
00:27:56,640 --> 00:27:58,159
the user right so

778
00:27:58,159 --> 00:28:00,000
when the user clicks on a link like this

779
00:28:00,000 --> 00:28:00,960
before

780
00:28:00,960 --> 00:28:02,960
following the user you should ask the

781
00:28:02,960 --> 00:28:04,640
user like do you really want to follow

782
00:28:04,640 --> 00:28:06,880
this guy and then the user will say yes

783
00:28:06,880 --> 00:28:07,919
or no

784
00:28:07,919 --> 00:28:10,720
so if you're a developer that would be

785
00:28:10,720 --> 00:28:13,039
the way to fix it right

786
00:28:13,039 --> 00:28:14,880
uh so with this let's start with the

787
00:28:14,880 --> 00:28:17,679
demo uh now it's a live mouse so fingers

788
00:28:17,679 --> 00:28:18,799
crossed

789
00:28:18,799 --> 00:28:21,679
um yeah so this is periscope right so

790
00:28:21,679 --> 00:28:24,000
first i'm going to

791
00:28:24,000 --> 00:28:26,080
do the adb

792
00:28:26,080 --> 00:28:29,440
so i have uh here

793
00:28:29,440 --> 00:28:33,360
uh right so i can do adb shell

794
00:28:33,360 --> 00:28:36,240
and try this so i'm just going to copy

795
00:28:36,240 --> 00:28:38,399
this for later

796
00:28:38,399 --> 00:28:42,320
so if i hit enter on this and now i look

797
00:28:42,320 --> 00:28:45,600
again at prescott we can see that the

798
00:28:45,600 --> 00:28:48,559
profile of this guy has been opened

799
00:28:48,559 --> 00:28:50,960
so we are opening the profile right and

800
00:28:50,960 --> 00:28:54,240
now if i do the same thing

801
00:28:54,240 --> 00:28:58,520
when i add follow

802
00:28:58,880 --> 00:29:00,720
now i go back here you can see that now

803
00:29:00,720 --> 00:29:03,039
i'm following him right so

804
00:29:03,039 --> 00:29:05,039
there was no other user interaction

805
00:29:05,039 --> 00:29:06,880
right now so i'm i'm following right so

806
00:29:06,880 --> 00:29:08,640
not following now you have to click on

807
00:29:08,640 --> 00:29:11,120
something because then it doesn't work

808
00:29:11,120 --> 00:29:14,399
now here if i do this again

809
00:29:14,399 --> 00:29:15,840
you can see

810
00:29:15,840 --> 00:29:18,640
that the circuit for three worked

811
00:29:18,640 --> 00:29:21,039
right so now let me see if i have here

812
00:29:21,039 --> 00:29:23,200
dibling tester

813
00:29:23,200 --> 00:29:25,679
and now hopefully

814
00:29:25,679 --> 00:29:28,559
this will work

815
00:29:28,960 --> 00:29:31,520
if i can paste that

816
00:29:31,520 --> 00:29:33,120
okay so

817
00:29:33,120 --> 00:29:35,120
work but

818
00:29:35,120 --> 00:29:36,880
not to worry so

819
00:29:36,880 --> 00:29:38,559
okay so i'll just type

820
00:29:38,559 --> 00:29:39,679
cp

821
00:29:39,679 --> 00:29:41,840
and then user

822
00:29:41,840 --> 00:29:43,360
mk

823
00:29:43,360 --> 00:29:46,159
so if i just go to uri here

824
00:29:46,159 --> 00:29:48,240
you can see that again i'm opening the

825
00:29:48,240 --> 00:29:50,640
profile but i'm not following him and

826
00:29:50,640 --> 00:29:53,840
then if i go back

827
00:29:53,840 --> 00:29:56,480
to deep link tester and here i add slash

828
00:29:56,480 --> 00:29:57,440
follow

829
00:29:57,440 --> 00:29:59,360
and i go to try

830
00:29:59,360 --> 00:30:01,360
this would be another way now in

831
00:30:01,360 --> 00:30:02,880
scenario it would be a malicious

832
00:30:02,880 --> 00:30:04,480
application installed on the phone which

833
00:30:04,480 --> 00:30:06,880
is what we simulated before with adb

834
00:30:06,880 --> 00:30:08,960
right so now i'm unfollowing again so

835
00:30:08,960 --> 00:30:10,480
not following him

836
00:30:10,480 --> 00:30:12,799
you have to click on something so that

837
00:30:12,799 --> 00:30:14,640
the user is not displayed and now let's

838
00:30:14,640 --> 00:30:18,000
look at router right so in browser

839
00:30:18,000 --> 00:30:20,640
first we can

840
00:30:20,640 --> 00:30:24,320
run the principle uh okay so i have to

841
00:30:24,320 --> 00:30:26,799
start routing again and here we can run

842
00:30:26,799 --> 00:30:29,120
the scanner first right so

843
00:30:29,120 --> 00:30:30,320
we can

844
00:30:30,320 --> 00:30:33,679
run scanner activity possible

845
00:30:33,679 --> 00:30:36,120
of the periscope

846
00:30:36,120 --> 00:30:38,159
tv.periscope.android and this gives us

847
00:30:38,159 --> 00:30:40,240
the

848
00:30:40,240 --> 00:30:43,360
different uris as i showed before right

849
00:30:43,360 --> 00:30:45,840
now this list is uh is very poor right

850
00:30:45,840 --> 00:30:48,159
so if we look at the android manifest

851
00:30:48,159 --> 00:30:50,159
here and i go through

852
00:30:50,159 --> 00:30:51,760
filter

853
00:30:51,760 --> 00:30:54,240
you can see that it's really so here we

854
00:30:54,240 --> 00:30:56,159
have an android schema of tv periscope

855
00:30:56,159 --> 00:30:57,840
android

856
00:30:57,840 --> 00:31:00,799
so do you see that here there's no tv oh

857
00:31:00,799 --> 00:31:02,880
okay so this one is here right so but

858
00:31:02,880 --> 00:31:04,799
there's others that won't be right so if

859
00:31:04,799 --> 00:31:07,279
i keep looking for intent filters

860
00:31:07,279 --> 00:31:09,200
there's really a lot

861
00:31:09,200 --> 00:31:12,320
uh so here for example we have

862
00:31:12,320 --> 00:31:15,360
an xps and different host so

863
00:31:15,360 --> 00:31:17,600
browser is not computing like http

864
00:31:17,600 --> 00:31:20,320
periscope.tv http

865
00:31:20,320 --> 00:31:23,200
psp or tv you know all these it's not

866
00:31:23,200 --> 00:31:25,039
doing all the combinations you have to

867
00:31:25,039 --> 00:31:27,200
think by yourself right so here you have

868
00:31:27,200 --> 00:31:29,039
some of the combinations but not all

869
00:31:29,039 --> 00:31:30,720
right so for example

870
00:31:30,720 --> 00:31:33,279
if you look at this intense filter this

871
00:31:33,279 --> 00:31:35,840
shows you that for example https and

872
00:31:35,840 --> 00:31:38,840
www.psp.tv

873
00:31:38,960 --> 00:31:40,799
this would also be a way to call this

874
00:31:40,799 --> 00:31:43,600
uprooter activity right so with

875
00:31:43,600 --> 00:31:46,320
www.psp.org

876
00:31:46,320 --> 00:31:48,559
but if you look at drozer

877
00:31:48,559 --> 00:31:50,080
that one is not here right that

878
00:31:50,080 --> 00:31:51,279
combination

879
00:31:51,279 --> 00:31:55,440
whereas is really one of the possible

880
00:31:55,840 --> 00:31:57,360
things right and this is actually a

881
00:31:57,360 --> 00:31:59,519
browsable activity which is the only

882
00:31:59,519 --> 00:32:01,279
activities that browser is looking for

883
00:32:01,279 --> 00:32:03,039
okay so we are checking we are running

884
00:32:03,039 --> 00:32:05,600
the browseable activity scanner

885
00:32:05,600 --> 00:32:08,159
right and it is failing to to find some

886
00:32:08,159 --> 00:32:10,480
of the combinations right so

887
00:32:10,480 --> 00:32:12,320
again draws are not a replacement of

888
00:32:12,320 --> 00:32:14,399
doing this manually it's always better

889
00:32:14,399 --> 00:32:16,159
if you think by yourself right so you

890
00:32:16,159 --> 00:32:18,720
have two valid schemes four white hosts

891
00:32:18,720 --> 00:32:21,120
this means there's eight possible ratio

892
00:32:21,120 --> 00:32:23,039
two by four eight

893
00:32:23,039 --> 00:32:26,000
eight possible uh deep links on this

894
00:32:26,000 --> 00:32:27,840
browseable activity right to call this

895
00:32:27,840 --> 00:32:29,519
browseable activity

896
00:32:29,519 --> 00:32:31,600
so cursor is not going to give you all

897
00:32:31,600 --> 00:32:33,600
the combinations but this can still be a

898
00:32:33,600 --> 00:32:35,760
decent third for now

899
00:32:35,760 --> 00:32:38,559
let's run this let me move my somewhere

900
00:32:38,559 --> 00:32:39,440
else

901
00:32:39,440 --> 00:32:40,880
so here

902
00:32:40,880 --> 00:32:43,519
i'm going to remove the follow just to

903
00:32:43,519 --> 00:32:47,360
open the profile now you minimize this

904
00:32:47,360 --> 00:32:49,919
and open cursor you can see we are not

905
00:32:49,919 --> 00:32:51,840
following him but when the profile now

906
00:32:51,840 --> 00:32:54,080
the profile is minimized if i go back

907
00:32:54,080 --> 00:32:55,200
here

908
00:32:55,200 --> 00:32:58,480
and i add the follow

909
00:32:58,480 --> 00:32:59,919
you can see that we are following the

910
00:32:59,919 --> 00:33:01,919
right so i'm following

911
00:33:01,919 --> 00:33:03,840
now i go back

912
00:33:03,840 --> 00:33:06,240
follow

913
00:33:06,480 --> 00:33:08,720
so we are following him right so this is

914
00:33:08,720 --> 00:33:11,919
the request for three uh demonstrated

915
00:33:11,919 --> 00:33:13,760
through trouser so one of the other

916
00:33:13,760 --> 00:33:16,960
techniques that we see in the course

917
00:33:16,960 --> 00:33:19,679
and now let's do it from our website

918
00:33:19,679 --> 00:33:21,039
right so

919
00:33:21,039 --> 00:33:21,290
um

920
00:33:21,290 --> 00:33:22,399
[Music]

921
00:33:22,399 --> 00:33:24,640
so in here i can open the user so this

922
00:33:24,640 --> 00:33:26,960
will just open the profile

923
00:33:26,960 --> 00:33:29,200
uh and you can see this right and then

924
00:33:29,200 --> 00:33:31,679
if i minimize this and i go back to the

925
00:33:31,679 --> 00:33:33,840
website and i do the follow

926
00:33:33,840 --> 00:33:35,600
now of course in a real attack this

927
00:33:35,600 --> 00:33:37,919
would not say periscope cross request

928
00:33:37,919 --> 00:33:40,559
forgery demo this would say win an ipad

929
00:33:40,559 --> 00:33:42,320
now or something like this just to

930
00:33:42,320 --> 00:33:44,720
entice a user to click on that right and

931
00:33:44,720 --> 00:33:46,799
then when the user clicks on it

932
00:33:46,799 --> 00:33:48,240
you can see that we are following the

933
00:33:48,240 --> 00:33:49,600
user right so

934
00:33:49,600 --> 00:33:52,159
the fourth possibility for my website

935
00:33:52,159 --> 00:33:54,399
right i'm going to do it again just to

936
00:33:54,399 --> 00:33:57,120
demonstrate so if i click on the follow

937
00:33:57,120 --> 00:33:58,960
you can see that

938
00:33:58,960 --> 00:34:01,519
i am following him right so

939
00:34:01,519 --> 00:34:04,159
this is the end of the fiscal cracker

940
00:34:04,159 --> 00:34:06,799
request for three demo we talked about

941
00:34:06,799 --> 00:34:07,919
um

942
00:34:07,919 --> 00:34:09,679
mitigation as well so now let's talk

943
00:34:09,679 --> 00:34:10,639
about

944
00:34:10,639 --> 00:34:13,599
impacts to make phone calls right so

945
00:34:13,599 --> 00:34:15,599
this is an abbreviated version of

946
00:34:15,599 --> 00:34:17,440
finding and exploiting url handlers in

947
00:34:17,440 --> 00:34:19,119
the course of this

948
00:34:19,119 --> 00:34:21,359
is better if you use the

949
00:34:21,359 --> 00:34:23,440
always the applications from from the

950
00:34:23,440 --> 00:34:24,960
training portal because they are the

951
00:34:24,960 --> 00:34:27,359
exact same version that we used as we

952
00:34:27,359 --> 00:34:29,520
wrote the course and maybe you know this

953
00:34:29,520 --> 00:34:31,520
application changes later if you get it

954
00:34:31,520 --> 00:34:33,679
from the internet so always try to get

955
00:34:33,679 --> 00:34:36,000
the ones uh from the training portal for

956
00:34:36,000 --> 00:34:38,079
best results

957
00:34:38,079 --> 00:34:41,679
and this again just logging

958
00:34:41,679 --> 00:34:44,000
download slides and then click on the

959
00:34:44,000 --> 00:34:45,839
links from the slides while you are

960
00:34:45,839 --> 00:34:48,480
logged in right and then the this will

961
00:34:48,480 --> 00:34:50,639
work just fine but that's how it works

962
00:34:50,639 --> 00:34:52,480
right so from the slides just click on

963
00:34:52,480 --> 00:34:53,599
the links

964
00:34:53,599 --> 00:34:55,918
and this downloads the applications uh

965
00:34:55,918 --> 00:34:57,680
from the training portal

966
00:34:57,680 --> 00:35:00,800
so first we need a way to find the

967
00:35:00,800 --> 00:35:03,760
unexpected url handlers right so

968
00:35:03,760 --> 00:35:06,240
in android we had to look at the android

969
00:35:06,240 --> 00:35:08,880
manifest in ios the equivalent is the

970
00:35:08,880 --> 00:35:10,320
info plist

971
00:35:10,320 --> 00:35:11,680
so

972
00:35:11,680 --> 00:35:14,400
there's different ways to to do this

973
00:35:14,400 --> 00:35:17,200
right you could try to um you know

974
00:35:17,200 --> 00:35:19,680
extract the ipad if you got it

975
00:35:19,680 --> 00:35:21,200
on a computer and then looking at the

976
00:35:21,200 --> 00:35:22,720
info please you can also look at the

977
00:35:22,720 --> 00:35:24,720
info phillies from the phone which i

978
00:35:24,720 --> 00:35:26,560
will show

979
00:35:26,560 --> 00:35:28,720
and then inside of here

980
00:35:28,720 --> 00:35:31,839
you can look for url schemes right so

981
00:35:31,839 --> 00:35:34,400
this will be the case for

982
00:35:34,400 --> 00:35:36,800
deep links that are using a custom url

983
00:35:36,800 --> 00:35:37,680
scheme

984
00:35:37,680 --> 00:35:40,160
but always remember that deep links can

985
00:35:40,160 --> 00:35:42,800
also be without a

986
00:35:42,800 --> 00:35:45,200
custom url scheme right so in those

987
00:35:45,200 --> 00:35:48,320
cases it will be some https

988
00:35:48,320 --> 00:35:50,400
and the domain name and then when you

989
00:35:50,400 --> 00:35:52,079
click on that link

990
00:35:52,079 --> 00:35:54,160
this will be opened

991
00:35:54,160 --> 00:35:56,720
by the ios application in fact if you

992
00:35:56,720 --> 00:35:58,400
are a developer you should not do this

993
00:35:58,400 --> 00:36:00,160
because this is considered insecure

994
00:36:00,160 --> 00:36:02,640
because other ios applications installed

995
00:36:02,640 --> 00:36:04,160
on the phone could also register the

996
00:36:04,160 --> 00:36:05,839
same uris

997
00:36:05,839 --> 00:36:09,119
and then they could capture uh some of

998
00:36:09,119 --> 00:36:11,280
the requests that your application

999
00:36:11,280 --> 00:36:13,119
should capture instead like for example

1000
00:36:13,119 --> 00:36:14,800
credentials is how you if a user is

1001
00:36:14,800 --> 00:36:16,560
trained to log in and you have a url

1002
00:36:16,560 --> 00:36:17,680
handler

1003
00:36:17,680 --> 00:36:21,040
to handle the token from uh login to

1004
00:36:21,040 --> 00:36:23,119
through google for example

1005
00:36:23,119 --> 00:36:24,079
uh

1006
00:36:24,079 --> 00:36:25,440
that will be bad right if another

1007
00:36:25,440 --> 00:36:28,000
application hijacks your uh your scheme

1008
00:36:28,000 --> 00:36:30,079
right so you should not do this but you

1009
00:36:30,079 --> 00:36:31,680
should if you are pen tester you should

1010
00:36:31,680 --> 00:36:33,760
look for this right because uh this can

1011
00:36:33,760 --> 00:36:36,320
give you some hints about uh potential

1012
00:36:36,320 --> 00:36:37,760
attacks through deep links so in this

1013
00:36:37,760 --> 00:36:41,200
case we have a couple of uri url schemes

1014
00:36:41,200 --> 00:36:43,200
so dumbfold are only secure app and then

1015
00:36:43,200 --> 00:36:45,839
vulnerable and secure swift so both

1016
00:36:45,839 --> 00:36:47,760
schemes will work

1017
00:36:47,760 --> 00:36:50,160
so this is the way to look for this in

1018
00:36:50,160 --> 00:36:52,640
the info list

1019
00:36:52,640 --> 00:36:55,599
if you have the source code you can also

1020
00:36:55,599 --> 00:36:57,520
take this through xcode so you would

1021
00:36:57,520 --> 00:37:00,240
click on the source code and then you go

1022
00:37:00,240 --> 00:37:02,079
to the info tab

1023
00:37:02,079 --> 00:37:04,560
and then you scroll down and there's uri

1024
00:37:04,560 --> 00:37:05,440
types

1025
00:37:05,440 --> 00:37:06,880
and to the right of this you will have

1026
00:37:06,880 --> 00:37:09,119
something called url url schemes and

1027
00:37:09,119 --> 00:37:11,440
this will also tell you

1028
00:37:11,440 --> 00:37:13,680
uh which other custom urls that the

1029
00:37:13,680 --> 00:37:14,960
application

1030
00:37:14,960 --> 00:37:16,400
is using

1031
00:37:16,400 --> 00:37:18,560
so this means that the application uses

1032
00:37:18,560 --> 00:37:20,640
these two possible urls right so then

1033
00:37:20,640 --> 00:37:22,110
for everybody foreign

1034
00:37:22,110 --> 00:37:23,440
[Music]

1035
00:37:23,440 --> 00:37:25,520
and both will be opened by this

1036
00:37:25,520 --> 00:37:28,640
application than verbal insecure app

1037
00:37:28,640 --> 00:37:30,880
right so now the question is okay we

1038
00:37:30,880 --> 00:37:31,680
know

1039
00:37:31,680 --> 00:37:34,320
uh if you click on this this will be

1040
00:37:34,320 --> 00:37:36,560
open in the app but what can we do with

1041
00:37:36,560 --> 00:37:37,520
it

1042
00:37:37,520 --> 00:37:39,359
so to answer that question we need to

1043
00:37:39,359 --> 00:37:41,359
look at the source code right so

1044
00:37:41,359 --> 00:37:43,440
the first place you should look at is

1045
00:37:43,440 --> 00:37:45,680
the app delegate if the application is

1046
00:37:45,680 --> 00:37:47,599
written in swift this will be called

1047
00:37:47,599 --> 00:37:49,839
updelegate.swift if it is written in

1048
00:37:49,839 --> 00:37:52,720
objective c it will be read it will be

1049
00:37:52,720 --> 00:37:54,560
appdelegate.m

1050
00:37:54,560 --> 00:37:58,000
right so dot m for objective c now most

1051
00:37:58,000 --> 00:37:59,839
applications nowadays are written in

1052
00:37:59,839 --> 00:38:01,920
swift but there's still some written in

1053
00:38:01,920 --> 00:38:03,599
objective c so

1054
00:38:03,599 --> 00:38:05,119
you know

1055
00:38:05,119 --> 00:38:07,440
but just look for up delegate

1056
00:38:07,440 --> 00:38:09,839
and this will point you in the right

1057
00:38:09,839 --> 00:38:11,440
direction right so

1058
00:38:11,440 --> 00:38:13,839
um if you don't have xcode you can just

1059
00:38:13,839 --> 00:38:16,000
find and then update the shrift and this

1060
00:38:16,000 --> 00:38:18,240
will give you a location of the file in

1061
00:38:18,240 --> 00:38:19,280
this case

1062
00:38:19,280 --> 00:38:21,520
you can see uh you can see the logic

1063
00:38:21,520 --> 00:38:22,880
here right so this is function

1064
00:38:22,880 --> 00:38:24,560
application

1065
00:38:24,560 --> 00:38:27,760
the logic to open a url so this is doing

1066
00:38:27,760 --> 00:38:31,119
a split right so url url absolute string

1067
00:38:31,119 --> 00:38:33,760
component separated by phone

1068
00:38:33,760 --> 00:38:35,760
call number so if you are familiar with

1069
00:38:35,760 --> 00:38:37,440
python this would be the equivalent of

1070
00:38:37,440 --> 00:38:39,040
doing a split

1071
00:38:39,040 --> 00:38:42,000
based on this string

1072
00:38:42,000 --> 00:38:43,760
or if you are using you are more

1073
00:38:43,760 --> 00:38:45,839
familiar with php for example this would

1074
00:38:45,839 --> 00:38:48,079
be the equivalent of doing explode so

1075
00:38:48,079 --> 00:38:49,760
you can explode on a string and then

1076
00:38:49,760 --> 00:38:51,520
this will give you an array

1077
00:38:51,520 --> 00:38:52,400
so

1078
00:38:52,400 --> 00:38:54,720
this is the the equivalent of that in

1079
00:38:54,720 --> 00:38:57,040
strip right so they are basically

1080
00:38:57,040 --> 00:39:00,079
looking for phone call number uh in the

1081
00:39:00,079 --> 00:39:01,680
url and then they are splitting this

1082
00:39:01,680 --> 00:39:05,200
into chunks so uh because

1083
00:39:05,200 --> 00:39:07,119
in computers everything starts with zero

1084
00:39:07,119 --> 00:39:08,240
right

1085
00:39:08,240 --> 00:39:10,560
the first chunk of the array will be

1086
00:39:10,560 --> 00:39:12,640
zero and then the second part of the

1087
00:39:12,640 --> 00:39:14,960
array whatever comes after

1088
00:39:14,960 --> 00:39:17,599
phone call number so the actual number

1089
00:39:17,599 --> 00:39:19,839
this will be in the in the position

1090
00:39:19,839 --> 00:39:21,119
number one

1091
00:39:21,119 --> 00:39:24,480
right so here we have a check so it's

1092
00:39:24,480 --> 00:39:27,040
basically checking if this is a number

1093
00:39:27,040 --> 00:39:29,920
if you can cast it to integer and then

1094
00:39:29,920 --> 00:39:32,240
if this casting is successful it says

1095
00:39:32,240 --> 00:39:34,480
okay this url is valid because

1096
00:39:34,480 --> 00:39:37,520
uh the phone number is an integer so i'm

1097
00:39:37,520 --> 00:39:39,280
just going to make a phone call right so

1098
00:39:39,280 --> 00:39:41,920
this is all the logic here and this is a

1099
00:39:41,920 --> 00:39:43,920
very interesting attack vector on mobile

1100
00:39:43,920 --> 00:39:46,800
applications because it's not just about

1101
00:39:46,800 --> 00:39:49,040
impersonating users but also if you can

1102
00:39:49,040 --> 00:39:50,800
get the phone to make a premium phone

1103
00:39:50,800 --> 00:39:51,680
call

1104
00:39:51,680 --> 00:39:53,680
then

1105
00:39:53,680 --> 00:39:55,359
you know this

1106
00:39:55,359 --> 00:39:58,000
can also be a good way for an attacker

1107
00:39:58,000 --> 00:40:00,400
to make money out of an attack because

1108
00:40:00,400 --> 00:40:02,640
you can make a premium phone call

1109
00:40:02,640 --> 00:40:04,720
and then the attack the attacker gets

1110
00:40:04,720 --> 00:40:07,760
money from from this call right

1111
00:40:07,760 --> 00:40:09,760
so this would be uh

1112
00:40:09,760 --> 00:40:11,920
without having xcode just opening that

1113
00:40:11,920 --> 00:40:14,640
in parameter and if you use xcode

1114
00:40:14,640 --> 00:40:17,599
it's basically the same thing but here

1115
00:40:17,599 --> 00:40:18,560
you would

1116
00:40:18,560 --> 00:40:21,200
navigate to this appdelegate.swift and

1117
00:40:21,200 --> 00:40:22,720
here you would see the source code live

1118
00:40:22,720 --> 00:40:25,440
function application and then this is

1119
00:40:25,440 --> 00:40:27,680
doing the split and this is can't cast

1120
00:40:27,680 --> 00:40:29,599
into integer

1121
00:40:29,599 --> 00:40:31,440
everything else is the same right but

1122
00:40:31,440 --> 00:40:33,040
this is how you would look at it and

1123
00:40:33,040 --> 00:40:36,160
this is the nice syntax highlighting

1124
00:40:36,160 --> 00:40:39,760
with all the pretty colors in xcode

1125
00:40:39,760 --> 00:40:41,599
so

1126
00:40:41,599 --> 00:40:44,079
now we know the format of urls after

1127
00:40:44,079 --> 00:40:46,079
looking at the source code so you would

1128
00:40:46,079 --> 00:40:48,640
also have to do something like this with

1129
00:40:48,640 --> 00:40:50,880
periscope or other applications you also

1130
00:40:50,880 --> 00:40:53,359
need to for example to find that slash

1131
00:40:53,359 --> 00:40:55,200
follow that i showed before you would

1132
00:40:55,200 --> 00:40:56,800
also need to look at the source code and

1133
00:40:56,800 --> 00:40:58,640
understand it to figure to figure that

1134
00:40:58,640 --> 00:40:59,440
out

1135
00:40:59,440 --> 00:41:01,280
in this case it was very easy to see

1136
00:41:01,280 --> 00:41:02,640
this in the

1137
00:41:02,640 --> 00:41:05,119
app delegate so this tells us that the

1138
00:41:05,119 --> 00:41:06,800
urls are something like this then

1139
00:41:06,800 --> 00:41:09,119
vulnerability secure swift phone call

1140
00:41:09,119 --> 00:41:11,359
number and then the actual number

1141
00:41:11,359 --> 00:41:13,119
of them vulnerable and secure phone call

1142
00:41:13,119 --> 00:41:16,160
number and the number here right so uh

1143
00:41:16,160 --> 00:41:18,560
if we click on these links they will be

1144
00:41:18,560 --> 00:41:20,000
opened

1145
00:41:20,000 --> 00:41:21,680
in the

1146
00:41:21,680 --> 00:41:23,599
in the application so

1147
00:41:23,599 --> 00:41:26,000
uh if you click on this link from the

1148
00:41:26,000 --> 00:41:27,839
slides ideally you should open these

1149
00:41:27,839 --> 00:41:30,560
links from your phone to test this you

1150
00:41:30,560 --> 00:41:32,800
don't need a jailbroken phone actually

1151
00:41:32,800 --> 00:41:35,119
for this exercise so if you just have an

1152
00:41:35,119 --> 00:41:36,800
ios device and it's not just broken it

1153
00:41:36,800 --> 00:41:38,400
will still work

1154
00:41:38,400 --> 00:41:39,520
um

1155
00:41:39,520 --> 00:41:41,599
and then you just open these and click

1156
00:41:41,599 --> 00:41:43,200
on the links and you will see what

1157
00:41:43,200 --> 00:41:46,720
happened so this is the html of

1158
00:41:46,720 --> 00:41:50,000
this page right that you can open in

1159
00:41:50,000 --> 00:41:51,359
your browser

1160
00:41:51,359 --> 00:41:54,480
and then uh this is just showing the

1161
00:41:54,480 --> 00:41:56,160
entire url so that you know what you're

1162
00:41:56,160 --> 00:41:57,200
doing

1163
00:41:57,200 --> 00:41:59,839
which is useful for a demo but of course

1164
00:41:59,839 --> 00:42:01,920
in a real attack this would say win an

1165
00:42:01,920 --> 00:42:05,119
ipad now uh click here to get this much

1166
00:42:05,119 --> 00:42:07,280
money or something like that right so

1167
00:42:07,280 --> 00:42:09,440
something you you want the click so you

1168
00:42:09,440 --> 00:42:11,440
will have like some text to entice the

1169
00:42:11,440 --> 00:42:13,520
user to click

1170
00:42:13,520 --> 00:42:15,520
but this is how this will look

1171
00:42:15,520 --> 00:42:18,240
so when you click uh the use all the

1172
00:42:18,240 --> 00:42:20,160
user sees is something like this opening

1173
00:42:20,160 --> 00:42:22,800
number when you secure version two

1174
00:42:22,800 --> 00:42:24,480
and then you have canceller open so if

1175
00:42:24,480 --> 00:42:27,680
you uh tap on open then you will get the

1176
00:42:27,680 --> 00:42:31,200
success uh making the call right so

1177
00:42:31,200 --> 00:42:33,280
so this is a very interesting attack

1178
00:42:33,280 --> 00:42:35,599
because it calls phone numbers and this

1179
00:42:35,599 --> 00:42:37,839
can be a serious issue in the mobile

1180
00:42:37,839 --> 00:42:39,520
environment due to the possibility of

1181
00:42:39,520 --> 00:42:41,839
making the app bring premium numbers

1182
00:42:41,839 --> 00:42:44,720
right so the attackers can monetize the

1183
00:42:44,720 --> 00:42:47,119
attack more easily so now it's more time

1184
00:42:47,119 --> 00:42:47,330
to

1185
00:42:47,330 --> 00:42:49,200
[Music]

1186
00:42:49,200 --> 00:42:50,319
the demo

1187
00:42:50,319 --> 00:42:52,400
so let me show you

1188
00:42:52,400 --> 00:42:54,000
now of course since you have access to

1189
00:42:54,000 --> 00:42:55,680
the slides and the apps and everything

1190
00:42:55,680 --> 00:42:58,480
else you can try this on your own later

1191
00:42:58,480 --> 00:43:00,720
so this is why this is not just webinar

1192
00:43:00,720 --> 00:43:02,880
but also a workshop

1193
00:43:02,880 --> 00:43:05,520
but since we only have one hour i'm just

1194
00:43:05,520 --> 00:43:07,200
rushing through this a little bit

1195
00:43:07,200 --> 00:43:09,200
because we we still have to talk about

1196
00:43:09,200 --> 00:43:11,200
xss which i think you will like a lot

1197
00:43:11,200 --> 00:43:13,280
right so this is the downvoting secure

1198
00:43:13,280 --> 00:43:14,720
application

1199
00:43:14,720 --> 00:43:17,200
and i'm now opening safari

1200
00:43:17,200 --> 00:43:20,079
and here i have

1201
00:43:20,079 --> 00:43:21,359
this page

1202
00:43:21,359 --> 00:43:24,319
so if i tap i'm just making this bigger

1203
00:43:24,319 --> 00:43:27,920
because i have fat fingers so if i

1204
00:43:27,920 --> 00:43:29,359
tap on the first

1205
00:43:29,359 --> 00:43:31,200
link you can see i'm getting this

1206
00:43:31,200 --> 00:43:32,560
success

1207
00:43:32,560 --> 00:43:35,280
so i'm now hitting okay and now if i go

1208
00:43:35,280 --> 00:43:38,079
back to safari and i hit the second link

1209
00:43:38,079 --> 00:43:40,000
you can see that i'm also getting this

1210
00:43:40,000 --> 00:43:41,920
success right so i'm closing it then i

1211
00:43:41,920 --> 00:43:43,599
go to safari

1212
00:43:43,599 --> 00:43:46,160
and when i do it every time i do it uh

1213
00:43:46,160 --> 00:43:48,079
the phone call is made right so this is

1214
00:43:48,079 --> 00:43:49,359
how

1215
00:43:49,359 --> 00:43:52,079
this works right so very interesting

1216
00:43:52,079 --> 00:43:52,960
it's a

1217
00:43:52,960 --> 00:43:54,640
relatively simple

1218
00:43:54,640 --> 00:43:57,359
attack but it's a quite effective

1219
00:43:57,359 --> 00:43:59,359
an interesting attack you know

1220
00:43:59,359 --> 00:44:01,119
um there's another

1221
00:44:01,119 --> 00:44:03,599
if you go to the store there's also a

1222
00:44:03,599 --> 00:44:04,640
free

1223
00:44:04,640 --> 00:44:06,319
workshop called

1224
00:44:06,319 --> 00:44:08,880
practical mobile app attacks by example

1225
00:44:08,880 --> 00:44:10,720
and in there in the slides i show you

1226
00:44:10,720 --> 00:44:13,280
another very interesting scenario where

1227
00:44:13,280 --> 00:44:14,960
there was an application looking for an

1228
00:44:14,960 --> 00:44:17,200
update and then the update because if

1229
00:44:17,200 --> 00:44:19,599
this check was done using clear text

1230
00:44:19,599 --> 00:44:20,720
http

1231
00:44:20,720 --> 00:44:24,079
the update url was changed to uh to a

1232
00:44:24,079 --> 00:44:25,520
phone number

1233
00:44:25,520 --> 00:44:28,079
and then when you tapped on update

1234
00:44:28,079 --> 00:44:30,079
application instead of updating the

1235
00:44:30,079 --> 00:44:33,119
application the application was ringing

1236
00:44:33,119 --> 00:44:34,960
a premium phone number right so this is

1237
00:44:34,960 --> 00:44:37,200
another way in which you could pull off

1238
00:44:37,200 --> 00:44:39,280
an attack like this right right so

1239
00:44:39,280 --> 00:44:41,920
pretty cool but now let's talk about xss

1240
00:44:41,920 --> 00:44:44,960
so xss attacks and datex filtration on

1241
00:44:44,960 --> 00:44:47,200
android and ios so let's talk first

1242
00:44:47,200 --> 00:44:49,200
about android so web use and the

1243
00:44:49,200 --> 00:44:51,440
exclusion in android

1244
00:44:51,440 --> 00:44:54,560
powerview is basically a small browser

1245
00:44:54,560 --> 00:44:56,400
inside of the application

1246
00:44:56,400 --> 00:44:57,280
so

1247
00:44:57,280 --> 00:44:59,680
in principle if the webview is

1248
00:44:59,680 --> 00:45:02,400
configured insecurely it can have as

1249
00:45:02,400 --> 00:45:04,000
many permissions as the app that

1250
00:45:04,000 --> 00:45:05,599
includes it right so this is if the

1251
00:45:05,599 --> 00:45:08,079
webview is not locked down properly

1252
00:45:08,079 --> 00:45:09,839
so you can

1253
00:45:09,839 --> 00:45:12,400
you know it can enable javascript it can

1254
00:45:12,400 --> 00:45:13,760
enable

1255
00:45:13,760 --> 00:45:15,839
loading local content reading local

1256
00:45:15,839 --> 00:45:18,400
files so lots of things like this can be

1257
00:45:18,400 --> 00:45:21,599
enabled now in all versions of android

1258
00:45:21,599 --> 00:45:23,359
all the insecure settings were enabled

1259
00:45:23,359 --> 00:45:25,359
by default but with the passive time

1260
00:45:25,359 --> 00:45:27,760
because all security researchers

1261
00:45:27,760 --> 00:45:30,240
you know reported all these things now

1262
00:45:30,240 --> 00:45:33,280
by default things are a lot safer uh in

1263
00:45:33,280 --> 00:45:35,839
android but developers can still shoot

1264
00:45:35,839 --> 00:45:38,160
themselves in the foot by uh enabling

1265
00:45:38,160 --> 00:45:39,680
all these features

1266
00:45:39,680 --> 00:45:40,560
uh

1267
00:45:40,560 --> 00:45:41,440
to

1268
00:45:41,440 --> 00:45:43,359
uh to have vulnerabilities like the ones

1269
00:45:43,359 --> 00:45:45,599
that i'm going to show you now

1270
00:45:45,599 --> 00:45:47,920
so yeah and another thing is that native

1271
00:45:47,920 --> 00:45:49,680
android functions can sometimes be

1272
00:45:49,680 --> 00:45:51,359
accessed from webview right so in the

1273
00:45:51,359 --> 00:45:53,520
case of android there's these javascript

1274
00:45:53,520 --> 00:45:57,119
interfaces so um there was a bug about

1275
00:45:57,119 --> 00:45:59,280
this that was fixed in android but

1276
00:45:59,280 --> 00:46:01,119
depending on what the javascript

1277
00:46:01,119 --> 00:46:03,599
interface does this could still be a

1278
00:46:03,599 --> 00:46:05,359
problem in some cases right if you

1279
00:46:05,359 --> 00:46:07,920
expose too much you can with an xss you

1280
00:46:07,920 --> 00:46:09,680
could still invoke some android

1281
00:46:09,680 --> 00:46:12,480
functionality and things could get nasty

1282
00:46:12,480 --> 00:46:15,200
there as well in some it's cases right

1283
00:46:15,200 --> 00:46:16,480
so this is not

1284
00:46:16,480 --> 00:46:18,800
the command so what can you do

1285
00:46:18,800 --> 00:46:19,839
uh

1286
00:46:19,839 --> 00:46:21,599
with excesses on a webview right so one

1287
00:46:21,599 --> 00:46:24,240
thing could be html injection

1288
00:46:24,240 --> 00:46:26,480
now in some cases this might be

1289
00:46:26,480 --> 00:46:28,880
especially nowadays if this might be the

1290
00:46:28,880 --> 00:46:30,480
only thing you can do

1291
00:46:30,480 --> 00:46:32,800
with html injection but

1292
00:46:32,800 --> 00:46:36,079
even though it's only html injection it

1293
00:46:36,079 --> 00:46:38,720
can still be enough to to do damage

1294
00:46:38,720 --> 00:46:41,839
because with html injection you can for

1295
00:46:41,839 --> 00:46:44,400
example show a fake login page

1296
00:46:44,400 --> 00:46:45,680
that

1297
00:46:45,680 --> 00:46:48,000
points to an attacker website so if they

1298
00:46:48,000 --> 00:46:49,920
because of mobile devices you don't see

1299
00:46:49,920 --> 00:46:52,560
the url things need to be pretty there's

1300
00:46:52,560 --> 00:46:55,119
pretty much no space to to see the url

1301
00:46:55,119 --> 00:46:56,880
bar and all things like this

1302
00:46:56,880 --> 00:46:59,040
if you can get a nice html injection

1303
00:46:59,040 --> 00:47:00,880
that shows a believable

1304
00:47:00,880 --> 00:47:02,240
login page

1305
00:47:02,240 --> 00:47:04,880
uh you can use that to for example

1306
00:47:04,880 --> 00:47:06,720
capture credentials right so even if

1307
00:47:06,720 --> 00:47:09,520
it's only html injection it can get bad

1308
00:47:09,520 --> 00:47:11,119
just to say that

1309
00:47:11,119 --> 00:47:13,839
and then with xss we can do a lot more

1310
00:47:13,839 --> 00:47:15,599
of course we can change the page we can

1311
00:47:15,599 --> 00:47:17,920
invoke functionality from javascript and

1312
00:47:17,920 --> 00:47:21,359
so on now in some cases we can also do

1313
00:47:21,359 --> 00:47:23,359
datex filtration of local files that i

1314
00:47:23,359 --> 00:47:25,280
will show today

1315
00:47:25,280 --> 00:47:26,800
of course this is going to depend on the

1316
00:47:26,800 --> 00:47:28,800
security context and the webview

1317
00:47:28,800 --> 00:47:31,280
settings but it is possible

1318
00:47:31,280 --> 00:47:35,119
and if we can also do a user

1319
00:47:35,119 --> 00:47:37,280
impersonation using a cursor request

1320
00:47:37,280 --> 00:47:39,760
forgery using xss depending on the

1321
00:47:39,760 --> 00:47:41,760
application right so

1322
00:47:41,760 --> 00:47:44,240
if you have xss it might be possible as

1323
00:47:44,240 --> 00:47:46,240
well to send requests to the website or

1324
00:47:46,240 --> 00:47:48,319
read cookies or do other things like

1325
00:47:48,319 --> 00:47:50,640
this and with that you can get a much

1326
00:47:50,640 --> 00:47:53,680
higher level of impersonation now again

1327
00:47:53,680 --> 00:47:55,839
there's a lot of examples like this in

1328
00:47:55,839 --> 00:47:57,280
the free workshop that i mentioned

1329
00:47:57,280 --> 00:47:59,440
before that is available on the store

1330
00:47:59,440 --> 00:48:01,599
practical mobile app attacks by example

1331
00:48:01,599 --> 00:48:05,040
so almost four hours that workshop

1332
00:48:05,040 --> 00:48:07,200
so okay so let's talk about the

1333
00:48:07,200 --> 00:48:09,200
expectation in android for this we will

1334
00:48:09,200 --> 00:48:12,720
use an application called android goat

1335
00:48:12,720 --> 00:48:15,359
don't use the official one because we

1336
00:48:15,359 --> 00:48:17,119
had to change it so

1337
00:48:17,119 --> 00:48:19,119
the one in the training portal is is

1338
00:48:19,119 --> 00:48:21,359
modified to specifically show this

1339
00:48:21,359 --> 00:48:23,839
exercise with data exfiltration

1340
00:48:23,839 --> 00:48:26,160
so the official one will not work for

1341
00:48:26,160 --> 00:48:27,680
this so just get the one from the

1342
00:48:27,680 --> 00:48:29,359
training process again you

1343
00:48:29,359 --> 00:48:30,720
log in

1344
00:48:30,720 --> 00:48:32,880
and from the slides uh click on this

1345
00:48:32,880 --> 00:48:34,240
link while you're logged into the

1346
00:48:34,240 --> 00:48:35,760
training portal and this will download

1347
00:48:35,760 --> 00:48:36,480
the

1348
00:48:36,480 --> 00:48:40,240
apk and then you can follow the exercise

1349
00:48:40,240 --> 00:48:41,359
from there

1350
00:48:41,359 --> 00:48:44,240
so uh first we need because we want to

1351
00:48:44,240 --> 00:48:47,440
do data exfiltration right so we want to

1352
00:48:47,440 --> 00:48:49,760
delete some files

1353
00:48:49,760 --> 00:48:50,680
we need to

1354
00:48:50,680 --> 00:48:52,880
[Music]

1355
00:48:52,880 --> 00:48:54,480
let me

1356
00:48:54,480 --> 00:48:55,760
so

1357
00:48:55,760 --> 00:48:58,319
we need to

1358
00:48:58,640 --> 00:48:59,760
let me

1359
00:48:59,760 --> 00:49:01,839
see

1360
00:49:01,839 --> 00:49:04,000
we did first to create some files to

1361
00:49:04,000 --> 00:49:07,200
steal right so um we installed the apk

1362
00:49:07,200 --> 00:49:08,800
and we want to demonstrate stealing

1363
00:49:08,800 --> 00:49:10,400
files but first we need to create some

1364
00:49:10,400 --> 00:49:11,839
files to steal

1365
00:49:11,839 --> 00:49:14,000
on the application so for this we can go

1366
00:49:14,000 --> 00:49:16,079
to the insecure storage menu so this is

1367
00:49:16,079 --> 00:49:18,000
how it looks i will show this in the

1368
00:49:18,000 --> 00:49:19,440
demo as well so

1369
00:49:19,440 --> 00:49:20,559
you open

1370
00:49:20,559 --> 00:49:23,040
the version from the training portal

1371
00:49:23,040 --> 00:49:24,559
from under god and then you go to

1372
00:49:24,559 --> 00:49:26,400
insecure data storage

1373
00:49:26,400 --> 00:49:27,920
and now

1374
00:49:27,920 --> 00:49:30,480
there's two things one is to create a

1375
00:49:30,480 --> 00:49:32,319
shared preferences file and then the

1376
00:49:32,319 --> 00:49:34,400
other is sqlite

1377
00:49:34,400 --> 00:49:36,559
right so first create a preference file

1378
00:49:36,559 --> 00:49:38,720
and then you can put like my secret user

1379
00:49:38,720 --> 00:49:40,559
on my password so

1380
00:49:40,559 --> 00:49:43,359
the preference is part one

1381
00:49:43,359 --> 00:49:45,119
your username and your password and hit

1382
00:49:45,119 --> 00:49:46,400
save

1383
00:49:46,400 --> 00:49:49,920
and then create a sqlite uh database

1384
00:49:49,920 --> 00:49:52,640
file right so you go to sqlite and then

1385
00:49:52,640 --> 00:49:55,440
myuter and then that's where i hit save

1386
00:49:55,440 --> 00:49:57,920
so this will create an xml file for

1387
00:49:57,920 --> 00:50:00,960
preferences and a sql lite file

1388
00:50:00,960 --> 00:50:04,680
for this user right so here

1389
00:50:04,680 --> 00:50:06,160
[Music]

1390
00:50:06,160 --> 00:50:08,400
from this now we can navigate to the

1391
00:50:08,400 --> 00:50:10,880
input validation xss

1392
00:50:10,880 --> 00:50:13,280
and if you have followed this entire

1393
00:50:13,280 --> 00:50:16,079
exercise uh don't forget to delete this

1394
00:50:16,079 --> 00:50:18,880
file on the sd card right because uh

1395
00:50:18,880 --> 00:50:20,800
this is also a nice scenario about it

1396
00:50:20,800 --> 00:50:21,680
varied

1397
00:50:21,680 --> 00:50:24,079
so in here go to input validation and

1398
00:50:24,079 --> 00:50:27,280
then in validation xss and now

1399
00:50:27,280 --> 00:50:29,920
we will need to look for a html

1400
00:50:29,920 --> 00:50:32,000
injection right so you can insert like

1401
00:50:32,000 --> 00:50:34,400
h1 and hello and you will see that the

1402
00:50:34,400 --> 00:50:36,319
tabulator hello you can do immediate

1403
00:50:36,319 --> 00:50:38,800
text on a roller one or color one and it

1404
00:50:38,800 --> 00:50:40,640
will show you the alert

1405
00:50:40,640 --> 00:50:44,880
you can do okay i have xss but what is

1406
00:50:44,880 --> 00:50:46,640
the security context thing with this

1407
00:50:46,640 --> 00:50:48,480
exercise brand so you can do alert

1408
00:50:48,480 --> 00:50:52,160
location and this will show you um

1409
00:50:52,160 --> 00:50:54,640
the the place where this access is

1410
00:50:54,640 --> 00:50:56,960
running from so in this case because we

1411
00:50:56,960 --> 00:50:59,839
have a file this is very interesting

1412
00:50:59,839 --> 00:51:02,720
because from a file url we can probably

1413
00:51:02,720 --> 00:51:04,480
read local files and send them to an

1414
00:51:04,480 --> 00:51:05,839
attacker

1415
00:51:05,839 --> 00:51:09,280
so in this case we have 2xs access

1416
00:51:09,280 --> 00:51:11,200
access to demonstrate so one is on

1417
00:51:11,200 --> 00:51:12,720
internal storage

1418
00:51:12,720 --> 00:51:14,640
which is protected from other apps and

1419
00:51:14,640 --> 00:51:16,480
the other is an external storage which

1420
00:51:16,480 --> 00:51:20,319
is a very bad place to load html from

1421
00:51:20,319 --> 00:51:23,359
because uh other applications could for

1422
00:51:23,359 --> 00:51:24,319
example

1423
00:51:24,319 --> 00:51:27,200
write in this html and get xss even

1424
00:51:27,200 --> 00:51:29,680
though uh even if the application wasn't

1425
00:51:29,680 --> 00:51:32,000
vulnerable to access it just because

1426
00:51:32,000 --> 00:51:34,000
the html is loaded from an untrusted

1427
00:51:34,000 --> 00:51:36,960
location the sd card is a place where

1428
00:51:36,960 --> 00:51:38,880
all the other apps can can write a

1429
00:51:38,880 --> 00:51:41,440
modified files right

1430
00:51:41,440 --> 00:51:43,200
now for latex filtration we need to

1431
00:51:43,200 --> 00:51:45,599
figure out that so if your phone is

1432
00:51:45,599 --> 00:51:47,280
rooted you can

1433
00:51:47,280 --> 00:51:48,800
well you call the exercise you know the

1434
00:51:48,800 --> 00:51:49,760
paths

1435
00:51:49,760 --> 00:51:52,319
but you can do like adb shell and then

1436
00:51:52,319 --> 00:51:55,599
you navigate to um to this so data data

1437
00:51:55,599 --> 00:51:58,000
always at a goat and then share

1438
00:51:58,000 --> 00:52:00,559
preferences user.xml and databases a

1439
00:52:00,559 --> 00:52:02,800
good so these are the two files right so

1440
00:52:02,800 --> 00:52:07,119
this means we have uh urls to fill data

1441
00:52:07,119 --> 00:52:09,040
right so one is data data and then

1442
00:52:09,040 --> 00:52:11,440
surprises users xml and the other is

1443
00:52:11,440 --> 00:52:13,040
similar and then at the end we have a

1444
00:52:13,040 --> 00:52:14,160
code

1445
00:52:14,160 --> 00:52:16,800
so in both cases

1446
00:52:16,800 --> 00:52:19,920
we can insert this script and then uh

1447
00:52:19,920 --> 00:52:22,319
this will read the local file and alert

1448
00:52:22,319 --> 00:52:25,200
it demonstrating that uh with the xss we

1449
00:52:25,200 --> 00:52:27,599
can read the file and then in a real tag

1450
00:52:27,599 --> 00:52:29,440
you can also like send this to a

1451
00:52:29,440 --> 00:52:30,960
third-party website like an attacker

1452
00:52:30,960 --> 00:52:32,319
controlled website and that would

1453
00:52:32,319 --> 00:52:35,119
complete the feeling right so you can do

1454
00:52:35,119 --> 00:52:37,200
this by a certain field and then you hit

1455
00:52:37,200 --> 00:52:40,000
display and you will see

1456
00:52:40,000 --> 00:52:42,000
the credentials write my password my

1457
00:52:42,000 --> 00:52:44,400
secret

1458
00:52:44,480 --> 00:52:48,000
so that's how uh that works uh and then

1459
00:52:48,000 --> 00:52:49,680
it's important to know that this is not

1460
00:52:49,680 --> 00:52:53,119
limited to um to application files so

1461
00:52:53,119 --> 00:52:55,359
anything else that the application can

1462
00:52:55,359 --> 00:52:56,319
read

1463
00:52:56,319 --> 00:52:58,720
uh you could also steal like for example

1464
00:52:58,720 --> 00:53:01,280
if the file if the mobile app has access

1465
00:53:01,280 --> 00:53:03,200
to the sd card you can also read

1466
00:53:03,200 --> 00:53:05,440
anything on the sd card as long as you

1467
00:53:05,440 --> 00:53:06,880
know the path

1468
00:53:06,880 --> 00:53:08,480
right so uh

1469
00:53:08,480 --> 00:53:10,480
so yeah let's don't limit your health

1470
00:53:10,480 --> 00:53:12,960
application files you can also read

1471
00:53:12,960 --> 00:53:14,880
from the phone right so for example in a

1472
00:53:14,880 --> 00:53:17,280
real phone i could read like system etsy

1473
00:53:17,280 --> 00:53:18,880
custom conf

1474
00:53:18,880 --> 00:53:21,200
and you can also read files from other

1475
00:53:21,200 --> 00:53:23,520
apps if they have permissions that allow

1476
00:53:23,520 --> 00:53:26,000
this like this file from browser has

1477
00:53:26,000 --> 00:53:28,559
permissive permissions and it can also

1478
00:53:28,559 --> 00:53:29,520
be

1479
00:53:29,520 --> 00:53:30,880
read right so

1480
00:53:30,880 --> 00:53:34,079
this is an example of reading the file

1481
00:53:34,079 --> 00:53:36,240
from an android nine

1482
00:53:36,240 --> 00:53:37,520
right

1483
00:53:37,520 --> 00:53:39,440
so in summary we can exfiltrate

1484
00:53:39,440 --> 00:53:41,440
application files from the vulnerable

1485
00:53:41,440 --> 00:53:43,200
apps system files as long as the

1486
00:53:43,200 --> 00:53:44,960
application has permissions to read that

1487
00:53:44,960 --> 00:53:47,440
and files from other apps we can also

1488
00:53:47,440 --> 00:53:49,920
read any sd card file right so

1489
00:53:49,920 --> 00:53:51,440
methodology wise you're looking to

1490
00:53:51,440 --> 00:53:53,760
answer these questions right so can we

1491
00:53:53,760 --> 00:53:56,800
first you check this html injection and

1492
00:53:56,800 --> 00:53:59,200
you can see that there is then you can

1493
00:53:59,200 --> 00:54:01,359
check can we run javascript if you get

1494
00:54:01,359 --> 00:54:04,480
the alert one to pop that is a yes

1495
00:54:04,480 --> 00:54:06,880
then what's what is the security context

1496
00:54:06,880 --> 00:54:09,119
in which the xss runs so you can figure

1497
00:54:09,119 --> 00:54:11,440
that out with other location

1498
00:54:11,440 --> 00:54:13,359
and if it shows you filed in the

1499
00:54:13,359 --> 00:54:15,599
privileged context so

1500
00:54:15,599 --> 00:54:17,440
it means there's no same origin policy

1501
00:54:17,440 --> 00:54:19,280
protection so we should be able to read

1502
00:54:19,280 --> 00:54:20,800
local files

1503
00:54:20,800 --> 00:54:24,319
and then we can say okay if

1504
00:54:24,319 --> 00:54:26,160
if those things are the case then can we

1505
00:54:26,160 --> 00:54:28,319
read local files so you can try to

1506
00:54:28,319 --> 00:54:29,520
read some of the files from the

1507
00:54:29,520 --> 00:54:32,480
application and we confirm that there

1508
00:54:32,480 --> 00:54:34,960
can be them another possibility is

1509
00:54:34,960 --> 00:54:37,040
access through sd card

1510
00:54:37,040 --> 00:54:40,240
manipulation so because the file

1511
00:54:40,240 --> 00:54:42,640
is on the sd card

1512
00:54:42,640 --> 00:54:44,559
we can also like

1513
00:54:44,559 --> 00:54:47,119
change the html file and get the alert

1514
00:54:47,119 --> 00:54:50,400
to pop up immediately right so you can

1515
00:54:50,400 --> 00:54:52,880
navigate find the file on the sd card

1516
00:54:52,880 --> 00:54:55,440
and then you could do adb pool change it

1517
00:54:55,440 --> 00:54:57,440
on your computer and then you do adb

1518
00:54:57,440 --> 00:54:58,640
push

1519
00:54:58,640 --> 00:55:01,280
after inserting some

1520
00:55:01,280 --> 00:55:05,280
html injection there mxss and then we

1521
00:55:05,280 --> 00:55:07,599
will give you persistent success just

1522
00:55:07,599 --> 00:55:09,920
because the html file was loaded from an

1523
00:55:09,920 --> 00:55:12,319
inspector located in the sd card

1524
00:55:12,319 --> 00:55:14,400
right so input validation success and

1525
00:55:14,400 --> 00:55:15,760
then when you click on it you will get

1526
00:55:15,760 --> 00:55:17,760
the alert immediately if you do that

1527
00:55:17,760 --> 00:55:20,480
part of the exercise

1528
00:55:20,480 --> 00:55:22,880
mode for analysis

1529
00:55:22,880 --> 00:55:25,839
uh you can sort by time because it does

1530
00:55:25,839 --> 00:55:29,119
this like by hash so by doing ls-lt this

1531
00:55:29,119 --> 00:55:30,799
will sort by time so it will give you

1532
00:55:30,799 --> 00:55:32,400
the most recent

1533
00:55:32,400 --> 00:55:36,000
scan at the top and then inside of there

1534
00:55:36,000 --> 00:55:39,680
you can copy this file and you can

1535
00:55:39,680 --> 00:55:41,520
change this

1536
00:55:41,520 --> 00:55:43,760
this hash to just decompile to give it a

1537
00:55:43,760 --> 00:55:45,680
little bit more sense and inside of

1538
00:55:45,680 --> 00:55:48,160
there you can look for external turrets

1539
00:55:48,160 --> 00:55:49,599
to try to find

1540
00:55:49,599 --> 00:55:51,920
the issue right so since we're running a

1541
00:55:51,920 --> 00:55:53,839
little bit short on time

1542
00:55:53,839 --> 00:55:57,040
the issue here on the xss is that uh max

1543
00:55:57,040 --> 00:55:58,880
success vulnerability that this document

1544
00:55:58,880 --> 00:56:00,000
does right

1545
00:56:00,000 --> 00:56:01,920
on user input

1546
00:56:01,920 --> 00:56:04,319
so that's the the xss

1547
00:56:04,319 --> 00:56:07,200
then you can keep looking for uh okay

1548
00:56:07,200 --> 00:56:09,040
where is this html file and this will

1549
00:56:09,040 --> 00:56:12,160
point you to the vulnerable activity

1550
00:56:12,160 --> 00:56:14,480
inside of here you can see all the

1551
00:56:14,480 --> 00:56:16,640
secure with your headings that make this

1552
00:56:16,640 --> 00:56:18,559
uh possible right so a developer can

1553
00:56:18,559 --> 00:56:21,760
enable this and then kind of attack can

1554
00:56:21,760 --> 00:56:23,839
work the other thing is

1555
00:56:23,839 --> 00:56:26,000
while url you can see there's a load url

1556
00:56:26,000 --> 00:56:28,720
of a file url so this is another

1557
00:56:28,720 --> 00:56:31,680
red flag so some recommendations if

1558
00:56:31,680 --> 00:56:33,280
possible you had experience in this

1559
00:56:33,280 --> 00:56:34,799
views you won't have

1560
00:56:34,799 --> 00:56:36,240
xss

1561
00:56:36,240 --> 00:56:38,319
because they only allow text if you have

1562
00:56:38,319 --> 00:56:40,160
to use web views try to disable

1563
00:56:40,160 --> 00:56:42,880
javascript try to disable

1564
00:56:42,880 --> 00:56:46,160
file access and all those other things

1565
00:56:46,160 --> 00:56:48,960
then output encode user input prior to

1566
00:56:48,960 --> 00:56:50,799
rendering it on any web view and then

1567
00:56:50,799 --> 00:56:53,599
avoid dom access things as much as

1568
00:56:53,599 --> 00:56:55,839
possible or otherwise sanitize user

1569
00:56:55,839 --> 00:56:57,599
input prior to assigning it to other

1570
00:56:57,599 --> 00:57:00,000
messages sync like inner html location

1571
00:57:00,000 --> 00:57:02,319
href and so on right so if you look at

1572
00:57:02,319 --> 00:57:04,799
the always accesses prevention cheats it

1573
00:57:04,799 --> 00:57:05,839
has

1574
00:57:05,839 --> 00:57:06,960
a lot of

1575
00:57:06,960 --> 00:57:08,880
producer with this let me do a quick

1576
00:57:08,880 --> 00:57:10,559
demo about this so

1577
00:57:10,559 --> 00:57:11,599
um

1578
00:57:11,599 --> 00:57:14,480
for this one i need to open

1579
00:57:14,480 --> 00:57:16,160
hundred golf

1580
00:57:16,160 --> 00:57:18,480
so i just go here

1581
00:57:18,480 --> 00:57:20,320
to undergo first we need to

1582
00:57:20,320 --> 00:57:22,000
[Music]

1583
00:57:22,000 --> 00:57:24,240
remove this somewhere else

1584
00:57:24,240 --> 00:57:26,319
first we need to create some files so go

1585
00:57:26,319 --> 00:57:27,920
to insecure data storage server

1586
00:57:27,920 --> 00:57:31,359
preferences part one and put my username

1587
00:57:31,359 --> 00:57:34,000
on my password

1588
00:57:34,000 --> 00:57:36,480
and i hit save

1589
00:57:36,480 --> 00:57:39,520
so that's the first part now i have to

1590
00:57:39,520 --> 00:57:41,119
go back here

1591
00:57:41,119 --> 00:57:44,319
and now go to sql lite and here my sql

1592
00:57:44,319 --> 00:57:46,079
live user

1593
00:57:46,079 --> 00:57:48,799
and my sqlite

1594
00:57:48,799 --> 00:57:49,839
password

1595
00:57:49,839 --> 00:57:51,520
hit save on this

1596
00:57:51,520 --> 00:57:54,960
now the data is saved and now we can go

1597
00:57:54,960 --> 00:57:57,520
to the actual xss vulnerability because

1598
00:57:57,520 --> 00:57:59,839
there is data to steal right so we go

1599
00:57:59,839 --> 00:58:01,599
here to input validations input

1600
00:58:01,599 --> 00:58:03,760
validations xss

1601
00:58:03,760 --> 00:58:06,160
and inside of here we have these fields

1602
00:58:06,160 --> 00:58:07,119
so

1603
00:58:07,119 --> 00:58:08,799
since we're a little bit

1604
00:58:08,799 --> 00:58:10,240
short on time i'll just try all the

1605
00:58:10,240 --> 00:58:12,000
payloads at once

1606
00:58:12,000 --> 00:58:14,480
so that we still have time to cover uh

1607
00:58:14,480 --> 00:58:15,920
ios

1608
00:58:15,920 --> 00:58:20,160
so yeah i'm just going to copy all this

1609
00:58:20,160 --> 00:58:22,400
so you can copy all that and then go

1610
00:58:22,400 --> 00:58:23,520
back

1611
00:58:23,520 --> 00:58:25,440
to here

1612
00:58:25,440 --> 00:58:27,520
and just paste this

1613
00:58:27,520 --> 00:58:29,359
and then uh now i can explain what's

1614
00:58:29,359 --> 00:58:32,000
going on right so here we have the hello

1615
00:58:32,000 --> 00:58:34,079
that is bigger so this is the html

1616
00:58:34,079 --> 00:58:35,760
injection this is the alert one so we

1617
00:58:35,760 --> 00:58:38,240
have javascript execution

1618
00:58:38,240 --> 00:58:40,799
this is the alert location so we can see

1619
00:58:40,799 --> 00:58:42,960
this is being loaded from a file url

1620
00:58:42,960 --> 00:58:43,839
which

1621
00:58:43,839 --> 00:58:46,799
means this hope for exfiltrating local

1622
00:58:46,799 --> 00:58:48,799
files this is actually reading the

1623
00:58:48,799 --> 00:58:50,880
preference files so you can see my

1624
00:58:50,880 --> 00:58:53,280
username and my password we can read the

1625
00:58:53,280 --> 00:58:55,680
user credentials

1626
00:58:55,680 --> 00:58:57,680
using this xss

1627
00:58:57,680 --> 00:58:59,920
this is the html

1628
00:58:59,920 --> 00:59:02,480
and the xml sorry and here we can see

1629
00:59:02,480 --> 00:59:05,040
that we can also read the sqlite

1630
00:59:05,040 --> 00:59:06,960
database and we can see the credentials

1631
00:59:06,960 --> 00:59:09,760
here like my sqlite user my sqlite

1632
00:59:09,760 --> 00:59:12,799
password so the credentials are visible

1633
00:59:12,799 --> 00:59:14,720
uh here right so

1634
00:59:14,720 --> 00:59:16,400
yeah that's this is some examples this

1635
00:59:16,400 --> 00:59:18,559
is the binary from browser so we can

1636
00:59:18,559 --> 00:59:19,920
also read

1637
00:59:19,920 --> 00:59:21,920
files from other applications as long as

1638
00:59:21,920 --> 00:59:24,400
we have read access

1639
00:59:24,400 --> 00:59:28,000
and i think that is pretty much it so

1640
00:59:28,000 --> 00:59:31,599
it's for android so let me now show you

1641
00:59:31,599 --> 00:59:34,079
the equivalent on ios so an ios is

1642
00:59:34,079 --> 00:59:36,240
pretty much the same thing right so

1643
00:59:36,240 --> 00:59:38,000
we will use them vulnerable in secure so

1644
00:59:38,000 --> 00:59:40,640
go to web issues and start telling

1645
00:59:40,640 --> 00:59:43,599
here we enter the payload from the top

1646
00:59:43,599 --> 00:59:45,599
menu so you can do the same thing like

1647
00:59:45,599 --> 00:59:47,599
hello with one

1648
00:59:47,599 --> 00:59:51,119
image for text owner alert one another

1649
00:59:51,119 --> 00:59:53,760
location and then try to read a local

1650
00:59:53,760 --> 00:59:55,839
file in this case we can try to read the

1651
00:59:55,839 --> 00:59:57,920
cellular usage and other

1652
00:59:57,920 --> 01:00:01,520
files like this from the phone so

1653
01:00:01,520 --> 01:00:03,920
this is how it looks uh so we're trying

1654
01:00:03,920 --> 01:00:06,240
to answer the same question uh do we

1655
01:00:06,240 --> 01:00:08,240
have xss where is the exercise running

1656
01:00:08,240 --> 01:00:10,720
from when we read local files the answer

1657
01:00:10,720 --> 01:00:13,680
to all the yes and let's look for the

1658
01:00:13,680 --> 01:00:16,480
kind of issues you would grab for wk

1659
01:00:16,480 --> 01:00:19,200
webview and ui webview so these are the

1660
01:00:19,200 --> 01:00:22,559
two main kind of webviews uh in ios so

1661
01:00:22,559 --> 01:00:23,920
you can grab

1662
01:00:23,920 --> 01:00:25,440
through this to the

1663
01:00:25,440 --> 01:00:27,040
on the source code

1664
01:00:27,040 --> 01:00:29,200
try to find the vulnerability here we

1665
01:00:29,200 --> 01:00:31,200
can see the vulnerability in the extreme

1666
01:00:31,200 --> 01:00:32,960
concatenation

1667
01:00:32,960 --> 01:00:35,119
now the syntax highlighting here is not

1668
01:00:35,119 --> 01:00:36,960
great so you cannot see that name is

1669
01:00:36,960 --> 01:00:38,960
actually a string concatenation in swift

1670
01:00:38,960 --> 01:00:41,359
with this backlash

1671
01:00:41,359 --> 01:00:42,960
um

1672
01:00:42,960 --> 01:00:44,559
but here you can see

1673
01:00:44,559 --> 01:00:46,640
in xcode if you open the same file you

1674
01:00:46,640 --> 01:00:48,559
can see that name is a different color

1675
01:00:48,559 --> 01:00:50,240
than the rest of the string because this

1676
01:00:50,240 --> 01:00:51,920
is a string concatenation so this is the

1677
01:00:51,920 --> 01:00:54,839
vulnerability and the other part of the

1678
01:00:54,839 --> 01:00:57,440
vulnerability here is that this is using

1679
01:00:57,440 --> 01:01:00,480
a ui webview which is more insecure by

1680
01:01:00,480 --> 01:01:04,160
default and also there is no url so if

1681
01:01:04,160 --> 01:01:07,280
there is no url if base url is nil this

1682
01:01:07,280 --> 01:01:10,079
means we can also exclude the data right

1683
01:01:10,079 --> 01:01:12,319
so

1684
01:01:12,319 --> 01:01:14,960
so yeah so this uh is issue this issue

1685
01:01:14,960 --> 01:01:17,040
is possible due to the fact that webkit

1686
01:01:17,040 --> 01:01:19,200
allow universal access from file urls

1687
01:01:19,200 --> 01:01:21,119
and webkit allow file access from fail

1688
01:01:21,119 --> 01:01:23,359
urls these two insecure settings are

1689
01:01:23,359 --> 01:01:25,680
enabled by default on ui webviews which

1690
01:01:25,680 --> 01:01:28,160
are the old webviews but a lot of ios

1691
01:01:28,160 --> 01:01:30,319
developers still use it

1692
01:01:30,319 --> 01:01:32,160
and these settings are disabled by

1693
01:01:32,160 --> 01:01:34,880
default on the wk webview which is newer

1694
01:01:34,880 --> 01:01:37,440
faster and more secure by default right

1695
01:01:37,440 --> 01:01:39,359
so you should always try to use wk

1696
01:01:39,359 --> 01:01:42,559
webviews if you are an ios developer

1697
01:01:42,559 --> 01:01:45,520
however you can also misconfigure a wk

1698
01:01:45,520 --> 01:01:47,760
webview to enable these insecure

1699
01:01:47,760 --> 01:01:50,319
settings and then you would also have

1700
01:01:50,319 --> 01:01:51,680
these types

1701
01:01:51,680 --> 01:01:52,720
issue

1702
01:01:52,720 --> 01:01:54,079
well let's do a quick bit more about

1703
01:01:54,079 --> 01:01:56,480
this before we wrap

1704
01:01:56,480 --> 01:01:57,280
so

1705
01:01:57,280 --> 01:01:58,640
here

1706
01:01:58,640 --> 01:02:00,720
we have to

1707
01:02:00,720 --> 01:02:03,599
move a little bit here to the right

1708
01:02:03,599 --> 01:02:04,839
so we have

1709
01:02:04,839 --> 01:02:08,559
to tap on the menu and then we scroll to

1710
01:02:08,559 --> 01:02:10,799
web issues start challenge

1711
01:02:10,799 --> 01:02:14,160
and here i'm just going to open safari

1712
01:02:14,160 --> 01:02:16,559
and what i want to do is

1713
01:02:16,559 --> 01:02:18,720
just copy the payloads from here now you

1714
01:02:18,720 --> 01:02:20,400
can click on the link

1715
01:02:20,400 --> 01:02:22,400
from the slides and open it

1716
01:02:22,400 --> 01:02:24,000
on

1717
01:02:24,000 --> 01:02:25,599
this something else

1718
01:02:25,599 --> 01:02:27,950
so just copy this

1719
01:02:27,950 --> 01:02:30,000
[Music]

1720
01:02:30,000 --> 01:02:33,039
so now i can go back here and paste the

1721
01:02:33,039 --> 01:02:34,319
payload

1722
01:02:34,319 --> 01:02:36,160
and hit return

1723
01:02:36,160 --> 01:02:38,400
so now um

1724
01:02:38,400 --> 01:02:40,079
we can see all these right so here we

1725
01:02:40,079 --> 01:02:42,240
can see this about null right so there's

1726
01:02:42,240 --> 01:02:44,480
no url and we can see apple web data so

1727
01:02:44,480 --> 01:02:45,920
apple web data

1728
01:02:45,920 --> 01:02:48,720
is a sensitive url because it's a url

1729
01:02:48,720 --> 01:02:50,640
that is more privileged this kind of

1730
01:02:50,640 --> 01:02:52,720
file url so

1731
01:02:52,720 --> 01:02:55,119
this means that if this is a ui web view

1732
01:02:55,119 --> 01:02:57,440
and the url is apple with data there is

1733
01:02:57,440 --> 01:03:00,400
hope to exfiltrate files also note that

1734
01:03:00,400 --> 01:03:03,680
in ios there's these random

1735
01:03:03,680 --> 01:03:05,119
ids

1736
01:03:05,119 --> 01:03:07,440
and this is giving the the id away right

1737
01:03:07,440 --> 01:03:08,799
so you can

1738
01:03:08,799 --> 01:03:11,520
using this id now you can probably like

1739
01:03:11,520 --> 01:03:14,319
read some local files that use this id

1740
01:03:14,319 --> 01:03:15,680
as well

1741
01:03:15,680 --> 01:03:17,920
this is the alert one

1742
01:03:17,920 --> 01:03:21,039
now this is reading the

1743
01:03:21,039 --> 01:03:23,599
phone call history

1744
01:03:23,599 --> 01:03:25,760
and this is reading another sql lite

1745
01:03:25,760 --> 01:03:27,599
file right so this is just demonstrating

1746
01:03:27,599 --> 01:03:29,039
that we can read

1747
01:03:29,039 --> 01:03:30,640
local files

1748
01:03:30,640 --> 01:03:31,839
so

1749
01:03:31,839 --> 01:03:34,160
yeah i think with this we are pretty

1750
01:03:34,160 --> 01:03:35,599
much done so

1751
01:03:35,599 --> 01:03:38,880
so yeah now it's time for questions

1752
01:03:38,880 --> 01:03:40,559
i would also like to mention that

1753
01:03:40,559 --> 01:03:43,599
there's more free workshops in the store

1754
01:03:43,599 --> 01:03:45,680
so you can tell your friends to go there

1755
01:03:45,680 --> 01:03:48,079
to the store and get any other

1756
01:03:48,079 --> 01:03:50,160
store now some people were confused

1757
01:03:50,160 --> 01:03:52,960
about the personal discount and referral

1758
01:03:52,960 --> 01:03:55,359
link so i created a quick youtube video

1759
01:03:55,359 --> 01:03:56,720
today about it

1760
01:03:56,720 --> 01:03:59,039
so you can see that let me just paste

1761
01:03:59,039 --> 01:04:00,960
all these uh on the

1762
01:04:00,960 --> 01:04:02,720
on that

1763
01:04:02,720 --> 01:04:03,839
um

1764
01:04:03,839 --> 01:04:06,319
and just to mention that it's a live

1765
01:04:06,319 --> 01:04:07,839
training

1766
01:04:07,839 --> 01:04:10,160
next week right so let me paste all that

1767
01:04:10,160 --> 01:04:12,960
so you have all those links now i'm just

1768
01:04:12,960 --> 01:04:16,640
going to go back to uh

1769
01:04:16,640 --> 01:04:18,160
to the to the

1770
01:04:18,160 --> 01:04:20,079
just to answer your questions right so

1771
01:04:20,079 --> 01:04:21,599
let's see

1772
01:04:21,599 --> 01:04:23,040
your voice is breaking

1773
01:04:23,040 --> 01:04:24,319
[Music]

1774
01:04:24,319 --> 01:04:26,079
i hope you could all hear me fine i'm

1775
01:04:26,079 --> 01:04:28,400
not sure if that's a problem

1776
01:04:28,400 --> 01:04:31,680
with your connection or i hope everybody

1777
01:04:31,680 --> 01:04:33,119
could

1778
01:04:33,119 --> 01:04:35,119
hear me fine if not there's also a

1779
01:04:35,119 --> 01:04:37,599
recording on the training portal

1780
01:04:37,599 --> 01:04:39,359
um

1781
01:04:39,359 --> 01:04:41,520
okay can we get the link for all pdf

1782
01:04:41,520 --> 01:04:43,599
mentioned in the slides uh yeah well i

1783
01:04:43,599 --> 01:04:45,440
mean you have the slides so you can see

1784
01:04:45,440 --> 01:04:47,280
all the links there

1785
01:04:47,280 --> 01:04:48,079
um

1786
01:04:48,079 --> 01:04:50,640
okay is there an easy way to grab the

1787
01:04:50,640 --> 01:04:53,440
app manifest on the device or do you

1788
01:04:53,440 --> 01:04:55,680
need to grab the apk offline and

1789
01:04:55,680 --> 01:04:56,880
decompile

1790
01:04:56,880 --> 01:04:58,480
so

1791
01:04:58,480 --> 01:05:01,039
um there's a lot of ways to get the apk

1792
01:05:01,039 --> 01:05:03,680
from the device in the course we cover

1793
01:05:03,680 --> 01:05:06,640
some techniques to do this but also

1794
01:05:06,640 --> 01:05:09,280
this uh a free application that you can

1795
01:05:09,280 --> 01:05:10,079
get

1796
01:05:10,079 --> 01:05:11,920
on google play

1797
01:05:11,920 --> 01:05:14,960
um that you can use without root or

1798
01:05:14,960 --> 01:05:18,079
anything and it will give you the apk

1799
01:05:18,079 --> 01:05:18,880
for

1800
01:05:18,880 --> 01:05:21,119
any device

1801
01:05:21,119 --> 01:05:23,760
uh another question i've just checked

1802
01:05:23,760 --> 01:05:25,680
the seven security website what are the

1803
01:05:25,680 --> 01:05:27,440
charges for this complete android and

1804
01:05:27,440 --> 01:05:29,200
ios training from scratch i can see the

1805
01:05:29,200 --> 01:05:31,119
price on the website uh the prices are

1806
01:05:31,119 --> 01:05:32,319
on the store

1807
01:05:32,319 --> 01:05:34,160
so you if you just go to the store the

1808
01:05:34,160 --> 01:05:35,760
links that i just placed in the chat you

1809
01:05:35,760 --> 01:05:38,319
can see them there but again you all

1810
01:05:38,319 --> 01:05:40,000
have this

1811
01:05:40,000 --> 01:05:41,920
this discount code that you can use

1812
01:05:41,920 --> 01:05:42,960
right so

1813
01:05:42,960 --> 01:05:47,520
it's all 100 less than whatever you see

1814
01:05:47,520 --> 01:05:49,760
it looks like an old vulnerability found

1815
01:05:49,760 --> 01:05:52,559
in skype i was able to call by a deep

1816
01:05:52,559 --> 01:05:55,200
link yes so a lot of applications are

1817
01:05:55,200 --> 01:05:57,599
actually vulnerable to stuff like this

1818
01:05:57,599 --> 01:05:59,839
so you mentioned skype and in the course

1819
01:05:59,839 --> 01:06:02,319
we have periscope and shopify so they're

1820
01:06:02,319 --> 01:06:03,520
all very

1821
01:06:03,520 --> 01:06:05,440
you know high profile and widely used

1822
01:06:05,440 --> 01:06:07,119
applications so yes a lot of well-known

1823
01:06:07,119 --> 01:06:08,960
applications have been

1824
01:06:08,960 --> 01:06:11,119
affected by this can anywhere share the

1825
01:06:11,119 --> 01:06:13,920
complete price uh of mobile attend

1826
01:06:13,920 --> 01:06:17,680
testing you can see it on the website

1827
01:06:17,680 --> 01:06:19,440
on on the store

1828
01:06:19,440 --> 01:06:21,920
yeah so this is the lincoln store having

1829
01:06:21,920 --> 01:06:23,200
an issue

1830
01:06:23,200 --> 01:06:24,640
logging into

1831
01:06:24,640 --> 01:06:27,920
uh if the issues to login i will

1832
01:06:27,920 --> 01:06:29,470
investigate after the

1833
01:06:29,470 --> 01:06:30,960
[Music]

1834
01:06:30,960 --> 01:06:33,440
the webinar let me just

1835
01:06:33,440 --> 01:06:34,799
copy this

1836
01:06:34,799 --> 01:06:38,160
i'll try to find you so this um so i'll

1837
01:06:38,160 --> 01:06:40,319
try to find you but the best is if you

1838
01:06:40,319 --> 01:06:44,000
email admin at 70security.com then

1839
01:06:44,000 --> 01:06:46,400
we will be able to investigate this

1840
01:06:46,400 --> 01:06:48,880
better so i'm just copying that

1841
01:06:48,880 --> 01:06:51,440
so that i don't

1842
01:06:51,440 --> 01:06:53,280
forget about it i'll check

1843
01:06:53,280 --> 01:06:54,880
try to find you

1844
01:06:54,880 --> 01:06:56,880
after the session

1845
01:06:56,880 --> 01:06:59,880
um

1846
01:07:00,160 --> 01:07:02,640
here journey package

1847
01:07:02,640 --> 01:07:05,599
ui web views are deprecated and are no

1848
01:07:05,599 --> 01:07:07,839
longer accepted in app store and that is

1849
01:07:07,839 --> 01:07:11,280
nice uh yes but

1850
01:07:11,280 --> 01:07:14,000
but there's still some applications that

1851
01:07:14,000 --> 01:07:16,319
use it

1852
01:07:17,680 --> 01:07:19,839
okay so these are the links that i sent

1853
01:07:19,839 --> 01:07:21,440
and let's see if there's any more

1854
01:07:21,440 --> 01:07:23,359
questions great explanations i can hear

1855
01:07:23,359 --> 01:07:25,119
you okay

1856
01:07:25,119 --> 01:07:27,119
okay so thank you for all the

1857
01:07:27,119 --> 01:07:29,680
uh nice feedback okay see if somebody

1858
01:07:29,680 --> 01:07:32,880
was able to hear everything then

1859
01:07:32,880 --> 01:07:34,880
then it was not my problem it was the

1860
01:07:34,880 --> 01:07:37,200
problem of somebody's connection do you

1861
01:07:37,200 --> 01:07:38,799
know any public reports about

1862
01:07:38,799 --> 01:07:42,720
vulnerabilities related to deep links uh

1863
01:07:42,720 --> 01:07:45,280
yes there's a lot on the uh on the

1864
01:07:45,280 --> 01:07:47,920
internet i'm not sure if uh in our

1865
01:07:47,920 --> 01:07:50,079
public reports there's something about

1866
01:07:50,079 --> 01:07:52,400
this but in our practical

1867
01:07:52,400 --> 01:07:53,920
um

1868
01:07:53,920 --> 01:07:55,680
what was it called practical mobile app

1869
01:07:55,680 --> 01:07:57,839
attacks by example this workshop that is

1870
01:07:57,839 --> 01:08:00,400
free that you can also get to the store

1871
01:08:00,400 --> 01:08:02,079
through the store

1872
01:08:02,079 --> 01:08:05,839
you have a lot more examples from real

1873
01:08:05,839 --> 01:08:07,839
pentest

1874
01:08:07,839 --> 01:08:09,680
and of course

1875
01:08:09,680 --> 01:08:11,920
i mean this is all anonymized because

1876
01:08:11,920 --> 01:08:13,839
they are like applications from clients

1877
01:08:13,839 --> 01:08:14,799
and stuff

1878
01:08:14,799 --> 01:08:16,479
but you can see a lot of cool attacks so

1879
01:08:16,479 --> 01:08:18,399
for example in that workshop there is

1880
01:08:18,399 --> 01:08:21,040
one very cool attack where

1881
01:08:21,040 --> 01:08:24,080
using a deep link you have like a sequel

1882
01:08:24,080 --> 01:08:26,399
injection on the mobile app but at the

1883
01:08:26,399 --> 01:08:27,759
same time

1884
01:08:27,759 --> 01:08:29,920
the sql injection was a remote code

1885
01:08:29,920 --> 01:08:32,439
execution because you could get

1886
01:08:32,439 --> 01:08:33,920
[Music]

1887
01:08:33,920 --> 01:08:35,679
through the sql injection you could load

1888
01:08:35,679 --> 01:08:37,679
the library right so definitely if

1889
01:08:37,679 --> 01:08:39,279
you're interested in this definitely

1890
01:08:39,279 --> 01:08:41,040
watch the

1891
01:08:41,040 --> 01:08:42,000
uh

1892
01:08:42,000 --> 01:08:43,759
practical mobile app attacks by example

1893
01:08:43,759 --> 01:08:46,319
workshop it's also pretty cool

1894
01:08:46,319 --> 01:08:48,080
uh and it has

1895
01:08:48,080 --> 01:08:50,080
a lot more examples with deep links and

1896
01:08:50,080 --> 01:08:53,759
so on i work with drawstr and adb a lot

1897
01:08:53,759 --> 01:08:56,158
you can see the cheat sheet yeah

1898
01:08:56,158 --> 01:08:58,238
yeah so truster is pretty cool

1899
01:08:58,238 --> 01:09:00,960
awesome okay so it seems there's no more

1900
01:09:00,960 --> 01:09:02,799
questions i went through

1901
01:09:02,799 --> 01:09:05,679
all these so i'll see i'll see you next

1902
01:09:05,679 --> 01:09:08,880
week for those of you coming

1903
01:09:08,880 --> 01:09:11,198
i sign up for the other free workshops

1904
01:09:11,198 --> 01:09:13,359
how long before they show up in the

1905
01:09:13,359 --> 01:09:15,839
profile they should show up immediately

1906
01:09:15,839 --> 01:09:20,000
if you don't see them try to do a shift

1907
01:09:20,000 --> 01:09:23,600
plus refresh i think the caching headers

1908
01:09:23,600 --> 01:09:25,439
a little bit aggressive

1909
01:09:25,439 --> 01:09:29,040
and you can also try um

1910
01:09:29,040 --> 01:09:30,880
an incognito

1911
01:09:30,880 --> 01:09:31,759
uh

1912
01:09:31,759 --> 01:09:34,759
fresh

1913
01:09:39,040 --> 01:09:41,920
so refreshing coming to browser session

1914
01:09:41,920 --> 01:09:44,399
and that will definitely get rid of the

1915
01:09:44,399 --> 01:09:47,198
caching this is because the the caching

1916
01:09:47,198 --> 01:09:49,279
headers a little bit aggressively trying

1917
01:09:49,279 --> 01:09:52,640
to to fix that very soon

1918
01:09:52,640 --> 01:09:54,640
uh but yeah it should appear immediately

1919
01:09:54,640 --> 01:09:56,800
as as soon as you get any of the other

1920
01:09:56,800 --> 01:09:59,440
free workshops they should appear there

1921
01:09:59,440 --> 01:10:02,560
uh yeah many other questions feel free

1922
01:10:02,560 --> 01:10:05,679
to email admin 7security.com

1923
01:10:05,679 --> 01:10:08,080
get any of the other free workshops and

1924
01:10:08,080 --> 01:10:10,960
if you are interested in joining the

1925
01:10:10,960 --> 01:10:13,840
the training next week you have

1926
01:10:13,840 --> 01:10:15,840
a youtube video explaining you how to

1927
01:10:15,840 --> 01:10:17,360
find your own

1928
01:10:17,360 --> 01:10:19,600
discount code for now we'll try to make

1929
01:10:19,600 --> 01:10:21,199
this a little bit clearer in the future

1930
01:10:21,199 --> 01:10:22,719
because some people were asking about

1931
01:10:22,719 --> 01:10:23,679
this

1932
01:10:23,679 --> 01:10:25,360
and yeah thank you for coming and i hope

1933
01:10:25,360 --> 01:10:29,199
this was entertaining and useful

1934
01:10:29,199 --> 01:10:31,679
have a nice evening

1935
01:10:31,679 --> 01:10:34,840
good night

