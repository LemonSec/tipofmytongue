1
00:00:14,240 --> 00:00:17,400


2
00:00:17,400 --> 00:00:19,290


3
00:00:19,290 --> 00:00:26,500


4
00:00:26,519 --> 00:00:29,519


5
00:00:33,360 --> 00:00:36,300


6
00:00:36,300 --> 00:00:39,000


7
00:00:39,000 --> 00:00:41,940


8
00:00:41,940 --> 00:00:44,239


9
00:00:44,520 --> 00:00:46,559


10
00:00:46,559 --> 00:00:48,200


11
00:00:48,200 --> 00:00:51,980


12
00:00:52,460 --> 00:00:55,620


13
00:00:55,620 --> 00:00:57,780


14
00:00:57,780 --> 00:00:59,879


15
00:00:59,879 --> 00:01:02,239


16
00:01:02,239 --> 00:01:06,060


17
00:01:06,060 --> 00:01:09,119


18
00:01:09,119 --> 00:01:10,860


19
00:01:10,860 --> 00:01:13,260


20
00:01:13,260 --> 00:01:16,920


21
00:01:16,920 --> 00:01:18,240


22
00:01:18,240 --> 00:01:20,580


23
00:01:20,580 --> 00:01:23,340


24
00:01:23,340 --> 00:01:26,400


25
00:01:26,400 --> 00:01:28,380


26
00:01:28,380 --> 00:01:31,920


27
00:01:31,920 --> 00:01:34,860


28
00:01:34,860 --> 00:01:36,600


29
00:01:36,600 --> 00:01:38,880


30
00:01:38,880 --> 00:01:40,259


31
00:01:40,259 --> 00:01:42,960


32
00:01:42,960 --> 00:01:45,299


33
00:01:45,299 --> 00:01:47,100


34
00:01:47,100 --> 00:01:49,380


35
00:01:49,380 --> 00:01:51,060


36
00:01:51,060 --> 00:01:52,740


37
00:01:52,740 --> 00:01:55,619


38
00:01:55,619 --> 00:01:57,600


39
00:01:57,600 --> 00:01:59,100


40
00:01:59,100 --> 00:02:00,479


41
00:02:00,479 --> 00:02:03,119


42
00:02:03,119 --> 00:02:05,759


43
00:02:05,759 --> 00:02:07,140


44
00:02:07,140 --> 00:02:08,880


45
00:02:08,880 --> 00:02:11,459


46
00:02:11,459 --> 00:02:14,180


47
00:02:14,180 --> 00:02:16,560


48
00:02:16,560 --> 00:02:18,239


49
00:02:18,239 --> 00:02:20,340


50
00:02:20,340 --> 00:02:22,080


51
00:02:22,080 --> 00:02:25,500


52
00:02:25,500 --> 00:02:27,120


53
00:02:27,120 --> 00:02:28,640


54
00:02:28,640 --> 00:02:33,360


55
00:02:33,360 --> 00:02:35,640


56
00:02:35,640 --> 00:02:38,520


57
00:02:38,520 --> 00:02:40,080


58
00:02:40,080 --> 00:02:42,800


59
00:02:42,800 --> 00:02:45,720


60
00:02:45,720 --> 00:02:48,660


61
00:02:48,660 --> 00:02:51,239


62
00:02:51,239 --> 00:02:54,180


63
00:02:54,180 --> 00:02:57,120


64
00:02:57,120 --> 00:02:59,160


65
00:02:59,160 --> 00:03:01,200


66
00:03:01,200 --> 00:03:03,900


67
00:03:03,900 --> 00:03:06,660


68
00:03:06,660 --> 00:03:08,940


69
00:03:08,940 --> 00:03:11,819


70
00:03:11,819 --> 00:03:15,480


71
00:03:15,480 --> 00:03:17,760


72
00:03:17,760 --> 00:03:20,700


73
00:03:20,700 --> 00:03:22,440


74
00:03:22,440 --> 00:03:24,180


75
00:03:24,180 --> 00:03:27,360


76
00:03:27,360 --> 00:03:30,239


77
00:03:30,239 --> 00:03:31,860


78
00:03:31,860 --> 00:03:33,599


79
00:03:33,599 --> 00:03:36,540


80
00:03:36,540 --> 00:03:37,920


81
00:03:37,920 --> 00:03:41,340


82
00:03:41,340 --> 00:03:43,459


83
00:03:43,459 --> 00:03:48,180


84
00:03:48,180 --> 00:03:50,580


85
00:03:50,580 --> 00:03:51,739


86
00:03:51,739 --> 00:03:54,180


87
00:03:54,180 --> 00:03:56,239


88
00:03:56,239 --> 00:03:58,920


89
00:03:58,920 --> 00:04:00,480


90
00:04:00,480 --> 00:04:02,099


91
00:04:02,099 --> 00:04:04,620


92
00:04:04,620 --> 00:04:07,560


93
00:04:07,560 --> 00:04:10,200


94
00:04:10,200 --> 00:04:11,959


95
00:04:11,959 --> 00:04:14,099


96
00:04:14,099 --> 00:04:16,918


97
00:04:16,918 --> 00:04:19,019


98
00:04:19,019 --> 00:04:21,540


99
00:04:21,540 --> 00:04:26,040


100
00:04:26,040 --> 00:04:27,960


101
00:04:27,960 --> 00:04:30,660


102
00:04:30,660 --> 00:04:32,820


103
00:04:32,820 --> 00:04:34,620


104
00:04:34,620 --> 00:04:36,780


105
00:04:36,780 --> 00:04:38,160


106
00:04:38,160 --> 00:04:39,360


107
00:04:39,360 --> 00:04:41,580


108
00:04:41,580 --> 00:04:43,740


109
00:04:43,740 --> 00:04:45,660


110
00:04:45,660 --> 00:04:47,280


111
00:04:47,280 --> 00:04:49,139


112
00:04:49,139 --> 00:04:51,440


113
00:04:51,440 --> 00:04:54,060


114
00:04:54,060 --> 00:04:55,560


115
00:04:55,560 --> 00:04:58,500


116
00:04:58,500 --> 00:04:59,880


117
00:04:59,880 --> 00:05:01,500


118
00:05:01,500 --> 00:05:03,360


119
00:05:03,360 --> 00:05:06,000


120
00:05:06,000 --> 00:05:07,680


121
00:05:07,680 --> 00:05:09,720


122
00:05:09,720 --> 00:05:11,160


123
00:05:11,160 --> 00:05:12,720


124
00:05:12,720 --> 00:05:15,000


125
00:05:15,000 --> 00:05:17,220


126
00:05:17,220 --> 00:05:18,360


127
00:05:18,360 --> 00:05:19,919


128
00:05:19,919 --> 00:05:22,620


129
00:05:22,620 --> 00:05:24,479


130
00:05:24,479 --> 00:05:26,460


131
00:05:26,460 --> 00:05:28,560


132
00:05:28,560 --> 00:05:29,759


133
00:05:29,759 --> 00:05:32,039


134
00:05:32,039 --> 00:05:33,840


135
00:05:33,840 --> 00:05:35,220


136
00:05:35,220 --> 00:05:38,039


137
00:05:38,039 --> 00:05:39,479


138
00:05:39,479 --> 00:05:42,960


139
00:05:42,960 --> 00:05:44,340


140
00:05:44,340 --> 00:05:45,660


141
00:05:45,660 --> 00:05:48,840


142
00:05:48,840 --> 00:05:51,060


143
00:05:51,060 --> 00:05:54,120


144
00:05:54,120 --> 00:05:57,240


145
00:05:57,240 --> 00:05:58,680


146
00:05:58,680 --> 00:06:00,720


147
00:06:00,720 --> 00:06:03,060


148
00:06:03,060 --> 00:06:04,560


149
00:06:04,560 --> 00:06:06,960


150
00:06:06,960 --> 00:06:08,820


151
00:06:08,820 --> 00:06:10,500


152
00:06:10,500 --> 00:06:13,020


153
00:06:13,020 --> 00:06:15,600


154
00:06:15,600 --> 00:06:17,699


155
00:06:17,699 --> 00:06:20,039


156
00:06:20,039 --> 00:06:22,139


157
00:06:22,139 --> 00:06:24,300


158
00:06:24,300 --> 00:06:27,479


159
00:06:27,479 --> 00:06:30,539


160
00:06:30,539 --> 00:06:32,940


161
00:06:32,940 --> 00:06:36,360


162
00:06:36,360 --> 00:06:39,539


163
00:06:39,539 --> 00:06:40,680


164
00:06:40,680 --> 00:06:42,300


165
00:06:42,300 --> 00:06:44,960


166
00:06:44,960 --> 00:06:48,720


167
00:06:48,720 --> 00:06:50,960


168
00:06:50,960 --> 00:06:55,919


169
00:06:55,919 --> 00:06:57,479


170
00:06:57,479 --> 00:06:58,860


171
00:06:58,860 --> 00:07:02,639


172
00:07:02,639 --> 00:07:05,039


173
00:07:05,039 --> 00:07:08,220


174
00:07:08,220 --> 00:07:10,139


175
00:07:10,139 --> 00:07:12,300


176
00:07:12,300 --> 00:07:14,759


177
00:07:14,759 --> 00:07:16,560


178
00:07:16,560 --> 00:07:18,060


179
00:07:18,060 --> 00:07:20,520


180
00:07:20,520 --> 00:07:21,900


181
00:07:21,900 --> 00:07:25,500


182
00:07:25,500 --> 00:07:28,740


183
00:07:28,740 --> 00:07:32,280


184
00:07:32,280 --> 00:07:34,380


185
00:07:34,380 --> 00:07:36,599


186
00:07:36,599 --> 00:07:40,139


187
00:07:40,139 --> 00:07:42,660


188
00:07:42,660 --> 00:07:44,460


189
00:07:44,460 --> 00:07:46,500


190
00:07:46,500 --> 00:07:48,740


191
00:07:48,740 --> 00:07:50,940


192
00:07:50,940 --> 00:07:52,759


193
00:07:52,759 --> 00:07:55,080


194
00:07:55,080 --> 00:07:56,580


195
00:07:56,580 --> 00:07:59,340


196
00:07:59,340 --> 00:08:01,440


197
00:08:01,440 --> 00:08:03,060


198
00:08:03,060 --> 00:08:04,979


199
00:08:04,979 --> 00:08:07,560


200
00:08:07,560 --> 00:08:09,840


201
00:08:09,840 --> 00:08:11,460


202
00:08:11,460 --> 00:08:12,900


203
00:08:12,900 --> 00:08:14,460


204
00:08:14,460 --> 00:08:16,979


205
00:08:16,979 --> 00:08:19,139


206
00:08:19,139 --> 00:08:21,199


207
00:08:21,199 --> 00:08:23,699


208
00:08:23,699 --> 00:08:25,379


209
00:08:25,379 --> 00:08:27,539


210
00:08:27,539 --> 00:08:30,120


211
00:08:30,120 --> 00:08:32,099


212
00:08:32,099 --> 00:08:34,500


213
00:08:34,500 --> 00:08:37,500


214
00:08:37,500 --> 00:08:41,059


215
00:08:41,059 --> 00:08:44,219


216
00:08:44,219 --> 00:08:47,220


217
00:08:47,220 --> 00:08:49,380


218
00:08:49,380 --> 00:08:51,680


219
00:08:51,680 --> 00:08:53,820


220
00:08:53,820 --> 00:08:55,880


221
00:08:55,880 --> 00:08:58,080


222
00:08:58,080 --> 00:08:59,640


223
00:08:59,640 --> 00:09:01,740


224
00:09:01,740 --> 00:09:04,560


225
00:09:04,560 --> 00:09:06,240


226
00:09:06,240 --> 00:09:09,120


227
00:09:09,120 --> 00:09:10,200


228
00:09:10,200 --> 00:09:13,800


229
00:09:13,800 --> 00:09:15,839


230
00:09:15,839 --> 00:09:17,640


231
00:09:17,640 --> 00:09:20,399


232
00:09:20,399 --> 00:09:22,440


233
00:09:22,440 --> 00:09:24,540


234
00:09:24,540 --> 00:09:26,459


235
00:09:26,459 --> 00:09:28,620


236
00:09:28,620 --> 00:09:31,860


237
00:09:31,860 --> 00:09:34,440


238
00:09:34,440 --> 00:09:36,899


239
00:09:36,899 --> 00:09:40,200


240
00:09:40,200 --> 00:09:43,140


241
00:09:43,140 --> 00:09:45,180


242
00:09:45,180 --> 00:09:47,399


243
00:09:47,399 --> 00:09:48,839


244
00:09:48,839 --> 00:09:51,240


245
00:09:51,240 --> 00:09:54,180


246
00:09:54,180 --> 00:09:55,980


247
00:09:55,980 --> 00:09:57,720


248
00:09:57,720 --> 00:10:00,180


249
00:10:00,180 --> 00:10:01,500


250
00:10:01,500 --> 00:10:03,480


251
00:10:03,480 --> 00:10:06,959


252
00:10:06,959 --> 00:10:09,959


253
00:10:09,959 --> 00:10:11,820


254
00:10:11,820 --> 00:10:14,220


255
00:10:14,220 --> 00:10:17,100


256
00:10:17,100 --> 00:10:19,860


257
00:10:19,860 --> 00:10:22,140


258
00:10:22,140 --> 00:10:24,120


259
00:10:24,120 --> 00:10:25,620


260
00:10:25,620 --> 00:10:27,720


261
00:10:27,720 --> 00:10:30,060


262
00:10:30,060 --> 00:10:32,040


263
00:10:32,040 --> 00:10:34,380


264
00:10:34,380 --> 00:10:36,600


265
00:10:36,600 --> 00:10:39,839


266
00:10:39,839 --> 00:10:42,060


267
00:10:42,060 --> 00:10:44,760


268
00:10:44,760 --> 00:10:46,380


269
00:10:46,380 --> 00:10:48,060


270
00:10:48,060 --> 00:10:49,860


271
00:10:49,860 --> 00:10:52,620


272
00:10:52,620 --> 00:10:54,899


273
00:10:54,899 --> 00:10:56,339


274
00:10:56,339 --> 00:10:57,200


275
00:10:57,200 --> 00:10:59,640


276
00:10:59,640 --> 00:11:01,920


277
00:11:01,920 --> 00:11:05,100


278
00:11:05,100 --> 00:11:06,899


279
00:11:06,899 --> 00:11:08,160


280
00:11:08,160 --> 00:11:10,680


281
00:11:10,680 --> 00:11:13,079


282
00:11:13,079 --> 00:11:15,540


283
00:11:15,540 --> 00:11:17,339


284
00:11:17,339 --> 00:11:19,680


285
00:11:19,680 --> 00:11:21,420


286
00:11:21,420 --> 00:11:23,459


287
00:11:23,459 --> 00:11:25,079


288
00:11:25,079 --> 00:11:26,640


289
00:11:26,640 --> 00:11:27,839


290
00:11:27,839 --> 00:11:30,420


291
00:11:30,420 --> 00:11:32,399


292
00:11:32,399 --> 00:11:33,779


293
00:11:33,779 --> 00:11:35,220


294
00:11:35,220 --> 00:11:36,839


295
00:11:36,839 --> 00:11:38,220


296
00:11:38,220 --> 00:11:40,500


297
00:11:40,500 --> 00:11:42,360


298
00:11:42,360 --> 00:11:44,399


299
00:11:44,399 --> 00:11:45,959


300
00:11:45,959 --> 00:11:48,120


301
00:11:48,120 --> 00:11:50,399


302
00:11:50,399 --> 00:11:52,500


303
00:11:52,500 --> 00:11:55,019


304
00:11:55,019 --> 00:11:58,320


305
00:11:58,320 --> 00:12:00,480


306
00:12:00,480 --> 00:12:02,519


307
00:12:02,519 --> 00:12:03,899


308
00:12:03,899 --> 00:12:06,120


309
00:12:06,120 --> 00:12:09,720


310
00:12:09,720 --> 00:12:12,440


311
00:12:12,440 --> 00:12:14,760


312
00:12:14,760 --> 00:12:17,820


313
00:12:17,820 --> 00:12:19,140


314
00:12:19,140 --> 00:12:21,060


315
00:12:21,060 --> 00:12:23,640


316
00:12:23,640 --> 00:12:26,399


317
00:12:26,399 --> 00:12:28,620


318
00:12:28,620 --> 00:12:31,440


319
00:12:31,440 --> 00:12:33,000


320
00:12:33,000 --> 00:12:35,180


321
00:12:35,180 --> 00:12:38,579


322
00:12:38,579 --> 00:12:40,380


323
00:12:40,380 --> 00:12:42,899


324
00:12:42,899 --> 00:12:44,940


325
00:12:44,940 --> 00:12:46,380


326
00:12:46,380 --> 00:12:48,180


327
00:12:48,180 --> 00:12:50,100


328
00:12:50,100 --> 00:12:52,620


329
00:12:52,620 --> 00:12:55,320


330
00:12:55,320 --> 00:12:57,360


331
00:12:57,360 --> 00:12:58,440


332
00:12:58,440 --> 00:13:00,360


333
00:13:00,360 --> 00:13:02,399


334
00:13:02,399 --> 00:13:04,920


335
00:13:04,920 --> 00:13:06,720


336
00:13:06,720 --> 00:13:07,680


337
00:13:07,680 --> 00:13:09,779


338
00:13:09,779 --> 00:13:11,820


339
00:13:11,820 --> 00:13:15,060


340
00:13:15,060 --> 00:13:16,620


341
00:13:16,620 --> 00:13:19,620


342
00:13:19,620 --> 00:13:22,860


343
00:13:22,860 --> 00:13:26,459


344
00:13:26,459 --> 00:13:28,680


345
00:13:28,680 --> 00:13:31,139


346
00:13:31,139 --> 00:13:36,000


347
00:13:36,000 --> 00:13:38,339


348
00:13:38,339 --> 00:13:40,500


349
00:13:40,500 --> 00:13:41,940


350
00:13:41,940 --> 00:13:43,740


351
00:13:43,740 --> 00:13:45,420


352
00:13:45,420 --> 00:13:47,579


353
00:13:47,579 --> 00:13:49,980


354
00:13:49,980 --> 00:13:52,079


355
00:13:52,079 --> 00:13:54,480


356
00:13:54,480 --> 00:13:56,639


357
00:13:56,639 --> 00:13:58,440


358
00:13:58,440 --> 00:14:00,180


359
00:14:00,180 --> 00:14:03,120


360
00:14:03,120 --> 00:14:04,620


361
00:14:04,620 --> 00:14:06,000


362
00:14:06,000 --> 00:14:08,760


363
00:14:08,760 --> 00:14:10,019


364
00:14:10,019 --> 00:14:11,519


365
00:14:11,519 --> 00:14:14,100


366
00:14:14,100 --> 00:14:16,740


367
00:14:16,740 --> 00:14:18,060


368
00:14:18,060 --> 00:14:19,680


369
00:14:19,680 --> 00:14:22,079


370
00:14:22,079 --> 00:14:24,899


371
00:14:24,899 --> 00:14:26,760


372
00:14:26,760 --> 00:14:29,339


373
00:14:29,339 --> 00:14:30,600


374
00:14:30,600 --> 00:14:33,360


375
00:14:33,360 --> 00:14:35,180


376
00:14:35,180 --> 00:14:38,579


377
00:14:38,579 --> 00:14:41,940


378
00:14:41,940 --> 00:14:43,440


379
00:14:43,440 --> 00:14:45,199


380
00:14:45,199 --> 00:14:47,519


381
00:14:47,519 --> 00:14:50,220


382
00:14:50,220 --> 00:14:52,620


383
00:14:52,620 --> 00:14:54,959


384
00:14:54,959 --> 00:14:57,180


385
00:14:57,180 --> 00:15:00,360


386
00:15:00,360 --> 00:15:02,699


387
00:15:02,699 --> 00:15:05,040


388
00:15:05,040 --> 00:15:08,760


389
00:15:08,760 --> 00:15:11,279


390
00:15:11,279 --> 00:15:14,040


391
00:15:14,040 --> 00:15:16,139


392
00:15:16,139 --> 00:15:18,660


393
00:15:18,660 --> 00:15:21,000


394
00:15:21,000 --> 00:15:23,279


395
00:15:23,279 --> 00:15:26,160


396
00:15:26,160 --> 00:15:28,680


397
00:15:28,680 --> 00:15:31,920


398
00:15:31,920 --> 00:15:33,660


399
00:15:33,660 --> 00:15:36,060


400
00:15:36,060 --> 00:15:38,399


401
00:15:38,399 --> 00:15:41,279


402
00:15:41,279 --> 00:15:43,440


403
00:15:43,440 --> 00:15:45,779


404
00:15:45,779 --> 00:15:48,000


405
00:15:48,000 --> 00:15:49,800


406
00:15:49,800 --> 00:15:51,779


407
00:15:51,779 --> 00:15:54,720


408
00:15:54,720 --> 00:15:56,699


409
00:15:56,699 --> 00:15:58,920


410
00:15:58,920 --> 00:16:00,899


411
00:16:00,899 --> 00:16:02,279


412
00:16:02,279 --> 00:16:04,199


413
00:16:04,199 --> 00:16:06,180


414
00:16:06,180 --> 00:16:08,760


415
00:16:08,760 --> 00:16:11,699


416
00:16:11,699 --> 00:16:13,800


417
00:16:13,800 --> 00:16:15,660


418
00:16:15,660 --> 00:16:17,699


419
00:16:17,699 --> 00:16:19,459


420
00:16:19,459 --> 00:16:22,079


421
00:16:22,079 --> 00:16:23,639


422
00:16:23,639 --> 00:16:25,260


423
00:16:25,260 --> 00:16:27,600


424
00:16:27,600 --> 00:16:29,880


425
00:16:29,880 --> 00:16:32,639


426
00:16:32,639 --> 00:16:34,500


427
00:16:34,500 --> 00:16:36,600


428
00:16:36,600 --> 00:16:39,060


429
00:16:39,060 --> 00:16:41,940


430
00:16:41,940 --> 00:16:45,420


431
00:16:45,420 --> 00:16:48,300


432
00:16:48,300 --> 00:16:50,279


433
00:16:50,279 --> 00:16:52,199


434
00:16:52,199 --> 00:16:53,940


435
00:16:53,940 --> 00:16:57,120


436
00:16:57,120 --> 00:16:59,240


437
00:16:59,240 --> 00:17:01,320


438
00:17:01,320 --> 00:17:03,300


439
00:17:03,300 --> 00:17:05,160


440
00:17:05,160 --> 00:17:07,439


441
00:17:07,439 --> 00:17:09,839


442
00:17:09,839 --> 00:17:12,660


443
00:17:12,660 --> 00:17:14,520


444
00:17:14,520 --> 00:17:16,020


445
00:17:16,020 --> 00:17:18,540


446
00:17:18,540 --> 00:17:19,619


447
00:17:19,619 --> 00:17:21,599


448
00:17:21,599 --> 00:17:24,839


449
00:17:24,839 --> 00:17:27,240


450
00:17:27,240 --> 00:17:28,919


451
00:17:28,919 --> 00:17:31,140


452
00:17:31,140 --> 00:17:32,400


453
00:17:32,400 --> 00:17:34,559


454
00:17:34,559 --> 00:17:36,780


455
00:17:36,780 --> 00:17:38,700


456
00:17:38,700 --> 00:17:40,260


457
00:17:40,260 --> 00:17:43,500


458
00:17:43,500 --> 00:17:46,200


459
00:17:46,200 --> 00:17:48,299


460
00:17:48,299 --> 00:17:50,100


461
00:17:50,100 --> 00:17:51,600


462
00:17:51,600 --> 00:17:54,179


463
00:17:54,179 --> 00:17:57,059


464
00:17:57,059 --> 00:17:58,380


465
00:17:58,380 --> 00:18:00,000


466
00:18:00,000 --> 00:18:02,100


467
00:18:02,100 --> 00:18:04,440


468
00:18:04,440 --> 00:18:06,320


469
00:18:06,320 --> 00:18:09,059


470
00:18:09,059 --> 00:18:10,980


471
00:18:10,980 --> 00:18:14,000


472
00:18:14,000 --> 00:18:16,440


473
00:18:16,440 --> 00:18:19,260


474
00:18:19,260 --> 00:18:21,539


475
00:18:21,539 --> 00:18:23,640


476
00:18:23,640 --> 00:18:26,220


477
00:18:26,220 --> 00:18:29,160


478
00:18:29,160 --> 00:18:31,320


479
00:18:31,320 --> 00:18:33,600


480
00:18:33,600 --> 00:18:36,120


481
00:18:36,120 --> 00:18:37,980


482
00:18:37,980 --> 00:18:40,320


483
00:18:40,320 --> 00:18:42,120


484
00:18:42,120 --> 00:18:44,340


485
00:18:44,340 --> 00:18:47,580


486
00:18:47,580 --> 00:18:49,140


487
00:18:49,140 --> 00:18:51,299


488
00:18:51,299 --> 00:18:52,559


489
00:18:52,559 --> 00:18:54,539


490
00:18:54,539 --> 00:18:56,360


491
00:18:56,360 --> 00:18:58,679


492
00:18:58,679 --> 00:19:01,320


493
00:19:01,320 --> 00:19:03,600


494
00:19:03,600 --> 00:19:06,360


495
00:19:06,360 --> 00:19:10,440


496
00:19:10,440 --> 00:19:12,059


497
00:19:12,059 --> 00:19:13,860


498
00:19:13,860 --> 00:19:16,200


499
00:19:16,200 --> 00:19:18,059


500
00:19:18,059 --> 00:19:20,880


501
00:19:20,880 --> 00:19:23,039


502
00:19:23,039 --> 00:19:24,660


503
00:19:24,660 --> 00:19:25,799


504
00:19:25,799 --> 00:19:27,660


505
00:19:27,660 --> 00:19:29,460


506
00:19:29,460 --> 00:19:31,440


507
00:19:31,440 --> 00:19:34,140


508
00:19:34,140 --> 00:19:36,600


509
00:19:36,600 --> 00:19:38,160


510
00:19:38,160 --> 00:19:39,960


511
00:19:39,960 --> 00:19:42,900


512
00:19:42,900 --> 00:19:45,059


513
00:19:45,059 --> 00:19:46,320


514
00:19:46,320 --> 00:19:49,200


515
00:19:49,200 --> 00:19:51,480


516
00:19:51,480 --> 00:19:54,419


517
00:19:54,419 --> 00:19:55,440


518
00:19:55,440 --> 00:19:56,940


519
00:19:56,940 --> 00:19:59,160


520
00:19:59,160 --> 00:20:00,840


521
00:20:00,840 --> 00:20:03,360


522
00:20:03,360 --> 00:20:05,280


523
00:20:05,280 --> 00:20:06,380


524
00:20:06,380 --> 00:20:09,600


525
00:20:09,600 --> 00:20:12,200


526
00:20:12,200 --> 00:20:14,820


527
00:20:14,820 --> 00:20:17,280


528
00:20:17,280 --> 00:20:19,380


529
00:20:19,380 --> 00:20:21,600


530
00:20:21,600 --> 00:20:23,720


531
00:20:23,720 --> 00:20:25,919


532
00:20:25,919 --> 00:20:28,020


533
00:20:28,020 --> 00:20:30,299


534
00:20:30,299 --> 00:20:32,820


535
00:20:32,820 --> 00:20:35,640


536
00:20:35,640 --> 00:20:38,160


537
00:20:38,160 --> 00:20:39,600


538
00:20:39,600 --> 00:20:42,360


539
00:20:42,360 --> 00:20:44,700


540
00:20:44,700 --> 00:20:46,679


541
00:20:46,679 --> 00:20:48,600


542
00:20:48,600 --> 00:20:49,980


543
00:20:49,980 --> 00:20:52,140


544
00:20:52,140 --> 00:20:54,240


545
00:20:54,240 --> 00:20:55,200


546
00:20:55,200 --> 00:20:57,840


547
00:20:57,840 --> 00:21:01,620


548
00:21:01,620 --> 00:21:04,559


549
00:21:04,559 --> 00:21:06,059


550
00:21:06,059 --> 00:21:08,539


551
00:21:08,539 --> 00:21:12,059


552
00:21:12,059 --> 00:21:14,039


553
00:21:14,039 --> 00:21:16,500


554
00:21:16,500 --> 00:21:18,360


555
00:21:18,360 --> 00:21:20,280


556
00:21:20,280 --> 00:21:23,100


557
00:21:23,100 --> 00:21:26,280


558
00:21:26,280 --> 00:21:27,840


559
00:21:27,840 --> 00:21:30,299


560
00:21:30,299 --> 00:21:32,400


561
00:21:32,400 --> 00:21:34,679


562
00:21:34,679 --> 00:21:37,200


563
00:21:37,200 --> 00:21:38,880


564
00:21:38,880 --> 00:21:40,200


565
00:21:40,200 --> 00:21:43,200


566
00:21:43,200 --> 00:21:44,940


567
00:21:44,940 --> 00:21:46,620


568
00:21:46,620 --> 00:21:48,780


569
00:21:48,780 --> 00:21:50,460


570
00:21:50,460 --> 00:21:51,720


571
00:21:51,720 --> 00:21:53,700


572
00:21:53,700 --> 00:21:56,340


573
00:21:56,340 --> 00:21:58,919


574
00:21:58,919 --> 00:22:01,320


575
00:22:01,320 --> 00:22:03,240


576
00:22:03,240 --> 00:22:05,039


577
00:22:05,039 --> 00:22:07,440


578
00:22:07,440 --> 00:22:10,080


579
00:22:10,080 --> 00:22:12,380


580
00:22:12,380 --> 00:22:14,880


581
00:22:14,880 --> 00:22:16,140


582
00:22:16,140 --> 00:22:17,700


583
00:22:17,700 --> 00:22:19,860


584
00:22:19,860 --> 00:22:21,919


585
00:22:21,919 --> 00:22:23,880


586
00:22:23,880 --> 00:22:26,280


587
00:22:26,280 --> 00:22:29,220


588
00:22:29,220 --> 00:22:30,600


589
00:22:30,600 --> 00:22:32,820


590
00:22:32,820 --> 00:22:34,620


591
00:22:34,620 --> 00:22:38,240


592
00:22:38,240 --> 00:22:41,460


593
00:22:41,460 --> 00:22:44,100


594
00:22:44,100 --> 00:22:46,380


595
00:22:46,380 --> 00:22:48,960


596
00:22:48,960 --> 00:22:50,700


597
00:22:50,700 --> 00:22:52,860


598
00:22:52,860 --> 00:22:54,720


599
00:22:54,720 --> 00:22:57,000


600
00:22:57,000 --> 00:23:00,179


601
00:23:00,179 --> 00:23:01,740


602
00:23:01,740 --> 00:23:03,659


603
00:23:03,659 --> 00:23:05,460


604
00:23:05,460 --> 00:23:07,860


605
00:23:07,860 --> 00:23:10,500


606
00:23:10,500 --> 00:23:12,380


607
00:23:12,380 --> 00:23:15,299


608
00:23:15,299 --> 00:23:17,760


609
00:23:17,760 --> 00:23:20,100


610
00:23:20,100 --> 00:23:22,740


611
00:23:22,740 --> 00:23:25,679


612
00:23:25,679 --> 00:23:27,000


613
00:23:27,000 --> 00:23:29,280


614
00:23:29,280 --> 00:23:31,320


615
00:23:31,320 --> 00:23:33,720


616
00:23:33,720 --> 00:23:35,520


617
00:23:35,520 --> 00:23:37,679


618
00:23:37,679 --> 00:23:39,659


619
00:23:39,659 --> 00:23:41,940


620
00:23:41,940 --> 00:23:44,880


621
00:23:44,880 --> 00:23:48,120


622
00:23:48,120 --> 00:23:50,640


623
00:23:50,640 --> 00:23:54,120


624
00:23:54,120 --> 00:23:55,740


625
00:23:55,740 --> 00:23:59,520


626
00:23:59,520 --> 00:24:02,100


627
00:24:02,100 --> 00:24:04,559


628
00:24:04,559 --> 00:24:06,299


629
00:24:06,299 --> 00:24:08,640


630
00:24:08,640 --> 00:24:10,980


631
00:24:10,980 --> 00:24:13,080


632
00:24:13,080 --> 00:24:16,679


633
00:24:16,679 --> 00:24:18,840


634
00:24:18,840 --> 00:24:21,659


635
00:24:21,659 --> 00:24:24,120


636
00:24:24,120 --> 00:24:25,980


637
00:24:25,980 --> 00:24:28,260


638
00:24:28,260 --> 00:24:29,940


639
00:24:29,940 --> 00:24:31,380


640
00:24:31,380 --> 00:24:32,940


641
00:24:32,940 --> 00:24:34,740


642
00:24:34,740 --> 00:24:36,659


643
00:24:36,659 --> 00:24:38,820


644
00:24:38,820 --> 00:24:43,100


645
00:24:43,100 --> 00:24:45,960


646
00:24:45,960 --> 00:24:47,820


647
00:24:47,820 --> 00:24:49,860


648
00:24:49,860 --> 00:24:52,200


649
00:24:52,200 --> 00:24:53,820


650
00:24:53,820 --> 00:24:55,559


651
00:24:55,559 --> 00:24:57,720


652
00:24:57,720 --> 00:25:01,140


653
00:25:01,140 --> 00:25:03,659


654
00:25:03,659 --> 00:25:06,720


655
00:25:06,720 --> 00:25:08,220


656
00:25:08,220 --> 00:25:10,020


657
00:25:10,020 --> 00:25:12,659


658
00:25:12,659 --> 00:25:15,080


659
00:25:15,080 --> 00:25:18,179


660
00:25:18,179 --> 00:25:20,159


661
00:25:20,159 --> 00:25:22,440


662
00:25:22,440 --> 00:25:24,600


663
00:25:24,600 --> 00:25:26,880


664
00:25:26,880 --> 00:25:28,500


665
00:25:28,500 --> 00:25:30,200


666
00:25:30,200 --> 00:25:33,779


667
00:25:33,779 --> 00:25:36,059


668
00:25:36,059 --> 00:25:39,720


669
00:25:39,720 --> 00:25:41,880


670
00:25:41,880 --> 00:25:43,760


671
00:25:43,760 --> 00:25:46,679


672
00:25:46,679 --> 00:25:48,539


673
00:25:48,539 --> 00:25:51,659


674
00:25:51,659 --> 00:25:53,880


675
00:25:53,880 --> 00:25:55,260


676
00:25:55,260 --> 00:25:57,840


677
00:25:57,840 --> 00:26:01,740


678
00:26:01,740 --> 00:26:06,059


679
00:26:06,059 --> 00:26:09,779


680
00:26:09,779 --> 00:26:12,659


681
00:26:12,659 --> 00:26:15,480


682
00:26:15,480 --> 00:26:16,740


683
00:26:16,740 --> 00:26:19,740


684
00:26:19,740 --> 00:26:21,779


685
00:26:21,779 --> 00:26:23,580


686
00:26:23,580 --> 00:26:25,679


687
00:26:25,679 --> 00:26:27,000


688
00:26:27,000 --> 00:26:29,220


689
00:26:29,220 --> 00:26:31,860


690
00:26:31,860 --> 00:26:35,880


691
00:26:35,880 --> 00:26:37,520


692
00:26:37,520 --> 00:26:41,760


693
00:26:41,760 --> 00:26:44,400


694
00:26:44,400 --> 00:26:47,400


695
00:26:47,400 --> 00:26:49,080


696
00:26:49,080 --> 00:26:51,320


697
00:26:51,320 --> 00:26:54,360


698
00:26:54,360 --> 00:26:56,159


699
00:26:56,159 --> 00:26:57,900


700
00:26:57,900 --> 00:27:00,419


701
00:27:00,419 --> 00:27:01,980


702
00:27:01,980 --> 00:27:03,659


703
00:27:03,659 --> 00:27:06,720


704
00:27:06,720 --> 00:27:09,000


705
00:27:09,000 --> 00:27:11,820


706
00:27:11,820 --> 00:27:14,159


707
00:27:14,159 --> 00:27:16,980


708
00:27:16,980 --> 00:27:18,840


709
00:27:18,840 --> 00:27:21,000


710
00:27:21,000 --> 00:27:22,440


711
00:27:22,440 --> 00:27:25,679


712
00:27:25,679 --> 00:27:30,000


713
00:27:30,000 --> 00:27:31,260


714
00:27:31,260 --> 00:27:33,659


715
00:27:33,659 --> 00:27:36,419


716
00:27:36,419 --> 00:27:38,520


717
00:27:38,520 --> 00:27:41,760


718
00:27:41,760 --> 00:27:43,740


719
00:27:43,740 --> 00:27:45,179


720
00:27:45,179 --> 00:27:47,100


721
00:27:47,100 --> 00:27:47,880


722
00:27:47,880 --> 00:27:50,700


723
00:27:50,700 --> 00:27:52,799


724
00:27:52,799 --> 00:27:55,260


725
00:27:55,260 --> 00:27:56,940


726
00:27:56,940 --> 00:27:58,860


727
00:27:58,860 --> 00:28:00,720


728
00:28:00,720 --> 00:28:02,400


729
00:28:02,400 --> 00:28:04,679


730
00:28:04,679 --> 00:28:06,360


731
00:28:06,360 --> 00:28:08,039


732
00:28:08,039 --> 00:28:11,159


733
00:28:11,159 --> 00:28:13,380


734
00:28:13,380 --> 00:28:15,419


735
00:28:15,419 --> 00:28:16,980


736
00:28:16,980 --> 00:28:18,539


737
00:28:18,539 --> 00:28:20,100


738
00:28:20,100 --> 00:28:22,500


739
00:28:22,500 --> 00:28:25,140


740
00:28:25,140 --> 00:28:27,120


741
00:28:27,120 --> 00:28:28,860


742
00:28:28,860 --> 00:28:31,559


743
00:28:31,559 --> 00:28:35,159


744
00:28:35,159 --> 00:28:37,200


745
00:28:37,200 --> 00:28:39,779


746
00:28:39,779 --> 00:28:42,000


747
00:28:42,000 --> 00:28:44,700


748
00:28:44,700 --> 00:28:46,559


749
00:28:46,559 --> 00:28:48,260


750
00:28:48,260 --> 00:28:51,480


751
00:28:51,480 --> 00:28:53,400


752
00:28:53,400 --> 00:28:55,980


753
00:28:55,980 --> 00:28:59,520


754
00:28:59,520 --> 00:29:01,140


755
00:29:01,140 --> 00:29:02,580


756
00:29:02,580 --> 00:29:04,679


757
00:29:04,679 --> 00:29:07,919


758
00:29:07,919 --> 00:29:09,720


759
00:29:09,720 --> 00:29:12,480


760
00:29:12,480 --> 00:29:15,360


761
00:29:15,360 --> 00:29:17,640


762
00:29:17,640 --> 00:29:21,059


763
00:29:21,059 --> 00:29:24,360


764
00:29:24,360 --> 00:29:26,940


765
00:29:26,940 --> 00:29:29,640


766
00:29:29,640 --> 00:29:31,799


767
00:29:31,799 --> 00:29:34,559


768
00:29:34,559 --> 00:29:35,640


769
00:29:35,640 --> 00:29:37,980


770
00:29:37,980 --> 00:29:39,419


771
00:29:39,419 --> 00:29:40,679


772
00:29:40,679 --> 00:29:42,480


773
00:29:42,480 --> 00:29:45,419


774
00:29:45,419 --> 00:29:47,700


775
00:29:47,700 --> 00:29:49,320


776
00:29:49,320 --> 00:29:50,700


777
00:29:50,700 --> 00:29:52,860


778
00:29:52,860 --> 00:29:54,840


779
00:29:54,840 --> 00:29:58,260


780
00:29:58,260 --> 00:30:00,320


781
00:30:11,760 --> 00:30:15,000


782
00:30:15,000 --> 00:30:16,860


783
00:30:16,860 --> 00:30:19,559


784
00:30:19,559 --> 00:30:22,260


785
00:30:22,260 --> 00:30:24,919


786
00:30:24,919 --> 00:30:27,000


787
00:30:27,000 --> 00:30:29,700


788
00:30:29,700 --> 00:30:32,039


789
00:30:32,039 --> 00:30:33,659


790
00:30:33,659 --> 00:30:36,679


791
00:30:36,679 --> 00:30:38,720


792
00:30:38,720 --> 00:30:41,399


793
00:30:41,399 --> 00:30:43,200


794
00:30:43,200 --> 00:30:45,779


795
00:30:45,779 --> 00:30:47,100


796
00:30:47,100 --> 00:30:48,539


797
00:30:48,539 --> 00:30:50,820


798
00:30:50,820 --> 00:30:53,039


799
00:30:53,039 --> 00:30:56,279


800
00:30:56,279 --> 00:30:57,899


801
00:30:57,899 --> 00:30:59,640


802
00:30:59,640 --> 00:31:01,440


803
00:31:01,440 --> 00:31:03,480


804
00:31:03,480 --> 00:31:05,460


805
00:31:05,460 --> 00:31:08,039


806
00:31:08,039 --> 00:31:10,799


807
00:31:10,799 --> 00:31:13,620


808
00:31:13,620 --> 00:31:15,919


809
00:31:15,919 --> 00:31:21,320


810
00:31:21,320 --> 00:31:24,419


811
00:31:24,419 --> 00:31:27,779


812
00:31:27,779 --> 00:31:30,020


813
00:31:30,020 --> 00:31:33,899


814
00:31:33,899 --> 00:31:36,179


815
00:31:36,179 --> 00:31:39,059


816
00:31:39,059 --> 00:31:43,080


817
00:31:43,080 --> 00:31:47,178


818
00:31:51,120 --> 00:31:54,479


819
00:31:59,360 --> 00:32:02,840


820
00:32:02,840 --> 00:32:05,760


821
00:32:05,760 --> 00:32:07,620


822
00:32:07,620 --> 00:32:08,700


823
00:32:08,700 --> 00:32:11,340


824
00:32:11,340 --> 00:32:14,460


825
00:32:14,460 --> 00:32:16,559


826
00:32:16,559 --> 00:32:18,659


827
00:32:18,659 --> 00:32:20,640


828
00:32:20,640 --> 00:32:22,799


829
00:32:22,799 --> 00:32:24,120


830
00:32:24,120 --> 00:32:25,620


831
00:32:25,620 --> 00:32:26,840


832
00:32:26,840 --> 00:32:29,820


833
00:32:29,820 --> 00:32:30,960


834
00:32:30,960 --> 00:32:33,120


835
00:32:33,120 --> 00:32:34,620


836
00:32:34,620 --> 00:32:35,760


837
00:32:35,760 --> 00:32:37,320


838
00:32:37,320 --> 00:32:40,080


839
00:32:40,080 --> 00:32:42,899


840
00:32:42,899 --> 00:32:44,399


841
00:32:44,399 --> 00:32:46,799


842
00:32:46,799 --> 00:32:49,140


843
00:32:49,140 --> 00:32:51,720


844
00:32:51,720 --> 00:32:53,220


845
00:32:53,220 --> 00:32:56,220


846
00:32:56,220 --> 00:32:57,720


847
00:32:57,720 --> 00:32:59,279


848
00:32:59,279 --> 00:33:02,279


849
00:33:02,279 --> 00:33:04,440


850
00:33:04,440 --> 00:33:06,720


851
00:33:06,720 --> 00:33:08,399


852
00:33:08,399 --> 00:33:10,320


853
00:33:10,320 --> 00:33:13,440


854
00:33:13,440 --> 00:33:15,299


855
00:33:15,299 --> 00:33:18,539


856
00:33:18,539 --> 00:33:21,480


857
00:33:21,480 --> 00:33:23,700


858
00:33:23,700 --> 00:33:24,960


859
00:33:24,960 --> 00:33:27,720


860
00:33:27,720 --> 00:33:29,519


861
00:33:29,519 --> 00:33:31,080


862
00:33:31,080 --> 00:33:34,740


863
00:33:34,740 --> 00:33:37,440


864
00:33:37,440 --> 00:33:39,899


865
00:33:39,899 --> 00:33:43,320


866
00:33:43,320 --> 00:33:45,720


867
00:33:45,720 --> 00:33:47,399


868
00:33:47,399 --> 00:33:50,039


869
00:33:50,039 --> 00:33:51,899


870
00:33:51,899 --> 00:33:54,779


871
00:33:54,779 --> 00:33:57,720


872
00:33:57,720 --> 00:33:59,220


873
00:33:59,220 --> 00:34:01,740


874
00:34:01,740 --> 00:34:04,559


875
00:34:04,559 --> 00:34:06,360


876
00:34:06,360 --> 00:34:09,359


877
00:34:09,359 --> 00:34:12,300


878
00:34:12,300 --> 00:34:14,639


879
00:34:14,639 --> 00:34:17,280


880
00:34:17,280 --> 00:34:19,379


881
00:34:19,379 --> 00:34:21,659


882
00:34:21,659 --> 00:34:24,179


883
00:34:24,179 --> 00:34:26,399


884
00:34:26,399 --> 00:34:28,739


885
00:34:28,739 --> 00:34:30,659


886
00:34:30,659 --> 00:34:33,119


887
00:34:33,119 --> 00:34:35,219


888
00:34:35,219 --> 00:34:36,780


889
00:34:36,780 --> 00:34:38,879


890
00:34:38,879 --> 00:34:41,099


891
00:34:41,099 --> 00:34:43,859


892
00:34:43,859 --> 00:34:46,440


893
00:34:46,440 --> 00:34:48,179


894
00:34:48,179 --> 00:34:49,800


895
00:34:49,800 --> 00:34:51,659


896
00:34:51,659 --> 00:34:54,060


897
00:34:54,060 --> 00:34:57,300


898
00:34:57,300 --> 00:34:59,099


899
00:34:59,099 --> 00:35:02,280


900
00:35:02,280 --> 00:35:05,099


901
00:35:05,099 --> 00:35:06,900


902
00:35:06,900 --> 00:35:09,119


903
00:35:09,119 --> 00:35:12,060


904
00:35:12,060 --> 00:35:14,160


905
00:35:14,160 --> 00:35:15,720


906
00:35:15,720 --> 00:35:17,339


907
00:35:17,339 --> 00:35:19,760


908
00:35:19,760 --> 00:35:21,720


909
00:35:21,720 --> 00:35:23,760


910
00:35:23,760 --> 00:35:26,700


911
00:35:26,700 --> 00:35:28,380


912
00:35:28,380 --> 00:35:29,940


913
00:35:29,940 --> 00:35:31,320


914
00:35:31,320 --> 00:35:34,740


915
00:35:34,740 --> 00:35:35,940


916
00:35:35,940 --> 00:35:38,099


917
00:35:38,099 --> 00:35:40,380


918
00:35:40,380 --> 00:35:42,960


919
00:35:42,960 --> 00:35:44,880


920
00:35:44,880 --> 00:35:47,520


921
00:35:47,520 --> 00:35:49,320


922
00:35:49,320 --> 00:35:51,540


923
00:35:51,540 --> 00:35:53,700


924
00:35:53,700 --> 00:35:55,200


925
00:35:55,200 --> 00:35:57,480


926
00:35:57,480 --> 00:35:58,980


927
00:35:58,980 --> 00:36:00,060


928
00:36:00,060 --> 00:36:03,780


929
00:36:03,780 --> 00:36:05,220


930
00:36:05,220 --> 00:36:06,720


931
00:36:06,720 --> 00:36:08,280


932
00:36:08,280 --> 00:36:09,780


933
00:36:09,780 --> 00:36:12,240


934
00:36:12,240 --> 00:36:14,700


935
00:36:14,700 --> 00:36:17,160


936
00:36:17,160 --> 00:36:18,599


937
00:36:18,599 --> 00:36:21,720


938
00:36:21,720 --> 00:36:23,220


939
00:36:23,220 --> 00:36:24,839


940
00:36:24,839 --> 00:36:28,140


941
00:36:28,140 --> 00:36:29,820


942
00:36:29,820 --> 00:36:31,920


943
00:36:31,920 --> 00:36:33,599


944
00:36:33,599 --> 00:36:37,380


945
00:36:37,380 --> 00:36:39,960


946
00:36:39,960 --> 00:36:42,420


947
00:36:42,420 --> 00:36:45,060


948
00:36:45,060 --> 00:36:46,020


949
00:36:46,020 --> 00:36:47,880


950
00:36:47,880 --> 00:36:49,260


951
00:36:49,260 --> 00:36:51,300


952
00:36:51,300 --> 00:36:54,359


953
00:36:54,359 --> 00:36:57,200


954
00:36:57,200 --> 00:37:00,780


955
00:37:00,780 --> 00:37:03,000


956
00:37:03,000 --> 00:37:04,440


957
00:37:04,440 --> 00:37:07,500


958
00:37:07,500 --> 00:37:08,940


959
00:37:08,940 --> 00:37:11,820


960
00:37:11,820 --> 00:37:13,140


961
00:37:13,140 --> 00:37:15,660


962
00:37:15,660 --> 00:37:17,940


963
00:37:17,940 --> 00:37:20,460


964
00:37:20,460 --> 00:37:22,140


965
00:37:22,140 --> 00:37:23,579


966
00:37:23,579 --> 00:37:25,760


967
00:37:25,760 --> 00:37:28,800


968
00:37:28,800 --> 00:37:33,680


969
00:37:34,820 --> 00:37:37,800


970
00:37:37,800 --> 00:37:39,720


971
00:37:39,720 --> 00:37:41,339


972
00:37:41,339 --> 00:37:42,980


973
00:37:42,980 --> 00:37:46,079


974
00:37:46,079 --> 00:37:47,220


975
00:37:47,220 --> 00:37:48,240


976
00:37:48,240 --> 00:37:49,640


977
00:37:49,640 --> 00:37:53,400


978
00:37:53,400 --> 00:37:56,339


979
00:37:56,339 --> 00:37:58,980


980
00:37:58,980 --> 00:38:00,720


981
00:38:00,720 --> 00:38:02,779


982
00:38:03,140 --> 00:38:06,180


983
00:38:06,180 --> 00:38:08,099


984
00:38:08,099 --> 00:38:09,720


985
00:38:09,720 --> 00:38:10,980


986
00:38:10,980 --> 00:38:13,140


987
00:38:13,140 --> 00:38:14,579


988
00:38:14,579 --> 00:38:15,720


989
00:38:15,720 --> 00:38:17,820


990
00:38:17,820 --> 00:38:20,280


991
00:38:20,280 --> 00:38:22,140


992
00:38:22,140 --> 00:38:25,440


993
00:38:25,440 --> 00:38:28,500


994
00:38:28,500 --> 00:38:31,020


995
00:38:31,020 --> 00:38:32,579


996
00:38:32,579 --> 00:38:34,380


997
00:38:34,380 --> 00:38:36,599


998
00:38:36,599 --> 00:38:38,400


999
00:38:38,400 --> 00:38:40,560


1000
00:38:40,560 --> 00:38:42,480


1001
00:38:42,480 --> 00:38:43,680


1002
00:38:43,680 --> 00:38:45,540


1003
00:38:45,540 --> 00:38:47,220


1004
00:38:47,220 --> 00:38:49,020


1005
00:38:49,020 --> 00:38:50,700


1006
00:38:50,700 --> 00:38:53,220


1007
00:38:53,220 --> 00:38:55,500


1008
00:38:55,500 --> 00:38:56,880


1009
00:38:56,880 --> 00:38:58,920


1010
00:38:58,920 --> 00:39:01,920


1011
00:39:01,920 --> 00:39:03,540


1012
00:39:03,540 --> 00:39:06,839


1013
00:39:06,839 --> 00:39:09,300


1014
00:39:09,300 --> 00:39:12,359


1015
00:39:12,359 --> 00:39:15,660


1016
00:39:15,660 --> 00:39:17,160


1017
00:39:17,160 --> 00:39:18,960


1018
00:39:18,960 --> 00:39:20,940


1019
00:39:20,940 --> 00:39:22,560


1020
00:39:22,560 --> 00:39:25,680


1021
00:39:25,680 --> 00:39:27,000


1022
00:39:27,000 --> 00:39:28,500


1023
00:39:28,500 --> 00:39:30,079


1024
00:39:30,079 --> 00:39:31,760


1025
00:39:31,760 --> 00:39:33,619


1026
00:39:33,619 --> 00:39:36,540


1027
00:39:36,540 --> 00:39:38,220


1028
00:39:38,220 --> 00:39:40,619


1029
00:39:40,619 --> 00:39:41,820


1030
00:39:41,820 --> 00:39:43,980


1031
00:39:43,980 --> 00:39:45,119


1032
00:39:45,119 --> 00:39:48,180


1033
00:39:48,180 --> 00:39:51,900


1034
00:39:51,900 --> 00:39:53,460


1035
00:39:53,460 --> 00:39:54,660


1036
00:39:54,660 --> 00:39:55,859


1037
00:39:55,859 --> 00:39:58,980


1038
00:39:58,980 --> 00:40:01,579


1039
00:40:01,579 --> 00:40:06,000


1040
00:40:06,000 --> 00:40:07,800


1041
00:40:07,800 --> 00:40:09,300


1042
00:40:09,300 --> 00:40:10,740


1043
00:40:10,740 --> 00:40:13,020


1044
00:40:13,020 --> 00:40:15,540


1045
00:40:15,540 --> 00:40:17,220


1046
00:40:17,220 --> 00:40:19,560


1047
00:40:19,560 --> 00:40:21,180


1048
00:40:21,180 --> 00:40:23,880


1049
00:40:23,880 --> 00:40:26,280


1050
00:40:26,280 --> 00:40:28,020


1051
00:40:28,020 --> 00:40:30,020


1052
00:40:30,020 --> 00:40:32,339


1053
00:40:32,339 --> 00:40:36,119


1054
00:40:36,119 --> 00:40:38,640


1055
00:40:38,640 --> 00:40:39,960


1056
00:40:39,960 --> 00:40:41,640


1057
00:40:41,640 --> 00:40:44,280


1058
00:40:44,280 --> 00:40:47,400


1059
00:40:47,400 --> 00:40:49,440


1060
00:40:49,440 --> 00:40:50,880


1061
00:40:50,880 --> 00:40:52,140


1062
00:40:52,140 --> 00:40:54,240


1063
00:40:54,240 --> 00:40:56,339


1064
00:40:56,339 --> 00:40:58,800


1065
00:40:58,800 --> 00:41:00,359


1066
00:41:00,359 --> 00:41:01,560


1067
00:41:01,560 --> 00:41:03,960


1068
00:41:03,960 --> 00:41:06,000


1069
00:41:06,000 --> 00:41:08,520


1070
00:41:08,520 --> 00:41:10,400


1071
00:41:10,400 --> 00:41:12,660


1072
00:41:12,660 --> 00:41:14,960


1073
00:41:14,960 --> 00:41:18,359


1074
00:41:18,359 --> 00:41:20,940


1075
00:41:20,940 --> 00:41:22,560


1076
00:41:22,560 --> 00:41:26,220


1077
00:41:26,220 --> 00:41:27,359


1078
00:41:27,359 --> 00:41:29,099


1079
00:41:29,099 --> 00:41:31,920


1080
00:41:31,920 --> 00:41:35,220


1081
00:41:35,220 --> 00:41:37,740


1082
00:41:37,740 --> 00:41:39,599


1083
00:41:39,599 --> 00:41:42,119


1084
00:41:42,119 --> 00:41:45,119


1085
00:41:45,119 --> 00:41:47,460


1086
00:41:47,460 --> 00:41:49,619


1087
00:41:49,619 --> 00:41:52,260


1088
00:41:52,260 --> 00:41:54,000


1089
00:41:54,000 --> 00:41:56,220


1090
00:41:56,220 --> 00:41:57,420


1091
00:41:57,420 --> 00:42:00,000


1092
00:42:00,000 --> 00:42:01,680


1093
00:42:01,680 --> 00:42:03,599


1094
00:42:03,599 --> 00:42:06,060


1095
00:42:06,060 --> 00:42:08,280


1096
00:42:08,280 --> 00:42:10,740


1097
00:42:10,740 --> 00:42:11,820


1098
00:42:11,820 --> 00:42:13,079


1099
00:42:13,079 --> 00:42:15,359


1100
00:42:15,359 --> 00:42:17,280


1101
00:42:17,280 --> 00:42:19,740


1102
00:42:19,740 --> 00:42:22,320


1103
00:42:22,320 --> 00:42:24,540


1104
00:42:24,540 --> 00:42:27,119


1105
00:42:27,119 --> 00:42:29,280


1106
00:42:29,280 --> 00:42:30,839


1107
00:42:30,839 --> 00:42:32,940


1108
00:42:32,940 --> 00:42:35,820


1109
00:42:35,820 --> 00:42:36,900


1110
00:42:36,900 --> 00:42:38,820


1111
00:42:38,820 --> 00:42:40,800


1112
00:42:40,800 --> 00:42:42,540


1113
00:42:42,540 --> 00:42:45,359


1114
00:42:45,359 --> 00:42:47,280


1115
00:42:47,280 --> 00:42:49,200


1116
00:42:49,200 --> 00:42:52,200


1117
00:42:52,200 --> 00:42:56,118


1118
00:43:07,319 --> 00:43:09,599


1119
00:43:09,599 --> 00:43:11,579


1120
00:43:11,579 --> 00:43:13,980


1121
00:43:13,980 --> 00:43:16,079


1122
00:43:16,079 --> 00:43:19,380


1123
00:43:19,380 --> 00:43:21,480


1124
00:43:21,480 --> 00:43:23,280


1125
00:43:23,280 --> 00:43:25,319


1126
00:43:25,319 --> 00:43:27,359


1127
00:43:27,359 --> 00:43:30,480


1128
00:43:30,480 --> 00:43:31,740


1129
00:43:31,740 --> 00:43:34,020


1130
00:43:34,020 --> 00:43:35,880


1131
00:43:35,880 --> 00:43:38,460


1132
00:43:38,460 --> 00:43:40,619


1133
00:43:40,619 --> 00:43:42,540


1134
00:43:42,540 --> 00:43:43,440


1135
00:43:43,440 --> 00:43:45,060


1136
00:43:45,060 --> 00:43:46,740


1137
00:43:46,740 --> 00:43:49,260


1138
00:43:49,260 --> 00:43:51,300


1139
00:43:51,300 --> 00:43:53,520


1140
00:43:53,520 --> 00:43:54,960


1141
00:43:54,960 --> 00:43:58,880


1142
00:43:59,040 --> 00:44:01,440


1143
00:44:01,440 --> 00:44:03,480


1144
00:44:03,480 --> 00:44:06,060


1145
00:44:06,060 --> 00:44:08,099


1146
00:44:08,099 --> 00:44:10,079


1147
00:44:10,079 --> 00:44:11,520


1148
00:44:11,520 --> 00:44:13,920


1149
00:44:13,920 --> 00:44:15,180


1150
00:44:15,180 --> 00:44:16,680


1151
00:44:16,680 --> 00:44:19,370


1152
00:44:19,370 --> 00:44:28,440


1153
00:44:28,859 --> 00:44:30,020


1154
00:44:30,020 --> 00:44:33,300


1155
00:44:33,300 --> 00:44:36,000


1156
00:44:36,000 --> 00:44:38,220


1157
00:44:38,220 --> 00:44:40,079


1158
00:44:40,079 --> 00:44:42,900


1159
00:44:42,900 --> 00:44:44,339


1160
00:44:44,339 --> 00:44:46,980


1161
00:44:46,980 --> 00:44:49,319


1162
00:44:49,319 --> 00:44:51,180


1163
00:44:51,180 --> 00:44:53,760


1164
00:44:53,760 --> 00:44:56,940


1165
00:44:56,940 --> 00:44:57,900


1166
00:44:57,900 --> 00:44:58,880


1167
00:44:58,880 --> 00:45:02,339


1168
00:45:02,339 --> 00:45:04,920


1169
00:45:04,920 --> 00:45:06,780


1170
00:45:06,780 --> 00:45:08,880


1171
00:45:08,880 --> 00:45:10,980


1172
00:45:10,980 --> 00:45:12,540


1173
00:45:12,540 --> 00:45:14,420


1174
00:45:14,420 --> 00:45:18,180


1175
00:45:18,180 --> 00:45:20,280


1176
00:45:20,280 --> 00:45:22,319


1177
00:45:22,319 --> 00:45:25,380


1178
00:45:25,380 --> 00:45:27,540


1179
00:45:27,540 --> 00:45:30,540


1180
00:45:30,540 --> 00:45:35,060


1181
00:45:35,720 --> 00:45:38,400


1182
00:45:38,400 --> 00:45:40,260


1183
00:45:40,260 --> 00:45:41,940


1184
00:45:41,940 --> 00:45:44,099


1185
00:45:44,099 --> 00:45:46,500


1186
00:45:46,500 --> 00:45:48,359


1187
00:45:48,359 --> 00:45:50,760


1188
00:45:50,760 --> 00:45:52,079


1189
00:45:52,079 --> 00:45:54,480


1190
00:45:54,480 --> 00:45:56,520


1191
00:45:56,520 --> 00:45:58,460


1192
00:45:58,460 --> 00:46:02,520


1193
00:46:02,520 --> 00:46:03,780


1194
00:46:03,780 --> 00:46:05,940


1195
00:46:05,940 --> 00:46:08,160


1196
00:46:08,160 --> 00:46:11,040


1197
00:46:11,040 --> 00:46:13,319


1198
00:46:13,319 --> 00:46:16,880


1199
00:46:17,460 --> 00:46:20,400


1200
00:46:20,400 --> 00:46:21,540


1201
00:46:21,540 --> 00:46:24,119


1202
00:46:24,119 --> 00:46:26,460


1203
00:46:26,460 --> 00:46:27,660


1204
00:46:27,660 --> 00:46:31,140


1205
00:46:31,140 --> 00:46:32,579


1206
00:46:32,579 --> 00:46:34,079


1207
00:46:34,079 --> 00:46:36,540


1208
00:46:36,540 --> 00:46:38,540


1209
00:46:38,540 --> 00:46:40,560


1210
00:46:40,560 --> 00:46:44,760


1211
00:46:44,760 --> 00:46:47,280


1212
00:46:47,280 --> 00:46:48,960


1213
00:46:48,960 --> 00:46:50,040


1214
00:46:50,040 --> 00:46:52,140


1215
00:46:52,140 --> 00:46:54,420


1216
00:46:54,420 --> 00:46:57,119


1217
00:46:57,119 --> 00:46:58,800


1218
00:46:58,800 --> 00:47:01,020


1219
00:47:01,020 --> 00:47:03,000


1220
00:47:03,000 --> 00:47:05,700


1221
00:47:05,700 --> 00:47:08,339


1222
00:47:08,339 --> 00:47:10,560


1223
00:47:10,560 --> 00:47:12,240


1224
00:47:12,240 --> 00:47:13,680


1225
00:47:13,680 --> 00:47:15,960


1226
00:47:15,960 --> 00:47:17,940


1227
00:47:17,940 --> 00:47:19,680


1228
00:47:19,680 --> 00:47:22,500


1229
00:47:22,500 --> 00:47:24,240


1230
00:47:24,240 --> 00:47:26,280


1231
00:47:26,280 --> 00:47:28,980


1232
00:47:28,980 --> 00:47:30,300


1233
00:47:30,300 --> 00:47:33,599


1234
00:47:33,599 --> 00:47:35,460


1235
00:47:35,460 --> 00:47:37,740


1236
00:47:37,740 --> 00:47:40,200


1237
00:47:40,200 --> 00:47:43,380


1238
00:47:43,380 --> 00:47:46,740


1239
00:47:46,740 --> 00:47:48,960


1240
00:47:48,960 --> 00:47:50,819


1241
00:47:50,819 --> 00:47:53,000


1242
00:47:53,000 --> 00:47:54,900


1243
00:47:54,900 --> 00:47:58,079


1244
00:47:58,079 --> 00:48:00,180


1245
00:48:00,180 --> 00:48:01,980


1246
00:48:01,980 --> 00:48:03,359


1247
00:48:03,359 --> 00:48:06,000


1248
00:48:06,000 --> 00:48:08,520


1249
00:48:08,520 --> 00:48:10,260


1250
00:48:10,260 --> 00:48:12,900


1251
00:48:12,900 --> 00:48:16,380


1252
00:48:16,380 --> 00:48:18,599


1253
00:48:18,599 --> 00:48:21,119


1254
00:48:21,119 --> 00:48:23,220


1255
00:48:23,220 --> 00:48:25,980


1256
00:48:25,980 --> 00:48:28,319


1257
00:48:28,319 --> 00:48:30,780


1258
00:48:30,780 --> 00:48:33,300


1259
00:48:33,300 --> 00:48:35,460


1260
00:48:35,460 --> 00:48:37,260


1261
00:48:37,260 --> 00:48:39,240


1262
00:48:39,240 --> 00:48:40,200


1263
00:48:40,200 --> 00:48:42,660


1264
00:48:42,660 --> 00:48:44,940


1265
00:48:44,940 --> 00:48:46,380


1266
00:48:46,380 --> 00:48:48,839


1267
00:48:48,839 --> 00:48:51,180


1268
00:48:51,180 --> 00:48:54,060


1269
00:48:54,060 --> 00:48:55,319


1270
00:48:55,319 --> 00:48:57,000


1271
00:48:57,000 --> 00:48:58,319


1272
00:48:58,319 --> 00:49:00,000


1273
00:49:00,000 --> 00:49:01,500


1274
00:49:01,500 --> 00:49:04,319


1275
00:49:04,319 --> 00:49:06,119


1276
00:49:06,119 --> 00:49:07,200


1277
00:49:07,200 --> 00:49:10,880


1278
00:49:10,880 --> 00:49:12,780


1279
00:49:12,780 --> 00:49:15,420


1280
00:49:15,420 --> 00:49:17,280


1281
00:49:17,280 --> 00:49:18,240


1282
00:49:18,240 --> 00:49:19,740


1283
00:49:19,740 --> 00:49:21,720


1284
00:49:21,720 --> 00:49:23,400


1285
00:49:23,400 --> 00:49:25,560


1286
00:49:25,560 --> 00:49:27,359


1287
00:49:27,359 --> 00:49:30,000


1288
00:49:30,000 --> 00:49:31,440


1289
00:49:31,440 --> 00:49:34,079


1290
00:49:34,079 --> 00:49:35,760


1291
00:49:35,760 --> 00:49:38,520


1292
00:49:38,520 --> 00:49:40,079


1293
00:49:40,079 --> 00:49:42,300


1294
00:49:42,300 --> 00:49:45,599


1295
00:49:45,599 --> 00:49:47,339


1296
00:49:47,339 --> 00:49:48,359


1297
00:49:48,359 --> 00:49:51,660


1298
00:49:51,660 --> 00:49:54,300


1299
00:49:54,300 --> 00:49:56,040


1300
00:49:56,040 --> 00:49:58,020


1301
00:49:58,020 --> 00:50:00,900


1302
00:50:00,900 --> 00:50:03,619


1303
00:50:03,619 --> 00:50:06,540


1304
00:50:06,540 --> 00:50:07,619


1305
00:50:07,619 --> 00:50:09,960


1306
00:50:09,960 --> 00:50:13,560


1307
00:50:13,560 --> 00:50:16,260


1308
00:50:16,260 --> 00:50:18,180


1309
00:50:18,180 --> 00:50:20,099


1310
00:50:20,099 --> 00:50:23,520


1311
00:50:23,520 --> 00:50:24,920


1312
00:50:24,920 --> 00:50:27,780


1313
00:50:27,780 --> 00:50:29,460


1314
00:50:29,460 --> 00:50:31,440


1315
00:50:31,440 --> 00:50:32,839


1316
00:50:32,839 --> 00:50:35,460


1317
00:50:35,460 --> 00:50:37,800


1318
00:50:37,800 --> 00:50:40,880


1319
00:50:40,880 --> 00:50:43,680


1320
00:50:43,680 --> 00:50:45,420


1321
00:50:45,420 --> 00:50:47,099


1322
00:50:47,099 --> 00:50:48,839


1323
00:50:48,839 --> 00:50:51,359


1324
00:50:51,359 --> 00:50:53,940


1325
00:50:53,940 --> 00:50:56,760


1326
00:50:56,760 --> 00:50:58,260


1327
00:50:58,260 --> 00:51:00,240


1328
00:51:00,240 --> 00:51:01,920


1329
00:51:01,920 --> 00:51:03,000


1330
00:51:03,000 --> 00:51:04,920


1331
00:51:04,920 --> 00:51:06,660


1332
00:51:06,660 --> 00:51:09,540


1333
00:51:09,540 --> 00:51:10,980


1334
00:51:10,980 --> 00:51:12,660


1335
00:51:12,660 --> 00:51:13,800


1336
00:51:13,800 --> 00:51:16,760


1337
00:51:16,760 --> 00:51:19,980


1338
00:51:19,980 --> 00:51:22,020


1339
00:51:22,020 --> 00:51:24,359


1340
00:51:24,359 --> 00:51:26,700


1341
00:51:26,700 --> 00:51:27,680


1342
00:51:27,680 --> 00:51:29,700


1343
00:51:29,700 --> 00:51:31,319


1344
00:51:31,319 --> 00:51:33,420


1345
00:51:33,420 --> 00:51:35,819


1346
00:51:35,819 --> 00:51:37,380


1347
00:51:37,380 --> 00:51:40,280


1348
00:51:40,280 --> 00:51:42,720


1349
00:51:42,720 --> 00:51:45,900


1350
00:51:45,900 --> 00:51:47,660


1351
00:51:47,660 --> 00:51:50,160


1352
00:51:50,160 --> 00:51:52,200


1353
00:51:52,200 --> 00:51:54,980


1354
00:51:54,980 --> 00:51:57,119


1355
00:51:57,119 --> 00:51:58,559


1356
00:51:58,559 --> 00:52:00,000


1357
00:52:00,000 --> 00:52:02,339


1358
00:52:02,339 --> 00:52:03,960


1359
00:52:03,960 --> 00:52:05,720


1360
00:52:05,720 --> 00:52:09,558


1361
00:52:18,140 --> 00:52:20,040
We welcome Martín With a loud round of applause [Applause] Good Good Hello everyone My name is Martín Medinar This is an internal server error Exploiting interposes communication TV server A little bit about me Bring me the best photo I had I'm a secret We make a  little security or a little a lot of security in business software in what we call business critical applications and among the different vendors or software that exist of this type SAP is probably the largest Yes with more than 400,000 installations or clients in the world including  90% of the fortune Five Hundred that are the largest companies in the world and these companies use SAP or these United systems to administer and manage business processes such as day-to-day operations finance human capital different good  things they do and how they see the different modules that SAP has to precisely manage the resources that a company has  We at Onapsis talk a lot about this because it is precisely the Software that they choose to manage the most important thing that exists in a company and that is why we try to find security errors to be able to take advantage of them and show how an attacker would take advantage and end  Definitely compromising a company. Well, as you can see, SAP has many modules. There are many types of SAP installations with many components, and that is why it is often difficult to find something in common. Two installations are usually the same, which makes our work difficult because if we find a vulnerability in  a component a module a system may work in some but not everywhere and that is why I decided to do this talk looking for a component that SAP has in common like many other systems use or go to their services in web Services just as much in  java as in abab if they come down now all j is being migrated  Justly to http and web services is mainly the way in which all the functionalities are going to be accessed to expose these services. What SAP does is use an http server that they created, it is proprietary, obviously it is not Open source, it is called internet communication manager  The intercommunication manager or icm as the most we are going to refer to by the acronym is a component that works to communicate the SAP with the outside world, this is with clients, clients or browsers with other vendors with other Apps included and it is basically the component that uses  to handle all the communication that a SAP has with the outside Yes, in addition to http, which is the main protocol that it understands and is used precisely for that. That's why I say that it is an htp server, in reality it also understands other other services. Rather, other communication protocols  as is p4 which is a protocol similar to java rmi aeop smtp telnet and some more but pr functionality  The main thing about the icm is precisely to manage and understand all the http communication. I chose the icm to do resets because, as I said, it is a component that is found in all Apps, in fact it is by default in everything in all Apps systems and we will find it even  available and accessible many times through the internet this is part of what is called the SAP kernel if it is part of net weaver and is found in all products both in Java avap web dispatcher which is a type of Proxy which is a Proxy  Http is forged in the Cloud everywhere there is the icm So it is a very critical component for SAP we are going to see that in this talk I am going to talk a lot about this icm but in reality many of the things that I am going to explain now and what  i'll wait during the talk apply to other http servers in fact some attacks and exploits can be used and we'll see how it compares with some other vulnerabilities found in other proxies and in  other servers is obviously not like I said Open source So we are going to have to go back to understand how it works internally and if you provide us with a small diagram of what the internal architecture is like and a short description but this diagram is too complex to understand and  In order to really be able to explain it in a talk, what I am going to do is abstract many of the concepts and many architectures so that it is easier to understand, I am not going to put so much in the internals. But if anyone wants to understand a little more later, they can ask me  or you can see the paper that is more explained yes So we are going to make it much simpler and we are going to see it in a more abstract diagram.  connections from a client if this is a browser the client or it can be some application that uses http when a client starts a co  connection or you want to send a rich Quest, the first thing you have to do is start a tcp connection. So when you do this, the icm receives this connection request and what it does is search its stretch pool for what is called a Walker cell and assign it to it  directly this tcp connection, that is to say that now the most this workers 3 will handle all the communication with this specific client, that is to say with this tcp communication when the client once established the connection that already has its worker 3 Sends a request what goes  what will happen is that worker 3 will call the htm parcer it will try to understand the ricast and it will use it to determine what are the internal handlers that have to be used to resolve this rich and generate response now these internal handlers are very simple  they're static they don't actually contain the business logic in the icm because it's just a http server So when the first thing it's going to do is try to figure it out with that but the  In most cases it will not be possible, so what it is going to do is send this rich is to the process that does contain the business logic, which is a Java or avap process, this is going to be done through Memory pipes, now we are going to see  Well what are these Memory pipes But the idea is that it is going to send this this ricost the Walker produces which is the Java it is going to re it is going to send the response back to the icm and the icm is going to form it to the client they are going to see what  The diagrams I use are all with little circles and little squares, this is to make it easier to understand, there aren't many graphics, but I think it's the easiest way to understand how the icm works internally. Well, I said that the way to send this rich is from an icm  The worker process is through Memory pipes, which are Memory pipes or mpi as the calls, well, they are in themselves an interface or frame or something API, whatever you want to call it, what it does is precisely to take care of all data exchange between  the icm and another process will do this although it is called Memory pipes, those who know about inter-process communication believe that it is one way but it will do it using shared memory if shared memory is a fraction of memory that  different processes can access to just communicate and exchange information and to make it efficient  Instead of sending a ricast, what is going to be sent is a pointer to the portion of shared memory that has that rich, yes. These pointers are what we call MP and pointers, and they point precisely to a buffer inside the shared memory, which is an mp  and buffer that is of fixed size is from 2 to 16 actually 12 16 minus 80 which are 80 bytes of headers and a byte at the end which is the one that indicates the end of the request which is a  nullbite and what it will allow is that a worker process or a Street worker can reserve and release them using what is called MP and Hunter we don't care they can just reserve and release them whenever they want to be able to exchange this information so let's see an example of  How would a client send a request and have it processed and sent to the Java or avap process? Well, when the client sends a request, the first one to receive it is the imputed put handler, which is simply a tcp socket with an internal buffer that can receive all  the Data that the worker will at some point request to process so when the worker is ready to process a ricast what it will do is receive this Data first reserve an mpi buffer in shared memory and it will save the ricast inside that  buffer yes then there it is going to divide it, it is going to choose the internal ones that now we are going to see them for a little while and when and if you cannot solve it internally q  In most cases, what it is going to do is send this rich thing to the Java process, how is this going to be? Instead of sending it all the rich, what it is going to do is send it a pointer to that portion of memory that it has  the rich this So now the Java process or it can generate a response it will be the same it will reserve an mpi buffer and what it will do is save This response in there it will then pass the pointer to the worker Street and now the icm  you already have access to that response and you can form it directly to the client now what you are going to do is obviously free these mpi buffers because you might want to use it in the future or you might want to use the same Street worker or another Street worker So we free these buffers and we also free the  references to those buffers That is the simple process of how the data is exchanged between the icm and the worker process but I also said that there was on the internet first that they are called to try to solve and  ste rico This then how would they work well they are functions that are inside the icm now we are going to see what they are there what they do is when the parcer is called the partial will determine using the URL that was retrieved which are the internals that are  they have to call Which are the functions that have to be included in a list to try to resolve this this request yes, as I said, the internals are put in a list that starts when the parer is called and they are going to be chosen in an orderly manner Which ones  They are the ones that must be included to try to solve it. The fact that a handler is included does not mean that it will be able to solve it, it will only try to do it and when a handler manages to resolve a request, that is, it generates a response, all the other handlers will be eliminated.  from the list because we already have the response and we can send it to the client. So the first handler that exists is the street handler, it is by default, it will always be in  include in the list no matter what the URL is after it can resolve it It's nothing else but what it's going to do as you can imagine is look in the memory of the lane and see if there is a saved object for that requested resource plus we have  the admin and the authentication handler are two handlers that are by default they are always there but they are only included If the URL prefix matches any prefix established in the case of the admin handler it is /sapp/admin Yes it starts with that the URL is  it will include in the case of the authentication handler there are some values ​​jacodied and others can be set to compare with the URL and determine if they have to be included or not then we have the modification file Access and redirect handler the three are not by default they have to be  set previously in a configuration file before starting SAP, that's why they are not so interesting and then we have Java and avap Hundred, these are also always included  they do not try to solve it internally The rich is, but rather they are in charge of exchanging data and the exchange of mpi pointers between the icm process and the Java or avap process if one is going to be chosen depending on how the system is if the system is  ready to go down, as you can see, I said there was a function for each of these internals and when they manage to resolve it, if any of these functions manages to generate a response, what it will do is finish the roundtrip process and it will send directly  the response to the client So now we are going to see an example of what it would be like when the request is resolved using the internet again the rich arrives at the attributable which is the socket in this case we see that the rich is a get a/sapp/min  the icm is going to reserve a buffer mpi is going to save the rich is there And now it is going to call the patcher The ser pair is going to say good What are the handlers that I have to include we have the cache first as s  It will always be included later we have the admin handler in this case because in the URL it started with slashes to rmin and then we have in all cases a Java or app handler is also always included in case none of them could solve it and send it to the other  process now after something is called that called the parcer we are going to start trying to solve it with the internahundlers first the cache in this case let's assume there was nothing saved in the street for this resource so we delete it we continue with the admin handler  the admin handler in this case Yes it will be able to solve them suppose there was a resource for this this rich is specific so what it will do is generate a response this response will not be saved in the MP and buffer as before because there is no need to  exchange it between processes directly it is going to be saved in a distance now in an internal buffer and it is going to be sent to the good client all the other handlers are going to be deleted and  It is going to be sent to the client, ending the roundtrip process with Rico. He is responsible. Yes, this. Sorry, it is going to be saved in the gip. I didn't get the word that it will be important in the future, if you remember. So when a handler resolves, it doesn't save in the gip.  in the shared memory but in the gip well the response is sent and now the mpi buffer is released and the reference will also be made but as I told you these buffers are of static size if they do not have more than two at 16 So what  What happens if I send a ricast that is longer than 65 kilobytes if it's not a ricost it's so long in general nowadays but it won't fit into an mpi buffer So we have to find the new way Well if in this case a  rich is of this type what the icm will be first is to reserve a buffer as always and it will save the first 65 kilobytes there and now it will call the handles and it will exchange with Java water goes or the Hugo app process  why because in  Actually the internaunders do not need more than the headers and the URL that is part of the gigabytes then and in SAP as in many other systems the hydros are limited to 65 kilobytes if I send something longer than that the system will bounce it back.  it will say that there is an error and the rich one will not work But then what it will do is save the first 65 kilobytes and when I know when no internet can solve it, suppose what will happen is how the javo process goes  Havov, yes, he will need the bodysuit, all the rest of the Records will be there. Now, worker 3 is going to reserve as many baffers as he needs in this case. He was only one but it could be as many as he wants.  it is going to send all the pointers to the process now a response is going to be generated as always it is going to be saved in shared memory reserving a buffer this pointer is going to be sent to worker 3 and now it can still form the response to the client and  the process ends but in the previous case when we free the buffers we free them one by one why? Because we had a buffer for a ricast and a response now as there are several and we cannot know exactly how many what is going to be done is Call one  function called mpi cold the buffers yes what it is going to do is exactly as the name is freeing all the buffers associated with worker 3 yes And now the references are going to be freed after the MP and buffer does not free references with which  You have to do it by hand after this this is also going to be important in the future but I'm going to explain it again Well up to here a general idea of ​​how it works we are going to see the first vulnerability you are going to see how simple the next one is not too complicated  Because it is much more complex, but it will help us to understand precisely the second vulnerability and also to see how using simple things we can exploit a system in a very critical way.  ema then I said that when I have a rich file it is very long a part is saved first and then the rest but I did not show what happens with the internal handlers in that case then if I command a rich file it is for example with a control of 66,000 bytes what  It is going to be the icm obviously we said it is to reserve a buffer to save the first part and now it is going to call the partner that is going to choose which are the handles that have to be used in this case again they are the street the admin and the process handler then  what is going to be done is to first call the street handler fails and calls the landing handler in this case the landing Hunter manages to resolve the request then general response and this response went save the client But there was a problem here and it is that in reality the  internals do not expect to be able to resolve a rico is long, that is, a rico is more than 65 kilobytes, because in theory a Nintendo handler should resolve requests that only contain headers, it is dec  they didn't think about this when they developed it, probably that it could arrive because that is, the SAP application is never going to send a file of this type but that Someone could maliciously send a file is long that it has been resolved internally so when it is  generates the response the icm is going to think that the cycle of rich response has just ended and it is going to free the buffer it is going to free the handlers it was going to say that it is over and it has nothing more to process and now wait for a new rich this  But what happens in the socket, there was more data with which it is going to send it to worker 3 But it is going to re-reserve a buffer and it is going to save it there and it is going to start processing it as if it were a nouveau riche But what about this?  It was not a new rich man this was the body of the rich man this previous one with which I was able to separate a rich man from the back and make it separate and precisely that process as two for those who know a little about synchronization  ión and smartlink this can be exploited precisely with htv smartlink, which is one of the techniques that I have worked on in recent years. So the ideal would be for everyone to know what htv is today, yes it is a vulnera that has been used a lot  for an exploitation that has been using a lot in these years but I am going to make a quick brief explanation of how it would work the first thing to say is us the attack would be the [Music] it would be the rich is that we see here on the screen Yes on the right below is a rich  It is very simple, it is a get asap admin public default with a hostiger and a content lens that matches with the length of the rich, that is, here there are a lot of as, they should be matched with this with this link, that is, there is nothing strange, any Proxy that I see  this rich man is going to say it is a river it is common he was a Guardian like one there is nothing But what happens because it is just his birthday with the RFC the RFC does not say that this is an error if you ask the RFC htp this is a r  ico is common when it arrives at baquen Yes then we see in the image below the attacker sends this packet and the Proxy bombards them as one when albaquen arrives This is going to be separated Yes because we have the vulnerability that I just explained This is a rich one it is long  that is going to be resolved by zapa admin by the admin then the first part will be resolved a response will be generated and the attacker will be sent again But there will be one more piece left just in the cow the cow  received a get smaggle Host with a husky from the System app too and got incomplete So it's waiting for more Data to finish this request yes What happens when a client sends a request now what they can see is why this works because if the attacker comes and  the client uses different connections which is logical to connect to the Proxy the Proxy refuses the tcp connection This is the basis of what would be the http synchronization as in http 1.1 it will be pe  allow persistent connections we are going to persist so as not to have to open and close the tcp connection many times the next one will use the same connection and will send it here with which it will reach the backend thinking that it is more data from the same client  is going to hit just below this rico is that we inject the red part and the backend is going to process it as if all this were a single request, that is, we could Modify the rico from the victim and generate a different response that we would control.  note that we can use the headers of the victim in this case we could update headers like cookies and things like that to improve our attack and get certain information or functionality that is prohibited for someone who is not authenticated well that is the basic idea of ​​this  attack what we are going to do and how we are going to attack the vulnerability Now there are many many ways to exploit this but one of the most useful is  s is using the nwa Yes, in reality it is an impose that is in all Java systems and what it serves and serves to redirect any client to the login URL sometimes it is difficult in a saps to know what the url is because they vary in some  cases, then what this service does is precisely redirect the client to login. It has two very interesting features and they are features, they are not security errors because they are not exploitable without another vulnerability. The first is an Open redirect, whatever we put in the Host header will  to be reflected is reflected in the location header, that is, the person who sends this rich is if we send in the hostileder to attack the Host, what will happen is the redirect will send us to attack games This is thought like this because also in a  SAP system we could have different systems and different hosts so the idea is that it can be done Dynamic and then we have another very interesting Fisher that is reflected all  or whatever is in the body of the rico is from the post rico is nwa is also reflected in the location header but as part of the cuerestream yes that is to say when someone sends this what will happen is that they will receive a redirect that will  to send to attack Host and the URL to send is going to be all included what we send in the body all line breaks are converted to spaces So we can send whatever we want So how are we going to combine this with desynchronization  that we already had, well, the idea is precisely to steal or end up stealing a user's session cookies, so the main idea is the attacker is going to send a stick, yes, we see it here on the screen, the hair, as we said, is a get asap admin, it could be  also something that solves another internet handler in this case we are going to work only with admin authentication is not needed as you will see to use this that later works it does not work or it gives us a good response or it is not indistinct  I'll work soon the hander this is going to be sent the Proxy will play it as one but when the backen arrives it will be separated the first part will generate a response yes it will be send to the attacker and the second part will send it  What we inject in this case is a message to nwa with the Host being evil.com, it is a server that the attacker would control and a content of 100, that is, this rich is not complete because it is missing 100 bytes of Then the icm will generate the  response the first response generated by the handler will be sent to the attacker If the attacker already has this, he does not need more and left a prefix injected for the next request So now the icm will be waiting for more Data actually 100 bytes to be able to  complete this request and generate a response When the victim comes and sends his rich this If in this case a get that as we see is a get to the SAP system with Session Cookies if these are mys Up sco what it will do is the icm  going to hit  this below the request and it will use the first 100 bytes as part of The rich is that we inject and what will it return to the victim well let's remember nwa's response is a redirect Where is there and with what with the first 100  bytes of the victim's stuck or reflected in the neck String of the url So this is what the victim would see when it receives the yes response Receives a redirect as I said there is Bluetooth with with the quiristring containing Session Cookies What happens when a browser  It receives a redirect, exactly what it does is redirect itself to the Host that it was told So now the victim is going to send a new rich is a Server connected by the attacker with a URL that contains its cupidecession So now the attacker would receive the cuquization and we could use  precisely the session of the victim to do what we want in that toad this vulnerability as they see it is very particular because in the past there were many f  ways to attack and break and get to synchronization but in this case we are not using any specific leader if we are not using anything different or nothing that breaks the RFC Then we could safely send this ricast using a form for example using html or javascript yes  they will say why we want to do this Well there are a lot of utilities that we can find for you Yes, as you can see, what this form does is send a rich is to SAP System yes eh with Elsa URL padding a padding that is what will make our rich  is long and then the attack is injected, which is the post nwa with the 100 bytes of content lens so that the victim ends up sending us their cookies. There is a javascript that will submit it automatically. So when I load this form, the attack will be generated because  It's so interesting, well, on the one hand, because now I don't need the attacker to send this this attack, yes, this was very difficult in other cases, but now I, for example  For example, if I don't have access to the SAP, which is something that could be common, we add, I have a SAP that is behind a VPN. As an attacker, I can't do this, but what I can do is use a little bit of a very simple social engineer to put a  in a Server this form and if someone enters that has access to that SAP, you will be sending the attack for us So we are going to turn the victim into an attacker, this can also be used to desynchronize the victim directly to the victim's arm  with the server, that is to say, it is not necessary to use a Proxy, something that is very new in http synchronization, we call it Clarence of zinc, it is something that was presented in blackjackd this year and gives a lot of new alternatives to attack the different servers a  Example of how to use this also exists in a vulnerability that was found last year in hbo Proxy that was a Flow build and basically allowed something similar we weren't using heade  rs that break the RFC if some custom headers with which using revinding assets we could always in a very simple way generate the same attack then again in addition to all this what I can do is make a bonet because because remember that the victim had it  sent a rich is with his cookies Yes so far so good but what happens if the server.com sends this form that we just saw this to the victim well the victim's browser is going to load that form and is going to send a rich this from  new that rich man is precisely a pailón that a rich man sends is that it will be resolved by the hander and he leaves the attack again, that is to say that with a single attack we are going to make this persist because each victim that arrives and sends  a rich man is the SAP is going to be redirected to the level as he is going to send this form and he is going to send attack again the next victim is going to be the same and so on this will never end Well let's see a little one  Na demo of this good in this Debut tab we have the victim if the victim is doing a ricast to Star page nothing returns a 200 everything normal as you will see the victim includes his cookies in this ricast yes we can send him a thousand that he will always send us  a 200 there is nothing strange with the cookies now there is the attacker tab what the attacker does is send a rich is to SAP admin which is the attack that I just explained simply a lot of padding to make a rich is long and at the end  of all this we are sending the post request that we want to inject in this case it is 200 dances that we are going to test Yes and we are redirecting it to malicious domen which is a Host that I control as attacker he sent me this I don't care anymore They return 200 of  The admin doesn't care much about that, but what I do care about is that now when the victim sends a ricost instead of receiving a 200, the same rico is receiving a 302 Why? Because he just stuck to the prefi  jo of us injected and as you can see what is sent what you receive is a yellow redirect with the with its 200 bytes of query now if we follow the redirect what we see is that this rich is sent Yes thinking that it is the login to where amalicious  dominate with the 200 bytes of request that this includes Session Cookies and as you can see the response from this server is just a form that will persist and keep the attack alive well let's continue well let's continue this is this from the first unit now to understand the second  We are going to have to understand a little more about the http functions. One of the tabs that I tried in HTTP 1.1 and from now on is pipeline, which would be the ability of a client or a Server to send several riches nested one behind the other with well-declared limits.  understand all the pros and all the backens This is not a good idea This is something normal and the backen both the backen and the next with any partial have to be able to  e separate and process them one by one and generate the responses one by one then we see an example of how this would happen in the icm if I send two Rico standars in the same message what will happen is that the wordreference will reserve a  mpi Y buffer, as always, it will save this there, but when the parcer reads this rico, what it will do is find that there is one more, so it notifies the worker Street and what it does is reserve a new buffer and save this request, extract and  it leaves it there it leaves it for a while it continues processing the first one if the Java process sends it to it the Java process generates a response it saves it in the mpi buffer it is sent by worker 3 again and this is sent to the client up to here nothing strange  it releases each one of these buffers and now it is going to continue processing the next rich one, in this case it is the one that has been saved because Pay was planned and it is going to send it to the Java process or it is going to work with the Internet users what  whatever is going to end with this rich man But what happens is there something else we can do which is to send a rich man is very long and then very long a rich man is more than 65 kilobytes and then yes a rich man who is smart in this case we don't want that  It is received by an internal handler but we want it to go to the Java process if we don't want to shred previous in this case I send it this and it will do the same as always it will reserve an mp and an mpi buffer and it will save the first 65  kilobytes actually when it is going to send it to the Java process it is going to read the rest of the rich this and it is going to save it in the because it has to send it all to the Java process but when it seems this is going to say ah there is a rich it is more  In addition to everything, then I'm going to save another buffee, I'm going to request another mpi buffer and I'm going to save this other rich one, it's there and I'm going to leave it hanging so that later I can process it, as we saw, it's just going to send the first two pointers of the  first two buffers  s to the Java process, this will generate a response, it will save it here, it will send it to the worker and the Street worker will forward it to the client.  more than one buffer, that is, when we send a rich file, it is long, a function was called to free all the buffers of one that is the MP and cold the buffers and this frees all the buffers associated with workers 3, all of them including the one for the next request, they go to  release references to the other buffers but not obviously to the next rich space planned when now the worker wants to work with this buffer otherwise the bp pedi does not release references that is important we can still access this buffer which is free what's going on  to do is try to reprocess it But there will be an error because the Walker is the Java process if it will see that this is a free buffer Then it will not like it and it will not want to process but although it cannot  Let's process this somehow we have a reference to a free buffer that could safely reserve another worker Street and suddenly they would collide and that is what we are going to take advantage of then to do this again we send first the first part is simple we send a rich is  long is going to ask for another buffer Yes The pair is going to determine that there is one that there is another rich one is extra because it has extra bytes in this case we are not going to send a rich one it is complete extra we are going to send only one X now we are going to see why  the ser pair will say if there is an extra byte then save it in another buffer and wait and then we see it we walk it we do something it will process the first rich is it will send the response to the client and it will free all the buffers yes it frees  the references and still not only we are left with the reference to the other buffer that we are using for the next request Now if the worker 31 is going to share this nouveau riche is that it has a  only only one x and it will say for this rich it is not complete I am missing data So I go from parcer mode to read mode yes it will wait for more Data that arrives from the client at that moment We can wait as long as we want with that because we  we are the client and we can wait and when we want we send more Data and there it will continue at that moment another client another tcp connection sea worker 2 will receive a rico is from another person and will reserve the same buffer that we had assigned Yes  because because they are stored in a stack So the buffer that I know was released last is probably the one that is reserved the fastest in reality there is a set of stacks it is a little more complex but in theory This is going to happen very very fast When this happens  Obviously the client is going to send his rich this. In other words, the floor reserved this buffer to store the rich is and as we see above it will step on what I had written if in that  x stepped on it and there are also two objects, there will be two objects, one is that of worker 1 because worker one says I wrote only one x, that is, I have to continue writing from position 2. Worker 32 says I wrote 55 bytes, I have to  say I would like to continue writing that will not be the case I would have to continue writing from there Now when the attacker worker 1 receives more data what he is going to do is put it in that buffer yes now that one will appear as reserved no problem  go goes just going to step on the rich belongs to the victim So we can step on and Modify the memory as we want from the first dance we can't modify the first g but that's very simple not to really bother at all in the attacks that we want to generate Now  Yes, Word has another object because it wrote much more data And when worker 2, who is the victim, sends him this rich, there is the Java process and I sent him the pointer, the Java teacher will generate  r a response but on the rich it is modified, that is, we can expand what we want and In short, we can do the same attacks that we saw in the previous example in smackling we can change the request in this case we have much more control we can change what we want  and In short, it will end up exploiting this to obtain cookies, for example, we could send the same nwa attack and the same thing happens Yes, the Java process is obviously going to reserve But it is going to put the controller there, it is going to send it to worker 32 and worker 32  It is going to send it to the client Yes, then we can cross script anything in this very nice way Yes, but we have more or less the same as before, so we wanted a little more and how can this be, in principle, the most interesting thing to be able to do a more attack  complex is to understand that mpi buffers are not exclusively for request or response but are multipurpose if I can put the same  mo buffer a rich is a response that nobody is going to find out because the MP handler does not differentiate so Follow me in this example that would be suppose that in Worldcraft 31 in the attacker I did everything the same as before if I sent a rich this would be for  here let's imagine that there is more shared memory and it is processing it now if it is processing the first rich is it still has a reference to it now a rich arrives it is from a victim and the victim is obviously going to have to reserve another one it will do because this is still  reserved not yet not yet freed with the previous attack reserves it saves the ricost yes And now yes in the case of wordreference 1 it was processing it finished processing the first ricast if the ricost is long and freed all the associated buffers including the one we have  reference to us that has the x And what is interesting that now when Warcraft 3 2 talks to the Java process and the Java process generates a response now  What the Java process is going to do is save it in the buffer that we had stolen, that is, we were with a request buffer that we could have looted, but precisely the response of the second process is being saved there, yes. So how do you see in the buffer for us?  we still write to the one but now there is no rich there is a response and what if we now as attacker this is all saved as attacker we send more data right now it's a bit of playing with time it's also going to take a few tries but it will  it gets quite fast if we send more Data what we are going to be able to do is not to overwrite a rich is but to overwrite a response yes This is precisely what allowed us is to write what we want an arbitrary response now it is not necessary to depend on the existence of something else we can  writing what we want this gives us a lot of power Yes this response is going to be sent to the wordreference 2 Yes the wordre  reference 2 is going to split it, it is going to send it to the client But there is also something that has an extra, this response that we write arbitrarily And it is that it has a specific header, yes, as you will see, it is called SAP calle control that when the response is given because there is a  alejandros for request and for responses when the callejander of response sees this, he will compare it with a coded stringer that is in the icm that is precisely used to know if he has to shut up or not if this has to be saved in the street and how we have the  SAP calle against the header that says we can put what we want here we could put a thousand years is telling him to save it what the callejander is going to be is to save this in the calle for what resource the client was asking for, which is Ah  that is, the victim and it will save the arbitrary response that we want, so every time someone now becomes rich, it is Ah, it will receive the malicious response that we  we inject yes and This will allow us to persist as long as we want as long as we want the malicious perpetrator if In addition we played the role of The victim's client instead of waiting for a client to send a rich person it was up to us to send many rich people to eventually  We are going to be able to step on, that is, we are going to be able to play this role and we are going to control what the resource is, not only we could put it in any resource we want, so I am going to be able to change the response of any URL for a fairly arbitrary response that has what I want.  to take control of the victim Yes we are going to demo well in this case we are seeing how a request would be to the initial page of a SAP yes as we see we make a rich it is to Star page and it gives us the response that we would expect nothing strange but now we are going to  use our Script that what it is going to do is try to force the modification of the response and save it in the street as you can see the Script what it does is tra  first of stealing an mpi buffer to do a High shacking as we saw in the attack then he sends that starpage very rich to try to step when answering that And finally he will verify if he responds Star page was modified or not Yes This is going to try  a couple of times because just as I said it is not something deterministic it is not something so linear but it is achieved quite quickly in fact this is a common case it is not that I chose the best one we see that it tries a couple of times it verifies if at some point it works and eventually  it worked eventually modified the response from Star page So now when we or when any client goes to SAP and tries to open the Star page page they will not receive what we were seeing but a Crossing and we are also going to show that we can write what  that we want in the response that we see there [Applause] well obviously since we have dreams we can corrupt memory Let's go for more let's try to re  Actually executing code that would be the most interesting and what many people would look for in an Http server to do this is a little more complex but it can be done What is the idea what we are going to do again We have the same previous example in which we have  a jacked buffer, yes, that's all over, the client sent a gatepec that we could also do as attacker and the difference is that before we were with a get a get B has a difference which is that when the response is generated the response is not  the same as the previous one because this was a casiable resource if we don't overwrite anything here yet Here what we have is a response that will be saved in the buffer in Pay a response that was casiable if it has a SAP street control So when this  It is sent here yet we have not overwritten anything when these are sent to the client the client is going to call the partner this response is going to be sent and now it is going to call the callejander the callejande  r sees that there is a calle control header I was going to say good This must be saved in the calle which is the calle is a file it is simply a file called calle file that in addition to saving the response that it will do in a moment first  it saves some headers yes that in the headers things that you are going to use in the future to work on this on this file one of the most important headers it saves various data it saves the complete link of the request for forgiveness from the response as you see the 95 offs  saves the complete led of this saves the encoding saves the complete link of the Body several things but if now this has already been generated So the first thing it does is generate these things and it takes a little longer to save the response first the other things and yes in this  moment we could send more data as the attacker Now we are going to try to step on This response but what are we going to do we are going to step on it with something longer than what it had yes this Should be  r 95 we are going to try to step on it with something bigger than 95 106 for example and when now the callejander if we just hit it in that little time we are going to try we will need a couple of attempts again but if we hit it at that moment we will have a  calle file corrupt because because the String that is Saved from response is longer than what this header would indicate up to here Nothing happens but what happens if someone suddenly makes a ricast to this resource Well when someone comes and asks for this resource what happens  to be the icm is precisely Call the street handler as we had seen the rich is callejander as we saw before and now if he is going to find something in the street he is going to say yes for this resource I have something I have it in a street file So you are going to  call this street file and it will use it to generate responses and send it to the victim but remember that I said that the responses generated by the handlers are not saved in the business they are saved in the Jeep  And how do you know how much git space you have to keep well read the lens this then it will grab and ask for a 95 byte hip buffer but when you write it will use or it will write until it finds the nullbite  so it's going to write the 106 characters I don't remember how many were response in this Hip and since it doesn't fit what will end up happening It's going to be an overflow in the hip buffer what can we do with this Well there going around in  the gip sometimes, that is, if we are a little lucky, right near us there will be a buffer that has a pointer to the Java handler, yes Remember the one that was going to send the entire Java process, well, it was there and it will use it  to just call this this function how close we could in any attempt if we're lucky hit this and overwrite this pointer with whatever we want so what we're going to be able to achieve is that the Pointer instruction t  erminate by pointing wherever we want when this function is called and we could execute code the way we want also remember that we have very large buffers in use that we could put a lot of Data in and generate things so that code ends up running obviously There are a lot of problems  In this, we would first have to Modify the responsible party at the correct time, it can be done after many attempts, it is achieved In fact, there are many crashes that are easy to achieve What is a little more difficult is to hit this memory structure so that there is nothing else here  but it is also achieved it is probably the main problem when I try it I am going to crash if I hit it wrong I will see the icm crashed in many cases in others I am going to modify a Data beat the slr we have to know the layout by heart to be able to know where  there are every function and everything to be able to play with it and be able to execute code and obviously make clothes but  it is the least of our problems if we can beat clr that is to say if we had knowledge of law or memory it would not be so difficult to break eh break this well These are the solutions we have first we see that SAP generated two actually three but I did not explain the other  unit that was easier than money Services eh 12 times 12 times one for the first coin a 10 if we could break and have access to all the things of all the applications the second is a css 8.1 is the Us after free they did it like this because  the atta Complex and we also have the scope and change that I have no idea why they put it like that because it was very easy to realize that it wasn't but well that was left and then we have the vulnerable systems are all the Apps whatever the system they are using was  vulnerable this we have the two Apps that released sampson patches there is a manual Carrá an that is also released app for both net weaver and goldies patcher and us  ros in an Apps we generate a detection tool to be able to verify that it is vulnerable or not to these these attacks finally conclusions very quickly what this This is what made me realize is that http servers first are very similar to each other because obviously  they have to respect an RFC yes So if we are going to do a Reiser over an Http server let's take the RFC into account yes let's remember this servers have to do what the RFC says and when we find differences with that we know that there we have a manual after good as  You can see that several files have similar functions, several http servers and it is very useful when we laugh about it to identify How is it that the rich are stored where the corresponding resources are in memory, then we saw How to scale for a low-level Christmas, which was something that in general  it was hard to mine a low level coin on a htp server the ones that have been found in the past tend to be  r very complicated in a practical way but using these new smackling techniques many times makes it easier to have a real effect on these servers and to find some exploitable ability And finally talk a little about what was the campaign we did there is the name  code that generated these vulnerabilities was taken into account by sisa, which is the security agency of the United States or one of the many determined that these vulnealities were very critical, they released a statement advising that everyone has to fix them and recently they also released a  statement advising that they were being exploited in the Wild well and not much more any questions you can ask me

1362
00:52:20,040 --> 00:52:23,760
later or on Twitter they thrashed the

1363
00:52:23,760 --> 00:52:25,740
perfect paper then we are going to receive

1364
00:52:25,740 --> 00:52:27,979
the

1365
00:52:28,920 --> 00:52:31,819
round of 16

