1
00:00:42,800 --> 00:00:45,800
a

2
00:00:47,960 --> 00:00:51,009
[Music]

3
00:01:08,820 --> 00:01:11,889
[Music]

4
00:01:30,330 --> 00:01:33,439
[Music]

5
00:01:52,479 --> 00:01:55,680
thanks for your time for being here and

6
00:01:55,680 --> 00:01:57,520
thanks for all the knowledge you are

7
00:01:57,520 --> 00:01:59,520
shared with us

8
00:01:59,520 --> 00:02:02,000
of course

9
00:02:07,680 --> 00:02:10,479
hi are you fine

10
00:02:10,479 --> 00:02:11,680
doing great

11
00:02:11,680 --> 00:02:12,959
great to be here

12
00:02:12,959 --> 00:02:14,560
well

13
00:02:14,560 --> 00:02:19,000
thanks for your time again

14
00:02:30,480 --> 00:02:31,840
awesome so

15
00:02:31,840 --> 00:02:34,800
good morning good afternoon and or good

16
00:02:34,800 --> 00:02:36,959
evening everyone depending where you are

17
00:02:36,959 --> 00:02:40,319
today um so welcome to our talk on web

18
00:02:40,319 --> 00:02:42,080
isolation

19
00:02:42,080 --> 00:02:44,800
so my name is pedro furtona i'm founder

20
00:02:44,800 --> 00:02:47,840
and cto at j scrambler and i've

21
00:02:47,840 --> 00:02:50,879
basically been working in security for

22
00:02:50,879 --> 00:02:54,399
as long as i can remember

23
00:02:54,560 --> 00:02:55,519
um

24
00:02:55,519 --> 00:02:57,840
hi uh my name is jasper nagar most

25
00:02:57,840 --> 00:03:00,000
people call me jazz you should too you

26
00:03:00,000 --> 00:03:02,400
should definitely call me uh

27
00:03:02,400 --> 00:03:03,120
as

28
00:03:03,120 --> 00:03:04,319
i should probably say i've been working

29
00:03:04,319 --> 00:03:06,640
in security for as long as uh pedro can

30
00:03:06,640 --> 00:03:07,680
remember

31
00:03:07,680 --> 00:03:09,920
yeah

32
00:03:11,120 --> 00:03:13,680
and uh we want to start this talk with

33
00:03:13,680 --> 00:03:16,000
um with a little story

34
00:03:16,000 --> 00:03:18,319
already this is like very early in the

35
00:03:18,319 --> 00:03:19,920
morning for some people better you want

36
00:03:19,920 --> 00:03:21,840
to tell a story

37
00:03:21,840 --> 00:03:24,799
yeah i guess we have to risk it um so

38
00:03:24,799 --> 00:03:27,680
this is a story about a ship

39
00:03:27,680 --> 00:03:30,159
that most of you may have heard about uh

40
00:03:30,159 --> 00:03:32,080
it's the titanic

41
00:03:32,080 --> 00:03:34,239
that's right you guessed it

42
00:03:34,239 --> 00:03:36,640
and the reason why i'm telling you this

43
00:03:36,640 --> 00:03:40,159
story is because of the way it was built

44
00:03:40,159 --> 00:03:42,799
it was built in belfast in their famous

45
00:03:42,799 --> 00:03:44,080
shipyard

46
00:03:44,080 --> 00:03:46,480
i was actually lucky enough to visit

47
00:03:46,480 --> 00:03:50,959
during the oasp upsec eu in 2017.

48
00:03:50,959 --> 00:03:54,640
and it was inaugurated on april 10th of

49
00:03:54,640 --> 00:03:59,040
1912 in the southampton port in the uk

50
00:03:59,040 --> 00:04:01,360
so i guess most people do not know this

51
00:04:01,360 --> 00:04:04,080
but when the titanic was built it was

52
00:04:04,080 --> 00:04:08,239
bleeding edge in many ways

53
00:04:08,640 --> 00:04:11,360
so the bottom of the ship was split into

54
00:04:11,360 --> 00:04:14,640
16 major watertight compartments

55
00:04:14,640 --> 00:04:15,760
a technique

56
00:04:15,760 --> 00:04:18,238
to ensure the stability of the ship

57
00:04:18,238 --> 00:04:20,880
despite the presence of damage

58
00:04:20,880 --> 00:04:23,440
it was called a two compartment ship

59
00:04:23,440 --> 00:04:26,000
because it could remain afloat with at

60
00:04:26,000 --> 00:04:28,880
least two adjacent water tight

61
00:04:28,880 --> 00:04:31,520
compartments completely flooded

62
00:04:31,520 --> 00:04:33,199
that's like the worst situation they

63
00:04:33,199 --> 00:04:36,080
could imagine back then so it was deemed

64
00:04:36,080 --> 00:04:39,280
to be unthinkable

65
00:04:39,280 --> 00:04:42,400
but depending on the exact location of

66
00:04:42,400 --> 00:04:45,759
the hit at best it could withstand the

67
00:04:45,759 --> 00:04:48,240
flooding of up to four compartments

68
00:04:48,240 --> 00:04:51,120
without thinking

69
00:04:51,520 --> 00:04:55,680
unfortunately on april 15

70
00:04:55,680 --> 00:04:58,400
days after the inauguration it sank

71
00:04:58,400 --> 00:05:01,360
because it collided with a huge iceberg

72
00:05:01,360 --> 00:05:03,840
that resulted in the flooding of the

73
00:05:03,840 --> 00:05:06,639
forward six compartments and two and a

74
00:05:06,639 --> 00:05:11,039
half years hours later the titanic sank

75
00:05:11,039 --> 00:05:13,759
so no one saw that coming

76
00:05:13,759 --> 00:05:16,320
that something in this case an iceberg

77
00:05:16,320 --> 00:05:18,320
could do this type of damage

78
00:05:18,320 --> 00:05:20,560
they were overconfident that because of

79
00:05:20,560 --> 00:05:21,680
that

80
00:05:21,680 --> 00:05:25,600
um they only had 20 lifeboats clearly

81
00:05:25,600 --> 00:05:28,160
not enough for everyone so the ship

82
00:05:28,160 --> 00:05:30,280
carried

83
00:05:30,280 --> 00:05:33,360
2224 people including the crew

84
00:05:33,360 --> 00:05:37,840
and only 710 were actually rescued so

85
00:05:37,840 --> 00:05:41,199
roughly 31.9

86
00:05:41,199 --> 00:05:43,759
so even though it did not end well

87
00:05:43,759 --> 00:05:45,520
compartmentalization

88
00:05:45,520 --> 00:05:49,199
was a great idea and it is still used in

89
00:05:49,199 --> 00:05:51,840
ship design to this day

90
00:05:51,840 --> 00:05:54,639
so the basic idea is that damage on a

91
00:05:54,639 --> 00:05:56,800
single section of the ship

92
00:05:56,800 --> 00:05:59,520
does not compromise the whole ship

93
00:05:59,520 --> 00:06:01,680
but the problem with the titanic is that

94
00:06:01,680 --> 00:06:04,560
its implementation was flawed but we'll

95
00:06:04,560 --> 00:06:07,840
tell you more about that later

96
00:06:10,400 --> 00:06:11,440
wait

97
00:06:11,440 --> 00:06:12,800
are we

98
00:06:12,800 --> 00:06:14,319
are you leaving that as a cliffhanger

99
00:06:14,319 --> 00:06:16,160
there

100
00:06:16,160 --> 00:06:18,319
yeah uh

101
00:06:18,319 --> 00:06:21,840
we are naughty i guess

102
00:06:24,160 --> 00:06:27,280
so back to you jazz

103
00:06:27,280 --> 00:06:28,720
oh um

104
00:06:28,720 --> 00:06:31,000
no this is actually my part

105
00:06:31,000 --> 00:06:32,960
[Laughter]

106
00:06:32,960 --> 00:06:36,000
so i'll i'll tell you about a bit about

107
00:06:36,000 --> 00:06:39,600
the history of web isolation

108
00:06:39,600 --> 00:06:41,120
so um

109
00:06:41,120 --> 00:06:44,160
the first really attempts at isolation

110
00:06:44,160 --> 00:06:45,680
inside the browser

111
00:06:45,680 --> 00:06:48,720
was introduced by the same origin policy

112
00:06:48,720 --> 00:06:50,800
where interactions between two different

113
00:06:50,800 --> 00:06:53,840
origins are restricted

114
00:06:53,840 --> 00:06:57,039
but restricted how if we can embed

115
00:06:57,039 --> 00:06:58,880
third-party code directly from

116
00:06:58,880 --> 00:07:01,680
third-party servers into our our

117
00:07:01,680 --> 00:07:03,360
executing context

118
00:07:03,360 --> 00:07:05,120
so this code here

119
00:07:05,120 --> 00:07:07,360
has the same level of privilege as any

120
00:07:07,360 --> 00:07:08,400
other

121
00:07:08,400 --> 00:07:11,680
code from the same origin

122
00:07:11,680 --> 00:07:13,759
so it turns out that embedding of

123
00:07:13,759 --> 00:07:16,400
third-party code is possible what is

124
00:07:16,400 --> 00:07:19,599
restricted is some writing and reading

125
00:07:19,599 --> 00:07:23,120
raw data from cross-origin domains

126
00:07:23,120 --> 00:07:25,120
so the reality is that the same origin

127
00:07:25,120 --> 00:07:27,280
policy is complex

128
00:07:27,280 --> 00:07:30,560
has lots of lots of exceptions and to

129
00:07:30,560 --> 00:07:32,960
this day most developers do not fully

130
00:07:32,960 --> 00:07:35,599
understand it which is a frequent source

131
00:07:35,599 --> 00:07:38,800
of security issues

132
00:07:39,039 --> 00:07:41,520
two years later we were given the

133
00:07:41,520 --> 00:07:44,720
iframes with which we can isolate two

134
00:07:44,720 --> 00:07:47,120
cross-origin documents uh all scripts

135
00:07:47,120 --> 00:07:49,520
running on the same web app

136
00:07:49,520 --> 00:07:51,599
but soon enough people felt the need to

137
00:07:51,599 --> 00:07:54,080
poke a hole through it coming without

138
00:07:54,080 --> 00:07:55,759
coming up with different ways to have

139
00:07:55,759 --> 00:07:58,160
communication between two cross-origin

140
00:07:58,160 --> 00:07:59,680
documents

141
00:07:59,680 --> 00:08:02,160
and only 13 years later we threw the

142
00:08:02,160 --> 00:08:04,879
towel and finally made it official with

143
00:08:04,879 --> 00:08:07,039
the introduction of the web messaging

144
00:08:07,039 --> 00:08:09,680
api with which you can do post message

145
00:08:09,680 --> 00:08:13,440
between two cross-origin iframes

146
00:08:13,440 --> 00:08:15,919
but not every problem went away frame

147
00:08:15,919 --> 00:08:17,360
iframes had

148
00:08:17,360 --> 00:08:19,599
still too much power they could for

149
00:08:19,599 --> 00:08:20,960
instance

150
00:08:20,960 --> 00:08:23,840
navigate away the top window

151
00:08:23,840 --> 00:08:25,599
among other things

152
00:08:25,599 --> 00:08:28,720
so it took a while but 13 years later

153
00:08:28,720 --> 00:08:31,759
iframe sandboxing was introduced which

154
00:08:31,759 --> 00:08:33,919
greatly restricts what an iframe

155
00:08:33,919 --> 00:08:36,159
document can do

156
00:08:36,159 --> 00:08:38,880
so you can see a bunch of configuration

157
00:08:38,880 --> 00:08:42,000
attributes that you can use to relax

158
00:08:42,000 --> 00:08:47,279
some of the iframe default restrictions

159
00:08:48,080 --> 00:08:50,640
so almost at the same time

160
00:08:50,640 --> 00:08:53,519
we got content security policy version

161
00:08:53,519 --> 00:08:56,800
one uh with which one could set a

162
00:08:56,800 --> 00:08:59,760
domain-based allow listing

163
00:08:59,760 --> 00:09:02,240
which was later found to be broken so

164
00:09:02,240 --> 00:09:03,680
you can see that

165
00:09:03,680 --> 00:09:05,839
you can see to the right a reference to

166
00:09:05,839 --> 00:09:07,519
a well-known paper

167
00:09:07,519 --> 00:09:10,720
from weixelbaum spagnuolo like is and

168
00:09:10,720 --> 00:09:11,920
young

169
00:09:11,920 --> 00:09:12,720
that

170
00:09:12,720 --> 00:09:14,800
detail everything

171
00:09:14,800 --> 00:09:16,880
around this topic

172
00:09:16,880 --> 00:09:18,160
but

173
00:09:18,160 --> 00:09:19,120
also

174
00:09:19,120 --> 00:09:21,200
csp is pretty hard to maintain so

175
00:09:21,200 --> 00:09:23,839
especially version one so later versions

176
00:09:23,839 --> 00:09:27,279
of csp fix that but

177
00:09:27,279 --> 00:09:30,320
but are not as straightforward to set up

178
00:09:30,320 --> 00:09:32,640
so the main limitation that we see with

179
00:09:32,640 --> 00:09:33,760
csp

180
00:09:33,760 --> 00:09:35,839
is that it does not cover all the

181
00:09:35,839 --> 00:09:38,080
behavioral angles that you want to

182
00:09:38,080 --> 00:09:39,200
restrict

183
00:09:39,200 --> 00:09:41,600
so if you allow scripts

184
00:09:41,600 --> 00:09:45,200
you allow the scripts entirely

185
00:09:45,200 --> 00:09:47,839
so it can do everything it wants so you

186
00:09:47,839 --> 00:09:50,480
want a more granular type of thing where

187
00:09:50,480 --> 00:09:52,080
you allow some

188
00:09:52,080 --> 00:09:54,640
things that the script may be able to do

189
00:09:54,640 --> 00:09:58,000
but not everything

190
00:09:58,160 --> 00:10:00,240
so the problem with this isolation and

191
00:10:00,240 --> 00:10:02,399
defense mechanisms is that is that

192
00:10:02,399 --> 00:10:04,880
people will fight them uh will push for

193
00:10:04,880 --> 00:10:08,000
ways to relax them in what they need in

194
00:10:08,000 --> 00:10:10,240
order to make the application work

195
00:10:10,240 --> 00:10:12,959
so things like jsonp and cores are good

196
00:10:12,959 --> 00:10:14,399
examples

197
00:10:14,399 --> 00:10:16,959
but if the isolation mechanisms were

198
00:10:16,959 --> 00:10:19,839
more granular and configurable perhaps

199
00:10:19,839 --> 00:10:21,760
we wouldn't feel the need to open holes

200
00:10:21,760 --> 00:10:25,279
in these protection mechanisms

201
00:10:25,760 --> 00:10:28,480
so here's the timeline of these features

202
00:10:28,480 --> 00:10:32,320
so you can see a huge gap between 97 and

203
00:10:32,320 --> 00:10:34,640
2009

204
00:10:34,640 --> 00:10:36,560
where you really have to wonder what the

205
00:10:36,560 --> 00:10:38,480
browser people were doing during these

206
00:10:38,480 --> 00:10:40,320
years

207
00:10:40,320 --> 00:10:42,720
uh pedro at some point i should tell you

208
00:10:42,720 --> 00:10:44,640
what we were doing at those during those

209
00:10:44,640 --> 00:10:47,120
years we were sitting back relaxing a

210
00:10:47,120 --> 00:10:49,360
little

211
00:10:51,040 --> 00:10:52,800
so

212
00:10:52,800 --> 00:10:56,399
uh back to you jaz this time for real

213
00:10:56,399 --> 00:10:58,560
sounds great like so

214
00:10:58,560 --> 00:11:00,880
a lot of what pedro has talked about is

215
00:11:00,880 --> 00:11:01,920
uh

216
00:11:01,920 --> 00:11:04,240
what's built into the browser browsers

217
00:11:04,240 --> 00:11:05,600
provide us with

218
00:11:05,600 --> 00:11:08,000
you know a large number of great uh

219
00:11:08,000 --> 00:11:10,959
basic primitives all of the things uh

220
00:11:10,959 --> 00:11:13,680
that that give you that make your units

221
00:11:13,680 --> 00:11:16,880
of isolation uh smaller and stronger and

222
00:11:16,880 --> 00:11:19,600
yes they have problems uh but we can

223
00:11:19,600 --> 00:11:22,079
maybe do something to build uh on top of

224
00:11:22,079 --> 00:11:24,320
that right and i think that the answer

225
00:11:24,320 --> 00:11:25,680
here is yes and you shouldn't just

226
00:11:25,680 --> 00:11:28,480
believe me uh the community

227
00:11:28,480 --> 00:11:30,880
as a whole has built all kinds of

228
00:11:30,880 --> 00:11:32,800
interesting mechanisms on top of what

229
00:11:32,800 --> 00:11:34,800
isolation

230
00:11:34,800 --> 00:11:37,440
primitives that the browsers provide

231
00:11:37,440 --> 00:11:39,760
that

232
00:11:39,920 --> 00:11:41,680
you know reduce the number of holes you

233
00:11:41,680 --> 00:11:45,680
need to poke in your cheese basically

234
00:11:48,399 --> 00:11:50,240
uh pedro do you mind just driving the

235
00:11:50,240 --> 00:11:52,000
slides for me

236
00:11:52,000 --> 00:11:54,320
thanks

237
00:11:54,320 --> 00:11:57,440
uh so roughly speaking uh it's hard to

238
00:11:57,440 --> 00:11:59,760
characterize what all of the different

239
00:11:59,760 --> 00:12:02,959
uh approaches for web isolation are uh

240
00:12:02,959 --> 00:12:05,040
the way that i like to think about it is

241
00:12:05,040 --> 00:12:06,800
you know you you can think about them on

242
00:12:06,800 --> 00:12:08,079
two axes

243
00:12:08,079 --> 00:12:11,519
uh where you uh change the source code

244
00:12:11,519 --> 00:12:13,839
or virtualization where you change

245
00:12:13,839 --> 00:12:15,600
uh the code itself

246
00:12:15,600 --> 00:12:18,160
or you are changing the environment in

247
00:12:18,160 --> 00:12:20,560
which the code runs i plotted three

248
00:12:20,560 --> 00:12:23,200
projects here

249
00:12:23,200 --> 00:12:25,200
just as a representative example there's

250
00:12:25,200 --> 00:12:28,079
many more projects um uh there's there's

251
00:12:28,079 --> 00:12:30,399
google caja which you know i'm

252
00:12:30,399 --> 00:12:32,959
deeply uh familiar with and was involved

253
00:12:32,959 --> 00:12:36,000
with uh which uses a combination of

254
00:12:36,000 --> 00:12:38,959
virtualization and transformation to

255
00:12:38,959 --> 00:12:40,720
build a sandbox

256
00:12:40,720 --> 00:12:42,800
so code is both changed and the

257
00:12:42,800 --> 00:12:44,959
environment in which this code runs is

258
00:12:44,959 --> 00:12:48,800
also modified so that uh

259
00:12:48,800 --> 00:12:52,079
so that the access that this application

260
00:12:52,079 --> 00:12:55,279
has is limited there's uh there is or

261
00:12:55,279 --> 00:12:58,079
was a js reg which tried to do the same

262
00:12:58,079 --> 00:12:59,360
there was a more lightweight

263
00:12:59,360 --> 00:13:01,839
transformation uh there's j scrambler

264
00:13:01,839 --> 00:13:03,920
which uh which pedro is intimately

265
00:13:03,920 --> 00:13:07,440
involved with um you know which which

266
00:13:07,440 --> 00:13:09,760
uses mostly virtualization

267
00:13:09,760 --> 00:13:11,680
which is a lightweight transformation

268
00:13:11,680 --> 00:13:14,959
but essentially all of these approaches

269
00:13:14,959 --> 00:13:17,680
for building on top of the primitives

270
00:13:17,680 --> 00:13:18,959
that the web

271
00:13:18,959 --> 00:13:22,720
that the web browser provides faults

272
00:13:22,720 --> 00:13:26,000
somewhere in the spectrum

273
00:13:26,480 --> 00:13:28,079
um

274
00:13:28,079 --> 00:13:30,880
let's uh switch to the next slide

275
00:13:30,880 --> 00:13:33,040
so what does this look like

276
00:13:33,040 --> 00:13:34,959
let's take a simple javascript

277
00:13:34,959 --> 00:13:36,720
application it consists of functions

278
00:13:36,720 --> 00:13:39,279
like you see here is an alert which

279
00:13:39,279 --> 00:13:43,040
comes from somewhere else uh if you're a

280
00:13:43,040 --> 00:13:45,040
if you're a systems kind of a person you

281
00:13:45,040 --> 00:13:47,120
can think of this as system calls they

282
00:13:47,120 --> 00:13:49,120
come you know they're provided by the

283
00:13:49,120 --> 00:13:52,639
browser you have strings you have arrays

284
00:13:52,639 --> 00:13:55,040
these are native types and then you have

285
00:13:55,040 --> 00:13:56,480
functions which you

286
00:13:56,480 --> 00:13:58,880
which you've written yourself i'm i'm

287
00:13:58,880 --> 00:14:00,880
not going to dwell on this too long but

288
00:14:00,880 --> 00:14:03,519
this transformation this slide

289
00:14:03,519 --> 00:14:06,560
which captures a transformation is my

290
00:14:06,560 --> 00:14:09,839
is my most favorite transformation uh

291
00:14:09,839 --> 00:14:11,199
everybody has their own favorite

292
00:14:11,199 --> 00:14:13,120
transformation this one is mine right

293
00:14:13,120 --> 00:14:15,600
it's the basis for all the language

294
00:14:15,600 --> 00:14:17,760
transformation based sandboxes that you

295
00:14:17,760 --> 00:14:19,199
see

296
00:14:19,199 --> 00:14:21,279
now let's say you transform these

297
00:14:21,279 --> 00:14:23,839
functions so that whenever you reference

298
00:14:23,839 --> 00:14:26,000
a system call or a native object you

299
00:14:26,000 --> 00:14:27,680
don't get the you know the native

300
00:14:27,680 --> 00:14:29,600
powerful object

301
00:14:29,600 --> 00:14:33,120
what you get is uh you only get those

302
00:14:33,120 --> 00:14:34,320
objects or

303
00:14:34,320 --> 00:14:36,959
those types of those functions that the

304
00:14:36,959 --> 00:14:39,120
color controls now i'm i'm

305
00:14:39,120 --> 00:14:41,120
oversimplifying here some of you in the

306
00:14:41,120 --> 00:14:43,040
audience must already be saying hey jaz

307
00:14:43,040 --> 00:14:44,800
you forgot about the val hey daz you

308
00:14:44,800 --> 00:14:46,240
forgot about walking the prototype

309
00:14:46,240 --> 00:14:48,000
changes like these constructs and you're

310
00:14:48,000 --> 00:14:50,480
right absolutely you are right but at

311
00:14:50,480 --> 00:14:51,519
heart

312
00:14:51,519 --> 00:14:53,839
this is the transformation that lets you

313
00:14:53,839 --> 00:14:56,880
call some arbitrary third-party code in

314
00:14:56,880 --> 00:15:00,240
a controlled kind of way

315
00:15:00,959 --> 00:15:03,120
um

316
00:15:03,120 --> 00:15:05,360
let's do the yeah perfect

317
00:15:05,360 --> 00:15:08,079
uh and not only that

318
00:15:08,079 --> 00:15:09,600
you can do the same thing not just for

319
00:15:09,600 --> 00:15:11,440
javascript you can actually do this for

320
00:15:11,440 --> 00:15:13,360
html and for css

321
00:15:13,360 --> 00:15:15,360
too in fact in some ways it's even

322
00:15:15,360 --> 00:15:16,560
easier

323
00:15:16,560 --> 00:15:18,480
to do it for html and css because

324
00:15:18,480 --> 00:15:20,480
they're less expressive than javascript

325
00:15:20,480 --> 00:15:21,920
is for example

326
00:15:21,920 --> 00:15:25,120
here if you have some css rule that was

327
00:15:25,120 --> 00:15:27,519
you know changing every div or every

328
00:15:27,519 --> 00:15:29,680
bowl tag to be the color blue because

329
00:15:29,680 --> 00:15:32,720
you find the color blue beautiful uh you

330
00:15:32,720 --> 00:15:35,360
can prepend like a dot

331
00:15:35,360 --> 00:15:37,360
gadget one two three

332
00:15:37,360 --> 00:15:39,519
uh and and now

333
00:15:39,519 --> 00:15:40,399
and now

334
00:15:40,399 --> 00:15:44,399
your your colors are only restricted to

335
00:15:44,399 --> 00:15:48,399
the descendants of a div that has you

336
00:15:48,399 --> 00:15:51,040
know gadget one two three uh

337
00:15:51,040 --> 00:15:52,880
uh

338
00:15:52,880 --> 00:15:54,720
as a class right so

339
00:15:54,720 --> 00:15:56,959
this is this is one tool in our uh

340
00:15:56,959 --> 00:15:59,279
toolbox transformation what's the other

341
00:15:59,279 --> 00:16:02,000
tool that we have

342
00:16:02,720 --> 00:16:05,839
so the other tool is virtualization now

343
00:16:05,839 --> 00:16:08,399
i call it virtualization but really all

344
00:16:08,399 --> 00:16:10,480
it is is polyfills you all know it as

345
00:16:10,480 --> 00:16:11,920
polyfills

346
00:16:11,920 --> 00:16:13,680
they present a feature what is a

347
00:16:13,680 --> 00:16:16,240
polyfill it presents a feature that is

348
00:16:16,240 --> 00:16:18,480
not present in a particular browser

349
00:16:18,480 --> 00:16:19,600
version

350
00:16:19,600 --> 00:16:23,040
virtualization is exactly like polyfills

351
00:16:23,040 --> 00:16:25,360
uh but we need them even if the feature

352
00:16:25,360 --> 00:16:27,440
exists uh in the browser but it's not

353
00:16:27,440 --> 00:16:30,079
redundant because we want to override

354
00:16:30,079 --> 00:16:32,800
the default behavior uh or have a chance

355
00:16:32,800 --> 00:16:34,880
to trigger some additional

356
00:16:34,880 --> 00:16:37,279
uh let's let's call them re reactions

357
00:16:37,279 --> 00:16:39,759
okay so here you have an example of a

358
00:16:39,759 --> 00:16:42,240
date all browsers do you can provide

359
00:16:42,240 --> 00:16:44,480
this just to a third party directly no

360
00:16:44,480 --> 00:16:47,040
polyfill polyfill needed or the polyfill

361
00:16:47,040 --> 00:16:49,920
is just you know the just a wrap around

362
00:16:49,920 --> 00:16:51,839
the date maybe because you don't worry

363
00:16:51,839 --> 00:16:52,639
about

364
00:16:52,639 --> 00:16:54,800
cash timing attacks or from a particular

365
00:16:54,800 --> 00:16:57,600
third party now you have xhr and you can

366
00:16:57,600 --> 00:17:00,320
provide a police version that always

367
00:17:00,320 --> 00:17:02,240
proxies that request or doesn't let you

368
00:17:02,240 --> 00:17:04,880
go to arbitrary places so you you can

369
00:17:04,880 --> 00:17:07,520
prevent a third party from connecting to

370
00:17:07,520 --> 00:17:09,919
an arbitrary location it always goes

371
00:17:09,919 --> 00:17:12,640
through your proxy in fact

372
00:17:12,640 --> 00:17:15,919
you know today every browser has an xhr

373
00:17:15,919 --> 00:17:17,919
but you know if you remember the bad

374
00:17:17,919 --> 00:17:20,559
days uh not every browser would provide

375
00:17:20,559 --> 00:17:23,760
you with uh xml http requests and you

376
00:17:23,760 --> 00:17:26,400
might need to polyfill that uh

377
00:17:26,400 --> 00:17:28,319
the nice thing is that you can

378
00:17:28,319 --> 00:17:29,760
take something that is much more

379
00:17:29,760 --> 00:17:31,840
powerful like like an active x

380
00:17:31,840 --> 00:17:33,679
controller would let you do

381
00:17:33,679 --> 00:17:35,840
crazy things but

382
00:17:35,840 --> 00:17:38,240
because you are proxying them because

383
00:17:38,240 --> 00:17:41,600
you sit between the third party and the

384
00:17:41,600 --> 00:17:45,600
browser you can use a powerful object to

385
00:17:45,600 --> 00:17:48,559
provide an attenuated like a like a a

386
00:17:48,559 --> 00:17:52,080
weaker safer version of xhr built on top

387
00:17:52,080 --> 00:17:55,360
of activex to third parties

388
00:17:55,360 --> 00:17:57,280
and then similarly you can do this with

389
00:17:57,280 --> 00:17:59,039
like document location

390
00:17:59,039 --> 00:18:01,919
uh with uh um

391
00:18:01,919 --> 00:18:03,679
with access to the camera all kinds of

392
00:18:03,679 --> 00:18:07,280
things the trick the hard part is

393
00:18:07,280 --> 00:18:09,360
strong parts of security needs to be

394
00:18:09,360 --> 00:18:11,280
that you create polyfills in a way that

395
00:18:11,280 --> 00:18:13,520
can't be bypassed when you have a

396
00:18:13,520 --> 00:18:14,880
polyfill

397
00:18:14,880 --> 00:18:16,559
of course everybody wants to use your

398
00:18:16,559 --> 00:18:18,240
polyfill because it's providing power

399
00:18:18,240 --> 00:18:20,000
that you don't ordinarily have when you

400
00:18:20,000 --> 00:18:24,400
use polyfold polyfills for security um

401
00:18:24,400 --> 00:18:26,000
you need to make sure that no one can

402
00:18:26,000 --> 00:18:27,919
bypass your political and all of the

403
00:18:27,919 --> 00:18:30,400
projects that use virtualization come up

404
00:18:30,400 --> 00:18:33,120
with uh with different ways

405
00:18:33,120 --> 00:18:35,679
of of achieving that

406
00:18:35,679 --> 00:18:36,640
now

407
00:18:36,640 --> 00:18:37,919
um

408
00:18:37,919 --> 00:18:39,440
next slide

409
00:18:39,440 --> 00:18:41,200
so there are three principles i want you

410
00:18:41,200 --> 00:18:43,520
to take away from how native browser

411
00:18:43,520 --> 00:18:45,600
isolation features work boil down they

412
00:18:45,600 --> 00:18:47,360
do things like you know same origin

413
00:18:47,360 --> 00:18:49,440
policy iframes et cetera what do they

414
00:18:49,440 --> 00:18:51,600
bring now the three and it's an

415
00:18:51,600 --> 00:18:53,679
interesting set of three and you might

416
00:18:53,679 --> 00:18:55,520
already be starting to get hits to that

417
00:18:55,520 --> 00:18:57,520
little cliffhanger that we left behind

418
00:18:57,520 --> 00:19:00,240
the most obvious design principle is

419
00:19:00,240 --> 00:19:02,880
compartment size like you can have an

420
00:19:02,880 --> 00:19:05,120
entire domain or origin you can have

421
00:19:05,120 --> 00:19:07,679
whole pages you can have iframes you can

422
00:19:07,679 --> 00:19:09,200
have individual scripts you can have

423
00:19:09,200 --> 00:19:10,720
individual functions you can have

424
00:19:10,720 --> 00:19:14,000
individual actions that these functions

425
00:19:14,000 --> 00:19:16,720
are taking like specific api con

426
00:19:16,720 --> 00:19:17,679
calls

427
00:19:17,679 --> 00:19:19,760
the smaller the compartment the more

428
00:19:19,760 --> 00:19:22,720
resilient a web application

429
00:19:22,720 --> 00:19:23,840
that you

430
00:19:23,840 --> 00:19:24,720
ship

431
00:19:24,720 --> 00:19:26,160
will be

432
00:19:26,160 --> 00:19:29,039
the the trade-off you're making here is

433
00:19:29,039 --> 00:19:30,799
there's a lot more decisions that you

434
00:19:30,799 --> 00:19:33,280
need to make the longer is the setup

435
00:19:33,280 --> 00:19:35,600
time and the configuration effort next

436
00:19:35,600 --> 00:19:37,440
one

437
00:19:37,440 --> 00:19:39,679
the second thing is uh

438
00:19:39,679 --> 00:19:41,919
the the isolation material the stronger

439
00:19:41,919 --> 00:19:44,799
the material is the more resilient uh

440
00:19:44,799 --> 00:19:46,559
your web application would be now

441
00:19:46,559 --> 00:19:48,400
drilling holes even into strong

442
00:19:48,400 --> 00:19:52,480
materials weakens them uh iframe csp the

443
00:19:52,480 --> 00:19:55,039
mechanisms that we use to do isolation

444
00:19:55,039 --> 00:19:57,360
are weakened because in order to get our

445
00:19:57,360 --> 00:19:59,840
job done we need to poke holes into them

446
00:19:59,840 --> 00:20:01,440
now these holes aren't there because you

447
00:20:01,440 --> 00:20:03,440
know web browser implementations are

448
00:20:03,440 --> 00:20:06,320
broken but because the isolation

449
00:20:06,320 --> 00:20:10,000
mechanism doesn't necessarily align with

450
00:20:10,000 --> 00:20:12,240
the with the way in which we use

451
00:20:12,240 --> 00:20:14,480
developers will find clever ways you all

452
00:20:14,480 --> 00:20:17,200
are very clever at finding ways to poke

453
00:20:17,200 --> 00:20:19,600
holes into them in order to get you know

454
00:20:19,600 --> 00:20:21,280
your job done

455
00:20:21,280 --> 00:20:24,400
which brings us to the third thing uh we

456
00:20:24,400 --> 00:20:25,919
which is visibility and user

457
00:20:25,919 --> 00:20:28,559
friendliness now developers are people

458
00:20:28,559 --> 00:20:29,360
too

459
00:20:29,360 --> 00:20:32,080
they need apis that work well for their

460
00:20:32,080 --> 00:20:34,000
particular use case and for their

461
00:20:34,000 --> 00:20:36,320
strength model now some materials like

462
00:20:36,320 --> 00:20:38,720
same origin policy and iframes works for

463
00:20:38,720 --> 00:20:41,039
the threat models that existed way back

464
00:20:41,039 --> 00:20:43,520
when but they haven't kept up with how

465
00:20:43,520 --> 00:20:45,919
you know web developers develop today

466
00:20:45,919 --> 00:20:48,080
and they do not provide you with any

467
00:20:48,080 --> 00:20:52,240
visibility at least not out of the box

468
00:20:52,240 --> 00:20:53,919
and this brings us back to the

469
00:20:53,919 --> 00:20:57,200
cliffhanger pedal

470
00:20:57,200 --> 00:20:58,559
yeah so

471
00:20:58,559 --> 00:21:01,360
like we said the titanic implementation

472
00:21:01,360 --> 00:21:03,600
was flawed

473
00:21:03,600 --> 00:21:06,000
so by now you should be able to guess it

474
00:21:06,000 --> 00:21:10,480
but the compartments were still too big

475
00:21:10,480 --> 00:21:12,960
and the materials were definitely not

476
00:21:12,960 --> 00:21:16,480
iceberg ready so they needed stronger

477
00:21:16,480 --> 00:21:18,320
materials

478
00:21:18,320 --> 00:21:20,159
the damage model

479
00:21:20,159 --> 00:21:23,039
was incomplete or incorrect

480
00:21:23,039 --> 00:21:25,919
which translating to our context it

481
00:21:25,919 --> 00:21:29,440
means that the threat model was wrong

482
00:21:29,440 --> 00:21:31,840
and finally the lack of visibility so

483
00:21:31,840 --> 00:21:34,960
for obvious reasons no one spotted the

484
00:21:34,960 --> 00:21:36,880
the iceberg in time

485
00:21:36,880 --> 00:21:40,559
so visibility and analytics which is an

486
00:21:40,559 --> 00:21:43,120
interpretation of what what's happening

487
00:21:43,120 --> 00:21:45,520
are definitely essential

488
00:21:45,520 --> 00:21:46,960
for our

489
00:21:46,960 --> 00:21:49,919
web isolation

490
00:21:49,919 --> 00:21:52,320
so now we have some time for for doing

491
00:21:52,320 --> 00:21:54,480
some demos

492
00:21:54,480 --> 00:21:57,120
in these demos we'll be using the same

493
00:21:57,120 --> 00:22:00,399
scenario throughout

494
00:22:00,799 --> 00:22:02,880
we'll be using a login page for a

495
00:22:02,880 --> 00:22:04,400
mock-up

496
00:22:04,400 --> 00:22:06,000
banking website

497
00:22:06,000 --> 00:22:09,679
and this website uses a third-party

498
00:22:09,679 --> 00:22:11,600
chatbot service

499
00:22:11,600 --> 00:22:13,679
so in some of the runs

500
00:22:13,679 --> 00:22:16,159
we'll replace the regular chatbot

501
00:22:16,159 --> 00:22:17,840
scripts

502
00:22:17,840 --> 00:22:20,480
for a compromise version that it's

503
00:22:20,480 --> 00:22:23,520
attempting to leak the login credentials

504
00:22:23,520 --> 00:22:26,880
of the user so you'll see a few options

505
00:22:26,880 --> 00:22:28,080
in the bottom

506
00:22:28,080 --> 00:22:30,720
that allow me to reload the website with

507
00:22:30,720 --> 00:22:32,880
different demo settings

508
00:22:32,880 --> 00:22:35,200
okay

509
00:22:35,520 --> 00:22:39,280
so let's start uh with the baseline so

510
00:22:39,280 --> 00:22:41,440
we'll show you an example of what

511
00:22:41,440 --> 00:22:45,039
happens when isolation is lacking

512
00:22:45,039 --> 00:22:46,320
so let me

513
00:22:46,320 --> 00:22:48,000
start this

514
00:22:48,000 --> 00:22:49,520
full screen

515
00:22:49,520 --> 00:22:52,080
so this is the the dummy virtual bank

516
00:22:52,080 --> 00:22:53,600
websites

517
00:22:53,600 --> 00:22:55,840
and

518
00:22:56,240 --> 00:22:58,799
and as you can see it has first party

519
00:22:58,799 --> 00:23:02,880
codes but it also has the chatbots

520
00:23:02,880 --> 00:23:05,039
script that it's been loaded directly

521
00:23:05,039 --> 00:23:07,200
from the third party server

522
00:23:07,200 --> 00:23:10,200
chatbot.js

523
00:23:10,640 --> 00:23:12,960
so it's not really doing anything

524
00:23:12,960 --> 00:23:15,280
because this is a mock-up chatbot

525
00:23:15,280 --> 00:23:19,280
so that is the icon of the chat bots

526
00:23:19,280 --> 00:23:22,080
it's not really doing anything

527
00:23:22,080 --> 00:23:24,880
but this is a mock-up demo so it doesn't

528
00:23:24,880 --> 00:23:27,120
matter

529
00:23:27,120 --> 00:23:30,720
so obviously being embedded it can hurt

530
00:23:30,720 --> 00:23:33,440
security so let us do another run with

531
00:23:33,440 --> 00:23:36,000
uh with a compromised version of the

532
00:23:36,000 --> 00:23:37,600
same script

533
00:23:37,600 --> 00:23:39,919
this is the the compromised version of

534
00:23:39,919 --> 00:23:41,840
the script it has

535
00:23:41,840 --> 00:23:43,520
additional code

536
00:23:43,520 --> 00:23:45,760
that is hooking into the unsubmit

537
00:23:45,760 --> 00:23:48,720
function of the form so it will run a

538
00:23:48,720 --> 00:23:51,600
malicious function when the user clicks

539
00:23:51,600 --> 00:23:53,600
submit which will

540
00:23:53,600 --> 00:23:56,400
capture the user and password and xhr it

541
00:23:56,400 --> 00:24:00,400
to malicious dash api.jsrama.com

542
00:24:00,400 --> 00:24:03,760
and will resume the form submission

543
00:24:03,760 --> 00:24:06,000
so the user will not notice that

544
00:24:06,000 --> 00:24:07,360
something

545
00:24:07,360 --> 00:24:10,080
odd is happening so let me

546
00:24:10,080 --> 00:24:12,480
login

547
00:24:17,440 --> 00:24:19,840
and uh i'll show you in the in the

548
00:24:19,840 --> 00:24:23,840
attacker dashboards the captured uh

549
00:24:23,840 --> 00:24:25,840
credentials

550
00:24:25,840 --> 00:24:28,400
okay so as you can see

551
00:24:28,400 --> 00:24:30,480
uh that malicious code was able to

552
00:24:30,480 --> 00:24:33,039
capture the credentials

553
00:24:33,039 --> 00:24:34,400
okay so

554
00:24:34,400 --> 00:24:36,000
um

555
00:24:36,000 --> 00:24:39,279
so next uh well we'll be doing

556
00:24:39,279 --> 00:24:40,400
um

557
00:24:40,400 --> 00:24:44,000
is showing you uh the first thing that

558
00:24:44,000 --> 00:24:47,120
most application owners would do in this

559
00:24:47,120 --> 00:24:48,720
situation

560
00:24:48,720 --> 00:24:50,480
so they want to remove

561
00:24:50,480 --> 00:24:51,440
the

562
00:24:51,440 --> 00:24:54,240
full access that this third party script

563
00:24:54,240 --> 00:24:56,080
has to your web app

564
00:24:56,080 --> 00:25:00,159
by isolating the scripts into a

565
00:25:00,159 --> 00:25:02,159
cross-origin iframe

566
00:25:02,159 --> 00:25:04,559
okay

567
00:25:06,240 --> 00:25:08,080
okay

568
00:25:08,080 --> 00:25:13,080
so let me move to the second demo

569
00:25:16,480 --> 00:25:18,320
so we'll be loading the compromise

570
00:25:18,320 --> 00:25:20,880
version inside the time frame

571
00:25:20,880 --> 00:25:23,840
and the first sorry let me

572
00:25:23,840 --> 00:25:28,678
full screen this so you can see

573
00:25:29,200 --> 00:25:30,640
okay

574
00:25:30,640 --> 00:25:32,880
so the first thing that you'll notice

575
00:25:32,880 --> 00:25:35,279
once we reload the page is that you're

576
00:25:35,279 --> 00:25:37,840
getting a console error okay

577
00:25:37,840 --> 00:25:40,320
so um so this is basically the

578
00:25:40,320 --> 00:25:42,960
consequence of loading the

579
00:25:42,960 --> 00:25:45,760
chatbot script inside the iframe

580
00:25:45,760 --> 00:25:48,720
and we are using a subdomain for that so

581
00:25:48,720 --> 00:25:51,520
it's not running in virtobank.com it's

582
00:25:51,520 --> 00:25:52,320
actually running in

583
00:25:52,320 --> 00:25:54,559
chatbots.fertilebank.com

584
00:25:54,559 --> 00:25:57,039
okay so it's a it's a subdomain

585
00:25:57,039 --> 00:25:59,279
subdomain by default is considered to be

586
00:25:59,279 --> 00:26:00,720
cross origin

587
00:26:00,720 --> 00:26:04,240
and the scripts is unchanged so it tries

588
00:26:04,240 --> 00:26:06,720
to access the form directly but it

589
00:26:06,720 --> 00:26:09,600
cannot find it in the html

590
00:26:09,600 --> 00:26:10,559
okay

591
00:26:10,559 --> 00:26:12,320
so

592
00:26:12,320 --> 00:26:13,440
however

593
00:26:13,440 --> 00:26:15,600
we even though we have mitigated the

594
00:26:15,600 --> 00:26:19,200
problem uh this can potentially require

595
00:26:19,200 --> 00:26:22,640
re-engineering uh of the web app

596
00:26:22,640 --> 00:26:24,799
or even requesting the service provided

597
00:26:24,799 --> 00:26:27,360
to change how the service works

598
00:26:27,360 --> 00:26:29,919
and re-engineering the web app is quite

599
00:26:29,919 --> 00:26:32,480
complex

600
00:26:32,559 --> 00:26:37,679
and um and and it may require a protocol

601
00:26:37,679 --> 00:26:41,440
to to define how we post message things

602
00:26:41,440 --> 00:26:44,000
back and forth between the main window

603
00:26:44,000 --> 00:26:46,880
and the third party service running in

604
00:26:46,880 --> 00:26:49,120
the isolated iframe

605
00:26:49,120 --> 00:26:50,880
for instance

606
00:26:50,880 --> 00:26:53,360
an analytics service expects direct

607
00:26:53,360 --> 00:26:56,240
access to the full dom of the web app um

608
00:26:56,240 --> 00:26:59,200
so it's no wonder that many websites end

609
00:26:59,200 --> 00:27:00,240
up just

610
00:27:00,240 --> 00:27:02,240
adding the scripts directly

611
00:27:02,240 --> 00:27:07,320
to the main window despite the risk

612
00:27:08,159 --> 00:27:09,120
so

613
00:27:09,120 --> 00:27:12,080
and this brings us to demo number three

614
00:27:12,080 --> 00:27:15,600
which i'll ask just to do

615
00:27:15,600 --> 00:27:17,840
uh sure do you want to fulfill it before

616
00:27:17,840 --> 00:27:18,840
you

617
00:27:18,840 --> 00:27:23,120
play uh so the part of the problem was

618
00:27:23,120 --> 00:27:24,000
uh

619
00:27:24,000 --> 00:27:26,640
was the asynchronous uh running of the

620
00:27:26,640 --> 00:27:28,480
code like that's what is causing it to

621
00:27:28,480 --> 00:27:31,679
be so difficult um here kaha tries to

622
00:27:31,679 --> 00:27:33,679
avoid that let's start by enabling kaha

623
00:27:33,679 --> 00:27:35,840
and rerunning this compromise script now

624
00:27:35,840 --> 00:27:37,679
remember the script that we are about to

625
00:27:37,679 --> 00:27:39,919
compromise here isn't supposed to have

626
00:27:39,919 --> 00:27:42,159
access to the network to do its job

627
00:27:42,159 --> 00:27:43,120
normally

628
00:27:43,120 --> 00:27:44,640
um

629
00:27:44,640 --> 00:27:46,720
we enable taha i'm actually using

630
00:27:46,720 --> 00:27:48,559
something called secure ecmascript

631
00:27:48,559 --> 00:27:50,080
instead of kaha actually but it's

632
00:27:50,080 --> 00:27:51,679
derived from kaha

633
00:27:51,679 --> 00:27:53,760
uh what are we doing here we create a

634
00:27:53,760 --> 00:27:56,080
compartment we white list

635
00:27:56,080 --> 00:27:58,000
just the apis

636
00:27:58,000 --> 00:28:00,240
that are needed for

637
00:28:00,240 --> 00:28:03,120
for the legitimate script to do its job

638
00:28:03,120 --> 00:28:04,799
in this case the only things that are

639
00:28:04,799 --> 00:28:07,520
needed are create element and append

640
00:28:07,520 --> 00:28:09,440
child

641
00:28:09,440 --> 00:28:11,120
we rerun the script the thing that

642
00:28:11,120 --> 00:28:12,880
you're noticing is that there's no

643
00:28:12,880 --> 00:28:15,279
network request made

644
00:28:15,279 --> 00:28:17,120
and if we go to the

645
00:28:17,120 --> 00:28:19,120
to the attacker server we find no

646
00:28:19,120 --> 00:28:22,320
additional content was exfiltrated why

647
00:28:22,320 --> 00:28:24,720
because the third party script was

648
00:28:24,720 --> 00:28:27,200
granted access to just what it needed it

649
00:28:27,200 --> 00:28:29,360
needed a pen child it needed create

650
00:28:29,360 --> 00:28:32,799
element it did not need network access

651
00:28:32,799 --> 00:28:35,039
and so it wasn't that we took that away

652
00:28:35,039 --> 00:28:36,880
we basically started by taking

653
00:28:36,880 --> 00:28:39,360
everything away and then only giving

654
00:28:39,360 --> 00:28:41,919
back the power that the script needed

655
00:28:41,919 --> 00:28:44,159
for it to do its job and it could do it

656
00:28:44,159 --> 00:28:45,840
synchronously as opposed to in the

657
00:28:45,840 --> 00:28:48,640
iframe case asynchronously

658
00:28:48,640 --> 00:28:50,480
uh pedro do you want to do the next one

659
00:28:50,480 --> 00:28:52,640
actually

660
00:28:52,640 --> 00:28:53,919
of course

661
00:28:53,919 --> 00:28:54,799
so

662
00:28:54,799 --> 00:28:56,720
let me

663
00:28:56,720 --> 00:28:59,840
oh sorry

664
00:29:04,720 --> 00:29:06,799
okay so um

665
00:29:06,799 --> 00:29:09,440
so to avoid these caveats uh we

666
00:29:09,440 --> 00:29:12,320
developed a sandboxing solution that can

667
00:29:12,320 --> 00:29:15,520
be seamlessly be integrated into any web

668
00:29:15,520 --> 00:29:19,440
app uh you just have to add a scripts

669
00:29:19,440 --> 00:29:22,159
and agents and you get immediately

670
00:29:22,159 --> 00:29:23,360
visible

671
00:29:23,360 --> 00:29:26,159
immediately you get visibility on what

672
00:29:26,159 --> 00:29:29,279
third parties are doing and we can use

673
00:29:29,279 --> 00:29:32,960
rules to either allow or disallow

674
00:29:32,960 --> 00:29:36,240
such behaviors so let me start

675
00:29:36,240 --> 00:29:38,320
the demo

676
00:29:38,320 --> 00:29:39,120
so

677
00:29:39,120 --> 00:29:40,960
in this dashboard you'll be able to see

678
00:29:40,960 --> 00:29:42,480
what's going on so right now it's

679
00:29:42,480 --> 00:29:43,919
completely empty

680
00:29:43,919 --> 00:29:48,240
um so we'll reload the virtual bank app

681
00:29:48,240 --> 00:29:50,480
with both the compromised script and our

682
00:29:50,480 --> 00:29:53,600
agents and to see what's going on

683
00:29:53,600 --> 00:29:56,640
so after a few seconds we see things

684
00:29:56,640 --> 00:29:58,000
landing

685
00:29:58,000 --> 00:30:00,000
in the dashboard

686
00:30:00,000 --> 00:30:02,240
so in this case we see that the on

687
00:30:02,240 --> 00:30:05,039
submit event handler was replaced

688
00:30:05,039 --> 00:30:06,720
we can see the ip address the user

689
00:30:06,720 --> 00:30:09,279
agents and we can see in full detail

690
00:30:09,279 --> 00:30:11,520
what form was targeted

691
00:30:11,520 --> 00:30:14,799
and the malicious function that was set

692
00:30:14,799 --> 00:30:16,480
by the attacker so we can see in full

693
00:30:16,480 --> 00:30:20,640
detail right now we are not blocking it

694
00:30:20,640 --> 00:30:22,880
and we have confirmation that it was

695
00:30:22,880 --> 00:30:26,159
chatbots compromise.js that was doing

696
00:30:26,159 --> 00:30:27,440
this

697
00:30:27,440 --> 00:30:28,960
okay

698
00:30:28,960 --> 00:30:30,480
so let us

699
00:30:30,480 --> 00:30:32,480
move forward nevertheless so we're not

700
00:30:32,480 --> 00:30:34,840
blocking this but we already have

701
00:30:34,840 --> 00:30:36,640
visibility

702
00:30:36,640 --> 00:30:39,200
and see what happens

703
00:30:39,200 --> 00:30:41,520
so the next thing that we get is

704
00:30:41,520 --> 00:30:42,799
an alert

705
00:30:42,799 --> 00:30:45,840
about the excitation of the data so we

706
00:30:45,840 --> 00:30:48,320
can see the endpoints and what data is

707
00:30:48,320 --> 00:30:49,760
being passed

708
00:30:49,760 --> 00:30:52,159
and again we can see what was the script

709
00:30:52,159 --> 00:30:53,039
that

710
00:30:53,039 --> 00:30:55,200
triggered this action

711
00:30:55,200 --> 00:30:58,799
so obviously visibility is nice

712
00:30:58,799 --> 00:31:00,799
and here we can see confirmation that

713
00:31:00,799 --> 00:31:03,919
the credentials were captured visibility

714
00:31:03,919 --> 00:31:06,480
is nice but we need to mitigate it so

715
00:31:06,480 --> 00:31:08,559
the first thing that we are doing is

716
00:31:08,559 --> 00:31:10,080
creating a rule

717
00:31:10,080 --> 00:31:12,640
to prevent the exfiltration so in this

718
00:31:12,640 --> 00:31:14,399
rule you can see

719
00:31:14,399 --> 00:31:18,240
in with which pages the rule is running

720
00:31:18,240 --> 00:31:20,080
which scripts

721
00:31:20,080 --> 00:31:22,240
this this particular rule will be

722
00:31:22,240 --> 00:31:23,440
applied to

723
00:31:23,440 --> 00:31:26,559
and which events we are controlling so

724
00:31:26,559 --> 00:31:28,480
in this case we are

725
00:31:28,480 --> 00:31:30,000
restricting

726
00:31:30,000 --> 00:31:32,720
any network requests whose destination

727
00:31:32,720 --> 00:31:35,960
dot domain equals malicious dash api dot

728
00:31:35,960 --> 00:31:37,919
jskrama.com

729
00:31:37,919 --> 00:31:38,799
okay

730
00:31:38,799 --> 00:31:43,120
so the action we set to alert and block

731
00:31:43,120 --> 00:31:44,640
so we're doing

732
00:31:44,640 --> 00:31:47,679
two things and i don't need to save the

733
00:31:47,679 --> 00:31:49,519
rule because it's already there so i'm

734
00:31:49,519 --> 00:31:52,159
enabling the rule and applying the

735
00:31:52,159 --> 00:31:53,519
configuration

736
00:31:53,519 --> 00:31:56,880
so at this point we'll need to wait a

737
00:31:56,880 --> 00:32:00,159
few seconds for the deployment

738
00:32:00,159 --> 00:32:02,320
to be complete

739
00:32:02,320 --> 00:32:04,240
and next

740
00:32:04,240 --> 00:32:08,960
we'll do another run to see what changed

741
00:32:10,240 --> 00:32:12,559
okay so let's wait a couple

742
00:32:12,559 --> 00:32:15,039
more seconds

743
00:32:15,039 --> 00:32:16,240
all right

744
00:32:16,240 --> 00:32:18,399
and let's reload the page

745
00:32:18,399 --> 00:32:20,080
and see what happens

746
00:32:20,080 --> 00:32:21,039
so

747
00:32:21,039 --> 00:32:24,240
a few seconds later

748
00:32:24,480 --> 00:32:26,880
we'll get

749
00:32:26,880 --> 00:32:29,760
the same on submit event handler being

750
00:32:29,760 --> 00:32:32,720
replaced so we we did nothing

751
00:32:32,720 --> 00:32:35,519
regard that uh

752
00:32:35,519 --> 00:32:38,080
apathel this moment but we

753
00:32:38,080 --> 00:32:40,399
are preventing the excellation so that

754
00:32:40,399 --> 00:32:42,399
malicious function is running and when

755
00:32:42,399 --> 00:32:44,080
it tries to accelerate it will be

756
00:32:44,080 --> 00:32:48,320
blocked by the isolation layer

757
00:32:48,320 --> 00:32:50,880
so as you can see there's no additional

758
00:32:50,880 --> 00:32:53,279
entries in the attacker's dashboard

759
00:32:53,279 --> 00:32:56,320
so obviously we can do better

760
00:32:56,320 --> 00:32:58,640
we can also prevent that

761
00:32:58,640 --> 00:33:00,720
event handler function to

762
00:33:00,720 --> 00:33:03,760
for replacing the original one

763
00:33:03,760 --> 00:33:05,039
um

764
00:33:05,039 --> 00:33:07,039
and we already have a rule for that as

765
00:33:07,039 --> 00:33:11,279
well so sorry let me

766
00:33:11,279 --> 00:33:14,399
okay so what we are doing here is

767
00:33:14,399 --> 00:33:16,799
let me

768
00:33:19,120 --> 00:33:20,880
so we have

769
00:33:20,880 --> 00:33:22,559
a rule for that so what we are doing

770
00:33:22,559 --> 00:33:24,880
here is we are creating a rule that will

771
00:33:24,880 --> 00:33:27,919
be applied to every page in the websites

772
00:33:27,919 --> 00:33:30,159
regardless of what scripts

773
00:33:30,159 --> 00:33:33,120
and we are blocking any behavioral

774
00:33:33,120 --> 00:33:35,919
change that targets a form

775
00:33:35,919 --> 00:33:39,039
if that happens we will alert but also

776
00:33:39,039 --> 00:33:42,399
block the event okay so again

777
00:33:42,399 --> 00:33:44,000
um

778
00:33:44,000 --> 00:33:45,679
again we need to

779
00:33:45,679 --> 00:33:48,559
enable this rule and apply the

780
00:33:48,559 --> 00:33:50,000
configuration

781
00:33:50,000 --> 00:33:51,519
i'll just

782
00:33:51,519 --> 00:33:55,519
fast forward this bits for your benefits

783
00:33:55,519 --> 00:33:57,679
and

784
00:33:57,679 --> 00:34:00,000
the next thing i'll do is

785
00:34:00,000 --> 00:34:01,919
i'll do a final run

786
00:34:01,919 --> 00:34:05,799
to see what changed

787
00:34:06,559 --> 00:34:10,079
okay so i need to reload the page

788
00:34:10,079 --> 00:34:11,040
and

789
00:34:11,040 --> 00:34:12,879
right about now

790
00:34:12,879 --> 00:34:16,560
the unsubmit events handler replacing

791
00:34:16,560 --> 00:34:19,520
was already attempted but was blocked by

792
00:34:19,520 --> 00:34:20,639
the rule

793
00:34:20,639 --> 00:34:22,239
okay

794
00:34:22,239 --> 00:34:26,159
and this is it so uh two comments so

795
00:34:26,159 --> 00:34:29,040
this demo may lead you to think that um

796
00:34:29,040 --> 00:34:31,040
that you need to find about things and

797
00:34:31,040 --> 00:34:33,280
only then block it

798
00:34:33,280 --> 00:34:35,839
but the rules engine actually allows you

799
00:34:35,839 --> 00:34:37,839
to set allow lists

800
00:34:37,839 --> 00:34:40,639
for all sorts of things for example you

801
00:34:40,639 --> 00:34:41,520
can

802
00:34:41,520 --> 00:34:44,320
name one script that needs

803
00:34:44,320 --> 00:34:45,760
access to

804
00:34:45,760 --> 00:34:47,679
a given form

805
00:34:47,679 --> 00:34:49,760
and every other access will be blocked

806
00:34:49,760 --> 00:34:51,760
by default

807
00:34:51,760 --> 00:34:54,960
and thus reducing the attack surface so

808
00:34:54,960 --> 00:34:57,119
we can do the same for cookies for local

809
00:34:57,119 --> 00:34:59,920
storage and for a number of other things

810
00:34:59,920 --> 00:35:02,720
other behaviors under other resources

811
00:35:02,720 --> 00:35:05,599
so you can you can set the terrain

812
00:35:05,599 --> 00:35:08,720
um to be secure by default

813
00:35:08,720 --> 00:35:11,200
uh without the actual need to be waiting

814
00:35:11,200 --> 00:35:13,280
for something to happen

815
00:35:13,280 --> 00:35:15,680
also the rules are quite flexible and

816
00:35:15,680 --> 00:35:18,400
granular which means that our isolation

817
00:35:18,400 --> 00:35:19,839
boxes

818
00:35:19,839 --> 00:35:22,560
can be as small as we want without

819
00:35:22,560 --> 00:35:28,200
having to re-engineer the whole web app

820
00:35:32,320 --> 00:35:35,040
okay so

821
00:35:36,160 --> 00:35:40,240
so this talk is is coming to the end uh

822
00:35:40,240 --> 00:35:42,320
but we still need to address the

823
00:35:42,320 --> 00:35:45,839
challenges ahead

824
00:35:46,320 --> 00:35:48,800
to understand the challenges it helps

825
00:35:48,800 --> 00:35:50,720
understanding what we have been doing

826
00:35:50,720 --> 00:35:52,079
wrong

827
00:35:52,079 --> 00:35:55,520
in terms of browser-based security

828
00:35:55,520 --> 00:35:57,119
the security features that provide

829
00:35:57,119 --> 00:35:58,400
isolation

830
00:35:58,400 --> 00:36:00,079
things have moved

831
00:36:00,079 --> 00:36:02,640
slow and erratically

832
00:36:02,640 --> 00:36:04,800
and the reason is because it was never

833
00:36:04,800 --> 00:36:08,640
one feature whose purpose was to provide

834
00:36:08,640 --> 00:36:12,320
full isolation for browser-based apps so

835
00:36:12,320 --> 00:36:15,119
isolation has been more about stitching

836
00:36:15,119 --> 00:36:17,920
together a bunch of different mechanisms

837
00:36:17,920 --> 00:36:20,480
and tried to cover as much surface as

838
00:36:20,480 --> 00:36:22,320
possible

839
00:36:22,320 --> 00:36:25,760
this is both complex and error-prone and

840
00:36:25,760 --> 00:36:28,640
inevitably leave some holes or blind

841
00:36:28,640 --> 00:36:30,320
spots

842
00:36:30,320 --> 00:36:31,440
so

843
00:36:31,440 --> 00:36:33,839
behind the browser there are other few

844
00:36:33,839 --> 00:36:35,040
initiatives

845
00:36:35,040 --> 00:36:37,680
some of which we already mentioned

846
00:36:37,680 --> 00:36:39,839
that try to come up with a holistic

847
00:36:39,839 --> 00:36:42,560
approach for client-side web isolation

848
00:36:42,560 --> 00:36:45,119
so we mentioned kaha

849
00:36:45,119 --> 00:36:48,160
but sadly kaha was eventually

850
00:36:48,160 --> 00:36:50,880
discontinued and more recently we have

851
00:36:50,880 --> 00:36:54,640
been working on web page integrity um

852
00:36:54,640 --> 00:36:57,839
and there are maybe a couple there

853
00:36:57,839 --> 00:37:01,759
there are also valuable out there

854
00:37:02,400 --> 00:37:03,760
so just

855
00:37:03,760 --> 00:37:07,119
what do we need for the next 20 years

856
00:37:07,119 --> 00:37:10,000
pedro's covered you know what we did

857
00:37:10,000 --> 00:37:10,800
uh

858
00:37:10,800 --> 00:37:12,240
you know the web is evolving it's

859
00:37:12,240 --> 00:37:15,200
evolving in a very fast pace we're

860
00:37:15,200 --> 00:37:16,400
moving

861
00:37:16,400 --> 00:37:19,520
more and more things onto the web and

862
00:37:19,520 --> 00:37:22,320
it's highly decentralized where in order

863
00:37:22,320 --> 00:37:24,480
to build your applications to today you

864
00:37:24,480 --> 00:37:25,920
glued together

865
00:37:25,920 --> 00:37:27,920
large numbers of third-party services so

866
00:37:27,920 --> 00:37:29,839
what does the next 30

867
00:37:29,839 --> 00:37:32,240
next 20 years look like what what i

868
00:37:32,240 --> 00:37:34,560
assert we need what we're our

869
00:37:34,560 --> 00:37:37,680
perspective is what we need is a single

870
00:37:37,680 --> 00:37:40,240
holistic client-side

871
00:37:40,240 --> 00:37:41,359
um

872
00:37:41,359 --> 00:37:43,599
web solution that covers all of these

873
00:37:43,599 --> 00:37:45,359
angles right we need a broad and

874
00:37:45,359 --> 00:37:47,760
coherent plan and there's three

875
00:37:47,760 --> 00:37:49,280
principles that we've talked about today

876
00:37:49,280 --> 00:37:51,680
which is reducing the size of the

877
00:37:51,680 --> 00:37:52,960
compartments

878
00:37:52,960 --> 00:37:55,280
uh making each one of the compartments

879
00:37:55,280 --> 00:37:58,000
each one of the units stronger

880
00:37:58,000 --> 00:38:00,960
and uh developer friendly

881
00:38:00,960 --> 00:38:02,880
you know aligned with how the web is

882
00:38:02,880 --> 00:38:05,280
used today not how we were using it back

883
00:38:05,280 --> 00:38:06,480
in the day as we were making this

884
00:38:06,480 --> 00:38:10,079
presentation uh pedro and i joked i make

885
00:38:10,079 --> 00:38:13,839
terrible puns i'm sorry but we we

886
00:38:13,839 --> 00:38:17,839
we joked that the way to make a ship

887
00:38:17,839 --> 00:38:20,640
unthinkable is to sort of give it wings

888
00:38:20,640 --> 00:38:22,320
and i think that that's what we need to

889
00:38:22,320 --> 00:38:23,920
do is to give

890
00:38:23,920 --> 00:38:25,359
you know

891
00:38:25,359 --> 00:38:28,400
is to give the titanic wings

892
00:38:28,400 --> 00:38:32,000
let's talk about how far along we are

893
00:38:32,000 --> 00:38:34,320
um

894
00:38:36,240 --> 00:38:38,320
parts of the solution we have the ones

895
00:38:38,320 --> 00:38:40,640
that we've been talking about today that

896
00:38:40,640 --> 00:38:43,280
go fairly far into this vision but

897
00:38:43,280 --> 00:38:45,520
ambitious plans take time there are lots

898
00:38:45,520 --> 00:38:48,160
of pieces on the way here

899
00:38:48,160 --> 00:38:50,000
in a couple of years the maturity of

900
00:38:50,000 --> 00:38:52,960
these solutions will help make not just

901
00:38:52,960 --> 00:38:55,440
each part work well but work better with

902
00:38:55,440 --> 00:38:57,920
each other

903
00:38:57,920 --> 00:38:59,920
and drive adoption we were ironing out

904
00:38:59,920 --> 00:39:03,119
bugs pedro mentioned csp uh that was an

905
00:39:03,119 --> 00:39:05,520
attempt and we found some rough corner

906
00:39:05,520 --> 00:39:08,800
cases and we over time polished them

907
00:39:08,800 --> 00:39:09,680
uh

908
00:39:09,680 --> 00:39:12,160
we over time polished them now in spite

909
00:39:12,160 --> 00:39:13,680
of the analogy that we've been making

910
00:39:13,680 --> 00:39:15,839
here the plan is not actually to build

911
00:39:15,839 --> 00:39:18,560
an unthinkable ship it's to

912
00:39:18,560 --> 00:39:21,520
lift web application security

913
00:39:21,520 --> 00:39:23,359
a little bit out of the water so we're

914
00:39:23,359 --> 00:39:25,920
not constantly

915
00:39:25,920 --> 00:39:29,280
so we're not constantly drowning

916
00:39:29,280 --> 00:39:31,680
so we called the security community you

917
00:39:31,680 --> 00:39:33,440
and i like all of us

918
00:39:33,440 --> 00:39:37,280
uh to join us and and help continue to

919
00:39:37,280 --> 00:39:38,160
push

920
00:39:38,160 --> 00:39:39,200
um

921
00:39:39,200 --> 00:39:41,359
web isolation in particular as a

922
00:39:41,359 --> 00:39:44,240
mechanism that we use to mitigate

923
00:39:44,240 --> 00:39:47,520
uh the extent to which we are vulnerable

924
00:39:47,520 --> 00:39:49,280
to third-party scripts

925
00:39:49,280 --> 00:39:52,160
uh and hopefully we'll all meet you in

926
00:39:52,160 --> 00:39:53,839
the future

927
00:39:53,839 --> 00:39:57,839
um take care

928
00:39:57,920 --> 00:39:58,880
um

929
00:39:58,880 --> 00:40:00,960
and that's all we have for today so

930
00:40:00,960 --> 00:40:03,520
thank you very much it was wonderful to

931
00:40:03,520 --> 00:40:05,280
be here today

932
00:40:05,280 --> 00:40:08,319
uh we would also like to pay our

933
00:40:08,319 --> 00:40:12,079
respects to the late sir clive sinclair

934
00:40:12,079 --> 00:40:15,680
he was an inventor and a genius

935
00:40:15,680 --> 00:40:18,079
personally he's responsible for me

936
00:40:18,079 --> 00:40:21,200
pursuing a career in computer science

937
00:40:21,200 --> 00:40:23,200
it was a huge loss

938
00:40:23,200 --> 00:40:25,280
for a generation that fell in love with

939
00:40:25,280 --> 00:40:29,040
computers because of his inventions

940
00:40:29,040 --> 00:40:30,560
so thank you again

941
00:40:30,560 --> 00:40:32,720
and we are happy to take your questions

942
00:40:32,720 --> 00:40:34,640
now

943
00:40:34,640 --> 00:40:36,480
to you for the knowledge

944
00:40:36,480 --> 00:40:38,240
i have a few questions what is your

945
00:40:38,240 --> 00:40:41,040
opinion about the firewall from the

946
00:40:41,040 --> 00:40:43,920
apps and web

947
00:40:50,160 --> 00:40:52,640
can you hear me

948
00:40:52,640 --> 00:40:54,560
can now yes

949
00:40:54,560 --> 00:40:57,280
okay what is your opinion on the

950
00:40:57,280 --> 00:41:01,359
firewall from the apps web

951
00:41:02,480 --> 00:41:03,680
sorry

952
00:41:03,680 --> 00:41:04,640
can you

953
00:41:04,640 --> 00:41:06,720
can you rephrase that again

954
00:41:06,720 --> 00:41:08,400
from the

955
00:41:08,400 --> 00:41:11,280
what is your opinion of the firewall

956
00:41:11,280 --> 00:41:12,960
from the app

957
00:41:12,960 --> 00:41:16,319
the application of web

958
00:41:17,920 --> 00:41:20,319
i i'm not sure i got the question jazz

959
00:41:20,319 --> 00:41:22,400
do you have do you did you get the

960
00:41:22,400 --> 00:41:23,200
question

961
00:41:23,200 --> 00:41:25,920
i i i not entirely but i can guess a

962
00:41:25,920 --> 00:41:27,359
question

963
00:41:27,359 --> 00:41:29,119
so maybe i want to answer differently

964
00:41:29,119 --> 00:41:31,839
people ask me about your opinion about

965
00:41:31,839 --> 00:41:34,480
the firewall from the natural

966
00:41:34,480 --> 00:41:35,280
web

967
00:41:35,280 --> 00:41:37,200
applications

968
00:41:37,200 --> 00:41:39,040
right so i i'll

969
00:41:39,040 --> 00:41:41,359
i'll be brief about this right so

970
00:41:41,359 --> 00:41:44,800
uh i think that in general uh web

971
00:41:44,800 --> 00:41:46,839
applications have moved away

972
00:41:46,839 --> 00:41:49,680
from uh you know we call them perimeter

973
00:41:49,680 --> 00:41:51,599
security because you know web firewalls

974
00:41:51,599 --> 00:41:54,160
firewalls in general are

975
00:41:54,160 --> 00:41:58,079
you know a a hard crusty exterior and a

976
00:41:58,079 --> 00:42:01,200
soft gooey center right and so

977
00:42:01,200 --> 00:42:03,440
once upon a time when web applications

978
00:42:03,440 --> 00:42:05,520
were mostly documents that worked really

979
00:42:05,520 --> 00:42:08,240
well because you know you'd have uh you

980
00:42:08,240 --> 00:42:10,240
you'd you know build this boundary you

981
00:42:10,240 --> 00:42:13,280
know like the the great firewall china

982
00:42:13,280 --> 00:42:15,440
or you know you'd build a boundary and

983
00:42:15,440 --> 00:42:17,520
as long as the attacker was not able to

984
00:42:17,520 --> 00:42:20,079
get through this boundary you were good

985
00:42:20,079 --> 00:42:22,480
if you think about it web applications

986
00:42:22,480 --> 00:42:25,119
uh are active applications this means

987
00:42:25,119 --> 00:42:27,520
that the the the attacker

988
00:42:27,520 --> 00:42:30,160
could be inside your perimeter and so

989
00:42:30,160 --> 00:42:32,480
firewalls tend not to work so well in

990
00:42:32,480 --> 00:42:35,119
those set of circumstances a lot of the

991
00:42:35,119 --> 00:42:37,200
tooling that i was describing today

992
00:42:37,200 --> 00:42:39,920
around virtualization is you know if you

993
00:42:39,920 --> 00:42:42,560
squint right it's moving the firewall

994
00:42:42,560 --> 00:42:44,640
from way out you know out in the

995
00:42:44,640 --> 00:42:47,040
boundaries all the way inside your

996
00:42:47,040 --> 00:42:49,680
application so that each one of your

997
00:42:49,680 --> 00:42:52,880
each one of your apis is surrounded by

998
00:42:52,880 --> 00:42:54,160
um

999
00:42:54,160 --> 00:42:55,200
by a

1000
00:42:55,200 --> 00:42:58,000
sort of virtualized firewall and the

1001
00:42:58,000 --> 00:43:00,560
reason why that is powerful is because

1002
00:43:00,560 --> 00:43:02,400
uh you know that means that you have

1003
00:43:02,400 --> 00:43:05,359
context on what needs to be what needs

1004
00:43:05,359 --> 00:43:08,160
to be running um so overall i think

1005
00:43:08,160 --> 00:43:10,720
firewalls worked once upon a time i

1006
00:43:10,720 --> 00:43:12,160
think that the way in which the web

1007
00:43:12,160 --> 00:43:15,119
works now means that you know we need to

1008
00:43:15,119 --> 00:43:17,680
pull these firewalls all the way uh

1009
00:43:17,680 --> 00:43:19,520
inside our application i think that

1010
00:43:19,520 --> 00:43:20,400
those

1011
00:43:20,400 --> 00:43:22,560
and only those are going to end up

1012
00:43:22,560 --> 00:43:24,400
giving you the kind of you know sort of

1013
00:43:24,400 --> 00:43:26,800
zero trust security that we need

1014
00:43:26,800 --> 00:43:29,200
charles if i'm allowed to add something

1015
00:43:29,200 --> 00:43:30,000
there

1016
00:43:30,000 --> 00:43:30,960
uh

1017
00:43:30,960 --> 00:43:33,520
the question could be uh

1018
00:43:33,520 --> 00:43:35,920
related with web application firewalls

1019
00:43:35,920 --> 00:43:37,359
and and

1020
00:43:37,359 --> 00:43:39,760
from a technical standpoint there's some

1021
00:43:39,760 --> 00:43:42,720
interesting differences that we want to

1022
00:43:42,720 --> 00:43:44,560
to communicate here

1023
00:43:44,560 --> 00:43:47,040
so basically a waff a web application

1024
00:43:47,040 --> 00:43:50,000
firewall is usually placed between the

1025
00:43:50,000 --> 00:43:51,200
back end

1026
00:43:51,200 --> 00:43:54,560
and the front end uh but

1027
00:43:54,560 --> 00:43:56,400
the way it's

1028
00:43:56,400 --> 00:43:59,200
deployed it will only actually

1029
00:43:59,200 --> 00:44:02,079
screen communications between

1030
00:44:02,079 --> 00:44:03,920
that backhand

1031
00:44:03,920 --> 00:44:06,960
and the browser which means that

1032
00:44:06,960 --> 00:44:08,720
in our demo for instance the

1033
00:44:08,720 --> 00:44:10,880
acceleration was done to a third-party

1034
00:44:10,880 --> 00:44:12,079
domain

1035
00:44:12,079 --> 00:44:13,839
and that communication

1036
00:44:13,839 --> 00:44:16,400
was not covered by the waft the waf

1037
00:44:16,400 --> 00:44:18,079
wouldn't be able to look at that

1038
00:44:18,079 --> 00:44:20,240
communication or any other communication

1039
00:44:20,240 --> 00:44:22,800
that it's not being directed to

1040
00:44:22,800 --> 00:44:24,720
the application backend

1041
00:44:24,720 --> 00:44:26,800
uh on top of this

1042
00:44:26,800 --> 00:44:29,599
waffs they look at code statically they

1043
00:44:29,599 --> 00:44:31,280
look at code that it's not running at

1044
00:44:31,280 --> 00:44:34,480
that moment they look at responses

1045
00:44:34,480 --> 00:44:37,119
so they have to deal with uh trying to

1046
00:44:37,119 --> 00:44:39,200
figure out what that code

1047
00:44:39,200 --> 00:44:41,440
will be doing once it reaches the

1048
00:44:41,440 --> 00:44:44,400
browser and and once it starts running

1049
00:44:44,400 --> 00:44:48,240
and that's very hard to to to do

1050
00:44:48,240 --> 00:44:50,240
uh unless you're considering like very

1051
00:44:50,240 --> 00:44:52,720
low hanging fruit stuff it's very hard

1052
00:44:52,720 --> 00:44:55,200
to do because there are plenty of ways

1053
00:44:55,200 --> 00:44:56,560
to hide

1054
00:44:56,560 --> 00:44:59,599
um to really hide because javascript is

1055
00:44:59,599 --> 00:45:03,200
really easy to to modify how it looks

1056
00:45:03,200 --> 00:45:05,920
it's very easy to statically hide what

1057
00:45:05,920 --> 00:45:07,680
it will be doing

1058
00:45:07,680 --> 00:45:10,960
so we argue that

1059
00:45:10,960 --> 00:45:13,280
doing that kind of screening

1060
00:45:13,280 --> 00:45:15,760
on the browser and doing dynamic

1061
00:45:15,760 --> 00:45:18,800
analysis rather than static analysis

1062
00:45:18,800 --> 00:45:21,119
is the right approach because it doesn't

1063
00:45:21,119 --> 00:45:23,200
matter how the code looks like what

1064
00:45:23,200 --> 00:45:26,000
matters it's what behaviors that code is

1065
00:45:26,000 --> 00:45:27,599
trying to engage

1066
00:45:27,599 --> 00:45:32,240
and using virtualization you are uh you

1067
00:45:32,240 --> 00:45:33,920
are in the middle of that so you can

1068
00:45:33,920 --> 00:45:36,319
control uh and you have actual

1069
00:45:36,319 --> 00:45:38,720
confirmation of the behavior that it's

1070
00:45:38,720 --> 00:45:40,640
about to happen

1071
00:45:40,640 --> 00:45:42,000
okay

1072
00:45:42,000 --> 00:45:43,839
the last one

1073
00:45:43,839 --> 00:45:47,200
how this solution help developers to fix

1074
00:45:47,200 --> 00:45:49,920
their code apart from mitigating the

1075
00:45:49,920 --> 00:45:52,240
risk

1076
00:45:56,160 --> 00:45:57,359
so

1077
00:45:57,359 --> 00:46:00,160
so this is not meant to fix the codes

1078
00:46:00,160 --> 00:46:03,599
this is meant to to provide visibility

1079
00:46:03,599 --> 00:46:06,000
to help security

1080
00:46:06,000 --> 00:46:08,720
practitioners to understand

1081
00:46:08,720 --> 00:46:11,280
the the type of threats

1082
00:46:11,280 --> 00:46:13,520
that are usually

1083
00:46:13,520 --> 00:46:15,200
targeting

1084
00:46:15,200 --> 00:46:18,079
these websites

1085
00:46:18,079 --> 00:46:21,280
it does nothing in order to make

1086
00:46:21,280 --> 00:46:23,040
developers

1087
00:46:23,040 --> 00:46:25,200
produce better code

1088
00:46:25,200 --> 00:46:27,520
there are of course some some

1089
00:46:27,520 --> 00:46:28,800
some

1090
00:46:28,800 --> 00:46:30,560
some good practices

1091
00:46:30,560 --> 00:46:32,319
that you should

1092
00:46:32,319 --> 00:46:34,319
follow whenever you can

1093
00:46:34,319 --> 00:46:37,280
but this is not the purpose of of this

1094
00:46:37,280 --> 00:46:39,040
type of approach

1095
00:46:39,040 --> 00:46:40,640
web isolation

1096
00:46:40,640 --> 00:46:42,800
what it can help is that

1097
00:46:42,800 --> 00:46:43,839
even

1098
00:46:43,839 --> 00:46:44,880
when

1099
00:46:44,880 --> 00:46:47,040
the developer

1100
00:46:47,040 --> 00:46:50,160
does a poor job

1101
00:46:50,319 --> 00:46:54,000
isolating things like using iframes or

1102
00:46:54,000 --> 00:46:56,319
or separating concerns separating

1103
00:46:56,319 --> 00:46:59,920
scripts um it still

1104
00:46:59,920 --> 00:47:02,079
it gets the protection from the

1105
00:47:02,079 --> 00:47:05,280
isolation and the costs of adding that

1106
00:47:05,280 --> 00:47:08,480
isolation is almost for free

1107
00:47:08,480 --> 00:47:10,720
because the at least from the

1108
00:47:10,720 --> 00:47:12,880
developer's point of view

1109
00:47:12,880 --> 00:47:14,240
um

1110
00:47:14,240 --> 00:47:16,880
he or she uh does not need to do

1111
00:47:16,880 --> 00:47:19,359
anything differently in order to benefit

1112
00:47:19,359 --> 00:47:21,280
from that protection

1113
00:47:21,280 --> 00:47:22,880
jazz i don't know if you want to add

1114
00:47:22,880 --> 00:47:25,920
something here i i definitely do uh just

1115
00:47:25,920 --> 00:47:27,280
to keep things spicy i'm going to

1116
00:47:27,280 --> 00:47:29,119
disagree with you

1117
00:47:29,119 --> 00:47:32,559
so this is always fun so no i i mean you

1118
00:47:32,559 --> 00:47:34,240
of course are right this is not the

1119
00:47:34,240 --> 00:47:35,280
purpose

1120
00:47:35,280 --> 00:47:38,160
but actually virtualization does two

1121
00:47:38,160 --> 00:47:40,960
things that make developers experience

1122
00:47:40,960 --> 00:47:42,880
much better one is

1123
00:47:42,880 --> 00:47:45,200
it does give you the

1124
00:47:45,200 --> 00:47:47,200
you know the visibility that you need

1125
00:47:47,200 --> 00:47:48,960
and now of course you know security

1126
00:47:48,960 --> 00:47:50,400
people want visibility because we want

1127
00:47:50,400 --> 00:47:52,079
to know what the bad guys are up to bad

1128
00:47:52,079 --> 00:47:54,079
guys are like sneaking around and we

1129
00:47:54,079 --> 00:47:55,760
want that visibility but if you think

1130
00:47:55,760 --> 00:47:58,240
about it when you are debugging you're

1131
00:47:58,240 --> 00:48:00,720
essentially an attacker on your own code

1132
00:48:00,720 --> 00:48:02,960
and like essentially giving that

1133
00:48:02,960 --> 00:48:05,680
visibility makes the life of a developer

1134
00:48:05,680 --> 00:48:07,599
that much easier because suddenly you

1135
00:48:07,599 --> 00:48:09,040
get all of this visibility that you did

1136
00:48:09,040 --> 00:48:11,200
not previously have didn't prevent you

1137
00:48:11,200 --> 00:48:12,640
from putting the bugs in in the first

1138
00:48:12,640 --> 00:48:14,640
place but now that you've put the bugs

1139
00:48:14,640 --> 00:48:15,599
in

1140
00:48:15,599 --> 00:48:18,319
really helpful i i personally have used

1141
00:48:18,319 --> 00:48:20,160
you know this virtualization tricks that

1142
00:48:20,160 --> 00:48:21,359
we've talked about

1143
00:48:21,359 --> 00:48:23,920
to debug code you know that idiot that

1144
00:48:23,920 --> 00:48:26,800
jazz was six months ago wrote right so

1145
00:48:26,800 --> 00:48:28,880
visibility is i think

1146
00:48:28,880 --> 00:48:30,800
really provided by tools like it i would

1147
00:48:30,800 --> 00:48:33,280
love to see more of them the other is

1148
00:48:33,280 --> 00:48:35,359
the thing that you allude to which is

1149
00:48:35,359 --> 00:48:38,720
isolation now isolation means that you

1150
00:48:38,720 --> 00:48:41,440
know the bad guy can't hurt you but it

1151
00:48:41,440 --> 00:48:44,480
also means that you can't hurt you by

1152
00:48:44,480 --> 00:48:47,040
accident right so you know of course it

1153
00:48:47,040 --> 00:48:48,640
is the case that you know the attacker

1154
00:48:48,640 --> 00:48:50,400
is trying to maliciously do bad things

1155
00:48:50,400 --> 00:48:52,640
to you but if things are isolated think

1156
00:48:52,640 --> 00:48:54,960
about it not in terms of security but as

1157
00:48:54,960 --> 00:48:57,599
modularity right the more isolated your

1158
00:48:57,599 --> 00:49:00,079
code is that means that this piece here

1159
00:49:00,079 --> 00:49:02,400
can't hurt this piece here because it's

1160
00:49:02,400 --> 00:49:04,319
been isolated if everything was sitting

1161
00:49:04,319 --> 00:49:06,400
in the same sandbox then you know you'd

1162
00:49:06,400 --> 00:49:08,720
be hurting each other even if you were

1163
00:49:08,720 --> 00:49:10,079
writing the code because you know you

1164
00:49:10,079 --> 00:49:11,680
just could not keep it separated in your

1165
00:49:11,680 --> 00:49:15,280
head and so i do think that yes it pro

1166
00:49:15,280 --> 00:49:17,599
was not built to make the life of

1167
00:49:17,599 --> 00:49:19,680
developers easier but i think that in

1168
00:49:19,680 --> 00:49:22,160
both of these cases both visibility and

1169
00:49:22,160 --> 00:49:25,520
isolation help make uh developers lives

1170
00:49:25,520 --> 00:49:27,280
easier it certainly has made my life

1171
00:49:27,280 --> 00:49:29,040
easier

1172
00:49:29,040 --> 00:49:31,680
we disagree or not you are amazing guys

1173
00:49:31,680 --> 00:49:34,160
thanks very much for your time for being

1174
00:49:34,160 --> 00:49:37,359
here to make this possible uh

1175
00:49:37,359 --> 00:49:38,640
and

1176
00:49:38,640 --> 00:49:41,040
i don't know nothing thank you thank you

1177
00:49:41,040 --> 00:49:42,800
very much for your time you for being

1178
00:49:42,800 --> 00:49:44,800
here thank you thank you

1179
00:49:44,800 --> 00:49:48,079
thank you bye-bye

1180
00:49:56,559 --> 00:49:59,559
mediatory

1181
00:50:05,840 --> 00:50:09,229
[Music]

1182
00:51:20,640 --> 00:51:23,640
a

1183
00:51:31,650 --> 00:51:35,010
[Music]

1184
00:52:28,079 --> 00:52:31,079
foreign

1185
00:52:33,940 --> 00:53:19,039
[Music]

1186
00:53:21,880 --> 00:53:30,079
[Music]

1187
00:53:30,079 --> 00:53:33,079
um

1188
00:53:36,080 --> 00:53:40,029
[Music]

1189
00:54:01,470 --> 00:54:08,359
[Music]

1190
00:54:08,480 --> 00:54:10,880
foreign

1191
00:54:10,880 --> 00:54:13,880
uh

1192
00:54:21,390 --> 00:54:30,729
[Music]

1193
00:54:50,630 --> 00:54:53,659
[Music]

1194
00:54:56,480 --> 00:54:58,559
you

