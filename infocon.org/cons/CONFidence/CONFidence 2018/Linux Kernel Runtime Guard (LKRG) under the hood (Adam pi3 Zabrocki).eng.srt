1
00:00:01,800 --> 00:00:09,660
hello everyone<font color="#CCCCCC"> I'm happy to see so many</font>

2
00:00:06,029 --> 00:00:13,289
<font color="#E5E5E5">people here today and I hope you will</font>

3
00:00:09,660 --> 00:00:15,570
<font color="#CCCCCC">enjoy my presentation</font><font color="#E5E5E5"> but before I</font><font color="#CCCCCC"> start</font>

4
00:00:13,289 --> 00:00:17,640
I just want to make a<font color="#E5E5E5"> very clear</font>

5
00:00:15,570 --> 00:00:20,940
<font color="#E5E5E5">statement that everything what I'm going</font>

6
00:00:17,640 --> 00:00:23,510
<font color="#CCCCCC">to tell here has</font><font color="#E5E5E5"> nothing to do with</font><font color="#CCCCCC"> my</font>

7
00:00:20,940 --> 00:00:27,270
employer<font color="#CCCCCC"> and</font><font color="#E5E5E5"> just my personal research</font>

8
00:00:23,510 --> 00:00:29,970
and even some opinion my reflects the

9
00:00:27,270 --> 00:00:32,250
same view as my employees view it's not

10
00:00:29,970 --> 00:00:34,710
<font color="#E5E5E5">the same</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> I'm here as independent</font>

11
00:00:32,250 --> 00:00:38,070
researcher trying to present my own<font color="#CCCCCC"> a</font>

12
00:00:34,710 --> 00:00:40,770
moonlight project so<font color="#E5E5E5"> okay what I'm going</font>

13
00:00:38,070 --> 00:00:43,920
<font color="#E5E5E5">to talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> and today's</font>

14
00:00:40,770 --> 00:00:46,320
topic is<font color="#E5E5E5"> okay RG under the hood and I</font>

15
00:00:43,920 --> 00:00:48,930
will try to present a<font color="#CCCCCC"> project which I</font>

16
00:00:46,320 --> 00:00:52,680
<font color="#E5E5E5">fully designed and developed in my spare</font>

17
00:00:48,930 --> 00:00:55,500
time<font color="#E5E5E5"> which is currently defended by open</font>

18
00:00:52,680 --> 00:00:57,420
wall<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> cool and I would</font><font color="#E5E5E5"> like to</font>

19
00:00:55,500 --> 00:01:00,170
give you a better understanding<font color="#E5E5E5"> what</font>

20
00:00:57,420 --> 00:01:03,540
<font color="#E5E5E5">this project is tell a bit more</font><font color="#CCCCCC"> about</font>

21
00:01:00,170 --> 00:01:06,840
<font color="#E5E5E5">some decision which I made talk about</font>

22
00:01:03,540 --> 00:01:11,459
internals<font color="#E5E5E5"> why some decision was made in</font>

23
00:01:06,840 --> 00:01:13,020
this way<font color="#E5E5E5"> not in another way</font><font color="#CCCCCC"> also in the</font>

24
00:01:11,459 --> 00:01:14,939
end of<font color="#E5E5E5"> the presentation maybe I'll have</font>

25
00:01:13,020 --> 00:01:17,908
some<font color="#E5E5E5"> time to talk a bit</font><font color="#CCCCCC"> about the future</font>

26
00:01:14,939 --> 00:01:20,270
of<font color="#E5E5E5"> this</font><font color="#CCCCCC"> project and</font><font color="#E5E5E5"> we'll have maybe</font>

27
00:01:17,909 --> 00:01:23,159
some time for<font color="#E5E5E5"> a question and discussion</font>

28
00:01:20,270 --> 00:01:25,229
<font color="#E5E5E5">but before I</font><font color="#CCCCCC"> start just</font><font color="#E5E5E5"> to send us about</font>

29
00:01:23,159 --> 00:01:27,749
myself my name is<font color="#CCCCCC"> Adam zabrosky</font>

30
00:01:25,229 --> 00:01:30,359
<font color="#E5E5E5">sometimes I</font><font color="#CCCCCC"> used nickname</font><font color="#E5E5E5"> pa3 about</font>

31
00:01:27,749 --> 00:01:32,908
<font color="#E5E5E5">among coders I currently work at</font>

32
00:01:30,359 --> 00:01:36,689
Microsoft<font color="#E5E5E5"> in offensive security research</font>

33
00:01:32,909 --> 00:01:39,029
team<font color="#CCCCCC"> under David Westin in the past</font><font color="#E5E5E5"> I</font>

34
00:01:36,689 --> 00:01:42,089
<font color="#E5E5E5">restore for European Organization for</font>

35
00:01:39,029 --> 00:01:44,490
Nuclear Research<font color="#E5E5E5"> now CERN</font><font color="#CCCCCC"> rots off</font>

36
00:01:42,090 --> 00:01:46,249
<font color="#E5E5E5">center of supercomputing</font><font color="#CCCCCC"> his pisaq</font>

37
00:01:44,490 --> 00:01:50,068
<font color="#E5E5E5">system</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> noise from the virus</font><font color="#CCCCCC"> total</font>

38
00:01:46,249 --> 00:01:52,740
<font color="#E5E5E5">project and</font><font color="#CCCCCC"> City Hall and few more until</font>

39
00:01:50,069 --> 00:01:54,869
my free time<font color="#CCCCCC"> I also do pack-hunting and</font>

40
00:01:52,740 --> 00:01:58,919
they found vulnerabilities among others

41
00:01:54,869 --> 00:02:01,499
in the<font color="#E5E5E5"> hyper-v hypervisor in</font><font color="#CCCCCC"> OpenSSH</font><font color="#E5E5E5"> and</font>

42
00:01:58,919 --> 00:02:03,929
GCC<font color="#E5E5E5"> SSP</font><font color="#CCCCCC"> proposed implementation in</font>

43
00:02:01,499 --> 00:02:06,539
<font color="#E5E5E5">Apache Expedia and few more which I have</font>

44
00:02:03,929 --> 00:02:09,119
severe numbers for<font color="#E5E5E5"> I also like to study</font>

45
00:02:06,539 --> 00:02:10,920
exploitation<font color="#CCCCCC"> tactics</font><font color="#E5E5E5"> and the way how to</font>

46
00:02:09,119 --> 00:02:12,170
bypass<font color="#E5E5E5"> some</font><font color="#CCCCCC"> modern mitigation how to</font>

47
00:02:10,919 --> 00:02:15,488
improve them

48
00:02:12,170 --> 00:02:17,720
and how to how to not improve them<font color="#E5E5E5"> and</font>

49
00:02:15,489 --> 00:02:20,690
some<font color="#E5E5E5"> of my research was</font><font color="#CCCCCC"> published in the</font>

50
00:02:17,720 --> 00:02:22,640
<font color="#CCCCCC">frag magazine and in my</font><font color="#E5E5E5"> spare time I</font>

51
00:02:20,690 --> 00:02:26,930
also used to<font color="#E5E5E5"> be a member of the array C</font>

52
00:02:22,640 --> 00:02:29,029
project<font color="#CCCCCC"> one of the</font><font color="#E5E5E5"> first framework for</font>

53
00:02:26,930 --> 00:02:33,080
reverse engineering<font color="#CCCCCC"> in the elf binaries</font>

54
00:02:29,030 --> 00:02:35,989
so<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I'll so</font><font color="#CCCCCC"> this is a good</font><font color="#E5E5E5"> time to</font>

55
00:02:33,080 --> 00:02:37,730
thanks<font color="#CCCCCC"> to Alexander</font><font color="#E5E5E5"> wood known as a</font>

56
00:02:35,989 --> 00:02:40,519
<font color="#E5E5E5">solar designer who</font><font color="#CCCCCC"> always been</font>

57
00:02:37,730 --> 00:02:43,130
supporting this project<font color="#E5E5E5"> and actively</font>

58
00:02:40,519 --> 00:02:46,180
challenging me during every step

59
00:02:43,130 --> 00:02:48,290
during the<font color="#E5E5E5"> al-qura</font><font color="#CCCCCC"> g development work</font>

60
00:02:46,180 --> 00:02:50,720
<font color="#E5E5E5">additionally a special thanks to the</font>

61
00:02:48,290 --> 00:02:53,390
following<font color="#E5E5E5"> people for constructive</font>

62
00:02:50,720 --> 00:02:55,310
criticism<font color="#E5E5E5"> and brainstorming in the past</font>

63
00:02:53,390 --> 00:02:58,069
stages of the project<font color="#CCCCCC"> development which</font>

64
00:02:55,310 --> 00:03:02,150
is rough avoid shock<font color="#E5E5E5"> no</font><font color="#CCCCCC"> sooner</font><font color="#E5E5E5"> go Brad</font>

65
00:02:58,069 --> 00:03:04,040
spender spender<font color="#CCCCCC"> and</font><font color="#E5E5E5"> Paxton so ok</font><font color="#CCCCCC"> after</font>

66
00:03:02,150 --> 00:03:07,370
such a long<font color="#E5E5E5"> advertise finally can move</font>

67
00:03:04,040 --> 00:03:09,319
to table of content so what I'm<font color="#E5E5E5"> going to</font>

68
00:03:07,370 --> 00:03:12,380
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about today</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> I will try</font><font color="#E5E5E5"> to</font>

69
00:03:09,319 --> 00:03:14,089
<font color="#E5E5E5">answer the question what</font><font color="#CCCCCC"> LK RG is and</font>

70
00:03:12,380 --> 00:03:17,180
then I will try to present<font color="#CCCCCC"> a threat</font>

71
00:03:14,090 --> 00:03:19,130
model for Linux kernel<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> L</font><font color="#E5E5E5"> KRG</font>

72
00:03:17,180 --> 00:03:21,380
point of view is<font color="#E5E5E5"> because it's important</font>

73
00:03:19,130 --> 00:03:23,000
<font color="#CCCCCC">for the project then I will move more</font>

74
00:03:21,380 --> 00:03:24,829
<font color="#E5E5E5">tight to the more</font><font color="#CCCCCC"> technical stuff which</font>

75
00:03:23,000 --> 00:03:26,870
might be<font color="#E5E5E5"> boring</font><font color="#CCCCCC"> for some</font><font color="#E5E5E5"> of you but I</font>

76
00:03:24,829 --> 00:03:28,790
<font color="#E5E5E5">will try to discuss internals about</font>

77
00:03:26,870 --> 00:03:31,070
exploit detection feature some

78
00:03:28,790 --> 00:03:32,720
limitation of this<font color="#E5E5E5"> feature then I might</font>

79
00:03:31,070 --> 00:03:33,140
<font color="#CCCCCC">be show you some demo if you have some</font>

80
00:03:32,720 --> 00:03:35,390
time

81
00:03:33,140 --> 00:03:37,399
next<font color="#E5E5E5"> I will move to</font><font color="#CCCCCC"> the another feature</font>

82
00:03:35,390 --> 00:03:40,309
which is called<font color="#CCCCCC"> runtime code integrity</font>

83
00:03:37,400 --> 00:03:42,739
which is also part<font color="#CCCCCC"> of</font><font color="#E5E5E5"> courage</font><font color="#CCCCCC"> II then I</font>

84
00:03:40,310 --> 00:03:44,750
speak a<font color="#E5E5E5"> bit about communication channel</font>

85
00:03:42,739 --> 00:03:46,940
then I move<font color="#CCCCCC"> about a bit about</font>

86
00:03:44,750 --> 00:03:50,810
<font color="#CCCCCC">performance</font><font color="#E5E5E5"> impact of this project</font><font color="#CCCCCC"> for</font>

87
00:03:46,940 --> 00:03:53,510
the entire<font color="#E5E5E5"> system and also discuss why</font><font color="#CCCCCC"> l</font>

88
00:03:50,810 --> 00:03:56,030
qiraji is not<font color="#E5E5E5"> implemented apparently</font>

89
00:03:53,510 --> 00:03:58,670
currently not in the ring<font color="#E5E5E5"> minus one in</font>

90
00:03:56,030 --> 00:03:59,450
hypervisor<font color="#CCCCCC"> but it doesn't mean it won't</font>

91
00:03:58,670 --> 00:04:02,089
be in the<font color="#CCCCCC"> future</font>

92
00:03:59,450 --> 00:04:04,010
and then I<font color="#CCCCCC"> would speak about the future</font>

93
00:04:02,090 --> 00:04:05,390
<font color="#CCCCCC">of this project</font><font color="#E5E5E5"> and in the end maybe we</font>

94
00:04:04,010 --> 00:04:09,048
have some time<font color="#CCCCCC"> for questions and</font>

95
00:04:05,390 --> 00:04:10,578
discussions<font color="#E5E5E5"> so</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> what is a corrosion so</font>

96
00:04:09,049 --> 00:04:11,930
apparently the name is somehow

97
00:04:10,579 --> 00:04:14,239
<font color="#E5E5E5">self-explanatory</font>

98
00:04:11,930 --> 00:04:17,329
because it's a Linux kernel<font color="#CCCCCC"> random guard</font>

99
00:04:14,239 --> 00:04:19,160
<font color="#E5E5E5">so it just guard Linux kernel on during</font>

100
00:04:17,329 --> 00:04:21,858
the<font color="#CCCCCC"> ranting of the system</font><font color="#E5E5E5"> and this</font>

101
00:04:19,160 --> 00:04:23,040
<font color="#E5E5E5">project is open source project</font><font color="#CCCCCC"> so is</font>

102
00:04:21,858 --> 00:04:25,770
published under

103
00:04:23,040 --> 00:04:28,110
POV<font color="#E5E5E5"> to license so it's free everybody</font>

104
00:04:25,770 --> 00:04:31,320
can<font color="#E5E5E5"> use it so please do and send some</font>

105
00:04:28,110 --> 00:04:35,250
feedback and when I'm going to<font color="#E5E5E5"> speak</font>

106
00:04:31,320 --> 00:04:38,969
about<font color="#E5E5E5"> LK RG I always refer to the main</font>

107
00:04:35,250 --> 00:04:40,890
<font color="#E5E5E5">branch of this project and this main</font>

108
00:04:38,970 --> 00:04:42,930
branch consists of two main feature

109
00:04:40,890 --> 00:04:45,630
which is exactly<font color="#E5E5E5"> run time</font><font color="#CCCCCC"> zone integrity</font>

110
00:04:42,930 --> 00:04:49,080
<font color="#CCCCCC">in short CI and</font><font color="#E5E5E5"> exploit detection in</font>

111
00:04:45,630 --> 00:04:51,930
short<font color="#E5E5E5"> IDI and</font><font color="#CCCCCC"> runtime code</font><font color="#E5E5E5"> integrity and</font>

112
00:04:49,080 --> 00:04:53,580
detect<font color="#E5E5E5"> for now just the tax in future</font>

113
00:04:51,930 --> 00:04:56,700
also<font color="#E5E5E5"> protects from the unsupported</font>

114
00:04:53,580 --> 00:04:59,330
<font color="#E5E5E5">modification of the Linux</font><font color="#CCCCCC"> kernel and not</font>

115
00:04:56,700 --> 00:05:01,920
<font color="#E5E5E5">only Linux kernel also other critical</font>

116
00:04:59,330 --> 00:05:03,990
critical resources in<font color="#CCCCCC"> the in the</font><font color="#E5E5E5"> system</font>

117
00:05:01,920 --> 00:05:07,170
and tax for<font color="#E5E5E5"> the detection feature and</font>

118
00:05:03,990 --> 00:05:09,240
will currently<font color="#CCCCCC"> prevents Linux kernel</font>

119
00:05:07,170 --> 00:05:12,270
exploitation process at least<font color="#E5E5E5"> try to do</font>

120
00:05:09,240 --> 00:05:14,490
it there is also<font color="#E5E5E5"> experimental branch</font>

121
00:05:12,270 --> 00:05:16,979
which is<font color="#CCCCCC"> somehow independent of the main</font>

122
00:05:14,490 --> 00:05:18,780
branch which consists of from exactly

123
00:05:16,980 --> 00:05:20,400
the same<font color="#CCCCCC"> feature as a main branch but</font>

124
00:05:18,780 --> 00:05:23,940
additionally they also<font color="#E5E5E5"> have protected</font>

125
00:05:20,400 --> 00:05:26,969
features which has ability to<font color="#CCCCCC"> hide and</font>

126
00:05:23,940 --> 00:05:29,280
limit or limit access<font color="#CCCCCC"> to the critical</font>

127
00:05:26,970 --> 00:05:32,100
resources like<font color="#E5E5E5"> process files or logs</font>

128
00:05:29,280 --> 00:05:35,940
<font color="#E5E5E5">even to the root account unauthorized</font>

129
00:05:32,100 --> 00:05:39,570
root account<font color="#E5E5E5"> so if some attacker exploit</font>

130
00:05:35,940 --> 00:05:41,580
some bugs in<font color="#CCCCCC"> the system in</font><font color="#E5E5E5"> the way that</font>

131
00:05:39,570 --> 00:05:44,070
he have a root<font color="#E5E5E5"> so this kind of root</font>

132
00:05:41,580 --> 00:05:45,780
shell<font color="#E5E5E5"> in with the configuration</font><font color="#CCCCCC"> of the</font>

133
00:05:44,070 --> 00:05:47,520
protected feature<font color="#CCCCCC"> won't have</font><font color="#E5E5E5"> access to</font>

134
00:05:45,780 --> 00:05:48,750
every process<font color="#CCCCCC"> in the system</font><font color="#E5E5E5"> because some</font>

135
00:05:47,520 --> 00:05:51,599
of<font color="#E5E5E5"> the process will be protected even</font>

136
00:05:48,750 --> 00:05:54,960
<font color="#E5E5E5">from the root account same with the</font>

137
00:05:51,600 --> 00:05:56,460
files and some with the logs<font color="#E5E5E5"> so what</font>

138
00:05:54,960 --> 00:05:58,020
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> treatment</font><font color="#E5E5E5"> original mentioned</font>

139
00:05:56,460 --> 00:05:59,729
before when I<font color="#E5E5E5"> was thinking about</font>

140
00:05:58,020 --> 00:06:01,950
<font color="#CCCCCC">archeology</font><font color="#E5E5E5"> at first I will need</font><font color="#CCCCCC"> to think</font>

141
00:05:59,730 --> 00:06:04,560
<font color="#CCCCCC">about</font><font color="#E5E5E5"> what type</font><font color="#CCCCCC"> of attacks against</font><font color="#E5E5E5"> Linux</font>

142
00:06:01,950 --> 00:06:07,080
kernel exists and infirmed<font color="#CCCCCC"> I came</font><font color="#E5E5E5"> up</font>

143
00:06:04,560 --> 00:06:08,820
<font color="#CCCCCC">with the three buckets first bucket is</font>

144
00:06:07,080 --> 00:06:09,359
<font color="#E5E5E5">the attacking Linux kernel from the boot</font>

145
00:06:08,820 --> 00:06:11,370
chain

146
00:06:09,360 --> 00:06:14,010
so before<font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> kernel image starts to</font>

147
00:06:11,370 --> 00:06:16,080
execute any code it can be attacked from

148
00:06:14,010 --> 00:06:18,180
<font color="#E5E5E5">the previous stage of the</font><font color="#CCCCCC"> putting</font><font color="#E5E5E5"> of the</font>

149
00:06:16,080 --> 00:06:20,880
system and<font color="#E5E5E5"> compromise the kernel</font>

150
00:06:18,180 --> 00:06:22,800
security<font color="#CCCCCC"> my promises second type of</font><font color="#E5E5E5"> the</font>

151
00:06:20,880 --> 00:06:24,900
attacks buckets of the attack is somehow

152
00:06:22,800 --> 00:06:25,980
standard and everybody knows<font color="#CCCCCC"> is just a</font>

153
00:06:24,900 --> 00:06:28,109
<font color="#E5E5E5">software vulnerabilities</font>

154
00:06:25,980 --> 00:06:30,060
since Linux can adjust is just a normal

155
00:06:28,110 --> 00:06:31,350
software so have<font color="#CCCCCC"> vulnerabilities so we</font>

156
00:06:30,060 --> 00:06:33,270
can have<font color="#CCCCCC"> exploit against this</font><font color="#E5E5E5"> and</font>

157
00:06:31,350 --> 00:06:35,370
<font color="#E5E5E5">compromise security promises of this</font>

158
00:06:33,270 --> 00:06:36,310
software and the results of third type

159
00:06:35,370 --> 00:06:38,410
of the

160
00:06:36,310 --> 00:06:41,050
and<font color="#CCCCCC"> packet of a packet doesn't really</font>

161
00:06:38,410 --> 00:06:43,870
belongs to the first<font color="#E5E5E5"> and second because</font>

162
00:06:41,050 --> 00:06:45,400
<font color="#CCCCCC">you can imagine that somehow system was</font>

163
00:06:43,870 --> 00:06:46,990
compromised<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> need to be</font>

164
00:06:45,400 --> 00:06:48,520
compromised<font color="#CCCCCC"> from the boots chain attacks</font>

165
00:06:46,990 --> 00:06:50,950
doesn't need to be compromised from<font color="#CCCCCC"> the</font>

166
00:06:48,520 --> 00:06:52,630
carnival<font color="#CCCCCC"> nur ability attacks</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> still</font>

167
00:06:50,950 --> 00:06:55,570
system might be<font color="#E5E5E5"> compromised</font><font color="#CCCCCC"> because you</font>

168
00:06:52,630 --> 00:06:58,090
can attach<font color="#CCCCCC"> some vulnerable or malicious</font>

169
00:06:55,570 --> 00:07:00,400
device which can have DMA access to the

170
00:06:58,090 --> 00:07:03,849
memory<font color="#CCCCCC"> and then at some random</font><font color="#E5E5E5"> point of</font>

171
00:07:00,400 --> 00:07:06,130
time and this privilege<font color="#E5E5E5"> like like direct</font>

172
00:07:03,850 --> 00:07:08,350
access<font color="#CCCCCC"> to the memory might change</font><font color="#E5E5E5"> the</font>

173
00:07:06,130 --> 00:07:10,180
kernel code pages<font color="#E5E5E5"> so even the</font>

174
00:07:08,350 --> 00:07:12,940
vulnerability was not there was<font color="#E5E5E5"> no</font>

175
00:07:10,180 --> 00:07:14,950
vermin exploited there wasn't<font color="#CCCCCC"> food chain</font>

176
00:07:12,940 --> 00:07:18,610
attacks still the security promise of

177
00:07:14,950 --> 00:07:20,560
the kernel will be broken<font color="#CCCCCC"> and for</font>

178
00:07:18,610 --> 00:07:24,490
<font color="#E5E5E5">example some kernel vectors will be</font>

179
00:07:20,560 --> 00:07:26,770
injected<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> memory so from the LK</font><font color="#CCCCCC"> RG</font>

180
00:07:24,490 --> 00:07:29,050
point of view<font color="#E5E5E5"> first type of the attacks</font>

181
00:07:26,770 --> 00:07:31,000
are currently out<font color="#CCCCCC"> of scope</font><font color="#E5E5E5"> it doesn't</font>

182
00:07:29,050 --> 00:07:32,890
mean it won't be in<font color="#E5E5E5"> the future</font><font color="#CCCCCC"> in scope</font>

183
00:07:31,000 --> 00:07:35,169
<font color="#E5E5E5">but just for current version is out of</font>

184
00:07:32,890 --> 00:07:36,729
scope attacking kernel vehicle

185
00:07:35,169 --> 00:07:39,580
vulnerabilities is addressed<font color="#E5E5E5"> by the</font>

186
00:07:36,729 --> 00:07:40,960
exploit detection feature<font color="#E5E5E5"> and persistent</font>

187
00:07:39,580 --> 00:07:42,849
of the attack is addressed by<font color="#CCCCCC"> the</font>

188
00:07:40,960 --> 00:07:45,070
<font color="#CCCCCC">runtime</font><font color="#E5E5E5"> code integrity feature and</font>

189
00:07:42,850 --> 00:07:47,740
awesome<font color="#CCCCCC"> as I mentioned this experimental</font>

190
00:07:45,070 --> 00:07:49,750
<font color="#E5E5E5">branch and from the experimental branch</font>

191
00:07:47,740 --> 00:07:52,060
<font color="#CCCCCC">these and other promises of the project</font>

192
00:07:49,750 --> 00:07:54,310
to be able<font color="#E5E5E5"> to protect from the root</font>

193
00:07:52,060 --> 00:07:55,990
account<font color="#E5E5E5"> practices and files in the</font>

194
00:07:54,310 --> 00:07:58,030
system and locks in the system and

195
00:07:55,990 --> 00:08:00,070
that's why there is additional threat

196
00:07:58,030 --> 00:08:01,989
model points here<font color="#E5E5E5"> so from the</font>

197
00:08:00,070 --> 00:08:05,740
<font color="#E5E5E5">experimental point of view</font><font color="#CCCCCC"> in a branch</font>

198
00:08:01,990 --> 00:08:08,229
you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> attack any user mode process</font>

199
00:08:05,740 --> 00:08:10,200
which is in the<font color="#CCCCCC"> running</font><font color="#E5E5E5"> state and from</font>

200
00:08:08,229 --> 00:08:12,760
<font color="#E5E5E5">the protected feature point</font><font color="#CCCCCC"> Aveda was</font>

201
00:08:10,200 --> 00:08:14,770
implemented protected process as a new

202
00:08:12,760 --> 00:08:16,750
feature<font color="#E5E5E5"> to</font><font color="#CCCCCC"> protect from</font><font color="#E5E5E5"> the access from</font>

203
00:08:14,770 --> 00:08:18,969
<font color="#E5E5E5">the root account</font><font color="#CCCCCC"> to this process</font>

204
00:08:16,750 --> 00:08:21,220
but before<font color="#CCCCCC"> process starting to execute</font>

205
00:08:18,970 --> 00:08:25,360
there is a file in the system which also

206
00:08:21,220 --> 00:08:27,789
can be<font color="#CCCCCC"> corrupted and this file</font><font color="#E5E5E5"> also by</font>

207
00:08:25,360 --> 00:08:30,340
attacker can be<font color="#CCCCCC"> corrupted and protected</font>

208
00:08:27,789 --> 00:08:31,690
files was implemented<font color="#E5E5E5"> to disallow even</font>

209
00:08:30,340 --> 00:08:35,559
root accounts to have access<font color="#E5E5E5"> to this</font>

210
00:08:31,690 --> 00:08:37,960
file<font color="#E5E5E5"> additionally even if the file can</font>

211
00:08:35,559 --> 00:08:38,380
<font color="#CCCCCC">be accessed in the normal way for the</font>

212
00:08:37,960 --> 00:08:40,659
API

213
00:08:38,380 --> 00:08:42,939
<font color="#E5E5E5">even the interpreters communication can</font>

214
00:08:40,659 --> 00:08:44,439
be done the normal way<font color="#E5E5E5"> root account</font>

215
00:08:42,940 --> 00:08:46,630
because<font color="#CCCCCC"> the wrote account still can</font>

216
00:08:44,440 --> 00:08:48,910
attack the process and files via raw

217
00:08:46,630 --> 00:08:50,290
memory<font color="#E5E5E5"> access or we are all disk access</font>

218
00:08:48,910 --> 00:08:52,899
and that's why

219
00:08:50,290 --> 00:08:55,300
we extend<font color="#E5E5E5"> the functionality of the</font><font color="#CCCCCC"> cups</font>

220
00:08:52,899 --> 00:08:57,639
<font color="#CCCCCC">this</font><font color="#E5E5E5"> or a while because caps is</font><font color="#CCCCCC"> revoir</font>

221
00:08:55,300 --> 00:08:59,709
<font color="#E5E5E5">you'll never controls they liked row</font>

222
00:08:57,639 --> 00:09:01,269
disk access just<font color="#E5E5E5"> remember access</font><font color="#CCCCCC"> al</font>

223
00:08:59,709 --> 00:09:03,069
<font color="#CCCCCC">qiraji change the functionality of this</font>

224
00:09:01,269 --> 00:09:05,500
capability<font color="#E5E5E5"> and remove this capability</font>

225
00:09:03,070 --> 00:09:07,480
<font color="#E5E5E5">from all of the processes excluding the</font>

226
00:09:05,500 --> 00:09:09,819
one which<font color="#CCCCCC"> legit administrator</font><font color="#E5E5E5"> wants to</font>

227
00:09:07,480 --> 00:09:12,420
give it and also<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> imagine that</font>

228
00:09:09,819 --> 00:09:15,130
executable<font color="#CCCCCC"> file</font><font color="#E5E5E5"> also depends on the</font>

229
00:09:12,420 --> 00:09:17,050
<font color="#CCCCCC">under</font><font color="#E5E5E5"> some shared libraries so instead</font>

230
00:09:15,130 --> 00:09:18,790
<font color="#E5E5E5">of attacking the process or attacking</font>

231
00:09:17,050 --> 00:09:20,439
<font color="#E5E5E5">the file you can still attack the shared</font>

232
00:09:18,790 --> 00:09:22,089
library and inject your code in the

233
00:09:20,440 --> 00:09:24,370
protected process<font color="#E5E5E5"> that's why it's</font>

234
00:09:22,089 --> 00:09:26,649
recommend recommended this<font color="#E5E5E5"> executable</font>

235
00:09:24,370 --> 00:09:29,259
file to be compiled<font color="#E5E5E5"> as a static binary</font>

236
00:09:26,649 --> 00:09:31,630
<font color="#E5E5E5">and then enabled a protected file and</font>

237
00:09:29,259 --> 00:09:33,790
<font color="#CCCCCC">word</font><font color="#E5E5E5"> to mention that protected file is</font>

238
00:09:31,630 --> 00:09:35,589
not designed just for executables<font color="#CCCCCC"> so you</font>

239
00:09:33,790 --> 00:09:37,839
can imagine<font color="#E5E5E5"> that you can knock down some</font>

240
00:09:35,589 --> 00:09:40,000
specific configuration like imagine

241
00:09:37,839 --> 00:09:41,110
<font color="#CCCCCC">OpenSSH configuration you don't want</font>

242
00:09:40,000 --> 00:09:43,690
ever change<font color="#CCCCCC"> anymore</font>

243
00:09:41,110 --> 00:09:45,970
<font color="#CCCCCC">you can enable protected file to the</font>

244
00:09:43,690 --> 00:09:47,769
<font color="#CCCCCC">OpenSSH configuration file and nobody</font>

245
00:09:45,970 --> 00:09:50,500
ever<font color="#E5E5E5"> will be able to change it even the</font>

246
00:09:47,769 --> 00:09:52,690
<font color="#CCCCCC">amount authorized</font><font color="#E5E5E5"> root account and from</font>

247
00:09:50,500 --> 00:09:54,220
<font color="#E5E5E5">now I</font><font color="#CCCCCC"> won't</font><font color="#E5E5E5"> going to refer any more to</font>

248
00:09:52,690 --> 00:09:56,230
the experimental branch<font color="#E5E5E5"> I will just</font>

249
00:09:54,220 --> 00:09:57,699
<font color="#E5E5E5">always refer</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the main branch this</font><font color="#CCCCCC"> was</font>

250
00:09:56,230 --> 00:10:01,660
<font color="#E5E5E5">just short note this kind of feature</font>

251
00:09:57,699 --> 00:10:04,269
also exists so<font color="#E5E5E5"> okay let's discuss</font><font color="#CCCCCC"> a bit</font>

252
00:10:01,660 --> 00:10:07,389
tomorrow about expedite expedite action

253
00:10:04,269 --> 00:10:09,819
feature<font color="#CCCCCC"> so the main aim of it is to</font>

254
00:10:07,389 --> 00:10:12,130
detect kernel exploitation process by

255
00:10:09,819 --> 00:10:14,500
itself<font color="#E5E5E5"> by detecting specific data</font>

256
00:10:12,130 --> 00:10:17,139
corruption in the kernel<font color="#E5E5E5"> so it's not</font>

257
00:10:14,500 --> 00:10:20,260
targeting any specific exploits<font color="#CCCCCC"> it just</font>

258
00:10:17,139 --> 00:10:21,940
trying to hunt of<font color="#E5E5E5"> the exploitation</font>

259
00:10:20,260 --> 00:10:25,360
process<font color="#E5E5E5"> in progress</font>

260
00:10:21,940 --> 00:10:27,819
so obviously the question<font color="#CCCCCC"> is how it has</font>

261
00:10:25,360 --> 00:10:30,250
been<font color="#CCCCCC"> done so current version of</font><font color="#E5E5E5"> this</font>

262
00:10:27,819 --> 00:10:34,180
feature maintains<font color="#CCCCCC"> own task list</font><font color="#E5E5E5"> in the</font>

263
00:10:30,250 --> 00:10:36,069
system and please make sure<font color="#E5E5E5"> that is</font>

264
00:10:34,180 --> 00:10:38,800
<font color="#E5E5E5">written task because</font><font color="#CCCCCC"> task in the Linux</font>

265
00:10:36,069 --> 00:10:40,719
kernel<font color="#E5E5E5"> also refers to each individual</font>

266
00:10:38,800 --> 00:10:43,389
thread as well<font color="#CCCCCC"> as each individual</font>

267
00:10:40,720 --> 00:10:44,980
process<font color="#E5E5E5"> so task is a structure for a</font>

268
00:10:43,389 --> 00:10:48,670
<font color="#E5E5E5">presence every thread in the system</font>

269
00:10:44,980 --> 00:10:52,240
including<font color="#E5E5E5"> kernel traits</font><font color="#CCCCCC"> to and because</font>

270
00:10:48,670 --> 00:10:53,829
<font color="#CCCCCC">LG maintains</font><font color="#E5E5E5"> own task list and</font><font color="#CCCCCC"> dump</font>

271
00:10:52,240 --> 00:10:55,480
critical attributes including like a

272
00:10:53,829 --> 00:10:56,079
pointer value<font color="#E5E5E5"> of the tax structure</font>

273
00:10:55,480 --> 00:10:58,839
itself

274
00:10:56,079 --> 00:11:01,000
<font color="#CCCCCC">pit value the name of the</font><font color="#E5E5E5"> process</font>

275
00:10:58,839 --> 00:11:02,709
<font color="#E5E5E5">pointer value for the credential</font>

276
00:11:01,000 --> 00:11:04,130
structure<font color="#E5E5E5"> pointer value for the real</font>

277
00:11:02,709 --> 00:11:07,250
credential structure

278
00:11:04,130 --> 00:11:09,889
user ID group ID effective user ID

279
00:11:07,250 --> 00:11:12,310
effective group ID so on<font color="#E5E5E5"> also it's</font>

280
00:11:09,889 --> 00:11:14,600
trying to maintain<font color="#E5E5E5"> SEC comp</font>

281
00:11:12,310 --> 00:11:16,518
configuration for each individual task

282
00:11:14,600 --> 00:11:18,620
<font color="#E5E5E5">which means that each individual threat</font>

283
00:11:16,519 --> 00:11:20,899
in the process might have different

284
00:11:18,620 --> 00:11:24,139
second<font color="#CCCCCC"> configuration and because of that</font>

285
00:11:20,899 --> 00:11:27,199
<font color="#CCCCCC">each threat has been</font><font color="#E5E5E5"> independently track</font>

286
00:11:24,139 --> 00:11:30,199
from the<font color="#E5E5E5"> tif second flag second filter</font><font color="#CCCCCC"> t</font>

287
00:11:27,199 --> 00:11:32,209
flag<font color="#E5E5E5"> t sink and mode what type of mount</font>

288
00:11:30,199 --> 00:11:34,639
of<font color="#E5E5E5"> the second is applied to this task</font>

289
00:11:32,209 --> 00:11:36,670
and what filters if they exist for<font color="#E5E5E5"> this</font>

290
00:11:34,639 --> 00:11:39,170
<font color="#E5E5E5">task are applied by doing that</font>

291
00:11:36,670 --> 00:11:41,000
apparently we<font color="#CCCCCC"> have ability to detect if</font>

292
00:11:39,170 --> 00:11:44,240
there is a talking<font color="#CCCCCC"> point</font><font color="#E5E5E5"> or swamp attack</font>

293
00:11:41,000 --> 00:11:46,339
<font color="#E5E5E5">and any random point of time and for</font>

294
00:11:44,240 --> 00:11:49,399
example<font color="#E5E5E5"> if the shell</font><font color="#CCCCCC"> code the rob</font>

295
00:11:46,339 --> 00:11:51,290
<font color="#CCCCCC">illegally call</font><font color="#E5E5E5"> commit</font><font color="#CCCCCC"> cred function in</font>

296
00:11:49,399 --> 00:11:53,360
the random part of time it will be able

297
00:11:51,290 --> 00:11:55,490
<font color="#E5E5E5">to detect that it happens and catch the</font>

298
00:11:53,360 --> 00:11:57,680
exploitation process and kill it the

299
00:11:55,490 --> 00:11:59,540
same<font color="#CCCCCC"> way monitoring IDs</font><font color="#E5E5E5"> we are able to</font>

300
00:11:57,680 --> 00:12:01,638
<font color="#E5E5E5">catch if someone trying to other writes</font>

301
00:11:59,540 --> 00:12:03,920
<font color="#CCCCCC">IDs in the memory</font><font color="#E5E5E5"> and kill this process</font>

302
00:12:01,639 --> 00:12:05,959
<font color="#CCCCCC">who trying</font><font color="#E5E5E5"> to do it by monitoring</font><font color="#CCCCCC"> SEC</font>

303
00:12:03,920 --> 00:12:07,579
comp<font color="#E5E5E5"> in a configuration we</font><font color="#CCCCCC"> are able to</font>

304
00:12:05,959 --> 00:12:09,319
detect if someone<font color="#CCCCCC"> try to</font><font color="#E5E5E5"> escape the</font>

305
00:12:07,579 --> 00:12:11,839
sandbox<font color="#E5E5E5"> based on the second and</font>

306
00:12:09,319 --> 00:12:14,300
apparently<font color="#E5E5E5"> I've made a test and each of</font>

307
00:12:11,839 --> 00:12:18,399
these features somehow works<font color="#CCCCCC"> and I run</font>

308
00:12:14,300 --> 00:12:20,630
the exploit again from chrome sandbox

309
00:12:18,399 --> 00:12:22,399
<font color="#E5E5E5">using vulnerability in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> T to</font>

310
00:12:20,630 --> 00:12:24,500
<font color="#E5E5E5">escape the chrome sandbox and it's</font>

311
00:12:22,399 --> 00:12:26,149
currently detecting the freeways it

312
00:12:24,500 --> 00:12:28,279
attacks the same<font color="#E5E5E5"> table while sandbox was</font>

313
00:12:26,149 --> 00:12:30,529
compromised the text the idea was was

314
00:12:28,279 --> 00:12:33,709
changed<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> detects</font><font color="#E5E5E5"> the sand was</font>

315
00:12:30,529 --> 00:12:35,920
<font color="#E5E5E5">escape happens additionally</font><font color="#CCCCCC"> al-khawaja</font>

316
00:12:33,709 --> 00:12:38,359
guards in the following<font color="#CCCCCC"> SELinux</font>

317
00:12:35,920 --> 00:12:41,449
variables which is a<font color="#E5E5E5"> synonym enabled and</font>

318
00:12:38,360 --> 00:12:44,029
<font color="#CCCCCC">asylums enforcing and moreover the</font>

319
00:12:41,449 --> 00:12:46,550
following attributes is also tracked but

320
00:12:44,029 --> 00:12:48,560
currently<font color="#E5E5E5"> not</font><font color="#CCCCCC"> used but</font><font color="#E5E5E5"> will be soon in</font>

321
00:12:46,550 --> 00:12:49,310
the<font color="#E5E5E5"> next version under energy which are</font>

322
00:12:48,560 --> 00:12:52,099
<font color="#CCCCCC">secure</font><font color="#E5E5E5"> bits</font>

323
00:12:49,310 --> 00:12:54,469
capabilities bits<font color="#CCCCCC"> pointer value to the</font>

324
00:12:52,100 --> 00:12:57,230
real user ID subscription and pointer

325
00:12:54,470 --> 00:12:58,040
<font color="#E5E5E5">value to the namespaces and because of</font>

326
00:12:57,230 --> 00:13:00,740
<font color="#E5E5E5">doing this</font>

327
00:12:58,040 --> 00:13:03,620
currently<font color="#CCCCCC"> Al Qura G can still detect the</font>

328
00:13:00,740 --> 00:13:06,920
<font color="#CCCCCC">selinux escapes</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> linux disable attacks</font>

329
00:13:03,620 --> 00:13:09,589
<font color="#E5E5E5">and also it can in the future detects</font>

330
00:13:06,920 --> 00:13:12,439
any kind<font color="#E5E5E5"> of sandbox escape based on the</font>

331
00:13:09,589 --> 00:13:14,569
capabilities sandbox<font color="#E5E5E5"> and by monitoring</font>

332
00:13:12,439 --> 00:13:16,660
the<font color="#CCCCCC"> namespace</font><font color="#E5E5E5"> and user</font><font color="#CCCCCC"> ID</font><font color="#E5E5E5"> subscription</font>

333
00:13:14,569 --> 00:13:19,449
we are going to be able<font color="#E5E5E5"> to detect</font>

334
00:13:16,660 --> 00:13:21,910
in<font color="#CCCCCC"> there escapes and also</font><font color="#E5E5E5"> namespace</font>

335
00:13:19,449 --> 00:13:25,689
sandbox escapes<font color="#E5E5E5"> which will be added</font><font color="#CCCCCC"> in</font>

336
00:13:21,910 --> 00:13:28,000
<font color="#E5E5E5">future in the LPR G so also</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> the</font>

337
00:13:25,690 --> 00:13:31,209
question is how the<font color="#CCCCCC"> al-qaida G</font><font color="#E5E5E5"> builds</font>

338
00:13:28,000 --> 00:13:33,579
and maintains<font color="#E5E5E5"> this</font><font color="#CCCCCC"> task list and update</font>

339
00:13:31,209 --> 00:13:35,709
logic<font color="#E5E5E5"> a tribute in</font><font color="#CCCCCC"> the system and</font>

340
00:13:33,579 --> 00:13:38,729
changes because it happens all the time

341
00:13:35,709 --> 00:13:41,138
<font color="#E5E5E5">so you can imagine</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> normal</font>

342
00:13:38,730 --> 00:13:43,240
world<font color="#E5E5E5"> in the normal run</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the system</font>

343
00:13:41,139 --> 00:13:45,279
you have<font color="#E5E5E5"> multiple processes and random</font>

344
00:13:43,240 --> 00:13:47,949
process and<font color="#E5E5E5"> random point of time might</font>

345
00:13:45,279 --> 00:13:50,709
call some Cisco<font color="#E5E5E5"> and if the Cisco</font>

346
00:13:47,949 --> 00:13:52,899
happened<font color="#E5E5E5"> al-qura G intercept</font><font color="#CCCCCC"> Colonel and</font>

347
00:13:50,709 --> 00:13:55,388
he overtakes in the control at this

348
00:13:52,899 --> 00:13:58,810
stage before the<font color="#E5E5E5"> even</font><font color="#CCCCCC"> Cisco starting to</font>

349
00:13:55,389 --> 00:14:01,449
run by doing that<font color="#CCCCCC"> al-qura</font><font color="#E5E5E5"> G have two</font>

350
00:13:58,810 --> 00:14:04,268
ways of<font color="#E5E5E5"> functionalities here you can</font>

351
00:14:01,449 --> 00:14:06,579
verify all<font color="#E5E5E5"> of the task integrity in the</font>

352
00:14:04,269 --> 00:14:08,980
<font color="#CCCCCC">system at this stage</font><font color="#E5E5E5"> not just for the</font>

353
00:14:06,579 --> 00:14:10,899
one who caused the Cisco's but which

354
00:14:08,980 --> 00:14:13,449
will verify integrity of all of the

355
00:14:10,899 --> 00:14:15,370
tasks in the system now and also he can

356
00:14:13,449 --> 00:14:18,430
inspect arguments which have<font color="#E5E5E5"> been passed</font>

357
00:14:15,370 --> 00:14:20,769
to<font color="#CCCCCC"> this</font><font color="#E5E5E5"> Cisco if</font><font color="#CCCCCC"> occur G finish the work</font>

358
00:14:18,430 --> 00:14:22,508
or finish<font color="#E5E5E5"> the validation of the task it</font>

359
00:14:20,769 --> 00:14:25,029
doesn't mean it doesn't need to do this

360
00:14:22,509 --> 00:14:26,740
verify verification it depends on the

361
00:14:25,029 --> 00:14:28,779
<font color="#E5E5E5">Cisco depends on the function</font><font color="#CCCCCC"> you shall</font>

362
00:14:26,740 --> 00:14:31,630
be intercepted<font color="#E5E5E5"> but it might do it now</font>

363
00:14:28,779 --> 00:14:34,180
and<font color="#E5E5E5"> then if it's finished</font><font color="#CCCCCC"> the work it</font>

364
00:14:31,630 --> 00:14:37,120
allows<font color="#E5E5E5"> kernel to normal continue the</font>

365
00:14:34,180 --> 00:14:39,160
work so<font color="#E5E5E5"> kernel call another function if</font>

366
00:14:37,120 --> 00:14:40,630
you<font color="#E5E5E5"> call another function etc at some</font>

367
00:14:39,160 --> 00:14:42,790
point when<font color="#CCCCCC"> the function light of the</font>

368
00:14:40,630 --> 00:14:46,120
kernel finished it need to<font color="#E5E5E5"> return to the</font>

369
00:14:42,790 --> 00:14:48,880
user mode yes and<font color="#E5E5E5"> before return to the</font>

370
00:14:46,120 --> 00:14:53,019
process happens<font color="#E5E5E5"> there is another hook by</font>

371
00:14:48,880 --> 00:14:54,970
LG injected at this time<font color="#CCCCCC"> al-qura G will</font>

372
00:14:53,019 --> 00:14:56,709
inspect the<font color="#E5E5E5"> return code of this function</font>

373
00:14:54,970 --> 00:14:59,319
who was just caught in<font color="#E5E5E5"> the kernel to</font>

374
00:14:56,709 --> 00:15:01,239
verify if the function succeed or<font color="#CCCCCC"> not</font>

375
00:14:59,319 --> 00:15:03,759
with the function failed or not<font color="#E5E5E5"> if the</font>

376
00:15:01,240 --> 00:15:05,980
function what the what the<font color="#CCCCCC"> failure was</font>

377
00:15:03,759 --> 00:15:08,589
and why it's worth failed<font color="#CCCCCC"> and for</font>

378
00:15:05,980 --> 00:15:10,329
example<font color="#CCCCCC"> if you call</font><font color="#E5E5E5"> said user ID and it</font>

379
00:15:08,589 --> 00:15:12,670
successfully changed the ID then al

380
00:15:10,329 --> 00:15:14,589
Qaeda<font color="#E5E5E5"> will update on database and also</font>

381
00:15:12,670 --> 00:15:16,329
at this point<font color="#CCCCCC"> another verification of</font>

382
00:15:14,589 --> 00:15:18,339
all<font color="#E5E5E5"> of the processes not just the one</font>

383
00:15:16,329 --> 00:15:20,439
who's calling<font color="#E5E5E5"> the Cisco might be</font>

384
00:15:18,339 --> 00:15:24,100
performed and verify of the<font color="#E5E5E5"> integrity</font><font color="#CCCCCC"> of</font>

385
00:15:20,439 --> 00:15:26,769
all<font color="#E5E5E5"> of the threads in the systems and so</font>

386
00:15:24,100 --> 00:15:28,809
the question<font color="#E5E5E5"> is what is intercepted so</font>

387
00:15:26,769 --> 00:15:30,160
this Cisco's are intercepted<font color="#CCCCCC"> so</font><font color="#E5E5E5"> Sergio</font>

388
00:15:28,809 --> 00:15:31,930
ad set group

389
00:15:30,160 --> 00:15:36,160
<font color="#CCCCCC">at effective user</font><font color="#E5E5E5"> the etcetra etcetra</font>

390
00:15:31,930 --> 00:15:38,109
<font color="#E5E5E5">etcetra subgroups is intercepted fork is</font>

391
00:15:36,160 --> 00:15:39,990
intercepted<font color="#E5E5E5"> to be able to</font><font color="#CCCCCC"> find out when</font>

392
00:15:38,110 --> 00:15:42,910
the new threat or new process is created

393
00:15:39,990 --> 00:15:44,829
exact<font color="#CCCCCC"> V and all of the group of exactly</font>

394
00:15:42,910 --> 00:15:46,480
is intercepted to be able<font color="#CCCCCC"> to find out if</font>

395
00:15:44,829 --> 00:15:49,449
process<font color="#E5E5E5"> trying to</font><font color="#CCCCCC"> overwrite or all</font>

396
00:15:46,480 --> 00:15:52,329
<font color="#E5E5E5">viateur</font><font color="#CCCCCC"> others layout and new database</font>

397
00:15:49,449 --> 00:15:53,889
need to be<font color="#CCCCCC"> updated when the process dies</font>

398
00:15:52,329 --> 00:15:56,769
or thread dies we need to also know

399
00:15:53,889 --> 00:15:59,500
<font color="#CCCCCC">about that and also</font><font color="#E5E5E5"> from the integrity</font>

400
00:15:56,769 --> 00:16:01,269
<font color="#CCCCCC">grant</font><font color="#E5E5E5"> and called integrity perspective</font>

401
00:15:59,500 --> 00:16:02,740
we<font color="#E5E5E5"> also need to intercept</font><font color="#CCCCCC"> in each model</font>

402
00:16:01,269 --> 00:16:05,769
and delete model which I'm going to<font color="#E5E5E5"> talk</font>

403
00:16:02,740 --> 00:16:08,350
a bit<font color="#CCCCCC"> more later about</font><font color="#E5E5E5"> that also there</font>

404
00:16:05,769 --> 00:16:10,120
is a function may open<font color="#E5E5E5"> which is not open</font>

405
00:16:08,350 --> 00:16:12,519
<font color="#E5E5E5">it's slightly different function in the</font>

406
00:16:10,120 --> 00:16:15,699
kernel which is executed every time<font color="#E5E5E5"> when</font>

407
00:16:12,519 --> 00:16:17,740
any task<font color="#E5E5E5"> wants to open any resources in</font>

408
00:16:15,699 --> 00:16:19,899
the system<font color="#E5E5E5"> it's not only for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> file</font>

409
00:16:17,740 --> 00:16:22,149
<font color="#E5E5E5">it's for any resource in the system and</font>

410
00:16:19,899 --> 00:16:24,610
whenever it is called<font color="#E5E5E5"> then the alcalde</font>

411
00:16:22,149 --> 00:16:26,709
verifies if this specific task<font color="#E5E5E5"> has</font>

412
00:16:24,610 --> 00:16:29,259
access to this specific resource<font color="#E5E5E5"> or at</font>

413
00:16:26,709 --> 00:16:30,790
least it should have access<font color="#CCCCCC"> if it has</font>

414
00:16:29,259 --> 00:16:35,740
<font color="#E5E5E5">access but it shouldn't have access it</font>

415
00:16:30,790 --> 00:16:38,439
will kill this process or task and also

416
00:16:35,740 --> 00:16:40,630
<font color="#E5E5E5">the important information is whenever</font>

417
00:16:38,439 --> 00:16:43,180
<font color="#E5E5E5">this or all of the cisco is being called</font>

418
00:16:40,630 --> 00:16:46,540
at any point of time<font color="#E5E5E5"> verification of all</font>

419
00:16:43,180 --> 00:16:47,849
of the<font color="#CCCCCC"> task I will be</font><font color="#E5E5E5"> performed</font><font color="#CCCCCC"> not just</font>

420
00:16:46,540 --> 00:16:50,050
for the one who caused this<font color="#CCCCCC"> Cisco</font>

421
00:16:47,850 --> 00:16:52,449
excluding them<font color="#E5E5E5"> I open for the perf</font>

422
00:16:50,050 --> 00:16:54,670
reason<font color="#CCCCCC"> and my open will just verify the</font>

423
00:16:52,449 --> 00:16:56,709
<font color="#E5E5E5">task could try to open the resource and</font>

424
00:16:54,670 --> 00:16:59,889
this list<font color="#E5E5E5"> is not closed it probably</font>

425
00:16:56,709 --> 00:17:01,660
<font color="#E5E5E5">evolved but for now this is</font><font color="#CCCCCC"> how it</font><font color="#E5E5E5"> is so</font>

426
00:16:59,889 --> 00:17:03,579
if you think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that there is some</font>

427
00:17:01,660 --> 00:17:05,289
limitation in this design which we

428
00:17:03,579 --> 00:17:07,750
always<font color="#E5E5E5"> were open about this limitation</font>

429
00:17:05,289 --> 00:17:11,319
so at<font color="#E5E5E5"> first is by possible by design</font>

430
00:17:07,750 --> 00:17:12,789
<font color="#E5E5E5">however it can be</font><font color="#CCCCCC"> defined and the reason</font>

431
00:17:11,319 --> 00:17:14,530
why because<font color="#E5E5E5"> it's very difficult</font><font color="#CCCCCC"> to</font>

432
00:17:12,789 --> 00:17:16,539
protect from<font color="#E5E5E5"> the same trust level</font><font color="#CCCCCC"> if you</font>

433
00:17:14,530 --> 00:17:18,039
want<font color="#CCCCCC"> to protect</font><font color="#E5E5E5"> ring free which is user</font>

434
00:17:16,539 --> 00:17:20,260
mode<font color="#E5E5E5"> it's supposed to be done from</font>

435
00:17:18,039 --> 00:17:22,480
during<font color="#E5E5E5"> zero from the kernel mode</font><font color="#CCCCCC"> if you</font>

436
00:17:20,260 --> 00:17:24,099
<font color="#E5E5E5">protect kernel mode</font><font color="#CCCCCC"> the best way to do</font>

437
00:17:22,480 --> 00:17:27,010
it is<font color="#E5E5E5"> from the hypervisor which is doing</font>

438
00:17:24,099 --> 00:17:28,840
<font color="#CCCCCC">minus 1 but</font><font color="#E5E5E5"> we protecting dream</font><font color="#CCCCCC"> 0 from</font>

439
00:17:27,010 --> 00:17:30,879
<font color="#E5E5E5">the ring</font><font color="#CCCCCC"> 0 so which is like cut a mouse</font>

440
00:17:28,840 --> 00:17:33,490
game<font color="#E5E5E5"> that's why there is</font><font color="#CCCCCC"> a two type of</font>

441
00:17:30,880 --> 00:17:37,179
bypasses by design first of all<font color="#CCCCCC"> we</font><font color="#E5E5E5"> come</font>

442
00:17:33,490 --> 00:17:39,460
fly<font color="#CCCCCC"> under alka RGS radar and second of</font>

443
00:17:37,179 --> 00:17:41,710
all you can attack<font color="#CCCCCC"> ok RG</font><font color="#E5E5E5"> itself and</font>

444
00:17:39,460 --> 00:17:42,890
continue the normal work<font color="#E5E5E5"> so for the</font>

445
00:17:41,710 --> 00:17:45,560
first<font color="#E5E5E5"> bucket</font>

446
00:17:42,890 --> 00:17:47,510
attack<font color="#CCCCCC"> there is following</font><font color="#E5E5E5"> one which it's</font>

447
00:17:45,560 --> 00:17:49,879
obviously<font color="#E5E5E5"> to spot</font><font color="#CCCCCC"> so first of</font><font color="#E5E5E5"> all you</font>

448
00:17:47,510 --> 00:17:52,310
can<font color="#E5E5E5"> override critical metadata which is</font>

449
00:17:49,880 --> 00:17:54,670
not guarded by<font color="#CCCCCC"> L qiraji because you</font>

450
00:17:52,310 --> 00:17:57,860
don't<font color="#E5E5E5"> need to always have access to</font><font color="#CCCCCC"> the</font>

451
00:17:54,670 --> 00:17:59,780
<font color="#E5E5E5">full</font><font color="#CCCCCC"> PowerShell root shell if you do</font>

452
00:17:57,860 --> 00:18:01,580
attack me<font color="#E5E5E5"> because maybe you just want to</font>

453
00:17:59,780 --> 00:18:03,290
<font color="#E5E5E5">steal some memory data and just maybe</font>

454
00:18:01,580 --> 00:18:05,510
<font color="#E5E5E5">won't click the data you don't have</font>

455
00:18:03,290 --> 00:18:07,970
<font color="#E5E5E5">write anything if you maybe just want</font><font color="#CCCCCC"> to</font>

456
00:18:05,510 --> 00:18:09,740
overwrite one<font color="#CCCCCC"> special flag</font><font color="#E5E5E5"> randomly in</font>

457
00:18:07,970 --> 00:18:12,080
some random structure which is not

458
00:18:09,740 --> 00:18:14,930
critical<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> tasks perspective as</font>

459
00:18:12,080 --> 00:18:17,870
an attribute<font color="#CCCCCC"> it's not guarded so this is</font>

460
00:18:14,930 --> 00:18:20,000
<font color="#E5E5E5">first type</font><font color="#CCCCCC"> of attack second of all is a</font>

461
00:18:17,870 --> 00:18:21,649
relatively early stage<font color="#E5E5E5"> of the of the</font>

462
00:18:20,000 --> 00:18:24,800
project so maybe<font color="#E5E5E5"> we forgot some</font>

463
00:18:21,650 --> 00:18:26,780
<font color="#CCCCCC">interception</font><font color="#E5E5E5"> but if this happens most</font>

464
00:18:24,800 --> 00:18:29,600
likely receive false positive not bypass

465
00:18:26,780 --> 00:18:31,070
<font color="#E5E5E5">because if we cannot update the database</font>

466
00:18:29,600 --> 00:18:33,379
will think it's a corruption so we kill

467
00:18:31,070 --> 00:18:34,970
the<font color="#CCCCCC"> process</font><font color="#E5E5E5"> we haven't seen it but still</font>

468
00:18:33,380 --> 00:18:36,590
I<font color="#E5E5E5"> can't warranty because it's too early</font>

469
00:18:34,970 --> 00:18:38,720
stage<font color="#CCCCCC"> of the project but I</font><font color="#E5E5E5"> still believe</font>

470
00:18:36,590 --> 00:18:41,629
is pretty solid<font color="#E5E5E5"> but I just put it</font>

471
00:18:38,720 --> 00:18:44,390
because<font color="#E5E5E5"> I should and another attack this</font>

472
00:18:41,630 --> 00:18:47,210
<font color="#E5E5E5">arise condition because as I</font><font color="#CCCCCC"> said not</font>

473
00:18:44,390 --> 00:18:49,850
every<font color="#E5E5E5"> Cisco is intercepted just some of</font>

474
00:18:47,210 --> 00:18:52,670
them but so you can imagine<font color="#E5E5E5"> that you can</font>

475
00:18:49,850 --> 00:18:55,429
<font color="#E5E5E5">overwrite credential of the random tasks</font>

476
00:18:52,670 --> 00:18:58,340
and then revert this<font color="#CCCCCC"> credential</font><font color="#E5E5E5"> as soon</font>

477
00:18:55,430 --> 00:19:00,380
as possible to the<font color="#CCCCCC"> original stage so if</font>

478
00:18:58,340 --> 00:19:02,540
you do it you<font color="#CCCCCC"> have rest</font><font color="#E5E5E5"> condition but be</font>

479
00:19:00,380 --> 00:19:05,270
<font color="#CCCCCC">aware as I mentioned before</font><font color="#E5E5E5"> if the</font>

480
00:19:02,540 --> 00:19:08,420
verification kicks in it doesn't<font color="#CCCCCC"> verify</font>

481
00:19:05,270 --> 00:19:10,820
just<font color="#E5E5E5"> the task who microscope</font><font color="#CCCCCC"> it verifies</font>

482
00:19:08,420 --> 00:19:12,200
all<font color="#E5E5E5"> of the tasks so you can do you are</font>

483
00:19:10,820 --> 00:19:15,230
<font color="#E5E5E5">in the middle of</font><font color="#CCCCCC"> the process</font><font color="#E5E5E5"> of</font>

484
00:19:12,200 --> 00:19:17,090
exploiting yes you update the privilege

485
00:19:15,230 --> 00:19:19,070
<font color="#CCCCCC">to some random process and then for</font>

486
00:19:17,090 --> 00:19:22,280
example random<font color="#CCCCCC"> thread in the kernel dice</font>

487
00:19:19,070 --> 00:19:24,379
<font color="#E5E5E5">or random tread and the</font><font color="#CCCCCC"> OpenSSH have</font>

488
00:19:22,280 --> 00:19:27,530
been created it will enforce validation

489
00:19:24,380 --> 00:19:29,870
of all of the<font color="#CCCCCC"> treads</font><font color="#E5E5E5"> so your race here</font>

490
00:19:27,530 --> 00:19:31,910
<font color="#E5E5E5">window is very small you</font><font color="#CCCCCC"> know even if</font>

491
00:19:29,870 --> 00:19:33,800
<font color="#CCCCCC">you do not use the Cisco which are not</font>

492
00:19:31,910 --> 00:19:37,340
intercepted other components of<font color="#E5E5E5"> the</font>

493
00:19:33,800 --> 00:19:40,190
<font color="#CCCCCC">system</font><font color="#E5E5E5"> still use them</font><font color="#CCCCCC"> and another attack</font>

494
00:19:37,340 --> 00:19:42,199
you can move entire kernel<font color="#E5E5E5"> exploitation</font>

495
00:19:40,190 --> 00:19:45,200
attack to the<font color="#E5E5E5"> user mode which means in</font>

496
00:19:42,200 --> 00:19:47,270
the system there is already privileged

497
00:19:45,200 --> 00:19:49,580
processes yes<font color="#E5E5E5"> you have like init process</font>

498
00:19:47,270 --> 00:19:51,590
<font color="#E5E5E5">which is always privileged so instead of</font>

499
00:19:49,580 --> 00:19:54,260
<font color="#E5E5E5">writing your own process you can just</font>

500
00:19:51,590 --> 00:19:55,560
inject<font color="#E5E5E5"> some code in a ready</font><font color="#CCCCCC"> privileged</font>

501
00:19:54,260 --> 00:19:58,620
process to execute

502
00:19:55,560 --> 00:20:00,810
more data<font color="#E5E5E5"> than it should as a second</font>

503
00:19:58,620 --> 00:20:02,159
bucket of the attack which<font color="#E5E5E5"> attacking</font><font color="#CCCCCC"> a</font>

504
00:20:00,810 --> 00:20:04,080
<font color="#CCCCCC">kg by itself</font>

505
00:20:02,160 --> 00:20:07,050
and<font color="#E5E5E5"> there's also</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> type</font><font color="#CCCCCC"> of attacks</font>

506
00:20:04,080 --> 00:20:09,419
<font color="#E5E5E5">there's another race condition problem</font>

507
00:20:07,050 --> 00:20:11,760
because you can try to corrupt a largest

508
00:20:09,420 --> 00:20:14,250
database<font color="#E5E5E5"> itself and also attack</font><font color="#CCCCCC"> the</font>

509
00:20:11,760 --> 00:20:16,110
original attributes<font color="#CCCCCC"> but this is as I</font>

510
00:20:14,250 --> 00:20:19,200
said<font color="#CCCCCC"> again a race condition</font><font color="#E5E5E5"> because I</font>

511
00:20:16,110 --> 00:20:21,449
need to<font color="#E5E5E5"> be as fast to do this</font><font color="#CCCCCC"> two</font>

512
00:20:19,200 --> 00:20:23,190
<font color="#E5E5E5">modification until before any</font>

513
00:20:21,450 --> 00:20:26,100
verification<font color="#E5E5E5"> Rotom will be executed</font>

514
00:20:23,190 --> 00:20:30,450
which again may happen in<font color="#E5E5E5"> the random</font>

515
00:20:26,100 --> 00:20:30,990
time in the<font color="#E5E5E5"> system but in theory is</font>

516
00:20:30,450 --> 00:20:33,300
possible

517
00:20:30,990 --> 00:20:36,060
also you can attack<font color="#CCCCCC"> al-qura G's internal</font>

518
00:20:33,300 --> 00:20:37,830
synchronization on what mechanism but

519
00:20:36,060 --> 00:20:39,929
<font color="#E5E5E5">you need to be very very precise of the</font>

520
00:20:37,830 --> 00:20:41,939
<font color="#CCCCCC">English the reason why</font><font color="#E5E5E5"> because L care G</font>

521
00:20:39,930 --> 00:20:44,070
database is a<font color="#CCCCCC"> red-black tree which is</font>

522
00:20:41,940 --> 00:20:46,580
<font color="#E5E5E5">self balanced which is always</font><font color="#CCCCCC"> replaced</font>

523
00:20:44,070 --> 00:20:48,990
<font color="#E5E5E5">in the memory so that's why hunting this</font>

524
00:20:46,580 --> 00:20:50,399
part of the memory<font color="#CCCCCC"> which</font><font color="#E5E5E5"> you supposed to</font>

525
00:20:48,990 --> 00:20:52,440
overwrite as a double overwrite is

526
00:20:50,400 --> 00:20:54,600
difficult and<font color="#CCCCCC"> also if you attack</font>

527
00:20:52,440 --> 00:20:57,000
internal locking stage it's not<font color="#E5E5E5"> just</font>

528
00:20:54,600 --> 00:20:59,100
exclusive for the<font color="#E5E5E5"> ELCA Reggie because</font>

529
00:20:57,000 --> 00:21:01,350
these locks usually are<font color="#E5E5E5"> also shared</font><font color="#CCCCCC"> by</font>

530
00:20:59,100 --> 00:21:03,149
other<font color="#E5E5E5"> subcomponent of the kernel</font><font color="#CCCCCC"> so if</font>

531
00:21:01,350 --> 00:21:04,949
you don't do<font color="#E5E5E5"> it in the correct way</font><font color="#CCCCCC"> or</font>

532
00:21:03,150 --> 00:21:07,320
not precise and fast enough you can just

533
00:21:04,950 --> 00:21:09,090
<font color="#CCCCCC">does the kernel we can blue spin or you</font>

534
00:21:07,320 --> 00:21:12,240
can<font color="#E5E5E5"> just kill the kernel you need to be</font>

535
00:21:09,090 --> 00:21:14,159
very<font color="#E5E5E5"> very precise and also the last one</font>

536
00:21:12,240 --> 00:21:16,350
<font color="#CCCCCC">I don't think it's practical but it's I</font>

537
00:21:14,160 --> 00:21:17,880
should put it<font color="#E5E5E5"> that's why I put it we can</font>

538
00:21:16,350 --> 00:21:20,310
try to find<font color="#E5E5E5"> all of the verification</font>

539
00:21:17,880 --> 00:21:22,710
<font color="#CCCCCC">routings currently</font><font color="#E5E5E5"> executing in the</font>

540
00:21:20,310 --> 00:21:24,570
<font color="#E5E5E5">system and suspend them and then trying</font>

541
00:21:22,710 --> 00:21:26,460
<font color="#E5E5E5">to block creation of new one it's very</font>

542
00:21:24,570 --> 00:21:28,290
<font color="#CCCCCC">difficult to be done</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> don't think it's</font>

543
00:21:26,460 --> 00:21:32,010
a feasible attack<font color="#E5E5E5"> other ones I think</font>

544
00:21:28,290 --> 00:21:34,590
<font color="#CCCCCC">it's easier but it also exists</font><font color="#E5E5E5"> and also</font>

545
00:21:32,010 --> 00:21:36,090
another problem<font color="#E5E5E5"> of the al-qura G is that</font>

546
00:21:34,590 --> 00:21:39,300
there is some type of the<font color="#E5E5E5"> kalman</font><font color="#CCCCCC"> Vernor</font>

547
00:21:36,090 --> 00:21:40,709
abilities<font color="#E5E5E5"> which do not</font><font color="#CCCCCC"> add</font><font color="#E5E5E5"> a kernel but</font>

548
00:21:39,300 --> 00:21:42,060
attack user mode even<font color="#E5E5E5"> the</font>

549
00:21:40,710 --> 00:21:44,460
vulnerabilities in the kernel for

550
00:21:42,060 --> 00:21:45,929
example<font color="#CCCCCC"> dirty cow</font><font color="#E5E5E5"> it's very difficult to</font>

551
00:21:44,460 --> 00:21:50,400
protect from<font color="#E5E5E5"> the attacks like a dirty</font>

552
00:21:45,930 --> 00:21:51,750
cow<font color="#E5E5E5"> you can still detect impact of the</font>

553
00:21:50,400 --> 00:21:54,270
dirty cow<font color="#CCCCCC"> for example if someone</font>

554
00:21:51,750 --> 00:21:57,240
<font color="#CCCCCC">modified VDS</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> than the random called</font>

555
00:21:54,270 --> 00:21:59,010
integrity<font color="#E5E5E5"> feature will detect the DVDs</font>

556
00:21:57,240 --> 00:22:00,750
always changed<font color="#E5E5E5"> but you don't</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to</font>

557
00:21:59,010 --> 00:22:02,790
<font color="#E5E5E5">attack with the</font><font color="#CCCCCC"> s</font><font color="#E5E5E5"> all using the article</font>

558
00:22:00,750 --> 00:22:06,420
<font color="#E5E5E5">can attack this kind of data in the user</font>

559
00:22:02,790 --> 00:22:08,480
mode which is not detectable and can

560
00:22:06,420 --> 00:22:12,490
show<font color="#E5E5E5"> them on how</font><font color="#CCCCCC"> export</font>

561
00:22:08,480 --> 00:22:12,490
<font color="#CCCCCC">direction</font><font color="#E5E5E5"> works</font><font color="#CCCCCC"> I hope I can</font>

562
00:22:24,000 --> 00:22:28,340
<font color="#CCCCCC">I don't know if it's feasible here</font>

563
00:22:43,430 --> 00:22:46,430
<font color="#E5E5E5">okay</font>

564
00:22:55,370 --> 00:23:09,350
is it better so at first<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will try</font><font color="#CCCCCC"> to</font>

565
00:23:04,610 --> 00:23:11,479
run exploit for the UFO which is UDP

566
00:23:09,350 --> 00:23:15,830
fragmentation<font color="#CCCCCC"> offload which was written</font>

567
00:23:11,480 --> 00:23:17,480
much after I ever<font color="#E5E5E5"> published qiraji it</font>

568
00:23:15,830 --> 00:23:21,080
was published<font color="#E5E5E5"> recently so it's a new</font>

569
00:23:17,480 --> 00:23:23,650
x-ray was not<font color="#CCCCCC"> aware</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> exist</font><font color="#E5E5E5"> and a kg</font>

570
00:23:21,080 --> 00:23:26,678
<font color="#CCCCCC">we</font><font color="#E5E5E5"> will try</font><font color="#CCCCCC"> to stop</font><font color="#E5E5E5"> it</font>

571
00:23:23,650 --> 00:23:26,679
[Music]

572
00:23:27,700 --> 00:23:37,039
that's the CV<font color="#CCCCCC"> Nam so at first</font><font color="#E5E5E5"> that's my</font>

573
00:23:32,749 --> 00:23:46,279
ID<font color="#E5E5E5"> I'm pf3</font><font color="#CCCCCC"> a 1000 user</font><font color="#E5E5E5"> I don't have</font>

574
00:23:37,039 --> 00:23:49,419
<font color="#E5E5E5">access</font><font color="#CCCCCC"> to this file for example now</font><font color="#E5E5E5"> than</font>

575
00:23:46,279 --> 00:23:54,649
Iraq<font color="#E5E5E5"> this guy</font>

576
00:23:49,419 --> 00:24:02,629
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> wrote and I supposed to have no</font>

577
00:23:54,649 --> 00:24:09,758
access to<font color="#E5E5E5"> this file works so now let's</font>

578
00:24:02,629 --> 00:24:09,759
try to<font color="#E5E5E5"> around</font><font color="#CCCCCC"> Alka</font><font color="#E5E5E5"> I G in the background</font>

579
00:24:13,809 --> 00:24:17,139
another cell

580
00:24:53,400 --> 00:25:02,710
this is the<font color="#E5E5E5"> locks</font><font color="#CCCCCC"> so now I will</font><font color="#E5E5E5"> install</font>

581
00:24:59,490 --> 00:25:05,250
<font color="#CCCCCC">lg+ installation on my</font><font color="#E5E5E5"> model</font>

582
00:25:02,710 --> 00:25:05,250
installation

583
00:25:06,150 --> 00:25:10,980
that's the<font color="#E5E5E5"> lock level</font><font color="#CCCCCC"> I don't want to</font>

584
00:25:08,559 --> 00:25:14,290
spam with too many locks so I put<font color="#CCCCCC"> zero</font>

585
00:25:10,980 --> 00:25:17,500
you can<font color="#E5E5E5"> see in the</font><font color="#CCCCCC"> background that</font>

586
00:25:14,290 --> 00:25:19,059
IG is successfully utilized<font color="#E5E5E5"> so it works</font>

587
00:25:17,500 --> 00:25:23,650
<font color="#E5E5E5">it's currently checking the system all</font>

588
00:25:19,059 --> 00:25:28,450
the<font color="#CCCCCC"> time and now I will</font><font color="#E5E5E5"> return to the</font>

589
00:25:23,650 --> 00:25:30,460
<font color="#CCCCCC">original screen I will make it</font><font color="#E5E5E5"> smaller</font>

590
00:25:28,450 --> 00:25:35,170
<font color="#E5E5E5">that you can see in the logs how it</font>

591
00:25:30,460 --> 00:25:38,530
works<font color="#CCCCCC"> I will</font><font color="#E5E5E5"> try to rerun exactly the</font>

592
00:25:35,170 --> 00:25:43,870
<font color="#E5E5E5">same exploit and it's guilt</font>

593
00:25:38,530 --> 00:25:48,540
I will try every run<font color="#E5E5E5"> it's again it's</font>

594
00:25:43,870 --> 00:25:56,229
<font color="#E5E5E5">killed and they don't have access</font><font color="#CCCCCC"> to the</font>

595
00:25:48,540 --> 00:25:58,389
<font color="#E5E5E5">file as I should and</font><font color="#CCCCCC"> if you see in the</font>

596
00:25:56,230 --> 00:26:00,400
<font color="#CCCCCC">locks</font><font color="#E5E5E5"> x-ray detection feature detect</font>

597
00:25:58,390 --> 00:26:03,370
that this specific<font color="#E5E5E5"> process with this</font>

598
00:26:00,400 --> 00:26:05,440
specific<font color="#CCCCCC"> pit with this specific</font><font color="#E5E5E5"> name</font><font color="#CCCCCC"> for</font>

599
00:26:03,370 --> 00:26:07,750
example<font color="#CCCCCC"> change the credential structure</font>

600
00:26:05,440 --> 00:26:10,570
<font color="#E5E5E5">that's the address of the original one</font>

601
00:26:07,750 --> 00:26:12,940
the new one<font color="#CCCCCC"> and the new IDs you can see</font>

602
00:26:10,570 --> 00:26:19,720
the<font color="#CCCCCC"> one thousand trying to be a zero and</font>

603
00:26:12,940 --> 00:26:26,190
<font color="#E5E5E5">then I will try again to</font><font color="#CCCCCC"> disable AG</font>

604
00:26:19,720 --> 00:26:30,400
<font color="#E5E5E5">because you can</font><font color="#CCCCCC"> read so it's disabled I</font>

605
00:26:26,190 --> 00:26:34,930
rerun the same exploit again and it

606
00:26:30,400 --> 00:26:43,209
works<font color="#E5E5E5"> again so it works</font>

607
00:26:34,930 --> 00:26:43,209
[Applause]

608
00:26:43,669 --> 00:26:52,350
so yep<font color="#E5E5E5"> let's go forward let's speak a</font>

609
00:26:49,890 --> 00:26:55,080
bit about<font color="#CCCCCC"> random</font><font color="#E5E5E5"> code integrity feature</font>

610
00:26:52,350 --> 00:26:58,260
which is another sub component of the<font color="#CCCCCC"> of</font>

611
00:26:55,080 --> 00:26:59,639
the project so in theory<font color="#E5E5E5"> it's very easy</font>

612
00:26:58,260 --> 00:27:01,110
<font color="#CCCCCC">project because it's just trying</font><font color="#E5E5E5"> to</font>

613
00:26:59,640 --> 00:27:04,230
<font color="#CCCCCC">calculate the hash from the critical</font>

614
00:27:01,110 --> 00:27:06,689
<font color="#CCCCCC">mental</font><font color="#E5E5E5"> data or data of the system and</font>

615
00:27:04,230 --> 00:27:08,760
also gathers the critical CPU metadata

616
00:27:06,690 --> 00:27:11,730
and the harsh argument which is<font color="#CCCCCC"> used is</font>

617
00:27:08,760 --> 00:27:14,220
a<font color="#E5E5E5"> sip gosh</font><font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> not as easy</font><font color="#CCCCCC"> as it</font>

618
00:27:11,730 --> 00:27:17,730
sounds and apparently there is<font color="#E5E5E5"> multiple</font>

619
00:27:14,220 --> 00:27:19,200
<font color="#E5E5E5">other sub component</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the system which</font>

620
00:27:17,730 --> 00:27:21,690
<font color="#CCCCCC">is not related to the kernel which are</font>

621
00:27:19,200 --> 00:27:25,200
critical which<font color="#CCCCCC"> mean to be monitored and</font>

622
00:27:21,690 --> 00:27:28,169
for<font color="#E5E5E5"> example any metadata of any car on</font>

623
00:27:25,200 --> 00:27:29,789
<font color="#CCCCCC">the video recipe or</font><font color="#E5E5E5"> any</font><font color="#CCCCCC"> virtual</font><font color="#E5E5E5"> core or</font>

624
00:27:28,169 --> 00:27:32,549
<font color="#E5E5E5">core need to be independently</font><font color="#CCCCCC"> tracked</font>

625
00:27:29,789 --> 00:27:34,590
down and currently we support x86 64

626
00:27:32,549 --> 00:27:36,360
architecture<font color="#E5E5E5"> but it's a very modular</font>

627
00:27:34,590 --> 00:27:38,668
project so it's easy<font color="#CCCCCC"> to add for example</font>

628
00:27:36,360 --> 00:27:42,029
support<font color="#E5E5E5"> for arm which maybe</font><font color="#CCCCCC"> will at at</font>

629
00:27:38,669 --> 00:27:44,010
some point and<font color="#CCCCCC"> al-qura G</font><font color="#E5E5E5"> sends something</font>

630
00:27:42,029 --> 00:27:45,840
<font color="#E5E5E5">which is called</font><font color="#CCCCCC"> inter process</font><font color="#E5E5E5"> in</font>

631
00:27:44,010 --> 00:27:48,330
<font color="#E5E5E5">interrupt nonsense</font>

632
00:27:45,840 --> 00:27:51,629
IP to<font color="#CCCCCC"> send to each individual car in</font>

633
00:27:48,330 --> 00:27:54,449
each individual CPU forces to run

634
00:27:51,630 --> 00:27:56,639
exclusive routing which is our G

635
00:27:54,450 --> 00:27:57,929
function<font color="#E5E5E5"> and this routing</font><font color="#CCCCCC"> trying to</font>

636
00:27:56,639 --> 00:28:00,979
<font color="#CCCCCC">guard the following</font><font color="#E5E5E5"> data for each</font>

637
00:27:57,929 --> 00:28:04,919
individual car which is<font color="#CCCCCC"> ID</font><font color="#E5E5E5"> t entry ID t</font>

638
00:28:00,980 --> 00:28:06,840
entry point<font color="#CCCCCC"> and</font><font color="#E5E5E5"> i PT size ID t itself as</font>

639
00:28:04,919 --> 00:28:08,309
a block of<font color="#E5E5E5"> the data and</font><font color="#CCCCCC"> also all of the</font>

640
00:28:06,840 --> 00:28:12,769
critical<font color="#CCCCCC"> M cells which are listed</font><font color="#E5E5E5"> here</font>

641
00:28:08,309 --> 00:28:15,090
on additionally al-qura<font color="#CCCCCC"> G tracks down</font>

642
00:28:12,769 --> 00:28:18,330
<font color="#E5E5E5">information</font><font color="#CCCCCC"> about how many butyl course</font>

643
00:28:15,090 --> 00:28:21,059
<font color="#E5E5E5">our filter CPUs and course are available</font>

644
00:28:18,330 --> 00:28:23,039
<font color="#CCCCCC">in the system how many online</font><font color="#E5E5E5"> course are</font>

645
00:28:21,059 --> 00:28:25,830
<font color="#E5E5E5">in the system</font><font color="#CCCCCC"> how many</font><font color="#E5E5E5"> offline and how</font>

646
00:28:23,039 --> 00:28:27,600
many possible course<font color="#E5E5E5"> might ever</font><font color="#CCCCCC"> be</font>

647
00:28:25,830 --> 00:28:30,059
available<font color="#E5E5E5"> in this specific system and</font>

648
00:28:27,600 --> 00:28:32,549
this was designed<font color="#E5E5E5"> especially in this way</font>

649
00:28:30,059 --> 00:28:34,860
<font color="#E5E5E5">because currently a lot of</font><font color="#CCCCCC"> products</font>

650
00:28:32,549 --> 00:28:37,080
similar similar of doing integrity of

651
00:28:34,860 --> 00:28:39,809
the system<font color="#CCCCCC"> do</font><font color="#E5E5E5"> not do it so it's very</font>

652
00:28:37,080 --> 00:28:41,879
<font color="#CCCCCC">easy just</font><font color="#E5E5E5"> to put one random car in SNP</font>

653
00:28:39,809 --> 00:28:44,370
machine to be<font color="#E5E5E5"> offline then again to be</font>

654
00:28:41,880 --> 00:28:46,409
online<font color="#E5E5E5"> and this new this system doesn't</font>

655
00:28:44,370 --> 00:28:47,789
track them down anymore<font color="#CCCCCC"> and then just</font>

656
00:28:46,409 --> 00:28:50,429
modify<font color="#E5E5E5"> MSR</font>

657
00:28:47,789 --> 00:28:52,770
<font color="#CCCCCC">a critical MSR for this specific car</font>

658
00:28:50,429 --> 00:28:53,500
<font color="#E5E5E5">that was something malicious and this is</font>

659
00:28:52,770 --> 00:28:55,330
the only<font color="#CCCCCC"> non that</font>

660
00:28:53,500 --> 00:28:57,640
it's<font color="#CCCCCC"> al-qaeda ji will catch this type of</font>

661
00:28:55,330 --> 00:28:59,740
the attack because it's half logic for

662
00:28:57,640 --> 00:29:02,890
<font color="#CCCCCC">how</font><font color="#E5E5E5"> to plug in CPU and hot plug off of</font>

663
00:28:59,740 --> 00:29:04,659
the CPU<font color="#E5E5E5"> also the same individual CPU so</font>

664
00:29:02,890 --> 00:29:07,000
you can imagine<font color="#CCCCCC"> that if someone have</font>

665
00:29:04,659 --> 00:29:10,480
access to the host<font color="#E5E5E5"> machine and suspend</font>

666
00:29:07,000 --> 00:29:12,520
the VM<font color="#E5E5E5"> and add a new car and then resume</font>

667
00:29:10,480 --> 00:29:14,470
<font color="#CCCCCC">the Machine</font><font color="#E5E5E5"> al-qura G will</font><font color="#CCCCCC"> be notified</font>

668
00:29:12,520 --> 00:29:17,440
that this situation<font color="#CCCCCC"> happened every track</font>

669
00:29:14,470 --> 00:29:21,880
down the newly hot<font color="#CCCCCC"> plug</font><font color="#E5E5E5"> in CPU</font><font color="#CCCCCC"> same with</font>

670
00:29:17,440 --> 00:29:24,159
the physical CPU<font color="#CCCCCC"> also another guard</font><font color="#E5E5E5"> at</font>

671
00:29:21,880 --> 00:29:25,840
region<font color="#E5E5E5"> and by the allergy is entire</font>

672
00:29:24,159 --> 00:29:29,080
Linux kernel<font color="#CCCCCC"> text</font><font color="#E5E5E5"> section which will</font>

673
00:29:25,840 --> 00:29:31,178
cover<font color="#E5E5E5"> almost entire kernel itself like</font>

674
00:29:29,080 --> 00:29:32,770
<font color="#E5E5E5">Cisco tables</font><font color="#CCCCCC"> all of the procedure all of</font>

675
00:29:31,179 --> 00:29:35,620
the functions<font color="#E5E5E5"> all of the interrupt</font>

676
00:29:32,770 --> 00:29:37,360
handlers<font color="#E5E5E5"> also new scanner half exception</font>

677
00:29:35,620 --> 00:29:39,820
table which not<font color="#CCCCCC"> many people know and is</font>

678
00:29:37,360 --> 00:29:42,250
<font color="#CCCCCC">also</font><font color="#E5E5E5"> being protected by called integrity</font>

679
00:29:39,820 --> 00:29:44,260
<font color="#E5E5E5">feature also there is a read-only data</font>

680
00:29:42,250 --> 00:29:46,450
section in the kernel which is also

681
00:29:44,260 --> 00:29:49,299
protected<font color="#CCCCCC"> that optionally also it might</font>

682
00:29:46,450 --> 00:29:51,309
protect iommu table by default it's

683
00:29:49,299 --> 00:29:53,020
disabled because I am a<font color="#E5E5E5"> new table might</font>

684
00:29:51,309 --> 00:29:55,178
be dynamically<font color="#E5E5E5"> changed by the drivers</font>

685
00:29:53,020 --> 00:29:56,740
alleged drivers<font color="#E5E5E5"> but you can imagine that</font>

686
00:29:55,179 --> 00:30:00,669
administrator of the<font color="#CCCCCC"> system knows that</font>

687
00:29:56,740 --> 00:30:02,380
<font color="#E5E5E5">non modification of the</font><font color="#CCCCCC"> his system</font>

688
00:30:00,669 --> 00:30:04,059
should ever<font color="#E5E5E5"> happen because he might know</font>

689
00:30:02,380 --> 00:30:07,059
which<font color="#CCCCCC"> divert he runs and what the</font>

690
00:30:04,059 --> 00:30:08,740
configuration<font color="#CCCCCC"> is there he might enable</font>

691
00:30:07,059 --> 00:30:11,200
and enforce I am a new table

692
00:30:08,740 --> 00:30:12,820
configuration to additionally each of

693
00:30:11,200 --> 00:30:15,370
the model of<font color="#CCCCCC"> the system</font><font color="#E5E5E5"> has to</font><font color="#CCCCCC"> being</font>

694
00:30:12,820 --> 00:30:17,830
guarded independently<font color="#CCCCCC"> to so the</font><font color="#E5E5E5"> question</font>

695
00:30:15,370 --> 00:30:19,750
is how this model is being tracked and

696
00:30:17,830 --> 00:30:22,990
discovered in the system so first of all

697
00:30:19,750 --> 00:30:26,200
each individual model is being found by

698
00:30:22,990 --> 00:30:28,210
<font color="#E5E5E5">tracking</font><font color="#CCCCCC"> down the internal modeling</font><font color="#E5E5E5"> list</font>

699
00:30:26,200 --> 00:30:29,650
and based on this<font color="#E5E5E5"> information from the</font>

700
00:30:28,210 --> 00:30:31,480
modeling list in the kernel

701
00:30:29,650 --> 00:30:34,330
it will<font color="#CCCCCC"> gather</font><font color="#E5E5E5"> information like</font>

702
00:30:31,480 --> 00:30:36,520
structure pointer<font color="#CCCCCC"> to itself</font><font color="#E5E5E5"> now says</font>

703
00:30:34,330 --> 00:30:38,199
this model name of the model pointer to

704
00:30:36,520 --> 00:30:40,720
the model car structure and<font color="#CCCCCC"> structure</font>

705
00:30:38,200 --> 00:30:42,520
<font color="#E5E5E5">itself to size of the text section and</font>

706
00:30:40,720 --> 00:30:45,419
it also calculates the hash for the

707
00:30:42,520 --> 00:30:48,460
entire text section<font color="#E5E5E5"> of the model itself</font>

708
00:30:45,419 --> 00:30:50,620
independently also<font color="#CCCCCC"> encouraged</font><font color="#E5E5E5"> II will</font>

709
00:30:48,460 --> 00:30:53,830
try<font color="#CCCCCC"> to discover all of</font><font color="#E5E5E5"> the models allow</font>

710
00:30:50,620 --> 00:30:55,989
<font color="#CCCCCC">that in</font><font color="#E5E5E5"> the system by gathering</font>

711
00:30:53,830 --> 00:30:58,090
<font color="#E5E5E5">information called</font><font color="#CCCCCC"> K objects in the</font>

712
00:30:55,990 --> 00:31:01,929
system<font color="#E5E5E5"> so Linux kernel have something</font>

713
00:30:58,090 --> 00:31:04,689
called K set K set is a group of<font color="#CCCCCC"> object</font>

714
00:31:01,929 --> 00:31:05,250
based on<font color="#E5E5E5"> the type and there is a type of</font>

715
00:31:04,690 --> 00:31:07,049
<font color="#E5E5E5">mod</font>

716
00:31:05,250 --> 00:31:08,760
whenever you load the model<font color="#E5E5E5"> the model is</font>

717
00:31:07,049 --> 00:31:11,549
not<font color="#E5E5E5"> on in the</font><font color="#CCCCCC"> link list but there's a</font>

718
00:31:08,760 --> 00:31:13,830
<font color="#CCCCCC">spatial</font><font color="#E5E5E5"> object</font><font color="#CCCCCC"> being created on the</font>

719
00:31:11,549 --> 00:31:17,010
<font color="#CCCCCC">cassette linked to the photos</font><font color="#E5E5E5"> it's a bit</font>

720
00:31:13,830 --> 00:31:19,049
complicated<font color="#CCCCCC"> so</font><font color="#E5E5E5"> independently</font><font color="#CCCCCC"> I thought</font>

721
00:31:17,010 --> 00:31:21,600
this following information also<font color="#E5E5E5"> been</font>

722
00:31:19,049 --> 00:31:23,610
gathered like<font color="#E5E5E5"> stroke model pointer like</font>

723
00:31:21,600 --> 00:31:25,379
at this<font color="#E5E5E5"> model pointer to the model key</font>

724
00:31:23,610 --> 00:31:27,689
object structure itself and the

725
00:31:25,380 --> 00:31:29,900
structure itself and<font color="#CCCCCC"> tyreq a object</font>

726
00:31:27,690 --> 00:31:32,370
<font color="#E5E5E5">structure except of the least head and</font>

727
00:31:29,900 --> 00:31:34,620
<font color="#CCCCCC">car reference information since they are</font>

728
00:31:32,370 --> 00:31:35,908
dynamic<font color="#CCCCCC"> also name of the model</font><font color="#E5E5E5"> pointer</font>

729
00:31:34,620 --> 00:31:37,949
to the module<font color="#E5E5E5"> core and fondle core</font>

730
00:31:35,909 --> 00:31:40,350
<font color="#CCCCCC">itself</font><font color="#E5E5E5"> to and touch the size of the text</font>

731
00:31:37,950 --> 00:31:42,539
section and hash from the entire<font color="#CCCCCC"> text</font>

732
00:31:40,350 --> 00:31:47,039
section<font color="#E5E5E5"> of this model</font><font color="#CCCCCC"> to and both of</font>

733
00:31:42,539 --> 00:31:49,260
<font color="#E5E5E5">this information must match even</font><font color="#CCCCCC"> they</font>

734
00:31:47,039 --> 00:31:51,270
<font color="#CCCCCC">are tracked down independently</font><font color="#E5E5E5"> but we</font>

735
00:31:49,260 --> 00:31:54,150
know if the model exists<font color="#E5E5E5"> is supposed to</font>

736
00:31:51,270 --> 00:31:55,950
exist in two places and if each of<font color="#E5E5E5"> the</font>

737
00:31:54,150 --> 00:31:57,750
information belongs to the two different

738
00:31:55,950 --> 00:31:59,580
<font color="#E5E5E5">in the</font><font color="#CCCCCC"> two different</font><font color="#E5E5E5"> two different</font>

739
00:31:57,750 --> 00:32:01,559
<font color="#CCCCCC">places</font><font color="#E5E5E5"> each of them are still being</font>

740
00:31:59,580 --> 00:32:03,600
<font color="#CCCCCC">carried out</font><font color="#E5E5E5"> individually and also</font>

741
00:32:01,559 --> 00:32:04,918
additionally what is<font color="#E5E5E5"> interesting the</font>

742
00:32:03,600 --> 00:32:07,559
following information<font color="#CCCCCC"> will be struck</font>

743
00:32:04,919 --> 00:32:10,350
down<font color="#E5E5E5"> including how many numbers in the</font>

744
00:32:07,559 --> 00:32:12,480
entire<font color="#CCCCCC"> modelling list</font><font color="#E5E5E5"> exist how many</font>

745
00:32:10,350 --> 00:32:14,969
<font color="#E5E5E5">numbers of</font><font color="#CCCCCC"> K object for the model</font><font color="#E5E5E5"> exist</font>

746
00:32:12,480 --> 00:32:17,130
in this specific<font color="#E5E5E5"> case</font><font color="#CCCCCC"> set how what is</font>

747
00:32:14,970 --> 00:32:18,270
the specific order<font color="#CCCCCC"> in the linked list in</font>

748
00:32:17,130 --> 00:32:20,820
the model is and what is the

749
00:32:18,270 --> 00:32:22,530
<font color="#CCCCCC">specifically set order</font><font color="#E5E5E5"> in the case at</font>

750
00:32:20,820 --> 00:32:26,158
for<font color="#E5E5E5"> specific</font><font color="#CCCCCC"> a object and I will show</font>

751
00:32:22,530 --> 00:32:28,260
<font color="#E5E5E5">you why because it's how it looks like</font>

752
00:32:26,159 --> 00:32:30,059
in the kernel you have a linked list we

753
00:32:28,260 --> 00:32:32,280
<font color="#E5E5E5">have pointer of the model one to model</font>

754
00:32:30,059 --> 00:32:33,960
to model<font color="#CCCCCC"> N and the same there</font><font color="#E5E5E5"> is</font>

755
00:32:32,280 --> 00:32:36,059
different case<font color="#E5E5E5"> sets for the different</font>

756
00:32:33,960 --> 00:32:37,530
<font color="#CCCCCC">key object in this house okay set for</font>

757
00:32:36,059 --> 00:32:40,200
the model object<font color="#CCCCCC"> which is somehow</font>

758
00:32:37,530 --> 00:32:42,690
<font color="#E5E5E5">related to the linked</font><font color="#CCCCCC"> list model so if</font>

759
00:32:40,200 --> 00:32:44,880
the attacker would like for<font color="#E5E5E5"> example to</font>

760
00:32:42,690 --> 00:32:47,309
hide his model he will just create<font color="#E5E5E5"> a</font>

761
00:32:44,880 --> 00:32:49,409
different<font color="#CCCCCC"> and</font><font color="#E5E5E5"> link in the linked list</font>

762
00:32:47,309 --> 00:32:52,408
and<font color="#E5E5E5"> disable this model and at this stage</font>

763
00:32:49,409 --> 00:32:54,390
<font color="#E5E5E5">it will be very easy for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> RG to detect</font>

764
00:32:52,409 --> 00:32:57,990
because<font color="#CCCCCC"> K</font><font color="#E5E5E5"> object exists but model</font>

765
00:32:54,390 --> 00:32:59,970
<font color="#E5E5E5">doesn't exist but a Packer can still for</font>

766
00:32:57,990 --> 00:33:02,669
example<font color="#CCCCCC"> create a new linkage</font><font color="#E5E5E5"> in the K</font>

767
00:32:59,970 --> 00:33:06,510
objects and<font color="#E5E5E5"> also name of K object but at</font>

768
00:33:02,669 --> 00:33:08,429
<font color="#E5E5E5">this</font><font color="#CCCCCC"> stage</font><font color="#E5E5E5"> the order in the model list</font>

769
00:33:06,510 --> 00:33:10,379
<font color="#E5E5E5">and more order in the case of the</font>

770
00:33:08,429 --> 00:33:12,330
<font color="#E5E5E5">cassette will change because</font><font color="#CCCCCC"> it's not</font>

771
00:33:10,380 --> 00:33:14,220
the<font color="#E5E5E5"> same it used to be by normal</font>

772
00:33:12,330 --> 00:33:16,370
development of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> database so it will</font>

773
00:33:14,220 --> 00:33:18,600
detect<font color="#CCCCCC"> L carriage eat that model</font>

774
00:33:16,370 --> 00:33:20,309
<font color="#E5E5E5">starting to be hidden even</font>

775
00:33:18,600 --> 00:33:24,000
said before because<font color="#E5E5E5"> order is not the</font>

776
00:33:20,309 --> 00:33:26,280
same and<font color="#E5E5E5"> also dynamic model loading can</font>

777
00:33:24,000 --> 00:33:28,200
<font color="#E5E5E5">be disabled by the</font><font color="#CCCCCC"> Cisco interface so</font>

778
00:33:26,280 --> 00:33:29,760
<font color="#E5E5E5">you can completely lock down the kernel</font>

779
00:33:28,200 --> 00:33:32,940
<font color="#CCCCCC">it will not</font><font color="#E5E5E5"> allow</font><font color="#CCCCCC"> anymore</font>

780
00:33:29,760 --> 00:33:34,679
a lot<font color="#E5E5E5"> of dynamic models also the</font>

781
00:33:32,940 --> 00:33:36,690
question is when the<font color="#CCCCCC"> runtime called</font>

782
00:33:34,679 --> 00:33:39,299
integrity validation routing is executed

783
00:33:36,690 --> 00:33:41,700
so as a standard<font color="#CCCCCC"> rate there</font><font color="#E5E5E5"> is a kernel</font>

784
00:33:39,299 --> 00:33:44,250
timer interruption which is generating a

785
00:33:41,700 --> 00:33:46,410
work item which then is inside to the

786
00:33:44,250 --> 00:33:48,840
something<font color="#E5E5E5"> called shared work you it's</font>

787
00:33:46,410 --> 00:33:51,419
<font color="#E5E5E5">not individual to</font><font color="#CCCCCC"> Erik arrrg the reason</font>

788
00:33:48,840 --> 00:33:53,639
why<font color="#CCCCCC"> because there is a special</font><font color="#E5E5E5"> work</font>

789
00:33:51,419 --> 00:33:56,190
<font color="#E5E5E5">queue in the system which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> used by</font>

790
00:33:53,640 --> 00:33:58,260
multiple sub component in the kernel<font color="#E5E5E5"> so</font>

791
00:33:56,190 --> 00:34:00,690
if you want<font color="#E5E5E5"> to try to find out the</font>

792
00:33:58,260 --> 00:34:02,580
<font color="#CCCCCC">validation rounding in the kernel which</font>

793
00:34:00,690 --> 00:34:04,980
is<font color="#E5E5E5"> algae validation routing you will</font>

794
00:34:02,580 --> 00:34:06,240
need to<font color="#E5E5E5"> filter out on this shared work</font>

795
00:34:04,980 --> 00:34:08,250
queue because<font color="#CCCCCC"> there will</font><font color="#E5E5E5"> be thousand run</font>

796
00:34:06,240 --> 00:34:10,350
damask not only<font color="#CCCCCC"> mined</font><font color="#E5E5E5"> so there will be</font>

797
00:34:08,250 --> 00:34:12,000
other<font color="#CCCCCC"> tags</font><font color="#E5E5E5"> so if you just kill the work</font>

798
00:34:10,350 --> 00:34:13,918
<font color="#CCCCCC">you will kill the system so we need to</font>

799
00:34:12,000 --> 00:34:16,080
filter<font color="#E5E5E5"> it out it's some kind of</font>

800
00:34:13,918 --> 00:34:18,868
workaround mitigation simple and cheap

801
00:34:16,080 --> 00:34:21,179
also you can force validation of the

802
00:34:18,869 --> 00:34:23,820
<font color="#CCCCCC">Akagi dynamically by this</font><font color="#E5E5E5"> control</font>

803
00:34:21,179 --> 00:34:25,649
interface whenever any model activity is

804
00:34:23,820 --> 00:34:27,480
detected so<font color="#E5E5E5"> modeled</font><font color="#CCCCCC"> in close</font><font color="#E5E5E5"> at Orono</font>

805
00:34:25,649 --> 00:34:30,060
that<font color="#CCCCCC"> is also and force validation of</font>

806
00:34:27,480 --> 00:34:31,770
them called integrity<font color="#E5E5E5"> whenever new</font><font color="#CCCCCC"> via a</font>

807
00:34:30,060 --> 00:34:33,659
<font color="#E5E5E5">CPU or</font><font color="#CCCCCC"> core is being added</font>

808
00:34:31,770 --> 00:34:35,250
for example<font color="#E5E5E5"> hot</font><font color="#CCCCCC"> plug</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> hot plug off</font>

809
00:34:33,659 --> 00:34:37,590
it will enforce validation of<font color="#E5E5E5"> the system</font>

810
00:34:35,250 --> 00:34:39,149
and also on the very<font color="#E5E5E5"> various random</font>

811
00:34:37,590 --> 00:34:41,580
event in the system which are

812
00:34:39,149 --> 00:34:43,379
unpredictable<font color="#E5E5E5"> to be able to remove</font>

813
00:34:41,580 --> 00:34:45,540
predictability<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the validation and</font>

814
00:34:43,379 --> 00:34:46,589
this is the list of<font color="#E5E5E5"> the random</font><font color="#CCCCCC"> evens in</font>

815
00:34:45,540 --> 00:34:48,690
the system<font color="#E5E5E5"> with the different</font>

816
00:34:46,590 --> 00:34:51,690
probabilities so for<font color="#E5E5E5"> example if the</font>

817
00:34:48,690 --> 00:34:52,800
random<font color="#E5E5E5"> car become idle idle</font><font color="#CCCCCC"> at any point</font>

818
00:34:51,690 --> 00:34:55,560
of time in the<font color="#E5E5E5"> system</font>

819
00:34:52,800 --> 00:34:56,700
this is 0.005<font color="#E5E5E5"> percent of probability of</font>

820
00:34:55,560 --> 00:34:58,950
validation of the integrity<font color="#E5E5E5"> of the</font>

821
00:34:56,699 --> 00:35:00,839
system<font color="#E5E5E5"> but some of the events always</font><font color="#CCCCCC"> in</font>

822
00:34:58,950 --> 00:35:02,790
for validation like for example USB

823
00:35:00,840 --> 00:35:04,530
changes or global I see events

824
00:35:02,790 --> 00:35:07,410
probability will always be hundred

825
00:35:04,530 --> 00:35:08,820
<font color="#CCCCCC">percent</font><font color="#E5E5E5"> and some of them are random</font><font color="#CCCCCC"> so</font>

826
00:35:07,410 --> 00:35:10,560
it's unpredicted to know when your

827
00:35:08,820 --> 00:35:14,010
<font color="#E5E5E5">validation will be additionally</font><font color="#CCCCCC"> avoid</font>

828
00:35:10,560 --> 00:35:16,259
dated and as I<font color="#CCCCCC"> said called integrity</font>

829
00:35:14,010 --> 00:35:18,960
<font color="#E5E5E5">work is not so easy and not so pleasant</font>

830
00:35:16,260 --> 00:35:20,730
it sounds because<font color="#E5E5E5"> apparently</font><font color="#CCCCCC"> the sort of</font>

831
00:35:18,960 --> 00:35:22,830
caveats one of them is something<font color="#E5E5E5"> called</font>

832
00:35:20,730 --> 00:35:24,150
jump label which<font color="#E5E5E5"> apparently enforces</font>

833
00:35:22,830 --> 00:35:27,000
<font color="#E5E5E5">Phoenix cannot be self-modifying code</font>

834
00:35:24,150 --> 00:35:29,100
<font color="#CCCCCC">and Linux kernel always modifies himself</font>

835
00:35:27,000 --> 00:35:31,410
<font color="#E5E5E5">which not many people know it's works</font>

836
00:35:29,100 --> 00:35:33,960
like constantly changes on code

837
00:35:31,410 --> 00:35:36,359
and this<font color="#E5E5E5"> apparently problematic because</font>

838
00:35:33,960 --> 00:35:38,610
if you calculate the<font color="#CCCCCC"> hush obviously in</font>

839
00:35:36,360 --> 00:35:40,560
the<font color="#CCCCCC"> hush won't match anymore so what</font>

840
00:35:38,610 --> 00:35:42,780
happens if we<font color="#CCCCCC"> detect</font><font color="#E5E5E5"> the text</font><font color="#CCCCCC"> section of</font>

841
00:35:40,560 --> 00:35:45,120
the<font color="#CCCCCC"> Canon</font><font color="#E5E5E5"> was changed we try to find out</font>

842
00:35:42,780 --> 00:35:47,430
what's the offset where the modification

843
00:35:45,120 --> 00:35:49,020
were happened and we<font color="#E5E5E5"> use this</font><font color="#CCCCCC"> offer to</font>

844
00:35:47,430 --> 00:35:51,149
<font color="#CCCCCC">calculate</font><font color="#E5E5E5"> a virtual address of this</font>

845
00:35:49,020 --> 00:35:52,530
modified code and if modification

846
00:35:51,150 --> 00:35:54,060
happened because of<font color="#E5E5E5"> the jump</font><font color="#CCCCCC"> table</font>

847
00:35:52,530 --> 00:35:55,980
there's only two possibilities<font color="#CCCCCC"> what</font>

848
00:35:54,060 --> 00:35:58,140
physical might<font color="#E5E5E5"> happen</font><font color="#CCCCCC"> you might</font><font color="#E5E5E5"> have</font>

849
00:35:55,980 --> 00:35:59,990
injected something<font color="#E5E5E5"> called London up or</font>

850
00:35:58,140 --> 00:36:03,299
you might have<font color="#E5E5E5"> injected something called</font>

851
00:35:59,990 --> 00:36:04,950
relative jump instruction and this if

852
00:36:03,300 --> 00:36:07,410
not was modified<font color="#CCCCCC"> relative jump</font>

853
00:36:04,950 --> 00:36:10,200
<font color="#CCCCCC">instruction and there is</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> that</font>

854
00:36:07,410 --> 00:36:12,000
the destination<font color="#CCCCCC"> of the instruction is</font>

855
00:36:10,200 --> 00:36:13,589
still need to<font color="#E5E5E5"> point in inside of the</font>

856
00:36:12,000 --> 00:36:15,750
same function or symbol name where the

857
00:36:13,590 --> 00:36:17,880
modification<font color="#CCCCCC"> happened</font><font color="#E5E5E5"> so we have own</font>

858
00:36:15,750 --> 00:36:20,490
internal decoder of the x86 instruction

859
00:36:17,880 --> 00:36:22,770
inside of<font color="#CCCCCC"> earth energy to trying</font><font color="#E5E5E5"> to find</font>

860
00:36:20,490 --> 00:36:24,899
out if it was relative jump instruction

861
00:36:22,770 --> 00:36:26,430
and we validate what the target is<font color="#CCCCCC"> and</font>

862
00:36:24,900 --> 00:36:29,580
the target supposed to exactly point<font color="#E5E5E5"> to</font>

863
00:36:26,430 --> 00:36:33,410
the same symbol and range<font color="#E5E5E5"> and if yes</font>

864
00:36:29,580 --> 00:36:36,360
it's<font color="#CCCCCC"> its jump label modification so and</font>

865
00:36:33,410 --> 00:36:38,460
other modification which is<font color="#E5E5E5"> also by jump</font>

866
00:36:36,360 --> 00:36:39,600
level<font color="#E5E5E5"> the jump relative instruction can</font>

867
00:36:38,460 --> 00:36:41,370
only be changed<font color="#CCCCCC"> to the longer</font>

868
00:36:39,600 --> 00:36:44,190
<font color="#CCCCCC">non-construction</font><font color="#E5E5E5"> another modification</font>

869
00:36:41,370 --> 00:36:45,480
<font color="#CCCCCC">are banned and more</font><font color="#E5E5E5"> information I can</font>

870
00:36:44,190 --> 00:36:47,220
<font color="#E5E5E5">find here because there's some caveats</font>

871
00:36:45,480 --> 00:36:49,620
which it's too technical

872
00:36:47,220 --> 00:36:52,859
I don't wanna cover<font color="#E5E5E5"> here</font><font color="#CCCCCC"> oh and also</font>

873
00:36:49,620 --> 00:36:54,960
another things to<font color="#E5E5E5"> mention there is this</font>

874
00:36:52,860 --> 00:36:57,000
situation happens only<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> kalmyk or</font>

875
00:36:54,960 --> 00:36:58,530
not for the models<font color="#E5E5E5"> but you can also if</font>

876
00:36:57,000 --> 00:37:01,020
<font color="#CCCCCC">you want compile model with the same</font>

877
00:36:58,530 --> 00:37:03,480
feature and<font color="#E5E5E5"> I will work on the next</font>

878
00:37:01,020 --> 00:37:06,390
<font color="#CCCCCC">version of the lkg to also support model</font>

879
00:37:03,480 --> 00:37:08,280
to detect jump like<font color="#E5E5E5"> no modification and</font>

880
00:37:06,390 --> 00:37:10,140
that's another problem<font color="#E5E5E5"> which are we</font>

881
00:37:08,280 --> 00:37:13,260
trying not to go to details since it's

882
00:37:10,140 --> 00:37:16,230
<font color="#E5E5E5">also technical so Linux kernel in short</font>

883
00:37:13,260 --> 00:37:19,020
in the SMP Linux machines<font color="#CCCCCC"> if you send an</font>

884
00:37:16,230 --> 00:37:21,270
EP to the core which is<font color="#E5E5E5"> deadlocked which</font>

885
00:37:19,020 --> 00:37:23,490
might happens there's<font color="#CCCCCC"> an my watchdog</font>

886
00:37:21,270 --> 00:37:25,860
<font color="#CCCCCC">which will kill not the deadlocked car</font>

887
00:37:23,490 --> 00:37:28,770
but if you kill the function hook<font color="#E5E5E5"> who</font>

888
00:37:25,860 --> 00:37:30,660
send an EP<font color="#CCCCCC"> it means and it's weird but</font>

889
00:37:28,770 --> 00:37:32,970
the reason why it's doing it because if

890
00:37:30,660 --> 00:37:35,190
it's trying to kill that locked<font color="#CCCCCC"> core</font><font color="#E5E5E5"> the</font>

891
00:37:32,970 --> 00:37:37,169
system<font color="#E5E5E5"> may be not stable because if you</font>

892
00:37:35,190 --> 00:37:39,330
are able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> send an EP to mean system is</font>

893
00:37:37,170 --> 00:37:41,070
still stable<font color="#CCCCCC"> so if it's kills that</font>

894
00:37:39,330 --> 00:37:43,259
locked car it might not be stable

895
00:37:41,070 --> 00:37:45,840
<font color="#CCCCCC">anymore so that's</font><font color="#E5E5E5"> why it gives you even</font>

896
00:37:43,260 --> 00:37:47,850
core<font color="#E5E5E5"> your function doesn't have bugs in</font>

897
00:37:45,840 --> 00:37:49,620
the<font color="#CCCCCC"> locks we will see kilt function</font>

898
00:37:47,850 --> 00:37:51,779
<font color="#E5E5E5">looks like you have a box in your core</font>

899
00:37:49,620 --> 00:37:53,370
but it's not it just<font color="#E5E5E5"> the way how the</font>

900
00:37:51,780 --> 00:37:55,560
<font color="#E5E5E5">news can work so you can leave more</font>

901
00:37:53,370 --> 00:37:58,859
about that here<font color="#E5E5E5"> I publish a blog post</font>

902
00:37:55,560 --> 00:38:00,360
<font color="#E5E5E5">about that so what about communication</font>

903
00:37:58,860 --> 00:38:03,900
channel<font color="#CCCCCC"> let's come back</font><font color="#E5E5E5"> to something</font>

904
00:38:00,360 --> 00:38:05,730
less technical so<font color="#CCCCCC"> lker RG export</font><font color="#E5E5E5"> sis</font>

905
00:38:03,900 --> 00:38:07,830
control interface with<font color="#E5E5E5"> these following</font>

906
00:38:05,730 --> 00:38:09,750
options you can as I said<font color="#CCCCCC"> before it can</font>

907
00:38:07,830 --> 00:38:11,970
completely<font color="#E5E5E5"> block dynamic loading of the</font>

908
00:38:09,750 --> 00:38:14,070
<font color="#E5E5E5">model by setting just this value to one</font>

909
00:38:11,970 --> 00:38:15,720
block one dose equivalent one<font color="#CCCCCC"> and none</font>

910
00:38:14,070 --> 00:38:17,730
of the dynamic model we below that ever

911
00:38:15,720 --> 00:38:19,770
in the system<font color="#E5E5E5"> if you come back</font><font color="#CCCCCC"> into zero</font>

912
00:38:17,730 --> 00:38:22,680
you<font color="#E5E5E5"> can still load a new model it's very</font>

913
00:38:19,770 --> 00:38:25,920
<font color="#E5E5E5">useful for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> imagine the situation</font>

914
00:38:22,680 --> 00:38:27,600
<font color="#CCCCCC">that you have random distribution</font><font color="#E5E5E5"> karna</font>

915
00:38:25,920 --> 00:38:30,120
like from the open<font color="#E5E5E5"> door whatever</font><font color="#CCCCCC"> they</font>

916
00:38:27,600 --> 00:38:32,130
<font color="#CCCCCC">say</font><font color="#E5E5E5"> random also models installed on your</font>

917
00:38:30,120 --> 00:38:36,060
system with the random implementation of

918
00:38:32,130 --> 00:38:38,310
the of the random stack<font color="#E5E5E5"> so for</font><font color="#CCCCCC"> example</font>

919
00:38:36,060 --> 00:38:39,690
if you<font color="#E5E5E5"> don't want to use</font><font color="#CCCCCC"> sstp stack you</font>

920
00:38:38,310 --> 00:38:41,880
can<font color="#CCCCCC"> still have a model which</font><font color="#E5E5E5"> is not</font>

921
00:38:39,690 --> 00:38:45,120
loaded there and if some user creates a

922
00:38:41,880 --> 00:38:47,250
socket<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> sstp</font><font color="#E5E5E5"> connection it will</font>

923
00:38:45,120 --> 00:38:48,540
dynamically load the model<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> system</font>

924
00:38:47,250 --> 00:38:50,010
if you don't<font color="#CCCCCC"> want this to happen you</font>

925
00:38:48,540 --> 00:38:52,920
just<font color="#E5E5E5"> make it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> one and</font><font color="#CCCCCC"> it will</font><font color="#E5E5E5"> never</font>

926
00:38:50,010 --> 00:38:54,630
happened also<font color="#CCCCCC"> i'll qiraji will print a</font>

927
00:38:52,920 --> 00:38:56,040
message the system is clean if you<font color="#E5E5E5"> don't</font>

928
00:38:54,630 --> 00:38:57,480
want to see<font color="#E5E5E5"> this message because maybe</font>

929
00:38:56,040 --> 00:38:59,880
it<font color="#CCCCCC"> spans your</font><font color="#E5E5E5"> app you can make it to</font>

930
00:38:57,480 --> 00:39:01,800
<font color="#E5E5E5">zero and we never see if this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> miss</font>

931
00:38:59,880 --> 00:39:04,380
clean<font color="#E5E5E5"> but you still see the system is</font>

932
00:39:01,800 --> 00:39:07,230
corrupted by<font color="#CCCCCC"> default this is enabled</font>

933
00:39:04,380 --> 00:39:09,630
<font color="#CCCCCC">also you can force a</font><font color="#E5E5E5"> validation by</font>

934
00:39:07,230 --> 00:39:12,090
changing<font color="#CCCCCC"> first run</font><font color="#E5E5E5"> to one and then</font>

935
00:39:09,630 --> 00:39:14,910
validate the integrity of the system<font color="#CCCCCC"> and</font>

936
00:39:12,090 --> 00:39:17,100
<font color="#E5E5E5">will still revert this number to zero</font>

937
00:39:14,910 --> 00:39:18,509
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can run it again and</font><font color="#CCCCCC"> also there</font>

938
00:39:17,100 --> 00:39:22,049
<font color="#CCCCCC">is</font><font color="#E5E5E5"> very smug levels of the details</font>

939
00:39:18,510 --> 00:39:24,060
between<font color="#E5E5E5"> 0 to 4 as 0 is non log level</font>

940
00:39:22,050 --> 00:39:26,880
details for<font color="#E5E5E5"> it's a lot of details and</font>

941
00:39:24,060 --> 00:39:28,830
this<font color="#CCCCCC"> also to debug levels which is</font><font color="#E5E5E5"> 5</font><font color="#CCCCCC"> &</font><font color="#E5E5E5"> 6</font>

942
00:39:26,880 --> 00:39:30,210
<font color="#E5E5E5">which generate enormous amount of the</font>

943
00:39:28,830 --> 00:39:32,430
details if you<font color="#E5E5E5"> want but it's not</font>

944
00:39:30,210 --> 00:39:34,500
<font color="#CCCCCC">recommended and</font><font color="#E5E5E5"> also this random events</font>

945
00:39:32,430 --> 00:39:36,690
of the system who forces validation of

946
00:39:34,500 --> 00:39:38,520
the system can<font color="#CCCCCC"> be disabled by</font>

947
00:39:36,690 --> 00:39:41,130
<font color="#CCCCCC">controlling this random event</font>

948
00:39:38,520 --> 00:39:42,720
this control interface<font color="#E5E5E5"> and the last one</font>

949
00:39:41,130 --> 00:39:45,030
<font color="#E5E5E5">is just</font><font color="#CCCCCC"> time-stamped who controls how</font>

950
00:39:42,720 --> 00:39:46,770
often the current timer generates

951
00:39:45,030 --> 00:39:50,520
interruption<font color="#E5E5E5"> of validation of the round</font>

952
00:39:46,770 --> 00:39:52,890
<font color="#E5E5E5">in by default is 15 seconds</font><font color="#CCCCCC"> and what is</font>

953
00:39:50,520 --> 00:39:56,340
the<font color="#E5E5E5"> performance impact we measure</font><font color="#CCCCCC"> the</font>

954
00:39:52,890 --> 00:39:57,020
<font color="#CCCCCC">jang 1.8 from 0 jumbo compilation with</font>

955
00:39:56,340 --> 00:39:58,970
this<font color="#CCCCCC"> specific</font>

956
00:39:57,020 --> 00:40:01,759
<font color="#CCCCCC">they</font><font color="#E5E5E5"> said here on the eighth course</font>

957
00:39:58,970 --> 00:40:04,910
<font color="#E5E5E5">system and the numbers looks like this</font>

958
00:40:01,760 --> 00:40:06,680
<font color="#E5E5E5">so the fully hardened</font><font color="#CCCCCC"> elk are our G with</font>

959
00:40:04,910 --> 00:40:10,460
all of the<font color="#E5E5E5"> random even certification</font>

960
00:40:06,680 --> 00:40:12,770
just at 2.5%<font color="#E5E5E5"> of the performance impact</font>

961
00:40:10,460 --> 00:40:14,240
<font color="#E5E5E5">if you disable random even notification</font>

962
00:40:12,770 --> 00:40:16,640
is less than<font color="#E5E5E5"> 1%</font>

963
00:40:14,240 --> 00:40:19,609
it's just<font color="#CCCCCC"> 0.7 percent</font><font color="#E5E5E5"> and still you</font><font color="#CCCCCC"> have</font>

964
00:40:16,640 --> 00:40:21,710
exploit detection feature and and random

965
00:40:19,610 --> 00:40:26,660
called<font color="#CCCCCC"> integrity by the timer which is</font>

966
00:40:21,710 --> 00:40:28,880
less<font color="#E5E5E5"> than 1% which cool I think</font><font color="#CCCCCC"> and now</font>

967
00:40:26,660 --> 00:40:30,950
I<font color="#CCCCCC"> think I</font><font color="#E5E5E5"> have some time I hope to</font>

968
00:40:28,880 --> 00:40:33,770
<font color="#E5E5E5">discuss why</font><font color="#CCCCCC"> l qiraji is not implemented</font>

969
00:40:30,950 --> 00:40:36,319
in the<font color="#E5E5E5"> hypervisor so</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> many</font><font color="#CCCCCC"> people</font>

970
00:40:33,770 --> 00:40:39,380
realize<font color="#E5E5E5"> that but it doesn't</font><font color="#CCCCCC"> matter where</font>

971
00:40:36,320 --> 00:40:41,930
your assist is implemented if it's<font color="#CCCCCC"> in</font>

972
00:40:39,380 --> 00:40:44,030
<font color="#CCCCCC">during 0</font><font color="#E5E5E5"> is it in the rink</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> one like</font>

973
00:40:41,930 --> 00:40:46,490
hypervisor in -<font color="#CCCCCC"> or</font><font color="#E5E5E5"> like as a memory -</font>

974
00:40:44,030 --> 00:40:48,920
<font color="#CCCCCC">like a Mt still some of the problems</font>

975
00:40:46,490 --> 00:40:51,410
remain the same<font color="#E5E5E5"> doesn't matter where you</font>

976
00:40:48,920 --> 00:40:55,850
are<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> imagine</font><font color="#E5E5E5"> you wanna</font>

977
00:40:51,410 --> 00:40:58,129
validate or read some memory page you

978
00:40:55,850 --> 00:41:00,259
<font color="#E5E5E5">don't know what the state</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the page is</font>

979
00:40:58,130 --> 00:41:02,540
if you are not<font color="#CCCCCC"> enduring 0 because</font><font color="#E5E5E5"> maybe</font>

980
00:41:00,260 --> 00:41:06,230
can are in the middle of modifying this

981
00:41:02,540 --> 00:41:08,540
page<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> kinda just wants to page out</font>

982
00:41:06,230 --> 00:41:10,370
this page<font color="#E5E5E5"> maybe can wants to kill this</font>

983
00:41:08,540 --> 00:41:12,529
page you<font color="#CCCCCC"> don't know that's why you need</font>

984
00:41:10,370 --> 00:41:14,509
to synchronize regardless where you are

985
00:41:12,530 --> 00:41:17,030
with the ring<font color="#CCCCCC"> 0 where is the safe time</font>

986
00:41:14,510 --> 00:41:19,040
to<font color="#CCCCCC"> read this specific data</font><font color="#E5E5E5"> regardless if</font>

987
00:41:17,030 --> 00:41:21,140
you're enduring<font color="#CCCCCC"> minus</font><font color="#E5E5E5"> 1 or</font><font color="#CCCCCC"> ring</font><font color="#E5E5E5"> zero you</font>

988
00:41:19,040 --> 00:41:23,360
still<font color="#E5E5E5"> need to do it all some</font>

989
00:41:21,140 --> 00:41:24,980
standardization of hypervisor who<font color="#CCCCCC"> worked</font>

990
00:41:23,360 --> 00:41:27,380
in<font color="#E5E5E5"> the Linux is very underdeveloped</font>

991
00:41:24,980 --> 00:41:28,610
<font color="#E5E5E5">comparing to other modern operation</font>

992
00:41:27,380 --> 00:41:31,280
system it is<font color="#CCCCCC"> for now</font>

993
00:41:28,610 --> 00:41:34,270
so under<font color="#E5E5E5"> root hypervisor your Linux box</font>

994
00:41:31,280 --> 00:41:36,950
runs under<font color="#CCCCCC"> KVM</font><font color="#E5E5E5"> and there is an under</font>

995
00:41:34,270 --> 00:41:40,310
VirtualBox<font color="#CCCCCC"> maybe around</font><font color="#E5E5E5"> some custom</font>

996
00:41:36,950 --> 00:41:42,680
maybe qmo<font color="#CCCCCC"> I don't know which is not true</font>

997
00:41:40,310 --> 00:41:44,150
<font color="#E5E5E5">in</font><font color="#CCCCCC"> the closed platform</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example you</font>

998
00:41:42,680 --> 00:41:46,730
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> have the same problems in the</font>

999
00:41:44,150 --> 00:41:48,110
other<font color="#E5E5E5"> system for example</font><font color="#CCCCCC"> Samsung</font>

1000
00:41:46,730 --> 00:41:49,940
developed Knox technology which is

1001
00:41:48,110 --> 00:41:51,800
similar because they know<font color="#E5E5E5"> under which</font>

1002
00:41:49,940 --> 00:41:53,510
divides the<font color="#E5E5E5"> run they know under which</font>

1003
00:41:51,800 --> 00:41:54,860
environments they run they know under

1004
00:41:53,510 --> 00:41:56,750
<font color="#E5E5E5">with system they run under which</font>

1005
00:41:54,860 --> 00:41:59,000
configuration the<font color="#CCCCCC"> RAM so they always</font>

1006
00:41:56,750 --> 00:42:01,610
trust them<font color="#CCCCCC"> because they know it is there</font>

1007
00:41:59,000 --> 00:42:03,770
and<font color="#E5E5E5"> they also know which TransAm exactly</font>

1008
00:42:01,610 --> 00:42:06,110
<font color="#E5E5E5">which operation system in the Trojan</font>

1009
00:42:03,770 --> 00:42:08,120
<font color="#E5E5E5">exists which they use in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> linux you</font>

1010
00:42:06,110 --> 00:42:10,610
don't know in the<font color="#CCCCCC"> Windows if you have</font>

1011
00:42:08,120 --> 00:42:10,880
<font color="#CCCCCC">VSM enabled</font><font color="#E5E5E5"> you have warranty that under</font>

1012
00:42:10,610 --> 00:42:12,650
the

1013
00:42:10,880 --> 00:42:14,540
<font color="#CCCCCC">there is always hyper-v</font><font color="#E5E5E5"> so have pre</font>

1014
00:42:12,650 --> 00:42:16,460
assumption on the<font color="#E5E5E5"> hyper-v features</font>

1015
00:42:14,540 --> 00:42:18,890
<font color="#CCCCCC">because we know it's always there I</font>

1016
00:42:16,460 --> 00:42:20,510
<font color="#E5E5E5">always have</font><font color="#CCCCCC"> kpp because it also knows</font>

1017
00:42:18,890 --> 00:42:22,129
which device the run they know which

1018
00:42:20,510 --> 00:42:24,080
<font color="#CCCCCC">environment the run which configuration</font>

1019
00:42:22,130 --> 00:42:27,920
the<font color="#E5E5E5"> run in the Linux we don't have this</font>

1020
00:42:24,080 --> 00:42:29,630
capability<font color="#E5E5E5"> unfortunately and not all of</font>

1021
00:42:27,920 --> 00:42:31,010
the VPS solution supports arsonist

1022
00:42:29,630 --> 00:42:33,800
virtualization<font color="#CCCCCC"> to a serious limitation</font>

1023
00:42:31,010 --> 00:42:36,110
<font color="#CCCCCC">so</font><font color="#E5E5E5"> imagine you can buy a Linux VM</font><font color="#CCCCCC"> in the</font>

1024
00:42:33,800 --> 00:42:37,760
random hosting some hosting doesn't even

1025
00:42:36,110 --> 00:42:40,030
allow you<font color="#E5E5E5"> to change the kernel</font>

1026
00:42:37,760 --> 00:42:42,350
what about speaking<font color="#CCCCCC"> as individualization</font>

1027
00:42:40,030 --> 00:42:43,760
<font color="#CCCCCC">if</font><font color="#E5E5E5"> it doesn't even able</font><font color="#CCCCCC"> to change the</font>

1028
00:42:42,350 --> 00:42:47,089
kernel you won't be able<font color="#CCCCCC"> to use this</font>

1029
00:42:43,760 --> 00:42:48,770
feature<font color="#E5E5E5"> because now</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> RG is just a model</font>

1030
00:42:47,090 --> 00:42:51,740
<font color="#CCCCCC">you just install the model and you have</font>

1031
00:42:48,770 --> 00:42:53,930
<font color="#E5E5E5">the same capability which I show you and</font>

1032
00:42:51,740 --> 00:42:55,729
also<font color="#CCCCCC"> link -1 is</font><font color="#E5E5E5"> goes against mass</font>

1033
00:42:53,930 --> 00:42:58,490
deployment<font color="#CCCCCC"> so imagine you have farm of</font>

1034
00:42:55,730 --> 00:43:00,350
servers of farm of the<font color="#CCCCCC"> VMS so now what</font>

1035
00:42:58,490 --> 00:43:02,660
you can<font color="#CCCCCC"> do you can create</font><font color="#E5E5E5"> a package</font><font color="#CCCCCC"> like</font>

1036
00:43:00,350 --> 00:43:05,210
a normal package and install specific

1037
00:43:02,660 --> 00:43:07,370
package and the<font color="#E5E5E5"> thousand of the machines</font>

1038
00:43:05,210 --> 00:43:09,890
<font color="#E5E5E5">and you have this feature enabled</font><font color="#CCCCCC"> if you</font>

1039
00:43:07,370 --> 00:43:12,109
have ring<font color="#CCCCCC"> -1 you can't do this</font><font color="#E5E5E5"> and also</font>

1040
00:43:09,890 --> 00:43:14,060
some of<font color="#CCCCCC"> the servers are never going to</font>

1041
00:43:12,110 --> 00:43:16,160
be rebooted<font color="#E5E5E5"> they are not rebooted</font>

1042
00:43:14,060 --> 00:43:18,830
<font color="#E5E5E5">because their uptime is sometimes</font><font color="#CCCCCC"> days</font>

1043
00:43:16,160 --> 00:43:20,660
sometimes<font color="#CCCCCC"> even</font><font color="#E5E5E5"> years so if the RPM of</font>

1044
00:43:18,830 --> 00:43:22,520
the<font color="#CCCCCC"> server's</font><font color="#E5E5E5"> couple of years</font>

1045
00:43:20,660 --> 00:43:24,649
<font color="#E5E5E5">how can you reboot the server</font><font color="#CCCCCC"> and these</font>

1046
00:43:22,520 --> 00:43:26,960
were some hypervisor feature<font color="#E5E5E5"> if you have</font>

1047
00:43:24,650 --> 00:43:32,270
a qiraji<font color="#E5E5E5"> you just install the model it</font>

1048
00:43:26,960 --> 00:43:34,280
works but<font color="#E5E5E5"> as I</font><font color="#CCCCCC"> said when wild world wild</font>

1049
00:43:32,270 --> 00:43:37,040
west of the<font color="#CCCCCC"> link -1 world becomes more</font>

1050
00:43:34,280 --> 00:43:39,860
unified in the<font color="#E5E5E5"> linux</font><font color="#CCCCCC"> i will it will</font><font color="#E5E5E5"> be</font>

1051
00:43:37,040 --> 00:43:43,759
very<font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> add link -1 extension of</font>

1052
00:43:39,860 --> 00:43:45,350
<font color="#E5E5E5">ERG which we got in</font><font color="#CCCCCC"> zero instance so we</font>

1053
00:43:43,760 --> 00:43:48,110
<font color="#CCCCCC">will have</font><font color="#E5E5E5"> exactly the same</font><font color="#CCCCCC"> essence like</font>

1054
00:43:45,350 --> 00:43:49,790
now and if the hypervisor become more

1055
00:43:48,110 --> 00:43:52,400
unified there will be extra model of

1056
00:43:49,790 --> 00:43:55,279
<font color="#CCCCCC">Ecology which will from hypervisor</font><font color="#E5E5E5"> and</font>

1057
00:43:52,400 --> 00:43:57,260
guard current<font color="#CCCCCC"> LKG</font><font color="#E5E5E5"> in during</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> entry it</font>

1058
00:43:55,280 --> 00:43:59,330
will solve the problem so<font color="#CCCCCC"> you'll have</font>

1059
00:43:57,260 --> 00:44:00,650
two modes of operation weaker and

1060
00:43:59,330 --> 00:44:03,440
stronger depends<font color="#E5E5E5"> if the hypervisor</font>

1061
00:44:00,650 --> 00:44:06,940
<font color="#E5E5E5">exists or not but I still</font><font color="#CCCCCC"> believe it's</font>

1062
00:44:03,440 --> 00:44:09,350
not<font color="#CCCCCC"> the right time</font><font color="#E5E5E5"> to do it</font><font color="#CCCCCC"> now and</font>

1063
00:44:06,940 --> 00:44:11,240
about the future<font color="#CCCCCC"> of the project from</font><font color="#E5E5E5"> the</font>

1064
00:44:09,350 --> 00:44:14,089
<font color="#CCCCCC">random code integrity feature I would</font>

1065
00:44:11,240 --> 00:44:16,700
<font color="#E5E5E5">like to cover more stuff including a</font>

1066
00:44:14,090 --> 00:44:21,020
<font color="#E5E5E5">peek and local</font><font color="#CCCCCC"> epic I would like to add</font>

1067
00:44:16,700 --> 00:44:24,270
the<font color="#CCCCCC"> ma</font><font color="#E5E5E5"> DT table fat stable as</font><font color="#CCCCCC"> SD T table</font>

1068
00:44:21,020 --> 00:44:27,060
<font color="#CCCCCC">a CPI</font><font color="#E5E5E5"> I would like to also cover</font><font color="#CCCCCC"> Colgate</font>

1069
00:44:24,270 --> 00:44:28,980
if of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> possible</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the system and</font>

1070
00:44:27,060 --> 00:44:31,140
also<font color="#E5E5E5"> I would like to check if the call</font>

1071
00:44:28,980 --> 00:44:32,730
<font color="#CCCCCC">backs identification routines which are</font>

1072
00:44:31,140 --> 00:44:34,920
registered in<font color="#E5E5E5"> the system points to the</font>

1073
00:44:32,730 --> 00:44:37,650
model<font color="#E5E5E5"> or to</font><font color="#CCCCCC"> the core of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> system which</font>

1074
00:44:34,920 --> 00:44:40,020
I know<font color="#E5E5E5"> and I keep tracking it down not</font>

1075
00:44:37,650 --> 00:44:41,700
<font color="#CCCCCC">just the random place in the</font><font color="#E5E5E5"> memory from</font>

1076
00:44:40,020 --> 00:44:44,580
<font color="#CCCCCC">the exploit detection feature</font><font color="#E5E5E5"> I would</font>

1077
00:44:41,700 --> 00:44:46,560
like to detect sandbox<font color="#E5E5E5"> escapes based on</font>

1078
00:44:44,580 --> 00:44:48,690
the capabilities corruptions<font color="#CCCCCC"> I would</font>

1079
00:44:46,560 --> 00:44:50,910
like<font color="#E5E5E5"> to add as I said before container</font>

1080
00:44:48,690 --> 00:44:53,130
escapes which will be<font color="#E5E5E5"> added for sure</font>

1081
00:44:50,910 --> 00:44:55,830
same as<font color="#E5E5E5"> the main space sandbox escapes</font>

1082
00:44:53,130 --> 00:44:58,380
<font color="#CCCCCC">and also</font><font color="#E5E5E5"> I will cover more kernel</font>

1083
00:44:55,830 --> 00:45:00,270
elevation of<font color="#E5E5E5"> privilege techniques and in</font>

1084
00:44:58,380 --> 00:45:03,000
general I<font color="#E5E5E5"> will probably work for a</font>

1085
00:45:00,270 --> 00:45:04,920
better<font color="#E5E5E5"> self defense like hard from the</font>

1086
00:45:03,000 --> 00:45:06,720
<font color="#E5E5E5">internal database and ecology itself</font>

1087
00:45:04,920 --> 00:45:09,090
apparently<font color="#CCCCCC"> this second is already done</font>

1088
00:45:06,720 --> 00:45:11,490
<font color="#CCCCCC">and also I will probably</font><font color="#E5E5E5"> work at some</font>

1089
00:45:09,090 --> 00:45:13,710
time when I feel it's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> right time on</font>

1090
00:45:11,490 --> 00:45:15,540
<font color="#E5E5E5">the hypervisor extension to drink - one</font>

1091
00:45:13,710 --> 00:45:17,490
<font color="#CCCCCC">- guard</font><font color="#E5E5E5"> al-qura G from the hypervisor</font>

1092
00:45:15,540 --> 00:45:22,230
<font color="#E5E5E5">and probably much more which I'm not</font>

1093
00:45:17,490 --> 00:45:23,770
aware now<font color="#CCCCCC"> so that's all question and</font>

1094
00:45:22,230 --> 00:45:34,429
discussions

1095
00:45:23,770 --> 00:45:34,429
[Applause]

1096
00:45:36,450 --> 00:45:40,899
<font color="#E5E5E5">Thanks</font>

1097
00:45:37,630 --> 00:45:44,130
so quick question<font color="#E5E5E5"> because we have</font><font color="#CCCCCC"> to</font>

1098
00:45:40,900 --> 00:45:47,290
<font color="#E5E5E5">this time you've mentioned about adding</font>

1099
00:45:44,130 --> 00:45:50,710
support for capabilities changes or

1100
00:45:47,290 --> 00:45:54,700
<font color="#CCCCCC">monitoring these do</font><font color="#E5E5E5"> you also plan to add</font>

1101
00:45:50,710 --> 00:45:57,430
file capabilities modifications<font color="#E5E5E5"> yes</font>

1102
00:45:54,700 --> 00:46:01,710
<font color="#E5E5E5">every capability feature which exists in</font>

1103
00:45:57,430 --> 00:46:01,710
<font color="#E5E5E5">the system will be added</font><font color="#CCCCCC"> ok</font>

1104
00:46:08,279 --> 00:46:15,009
how do you know<font color="#CCCCCC"> for exploited detection</font>

1105
00:46:12,579 --> 00:46:22,839
how do you know which a threat or which

1106
00:46:15,009 --> 00:46:27,160
process<font color="#E5E5E5"> cost this this activity like</font>

1107
00:46:22,839 --> 00:46:30,179
modified<font color="#CCCCCC"> colonel</font><font color="#E5E5E5"> that like modified</font>

1108
00:46:27,160 --> 00:46:34,049
privileges of processes or<font color="#E5E5E5"> threads</font>

1109
00:46:30,179 --> 00:46:36,789
underneath and<font color="#CCCCCC"> be systems there</font><font color="#E5E5E5"> are many</font>

1110
00:46:34,049 --> 00:46:39,069
with pre-emptive kernel<font color="#CCCCCC"> there are many</font>

1111
00:46:36,789 --> 00:46:44,219
many<font color="#CCCCCC"> threads in the kernel mode</font><font color="#E5E5E5"> at the</font>

1112
00:46:39,069 --> 00:46:47,429
same time so if<font color="#CCCCCC"> you only only validate</font>

1113
00:46:44,219 --> 00:46:50,829
<font color="#E5E5E5">check the integrity when the when it</font>

1114
00:46:47,429 --> 00:46:53,619
enters enters the kernel mode<font color="#E5E5E5"> and and</font>

1115
00:46:50,829 --> 00:46:56,109
<font color="#E5E5E5">leaves the kernel</font><font color="#CCCCCC"> mode</font><font color="#E5E5E5"> there may be</font>

1116
00:46:53,619 --> 00:46:57,969
multiple threads<font color="#E5E5E5"> in kernel</font><font color="#CCCCCC"> mode at the</font>

1117
00:46:56,109 --> 00:47:01,469
same time how do you know which one was

1118
00:46:57,969 --> 00:47:04,660
malicious<font color="#E5E5E5"> so validation routing works on</font>

1119
00:47:01,469 --> 00:47:07,089
these<font color="#E5E5E5"> hooks are works per code so if any</font>

1120
00:47:04,660 --> 00:47:08,529
<font color="#CCCCCC">core</font><font color="#E5E5E5"> around them calls specific</font>

1121
00:47:07,089 --> 00:47:10,749
functions<font color="#E5E5E5"> they might be multiple</font>

1122
00:47:08,529 --> 00:47:13,299
validation routines<font color="#E5E5E5"> assigned to each</font>

1123
00:47:10,749 --> 00:47:16,029
specific individual<font color="#CCCCCC"> Cora</font><font color="#E5E5E5"> and even when</font>

1124
00:47:13,299 --> 00:47:17,380
it happens when<font color="#CCCCCC"> the depends on which</font>

1125
00:47:16,029 --> 00:47:19,329
validation<font color="#E5E5E5"> we're talking about because</font>

1126
00:47:17,380 --> 00:47:21,819
<font color="#E5E5E5">expert detection features also rely of</font>

1127
00:47:19,329 --> 00:47:23,949
<font color="#E5E5E5">called integrity feature so they might</font>

1128
00:47:21,819 --> 00:47:26,410
be<font color="#CCCCCC"> a random called integrity validation</font>

1129
00:47:23,949 --> 00:47:29,349
<font color="#E5E5E5">around in the random car</font><font color="#CCCCCC"> just validating</font>

1130
00:47:26,410 --> 00:47:31,569
<font color="#CCCCCC">additional the</font><font color="#E5E5E5"> tasks itself but whenever</font>

1131
00:47:29,349 --> 00:47:33,249
<font color="#E5E5E5">the cisco</font><font color="#CCCCCC"> has been done</font><font color="#E5E5E5"> with any car</font>

1132
00:47:31,569 --> 00:47:34,959
<font color="#E5E5E5">they might be multiple</font><font color="#CCCCCC"> cars during</font>

1133
00:47:33,249 --> 00:47:37,390
validation the same time with all<font color="#CCCCCC"> of the</font>

1134
00:47:34,959 --> 00:47:40,899
<font color="#CCCCCC">tags</font><font color="#E5E5E5"> together so that's why it happens</font>

1135
00:47:37,390 --> 00:47:43,179
quite often and I've been<font color="#E5E5E5"> doing a lot of</font>

1136
00:47:40,900 --> 00:47:45,849
attacks and trying to simulate attacks

1137
00:47:43,179 --> 00:47:48,819
like for example<font color="#CCCCCC"> I was creating tasks</font>

1138
00:47:45,849 --> 00:47:50,920
<font color="#E5E5E5">randomly doing nothing</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> like a couple</font>

1139
00:47:48,819 --> 00:47:53,499
<font color="#CCCCCC">of hours and</font><font color="#E5E5E5"> then I was trying just</font>

1140
00:47:50,920 --> 00:47:55,719
<font color="#CCCCCC">precise at random point of time doing</font>

1141
00:47:53,499 --> 00:47:59,529
having quite primitive<font color="#E5E5E5"> justice with the</font>

1142
00:47:55,719 --> 00:48:01,599
<font color="#E5E5E5">flag but before any of the Cisco's</font>

1143
00:47:59,529 --> 00:48:04,089
was returning it was already<font color="#E5E5E5"> catched and</font>

1144
00:48:01,599 --> 00:48:06,309
<font color="#CCCCCC">usermod process never have any change to</font>

1145
00:48:04,089 --> 00:48:08,499
start executing<font color="#E5E5E5"> because</font><font color="#CCCCCC"> the kernel</font><font color="#E5E5E5"> was</font>

1146
00:48:06,309 --> 00:48:10,989
blocking<font color="#E5E5E5"> this level</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the user mode</font>

1147
00:48:08,499 --> 00:48:13,808
<font color="#CCCCCC">so</font><font color="#E5E5E5"> even the heifer capability already</font>

1148
00:48:10,989 --> 00:48:16,119
<font color="#CCCCCC">may</font><font color="#E5E5E5"> be higher</font><font color="#CCCCCC"> at some point</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> time</font>

1149
00:48:13,809 --> 00:48:17,829
before<font color="#E5E5E5"> it returns to the user mode to</font>

1150
00:48:16,119 --> 00:48:20,469
the attacker

1151
00:48:17,829 --> 00:48:26,950
<font color="#CCCCCC">a capability to execute</font><font color="#E5E5E5"> anything it was</font>

1152
00:48:20,469 --> 00:48:31,019
already<font color="#E5E5E5"> killed</font><font color="#CCCCCC"> a couple of questions</font>

1153
00:48:26,950 --> 00:48:36,999
<font color="#E5E5E5">actually very really good project</font>

1154
00:48:31,019 --> 00:48:38,468
sorry<font color="#CCCCCC"> I don't see</font><font color="#E5E5E5"> okay hi thanks I have</font>

1155
00:48:36,999 --> 00:48:40,689
a question<font color="#E5E5E5"> I kind of skipped the</font>

1156
00:48:38,469 --> 00:48:43,059
beginning of the<font color="#E5E5E5"> presentation so first</font>

1157
00:48:40,690 --> 00:48:46,059
will<font color="#CCCCCC"> be is it in the mainstream kernel</font>

1158
00:48:43,059 --> 00:48:47,950
right<font color="#E5E5E5"> now and which version if it is if</font>

1159
00:48:46,059 --> 00:48:50,289
it's<font color="#E5E5E5"> not when do you plan to add it or</font>

1160
00:48:47,950 --> 00:48:53,499
when do you see the<font color="#E5E5E5"> community adoption</font>

1161
00:48:50,289 --> 00:48:55,859
from<font color="#E5E5E5"> the kernel community and second</font>

1162
00:48:53,499 --> 00:48:59,200
question<font color="#CCCCCC"> is about the detection actually</font>

1163
00:48:55,859 --> 00:49:01,839
<font color="#CCCCCC">can eat this module be used as a</font>

1164
00:48:59,200 --> 00:49:05,529
substitution<font color="#CCCCCC"> to audit D or maybe it's a</font>

1165
00:49:01,839 --> 00:49:09,700
supplement to audit D itself to increase

1166
00:49:05,529 --> 00:49:12,849
visibility in this<font color="#CCCCCC"> community so I saw</font>

1167
00:49:09,700 --> 00:49:15,368
community starting to<font color="#E5E5E5"> produce own built</font>

1168
00:49:12,849 --> 00:49:17,380
of the<font color="#E5E5E5"> kernel with this model inside it</font>

1169
00:49:15,369 --> 00:49:20,019
cause deep kernel something like that

1170
00:49:17,380 --> 00:49:21,579
<font color="#E5E5E5">which I was not aware</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> I don't</font>

1171
00:49:20,019 --> 00:49:23,709
<font color="#E5E5E5">think it will ever be in the main and of</font>

1172
00:49:21,579 --> 00:49:26,140
the kernel but I don't know what people

1173
00:49:23,709 --> 00:49:29,739
<font color="#CCCCCC">will</font><font color="#E5E5E5"> decide I will still develop this</font>

1174
00:49:26,140 --> 00:49:30,578
<font color="#E5E5E5">under penalty of whatever</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> will be</font>

1175
00:49:29,739 --> 00:49:32,709
saying or doing

1176
00:49:30,579 --> 00:49:34,359
<font color="#CCCCCC">I want</font><font color="#E5E5E5"> this model to keep always updated</font>

1177
00:49:32,709 --> 00:49:35,948
there is one thing which<font color="#E5E5E5"> I didn't</font>

1178
00:49:34,359 --> 00:49:38,078
<font color="#CCCCCC">mention I put a lot of efforts to</font>

1179
00:49:35,949 --> 00:49:40,509
<font color="#E5E5E5">support every various type of the kernel</font>

1180
00:49:38,079 --> 00:49:42,999
<font color="#CCCCCC">so this camera works since version 3.0</font>

1181
00:49:40,509 --> 00:49:45,789
kernel up to<font color="#CCCCCC"> 4.19 which is character</font>

1182
00:49:42,999 --> 00:49:47,649
belief a plus alpha<font color="#CCCCCC"> is support variation</font>

1183
00:49:45,789 --> 00:49:49,900
like Debian distribution kernel is

1184
00:49:47,650 --> 00:49:52,479
supported<font color="#CCCCCC"> thread has supported but if</font>

1185
00:49:49,900 --> 00:49:55,839
someone's to add to the can<font color="#E5E5E5"> I don't have</font>

1186
00:49:52,479 --> 00:49:57,848
<font color="#CCCCCC">permit that</font><font color="#E5E5E5"> and this model</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't</font>

1187
00:49:55,839 --> 00:50:00,069
really get the second question<font color="#E5E5E5"> did you</font>

1188
00:49:57,849 --> 00:50:01,420
<font color="#E5E5E5">ask if you can be replaced by comparing</font>

1189
00:50:00,069 --> 00:50:03,690
to the<font color="#CCCCCC"> GA</font><font color="#E5E5E5"> security</font><font color="#CCCCCC"> patch for other</font>

1190
00:50:01,420 --> 00:50:03,690
patches

1191
00:50:14,010 --> 00:50:19,290
can you use this<font color="#E5E5E5"> the second question was</font>

1192
00:50:16,410 --> 00:50:21,270
<font color="#CCCCCC">to</font><font color="#E5E5E5"> can use this module since you can you</font>

1193
00:50:19,290 --> 00:50:25,259
can do<font color="#CCCCCC"> Colonel de taille well</font><font color="#E5E5E5"> this is</font>

1194
00:50:21,270 --> 00:50:29,009
<font color="#E5E5E5">called detection and notifications</font><font color="#CCCCCC"> I can</font>

1195
00:50:25,260 --> 00:50:33,000
use<font color="#E5E5E5"> it as a substitution</font><font color="#CCCCCC"> to audit d &</font><font color="#E5E5E5"> or</font>

1196
00:50:29,010 --> 00:50:36,000
as an<font color="#E5E5E5"> addition to I don't know expand</font>

1197
00:50:33,000 --> 00:50:37,650
the visibility of the car Cisco's I

1198
00:50:36,000 --> 00:50:48,650
don't know what is re d which<font color="#CCCCCC"> will be</font>

1199
00:50:37,650 --> 00:50:51,180
further monitoring<font color="#CCCCCC"> Cisco's in how did I</font>

1200
00:50:48,650 --> 00:50:55,650
<font color="#CCCCCC">think</font><font color="#E5E5E5"> they're</font><font color="#CCCCCC"> independent are compatible</font>

1201
00:50:51,180 --> 00:50:59,308
<font color="#CCCCCC">you can use both</font><font color="#E5E5E5"> and apparently I was</font>

1202
00:50:55,650 --> 00:51:02,579
also testing this with other<font color="#CCCCCC"> LS m models</font>

1203
00:50:59,309 --> 00:51:04,020
the only cables which I found the worst

1204
00:51:02,579 --> 00:51:06,210
one there was some crazy model doing

1205
00:51:04,020 --> 00:51:08,970
crazy trigger for modification what you

1206
00:51:06,210 --> 00:51:11,670
do<font color="#E5E5E5"> just load my model</font><font color="#CCCCCC"> after loading this</font>

1207
00:51:08,970 --> 00:51:13,709
crazy<font color="#CCCCCC"> corruption model what they</font><font color="#E5E5E5"> do but</font>

1208
00:51:11,670 --> 00:51:15,390
without<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> a very compatible there is</font>

1209
00:51:13,710 --> 00:51:20,400
no problem in<font color="#CCCCCC"> that</font><font color="#E5E5E5"> that's far from my</font>

1210
00:51:15,390 --> 00:51:23,390
experience and<font color="#E5E5E5"> also what is worth to</font>

1211
00:51:20,400 --> 00:51:25,799
mention that sees a<font color="#E5E5E5"> lot of kernel</font>

1212
00:51:23,390 --> 00:51:29,670
distribution do some crazy patches<font color="#CCCCCC"> I</font>

1213
00:51:25,799 --> 00:51:31,259
also<font color="#CCCCCC"> saw some like v2 also distribution</font>

1214
00:51:29,670 --> 00:51:33,960
which is based on the Red Hat<font color="#E5E5E5"> have some</font>

1215
00:51:31,260 --> 00:51:35,460
container<font color="#E5E5E5"> models I also haven't seen</font>

1216
00:51:33,960 --> 00:51:37,410
problem with that<font color="#E5E5E5"> it just works</font>

1217
00:51:35,460 --> 00:51:39,839
additionally if someone doesn't want<font color="#E5E5E5"> to</font>

1218
00:51:37,410 --> 00:51:43,319
<font color="#CCCCCC">disguise the models as</font><font color="#E5E5E5"> ERG</font><font color="#CCCCCC"> I make a</font>

1219
00:51:39,839 --> 00:51:45,720
special efforts to be<font color="#E5E5E5"> able to</font><font color="#CCCCCC"> make a</font><font color="#E5E5E5"> kg</font>

1220
00:51:43,319 --> 00:51:48,029
as a<font color="#E5E5E5"> boot drive as a boot model so</font><font color="#CCCCCC"> you</font>

1221
00:51:45,720 --> 00:51:50,368
<font color="#E5E5E5">can know this model before another model</font>

1222
00:51:48,030 --> 00:51:59,780
as the<font color="#E5E5E5"> first model is during</font><font color="#CCCCCC"> each</font><font color="#E5E5E5"> stage</font>

1223
00:51:50,369 --> 00:51:59,780
and still will work so that is one

1224
00:52:03,810 --> 00:52:09,700
<font color="#E5E5E5">Thanks</font>

1225
00:52:05,500 --> 00:52:15,520
<font color="#CCCCCC">I have a question sir</font><font color="#E5E5E5"> for potential</font>

1226
00:52:09,700 --> 00:52:19,109
attacker<font color="#CCCCCC"> purely but because of design it</font>

1227
00:52:15,520 --> 00:52:24,340
is possible to detect<font color="#E5E5E5"> and bypass this</font>

1228
00:52:19,110 --> 00:52:28,090
<font color="#E5E5E5">kernel guard system so technically it's</font>

1229
00:52:24,340 --> 00:52:29,920
possible<font color="#CCCCCC"> so we for some skill at the</font>

1230
00:52:28,090 --> 00:52:31,230
<font color="#CCCCCC">core it's possible to modify</font><font color="#E5E5E5"> all these</font>

1231
00:52:29,920 --> 00:52:35,890
existing<font color="#CCCCCC"> CVE</font>

1232
00:52:31,230 --> 00:52:38,350
exploit<font color="#CCCCCC"> and in such way that</font><font color="#E5E5E5"> this</font>

1233
00:52:35,890 --> 00:52:41,410
<font color="#E5E5E5">Explorer exploits are able</font><font color="#CCCCCC"> to detect</font>

1234
00:52:38,350 --> 00:52:47,130
this<font color="#E5E5E5"> kernel</font><font color="#CCCCCC"> girl system</font><font color="#E5E5E5"> bypass the</font>

1235
00:52:41,410 --> 00:52:51,250
system disable it and and they<font color="#CCCCCC"> will run</font>

1236
00:52:47,130 --> 00:52:53,830
successfully so my question is how<font color="#CCCCCC"> did</font>

1237
00:52:51,250 --> 00:52:57,670
like by design this<font color="#E5E5E5"> is possible</font><font color="#CCCCCC"> so my</font>

1238
00:52:53,830 --> 00:52:59,950
question is how<font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> is it to</font>

1239
00:52:57,670 --> 00:53:00,730
disable<font color="#E5E5E5"> your system for potential</font>

1240
00:52:59,950 --> 00:53:03,580
attacker

1241
00:53:00,730 --> 00:53:05,140
it's a very good<font color="#E5E5E5"> question apparently</font>

1242
00:53:03,580 --> 00:53:08,830
probably depends on the skills of the

1243
00:53:05,140 --> 00:53:12,819
<font color="#E5E5E5">attacker</font><font color="#CCCCCC"> I was trying to</font><font color="#E5E5E5"> do it</font><font color="#CCCCCC"> I don't</font>

1244
00:53:08,830 --> 00:53:14,590
know if I'm a good<font color="#CCCCCC"> example if it's</font>

1245
00:53:12,820 --> 00:53:17,740
<font color="#CCCCCC">possible</font><font color="#E5E5E5"> or not since I design it this</font>

1246
00:53:14,590 --> 00:53:20,260
<font color="#E5E5E5">is</font><font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> bypass it I was able to do</font>

1247
00:53:17,740 --> 00:53:21,970
it with a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of efforts</font><font color="#E5E5E5"> but I will</font>

1248
00:53:20,260 --> 00:53:24,520
<font color="#CCCCCC">needed to be</font><font color="#E5E5E5"> very synchronized and</font>

1249
00:53:21,970 --> 00:53:26,770
precise<font color="#CCCCCC"> but I still believe that's why I</font>

1250
00:53:24,520 --> 00:53:29,320
<font color="#E5E5E5">develop this</font><font color="#CCCCCC"> project that is</font><font color="#E5E5E5"> give a lot</font>

1251
00:53:26,770 --> 00:53:31,780
of<font color="#CCCCCC"> value the reason why because</font><font color="#E5E5E5"> at first</font>

1252
00:53:29,320 --> 00:53:33,310
you<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be very</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> vulnerabilities</font>

1253
00:53:31,780 --> 00:53:35,380
to<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do it you need to have</font>

1254
00:53:33,310 --> 00:53:37,270
full read and full<font color="#E5E5E5"> write primitive and</font>

1255
00:53:35,380 --> 00:53:38,470
<font color="#CCCCCC">the problem is</font><font color="#E5E5E5"> that not every</font>

1256
00:53:37,270 --> 00:53:39,850
vulnerabilities give you these

1257
00:53:38,470 --> 00:53:41,169
possibilities<font color="#E5E5E5"> there's a lot of</font><font color="#CCCCCC"> Oh</font>

1258
00:53:39,850 --> 00:53:43,420
nervous<font color="#E5E5E5"> doesn't even give you right</font>

1259
00:53:41,170 --> 00:53:46,450
remedy for<font color="#E5E5E5"> it primitive and this</font>

1260
00:53:43,420 --> 00:53:47,980
requires you at first<font color="#E5E5E5"> that we need to</font>

1261
00:53:46,450 --> 00:53:49,899
have full read/write primitive<font color="#E5E5E5"> and then</font>

1262
00:53:47,980 --> 00:53:52,720
we can discuss about bypass<font color="#E5E5E5"> not before</font>

1263
00:53:49,900 --> 00:53:54,910
this<font color="#E5E5E5"> type of the box like</font><font color="#CCCCCC"> swap</font><font color="#E5E5E5"> GS barks</font>

1264
00:53:52,720 --> 00:53:57,520
bed I read barks this<font color="#E5E5E5"> read parts</font>

1265
00:53:54,910 --> 00:53:58,960
<font color="#E5E5E5">Pappas's barks they cannot give your</font>

1266
00:53:57,520 --> 00:54:01,750
<font color="#CCCCCC">advice</font><font color="#E5E5E5"> primitive so this will always</font>

1267
00:53:58,960 --> 00:54:05,880
work<font color="#E5E5E5"> but if you have read write</font>

1268
00:54:01,750 --> 00:54:05,880
primitive yes<font color="#E5E5E5"> I believe it's possible</font>

1269
00:54:18,549 --> 00:54:44,899
so you can choose<font color="#E5E5E5"> yes to the code</font><font color="#CCCCCC"> we</font>

1270
00:54:41,769 --> 00:54:55,549
<font color="#CCCCCC">protection so for example if you have</font>

1271
00:54:44,899 --> 00:54:58,038
some point<font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> you're talking</font>

1272
00:54:55,549 --> 00:55:01,999
already<font color="#E5E5E5"> have drop which executes summer</font>

1273
00:54:58,039 --> 00:55:03,919
in the background<font color="#CCCCCC"> yes but this</font><font color="#E5E5E5"> already</font>

1274
00:55:01,999 --> 00:55:05,779
requires you to<font color="#E5E5E5"> probably have already</font>

1275
00:55:03,919 --> 00:55:09,138
<font color="#E5E5E5">read write primitive somehow to be able</font>

1276
00:55:05,779 --> 00:55:12,380
<font color="#E5E5E5">to construct the follow-up</font><font color="#CCCCCC"> change</font>

1277
00:55:09,139 --> 00:55:14,749
<font color="#E5E5E5">starting to execute when this</font><font color="#CCCCCC"> guy's will</font>

1278
00:55:12,380 --> 00:55:16,339
try also<font color="#CCCCCC"> to protect you before</font><font color="#E5E5E5"> you'll be</font>

1279
00:55:14,749 --> 00:55:20,538
able to do it<font color="#E5E5E5"> but if you do it I believe</font>

1280
00:55:16,339 --> 00:55:22,369
<font color="#E5E5E5">you have a chance to do it yes that's</font>

1281
00:55:20,539 --> 00:55:24,229
why I put<font color="#E5E5E5"> the</font><font color="#CCCCCC"> site I will never like</font>

1282
00:55:22,369 --> 00:55:25,819
<font color="#CCCCCC">defendant</font><font color="#E5E5E5"> this is unbelievable project</font>

1283
00:55:24,229 --> 00:55:27,589
<font color="#CCCCCC">because my goal</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that cost of</font>

1284
00:55:25,819 --> 00:55:29,929
developing<font color="#CCCCCC"> it and making</font><font color="#E5E5E5"> in the high</font>

1285
00:55:27,589 --> 00:55:31,399
level is<font color="#E5E5E5"> very very high and not everyone</font>

1286
00:55:29,929 --> 00:55:33,949
<font color="#CCCCCC">abilities give you these</font><font color="#E5E5E5"> possibilities</font>

1287
00:55:31,399 --> 00:55:35,419
but even imagine you have that<font color="#E5E5E5"> imagine</font>

1288
00:55:33,949 --> 00:55:37,819
you have<font color="#CCCCCC"> full read/write primitive you</font>

1289
00:55:35,419 --> 00:55:40,038
control everything<font color="#CCCCCC"> as I said you have</font>

1290
00:55:37,819 --> 00:55:42,439
<font color="#CCCCCC">race condition problems you might be</font><font color="#E5E5E5"> not</font>

1291
00:55:40,039 --> 00:55:44,479
fast enough<font color="#E5E5E5"> maybe you run</font><font color="#CCCCCC"> fifty</font><font color="#E5E5E5"> percent</font>

1292
00:55:42,439 --> 00:55:46,669
<font color="#CCCCCC">of time you succeed 50</font><font color="#E5E5E5"> percent of time</font>

1293
00:55:44,479 --> 00:55:49,158
<font color="#E5E5E5">you crash the system or maybe</font><font color="#CCCCCC"> twenty</font>

1294
00:55:46,669 --> 00:55:51,019
percent<font color="#CCCCCC"> of time</font><font color="#E5E5E5"> that's why I was putting</font>

1295
00:55:49,159 --> 00:55:52,969
a lot<font color="#CCCCCC"> of effort for unpredictability</font>

1296
00:55:51,019 --> 00:55:54,589
<font color="#E5E5E5">when the validation has been done that's</font>

1297
00:55:52,969 --> 00:55:56,329
<font color="#E5E5E5">why you have random even from the system</font>

1298
00:55:54,589 --> 00:55:58,130
who does validation but as I<font color="#E5E5E5"> said I</font>

1299
00:55:56,329 --> 00:56:00,109
<font color="#E5E5E5">never different it's a son by possible</font>

1300
00:55:58,130 --> 00:56:06,889
is by<font color="#E5E5E5"> pacified by the design but the</font>

1301
00:56:00,109 --> 00:56:10,819
<font color="#CCCCCC">cost of bypass is</font><font color="#E5E5E5"> very high okay thanks</font>

1302
00:56:06,889 --> 00:56:12,480
and also<font color="#CCCCCC"> thank</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> Adam thanks great</font>

1303
00:56:10,819 --> 00:56:14,570
presentation

1304
00:56:12,480 --> 00:56:14,570
[Applause]

