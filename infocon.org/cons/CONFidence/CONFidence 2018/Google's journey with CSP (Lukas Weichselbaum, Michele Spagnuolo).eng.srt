1
00:00:01,860 --> 00:00:07,180
hello hello everyone<font color="#CCCCCC"> really</font><font color="#E5E5E5"> get to be</font>

2
00:00:06,580 --> 00:00:09,639
<font color="#E5E5E5">here today</font>

3
00:00:07,180 --> 00:00:11,980
welcome to the<font color="#CCCCCC"> SONA I think you're</font><font color="#E5E5E5"> lucky</font>

4
00:00:09,639 --> 00:00:14,018
<font color="#CCCCCC">because it's not that hot yet and the</font>

5
00:00:11,980 --> 00:00:17,529
UBS coffee stand has already<font color="#CCCCCC"> opened so</font>

6
00:00:14,019 --> 00:00:19,630
we caffeinated yeah<font color="#E5E5E5"> we'll be talking</font>

7
00:00:17,529 --> 00:00:21,870
about defense<font color="#E5E5E5"> and tech techniques for</font>

8
00:00:19,630 --> 00:00:25,060
<font color="#E5E5E5">modern web applications</font>

9
00:00:21,870 --> 00:00:27,280
this is<font color="#E5E5E5"> Michaela I'm</font><font color="#CCCCCC"> Lucas we're both</font>

10
00:00:25,060 --> 00:00:32,528
working<font color="#E5E5E5"> in a special focus area at</font>

11
00:00:27,280 --> 00:00:34,149
Google in Zurich<font color="#CCCCCC"> the last you know two</font>

12
00:00:32,529 --> 00:00:37,719
<font color="#CCCCCC">or three</font><font color="#E5E5E5"> years we basically focused on</font>

13
00:00:34,149 --> 00:00:39,280
stuff like content<font color="#E5E5E5"> security policy</font><font color="#CCCCCC"> we</font>

14
00:00:37,719 --> 00:00:42,309
did a year<font color="#CCCCCC"> of research it was a</font><font color="#E5E5E5"> really</font>

15
00:00:39,280 --> 00:00:44,589
bad<font color="#E5E5E5"> shape</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> tried to get</font><font color="#E5E5E5"> it working</font>

16
00:00:42,309 --> 00:00:46,899
at Google<font color="#E5E5E5"> which was a very interesting</font>

17
00:00:44,589 --> 00:00:49,210
<font color="#E5E5E5">task</font><font color="#CCCCCC"> and we wanted to</font><font color="#E5E5E5"> share some of our</font>

18
00:00:46,899 --> 00:00:52,300
things and lessons we learned but<font color="#E5E5E5"> we</font>

19
00:00:49,210 --> 00:00:55,239
also want to talk<font color="#E5E5E5"> about a shiny new</font>

20
00:00:52,300 --> 00:00:58,120
stuff<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> that is not even</font><font color="#E5E5E5"> fully</font>

21
00:00:55,239 --> 00:01:00,629
<font color="#CCCCCC">Specht yet but it's kind of very</font>

22
00:00:58,120 --> 00:01:03,729
promising in our eyes<font color="#E5E5E5"> to you know</font>

23
00:01:00,629 --> 00:01:06,160
mitigate some of<font color="#E5E5E5"> the current and</font>

24
00:01:03,729 --> 00:01:09,429
<font color="#E5E5E5">upcoming threats in web applications</font>

25
00:01:06,160 --> 00:01:12,850
these<font color="#E5E5E5"> days so we will start with content</font>

26
00:01:09,430 --> 00:01:16,360
<font color="#CCCCCC">security policy I just want to get a</font>

27
00:01:12,850 --> 00:01:18,789
super quick feeling for who<font color="#CCCCCC"> few</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font>

28
00:01:16,360 --> 00:01:21,250
have heard<font color="#CCCCCC"> about it before maybe just</font>

29
00:01:18,790 --> 00:01:22,870
raise<font color="#CCCCCC"> your hands so I know that</font><font color="#E5E5E5"> awesome</font>

30
00:01:21,250 --> 00:01:27,370
<font color="#E5E5E5">there are some people</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> have</font>

31
00:01:22,870 --> 00:01:29,250
<font color="#E5E5E5">heard about it exactly</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so for the</font>

32
00:01:27,370 --> 00:01:32,050
others<font color="#CCCCCC"> I'll do like a super quick</font>

33
00:01:29,250 --> 00:01:34,210
<font color="#CCCCCC">run-through like not more</font><font color="#E5E5E5"> than two or</font>

34
00:01:32,050 --> 00:01:38,140
three<font color="#E5E5E5"> minutes</font><font color="#CCCCCC"> so you basically</font><font color="#E5E5E5"> get an</font>

35
00:01:34,210 --> 00:01:41,589
idea what the first<font color="#CCCCCC"> part is about</font><font color="#E5E5E5"> so</font>

36
00:01:38,140 --> 00:01:46,720
content<font color="#CCCCCC"> security policy is in theory</font><font color="#E5E5E5"> as</font>

37
00:01:41,590 --> 00:01:49,000
simple as a response header for HTTP

38
00:01:46,720 --> 00:01:51,429
responses it's interpreted by<font color="#E5E5E5"> the</font>

39
00:01:49,000 --> 00:01:54,010
browser<font color="#CCCCCC"> and it can be used by developers</font>

40
00:01:51,430 --> 00:01:58,150
<font color="#CCCCCC">to lock down the application in certain</font>

41
00:01:54,010 --> 00:01:59,770
ways<font color="#CCCCCC"> most importantly</font><font color="#E5E5E5"> to highlight here</font>

42
00:01:58,150 --> 00:02:02,770
this is a<font color="#CCCCCC"> defense-in-depth mechanism</font>

43
00:01:59,770 --> 00:02:06,580
right so it's not a replacement for

44
00:02:02,770 --> 00:02:09,340
secure coding practices nor for doing a

45
00:02:06,580 --> 00:02:12,730
careful<font color="#E5E5E5"> input validation or output</font>

46
00:02:09,340 --> 00:02:15,380
encoding<font color="#CCCCCC"> of user or attacker provided</font>

47
00:02:12,730 --> 00:02:17,299
content right so it's

48
00:02:15,380 --> 00:02:19,670
safety net<font color="#E5E5E5"> if you have a</font><font color="#CCCCCC"> critical</font>

49
00:02:17,300 --> 00:02:21,560
application like a banking app or Gmail

50
00:02:19,670 --> 00:02:23,480
right<font color="#E5E5E5"> there's a lot of secure coding</font>

51
00:02:21,560 --> 00:02:25,790
practices<font color="#E5E5E5"> but every now and then because</font>

52
00:02:23,480 --> 00:02:27,170
<font color="#CCCCCC">the</font><font color="#E5E5E5"> copay this is so big there will be a</font>

53
00:02:25,790 --> 00:02:29,299
bark right there will be<font color="#E5E5E5"> across</font><font color="#CCCCCC"> the</font>

54
00:02:27,170 --> 00:02:32,269
scripting issue and it's very good to

55
00:02:29,300 --> 00:02:33,740
<font color="#E5E5E5">have something that protects the user in</font>

56
00:02:32,270 --> 00:02:38,630
the<font color="#CCCCCC"> case that you</font><font color="#E5E5E5"> have missed something</font>

57
00:02:33,740 --> 00:02:40,340
<font color="#CCCCCC">in your product what is</font><font color="#E5E5E5"> USB not</font><font color="#CCCCCC"> it's all</font>

58
00:02:38,630 --> 00:02:42,680
it's not a mechanism<font color="#E5E5E5"> to prevent</font><font color="#CCCCCC"> a data</font>

59
00:02:40,340 --> 00:02:44,810
exfiltration<font color="#CCCCCC"> I have a slide later on</font>

60
00:02:42,680 --> 00:02:48,740
that but we're just<font color="#E5E5E5"> seeing it used as</font>

61
00:02:44,810 --> 00:02:53,090
that quite often in practice<font color="#CCCCCC"> so I just</font>

62
00:02:48,740 --> 00:02:56,090
just wanted<font color="#E5E5E5"> to bust some myths here</font><font color="#CCCCCC"> CSP</font>

63
00:02:53,090 --> 00:02:58,310
is terribly complex<font color="#CCCCCC"> it's around four I</font>

64
00:02:56,090 --> 00:03:01,940
don't a lot many years now

65
00:02:58,310 --> 00:03:05,440
<font color="#CCCCCC">and over time</font><font color="#E5E5E5"> they have you</font><font color="#CCCCCC"> know they</font>

66
00:03:01,940 --> 00:03:10,060
were adding new<font color="#CCCCCC"> stuff to</font><font color="#E5E5E5"> the spec and</font>

67
00:03:05,440 --> 00:03:12,890
it's basically doing<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of things</font>

68
00:03:10,060 --> 00:03:15,920
<font color="#E5E5E5">unfortunately not</font><font color="#CCCCCC"> very well for most of</font>

69
00:03:12,890 --> 00:03:18,709
the<font color="#CCCCCC"> cases but if you know</font><font color="#E5E5E5"> the pitfalls</font>

70
00:03:15,920 --> 00:03:21,530
<font color="#CCCCCC">you can use it in a</font><font color="#E5E5E5"> very powerful way</font>

71
00:03:18,710 --> 00:03:24,290
<font color="#E5E5E5">and this is something we will</font><font color="#CCCCCC"> talk about</font>

72
00:03:21,530 --> 00:03:25,880
today I'll just<font color="#E5E5E5"> highlight the most</font>

73
00:03:24,290 --> 00:03:30,519
important use<font color="#CCCCCC"> cases - might be</font><font color="#E5E5E5"> a dress</font>

74
00:03:25,880 --> 00:03:34,250
<font color="#E5E5E5">as well first of all cross scripting</font>

75
00:03:30,520 --> 00:03:37,520
this is<font color="#E5E5E5"> web threat that we are still</font>

76
00:03:34,250 --> 00:03:40,430
<font color="#CCCCCC">facing nowadays there's good frameworks</font>

77
00:03:37,520 --> 00:03:41,540
that<font color="#E5E5E5"> help you to prevent it</font><font color="#CCCCCC"> - have from</font>

78
00:03:40,430 --> 00:03:45,950
the<font color="#E5E5E5"> first place but there's a lot of</font>

79
00:03:41,540 --> 00:03:47,840
<font color="#E5E5E5">legacy apps and there's other cases</font>

80
00:03:45,950 --> 00:03:49,850
where you will still have XSS<font color="#E5E5E5"> and at</font>

81
00:03:47,840 --> 00:03:52,070
<font color="#E5E5E5">Google it's still the number one big</font>

82
00:03:49,850 --> 00:03:53,690
issue<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> reported by external</font>

83
00:03:52,070 --> 00:03:56,510
<font color="#CCCCCC">security researchers so far</font><font color="#E5E5E5"> especially</font>

84
00:03:53,690 --> 00:04:00,670
<font color="#E5E5E5">for us it's a big</font><font color="#CCCCCC"> concern and we're</font>

85
00:03:56,510 --> 00:04:03,560
<font color="#CCCCCC">actually want to use</font><font color="#E5E5E5"> CSP to address that</font>

86
00:04:00,670 --> 00:04:06,140
then you piece if<font color="#E5E5E5"> you can also use CSP</font>

87
00:04:03,560 --> 00:04:08,240
<font color="#E5E5E5">to restrict UI stuff that's a bit</font>

88
00:04:06,140 --> 00:04:12,109
advanced but<font color="#E5E5E5"> in</font><font color="#CCCCCC"> theory you can for</font>

89
00:04:08,240 --> 00:04:14,480
example<font color="#CCCCCC"> also build you know</font><font color="#E5E5E5"> a tool that</font>

90
00:04:12,110 --> 00:04:16,570
<font color="#E5E5E5">X filtrates password</font><font color="#CCCCCC"> just with CSS</font>

91
00:04:14,480 --> 00:04:19,849
selectors<font color="#E5E5E5"> I have a slide on that later</font>

92
00:04:16,570 --> 00:04:21,620
<font color="#E5E5E5">so we can also restrict UI elements</font><font color="#CCCCCC"> and</font>

93
00:04:19,850 --> 00:04:27,470
then just<font color="#E5E5E5"> completely different use cases</font>

94
00:04:21,620 --> 00:04:28,820
<font color="#CCCCCC">to the you know</font><font color="#E5E5E5"> loading resources main</font>

95
00:04:27,470 --> 00:04:30,710
use case

96
00:04:28,820 --> 00:04:33,530
<font color="#CCCCCC">he was designed for</font><font color="#E5E5E5"> they kept adding new</font>

97
00:04:30,710 --> 00:04:35,599
keywords to<font color="#CCCCCC"> CSB because it was</font><font color="#E5E5E5"> like a</font>

98
00:04:33,530 --> 00:04:36,979
very<font color="#E5E5E5"> convenient delivery mechanism</font><font color="#CCCCCC"> so</font>

99
00:04:35,600 --> 00:04:39,140
for<font color="#E5E5E5"> example it can also use it</font><font color="#CCCCCC"> to</font>

100
00:04:36,980 --> 00:04:40,640
upgrade in<font color="#E5E5E5"> seeker requests or to you</font>

101
00:04:39,140 --> 00:04:44,120
<font color="#E5E5E5">know just block everything that is not</font>

102
00:04:40,640 --> 00:04:46,630
<font color="#E5E5E5">HTTP</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> also kind of convenient to</font>

103
00:04:44,120 --> 00:04:48,860
guarantee like a lower bound of security

104
00:04:46,630 --> 00:04:51,170
<font color="#CCCCCC">but it's not in the</font><font color="#E5E5E5"> focus of our talk</font>

105
00:04:48,860 --> 00:04:52,760
<font color="#CCCCCC">today and you can also restrict framing</font>

106
00:04:51,170 --> 00:04:54,770
like in the sense of like which frames

107
00:04:52,760 --> 00:04:59,690
you can<font color="#E5E5E5"> load or which frame</font><font color="#CCCCCC"> ancestors</font>

108
00:04:54,770 --> 00:05:01,940
you can like you can<font color="#E5E5E5"> be loaded in just</font>

109
00:04:59,690 --> 00:05:05,120
like mostly<font color="#E5E5E5"> for click checking you can</font>

110
00:05:01,940 --> 00:05:06,800
do it<font color="#E5E5E5"> for you know content</font><font color="#CCCCCC"> served like</font>

111
00:05:05,120 --> 00:05:08,360
if you serve user content<font color="#E5E5E5"> you could set</font>

112
00:05:06,800 --> 00:05:12,860
like a default source none to prevent

113
00:05:08,360 --> 00:05:15,440
any active<font color="#E5E5E5"> content to be rendered and SS</font>

114
00:05:12,860 --> 00:05:17,690
mentioned before some people<font color="#CCCCCC"> also</font><font color="#E5E5E5"> use it</font>

115
00:05:15,440 --> 00:05:21,050
<font color="#E5E5E5">to try</font><font color="#CCCCCC"> to prevent data exfiltration by</font>

116
00:05:17,690 --> 00:05:23,600
just you<font color="#E5E5E5"> know disallowing some fetch</font>

117
00:05:21,050 --> 00:05:24,650
actions<font color="#E5E5E5"> but just workarounds for that</font>

118
00:05:23,600 --> 00:05:28,220
and<font color="#E5E5E5"> we'll show a couple of examples</font>

119
00:05:24,650 --> 00:05:30,739
<font color="#E5E5E5">later</font><font color="#CCCCCC"> the main</font><font color="#E5E5E5"> use case is as I</font>

120
00:05:28,220 --> 00:05:35,900
mentioned mitigation against cross-site

121
00:05:30,740 --> 00:05:37,480
scripting<font color="#CCCCCC"> we did a CCS study two two</font><font color="#E5E5E5"> and</font>

122
00:05:35,900 --> 00:05:40,940
a half years ago<font color="#E5E5E5"> four years ago and we</font>

123
00:05:37,480 --> 00:05:43,970
<font color="#E5E5E5">basically used the</font><font color="#CCCCCC"> Google web crawler to</font>

124
00:05:40,940 --> 00:05:47,360
find all the<font color="#CCCCCC"> CSPs in the internet that</font>

125
00:05:43,970 --> 00:05:49,070
<font color="#CCCCCC">were publicly accessible and they were</font>

126
00:05:47,360 --> 00:05:51,590
all of<font color="#E5E5E5"> them were like kind of whitelist</font>

127
00:05:49,070 --> 00:05:56,030
based<font color="#E5E5E5"> I will talk</font><font color="#CCCCCC"> about that in a second</font>

128
00:05:51,590 --> 00:05:58,580
<font color="#E5E5E5">and these</font><font color="#CCCCCC"> policies can be with some</font>

129
00:05:56,030 --> 00:06:00,799
rules very easily be<font color="#E5E5E5"> black bypassed</font><font color="#CCCCCC"> like</font>

130
00:05:58,580 --> 00:06:03,229
even in an automatic<font color="#E5E5E5"> way so we came up</font>

131
00:06:00,800 --> 00:06:05,330
<font color="#CCCCCC">with a couple of rules and built a tool</font>

132
00:06:03,230 --> 00:06:08,720
that<font color="#CCCCCC"> was able to</font><font color="#E5E5E5"> bypass like more than</font>

133
00:06:05,330 --> 00:06:11,390
<font color="#E5E5E5">94%</font><font color="#CCCCCC"> of the policies automatically and</font>

134
00:06:08,720 --> 00:06:13,580
for us this was<font color="#E5E5E5"> the time every said</font><font color="#CCCCCC"> okay</font>

135
00:06:11,390 --> 00:06:16,130
<font color="#E5E5E5">white this</font><font color="#CCCCCC"> base policies are probably</font>

136
00:06:13,580 --> 00:06:18,260
<font color="#E5E5E5">not going</font><font color="#CCCCCC"> to scale</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> to do</font>

137
00:06:16,130 --> 00:06:21,110
something<font color="#E5E5E5"> different and this is when we</font>

138
00:06:18,260 --> 00:06:24,440
<font color="#E5E5E5">basically switch to</font><font color="#CCCCCC"> nonce policies and</font>

139
00:06:21,110 --> 00:06:26,360
we also<font color="#E5E5E5"> edit a strict dynamic to the</font>

140
00:06:24,440 --> 00:06:28,219
spec to actually make<font color="#CCCCCC"> it</font><font color="#E5E5E5"> work in</font>

141
00:06:26,360 --> 00:06:30,770
practice<font color="#CCCCCC"> I'll have a word</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> that in a</font>

142
00:06:28,220 --> 00:06:33,290
second as<font color="#CCCCCC"> well so we're talking</font><font color="#E5E5E5"> about a</font>

143
00:06:30,770 --> 00:06:35,780
<font color="#E5E5E5">couple</font><font color="#CCCCCC"> of flavors of CSPs that can</font>

144
00:06:33,290 --> 00:06:37,520
<font color="#E5E5E5">protect against XSS or can't just like</font>

145
00:06:35,780 --> 00:06:39,260
the right list based ones you basically

146
00:06:37,520 --> 00:06:41,599
have a script source that controls which

147
00:06:39,260 --> 00:06:42,650
scripts can<font color="#CCCCCC"> be loaded and the whitelist</font>

148
00:06:41,600 --> 00:06:44,660
<font color="#E5E5E5">one is for</font><font color="#CCCCCC"> example</font>

149
00:06:42,650 --> 00:06:46,159
just a check so google.com<font color="#E5E5E5"> so the</font>

150
00:06:44,660 --> 00:06:49,160
<font color="#CCCCCC">browser will only be allowed to</font><font color="#E5E5E5"> load</font>

151
00:06:46,160 --> 00:06:52,250
scripts from<font color="#E5E5E5"> that address right</font>

152
00:06:49,160 --> 00:06:54,110
these can be trivially bypassed<font color="#CCCCCC"> then</font>

153
00:06:52,250 --> 00:06:56,389
there's like<font color="#E5E5E5"> an on space this piece is</font>

154
00:06:54,110 --> 00:06:57,770
similar but you have a random<font color="#E5E5E5"> nonce</font><font color="#CCCCCC"> I'll</font>

155
00:06:56,389 --> 00:07:00,020
show you in a second how that works<font color="#E5E5E5"> and</font>

156
00:06:57,770 --> 00:07:02,719
only script tags that have this non

157
00:07:00,020 --> 00:07:04,639
substitute<font color="#E5E5E5"> matching the</font><font color="#CCCCCC"> one in</font><font color="#E5E5E5"> the CSP</font>

158
00:07:02,720 --> 00:07:08,300
will be executed<font color="#E5E5E5"> and then then you</font><font color="#CCCCCC"> can</font>

159
00:07:04,639 --> 00:07:10,940
also use hashes so<font color="#CCCCCC"> you can hash an eland</font>

160
00:07:08,300 --> 00:07:14,539
script put the hash in the policy<font color="#E5E5E5"> and</font>

161
00:07:10,940 --> 00:07:18,699
only if the hashes match the

162
00:07:14,539 --> 00:07:22,669
corresponding<font color="#CCCCCC"> script will be executed so</font>

163
00:07:18,699 --> 00:07:25,729
super quick intro how does a trivial<font color="#CCCCCC"> why</font>

164
00:07:22,669 --> 00:07:28,130
<font color="#E5E5E5">at</font><font color="#CCCCCC"> least CSP work</font><font color="#E5E5E5"> on the right side</font><font color="#CCCCCC"> you</font>

165
00:07:25,729 --> 00:07:31,010
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> content security policy response</font>

166
00:07:28,130 --> 00:07:33,650
header<font color="#E5E5E5"> sent to the browser and on the</font>

167
00:07:31,010 --> 00:07:35,960
left<font color="#E5E5E5"> side you have what the HTML markup</font>

168
00:07:33,650 --> 00:07:38,539
is trying to do<font color="#E5E5E5"> so in this example you</font>

169
00:07:35,960 --> 00:07:41,780
<font color="#CCCCCC">have for example a script here</font><font color="#E5E5E5"> yep</font><font color="#CCCCCC"> comm</font>

170
00:07:38,539 --> 00:07:45,259
<font color="#E5E5E5">and since yep top comm is on the script</font>

171
00:07:41,780 --> 00:07:47,599
was<font color="#CCCCCC"> write list it will</font><font color="#E5E5E5"> be allowed to</font>

172
00:07:45,259 --> 00:07:49,910
load by<font color="#E5E5E5"> the browser if you</font><font color="#CCCCCC"> have a markup</font>

173
00:07:47,599 --> 00:07:52,729
injection<font color="#CCCCCC"> box somewhere</font><font color="#E5E5E5"> like a XSS</font><font color="#CCCCCC"> write</font>

174
00:07:49,910 --> 00:07:55,460
and<font color="#E5E5E5"> attacker</font><font color="#CCCCCC"> injects</font><font color="#E5E5E5"> a new script tag</font>

175
00:07:52,729 --> 00:07:57,710
from<font color="#CCCCCC"> attacker calm</font><font color="#E5E5E5"> the browser will say</font>

176
00:07:55,460 --> 00:08:01,580
attacker.com is not on my whitelist<font color="#E5E5E5"> I'll</font>

177
00:07:57,710 --> 00:08:02,960
block it<font color="#CCCCCC"> so I will</font><font color="#E5E5E5"> not execute same for</font>

178
00:08:01,580 --> 00:08:03,320
inline scripts they will be blocked as

179
00:08:02,960 --> 00:08:05,659
well

180
00:08:03,320 --> 00:08:06,860
because in order to<font color="#CCCCCC"> they're like</font>

181
00:08:05,659 --> 00:08:08,449
generally blocked in a whitelist

182
00:08:06,860 --> 00:08:11,810
scenario<font color="#CCCCCC"> unless you have</font><font color="#E5E5E5"> unsafe inline</font>

183
00:08:08,449 --> 00:08:14,240
which is completely which competitive

184
00:08:11,810 --> 00:08:15,470
<font color="#E5E5E5">finds like basically makes your policy</font>

185
00:08:14,240 --> 00:08:18,650
completely useless<font color="#E5E5E5"> in the first place</font>

186
00:08:15,470 --> 00:08:20,979
but yeah so<font color="#E5E5E5"> don't do this because this</font>

187
00:08:18,650 --> 00:08:23,210
is<font color="#CCCCCC"> like</font><font color="#E5E5E5"> civilly broken there's a paper</font>

188
00:08:20,979 --> 00:08:25,400
there's a lot of bypasses<font color="#E5E5E5"> we have</font>

189
00:08:23,210 --> 00:08:30,830
covered<font color="#CCCCCC"> that in</font><font color="#E5E5E5"> the past two years</font><font color="#CCCCCC"> just</font>

190
00:08:25,400 --> 00:08:32,419
<font color="#CCCCCC">a summary but I mean</font><font color="#E5E5E5"> just hosting anger</font>

191
00:08:30,830 --> 00:08:34,159
and loading angular and your domain<font color="#E5E5E5"> can</font>

192
00:08:32,419 --> 00:08:37,789
be<font color="#E5E5E5"> enough</font><font color="#CCCCCC"> to bypass the CSP if you use</font>

193
00:08:34,159 --> 00:08:39,049
white lists it's very bad non-space CSP

194
00:08:37,789 --> 00:08:41,510
is much better<font color="#E5E5E5"> in that regard</font>

195
00:08:39,049 --> 00:08:45,099
you basically just define random<font color="#E5E5E5"> notes</font>

196
00:08:41,510 --> 00:08:46,700
and all script tags on the page must

197
00:08:45,100 --> 00:08:49,540
have this nonce

198
00:08:46,700 --> 00:08:51,770
<font color="#CCCCCC">as an attribute</font><font color="#E5E5E5"> and only if they match</font>

199
00:08:49,540 --> 00:08:53,779
<font color="#CCCCCC">the tag will be executed by the</font><font color="#E5E5E5"> browser</font>

200
00:08:51,770 --> 00:08:55,040
<font color="#E5E5E5">there's a big advantage you don't have</font>

201
00:08:53,779 --> 00:08:56,570
to come<font color="#CCCCCC"> up with a whitelist</font>

202
00:08:55,040 --> 00:08:58,189
so your application<font color="#CCCCCC"> will</font>

203
00:08:56,570 --> 00:09:00,170
not randomly break if you<font color="#E5E5E5"> change paths</font>

204
00:08:58,190 --> 00:09:03,320
which happens quite<font color="#E5E5E5"> often in practice</font>

205
00:09:00,170 --> 00:09:08,719
unfortunately<font color="#E5E5E5"> and there's no</font><font color="#CCCCCC"> JSONP like</font>

206
00:09:03,320 --> 00:09:11,750
bypasses<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's usually much easier</font>

207
00:09:08,720 --> 00:09:13,220
<font color="#CCCCCC">and better to</font><font color="#E5E5E5"> do it this way so these</font>

208
00:09:11,750 --> 00:09:15,980
will execute<font color="#E5E5E5"> because they have the</font>

209
00:09:13,220 --> 00:09:18,200
random<font color="#E5E5E5"> nonce</font><font color="#CCCCCC"> same as in the policy these</font>

210
00:09:15,980 --> 00:09:20,510
nonce has to be random for every<font color="#E5E5E5"> single</font>

211
00:09:18,200 --> 00:09:23,360
<font color="#E5E5E5">response right otherwise the attacker</font>

212
00:09:20,510 --> 00:09:25,910
can guess it or knows it right an

213
00:09:23,360 --> 00:09:28,280
attacker can inject script<font color="#CCCCCC"> tags but it</font>

214
00:09:25,910 --> 00:09:30,260
does he does not or don't know<font color="#E5E5E5"> the nonce</font>

215
00:09:28,280 --> 00:09:33,350
attribute<font color="#E5E5E5"> so again the browser will not</font>

216
00:09:30,260 --> 00:09:36,680
<font color="#E5E5E5">execute it</font><font color="#CCCCCC"> what's the problem</font><font color="#E5E5E5"> with that</font>

217
00:09:33,350 --> 00:09:39,380
the problem<font color="#CCCCCC"> is if you load a Twitter</font>

218
00:09:36,680 --> 00:09:43,040
widget or a I don't<font color="#E5E5E5"> know +1 button or</font>

219
00:09:39,380 --> 00:09:46,340
<font color="#E5E5E5">whatever other JavaScript library</font><font color="#CCCCCC"> that</font>

220
00:09:43,040 --> 00:09:49,069
dynamically creates script tags<font color="#E5E5E5"> right it</font>

221
00:09:46,340 --> 00:09:50,690
will fail because the Twitter<font color="#E5E5E5"> library if</font>

222
00:09:49,070 --> 00:09:53,000
it does create element script<font color="#CCCCCC"> does not</font>

223
00:09:50,690 --> 00:09:55,040
know the nonce on the page<font color="#CCCCCC"> or</font><font color="#E5E5E5"> it could</font>

224
00:09:53,000 --> 00:09:58,520
find out what they don't set it<font color="#CCCCCC"> on the</font>

225
00:09:55,040 --> 00:10:00,770
child script<font color="#E5E5E5"> so it will break a lot of</font>

226
00:09:58,520 --> 00:10:02,449
<font color="#CCCCCC">things if he news</font><font color="#E5E5E5"> nonce only policy in</font>

227
00:10:00,770 --> 00:10:03,829
fact not only policies have<font color="#CCCCCC"> been around</font>

228
00:10:02,450 --> 00:10:07,400
for years<font color="#E5E5E5"> but no one is</font><font color="#CCCCCC"> using them</font>

229
00:10:03,830 --> 00:10:10,520
mostly<font color="#CCCCCC"> because of this reason</font><font color="#E5E5E5"> so what we</font>

230
00:10:07,400 --> 00:10:15,110
<font color="#E5E5E5">did we work together with chrome folks</font>

231
00:10:10,520 --> 00:10:16,790
and the w3c<font color="#E5E5E5"> people and we added a</font>

232
00:10:15,110 --> 00:10:19,280
<font color="#E5E5E5">keyword that is called strict dynamic</font><font color="#CCCCCC"> I</font>

233
00:10:16,790 --> 00:10:23,990
know the name is<font color="#E5E5E5"> bit weird but yeah it</font>

234
00:10:19,280 --> 00:10:26,360
is<font color="#CCCCCC"> but the idea is if a script tag on</font>

235
00:10:23,990 --> 00:10:28,790
the page<font color="#E5E5E5"> has announced it's already</font>

236
00:10:26,360 --> 00:10:30,950
trusted<font color="#E5E5E5"> by the developer right so if</font>

237
00:10:28,790 --> 00:10:33,530
that script tag<font color="#E5E5E5"> creates new script tags</font>

238
00:10:30,950 --> 00:10:35,570
<font color="#E5E5E5">that will be transitively blessed by the</font>

239
00:10:33,530 --> 00:10:39,230
browser so you<font color="#E5E5E5"> can basically propagate</font>

240
00:10:35,570 --> 00:10:40,820
<font color="#E5E5E5">trust to child scripts</font><font color="#CCCCCC"> this is very</font>

241
00:10:39,230 --> 00:10:43,940
convenient<font color="#CCCCCC"> because suddenly</font><font color="#E5E5E5"> you can use</font>

242
00:10:40,820 --> 00:10:46,430
<font color="#E5E5E5">nonce only a nonce policy with dynamic</font>

243
00:10:43,940 --> 00:10:48,980
<font color="#E5E5E5">with almost no refactoring on the page</font>

244
00:10:46,430 --> 00:10:54,500
<font color="#CCCCCC">and in fact this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> what we did at</font>

245
00:10:48,980 --> 00:10:56,240
Google<font color="#CCCCCC"> very successfully and the thing</font>

246
00:10:54,500 --> 00:10:58,520
is there's a lot<font color="#CCCCCC"> of backward</font>

247
00:10:56,240 --> 00:11:01,280
compatibility<font color="#CCCCCC"> quirks as well you can do</font>

248
00:10:58,520 --> 00:11:02,960
so it works actually quite<font color="#E5E5E5"> well and in</font>

249
00:11:01,280 --> 00:11:05,870
<font color="#E5E5E5">addition to that it also discards the</font>

250
00:11:02,960 --> 00:11:07,700
whitelist<font color="#E5E5E5"> so developers can not we can</font>

251
00:11:05,870 --> 00:11:09,440
up the<font color="#E5E5E5"> policy in the sense that you are</font>

252
00:11:07,700 --> 00:11:11,960
<font color="#CCCCCC">basically by possible again which is a</font>

253
00:11:09,440 --> 00:11:16,580
nice property

254
00:11:11,960 --> 00:11:18,860
the thing is<font color="#E5E5E5"> it only allows scripts that</font>

255
00:11:16,580 --> 00:11:20,750
are created through the the Dom<font color="#CCCCCC"> API</font><font color="#E5E5E5"> like</font>

256
00:11:18,860 --> 00:11:23,000
<font color="#CCCCCC">be a great element script</font><font color="#E5E5E5"> it does not</font>

257
00:11:20,750 --> 00:11:26,060
allow scripts<font color="#E5E5E5"> dynamically created</font>

258
00:11:23,000 --> 00:11:27,980
scripts to be blessed<font color="#CCCCCC"> if they are rated</font>

259
00:11:26,060 --> 00:11:32,569
<font color="#E5E5E5">for like a</font><font color="#CCCCCC"> parser inserted</font><font color="#E5E5E5"> sync</font><font color="#CCCCCC"> like</font>

260
00:11:27,980 --> 00:11:33,950
document<font color="#E5E5E5"> writer</font><font color="#CCCCCC"> in HTML will not be</font><font color="#E5E5E5"> if</font>

261
00:11:32,570 --> 00:11:39,290
you create a<font color="#E5E5E5"> script with that it will</font>

262
00:11:33,950 --> 00:11:42,020
<font color="#E5E5E5">not be blessed by strict dynamic</font><font color="#CCCCCC"> so this</font>

263
00:11:39,290 --> 00:11:45,560
is like to make the adoption easier

264
00:11:42,020 --> 00:11:47,810
right but it comes<font color="#E5E5E5"> at a cost if the</font>

265
00:11:45,560 --> 00:11:50,660
attacker or the there's like user

266
00:11:47,810 --> 00:11:52,310
provided<font color="#CCCCCC"> input here instead</font><font color="#E5E5E5"> of a</font>

267
00:11:50,660 --> 00:11:55,880
constant<font color="#CCCCCC"> he</font><font color="#E5E5E5"> right</font>

268
00:11:52,310 --> 00:12:01,579
you could<font color="#CCCCCC"> bypass the policy but</font><font color="#E5E5E5"> this is</font>

269
00:11:55,880 --> 00:12:03,110
like a special nobility<font color="#CCCCCC"> compared to all</font>

270
00:12:01,580 --> 00:12:05,240
the other cases<font color="#E5E5E5"> that are basically</font>

271
00:12:03,110 --> 00:12:07,640
blocked by by default<font color="#E5E5E5"> right like it's</font>

272
00:12:05,240 --> 00:12:12,170
all the reflected XSS<font color="#CCCCCC"> all the stored XSS</font>

273
00:12:07,640 --> 00:12:15,860
<font color="#CCCCCC">is</font><font color="#E5E5E5"> basically blocked so there's a couple</font>

274
00:12:12,170 --> 00:12:19,219
of trade-offs<font color="#E5E5E5"> and guarantees you can get</font>

275
00:12:15,860 --> 00:12:22,580
depending<font color="#E5E5E5"> what you do with non-space CSP</font>

276
00:12:19,220 --> 00:12:24,710
there is like<font color="#CCCCCC"> deployment difficulty</font>

277
00:12:22,580 --> 00:12:26,350
going<font color="#E5E5E5"> up and security guarantees going</font>

278
00:12:24,710 --> 00:12:30,020
up the further you move<font color="#E5E5E5"> up the</font><font color="#CCCCCC"> pyramid</font>

279
00:12:26,350 --> 00:12:33,830
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> bottom you have</font><font color="#E5E5E5"> a non</font><font color="#CCCCCC"> space CSP</font>

280
00:12:30,020 --> 00:12:35,810
with strict dynamic and unsafe Evo<font color="#CCCCCC"> this</font>

281
00:12:33,830 --> 00:12:39,430
gives you already quite a lot of

282
00:12:35,810 --> 00:12:42,650
<font color="#E5E5E5">guarantees for very easy rollout</font>

283
00:12:39,430 --> 00:12:45,319
properties as well<font color="#E5E5E5"> so there's no CSP</font>

284
00:12:42,650 --> 00:12:47,449
<font color="#CCCCCC">whitelist bypasses there's no reflect</font>

285
00:12:45,320 --> 00:12:49,240
classical reflected stored XSS because

286
00:12:47,450 --> 00:12:51,140
the nonce<font color="#E5E5E5"> is not known to the attacker</font>

287
00:12:49,240 --> 00:12:54,830
<font color="#CCCCCC">JavaScript your eyes will always</font><font color="#E5E5E5"> be</font>

288
00:12:51,140 --> 00:12:56,449
blocked<font color="#E5E5E5"> and it's kind of easy to deploy</font>

289
00:12:54,830 --> 00:12:59,210
<font color="#E5E5E5">if you maybe have a templating system</font>

290
00:12:56,450 --> 00:13:02,000
which also<font color="#E5E5E5"> automatically</font><font color="#CCCCCC"> nonce this</font>

291
00:12:59,210 --> 00:13:03,560
script tags<font color="#CCCCCC"> you should use a</font>

292
00:13:02,000 --> 00:13:05,360
context-sensitive templating system

293
00:13:03,560 --> 00:13:06,800
though<font color="#E5E5E5"> otherwise you should you know you</font>

294
00:13:05,360 --> 00:13:10,670
might<font color="#CCCCCC"> known the script tag that</font><font color="#E5E5E5"> has user</font>

295
00:13:06,800 --> 00:13:12,319
input in<font color="#E5E5E5"> it so that's</font><font color="#CCCCCC"> also not</font><font color="#E5E5E5"> cool the</font>

296
00:13:10,670 --> 00:13:14,240
other thing is<font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> not so good</font>

297
00:13:12,320 --> 00:13:17,720
there's some some Dom exercises are

298
00:13:14,240 --> 00:13:20,540
covered like inner<font color="#E5E5E5"> HTML sinks right but</font>

299
00:13:17,720 --> 00:13:23,360
others like Dom XSS will control the

300
00:13:20,540 --> 00:13:24,199
source of a script<font color="#CCCCCC"> are not covered</font><font color="#E5E5E5"> by</font>

301
00:13:23,360 --> 00:13:27,170
this policy

302
00:13:24,200 --> 00:13:29,000
and also if you have<font color="#E5E5E5"> unsafe evil and you</font>

303
00:13:27,170 --> 00:13:31,160
have some user using evil and<font color="#CCCCCC"> does</font><font color="#E5E5E5"> user</font>

304
00:13:29,000 --> 00:13:34,279
<font color="#E5E5E5">input users also not covered</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you can</font>

305
00:13:31,160 --> 00:13:37,610
<font color="#E5E5E5">move up you can also prevent an evil</font>

306
00:13:34,279 --> 00:13:39,079
<font color="#E5E5E5">from being used</font><font color="#CCCCCC"> some people can do</font><font color="#E5E5E5"> it</font>

307
00:13:37,610 --> 00:13:41,630
<font color="#CCCCCC">some</font><font color="#E5E5E5"> libraries need it unfortunately</font>

308
00:13:39,079 --> 00:13:44,000
<font color="#CCCCCC">very kind of working on</font><font color="#E5E5E5"> killing it at</font>

309
00:13:41,630 --> 00:13:47,300
Google<font color="#E5E5E5"> but it's still around importantly</font>

310
00:13:44,000 --> 00:13:49,250
<font color="#E5E5E5">and even better is</font><font color="#CCCCCC"> if you use nonsense</font>

311
00:13:47,300 --> 00:13:51,769
<font color="#E5E5E5">only but</font><font color="#CCCCCC"> you can only do</font><font color="#E5E5E5"> that if you</font>

312
00:13:49,250 --> 00:13:55,040
control<font color="#CCCCCC"> the full JavaScript</font><font color="#E5E5E5"> stack right</font>

313
00:13:51,769 --> 00:13:56,810
<font color="#E5E5E5">if you load libraries from somewhere</font>

314
00:13:55,040 --> 00:13:58,610
<font color="#CCCCCC">else and they don't do nonce passing</font>

315
00:13:56,810 --> 00:14:01,790
<font color="#E5E5E5">like if they do create element script</font>

316
00:13:58,610 --> 00:14:03,860
<font color="#E5E5E5">and they don't to set</font><font color="#CCCCCC"> nonce</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> nonce</font>

317
00:14:01,790 --> 00:14:05,779
from parents like if they<font color="#E5E5E5"> don't manually</font>

318
00:14:03,860 --> 00:14:07,220
pass the script on this will break<font color="#E5E5E5"> so</font>

319
00:14:05,779 --> 00:14:09,889
this requires<font color="#E5E5E5"> a lot of</font><font color="#CCCCCC"> refactoring of</font>

320
00:14:07,220 --> 00:14:12,980
your<font color="#E5E5E5"> code base</font><font color="#CCCCCC"> we're currently working</font>

321
00:14:09,889 --> 00:14:15,410
<font color="#E5E5E5">on that at Google and the nice</font><font color="#CCCCCC"> thing is</font>

322
00:14:12,980 --> 00:14:17,570
<font color="#E5E5E5">it gives you even more security</font>

323
00:14:15,410 --> 00:14:19,969
guarantees for Dom XSS as well right

324
00:14:17,570 --> 00:14:23,329
but I have to say this one<font color="#E5E5E5"> is already</font>

325
00:14:19,970 --> 00:14:25,779
quite strong for<font color="#CCCCCC"> most use cases there</font>

326
00:14:23,329 --> 00:14:28,219
are<font color="#E5E5E5"> some exceptions if you use some</font>

327
00:14:25,779 --> 00:14:31,149
JavaScript frameworks which<font color="#E5E5E5"> do like</font>

328
00:14:28,220 --> 00:14:33,380
symbolic execution on top of JavaScript

329
00:14:31,149 --> 00:14:35,089
<font color="#E5E5E5">yes and our right corner is</font><font color="#CCCCCC"> widely</font>

330
00:14:33,380 --> 00:14:38,149
spaced CSP like just don't<font color="#E5E5E5"> use</font><font color="#CCCCCC"> it</font>

331
00:14:35,089 --> 00:14:39,800
<font color="#E5E5E5">there's only very very very few</font>

332
00:14:38,149 --> 00:14:43,279
instances<font color="#E5E5E5"> where</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can use that in the</font>

333
00:14:39,800 --> 00:14:47,359
same way<font color="#E5E5E5"> here's examples how a policy</font>

334
00:14:43,279 --> 00:14:49,820
would<font color="#E5E5E5"> look like in these scenarios these</font>

335
00:14:47,360 --> 00:14:51,649
policies don't<font color="#E5E5E5"> have fall backs you can</font>

336
00:14:49,820 --> 00:14:55,130
add browser fall backs to basically<font color="#E5E5E5"> make</font>

337
00:14:51,649 --> 00:14:56,839
the policy gracefully if you know allow

338
00:14:55,130 --> 00:14:59,420
everything<font color="#E5E5E5"> if you come with like a</font>

339
00:14:56,839 --> 00:15:00,890
outdated browser like<font color="#CCCCCC"> IE</font>

340
00:14:59,420 --> 00:15:04,599
or something right you don't want users

341
00:15:00,890 --> 00:15:09,380
to break or<font color="#E5E5E5"> maybe you won't I don't</font><font color="#CCCCCC"> know</font>

342
00:15:04,600 --> 00:15:10,910
yeah<font color="#E5E5E5"> so that's that and CSP free is</font>

343
00:15:09,380 --> 00:15:12,589
actively<font color="#E5E5E5"> developed just a couple</font><font color="#CCCCCC"> of</font>

344
00:15:10,910 --> 00:15:15,040
interesting<font color="#E5E5E5"> new keywords being added</font>

345
00:15:12,589 --> 00:15:17,240
which we wanted to briefly mention

346
00:15:15,040 --> 00:15:19,459
there's<font color="#E5E5E5"> unhatched attributes</font>

347
00:15:17,240 --> 00:15:23,899
unsafe unhealthy attributes which

348
00:15:19,459 --> 00:15:26,810
basically allows you<font color="#CCCCCC"> to have inline</font>

349
00:15:23,899 --> 00:15:30,019
<font color="#CCCCCC">event handlers</font><font color="#E5E5E5"> in the markup if you hash</font>

350
00:15:26,810 --> 00:15:32,029
them because<font color="#E5E5E5"> with normal CSP inline</font>

351
00:15:30,019 --> 00:15:34,970
event handlers are kind of blocked<font color="#E5E5E5"> so</font>

352
00:15:32,029 --> 00:15:38,720
you need to refactor a lot of code

353
00:15:34,970 --> 00:15:41,180
so if you have I<font color="#E5E5E5"> don't know again</font><font color="#CCCCCC"> like</font>

354
00:15:38,720 --> 00:15:42,680
some<font color="#E5E5E5"> third-party widget or some code</font>

355
00:15:41,180 --> 00:15:45,410
base which<font color="#E5E5E5"> you cannot</font><font color="#CCCCCC"> really touch and</font>

356
00:15:42,680 --> 00:15:46,880
<font color="#CCCCCC">there's like you know two event</font><font color="#E5E5E5"> handlers</font>

357
00:15:45,410 --> 00:15:50,360
<font color="#E5E5E5">which you can't refactor you could hash</font>

358
00:15:46,880 --> 00:15:53,090
them and put use<font color="#CCCCCC"> unsafe hash attributes</font>

359
00:15:50,360 --> 00:15:54,590
to allow it it is a of course<font color="#CCCCCC"> a</font>

360
00:15:53,090 --> 00:15:57,910
<font color="#CCCCCC">trade-off right</font><font color="#E5E5E5"> you will lower security</font>

361
00:15:54,590 --> 00:16:02,090
slightly because attackers can inject

362
00:15:57,910 --> 00:16:04,689
this event<font color="#E5E5E5"> handler in other items right</font>

363
00:16:02,090 --> 00:16:08,750
<font color="#E5E5E5">so they maybe could change some actions</font>

364
00:16:04,690 --> 00:16:11,090
but on the other<font color="#CCCCCC"> hand</font><font color="#E5E5E5"> you will still get</font>

365
00:16:08,750 --> 00:16:12,350
a<font color="#E5E5E5"> lot of protection for like Dom XSS and</font>

366
00:16:11,090 --> 00:16:14,240
<font color="#CCCCCC">the other things right</font><font color="#E5E5E5"> so it still</font>

367
00:16:12,350 --> 00:16:17,870
raises<font color="#E5E5E5"> the bar and it's probably better</font>

368
00:16:14,240 --> 00:16:20,900
than not<font color="#CCCCCC"> having a CSP at all but yeah I</font>

369
00:16:17,870 --> 00:16:22,450
mean<font color="#E5E5E5"> I would only</font><font color="#CCCCCC"> use it if fighters</font>

370
00:16:20,900 --> 00:16:24,680
<font color="#E5E5E5">like no other way around it right and</font>

371
00:16:22,450 --> 00:16:28,220
then there's another<font color="#E5E5E5"> feature which is</font>

372
00:16:24,680 --> 00:16:31,219
unsafe inline attributes<font color="#CCCCCC"> this is a</font>

373
00:16:28,220 --> 00:16:33,530
proposal and<font color="#E5E5E5"> not implemented yet</font><font color="#CCCCCC"> there's</font>

374
00:16:31,220 --> 00:16:36,650
a big difference<font color="#CCCCCC"> between</font><font color="#E5E5E5"> style blocks</font>

375
00:16:33,530 --> 00:16:39,770
<font color="#E5E5E5">and inline</font><font color="#CCCCCC"> Styles so</font><font color="#E5E5E5"> you can also</font><font color="#CCCCCC"> use</font>

376
00:16:36,650 --> 00:16:41,780
CSP<font color="#E5E5E5"> to restrict style source this was</font>

377
00:16:39,770 --> 00:16:43,900
like the UI attack vector<font color="#CCCCCC"> I showed you</font>

378
00:16:41,780 --> 00:16:48,290
at the beginning

379
00:16:43,900 --> 00:16:51,620
usually developers love<font color="#E5E5E5"> inline styles</font><font color="#CCCCCC"> so</font>

380
00:16:48,290 --> 00:16:53,569
if you don't allow unsafe inline<font color="#E5E5E5"> for</font>

381
00:16:51,620 --> 00:16:55,100
style source<font color="#E5E5E5"> your application will</font>

382
00:16:53,570 --> 00:16:57,320
probably break<font color="#CCCCCC"> or you spend</font><font color="#E5E5E5"> like the</font>

383
00:16:55,100 --> 00:16:59,960
rest of your time to refactor developer

384
00:16:57,320 --> 00:17:03,620
code to move out styles or into style

385
00:16:59,960 --> 00:17:07,459
blocks right so the idea<font color="#CCCCCC"> is you can use</font>

386
00:17:03,620 --> 00:17:09,349
unsafe inline<font color="#E5E5E5"> attributes which means you</font>

387
00:17:07,459 --> 00:17:11,839
will<font color="#E5E5E5"> not have to refactor inline</font><font color="#CCCCCC"> Styles</font>

388
00:17:09,349 --> 00:17:13,938
<font color="#E5E5E5">so this will</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> but all the inline</font>

389
00:17:11,839 --> 00:17:16,119
script blocks will need to be nonce

390
00:17:13,939 --> 00:17:20,660
<font color="#CCCCCC">or hashed</font><font color="#E5E5E5"> sorry will need to be hashed</font>

391
00:17:16,119 --> 00:17:24,409
so or<font color="#CCCCCC"> no yeah also announced</font><font color="#E5E5E5"> so the</font>

392
00:17:20,660 --> 00:17:26,839
thing is why does it make sense style

393
00:17:24,410 --> 00:17:28,790
blocks<font color="#E5E5E5"> have more power than inline</font>

394
00:17:26,839 --> 00:17:32,960
<font color="#CCCCCC">Styles for</font><font color="#E5E5E5"> example there's a</font>

395
00:17:28,790 --> 00:17:37,190
<font color="#CCCCCC">proof-of-concept</font><font color="#E5E5E5"> on github</font><font color="#CCCCCC"> that is like</font>

396
00:17:32,960 --> 00:17:39,920
basically a CSS<font color="#E5E5E5"> key logger</font><font color="#CCCCCC"> and this key</font>

397
00:17:37,190 --> 00:17:43,460
logger needs<font color="#E5E5E5"> CSS free query selectors</font>

398
00:17:39,920 --> 00:17:47,990
<font color="#E5E5E5">and these query selectors only work in</font>

399
00:17:43,460 --> 00:17:48,590
style blocks<font color="#E5E5E5"> so by forcing developers to</font>

400
00:17:47,990 --> 00:17:50,390
hash on

401
00:17:48,590 --> 00:17:51,949
style blocks<font color="#E5E5E5"> an attacker cannot inject</font>

402
00:17:50,390 --> 00:17:56,080
<font color="#E5E5E5">any other style blocks if you</font><font color="#CCCCCC"> have a</font>

403
00:17:51,950 --> 00:17:56,080
markup injection vulnerability right and

404
00:17:56,320 --> 00:17:59,059
<font color="#E5E5E5">yeah</font>

405
00:17:57,500 --> 00:18:02,000
it's a<font color="#CCCCCC"> trade-off</font><font color="#E5E5E5"> because you could still</font>

406
00:17:59,059 --> 00:18:03,918
inject arbitrary<font color="#CCCCCC"> UI elements with</font>

407
00:18:02,000 --> 00:18:07,730
arbitrary<font color="#E5E5E5"> inline</font><font color="#CCCCCC"> styles but</font><font color="#E5E5E5"> you cannot</font>

408
00:18:03,919 --> 00:18:08,960
exfiltrate<font color="#CCCCCC"> user passwords</font><font color="#E5E5E5"> right it's a</font>

409
00:18:07,730 --> 00:18:11,120
very<font color="#CCCCCC"> interesting proof</font><font color="#E5E5E5"> of concept is</font>

410
00:18:08,960 --> 00:18:15,650
linked<font color="#E5E5E5"> at the bottom</font><font color="#CCCCCC"> I should totally</font>

411
00:18:11,120 --> 00:18:19,418
<font color="#E5E5E5">check it out</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> promise</font><font color="#CCCCCC"> the slide on</font>

412
00:18:15,650 --> 00:18:22,760
why<font color="#E5E5E5"> not use CSP for data exfiltration</font>

413
00:18:19,419 --> 00:18:25,580
<font color="#CCCCCC">the TLDR</font><font color="#E5E5E5"> is as soon as you can execute</font>

414
00:18:22,760 --> 00:18:27,679
<font color="#E5E5E5">scripts it's game over anyway right</font><font color="#CCCCCC"> so</font>

415
00:18:25,580 --> 00:18:30,080
the the<font color="#CCCCCC"> main goal is prevent script</font>

416
00:18:27,679 --> 00:18:33,890
execution in<font color="#E5E5E5"> the first place</font><font color="#CCCCCC"> otherwise</font>

417
00:18:30,080 --> 00:18:36,320
<font color="#CCCCCC">you have lost as a you</font><font color="#E5E5E5"> know defender in</font>

418
00:18:33,890 --> 00:18:38,510
this case so if you have script

419
00:18:36,320 --> 00:18:43,309
execution<font color="#CCCCCC"> it doesn't really help you if</font>

420
00:18:38,510 --> 00:18:45,230
the CSP blocks<font color="#E5E5E5"> you know images and fonts</font>

421
00:18:43,309 --> 00:18:47,120
<font color="#E5E5E5">and everything to prevent you from</font>

422
00:18:45,230 --> 00:18:49,159
basically exfiltrating the cookie that

423
00:18:47,120 --> 00:18:52,010
<font color="#CCCCCC">you have stole because</font><font color="#E5E5E5"> just like so</font><font color="#CCCCCC"> many</font>

424
00:18:49,159 --> 00:18:54,590
<font color="#CCCCCC">other ways that</font><font color="#E5E5E5"> are not governed by CSP</font>

425
00:18:52,010 --> 00:18:59,500
<font color="#E5E5E5">to actually exfiltrate data so for</font>

426
00:18:54,590 --> 00:19:01,029
example you could just write a link tag

427
00:18:59,500 --> 00:19:03,890
<font color="#CCCCCC">evil.com</font>

428
00:19:01,029 --> 00:19:06,020
<font color="#E5E5E5">append to cookie and then click it right</font>

429
00:19:03,890 --> 00:19:08,750
<font color="#E5E5E5">so that</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> exfiltrate the cookie back</font>

430
00:19:06,020 --> 00:19:12,440
to evil.com<font color="#CCCCCC"> and since navigation is not</font>

431
00:19:08,750 --> 00:19:14,419
part of CSP<font color="#CCCCCC"> it</font><font color="#E5E5E5"> cannot block</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so</font>

432
00:19:12,440 --> 00:19:17,480
there's a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> other possibilities</font>

433
00:19:14,419 --> 00:19:19,789
<font color="#CCCCCC">like postmessage</font><font color="#E5E5E5"> DNS prefetch window dot</font>

434
00:19:17,480 --> 00:19:22,399
<font color="#CCCCCC">open you can use all of these to</font>

435
00:19:19,789 --> 00:19:24,679
exfiltrate data<font color="#E5E5E5"> so the main goal really</font>

436
00:19:22,399 --> 00:19:26,770
should be prevent the attacker<font color="#E5E5E5"> from</font>

437
00:19:24,679 --> 00:19:30,020
gaining<font color="#E5E5E5"> script access in the first place</font>

438
00:19:26,770 --> 00:19:32,870
<font color="#CCCCCC">don't try to prevent data exfiltration</font>

439
00:19:30,020 --> 00:19:35,510
because it ideally it slows the attacker

440
00:19:32,870 --> 00:19:36,860
down a bit but it's not<font color="#CCCCCC"> a real it's not</font>

441
00:19:35,510 --> 00:19:41,390
<font color="#E5E5E5">a strong education gives you a false</font>

442
00:19:36,860 --> 00:19:45,320
<font color="#CCCCCC">sense of</font><font color="#E5E5E5"> security right</font><font color="#CCCCCC"> very briefly</font><font color="#E5E5E5"> CSP</font>

443
00:19:41,390 --> 00:19:48,830
at<font color="#E5E5E5"> Google with this non-space</font><font color="#CCCCCC"> DSPs</font><font color="#E5E5E5"> we</font>

444
00:19:45,320 --> 00:19:50,840
were basically<font color="#E5E5E5"> able to roll out CSP</font><font color="#CCCCCC"> so</font>

445
00:19:48,830 --> 00:19:52,760
far<font color="#E5E5E5"> to over 50% of all the outgoing</font>

446
00:19:50,840 --> 00:19:56,270
traffic<font color="#E5E5E5"> all the important applications</font>

447
00:19:52,760 --> 00:20:01,330
<font color="#E5E5E5">like accounts of</font><font color="#CCCCCC"> google.com Gmail Drive</font>

448
00:19:56,270 --> 00:20:03,040
<font color="#CCCCCC">they have it</font><font color="#E5E5E5"> it was a lot of work</font>

449
00:20:01,330 --> 00:20:05,370
but this would<font color="#CCCCCC"> not have</font><font color="#E5E5E5"> been possible</font>

450
00:20:03,040 --> 00:20:08,409
with the<font color="#CCCCCC"> vitalist only approach right</font>

451
00:20:05,370 --> 00:20:10,000
<font color="#E5E5E5">also the whitelist only approach was not</font>

452
00:20:08,410 --> 00:20:12,070
very secure

453
00:20:10,000 --> 00:20:16,420
like he doesn't was not yielding many

454
00:20:12,070 --> 00:20:19,060
security guarantees and yeah<font color="#CCCCCC"> we keep</font>

455
00:20:16,420 --> 00:20:21,100
<font color="#CCCCCC">working on it</font><font color="#E5E5E5"> the goal would be hundred</font>

456
00:20:19,060 --> 00:20:23,320
percent<font color="#CCCCCC"> but</font><font color="#E5E5E5"> that's a bit unrealistic we</font>

457
00:20:21,100 --> 00:20:26,439
<font color="#E5E5E5">basically focus on the on the</font><font color="#CCCCCC"> high-value</font>

458
00:20:23,320 --> 00:20:30,389
<font color="#E5E5E5">targets right very very</font><font color="#CCCCCC"> important data</font>

459
00:20:26,440 --> 00:20:33,670
lives in and yeah<font color="#E5E5E5"> we are also currently</font>

460
00:20:30,390 --> 00:20:35,380
trying to<font color="#E5E5E5"> remove unsafe evil just still</font>

461
00:20:33,670 --> 00:20:38,020
a<font color="#E5E5E5"> couple of libraries which we have to</font>

462
00:20:35,380 --> 00:20:39,220
refactor to not use evil in the<font color="#E5E5E5"> first</font>

463
00:20:38,020 --> 00:20:42,820
place so we<font color="#E5E5E5"> can block it for the entire</font>

464
00:20:39,220 --> 00:20:44,530
<font color="#E5E5E5">domain and we also</font><font color="#CCCCCC"> working on teaching</font>

465
00:20:42,820 --> 00:20:45,879
libraries to do manual<font color="#CCCCCC"> nouns passing</font>

466
00:20:44,530 --> 00:20:47,139
since we are in the lucky position to

467
00:20:45,880 --> 00:20:49,780
control the entire<font color="#CCCCCC"> travel script</font>

468
00:20:47,140 --> 00:20:53,620
ecosystem<font color="#E5E5E5"> so we can use not only</font>

469
00:20:49,780 --> 00:20:57,340
policies<font color="#E5E5E5"> but again the strict economic</font>

470
00:20:53,620 --> 00:21:01,389
ones are for the<font color="#E5E5E5"> use case we have here</font>

471
00:20:57,340 --> 00:21:04,810
<font color="#CCCCCC">quite strong we don't have any crazy</font>

472
00:21:01,390 --> 00:21:07,150
libraries that<font color="#E5E5E5"> inject like any gadgets</font>

473
00:21:04,810 --> 00:21:09,480
<font color="#CCCCCC">that could bypass</font><font color="#E5E5E5"> strict dynamic usually</font>

474
00:21:07,150 --> 00:21:12,820
so<font color="#CCCCCC"> for</font><font color="#E5E5E5"> our use case it's quite</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> and</font>

475
00:21:09,480 --> 00:21:15,010
of course during this journey we also

476
00:21:12,820 --> 00:21:17,590
developed a lot<font color="#E5E5E5"> of tools which I</font>

477
00:21:15,010 --> 00:21:20,230
recommend<font color="#CCCCCC"> using there's a CSP - a balla</font>

478
00:21:17,590 --> 00:21:23,139
<font color="#CCCCCC">eater if google calm it</font><font color="#E5E5E5"> basically you</font>

479
00:21:20,230 --> 00:21:26,110
paste our CSP and usual tell you<font color="#E5E5E5"> in how</font>

480
00:21:23,140 --> 00:21:30,550
<font color="#E5E5E5">many ways it is broken</font><font color="#CCCCCC"> so if there's</font>

481
00:21:26,110 --> 00:21:32,889
anything<font color="#CCCCCC"> red you</font><font color="#E5E5E5"> have problem so if you</font>

482
00:21:30,550 --> 00:21:34,960
<font color="#E5E5E5">developing a web app</font><font color="#CCCCCC"> and you want to</font>

483
00:21:32,890 --> 00:21:37,240
<font color="#E5E5E5">roll out CSP maybe run it through here</font>

484
00:21:34,960 --> 00:21:41,380
<font color="#E5E5E5">you'll get some ideas how to improve it</font>

485
00:21:37,240 --> 00:21:44,290
maybe<font color="#E5E5E5"> and internally we</font><font color="#CCCCCC"> also have a lot</font>

486
00:21:41,380 --> 00:21:46,000
of<font color="#E5E5E5"> tools that</font><font color="#CCCCCC"> power</font><font color="#E5E5E5"> CSP violation</font>

487
00:21:44,290 --> 00:21:48,730
reports coming<font color="#E5E5E5"> back from the browsers</font>

488
00:21:46,000 --> 00:21:50,680
because this is like<font color="#E5E5E5"> a</font><font color="#CCCCCC"> giant a really</font>

489
00:21:48,730 --> 00:21:53,830
huge task because there's so much noise

490
00:21:50,680 --> 00:21:57,010
by browser extensions and antivirus is

491
00:21:53,830 --> 00:22:00,129
injecting<font color="#E5E5E5"> you know weird scripts on</font>

492
00:21:57,010 --> 00:22:03,610
every page causing violations everywhere

493
00:22:00,130 --> 00:22:05,800
<font color="#E5E5E5">so this is basically a</font><font color="#CCCCCC"> two views</font>

494
00:22:03,610 --> 00:22:08,500
internally to crunch<font color="#E5E5E5"> down the violations</font>

495
00:22:05,800 --> 00:22:12,220
<font color="#E5E5E5">to deduplication noise reduction</font><font color="#CCCCCC"> it's a</font>

496
00:22:08,500 --> 00:22:14,350
bit fuzzy<font color="#CCCCCC"> but yeah</font><font color="#E5E5E5"> and with that I will</font>

497
00:22:12,220 --> 00:22:37,539
hand<font color="#E5E5E5"> over to</font><font color="#CCCCCC"> my colleague</font><font color="#E5E5E5"> Michaela</font>

498
00:22:14,350 --> 00:22:39,939
we'll talk about all the<font color="#E5E5E5"> other new</font><font color="#CCCCCC"> hi hi</font>

499
00:22:37,539 --> 00:22:41,679
<font color="#E5E5E5">everyone</font><font color="#CCCCCC"> thanks for coming so numerous I</font>

500
00:22:39,940 --> 00:22:46,539
know<font color="#E5E5E5"> you guys but it's really hot so</font>

501
00:22:41,679 --> 00:22:49,120
<font color="#E5E5E5">thanks again okay so</font><font color="#CCCCCC"> CSP at Google is</font>

502
00:22:46,539 --> 00:22:50,799
I'll say like that<font color="#E5E5E5"> the king of web</font>

503
00:22:49,120 --> 00:22:53,049
<font color="#E5E5E5">mitigations the most important one</font><font color="#CCCCCC"> the</font>

504
00:22:50,799 --> 00:22:54,760
<font color="#E5E5E5">most valuable we have mostly because we</font>

505
00:22:53,049 --> 00:22:59,620
are focused<font color="#E5E5E5"> in mitigating cross-site</font>

506
00:22:54,760 --> 00:23:01,570
scripting XSS<font color="#CCCCCC"> but there are other very</font>

507
00:22:59,620 --> 00:23:04,600
promising web mitigation techniques that

508
00:23:01,570 --> 00:23:06,970
are<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> known and with this second</font>

509
00:23:04,600 --> 00:23:10,149
part<font color="#E5E5E5"> of the talk we hope to to solve</font>

510
00:23:06,970 --> 00:23:11,710
that to<font color="#E5E5E5"> actually create awareness of</font><font color="#CCCCCC"> the</font>

511
00:23:10,150 --> 00:23:14,559
<font color="#CCCCCC">existence of these tools that</font><font color="#E5E5E5"> you as a</font>

512
00:23:11,710 --> 00:23:18,250
webmaster as a web<font color="#E5E5E5"> developer can</font><font color="#CCCCCC"> use to</font>

513
00:23:14,559 --> 00:23:20,200
<font color="#E5E5E5">further secure your your website or in</font>

514
00:23:18,250 --> 00:23:22,539
<font color="#E5E5E5">some cases there will</font><font color="#CCCCCC"> be browser</font>

515
00:23:20,200 --> 00:23:25,480
settings so some some browser settings

516
00:23:22,539 --> 00:23:30,190
especially chromium that<font color="#E5E5E5"> you can enable</font>

517
00:23:25,480 --> 00:23:32,350
<font color="#E5E5E5">to have some extra layer of security</font><font color="#CCCCCC"> if</font>

518
00:23:30,190 --> 00:23:34,750
you have any questions about<font color="#CCCCCC"> CSP</font><font color="#E5E5E5"> or any</font>

519
00:23:32,350 --> 00:23:38,590
of the web mitigations please<font color="#CCCCCC"> save</font><font color="#E5E5E5"> them</font>

520
00:23:34,750 --> 00:23:45,250
<font color="#CCCCCC">for later</font><font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> be very happy</font><font color="#E5E5E5"> to answer</font>

521
00:23:38,590 --> 00:23:47,740
<font color="#E5E5E5">any doubts some of those are already in</font>

522
00:23:45,250 --> 00:23:50,320
production some are being<font color="#E5E5E5"> developed</font><font color="#CCCCCC"> so I</font>

523
00:23:47,740 --> 00:23:51,850
will for everyone<font color="#E5E5E5"> I will say what</font><font color="#CCCCCC"> is the</font>

524
00:23:50,320 --> 00:23:55,330
browser support like which<font color="#CCCCCC"> browsers</font>

525
00:23:51,850 --> 00:23:59,289
support which so the first one is<font color="#E5E5E5"> sub</font>

526
00:23:55,330 --> 00:24:03,070
resource integrity or<font color="#CCCCCC"> SR I this is kind</font>

527
00:23:59,289 --> 00:24:05,950
<font color="#CCCCCC">of</font><font color="#E5E5E5"> old web mitigation technique or a</font>

528
00:24:03,070 --> 00:24:08,530
hardening if you will authorize<font color="#CCCCCC"> more</font><font color="#E5E5E5"> of</font>

529
00:24:05,950 --> 00:24:11,710
<font color="#CCCCCC">a hardening so it ensures that resource</font>

530
00:24:08,530 --> 00:24:13,870
is hosted on<font color="#E5E5E5"> a third party server</font><font color="#CCCCCC"> have</font>

531
00:24:11,710 --> 00:24:15,880
not<font color="#E5E5E5"> been tampered</font><font color="#CCCCCC"> with so for</font><font color="#E5E5E5"> example if</font>

532
00:24:13,870 --> 00:24:18,699
you include a script tag<font color="#CCCCCC"> with a</font><font color="#E5E5E5"> third</font>

533
00:24:15,880 --> 00:24:21,370
<font color="#E5E5E5">party JavaScript and the third party</font>

534
00:24:18,700 --> 00:24:23,320
server gets compromised<font color="#E5E5E5"> this means that</font>

535
00:24:21,370 --> 00:24:26,918
it is<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> exercised on your domain</font>

536
00:24:23,320 --> 00:24:27,879
like the<font color="#E5E5E5"> D hackers can host whatever</font>

537
00:24:26,919 --> 00:24:30,999
<font color="#E5E5E5">JavaScript</font>

538
00:24:27,879 --> 00:24:32,589
and on your<font color="#CCCCCC"> website so</font><font color="#E5E5E5"> for example some</font>

539
00:24:30,999 --> 00:24:34,749
very<font color="#E5E5E5"> high-value target would be</font><font color="#CCCCCC"> city</font>

540
00:24:32,589 --> 00:24:36,819
<font color="#E5E5E5">ants that for example</font><font color="#CCCCCC"> hosts jQuery or</font>

541
00:24:34,749 --> 00:24:39,819
<font color="#E5E5E5">very common</font><font color="#CCCCCC"> JavaScript libraries</font><font color="#E5E5E5"> you</font>

542
00:24:36,819 --> 00:24:42,668
just<font color="#E5E5E5"> include them</font><font color="#CCCCCC"> but if they get</font>

543
00:24:39,819 --> 00:24:45,009
compromised they can execute malicious

544
00:24:42,669 --> 00:24:47,489
JavaScript on your<font color="#E5E5E5"> website</font><font color="#CCCCCC"> so a possible</font>

545
00:24:45,009 --> 00:24:49,509
<font color="#CCCCCC">solution is to add the integrity</font>

546
00:24:47,489 --> 00:24:53,079
<font color="#E5E5E5">attribute to the script tag which is</font>

547
00:24:49,509 --> 00:24:55,209
<font color="#E5E5E5">basically a hash of the content of the</font>

548
00:24:53,079 --> 00:24:57,039
script that<font color="#E5E5E5"> you're sourcing so if you go</font>

549
00:24:55,209 --> 00:24:59,079
for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> to a jQuery official web</font>

550
00:24:57,039 --> 00:25:01,749
<font color="#E5E5E5">page and you search</font><font color="#CCCCCC"> for the code snippet</font>

551
00:24:59,079 --> 00:25:03,279
to include you will see a script tag

552
00:25:01,749 --> 00:25:05,169
that<font color="#E5E5E5"> already</font><font color="#CCCCCC"> includes the integrity</font>

553
00:25:03,279 --> 00:25:08,019
attribute<font color="#E5E5E5"> but if you want to calculate</font>

554
00:25:05,169 --> 00:25:12,129
it yourself<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> go to some websites</font>

555
00:25:08,019 --> 00:25:14,169
like SSRI hash org<font color="#E5E5E5"> to calculate this</font>

556
00:25:12,129 --> 00:25:17,468
hash this means<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> at the browser</font>

557
00:25:14,169 --> 00:25:22,559
it loads<font color="#E5E5E5"> this javascript or in this case</font>

558
00:25:17,469 --> 00:25:24,940
CDN<font color="#E5E5E5"> SJS not</font><font color="#CCCCCC"> CloudFlare comm</font><font color="#E5E5E5"> downloads it</font>

559
00:25:22,559 --> 00:25:26,529
compares the<font color="#E5E5E5"> hash of</font><font color="#CCCCCC"> the content with</font>

560
00:25:24,940 --> 00:25:28,779
the one<font color="#E5E5E5"> that you specified there and</font>

561
00:25:26,529 --> 00:25:31,059
only executes it in the context of<font color="#E5E5E5"> your</font>

562
00:25:28,779 --> 00:25:35,889
<font color="#CCCCCC">webpage</font><font color="#E5E5E5"> if the hash matches so this</font>

563
00:25:31,059 --> 00:25:37,979
provides integrity<font color="#E5E5E5"> guarantee SSRI is</font>

564
00:25:35,889 --> 00:25:42,218
supported by<font color="#CCCCCC"> all modern</font><font color="#E5E5E5"> browsers</font>

565
00:25:37,979 --> 00:25:47,589
<font color="#E5E5E5">particular Firefox Chrome Safari and new</font>

566
00:25:42,219 --> 00:25:49,690
edge<font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> supported in I yeah that's</font>

567
00:25:47,589 --> 00:25:52,928
the<font color="#E5E5E5"> only one new I</font><font color="#CCCCCC"> just support so</font>

568
00:25:49,690 --> 00:25:55,269
<font color="#E5E5E5">that's pretty well supported the second</font>

569
00:25:52,929 --> 00:25:58,799
one is same<font color="#CCCCCC"> site cookies so</font><font color="#E5E5E5"> since that</font>

570
00:25:55,269 --> 00:26:02,139
cookies is an extra flag in the cookie

571
00:25:58,799 --> 00:26:04,179
<font color="#CCCCCC">to</font><font color="#E5E5E5"> basically mitigate cross-site request</font>

572
00:26:02,139 --> 00:26:06,158
forgery attacks<font color="#CCCCCC"> so here we're no longer</font>

573
00:26:04,179 --> 00:26:08,279
talking<font color="#E5E5E5"> about XSS we are talking about</font>

574
00:26:06,159 --> 00:26:10,359
cross-site<font color="#CCCCCC"> request forgery</font>

575
00:26:08,279 --> 00:26:12,399
<font color="#CCCCCC">the idea with cross-site request forgery</font>

576
00:26:10,359 --> 00:26:16,779
is that you turn the browser<font color="#E5E5E5"> against the</font>

577
00:26:12,399 --> 00:26:20,168
user<font color="#E5E5E5"> so for example you have a page on</font>

578
00:26:16,779 --> 00:26:23,259
evil<font color="#CCCCCC"> comm and you I</font><font color="#E5E5E5"> don't know embed a</font>

579
00:26:20,169 --> 00:26:25,989
<font color="#E5E5E5">forum or something</font><font color="#CCCCCC"> that does</font><font color="#E5E5E5"> banking</font>

580
00:26:23,259 --> 00:26:27,869
website<font color="#E5E5E5"> comm slash withdraw and then an</font>

581
00:26:25,989 --> 00:26:30,969
action that has<font color="#E5E5E5"> some kind of side effect</font>

582
00:26:27,869 --> 00:26:33,519
so the problem is<font color="#CCCCCC"> that this action</font><font color="#E5E5E5"> is</font>

583
00:26:30,969 --> 00:26:36,429
out indicated so it sent<font color="#E5E5E5"> the victim</font>

584
00:26:33,519 --> 00:26:38,940
sense<font color="#E5E5E5"> it's his own cookies to the</font>

585
00:26:36,429 --> 00:26:41,559
vulnerable server

586
00:26:38,940 --> 00:26:43,809
in a lot<font color="#CCCCCC"> of cases you don't want that</font>

587
00:26:41,559 --> 00:26:46,059
<font color="#E5E5E5">like you want your cookies</font><font color="#CCCCCC"> to be sent</font>

588
00:26:43,809 --> 00:26:48,610
only<font color="#E5E5E5"> if the request originated from your</font>

589
00:26:46,059 --> 00:26:51,490
<font color="#CCCCCC">origin and not</font><font color="#E5E5E5"> if it is cross origin in</font>

590
00:26:48,610 --> 00:26:53,918
a way if it<font color="#E5E5E5"> originated from</font><font color="#CCCCCC"> a form or an</font>

591
00:26:51,490 --> 00:26:56,320
image or<font color="#E5E5E5"> anything from another origin we</font>

592
00:26:53,919 --> 00:26:58,389
can be attacker controlled<font color="#E5E5E5"> so the idea</font>

593
00:26:56,320 --> 00:27:00,730
<font color="#E5E5E5">is you can assert that a particular</font>

594
00:26:58,389 --> 00:27:03,758
cookie<font color="#CCCCCC"> should only be sent with</font><font color="#E5E5E5"> requests</font>

595
00:27:00,730 --> 00:27:05,350
initiated from<font color="#E5E5E5"> the same side</font><font color="#CCCCCC"> so</font>

596
00:27:03,759 --> 00:27:10,330
basically<font color="#CCCCCC"> this is a flag like you know</font>

597
00:27:05,350 --> 00:27:11,678
path or domain or expires<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know it's</font>

598
00:27:10,330 --> 00:27:14,379
called same site and you<font color="#CCCCCC"> can have two</font>

599
00:27:11,679 --> 00:27:16,749
values<font color="#CCCCCC"> tricked and lux</font><font color="#E5E5E5"> strict means</font>

600
00:27:14,379 --> 00:27:19,748
<font color="#E5E5E5">always basically cookies are not sent</font>

601
00:27:16,749 --> 00:27:21,669
when there is cross<font color="#E5E5E5"> site navigation</font><font color="#CCCCCC"> this</font>

602
00:27:19,749 --> 00:27:23,559
<font color="#E5E5E5">can be problematic in case of for</font>

603
00:27:21,669 --> 00:27:25,720
<font color="#CCCCCC">example get requests because</font><font color="#E5E5E5"> this</font>

604
00:27:23,559 --> 00:27:27,730
applies also<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get requests and it</font>

605
00:27:25,720 --> 00:27:31,749
<font color="#E5E5E5">means that for example</font><font color="#CCCCCC"> if you want</font><font color="#E5E5E5"> to</font>

606
00:27:27,730 --> 00:27:34,330
<font color="#E5E5E5">send an URL via email</font><font color="#CCCCCC"> and you know from</font>

607
00:27:31,749 --> 00:27:37,230
gmail.com<font color="#CCCCCC"> the your friend will click on</font>

608
00:27:34,330 --> 00:27:40,689
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and it</font><font color="#CCCCCC"> will not</font><font color="#E5E5E5"> be logged in</font>

609
00:27:37,230 --> 00:27:42,309
because there will<font color="#E5E5E5"> be cookies will</font><font color="#CCCCCC"> not</font>

610
00:27:40,690 --> 00:27:44,619
be sent so this might<font color="#CCCCCC"> be a little bit</font>

611
00:27:42,309 --> 00:27:46,269
too much sometimes<font color="#CCCCCC"> so the idea</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to</font>

612
00:27:44,619 --> 00:27:47,649
also<font color="#E5E5E5"> add a lacks value that means</font>

613
00:27:46,269 --> 00:27:50,799
cookies are not sent when there is

614
00:27:47,649 --> 00:27:52,239
cross-site navigation and unsafe<font color="#E5E5E5"> HTTP</font>

615
00:27:50,799 --> 00:27:55,029
method with more than<font color="#CCCCCC"> and safe I would</font>

616
00:27:52,240 --> 00:27:58,149
say<font color="#E5E5E5"> HTTP method that implies some</font><font color="#CCCCCC"> kind</font>

617
00:27:55,029 --> 00:28:01,389
of side effects like post<font color="#E5E5E5"> boot or delete</font>

618
00:27:58,149 --> 00:28:02,918
which are usually<font color="#CCCCCC"> the well by RFC</font><font color="#E5E5E5"> the</font>

619
00:28:01,389 --> 00:28:05,350
HTTP method<font color="#CCCCCC"> that you should use if you</font>

620
00:28:02,919 --> 00:28:07,090
have a state a<font color="#E5E5E5"> state changing action or</font>

621
00:28:05,350 --> 00:28:08,980
an action<font color="#E5E5E5"> that has side effects</font><font color="#CCCCCC"> so for</font>

622
00:28:07,090 --> 00:28:11,320
<font color="#E5E5E5">example in this case get</font><font color="#CCCCCC"> request would</font>

623
00:28:08,980 --> 00:28:16,779
have a cross cross site navigation

624
00:28:11,320 --> 00:28:18,100
<font color="#CCCCCC">cookie sent while these are sufficient</font>

625
00:28:16,779 --> 00:28:20,619
metals<font color="#E5E5E5"> but not so for example a post</font>

626
00:28:18,100 --> 00:28:22,539
with a<font color="#E5E5E5"> form which is probably what is</font>

627
00:28:20,619 --> 00:28:24,820
used for<font color="#E5E5E5"> a withdraw action on a</font>

628
00:28:22,539 --> 00:28:28,330
vulnerable<font color="#CCCCCC"> website would not send</font>

629
00:28:24,820 --> 00:28:29,999
cookies<font color="#E5E5E5"> so this is pretty cool since</font>

630
00:28:28,330 --> 00:28:31,710
<font color="#E5E5E5">that</font><font color="#CCCCCC"> cookie</font><font color="#E5E5E5"> supporting browsers is</font>

631
00:28:29,999 --> 00:28:33,759
unfortunately a little<font color="#E5E5E5"> bit more limited</font>

632
00:28:31,710 --> 00:28:35,399
<font color="#E5E5E5">but it is supported by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> major</font>

633
00:28:33,759 --> 00:28:38,259
<font color="#E5E5E5">browsers which are chrome and firefox</font>

634
00:28:35,399 --> 00:28:41,139
chrome supports<font color="#CCCCCC"> it since few major</font>

635
00:28:38,259 --> 00:28:45,600
versions<font color="#E5E5E5"> Firefox just supported for from</font>

636
00:28:41,139 --> 00:28:45,600
59<font color="#E5E5E5"> which is pretty recent hello</font>

637
00:28:59,360 --> 00:29:04,158
what do you mean<font color="#CCCCCC"> exactly like fetch</font>

638
00:29:01,350 --> 00:29:04,158
<font color="#CCCCCC">light</font><font color="#E5E5E5"> same origin</font>

639
00:29:14,679 --> 00:29:18,259
but<font color="#E5E5E5"> is not about exercise right this is</font>

640
00:29:16,879 --> 00:29:20,928
<font color="#CCCCCC">about</font><font color="#E5E5E5"> cross-site</font><font color="#CCCCCC"> request forgery so you</font>

641
00:29:18,259 --> 00:29:24,259
have a form<font color="#CCCCCC"> that posts</font><font color="#E5E5E5"> will it</font><font color="#CCCCCC"> send</font><font color="#E5E5E5"> the</font>

642
00:29:20,929 --> 00:29:26,830
cookies yes so that's<font color="#CCCCCC"> a problem</font><font color="#E5E5E5"> with</font>

643
00:29:24,259 --> 00:29:28,940
this<font color="#E5E5E5"> you don't it's as simple as that</font>

644
00:29:26,830 --> 00:29:30,259
so you don't<font color="#CCCCCC"> need</font><font color="#E5E5E5"> Java</font><font color="#CCCCCC"> Script right even</font>

645
00:29:28,940 --> 00:29:32,269
if you disable<font color="#CCCCCC"> Java Script</font><font color="#E5E5E5"> you have a</font>

646
00:29:30,259 --> 00:29:34,370
forum post<font color="#CCCCCC"> well you might have just</font>

647
00:29:32,269 --> 00:29:36,409
<font color="#CCCCCC">before out for sending automatically</font><font color="#E5E5E5"> but</font>

648
00:29:34,370 --> 00:29:38,330
let's say<font color="#CCCCCC"> that you have a hidden</font><font color="#E5E5E5"> button</font>

649
00:29:36,409 --> 00:29:41,809
or something<font color="#CCCCCC"> right okay</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> works</font>

650
00:29:38,330 --> 00:29:44,509
<font color="#E5E5E5">even in this case okay</font><font color="#CCCCCC"> so basically</font><font color="#E5E5E5"> it's</font>

651
00:29:41,809 --> 00:29:50,480
supported<font color="#E5E5E5"> by Firefox and Chrome edge</font>

652
00:29:44,509 --> 00:29:55,039
does not<font color="#E5E5E5"> support it</font><font color="#CCCCCC"> next ones are a site</font>

653
00:29:50,480 --> 00:29:56,710
<font color="#E5E5E5">isolation</font><font color="#CCCCCC"> C or B</font><font color="#E5E5E5"> Corp and from origin so</font>

654
00:29:55,039 --> 00:29:58,940
these are very new and<font color="#CCCCCC"> cutting</font><font color="#E5E5E5"> edge</font>

655
00:29:56,710 --> 00:30:01,039
<font color="#E5E5E5">mitigation techniques and</font><font color="#CCCCCC"> they're</font>

656
00:29:58,940 --> 00:30:03,500
actually<font color="#E5E5E5"> well</font><font color="#CCCCCC"> actually some</font><font color="#E5E5E5"> of them</font><font color="#CCCCCC"> are</font>

657
00:30:01,039 --> 00:30:05,720
a header delivered<font color="#CCCCCC"> so you as a webmaster</font>

658
00:30:03,500 --> 00:30:08,629
can use them<font color="#E5E5E5"> and some are browser</font>

659
00:30:05,720 --> 00:30:11,450
settings so I'll go<font color="#E5E5E5"> through them</font>

660
00:30:08,629 --> 00:30:14,689
separately<font color="#E5E5E5"> site isolation is basically a</font>

661
00:30:11,450 --> 00:30:17,360
<font color="#E5E5E5">chromium browser setting other browsers</font>

662
00:30:14,690 --> 00:30:20,269
are vendors are<font color="#E5E5E5"> pushing in different</font>

663
00:30:17,360 --> 00:30:22,969
directions<font color="#E5E5E5"> to achieve the same the same</font>

664
00:30:20,269 --> 00:30:26,210
goal but<font color="#E5E5E5"> we can talk about that more</font><font color="#CCCCCC"> in</font>

665
00:30:22,970 --> 00:30:28,460
<font color="#E5E5E5">detail if we have time basically if you</font>

666
00:30:26,210 --> 00:30:31,129
go to<font color="#CCCCCC"> Chrome flags</font><font color="#E5E5E5"> you can enable strict</font>

667
00:30:28,460 --> 00:30:32,929
<font color="#CCCCCC">site isolation which is will be on by</font>

668
00:30:31,129 --> 00:30:36,110
<font color="#CCCCCC">default in</font><font color="#E5E5E5"> the next versions but so far</font>

669
00:30:32,929 --> 00:30:39,919
it's<font color="#CCCCCC"> opt-in this means</font><font color="#E5E5E5"> that the browser</font>

670
00:30:36,110 --> 00:30:41,959
<font color="#E5E5E5">puts pages from different</font><font color="#CCCCCC"> websites in</font>

671
00:30:39,919 --> 00:30:44,720
<font color="#E5E5E5">different</font><font color="#CCCCCC"> processes and also put some</font>

672
00:30:41,960 --> 00:30:46,639
safeguards<font color="#CCCCCC"> preventing some kind</font><font color="#E5E5E5"> of inter</font>

673
00:30:44,720 --> 00:30:49,850
process communication between them<font color="#E5E5E5"> so</font>

674
00:30:46,639 --> 00:30:51,139
why doing that<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is an extra security</font>

675
00:30:49,850 --> 00:30:52,730
<font color="#E5E5E5">boundary and here we're talking about</font>

676
00:30:51,139 --> 00:30:55,279
<font color="#E5E5E5">not web</font><font color="#CCCCCC"> vulnerability we are talking</font>

677
00:30:52,730 --> 00:30:58,129
about binary vulnerability memory

678
00:30:55,279 --> 00:31:01,700
corruption vulnerability<font color="#CCCCCC"> in particular</font>

679
00:30:58,129 --> 00:31:03,230
in this<font color="#CCCCCC"> case we are so strict eyesight</font>

680
00:31:01,700 --> 00:31:05,629
isolation has been around for more<font color="#E5E5E5"> than</font>

681
00:31:03,230 --> 00:31:07,639
<font color="#CCCCCC">one year if I remember correctly and</font><font color="#E5E5E5"> now</font>

682
00:31:05,629 --> 00:31:10,100
it's<font color="#E5E5E5"> very important to</font><font color="#CCCCCC"> actually enable</font>

683
00:31:07,639 --> 00:31:12,439
it's because of Spectre and meltdown so

684
00:31:10,100 --> 00:31:15,259
this speculative execution<font color="#CCCCCC"> bugs you</font>

685
00:31:12,440 --> 00:31:20,870
might have heard of<font color="#CCCCCC"> basically it's very</font>

686
00:31:15,259 --> 00:31:24,559
important to also avoid loading<font color="#E5E5E5"> let's</font>

687
00:31:20,870 --> 00:31:27,629
say document<font color="#E5E5E5"> contents so HTML content in</font>

688
00:31:24,559 --> 00:31:29,280
static resources<font color="#E5E5E5"> such as images because</font>

689
00:31:27,630 --> 00:31:30,960
basically what you could do is read

690
00:31:29,280 --> 00:31:33,300
memory<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the process</font><font color="#E5E5E5"> so the idea is</font>

691
00:31:30,960 --> 00:31:35,280
<font color="#E5E5E5">let's try to avoid that sensitive data</font>

692
00:31:33,300 --> 00:31:38,220
<font color="#CCCCCC">might end up in</font><font color="#E5E5E5"> the process</font><font color="#CCCCCC"> in the first</font>

693
00:31:35,280 --> 00:31:42,600
<font color="#E5E5E5">place and this</font><font color="#CCCCCC"> is exactly what</font><font color="#E5E5E5"> Corp or</font>

694
00:31:38,220 --> 00:31:45,390
<font color="#E5E5E5">cross-eyed resource blocking is or now</font>

695
00:31:42,600 --> 00:31:47,520
it's called<font color="#E5E5E5"> read blocking in the change</font>

696
00:31:45,390 --> 00:31:48,960
name but<font color="#CCCCCC"> R is still there it used to be</font>

697
00:31:47,520 --> 00:31:51,120
called<font color="#E5E5E5"> resource blocking</font><font color="#CCCCCC"> is called read</font>

698
00:31:48,960 --> 00:31:52,500
blocking<font color="#E5E5E5"> this is an important part of</font>

699
00:31:51,120 --> 00:31:54,389
<font color="#E5E5E5">side isolation restricting which</font>

700
00:31:52,500 --> 00:31:56,340
crossorigin data is sent to a renderer

701
00:31:54,390 --> 00:31:59,280
process for<font color="#E5E5E5"> example we want to avoid</font>

702
00:31:56,340 --> 00:32:02,699
<font color="#E5E5E5">that loading</font><font color="#CCCCCC"> cross-origin</font><font color="#E5E5E5"> HTML in image</font>

703
00:31:59,280 --> 00:32:05,129
tags<font color="#E5E5E5"> just to basically taint the process</font>

704
00:32:02,700 --> 00:32:06,620
with having potentially information

705
00:32:05,130 --> 00:32:10,080
sensitive

706
00:32:06,620 --> 00:32:13,820
potentially sensitive data<font color="#E5E5E5"> so you might</font>

707
00:32:10,080 --> 00:32:16,199
<font color="#CCCCCC">think I don't</font><font color="#E5E5E5"> care if I do image source</font>

708
00:32:13,820 --> 00:32:18,720
<font color="#E5E5E5">sensitivity III dot HTML because I can't</font>

709
00:32:16,200 --> 00:32:20,250
read<font color="#CCCCCC"> it here we're not talking</font><font color="#E5E5E5"> about web</font>

710
00:32:18,720 --> 00:32:22,110
right we're talking<font color="#CCCCCC"> about dumping the</font>

711
00:32:20,250 --> 00:32:24,630
<font color="#E5E5E5">memory of the process so you can read it</font>

712
00:32:22,110 --> 00:32:26,159
<font color="#E5E5E5">in</font><font color="#CCCCCC"> that way</font><font color="#E5E5E5"> so no same origin policy</font>

713
00:32:24,630 --> 00:32:27,630
<font color="#E5E5E5">we're not talking about web we're</font>

714
00:32:26,160 --> 00:32:30,210
talking about<font color="#E5E5E5"> processes here and it's</font>

715
00:32:27,630 --> 00:32:32,430
<font color="#E5E5E5">pretty cool</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> web platform is trying</font>

716
00:32:30,210 --> 00:32:34,580
<font color="#E5E5E5">to also cover these cases and it is</font>

717
00:32:32,430 --> 00:32:39,320
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> pretty new it might also be</font>

718
00:32:34,580 --> 00:32:42,629
surprising from origin is a header based

719
00:32:39,320 --> 00:32:44,909
mechanism<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you as a webmaster can say</font>

720
00:32:42,630 --> 00:32:47,310
<font color="#E5E5E5">I want</font><font color="#CCCCCC"> to prevent my resources from</font>

721
00:32:44,910 --> 00:32:48,990
being loaded by<font color="#CCCCCC"> non-white listed origins</font>

722
00:32:47,310 --> 00:32:53,220
this applies to images this applies to

723
00:32:48,990 --> 00:32:56,070
HTML<font color="#CCCCCC"> and whatever so this was</font><font color="#E5E5E5"> originally</font>

724
00:32:53,220 --> 00:32:58,080
thought<font color="#E5E5E5"> as inline linking protection or</font>

725
00:32:56,070 --> 00:33:00,300
hot link in protection I don't want my

726
00:32:58,080 --> 00:33:02,010
images<font color="#E5E5E5"> I don't know I am IMG you are</font>

727
00:33:00,300 --> 00:33:04,770
calm<font color="#E5E5E5"> I didn't want my images</font><font color="#CCCCCC"> to be</font>

728
00:33:02,010 --> 00:33:07,740
loaded from random forums that<font color="#CCCCCC"> leech my</font>

729
00:33:04,770 --> 00:33:09,840
bandwidth or you know<font color="#CCCCCC"> I don't want</font><font color="#E5E5E5"> to be</font>

730
00:33:07,740 --> 00:33:11,190
<font color="#CCCCCC">slash dotted I don't want to be you</font><font color="#E5E5E5"> know</font>

731
00:33:09,840 --> 00:33:14,040
<font color="#E5E5E5">I don't</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> pay for bandwidth by</font>

732
00:33:11,190 --> 00:33:17,850
having you know random people saw<font color="#CCCCCC"> a</font>

733
00:33:14,040 --> 00:33:19,080
source and embed heavy resources but it

734
00:33:17,850 --> 00:33:22,500
is<font color="#E5E5E5"> becoming more and</font><font color="#CCCCCC"> more important</font>

735
00:33:19,080 --> 00:33:25,470
<font color="#E5E5E5">because of spectra and meltdown so from</font>

736
00:33:22,500 --> 00:33:27,960
origin Korb<font color="#E5E5E5"> and site isolation</font><font color="#CCCCCC"> are bit</font>

737
00:33:25,470 --> 00:33:29,040
together<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> form a strong</font>

738
00:33:27,960 --> 00:33:30,900
<font color="#CCCCCC">mitigation against this kind</font><font color="#E5E5E5"> of</font>

739
00:33:29,040 --> 00:33:32,760
<font color="#E5E5E5">speculative execution attacks and there</font>

740
00:33:30,900 --> 00:33:37,650
are a little bit<font color="#E5E5E5"> orthogonal from one</font>

741
00:33:32,760 --> 00:33:38,910
each other<font color="#CCCCCC"> most of</font><font color="#E5E5E5"> them are so if I</font>

742
00:33:37,650 --> 00:33:41,130
remember<font color="#E5E5E5"> correctly this still</font><font color="#CCCCCC"> been</font>

743
00:33:38,910 --> 00:33:42,840
<font color="#CCCCCC">discussed but from origin has not</font>

744
00:33:41,130 --> 00:33:45,990
implemented<font color="#E5E5E5"> yet but</font><font color="#CCCCCC"> Corp will be</font>

745
00:33:42,840 --> 00:33:48,830
probably<font color="#E5E5E5"> be present in chromium only and</font>

746
00:33:45,990 --> 00:33:53,780
Firefox will have a similar<font color="#CCCCCC"> thing but</font>

747
00:33:48,830 --> 00:33:56,879
<font color="#CCCCCC">stay tuned this</font><font color="#E5E5E5"> is being discussed</font><font color="#CCCCCC"> now</font>

748
00:33:53,780 --> 00:33:59,610
<font color="#CCCCCC">up</font><font color="#E5E5E5"> to upcoming mitigations that we that</font>

749
00:33:56,880 --> 00:34:03,000
are not there yet<font color="#CCCCCC"> but we'd</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> see</font>

750
00:33:59,610 --> 00:34:06,120
<font color="#E5E5E5">getting traction</font><font color="#CCCCCC"> sub origins are a very</font>

751
00:34:03,000 --> 00:34:08,610
promising<font color="#E5E5E5"> mitigation that basically so</font>

752
00:34:06,120 --> 00:34:10,350
<font color="#E5E5E5">what is a web origin a web origin is is</font>

753
00:34:08,610 --> 00:34:13,440
a tuple this is basically the security

754
00:34:10,350 --> 00:34:18,210
boundary<font color="#E5E5E5"> of the web this tuple has</font>

755
00:34:13,440 --> 00:34:20,730
scheme which is<font color="#E5E5E5"> HTTP</font><font color="#CCCCCC"> HTTP file</font><font color="#E5E5E5"> host and</font>

756
00:34:18,210 --> 00:34:24,540
port right this is<font color="#E5E5E5"> the fusion</font><font color="#CCCCCC"> of origin</font>

757
00:34:20,730 --> 00:34:26,760
<font color="#CCCCCC">some</font><font color="#E5E5E5"> origin proposal says we should add</font>

758
00:34:24,540 --> 00:34:28,949
<font color="#E5E5E5">another part of the tuple which is a</font>

759
00:34:26,760 --> 00:34:32,340
arbitrary<font color="#E5E5E5"> namespace</font><font color="#CCCCCC"> that is provided</font><font color="#E5E5E5"> by</font>

760
00:34:28,949 --> 00:34:34,678
a header by the server<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can have a</font>

761
00:34:32,340 --> 00:34:37,470
sub origin header<font color="#CCCCCC"> suicide that</font><font color="#E5E5E5"> does I</font>

762
00:34:34,679 --> 00:34:39,960
know it says test<font color="#E5E5E5"> or you know account</font>

763
00:34:37,469 --> 00:34:42,168
area<font color="#E5E5E5"> or admin area this physically</font>

764
00:34:39,960 --> 00:34:46,590
separates<font color="#E5E5E5"> this origin and makes it</font>

765
00:34:42,168 --> 00:34:48,388
separate this means that an XSS on in

766
00:34:46,590 --> 00:34:51,450
that those pages will not be<font color="#CCCCCC"> able to</font>

767
00:34:48,389 --> 00:34:55,679
<font color="#CCCCCC">access</font><font color="#E5E5E5"> data from the main origin of the</font>

768
00:34:51,449 --> 00:34:58,080
of the you know<font color="#E5E5E5"> host all of the domain</font>

769
00:34:55,679 --> 00:35:03,660
<font color="#CCCCCC">or others so this allows very</font>

770
00:34:58,080 --> 00:35:06,540
coarse-grained<font color="#E5E5E5"> you know separation in</font>

771
00:35:03,660 --> 00:35:10,049
cases it's<font color="#E5E5E5"> hard to have separate domains</font>

772
00:35:06,540 --> 00:35:11,670
or separate<font color="#CCCCCC"> subdomains so the safest is</font>

773
00:35:10,050 --> 00:35:13,230
of course<font color="#E5E5E5"> having a lot of</font><font color="#CCCCCC"> subdomain</font><font color="#E5E5E5"> like</font>

774
00:35:11,670 --> 00:35:15,270
for<font color="#CCCCCC"> example Google User Content calm</font>

775
00:35:13,230 --> 00:35:17,130
there is<font color="#CCCCCC"> a reason why we did you google</font>

776
00:35:15,270 --> 00:35:19,410
is<font color="#E5E5E5"> or content because it allows to</font>

777
00:35:17,130 --> 00:35:22,800
upload user data we want<font color="#E5E5E5"> to separate</font>

778
00:35:19,410 --> 00:35:25,799
from google.com<font color="#E5E5E5"> subdomains are somehow</font>

779
00:35:22,800 --> 00:35:27,180
<font color="#CCCCCC">okay they're not as</font><font color="#E5E5E5"> okay for cookies for</font>

780
00:35:25,800 --> 00:35:29,790
some reasons because cookies are a bit

781
00:35:27,180 --> 00:35:32,790
weird<font color="#E5E5E5"> but the idea is think of WordPress</font>

782
00:35:29,790 --> 00:35:35,370
WordPress<font color="#CCCCCC"> Maps</font><font color="#E5E5E5"> on slash wp-admin an</font>

783
00:35:32,790 --> 00:35:38,070
admin area<font color="#CCCCCC"> which might</font><font color="#E5E5E5"> be XSS prone</font>

784
00:35:35,370 --> 00:35:39,960
because<font color="#E5E5E5"> you install</font><font color="#CCCCCC"> plugins and so on it</font>

785
00:35:38,070 --> 00:35:43,560
would<font color="#E5E5E5"> be cool to isolate it as if it was</font>

786
00:35:39,960 --> 00:35:45,720
from your site admin area<font color="#CCCCCC"> calm right</font><font color="#E5E5E5"> so</font>

787
00:35:43,560 --> 00:35:48,090
let make it work but<font color="#E5E5E5"> in case there is</font>

788
00:35:45,720 --> 00:35:49,649
<font color="#CCCCCC">like</font><font color="#E5E5E5"> some kind</font><font color="#CCCCCC"> of exercise its isolated</font>

789
00:35:48,090 --> 00:35:51,240
<font color="#CCCCCC">from the rest of</font><font color="#E5E5E5"> your site</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the same</font>

790
00:35:49,650 --> 00:35:53,940
for sensitive functionalities such as a

791
00:35:51,240 --> 00:35:54,870
password<font color="#CCCCCC"> reset</font><font color="#E5E5E5"> so without going too</font><font color="#CCCCCC"> much</font>

792
00:35:53,940 --> 00:35:56,880
in technical deep

793
00:35:54,870 --> 00:35:59,700
the thing is an<font color="#CCCCCC"> Origin</font><font color="#E5E5E5"> will have a sub</font>

794
00:35:56,880 --> 00:36:02,850
origin and the idea is you will need

795
00:35:59,700 --> 00:36:05,310
some<font color="#CCCCCC"> refactoring</font><font color="#E5E5E5"> to make sub origin</font><font color="#CCCCCC"> to</font>

796
00:36:02,850 --> 00:36:07,980
<font color="#E5E5E5">parent origin and sub origin to external</font>

797
00:36:05,310 --> 00:36:12,240
origin communication work in<font color="#E5E5E5"> particular</font>

798
00:36:07,980 --> 00:36:14,220
sub origin<font color="#CCCCCC"> to sub origin is works by</font>

799
00:36:12,240 --> 00:36:17,520
default as long as the server provides

800
00:36:14,220 --> 00:36:19,439
the same sub origin header<font color="#E5E5E5"> so there's a</font>

801
00:36:17,520 --> 00:36:21,300
page and as sub origin admin area<font color="#E5E5E5"> and</font>

802
00:36:19,440 --> 00:36:23,880
then wants<font color="#CCCCCC"> to communicate</font><font color="#E5E5E5"> via I don't</font>

803
00:36:21,300 --> 00:36:26,370
know xhr or fetch<font color="#E5E5E5"> or post message to</font>

804
00:36:23,880 --> 00:36:28,530
another page<font color="#CCCCCC"> that is on</font><font color="#E5E5E5"> the same sub</font>

805
00:36:26,370 --> 00:36:30,960
regime<font color="#E5E5E5"> so with also sub origin admin</font>

806
00:36:28,530 --> 00:36:33,090
area that works no problem<font color="#CCCCCC"> like if it is</font>

807
00:36:30,960 --> 00:36:35,730
<font color="#E5E5E5">same origin because it is same sub</font>

808
00:36:33,090 --> 00:36:37,470
origin some origin<font color="#E5E5E5"> to parent origin this</font>

809
00:36:35,730 --> 00:36:38,790
is blocked by default<font color="#E5E5E5"> because that's</font>

810
00:36:37,470 --> 00:36:41,640
what we want<font color="#E5E5E5"> right we want to separate</font>

811
00:36:38,790 --> 00:36:44,700
but to communicate<font color="#CCCCCC"> sub origin to origin</font>

812
00:36:41,640 --> 00:36:48,359
<font color="#E5E5E5">you need to add</font><font color="#CCCCCC"> a new header which is</font>

813
00:36:44,700 --> 00:36:50,339
<font color="#E5E5E5">like the course header</font><font color="#CCCCCC"> ax access</font><font color="#E5E5E5"> control</font>

814
00:36:48,360 --> 00:36:52,080
allow origin<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that but in this</font><font color="#E5E5E5"> case</font>

815
00:36:50,340 --> 00:36:54,150
it's called<font color="#E5E5E5"> access control allow sub</font>

816
00:36:52,080 --> 00:36:56,040
origin with the<font color="#E5E5E5"> name of the sub origin</font>

817
00:36:54,150 --> 00:36:58,260
as<font color="#E5E5E5"> simple as</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and symbology</font><font color="#CCCCCC"> to X</font>

818
00:36:56,040 --> 00:37:01,560
<font color="#CCCCCC">turn is like cross</font><font color="#E5E5E5"> origin with course so</font>

819
00:36:58,260 --> 00:37:07,200
access control allow origin<font color="#E5E5E5"> so I wanted</font>

820
00:37:01,560 --> 00:37:09,750
<font color="#E5E5E5">to give you</font><font color="#CCCCCC"> a quick demo</font><font color="#E5E5E5"> if it works so</font>

821
00:37:07,200 --> 00:37:11,790
an intern<font color="#E5E5E5"> of our team</font><font color="#CCCCCC"> Alena UNESCO</font>

822
00:37:09,750 --> 00:37:14,360
created a Chrome extension<font color="#CCCCCC"> that</font>

823
00:37:11,790 --> 00:37:19,170
<font color="#CCCCCC">unfortunetely is not public</font><font color="#E5E5E5"> because we</font>

824
00:37:14,360 --> 00:37:22,590
it uses some let's say very experimental

825
00:37:19,170 --> 00:37:24,570
<font color="#E5E5E5">parts of chrome API</font><font color="#CCCCCC"> so we need to find</font>

826
00:37:22,590 --> 00:37:28,020
unit<font color="#E5E5E5"> a little bit but if sub origins get</font>

827
00:37:24,570 --> 00:37:29,730
<font color="#CCCCCC">traction will</font><font color="#E5E5E5"> definitely open source it</font>

828
00:37:28,020 --> 00:37:33,450
put publish it on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Chrome Web Store</font>

829
00:37:29,730 --> 00:37:34,800
this helps prototype sub origins<font color="#E5E5E5"> so for</font>

830
00:37:33,450 --> 00:37:36,450
<font color="#E5E5E5">example let's say</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we have for</font>

831
00:37:34,800 --> 00:37:39,030
example<font color="#E5E5E5"> for historical</font><font color="#CCCCCC"> reasons or for</font>

832
00:37:36,450 --> 00:37:41,100
marketing<font color="#CCCCCC"> reasons we have some static</font>

833
00:37:39,030 --> 00:37:42,870
web page were paid<font color="#E5E5E5"> on a very sensitive</font>

834
00:37:41,100 --> 00:37:47,850
domain which is dub dub dub dub<font color="#CCCCCC"> oogle</font>

835
00:37:42,870 --> 00:37:49,410
<font color="#CCCCCC">com so wlcome</font><font color="#E5E5E5"> has</font><font color="#CCCCCC"> PA eyes has very</font>

836
00:37:47,850 --> 00:37:53,009
sensitive data we don't<font color="#E5E5E5"> want to so an</font>

837
00:37:49,410 --> 00:37:54,420
exercise on dub dub dub<font color="#E5E5E5"> is very bad but</font>

838
00:37:53,010 --> 00:37:56,880
<font color="#E5E5E5">unfortunately these pages these are</font>

839
00:37:54,420 --> 00:37:59,430
static<font color="#E5E5E5"> pages</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> slash about they might</font>

840
00:37:56,880 --> 00:38:00,800
have some vulnerabilities they might

841
00:37:59,430 --> 00:38:03,620
<font color="#E5E5E5">also</font>

842
00:38:00,800 --> 00:38:06,340
you know come with a be you know<font color="#CCCCCC"> written</font>

843
00:38:03,620 --> 00:38:08,930
<font color="#CCCCCC">by external people</font><font color="#E5E5E5"> so we might not be as</font>

844
00:38:06,340 --> 00:38:12,770
safe<font color="#E5E5E5"> I'm confident about the code</font>

845
00:38:08,930 --> 00:38:15,890
quality<font color="#E5E5E5"> so what we want</font><font color="#CCCCCC"> to do is we open</font>

846
00:38:12,770 --> 00:38:18,860
<font color="#E5E5E5">sub originator hope you can see yeah</font>

847
00:38:15,890 --> 00:38:22,970
and we put a target site which is dub

848
00:38:18,860 --> 00:38:26,600
dub dub<font color="#E5E5E5"> about and then we</font><font color="#CCCCCC"> started</font><font color="#E5E5E5"> so you</font>

849
00:38:22,970 --> 00:38:32,720
see it's debugging the window<font color="#CCCCCC"> okay so in</font>

850
00:38:26,600 --> 00:38:38,420
this<font color="#E5E5E5"> case we just you know navigate</font><font color="#CCCCCC"> this</font>

851
00:38:32,720 --> 00:38:41,959
a little bit we open a few<font color="#E5E5E5"> are this is</font>

852
00:38:38,420 --> 00:38:50,560
external<font color="#CCCCCC"> a few links then we stop it</font>

853
00:38:41,960 --> 00:38:54,970
here<font color="#CCCCCC"> I didn't have to do</font><font color="#E5E5E5"> stops sorry</font><font color="#CCCCCC"> we</font>

854
00:38:50,560 --> 00:38:54,970
do this play report

855
00:39:00,420 --> 00:39:03,230
yes

856
00:39:05,030 --> 00:39:16,240
yes just a<font color="#CCCCCC"> second okay I probably need</font>

857
00:39:10,730 --> 00:39:20,960
to<font color="#E5E5E5"> yeah okay so let's open a few stories</font>

858
00:39:16,240 --> 00:39:23,299
<font color="#CCCCCC">the chute load you know</font><font color="#E5E5E5"> mp3 do xhr you</font>

859
00:39:20,960 --> 00:39:27,530
know there is a there<font color="#CCCCCC"> is a video here oh</font>

860
00:39:23,300 --> 00:39:29,660
<font color="#CCCCCC">notice audio</font><font color="#E5E5E5"> okay should do this</font><font color="#CCCCCC"> Perry</font>

861
00:39:27,530 --> 00:39:31,010
<font color="#E5E5E5">yes this is display report and we see</font>

862
00:39:29,660 --> 00:39:32,899
<font color="#E5E5E5">that it's basically only submerging</font><font color="#CCCCCC"> two</font>

863
00:39:31,010 --> 00:39:34,970
sub ology communication<font color="#E5E5E5"> so this is fine</font>

864
00:39:32,900 --> 00:39:36,680
this means that works out to<font color="#CCCCCC"> the box</font><font color="#E5E5E5"> so</font>

865
00:39:34,970 --> 00:39:39,770
as<font color="#CCCCCC"> long as we put</font><font color="#E5E5E5"> the same origin header</font>

866
00:39:36,680 --> 00:39:43,009
this<font color="#E5E5E5"> will work so this is fine no</font>

867
00:39:39,770 --> 00:39:45,080
refactoring<font color="#E5E5E5"> is needed but if we go for</font>

868
00:39:43,010 --> 00:39:47,600
example<font color="#CCCCCC"> to a more</font><font color="#E5E5E5"> complex application</font>

869
00:39:45,080 --> 00:39:50,350
which is<font color="#E5E5E5"> a Google Finance that is like</font>

870
00:39:47,600 --> 00:40:01,009
on google.com<font color="#CCCCCC"> slash</font><font color="#E5E5E5"> finance or so for a</font>

871
00:39:50,350 --> 00:40:09,950
historical reason and we you know<font color="#CCCCCC"> we</font>

872
00:40:01,010 --> 00:40:13,250
<font color="#CCCCCC">just go around a little bit</font><font color="#E5E5E5"> we have to</font>

873
00:40:09,950 --> 00:40:15,500
be careful not to<font color="#E5E5E5"> exit the origin okay</font>

874
00:40:13,250 --> 00:40:17,180
then we display report<font color="#E5E5E5"> yeah you see that</font>

875
00:40:15,500 --> 00:40:19,970
<font color="#CCCCCC">there is some communication between the</font>

876
00:40:17,180 --> 00:40:21,770
sub origin to the parent origin and from

877
00:40:19,970 --> 00:40:23,359
the sub origin to external this means

878
00:40:21,770 --> 00:40:27,200
that<font color="#CCCCCC"> submerging two external probably</font>

879
00:40:23,360 --> 00:40:29,870
works already<font color="#E5E5E5"> because otherwise it will</font>

880
00:40:27,200 --> 00:40:31,069
<font color="#E5E5E5">be blocked from already from let's say</font>

881
00:40:29,870 --> 00:40:32,960
<font color="#E5E5E5">dub-dub-dub</font>

882
00:40:31,070 --> 00:40:35,150
to an external so this means<font color="#E5E5E5"> that the</font>

883
00:40:32,960 --> 00:40:37,250
course<font color="#E5E5E5"> is</font><font color="#CCCCCC"> already in but what we need to</font>

884
00:40:35,150 --> 00:40:39,200
focus on is<font color="#CCCCCC"> submerging to origin this</font>

885
00:40:37,250 --> 00:40:42,890
means we have to<font color="#CCCCCC"> add this access control</font>

886
00:40:39,200 --> 00:40:44,930
allow sub origin<font color="#E5E5E5"> header so for</font><font color="#CCCCCC"> example</font>

887
00:40:42,890 --> 00:40:48,379
in this case<font color="#CCCCCC"> we are talking</font><font color="#E5E5E5"> with slash</font>

888
00:40:44,930 --> 00:40:50,830
search slash a sink<font color="#E5E5E5"> and these requests</font>

889
00:40:48,380 --> 00:40:55,460
will have to have an extra header added

890
00:40:50,830 --> 00:40:58,819
so in conclusion this extension<font color="#E5E5E5"> really</font>

891
00:40:55,460 --> 00:41:02,630
<font color="#E5E5E5">helps in prototyping and seeing how much</font>

892
00:40:58,820 --> 00:41:06,020
refactoring is needed to to use this and

893
00:41:02,630 --> 00:41:08,340
have all the<font color="#E5E5E5"> benefits of sub origins so</font>

894
00:41:06,020 --> 00:41:11,370
it's really hot

895
00:41:08,340 --> 00:41:13,620
halogen policy<font color="#E5E5E5"> origin policy is a</font>

896
00:41:11,370 --> 00:41:16,680
proposal<font color="#E5E5E5"> hasn't been implemented yet</font>

897
00:41:13,620 --> 00:41:19,950
and<font color="#CCCCCC"> the idea</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to make some</font><font color="#E5E5E5"> of these</font>

898
00:41:16,680 --> 00:41:23,040
mitigations by default like HSTs for

899
00:41:19,950 --> 00:41:24,960
<font color="#CCCCCC">Telus or HTTPS</font><font color="#E5E5E5"> so the idea is you</font><font color="#CCCCCC"> can</font>

900
00:41:23,040 --> 00:41:27,060
add as many policies as you want like

901
00:41:24,960 --> 00:41:29,520
<font color="#CCCCCC">consecutive policy or</font><font color="#E5E5E5"> referral policies</font>

902
00:41:27,060 --> 00:41:32,310
or other policies to an entire origin by

903
00:41:29,520 --> 00:41:36,330
default<font color="#E5E5E5"> like pinning so it's sent one we</font>

904
00:41:32,310 --> 00:41:39,720
are manifest<font color="#E5E5E5"> and then every</font><font color="#CCCCCC"> source</font><font color="#E5E5E5"> get</font>

905
00:41:36,330 --> 00:41:40,830
those policies applied<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is very cool</font>

906
00:41:39,720 --> 00:41:42,419
because it complements header based

907
00:41:40,830 --> 00:41:43,830
delivery<font color="#E5E5E5"> and increases coverage for</font>

908
00:41:42,420 --> 00:41:48,330
<font color="#CCCCCC">example let's say you</font><font color="#E5E5E5"> have a reverse</font>

909
00:41:43,830 --> 00:41:51,420
proxy<font color="#CCCCCC"> and you have different different</font>

910
00:41:48,330 --> 00:41:53,250
service<font color="#CCCCCC"> I don't know you miss deployment</font>

911
00:41:51,420 --> 00:41:56,130
<font color="#E5E5E5">on one or you have some parts of the</font>

912
00:41:53,250 --> 00:41:58,170
stack that<font color="#E5E5E5"> do not trigger your code path</font>

913
00:41:56,130 --> 00:42:00,390
where<font color="#CCCCCC"> you added</font><font color="#E5E5E5"> these headers I don't</font>

914
00:41:58,170 --> 00:42:02,700
know another page<font color="#E5E5E5"> a debug Handler things</font>

915
00:42:00,390 --> 00:42:04,140
like that<font color="#E5E5E5"> like</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> things happen</font><font color="#CCCCCC"> then</font>

916
00:42:02,700 --> 00:42:06,390
you will find out that<font color="#E5E5E5"> maybe you don't</font>

917
00:42:04,140 --> 00:42:07,799
<font color="#CCCCCC">have this protection these in this way</font>

918
00:42:06,390 --> 00:42:09,540
you're<font color="#CCCCCC"> guaranteed to</font><font color="#E5E5E5"> have this</font>

919
00:42:07,800 --> 00:42:12,600
<font color="#CCCCCC">protection</font><font color="#E5E5E5"> applied to the whole origin</font>

920
00:42:09,540 --> 00:42:13,950
<font color="#E5E5E5">or it</font><font color="#CCCCCC"> may be</font><font color="#E5E5E5"> even part</font><font color="#CCCCCC"> parts of it in</font>

921
00:42:12,600 --> 00:42:16,049
the manifest<font color="#E5E5E5"> you can be a little</font><font color="#CCCCCC"> bit</font>

922
00:42:13,950 --> 00:42:18,299
<font color="#E5E5E5">more fine-grain but as I</font><font color="#CCCCCC"> said this</font><font color="#E5E5E5"> is a</font>

923
00:42:16,050 --> 00:42:21,780
proposal<font color="#E5E5E5"> so if you search for origin</font>

924
00:42:18,300 --> 00:42:23,550
policy on w3 you will see that are

925
00:42:21,780 --> 00:42:25,890
actively discussed<font color="#E5E5E5"> it's been actively</font>

926
00:42:23,550 --> 00:42:28,440
discussed another<font color="#E5E5E5"> one is feature policy</font>

927
00:42:25,890 --> 00:42:30,509
it allows the web developer to

928
00:42:28,440 --> 00:42:33,630
selectively enable and disable different

929
00:42:30,510 --> 00:42:35,520
browser features<font color="#E5E5E5"> and API</font><font color="#CCCCCC"> such as going</font>

930
00:42:33,630 --> 00:42:38,340
<font color="#E5E5E5">fullscreen or using geolocation</font>

931
00:42:35,520 --> 00:42:39,960
<font color="#E5E5E5">or using</font><font color="#CCCCCC"> web</font><font color="#E5E5E5"> USB in combination with</font>

932
00:42:38,340 --> 00:42:42,660
origin policy<font color="#CCCCCC"> it's very good</font><font color="#E5E5E5"> for</font>

933
00:42:39,960 --> 00:42:45,150
restricting<font color="#E5E5E5"> for example geolocation</font><font color="#CCCCCC"> - I</font>

934
00:42:42,660 --> 00:42:47,520
<font color="#E5E5E5">don't know search on map action you need</font>

935
00:42:45,150 --> 00:42:49,470
<font color="#E5E5E5">your location</font><font color="#CCCCCC"> only on one action and so</font>

936
00:42:47,520 --> 00:42:52,350
you say<font color="#E5E5E5"> explicitly I will need it only</font>

937
00:42:49,470 --> 00:42:57,060
<font color="#CCCCCC">on this action so an XSS</font><font color="#E5E5E5"> on any other</font>

938
00:42:52,350 --> 00:43:00,569
page will have a harder time<font color="#E5E5E5"> for example</font>

939
00:42:57,060 --> 00:43:02,910
<font color="#CCCCCC">getting the user location because it</font>

940
00:43:00,570 --> 00:43:05,370
will be disabled<font color="#E5E5E5"> hard to disabled on</font>

941
00:43:02,910 --> 00:43:06,810
other pages<font color="#E5E5E5"> I mean this is not a</font>

942
00:43:05,370 --> 00:43:08,819
security<font color="#CCCCCC"> band I mean you could do things</font>

943
00:43:06,810 --> 00:43:10,620
<font color="#E5E5E5">you could try to do lateral</font><font color="#CCCCCC"> I mean you</font>

944
00:43:08,820 --> 00:43:13,410
could try<font color="#E5E5E5"> to jump from one</font><font color="#CCCCCC"> to to the</font>

945
00:43:10,620 --> 00:43:18,660
<font color="#CCCCCC">other but this hardens and makes it hard</font>

946
00:43:13,410 --> 00:43:21,060
harder raises the bar<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> we are on</font>

947
00:43:18,660 --> 00:43:23,250
<font color="#E5E5E5">time or</font><font color="#CCCCCC"> slightly slightly</font>

948
00:43:21,060 --> 00:43:27,420
<font color="#E5E5E5">slightly earlier so I have any questions</font>

949
00:43:23,250 --> 00:43:29,590
about CSP or the new stuff<font color="#E5E5E5"> please ask</font>

950
00:43:27,420 --> 00:43:32,519
<font color="#CCCCCC">thank you</font>

951
00:43:29,590 --> 00:43:32,519
[Applause]

