1
00:00:02,810 --> 00:00:09,590
yes my name<font color="#CCCCCC"> is</font><font color="#E5E5E5"> Mike</font><font color="#CCCCCC"> sie doch and today</font><font color="#E5E5E5"> I</font>

2
00:00:06,029 --> 00:00:12,389
<font color="#E5E5E5">will talk a bit about API security and</font>

3
00:00:09,590 --> 00:00:17,340
before I start please navigate to this

4
00:00:12,389 --> 00:00:21,630
website so secure<font color="#CCCCCC"> code</font><font color="#E5E5E5"> PL</font><font color="#CCCCCC"> / q</font><font color="#E5E5E5"> no</font>

5
00:00:17,340 --> 00:00:25,110
exploits of course here and just please

6
00:00:21,630 --> 00:00:27,210
ask one<font color="#CCCCCC"> question then I will move to</font>

7
00:00:25,110 --> 00:00:40,170
<font color="#CCCCCC">another question and</font><font color="#E5E5E5"> we'll have three</font>

8
00:00:27,210 --> 00:00:52,140
questions<font color="#E5E5E5"> in total so all right so</font>

9
00:00:40,170 --> 00:00:57,170
<font color="#E5E5E5">security</font><font color="#CCCCCC"> L / Q what is xx see here is</font>

10
00:00:52,140 --> 00:00:57,170
the address for<font color="#CCCCCC"> our little</font><font color="#E5E5E5"> poll</font>

11
00:01:07,869 --> 00:01:16,579
<font color="#E5E5E5">all right so let's show</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> results yeah</font>

12
00:01:13,189 --> 00:01:21,889
it's definitely<font color="#E5E5E5"> an ability in XML</font>

13
00:01:16,579 --> 00:01:26,960
external entities so let's go to another

14
00:01:21,890 --> 00:01:29,659
<font color="#CCCCCC">question so what is</font><font color="#E5E5E5"> SSR</font><font color="#CCCCCC"> F or do you know</font>

15
00:01:26,960 --> 00:01:32,439
what is<font color="#E5E5E5"> this RF maybe it's the same as</font>

16
00:01:29,659 --> 00:01:32,439
<font color="#CCCCCC">xxe</font>

17
00:01:40,260 --> 00:01:53,980
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> have a bit more people now</font>

18
00:01:48,690 --> 00:01:55,479
let's see<font color="#E5E5E5"> our results no it's</font>

19
00:01:53,980 --> 00:01:57,850
interesting it's<font color="#E5E5E5"> server-side rucas</font>

20
00:01:55,479 --> 00:02:01,090
forgery<font color="#CCCCCC"> I'll talk about this a bit later</font>

21
00:01:57,850 --> 00:02:06,929
<font color="#E5E5E5">during my presentation and last question</font>

22
00:02:01,090 --> 00:02:10,660
<font color="#CCCCCC">is what is solar I will also talk about</font>

23
00:02:06,930 --> 00:02:19,060
the solar<font color="#E5E5E5"> a bit so maybe it's worth</font>

24
00:02:10,660 --> 00:02:21,340
<font color="#E5E5E5">knowing so content management system I</font>

25
00:02:19,060 --> 00:02:28,180
didn't know search engine or telling

26
00:02:21,340 --> 00:02:30,310
router<font color="#CCCCCC"> maybe alright so let's see</font><font color="#E5E5E5"> a</font>

27
00:02:28,180 --> 00:02:36,100
results yes it's definitely search

28
00:02:30,310 --> 00:02:40,330
engine<font color="#E5E5E5"> ok so thank you for using my</font><font color="#CCCCCC"> poll</font>

29
00:02:36,100 --> 00:02:45,220
<font color="#CCCCCC">and let's go</font><font color="#E5E5E5"> back to my presentation</font><font color="#CCCCCC"> all</font>

30
00:02:40,330 --> 00:02:48,310
<font color="#E5E5E5">right and a couple of words</font><font color="#CCCCCC"> about me</font><font color="#E5E5E5"> I'm</font>

31
00:02:45,220 --> 00:02:51,459
known in Poland<font color="#E5E5E5"> from this website</font><font color="#CCCCCC"> secure</font>

32
00:02:48,310 --> 00:02:54,310
<font color="#CCCCCC">code</font><font color="#E5E5E5"> PL I'm the founder</font><font color="#CCCCCC"> of this little</font>

33
00:02:51,459 --> 00:02:56,739
website<font color="#E5E5E5"> about security</font><font color="#CCCCCC"> I also work in</font>

34
00:02:54,310 --> 00:02:59,680
<font color="#CCCCCC">secure team company</font><font color="#E5E5E5"> we do penetration</font>

35
00:02:56,739 --> 00:03:02,980
testing<font color="#E5E5E5"> and trainings it's something</font>

36
00:02:59,680 --> 00:03:05,070
<font color="#E5E5E5">like 250</font><font color="#CCCCCC"> pentas here and about 100</font>

37
00:03:02,980 --> 00:03:09,250
different trainings<font color="#E5E5E5"> yeah</font>

38
00:03:05,070 --> 00:03:10,900
all right what is<font color="#E5E5E5"> API actually</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> found</font>

39
00:03:09,250 --> 00:03:13,600
this funny definition somewhere so

40
00:03:10,900 --> 00:03:14,049
website made for computers what is<font color="#CCCCCC"> reza</font>

41
00:03:13,600 --> 00:03:16,840
<font color="#CCCCCC">DPI</font>

42
00:03:14,049 --> 00:03:20,650
<font color="#E5E5E5">there of course formal definitions but</font>

43
00:03:16,840 --> 00:03:24,700
actually<font color="#CCCCCC"> i see that no</font><font color="#E5E5E5"> one sticks to</font>

44
00:03:20,650 --> 00:03:26,739
those<font color="#E5E5E5"> or this formal definition and the</font>

45
00:03:24,700 --> 00:03:29,829
best definition in my opinion<font color="#CCCCCC"> i found is</font>

46
00:03:26,739 --> 00:03:31,810
this so rest api is nothing more than

47
00:03:29,830 --> 00:03:33,549
just<font color="#E5E5E5"> a web application</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> this web</font>

48
00:03:31,810 --> 00:03:35,860
<font color="#CCCCCC">application is structured</font><font color="#E5E5E5"> but the</font>

49
00:03:33,549 --> 00:03:39,489
problem is that<font color="#CCCCCC"> it is structured</font><font color="#E5E5E5"> only in</font>

50
00:03:35,860 --> 00:03:42,820
one<font color="#E5E5E5"> company or only in one development</font>

51
00:03:39,489 --> 00:03:46,569
team<font color="#CCCCCC"> so it's not widely structured for</font>

52
00:03:42,820 --> 00:03:49,480
example one team is<font color="#CCCCCC"> using post</font><font color="#E5E5E5"> HTTP verb</font>

53
00:03:46,569 --> 00:03:51,470
for updating and another team is<font color="#CCCCCC"> using</font>

54
00:03:49,480 --> 00:03:55,329
post HTTP verb

55
00:03:51,470 --> 00:03:59,210
adding new<font color="#CCCCCC"> object using their API</font>

56
00:03:55,330 --> 00:04:02,570
<font color="#CCCCCC">alright just</font><font color="#E5E5E5"> to two men before examples</font>

57
00:03:59,210 --> 00:04:05,930
<font color="#E5E5E5">so one example from Facebook</font><font color="#CCCCCC"> as you can</font>

58
00:04:02,570 --> 00:04:10,489
see here is one parameter<font color="#E5E5E5"> another</font>

59
00:04:05,930 --> 00:04:12,740
parameter<font color="#E5E5E5"> complex parameter and it</font>

60
00:04:10,490 --> 00:04:15,020
<font color="#E5E5E5">returned</font><font color="#CCCCCC"> something in our example from</font>

61
00:04:12,740 --> 00:04:20,900
Google so parameters everywhere<font color="#CCCCCC"> he</font>

62
00:04:15,020 --> 00:04:23,330
<font color="#E5E5E5">actually so I only have one hand zoom it</font>

63
00:04:20,899 --> 00:04:26,090
a bit like<font color="#E5E5E5"> this so</font><font color="#CCCCCC"> here parameter here</font>

64
00:04:23,330 --> 00:04:28,340
parameter here parameters<font color="#CCCCCC"> jason</font>

65
00:04:26,090 --> 00:04:31,520
parameter and here parameters parameters

66
00:04:28,340 --> 00:04:36,530
<font color="#E5E5E5">everywhere it's not so structured</font><font color="#CCCCCC"> i'd</font>

67
00:04:31,520 --> 00:04:39,710
say all<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so let's see the first</font>

68
00:04:36,530 --> 00:04:42,530
case about<font color="#CCCCCC"> api hacking and</font><font color="#E5E5E5"> this is quite</font>

69
00:04:39,710 --> 00:04:44,150
fresh from last month actually<font color="#E5E5E5"> and in</font>

70
00:04:42,530 --> 00:04:47,780
the united states<font color="#E5E5E5"> they have something</font>

71
00:04:44,150 --> 00:04:50,840
<font color="#E5E5E5">like location smart and</font><font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> demo</font>

72
00:04:47,780 --> 00:04:54,530
<font color="#E5E5E5">they allow you to track physical</font>

73
00:04:50,840 --> 00:04:57,229
location of<font color="#E5E5E5"> your</font><font color="#CCCCCC"> phone</font><font color="#E5E5E5"> so basically</font><font color="#CCCCCC"> you</font>

74
00:04:54,530 --> 00:05:00,619
put<font color="#CCCCCC"> your phone number your gsm number</font>

75
00:04:57,230 --> 00:05:03,680
<font color="#E5E5E5">into this website and then they send you</font>

76
00:05:00,620 --> 00:05:06,200
a short message<font color="#CCCCCC"> an SMS you retype the</font>

77
00:05:03,680 --> 00:05:08,120
system as into this<font color="#CCCCCC"> webform and</font><font color="#E5E5E5"> after</font>

78
00:05:06,200 --> 00:05:10,310
<font color="#E5E5E5">this so you authenticate this request</font>

79
00:05:08,120 --> 00:05:12,710
<font color="#E5E5E5">and after this they show you the exact</font>

80
00:05:10,310 --> 00:05:15,919
location<font color="#CCCCCC"> of your phone and someone</font>

81
00:05:12,710 --> 00:05:18,500
exploited this demo<font color="#CCCCCC"> staff and was able</font>

82
00:05:15,919 --> 00:05:21,469
<font color="#CCCCCC">to track</font><font color="#E5E5E5"> location or to show location of</font>

83
00:05:18,500 --> 00:05:24,050
<font color="#E5E5E5">every single cell phone in the</font><font color="#CCCCCC"> u.s. in</font>

84
00:05:21,470 --> 00:05:26,690
real time<font color="#E5E5E5"> and the problem was in their</font>

85
00:05:24,050 --> 00:05:30,020
api so the<font color="#CCCCCC"> website was pretty pretty</font>

86
00:05:26,690 --> 00:05:33,729
<font color="#E5E5E5">safely secure but the a PI API was a bit</font>

87
00:05:30,020 --> 00:05:37,789
<font color="#E5E5E5">crazy so</font><font color="#CCCCCC"> he needed actually two requests</font>

88
00:05:33,729 --> 00:05:41,120
<font color="#E5E5E5">here is our number so your number or</font>

89
00:05:37,790 --> 00:05:43,300
number of<font color="#E5E5E5"> your victim and here is</font>

90
00:05:41,120 --> 00:05:46,340
another<font color="#E5E5E5"> important things of this Jason</font>

91
00:05:43,300 --> 00:05:50,090
because normally this API return

92
00:05:46,340 --> 00:05:52,669
<font color="#CCCCCC">information in XML and when you</font><font color="#E5E5E5"> use this</font>

93
00:05:50,090 --> 00:05:56,060
XML version the default version<font color="#E5E5E5"> this API</font>

94
00:05:52,669 --> 00:05:58,520
was pretty pretty secure but after you

95
00:05:56,060 --> 00:06:00,650
change this<font color="#E5E5E5"> to Jason</font><font color="#CCCCCC"> it allowed you to</font>

96
00:05:58,520 --> 00:06:02,960
do something<font color="#E5E5E5"> like this so first request</font>

97
00:06:00,650 --> 00:06:04,030
<font color="#E5E5E5">with this Jason and boost when with this</font>

98
00:06:02,960 --> 00:06:06,370
<font color="#E5E5E5">number which</font>

99
00:06:04,030 --> 00:06:08,679
you token so a random<font color="#E5E5E5"> string then</font>

100
00:06:06,370 --> 00:06:12,070
another post request with this<font color="#CCCCCC"> JSON</font>

101
00:06:08,680 --> 00:06:16,360
<font color="#E5E5E5">using this token using</font><font color="#CCCCCC"> this JSON and</font>

102
00:06:12,070 --> 00:06:18,990
without any<font color="#CCCCCC"> fornication</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> returns you a</font>

103
00:06:16,360 --> 00:06:22,290
precise location<font color="#E5E5E5"> of this number</font>

104
00:06:18,990 --> 00:06:24,490
something<font color="#CCCCCC"> like this so they had no</font>

105
00:06:22,290 --> 00:06:29,680
<font color="#CCCCCC">authentication for</font><font color="#E5E5E5"> this stuff</font><font color="#CCCCCC"> any number</font>

106
00:06:24,490 --> 00:06:32,740
here<font color="#E5E5E5"> right so in our case from</font><font color="#CCCCCC"> last year</font>

107
00:06:29,680 --> 00:06:37,480
in<font color="#E5E5E5"> Italy and Italy</font><font color="#CCCCCC"> you can buy a little</font>

108
00:06:32,740 --> 00:06:40,120
box to<font color="#CCCCCC"> your car and if you drive safely</font>

109
00:06:37,480 --> 00:06:43,120
so this box monitors how you drive

110
00:06:40,120 --> 00:06:47,530
if you drive safely<font color="#CCCCCC"> you have lower</font>

111
00:06:43,120 --> 00:06:50,440
insurance<font color="#E5E5E5"> right</font><font color="#CCCCCC"> if you drive like like</font>

112
00:06:47,530 --> 00:06:53,200
insane person you have your insurance

113
00:06:50,440 --> 00:06:55,780
<font color="#E5E5E5">going rates going up and someone</font>

114
00:06:53,200 --> 00:06:59,680
<font color="#E5E5E5">analyzed this little box and he</font>

115
00:06:55,780 --> 00:07:03,489
extracted extracted this little API

116
00:06:59,680 --> 00:07:06,160
request here and actually what do we

117
00:07:03,490 --> 00:07:07,420
have here<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have Carol</font><font color="#E5E5E5"> Isis so number</font>

118
00:07:06,160 --> 00:07:10,270
<font color="#E5E5E5">from the license plate</font>

119
00:07:07,420 --> 00:07:13,750
we have domain<font color="#CCCCCC"> it was fixed</font><font color="#E5E5E5"> and we had</font>

120
00:07:10,270 --> 00:07:16,419
company<font color="#CCCCCC"> so something like aliens</font><font color="#E5E5E5"> or ing</font>

121
00:07:13,750 --> 00:07:18,550
so insurance company<font color="#E5E5E5"> and without an</font>

122
00:07:16,420 --> 00:07:21,490
authentication<font color="#CCCCCC"> it returned you all the</font>

123
00:07:18,550 --> 00:07:23,380
history<font color="#E5E5E5"> locations this is a template but</font>

124
00:07:21,490 --> 00:07:24,790
in real scenario<font color="#CCCCCC"> you return you</font>

125
00:07:23,380 --> 00:07:27,969
everything and there's another code

126
00:07:24,790 --> 00:07:31,150
which will<font color="#E5E5E5"> be useful</font><font color="#CCCCCC"> for a moment so the</font>

127
00:07:27,970 --> 00:07:32,880
first<font color="#E5E5E5"> request and the second request we</font>

128
00:07:31,150 --> 00:07:34,719
have<font color="#E5E5E5"> still this</font><font color="#CCCCCC"> hard-coded domain</font>

129
00:07:32,880 --> 00:07:37,060
<font color="#E5E5E5">company like aliens</font>

130
00:07:34,720 --> 00:07:40,120
ing something like this this<font color="#CCCCCC"> is another</font>

131
00:07:37,060 --> 00:07:44,080
code car license<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> random data</font>

132
00:07:40,120 --> 00:07:48,160
and this<font color="#CCCCCC"> u uu</font><font color="#E5E5E5"> ID and this viewer</font><font color="#CCCCCC"> UUID</font>

133
00:07:44,080 --> 00:07:49,630
<font color="#E5E5E5">can be also extracted lower from here so</font>

134
00:07:48,160 --> 00:07:53,230
<font color="#E5E5E5">we have actually</font><font color="#CCCCCC"> all the parameters</font>

135
00:07:49,630 --> 00:07:56,350
<font color="#E5E5E5">needed and in the response we had all</font>

136
00:07:53,230 --> 00:07:59,050
the<font color="#CCCCCC"> information about</font><font color="#E5E5E5"> the car owner</font><font color="#CCCCCC"> all</font>

137
00:07:56,350 --> 00:08:01,780
the<font color="#E5E5E5"> history where this car was actually</font>

138
00:07:59,050 --> 00:08:04,570
everything so no authentication<font color="#E5E5E5"> and</font>

139
00:08:01,780 --> 00:08:09,729
actually no authorization<font color="#CCCCCC"> all you needed</font>

140
00:08:04,570 --> 00:08:13,510
was<font color="#E5E5E5"> this actually number from from the</font>

141
00:08:09,730 --> 00:08:17,050
car plate pretty crazy<font color="#E5E5E5"> so another stuff</font>

142
00:08:13,510 --> 00:08:17,560
from automotive industry so this time

143
00:08:17,050 --> 00:08:20,020
<font color="#CCCCCC">electric</font>

144
00:08:17,560 --> 00:08:21,850
<font color="#CCCCCC">misson someone analyzed this</font><font color="#E5E5E5"> mobile</font>

145
00:08:20,020 --> 00:08:24,639
<font color="#CCCCCC">application and this</font><font color="#E5E5E5"> mobile application</font>

146
00:08:21,850 --> 00:08:27,340
normally communicates with this<font color="#E5E5E5"> API here</font>

147
00:08:24,639 --> 00:08:31,030
on the internet and<font color="#E5E5E5"> this IP</font><font color="#CCCCCC"> api connects</font>

148
00:08:27,340 --> 00:08:33,640
or communicates using<font color="#E5E5E5"> GSM or Internet to</font>

149
00:08:31,030 --> 00:08:35,860
<font color="#CCCCCC">a specific car</font><font color="#E5E5E5"> so for example we can</font>

150
00:08:33,640 --> 00:08:37,870
turn on turn off hitting<font color="#E5E5E5"> check status</font>

151
00:08:35,860 --> 00:08:41,409
off of the battery<font color="#CCCCCC"> and stuff</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> this</font>

152
00:08:37,870 --> 00:08:44,200
<font color="#E5E5E5">and it turned out that these mobile</font>

153
00:08:41,409 --> 00:08:46,360
applications<font color="#CCCCCC"> sending</font><font color="#E5E5E5"> this request so</font>

154
00:08:44,200 --> 00:08:49,390
this is this was<font color="#CCCCCC"> missing something</font>

155
00:08:46,360 --> 00:08:53,050
something something to do something like

156
00:08:49,390 --> 00:08:54,790
<font color="#E5E5E5">turn</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> hitting and the only thing which</font>

157
00:08:53,050 --> 00:08:56,439
authenticated<font color="#E5E5E5"> this request was this</font>

158
00:08:54,790 --> 00:08:59,890
vehicle information<font color="#E5E5E5"> number which is</font>

159
00:08:56,440 --> 00:09:02,290
printed<font color="#E5E5E5"> by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> way on a car and it can</font>

160
00:08:59,890 --> 00:09:05,260
be<font color="#E5E5E5"> also iterated so if your car</font><font color="#CCCCCC"> has</font>

161
00:09:02,290 --> 00:09:05,620
vehicle information<font color="#CCCCCC"> number 101</font><font color="#E5E5E5"> at the</font>

162
00:09:05,260 --> 00:09:09,220
end

163
00:09:05,620 --> 00:09:12,580
another<font color="#CCCCCC"> Nissan is 102 103 104 and so on</font>

164
00:09:09,220 --> 00:09:16,450
<font color="#E5E5E5">each one so</font><font color="#CCCCCC"> the guys did a little demo</font>

165
00:09:12,580 --> 00:09:18,400
<font color="#E5E5E5">so one was sitting in Australia</font><font color="#CCCCCC"> and</font>

166
00:09:16,450 --> 00:09:21,640
<font color="#E5E5E5">another one was sitting in the UK and</font>

167
00:09:18,400 --> 00:09:26,770
the guy in Australia<font color="#CCCCCC"> just turn on turn</font>

168
00:09:21,640 --> 00:09:28,870
off something in<font color="#CCCCCC"> in the UK real-time</font><font color="#E5E5E5"> all</font>

169
00:09:26,770 --> 00:09:31,540
<font color="#E5E5E5">right crazy variability in WordPress so</font>

170
00:09:28,870 --> 00:09:34,710
in WordPress Dre<font color="#CCCCCC"> in version 4 Stephen</font>

171
00:09:31,540 --> 00:09:37,480
<font color="#CCCCCC">zero the introduced new REST API</font><font color="#E5E5E5"> and</font>

172
00:09:34,710 --> 00:09:41,200
actually a<font color="#CCCCCC"> BA governability in this API</font>

173
00:09:37,480 --> 00:09:43,810
allows you to edit any post without<font color="#CCCCCC"> any</font>

174
00:09:41,200 --> 00:09:46,990
<font color="#E5E5E5">authentication so what was the core of</font>

175
00:09:43,810 --> 00:09:50,469
this<font color="#CCCCCC"> Vern ability so actually if you</font>

176
00:09:46,990 --> 00:09:51,130
want to<font color="#E5E5E5"> edit this post with ID</font><font color="#CCCCCC"> one two</font>

177
00:09:50,470 --> 00:09:55,480
<font color="#CCCCCC">three four</font>

178
00:09:51,130 --> 00:09:58,930
you can issue an HTTP POST request<font color="#E5E5E5"> this</font>

179
00:09:55,480 --> 00:10:01,839
URL<font color="#E5E5E5"> and provide data and this post is</font>

180
00:09:58,930 --> 00:10:06,189
updated with this data<font color="#E5E5E5"> but alternatively</font>

181
00:10:01,839 --> 00:10:08,680
you can pass this ID twice this<font color="#E5E5E5"> and this</font>

182
00:10:06,190 --> 00:10:10,870
and if you do this in the<font color="#CCCCCC"> standard way</font>

183
00:10:08,680 --> 00:10:13,270
this is pretty<font color="#CCCCCC"> secure no vulnerability</font>

184
00:10:10,870 --> 00:10:16,500
here<font color="#E5E5E5"> but if you put something like</font>

185
00:10:13,270 --> 00:10:19,480
double ID here let's see what happens<font color="#CCCCCC"> so</font>

186
00:10:16,500 --> 00:10:22,270
<font color="#CCCCCC">for</font><font color="#E5E5E5"> example we want</font><font color="#CCCCCC"> to edit this post</font>

187
00:10:19,480 --> 00:10:24,160
with number<font color="#CCCCCC"> one two three so</font><font color="#E5E5E5"> provide</font>

188
00:10:22,270 --> 00:10:28,390
<font color="#E5E5E5">after question mark this one two three</font>

189
00:10:24,160 --> 00:10:31,300
ABC then we have our permission checking

190
00:10:28,390 --> 00:10:35,080
function and by default<font color="#E5E5E5"> it reach</font>

191
00:10:31,300 --> 00:10:38,620
<font color="#E5E5E5">turns true</font><font color="#CCCCCC"> so if we have this post</font><font color="#E5E5E5"> with</font>

192
00:10:35,080 --> 00:10:41,560
ID 1 2 3 ABC this<font color="#E5E5E5"> post of course doesn't</font>

193
00:10:38,620 --> 00:10:44,080
<font color="#E5E5E5">exist</font><font color="#CCCCCC"> and in this case this function</font>

194
00:10:41,560 --> 00:10:46,899
<font color="#CCCCCC">returns true so you</font><font color="#E5E5E5"> can update or edit</font>

195
00:10:44,080 --> 00:10:51,519
this post with this<font color="#E5E5E5"> non existing ID</font>

196
00:10:46,899 --> 00:10:55,720
<font color="#E5E5E5">nothing nothing wrong but the chorus of</font>

197
00:10:51,519 --> 00:10:58,029
<font color="#E5E5E5">this problem is here on point 3 so just</font>

198
00:10:55,720 --> 00:11:01,660
<font color="#E5E5E5">after the final</font><font color="#CCCCCC"> update they cast this</font>

199
00:10:58,029 --> 00:11:03,370
value<font color="#E5E5E5"> into integer so we have rights to</font>

200
00:11:01,660 --> 00:11:07,000
edit<font color="#E5E5E5"> this 1 2</font><font color="#CCCCCC"> 3</font>

201
00:11:03,370 --> 00:11:11,740
ABC but<font color="#E5E5E5"> now it is 1 2</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> and the post is</font>

202
00:11:07,000 --> 00:11:14,079
edited<font color="#E5E5E5"> there are there were different</font>

203
00:11:11,740 --> 00:11:16,899
botnets<font color="#E5E5E5"> which exploited this</font>

204
00:11:14,079 --> 00:11:18,939
vulnerability and published malware<font color="#E5E5E5"> or</font>

205
00:11:16,899 --> 00:11:23,279
something like this on many different

206
00:11:18,940 --> 00:11:26,680
WordPress sites<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right another case</font>

207
00:11:23,279 --> 00:11:30,060
<font color="#CCCCCC">last</font><font color="#E5E5E5"> year and Twitter and actually this</font>

208
00:11:26,680 --> 00:11:33,459
bug was worth 10,000<font color="#CCCCCC"> bucks not bad and</font>

209
00:11:30,060 --> 00:11:37,209
actually<font color="#E5E5E5"> the whole exploit is here on</font>

210
00:11:33,459 --> 00:11:41,140
the<font color="#E5E5E5"> screen and the most important stuff</font>

211
00:11:37,209 --> 00:11:43,660
is here<font color="#CCCCCC"> so doctype actually this line is</font>

212
00:11:41,140 --> 00:11:45,850
not necessary<font color="#CCCCCC"> I think this guy just</font>

213
00:11:43,660 --> 00:11:48,520
copied this from<font color="#E5E5E5"> a tutorial</font><font color="#CCCCCC"> or something</font>

214
00:11:45,850 --> 00:11:51,370
<font color="#CCCCCC">like this</font><font color="#E5E5E5"> it's not necessary actually</font>

215
00:11:48,520 --> 00:11:55,449
<font color="#CCCCCC">and he's defining</font><font color="#E5E5E5"> here external entity</font>

216
00:11:51,370 --> 00:11:57,339
<font color="#E5E5E5">so the name</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> entity's file this</font>

217
00:11:55,450 --> 00:12:01,089
<font color="#CCCCCC">is external</font><font color="#E5E5E5"> entity so this system</font><font color="#CCCCCC"> key</font>

218
00:11:57,339 --> 00:12:03,850
<font color="#CCCCCC">word</font><font color="#E5E5E5"> and here you can provide a file a</font>

219
00:12:01,089 --> 00:12:05,470
file from from your server<font color="#E5E5E5"> so for</font>

220
00:12:03,850 --> 00:12:07,839
example if you want to<font color="#E5E5E5"> read</font><font color="#CCCCCC"> etc'</font>

221
00:12:05,470 --> 00:12:10,450
password from<font color="#CCCCCC"> a server you provide</font><font color="#E5E5E5"> the</font>

222
00:12:07,839 --> 00:12:12,700
file name<font color="#CCCCCC"> here one thing definition of</font>

223
00:12:10,450 --> 00:12:15,610
this entity<font color="#CCCCCC"> and another thing</font><font color="#E5E5E5"> we must</font>

224
00:12:12,700 --> 00:12:18,010
use this entity<font color="#E5E5E5"> so amp name of this</font>

225
00:12:15,610 --> 00:12:23,290
entity<font color="#E5E5E5"> and semicolon and in the response</font>

226
00:12:18,010 --> 00:12:29,260
when this<font color="#E5E5E5"> entity was evaluated we had a</font>

227
00:12:23,290 --> 00:12:31,660
<font color="#E5E5E5">TC password on the response right</font><font color="#CCCCCC"> ok a</font>

228
00:12:29,260 --> 00:12:34,810
couple<font color="#CCCCCC"> of words about HTTP verbs</font><font color="#E5E5E5"> so</font>

229
00:12:31,660 --> 00:12:36,699
normally we<font color="#E5E5E5"> concern increased api's we</font>

230
00:12:34,810 --> 00:12:39,430
use something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this get for getting</font>

231
00:12:36,699 --> 00:12:42,149
data<font color="#E5E5E5"> post for adding or updating put for</font>

232
00:12:39,430 --> 00:12:44,890
adding<font color="#CCCCCC"> relating delete for deleting</font>

233
00:12:42,149 --> 00:12:45,440
<font color="#E5E5E5">sometimes you can find part for updating</font>

234
00:12:44,890 --> 00:12:49,250
and

235
00:12:45,440 --> 00:12:52,370
of different methods for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> PayPal</font>

236
00:12:49,250 --> 00:12:57,410
you can<font color="#E5E5E5"> use</font><font color="#CCCCCC"> part</font><font color="#E5E5E5"> for update and let's</font>

237
00:12:52,370 --> 00:13:00,490
see<font color="#CCCCCC"> to this case someone</font><font color="#E5E5E5"> was someone is</font>

238
00:12:57,410 --> 00:13:04,250
actually grumbling a bit about his

239
00:13:00,490 --> 00:13:07,730
really tense corporate firewall and this

240
00:13:04,250 --> 00:13:11,000
firewall<font color="#E5E5E5"> loves all the gets get HTTP</font>

241
00:13:07,730 --> 00:13:13,660
verb and post HTTP verb<font color="#CCCCCC"> no delete</font><font color="#E5E5E5"> no put</font>

242
00:13:11,000 --> 00:13:16,820
but they are needed for our normal

243
00:13:13,660 --> 00:13:20,360
normally functioning<font color="#CCCCCC"> API so what to do</font>

244
00:13:16,820 --> 00:13:24,350
<font color="#E5E5E5">and someone</font><font color="#CCCCCC"> hints this guy that he can</font>

245
00:13:20,360 --> 00:13:26,810
use this HTTP header<font color="#E5E5E5"> so X HTTP method</font>

246
00:13:24,350 --> 00:13:30,070
<font color="#CCCCCC">override put so basically he can issue</font>

247
00:13:26,810 --> 00:13:33,229
get or post<font color="#E5E5E5"> request</font><font color="#CCCCCC"> but will be scatter</font>

248
00:13:30,070 --> 00:13:38,570
finally put will be executed<font color="#E5E5E5"> he says</font><font color="#CCCCCC"> ok</font>

249
00:13:33,230 --> 00:13:40,250
it works<font color="#E5E5E5"> so let's look at the case</font><font color="#CCCCCC"> cisco</font>

250
00:13:38,570 --> 00:13:41,900
prime infrastructure<font color="#CCCCCC"> I don't know if you</font>

251
00:13:40,250 --> 00:13:44,510
if you are<font color="#E5E5E5"> familiar with this product or</font>

252
00:13:41,900 --> 00:13:45,850
<font color="#E5E5E5">no please who knows this project please</font>

253
00:13:44,510 --> 00:13:51,580
hands up

254
00:13:45,850 --> 00:13:56,060
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> to not many people ok let's see</font>

255
00:13:51,580 --> 00:13:58,580
<font color="#CCCCCC">they have an API which allows for</font>

256
00:13:56,060 --> 00:14:02,890
something or for everything and the

257
00:13:58,580 --> 00:14:07,310
first problem<font color="#CCCCCC"> here is that</font><font color="#E5E5E5"> Cisco's</font>

258
00:14:02,890 --> 00:14:10,100
engineers thought that it would be<font color="#E5E5E5"> nice</font>

259
00:14:07,310 --> 00:14:12,859
<font color="#CCCCCC">to give access to documentation to all</font>

260
00:14:10,100 --> 00:14:16,280
the users<font color="#CCCCCC"> without any authentication</font><font color="#E5E5E5"> it</font>

261
00:14:12,860 --> 00:14:20,200
it makes<font color="#E5E5E5"> sense right documentation for</font>

262
00:14:16,280 --> 00:14:23,209
everyone but someone coded<font color="#E5E5E5"> this stuff</font>

263
00:14:20,200 --> 00:14:26,210
like this<font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> happen this</font>

264
00:14:23,210 --> 00:14:29,570
underscore<font color="#CCCCCC"> dogs parameter</font><font color="#E5E5E5"> so probably</font><font color="#CCCCCC"> or</font>

265
00:14:26,210 --> 00:14:32,870
you want to access<font color="#E5E5E5"> documentation all the</font>

266
00:14:29,570 --> 00:14:36,710
request is unauthenticated but how to

267
00:14:32,870 --> 00:14:39,260
<font color="#E5E5E5">make another request</font><font color="#CCCCCC"> and get requests so</font>

268
00:14:36,710 --> 00:14:43,130
this<font color="#E5E5E5"> crazy</font><font color="#CCCCCC"> heather HTTP method of a</font>

269
00:14:39,260 --> 00:14:46,790
<font color="#CCCCCC">write post and post body first step the</font>

270
00:14:43,130 --> 00:14:49,070
second step was<font color="#E5E5E5"> with this get verb</font><font color="#CCCCCC"> it</font>

271
00:14:46,790 --> 00:14:53,449
was not so<font color="#CCCCCC"> easy to just put</font><font color="#E5E5E5"> underscore</font>

272
00:14:49,070 --> 00:14:57,079
dogs on this<font color="#E5E5E5"> get HTTP verb</font><font color="#CCCCCC"> and the idea</font>

273
00:14:53,450 --> 00:15:00,079
to bypass<font color="#E5E5E5"> authentication was to use this</font>

274
00:14:57,079 --> 00:15:03,769
<font color="#E5E5E5">X HTTP</font><font color="#CCCCCC"> method</font><font color="#E5E5E5"> over right but we've</font><font color="#CCCCCC"> got</font>

275
00:15:00,079 --> 00:15:06,680
lower case<font color="#CCCCCC"> Y lower case I don't</font><font color="#E5E5E5"> know but</font>

276
00:15:03,769 --> 00:15:09,709
it worked and<font color="#CCCCCC"> actually the final step</font>

277
00:15:06,680 --> 00:15:13,519
<font color="#E5E5E5">was this</font><font color="#CCCCCC"> x XE so bypassing</font>

278
00:15:09,709 --> 00:15:16,609
authentication another verb doctype

279
00:15:13,519 --> 00:15:19,310
definition<font color="#E5E5E5"> using entity and on our</font>

280
00:15:16,610 --> 00:15:21,889
response we have<font color="#E5E5E5"> a DC password from from</font>

281
00:15:19,310 --> 00:15:25,638
the server<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> there is</font><font color="#E5E5E5"> one more</font>

282
00:15:21,889 --> 00:15:29,600
<font color="#E5E5E5">thing here in this case let me scroll</font>

283
00:15:25,639 --> 00:15:33,199
<font color="#CCCCCC">back a bit so as you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> this API</font>

284
00:15:29,600 --> 00:15:37,730
<font color="#E5E5E5">accepts normally</font><font color="#CCCCCC"> jason and many people</font>

285
00:15:33,199 --> 00:15:41,258
say we accept<font color="#CCCCCC"> only jason's our IP is are</font>

286
00:15:37,730 --> 00:15:45,769
using only jason's we don't care about

287
00:15:41,259 --> 00:15:47,509
<font color="#E5E5E5">xml vulnerabilities but here we have</font>

288
00:15:45,769 --> 00:15:50,420
this content type application jason and

289
00:15:47,509 --> 00:15:53,389
this guy<font color="#CCCCCC"> completely removed</font><font color="#E5E5E5"> this header</font>

290
00:15:50,420 --> 00:15:56,839
<font color="#E5E5E5">there is no content type here</font><font color="#CCCCCC"> and he</font>

291
00:15:53,389 --> 00:15:59,600
somehow artificially put xml<font color="#CCCCCC"> here and</font>

292
00:15:56,839 --> 00:16:03,459
this api accepted XML and we exploited

293
00:15:59,600 --> 00:16:07,910
or he exploited<font color="#E5E5E5"> this XML vulnerability</font>

294
00:16:03,459 --> 00:16:12,500
<font color="#E5E5E5">right a couple of words about</font><font color="#CCCCCC"> API is</font>

295
00:16:07,910 --> 00:16:15,110
discovery so how to locate locate

296
00:16:12,500 --> 00:16:18,680
different different api's in your

297
00:16:15,110 --> 00:16:21,560
infrastructure<font color="#CCCCCC"> first I</font><font color="#E5E5E5"> would recommend</font>

298
00:16:18,680 --> 00:16:24,050
into<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> into this side Co T dot SH</font>

299
00:16:21,560 --> 00:16:28,069
<font color="#CCCCCC">do you know this site or not who knows</font>

300
00:16:24,050 --> 00:16:31,819
this not too many people<font color="#E5E5E5"> it's generally</font>

301
00:16:28,069 --> 00:16:34,519
quite nice for web or also<font color="#E5E5E5"> network</font>

302
00:16:31,819 --> 00:16:41,420
reconnaissance so basically if you

303
00:16:34,519 --> 00:16:44,180
<font color="#E5E5E5">create an SSL certificate</font><font color="#CCCCCC"> it can be made</font>

304
00:16:41,420 --> 00:16:46,459
for<font color="#E5E5E5"> external or internal domain this</font>

305
00:16:44,180 --> 00:16:48,769
information goes most<font color="#E5E5E5"> of time</font>

306
00:16:46,459 --> 00:16:52,540
automatically into a database which is

307
00:16:48,769 --> 00:16:58,370
called certificate<font color="#CCCCCC"> transparency and so</font>

308
00:16:52,540 --> 00:17:01,430
domain<font color="#E5E5E5"> who name of the company made this</font>

309
00:16:58,370 --> 00:17:04,250
domain<font color="#E5E5E5"> and my dis is certified and so</font><font color="#CCCCCC"> on</font>

310
00:17:01,430 --> 00:17:08,079
<font color="#CCCCCC">and so on</font><font color="#E5E5E5"> and this CR</font><font color="#CCCCCC"> T does</font><font color="#E5E5E5"> SH can be</font>

311
00:17:04,250 --> 00:17:08,079
used to search this database

312
00:17:08,180 --> 00:17:30,700
so basically<font color="#E5E5E5"> CRT it works like this</font><font color="#CCCCCC"> so</font>

313
00:17:17,660 --> 00:17:33,850
let's try Twitter for example<font color="#E5E5E5"> all right</font>

314
00:17:30,700 --> 00:17:39,050
<font color="#E5E5E5">and as you</font><font color="#CCCCCC"> can see</font><font color="#E5E5E5"> you'll</font><font color="#CCCCCC"> see different</font>

315
00:17:33,850 --> 00:17:42,439
URLs like TD API a couple of admin

316
00:17:39,050 --> 00:17:46,370
domains maybe<font color="#E5E5E5"> development domain</font><font color="#CCCCCC"> static</font>

317
00:17:42,440 --> 00:17:51,010
domains<font color="#E5E5E5"> something like this good stuff</font>

318
00:17:46,370 --> 00:17:55,310
for reconnaissance<font color="#CCCCCC"> this is first thing</font>

319
00:17:51,010 --> 00:17:59,390
<font color="#E5E5E5">their domains here for example</font><font color="#CCCCCC"> something</font>

320
00:17:55,310 --> 00:18:03,370
like like like like like like you were

321
00:17:59,390 --> 00:18:03,370
internal for example let's<font color="#E5E5E5"> try this one</font>

322
00:18:10,930 --> 00:18:16,940
<font color="#CCCCCC">uber</font><font color="#E5E5E5"> internal should be internal but</font>

323
00:18:13,700 --> 00:18:20,810
it's not completely internal as you can

324
00:18:16,940 --> 00:18:22,940
see now<font color="#E5E5E5"> you can just scroll</font><font color="#CCCCCC"> through all</font>

325
00:18:20,810 --> 00:18:24,500
the<font color="#E5E5E5"> domains</font><font color="#CCCCCC"> and check if any domain</font><font color="#E5E5E5"> is</font>

326
00:18:22,940 --> 00:18:27,170
<font color="#CCCCCC">available on the</font><font color="#E5E5E5"> Internet</font>

327
00:18:24,500 --> 00:18:33,050
I think you can try this stuff<font color="#CCCCCC"> sergey</font>

328
00:18:27,170 --> 00:18:40,250
dot sh on your own domain VPNs

329
00:18:33,050 --> 00:18:46,520
development sites<font color="#CCCCCC"> alright so let's go</font>

330
00:18:40,250 --> 00:18:51,680
back<font color="#E5E5E5"> to my presentation a little case</font>

331
00:18:46,520 --> 00:18:52,670
with<font color="#CCCCCC"> ubirr so at first</font><font color="#E5E5E5"> this guy located</font>

332
00:18:51,680 --> 00:18:55,070
<font color="#E5E5E5">this backup</font>

333
00:18:52,670 --> 00:18:59,390
<font color="#E5E5E5">uber internal comm it is still visible</font>

334
00:18:55,070 --> 00:19:02,540
<font color="#E5E5E5">on this CL t dot</font><font color="#CCCCCC"> Sh side and then he</font>

335
00:18:59,390 --> 00:19:04,430
made a little brute force<font color="#CCCCCC"> brute-force</font><font color="#E5E5E5"> of</font>

336
00:19:02,540 --> 00:19:07,340
directories file<font color="#E5E5E5"> mines and so on and so</font>

337
00:19:04,430 --> 00:19:09,260
on<font color="#E5E5E5"> and finally he found this SSO Alf</font>

338
00:19:07,340 --> 00:19:11,570
<font color="#CCCCCC">login response which</font><font color="#E5E5E5"> was accessible</font>

339
00:19:09,260 --> 00:19:15,410
without an authentication and it allowed

340
00:19:11,570 --> 00:19:20,210
<font color="#CCCCCC">for sample communication so he was able</font>

341
00:19:15,410 --> 00:19:21,140
<font color="#CCCCCC">to use an XML and he exploited xxe</font><font color="#E5E5E5"> so he</font>

342
00:19:20,210 --> 00:19:24,490
was able<font color="#E5E5E5"> to read</font>

343
00:19:21,140 --> 00:19:29,390
from the server<font color="#E5E5E5"> another quite fresh case</font>

344
00:19:24,490 --> 00:19:34,460
<font color="#E5E5E5">all right another case concerning using</font>

345
00:19:29,390 --> 00:19:36,679
<font color="#E5E5E5">a</font><font color="#CCCCCC"> non product for example</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> use</font>

346
00:19:34,460 --> 00:19:39,500
<font color="#CCCCCC">Liferay it's content management system</font>

347
00:19:36,679 --> 00:19:44,030
written<font color="#E5E5E5"> in Java there is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> specific URL</font>

348
00:19:39,500 --> 00:19:49,280
<font color="#E5E5E5">which is called slash API slash Jason WS</font>

349
00:19:44,030 --> 00:19:52,670
and it expose you<font color="#E5E5E5"> just their internal or</font>

350
00:19:49,280 --> 00:19:57,260
just your API so how to approach<font color="#E5E5E5"> this</font>

351
00:19:52,670 --> 00:19:59,510
stuff<font color="#E5E5E5"> at first we will locate an alive</font>

352
00:19:57,260 --> 00:20:05,150
for a website on<font color="#CCCCCC"> the Internet</font>

353
00:19:59,510 --> 00:20:06,530
so Google for this it is<font color="#CCCCCC"> in URL home</font>

354
00:20:05,150 --> 00:20:10,700
something something something this is

355
00:20:06,530 --> 00:20:14,120
specific fart for for Liferay<font color="#CCCCCC"> I can also</font>

356
00:20:10,700 --> 00:20:25,070
<font color="#E5E5E5">use your just</font><font color="#CCCCCC"> come domain to narrow our</font>

357
00:20:14,120 --> 00:20:28,939
search there<font color="#CCCCCC"> is something like</font><font color="#E5E5E5"> I grow</font>

358
00:20:25,070 --> 00:20:31,549
fresh<font color="#E5E5E5"> let's try this this interface is</font>

359
00:20:28,940 --> 00:20:36,770
automatically<font color="#E5E5E5"> translated into polish and</font>

360
00:20:31,549 --> 00:20:41,200
it requires me email but I just don't

361
00:20:36,770 --> 00:20:44,418
<font color="#CCCCCC">care I'll just remove all this stuff</font>

362
00:20:41,200 --> 00:20:48,830
<font color="#E5E5E5">maybe this stuff</font><font color="#CCCCCC"> too and now this API</font>

363
00:20:44,419 --> 00:20:52,870
Jason W yes and as you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> we have</font>

364
00:20:48,830 --> 00:20:56,990
<font color="#E5E5E5">this stuff of different functions</font><font color="#CCCCCC"> for</font>

365
00:20:52,870 --> 00:20:59,899
<font color="#CCCCCC">example I</font><font color="#E5E5E5"> delete category and we have</font>

366
00:20:56,990 --> 00:21:04,549
all the parameters<font color="#E5E5E5"> and we can invoke I</font>

367
00:20:59,900 --> 00:21:07,970
won't do this but in real pen tests for

368
00:21:04,549 --> 00:21:11,059
example<font color="#CCCCCC"> in a real attack we can try this</font>

369
00:21:07,970 --> 00:21:17,390
stuff<font color="#E5E5E5"> as you can see many many different</font>

370
00:21:11,059 --> 00:21:19,720
functions<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so let's go back to</font>

371
00:21:17,390 --> 00:21:19,720
<font color="#CCCCCC">my presentation</font>

372
00:21:22,580 --> 00:21:31,980
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> very nice case from</font><font color="#CCCCCC"> last year</font><font color="#E5E5E5"> and</font>

373
00:21:28,890 --> 00:21:34,320
<font color="#CCCCCC">actually the solar is third enjoying</font>

374
00:21:31,980 --> 00:21:36,600
quite popular<font color="#CCCCCC"> many big sides are using</font>

375
00:21:34,320 --> 00:21:40,970
<font color="#CCCCCC">this like Netflix or Instagram or</font>

376
00:21:36,600 --> 00:21:44,550
<font color="#CCCCCC">SourceForge a pool also</font><font color="#E5E5E5"> probably and</font>

377
00:21:40,970 --> 00:21:48,510
there was a<font color="#E5E5E5"> little</font><font color="#CCCCCC"> back which allowed me</font>

378
00:21:44,550 --> 00:21:52,250
with<font color="#E5E5E5"> just simple search to execute any</font>

379
00:21:48,510 --> 00:21:56,850
code on<font color="#E5E5E5"> on the target server</font>

380
00:21:52,250 --> 00:21:59,010
so let's look closer at<font color="#E5E5E5"> this back so</font>

381
00:21:56,850 --> 00:22:01,080
normally it works<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> for example</font>

382
00:21:59,010 --> 00:22:03,840
we have a shop or any other product<font color="#E5E5E5"> and</font>

383
00:22:01,080 --> 00:22:06,449
it allows<font color="#CCCCCC"> me for searching</font><font color="#E5E5E5"> and I can</font>

384
00:22:03,840 --> 00:22:08,909
search<font color="#CCCCCC"> here for</font><font color="#E5E5E5"> something this request</font>

385
00:22:06,450 --> 00:22:09,720
goes to<font color="#CCCCCC"> this solar solar</font><font color="#E5E5E5"> return</font>

386
00:22:08,910 --> 00:22:12,450
something

387
00:22:09,720 --> 00:22:15,720
this is parsed here and presented to

388
00:22:12,450 --> 00:22:18,510
users normally of<font color="#CCCCCC"> course I can't</font>

389
00:22:15,720 --> 00:22:24,270
directly access<font color="#CCCCCC"> this solar</font><font color="#E5E5E5"> it listens</font>

390
00:22:18,510 --> 00:22:28,230
<font color="#CCCCCC">only at</font><font color="#E5E5E5"> localhost so let's see the first</font>

391
00:22:24,270 --> 00:22:31,200
<font color="#E5E5E5">step of our attack the first step was</font>

392
00:22:28,230 --> 00:22:33,420
like<font color="#E5E5E5"> this so if we provide this query</font>

393
00:22:31,200 --> 00:22:38,270
string into something<font color="#E5E5E5"> like this it</font>

394
00:22:33,420 --> 00:22:43,230
<font color="#E5E5E5">begins with this crazy specific string</font>

395
00:22:38,270 --> 00:22:46,620
so this<font color="#E5E5E5"> staff exclamation mark XML</font>

396
00:22:43,230 --> 00:22:48,600
parser and we can put an XML here which

397
00:22:46,620 --> 00:22:53,159
is automatically parsed server side<font color="#E5E5E5"> and</font>

398
00:22:48,600 --> 00:22:56,480
what are<font color="#E5E5E5"> we doing here actually you</font>

399
00:22:53,160 --> 00:22:59,790
can't see any use<font color="#CCCCCC"> of this</font><font color="#E5E5E5"> there is no</font>

400
00:22:56,480 --> 00:23:02,400
name of this<font color="#CCCCCC"> entity and semicolon</font><font color="#E5E5E5"> but</font>

401
00:22:59,790 --> 00:23:06,060
<font color="#E5E5E5">you are defining here an external</font>

402
00:23:02,400 --> 00:23:08,100
document type for this<font color="#CCCCCC"> element a and you</font>

403
00:23:06,060 --> 00:23:10,830
we<font color="#E5E5E5"> are using this element</font><font color="#CCCCCC"> a so actually</font>

404
00:23:08,100 --> 00:23:14,429
the server is forced to<font color="#CCCCCC"> make an HTTP</font>

405
00:23:10,830 --> 00:23:20,520
<font color="#CCCCCC">request to</font><font color="#E5E5E5"> this side actually</font><font color="#CCCCCC"> I can show</font>

406
00:23:14,430 --> 00:23:23,910
<font color="#CCCCCC">it to you on</font><font color="#E5E5E5"> my or my solar and I have</font>

407
00:23:20,520 --> 00:23:27,690
<font color="#CCCCCC">here very simple</font><font color="#E5E5E5"> application</font><font color="#CCCCCC"> so I can</font>

408
00:23:23,910 --> 00:23:30,660
just maybe<font color="#CCCCCC"> doing a bit I can</font><font color="#E5E5E5"> put</font>

409
00:23:27,690 --> 00:23:31,590
something<font color="#E5E5E5"> here like star let's search</font>

410
00:23:30,660 --> 00:23:35,010
for<font color="#E5E5E5"> everything</font>

411
00:23:31,590 --> 00:23:35,850
this goes to<font color="#E5E5E5"> solar and solar returns me</font>

412
00:23:35,010 --> 00:23:38,490
<font color="#E5E5E5">this</font>

413
00:23:35,850 --> 00:23:41,909
stuff<font color="#E5E5E5"> normally</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> should be parsed and</font>

414
00:23:38,490 --> 00:23:44,820
presented in a more nicer way maybe<font color="#E5E5E5"> but</font>

415
00:23:41,910 --> 00:23:47,750
we don't care here and so let's<font color="#E5E5E5"> try our</font>

416
00:23:44,820 --> 00:23:54,120
face first point so let's force the

417
00:23:47,750 --> 00:24:00,960
<font color="#CCCCCC">server to issue an HTTP request all</font>

418
00:23:54,120 --> 00:24:04,439
<font color="#E5E5E5">right</font><font color="#CCCCCC"> I have here a virtual machine</font><font color="#E5E5E5"> with</font>

419
00:24:00,960 --> 00:24:06,810
<font color="#CCCCCC">my solar and I will</font><font color="#E5E5E5"> log in just in a</font>

420
00:24:04,440 --> 00:24:11,900
second<font color="#E5E5E5"> and I</font><font color="#CCCCCC"> will start a net cut</font>

421
00:24:06,810 --> 00:24:11,899
listening on port<font color="#E5E5E5"> 4 4 4 for example</font>

422
00:24:20,300 --> 00:24:29,370
right<font color="#E5E5E5"> so net cut here is listening on</font>

423
00:24:24,180 --> 00:24:31,680
<font color="#CCCCCC">port 4 4 4 4 and now let's try to attack</font>

424
00:24:29,370 --> 00:24:36,929
or maybe let let's try the first step of

425
00:24:31,680 --> 00:24:40,290
this attack<font color="#CCCCCC"> I have this query string</font>

426
00:24:36,930 --> 00:24:45,450
here it's<font color="#E5E5E5"> exactly the same like on my</font>

427
00:24:40,290 --> 00:24:49,770
presentation<font color="#CCCCCC"> and let's paste</font><font color="#E5E5E5"> this stuff</font>

428
00:24:45,450 --> 00:24:50,850
here I'll try<font color="#E5E5E5"> to show you all this stuff</font>

429
00:24:49,770 --> 00:24:56,840
<font color="#CCCCCC">on one</font><font color="#E5E5E5"> screen</font>

430
00:24:50,850 --> 00:25:02,730
so let's resize this a bit here is our

431
00:24:56,840 --> 00:25:05,360
net cut listening<font color="#CCCCCC"> and now our solar is</font>

432
00:25:02,730 --> 00:25:08,760
forced to<font color="#CCCCCC"> mesh make</font><font color="#E5E5E5"> requests to the same</font>

433
00:25:05,360 --> 00:25:12,449
machine<font color="#E5E5E5"> to the localhost port port 4 4 4</font>

434
00:25:08,760 --> 00:25:16,590
4 so<font color="#E5E5E5"> here is our net card here I'm</font>

435
00:25:12,450 --> 00:25:17,880
hitting<font color="#E5E5E5"> Enter now we have a request</font>

436
00:25:16,590 --> 00:25:20,520
coming from localhost

437
00:25:17,880 --> 00:25:22,830
<font color="#CCCCCC">Roco</font><font color="#E5E5E5"> local host user rated this</font><font color="#CCCCCC"> java</font>

438
00:25:20,520 --> 00:25:25,230
<font color="#CCCCCC">solar is written in java</font><font color="#E5E5E5"> so the first</font>

439
00:25:22,830 --> 00:25:27,270
point<font color="#E5E5E5"> works so probably it will be</font>

440
00:25:25,230 --> 00:25:30,870
<font color="#E5E5E5">vulnerable</font><font color="#CCCCCC"> but how to achieve</font><font color="#E5E5E5"> remote</font>

441
00:25:27,270 --> 00:25:34,910
code execution here so let's go back<font color="#CCCCCC"> to</font>

442
00:25:30,870 --> 00:25:34,909
<font color="#CCCCCC">my presentation for a while</font>

443
00:25:38,000 --> 00:25:48,050
and in default configuration there is

444
00:25:42,680 --> 00:25:52,100
this<font color="#E5E5E5"> API enabled listening on localhost</font>

445
00:25:48,050 --> 00:25:54,770
<font color="#CCCCCC">and it allows</font><font color="#E5E5E5"> me to create</font><font color="#CCCCCC"> a trigger</font><font color="#E5E5E5"> so</font>

446
00:25:52,100 --> 00:25:57,679
basically if<font color="#E5E5E5"> something happens like for</font>

447
00:25:54,770 --> 00:26:00,230
<font color="#CCCCCC">example even</font><font color="#E5E5E5"> post commit someone updates</font>

448
00:25:57,680 --> 00:26:04,460
<font color="#E5E5E5">something and this triggers of this code</font>

449
00:26:00,230 --> 00:26:09,500
<font color="#CCCCCC">defined</font><font color="#E5E5E5"> server</font><font color="#CCCCCC"> side is executed so I can</font>

450
00:26:04,460 --> 00:26:13,130
put here everything<font color="#E5E5E5"> net cut c CU RL w</font>

451
00:26:09,500 --> 00:26:17,600
get any code can be<font color="#CCCCCC"> executed here</font><font color="#E5E5E5"> all</font>

452
00:26:13,130 --> 00:26:20,720
<font color="#E5E5E5">right and we have two problems</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> the</font>

453
00:26:17,600 --> 00:26:22,699
first<font color="#E5E5E5"> problem is that</font><font color="#CCCCCC"> we must know this</font>

454
00:26:20,720 --> 00:26:25,310
<font color="#E5E5E5">collection name collection is basically</font>

455
00:26:22,700 --> 00:26:26,960
a<font color="#E5E5E5"> database in solar</font><font color="#CCCCCC"> we don't know</font>

456
00:26:25,310 --> 00:26:30,080
<font color="#CCCCCC">upfront</font><font color="#E5E5E5"> what is the collection what is</font>

457
00:26:26,960 --> 00:26:33,770
<font color="#CCCCCC">the net database name in our</font><font color="#E5E5E5"> target</font>

458
00:26:30,080 --> 00:26:37,149
solar but this can<font color="#E5E5E5"> be quite easily</font>

459
00:26:33,770 --> 00:26:41,889
solved<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we can do another</font><font color="#E5E5E5"> request</font>

460
00:26:37,150 --> 00:26:45,380
<font color="#E5E5E5">this request</font><font color="#CCCCCC"> looks</font><font color="#E5E5E5"> like this so this</font><font color="#CCCCCC"> xxc</font>

461
00:26:41,890 --> 00:26:47,960
<font color="#E5E5E5">normal get request</font><font color="#CCCCCC"> localhost</font><font color="#E5E5E5"> and we</font>

462
00:26:45,380 --> 00:26:51,560
create new collection action create<font color="#CCCCCC"> name</font>

463
00:26:47,960 --> 00:26:54,590
<font color="#E5E5E5">this pretty name so we know</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> our</font>

464
00:26:51,560 --> 00:26:57,980
collection name<font color="#CCCCCC"> alright so let's go back</font>

465
00:26:54,590 --> 00:27:00,889
<font color="#E5E5E5">to this and the second problem is</font><font color="#CCCCCC"> that</font>

466
00:26:57,980 --> 00:27:05,000
we can theoretically call this<font color="#CCCCCC"> api</font>

467
00:27:00,890 --> 00:27:06,980
function or endpoint using<font color="#E5E5E5"> x XE it can</font>

468
00:27:05,000 --> 00:27:08,270
be called<font color="#E5E5E5"> from localhost when it's</font>

469
00:27:06,980 --> 00:27:10,130
called from localhost

470
00:27:08,270 --> 00:27:17,389
it doesn't require any<font color="#E5E5E5"> authentication</font>

471
00:27:10,130 --> 00:27:20,510
but as you maybe<font color="#E5E5E5"> know our x XE requests</font>

472
00:27:17,390 --> 00:27:22,940
<font color="#E5E5E5">are get requests so this is only get</font>

473
00:27:20,510 --> 00:27:25,780
requests how to convert<font color="#E5E5E5"> this get to post</font>

474
00:27:22,940 --> 00:27:27,650
and there is a<font color="#E5E5E5"> little trick in solar and</font>

475
00:27:25,780 --> 00:27:29,930
it looks<font color="#CCCCCC"> like this</font>

476
00:27:27,650 --> 00:27:31,760
so if<font color="#CCCCCC"> Solar receives something something</font>

477
00:27:29,930 --> 00:27:34,100
something with<font color="#E5E5E5"> this short parameter it's</font>

478
00:27:31,760 --> 00:27:39,620
it automatically<font color="#CCCCCC"> converts this get to</font>

479
00:27:34,100 --> 00:27:41,659
post and<font color="#E5E5E5"> how to pass body so post</font><font color="#CCCCCC"> the</font>

480
00:27:39,620 --> 00:27:43,399
body to<font color="#CCCCCC"> this</font><font color="#E5E5E5"> get request</font>

481
00:27:41,660 --> 00:27:46,730
there is a special parameter stream body

482
00:27:43,400 --> 00:27:50,269
and this body goes here<font color="#CCCCCC"> so actually</font>

483
00:27:46,730 --> 00:27:53,929
calling this post<font color="#CCCCCC"> API</font>

484
00:27:50,269 --> 00:27:57,499
using xxe looks like this and the last

485
00:27:53,929 --> 00:28:00,619
<font color="#E5E5E5">step will be to update our collection so</font>

486
00:27:57,499 --> 00:28:04,839
the first step<font color="#E5E5E5"> check if our solar is</font>

487
00:28:00,619 --> 00:28:08,238
vulnerable<font color="#E5E5E5"> then create a collection</font>

488
00:28:04,839 --> 00:28:11,719
<font color="#CCCCCC">created</font><font color="#E5E5E5"> trigger</font><font color="#CCCCCC"> the stuff</font><font color="#E5E5E5"> and update</font>

489
00:28:08,239 --> 00:28:14,749
<font color="#E5E5E5">this collection and just</font><font color="#CCCCCC"> after ordering</font>

490
00:28:11,719 --> 00:28:18,969
<font color="#E5E5E5">this update this code is executed so</font>

491
00:28:14,749 --> 00:28:24,139
let's try this<font color="#CCCCCC"> I will switch</font><font color="#E5E5E5"> to my</font>

492
00:28:18,969 --> 00:28:26,809
virtual machine<font color="#CCCCCC"> alright I can close this</font>

493
00:28:24,139 --> 00:28:31,279
stuff let's see if something is

494
00:28:26,809 --> 00:28:38,119
listening<font color="#E5E5E5"> on free free free free this is</font>

495
00:28:31,279 --> 00:28:42,019
something like this connection<font color="#E5E5E5"> refused</font>

496
00:28:38,119 --> 00:28:45,259
normal situation and let's start<font color="#CCCCCC"> our</font>

497
00:28:42,019 --> 00:28:47,149
exploit and our exploit just starts

498
00:28:45,259 --> 00:28:53,450
<font color="#CCCCCC">netkar listening on port</font><font color="#E5E5E5"> 3 free free</font>

499
00:28:47,149 --> 00:28:56,349
free so<font color="#CCCCCC"> i already created</font><font color="#E5E5E5"> this trigger</font>

500
00:28:53,450 --> 00:29:00,349
and the last point is to just<font color="#E5E5E5"> update</font>

501
00:28:56,349 --> 00:29:06,320
<font color="#CCCCCC">something</font><font color="#E5E5E5"> from our database</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> i will</font>

502
00:29:00,349 --> 00:29:10,039
<font color="#E5E5E5">just paste this link sure still we are</font>

503
00:29:06,320 --> 00:29:14,629
changing<font color="#E5E5E5"> only this query string pretty</font>

504
00:29:10,039 --> 00:29:20,509
basic thing<font color="#E5E5E5"> all right so let's let's try</font>

505
00:29:14,629 --> 00:29:24,109
this now let's move<font color="#CCCCCC"> to our</font><font color="#E5E5E5"> vitro machine</font>

506
00:29:20,509 --> 00:29:28,849
<font color="#E5E5E5">try to connect here now it's open we can</font>

507
00:29:24,109 --> 00:29:31,699
issue actually<font color="#E5E5E5"> any command it's executed</font>

508
00:29:28,849 --> 00:29:33,049
right<font color="#CCCCCC"> I</font><font color="#E5E5E5"> did something like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> so all</font>

509
00:29:31,700 --> 00:29:36,829
<font color="#CCCCCC">you need</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to have</font>

510
00:29:33,049 --> 00:29:47,079
burnable<font color="#E5E5E5"> solar and</font><font color="#CCCCCC"> you specifically</font>

511
00:29:36,829 --> 00:29:47,079
crafted query strings another case

512
00:29:47,859 --> 00:29:55,639
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> quite famous case of Equifax</font>

513
00:29:53,029 --> 00:30:01,039
hacking so actually last year someone

514
00:29:55,639 --> 00:30:02,360
<font color="#E5E5E5">was able to steal data of almost 150</font>

515
00:30:01,039 --> 00:30:05,150
million

516
00:30:02,360 --> 00:30:07,699
<font color="#E5E5E5">United States consumers it included</font>

517
00:30:05,150 --> 00:30:11,150
something like<font color="#CCCCCC"> 400,000 numbers full</font>

518
00:30:07,700 --> 00:30:14,930
numbers of credit cards and actually

519
00:30:11,150 --> 00:30:18,620
what they<font color="#E5E5E5"> exploited and they exploited</font>

520
00:30:14,930 --> 00:30:21,890
their<font color="#E5E5E5"> API and actually the exploit was</font>

521
00:30:18,620 --> 00:30:26,000
pretty crazy<font color="#CCCCCC"> because all the exploit was</font>

522
00:30:21,890 --> 00:30:29,510
<font color="#E5E5E5">this XML and the most important thing</font>

523
00:30:26,000 --> 00:30:32,420
here in this<font color="#E5E5E5"> XML in is this small stuff</font>

524
00:30:29,510 --> 00:30:35,870
so this command<font color="#E5E5E5"> to be executed</font><font color="#CCCCCC"> and now</font>

525
00:30:32,420 --> 00:30:39,110
you may<font color="#CCCCCC"> think how actually</font><font color="#E5E5E5"> this API</font>

526
00:30:35,870 --> 00:30:41,570
<font color="#CCCCCC">executes this stuff and the answer to</font>

527
00:30:39,110 --> 00:30:44,030
this is<font color="#CCCCCC"> that they</font><font color="#E5E5E5"> are doing</font><font color="#CCCCCC"> I mean the</font>

528
00:30:41,570 --> 00:30:46,669
framer they are using is doing silent

529
00:30:44,030 --> 00:30:49,280
<font color="#CCCCCC">deserialization and actually almost</font>

530
00:30:46,670 --> 00:30:53,180
<font color="#E5E5E5">every desolation doesn't matter if it is</font>

531
00:30:49,280 --> 00:30:55,100
Java native digitalization or PHP<font color="#CCCCCC"> -</font>

532
00:30:53,180 --> 00:30:57,260
realization or<font color="#CCCCCC"> desalinization a dotnet</font>

533
00:30:55,100 --> 00:31:01,699
<font color="#E5E5E5">if you allow</font><font color="#CCCCCC"> to deserialize</font>

534
00:30:57,260 --> 00:31:05,000
something from users almost for<font color="#CCCCCC"> 100% you</font>

535
00:31:01,700 --> 00:31:09,800
<font color="#E5E5E5">are unable to remote code execution and</font>

536
00:31:05,000 --> 00:31:14,030
this was the case and the same goes with

537
00:31:09,800 --> 00:31:18,889
<font color="#CCCCCC">Python java.net PHP and actually if you</font>

538
00:31:14,030 --> 00:31:21,379
want to see if your<font color="#E5E5E5"> library or your</font>

539
00:31:18,890 --> 00:31:24,080
<font color="#CCCCCC">framework is vulnerable to this there's</font>

540
00:31:21,380 --> 00:31:28,550
a little little link here<font color="#E5E5E5"> this is for</font>

541
00:31:24,080 --> 00:31:31,220
Java this is for dotnet<font color="#E5E5E5"> there's after</font>

542
00:31:28,550 --> 00:31:33,230
representation<font color="#E5E5E5"> I will just show</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> how</font>

543
00:31:31,220 --> 00:31:35,690
to download this presentation<font color="#E5E5E5"> so you can</font>

544
00:31:33,230 --> 00:31:39,050
just use all the links interactively

545
00:31:35,690 --> 00:31:41,330
here and if you are<font color="#E5E5E5"> using for</font><font color="#CCCCCC"> example</font>

546
00:31:39,050 --> 00:31:44,060
extreme and this<font color="#CCCCCC"> equifax was using</font>

547
00:31:41,330 --> 00:31:46,970
struts framework the struts were using

548
00:31:44,060 --> 00:31:47,840
extreme for the silent the<font color="#E5E5E5"> sterilization</font>

549
00:31:46,970 --> 00:31:52,930
of xml's

550
00:31:47,840 --> 00:31:57,470
so Jason's<font color="#E5E5E5"> and so on so</font><font color="#CCCCCC"> on then and</font>

551
00:31:52,930 --> 00:31:59,990
<font color="#E5E5E5">actually till the</font><font color="#CCCCCC"> late</font><font color="#E5E5E5"> of 2017 everyone</font>

552
00:31:57,470 --> 00:32:01,730
thought that dotnet solutions are not

553
00:31:59,990 --> 00:32:04,700
<font color="#E5E5E5">vulnerable to this</font><font color="#CCCCCC"> disorientation stuff</font>

554
00:32:01,730 --> 00:32:09,520
<font color="#E5E5E5">and then there was this really nice</font>

555
00:32:04,700 --> 00:32:12,290
presentation<font color="#E5E5E5"> on</font><font color="#CCCCCC"> blackhat and so that</font>

556
00:32:09,520 --> 00:32:15,830
actually issuing<font color="#E5E5E5"> this</font>

557
00:32:12,290 --> 00:32:18,200
pretty normally looking<font color="#E5E5E5"> Jason allowed to</font>

558
00:32:15,830 --> 00:32:19,850
<font color="#E5E5E5">execute this code in this proof of</font>

559
00:32:18,200 --> 00:32:22,880
concept<font color="#E5E5E5"> is just</font><font color="#CCCCCC"> calculator</font><font color="#E5E5E5"> running on</font>

560
00:32:19,850 --> 00:32:25,250
the server<font color="#E5E5E5"> so in another thing about</font>

561
00:32:22,880 --> 00:32:27,440
this realization<font color="#E5E5E5"> this time in dotnet</font>

562
00:32:25,250 --> 00:32:33,980
<font color="#E5E5E5">there are readily available tools to</font>

563
00:32:27,440 --> 00:32:37,030
produce that Jason's<font color="#CCCCCC"> alright talking</font>

564
00:32:33,980 --> 00:32:41,170
<font color="#E5E5E5">about framework</font><font color="#CCCCCC"> vulnerabilities I have</font>

565
00:32:37,030 --> 00:32:44,300
just one<font color="#CCCCCC"> example from IOT world</font><font color="#E5E5E5"> and</font>

566
00:32:41,170 --> 00:32:47,810
there was quite quite a big stuff

567
00:32:44,300 --> 00:32:53,060
<font color="#E5E5E5">happening in the late 2016</font><font color="#CCCCCC"> someone was</font>

568
00:32:47,810 --> 00:32:56,990
attacking<font color="#E5E5E5"> or just rebooting or infecting</font>

569
00:32:53,060 --> 00:32:59,379
<font color="#E5E5E5">almost 1 million German routers and</font><font color="#CCCCCC"> the</font>

570
00:32:56,990 --> 00:33:02,690
case was like<font color="#E5E5E5"> this so many different</font>

571
00:32:59,380 --> 00:33:05,660
<font color="#E5E5E5">manufacturers</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> producing producers had</font>

572
00:33:02,690 --> 00:33:08,750
bought a generic<font color="#E5E5E5"> filmer from a Chinese</font>

573
00:33:05,660 --> 00:33:11,630
company and actually<font color="#CCCCCC"> this generic filmer</font>

574
00:33:08,750 --> 00:33:14,420
was vulnerable to<font color="#E5E5E5"> this stuff so</font>

575
00:33:11,630 --> 00:33:16,760
unauthenticated<font color="#CCCCCC"> a PR</font><font color="#E5E5E5"> request with this</font>

576
00:33:14,420 --> 00:33:19,400
stuff and this stuff<font color="#CCCCCC"> was executed with</font>

577
00:33:16,760 --> 00:33:21,620
<font color="#E5E5E5">full privileges on this target router so</font>

578
00:33:19,400 --> 00:33:25,760
actually they are downloading this

579
00:33:21,620 --> 00:33:27,889
backdoor here it's<font color="#CCCCCC"> one then execution</font>

580
00:33:25,760 --> 00:33:31,490
privileges and they are starting<font color="#E5E5E5"> this</font>

581
00:33:27,890 --> 00:33:36,020
backdoor<font color="#CCCCCC"> alright</font>

582
00:33:31,490 --> 00:33:39,170
something about API key leaks<font color="#E5E5E5"> and I have</font>

583
00:33:36,020 --> 00:33:41,930
two maybe three cases<font color="#CCCCCC"> here the first</font>

584
00:33:39,170 --> 00:33:45,440
interesting<font color="#E5E5E5"> project let's say it's not</font>

585
00:33:41,930 --> 00:33:48,320
known as HTTP archive<font color="#E5E5E5"> and basically they</font>

586
00:33:45,440 --> 00:33:50,540
crawl using a normal<font color="#CCCCCC"> web browser</font><font color="#E5E5E5"> 1</font>

587
00:33:48,320 --> 00:33:54,260
<font color="#E5E5E5">million of most popular</font><font color="#CCCCCC"> site according</font>

588
00:33:50,540 --> 00:33:55,930
<font color="#CCCCCC">to a specific ranking and they save all</font>

589
00:33:54,260 --> 00:33:59,450
this information<font color="#CCCCCC"> so request headers</font>

590
00:33:55,930 --> 00:34:03,110
response headers and maybe just a<font color="#E5E5E5"> couple</font>

591
00:33:59,450 --> 00:34:06,620
of more<font color="#E5E5E5"> information into a big file very</font>

592
00:34:03,110 --> 00:34:09,380
basic file is<font color="#CCCCCC"> 5 gigabytes compressed</font>

593
00:34:06,620 --> 00:34:11,659
full<font color="#CCCCCC"> five full file is something like</font>

594
00:34:09,380 --> 00:34:14,630
<font color="#CCCCCC">ten tens of gigabytes compressed</font>

595
00:34:11,659 --> 00:34:18,129
decompressed hundreds of gigabytes or a

596
00:34:14,630 --> 00:34:22,400
couple of<font color="#CCCCCC"> terabytes</font><font color="#E5E5E5"> a bit of data and</font>

597
00:34:18,130 --> 00:34:24,500
someone<font color="#CCCCCC"> actually is importing this big</font>

598
00:34:22,400 --> 00:34:25,520
file into something which is called

599
00:34:24,500 --> 00:34:28,460
<font color="#E5E5E5">Google's big</font>

600
00:34:25,520 --> 00:34:31,820
<font color="#CCCCCC">for a</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> this Google bigquery allows us</font>

601
00:34:28,460 --> 00:34:34,240
to run any sequel query on a file which

602
00:34:31,820 --> 00:34:39,649
is uploaded<font color="#CCCCCC"> or we can upload this file</font>

603
00:34:34,239 --> 00:34:43,129
<font color="#E5E5E5">file by ourselves</font><font color="#CCCCCC"> so let's let's look</font>

604
00:34:39,649 --> 00:34:45,609
<font color="#E5E5E5">how it how it looks</font><font color="#CCCCCC"> to do this you need</font>

605
00:34:43,130 --> 00:34:49,880
only you know any free Google account

606
00:34:45,610 --> 00:34:55,970
<font color="#CCCCCC">and you can</font><font color="#E5E5E5"> do something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> if</font>

607
00:34:49,880 --> 00:34:58,880
queries I have<font color="#CCCCCC"> prepared let's run this</font>

608
00:34:55,969 --> 00:35:03,230
new query and this<font color="#E5E5E5"> query actually asks</font>

609
00:34:58,880 --> 00:35:06,460
<font color="#CCCCCC">about every URL</font><font color="#E5E5E5"> which has this API key</font>

610
00:35:03,230 --> 00:35:09,080
equal character in URL string

611
00:35:06,460 --> 00:35:12,140
alternatively we<font color="#E5E5E5"> we could use something</font>

612
00:35:09,080 --> 00:35:19,130
<font color="#CCCCCC">like this</font><font color="#E5E5E5"> yes and so on so let's stick</font>

613
00:35:12,140 --> 00:35:21,830
<font color="#CCCCCC">with this</font><font color="#E5E5E5"> stuff run query</font><font color="#CCCCCC"> alright as</font><font color="#E5E5E5"> you</font>

614
00:35:19,130 --> 00:35:28,760
<font color="#E5E5E5">can see you have many</font><font color="#CCCCCC"> different API keys</font>

615
00:35:21,830 --> 00:35:30,470
<font color="#CCCCCC">I think that's at least</font><font color="#E5E5E5"> some of them</font>

616
00:35:28,760 --> 00:35:33,680
shouldn't<font color="#E5E5E5"> be here</font><font color="#CCCCCC"> there should be</font>

617
00:35:30,470 --> 00:35:35,810
<font color="#CCCCCC">treated as confidential information</font><font color="#E5E5E5"> by</font>

618
00:35:33,680 --> 00:35:43,190
the<font color="#E5E5E5"> way you can use the same trick to</font>

619
00:35:35,810 --> 00:35:47,350
extract extract stuff like like this so

620
00:35:43,190 --> 00:35:47,350
let's try<font color="#CCCCCC"> this authorization</font><font color="#E5E5E5"> header</font>

621
00:35:49,780 --> 00:35:59,320
<font color="#CCCCCC">right and as you can</font><font color="#E5E5E5"> see you can locate</font>

622
00:35:56,990 --> 00:36:02,000
different<font color="#E5E5E5"> authorization basic headers</font>

623
00:35:59,320 --> 00:36:06,830
which are basically<font color="#E5E5E5"> usernames and</font>

624
00:36:02,000 --> 00:36:09,580
passwords base64 encoded so let's decode

625
00:36:06,830 --> 00:36:09,580
this first one

626
00:36:13,930 --> 00:36:19,819
basic<font color="#E5E5E5"> C</font><font color="#CCCCCC"> for decoder and as you can see</font>

627
00:36:17,270 --> 00:36:21,830
they're using<font color="#E5E5E5"> user hits one underscore</font>

628
00:36:19,820 --> 00:36:28,250
you and very<font color="#E5E5E5"> complicated password hits</font>

629
00:36:21,830 --> 00:36:36,740
one underscore<font color="#CCCCCC"> UPD</font><font color="#E5E5E5"> another interesting</font>

630
00:36:28,250 --> 00:36:40,640
thing maybe let's stay with<font color="#E5E5E5"> this very</font>

631
00:36:36,740 --> 00:36:47,839
<font color="#E5E5E5">basic demo about this</font><font color="#CCCCCC"> alright so another</font>

632
00:36:40,640 --> 00:36:51,640
<font color="#E5E5E5">case</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> this guy is complaining</font><font color="#CCCCCC"> that</font>

633
00:36:47,840 --> 00:36:55,670
someone stole him<font color="#CCCCCC"> 100 bucks and he was</font>

634
00:36:51,640 --> 00:36:59,480
preparing scripts for automating<font color="#E5E5E5"> Bitcoin</font>

635
00:36:55,670 --> 00:37:01,670
trading and he asks the other guys

636
00:36:59,480 --> 00:37:05,810
<font color="#E5E5E5">what's with this problem</font>

637
00:37:01,670 --> 00:37:08,000
where are my 100<font color="#CCCCCC"> bucks and someone says</font>

638
00:37:05,810 --> 00:37:10,100
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> and found the issue you committed</font>

639
00:37:08,000 --> 00:37:13,040
your code with your<font color="#E5E5E5"> API key to your</font>

640
00:37:10,100 --> 00:37:16,310
account<font color="#CCCCCC"> to the public repository and</font>

641
00:37:13,040 --> 00:37:19,340
someone<font color="#E5E5E5"> just extracted this API key from</font>

642
00:37:16,310 --> 00:37:22,430
this repository<font color="#E5E5E5"> and use this to transfer</font>

643
00:37:19,340 --> 00:37:26,870
the<font color="#CCCCCC"> money</font><font color="#E5E5E5"> to his account and he said ok</font>

644
00:37:22,430 --> 00:37:30,080
<font color="#E5E5E5">ok now I have this fixed</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if we click</font>

645
00:37:26,870 --> 00:37:33,080
<font color="#CCCCCC">to this code</font><font color="#E5E5E5"> now we can see that they</font>

646
00:37:30,080 --> 00:37:36,220
<font color="#CCCCCC">have this stuff and this stuff and this</font>

647
00:37:33,080 --> 00:37:41,470
is<font color="#E5E5E5"> passed from arguments</font><font color="#CCCCCC"> to the script</font>

648
00:37:36,220 --> 00:37:41,470
<font color="#E5E5E5">but we have something like history here</font>

649
00:37:43,420 --> 00:37:55,250
if we click<font color="#CCCCCC"> here we can see down here</font>

650
00:37:49,120 --> 00:37:58,759
and there is<font color="#E5E5E5"> this API key and API secret</font>

651
00:37:55,250 --> 00:38:05,480
<font color="#E5E5E5">so</font><font color="#CCCCCC"> probably this</font><font color="#E5E5E5"> guy</font><font color="#CCCCCC"> changed</font><font color="#E5E5E5"> those</font>

652
00:37:58,760 --> 00:38:08,060
values<font color="#CCCCCC"> all right and maybe</font><font color="#E5E5E5"> one thing</font>

653
00:38:05,480 --> 00:38:10,010
<font color="#E5E5E5">about the staff he and</font><font color="#CCCCCC"> our complains</font>

654
00:38:08,060 --> 00:38:12,830
<font color="#E5E5E5">that</font><font color="#CCCCCC"> ok but I have two factor</font>

655
00:38:10,010 --> 00:38:15,650
authentication enabled<font color="#E5E5E5"> to my account so</font>

656
00:38:12,830 --> 00:38:19,970
how the heck he was<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> steal my</font>

657
00:38:15,650 --> 00:38:23,840
money and they answer him<font color="#CCCCCC"> ok but</font><font color="#E5E5E5"> usually</font>

658
00:38:19,970 --> 00:38:25,669
<font color="#E5E5E5">api's just bypass two-factor</font>

659
00:38:23,840 --> 00:38:26,990
authentication so we don't want to

660
00:38:25,670 --> 00:38:29,780
retype

661
00:38:26,990 --> 00:38:32,899
in every<font color="#CCCCCC"> single request</font><font color="#E5E5E5"> in every single</font>

662
00:38:29,780 --> 00:38:35,530
<font color="#E5E5E5">request to any function our code which</font>

663
00:38:32,900 --> 00:38:38,530
is coming<font color="#CCCCCC"> to our cell phone for</font><font color="#E5E5E5"> example</font>

664
00:38:35,530 --> 00:38:42,980
<font color="#CCCCCC">so this is another</font><font color="#E5E5E5"> thing to remember</font>

665
00:38:38,530 --> 00:38:45,619
<font color="#E5E5E5">calling</font><font color="#CCCCCC"> IP usually bypasses two-factor</font>

666
00:38:42,980 --> 00:38:49,910
authentication<font color="#CCCCCC"> all right actually</font><font color="#E5E5E5"> this</font>

667
00:38:45,619 --> 00:38:52,700
<font color="#E5E5E5">is almost</font><font color="#CCCCCC"> everything I have one more</font>

668
00:38:49,910 --> 00:38:55,490
thing prepare for you unfortunately it's

669
00:38:52,700 --> 00:38:57,290
all in Polish but<font color="#CCCCCC"> in near</font><font color="#E5E5E5"> future it will</font>

670
00:38:55,490 --> 00:39:00,890
<font color="#E5E5E5">be also in English so</font><font color="#CCCCCC"> my little book</font>

671
00:38:57,290 --> 00:39:05,840
<font color="#E5E5E5">about JSON web token security it's quite</font>

672
00:39:00,890 --> 00:39:09,069
complex<font color="#E5E5E5"> and I think that I will upload</font>

673
00:39:05,840 --> 00:39:12,110
this<font color="#CCCCCC"> presentation to two folks from</font>

674
00:39:09,070 --> 00:39:14,390
confidence<font color="#CCCCCC"> so they will upload this to</font>

675
00:39:12,110 --> 00:39:16,940
<font color="#E5E5E5">officials their official site</font><font color="#CCCCCC"> if you</font>

676
00:39:14,390 --> 00:39:20,720
<font color="#E5E5E5">want to have this earlier just</font><font color="#CCCCCC"> mainly</font>

677
00:39:16,940 --> 00:39:24,140
from<font color="#E5E5E5"> your from your email and if you</font>

678
00:39:20,720 --> 00:39:27,220
want to know a<font color="#E5E5E5"> bit more about api's also</font>

679
00:39:24,140 --> 00:39:29,930
run a training<font color="#E5E5E5"> about rest api s--</font>

680
00:39:27,220 --> 00:39:33,850
security in<font color="#CCCCCC"> polish</font><font color="#E5E5E5"> and also in english</font>

681
00:39:29,930 --> 00:39:33,850
<font color="#CCCCCC">ok any</font><font color="#E5E5E5"> questions from you</font>

682
00:39:39,230 --> 00:39:46,270
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> I can't see</font><font color="#E5E5E5"> any questions so</font>

683
00:39:43,060 --> 00:39:46,270
thanks for<font color="#E5E5E5"> listening</font>

