1
00:00:00,000 --> 00:00:04,110
today we are going to talk about iris
taking a transit penetration testing and

2
00:00:04,110 --> 00:00:11,580
forensic techniques my name server let
me briefly introduce myself before

3
00:00:11,580 --> 00:00:24,590
starting my name is Omar on the left
hand side I'm currently employed rate

4
00:00:24,590 --> 00:00:31,460
KPN has known as Royal Dutch telecom and
I used to repair companies like their

5
00:00:31,460 --> 00:00:40,079
eyes and IBM by my colleague Mark
couldn't make it here but if you ever

6
00:00:40,079 --> 00:00:57,300
happen to be coming at us and have a
beer on us they are trying we are going

7
00:00:57,300 --> 00:01:02,239
to cover basically the address thanks

8
00:01:02,239 --> 00:01:07,210
techniques on our application reverse
engineering particularly dealing with

9
00:01:07,210 --> 00:01:15,589
668 four-bit application static and
dynamic analysis and hunting for the RSA

10
00:01:15,590 --> 00:01:23,560
keys and the cryptography on this
platform and also a bit of penetration

11
00:01:23,560 --> 00:01:31,700
testing automation techniques
communication interception how many of

12
00:01:31,700 --> 00:01:36,490
you have already done some penetration
testing on mobile environments could you

13
00:01:36,490 --> 00:01:37,579
raise your hands

14
00:01:37,579 --> 00:01:43,829
few of them and how many of your health
already done some reverse engineering

15
00:01:43,829 --> 00:01:53,929
Corp penetration testing on statistical
on iOS environment than 100 K

16
00:01:53,930 --> 00:02:02,520
story will cover everything so you have
some clue to catch up with variations

17
00:02:02,520 --> 00:02:08,869
whatever inspires us to prepare a
presentation on these under-thirty is

18
00:02:08,869 --> 00:02:19,440
mostly we do a lot of penetration
testing on the mobile environment so we

19
00:02:19,440 --> 00:02:27,180
want automated I now live it because the
mobile environment and applications are

20
00:02:27,180 --> 00:02:34,220
evolving being part of day today our
life day by day and exploration areas

21
00:02:34,220 --> 00:02:42,860
disclosure song the exponentially did
not only related to the surveillance

22
00:02:42,860 --> 00:02:49,540
simple implants shifted our focus on the
mobile devices as you may see hurt

23
00:02:49,540 --> 00:02:55,880
German financial yeah I'm John America
while being intercepted her cause and

24
00:02:55,880 --> 00:03:04,570
listen by the some government and I you
throught kids are not only its Terry

25
00:03:04,570 --> 00:03:10,260
anymore and its practical is being sold
exchanged by the underground of the

26
00:03:10,260 --> 00:03:16,429
Internet is became a service and the
reverse engineering car armament I

27
00:03:16,430 --> 00:03:30,530
really fun and we are going to see it
all together

28
00:03:30,530 --> 00:03:37,360
I a security architecture is look like
this we can analyze two major companies

29
00:03:37,360 --> 00:03:43,150
want us to userspace the second one is
the kernel space

30
00:03:43,150 --> 00:03:52,310
user party consists of applications
sandbox user partition operating system

31
00:03:52,310 --> 00:04:00,030
partition all within the encrypted file
system and the kernel part consists of

32
00:04:00,030 --> 00:04:05,930
the security clearance security elements
if you break down all the competence

33
00:04:05,930 --> 00:04:15,450
encryption and data protection

34
00:04:15,450 --> 00:04:26,680
its aim to provide mobile users to
protect their data from Star stolen

35
00:04:26,680 --> 00:04:40,450
attempts and without modifying it make
it secure the major company ISL Marmont

36
00:04:40,450 --> 00:04:45,390
securities being provided by the
security secure enclaves securing levees

37
00:04:45,390 --> 00:04:53,849
introduced highest devices after April a
seven processors and then later on

38
00:04:53,850 --> 00:05:03,200
security cleverest simply a coprocessor
which consists of memory and hardware

39
00:05:03,200 --> 00:05:05,830
encryption automated simply

40
00:05:05,830 --> 00:05:10,090
number if you ever tell to cryptography
incident number is the one of the major

41
00:05:10,090 --> 00:05:20,210
companies of the cryptographic that
makes this reliable and strong and

42
00:05:20,210 --> 00:05:25,489
they're all security backs that can be
analyzed in two groups

43
00:05:25,490 --> 00:05:33,580
system came back and the external team X
very achieved encrypted device

44
00:05:33,580 --> 00:05:39,960
Keith for the local device and the one
external is being accused imply to speak

45
00:05:39,960 --> 00:05:40,810
up there

46
00:05:40,810 --> 00:05:53,440
encryption key are being stored

47
00:05:53,440 --> 00:06:03,560
to make security framework simply is
built upon the russet PST tremor did it

48
00:06:03,560 --> 00:06:09,980
was first used in FreeBSD systems it
simply look like this it provides for

49
00:06:09,980 --> 00:06:16,830
different interfaces for security some
complication and it defines the virtual

50
00:06:16,830 --> 00:06:25,840
filesystem process techno inter-process
communication and the pipe inter-process

51
00:06:25,840 --> 00:06:40,250
communication and people is in for a
interface provides frame for more

52
00:06:40,250 --> 00:06:49,020
general model dividing tracing and the
traces to allow developers to instrument

53
00:06:49,020 --> 00:07:00,210
and analyze their applications just a
break down into the war basics basics

54
00:07:00,210 --> 00:07:08,010
when you have as a mobile developer was
to develop your application and put in a

55
00:07:08,010 --> 00:07:12,980
device and when you started on your
application is simply creates a process

56
00:07:12,980 --> 00:07:22,400
and politics right I wanted to run it in
walks to sandbox in its system call this

57
00:07:22,400 --> 00:07:29,099
is some called dynamic library to check
specific policies and these polices

58
00:07:29,100 --> 00:07:42,370
transfer to the sandbox kernel extension
and then check specific policy profiles

59
00:07:42,370 --> 00:07:55,070
and then it is still specific policy
profile to the your application and send

60
00:07:55,070 --> 00:08:00,550
suspected a signal whether it is
installed properly or not this simply

61
00:08:00,550 --> 00:08:04,150
defines what you can achieve within the
mobile application and

62
00:08:04,150 --> 00:08:18,080
what you're allowed to do what you are
not if you want if you want to look very

63
00:08:18,080 --> 00:08:26,289
attractive it looks like this you create
a process to make siskel to the makeout

64
00:08:26,290 --> 00:08:32,600
make liar takes federal policy applied
or not and they simply sandbox final

65
00:08:32,600 --> 00:08:41,370
extension is just making a regular
expression to check whether your policy

66
00:08:41,370 --> 00:08:54,830
is making a profile which is already
defined in the IRS friend so on the left

67
00:08:54,830 --> 00:09:00,930
side they have profiles documented
profiles like your application could

68
00:09:00,930 --> 00:09:13,410
have like has no right to do the Kinect
know her from truck operations or try to

69
00:09:13,410 --> 00:09:18,360
do the directory or the specific
directories but there are also some

70
00:09:18,360 --> 00:09:24,640
profile undocumented to reverse
engineers found the 405 pirate

71
00:09:24,640 --> 00:09:30,060
engineering from malicious application
developer or security researcher it

72
00:09:30,060 --> 00:09:34,630
could be interesting for you for example
this profile

73
00:09:34,630 --> 00:09:40,490
Mobile Safari mobile mail a PSD
expression of December compiler d

74
00:09:40,490 --> 00:09:52,760
profile you can perform other actions
within the company within the for

75
00:09:52,760 --> 00:10:01,480
example you can access to the log
directories recent locations

76
00:10:01,480 --> 00:10:14,110
temporary directories love directories
and etc and profile you is look like

77
00:10:14,110 --> 00:10:21,060
this you simply walk to tamper with
their profile given as argument to the

78
00:10:21,060 --> 00:10:29,768
court and file encryption under the
entire system is looking like this

79
00:10:29,769 --> 00:10:34,910
you're hardly key coming from the
security and clever and the past year

80
00:10:34,910 --> 00:10:42,319
was arrested twice in the final + key
these are combined and involve conveyed

81
00:10:42,320 --> 00:10:49,990
to the class key and we have encryption
file metadata for each key and it is

82
00:10:49,990 --> 00:11:00,710
encrypted

83
00:11:00,710 --> 00:11:10,780
file encryption also defines API classes
to define specific actions on the file

84
00:11:10,780 --> 00:11:17,430
operation within the environment for
example find protection we can setup

85
00:11:17,430 --> 00:11:22,949
file without any protection the
protection could be complete unless open

86
00:11:22,950 --> 00:11:33,300
and this API cluster also define some
attributes like they are tributes are

87
00:11:33,300 --> 00:11:41,199
working like this for example then you
want too long to write to the file you

88
00:11:41,200 --> 00:11:47,690
can define as their this operation could
be done after last device are open or

89
00:11:47,690 --> 00:11:56,600
you can simply a low profile Tempe
regional race or eat all this and called

90
00:11:56,600 --> 00:12:03,330
can be shipped either unless stated goal
or DNS File Manager this sample

91
00:12:03,330 --> 00:12:12,270
difference between two courses by using
File Manager over any state the reason

92
00:12:12,270 --> 00:12:16,960
behind this weekend's festivities
attribute any state that doesn't give

93
00:12:16,960 --> 00:12:27,010
such option to the developer as I
mentioned she baked locations the x-pro

94
00:12:27,010 --> 00:12:33,340
internal locations are stored on your
device this directory private lockdown

95
00:12:33,340 --> 00:12:38,930
direction directory with in your room
and they're also external items pick-up

96
00:12:38,930 --> 00:12:45,969
location that contains your for instance
make device and it contains all the

97
00:12:45,970 --> 00:12:56,610
encryption keys and they're open source
and commercial solutions there you can

98
00:12:56,610 --> 00:13:06,630
perform crypto directly attacks and you
can try to find out to keep at it is

99
00:13:06,630 --> 00:13:11,710
being improved some make the changes
take place after iOS

100
00:13:11,710 --> 00:13:23,660
eight and they were russians of the
lamentations make a file structure has

101
00:13:23,660 --> 00:13:32,199
been changed a little bit on the 64 bit
implementation mcAfee is simply

102
00:13:32,200 --> 00:13:37,880
executable on the iOS devices and it
looks likes this

103
00:13:37,880 --> 00:13:45,000
the maker of 64 bit implementation built
upon the 32 bit however the segment

104
00:13:45,000 --> 00:13:51,100
Sicamous little be changed for for
instance the trigger a structure called

105
00:13:51,100 --> 00:13:57,990
segment come on 64 defiance VMware
structures that you can destroy some

106
00:13:57,990 --> 00:14:06,850
specific privileges which part of the
VMware the and memories can be read can

107
00:14:06,850 --> 00:14:12,960
be not from a security perspective this
is important because you would wanna

108
00:14:12,960 --> 00:14:21,710
know which location is being used by
program and for instance encryption keys

109
00:14:21,710 --> 00:14:27,780
thought what kind of action could be
done because if a malicious application

110
00:14:27,780 --> 00:14:36,350
runs on the Apple iOS device and
application uses wrong permissions on

111
00:14:36,350 --> 00:14:39,580
the segment we can do

112
00:14:39,580 --> 00:14:46,250
malicious actions and another to
cellmark mechanism couldn't be used in

113
00:14:46,250 --> 00:14:57,750
the proper way to write these are the
most technical and youth terror to kill

114
00:14:57,750 --> 00:15:02,400
information I prepared to presentation
as

115
00:15:02,400 --> 00:15:09,180
hands on the challenge you will be
provided to all the executables after

116
00:15:09,180 --> 00:15:18,969
the conference talk from get up you can
download and try I S binaries

117
00:15:18,970 --> 00:15:28,860
implementers and corruption aidid to
protect executables from piracy so the

118
00:15:28,860 --> 00:15:36,660
consistency integrity check checked by
the encryption so it's the section in

119
00:15:36,660 --> 00:15:42,930
the executive will then be used to deal
with it or to do with applications on

120
00:15:42,930 --> 00:15:49,510
the environment is simply use object to
and then finding corruption section if

121
00:15:49,510 --> 00:15:54,610
they encrypt decrypt idea section is
returned for us let me step by nearly is

122
00:15:54,610 --> 00:16:02,260
encrypted so in the past we used to find
out

123
00:16:02,260 --> 00:16:07,910
encryption section and rearm addressed
virtual memory address and defined

124
00:16:07,910 --> 00:16:14,350
length of it and we simply run the
executable there to better define the

125
00:16:14,350 --> 00:16:25,130
sections time to binary and we can
simply extract unencrypted executable

126
00:16:25,130 --> 00:16:35,490
the game it's pretty Meistersinger on
the 64 bit Marmont the only some of

127
00:16:35,490 --> 00:16:49,690
those differences we need to use LLDP
debugger it is the user's the ceiling I

128
00:16:49,690 --> 00:16:59,010
keyworth and syntax and its comforted
default compiler within its called

129
00:16:59,010 --> 00:17:14,160
framework how you can get everything is
stored on their ex called default

130
00:17:14,160 --> 00:17:22,510
directory so you can simply attach to do
is tell you till you find a specific

131
00:17:22,510 --> 00:17:26,770
images that you are dealing with for
instance I was dealing with 28 points

132
00:17:26,770 --> 00:17:39,570
7.1 implementation so it contains all
the helpers and utilities and other

133
00:17:39,570 --> 00:17:46,750
Pacific directory of the Y support like
the most important one is you will need

134
00:17:46,750 --> 00:17:57,560
a vector

135
00:17:57,560 --> 00:18:08,159
to be able to run the boxer on your iOS
device device we need to set the file

136
00:18:08,160 --> 00:18:16,300
for the box over the discipline some
back policy file that you define what

137
00:18:16,300 --> 00:18:23,230
your executable can does on the day why
simply if it cannot around for example

138
00:18:23,230 --> 00:18:30,200
process I D for each task ran outside
court an extra so that's what we want

139
00:18:30,200 --> 00:18:36,970
because we want to attach executable to
do the bugger server on the device and

140
00:18:36,970 --> 00:18:45,300
the debugging operations so there's a
tool called court sign you can define

141
00:18:45,300 --> 00:18:53,700
and title as XML file and then signed
executable and you can simply uploaded

142
00:18:53,700 --> 00:19:08,750
to the jailbroken iOS device was applied
to execute of all you want to create a

143
00:19:08,750 --> 00:19:20,420
TCP connection to the device and
debugging on your computer so when

144
00:19:20,420 --> 00:19:25,930
you're on LGBT bloggers you can
selectively removed iOS version that you

145
00:19:25,930 --> 00:19:31,460
are physically dealing with if you write
a letter on select remote also it will

146
00:19:31,460 --> 00:19:43,040
show you all the supported versions of
the IRS implementation up till now while

147
00:19:43,040 --> 00:19:45,780
I was doing reverse engineering on the
device

148
00:19:45,780 --> 00:19:54,379
my environment supported up till version
8.1 however I was dealing with an

149
00:19:54,380 --> 00:20:11,049
executable 64 bit executable which was
created and developed for version 7.1

150
00:20:11,049 --> 00:20:20,619
you define your executable file finder
process I D and you cannot connect to do

151
00:20:20,619 --> 00:20:31,970
the box server IP address is 215 is my
jailbroken devices IP address by dr.

152
00:20:31,970 --> 00:20:40,659
Reddy's listening on that port 6667 I
attached connected I list out the tracks

153
00:20:40,659 --> 00:20:45,350
it seems like the application is being
attached to the democracy since

154
00:20:45,350 --> 00:20:55,779
everything fine if you ever done now
we're on now this is for reverse

155
00:20:55,779 --> 00:21:01,049
engineering yours and I authentication
shouldn't be so much difficult

156
00:21:01,049 --> 00:21:06,450
especially if you know there are Packers
for x86

157
00:21:06,450 --> 00:21:16,809
like it applies a lot of opera station
and creeps stolen by a lot of

158
00:21:16,809 --> 00:21:23,820
abstraction that you need to tell it
like it is not the case for iOS

159
00:21:23,820 --> 00:21:31,960
applications

160
00:21:31,960 --> 00:21:39,210
I grabbed a binary and all of that back
to the my application so I was using

161
00:21:39,210 --> 00:21:46,720
either since there is no obligation and
exit rather marmots I can easily resolve

162
00:21:46,720 --> 00:21:57,810
the functions name correctly and it
seems all groups it correctly result of

163
00:21:57,810 --> 00:22:07,760
function names and arguments declaration
so whenever I do reverse engineering

164
00:22:07,760 --> 00:22:13,860
static analysis I always look for the
imports and the interesting function

165
00:22:13,860 --> 00:22:22,370
means the application I was dealing with
simply using cryptography the crib some

166
00:22:22,370 --> 00:22:31,969
interesting information official the
network traffic

167
00:22:31,970 --> 00:22:38,060
so I really interesting function as you
can see there are some interesting

168
00:22:38,060 --> 00:22:43,690
function themselves like their public
key they're saying they can tell

169
00:22:43,690 --> 00:22:54,440
something about it and you can look on
the function definitions on the Apple

170
00:22:54,440 --> 00:23:01,990
Developer Forum and see how it is being
used so it was very interesting that the

171
00:23:01,990 --> 00:23:06,830
application was evaluating function
while this fact applications was

172
00:23:06,830 --> 00:23:20,429
evaluating shattered by the sounds and
call in here

173
00:23:20,430 --> 00:23:35,110
public and calling infection on
objectives he is a little bit different

174
00:23:35,110 --> 00:23:42,040
than C++ in C++ Object point is followed
by the function parent function them and

175
00:23:42,040 --> 00:23:48,480
function parameters and object for the
objective see the perimeters different

176
00:23:48,480 --> 00:24:03,190
as it comes after the color and
dysfunctional always get into makes me

177
00:24:03,190 --> 00:24:09,150
confident because these are the default
function called you may take on the

178
00:24:09,150 --> 00:24:17,390
Apple Developer Forum the function
prototypes its case the block size

179
00:24:17,390 --> 00:24:32,830
public key name and takes the security
trust

180
00:24:32,830 --> 00:24:49,820
and this specific costs and says like
fashion

181
00:24:49,820 --> 00:24:56,678
certainly cannot be read this classic
authors needs to be used somewhere that

182
00:24:56,679 --> 00:25:03,919
function actually able to function and
its specific location I can simply used

183
00:25:03,919 --> 00:25:09,580
vulgar to obtain either the private or
public depending on their implementation

184
00:25:09,580 --> 00:25:17,840
so when I jumped to do cross references

185
00:25:17,840 --> 00:25:26,019
it looked like it to memory allocation
and then set it to the 02 aliquet

186
00:25:26,019 --> 00:25:32,409
something else store it makes me curious
because that looks like anyone areata

187
00:25:32,409 --> 00:25:45,340
certificate these are the specific steps
that you need to take and

188
00:25:45,340 --> 00:25:55,530
and just as a reference lol DBA comments
pretty much similar to the GDP colored

189
00:25:55,530 --> 00:26:06,970
ok the encryption file the location for
encrypted file and it is being called by

190
00:26:06,970 --> 00:26:20,930
the probably the function is being
private or public key reversing on my

191
00:26:20,930 --> 00:26:22,350
mind is looking like this

192
00:26:22,350 --> 00:26:26,629
observed application what is doing drove
encryption and obtained for that by

193
00:26:26,630 --> 00:26:37,640
binary what needs to be taken out and
combine static and dynamic analysis and

194
00:26:37,640 --> 00:26:49,410
now once I obtain a location ideas first
week function names what I need to do is

195
00:26:49,410 --> 00:26:57,410
just to observe and analyze binary on
the debugger so I reattach my executable

196
00:26:57,410 --> 00:27:04,200
to their old it'd be so I can define the
good thing about dividing and reverse

197
00:27:04,200 --> 00:27:08,690
engineering environment if you can
simply path a break point to do specific

198
00:27:08,690 --> 00:27:16,410
function as it is shown on the very
first screenshot like file encrypted

199
00:27:16,410 --> 00:27:23,460
encrypted file whatever eight-point run
the executable and see what happens and

200
00:27:23,460 --> 00:27:31,560
I run until the end of the extra
function by stepping in and then i dont

201
00:27:31,560 --> 00:27:40,060
memory with 11 GB comment like memory
card file take it to the flat file and I

202
00:27:40,060 --> 00:27:45,800
opened it was containing two SATA
Seagate it is a public that case however

203
00:27:45,800 --> 00:27:51,490
when I was testing the replication the
prism implemented done a private key

204
00:27:51,490 --> 00:27:53,870
later on they switch to do

205
00:27:53,870 --> 00:28:08,168
public it was a good thing and correct
implementation

206
00:28:08,169 --> 00:28:35,299
groups most common issues are related to
the week so retired control you secure

207
00:28:35,299 --> 00:28:41,289
storage like the information stored on
your local device which is supposed to

208
00:28:41,289 --> 00:28:48,119
be on for example keychain and etc and
people things like unemployment

209
00:28:48,119 --> 00:28:53,039
programmers are always lazy and they
didn't like it

210
00:28:53,039 --> 00:28:58,850
mobile application so you can not pretty
much you cannot do pretty much anything

211
00:28:58,850 --> 00:29:11,689
so they rely on most of the time
assumptions so if you want to analyze

212
00:29:11,690 --> 00:29:18,840
group we can do I tend to do subsections
like application mapping climbed a

213
00:29:18,840 --> 00:29:23,999
psychic network assets are attacks it
pretty much similar to do mobile storage

214
00:29:23,999 --> 00:29:35,679
replication assessment but only subtle
differences binary is being involved the

215
00:29:35,679 --> 00:29:40,450
platform mapping and data flow is
different and the API said being used

216
00:29:40,450 --> 00:29:47,350
his friend part of the frame can find
someone else's needs to be involved to

217
00:29:47,350 --> 00:29:52,899
do testing

218
00:29:52,900 --> 00:30:05,550
can be a shoot for instance forwarding
your traffic to your device of course

219
00:30:05,550 --> 00:30:12,080
you need a jailbroken device its
entirety dynamic port forwarding so I

220
00:30:12,080 --> 00:30:27,020
can pass today my Wireshark interesting
to have a packet analyzer if you

221
00:30:27,020 --> 00:30:32,830
recently implemented copper catalyzed
are so you don't need a lot of packages

222
00:30:32,830 --> 00:30:44,179
to be able to run on making make some
violent so it could be interesting

223
00:30:44,180 --> 00:30:53,670
because if you manage to obtain public
or the private key that increased

224
00:30:53,670 --> 00:30:59,670
communication you can't really thick
lips your practice for example wilder

225
00:30:59,670 --> 00:31:01,840
Wireshark implemented yet

226
00:31:01,840 --> 00:31:08,629
script whenever it's going slow here you
can easily decrypt communication on the

227
00:31:08,630 --> 00:31:22,690
fly but what if not what if you cannot
obtain increase or encryption key at all

228
00:31:22,690 --> 00:31:30,190
so this time the function who can come
into play

229
00:31:30,190 --> 00:31:36,169
faction who can use a technique is
simply we are using to function

230
00:31:36,169 --> 00:31:43,759
you are calling your function i Function
created by you obtain the information

231
00:31:43,759 --> 00:31:48,210
passed by the function and then let go
to function

232
00:31:48,210 --> 00:31:58,960
supposed to work as a tease and the
fires SSL implementation of it as it

233
00:31:58,960 --> 00:32:06,340
follows its Alcan takes needs to be
defined and the data past as a pointer

234
00:32:06,340 --> 00:32:21,668
date a land and size to be processed and
in a similar manner as a seller rights

235
00:32:21,669 --> 00:32:29,049
operation is the finest as well you have
dated a talent in the process ID but

236
00:32:29,049 --> 00:32:34,889
they will be processed implement and you
can check out the details on the

237
00:32:34,889 --> 00:32:49,479
development Developer Center important
and interesting parties you can

238
00:32:49,480 --> 00:32:56,200
implement and function who so these are
ready and the right call will be

239
00:32:56,200 --> 00:33:03,210
forwarded to your own function and
obtain the content and let the

240
00:33:03,210 --> 00:33:06,889
application

241
00:33:06,889 --> 00:33:13,918
road as it is supposed to be the way
it's supposed to be so we implemented a

242
00:33:13,919 --> 00:33:19,409
sample who the source code will be
published on it up for you can take a

243
00:33:19,409 --> 00:33:26,029
look on it is simply a dynamic library
so you can involve dynamic library while

244
00:33:26,029 --> 00:33:34,649
executing an executable and it'll
intercept while the function cause as

245
00:33:34,649 --> 00:33:41,679
defined so you can obtain the cell
contacts

246
00:33:41,680 --> 00:33:47,480
so weak came once implemented early care
and interesting analogy Captain Hook's

247
00:33:47,480 --> 00:33:52,570
style so we intercept every function
keeps a copy for us

248
00:33:52,570 --> 00:34:07,649
content for herself as a similar money
or NSA does in the manner it look like

249
00:34:07,650 --> 00:34:19,060
this you cannot do everything in the
plaintext so the point we want to draw

250
00:34:19,060 --> 00:34:29,989
is that you know rootkit from the IRS
and my mind is not constitute area

251
00:34:29,989 --> 00:34:39,129
anymore if you take a look on drop on
the project is one of the node only it's

252
00:34:39,130 --> 00:34:49,150
simply implement software implant it
starting formation and passes to do

253
00:34:49,150 --> 00:35:00,410
anything for storing and this is the
sample code maybe you have seen on

254
00:35:00,410 --> 00:35:11,779
internet it is iPhone rootkit book so it
simply shows and implement the sample

255
00:35:11,780 --> 00:35:19,120
hooting for example the microphone
listening so you can implement a call

256
00:35:19,120 --> 00:35:30,819
that because while you are talking
someone else on your phone

257
00:35:30,820 --> 00:35:42,250
the penetration tester you did binary
analysis you would wanna do some

258
00:35:42,250 --> 00:35:46,290
automation day-to-day tasks to be able
to accomplish something

259
00:35:46,290 --> 00:35:58,250
actions that you don't wanna do by
handle the time and make some gains some

260
00:35:58,250 --> 00:36:11,950
free time on analyzing two interesting
things so while the application level

261
00:36:11,950 --> 00:36:18,890
analysis really like we really love to
use extensions the extent of my writing

262
00:36:18,890 --> 00:36:28,799
Python or Java code and there are short
party interesting extension that you can

263
00:36:28,800 --> 00:36:36,870
use these are the most common extension
classes that you can use to play

264
00:36:36,870 --> 00:36:44,810
extended frame framework like to
retrieve cookies extended called mixed

265
00:36:44,810 --> 00:36:55,250
or register actions and interest in
science fiction points perot has revised

266
00:36:55,250 --> 00:36:58,950
counter just simply sent automated
playlist and return back so you can

267
00:36:58,950 --> 00:37:09,189
define all points to automate
application-level analysis and these are

268
00:37:09,190 --> 00:37:10,170
the sum

269
00:37:10,170 --> 00:37:20,670
come on extension that you can use for
example interesting one else could be

270
00:37:20,670 --> 00:37:32,820
active can vary can passively planning a
party in injection and it can also be

271
00:37:32,820 --> 00:37:40,610
interesting if you are using trip
inspect scanner so you can share the

272
00:37:40,610 --> 00:37:48,640
results between our plan expect
additional color is looking like this

273
00:37:48,640 --> 00:37:57,850
you can define specific actions for
example contacts in the firing line size

274
00:37:57,850 --> 00:38:07,779
XXS injection an extra like comparing
different return rallies better there

275
00:38:07,780 --> 00:38:15,330
can be a potential privilege escalation
or not and burp extension one of the

276
00:38:15,330 --> 00:38:26,009
interesting one is where you can do

277
00:38:26,010 --> 00:38:34,840
generation automation based on for
example username and password brute

278
00:38:34,840 --> 00:38:43,800
forcing and one of my favorite one is
Exetel validator play a game where you

279
00:38:43,800 --> 00:38:51,840
run JavaScript running on that server it
simply sends your payload to the server

280
00:38:51,840 --> 00:39:02,280
and you run an extension generated
validated payload pat so it will able to

281
00:39:02,280 --> 00:39:10,140
validate whether application is
vulnerable by simply matching regular

282
00:39:10,140 --> 00:39:16,839
expression the keeper to the five yr
functional relations so if the job

283
00:39:16,840 --> 00:39:19,030
security is being

284
00:39:19,030 --> 00:39:23,760
and weight it on the insertion points
the application you are testing that

285
00:39:23,760 --> 00:39:33,290
means we can alternate testing without
dealing the manual analysis so did the

286
00:39:33,290 --> 00:39:42,150
sample test area defined payloads and
it's just ran to the store and we are

287
00:39:42,150 --> 00:39:47,320
taking record is being matched the
regular expression be defined on the

288
00:39:47,320 --> 00:40:05,380
scare and they said thank you are right
you have any questions

289
00:40:05,380 --> 00:40:13,829
yeah

290
00:40:13,829 --> 00:40:24,220
when it comes to designing an
application it's

291
00:40:24,220 --> 00:40:26,870
well i assume that it's better to use

292
00:40:26,870 --> 00:40:33,600
application medications done that but do
you have any suggestions about more

293
00:40:33,600 --> 00:40:35,069
detail

294
00:40:35,069 --> 00:40:39,259
checklist for developers for wireless
applications

295
00:40:39,259 --> 00:40:47,599
well i has already defined

296
00:40:47,599 --> 00:40:54,989
tactical handguard that you can apply
wild designing your cryptography

297
00:40:54,989 --> 00:40:58,489
application Exchange and etc

298
00:40:58,489 --> 00:41:03,759
was to simply standardization of the
Common Fund burner abilities I would

299
00:41:03,759 --> 00:41:18,109
definitely recommend taking on the
development forum and other questions I

300
00:41:18,109 --> 00:41:18,699
guess no

