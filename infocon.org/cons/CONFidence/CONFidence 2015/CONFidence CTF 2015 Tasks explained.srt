1
00:00:00,089 --> 00:00:07,670
goes so I think we can associate so well
thank you everyone for coming on Q-two

2
00:00:07,670 --> 00:00:11,379
every city every player for playing this
is my drug inspectors in the team

3
00:00:11,380 --> 00:00:21,810
responsible for your mystery in the last
two days actually to answer some of your

4
00:00:21,810 --> 00:00:24,910
questions now there will be no tomatoes
growing and no stoning

5
00:00:24,910 --> 00:00:32,710
ok let's start with the exploration and
details on city Ave tasks for each task

6
00:00:32,710 --> 00:00:38,070
we have actually ninety seconds and at
2323 slights and two exceptions but

7
00:00:38,070 --> 00:00:43,670
exceptions but apart from that will be
done like a lightning talk does

8
00:00:43,670 --> 00:00:47,870
basically so please keep in mind
especially for new city of players about

9
00:00:47,870 --> 00:00:52,288
for each task might be a different
solution which we didn't think after

10
00:00:52,289 --> 00:00:56,840
which we felt that it's not really
likely but a team of truth and go for

11
00:00:56,840 --> 00:01:01,070
that being said it's quite probable that
sometimes so our task in a little

12
00:01:01,070 --> 00:01:04,209
different way than we predicted and the
way to describe here

13
00:01:04,209 --> 00:01:13,770
case in Tiger alright so it's a simple
some boxer it uses Pete race obviously

14
00:01:13,770 --> 00:01:20,259
and its sponsor additional processing
the MPN executed and sandbox threat so

15
00:01:20,259 --> 00:01:24,560
first of all going to get caught
execution in your process and deliver

16
00:01:24,560 --> 00:01:31,319
seek your urg Signoret you can do it by
setting so-called urgency flocking the

17
00:01:31,319 --> 00:01:38,039
TCP packet you can do it in your client
got like that MSG hope that's a process

18
00:01:38,039 --> 00:01:42,579
also inherits a descriptor which is open
we disliked so it's not visible on the

19
00:01:42,579 --> 00:01:44,990
file system but you can still write to
it

20
00:01:44,990 --> 00:01:53,589
and you can write their binary which
should be 64 bit and then and writes

21
00:01:53,590 --> 00:01:57,750
oscalus allowed in the in the policy and
then you can use it streaked with

22
00:01:57,750 --> 00:02:03,700
switching QR code segment so we can
execute 64 bit Cisco's and then you

23
00:02:03,700 --> 00:02:07,580
should use link which will make the
decedent file appear on the file system

24
00:02:07,580 --> 00:02:11,640
and then you should close this file
because he will never executed because

25
00:02:11,640 --> 00:02:16,149
this is the Moto X busy because he
cannot executor files which opens

26
00:02:16,150 --> 00:02:21,530
writing and then obviously you should
use exactly 60 for me to school which is

27
00:02:21,530 --> 00:02:26,390
also allowing her to be policy rate and
the three keys that there is simply

28
00:02:26,390 --> 00:02:36,319
trace coal which gets a different size
of them over the register structure with

29
00:02:36,319 --> 00:02:40,130
32 be processes it always returns the
structure which is 68 but something

30
00:02:40,130 --> 00:02:44,890
clicked up with 64 bit processors to
return something of 200 or something

31
00:02:44,890 --> 00:02:50,320
like that and the overflow structuring
inside the Sun boxer and if you said

32
00:02:50,320 --> 00:02:56,579
their instruction instruction pointer
Nishan instruction pointer to certain

33
00:02:56,579 --> 00:03:03,510
addresses this function pointer will be
overwritten and you can executive coach

34
00:03:03,510 --> 00:03:07,870
right so in order to set this
instruction pointer to the correct

35
00:03:07,870 --> 00:03:12,680
address of our gadget and they're also
guarded exec the Venus age you should

36
00:03:12,680 --> 00:03:21,269
you should use this GCT instructions in
here right you can use a different kind

37
00:03:21,269 --> 00:03:26,150
of linkers or something like that but
you should use said the entry point of

38
00:03:26,150 --> 00:03:32,329
your binary to IP address which she's
exactly been a stage near your son boxer

39
00:03:32,329 --> 00:03:40,160
and that basically I was thinking it's
simple but apparently nobody but

40
00:03:40,160 --> 00:03:47,570
but I know that there's at least one
team was very close to the right that

41
00:03:47,570 --> 00:03:53,120
now the second task is basically stag I
know that he hates to go but was forced

42
00:03:53,120 --> 00:03:59,370
to do that so basically simple things
right up to getting 22 getting the

43
00:03:59,370 --> 00:04:04,920
binary which is PPC 64 beating little
endian and then

44
00:04:04,920 --> 00:04:11,809
BBC you have to say the elf predictions
you can see them here so those minor

45
00:04:11,810 --> 00:04:19,019
signs that the branch will not be taken
probably taking for CPU for optimizing

46
00:04:19,019 --> 00:04:24,930
the pipelines and plus means that you
will be taken so you should look at the

47
00:04:24,930 --> 00:04:31,610
code at the values which are loaded into
those registers like 30 right and and

48
00:04:31,610 --> 00:04:35,890
and this comparison instruction and then
figure out whether this prediction is

49
00:04:35,890 --> 00:04:40,610
correct or not if it's incorrect you
should add 02 your bike bitstream if

50
00:04:40,610 --> 00:04:44,570
it's correct you sure that everyone rate
and well that's it you will get the base

51
00:04:44,570 --> 00:04:57,430
64 streak which you can turn into your
like figure so my tasks are the next

52
00:04:57,430 --> 00:05:02,870
ones first one last crack me for 100
points lost the reverse engineering

53
00:05:02,870 --> 00:05:11,730
talent it was text mode VGA and turbo
pascal so but as close to make our red

54
00:05:11,730 --> 00:05:17,490
logo which was read to make it green
again and you had to enter a password to

55
00:05:17,490 --> 00:05:21,990
make it happen now in video mode
actually to change the color of

56
00:05:21,990 --> 00:05:29,390
something you have to interact with
these parts like free Ca and 339 and if

57
00:05:29,390 --> 00:05:34,169
you looked for it and I don't actually
was only one function interacting with

58
00:05:34,169 --> 00:05:39,370
this with these parts and it was called
in a couple of places basically into

59
00:05:39,370 --> 00:05:44,700
other functions and what the place you
are interested in adopting sauce which

60
00:05:44,700 --> 00:05:49,789
one of them that the pilot and streets
of alexandra basically the green and we

61
00:05:49,789 --> 00:05:51,539
ever said to read

62
00:05:51,540 --> 00:05:58,100
now we had to trace back where does what
does jumped up and down and actually

63
00:05:58,100 --> 00:06:02,460
used we just action which should do a
set of simple source and exert checking

64
00:06:02,460 --> 00:06:09,430
with customer is it rebels and get the
flag and the flag last text mode for the

65
00:06:09,430 --> 00:06:15,320
second time Trust Score reverse
engineering for free hundred points it

66
00:06:15,320 --> 00:06:20,490
basically you got the PHB binary and
stripped of Fulda bagging symbols and a

67
00:06:20,490 --> 00:06:25,700
PHP core of a colossal and their mom and
does before execution of the script and

68
00:06:25,700 --> 00:06:29,349
development but you have all the
bytecode prepared and the memory so we

69
00:06:29,350 --> 00:06:35,350
had to just open it in GB and Brent are
right up codes and from does go from

70
00:06:35,350 --> 00:06:41,970
zero to whatever and it brings you the
bytecode we need to reverse engineer any

71
00:06:41,970 --> 00:06:48,940
memory bytecode of PHP to something more
readable like PHP and your photos of God

72
00:06:48,940 --> 00:06:53,940
but including something like this this
is basically reading your input and been

73
00:06:53,940 --> 00:06:57,460
doing an md5 sliding window Rep

74
00:06:57,460 --> 00:07:03,900
reversing as doing a string rivers on
their heads together and adding it to

75
00:07:03,900 --> 00:07:10,979
the final flag well actually final soon
and the final so much like wrestling so

76
00:07:10,980 --> 00:07:15,830
you had against Romero said and then
find some MTV and the five collisions

77
00:07:15,830 --> 00:07:21,060
where the rubber is because at least two
dictionary words and you also knew the

78
00:07:21,060 --> 00:07:27,140
flag began with dragons and when two
unknown bytes but the boys are supposed

79
00:07:27,140 --> 00:07:31,260
to be the first so having just one and
the five soon allow you to do a brute

80
00:07:31,260 --> 00:07:37,240
force one bite by bite of the house like
and the flag house I'm pretty sure

81
00:07:37,240 --> 00:07:45,110
everyone loves spirits beer and wine
internals now reverse engineering 500

82
00:07:45,110 --> 00:07:51,180
and I'm really sorry for US does however
I'm really amazed but somebody thought

83
00:07:51,180 --> 00:07:56,910
that it was a virtual machine written
with touring company threw up so

84
00:07:56,910 --> 00:08:02,510
basically barrister America or in 30
return oriented programming program

85
00:08:02,510 --> 00:08:05,000
which implemented a virtual machine and
dryer

86
00:08:05,000 --> 00:08:13,440
and then but implemented the final crack
me so this is a dump of a piece of

87
00:08:13,440 --> 00:08:20,250
return oriented programming program
which was basically I think like 1000

88
00:08:20,250 --> 00:08:26,060
lines in the end 1000 gods but you could
reverse engineer it and get up close

89
00:08:26,060 --> 00:08:30,350
unless you had value understood have a
virtual machine world's you does get

90
00:08:30,350 --> 00:08:35,570
basically solvers the drum machine crack
me which was why I guess is because I

91
00:08:35,570 --> 00:08:39,190
didn't want to make it hard at that
point and when you get the flag it was

92
00:08:39,190 --> 00:08:47,570
what the heck was that ok and now for
something where trust missed for 100 you

93
00:08:47,570 --> 00:08:52,350
get a zip file and it was said by the
file contains a super simple password

94
00:08:52,350 --> 00:08:59,640
but it was encrypted of a super long
password now well you knew but verify

95
00:08:59,640 --> 00:09:04,120
Lankford 11 bites you also knew about
the beginning and end of the flood was

96
00:09:04,120 --> 00:09:08,350
drugs and you know the curly bracket so
that gives you seven characters already

97
00:09:08,350 --> 00:09:14,000
and you're only missing for now but CRC
in the header is actually of the crypt

98
00:09:14,000 --> 00:09:18,410
the data is not encrypted data which
means that you have the CRC of the real

99
00:09:18,410 --> 00:09:22,719
swagg three does have to boot for
additional four bytes and your perfect

100
00:09:22,720 --> 00:09:34,200
world struggles ok and visit the
enduring discover a few words about

101
00:09:34,200 --> 00:09:42,620
spoon knife and fork it was supporting
charge 200 points and as you can see

102
00:09:42,620 --> 00:09:50,020
from this code is as simple bar for
stuck buffer overflow coat with the

103
00:09:50,020 --> 00:09:59,689
exception of Annex bites a a solar and a
stock protector so it was a little bit

104
00:09:59,690 --> 00:10:10,280
harder and as you can see it worked like
in echo server with the exception dead

105
00:10:10,280 --> 00:10:24,860
it behaves like PHP function HTML sped
special carreras so it it encodes the

106
00:10:24,860 --> 00:10:33,660
quad and I'm percent symbol and tomorrow
so before is 1000 miles long so I can

107
00:10:33,660 --> 00:10:43,319
israeli overflow it and you know again
as some planet and simple out and the

108
00:10:43,320 --> 00:10:48,819
solution to this one was two British
tourists esta cookie

109
00:10:48,819 --> 00:10:58,789
bye bye bye just by connecting over and
over again because these server for act

110
00:10:58,789 --> 00:11:04,749
and each child of the parent brought
says has the same layout of the memory

111
00:11:04,749 --> 00:11:10,509
so you can so so the cookie was always
the same and this way you can briefers

112
00:11:10,509 --> 00:11:19,749
the kooky but first the return address
find see address and use return to Lipsy

113
00:11:19,749 --> 00:11:27,179
technique to just cut today deflected
horse on the same directory as a soda

114
00:11:27,179 --> 00:11:34,399
occipital executable was running so you
can also use the return or be oriented

115
00:11:34,399 --> 00:11:41,589
programming here this was really useful
in this case it was so useful in case of

116
00:11:41,589 --> 00:11:45,660
reverse engineering but

117
00:11:45,660 --> 00:11:58,459
and that's it and to consider the
flagpole so banks getting that was how

118
00:11:58,459 --> 00:12:04,599
does my first post don't ask that
husbands name so serious crypto and was

119
00:12:04,600 --> 00:12:09,350
implementing super serious crypto
machine it was

120
00:12:09,350 --> 00:12:18,900
there was a si inside and you able to
encrypt some static string or decrypt a

121
00:12:18,900 --> 00:12:25,089
string of you provide the core of the
task of us

122
00:12:25,089 --> 00:12:34,660
a/s a speeding so spanning used to
depart the blogs of input data to 16

123
00:12:34,660 --> 00:12:43,309
bits 16 bytes so if you have some data
this house looks inside a memory after

124
00:12:43,309 --> 00:12:44,250
that

125
00:12:44,250 --> 00:12:51,700
there was a function that story is
password bad said 21 and these are input

126
00:12:51,700 --> 00:13:01,620
and you were able to override the
variable on the starkly just by brute

127
00:13:01,620 --> 00:13:10,230
forcing the parting of the of the
plaintext so does the flag another

128
00:13:10,230 --> 00:13:17,670
another task pollution in the US
forensic to do you get to pick up on the

129
00:13:17,670 --> 00:13:27,780
beginning and there was a SMTP insight
so if you dress description said that

130
00:13:27,780 --> 00:13:34,060
some keys were locked so if you just
google for or use a decade ago or any

131
00:13:34,060 --> 00:13:41,689
other search engine for a keylogger that
supports SMTP you get the proper

132
00:13:41,690 --> 00:13:49,310
software so I demux was the proper
software so this is awesome software

133
00:13:49,310 --> 00:13:56,300
that awesome bloggers that I love you
too to send data over the SMTP so the

134
00:13:56,300 --> 00:14:03,670
workflow was so simple you just extract
the males SMTP sessions from pickup you

135
00:14:03,670 --> 00:14:10,260
extract the files from from the emails
that were sent and also just to open

136
00:14:10,260 --> 00:14:17,689
those files you need the password the
password is the same as SMTP out so you

137
00:14:17,690 --> 00:14:21,620
put it all together and you got all the
data that was locked from the keyboard

138
00:14:21,620 --> 00:14:23,560
and

139
00:14:23,560 --> 00:14:31,349
one more thing you need to do the
keystrokes were locked among the five or

140
00:14:31,350 --> 00:14:38,140
six notepads open so you need to just
trace the correct note but instance to

141
00:14:38,140 --> 00:14:47,270
to get the fuck so show me your locks
now ok Go's challenge because my dad is

142
00:14:47,270 --> 00:14:56,250
not here so we when he's giving us the
task to the test we are asking him ok my

143
00:14:56,250 --> 00:14:59,089
work is it an allergy or a PHP is your
day

144
00:14:59,089 --> 00:15:08,150
no no no of course not for a week so it
was not at this time

145
00:15:08,150 --> 00:15:15,810
likely so this is the description and
you land on the web sites with index PHP

146
00:15:15,810 --> 00:15:24,109
so you need to focus about this and you
can find index PHP source code what was

147
00:15:24,110 --> 00:15:30,070
the special in the source code so first
of all you can inject a date are you

148
00:15:30,070 --> 00:15:37,450
asking injection from by using a cookie
parameter second of all whatever you do

149
00:15:37,450 --> 00:15:44,660
in school carrie gets done soon realized
so this is pretty pretty much you got a

150
00:15:44,660 --> 00:15:51,150
call of some matter of your own answer
your subject and there is also a admin

151
00:15:51,150 --> 00:15:59,079
panel that is only accessible from
localhost inside the panel you can also

152
00:15:59,080 --> 00:16:06,339
lead the source code of the poem by
using the same I thought so too was very

153
00:16:06,339 --> 00:16:08,620
useful you see that

154
00:16:08,620 --> 00:16:19,440
the fuck is generated using SQL query
and printed to the output of PHP but the

155
00:16:19,440 --> 00:16:26,200
first thing you you could convert your
SQL injection into serialized object to

156
00:16:26,200 --> 00:16:35,900
get output second you can make us so
client object if you call to undefined

157
00:16:35,900 --> 00:16:41,810
function of this of the answer your
subject use this object is performing

158
00:16:41,810 --> 00:16:49,890
HTTP request so this way you can request
the admin panel from localhost but you

159
00:16:49,890 --> 00:16:56,850
will not get output of that so likely
you can try to find what kind of a

160
00:16:56,850 --> 00:17:01,910
school queries running inside as well by
doing this glowing section in the same

161
00:17:01,910 --> 00:17:09,359
time and getting their list of running
tasks insiders lol database and it was

162
00:17:09,359 --> 00:17:23,949
the tired just looked at a few not it
was disclosed that was running

163
00:17:23,950 --> 00:17:32,130
ok so I I had a phone 500 ask cause
night sky and if you do some initial

164
00:17:32,130 --> 00:17:37,380
reckon you can see that the binary has
all of the protections enables so it has

165
00:17:37,380 --> 00:17:43,840
full relo and all the other stuff also
it is a 64 bit binary

166
00:17:43,840 --> 00:17:52,540
dynamically linked so probably not too
big and so yeah what I read us is that

167
00:17:52,540 --> 00:17:58,500
it makes it possible for you to manage
the sky in terms of creating and editing

168
00:17:58,500 --> 00:18:03,810
and removing stars which are some
objects in memory and also managing

169
00:18:03,810 --> 00:18:09,429
constellations which are assets of stars
that you created so we can manage that

170
00:18:09,430 --> 00:18:14,660
and the two additional options that you
could possibly use was to register the

171
00:18:14,660 --> 00:18:19,080
program and to use their safe to file
option to save the current state of the

172
00:18:19,080 --> 00:18:24,889
sky to a file but you could only invoked
the saved file option if you register

173
00:18:24,890 --> 00:18:30,120
the program with key and the key was not
known it was loaded from from a file

174
00:18:30,120 --> 00:18:39,149
from the server so it was a secret key
ok so there there are a few bucks in

175
00:18:39,150 --> 00:18:44,170
some of those available operations that
you had to change in order to get get

176
00:18:44,170 --> 00:18:50,900
the test done so the first back was in
the Edit star comment you had to take

177
00:18:50,900 --> 00:18:56,450
advantage of the fact that this tractor
describing a star had the static buffer

178
00:18:56,450 --> 00:19:05,100
code name and even though most of the
operations that operated on the name of

179
00:19:05,100 --> 00:19:11,399
the star did no termination of the name
this one function didn't so you could

180
00:19:11,400 --> 00:19:15,710
have a non-null terminated name and
directly after the name was a pointer to

181
00:19:15,710 --> 00:19:20,970
a constellation assigned to the star and
as it turns out the constellations were

182
00:19:20,970 --> 00:19:25,630
placed in static memory so by using this
bug you could get the point of two

183
00:19:25,630 --> 00:19:27,220
static memory

184
00:19:27,220 --> 00:19:32,760
and interestingly I could also specify a
name of the constellation and it also

185
00:19:32,760 --> 00:19:37,408
reside in a static buffers so you would
automatically get any information leak

186
00:19:37,409 --> 00:19:43,950
of a pointer to static memory with
control data and this is an example of

187
00:19:43,950 --> 00:19:48,010
what it looks like after you do tests
and then issued a list starts comment

188
00:19:48,010 --> 00:19:55,500
which shows you the link bytes in the
output once you had this you you you had

189
00:19:55,500 --> 00:19:59,640
to use a second back which was
stack-based buffer overflow but it was

190
00:19:59,640 --> 00:20:03,610
pretty specific you couldn't really
control the size by which you overflow

191
00:20:03,610 --> 00:20:10,500
the buffer because it's a corner case
where you specific n equals zero and you

192
00:20:10,500 --> 00:20:17,409
really read and minus one bites which in
terms of having a sixteen-bit variable

193
00:20:17,409 --> 00:20:20,070
means 64 K

194
00:20:20,070 --> 00:20:25,129
so you could trust the stack by a lot of
data materially control you really

195
00:20:25,130 --> 00:20:30,110
couldn't control by how much and since
there's a critical product was unable to

196
00:20:30,110 --> 00:20:34,520
couldn't override anything meaningful
really couldn't get code execution

197
00:20:34,520 --> 00:20:39,059
because because the stock protector
would trigger before the return address

198
00:20:39,059 --> 00:20:45,190
and also the special environment
variable called the Pacifica last year

199
00:20:45,190 --> 00:20:50,250
was not used in the stock in our
environment so you wouldn't get the

200
00:20:50,250 --> 00:20:54,059
message with just a protector feiler
back to you in the deferred

201
00:20:54,059 --> 00:21:00,970
consideration but as it turns out since
you control all of the stock and you

202
00:21:00,970 --> 00:21:03,270
read so much data into it

203
00:21:03,270 --> 00:21:07,220
there's nothing to stop you from really
setting the environment variable by

204
00:21:07,220 --> 00:21:13,299
yourself so you could just said the NDP
pointers to delete see further STD

205
00:21:13,299 --> 00:21:18,539
airstream which you could have placed in
static memory which you know and then

206
00:21:18,539 --> 00:21:23,620
you could said Harvey 0 pointer to the
address of the secret in static memory

207
00:21:23,620 --> 00:21:28,340
which was needed to register the program
so you could trigger this memory

208
00:21:28,340 --> 00:21:36,510
disclosure this way and then you could
you could leak their program Syria that

209
00:21:36,510 --> 00:21:38,490
you could use to register it

210
00:21:38,490 --> 00:21:42,940
and the third back once you had this you
could trigger the state to file option

211
00:21:42,940 --> 00:21:47,280
and this was another stack-based buffer
overflow but it was easier to use

212
00:21:47,280 --> 00:21:51,290
because you really control the size of
the buffer that you read into the

213
00:21:51,290 --> 00:21:57,340
stack-based buffer and I placed some
function pointers on the stock before

214
00:21:57,340 --> 00:22:02,139
the stock protector so you could
overwrite time easily there were four

215
00:22:02,140 --> 00:22:08,910
functions that were operating on the
file that you could specify and so did

216
00:22:08,910 --> 00:22:14,140
this means that you had control the AP
one of the operating function pointers

217
00:22:14,140 --> 00:22:18,510
and since you already knew the basis of
the challenge because you had it from

218
00:22:18,510 --> 00:22:23,090
from the previous information leak could
just probably create a rope chain or

219
00:22:23,090 --> 00:22:28,480
something and solve it this way although
I'm not sure how many rockets there were

220
00:22:28,480 --> 00:22:31,780
in the binary because it was pretty
small because it was dynamically linked

221
00:22:31,780 --> 00:22:38,500
but was also an easier solution so if
you look into the provided live scene

222
00:22:38,500 --> 00:22:43,740
because we gave it to you you could you
could see that coming colors filing

223
00:22:43,740 --> 00:22:50,050
function is in fact in the very same
memory page that the system function so

224
00:22:50,050 --> 00:22:54,690
these two functions are really very
close to each other in the lips so what

225
00:22:54,690 --> 00:22:58,460
you could do is instead of overwriting
the whole function pointer could just do

226
00:22:58,460 --> 00:23:05,460
it to buy partial over right and you
could said 12 bits that are constant to

227
00:23:05,460 --> 00:23:09,640
the correct value and then you you could
you should have only reinforced the four

228
00:23:09,640 --> 00:23:14,000
remaining bits which is some sixteen
combinations so that is definitely

229
00:23:14,000 --> 00:23:20,610
doable overdone at work and so yeah this
is how it looked like tender flag was as

230
00:23:20,610 --> 00:23:27,120
his PSP memory disclosure and partial
operates for the win and that's it so

231
00:23:27,120 --> 00:23:31,459
now snow tomorrow

232
00:23:31,460 --> 00:23:38,909
so she's was a simple task for reverse
200 I think it was an elf the biggest

233
00:23:38,909 --> 00:23:46,789
problem is it's kind of do well because
they have both both of which he did you

234
00:23:46,789 --> 00:23:52,960
have heaters for sections and four pages
and most of the doors are using the

235
00:23:52,960 --> 00:23:58,340
second one and four sections and they
are not actually what's what's executed

236
00:23:58,340 --> 00:24:04,129
so if you shifted them little bit you
have something very strange so the basic

237
00:24:04,130 --> 00:24:07,630
ones that do you have what you saw your
executing some pictures on today but

238
00:24:07,630 --> 00:24:17,640
there was no 44 brute force for by the
country's resources but behind of this

239
00:24:17,640 --> 00:24:21,620
there was something else was happening
after and was trying to get information

240
00:24:21,620 --> 00:24:29,260
from command line and retrieve some
studying died out to check if its direct

241
00:24:29,260 --> 00:24:35,140
flags which you provided to both bird
was there some foreign get the simple

242
00:24:35,140 --> 00:24:41,750
key that was not remember right now we
have to provide from command line and

243
00:24:41,750 --> 00:24:53,279
that's all so does this and going back
to that going back to that challenge

244
00:24:53,279 --> 00:24:57,950
there was anything because it exploded
one back in Ida

245
00:24:57,950 --> 00:25:07,309
action should consider us even if you
selected from PhD instead of sht does

246
00:25:07,309 --> 00:25:14,399
second header it still loaded the wrong
code so you couldn't see the correct

247
00:25:14,399 --> 00:25:25,969
code under either ok so now my task
domain go to a simple just checked the

248
00:25:25,970 --> 00:25:29,190
time but that function

249
00:25:29,190 --> 00:25:35,360
was pretty complicated if you damned
cold and therefore for example the

250
00:25:35,360 --> 00:25:47,870
bagger you can see a lot of junk it
starts with a jump and shot hurt so read

251
00:25:47,870 --> 00:25:57,520
up to 30,000 appliance assembly and
original instructions were removed and

252
00:25:57,520 --> 00:26:07,160
there was really a lot of junk called so
you could record execution trace and

253
00:26:07,160 --> 00:26:14,840
then implements optimization like
registered tracking removing junk old

254
00:26:14,840 --> 00:26:23,639
dances animals the code because he was
very simple and just read the checks and

255
00:26:23,640 --> 00:26:33,330
but that that's the time comes consuming
solution so that there was more tricky

256
00:26:33,330 --> 00:26:42,120
solution you could record two executions
of the changes which different different

257
00:26:42,120 --> 00:26:48,750
passwords different formats for example
you enter text change 11 be in for

258
00:26:48,750 --> 00:26:55,370
example in the first bite and comparing
that races and the execution paths

259
00:26:55,370 --> 00:27:02,080
powerful soros constant but if you look
at the register of values and see the

260
00:27:02,080 --> 00:27:11,320
differences is easiest part of the
algorithm and just a sec what's

261
00:27:11,320 --> 00:27:19,870
happening so that that that that was
easy to do but I between al-qaida second

262
00:27:19,870 --> 00:27:31,409
task encrypted PNG so you got the fire
and Krypton pattern which speed speed

263
00:27:31,410 --> 00:27:40,740
input fire in two times the size and
they get an entry please so there are

264
00:27:40,740 --> 00:27:50,440
going to be playing with k sorry and
then reversing that multiplication and

265
00:27:50,440 --> 00:28:00,210
every every brought blog the cake he was
taking it was taken to the next power ok

266
00:28:00,210 --> 00:28:09,570
that was a great and how to solve that
and you got you you saw the algorithm an

267
00:28:09,570 --> 00:28:19,669
encrypted fire so first step was to find
blocksize that was easy because if you

268
00:28:19,670 --> 00:28:26,260
if you see the encrypted file it was
there were there were a lot of repeating

269
00:28:26,260 --> 00:28:32,810
patterns like that by which each
repeated every seven bites because that

270
00:28:32,810 --> 00:28:46,510
that that was especially lower by ok
next time because we know that P&G fire

271
00:28:46,510 --> 00:28:51,710
from the extension we could get against
the first two or three blocks because

272
00:28:51,710 --> 00:29:00,260
the day that was a constant P&G header
and then we got some equations and next

273
00:29:00,260 --> 00:29:07,140
week we could just soldiers from
starting from the starting from the

274
00:29:07,140 --> 00:29:13,070
lower bids because the equation with the
module

275
00:29:13,070 --> 00:29:24,990
power of two so you can start with lower
base and an extended results then keep

276
00:29:24,990 --> 00:29:39,519
pace and just recovered that's a
pleasure challenge because it was

277
00:29:39,519 --> 00:29:46,419
something I guess crypto for 100 points
and if you exactly look at the challenge

278
00:29:46,419 --> 00:29:53,629
there was very a lot of repeating the
columns so the main thing of the

279
00:29:53,629 --> 00:30:00,209
challenge was to just converted from all
directions values to the binary and I

280
00:30:00,210 --> 00:30:06,379
don't know how it's how it looks like
now but when we just put the old zeros

281
00:30:06,379 --> 00:30:18,550
there was a slack in plain text stream
just visual

282
00:30:18,550 --> 00:30:28,040
procedure and we're very similar source
code but totally different solution and

283
00:30:28,040 --> 00:30:36,590
problem with simplest one while small
public exponent and repeated messages

284
00:30:36,590 --> 00:30:43,310
we've really small defense and these
conditions are enough to coppersmith

285
00:30:43,310 --> 00:30:55,419
sort of just entertainment solution from
paper and get the flak the harder the

286
00:30:55,420 --> 00:31:06,700
challenge to parts in the first part we
should recover by Tanya in turn around

287
00:31:06,700 --> 00:31:19,440
on stage and we are able to do that by
recording encrypted random numbers and

288
00:31:19,440 --> 00:31:26,680
scenes they were very small and
publishing sponsor also small to decode

289
00:31:26,680 --> 00:31:40,010
them we need just to compute engine
wrote there's also not decrypt the

290
00:31:40,010 --> 00:31:47,840
problem but some implementation back in
which generates random numbers and

291
00:31:47,840 --> 00:32:01,449
threaten last 320 beads with zeros and

292
00:32:01,450 --> 00:32:18,340
so this amount of bids of first prime
number only the song by Tom random

293
00:32:18,340 --> 00:32:30,590
generator and since we had internal
state we were able to find possibilities

294
00:32:30,590 --> 00:32:41,918
of these beats and having that we're
able to run another coppersmith outtake

295
00:32:41,919 --> 00:32:59,320
from the paper and get the flak but
however slide this task with a harder

296
00:32:59,320 --> 00:33:04,178
task might have noticed it on the
organizer stable long story short

297
00:33:04,179 --> 00:33:09,120
accepted 15 note this is not a banknote
and it would spread out of vodka for you

298
00:33:09,120 --> 00:33:14,209
but that's the lame part history part is
that if you look at the photos you could

299
00:33:14,210 --> 00:33:18,840
use an architecture and well as sucker
would just pay for the vodka hacker can

300
00:33:18,840 --> 00:33:24,199
get it for free by possibly interfacing
with whatever the SMS functionality in

301
00:33:24,200 --> 00:33:31,340
the hardware was the test was split into
two parts the first one was just for

302
00:33:31,340 --> 00:33:35,240
people to understand how the comes
worked so you were supposed to send

303
00:33:35,240 --> 00:33:39,500
command and we'll get the flight
behavior such as the second one was you

304
00:33:39,500 --> 00:33:44,919
were supposed to bone but as via buffer
overflow via SMS

305
00:33:44,919 --> 00:33:50,389
the same function responsible for 42 to
get both blacks SMS was parsed for

306
00:33:50,389 --> 00:33:52,129
commands

307
00:33:52,130 --> 00:33:59,620
first of all you could use the so called
encryption used to decode the buffers

308
00:33:59,620 --> 00:34:04,928
and if you if you were to write code
that would pass these checks you just

309
00:34:04,929 --> 00:34:09,589
get the flight back the same function
had a bug where there was a just simple

310
00:34:09,589 --> 00:34:13,940
buffer overflow Dakota to consider was
sixteen months long

311
00:34:13,940 --> 00:34:18,000
and it would just get smashed with
anything you sent to it but decrypt it

312
00:34:18,000 --> 00:34:23,750
so you were able to overflow it with the
return address of function that would

313
00:34:23,750 --> 00:34:29,168
just be taught the world cup as you can
see on the right and bottom sides corner

314
00:34:29,168 --> 00:34:33,348
my speed was very simple I saw people
try to solve it more difficult aspect

315
00:34:33,349 --> 00:34:39,500
but you're just to take the dude the
return address of the vodka function

316
00:34:39,500 --> 00:34:44,710
repeat as many times as you can send
that that would trigger poor of course

317
00:34:44,710 --> 00:34:48,540
and other things that people do notice
that is what these were in some remote

318
00:34:48,540 --> 00:34:54,980
instructions so you had to increase the
address by one which was not obvious to

319
00:34:54,980 --> 00:35:02,069
people who are supposed to i'm for the
first time of course

320
00:35:02,069 --> 00:35:07,529
here's my plug you can get the source
code and the hardware designs of my

321
00:35:07,530 --> 00:35:17,840
github if you want to you is GPL license

322
00:35:17,840 --> 00:35:25,420
ok so yes the other side of the tasks
were here so you could see them and if

323
00:35:25,420 --> 00:35:33,440
you have any more questions just talk to
them also be sure to come to the awards

324
00:35:33,440 --> 00:35:40,540
ceremony which is going to be in half an
hour and also you're so we have some

325
00:35:40,540 --> 00:35:46,080
remaining program mister magazines lying
on our desk so if you haven't done that

326
00:35:46,080 --> 00:35:50,420
yet be sure to grab a copy and thanks
for coming

