1
00:00:06,540 --> 00:00:13,740
thank you for being here before starting

2
00:00:10,379 --> 00:00:17,039
I'd like to ask<font color="#E5E5E5"> by show of hands who of</font>

3
00:00:13,740 --> 00:00:22,410
you<font color="#E5E5E5"> works in security</font><font color="#CCCCCC"> or has worked in</font>

4
00:00:17,039 --> 00:00:25,619
security before<font color="#E5E5E5"> great</font><font color="#CCCCCC"> so the I</font><font color="#E5E5E5"> would say</font>

5
00:00:22,410 --> 00:00:28,230
<font color="#CCCCCC">the majority</font><font color="#E5E5E5"> of you</font><font color="#CCCCCC"> work in security</font>

6
00:00:25,619 --> 00:00:32,390
<font color="#E5E5E5">all right so my</font><font color="#CCCCCC"> talk will be</font><font color="#E5E5E5"> about</font>

7
00:00:28,230 --> 00:00:34,620
hunting malicious injections<font color="#CCCCCC"> using</font>

8
00:00:32,390 --> 00:00:37,460
application real-time monitoring and

9
00:00:34,620 --> 00:00:41,280
let's see what the hell<font color="#E5E5E5"> is that</font>

10
00:00:37,460 --> 00:00:44,489
<font color="#E5E5E5">so before</font><font color="#CCCCCC"> that a little bit about me so</font>

11
00:00:41,280 --> 00:00:48,719
I'm better<font color="#CCCCCC"> fruit owner</font><font color="#E5E5E5"> I founder and CTO</font>

12
00:00:44,489 --> 00:00:52,709
<font color="#CCCCCC">of Jay scrambler presently I mostly work</font>

13
00:00:48,719 --> 00:00:54,569
in<font color="#E5E5E5"> application security</font><font color="#CCCCCC"> mostly</font><font color="#E5E5E5"> around</font>

14
00:00:52,710 --> 00:00:59,909
JavaScript and JavaScript code

15
00:00:54,569 --> 00:01:02,149
<font color="#E5E5E5">protection</font><font color="#CCCCCC"> but before I also worked like</font>

16
00:00:59,909 --> 00:01:05,298
<font color="#E5E5E5">ten years</font><font color="#CCCCCC"> ago I</font><font color="#E5E5E5"> started working with</font>

17
00:01:02,149 --> 00:01:08,580
developing<font color="#E5E5E5"> about detection techniques</font>

18
00:01:05,299 --> 00:01:10,800
<font color="#CCCCCC">fraud detection</font><font color="#E5E5E5"> and all of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and more</font>

19
00:01:08,580 --> 00:01:13,170
<font color="#E5E5E5">recently I've been paying a</font><font color="#CCCCCC"> lot of</font>

20
00:01:10,800 --> 00:01:15,179
attention<font color="#E5E5E5"> to anything related to</font><font color="#CCCCCC"> men</font><font color="#E5E5E5"> in</font>

21
00:01:13,170 --> 00:01:18,840
the browser<font color="#CCCCCC"> trojans</font><font color="#E5E5E5"> or malicious</font>

22
00:01:15,180 --> 00:01:21,390
extensions or anything<font color="#E5E5E5"> that ends up like</font>

23
00:01:18,840 --> 00:01:25,260
injecting<font color="#E5E5E5"> something in the client-side</font>

24
00:01:21,390 --> 00:01:27,140
<font color="#E5E5E5">context in</font><font color="#CCCCCC"> the browser so the agenda</font><font color="#E5E5E5"> for</font>

25
00:01:25,260 --> 00:01:29,400
today will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> we'll start off by</font>

26
00:01:27,140 --> 00:01:33,360
<font color="#E5E5E5">mentioning a couple of real-world</font>

27
00:01:29,400 --> 00:01:35,340
examples<font color="#CCCCCC"> we're checking how the</font>

28
00:01:33,360 --> 00:01:38,670
client-side integrity threat landscape

29
00:01:35,340 --> 00:01:42,180
looks like then we'll jump to the main

30
00:01:38,670 --> 00:01:43,920
topic<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> of this talk which</font><font color="#CCCCCC"> is a new</font>

31
00:01:42,180 --> 00:01:45,360
<font color="#E5E5E5">approach</font><font color="#CCCCCC"> that we have</font><font color="#E5E5E5"> developed</font><font color="#CCCCCC"> called</font>

32
00:01:43,920 --> 00:01:48,930
<font color="#E5E5E5">that we call application real-time</font>

33
00:01:45,360 --> 00:01:55,789
monitoring and then<font color="#E5E5E5"> we'll have live demo</font>

34
00:01:48,930 --> 00:01:57,290
and and it's basically<font color="#E5E5E5"> it so in late</font>

35
00:01:55,790 --> 00:02:01,740
2014

36
00:01:57,290 --> 00:02:05,100
<font color="#CCCCCC">jQuery CDN was breached</font><font color="#E5E5E5"> and for a short</font>

37
00:02:01,740 --> 00:02:08,310
amount<font color="#E5E5E5"> of hours everyone every</font><font color="#CCCCCC"> website</font>

38
00:02:05,100 --> 00:02:12,269
<font color="#E5E5E5">that was loading jQuery directly from</font>

39
00:02:08,310 --> 00:02:15,480
their CDN was<font color="#E5E5E5"> basically serving the reek</font>

40
00:02:12,269 --> 00:02:18,299
<font color="#E5E5E5">exploit kits to every end user going to</font>

41
00:02:15,480 --> 00:02:19,450
those<font color="#CCCCCC"> websites so as</font><font color="#E5E5E5"> I said it only</font>

42
00:02:18,299 --> 00:02:22,510
lasted

43
00:02:19,450 --> 00:02:25,119
a few<font color="#CCCCCC"> hours but can you</font><font color="#E5E5E5"> imagine how</font><font color="#CCCCCC"> many</font>

44
00:02:22,510 --> 00:02:27,940
users were being hit by<font color="#E5E5E5"> the</font><font color="#CCCCCC"> rig exploit</font>

45
00:02:25,120 --> 00:02:31,060
kit it wasn't the first<font color="#E5E5E5"> time that</font>

46
00:02:27,940 --> 00:02:33,400
<font color="#CCCCCC">something</font><font color="#E5E5E5"> like this happened but to my</font>

47
00:02:31,060 --> 00:02:35,440
recollection<font color="#CCCCCC"> it was</font><font color="#E5E5E5"> probably the first</font>

48
00:02:33,400 --> 00:02:39,599
<font color="#CCCCCC">time</font><font color="#E5E5E5"> that we really</font><font color="#CCCCCC"> started paying</font>

49
00:02:35,440 --> 00:02:43,900
<font color="#E5E5E5">attention to this kind</font><font color="#CCCCCC"> of threats</font><font color="#E5E5E5"> so and</font>

50
00:02:39,599 --> 00:02:45,339
back then we<font color="#CCCCCC"> said that we'll see more</font>

51
00:02:43,900 --> 00:02:47,650
<font color="#E5E5E5">like</font><font color="#CCCCCC"> this in the future</font>

52
00:02:45,340 --> 00:02:52,090
and today we<font color="#CCCCCC"> know that this is true</font><font color="#E5E5E5"> and</font>

53
00:02:47,650 --> 00:02:55,330
<font color="#E5E5E5">let's see other examples so in the year</font>

54
00:02:52,090 --> 00:02:58,750
<font color="#CCCCCC">after in 2015 and many in</font><font color="#E5E5E5"> the browser</font>

55
00:02:55,330 --> 00:03:03,549
attack hits<font color="#E5E5E5"> like hundreds of</font><font color="#CCCCCC"> banks</font>

56
00:02:58,750 --> 00:03:06,280
across<font color="#CCCCCC"> the world and and manage the the</font>

57
00:03:03,549 --> 00:03:10,180
attackers managed to steal roughly

58
00:03:06,280 --> 00:03:13,269
around<font color="#E5E5E5"> 50 million u.s. dollars but what</font>

59
00:03:10,180 --> 00:03:16,290
<font color="#E5E5E5">were what was worse about this attack is</font>

60
00:03:13,269 --> 00:03:19,480
that<font color="#CCCCCC"> it lasted two months</font><font color="#E5E5E5"> is between</font>

61
00:03:16,290 --> 00:03:22,870
just they starting<font color="#E5E5E5"> EXO trading money</font>

62
00:03:19,480 --> 00:03:25,869
<font color="#E5E5E5">from the end users</font><font color="#CCCCCC"> accounts and the</font><font color="#E5E5E5"> take</font>

63
00:03:22,870 --> 00:03:30,519
<font color="#E5E5E5">off of the bots and we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font>

64
00:03:25,870 --> 00:03:33,040
hundreds of banking websites<font color="#E5E5E5"> so a lot</font><font color="#CCCCCC"> of</font>

65
00:03:30,519 --> 00:03:35,799
<font color="#E5E5E5">people could have paid the attention</font>

66
00:03:33,040 --> 00:03:39,100
sooner<font color="#E5E5E5"> and probably the the threat would</font>

67
00:03:35,799 --> 00:03:41,280
<font color="#E5E5E5">be killed more quickly and it didn't</font>

68
00:03:39,100 --> 00:03:41,280
happen

69
00:03:41,430 --> 00:03:49,359
<font color="#CCCCCC">last</font><font color="#E5E5E5"> year</font><font color="#CCCCCC"> a dependency was compromised</font>

70
00:03:45,910 --> 00:03:54,190
<font color="#CCCCCC">and websites like Equifax and TransUnion</font>

71
00:03:49,359 --> 00:03:56,370
<font color="#CCCCCC">were affected by this</font><font color="#E5E5E5"> so basically and</font>

72
00:03:54,190 --> 00:04:00,069
what was<font color="#E5E5E5"> happening and I quote a</font>

73
00:03:56,370 --> 00:04:02,920
carousel of badness<font color="#CCCCCC"> was being served to</font>

74
00:04:00,069 --> 00:04:05,950
every<font color="#E5E5E5"> end user of the affected websites</font>

75
00:04:02,920 --> 00:04:08,888
<font color="#E5E5E5">so the the malicious code was either</font>

76
00:04:05,950 --> 00:04:10,929
serving a fake survey to<font color="#CCCCCC"> the end users</font>

77
00:04:08,889 --> 00:04:14,069
<font color="#E5E5E5">to collect like their personal data or</font>

78
00:04:10,930 --> 00:04:17,200
was serving like a fake<font color="#E5E5E5"> flash</font><font color="#CCCCCC"> plugin or</font>

79
00:04:14,069 --> 00:04:19,510
even an exploit kit and it was

80
00:04:17,200 --> 00:04:26,650
compromising the machines of the<font color="#E5E5E5"> end</font>

81
00:04:19,510 --> 00:04:29,889
users<font color="#CCCCCC"> this year in</font><font color="#E5E5E5"> February we have seen</font>

82
00:04:26,650 --> 00:04:30,580
also a dependency in this case it was a

83
00:04:29,889 --> 00:04:35,050
browser

84
00:04:30,580 --> 00:04:39,250
<font color="#CCCCCC">Aloud's</font><font color="#E5E5E5"> which is a</font><font color="#CCCCCC"> plug-in to like to</font>

85
00:04:35,050 --> 00:04:43,419
read out<font color="#CCCCCC"> loud the text of a website so a</font>

86
00:04:39,250 --> 00:04:45,699
few a few<font color="#E5E5E5"> websites</font><font color="#CCCCCC"> were hit by this</font>

87
00:04:43,419 --> 00:04:48,508
<font color="#E5E5E5">compromise so</font><font color="#CCCCCC"> that basically the</font>

88
00:04:45,699 --> 00:04:53,199
attackers<font color="#E5E5E5"> they change the library</font>

89
00:04:48,509 --> 00:04:56,409
directly in the server<font color="#E5E5E5"> of the of the the</font>

90
00:04:53,199 --> 00:04:59,379
<font color="#CCCCCC">third-party</font><font color="#E5E5E5"> dependency and they injected</font>

91
00:04:56,409 --> 00:05:02,259
the coin hives<font color="#E5E5E5"> library to use the</font>

92
00:04:59,379 --> 00:05:06,340
<font color="#CCCCCC">end-users</font><font color="#E5E5E5"> PC to mine</font><font color="#CCCCCC"> cryptocurrencies</font>

93
00:05:02,259 --> 00:05:10,870
<font color="#E5E5E5">so among the websites that were attacked</font>

94
00:05:06,340 --> 00:05:14,289
by<font color="#CCCCCC"> this you have the UK's ICO</font><font color="#E5E5E5"> which</font>

95
00:05:10,870 --> 00:05:17,199
ironically is the an institution that<font color="#E5E5E5"> is</font>

96
00:05:14,289 --> 00:05:21,699
meant to<font color="#E5E5E5"> protect the</font><font color="#CCCCCC"> privacy</font><font color="#E5E5E5"> of UK</font>

97
00:05:17,199 --> 00:05:25,449
citizens<font color="#CCCCCC"> so it was one website</font><font color="#E5E5E5"> among</font>

98
00:05:21,699 --> 00:05:26,110
four thousand others but you<font color="#CCCCCC"> know how</font><font color="#E5E5E5"> it</font>

99
00:05:25,449 --> 00:05:28,870
works

100
00:05:26,110 --> 00:05:36,330
you're going to talk about the<font color="#E5E5E5"> most</font>

101
00:05:28,870 --> 00:05:41,110
polemic<font color="#E5E5E5"> cases of course in March we saw</font>

102
00:05:36,330 --> 00:05:44,469
many in the browser<font color="#E5E5E5"> campaign not</font><font color="#CCCCCC"> only it</font>

103
00:05:41,110 --> 00:05:48,029
was targeting financial institutions<font color="#E5E5E5"> but</font>

104
00:05:44,469 --> 00:05:51,610
it also was targeting crypto exchanges

105
00:05:48,029 --> 00:05:54,759
more precisely it was<font color="#E5E5E5"> attacking</font><font color="#CCCCCC"> coin</font>

106
00:05:51,610 --> 00:05:59,379
<font color="#CCCCCC">base and coin and blockchain dot info</font>

107
00:05:54,759 --> 00:06:01,599
web sites and actually this this<font color="#E5E5E5"> issue</font>

108
00:05:59,379 --> 00:06:04,469
was discovered by a company named the

109
00:06:01,599 --> 00:06:07,150
security scorecard<font color="#CCCCCC"> and we actually</font>

110
00:06:04,469 --> 00:06:09,789
reached out<font color="#E5E5E5"> to them and we and that</font>

111
00:06:07,150 --> 00:06:12,669
<font color="#E5E5E5">ended up collaborating and and doing</font>

112
00:06:09,789 --> 00:06:15,729
<font color="#E5E5E5">like a deep analysis of what</font><font color="#CCCCCC"> trojan</font><font color="#E5E5E5"> and</font>

113
00:06:12,669 --> 00:06:19,240
the injections were<font color="#E5E5E5"> doing in those</font>

114
00:06:15,729 --> 00:06:23,110
crypto exchanges<font color="#CCCCCC"> web sites and and the</font>

115
00:06:19,240 --> 00:06:26,349
result<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> we we did a talk this</font>

116
00:06:23,110 --> 00:06:29,050
<font color="#CCCCCC">year at Def Con</font><font color="#E5E5E5"> demonstrating how they</font>

117
00:06:26,349 --> 00:06:31,839
work<font color="#E5E5E5"> and what they</font><font color="#CCCCCC"> were doing and what</font>

118
00:06:29,050 --> 00:06:34,870
<font color="#E5E5E5">they could potentially be</font><font color="#CCCCCC"> doing next</font><font color="#E5E5E5"> if</font>

119
00:06:31,839 --> 00:06:37,870
they<font color="#CCCCCC"> evolved this type of threat but one</font>

120
00:06:34,870 --> 00:06:39,700
thing that<font color="#E5E5E5"> caught our attention is that</font>

121
00:06:37,870 --> 00:06:42,070
crypto exchanges are web

122
00:06:39,700 --> 00:06:45,250
it's that usually use<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> that</font>

123
00:06:42,070 --> 00:06:48,610
you have at your<font color="#CCCCCC"> disposal</font><font color="#E5E5E5"> to protect the</font>

124
00:06:45,250 --> 00:06:50,650
the user's authentication<font color="#CCCCCC"> they are very</font>

125
00:06:48,610 --> 00:06:53,440
word with account takeovers they use

126
00:06:50,650 --> 00:06:55,960
two-factor authentication<font color="#CCCCCC"> everything</font>

127
00:06:53,440 --> 00:06:58,480
<font color="#E5E5E5">that you do they will send you an email</font>

128
00:06:55,960 --> 00:07:01,120
just<font color="#CCCCCC"> warning that</font><font color="#E5E5E5"> you just did this to</font>

129
00:06:58,480 --> 00:07:05,890
your<font color="#CCCCCC"> accounts</font><font color="#E5E5E5"> make sure that you are the</font>

130
00:07:01,120 --> 00:07:08,020
guy doing<font color="#E5E5E5"> it so they use a lot</font><font color="#CCCCCC"> of</font>

131
00:07:05,890 --> 00:07:11,680
<font color="#E5E5E5">different techniques to prevent fraud</font>

132
00:07:08,020 --> 00:07:15,310
and account takeovers<font color="#CCCCCC"> and despite that</font>

133
00:07:11,680 --> 00:07:17,290
the<font color="#CCCCCC"> man-in-the-browser was able to quite</font>

134
00:07:15,310 --> 00:07:20,620
easily steal two-factor authentication

135
00:07:17,290 --> 00:07:24,850
tokens<font color="#CCCCCC"> and managed</font><font color="#E5E5E5"> to downgrade the</font>

136
00:07:20,620 --> 00:07:28,620
security of of this crypto exchanges and

137
00:07:24,850 --> 00:07:31,900
<font color="#E5E5E5">basically put the</font><font color="#CCCCCC"> attack attack at</font>

138
00:07:28,620 --> 00:07:35,080
accounts pretty wide open<font color="#CCCCCC"> and they could</font>

139
00:07:31,900 --> 00:07:38,020
if<font color="#E5E5E5"> they if they wanted they could very</font>

140
00:07:35,080 --> 00:07:42,370
<font color="#E5E5E5">easily transfer out every</font><font color="#CCCCCC"> fonts of</font><font color="#E5E5E5"> the</font>

141
00:07:38,020 --> 00:07:46,750
<font color="#E5E5E5">attackers accounts more recently just</font>

142
00:07:42,370 --> 00:07:49,360
last month<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think and this</font><font color="#CCCCCC"> is to</font><font color="#E5E5E5"> show</font>

143
00:07:46,750 --> 00:07:52,750
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we are not</font><font color="#CCCCCC"> just talking</font><font color="#E5E5E5"> about many</font>

144
00:07:49,360 --> 00:07:55,630
in the browser or<font color="#E5E5E5"> third-party components</font>

145
00:07:52,750 --> 00:08:01,270
that have been<font color="#CCCCCC"> tampered with in this</font>

146
00:07:55,630 --> 00:08:04,390
case<font color="#E5E5E5"> is an extension which the developer</font>

147
00:08:01,270 --> 00:08:06,940
credentials were stolen and they managed

148
00:08:04,390 --> 00:08:10,539
to<font color="#E5E5E5"> push a modified malicious version of</font>

149
00:08:06,940 --> 00:08:13,030
the extension<font color="#E5E5E5"> and it if you know how it</font>

150
00:08:10,540 --> 00:08:15,940
works<font color="#CCCCCC"> its rolled out automatically and</font>

151
00:08:13,030 --> 00:08:19,780
<font color="#E5E5E5">everyone is updated at once</font><font color="#CCCCCC"> so it's very</font>

152
00:08:15,940 --> 00:08:22,630
quick<font color="#E5E5E5"> and it only lasted like four or</font>

153
00:08:19,780 --> 00:08:25,570
<font color="#CCCCCC">five</font><font color="#E5E5E5"> hours but it was enough to create a</font>

154
00:08:22,630 --> 00:08:28,810
lot of<font color="#E5E5E5"> damage because this extension in</font>

155
00:08:25,570 --> 00:08:31,990
particular it has<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think it's 1.7</font>

156
00:08:28,810 --> 00:08:35,380
million users<font color="#E5E5E5"> okay so what it was doing</font>

157
00:08:31,990 --> 00:08:38,620
<font color="#CCCCCC">it</font><font color="#E5E5E5"> was collecting like the credentials</font>

158
00:08:35,380 --> 00:08:41,650
and personal data<font color="#E5E5E5"> and crypto keys</font>

159
00:08:38,620 --> 00:08:45,460
private keys from everyone using this

160
00:08:41,650 --> 00:08:49,090
extension<font color="#CCCCCC"> so if you from and credentials</font>

161
00:08:45,460 --> 00:08:50,170
<font color="#E5E5E5">from Gmail</font><font color="#CCCCCC"> Microsoft</font><font color="#E5E5E5"> email accounts and</font>

162
00:08:49,090 --> 00:08:53,440
whatever and what

163
00:08:50,170 --> 00:08:57,279
so in five<font color="#CCCCCC"> hours I'm sure they manage to</font>

164
00:08:53,440 --> 00:09:00,790
collect<font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot of good stuff eventually</font>

165
00:08:57,279 --> 00:09:03,730
<font color="#E5E5E5">Google was tipped off so this happened</font>

166
00:09:00,790 --> 00:09:05,969
in Google<font color="#E5E5E5"> Chrome Web Store they were</font>

167
00:09:03,730 --> 00:09:09,100
tipped off or they discovered and they

168
00:09:05,970 --> 00:09:12,310
they took down the<font color="#E5E5E5"> extension and when</font>

169
00:09:09,100 --> 00:09:15,670
they do that<font color="#CCCCCC"> basically the extension</font>

170
00:09:12,310 --> 00:09:17,859
becomes disabled<font color="#E5E5E5"> in every browser so</font>

171
00:09:15,670 --> 00:09:20,620
it's<font color="#CCCCCC"> very quick</font><font color="#E5E5E5"> to react but the problem</font>

172
00:09:17,860 --> 00:09:24,640
is<font color="#CCCCCC"> it's they are reacting</font><font color="#E5E5E5"> so they are</font>

173
00:09:20,620 --> 00:09:27,399
<font color="#E5E5E5">not it's very hard for extension stores</font>

174
00:09:24,640 --> 00:09:29,829
<font color="#E5E5E5">to discover if some extension is</font>

175
00:09:27,399 --> 00:09:31,959
malicious<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> because they rely</font>

176
00:09:29,829 --> 00:09:34,000
on things<font color="#CCCCCC"> like the reputation of the</font>

177
00:09:31,959 --> 00:09:36,609
extension and in this case when you

178
00:09:34,000 --> 00:09:39,970
<font color="#CCCCCC">compromised an extension</font><font color="#E5E5E5"> basically the</font>

179
00:09:36,610 --> 00:09:44,670
reputation<font color="#E5E5E5"> up to that point is</font><font color="#CCCCCC"> is good</font>

180
00:09:39,970 --> 00:09:47,589
right so it's<font color="#E5E5E5"> not malicious</font><font color="#CCCCCC"> but we also</font>

181
00:09:44,670 --> 00:09:50,560
know<font color="#CCCCCC"> of many extensions</font><font color="#E5E5E5"> that are</font>

182
00:09:47,589 --> 00:09:54,610
<font color="#E5E5E5">malicious from day one and they</font><font color="#CCCCCC"> it's</font>

183
00:09:50,560 --> 00:09:58,060
very easy for<font color="#CCCCCC"> them</font><font color="#E5E5E5"> to to not get caught</font>

184
00:09:54,610 --> 00:10:01,390
by<font color="#CCCCCC"> the initial screening from the</font>

185
00:09:58,060 --> 00:10:03,849
browser web stores so it's very<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> in</font>

186
00:10:01,390 --> 00:10:06,370
particular<font color="#E5E5E5"> because it's easy for them</font>

187
00:10:03,850 --> 00:10:09,279
not<font color="#E5E5E5"> to do anything during a certain</font>

188
00:10:06,370 --> 00:10:12,519
period<font color="#E5E5E5"> or not have malicious code and</font>

189
00:10:09,279 --> 00:10:14,649
then they can just<font color="#CCCCCC"> pull off</font><font color="#E5E5E5"> malicious</font>

190
00:10:12,519 --> 00:10:17,560
code at a certain date and<font color="#E5E5E5"> start</font>

191
00:10:14,649 --> 00:10:20,110
<font color="#E5E5E5">becoming malicious so reputation based</font>

192
00:10:17,560 --> 00:10:23,260
screening<font color="#E5E5E5"> is very hard it requires</font>

193
00:10:20,110 --> 00:10:27,750
someone<font color="#E5E5E5"> to notice and report those in</font>

194
00:10:23,260 --> 00:10:31,480
order for the threats<font color="#CCCCCC"> to be mitigated</font>

195
00:10:27,750 --> 00:10:34,690
<font color="#E5E5E5">and this has been</font><font color="#CCCCCC"> happening on and on so</font>

196
00:10:31,480 --> 00:10:38,079
it's<font color="#E5E5E5"> a is a constant</font><font color="#CCCCCC"> every</font><font color="#E5E5E5"> day you</font><font color="#CCCCCC"> see</font>

197
00:10:34,690 --> 00:10:39,910
news like this<font color="#E5E5E5"> more recently a couple of</font>

198
00:10:38,079 --> 00:10:41,709
weeks in<font color="#E5E5E5"> the last couple of weeks we</font>

199
00:10:39,910 --> 00:10:45,219
<font color="#E5E5E5">have</font><font color="#CCCCCC"> seen a rise in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> number of</font>

200
00:10:41,709 --> 00:10:50,439
<font color="#E5E5E5">attacks against ecommerce and and also</font>

201
00:10:45,220 --> 00:10:52,600
ticketing websites and we believe<font color="#CCCCCC"> that</font>

202
00:10:50,440 --> 00:10:57,070
this<font color="#E5E5E5"> attacks came from a group called</font>

203
00:10:52,600 --> 00:11:01,420
<font color="#CCCCCC">mage court</font><font color="#E5E5E5"> so you might have bumped into</font>

204
00:10:57,070 --> 00:11:03,250
a story or two about this group so the

205
00:11:01,420 --> 00:11:05,620
first time<font color="#E5E5E5"> they started</font>

206
00:11:03,250 --> 00:11:08,079
attacking stuff it was<font color="#E5E5E5"> like two</font><font color="#CCCCCC"> years</font>

207
00:11:05,620 --> 00:11:10,180
ago<font color="#CCCCCC"> but very recently</font><font color="#E5E5E5"> they increase</font>

208
00:11:08,079 --> 00:11:13,258
their activity<font color="#E5E5E5"> and for instance they</font>

209
00:11:10,180 --> 00:11:17,979
were able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> collect</font><font color="#E5E5E5"> around</font><font color="#CCCCCC"> 40,000</font>

210
00:11:13,259 --> 00:11:20,920
credit card details<font color="#E5E5E5"> from 40,000</font><font color="#CCCCCC"> users in</font>

211
00:11:17,980 --> 00:11:25,329
<font color="#CCCCCC">Ticketmaster website and it was</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> the</font>

212
00:11:20,920 --> 00:11:27,878
worst for British<font color="#E5E5E5"> Airways</font><font color="#CCCCCC"> they managed</font>

213
00:11:25,329 --> 00:11:33,878
to<font color="#CCCCCC"> collect</font><font color="#E5E5E5"> personal data and also</font>

214
00:11:27,879 --> 00:11:37,540
financial data from<font color="#CCCCCC"> 380,000 users yeah</font>

215
00:11:33,879 --> 00:11:43,839
<font color="#E5E5E5">anyone flew you flew in British Airways</font>

216
00:11:37,540 --> 00:11:47,259
lately<font color="#CCCCCC"> oh one guy two guys</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> just be</font>

217
00:11:43,839 --> 00:11:48,970
warned<font color="#E5E5E5"> okay but the point is we</font><font color="#CCCCCC"> have</font>

218
00:11:47,259 --> 00:11:51,579
been<font color="#E5E5E5"> paying attention to this we have</font>

219
00:11:48,970 --> 00:11:54,550
spending<font color="#E5E5E5"> a lot of efforts</font><font color="#CCCCCC"> just passing</font>

220
00:11:51,579 --> 00:11:57,810
the message<font color="#CCCCCC"> along and and last year to</font>

221
00:11:54,550 --> 00:12:01,209
give you an example we did we<font color="#E5E5E5"> presented</font>

222
00:11:57,810 --> 00:12:04,569
our own Trojan<font color="#CCCCCC"> that we developed using a</font>

223
00:12:01,209 --> 00:12:07,989
Chrome extension<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> basically a</font>

224
00:12:04,569 --> 00:12:10,540
hybrid<font color="#E5E5E5"> between men</font><font color="#CCCCCC"> in the browser Trojan</font>

225
00:12:07,990 --> 00:12:12,910
and a malicious extension and what we

226
00:12:10,540 --> 00:12:15,279
managed to do we managed to<font color="#E5E5E5"> collect</font>

227
00:12:12,910 --> 00:12:18,969
<font color="#E5E5E5">every piece</font><font color="#CCCCCC"> of data that</font><font color="#E5E5E5"> you can think</font>

228
00:12:15,279 --> 00:12:23,430
of<font color="#CCCCCC"> from websites</font><font color="#E5E5E5"> we managed to take</font>

229
00:12:18,970 --> 00:12:26,380
screenshots<font color="#E5E5E5"> we managed to redirect users</font>

230
00:12:23,430 --> 00:12:29,500
to the things<font color="#E5E5E5"> like let's say you go to</font>

231
00:12:26,380 --> 00:12:32,410
<font color="#CCCCCC">Google and</font><font color="#E5E5E5"> you search something</font><font color="#CCCCCC"> and we</font>

232
00:12:29,500 --> 00:12:34,060
can actually<font color="#E5E5E5"> redirect you to a different</font>

233
00:12:32,410 --> 00:12:38,560
<font color="#CCCCCC">website so you think that you are</font>

234
00:12:34,060 --> 00:12:41,560
<font color="#E5E5E5">looking for some answer and we can we</font>

235
00:12:38,560 --> 00:12:44,380
<font color="#E5E5E5">can manipulate you and and maybe make</font>

236
00:12:41,560 --> 00:12:48,670
you believe a different thing<font color="#CCCCCC"> and we</font>

237
00:12:44,380 --> 00:12:52,540
also were able<font color="#CCCCCC"> to strip out or modify</font>

238
00:12:48,670 --> 00:12:54,880
<font color="#E5E5E5">any security header in</font><font color="#CCCCCC"> the in the</font>

239
00:12:52,540 --> 00:12:57,399
traffic<font color="#E5E5E5"> so it means that we could</font>

240
00:12:54,880 --> 00:12:59,730
disable CSP we could disable basically

241
00:12:57,399 --> 00:13:02,920
anything<font color="#E5E5E5"> that relies in in heathers and</font>

242
00:12:59,730 --> 00:13:05,079
and this<font color="#CCCCCC"> is just</font><font color="#E5E5E5"> like a demonstration of</font>

243
00:13:02,920 --> 00:13:08,040
what you can do<font color="#CCCCCC"> nothing</font><font color="#E5E5E5"> nothing</font><font color="#CCCCCC"> like</font>

244
00:13:05,079 --> 00:13:11,258
this is<font color="#E5E5E5"> like really new it's</font><font color="#CCCCCC"> just an</font>

245
00:13:08,040 --> 00:13:14,770
educational<font color="#CCCCCC"> thing for people to become</font>

246
00:13:11,259 --> 00:13:17,350
<font color="#CCCCCC">more aware that this is happening</font>

247
00:13:14,770 --> 00:13:20,800
so this picture<font color="#E5E5E5"> summarizes the attack</font>

248
00:13:17,350 --> 00:13:23,740
vectors<font color="#E5E5E5"> against client-side integrity so</font>

249
00:13:20,800 --> 00:13:25,719
starting off<font color="#E5E5E5"> you can have malicious or</font>

250
00:13:23,740 --> 00:13:29,050
compromised third-party libraries<font color="#E5E5E5"> and</font>

251
00:13:25,720 --> 00:13:31,380
for<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> should use</font><font color="#E5E5E5"> vulnerability</font>

252
00:13:29,050 --> 00:13:34,439
tracking<font color="#E5E5E5"> to see if you are using</font>

253
00:13:31,380 --> 00:13:38,170
<font color="#E5E5E5">components with known vulnerabilities</font>

254
00:13:34,440 --> 00:13:39,700
<font color="#CCCCCC">but of</font><font color="#E5E5E5"> course that doesn't work</font><font color="#CCCCCC"> all the</font>

255
00:13:38,170 --> 00:13:41,890
<font color="#CCCCCC">time because you have to know the</font>

256
00:13:39,700 --> 00:13:44,350
vulnerabilities ahead of time you<font color="#CCCCCC"> can</font>

257
00:13:41,890 --> 00:13:46,360
use<font color="#E5E5E5"> sub resource integrity which</font>

258
00:13:44,350 --> 00:13:50,529
<font color="#E5E5E5">basically allows you to add attributes</font>

259
00:13:46,360 --> 00:13:52,660
to<font color="#E5E5E5"> the tags with with ashes with the</font>

260
00:13:50,529 --> 00:13:55,660
<font color="#E5E5E5">integrity checks of the scripts</font><font color="#CCCCCC"> that</font>

261
00:13:52,660 --> 00:13:58,300
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> loading and if they are not right</font>

262
00:13:55,660 --> 00:14:01,240
the browser<font color="#E5E5E5"> won't load the scripts and</font>

263
00:13:58,300 --> 00:14:04,290
<font color="#CCCCCC">you have content</font><font color="#E5E5E5"> security policy which</font>

264
00:14:01,240 --> 00:14:06,490
allows you to<font color="#E5E5E5"> specify policies and of</font>

265
00:14:04,290 --> 00:14:08,290
what scripts<font color="#E5E5E5"> you want to load you</font>

266
00:14:06,490 --> 00:14:13,660
<font color="#CCCCCC">allowed</font><font color="#E5E5E5"> to load from what domains you</font>

267
00:14:08,290 --> 00:14:16,089
<font color="#CCCCCC">can you can do nonce based approval of</font>

268
00:14:13,660 --> 00:14:19,209
certain scripts you can<font color="#E5E5E5"> do a lot but as</font>

269
00:14:16,089 --> 00:14:20,589
I said<font color="#E5E5E5"> mainly the browser Trojans for</font>

270
00:14:19,209 --> 00:14:22,750
instance they<font color="#CCCCCC"> can strip out this</font>

271
00:14:20,589 --> 00:14:26,910
information<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the page</font><font color="#CCCCCC"> before the</font>

272
00:14:22,750 --> 00:14:29,680
browser actually<font color="#E5E5E5"> computes these policies</font>

273
00:14:26,910 --> 00:14:32,500
you<font color="#E5E5E5"> have malicious browser extensions of</font>

274
00:14:29,680 --> 00:14:34,569
course you have the browser stores have

275
00:14:32,500 --> 00:14:36,910
their own screening<font color="#E5E5E5"> their own</font>

276
00:14:34,570 --> 00:14:40,180
<font color="#E5E5E5">blacklisting but</font><font color="#CCCCCC"> i've i've talked about</font>

277
00:14:36,910 --> 00:14:42,880
<font color="#E5E5E5">this before it constantly fails you have</font>

278
00:14:40,180 --> 00:14:44,560
<font color="#CCCCCC">antivirus they can detect</font><font color="#E5E5E5"> some some</font>

279
00:14:42,880 --> 00:14:48,310
forms of malicious code<font color="#E5E5E5"> but they are</font>

280
00:14:44,560 --> 00:14:50,380
really<font color="#E5E5E5"> very uneffective and you</font>

281
00:14:48,310 --> 00:14:54,640
<font color="#E5E5E5">basically have to rely on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> end user</font>

282
00:14:50,380 --> 00:14:59,230
not to<font color="#CCCCCC"> shoot himself</font><font color="#E5E5E5"> on the foot and and</font>

283
00:14:54,640 --> 00:15:01,390
and be wary and and and basically<font color="#E5E5E5"> try to</font>

284
00:14:59,230 --> 00:15:04,630
understand if something<font color="#E5E5E5"> is wrong</font><font color="#CCCCCC"> and</font>

285
00:15:01,390 --> 00:15:09,449
avoid<font color="#E5E5E5"> doing it</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> men in</font><font color="#CCCCCC"> the</font>

286
00:15:04,630 --> 00:15:12,520
browser<font color="#CCCCCC"> trojans</font><font color="#E5E5E5"> which in my opinion</font>

287
00:15:09,450 --> 00:15:15,100
<font color="#E5E5E5">there's not really something brilliant</font>

288
00:15:12,520 --> 00:15:19,029
that<font color="#CCCCCC"> you can do as a web application</font>

289
00:15:15,100 --> 00:15:21,850
<font color="#E5E5E5">owner you must in my opinion</font><font color="#CCCCCC"> just assume</font>

290
00:15:19,029 --> 00:15:24,370
that<font color="#E5E5E5"> some devices will</font><font color="#CCCCCC"> be compromised</font><font color="#E5E5E5"> so</font>

291
00:15:21,850 --> 00:15:27,310
maybe you can prevent some from being

292
00:15:24,370 --> 00:15:28,329
compromised but not all<font color="#CCCCCC"> of them so you</font>

293
00:15:27,310 --> 00:15:30,719
<font color="#CCCCCC">have to</font>

294
00:15:28,329 --> 00:15:33,819
some sort of plan<font color="#E5E5E5"> against that as well</font>

295
00:15:30,720 --> 00:15:37,119
and<font color="#E5E5E5"> finally but you have the server</font>

296
00:15:33,819 --> 00:15:41,799
<font color="#CCCCCC">breaches or things like exploiting</font>

297
00:15:37,119 --> 00:15:43,899
common vulnerabilities like XSS<font color="#CCCCCC"> and in</font>

298
00:15:41,799 --> 00:15:46,410
this<font color="#CCCCCC"> regard you can can you you should</font>

299
00:15:43,899 --> 00:15:50,589
do<font color="#CCCCCC"> Vernor ability scanning</font><font color="#E5E5E5"> pen testing</font>

300
00:15:46,410 --> 00:15:53,589
<font color="#E5E5E5">but as you know it doesn't</font><font color="#CCCCCC"> insure you</font>

301
00:15:50,589 --> 00:15:55,839
<font color="#CCCCCC">that you are finding every possible</font>

302
00:15:53,589 --> 00:15:59,309
vulnerability<font color="#CCCCCC"> you can run your own</font>

303
00:15:55,839 --> 00:16:02,319
bounty<font color="#E5E5E5"> programs you can you can use</font>

304
00:15:59,309 --> 00:16:07,089
<font color="#E5E5E5">security</font><font color="#CCCCCC"> heather's to try to enforce the</font>

305
00:16:02,319 --> 00:16:11,248
use of<font color="#CCCCCC"> all certain policies but but some</font>

306
00:16:07,089 --> 00:16:14,319
will<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> get to get through and</font>

307
00:16:11,249 --> 00:16:18,369
<font color="#E5E5E5">eventually inject something into the</font>

308
00:16:14,319 --> 00:16:22,299
context of<font color="#E5E5E5"> the webpage so what are the</font>

309
00:16:18,369 --> 00:16:25,869
main takeaways from this basically<font color="#E5E5E5"> that</font>

310
00:16:22,299 --> 00:16:29,709
we are relying too much on third parties

311
00:16:25,869 --> 00:16:32,709
<font color="#E5E5E5">so vulnerability tracking you need the</font>

312
00:16:29,709 --> 00:16:35,618
guys<font color="#E5E5E5"> that are developing that</font><font color="#CCCCCC"> to keep up</font>

313
00:16:32,709 --> 00:16:38,709
<font color="#E5E5E5">with the rules just update them as quick</font>

314
00:16:35,619 --> 00:16:40,749
as they<font color="#CCCCCC"> can and</font><font color="#E5E5E5"> and all the researchers</font>

315
00:16:38,709 --> 00:16:45,939
<font color="#E5E5E5">that</font><font color="#CCCCCC"> are involved to keep up like</font>

316
00:16:40,749 --> 00:16:48,399
<font color="#E5E5E5">discovering things</font><font color="#CCCCCC"> third parties</font>

317
00:16:45,939 --> 00:16:51,189
well you shouldn't<font color="#E5E5E5"> in my opinion you</font>

318
00:16:48,399 --> 00:16:54,489
shouldn't load directly<font color="#CCCCCC"> JavaScript from</font>

319
00:16:51,189 --> 00:16:56,829
a third party<font color="#CCCCCC"> the best</font><font color="#E5E5E5"> approach will be</font>

320
00:16:54,489 --> 00:16:59,220
probably<font color="#CCCCCC"> you</font><font color="#E5E5E5"> need to download the</font>

321
00:16:56,829 --> 00:17:02,679
dependency and just host it yourself

322
00:16:59,220 --> 00:17:04,659
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> but that doesn't protect you from</font>

323
00:17:02,679 --> 00:17:08,980
being breached<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the code being</font>

324
00:17:04,659 --> 00:17:11,889
modified<font color="#E5E5E5"> directly on your server and</font>

325
00:17:08,980 --> 00:17:14,589
<font color="#E5E5E5">also it might be an inconvenience if the</font>

326
00:17:11,888 --> 00:17:18,099
<font color="#CCCCCC">code is changing and</font><font color="#E5E5E5"> you want to have</font>

327
00:17:14,589 --> 00:17:21,220
your application<font color="#CCCCCC"> updated but in</font><font color="#E5E5E5"> my</font>

328
00:17:18,099 --> 00:17:23,469
<font color="#CCCCCC">opinion</font><font color="#E5E5E5"> it should do that</font><font color="#CCCCCC"> still it</font>

329
00:17:21,220 --> 00:17:25,600
should<font color="#E5E5E5"> host the version because you</font>

330
00:17:23,470 --> 00:17:28,029
don't want the third party to keep

331
00:17:25,599 --> 00:17:31,090
<font color="#E5E5E5">changing the application</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> they</font>

332
00:17:28,029 --> 00:17:32,860
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> component of your</font><font color="#CCCCCC"> application you</font>

333
00:17:31,090 --> 00:17:34,480
don't<font color="#E5E5E5"> want them to change</font><font color="#CCCCCC"> without you</font>

334
00:17:32,860 --> 00:17:36,610
knowing without<font color="#E5E5E5"> you having the</font>

335
00:17:34,480 --> 00:17:39,130
<font color="#CCCCCC">possibility of running</font><font color="#E5E5E5"> your own testing</font>

336
00:17:36,610 --> 00:17:40,629
<font color="#E5E5E5">or security testing so it's actually a</font>

337
00:17:39,130 --> 00:17:41,860
<font color="#E5E5E5">good</font><font color="#CCCCCC"> thing that you host the file</font>

338
00:17:40,630 --> 00:17:44,650
<font color="#CCCCCC">yourself because</font>

339
00:17:41,860 --> 00:17:46,959
it allows you to to<font color="#CCCCCC"> have more</font><font color="#E5E5E5"> control</font>

340
00:17:44,650 --> 00:17:49,840
about<font color="#E5E5E5"> the code that ends</font><font color="#CCCCCC"> up running with</font>

341
00:17:46,960 --> 00:17:51,760
your application so we know that the

342
00:17:49,840 --> 00:17:54,370
browser extension<font color="#E5E5E5"> stores they they</font>

343
00:17:51,760 --> 00:17:58,230
currently<font color="#E5E5E5"> they do a very crappy job and</font>

344
00:17:54,370 --> 00:18:03,100
and basically<font color="#E5E5E5"> they tell you to your face</font>

345
00:17:58,230 --> 00:18:04,900
<font color="#CCCCCC">so</font><font color="#E5E5E5"> you must not rely that</font><font color="#CCCCCC"> the this</font>

346
00:18:03,100 --> 00:18:06,399
extension<font color="#E5E5E5"> stores will protect your</font>

347
00:18:04,900 --> 00:18:09,750
<font color="#E5E5E5">website from being like completely</font>

348
00:18:06,400 --> 00:18:13,270
defaced or modified and things like

349
00:18:09,750 --> 00:18:15,250
completely tricking the user<font color="#E5E5E5"> into doing</font>

350
00:18:13,270 --> 00:18:17,200
something<font color="#E5E5E5"> and you have to rely on the</font>

351
00:18:15,250 --> 00:18:19,690
user not<font color="#CCCCCC"> to install</font><font color="#E5E5E5"> those malicious</font>

352
00:18:17,200 --> 00:18:22,660
extensions which we all know that<font color="#E5E5E5"> will</font>

353
00:18:19,690 --> 00:18:25,720
fail<font color="#E5E5E5"> and devices are not efficient and</font>

354
00:18:22,660 --> 00:18:28,240
users get<font color="#E5E5E5"> easily infected so in a</font>

355
00:18:25,720 --> 00:18:31,500
nutshell<font color="#E5E5E5"> we are relying too</font><font color="#CCCCCC"> much in</font>

356
00:18:28,240 --> 00:18:34,210
things<font color="#E5E5E5"> that we do not control and</font>

357
00:18:31,500 --> 00:18:36,730
<font color="#E5E5E5">existing solutions</font><font color="#CCCCCC"> also have their</font>

358
00:18:34,210 --> 00:18:40,570
limitations<font color="#CCCCCC"> I mean I'm the first guy to</font>

359
00:18:36,730 --> 00:18:45,010
<font color="#E5E5E5">say you should use</font><font color="#CCCCCC"> CSP should</font><font color="#E5E5E5"> use HSTs</font>

360
00:18:40,570 --> 00:18:48,309
<font color="#E5E5E5">or whatever</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> should totally follow a</font>

361
00:18:45,010 --> 00:18:50,679
defense in<font color="#CCCCCC"> that approach</font><font color="#E5E5E5"> but at the same</font>

362
00:18:48,309 --> 00:18:53,100
time if you do your threat modeling if

363
00:18:50,679 --> 00:18:55,780
you do your analysis<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> that's</font>

364
00:18:53,100 --> 00:18:59,770
<font color="#E5E5E5">sometimes that's not</font><font color="#CCCCCC"> enough and</font><font color="#E5E5E5"> you need</font>

365
00:18:55,780 --> 00:19:03,870
to have a<font color="#E5E5E5"> number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> different strategies</font>

366
00:18:59,770 --> 00:19:07,840
<font color="#CCCCCC">to catch</font><font color="#E5E5E5"> the ones that are going through</font>

367
00:19:03,870 --> 00:19:10,120
and this attacks<font color="#CCCCCC"> the examples</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I've</font>

368
00:19:07,840 --> 00:19:13,030
shown<font color="#CCCCCC"> you there are far too</font><font color="#E5E5E5"> appealing</font>

369
00:19:10,120 --> 00:19:18,639
for<font color="#E5E5E5"> attackers and we have seen this</font>

370
00:19:13,030 --> 00:19:21,399
<font color="#E5E5E5">attacks increasing so so we better just</font>

371
00:19:18,640 --> 00:19:25,480
assume that some injections<font color="#E5E5E5"> will get</font>

372
00:19:21,400 --> 00:19:30,250
through<font color="#E5E5E5"> and this reasoning just was the</font>

373
00:19:25,480 --> 00:19:32,110
motivation<font color="#CCCCCC"> for our work we</font><font color="#E5E5E5"> started</font>

374
00:19:30,250 --> 00:19:34,809
developing<font color="#E5E5E5"> this approach that</font><font color="#CCCCCC"> we call</font>

375
00:19:32,110 --> 00:19:38,678
the application<font color="#E5E5E5"> real-time monitoring and</font>

376
00:19:34,809 --> 00:19:42,070
initially we asked ourselves<font color="#CCCCCC"> so if we</font>

377
00:19:38,679 --> 00:19:46,330
cannot avoid the injections<font color="#E5E5E5"> what can we</font>

378
00:19:42,070 --> 00:19:48,939
do<font color="#E5E5E5"> is that can you have another</font><font color="#CCCCCC"> way of</font>

379
00:19:46,330 --> 00:19:50,320
trying<font color="#CCCCCC"> to reduce or attenuate the</font>

380
00:19:48,940 --> 00:19:53,380
<font color="#E5E5E5">problem</font>

381
00:19:50,320 --> 00:19:57,280
if you cannot mitigate the problem 100%

382
00:19:53,380 --> 00:19:59,530
<font color="#E5E5E5">and so we came up with with this</font>

383
00:19:57,280 --> 00:20:04,750
application<font color="#E5E5E5"> real-time monitoring that I</font>

384
00:19:59,530 --> 00:20:07,750
will explain<font color="#CCCCCC"> to</font><font color="#E5E5E5"> you in a second but this</font>

385
00:20:04,750 --> 00:20:09,910
were the requirements<font color="#CCCCCC"> that we enumerated</font>

386
00:20:07,750 --> 00:20:12,160
<font color="#E5E5E5">so we were thinking about how</font><font color="#CCCCCC"> to do this</font>

387
00:20:09,910 --> 00:20:14,170
and with the first thing that<font color="#CCCCCC"> we</font>

388
00:20:12,160 --> 00:20:16,810
realized<font color="#CCCCCC"> that we couldn't</font><font color="#E5E5E5"> do this at the</font>

389
00:20:14,170 --> 00:20:19,960
markup or<font color="#E5E5E5"> file level</font><font color="#CCCCCC"> we couldn't check</font>

390
00:20:16,810 --> 00:20:22,750
the integrity<font color="#E5E5E5"> of things at the file or</font>

391
00:20:19,960 --> 00:20:25,840
markup level because some of<font color="#E5E5E5"> these</font>

392
00:20:22,750 --> 00:20:28,450
<font color="#E5E5E5">threats they only modify</font><font color="#CCCCCC"> things</font>

393
00:20:25,840 --> 00:20:32,320
afterwards<font color="#CCCCCC"> so after the page has been</font>

394
00:20:28,450 --> 00:20:34,870
loaded<font color="#CCCCCC"> and maybe they will just wait out</font>

395
00:20:32,320 --> 00:20:37,450
a minute or two before they modify the

396
00:20:34,870 --> 00:20:40,030
page<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> must be something</font><font color="#CCCCCC"> that comes</font>

397
00:20:37,450 --> 00:20:44,410
<font color="#E5E5E5">later that's and monitors the</font><font color="#CCCCCC"> page</font>

398
00:20:40,030 --> 00:20:47,370
continuously<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so it must</font><font color="#CCCCCC"> be in real</font>

399
00:20:44,410 --> 00:20:51,100
time<font color="#E5E5E5"> because once the injection is made</font>

400
00:20:47,370 --> 00:20:54,459
<font color="#E5E5E5">maybe you you only have a short amount</font>

401
00:20:51,100 --> 00:20:56,889
<font color="#CCCCCC">of time to do something</font><font color="#E5E5E5"> that will that</font>

402
00:20:54,460 --> 00:20:59,320
<font color="#CCCCCC">will mitigate</font><font color="#E5E5E5"> or attenuate</font><font color="#CCCCCC"> the problem</font>

403
00:20:56,890 --> 00:21:01,090
if you just<font color="#CCCCCC"> do something like two</font><font color="#E5E5E5"> months</font>

404
00:20:59,320 --> 00:21:04,169
is after<font color="#E5E5E5"> maybe that's too late so you</font>

405
00:21:01,090 --> 00:21:07,780
need to we aim to<font color="#E5E5E5"> do this in real</font><font color="#CCCCCC"> time</font>

406
00:21:04,170 --> 00:21:09,850
<font color="#E5E5E5">it must be transparent and this is not</font>

407
00:21:07,780 --> 00:21:12,490
strict<font color="#E5E5E5"> requirements it's just a</font>

408
00:21:09,850 --> 00:21:14,560
convenience<font color="#E5E5E5"> for the solution because</font><font color="#CCCCCC"> we</font>

409
00:21:12,490 --> 00:21:17,770
didn't want users<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to install</font>

410
00:21:14,560 --> 00:21:20,399
something<font color="#E5E5E5"> in their own devices we don't</font>

411
00:21:17,770 --> 00:21:23,650
want extensions we don't want any

412
00:21:20,400 --> 00:21:27,310
<font color="#E5E5E5">end-user agents that you need to install</font>

413
00:21:23,650 --> 00:21:31,090
<font color="#E5E5E5">it must be transparent</font><font color="#CCCCCC"> and it must</font><font color="#E5E5E5"> be</font>

414
00:21:27,310 --> 00:21:34,990
scalable<font color="#E5E5E5"> and because potentially</font><font color="#CCCCCC"> we are</font>

415
00:21:31,090 --> 00:21:37,149
monitoring<font color="#E5E5E5"> multiple websites and each</font>

416
00:21:34,990 --> 00:21:39,640
website<font color="#E5E5E5"> can have like millions of</font>

417
00:21:37,150 --> 00:21:42,340
requests<font color="#CCCCCC"> per second we don't really know</font>

418
00:21:39,640 --> 00:21:44,620
<font color="#CCCCCC">so it must be scalable</font><font color="#E5E5E5"> otherwise it</font>

419
00:21:42,340 --> 00:21:48,399
won't work<font color="#CCCCCC"> and it must be</font><font color="#E5E5E5"> precise in the</font>

420
00:21:44,620 --> 00:21:51,969
sense that we<font color="#CCCCCC"> all know</font><font color="#E5E5E5"> that if you look</font>

421
00:21:48,400 --> 00:21:54,940
at a<font color="#CCCCCC"> web page is very lively so it</font><font color="#E5E5E5"> keeps</font>

422
00:21:51,970 --> 00:21:57,820
changing<font color="#CCCCCC"> the Dom keeps changing the user</font>

423
00:21:54,940 --> 00:22:01,030
clicks things and things appear so it's

424
00:21:57,820 --> 00:22:03,450
<font color="#E5E5E5">actually constantly mutating so the</font>

425
00:22:01,030 --> 00:22:07,519
<font color="#CCCCCC">ability of reporting what's</font>

426
00:22:03,450 --> 00:22:10,799
and it's I<font color="#E5E5E5"> would</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> it's critical</font><font color="#CCCCCC"> for</font>

427
00:22:07,519 --> 00:22:13,889
<font color="#E5E5E5">this approach</font><font color="#CCCCCC"> to work</font><font color="#E5E5E5"> otherwise it will</font>

428
00:22:10,799 --> 00:22:18,059
<font color="#E5E5E5">be just a bunch of random noise that no</font>

429
00:22:13,889 --> 00:22:21,870
one will will bother<font color="#E5E5E5"> to look at so the</font>

430
00:22:18,059 --> 00:22:24,779
approach basically<font color="#E5E5E5"> monitors the Dom</font>

431
00:22:21,870 --> 00:22:29,100
continuously for any injection or

432
00:22:24,779 --> 00:22:30,899
modification and also checks for event

433
00:22:29,100 --> 00:22:33,330
handlers being modified<font color="#E5E5E5"> so if you have a</font>

434
00:22:30,899 --> 00:22:36,000
let's say a<font color="#CCCCCC"> forum and you have a</font>

435
00:22:33,330 --> 00:22:39,210
function that<font color="#E5E5E5"> gets executed</font><font color="#CCCCCC"> when when</font>

436
00:22:36,000 --> 00:22:42,240
<font color="#E5E5E5">you submit a form so we call this event</font>

437
00:22:39,210 --> 00:22:44,570
handlers and they are frequently<font color="#E5E5E5"> a</font>

438
00:22:42,240 --> 00:22:47,580
target for malicious modification

439
00:22:44,570 --> 00:22:49,678
<font color="#E5E5E5">because it's a way to do a sort of</font><font color="#CCCCCC"> men</font>

440
00:22:47,580 --> 00:22:51,570
in<font color="#E5E5E5"> the middle kind of attack because</font>

441
00:22:49,679 --> 00:22:53,880
they<font color="#E5E5E5"> just intercept the submission of</font>

442
00:22:51,570 --> 00:22:56,010
<font color="#E5E5E5">the form they execute their own codes</font>

443
00:22:53,880 --> 00:22:57,960
and then they collect<font color="#E5E5E5"> what they need to</font>

444
00:22:56,010 --> 00:23:04,320
collect<font color="#E5E5E5"> and then then</font><font color="#CCCCCC"> just let</font><font color="#E5E5E5"> it go</font>

445
00:22:57,960 --> 00:23:06,809
through to the real destination URL also

446
00:23:04,320 --> 00:23:10,860
<font color="#E5E5E5">checks for modifications to</font><font color="#CCCCCC"> the it to</font>

447
00:23:06,809 --> 00:23:13,529
<font color="#CCCCCC">JavaScript native API functions so it's</font>

448
00:23:10,860 --> 00:23:15,269
it's it's common for<font color="#E5E5E5"> for attackers to do</font>

449
00:23:13,529 --> 00:23:16,710
this because it's<font color="#CCCCCC"> very easy and</font>

450
00:23:15,269 --> 00:23:22,039
convenient for<font color="#E5E5E5"> them to modify the</font>

451
00:23:16,710 --> 00:23:22,039
behavior let's say that your form<font color="#E5E5E5"> uses</font>

452
00:23:22,159 --> 00:23:28,350
<font color="#E5E5E5">some sort of native function they just</font>

453
00:23:26,519 --> 00:23:31,049
they don't<font color="#E5E5E5"> bother to analyze the code</font>

454
00:23:28,350 --> 00:23:33,510
it's<font color="#CCCCCC"> just</font><font color="#E5E5E5"> poison that function and and</font>

455
00:23:31,049 --> 00:23:36,629
put themselves<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the middle and to be</font>

456
00:23:33,510 --> 00:23:39,029
able<font color="#E5E5E5"> to collect information so and it's</font>

457
00:23:36,630 --> 00:23:44,929
it's a bit more stealthy for them to do

458
00:23:39,029 --> 00:23:48,539
that<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not so we also check for</font><font color="#CCCCCC"> that</font>

459
00:23:44,929 --> 00:23:50,850
<font color="#CCCCCC">once we</font><font color="#E5E5E5"> we pick up something we send out</font>

460
00:23:48,539 --> 00:23:53,669
notifications<font color="#E5E5E5"> and those notifications</font>

461
00:23:50,850 --> 00:23:56,100
<font color="#E5E5E5">are used to trigger automated reactions</font>

462
00:23:53,669 --> 00:23:59,370
<font color="#CCCCCC">I will show you more in more detail in a</font>

463
00:23:56,100 --> 00:24:01,740
<font color="#CCCCCC">bit so</font><font color="#E5E5E5"> this is the general</font><font color="#CCCCCC"> architecture</font>

464
00:23:59,370 --> 00:24:04,549
of the solution<font color="#E5E5E5"> so we have server and</font>

465
00:24:01,740 --> 00:24:07,970
the clients and we have

466
00:24:04,549 --> 00:24:10,668
a client-side JavaScript<font color="#CCCCCC"> agent</font><font color="#E5E5E5"> so this</font>

467
00:24:07,970 --> 00:24:13,640
is one side<font color="#CCCCCC"> of the solution</font><font color="#E5E5E5"> so you need</font>

468
00:24:10,669 --> 00:24:15,549
to somehow<font color="#E5E5E5"> deliver this</font><font color="#CCCCCC"> javascript agent</font>

469
00:24:13,640 --> 00:24:18,590
to your website and this website

470
00:24:15,549 --> 00:24:20,740
continuously monitors<font color="#CCCCCC"> the DOM</font><font color="#E5E5E5"> and all</font>

471
00:24:18,590 --> 00:24:26,299
the other stuff I mentioned<font color="#CCCCCC"> for</font>

472
00:24:20,740 --> 00:24:28,640
injections it relies<font color="#E5E5E5"> on the mutation of</font>

473
00:24:26,299 --> 00:24:30,530
servers which is an<font color="#E5E5E5"> API that you have in</font>

474
00:24:28,640 --> 00:24:33,559
the browser<font color="#CCCCCC"> for just listening to</font>

475
00:24:30,530 --> 00:24:36,168
changes to<font color="#CCCCCC"> the Dom so this is one of the</font>

476
00:24:33,559 --> 00:24:38,240
things that he uses<font color="#E5E5E5"> but it also uses</font>

477
00:24:36,169 --> 00:24:41,210
<font color="#E5E5E5">other mechanisms with different levels</font>

478
00:24:38,240 --> 00:24:43,970
of<font color="#E5E5E5"> sensitivity</font><font color="#CCCCCC"> we use check sums for</font>

479
00:24:41,210 --> 00:24:46,280
certain parts<font color="#CCCCCC"> of the of the page and we</font>

480
00:24:43,970 --> 00:24:48,169
also use poisoning detection using

481
00:24:46,280 --> 00:24:51,250
<font color="#E5E5E5">JavaScript capabilities</font>

482
00:24:48,169 --> 00:24:53,570
so once tampering is detected

483
00:24:51,250 --> 00:24:55,610
notification is sent back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the other</font>

484
00:24:53,570 --> 00:24:59,439
part of the<font color="#E5E5E5"> system which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the real</font>

485
00:24:55,610 --> 00:25:03,168
time monitoring back back in and this

486
00:24:59,440 --> 00:25:06,020
<font color="#E5E5E5">this back end just processes the</font>

487
00:25:03,169 --> 00:25:10,880
<font color="#CCCCCC">information confirms that it's indeed in</font>

488
00:25:06,020 --> 00:25:14,240
fact<font color="#E5E5E5"> malicious modification and and the</font>

489
00:25:10,880 --> 00:25:17,840
application<font color="#E5E5E5"> optionally can implement</font>

490
00:25:14,240 --> 00:25:20,929
this<font color="#E5E5E5"> web hook that will and it will</font>

491
00:25:17,840 --> 00:25:23,990
receive in<font color="#E5E5E5"> this web hook the final</font>

492
00:25:20,929 --> 00:25:27,080
information<font color="#E5E5E5"> like the regarding that</font>

493
00:25:23,990 --> 00:25:30,590
incident so using this information<font color="#E5E5E5"> they</font>

494
00:25:27,080 --> 00:25:32,750
<font color="#E5E5E5">can just implement whatever reaction</font>

495
00:25:30,590 --> 00:25:34,699
<font color="#E5E5E5">makes sense to them so this is something</font>

496
00:25:32,750 --> 00:25:38,720
that<font color="#E5E5E5"> it's the application that does</font>

497
00:25:34,700 --> 00:25:41,480
because the solution itself semantically

498
00:25:38,720 --> 00:25:43,039
<font color="#E5E5E5">it doesn't need to know the specifics of</font>

499
00:25:41,480 --> 00:25:45,860
the application it doesn't<font color="#E5E5E5"> need to know</font>

500
00:25:43,039 --> 00:25:49,490
<font color="#CCCCCC">the</font><font color="#E5E5E5"> policies</font><font color="#CCCCCC"> that the organization uses</font>

501
00:25:45,860 --> 00:25:52,100
<font color="#E5E5E5">so it's really about sending real-time</font>

502
00:25:49,490 --> 00:25:53,780
information of what's happening to to

503
00:25:52,100 --> 00:25:56,600
the<font color="#E5E5E5"> backend</font><font color="#CCCCCC"> and let the backend just</font>

504
00:25:53,780 --> 00:26:00,399
implement policies on how to react<font color="#E5E5E5"> all</font>

505
00:25:56,600 --> 00:26:04,280
right so it's it's<font color="#CCCCCC"> quite simple actually</font>

506
00:26:00,400 --> 00:26:05,720
<font color="#E5E5E5">so it follows</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> whitelisting approach so</font>

507
00:26:04,280 --> 00:26:08,658
it basically it's<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> detect</font>

508
00:26:05,720 --> 00:26:10,730
anything that's different

509
00:26:08,659 --> 00:26:13,460
contrary to using a<font color="#E5E5E5"> blacklisting</font>

510
00:26:10,730 --> 00:26:16,450
approach which basically would need to

511
00:26:13,460 --> 00:26:19,510
anticipate what we are looking<font color="#E5E5E5"> for</font>

512
00:26:16,450 --> 00:26:22,180
and like I<font color="#CCCCCC"> said it uses</font><font color="#E5E5E5"> different levels</font>

513
00:26:19,510 --> 00:26:24,910
of<font color="#CCCCCC"> sensitivity and this is important for</font>

514
00:26:22,180 --> 00:26:26,830
<font color="#E5E5E5">the scalability requirement because</font>

515
00:26:24,910 --> 00:26:29,140
otherwise we<font color="#CCCCCC"> would be</font><font color="#E5E5E5"> flooded</font><font color="#CCCCCC"> with</font>

516
00:26:26,830 --> 00:26:31,720
different sorts of modifications<font color="#CCCCCC"> of the</font>

517
00:26:29,140 --> 00:26:34,240
page<font color="#E5E5E5"> and it would be impossible to deal</font>

518
00:26:31,720 --> 00:26:36,730
<font color="#CCCCCC">with that but</font><font color="#E5E5E5"> this isn't enough</font><font color="#CCCCCC"> we also</font>

519
00:26:34,240 --> 00:26:39,910
use<font color="#E5E5E5"> some machine learning</font><font color="#CCCCCC"> techniques</font><font color="#E5E5E5"> to</font>

520
00:26:36,730 --> 00:26:42,820
filter out<font color="#CCCCCC"> what seems to be</font><font color="#E5E5E5"> not</font>

521
00:26:39,910 --> 00:26:45,960
malicious<font color="#E5E5E5"> modifications of the page and</font>

522
00:26:42,820 --> 00:26:48,970
to distinguish those from normal

523
00:26:45,960 --> 00:26:52,120
<font color="#E5E5E5">modifications we need to have a certain</font>

524
00:26:48,970 --> 00:26:56,440
<font color="#E5E5E5">training periods in the website</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> to</font>

525
00:26:52,120 --> 00:27:00,030
<font color="#E5E5E5">learn</font><font color="#CCCCCC"> how what it does</font><font color="#E5E5E5"> normally it also</font>

526
00:26:56,440 --> 00:27:02,980
supports signatures<font color="#E5E5E5"> so you can specify</font>

527
00:27:00,030 --> 00:27:07,570
what<font color="#E5E5E5"> you're looking for and</font><font color="#CCCCCC"> that that's</font>

528
00:27:02,980 --> 00:27:10,750
used<font color="#E5E5E5"> for certain countermeasures so when</font>

529
00:27:07,570 --> 00:27:13,090
when when we conclude that<font color="#E5E5E5"> on the client</font>

530
00:27:10,750 --> 00:27:15,850
<font color="#E5E5E5">side not on the back end</font><font color="#CCCCCC"> so we found the</font>

531
00:27:13,090 --> 00:27:19,060
client side we conclude that we are

532
00:27:15,850 --> 00:27:23,080
definitely<font color="#CCCCCC"> looking at a certain known</font>

533
00:27:19,060 --> 00:27:26,020
injection<font color="#E5E5E5"> or even uncertain you can</font>

534
00:27:23,080 --> 00:27:28,780
execute these countermeasures<font color="#CCCCCC"> the first</font>

535
00:27:26,020 --> 00:27:32,050
one you we only<font color="#E5E5E5"> do it</font><font color="#CCCCCC"> if we are</font><font color="#E5E5E5"> sure</font>

536
00:27:28,780 --> 00:27:34,420
<font color="#CCCCCC">that it's really</font><font color="#E5E5E5"> not a false positive so</font>

537
00:27:32,050 --> 00:27:36,580
you requires the signature<font color="#CCCCCC"> so we need to</font>

538
00:27:34,420 --> 00:27:39,340
classify<font color="#CCCCCC"> let's say we are looking</font><font color="#E5E5E5"> for a</font>

539
00:27:36,580 --> 00:27:42,129
<font color="#E5E5E5">certain</font><font color="#CCCCCC"> man</font><font color="#E5E5E5"> in the browser injection so</font>

540
00:27:39,340 --> 00:27:43,899
we ship that with<font color="#E5E5E5"> we with the agent and</font>

541
00:27:42,130 --> 00:27:47,110
<font color="#E5E5E5">the agent if it does detect that</font>

542
00:27:43,900 --> 00:27:49,750
signature<font color="#CCCCCC"> it can remove the injection on</font>

543
00:27:47,110 --> 00:27:52,090
the spot and all the other ones are

544
00:27:49,750 --> 00:27:53,560
generic so you can tell the agent<font color="#E5E5E5"> just</font>

545
00:27:52,090 --> 00:27:56,080
<font color="#CCCCCC">to if you find something you can</font>

546
00:27:53,560 --> 00:27:58,540
<font color="#E5E5E5">redirect to a certain</font><font color="#CCCCCC"> URL you can delete</font>

547
00:27:56,080 --> 00:28:00,790
cookies<font color="#E5E5E5"> which effectively will kick the</font>

548
00:27:58,540 --> 00:28:05,250
user<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of the session or</font><font color="#E5E5E5"> you can</font>

549
00:28:00,790 --> 00:28:09,850
execute<font color="#E5E5E5"> some callback on the client</font><font color="#CCCCCC"> side</font>

550
00:28:05,250 --> 00:28:12,340
<font color="#CCCCCC">so about the real-time</font><font color="#E5E5E5"> alerts</font><font color="#CCCCCC"> just just</font>

551
00:28:09,850 --> 00:28:15,010
to mention a<font color="#CCCCCC"> few examples that</font><font color="#E5E5E5"> you could</font>

552
00:28:12,340 --> 00:28:16,899
<font color="#E5E5E5">implement with this let's say we are</font>

553
00:28:15,010 --> 00:28:19,390
<font color="#E5E5E5">talking about</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> online banking website</font>

554
00:28:16,900 --> 00:28:22,090
<font color="#E5E5E5">you could block the user accounts like</font>

555
00:28:19,390 --> 00:28:24,370
<font color="#CCCCCC">immediately let's say you you know you</font>

556
00:28:22,090 --> 00:28:27,820
detected the tampering<font color="#E5E5E5"> to a login form</font>

557
00:28:24,370 --> 00:28:29,668
<font color="#E5E5E5">so you you you</font><font color="#CCCCCC"> better assume that those</font>

558
00:28:27,820 --> 00:28:32,458
credentials<font color="#E5E5E5"> were captured</font>

559
00:28:29,669 --> 00:28:34,529
so one possible reaction on your<font color="#E5E5E5"> side</font>

560
00:28:32,459 --> 00:28:37,979
would be to<font color="#CCCCCC"> just block</font><font color="#E5E5E5"> that user account</font>

561
00:28:34,529 --> 00:28:40,679
<font color="#CCCCCC">or</font><font color="#E5E5E5"> to contact the fraud</font><font color="#CCCCCC"> department</font><font color="#E5E5E5"> and</font>

562
00:28:37,979 --> 00:28:43,200
one off<font color="#E5E5E5"> that they need to investigate</font>

563
00:28:40,679 --> 00:28:45,509
<font color="#CCCCCC">and maybe contact</font><font color="#E5E5E5"> the end user to tell</font>

564
00:28:43,200 --> 00:28:47,820
him that his device might be<font color="#E5E5E5"> infected</font>

565
00:28:45,509 --> 00:28:51,570
and for that<font color="#E5E5E5"> reason</font><font color="#CCCCCC"> we are</font><font color="#E5E5E5"> blocking</font><font color="#CCCCCC"> your</font>

566
00:28:47,820 --> 00:28:54,289
account<font color="#E5E5E5"> or you could raise the</font><font color="#CCCCCC"> risk of</font>

567
00:28:51,570 --> 00:28:56,939
the session and maybe even roll out

568
00:28:54,289 --> 00:28:59,039
different security measures dynamically

569
00:28:56,940 --> 00:29:00,539
<font color="#E5E5E5">let's say that you have a CAPTCHA that</font>

570
00:28:59,039 --> 00:29:03,809
you want to serve there let's say that

571
00:29:00,539 --> 00:29:06,149
you want<font color="#E5E5E5"> to do some</font><font color="#CCCCCC"> behavioural analysis</font>

572
00:29:03,809 --> 00:29:08,959
on the<font color="#E5E5E5"> client side but you don't want to</font>

573
00:29:06,149 --> 00:29:12,718
do that all the<font color="#E5E5E5"> time for every session</font>

574
00:29:08,959 --> 00:29:17,489
<font color="#E5E5E5">you can have a</font><font color="#CCCCCC"> dynamic situation where</font>

575
00:29:12,719 --> 00:29:20,579
the the<font color="#E5E5E5"> finding an injection would</font>

576
00:29:17,489 --> 00:29:26,009
<font color="#E5E5E5">trigger just serving more challenges to</font>

577
00:29:20,579 --> 00:29:29,428
<font color="#CCCCCC">the client side but this has a caveats</font>

578
00:29:26,009 --> 00:29:31,139
<font color="#E5E5E5">in</font><font color="#CCCCCC"> order to do what we do and</font><font color="#E5E5E5"> remember</font>

579
00:29:29,429 --> 00:29:33,809
that we are using JavaScript on the

580
00:29:31,139 --> 00:29:36,779
client side which is by itself<font color="#CCCCCC"> also</font>

581
00:29:33,809 --> 00:29:42,149
exposed<font color="#E5E5E5"> we need to somehow have some</font>

582
00:29:36,779 --> 00:29:44,489
some<font color="#E5E5E5"> sort of assurances or at least make</font>

583
00:29:42,149 --> 00:29:48,029
it harder<font color="#CCCCCC"> for someone to interfere</font><font color="#E5E5E5"> with</font>

584
00:29:44,489 --> 00:29:51,539
our own<font color="#E5E5E5"> JavaScript so in</font><font color="#CCCCCC"> order to do</font>

585
00:29:48,029 --> 00:29:55,259
that we are using polymorphic<font color="#CCCCCC"> Java</font>

586
00:29:51,539 --> 00:29:57,329
<font color="#CCCCCC">Script office</font><font color="#E5E5E5"> keishon which is also</font>

587
00:29:55,259 --> 00:29:59,070
tamper resistant so it's it's<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to</font>

588
00:29:57,329 --> 00:30:02,009
<font color="#E5E5E5">detect any modification</font><font color="#CCCCCC"> to the code</font>

589
00:29:59,070 --> 00:30:04,168
itself<font color="#E5E5E5"> and it detects when people are</font>

590
00:30:02,009 --> 00:30:08,459
trying<font color="#CCCCCC"> to debug that code specifically</font>

591
00:30:04,169 --> 00:30:11,459
<font color="#E5E5E5">and and we recommend that this codes</font><font color="#CCCCCC"> the</font>

592
00:30:08,459 --> 00:30:14,249
agent will be<font color="#E5E5E5"> mixed together with with</font>

593
00:30:11,459 --> 00:30:18,570
the code<font color="#E5E5E5"> of the application</font><font color="#CCCCCC"> so that the</font>

594
00:30:14,249 --> 00:30:20,669
<font color="#E5E5E5">attacker wants easily know which part of</font>

595
00:30:18,570 --> 00:30:23,700
the JavaScript code is the agent which

596
00:30:20,669 --> 00:30:26,009
part is the<font color="#E5E5E5"> normal code of the page so</font>

597
00:30:23,700 --> 00:30:28,229
this is about<font color="#E5E5E5"> raising the bar so if you</font>

598
00:30:26,009 --> 00:30:30,959
you won't<font color="#E5E5E5"> have like 100% assurances that</font>

599
00:30:28,229 --> 00:30:33,419
<font color="#E5E5E5">this won't be defeated but since</font><font color="#CCCCCC"> its</font>

600
00:30:30,959 --> 00:30:36,440
polymorphic you can basically<font color="#E5E5E5"> have a</font>

601
00:30:33,419 --> 00:30:39,320
completely<font color="#E5E5E5"> different code from</font>

602
00:30:36,440 --> 00:30:42,830
from<font color="#CCCCCC"> requests to</font><font color="#E5E5E5"> requests and it becomes</font>

603
00:30:39,320 --> 00:30:44,720
<font color="#E5E5E5">very complex it raises the attack costs</font>

604
00:30:42,830 --> 00:30:46,580
and<font color="#E5E5E5"> and</font><font color="#CCCCCC"> usually when you do that to</font>

605
00:30:44,720 --> 00:30:49,070
attackers they just move to the<font color="#CCCCCC"> next</font>

606
00:30:46,580 --> 00:30:50,960
target<font color="#E5E5E5"> because they are they're usually</font>

607
00:30:49,070 --> 00:30:56,540
lazy and they go for the low-hanging

608
00:30:50,960 --> 00:31:02,600
fruits<font color="#CCCCCC"> of things</font><font color="#E5E5E5"> okay so let's go to the</font>

609
00:30:56,540 --> 00:31:07,550
live demo<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so for this demo I</font>

610
00:31:02,600 --> 00:31:25,250
will<font color="#E5E5E5"> be using dummy website online bank</font>

611
00:31:07,550 --> 00:31:29,240
banking website<font color="#CCCCCC"> alright so let</font><font color="#E5E5E5"> me load</font>

612
00:31:25,250 --> 00:31:31,510
the<font color="#E5E5E5"> websites</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> let me prepare all the</font>

613
00:31:29,240 --> 00:31:31,510
<font color="#E5E5E5">things</font>

614
00:31:41,499 --> 00:31:51,019
<font color="#E5E5E5">okay and this is the website so one</font>

615
00:31:47,659 --> 00:31:55,519
thing<font color="#CCCCCC"> is going wrong</font><font color="#E5E5E5"> already with this</font>

616
00:31:51,019 --> 00:31:59,959
<font color="#E5E5E5">and to prove you</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> let me let me open</font>

617
00:31:55,519 --> 00:32:09,249
the same<font color="#CCCCCC"> website</font><font color="#E5E5E5"> but on blank browser</font>

618
00:31:59,959 --> 00:32:11,809
profile so can<font color="#E5E5E5"> you compare the</font><font color="#CCCCCC"> truth</font>

619
00:32:09,249 --> 00:32:16,909
what's the<font color="#E5E5E5"> main difference</font><font color="#CCCCCC"> can you tell</font>

620
00:32:11,809 --> 00:32:19,908
me pretty<font color="#E5E5E5"> obvious it's the banner right</font>

621
00:32:16,909 --> 00:32:23,689
so this one on the right<font color="#CCCCCC"> side doesn't</font>

622
00:32:19,909 --> 00:32:26,269
<font color="#CCCCCC">have a banner and let me close this and</font>

623
00:32:23,689 --> 00:32:29,599
this one has so what we are seeing here

624
00:32:26,269 --> 00:32:33,559
<font color="#CCCCCC">is just regular banner it's being loaded</font>

625
00:32:29,599 --> 00:32:35,509
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the actual website</font><font color="#CCCCCC"> so remember it</font>

626
00:32:33,559 --> 00:32:37,489
<font color="#CCCCCC">isn't a phishing website some sort of</font>

627
00:32:35,509 --> 00:32:39,799
clone it's the real<font color="#E5E5E5"> website and the</font>

628
00:32:37,489 --> 00:32:42,529
modification is being done on top of

629
00:32:39,799 --> 00:32:44,179
that so we are<font color="#E5E5E5"> seeing a banner and it's</font>

630
00:32:42,529 --> 00:32:48,649
basically<font color="#E5E5E5"> inviting the user to download</font>

631
00:32:44,179 --> 00:32:52,099
a mobile<font color="#E5E5E5"> app which fake it isn't real</font>

632
00:32:48,649 --> 00:32:55,059
mobile application and if we click one

633
00:32:52,099 --> 00:32:59,168
of the buttons<font color="#E5E5E5"> you are taken to</font><font color="#CCCCCC"> a</font>

634
00:32:55,059 --> 00:33:03,079
copycat of the<font color="#E5E5E5"> Google's</font><font color="#CCCCCC"> app store</font><font color="#E5E5E5"> and</font>

635
00:32:59,169 --> 00:33:06,469
which is<font color="#E5E5E5"> really similar but</font><font color="#CCCCCC"> the only</font>

636
00:33:03,079 --> 00:33:09,469
<font color="#CCCCCC">difference is instead of install button</font>

637
00:33:06,469 --> 00:33:12,109
<font color="#E5E5E5">you have a download button</font><font color="#CCCCCC"> so once you</font>

638
00:33:09,469 --> 00:33:14,869
click<font color="#CCCCCC"> that it's downloading an</font><font color="#E5E5E5"> apk which</font>

639
00:33:12,109 --> 00:33:18,379
<font color="#CCCCCC">is</font><font color="#E5E5E5"> obviously a malicious application</font><font color="#CCCCCC"> and</font>

640
00:33:14,869 --> 00:33:20,779
remember that<font color="#E5E5E5"> many people they they</font>

641
00:33:18,379 --> 00:33:24,109
might run this on their<font color="#CCCCCC"> phones so once</font>

642
00:33:20,779 --> 00:33:27,739
they<font color="#E5E5E5"> download the</font><font color="#CCCCCC"> APK and if they</font><font color="#E5E5E5"> have</font>

643
00:33:24,109 --> 00:33:30,769
their settings allowing installation of

644
00:33:27,739 --> 00:33:34,909
apks they will end up<font color="#CCCCCC"> just</font><font color="#E5E5E5"> infecting</font>

645
00:33:30,769 --> 00:33:36,529
themselves<font color="#E5E5E5"> and and this</font><font color="#CCCCCC"> is a good thing</font>

646
00:33:34,909 --> 00:33:39,709
for the attacker because<font color="#E5E5E5"> probably you</font>

647
00:33:36,529 --> 00:33:42,679
<font color="#CCCCCC">will be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> capture</font><font color="#E5E5E5"> or not</font><font color="#CCCCCC"> only the</font>

648
00:33:39,709 --> 00:33:48,109
<font color="#E5E5E5">desktop browser but also their mobile</font>

649
00:33:42,679 --> 00:33:52,069
browser as well<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so now that you saw</font>

650
00:33:48,109 --> 00:33:54,679
this let me enter<font color="#E5E5E5"> this is the dashboard</font>

651
00:33:52,069 --> 00:33:57,050
<font color="#E5E5E5">of the application real time on it</font>

652
00:33:54,680 --> 00:33:59,840
so<font color="#E5E5E5"> usually the user</font><font color="#CCCCCC"> isn't seeing</font><font color="#E5E5E5"> this</font>

653
00:33:57,050 --> 00:34:02,260
but I<font color="#CCCCCC"> have to use the same computer so</font>

654
00:33:59,840 --> 00:34:05,090
I'm just<font color="#E5E5E5"> putting this side-by-side</font>

655
00:34:02,260 --> 00:34:07,629
<font color="#CCCCCC">obviously as</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see there's no</font>

656
00:34:05,090 --> 00:34:11,360
threats detected so<font color="#CCCCCC"> far because</font><font color="#E5E5E5"> it isn't</font>

657
00:34:07,630 --> 00:34:17,840
<font color="#E5E5E5">enabled yet so this is what I'm going to</font>

658
00:34:11,360 --> 00:34:20,870
do next<font color="#E5E5E5"> so I'm just editing the</font>

659
00:34:17,840 --> 00:34:22,610
templates of the<font color="#E5E5E5"> website don't worry if</font>

660
00:34:20,870 --> 00:34:27,440
you are not<font color="#E5E5E5"> seeing this correctly</font>

661
00:34:22,610 --> 00:34:32,330
I'm just uncommenting this script tag<font color="#E5E5E5"> on</font>

662
00:34:27,440 --> 00:34:34,280
the website and I'm only doing<font color="#CCCCCC"> this like</font>

663
00:34:32,330 --> 00:34:38,029
this<font color="#E5E5E5"> because this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> demo so usually I</font>

664
00:34:34,280 --> 00:34:40,580
wouldn't deploy the<font color="#CCCCCC"> agents in such a way</font>

665
00:34:38,030 --> 00:34:44,150
which is so easy to<font color="#CCCCCC"> see that we can cut</font>

666
00:34:40,580 --> 00:34:47,870
this line and so this is a just<font color="#E5E5E5"> proof of</font>

667
00:34:44,150 --> 00:34:50,780
concept<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so everything is</font><font color="#CCCCCC"> okay</font>

668
00:34:47,870 --> 00:34:53,839
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so let's let</font><font color="#CCCCCC"> me restart</font>

669
00:34:50,780 --> 00:34:56,000
the application<font color="#E5E5E5"> so this is the</font>

670
00:34:53,840 --> 00:34:59,380
application<font color="#CCCCCC"> of the virtual</font><font color="#E5E5E5"> bank</font><font color="#CCCCCC"> okay so</font>

671
00:34:56,000 --> 00:35:02,900
I'm running<font color="#E5E5E5"> this from my own PC as</font><font color="#CCCCCC"> well</font>

672
00:34:59,380 --> 00:35:07,220
alright<font color="#CCCCCC"> so now I'm reloading the virtual</font>

673
00:35:02,900 --> 00:35:08,870
<font color="#E5E5E5">bank application and just a few seconds</font>

674
00:35:07,220 --> 00:35:12,020
later just pay attention<font color="#CCCCCC"> to the banner</font>

675
00:35:08,870 --> 00:35:17,410
and afterwards<font color="#E5E5E5"> like a second later to</font>

676
00:35:12,020 --> 00:35:17,410
the<font color="#E5E5E5"> the dashboard on the back right</font>

677
00:35:18,880 --> 00:35:24,890
<font color="#E5E5E5">alright</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> you just</font><font color="#E5E5E5"> saw was</font>

678
00:35:21,920 --> 00:35:27,020
<font color="#CCCCCC">real-time</font><font color="#E5E5E5"> monitoring of the page</font><font color="#CCCCCC"> we had</font>

679
00:35:24,890 --> 00:35:29,629
a signature for that particular

680
00:35:27,020 --> 00:35:31,490
injection<font color="#E5E5E5"> so we were able</font><font color="#CCCCCC"> to do the</font>

681
00:35:29,630 --> 00:35:35,120
<font color="#E5E5E5">countermeasure of self-healing the page</font>

682
00:35:31,490 --> 00:35:37,970
so we just removed<font color="#E5E5E5"> the banner</font><font color="#CCCCCC"> and the</font>

683
00:35:35,120 --> 00:35:40,880
information is<font color="#E5E5E5"> correctly processed</font><font color="#CCCCCC"> and</font>

684
00:35:37,970 --> 00:35:43,790
passed on to the<font color="#E5E5E5"> back end of the</font>

685
00:35:40,880 --> 00:35:45,890
application<font color="#CCCCCC"> and once it's there it can</font>

686
00:35:43,790 --> 00:35:50,060
<font color="#E5E5E5">be sent</font><font color="#CCCCCC"> to the web</font><font color="#E5E5E5"> hook of the</font>

687
00:35:45,890 --> 00:35:52,779
<font color="#E5E5E5">application code</font><font color="#CCCCCC"> so let</font><font color="#E5E5E5"> me try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> show</font>

688
00:35:50,060 --> 00:35:56,090
this to<font color="#CCCCCC"> you okay</font>

689
00:35:52,780 --> 00:35:58,460
so what we have here<font color="#CCCCCC"> is a black</font><font color="#E5E5E5"> lace</font>

690
00:35:56,090 --> 00:36:01,340
that fake mobile app<font color="#E5E5E5"> Anna</font><font color="#CCCCCC"> that has been</font>

691
00:35:58,460 --> 00:36:04,580
<font color="#E5E5E5">removed successfully</font><font color="#CCCCCC"> and what is</font>

692
00:36:01,340 --> 00:36:08,180
<font color="#E5E5E5">interesting is that we</font><font color="#CCCCCC"> can show you like</font>

693
00:36:04,580 --> 00:36:12,558
the very little details of the injection

694
00:36:08,180 --> 00:36:16,009
so this is the the actual<font color="#E5E5E5"> codes that the</font>

695
00:36:12,559 --> 00:36:18,380
user was seeing which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> sometimes hard</font>

696
00:36:16,010 --> 00:36:21,230
to get from the application developer

697
00:36:18,380 --> 00:36:23,270
perspective<font color="#CCCCCC"> because</font><font color="#E5E5E5"> it has he had he</font>

698
00:36:21,230 --> 00:36:26,089
knows what code he has served to the

699
00:36:23,270 --> 00:36:27,980
user<font color="#E5E5E5"> but he doesn't really know what</font>

700
00:36:26,089 --> 00:36:30,529
code ended up<font color="#E5E5E5"> executing on the</font>

701
00:36:27,980 --> 00:36:33,770
<font color="#CCCCCC">client-side</font><font color="#E5E5E5"> and this provides you</font><font color="#CCCCCC"> to you</font>

702
00:36:30,530 --> 00:36:35,630
<font color="#E5E5E5">so you can see that and this diff</font>

703
00:36:33,770 --> 00:36:37,550
elements that you are seeing it's

704
00:36:35,630 --> 00:36:39,950
basically the<font color="#E5E5E5"> whole block of the banner</font>

705
00:36:37,550 --> 00:36:42,710
<font color="#CCCCCC">and you can see the whole</font><font color="#E5E5E5"> details you</font>

706
00:36:39,950 --> 00:36:45,640
can<font color="#E5E5E5"> see that it was using inline images</font>

707
00:36:42,710 --> 00:36:49,970
and you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that it was linking to</font>

708
00:36:45,640 --> 00:36:53,200
play<font color="#CCCCCC"> that's not Google but goggle</font><font color="#E5E5E5"> okay</font>

709
00:36:49,970 --> 00:36:57,740
it's it's silly<font color="#CCCCCC"> but it happens and</font>

710
00:36:53,200 --> 00:37:00,049
usually works<font color="#E5E5E5"> and and if it didn't work</font>

711
00:36:57,740 --> 00:37:02,569
the<font color="#CCCCCC"> attacker could go even</font><font color="#E5E5E5"> further and</font>

712
00:37:00,050 --> 00:37:04,670
<font color="#E5E5E5">and</font><font color="#CCCCCC"> just like do DNS</font><font color="#E5E5E5"> spoofing or</font>

713
00:37:02,569 --> 00:37:07,250
whatever<font color="#CCCCCC"> it needed to do in order to</font>

714
00:37:04,670 --> 00:37:10,550
<font color="#E5E5E5">trick the</font><font color="#CCCCCC"> user so it's really</font><font color="#E5E5E5"> hard to</font>

715
00:37:07,250 --> 00:37:14,619
tell if you are user and just<font color="#E5E5E5"> watching</font>

716
00:37:10,550 --> 00:37:19,299
the web application<font color="#CCCCCC"> but let me</font><font color="#E5E5E5"> continue</font>

717
00:37:14,619 --> 00:37:22,069
<font color="#E5E5E5">so right now I'm I'm about to log in and</font>

718
00:37:19,299 --> 00:37:24,440
I<font color="#E5E5E5"> haven't even bought in yet I'm already</font>

719
00:37:22,069 --> 00:37:27,529
<font color="#E5E5E5">seeing new threats coming in so what's</font>

720
00:37:24,440 --> 00:37:32,170
going on here so<font color="#E5E5E5"> let's see we have code</font>

721
00:37:27,530 --> 00:37:34,520
poisoning and let's see what this<font color="#E5E5E5"> means</font>

722
00:37:32,170 --> 00:37:37,280
and what<font color="#E5E5E5"> you are able</font><font color="#CCCCCC"> to do is the</font>

723
00:37:34,520 --> 00:37:41,150
<font color="#CCCCCC">onsubmit event</font><font color="#E5E5E5"> has been tampered and</font>

724
00:37:37,280 --> 00:37:43,640
it's basically<font color="#E5E5E5"> has</font><font color="#CCCCCC"> been replaced or the</font>

725
00:37:41,150 --> 00:37:47,420
whole function<font color="#E5E5E5"> that gets executed once</font>

726
00:37:43,640 --> 00:37:50,569
you<font color="#E5E5E5"> log in it was replaced by a function</font>

727
00:37:47,420 --> 00:37:53,450
of the attacker<font color="#E5E5E5"> so this is basically</font>

728
00:37:50,569 --> 00:37:56,540
collecting the the credentials<font color="#E5E5E5"> and</font>

729
00:37:53,450 --> 00:37:59,270
accelerating them to another place<font color="#E5E5E5"> but</font>

730
00:37:56,540 --> 00:38:04,279
remember this<font color="#E5E5E5"> is the demo if it was a</font>

731
00:37:59,270 --> 00:38:07,490
real case<font color="#CCCCCC"> then after we caught the</font>

732
00:38:04,280 --> 00:38:09,980
banner<font color="#E5E5E5"> the whole session could be</font>

733
00:38:07,490 --> 00:38:14,058
already modified<font color="#E5E5E5"> we could already be</font>

734
00:38:09,980 --> 00:38:16,790
reacting<font color="#E5E5E5"> just</font><font color="#CCCCCC"> before even like letting</font>

735
00:38:14,059 --> 00:38:19,640
the<font color="#CCCCCC"> user log in</font><font color="#E5E5E5"> we could like not serve</font>

736
00:38:16,790 --> 00:38:21,680
the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> login form</font><font color="#CCCCCC"> at all if we wanted</font>

737
00:38:19,640 --> 00:38:26,060
<font color="#CCCCCC">to but just like block the user</font>

738
00:38:21,680 --> 00:38:28,100
from<font color="#CCCCCC"> using the website</font><font color="#E5E5E5"> and if we can</font>

739
00:38:26,060 --> 00:38:30,110
start managing<font color="#E5E5E5"> the context of that</font>

740
00:38:28,100 --> 00:38:35,660
session<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the first time that we see</font>

741
00:38:30,110 --> 00:38:43,760
an injection let's proceed<font color="#E5E5E5"> nonetheless</font>

742
00:38:35,660 --> 00:38:46,609
<font color="#E5E5E5">just log in and</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> menu let's</font>

743
00:38:43,760 --> 00:38:47,420
initiate a new<font color="#CCCCCC"> transaction</font><font color="#E5E5E5"> let me do</font>

744
00:38:46,610 --> 00:38:51,470
<font color="#CCCCCC">okay</font>

745
00:38:47,420 --> 00:38:54,620
a new threat is coming<font color="#E5E5E5"> in another code</font>

746
00:38:51,470 --> 00:38:56,870
poisoning actually it's<font color="#E5E5E5"> the same kind of</font>

747
00:38:54,620 --> 00:39:00,140
an<font color="#E5E5E5"> injection but</font><font color="#CCCCCC"> this one is a</font><font color="#E5E5E5"> little</font>

748
00:38:56,870 --> 00:39:02,540
bit more juicy<font color="#E5E5E5"> so you can see what is</font>

749
00:39:00,140 --> 00:39:04,370
doing<font color="#CCCCCC"> is</font><font color="#E5E5E5"> very easy</font><font color="#CCCCCC"> to read it's</font>

750
00:39:02,540 --> 00:39:05,960
collecting the original name<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

751
00:39:04,370 --> 00:39:08,240
transaction<font color="#E5E5E5"> and this is the function</font>

752
00:39:05,960 --> 00:39:11,960
<font color="#CCCCCC">that only executes</font><font color="#E5E5E5"> when I click</font><font color="#CCCCCC"> Submit</font>

753
00:39:08,240 --> 00:39:14,270
so<font color="#E5E5E5"> I already filled up all all the forms</font>

754
00:39:11,960 --> 00:39:16,820
<font color="#CCCCCC">so I'm collecting</font><font color="#E5E5E5"> the original name the</font>

755
00:39:14,270 --> 00:39:20,509
original<font color="#E5E5E5"> I'm destination</font><font color="#CCCCCC"> account number</font>

756
00:39:16,820 --> 00:39:23,600
and this<font color="#E5E5E5"> is being kept in session</font>

757
00:39:20,510 --> 00:39:26,960
<font color="#CCCCCC">storage</font><font color="#E5E5E5"> and I will explain why in</font><font color="#CCCCCC"> the in</font>

758
00:39:23,600 --> 00:39:30,529
the minutes<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the whole</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> is the</font>

759
00:39:26,960 --> 00:39:33,050
attacker is basically injecting its own

760
00:39:30,530 --> 00:39:35,990
destination<font color="#CCCCCC"> account number in the form</font>

761
00:39:33,050 --> 00:39:38,750
<font color="#E5E5E5">so what the bank</font><font color="#CCCCCC"> eventually will see on</font>

762
00:39:35,990 --> 00:39:41,919
the<font color="#CCCCCC"> backend</font><font color="#E5E5E5"> will be the destination</font>

763
00:39:38,750 --> 00:39:45,650
<font color="#E5E5E5">account number of the attacker</font><font color="#CCCCCC"> okay</font>

764
00:39:41,920 --> 00:39:48,080
despite the user<font color="#E5E5E5"> seeing the the</font>

765
00:39:45,650 --> 00:39:50,660
destination<font color="#CCCCCC"> their regular</font><font color="#E5E5E5"> non temperate</font>

766
00:39:48,080 --> 00:39:54,220
<font color="#E5E5E5">destination account number</font><font color="#CCCCCC"> so I'm doing</font>

767
00:39:50,660 --> 00:39:59,359
a transaction<font color="#CCCCCC"> to my landlord</font><font color="#E5E5E5"> and</font>

768
00:39:54,220 --> 00:40:02,330
submitting<font color="#E5E5E5"> so I know that I just got</font>

769
00:39:59,360 --> 00:40:05,750
<font color="#CCCCCC">compromised and the transaction was</font>

770
00:40:02,330 --> 00:40:07,190
modified<font color="#E5E5E5"> and here I'm</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the confirmed</font>

771
00:40:05,750 --> 00:40:09,830
transaction

772
00:40:07,190 --> 00:40:11,240
<font color="#E5E5E5">Paige</font><font color="#CCCCCC"> and we are seeing if threats</font>

773
00:40:09,830 --> 00:40:14,060
<font color="#E5E5E5">coming in let's see what what's</font>

774
00:40:11,240 --> 00:40:17,740
happening<font color="#CCCCCC"> and basically what's happening</font>

775
00:40:14,060 --> 00:40:19,850
is<font color="#CCCCCC"> that the user</font><font color="#E5E5E5"> the attacker sorry is</font>

776
00:40:17,740 --> 00:40:22,069
modifying information<font color="#CCCCCC"> in the</font>

777
00:40:19,850 --> 00:40:24,620
confirmation form so that<font color="#E5E5E5"> I keep</font>

778
00:40:22,070 --> 00:40:28,010
thinking<font color="#E5E5E5"> that everything was is normal</font>

779
00:40:24,620 --> 00:40:30,290
<font color="#E5E5E5">like I keep seeing the name of the of my</font>

780
00:40:28,010 --> 00:40:32,330
landlord<font color="#CCCCCC"> I keep seeing the destination</font>

781
00:40:30,290 --> 00:40:34,040
<font color="#CCCCCC">account number</font><font color="#E5E5E5"> and all this</font><font color="#CCCCCC"> information</font>

782
00:40:32,330 --> 00:40:37,370
is being fetched from<font color="#E5E5E5"> the session</font>

783
00:40:34,040 --> 00:40:39,050
storage<font color="#E5E5E5"> and the attacker keeps modifying</font>

784
00:40:37,370 --> 00:40:40,970
<font color="#E5E5E5">so it keeps modifying the user</font>

785
00:40:39,050 --> 00:40:44,510
<font color="#E5E5E5">experience</font><font color="#CCCCCC"> as he goes along</font>

786
00:40:40,970 --> 00:40:48,410
and actually<font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> low-friction</font><font color="#E5E5E5"> kind of</font>

787
00:40:44,510 --> 00:40:51,560
attack<font color="#E5E5E5"> because if you think</font><font color="#CCCCCC"> about it the</font>

788
00:40:48,410 --> 00:40:54,680
user is<font color="#CCCCCC"> using its own PC</font><font color="#E5E5E5"> it's using at a</font>

789
00:40:51,560 --> 00:40:57,350
regular<font color="#E5E5E5"> hour logging in from a known</font>

790
00:40:54,680 --> 00:40:59,629
geographical location probably<font color="#E5E5E5"> doing a</font>

791
00:40:57,350 --> 00:41:01,819
transaction<font color="#E5E5E5"> of a value that's not</font>

792
00:40:59,630 --> 00:41:03,710
uncommon for<font color="#CCCCCC"> him to do</font><font color="#E5E5E5"> that</font>

793
00:41:01,820 --> 00:41:06,290
the only<font color="#E5E5E5"> thing that's</font><font color="#CCCCCC"> different is</font><font color="#E5E5E5"> the</font>

794
00:41:03,710 --> 00:41:09,140
<font color="#E5E5E5">destination</font><font color="#CCCCCC"> account number</font><font color="#E5E5E5"> all right</font><font color="#CCCCCC"> and</font>

795
00:41:06,290 --> 00:41:11,570
if it's a one-off transaction<font color="#E5E5E5"> it's</font>

796
00:41:09,140 --> 00:41:13,790
almost impossible for<font color="#E5E5E5"> the bank</font><font color="#CCCCCC"> to flag</font>

797
00:41:11,570 --> 00:41:16,160
<font color="#CCCCCC">it as being fraud so it's this is</font>

798
00:41:13,790 --> 00:41:19,880
<font color="#E5E5E5">definitely going to happen and unless we</font>

799
00:41:16,160 --> 00:41:22,509
stop that<font color="#E5E5E5"> all right so let</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> just</font>

800
00:41:19,880 --> 00:41:25,430
proceed and again<font color="#E5E5E5"> the</font><font color="#CCCCCC"> final details</font>

801
00:41:22,510 --> 00:41:29,360
<font color="#E5E5E5">keeps being tampered because we want to</font>

802
00:41:25,430 --> 00:41:30,859
go<font color="#E5E5E5"> to do something else and keep</font>

803
00:41:29,360 --> 00:41:35,150
thinking<font color="#CCCCCC"> that</font><font color="#E5E5E5"> everything is normal</font>

804
00:41:30,860 --> 00:41:41,570
<font color="#CCCCCC">everything is</font><font color="#E5E5E5"> okay all right so this is</font>

805
00:41:35,150 --> 00:41:44,060
<font color="#E5E5E5">it</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> terms of demo this was just one</font>

806
00:41:41,570 --> 00:41:46,730
example<font color="#E5E5E5"> one use case banking but I</font>

807
00:41:44,060 --> 00:41:49,070
wanted to<font color="#E5E5E5"> let</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> a bit what other</font>

808
00:41:46,730 --> 00:41:53,450
kinds<font color="#CCCCCC"> of things that you can use this</font>

809
00:41:49,070 --> 00:41:55,100
approach for so what sort of<font color="#E5E5E5"> attack</font>

810
00:41:53,450 --> 00:41:57,049
vectors that we<font color="#E5E5E5"> are catching we are</font>

811
00:41:55,100 --> 00:42:01,009
catching<font color="#CCCCCC"> many in the browser injections</font>

812
00:41:57,050 --> 00:42:02,990
<font color="#E5E5E5">malicious and compromised extensions for</font>

813
00:42:01,010 --> 00:42:07,010
party<font color="#E5E5E5"> leaves</font><font color="#CCCCCC"> Syrians that</font><font color="#E5E5E5"> have been</font>

814
00:42:02,990 --> 00:42:10,490
compromised<font color="#CCCCCC"> and this is has a</font><font color="#E5E5E5"> very</font>

815
00:42:07,010 --> 00:42:13,940
important<font color="#E5E5E5"> notes provided that they</font>

816
00:42:10,490 --> 00:42:16,520
inject something<font color="#E5E5E5"> in the page so this is</font>

817
00:42:13,940 --> 00:42:18,920
how we catch it if they don't<font color="#E5E5E5"> do an</font>

818
00:42:16,520 --> 00:42:20,339
injection if they are just silently

819
00:42:18,920 --> 00:42:23,460
<font color="#E5E5E5">collecting</font><font color="#CCCCCC"> information</font>

820
00:42:20,339 --> 00:42:25,259
from from the browser<font color="#E5E5E5"> then we we won't</font>

821
00:42:23,460 --> 00:42:28,200
see<font color="#CCCCCC"> anything and we won't be able to</font>

822
00:42:25,259 --> 00:42:32,819
<font color="#E5E5E5">catch it</font><font color="#CCCCCC"> but this</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> common</font>

823
00:42:28,200 --> 00:42:35,999
scenario we usually see that<font color="#CCCCCC"> attackers</font>

824
00:42:32,819 --> 00:42:38,609
are they want to do stuff<font color="#CCCCCC"> to the page</font>

825
00:42:35,999 --> 00:42:40,890
they want to add<font color="#E5E5E5"> more</font><font color="#CCCCCC"> JavaScript they</font>

826
00:42:38,609 --> 00:42:44,690
want to do this<font color="#CCCCCC"> they want to do that and</font>

827
00:42:40,890 --> 00:42:48,690
and and once they do that<font color="#E5E5E5"> we are able</font><font color="#CCCCCC"> to</font>

828
00:42:44,690 --> 00:42:51,329
help<font color="#E5E5E5"> in all of</font><font color="#CCCCCC"> these attack vectors XSS</font>

829
00:42:48,690 --> 00:42:55,619
as well<font color="#CCCCCC"> if they just</font><font color="#E5E5E5"> manage</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> modify</font>

830
00:42:51,329 --> 00:42:58,819
the<font color="#E5E5E5"> inject a script tag</font><font color="#CCCCCC"> inject some sort</font>

831
00:42:55,619 --> 00:43:01,829
of anoint<font color="#E5E5E5"> our script we</font><font color="#CCCCCC"> can catch that</font>

832
00:42:58,819 --> 00:43:05,519
<font color="#E5E5E5">we can see</font><font color="#CCCCCC"> requests</font><font color="#E5E5E5"> going out to</font>

833
00:43:01,829 --> 00:43:08,400
<font color="#CCCCCC">third-party</font><font color="#E5E5E5"> websites and we can also</font>

834
00:43:05,519 --> 00:43:10,979
detect<font color="#E5E5E5"> if the user is doing the</font>

835
00:43:08,400 --> 00:43:12,569
<font color="#E5E5E5">tampering in himself like opening the</font>

836
00:43:10,979 --> 00:43:14,968
chrome dev tools<font color="#CCCCCC"> and just</font><font color="#E5E5E5"> modifying the</font>

837
00:43:12,569 --> 00:43:17,450
<font color="#E5E5E5">DOM and</font><font color="#CCCCCC"> just running</font><font color="#E5E5E5"> stuff that modifies</font>

838
00:43:14,969 --> 00:43:20,039
the Dom we can also catch that and

839
00:43:17,450 --> 00:43:21,749
<font color="#E5E5E5">usually they use this attack vectors to</font>

840
00:43:20,039 --> 00:43:23,969
do what to do to trick the user

841
00:43:21,749 --> 00:43:26,939
introduce something<font color="#E5E5E5"> like give me or</font>

842
00:43:23,969 --> 00:43:29,940
two-factor authentication token<font color="#CCCCCC"> to serve</font>

843
00:43:26,940 --> 00:43:32,279
an exploit<font color="#E5E5E5"> kit to accelerate credentials</font>

844
00:43:29,940 --> 00:43:34,469
<font color="#E5E5E5">keys data to do form</font><font color="#CCCCCC"> jacking</font><font color="#E5E5E5"> to do</font>

845
00:43:32,279 --> 00:43:38,249
customer join a hijacking<font color="#CCCCCC"> which is a</font>

846
00:43:34,469 --> 00:43:40,559
very funny<font color="#CCCCCC"> case where especially</font><font color="#E5E5E5"> for</font>

847
00:43:38,249 --> 00:43:43,649
e-commerce websites<font color="#E5E5E5"> when they just like</font>

848
00:43:40,559 --> 00:43:46,109
place an ad just next to the price of

849
00:43:43,650 --> 00:43:48,119
<font color="#E5E5E5">the</font><font color="#CCCCCC"> product</font><font color="#E5E5E5"> and they tell you like hey</font>

850
00:43:46,109 --> 00:43:51,089
you<font color="#CCCCCC"> can buy this product</font><font color="#E5E5E5"> in a</font><font color="#CCCCCC"> different</font>

851
00:43:48,119 --> 00:43:53,789
<font color="#E5E5E5">website</font><font color="#CCCCCC"> like 10%</font><font color="#E5E5E5"> cheaper and</font><font color="#CCCCCC"> that drives</font>

852
00:43:51,089 --> 00:43:55,769
away the<font color="#E5E5E5"> client and basically costs</font>

853
00:43:53,789 --> 00:43:58,289
millions for the<font color="#CCCCCC"> websites</font><font color="#E5E5E5"> from the</font>

854
00:43:55,769 --> 00:44:01,439
retail websites<font color="#E5E5E5"> and it's actually</font>

855
00:43:58,289 --> 00:44:04,109
<font color="#E5E5E5">happening a lot we also have to play</font>

856
00:44:01,440 --> 00:44:07,619
<font color="#E5E5E5">supply chain attacks which is what we</font>

857
00:44:04,109 --> 00:44:10,469
call dependencies being modified<font color="#E5E5E5"> so they</font>

858
00:44:07,619 --> 00:44:13,920
<font color="#E5E5E5">it's like going for the weakest link</font>

859
00:44:10,469 --> 00:44:17,160
<font color="#CCCCCC">right if</font><font color="#E5E5E5"> like if the bank has like good</font>

860
00:44:13,920 --> 00:44:19,619
security<font color="#E5E5E5"> measures</font><font color="#CCCCCC"> but somehow for is</font>

861
00:44:17,160 --> 00:44:21,328
including a third party then<font color="#E5E5E5"> the third</font>

862
00:44:19,619 --> 00:44:23,609
part you<font color="#E5E5E5"> probably won't have like a very</font>

863
00:44:21,329 --> 00:44:25,109
specialized security team so we might as

864
00:44:23,609 --> 00:44:27,960
<font color="#CCCCCC">well</font><font color="#E5E5E5"> just attack the weakest link</font><font color="#CCCCCC"> right</font>

865
00:44:25,109 --> 00:44:30,749
<font color="#E5E5E5">so we call this the supply chain attacks</font>

866
00:44:27,960 --> 00:44:32,400
<font color="#CCCCCC">we can inject</font><font color="#E5E5E5"> ads forms and do crypto</font>

867
00:44:30,749 --> 00:44:33,700
<font color="#E5E5E5">jacking which is basically stealing the</font>

868
00:44:32,400 --> 00:44:38,470
CPU of the

869
00:44:33,700 --> 00:44:41,230
user so concluding the<font color="#CCCCCC"> client-side is</font>

870
00:44:38,470 --> 00:44:42,520
the danger zone<font color="#CCCCCC"> so it's you can</font><font color="#E5E5E5"> tamper</font>

871
00:44:41,230 --> 00:44:44,560
<font color="#E5E5E5">with everything you can modify</font>

872
00:44:42,520 --> 00:44:48,730
everything<font color="#E5E5E5"> there's lots of ways of just</font>

873
00:44:44,560 --> 00:44:52,240
ensuring that you can do<font color="#E5E5E5"> that I always</font>

874
00:44:48,730 --> 00:44:55,740
<font color="#E5E5E5">say use every solution that you</font><font color="#CCCCCC"> can just</font>

875
00:44:52,240 --> 00:44:59,379
use<font color="#E5E5E5"> defense in</font><font color="#CCCCCC"> def you use CSP to try to</font>

876
00:44:55,740 --> 00:45:02,169
prevent XSS from executing in<font color="#CCCCCC"> the page</font>

877
00:44:59,380 --> 00:45:04,570
from<font color="#CCCCCC"> request</font><font color="#E5E5E5"> from going out</font><font color="#CCCCCC"> just try to</font>

878
00:45:02,170 --> 00:45:09,280
reduce the attack<font color="#E5E5E5"> surface</font><font color="#CCCCCC"> as much as you</font>

879
00:45:04,570 --> 00:45:11,530
can but in the end those defenses<font color="#CCCCCC"> or</font>

880
00:45:09,280 --> 00:45:13,510
some of those defenses<font color="#E5E5E5"> have their weak</font>

881
00:45:11,530 --> 00:45:16,300
spots<font color="#E5E5E5"> for instance everything that</font>

882
00:45:13,510 --> 00:45:18,520
relies on<font color="#E5E5E5"> HTTP headers can be stripped</font>

883
00:45:16,300 --> 00:45:21,820
<font color="#E5E5E5">off by extensions or by main in</font><font color="#CCCCCC"> the</font>

884
00:45:18,520 --> 00:45:23,620
browser Trojans and and because<font color="#CCCCCC"> of that</font>

885
00:45:21,820 --> 00:45:26,170
we have just to assume<font color="#E5E5E5"> that</font><font color="#CCCCCC"> some</font>

886
00:45:23,620 --> 00:45:31,720
injections<font color="#E5E5E5"> will go through and we have</font>

887
00:45:26,170 --> 00:45:34,480
to have a plan<font color="#CCCCCC"> to to catch them so we</font>

888
00:45:31,720 --> 00:45:36,399
<font color="#CCCCCC">propose this approach like</font><font color="#E5E5E5"> application</font>

889
00:45:34,480 --> 00:45:39,040
<font color="#E5E5E5">real-time monitoring it won't</font><font color="#CCCCCC"> prevent</font>

890
00:45:36,400 --> 00:45:41,200
the injections<font color="#E5E5E5"> but they can help</font>

891
00:45:39,040 --> 00:45:45,910
mitigate the<font color="#E5E5E5"> problems that they create</font>

892
00:45:41,200 --> 00:45:48,549
right<font color="#CCCCCC"> and it's important to</font><font color="#E5E5E5"> do this in</font>

893
00:45:45,910 --> 00:45:52,000
<font color="#E5E5E5">real time it's important to implement</font>

894
00:45:48,550 --> 00:45:54,460
<font color="#E5E5E5">react reaction policies and this works</font>

895
00:45:52,000 --> 00:45:57,190
even<font color="#E5E5E5"> for zero days because we just</font>

896
00:45:54,460 --> 00:46:00,280
follow a<font color="#E5E5E5"> whitelisting approach we detect</font>

897
00:45:57,190 --> 00:46:03,280
any modification<font color="#E5E5E5"> and it allows you</font><font color="#CCCCCC"> to</font>

898
00:46:00,280 --> 00:46:05,160
see<font color="#CCCCCC"> exactly what the user</font><font color="#E5E5E5"> has saw it</font>

899
00:46:03,280 --> 00:46:08,050
allows you<font color="#E5E5E5"> to do your own</font><font color="#CCCCCC"> investigation</font>

900
00:46:05,160 --> 00:46:10,810
<font color="#CCCCCC">allows you to understand what's</font><font color="#E5E5E5"> hitting</font>

901
00:46:08,050 --> 00:46:12,430
your website and this<font color="#CCCCCC"> is very</font><font color="#E5E5E5"> hard</font>

902
00:46:10,810 --> 00:46:14,620
because<font color="#E5E5E5"> we are talking</font><font color="#CCCCCC"> about the</font>

903
00:46:12,430 --> 00:46:17,080
<font color="#CCCCCC">client-side</font><font color="#E5E5E5"> and usually you just assume</font>

904
00:46:14,620 --> 00:46:20,109
that if it's not hitting<font color="#E5E5E5"> the server I'm</font>

905
00:46:17,080 --> 00:46:23,560
not it doesn't exist<font color="#CCCCCC"> and in my opinion</font>

906
00:46:20,110 --> 00:46:25,270
<font color="#E5E5E5">it's not the correct way</font><font color="#CCCCCC"> and that you</font>

907
00:46:23,560 --> 00:46:28,540
should<font color="#CCCCCC"> be thinking about protecting your</font>

908
00:46:25,270 --> 00:46:32,170
web application and you can<font color="#E5E5E5"> deploy the</font>

909
00:46:28,540 --> 00:46:34,630
<font color="#E5E5E5">customized reactions and like I</font><font color="#CCCCCC"> said if</font>

910
00:46:32,170 --> 00:46:37,360
we keep like raising<font color="#E5E5E5"> the bar</font><font color="#CCCCCC"> for the</font>

911
00:46:34,630 --> 00:46:39,970
attackers<font color="#E5E5E5"> probably they do and just move</font>

912
00:46:37,360 --> 00:46:43,000
on to<font color="#CCCCCC"> the next website</font><font color="#E5E5E5"> and so ultimately</font>

913
00:46:39,970 --> 00:46:44,950
you can see this as a fraud mitigation

914
00:46:43,000 --> 00:46:47,739
or fraud

915
00:46:44,950 --> 00:46:50,499
so anti-fraud solution for the<font color="#CCCCCC"> website</font>

916
00:46:47,739 --> 00:46:57,089
<font color="#E5E5E5">for this particular set of attack</font>

917
00:46:50,499 --> 00:46:57,089
vectors so this is all I had for<font color="#E5E5E5"> today</font>

