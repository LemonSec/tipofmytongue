1
00:00:10,000 --> 00:00:11,519
yes

2
00:00:11,519 --> 00:00:15,040
uh i will start the system named our

3
00:00:15,040 --> 00:00:17,920
fusion of ancient and new arsenal

4
00:00:17,920 --> 00:00:20,640
anatomy of our lacking cyber espionage

5
00:00:20,640 --> 00:00:21,520
tool set

6
00:00:21,520 --> 00:00:25,119
in asia the agenda

7
00:00:25,119 --> 00:00:28,240
in this session we will talk about

8
00:00:28,240 --> 00:00:32,640
a thick bronze butter apt advisory group

9
00:00:32,640 --> 00:00:36,399
they suspect chinese origin

10
00:00:36,399 --> 00:00:40,480
and i will talk about introducing method

11
00:00:40,480 --> 00:00:44,320
and initial tools then i switch

12
00:00:44,320 --> 00:00:47,520
speaker to hiroshi hiroshi will talk

13
00:00:47,520 --> 00:00:48,000
about

14
00:00:48,000 --> 00:00:51,120
post exploit tool set and activity uh

15
00:00:51,120 --> 00:00:52,239
finally

16
00:00:52,239 --> 00:00:55,280
a discussion of developer and

17
00:00:55,280 --> 00:00:59,840
operator of these tools

18
00:01:00,559 --> 00:01:04,239
okay uh our introduction is

19
00:01:04,239 --> 00:01:08,000
already done uh we are as a summary we

20
00:01:08,000 --> 00:01:09,200
are very interested in

21
00:01:09,200 --> 00:01:12,240
uh cyber espionage and researching

22
00:01:12,240 --> 00:01:13,200
around

23
00:01:13,200 --> 00:01:16,560
10 years already

24
00:01:17,759 --> 00:01:21,280
okay let's start talk about the tick

25
00:01:21,280 --> 00:01:24,640
group they are a cyber espionage group

26
00:01:24,640 --> 00:01:25,520
who has been

27
00:01:25,520 --> 00:01:29,320
active or from about

28
00:01:29,320 --> 00:01:32,400
2008 very very

29
00:01:32,400 --> 00:01:35,680
old and still keep acting

30
00:01:35,680 --> 00:01:39,360
active group we think and famous

31
00:01:39,360 --> 00:01:42,399
attack in japan is from end of

32
00:01:42,399 --> 00:01:46,240
uh 2016 to early 2012

33
00:01:46,240 --> 00:01:49,520
they uh they have their original

34
00:01:49,520 --> 00:01:52,720
exploit against japanese major

35
00:01:52,720 --> 00:01:56,479
asset management tool named skysee

36
00:01:56,479 --> 00:01:59,840
this vulnerability is very severe

37
00:01:59,840 --> 00:02:01,360
because the vulnerability

38
00:02:01,360 --> 00:02:04,399
is on listening port so

39
00:02:04,399 --> 00:02:07,520
this group scanning a global ip address

40
00:02:07,520 --> 00:02:10,479
then this they found bruno radies then

41
00:02:10,479 --> 00:02:11,120
they

42
00:02:11,120 --> 00:02:15,040
they exploit on the drops uh mario named

43
00:02:15,040 --> 00:02:19,440
xxx x x mm lot

44
00:02:19,440 --> 00:02:23,200
initially with v and we think

45
00:02:23,200 --> 00:02:26,239
this group's purpose looks like

46
00:02:26,239 --> 00:02:29,840
collecting uh pii personal identifiable

47
00:02:29,840 --> 00:02:31,200
information but

48
00:02:31,200 --> 00:02:34,879
recently they their target is mostly

49
00:02:34,879 --> 00:02:35,680
focused

50
00:02:35,680 --> 00:02:39,200
on manufacturing company and we think

51
00:02:39,200 --> 00:02:42,640
they also try to correct uh intellectual

52
00:02:42,640 --> 00:02:46,239
properties and around

53
00:02:46,239 --> 00:02:49,599
that target change timing they are two

54
00:02:49,599 --> 00:02:54,879
arsenal changes this is around 2018.

55
00:02:54,879 --> 00:02:58,319
most target countries uh japan

56
00:02:58,319 --> 00:03:01,760
and korea today uh

57
00:03:01,760 --> 00:03:05,680
we will focus on talking about

58
00:03:05,680 --> 00:03:10,080
japan incidents and mario tools

59
00:03:10,080 --> 00:03:13,680
we found in japan

60
00:03:16,640 --> 00:03:19,519
the first i talk about the target

61
00:03:19,519 --> 00:03:20,400
industries

62
00:03:20,400 --> 00:03:23,599
of uh this group uh

63
00:03:23,599 --> 00:03:27,280
chemistry and wireless uh electric

64
00:03:27,280 --> 00:03:30,640
ocean engineering and i believe

65
00:03:30,640 --> 00:03:34,000
these areas are very

66
00:03:34,000 --> 00:03:37,760
strong japanese manufacturing area

67
00:03:37,760 --> 00:03:41,760
the big news in japan is

68
00:03:41,760 --> 00:03:44,720
one biggest electric company named

69
00:03:44,720 --> 00:03:45,519
mitsubishi

70
00:03:45,519 --> 00:03:48,879
electric was uh compromised by this

71
00:03:48,879 --> 00:03:49,920
group

72
00:03:49,920 --> 00:03:54,560
around 2018 to 2019

73
00:03:54,560 --> 00:03:57,680
also in our company

74
00:03:57,680 --> 00:04:01,040
helps these groups intrusion around

75
00:04:01,040 --> 00:04:06,798
chemical and wires or these these areas

76
00:04:09,680 --> 00:04:12,799
so first how this

77
00:04:12,799 --> 00:04:16,079
other group included in

78
00:04:16,079 --> 00:04:19,199
the victim organization

79
00:04:19,199 --> 00:04:23,280
they start from spearfishing emails

80
00:04:23,280 --> 00:04:27,199
and unique thing around from 2018 we

81
00:04:27,199 --> 00:04:28,160
observe

82
00:04:28,160 --> 00:04:31,600
is uh days they sent

83
00:04:31,600 --> 00:04:35,280
spearfish email to uh oversea branch

84
00:04:35,280 --> 00:04:36,240
office

85
00:04:36,240 --> 00:04:39,040
they they look targeting japanese uh

86
00:04:39,040 --> 00:04:40,639
company but they sent

87
00:04:40,639 --> 00:04:43,680
a brand these companies branch office in

88
00:04:43,680 --> 00:04:47,759
overseas and the emails are sent a com

89
00:04:47,759 --> 00:04:51,520
compromise legitimate account of the

90
00:04:51,520 --> 00:04:54,639
related company so

91
00:04:54,639 --> 00:04:57,680
the victim uh

92
00:04:57,680 --> 00:05:01,120
users this looks legitimate and

93
00:05:01,120 --> 00:05:04,320
maybe open these files and the

94
00:05:04,320 --> 00:05:07,919
attachment files they use is uh

95
00:05:07,919 --> 00:05:12,320
just executable file in zip file or

96
00:05:12,320 --> 00:05:15,440
obvious exploit file and one of

97
00:05:15,440 --> 00:05:18,720
uh one one thing i want to mention is

98
00:05:18,720 --> 00:05:22,080
they they also use a dot

99
00:05:22,080 --> 00:05:25,759
t dropper 8.t dropper is

100
00:05:25,759 --> 00:05:29,520
famous that this exploit framework

101
00:05:29,520 --> 00:05:33,199
looks sharing among the chinese

102
00:05:33,199 --> 00:05:36,639
apd groups tick is

103
00:05:36,639 --> 00:05:39,840
one of groups that are using a dot t

104
00:05:39,840 --> 00:05:43,600
dropper and the last thing i mentioned

105
00:05:43,600 --> 00:05:46,639
about they scan global ip address and

106
00:05:46,639 --> 00:05:50,639
uh do exploit japanese asset management

107
00:05:50,639 --> 00:05:51,120
too

108
00:05:51,120 --> 00:05:53,720
this packet has been monitoring from

109
00:05:53,720 --> 00:05:54,880
2016

110
00:05:54,880 --> 00:05:58,639
to the 2019 february

111
00:05:58,639 --> 00:06:01,840
they have been doing uh that they have

112
00:06:01,840 --> 00:06:02,479
been

113
00:06:02,479 --> 00:06:07,840
looking for that explorations

114
00:06:08,400 --> 00:06:12,160
so why

115
00:06:12,160 --> 00:06:16,800
why i think they sent spearfish email to

116
00:06:16,800 --> 00:06:20,560
other countries is one reason i guess is

117
00:06:20,560 --> 00:06:23,520
overseas branch office offices are very

118
00:06:23,520 --> 00:06:24,800
low awareness

119
00:06:24,800 --> 00:06:28,800
for though for those attacks in japan

120
00:06:28,800 --> 00:06:31,600
we share this kind of information and

121
00:06:31,600 --> 00:06:33,280
some

122
00:06:33,280 --> 00:06:36,319
we do employee training to not

123
00:06:36,319 --> 00:06:38,800
not open this kind of attachment file

124
00:06:38,800 --> 00:06:39,600
but uh

125
00:06:39,600 --> 00:06:42,639
i guess the oversea branch office in

126
00:06:42,639 --> 00:06:43,520
china

127
00:06:43,520 --> 00:06:46,319
korea is a little bit low awareness

128
00:06:46,319 --> 00:06:47,600
against

129
00:06:47,600 --> 00:06:51,039
and this is interesting point i

130
00:06:51,039 --> 00:06:55,360
i this is little guess

131
00:06:55,599 --> 00:06:58,240
the screenshot here is a chinese

132
00:06:58,240 --> 00:07:02,400
character executive

133
00:07:02,400 --> 00:07:06,160
this attachment to the email file

134
00:07:06,160 --> 00:07:08,960
and this kind of just attached

135
00:07:08,960 --> 00:07:10,479
executable file

136
00:07:10,479 --> 00:07:15,440
we generally i i don't open that file

137
00:07:15,440 --> 00:07:18,560
so i i guess there may be a possibility

138
00:07:18,560 --> 00:07:19,520
the

139
00:07:19,520 --> 00:07:22,720
inside corporate corporator to open such

140
00:07:22,720 --> 00:07:30,319
attachment file to a big team

141
00:07:30,319 --> 00:07:33,599
and attack crow is uh

142
00:07:33,599 --> 00:07:36,880
like this uh in initial footfall hey

143
00:07:36,880 --> 00:07:42,080
phase uh there is a spear phishing email

144
00:07:42,080 --> 00:07:45,360
after the victim or

145
00:07:45,360 --> 00:07:48,720
officer opens that file then they start

146
00:07:48,720 --> 00:07:52,720
executable type downloader this

147
00:07:52,720 --> 00:07:56,080
downloader is connecting to

148
00:07:56,080 --> 00:07:58,960
mostly compromised our website and

149
00:07:58,960 --> 00:08:00,400
download the

150
00:08:00,400 --> 00:08:03,759
first route in fastrat we observe

151
00:08:03,759 --> 00:08:07,199
mainly that bar and uh

152
00:08:07,199 --> 00:08:10,479
uniquely 2090 we we found

153
00:08:10,479 --> 00:08:14,080
this lot or shadow part is used

154
00:08:14,080 --> 00:08:17,360
hello part is also famous used by

155
00:08:17,360 --> 00:08:20,800
a wing apd 41 group

156
00:08:20,800 --> 00:08:24,080
so i'm confident that this group

157
00:08:24,080 --> 00:08:27,199
is likely to use

158
00:08:27,199 --> 00:08:30,240
chinese uh sharing malware and exploit

159
00:08:30,240 --> 00:08:32,479
kit

160
00:08:32,479 --> 00:08:35,919
then after initial reconnaissance

161
00:08:35,919 --> 00:08:39,599
has done they switched to the second or

162
00:08:39,599 --> 00:08:41,120
third route

163
00:08:41,120 --> 00:08:44,720
and these that uh execute this

164
00:08:44,720 --> 00:08:49,279
execute what has been

165
00:08:49,279 --> 00:08:53,200
on the field from 2008 so very

166
00:08:53,200 --> 00:08:56,560
that but uh they they use as

167
00:08:56,560 --> 00:08:59,680
sad a lot on memory this

168
00:08:59,680 --> 00:09:02,640
this is this doesn't uh this is

169
00:09:02,640 --> 00:09:04,240
difficult to detect i think

170
00:09:04,240 --> 00:09:09,839
so they they like to use this one

171
00:09:10,399 --> 00:09:13,440
these are second and third or

172
00:09:13,440 --> 00:09:16,240
area of the second speaker hiroshi will

173
00:09:16,240 --> 00:09:16,880
talk

174
00:09:16,880 --> 00:09:19,680
later in deep

175
00:09:21,600 --> 00:09:25,040
in uh my area i i will talk about

176
00:09:25,040 --> 00:09:28,160
initial intervention phase the first uh

177
00:09:28,160 --> 00:09:31,760
i will talk about downloader the unique

178
00:09:31,760 --> 00:09:32,320
thing

179
00:09:32,320 --> 00:09:36,720
of uh this downloader is they have uh

180
00:09:36,720 --> 00:09:40,240
keep the main program debug symbol like

181
00:09:40,240 --> 00:09:44,240
like this avk or version

182
00:09:44,240 --> 00:09:48,000
or from this

183
00:09:48,000 --> 00:09:51,600
program debug symbol name we use it

184
00:09:51,600 --> 00:09:55,600
as a malware name to inside our company

185
00:09:55,600 --> 00:09:56,160
or

186
00:09:56,160 --> 00:10:00,719
i think japanese security researchers

187
00:10:03,440 --> 00:10:06,720
downloader is a very simple uh

188
00:10:06,720 --> 00:10:10,720
structure just uh download a file

189
00:10:10,720 --> 00:10:13,440
by using internet video file and save it

190
00:10:13,440 --> 00:10:13,839
then

191
00:10:13,839 --> 00:10:17,040
execute it this is a very

192
00:10:17,040 --> 00:10:20,240
fast sample on the

193
00:10:20,240 --> 00:10:22,880
first sample

194
00:10:24,959 --> 00:10:28,160
and they during the

195
00:10:28,160 --> 00:10:31,279
very short period they uh

196
00:10:31,279 --> 00:10:34,399
uh this downloader and added some

197
00:10:34,399 --> 00:10:37,880
uh features in

198
00:10:37,880 --> 00:10:41,600
2019 uh renamed

199
00:10:41,600 --> 00:10:44,160
version downloader uh this downloader

200
00:10:44,160 --> 00:10:44,880
just

201
00:10:44,880 --> 00:10:48,560
has a remote share feature

202
00:10:48,560 --> 00:10:52,000
the one thing uh this day like this

203
00:10:52,000 --> 00:10:54,880
downloader is very low uh detection rate

204
00:10:54,880 --> 00:10:57,279
i think

205
00:10:58,399 --> 00:11:01,440
then i talk about

206
00:11:01,440 --> 00:11:04,800
uh version uh downloader and dll

207
00:11:04,800 --> 00:11:08,480
uh this dll runs with a legitimate

208
00:11:08,480 --> 00:11:11,839
uh fortigate 40 tray xz as a

209
00:11:11,839 --> 00:11:14,240
side loading because there is a version

210
00:11:14,240 --> 00:11:14,880
dll

211
00:11:14,880 --> 00:11:18,560
in windows system 32 folder

212
00:11:18,560 --> 00:11:22,240
and this version dll

213
00:11:22,240 --> 00:11:25,920
is down connect to c2

214
00:11:25,920 --> 00:11:29,360
and before that they check uh version

215
00:11:29,360 --> 00:11:30,160
dll

216
00:11:30,160 --> 00:11:34,000
and get file version in for exa

217
00:11:34,000 --> 00:11:37,279
function because

218
00:11:37,279 --> 00:11:42,160
of windows 7 or 8 uh

219
00:11:42,160 --> 00:11:44,959
system 32 belgium the area doesn't have

220
00:11:44,959 --> 00:11:45,279
uh

221
00:11:45,279 --> 00:11:49,760
these uh these win 32 apis

222
00:11:49,760 --> 00:11:54,160
then they for this downloader

223
00:11:54,160 --> 00:11:57,279
figured out then system

224
00:11:57,279 --> 00:12:00,720
32d doesn't have this api then exit

225
00:12:00,720 --> 00:12:04,480
so this maria only looks to like

226
00:12:04,480 --> 00:12:11,760
work on windows 10 environment

227
00:12:11,760 --> 00:12:15,200
uh this is a typical remote cell feature

228
00:12:15,200 --> 00:12:18,480
uh pipe create pipe and the pipe and

229
00:12:18,480 --> 00:12:21,839
cmd exit this is the command or the

230
00:12:21,839 --> 00:12:23,120
adapter used

231
00:12:23,120 --> 00:12:26,800
one thing i want to mention here is the

232
00:12:26,800 --> 00:12:29,839
the same chemical industry target

233
00:12:29,839 --> 00:12:33,279
you was uh attacked by windy

234
00:12:33,279 --> 00:12:36,320
last year before thick intrusion

235
00:12:36,320 --> 00:12:38,480
and

236
00:12:40,320 --> 00:12:43,600
this download downloader with the remote

237
00:12:43,600 --> 00:12:45,680
shell has started working they start

238
00:12:45,680 --> 00:12:48,720
use net use with the

239
00:12:48,720 --> 00:12:52,399
username and password so maybe victim

240
00:12:52,399 --> 00:12:54,480
information was sharing

241
00:12:54,480 --> 00:12:57,760
the attacker groups

242
00:12:59,920 --> 00:13:04,240
then and

243
00:13:04,240 --> 00:13:07,440
this is a command and control workflow

244
00:13:07,440 --> 00:13:10,480
the attacker use a virtual private

245
00:13:10,480 --> 00:13:13,360
uh environment and connect to

246
00:13:13,360 --> 00:13:14,959
compromised

247
00:13:14,959 --> 00:13:18,240
web system the communication

248
00:13:18,240 --> 00:13:22,000
from other cut vpc is using

249
00:13:22,000 --> 00:13:25,360
this victim identifier and

250
00:13:25,360 --> 00:13:29,680
command and some identifier

251
00:13:29,680 --> 00:13:32,720
with during the

252
00:13:32,720 --> 00:13:36,160
protocol is encrypted with the aes

253
00:13:36,160 --> 00:13:40,000
and the base64 this

254
00:13:40,000 --> 00:13:42,240
command s means correct installed

255
00:13:42,240 --> 00:13:45,680
application and versions

256
00:13:47,120 --> 00:13:50,160
the reason why we can figure out this

257
00:13:50,160 --> 00:13:51,519
exactly is

258
00:13:51,519 --> 00:13:54,160
we have a cooperation from a compromise

259
00:13:54,160 --> 00:13:56,160
website and analyze

260
00:13:56,160 --> 00:14:02,240
this in deep

261
00:14:02,240 --> 00:14:05,519
the left picture shows the reverse

262
00:14:05,519 --> 00:14:08,160
engineered version and this has a

263
00:14:08,160 --> 00:14:11,040
command like cdsg

264
00:14:11,040 --> 00:14:14,240
and the feature is like this uh i think

265
00:14:14,240 --> 00:14:15,440
this

266
00:14:15,440 --> 00:14:19,040
i i want to mention one thing that this

267
00:14:19,040 --> 00:14:22,399
is a very small uh

268
00:14:22,399 --> 00:14:26,079
featured lot only demonstrate feature

269
00:14:26,079 --> 00:14:27,519
and upload file

270
00:14:27,519 --> 00:14:30,959
and download file and the correct list

271
00:14:30,959 --> 00:14:32,639
of installed applications

272
00:14:32,639 --> 00:14:37,040
this is a very small feature that

273
00:14:39,600 --> 00:14:42,480
and the command under control traffic

274
00:14:42,480 --> 00:14:44,399
encryption is done with

275
00:14:44,399 --> 00:14:48,560
uh aes and the base64

276
00:14:48,560 --> 00:14:51,839
they have a key this key

277
00:14:51,839 --> 00:14:55,440
and aes ib value

278
00:14:55,440 --> 00:14:58,720
is generated from a seed body with a

279
00:14:58,720 --> 00:15:02,079
london function so this always changes

280
00:15:02,079 --> 00:15:05,600
but with this structure

281
00:15:05,600 --> 00:15:10,839
analysis we can decode from our packet i

282
00:15:10,839 --> 00:15:12,720
think

283
00:15:12,720 --> 00:15:16,000
this is a corrected uh

284
00:15:16,000 --> 00:15:19,920
cnc php this is as4q

285
00:15:19,920 --> 00:15:24,160
dd uh like uh command is here

286
00:15:24,160 --> 00:15:27,440
from php analysis we can figure out

287
00:15:27,440 --> 00:15:30,639
a meaning as4q is

288
00:15:30,639 --> 00:15:33,680
a attacker's command i showed

289
00:15:33,680 --> 00:15:36,079
in the previous slide s or d or

290
00:15:36,079 --> 00:15:38,160
something like that

291
00:15:38,160 --> 00:15:41,440
and dd is clear content

292
00:15:41,440 --> 00:15:44,800
uh the e is delete file uh like this

293
00:15:44,800 --> 00:15:48,160
uh by using this uh other car sending uh

294
00:15:48,160 --> 00:15:51,600
this uh attacker

295
00:15:51,600 --> 00:15:55,360
requesting uh this these requests

296
00:15:55,360 --> 00:15:58,880
and these requests are converted to

297
00:15:58,880 --> 00:16:02,240
a command to the

298
00:16:02,240 --> 00:16:05,120
victim pc

299
00:16:06,839 --> 00:16:09,600
the from

300
00:16:09,600 --> 00:16:14,560
a compromise pc we can collect the

301
00:16:14,560 --> 00:16:17,920
we can we can

302
00:16:17,920 --> 00:16:22,160
identify the ip address where

303
00:16:22,160 --> 00:16:25,759
attacker is connecting these

304
00:16:25,759 --> 00:16:29,279
uh id addresses are showing from

305
00:16:29,279 --> 00:16:33,920
access command and control and

306
00:16:34,399 --> 00:16:37,680
these are also sending a pocket

307
00:16:37,680 --> 00:16:40,800
to exploit asset management too uh

308
00:16:40,800 --> 00:16:45,519
this thick group use uses a ppc

309
00:16:45,519 --> 00:16:50,399
we found some overlap here

310
00:16:50,399 --> 00:16:53,440
uh my findings in initial intervention

311
00:16:53,440 --> 00:16:54,160
is very

312
00:16:54,160 --> 00:16:56,320
simple downloader looks successful and

313
00:16:56,320 --> 00:16:57,839
uh we should care

314
00:16:57,839 --> 00:17:01,680
intuition from oversea branch office

315
00:17:01,680 --> 00:17:05,760
and not only arsenal but also previously

316
00:17:05,760 --> 00:17:06,959
compromised company

317
00:17:06,959 --> 00:17:09,119
information like a credential may be

318
00:17:09,119 --> 00:17:10,880
shared between

319
00:17:10,880 --> 00:17:14,319
other attacker groups uh that's all from

320
00:17:14,319 --> 00:17:19,839
me uh here a few minutes

321
00:18:00,320 --> 00:18:04,000
yes yeah this is my first slide

322
00:18:08,960 --> 00:18:12,320
okay so uh from here i'm gonna talk

323
00:18:12,320 --> 00:18:13,039
about

324
00:18:13,039 --> 00:18:16,160
toolset and the operators or techniques

325
00:18:16,160 --> 00:18:16,720
are used

326
00:18:16,720 --> 00:18:19,360
in a post-exploit phase one of the

327
00:18:19,360 --> 00:18:21,360
downloaded backdoors is

328
00:18:21,360 --> 00:18:25,120
called deadpair it's a delphi based http

329
00:18:25,120 --> 00:18:25,679
route

330
00:18:25,679 --> 00:18:28,000
and its configuration has a various

331
00:18:28,000 --> 00:18:29,520
kinds of items

332
00:18:29,520 --> 00:18:32,400
like a cnc domain and a metric's name

333
00:18:32,400 --> 00:18:33,679
and the user agent

334
00:18:33,679 --> 00:18:36,960
and the business server business

335
00:18:36,960 --> 00:18:39,840
means that communicates with the cnc

336
00:18:39,840 --> 00:18:40,960
server

337
00:18:40,960 --> 00:18:44,559
only in a configured certain time frame

338
00:18:44,559 --> 00:18:48,000
so for example if its start time is at 9

339
00:18:48,000 --> 00:18:48,880
00 am

340
00:18:48,880 --> 00:18:52,480
and end time is at 12 pm

341
00:18:52,480 --> 00:18:54,960
in this case that bar communicates with

342
00:18:54,960 --> 00:18:56,320
the cnc server

343
00:18:56,320 --> 00:19:00,480
only from 9 am to 12 pm

344
00:19:00,480 --> 00:19:02,480
the screenshot at the bottom of the

345
00:19:02,480 --> 00:19:03,600
slide is a

346
00:19:03,600 --> 00:19:06,799
configuration of over that pair

347
00:19:06,799 --> 00:19:09,360
and its start time is at 0 and the end

348
00:19:09,360 --> 00:19:11,120
time is a 24

349
00:19:11,120 --> 00:19:14,000
so that means that this data

350
00:19:14,000 --> 00:19:16,080
communicates with the census server

351
00:19:16,080 --> 00:19:19,360
for 24 hours so you know like it's very

352
00:19:19,360 --> 00:19:22,240
a decision guy

353
00:19:23,280 --> 00:19:26,400
and by using that bar

354
00:19:26,400 --> 00:19:29,039
the operator uploads a second last we

355
00:19:29,039 --> 00:19:31,360
call it a red code loader

356
00:19:31,360 --> 00:19:34,240
it's a windows dla file type and run as

357
00:19:34,240 --> 00:19:35,679
a service

358
00:19:35,679 --> 00:19:39,120
one of its characteristics is encrypted

359
00:19:39,120 --> 00:19:40,320
cnc domain

360
00:19:40,320 --> 00:19:43,600
is stored in a registry key and the

361
00:19:43,600 --> 00:19:46,320
dashing sheet domain is encrypted by

362
00:19:46,320 --> 00:19:50,720
using a base64 plus single byte xor

363
00:19:50,720 --> 00:19:52,960
it's download the rat module from an

364
00:19:52,960 --> 00:19:54,320
external server

365
00:19:54,320 --> 00:19:57,520
and execute its own memory so

366
00:19:57,520 --> 00:20:01,440
a rat module itself is a virus

367
00:20:01,440 --> 00:20:04,240
and some variants are being protected

368
00:20:04,240 --> 00:20:04,880
for

369
00:20:04,880 --> 00:20:07,840
anti-reverse engineering

370
00:20:09,039 --> 00:20:11,679
rat code loader is installed by the

371
00:20:11,679 --> 00:20:13,360
installer

372
00:20:13,360 --> 00:20:16,559
it changes its behavior based on the

373
00:20:16,559 --> 00:20:16,960
past

374
00:20:16,960 --> 00:20:21,120
parameters so the operator runs

375
00:20:21,120 --> 00:20:25,280
installer without without any parameters

376
00:20:25,280 --> 00:20:28,320
and the installer copies itself to

377
00:20:28,320 --> 00:20:30,880
three different uh three different files

378
00:20:30,880 --> 00:20:32,000
with three

379
00:20:32,000 --> 00:20:36,159
different names and the installer runs

380
00:20:36,159 --> 00:20:39,360
the copied three files

381
00:20:39,360 --> 00:20:42,400
when it runs with i parameters

382
00:20:42,400 --> 00:20:45,679
it creates service for persistence and

383
00:20:45,679 --> 00:20:47,120
when it runs

384
00:20:47,120 --> 00:20:50,080
all parameters it develops a radical

385
00:20:50,080 --> 00:20:50,799
loader

386
00:20:50,799 --> 00:20:54,240
and it inflates the file size to about

387
00:20:54,240 --> 00:20:57,840
120 megabytes this technique is

388
00:20:57,840 --> 00:21:01,360
called binary padding to select greater

389
00:21:01,360 --> 00:21:02,240
security

390
00:21:02,240 --> 00:21:04,480
product detections especially

391
00:21:04,480 --> 00:21:06,320
antibiotics product

392
00:21:06,320 --> 00:21:09,200
and when it runs the m parameter it's

393
00:21:09,200 --> 00:21:09,840
that

394
00:21:09,840 --> 00:21:12,320
created service to launch a radical

395
00:21:12,320 --> 00:21:13,520
loader

396
00:21:13,520 --> 00:21:17,679
radical loader is loaded by run dll32xe

397
00:21:17,679 --> 00:21:21,919
and export function named win7load is a

398
00:21:21,919 --> 00:21:22,720
code

399
00:21:22,720 --> 00:21:25,120
with a with one parameter in this case

400
00:21:25,120 --> 00:21:26,159
our fc

401
00:21:26,159 --> 00:21:29,360
policies string this parameter is used

402
00:21:29,360 --> 00:21:31,840
to find the registry key

403
00:21:31,840 --> 00:21:36,959
where the encoded cnc domain is stored

404
00:21:37,760 --> 00:21:42,000
satellite is ef qt the reason why we

405
00:21:42,000 --> 00:21:45,360
named it exq is from the embedded

406
00:21:45,360 --> 00:21:48,480
debug string message in the binary we

407
00:21:48,480 --> 00:21:49,039
believe

408
00:21:49,039 --> 00:21:52,080
exq is just a typo of the

409
00:21:52,080 --> 00:21:55,679
execute so this is kind of outstanding

410
00:21:55,679 --> 00:21:56,000
and

411
00:21:56,000 --> 00:21:59,440
we call it execute this slot is

412
00:21:59,440 --> 00:22:02,640
uh used in a router movement phase and

413
00:22:02,640 --> 00:22:05,440
there are two types of execute one is a

414
00:22:05,440 --> 00:22:06,159
dll

415
00:22:06,159 --> 00:22:09,760
and the another is the exe and again a

416
00:22:09,760 --> 00:22:10,880
route code

417
00:22:10,880 --> 00:22:14,000
is also encrypted in the binary and

418
00:22:14,000 --> 00:22:18,000
it is decrypted and executed on memory

419
00:22:18,000 --> 00:22:21,280
so again the route code is a

420
00:22:21,280 --> 00:22:24,320
is a virus

421
00:22:25,919 --> 00:22:29,039
this is the infection flow of execute

422
00:22:29,039 --> 00:22:32,559
the operator use a psx command to

423
00:22:32,559 --> 00:22:35,600
install the rat code loader on

424
00:22:35,600 --> 00:22:38,960
another device and when it's the road

425
00:22:38,960 --> 00:22:40,320
runs fast it's

426
00:22:40,320 --> 00:22:43,840
copies itself and use binary padding or

427
00:22:43,840 --> 00:22:45,440
randomized data

428
00:22:45,440 --> 00:22:48,559
so it eventually changes its file hash

429
00:22:48,559 --> 00:22:50,480
on every installation

430
00:22:50,480 --> 00:22:53,200
and the file hash can appear indicator

431
00:22:53,200 --> 00:22:54,000
to find this

432
00:22:54,000 --> 00:22:57,679
malware and the copied

433
00:22:57,679 --> 00:23:01,760
execute router decrypts the exq code

434
00:23:01,760 --> 00:23:04,480
and inject it in into another as another

435
00:23:04,480 --> 00:23:07,200
process like a svg host process

436
00:23:07,200 --> 00:23:10,480
or or just decrypt the esq

437
00:23:10,480 --> 00:23:13,600
code into its own process memory

438
00:23:13,600 --> 00:23:16,399
and execute

439
00:23:16,799 --> 00:23:20,240
so uh esqued has been sorry

440
00:23:20,240 --> 00:23:23,600
has been used for over 10 years and the

441
00:23:23,600 --> 00:23:24,799
first version

442
00:23:24,799 --> 00:23:28,640
was 1.16 it was found

443
00:23:28,640 --> 00:23:31,840
in 2008 in south korea

444
00:23:31,840 --> 00:23:34,720
and the greatest version we have we have

445
00:23:34,720 --> 00:23:37,440
observed is a swedish 21

446
00:23:37,440 --> 00:23:41,120
it was found in 2019.

447
00:23:41,120 --> 00:23:44,000
there are many featured implementations

448
00:23:44,000 --> 00:23:44,559
and

449
00:23:44,559 --> 00:23:47,120
many featured implementations actually

450
00:23:47,120 --> 00:23:49,200
have not been changed

451
00:23:49,200 --> 00:23:52,080
for over 10 years there are a few of

452
00:23:52,080 --> 00:23:52,640
changes

453
00:23:52,640 --> 00:23:57,120
one is the embedded press until 1.4

454
00:23:57,120 --> 00:24:00,000
execute is embedded in a resource

455
00:24:00,000 --> 00:24:00,640
section

456
00:24:00,640 --> 00:24:04,000
without encryption and

457
00:24:04,000 --> 00:24:07,760
and from wonder six exq

458
00:24:07,760 --> 00:24:10,480
is started to be encrypted and embedded

459
00:24:10,480 --> 00:24:13,200
in a data section

460
00:24:13,200 --> 00:24:16,000
uh communication encryption so the

461
00:24:16,000 --> 00:24:18,159
traffic with a census server

462
00:24:18,159 --> 00:24:21,440
is just encrypted by single by zora

463
00:24:21,440 --> 00:24:21,919
until

464
00:24:21,919 --> 00:24:25,200
at 2.2 and after that the developer

465
00:24:25,200 --> 00:24:27,360
started to use the custom

466
00:24:27,360 --> 00:24:30,720
compression plus rc4 and

467
00:24:30,720 --> 00:24:32,799
the number of remote commands has not

468
00:24:32,799 --> 00:24:33,919
been changed

469
00:24:33,919 --> 00:24:36,960
so much and just one trivial command

470
00:24:36,960 --> 00:24:41,200
is added from a 3d one

471
00:24:41,760 --> 00:24:45,200
so uh in wonder 21 exq is

472
00:24:45,200 --> 00:24:47,679
embedded in a resource section without

473
00:24:47,679 --> 00:24:49,279
any encryption and just

474
00:24:49,279 --> 00:24:52,240
p file format and so uh this is very

475
00:24:52,240 --> 00:24:53,919
clear for us

476
00:24:53,919 --> 00:24:57,200
and on the other hand uh in 3d 21

477
00:24:57,200 --> 00:25:00,240
execute code is a encrypted by

478
00:25:00,240 --> 00:25:01,279
singlebyte

479
00:25:01,279 --> 00:25:04,480
excel so uh this approach is a

480
00:25:04,480 --> 00:25:07,520
different but the decrypted code in

481
00:25:07,520 --> 00:25:08,159
memory

482
00:25:08,159 --> 00:25:11,760
is actually almost the same

483
00:25:11,760 --> 00:25:14,400
and there are there are other some uh

484
00:25:14,400 --> 00:25:14,880
parts

485
00:25:14,880 --> 00:25:17,760
uh that has not been changed uh one is

486
00:25:17,760 --> 00:25:19,760
the configuration decryption

487
00:25:19,760 --> 00:25:23,039
so uh for over 10 years single byte x4

488
00:25:23,039 --> 00:25:23,840
is used

489
00:25:23,840 --> 00:25:27,880
to decrypt the configuration and loading

490
00:25:27,880 --> 00:25:31,279
snpdls this this code

491
00:25:31,279 --> 00:25:35,200
also has not been changed

492
00:25:36,159 --> 00:25:39,279
so uh as i mentioned uh the traffic

493
00:25:39,279 --> 00:25:42,159
with ascension server started to study

494
00:25:42,159 --> 00:25:44,240
to be encrypted by using a custom

495
00:25:44,240 --> 00:25:46,640
compression plus rc4

496
00:25:46,640 --> 00:25:50,960
and rc4 key is embedded in the binary

497
00:25:50,960 --> 00:25:55,279
and esq also supports

498
00:25:55,279 --> 00:25:57,520
uh open source uh compression library uh

499
00:25:57,520 --> 00:26:00,720
called ap rib

500
00:26:01,200 --> 00:26:04,559
uh so here uh i will show a execute

501
00:26:04,559 --> 00:26:05,919
route and the cnc

502
00:26:05,919 --> 00:26:09,120
uh interactions uh which i wrote

503
00:26:09,120 --> 00:26:13,360
from reverse engineering for poc

504
00:26:22,840 --> 00:26:24,240
purposes

505
00:26:24,240 --> 00:26:27,440
here the window at the top is the cnc

506
00:26:27,440 --> 00:26:28,400
panel

507
00:26:28,400 --> 00:26:31,679
i'm sorry for not fancy one

508
00:26:31,679 --> 00:26:35,679
i wrote for psg purpose

509
00:26:35,679 --> 00:26:39,039
and now i

510
00:26:39,039 --> 00:26:43,840
start the reasoning port 8005

511
00:26:44,559 --> 00:26:48,799
and waiting for our client connections

512
00:26:49,520 --> 00:26:53,440
now our client connected and i can send

513
00:26:53,440 --> 00:26:55,600
some remote command to complete my

514
00:26:55,600 --> 00:26:58,080
device

515
00:26:59,360 --> 00:27:01,840
and i check the computer by device

516
00:27:01,840 --> 00:27:02,960
information

517
00:27:02,960 --> 00:27:05,520
now i can see compare my device host

518
00:27:05,520 --> 00:27:07,760
name and the system directory

519
00:27:07,760 --> 00:27:11,279
and the cpu and memory and uptime

520
00:27:11,279 --> 00:27:14,559
and the bitcoin table and communication

521
00:27:14,559 --> 00:27:17,279
business server

522
00:27:19,440 --> 00:27:23,600
and i checked the configure the cnc

523
00:27:23,600 --> 00:27:26,240
information

524
00:27:28,480 --> 00:27:31,360
now i can see a solution c servers

525
00:27:31,360 --> 00:27:32,840
configured in this

526
00:27:32,840 --> 00:27:35,840
execute

527
00:27:40,399 --> 00:27:43,120
and i will open a remote shell on the

528
00:27:43,120 --> 00:27:46,080
compromise device

529
00:27:47,600 --> 00:27:50,640
and now i can run any uh

530
00:27:50,640 --> 00:27:55,679
arbitrary windows commands like who am i

531
00:27:55,679 --> 00:27:58,320
and i can see the username of the

532
00:27:58,320 --> 00:28:00,880
complete device

533
00:28:00,880 --> 00:28:04,640
and i will change the current directory

534
00:28:04,640 --> 00:28:07,600
to c drive

535
00:28:10,320 --> 00:28:13,520
and i can run the netstat command

536
00:28:13,520 --> 00:28:17,840
to check the open port

537
00:28:19,679 --> 00:28:31,840
okay so this is the end of the demo

538
00:28:33,039 --> 00:28:36,399
so uh i want to talk about

539
00:28:36,399 --> 00:28:40,320
another router which was used recently

540
00:28:40,320 --> 00:28:44,080
um this route is developed on the open

541
00:28:44,080 --> 00:28:44,640
source

542
00:28:44,640 --> 00:28:48,159
route called stitch stitch is a python

543
00:28:48,159 --> 00:28:49,279
based route

544
00:28:49,279 --> 00:28:52,799
which can run on a cross platform

545
00:28:52,799 --> 00:28:56,480
and and in this attack windows client

546
00:28:56,480 --> 00:29:00,320
was used to compromise the platform

547
00:29:00,320 --> 00:29:03,440
and the developer of the custom stitch

548
00:29:03,440 --> 00:29:06,720
added some changes in the code

549
00:29:06,720 --> 00:29:09,760
and our attribution of this rod

550
00:29:09,760 --> 00:29:12,880
with tip group is a medium confidence

551
00:29:12,880 --> 00:29:16,960
from a same target so this custom stitch

552
00:29:16,960 --> 00:29:20,080
was used to attack the enterprise

553
00:29:20,080 --> 00:29:23,279
t-group adapter before and there are

554
00:29:23,279 --> 00:29:23,760
some

555
00:29:23,760 --> 00:29:26,000
common techniques in the custom stitch

556
00:29:26,000 --> 00:29:27,679
code and

557
00:29:27,679 --> 00:29:31,440
same with the tick other toolset

558
00:29:34,159 --> 00:29:37,120
so one common technique is a global id

559
00:29:37,120 --> 00:29:38,320
collection

560
00:29:38,320 --> 00:29:41,440
custom stitch and the esq correct the

561
00:29:41,440 --> 00:29:42,399
global ip

562
00:29:42,399 --> 00:29:45,600
of the compliant device by accessing the

563
00:29:45,600 --> 00:29:48,879
global ip check site

564
00:29:49,520 --> 00:29:52,840
and the another common technique is

565
00:29:52,840 --> 00:29:55,919
derivative custom stitch and dashboard

566
00:29:55,919 --> 00:29:58,080
are used as three vertical wine of the

567
00:29:58,080 --> 00:30:02,240
field parameter field delimiters

568
00:30:04,080 --> 00:30:07,279
so a custom stitch actually a stitch is

569
00:30:07,279 --> 00:30:08,880
a cross proton rod

570
00:30:08,880 --> 00:30:12,559
and to run a windows platform

571
00:30:12,559 --> 00:30:15,279
the stitch needs to be converted to a

572
00:30:15,279 --> 00:30:16,080
windows

573
00:30:16,080 --> 00:30:20,320
exe file generally by using a py2 exe

574
00:30:20,320 --> 00:30:24,159
open and in the converted exe

575
00:30:24,159 --> 00:30:27,279
the python byte code is embedded in the

576
00:30:27,279 --> 00:30:30,559
resource sections however uh there are

577
00:30:30,559 --> 00:30:31,200
no

578
00:30:31,200 --> 00:30:33,919
python bytecode in the resource section

579
00:30:33,919 --> 00:30:36,159
of the custom of tetrad

580
00:30:36,159 --> 00:30:39,440
the developer changes really

581
00:30:39,440 --> 00:30:43,360
to convert a windows exe and

582
00:30:43,360 --> 00:30:46,799
custom stitch that tried to find an

583
00:30:46,799 --> 00:30:47,919
encrypted pro

584
00:30:47,919 --> 00:30:50,559
by searching for stat mark and the end

585
00:30:50,559 --> 00:30:51,760
mark

586
00:30:51,760 --> 00:30:55,200
and after finding encrypted probe it

587
00:30:55,200 --> 00:30:58,799
decrypts the python byte code by using a

588
00:30:58,799 --> 00:31:00,720
single byte xor

589
00:31:00,720 --> 00:31:04,480
so there are there are some nice tools

590
00:31:04,480 --> 00:31:07,679
to unpack the python source code from a

591
00:31:07,679 --> 00:31:09,440
converted exe

592
00:31:09,440 --> 00:31:12,720
but unfortunately uh these two uh don't

593
00:31:12,720 --> 00:31:13,200
work

594
00:31:13,200 --> 00:31:16,559
for this case and we need some manual

595
00:31:16,559 --> 00:31:17,279
works

596
00:31:17,279 --> 00:31:20,480
to retrieve a python source so

597
00:31:20,480 --> 00:31:23,679
by writing the simple python script

598
00:31:23,679 --> 00:31:26,960
and the i used uncompiled six python

599
00:31:26,960 --> 00:31:27,679
module

600
00:31:27,679 --> 00:31:32,080
to retrieve the source code

601
00:31:32,080 --> 00:31:34,559
and regarding a traffic communications

602
00:31:34,559 --> 00:31:36,000
the developer added

603
00:31:36,000 --> 00:31:39,440
just one traffic flow to the original

604
00:31:39,440 --> 00:31:42,880
original stitch traffic flow so

605
00:31:42,880 --> 00:31:45,440
after establishing a connection with a

606
00:31:45,440 --> 00:31:46,000
cnc

607
00:31:46,000 --> 00:31:49,440
server the custom stitch client uploads

608
00:31:49,440 --> 00:31:52,159
the compromise device information

609
00:31:52,159 --> 00:31:53,120
encrypted by

610
00:31:53,120 --> 00:31:57,600
rc4 plus base64 we speak great that

611
00:31:57,600 --> 00:32:01,200
is used for filtering of the

612
00:32:01,200 --> 00:32:05,039
target so by receiving

613
00:32:05,039 --> 00:32:08,320
this compromise device information a cnc

614
00:32:08,320 --> 00:32:09,120
server

615
00:32:09,120 --> 00:32:12,799
this determines the connection

616
00:32:12,799 --> 00:32:16,080
can be accepted or not

617
00:32:17,200 --> 00:32:21,279
so uh again i show the custom stitch

618
00:32:21,279 --> 00:32:22,960
route and the center c

619
00:32:22,960 --> 00:32:29,840
interaction for demo

620
00:32:38,240 --> 00:32:41,440
so i run custom stitches in control

621
00:32:41,440 --> 00:32:42,880
panel

622
00:32:42,880 --> 00:32:46,159
and i will change everything port to

623
00:32:46,159 --> 00:32:48,640
80

624
00:32:50,240 --> 00:32:53,600
and now cnc server is

625
00:32:53,600 --> 00:32:57,760
waiting for a client connection

626
00:32:57,760 --> 00:33:00,320
now the compromise device information

627
00:33:00,320 --> 00:33:02,640
was uploaded

628
00:33:02,640 --> 00:33:05,279
and this random string is used for a

629
00:33:05,279 --> 00:33:06,559
sort of encryption

630
00:33:06,559 --> 00:33:10,080
and this is a global ip username

631
00:33:10,080 --> 00:33:12,399
computer name and the windows os

632
00:33:12,399 --> 00:33:14,640
versions

633
00:33:14,640 --> 00:33:17,840
and the local iprs

634
00:33:17,840 --> 00:33:21,760
after that i will open the remote shell

635
00:33:21,760 --> 00:33:25,840
on the component device

636
00:33:26,960 --> 00:33:30,320
and now i can run the prepared

637
00:33:30,320 --> 00:33:34,159
useful command by original stitch lot

638
00:33:34,159 --> 00:33:37,440
and i can run any windows

639
00:33:37,440 --> 00:33:40,399
arbitrary commands

640
00:33:49,760 --> 00:33:54,240
okay so at the end of this demo

641
00:33:58,799 --> 00:34:02,320
so uh why tick grouper continue to use a

642
00:34:02,320 --> 00:34:06,480
legacy tool or code we speak

643
00:34:06,480 --> 00:34:08,480
the simple reason is just still are

644
00:34:08,480 --> 00:34:09,679
effective

645
00:34:09,679 --> 00:34:11,679
and the memory space is still a sweet

646
00:34:11,679 --> 00:34:13,760
spot for adversaries

647
00:34:13,760 --> 00:34:16,879
and especially in post-exploit phase i

648
00:34:16,879 --> 00:34:18,159
think

649
00:34:18,159 --> 00:34:20,960
and developers favorite coding style

650
00:34:20,960 --> 00:34:24,480
haven't been changed in a memory

651
00:34:24,480 --> 00:34:26,800
uh i think one one reason is just

652
00:34:26,800 --> 00:34:28,879
operators are not concerned about

653
00:34:28,879 --> 00:34:32,079
it they don't care as long as

654
00:34:32,079 --> 00:34:34,879
it works well and not being found by the

655
00:34:34,879 --> 00:34:37,918
target or the security vendors

656
00:34:37,918 --> 00:34:41,119
and so uh some

657
00:34:41,119 --> 00:34:43,760
developer favorite style like a mutex

658
00:34:43,760 --> 00:34:44,399
name

659
00:34:44,399 --> 00:34:47,760
encryption key and a substitution table

660
00:34:47,760 --> 00:34:49,359
configuration structure

661
00:34:49,359 --> 00:34:53,359
and the api usage are sometimes a left

662
00:34:53,359 --> 00:34:56,879
same for a long time and that those

663
00:34:56,879 --> 00:34:58,560
information can be very

664
00:34:58,560 --> 00:35:01,760
valuable for us to find or hunt

665
00:35:01,760 --> 00:35:06,000
the other adversaries activities

666
00:35:07,839 --> 00:35:10,560
so uh quickly i want to look at the

667
00:35:10,560 --> 00:35:12,720
operator side

668
00:35:12,720 --> 00:35:15,440
so not every operator is a well

669
00:35:15,440 --> 00:35:16,560
experienced

670
00:35:16,560 --> 00:35:20,079
and early hacker so sometimes

671
00:35:20,079 --> 00:35:23,440
the operators need need a help command

672
00:35:23,440 --> 00:35:26,640
to check how to use it

673
00:35:26,640 --> 00:35:30,000
and in some in one case

674
00:35:30,000 --> 00:35:33,760
um the same two have been used

675
00:35:33,760 --> 00:35:37,200
for a couple years uh one example is a

676
00:35:37,200 --> 00:35:38,320
upx packed

677
00:35:38,320 --> 00:35:41,760
winrar command and this uh upx pack the

678
00:35:41,760 --> 00:35:43,119
rackmount

679
00:35:43,119 --> 00:35:46,320
has been used for a couple years

680
00:35:46,320 --> 00:35:50,079
so uh like this information

681
00:35:50,079 --> 00:35:53,280
also can be available for us

682
00:35:53,280 --> 00:35:59,359
to find the malicious activities

683
00:35:59,359 --> 00:36:02,960
okay so uh i'll grow as closing

684
00:36:02,960 --> 00:36:05,920
i want to talk some takeaways from uh

685
00:36:05,920 --> 00:36:08,480
one cyber spinach case

686
00:36:08,480 --> 00:36:12,160
so now uh they they are shifting attack

687
00:36:12,160 --> 00:36:13,040
vector to

688
00:36:13,040 --> 00:36:17,119
oversee branches as uh hajime mentioned

689
00:36:17,119 --> 00:36:20,240
branch offices oversee branch offices

690
00:36:20,240 --> 00:36:22,880
tend to be arrest security awareness

691
00:36:22,880 --> 00:36:24,839
compared with the headquarter

692
00:36:24,839 --> 00:36:28,079
regions and thick grouper use

693
00:36:28,079 --> 00:36:31,440
a very simple downloader it's just

694
00:36:31,440 --> 00:36:33,680
download a file from external server and

695
00:36:33,680 --> 00:36:35,040
execute it

696
00:36:35,040 --> 00:36:39,040
so sometimes this kind of a file is a

697
00:36:39,040 --> 00:36:42,079
difficult to be detected by the

698
00:36:42,079 --> 00:36:42,880
antivirus

699
00:36:42,880 --> 00:36:47,520
products because of its simple features

700
00:36:47,520 --> 00:36:49,760
and we need a mindset over being a

701
00:36:49,760 --> 00:36:51,680
compromiser eventually

702
00:36:51,680 --> 00:36:56,640
and we should prepare for the compromise

703
00:36:56,640 --> 00:37:00,400
which happened in some day and the main

704
00:37:00,400 --> 00:37:01,520
payload analysis is

705
00:37:01,520 --> 00:37:05,599
more challenging now the batteries

706
00:37:05,599 --> 00:37:09,200
is very very cautious

707
00:37:09,200 --> 00:37:12,800
to transmit a second pay road and

708
00:37:12,800 --> 00:37:16,400
filter the target very carefully so uh

709
00:37:16,400 --> 00:37:19,599
so it's very difficult for researchers

710
00:37:19,599 --> 00:37:20,480
like us

711
00:37:20,480 --> 00:37:23,520
to get a second payroll and uh

712
00:37:23,520 --> 00:37:28,800
adversaries ttp in a after post export

713
00:37:28,800 --> 00:37:31,680
so uh only target can get three taxes

714
00:37:31,680 --> 00:37:32,960
ttp

715
00:37:32,960 --> 00:37:35,839
and their internal intelligence because

716
00:37:35,839 --> 00:37:36,800
becomes more

717
00:37:36,800 --> 00:37:39,119
important and the corporate with the

718
00:37:39,119 --> 00:37:41,040
trusted partner is also now

719
00:37:41,040 --> 00:37:44,560
important t group compromised a

720
00:37:44,560 --> 00:37:46,160
legitimate website and

721
00:37:46,160 --> 00:37:49,440
misused as a cnc server

722
00:37:49,440 --> 00:37:52,400
uh it is very tough for network sensors

723
00:37:52,400 --> 00:37:55,119
to find a malicious traffic

724
00:37:55,119 --> 00:37:58,400
and after establishing the foothold

725
00:37:58,400 --> 00:38:00,880
the operator uses a living of the run

726
00:38:00,880 --> 00:38:01,839
binary

727
00:38:01,839 --> 00:38:05,040
and some are general tools so

728
00:38:05,040 --> 00:38:08,400
uh we should not focus on only adult

729
00:38:08,400 --> 00:38:10,800
right grammar a detection or just a

730
00:38:10,800 --> 00:38:13,440
census over ibrs

731
00:38:13,440 --> 00:38:16,800
instead of that we should

732
00:38:16,800 --> 00:38:19,760
we should take some approaches to find

733
00:38:19,760 --> 00:38:21,040
anomaly

734
00:38:21,040 --> 00:38:24,480
uh using our using some techniques like

735
00:38:24,480 --> 00:38:26,640
logo correlation or machine learning

736
00:38:26,640 --> 00:38:29,040
approach

737
00:38:29,040 --> 00:38:32,160
and developers are not operators

738
00:38:32,160 --> 00:38:34,880
so uh sometimes the developer favorite

739
00:38:34,880 --> 00:38:35,839
techniques or

740
00:38:35,839 --> 00:38:38,880
coding cells are remnants in a memory

741
00:38:38,880 --> 00:38:41,680
and the operators are not concerned

742
00:38:41,680 --> 00:38:42,240
about it

743
00:38:42,240 --> 00:38:45,760
about it so uh

744
00:38:45,760 --> 00:38:48,720
some valuable traits uh information that

745
00:38:48,720 --> 00:38:51,680
we can find in a memory space

746
00:38:51,680 --> 00:38:54,720
and we can use it uh to have the hunt

747
00:38:54,720 --> 00:38:55,440
and the found

748
00:38:55,440 --> 00:38:58,640
find the adversary's activities uh in

749
00:38:58,640 --> 00:39:02,560
early stage so uh

750
00:39:02,560 --> 00:39:04,960
that's all from us thank you for your

751
00:39:04,960 --> 00:39:05,920
attention and

752
00:39:05,920 --> 00:39:15,839
thank you for your time thank you

753
00:39:16,000 --> 00:39:18,079
you

