1
00:00:06,230 --> 00:00:11,780
so hello everyone my name is me

2
00:00:09,350 --> 00:00:15,800
and cough ski and today I am going to

3
00:00:11,780 --> 00:00:16,549
show you some magic of XSS you can know

4
00:00:15,800 --> 00:00:19,640
me from Twitter

5
00:00:16,550 --> 00:00:21,680
my handle is security and B and I work

6
00:00:19,640 --> 00:00:24,080
for the Polish pen testing company that

7
00:00:21,680 --> 00:00:26,240
is called secure Eitam if you have any

8
00:00:24,080 --> 00:00:28,729
questions please ask them via the

9
00:00:26,240 --> 00:00:30,650
inventory app this is because I have

10
00:00:28,730 --> 00:00:32,750
some hearing problems so we might have

11
00:00:30,650 --> 00:00:35,239
some communication problems and when you

12
00:00:32,750 --> 00:00:38,840
write the question down then there is no

13
00:00:35,239 --> 00:00:40,820
doubt what you wanted to ask so what is

14
00:00:38,840 --> 00:00:44,030
the magic of what kind of magic of

15
00:00:40,820 --> 00:00:46,670
exercise I'd like to show you well

16
00:00:44,030 --> 00:00:50,059
basically when we talk about exercise

17
00:00:46,670 --> 00:00:54,860
about cross-site scripting we talk about

18
00:00:50,059 --> 00:00:57,320
a vulnerability that is typically found

19
00:00:54,860 --> 00:00:59,570
in web application here you have the

20
00:00:57,320 --> 00:01:03,049
definition of exercise from Wikipedia

21
00:00:59,570 --> 00:01:04,940
and you can see that it says here that

22
00:01:03,049 --> 00:01:07,820
it is typically found in web

23
00:01:04,940 --> 00:01:10,120
applications and usually when we speak

24
00:01:07,820 --> 00:01:15,229
about exercises we mean web apps

25
00:01:10,120 --> 00:01:19,090
however okay so this is a typical

26
00:01:15,229 --> 00:01:22,399
example of XSS it is that you have a

27
00:01:19,090 --> 00:01:25,549
parameter in the URL that accepts some

28
00:01:22,399 --> 00:01:27,859
kinds of HTML and then this HTML is

29
00:01:25,549 --> 00:01:30,979
reflected in the response this is the

30
00:01:27,859 --> 00:01:34,189
most typical example of exercise you are

31
00:01:30,979 --> 00:01:36,500
able to inject arbitrary HTML tags and

32
00:01:34,189 --> 00:01:40,219
hence you are able to inject arbitrary

33
00:01:36,500 --> 00:01:42,710
JavaScript it doesn't work always this

34
00:01:40,219 --> 00:01:47,960
way but this is the most simple example

35
00:01:42,710 --> 00:01:49,699
and in today's world there is a very

36
00:01:47,960 --> 00:01:53,030
popular framework that is called

37
00:01:49,700 --> 00:01:55,070
electron with which you are able to

38
00:01:53,030 --> 00:01:57,649
write applications the desktop

39
00:01:55,070 --> 00:02:00,109
applications using the same technologies

40
00:01:57,649 --> 00:02:01,549
that you normally use in web so for

41
00:02:00,109 --> 00:02:04,609
instance you can write a desktop

42
00:02:01,549 --> 00:02:10,340
application using HTML Javascript and

43
00:02:04,609 --> 00:02:12,380
CSS and some time ago I was analyzing

44
00:02:10,340 --> 00:02:16,310
the security of application that is

45
00:02:12,380 --> 00:02:19,930
called a hangouts chat and this is an

46
00:02:16,310 --> 00:02:22,569
application that you can use

47
00:02:19,930 --> 00:02:25,269
as a web application and as a desktop

48
00:02:22,569 --> 00:02:28,958
application so you can download hangouts

49
00:02:25,269 --> 00:02:31,000
chat and get started right away so when

50
00:02:28,959 --> 00:02:33,549
you use the application as a web

51
00:02:31,000 --> 00:02:36,609
application then it works in the domain

52
00:02:33,549 --> 00:02:38,859
chat Google Chrome and you can see how

53
00:02:36,609 --> 00:02:43,840
it looks like and then I will try to

54
00:02:38,859 --> 00:02:45,549
open the chat desktop application and on

55
00:02:43,840 --> 00:02:47,739
the Left we can see the web application

56
00:02:45,549 --> 00:02:53,109
on the right we can see the desktop app

57
00:02:47,739 --> 00:02:54,609
and as you can see there are no many

58
00:02:53,109 --> 00:02:58,109
differences between these two apps

59
00:02:54,609 --> 00:03:01,239
actually they look exactly the same and

60
00:02:58,109 --> 00:03:03,849
if you have proxy turned on and you can

61
00:03:01,239 --> 00:03:06,000
see what kind of HTTP requests are being

62
00:03:03,849 --> 00:03:09,339
generated by the desktop application

63
00:03:06,000 --> 00:03:11,859
then you can see that these are exactly

64
00:03:09,340 --> 00:03:13,000
the same requests that the web

65
00:03:11,859 --> 00:03:15,370
application generates

66
00:03:13,000 --> 00:03:19,359
so what is the most important difference

67
00:03:15,370 --> 00:03:22,629
between these two and the difference is

68
00:03:19,359 --> 00:03:25,449
that in case of web application we have

69
00:03:22,629 --> 00:03:28,540
the address bar and the address bar is

70
00:03:25,449 --> 00:03:31,989
actually the only reliable security

71
00:03:28,540 --> 00:03:34,388
indicator to tell if we are able to if

72
00:03:31,989 --> 00:03:38,079
we can trust in this application or not

73
00:03:34,389 --> 00:03:41,470
we can see if it uses HTTPS and we can

74
00:03:38,079 --> 00:03:44,019
see the name of the domain we cannot see

75
00:03:41,470 --> 00:03:46,959
the same thing in the case of the

76
00:03:44,019 --> 00:03:50,129
desktop application so we can trust that

77
00:03:46,959 --> 00:03:54,250
the creator of the application made it

78
00:03:50,129 --> 00:03:56,590
well so that you are not able to

79
00:03:54,250 --> 00:03:59,590
redirect user to other domain because

80
00:03:56,590 --> 00:04:02,099
there is no way for you to verify if in

81
00:03:59,590 --> 00:04:04,780
the right example you are actually in

82
00:04:02,099 --> 00:04:10,780
chat Google Chrome domain or some other

83
00:04:04,780 --> 00:04:12,729
domain so I have an idea because the

84
00:04:10,780 --> 00:04:15,759
desktop application doesn't show the

85
00:04:12,729 --> 00:04:19,659
address bar maybe I will be able to

86
00:04:15,759 --> 00:04:22,240
redirect the user to a malicious domain

87
00:04:19,659 --> 00:04:25,590
and the user will have no way to notice

88
00:04:22,240 --> 00:04:29,910
he will have no idea that he is on the

89
00:04:25,590 --> 00:04:33,960
malicious domain so I start

90
00:04:29,910 --> 00:04:37,650
to test it and the most simple example

91
00:04:33,960 --> 00:04:40,620
was that I can just write down URL in

92
00:04:37,650 --> 00:04:43,080
the chat so maybe if I click on that

93
00:04:40,620 --> 00:04:46,320
link it will get open in the application

94
00:04:43,080 --> 00:04:48,780
hangouts chat however as you can see the

95
00:04:46,320 --> 00:04:50,880
link got actually open in a browser this

96
00:04:48,780 --> 00:04:53,460
is the chrome that was run in the

97
00:04:50,880 --> 00:04:55,710
background that would be too easy to

98
00:04:53,460 --> 00:04:57,989
work but sometimes it is worth to check

99
00:04:55,710 --> 00:05:01,890
the most easy things because sometimes

100
00:04:57,990 --> 00:05:05,460
they work ok however I noticed one

101
00:05:01,890 --> 00:05:08,580
interesting thing is that if I enter a

102
00:05:05,460 --> 00:05:12,630
link to chat Google condo main and then

103
00:05:08,580 --> 00:05:16,740
I press that link it is not opened in

104
00:05:12,630 --> 00:05:19,290
the external browser so links within the

105
00:05:16,740 --> 00:05:21,690
chat Google condom a are open in the

106
00:05:19,290 --> 00:05:23,760
desktop application this is quite

107
00:05:21,690 --> 00:05:30,630
interesting and it will be useful later

108
00:05:23,760 --> 00:05:32,880
I also notice one quite funny thing is

109
00:05:30,630 --> 00:05:36,030
that if I go to the address of chat

110
00:05:32,880 --> 00:05:39,659
Google come a slash web channel slash

111
00:05:36,030 --> 00:05:42,960
events this is some special kind of URL

112
00:05:39,660 --> 00:05:45,930
in that domain then when I click it I go

113
00:05:42,960 --> 00:05:47,580
to the page when an error 400 and there

114
00:05:45,930 --> 00:05:49,290
is no way to go back there is no back

115
00:05:47,580 --> 00:05:51,479
button you cannot go back with any

116
00:05:49,290 --> 00:05:53,220
keyboard shortcuts so you just have to

117
00:05:51,480 --> 00:05:55,110
turn off the application and turn it on

118
00:05:53,220 --> 00:05:59,340
again because you are not able to go

119
00:05:55,110 --> 00:06:02,580
back to the chat that was quite funny ok

120
00:05:59,340 --> 00:06:05,750
so I will open the app again because I

121
00:06:02,580 --> 00:06:13,020
will need it to do some further testing

122
00:06:05,750 --> 00:06:15,360
and I had some idea there is a web

123
00:06:13,020 --> 00:06:18,090
application vulnerability that is called

124
00:06:15,360 --> 00:06:20,970
open redirect it is actually very common

125
00:06:18,090 --> 00:06:24,179
and very simple at the simplest example

126
00:06:20,970 --> 00:06:27,690
is that we have the URL address in which

127
00:06:24,180 --> 00:06:30,240
we can pass the parameter with other URL

128
00:06:27,690 --> 00:06:34,169
address and then we are redirected to

129
00:06:30,240 --> 00:06:37,140
that other URL so I had an idea that

130
00:06:34,169 --> 00:06:39,630
perhaps the Google Chat application

131
00:06:37,140 --> 00:06:41,219
checks if the domain is chat Google

132
00:06:39,630 --> 00:06:42,740
Chrome only in the link

133
00:06:41,220 --> 00:06:44,690
however if

134
00:06:42,740 --> 00:06:47,300
linked on chat google comm would

135
00:06:44,690 --> 00:06:50,380
redirect me to another domain then

136
00:06:47,300 --> 00:06:52,430
perhaps it would not be checked I

137
00:06:50,380 --> 00:06:55,219
decided to verify it

138
00:06:52,430 --> 00:07:00,830
I opened burp the most popular web proxy

139
00:06:55,220 --> 00:07:03,380
I enabled the intercepting and then my I

140
00:07:00,830 --> 00:07:05,300
my idea and my way to check if that

141
00:07:03,380 --> 00:07:08,419
would work is to just go to the

142
00:07:05,300 --> 00:07:12,139
application press refresh and then the

143
00:07:08,419 --> 00:07:13,880
request is being caught by burp and what

144
00:07:12,139 --> 00:07:17,860
I came to now is that I can just

145
00:07:13,880 --> 00:07:22,009
intercept their response to this request

146
00:07:17,860 --> 00:07:25,970
okay and when I do this I'm getting the

147
00:07:22,009 --> 00:07:30,440
response 200 okay and I am just going to

148
00:07:25,970 --> 00:07:34,039
change the type of the response from 200

149
00:07:30,440 --> 00:07:36,080
to 300 and then I'm going to say that it

150
00:07:34,039 --> 00:07:40,099
should redirect to secure rock that

151
00:07:36,080 --> 00:07:42,139
paella so what happens right now is this

152
00:07:40,099 --> 00:07:44,360
is a response from chat Google Conda

153
00:07:42,139 --> 00:07:49,419
main that would redirect to another

154
00:07:44,360 --> 00:07:52,159
domain and what was interesting is that

155
00:07:49,419 --> 00:07:55,219
redirect opened in the desktop

156
00:07:52,159 --> 00:07:57,949
application so this is exactly what I

157
00:07:55,219 --> 00:08:00,800
wanted to achieve because it proves that

158
00:07:57,949 --> 00:08:02,690
I am able to redirect user from chat

159
00:08:00,800 --> 00:08:05,120
Google come to another domain and

160
00:08:02,690 --> 00:08:08,120
because there are no address bar in here

161
00:08:05,120 --> 00:08:12,860
we are not able to tell if you are on a

162
00:08:08,120 --> 00:08:17,150
malicious domain of or a legit one so I

163
00:08:12,860 --> 00:08:20,419
needed to find the open redirect in chat

164
00:08:17,150 --> 00:08:23,049
Google con domain and it proved to be

165
00:08:20,419 --> 00:08:26,270
much easier than I initially thought

166
00:08:23,050 --> 00:08:28,969
because if I have the host chat Google

167
00:08:26,270 --> 00:08:31,969
come and I'm trying to go to any URL

168
00:08:28,969 --> 00:08:34,789
that starts with slash account slash it

169
00:08:31,969 --> 00:08:37,909
gets redirected to accounts Google

170
00:08:34,789 --> 00:08:39,708
Chrome so I am able to get out from the

171
00:08:37,909 --> 00:08:41,630
chat Google Chrome domain two accounts

172
00:08:39,708 --> 00:08:43,669
google.com/design this is not what I

173
00:08:41,630 --> 00:08:45,920
wanted to achieve so far because I

174
00:08:43,669 --> 00:08:48,319
wanted to go to arbitrary domain but

175
00:08:45,920 --> 00:08:51,050
this was a good first step because at

176
00:08:48,320 --> 00:08:52,760
this point I decided to be a little bit

177
00:08:51,050 --> 00:08:56,060
like a script kiddie so I just googled

178
00:08:52,760 --> 00:08:57,939
if there are any known open redirects in

179
00:08:56,060 --> 00:09:02,449
accounts Google come the main and

180
00:08:57,940 --> 00:09:06,190
amazingly there was from 2016 a well

181
00:09:02,450 --> 00:09:11,300
known Google open URL redirection and

182
00:09:06,190 --> 00:09:14,150
this is a Wagner that EU black and here

183
00:09:11,300 --> 00:09:17,689
we have a URL to account Google comm

184
00:09:14,150 --> 00:09:19,939
that with some steps in between we

185
00:09:17,690 --> 00:09:26,060
direct the user to debug more that EU

186
00:09:19,940 --> 00:09:31,970
domain so let's try it so I opened the

187
00:09:26,060 --> 00:09:34,449
chat application and I am just pasting a

188
00:09:31,970 --> 00:09:37,339
link that I prepared earlier

189
00:09:34,450 --> 00:09:39,620
so here I have the link to chat Google

190
00:09:37,339 --> 00:09:42,200
Chrome slash account so it would get

191
00:09:39,620 --> 00:09:44,000
redirected to accounts Google comm then

192
00:09:42,200 --> 00:09:46,430
it would get redirected to App Engine

193
00:09:44,000 --> 00:09:50,600
Google come and then it redirects to

194
00:09:46,430 --> 00:09:52,699
Mankowski that info my own the mine so

195
00:09:50,600 --> 00:09:55,010
the idea is that we send that link to

196
00:09:52,700 --> 00:09:57,200
some user we don't like or some user we

197
00:09:55,010 --> 00:09:59,450
don't we want to get his Google

198
00:09:57,200 --> 00:10:02,510
credentials from and he presses that

199
00:09:59,450 --> 00:10:05,180
link and then oh my god I need to log

200
00:10:02,510 --> 00:10:09,770
into Google again damn it

201
00:10:05,180 --> 00:10:12,439
however this is actually not a real log

202
00:10:09,770 --> 00:10:14,449
on page to Google this is a logon page

203
00:10:12,440 --> 00:10:16,790
that is hosted from my own domain and

204
00:10:14,450 --> 00:10:19,310
there is absolutely no way for you to

205
00:10:16,790 --> 00:10:22,189
tell that this domain is fake because

206
00:10:19,310 --> 00:10:25,640
there is no address bar so we have no

207
00:10:22,190 --> 00:10:28,220
way to do that let's try to do the same

208
00:10:25,640 --> 00:10:30,890
thing in the web application so I will

209
00:10:28,220 --> 00:10:34,520
go to the web application I will refresh

210
00:10:30,890 --> 00:10:37,939
the page it would take a little while

211
00:10:34,520 --> 00:10:41,900
and then I'm pressing that link again

212
00:10:37,940 --> 00:10:45,770
and when I do it of course exactly the

213
00:10:41,900 --> 00:10:48,829
same page is being open so there's the

214
00:10:45,770 --> 00:10:51,890
fake a logon page that is hosted on my

215
00:10:48,830 --> 00:10:54,200
domain however we can look at the

216
00:10:51,890 --> 00:10:56,810
address bar and in the address bar we

217
00:10:54,200 --> 00:10:59,690
clearly see that this is not the alleged

218
00:10:56,810 --> 00:11:01,760
domain so of course it doesn't work for

219
00:10:59,690 --> 00:11:03,740
all users because something like fishing

220
00:11:01,760 --> 00:11:04,900
actually works and works pretty well in

221
00:11:03,740 --> 00:11:08,420
real life

222
00:11:04,900 --> 00:11:09,829
however the address bar at least give us

223
00:11:08,420 --> 00:11:12,530
a way to

224
00:11:09,830 --> 00:11:17,000
if that domain is okay if we can trust

225
00:11:12,530 --> 00:11:19,130
that domain and this was the first back

226
00:11:17,000 --> 00:11:21,290
actually in the Google Hangouts chat

227
00:11:19,130 --> 00:11:23,750
application so that I am able to

228
00:11:21,290 --> 00:11:27,260
redirect user to my own domain I'm able

229
00:11:23,750 --> 00:11:29,870
to steal his or her credentials however

230
00:11:27,260 --> 00:11:33,140
if you pay attention then you make

231
00:11:29,870 --> 00:11:35,510
notice that so far I haven't said a

232
00:11:33,140 --> 00:11:37,310
single word about exercises while the

233
00:11:35,510 --> 00:11:40,310
topic of the presentation is magic of

234
00:11:37,310 --> 00:11:45,079
XSS so where is the magic of XSS so

235
00:11:40,310 --> 00:11:47,270
we're going to go to that the hangouts

236
00:11:45,080 --> 00:11:50,900
chat application is written in electron

237
00:11:47,270 --> 00:11:53,090
so I'm just going to write a simple

238
00:11:50,900 --> 00:11:57,230
election application I am going to do

239
00:11:53,090 --> 00:12:00,950
some good clone then I am going to CD to

240
00:11:57,230 --> 00:12:04,250
that install all the dependencies with

241
00:12:00,950 --> 00:12:08,780
NPM which of course needs to download

242
00:12:04,250 --> 00:12:11,660
many many packages 145 and then I can

243
00:12:08,780 --> 00:12:14,569
check the sources of that page this is

244
00:12:11,660 --> 00:12:17,750
something like a hello world to electron

245
00:12:14,570 --> 00:12:20,450
and this is a very very simple

246
00:12:17,750 --> 00:12:23,150
application we have the HTML we have

247
00:12:20,450 --> 00:12:26,000
some JavaScript so this could be a web

248
00:12:23,150 --> 00:12:28,010
application as well however the

249
00:12:26,000 --> 00:12:30,650
difference between JavaScript in web

250
00:12:28,010 --> 00:12:34,040
applications and the JavaScript in

251
00:12:30,650 --> 00:12:37,160
electron is that we can use node.js

252
00:12:34,040 --> 00:12:41,630
modules in here so as you can see I am

253
00:12:37,160 --> 00:12:43,640
trying to access some node.js variables

254
00:12:41,630 --> 00:12:46,840
like process that persons that node and

255
00:12:43,640 --> 00:12:50,990
at the bottom I'm trying to require some

256
00:12:46,840 --> 00:12:56,270
module and if I open the application

257
00:12:50,990 --> 00:12:58,280
such as NPM start then as you can see I

258
00:12:56,270 --> 00:13:02,569
am getting a desktop application that

259
00:12:58,280 --> 00:13:04,579
looks like web application but I am able

260
00:13:02,570 --> 00:13:09,620
to access and nodejs

261
00:13:04,580 --> 00:13:14,590
modules so what guy what I can also do

262
00:13:09,620 --> 00:13:17,720
and I'm going to show it is that I can

263
00:13:14,590 --> 00:13:20,570
require for instance the module that is

264
00:13:17,720 --> 00:13:22,730
called child process so I am going to

265
00:13:20,570 --> 00:13:23,480
require child process and which I

266
00:13:22,730 --> 00:13:26,000
process I

267
00:13:23,480 --> 00:13:27,980
able to execute arbitrary shell commands

268
00:13:26,000 --> 00:13:31,240
so I'm just going to show you that it

269
00:13:27,980 --> 00:13:34,639
works I will execute that comment and

270
00:13:31,240 --> 00:13:40,670
right in the response the output from

271
00:13:34,639 --> 00:13:43,639
that command and when I try to start it

272
00:13:40,670 --> 00:13:46,010
you can see that the ID shall comment

273
00:13:43,639 --> 00:13:48,829
actually executed and I can see the

274
00:13:46,010 --> 00:13:51,230
result so this proves that I am able to

275
00:13:48,829 --> 00:13:55,579
execute arbitrary comments with

276
00:13:51,230 --> 00:13:58,810
JavaScript in electron but life would be

277
00:13:55,579 --> 00:14:01,910
too easy if that would always work

278
00:13:58,810 --> 00:14:04,670
because if we have a look at the main

279
00:14:01,910 --> 00:14:07,219
file of the electron application we can

280
00:14:04,670 --> 00:14:10,160
see an object that is called web

281
00:14:07,220 --> 00:14:12,350
preferences and it has a variable that

282
00:14:10,160 --> 00:14:15,310
is called node integration and note

283
00:14:12,350 --> 00:14:18,490
integration by default is equal to true

284
00:14:15,310 --> 00:14:22,130
however many real-life applications

285
00:14:18,490 --> 00:14:24,829
actually change it to false so when I

286
00:14:22,130 --> 00:14:30,319
change it to false now I am no longer

287
00:14:24,829 --> 00:14:32,300
able to access the node modules we can

288
00:14:30,319 --> 00:14:34,870
see that I will just try to run the

289
00:14:32,300 --> 00:14:37,519
application again

290
00:14:34,870 --> 00:14:41,959
and when I do this again as you can see

291
00:14:37,519 --> 00:14:45,139
there is no result of ID anymore and I

292
00:14:41,959 --> 00:14:47,660
didn't find a way to bypass it I didn't

293
00:14:45,139 --> 00:14:51,410
find a way to bypass the missing node

294
00:14:47,660 --> 00:14:53,990
integration however sometime after

295
00:14:51,410 --> 00:14:56,660
publishing in my blog the information

296
00:14:53,990 --> 00:14:58,910
about this bug another guy that is

297
00:14:56,660 --> 00:15:01,189
called Matt Osteen he has some amazing

298
00:14:58,910 --> 00:15:03,560
research on election applications and

299
00:15:01,190 --> 00:15:06,709
other technologies that works the in a

300
00:15:03,560 --> 00:15:10,099
similar way he tweeted that he found a

301
00:15:06,709 --> 00:15:12,170
path to full remote code execution it

302
00:15:10,100 --> 00:15:15,110
that Google Hangouts chat application

303
00:15:12,170 --> 00:15:17,329
and what was interesting is that he

304
00:15:15,110 --> 00:15:20,510
didn't find a security issue in hangouts

305
00:15:17,329 --> 00:15:26,050
chat he actually found a security issue

306
00:15:20,510 --> 00:15:29,389
in electron itself so what was the issue

307
00:15:26,050 --> 00:15:31,910
if I don't have the node integration

308
00:15:29,389 --> 00:15:33,439
turned on and I cannot access the

309
00:15:31,910 --> 00:15:35,689
following with JavaScript I cannot

310
00:15:33,439 --> 00:15:37,189
require try to process because the

311
00:15:35,689 --> 00:15:42,079
function required is

312
00:15:37,190 --> 00:15:44,450
then not defined however I can run a new

313
00:15:42,080 --> 00:15:46,880
about blank window it worked for some

314
00:15:44,450 --> 00:15:49,610
reason opening any other window wouldn't

315
00:15:46,880 --> 00:15:52,189
work but opening this window worked that

316
00:15:49,610 --> 00:15:54,680
was interesting and that window of

317
00:15:52,190 --> 00:15:57,320
course didn't have the note integration

318
00:15:54,680 --> 00:16:00,530
set to true however and this is pretty

319
00:15:57,320 --> 00:16:03,260
funny when you open another window from

320
00:16:00,530 --> 00:16:05,510
that about blank the second window opens

321
00:16:03,260 --> 00:16:08,600
with note integration set to true by

322
00:16:05,510 --> 00:16:12,140
default this was actually a security

323
00:16:08,600 --> 00:16:15,770
issue in electron and it was possible to

324
00:16:12,140 --> 00:16:19,030
bypass all the secure web preferences

325
00:16:15,770 --> 00:16:22,670
that you said before so let's check it

326
00:16:19,030 --> 00:16:27,290
I'm going to modify the earlier example

327
00:16:22,670 --> 00:16:29,900
a little bit so I'm going to add some

328
00:16:27,290 --> 00:16:32,810
script I need to open the about blank

329
00:16:29,900 --> 00:16:35,780
window which also works if I pass an

330
00:16:32,810 --> 00:16:40,130
empty script an empty string and then

331
00:16:35,780 --> 00:16:43,760
I'm going to do at the second open at

332
00:16:40,130 --> 00:16:48,620
first I am going to include the child

333
00:16:43,760 --> 00:16:50,480
process module and then I can just run

334
00:16:48,620 --> 00:16:53,390
what we usually run and whether we want

335
00:16:50,480 --> 00:16:55,820
to prove the remote code execution on

336
00:16:53,390 --> 00:16:58,970
computer or end-user computer is that I

337
00:16:55,820 --> 00:17:00,740
open the calculator so I will open the

338
00:16:58,970 --> 00:17:03,710
calculator that will be to prove that it

339
00:17:00,740 --> 00:17:06,849
works I also try to execute the ID

340
00:17:03,710 --> 00:17:09,730
function and to alert its result and

341
00:17:06,849 --> 00:17:12,649
then I just need to close the script and

342
00:17:09,730 --> 00:17:14,990
this scenario of the attack is exactly

343
00:17:12,650 --> 00:17:17,600
the same as before I just need to send

344
00:17:14,990 --> 00:17:20,240
my victim a link that points to my

345
00:17:17,599 --> 00:17:22,579
domain and on my domain there's my own

346
00:17:20,240 --> 00:17:24,770
JavaScript code that will actually

347
00:17:22,579 --> 00:17:30,260
execute arbitrary comments on the

348
00:17:24,770 --> 00:17:34,370
computer of my Victim let's check it so

349
00:17:30,260 --> 00:17:37,000
I'm going to save it in vim then run the

350
00:17:34,370 --> 00:17:37,000
application again

351
00:17:38,290 --> 00:17:44,350
and I just realized that there is some

352
00:17:42,520 --> 00:17:47,470
information disclosure in the background

353
00:17:44,350 --> 00:17:50,290
of files on my server but never mind

354
00:17:47,470 --> 00:17:53,380
and so we just sent the victim the link

355
00:17:50,290 --> 00:17:57,070
and the victim just needs to click that

356
00:17:53,380 --> 00:17:59,950
link and bam calculator opens the other

357
00:17:57,070 --> 00:18:02,649
command opens so I am actually able to

358
00:17:59,950 --> 00:18:05,440
execute arbitrary comment on any user

359
00:18:02,650 --> 00:18:08,500
computer abusing the fact that I was

360
00:18:05,440 --> 00:18:15,700
able to redirect him or her to my own

361
00:18:08,500 --> 00:18:18,460
domain so as you can see electron is

362
00:18:15,700 --> 00:18:20,350
pretty popular because it makes it

363
00:18:18,460 --> 00:18:22,240
possible to write desktop application

364
00:18:20,350 --> 00:18:27,840
using the same technologies that we use

365
00:18:22,240 --> 00:18:30,910
in web so HTML Javascript and CSS

366
00:18:27,840 --> 00:18:33,129
however this creates a new attack

367
00:18:30,910 --> 00:18:36,160
surface so because of the missing

368
00:18:33,130 --> 00:18:39,880
address bar we are able to make phishing

369
00:18:36,160 --> 00:18:42,580
much more believable and also cross-site

370
00:18:39,880 --> 00:18:46,590
scripting in many ways could be easily

371
00:18:42,580 --> 00:18:49,139
transformed to remote code execution

372
00:18:46,590 --> 00:18:52,530
I will check if there are any questions

373
00:18:49,140 --> 00:18:52,530
at this point

374
00:18:54,390 --> 00:19:00,280
okay no questions

375
00:18:56,920 --> 00:19:02,620
perhaps they are moderated okay so I

376
00:19:00,280 --> 00:19:06,040
will just leave it for a while because I

377
00:19:02,620 --> 00:19:09,270
am pretty quick on time so I'm just

378
00:19:06,040 --> 00:19:12,070
going to show you another interesting

379
00:19:09,270 --> 00:19:15,300
security issue that is pretty pretty

380
00:19:12,070 --> 00:19:18,429
pretty fresh that I found in Google

381
00:19:15,300 --> 00:19:21,430
Chrome Canary I have shown it yesterday

382
00:19:18,430 --> 00:19:26,260
in the community corner but I have some

383
00:19:21,430 --> 00:19:30,010
time so I can show it again and this is

384
00:19:26,260 --> 00:19:33,910
a security issue that I found in a new

385
00:19:30,010 --> 00:19:36,340
HTML element that is called portal does

386
00:19:33,910 --> 00:19:41,650
anyone know what portal is or heard

387
00:19:36,340 --> 00:19:44,500
about the portals I cannot see I guess

388
00:19:41,650 --> 00:19:46,780
anyone okay so I will going to show you

389
00:19:44,500 --> 00:19:50,200
what portal is and then what you can do

390
00:19:46,780 --> 00:19:56,690
with a portal

391
00:19:50,200 --> 00:19:59,570
so give me a second okay so basically I

392
00:19:56,690 --> 00:20:03,799
can create a portal that points to some

393
00:19:59,570 --> 00:20:13,428
domain like security um that PL and when

394
00:20:03,799 --> 00:20:17,990
I open the page okay it works very

395
00:20:13,429 --> 00:20:20,530
similar to iframes as you can see the

396
00:20:17,990 --> 00:20:24,650
security on that PL web page was just

397
00:20:20,530 --> 00:20:27,200
embedded within the page so this is

398
00:20:24,650 --> 00:20:29,030
something like iframes so the question

399
00:20:27,200 --> 00:20:32,150
is what are the difference between sport

400
00:20:29,030 --> 00:20:33,820
between portals and iframes and there

401
00:20:32,150 --> 00:20:40,090
are a few significant difference

402
00:20:33,820 --> 00:20:43,549
differences and the first one is that

403
00:20:40,090 --> 00:20:45,889
you cannot access the Dom tree of a

404
00:20:43,549 --> 00:20:48,889
portal so you don't have content window

405
00:20:45,890 --> 00:20:51,890
or content document as in portals as in

406
00:20:48,890 --> 00:20:55,130
iframes in portal you cannot do that the

407
00:20:51,890 --> 00:20:57,260
only way to communicate with the

408
00:20:55,130 --> 00:20:59,659
embedded content is to use the post

409
00:20:57,260 --> 00:21:04,190
message so using the synchronous

410
00:20:59,659 --> 00:21:09,020
communication however the main feature

411
00:21:04,190 --> 00:21:12,530
of portal is that a portal oops some

412
00:21:09,020 --> 00:21:16,100
spoiler it that portal you can activate

413
00:21:12,530 --> 00:21:17,960
and when you activate the portal there's

414
00:21:16,100 --> 00:21:20,719
something that is pretty unique that

415
00:21:17,960 --> 00:21:24,169
happens that you were not able to do

416
00:21:20,720 --> 00:21:27,679
before is that the portal suddenly be

417
00:21:24,169 --> 00:21:30,500
kind becomes the top frame so it is not

418
00:21:27,679 --> 00:21:34,640
we rendered it just jumps from being in

419
00:21:30,500 --> 00:21:38,750
a portal to being a top frame and there

420
00:21:34,640 --> 00:21:40,970
is an interesting example in the

421
00:21:38,750 --> 00:21:44,780
official documentation of portals I'm

422
00:21:40,970 --> 00:21:49,210
going to show you that if I try to open

423
00:21:44,780 --> 00:21:49,210
some page in portal like security on PL

424
00:21:51,679 --> 00:21:56,929
it that opens in the bottom part of the

425
00:21:54,500 --> 00:22:00,049
page and when I click it you can see

426
00:21:56,929 --> 00:22:02,230
that it immediately goes as I top frame

427
00:22:00,049 --> 00:22:08,120
this is the pretty unique feature of

428
00:22:02,230 --> 00:22:13,309
portals okay so I have prepared a page

429
00:22:08,120 --> 00:22:20,239
that is called portal playground I'm

430
00:22:13,309 --> 00:22:24,649
going to show it okay so here I can

431
00:22:20,240 --> 00:22:27,409
input some address like security on PL

432
00:22:24,649 --> 00:22:29,750
and then the same address is being open

433
00:22:27,409 --> 00:22:34,010
in portal and an iframe so that I can

434
00:22:29,750 --> 00:22:36,020
see what are the differences and as you

435
00:22:34,010 --> 00:22:37,850
can see the page didn't open in iframe

436
00:22:36,020 --> 00:22:41,149
but did open in portal

437
00:22:37,850 --> 00:22:43,730
this happens because portal ignores the

438
00:22:41,149 --> 00:22:45,979
extreme options header so you can open

439
00:22:43,730 --> 00:22:48,409
anything in portal whether it had

440
00:22:45,980 --> 00:22:51,049
explained options turned on or off it

441
00:22:48,409 --> 00:22:54,470
doesn't matter what is also interesting

442
00:22:51,049 --> 00:22:59,480
is that generally you are not able from

443
00:22:54,470 --> 00:23:04,159
HTTP to open file URLs in portals in

444
00:22:59,480 --> 00:23:08,029
iframes however it works with portals as

445
00:23:04,159 --> 00:23:11,059
you can see I am on HTTP address and I

446
00:23:08,029 --> 00:23:12,740
am able to open file and it's pretty

447
00:23:11,059 --> 00:23:16,850
interesting what is even more

448
00:23:12,740 --> 00:23:19,580
interesting is that I am able to open

449
00:23:16,850 --> 00:23:22,879
the chrome URLs so for instance chrome

450
00:23:19,580 --> 00:23:27,199
version and it also opens here just

451
00:23:22,880 --> 00:23:31,760
everything opens here in fact and that

452
00:23:27,200 --> 00:23:36,350
made me wonder let's say that I open

453
00:23:31,760 --> 00:23:38,750
accounts Google come in portal so

454
00:23:36,350 --> 00:23:41,600
basically when you open something in

455
00:23:38,750 --> 00:23:44,450
portal and you input some address to

456
00:23:41,600 --> 00:23:46,459
portal you are just able to do exactly

457
00:23:44,450 --> 00:23:48,830
the same things that you are able to do

458
00:23:46,460 --> 00:23:51,500
in the address bar so in the address bar

459
00:23:48,830 --> 00:23:53,480
you can open file and you can open file

460
00:23:51,500 --> 00:23:55,370
in portal in the address bar you can

461
00:23:53,480 --> 00:23:58,520
open Chrome you can open chrome in

462
00:23:55,370 --> 00:24:00,979
portals so what you can also do in

463
00:23:58,520 --> 00:24:02,960
address bar is that you can act ran

464
00:24:00,980 --> 00:24:05,299
arbitrary JavaScript

465
00:24:02,960 --> 00:24:08,059
and then this javascript is run in the

466
00:24:05,299 --> 00:24:13,940
domain on which I am currently on so I

467
00:24:08,059 --> 00:24:17,000
can scuba come in this instance so what

468
00:24:13,940 --> 00:24:20,510
would be interesting is to find out if I

469
00:24:17,000 --> 00:24:24,049
am able to execute JavaScript code in

470
00:24:20,510 --> 00:24:25,929
Portal so I didn't get anything the

471
00:24:24,049 --> 00:24:28,340
alert didn't fire

472
00:24:25,929 --> 00:24:30,679
however this happens because the alert

473
00:24:28,340 --> 00:24:33,350
is not allowed to escape the portal I

474
00:24:30,679 --> 00:24:35,510
can try to execute console.log for

475
00:24:33,350 --> 00:24:37,969
instance and as you can see the console

476
00:24:35,510 --> 00:24:41,510
log executed the question that remains

477
00:24:37,970 --> 00:24:46,130
is in what domain this console log

478
00:24:41,510 --> 00:24:49,190
executed and when I try to console log

479
00:24:46,130 --> 00:24:51,260
the human domain you can find out that

480
00:24:49,190 --> 00:24:53,240
it actually executed in domain accounts

481
00:24:51,260 --> 00:24:55,908
Google come which means that it is

482
00:24:53,240 --> 00:24:59,510
actually a same origin policy bypass so

483
00:24:55,909 --> 00:25:02,270
bypass of the most important security

484
00:24:59,510 --> 00:25:04,429
principle in browsers so I am able to

485
00:25:02,270 --> 00:25:08,299
execute JavaScript in any domain so I

486
00:25:04,429 --> 00:25:13,010
can steal data from any domain and what

487
00:25:08,299 --> 00:25:15,470
is also more interesting is that I have

488
00:25:13,010 --> 00:25:17,270
a button here still HTML from Porto this

489
00:25:15,470 --> 00:25:20,600
is a back in chrome that is already

490
00:25:17,270 --> 00:25:22,700
fixed by the way and I am just able to

491
00:25:20,600 --> 00:25:27,080
steal any data from as you can see

492
00:25:22,700 --> 00:25:30,230
accounts Google come but I am NOT only

493
00:25:27,080 --> 00:25:34,610
able to steal data from other domains I

494
00:25:30,230 --> 00:25:37,370
can also run the file protocol and then

495
00:25:34,610 --> 00:25:42,379
when I try to steal HTML I can also

496
00:25:37,370 --> 00:25:44,809
steal the file contents so this was a

497
00:25:42,380 --> 00:25:46,940
bag that made it possible to bypass same

498
00:25:44,809 --> 00:25:50,779
origin policy as well as to read

499
00:25:46,940 --> 00:25:53,870
arbitrary files on the disk of the user

500
00:25:50,779 --> 00:25:56,270
and this was a bug that I reported like

501
00:25:53,870 --> 00:25:59,689
three weeks I go to Google and it was

502
00:25:56,270 --> 00:26:02,149
already fixed and it was given a pretty

503
00:25:59,690 --> 00:26:05,179
nice banty because it was ten thousand

504
00:26:02,149 --> 00:26:09,408
dollars but this is not all what is

505
00:26:05,179 --> 00:26:14,200
interesting with portals because as I

506
00:26:09,409 --> 00:26:17,020
said portal ignores

507
00:26:14,200 --> 00:26:19,660
and explain options so if there is an

508
00:26:17,020 --> 00:26:23,010
interesting attack that you can do with

509
00:26:19,660 --> 00:26:29,320
portals that wouldn't work with iframes

510
00:26:23,010 --> 00:26:31,480
it is called CAPTCHA okay so imagine

511
00:26:29,320 --> 00:26:34,120
that you go to some page and you see

512
00:26:31,480 --> 00:26:36,370
something like that please enter the

513
00:26:34,120 --> 00:26:38,439
CAPTCHA below well this looks pretty

514
00:26:36,370 --> 00:26:41,080
annoying the CAPTCHA is pretty long but

515
00:26:38,440 --> 00:26:45,880
well they want me to enter that CAPTCHA

516
00:26:41,080 --> 00:26:48,580
so I will do that however actually there

517
00:26:45,880 --> 00:26:53,380
is a portal embedded in here and what

518
00:26:48,580 --> 00:26:56,710
this portal shows is my API key to

519
00:26:53,380 --> 00:26:58,390
sudden so I am able to embed the API key

520
00:26:56,710 --> 00:27:00,250
and I just ask someone nicely

521
00:26:58,390 --> 00:27:02,920
hey please reenter your API key for

522
00:27:00,250 --> 00:27:04,840
something because you are not able to

523
00:27:02,920 --> 00:27:07,420
tell if this is API key or this is a

524
00:27:04,840 --> 00:27:08,980
regular CAPTCHA I'm going to reset the

525
00:27:07,420 --> 00:27:16,660
key because there are some cameras going

526
00:27:08,980 --> 00:27:18,460
on so so that it wouldn't work anymore

527
00:27:16,660 --> 00:27:20,440
so as you can see this is an attack you

528
00:27:18,460 --> 00:27:22,240
cannot protect from with portals because

529
00:27:20,440 --> 00:27:24,850
it ignores the extreme options so we

530
00:27:22,240 --> 00:27:27,580
just cannot do anything that's pretty

531
00:27:24,850 --> 00:27:33,969
nice or pretty bad depending on which

532
00:27:27,580 --> 00:27:36,939
side you are in okay I'm going to show

533
00:27:33,970 --> 00:27:41,110
you two more quite funny things because

534
00:27:36,940 --> 00:27:44,170
I still have some time I will use portal

535
00:27:41,110 --> 00:27:46,179
to do port scanning this is pretty

536
00:27:44,170 --> 00:27:48,790
unexpected but this is pretty amazing I

537
00:27:46,180 --> 00:27:50,770
just couldn't believe it when I have

538
00:27:48,790 --> 00:27:55,000
seen that this is actually reliable and

539
00:27:50,770 --> 00:28:01,540
it actually works so I'm going to open

540
00:27:55,000 --> 00:28:04,920
the portal play grant and a portal fires

541
00:28:01,540 --> 00:28:07,270
the unload event when the page is loaded

542
00:28:04,920 --> 00:28:09,430
so I just console.log it

543
00:28:07,270 --> 00:28:15,400
I am console lock how many times the

544
00:28:09,430 --> 00:28:18,310
unload event has been fired and what is

545
00:28:15,400 --> 00:28:22,540
interesting is that basically in browser

546
00:28:18,310 --> 00:28:25,560
I can access some non HTTP ports for

547
00:28:22,540 --> 00:28:29,300
instance I can access the port 3 306

548
00:28:25,560 --> 00:28:31,590
and when I do it of course Crom wouldn't

549
00:28:29,300 --> 00:28:34,740
display anything because this is not

550
00:28:31,590 --> 00:28:39,720
HTTP this is my sequel but it says that

551
00:28:34,740 --> 00:28:41,070
this is invalid HTTP HTTP response when

552
00:28:39,720 --> 00:28:43,230
I try to access

553
00:28:41,070 --> 00:28:47,399
oops when I try to access for instance

554
00:28:43,230 --> 00:28:49,020
three 307 then we have connection

555
00:28:47,400 --> 00:28:53,970
refused which means that the port is

556
00:28:49,020 --> 00:28:55,710
closed when I go to three 308 the part

557
00:28:53,970 --> 00:28:57,840
is filtered on the firewall it is

558
00:28:55,710 --> 00:29:01,080
dropped so I won't get any answer in a

559
00:28:57,840 --> 00:29:05,189
while so let's check it in portal what

560
00:29:01,080 --> 00:29:09,990
happens in portal so I try to open in

561
00:29:05,190 --> 00:29:14,370
portal security on home pr3 306 and the

562
00:29:09,990 --> 00:29:15,810
unload event fires four times this means

563
00:29:14,370 --> 00:29:18,209
that the port is open it can fire

564
00:29:15,810 --> 00:29:22,080
another few times but generally the

565
00:29:18,210 --> 00:29:25,260
number is even however when I try to

566
00:29:22,080 --> 00:29:29,189
open a port a port that is closed like

567
00:29:25,260 --> 00:29:34,200
three 307 then the even fires three

568
00:29:29,190 --> 00:29:37,320
times not two not four but three so as

569
00:29:34,200 --> 00:29:41,040
you can see I am able to tell what is

570
00:29:37,320 --> 00:29:43,919
the state of the port basic it on the

571
00:29:41,040 --> 00:29:46,379
number of how many times the unload

572
00:29:43,920 --> 00:29:48,150
event fired I couldn't believe that is

573
00:29:46,380 --> 00:29:50,670
actually repeatable and it always

574
00:29:48,150 --> 00:29:53,000
happens the same way I have no idea what

575
00:29:50,670 --> 00:29:56,760
it Wyatt fires three times or two times

576
00:29:53,000 --> 00:29:59,760
but it works every single time I'm going

577
00:29:56,760 --> 00:30:03,210
to show you a page that is called port

578
00:29:59,760 --> 00:30:06,180
scan and I define a method that is

579
00:30:03,210 --> 00:30:09,510
called scan port and I will try to scan

580
00:30:06,180 --> 00:30:14,550
three 3:06 oh this is a promise so I

581
00:30:09,510 --> 00:30:19,100
need to await so unload fired four times

582
00:30:14,550 --> 00:30:19,100
so it means that the poetry 306 is open

583
00:30:19,400 --> 00:30:25,620
unload fired five times so this means

584
00:30:22,110 --> 00:30:28,500
that the port three 307 is closed when I

585
00:30:25,620 --> 00:30:31,560
try to treat 308 well unload didn't fire

586
00:30:28,500 --> 00:30:34,440
at all in some time out so I guess that

587
00:30:31,560 --> 00:30:37,620
the port is filtered and if I open a map

588
00:30:34,440 --> 00:30:39,919
I would get exactly the same results so

589
00:30:37,620 --> 00:30:44,008
who needs an map when you have the web

590
00:30:39,919 --> 00:30:50,489
and the last funny thing I am going to

591
00:30:44,009 --> 00:30:53,190
show you is downloading things I will

592
00:30:50,489 --> 00:30:57,749
just close it and make it a little bit

593
00:30:53,190 --> 00:31:00,809
smaller okay when you try to download a

594
00:30:57,749 --> 00:31:03,570
file in Chrome or chromium it gets

595
00:31:00,809 --> 00:31:06,089
downloaded automatically and in the

596
00:31:03,570 --> 00:31:08,729
bottom bar you get an information about

597
00:31:06,089 --> 00:31:12,678
the file name so in this instant is this

598
00:31:08,729 --> 00:31:16,919
test that txt when you try to download

599
00:31:12,679 --> 00:31:20,219
many files so the page for instance

600
00:31:16,919 --> 00:31:22,739
tried to have some set interval and try

601
00:31:20,219 --> 00:31:27,539
to download it many times then the

602
00:31:22,739 --> 00:31:29,999
browser blocks it and I need to

603
00:31:27,539 --> 00:31:33,599
specifically allow the page to download

604
00:31:29,999 --> 00:31:38,599
many files so most users will wouldn't

605
00:31:33,599 --> 00:31:41,580
probably do that however when I try to

606
00:31:38,599 --> 00:31:44,099
go to a page that downloads a file in a

607
00:31:41,580 --> 00:31:47,939
portal then the file gets downloaded as

608
00:31:44,099 --> 00:31:54,059
well however I am trying to do something

609
00:31:47,940 --> 00:31:56,479
like here download HTML is that I am

610
00:31:54,059 --> 00:32:03,719
just trying to download a file in portal

611
00:31:56,479 --> 00:32:05,700
every 200 milliseconds and when I press

612
00:32:03,719 --> 00:32:08,099
the trying to download many files using

613
00:32:05,700 --> 00:32:09,869
portal as you can see the protection

614
00:32:08,099 --> 00:32:12,899
doesn't work anymore

615
00:32:09,869 --> 00:32:15,869
so I can just fill up the empty space of

616
00:32:12,899 --> 00:32:18,529
disk of the user in a very quick and

617
00:32:15,869 --> 00:32:18,529
simple way

618
00:32:21,060 --> 00:32:29,310
okay maybe I will stop it okay so this

619
00:32:27,180 --> 00:32:31,260
is a short summary of a security

620
00:32:29,310 --> 00:32:35,010
analysis that I did of the portal

621
00:32:31,260 --> 00:32:37,050
element as you can see it is pretty

622
00:32:35,010 --> 00:32:40,110
interesting and I can convince you to

623
00:32:37,050 --> 00:32:45,480
analyze it even more because if you look

624
00:32:40,110 --> 00:32:48,780
at the specification of portals I'm

625
00:32:45,480 --> 00:32:55,860
going to show you oh this is not the

626
00:32:48,780 --> 00:32:59,580
portal I meant okay and every single

627
00:32:55,860 --> 00:33:01,949
specification in web has a section that

628
00:32:59,580 --> 00:33:03,480
is called security considerations let's

629
00:33:01,950 --> 00:33:09,120
see the security considerations of

630
00:33:03,480 --> 00:33:10,620
portal well there aren't any so maybe it

631
00:33:09,120 --> 00:33:15,750
is us we should look at the security

632
00:33:10,620 --> 00:33:18,449
considerations of portal okay so that's

633
00:33:15,750 --> 00:33:22,340
it I will check if any questions showed

634
00:33:18,450 --> 00:33:24,420
up if not then they are probably some

635
00:33:22,340 --> 00:33:26,370
technical problems so if you have any

636
00:33:24,420 --> 00:33:28,410
questions you can just come by and ask

637
00:33:26,370 --> 00:33:30,100
me the question in person thank you very

638
00:33:28,410 --> 00:33:34,990
much for your attention

639
00:33:30,100 --> 00:33:34,990
[Applause]

