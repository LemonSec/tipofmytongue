1
00:00:09,250 --> 00:00:12,820
I'm delighted to

2
00:00:14,370 --> 00:00:19,189
here and so I'm really happy to see how

3
00:00:16,830 --> 00:00:22,589
this is growing and see so many of you

4
00:00:19,189 --> 00:00:26,550
coming it's a great event and a big

5
00:00:22,590 --> 00:00:29,939
welcome to everybody I hope you enjoy

6
00:00:26,550 --> 00:00:34,100
your two days of the conference I'll be

7
00:00:29,939 --> 00:00:37,110
going with you for a journey of how to

8
00:00:34,100 --> 00:00:39,270
secure and how not to break PKI by

9
00:00:37,110 --> 00:00:42,840
assistance or non I use K standard to

10
00:00:39,270 --> 00:00:45,140
use case of a user in a more advanced

11
00:00:42,840 --> 00:00:46,890
case when there's not only server

12
00:00:45,140 --> 00:00:49,649
certificates births or client

13
00:00:46,890 --> 00:00:52,410
certificates so there's a client as

14
00:00:49,649 --> 00:00:54,420
typical use case in in UBS that we need

15
00:00:52,410 --> 00:00:56,489
also to authenticate him he's

16
00:00:54,420 --> 00:01:00,570
authenticated the server and he wants to

17
00:00:56,489 --> 00:01:03,239
sign some transactions with his digital

18
00:01:00,570 --> 00:01:06,420
signature so all the cases which are 11

19
00:01:03,239 --> 00:01:08,789
to to those and aware attacks are

20
00:01:06,420 --> 00:01:11,670
possible I won't be talking about as a

21
00:01:08,790 --> 00:01:13,500
silver and abilities and and protocol

22
00:01:11,670 --> 00:01:15,600
how to attack the protocol this happens

23
00:01:13,500 --> 00:01:19,490
from time to time and and can be

24
00:01:15,600 --> 00:01:22,470
monitored I'll be talking about more

25
00:01:19,490 --> 00:01:24,660
relevant things from like perspective of

26
00:01:22,470 --> 00:01:26,760
you potentially building those systems

27
00:01:24,660 --> 00:01:29,820
securing those securing those systems so

28
00:01:26,760 --> 00:01:31,650
I'll be talking a little about the

29
00:01:29,820 --> 00:01:33,360
server certificates the the client

30
00:01:31,650 --> 00:01:35,160
certificates the code signing which is

31
00:01:33,360 --> 00:01:37,800
equally important as you want to secure

32
00:01:35,160 --> 00:01:40,470
your whole environment and this plays a

33
00:01:37,800 --> 00:01:42,990
role about the digital signature so

34
00:01:40,470 --> 00:01:44,370
signing those financial transactions in

35
00:01:42,990 --> 00:01:47,160
our case but this might be something

36
00:01:44,370 --> 00:01:49,620
else as well and I'll be talking about

37
00:01:47,160 --> 00:01:53,399
the more practical ways so to attack

38
00:01:49,620 --> 00:01:56,640
those kind of systems finishing with

39
00:01:53,400 --> 00:01:59,220
some be a checklist and and they'll be

40
00:01:56,640 --> 00:02:02,760
time for her questions so first quickly

41
00:01:59,220 --> 00:02:05,990
about myself and our sponsor I have more

42
00:02:02,760 --> 00:02:07,980
than ten years building advanced

43
00:02:05,990 --> 00:02:10,829
cryptographic solutions

44
00:02:07,980 --> 00:02:13,319
everything from coding the crypto

45
00:02:10,830 --> 00:02:15,180
libraries myself that were securing

46
00:02:13,319 --> 00:02:18,958
blu-ray and to this day they are

47
00:02:15,180 --> 00:02:20,370
securing blu-ray a lot of applications

48
00:02:18,959 --> 00:02:22,799
throughout the world

49
00:02:20,370 --> 00:02:26,280
building on top of that various workflow

50
00:02:22,799 --> 00:02:27,960
solutions of a crypto 11 something crawl

51
00:02:26,280 --> 00:02:31,290
so you will call a blockchain right now

52
00:02:27,960 --> 00:02:33,660
so we can huge experience to UBS where I

53
00:02:31,290 --> 00:02:36,150
have a pleasure to building and leading

54
00:02:33,660 --> 00:02:37,740
some delivery structures we have some

55
00:02:36,150 --> 00:02:41,310
great guys and we were working on some

56
00:02:37,740 --> 00:02:43,590
really cool school stuff so to give you

57
00:02:41,310 --> 00:02:45,800
a picture of UBS is a really great

58
00:02:43,590 --> 00:02:48,150
opportunity for me to be in such a big

59
00:02:45,800 --> 00:02:51,450
institutions just to give you a picture

60
00:02:48,150 --> 00:02:54,240
we have several data centers we have

61
00:02:51,450 --> 00:02:56,549
thousands of servers supporting ten

62
00:02:54,240 --> 00:02:58,980
thousand thousands almost one hundred

63
00:02:56,550 --> 00:03:02,100
thousands of applications this all needs

64
00:02:58,980 --> 00:03:04,200
to be secured but at the same time you

65
00:03:02,100 --> 00:03:07,500
want to be very Swift you want to make

66
00:03:04,200 --> 00:03:09,839
sure that developers when they do their

67
00:03:07,500 --> 00:03:11,850
solutions that there can be put to

68
00:03:09,840 --> 00:03:13,380
productions as quick as possible so we

69
00:03:11,850 --> 00:03:15,870
try to make this journey possible from

70
00:03:13,380 --> 00:03:18,269
the credentials perspective for where we

71
00:03:15,870 --> 00:03:21,030
are managing the credential lifecycle

72
00:03:18,270 --> 00:03:22,260
and delivering solutions in in this

73
00:03:21,030 --> 00:03:25,020
endoscope

74
00:03:22,260 --> 00:03:26,820
so with such big infrastructure we have

75
00:03:25,020 --> 00:03:28,710
everything in UBS and it's really

76
00:03:26,820 --> 00:03:30,959
amazing to be able to work in such a

77
00:03:28,710 --> 00:03:33,300
company in half I don't know if there is

78
00:03:30,960 --> 00:03:35,370
any other company like that that you

79
00:03:33,300 --> 00:03:36,840
have those type of challenges that the

80
00:03:35,370 --> 00:03:39,120
infrastructure is so big so many

81
00:03:36,840 --> 00:03:40,980
platforms so I really enjoyed this we

82
00:03:39,120 --> 00:03:42,780
have millions of credentials and this

83
00:03:40,980 --> 00:03:44,609
has to happen quickly it has to happen

84
00:03:42,780 --> 00:03:47,940
securely we need to be able to rotate

85
00:03:44,610 --> 00:03:51,000
the credentials very fast we're doing

86
00:03:47,940 --> 00:03:51,570
really cool stuff there too to make this

87
00:03:51,000 --> 00:03:53,450
happen

88
00:03:51,570 --> 00:03:56,700
including some of the lightest which is

89
00:03:53,450 --> 00:04:00,060
compliance a scout so when developers

90
00:03:56,700 --> 00:04:02,579
want to make their solution happen it's

91
00:04:00,060 --> 00:04:03,720
enough that they use our staff and then

92
00:04:02,580 --> 00:04:05,880
they're compliant they know they're

93
00:04:03,720 --> 00:04:07,530
secure we are the experts they don't

94
00:04:05,880 --> 00:04:10,260
have to worried and they have to go

95
00:04:07,530 --> 00:04:13,190
through tedious processes of releasing

96
00:04:10,260 --> 00:04:15,570
application in this very highly secure

97
00:04:13,190 --> 00:04:17,730
environment if they use the solutions

98
00:04:15,570 --> 00:04:22,530
that we were building and providing to

99
00:04:17,730 --> 00:04:25,050
the whole UBS so just quickly some areas

100
00:04:22,530 --> 00:04:27,150
in security which are hot topics right

101
00:04:25,050 --> 00:04:29,460
now we do use artificial intelligence

102
00:04:27,150 --> 00:04:31,890
it's coming basically everywhere

103
00:04:29,460 --> 00:04:34,859
including threat detection we have some

104
00:04:31,890 --> 00:04:36,900
really cool proactive security hardening

105
00:04:34,860 --> 00:04:39,419
we do data protections everywhere

106
00:04:36,900 --> 00:04:41,489
we have very highly sensitive data of

107
00:04:39,419 --> 00:04:45,599
our clients that we cannot be

108
00:04:41,490 --> 00:04:48,540
named and we want to protect their their

109
00:04:45,600 --> 00:04:51,810
channels and all the data in transit and

110
00:04:48,540 --> 00:04:54,240
and at rest a lot of cool stuff in in

111
00:04:51,810 --> 00:04:56,310
via metric and and of course the cloud

112
00:04:54,240 --> 00:04:58,860
and automating the whole things with

113
00:04:56,310 --> 00:05:02,490
lots of robotics initiative or all the

114
00:04:58,860 --> 00:05:06,690
or all around so now to the to the topic

115
00:05:02,490 --> 00:05:09,090
so why why even why why pikia is

116
00:05:06,690 --> 00:05:13,980
important and what attack vectors are

117
00:05:09,090 --> 00:05:16,049
possible through PKI and to the PKI how

118
00:05:13,980 --> 00:05:17,940
to how to attack it so it's a golden

119
00:05:16,050 --> 00:05:20,130
standard for authentication and

120
00:05:17,940 --> 00:05:23,520
reputation in it egg routine right now

121
00:05:20,130 --> 00:05:25,740
secures probably most of the protocol

122
00:05:23,520 --> 00:05:28,590
stats are used every day from from

123
00:05:25,740 --> 00:05:33,200
emails web software distributions it's

124
00:05:28,590 --> 00:05:35,429
replacing traditional signatures as all

125
00:05:33,200 --> 00:05:37,590
institutions want to be digital and be

126
00:05:35,430 --> 00:05:39,780
able to provide this this way of making

127
00:05:37,590 --> 00:05:42,570
transactions to to our customers to to

128
00:05:39,780 --> 00:05:44,609
everybody so I'll be talking about some

129
00:05:42,570 --> 00:05:47,490
some cases like the first thing you

130
00:05:44,610 --> 00:05:49,560
think about PK is I have to protect the

131
00:05:47,490 --> 00:05:53,250
private key but there's much more to it

132
00:05:49,560 --> 00:05:54,840
PK is not only the private key there's

133
00:05:53,250 --> 00:05:57,060
much more to think about

134
00:05:54,840 --> 00:06:00,330
and also there's much more easy ways to

135
00:05:57,060 --> 00:06:01,800
attack it then trying to steal the

136
00:06:00,330 --> 00:06:03,510
private key but this is the important

137
00:06:01,800 --> 00:06:09,870
part so I'll be focusing first on on

138
00:06:03,510 --> 00:06:12,090
this this is a very very big target for

139
00:06:09,870 --> 00:06:15,570
for hackers all around the world to try

140
00:06:12,090 --> 00:06:18,000
to get access to the to the CA or or our

141
00:06:15,570 --> 00:06:19,590
the server's private key so what what

142
00:06:18,000 --> 00:06:22,530
may happen right so if somebody come

143
00:06:19,590 --> 00:06:25,049
from Isis the the private key gets

144
00:06:22,530 --> 00:06:29,059
access to it first of all the reputation

145
00:06:25,050 --> 00:06:31,260
of the company may may might be damaged

146
00:06:29,060 --> 00:06:33,450
imagine like the front page of such a

147
00:06:31,260 --> 00:06:35,099
big enterprise which is being hacked or

148
00:06:33,450 --> 00:06:37,770
displays something something else it

149
00:06:35,100 --> 00:06:40,890
would be a huge reputational damage

150
00:06:37,770 --> 00:06:44,280
there's trade secrecy IDs with client

151
00:06:40,890 --> 00:06:46,530
identification clients client data is

152
00:06:44,280 --> 00:06:47,820
something which is sacred for us we have

153
00:06:46,530 --> 00:06:50,520
we have clients we were managing

154
00:06:47,820 --> 00:06:52,890
portfolios some of the richest people in

155
00:06:50,520 --> 00:06:55,198
the world to be the client of UBS you

156
00:06:52,890 --> 00:06:57,900
have to have five million dollar

157
00:06:55,199 --> 00:07:00,389
in free cash so not invested in free

158
00:06:57,900 --> 00:07:03,239
cash to even to even be a liar so the a

159
00:07:00,389 --> 00:07:05,100
client so we early treat this data

160
00:07:03,240 --> 00:07:07,440
secret with all the segregation of

161
00:07:05,100 --> 00:07:09,540
duties and all the security principles

162
00:07:07,440 --> 00:07:11,699
so we keep this information secret we

163
00:07:09,540 --> 00:07:13,710
keep our trade information secret it

164
00:07:11,699 --> 00:07:15,960
obviously can influence world markets if

165
00:07:13,710 --> 00:07:18,479
if some information about the most we

166
00:07:15,960 --> 00:07:21,388
will like what would would leak there's

167
00:07:18,479 --> 00:07:24,060
personal information of our clients and

168
00:07:21,389 --> 00:07:26,280
and also employees of course there's a

169
00:07:24,060 --> 00:07:27,750
lot of transactions the amount of money

170
00:07:26,280 --> 00:07:30,570
which is going through our system is

171
00:07:27,750 --> 00:07:34,050
tremendous so we want to secure secure

172
00:07:30,570 --> 00:07:37,460
that our resources and and sometimes

173
00:07:34,050 --> 00:07:40,260
it's also human human life

174
00:07:37,460 --> 00:07:42,388
so the standard case as everybody knows

175
00:07:40,260 --> 00:07:44,700
it and I'll be building on that and

176
00:07:42,389 --> 00:07:48,510
going through with you fufu the journey

177
00:07:44,700 --> 00:07:51,349
is a server certificate when you want to

178
00:07:48,510 --> 00:07:54,719
secure basically your you your website

179
00:07:51,350 --> 00:07:56,820
so how this happens in in ki KI as you

180
00:07:54,720 --> 00:07:59,930
you well know you have the root CA

181
00:07:56,820 --> 00:08:04,469
usually it's somewhere offline in bunker

182
00:07:59,930 --> 00:08:06,919
there's no online access to it and there

183
00:08:04,470 --> 00:08:10,260
are certificates there which which are

184
00:08:06,919 --> 00:08:12,780
valid for many many years and they're

185
00:08:10,260 --> 00:08:15,630
only used to issue the intermediate CA

186
00:08:12,780 --> 00:08:18,000
and then the intermediate CAS are issued

187
00:08:15,630 --> 00:08:20,520
for a particular protocols like for

188
00:08:18,000 --> 00:08:23,130
example chateau for particular use cases

189
00:08:20,520 --> 00:08:25,680
like for example code signing or

190
00:08:23,130 --> 00:08:27,690
securing servers so you have the

191
00:08:25,680 --> 00:08:31,229
structure and in the end you have your

192
00:08:27,690 --> 00:08:32,130
certificate which is which is to be

193
00:08:31,229 --> 00:08:35,039
trusted

194
00:08:32,130 --> 00:08:37,439
the root certificate must be distributed

195
00:08:35,039 --> 00:08:40,080
to your environment and this happens

196
00:08:37,440 --> 00:08:41,849
through the OS and for the browsers

197
00:08:40,080 --> 00:08:44,670
depending on the combination of web

198
00:08:41,849 --> 00:08:46,980
browser it's a combination of the the

199
00:08:44,670 --> 00:08:49,620
the OS delivering those those trust

200
00:08:46,980 --> 00:08:52,080
answers to you together with with with

201
00:08:49,620 --> 00:08:53,670
the browser so you have it in your in

202
00:08:52,080 --> 00:08:56,580
your browser and then when you finally

203
00:08:53,670 --> 00:08:59,339
receive the certificate has shown on the

204
00:08:56,580 --> 00:09:03,570
on the bottom in you in your in your

205
00:08:59,339 --> 00:09:06,180
browser the whole chain is is verified

206
00:09:03,570 --> 00:09:08,339
up to the top you see that okay the top

207
00:09:06,180 --> 00:09:11,430
certificates is in my trust ring okay

208
00:09:08,339 --> 00:09:13,350
Rusted I do this green bar so inform the

209
00:09:11,430 --> 00:09:15,660
user that he can he can proceed that

210
00:09:13,350 --> 00:09:17,550
this assist assist this is trusted but

211
00:09:15,660 --> 00:09:21,870
now in in more detail how how this works

212
00:09:17,550 --> 00:09:24,149
so to get a certificate and I'll be

213
00:09:21,870 --> 00:09:25,889
going through all those places how how

214
00:09:24,149 --> 00:09:29,370
to potentially attack them and how

215
00:09:25,889 --> 00:09:32,160
important it is to to protect them to to

216
00:09:29,370 --> 00:09:33,930
show you how difficult it is and how

217
00:09:32,160 --> 00:09:37,889
many points and vectors of attack are

218
00:09:33,930 --> 00:09:40,979
possible and where might in in the last

219
00:09:37,889 --> 00:09:44,220
decade and more so first of all you

220
00:09:40,980 --> 00:09:47,519
there's a registration Authority which

221
00:09:44,220 --> 00:09:49,740
has the obligation of verifying who you

222
00:09:47,519 --> 00:09:52,110
are so if your if the certificate is to

223
00:09:49,740 --> 00:09:54,540
you then that you're who you you present

224
00:09:52,110 --> 00:09:56,249
is the certificate is to some domain

225
00:09:54,540 --> 00:09:59,930
verifying that you have the ownership of

226
00:09:56,249 --> 00:10:02,610
the domain giving this okay stamp of

227
00:09:59,930 --> 00:10:04,649
acceptance and sending the message to

228
00:10:02,610 --> 00:10:07,319
the to the real CA okay this was

229
00:10:04,649 --> 00:10:10,110
verified issued a certificate and the

230
00:10:07,319 --> 00:10:12,719
left certificate goes goes to you you

231
00:10:10,110 --> 00:10:16,980
can install it next to your private key

232
00:10:12,720 --> 00:10:19,110
and use it to secure your your server

233
00:10:16,980 --> 00:10:22,019
send the certificate to any client that

234
00:10:19,110 --> 00:10:24,019
that connects to you equally important

235
00:10:22,019 --> 00:10:26,220
this is validation so there's a

236
00:10:24,019 --> 00:10:28,529
validation Authority usually it's the

237
00:10:26,220 --> 00:10:30,300
same thing you can think of its it might

238
00:10:28,529 --> 00:10:32,879
be as simple as providing the CRL

239
00:10:30,300 --> 00:10:35,519
meaning for vacations lists and I know

240
00:10:32,879 --> 00:10:38,399
CSP protocol so you want to make sure

241
00:10:35,519 --> 00:10:41,429
that those certificates if they're valid

242
00:10:38,399 --> 00:10:43,829
for example for 40 years there might be

243
00:10:41,429 --> 00:10:46,019
a situation where something happened it

244
00:10:43,829 --> 00:10:48,540
got revoked you want to check that the

245
00:10:46,019 --> 00:10:50,610
certificate list is still valid before

246
00:10:48,540 --> 00:10:53,069
you you really trust this so that's

247
00:10:50,610 --> 00:10:55,110
basically the the whole picture and

248
00:10:53,069 --> 00:10:57,479
infrastructure in in one picture now

249
00:10:55,110 --> 00:10:59,610
let's have a look at how we can try to

250
00:10:57,480 --> 00:11:01,379
attack it so the first thought is okay

251
00:10:59,610 --> 00:11:03,449
still the private key and this happens

252
00:11:01,379 --> 00:11:05,339
and this happens a lot if you if you

253
00:11:03,449 --> 00:11:06,870
observe the CRLs which are which are

254
00:11:05,339 --> 00:11:09,509
issued this this happens on like

255
00:11:06,870 --> 00:11:11,730
hundreds of thousand cases where this

256
00:11:09,509 --> 00:11:15,089
happens this has to be monitored and

257
00:11:11,730 --> 00:11:17,879
it's very important for for everybody to

258
00:11:15,089 --> 00:11:20,699
to monitor outlets the servers do -

259
00:11:17,879 --> 00:11:22,340
first of all detect an incident like

260
00:11:20,699 --> 00:11:24,709
nobody I hope

261
00:11:22,340 --> 00:11:27,500
assumes that their servers are secure

262
00:11:24,710 --> 00:11:32,750
like anna always will be you want to be

263
00:11:27,500 --> 00:11:35,480
able to detect an incident and be ready

264
00:11:32,750 --> 00:11:38,390
to react to whatever the incidents don't

265
00:11:35,480 --> 00:11:41,270
mean so that first detects and and then

266
00:11:38,390 --> 00:11:44,330
reacts to to the to the incident so so

267
00:11:41,270 --> 00:11:46,819
this happens it's usually hard in in

268
00:11:44,330 --> 00:11:50,060
some in most of the really relevant

269
00:11:46,820 --> 00:11:52,790
cases does this private key is stored on

270
00:11:50,060 --> 00:11:56,900
some HSM in some in some hardware you

271
00:11:52,790 --> 00:12:01,670
really cannot gain access to to the get

272
00:11:56,900 --> 00:12:03,319
a copy of the private key you may there

273
00:12:01,670 --> 00:12:06,349
might be some other ways of just trying

274
00:12:03,320 --> 00:12:08,480
to get the use of the private key which

275
00:12:06,350 --> 00:12:10,880
which may allow you to do some things

276
00:12:08,480 --> 00:12:18,170
that's very hard to get the get the

277
00:12:10,880 --> 00:12:20,660
private key itself and of course or more

278
00:12:18,170 --> 00:12:24,199
security relevant cases where this key

279
00:12:20,660 --> 00:12:28,670
is stored in some file this file should

280
00:12:24,200 --> 00:12:31,339
be protected and it happens that this

281
00:12:28,670 --> 00:12:33,530
this this this file is compromised it

282
00:12:31,339 --> 00:12:35,270
leaks maybe because it was transferred

283
00:12:33,530 --> 00:12:36,910
to some other places maybe to some load

284
00:12:35,270 --> 00:12:39,589
balancers or some monitoring

285
00:12:36,910 --> 00:12:41,360
infrastructure to peek inside the

286
00:12:39,589 --> 00:12:44,540
packets to see what's happening there

287
00:12:41,360 --> 00:12:47,060
this key might be in multiple of places

288
00:12:44,540 --> 00:12:49,699
maybe it was the management structure of

289
00:12:47,060 --> 00:12:51,920
the living the delivering the key in

290
00:12:49,700 --> 00:12:53,900
place wasn't really done so maybe the

291
00:12:51,920 --> 00:12:56,870
maybe it's somewhere in the distribution

292
00:12:53,900 --> 00:12:58,459
package maybe the whole process is not

293
00:12:56,870 --> 00:13:01,220
done right and there are multiple points

294
00:12:58,460 --> 00:13:04,030
of attack to to to actually steal such a

295
00:13:01,220 --> 00:13:06,410
key which we've seen in a in in a file

296
00:13:04,030 --> 00:13:09,380
moving moving forward there are cases

297
00:13:06,410 --> 00:13:11,030
where and even with with Microsoft for

298
00:13:09,380 --> 00:13:13,550
example somebody pretended to be a

299
00:13:11,030 --> 00:13:15,589
Microsoft employee and the registration

300
00:13:13,550 --> 00:13:18,109
authority trusted and she issued the

301
00:13:15,589 --> 00:13:20,390
certificate so always remember that's

302
00:13:18,110 --> 00:13:22,430
usually the technology the technology

303
00:13:20,390 --> 00:13:24,020
behind security is good enough but

304
00:13:22,430 --> 00:13:26,719
there's always people in in it and in

305
00:13:24,020 --> 00:13:28,640
such a complex system like here there

306
00:13:26,720 --> 00:13:31,610
are multiple attack vectors that involve

307
00:13:28,640 --> 00:13:34,430
social techniques and people and

308
00:13:31,610 --> 00:13:35,960
mistakes and and usually mistakes in

309
00:13:34,430 --> 00:13:37,910
management of the infrastructure

310
00:13:35,960 --> 00:13:40,790
so even if there's some nice policies

311
00:13:37,910 --> 00:13:42,709
writing okay this is our our practice

312
00:13:40,790 --> 00:13:44,599
statement they are not followed and

313
00:13:42,710 --> 00:13:47,480
allow for four things things to happen

314
00:13:44,600 --> 00:13:49,730
so this is one possible attack

315
00:13:47,480 --> 00:13:54,320
pretending to be the company then

316
00:13:49,730 --> 00:13:59,089
something that also happens is to to be

317
00:13:54,320 --> 00:14:01,550
able to somehow idea of collaboration or

318
00:13:59,089 --> 00:14:05,149
by hacking the infrastructure the

319
00:14:01,550 --> 00:14:08,779
systems gets get good hold of the

320
00:14:05,149 --> 00:14:11,330
registration authority which sometimes

321
00:14:08,779 --> 00:14:13,700
is not the same thing as CA sometimes is

322
00:14:11,330 --> 00:14:15,980
something external sometimes this is

323
00:14:13,700 --> 00:14:17,899
partners so for those big companies that

324
00:14:15,980 --> 00:14:20,089
sell certificates is often partners that

325
00:14:17,899 --> 00:14:22,399
act us which is registration authorities

326
00:14:20,089 --> 00:14:25,360
and it happened that that they got

327
00:14:22,399 --> 00:14:28,670
hacked and some certificates were issued

328
00:14:25,360 --> 00:14:32,600
that allowed to pretend to be the and

329
00:14:28,670 --> 00:14:35,120
the legitimate site movie moving forward

330
00:14:32,600 --> 00:14:38,899
sometimes it's it also happened in a

331
00:14:35,120 --> 00:14:42,200
past that the credentials used by by

332
00:14:38,899 --> 00:14:44,690
this Registration Authority got got

333
00:14:42,200 --> 00:14:46,550
stolen and somebody was able to connect

334
00:14:44,690 --> 00:14:48,800
to the to the C infrastructure and then

335
00:14:46,550 --> 00:14:51,380
an issue whatever whatever whatever he

336
00:14:48,800 --> 00:14:53,689
wanted so all this leaf some trails so

337
00:14:51,380 --> 00:14:58,400
it's usually detected and usually quite

338
00:14:53,690 --> 00:15:01,190
quite fast but not not always the ulti

339
00:14:58,400 --> 00:15:05,449
might think you dream of as a hacker is

340
00:15:01,190 --> 00:15:07,310
to somehow get hold of of the CA itself

341
00:15:05,450 --> 00:15:08,720
and compromised because then if you're

342
00:15:07,310 --> 00:15:10,670
inside this here you can cover your

343
00:15:08,720 --> 00:15:12,470
tracks you can cover the logs and then

344
00:15:10,670 --> 00:15:14,390
it's really might be really hard to

345
00:15:12,470 --> 00:15:16,820
determine what certificates were really

346
00:15:14,390 --> 00:15:18,860
issued which should be revoked and then

347
00:15:16,820 --> 00:15:20,839
it sends up with revoking the whole the

348
00:15:18,860 --> 00:15:23,779
whole tree which happens for example

349
00:15:20,839 --> 00:15:25,220
with some Nordic company which also

350
00:15:23,779 --> 00:15:26,570
served government so a big issue

351
00:15:25,220 --> 00:15:29,930
everybody had to rotate their

352
00:15:26,570 --> 00:15:33,230
certificates it was a huge damage to not

353
00:15:29,930 --> 00:15:36,170
only the the the company that provided

354
00:15:33,230 --> 00:15:40,670
the certificates but also to those that

355
00:15:36,170 --> 00:15:41,900
that had to manage the incident in the

356
00:15:40,670 --> 00:15:47,029
end

357
00:15:41,900 --> 00:15:50,740
then if the CA is using some old

358
00:15:47,029 --> 00:15:53,660
algorithm d5 it's it's been shown that's

359
00:15:50,740 --> 00:15:56,029
their collision attacks and and it's

360
00:15:53,660 --> 00:15:57,290
possible now to like forge a certificate

361
00:15:56,029 --> 00:15:59,480
so you don't have access to the private

362
00:15:57,290 --> 00:16:02,779
key but just by doing the collision

363
00:15:59,480 --> 00:16:07,310
attack you're able to forge a key which

364
00:16:02,779 --> 00:16:08,810
would look like like a real one and then

365
00:16:07,310 --> 00:16:10,880
the validation data maybe the

366
00:16:08,810 --> 00:16:13,459
certificate maybe the incident gods got

367
00:16:10,880 --> 00:16:15,140
the tag that maybe the certificate got

368
00:16:13,460 --> 00:16:17,690
revoked but maybe you're able to

369
00:16:15,140 --> 00:16:20,689
suppress for example the the validation

370
00:16:17,690 --> 00:16:22,580
data so for example Midas URL not

371
00:16:20,690 --> 00:16:24,650
available in this validation environment

372
00:16:22,580 --> 00:16:27,890
where it will be checked maybe you can

373
00:16:24,650 --> 00:16:29,630
reply the OCSP like the previous one

374
00:16:27,890 --> 00:16:31,819
which is still valid but which says that

375
00:16:29,630 --> 00:16:34,279
the certificate is valid multiple

376
00:16:31,820 --> 00:16:38,120
attacks that that can happen in in this

377
00:16:34,279 --> 00:16:40,220
place so quite complex system very

378
00:16:38,120 --> 00:16:42,050
crucial that if there are practice

379
00:16:40,220 --> 00:16:45,470
statements policies that they're

380
00:16:42,050 --> 00:16:48,949
followed that's the personal handling

381
00:16:45,470 --> 00:16:51,230
this this is trained and and it's really

382
00:16:48,950 --> 00:16:53,089
not always the case because this is a

383
00:16:51,230 --> 00:16:54,709
great business model like how much

384
00:16:53,089 --> 00:16:57,140
resources do you need really to like

385
00:16:54,709 --> 00:16:59,930
made another five bucks and get a

386
00:16:57,140 --> 00:17:02,689
certificate try this it's infrastructure

387
00:16:59,930 --> 00:17:05,839
is in the place and and it happens that

388
00:17:02,690 --> 00:17:09,439
there's so many CAS in the world that

389
00:17:05,839 --> 00:17:13,839
are trusted that sometimes the security

390
00:17:09,439 --> 00:17:16,550
aspect really lacks because of the great

391
00:17:13,839 --> 00:17:18,319
business model that wants to scale and

392
00:17:16,550 --> 00:17:20,419
issue as many certificates and as fast

393
00:17:18,319 --> 00:17:24,819
as possible to basically earn money for

394
00:17:20,420 --> 00:17:27,589
for those for those companies one

395
00:17:24,819 --> 00:17:30,110
additional attack which is possible is

396
00:17:27,589 --> 00:17:34,250
is modifying Trust if you're already in

397
00:17:30,110 --> 00:17:35,809
the system it's really done right so you

398
00:17:34,250 --> 00:17:38,210
can do anything you can display

399
00:17:35,809 --> 00:17:40,220
something different to the user you can

400
00:17:38,210 --> 00:17:43,420
trick him to trust your servers you can

401
00:17:40,220 --> 00:17:45,920
modify trust this is this is done so

402
00:17:43,420 --> 00:17:47,720
what did we gain or attacker what did

403
00:17:45,920 --> 00:17:50,570
that occur gain by by getting access to

404
00:17:47,720 --> 00:17:53,480
Turkey which pretends to be to your

405
00:17:50,570 --> 00:17:55,370
company he first of all and these are

406
00:17:53,480 --> 00:17:57,170
multiple scenarios

407
00:17:55,370 --> 00:17:58,850
depending on what's the motivation of

408
00:17:57,170 --> 00:18:01,309
the attacker it might be a nation state

409
00:17:58,850 --> 00:18:02,870
that basically wants to East drop on the

410
00:18:01,309 --> 00:18:04,430
whole nation maybe there's some protest

411
00:18:02,870 --> 00:18:06,679
and it happened and quite frequently

412
00:18:04,430 --> 00:18:08,950
that where there were protests for

413
00:18:06,680 --> 00:18:11,540
example China issued some some

414
00:18:08,950 --> 00:18:13,820
certificate authority controlled by

415
00:18:11,540 --> 00:18:16,120
China issued our health care certificate

416
00:18:13,820 --> 00:18:18,559
if I remember right that allowed to

417
00:18:16,120 --> 00:18:21,409
eavesdrop on like for example Microsoft

418
00:18:18,559 --> 00:18:25,280
Google whatever you want connections

419
00:18:21,410 --> 00:18:27,110
from from people to to the server is

420
00:18:25,280 --> 00:18:29,090
enough you so you're the least

421
00:18:27,110 --> 00:18:30,979
privileged attacker you just can use

422
00:18:29,090 --> 00:18:35,270
either up on the encrypted communication

423
00:18:30,980 --> 00:18:37,130
and and even even that depending on the

424
00:18:35,270 --> 00:18:38,570
scenario if you got the the the private

425
00:18:37,130 --> 00:18:40,850
key in this this will allow you to

426
00:18:38,570 --> 00:18:43,370
either up or the standard money the

427
00:18:40,850 --> 00:18:44,689
middle attack and then you see

428
00:18:43,370 --> 00:18:50,030
everything and you can also modify

429
00:18:44,690 --> 00:18:51,440
whatever happens but this is also

430
00:18:50,030 --> 00:18:54,678
sometimes so these are some

431
00:18:51,440 --> 00:18:56,420
nation-states scenarios there there are

432
00:18:54,679 --> 00:18:59,510
other scenarios when you basically use

433
00:18:56,420 --> 00:19:04,580
BKI as an attack vector itself because

434
00:18:59,510 --> 00:19:09,470
once once you have the the private

435
00:19:04,580 --> 00:19:11,540
certificate you are able then to try to

436
00:19:09,470 --> 00:19:13,760
launch some other types of attacks and

437
00:19:11,540 --> 00:19:16,100
then get you ultimate goal of getting

438
00:19:13,760 --> 00:19:17,720
access to some some data control of the

439
00:19:16,100 --> 00:19:20,540
infrastructure at the points that I was

440
00:19:17,720 --> 00:19:21,860
talking about before so now we were

441
00:19:20,540 --> 00:19:24,770
talking about the servers but now the

442
00:19:21,860 --> 00:19:27,229
user so this is not for every Tuesday

443
00:19:24,770 --> 00:19:30,580
this is not a standard case but it is it

444
00:19:27,230 --> 00:19:33,140
is for us so you also want to have

445
00:19:30,580 --> 00:19:36,110
authentication of the clients or have

446
00:19:33,140 --> 00:19:38,030
the mutual TLS it's basically the same

447
00:19:36,110 --> 00:19:40,309
process somebody has to verify who you

448
00:19:38,030 --> 00:19:42,790
are issue the certificate and all the

449
00:19:40,309 --> 00:19:44,360
attacks vector stock I talked before

450
00:19:42,790 --> 00:19:48,350
apply here

451
00:19:44,360 --> 00:19:50,928
equally what's may be nice to mention

452
00:19:48,350 --> 00:19:54,139
here is and to be aware of that this

453
00:19:50,929 --> 00:19:56,960
allows to not only act as the client

454
00:19:54,140 --> 00:19:59,110
itself and whatever he can but this

455
00:19:56,960 --> 00:20:02,660
gives an attacker some really nice

456
00:19:59,110 --> 00:20:06,428
abilities to try to hide from monitoring

457
00:20:02,660 --> 00:20:07,980
software because if he attacker has

458
00:20:06,429 --> 00:20:10,020
trusted

459
00:20:07,980 --> 00:20:12,809
certificate and key and can login to

460
00:20:10,020 --> 00:20:14,730
your systems from an unencrypted tunnel

461
00:20:12,809 --> 00:20:16,410
maybe your instructor is not really

462
00:20:14,730 --> 00:20:18,990
monitoring that so maybe if he has this

463
00:20:16,410 --> 00:20:21,210
encrypted tunnel to your server you he

464
00:20:18,990 --> 00:20:23,070
will be able if there's my for example

465
00:20:21,210 --> 00:20:25,919
end-to-end encryption he will be able to

466
00:20:23,070 --> 00:20:30,990
launch standard SQL injection or other

467
00:20:25,919 --> 00:20:34,350
attacks on your server that will avoid

468
00:20:30,990 --> 00:20:37,320
evaded detection an interesting case how

469
00:20:34,350 --> 00:20:43,559
to leverage attacking PGI to answer

470
00:20:37,320 --> 00:20:46,020
other attacks and code signing this is

471
00:20:43,559 --> 00:20:49,230
the the hackers dream control right so

472
00:20:46,020 --> 00:20:51,990
to be able to have a science software

473
00:20:49,230 --> 00:20:54,360
that that would evade your assistance

474
00:20:51,990 --> 00:20:56,730
measures your antivirus measures and

475
00:20:54,360 --> 00:20:59,189
it's been shown that if the infamous

476
00:20:56,730 --> 00:21:03,470
strikes nets where the drivers were

477
00:20:59,190 --> 00:21:06,600
signed by a trusted signing certificate

478
00:21:03,470 --> 00:21:10,470
many many other cases were basically

479
00:21:06,600 --> 00:21:12,870
hacker once he already either tricked

480
00:21:10,470 --> 00:21:15,030
somebody into installing some software

481
00:21:12,870 --> 00:21:17,760
which the system will show that this is

482
00:21:15,030 --> 00:21:20,190
trusted so it will evade the mechanism

483
00:21:17,760 --> 00:21:21,990
of detection of the operating system

484
00:21:20,190 --> 00:21:24,780
then there were some research showing

485
00:21:21,990 --> 00:21:26,669
how this can be also used to evade

486
00:21:24,780 --> 00:21:29,460
detection of antivirus software

487
00:21:26,669 --> 00:21:31,380
I think they ramped up and and are a bit

488
00:21:29,460 --> 00:21:33,210
better now but what few years back it

489
00:21:31,380 --> 00:21:37,290
was possible for example to evade

490
00:21:33,210 --> 00:21:39,840
antivirus scanning just by copying the

491
00:21:37,290 --> 00:21:41,940
signature and and then because of

492
00:21:39,840 --> 00:21:43,799
optimization of how antivirus software

493
00:21:41,940 --> 00:21:45,390
works if the antivirus software served

494
00:21:43,799 --> 00:21:47,940
at okay there's a there's a signature

495
00:21:45,390 --> 00:21:50,220
not verifying it at all ok let's let's

496
00:21:47,940 --> 00:21:53,820
keep the dis probably is trusted and and

497
00:21:50,220 --> 00:21:55,740
this this was it was possible to write I

498
00:21:53,820 --> 00:21:57,780
remember right eighty percent of

499
00:21:55,740 --> 00:21:59,610
antivirus software at that time so

500
00:21:57,780 --> 00:22:03,480
hopefully this is this is better now

501
00:21:59,610 --> 00:22:06,149
and what's important to note is again

502
00:22:03,480 --> 00:22:08,400
the the processor the whole procedures

503
00:22:06,150 --> 00:22:14,700
around maintaining such infrastructure

504
00:22:08,400 --> 00:22:17,669
are not really done well and it's I

505
00:22:14,700 --> 00:22:19,169
believe is just getting worse as a

506
00:22:17,669 --> 00:22:21,570
result

507
00:22:19,169 --> 00:22:23,789
research shows that

508
00:22:21,570 --> 00:22:25,529
80% of such abusive certificates that

509
00:22:23,789 --> 00:22:28,619
there is for co-signing can be still

510
00:22:25,529 --> 00:22:31,830
leverage for for up to six years which

511
00:22:28,619 --> 00:22:34,799
only shows how people are lagging in in

512
00:22:31,830 --> 00:22:36,449
applying the right practices updating

513
00:22:34,799 --> 00:22:41,970
their vocation lists and so on and so on

514
00:22:36,450 --> 00:22:44,399
and now when we we were talking about

515
00:22:41,970 --> 00:22:46,109
the channel and now we so we had one

516
00:22:44,399 --> 00:22:48,379
certificates to the Authenticator

517
00:22:46,109 --> 00:22:50,820
obviously we have another one to do

518
00:22:48,379 --> 00:22:54,779
signing you cannot use one certificate

519
00:22:50,820 --> 00:22:57,359
for and private key for for both so now

520
00:22:54,779 --> 00:22:59,070
we have the client authenticated and he

521
00:22:57,359 --> 00:23:00,809
wants to assign some some transaction

522
00:22:59,070 --> 00:23:03,149
maybe multi-million dollar transaction

523
00:23:00,809 --> 00:23:07,918
that he wants to invest in some stock or

524
00:23:03,149 --> 00:23:11,849
other things he like to ask us to do so

525
00:23:07,919 --> 00:23:15,090
he has his his private key he has the

526
00:23:11,849 --> 00:23:18,840
public key of the recipient he encrypts

527
00:23:15,090 --> 00:23:21,238
the the message which is sent that's I'm

528
00:23:18,840 --> 00:23:23,549
relief well understood to you how this

529
00:23:21,239 --> 00:23:26,460
works but I wanted to talk about some

530
00:23:23,549 --> 00:23:29,129
more this is not usual attack vectors

531
00:23:26,460 --> 00:23:31,649
this is at least nobody really admits

532
00:23:29,129 --> 00:23:33,809
that this this this happens but it's

533
00:23:31,649 --> 00:23:36,570
still it's not reported but it's still a

534
00:23:33,809 --> 00:23:38,399
valid attack point I haven't found

535
00:23:36,570 --> 00:23:40,590
references saying that this happens but

536
00:23:38,399 --> 00:23:45,059
I think it's a very valid use case and

537
00:23:40,590 --> 00:23:47,070
I'm sure somebody's is trying to to make

538
00:23:45,059 --> 00:23:48,269
those those kind of things happen and

539
00:23:47,070 --> 00:23:53,309
what's interesting when you have a

540
00:23:48,269 --> 00:23:58,349
digital signature is that it's important

541
00:23:53,309 --> 00:24:00,809
to be sure what is the part of data that

542
00:23:58,349 --> 00:24:02,399
is being signed and that this data

543
00:24:00,809 --> 00:24:04,019
cannot be changed so for example if

544
00:24:02,399 --> 00:24:05,998
you're signing our word document and

545
00:24:04,019 --> 00:24:09,119
this so the clients is wrong a word

546
00:24:05,999 --> 00:24:11,519
documents on transaction okay I sign it

547
00:24:09,119 --> 00:24:13,439
and I sent to the server but maybe there

548
00:24:11,519 --> 00:24:16,679
was some dynamic content JavaScript or

549
00:24:13,440 --> 00:24:19,409
order in this in this format that would

550
00:24:16,679 --> 00:24:23,429
allow it and meaning that a different

551
00:24:19,409 --> 00:24:25,830
result will render to the person signing

552
00:24:23,429 --> 00:24:27,989
it and a difference to maybe person who

553
00:24:25,830 --> 00:24:31,460
is later viewing this for for execution

554
00:24:27,989 --> 00:24:34,430
or our system so even more important and

555
00:24:31,460 --> 00:24:36,920
and/or interesting cases

556
00:24:34,430 --> 00:24:39,250
our that there are ways to to trick one

557
00:24:36,920 --> 00:24:43,430
file to be both so you can have one file

558
00:24:39,250 --> 00:24:46,040
for example a PDF and teeth that will

559
00:24:43,430 --> 00:24:48,350
depending on what extension you will add

560
00:24:46,040 --> 00:24:50,540
to it will open a completely different

561
00:24:48,350 --> 00:24:53,419
valid document and this is made possible

562
00:24:50,540 --> 00:24:55,460
because for example PDF just requires

563
00:24:53,420 --> 00:24:58,460
that the header of the PDS is somewhere

564
00:24:55,460 --> 00:25:00,260
in the first if I remember 1000 bytes or

565
00:24:58,460 --> 00:25:02,360
something like that so you can have a

566
00:25:00,260 --> 00:25:04,010
tiff file which is also a PDF file in

567
00:25:02,360 --> 00:25:05,870
rendering comfort lis different a

568
00:25:04,010 --> 00:25:08,450
different thing to the person who is

569
00:25:05,870 --> 00:25:11,419
viewing it just by tricking it to open

570
00:25:08,450 --> 00:25:14,120
in a different software or just

571
00:25:11,420 --> 00:25:16,730
modifying the the extension so

572
00:25:14,120 --> 00:25:20,090
ultimately and this is one point which

573
00:25:16,730 --> 00:25:23,420
is which evades almost always is that we

574
00:25:20,090 --> 00:25:25,939
kind of try to forget that in the end we

575
00:25:23,420 --> 00:25:29,510
are using making all those transactions

576
00:25:25,940 --> 00:25:31,850
on a very insecure devices right this is

577
00:25:29,510 --> 00:25:34,820
the devices you use usually are not

578
00:25:31,850 --> 00:25:35,149
really secure so what is shown on the

579
00:25:34,820 --> 00:25:39,860
screen

580
00:25:35,150 --> 00:25:42,710
cannot be guaranteed to be really what

581
00:25:39,860 --> 00:25:47,750
what what what is what is what is

582
00:25:42,710 --> 00:25:50,750
intended another part important

583
00:25:47,750 --> 00:25:52,850
specifically to the digital signatures

584
00:25:50,750 --> 00:25:55,250
is not to not to break it and I saw in

585
00:25:52,850 --> 00:25:58,070
my in my professional career enormous

586
00:25:55,250 --> 00:26:00,170
amount of times when for example xml

587
00:25:58,070 --> 00:26:03,800
signatures were broke just because the

588
00:26:00,170 --> 00:26:05,990
people that made some systems further in

589
00:26:03,800 --> 00:26:09,680
the in the pipeline didn't weren't aware

590
00:26:05,990 --> 00:26:12,380
of how to treat signed documents and and

591
00:26:09,680 --> 00:26:15,500
the signature was was damaged in transit

592
00:26:12,380 --> 00:26:18,110
on an in storage or by including it in

593
00:26:15,500 --> 00:26:19,930
some some bigger bigger structures so

594
00:26:18,110 --> 00:26:22,129
this all has to be taken into account

595
00:26:19,930 --> 00:26:25,040
people usually don't understand that

596
00:26:22,130 --> 00:26:26,870
even if they di at one white space that

597
00:26:25,040 --> 00:26:29,510
this breaks the signature right and then

598
00:26:26,870 --> 00:26:32,389
you have some crazy conversations trying

599
00:26:29,510 --> 00:26:34,760
to explain why this why this matters so

600
00:26:32,390 --> 00:26:37,430
be aware of the of the signed parts that

601
00:26:34,760 --> 00:26:40,240
they cannot change and even more

602
00:26:37,430 --> 00:26:44,540
important is with signatures that you

603
00:26:40,240 --> 00:26:46,520
want to be you have the signature if

604
00:26:44,540 --> 00:26:48,290
everything works this is fine but in the

605
00:26:46,520 --> 00:26:50,870
end you you want it and you keep

606
00:26:48,290 --> 00:26:52,760
- in case of some dispute so the client

607
00:26:50,870 --> 00:26:56,600
comes or maybe there's a magnetic bank

608
00:26:52,760 --> 00:26:58,760
transaction and and says that I didn't I

609
00:26:56,600 --> 00:27:01,159
did I didn't like this disorder right I

610
00:26:58,760 --> 00:27:03,650
I didn't take the loan for five million

611
00:27:01,160 --> 00:27:06,020
and and I don't have to give you the

612
00:27:03,650 --> 00:27:09,140
money back right or whatever that that

613
00:27:06,020 --> 00:27:12,050
that might be or one bank which is

614
00:27:09,140 --> 00:27:14,300
crisis I work with frequently sending a

615
00:27:12,050 --> 00:27:16,550
transaction to another bank to buy some

616
00:27:14,300 --> 00:27:18,590
stock sell some stock and you want to

617
00:27:16,550 --> 00:27:20,060
make sure I the receiving want to make

618
00:27:18,590 --> 00:27:21,740
sure it came from the right person and

619
00:27:20,060 --> 00:27:24,470
then another and the person standing

620
00:27:21,740 --> 00:27:27,680
cannot cannot repute that this this was

621
00:27:24,470 --> 00:27:29,690
sent by him so this is it's very

622
00:27:27,680 --> 00:27:31,670
important to be able to have access to

623
00:27:29,690 --> 00:27:34,400
all the the validation data needed to

624
00:27:31,670 --> 00:27:37,820
the proof in case of disputes that this

625
00:27:34,400 --> 00:27:40,790
this really is a valid transaction so

626
00:27:37,820 --> 00:27:43,490
you have to store for example C RL or

627
00:27:40,790 --> 00:27:46,190
CSPs on depending on the how complicated

628
00:27:43,490 --> 00:27:48,500
the use case is use of advanced

629
00:27:46,190 --> 00:27:53,180
signatures it may be much much much more

630
00:27:48,500 --> 00:27:55,250
and this is important in case of long

631
00:27:53,180 --> 00:27:57,080
signature so maybe the signature was

632
00:27:55,250 --> 00:28:01,430
valid when you received it but maybe

633
00:27:57,080 --> 00:28:04,790
next day the the the signature of the

634
00:28:01,430 --> 00:28:08,120
certificate of the user got hacked

635
00:28:04,790 --> 00:28:10,250
so if you didn't do collect the evidence

636
00:28:08,120 --> 00:28:12,679
at the time of receiving the certificate

637
00:28:10,250 --> 00:28:15,800
and and secured it you won't have

638
00:28:12,680 --> 00:28:18,140
possibility to truly prove that the the

639
00:28:15,800 --> 00:28:20,210
the signature is valid because the key

640
00:28:18,140 --> 00:28:24,230
was compromised or maybe one month later

641
00:28:20,210 --> 00:28:26,510
the simply does the certificate expired

642
00:28:24,230 --> 00:28:28,400
in a very simple case again but if you

643
00:28:26,510 --> 00:28:30,530
didn't collect the evidence you cannot

644
00:28:28,400 --> 00:28:32,690
prove in case of dispute that that it

645
00:28:30,530 --> 00:28:35,389
was really the other person or the sub

646
00:28:32,690 --> 00:28:37,400
CA gets gets compromised or the whole

647
00:28:35,390 --> 00:28:40,150
Arg or it gets compromised because

648
00:28:37,400 --> 00:28:43,640
there's some new mathematical

649
00:28:40,150 --> 00:28:46,820
breakthroughs or simply in computer

650
00:28:43,640 --> 00:28:48,680
speeds that allow two might attacks that

651
00:28:46,820 --> 00:28:52,879
were before unfeasible and there are

652
00:28:48,680 --> 00:28:55,280
ways to to protect from all of that by

653
00:28:52,880 --> 00:28:58,780
actively maintaining the signatures in

654
00:28:55,280 --> 00:28:58,780
something that you might now

655
00:28:59,960 --> 00:29:05,059
call a blockchain of trust

656
00:29:02,419 --> 00:29:07,840
basically resigning the evidence you

657
00:29:05,059 --> 00:29:10,100
have with newer stronger better

658
00:29:07,840 --> 00:29:12,110
algorithmically my training is having

659
00:29:10,100 --> 00:29:13,699
multiple sources of the distrust and

660
00:29:12,110 --> 00:29:15,820
building this this block training of

661
00:29:13,700 --> 00:29:20,090
trust you're able actually to even prove

662
00:29:15,820 --> 00:29:22,520
100 years from now that such a signature

663
00:29:20,090 --> 00:29:25,039
was valid which is important where we go

664
00:29:22,520 --> 00:29:27,908
in the digital and we want clients to be

665
00:29:25,039 --> 00:29:30,860
able to make those long-term

666
00:29:27,909 --> 00:29:32,570
transactions with through electronic

667
00:29:30,860 --> 00:29:37,969
means this is this is then becoming

668
00:29:32,570 --> 00:29:40,428
really really important consequences are

669
00:29:37,970 --> 00:29:43,460
obvious if if an attacker can converge

670
00:29:40,429 --> 00:29:46,549
by eye their access to the private key

671
00:29:43,460 --> 00:29:49,370
or by being able to manipulate the

672
00:29:46,549 --> 00:29:51,860
document or other means be able to trick

673
00:29:49,370 --> 00:29:54,139
the system he can like someone or the

674
00:29:51,860 --> 00:29:58,399
system do something that was not not not

675
00:29:54,140 --> 00:30:00,980
intended in all the thing I was talking

676
00:29:58,399 --> 00:30:02,870
before so the signers can can deny that

677
00:30:00,980 --> 00:30:05,770
it was them signing document if the

678
00:30:02,870 --> 00:30:08,989
whole infrastructure is is is mismanaged

679
00:30:05,770 --> 00:30:12,049
other cases where signatures are are

680
00:30:08,990 --> 00:30:14,270
used for for integrity of logs again to

681
00:30:12,049 --> 00:30:18,230
either be able to audit or proof in case

682
00:30:14,270 --> 00:30:20,360
of dispute can be can be compromised so

683
00:30:18,230 --> 00:30:22,840
a lot of consequences that that will

684
00:30:20,360 --> 00:30:29,059
happen and now about more practical

685
00:30:22,840 --> 00:30:30,709
types of attacks so everybody thinks

686
00:30:29,059 --> 00:30:33,950
about the private key and gaining access

687
00:30:30,710 --> 00:30:35,419
or or gaining access to at least to the

688
00:30:33,950 --> 00:30:37,520
usage of private key for example if

689
00:30:35,419 --> 00:30:39,860
there's an HSN maybe it's not really

690
00:30:37,520 --> 00:30:42,710
important that you get the copy of the

691
00:30:39,860 --> 00:30:48,199
private key if you are able to to

692
00:30:42,710 --> 00:30:50,240
control the design Inc device and make

693
00:30:48,200 --> 00:30:52,159
it sign whatever whatever you you want

694
00:30:50,240 --> 00:30:55,190
but this is usually really hard he's

695
00:30:52,159 --> 00:30:59,809
protected as I said before in some hsn's

696
00:30:55,190 --> 00:31:02,779
so there's a much easier use case which

697
00:30:59,809 --> 00:31:05,809
is as research shows used in more than

698
00:31:02,779 --> 00:31:08,419
sixty percent of of cases and this just

699
00:31:05,809 --> 00:31:10,789
makes two steps don't want whatever free

700
00:31:08,419 --> 00:31:12,230
software to generate a certificate issue

701
00:31:10,789 --> 00:31:16,129
it in one minute

702
00:31:12,230 --> 00:31:17,600
and then modify the trust either whoever

703
00:31:16,130 --> 00:31:20,809
is your thought attacking the server

704
00:31:17,600 --> 00:31:24,230
client modify the trust and it so

705
00:31:20,809 --> 00:31:28,000
happens that usually everybody being

706
00:31:24,230 --> 00:31:31,399
pushed by business and so on they always

707
00:31:28,000 --> 00:31:33,380
are concerned about making the

708
00:31:31,399 --> 00:31:36,199
application work and when it works

709
00:31:33,380 --> 00:31:39,159
they're happy and somehow it sleeps that

710
00:31:36,200 --> 00:31:43,549
the validation environment is equally

711
00:31:39,159 --> 00:31:46,940
important it's not a privacy issue you

712
00:31:43,549 --> 00:31:49,580
don't have to protect the Trust's or as

713
00:31:46,940 --> 00:31:52,389
the private key but you have to protect

714
00:31:49,580 --> 00:31:56,029
this integrity and this somehow escapes

715
00:31:52,389 --> 00:31:57,979
and as a result in more than sixty

716
00:31:56,029 --> 00:32:00,200
percent of cases this this is the nine

717
00:31:57,980 --> 00:32:02,029
vector of attack just modified restore

718
00:32:00,200 --> 00:32:03,830
and then you avoid all this

719
00:32:02,029 --> 00:32:06,049
infrastructure you're just using a

720
00:32:03,830 --> 00:32:08,059
simple key you generated in a minute

721
00:32:06,049 --> 00:32:10,730
with your some free software and some

722
00:32:08,059 --> 00:32:15,019
cheap computer of yours if you're able

723
00:32:10,730 --> 00:32:17,299
to modify the trust and and again much

724
00:32:15,019 --> 00:32:19,070
other much easier waste and then trying

725
00:32:17,299 --> 00:32:21,789
to get access to the private key are

726
00:32:19,070 --> 00:32:24,500
possible sometimes it's possible to

727
00:32:21,789 --> 00:32:28,120
again attacked the validation

728
00:32:24,500 --> 00:32:31,309
environment which which usually doesn't

729
00:32:28,120 --> 00:32:32,689
have such protection as the signing

730
00:32:31,309 --> 00:32:34,039
environment maybe you're able to

731
00:32:32,690 --> 00:32:38,240
substitute the data which is being

732
00:32:34,039 --> 00:32:41,450
validated so or in some other way

733
00:32:38,240 --> 00:32:43,460
attacked the application validation

734
00:32:41,450 --> 00:32:45,860
components there to conclude the

735
00:32:43,460 --> 00:32:48,740
opposites resolve and just make the flip

736
00:32:45,860 --> 00:32:52,120
right because that's that's that that

737
00:32:48,740 --> 00:32:58,490
happens or us was saying before I try to

738
00:32:52,120 --> 00:33:01,370
attack through for the validation of by

739
00:32:58,490 --> 00:33:03,320
replying OCSP that was so valid maybe

740
00:33:01,370 --> 00:33:07,100
one minute ago maybe this it's still

741
00:33:03,320 --> 00:33:10,519
within its expiration and you can you

742
00:33:07,100 --> 00:33:12,590
can try to leverage that and obviously

743
00:33:10,519 --> 00:33:15,620
add hidden code right to the software

744
00:33:12,590 --> 00:33:17,928
validation environment so a lot of much

745
00:33:15,620 --> 00:33:19,668
easier usually cases than attacking the

746
00:33:17,929 --> 00:33:22,760
private key which has all the controls

747
00:33:19,669 --> 00:33:25,880
in our bank for example private key has

748
00:33:22,760 --> 00:33:27,410
like the most secret level of

749
00:33:25,880 --> 00:33:32,200
action right you don't want to attack

750
00:33:27,410 --> 00:33:33,580
that some-some checklist I'm I'm

751
00:33:32,200 --> 00:33:38,770
[Music]

752
00:33:33,580 --> 00:33:42,110
starting to finish my my examples so

753
00:33:38,770 --> 00:33:45,260
make sure that your private private key

754
00:33:42,110 --> 00:33:47,750
material is a secret but also remember

755
00:33:45,260 --> 00:33:49,910
about the integrity of the trust and the

756
00:33:47,750 --> 00:33:52,820
validation environment and of course

757
00:33:49,910 --> 00:33:54,680
review code sometimes it might be some

758
00:33:52,820 --> 00:33:58,120
some malicious action by by some

759
00:33:54,680 --> 00:34:00,140
internal people and it's usually very

760
00:33:58,120 --> 00:34:02,330
often is that it's some internal

761
00:34:00,140 --> 00:34:05,420
employees may be of revenge or something

762
00:34:02,330 --> 00:34:08,239
else putting something in the in the

763
00:34:05,420 --> 00:34:10,460
code I did so myself thinks in the code

764
00:34:08,239 --> 00:34:14,029
what we've done even not intentionally

765
00:34:10,460 --> 00:34:16,250
but some things that that needs to be

766
00:34:14,030 --> 00:34:22,550
this is something that needs to be to be

767
00:34:16,250 --> 00:34:25,190
checked and for for the digital

768
00:34:22,550 --> 00:34:27,830
signature case it's really important to

769
00:34:25,190 --> 00:34:30,168
know what the signature is assigning and

770
00:34:27,830 --> 00:34:32,210
what's the meaning of the data which is

771
00:34:30,168 --> 00:34:34,330
being signed so if there's no dynamic

772
00:34:32,210 --> 00:34:37,790
content can be changed somehow

773
00:34:34,330 --> 00:34:40,668
substitute it or this double meaning

774
00:34:37,790 --> 00:34:43,639
form as being being used and then

775
00:34:40,668 --> 00:34:46,250
they're all dispute cases so you want to

776
00:34:43,639 --> 00:34:50,060
make sure that this is not the signature

777
00:34:46,250 --> 00:34:52,429
is not damaging in storage and and is

778
00:34:50,060 --> 00:34:54,500
simply available to you and when when

779
00:34:52,429 --> 00:34:58,370
needed and equal you have to access to

780
00:34:54,500 --> 00:35:00,830
all the validation data needed for for

781
00:34:58,370 --> 00:35:02,750
verifying it and they're really nice I

782
00:35:00,830 --> 00:35:05,930
enjoy those those cases anonymously with

783
00:35:02,750 --> 00:35:07,730
long-term advance signatures which

784
00:35:05,930 --> 00:35:09,440
require this block chain of trust you

785
00:35:07,730 --> 00:35:11,960
really might want to make sure that you

786
00:35:09,440 --> 00:35:15,440
do that if you expect or wants to be

787
00:35:11,960 --> 00:35:17,780
able to validate the signature even a

788
00:35:15,440 --> 00:35:21,680
month from now a year from now ten years

789
00:35:17,780 --> 00:35:24,130
from now very very important any

790
00:35:21,680 --> 00:35:24,129
questions

791
00:35:29,020 --> 00:35:33,280
to to come to me after after the

792
00:35:31,360 --> 00:35:35,230
presentation I'll be happy to speak with

793
00:35:33,280 --> 00:35:40,000
any of you

794
00:35:35,230 --> 00:35:42,970
thank you for participating please visit

795
00:35:40,000 --> 00:35:47,880
our booth at UBS we have some cool stuff

796
00:35:42,970 --> 00:35:47,879
for you and enjoy the conference

