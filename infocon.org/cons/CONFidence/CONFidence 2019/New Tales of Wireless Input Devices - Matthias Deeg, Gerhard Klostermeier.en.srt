1
00:00:07,690 --> 00:00:13,340
Jen Davila hello everybody my name is

2
00:00:10,790 --> 00:00:15,860
matheus tee I'm Garrett in the next

3
00:00:13,340 --> 00:00:19,310
couple of minutes we want to present new

4
00:00:15,860 --> 00:00:20,180
tales of lawless input devices yeah as I

5
00:00:19,310 --> 00:00:22,610
said my name is Mattias

6
00:00:20,180 --> 00:00:25,279
I'm interested in IT security and I

7
00:00:22,610 --> 00:00:27,560
think this would be enough for me as

8
00:00:25,279 --> 00:00:30,259
well IT security consultants leash and

9
00:00:27,560 --> 00:00:34,730
theirs as well just interested in hiking

10
00:00:30,260 --> 00:00:36,739
hardware and radio yeah and the agenda

11
00:00:34,730 --> 00:00:38,900
power talk we have here are nine topics

12
00:00:36,739 --> 00:00:41,449
at first we want to introduce use

13
00:00:38,900 --> 00:00:43,070
technology we have used and year vertex

14
00:00:41,449 --> 00:00:45,710
we want to talk a little bit about a

15
00:00:43,070 --> 00:00:47,420
previous work of other researchers born

16
00:00:45,710 --> 00:00:50,420
to talk about our research and what is

17
00:00:47,420 --> 00:00:52,309
new about the general attack surface and

18
00:00:50,420 --> 00:00:55,670
different attack scenarios the found

19
00:00:52,309 --> 00:00:58,280
vulnerabilities we try to do some live

20
00:00:55,670 --> 00:00:59,989
demos and have sacrificed a lot to the

21
00:00:58,280 --> 00:01:02,119
live demo gods this morning so I hope

22
00:00:59,989 --> 00:01:04,009
everything goes well we additionally

23
00:01:02,119 --> 00:01:06,290
have some anecdotes concerning wireless

24
00:01:04,010 --> 00:01:09,080
input devices and of course at the end

25
00:01:06,290 --> 00:01:14,600
some conclusions and recommendations for

26
00:01:09,080 --> 00:01:17,270
you and hopefully some time for Q&A okay

27
00:01:14,600 --> 00:01:19,130
so when we talk about valid input

28
00:01:17,270 --> 00:01:20,839
devices the next couple of minutes we

29
00:01:19,130 --> 00:01:21,860
actually talk about the devices you can

30
00:01:20,840 --> 00:01:24,580
see here so we are talking about

31
00:01:21,860 --> 00:01:28,160
wireless keyboards Wallace mice and

32
00:01:24,580 --> 00:01:30,289
Wireless presenters in this case yeah

33
00:01:28,160 --> 00:01:32,240
it's a technology behind it is radio

34
00:01:30,290 --> 00:01:35,300
technology especially 2.4 gigahertz

35
00:01:32,240 --> 00:01:37,699
communication and yeah you have

36
00:01:35,300 --> 00:01:40,580
electromagnetic waves between those

37
00:01:37,700 --> 00:01:42,980
devices and you have stuff like Mouse

38
00:01:40,580 --> 00:01:45,530
action mouse movements mouse button

39
00:01:42,980 --> 00:01:47,690
presses and of course you have keyboard

40
00:01:45,530 --> 00:01:50,690
events keystrokes that can happen

41
00:01:47,690 --> 00:01:52,520
between the sander for instance a

42
00:01:50,690 --> 00:01:54,470
keyboard or wireless presenter and a

43
00:01:52,520 --> 00:01:56,240
receiver usually we speed up well you

44
00:01:54,470 --> 00:01:58,880
have to plug in into your computer

45
00:01:56,240 --> 00:02:01,130
system yeah there has been a lot of

46
00:01:58,880 --> 00:02:03,470
previous work of other researchers

47
00:02:01,130 --> 00:02:05,750
within the last decade actually so it

48
00:02:03,470 --> 00:02:07,610
started back in 2010 with key curriki

49
00:02:05,750 --> 00:02:11,030
where some bothersome put devices were

50
00:02:07,610 --> 00:02:13,280
attacked by the people from the dream

51
00:02:11,030 --> 00:02:16,790
lab technologies then concerning wall as

52
00:02:13,280 --> 00:02:18,890
presenters back in 2010 actually there

53
00:02:16,790 --> 00:02:20,579
was a talk from Niels poising who

54
00:02:18,890 --> 00:02:23,100
already showed how you can

55
00:02:20,580 --> 00:02:24,450
koalas presenters and own people for

56
00:02:23,100 --> 00:02:26,579
instance also live onstage

57
00:02:24,450 --> 00:02:28,769
then there was some research concerning

58
00:02:26,580 --> 00:02:32,100
the NRF based device we are also using

59
00:02:28,770 --> 00:02:34,430
in a live demo a few minutes later by

60
00:02:32,100 --> 00:02:36,720
Travis Goodspeed they were a key sniffer

61
00:02:34,430 --> 00:02:40,520
hardware for sniffing attacks by Samy

62
00:02:36,720 --> 00:02:43,320
Kamkar and then back in 2016 mark Newlin

63
00:02:40,520 --> 00:02:45,750
published a lot of research concerning

64
00:02:43,320 --> 00:02:48,000
Wallace input devices publicly known as

65
00:02:45,750 --> 00:02:50,610
mouse check he's check and key sniffer

66
00:02:48,000 --> 00:02:52,830
and our previous research back three

67
00:02:50,610 --> 00:02:55,860
years ago was also released publicly in

68
00:02:52,830 --> 00:02:58,340
2016 was call of mice and keyboards here

69
00:02:55,860 --> 00:03:02,250
and now we are here to talk about

70
00:02:58,340 --> 00:03:05,580
something new and we are also answering

71
00:03:02,250 --> 00:03:07,980
some old questions and independently to

72
00:03:05,580 --> 00:03:11,490
us mark Noonan also publicly released a

73
00:03:07,980 --> 00:03:13,980
few weeks ago yeah some of his research

74
00:03:11,490 --> 00:03:17,459
is also doing right now concerning

75
00:03:13,980 --> 00:03:19,590
presentation clickers ok so what's new

76
00:03:17,459 --> 00:03:22,709
it's new tales of wireless input devices

77
00:03:19,590 --> 00:03:25,500
so we want to us well we want to answer

78
00:03:22,709 --> 00:03:28,170
the question we lift out on our last

79
00:03:25,500 --> 00:03:31,140
research and the other important thing

80
00:03:28,170 --> 00:03:34,018
and the wireless presentation these are

81
00:03:31,140 --> 00:03:36,000
presentation clickers we're not in the

82
00:03:34,019 --> 00:03:39,060
focus for our last research and they

83
00:03:36,000 --> 00:03:44,640
come by very popular and we want to have

84
00:03:39,060 --> 00:03:47,880
a closer look at them as well and in

85
00:03:44,640 --> 00:03:50,100
addition a lot of people and customers

86
00:03:47,880 --> 00:03:52,859
came to us and asked well if all the

87
00:03:50,100 --> 00:03:54,750
wireless input keyboards are broken can

88
00:03:52,860 --> 00:03:57,090
I just use a Bluetooth keyboard and

89
00:03:54,750 --> 00:04:00,200
everything will be fine and we wanted to

90
00:03:57,090 --> 00:04:03,900
try to answer the question as well so we

91
00:04:00,200 --> 00:04:06,030
this is just a recap so to highlight the

92
00:04:03,900 --> 00:04:08,459
second line the Fujitsu keyboard was

93
00:04:06,030 --> 00:04:10,050
still open from our last research we

94
00:04:08,459 --> 00:04:12,420
weren't sure if we can do keystroke

95
00:04:10,050 --> 00:04:14,970
injections just remember this is an

96
00:04:12,420 --> 00:04:18,630
secure keyboard it's advertised with AES

97
00:04:14,970 --> 00:04:21,690
encryption and being secured and there

98
00:04:18,630 --> 00:04:24,270
come way we put it together a list of

99
00:04:21,690 --> 00:04:25,979
several more devices the most of them

100
00:04:24,270 --> 00:04:29,669
are wireless presenters as you can see

101
00:04:25,979 --> 00:04:34,260
and of course like I said we just went

102
00:04:29,669 --> 00:04:37,530
to Amazon in Germany and took the three

103
00:04:34,260 --> 00:04:41,700
what or most likely bored keyboards with

104
00:04:37,530 --> 00:04:44,909
a bluetooth technology from there okay

105
00:04:41,700 --> 00:04:47,099
so we had a look at non bluetooth 2.4

106
00:04:44,910 --> 00:04:48,750
gigahertz devices and Bluetooth 2.4

107
00:04:47,100 --> 00:04:51,390
gigahertz devices doesn't important

108
00:04:48,750 --> 00:04:53,250
point because we will mix the

109
00:04:51,390 --> 00:04:56,490
vulnerabilities we found in both of

110
00:04:53,250 --> 00:04:59,790
those their device classes actually so

111
00:04:56,490 --> 00:05:01,710
just as a reminder for you so I'm

112
00:04:59,790 --> 00:05:03,540
talking about the test methodology we've

113
00:05:01,710 --> 00:05:05,250
used it's yeah quite straightforward and

114
00:05:03,540 --> 00:05:08,400
think everybody who is doing this kind

115
00:05:05,250 --> 00:05:10,890
of research uses the same methodology in

116
00:05:08,400 --> 00:05:12,539
this way at first we try to do some

117
00:05:10,890 --> 00:05:15,030
hardware analysis so we are opening up

118
00:05:12,540 --> 00:05:17,190
the devices we have wireless presenters

119
00:05:15,030 --> 00:05:19,380
keyboards and even abdominals the tiny

120
00:05:17,190 --> 00:05:21,060
ones we start to look at the printed

121
00:05:19,380 --> 00:05:22,830
circuit boards we try to identify its

122
00:05:21,060 --> 00:05:26,580
identify the different chips that are

123
00:05:22,830 --> 00:05:29,070
used we try to find documentation and we

124
00:05:26,580 --> 00:05:31,859
are hopefully also development kits that

125
00:05:29,070 --> 00:05:33,330
are publicly available we try to find

126
00:05:31,860 --> 00:05:35,130
different test points that I want

127
00:05:33,330 --> 00:05:38,039
devices that can be used for debug

128
00:05:35,130 --> 00:05:41,340
access or programming access for

129
00:05:38,040 --> 00:05:43,530
instance sometimes we sort us some wires

130
00:05:41,340 --> 00:05:45,090
to the PCBs for having deeper access

131
00:05:43,530 --> 00:05:47,520
actually if it's not already there and

132
00:05:45,090 --> 00:05:49,169
we also use logic analyzers some special

133
00:05:47,520 --> 00:05:51,270
cases to analyze data communication

134
00:05:49,170 --> 00:05:52,740
between different chips if we for

135
00:05:51,270 --> 00:05:55,490
instance have a two chip design with a

136
00:05:52,740 --> 00:05:59,490
microcontroller and a separate receiver

137
00:05:55,490 --> 00:06:02,190
yeah then a second the second stage is

138
00:05:59,490 --> 00:06:05,640
the radio based analysis for this we use

139
00:06:02,190 --> 00:06:06,810
yeah all the popular radio or RF tools

140
00:06:05,640 --> 00:06:09,050
that are available for instance

141
00:06:06,810 --> 00:06:11,790
software-defined radios like a hacker f1

142
00:06:09,050 --> 00:06:14,280
the uber tooth one vibrates what catches

143
00:06:11,790 --> 00:06:17,040
for the blue tooth analysis stuff we

144
00:06:14,280 --> 00:06:19,440
have a crazy crazy radio PA USB dongle

145
00:06:17,040 --> 00:06:20,930
and the NRF research further developed

146
00:06:19,440 --> 00:06:23,910
by Mark Newland a couple of years ago

147
00:06:20,930 --> 00:06:26,730
which is yeah quite a handy useful

148
00:06:23,910 --> 00:06:30,300
platform and also low-cost and then on

149
00:06:26,730 --> 00:06:32,040
the software side we use your typical RF

150
00:06:30,300 --> 00:06:34,710
analysis software like the universal

151
00:06:32,040 --> 00:06:37,080
radio Hecker new radio and also in

152
00:06:34,710 --> 00:06:39,390
spectrum to record replay and analyze

153
00:06:37,080 --> 00:06:41,450
all the radio communication we see that

154
00:06:39,390 --> 00:06:43,950
is going on with this different devices

155
00:06:41,450 --> 00:06:45,930
and yeah of course we try to identify

156
00:06:43,950 --> 00:06:47,449
the newsfront severs if it was not

157
00:06:45,930 --> 00:06:51,169
possible by the hardware analysis

158
00:06:47,449 --> 00:06:53,840
we try to do it by analyzing the radio

159
00:06:51,169 --> 00:06:56,539
signals that are recorded over the air

160
00:06:53,840 --> 00:06:58,789
we try to fill our knowledge gaps

161
00:06:56,539 --> 00:07:00,949
concerning the packet framing packet

162
00:06:58,789 --> 00:07:03,378
formats checksums and stuff like that

163
00:07:00,949 --> 00:07:05,779
yeah and concerning you bluetooth

164
00:07:03,379 --> 00:07:08,589
research we give specific Bluetooth

165
00:07:05,779 --> 00:07:13,849
dongles that are well supported with the

166
00:07:08,589 --> 00:07:17,449
Linux loose stack okay and a last step

167
00:07:13,849 --> 00:07:19,460
is firmly analysis to be honest we only

168
00:07:17,449 --> 00:07:21,110
have a superficial look at firmware we

169
00:07:19,460 --> 00:07:26,799
could extract in this research

170
00:07:21,110 --> 00:07:30,529
concerning the Bluetooth devices and

171
00:07:26,800 --> 00:07:32,150
yeah this was due to limited time we had

172
00:07:30,529 --> 00:07:34,099
allotted for this Bluetooth research

173
00:07:32,150 --> 00:07:36,830
project and concerning the non bluetooth

174
00:07:34,099 --> 00:07:38,330
devices we have analyzed it was not

175
00:07:36,830 --> 00:07:40,008
necessary to analyze any firmware

176
00:07:38,330 --> 00:07:43,698
because the goals we wanted to achieve

177
00:07:40,009 --> 00:07:48,229
because achieve by hardware analysis and

178
00:07:43,699 --> 00:07:50,539
radio analysis are the first steps okay

179
00:07:48,229 --> 00:07:53,149
on this slide you can see a typical

180
00:07:50,539 --> 00:07:54,949
wireless presenter I think most of you

181
00:07:53,149 --> 00:07:58,599
are familiar with this kind of devices

182
00:07:54,949 --> 00:08:01,189
so in every conference or meeting room

183
00:07:58,599 --> 00:08:02,990
mostly all over the world you can find a

184
00:08:01,189 --> 00:08:04,669
device like this for example by Logitech

185
00:08:02,990 --> 00:08:07,339
a lot of de Graaff 100 is a quite

186
00:08:04,669 --> 00:08:09,169
popular one and these kind of devices

187
00:08:07,339 --> 00:08:12,050
are actually keyboards with a special

188
00:08:09,169 --> 00:08:14,479
form factor and only a limited amount of

189
00:08:12,050 --> 00:08:16,580
buttons and the buttons you can see here

190
00:08:14,479 --> 00:08:18,258
on the slides it's for the Alpha

191
00:08:16,580 --> 00:08:22,550
hundreds by Logitech it's actually only

192
00:08:18,259 --> 00:08:24,889
page up page down is Cape f5 and what

193
00:08:22,550 --> 00:08:27,919
else we have the period yes on another

194
00:08:24,889 --> 00:08:30,680
button so these are limited capabilities

195
00:08:27,919 --> 00:08:32,448
you are supposed to use when you're

196
00:08:30,680 --> 00:08:36,828
having a wireless presentation clicker

197
00:08:32,448 --> 00:08:38,568
or wireless remote like this and there

198
00:08:36,828 --> 00:08:40,218
are different kinds of wireless

199
00:08:38,568 --> 00:08:42,318
presenters for example this is a

200
00:08:40,219 --> 00:08:44,839
valuable one this is one I will try to

201
00:08:42,318 --> 00:08:46,910
attack in a couple of minutes so this

202
00:08:44,839 --> 00:08:48,500
has the form factor of a ring so you can

203
00:08:46,910 --> 00:08:51,260
just yeah here put it on your finger

204
00:08:48,500 --> 00:08:55,579
during your presentation and yeah have

205
00:08:51,260 --> 00:08:56,360
your hands-free so it's convenient in

206
00:08:55,579 --> 00:08:59,209
some places

207
00:08:56,360 --> 00:09:00,649
I thought you can see earth also see

208
00:08:59,209 --> 00:09:01,849
here on next slides is some internal

209
00:09:00,649 --> 00:09:03,440
photos of the

210
00:09:01,850 --> 00:09:06,019
see bees and also the chips we've

211
00:09:03,440 --> 00:09:08,240
identified so for example here we can

212
00:09:06,019 --> 00:09:11,269
see a beacon transceiver it's just a

213
00:09:08,240 --> 00:09:13,730
single chip technology on another board

214
00:09:11,269 --> 00:09:15,740
here is a logitech al 400 wireless

215
00:09:13,730 --> 00:09:20,120
presenter here we have another kind of

216
00:09:15,740 --> 00:09:23,480
our RF IC it's a non extended conductor

217
00:09:20,120 --> 00:09:25,880
in our of 24 this is another brand of

218
00:09:23,480 --> 00:09:29,420
wireless devices Targus here we also

219
00:09:25,880 --> 00:09:31,250
have an n RF 24 in there here you can

220
00:09:29,420 --> 00:09:32,990
see pictures of a Kensington Wallis

221
00:09:31,250 --> 00:09:35,300
presenter in this case we were not able

222
00:09:32,990 --> 00:09:36,980
by identifying the chips during just the

223
00:09:35,300 --> 00:09:40,370
hardw analysis and staring at the PCBs

224
00:09:36,980 --> 00:09:43,190
because both chips the microcontroller

225
00:09:40,370 --> 00:09:46,250
and the radio transceiver are covered in

226
00:09:43,190 --> 00:09:48,230
epoxy resin and what we did here is you

227
00:09:46,250 --> 00:09:50,690
just wiretap the PCB traces under

228
00:09:48,230 --> 00:09:53,660
microscope sorted some buyers and

229
00:09:50,690 --> 00:09:55,699
analyzed the SPI communication so the

230
00:09:53,660 --> 00:09:57,649
serial peripheral interface and then

231
00:09:55,699 --> 00:09:59,959
checked some data sheets to find out

232
00:09:57,649 --> 00:10:02,209
what was actually the chip or which

233
00:09:59,959 --> 00:10:05,449
chips match the spy communication we

234
00:10:02,209 --> 00:10:08,540
could just sniff in this instance and

235
00:10:05,449 --> 00:10:10,219
here I have some photos regarding the

236
00:10:08,540 --> 00:10:12,740
Bluetooth keyboards the three we have

237
00:10:10,220 --> 00:10:15,529
analyzed for instance this is the PCB

238
00:10:12,740 --> 00:10:19,519
and the Bluetooth system on chip used in

239
00:10:15,529 --> 00:10:22,579
the 1x1 keyboard by Broadcom in this

240
00:10:19,519 --> 00:10:24,949
case this was a logitech k120 bluetooth

241
00:10:22,579 --> 00:10:26,750
keyboard this also used the same chip

242
00:10:24,949 --> 00:10:30,279
but by another manufacturer in this case

243
00:10:26,750 --> 00:10:32,870
it's a Cyprus bluetooth system on a chip

244
00:10:30,279 --> 00:10:35,420
yeah here you see the bank of the device

245
00:10:32,870 --> 00:10:38,089
in some cases you already have some test

246
00:10:35,420 --> 00:10:41,569
points that's just easy to sort of wires

247
00:10:38,089 --> 00:10:42,069
to and analyze stuff sometimes it's not

248
00:10:41,569 --> 00:10:45,259
that easy

249
00:10:42,069 --> 00:10:46,729
yeah and here we can see a photo of the

250
00:10:45,259 --> 00:10:50,449
Microsoft designer Bluetooth keyboard

251
00:10:46,730 --> 00:10:52,279
and actually we had to damage the metal

252
00:10:50,449 --> 00:10:55,250
case of the keyboard to gain access to

253
00:10:52,279 --> 00:10:58,670
the PCB because there it's it's actually

254
00:10:55,250 --> 00:11:01,339
bolted in a small metal case within the

255
00:10:58,670 --> 00:11:06,259
keyboard itself but it's still possible

256
00:11:01,339 --> 00:11:09,470
to gain access there so as you can see

257
00:11:06,259 --> 00:11:11,779
we identified a lot of different

258
00:11:09,470 --> 00:11:13,340
transceivers here and this is just an

259
00:11:11,779 --> 00:11:16,070
overview for you if you

260
00:11:13,340 --> 00:11:18,260
look them want to look them up and we

261
00:11:16,070 --> 00:11:20,810
provided the USB IDs as well so it's

262
00:11:18,260 --> 00:11:23,210
easy to identify them same for the

263
00:11:20,810 --> 00:11:25,729
little ones

264
00:11:23,210 --> 00:11:28,430
another important thing for the analysis

265
00:11:25,730 --> 00:11:31,460
is while reading data sheets

266
00:11:28,430 --> 00:11:32,870
I'm not going deeply into this but a lot

267
00:11:31,460 --> 00:11:35,480
of the information is publicly available

268
00:11:32,870 --> 00:11:37,310
if you read the markings from the chip

269
00:11:35,480 --> 00:11:40,040
and look up the data sheet you can learn

270
00:11:37,310 --> 00:11:42,260
a lot about these chips and sometimes

271
00:11:40,040 --> 00:11:44,240
they're the same just from another

272
00:11:42,260 --> 00:11:46,430
manufacturer sometimes they are like

273
00:11:44,240 --> 00:11:49,220
clones like the bacon chips or nearly

274
00:11:46,430 --> 00:11:50,589
the same as the end of 24 so it is

275
00:11:49,220 --> 00:11:53,029
really helpful and there are some

276
00:11:50,589 --> 00:11:56,180
unknown chips where the data sheets are

277
00:11:53,029 --> 00:11:58,220
not available in what in one case smart

278
00:11:56,180 --> 00:12:00,260
Union already reverse engineered a lot

279
00:11:58,220 --> 00:12:03,320
of these chips and the information was

280
00:12:00,260 --> 00:12:05,540
also publicly available firmware

281
00:12:03,320 --> 00:12:08,240
analysis you can do that too as my

282
00:12:05,540 --> 00:12:11,480
colleague said we didn't do that much um

283
00:12:08,240 --> 00:12:14,750
but in an example in this example the

284
00:12:11,480 --> 00:12:16,850
Microsoft keyboard did not enable the

285
00:12:14,750 --> 00:12:18,680
read out protection so you can just hook

286
00:12:16,850 --> 00:12:20,089
up or grandma to the keyboard and read

287
00:12:18,680 --> 00:12:22,430
out its firmware and all its secrets

288
00:12:20,089 --> 00:12:24,560
that are on there so this is what the

289
00:12:22,430 --> 00:12:28,400
output looks like so get a dump file

290
00:12:24,560 --> 00:12:31,939
with the actual code then the radio

291
00:12:28,400 --> 00:12:33,829
based analysis we did that too so stuff

292
00:12:31,940 --> 00:12:36,470
to define radios there are tools around

293
00:12:33,830 --> 00:12:39,860
now like universal radio hacker really

294
00:12:36,470 --> 00:12:43,130
handy you can see much on this but it's

295
00:12:39,860 --> 00:12:45,800
really easy to do the analysis phase of

296
00:12:43,130 --> 00:12:47,540
of the signals or understanding what the

297
00:12:45,800 --> 00:12:49,550
signal is and if you understand what the

298
00:12:47,540 --> 00:12:52,189
signal is it also has a generator built

299
00:12:49,550 --> 00:12:53,930
in so you can general generate the

300
00:12:52,190 --> 00:12:56,959
package and the way you want them to be

301
00:12:53,930 --> 00:13:01,459
and well send them with your Software

302
00:12:56,959 --> 00:13:03,829
Defined radio yeah the actual challenge

303
00:13:01,459 --> 00:13:06,439
you have been doing reverse engineering

304
00:13:03,830 --> 00:13:08,180
of radio protocols is you are turning a

305
00:13:06,440 --> 00:13:10,250
bit stream like this one here to

306
00:13:08,180 --> 00:13:12,500
something meaningful in order to achieve

307
00:13:10,250 --> 00:13:15,950
something like keystroke injection that

308
00:13:12,500 --> 00:13:17,870
is the picture in the image below so

309
00:13:15,950 --> 00:13:22,580
this is what we did in our or try to do

310
00:13:17,870 --> 00:13:24,530
in our research and yeah general

311
00:13:22,580 --> 00:13:26,590
challenges in this reverse engineering

312
00:13:24,530 --> 00:13:28,240
process are finding out

313
00:13:26,590 --> 00:13:30,820
for a signal modulation that is used for

314
00:13:28,240 --> 00:13:32,440
the radio based communication finding

315
00:13:30,820 --> 00:13:34,450
out a packet format or the packet

316
00:13:32,440 --> 00:13:37,990
framing that is used by the different

317
00:13:34,450 --> 00:13:39,910
identified transceivers we had their

318
00:13:37,990 --> 00:13:42,280
issues with field lengths for instance

319
00:13:39,910 --> 00:13:45,100
there are field length that are not

320
00:13:42,280 --> 00:13:48,100
multiple of eight bits so non 8-bit

321
00:13:45,100 --> 00:13:50,680
bytes and when you start to calculate

322
00:13:48,100 --> 00:13:52,750
some check sums for instance and you

323
00:13:50,680 --> 00:13:54,400
only have an implementation for CRC that

324
00:13:52,750 --> 00:13:58,270
works by twice you have to do some

325
00:13:54,400 --> 00:14:00,880
tricks concerning in initial well use to

326
00:13:58,270 --> 00:14:04,600
compensate odd field lengths for

327
00:14:00,880 --> 00:14:07,090
instance yeah and there's always the

328
00:14:04,600 --> 00:14:08,470
issue with digital data concerning bit

329
00:14:07,090 --> 00:14:11,140
and byte orders so you have to figure

330
00:14:08,470 --> 00:14:14,620
out in which bit and which byte order

331
00:14:11,140 --> 00:14:18,760
data is transformed the sender to the

332
00:14:14,620 --> 00:14:20,890
receiver and there's a lot of checksums

333
00:14:18,760 --> 00:14:23,950
going on in most of the protocols some

334
00:14:20,890 --> 00:14:26,439
checksums are vendor specific and only

335
00:14:23,950 --> 00:14:28,950
regard to payload and the other check

336
00:14:26,440 --> 00:14:33,400
sums are actually radio specific and

337
00:14:28,950 --> 00:14:37,030
yeah depending on the wireless

338
00:14:33,400 --> 00:14:38,350
transceiver that is actually used and of

339
00:14:37,030 --> 00:14:40,449
course you have to find out the payload

340
00:14:38,350 --> 00:14:43,570
contents so how did devices actually

341
00:14:40,450 --> 00:14:46,390
work how they encode their data when

342
00:14:43,570 --> 00:14:49,980
communicating Mouse actions or keyboard

343
00:14:46,390 --> 00:14:52,960
events from the keyboard or from the

344
00:14:49,980 --> 00:14:55,540
presentation clicker to the receiver to

345
00:14:52,960 --> 00:14:58,300
the computer actually and there is also

346
00:14:55,540 --> 00:14:59,620
something called data whitening and some

347
00:14:58,300 --> 00:15:03,790
data sheets it's also called a data

348
00:14:59,620 --> 00:15:06,670
scrambling or pseudo noise codes I would

349
00:15:03,790 --> 00:15:09,040
not regard this a security feature but

350
00:15:06,670 --> 00:15:12,939
some vendors use it as security feature

351
00:15:09,040 --> 00:15:16,060
and it means that you can turn on extra

352
00:15:12,940 --> 00:15:19,690
scrambling layer in your transceiver

353
00:15:16,060 --> 00:15:22,270
radio and the thing that you sent to the

354
00:15:19,690 --> 00:15:24,190
radio is not the thing that you can see

355
00:15:22,270 --> 00:15:28,180
over-the-air by doing a radio analysis

356
00:15:24,190 --> 00:15:30,040
so you have a type of encryption

357
00:15:28,180 --> 00:15:33,489
actually going on and this encryption is

358
00:15:30,040 --> 00:15:35,110
called data whitening in this case and

359
00:15:33,490 --> 00:15:37,810
some people also call it take the

360
00:15:35,110 --> 00:15:40,030
scrambling and for this instances you

361
00:15:37,810 --> 00:15:40,279
have to find out what are the initial

362
00:15:40,030 --> 00:15:43,220
well

363
00:15:40,279 --> 00:15:45,589
use for data scrambling what might the

364
00:15:43,220 --> 00:15:47,180
data scrambling algorithm look like in

365
00:15:45,589 --> 00:15:50,540
order to piay and be able to generate

366
00:15:47,180 --> 00:15:52,638
arbitrary packets that you want to send

367
00:15:50,540 --> 00:15:55,370
to the receiver in order to find out if

368
00:15:52,639 --> 00:15:57,920
you can provoke or trigger some actions

369
00:15:55,370 --> 00:16:01,819
that are not actually intended by the

370
00:15:57,920 --> 00:16:04,729
manufacturers themselves on this slider

371
00:16:01,819 --> 00:16:07,339
you can see how a typical packet is

372
00:16:04,730 --> 00:16:08,959
looking when we're talking about 2.4

373
00:16:07,339 --> 00:16:12,079
gigahertz communication the non

374
00:16:08,959 --> 00:16:14,839
bluetooth devices we've analyzed usually

375
00:16:12,079 --> 00:16:17,180
we have a preamble we have syncwords one

376
00:16:14,839 --> 00:16:19,399
or more there may be in address fields a

377
00:16:17,180 --> 00:16:22,099
control world fields a payload and

378
00:16:19,399 --> 00:16:23,269
there's the checksum at the end and we

379
00:16:22,100 --> 00:16:24,829
gonna control words there are also

380
00:16:23,269 --> 00:16:26,959
different types of control words and

381
00:16:24,829 --> 00:16:28,489
control parameters are supported by

382
00:16:26,959 --> 00:16:30,529
different vendors usually there is a

383
00:16:28,490 --> 00:16:33,529
field for a packet length or a payload

384
00:16:30,529 --> 00:16:37,100
length the configuration concerning

385
00:16:33,529 --> 00:16:38,749
acknowledgments and a packet ID and it's

386
00:16:37,100 --> 00:16:40,999
important to note that not all fields

387
00:16:38,749 --> 00:16:42,559
are actually used by all 2.4 gigahertz

388
00:16:40,999 --> 00:16:45,439
transceivers well that's a good

389
00:16:42,559 --> 00:16:47,209
blueprint for doing some educated

390
00:16:45,439 --> 00:16:49,459
guesses if you don't have access to the

391
00:16:47,209 --> 00:16:51,439
actual documentation of the chip you're

392
00:16:49,459 --> 00:16:54,619
analyzing so for unmarked chip for

393
00:16:51,439 --> 00:16:55,939
instance just start with this and try to

394
00:16:54,620 --> 00:16:58,670
figure out what is used to notice what

395
00:16:55,939 --> 00:17:01,189
news what what is not used why educated

396
00:16:58,670 --> 00:17:03,280
guesses in trial and error yan on this

397
00:17:01,189 --> 00:17:08,030
slide you can see an actual example

398
00:17:03,280 --> 00:17:10,668
turning a bit stream so just a sequence

399
00:17:08,030 --> 00:17:13,459
of ones and zeros to some actual

400
00:17:10,669 --> 00:17:15,520
meaningful datum and this is the packet

401
00:17:13,459 --> 00:17:19,699
format this is d that is used by the

402
00:17:15,520 --> 00:17:22,398
beacon 2461 wireless presenter we've

403
00:17:19,699 --> 00:17:26,329
analyzed it's called the inner Tech

404
00:17:22,398 --> 00:17:28,729
Wallace presented 2002 and yeah I've

405
00:17:26,329 --> 00:17:31,340
just described here all the different

406
00:17:28,730 --> 00:17:34,070
fields on the slide so we have a

407
00:17:31,340 --> 00:17:36,470
preamble a classic preamble with

408
00:17:34,070 --> 00:17:38,539
alternating ones and zeros it's a one

409
00:17:36,470 --> 00:17:41,390
byte in this case we have a five by two

410
00:17:38,539 --> 00:17:43,640
dress that is used to address a unique

411
00:17:41,390 --> 00:17:46,190
device so if several people are using

412
00:17:43,640 --> 00:17:48,200
the same product in the same place they

413
00:17:46,190 --> 00:17:49,669
will have different addresses and the

414
00:17:48,200 --> 00:17:51,919
receivers and the senders are actually

415
00:17:49,669 --> 00:17:52,880
paired so you can only talk from one

416
00:17:51,919 --> 00:17:54,740
sender to

417
00:17:52,880 --> 00:17:56,690
specific receiver and this is done by

418
00:17:54,740 --> 00:18:00,050
having a unique fight by the dress in

419
00:17:56,690 --> 00:18:03,950
this case then there is a control board

420
00:18:00,050 --> 00:18:06,200
this is an odd length field in this case

421
00:18:03,950 --> 00:18:08,450
because in total it's nine bits long so

422
00:18:06,200 --> 00:18:11,030
it's not a multiple of eight so we have

423
00:18:08,450 --> 00:18:13,640
to do some tricks calculating the CRC

424
00:18:11,030 --> 00:18:15,110
checksums and here we have a payload

425
00:18:13,640 --> 00:18:17,510
length of three bytes in this example

426
00:18:15,110 --> 00:18:20,179
the packet ID is three and there are

427
00:18:17,510 --> 00:18:21,920
known Auto acknowledgments required by

428
00:18:20,180 --> 00:18:24,980
the receiver then there is the actual

429
00:18:21,920 --> 00:18:26,600
payload the good thing is the payload in

430
00:18:24,980 --> 00:18:29,150
all the instances we have found in

431
00:18:26,600 --> 00:18:30,560
wireless presenters is unencrypted this

432
00:18:29,150 --> 00:18:33,770
means that if you know what you are

433
00:18:30,560 --> 00:18:36,500
looking for you can see it unencrypted

434
00:18:33,770 --> 00:18:39,200
it after you've been modulated to signal

435
00:18:36,500 --> 00:18:42,140
correctly so here we have the clear text

436
00:18:39,200 --> 00:18:44,720
bytes for B for easy or zero in hex and

437
00:18:42,140 --> 00:18:48,320
actually the second byte of those the

438
00:18:44,720 --> 00:18:50,180
for E is a human interface ID key scan

439
00:18:48,320 --> 00:18:51,830
code that we want to send our computer

440
00:18:50,180 --> 00:18:57,200
system where you speed on release attach

441
00:18:51,830 --> 00:18:58,550
to and in I think all cases of the

442
00:18:57,200 --> 00:19:04,280
presenters we have tested there's also

443
00:18:58,550 --> 00:19:07,370
16-bit CRC check sum actually calculated

444
00:19:04,280 --> 00:19:09,170
by the transceiver itself and there also

445
00:19:07,370 --> 00:19:10,580
some more text check sums regarding

446
00:19:09,170 --> 00:19:13,310
other wireless presenters and also

447
00:19:10,580 --> 00:19:15,649
keyboards which are integrated into the

448
00:19:13,310 --> 00:19:18,320
payload so there can be more checksums

449
00:19:15,650 --> 00:19:20,300
additives check sums or by polynomial

450
00:19:18,320 --> 00:19:21,980
division in the payload itself and you

451
00:19:20,300 --> 00:19:23,180
will also have to reverse-engineer those

452
00:19:21,980 --> 00:19:25,670
check sums in order to generate

453
00:19:23,180 --> 00:19:28,160
arbitrary packets and to see if you can

454
00:19:25,670 --> 00:19:31,040
also send different events different

455
00:19:28,160 --> 00:19:32,690
keystrokes to USB receiver for example

456
00:19:31,040 --> 00:19:40,730
in order to achieve a keystroke

457
00:19:32,690 --> 00:19:44,470
injection attack okay so there are

458
00:19:40,730 --> 00:19:50,000
different attack scenarios in our case

459
00:19:44,470 --> 00:19:53,060
they pretty much you can think of them

460
00:19:50,000 --> 00:19:54,140
if you look at the devices so you can do

461
00:19:53,060 --> 00:19:55,790
the physical ones

462
00:19:54,140 --> 00:19:58,300
if we have access to device like

463
00:19:55,790 --> 00:20:01,070
extracting forever or manipulating it or

464
00:19:58,300 --> 00:20:03,470
maybe getting the key material from

465
00:20:01,070 --> 00:20:05,270
there it's well for presenters there's

466
00:20:03,470 --> 00:20:05,680
not much key material there but they're

467
00:20:05,270 --> 00:20:08,700
not

468
00:20:05,680 --> 00:20:11,950
rapping but for keyboard stairs maybe

469
00:20:08,700 --> 00:20:15,070
and you of course you can the over the

470
00:20:11,950 --> 00:20:19,090
air attacks like replay attacks just

471
00:20:15,070 --> 00:20:22,419
recording signal replaying it checking

472
00:20:19,090 --> 00:20:26,080
if it's authenticated maybe you can

473
00:20:22,420 --> 00:20:28,120
input some keystrokes in anyway and if

474
00:20:26,080 --> 00:20:35,409
it is encrypted maybe there are ways to

475
00:20:28,120 --> 00:20:37,419
decrypt the communications so these are

476
00:20:35,410 --> 00:20:39,790
the four types of security security

477
00:20:37,420 --> 00:20:42,490
vulnerabilities we've found so we found

478
00:20:39,790 --> 00:20:45,280
actually possibilities well there

479
00:20:42,490 --> 00:20:49,510
there's not a good protection against

480
00:20:45,280 --> 00:20:51,310
reading out the the sensitive data the

481
00:20:49,510 --> 00:20:53,350
communication is at least for the

482
00:20:51,310 --> 00:20:56,740
presenters unencrypted and on

483
00:20:53,350 --> 00:20:59,020
authenticators and we have missing

484
00:20:56,740 --> 00:21:00,940
protection against replay attacks so you

485
00:20:59,020 --> 00:21:05,250
can just record a signal and replay it

486
00:21:00,940 --> 00:21:09,940
and well disturb the presenter with it

487
00:21:05,250 --> 00:21:13,900
and we have cryptographic issues where

488
00:21:09,940 --> 00:21:16,180
we can inject keys well at Dong else

489
00:21:13,900 --> 00:21:22,560
that actually should not allow us to

490
00:21:16,180 --> 00:21:25,600
inject keys so for the first one this is

491
00:21:22,560 --> 00:21:28,720
Rob obvious like I said going fast

492
00:21:25,600 --> 00:21:30,189
forward here and so the especially for

493
00:21:28,720 --> 00:21:34,150
the keyboards the Bluetooth keyboards

494
00:21:30,190 --> 00:21:36,690
they had two of them had an external

495
00:21:34,150 --> 00:21:39,340
flash of them so the actual

496
00:21:36,690 --> 00:21:42,190
microcontroller on there does not store

497
00:21:39,340 --> 00:21:44,770
the configuration data like the address

498
00:21:42,190 --> 00:21:46,390
to the day dongle his pair to it to the

499
00:21:44,770 --> 00:21:49,389
actual device its pair to and the

500
00:21:46,390 --> 00:21:51,760
encryption key but it's on a external

501
00:21:49,390 --> 00:21:54,220
flash so you can just attach to the

502
00:21:51,760 --> 00:21:56,260
flesh and read it out and in the case of

503
00:21:54,220 --> 00:21:57,580
the Microsoft keyboards it was an

504
00:21:56,260 --> 00:21:59,350
internal flesh but the readout

505
00:21:57,580 --> 00:22:01,960
protection was not set and you can just

506
00:21:59,350 --> 00:22:04,840
extract the formula we don't not do this

507
00:22:01,960 --> 00:22:08,170
for the wireless presenters well because

508
00:22:04,840 --> 00:22:11,800
we don't have to we got we got what we

509
00:22:08,170 --> 00:22:14,740
wanted without doing it yeah and there

510
00:22:11,800 --> 00:22:16,360
was also another kind of attack mouthful

511
00:22:14,740 --> 00:22:18,440
thing attacks

512
00:22:16,360 --> 00:22:19,879
also regarding wireless presenters

513
00:22:18,440 --> 00:22:21,830
because some of the Watts presenters are

514
00:22:19,880 --> 00:22:23,600
not also a limited keyboard but they

515
00:22:21,830 --> 00:22:25,010
also have mouse cursor functionalities

516
00:22:23,600 --> 00:22:26,270
so they have a little joystick and you

517
00:22:25,010 --> 00:22:29,120
can move around the mouse cursor and

518
00:22:26,270 --> 00:22:31,610
also do some mouse buttons so this was

519
00:22:29,120 --> 00:22:33,620
just a reminder that also mouse spoofing

520
00:22:31,610 --> 00:22:36,080
attacks we've demonstrated a couple of

521
00:22:33,620 --> 00:22:39,350
years ago are also a thing with wireless

522
00:22:36,080 --> 00:22:41,210
presenters and it's also the same issue

523
00:22:39,350 --> 00:22:43,219
here the communication is unencrypted

524
00:22:41,210 --> 00:22:45,560
and unauthenticated so you can actually

525
00:22:43,220 --> 00:22:46,970
forge and generate your own packets and

526
00:22:45,560 --> 00:22:49,070
by knowing the correct packet formats

527
00:22:46,970 --> 00:22:52,190
you can do mouth action and mouse

528
00:22:49,070 --> 00:22:53,960
actions and by doing Mouse actions you

529
00:22:52,190 --> 00:22:55,880
can also get remote code execution if

530
00:22:53,960 --> 00:22:57,890
you're doing it properly and if the

531
00:22:55,880 --> 00:22:59,870
system you're taking is unlocked and

532
00:22:57,890 --> 00:23:02,060
unattended for a couple of minutes we

533
00:22:59,870 --> 00:23:03,620
have a YouTube video online since I

534
00:23:02,060 --> 00:23:06,050
think three years and you can jostle

535
00:23:03,620 --> 00:23:08,300
screenshots just oh yeah

536
00:23:06,050 --> 00:23:10,850
- screenshot off the video so what you

537
00:23:08,300 --> 00:23:16,010
can do with controlling the mouse you

538
00:23:10,850 --> 00:23:17,240
can open up a keyboard a virtual

539
00:23:16,010 --> 00:23:18,560
keyboard yeah that's the name I was

540
00:23:17,240 --> 00:23:21,710
looking for the virtual keyboard again

541
00:23:18,560 --> 00:23:23,990
you can just type in your keystrokes on

542
00:23:21,710 --> 00:23:26,450
the virtual keyboard and do a classic

543
00:23:23,990 --> 00:23:29,420
download and execute attack vector using

544
00:23:26,450 --> 00:23:30,500
PowerShell for instance and have megabit

545
00:23:29,420 --> 00:23:32,720
download it from the internet and

546
00:23:30,500 --> 00:23:35,300
execute it and this actually works but

547
00:23:32,720 --> 00:23:38,630
it not it's not that reliable in most

548
00:23:35,300 --> 00:23:41,060
cases what it works we've got it to work

549
00:23:38,630 --> 00:23:44,450
in some cases yeah and you can execute

550
00:23:41,060 --> 00:23:46,909
malware ransomware for instance so the

551
00:23:44,450 --> 00:23:49,970
other thing we talked about is replay

552
00:23:46,910 --> 00:23:53,720
attacks I think they're well covered

553
00:23:49,970 --> 00:23:55,340
here at the conference very well so the

554
00:23:53,720 --> 00:23:57,560
most easy way is just by a

555
00:23:55,340 --> 00:23:59,300
software-defined radio and you don't

556
00:23:57,560 --> 00:24:01,610
have to know anything about the protocol

557
00:23:59,300 --> 00:24:04,370
you can just record what is sending and

558
00:24:01,610 --> 00:24:06,379
if you send them the data again

559
00:24:04,370 --> 00:24:08,239
out of the presenter being offered the

560
00:24:06,380 --> 00:24:10,870
presentation trigger being off we

561
00:24:08,240 --> 00:24:13,850
noticed that all of the presenters just

562
00:24:10,870 --> 00:24:15,979
are vulnerable to these replay attacks

563
00:24:13,850 --> 00:24:18,590
because if you do like two slides

564
00:24:15,980 --> 00:24:20,780
forward and record this and then play it

565
00:24:18,590 --> 00:24:22,760
back later it will go to slide forward

566
00:24:20,780 --> 00:24:27,020
so there's no like counter or something

567
00:24:22,760 --> 00:24:29,470
protecting against replay attacks well

568
00:24:27,020 --> 00:24:32,050
it's not that important for presenter

569
00:24:29,470 --> 00:24:33,910
I guess but if we have a wireless

570
00:24:32,050 --> 00:24:35,980
presenter here and you doing it from the

571
00:24:33,910 --> 00:24:39,610
audience and it's really annoying for me

572
00:24:35,980 --> 00:24:41,800
at least and we tested of course the

573
00:24:39,610 --> 00:24:43,780
Bluetooth keyboard but for such a simple

574
00:24:41,800 --> 00:24:46,300
attack the Bluetooth protocol has

575
00:24:43,780 --> 00:24:49,810
measures against this so it didn't work

576
00:24:46,300 --> 00:24:52,389
on Bluetooth okay and the most

577
00:24:49,810 --> 00:24:54,040
interesting attack at least I think is

578
00:24:52,390 --> 00:24:57,400
the keystroke injection attack

579
00:24:54,040 --> 00:25:00,820
vulnerability and yeah here we have

580
00:24:57,400 --> 00:25:02,320
found quite a few the problem concerning

581
00:25:00,820 --> 00:25:04,689
the wall as presenters we have tested is

582
00:25:02,320 --> 00:25:07,000
the same again it's unencrypted and

583
00:25:04,690 --> 00:25:09,400
unauthenticated data communication

584
00:25:07,000 --> 00:25:10,840
over-the-air disregarding data whitening

585
00:25:09,400 --> 00:25:12,550
so if there is any data whitening that

586
00:25:10,840 --> 00:25:14,080
also uses some kind of encryption we

587
00:25:12,550 --> 00:25:17,230
don't count it as actual encryption

588
00:25:14,080 --> 00:25:21,850
because we've bypassed it and two

589
00:25:17,230 --> 00:25:23,260
products and yeah it's it's not raising

590
00:25:21,850 --> 00:25:24,459
the bar for an attacker because you can

591
00:25:23,260 --> 00:25:27,070
find out how the data

592
00:25:24,460 --> 00:25:29,610
whitening is working and by posit

593
00:25:27,070 --> 00:25:30,850
actually and use it for its own purposes

594
00:25:29,610 --> 00:25:32,949
yeah

595
00:25:30,850 --> 00:25:33,879
and here at the same story if you know

596
00:25:32,950 --> 00:25:36,970
the packet format have

597
00:25:33,880 --> 00:25:39,970
reverse-engineered the framing you can

598
00:25:36,970 --> 00:25:42,460
send keystroke packets to USB receiver

599
00:25:39,970 --> 00:25:45,040
dongle and then it will depend if the

600
00:25:42,460 --> 00:25:48,700
device is vulnerable or not so if there

601
00:25:45,040 --> 00:25:50,680
is no input validation on a client side

602
00:25:48,700 --> 00:25:52,930
I say whether USB receiver dongle is

603
00:25:50,680 --> 00:25:54,640
attached to a computer system then you

604
00:25:52,930 --> 00:25:57,850
will actually be able to inject

605
00:25:54,640 --> 00:26:00,280
arbitrary keystrokes or triggering USB

606
00:25:57,850 --> 00:26:03,040
HID keyboard events and have your

607
00:26:00,280 --> 00:26:05,290
keystroke injection but we also had two

608
00:26:03,040 --> 00:26:07,300
devices from the I think nine wireless

609
00:26:05,290 --> 00:26:08,649
presenter we have tested that were not

610
00:26:07,300 --> 00:26:10,870
vulnerable to keystroke injection

611
00:26:08,650 --> 00:26:13,240
attacks so they actually did some kind

612
00:26:10,870 --> 00:26:15,639
of input validation on the USB receiver

613
00:26:13,240 --> 00:26:18,430
dongle science some kind of white data

614
00:26:15,640 --> 00:26:20,950
white listening or white listing and

615
00:26:18,430 --> 00:26:22,750
they only accepted the three or four

616
00:26:20,950 --> 00:26:25,180
buttons that were actually present on

617
00:26:22,750 --> 00:26:26,950
the sender on the wireless presenter and

618
00:26:25,180 --> 00:26:28,810
that's the right thing to do right but

619
00:26:26,950 --> 00:26:31,690
all the other manufacturers and models

620
00:26:28,810 --> 00:26:33,370
they didn't do this so there's a

621
00:26:31,690 --> 00:26:35,410
security issue of the keystroke

622
00:26:33,370 --> 00:26:37,570
injection attacks in most of the

623
00:26:35,410 --> 00:26:39,930
wireless presenters we have tested so

624
00:26:37,570 --> 00:26:41,990
far and also other people have tested

625
00:26:39,930 --> 00:26:45,860
and

626
00:26:41,990 --> 00:26:49,070
a certain introduction we also have here

627
00:26:45,860 --> 00:26:51,199
some more information regarding a u.s.

628
00:26:49,070 --> 00:26:54,649
encrypted keyboards or one IES encrypted

629
00:26:51,200 --> 00:26:55,880
keyboard we had a look at in 2016 but

630
00:26:54,649 --> 00:26:57,739
not too much

631
00:26:55,880 --> 00:27:00,350
we found some time a couple of months

632
00:26:57,740 --> 00:27:03,649
and months ago and had a look at the

633
00:27:00,350 --> 00:27:06,678
Fujitsu Alex 901 Wireless Desktop set

634
00:27:03,649 --> 00:27:08,120
and what we found out it's that it was

635
00:27:06,679 --> 00:27:10,490
not affected by the same cryptographic

636
00:27:08,120 --> 00:27:11,719
issues we have found in other a yes

637
00:27:10,490 --> 00:27:13,309
encrypted to all those keyboards

638
00:27:11,720 --> 00:27:15,110
actually the three models you can see

639
00:27:13,309 --> 00:27:19,399
here at Cherry be unlimited and Logitech

640
00:27:15,110 --> 00:27:22,340
and the perixx pair do yes just a

641
00:27:19,399 --> 00:27:24,500
reminder how it worked back in 2016 and

642
00:27:22,340 --> 00:27:28,490
still works in some of those models were

643
00:27:24,500 --> 00:27:31,190
not patched actually here we were able

644
00:27:28,490 --> 00:27:34,399
to inject a precarious arbitrary

645
00:27:31,190 --> 00:27:38,840
keystrokes due to the insecure use of

646
00:27:34,399 --> 00:27:42,020
the AES counter mode and having the

647
00:27:38,840 --> 00:27:44,360
possibility to replay packets that had

648
00:27:42,020 --> 00:27:46,158
the same counter well you so all those

649
00:27:44,360 --> 00:27:48,529
keyboards were affected by a classical

650
00:27:46,159 --> 00:27:54,260
replay attacks but we could also find

651
00:27:48,529 --> 00:27:56,090
out that the plaintext content of a key

652
00:27:54,260 --> 00:28:00,020
release packet is all zeros like in this

653
00:27:56,090 --> 00:28:01,850
case 11 mal bytes and then if we did the

654
00:28:00,020 --> 00:28:03,289
math and the crypto we found out that

655
00:28:01,850 --> 00:28:04,908
all the things that are marked in red

656
00:28:03,289 --> 00:28:07,700
here are actually known to us as an

657
00:28:04,909 --> 00:28:09,110
attacker so we know the ciphertext you

658
00:28:07,700 --> 00:28:11,809
know in the plaintext for some specific

659
00:28:09,110 --> 00:28:13,459
packets namely key release packets we

660
00:28:11,809 --> 00:28:15,559
know the so called neurons that is used

661
00:28:13,460 --> 00:28:17,390
in the counter mode of AES and we know

662
00:28:15,559 --> 00:28:20,330
the counter value because this value was

663
00:28:17,390 --> 00:28:24,260
also always sent unencrypted in the

664
00:28:20,330 --> 00:28:27,939
radio communication and yeah by knowing

665
00:28:24,260 --> 00:28:31,039
this you can simply menu pallate a

666
00:28:27,940 --> 00:28:33,649
recorded packet and many plated in such

667
00:28:31,039 --> 00:28:37,610
a way that you just changed the key scan

668
00:28:33,649 --> 00:28:40,129
code that is encoded in one specific

669
00:28:37,610 --> 00:28:42,110
place of the keyboard this place depends

670
00:28:40,130 --> 00:28:43,610
on the vendor we've actually tested but

671
00:28:42,110 --> 00:28:45,289
it worked at least for the Cherry

672
00:28:43,610 --> 00:28:47,570
keyboard and Logitech keyboard and the

673
00:28:45,289 --> 00:28:50,629
perixx carry duo keyboard by simply

674
00:28:47,570 --> 00:28:52,668
doing a clever exclusive-or at a correct

675
00:28:50,630 --> 00:28:55,170
place with having some freaking

676
00:28:52,669 --> 00:28:57,390
knowledge and that's the way you can

677
00:28:55,170 --> 00:28:59,160
chief keystroke injection attacks

678
00:28:57,390 --> 00:29:01,950
against AES encrypted keyboards and

679
00:28:59,160 --> 00:29:03,360
that's what we've showed in 2016 now

680
00:29:01,950 --> 00:29:06,230
concerned the frigate - keyboard where's

681
00:29:03,360 --> 00:29:09,290
another look at it didn't work this way

682
00:29:06,230 --> 00:29:12,510
but we just found out that we could send

683
00:29:09,290 --> 00:29:15,210
unencrypted keystroke packets to a USB

684
00:29:12,510 --> 00:29:16,560
receiver and he just accepts them so

685
00:29:15,210 --> 00:29:20,070
what we did is we had a look at the data

686
00:29:16,560 --> 00:29:22,470
communication or the data sheets and

687
00:29:20,070 --> 00:29:25,200
development kit and then just played

688
00:29:22,470 --> 00:29:27,960
around with this specific chip use the

689
00:29:25,200 --> 00:29:32,940
same configuration we sniffed why arm a

690
00:29:27,960 --> 00:29:36,780
logic analyzer in this case directly at

691
00:29:32,940 --> 00:29:39,540
the pins sorry it ended our own

692
00:29:36,780 --> 00:29:41,160
implementation using a device like this

693
00:29:39,540 --> 00:29:43,170
it's a do-it-yourself multi-protocol

694
00:29:41,160 --> 00:29:47,310
multi-protocol transceiver actually used

695
00:29:43,170 --> 00:29:49,290
by the quadrocopter community and we use

696
00:29:47,310 --> 00:29:51,840
this device to attack the Fujitsu

697
00:29:49,290 --> 00:29:54,300
wireless keyboard and the hardest part

698
00:29:51,840 --> 00:29:55,860
actually was to find out that there is

699
00:29:54,300 --> 00:29:57,690
no hard part you can simply send

700
00:29:55,860 --> 00:30:04,350
unencrypted keystrokes you just have to

701
00:29:57,690 --> 00:30:07,800
read the documentation and that's it so

702
00:30:04,350 --> 00:30:10,199
on this slide you cannot see the pseudo

703
00:30:07,800 --> 00:30:11,730
noise codes these are required for the

704
00:30:10,200 --> 00:30:14,700
data scrambling that is used in this

705
00:30:11,730 --> 00:30:16,620
keyboard but to teeb keyboards we have

706
00:30:14,700 --> 00:30:18,000
tested simply use different codes so

707
00:30:16,620 --> 00:30:21,179
these are ten recommended codes by

708
00:30:18,000 --> 00:30:22,950
Cyprus you should use and yeah the

709
00:30:21,180 --> 00:30:24,540
bender is using the recommended codes so

710
00:30:22,950 --> 00:30:26,760
they are no secret they are publicly

711
00:30:24,540 --> 00:30:30,570
documented just have to do some notes

712
00:30:26,760 --> 00:30:34,050
file an error and concerning the

713
00:30:30,570 --> 00:30:36,030
payloads they are quite simple you just

714
00:30:34,050 --> 00:30:39,120
have key presses and key releases and

715
00:30:36,030 --> 00:30:42,750
the second bytes or a second and a third

716
00:30:39,120 --> 00:30:44,850
part are actually the HID scan codes and

717
00:30:42,750 --> 00:30:46,980
the modifier keys you want to send to

718
00:30:44,850 --> 00:30:49,139
your device and that's it

719
00:30:46,980 --> 00:30:54,000
that was really a simple one in this

720
00:30:49,140 --> 00:30:56,850
case ok so let's make a change and talk

721
00:30:54,000 --> 00:30:59,040
about Bluetooth and the Bluetooth well

722
00:30:56,850 --> 00:31:01,409
trust relationships it's rather obvious

723
00:30:59,040 --> 00:31:04,800
for somebody who is really into

724
00:31:01,410 --> 00:31:07,080
Bluetooth I will go quickly over those

725
00:31:04,800 --> 00:31:08,830
things we have like 50 minutes left and

726
00:31:07,080 --> 00:31:14,080
we want to show your live demos as well

727
00:31:08,830 --> 00:31:15,100
so just for the obvious well if you pair

728
00:31:14,080 --> 00:31:16,960
a device with Bluetooth

729
00:31:15,100 --> 00:31:19,149
there's cryptographic key material on

730
00:31:16,960 --> 00:31:21,030
that well that's smart for not for

731
00:31:19,150 --> 00:31:24,340
example and for example on that

732
00:31:21,030 --> 00:31:26,350
headphones like this one and another

733
00:31:24,340 --> 00:31:28,870
interesting observation we made it is

734
00:31:26,350 --> 00:31:31,449
well yeah it's very well known actually

735
00:31:28,870 --> 00:31:34,330
but the cryptic of key material is not

736
00:31:31,450 --> 00:31:36,490
bound to any specific properties so

737
00:31:34,330 --> 00:31:38,500
let's go through this if you what first

738
00:31:36,490 --> 00:31:40,720
interesting thing if you pair up you

739
00:31:38,500 --> 00:31:43,120
headphones with a Android device like

740
00:31:40,720 --> 00:31:46,210
this it automatically gives you a lot of

741
00:31:43,120 --> 00:31:49,719
access to like a phone calls media audio

742
00:31:46,210 --> 00:31:51,190
and you think this we can abuse this

743
00:31:49,720 --> 00:31:53,200
later and there's another interesting

744
00:31:51,190 --> 00:31:55,210
feature like the Android smart unlock I

745
00:31:53,200 --> 00:31:58,090
think it got introduced and like Android

746
00:31:55,210 --> 00:32:00,250
7 all right not sure anymore but it's

747
00:31:58,090 --> 00:32:03,129
basically if you pair a bluetooth device

748
00:32:00,250 --> 00:32:05,380
is getting asked do you want to unlock

749
00:32:03,130 --> 00:32:07,930
your screen if this Bluetooth device is

750
00:32:05,380 --> 00:32:12,100
near your phone so could be very handy

751
00:32:07,930 --> 00:32:14,470
and a security risk of course and the

752
00:32:12,100 --> 00:32:18,669
attack we want to demonstrate in about a

753
00:32:14,470 --> 00:32:21,970
minute it is so just you can follow me

754
00:32:18,670 --> 00:32:25,000
from from the idea we and that is if you

755
00:32:21,970 --> 00:32:27,790
leave your your headphones somewhere on

756
00:32:25,000 --> 00:32:30,010
the train or lose them or maybe just

757
00:32:27,790 --> 00:32:33,190
give me two minutes to access them well

758
00:32:30,010 --> 00:32:37,840
unscrew four screws there again is our

759
00:32:33,190 --> 00:32:41,410
external SPI flash so we can easily well

760
00:32:37,840 --> 00:32:43,659
one method method were like undies all

761
00:32:41,410 --> 00:32:46,210
during the chip and soldering out on a

762
00:32:43,660 --> 00:32:48,070
break for a record port and plug it into

763
00:32:46,210 --> 00:32:50,050
an Universal programmer then you can

764
00:32:48,070 --> 00:32:52,360
read out the chip but it's actually much

765
00:32:50,050 --> 00:32:54,879
easier with an adapter like this so

766
00:32:52,360 --> 00:32:57,189
there's a Pogo pin adapter it has like

767
00:32:54,880 --> 00:32:59,890
Springs behind the the pins and you can

768
00:32:57,190 --> 00:33:02,680
just don't have to do any soldering just

769
00:32:59,890 --> 00:33:04,900
press it on the chip and your do the

770
00:33:02,680 --> 00:33:07,870
programming things I read out and you

771
00:33:04,900 --> 00:33:11,590
come up with something like this and

772
00:33:07,870 --> 00:33:16,600
it's marked in green red sorry for the

773
00:33:11,590 --> 00:33:19,709
line and it's basically well you just

774
00:33:16,600 --> 00:33:21,840
look at the dump you got and you see the

775
00:33:19,710 --> 00:33:24,210
address of the smartphone well the

776
00:33:21,840 --> 00:33:26,790
headphone is pair two and the actual key

777
00:33:24,210 --> 00:33:27,660
that is used for the encryption with

778
00:33:26,790 --> 00:33:29,970
that smartphone

779
00:33:27,660 --> 00:33:32,070
the address is somehow Oh funny

780
00:33:29,970 --> 00:33:34,110
formatted it has some serious in there

781
00:33:32,070 --> 00:33:37,950
and divided orders a bit different but

782
00:33:34,110 --> 00:33:40,590
yeah by looking at it you will find your

783
00:33:37,950 --> 00:33:43,770
way around this so interesting thing

784
00:33:40,590 --> 00:33:46,439
first is that during the pairing process

785
00:33:43,770 --> 00:33:49,830
there are a lot of well access granted

786
00:33:46,440 --> 00:33:52,460
automatically and if we can read out the

787
00:33:49,830 --> 00:33:56,669
key and even light a device like this

788
00:33:52,460 --> 00:33:59,760
for example a headphone we can well

789
00:33:56,670 --> 00:34:02,310
exploit is not really exploit but we can

790
00:33:59,760 --> 00:34:05,520
use these functionally that is granted

791
00:34:02,310 --> 00:34:07,679
like for example in most cases there's

792
00:34:05,520 --> 00:34:10,530
phone book access so if we read the key

793
00:34:07,680 --> 00:34:12,150
we can just run a tool I think it's on

794
00:34:10,530 --> 00:34:15,600
the next slide sorry for jumping forward

795
00:34:12,150 --> 00:34:18,930
and it's from the BMW groove just a

796
00:34:15,600 --> 00:34:20,429
simple Python script that you can use

797
00:34:18,929 --> 00:34:23,549
what Plutus to read out the phone book

798
00:34:20,429 --> 00:34:26,040
oven of a device so you can just get the

799
00:34:23,550 --> 00:34:27,840
keys put it on your Linux laptops use

800
00:34:26,040 --> 00:34:30,929
this Python script and there you go what

801
00:34:27,840 --> 00:34:33,690
the with a phone book and more

802
00:34:30,929 --> 00:34:35,969
interesting at least for me it was if we

803
00:34:33,690 --> 00:34:39,120
have the key and the address we actually

804
00:34:35,969 --> 00:34:41,069
can change the the capabilities of the

805
00:34:39,120 --> 00:34:43,739
Bluetooth device so what was once before

806
00:34:41,070 --> 00:34:47,580
a headphone can become a keyboard with

807
00:34:43,739 --> 00:34:49,830
these and the device does not care at

808
00:34:47,580 --> 00:34:52,440
all at least an Android device or an iOS

809
00:34:49,830 --> 00:34:55,049
device did not we check this on several

810
00:34:52,440 --> 00:34:57,600
versions of the devices on Microsoft's

811
00:34:55,050 --> 00:35:00,360
and Linux it did not work I'm not sure

812
00:34:57,600 --> 00:35:03,630
of technical issues or if it's actually

813
00:35:00,360 --> 00:35:08,130
for security reasons but on all other

814
00:35:03,630 --> 00:35:10,380
devices we just can change this so let's

815
00:35:08,130 --> 00:35:12,570
come to the interesting part let's hope

816
00:35:10,380 --> 00:35:15,210
this stuff will work and we want to show

817
00:35:12,570 --> 00:35:16,890
you the Bluetooth like this one I just

818
00:35:15,210 --> 00:35:19,950
told you about it low distress

819
00:35:16,890 --> 00:35:22,589
relationship issue we want to attack a

820
00:35:19,950 --> 00:35:25,200
wireless presenter of course and the is

821
00:35:22,590 --> 00:35:28,310
encrypted keyboard so let's start with

822
00:35:25,200 --> 00:35:28,310
the Bluetooth one

823
00:35:40,140 --> 00:35:51,690
okay um so we have here just an Android

824
00:35:46,049 --> 00:35:55,259
phone I can show you it's locked with a

825
00:35:51,690 --> 00:35:58,470
super secure pin one two three four and

826
00:35:55,259 --> 00:36:07,049
it's already paired I guess I can show

827
00:35:58,470 --> 00:36:10,680
you their devices let's see I don't see

828
00:36:07,049 --> 00:36:12,660
it anymore oh sorry I was on pair new

829
00:36:10,680 --> 00:36:15,989
device previously connected device so

830
00:36:12,660 --> 00:36:18,390
there you see or headphone we don't do

831
00:36:15,989 --> 00:36:20,489
the reading out here live on stage but

832
00:36:18,390 --> 00:36:23,609
trust me it's just a normal headphone

833
00:36:20,489 --> 00:36:26,069
where we extracted kiku on the key and

834
00:36:23,609 --> 00:36:28,019
there's a bluetooth keyboard emulator

835
00:36:26,069 --> 00:36:32,730
for your desktop so it's just a Python

836
00:36:28,019 --> 00:36:36,930
script my colleague ported this this

837
00:36:32,730 --> 00:36:39,779
script to Python 3 and blues 5 and maybe

838
00:36:36,930 --> 00:36:42,180
we will see it in minutes if everything

839
00:36:39,779 --> 00:36:45,329
works out it gets connected and you see

840
00:36:42,180 --> 00:36:48,899
the small symbol with the lock I got

841
00:36:45,329 --> 00:36:51,539
unlocked I'm down there and now we can

842
00:36:48,900 --> 00:36:54,269
so I'm not shipping out the visual side

843
00:36:51,539 --> 00:36:58,380
so this is just me am I writing a

844
00:36:54,269 --> 00:37:01,019
keyboard and I can do different keyboard

845
00:36:58,380 --> 00:37:02,579
layout like keyboard layout so yeah what

846
00:37:01,019 --> 00:37:03,839
it just is what you can see on the left

847
00:37:02,579 --> 00:37:06,299
is our keyboard emulator so you're

848
00:37:03,839 --> 00:37:07,890
emulating a USB Bluetooth keyboard we

849
00:37:06,299 --> 00:37:10,589
gave this emulator the link key we've

850
00:37:07,890 --> 00:37:12,150
extracted physically for our headphones

851
00:37:10,589 --> 00:37:14,940
the target device with one-time physical

852
00:37:12,150 --> 00:37:16,380
access and on the right you can see the

853
00:37:14,940 --> 00:37:18,210
Android phone you're not targeting and

854
00:37:16,380 --> 00:37:21,239
the Android phone does people previously

855
00:37:18,210 --> 00:37:23,369
paired to their bluetooth headphone what

856
00:37:21,239 --> 00:37:25,980
but now what we have is we have actually

857
00:37:23,369 --> 00:37:28,109
keystroke injections here because now we

858
00:37:25,980 --> 00:37:31,289
have a full functional keyboard and now

859
00:37:28,109 --> 00:37:33,569
we can trigger arbitrary actions like

860
00:37:31,289 --> 00:37:36,390
calling some people and doing other

861
00:37:33,569 --> 00:37:38,099
stuff in this way yeah and that was

862
00:37:36,390 --> 00:37:39,420
interesting for us we because we didn't

863
00:37:38,099 --> 00:37:41,549
know that you can change your

864
00:37:39,420 --> 00:37:44,579
capabilities of already paired Bluetooth

865
00:37:41,549 --> 00:37:46,049
devices in this way I mean it's not true

866
00:37:44,579 --> 00:37:48,989
for all Bluetooth like Bluetooth

867
00:37:46,049 --> 00:37:52,230
low-energy handles this different but

868
00:37:48,989 --> 00:37:53,910
well most of the headphones because the

869
00:37:52,230 --> 00:37:57,859
audio profile is blue

870
00:37:53,910 --> 00:38:00,839
classic you still able to do this okay

871
00:37:57,859 --> 00:38:03,480
yeah so that's that's well and that was

872
00:38:00,839 --> 00:38:12,839
a short demo of the exploiting bluetooth

873
00:38:03,480 --> 00:38:15,780
trust relationships okay now the next

874
00:38:12,839 --> 00:38:20,578
demo I think will be the wall as

875
00:38:15,780 --> 00:38:24,930
presenter yeah okay this is exploiting

876
00:38:20,579 --> 00:38:27,990
this one I leave it on here so I'm not

877
00:38:24,930 --> 00:38:30,839
pressing any keys and yeah so we are

878
00:38:27,990 --> 00:38:33,538
taking the Unitec have to W start the

879
00:38:30,839 --> 00:38:41,279
can do I have to start the camera you

880
00:38:33,539 --> 00:38:42,000
can't see the victim machine sorry let's

881
00:38:41,280 --> 00:38:46,099
see if it works

882
00:38:42,000 --> 00:38:46,099
yeah so we have picture-in-picture

883
00:38:47,930 --> 00:38:57,770
oh right okay so I will just move it a

884
00:38:54,680 --> 00:39:00,859
little bit and down yeah so what I'm

885
00:38:57,770 --> 00:39:03,200
using here is just a new tool we've

886
00:39:00,859 --> 00:39:04,880
already uploaded to get up this morning

887
00:39:03,200 --> 00:39:06,740
so you can all do this kind of KISS

888
00:39:04,880 --> 00:39:08,690
injection attacks against against

889
00:39:06,740 --> 00:39:11,930
different wallets vulnerable inputs

890
00:39:08,690 --> 00:39:13,940
devices for instant presenters it's

891
00:39:11,930 --> 00:39:15,770
based on a tool released by Mark Newland

892
00:39:13,940 --> 00:39:18,380
a couple of weeks ago and I think on the

893
00:39:15,770 --> 00:39:19,759
28th of April and we want to extend it

894
00:39:18,380 --> 00:39:21,529
with knowledge we have gained from our

895
00:39:19,760 --> 00:39:24,410
research and McNeil is also doing some

896
00:39:21,529 --> 00:39:26,079
research so check out this get up

897
00:39:24,410 --> 00:39:29,118
repository if you're interested in

898
00:39:26,079 --> 00:39:32,450
injecting keystrokes to some devices and

899
00:39:29,119 --> 00:39:34,640
what I will use here now is the infamous

900
00:39:32,450 --> 00:39:38,000
crazy radio Donald that is actually used

901
00:39:34,640 --> 00:39:39,770
for controlling a radio controlling

902
00:39:38,000 --> 00:39:42,829
quadrocopters but it can also be used

903
00:39:39,770 --> 00:39:46,160
for attacking computer systems wire

904
00:39:42,829 --> 00:39:48,880
radio and now the dongles in the victim

905
00:39:46,160 --> 00:39:51,470
system of course yes so here in the

906
00:39:48,880 --> 00:39:54,049
screen you can see our victim system

907
00:39:51,470 --> 00:39:57,980
running a Windows 10 operating system in

908
00:39:54,049 --> 00:39:59,930
this case and USB receiver dongle of the

909
00:39:57,980 --> 00:40:02,329
vulnerable in attack presenters just

910
00:39:59,930 --> 00:40:08,029
attached to this device and now I will

911
00:40:02,329 --> 00:40:10,039
let's try yep and in this case it worked

912
00:40:08,029 --> 00:40:16,549
I don't know can be can be zoom in a

913
00:40:10,039 --> 00:40:19,789
little bit I don't know some shaky cam

914
00:40:16,549 --> 00:40:21,650
so you can basically input like download

915
00:40:19,789 --> 00:40:23,510
and execute shell court or something

916
00:40:21,650 --> 00:40:25,010
like this so that was just the first I

917
00:40:23,510 --> 00:40:26,510
know so what we can give you now from

918
00:40:25,010 --> 00:40:28,130
our laptop we can send arbitrary

919
00:40:26,510 --> 00:40:32,569
keystroke

920
00:40:28,130 --> 00:40:35,000
commands to a remote system next so

921
00:40:32,569 --> 00:40:38,538
let's move on to the next demo

922
00:40:35,000 --> 00:40:40,339
it's now I'm plugging in another dongle

923
00:40:38,539 --> 00:40:45,829
this is what the dongle from the Fujitsu

924
00:40:40,339 --> 00:40:48,020
keyboard the AES encrypted version yeah

925
00:40:45,829 --> 00:40:50,779
and in this case I have imported the

926
00:40:48,020 --> 00:40:52,910
attack yet to this key check the tool

927
00:40:50,779 --> 00:40:54,529
but I'm trying to do in the future what

928
00:40:52,910 --> 00:40:56,500
I have here is my proof-of-concept set

929
00:40:54,529 --> 00:40:58,779
up or I've done so here I have this

930
00:40:56,500 --> 00:41:00,950
do-it-yourself

931
00:40:58,779 --> 00:41:01,590
multi-protocol transmitter device it's

932
00:41:00,950 --> 00:41:04,410
actually

933
00:41:01,590 --> 00:41:06,300
you know bass device here having four

934
00:41:04,410 --> 00:41:09,990
different 2.4 gigahertz transceivers on

935
00:41:06,300 --> 00:41:12,510
them one of them is the Cypress 69 36 I

936
00:41:09,990 --> 00:41:14,069
think which are actually using and the

937
00:41:12,510 --> 00:41:15,420
rest is just a power supply I didn't

938
00:41:14,070 --> 00:41:18,120
have a better power supply here it's

939
00:41:15,420 --> 00:41:20,070
just a battery and what I will find now

940
00:41:18,120 --> 00:41:23,609
I will just power on the device and

941
00:41:20,070 --> 00:41:26,190
let's see if we can pop a command shell

942
00:41:23,610 --> 00:41:28,110
again so - its seconds delay I think and

943
00:41:26,190 --> 00:41:30,600
then there should be some actions yeah

944
00:41:28,110 --> 00:41:32,580
and we have again pop the command shell

945
00:41:30,600 --> 00:41:36,330
and we can enter arbitrary passwords or

946
00:41:32,580 --> 00:41:38,580
we can just execute power shell download

947
00:41:36,330 --> 00:41:39,750
and execute scripts for instance if the

948
00:41:38,580 --> 00:41:41,279
device internet-connected

949
00:41:39,750 --> 00:41:44,100
download Melrose we've worn it and

950
00:41:41,280 --> 00:41:46,110
started and this kind of attack can

951
00:41:44,100 --> 00:41:49,350
happen in in a couple of seconds

952
00:41:46,110 --> 00:41:53,040
actually so if you have an unattended

953
00:41:49,350 --> 00:41:55,650
device near you near means physical

954
00:41:53,040 --> 00:42:00,240
proximity so depending on your radio

955
00:41:55,650 --> 00:42:02,790
equipment I think yeah one meter to 30

956
00:42:00,240 --> 00:42:05,790
meters should work actually if you have

957
00:42:02,790 --> 00:42:07,590
a better sender even more the the crazy

958
00:42:05,790 --> 00:42:09,630
radios isn't it's a tree that's up to

959
00:42:07,590 --> 00:42:12,210
one kilometer but I think it's because

960
00:42:09,630 --> 00:42:13,620
of the there's an extra amplifier on

961
00:42:12,210 --> 00:42:16,470
there and I'm not sure if it's really

962
00:42:13,620 --> 00:42:18,900
it's a side of you so indoors it doesn't

963
00:42:16,470 --> 00:42:21,240
work one kilometer about this little

964
00:42:18,900 --> 00:42:22,740
question of the equipment yeah it's a

965
00:42:21,240 --> 00:42:24,180
question of the equipment but that's how

966
00:42:22,740 --> 00:42:27,750
you can do keystroke ejection attacks

967
00:42:24,180 --> 00:42:36,180
against yeah encrypted keyboard in this

968
00:42:27,750 --> 00:42:37,800
case so this was actually we also have

969
00:42:36,180 --> 00:42:45,450
some prove concept videos online if you

970
00:42:37,800 --> 00:42:47,190
want to see it again two minutes ok we

971
00:42:45,450 --> 00:42:49,100
also have some anecdotes on the slide I

972
00:42:47,190 --> 00:42:51,060
will just go over them very quickly

973
00:42:49,100 --> 00:42:52,950
product.we burning was an interesting

974
00:42:51,060 --> 00:42:56,520
issue so three years ago we've tested

975
00:42:52,950 --> 00:43:00,859
the charity unlimited AES now it's sold

976
00:42:56,520 --> 00:43:03,030
as be unlimited 3.0 it uses the same

977
00:43:00,860 --> 00:43:05,100
128-bit AES encryption with the same

978
00:43:03,030 --> 00:43:07,470
security issues and people are still

979
00:43:05,100 --> 00:43:09,779
buying this new keyboard at 3.0 version

980
00:43:07,470 --> 00:43:11,069
but they are not aware of that it's

981
00:43:09,780 --> 00:43:13,230
vulnerable to keystroke injection

982
00:43:11,070 --> 00:43:16,110
attacks and replay attacks where you can

983
00:43:13,230 --> 00:43:18,900
remotely takeover computers

984
00:43:16,110 --> 00:43:21,660
so insecure now because it's no longer

985
00:43:18,900 --> 00:43:23,940
advertised as being secure yeah so that

986
00:43:21,660 --> 00:43:25,920
was a solution by the vendor rebranding

987
00:43:23,940 --> 00:43:27,270
the product and they're also some other

988
00:43:25,920 --> 00:43:29,490
anecdotes but I don't have time for this

989
00:43:27,270 --> 00:43:31,290
it's concerning CVS based course but you

990
00:43:29,490 --> 00:43:32,339
have it in the slides they are Cedars

991
00:43:31,290 --> 00:43:34,170
base course you can come up with

992
00:43:32,340 --> 00:43:36,390
different scores for the same issue and

993
00:43:34,170 --> 00:43:38,880
you have good arguments for it and just

994
00:43:36,390 --> 00:43:40,680
pick the score you like this in the end

995
00:43:38,880 --> 00:43:43,950
so that's the story for this one I also

996
00:43:40,680 --> 00:43:45,990
interesting this one because the r400 is

997
00:43:43,950 --> 00:43:48,180
why we well-known the the present of

998
00:43:45,990 --> 00:43:50,100
ruff Logitech but we actually managed to

999
00:43:48,180 --> 00:43:51,690
buy just went to Amazon and buy three

1000
00:43:50,100 --> 00:43:53,490
times the are four hundred for like

1001
00:43:51,690 --> 00:43:55,920
different vendors and what we got there

1002
00:43:53,490 --> 00:43:57,930
well three different versions of it so

1003
00:43:55,920 --> 00:43:59,790
completely different hardware and we

1004
00:43:57,930 --> 00:44:02,370
talked to Logitech well which one is the

1005
00:43:59,790 --> 00:44:04,770
real are the others fake are the others

1006
00:44:02,370 --> 00:44:08,460
are another manufacturer and well they

1007
00:44:04,770 --> 00:44:10,290
don't want or they could not dick it was

1008
00:44:08,460 --> 00:44:14,610
basically just closed and saying well we

1009
00:44:10,290 --> 00:44:16,410
can't say anything about that yeah they

1010
00:44:14,610 --> 00:44:18,120
couldn't help us so we assumed that only

1011
00:44:16,410 --> 00:44:20,399
the left one shown here is real because

1012
00:44:18,120 --> 00:44:22,319
it was the only one with a web USB

1013
00:44:20,400 --> 00:44:24,480
render ID owned by Logitech the other

1014
00:44:22,320 --> 00:44:26,370
ones didn't so maybe the other ones are

1015
00:44:24,480 --> 00:44:30,060
counterfeit products but we just don't

1016
00:44:26,370 --> 00:44:33,080
know and Logitech just didn't tell us so

1017
00:44:30,060 --> 00:44:38,220
conclusion doing this quickly as well

1018
00:44:33,080 --> 00:44:39,960
for every well vulnerability I don't

1019
00:44:38,220 --> 00:44:42,330
know for any issue we found an actual

1020
00:44:39,960 --> 00:44:44,910
volubly that can actually be used so

1021
00:44:42,330 --> 00:44:47,940
insufficient protection well we can read

1022
00:44:44,910 --> 00:44:49,680
out the data if it's unauthenticated we

1023
00:44:47,940 --> 00:44:51,630
can do Mouse proofing or keystroke

1024
00:44:49,680 --> 00:44:53,819
injections well if it's not protect

1025
00:44:51,630 --> 00:44:56,040
against replay attacks we can do replay

1026
00:44:53,820 --> 00:44:57,780
so there's a lot going on here and if

1027
00:44:56,040 --> 00:45:00,570
they get curved the graphic issues are

1028
00:44:57,780 --> 00:45:07,680
not taken care of we can do a keystroke

1029
00:45:00,570 --> 00:45:09,090
injection as well for bluetooth some

1030
00:45:07,680 --> 00:45:11,669
take away they will come through

1031
00:45:09,090 --> 00:45:13,530
recommendations and a second is that

1032
00:45:11,670 --> 00:45:15,960
every device needs protection because it

1033
00:45:13,530 --> 00:45:18,600
holds your key and something we did not

1034
00:45:15,960 --> 00:45:20,430
speak about a lot the these texts from

1035
00:45:18,600 --> 00:45:22,500
the operating system behave really

1036
00:45:20,430 --> 00:45:25,700
different that's the interesting thing

1037
00:45:22,500 --> 00:45:29,460
to look into for more Bluetooth

1038
00:45:25,700 --> 00:45:31,980
yeah experimenting analysis so Bluetooth

1039
00:45:29,460 --> 00:45:33,809
keyboards we tested them all of them we

1040
00:45:31,980 --> 00:45:35,640
could read odd and two of them had

1041
00:45:33,809 --> 00:45:37,559
insecure pairing where you can well

1042
00:45:35,640 --> 00:45:39,839
sniff the key or if you were present at

1043
00:45:37,559 --> 00:45:43,430
the pairing process you can reconstruct

1044
00:45:39,839 --> 00:45:46,549
the pin that was needed for the

1045
00:45:43,430 --> 00:45:48,899
presenters it's pretty much the same

1046
00:45:46,549 --> 00:45:52,288
summary as a table you can see we've

1047
00:45:48,900 --> 00:45:54,210
tested these nine devices and seven of

1048
00:45:52,289 --> 00:45:55,529
them no six of them are definitely a

1049
00:45:54,210 --> 00:45:57,059
vulnerable to keystroke injection

1050
00:45:55,529 --> 00:45:59,069
attacks one we have to do some work on

1051
00:45:57,059 --> 00:46:01,200
it's the Kensington one and two were not

1052
00:45:59,069 --> 00:46:03,599
vulnerable at least what I found out to

1053
00:46:01,200 --> 00:46:05,520
be so affectionate X and one no three

1054
00:46:03,599 --> 00:46:07,319
actual are actually available to Mouse

1055
00:46:05,520 --> 00:46:09,299
spoofing attacks because they have the

1056
00:46:07,319 --> 00:46:12,750
mouse features available to them as well

1057
00:46:09,299 --> 00:46:15,359
yeah this is a list of Mark Newlin he

1058
00:46:12,750 --> 00:46:17,880
tested a lot of presenters as well so

1059
00:46:15,359 --> 00:46:19,740
just look up his research as well and

1060
00:46:17,880 --> 00:46:21,450
you have a good list of presenters that

1061
00:46:19,740 --> 00:46:23,160
vulnerable but if you can see here the

1062
00:46:21,450 --> 00:46:25,500
keystroke injection column it's all

1063
00:46:23,160 --> 00:46:28,140
green and for us it's almost all green

1064
00:46:25,500 --> 00:46:30,900
too so maybe not a good idea to use

1065
00:46:28,140 --> 00:46:33,598
these devices and for the keyboards we

1066
00:46:30,900 --> 00:46:35,460
can now say for sure the is encrypted

1067
00:46:33,599 --> 00:46:41,430
Fujitsu keyboard is vulnerable to

1068
00:46:35,460 --> 00:46:43,289
keystroke injections as well yeah I've

1069
00:46:41,430 --> 00:46:45,210
just included this slide because it's a

1070
00:46:43,289 --> 00:46:46,980
good example that security

1071
00:46:45,210 --> 00:46:49,170
vulnerabilities may be re-implemented in

1072
00:46:46,980 --> 00:46:51,390
another product version of product

1073
00:46:49,170 --> 00:46:53,819
revision because the logitech alpha 100

1074
00:46:51,390 --> 00:46:56,430
was known to be vulnerable since 2010

1075
00:46:53,819 --> 00:46:58,770
publicly it was based on another

1076
00:46:56,430 --> 00:47:02,009
technology back then it was a cypress RF

1077
00:46:58,770 --> 00:47:04,109
69 103 transceiver that was used then I

1078
00:47:02,010 --> 00:47:05,549
think around 2013 there was a new

1079
00:47:04,109 --> 00:47:08,460
product version of the Logitech Alpha

1080
00:47:05,549 --> 00:47:11,430
hundred that uses this nanak

1081
00:47:08,460 --> 00:47:14,670
semiconductor n RF 24 transceiver and in

1082
00:47:11,430 --> 00:47:16,529
2016 we found hey this new version of

1083
00:47:14,670 --> 00:47:20,069
your product has the same vulnerability

1084
00:47:16,529 --> 00:47:22,410
as one found back in 2010 and if you buy

1085
00:47:20,069 --> 00:47:24,299
them on animals Amazon today or any

1086
00:47:22,410 --> 00:47:26,368
other Mark and the other marketplace you

1087
00:47:24,299 --> 00:47:32,279
will still get vulnerable logic all 400

1088
00:47:26,369 --> 00:47:34,200
devices yep so short recommendation the

1089
00:47:32,279 --> 00:47:36,329
two civil wireless presenter wisely

1090
00:47:34,200 --> 00:47:37,890
because well we only found four of them

1091
00:47:36,329 --> 00:47:39,020
not being vulnerable to keystroke

1092
00:47:37,890 --> 00:47:43,640
injections for EEP

1093
00:47:39,020 --> 00:47:47,090
they are vulnerable I'm not sure if I

1094
00:47:43,640 --> 00:47:49,129
want to go all of them for Bluetooth

1095
00:47:47,090 --> 00:47:50,930
devices as I said it's really important

1096
00:47:49,130 --> 00:47:52,760
to keep your lifecycle to keep it clean

1097
00:47:50,930 --> 00:47:53,240
if you lose your like headphones in the

1098
00:47:52,760 --> 00:47:55,040
Train

1099
00:47:53,240 --> 00:47:57,020
just delete the connection you have left

1100
00:47:55,040 --> 00:47:59,930
on your phone because it's a nexus

1101
00:47:57,020 --> 00:48:02,840
basically in your phone so keep mind of

1102
00:47:59,930 --> 00:48:05,270
that the most important takeaway is the

1103
00:48:02,840 --> 00:48:07,550
last one it is out use wires

1104
00:48:05,270 --> 00:48:09,710
yeah input devices and if your company

1105
00:48:07,550 --> 00:48:12,230
want to buy wireless devices please at

1106
00:48:09,710 --> 00:48:14,830
least use Bluetooth until proven

1107
00:48:12,230 --> 00:48:18,710
otherwise they look more secure than the

1108
00:48:14,830 --> 00:48:21,680
proprietary versions so there are a lot

1109
00:48:18,710 --> 00:48:23,090
of other research going on in this area

1110
00:48:21,680 --> 00:48:25,970
mark dueling as we told still

1111
00:48:23,090 --> 00:48:29,390
researching on it and Marcus Manx

1112
00:48:25,970 --> 00:48:33,290
another German security researcher is

1113
00:48:29,390 --> 00:48:36,259
publishing well more vulnerabilities on

1114
00:48:33,290 --> 00:48:38,360
Logitech it's specified specifically to

1115
00:48:36,260 --> 00:48:40,670
logic 3 receivers really interesting

1116
00:48:38,360 --> 00:48:43,940
work just follow them if you want to

1117
00:48:40,670 --> 00:48:45,770
have more information and our code will

1118
00:48:43,940 --> 00:48:47,060
be on github yeah it is already in

1119
00:48:45,770 --> 00:48:49,340
github so if you're interesting playing

1120
00:48:47,060 --> 00:48:52,310
around and annoying some other speakers

1121
00:48:49,340 --> 00:48:54,230
now this afternoon no you shouldn't you

1122
00:48:52,310 --> 00:48:56,600
can just do it so the code is public

1123
00:48:54,230 --> 00:48:59,570
open source obviously available yeah and

1124
00:48:56,600 --> 00:49:02,000
you should also remember yeah think of

1125
00:48:59,570 --> 00:49:03,950
that also barcode scanners like the one

1126
00:49:02,000 --> 00:49:06,200
shown here are just keyboards with a

1127
00:49:03,950 --> 00:49:08,359
specific form factory so and be prepared

1128
00:49:06,200 --> 00:49:09,980
we will the publicly disclosed some

1129
00:49:08,360 --> 00:49:13,300
security vulnerabilities in a couple of

1130
00:49:09,980 --> 00:49:15,230
weeks or month yep so so here's

1131
00:49:13,300 --> 00:49:17,570
preferences if you want to read that man

1132
00:49:15,230 --> 00:49:20,060
yeah thank you very much yeah thank you

1133
00:49:17,570 --> 00:49:24,719
very much sorry for the format the way

1134
00:49:20,060 --> 00:49:24,719
[Applause]

1135
00:49:25,390 --> 00:49:28,930
thank you so much guys are there any

1136
00:49:28,100 --> 00:49:31,819
questions

1137
00:49:28,930 --> 00:49:33,710
there may be we do that later because

1138
00:49:31,820 --> 00:49:36,950
whether you're already late so just meet

1139
00:49:33,710 --> 00:49:43,550
us we will be here the we have time for

1140
00:49:36,950 --> 00:49:46,390
one question so sorry so can you

1141
00:49:43,550 --> 00:49:49,880
recommend any wire to present a remote

1142
00:49:46,390 --> 00:49:54,080
we could actually recommend only let me

1143
00:49:49,880 --> 00:49:55,820
see there was yeah maybe this one the

1144
00:49:54,080 --> 00:49:57,680
August well is presented but I I've

1145
00:49:55,820 --> 00:49:58,880
already bought this back in 2016 and I

1146
00:49:57,680 --> 00:50:00,710
think it's not available in the mall and

1147
00:49:58,880 --> 00:50:02,930
Anderson I couldn't find it again but

1148
00:50:00,710 --> 00:50:04,400
this was one that was not vulnerable to

1149
00:50:02,930 --> 00:50:08,480
keystroke injection and neither to mouth

1150
00:50:04,400 --> 00:50:10,640
spoofing attacks but but replay so you

1151
00:50:08,480 --> 00:50:12,380
can still annoyed II yeah you can still

1152
00:50:10,640 --> 00:50:14,150
annoy some people by doing replay text

1153
00:50:12,380 --> 00:50:15,800
but it's not a sense of thing as they

1154
00:50:14,150 --> 00:50:20,930
are doing actual keystroke injections

1155
00:50:15,800 --> 00:50:25,610
with arbitrary keys a keyboard a wild

1156
00:50:20,930 --> 00:50:28,190
one actually maybe a Bluetooth one but

1157
00:50:25,610 --> 00:50:29,720
yeah and if not wired then Bluetooth Low

1158
00:50:28,190 --> 00:50:36,110
Energy so we think Bluetooth Low Energy

1159
00:50:29,720 --> 00:50:38,990
is if you energy like 4.2 they

1160
00:50:36,110 --> 00:50:40,610
implemented in 4.2 a more secure pairing

1161
00:50:38,990 --> 00:50:42,589
mechanism hopefully this keyboard uses

1162
00:50:40,610 --> 00:50:44,000
the more secure pairing mechanism so it

1163
00:50:42,590 --> 00:50:46,430
uses diffie-hellman by then hopefully

1164
00:50:44,000 --> 00:50:49,040
and the pairing process will be secure

1165
00:50:46,430 --> 00:50:50,509
as well and we only had a look at the

1166
00:50:49,040 --> 00:50:52,009
three Bluetooth keyboards we showed here

1167
00:50:50,510 --> 00:50:54,200
so it was two times Bluetooth classic

1168
00:50:52,010 --> 00:50:55,430
and one Bluetooth low-energy so there's

1169
00:50:54,200 --> 00:50:57,200
more research to be done and I hope

1170
00:50:55,430 --> 00:51:01,520
other people will also join this

1171
00:50:57,200 --> 00:51:03,560
research effort yeah so thank you thank

1172
00:51:01,520 --> 00:51:06,620
you for the talk I have a question about

1173
00:51:03,560 --> 00:51:08,990
the Bluetooth attack with the headphones

1174
00:51:06,620 --> 00:51:09,529
and substituting headphones with a

1175
00:51:08,990 --> 00:51:11,720
keyboard

1176
00:51:09,530 --> 00:51:13,160
have you looked into the Bluetooth

1177
00:51:11,720 --> 00:51:15,950
standard that's wondering if the

1178
00:51:13,160 --> 00:51:18,379
standard considers this as an intact

1179
00:51:15,950 --> 00:51:20,390
surface or not because sometimes they go

1180
00:51:18,380 --> 00:51:22,550
for some trade-offs you know like yeah

1181
00:51:20,390 --> 00:51:23,480
so I was wondering what's your view on

1182
00:51:22,550 --> 00:51:25,220
that thank you

1183
00:51:23,480 --> 00:51:27,620
I've tried to find it but the Bluetooth

1184
00:51:25,220 --> 00:51:31,120
standard or standards its I don't know

1185
00:51:27,620 --> 00:51:33,980
five thousand pages and using my

1186
00:51:31,120 --> 00:51:37,009
grappling skills I couldn't find the

1187
00:51:33,980 --> 00:51:38,630
location where this issue was already

1188
00:51:37,010 --> 00:51:40,609
thought of in the standard but it could

1189
00:51:38,630 --> 00:51:41,900
be well actually it could be but we

1190
00:51:40,609 --> 00:51:44,410
don't know but what was interesting is

1191
00:51:41,900 --> 00:51:46,339
that different stacks we've tested

1192
00:51:44,410 --> 00:51:48,710
concerning different operating systems

1193
00:51:46,339 --> 00:51:51,500
just behave differently so if there is

1194
00:51:48,710 --> 00:51:53,720
any recommendation by the standards it's

1195
00:51:51,500 --> 00:51:55,849
open for interpretation at least yeah

1196
00:51:53,720 --> 00:51:59,569
and you maybe you can talk back there to

1197
00:51:55,849 --> 00:52:01,339
this Marvel Mir he's he's a Bluetooth

1198
00:51:59,570 --> 00:52:03,920
expert maybe he knows where it's in the

1199
00:52:01,339 --> 00:52:08,740
standard or not I'm not sure but it is

1200
00:52:03,920 --> 00:52:08,740
known okay thanks guys

