1
00:00:04,220 --> 00:00:09,780
yes hello everyone<font color="#E5E5E5"> so my name is Daniele</font>

2
00:00:07,080 --> 00:00:11,280
and<font color="#E5E5E5"> today I'm going to present on</font><font color="#CCCCCC"> the</font>

3
00:00:09,780 --> 00:00:14,340
<font color="#CCCCCC">PDA which is a project</font><font color="#E5E5E5"> that I've now</font>

4
00:00:11,280 --> 00:00:16,529
been pursuing for<font color="#E5E5E5"> almost two years</font><font color="#CCCCCC"> first</font>

5
00:00:14,340 --> 00:00:19,080
before<font color="#CCCCCC"> we get into it let me take my</font>

6
00:00:16,529 --> 00:00:20,910
co-workers on this one<font color="#E5E5E5"> so Martin had a</font>

7
00:00:19,080 --> 00:00:24,209
lot with the<font color="#CCCCCC"> revelation framework and</font>

8
00:00:20,910 --> 00:00:25,740
statistics<font color="#E5E5E5"> that we've used</font><font color="#CCCCCC"> to present</font>

9
00:00:24,210 --> 00:00:28,529
some of the results<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are later in</font>

10
00:00:25,740 --> 00:00:31,709
the<font color="#E5E5E5"> store and Stefan basically program</font>

11
00:00:28,529 --> 00:00:33,930
most of the<font color="#E5E5E5"> website and platform that's</font>

12
00:00:31,710 --> 00:00:36,480
<font color="#E5E5E5">basically used to deliver the data and</font>

13
00:00:33,930 --> 00:00:38,579
interact with with my<font color="#E5E5E5"> PDF and my</font>

14
00:00:36,480 --> 00:00:41,129
supervisor<font color="#E5E5E5"> and I'm always happy</font><font color="#CCCCCC"> when I</font>

15
00:00:38,579 --> 00:00:42,780
can<font color="#CCCCCC"> talk to him and exchange ideas</font><font color="#E5E5E5"> so</font>

16
00:00:41,129 --> 00:00:44,250
the outline for the store is basically I

17
00:00:42,780 --> 00:00:46,289
start with a<font color="#E5E5E5"> summary so you get</font>

18
00:00:44,250 --> 00:00:46,770
directing to the topic and<font color="#E5E5E5"> what's it all</font>

19
00:00:46,289 --> 00:00:48,840
about

20
00:00:46,770 --> 00:00:51,510
then I go back<font color="#E5E5E5"> about two years in time</font>

21
00:00:48,840 --> 00:00:54,030
<font color="#E5E5E5">motivating</font><font color="#CCCCCC"> how we came to that idea</font><font color="#E5E5E5"> and</font>

22
00:00:51,510 --> 00:00:56,519
<font color="#E5E5E5">what basically has happened unto them I</font>

23
00:00:54,030 --> 00:00:58,559
give a layout<font color="#CCCCCC"> of the approach that we</font>

24
00:00:56,520 --> 00:01:01,469
have followed<font color="#E5E5E5"> and then present my PDA</font>

25
00:00:58,559 --> 00:01:03,599
itself and the next step<font color="#E5E5E5"> is</font><font color="#CCCCCC"> basically</font>

26
00:01:01,469 --> 00:01:05,280
showing you<font color="#E5E5E5"> what you can do with this</font>

27
00:01:03,600 --> 00:01:08,909
corpus so essentially what I'm

28
00:01:05,280 --> 00:01:10,799
presenting<font color="#E5E5E5"> here is a very clean corpus</font>

29
00:01:08,909 --> 00:01:13,530
of<font color="#E5E5E5"> malware of</font><font color="#CCCCCC"> unpacked nerve actually</font>

30
00:01:10,799 --> 00:01:17,040
<font color="#CCCCCC">and then going a</font><font color="#E5E5E5"> bit in the future so</font>

31
00:01:13,530 --> 00:01:18,600
for the summary<font color="#E5E5E5"> what's</font><font color="#CCCCCC"> map</font><font color="#E5E5E5"> idea so from</font>

32
00:01:17,040 --> 00:01:20,790
the intention is basically a free

33
00:01:18,600 --> 00:01:22,619
independent<font color="#CCCCCC"> put resource for</font>

34
00:01:20,790 --> 00:01:24,150
confidential<font color="#E5E5E5"> labeled unpick reference</font>

35
00:01:22,619 --> 00:01:27,630
samples from other<font color="#CCCCCC"> memories inversions</font>

36
00:01:24,150 --> 00:01:30,570
so everything<font color="#E5E5E5"> in one sentence basically</font>

37
00:01:27,630 --> 00:01:32,939
<font color="#E5E5E5">means I try to have a good coverage of</font>

38
00:01:30,570 --> 00:01:35,279
<font color="#E5E5E5">many</font><font color="#CCCCCC"> families</font><font color="#E5E5E5"> then have the</font><font color="#CCCCCC"> abortions</font>

39
00:01:32,939 --> 00:01:37,679
<font color="#CCCCCC">tracked as</font><font color="#E5E5E5"> well trying to</font><font color="#CCCCCC"> limit it to</font><font color="#E5E5E5"> as</font>

40
00:01:35,280 --> 00:01:40,020
<font color="#CCCCCC">many as few symbols</font><font color="#E5E5E5"> as possible so I</font>

41
00:01:37,680 --> 00:01:42,360
want<font color="#CCCCCC"> to have a small corpus that's still</font>

42
00:01:40,020 --> 00:01:44,490
very<font color="#E5E5E5"> representative and I'm very happy</font>

43
00:01:42,360 --> 00:01:47,789
<font color="#CCCCCC">to share this kind</font><font color="#E5E5E5"> of data at the same</font>

44
00:01:44,490 --> 00:01:49,408
time<font color="#E5E5E5"> along with</font><font color="#CCCCCC"> the samples</font><font color="#E5E5E5"> it makes</font>

45
00:01:47,790 --> 00:01:51,630
sense to track all the<font color="#CCCCCC"> meta data</font><font color="#E5E5E5"> because</font>

46
00:01:49,409 --> 00:01:53,130
right now<font color="#E5E5E5"> if you think about it how are</font>

47
00:01:51,630 --> 00:01:54,600
<font color="#E5E5E5">you</font><font color="#CCCCCC"> going to find blog posts on</font>

48
00:01:53,130 --> 00:01:56,280
something you're going<font color="#E5E5E5"> Google and that's</font>

49
00:01:54,600 --> 00:01:58,079
a lot of<font color="#E5E5E5"> effort</font><font color="#CCCCCC"> otherwise we could</font>

50
00:01:56,280 --> 00:01:59,729
<font color="#CCCCCC">basically directly attach those</font>

51
00:01:58,079 --> 00:02:01,350
references to<font color="#E5E5E5"> the samples so</font><font color="#CCCCCC"> you have</font>

52
00:01:59,729 --> 00:02:03,929
<font color="#CCCCCC">everything in one</font><font color="#E5E5E5"> place</font><font color="#CCCCCC"> so it's one</font><font color="#E5E5E5"> of</font>

53
00:02:01,350 --> 00:02:06,210
the<font color="#E5E5E5"> ideas here and since we have a nice</font>

54
00:02:03,930 --> 00:02:08,280
corpus and we can<font color="#E5E5E5"> also basically test</font>

55
00:02:06,210 --> 00:02:09,840
and develop our<font color="#CCCCCC"> yaro</font><font color="#E5E5E5"> rules against it so</font>

56
00:02:08,280 --> 00:02:12,680
that's the some of the<font color="#CCCCCC"> ideas here</font>

57
00:02:09,840 --> 00:02:13,770
so looking<font color="#E5E5E5"> about one week ago</font><font color="#CCCCCC"> I had</font>

58
00:02:12,680 --> 00:02:15,000
<font color="#E5E5E5">roughly</font>

59
00:02:13,770 --> 00:02:17,790
two and a<font color="#E5E5E5"> half thousand</font><font color="#CCCCCC"> member</font><font color="#E5E5E5"> samples</font>

60
00:02:15,000 --> 00:02:19,560
there for around<font color="#CCCCCC"> 670 families and I'm</font>

61
00:02:17,790 --> 00:02:22,350
targeting multi-platforms not only

62
00:02:19,560 --> 00:02:24,440
<font color="#E5E5E5">Windows malware but</font><font color="#CCCCCC"> also embedded stuff</font>

63
00:02:22,350 --> 00:02:26,460
<font color="#E5E5E5">I at least</font><font color="#CCCCCC"> of apks</font><font color="#E5E5E5"> OSX</font>

64
00:02:24,440 --> 00:02:30,150
<font color="#CCCCCC">JavaScript's</font><font color="#E5E5E5"> because that's a</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> as</font>

65
00:02:26,460 --> 00:02:32,040
well and everything<font color="#CCCCCC"> in that corpus so</font>

66
00:02:30,150 --> 00:02:34,050
the contributions of<font color="#E5E5E5"> this work because</font>

67
00:02:32,040 --> 00:02:35,429
<font color="#E5E5E5">there's also</font><font color="#CCCCCC"> paper to it ever</font><font color="#E5E5E5"> we</font>

68
00:02:34,050 --> 00:02:37,350
released later on

69
00:02:35,430 --> 00:02:39,630
first we define<font color="#E5E5E5"> some requirements that</font>

70
00:02:37,350 --> 00:02:41,519
we think are<font color="#CCCCCC"> useful thing to</font><font color="#E5E5E5"> follow if</font>

71
00:02:39,630 --> 00:02:44,130
<font color="#CCCCCC">you're basically creating such</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> corpus</font>

72
00:02:41,520 --> 00:02:46,350
and then<font color="#E5E5E5"> we provide our vision or our</font>

73
00:02:44,130 --> 00:02:49,410
take on this corpus<font color="#E5E5E5"> and the platform as</font>

74
00:02:46,350 --> 00:02:51,480
well<font color="#E5E5E5"> and the second part is basically we</font>

75
00:02:49,410 --> 00:02:52,890
do a comprehensive<font color="#E5E5E5"> quantitative static</font>

76
00:02:51,480 --> 00:02:54,690
analysis so basically<font color="#E5E5E5"> looking at the</font>

77
00:02:52,890 --> 00:02:57,269
structure across all of those families

78
00:02:54,690 --> 00:03:02,370
<font color="#CCCCCC">and</font><font color="#E5E5E5"> provide some results on that as well</font>

79
00:02:57,270 --> 00:03:07,530
<font color="#CCCCCC">so how</font><font color="#E5E5E5"> did all</font><font color="#CCCCCC"> of this begin</font><font color="#E5E5E5"> so who was</font>

80
00:03:02,370 --> 00:03:10,470
at what come 2015 so some of you guys<font color="#E5E5E5"> I</font>

81
00:03:07,530 --> 00:03:13,740
have to<font color="#CCCCCC"> do it that way might remember</font>

82
00:03:10,470 --> 00:03:16,710
that<font color="#E5E5E5"> there was distinct so quite a bunch</font>

83
00:03:13,740 --> 00:03:20,100
of<font color="#CCCCCC"> TTA talks and yeah I'm one of those</font>

84
00:03:16,710 --> 00:03:22,770
<font color="#E5E5E5">guys so</font><font color="#CCCCCC"> I basically presented on my</font>

85
00:03:20,100 --> 00:03:25,230
<font color="#E5E5E5">previous project which was DG archive so</font>

86
00:03:22,770 --> 00:03:27,410
basically<font color="#E5E5E5"> a clean collection of</font><font color="#CCCCCC"> Agra</font>

87
00:03:25,230 --> 00:03:30,269
<font color="#CCCCCC">from Berkeley generated domain names</font>

88
00:03:27,410 --> 00:03:32,850
<font color="#E5E5E5">however as much renting there was on</font>

89
00:03:30,270 --> 00:03:34,050
DJ's I still feel from the<font color="#E5E5E5"> feedback I</font>

90
00:03:32,850 --> 00:03:36,450
received that's a good project<font color="#E5E5E5"> because</font>

91
00:03:34,050 --> 00:03:39,330
<font color="#E5E5E5">um when you provide created systemize</font>

92
00:03:36,450 --> 00:03:41,609
data you can do really<font color="#CCCCCC"> good stuff with</font>

93
00:03:39,330 --> 00:03:42,959
it<font color="#E5E5E5"> and also since it was launched I had</font>

94
00:03:41,610 --> 00:03:45,390
<font color="#E5E5E5">more than one and a half million queries</font>

95
00:03:42,959 --> 00:03:48,990
to<font color="#CCCCCC"> DG archive so it seemed League is</font>

96
00:03:45,390 --> 00:03:51,929
also used<font color="#CCCCCC"> by some people in</font><font color="#E5E5E5"> 2015 there</font>

97
00:03:48,990 --> 00:03:55,500
<font color="#E5E5E5">was another thing does anyone recall</font>

98
00:03:51,930 --> 00:03:58,920
<font color="#E5E5E5">this slide it's actually from a</font>

99
00:03:55,500 --> 00:04:01,800
<font color="#CCCCCC">lightning talk so there was this plug</font>

100
00:03:58,920 --> 00:04:03,780
watt plug X so<font color="#E5E5E5"> basically when Crowder</font>

101
00:04:01,800 --> 00:04:05,820
gave his lightning talk on that we have

102
00:04:03,780 --> 00:04:07,350
a synonym problem<font color="#CCCCCC"> basically with malware</font>

103
00:04:05,820 --> 00:04:08,970
<font color="#E5E5E5">so everyone is preferring</font><font color="#CCCCCC"> to stuff in a</font>

104
00:04:07,350 --> 00:04:10,820
<font color="#E5E5E5">different way and we cannot really come</font>

105
00:04:08,970 --> 00:04:12,780
to consensus<font color="#E5E5E5"> and what he basically</font>

106
00:04:10,820 --> 00:04:15,420
<font color="#E5E5E5">proposed us let's let's try</font><font color="#CCCCCC"> to do</font>

107
00:04:12,780 --> 00:04:17,220
<font color="#E5E5E5">something and fix it I didn't really</font>

108
00:04:15,420 --> 00:04:19,469
<font color="#E5E5E5">talk to him but</font><font color="#CCCCCC"> I thought</font><font color="#E5E5E5"> also it was a</font>

109
00:04:17,220 --> 00:04:20,340
good<font color="#CCCCCC"> idea because when I basically came</font>

110
00:04:19,470 --> 00:04:22,710
back from<font color="#CCCCCC"> kampf</font>

111
00:04:20,339 --> 00:04:26,010
<font color="#CCCCCC">I looked at all the</font><font color="#E5E5E5"> data that</font><font color="#CCCCCC"> I had so</font>

112
00:04:22,710 --> 00:04:27,150
<font color="#E5E5E5">I'm from several years I had basically</font>

113
00:04:26,010 --> 00:04:28,530
<font color="#E5E5E5">the idea I'm</font>

114
00:04:27,150 --> 00:04:30,299
sitting on<font color="#E5E5E5"> a pile of Investigations that</font>

115
00:04:28,530 --> 00:04:32,070
<font color="#E5E5E5">I've done and</font><font color="#CCCCCC"> debated</font><font color="#E5E5E5"> I structured</font>

116
00:04:30,300 --> 00:04:33,780
<font color="#CCCCCC">amidst them normally probably by date I</font>

117
00:04:32,070 --> 00:04:35,250
have<font color="#CCCCCC"> to sample I might have a dumb</font><font color="#E5E5E5"> might</font>

118
00:04:33,780 --> 00:04:37,739
have unpacked samples might have an ID

119
00:04:35,250 --> 00:04:40,889
be some some<font color="#E5E5E5"> text and write up for it</font>

120
00:04:37,740 --> 00:04:43,979
and what<font color="#E5E5E5"> is somewhat structured is still</font>

121
00:04:40,889 --> 00:04:45,539
mess<font color="#E5E5E5"> and what came to me is basically it</font>

122
00:04:43,979 --> 00:04:48,750
might be a good<font color="#CCCCCC"> idea to do this in a way</font>

123
00:04:45,539 --> 00:04:51,240
more structured fashion<font color="#E5E5E5"> so I thought</font>

124
00:04:48,750 --> 00:04:52,800
having<font color="#E5E5E5"> a code centric inventory that's</font>

125
00:04:51,240 --> 00:04:54,300
basically focusing on static analysis

126
00:04:52,800 --> 00:04:56,490
would<font color="#CCCCCC"> be like really</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> good because</font>

127
00:04:54,300 --> 00:04:58,229
we<font color="#E5E5E5"> can basically resolve over</font><font color="#CCCCCC"> our</font>

128
00:04:56,490 --> 00:04:59,490
synonym and<font color="#E5E5E5"> naming problem with it</font>

129
00:04:58,229 --> 00:05:01,109
because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> it's like</font><font color="#E5E5E5"> a rosetta stone</font>

130
00:04:59,490 --> 00:05:03,449
where you have pieces<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> refer</font>

131
00:05:01,110 --> 00:05:05,250
to<font color="#E5E5E5"> and basically put just a</font><font color="#CCCCCC"> lame</font><font color="#E5E5E5"> label</font>

132
00:05:03,449 --> 00:05:07,530
on it because code is<font color="#E5E5E5"> basically the</font>

133
00:05:05,250 --> 00:05:10,710
basis<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we can find consensus on when</font>

134
00:05:07,530 --> 00:05:12,448
we try to name<font color="#E5E5E5"> stuff I guess yeah and</font>

135
00:05:10,710 --> 00:05:15,210
another<font color="#CCCCCC"> thing that I've learned from</font>

136
00:05:12,449 --> 00:05:17,220
<font color="#CCCCCC">ggrf</font><font color="#E5E5E5"> is basically we as a mother</font>

137
00:05:15,210 --> 00:05:18,830
<font color="#E5E5E5">research community</font><font color="#CCCCCC"> should definitely</font>

138
00:05:17,220 --> 00:05:21,570
start thinking about preservation

139
00:05:18,830 --> 00:05:24,150
<font color="#CCCCCC">because when I tried to recover as many</font>

140
00:05:21,570 --> 00:05:27,240
<font color="#CCCCCC">ggs</font><font color="#E5E5E5"> as possible I ran into stuff like</font><font color="#CCCCCC"> a</font>

141
00:05:24,150 --> 00:05:31,049
<font color="#E5E5E5">Zener wall or TDS s that were active</font>

142
00:05:27,240 --> 00:05:34,110
around 2008<font color="#CCCCCC"> 2011</font><font color="#E5E5E5"> or more and it's very</font>

143
00:05:31,050 --> 00:05:36,810
hard<font color="#E5E5E5"> to find samples for those families</font>

144
00:05:34,110 --> 00:05:38,340
by today's standards<font color="#E5E5E5"> so even if I'm very</font>

145
00:05:36,810 --> 00:05:39,870
sure that<font color="#E5E5E5"> they are somewhere in the in</font>

146
00:05:38,340 --> 00:05:42,150
the deaths of<font color="#E5E5E5"> virustotal and hidden</font>

147
00:05:39,870 --> 00:05:44,820
there<font color="#E5E5E5"> it's hard to find those examples</font>

148
00:05:42,150 --> 00:05:47,820
<font color="#E5E5E5">that</font><font color="#CCCCCC"> consist</font><font color="#E5E5E5"> or basically contain</font><font color="#CCCCCC"> the</font>

149
00:05:44,820 --> 00:05:49,260
<font color="#CCCCCC">DGA code especially if it's</font><font color="#E5E5E5"> not like</font><font color="#CCCCCC"> a</font>

150
00:05:47,820 --> 00:05:51,419
<font color="#E5E5E5">first stage drop or something</font><font color="#CCCCCC"> but a</font>

151
00:05:49,260 --> 00:05:52,800
module<font color="#CCCCCC"> that's being pulled it can be</font>

152
00:05:51,419 --> 00:05:55,320
hard to find<font color="#E5E5E5"> the kind</font><font color="#CCCCCC"> of stuff so</font>

153
00:05:52,800 --> 00:05:57,270
<font color="#CCCCCC">basically having this this archived</font>

154
00:05:55,320 --> 00:05:57,900
repository of<font color="#CCCCCC"> mother families might be a</font>

155
00:05:57,270 --> 00:06:00,719
good<font color="#CCCCCC"> idea</font>

156
00:05:57,900 --> 00:06:01,409
from the<font color="#E5E5E5"> perspective as well so for</font>

157
00:06:00,720 --> 00:06:04,409
related work

158
00:06:01,409 --> 00:06:05,580
<font color="#CCCCCC">um so Erica's not</font><font color="#E5E5E5"> here this year</font><font color="#CCCCCC"> but at</font>

159
00:06:04,409 --> 00:06:07,800
least I want<font color="#CCCCCC"> to have him in my slides</font>

160
00:06:05,580 --> 00:06:09,780
<font color="#CCCCCC">he's been doing this but mess of our</font>

161
00:06:07,800 --> 00:06:11,729
project which is basically<font color="#CCCCCC"> a wiki like</font>

162
00:06:09,780 --> 00:06:14,280
structure also<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to cover many</font>

163
00:06:11,729 --> 00:06:17,490
different<font color="#E5E5E5"> malware families but in that</font>

164
00:06:14,280 --> 00:06:18,900
<font color="#E5E5E5">sense it's</font><font color="#CCCCCC"> just metadata that's</font><font color="#E5E5E5"> also the</font>

165
00:06:17,490 --> 00:06:21,570
zoo<font color="#CCCCCC"> that was referenced yesterday</font>

166
00:06:18,900 --> 00:06:23,460
<font color="#E5E5E5">because um you were using it</font><font color="#CCCCCC"> as a label</font>

167
00:06:21,570 --> 00:06:26,400
injection when you do we're<font color="#CCCCCC"> doing</font>

168
00:06:23,460 --> 00:06:28,349
<font color="#E5E5E5">clustering</font><font color="#CCCCCC"> I think there is basically</font>

169
00:06:26,400 --> 00:06:30,120
it's still mostly<font color="#E5E5E5"> pecked malware and</font>

170
00:06:28,349 --> 00:06:31,289
it's<font color="#E5E5E5"> only semi</font><font color="#CCCCCC"> structure that's caught</font>

171
00:06:30,120 --> 00:06:34,590
that way<font color="#E5E5E5"> because you sometimes have</font>

172
00:06:31,289 --> 00:06:36,930
folders<font color="#E5E5E5"> that basically contain the same</font>

173
00:06:34,590 --> 00:06:38,960
family or<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> one folder containing</font>

174
00:06:36,930 --> 00:06:40,950
more<font color="#E5E5E5"> than one family and stuff like that</font>

175
00:06:38,960 --> 00:06:44,010
virus pay is a quite

176
00:06:40,950 --> 00:06:45,479
new project<font color="#E5E5E5"> it seems to follow some same</font>

177
00:06:44,010 --> 00:06:47,190
ideas<font color="#CCCCCC"> that I've</font><font color="#E5E5E5"> been doing</font><font color="#CCCCCC"> with my PDA</font>

178
00:06:45,480 --> 00:06:49,350
<font color="#CCCCCC">but I think it's more focused on</font>

179
00:06:47,190 --> 00:06:50,820
<font color="#E5E5E5">knowledge exchanged and actually trying</font>

180
00:06:49,350 --> 00:06:53,460
<font color="#E5E5E5">to build</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of archive</font><font color="#CCCCCC"> that I'm</font>

181
00:06:50,820 --> 00:06:56,130
pursuing<font color="#E5E5E5"> here and finally</font><font color="#CCCCCC"> you have</font>

182
00:06:53,460 --> 00:06:58,140
projects<font color="#CCCCCC"> like ID ransomware</font><font color="#E5E5E5"> that's also</font>

183
00:06:56,130 --> 00:06:59,219
I guess keep their collection but it's

184
00:06:58,140 --> 00:07:02,210
basically hidden and not<font color="#E5E5E5"> accessible</font>

185
00:06:59,220 --> 00:07:06,570
<font color="#E5E5E5">directly so basically</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> also only</font>

186
00:07:02,210 --> 00:07:08,340
metadata<font color="#E5E5E5"> yeah so also the title is</font>

187
00:07:06,570 --> 00:07:10,230
basically inventor<font color="#CCCCCC"> rising</font><font color="#E5E5E5"> Netscape and</font>

188
00:07:08,340 --> 00:07:12,419
what do I<font color="#E5E5E5"> mean</font><font color="#CCCCCC"> by that</font>

189
00:07:10,230 --> 00:07:14,790
so it's basically<font color="#E5E5E5"> a kind of</font><font color="#CCCCCC"> a sling now</font>

190
00:07:12,420 --> 00:07:16,410
<font color="#E5E5E5">it</font><font color="#CCCCCC"> sounds a bit</font><font color="#E5E5E5"> like cartography</font><font color="#CCCCCC"> and</font>

191
00:07:14,790 --> 00:07:17,910
that's basically what I basically<font color="#CCCCCC"> my</font>

192
00:07:16,410 --> 00:07:21,030
vision<font color="#CCCCCC"> for this</font><font color="#E5E5E5"> project in the</font><font color="#CCCCCC"> in the</font>

193
00:07:17,910 --> 00:07:22,530
long run is so cartography<font color="#E5E5E5"> in a</font>

194
00:07:21,030 --> 00:07:25,950
historical<font color="#CCCCCC"> sense is basically done with</font>

195
00:07:22,530 --> 00:07:28,320
baselines<font color="#E5E5E5"> and the fun facts</font><font color="#CCCCCC"> basically in</font>

196
00:07:25,950 --> 00:07:28,920
bond<font color="#CCCCCC"> is one of the older</font><font color="#E5E5E5"> ones of such</font>

197
00:07:28,320 --> 00:07:30,840
baselines

198
00:07:28,920 --> 00:07:33,270
so in<font color="#CCCCCC"> bond we have this</font><font color="#E5E5E5"> distance of</font>

199
00:07:30,840 --> 00:07:35,400
<font color="#CCCCCC">round about</font><font color="#E5E5E5"> two kilometers which has</font>

200
00:07:33,270 --> 00:07:38,609
been used to<font color="#E5E5E5"> measure a very long stretch</font>

201
00:07:35,400 --> 00:07:40,710
of land afterwards so you basically have

202
00:07:38,610 --> 00:07:42,510
<font color="#CCCCCC">this plate</font><font color="#E5E5E5"> which basically tells you</font>

203
00:07:40,710 --> 00:07:44,969
what it<font color="#E5E5E5"> was used for it's basically a</font>

204
00:07:42,510 --> 00:07:47,130
<font color="#CCCCCC">pillar somewhere involved and from a</font>

205
00:07:44,970 --> 00:07:48,780
theory<font color="#E5E5E5"> you'd measure other points that</font>

206
00:07:47,130 --> 00:07:51,450
you<font color="#CCCCCC"> can see in a distance</font><font color="#E5E5E5"> and then by</font>

207
00:07:48,780 --> 00:07:53,429
the<font color="#E5E5E5"> angle it's derived basically the</font>

208
00:07:51,450 --> 00:07:55,710
disband that's basically<font color="#CCCCCC"> width between</font>

209
00:07:53,430 --> 00:07:58,560
<font color="#CCCCCC">those points</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you're measuring</font>

210
00:07:55,710 --> 00:08:00,419
<font color="#CCCCCC">and in those times</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> it has been</font>

211
00:07:58,560 --> 00:08:02,220
used to to cover the whole<font color="#CCCCCC"> distance from</font>

212
00:08:00,420 --> 00:08:04,200
Athens uruk's so run about<font color="#E5E5E5"> four</font>

213
00:08:02,220 --> 00:08:06,630
<font color="#E5E5E5">kilometers and</font><font color="#CCCCCC"> that kind of</font><font color="#E5E5E5"> started in</font>

214
00:08:04,200 --> 00:08:08,490
<font color="#CCCCCC">Bonn so it was just some fun fact that I</font>

215
00:08:06,630 --> 00:08:11,700
wanted<font color="#CCCCCC"> to bring up</font><font color="#E5E5E5"> here so apply to</font>

216
00:08:08,490 --> 00:08:13,560
<font color="#CCCCCC">malware</font><font color="#E5E5E5"> we could do</font><font color="#CCCCCC"> that as</font><font color="#E5E5E5"> well I guess</font>

217
00:08:11,700 --> 00:08:15,240
so if we<font color="#E5E5E5"> are trying to collect some</font>

218
00:08:13,560 --> 00:08:18,660
reference points for families and

219
00:08:15,240 --> 00:08:21,060
versions we could measure code<font color="#E5E5E5"> somehow</font>

220
00:08:18,660 --> 00:08:22,260
<font color="#E5E5E5">or at least do an indexation on it so</font>

221
00:08:21,060 --> 00:08:24,450
that's basically my vision for<font color="#CCCCCC"> this</font>

222
00:08:22,260 --> 00:08:26,789
whole<font color="#CCCCCC"> thing so I thought</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> let's give</font>

223
00:08:24,450 --> 00:08:29,729
it a<font color="#CCCCCC"> shot and</font><font color="#E5E5E5"> that was basically run</font>

224
00:08:26,790 --> 00:08:34,140
<font color="#E5E5E5">about two years ago</font><font color="#CCCCCC"> so for the approach</font>

225
00:08:29,730 --> 00:08:35,640
I thought it might<font color="#CCCCCC"> make sense to go one</font>

226
00:08:34,140 --> 00:08:39,049
<font color="#CCCCCC">step back and try</font><font color="#E5E5E5"> to do it's just</font>

227
00:08:35,640 --> 00:08:41,098
<font color="#CCCCCC">somatically</font><font color="#E5E5E5"> from the start so what are</font>

228
00:08:39,049 --> 00:08:42,929
probably some goats<font color="#E5E5E5"> that you would want</font>

229
00:08:41,099 --> 00:08:45,960
to<font color="#E5E5E5"> pursue if you build</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> corpus so</font>

230
00:08:42,929 --> 00:08:48,660
I thought<font color="#E5E5E5"> there's this work from 2007</font>

231
00:08:45,960 --> 00:08:50,670
2012 by Christian Russell<font color="#E5E5E5"> and he</font><font color="#CCCCCC"> defined</font>

232
00:08:48,660 --> 00:08:52,230
some prudent practices<font color="#CCCCCC"> that's one people</font>

233
00:08:50,670 --> 00:08:53,620
people would should follow if you<font color="#CCCCCC"> are</font>

234
00:08:52,230 --> 00:08:55,360
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> Mary</font><font color="#E5E5E5"> experiments</font>

235
00:08:53,620 --> 00:08:57,130
and I thought<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> that's reviewed and</font>

236
00:08:55,360 --> 00:08:59,530
try if you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> find some things</font><font color="#CCCCCC"> that we</font>

237
00:08:57,130 --> 00:09:01,450
can reapply<font color="#E5E5E5"> and from that we basically</font>

238
00:08:59,530 --> 00:09:03,040
found<font color="#E5E5E5"> our own requirements that are</font>

239
00:09:01,450 --> 00:09:05,200
<font color="#E5E5E5">basically more tailored to our special</font>

240
00:09:03,040 --> 00:09:08,170
case which is basically looking<font color="#E5E5E5"> at</font>

241
00:09:05,200 --> 00:09:09,670
<font color="#CCCCCC">static analysis</font><font color="#E5E5E5"> so some of the major</font>

242
00:09:08,170 --> 00:09:12,310
<font color="#E5E5E5">goals that you might</font><font color="#CCCCCC"> have in mind there</font>

243
00:09:09,670 --> 00:09:14,170
is<font color="#E5E5E5"> you want representative data</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

244
00:09:12,310 --> 00:09:16,719
that's pretty<font color="#CCCCCC"> obvious</font><font color="#E5E5E5"> because you want</font>

245
00:09:14,170 --> 00:09:19,360
<font color="#E5E5E5">to have coverage in multiple angles</font><font color="#CCCCCC"> at</font>

246
00:09:16,720 --> 00:09:21,130
the<font color="#E5E5E5"> same time it has to be temporal in a</font>

247
00:09:19,360 --> 00:09:24,040
good<font color="#E5E5E5"> sense so you can probably do some</font>

248
00:09:21,130 --> 00:09:25,600
historical analysis on malware<font color="#CCCCCC"> it</font>

249
00:09:24,040 --> 00:09:27,939
doesn't make sense<font color="#E5E5E5"> to them into a</font>

250
00:09:25,600 --> 00:09:29,680
<font color="#CCCCCC">platform</font><font color="#E5E5E5"> because you still can out a</font>

251
00:09:27,940 --> 00:09:32,410
piece of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> corpus afterwards if you</font>

252
00:09:29,680 --> 00:09:34,719
<font color="#E5E5E5">want to do that and if you want</font><font color="#CCCCCC"> to do</font>

253
00:09:32,410 --> 00:09:36,670
some analysis on the evolution of

254
00:09:34,720 --> 00:09:40,180
families<font color="#E5E5E5"> you need to have different</font>

255
00:09:36,670 --> 00:09:43,030
<font color="#E5E5E5">abortions as well</font><font color="#CCCCCC"> a second</font><font color="#E5E5E5"> design goal</font>

256
00:09:40,180 --> 00:09:45,459
was basically<font color="#CCCCCC"> to have everything and</font>

257
00:09:43,030 --> 00:09:46,870
then accessible format<font color="#E5E5E5"> so it's it has to</font>

258
00:09:45,460 --> 00:09:49,300
be easy<font color="#E5E5E5"> to work</font><font color="#CCCCCC"> with so that's very</font>

259
00:09:46,870 --> 00:09:51,490
important<font color="#CCCCCC"> and for me it was</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> utmost</font>

260
00:09:49,300 --> 00:09:53,290
<font color="#CCCCCC">impatience to</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> unpacked samples</font>

261
00:09:51,490 --> 00:09:54,370
<font color="#E5E5E5">because just putting labels on</font><font color="#CCCCCC"> packed</font>

262
00:09:53,290 --> 00:09:57,069
samples doesn't really help

263
00:09:54,370 --> 00:09:58,780
so unpack<font color="#E5E5E5"> this cool and to some degree</font>

264
00:09:57,070 --> 00:10:00,640
it also makes<font color="#E5E5E5"> sense to clean</font><font color="#CCCCCC"> an app</font>

265
00:09:58,780 --> 00:10:02,530
because<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you have process injection</font>

266
00:10:00,640 --> 00:10:04,210
you might have some fragments that are

267
00:10:02,530 --> 00:10:06,579
not<font color="#E5E5E5"> really related to the</font><font color="#CCCCCC"> family but are</font>

268
00:10:04,210 --> 00:10:08,500
still present<font color="#E5E5E5"> in memory</font><font color="#CCCCCC"> done</font><font color="#E5E5E5"> that you're</font>

269
00:10:06,580 --> 00:10:10,030
doing<font color="#E5E5E5"> so you have to do some</font>

270
00:10:08,500 --> 00:10:12,880
<font color="#E5E5E5">post-processing to</font><font color="#CCCCCC"> you have actually</font>

271
00:10:10,030 --> 00:10:16,060
really<font color="#E5E5E5"> cool data and while we're on it</font>

272
00:10:12,880 --> 00:10:17,500
<font color="#CCCCCC">um</font><font color="#E5E5E5"> let's not</font><font color="#CCCCCC"> just up with</font><font color="#E5E5E5"> levels but do</font>

273
00:10:16,060 --> 00:10:21,310
<font color="#CCCCCC">all of this</font><font color="#E5E5E5"> just made our data think</font>

274
00:10:17,500 --> 00:10:23,650
directly in the same run<font color="#E5E5E5"> basically yeah</font>

275
00:10:21,310 --> 00:10:25,839
and finally<font color="#CCCCCC"> um I thought okay this</font>

276
00:10:23,650 --> 00:10:28,000
<font color="#E5E5E5">should not be academically isolated so</font>

277
00:10:25,840 --> 00:10:30,640
let's see if we<font color="#CCCCCC"> can find</font><font color="#E5E5E5"> some practical</font>

278
00:10:28,000 --> 00:10:31,930
use with it as well so<font color="#CCCCCC"> first off it</font>

279
00:10:30,640 --> 00:10:34,090
probably has to<font color="#E5E5E5"> be topical and</font>

280
00:10:31,930 --> 00:10:35,829
<font color="#CCCCCC">maintainer so it's not just</font><font color="#E5E5E5"> today now</font>

281
00:10:34,090 --> 00:10:38,670
dump this the<font color="#CCCCCC"> Soul corpus thing but I</font>

282
00:10:35,830 --> 00:10:41,200
will try to have this maintained<font color="#E5E5E5"> and</font>

283
00:10:38,670 --> 00:10:43,900
basically that's<font color="#CCCCCC"> the collaborative</font>

284
00:10:41,200 --> 00:10:45,580
<font color="#E5E5E5">aspect to it and I invite basically all</font>

285
00:10:43,900 --> 00:10:47,290
<font color="#CCCCCC">of you to</font><font color="#E5E5E5"> contribute to this kind of</font>

286
00:10:45,580 --> 00:10:50,050
repository<font color="#CCCCCC"> because I guess it benefits</font>

287
00:10:47,290 --> 00:10:51,459
all<font color="#E5E5E5"> of us and finally</font><font color="#CCCCCC"> it probably ought</font>

288
00:10:50,050 --> 00:10:53,260
<font color="#CCCCCC">to make sense to</font><font color="#E5E5E5"> provide some tooling so</font>

289
00:10:51,460 --> 00:10:56,590
that you can basically<font color="#E5E5E5"> work</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> it so</font>

290
00:10:53,260 --> 00:10:58,780
<font color="#CCCCCC">for</font><font color="#E5E5E5"> me it</font><font color="#CCCCCC"> was quite important and</font><font color="#E5E5E5"> that's</font>

291
00:10:56,590 --> 00:11:00,520
still a lot of<font color="#E5E5E5"> work to have good Yara</font>

292
00:10:58,780 --> 00:11:02,199
coverage of all<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the covers because</font>

293
00:11:00,520 --> 00:11:05,140
<font color="#E5E5E5">that really</font><font color="#CCCCCC"> helps us solve</font><font color="#E5E5E5"> maybe this</font>

294
00:11:02,200 --> 00:11:06,790
identification<font color="#E5E5E5"> problem now finally I'm</font>

295
00:11:05,140 --> 00:11:09,760
<font color="#CCCCCC">from</font><font color="#E5E5E5"> of her that I'm working for</font>

296
00:11:06,790 --> 00:11:11,349
<font color="#CCCCCC">as nonprofit organizations so</font><font color="#E5E5E5"> we can</font>

297
00:11:09,760 --> 00:11:13,900
step in<font color="#CCCCCC"> to some degree</font><font color="#E5E5E5"> as something</font>

298
00:11:11,350 --> 00:11:17,710
<font color="#E5E5E5">vendor-neutral</font><font color="#CCCCCC"> and maybe we can</font><font color="#E5E5E5"> reach</font>

299
00:11:13,900 --> 00:11:20,410
some<font color="#CCCCCC"> consensual branch ophea</font><font color="#E5E5E5"> okay let's</font>

300
00:11:17,710 --> 00:11:22,450
go<font color="#E5E5E5"> back to to</font><font color="#CCCCCC"> Christians work so like I</font>

301
00:11:20,410 --> 00:11:24,699
said<font color="#CCCCCC"> it's basically</font><font color="#E5E5E5"> a list of things to</font>

302
00:11:22,450 --> 00:11:27,430
consider<font color="#E5E5E5"> when you're doing experiments</font>

303
00:11:24,700 --> 00:11:29,080
with malware and it's basically<font color="#E5E5E5"> 18</font>

304
00:11:27,430 --> 00:11:31,930
different<font color="#E5E5E5"> aspects</font><font color="#CCCCCC"> that are organized</font>

305
00:11:29,080 --> 00:11:33,550
into<font color="#E5E5E5"> four categories</font><font color="#CCCCCC"> so first you</font><font color="#E5E5E5"> want</font>

306
00:11:31,930 --> 00:11:36,459
to<font color="#CCCCCC"> ensure that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the correct data</font>

307
00:11:33,550 --> 00:11:39,219
set<font color="#CCCCCC"> but that</font><font color="#E5E5E5"> means you probably have to</font>

308
00:11:36,460 --> 00:11:41,380
divide between<font color="#E5E5E5"> good</font><font color="#CCCCCC"> wear and malware</font>

309
00:11:39,220 --> 00:11:42,700
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you want to keep</font><font color="#CCCCCC"> balanced across</font>

310
00:11:41,380 --> 00:11:44,890
<font color="#E5E5E5">the families that you're using a new</font>

311
00:11:42,700 --> 00:11:47,260
experimentation that<font color="#CCCCCC"> you separate</font>

312
00:11:44,890 --> 00:11:48,850
<font color="#E5E5E5">training data from a relation data that</font>

313
00:11:47,260 --> 00:11:51,130
you<font color="#CCCCCC"> have to think about</font><font color="#E5E5E5"> artifacts and a</font>

314
00:11:48,850 --> 00:11:52,930
lot<font color="#E5E5E5"> that kind of stuff and there's</font>

315
00:11:51,130 --> 00:11:54,520
<font color="#CCCCCC">basically things to consider</font><font color="#E5E5E5"> since we</font>

316
00:11:52,930 --> 00:11:56,469
are building a malware corpus the the

317
00:11:54,520 --> 00:11:59,340
<font color="#E5E5E5">good path aspect and the experiment</font>

318
00:11:56,470 --> 00:12:02,560
<font color="#CCCCCC">aspect to it basically does not really</font>

319
00:11:59,340 --> 00:12:04,840
affect us but just<font color="#CCCCCC"> there's some some</font>

320
00:12:02,560 --> 00:12:07,209
good ideas to put<font color="#E5E5E5"> in secondly you want</font>

321
00:12:04,840 --> 00:12:09,220
<font color="#E5E5E5">to do transparency in how</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> publish</font>

322
00:12:07,210 --> 00:12:10,900
the results so that<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that you</font>

323
00:12:09,220 --> 00:12:12,940
publish the data set that you explain

324
00:12:10,900 --> 00:12:14,530
where the labels are coming from which

325
00:12:12,940 --> 00:12:17,100
expert experiment setup<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have been</font>

326
00:12:14,530 --> 00:12:19,390
using and that<font color="#E5E5E5"> you also do very</font>

327
00:12:17,100 --> 00:12:21,160
scrutinized<font color="#E5E5E5"> analysis of your results so</font>

328
00:12:19,390 --> 00:12:22,630
when you do for example<font color="#CCCCCC"> the</font>

329
00:12:21,160 --> 00:12:24,910
<font color="#E5E5E5">classification method that you</font><font color="#CCCCCC"> explain</font>

330
00:12:22,630 --> 00:12:27,760
<font color="#CCCCCC">how true positives and false positives</font>

331
00:12:24,910 --> 00:12:30,120
<font color="#CCCCCC">and</font><font color="#E5E5E5"> false negatives basically constitute</font>

332
00:12:27,760 --> 00:12:32,950
<font color="#CCCCCC">themselves and then why are happening</font>

333
00:12:30,120 --> 00:12:34,810
then you<font color="#CCCCCC"> want to do realism because</font><font color="#E5E5E5"> you</font>

334
00:12:32,950 --> 00:12:36,700
can live in<font color="#CCCCCC"> your ivory</font><font color="#E5E5E5"> tower and do all</font>

335
00:12:34,810 --> 00:12:38,920
your isolated experiments that you want

336
00:12:36,700 --> 00:12:40,720
<font color="#CCCCCC">and if</font><font color="#E5E5E5"> you want other people</font><font color="#CCCCCC"> to use it</font>

337
00:12:38,920 --> 00:12:41,920
you probably<font color="#E5E5E5"> have to look at relevance</font>

338
00:12:40,720 --> 00:12:43,660
and that means that you<font color="#E5E5E5"> have to look at</font>

339
00:12:41,920 --> 00:12:45,250
the real world<font color="#E5E5E5"> and in</font><font color="#CCCCCC"> that sense</font>

340
00:12:43,660 --> 00:12:47,110
basically<font color="#E5E5E5"> that the experiments should be</font>

341
00:12:45,250 --> 00:12:48,760
designed in a way that's similar<font color="#E5E5E5"> to come</font>

342
00:12:47,110 --> 00:12:51,910
over basically<font color="#CCCCCC"> encountered in the</font><font color="#E5E5E5"> wild</font>

343
00:12:48,760 --> 00:12:54,130
<font color="#CCCCCC">and finally safety is also</font><font color="#E5E5E5"> something to</font>

344
00:12:51,910 --> 00:12:57,730
<font color="#E5E5E5">consider because if you're working</font><font color="#CCCCCC"> with</font>

345
00:12:54,130 --> 00:12:59,740
malware you might potentially<font color="#E5E5E5"> post harm</font>

346
00:12:57,730 --> 00:13:01,240
to outside parties<font color="#CCCCCC"> so you have to think</font>

347
00:12:59,740 --> 00:13:05,020
about<font color="#E5E5E5"> the deployment and</font><font color="#CCCCCC"> containment</font>

348
00:13:01,240 --> 00:13:08,470
<font color="#CCCCCC">that you have to put in</font><font color="#E5E5E5"> place so for us</font>

349
00:13:05,020 --> 00:13:10,960
<font color="#E5E5E5">um we basically came down to six things</font>

350
00:13:08,470 --> 00:13:13,360
that<font color="#CCCCCC"> we thought would be good</font>

351
00:13:10,960 --> 00:13:15,310
requirements for the good<font color="#CCCCCC"> novel corpus</font>

352
00:13:13,360 --> 00:13:17,770
<font color="#E5E5E5">and it's basically</font><font color="#CCCCCC"> limited to static</font>

353
00:13:15,310 --> 00:13:18,760
analysis in that<font color="#E5E5E5"> sense so I already said</font>

354
00:13:17,770 --> 00:13:21,579
<font color="#CCCCCC">that so</font>

355
00:13:18,760 --> 00:13:23,500
of content<font color="#E5E5E5"> makes sense</font><font color="#CCCCCC"> we want you</font><font color="#E5E5E5"> to</font>

356
00:13:21,579 --> 00:13:26,229
<font color="#CCCCCC">cross-platform because only doing</font>

357
00:13:23,500 --> 00:13:28,870
<font color="#CCCCCC">Windows is kind of not no</font><font color="#E5E5E5"> longer the</font>

358
00:13:26,230 --> 00:13:32,050
<font color="#E5E5E5">time now</font><font color="#CCCCCC"> unpack examples</font><font color="#E5E5E5"> accurate labels</font>

359
00:13:28,870 --> 00:13:34,360
do the documentation part because we

360
00:13:32,050 --> 00:13:36,910
want<font color="#E5E5E5"> to explain how we came to the data</font>

361
00:13:34,360 --> 00:13:40,300
and<font color="#E5E5E5"> basically what the context of it</font><font color="#CCCCCC"> and</font>

362
00:13:36,910 --> 00:13:43,000
finally<font color="#CCCCCC"> um that's something probably</font>

363
00:13:40,300 --> 00:13:44,560
debatable<font color="#E5E5E5"> but I think the creation</font>

364
00:13:43,000 --> 00:13:46,540
<font color="#E5E5E5">should be controlled in a sense because</font>

365
00:13:44,560 --> 00:13:48,760
I want<font color="#E5E5E5"> to ensure</font><font color="#CCCCCC"> that the format that</font>

366
00:13:46,540 --> 00:13:51,279
<font color="#E5E5E5">we've been using to set up this corpus</font>

367
00:13:48,760 --> 00:13:53,740
<font color="#CCCCCC">um</font><font color="#E5E5E5"> still stays</font><font color="#CCCCCC"> the same</font><font color="#E5E5E5"> and stays intact</font>

368
00:13:51,279 --> 00:13:56,769
and also this dissemination should be

369
00:13:53,740 --> 00:13:57,910
limited<font color="#CCCCCC"> so it's not</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> just go</font>

370
00:13:56,769 --> 00:14:01,240
to the<font color="#CCCCCC"> website and download everything</font>

371
00:13:57,910 --> 00:14:02,649
<font color="#E5E5E5">but we employ some basic vetting here so</font>

372
00:14:01,240 --> 00:14:04,570
that we can at least<font color="#E5E5E5"> to some degree</font>

373
00:14:02,649 --> 00:14:10,600
ensure that the data is not flowing

374
00:14:04,570 --> 00:14:12,490
wildly so for<font color="#E5E5E5"> presentative content um we</font>

375
00:14:10,600 --> 00:14:15,160
want to look<font color="#E5E5E5"> at relevant malware that</font>

376
00:14:12,490 --> 00:14:18,160
means if<font color="#CCCCCC"> you do it</font><font color="#E5E5E5"> that way is probably</font>

377
00:14:15,160 --> 00:14:20,500
also useful for for incident handlers or

378
00:14:18,160 --> 00:14:23,380
<font color="#E5E5E5">for other instances in</font><font color="#CCCCCC"> the real world</font>

379
00:14:20,500 --> 00:14:25,810
and<font color="#CCCCCC"> that might</font><font color="#E5E5E5"> be doing research</font>

380
00:14:23,380 --> 00:14:27,910
one thing is we favor quality over

381
00:14:25,810 --> 00:14:29,709
quantity<font color="#CCCCCC"> so it's it's not the goal</font>

382
00:14:27,910 --> 00:14:34,810
basically to roll the corpus as fast as

383
00:14:29,709 --> 00:14:36,069
possible<font color="#E5E5E5"> but rather look beyond what we</font>

384
00:14:34,810 --> 00:14:40,479
can<font color="#E5E5E5"> now call something</font><font color="#CCCCCC"> that you pick up</font>

385
00:14:36,069 --> 00:14:42,689
<font color="#E5E5E5">barrier</font><font color="#CCCCCC"> so um if you look</font><font color="#E5E5E5"> at how most</font>

386
00:14:40,480 --> 00:14:44,889
campaigns<font color="#E5E5E5"> are operated you will find</font>

387
00:14:42,690 --> 00:14:47,199
<font color="#E5E5E5">polymorphism in in how packers are</font>

388
00:14:44,889 --> 00:14:50,019
basically applied to to certain versions

389
00:14:47,199 --> 00:14:52,660
of malware but beyond this<font color="#E5E5E5"> pickup</font><font color="#CCCCCC"> area</font>

390
00:14:50,019 --> 00:14:53,889
<font color="#CCCCCC">it comes down</font><font color="#E5E5E5"> to way less different</font>

391
00:14:52,660 --> 00:14:55,750
versions<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> actually observe</font>

392
00:14:53,889 --> 00:14:57,360
in the<font color="#CCCCCC"> wild and</font><font color="#E5E5E5"> that means we can</font>

393
00:14:55,750 --> 00:14:59,709
<font color="#CCCCCC">basically limit ourselves to only</font>

394
00:14:57,360 --> 00:15:02,050
<font color="#E5E5E5">representants</font><font color="#CCCCCC"> of a version for one</font>

395
00:14:59,709 --> 00:15:04,630
family<font color="#CCCCCC"> and that</font><font color="#E5E5E5"> really is an aspect that</font>

396
00:15:02,050 --> 00:15:08,019
<font color="#E5E5E5">helps down</font><font color="#CCCCCC"> boiling</font><font color="#E5E5E5"> down this data set to</font>

397
00:15:04,630 --> 00:15:09,550
only<font color="#CCCCCC"> DD necessary parts so just to give</font>

398
00:15:08,019 --> 00:15:11,970
you<font color="#E5E5E5"> an example for that and we've been</font>

399
00:15:09,550 --> 00:15:15,579
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> another config data mining since</font>

400
00:15:11,970 --> 00:15:16,660
2012<font color="#E5E5E5"> as well and if you look at Citadel</font>

401
00:15:15,579 --> 00:15:19,329
for<font color="#E5E5E5"> example which was a very popular</font>

402
00:15:16,660 --> 00:15:22,529
<font color="#CCCCCC">family at that time</font><font color="#E5E5E5"> we had run about</font>

403
00:15:19,329 --> 00:15:24,880
100,000 unique<font color="#CCCCCC"> cetera samples over time</font>

404
00:15:22,529 --> 00:15:27,490
if you run all of<font color="#E5E5E5"> them do dynamic</font>

405
00:15:24,880 --> 00:15:29,880
analysis<font color="#E5E5E5"> very</font><font color="#CCCCCC"> similar</font><font color="#E5E5E5"> to what we've seen</font>

406
00:15:27,490 --> 00:15:32,850
<font color="#CCCCCC">bye-bye syrup yesterday</font>

407
00:15:29,880 --> 00:15:34,560
<font color="#E5E5E5">you probably cannot identify many more</font>

408
00:15:32,850 --> 00:15:36,990
<font color="#E5E5E5">than like</font><font color="#CCCCCC"> twenty one versions for all of</font>

409
00:15:34,560 --> 00:15:39,239
those samples<font color="#CCCCCC"> so if you're</font><font color="#E5E5E5"> only</font>

410
00:15:36,990 --> 00:15:41,370
<font color="#E5E5E5">interested in archiving the code and the</font>

411
00:15:39,240 --> 00:15:42,780
evolution of Citadella in that sense<font color="#CCCCCC"> you</font>

412
00:15:41,370 --> 00:15:44,990
can<font color="#CCCCCC"> probably achieve a data</font><font color="#E5E5E5"> reduction</font>

413
00:15:42,780 --> 00:15:47,400
factor of maybe four<font color="#CCCCCC"> and a half thousand</font>

414
00:15:44,990 --> 00:15:48,780
so in that sense we would not<font color="#E5E5E5"> be</font>

415
00:15:47,400 --> 00:15:50,730
<font color="#E5E5E5">interested</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> in storing all</font><font color="#CCCCCC"> of the</font>

416
00:15:48,780 --> 00:15:52,410
<font color="#CCCCCC">Citadelle samples</font><font color="#E5E5E5"> but only one per</font>

417
00:15:50,730 --> 00:15:53,940
version and that's<font color="#E5E5E5"> something that</font><font color="#CCCCCC"> you</font>

418
00:15:52,410 --> 00:15:55,560
<font color="#CCCCCC">can also observe</font><font color="#E5E5E5"> for for a bunch of</font>

419
00:15:53,940 --> 00:15:57,270
<font color="#E5E5E5">other families as well so there's</font>

420
00:15:55,560 --> 00:15:58,229
there's a huge amount<font color="#E5E5E5"> of timber going</font>

421
00:15:57,270 --> 00:16:00,150
around s<font color="#CCCCCC"> procs</font>

422
00:15:58,230 --> 00:16:01,560
but there's normally only some

423
00:16:00,150 --> 00:16:04,980
mainstream versions because<font color="#E5E5E5"> they are</font>

424
00:16:01,560 --> 00:16:06,449
maintained by some<font color="#CCCCCC"> novel author</font><font color="#E5E5E5"> and then</font>

425
00:16:04,980 --> 00:16:08,520
he has<font color="#CCCCCC"> to basically</font><font color="#E5E5E5"> publish that as well</font>

426
00:16:06,450 --> 00:16:09,840
and<font color="#E5E5E5"> that basically ensures that there's</font>

427
00:16:08,520 --> 00:16:11,100
not<font color="#CCCCCC"> that much flowing around so</font>

428
00:16:09,840 --> 00:16:13,850
basically this is<font color="#CCCCCC"> called maintenance</font>

429
00:16:11,100 --> 00:16:17,130
<font color="#E5E5E5">aspect that you have on the side</font><font color="#CCCCCC"> of a</font>

430
00:16:13,850 --> 00:16:19,170
normal malware developer<font color="#E5E5E5"> basically</font>

431
00:16:17,130 --> 00:16:21,660
<font color="#CCCCCC">effects them as well so</font><font color="#E5E5E5"> they probably</font>

432
00:16:19,170 --> 00:16:24,300
have to have some distribution<font color="#E5E5E5"> channels</font>

433
00:16:21,660 --> 00:16:26,280
and<font color="#E5E5E5"> are not as fast as pushing</font><font color="#CCCCCC"> versions</font>

434
00:16:24,300 --> 00:16:29,040
or it is not if<font color="#E5E5E5"> you look at</font><font color="#CCCCCC"> trust all of</font>

435
00:16:26,280 --> 00:16:32,970
the<font color="#CCCCCC"> MLB landscape yeah</font><font color="#E5E5E5"> cross-platform</font>

436
00:16:29,040 --> 00:16:34,589
<font color="#E5E5E5">yes 2017 so let's be real</font><font color="#CCCCCC"> we had some</font>

437
00:16:32,970 --> 00:16:36,330
major incidents over<font color="#E5E5E5"> the last year that</font>

438
00:16:34,590 --> 00:16:40,230
<font color="#E5E5E5">basically affected monitor system so</font>

439
00:16:36,330 --> 00:16:42,030
just<font color="#CCCCCC"> do it</font><font color="#E5E5E5"> that way so be it</font><font color="#CCCCCC"> Mirai Lukas</font>

440
00:16:40,230 --> 00:16:44,220
is<font color="#E5E5E5"> basically twittering a lot about</font>

441
00:16:42,030 --> 00:16:46,290
recent<font color="#E5E5E5"> mother on Android and stuff like</font>

442
00:16:44,220 --> 00:16:46,880
that<font color="#E5E5E5"> so</font><font color="#CCCCCC"> just incorporate all of that as</font>

443
00:16:46,290 --> 00:16:50,699
<font color="#E5E5E5">well</font>

444
00:16:46,880 --> 00:16:52,470
for<font color="#E5E5E5"> unpacked samples um there's</font>

445
00:16:50,700 --> 00:16:54,150
<font color="#E5E5E5">basically essentially if you want to do</font>

446
00:16:52,470 --> 00:16:55,920
effective static analysis because you

447
00:16:54,150 --> 00:16:57,720
don't want to worry about<font color="#CCCCCC"> Packers you</font>

448
00:16:55,920 --> 00:16:59,130
just directly want to be sure<font color="#E5E5E5"> that</font>

449
00:16:57,720 --> 00:17:02,580
you're working<font color="#E5E5E5"> on the actual maverick</font>

450
00:16:59,130 --> 00:17:05,760
code<font color="#E5E5E5"> and yet</font><font color="#CCCCCC"> discuss discussable if you</font>

451
00:17:02,580 --> 00:17:07,500
want to do dumping or unpacking<font color="#CCCCCC"> and my</font>

452
00:17:05,760 --> 00:17:09,810
<font color="#CCCCCC">opinion the dumping is actually a better</font>

453
00:17:07,500 --> 00:17:12,449
way<font color="#E5E5E5"> to approach</font><font color="#CCCCCC"> this because normally</font>

454
00:17:09,810 --> 00:17:14,129
<font color="#CCCCCC">some of the intermediates parts that may</font>

455
00:17:12,449 --> 00:17:16,350
be acquired during<font color="#E5E5E5"> the unpacking</font><font color="#CCCCCC"> process</font>

456
00:17:14,130 --> 00:17:19,140
<font color="#CCCCCC">of the Packer itself are</font><font color="#E5E5E5"> not really</font><font color="#CCCCCC"> of</font>

457
00:17:16,349 --> 00:17:22,139
interest<font color="#CCCCCC"> unless you are</font><font color="#E5E5E5"> doing analysis</font>

458
00:17:19,140 --> 00:17:25,050
of<font color="#E5E5E5"> Packers and dumps usually also</font>

459
00:17:22,140 --> 00:17:27,060
<font color="#E5E5E5">contain some more runtime data and this</font>

460
00:17:25,050 --> 00:17:29,669
can be decrypted strings at times<font color="#CCCCCC"> you</font>

461
00:17:27,060 --> 00:17:31,950
<font color="#CCCCCC">may may</font><font color="#E5E5E5"> have some dynamic API usage so</font>

462
00:17:29,670 --> 00:17:34,440
basically you have saw more API coverage

463
00:17:31,950 --> 00:17:37,160
then you would have<font color="#E5E5E5"> any</font><font color="#CCCCCC"> cleany</font><font color="#E5E5E5"> disk</font>

464
00:17:34,440 --> 00:17:39,150
unpacked<font color="#E5E5E5"> sample and do not have to</font><font color="#CCCCCC"> vary</font>

465
00:17:37,160 --> 00:17:41,430
finding the routine<font color="#E5E5E5"> that's basically</font>

466
00:17:39,150 --> 00:17:45,029
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> DD</font><font color="#E5E5E5"> api imports and stuff like that</font>

467
00:17:41,430 --> 00:17:46,590
<font color="#E5E5E5">and there's also way easier to autumn</font>

468
00:17:45,029 --> 00:17:48,630
because like I<font color="#CCCCCC"> said</font><font color="#E5E5E5"> you can normally</font>

469
00:17:46,590 --> 00:17:49,668
<font color="#CCCCCC">just run it at a certain point decide</font>

470
00:17:48,630 --> 00:17:52,890
that you want to<font color="#E5E5E5"> take it down now</font>

471
00:17:49,669 --> 00:17:54,899
<font color="#E5E5E5">furthermore I think dumps also can serve</font>

472
00:17:52,890 --> 00:17:56,399
as some<font color="#E5E5E5"> kind of normalization</font><font color="#CCCCCC"> because</font>

473
00:17:54,899 --> 00:17:59,520
there's certain other families<font color="#CCCCCC"> that only</font>

474
00:17:56,399 --> 00:18:01,739
<font color="#E5E5E5">exist as share code so having them honor</font>

475
00:17:59,520 --> 00:18:03,960
this<font color="#E5E5E5"> basically would mean that you have</font>

476
00:18:01,740 --> 00:18:05,820
<font color="#E5E5E5">to find that exact point where</font><font color="#CCCCCC"> desert</font>

477
00:18:03,960 --> 00:18:07,860
<font color="#CCCCCC">share code is staged by some loader into</font>

478
00:18:05,820 --> 00:18:09,750
memory or whatever<font color="#E5E5E5"> but if you say</font><font color="#CCCCCC"> okay</font>

479
00:18:07,860 --> 00:18:11,100
I'm really<font color="#E5E5E5"> just interested in dumping it</font>

480
00:18:09,750 --> 00:18:12,870
<font color="#E5E5E5">then basically I have the same</font>

481
00:18:11,100 --> 00:18:14,580
representation which is<font color="#CCCCCC"> memory mapped</font>

482
00:18:12,870 --> 00:18:16,469
and initialized for the<font color="#E5E5E5"> share code</font><font color="#CCCCCC"> and</font>

483
00:18:14,580 --> 00:18:19,710
for every<font color="#E5E5E5"> other program basically as</font>

484
00:18:16,470 --> 00:18:23,190
well yeah<font color="#E5E5E5"> accurate neighbors and</font>

485
00:18:19,710 --> 00:18:25,350
metadata<font color="#E5E5E5"> so basically this</font><font color="#CCCCCC"> whole project</font>

486
00:18:23,190 --> 00:18:28,919
<font color="#E5E5E5">is somewhat centered around family</font>

487
00:18:25,350 --> 00:18:30,600
identification so<font color="#E5E5E5"> that means we first</font>

488
00:18:28,919 --> 00:18:33,750
need to<font color="#E5E5E5"> find some accurate labels for</font>

489
00:18:30,600 --> 00:18:35,580
<font color="#E5E5E5">the families in the first place</font><font color="#CCCCCC"> but also</font>

490
00:18:33,750 --> 00:18:37,470
<font color="#E5E5E5">there</font><font color="#CCCCCC"> should be for example</font><font color="#E5E5E5"> plugins</font>

491
00:18:35,580 --> 00:18:39,240
<font color="#E5E5E5">checked if we are</font><font color="#CCCCCC"> able to find those</font>

492
00:18:37,470 --> 00:18:41,669
plugins<font color="#CCCCCC"> so say</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> you have a</font>

493
00:18:39,240 --> 00:18:43,409
banking malware which is different

494
00:18:41,669 --> 00:18:45,600
information<font color="#E5E5E5"> stealer plugins and</font><font color="#CCCCCC"> we're</font>

495
00:18:43,409 --> 00:18:46,640
<font color="#E5E5E5">also interested</font><font color="#CCCCCC"> in to archiving those as</font>

496
00:18:45,600 --> 00:18:49,949
well

497
00:18:46,640 --> 00:18:51,929
documentation<font color="#CCCCCC"> yeah like I said so</font>

498
00:18:49,950 --> 00:18:54,390
looking at<font color="#E5E5E5"> Christians proven practices</font>

499
00:18:51,929 --> 00:18:56,580
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> explaining how we got to the</font>

500
00:18:54,390 --> 00:18:58,380
dumps<font color="#E5E5E5"> is something of importance</font><font color="#CCCCCC"> or</font>

501
00:18:56,580 --> 00:19:01,320
<font color="#CCCCCC">basically where we are</font><font color="#E5E5E5"> getting the</font>

502
00:18:58,380 --> 00:19:03,029
samples from so that<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> allows to</font>

503
00:19:01,320 --> 00:19:04,649
<font color="#E5E5E5">ensure that we have accountability and</font>

504
00:19:03,029 --> 00:19:07,049
repository bility so when we<font color="#E5E5E5"> are doing</font>

505
00:19:04,649 --> 00:19:08,070
<font color="#CCCCCC">experiments you can do them as well and</font>

506
00:19:07,049 --> 00:19:09,570
hopefully<font color="#E5E5E5"> we end up with the same</font>

507
00:19:08,070 --> 00:19:12,000
<font color="#E5E5E5">results</font>

508
00:19:09,570 --> 00:19:14,460
tracking the origin of samples<font color="#E5E5E5"> normally</font>

509
00:19:12,000 --> 00:19:18,690
means since I get most<font color="#E5E5E5"> of the samples</font>

510
00:19:14,460 --> 00:19:20,940
<font color="#E5E5E5">from publications of</font><font color="#CCCCCC"> AV companies thread</font>

511
00:19:18,690 --> 00:19:22,980
into companies and<font color="#CCCCCC"> they like I probably</font>

512
00:19:20,940 --> 00:19:24,360
<font color="#E5E5E5">try to include a</font><font color="#CCCCCC"> reference where</font>

513
00:19:22,980 --> 00:19:27,000
basically<font color="#E5E5E5"> got aware of the hash in the</font>

514
00:19:24,360 --> 00:19:29,309
first place and explaining<font color="#E5E5E5"> the dumping</font>

515
00:19:27,000 --> 00:19:32,279
<font color="#E5E5E5">method and environment stuff we we get</font>

516
00:19:29,309 --> 00:19:34,139
<font color="#E5E5E5">into debt</font><font color="#CCCCCC"> in a couple</font><font color="#E5E5E5"> of minutes yeah</font>

517
00:19:32,279 --> 00:19:37,529
<font color="#CCCCCC">controlled creation</font><font color="#E5E5E5"> and dissemination so</font>

518
00:19:34,140 --> 00:19:39,840
the last point here<font color="#E5E5E5"> like I said</font><font color="#CCCCCC"> we want</font>

519
00:19:37,529 --> 00:19:42,570
<font color="#CCCCCC">to ensure that the structure of</font><font color="#E5E5E5"> the</font>

520
00:19:39,840 --> 00:19:44,070
whole repository<font color="#E5E5E5"> stays intact</font><font color="#CCCCCC"> even over</font>

521
00:19:42,570 --> 00:19:45,809
the<font color="#E5E5E5"> course of time with having more</font>

522
00:19:44,070 --> 00:19:48,720
users and<font color="#E5E5E5"> having them contribute to the</font>

523
00:19:45,809 --> 00:19:51,090
data and<font color="#E5E5E5"> limiting access is basically</font>

524
00:19:48,720 --> 00:19:53,220
needed to<font color="#E5E5E5"> avoid harm to the general</font>

525
00:19:51,090 --> 00:19:55,379
<font color="#CCCCCC">public because</font><font color="#E5E5E5"> if you just download the</font>

526
00:19:53,220 --> 00:19:57,270
<font color="#E5E5E5">stuff</font><font color="#CCCCCC"> let it run</font><font color="#E5E5E5"> that's probably not a</font>

527
00:19:55,380 --> 00:19:59,130
<font color="#CCCCCC">good idea</font><font color="#E5E5E5"> or you might have some</font><font color="#CCCCCC"> use</font>

528
00:19:57,270 --> 00:20:00,810
that are not<font color="#E5E5E5"> really</font><font color="#CCCCCC"> into familiar</font><font color="#E5E5E5"> with</font>

529
00:19:59,130 --> 00:20:02,850
how you treat malware<font color="#E5E5E5"> and they might</font>

530
00:20:00,810 --> 00:20:04,020
<font color="#CCCCCC">just download in a double-click</font><font color="#E5E5E5"> it and I</font>

531
00:20:02,850 --> 00:20:05,689
don't<font color="#E5E5E5"> want to be blamed for that kind of</font>

532
00:20:04,020 --> 00:20:08,970
stuff<font color="#CCCCCC"> okay</font>

533
00:20:05,690 --> 00:20:11,790
so how are<font color="#E5E5E5"> we going to put this now into</font>

534
00:20:08,970 --> 00:20:13,560
practice<font color="#CCCCCC"> I will first explain some of</font>

535
00:20:11,790 --> 00:20:15,690
the terminology so basically what I mean

536
00:20:13,560 --> 00:20:17,520
<font color="#E5E5E5">if I call something a family or</font>

537
00:20:15,690 --> 00:20:19,740
<font color="#E5E5E5">something is unpacked and stuff like</font>

538
00:20:17,520 --> 00:20:21,330
that<font color="#E5E5E5"> then I explain the collection</font>

539
00:20:19,740 --> 00:20:23,880
approach again in some<font color="#E5E5E5"> more detail and</font>

540
00:20:21,330 --> 00:20:26,820
<font color="#E5E5E5">are we produced or stamps and finally</font>

541
00:20:23,880 --> 00:20:28,860
how the course is organized<font color="#CCCCCC"> so</font><font color="#E5E5E5"> if you're</font>

542
00:20:26,820 --> 00:20:31,770
later on working with<font color="#E5E5E5"> it so that's</font>

543
00:20:28,860 --> 00:20:34,110
<font color="#CCCCCC">probably of interest to you and also</font><font color="#E5E5E5"> how</font>

544
00:20:31,770 --> 00:20:39,810
much data<font color="#E5E5E5"> we already have in there right</font>

545
00:20:34,110 --> 00:20:42,510
<font color="#E5E5E5">now so what's another family it's from a</font>

546
00:20:39,810 --> 00:20:44,909
modern standpoint<font color="#CCCCCC"> I guess it's not</font>

547
00:20:42,510 --> 00:20:46,800
really<font color="#E5E5E5"> cleanly defined what a malware</font>

548
00:20:44,910 --> 00:20:50,760
family is and everyone<font color="#E5E5E5"> probably has</font>

549
00:20:46,800 --> 00:20:53,010
their slight different fuzzy<font color="#CCCCCC"> definition</font>

550
00:20:50,760 --> 00:20:55,080
of it so I'm just<font color="#CCCCCC"> going to try and give</font>

551
00:20:53,010 --> 00:20:57,629
you<font color="#E5E5E5"> my current definition where the meta</font>

552
00:20:55,080 --> 00:20:59,250
family is so basically all samples that

553
00:20:57,630 --> 00:21:01,500
you can<font color="#E5E5E5"> find that belong</font><font color="#CCCCCC"> to the same</font>

554
00:20:59,250 --> 00:21:04,530
<font color="#CCCCCC">project</font><font color="#E5E5E5"> from a developer's point of view</font>

555
00:21:01,500 --> 00:21:06,690
so basically<font color="#CCCCCC"> the way we are tracking</font>

556
00:21:04,530 --> 00:21:10,110
families means that someone normally has

557
00:21:06,690 --> 00:21:11,910
<font color="#E5E5E5">the responsibility</font><font color="#CCCCCC"> has created the code</font>

558
00:21:10,110 --> 00:21:14,030
is maintaining the<font color="#E5E5E5"> code and that's</font>

559
00:21:11,910 --> 00:21:16,430
basically what defines a<font color="#CCCCCC"> family for</font><font color="#E5E5E5"> me</font>

560
00:21:14,030 --> 00:21:20,670
what<font color="#E5E5E5"> this allows you is that you can</font>

561
00:21:16,430 --> 00:21:23,160
<font color="#E5E5E5">basically also group those components to</font>

562
00:21:20,670 --> 00:21:25,140
this family<font color="#CCCCCC"> that only</font><font color="#E5E5E5"> work in context of</font>

563
00:21:23,160 --> 00:21:27,750
<font color="#E5E5E5">the family so be it some customized</font>

564
00:21:25,140 --> 00:21:29,250
<font color="#E5E5E5">loader some plugins that are interacting</font>

565
00:21:27,750 --> 00:21:31,770
<font color="#CCCCCC">with the the main module of the family</font>

566
00:21:29,250 --> 00:21:33,240
and stuff like that but it also allows

567
00:21:31,770 --> 00:21:35,580
you to<font color="#E5E5E5"> basically deal with</font><font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> like</font>

568
00:21:33,240 --> 00:21:37,080
<font color="#E5E5E5">source code leaks so look at Zeus I'm</font>

569
00:21:35,580 --> 00:21:38,730
not going to call<font color="#E5E5E5"> everything</font>

570
00:21:37,080 --> 00:21:41,280
Zeus that's<font color="#E5E5E5"> basically derived from Zeus</font>

571
00:21:38,730 --> 00:21:43,590
<font color="#E5E5E5">so we can split off stuff like Citadel</font>

572
00:21:41,280 --> 00:21:47,340
<font color="#CCCCCC">isin</font><font color="#E5E5E5"> and came over</font><font color="#CCCCCC"> Peter peer-led later</font>

573
00:21:43,590 --> 00:21:48,870
stuff in the same way you can also look

574
00:21:47,340 --> 00:21:51,120
at<font color="#E5E5E5"> the same project that has been a</font>

575
00:21:48,870 --> 00:21:54,419
rewrite<font color="#E5E5E5"> so there's a couple</font><font color="#CCCCCC"> of families</font>

576
00:21:51,120 --> 00:21:57,060
in there like three<font color="#E5E5E5"> or four I guess that</font>

577
00:21:54,420 --> 00:21:59,010
basically<font color="#CCCCCC"> are the very same</font><font color="#E5E5E5"> malware but</font>

578
00:21:57,060 --> 00:22:00,870
rewritten in another language<font color="#CCCCCC"> so you</font>

579
00:21:59,010 --> 00:22:02,910
would<font color="#E5E5E5"> have someone start off with</font><font color="#CCCCCC"> Delfy</font>

580
00:22:00,870 --> 00:22:05,040
and suddenly he thinks<font color="#E5E5E5"> it's cooler so he</font>

581
00:22:02,910 --> 00:22:08,550
rewrites<font color="#E5E5E5"> this bar in the same way just</font>

582
00:22:05,040 --> 00:22:09,629
in in<font color="#CCCCCC"> C for example</font><font color="#E5E5E5"> what's an unpacked</font>

583
00:22:08,550 --> 00:22:12,330
sample

584
00:22:09,630 --> 00:22:15,150
so for me that's a<font color="#E5E5E5"> direct representative</font>

585
00:22:12,330 --> 00:22:18,000
of the family so there's no longer<font color="#E5E5E5"> other</font>

586
00:22:15,150 --> 00:22:20,100
<font color="#E5E5E5">third party code involved that's usually</font>

587
00:22:18,000 --> 00:22:22,950
<font color="#E5E5E5">used to protect or obfuscate</font><font color="#CCCCCC"> or whatever</font>

588
00:22:20,100 --> 00:22:26,399
you want it so I'm<font color="#E5E5E5"> third party in</font><font color="#CCCCCC"> that</font>

589
00:22:22,950 --> 00:22:27,990
sense basically<font color="#E5E5E5"> I have another family or</font>

590
00:22:26,400 --> 00:22:29,429
maybe<font color="#E5E5E5"> a sample that I've created with</font>

591
00:22:27,990 --> 00:22:32,370
the<font color="#E5E5E5"> Builder and then apply the</font><font color="#CCCCCC"> Packer to</font>

592
00:22:29,429 --> 00:22:34,230
<font color="#E5E5E5">it</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> amp example would be basically</font>

593
00:22:32,370 --> 00:22:37,110
<font color="#E5E5E5">again the sample without the background</font>

594
00:22:34,230 --> 00:22:39,360
stuff<font color="#E5E5E5"> however this does</font><font color="#CCCCCC"> not include for</font>

595
00:22:37,110 --> 00:22:41,100
example<font color="#CCCCCC"> addressing deification so if the</font>

596
00:22:39,360 --> 00:22:43,918
obfuscation is part of the mother family

597
00:22:41,100 --> 00:22:45,809
itself<font color="#CCCCCC"> unpacking</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> me does not</font><font color="#E5E5E5"> mean</font>

598
00:22:43,919 --> 00:22:47,400
<font color="#CCCCCC">that I have</font><font color="#E5E5E5"> to remove this office</font><font color="#CCCCCC"> Keshan</font>

599
00:22:45,809 --> 00:22:50,309
because it's basically a feature of<font color="#E5E5E5"> the</font>

600
00:22:47,400 --> 00:22:54,200
family<font color="#E5E5E5"> and for</font><font color="#CCCCCC"> example can can help</font><font color="#E5E5E5"> to</font>

601
00:22:50,309 --> 00:22:57,389
<font color="#CCCCCC">identify it and from a classic sense</font>

602
00:22:54,200 --> 00:22:59,220
because<font color="#E5E5E5"> that's just basically how I when</font>

603
00:22:57,390 --> 00:23:00,659
I got into<font color="#CCCCCC"> it but what we meant</font><font color="#E5E5E5"> when</font>

604
00:22:59,220 --> 00:23:02,220
we're talking<font color="#E5E5E5"> about unpack now where it</font>

605
00:23:00,659 --> 00:23:05,280
would<font color="#E5E5E5"> be something</font><font color="#CCCCCC"> that you are able to</font>

606
00:23:02,220 --> 00:23:07,830
run<font color="#E5E5E5"> from disk again so basically the</font>

607
00:23:05,280 --> 00:23:09,570
probably unmapped<font color="#E5E5E5"> version that's on this</font>

608
00:23:07,830 --> 00:23:12,600
<font color="#E5E5E5">you double-click it</font><font color="#CCCCCC"> and NMFS running</font>

609
00:23:09,570 --> 00:23:14,668
<font color="#E5E5E5">directly opposed to that</font><font color="#CCCCCC"> what's</font><font color="#E5E5E5"> dump</font>

610
00:23:12,600 --> 00:23:17,428
sample well with the memory capture of

611
00:23:14,669 --> 00:23:19,350
the malware<font color="#E5E5E5"> and normally will</font><font color="#CCCCCC"> then</font>

612
00:23:17,429 --> 00:23:21,210
include<font color="#E5E5E5"> some initialized data and that's</font>

613
00:23:19,350 --> 00:23:23,399
an issue if you want to go back to the

614
00:23:21,210 --> 00:23:25,650
the unpacked<font color="#E5E5E5"> runnable sampler from from</font>

615
00:23:23,400 --> 00:23:27,900
a dump sample you normally or sometimes

616
00:23:25,650 --> 00:23:31,140
after<font color="#CCCCCC"> the point at this</font><font color="#E5E5E5"> initial data</font>

617
00:23:27,900 --> 00:23:32,429
initialized<font color="#CCCCCC"> data basically</font><font color="#E5E5E5"> will</font>

618
00:23:31,140 --> 00:23:35,789
interfere with<font color="#E5E5E5"> you in the sample will</font>

619
00:23:32,429 --> 00:23:38,340
just crash but dumping can also<font color="#E5E5E5"> include</font>

620
00:23:35,789 --> 00:23:40,799
that<font color="#E5E5E5"> you look at some oxidative modules</font>

621
00:23:38,340 --> 00:23:44,010
that<font color="#E5E5E5"> amalgam I have or some of the other</font>

622
00:23:40,799 --> 00:23:46,049
memory that it has allocated<font color="#E5E5E5"> weights for</font>

623
00:23:44,010 --> 00:23:47,970
example storing some of its imports<font color="#E5E5E5"> or</font>

624
00:23:46,049 --> 00:23:50,900
some additional<font color="#CCCCCC"> codes that it is jumping</font>

625
00:23:47,970 --> 00:23:54,960
<font color="#CCCCCC">to and that you also</font><font color="#E5E5E5"> track that as well</font>

626
00:23:50,900 --> 00:23:58,740
so<font color="#E5E5E5"> once</font><font color="#CCCCCC"> more tests this quality over</font>

627
00:23:54,960 --> 00:24:01,020
quantity thing<font color="#CCCCCC"> the philosophy that I've</font>

628
00:23:58,740 --> 00:24:03,570
<font color="#E5E5E5">been pursuing as I rather want to extend</font>

629
00:24:01,020 --> 00:24:06,570
the coverage<font color="#E5E5E5"> as many families right now</font>

630
00:24:03,570 --> 00:24:10,530
<font color="#E5E5E5">as possible then going deep into a</font>

631
00:24:06,570 --> 00:24:12,570
single<font color="#CCCCCC"> family so I could</font><font color="#E5E5E5"> basically say I</font>

632
00:24:10,530 --> 00:24:14,190
want<font color="#E5E5E5"> to have the best coverage of</font><font color="#CCCCCC"> dried</font>

633
00:24:12,570 --> 00:24:16,830
<font color="#CCCCCC">eggs and trick bottom what but it would</font>

634
00:24:14,190 --> 00:24:20,010
<font color="#CCCCCC">probably take a lot of my time that I</font>

635
00:24:16,830 --> 00:24:21,960
<font color="#E5E5E5">can allocate to things and right now</font>

636
00:24:20,010 --> 00:24:23,700
<font color="#E5E5E5">still the ideas to</font><font color="#CCCCCC"> get a good coverage</font>

637
00:24:21,960 --> 00:24:25,950
<font color="#E5E5E5">in in the white sense</font>

638
00:24:23,700 --> 00:24:28,110
so that's basically<font color="#CCCCCC"> this dis quality</font>

639
00:24:25,950 --> 00:24:31,590
thing that you can use it to identify as

640
00:24:28,110 --> 00:24:34,340
<font color="#CCCCCC">many different families as possible just</font>

641
00:24:31,590 --> 00:24:36,870
a stronger<font color="#E5E5E5"> emphasis on</font><font color="#CCCCCC"> verification then</font>

642
00:24:34,340 --> 00:24:39,510
by now I've<font color="#CCCCCC"> been doing a</font><font color="#E5E5E5"> lot of manual</font>

643
00:24:36,870 --> 00:24:42,120
<font color="#CCCCCC">work to ensure the</font><font color="#E5E5E5"> basically this is a</font>

644
00:24:39,510 --> 00:24:45,330
very<font color="#CCCCCC"> clean corpus</font><font color="#E5E5E5"> so that's also a</font><font color="#CCCCCC"> way</font>

645
00:24:42,120 --> 00:24:48,389
<font color="#E5E5E5">to push quality but a lot of effort let</font>

646
00:24:45,330 --> 00:24:50,639
me tell you that<font color="#E5E5E5"> it can also mean that</font>

647
00:24:48,390 --> 00:24:53,790
<font color="#E5E5E5">we prioritize on families</font><font color="#CCCCCC"> that are more</font>

648
00:24:50,640 --> 00:24:55,710
active<font color="#CCCCCC"> or</font><font color="#E5E5E5"> more impactful</font><font color="#CCCCCC"> normally I'm</font>

649
00:24:53,790 --> 00:24:57,720
somewhat following my filter bubble and

650
00:24:55,710 --> 00:25:00,690
look at the blog<font color="#CCCCCC"> posted I would normally</font>

651
00:24:57,720 --> 00:25:03,000
encounter and probably prefer<font color="#E5E5E5"> those as</font>

652
00:25:00,690 --> 00:25:05,820
well<font color="#CCCCCC"> so by having</font><font color="#E5E5E5"> more contributors</font>

653
00:25:03,000 --> 00:25:10,130
probably this basically will<font color="#CCCCCC"> have the</font>

654
00:25:05,820 --> 00:25:14,760
<font color="#E5E5E5">impact of widening</font><font color="#CCCCCC"> what we consider as</font>

655
00:25:10,130 --> 00:25:16,560
something should be<font color="#E5E5E5"> prioritized in the</font>

656
00:25:14,760 --> 00:25:18,810
long run it<font color="#E5E5E5"> is a really good</font><font color="#CCCCCC"> idea to</font>

657
00:25:16,560 --> 00:25:20,610
<font color="#E5E5E5">write some means of quality assurance</font><font color="#CCCCCC"> so</font>

658
00:25:18,810 --> 00:25:22,440
say you<font color="#E5E5E5"> have a</font><font color="#CCCCCC"> Yara rule for every of</font>

659
00:25:20,610 --> 00:25:24,600
the families you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> also ensure that</font>

660
00:25:22,440 --> 00:25:26,850
<font color="#E5E5E5">your yards do not have false</font><font color="#CCCCCC"> positives</font>

661
00:25:24,600 --> 00:25:28,669
on other families and in the same way

662
00:25:26,850 --> 00:25:30,959
that they<font color="#E5E5E5"> are still recently enough to</font>

663
00:25:28,670 --> 00:25:33,630
find new versions whenever you add them

664
00:25:30,960 --> 00:25:34,710
to<font color="#E5E5E5"> the corpus</font><font color="#CCCCCC"> and we've got</font><font color="#E5E5E5"> two data</font>

665
00:25:33,630 --> 00:25:37,650
origins

666
00:25:34,710 --> 00:25:40,680
I prefer public sources<font color="#CCCCCC"> where</font><font color="#E5E5E5"> possible</font>

667
00:25:37,650 --> 00:25:42,510
<font color="#E5E5E5">and basically everything that similar</font>

668
00:25:40,680 --> 00:25:46,320
<font color="#CCCCCC">PDS also found a virustotal so it's like</font>

669
00:25:42,510 --> 00:25:47,910
<font color="#E5E5E5">97%</font><font color="#CCCCCC"> so I really want to</font><font color="#E5E5E5"> have stuff</font><font color="#CCCCCC"> that</font>

670
00:25:46,320 --> 00:25:53,040
can<font color="#E5E5E5"> be obtained in another fashion as</font>

671
00:25:47,910 --> 00:25:55,260
well<font color="#CCCCCC"> okay I said we do multi-platform</font>

672
00:25:53,040 --> 00:25:57,960
stuff because it makes sense to track

673
00:25:55,260 --> 00:25:59,430
that<font color="#E5E5E5"> as as we are</font><font color="#CCCCCC"> progressing but I'm</font>

674
00:25:57,960 --> 00:26:01,080
still having a strong focus on<font color="#E5E5E5"> Windows</font>

675
00:25:59,430 --> 00:26:02,910
<font color="#E5E5E5">malware because</font><font color="#CCCCCC"> there's at least where</font>

676
00:26:01,080 --> 00:26:05,010
the most families are<font color="#CCCCCC"> still documented</font>

677
00:26:02,910 --> 00:26:07,560
where we have the most history so that's

678
00:26:05,010 --> 00:26:10,470
basically what I've<font color="#E5E5E5"> been</font><font color="#CCCCCC"> focusing on</font>

679
00:26:07,560 --> 00:26:12,659
<font color="#E5E5E5">with the</font><font color="#CCCCCC"> doms the method</font><font color="#E5E5E5"> that I employ</font>

680
00:26:10,470 --> 00:26:14,940
there is basically to have very fixed VM

681
00:26:12,660 --> 00:26:18,870
<font color="#CCCCCC">states that I used to derive the doms</font>

682
00:26:14,940 --> 00:26:20,580
<font color="#E5E5E5">from</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> what's the benefit of that</font><font color="#CCCCCC"> well</font>

683
00:26:18,870 --> 00:26:22,709
I have<font color="#CCCCCC"> very known and fixed system</font>

684
00:26:20,580 --> 00:26:26,070
parameters to<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so for example even if</font>

685
00:26:22,710 --> 00:26:28,500
<font color="#CCCCCC">it's using a SLR most of the static</font>

686
00:26:26,070 --> 00:26:30,600
windows<font color="#CCCCCC"> API</font><font color="#E5E5E5"> function offsets will remain</font>

687
00:26:28,500 --> 00:26:31,950
the<font color="#CCCCCC"> same in all of the</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> memory</font>

688
00:26:30,600 --> 00:26:34,560
segments that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> will encounter them</font>

689
00:26:31,950 --> 00:26:35,879
and<font color="#E5E5E5"> this allows you</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> apply some</font>

690
00:26:34,560 --> 00:26:39,059
techniques

691
00:26:35,879 --> 00:26:41,009
<font color="#CCCCCC">to</font><font color="#E5E5E5"> rapidly extract those windows API</font>

692
00:26:39,059 --> 00:26:42,529
functions on arbitrary dumps<font color="#CCCCCC"> as long as</font>

693
00:26:41,009 --> 00:26:45,389
they have to<font color="#E5E5E5"> be produced by this</font>

694
00:26:42,529 --> 00:26:49,109
basically environment<font color="#E5E5E5"> so I'm using</font>

695
00:26:45,389 --> 00:26:51,658
mostly Windows XP and Windows<font color="#E5E5E5"> 7 and no</font>

696
00:26:49,109 --> 00:26:53,968
<font color="#E5E5E5">one's gasping but it's so oh it why are</font>

697
00:26:51,659 --> 00:26:57,179
using like with operating<font color="#CCCCCC"> systems that</font>

698
00:26:53,969 --> 00:26:59,190
<font color="#E5E5E5">are like more than 10</font><font color="#CCCCCC"> years old it's</font>

699
00:26:57,179 --> 00:27:01,079
pretty<font color="#E5E5E5"> easy because it still feels like</font>

700
00:26:59,190 --> 00:27:03,589
most<font color="#CCCCCC"> novice feeling most at home there</font>

701
00:27:01,079 --> 00:27:05,668
because you have fewer<font color="#E5E5E5"> embedded</font>

702
00:27:03,589 --> 00:27:10,369
protection systems<font color="#E5E5E5"> by the operating</font>

703
00:27:05,669 --> 00:27:12,899
system<font color="#CCCCCC"> directly so my goal is</font><font color="#E5E5E5"> basically</font>

704
00:27:10,369 --> 00:27:15,958
maximizing execution success<font color="#E5E5E5"> so I want</font>

705
00:27:12,899 --> 00:27:19,649
to<font color="#E5E5E5"> have the most vulnerable system</font>

706
00:27:15,959 --> 00:27:21,539
<font color="#CCCCCC">darris and that works kind of good</font><font color="#E5E5E5"> as</font>

707
00:27:19,649 --> 00:27:24,178
well<font color="#E5E5E5"> what can you do as well of course</font>

708
00:27:21,539 --> 00:27:25,619
<font color="#E5E5E5">you should install all the runtimes you</font>

709
00:27:24,179 --> 00:27:28,289
want to have all the dotnet runtimes

710
00:27:25,619 --> 00:27:30,418
<font color="#E5E5E5">because you really have to give you</font>

711
00:27:28,289 --> 00:27:32,249
malware a place to feel<font color="#CCCCCC"> home and it has</font>

712
00:27:30,419 --> 00:27:34,019
to<font color="#E5E5E5"> run and has not a crash so I'm really</font>

713
00:27:32,249 --> 00:27:35,639
interested in producing dumps<font color="#E5E5E5"> so I have</font>

714
00:27:34,019 --> 00:27:38,940
to make it for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> memory as easy as</font>

715
00:27:35,639 --> 00:27:41,789
possible to<font color="#E5E5E5"> run</font><font color="#CCCCCC"> you have a</font><font color="#E5E5E5"> three</font><font color="#CCCCCC"> are two</font>

716
00:27:38,940 --> 00:27:44,519
dumping our methodologies is pretty

717
00:27:41,789 --> 00:27:46,019
simple<font color="#CCCCCC"> I guess you</font><font color="#E5E5E5"> just run it wait if</font>

718
00:27:44,519 --> 00:27:47,429
the memory<font color="#E5E5E5"> that has basically</font><font color="#CCCCCC"> changed</font>

719
00:27:46,019 --> 00:27:50,099
during execution and then<font color="#E5E5E5"> filter down to</font>

720
00:27:47,429 --> 00:27:52,379
<font color="#E5E5E5">what you think is</font><font color="#CCCCCC"> the unpacked version</font>

721
00:27:50,099 --> 00:27:53,939
so basically the dump<font color="#E5E5E5"> and then you</font>

722
00:27:52,379 --> 00:27:55,799
potentially repeat it<font color="#E5E5E5"> because you missed</font>

723
00:27:53,940 --> 00:27:59,909
something or there's nothing<font color="#E5E5E5"> to</font>

724
00:27:55,799 --> 00:28:02,209
basically extract<font color="#E5E5E5"> or what frequently</font>

725
00:27:59,909 --> 00:28:05,190
happens you have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> inject manually and</font>

726
00:28:02,209 --> 00:28:07,649
that's quite painful so um<font color="#CCCCCC"> if I</font><font color="#E5E5E5"> had to</font>

727
00:28:05,190 --> 00:28:10,709
guess I guess I've spent more<font color="#CCCCCC"> than</font><font color="#E5E5E5"> 600</font>

728
00:28:07,649 --> 00:28:13,978
hours of<font color="#E5E5E5"> doing this</font><font color="#CCCCCC"> unpacking and</font>

729
00:28:10,709 --> 00:28:17,099
dumping already so on the other hand I

730
00:28:13,979 --> 00:28:18,959
<font color="#E5E5E5">think that's sadly the only</font><font color="#CCCCCC"> way how to</font>

731
00:28:17,099 --> 00:28:21,178
get dumped for<font color="#E5E5E5"> some of the families</font>

732
00:28:18,959 --> 00:28:22,739
<font color="#CCCCCC">because what you</font><font color="#E5E5E5"> can observe there's</font>

733
00:28:21,179 --> 00:28:24,449
basically something<font color="#CCCCCC"> it gets</font><font color="#E5E5E5"> mapped is</font>

734
00:28:22,739 --> 00:28:26,999
<font color="#E5E5E5">fingerprinting your environment and will</font>

735
00:28:24,449 --> 00:28:28,739
unwrap itself if it's not happy and

736
00:28:26,999 --> 00:28:31,319
<font color="#E5E5E5">that's totally something that most sand</font>

737
00:28:28,739 --> 00:28:33,329
boxes will not give you or even if they

738
00:28:31,319 --> 00:28:35,609
gave it<font color="#CCCCCC"> to you you</font><font color="#E5E5E5"> might just drown in</font>

739
00:28:33,329 --> 00:28:38,819
the data<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I've quite some experience I</font>

740
00:28:35,609 --> 00:28:40,589
guess with unpacking and stuff<font color="#E5E5E5"> so in</font>

741
00:28:38,819 --> 00:28:43,139
many<font color="#CCCCCC"> cases it</font><font color="#E5E5E5"> was more</font><font color="#CCCCCC"> natural to me to</font>

742
00:28:40,589 --> 00:28:47,849
<font color="#CCCCCC">just look quickly</font><font color="#E5E5E5"> at something and then</font>

743
00:28:43,139 --> 00:28:49,649
try<font color="#E5E5E5"> to cover it up that way in many</font>

744
00:28:47,849 --> 00:28:51,750
cases what<font color="#CCCCCC"> you can dump there</font>

745
00:28:49,650 --> 00:28:53,610
<font color="#E5E5E5">already fine but sometimes like I said</font>

746
00:28:51,750 --> 00:28:55,200
<font color="#CCCCCC">you will have some overlay</font><font color="#E5E5E5"> or for</font>

747
00:28:53,610 --> 00:28:56,550
example<font color="#CCCCCC"> the packet sample and the amp</font>

748
00:28:55,200 --> 00:28:58,380
example in the beginning<font color="#CCCCCC"> of the same</font>

749
00:28:56,550 --> 00:29:00,000
buffer<font color="#E5E5E5"> or something so it makes sense to</font>

750
00:28:58,380 --> 00:29:01,320
basically cut<font color="#CCCCCC"> off the tail</font><font color="#E5E5E5"> and things</font>

751
00:29:00,000 --> 00:29:03,450
like<font color="#CCCCCC"> that in order</font><font color="#E5E5E5"> to to clean up the</font>

752
00:29:01,320 --> 00:29:05,970
malware<font color="#E5E5E5"> because if</font><font color="#CCCCCC"> you're later applying</font>

753
00:29:03,450 --> 00:29:07,470
static analysis methods to it<font color="#CCCCCC"> you really</font>

754
00:29:05,970 --> 00:29:09,150
<font color="#E5E5E5">only want the</font><font color="#CCCCCC"> coat of the extra mega</font>

755
00:29:07,470 --> 00:29:10,160
family and<font color="#E5E5E5"> not the chef that's basically</font>

756
00:29:09,150 --> 00:29:13,650
on<font color="#CCCCCC"> its tail</font>

757
00:29:10,160 --> 00:29:15,360
yeah for identification<font color="#CCCCCC"> um yeah the</font>

758
00:29:13,650 --> 00:29:17,070
better<font color="#E5E5E5"> your coverage is the faster you</font>

759
00:29:15,360 --> 00:29:18,840
can<font color="#E5E5E5"> do it otherwise it's also manual</font>

760
00:29:17,070 --> 00:29:20,850
investigation<font color="#E5E5E5"> has someone basically</font>

761
00:29:18,840 --> 00:29:22,139
<font color="#E5E5E5">blocked somewhere about those strings</font>

762
00:29:20,850 --> 00:29:26,219
<font color="#CCCCCC">that I've just found in this buffer that</font>

763
00:29:22,140 --> 00:29:28,320
I'm<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at so a lot of work</font><font color="#CCCCCC"> so let's</font>

764
00:29:26,220 --> 00:29:30,810
of Michelle if you're interested in how

765
00:29:28,320 --> 00:29:33,270
the data is stored<font color="#E5E5E5"> basically it's it's</font>

766
00:29:30,810 --> 00:29:35,129
more or less<font color="#E5E5E5"> this tree like structure</font><font color="#CCCCCC"> so</font>

767
00:29:33,270 --> 00:29:37,110
on<font color="#E5E5E5"> top level you</font><font color="#CCCCCC"> would have platform dot</font>

768
00:29:35,130 --> 00:29:38,250
family name<font color="#E5E5E5"> and for example</font><font color="#CCCCCC"> let's take</font>

769
00:29:37,110 --> 00:29:40,620
you<font color="#CCCCCC"> also on something that I'm very</font>

770
00:29:38,250 --> 00:29:42,540
familiar<font color="#CCCCCC"> with</font><font color="#E5E5E5"> because I have been</font>

771
00:29:40,620 --> 00:29:44,989
looking<font color="#E5E5E5"> at it for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> couple years</font>

772
00:29:42,540 --> 00:29:47,310
below the family folder<font color="#CCCCCC"> you would have</font>

773
00:29:44,990 --> 00:29:48,900
ideally folders perversion

774
00:29:47,310 --> 00:29:52,050
so that basically<font color="#E5E5E5"> allows you a direct</font>

775
00:29:48,900 --> 00:29:56,640
grouping<font color="#E5E5E5"> in those folders you would have</font>

776
00:29:52,050 --> 00:29:58,649
<font color="#E5E5E5">samples stored as 256 and along them</font><font color="#CCCCCC"> we</font>

777
00:29:56,640 --> 00:30:00,150
would have<font color="#CCCCCC"> the dumps with basically</font><font color="#E5E5E5"> the</font>

778
00:29:58,650 --> 00:30:02,700
base address from where<font color="#E5E5E5"> they have been</font>

779
00:30:00,150 --> 00:30:05,520
dumped<font color="#E5E5E5"> as well as unpacked samples in</font>

780
00:30:02,700 --> 00:30:07,200
some<font color="#E5E5E5"> cases not all cases and that's</font>

781
00:30:05,520 --> 00:30:09,660
basically<font color="#E5E5E5"> the whole repository structure</font>

782
00:30:07,200 --> 00:30:12,150
for<font color="#CCCCCC"> all of the</font><font color="#E5E5E5"> data that's right right</font>

783
00:30:09,660 --> 00:30:13,680
now in there along<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> data we have</font>

784
00:30:12,150 --> 00:30:15,540
a JSON file that<font color="#CCCCCC"> gives you some meta</font>

785
00:30:13,680 --> 00:30:17,760
information<font color="#E5E5E5"> like the block reference</font>

786
00:30:15,540 --> 00:30:20,310
<font color="#E5E5E5">that I've just mentioned the last time</font>

787
00:30:17,760 --> 00:30:22,560
it was<font color="#CCCCCC"> updated</font><font color="#E5E5E5"> aliases for</font><font color="#CCCCCC"> the family</font>

788
00:30:20,310 --> 00:30:25,379
actors that have been observed<font color="#CCCCCC"> using</font><font color="#E5E5E5"> the</font>

789
00:30:22,560 --> 00:30:27,450
family and<font color="#E5E5E5"> all that kind of stuff</font>

790
00:30:25,380 --> 00:30:31,080
for many of<font color="#E5E5E5"> them there's also the</font><font color="#CCCCCC"> Yarra</font>

791
00:30:27,450 --> 00:30:33,420
folder sorted by<font color="#CCCCCC"> DLP with roots in there</font>

792
00:30:31,080 --> 00:30:35,399
so basically<font color="#E5E5E5"> everything beyond TP</font><font color="#CCCCCC"> whites</font>

793
00:30:33,420 --> 00:30:37,980
are<font color="#E5E5E5"> already contributions by users of</font>

794
00:30:35,400 --> 00:30:41,220
<font color="#E5E5E5">the framework</font><font color="#CCCCCC"> and you would have one</font>

795
00:30:37,980 --> 00:30:42,170
<font color="#CCCCCC">yarra file</font><font color="#E5E5E5"> per Yarra rule because it</font>

796
00:30:41,220 --> 00:30:44,600
also<font color="#E5E5E5"> eases</font>

797
00:30:42,170 --> 00:30:47,520
versioning and management of<font color="#E5E5E5"> the stuff</font>

798
00:30:44,600 --> 00:30:50,520
<font color="#E5E5E5">so now the good thing</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> kind of</font>

799
00:30:47,520 --> 00:30:52,770
file system<font color="#CCCCCC"> like structure is this is</font>

800
00:30:50,520 --> 00:30:54,720
<font color="#E5E5E5">basically our git repository format so</font>

801
00:30:52,770 --> 00:30:57,480
if you want to have the data<font color="#E5E5E5"> set it's as</font>

802
00:30:54,720 --> 00:30:59,370
easy<font color="#E5E5E5"> as doing git clone and</font><font color="#CCCCCC"> you have all</font>

803
00:30:57,480 --> 00:31:02,280
of<font color="#E5E5E5"> the data at once and if you want to</font>

804
00:30:59,370 --> 00:31:03,179
do updates<font color="#E5E5E5"> you do a pull request</font><font color="#CCCCCC"> yet you</font>

805
00:31:02,280 --> 00:31:04,830
<font color="#E5E5E5">get pull and then</font>

806
00:31:03,180 --> 00:31:07,140
you have the most recent<font color="#CCCCCC"> version of it</font>

807
00:31:04,830 --> 00:31:09,179
<font color="#E5E5E5">so</font><font color="#CCCCCC"> it was</font><font color="#E5E5E5"> our vision of</font><font color="#CCCCCC"> having it in a</font>

808
00:31:07,140 --> 00:31:10,860
convenient<font color="#CCCCCC"> way</font><font color="#E5E5E5"> so that you can</font><font color="#CCCCCC"> do the</font>

809
00:31:09,180 --> 00:31:17,280
same experiments or whatever you want to

810
00:31:10,860 --> 00:31:18,870
like with<font color="#E5E5E5"> the data set so this commit as</font>

811
00:31:17,280 --> 00:31:20,190
shown<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is basically the</font><font color="#E5E5E5"> route</font>

812
00:31:18,870 --> 00:31:21,719
commit and it's also the commit that

813
00:31:20,190 --> 00:31:24,360
<font color="#E5E5E5">we've been</font><font color="#CCCCCC"> using for our of the analysis</font>

814
00:31:21,720 --> 00:31:27,870
that<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going to show in a few minutes</font>

815
00:31:24,360 --> 00:31:30,929
and this at that<font color="#E5E5E5"> time was based on 17 or</font>

816
00:31:27,870 --> 00:31:33,169
almost 1,800 samples with run<font color="#E5E5E5"> about</font><font color="#CCCCCC"> 600</font>

817
00:31:30,930 --> 00:31:35,400
families<font color="#CCCCCC"> if we look at the</font><font color="#E5E5E5"> distribution</font>

818
00:31:33,170 --> 00:31:37,980
and<font color="#E5E5E5"> of course we notice the majority</font>

819
00:31:35,400 --> 00:31:40,260
that's<font color="#E5E5E5"> also probably the</font><font color="#CCCCCC"> reason why I'm</font>

820
00:31:37,980 --> 00:31:41,070
because I'm feeling most at<font color="#E5E5E5"> home with</font>

821
00:31:40,260 --> 00:31:44,100
Windows malware

822
00:31:41,070 --> 00:31:45,570
<font color="#CCCCCC">I normally try to include Android</font>

823
00:31:44,100 --> 00:31:46,949
whenever I see someone<font color="#E5E5E5"> talking about</font>

824
00:31:45,570 --> 00:31:48,510
Android malware and stuff like that and

825
00:31:46,950 --> 00:31:50,760
and same<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the other families and</font>

826
00:31:48,510 --> 00:31:54,240
<font color="#E5E5E5">everything was basically multi-platform</font>

827
00:31:50,760 --> 00:31:55,890
is written in Java<font color="#E5E5E5"> or some JavaScript</font>

828
00:31:54,240 --> 00:31:57,930
like for example<font color="#E5E5E5"> used by</font><font color="#CCCCCC"> Tola and stuff</font>

829
00:31:55,890 --> 00:32:00,960
like that so<font color="#CCCCCC"> basically Chrome extensions</font>

830
00:31:57,930 --> 00:32:06,120
<font color="#CCCCCC">are not</font><font color="#E5E5E5"> we've</font><font color="#CCCCCC"> got to unpacking and</font>

831
00:32:00,960 --> 00:32:08,670
<font color="#E5E5E5">dumping about 90% of the window stuff is</font>

832
00:32:06,120 --> 00:32:10,469
actually<font color="#E5E5E5"> at least from a family</font>

833
00:32:08,670 --> 00:32:12,240
perspective<font color="#E5E5E5"> dump with at least one dump</font>

834
00:32:10,470 --> 00:32:14,040
<font color="#E5E5E5">so sometimes our families we have</font>

835
00:32:12,240 --> 00:32:16,470
multiple samples but only one dump

836
00:32:14,040 --> 00:32:19,080
because<font color="#E5E5E5"> like I said quality or coverage</font>

837
00:32:16,470 --> 00:32:22,740
first<font color="#E5E5E5"> in that sense I want at</font><font color="#CCCCCC"> least</font><font color="#E5E5E5"> one</font>

838
00:32:19,080 --> 00:32:24,720
representative<font color="#E5E5E5"> for it and Jefferson are</font>

839
00:32:22,740 --> 00:32:27,840
just unpacked so also<font color="#E5E5E5"> gathers probably</font>

840
00:32:24,720 --> 00:32:31,290
75% of the<font color="#E5E5E5"> samples are definitely in</font>

841
00:32:27,840 --> 00:32:34,139
some<font color="#CCCCCC"> unpacked</font><font color="#E5E5E5"> state yeah so those</font><font color="#CCCCCC"> 24</font>

842
00:32:31,290 --> 00:32:36,120
<font color="#E5E5E5">percent are missing right now</font><font color="#CCCCCC"> okay so</font>

843
00:32:34,140 --> 00:32:38,070
how do we make this<font color="#E5E5E5"> stuff accessible</font><font color="#CCCCCC"> I</font>

844
00:32:36,120 --> 00:32:39,770
already ate<font color="#E5E5E5"> said to you</font><font color="#CCCCCC"> that this</font><font color="#E5E5E5"> just</font>

845
00:32:38,070 --> 00:32:43,439
get repository<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can check out</font>

846
00:32:39,770 --> 00:32:46,050
<font color="#CCCCCC">but just</font><font color="#E5E5E5"> also website because the title</font>

847
00:32:43,440 --> 00:32:48,090
was basically a collaborative<font color="#E5E5E5"> approach</font>

848
00:32:46,050 --> 00:32:49,740
to<font color="#E5E5E5"> it so first let me start with the</font>

849
00:32:48,090 --> 00:32:51,449
<font color="#CCCCCC">mission statement what I want to</font>

850
00:32:49,740 --> 00:32:53,670
basically<font color="#E5E5E5"> achieve with this</font><font color="#CCCCCC"> map edia</font>

851
00:32:51,450 --> 00:32:55,170
thing and then explain some of the<font color="#E5E5E5"> the</font>

852
00:32:53,670 --> 00:32:58,170
trust mechanisms that we have

853
00:32:55,170 --> 00:33:00,360
implemented in order<font color="#E5E5E5"> to ensure basically</font>

854
00:32:58,170 --> 00:33:03,330
access limitation and<font color="#E5E5E5"> also contribution</font>

855
00:33:00,360 --> 00:33:05,939
quality defects of it that's listed

856
00:33:03,330 --> 00:33:07,919
there<font color="#E5E5E5"> is already accessible so if I'm</font>

857
00:33:05,940 --> 00:33:10,140
<font color="#E5E5E5">just going</font><font color="#CCCCCC"> to fast you</font><font color="#E5E5E5"> can also I think</font>

858
00:33:07,920 --> 00:33:12,360
just<font color="#CCCCCC"> go to on</font><font color="#E5E5E5"> Google and</font><font color="#CCCCCC"> or research</font>

859
00:33:10,140 --> 00:33:15,960
from a PDF it should show up<font color="#E5E5E5"> in the top</font>

860
00:33:12,360 --> 00:33:16,949
<font color="#E5E5E5">five</font><font color="#CCCCCC"> I guess so the the primary</font><font color="#E5E5E5"> goal as</font>

861
00:33:15,960 --> 00:33:19,170
I said for this

862
00:33:16,950 --> 00:33:21,450
project as a<font color="#E5E5E5"> whole is basically to</font>

863
00:33:19,170 --> 00:33:24,210
<font color="#E5E5E5">provide a community</font><font color="#CCCCCC"> driven independent</font>

864
00:33:21,450 --> 00:33:26,130
resource for this<font color="#E5E5E5"> whole identification</font>

865
00:33:24,210 --> 00:33:27,510
stuff so basically if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have an</font>

866
00:33:26,130 --> 00:33:31,500
account<font color="#E5E5E5"> on there you can propose changes</font>

867
00:33:27,510 --> 00:33:33,030
<font color="#E5E5E5">to the data set</font><font color="#CCCCCC"> so if you know</font><font color="#E5E5E5"> of a</font>

868
00:33:31,500 --> 00:33:34,950
<font color="#CCCCCC">family that's currently</font><font color="#E5E5E5"> not in there you</font>

869
00:33:33,030 --> 00:33:36,899
can propose it if you have some samples

870
00:33:34,950 --> 00:33:38,520
<font color="#E5E5E5">for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> family</font><font color="#CCCCCC"> that I</font><font color="#E5E5E5"> don't have or</font>

871
00:33:36,900 --> 00:33:40,080
versions<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you have identified and</font>

872
00:33:38,520 --> 00:33:43,110
just want<font color="#E5E5E5"> to see them in the data set as</font>

873
00:33:40,080 --> 00:33:45,270
well<font color="#CCCCCC"> you can do all of that so</font><font color="#E5E5E5"> basically</font>

874
00:33:43,110 --> 00:33:46,590
what's then happening is there's a group

875
00:33:45,270 --> 00:33:49,170
<font color="#E5E5E5">of peer reviewers that will basically</font>

876
00:33:46,590 --> 00:33:52,139
<font color="#E5E5E5">review your contribution and then</font>

877
00:33:49,170 --> 00:33:54,270
there's<font color="#E5E5E5"> probably accepted or otherwise</font>

878
00:33:52,140 --> 00:33:56,220
rejected with a note what you should

879
00:33:54,270 --> 00:33:57,990
improve in<font color="#E5E5E5"> order to have it</font><font color="#CCCCCC"> in there</font><font color="#E5E5E5"> so</font>

880
00:33:56,220 --> 00:34:00,750
<font color="#E5E5E5">basically just how you would submit</font>

881
00:33:57,990 --> 00:34:03,480
stuff to a conference<font color="#E5E5E5"> or similar we are</font>

882
00:34:00,750 --> 00:34:06,240
opting the traffic live protocol<font color="#CCCCCC"> mock</font>

883
00:34:03,480 --> 00:34:07,740
<font color="#E5E5E5">just his personal experiences with</font><font color="#CCCCCC"> that</font>

884
00:34:06,240 --> 00:34:10,560
<font color="#E5E5E5">and I hope it's</font><font color="#CCCCCC"> the turning or better</font>

885
00:34:07,740 --> 00:34:12,418
<font color="#E5E5E5">and in this project</font><font color="#CCCCCC"> so most for the</font>

886
00:34:10,560 --> 00:34:15,000
non-critical data is<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> t.o.p</font>

887
00:34:12,418 --> 00:34:16,199
<font color="#E5E5E5">wide so you will inventory and that's</font>

888
00:34:15,000 --> 00:34:18,750
what you will<font color="#E5E5E5"> see if you</font><font color="#CCCCCC"> go to</font><font color="#E5E5E5"> the</font>

889
00:34:16,199 --> 00:34:20,428
website is<font color="#E5E5E5"> basically openly accessible</font>

890
00:34:18,750 --> 00:34:22,080
as<font color="#CCCCCC"> well as the aggregated</font><font color="#E5E5E5"> statistics</font>

891
00:34:20,429 --> 00:34:22,950
<font color="#E5E5E5">that I'm going</font><font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> any</font>

892
00:34:22,080 --> 00:34:24,929
references as well

893
00:34:22,949 --> 00:34:27,270
everything else is<font color="#E5E5E5"> ember so if you have</font>

894
00:34:24,929 --> 00:34:29,429
an excess or<font color="#E5E5E5"> basically in account for</font>

895
00:34:27,270 --> 00:34:31,460
the platform<font color="#E5E5E5"> the basically means you</font>

896
00:34:29,429 --> 00:34:34,530
have to keep it to yourself in your

897
00:34:31,460 --> 00:34:36,929
institution<font color="#E5E5E5"> there's some resources</font>

898
00:34:34,530 --> 00:34:39,510
<font color="#E5E5E5">within there</font><font color="#CCCCCC"> that are designated</font>

899
00:34:36,929 --> 00:34:40,860
<font color="#CCCCCC">otherwise so you already saw this you</font>

900
00:34:39,510 --> 00:34:43,169
<font color="#E5E5E5">are think there might be</font><font color="#CCCCCC"> teal pea</font><font color="#E5E5E5"> green</font>

901
00:34:40,860 --> 00:34:44,790
so there's other ways<font color="#CCCCCC"> to</font><font color="#E5E5E5"> share some</font>

902
00:34:43,168 --> 00:34:47,730
components but<font color="#E5E5E5"> the majority of the data</font>

903
00:34:44,790 --> 00:34:50,310
is really<font color="#E5E5E5"> intended to stay on the yeah</font>

904
00:34:47,730 --> 00:34:52,800
<font color="#E5E5E5">and if you want to get an account there</font>

905
00:34:50,310 --> 00:34:55,409
we use some basic<font color="#E5E5E5"> form of</font><font color="#CCCCCC"> wetting</font>

906
00:34:52,800 --> 00:34:58,290
so basically existing community members

907
00:34:55,409 --> 00:35:01,830
have to vouch for you<font color="#E5E5E5"> so basically we</font>

908
00:34:58,290 --> 00:35:04,529
know who is accountable<font color="#E5E5E5"> if you do stupid</font>

909
00:35:01,830 --> 00:35:05,790
stuff<font color="#CCCCCC"> and this might fall back to them</font>

910
00:35:04,530 --> 00:35:07,590
so<font color="#E5E5E5"> that's basically a system</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> very</font>

911
00:35:05,790 --> 00:35:10,020
established and stuff like<font color="#CCCCCC"> opps</font><font color="#E5E5E5"> trust</font>

912
00:35:07,590 --> 00:35:13,050
and such and we are<font color="#CCCCCC"> basically just using</font>

913
00:35:10,020 --> 00:35:15,570
and orient ourselves on<font color="#CCCCCC"> that yeah I</font>

914
00:35:13,050 --> 00:35:18,900
talked about<font color="#E5E5E5"> this peer reviewer thing so</font>

915
00:35:15,570 --> 00:35:21,150
if you<font color="#E5E5E5"> won't have data to contribute but</font>

916
00:35:18,900 --> 00:35:23,850
a good at math analysis and<font color="#E5E5E5"> have a good</font>

917
00:35:21,150 --> 00:35:25,620
rest<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> damaja landscape</font><font color="#E5E5E5"> you can</font>

918
00:35:23,850 --> 00:35:27,360
also do reviews here so that's also a

919
00:35:25,620 --> 00:35:29,790
<font color="#CCCCCC">way to</font><font color="#E5E5E5"> contribute to this project</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a</font>

920
00:35:27,360 --> 00:35:30,339
<font color="#CCCCCC">platform</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> I said</font><font color="#E5E5E5"> normally</font><font color="#CCCCCC"> two modes</font>

921
00:35:29,790 --> 00:35:32,829
are require

922
00:35:30,339 --> 00:35:35,920
to either<font color="#E5E5E5"> accept or reject a proposal so</font>

923
00:35:32,829 --> 00:35:38,349
you get some more sort of grounds to

924
00:35:35,920 --> 00:35:40,359
base a decision<font color="#E5E5E5"> on and what</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> also</font>

925
00:35:38,349 --> 00:35:42,279
planning<font color="#CCCCCC"> to do is doing some achievement</font>

926
00:35:40,359 --> 00:35:44,049
stuff so if<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> frequently reviewing</font>

927
00:35:42,279 --> 00:35:45,519
things<font color="#E5E5E5"> right now it's just fantasy</font>

928
00:35:44,049 --> 00:35:45,849
points and you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> not do anything with</font>

929
00:35:45,519 --> 00:35:47,649
it

930
00:35:45,849 --> 00:35:49,529
but in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> long run</font><font color="#CCCCCC"> I guess we might</font>

931
00:35:47,650 --> 00:35:52,089
provide<font color="#CCCCCC"> some more services that</font>

932
00:35:49,529 --> 00:35:54,039
basically will<font color="#CCCCCC"> have some quota because</font>

933
00:35:52,089 --> 00:35:57,009
<font color="#CCCCCC">they are</font><font color="#E5E5E5"> more computationally intensive</font>

934
00:35:54,039 --> 00:35:58,660
and basically more contributions would

935
00:35:57,009 --> 00:36:01,599
allow you<font color="#E5E5E5"> to get</font><font color="#CCCCCC"> a higher quota to that</font>

936
00:35:58,660 --> 00:36:03,609
kind of<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> so if you want</font><font color="#E5E5E5"> to defend</font>

937
00:36:01,599 --> 00:36:08,769
the<font color="#E5E5E5"> earthworm together with the freedom</font>

938
00:36:03,609 --> 00:36:10,690
fighters<font color="#E5E5E5"> okay so in summary I'm the</font>

939
00:36:08,769 --> 00:36:14,069
baseline data<font color="#E5E5E5"> set that I'm offering</font><font color="#CCCCCC"> you</font>

940
00:36:10,690 --> 00:36:18,009
<font color="#CCCCCC">right here is run about</font><font color="#E5E5E5"> 670 families</font>

941
00:36:14,069 --> 00:36:20,109
<font color="#CCCCCC">2,500 samples with very clean labels</font><font color="#E5E5E5"> I</font>

942
00:36:18,009 --> 00:36:21,999
hope<font color="#E5E5E5"> and already some</font><font color="#CCCCCC"> contextual</font>

943
00:36:20,109 --> 00:36:24,549
<font color="#E5E5E5">enrichment but there's many many gaps</font>

944
00:36:21,999 --> 00:36:26,019
that want to be filled<font color="#E5E5E5"> and it basically</font>

945
00:36:24,549 --> 00:36:28,809
<font color="#CCCCCC">would allow us</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have this kind</font><font color="#E5E5E5"> of</font>

946
00:36:26,019 --> 00:36:30,669
rosetta stone that<font color="#E5E5E5"> basically tracks all</font>

947
00:36:28,809 --> 00:36:32,049
the aliases that<font color="#E5E5E5"> different people are</font>

948
00:36:30,670 --> 00:36:33,789
referring<font color="#CCCCCC"> to when they talk about</font><font color="#E5E5E5"> my</font>

949
00:36:32,049 --> 00:36:37,359
<font color="#CCCCCC">other families or actors</font><font color="#E5E5E5"> for that</font>

950
00:36:33,789 --> 00:36:38,859
instance<font color="#E5E5E5"> and depending on how active</font>

951
00:36:37,359 --> 00:36:40,239
this thing is going it can also

952
00:36:38,859 --> 00:36:42,009
basically<font color="#E5E5E5"> become something like a</font>

953
00:36:40,239 --> 00:36:43,839
<font color="#CCCCCC">newsfeed because um if you keep the</font>

954
00:36:42,009 --> 00:36:45,700
references edit<font color="#E5E5E5"> for families all the</font>

955
00:36:43,839 --> 00:36:48,819
time<font color="#CCCCCC"> you see what's happening</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> it's</font>

956
00:36:45,700 --> 00:36:50,019
more<font color="#E5E5E5"> on</font><font color="#CCCCCC"> VOC at the time and get all of</font>

957
00:36:48,819 --> 00:36:52,029
the blog<font color="#E5E5E5"> posts directly</font><font color="#CCCCCC"> from one</font>

958
00:36:50,019 --> 00:36:55,180
resource so it's kind of an aggregator

959
00:36:52,029 --> 00:36:56,739
switch might hopefully become<font color="#E5E5E5"> that thing</font>

960
00:36:55,180 --> 00:36:58,269
so it would be<font color="#CCCCCC"> really</font><font color="#E5E5E5"> good because</font><font color="#CCCCCC"> then</font>

961
00:36:56,739 --> 00:37:01,809
I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have to</font><font color="#CCCCCC"> crawl my Twitter feed</font>

962
00:36:58,269 --> 00:37:03,430
<font color="#CCCCCC">all the time we are</font><font color="#E5E5E5"> using basically the</font>

963
00:37:01,809 --> 00:37:07,150
<font color="#E5E5E5">reference data</font><font color="#CCCCCC"> of I</font><font color="#E5E5E5"> miss for the Fred</font>

964
00:37:03,430 --> 00:37:09,640
<font color="#CCCCCC">Hector repository and</font><font color="#E5E5E5"> whenever we are</font>

965
00:37:07,150 --> 00:37:11,109
<font color="#E5E5E5">not able</font><font color="#CCCCCC"> to reflect something</font><font color="#E5E5E5"> that we</font>

966
00:37:09,640 --> 00:37:14,589
want to<font color="#E5E5E5"> do in my PDA we also contribute</font>

967
00:37:11,109 --> 00:37:16,839
a<font color="#CCCCCC"> Mac and like adding</font><font color="#E5E5E5"> an an actor into</font>

968
00:37:14,589 --> 00:37:19,499
<font color="#CCCCCC">their</font><font color="#E5E5E5"> directory or</font><font color="#CCCCCC"> merging</font><font color="#E5E5E5"> some of the</font>

969
00:37:16,839 --> 00:37:22,538
areas<font color="#E5E5E5"> and stuff like that so</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> miss</font>

970
00:37:19,499 --> 00:37:25,180
really good thing then again we also

971
00:37:22,539 --> 00:37:26,739
<font color="#E5E5E5">want to</font><font color="#CCCCCC"> cluster automation support</font><font color="#E5E5E5"> so</font>

972
00:37:25,180 --> 00:37:30,190
basically everything that you can<font color="#CCCCCC"> access</font>

973
00:37:26,739 --> 00:37:32,769
<font color="#E5E5E5">on the website also</font><font color="#CCCCCC"> has a REST API so if</font>

974
00:37:30,190 --> 00:37:34,450
you want to<font color="#E5E5E5"> do searches there's a Python</font>

975
00:37:32,769 --> 00:37:36,578
client ready for you where<font color="#E5E5E5"> you can just</font>

976
00:37:34,450 --> 00:37:39,788
directly<font color="#E5E5E5"> integrated to stuff that you</font>

977
00:37:36,579 --> 00:37:42,489
already have<font color="#CCCCCC"> okay so now I've been</font>

978
00:37:39,789 --> 00:37:43,640
talking<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot about the project and the</font>

979
00:37:42,489 --> 00:37:46,160
data set and what

980
00:37:43,640 --> 00:37:47,810
<font color="#CCCCCC">I want</font><font color="#E5E5E5"> to do is basically do a bit of</font>

981
00:37:46,160 --> 00:37:50,600
showcasing what you can do with<font color="#E5E5E5"> that</font>

982
00:37:47,810 --> 00:37:53,600
<font color="#E5E5E5">kind of data so I had this vision they</font>

983
00:37:50,600 --> 00:37:55,190
want to compare<font color="#E5E5E5"> across many</font><font color="#CCCCCC"> mother</font>

984
00:37:53,600 --> 00:37:57,560
<font color="#E5E5E5">families and find if there are some</font>

985
00:37:55,190 --> 00:38:02,270
similarities<font color="#E5E5E5"> or what basically is some</font>

986
00:37:57,560 --> 00:38:04,580
of the trends of malware authors are so

987
00:38:02,270 --> 00:38:06,110
the data they've been used in<font color="#E5E5E5"> this thing</font>

988
00:38:04,580 --> 00:38:08,150
is basically<font color="#E5E5E5"> the</font><font color="#CCCCCC"> decommitted I just</font>

989
00:38:06,110 --> 00:38:11,060
referenced<font color="#CCCCCC"> so around about 1200 dumped</font>

990
00:38:08,150 --> 00:38:15,860
files for almost or<font color="#CCCCCC"> for</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> 6 families</font>

991
00:38:11,060 --> 00:38:18,110
<font color="#E5E5E5">and in this presentation I'm only going</font>

992
00:38:15,860 --> 00:38:20,150
<font color="#E5E5E5">to address three things so we have</font>

993
00:38:18,110 --> 00:38:23,660
compared<font color="#CCCCCC"> PE headers across all</font><font color="#E5E5E5"> of those</font>

994
00:38:20,150 --> 00:38:25,130
families<font color="#CCCCCC"> we did some</font><font color="#E5E5E5"> very cursory code</font>

995
00:38:23,660 --> 00:38:27,440
analysis because that's like a rabbit

996
00:38:25,130 --> 00:38:29,090
<font color="#E5E5E5">hole and it totally would not fit the</font>

997
00:38:27,440 --> 00:38:31,400
<font color="#E5E5E5">time slot of</font><font color="#CCCCCC"> this presentation if we had</font>

998
00:38:29,090 --> 00:38:33,500
<font color="#E5E5E5">already presented all of the results we</font>

999
00:38:31,400 --> 00:38:35,270
<font color="#CCCCCC">have there</font><font color="#E5E5E5"> and on the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> hand we know</font>

1000
00:38:33,500 --> 00:38:37,070
API usage which is very interesting

1001
00:38:35,270 --> 00:38:39,710
<font color="#CCCCCC">because I guess that's one of the</font>

1002
00:38:37,070 --> 00:38:42,020
cornerstones the<font color="#E5E5E5"> vs analysts most rely</font>

1003
00:38:39,710 --> 00:38:43,700
on when we<font color="#E5E5E5"> are</font><font color="#CCCCCC"> looking at now there so</font>

1004
00:38:42,020 --> 00:38:46,190
<font color="#E5E5E5">that's the whole</font><font color="#CCCCCC"> inventory of Emily's</font>

1005
00:38:43,700 --> 00:38:47,390
right now<font color="#E5E5E5"> it's probably</font><font color="#CCCCCC"> still easy for</font>

1006
00:38:46,190 --> 00:38:50,060
you to find<font color="#E5E5E5"> something that's not</font><font color="#CCCCCC"> in</font>

1007
00:38:47,390 --> 00:38:52,279
there<font color="#CCCCCC"> but that's</font><font color="#E5E5E5"> basically also one</font><font color="#CCCCCC"> of</font>

1008
00:38:50,060 --> 00:38:54,470
the<font color="#E5E5E5"> problems because if you're looking</font>

1009
00:38:52,280 --> 00:38:57,350
at a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> stuff in parallel you have</font>

1010
00:38:54,470 --> 00:38:59,629
to aggregate to some degree<font color="#E5E5E5"> so what I'm</font>

1011
00:38:57,350 --> 00:39:04,190
now<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> do is in most of the times</font>

1012
00:38:59,630 --> 00:39:06,290
basically look at<font color="#E5E5E5"> the aggregated samples</font>

1013
00:39:04,190 --> 00:39:08,690
per family<font color="#E5E5E5"> and then compare the results</font>

1014
00:39:06,290 --> 00:39:11,390
on that<font color="#CCCCCC"> level so</font><font color="#E5E5E5"> let's do a very short</font>

1015
00:39:08,690 --> 00:39:15,440
<font color="#E5E5E5">recap of what Pierre does look like so</font>

1016
00:39:11,390 --> 00:39:17,569
that's your usual<font color="#CCCCCC"> PA header for example</font>

1017
00:39:15,440 --> 00:39:19,670
one<font color="#CCCCCC"> of the more famous things here that</font>

1018
00:39:17,570 --> 00:39:21,980
you<font color="#CCCCCC"> normally look</font><font color="#E5E5E5"> for is probably the</font><font color="#CCCCCC"> MZ</font>

1019
00:39:19,670 --> 00:39:23,480
magic<font color="#E5E5E5"> the EPE magic so basically the</font>

1020
00:39:21,980 --> 00:39:24,520
cornerstones<font color="#CCCCCC"> that we used to to find</font>

1021
00:39:23,480 --> 00:39:27,410
<font color="#E5E5E5">stuff in Dom's</font>

1022
00:39:24,520 --> 00:39:29,530
<font color="#CCCCCC">then there's also this dust</font><font color="#E5E5E5"> string thing</font>

1023
00:39:27,410 --> 00:39:32,240
that might or might not be<font color="#CCCCCC"> very common</font>

1024
00:39:29,530 --> 00:39:33,880
<font color="#E5E5E5">there's a rich header that might contain</font>

1025
00:39:32,240 --> 00:39:36,319
some interesting information

1026
00:39:33,880 --> 00:39:39,800
<font color="#CCCCCC">there's the</font><font color="#E5E5E5"> Machine field that tells you</font>

1027
00:39:36,320 --> 00:39:41,480
if it's<font color="#E5E5E5"> either 32 or 64 bits then the</font>

1028
00:39:39,800 --> 00:39:44,720
number of sections we have<font color="#CCCCCC"> you also</font>

1029
00:39:41,480 --> 00:39:46,940
heard<font color="#E5E5E5"> earlier yesterday</font><font color="#CCCCCC"> about that and</font><font color="#E5E5E5"> a</font>

1030
00:39:44,720 --> 00:39:48,950
timestamp<font color="#CCCCCC"> and</font><font color="#E5E5E5"> for example with the</font>

1031
00:39:46,940 --> 00:39:50,510
timestamp<font color="#E5E5E5"> normally he was</font><font color="#CCCCCC"> nervous you</font>

1032
00:39:48,950 --> 00:39:53,299
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> really know</font><font color="#E5E5E5"> if you can trust</font><font color="#CCCCCC"> the</font>

1033
00:39:50,510 --> 00:39:55,730
timestamp but if we were<font color="#E5E5E5"> able to compare</font>

1034
00:39:53,300 --> 00:39:57,070
<font color="#E5E5E5">this across</font><font color="#CCCCCC"> 400</font><font color="#E5E5E5"> 50 families we might get</font>

1035
00:39:55,730 --> 00:39:58,750
a trend<font color="#E5E5E5"> how often</font><font color="#CCCCCC"> these times</font>

1036
00:39:57,070 --> 00:40:02,050
might be an actual<font color="#CCCCCC"> value that's</font>

1037
00:39:58,750 --> 00:40:04,240
basically realistic or not<font color="#CCCCCC"> there's also</font>

1038
00:40:02,050 --> 00:40:06,730
characteristics fears that defines how

1039
00:40:04,240 --> 00:40:09,339
<font color="#CCCCCC">the malware basically can be loaded on</font>

1040
00:40:06,730 --> 00:40:11,650
the system<font color="#E5E5E5"> you might have a linker info</font>

1041
00:40:09,340 --> 00:40:14,950
that tells you some more<font color="#E5E5E5"> about how this</font>

1042
00:40:11,650 --> 00:40:16,570
thing was potentially compiled<font color="#E5E5E5"> which</font>

1043
00:40:14,950 --> 00:40:18,910
operate which system is required<font color="#E5E5E5"> in</font>

1044
00:40:16,570 --> 00:40:20,890
order to<font color="#E5E5E5"> be able to run it</font><font color="#CCCCCC"> the subsystem</font>

1045
00:40:18,910 --> 00:40:22,720
in<font color="#CCCCCC"> that case it's like value</font><font color="#E5E5E5"> 3 so it</font>

1046
00:40:20,890 --> 00:40:24,670
means a console application<font color="#E5E5E5"> instead of a</font>

1047
00:40:22,720 --> 00:40:26,740
UI application

1048
00:40:24,670 --> 00:40:28,960
<font color="#CCCCCC">dreg characteristics those</font><font color="#E5E5E5"> contain a</font>

1049
00:40:26,740 --> 00:40:31,479
<font color="#E5E5E5">bits information about the security</font><font color="#CCCCCC"> that</font>

1050
00:40:28,960 --> 00:40:33,700
this file is<font color="#E5E5E5"> capable of ending on for</font>

1051
00:40:31,480 --> 00:40:36,130
example<font color="#CCCCCC"> if it supports a sauna or not</font>

1052
00:40:33,700 --> 00:40:38,080
<font color="#E5E5E5">and then finally you</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> have those</font><font color="#CCCCCC"> 11</font>

1053
00:40:36,130 --> 00:40:41,650
data directories and that<font color="#CCCCCC"> also contain</font>

1054
00:40:38,080 --> 00:40:43,870
some interesting<font color="#E5E5E5"> data so the above</font>

1055
00:40:41,650 --> 00:40:46,000
diagram may or may<font color="#CCCCCC"> not include some</font>

1056
00:40:43,870 --> 00:40:49,690
Easter eggs<font color="#CCCCCC"> and it's up</font><font color="#E5E5E5"> to you to find</font>

1057
00:40:46,000 --> 00:40:51,040
<font color="#E5E5E5">them so for</font><font color="#CCCCCC"> your presentations</font><font color="#E5E5E5"> it will</font>

1058
00:40:49,690 --> 00:40:53,050
be in that<font color="#CCCCCC"> kind of table</font><font color="#E5E5E5"> so on the left</font>

1059
00:40:51,040 --> 00:40:54,430
side<font color="#CCCCCC"> I'm across all</font><font color="#E5E5E5"> of the samples and</font>

1060
00:40:53,050 --> 00:40:55,000
<font color="#E5E5E5">on the right side aggregated for</font>

1061
00:40:54,430 --> 00:40:57,279
families

1062
00:40:55,000 --> 00:40:59,440
so let's first have a look at<font color="#E5E5E5"> how often</font>

1063
00:40:57,280 --> 00:41:03,970
<font color="#E5E5E5">you will normally encounter some kind of</font>

1064
00:40:59,440 --> 00:41:05,920
<font color="#E5E5E5">MZ or PE magic at all and here the first</font>

1065
00:41:03,970 --> 00:41:07,779
<font color="#CCCCCC">the</font><font color="#E5E5E5"> good news is taking this as an</font>

1066
00:41:05,920 --> 00:41:11,080
indicator for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> availability of a peer</font>

1067
00:41:07,780 --> 00:41:13,240
of<font color="#E5E5E5"> PE headers in a good</font><font color="#CCCCCC"> 95 percent of</font>

1068
00:41:11,080 --> 00:41:15,279
<font color="#CCCCCC">the families you</font><font color="#E5E5E5"> actually find this</font>

1069
00:41:13,240 --> 00:41:21,339
stuff<font color="#E5E5E5"> and you can extract information</font>

1070
00:41:15,280 --> 00:41:24,040
from<font color="#E5E5E5"> some kind of PE header so then what</font>

1071
00:41:21,340 --> 00:41:26,830
you can see<font color="#CCCCCC"> here is I have some more</font>

1072
00:41:24,040 --> 00:41:30,190
that I can<font color="#CCCCCC"> basically extract from that</font>

1073
00:41:26,830 --> 00:41:31,779
<font color="#CCCCCC">are</font><font color="#E5E5E5"> having MZ bad check</font><font color="#CCCCCC"> so sometimes you</font>

1074
00:41:30,190 --> 00:41:35,320
<font color="#CCCCCC">can see the mail rest basically just</font>

1075
00:41:31,780 --> 00:41:38,410
deleting TMZ or just<font color="#CCCCCC"> CPE</font><font color="#E5E5E5"> but otherwise</font>

1076
00:41:35,320 --> 00:41:39,820
<font color="#CCCCCC">the the header stays intact</font><font color="#E5E5E5"> but only</font>

1077
00:41:38,410 --> 00:41:42,040
basically just<font color="#E5E5E5"> one part of the story</font>

1078
00:41:39,820 --> 00:41:44,320
<font color="#E5E5E5">because there's more funky stuff</font>

1079
00:41:42,040 --> 00:41:47,320
happening<font color="#CCCCCC"> so some of the</font><font color="#E5E5E5"> reasons why you</font>

1080
00:41:44,320 --> 00:41:50,590
<font color="#E5E5E5">might not find a</font><font color="#CCCCCC"> B era in that case so</font>

1081
00:41:47,320 --> 00:41:52,360
for a good 30 families<font color="#CCCCCC"> you would have 18</font>

1082
00:41:50,590 --> 00:41:54,520
<font color="#E5E5E5">times position independent code that's</font>

1083
00:41:52,360 --> 00:41:57,550
basically not<font color="#E5E5E5"> in</font><font color="#CCCCCC"> need of a header</font>

1084
00:41:54,520 --> 00:41:59,020
<font color="#E5E5E5">seven times basically the segments that</font>

1085
00:41:57,550 --> 00:42:01,000
executed<font color="#CCCCCC"> with therapy stop</font><font color="#E5E5E5"> with some</font>

1086
00:41:59,020 --> 00:42:03,550
data and in five cases you would have

1087
00:42:01,000 --> 00:42:05,560
now a tea instead and for<font color="#E5E5E5"> seven families</font>

1088
00:42:03,550 --> 00:42:08,350
you can<font color="#E5E5E5"> find that five</font><font color="#CCCCCC"> of them basically</font>

1089
00:42:05,560 --> 00:42:09,759
<font color="#CCCCCC">null the whole PE</font><font color="#E5E5E5"> header so some more</font>

1090
00:42:08,350 --> 00:42:10,600
<font color="#CCCCCC">effort you</font><font color="#E5E5E5"> can basically extract it</font>

1091
00:42:09,760 --> 00:42:12,700
before it's now

1092
00:42:10,600 --> 00:42:15,370
and for two families<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> also</font>

1093
00:42:12,700 --> 00:42:16,660
observe<font color="#E5E5E5"> that it's xorg so one does it</font>

1094
00:42:15,370 --> 00:42:20,350
with a<font color="#CCCCCC"> one-bite</font><font color="#E5E5E5"> pattern the other one</font>

1095
00:42:16,660 --> 00:42:22,990
with a four<font color="#E5E5E5"> bite pattern so it's a bit</font>

1096
00:42:20,350 --> 00:42:25,450
<font color="#E5E5E5">inconsistent so up there you can see 27</font>

1097
00:42:22,990 --> 00:42:27,279
<font color="#E5E5E5">verses 37 families the reason for that</font>

1098
00:42:25,450 --> 00:42:29,850
is<font color="#E5E5E5"> basically that only some versions of</font>

1099
00:42:27,280 --> 00:42:31,980
some families are<font color="#CCCCCC"> using those</font>

1100
00:42:29,850 --> 00:42:34,509
<font color="#E5E5E5">destruction of PE headers</font>

1101
00:42:31,980 --> 00:42:37,710
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> drawstrings also available in like</font>

1102
00:42:34,510 --> 00:42:40,990
<font color="#CCCCCC">90% of the cases</font><font color="#E5E5E5"> in general</font><font color="#CCCCCC"> you will</font>

1103
00:42:37,710 --> 00:42:43,180
find three different<font color="#E5E5E5"> variants for those</font>

1104
00:42:40,990 --> 00:42:44,859
so<font color="#E5E5E5"> basically the most prominent</font><font color="#CCCCCC"> this</font>

1105
00:42:43,180 --> 00:42:46,390
program cannot be run in DOS mode<font color="#CCCCCC"> but</font>

1106
00:42:44,860 --> 00:42:48,520
the other ones<font color="#CCCCCC"> are basically</font><font color="#E5E5E5"> tired</font>

1107
00:42:46,390 --> 00:42:51,250
<font color="#E5E5E5">mostly tired to data feed so that's one</font>

1108
00:42:48,520 --> 00:42:55,000
of<font color="#CCCCCC"> the easy ways how</font><font color="#E5E5E5"> to spot</font><font color="#CCCCCC"> wall in</font>

1109
00:42:51,250 --> 00:42:57,310
compiled stuff<font color="#E5E5E5"> rich headers are a less a</font>

1110
00:42:55,000 --> 00:42:59,590
bit less common<font color="#E5E5E5"> so you will only find</font>

1111
00:42:57,310 --> 00:43:02,049
them across<font color="#E5E5E5"> all of the families in run</font>

1112
00:42:59,590 --> 00:43:03,880
about<font color="#CCCCCC"> 60</font><font color="#E5E5E5"> percent of the</font><font color="#CCCCCC"> cases it's a</font>

1113
00:43:02,050 --> 00:43:08,650
<font color="#E5E5E5">propriety</font><font color="#CCCCCC"> staring at by the Microsoft</font>

1114
00:43:03,880 --> 00:43:11,350
basically encodes how many times<font color="#E5E5E5"> things</font>

1115
00:43:08,650 --> 00:43:12,880
have been compiled with<font color="#E5E5E5"> Microsoft Visual</font>

1116
00:43:11,350 --> 00:43:15,069
<font color="#E5E5E5">Studio and also with the</font><font color="#CCCCCC"> different</font>

1117
00:43:12,880 --> 00:43:17,380
versions of<font color="#E5E5E5"> widgets to do that may have</font>

1118
00:43:15,070 --> 00:43:19,390
been<font color="#E5E5E5"> present on the system over time</font><font color="#CCCCCC"> and</font>

1119
00:43:17,380 --> 00:43:21,280
there's a<font color="#E5E5E5"> paper from Jim</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> this year</font>

1120
00:43:19,390 --> 00:43:24,339
that goes in a bit more detail<font color="#E5E5E5"> about</font>

1121
00:43:21,280 --> 00:43:26,080
<font color="#E5E5E5">that</font><font color="#CCCCCC"> it's really</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> next</font>

1122
00:43:24,340 --> 00:43:29,050
thing that we might have<font color="#E5E5E5"> a look at so</font>

1123
00:43:26,080 --> 00:43:32,200
say we<font color="#CCCCCC"> have a PE header the vast</font>

1124
00:43:29,050 --> 00:43:34,480
majority again is 30<font color="#E5E5E5"> but 32-bit images</font>

1125
00:43:32,200 --> 00:43:36,669
one reason for<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is that I've</font><font color="#CCCCCC"> been</font>

1126
00:43:34,480 --> 00:43:39,370
using 32-bit windows<font color="#CCCCCC"> a lot to dump that</font>

1127
00:43:36,670 --> 00:43:41,850
<font color="#CCCCCC">stuff</font><font color="#E5E5E5"> but for about 15</font><font color="#CCCCCC"> families you</font>

1128
00:43:39,370 --> 00:43:45,009
would find that they also have 64 bits

1129
00:43:41,850 --> 00:43:46,870
<font color="#E5E5E5">modules so for example some</font><font color="#CCCCCC"> of the more</font>

1130
00:43:45,010 --> 00:43:49,060
modern<font color="#E5E5E5"> bankers like after</font><font color="#CCCCCC"> a trip but</font>

1131
00:43:46,870 --> 00:43:50,710
basically dynamically decide which of

1132
00:43:49,060 --> 00:43:53,710
<font color="#E5E5E5">the modules they want to use</font><font color="#CCCCCC"> try decks</font>

1133
00:43:50,710 --> 00:43:55,150
the same and things like that<font color="#E5E5E5"> and at the</font>

1134
00:43:53,710 --> 00:43:57,280
<font color="#E5E5E5">other hand what was a bit surprising</font><font color="#CCCCCC"> to</font>

1135
00:43:55,150 --> 00:43:59,260
me<font color="#E5E5E5"> almost every 4th family basically has</font>

1136
00:43:57,280 --> 00:44:03,490
their main module<font color="#E5E5E5"> as a DLL opposed to an</font>

1137
00:43:59,260 --> 00:44:05,910
exit file we forgot to<font color="#E5E5E5"> those security</font>

1138
00:44:03,490 --> 00:44:08,370
<font color="#CCCCCC">measures as expected</font>

1139
00:44:05,910 --> 00:44:11,200
<font color="#E5E5E5">Marvis not really keen</font><font color="#CCCCCC"> on basically</font>

1140
00:44:08,370 --> 00:44:13,779
having<font color="#E5E5E5"> those so for example if we talk</font>

1141
00:44:11,200 --> 00:44:16,600
<font color="#CCCCCC">about relocatable</font><font color="#E5E5E5"> mavar</font><font color="#CCCCCC"> like SLR</font>

1142
00:44:13,780 --> 00:44:19,660
<font color="#E5E5E5">might be a sense might make sense to</font>

1143
00:44:16,600 --> 00:44:21,069
<font color="#CCCCCC">just</font><font color="#E5E5E5"> deactivate it because it may</font><font color="#CCCCCC"> ensure</font>

1144
00:44:19,660 --> 00:44:23,618
that your<font color="#CCCCCC"> members running</font><font color="#E5E5E5"> a bit more</font>

1145
00:44:21,070 --> 00:44:27,219
<font color="#CCCCCC">steadily say for</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> X I guess</font>

1146
00:44:23,619 --> 00:44:28,420
so<font color="#E5E5E5"> only in about half of the cases</font><font color="#CCCCCC"> you</font>

1147
00:44:27,219 --> 00:44:31,299
would find those security features

1148
00:44:28,420 --> 00:44:34,839
activated time stems like<font color="#E5E5E5"> I said are</font>

1149
00:44:31,299 --> 00:44:36,969
<font color="#E5E5E5">really interesting so for almost</font><font color="#CCCCCC"> 90%</font><font color="#E5E5E5"> we</font>

1150
00:44:34,839 --> 00:44:40,359
<font color="#E5E5E5">have a non zero or not definite time</font>

1151
00:44:36,969 --> 00:44:41,499
value definite time with you<font color="#E5E5E5"> because</font><font color="#CCCCCC"> def</font>

1152
00:44:40,359 --> 00:44:43,719
<font color="#CCCCCC">before</font><font color="#E5E5E5"> contained in the back that</font>

1153
00:44:41,499 --> 00:44:46,839
basically always included the same

1154
00:44:43,719 --> 00:44:49,479
timestamp there and you can also read

1155
00:44:46,839 --> 00:44:50,979
<font color="#CCCCCC">about that and</font><font color="#E5E5E5"> now let's have a look at</font>

1156
00:44:49,479 --> 00:44:52,808
time<font color="#E5E5E5"> times in a bit more detail because</font>

1157
00:44:50,979 --> 00:44:54,249
<font color="#E5E5E5">that's basically what</font><font color="#CCCCCC"> I just said</font><font color="#E5E5E5"> so if</font>

1158
00:44:52,809 --> 00:44:57,549
you want to<font color="#CCCCCC"> look at the age of the</font>

1159
00:44:54,249 --> 00:44:59,200
corpus we can for<font color="#CCCCCC"> example check when</font>

1160
00:44:57,549 --> 00:45:02,109
those files have appeared<font color="#CCCCCC"> for the first</font>

1161
00:44:59,200 --> 00:45:03,729
<font color="#E5E5E5">time on virustotal</font><font color="#CCCCCC"> and if you</font><font color="#E5E5E5"> don't have</font>

1162
00:45:02,109 --> 00:45:06,549
data<font color="#E5E5E5"> it looks</font><font color="#CCCCCC"> some more like this so</font>

1163
00:45:03,729 --> 00:45:09,129
<font color="#CCCCCC">about 90% of all the samples that I have</font>

1164
00:45:06,549 --> 00:45:12,788
in<font color="#E5E5E5"> there are basically 2013 and later</font>

1165
00:45:09,130 --> 00:45:16,380
<font color="#CCCCCC">so going</font><font color="#E5E5E5"> more in this preservation</font>

1166
00:45:12,789 --> 00:45:18,910
direction<font color="#E5E5E5"> if you have basically a lot of</font>

1167
00:45:16,380 --> 00:45:20,979
samples<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are identified and predates</font>

1168
00:45:18,910 --> 00:45:22,690
basically<font color="#E5E5E5"> this border I'm really happy</font>

1169
00:45:20,979 --> 00:45:24,839
to take<font color="#E5E5E5"> them and</font><font color="#CCCCCC"> integrate them</font><font color="#E5E5E5"> as well</font>

1170
00:45:22,690 --> 00:45:26,979
just<font color="#E5E5E5"> to increase the historical coverage</font>

1171
00:45:24,839 --> 00:45:31,749
and the<font color="#CCCCCC"> other</font><font color="#E5E5E5"> sample right now is a</font>

1172
00:45:26,979 --> 00:45:34,538
<font color="#CCCCCC">GoSee sample from 2006 so if you want</font><font color="#E5E5E5"> to</font>

1173
00:45:31,749 --> 00:45:37,629
<font color="#E5E5E5">estimate</font><font color="#CCCCCC"> dpe timestamp accuracy</font><font color="#E5E5E5"> what we</font>

1174
00:45:34,539 --> 00:45:39,819
can do is basically use the field<font color="#E5E5E5"> from</font>

1175
00:45:37,630 --> 00:45:43,150
the PE header and the<font color="#E5E5E5"> virustotal field</font>

1176
00:45:39,819 --> 00:45:45,430
and do the difference of them so looking

1177
00:45:43,150 --> 00:45:48,190
at those<font color="#CCCCCC"> 1200</font><font color="#E5E5E5"> times I have to start with</font>

1178
00:45:45,430 --> 00:45:51,279
I can detect them that<font color="#E5E5E5"> don't have a PE</font>

1179
00:45:48,190 --> 00:45:53,799
header<font color="#E5E5E5"> then those that have</font><font color="#CCCCCC"> enough mud</font>

1180
00:45:51,279 --> 00:45:56,469
<font color="#CCCCCC">field</font><font color="#E5E5E5"> so they are not really</font><font color="#CCCCCC"> useful in</font>

1181
00:45:53,799 --> 00:45:58,210
<font color="#CCCCCC">doing this kind of analysis</font><font color="#E5E5E5"> another 30</font>

1182
00:45:56,469 --> 00:45:59,999
don't have a<font color="#CCCCCC"> virustotal</font><font color="#E5E5E5"> time stamp</font>

1183
00:45:58,210 --> 00:46:02,410
<font color="#CCCCCC">because they are not on virustotal</font>

1184
00:45:59,999 --> 00:46:04,118
<font color="#CCCCCC">you will find some</font><font color="#E5E5E5"> time stamped and</font>

1185
00:46:02,410 --> 00:46:05,859
there are certainly<font color="#E5E5E5"> fakes because they</font>

1186
00:46:04,119 --> 00:46:07,599
are in<font color="#E5E5E5"> the future</font><font color="#CCCCCC"> so basically they</font>

1187
00:46:05,859 --> 00:46:09,098
would<font color="#E5E5E5"> have been submitted to viruses</font>

1188
00:46:07,599 --> 00:46:11,289
<font color="#CCCCCC">before they have been compiled</font><font color="#E5E5E5"> so it</font>

1189
00:46:09,099 --> 00:46:12,759
doesn't make<font color="#CCCCCC"> sense and we can</font><font color="#E5E5E5"> also</font>

1190
00:46:11,289 --> 00:46:15,910
filter<font color="#E5E5E5"> down</font><font color="#CCCCCC"> to this this range like</font>

1191
00:46:12,759 --> 00:46:17,739
<font color="#CCCCCC">earliest sample until</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> so I did this</font>

1192
00:46:15,910 --> 00:46:21,609
late<font color="#E5E5E5"> October so that's the the upper</font>

1193
00:46:17,739 --> 00:46:24,430
border and this was with 949<font color="#E5E5E5"> Canada</font>

1194
00:46:21,609 --> 00:46:26,049
<font color="#E5E5E5">timestamp</font><font color="#CCCCCC"> pairs that</font><font color="#E5E5E5"> we can look at and</font>

1195
00:46:24,430 --> 00:46:29,140
see the<font color="#CCCCCC"> distribution looks</font><font color="#E5E5E5"> somehow like</font>

1196
00:46:26,049 --> 00:46:30,849
this<font color="#E5E5E5"> so mine again this is basically the</font>

1197
00:46:29,140 --> 00:46:32,799
<font color="#CCCCCC">number</font><font color="#E5E5E5"> of samples and what we can</font>

1198
00:46:30,849 --> 00:46:34,599
<font color="#E5E5E5">observe here</font><font color="#CCCCCC"> a good 10</font><font color="#E5E5E5"> percent are</font>

1199
00:46:32,799 --> 00:46:35,210
basically so basically<font color="#CCCCCC"> this black tie</font>

1200
00:46:34,599 --> 00:46:37,040
and<font color="#E5E5E5"> direct</font>

1201
00:46:35,210 --> 00:46:38,960
<font color="#E5E5E5">to the left</font><font color="#CCCCCC"> is a submitted to virustotal</font>

1202
00:46:37,040 --> 00:46:42,140
<font color="#CCCCCC">on the very same</font><font color="#E5E5E5"> day</font><font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> find</font>

1203
00:46:38,960 --> 00:46:45,820
the EDP<font color="#CCCCCC"> time stamp a good 30% are within</font>

1204
00:46:42,140 --> 00:46:50,118
the first week<font color="#E5E5E5"> 50% within one month so</font>

1205
00:46:45,820 --> 00:46:52,190
at least in many cases<font color="#E5E5E5"> it's it's likely</font>

1206
00:46:50,119 --> 00:46:53,780
that<font color="#CCCCCC"> EP</font><font color="#E5E5E5"> attempts them will be somewhat</font>

1207
00:46:52,190 --> 00:46:54,950
correct<font color="#CCCCCC"> so sometimes you have to</font>

1208
00:46:53,780 --> 00:46:56,599
consider<font color="#E5E5E5"> what's</font><font color="#CCCCCC"> happening after</font><font color="#E5E5E5"> the</font>

1209
00:46:54,950 --> 00:46:58,250
<font color="#E5E5E5">compilation</font><font color="#CCCCCC"> maybe the guy gives</font><font color="#E5E5E5"> his</font>

1210
00:46:56,599 --> 00:47:00,470
malware to someone else or<font color="#E5E5E5"> it depends</font><font color="#CCCCCC"> on</font>

1211
00:46:58,250 --> 00:47:02,359
<font color="#CCCCCC">a Pacolet it's basically as an</font><font color="#E5E5E5"> external</font>

1212
00:47:00,470 --> 00:47:04,189
service<font color="#E5E5E5"> it has</font><font color="#CCCCCC"> to be delivered</font><font color="#E5E5E5"> to spam</font>

1213
00:47:02,359 --> 00:47:06,080
campaign<font color="#E5E5E5"> so</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> explained</font>

1214
00:47:04,190 --> 00:47:09,290
explains why you might have<font color="#E5E5E5"> some some</font>

1215
00:47:06,080 --> 00:47:11,560
gap there so altogether<font color="#E5E5E5"> about 80% of the</font>

1216
00:47:09,290 --> 00:47:16,609
time stamps live within one year of the

1217
00:47:11,560 --> 00:47:19,490
pre-computation term so<font color="#E5E5E5"> 206 samples fall</font>

1218
00:47:16,609 --> 00:47:21,619
out of<font color="#E5E5E5"> this range</font><font color="#CCCCCC"> a good third of them</font>

1219
00:47:19,490 --> 00:47:23,089
has<font color="#E5E5E5"> a</font><font color="#CCCCCC"> PT background</font><font color="#E5E5E5"> so that's something</font>

1220
00:47:21,619 --> 00:47:26,089
that<font color="#CCCCCC"> you can observe sometimes you get</font>

1221
00:47:23,089 --> 00:47:28,070
an<font color="#E5E5E5"> apt report published and some one to</font>

1222
00:47:26,089 --> 00:47:30,080
three<font color="#E5E5E5"> weeks earlier push those samples</font>

1223
00:47:28,070 --> 00:47:31,700
referenced in there<font color="#CCCCCC"> onto virustotal</font>

1224
00:47:30,080 --> 00:47:34,060
and they have been<font color="#E5E5E5"> withheld before</font>

1225
00:47:31,700 --> 00:47:37,279
<font color="#E5E5E5">that's probably one of the</font><font color="#CCCCCC"> reasons</font><font color="#E5E5E5"> there</font>

1226
00:47:34,060 --> 00:47:39,080
<font color="#E5E5E5">sometimes you have leak builders so if</font>

1227
00:47:37,280 --> 00:47:42,050
you are now using<font color="#E5E5E5"> Citadel builder it</font>

1228
00:47:39,080 --> 00:47:43,670
will still contain<font color="#E5E5E5"> the same stuff as for</font>

1229
00:47:42,050 --> 00:47:45,650
four years ago or<font color="#CCCCCC"> something so</font><font color="#E5E5E5"> this</font>

1230
00:47:43,670 --> 00:47:49,490
means<font color="#E5E5E5"> why you might have fresh samples</font>

1231
00:47:45,650 --> 00:47:51,140
with a very old<font color="#CCCCCC"> time stamp</font><font color="#E5E5E5"> for some</font>

1232
00:47:49,490 --> 00:47:52,848
<font color="#CCCCCC">families</font><font color="#E5E5E5"> I know that they've been</font><font color="#CCCCCC"> using</font>

1233
00:47:51,140 --> 00:47:56,060
forgery because<font color="#E5E5E5"> some other fields also</font>

1234
00:47:52,849 --> 00:47:56,780
faked<font color="#E5E5E5"> and for the rest I have no idea</font>

1235
00:47:56,060 --> 00:47:58,700
<font color="#E5E5E5">voids</font><font color="#CCCCCC"> that</font>

1236
00:47:56,780 --> 00:48:02,000
so probably<font color="#E5E5E5"> also for</font><font color="#CCCCCC"> Tory or</font><font color="#E5E5E5"> some some</font>

1237
00:47:58,700 --> 00:48:05,480
other results<font color="#CCCCCC"> then again we had a</font><font color="#E5E5E5"> look</font>

1238
00:48:02,000 --> 00:48:07,520
at the compilation<font color="#E5E5E5"> of those families</font><font color="#CCCCCC"> so</font>

1239
00:48:05,480 --> 00:48:10,910
using detected easy or similar methods

1240
00:48:07,520 --> 00:48:14,359
we<font color="#CCCCCC"> can identify run</font><font color="#E5E5E5"> about 500 data</font>

1241
00:48:10,910 --> 00:48:16,450
points across<font color="#E5E5E5"> those families and here</font>

1242
00:48:14,359 --> 00:48:19,040
Microsoft which<font color="#CCCCCC"> I see is by</font><font color="#E5E5E5"> far the most</font>

1243
00:48:16,450 --> 00:48:21,680
common<font color="#CCCCCC"> compiler</font><font color="#E5E5E5"> chain that's been used</font>

1244
00:48:19,040 --> 00:48:24,890
<font color="#E5E5E5">to to create malware one data point</font>

1245
00:48:21,680 --> 00:48:28,580
<font color="#CCCCCC">kinda sticks out there so we see six is</font>

1246
00:48:24,890 --> 00:48:31,759
used almost<font color="#CCCCCC"> as much as</font><font color="#E5E5E5"> the more recent</font>

1247
00:48:28,580 --> 00:48:34,009
ones<font color="#E5E5E5"> which was a bit surprising</font><font color="#CCCCCC"> then</font>

1248
00:48:31,760 --> 00:48:37,330
again we see<font color="#E5E5E5"> six also gives you</font>

1249
00:48:34,010 --> 00:48:40,339
basically linking against the standard

1250
00:48:37,330 --> 00:48:41,990
<font color="#CCCCCC">runtime that's always on Windows so</font><font color="#E5E5E5"> that</font>

1251
00:48:40,339 --> 00:48:43,849
basically<font color="#E5E5E5"> also ensures that your your</font>

1252
00:48:41,990 --> 00:48:44,930
problems<font color="#E5E5E5"> your program</font><font color="#CCCCCC"> is not crashing if</font>

1253
00:48:43,849 --> 00:48:47,690
it's basically not finding its

1254
00:48:44,930 --> 00:48:49,009
dependencies yeah we also have<font color="#E5E5E5"> Richard</font>

1255
00:48:47,690 --> 00:48:52,910
us<font color="#CCCCCC"> for runner BOTS</font>

1256
00:48:49,010 --> 00:48:55,670
<font color="#CCCCCC">760 different samples and</font><font color="#E5E5E5"> basically in</font>

1257
00:48:52,910 --> 00:48:58,580
all cases<font color="#E5E5E5"> it's consistent with d-link</font>

1258
00:48:55,670 --> 00:49:01,280
afield<font color="#E5E5E5"> so you would have a matching a</font>

1259
00:48:58,580 --> 00:49:04,549
product ID in the originator<font color="#E5E5E5"> compared to</font>

1260
00:49:01,280 --> 00:49:06,020
the compiler linker field data<font color="#CCCCCC"> there</font>

1261
00:49:04,550 --> 00:49:07,670
directly<font color="#E5E5E5"> is are not touching here</font>

1262
00:49:06,020 --> 00:49:10,370
because<font color="#CCCCCC"> that's also way</font><font color="#E5E5E5"> too much data</font>

1263
00:49:07,670 --> 00:49:12,560
but<font color="#CCCCCC"> there's going</font><font color="#E5E5E5"> to be</font><font color="#CCCCCC"> a paper so for</font>

1264
00:49:10,370 --> 00:49:15,710
control flow graphs we did some<font color="#E5E5E5"> very</font>

1265
00:49:12,560 --> 00:49:18,320
fast or cursory disassembly on all<font color="#E5E5E5"> those</font>

1266
00:49:15,710 --> 00:49:22,570
families<font color="#CCCCCC"> what you can find</font><font color="#E5E5E5"> there your</font>

1267
00:49:18,320 --> 00:49:26,960
average<font color="#CCCCCC"> map</font><font color="#E5E5E5"> is probably around 440</font>

1268
00:49:22,570 --> 00:49:30,440
functions in size so most of the members

1269
00:49:26,960 --> 00:49:33,170
basically around<font color="#CCCCCC"> dead size now what's</font>

1270
00:49:30,440 --> 00:49:35,240
very<font color="#CCCCCC"> interesting if you</font><font color="#E5E5E5"> look at the</font>

1271
00:49:33,170 --> 00:49:37,100
<font color="#E5E5E5">correlation between for example function</font>

1272
00:49:35,240 --> 00:49:40,250
of basic log functions and<font color="#CCCCCC"> instruction</font>

1273
00:49:37,100 --> 00:49:42,920
<font color="#E5E5E5">and stuff like that</font><font color="#CCCCCC"> they seem to have</font><font color="#E5E5E5"> a</font>

1274
00:49:40,250 --> 00:49:45,860
very<font color="#E5E5E5"> high linear correlation so normally</font>

1275
00:49:42,920 --> 00:49:47,780
you would have<font color="#CCCCCC"> roundabout ish nine to</font>

1276
00:49:45,860 --> 00:49:50,560
<font color="#E5E5E5">ten basic</font><font color="#CCCCCC"> parts per function and fifty</font>

1277
00:49:47,780 --> 00:49:52,760
to<font color="#CCCCCC"> sixty instructions per function and</font>

1278
00:49:50,560 --> 00:49:54,500
this was a bit<font color="#E5E5E5"> surprising because that</font>

1279
00:49:52,760 --> 00:49:58,430
basically<font color="#E5E5E5"> means that there has to be</font>

1280
00:49:54,500 --> 00:50:00,950
some connections in<font color="#E5E5E5"> the code</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

1281
00:49:58,430 --> 00:50:04,370
probably worth looking deeper on and on

1282
00:50:00,950 --> 00:50:06,560
the other hand<font color="#E5E5E5"> maybe personal coding</font>

1283
00:50:04,370 --> 00:50:08,900
style is not as expressive as<font color="#E5E5E5"> we hope</font>

1284
00:50:06,560 --> 00:50:11,090
when we are<font color="#CCCCCC"> using these kinds</font><font color="#E5E5E5"> of codes</font>

1285
00:50:08,900 --> 00:50:13,820
of<font color="#CCCCCC"> fingerprinting authors but that's</font>

1286
00:50:11,090 --> 00:50:17,120
basically research in the future<font color="#CCCCCC"> okay</font>

1287
00:50:13,820 --> 00:50:19,850
<font color="#CCCCCC">pdb information what</font><font color="#E5E5E5"> you basically have</font>

1288
00:50:17,120 --> 00:50:23,600
to speed up<font color="#CCCCCC"> a bit can see there is</font>

1289
00:50:19,850 --> 00:50:26,360
basically in at least<font color="#E5E5E5"> 50 cases the PDB</font>

1290
00:50:23,600 --> 00:50:27,830
string basically<font color="#E5E5E5"> gave also one name of</font>

1291
00:50:26,360 --> 00:50:29,240
the<font color="#CCCCCC"> mellow</font><font color="#E5E5E5"> family so if you're wondering</font>

1292
00:50:27,830 --> 00:50:31,430
<font color="#E5E5E5">where</font><font color="#CCCCCC"> all those names are coming</font><font color="#E5E5E5"> from</font>

1293
00:50:29,240 --> 00:50:36,529
PDB strings<font color="#E5E5E5"> or at least one of those</font>

1294
00:50:31,430 --> 00:50:39,049
sources yeah windows<font color="#E5E5E5"> API usage so I</font>

1295
00:50:36,530 --> 00:50:40,700
still<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to cover</font><font color="#E5E5E5"> that so I</font><font color="#CCCCCC"> think I've</font>

1296
00:50:39,050 --> 00:50:42,410
published a tool<font color="#E5E5E5"> earlier this year which</font>

1297
00:50:40,700 --> 00:50:44,319
<font color="#CCCCCC">is</font><font color="#E5E5E5"> API</font><font color="#CCCCCC"> scout and it's basically</font>

1298
00:50:42,410 --> 00:50:47,859
something<font color="#E5E5E5"> that helps you with API record</font>

1299
00:50:44,320 --> 00:50:50,060
reconstruction for known environments so

1300
00:50:47,860 --> 00:50:52,340
we<font color="#E5E5E5"> first</font><font color="#CCCCCC"> want to look at the usage</font>

1301
00:50:50,060 --> 00:50:54,290
<font color="#E5E5E5">styles of malware so basically are they</font>

1302
00:50:52,340 --> 00:50:54,680
using an import table doing<font color="#CCCCCC"> dynamic</font>

1303
00:50:54,290 --> 00:50:56,420
loading

1304
00:50:54,680 --> 00:50:58,520
<font color="#CCCCCC">are they having association at that</font><font color="#E5E5E5"> kind</font>

1305
00:50:56,420 --> 00:50:59,390
of<font color="#E5E5E5"> stuff and then the frequencies with</font>

1306
00:50:58,520 --> 00:51:01,880
which if you

1307
00:50:59,390 --> 00:51:04,308
<font color="#CCCCCC">I used so the idea here is basically you</font>

1308
00:51:01,880 --> 00:51:06,980
<font color="#CCCCCC">can</font><font color="#E5E5E5"> brute force</font><font color="#CCCCCC"> a memory buffer and find</font>

1309
00:51:04,309 --> 00:51:09,170
<font color="#CCCCCC">ostatic</font><font color="#E5E5E5"> offsets so if</font><font color="#CCCCCC"> you're doing</font>

1310
00:51:06,980 --> 00:51:12,140
<font color="#E5E5E5">dynamic analysis you are very familiar</font>

1311
00:51:09,170 --> 00:51:14,619
probably with this<font color="#E5E5E5"> import address table</font>

1312
00:51:12,140 --> 00:51:17,720
format and the<font color="#E5E5E5"> way that normal</font>

1313
00:51:14,619 --> 00:51:19,519
basically<font color="#E5E5E5"> unpack</font><font color="#CCCCCC"> azure dampers work is</font>

1314
00:51:17,720 --> 00:51:22,868
basically<font color="#CCCCCC"> that they pass the structure</font>

1315
00:51:19,519 --> 00:51:25,339
<font color="#E5E5E5">and reconstruct it but in many cases you</font>

1316
00:51:22,869 --> 00:51:27,740
<font color="#CCCCCC">will</font><font color="#E5E5E5"> also run into some issues basically</font>

1317
00:51:25,339 --> 00:51:30,470
<font color="#E5E5E5">dumping and fixing them so what I</font>

1318
00:51:27,740 --> 00:51:32,479
thought would be<font color="#E5E5E5"> a good idea is</font>

1319
00:51:30,470 --> 00:51:34,399
basically<font color="#CCCCCC"> just looking at every D word</font>

1320
00:51:32,480 --> 00:51:35,960
in a buffer<font color="#E5E5E5"> and checking if it's</font>

1321
00:51:34,400 --> 00:51:38,140
potentially one<font color="#E5E5E5"> of those api's</font><font color="#CCCCCC"> and</font>

1322
00:51:35,960 --> 00:51:40,970
that's basically what if you<font color="#E5E5E5"> I</font><font color="#CCCCCC"> scared</font><font color="#E5E5E5"> us</font>

1323
00:51:38,140 --> 00:51:42,710
<font color="#CCCCCC">it's also having an</font><font color="#E5E5E5"> Ida</font><font color="#CCCCCC"> plugin so you</font>

1324
00:51:40,970 --> 00:51:45,109
can directly<font color="#CCCCCC"> use the database that you</font>

1325
00:51:42,710 --> 00:51:46,940
<font color="#CCCCCC">have</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> operating system</font><font color="#CCCCCC"> get all</font>

1326
00:51:45,109 --> 00:51:50,240
of those various resolved and can

1327
00:51:46,940 --> 00:51:52,400
directly apply them<font color="#CCCCCC"> it seems to be a</font>

1328
00:51:50,240 --> 00:51:54,558
very<font color="#E5E5E5"> accurate approach as well because</font>

1329
00:51:52,400 --> 00:51:56,990
I've been testing it<font color="#CCCCCC"> on good</font><font color="#E5E5E5"> wear and a</font>

1330
00:51:54,559 --> 00:51:58,339
perform good currently<font color="#E5E5E5"> it's not working</font>

1331
00:51:56,990 --> 00:52:03,410
on either seven<font color="#E5E5E5"> because the pipe in API</font>

1332
00:51:58,339 --> 00:52:05,119
is totally broken<font color="#CCCCCC"> usage</font><font color="#E5E5E5"> styles so across</font>

1333
00:52:03,410 --> 00:52:07,609
<font color="#CCCCCC">three hundred eighty families that are</font>

1334
00:52:05,119 --> 00:52:09,980
not<font color="#E5E5E5"> dotnet so I directly interacting</font>

1335
00:52:07,609 --> 00:52:13,430
with<font color="#E5E5E5"> the windows API</font><font color="#CCCCCC"> it looks like this</font>

1336
00:52:09,980 --> 00:52:16,009
<font color="#E5E5E5">so the majority of the</font><font color="#CCCCCC"> families is using</font>

1337
00:52:13,430 --> 00:52:19,940
standard imports so<font color="#E5E5E5"> a good</font><font color="#CCCCCC"> forty</font><font color="#E5E5E5"> six</font>

1338
00:52:16,009 --> 00:52:21,680
percent and on the other hand almost<font color="#E5E5E5"> the</font>

1339
00:52:19,940 --> 00:52:23,170
same fraction<font color="#E5E5E5"> is doing dynamic imports</font>

1340
00:52:21,680 --> 00:52:26,660
another<font color="#CCCCCC"> fifty</font><font color="#E5E5E5"> percent that's here</font><font color="#CCCCCC"> so</font>

1341
00:52:23,170 --> 00:52:30,109
<font color="#CCCCCC">those are very</font><font color="#E5E5E5"> easily</font><font color="#CCCCCC"> reconstructed with</font>

1342
00:52:26,660 --> 00:52:32,210
<font color="#CCCCCC">API</font><font color="#E5E5E5"> code which is very good news on the</font>

1343
00:52:30,109 --> 00:52:34,940
other<font color="#E5E5E5"> hand</font><font color="#CCCCCC"> our fist occasion for API</font>

1344
00:52:32,210 --> 00:52:36,710
usage seems not to<font color="#CCCCCC"> be that common</font>

1345
00:52:34,940 --> 00:52:40,430
actually<font color="#E5E5E5"> so</font><font color="#CCCCCC"> um they're some of the</font>

1346
00:52:36,710 --> 00:52:42,950
<font color="#E5E5E5">methods listed</font><font color="#CCCCCC"> but less than I think</font>

1347
00:52:40,430 --> 00:52:45,169
<font color="#CCCCCC">twenty families right now</font><font color="#E5E5E5"> but I still</font>

1348
00:52:42,950 --> 00:52:46,788
have to go deeper and<font color="#E5E5E5"> this statistics</font>

1349
00:52:45,170 --> 00:52:48,410
will be updated<font color="#E5E5E5"> over time so this is</font>

1350
00:52:46,789 --> 00:52:50,900
<font color="#CCCCCC">this number</font><font color="#E5E5E5"> of obfuscated families will</font>

1351
00:52:48,410 --> 00:52:52,549
decrease<font color="#E5E5E5"> potentially now little face</font>

1352
00:52:50,900 --> 00:52:56,869
what's the most<font color="#CCCCCC"> common a P I call a</font>

1353
00:52:52,549 --> 00:53:01,250
<font color="#E5E5E5">cross off to</font><font color="#CCCCCC"> semele s</font><font color="#E5E5E5"> what what</font><font color="#CCCCCC"> you</font>

1354
00:52:56,869 --> 00:53:03,079
protect<font color="#E5E5E5"> no sleep why sleep</font><font color="#CCCCCC"> I guess</font>

1355
00:53:01,250 --> 00:53:05,089
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> if you want to orchestrate</font>

1356
00:53:03,079 --> 00:53:07,220
autonomous behavior<font color="#CCCCCC"> sleep is like very</font>

1357
00:53:05,089 --> 00:53:09,410
generic you<font color="#E5E5E5"> can use it to delay C&C</font>

1358
00:53:07,220 --> 00:53:11,509
communication you<font color="#CCCCCC"> can use it to delay</font>

1359
00:53:09,410 --> 00:53:13,170
execution and basically orchestrate how

1360
00:53:11,509 --> 00:53:16,400
a<font color="#E5E5E5"> program is running</font>

1361
00:53:13,170 --> 00:53:20,970
so many of the other ones<font color="#E5E5E5"> probably also</font>

1362
00:53:16,400 --> 00:53:22,740
<font color="#E5E5E5">beautiful specs for</font><font color="#CCCCCC"> dll it's very much</font>

1363
00:53:20,970 --> 00:53:25,169
the<font color="#CCCCCC"> same but I was not</font><font color="#E5E5E5"> really happy</font>

1364
00:53:22,740 --> 00:53:26,250
<font color="#E5E5E5">because if you look at it that way</font><font color="#CCCCCC"> and</font>

1365
00:53:25,170 --> 00:53:28,230
you still<font color="#CCCCCC"> end up with like three</font>

1366
00:53:26,250 --> 00:53:30,290
<font color="#E5E5E5">thousand seven hundred different API is</font>

1367
00:53:28,230 --> 00:53:32,550
<font color="#CCCCCC">used</font><font color="#E5E5E5"> across all of those families and</font>

1368
00:53:30,290 --> 00:53:33,140
the<font color="#E5E5E5"> graph for those looks a bit like</font>

1369
00:53:32,550 --> 00:53:37,110
<font color="#CCCCCC">that</font>

1370
00:53:33,140 --> 00:53:39,120
however there's very good<font color="#E5E5E5"> news the</font>

1371
00:53:37,110 --> 00:53:42,270
pattern of this graph basically<font color="#E5E5E5"> tells us</font>

1372
00:53:39,120 --> 00:53:44,670
that the composition<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> API</font><font color="#E5E5E5"> set you</font>

1373
00:53:42,270 --> 00:53:47,220
<font color="#E5E5E5">finds for a family is</font><font color="#CCCCCC"> probably rather</font>

1374
00:53:44,670 --> 00:53:49,230
unique<font color="#E5E5E5"> so the API footprint has met that</font>

1375
00:53:47,220 --> 00:53:50,879
<font color="#CCCCCC">Marva has might help</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> to identify it</font>

1376
00:53:49,230 --> 00:53:52,380
and<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> probably also</font><font color="#E5E5E5"> a reason why</font>

1377
00:53:50,880 --> 00:53:56,790
<font color="#CCCCCC">impatient</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> fuzzy</font><font color="#E5E5E5"> and stuff like that</font>

1378
00:53:52,380 --> 00:53:58,260
kind<font color="#E5E5E5"> of performs quite well yeah I'm</font>

1379
00:53:56,790 --> 00:54:00,540
gonna skip that so basically<font color="#CCCCCC"> I've also</font>

1380
00:53:58,260 --> 00:54:02,700
been<font color="#CCCCCC"> doing API constic context</font><font color="#E5E5E5"> groups so</font>

1381
00:54:00,540 --> 00:54:04,980
I labeled another<font color="#E5E5E5"> 3,000 offer IP</font><font color="#CCCCCC"> I calls</font>

1382
00:54:02,700 --> 00:54:06,930
<font color="#E5E5E5">into groups so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> end up with like</font><font color="#CCCCCC"> QR</font>

1383
00:54:04,980 --> 00:54:09,420
execution string<font color="#E5E5E5"> all the kind of stuff</font>

1384
00:54:06,930 --> 00:54:11,399
because<font color="#E5E5E5"> otherwise you run into this</font>

1385
00:54:09,420 --> 00:54:13,020
issue<font color="#E5E5E5"> that if you look at</font><font color="#CCCCCC"> network you</font>

1386
00:54:11,400 --> 00:54:15,300
have different<font color="#E5E5E5"> ways to achieve the same</font>

1387
00:54:13,020 --> 00:54:19,290
<font color="#CCCCCC">effect</font><font color="#E5E5E5"> so it could do HTTP yourself</font>

1388
00:54:15,300 --> 00:54:22,230
using<font color="#CCCCCC"> sock</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> basic do</font><font color="#E5E5E5"> the via 32</font><font color="#CCCCCC"> dll</font>

1389
00:54:19,290 --> 00:54:24,690
you can use<font color="#CCCCCC"> Windsor</font><font color="#E5E5E5"> or use the HTTP hi</font>

1390
00:54:22,230 --> 00:54:26,640
other videos and that basically<font color="#CCCCCC"> this API</font>

1391
00:54:24,690 --> 00:54:30,090
contact<font color="#E5E5E5"> groups is a way to to merge them</font>

1392
00:54:26,640 --> 00:54:32,970
to some<font color="#CCCCCC"> degree and looking at it that</font>

1393
00:54:30,090 --> 00:54:35,520
way<font color="#E5E5E5"> um</font><font color="#CCCCCC"> we can see that</font><font color="#E5E5E5"> not every malware</font>

1394
00:54:32,970 --> 00:54:37,049
seems to be<font color="#E5E5E5"> using network</font><font color="#CCCCCC"> if we think</font><font color="#E5E5E5"> of</font>

1395
00:54:35,520 --> 00:54:38,370
modern or some of<font color="#CCCCCC"> you ran some of your</font>

1396
00:54:37,050 --> 00:54:39,810
families<font color="#E5E5E5"> they are just showing you an</font>

1397
00:54:38,370 --> 00:54:41,460
email<font color="#E5E5E5"> address but you have to contact</font>

1398
00:54:39,810 --> 00:54:42,390
their<font color="#CCCCCC"> order and stuff</font><font color="#E5E5E5"> like that so that</font>

1399
00:54:41,460 --> 00:54:46,110
might<font color="#CCCCCC"> be a reason why</font><font color="#E5E5E5"> they are not</font>

1400
00:54:42,390 --> 00:54:48,029
<font color="#E5E5E5">calling out to the C&C servers same for</font>

1401
00:54:46,110 --> 00:54:49,140
the<font color="#E5E5E5"> other data as well but what I'm</font>

1402
00:54:48,030 --> 00:54:50,880
doing<font color="#CCCCCC"> right now is mostly showing you</font>

1403
00:54:49,140 --> 00:54:52,560
data<font color="#CCCCCC"> and the slides that</font><font color="#E5E5E5"> will be</font>

1404
00:54:50,880 --> 00:54:54,750
available directly not after<font color="#E5E5E5"> the</font>

1405
00:54:52,560 --> 00:54:57,029
presentation so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can read it</font><font color="#CCCCCC"> up also</font>

1406
00:54:54,750 --> 00:55:00,150
<font color="#E5E5E5">by yourself okay so what's the future</font>

1407
00:54:57,030 --> 00:55:01,830
for<font color="#CCCCCC"> this project of course</font><font color="#E5E5E5"> we want to</font>

1408
00:55:00,150 --> 00:55:04,230
<font color="#E5E5E5">maintain this data set</font><font color="#CCCCCC"> an extended</font><font color="#E5E5E5"> I</font>

1409
00:55:01,830 --> 00:55:05,910
hope that you<font color="#E5E5E5"> like</font><font color="#CCCCCC"> it that much</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font>

1410
00:55:04,230 --> 00:55:07,560
want<font color="#E5E5E5"> to have not an account for it and</font>

1411
00:55:05,910 --> 00:55:09,920
want to interact with the data so that

1412
00:55:07,560 --> 00:55:12,420
<font color="#E5E5E5">would be like a really cool</font><font color="#CCCCCC"> thing and</font>

1413
00:55:09,920 --> 00:55:15,060
<font color="#E5E5E5">since it's focused on identification</font><font color="#CCCCCC"> we</font>

1414
00:55:12,420 --> 00:55:18,930
probably<font color="#E5E5E5"> extend some of the aspects here</font>

1415
00:55:15,060 --> 00:55:20,460
as well for for research<font color="#CCCCCC"> I guess but I</font>

1416
00:55:18,930 --> 00:55:22,890
<font color="#E5E5E5">showed to</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> today is basically only</font>

1417
00:55:20,460 --> 00:55:24,300
scratching the surface<font color="#E5E5E5"> and the next step</font>

1418
00:55:22,890 --> 00:55:25,519
<font color="#E5E5E5">have already begun is basically looking</font>

1419
00:55:24,300 --> 00:55:28,609
<font color="#E5E5E5">deeper into</font><font color="#CCCCCC"> it</font>

1420
00:55:25,519 --> 00:55:30,738
doing basically<font color="#E5E5E5"> code indexation across</font>

1421
00:55:28,609 --> 00:55:33,259
all of those families<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> major goal</font>

1422
00:55:30,739 --> 00:55:34,969
would be to identify<font color="#CCCCCC"> unique</font><font color="#E5E5E5"> code or</font>

1423
00:55:33,259 --> 00:55:37,009
shared code across<font color="#E5E5E5"> all of those</font>

1424
00:55:34,969 --> 00:55:39,199
<font color="#CCCCCC">different families</font><font color="#E5E5E5"> and ultimately</font>

1425
00:55:37,009 --> 00:55:42,289
getting<font color="#CCCCCC"> a</font><font color="#E5E5E5"> better idea how functionality</font>

1426
00:55:39,199 --> 00:55:46,339
is encoded<font color="#E5E5E5"> into malware across all of</font>

1427
00:55:42,289 --> 00:55:48,559
those different<font color="#CCCCCC"> families</font><font color="#E5E5E5"> okay so</font>

1428
00:55:46,339 --> 00:55:50,569
basically<font color="#E5E5E5"> the public</font><font color="#CCCCCC"> launches today if</font>

1429
00:55:48,559 --> 00:55:52,249
you<font color="#E5E5E5"> want to have access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> it come talk</font>

1430
00:55:50,569 --> 00:55:54,049
to me<font color="#E5E5E5"> so I run by the principle of no</font>

1431
00:55:52,249 --> 00:55:56,089
mattress<font color="#E5E5E5"> so if you talk to me you</font>

1432
00:55:54,049 --> 00:55:58,669
<font color="#CCCCCC">already did</font><font color="#E5E5E5"> no one met so that's a good</font>

1433
00:55:56,089 --> 00:56:00,828
<font color="#CCCCCC">thing otherwise</font><font color="#E5E5E5"> there's some existing</font>

1434
00:55:58,669 --> 00:56:02,538
users<font color="#E5E5E5"> who can now also invite further</font>

1435
00:56:00,829 --> 00:56:05,059
users so that's the way how I want<font color="#E5E5E5"> to</font>

1436
00:56:02,539 --> 00:56:07,959
grow this thing<font color="#E5E5E5"> organically with that</font>

1437
00:56:05,059 --> 00:56:07,959
thank you<font color="#CCCCCC"> for your attention</font>

1438
00:56:14,350 --> 00:56:18,380
thanks Daniel for<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> working</font><font color="#E5E5E5"> for</font>

1439
00:56:17,240 --> 00:56:29,720
your talk

1440
00:56:18,380 --> 00:56:31,310
are there any questions<font color="#E5E5E5"> Tom there thank</font>

1441
00:56:29,720 --> 00:56:35,830
you for your talk<font color="#E5E5E5"> very interesting</font>

1442
00:56:31,310 --> 00:56:39,200
project<font color="#CCCCCC"> you you talked a lot about</font>

1443
00:56:35,830 --> 00:56:41,120
executables<font color="#CCCCCC"> and I think you just</font><font color="#E5E5E5"> briefly</font>

1444
00:56:39,200 --> 00:56:44,799
mentioned something about JavaScript or

1445
00:56:41,120 --> 00:56:47,480
Java<font color="#E5E5E5"> archive like</font><font color="#CCCCCC"> adwin grad families</font>

1446
00:56:44,800 --> 00:56:50,000
<font color="#CCCCCC">how many of those do</font><font color="#E5E5E5"> you have covered</font>

1447
00:56:47,480 --> 00:56:52,340
<font color="#E5E5E5">also like PowerShell malware and all</font>

1448
00:56:50,000 --> 00:56:55,520
kind<font color="#CCCCCC"> of like</font><font color="#E5E5E5"> non-executable malware</font>

1449
00:56:52,340 --> 00:56:57,110
types that<font color="#CCCCCC"> you have covered yet it kind</font>

1450
00:56:55,520 --> 00:57:00,259
of depends on<font color="#E5E5E5"> since I'm mostly looking</font>

1451
00:56:57,110 --> 00:57:02,210
<font color="#E5E5E5">at public sources those are less likely</font>

1452
00:57:00,260 --> 00:57:04,490
<font color="#E5E5E5">to encounter in public archives likelike</font>

1453
00:57:02,210 --> 00:57:06,080
<font color="#E5E5E5">VT and stuff like that so if you have</font>

1454
00:57:04,490 --> 00:57:07,580
pointers to them I'm<font color="#CCCCCC"> very happy so I</font>

1455
00:57:06,080 --> 00:57:08,960
<font color="#CCCCCC">think right now</font><font color="#E5E5E5"> it's maybe like 30</font>

1456
00:57:07,580 --> 00:57:12,430
families or something so it's not as

1457
00:57:08,960 --> 00:57:15,530
<font color="#E5E5E5">much certainly as the other ones okay</font><font color="#CCCCCC"> I</font>

1458
00:57:12,430 --> 00:57:25,549
<font color="#CCCCCC">think there is a question</font><font color="#E5E5E5"> just right</font>

1459
00:57:15,530 --> 00:57:28,700
there<font color="#E5E5E5"> Anna</font><font color="#CCCCCC"> thanks for the talk was seems</font>

1460
00:57:25,550 --> 00:57:34,130
like a really great tool my question is

1461
00:57:28,700 --> 00:57:35,930
very<font color="#E5E5E5"> simple can I get an axis so that's</font>

1462
00:57:34,130 --> 00:57:37,190
basically<font color="#CCCCCC"> what I</font><font color="#E5E5E5"> just said so</font><font color="#CCCCCC"> come talk</font>

1463
00:57:35,930 --> 00:57:40,220
to<font color="#CCCCCC"> me and we can arrange</font><font color="#E5E5E5"> the kind of</font>

1464
00:57:37,190 --> 00:57:46,100
stuff<font color="#E5E5E5"> okay there is a last question over</font>

1465
00:57:40,220 --> 00:57:48,859
<font color="#E5E5E5">there</font><font color="#CCCCCC"> I don't know great research</font><font color="#E5E5E5"> when</font>

1466
00:57:46,100 --> 00:57:51,620
<font color="#CCCCCC">describing</font><font color="#E5E5E5"> the mob our families are you</font>

1467
00:57:48,860 --> 00:57:55,340
just focused on static parts or do you

1468
00:57:51,620 --> 00:57:57,560
also describe based on the<font color="#E5E5E5"> behavior</font><font color="#CCCCCC"> so</font>

1469
00:57:55,340 --> 00:57:58,880
right now it's<font color="#E5E5E5"> really focused on static</font>

1470
00:57:57,560 --> 00:58:00,890
analysis because I want<font color="#E5E5E5"> to have clean</font>

1471
00:57:58,880 --> 00:58:02,840
<font color="#E5E5E5">dumps because that is something</font><font color="#CCCCCC"> that we</font>

1472
00:58:00,890 --> 00:58:05,720
can disassemble and then dive<font color="#E5E5E5"> into so</font>

1473
00:58:02,840 --> 00:58:07,700
that's the idea<font color="#CCCCCC"> here I do not</font><font color="#E5E5E5"> intend</font><font color="#CCCCCC"> for</font>

1474
00:58:05,720 --> 00:58:10,129
example to have like<font color="#E5E5E5"> cocoa reports for</font>

1475
00:58:07,700 --> 00:58:11,660
all<font color="#E5E5E5"> of that</font><font color="#CCCCCC"> stuff so that's probably</font>

1476
00:58:10,130 --> 00:58:13,160
<font color="#E5E5E5">also not representative because you</font>

1477
00:58:11,660 --> 00:58:15,350
always<font color="#E5E5E5"> have to pecker in front because</font>

1478
00:58:13,160 --> 00:58:17,420
there's no clean<font color="#CCCCCC"> up example and you</font>

1479
00:58:15,350 --> 00:58:19,630
don't know where basically<font color="#E5E5E5"> to cut into</font>

1480
00:58:17,420 --> 00:58:21,980
the<font color="#CCCCCC"> the runtime behavior more or less</font>

1481
00:58:19,630 --> 00:58:23,480
<font color="#E5E5E5">but it's basically is something that you</font>

1482
00:58:21,980 --> 00:58:25,070
could do by just<font color="#CCCCCC"> using</font><font color="#E5E5E5"> the data for</font>

1483
00:58:23,480 --> 00:58:26,640
<font color="#CCCCCC">example</font><font color="#E5E5E5"> so if there's another one who</font>

1484
00:58:25,070 --> 00:58:31,760
wants<font color="#E5E5E5"> to pick up that stuff</font><font color="#CCCCCC"> and</font>

1485
00:58:26,640 --> 00:58:34,450
<font color="#E5E5E5">present</font><font color="#CCCCCC"> those</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> runtimes</font><font color="#E5E5E5"> happy to do so</font>

1486
00:58:31,760 --> 00:58:37,610
<font color="#E5E5E5">okay thanks Daniel</font>

1487
00:58:34,450 --> 00:58:37,609
[Music]

