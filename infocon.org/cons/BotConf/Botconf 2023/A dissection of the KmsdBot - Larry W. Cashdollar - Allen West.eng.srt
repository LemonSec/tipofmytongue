1
00:00:00,000 --> 00:00:03,959
so uh this is kmsdbot deconstructed or

2
00:00:03,959 --> 00:00:06,000
dissected I kept changing the name I

3
00:00:06,000 --> 00:00:07,919
wasn't sure I thought deconstruct would

4
00:00:07,919 --> 00:00:09,960
be more like a food thing for French

5
00:00:09,960 --> 00:00:11,280
because I know the food is excellent

6
00:00:11,280 --> 00:00:12,599
here

7
00:00:12,599 --> 00:00:15,540
um let's see introductions I'm Larry

8
00:00:15,540 --> 00:00:16,920
cash dollar

9
00:00:16,920 --> 00:00:19,260
um I worked at Akamai for 22 years

10
00:00:19,260 --> 00:00:21,240
uh I originally was a vulnerability

11
00:00:21,240 --> 00:00:24,300
researcher back in the late 90s early

12
00:00:24,300 --> 00:00:27,240
2000s mid-2000s

13
00:00:27,240 --> 00:00:30,539
um I found a lot of security holes back

14
00:00:30,539 --> 00:00:33,540
then and uh so many that miter gave me

15
00:00:33,540 --> 00:00:36,180
my own CNA so I was a certified

16
00:00:36,180 --> 00:00:37,620
numbering Authority so I could just give

17
00:00:37,620 --> 00:00:40,020
myself CVS and sign it myself because

18
00:00:40,020 --> 00:00:42,540
they got tired of me asking

19
00:00:42,540 --> 00:00:43,620
um

20
00:00:43,620 --> 00:00:46,140
I've been a member of Akamai cert for

21
00:00:46,140 --> 00:00:49,379
the last seven or eight years and

22
00:00:49,379 --> 00:00:51,660
um I've recently gotten into a malware

23
00:00:51,660 --> 00:00:53,579
adverse engineering and threat analysis

24
00:00:53,579 --> 00:00:55,379
so

25
00:00:55,379 --> 00:00:58,920
I'll let Allen introduce himself Ellen

26
00:00:58,920 --> 00:01:01,079
yeah hi everybody sorry I can't be there

27
00:01:01,079 --> 00:01:04,260
in person my name is Alan West I've been

28
00:01:04,260 --> 00:01:06,500
at Akamai for about a year in total

29
00:01:06,500 --> 00:01:08,580
prior to being on the surf game with

30
00:01:08,580 --> 00:01:11,040
Larry I was an intern while I was giving

31
00:01:11,040 --> 00:01:13,560
my bachelor's Northeastern

32
00:01:13,560 --> 00:01:15,119
and

33
00:01:15,119 --> 00:01:18,000
um then when I graduated I joined talk

34
00:01:18,000 --> 00:01:19,920
of my search and I've been a member ever

35
00:01:19,920 --> 00:01:22,799
since what I do on the team is pretty

36
00:01:22,799 --> 00:01:25,140
much honey K-pop development and spread

37
00:01:25,140 --> 00:01:26,880
analysis I've also been diving into

38
00:01:26,880 --> 00:01:29,100
malware reverse engineering uh with

39
00:01:29,100 --> 00:01:31,200
little Larry most of the time

40
00:01:31,200 --> 00:01:33,540
and um I'm currently working on my

41
00:01:33,540 --> 00:01:35,520
Master's in information security at

42
00:01:35,520 --> 00:01:38,159
Carnegie Mellon and uh the only reason

43
00:01:38,159 --> 00:01:40,259
I'm remote right now is because of

44
00:01:40,259 --> 00:01:42,780
complications with my passport because

45
00:01:42,780 --> 00:01:45,680
it could be there

46
00:01:46,740 --> 00:01:48,900
yeah uh Alan's been trying to get his

47
00:01:48,900 --> 00:01:52,079
pass for six months so it's not his

48
00:01:52,079 --> 00:01:54,479
fault it's I blame it on the U.S uh

49
00:01:54,479 --> 00:01:57,060
government so uh so points of interest

50
00:01:57,060 --> 00:01:59,880
you know stuff I wanted to talk about is

51
00:01:59,880 --> 00:02:03,000
um uh I originally discovered this

52
00:02:03,000 --> 00:02:05,579
botnet while I was testing some a new

53
00:02:05,579 --> 00:02:09,000
Honeypot uh the honey pot that I was

54
00:02:09,000 --> 00:02:10,979
testing was written in golang I was

55
00:02:10,979 --> 00:02:13,200
having some trouble with um calorie

56
00:02:13,200 --> 00:02:15,420
Honeypot which is written in Python I

57
00:02:15,420 --> 00:02:17,400
noticed that the calorie honey pot was

58
00:02:17,400 --> 00:02:19,379
truncating binaries after a couple of

59
00:02:19,379 --> 00:02:22,379
megabytes so I was losing all of these

60
00:02:22,379 --> 00:02:24,060
nice chunky pieces of malware that were

61
00:02:24,060 --> 00:02:26,400
written in golang because you'd go to to

62
00:02:26,400 --> 00:02:28,200
examine the the malware and it was only

63
00:02:28,200 --> 00:02:29,640
half there because the there was

64
00:02:29,640 --> 00:02:30,780
something wrong with the python library

65
00:02:30,780 --> 00:02:32,879
that was killing the connection and

66
00:02:32,879 --> 00:02:34,560
dropping in when only you know you had

67
00:02:34,560 --> 00:02:35,879
you know seven or eight more Megabytes

68
00:02:35,879 --> 00:02:38,640
left to download so

69
00:02:38,640 --> 00:02:41,879
I decided to to try out this new um this

70
00:02:41,879 --> 00:02:45,420
new Honeypot and uh I noticed that it

71
00:02:45,420 --> 00:02:46,319
was

72
00:02:46,319 --> 00:02:48,780
um grabbing these logs and interesting

73
00:02:48,780 --> 00:02:50,879
things and we'll get into that

74
00:02:50,879 --> 00:02:52,260
um one of the things that we noticed

75
00:02:52,260 --> 00:02:53,640
with this botnet is that command and

76
00:02:53,640 --> 00:02:56,340
control structures and clear text

77
00:02:56,340 --> 00:02:58,080
um which made it a lot easier to reverse

78
00:02:58,080 --> 00:03:01,500
engineer uh I wrote some code to emulate

79
00:03:01,500 --> 00:03:02,940
the malware client so that I could talk

80
00:03:02,940 --> 00:03:05,519
to the C2 and

81
00:03:05,519 --> 00:03:07,800
um then I modify the malware myself to

82
00:03:07,800 --> 00:03:09,720
talk to our own C2 so we could direct

83
00:03:09,720 --> 00:03:12,120
commands and analyze the attack traffic

84
00:03:12,120 --> 00:03:14,700
which I gave Alan the job doing because

85
00:03:14,700 --> 00:03:17,340
I figured he should have some fun

86
00:03:17,340 --> 00:03:19,440
um and then Alan began to go printed

87
00:03:19,440 --> 00:03:21,659
attacks which is what he'll talk about

88
00:03:21,659 --> 00:03:22,440
um

89
00:03:22,440 --> 00:03:24,780
and then one of the fun tidbits is that

90
00:03:24,780 --> 00:03:26,760
the malware actors actually crashed the

91
00:03:26,760 --> 00:03:28,200
botnet themselves and we'll get into

92
00:03:28,200 --> 00:03:29,819
that too

93
00:03:29,819 --> 00:03:32,040
so first infection

94
00:03:32,040 --> 00:03:34,860
so initially there's a script that runs

95
00:03:34,860 --> 00:03:38,940
that is a simple shell script and you

96
00:03:38,940 --> 00:03:40,319
could see where they try a bunch of

97
00:03:40,319 --> 00:03:44,400
things wget curl tftp

98
00:03:44,400 --> 00:03:45,360
um

99
00:03:45,360 --> 00:03:48,599
let's see there's another one an FTP get

100
00:03:48,599 --> 00:03:51,720
I've never seen FTP get before so I

101
00:03:51,720 --> 00:03:53,280
they're pretty desperate to get this

102
00:03:53,280 --> 00:03:54,599
downloaded

103
00:03:54,599 --> 00:03:56,940
um and just sort of through a bunch of

104
00:03:56,940 --> 00:03:58,920
stuff at the wall and sort of would see

105
00:03:58,920 --> 00:04:00,480
what would stick

106
00:04:00,480 --> 00:04:02,459
um and this is one of the one of the

107
00:04:02,459 --> 00:04:04,019
pieces I saw in my logs that I thought

108
00:04:04,019 --> 00:04:05,280
was pretty interesting in the new the

109
00:04:05,280 --> 00:04:07,080
new Honeypot

110
00:04:07,080 --> 00:04:07,739
um

111
00:04:07,739 --> 00:04:08,940
let's see

112
00:04:08,940 --> 00:04:11,280
so here's a downloader script

113
00:04:11,280 --> 00:04:14,400
um I'm not sure why they did this in PHP

114
00:04:14,400 --> 00:04:18,120
I assume they're familiar with it more

115
00:04:18,120 --> 00:04:20,399
than shell script I would have preferred

116
00:04:20,399 --> 00:04:22,079
they wrote it in bash or something like

117
00:04:22,079 --> 00:04:26,280
that but they wrote in PHP and uh

118
00:04:26,280 --> 00:04:27,720
I don't know it didn't make sense to me

119
00:04:27,720 --> 00:04:30,000
because not every machine is going to

120
00:04:30,000 --> 00:04:32,699
have PHP on it but a lot of machines

121
00:04:32,699 --> 00:04:34,800
have bash on it so I don't know why you

122
00:04:34,800 --> 00:04:36,720
would gamble with that or at least write

123
00:04:36,720 --> 00:04:38,280
it in something that might be on a

124
00:04:38,280 --> 00:04:40,199
machine like python or Pearl or

125
00:04:40,199 --> 00:04:43,620
something but they throw it in PHP

126
00:04:43,620 --> 00:04:45,680
um

127
00:04:46,259 --> 00:04:47,759
so

128
00:04:47,759 --> 00:04:50,699
the command and controls protocol it's

129
00:04:50,699 --> 00:04:54,419
over TCP it uses a high number Port to

130
00:04:54,419 --> 00:04:57,720
connect to it uses a null byte to

131
00:04:57,720 --> 00:04:59,040
initialize communication with the

132
00:04:59,040 --> 00:05:02,040
command and control server so when the

133
00:05:02,040 --> 00:05:04,800
malware connects to the C2 it sends an

134
00:05:04,800 --> 00:05:06,720
ox0

135
00:05:06,720 --> 00:05:09,300
and then the C2 responds back with an

136
00:05:09,300 --> 00:05:10,740
ox01

137
00:05:10,740 --> 00:05:13,199
and then the heartbeat uh the malware

138
00:05:13,199 --> 00:05:16,139
sends an ox02 and then the C2 sends back

139
00:05:16,139 --> 00:05:18,419
an ox01 pretty simple

140
00:05:18,419 --> 00:05:20,340
and then the attack commands those start

141
00:05:20,340 --> 00:05:22,380
with an exclamation point

142
00:05:22,380 --> 00:05:25,440
um and then uh because this was so

143
00:05:25,440 --> 00:05:27,180
simple it was easy to craft the script

144
00:05:27,180 --> 00:05:28,400
that would

145
00:05:28,400 --> 00:05:31,139
craft a piece of code that would emulate

146
00:05:31,139 --> 00:05:33,539
this so that we could just track the

147
00:05:33,539 --> 00:05:36,539
attacks and examine what their targets

148
00:05:36,539 --> 00:05:37,979
were

149
00:05:37,979 --> 00:05:39,780
um

150
00:05:39,780 --> 00:05:42,300
so in this piece of uh

151
00:05:42,300 --> 00:05:45,419
in this piece of disassembled code you

152
00:05:45,419 --> 00:05:48,180
could see actually I wore my contacts so

153
00:05:48,180 --> 00:05:52,080
I can't see you can see where they uh

154
00:05:52,080 --> 00:05:54,060
they use the

155
00:05:54,060 --> 00:05:55,080
um

156
00:05:55,080 --> 00:05:58,080
they connect to the the system using the

157
00:05:58,080 --> 00:06:02,160
IP address and the port that they're

158
00:06:02,160 --> 00:06:05,699
they're expecting the number four uh

159
00:06:05,699 --> 00:06:09,300
four bytes of the string of ox0 and ox01

160
00:06:09,300 --> 00:06:13,259
and then you see a further along ox02

161
00:06:13,259 --> 00:06:14,460
um

162
00:06:14,460 --> 00:06:16,979
this was pretty easy to decipher and

163
00:06:16,979 --> 00:06:17,699
then

164
00:06:17,699 --> 00:06:19,800
um through detonating malware because

165
00:06:19,800 --> 00:06:21,600
what fun is playing with malware if you

166
00:06:21,600 --> 00:06:23,880
don't detonate it I was able to examine

167
00:06:23,880 --> 00:06:26,580
the TCP dump traffic and actually see

168
00:06:26,580 --> 00:06:29,160
the C2 talking to the malware and

169
00:06:29,160 --> 00:06:31,620
confirm that this was indeed how the

170
00:06:31,620 --> 00:06:34,500
malware communicated with the C2

171
00:06:34,500 --> 00:06:37,199
um and then further disassembly here you

172
00:06:37,199 --> 00:06:41,900
could see the the Response Code of ox02

173
00:06:42,300 --> 00:06:45,539
um now one of the things in golang which

174
00:06:45,539 --> 00:06:46,860
I'm not sure how many people are

175
00:06:46,860 --> 00:06:49,500
familiar with this but

176
00:06:49,500 --> 00:06:51,360
bad guys are using golang more and more

177
00:06:51,360 --> 00:06:53,460
because it's kind of convoluted to

178
00:06:53,460 --> 00:06:55,080
disassemble and examine for malware

179
00:06:55,080 --> 00:06:56,639
researchers because one of the things

180
00:06:56,639 --> 00:06:59,100
that it does is it takes all the strings

181
00:06:59,100 --> 00:07:02,039
in the binary and it squishes them into

182
00:07:02,039 --> 00:07:04,919
a blob and then it cuts that blob up you

183
00:07:04,919 --> 00:07:06,479
know normally if you're using like C

184
00:07:06,479 --> 00:07:08,340
strings you have addresses of strings in

185
00:07:08,340 --> 00:07:10,560
memory in golang there's just this Big

186
00:07:10,560 --> 00:07:12,780
Blob of strings and then the golang

187
00:07:12,780 --> 00:07:14,699
software actually indexes into that

188
00:07:14,699 --> 00:07:17,580
string from an offset and then cuts the

189
00:07:17,580 --> 00:07:18,960
piece out that it wants and then sticks

190
00:07:18,960 --> 00:07:22,500
that in memory so this is sort of like a

191
00:07:22,500 --> 00:07:24,060
big ball of spaghetti that you have to

192
00:07:24,060 --> 00:07:25,740
index into to get the one noodle you

193
00:07:25,740 --> 00:07:29,160
want that's how this is so a lot of the

194
00:07:29,160 --> 00:07:30,840
um malware guys seem to be switching to

195
00:07:30,840 --> 00:07:32,940
golang to confuse us but I'm actually

196
00:07:32,940 --> 00:07:34,979
enjoying golang reverse engineering

197
00:07:34,979 --> 00:07:38,659
myself more now so

198
00:07:39,060 --> 00:07:41,539
and then this is actually the the C2

199
00:07:41,539 --> 00:07:43,440
disassembly where you can see the IP

200
00:07:43,440 --> 00:07:45,900
address of the command control server uh

201
00:07:45,900 --> 00:07:47,340
you can see where they're loading it

202
00:07:47,340 --> 00:07:49,919
into uh memory and then they're calling

203
00:07:49,919 --> 00:07:53,880
system net excuse me system net dial and

204
00:07:53,880 --> 00:07:55,020
their

205
00:07:55,020 --> 00:07:58,199
um connecting out to that server for the

206
00:07:58,199 --> 00:08:00,300
initial connection and then waiting for

207
00:08:00,300 --> 00:08:04,740
response uh from the the C2 of the ox01

208
00:08:04,740 --> 00:08:07,340
heartbeat

209
00:08:09,720 --> 00:08:12,979
so because the malware was easily

210
00:08:12,979 --> 00:08:16,139
disassembled and examined I decided to

211
00:08:16,139 --> 00:08:18,060
modify the malware myself

212
00:08:18,060 --> 00:08:21,000
by editing the IP address that it

213
00:08:21,000 --> 00:08:23,460
connects to for the C2 this is what

214
00:08:23,460 --> 00:08:25,560
enabled me to to pretend that I am the

215
00:08:25,560 --> 00:08:27,840
C2 and tell them malware to do bad

216
00:08:27,840 --> 00:08:30,599
things on servers that I can control and

217
00:08:30,599 --> 00:08:33,360
not get in trouble for for attacking my

218
00:08:33,360 --> 00:08:34,640
own systems

219
00:08:34,640 --> 00:08:37,860
this is pretty simple with red Air 2

220
00:08:37,860 --> 00:08:40,159
which is a reverse engineering software

221
00:08:40,159 --> 00:08:44,820
where you write with the command WV you

222
00:08:44,820 --> 00:08:47,880
can write the using indian-ness you can

223
00:08:47,880 --> 00:08:49,860
write the IP address in in hexadecimal

224
00:08:49,860 --> 00:08:52,080
backwards change the IP address to an

225
00:08:52,080 --> 00:08:54,620
RFC 1918 address

226
00:08:54,620 --> 00:08:57,420
that is on my local network and then

227
00:08:57,420 --> 00:09:00,000
actually spin up a C2 to emulate that

228
00:09:00,000 --> 00:09:02,160
using like netcat and then just wait

229
00:09:02,160 --> 00:09:04,680
responses and and um

230
00:09:04,680 --> 00:09:07,380
send commands to the actual malware to

231
00:09:07,380 --> 00:09:09,540
direct it a Target system

232
00:09:09,540 --> 00:09:12,360
so now that I'm a C2

233
00:09:12,360 --> 00:09:15,300
um I can tell the look The malware to do

234
00:09:15,300 --> 00:09:16,800
what I want to do and Target the things

235
00:09:16,800 --> 00:09:18,660
that I want to Target and fingerprint

236
00:09:18,660 --> 00:09:21,260
the attacks

237
00:09:22,560 --> 00:09:24,060
um and part of the you know

238
00:09:24,060 --> 00:09:25,860
fingerprinting attacks allows us to

239
00:09:25,860 --> 00:09:28,080
create profiles so that we can let

240
00:09:28,080 --> 00:09:29,820
people know like our customers and

241
00:09:29,820 --> 00:09:31,920
general public on the internet uh this

242
00:09:31,920 --> 00:09:34,260
this blog post that I had written or

243
00:09:34,260 --> 00:09:36,779
Alan I co-authored together was covered

244
00:09:36,779 --> 00:09:38,820
in media and we had folks asking us you

245
00:09:38,820 --> 00:09:41,399
know how do I protect against this and

246
00:09:41,399 --> 00:09:42,899
uh you know what what should I do to

247
00:09:42,899 --> 00:09:44,640
prevent you know any attack traffic

248
00:09:44,640 --> 00:09:46,440
coming from this system and directed at

249
00:09:46,440 --> 00:09:49,440
my systems in case uh you know I'm a

250
00:09:49,440 --> 00:09:52,380
target of the attacks so you know this

251
00:09:52,380 --> 00:09:54,420
really helped us telling them well this

252
00:09:54,420 --> 00:09:55,680
is what the attack looks like because we

253
00:09:55,680 --> 00:09:57,420
attacked ourselves with it so it was

254
00:09:57,420 --> 00:09:58,440
kind of nice

255
00:09:58,440 --> 00:10:01,740
and then um I left Alan to fingerprint

256
00:10:01,740 --> 00:10:03,899
all the attacks because you know I

257
00:10:03,899 --> 00:10:05,700
wanted to share the fun and sort of push

258
00:10:05,700 --> 00:10:08,279
him into doing more malware research

259
00:10:08,279 --> 00:10:10,440
rather than building stuff to collect

260
00:10:10,440 --> 00:10:13,260
malware and I'll let him do the discuss

261
00:10:13,260 --> 00:10:14,940
this part of it you want to talk about

262
00:10:14,940 --> 00:10:16,680
this Alan

263
00:10:16,680 --> 00:10:18,779
yeah for sure uh hopefully you can still

264
00:10:18,779 --> 00:10:21,000
hear me all right yeah we can hear you

265
00:10:21,000 --> 00:10:22,440
loud and clear

266
00:10:22,440 --> 00:10:23,399
awesome

267
00:10:23,399 --> 00:10:24,600
yeah so

268
00:10:24,600 --> 00:10:26,339
um like Larry was talking about before

269
00:10:26,339 --> 00:10:29,220
with the complex go string and the way

270
00:10:29,220 --> 00:10:31,800
they stored in one big card

271
00:10:31,800 --> 00:10:34,560
that became a point of difficulty when

272
00:10:34,560 --> 00:10:35,940
we were trying to figure out all the

273
00:10:35,940 --> 00:10:38,160
different attacks that this actually had

274
00:10:38,160 --> 00:10:41,700
and the commands to execute them and so

275
00:10:41,700 --> 00:10:44,779
what we ended up doing is we ended up um

276
00:10:44,779 --> 00:10:46,320
infecting

277
00:10:46,320 --> 00:10:49,140
a device and then basically waiting for

278
00:10:49,140 --> 00:10:52,200
commands from the C2 and then being able

279
00:10:52,200 --> 00:10:54,360
to track that inelastic and have a

280
00:10:54,360 --> 00:10:56,640
entire index so we could see what kind

281
00:10:56,640 --> 00:10:58,740
of commands are coming in and uh

282
00:10:58,740 --> 00:11:00,660
uh what what sort of variables they had

283
00:11:00,660 --> 00:11:03,360
or arguments coming into it

284
00:11:03,360 --> 00:11:05,459
change the different parts of the attack

285
00:11:05,459 --> 00:11:08,399
and what we learned from that uh is in

286
00:11:08,399 --> 00:11:09,720
this bottom right we can see the

287
00:11:09,720 --> 00:11:11,760
frequency of the different attacks with

288
00:11:11,760 --> 00:11:14,040
big data being the most

289
00:11:14,040 --> 00:11:16,620
some of the very first attacks that I

290
00:11:16,620 --> 00:11:18,959
think Larry observed before we did this

291
00:11:18,959 --> 00:11:23,700
was a tax on 5m which is a custom GTA 5

292
00:11:23,700 --> 00:11:25,980
credit server

293
00:11:25,980 --> 00:11:29,279
um hosting platform basically so you can

294
00:11:29,279 --> 00:11:31,680
um you can notice the server for these

295
00:11:31,680 --> 00:11:34,140
games and uh your friends can come in

296
00:11:34,140 --> 00:11:35,700
you can play like all these different

297
00:11:35,700 --> 00:11:37,680
modded games basically and then they

298
00:11:37,680 --> 00:11:40,800
also had a similar attack against uh red

299
00:11:40,800 --> 00:11:43,800
M which is for Red Dead Redemption

300
00:11:43,800 --> 00:11:45,480
um and then they also had a couple

301
00:11:45,480 --> 00:11:49,320
different attacks our HTTP http

302
00:11:49,320 --> 00:11:52,320
post and git and those

303
00:11:52,320 --> 00:11:54,060
weren't as interesting because they were

304
00:11:54,060 --> 00:11:56,100
just basically trying to send volumetric

305
00:11:56,100 --> 00:11:58,980
attacks um they were trying to blend in

306
00:11:58,980 --> 00:12:00,660
with traffic as much as they could so

307
00:12:00,660 --> 00:12:03,000
they were trying to be uninterested but

308
00:12:03,000 --> 00:12:06,120
you'll see in the demo we do next and

309
00:12:06,120 --> 00:12:09,600
then they also found some PCP UDP so you

310
00:12:09,600 --> 00:12:12,000
had the classics in Bloods you also had

311
00:12:12,000 --> 00:12:13,920
a bunch of random data

312
00:12:13,920 --> 00:12:16,200
um you had some that were hex and then

313
00:12:16,200 --> 00:12:19,019
hex climb which would uh admissively get

314
00:12:19,019 --> 00:12:22,200
larger and larger and then jump down and

315
00:12:22,200 --> 00:12:24,000
then uh we also thought the

316
00:12:24,000 --> 00:12:25,860
communications keep alive from the C2

317
00:12:25,860 --> 00:12:29,519
and we also saw scan which would hold

318
00:12:29,519 --> 00:12:32,459
down illicit credentials to

319
00:12:32,459 --> 00:12:35,040
Brute Force when they were looking for a

320
00:12:35,040 --> 00:12:38,820
new potential victims and uh so yeah

321
00:12:38,820 --> 00:12:41,339
we're gonna move to the next slide

322
00:12:41,339 --> 00:12:44,600
all right so let's see

323
00:12:48,120 --> 00:12:51,360
so this is a uh a sort of live

324
00:12:51,360 --> 00:12:53,339
quote-unquote demo

325
00:12:53,339 --> 00:12:54,959
um so we recorded this ahead of time

326
00:12:54,959 --> 00:12:57,600
this is how we were testing and

327
00:12:57,600 --> 00:12:59,579
benchmarking the

328
00:12:59,579 --> 00:13:02,519
attack traffic so you'll see on the left

329
00:13:02,519 --> 00:13:05,399
we have a live PCP dump running and then

330
00:13:05,399 --> 00:13:09,300
on the right we have two hangs one is

331
00:13:09,300 --> 00:13:11,880
the communications back from the C2 and

332
00:13:11,880 --> 00:13:13,560
the far right is the commands that we're

333
00:13:13,560 --> 00:13:18,240
pasting into it to send to one of our

334
00:13:18,240 --> 00:13:20,760
affected nodes and then we're observing

335
00:13:20,760 --> 00:13:22,320
the traffic

336
00:13:22,320 --> 00:13:24,000
so you can see this is the most popular

337
00:13:24,000 --> 00:13:26,760
one this is the big data and we're

338
00:13:26,760 --> 00:13:29,579
pointing at add an address added at a

339
00:13:29,579 --> 00:13:32,040
port number and the Really the big thing

340
00:13:32,040 --> 00:13:34,519
about this was then I just had like big

341
00:13:34,519 --> 00:13:36,959
amount of content within it then it was

342
00:13:36,959 --> 00:13:38,760
just a bunch of random data

343
00:13:38,760 --> 00:13:42,560
they're just again volumetric

344
00:13:53,160 --> 00:13:54,200
okay

345
00:13:54,200 --> 00:13:57,420
and then this is a similar demo of the

346
00:13:57,420 --> 00:14:01,800
attack and this one is targeted at 5m

347
00:14:01,800 --> 00:14:06,740
um this one HTTP which you'll see

348
00:14:09,720 --> 00:14:12,959
okay so I'm going to Target again you

349
00:14:12,959 --> 00:14:15,420
can see that the attack command

350
00:14:15,420 --> 00:14:17,220
structure is slightly different from the

351
00:14:17,220 --> 00:14:19,860
one previously they kind of varied based

352
00:14:19,860 --> 00:14:21,720
on the attack

353
00:14:21,720 --> 00:14:24,480
and so with this effect there was a

354
00:14:24,480 --> 00:14:26,279
couple different interesting headers you

355
00:14:26,279 --> 00:14:28,680
can see the content type is applications

356
00:14:28,680 --> 00:14:33,019
which effects www.form URL encoded

357
00:14:33,019 --> 00:14:35,519
there's also like user agent is

358
00:14:35,519 --> 00:14:37,139
googlebot news

359
00:14:37,139 --> 00:14:38,940
there's a couple interesting things like

360
00:14:38,940 --> 00:14:41,160
that uh you kind of see the interaction

361
00:14:41,160 --> 00:14:42,240
it gets

362
00:14:42,240 --> 00:14:46,139
let me super sure why this is more

363
00:14:46,139 --> 00:14:48,720
interesting or more damaging to a 5m

364
00:14:48,720 --> 00:14:50,940
server than any of the other attacks but

365
00:14:50,940 --> 00:14:52,800
it was awesome

366
00:14:52,800 --> 00:14:56,279
they received quite a bit of requests to

367
00:14:56,279 --> 00:14:58,760
attack

368
00:15:05,880 --> 00:15:08,160
and then the third and final demo we

369
00:15:08,160 --> 00:15:11,519
have uh was just TCP hex um this was not

370
00:15:11,519 --> 00:15:14,519
the TCP hex climb and this was common

371
00:15:14,519 --> 00:15:16,880
example of how

372
00:15:16,880 --> 00:15:20,639
most of their attacks were available in

373
00:15:20,639 --> 00:15:23,040
TTP and UDP

374
00:15:23,040 --> 00:15:25,500
um and when we first started analyzing

375
00:15:25,500 --> 00:15:28,560
these attacks a lot of them didn't

376
00:15:28,560 --> 00:15:31,560
really send anything of just it almost

377
00:15:31,560 --> 00:15:32,880
seemed like they were originally

378
00:15:32,880 --> 00:15:35,220
implemented but in this case you can see

379
00:15:35,220 --> 00:15:37,920
sending a good amount of hex data every

380
00:15:37,920 --> 00:15:39,240
now and then

381
00:15:39,240 --> 00:15:42,839
seems pretty infrequent and they don't

382
00:15:42,839 --> 00:15:44,579
they're not sending it the same size

383
00:15:44,579 --> 00:15:46,680
each time

384
00:15:46,680 --> 00:15:48,360
yeah and then they had the same

385
00:15:48,360 --> 00:15:51,839
capability and

386
00:15:51,839 --> 00:15:54,779
um and then they had the UDP and PCP hex

387
00:15:54,779 --> 00:15:56,399
crime which would just get bigger and

388
00:15:56,399 --> 00:16:00,060
bigger packet size each time so

389
00:16:00,060 --> 00:16:02,540
yeah

390
00:16:02,880 --> 00:16:05,399
you can see the heartbeat going back

391
00:16:05,399 --> 00:16:09,180
between the C2 and the infected and in

392
00:16:09,180 --> 00:16:13,199
this case we say two command uh TCP

393
00:16:13,199 --> 00:16:16,139
hacks and ask all the data that it

394
00:16:16,139 --> 00:16:18,860
generated

395
00:16:22,019 --> 00:16:25,019
well

396
00:16:25,139 --> 00:16:28,560
you know since miles is a little touchy

397
00:16:28,560 --> 00:16:30,540
yeah so just

398
00:16:30,540 --> 00:16:32,940
so just one more take away from this

399
00:16:32,940 --> 00:16:33,779
um

400
00:16:33,779 --> 00:16:35,760
through observing the different attacks

401
00:16:35,760 --> 00:16:37,320
that were sent we could also observe the

402
00:16:37,320 --> 00:16:39,060
different victims that were being

403
00:16:39,060 --> 00:16:41,699
targeted and this tells us more about

404
00:16:41,699 --> 00:16:44,459
compliance more than it does the um for

405
00:16:44,459 --> 00:16:46,019
the author of The malware because they

406
00:16:46,019 --> 00:16:48,959
were you know this is DDOT

407
00:16:48,959 --> 00:16:50,459
so

408
00:16:50,459 --> 00:16:53,279
people were paying them to attack and um

409
00:16:53,279 --> 00:16:55,380
so the popular targets we thought our

410
00:16:55,380 --> 00:16:58,199
gaming with 5m and red M and then we

411
00:16:58,199 --> 00:16:59,940
also got religious strikes

412
00:16:59,940 --> 00:17:02,759
education institutes there's a lot of

413
00:17:02,759 --> 00:17:06,179
crypto different governments obviously

414
00:17:06,179 --> 00:17:09,959
technology and hosting of sorts and then

415
00:17:09,959 --> 00:17:12,240
we also thought luxury car brands and

416
00:17:12,240 --> 00:17:14,760
some of this luxury car brands

417
00:17:14,760 --> 00:17:17,640
specifically uh also tied into gaming

418
00:17:17,640 --> 00:17:19,679
whether there was um you know

419
00:17:19,679 --> 00:17:22,500
intellectual property disputes or any

420
00:17:22,500 --> 00:17:26,220
legal battles you would see from that by

421
00:17:26,220 --> 00:17:28,799
people starting to attack various

422
00:17:28,799 --> 00:17:31,220
attacks

423
00:17:31,940 --> 00:17:34,919
and then uh one of the fun things that

424
00:17:34,919 --> 00:17:37,140
that we observed was

425
00:17:37,140 --> 00:17:39,840
um the bot authors did not put any error

426
00:17:39,840 --> 00:17:45,299
checking in for the C2 arguments so uh I

427
00:17:45,299 --> 00:17:48,720
was watching the logs one day and the uh

428
00:17:48,720 --> 00:17:50,820
button of the authors actually crashed

429
00:17:50,820 --> 00:17:52,740
the entire botnet because they missed

430
00:17:52,740 --> 00:17:54,980
the space between

431
00:17:54,980 --> 00:17:58,980
www.bitcoin.com and Port 443 so that one

432
00:17:58,980 --> 00:18:01,440
little space caused the client that I

433
00:18:01,440 --> 00:18:03,900
was running the the actual malware that

434
00:18:03,900 --> 00:18:05,160
I was running and watching the traffic

435
00:18:05,160 --> 00:18:06,660
to

436
00:18:06,660 --> 00:18:09,179
um crash and then spit out an error

437
00:18:09,179 --> 00:18:10,919
message in golang saying you know not

438
00:18:10,919 --> 00:18:13,679
not enough number of arguments and um

439
00:18:13,679 --> 00:18:15,419
and the reason I knew what happened was

440
00:18:15,419 --> 00:18:17,160
I had the client that I had written in

441
00:18:17,160 --> 00:18:18,720
golang actually running and logging

442
00:18:18,720 --> 00:18:21,360
everything and I saw that the space was

443
00:18:21,360 --> 00:18:24,000
missing at the end so I'm like okay they

444
00:18:24,000 --> 00:18:25,559
crashed strong botnet because of the

445
00:18:25,559 --> 00:18:28,440
typo and um

446
00:18:28,440 --> 00:18:30,840
the botnet got real quiet after that for

447
00:18:30,840 --> 00:18:33,480
about 48 Hours it was nothing and then

448
00:18:33,480 --> 00:18:36,480
after about 48 hours or two days I

449
00:18:36,480 --> 00:18:38,179
started seeing them running the infector

450
00:18:38,179 --> 00:18:40,080
scripts again where they were trying to

451
00:18:40,080 --> 00:18:42,120
infect machines and build more clientele

452
00:18:42,120 --> 00:18:44,460
or get more machines infected build the

453
00:18:44,460 --> 00:18:49,140
botnet back up and um and then uh they

454
00:18:49,140 --> 00:18:51,000
actually crashed it again because they

455
00:18:51,000 --> 00:18:55,020
typed LS into the C2 uh because it was

456
00:18:55,020 --> 00:18:58,320
the wrong terminal so uh this gave us

457
00:18:58,320 --> 00:19:00,120
you know an idea that they're using

458
00:19:00,120 --> 00:19:01,440
Linux

459
00:19:01,440 --> 00:19:03,660
um to run the botnet from as a as a

460
00:19:03,660 --> 00:19:05,820
control system and

461
00:19:05,820 --> 00:19:08,280
um they probably should be more careful

462
00:19:08,280 --> 00:19:10,620
where they type in commands

463
00:19:10,620 --> 00:19:14,760
so the latest on kmsd bot now is um it

464
00:19:14,760 --> 00:19:17,460
was offline in early January uh until

465
00:19:17,460 --> 00:19:20,520
around yeah the 10th or so

466
00:19:20,520 --> 00:19:22,380
and we were actively monitoring it still

467
00:19:22,380 --> 00:19:23,820
because we figured they probably would

468
00:19:23,820 --> 00:19:26,280
come back and and they did

469
00:19:26,280 --> 00:19:27,419
um

470
00:19:27,419 --> 00:19:29,520
they changed the binaries but only

471
00:19:29,520 --> 00:19:31,380
changed the C2 address in them so they

472
00:19:31,380 --> 00:19:34,020
didn't make any updates to the binary

473
00:19:34,020 --> 00:19:36,179
um and then actually recently in the

474
00:19:36,179 --> 00:19:39,360
last I'd say month or so uh it looks

475
00:19:39,360 --> 00:19:40,500
like they added some error correction

476
00:19:40,500 --> 00:19:42,840
because

477
00:19:42,840 --> 00:19:44,580
um I noticed them sending a bunch of

478
00:19:44,580 --> 00:19:47,640
malformed commands and the client that

479
00:19:47,640 --> 00:19:49,020
the latest client that they had sent

480
00:19:49,020 --> 00:19:52,080
stayed up so it looks like they they

481
00:19:52,080 --> 00:19:54,120
learned from their mistakes or perhaps

482
00:19:54,120 --> 00:19:56,580
they read one of my blog posts and uh

483
00:19:56,580 --> 00:20:00,720
they fixed the botnet so

484
00:20:00,720 --> 00:20:03,539
um you know this was actually uh Bruce

485
00:20:03,539 --> 00:20:04,799
scheiner actually covered this on his

486
00:20:04,799 --> 00:20:06,960
website talking about

487
00:20:06,960 --> 00:20:10,919
um how software is uh you know it's

488
00:20:10,919 --> 00:20:12,720
intrinsic to have error correction even

489
00:20:12,720 --> 00:20:14,340
if you're the bad guy because it you

490
00:20:14,340 --> 00:20:15,660
know if you don't have error correction

491
00:20:15,660 --> 00:20:18,480
or error checking it's gonna bite you in

492
00:20:18,480 --> 00:20:20,280
the end no matter who you are

493
00:20:20,280 --> 00:20:22,679
um and then these are some indicators of

494
00:20:22,679 --> 00:20:25,320
compromise I can get you these if you

495
00:20:25,320 --> 00:20:27,000
want like in text so you don't have to

496
00:20:27,000 --> 00:20:28,559
write this down or take a picture of it

497
00:20:28,559 --> 00:20:30,840
and transfer it over because I'm not

498
00:20:30,840 --> 00:20:32,940
into torturing people but I figured this

499
00:20:32,940 --> 00:20:34,200
would be just interesting to show what

500
00:20:34,200 --> 00:20:35,460
sort of names they've been coming up

501
00:20:35,460 --> 00:20:37,740
with they've actually recently changed

502
00:20:37,740 --> 00:20:39,960
the names of the botnet to Watchdog

503
00:20:39,960 --> 00:20:42,059
because you know I guess they got bored

504
00:20:42,059 --> 00:20:43,559
at k-thread because you know another

505
00:20:43,559 --> 00:20:45,780
another process name that we'll see the

506
00:20:45,780 --> 00:20:47,340
process table that will just ignore

507
00:20:47,340 --> 00:20:50,039
that's taking 100 of CPU

508
00:20:50,039 --> 00:20:52,160
um

509
00:20:52,320 --> 00:20:54,720
any questions you can reach me on

510
00:20:54,720 --> 00:20:57,360
Twitter Mastodon I don't know if Alan

511
00:20:57,360 --> 00:20:59,580
has social media set up yet but maybe

512
00:20:59,580 --> 00:21:02,940
someday I'm not sure Alan

513
00:21:02,940 --> 00:21:07,320
uh I could I don't have any uh Twitter

514
00:21:07,320 --> 00:21:10,080
for now you don't have to you know I can

515
00:21:10,080 --> 00:21:11,820
you can I can feel questions through

516
00:21:11,820 --> 00:21:14,400
Circ whatever but yeah but that's good

517
00:21:14,400 --> 00:21:17,960
that's it thank you

518
00:21:26,539 --> 00:21:30,379
are there any questions

519
00:21:32,760 --> 00:21:35,460
there okay I was I was going to say

520
00:21:35,460 --> 00:21:37,140
there won't be any lunch unless there's

521
00:21:37,140 --> 00:21:40,340
a question that's a

522
00:21:40,620 --> 00:21:44,159
H sorry to delay launch yeah

523
00:21:44,159 --> 00:21:46,140
um you mentioned that it could be a DDOS

524
00:21:46,140 --> 00:21:48,720
as a service and it could be being sold

525
00:21:48,720 --> 00:21:50,520
you know where it's being sold at no

526
00:21:50,520 --> 00:21:53,520
we're we're not sure who's buying or

527
00:21:53,520 --> 00:21:54,659
who's

528
00:21:54,659 --> 00:21:57,120
who's buying the service or the DDOS

529
00:21:57,120 --> 00:21:59,460
abilities because you know I could

530
00:21:59,460 --> 00:22:00,780
understand if they were specifically

531
00:22:00,780 --> 00:22:03,720
targeting games or game or game sites I

532
00:22:03,720 --> 00:22:06,000
would think you know it's your angry 15

533
00:22:06,000 --> 00:22:09,360
year old uh but I'm seeing religious

534
00:22:09,360 --> 00:22:12,120
sites being hit I'm seeing

535
00:22:12,120 --> 00:22:12,720
um

536
00:22:12,720 --> 00:22:15,179
technology companies security companies

537
00:22:15,179 --> 00:22:18,299
specifically being hit so we're not sure

538
00:22:18,299 --> 00:22:20,039
who's purchasing it but it seems like

539
00:22:20,039 --> 00:22:22,440
someone is using this or selling the

540
00:22:22,440 --> 00:22:24,000
service of this to Target sites because

541
00:22:24,000 --> 00:22:25,980
it's just it's all over the place

542
00:22:25,980 --> 00:22:28,440
so

543
00:22:28,440 --> 00:22:31,940
um can you specify more and which

544
00:22:31,940 --> 00:22:34,860
antibods do we use to do that you

545
00:22:34,860 --> 00:22:37,559
mentioned that you you switch off yeah

546
00:22:37,559 --> 00:22:39,600
I'm using one I the one that picked this

547
00:22:39,600 --> 00:22:42,659
one up is called SSH syrup which

548
00:22:42,659 --> 00:22:44,280
somebody wrote it's written exclusively

549
00:22:44,280 --> 00:22:47,039
in golang I figured I'd give it a try

550
00:22:47,039 --> 00:22:49,620
um I modified it some to to my needs and

551
00:22:49,620 --> 00:22:52,380
my liking and it what it does is it it

552
00:22:52,380 --> 00:22:55,320
emulates an SSH connection or an SSH

553
00:22:55,320 --> 00:22:59,760
server and it let's you can you can

554
00:22:59,760 --> 00:23:02,400
configure it to allow any password to be

555
00:23:02,400 --> 00:23:05,400
used I don't like doing that because I

556
00:23:05,400 --> 00:23:07,860
figure if a server is using any password

557
00:23:07,860 --> 00:23:09,360
then you can fingerprint that as a

558
00:23:09,360 --> 00:23:11,400
Honeypot because no normal server is

559
00:23:11,400 --> 00:23:13,140
going to let you log in as root with any

560
00:23:13,140 --> 00:23:16,260
password so I I make sure that I when I

561
00:23:16,260 --> 00:23:18,360
set up a honey pot I make it like root

562
00:23:18,360 --> 00:23:19,919
password or root root or something I

563
00:23:19,919 --> 00:23:21,480
don't ever let it use a wildcard

564
00:23:21,480 --> 00:23:23,340
password and this this lets you do that

565
00:23:23,340 --> 00:23:24,780
where you can you can change it to have

566
00:23:24,780 --> 00:23:26,880
either you know no password or any

567
00:23:26,880 --> 00:23:28,980
password or an actual password to make

568
00:23:28,980 --> 00:23:30,720
it more legitimate looking and then

569
00:23:30,720 --> 00:23:32,700
it'll actually download files and store

570
00:23:32,700 --> 00:23:34,919
them on the system that the bad actor

571
00:23:34,919 --> 00:23:36,840
might have downloaded so it's it's a

572
00:23:36,840 --> 00:23:40,320
highly interactive Honeypot

573
00:23:40,320 --> 00:23:43,340
any more questions

574
00:23:47,640 --> 00:23:49,679
hey those things for your presentation I

575
00:23:49,679 --> 00:23:51,059
would like to know if you have any idea

576
00:23:51,059 --> 00:23:53,400
about the size of this botnet and if you

577
00:23:53,400 --> 00:23:55,919
were able to maybe estimate the impact

578
00:23:55,919 --> 00:23:57,659
of such attacks but the traffic

579
00:23:57,659 --> 00:23:59,640
generated by the button we've been

580
00:23:59,640 --> 00:24:01,620
trying to figure that out but we haven't

581
00:24:01,620 --> 00:24:03,780
seen them attack something with the

582
00:24:03,780 --> 00:24:06,240
botnet that we can examine the traffic

583
00:24:06,240 --> 00:24:07,860
to

584
00:24:07,860 --> 00:24:09,419
um I so we have no idea how big the

585
00:24:09,419 --> 00:24:11,580
button it is and since they crashed it

586
00:24:11,580 --> 00:24:13,500
so many times we're not sure how big it

587
00:24:13,500 --> 00:24:16,440
ever was so it's it's been a mystery to

588
00:24:16,440 --> 00:24:18,000
us too

589
00:24:18,000 --> 00:24:20,220
um I'm hoping at some point they hit

590
00:24:20,220 --> 00:24:23,220
something that I can see the traffic

591
00:24:23,220 --> 00:24:25,080
um but at this time we don't know how

592
00:24:25,080 --> 00:24:27,500
big it is

593
00:24:27,659 --> 00:24:29,659
any more questions

594
00:24:29,659 --> 00:24:32,840
last one

595
00:24:34,860 --> 00:24:37,380
hello and thank you you mentioned that

596
00:24:37,380 --> 00:24:39,960
they were using golang because it's a

597
00:24:39,960 --> 00:24:42,240
bit of uh in Brackets obfuscation yeah

598
00:24:42,240 --> 00:24:44,700
have you seen change to other languages

599
00:24:44,700 --> 00:24:46,559
where the compiler produces let's say

600
00:24:46,559 --> 00:24:48,539
again in Brackets natively obfuscated

601
00:24:48,539 --> 00:24:52,260
assembly I haven't seen that I've seen

602
00:24:52,260 --> 00:24:55,200
um compiled python binary showing up too

603
00:24:55,200 --> 00:24:58,320
from malware but I haven't seen and I've

604
00:24:58,320 --> 00:25:02,520
seen a lot of upx-packed binaries and

605
00:25:02,520 --> 00:25:04,559
then I've seen upx pack binaries that

606
00:25:04,559 --> 00:25:06,720
have been corrupted where the upx

607
00:25:06,720 --> 00:25:09,780
headers are mangled or zeroed out so

608
00:25:09,780 --> 00:25:12,539
that you can't unpack it with upx and

609
00:25:12,539 --> 00:25:14,820
there's varying levels of that where uh

610
00:25:14,820 --> 00:25:17,280
I've written a tool that will go through

611
00:25:17,280 --> 00:25:19,740
and try and fix a upx binary based on

612
00:25:19,740 --> 00:25:21,299
some basic things that somebody might

613
00:25:21,299 --> 00:25:23,700
have changed to to make the upx unpack

614
00:25:23,700 --> 00:25:26,760
on be able to not unpack the binary but

615
00:25:26,760 --> 00:25:28,320
then they just

616
00:25:28,320 --> 00:25:30,539
they just sort of mangle more of the

617
00:25:30,539 --> 00:25:32,940
binary to make it worse to try and

618
00:25:32,940 --> 00:25:34,620
unpack it so it's it's cat and mouse

619
00:25:34,620 --> 00:25:37,760
game so

620
00:25:39,840 --> 00:25:42,419
okay thanks very much thanks thank you

621
00:25:42,419 --> 00:25:44,900
Alan

622
00:25:47,100 --> 00:25:50,000
I'm staring

