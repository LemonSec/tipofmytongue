1
00:00:00,780 --> 00:00:02,940
so thank you everybody for being here

2
00:00:02,940 --> 00:00:05,460
today so this is this is like the very

3
00:00:05,460 --> 00:00:07,680
first talk after the lunch break we will

4
00:00:07,680 --> 00:00:09,240
try to do our best we'll keep you guys

5
00:00:09,240 --> 00:00:12,179
awake so

6
00:00:12,179 --> 00:00:14,280
a brief introduction about us my name is

7
00:00:14,280 --> 00:00:16,680
Federico Valentini and I'm currently

8
00:00:16,680 --> 00:00:18,420
leading the threat intelligence

9
00:00:18,420 --> 00:00:20,580
intelligence team and incident response

10
00:00:20,580 --> 00:00:22,980
at the cliffai and with me today there

11
00:00:22,980 --> 00:00:25,939
is Alessandro strino which is a another

12
00:00:25,939 --> 00:00:29,220
malware analyst that uh work inside our

13
00:00:29,220 --> 00:00:31,439
threat intelligence team

14
00:00:31,439 --> 00:00:34,380
so we are both from this company called

15
00:00:34,380 --> 00:00:37,739
cliffai which is an Italian company and

16
00:00:37,739 --> 00:00:40,760
we provide solutions for anti-fraud

17
00:00:40,760 --> 00:00:43,200
teams typically working in bank

18
00:00:43,200 --> 00:00:46,980
institution as well for managing in real

19
00:00:46,980 --> 00:00:50,700
time fraud threats and detection in the

20
00:00:50,700 --> 00:00:52,680
platform from the client side

21
00:00:52,680 --> 00:00:55,500
so maybe you already seen this name

22
00:00:55,500 --> 00:00:57,960
maybe behind like technical analysis

23
00:00:57,960 --> 00:01:00,300
related to Android Bank intrusion as

24
00:01:00,300 --> 00:01:03,840
well we perform a couple of research in

25
00:01:03,840 --> 00:01:06,960
the last through to two years and also

26
00:01:06,960 --> 00:01:11,220
discovering a new bank introsion such as

27
00:01:11,220 --> 00:01:13,860
a sharkbot T-bone and a revive forgive

28
00:01:13,860 --> 00:01:15,540
you a couple of examples but this is our

29
00:01:15,540 --> 00:01:18,060
let's say very first time that we public

30
00:01:18,060 --> 00:01:22,380
discuss one of our investigation based

31
00:01:22,380 --> 00:01:25,339
on Windows threats

32
00:01:26,520 --> 00:01:29,280
so why we are here today

33
00:01:29,280 --> 00:01:31,380
we are talking about banking fraud

34
00:01:31,380 --> 00:01:34,619
operation right so technically I mean

35
00:01:34,619 --> 00:01:36,900
historically a banking fraud operation

36
00:01:36,900 --> 00:01:39,540
are very tied to this concept called Web

37
00:01:39,540 --> 00:01:42,000
inject I don't know if how many of you

38
00:01:42,000 --> 00:01:43,320
guys are already familiar with the

39
00:01:43,320 --> 00:01:46,320
concept please awesome

40
00:01:46,320 --> 00:01:49,140
so you can consider let's say a web

41
00:01:49,140 --> 00:01:52,619
inject the latest piece of malicious

42
00:01:52,619 --> 00:01:55,320
code leveraged by threat actor for for

43
00:01:55,320 --> 00:01:57,659
example executing an authorizing payment

44
00:01:57,659 --> 00:02:00,720
or for example intercepting by the

45
00:02:00,720 --> 00:02:03,240
banking credential or value valid

46
00:02:03,240 --> 00:02:06,299
two-factor authentication code as well

47
00:02:06,299 --> 00:02:10,500
so this talk is not let's say a more

48
00:02:10,500 --> 00:02:12,599
classic reversing engineering or

49
00:02:12,599 --> 00:02:15,239
marginal analysis talk it will be more

50
00:02:15,239 --> 00:02:18,540
like telling you a story a story behind

51
00:02:18,540 --> 00:02:21,560
a specific threat groups that we started

52
00:02:21,560 --> 00:02:25,080
analyzed back in 2018 so this is the

53
00:02:25,080 --> 00:02:27,959
result of this of our investigation is

54
00:02:27,959 --> 00:02:30,360
an investigation long four years

55
00:02:30,360 --> 00:02:33,900
starting back to in 2018 and this is our

56
00:02:33,900 --> 00:02:36,300
very first time that we publicly

57
00:02:36,300 --> 00:02:40,860
disclose our go our findings consider

58
00:02:40,860 --> 00:02:44,459
that during the last year in 2022 we

59
00:02:44,459 --> 00:02:47,160
already share a whole lot of our

60
00:02:47,160 --> 00:02:49,560
findings for with the impacted

61
00:02:49,560 --> 00:02:51,540
organization impacted banking

62
00:02:51,540 --> 00:02:53,879
institution law enforcement and also

63
00:02:53,879 --> 00:02:57,620
reputable charts as well

64
00:02:57,780 --> 00:03:01,500
so starting from 2018 we started

65
00:03:01,500 --> 00:03:03,840
tracking a specific threat actor which

66
00:03:03,840 --> 00:03:06,800
appears to operate inside the Italian

67
00:03:06,800 --> 00:03:09,660
landscape and the main goal of this

68
00:03:09,660 --> 00:03:12,720
threat actor was to infect as much as

69
00:03:12,720 --> 00:03:14,819
possible Windows workstation inside

70
00:03:14,819 --> 00:03:16,500
corporate Network

71
00:03:16,500 --> 00:03:19,980
but not all the windows workstation that

72
00:03:19,980 --> 00:03:21,599
you can possibly find inside a corporate

73
00:03:21,599 --> 00:03:24,019
network but only the incorporate machine

74
00:03:24,019 --> 00:03:28,319
which has been used for direct access to

75
00:03:28,319 --> 00:03:29,700
bank account

76
00:03:29,700 --> 00:03:32,879
and their main goal is try to alter the

77
00:03:32,879 --> 00:03:34,920
legitimate transaction performed by the

78
00:03:34,920 --> 00:03:38,400
victim and they try to perform this to

79
00:03:38,400 --> 00:03:40,739
achieve this goal with the usage of this

80
00:03:40,739 --> 00:03:43,019
specific web inject kit which we dubbed

81
00:03:43,019 --> 00:03:45,260
has driven back in

82
00:03:45,260 --> 00:03:48,720
2018. this webinar kit has these

83
00:03:48,720 --> 00:03:50,940
specific types of scenario which is

84
00:03:50,940 --> 00:03:53,400
called ATS or automatic transfer system

85
00:03:53,400 --> 00:03:56,720
with consisting not

86
00:03:56,720 --> 00:03:59,879
extracting like valid credential or

87
00:03:59,879 --> 00:04:01,860
two-factor authentication code but these

88
00:04:01,860 --> 00:04:04,860
types will be web inject is waiting that

89
00:04:04,860 --> 00:04:07,620
a victim is currently logging into their

90
00:04:07,620 --> 00:04:10,739
corporate banking accounts and the the

91
00:04:10,739 --> 00:04:13,379
web engine is activating when the actual

92
00:04:13,379 --> 00:04:16,620
victim is trying to insert a legitimate

93
00:04:16,620 --> 00:04:19,440
banking transfer so the webinar kit will

94
00:04:19,440 --> 00:04:22,860
try to hijack the payment so the the

95
00:04:22,860 --> 00:04:24,479
payment will be rotated to another

96
00:04:24,479 --> 00:04:26,460
banking banking account which is

97
00:04:26,460 --> 00:04:28,620
typically controlled directly on

98
00:04:28,620 --> 00:04:32,280
indirectly by them threat group itself

99
00:04:32,280 --> 00:04:35,580
and another important thing here is that

100
00:04:35,580 --> 00:04:37,979
we found some high correlation between

101
00:04:37,979 --> 00:04:40,320
these driven operations starting back in

102
00:04:40,320 --> 00:04:44,300
2018 and this threat group

103
00:04:44,300 --> 00:04:47,400
disclosed by proof point in 2018 as well

104
00:04:47,400 --> 00:04:51,179
which is called ta-554

105
00:04:52,080 --> 00:04:54,720
so a couple of numbers here

106
00:04:54,720 --> 00:04:57,479
threat actor appeared to be interested

107
00:04:57,479 --> 00:05:01,620
in specific amounts of transactions so

108
00:05:01,620 --> 00:05:03,300
as you can see here consider that we are

109
00:05:03,300 --> 00:05:05,040
talking about corporate environment you

110
00:05:05,040 --> 00:05:07,680
can consider this range of amount like

111
00:05:07,680 --> 00:05:09,600
modest types of amount so they are not

112
00:05:09,600 --> 00:05:11,940
quite interesting very high types of

113
00:05:11,940 --> 00:05:15,240
banking transactions from a money

114
00:05:15,240 --> 00:05:17,400
laundering perspective is some sort of

115
00:05:17,400 --> 00:05:19,979
different completely different job

116
00:05:19,979 --> 00:05:21,960
another important thing is that during

117
00:05:21,960 --> 00:05:26,580
2021 and 22 we were able to extract the

118
00:05:26,580 --> 00:05:29,460
majority of banking of money mule

119
00:05:29,460 --> 00:05:31,919
Network that is under the control by

120
00:05:31,919 --> 00:05:33,960
this threat group and we found more than

121
00:05:33,960 --> 00:05:36,720
a 1400 different bank accounts

122
00:05:36,720 --> 00:05:38,340
controlled by the group

123
00:05:38,340 --> 00:05:41,160
during a specific wave of attacks

124
00:05:41,160 --> 00:05:45,419
happened in 2021 in July we found that

125
00:05:45,419 --> 00:05:48,600
during a specific wave of attack the

126
00:05:48,600 --> 00:05:50,820
threat threat actor were able to infect

127
00:05:50,820 --> 00:05:55,220
more than 1500 different

128
00:05:55,220 --> 00:05:58,020
customers of a single banking

129
00:05:58,020 --> 00:06:01,440
institution and another uh let's say

130
00:06:01,440 --> 00:06:04,500
interesting thing that we were able also

131
00:06:04,500 --> 00:06:07,500
to intercept two Extrusion attempts

132
00:06:07,500 --> 00:06:10,919
performed by the threat actor itself and

133
00:06:10,919 --> 00:06:13,259
the singularity of these extortion

134
00:06:13,259 --> 00:06:16,860
attempt is that they like try to put the

135
00:06:16,860 --> 00:06:19,620
ransom requests in directly inside into

136
00:06:19,620 --> 00:06:22,319
the webinched code which is let's say

137
00:06:22,319 --> 00:06:25,259
kind of weird I think because I mean our

138
00:06:25,259 --> 00:06:27,840
hypothesis here is that probably during

139
00:06:27,840 --> 00:06:30,180
this specific period of time threat Acts

140
00:06:30,180 --> 00:06:33,360
or like noticed that someone here is

141
00:06:33,360 --> 00:06:35,940
like constantly monitoring their new

142
00:06:35,940 --> 00:06:38,160
payload as well so

143
00:06:38,160 --> 00:06:40,020
we will get into more detailed layers

144
00:06:40,020 --> 00:06:42,660
with Alessandro here

145
00:06:42,660 --> 00:06:45,419
so this is like a high level overview

146
00:06:45,419 --> 00:06:48,660
about all the different stages that we

147
00:06:48,660 --> 00:06:50,280
were able to extract during our

148
00:06:50,280 --> 00:06:52,979
investigation so it all begins with a

149
00:06:52,979 --> 00:06:55,020
malpan campaign

150
00:06:55,020 --> 00:06:57,900
you will see this I think weird name

151
00:06:57,900 --> 00:07:00,539
called pack we will get into some

152
00:07:00,539 --> 00:07:03,180
details later and through this mail spam

153
00:07:03,180 --> 00:07:05,039
the the threat group try to distribute

154
00:07:05,039 --> 00:07:07,020
the very first piece of malware

155
00:07:07,020 --> 00:07:09,780
component which is called sload has load

156
00:07:09,780 --> 00:07:10,880
is a

157
00:07:10,880 --> 00:07:13,639
well-known Powershell Powershell

158
00:07:13,639 --> 00:07:16,500
downloader and they use their models for

159
00:07:16,500 --> 00:07:19,139
deeply inspecting all the botnet all the

160
00:07:19,139 --> 00:07:21,360
Bots inside their button for like

161
00:07:21,360 --> 00:07:23,400
building up a more resilient and robust

162
00:07:23,400 --> 00:07:25,080
types of buttons

163
00:07:25,080 --> 00:07:27,180
so after rest load they're retrieving

164
00:07:27,180 --> 00:07:30,240
all the interesting Bots and push the

165
00:07:30,240 --> 00:07:33,120
very next piece of malware which is

166
00:07:33,120 --> 00:07:35,940
called ribbon a very known Bank in

167
00:07:35,940 --> 00:07:39,180
Trojan and Hughes the men in the browser

168
00:07:39,180 --> 00:07:41,520
capabilities of driven for injecting

169
00:07:41,520 --> 00:07:44,400
this web inject kit called ribbon for

170
00:07:44,400 --> 00:07:46,319
hijacking in real-time legitimate

171
00:07:46,319 --> 00:07:47,580
payments

172
00:07:47,580 --> 00:07:51,000
and the very last piece or stage is

173
00:07:51,000 --> 00:07:52,199
related to the money laundering

174
00:07:52,199 --> 00:07:56,039
operation so we will see uh some details

175
00:07:56,039 --> 00:07:58,259
later with Alessandro but during our

176
00:07:58,259 --> 00:08:01,319
investigation we were also able to get

177
00:08:01,319 --> 00:08:04,020
some insight from their one of their

178
00:08:04,020 --> 00:08:06,539
internal panel for managing all their

179
00:08:06,539 --> 00:08:11,000
like complex types of monomial Networks

180
00:08:12,060 --> 00:08:14,520
so we started with the very first stage

181
00:08:14,520 --> 00:08:17,400
which is this pack Mouse pump I mean

182
00:08:17,400 --> 00:08:21,000
pack my pack emails is some sort of I

183
00:08:21,000 --> 00:08:23,759
think it's an Italian thing only a pack

184
00:08:23,759 --> 00:08:27,539
stands for certified email and you can I

185
00:08:27,539 --> 00:08:29,220
mean for the sake of this of this

186
00:08:29,220 --> 00:08:31,080
thought you can consider pack emails

187
00:08:31,080 --> 00:08:33,779
just like standard email okay this is

188
00:08:33,779 --> 00:08:36,899
um some sort of legal trust behind it so

189
00:08:36,899 --> 00:08:39,659
uh pack email in Italy uh try to

190
00:08:39,659 --> 00:08:41,399
guarantee the legal certainty of a

191
00:08:41,399 --> 00:08:43,559
sender identity

192
00:08:43,559 --> 00:08:46,680
and back in the days we started

193
00:08:46,680 --> 00:08:50,339
questioning ourselves of why this threat

194
00:08:50,339 --> 00:08:52,800
group is using these specific types of

195
00:08:52,800 --> 00:08:54,600
female for Distributing their their

196
00:08:54,600 --> 00:08:56,640
first stage of infection which is not

197
00:08:56,640 --> 00:08:58,680
let's say quite common in Italy see like

198
00:08:58,680 --> 00:09:00,839
structure structure malware campaign

199
00:09:00,839 --> 00:09:04,080
behindpac emails and we started

200
00:09:04,080 --> 00:09:06,660
um tried to see some of the all means

201
00:09:06,660 --> 00:09:09,120
connecting some of the dots behind it so

202
00:09:09,120 --> 00:09:11,700
as I said before the very first goal of

203
00:09:11,700 --> 00:09:14,040
this threat threat group is try to

204
00:09:14,040 --> 00:09:16,080
infect machine inside corporate Network

205
00:09:16,080 --> 00:09:19,320
and guess what tech emails is very used

206
00:09:19,320 --> 00:09:22,260
inside corporate networks and also this

207
00:09:22,260 --> 00:09:25,680
name of certified emails in from I mean

208
00:09:25,680 --> 00:09:27,839
from an Italian cities in perspective is

209
00:09:27,839 --> 00:09:29,820
giving this let's say full sense of

210
00:09:29,820 --> 00:09:31,080
security

211
00:09:31,080 --> 00:09:34,860
and also it happened that pack email are

212
00:09:34,860 --> 00:09:36,540
very less monetary than traditional

213
00:09:36,540 --> 00:09:37,620
email

214
00:09:37,620 --> 00:09:40,320
and at the same time according to

215
00:09:40,320 --> 00:09:43,260
Italian laws pack email must always be

216
00:09:43,260 --> 00:09:45,480
delivered I mean this is not actually

217
00:09:45,480 --> 00:09:47,760
true they perform site some let's say

218
00:09:47,760 --> 00:09:49,980
accession check so for example if I try

219
00:09:49,980 --> 00:09:52,140
to attach a DOT exe file in the

220
00:09:52,140 --> 00:09:53,459
attachment you're probably okay you

221
00:09:53,459 --> 00:09:55,980
cannot do that but I mean very easy

222
00:09:55,980 --> 00:09:59,300
check to bypass

223
00:10:01,680 --> 00:10:04,920
this is an example of one of their email

224
00:10:04,920 --> 00:10:06,779
template used by the group so as you can

225
00:10:06,779 --> 00:10:09,120
see it is a these are pretty simple

226
00:10:09,120 --> 00:10:11,580
email they're trying to fake in some

227
00:10:11,580 --> 00:10:13,920
some sort of government communication

228
00:10:13,920 --> 00:10:17,100
and all the email typically have a dot

229
00:10:17,100 --> 00:10:20,459
zip file for attachment and if I am a

230
00:10:20,459 --> 00:10:22,680
victim I try to open up this uh ZIP

231
00:10:22,680 --> 00:10:25,140
attachment and find these three files so

232
00:10:25,140 --> 00:10:28,380
for example I can start with the PDF one

233
00:10:28,380 --> 00:10:31,440
try to open it and okay it's corrupted

234
00:10:31,440 --> 00:10:33,720
moving to the next one which is a JPEG

235
00:10:33,720 --> 00:10:36,000
one I can try to open it and this is

236
00:10:36,000 --> 00:10:39,480
corrupted as well so if the victim open

237
00:10:39,480 --> 00:10:41,279
up the third file which is as you can

238
00:10:41,279 --> 00:10:43,380
see a DOT vsf file

239
00:10:43,380 --> 00:10:46,620
this routine will start actually it is

240
00:10:46,620 --> 00:10:48,120
an excellent downloader so we'll perform

241
00:10:48,120 --> 00:10:51,120
a get request from to a specific a

242
00:10:51,120 --> 00:10:53,100
specific common encounter infrastructure

243
00:10:53,100 --> 00:10:55,140
and retrieving back the core module of

244
00:10:55,140 --> 00:10:56,459
sloot

245
00:10:56,459 --> 00:10:59,339
another important thing is authors here

246
00:10:59,339 --> 00:11:01,079
try to

247
00:11:01,079 --> 00:11:02,459
um

248
00:11:02,459 --> 00:11:04,860
create like one thing one timeline

249
00:11:04,860 --> 00:11:07,320
download so if you receive a potentially

250
00:11:07,320 --> 00:11:09,480
email like that and you already clicked

251
00:11:09,480 --> 00:11:11,880
into the SLO downloader you were not

252
00:11:11,880 --> 00:11:13,620
able to retrieve the same payload as

253
00:11:13,620 --> 00:11:15,740
well

254
00:11:16,440 --> 00:11:18,720
so we are moving from pack email to

255
00:11:18,720 --> 00:11:22,140
sload haslode said before is uh let's

256
00:11:22,140 --> 00:11:25,320
say pretty known and analyze a piece of

257
00:11:25,320 --> 00:11:28,680
malware it's a Powershell based loader

258
00:11:28,680 --> 00:11:32,360
and I mean we we will not giving into

259
00:11:32,360 --> 00:11:35,339
much details about it there are out

260
00:11:35,339 --> 00:11:37,860
there a lot of technical analogy I if I

261
00:11:37,860 --> 00:11:39,360
remember correctly also Microsoft

262
00:11:39,360 --> 00:11:42,000
provides two interesting blog posts

263
00:11:42,000 --> 00:11:43,620
describing all the internals and blah

264
00:11:43,620 --> 00:11:47,100
blah blah so for the sake of this talk

265
00:11:47,100 --> 00:11:49,980
you can you can see that sload like

266
00:11:49,980 --> 00:11:52,860
abuse a lot of Windows utilities for

267
00:11:52,860 --> 00:11:54,899
staying under the line so for example

268
00:11:54,899 --> 00:11:57,360
for common and controlling communication

269
00:11:57,360 --> 00:11:59,760
they abuse the bits the bits job

270
00:11:59,760 --> 00:12:02,220
protocol and they have like pretty

271
00:12:02,220 --> 00:12:05,640
interesting uh Recon feature that has

272
00:12:05,640 --> 00:12:07,320
been used leveraged by the threat actor

273
00:12:07,320 --> 00:12:09,420
itself so they can exfiltrate work

274
00:12:09,420 --> 00:12:12,300
extension data for example computer name

275
00:12:12,300 --> 00:12:14,240
process list

276
00:12:14,240 --> 00:12:18,180
Network details Etc they can also take

277
00:12:18,180 --> 00:12:20,640
screenshots as well from the infected

278
00:12:20,640 --> 00:12:24,120
machine a check mailbox data and also

279
00:12:24,120 --> 00:12:26,880
VPN types of file

280
00:12:26,880 --> 00:12:28,800
but the point here is that I mean

281
00:12:28,800 --> 00:12:31,200
Hessler is a pretty let's say

282
00:12:31,200 --> 00:12:33,420
straightforward types of malware so it's

283
00:12:33,420 --> 00:12:34,920
very easy to understand all the

284
00:12:34,920 --> 00:12:36,899
different functionality functionalities

285
00:12:36,899 --> 00:12:39,660
but it's not I mean in these types of in

286
00:12:39,660 --> 00:12:40,920
these

287
00:12:40,920 --> 00:12:41,700
um

288
00:12:41,700 --> 00:12:45,560
infection it's not about what feature

289
00:12:45,560 --> 00:12:49,399
has but it's more like the timing so

290
00:12:49,399 --> 00:12:52,079
threat actors here takes a lot of time

291
00:12:52,079 --> 00:12:54,480
for understanding and building up the

292
00:12:54,480 --> 00:12:57,300
their botnet before getting into the

293
00:12:57,300 --> 00:12:59,100
final payload which is as I said before

294
00:12:59,100 --> 00:13:02,100
around it so during the time that can

295
00:13:02,100 --> 00:13:05,160
lead like days or even weeks they

296
00:13:05,160 --> 00:13:07,980
continue enrichment enrichment their

297
00:13:07,980 --> 00:13:11,700
Bots and try to understand and identify

298
00:13:11,700 --> 00:13:13,760
like suspicious both for example

299
00:13:13,760 --> 00:13:17,339
sandboxes or like Curious researchers

300
00:13:17,339 --> 00:13:22,079
and drop everything from from now on

301
00:13:22,079 --> 00:13:23,820
so as I said before

302
00:13:23,820 --> 00:13:26,100
their goal is in fact in corporate

303
00:13:26,100 --> 00:13:28,980
Windows Workstation

304
00:13:28,980 --> 00:13:31,260
but not only

305
00:13:31,260 --> 00:13:33,899
um not all the windows or station was

306
00:13:33,899 --> 00:13:35,519
stationed inside inside corporate

307
00:13:35,519 --> 00:13:38,820
network but only the machine with has

308
00:13:38,820 --> 00:13:40,440
actually

309
00:13:40,440 --> 00:13:43,200
um real access to banking portal as well

310
00:13:43,200 --> 00:13:46,380
so they build up a simple routine which

311
00:13:46,380 --> 00:13:48,660
is uh some sort of second stage payload

312
00:13:48,660 --> 00:13:52,019
uh we and they distribute and execute

313
00:13:52,019 --> 00:13:54,959
Vis load as well so this simple payload

314
00:13:54,959 --> 00:13:56,760
is basically check

315
00:13:56,760 --> 00:13:59,459
um list of far coded corporate banking

316
00:13:59,459 --> 00:14:02,639
portals against the DNS cache of the

317
00:14:02,639 --> 00:14:05,040
Windows machine so and they send back

318
00:14:05,040 --> 00:14:07,079
the result to the command console as

319
00:14:07,079 --> 00:14:09,060
well so now

320
00:14:09,060 --> 00:14:11,519
um threat actor have basically an idea

321
00:14:11,519 --> 00:14:14,240
of which and how many

322
00:14:14,240 --> 00:14:16,980
potential potential victim they has

323
00:14:16,980 --> 00:14:19,700
under their control

324
00:14:19,800 --> 00:14:24,120
and if you one of those you will see the

325
00:14:24,120 --> 00:14:26,579
like the actual final payload which

326
00:14:26,579 --> 00:14:28,860
consists in a packed a Powershell

327
00:14:28,860 --> 00:14:31,500
payload and if you try to unpack it you

328
00:14:31,500 --> 00:14:33,600
will find like uh some sort of custom

329
00:14:33,600 --> 00:14:36,720
version of a open source project called

330
00:14:36,720 --> 00:14:39,300
powersploit and they the threat actor

331
00:14:39,300 --> 00:14:41,880
modify a module of these open source

332
00:14:41,880 --> 00:14:45,240
project for a reflective injecting a dll

333
00:14:45,240 --> 00:14:48,300
into a remote process and the the dll

334
00:14:48,300 --> 00:14:50,940
will was actually embedded into this

335
00:14:50,940 --> 00:14:53,160
payload as well and as you can see they

336
00:14:53,160 --> 00:14:56,940
put out the 32-bit version and 64-bit

337
00:14:56,940 --> 00:15:00,980
version of the ramit core Bank intrusion

338
00:15:02,339 --> 00:15:04,980
which give us the possibility to go to

339
00:15:04,980 --> 00:15:07,019
the next stage which is run it

340
00:15:07,019 --> 00:15:10,199
run it is a very old

341
00:15:10,199 --> 00:15:12,720
um known Bank intrusion it emerged back

342
00:15:12,720 --> 00:15:16,680
in 2010 but initially they have they

343
00:15:16,680 --> 00:15:17,579
didn't have like Bank information

344
00:15:17,579 --> 00:15:21,360
capabilities it act as worm and but

345
00:15:21,360 --> 00:15:23,100
starting from

346
00:15:23,100 --> 00:15:23,880
um

347
00:15:23,880 --> 00:15:26,940
2016 I guess they start in

348
00:15:26,940 --> 00:15:30,540
um insert like leaking leaked part of

349
00:15:30,540 --> 00:15:32,940
the source code of Zeus which was uh one

350
00:15:32,940 --> 00:15:34,440
of the most notorious Bank intrusion

351
00:15:34,440 --> 00:15:37,380
back in the days and another important

352
00:15:37,380 --> 00:15:39,899
thing behind running it is that it

353
00:15:39,899 --> 00:15:43,680
survived in 2015 to a major disruption

354
00:15:43,680 --> 00:15:47,639
plan operated by heropol itself

355
00:15:47,639 --> 00:15:50,639
and after that they continue to improve

356
00:15:50,639 --> 00:15:53,160
the main functionality so they added new

357
00:15:53,160 --> 00:15:56,100
tactics and experimenting also new

358
00:15:56,100 --> 00:15:59,300
infection chain as well

359
00:16:01,019 --> 00:16:03,060
this is like some sort of main feature

360
00:16:03,060 --> 00:16:05,279
behind Romney as I said before you have

361
00:16:05,279 --> 00:16:07,760
a lot of Advanced Vision

362
00:16:07,760 --> 00:16:10,500
mechanisms and techniques they have

363
00:16:10,500 --> 00:16:13,680
embedded on DGA algorithm form being

364
00:16:13,680 --> 00:16:16,800
more robust to server takedowns and the

365
00:16:16,800 --> 00:16:19,320
the more important thing about ramit

366
00:16:19,320 --> 00:16:21,959
here is is that you have like the one of

367
00:16:21,959 --> 00:16:23,699
the most advanced man in the browser

368
00:16:23,699 --> 00:16:25,560
technique out there that works with more

369
00:16:25,560 --> 00:16:27,959
modern browser as well such as Chrome

370
00:16:27,959 --> 00:16:30,600
Firefox or Internet Edge

371
00:16:30,600 --> 00:16:34,380
and the the point behind the strategy of

372
00:16:34,380 --> 00:16:39,000
this group is to like try to have a um

373
00:16:39,000 --> 00:16:40,980
let's say a completely automatic fraud

374
00:16:40,980 --> 00:16:43,019
approach so they didn't like try to

375
00:16:43,019 --> 00:16:44,940
perform also social engineer attempt to

376
00:16:44,940 --> 00:16:46,800
Victory and try for example with a fake

377
00:16:46,800 --> 00:16:49,320
call with a fake banking operation but

378
00:16:49,320 --> 00:16:52,620
they want to like try to scaling as much

379
00:16:52,620 --> 00:16:54,600
as they can their operation with a

380
00:16:54,600 --> 00:16:57,120
completely automatic approach and for

381
00:16:57,120 --> 00:17:00,480
doing that they build up this webinar

382
00:17:00,480 --> 00:17:02,220
kit that we are going to show you today

383
00:17:02,220 --> 00:17:06,480
and also like custom method methods for

384
00:17:06,480 --> 00:17:09,359
example the possibility to alter in real

385
00:17:09,359 --> 00:17:12,240
time uh banking transfer receive which

386
00:17:12,240 --> 00:17:14,280
is typically common for for example

387
00:17:14,280 --> 00:17:15,959
corporate I perform a new banking

388
00:17:15,959 --> 00:17:19,199
transfer authorize it and after the this

389
00:17:19,199 --> 00:17:21,359
new banking transfer I'll try to print

390
00:17:21,359 --> 00:17:23,640
out the PDF for the invoices for example

391
00:17:23,640 --> 00:17:26,220
which typically contain like banking

392
00:17:26,220 --> 00:17:29,660
details about the transaction

393
00:17:30,299 --> 00:17:33,720
so getting into more details this is a

394
00:17:33,720 --> 00:17:35,820
we were talking about the set the web

395
00:17:35,820 --> 00:17:37,860
inject setup adopted by dribbon so

396
00:17:37,860 --> 00:17:39,780
they're starting insert web inject back

397
00:17:39,780 --> 00:17:42,660
in 2016 and they basically follow in the

398
00:17:42,660 --> 00:17:45,600
standard standard Zeus types of format

399
00:17:45,600 --> 00:17:48,539
but for the very first time Vitali in

400
00:17:48,539 --> 00:17:50,840
2018

401
00:17:50,940 --> 00:17:53,720
like discover the very uh the very first

402
00:17:53,720 --> 00:17:57,000
significant change behind their web

403
00:17:57,000 --> 00:17:58,860
inject configuration so they actually

404
00:17:58,860 --> 00:18:01,380
moving from the zero Zeos traditional

405
00:18:01,380 --> 00:18:04,620
one to a lower code that uh new one

406
00:18:04,620 --> 00:18:06,780
which is still adopted nowadays

407
00:18:06,780 --> 00:18:09,240
according to our analysis and another

408
00:18:09,240 --> 00:18:11,700
important thing is that they also use

409
00:18:11,700 --> 00:18:14,039
some sort of hybrid approach regarding

410
00:18:14,039 --> 00:18:16,140
the web inject payload as you can see is

411
00:18:16,140 --> 00:18:19,200
here in this image this is one of their

412
00:18:19,200 --> 00:18:22,320
we call them locally injects because if

413
00:18:22,320 --> 00:18:23,820
you like getting the hands into the

414
00:18:23,820 --> 00:18:26,580
ramit binary and you try to dump out the

415
00:18:26,580 --> 00:18:28,200
configuration module the configuration

416
00:18:28,200 --> 00:18:30,059
the webinar configuration you can

417
00:18:30,059 --> 00:18:32,280
actually see the payload but you cannot

418
00:18:32,280 --> 00:18:35,160
see all the web inject payable payload

419
00:18:35,160 --> 00:18:38,460
because most some of them which are like

420
00:18:38,460 --> 00:18:39,780
the most interesting one for our

421
00:18:39,780 --> 00:18:42,660
analysis for example such as the ATS

422
00:18:42,660 --> 00:18:45,299
core module or money mule details are

423
00:18:45,299 --> 00:18:47,760
stored in another completely dedicated

424
00:18:47,760 --> 00:18:49,380
common and control infrastructure and

425
00:18:49,380 --> 00:18:53,600
retrieve in real time once needed

426
00:18:55,260 --> 00:19:00,059
and moving these web inject into let's

427
00:19:00,059 --> 00:19:01,740
say the in a common encounter

428
00:19:01,740 --> 00:19:04,260
infrastructure so to centralize them in

429
00:19:04,260 --> 00:19:06,360
on the server side change some sort of

430
00:19:06,360 --> 00:19:08,760
games rules so

431
00:19:08,760 --> 00:19:10,500
um web inject here

432
00:19:10,500 --> 00:19:12,539
are served in real time to a dedicated

433
00:19:12,539 --> 00:19:14,160
common and control infrastructure as I

434
00:19:14,160 --> 00:19:17,460
said before and these uh this is

435
00:19:17,460 --> 00:19:20,700
performed because you can consider the

436
00:19:20,700 --> 00:19:24,059
ATS module or monument is as one of the

437
00:19:24,059 --> 00:19:26,640
most expensive assets for the threat

438
00:19:26,640 --> 00:19:29,280
group itself and also guarantee to the

439
00:19:29,280 --> 00:19:31,740
group to perform some sort of continuous

440
00:19:31,740 --> 00:19:33,780
web inject development without for

441
00:19:33,780 --> 00:19:35,760
example pushing new configuration to the

442
00:19:35,760 --> 00:19:37,980
entire Button as well

443
00:19:37,980 --> 00:19:40,980
and at the same time I mean having these

444
00:19:40,980 --> 00:19:44,220
types of continue web development is

445
00:19:44,220 --> 00:19:47,780
some sort of 24 7 job

446
00:19:49,620 --> 00:19:51,600
another important

447
00:19:51,600 --> 00:19:55,460
things in this story is that during 2021

448
00:19:55,460 --> 00:19:58,020
since our position like working with

449
00:19:58,020 --> 00:20:00,120
banking institution have and try to

450
00:20:00,120 --> 00:20:01,919
connect in dots between like malware

451
00:20:01,919 --> 00:20:04,200
capabilities and also the real impact of

452
00:20:04,200 --> 00:20:07,980
those of those threats we identify that

453
00:20:07,980 --> 00:20:11,760
threat group started creating legitimate

454
00:20:11,760 --> 00:20:13,740
account inside the corporate banking

455
00:20:13,740 --> 00:20:17,280
that they are targeting back in the days

456
00:20:17,280 --> 00:20:20,700
so this attack this this account was run

457
00:20:20,700 --> 00:20:23,340
it directly by thread group itself and

458
00:20:23,340 --> 00:20:25,919
used them for like the debugging

459
00:20:25,919 --> 00:20:28,559
purposes so for example consider that a

460
00:20:28,559 --> 00:20:30,660
specific corporate banking institution

461
00:20:30,660 --> 00:20:33,240
try to put some Contour measure inside

462
00:20:33,240 --> 00:20:36,840
their their actual website and like try

463
00:20:36,840 --> 00:20:39,480
to stop the all the functionality of the

464
00:20:39,480 --> 00:20:42,419
ATS routine from the web inject they

465
00:20:42,419 --> 00:20:45,000
open up their legitimate accounts and

466
00:20:45,000 --> 00:20:47,580
try to use it for understanding what are

467
00:20:47,580 --> 00:20:49,440
the confirmations put in place by Banks

468
00:20:49,440 --> 00:20:51,419
and try to create a new variant of the

469
00:20:51,419 --> 00:20:54,780
web engineer try to bypass them as well

470
00:20:54,780 --> 00:20:57,480
so this is some sort uh debugging

471
00:20:57,480 --> 00:20:59,340
purposes I said before so they use this

472
00:20:59,340 --> 00:21:02,100
for like testing all the new variants as

473
00:21:02,100 --> 00:21:04,799
well with uh before like putting the new

474
00:21:04,799 --> 00:21:08,360
code in production to the entire button

475
00:21:10,380 --> 00:21:12,539
but

476
00:21:12,539 --> 00:21:14,760
let's say let me give you an example you

477
00:21:14,760 --> 00:21:17,280
has a threat actor you have access to

478
00:21:17,280 --> 00:21:19,320
one of the most advanced banking Trojan

479
00:21:19,320 --> 00:21:21,480
out there for example ramnet you also

480
00:21:21,480 --> 00:21:24,120
have like the possibility to use one of

481
00:21:24,120 --> 00:21:26,640
the most advances Advanced ATS web

482
00:21:26,640 --> 00:21:29,220
engine kit for example driven but you're

483
00:21:29,220 --> 00:21:31,440
still missing one important thing for

484
00:21:31,440 --> 00:21:33,600
like ensuring that your fraud operation

485
00:21:33,600 --> 00:21:37,620
scale very well which is

486
00:21:37,620 --> 00:21:39,900
trying to maintain the victim unaware

487
00:21:39,900 --> 00:21:42,539
before a fraud attempt because I mean in

488
00:21:42,539 --> 00:21:45,179
European area banking transfer could

489
00:21:45,179 --> 00:21:47,580
require up to two days for actual actual

490
00:21:47,580 --> 00:21:49,980
getting executed and threat actor need

491
00:21:49,980 --> 00:21:52,320
to maintain the victim unaware of what

492
00:21:52,320 --> 00:21:55,260
happened before so they put in place a

493
00:21:55,260 --> 00:21:57,480
couple of interesting Solutions here so

494
00:21:57,480 --> 00:22:00,179
they use some parts of their web engine

495
00:22:00,179 --> 00:22:02,400
kit code for

496
00:22:02,400 --> 00:22:05,220
um in real time try to alter hold their

497
00:22:05,220 --> 00:22:07,200
currencies of the money mule detail

498
00:22:07,200 --> 00:22:09,780
which can pop up inside the the banking

499
00:22:09,780 --> 00:22:12,659
portal and try to

500
00:22:12,659 --> 00:22:15,320
um change and retrieving the original

501
00:22:15,320 --> 00:22:17,820
data that were inserted by the victim

502
00:22:17,820 --> 00:22:21,059
itself and another interesting thing is

503
00:22:21,059 --> 00:22:24,179
that threat actor here build up

504
00:22:24,179 --> 00:22:27,059
an entire custom function for altering

505
00:22:27,059 --> 00:22:29,220
the PDF document generated by the bank

506
00:22:29,220 --> 00:22:30,780
itself

507
00:22:30,780 --> 00:22:33,480
because yeah typically those documents

508
00:22:33,480 --> 00:22:36,600
contain monomial could contain monomial

509
00:22:36,600 --> 00:22:38,400
transaction summary information so

510
00:22:38,400 --> 00:22:40,500
they're trying to removing or changing

511
00:22:40,500 --> 00:22:42,659
in real time when the user requesting

512
00:22:42,659 --> 00:22:44,460
those documents

513
00:22:44,460 --> 00:22:47,580
so I will resist this to you Allah

514
00:22:47,580 --> 00:22:49,200
thank you very much

515
00:22:49,200 --> 00:22:52,400
hi everybody I think you're still awake

516
00:22:52,400 --> 00:22:55,620
and I hope I will try to keep awake too

517
00:22:55,620 --> 00:22:58,080
so uh in this part of the presentation

518
00:22:58,080 --> 00:23:00,840
we are going to see some solution that

519
00:23:00,840 --> 00:23:03,780
these guys find out to solve their

520
00:23:03,780 --> 00:23:07,140
challenges so the first one is to uh

521
00:23:07,140 --> 00:23:10,200
perform a fully automated approach on

522
00:23:10,200 --> 00:23:14,659
the fraud and also to hide their

523
00:23:14,659 --> 00:23:17,460
operation as much as possible

524
00:23:17,460 --> 00:23:19,320
so the first things that we are going to

525
00:23:19,320 --> 00:23:22,740
see here is the real-time PDF tampering

526
00:23:22,740 --> 00:23:26,880
so let's suppose you are a ramnik victim

527
00:23:26,880 --> 00:23:29,760
so in this case all your connection are

528
00:23:29,760 --> 00:23:32,039
well monitored and of course also your

529
00:23:32,039 --> 00:23:34,140
bank connection so let's suppose that

530
00:23:34,140 --> 00:23:37,380
you are trying to download an invoice of

531
00:23:37,380 --> 00:23:39,659
your bank transfer so the information

532
00:23:39,659 --> 00:23:43,380
are actually uh catched by The Remnant

533
00:23:43,380 --> 00:23:45,419
model sent back to the command and

534
00:23:45,419 --> 00:23:48,240
control when uh the command control

535
00:23:48,240 --> 00:23:51,059
received this information it's check if

536
00:23:51,059 --> 00:23:54,059
your transaction is uh let's call it a

537
00:23:54,059 --> 00:23:56,700
fraud list so it's actually it's

538
00:23:56,700 --> 00:23:59,880
database if your connection is uh sorry

539
00:23:59,880 --> 00:24:02,280
the transaction is not in the database

540
00:24:02,280 --> 00:24:05,700
the bot is instructed to forward all the

541
00:24:05,700 --> 00:24:08,900
connection back to the bank otherwise

542
00:24:08,900 --> 00:24:13,679
the bot is actually instructed to

543
00:24:13,679 --> 00:24:17,460
contact an API also on the command and

544
00:24:17,460 --> 00:24:20,100
control passing specific parameters

545
00:24:20,100 --> 00:24:23,220
related to the transaction

546
00:24:23,220 --> 00:24:27,480
so in this case we can see that this

547
00:24:27,480 --> 00:24:30,720
module is built with a PHP

548
00:24:30,720 --> 00:24:33,600
and we can see here few parameters in

549
00:24:33,600 --> 00:24:37,020
The Orange Box we can see that we have

550
00:24:37,020 --> 00:24:41,400
the bot ID and dreadbox represent the

551
00:24:41,400 --> 00:24:42,980
mule information

552
00:24:42,980 --> 00:24:46,380
related to the fraud and the green one

553
00:24:46,380 --> 00:24:49,679
represents actually the original pay

554
00:24:49,679 --> 00:24:52,559
issued by the users

555
00:24:52,559 --> 00:24:56,039
so uh I don't know if some of you can

556
00:24:56,039 --> 00:24:57,900
you know spoil that there is something

557
00:24:57,900 --> 00:25:00,440
missing here because as Federico said

558
00:25:00,440 --> 00:25:04,020
they attacked more than one Banks so in

559
00:25:04,020 --> 00:25:06,380
this case they need to also understand

560
00:25:06,380 --> 00:25:09,960
which template it's used for the

561
00:25:09,960 --> 00:25:11,640
specific transaction

562
00:25:11,640 --> 00:25:15,179
and as I said they monitor all requests

563
00:25:15,179 --> 00:25:18,600
to the bank and they are capable to of

564
00:25:18,600 --> 00:25:22,559
course analyze the HTTP request and the

565
00:25:22,559 --> 00:25:23,960
refereer

566
00:25:23,960 --> 00:25:27,360
parameters so and with a kind of regular

567
00:25:27,360 --> 00:25:31,559
expression they extract the bank

568
00:25:31,559 --> 00:25:35,460
and create a python script that will

569
00:25:35,460 --> 00:25:38,700
change this information so you on the

570
00:25:38,700 --> 00:25:40,980
common and control server you will have

571
00:25:40,980 --> 00:25:44,760
a folder for each bot and each folder

572
00:25:44,760 --> 00:25:48,200
contains two files plus the

573
00:25:48,200 --> 00:25:51,179
python script these two files one

574
00:25:51,179 --> 00:25:54,539
represents the actual invoice issued by

575
00:25:54,539 --> 00:25:57,720
the bank and contains the information to

576
00:25:57,720 --> 00:26:00,179
related to the money mule and the other

577
00:26:00,179 --> 00:26:04,740
file is actually the one altered by uh

578
00:26:04,740 --> 00:26:07,140
uh the traductors

579
00:26:07,140 --> 00:26:10,140
and this is our result I I don't know if

580
00:26:10,140 --> 00:26:13,679
it's big enough to to to understand that

581
00:26:13,679 --> 00:26:17,760
there is actually uh the same data on uh

582
00:26:17,760 --> 00:26:20,520
on on this invoice that just the one

583
00:26:20,520 --> 00:26:24,299
things that changes is related to uh the

584
00:26:24,299 --> 00:26:27,299
mule account and the information about

585
00:26:27,299 --> 00:26:29,340
the original pay

586
00:26:29,340 --> 00:26:31,860
well actually this is a kind of uh

587
00:26:31,860 --> 00:26:36,120
breakthrough uh functionality because I

588
00:26:36,120 --> 00:26:38,600
don't know if any one of you

589
00:26:38,600 --> 00:26:43,140
checks uh the metadata within the an

590
00:26:43,140 --> 00:26:46,820
invoice when you perform a bank transfer

591
00:26:46,820 --> 00:26:50,940
so I can assure you that this give to

592
00:26:50,940 --> 00:26:53,880
flow department or the banks a few

593
00:26:53,880 --> 00:26:58,020
months of headache to to understand and

594
00:26:58,020 --> 00:27:01,679
uh of course it's um let me say

595
00:27:01,679 --> 00:27:04,080
um it's like you you can share this

596
00:27:04,080 --> 00:27:07,799
information with the payee so you when

597
00:27:07,799 --> 00:27:10,740
receive this kind of piece of paper

598
00:27:10,740 --> 00:27:13,740
let's say you can share with the pay and

599
00:27:13,740 --> 00:27:16,500
there is no need for you to come back

600
00:27:16,500 --> 00:27:19,919
and check if the transaction is okay you

601
00:27:19,919 --> 00:27:22,740
just wait for the time required for to

602
00:27:22,740 --> 00:27:26,400
to complete the the transaction and this

603
00:27:26,400 --> 00:27:29,760
of course lead to a friend so just a

604
00:27:29,760 --> 00:27:31,440
quick advice sometimes it's good to

605
00:27:31,440 --> 00:27:34,559
check for metadata also yeah

606
00:27:34,559 --> 00:27:38,159
but anyway uh we also started to call

607
00:27:38,159 --> 00:27:40,980
about dribbon that solved the other part

608
00:27:40,980 --> 00:27:45,360
of the the challenge that was to avoid

609
00:27:45,360 --> 00:27:48,120
performing social engineering and so

610
00:27:48,120 --> 00:27:50,000
they try to

611
00:27:50,000 --> 00:27:52,500
provide a full automated approach to the

612
00:27:52,500 --> 00:27:53,400
fraud

613
00:27:53,400 --> 00:27:57,600
so uh driven it's called in this way

614
00:27:57,600 --> 00:28:00,840
because it's a merge of dropper plus uh

615
00:28:00,840 --> 00:28:04,740
International Bank transfer bank account

616
00:28:04,740 --> 00:28:07,860
number and also the name of the variable

617
00:28:07,860 --> 00:28:11,580
that you can see uh on screen there

618
00:28:11,580 --> 00:28:17,940
it has been discovered in 2018 and 2019

619
00:28:17,940 --> 00:28:20,640
it's completely written in JavaScript

620
00:28:20,640 --> 00:28:23,880
and it's of course it's also equipped

621
00:28:23,880 --> 00:28:27,059
with a ATS module so automatic transfer

622
00:28:27,059 --> 00:28:28,860
System model that swapped the

623
00:28:28,860 --> 00:28:33,419
information when uh you know a user try

624
00:28:33,419 --> 00:28:36,059
to perform a bank transfer so it's not

625
00:28:36,059 --> 00:28:39,000
magic actually the web injection kit

626
00:28:39,000 --> 00:28:42,900
works when the user tried to uh

627
00:28:42,900 --> 00:28:45,659
performance on suction so it's also

628
00:28:45,659 --> 00:28:48,000
required by user to do something

629
00:28:48,000 --> 00:28:51,960
we have divided a tribun in three main

630
00:28:51,960 --> 00:28:54,659
models the first one is the mule

631
00:28:54,659 --> 00:28:58,080
configuration and it's sat there uh in

632
00:28:58,080 --> 00:29:01,740
uh in the red box you see the bank

633
00:29:01,740 --> 00:29:03,960
account number related to the money mule

634
00:29:03,960 --> 00:29:07,140
uh actually in this campaign or in this

635
00:29:07,140 --> 00:29:10,860
uh in this snippet code we have two mule

636
00:29:10,860 --> 00:29:14,340
active but and other parameter that is

637
00:29:14,340 --> 00:29:17,100
also important for us is the minimum and

638
00:29:17,100 --> 00:29:20,880
the maximum uh numbers because these are

639
00:29:20,880 --> 00:29:24,539
the money that a specific mule can

640
00:29:24,539 --> 00:29:25,679
handle

641
00:29:25,679 --> 00:29:30,659
then also we have divided uh in other

642
00:29:30,659 --> 00:29:34,620
two piece that is the ATS module engine

643
00:29:34,620 --> 00:29:37,320
and the visualization module that is

644
00:29:37,320 --> 00:29:40,260
going to change the information when a

645
00:29:40,260 --> 00:29:42,899
fraud happen

646
00:29:42,899 --> 00:29:46,620
but before going deep uh with this

647
00:29:46,620 --> 00:29:49,020
module I would like to give you a

648
00:29:49,020 --> 00:29:52,500
timeline just to recap the history of

649
00:29:52,500 --> 00:29:54,360
this web injection kit

650
00:29:54,360 --> 00:29:58,760
so uh when it was discovered in 2018

651
00:29:58,760 --> 00:30:03,240
uh it didn't have any kind of uh let me

652
00:30:03,240 --> 00:30:06,360
say polymorphic code it was almost plain

653
00:30:06,360 --> 00:30:10,500
text then we started to see that we have

654
00:30:10,500 --> 00:30:14,399
um most of the mule networks belongs to

655
00:30:14,399 --> 00:30:17,659
Italy but actually probably

656
00:30:17,659 --> 00:30:21,480
they started to use this mule because it

657
00:30:21,480 --> 00:30:24,899
was the target country at the moment

658
00:30:24,899 --> 00:30:27,659
and then we started to see a few changes

659
00:30:27,659 --> 00:30:31,500
probably as a counter measures uh to

660
00:30:31,500 --> 00:30:34,320
avoid detection system deployed by Banks

661
00:30:34,320 --> 00:30:36,480
so we started to see polymorphic code

662
00:30:36,480 --> 00:30:41,940
and also a quite strange uh let me say

663
00:30:41,940 --> 00:30:45,659
Paradigm that we saw it was an attempt

664
00:30:45,659 --> 00:30:49,500
of extortion uh in Bitcoin so they try

665
00:30:49,500 --> 00:30:50,760
to

666
00:30:50,760 --> 00:30:52,039
um

667
00:30:52,039 --> 00:30:56,940
send messages to Banks or people that

668
00:30:56,940 --> 00:31:00,480
were monitoring their activity so the

669
00:31:00,480 --> 00:31:03,720
this history was divided in three

670
00:31:03,720 --> 00:31:06,899
different waves and also represent the

671
00:31:06,899 --> 00:31:09,320
intensity of the activity

672
00:31:09,320 --> 00:31:12,899
related to dribbon so the peak was

673
00:31:12,899 --> 00:31:17,340
reached in September 2021 and timeline

674
00:31:17,340 --> 00:31:22,080
goes until July 2022 so just keep in

675
00:31:22,080 --> 00:31:24,659
mind because it will become handy in a

676
00:31:24,659 --> 00:31:26,399
few slides

677
00:31:26,399 --> 00:31:29,700
so let's have a look at the the ATS

678
00:31:29,700 --> 00:31:34,500
engine module I've deleted it in three

679
00:31:34,500 --> 00:31:37,919
box and I've also numbered to make it as

680
00:31:37,919 --> 00:31:40,740
clear as possible so in The Orange Box

681
00:31:40,740 --> 00:31:45,779
Box we see that they hook a button in

682
00:31:45,779 --> 00:31:48,899
this case the button is used to send

683
00:31:48,899 --> 00:31:53,159
information about the transaction from

684
00:31:53,159 --> 00:31:54,720
the user to the bank

685
00:31:54,720 --> 00:31:57,380
the second box the yellow one

686
00:31:57,380 --> 00:32:01,460
is related to the money mule

687
00:32:01,460 --> 00:32:04,919
let me say amount of money that is

688
00:32:04,919 --> 00:32:07,260
capable to handle so in this case they

689
00:32:07,260 --> 00:32:09,659
are going to check if the

690
00:32:09,659 --> 00:32:11,700
the transaction that is going to be

691
00:32:11,700 --> 00:32:14,880
performed by the user could be swap it

692
00:32:14,880 --> 00:32:18,179
in somehow so if so if the range that is

693
00:32:18,179 --> 00:32:20,520
going to be paid by the user is within

694
00:32:20,520 --> 00:32:23,340
the range handled by the mule they are

695
00:32:23,340 --> 00:32:26,340
going to swap this information changing

696
00:32:26,340 --> 00:32:29,820
the bank account number and also the

697
00:32:29,820 --> 00:32:31,980
name of the pay

698
00:32:31,980 --> 00:32:37,320
if everything goes well uh there is also

699
00:32:37,320 --> 00:32:39,840
another challenge that they need to

700
00:32:39,840 --> 00:32:43,380
overcome because of the psd2 regulation

701
00:32:43,380 --> 00:32:47,039
Banks need to provide information uh

702
00:32:47,039 --> 00:32:49,860
about the transaction before a user are

703
00:32:49,860 --> 00:32:52,220
going to authorize it so in this case

704
00:32:52,220 --> 00:32:55,440
they try to hide the information in

705
00:32:55,440 --> 00:32:58,080
background and also substitute

706
00:32:58,080 --> 00:33:01,260
additional information that in this case

707
00:33:01,260 --> 00:33:07,158
pop-up uh from uh in this page

708
00:33:07,320 --> 00:33:12,539
well a few uh evading techniques here

709
00:33:12,539 --> 00:33:16,320
are the polymorphic code so they started

710
00:33:16,320 --> 00:33:20,399
to scrum a few variable we have also

711
00:33:20,399 --> 00:33:22,799
some string encoding and string

712
00:33:22,799 --> 00:33:26,779
splitting it seems quite easy

713
00:33:26,779 --> 00:33:29,340
countermeasures but they actually works

714
00:33:29,340 --> 00:33:32,340
well because when you inject a code in a

715
00:33:32,340 --> 00:33:35,340
page and you need to find out where this

716
00:33:35,340 --> 00:33:38,760
code is so anytime they apply this kind

717
00:33:38,760 --> 00:33:41,279
of countermeasures bank and monitoring

718
00:33:41,279 --> 00:33:44,940
system had to find out where this piece

719
00:33:44,940 --> 00:33:47,640
of code was hiding

720
00:33:47,640 --> 00:33:50,580
so uh just to conclude this part I would

721
00:33:50,580 --> 00:33:54,840
like to also I like this uh extortion

722
00:33:54,840 --> 00:33:59,100
attempt is um as strange and strange

723
00:33:59,100 --> 00:34:02,159
Paradigm let me say because

724
00:34:02,159 --> 00:34:06,179
um web injection are issued for uh users

725
00:34:06,179 --> 00:34:09,918
so the user should be

726
00:34:09,918 --> 00:34:13,320
the victim of this kind of of web

727
00:34:13,320 --> 00:34:14,719
injection

728
00:34:14,719 --> 00:34:18,899
but probably they started to understand

729
00:34:18,899 --> 00:34:23,280
that something was going on behind

730
00:34:23,280 --> 00:34:27,359
behind the bank department so the

731
00:34:27,359 --> 00:34:30,960
countermissions deployed started to

732
00:34:30,960 --> 00:34:34,560
um fight a chain uh challenge them in a

733
00:34:34,560 --> 00:34:37,859
good way and probably it was an attempt

734
00:34:37,859 --> 00:34:41,219
to you know perform a different type of

735
00:34:41,219 --> 00:34:43,819
cash out

736
00:34:44,040 --> 00:34:47,820
then we are going to have a look at the

737
00:34:47,820 --> 00:34:52,320
money laundering part as Federico said

738
00:34:52,320 --> 00:34:54,679
we had a chance to see

739
00:34:54,679 --> 00:34:59,220
their control panel related to the web

740
00:34:59,220 --> 00:35:02,760
injection kit so we were capable to

741
00:35:02,760 --> 00:35:05,580
extract few information from the panel

742
00:35:05,580 --> 00:35:09,960
and also thanks also to the Forefront

743
00:35:09,960 --> 00:35:13,800
position for clifi uh with banks so we

744
00:35:13,800 --> 00:35:17,160
were capable to see also transaction

745
00:35:17,160 --> 00:35:21,380
so this is actually the main dashboard

746
00:35:21,380 --> 00:35:23,880
of the panel

747
00:35:23,880 --> 00:35:28,440
uh we can see here that the campaign are

748
00:35:28,440 --> 00:35:32,280
structured in uh in Wix and each weeks

749
00:35:32,280 --> 00:35:35,640
contain one or multiple mules there is

750
00:35:35,640 --> 00:35:39,000
also uh if you see in the in the Box on

751
00:35:39,000 --> 00:35:42,599
the left weekly statistics so they keep

752
00:35:42,599 --> 00:35:46,220
monitoring if they were capable to steal

753
00:35:46,220 --> 00:35:50,099
to reach the goal for the week and we

754
00:35:50,099 --> 00:35:53,040
also have the amount range the one that

755
00:35:53,040 --> 00:35:55,800
I told you before about the swap

756
00:35:55,800 --> 00:35:59,640
payments and also a comment line

757
00:35:59,640 --> 00:36:02,700
for operators to probably exchange

758
00:36:02,700 --> 00:36:07,079
information about the specific campaign

759
00:36:07,079 --> 00:36:09,420
but another interesting stuff that we

760
00:36:09,420 --> 00:36:13,740
were capable to see is uh also what is

761
00:36:13,740 --> 00:36:16,500
called a stop list in this case this is

762
00:36:16,500 --> 00:36:18,260
a quite useful

763
00:36:18,260 --> 00:36:22,200
mechanism in order to avoid

764
00:36:22,200 --> 00:36:26,099
um to disrupt their own botnet so in

765
00:36:26,099 --> 00:36:28,980
this case they avoid also to give away

766
00:36:28,980 --> 00:36:32,339
for free the core information related to

767
00:36:32,339 --> 00:36:34,320
the web inject so in this case if you

768
00:36:34,320 --> 00:36:36,420
are put in The Blacklist you won't

769
00:36:36,420 --> 00:36:39,780
receive any payloads related to driven

770
00:36:39,780 --> 00:36:42,540
so you won't be able to see any kind of

771
00:36:42,540 --> 00:36:45,180
injection so you are putting this list

772
00:36:45,180 --> 00:36:49,079
if an attempts of Route happen to your

773
00:36:49,079 --> 00:36:52,260
computer so and you are in this list for

774
00:36:52,260 --> 00:36:55,200
let me say 30 days more or less

775
00:36:55,200 --> 00:36:59,780
this is a good value actually because

776
00:36:59,780 --> 00:37:03,540
doing an action like that avoid also you

777
00:37:03,540 --> 00:37:06,900
to start new campaign Mouse from

778
00:37:06,900 --> 00:37:09,359
campaign especially when you are

779
00:37:09,359 --> 00:37:11,579
reaching the peak of your infection so

780
00:37:11,579 --> 00:37:14,280
you are putting yourself under a kind of

781
00:37:14,280 --> 00:37:16,740
magnifying glass so this is a good

782
00:37:16,740 --> 00:37:20,400
strategy also to avoid detection

783
00:37:20,400 --> 00:37:23,220
and another important things that we

784
00:37:23,220 --> 00:37:25,619
were capable to see it's also the cash

785
00:37:25,619 --> 00:37:26,900
flow

786
00:37:26,900 --> 00:37:30,839
of course we were capable to see that

787
00:37:30,839 --> 00:37:33,660
most of the money uh goes to the Western

788
00:37:33,660 --> 00:37:37,260
Europe but the important things here is

789
00:37:37,260 --> 00:37:40,500
the the first transfer so the monomial

790
00:37:40,500 --> 00:37:43,980
Network were located in Italy and of

791
00:37:43,980 --> 00:37:46,020
course there is a reason here because

792
00:37:46,020 --> 00:37:49,200
when you do a bank transfer and when you

793
00:37:49,200 --> 00:37:50,460
do

794
00:37:50,460 --> 00:37:53,460
um in the same country or also in the

795
00:37:53,460 --> 00:37:54,780
same institution you don't need to

796
00:37:54,780 --> 00:37:57,240
provide a lot of information probably

797
00:37:57,240 --> 00:37:59,760
you just do the transfer without any

798
00:37:59,760 --> 00:38:02,579
problem and since they do not have any

799
00:38:02,579 --> 00:38:04,880
kind of social engineering

800
00:38:04,880 --> 00:38:09,980
operators behind the frauds they have to

801
00:38:09,980 --> 00:38:13,020
maximized income and avoid any technical

802
00:38:13,020 --> 00:38:15,619
issue and of course when you do

803
00:38:15,619 --> 00:38:19,260
especially let me say bank transfer and

804
00:38:19,260 --> 00:38:23,160
International Bank transfer you also in

805
00:38:23,160 --> 00:38:27,020
somehow put a red flag

806
00:38:27,020 --> 00:38:30,599
on your records so probably even the

807
00:38:30,599 --> 00:38:33,960
department fraud will be alerted by this

808
00:38:33,960 --> 00:38:35,640
kind of stuff

809
00:38:35,640 --> 00:38:38,760
so before concluding I would like to

810
00:38:38,760 --> 00:38:42,119
show you a few numbers that we were

811
00:38:42,119 --> 00:38:45,540
capable to collect from this guy so

812
00:38:45,540 --> 00:38:47,820
it's actually a good or bad business

813
00:38:47,820 --> 00:38:51,060
model so we are going to see uh this

814
00:38:51,060 --> 00:38:54,900
kind of fraud also in the future uh

815
00:38:54,900 --> 00:38:58,740
probably the answer is yes because they

816
00:38:58,740 --> 00:39:01,320
were capable to steal around 50 million

817
00:39:01,320 --> 00:39:05,280
from victims and they were capable also

818
00:39:05,280 --> 00:39:08,400
to infect one or two hundred percent

819
00:39:08,400 --> 00:39:11,460
population of a specific bank uh bank

820
00:39:11,460 --> 00:39:14,280
institution if we think that one of

821
00:39:14,280 --> 00:39:17,700
these institutions could have more than

822
00:39:17,700 --> 00:39:20,760
uh you know 10 millions of customers

823
00:39:20,760 --> 00:39:24,000
it's easy to spot that they were capable

824
00:39:24,000 --> 00:39:27,240
to have one hundred thousand two hundred

825
00:39:27,240 --> 00:39:29,940
thousand victims in their their birth

826
00:39:29,940 --> 00:39:34,320
net however I told you uh that due July

827
00:39:34,320 --> 00:39:38,460
2022 it was an important date because of

828
00:39:38,460 --> 00:39:41,579
course uh some of you probably will be

829
00:39:41,579 --> 00:39:43,440
curious about today

830
00:39:43,440 --> 00:39:47,579
and today we can say that we have no

831
00:39:47,579 --> 00:39:51,480
Remnant uh and driven fraud since July

832
00:39:51,480 --> 00:39:54,960
2022 and most of the both have been

833
00:39:54,960 --> 00:39:59,099
identified and also disarmed thanks to

834
00:39:59,099 --> 00:40:03,000
the struggle of bank institution and of

835
00:40:03,000 --> 00:40:05,520
course mule network has been uh

836
00:40:05,520 --> 00:40:08,339
identified and information has been

837
00:40:08,339 --> 00:40:11,400
shared with law enforcement and other

838
00:40:11,400 --> 00:40:13,200
institutions

839
00:40:13,200 --> 00:40:16,440
and this conclude the presentation I

840
00:40:16,440 --> 00:40:17,960
hope you enjoyed it

841
00:40:17,960 --> 00:40:29,749
[Applause]

842
00:40:34,320 --> 00:40:37,099
another question

843
00:40:48,060 --> 00:40:50,640
um hello thank you for the presentation

844
00:40:50,640 --> 00:40:53,940
you said that

845
00:40:53,940 --> 00:40:56,280
they managed to extract around 50

846
00:40:56,280 --> 00:40:59,220
million from the victims but your slides

847
00:40:59,220 --> 00:41:02,099
said that they tried so how much damage

848
00:41:02,099 --> 00:41:04,619
was caused financially

849
00:41:04,619 --> 00:41:07,320
I mean we cannot like getting into

850
00:41:07,320 --> 00:41:09,660
detail since this is not an information

851
00:41:09,660 --> 00:41:12,420
that we can like verify the the right

852
00:41:12,420 --> 00:41:15,359
information that they try to uh like

853
00:41:15,359 --> 00:41:17,880
cash out over 50 million dollars but we

854
00:41:17,880 --> 00:41:20,220
don't we didn't have like the position

855
00:41:20,220 --> 00:41:24,000
for uh understand which what which part

856
00:41:24,000 --> 00:41:26,280
of their their actually like being

857
00:41:26,280 --> 00:41:29,300
stolen from the victim

858
00:41:31,560 --> 00:41:34,220
over there

859
00:41:40,440 --> 00:41:42,540
hello and uh thank you I have a question

860
00:41:42,540 --> 00:41:45,720
about the PDF interception phase is this

861
00:41:45,720 --> 00:41:49,079
a case for better training with science

862
00:41:49,079 --> 00:41:52,440
certificates for PDFs for employees or

863
00:41:52,440 --> 00:41:54,359
to make at least the mobile more um

864
00:41:54,359 --> 00:41:57,359
involved if it has to also exchange your

865
00:41:57,359 --> 00:41:59,880
PDF or attack the PDF

866
00:41:59,880 --> 00:42:02,880
um locally when it's digitally signed

867
00:42:02,880 --> 00:42:06,240
you wanna get things uh but I mean they

868
00:42:06,240 --> 00:42:09,000
as far as we can see uh like banking

869
00:42:09,000 --> 00:42:11,040
institution doesn't like sign document

870
00:42:11,040 --> 00:42:12,960
or blah blah blah you you will receive

871
00:42:12,960 --> 00:42:16,260
like a very simple PDF so the point is

872
00:42:16,260 --> 00:42:18,540
when the PDF came back from the banking

873
00:42:18,540 --> 00:42:21,359
institution back end to the client they

874
00:42:21,359 --> 00:42:24,000
intercept the PDF file sent back to

875
00:42:24,000 --> 00:42:25,680
their common encounter infrastructure

876
00:42:25,680 --> 00:42:28,619
and without python routine which is

877
00:42:28,619 --> 00:42:30,599
called PDF reductor I think it's open

878
00:42:30,599 --> 00:42:32,280
source and a publicly researchable on

879
00:42:32,280 --> 00:42:37,079
GitHub uh they actually perform a script

880
00:42:37,079 --> 00:42:40,440
over it and produce a new one which is

881
00:42:40,440 --> 00:42:42,480
then sent back to the victim so the

882
00:42:42,480 --> 00:42:45,180
victim will like see only the alternate

883
00:42:45,180 --> 00:42:47,220
one I don't know if you if I get the

884
00:42:47,220 --> 00:42:49,399
question

885
00:42:51,839 --> 00:42:53,820
PDF were to be signed the initially

886
00:42:53,820 --> 00:42:55,260
created one you can't just alter it

887
00:42:55,260 --> 00:42:59,839
right this is not sign but if it were

888
00:43:00,900 --> 00:43:03,000
I don't get the uh the point I didn't

889
00:43:03,000 --> 00:43:05,400
get the point yeah if the bank signs the

890
00:43:05,400 --> 00:43:07,740
PDF then it would be fine because it

891
00:43:07,740 --> 00:43:09,540
can't be altered

892
00:43:09,540 --> 00:43:11,819
uh so my question is shouldn't the bank

893
00:43:11,819 --> 00:43:15,140
be signed up okay okay yeah okay

894
00:43:15,140 --> 00:43:17,819
so if you sign the PDF yeah you were

895
00:43:17,819 --> 00:43:19,680
enabled I mean in this specific case to

896
00:43:19,680 --> 00:43:22,578
alter the PDF yeah

897
00:43:26,339 --> 00:43:30,020
one last question yeah

898
00:43:43,079 --> 00:43:44,579
thank you

899
00:43:44,579 --> 00:43:47,460
um I have a question about the user

900
00:43:47,460 --> 00:43:52,020
experience when the PDF is changed is

901
00:43:52,020 --> 00:43:55,140
there a latency before he click to

902
00:43:55,140 --> 00:43:57,619
download it and he received the modified

903
00:43:57,619 --> 00:44:00,540
PDF I think it's just couple of seconds

904
00:44:00,540 --> 00:44:02,760
maybe yes maybe a couple of seconds we

905
00:44:02,760 --> 00:44:05,579
did see any kind of latency the change

906
00:44:05,579 --> 00:44:08,460
is almost immediately okay yeah great

907
00:44:08,460 --> 00:44:11,180
thank you

908
00:44:11,599 --> 00:44:15,680
okay last question

909
00:44:21,240 --> 00:44:23,400
okay thank you thank you very much thank

910
00:44:23,400 --> 00:44:25,579
you

