1
00:00:01,140 --> 00:00:03,479
uh hello everybody uh nice to meet you

2
00:00:03,480 --> 00:00:05,279
I'm going to tell you about the plague

3
00:00:05,279 --> 00:00:07,379
of advanced bad Bots

4
00:00:07,379 --> 00:00:09,000
and more specifically we'll try together

5
00:00:09,000 --> 00:00:11,160
to deconstruct the malicious about

6
00:00:11,160 --> 00:00:12,660
problem

7
00:00:12,660 --> 00:00:15,059
but before we start let's go back a bit

8
00:00:15,059 --> 00:00:17,820
in the past and let's talk about what

9
00:00:17,820 --> 00:00:19,260
happened with the Vinted platform

10
00:00:19,260 --> 00:00:21,359
apparently it was targeted by a large

11
00:00:21,359 --> 00:00:23,760
cyber attacks and hundreds of accounts

12
00:00:23,760 --> 00:00:25,619
were stolen

13
00:00:25,619 --> 00:00:28,019
from what we could read in the news

14
00:00:28,019 --> 00:00:30,060
they were still not because there was a

15
00:00:30,060 --> 00:00:32,040
vulnerability in the sides but because

16
00:00:32,040 --> 00:00:34,380
those hacked users use the same

17
00:00:34,380 --> 00:00:38,340
credentials in different platforms

18
00:00:38,340 --> 00:00:40,680
and the attacker used the data from

19
00:00:40,680 --> 00:00:43,440
previous bridged in order to to find

20
00:00:43,440 --> 00:00:46,920
those uh those accounts and hack them so

21
00:00:46,920 --> 00:00:50,280
it means that this platform was targeted

22
00:00:50,280 --> 00:00:52,739
by a credential Staffing attack and this

23
00:00:52,739 --> 00:00:54,660
is one of the threats that as is about

24
00:00:54,660 --> 00:00:56,399
represents and one of the attack that

25
00:00:56,399 --> 00:00:59,280
we're going to talk about today

26
00:00:59,280 --> 00:01:01,500
so my name is Ivan sinam I am security

27
00:01:01,500 --> 00:01:04,140
researcher at impreva I've been

28
00:01:04,140 --> 00:01:05,519
researching for four years in the field

29
00:01:05,519 --> 00:01:07,860
of cyber security I spent the first part

30
00:01:07,860 --> 00:01:09,840
of my time analyzing malware but more

31
00:01:09,840 --> 00:01:11,640
recently I spent time on web application

32
00:01:11,640 --> 00:01:13,320
security try to understand how Bots

33
00:01:13,320 --> 00:01:15,659
behaved if there was to detect them and

34
00:01:15,659 --> 00:01:17,700
even block them

35
00:01:17,700 --> 00:01:19,560
uh so this is the agenda of the session

36
00:01:19,560 --> 00:01:20,580
today

37
00:01:20,580 --> 00:01:22,619
so first we're going to talk about

38
00:01:22,619 --> 00:01:25,020
relatively quickly uh about the the

39
00:01:25,020 --> 00:01:27,299
ecosystem of advanced blood then after

40
00:01:27,299 --> 00:01:28,799
we'll talk about the structure of

41
00:01:28,799 --> 00:01:31,860
advanced Bloods and finally we'll see a

42
00:01:31,860 --> 00:01:34,860
few evasions techniques that I spotted

43
00:01:34,860 --> 00:01:37,220
during my investigation

44
00:01:37,220 --> 00:01:39,840
first of all just a quick definition

45
00:01:39,840 --> 00:01:42,000
what exactly is about

46
00:01:42,000 --> 00:01:43,680
so it's a software that automates

47
00:01:43,680 --> 00:01:45,900
actions on the internet

48
00:01:45,900 --> 00:01:48,240
so there are good mods of course like

49
00:01:48,240 --> 00:01:50,460
for example googlebot that's scrolling

50
00:01:50,460 --> 00:01:51,780
the internet in order to improve its

51
00:01:51,780 --> 00:01:53,700
search engine results and you have bad

52
00:01:53,700 --> 00:01:56,220
Bots for example vulnerability scanners

53
00:01:56,220 --> 00:01:57,540
that are constantly scanning the

54
00:01:57,540 --> 00:01:58,979
internet in search of vulnerable web

55
00:01:58,979 --> 00:02:01,500
servers in order to exploit them the

56
00:02:01,500 --> 00:02:03,060
difference between the two is the

57
00:02:03,060 --> 00:02:05,640
consent of the web server to be reached

58
00:02:05,640 --> 00:02:08,399
by this kind of Bot for example a good

59
00:02:08,399 --> 00:02:10,560
bot will always respect the robots.txt

60
00:02:10,560 --> 00:02:12,660
file at the root of the web server that

61
00:02:12,660 --> 00:02:15,900
specifies which address a website agrees

62
00:02:15,900 --> 00:02:18,660
to be reached at by mods

63
00:02:18,660 --> 00:02:21,000
now let's talk quickly about Telemetry

64
00:02:21,000 --> 00:02:25,140
so it was estimated that in 2021 43 of

65
00:02:25,140 --> 00:02:27,239
the whole internet traffic was due to

66
00:02:27,239 --> 00:02:33,120
Bots and if we focus a bit 27 of this of

67
00:02:33,120 --> 00:02:35,760
the whole entire traffic due to bandbots

68
00:02:35,760 --> 00:02:37,620
with an increase of two person compared

69
00:02:37,620 --> 00:02:40,260
to the previous year so what exactly is

70
00:02:40,260 --> 00:02:41,940
this bad bot traffic

71
00:02:41,940 --> 00:02:43,379
so in order to answer this question

72
00:02:43,379 --> 00:02:45,480
we're going to go over like a few

73
00:02:45,480 --> 00:02:48,360
examples of bad Bots and explain how

74
00:02:48,360 --> 00:02:49,319
they work

75
00:02:49,319 --> 00:02:52,379
so first one that we can talk about is

76
00:02:52,379 --> 00:02:54,480
like open ballet so it can be used for

77
00:02:54,480 --> 00:02:56,640
example for credential Staffing so this

78
00:02:56,640 --> 00:02:59,340
is its main interface so it takes as

79
00:02:59,340 --> 00:03:02,340
input first a combo list of username and

80
00:03:02,340 --> 00:03:04,920
passwords for example and a

81
00:03:04,920 --> 00:03:06,959
configuration file that specifies the

82
00:03:06,959 --> 00:03:09,060
flow of request to be performed against

83
00:03:09,060 --> 00:03:11,400
the specific site in order to do a

84
00:03:11,400 --> 00:03:13,739
logging attempt

85
00:03:13,739 --> 00:03:15,959
so this can be for example a lolly file

86
00:03:15,959 --> 00:03:19,400
or written in a c-sharp

87
00:03:19,500 --> 00:03:21,420
then we have for example icon creation

88
00:03:21,420 --> 00:03:24,720
but for example this one from auscd so

89
00:03:24,720 --> 00:03:26,220
it has the ability to generate accounts

90
00:03:26,220 --> 00:03:29,159
for roughly 40 different Bots 40

91
00:03:29,159 --> 00:03:31,560
different websites e-commerce websites

92
00:03:31,560 --> 00:03:33,780
like for example Amazon or Microsoft

93
00:03:33,780 --> 00:03:35,280
Xbox

94
00:03:35,280 --> 00:03:37,200
and usually the accounts generated by

95
00:03:37,200 --> 00:03:39,540
this bot can be used for another type of

96
00:03:39,540 --> 00:03:42,659
attack called the scalping so in order

97
00:03:42,659 --> 00:03:45,299
to explain the idea behind I'm going to

98
00:03:45,299 --> 00:03:47,700
tell you a small story so let's imagine

99
00:03:47,700 --> 00:03:50,040
that you own a e-commerce website and

100
00:03:50,040 --> 00:03:51,659
you started the ambitious strategy of

101
00:03:51,659 --> 00:03:53,940
releasing premium items in order to

102
00:03:53,940 --> 00:03:56,819
reward your loyal customers and then at

103
00:03:56,819 --> 00:03:58,620
the launch day of your release you

104
00:03:58,620 --> 00:04:00,780
realize that all your items almost

105
00:04:00,780 --> 00:04:03,840
solve after items have been purchased

106
00:04:03,840 --> 00:04:06,239
immediately after investigation you

107
00:04:06,239 --> 00:04:07,080
realize

108
00:04:07,080 --> 00:04:09,180
that's professional actors made a

109
00:04:09,180 --> 00:04:12,840
business of buying your items to resell

110
00:04:12,840 --> 00:04:14,879
them later at higher pressure markets

111
00:04:14,879 --> 00:04:19,320
despite all your antibods mechanisms in

112
00:04:19,320 --> 00:04:21,120
place in your in your site

113
00:04:21,120 --> 00:04:22,800
so this actually first damages the

114
00:04:22,800 --> 00:04:24,600
repetition of your site because usually

115
00:04:24,600 --> 00:04:27,419
those attackers are showing off on

116
00:04:27,419 --> 00:04:28,979
Twitter on

117
00:04:28,979 --> 00:04:32,280
social media about this success second

118
00:04:32,280 --> 00:04:35,160
it can generate frustration for the

119
00:04:35,160 --> 00:04:37,740
customer and lastly it joined to us in

120
00:04:37,740 --> 00:04:40,440
the long term for the business because

121
00:04:40,440 --> 00:04:42,840
users with lose interest in this

122
00:04:42,840 --> 00:04:45,540
specific e-commerce website because it's

123
00:04:45,540 --> 00:04:47,639
lacking it's like interesting items very

124
00:04:47,639 --> 00:04:48,660
quickly

125
00:04:48,660 --> 00:04:51,300
so this bot NSB but is actually one of

126
00:04:51,300 --> 00:04:53,639
the most popular in the market for this

127
00:04:53,639 --> 00:04:55,740
type of attack it has the ability to

128
00:04:55,740 --> 00:04:57,660
attack more than 100 different websites

129
00:04:57,660 --> 00:04:59,660
all over the world

130
00:04:59,660 --> 00:05:03,960
another type of mod is that I can

131
00:05:03,960 --> 00:05:06,240
mention is like one clickbot so the idea

132
00:05:06,240 --> 00:05:08,040
of this bot is to manage simultaneously

133
00:05:08,040 --> 00:05:10,620
multiple user accounts

134
00:05:10,620 --> 00:05:12,780
for example Google accounts here so

135
00:05:12,780 --> 00:05:14,100
there are six accounts that are managed

136
00:05:14,100 --> 00:05:16,440
simultaneously two of them are like

137
00:05:16,440 --> 00:05:19,080
taking a break two of them are reading

138
00:05:19,080 --> 00:05:21,000
an email and to them are in schedule

139
00:05:21,000 --> 00:05:22,860
mode which means that soon they are

140
00:05:22,860 --> 00:05:24,900
going to perform an action

141
00:05:24,900 --> 00:05:27,300
and the idea is to make them uh perform

142
00:05:27,300 --> 00:05:29,280
like human-like action to get like a

143
00:05:29,280 --> 00:05:31,560
higher human score by Google systems and

144
00:05:31,560 --> 00:05:32,759
be more likely to receive simple

145
00:05:32,759 --> 00:05:35,880
captchas to solve

146
00:05:35,880 --> 00:05:38,280
so as soon as the bot feels comfortable

147
00:05:38,280 --> 00:05:41,340
enough it can test its human score

148
00:05:41,340 --> 00:05:43,199
against a site protected by Google

149
00:05:43,199 --> 00:05:46,320
capture for example this site

150
00:05:46,320 --> 00:05:50,100
and then even possibly send it for a for

151
00:05:50,100 --> 00:05:51,979
an attack

152
00:05:51,979 --> 00:05:54,720
so now that we try to give an answer to

153
00:05:54,720 --> 00:05:56,280
the question what let's try to give an

154
00:05:56,280 --> 00:05:58,500
answer to the question who and where

155
00:05:58,500 --> 00:06:01,020
so there are many communities around

156
00:06:01,020 --> 00:06:03,240
bots so they are for example developer

157
00:06:03,240 --> 00:06:04,320
communities

158
00:06:04,320 --> 00:06:07,199
places where developers are sharing

159
00:06:07,199 --> 00:06:09,539
information about how to write about how

160
00:06:09,539 --> 00:06:12,600
to bypass a specific security vendor so

161
00:06:12,600 --> 00:06:13,919
there are a few places like this for

162
00:06:13,919 --> 00:06:16,199
example Reddit threads Google Groups are

163
00:06:16,199 --> 00:06:18,240
also Discord channels like I mentioned

164
00:06:18,240 --> 00:06:20,100
three ones through Scrappy enthusiasts

165
00:06:20,100 --> 00:06:22,860
scripting prod or scraping

166
00:06:22,860 --> 00:06:25,080
it's not only a place for them to share

167
00:06:25,080 --> 00:06:26,520
information but also it provides

168
00:06:26,520 --> 00:06:27,600
services

169
00:06:27,600 --> 00:06:29,520
for example one of them is Scorpio

170
00:06:29,520 --> 00:06:31,919
enthusiasts give the ability to test

171
00:06:31,919 --> 00:06:34,560
which Security Solutions protecting a

172
00:06:34,560 --> 00:06:36,900
specific URL address

173
00:06:36,900 --> 00:06:38,840
foreign

174
00:06:38,840 --> 00:06:41,699
so there are also user communities for

175
00:06:41,699 --> 00:06:43,800
example marketplaces so there are many

176
00:06:43,800 --> 00:06:45,780
more than just those marketplaces but

177
00:06:45,780 --> 00:06:47,039
I'm showing like some of the most

178
00:06:47,039 --> 00:06:49,259
popular ones for example tidal and

179
00:06:49,259 --> 00:06:51,419
botmart are communities that share more

180
00:06:51,419 --> 00:06:54,360
than 100 000 members each

181
00:06:54,360 --> 00:06:56,039
so there are marketplaces that are more

182
00:06:56,039 --> 00:06:58,800
for a specific specific type of bots for

183
00:06:58,800 --> 00:07:01,680
example ticket Bots some that are only

184
00:07:01,680 --> 00:07:03,800
located on Discord some

185
00:07:03,800 --> 00:07:06,660
that are only for internal some parental

186
00:07:06,660 --> 00:07:09,380
approaches Etc

187
00:07:09,600 --> 00:07:12,259
but also when you're dealing with Bots

188
00:07:12,259 --> 00:07:15,120
investigating unconfirmed is very useful

189
00:07:15,120 --> 00:07:18,000
thing to do for example this is a Reddit

190
00:07:18,000 --> 00:07:19,860
Mass direct message but that's being

191
00:07:19,860 --> 00:07:22,440
advertised on the hiking firm so they

192
00:07:22,440 --> 00:07:23,780
mention a few things for example

193
00:07:23,780 --> 00:07:25,919
multi-threading or anti-fingerprint

194
00:07:25,919 --> 00:07:27,960
detection so we are going to see in the

195
00:07:27,960 --> 00:07:29,880
last section for example how this can

196
00:07:29,880 --> 00:07:32,039
look like in practice in the in the bot

197
00:07:32,039 --> 00:07:34,460
source code

198
00:07:35,419 --> 00:07:37,319
especially if you're dealing with a

199
00:07:37,319 --> 00:07:40,860
credential Staffing so it's worth going

200
00:07:40,860 --> 00:07:43,919
into a specific telegram Channel a

201
00:07:43,919 --> 00:07:45,060
cracking telegram Channel because

202
00:07:45,060 --> 00:07:47,460
usually they share a configuration file

203
00:07:47,460 --> 00:07:50,759
for offensive tools like open bullets so

204
00:07:50,759 --> 00:07:52,979
I mentioned here a few of them like a

205
00:07:52,979 --> 00:07:57,000
pro cracking or email logs for example

206
00:07:57,000 --> 00:07:58,620
so that's it for what I wanted to tell

207
00:07:58,620 --> 00:08:00,780
about the ecosystem now let's talk a bit

208
00:08:00,780 --> 00:08:03,900
about the structure of advanced bots so

209
00:08:03,900 --> 00:08:06,360
after the investigation of roughly 40

210
00:08:06,360 --> 00:08:09,419
different Bots it seems that there are

211
00:08:09,419 --> 00:08:11,220
like a few key components that exist in

212
00:08:11,220 --> 00:08:12,539
most of them

213
00:08:12,539 --> 00:08:15,180
so the first one is the automation

214
00:08:15,180 --> 00:08:17,220
framework so it's a technology if you're

215
00:08:17,220 --> 00:08:18,780
a developer you probably know it that

216
00:08:18,780 --> 00:08:21,419
enables to remotely control a fluid

217
00:08:21,419 --> 00:08:22,860
phase browser and make it perform some

218
00:08:22,860 --> 00:08:23,940
actions

219
00:08:23,940 --> 00:08:25,860
so there are many technologies that

220
00:08:25,860 --> 00:08:27,419
enables this for example selenium

221
00:08:27,419 --> 00:08:31,620
Webdriver io.net browser webpage Etc

222
00:08:31,620 --> 00:08:33,479
but behind the scene there are two main

223
00:08:33,479 --> 00:08:35,159
protocols that are being used

224
00:08:35,159 --> 00:08:37,559
so Ada the web driver protocol so it's a

225
00:08:37,559 --> 00:08:40,260
high level protocol it has simpler

226
00:08:40,260 --> 00:08:44,099
Management in in specific cases it's

227
00:08:44,099 --> 00:08:47,279
cross browser but it's a bit slower and

228
00:08:47,279 --> 00:08:49,380
misses some low level capabilities on

229
00:08:49,380 --> 00:08:50,820
the other hand you have the Chrome

230
00:08:50,820 --> 00:08:53,760
devtool protocol CDP protocol that's

231
00:08:53,760 --> 00:08:56,820
lower level but it's only for Chrome and

232
00:08:56,820 --> 00:08:59,100
based browsers so where exactly is the

233
00:08:59,100 --> 00:09:01,200
first one a bit slower so because

234
00:09:01,200 --> 00:09:04,140
actually in the like two steps in the

235
00:09:04,140 --> 00:09:06,360
first step the bot communicates first

236
00:09:06,360 --> 00:09:09,300
with a web driver instance using the web

237
00:09:09,300 --> 00:09:10,620
server protocol

238
00:09:10,620 --> 00:09:12,779
for example a chrome driver in case of

239
00:09:12,779 --> 00:09:15,060
crew members the browsers are a Miku

240
00:09:15,060 --> 00:09:17,700
driver in case of Firefox and then the

241
00:09:17,700 --> 00:09:20,339
web driver instance is using the

242
00:09:20,339 --> 00:09:22,380
internal protocol in order

243
00:09:22,380 --> 00:09:24,240
to communicate with the browser

244
00:09:24,240 --> 00:09:26,700
in the case of

245
00:09:26,700 --> 00:09:30,360
of CDP protocol the bot is already using

246
00:09:30,360 --> 00:09:32,279
the internal protocol of current based

247
00:09:32,279 --> 00:09:35,480
browser so this is why it's faster

248
00:09:36,240 --> 00:09:38,399
another key component of Bot is the

249
00:09:38,399 --> 00:09:40,860
proxies so there are a few ways to

250
00:09:40,860 --> 00:09:42,720
obtain a proxies from a frenetic error

251
00:09:42,720 --> 00:09:43,860
so

252
00:09:43,860 --> 00:09:45,600
I mean here I mentioned just a few of

253
00:09:45,600 --> 00:09:47,640
them but they can be bought in some of

254
00:09:47,640 --> 00:09:49,980
the companies here oxy Labs bar datasha

255
00:09:49,980 --> 00:09:52,440
proxies there are websites that are

256
00:09:52,440 --> 00:09:54,839
displaying for free proxies so they can

257
00:09:54,839 --> 00:09:56,519
be script using one of those tools that

258
00:09:56,519 --> 00:09:58,560
are advertised on

259
00:09:58,560 --> 00:10:00,959
hacking telegram channels like GSA proxy

260
00:10:00,959 --> 00:10:03,959
scraper or you proxy scrapping tool

261
00:10:03,959 --> 00:10:05,580
it's also worth mentioning that

262
00:10:05,580 --> 00:10:07,920
sometimes malwares are turning user

263
00:10:07,920 --> 00:10:10,080
devices into proxies without user

264
00:10:10,080 --> 00:10:11,220
consent

265
00:10:11,220 --> 00:10:15,420
like for example this proxy back malware

266
00:10:15,420 --> 00:10:18,060
okay another key component is actually

267
00:10:18,060 --> 00:10:19,980
the configuration so most of those

268
00:10:19,980 --> 00:10:21,720
Advanced Bots have the ability to Target

269
00:10:21,720 --> 00:10:23,220
many different sites for example like

270
00:10:23,220 --> 00:10:24,300
the one that I mentioned with 100

271
00:10:24,300 --> 00:10:26,880
different targets so

272
00:10:26,880 --> 00:10:29,100
they need an ability to to take it to

273
00:10:29,100 --> 00:10:31,860
customize it for the specific targets so

274
00:10:31,860 --> 00:10:33,600
they can be plugged with a scrapping

275
00:10:33,600 --> 00:10:35,880
template in case of scrapping but a

276
00:10:35,880 --> 00:10:37,860
configuration file for query extension

277
00:10:37,860 --> 00:10:40,620
Staffing tool here for example I'm

278
00:10:40,620 --> 00:10:42,540
showing how

279
00:10:42,540 --> 00:10:45,360
a configuration for a silver bullets is

280
00:10:45,360 --> 00:10:47,820
being advertised in a pro cracking

281
00:10:47,820 --> 00:10:50,880
and in case of scalping budgets will be

282
00:10:50,880 --> 00:10:52,560
the scalping task plus the bid

283
00:10:52,560 --> 00:10:56,339
information of the the attacker

284
00:10:56,339 --> 00:10:59,160
so then last key component I wanted to

285
00:10:59,160 --> 00:11:00,720
mention is the integration with third

286
00:11:00,720 --> 00:11:02,579
parties so there are many kind of third

287
00:11:02,579 --> 00:11:04,980
parties that can be very useful for Bots

288
00:11:04,980 --> 00:11:06,140
the first one is for example

289
00:11:06,140 --> 00:11:08,940
anti-captcha challenges so there are a

290
00:11:08,940 --> 00:11:10,980
few categories of them the first one is

291
00:11:10,980 --> 00:11:13,800
like human based capture solving so

292
00:11:13,800 --> 00:11:14,940
there are companies that are hiring

293
00:11:14,940 --> 00:11:16,680
people to manually solve captures like

294
00:11:16,680 --> 00:11:19,980
to capture you have ai based for example

295
00:11:19,980 --> 00:11:22,380
cap monster are you have also a

296
00:11:22,380 --> 00:11:25,079
combination of both that by captcha for

297
00:11:25,079 --> 00:11:26,579
example first tries to programmatically

298
00:11:26,579 --> 00:11:28,260
solve the captcha and then if it fails

299
00:11:28,260 --> 00:11:31,519
ask someone to do it

300
00:11:32,600 --> 00:11:35,820
uh interesting third party also here ayl

301
00:11:35,820 --> 00:11:38,760
to solve give the ability to do

302
00:11:38,760 --> 00:11:40,860
anti-captcha stacking which means that

303
00:11:40,860 --> 00:11:42,480
you give priority to your until the

304
00:11:42,480 --> 00:11:44,459
catcher Solutions and then first it will

305
00:11:44,459 --> 00:11:46,680
try to solve it via the first solution

306
00:11:46,680 --> 00:11:49,680
and then after I jump to the next one

307
00:11:49,680 --> 00:11:52,620
if it fails

308
00:11:52,620 --> 00:11:53,940
um

309
00:11:53,940 --> 00:11:56,339
then something very useful especially

310
00:11:56,339 --> 00:11:58,320
for account generation but is the

311
00:11:58,320 --> 00:12:01,019
virtual phone service provider so there

312
00:12:01,019 --> 00:12:02,519
are phones that are rented somewhere in

313
00:12:02,519 --> 00:12:05,339
the world and given the ability to about

314
00:12:05,339 --> 00:12:07,380
to use this specific phone to receive

315
00:12:07,380 --> 00:12:09,000
the one-time code during the

316
00:12:09,000 --> 00:12:11,700
registration process in order to have a

317
00:12:11,700 --> 00:12:13,800
completely automated flow for a cons

318
00:12:13,800 --> 00:12:16,079
generation with a with one of the

319
00:12:16,079 --> 00:12:19,279
but that I mentioned before

320
00:12:19,680 --> 00:12:21,959
okay so now that we saw the main key

321
00:12:21,959 --> 00:12:24,779
components of Adam's Bots let's try to

322
00:12:24,779 --> 00:12:27,300
dig deeper and see more specifically one

323
00:12:27,300 --> 00:12:28,260
of the Bots

324
00:12:28,260 --> 00:12:31,079
so I decided to pick the scalping band

325
00:12:31,079 --> 00:12:33,480
that I mentioned before NSB

326
00:12:33,480 --> 00:12:35,160
as I said it has the ability to Target

327
00:12:35,160 --> 00:12:38,339
more than 100 different sites over the

328
00:12:38,339 --> 00:12:39,480
world

329
00:12:39,480 --> 00:12:41,399
so it's written with electron framework

330
00:12:41,399 --> 00:12:43,500
so it means that the code is written in

331
00:12:43,500 --> 00:12:45,180
JavaScript

332
00:12:45,180 --> 00:12:47,880
and it's located in Sr archive that can

333
00:12:47,880 --> 00:12:49,740
be extracted for example with a plugin

334
00:12:49,740 --> 00:12:52,019
of 7-Zip

335
00:12:52,019 --> 00:12:54,000
so when you open this archive your cgd

336
00:12:54,000 --> 00:12:57,180
one folder per each type of targets for

337
00:12:57,180 --> 00:12:59,100
example one folder for Shopify one

338
00:12:59,100 --> 00:13:01,980
folder for targets and when you open it

339
00:13:01,980 --> 00:13:03,959
you will see a few piece a few

340
00:13:03,959 --> 00:13:06,680
JavaScript files

341
00:13:06,680 --> 00:13:09,120
so if you try to open them you'll see

342
00:13:09,120 --> 00:13:11,639
that they are like obfuscating so there

343
00:13:11,639 --> 00:13:13,260
is also like layer of encryption it's

344
00:13:13,260 --> 00:13:14,639
absolutely impossible to understand

345
00:13:14,639 --> 00:13:16,200
anything from that

346
00:13:16,200 --> 00:13:18,839
so there are two cases two two ways to

347
00:13:18,839 --> 00:13:22,079
try to deal with this kind of challenge

348
00:13:22,079 --> 00:13:23,760
the first one is to try to statically

349
00:13:23,760 --> 00:13:25,260
analyze the file

350
00:13:25,260 --> 00:13:27,839
so for example try to do obfuscate and

351
00:13:27,839 --> 00:13:29,339
finally this is something that I did

352
00:13:29,339 --> 00:13:30,959
actually here so on the left you have

353
00:13:30,959 --> 00:13:33,180
the site before and then the piece of

354
00:13:33,180 --> 00:13:35,940
code after the obfuscation

355
00:13:35,940 --> 00:13:37,560
and then in this case it's possible to

356
00:13:37,560 --> 00:13:39,000
understand that there are like two main

357
00:13:39,000 --> 00:13:41,700
types of JavaScript files first one in

358
00:13:41,700 --> 00:13:43,860
the left contain the bot logic so the

359
00:13:43,860 --> 00:13:46,620
flow of adding item to cart handling

360
00:13:46,620 --> 00:13:50,399
events of changing base Etc and then

361
00:13:50,399 --> 00:13:53,279
you have browser helpers that contain a

362
00:13:53,279 --> 00:13:55,320
piece of JavaScript Expressions that are

363
00:13:55,320 --> 00:13:57,260
going to be injected into the website

364
00:13:57,260 --> 00:14:00,240
page in order for example to select some

365
00:14:00,240 --> 00:14:02,579
items select for example a button that

366
00:14:02,579 --> 00:14:04,740
will perform a click with that perform

367
00:14:04,740 --> 00:14:08,639
adding to cart or abandon like a text

368
00:14:08,639 --> 00:14:11,279
input in order to to add some text and

369
00:14:11,279 --> 00:14:13,980
this automatically May

370
00:14:13,980 --> 00:14:17,160
uh enable a developer to uh to detect uh

371
00:14:17,160 --> 00:14:19,019
but trying to perform actions on the

372
00:14:19,019 --> 00:14:21,139
site

373
00:14:21,899 --> 00:14:23,579
okay the second approach to try to deal

374
00:14:23,579 --> 00:14:25,800
with this kind of issue is to

375
00:14:25,800 --> 00:14:28,019
dynamically analyze the bot so for

376
00:14:28,019 --> 00:14:29,700
example something that can be done is

377
00:14:29,700 --> 00:14:32,279
consider the belt as a black box and

378
00:14:32,279 --> 00:14:33,720
then try to understand which

379
00:14:33,720 --> 00:14:36,240
communication it performs with the

380
00:14:36,240 --> 00:14:39,000
internal browser it creates

381
00:14:39,000 --> 00:14:41,220
so in order to help researchers do that

382
00:14:41,220 --> 00:14:43,199
we decided for the context of this

383
00:14:43,199 --> 00:14:45,720
conference talk to release a new tool on

384
00:14:45,720 --> 00:14:48,480
GitHub called bot monitor so here under

385
00:14:48,480 --> 00:14:51,839
imperva slash about monitor

386
00:14:51,839 --> 00:14:54,540
and then it does exactly this so what it

387
00:14:54,540 --> 00:14:56,519
does it intercept the CDP communication

388
00:14:56,519 --> 00:14:59,100
between the bot and the internet browser

389
00:14:59,100 --> 00:15:01,260
and filters in what's meaningful for us

390
00:15:01,260 --> 00:15:03,060
what can help us understand what the bot

391
00:15:03,060 --> 00:15:06,800
is doing and detect it

392
00:15:06,839 --> 00:15:09,060
so the idea is the following first you

393
00:15:09,060 --> 00:15:10,980
have a Python program that will inject

394
00:15:10,980 --> 00:15:13,860
using Frieda a piece of code in the bot

395
00:15:13,860 --> 00:15:16,620
that will intercept call to creation of

396
00:15:16,620 --> 00:15:19,980
process and then instead of creating a

397
00:15:19,980 --> 00:15:22,560
chromium based instance it will create a

398
00:15:22,560 --> 00:15:25,320
proxy that will then start the browser

399
00:15:25,320 --> 00:15:27,720
instance so the advantage of this is

400
00:15:27,720 --> 00:15:29,279
first that it knows automatically which

401
00:15:29,279 --> 00:15:30,839
parts is going to be used

402
00:15:30,839 --> 00:15:33,360
by the Bots to communicate with the

403
00:15:33,360 --> 00:15:36,720
browser and second it avoids case where

404
00:15:36,720 --> 00:15:39,000
the bot is bypassing the an operating

405
00:15:39,000 --> 00:15:41,779
system proxy

406
00:15:42,120 --> 00:15:43,560
um

407
00:15:43,560 --> 00:15:46,810
so this is how it looks like in practice

408
00:15:46,810 --> 00:15:49,949
[Music]

409
00:15:52,079 --> 00:15:56,599
so first we are going to start the bot

410
00:15:59,760 --> 00:16:04,579
so in this case this is our NSB lot

411
00:16:05,820 --> 00:16:07,860
then we are finding the PID of this

412
00:16:07,860 --> 00:16:10,160
process

413
00:16:12,600 --> 00:16:17,540
we inject the the code into this process

414
00:16:18,899 --> 00:16:22,040
and then we start the attack

415
00:16:23,279 --> 00:16:25,320
so here in this case I decided to attack

416
00:16:25,320 --> 00:16:27,120
Adidas of course I'm not really

417
00:16:27,120 --> 00:16:30,260
attacking this this side

418
00:16:30,420 --> 00:16:31,860
and then we can see here that we're

419
00:16:31,860 --> 00:16:33,480
intercepting first injection of

420
00:16:33,480 --> 00:16:35,940
JavaScript here I've skated

421
00:16:35,940 --> 00:16:38,720
oh

422
00:16:40,019 --> 00:16:42,500
sorry

423
00:16:45,000 --> 00:16:47,759
and then oh it's okay and then we

424
00:16:47,759 --> 00:16:50,399
intercept also Mouse motion as you can

425
00:16:50,399 --> 00:16:51,660
see here

426
00:16:51,660 --> 00:16:55,939
so can be used for further analysis

427
00:16:56,940 --> 00:16:58,560
so that's it for what I wanted to talk

428
00:16:58,560 --> 00:17:00,720
to tell about the structure of advanced

429
00:17:00,720 --> 00:17:01,980
Bots

430
00:17:01,980 --> 00:17:04,199
so now let's talk about a few evasion

431
00:17:04,199 --> 00:17:06,480
techniques that I was able to spot in

432
00:17:06,480 --> 00:17:09,119
some of the butt source code

433
00:17:09,119 --> 00:17:10,919
so first of all in order to protect

434
00:17:10,919 --> 00:17:12,540
those efficient techniques but

435
00:17:12,540 --> 00:17:15,540
developers are protecting them using um

436
00:17:15,540 --> 00:17:17,400
notification and packing so in case of

437
00:17:17,400 --> 00:17:19,619
dotnet bots it's usually protected with

438
00:17:19,619 --> 00:17:21,599
Adrian then guard protection in Python

439
00:17:21,599 --> 00:17:23,280
with pi Amore around JavaScript with a

440
00:17:23,280 --> 00:17:25,199
JavaScript obfuscation as we saw just

441
00:17:25,199 --> 00:17:27,119
earlier

442
00:17:27,119 --> 00:17:30,240
but once we bypass this first step

443
00:17:30,240 --> 00:17:32,280
there are like few visions that we can

444
00:17:32,280 --> 00:17:35,460
highlight so like this one for example

445
00:17:35,460 --> 00:17:38,160
so in order to bypass fingerprint based

446
00:17:38,160 --> 00:17:41,400
on HTTP headers so but developers are

447
00:17:41,400 --> 00:17:43,820
shifting and randomly picking

448
00:17:43,820 --> 00:17:46,380
non-mandatory HTTP headers

449
00:17:46,380 --> 00:17:48,179
and adding them to the request that they

450
00:17:48,179 --> 00:17:52,320
are sending for each task in order to

451
00:17:52,320 --> 00:17:54,179
make the device look like a slightly

452
00:17:54,179 --> 00:17:55,860
different one each time a new task is

453
00:17:55,860 --> 00:17:58,340
performed

454
00:17:58,340 --> 00:18:02,460
another idea here is to create a fake

455
00:18:02,460 --> 00:18:05,120
Hardware attributes so the bot is

456
00:18:05,120 --> 00:18:07,620
creating a new

457
00:18:07,620 --> 00:18:10,440
fake virtual device and in order to

458
00:18:10,440 --> 00:18:12,600
bypass any kind of fingerprint here in

459
00:18:12,600 --> 00:18:14,820
JavaScript for example it's setting new

460
00:18:14,820 --> 00:18:16,940
available Haze and available

461
00:18:16,940 --> 00:18:20,400
width of a specific device using the get

462
00:18:20,400 --> 00:18:22,799
random value function in JavaScript to

463
00:18:22,799 --> 00:18:24,918
create

464
00:18:25,440 --> 00:18:28,320
to create a new number between a 1000

465
00:18:28,320 --> 00:18:31,380
and 1600 pixel so here actually because

466
00:18:31,380 --> 00:18:33,900
they are using like a uniform random

467
00:18:33,900 --> 00:18:36,240
generation of numbers it may be possible

468
00:18:36,240 --> 00:18:38,100
to detect that something strange is

469
00:18:38,100 --> 00:18:39,480
coming because there may not be any

470
00:18:39,480 --> 00:18:41,640
device on the planet that have this

471
00:18:41,640 --> 00:18:44,340
specific combination of size

472
00:18:44,340 --> 00:18:46,980
so the idea of bypassing fingerprint

473
00:18:46,980 --> 00:18:48,840
based on this is smart but there is a

474
00:18:48,840 --> 00:18:50,880
flow that we can detect via the analysis

475
00:18:50,880 --> 00:18:51,780
of code

476
00:18:51,780 --> 00:18:53,880
another interesting plugin that's

477
00:18:53,880 --> 00:18:57,480
commonly used is a vision of automation

478
00:18:57,480 --> 00:18:59,460
Frameworks so here in this case it's

479
00:18:59,460 --> 00:19:01,440
Puppeteer extrapolating itself that is

480
00:19:01,440 --> 00:19:04,020
very commonly used that's

481
00:19:04,020 --> 00:19:06,600
makes uh usage of Perpetual harder to

482
00:19:06,600 --> 00:19:10,580
detect by Security Solutions

483
00:19:10,620 --> 00:19:13,260
another revision that's here in this

484
00:19:13,260 --> 00:19:16,679
case uh very specific to um uh two

485
00:19:16,679 --> 00:19:19,500
scalping butts is the jigging and

486
00:19:19,500 --> 00:19:22,980
digging of fetishes the idea is to take

487
00:19:22,980 --> 00:19:26,100
to to generate many different addresses

488
00:19:26,100 --> 00:19:28,980
from the same geographical point that

489
00:19:28,980 --> 00:19:30,299
eventually lead to the same geographical

490
00:19:30,299 --> 00:19:32,760
point to do that we take for example

491
00:19:32,760 --> 00:19:34,500
some of the keywords in the address and

492
00:19:34,500 --> 00:19:36,480
then we Shuffle it we'll remove some

493
00:19:36,480 --> 00:19:38,640
some letters for example RDU will still

494
00:19:38,640 --> 00:19:41,340
be understood by The Postman

495
00:19:41,340 --> 00:19:44,280
or add for example randomly leading zero

496
00:19:44,280 --> 00:19:46,879
to any number

497
00:19:47,039 --> 00:19:49,200
another revision that I was able to spot

498
00:19:49,200 --> 00:19:52,679
is a simulation of human Mouse motion so

499
00:19:52,679 --> 00:19:55,620
in some of the cases it was performed

500
00:19:55,620 --> 00:19:58,679
using a busy algorithm so the idea is to

501
00:19:58,679 --> 00:20:00,600
take like four different points two of

502
00:20:00,600 --> 00:20:02,160
them will be like the origin and the

503
00:20:02,160 --> 00:20:04,320
destination and two of them will steer

504
00:20:04,320 --> 00:20:08,360
the curve in two random directions

505
00:20:09,419 --> 00:20:10,860
so this is more or less how it looks

506
00:20:10,860 --> 00:20:12,419
like in in practice I hope you're able

507
00:20:12,419 --> 00:20:13,860
to see it at seat rent so it's very

508
00:20:13,860 --> 00:20:15,660
smooth we can see the acceleration the

509
00:20:15,660 --> 00:20:18,179
deceleration

510
00:20:18,179 --> 00:20:21,419
um but actually it's too smooth and this

511
00:20:21,419 --> 00:20:23,700
is something that we can highlight so we

512
00:20:23,700 --> 00:20:25,200
can measure the acceleration of the

513
00:20:25,200 --> 00:20:27,299
curve so this is what I did in the left

514
00:20:27,299 --> 00:20:28,799
and we can compare it with the

515
00:20:28,799 --> 00:20:32,400
acceleration when a real person is using

516
00:20:32,400 --> 00:20:35,280
uh his Mouse and this is something that

517
00:20:35,280 --> 00:20:37,860
we can that we can see so

518
00:20:37,860 --> 00:20:38,580
um

519
00:20:38,580 --> 00:20:40,440
you can see the exact acceleration is in

520
00:20:40,440 --> 00:20:42,299
average higher but there are also many

521
00:20:42,299 --> 00:20:44,460
more outliers so the question is not if

522
00:20:44,460 --> 00:20:46,679
we can detect this kind of algorithm

523
00:20:46,679 --> 00:20:48,540
using uh

524
00:20:48,540 --> 00:20:50,000
[Music]

525
00:20:50,000 --> 00:20:52,919
using detection but how much time we

526
00:20:52,919 --> 00:20:55,880
need to be accurate enough

527
00:20:56,280 --> 00:20:58,400
last but not the least

528
00:20:58,400 --> 00:21:00,900
Advanced parts are not only like a

529
00:21:00,900 --> 00:21:03,059
thread for web applications they're also

530
00:21:03,059 --> 00:21:04,919
a thread for their own users

531
00:21:04,919 --> 00:21:06,419
because most of the time they are not

532
00:21:06,419 --> 00:21:07,799
developed with the best software

533
00:21:07,799 --> 00:21:10,320
practice and actually by analyzing one

534
00:21:10,320 --> 00:21:11,760
of them I was able to find a remote code

535
00:21:11,760 --> 00:21:13,919
execution on them

536
00:21:13,919 --> 00:21:15,120
so

537
00:21:15,120 --> 00:21:19,020
actually if an attackers and this is a

538
00:21:19,020 --> 00:21:22,440
bad user to use its uh specifically

539
00:21:22,440 --> 00:21:23,600
crafted

540
00:21:23,600 --> 00:21:26,640
configuration file it can get full

541
00:21:26,640 --> 00:21:30,120
control of the device of the batch user

542
00:21:30,120 --> 00:21:31,740
here the

543
00:21:31,740 --> 00:21:34,140
configuration file is open and here you

544
00:21:34,140 --> 00:21:36,780
can see calc is uh is popped

545
00:21:36,780 --> 00:21:38,580
which means that the carry against a

546
00:21:38,580 --> 00:21:41,240
full full control

547
00:21:42,720 --> 00:21:44,340
so that's it for my presentation I hope

548
00:21:44,340 --> 00:21:46,620
you liked it I would like to thank the

549
00:21:46,620 --> 00:21:48,600
organization for this great conference

550
00:21:48,600 --> 00:21:50,580
and also for giving me the opportunity

551
00:21:50,580 --> 00:21:53,220
to talk in front of you it was a

552
00:21:53,220 --> 00:21:55,440
pleasure to be here at strasbour and see

553
00:21:55,440 --> 00:21:57,020
this

554
00:21:57,020 --> 00:21:59,320
very nice city

555
00:21:59,320 --> 00:22:11,168
[Applause]

556
00:22:11,520 --> 00:22:14,418
are there any questions

557
00:22:17,610 --> 00:22:20,820
[Music]

558
00:22:24,539 --> 00:22:27,500
oh okay

559
00:22:30,659 --> 00:22:33,000
hi thank you I have a question about the

560
00:22:33,000 --> 00:22:35,520
mouse movement detection because there's

561
00:22:35,520 --> 00:22:37,620
a certain subset of users who are for

562
00:22:37,620 --> 00:22:39,539
example disabled or just like to use a

563
00:22:39,539 --> 00:22:42,120
different way of input by just jumping

564
00:22:42,120 --> 00:22:45,419
to certain points on the website so how

565
00:22:45,419 --> 00:22:48,120
relevant is an osmotion detection in

566
00:22:48,120 --> 00:22:50,700
regards to those users

567
00:22:50,700 --> 00:22:52,880
foreign

568
00:22:53,539 --> 00:22:56,400
so in this case

569
00:22:56,400 --> 00:22:58,320
of course I think that there's need to

570
00:22:58,320 --> 00:23:00,960
to make an algorithm accurate enough to

571
00:23:00,960 --> 00:23:02,820
only detect this kind of software and

572
00:23:02,820 --> 00:23:05,640
not prevent any user to um to access the

573
00:23:05,640 --> 00:23:08,100
site especially there are some

574
00:23:08,100 --> 00:23:09,840
feature that enable like bypassing a

575
00:23:09,840 --> 00:23:12,539
usage of moss in order to because of

576
00:23:12,539 --> 00:23:14,340
disability so in this case I think

577
00:23:14,340 --> 00:23:16,140
that's if like the curve is like too

578
00:23:16,140 --> 00:23:17,880
smooth so

579
00:23:17,880 --> 00:23:22,320
then it can be an indicator so um so I'm

580
00:23:22,320 --> 00:23:24,480
not so I think it should be it depends

581
00:23:24,480 --> 00:23:26,700
on which type of system and it depends

582
00:23:26,700 --> 00:23:28,380
probably on the on the site to to decide

583
00:23:28,380 --> 00:23:30,799
if

584
00:23:31,440 --> 00:23:35,880
if a specific algorithm to uh

585
00:23:35,880 --> 00:23:39,260
to to below or not

586
00:23:45,120 --> 00:23:48,739
okay any other question

587
00:23:50,220 --> 00:23:54,659
one two three four okay thank you very

588
00:23:54,659 --> 00:23:55,390
much

589
00:23:55,390 --> 00:24:04,199
[Applause]

