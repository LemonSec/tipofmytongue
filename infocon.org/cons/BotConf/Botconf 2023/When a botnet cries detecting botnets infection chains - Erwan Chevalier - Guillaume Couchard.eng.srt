1
00:00:01,140 --> 00:00:02,520
hi everyone

2
00:00:02,520 --> 00:00:04,700
and when Carlton

3
00:00:04,700 --> 00:00:07,919
so when a Burnett cries detecting botnet

4
00:00:07,919 --> 00:00:09,720
infection chains

5
00:00:09,720 --> 00:00:12,719
and honestly we also cried a little bit

6
00:00:12,719 --> 00:00:15,719
as well because it was not uh as easy as

7
00:00:15,719 --> 00:00:18,960
we thought it would be initially but

8
00:00:18,960 --> 00:00:22,080
still very interesting research so let's

9
00:00:22,080 --> 00:00:24,300
walk you through our little journey with

10
00:00:24,300 --> 00:00:29,300
birdnets and their infection chains

11
00:00:29,939 --> 00:00:33,360
I am Ellen and this is Guillaume hi

12
00:00:33,360 --> 00:00:34,140
everyone

13
00:00:34,140 --> 00:00:37,440
we are both working at security.io in

14
00:00:37,440 --> 00:00:39,980
the threat and detection research team

15
00:00:39,980 --> 00:00:43,500
or overall our team's daily mission is

16
00:00:43,500 --> 00:00:45,960
detection engineering and tracking

17
00:00:45,960 --> 00:00:48,300
attackers through their infrastructure

18
00:00:48,300 --> 00:00:49,739
and malware

19
00:00:49,739 --> 00:00:52,739
and yet we the human eye are more

20
00:00:52,739 --> 00:00:56,219
focused on the detection engineering

21
00:00:56,219 --> 00:00:58,500
part so this is the main topic obviously

22
00:00:58,500 --> 00:01:01,820
of this presentation

23
00:01:02,640 --> 00:01:05,519
this is our agenda for the next 35 to 40

24
00:01:05,519 --> 00:01:06,799
minutes

25
00:01:06,799 --> 00:01:09,420
first of all we will

26
00:01:09,420 --> 00:01:12,299
present a bit of context around the

27
00:01:12,299 --> 00:01:15,060
Birdneck but net switcher to to study

28
00:01:15,060 --> 00:01:18,299
and their infection turns and what is it

29
00:01:18,299 --> 00:01:20,580
we will um

30
00:01:20,580 --> 00:01:22,920
explain and present existing public

31
00:01:22,920 --> 00:01:24,439
Sigma rules

32
00:01:24,439 --> 00:01:28,080
allowing to detect these bird Nets then

33
00:01:28,080 --> 00:01:30,560
we will move on to Sigma correlation

34
00:01:30,560 --> 00:01:33,659
which is a little bit less known that

35
00:01:33,659 --> 00:01:37,740
just Sigma and we will present two rules

36
00:01:37,740 --> 00:01:41,520
we have what to detect botnets

37
00:01:41,520 --> 00:01:44,939
and finally we will explain how we do

38
00:01:44,939 --> 00:01:50,658
the integration with our CTI at scale

39
00:01:51,720 --> 00:01:54,560
so why focusing on botnet infection

40
00:01:54,560 --> 00:01:57,479
chains and which botnets which infection

41
00:01:57,479 --> 00:01:59,520
chains

42
00:01:59,520 --> 00:02:02,579
so the third choice of birdnet using

43
00:02:02,579 --> 00:02:04,619
some interesting infection chain is

44
00:02:04,619 --> 00:02:07,740
quack but also known as cubot

45
00:02:07,740 --> 00:02:09,598
so it was initially a bank information

46
00:02:09,598 --> 00:02:13,680
that involved in a modular malware and

47
00:02:13,680 --> 00:02:16,739
it's been around since 2008.

48
00:02:16,739 --> 00:02:20,099
it's a very popular one among threat

49
00:02:20,099 --> 00:02:22,739
actors particularly on the among the

50
00:02:22,739 --> 00:02:24,420
initial access brokers

51
00:02:24,420 --> 00:02:27,959
and their customers we have listed some

52
00:02:27,959 --> 00:02:29,940
of them on the left

53
00:02:29,940 --> 00:02:33,120
um either in the uh theft or the

54
00:02:33,120 --> 00:02:35,940
ransomware business

55
00:02:35,940 --> 00:02:40,080
and um thanks to Paula after providing

56
00:02:40,080 --> 00:02:42,300
some some

57
00:02:42,300 --> 00:02:44,940
um figures around there for the victims

58
00:02:44,940 --> 00:02:47,099
we can see it's a it's a it's already

59
00:02:47,099 --> 00:02:49,879
impacting uh over the last uh last year

60
00:02:49,879 --> 00:02:53,580
and the the malware is used is dropped

61
00:02:53,580 --> 00:02:56,160
either by other malware

62
00:02:56,160 --> 00:02:59,220
or some phishing techniques as we will

63
00:02:59,220 --> 00:03:04,140
see and and is used it is used more

64
00:03:04,140 --> 00:03:06,959
um as a loader than as a banking project

65
00:03:06,959 --> 00:03:10,200
and as you can see is you dropping uh

66
00:03:10,200 --> 00:03:11,760
they are dropping

67
00:03:11,760 --> 00:03:16,640
um common rat or run somewhere later on

68
00:03:18,780 --> 00:03:22,379
the second choice was ID and it's quite

69
00:03:22,379 --> 00:03:25,319
similar to uh to crackbot in fact so

70
00:03:25,319 --> 00:03:27,180
it's as well a bank introsion that's

71
00:03:27,180 --> 00:03:30,000
evolved into just a loader

72
00:03:30,000 --> 00:03:33,900
and it's been around since 2017.

73
00:03:33,900 --> 00:03:38,580
and again a list of threat actors using

74
00:03:38,580 --> 00:03:42,739
it and using it as well as a loader

75
00:03:42,739 --> 00:03:45,180
I think proof Point has a recent report

76
00:03:45,180 --> 00:03:48,120
regarding that mentioning that they have

77
00:03:48,120 --> 00:03:51,720
even new some they have new samples now

78
00:03:51,720 --> 00:03:54,959
containing only the loader part of the

79
00:03:54,959 --> 00:03:57,180
of the malware without the banking trend

80
00:03:57,180 --> 00:03:59,099
on parts

81
00:03:59,099 --> 00:04:02,000
and again quite a lot of victims

82
00:04:02,000 --> 00:04:05,819
observed by product regarding the uh

83
00:04:05,819 --> 00:04:08,459
this this malware

84
00:04:08,459 --> 00:04:11,700
so first QuickBooks and ideas are really

85
00:04:11,700 --> 00:04:15,599
uh impact teams in terms of victims and

86
00:04:15,599 --> 00:04:18,298
they are quite similar in terms of

87
00:04:18,298 --> 00:04:19,798
features

88
00:04:19,798 --> 00:04:22,260
but obviously there are something else

89
00:04:22,260 --> 00:04:25,919
that was interesting for us to study and

90
00:04:25,919 --> 00:04:29,759
I let guillauma just explain that thanks

91
00:04:29,759 --> 00:04:32,040
um so yeah I'll talk to you about their

92
00:04:32,040 --> 00:04:34,139
infection chains because they are really

93
00:04:34,139 --> 00:04:38,639
common which is also why we chose these

94
00:04:38,639 --> 00:04:41,460
two malware

95
00:04:41,460 --> 00:04:43,380
um so first of all what's an infection

96
00:04:43,380 --> 00:04:45,780
change as for the sake of this

97
00:04:45,780 --> 00:04:48,120
presentation so we just agree on a rough

98
00:04:48,120 --> 00:04:51,720
definition so uh it would be like from

99
00:04:51,720 --> 00:04:53,580
the fishing event with a benign file to

100
00:04:53,580 --> 00:04:56,220
the actual manuscript execution quite

101
00:04:56,220 --> 00:04:57,259
classic

102
00:04:57,259 --> 00:05:01,199
uh so you can see here that it's kind of

103
00:05:01,199 --> 00:05:03,540
a jungle out there there's lots of

104
00:05:03,540 --> 00:05:06,479
different fiction chains uh on the

105
00:05:06,479 --> 00:05:10,740
graphs you can see that if that works

106
00:05:10,740 --> 00:05:14,280
yeah uh there's like we kind of

107
00:05:14,280 --> 00:05:17,759
categorize them in for uh in different

108
00:05:17,759 --> 00:05:20,460
point entry point of infection chains so

109
00:05:20,460 --> 00:05:25,620
URL HTML PDF zip and then you can see

110
00:05:25,620 --> 00:05:29,400
that at the end of all in fiction chains

111
00:05:29,400 --> 00:05:30,900
where the dll block

112
00:05:30,900 --> 00:05:34,139
so we're wondering how could we detect

113
00:05:34,139 --> 00:05:36,000
those infection chains and the first

114
00:05:36,000 --> 00:05:39,560
thing that comes to mind would be uh

115
00:05:39,560 --> 00:05:42,680
execution or dll loading

116
00:05:42,680 --> 00:05:46,440
yeah overall the TTP here on that

117
00:05:46,440 --> 00:05:50,340
uh however on the defender point of view

118
00:05:50,340 --> 00:05:54,000
it's kind of hard to perform uh to have

119
00:05:54,000 --> 00:05:55,620
detection rules that are really

120
00:05:55,620 --> 00:05:58,860
efficient with adverse positives for uh

121
00:05:58,860 --> 00:06:00,600
the world yellow execution the other

122
00:06:00,600 --> 00:06:02,479
loading TTP

123
00:06:02,479 --> 00:06:06,539
uh so we're wondering how could we still

124
00:06:06,539 --> 00:06:10,320
detect most of these infection chains uh

125
00:06:10,320 --> 00:06:13,919
but having a different approach

126
00:06:13,919 --> 00:06:17,039
so this is why you see some colored

127
00:06:17,039 --> 00:06:19,639
blocks in these graph trees

128
00:06:19,639 --> 00:06:24,000
we emphasize the main infection chains

129
00:06:24,000 --> 00:06:26,460
um yeah the pointer works on website

130
00:06:26,460 --> 00:06:29,160
that's good so

131
00:06:29,160 --> 00:06:32,819
um so for instance the iso lnk which is

132
00:06:32,819 --> 00:06:35,880
well known it's not only ISO but must

133
00:06:35,880 --> 00:06:39,680
have in my imager archives

134
00:06:39,680 --> 00:06:42,780
you can see also HTML smuggling like

135
00:06:42,780 --> 00:06:44,900
infection chains in yellow

136
00:06:44,900 --> 00:06:50,000
uh just Z pen NK and stuff like that so

137
00:06:50,000 --> 00:06:53,460
we found out just looking at this that

138
00:06:53,460 --> 00:06:55,440
it's quite interesting to focus our

139
00:06:55,440 --> 00:06:58,220
detection on that and

140
00:06:58,220 --> 00:07:00,780
obviously this is used by quack but a

141
00:07:00,780 --> 00:07:04,259
nice an ice ID but it's also used by

142
00:07:04,259 --> 00:07:07,680
many different actors so that's kind of

143
00:07:07,680 --> 00:07:09,960
a good thing for us Defenders

144
00:07:09,960 --> 00:07:13,319
and therefore we transposed those graft

145
00:07:13,319 --> 00:07:15,840
trees into like a timeline to see if we

146
00:07:15,840 --> 00:07:19,259
could uh if it's still worth uh doing

147
00:07:19,259 --> 00:07:22,020
detection on that and

148
00:07:22,020 --> 00:07:22,620
um

149
00:07:22,620 --> 00:07:25,139
as you can see

150
00:07:25,139 --> 00:07:25,860
um

151
00:07:25,860 --> 00:07:28,440
it's the main thing to to remember on

152
00:07:28,440 --> 00:07:32,039
that timeline would be that even though

153
00:07:32,039 --> 00:07:37,440
old uh yeah all the infection change

154
00:07:37,440 --> 00:07:40,220
routes in fiction chain techniques

155
00:07:40,220 --> 00:07:44,520
are used they tend to stay over time

156
00:07:44,520 --> 00:07:47,699
and so for instance ISO and NK is still

157
00:07:47,699 --> 00:07:50,699
there today but HMS smuggling is also

158
00:07:50,699 --> 00:07:52,520
there for a while now

159
00:07:52,520 --> 00:07:55,280
macros is a bit specific

160
00:07:55,280 --> 00:07:58,380
obviously since Microsoft did some some

161
00:07:58,380 --> 00:07:59,819
action from that

162
00:07:59,819 --> 00:08:03,599
and so new one still emerged that's kind

163
00:08:03,599 --> 00:08:07,380
of the issue and which is a hard part

164
00:08:07,380 --> 00:08:09,780
for a Defenders obviously but that's the

165
00:08:09,780 --> 00:08:11,120
game

166
00:08:11,120 --> 00:08:15,660
and so this is why we focused on our

167
00:08:15,660 --> 00:08:18,960
detection on these root infection chains

168
00:08:18,960 --> 00:08:22,500
kind of and this is like the main topic

169
00:08:22,500 --> 00:08:25,280
of our presentation

170
00:08:25,280 --> 00:08:28,560
so first of all before talking about

171
00:08:28,560 --> 00:08:29,900
detection

172
00:08:29,900 --> 00:08:34,080
uh we wanted to show you uh like a

173
00:08:34,080 --> 00:08:37,500
classic infection Chain by quagbat uh in

174
00:08:37,500 --> 00:08:40,320
case you haven't seen one yet

175
00:08:40,320 --> 00:08:46,260
if yeah cool so uh it's classic that's a

176
00:08:46,260 --> 00:08:49,160
phishing email with an HTML attachment

177
00:08:49,160 --> 00:08:54,240
the user download the HTML file then it

178
00:08:54,240 --> 00:08:56,660
says like wrong format of kind of stuff

179
00:08:56,660 --> 00:08:59,519
you have a password to extract your

180
00:08:59,519 --> 00:09:03,600
archive and then basically you double

181
00:09:03,600 --> 00:09:08,399
click on the uh folder the ISO file and

182
00:09:08,399 --> 00:09:12,120
then you double click again and again

183
00:09:12,120 --> 00:09:13,580
yeah

184
00:09:13,580 --> 00:09:18,420
until it actually loads the malware

185
00:09:18,420 --> 00:09:22,560
and so as you can see there there's many

186
00:09:22,560 --> 00:09:26,519
many user steps and uh

187
00:09:26,519 --> 00:09:28,279
it still works

188
00:09:28,279 --> 00:09:31,680
and the goal for us Defenders would be

189
00:09:31,680 --> 00:09:33,200
to

190
00:09:33,200 --> 00:09:37,620
actually detect those user steps kind of

191
00:09:37,620 --> 00:09:40,680
and not really what the malware will do

192
00:09:40,680 --> 00:09:44,459
once it's flooded and so this is what we

193
00:09:44,459 --> 00:09:48,500
will focus on on the next part

194
00:09:56,040 --> 00:10:00,180
yeah so before explaining some rules a

195
00:10:00,180 --> 00:10:03,660
quick explanation around the detection

196
00:10:03,660 --> 00:10:05,240
workflow

197
00:10:05,240 --> 00:10:07,620
and just to explain

198
00:10:07,620 --> 00:10:11,000
um some prerequisites for us to to build

199
00:10:11,000 --> 00:10:13,380
effective detection rules

200
00:10:13,380 --> 00:10:17,580
and some some strategic choices we we've

201
00:10:17,580 --> 00:10:18,420
made

202
00:10:18,420 --> 00:10:19,860
so

203
00:10:19,860 --> 00:10:22,880
our contacts on work context is we have

204
00:10:22,880 --> 00:10:26,459
various customers sending logs from

205
00:10:26,459 --> 00:10:27,959
different sources

206
00:10:27,959 --> 00:10:31,560
and obviously these logs are passed and

207
00:10:31,560 --> 00:10:34,019
we do some normalization using uh

208
00:10:34,019 --> 00:10:35,959
elastic consumer

209
00:10:35,959 --> 00:10:39,420
and then it will proceed and go to the

210
00:10:39,420 --> 00:10:41,540
detection enzymes

211
00:10:41,540 --> 00:10:44,760
and we will talk today about the sigma 1

212
00:10:44,760 --> 00:10:47,160
and the sigma correlation one

213
00:10:47,160 --> 00:10:49,940
and what is very important here for us

214
00:10:49,940 --> 00:10:52,920
in the normalization part

215
00:10:52,920 --> 00:10:55,800
because so our customers are quite

216
00:10:55,800 --> 00:10:58,160
heterogeneous when it comes to two lugs

217
00:10:58,160 --> 00:11:01,560
and they will send us logs from cloud

218
00:11:01,560 --> 00:11:05,160
application from network from the host

219
00:11:05,160 --> 00:11:06,839
Etc so

220
00:11:06,839 --> 00:11:10,680
in various format some of them use a EGR

221
00:11:10,680 --> 00:11:12,720
some of them are just log collectors

222
00:11:12,720 --> 00:11:14,100
from Windows

223
00:11:14,100 --> 00:11:17,940
so we want to build the same rule for

224
00:11:17,940 --> 00:11:21,779
all of these values formats and that's

225
00:11:21,779 --> 00:11:25,560
where when you want to to use a sigma or

226
00:11:25,560 --> 00:11:28,200
other detection language from a point of

227
00:11:28,200 --> 00:11:30,120
view it's very important to have the

228
00:11:30,120 --> 00:11:32,880
normalization for the field name and

229
00:11:32,880 --> 00:11:35,160
sometimes for the values as well

230
00:11:35,160 --> 00:11:37,800
and this is a real key Point

231
00:11:37,800 --> 00:11:38,480
um

232
00:11:38,480 --> 00:11:42,360
to to use the effective Rule and

233
00:11:42,360 --> 00:11:44,279
to avoid what's very important for

234
00:11:44,279 --> 00:11:48,300
detention Engineers it's the 222 to

235
00:11:48,300 --> 00:11:50,220
reach the right balance between false

236
00:11:50,220 --> 00:11:53,940
positives and coverage obviously

237
00:11:53,940 --> 00:11:56,880
so now let's check the two public Sigma

238
00:11:56,880 --> 00:12:00,420
rules so in their original format and

239
00:12:00,420 --> 00:12:03,240
then we'll talk about orals

240
00:12:03,240 --> 00:12:06,000
and first of all we want to to present

241
00:12:06,000 --> 00:12:09,000
here is kind of an extreme example this

242
00:12:09,000 --> 00:12:10,920
is a suspicious scheduled task name as

243
00:12:10,920 --> 00:12:11,820
grid

244
00:12:11,820 --> 00:12:15,000
and this is not specific to quakbot but

245
00:12:15,000 --> 00:12:16,860
it detected quack but and it was made

246
00:12:16,860 --> 00:12:19,940
following a defier report

247
00:12:19,940 --> 00:12:24,420
in 2021 yeah and um

248
00:12:24,420 --> 00:12:28,160
in that attack so it was quack bought

249
00:12:28,160 --> 00:12:30,839
quite about using their their logon back

250
00:12:30,839 --> 00:12:33,000
in the days and in that attack they use

251
00:12:33,000 --> 00:12:35,640
a schedule test with a give ID as a task

252
00:12:35,640 --> 00:12:37,380
name as you can see on the screenshot

253
00:12:37,380 --> 00:12:38,700
below

254
00:12:38,700 --> 00:12:40,260
so let's check what the rule actually

255
00:12:40,260 --> 00:12:42,899
detects

256
00:12:42,899 --> 00:12:46,620
so this is the sigma rule for those who

257
00:12:46,620 --> 00:12:48,899
are not familiar so you have we're just

258
00:12:48,899 --> 00:12:50,760
show showing here the detection part

259
00:12:50,760 --> 00:12:53,700
where you have multiple selections and

260
00:12:53,700 --> 00:12:55,920
the condition is you need to

261
00:12:55,920 --> 00:12:59,700
to to reach all these selections and the

262
00:12:59,700 --> 00:13:02,220
first one is the um we are looking for

263
00:13:02,220 --> 00:13:04,920
the image name that needs to end with

264
00:13:04,920 --> 00:13:05,899
the

265
00:13:05,899 --> 00:13:08,579
scss.exe then the command line needs to

266
00:13:08,579 --> 00:13:11,040
have the the argument slash create

267
00:13:11,040 --> 00:13:13,800
and another argument in the command line

268
00:13:13,800 --> 00:13:17,480
is the slash Tien for the test name with

269
00:13:17,480 --> 00:13:19,940
some variation around

270
00:13:19,940 --> 00:13:22,459
quads double quotes and curly brackets

271
00:13:22,459 --> 00:13:25,800
and the same for the end of the uh the

272
00:13:25,800 --> 00:13:27,360
last part of the name

273
00:13:27,360 --> 00:13:31,680
and the the rule works well very well as

274
00:13:31,680 --> 00:13:34,079
at a period of time of course and

275
00:13:34,079 --> 00:13:36,600
obviously a few months later or a few

276
00:13:36,600 --> 00:13:38,760
weeks later it is bypassed by another

277
00:13:38,760 --> 00:13:41,360
sample

278
00:13:41,820 --> 00:13:44,639
so to sum up a little bit um what we've

279
00:13:44,639 --> 00:13:46,740
just seen we'll try to

280
00:13:46,740 --> 00:13:47,820
to

281
00:13:47,820 --> 00:13:51,480
um to see the pros and cons of the room

282
00:13:51,480 --> 00:13:53,700
with uh with some constraints we want to

283
00:13:53,700 --> 00:13:57,480
check and we put that on the onto the

284
00:13:57,480 --> 00:14:00,899
radar so on the rather the smaller is a

285
00:14:00,899 --> 00:14:03,660
is a better here and the the first

286
00:14:03,660 --> 00:14:06,720
consent is the uh the the data source

287
00:14:06,720 --> 00:14:09,180
the raw data source so here we use this

288
00:14:09,180 --> 00:14:11,639
just in the the wool is quite simple it

289
00:14:11,639 --> 00:14:14,459
just uses uh the name of the the process

290
00:14:14,459 --> 00:14:16,079
and the command line so it's quite

291
00:14:16,079 --> 00:14:18,839
common easy to have to in various log

292
00:14:18,839 --> 00:14:20,760
the sources

293
00:14:20,760 --> 00:14:23,820
and sensing for the test the time of

294
00:14:23,820 --> 00:14:26,220
testing when you want to test the rule

295
00:14:26,220 --> 00:14:28,980
before putting it in production it's

296
00:14:28,980 --> 00:14:32,459
very easy to to test the schedule Tasker

297
00:14:32,459 --> 00:14:36,420
creation so very good uh very good score

298
00:14:36,420 --> 00:14:39,120
here and the first positive rate as well

299
00:14:39,120 --> 00:14:41,820
is very important obviously and it's

300
00:14:41,820 --> 00:14:43,380
again very low

301
00:14:43,380 --> 00:14:46,079
in our Telemetry at least we didn't see

302
00:14:46,079 --> 00:14:47,639
any false positive

303
00:14:47,639 --> 00:14:50,699
level so

304
00:14:50,699 --> 00:14:51,360
um

305
00:14:51,360 --> 00:14:53,880
the rule is very specific that's obvious

306
00:14:53,880 --> 00:14:56,459
because it's uh based on the specific

307
00:14:56,459 --> 00:14:58,680
format of the task name

308
00:14:58,680 --> 00:15:01,440
and this is related to last point

309
00:15:01,440 --> 00:15:03,480
because it makes it

310
00:15:03,480 --> 00:15:07,380
hard to maintain if you want to to keep

311
00:15:07,380 --> 00:15:10,860
it effective over time and you want to

312
00:15:10,860 --> 00:15:11,940
cover

313
00:15:11,940 --> 00:15:14,940
probably other format like the than the

314
00:15:14,940 --> 00:15:17,220
give ID name

315
00:15:17,220 --> 00:15:20,880
but at the end the rule is good but a

316
00:15:20,880 --> 00:15:23,959
bit far from what we were looking for

317
00:15:23,959 --> 00:15:26,519
detecting the root infection chain so

318
00:15:26,519 --> 00:15:29,820
let's study another one much closer to

319
00:15:29,820 --> 00:15:32,220
what we want and this is the one not

320
00:15:32,220 --> 00:15:34,860
infection chain

321
00:15:34,860 --> 00:15:38,459
yeah so while the previous one was kind

322
00:15:38,459 --> 00:15:41,940
of as I once said a cd-like extreme

323
00:15:41,940 --> 00:15:44,600
example to make a point

324
00:15:44,600 --> 00:15:46,459
this one

325
00:15:46,459 --> 00:15:50,399
will be much more focused on detecting

326
00:15:50,399 --> 00:15:52,680
an actual infection chain

327
00:15:52,680 --> 00:15:53,839
uh

328
00:15:53,839 --> 00:15:56,880
as you may be aware one notification

329
00:15:56,880 --> 00:15:58,760
change

330
00:15:58,760 --> 00:16:02,760
has been on a rise since earlier this

331
00:16:02,760 --> 00:16:05,880
year I think since January probably uh

332
00:16:05,880 --> 00:16:07,579
something like that

333
00:16:07,579 --> 00:16:12,380
and where this is kind of a classic

334
00:16:12,380 --> 00:16:15,300
infection chain used by a quagbat I

335
00:16:15,300 --> 00:16:18,060
think uh yeah we forgot to thanks proxy

336
00:16:18,060 --> 00:16:21,600
life before but his work may help us a

337
00:16:21,600 --> 00:16:24,440
lot to uh to build this presentation

338
00:16:24,440 --> 00:16:28,320
and to help us in our research and so a

339
00:16:28,320 --> 00:16:30,959
classic infection chain uh with one note

340
00:16:30,959 --> 00:16:34,620
will be just you do user is receiving

341
00:16:34,620 --> 00:16:38,579
one not filed as an attachment then it

342
00:16:38,579 --> 00:16:42,079
doubles click on the OneNote file then

343
00:16:42,079 --> 00:16:45,000
in that file there's another file that

344
00:16:45,000 --> 00:16:47,160
is embedded you double click on that

345
00:16:47,160 --> 00:16:50,040
file as well and it loads different

346
00:16:50,040 --> 00:16:51,600
commands in the end

347
00:16:51,600 --> 00:16:54,720
so the rule we wanted to show you which

348
00:16:54,720 --> 00:16:58,139
is also a public sigma room is called

349
00:16:58,139 --> 00:17:00,620
suspicious Microsoft one child process

350
00:17:00,620 --> 00:17:04,740
so it detects exactly what the title

351
00:17:04,740 --> 00:17:07,380
says uh suspicious Microsoft Window

352
00:17:07,380 --> 00:17:09,780
chart processes

353
00:17:09,780 --> 00:17:11,939
um but also some other stuff like

354
00:17:11,939 --> 00:17:13,859
suspicious common line extension fire

355
00:17:13,859 --> 00:17:17,579
extensions and suspicious uh fire paths

356
00:17:17,579 --> 00:17:19,619
like species directories

357
00:17:19,619 --> 00:17:21,140
uh

358
00:17:21,140 --> 00:17:24,839
do not want to spend much time on

359
00:17:24,839 --> 00:17:28,679
showing you the rule but basically it

360
00:17:28,679 --> 00:17:31,020
does detect the previous infection chain

361
00:17:31,020 --> 00:17:34,160
I just showed you and

362
00:17:34,160 --> 00:17:36,660
it kind of still worked today from what

363
00:17:36,660 --> 00:17:40,559
we've observed and uh it's kind of a

364
00:17:40,559 --> 00:17:45,000
Great rule if we take our radar again

365
00:17:45,000 --> 00:17:49,200
uh uh so the data source is used by the

366
00:17:49,200 --> 00:17:51,840
rule is are quite simple it's just

367
00:17:51,840 --> 00:17:55,740
parent child processes relationships and

368
00:17:55,740 --> 00:17:58,020
common lines so basically

369
00:17:58,020 --> 00:18:01,700
most of the solutions have that

370
00:18:01,700 --> 00:18:04,620
then the timing skills required for this

371
00:18:04,620 --> 00:18:09,000
rule is maybe a bit higher yeah for than

372
00:18:09,000 --> 00:18:11,400
the suspicious schedule task but it's

373
00:18:11,400 --> 00:18:13,440
still quite easy to build these search

374
00:18:13,440 --> 00:18:18,059
rule uh just probably need one knot but

375
00:18:18,059 --> 00:18:19,580
that's kind of easy

376
00:18:19,580 --> 00:18:23,880
then on the first positive thing we only

377
00:18:23,880 --> 00:18:25,980
observe like one or two first perceives

378
00:18:25,980 --> 00:18:27,960
in like 30 days time range on our

379
00:18:27,960 --> 00:18:30,960
Telemetry so it's quite nice as well

380
00:18:30,960 --> 00:18:34,980
however it's still a really specific

381
00:18:34,980 --> 00:18:38,880
rule obviously but still much broader

382
00:18:38,880 --> 00:18:42,419
than the scheduled test name since in

383
00:18:42,419 --> 00:18:45,120
this case you do detect most of the

384
00:18:45,120 --> 00:18:48,299
OneNote infection chains however as you

385
00:18:48,299 --> 00:18:51,660
saw on the previous slide you have

386
00:18:51,660 --> 00:18:54,480
several file extensions so you have

387
00:18:54,480 --> 00:18:56,940
different lists so list of suspicious

388
00:18:56,940 --> 00:18:59,039
processes list of fire extensions list

389
00:18:59,039 --> 00:19:01,440
of suspicious directories so

390
00:19:01,440 --> 00:19:05,880
it can obviously be bypassed probably a

391
00:19:05,880 --> 00:19:09,660
yeah easily but by some actors but most

392
00:19:09,660 --> 00:19:12,059
of like the infection changes by quack

393
00:19:12,059 --> 00:19:14,580
but a nice ID kind of always use the the

394
00:19:14,580 --> 00:19:17,760
same stuff so in case you don't have

395
00:19:17,760 --> 00:19:20,700
like a suspicious processes or a

396
00:19:20,700 --> 00:19:22,500
specified extension you just have to

397
00:19:22,500 --> 00:19:25,260
update your rule which is kind of lead

398
00:19:25,260 --> 00:19:27,419
us to our next point is it hard to

399
00:19:27,419 --> 00:19:29,900
maintain or not naturally

400
00:19:29,900 --> 00:19:33,059
since you do know that it's the Only

401
00:19:33,059 --> 00:19:36,539
Rule uh kind of probably the Only Rule

402
00:19:36,539 --> 00:19:38,220
you have for one note in friction chain

403
00:19:38,220 --> 00:19:41,700
so you can test and test again different

404
00:19:41,700 --> 00:19:44,340
one not infection chain and if it

405
00:19:44,340 --> 00:19:46,020
doesn't trigger your rule you just kind

406
00:19:46,020 --> 00:19:48,740
of update it

407
00:19:48,960 --> 00:19:52,340
so we think the rule is quite nice

408
00:19:52,340 --> 00:19:55,320
uh on it's quite efficient and it

409
00:19:55,320 --> 00:19:57,440
doesn't require much time to be built

410
00:19:57,440 --> 00:20:00,660
however uh it's kind of only possible

411
00:20:00,660 --> 00:20:03,179
because of how one networks since it

412
00:20:03,179 --> 00:20:06,539
embeds a file then uh it kind of

413
00:20:06,539 --> 00:20:09,419
triggers the fact that there's a one not

414
00:20:09,419 --> 00:20:11,820
apparent process followed by a child

415
00:20:11,820 --> 00:20:14,820
process that can be suspicious that's

416
00:20:14,820 --> 00:20:17,360
not always the case for

417
00:20:17,360 --> 00:20:20,340
the over infection chains which leads us

418
00:20:20,340 --> 00:20:21,840
to our next part

419
00:20:21,840 --> 00:20:25,559
and introducing introducing you to uh

420
00:20:25,559 --> 00:20:29,820
correlation rules so correlation is

421
00:20:29,820 --> 00:20:32,760
probably well known by now most of the

422
00:20:32,760 --> 00:20:35,340
solutions have a correlation based

423
00:20:35,340 --> 00:20:37,640
detection capabilities

424
00:20:37,640 --> 00:20:40,799
however maybe seeing Mac relation is a

425
00:20:40,799 --> 00:20:44,280
bit less well known it's quite recent I

426
00:20:44,280 --> 00:20:48,559
think it's like it has only a year old

427
00:20:48,559 --> 00:20:51,900
and so we wanted to show you just a dumb

428
00:20:51,900 --> 00:20:55,500
rule to uh kind of show you how a

429
00:20:55,500 --> 00:20:58,440
correlation sigma room looks like

430
00:20:58,440 --> 00:21:01,039
at least it's not really

431
00:21:01,039 --> 00:21:04,919
it's always based on our detection

432
00:21:04,919 --> 00:21:08,160
engine so you have elastic and schema

433
00:21:08,160 --> 00:21:10,559
Fields however it's kind of the same

434
00:21:10,559 --> 00:21:13,440
thing as the classical Sigma rules that

435
00:21:13,440 --> 00:21:15,179
you will find typically

436
00:21:15,179 --> 00:21:18,960
and so in this case you just have a

437
00:21:18,960 --> 00:21:22,799
simple rule that detects a user command

438
00:21:22,799 --> 00:21:25,860
common line starting with user then a

439
00:21:25,860 --> 00:21:28,740
second rule that detects a common line

440
00:21:28,740 --> 00:21:30,299
starting with deer

441
00:21:30,299 --> 00:21:33,000
and then the correlation part is just

442
00:21:33,000 --> 00:21:37,320
creating uh temporarily those two cells

443
00:21:37,320 --> 00:21:39,780
Classics in marus and if you see those

444
00:21:39,780 --> 00:21:41,059
two Sigma rules

445
00:21:41,059 --> 00:21:44,039
the first one followed by the second one

446
00:21:44,039 --> 00:21:46,380
in one minute on the same last name by

447
00:21:46,380 --> 00:21:48,840
the same username it will uh just

448
00:21:48,840 --> 00:21:50,400
trigger net

449
00:21:50,400 --> 00:21:54,120
so just to show you how correlation

450
00:21:54,120 --> 00:21:58,080
looks like and then we

451
00:21:58,080 --> 00:22:00,780
therefore wanted to show you how we

452
00:22:00,780 --> 00:22:03,840
applied correlation to uh trying to

453
00:22:03,840 --> 00:22:07,740
detect infection chains and so I wanted

454
00:22:07,740 --> 00:22:10,860
to focus on first on the iso and K

455
00:22:10,860 --> 00:22:13,919
infection chain so in this slide you can

456
00:22:13,919 --> 00:22:16,980
see that there are several parts on the

457
00:22:16,980 --> 00:22:20,400
slide the first part would be that it

458
00:22:20,400 --> 00:22:24,059
starts from the bottom to the top so you

459
00:22:24,059 --> 00:22:27,419
have an ISO file that's been created by

460
00:22:27,419 --> 00:22:29,760
by WinRAR in this case and then you have

461
00:22:29,760 --> 00:22:31,760
a species

462
00:22:31,760 --> 00:22:35,100
processary W script process that's been

463
00:22:35,100 --> 00:22:36,900
launched and then in triggered an alert

464
00:22:36,900 --> 00:22:40,919
if we dig deeper in that

465
00:22:40,919 --> 00:22:43,200
W script process you can see that it's

466
00:22:43,200 --> 00:22:46,380
been launched by explorer.tx and that's

467
00:22:46,380 --> 00:22:49,320
it launches a Javascript file in the end

468
00:22:49,320 --> 00:22:50,400
so

469
00:22:50,400 --> 00:22:53,880
uh we'll take to show you how such kind

470
00:22:53,880 --> 00:22:58,080
of alert can be triggered and uh we made

471
00:22:58,080 --> 00:23:00,840
a correlation rule for ISO and NK that

472
00:23:00,840 --> 00:23:03,900
can be we think useful for everyone and

473
00:23:03,900 --> 00:23:06,679
all the creation rules will present

474
00:23:06,679 --> 00:23:10,200
today are publicly available in our

475
00:23:10,200 --> 00:23:13,200
GitHub repository so maybe have to adapt

476
00:23:13,200 --> 00:23:15,559
a few things to your environment but

477
00:23:15,559 --> 00:23:20,159
globally you can use them and so we

478
00:23:20,159 --> 00:23:23,960
didn't want to show you the the rule

479
00:23:23,960 --> 00:23:26,700
because it's quite hard to explain and

480
00:23:26,700 --> 00:23:27,799
to look at

481
00:23:27,799 --> 00:23:33,500
so we made some graphs for that so

482
00:23:33,500 --> 00:23:37,260
what is this commemoration rule about so

483
00:23:37,260 --> 00:23:39,500
you have an image file creation first

484
00:23:39,500 --> 00:23:44,100
which is kind of also a list of fire

485
00:23:44,100 --> 00:23:46,320
extensions that are related to image

486
00:23:46,320 --> 00:23:50,940
fails so ISO vhd IMG Institute like that

487
00:23:50,940 --> 00:23:54,620
and then you have a second rule that

488
00:23:54,620 --> 00:23:58,559
spots suspicious child processes coming

489
00:23:58,559 --> 00:24:01,860
from explorer.exe so it's a list of more

490
00:24:01,860 --> 00:24:05,280
than 60 processes which is why it's not

491
00:24:05,280 --> 00:24:07,080
or listed here

492
00:24:07,080 --> 00:24:09,240
and

493
00:24:09,240 --> 00:24:12,120
why we do this is because when you have

494
00:24:12,120 --> 00:24:15,720
a classic ISO and K uh infection chain

495
00:24:15,720 --> 00:24:18,900
in the end as you saw in the video uh

496
00:24:18,900 --> 00:24:20,940
the user just double clicks double click

497
00:24:20,940 --> 00:24:23,039
double click so it's kind of always

498
00:24:23,039 --> 00:24:25,620
Explorer that's the department of the

499
00:24:25,620 --> 00:24:26,760
processes

500
00:24:26,760 --> 00:24:29,880
and services where the rule is built

501
00:24:29,880 --> 00:24:31,860
like this it's also to avoid false

502
00:24:31,860 --> 00:24:35,820
positives obviously and uh so the first

503
00:24:35,820 --> 00:24:38,159
sub rule followed by the so the green

504
00:24:38,159 --> 00:24:41,039
rule followed by the blue rule uh within

505
00:24:41,039 --> 00:24:42,780
five minutes on the same last name which

506
00:24:42,780 --> 00:24:45,120
we are on the red and this is the red

507
00:24:45,120 --> 00:24:47,700
you just show before

508
00:24:47,700 --> 00:24:52,500
and uh so on our environment uh this

509
00:24:52,500 --> 00:24:54,659
rule is quite nice and doesn't trigger

510
00:24:54,659 --> 00:24:58,400
lots of uh like not any false positives

511
00:24:58,400 --> 00:25:02,640
and does detect uh still uh infection

512
00:25:02,640 --> 00:25:06,840
chain today that uses uh as1 and K so

513
00:25:06,840 --> 00:25:09,539
that's one of the two Croatian rules we

514
00:25:09,539 --> 00:25:12,539
wanted to talk to you about the next one

515
00:25:12,539 --> 00:25:14,820
and when we talked to you about his HTML

516
00:25:14,820 --> 00:25:16,919
smuggling

517
00:25:16,919 --> 00:25:20,100
yes and again this is another Trader by

518
00:25:20,100 --> 00:25:24,000
the HTML smoking rule we built and from

519
00:25:24,000 --> 00:25:26,100
the bottom you as you can see

520
00:25:26,100 --> 00:25:29,299
um there's an HTML file created by

521
00:25:29,299 --> 00:25:33,840
Firefox and if we go up we can see that

522
00:25:33,840 --> 00:25:37,620
Firefox is then creating a zip file and

523
00:25:37,620 --> 00:25:40,260
then we have common Windows command Dart

524
00:25:40,260 --> 00:25:43,980
launch is copy that exists cmd.exe so

525
00:25:43,980 --> 00:25:46,020
this is really the infection chain we've

526
00:25:46,020 --> 00:25:50,460
shown you in this video the HTML smoking

527
00:25:50,460 --> 00:25:53,460
and this is the correlation world so

528
00:25:53,460 --> 00:25:56,700
it's a bit more complex the same price

529
00:25:56,700 --> 00:26:00,320
simple so on the schema we have in the

530
00:26:00,320 --> 00:26:03,900
blue uh yeah the blue one the first

531
00:26:03,900 --> 00:26:07,380
temporal rule in the the green the green

532
00:26:07,380 --> 00:26:10,980
one the value control and globally a

533
00:26:10,980 --> 00:26:14,100
temporal topper rule grouping the bus

534
00:26:14,100 --> 00:26:15,240
together

535
00:26:15,240 --> 00:26:17,659
so we'll explain the first one

536
00:26:17,659 --> 00:26:22,140
is composed of three suburbsum so we

537
00:26:22,140 --> 00:26:24,440
want to detect the HTML file creation

538
00:26:24,440 --> 00:26:27,900
followed by a

539
00:26:27,900 --> 00:26:30,659
um browser process opening a local HTML

540
00:26:30,659 --> 00:26:32,279
file so it's quite

541
00:26:32,279 --> 00:26:35,700
quite specific and then some suspicious

542
00:26:35,700 --> 00:26:38,760
file creation so here it was a it was a

543
00:26:38,760 --> 00:26:41,279
zip file but it could be yeah a bad file

544
00:26:41,279 --> 00:26:43,380
uh we've seen several different

545
00:26:43,380 --> 00:26:46,440
variations around the infection changes

546
00:26:46,440 --> 00:26:48,600
by quack button is

547
00:26:48,600 --> 00:26:52,740
and then the second second rule in green

548
00:26:52,740 --> 00:26:55,500
um is the value control where we want to

549
00:26:55,500 --> 00:26:57,960
monitor some suspicious processes or

550
00:26:57,960 --> 00:27:01,320
it's a smaller Windows command processes

551
00:27:01,320 --> 00:27:04,500
I use biotechers so we have a large long

552
00:27:04,500 --> 00:27:08,039
list like a game said before or more

553
00:27:08,039 --> 00:27:11,400
than 60 and we want to do a counter

554
00:27:11,400 --> 00:27:15,179
value on that on that around the process

555
00:27:15,179 --> 00:27:16,919
command line related to this processes

556
00:27:16,919 --> 00:27:20,120
and we want three or more than three

557
00:27:20,120 --> 00:27:22,320
value of that

558
00:27:22,320 --> 00:27:24,720
within two minutes Group by the same on

559
00:27:24,720 --> 00:27:27,600
the same user goodbye stand by the same

560
00:27:27,600 --> 00:27:28,620
username

561
00:27:28,620 --> 00:27:32,340
and this one and the previous one

562
00:27:32,340 --> 00:27:34,980
followed by this one on the two-minute

563
00:27:34,980 --> 00:27:36,779
YouTube minute period of time on the

564
00:27:36,779 --> 00:27:38,419
same as name with the same username

565
00:27:38,419 --> 00:27:42,900
we'll produce will raise an alert

566
00:27:42,900 --> 00:27:45,360
and globally you are this rule was

567
00:27:45,360 --> 00:27:47,820
tested very recently we we experienced

568
00:27:47,820 --> 00:27:52,020
experienced it uh for from a couple of

569
00:27:52,020 --> 00:27:55,620
months and uh it's it's quite nice we

570
00:27:55,620 --> 00:27:58,980
have a quite low rate of false positive

571
00:27:58,980 --> 00:28:02,580
um that are really related to um

572
00:28:02,580 --> 00:28:05,840
specific customer environment where some

573
00:28:05,840 --> 00:28:09,720
classic local software or administrator

574
00:28:09,720 --> 00:28:12,720
actions could could trigger the rule but

575
00:28:12,720 --> 00:28:15,059
it's it's remained quite low and quite

576
00:28:15,059 --> 00:28:17,720
easy to filter

577
00:28:18,059 --> 00:28:21,539
so let's sum up for the both of these

578
00:28:21,539 --> 00:28:24,120
two rule we are with uh We've sum up

579
00:28:24,120 --> 00:28:26,520
here in the same radar again

580
00:28:26,520 --> 00:28:31,260
and um and as you can see here we for

581
00:28:31,260 --> 00:28:34,440
the uh the data source we it's a bit

582
00:28:34,440 --> 00:28:35,820
more

583
00:28:35,820 --> 00:28:39,120
um more complex so it's a it's uh we

584
00:28:39,120 --> 00:28:41,640
have a lot of different fields and one

585
00:28:41,640 --> 00:28:44,580
specific uh which a bit more rare it's

586
00:28:44,580 --> 00:28:46,679
the file name it's not always available

587
00:28:46,679 --> 00:28:49,580
in every uh log sources

588
00:28:49,580 --> 00:28:53,400
and the testing as well and the time and

589
00:28:53,400 --> 00:28:56,100
testing in Labs is a little bit more

590
00:28:56,100 --> 00:28:58,559
complex and um

591
00:28:58,559 --> 00:29:00,419
the first positive right I've just

592
00:29:00,419 --> 00:29:02,100
mentioned it it's quite uh it's quite

593
00:29:02,100 --> 00:29:06,059
low the rule for us not so much specific

594
00:29:06,059 --> 00:29:09,059
because we were able to uh to follow and

595
00:29:09,059 --> 00:29:12,659
test a new infection chain used by uh by

596
00:29:12,659 --> 00:29:14,460
quarkbot and his leader using HTML

597
00:29:14,460 --> 00:29:16,200
smugging and every time

598
00:29:16,200 --> 00:29:19,679
it seems to work so quite quite nice and

599
00:29:19,679 --> 00:29:22,140
the maintenance of the rule this is

600
00:29:22,140 --> 00:29:25,380
quite similar to uh what Geo mentioned

601
00:29:25,380 --> 00:29:27,120
for the one not one because we have a

602
00:29:27,120 --> 00:29:29,700
list of of processes a list of fine

603
00:29:29,700 --> 00:29:32,640
extensions so it's quite easy to to

604
00:29:32,640 --> 00:29:35,240
update

605
00:29:36,000 --> 00:29:38,940
so to conclude a little bit on the

606
00:29:38,940 --> 00:29:41,820
different rules we've presented

607
00:29:41,820 --> 00:29:44,460
um so on the radar again we have put all

608
00:29:44,460 --> 00:29:47,159
three together though the schedule task

609
00:29:47,159 --> 00:29:50,940
rule in in grade in purple the uh the

610
00:29:50,940 --> 00:29:53,159
one not and in blue the the correlation

611
00:29:53,159 --> 00:29:54,480
ones

612
00:29:54,480 --> 00:29:56,340
and still the as you can see the one

613
00:29:56,340 --> 00:29:58,860
notch is really really good compared to

614
00:29:58,860 --> 00:29:59,820
uh

615
00:29:59,820 --> 00:30:01,919
to to the other even to the uh to

616
00:30:01,919 --> 00:30:03,899
decoration rules

617
00:30:03,899 --> 00:30:07,380
um but we know that it will probably not

618
00:30:07,380 --> 00:30:09,840
last very long again because Microsoft

619
00:30:09,840 --> 00:30:11,820
has made some announcement around the

620
00:30:11,820 --> 00:30:14,580
security measure to protect we're not

621
00:30:14,580 --> 00:30:18,419
against this kind of abuse

622
00:30:18,419 --> 00:30:21,179
um and the correlation at the end is is

623
00:30:21,179 --> 00:30:24,059
quite well balanced between uh in terms

624
00:30:24,059 --> 00:30:25,980
of efficiency versus complexity and

625
00:30:25,980 --> 00:30:28,520
possibilities

626
00:30:29,100 --> 00:30:31,080
so is that enough

627
00:30:31,080 --> 00:30:34,080
um uh inoculation detection we didn't

628
00:30:34,080 --> 00:30:37,320
talk about the network for instance and

629
00:30:37,320 --> 00:30:39,600
uh there was a reason for that but I

630
00:30:39,600 --> 00:30:42,659
will not detain here uh that and we

631
00:30:42,659 --> 00:30:45,120
wanted also to um to explain how we

632
00:30:45,120 --> 00:30:48,299
ruled uh how we integrate these these

633
00:30:48,299 --> 00:30:50,340
rules and these correlation rules in our

634
00:30:50,340 --> 00:30:53,820
CTI workflow and Guillaume will will do

635
00:30:53,820 --> 00:30:55,919
the last part explaining that

636
00:30:55,919 --> 00:30:59,520
yeah so we'll conclude by doing this

637
00:30:59,520 --> 00:31:02,840
part so a few words

638
00:31:02,840 --> 00:31:06,360
so uh lots of you here are probably

639
00:31:06,360 --> 00:31:08,940
tracking different fat actors it's kind

640
00:31:08,940 --> 00:31:11,460
of the same for quagboat I study and

641
00:31:11,460 --> 00:31:13,919
stuff like that it's kind of

642
00:31:13,919 --> 00:31:19,200
easy ish to to follow uh you have an

643
00:31:19,200 --> 00:31:22,740
example here that is good to follow

644
00:31:22,740 --> 00:31:25,679
quack but when they are using like

645
00:31:25,679 --> 00:31:28,620
default certificates when we say

646
00:31:28,620 --> 00:31:32,700
different certificate is uh kind of just

647
00:31:32,700 --> 00:31:35,100
always the same pattern in the

648
00:31:35,100 --> 00:31:36,960
certificate not always the same

649
00:31:36,960 --> 00:31:40,279
certificate itself

650
00:31:40,399 --> 00:31:44,940
on the right you can see that there's

651
00:31:44,940 --> 00:31:48,600
different uh points six points that are

652
00:31:48,600 --> 00:31:52,260
useful to make like regex season senses

653
00:31:52,260 --> 00:31:54,240
or a different search engine like that

654
00:31:54,240 --> 00:31:58,860
to find a quagbot c2s

655
00:31:58,860 --> 00:32:02,159
and you can see that we have results on

656
00:32:02,159 --> 00:32:05,360
that so we started that rule probably on

657
00:32:05,360 --> 00:32:09,299
uh yeah October 2022 and we still have

658
00:32:09,299 --> 00:32:12,659
results today so that's kind of helpful

659
00:32:12,659 --> 00:32:15,659
as well for detection since we don't

660
00:32:15,659 --> 00:32:18,120
rely only on system rules and

661
00:32:18,120 --> 00:32:20,279
correlation rules and stuff like that

662
00:32:20,279 --> 00:32:23,940
and it's always great to have a safety

663
00:32:23,940 --> 00:32:25,460
net

664
00:32:25,460 --> 00:32:28,320
uh the second thing I wanted to talk to

665
00:32:28,320 --> 00:32:29,880
you about is

666
00:32:29,880 --> 00:32:33,899
um kind of a pipeline uh to

667
00:32:33,899 --> 00:32:37,500
to Belarus to also improve them and make

668
00:32:37,500 --> 00:32:40,980
sure there's no regression and so

669
00:32:40,980 --> 00:32:41,760
um

670
00:32:41,760 --> 00:32:43,620
as you can see we have different Terror

671
00:32:43,620 --> 00:32:45,179
rules that allows us to retrieve

672
00:32:45,179 --> 00:32:49,020
different samples then they are all

673
00:32:49,020 --> 00:32:51,360
pushed to fame we see an open source

674
00:32:51,360 --> 00:32:54,299
tool by associated general and

675
00:32:54,299 --> 00:32:54,899
um

676
00:32:54,899 --> 00:32:58,440
and then uh it kind of goes into some

677
00:32:58,440 --> 00:32:59,880
sandboxes

678
00:32:59,880 --> 00:33:04,620
and the sandboxes uh allows to test or

679
00:33:04,620 --> 00:33:09,720
rules and if it gets a rule it's good if

680
00:33:09,720 --> 00:33:12,720
it's not we are looking uh into it and

681
00:33:12,720 --> 00:33:15,480
why it didn't trigger the rule should

682
00:33:15,480 --> 00:33:18,600
the rule needs to be updated or stuff

683
00:33:18,600 --> 00:33:19,679
like that

684
00:33:19,679 --> 00:33:21,720
and in the end it's kind of the same for

685
00:33:21,720 --> 00:33:25,559
The Trackers I just told you about so if

686
00:33:25,559 --> 00:33:28,980
we don't have the C2 is there a new uh

687
00:33:28,980 --> 00:33:32,519
like census query or stuff like that to

688
00:33:32,519 --> 00:33:36,059
to make or not so it's kind of

689
00:33:36,059 --> 00:33:38,880
a virtuous circle if it's if that's the

690
00:33:38,880 --> 00:33:40,039
word in English

691
00:33:40,039 --> 00:33:44,360
so to improve uh detection process

692
00:33:44,360 --> 00:33:47,480
however we try to automate it

693
00:33:47,480 --> 00:33:51,419
a lot but for the sandbox sandbox part

694
00:33:51,419 --> 00:33:54,659
it's quite hard because uh as you can

695
00:33:54,659 --> 00:33:57,419
see sometimes they require the password

696
00:33:57,419 --> 00:34:00,360
to extract the zip archive and stuff

697
00:34:00,360 --> 00:34:03,480
like that so it's not always easy to

698
00:34:03,480 --> 00:34:07,440
fully automate this process and this is

699
00:34:07,440 --> 00:34:12,239
why uh everyone said we cried uh also to

700
00:34:12,239 --> 00:34:15,000
make this research because it took us a

701
00:34:15,000 --> 00:34:16,280
lot of time

702
00:34:16,280 --> 00:34:20,399
and still takes off a lot of time today

703
00:34:20,399 --> 00:34:22,379
and so we wanted to conclude our

704
00:34:22,379 --> 00:34:24,780
presentation by a classic pyramid of

705
00:34:24,780 --> 00:34:27,719
pain but kind of applied to This

706
00:34:27,719 --> 00:34:29,179
research

707
00:34:29,179 --> 00:34:34,500
so the first thing I wanted to remind

708
00:34:34,500 --> 00:34:37,879
you and it also reminds us as well

709
00:34:37,879 --> 00:34:41,040
attackers are not them there's no such

710
00:34:41,040 --> 00:34:43,760
thing as a magic rule unfortunately

711
00:34:43,760 --> 00:34:47,179
and it's kind of hard to build a really

712
00:34:47,179 --> 00:34:50,219
we felt it would be easier to be the

713
00:34:50,219 --> 00:34:53,580
good creation rule without too much

714
00:34:53,580 --> 00:34:56,000
effort but it does require some effort

715
00:34:56,000 --> 00:34:57,800
and

716
00:34:57,800 --> 00:35:01,200
so to sum up everything that's related

717
00:35:01,200 --> 00:35:03,359
like to deliver interest infrastructure

718
00:35:03,359 --> 00:35:05,760
like email addresses that's been used

719
00:35:05,760 --> 00:35:08,339
for sending phishing email Etc

720
00:35:08,339 --> 00:35:11,220
trivial change for the attackers and

721
00:35:11,220 --> 00:35:14,220
it's kind of easy to get as well for us

722
00:35:14,220 --> 00:35:17,339
Defenders however the higher we go on

723
00:35:17,339 --> 00:35:21,480
the pyramid the harder it is for us

724
00:35:21,480 --> 00:35:23,640
Defenders but the more challenging it is

725
00:35:23,640 --> 00:35:27,119
for attackers as well to rebuild or

726
00:35:27,119 --> 00:35:30,900
their infection chains so with the

727
00:35:30,900 --> 00:35:32,880
correlation rule we showed you we think

728
00:35:32,880 --> 00:35:36,140
that they are kind of good rules because

729
00:35:36,140 --> 00:35:39,000
it's kind of focused on root infection

730
00:35:39,000 --> 00:35:42,180
chains instead of just one step of the

731
00:35:42,180 --> 00:35:44,040
infection chain so it kind of detects

732
00:35:44,040 --> 00:35:46,140
several different infection chain in the

733
00:35:46,140 --> 00:35:47,240
end

734
00:35:47,240 --> 00:35:51,420
but it's not a Magic cruise and the best

735
00:35:51,420 --> 00:35:53,940
will be as I said like detecting the

736
00:35:53,940 --> 00:35:56,760
world dll execution dll loading ttps and

737
00:35:56,760 --> 00:35:58,740
stuff like that it's kind of really hard

738
00:35:58,740 --> 00:36:00,660
to do for us Defenders without having

739
00:36:00,660 --> 00:36:02,400
too much first positives

740
00:36:02,400 --> 00:36:06,000
so yeah that's the end of our talk thank

741
00:36:06,000 --> 00:36:09,180
you for your attention and if you have

742
00:36:09,180 --> 00:36:10,600
any questions

743
00:36:10,600 --> 00:36:19,210
[Applause]

744
00:36:20,220 --> 00:36:25,700
okay we have some time for questions

745
00:36:31,740 --> 00:36:35,060
you you have a question

746
00:36:49,820 --> 00:36:53,420
thank you for the presentation I had a

747
00:36:53,420 --> 00:36:58,140
question on slide 15 you showed some run

748
00:36:58,140 --> 00:37:01,160
dll 32 that

749
00:37:01,160 --> 00:37:05,520
runs starts dll that is not with the dll

750
00:37:05,520 --> 00:37:07,099
extension

751
00:37:07,099 --> 00:37:10,980
would that be something we can hunt for

752
00:37:10,980 --> 00:37:14,820
or detect on and did you dig in that and

753
00:37:14,820 --> 00:37:19,619
if not if if so is it reliable prone to

754
00:37:19,619 --> 00:37:21,960
false positive or not

755
00:37:21,960 --> 00:37:26,520
yeah so yeah that's kind of

756
00:37:26,520 --> 00:37:29,160
like classic Sigma rules that we can do

757
00:37:29,160 --> 00:37:33,480
to to perform detection however uh

758
00:37:33,480 --> 00:37:37,079
if we go back to our radar it's kind of

759
00:37:37,079 --> 00:37:39,000
really specific as well if they just

760
00:37:39,000 --> 00:37:42,359
don't choose around the area 32 it's if

761
00:37:42,359 --> 00:37:45,359
they use like regular svr 32 instead the

762
00:37:45,359 --> 00:37:47,940
room won't work so yeah it's still good

763
00:37:47,940 --> 00:37:51,119
rules to to hunt to perform detections

764
00:37:51,119 --> 00:37:53,460
but it's we think it's not generic

765
00:37:53,460 --> 00:37:56,099
enough but also really good to have so

766
00:37:56,099 --> 00:37:57,660
yeah

767
00:37:57,660 --> 00:38:01,560
not good answer for that

768
00:38:01,560 --> 00:38:04,099
thanks

769
00:38:07,020 --> 00:38:08,700
so Tom you're sure you don't have a

770
00:38:08,700 --> 00:38:10,879
question

771
00:38:14,160 --> 00:38:16,700
okay

772
00:38:22,859 --> 00:38:26,460
thanks for all the correlation rules you

773
00:38:26,460 --> 00:38:31,380
have many steps to trigger it so

774
00:38:31,380 --> 00:38:33,720
from my experience of theme they're

775
00:38:33,720 --> 00:38:37,140
going to be memory issues to manage that

776
00:38:37,140 --> 00:38:40,980
on large data sets so how do you deal

777
00:38:40,980 --> 00:38:43,440
with that yeah so I'm looking at her

778
00:38:43,440 --> 00:38:45,200
developers here

779
00:38:45,200 --> 00:38:47,119
so yeah

780
00:38:47,119 --> 00:38:49,740
it's kind of

781
00:38:49,740 --> 00:38:54,300
yep they do have performance issues

782
00:38:54,300 --> 00:38:58,260
sometimes especially if

783
00:38:58,260 --> 00:39:00,900
I'm going back on the

784
00:39:00,900 --> 00:39:02,960
camera

785
00:39:02,960 --> 00:39:06,480
the hard thing for us would be the

786
00:39:06,480 --> 00:39:07,700
followed by

787
00:39:07,700 --> 00:39:12,300
so if we want the exact order of the

788
00:39:12,300 --> 00:39:15,839
infection chain that takes lots of

789
00:39:15,839 --> 00:39:19,320
resources so we are trying to rule with

790
00:39:19,320 --> 00:39:22,859
without that right now and it seems to

791
00:39:22,859 --> 00:39:26,160
work but we have still a bit more false

792
00:39:26,160 --> 00:39:29,880
positives so unfortunately yeah the best

793
00:39:29,880 --> 00:39:31,800
thing uh

794
00:39:31,800 --> 00:39:36,000
we didn't really talked about will be to

795
00:39:36,000 --> 00:39:38,820
have a normalized field and value for

796
00:39:38,820 --> 00:39:41,760
the usernames between email and system

797
00:39:41,760 --> 00:39:45,540
and so you can build a rural and a

798
00:39:45,540 --> 00:39:48,359
suspicious attachment in the email and

799
00:39:48,359 --> 00:39:53,220
it will allow us to have really lots of

800
00:39:53,220 --> 00:39:56,040
good positives and not false positives

801
00:39:56,040 --> 00:39:59,339
but it's kind of hard to perform such

802
00:39:59,339 --> 00:40:01,380
kind of normalization right now for us

803
00:40:01,380 --> 00:40:03,800
at least

804
00:40:06,960 --> 00:40:10,200
okay no more questions

805
00:40:10,200 --> 00:40:12,350
one two three okay thank you

806
00:40:12,350 --> 00:40:16,879
[Applause]

