1
00:00:00,160 --> 00:00:04,560
hello today i'm going to talk to you

2
00:00:02,720 --> 00:00:06,960
about the fall of the middle the

3
00:00:04,560 --> 00:00:09,280
pre-installed hostile downloader

4
00:00:06,960 --> 00:00:11,120
that we were able to find on some

5
00:00:09,280 --> 00:00:12,719
android devices

6
00:00:11,120 --> 00:00:15,759
i wanted to tell you a story a bit

7
00:00:12,719 --> 00:00:19,279
differently though usually when you have

8
00:00:15,759 --> 00:00:22,160
a story of a malware the

9
00:00:19,279 --> 00:00:23,198
presenter starts with the chronological

10
00:00:22,160 --> 00:00:26,240
order events

11
00:00:23,199 --> 00:00:27,279
so you get to see different versions and

12
00:00:26,240 --> 00:00:30,720
you get to see

13
00:00:27,279 --> 00:00:31,359
how they progressed basically what you

14
00:00:30,720 --> 00:00:33,600
get to see

15
00:00:31,359 --> 00:00:34,800
is the story from the malware authors

16
00:00:33,600 --> 00:00:38,000
perspective

17
00:00:34,800 --> 00:00:39,599
how they developed the whole attack or

18
00:00:38,000 --> 00:00:43,440
how they developed the whole

19
00:00:39,600 --> 00:00:45,760
malware today i want to present

20
00:00:43,440 --> 00:00:47,519
you a different kind of story a story of

21
00:00:45,760 --> 00:00:50,960
how we found

22
00:00:47,520 --> 00:00:53,680
malware and the story from

23
00:00:50,960 --> 00:00:54,879
kind of behind the scenes so instead of

24
00:00:53,680 --> 00:00:57,760
presenting it

25
00:00:54,879 --> 00:00:59,680
chronologically and according to the

26
00:00:57,760 --> 00:01:04,239
versions i will present it

27
00:00:59,680 --> 00:01:08,400
chronologically from um the point of

28
00:01:04,239 --> 00:01:10,840
my view so uh we will start with

29
00:01:08,400 --> 00:01:12,479
going over how domino was found and

30
00:01:10,840 --> 00:01:14,640
discovered

31
00:01:12,479 --> 00:01:16,320
then we will take a look at how it was

32
00:01:14,640 --> 00:01:19,200
installed on devices

33
00:01:16,320 --> 00:01:20,880
and what are the components of domino

34
00:01:19,200 --> 00:01:24,080
and these three questions

35
00:01:20,880 --> 00:01:26,960
are the questions that every

36
00:01:24,080 --> 00:01:27,439
malware researcher has to ask at some

37
00:01:26,960 --> 00:01:31,119
point

38
00:01:27,439 --> 00:01:33,360
so whatever kind of malware you are

39
00:01:31,119 --> 00:01:34,720
looking into whether it's windows

40
00:01:33,360 --> 00:01:37,920
android something else

41
00:01:34,720 --> 00:01:40,640
you have to find out um

42
00:01:37,920 --> 00:01:42,960
you have to first have a lead and find

43
00:01:40,640 --> 00:01:45,680
out how

44
00:01:42,960 --> 00:01:46,880
it got installed on the devices and then

45
00:01:45,680 --> 00:01:48,720
what is it doing

46
00:01:46,880 --> 00:01:50,000
what are the components what are the

47
00:01:48,720 --> 00:01:53,039
different parts

48
00:01:50,000 --> 00:01:55,840
of that malware so let's start first

49
00:01:53,040 --> 00:01:57,680
how it all started so it all started

50
00:01:55,840 --> 00:02:01,360
with a malwarebytes post

51
00:01:57,680 --> 00:02:02,159
post on uh x helper there was a blog

52
00:02:01,360 --> 00:02:05,759
post

53
00:02:02,159 --> 00:02:09,280
detailing an adware app that

54
00:02:05,759 --> 00:02:12,080
appeared on devices and it appeared to

55
00:02:09,280 --> 00:02:13,840
be unremovable from the devices

56
00:02:12,080 --> 00:02:15,200
so it was speculated that something

57
00:02:13,840 --> 00:02:18,239
pre-installed

58
00:02:15,200 --> 00:02:20,839
is responsible for this app or

59
00:02:18,239 --> 00:02:22,080
that the app itself is in some way

60
00:02:20,840 --> 00:02:24,640
pre-installed

61
00:02:22,080 --> 00:02:26,640
then there were two follow-up blogs one

62
00:02:24,640 --> 00:02:28,399
from

63
00:02:26,640 --> 00:02:29,760
kaspersky and one again from

64
00:02:28,400 --> 00:02:33,599
malwarebytes

65
00:02:29,760 --> 00:02:36,640
and um this these blog posts

66
00:02:33,599 --> 00:02:38,640
seemed to point to triada above the

67
00:02:36,640 --> 00:02:39,679
malwarebytes blog post which mentions

68
00:02:38,640 --> 00:02:41,359
that

69
00:02:39,680 --> 00:02:43,440
somehow google play is involved in

70
00:02:41,360 --> 00:02:47,280
process but based on the

71
00:02:43,440 --> 00:02:51,599
blog post description it looks like

72
00:02:47,280 --> 00:02:54,080
this is the triada vector which used to

73
00:02:51,599 --> 00:02:55,200
inject into google play process in order

74
00:02:54,080 --> 00:02:56,800
to install apps

75
00:02:55,200 --> 00:02:58,720
and this is consistent with what is

76
00:02:56,800 --> 00:03:00,319
happening with xhelper and then

77
00:02:58,720 --> 00:03:01,280
kaspersky confirmed that there is a

78
00:03:00,319 --> 00:03:03,599
connection between

79
00:03:01,280 --> 00:03:05,440
three other routing trojans and

80
00:03:03,599 --> 00:03:09,200
ex-helper

81
00:03:05,440 --> 00:03:12,720
but this is not all there is more

82
00:03:09,200 --> 00:03:16,799
so um when i took a look

83
00:03:12,720 --> 00:03:18,959
at the devices that have x helper on it

84
00:03:16,800 --> 00:03:21,120
i also took a look at the system images

85
00:03:18,959 --> 00:03:23,519
for these devices

86
00:03:21,120 --> 00:03:25,920
and the system images for these devices

87
00:03:23,519 --> 00:03:28,480
i had

88
00:03:25,920 --> 00:03:29,440
a different kind of malware as well so

89
00:03:28,480 --> 00:03:32,879
um

90
00:03:29,440 --> 00:03:35,359
i looked into the binaries and

91
00:03:32,879 --> 00:03:37,280
the whole system image and they found

92
00:03:35,360 --> 00:03:39,519
that there are additional binaries

93
00:03:37,280 --> 00:03:41,200
on the system that have privileged

94
00:03:39,519 --> 00:03:45,120
access

95
00:03:41,200 --> 00:03:45,760
they there were also modifications done

96
00:03:45,120 --> 00:03:48,319
for the

97
00:03:45,760 --> 00:03:48,959
aosp android open source project browser

98
00:03:48,319 --> 00:03:51,200
app

99
00:03:48,959 --> 00:03:52,879
and the settings app as well and there

100
00:03:51,200 --> 00:03:54,319
were some modifications in the android

101
00:03:52,879 --> 00:03:57,840
framework and they all

102
00:03:54,319 --> 00:03:59,280
worked together to um download other

103
00:03:57,840 --> 00:04:02,720
apps and also do

104
00:03:59,280 --> 00:04:05,120
outfront so let's take a look

105
00:04:02,720 --> 00:04:06,000
at these modifications and these

106
00:04:05,120 --> 00:04:07,840
components

107
00:04:06,000 --> 00:04:09,680
but the first thing we have to look at

108
00:04:07,840 --> 00:04:12,239
is the installer package

109
00:04:09,680 --> 00:04:13,280
this will let us know how domino was

110
00:04:12,239 --> 00:04:15,439
installed

111
00:04:13,280 --> 00:04:16,798
we were fortunate enough to find the

112
00:04:15,439 --> 00:04:19,918
whole source code

113
00:04:16,798 --> 00:04:22,239
zipped in a in an archive and

114
00:04:19,918 --> 00:04:23,919
that source code contained the binaries

115
00:04:22,240 --> 00:04:26,160
it also contained

116
00:04:23,919 --> 00:04:28,320
the actual source code in java for some

117
00:04:26,160 --> 00:04:29,440
of the modifications and it also

118
00:04:28,320 --> 00:04:30,800
contained a

119
00:04:29,440 --> 00:04:33,440
readme file and some additional

120
00:04:30,800 --> 00:04:36,960
information so this is the whole

121
00:04:33,440 --> 00:04:37,520
directory listing of the source code

122
00:04:36,960 --> 00:04:40,239
package

123
00:04:37,520 --> 00:04:41,520
of the zip file and you can see a bunch

124
00:04:40,240 --> 00:04:44,800
of

125
00:04:41,520 --> 00:04:47,680
different files that make up this

126
00:04:44,800 --> 00:04:49,120
zip archive first is one with the custom

127
00:04:47,680 --> 00:04:52,320
system properties

128
00:04:49,120 --> 00:04:54,479
so domino was controlled with a set of

129
00:04:52,320 --> 00:04:57,360
system properties that were specific

130
00:04:54,479 --> 00:04:59,440
to domino you can see that there are

131
00:04:57,360 --> 00:05:01,919
also sc linux policies

132
00:04:59,440 --> 00:05:04,320
um we will talk about them later on

133
00:05:01,919 --> 00:05:07,680
there is a list of files to modify

134
00:05:04,320 --> 00:05:10,000
or add so the file list that it takes

135
00:05:07,680 --> 00:05:14,720
there is basically a roadmap on how you

136
00:05:10,000 --> 00:05:18,320
install domino on an android device

137
00:05:14,720 --> 00:05:20,080
there are also um source code files that

138
00:05:18,320 --> 00:05:22,240
show the changes in framework so you

139
00:05:20,080 --> 00:05:24,080
have something like resolver activity

140
00:05:22,240 --> 00:05:26,800
and package managed service

141
00:05:24,080 --> 00:05:28,719
we'll talk about these changes later on

142
00:05:26,800 --> 00:05:29,280
you have also changes to browser as i

143
00:05:28,720 --> 00:05:31,840
said

144
00:05:29,280 --> 00:05:32,719
you have the readme file which is really

145
00:05:31,840 --> 00:05:34,560
useful

146
00:05:32,720 --> 00:05:36,639
and you have the binaries that i

147
00:05:34,560 --> 00:05:39,360
mentioned i will be using the name

148
00:05:36,639 --> 00:05:40,240
service and demon for this bind for

149
00:05:39,360 --> 00:05:42,400
these binaries

150
00:05:40,240 --> 00:05:43,360
they are not really named service or

151
00:05:42,400 --> 00:05:45,758
demon

152
00:05:43,360 --> 00:05:48,560
this is the name that the malware author

153
00:05:45,759 --> 00:05:51,360
is using inside the binaries

154
00:05:48,560 --> 00:05:52,960
and the names of actual binaries are

155
00:05:51,360 --> 00:05:56,000
different depending on the version

156
00:05:52,960 --> 00:05:56,400
so in this source code package you can

157
00:05:56,000 --> 00:06:00,080
see

158
00:05:56,400 --> 00:06:02,638
something like hdfsk or rbn

159
00:06:00,080 --> 00:06:04,080
but they will depend on the android

160
00:06:02,639 --> 00:06:07,280
version or the

161
00:06:04,080 --> 00:06:09,758
device that has domino

162
00:06:07,280 --> 00:06:11,679
um so the readme file uh as i said

163
00:06:09,759 --> 00:06:14,479
contains some useful information

164
00:06:11,680 --> 00:06:15,759
it is written in mandarin chinese and

165
00:06:14,479 --> 00:06:19,120
when you translate it

166
00:06:15,759 --> 00:06:21,199
it it translates into please integrate

167
00:06:19,120 --> 00:06:22,160
according to the cont comment keyword

168
00:06:21,199 --> 00:06:24,639
domino

169
00:06:22,160 --> 00:06:26,400
file list takes there is a list of files

170
00:06:24,639 --> 00:06:29,360
that need to be integrated

171
00:06:26,400 --> 00:06:31,359
and the read phone state permission is

172
00:06:29,360 --> 00:06:33,919
needed by the browser

173
00:06:31,360 --> 00:06:34,400
um so please ask your company to handle

174
00:06:33,919 --> 00:06:36,000
it

175
00:06:34,400 --> 00:06:37,840
what they mean by please ask your

176
00:06:36,000 --> 00:06:40,479
company to handle it

177
00:06:37,840 --> 00:06:43,119
it just means that this permission has

178
00:06:40,479 --> 00:06:46,240
to be pre-granted to the browser

179
00:06:43,120 --> 00:06:48,000
app so the oem has the ability to

180
00:06:46,240 --> 00:06:52,160
pre-grant some of the permissions to

181
00:06:48,000 --> 00:06:56,720
some of the apps so that the user is not

182
00:06:52,160 --> 00:06:58,800
asked to for example give the microphone

183
00:06:56,720 --> 00:06:59,440
permission to the phone app because it's

184
00:06:58,800 --> 00:07:02,639
an

185
00:06:59,440 --> 00:07:04,560
obvious office permission that will be

186
00:07:02,639 --> 00:07:07,919
needed in order to

187
00:07:04,560 --> 00:07:08,639
use the phone app so let's take a look

188
00:07:07,919 --> 00:07:11,758
how the

189
00:07:08,639 --> 00:07:14,960
keywords are used in order to

190
00:07:11,759 --> 00:07:16,880
uh integrate the code to your platform

191
00:07:14,960 --> 00:07:18,719
you can see that there there are these

192
00:07:16,880 --> 00:07:20,400
comments in xml

193
00:07:18,720 --> 00:07:22,319
and there are similar comments in java

194
00:07:20,400 --> 00:07:24,400
files and similar comments

195
00:07:22,319 --> 00:07:26,319
uh used throughout the source code

196
00:07:24,400 --> 00:07:29,679
package so you have something like

197
00:07:26,319 --> 00:07:32,479
add s and add e s

198
00:07:29,680 --> 00:07:33,840
stands for start and e stands for end

199
00:07:32,479 --> 00:07:36,639
and

200
00:07:33,840 --> 00:07:37,359
all of them are as you've seen in the

201
00:07:36,639 --> 00:07:40,560
readme

202
00:07:37,360 --> 00:07:41,840
file keyword with domino which means

203
00:07:40,560 --> 00:07:44,720
that

204
00:07:41,840 --> 00:07:46,159
if you just grab for domino you will

205
00:07:44,720 --> 00:07:48,240
find all the changes

206
00:07:46,160 --> 00:07:49,599
so for example this these are the

207
00:07:48,240 --> 00:07:51,919
changes that are needed

208
00:07:49,599 --> 00:07:52,960
in the androidmanifest.xml for the

209
00:07:51,919 --> 00:07:56,000
browser

210
00:07:52,960 --> 00:07:57,840
and you can see that there are

211
00:07:56,000 --> 00:07:59,360
different permissions added one of them

212
00:07:57,840 --> 00:08:01,359
is the read phone state

213
00:07:59,360 --> 00:08:02,800
mentioned in the readme file and there's

214
00:08:01,360 --> 00:08:04,960
a bunch of others

215
00:08:02,800 --> 00:08:06,800
as well that are only used by domino

216
00:08:04,960 --> 00:08:08,400
that's why they have to be added to the

217
00:08:06,800 --> 00:08:10,639
browser

218
00:08:08,400 --> 00:08:12,000
um okay let's take a look at binaries

219
00:08:10,639 --> 00:08:13,759
then so as i mentioned

220
00:08:12,000 --> 00:08:15,360
there are two binaries one is called

221
00:08:13,759 --> 00:08:17,440
demon which is

222
00:08:15,360 --> 00:08:18,639
slightly misspelled by the authors and

223
00:08:17,440 --> 00:08:22,160
the other one is called

224
00:08:18,639 --> 00:08:23,759
service and they have two different

225
00:08:22,160 --> 00:08:25,840
functions

226
00:08:23,759 --> 00:08:28,479
so the demon binary creates the

227
00:08:25,840 --> 00:08:29,679
databases that will be used as a kind of

228
00:08:28,479 --> 00:08:32,718
configuration

229
00:08:29,680 --> 00:08:33,919
for both the other binary and some other

230
00:08:32,719 --> 00:08:36,479
parts

231
00:08:33,919 --> 00:08:37,519
and you can see a couple of tables here

232
00:08:36,479 --> 00:08:40,800
so you have

233
00:08:37,519 --> 00:08:44,240
something like urls that will be

234
00:08:40,799 --> 00:08:47,519
saved and used you have text messages

235
00:08:44,240 --> 00:08:49,600
um zsms for example you have some

236
00:08:47,519 --> 00:08:52,720
package names

237
00:08:49,600 --> 00:08:55,120
and stuff like that so just based on the

238
00:08:52,720 --> 00:08:56,800
tables and the contents of the tables

239
00:08:55,120 --> 00:08:59,680
you can see that there will be

240
00:08:56,800 --> 00:09:01,199
some clicking component because you have

241
00:08:59,680 --> 00:09:02,000
something like click url and you have

242
00:09:01,200 --> 00:09:05,360
something like

243
00:09:02,000 --> 00:09:07,600
imp url so it's either an adware or

244
00:09:05,360 --> 00:09:08,399
or a click fraud or at least a displace

245
00:09:07,600 --> 00:09:11,440
ads

246
00:09:08,399 --> 00:09:12,640
in some way um this binary also makes

247
00:09:11,440 --> 00:09:16,240
http connection

248
00:09:12,640 --> 00:09:18,240
connections to um specific uri patterns

249
00:09:16,240 --> 00:09:20,000
uh you can see that they all start with

250
00:09:18,240 --> 00:09:22,720
past web api

251
00:09:20,000 --> 00:09:24,000
and there is some kind of a slasher

252
00:09:22,720 --> 00:09:27,600
service then

253
00:09:24,000 --> 00:09:29,440
and uh different urls that are used to

254
00:09:27,600 --> 00:09:32,560
download different things

255
00:09:29,440 --> 00:09:33,760
interestingly the same binary adds fake

256
00:09:32,560 --> 00:09:37,439
text messages

257
00:09:33,760 --> 00:09:40,640
into the sms table so

258
00:09:37,440 --> 00:09:43,040
it locates the the

259
00:09:40,640 --> 00:09:44,480
database that holds all text messages on

260
00:09:43,040 --> 00:09:48,640
an android phone

261
00:09:44,480 --> 00:09:51,200
and then creates new text messages

262
00:09:48,640 --> 00:09:53,040
these text messages are can be either

263
00:09:51,200 --> 00:09:54,560
added to an existing thread so for

264
00:09:53,040 --> 00:09:57,839
example if

265
00:09:54,560 --> 00:09:59,439
the text message is coming is supposedly

266
00:09:57,839 --> 00:09:59,920
coming from a number that you already

267
00:09:59,440 --> 00:10:03,040
have

268
00:09:59,920 --> 00:10:04,560
in your text messaging app then you can

269
00:10:03,040 --> 00:10:06,800
add

270
00:10:04,560 --> 00:10:07,760
add it to that thread and if it's from a

271
00:10:06,800 --> 00:10:10,240
new number

272
00:10:07,760 --> 00:10:10,800
uh you will have it in a new thread so

273
00:10:10,240 --> 00:10:14,560
it's

274
00:10:10,800 --> 00:10:15,359
fairly complex it uh it's not a simple

275
00:10:14,560 --> 00:10:18,959
code

276
00:10:15,360 --> 00:10:22,079
i don't really know why they are adding

277
00:10:18,959 --> 00:10:27,040
fake text messages based on

278
00:10:22,079 --> 00:10:30,839
the whole domino um it's

279
00:10:27,040 --> 00:10:35,199
it may be used to uh

280
00:10:30,839 --> 00:10:37,440
to um do something ad related

281
00:10:35,200 --> 00:10:39,279
because the whole domino is actually

282
00:10:37,440 --> 00:10:41,360
about ads and

283
00:10:39,279 --> 00:10:43,680
as you've seen clicking and all that so

284
00:10:41,360 --> 00:10:45,600
maybe the text messages are something ad

285
00:10:43,680 --> 00:10:48,000
related

286
00:10:45,600 --> 00:10:48,959
the other one the other binary the

287
00:10:48,000 --> 00:10:52,320
service one

288
00:10:48,959 --> 00:10:54,479
uh is used to install apps

289
00:10:52,320 --> 00:10:56,399
and you can see that there is a pm

290
00:10:54,480 --> 00:11:00,560
install command being called

291
00:10:56,399 --> 00:11:02,959
on an apk file that is on the sd card

292
00:11:00,560 --> 00:11:04,399
this apk file is downloaded by the

293
00:11:02,959 --> 00:11:07,119
browser

294
00:11:04,399 --> 00:11:08,640
this also is a way of hiding the network

295
00:11:07,120 --> 00:11:10,800
traffic right because you expect the

296
00:11:08,640 --> 00:11:13,120
browser to be downloading files

297
00:11:10,800 --> 00:11:15,920
so they are using browser to do just

298
00:11:13,120 --> 00:11:18,480
that download the apk file

299
00:11:15,920 --> 00:11:19,040
and it also activates applications so

300
00:11:18,480 --> 00:11:22,160
whenever

301
00:11:19,040 --> 00:11:23,599
the app is installed on android it won't

302
00:11:22,160 --> 00:11:26,880
be activated

303
00:11:23,600 --> 00:11:29,519
and by that i mean that the user has to

304
00:11:26,880 --> 00:11:32,240
click on the app in order to activate it

305
00:11:29,519 --> 00:11:35,360
and this binary takes care of that it

306
00:11:32,240 --> 00:11:38,560
starts the activity that you define

307
00:11:35,360 --> 00:11:41,440
or the cnc defines and it will start up

308
00:11:38,560 --> 00:11:44,079
the application without user interaction

309
00:11:41,440 --> 00:11:44,880
that's why it's needed here so you have

310
00:11:44,079 --> 00:11:47,040
two binaries

311
00:11:44,880 --> 00:11:48,399
one is communicates with the cnc

312
00:11:47,040 --> 00:11:50,719
downloads configuration and

313
00:11:48,399 --> 00:11:52,480
does this fake text messages and the

314
00:11:50,720 --> 00:11:54,240
other one is mostly about

315
00:11:52,480 --> 00:11:56,399
installing apps activating apps and

316
00:11:54,240 --> 00:11:59,680
making sure that the apps are running

317
00:11:56,399 --> 00:12:01,839
and this is what most probably is

318
00:11:59,680 --> 00:12:04,959
downloading x helper as i said

319
00:12:01,839 --> 00:12:06,800
at the beginning there is a big

320
00:12:04,959 --> 00:12:08,839
correlation between the devices that

321
00:12:06,800 --> 00:12:10,240
have domino and the devices that have

322
00:12:08,839 --> 00:12:13,040
x-helper

323
00:12:10,240 --> 00:12:15,279
so most likely this is one of the um

324
00:12:13,040 --> 00:12:17,199
install vectors

325
00:12:15,279 --> 00:12:18,959
and the other thing that they had to do

326
00:12:17,200 --> 00:12:22,000
is the binaries by themselves

327
00:12:18,959 --> 00:12:24,399
cannot really do much unless

328
00:12:22,000 --> 00:12:26,800
they have a specific s linux context

329
00:12:24,399 --> 00:12:29,519
which is responsible for permissions

330
00:12:26,800 --> 00:12:30,800
so you can see that the binary that

331
00:12:29,519 --> 00:12:33,920
installs apps

332
00:12:30,800 --> 00:12:34,399
the service one is running as shell as a

333
00:12:33,920 --> 00:12:37,360
shell

334
00:12:34,399 --> 00:12:38,000
user which means that the installs are

335
00:12:37,360 --> 00:12:39,760
handled

336
00:12:38,000 --> 00:12:42,000
the same way they would be handled if

337
00:12:39,760 --> 00:12:44,399
they came from adb

338
00:12:42,000 --> 00:12:46,800
and that means that the android os

339
00:12:44,399 --> 00:12:49,680
doesn't differentiate between an

340
00:12:46,800 --> 00:12:52,240
install coming from the service binary

341
00:12:49,680 --> 00:12:55,680
and the install coming from

342
00:12:52,240 --> 00:12:58,240
the adb so it's it's

343
00:12:55,680 --> 00:13:00,719
the same experience let's say and if you

344
00:12:58,240 --> 00:13:02,720
take a look at apps that are installed

345
00:13:00,720 --> 00:13:06,160
they will look like they were installed

346
00:13:02,720 --> 00:13:09,839
by the user from adb

347
00:13:06,160 --> 00:13:11,680
and the other one uh the other binary is

348
00:13:09,839 --> 00:13:14,000
running as radio which also has

349
00:13:11,680 --> 00:13:15,920
elevated privileges and as you can see

350
00:13:14,000 --> 00:13:19,440
they both have access to

351
00:13:15,920 --> 00:13:21,199
um the network and they both have access

352
00:13:19,440 --> 00:13:23,920
to the sd card

353
00:13:21,200 --> 00:13:24,880
which is needed to write that apk file

354
00:13:23,920 --> 00:13:28,000
and

355
00:13:24,880 --> 00:13:30,639
read that apk file

356
00:13:28,000 --> 00:13:32,079
there is also a system property that

357
00:13:30,639 --> 00:13:34,079
controls domino

358
00:13:32,079 --> 00:13:35,359
and the system uh property that i

359
00:13:34,079 --> 00:13:38,399
mentioned at the beginning

360
00:13:35,360 --> 00:13:41,040
is feature browser extent

361
00:13:38,399 --> 00:13:42,480
probably stands for extension and if

362
00:13:41,040 --> 00:13:45,360
it's set to true

363
00:13:42,480 --> 00:13:46,000
uh the binaries will start if it's not

364
00:13:45,360 --> 00:13:48,720
set to

365
00:13:46,000 --> 00:13:50,000
true that binaries will kind of uh be

366
00:13:48,720 --> 00:13:53,760
turned off

367
00:13:50,000 --> 00:13:56,480
uh so this is basically the switch

368
00:13:53,760 --> 00:13:57,680
that controls whether domino is running

369
00:13:56,480 --> 00:14:00,880
on a specific build

370
00:13:57,680 --> 00:14:02,239
or um or is not running on a specific

371
00:14:00,880 --> 00:14:05,199
build

372
00:14:02,240 --> 00:14:06,800
but binaries are just part of the story

373
00:14:05,199 --> 00:14:08,319
there are also browser and settings

374
00:14:06,800 --> 00:14:11,519
modifications

375
00:14:08,320 --> 00:14:13,920
so um browser and settings are apps

376
00:14:11,519 --> 00:14:14,639
that are part of the android open source

377
00:14:13,920 --> 00:14:18,000
project

378
00:14:14,639 --> 00:14:21,199
and come with your phone but

379
00:14:18,000 --> 00:14:22,800
they obviously can be modified

380
00:14:21,199 --> 00:14:26,399
in the process of creating the system

381
00:14:22,800 --> 00:14:29,279
image and additional code can be added

382
00:14:26,399 --> 00:14:31,360
to them so uh i already said that

383
00:14:29,279 --> 00:14:35,680
browser is using to download the

384
00:14:31,360 --> 00:14:39,839
apk files um and

385
00:14:35,680 --> 00:14:41,040
it downloads any url that is supplied by

386
00:14:39,839 --> 00:14:44,079
the cnc

387
00:14:41,040 --> 00:14:45,839
so for example it can download the apk

388
00:14:44,079 --> 00:14:48,638
file but it can download also

389
00:14:45,839 --> 00:14:50,240
anything else there are several checks

390
00:14:48,639 --> 00:14:52,720
done

391
00:14:50,240 --> 00:14:54,000
so there is one that checks the browser

392
00:14:52,720 --> 00:14:56,240
feature ext

393
00:14:54,000 --> 00:14:57,519
as i said this is the huge switch that

394
00:14:56,240 --> 00:15:00,800
controls whether

395
00:14:57,519 --> 00:15:01,760
um domino is running or not so if it's

396
00:15:00,800 --> 00:15:04,719
set to false

397
00:15:01,760 --> 00:15:05,360
this modification also won't run then it

398
00:15:04,720 --> 00:15:08,000
checks the

399
00:15:05,360 --> 00:15:10,720
silent period this is the boolean value

400
00:15:08,000 --> 00:15:13,279
this is supplied by the cnc

401
00:15:10,720 --> 00:15:14,639
so if it's in a silent period it won't

402
00:15:13,279 --> 00:15:17,519
download anything

403
00:15:14,639 --> 00:15:19,360
uh it also has the czech black method uh

404
00:15:17,519 --> 00:15:20,639
this is again a boolean value supplied

405
00:15:19,360 --> 00:15:22,240
by the cnc

406
00:15:20,639 --> 00:15:23,680
uh i don't know what's the difference

407
00:15:22,240 --> 00:15:26,079
between these two maybe there's some

408
00:15:23,680 --> 00:15:27,439
logical difference on the cnc side

409
00:15:26,079 --> 00:15:29,359
and it checks whether the phone is

410
00:15:27,440 --> 00:15:32,000
connected to wi-fi so it will

411
00:15:29,360 --> 00:15:32,000
it will only

412
00:15:39,279 --> 00:15:46,480
it is download um this also

413
00:15:43,199 --> 00:15:48,719
makes it stay slightly more silent

414
00:15:46,480 --> 00:15:50,320
um because you're less likely to see

415
00:15:48,720 --> 00:15:54,000
network usage on wi-fi

416
00:15:50,320 --> 00:15:57,120
than you are to see the network usage

417
00:15:54,000 --> 00:16:00,480
on your data plan um

418
00:15:57,120 --> 00:16:02,399
and there is an affiliated search so um

419
00:16:00,480 --> 00:16:03,600
what happens is whenever you search for

420
00:16:02,399 --> 00:16:05,519
something

421
00:16:03,600 --> 00:16:07,360
the browser will change your search

422
00:16:05,519 --> 00:16:10,800
engine to a different one

423
00:16:07,360 --> 00:16:13,360
that a different one

424
00:16:10,800 --> 00:16:14,000
has additional parameters added to the

425
00:16:13,360 --> 00:16:17,680
search

426
00:16:14,000 --> 00:16:19,600
the m c and k parameters i wasn't able

427
00:16:17,680 --> 00:16:22,638
to find the

428
00:16:19,600 --> 00:16:25,519
search engine that they are using but

429
00:16:22,639 --> 00:16:25,839
based on the m and c and k parameters

430
00:16:25,519 --> 00:16:30,399
that

431
00:16:25,839 --> 00:16:33,759
are kind of hard coded or come from cnc

432
00:16:30,399 --> 00:16:34,560
uh it may suggest that they are using

433
00:16:33,759 --> 00:16:37,519
some kind of an

434
00:16:34,560 --> 00:16:40,479
affiliated search instead of the search

435
00:16:37,519 --> 00:16:42,079
engine chosen by the user

436
00:16:40,480 --> 00:16:44,560
and it's also displaying ads when the

437
00:16:42,079 --> 00:16:47,599
screen is off

438
00:16:44,560 --> 00:16:50,719
so it checks whether the

439
00:16:47,600 --> 00:16:54,160
screen is turned on and

440
00:16:50,720 --> 00:16:56,000
then it checks that couple more times

441
00:16:54,160 --> 00:16:58,160
and when the screen is really off and

442
00:16:56,000 --> 00:17:02,560
it's sure that the screen is off

443
00:16:58,160 --> 00:17:05,678
it will send an intent to a view

444
00:17:02,560 --> 00:17:08,599
a website um and this is an

445
00:17:05,679 --> 00:17:09,760
add website and it will save the refer

446
00:17:08,599 --> 00:17:13,039
url

447
00:17:09,760 --> 00:17:13,760
parameter value um and when it saves

448
00:17:13,039 --> 00:17:19,839
that refer

449
00:17:13,760 --> 00:17:19,839
url parameter value it um

450
00:17:20,319 --> 00:17:24,399
we'll use it later on and i will show

451
00:17:22,400 --> 00:17:27,919
you how this is being used later on

452
00:17:24,400 --> 00:17:30,320
but the idea here is to display the ad

453
00:17:27,919 --> 00:17:31,760
when the screen is off so pretend that

454
00:17:30,320 --> 00:17:34,240
users sold the ad

455
00:17:31,760 --> 00:17:36,160
and was redirected to some other url and

456
00:17:34,240 --> 00:17:39,600
that url had the

457
00:17:36,160 --> 00:17:42,960
referrer value

458
00:17:39,600 --> 00:17:45,360
that will then be used

459
00:17:42,960 --> 00:17:47,120
so this brings us to framework

460
00:17:45,360 --> 00:17:51,439
notifications the browser does

461
00:17:47,120 --> 00:17:54,479
kind of all the um all the

462
00:17:51,440 --> 00:17:57,840
um online activities that

463
00:17:54,480 --> 00:18:00,160
are needed and this makes

464
00:17:57,840 --> 00:18:01,520
sense because the user is less likely to

465
00:18:00,160 --> 00:18:04,559
see that

466
00:18:01,520 --> 00:18:06,240
browser is doing something nefarious

467
00:18:04,559 --> 00:18:06,720
when it connects to the internet right

468
00:18:06,240 --> 00:18:08,240
the

469
00:18:06,720 --> 00:18:10,000
whole point of the browser is that it

470
00:18:08,240 --> 00:18:11,840
connects to the internet so the

471
00:18:10,000 --> 00:18:16,799
framework modifications are

472
00:18:11,840 --> 00:18:18,879
um the um install referrer value

473
00:18:16,799 --> 00:18:19,918
it is being intercepted in a really

474
00:18:18,880 --> 00:18:22,640
interesting way

475
00:18:19,919 --> 00:18:23,280
so the framework modification actually

476
00:18:22,640 --> 00:18:25,520
looks for

477
00:18:23,280 --> 00:18:27,280
all the broadcasts and it looks at the

478
00:18:25,520 --> 00:18:30,559
broadcast ended locket

479
00:18:27,280 --> 00:18:31,200
locked method this method is called for

480
00:18:30,559 --> 00:18:34,960
every

481
00:18:31,200 --> 00:18:36,720
intent so it it intercepts every intent

482
00:18:34,960 --> 00:18:38,400
but it checks whether the intent is

483
00:18:36,720 --> 00:18:39,039
install referrer and the install

484
00:18:38,400 --> 00:18:42,080
referrer

485
00:18:39,039 --> 00:18:44,960
is an intent that is sent when the app

486
00:18:42,080 --> 00:18:48,080
is being installed from google play

487
00:18:44,960 --> 00:18:50,960
and it contains the referrer that

488
00:18:48,080 --> 00:18:51,840
referred the install so it's it's part

489
00:18:50,960 --> 00:18:54,240
of the

490
00:18:51,840 --> 00:18:55,760
ad process when you see an ad for a

491
00:18:54,240 --> 00:18:58,000
particular app

492
00:18:55,760 --> 00:18:59,840
and you go and install it then it will

493
00:18:58,000 --> 00:19:02,960
send the installer affair saying oh the

494
00:18:59,840 --> 00:19:06,399
user came from this particular ad

495
00:19:02,960 --> 00:19:08,240
and the ad was displayed when the screen

496
00:19:06,400 --> 00:19:10,080
was off so the user obviously didn't see

497
00:19:08,240 --> 00:19:13,120
it but the referral value was

498
00:19:10,080 --> 00:19:16,799
saved so when the user installs the app

499
00:19:13,120 --> 00:19:20,399
and the installer fair broadcast is sent

500
00:19:16,799 --> 00:19:23,679
it will then remember the referrer that

501
00:19:20,400 --> 00:19:25,200
was saved when the ad was displayed on

502
00:19:23,679 --> 00:19:28,000
the lock screen and used that

503
00:19:25,200 --> 00:19:29,919
referrer instead of saying that the user

504
00:19:28,000 --> 00:19:30,400
simply navigated to the app and install

505
00:19:29,919 --> 00:19:33,919
it

506
00:19:30,400 --> 00:19:34,640
so it will misattribute the installation

507
00:19:33,919 --> 00:19:38,000
to the ad

508
00:19:34,640 --> 00:19:39,679
that was shown when the screen was off

509
00:19:38,000 --> 00:19:42,480
so the whole thing comes together in

510
00:19:39,679 --> 00:19:43,280
like four major steps first is that the

511
00:19:42,480 --> 00:19:45,120
settings app

512
00:19:43,280 --> 00:19:47,200
downloads a list of out to display when

513
00:19:45,120 --> 00:19:49,600
the screen is off as i said

514
00:19:47,200 --> 00:19:50,799
then it visits the ads when the screen

515
00:19:49,600 --> 00:19:54,559
is really off

516
00:19:50,799 --> 00:19:56,320
um it saves the referrer value for later

517
00:19:54,559 --> 00:19:57,918
then when the user goes to google play

518
00:19:56,320 --> 00:19:58,799
to install the app the referrer is

519
00:19:57,919 --> 00:20:00,640
overwritten

520
00:19:58,799 --> 00:20:01,840
so instead of saying that the user

521
00:20:00,640 --> 00:20:05,600
navigated to the app

522
00:20:01,840 --> 00:20:07,760
and using the real referral value it

523
00:20:05,600 --> 00:20:09,039
will use the refer value from the add

524
00:20:07,760 --> 00:20:11,679
that was visible

525
00:20:09,039 --> 00:20:13,679
when the screen was off and the

526
00:20:11,679 --> 00:20:17,360
broadcast is intercepted and

527
00:20:13,679 --> 00:20:20,640
substituted yet so this is the whole

528
00:20:17,360 --> 00:20:24,240
point of these modifications

529
00:20:20,640 --> 00:20:26,159
it also in another part of the code it

530
00:20:24,240 --> 00:20:27,360
also makes sure that the correct browser

531
00:20:26,159 --> 00:20:30,880
is opening a link

532
00:20:27,360 --> 00:20:31,280
so whenever you have an option to open a

533
00:20:30,880 --> 00:20:34,880
link

534
00:20:31,280 --> 00:20:35,200
using different apps you have the option

535
00:20:34,880 --> 00:20:38,080
to

536
00:20:35,200 --> 00:20:38,480
uh um choose the activity that you want

537
00:20:38,080 --> 00:20:40,158
so

538
00:20:38,480 --> 00:20:42,080
you will get a dialogue similar to the

539
00:20:40,159 --> 00:20:44,000
one on the left hand side where

540
00:20:42,080 --> 00:20:45,678
um it says do you want to open it with

541
00:20:44,000 --> 00:20:47,280
youtube or do you want to open it with

542
00:20:45,679 --> 00:20:48,880
chrome or do you want to open it with

543
00:20:47,280 --> 00:20:50,799
something else

544
00:20:48,880 --> 00:20:53,039
and this is done by choose best activity

545
00:20:50,799 --> 00:20:53,918
method and this choose best activity

546
00:20:53,039 --> 00:20:57,120
method

547
00:20:53,919 --> 00:20:58,880
um basically checks um

548
00:20:57,120 --> 00:21:00,559
whether the link can be open using

549
00:20:58,880 --> 00:21:02,559
multiple apps if

550
00:21:00,559 --> 00:21:04,080
there is only one app it will use that

551
00:21:02,559 --> 00:21:05,120
app because there is no choice for the

552
00:21:04,080 --> 00:21:08,879
user

553
00:21:05,120 --> 00:21:11,360
if the user choose um the app

554
00:21:08,880 --> 00:21:13,520
in the past and said this is the app

555
00:21:11,360 --> 00:21:15,600
that i want to

556
00:21:13,520 --> 00:21:17,120
use to always open these kinds of links

557
00:21:15,600 --> 00:21:18,879
it will also open that up

558
00:21:17,120 --> 00:21:20,399
but if there is more than one and the

559
00:21:18,880 --> 00:21:23,520
user didn't make the

560
00:21:20,400 --> 00:21:25,520
choice it will display this dialog so

561
00:21:23,520 --> 00:21:28,080
what the modification does instead

562
00:21:25,520 --> 00:21:29,760
is it first checks the system property

563
00:21:28,080 --> 00:21:31,760
that i mentioned but if this

564
00:21:29,760 --> 00:21:32,879
system property is set to true it will

565
00:21:31,760 --> 00:21:34,640
check whether the

566
00:21:32,880 --> 00:21:36,640
modified android browser with the

567
00:21:34,640 --> 00:21:38,880
modifications that i mentioned before

568
00:21:36,640 --> 00:21:40,640
is able to open that link and if that

569
00:21:38,880 --> 00:21:42,559
browser is able to open that link

570
00:21:40,640 --> 00:21:45,200
it will automatically navigate to that

571
00:21:42,559 --> 00:21:46,000
browser it won't present the user with a

572
00:21:45,200 --> 00:21:48,320
choice

573
00:21:46,000 --> 00:21:50,400
or anything like that it will just open

574
00:21:48,320 --> 00:21:51,840
it in the browser so as long as the

575
00:21:50,400 --> 00:21:54,000
modified browser is

576
00:21:51,840 --> 00:21:56,559
able to open that link it will be used

577
00:21:54,000 --> 00:21:59,200
to open that link

578
00:21:56,559 --> 00:22:00,000
so let's sum up um everything that uh

579
00:21:59,200 --> 00:22:02,799
we've learned

580
00:22:00,000 --> 00:22:04,559
uh the first thing is that domino is a

581
00:22:02,799 --> 00:22:07,200
pre-installed hostel downloader

582
00:22:04,559 --> 00:22:07,918
which displays ads and changes the ad

583
00:22:07,200 --> 00:22:10,880
referrers

584
00:22:07,919 --> 00:22:12,320
this is uh what i was talking about uh a

585
00:22:10,880 --> 00:22:14,480
second ago

586
00:22:12,320 --> 00:22:15,520
it is most likely used to distribute x

587
00:22:14,480 --> 00:22:17,440
helper uh

588
00:22:15,520 --> 00:22:18,960
it may be used as one of the methods to

589
00:22:17,440 --> 00:22:22,000
distribute x helper

590
00:22:18,960 --> 00:22:24,000
along with chiada it may have

591
00:22:22,000 --> 00:22:26,240
connections to the chiana malware family

592
00:22:24,000 --> 00:22:27,840
it's not clear to me whether triad and

593
00:22:26,240 --> 00:22:30,240
and domino are

594
00:22:27,840 --> 00:22:32,320
separate distribution channels or maybe

595
00:22:30,240 --> 00:22:33,280
they are controlled by the same group

596
00:22:32,320 --> 00:22:36,720
behind the scenes

597
00:22:33,280 --> 00:22:40,639
and um are distributing x helper

598
00:22:36,720 --> 00:22:42,640
um using two different channels

599
00:22:40,640 --> 00:22:43,919
so it also comes as a source code

600
00:22:42,640 --> 00:22:45,919
package that we've seen

601
00:22:43,919 --> 00:22:48,640
the source code package has instructions

602
00:22:45,919 --> 00:22:50,640
or on how to combine domino with

603
00:22:48,640 --> 00:22:52,480
your existing android open source

604
00:22:50,640 --> 00:22:55,200
project code

605
00:22:52,480 --> 00:22:56,720
and how to include it on uh the system

606
00:22:55,200 --> 00:22:58,799
image

607
00:22:56,720 --> 00:22:59,919
it makes sure that the slingx context is

608
00:22:58,799 --> 00:23:02,400
right that you

609
00:22:59,919 --> 00:23:04,240
added the required modifications that

610
00:23:02,400 --> 00:23:05,520
the system property is there and it's

611
00:23:04,240 --> 00:23:07,840
set to true

612
00:23:05,520 --> 00:23:09,679
um one thing that i didn't mention is

613
00:23:07,840 --> 00:23:11,199
the domino chart targets devices with

614
00:23:09,679 --> 00:23:14,640
android 7 and below

615
00:23:11,200 --> 00:23:15,360
we haven't seen anything domino related

616
00:23:14,640 --> 00:23:19,120
on android

617
00:23:15,360 --> 00:23:22,158
and 8 and later versions of android

618
00:23:19,120 --> 00:23:24,239
and they might have changed the whole

619
00:23:22,159 --> 00:23:26,720
tactic they might have changed the whole

620
00:23:24,240 --> 00:23:29,600
code but we haven't seen anything

621
00:23:26,720 --> 00:23:30,720
similar to domino or triada on newer

622
00:23:29,600 --> 00:23:34,639
android devices

623
00:23:30,720 --> 00:23:38,000
which is really encouraging

624
00:23:34,640 --> 00:23:40,240
so this is all again um

625
00:23:38,000 --> 00:23:42,159
thank you all for listening and thank

626
00:23:40,240 --> 00:23:44,159
you to the researchers that

627
00:23:42,159 --> 00:23:45,279
published the malwarebytes and kaspersky

628
00:23:44,159 --> 00:23:49,679
blog posts

629
00:23:45,279 --> 00:23:53,039
um and uh yeah

630
00:23:49,679 --> 00:23:53,039
that is all thank you

