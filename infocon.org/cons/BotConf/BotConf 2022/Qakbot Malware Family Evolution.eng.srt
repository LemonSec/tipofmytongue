1
00:00:01,040 --> 00:00:02,800
wait wait

2
00:00:02,800 --> 00:00:05,600
so let's go with the last talk

3
00:00:05,600 --> 00:00:08,399
you have the floor

4
00:00:09,440 --> 00:00:12,400
introduce yourselves okay

5
00:00:12,400 --> 00:00:14,320
so

6
00:00:14,320 --> 00:00:16,480
okay in order to start we are going to

7
00:00:16,480 --> 00:00:19,359
talk about keyboard code evolution

8
00:00:19,359 --> 00:00:23,519
um but first of all who are we

9
00:00:23,519 --> 00:00:25,279
i'm carlos rubio

10
00:00:25,279 --> 00:00:28,000
and he's marco picado

11
00:00:28,000 --> 00:00:29,199
we work

12
00:00:29,199 --> 00:00:32,800
as malware researchers at thread ray

13
00:00:32,800 --> 00:00:36,160
and in in this talk we want to

14
00:00:36,160 --> 00:00:38,559
to explain

15
00:00:38,559 --> 00:00:40,570
the the keyboard marvel evolution

16
00:00:40,570 --> 00:00:41,760
[Music]

17
00:00:41,760 --> 00:00:44,000
for the last nine years we have been

18
00:00:44,000 --> 00:00:46,559
analyzing about four hundred thousand

19
00:00:46,559 --> 00:00:48,559
samples

20
00:00:48,559 --> 00:00:50,079
and there's a lot

21
00:00:50,079 --> 00:00:51,920
and in order to be able to do this

22
00:00:51,920 --> 00:00:52,960
because

23
00:00:52,960 --> 00:00:54,800
in a manual way it's very difficult we

24
00:00:54,800 --> 00:00:58,879
have been using a code reuse technology

25
00:00:58,879 --> 00:01:00,239
and

26
00:01:00,239 --> 00:01:03,120
in order to cluster all these samples

27
00:01:03,120 --> 00:01:03,920
and

28
00:01:03,920 --> 00:01:06,159
to find the relevant functions and the

29
00:01:06,159 --> 00:01:07,600
difference between

30
00:01:07,600 --> 00:01:09,600
between the different versions so in

31
00:01:09,600 --> 00:01:11,760
order to focus only on the most relevant

32
00:01:11,760 --> 00:01:12,640
ones

33
00:01:12,640 --> 00:01:14,080
and

34
00:01:14,080 --> 00:01:16,320
and to make it easier our life no at the

35
00:01:16,320 --> 00:01:17,280
end

36
00:01:17,280 --> 00:01:18,159
so

37
00:01:18,159 --> 00:01:19,439
in this talk

38
00:01:19,439 --> 00:01:21,280
all of you

39
00:01:21,280 --> 00:01:24,479
are going to to understand

40
00:01:24,479 --> 00:01:27,520
the evolution of of cubot or that is our

41
00:01:27,520 --> 00:01:28,640
goal

42
00:01:28,640 --> 00:01:31,040
so let's go

43
00:01:31,040 --> 00:01:32,560
first of all

44
00:01:32,560 --> 00:01:35,840
we will do a brief introduction to cubot

45
00:01:35,840 --> 00:01:38,400
then we will go to the technical

46
00:01:38,400 --> 00:01:41,280
technical part then to the code

47
00:01:41,280 --> 00:01:42,799
evolution

48
00:01:42,799 --> 00:01:45,360
and finally using some the metadata that

49
00:01:45,360 --> 00:01:46,799
we have been extracting from the

50
00:01:46,799 --> 00:01:48,159
different

51
00:01:48,159 --> 00:01:50,880
samples we were going to give some

52
00:01:50,880 --> 00:01:53,759
insights so let's go with cubot

53
00:01:53,759 --> 00:01:55,680
what is cubot

54
00:01:55,680 --> 00:01:57,759
is historically known as a banking

55
00:01:57,759 --> 00:02:00,799
trojan as a credential harvester has

56
00:02:00,799 --> 00:02:02,320
been active

57
00:02:02,320 --> 00:02:07,200
since 2007 has a modular framework

58
00:02:07,200 --> 00:02:10,080
is currently distributed by different

59
00:02:10,080 --> 00:02:12,400
threat actors or from different botnets

60
00:02:12,400 --> 00:02:14,319
at the end and is in continuous

61
00:02:14,319 --> 00:02:15,840
development

62
00:02:15,840 --> 00:02:18,239
in order to show you some

63
00:02:18,239 --> 00:02:20,640
some versions from cubot

64
00:02:20,640 --> 00:02:22,560
the different colors represent the

65
00:02:22,560 --> 00:02:24,400
different major versions

66
00:02:24,400 --> 00:02:26,800
that a keyboard has between the period

67
00:02:26,800 --> 00:02:28,520
of time from

68
00:02:28,520 --> 00:02:32,160
2013 uh until until

69
00:02:32,160 --> 00:02:33,440
our

70
00:02:33,440 --> 00:02:37,200
the current date 2022

71
00:02:37,200 --> 00:02:38,720
and

72
00:02:38,720 --> 00:02:42,160
with this image we want to draw to draw

73
00:02:42,160 --> 00:02:44,640
how to show you the complexity

74
00:02:44,640 --> 00:02:46,800
of analyzing this amount of samples

75
00:02:46,800 --> 00:02:48,959
because there are not a few

76
00:02:48,959 --> 00:02:53,200
and and sometimes between minor versions

77
00:02:53,200 --> 00:02:55,280
there are chains but other times there

78
00:02:55,280 --> 00:02:57,599
are not any change and

79
00:02:57,599 --> 00:02:59,680
we have to use the proper tools to

80
00:02:59,680 --> 00:03:01,920
differ differentiate

81
00:03:01,920 --> 00:03:04,400
where there are the interesting change

82
00:03:04,400 --> 00:03:05,840
or whether or not

83
00:03:05,840 --> 00:03:07,120
so

84
00:03:07,120 --> 00:03:09,040
now markel is going to start with the

85
00:03:09,040 --> 00:03:11,519
technical part

86
00:03:11,519 --> 00:03:13,040
all right

87
00:03:13,040 --> 00:03:14,640
so basically

88
00:03:14,640 --> 00:03:17,120
what is cubot but now from the technical

89
00:03:17,120 --> 00:03:19,519
point of view

90
00:03:19,519 --> 00:03:21,120
basically it's composed

91
00:03:21,120 --> 00:03:24,319
by two elements the stagger and the main

92
00:03:24,319 --> 00:03:27,200
dll which also has capabilities of

93
00:03:27,200 --> 00:03:29,840
cooking and other stuff

94
00:03:29,840 --> 00:03:32,400
the main dll is embedded into the stereo

95
00:03:32,400 --> 00:03:33,840
resources

96
00:03:33,840 --> 00:03:37,120
it's also encrypted using rc4 algorithm

97
00:03:37,120 --> 00:03:38,879
and compress in some cases there are

98
00:03:38,879 --> 00:03:41,519
sources using real estate

99
00:03:41,519 --> 00:03:42,879
algorithm

100
00:03:42,879 --> 00:03:45,280
the stagger goal basically are to do the

101
00:03:45,280 --> 00:03:47,760
installation the persistence and to

102
00:03:47,760 --> 00:03:50,080
inject the main dll into running

103
00:03:50,080 --> 00:03:52,560
processes

104
00:03:52,640 --> 00:03:54,560
the main dll also has

105
00:03:54,560 --> 00:03:57,599
some resources which are encrypted as

106
00:03:57,599 --> 00:03:59,760
well and compressed

107
00:03:59,760 --> 00:04:01,519
basically are common and controlled

108
00:04:01,519 --> 00:04:02,480
config

109
00:04:02,480 --> 00:04:04,480
the script for malware updates and

110
00:04:04,480 --> 00:04:07,040
anticipation web injects

111
00:04:07,040 --> 00:04:09,280
the main goal of the

112
00:04:09,280 --> 00:04:11,760
of the main dll is to the network

113
00:04:11,760 --> 00:04:13,840
traffic interception extreme credentials

114
00:04:13,840 --> 00:04:15,439
lateral movements wrong commands

115
00:04:15,439 --> 00:04:17,600
specifically and handle the receiving

116
00:04:17,600 --> 00:04:21,120
commands from the command and control

117
00:04:21,120 --> 00:04:23,440
the cubot code evolution

118
00:04:23,440 --> 00:04:26,960
first a disclaimer this data is based on

119
00:04:26,960 --> 00:04:28,639
our telemetry maybe there are some

120
00:04:28,639 --> 00:04:31,360
versions or changes that we are missing

121
00:04:31,360 --> 00:04:33,280
we are not covering all changes in this

122
00:04:33,280 --> 00:04:35,360
talk due to the time we have we are

123
00:04:35,360 --> 00:04:37,199
going to release a wet paper on a serial

124
00:04:37,199 --> 00:04:40,240
vlog where you can see in more detail

125
00:04:40,240 --> 00:04:42,560
all changes we have analyzed

126
00:04:42,560 --> 00:04:44,240
and in this talk what we are going to

127
00:04:44,240 --> 00:04:47,360
see is the transformation of cubot

128
00:04:47,360 --> 00:04:51,440
into a more advanced and modular malware

129
00:04:51,440 --> 00:04:52,800
so basically

130
00:04:52,800 --> 00:04:55,759
the first question we have analyzed 201

131
00:04:55,759 --> 00:04:58,160
has two components has explained which

132
00:04:58,160 --> 00:05:01,759
is the stiger and the main dll

133
00:05:01,759 --> 00:05:04,240
later in 2017

134
00:05:04,240 --> 00:05:06,639
they split the functionality of the

135
00:05:06,639 --> 00:05:07,919
main dll

136
00:05:07,919 --> 00:05:09,840
in another dll so they move the part of

137
00:05:09,840 --> 00:05:12,080
the hoop and it injects

138
00:05:12,080 --> 00:05:12,960
to

139
00:05:12,960 --> 00:05:14,639
another dll which is

140
00:05:14,639 --> 00:05:18,240
compiled for different architectures

141
00:05:18,240 --> 00:05:21,120
later in january of 2020

142
00:05:21,120 --> 00:05:22,840
this hook dll

143
00:05:22,840 --> 00:05:24,560
disappears

144
00:05:24,560 --> 00:05:27,600
finally in november 2020

145
00:05:27,600 --> 00:05:29,919
the functionality of the stiger and the

146
00:05:29,919 --> 00:05:32,320
main dll is joined in only one binary

147
00:05:32,320 --> 00:05:33,520
which is

148
00:05:33,520 --> 00:05:36,240
only a dll

149
00:05:36,240 --> 00:05:39,199
so the first patient uh basically this

150
00:05:39,199 --> 00:05:41,840
is the structure so in the resources

151
00:05:41,840 --> 00:05:43,840
it has the main dll and the main dll in

152
00:05:43,840 --> 00:05:45,840
the resources have the web index the

153
00:05:45,840 --> 00:05:47,120
script for update and the command

154
00:05:47,120 --> 00:05:49,520
control config

155
00:05:49,520 --> 00:05:52,080
this is how the sticker works so

156
00:05:52,080 --> 00:05:53,280
basically

157
00:05:53,280 --> 00:05:54,560
at the beginning it does an

158
00:05:54,560 --> 00:05:57,039
initialization detects virtual machine

159
00:05:57,039 --> 00:05:58,560
and check if the cubot is already

160
00:05:58,560 --> 00:06:01,280
installed if not it enumerates all the

161
00:06:01,280 --> 00:06:03,039
users in the machine

162
00:06:03,039 --> 00:06:05,680
and tries to install create persistent

163
00:06:05,680 --> 00:06:08,479
and execute digital sample once it is

164
00:06:08,479 --> 00:06:09,840
installed

165
00:06:09,840 --> 00:06:12,319
it install itself a service it creates

166
00:06:12,319 --> 00:06:14,160
the injection thread

167
00:06:14,160 --> 00:06:16,319
and it keeps you waiting for messages

168
00:06:16,319 --> 00:06:18,319
from the from this thread

169
00:06:18,319 --> 00:06:21,039
so that thread what it does is to get

170
00:06:21,039 --> 00:06:23,440
the main dll from the resource

171
00:06:23,440 --> 00:06:25,600
list running processes and tries to

172
00:06:25,600 --> 00:06:29,280
inject in those processes

173
00:06:29,280 --> 00:06:33,360
it waits to receive an a signal from the

174
00:06:33,360 --> 00:06:35,280
inject processes so once it restarts

175
00:06:35,280 --> 00:06:37,120
that signal it means that the injection

176
00:06:37,120 --> 00:06:40,000
was successful and if it doesn't get

177
00:06:40,000 --> 00:06:43,039
that signal it creates a child process

178
00:06:43,039 --> 00:06:45,440
usually is a explorer

179
00:06:45,440 --> 00:06:47,199
and basically try to inject in this

180
00:06:47,199 --> 00:06:49,840
child process

181
00:06:50,400 --> 00:06:52,319
this is the part of the main dealer so

182
00:06:52,319 --> 00:06:54,160
this is the part that it's injecting the

183
00:06:54,160 --> 00:06:55,599
target process

184
00:06:55,599 --> 00:06:57,000
so at the beginning it does some

185
00:06:57,000 --> 00:06:59,280
initializations it suspends the trusted

186
00:06:59,280 --> 00:07:00,800
rapport gp

187
00:07:00,800 --> 00:07:02,479
threat which is a cyber security

188
00:07:02,479 --> 00:07:05,199
solution for an abm

189
00:07:05,199 --> 00:07:06,319
check

190
00:07:06,319 --> 00:07:08,960
protector executable so you can see the

191
00:07:08,960 --> 00:07:11,520
list of protect executive table for

192
00:07:11,520 --> 00:07:14,400
for this version you can find

193
00:07:14,400 --> 00:07:17,199
all adbg so if it's injecting only dbg

194
00:07:17,199 --> 00:07:20,240
for example it does nothing but if not

195
00:07:20,240 --> 00:07:22,880
it installs the rest of the hooks

196
00:07:22,880 --> 00:07:23,919
and

197
00:07:23,919 --> 00:07:25,120
does the

198
00:07:25,120 --> 00:07:26,960
it checks also if it's injecting a

199
00:07:26,960 --> 00:07:29,360
target process a tiger process is one of

200
00:07:29,360 --> 00:07:31,440
those in in the list oh look firefox

201
00:07:31,440 --> 00:07:34,479
opera skype and if it's inject in one of

202
00:07:34,479 --> 00:07:36,720
those processes it creates the main

203
00:07:36,720 --> 00:07:37,919
thread

204
00:07:37,919 --> 00:07:39,840
the main thread it looks complicated but

205
00:07:39,840 --> 00:07:42,160
basically what it does is to handle the

206
00:07:42,160 --> 00:07:44,080
communication with the command and

207
00:07:44,080 --> 00:07:45,280
control

208
00:07:45,280 --> 00:07:47,120
it also has

209
00:07:47,120 --> 00:07:48,160
some

210
00:07:48,160 --> 00:07:50,400
events or commands that are run

211
00:07:50,400 --> 00:07:51,840
politically

212
00:07:51,840 --> 00:07:54,240
you can find them in in the table which

213
00:07:54,240 --> 00:07:56,160
is command and control main gate ip

214
00:07:56,160 --> 00:07:58,400
nebus scan

215
00:07:58,400 --> 00:08:00,400
so basically uh

216
00:08:00,400 --> 00:08:02,720
command and control main or cc main is

217
00:08:02,720 --> 00:08:04,560
the one responsible to fetch new

218
00:08:04,560 --> 00:08:06,000
commands from from the command and

219
00:08:06,000 --> 00:08:08,400
control

220
00:08:09,120 --> 00:08:12,240
in this new version

221
00:08:13,840 --> 00:08:16,319
the the main difference is that the the

222
00:08:16,319 --> 00:08:18,960
main dll instead to to do once it's

223
00:08:18,960 --> 00:08:21,199
inject instead to do the the part of the

224
00:08:21,199 --> 00:08:23,440
hooks and handle the communication now

225
00:08:23,440 --> 00:08:25,440
it has an execution mode

226
00:08:25,440 --> 00:08:27,440
so depending on the execution mode it

227
00:08:27,440 --> 00:08:30,080
only does the part of the

228
00:08:30,080 --> 00:08:33,200
the communication or the hooks

229
00:08:33,200 --> 00:08:35,200
also in this trigger in green you can

230
00:08:35,200 --> 00:08:37,919
you can see the new changes

231
00:08:37,919 --> 00:08:41,200
it they add a new check in the process

232
00:08:41,200 --> 00:08:43,039
integrity level which

233
00:08:43,039 --> 00:08:44,720
when it's not installed it checks the

234
00:08:44,720 --> 00:08:47,040
process integrity level and if it's low

235
00:08:47,040 --> 00:08:50,240
it tries to run itself in a higher

236
00:08:50,240 --> 00:08:52,399
integrity level

237
00:08:52,399 --> 00:08:54,640
if the integrity level is higher than

238
00:08:54,640 --> 00:08:55,600
low

239
00:08:55,600 --> 00:08:57,200
it does the part of the installation

240
00:08:57,200 --> 00:08:59,360
that i have explained before

241
00:08:59,360 --> 00:09:01,440
once it is installed it checks if it's

242
00:09:01,440 --> 00:09:03,760
system and if it sees them it copies

243
00:09:03,760 --> 00:09:05,600
itself to a temporary folder and runs

244
00:09:05,600 --> 00:09:07,920
from there if not it calls a new

245
00:09:07,920 --> 00:09:10,480
function which is called internally

246
00:09:10,480 --> 00:09:13,519
rooney intrust executable which

247
00:09:13,519 --> 00:09:15,920
basically does is to create a child

248
00:09:15,920 --> 00:09:17,600
process

249
00:09:17,600 --> 00:09:19,360
usually a process that looks like it

250
00:09:19,360 --> 00:09:20,720
like explorer

251
00:09:20,720 --> 00:09:22,399
and injects itself in that process and

252
00:09:22,399 --> 00:09:25,040
continue the execution

253
00:09:25,040 --> 00:09:27,440
so this is the part that is done in that

254
00:09:27,440 --> 00:09:29,040
child process

255
00:09:29,040 --> 00:09:30,560
which basically is the same that in the

256
00:09:30,560 --> 00:09:32,160
previous version

257
00:09:32,160 --> 00:09:34,800
it creates the the injection thread and

258
00:09:34,800 --> 00:09:37,519
now it loads the mi dll using the

259
00:09:37,519 --> 00:09:39,760
command control mode in that process so

260
00:09:39,760 --> 00:09:42,240
the explorer is the one that responsible

261
00:09:42,240 --> 00:09:44,000
to handle the communication with the

262
00:09:44,000 --> 00:09:45,360
command and control

263
00:09:45,360 --> 00:09:47,200
for the injector thread

264
00:09:47,200 --> 00:09:49,200
they

265
00:09:49,200 --> 00:09:51,680
as a new layer or technique uh

266
00:09:51,680 --> 00:09:53,519
anti-forensic technique which basically

267
00:09:53,519 --> 00:09:55,360
is that the main dll

268
00:09:55,360 --> 00:09:57,519
they encrypt in memory and only when

269
00:09:57,519 --> 00:09:59,680
they inject this

270
00:09:59,680 --> 00:10:04,560
dll they decrypt before do the injection

271
00:10:04,560 --> 00:10:07,279
so here you can see how now they inject

272
00:10:07,279 --> 00:10:09,760
into exploring and front explorer

273
00:10:09,760 --> 00:10:12,399
they continue the security

274
00:10:12,399 --> 00:10:14,480
basically this is what has changed in

275
00:10:14,480 --> 00:10:16,320
the main dll in this version so at the

276
00:10:16,320 --> 00:10:18,560
beginning what they do is

277
00:10:18,560 --> 00:10:21,120
a check in in the execution mode so if

278
00:10:21,120 --> 00:10:24,800
the hue is set the hook mode

279
00:10:24,800 --> 00:10:26,560
it only does the part of the hooks if

280
00:10:26,560 --> 00:10:27,440
not

281
00:10:27,440 --> 00:10:29,440
or is the command control

282
00:10:29,440 --> 00:10:32,480
mode set they only do the part of the

283
00:10:32,480 --> 00:10:34,959
main thread

284
00:10:35,040 --> 00:10:37,279
so here you can see this thing that i

285
00:10:37,279 --> 00:10:39,760
have explained but in the code so in the

286
00:10:39,760 --> 00:10:42,800
new version you see that field i have

287
00:10:42,800 --> 00:10:45,040
called executor mode if it's set only

288
00:10:45,040 --> 00:10:48,959
does the part of or creates the the

289
00:10:48,959 --> 00:10:50,959
thread that handles the communication

290
00:10:50,959 --> 00:10:53,040
and if it's not set it does the part of

291
00:10:53,040 --> 00:10:54,240
the hooks

292
00:10:54,240 --> 00:10:56,640
and in the previous version once it does

293
00:10:56,640 --> 00:10:59,200
the hooks it checks if it's inject on a

294
00:10:59,200 --> 00:11:01,680
target process and also

295
00:11:01,680 --> 00:11:04,079
does the creates the threat for for the

296
00:11:04,079 --> 00:11:06,719
communication

297
00:11:07,440 --> 00:11:09,240
in

298
00:11:09,240 --> 00:11:12,240
300.257 version which was released in

299
00:11:12,240 --> 00:11:15,279
2016 they add a new

300
00:11:15,279 --> 00:11:18,240
resource to the main dll which is the

301
00:11:18,240 --> 00:11:20,160
the command and control list

302
00:11:20,160 --> 00:11:23,200
which usually are some of

303
00:11:23,200 --> 00:11:25,839
the infected machines that are used as

304
00:11:25,839 --> 00:11:27,440
proxy

305
00:11:27,440 --> 00:11:29,680
and this also maybe explains that they

306
00:11:29,680 --> 00:11:32,880
now have a new command which is uh

307
00:11:32,880 --> 00:11:35,920
the external ip check which is probably

308
00:11:35,920 --> 00:11:37,120
used

309
00:11:37,120 --> 00:11:40,399
in order to get the the external ipi of

310
00:11:40,399 --> 00:11:42,480
the infect machine in order to update

311
00:11:42,480 --> 00:11:46,480
that common control list in the future

312
00:11:46,959 --> 00:11:49,519
also this function has changed which is

313
00:11:49,519 --> 00:11:51,920
the responsible to install the bot in on

314
00:11:51,920 --> 00:11:55,040
the system so in this new version it has

315
00:11:55,040 --> 00:11:56,480
a new argument

316
00:11:56,480 --> 00:11:58,480
and if this that argument is set it

317
00:11:58,480 --> 00:12:00,480
called the function cubot installment

318
00:12:00,480 --> 00:12:03,279
system and if not it calls the function

319
00:12:03,279 --> 00:12:06,560
cubot install main uh both the

320
00:12:06,560 --> 00:12:08,560
function do the same but the cubot

321
00:12:08,560 --> 00:12:11,200
installment system does not any check on

322
00:12:11,200 --> 00:12:13,360
the system before to decide to install

323
00:12:13,360 --> 00:12:16,079
or not the bot

324
00:12:16,639 --> 00:12:18,399
in addition i have

325
00:12:18,399 --> 00:12:20,639
i have explained that they have this new

326
00:12:20,639 --> 00:12:23,040
resource with command control so what

327
00:12:23,040 --> 00:12:24,880
had changed in the function that is

328
00:12:24,880 --> 00:12:26,399
responsible to get the the command and

329
00:12:26,399 --> 00:12:29,519
control is now in the new version

330
00:12:29,519 --> 00:12:30,320
they

331
00:12:30,320 --> 00:12:32,959
get the these commands from from the

332
00:12:32,959 --> 00:12:34,399
resource as you can see there in the

333
00:12:34,399 --> 00:12:36,240
function address data but in the

334
00:12:36,240 --> 00:12:38,079
previous version they use a dji

335
00:12:38,079 --> 00:12:39,360
algorithm

336
00:12:39,360 --> 00:12:41,760
in this new version if this new part

337
00:12:41,760 --> 00:12:42,639
fails

338
00:12:42,639 --> 00:12:44,560
to get the the command control from the

339
00:12:44,560 --> 00:12:47,279
resource they still have the dji

340
00:12:47,279 --> 00:12:49,760
algorithm

341
00:12:51,360 --> 00:12:52,959
in this new version in terms of

342
00:12:52,959 --> 00:12:54,880
structure it has changed

343
00:12:54,880 --> 00:12:57,600
a lot because the the main dll

344
00:12:57,600 --> 00:13:00,880
is split in in two components one

345
00:13:00,880 --> 00:13:02,800
responsible for the hooks and the one

346
00:13:02,800 --> 00:13:05,120
responsible of the communication in

347
00:13:05,120 --> 00:13:06,880
addition they also

348
00:13:06,880 --> 00:13:08,480
add support

349
00:13:08,480 --> 00:13:09,360
of

350
00:13:09,360 --> 00:13:11,360
internal plugins that can be fetched

351
00:13:11,360 --> 00:13:13,279
from the command and control

352
00:13:13,279 --> 00:13:14,160
so

353
00:13:14,160 --> 00:13:16,000
in this image you can see in the

354
00:13:16,000 --> 00:13:18,800
structure how it changed

355
00:13:18,800 --> 00:13:20,480
so now you have

356
00:13:20,480 --> 00:13:21,920
the sticker has

357
00:13:21,920 --> 00:13:25,120
two new uh resources

358
00:13:25,120 --> 00:13:27,760
which are the main dll and and the hook

359
00:13:27,760 --> 00:13:30,399
dll in compiled to different

360
00:13:30,399 --> 00:13:32,959
architectures

361
00:13:32,959 --> 00:13:35,600
uh in terms of the stagger what had

362
00:13:35,600 --> 00:13:37,680
changed is that now in the explorer only

363
00:13:37,680 --> 00:13:39,920
slowed the main dll

364
00:13:39,920 --> 00:13:42,240
and in in the ejection thread before to

365
00:13:42,240 --> 00:13:43,680
do the injection they check the

366
00:13:43,680 --> 00:13:45,760
architecture or the target activator in

367
00:13:45,760 --> 00:13:50,560
order to select which dll to inject

368
00:13:51,040 --> 00:13:53,440
and also in the main dll they

369
00:13:53,440 --> 00:13:56,560
initialize all things related to to the

370
00:13:56,560 --> 00:13:58,639
internal plugins that they now can

371
00:13:58,639 --> 00:14:00,639
handle

372
00:14:00,639 --> 00:14:03,760
for the hook dll only does this which is

373
00:14:03,760 --> 00:14:06,880
the relatively to install the hooks on

374
00:14:06,880 --> 00:14:09,040
on the processors

375
00:14:09,040 --> 00:14:11,839
and they asked also in the main dll

376
00:14:11,839 --> 00:14:16,000
these commands which are related or

377
00:14:16,000 --> 00:14:18,560
they use to to handle or to manage the

378
00:14:18,560 --> 00:14:20,800
different plugins so install plugin

379
00:14:20,800 --> 00:14:23,360
enable disable plugin uninstall plugin

380
00:14:23,360 --> 00:14:25,920
and reset

381
00:14:25,920 --> 00:14:28,959
in addition they also

382
00:14:28,959 --> 00:14:32,720
do a change in in the configuration so

383
00:14:32,720 --> 00:14:34,560
if in the previous version if you

384
00:14:34,560 --> 00:14:37,519
decrypt uh the configuration at the end

385
00:14:37,519 --> 00:14:39,760
you have like

386
00:14:39,760 --> 00:14:42,399
some field names for for the for the

387
00:14:42,399 --> 00:14:44,639
config like command control server port

388
00:14:44,639 --> 00:14:46,959
command control server pass however in

389
00:14:46,959 --> 00:14:49,199
this new version they have changed those

390
00:14:49,199 --> 00:14:52,399
names to numbers in order to

391
00:14:52,399 --> 00:14:53,519
make

392
00:14:53,519 --> 00:14:55,680
more difficult for the researcher to

393
00:14:55,680 --> 00:14:59,440
guess what they mean

394
00:14:59,440 --> 00:15:01,920
in january 2020

395
00:15:01,920 --> 00:15:07,120
the part the dll for hooking disappears

396
00:15:07,360 --> 00:15:09,360
and in the stagger they have

397
00:15:09,360 --> 00:15:11,040
an additional check which is an

398
00:15:11,040 --> 00:15:12,720
antivirus check

399
00:15:12,720 --> 00:15:16,320
so if the antibiotics is not detected it

400
00:15:16,320 --> 00:15:18,320
calls the function rooming trust is a

401
00:15:18,320 --> 00:15:21,040
good table which basically creates the

402
00:15:21,040 --> 00:15:22,800
child process and injects in that

403
00:15:22,800 --> 00:15:25,440
process but if the antibiotics is is

404
00:15:25,440 --> 00:15:27,120
detected

405
00:15:27,120 --> 00:15:29,199
they create the main threat in the same

406
00:15:29,199 --> 00:15:31,680
process

407
00:15:33,440 --> 00:15:34,880
in addition

408
00:15:34,880 --> 00:15:37,279
i have said that the the hook dll has

409
00:15:37,279 --> 00:15:38,480
disappeared

410
00:15:38,480 --> 00:15:41,199
and this is because now uh that dll is

411
00:15:41,199 --> 00:15:44,079
handled as as a plugin

412
00:15:44,079 --> 00:15:46,160
so in the previous version this function

413
00:15:46,160 --> 00:15:48,160
is responsible to update the web injects

414
00:15:48,160 --> 00:15:50,959
so in the in the previous versions once

415
00:15:50,959 --> 00:15:52,639
the the web inject

416
00:15:52,639 --> 00:15:53,759
was

417
00:15:53,759 --> 00:15:56,079
update they call the function schedule

418
00:15:56,079 --> 00:15:58,399
reload which basically this function

419
00:15:58,399 --> 00:16:00,800
reloads all cubot

420
00:16:00,800 --> 00:16:03,040
however in this new version

421
00:16:03,040 --> 00:16:05,040
they call a function

422
00:16:05,040 --> 00:16:08,000
called enable plugin and they pass and

423
00:16:08,000 --> 00:16:09,199
crc

424
00:16:09,199 --> 00:16:11,839
32 has

425
00:16:11,839 --> 00:16:13,680
this is because

426
00:16:13,680 --> 00:16:18,480
cubot in order to manage the the plugins

427
00:16:18,480 --> 00:16:23,360
they use a 32 hash of the plugin in

428
00:16:23,360 --> 00:16:25,360
order to manage internally

429
00:16:25,360 --> 00:16:27,839
the storage of the plugin and so on so

430
00:16:27,839 --> 00:16:31,680
basically if you translate this crc32

431
00:16:31,680 --> 00:16:34,320
hash to a string it match with the

432
00:16:34,320 --> 00:16:38,959
plugin under hook which makes sense

433
00:16:39,440 --> 00:16:41,120
finally

434
00:16:41,120 --> 00:16:43,600
this new version released in november

435
00:16:43,600 --> 00:16:46,160
2020

436
00:16:46,160 --> 00:16:48,720
they remove the sticker and this is

437
00:16:48,720 --> 00:16:50,959
because they joined the functionality of

438
00:16:50,959 --> 00:16:52,399
the stigger

439
00:16:52,399 --> 00:16:55,519
into the main dll

440
00:16:55,519 --> 00:16:58,240
so finally the current major version is

441
00:16:58,240 --> 00:17:03,120
403 from the version 401

442
00:17:03,120 --> 00:17:04,799
they have joined the functionality of

443
00:17:04,799 --> 00:17:08,240
the tiger in into the main dll uh so now

444
00:17:08,240 --> 00:17:10,160
this dll is responsible

445
00:17:10,160 --> 00:17:11,520
of doing the persistent and

446
00:17:11,520 --> 00:17:12,640
communication with the command and

447
00:17:12,640 --> 00:17:14,640
control and our previous functionalities

448
00:17:14,640 --> 00:17:17,039
has been moved to plugins such as web

449
00:17:17,039 --> 00:17:21,439
index password router proxy etc

450
00:17:21,439 --> 00:17:23,359
so to summarize

451
00:17:23,359 --> 00:17:24,240
in

452
00:17:24,240 --> 00:17:26,000
we have seen

453
00:17:26,000 --> 00:17:26,710
how

454
00:17:26,710 --> 00:17:28,160
[Music]

455
00:17:28,160 --> 00:17:30,840
cubot has moved to a more

456
00:17:30,840 --> 00:17:33,760
modular malware at the beginning it has

457
00:17:33,760 --> 00:17:35,760
this dll with the

458
00:17:35,760 --> 00:17:37,760
functionality of the command and control

459
00:17:37,760 --> 00:17:40,559
and the hooks later they

460
00:17:40,559 --> 00:17:43,120
set that field in order to do only the

461
00:17:43,120 --> 00:17:45,760
hooks or only the the communication

462
00:17:45,760 --> 00:17:48,320
later they split this functionality into

463
00:17:48,320 --> 00:17:49,679
two dlls

464
00:17:49,679 --> 00:17:52,400
uh in january 2020

465
00:17:52,400 --> 00:17:53,280
they

466
00:17:53,280 --> 00:17:54,000
this

467
00:17:54,000 --> 00:17:56,160
this dll disappears and they start using

468
00:17:56,160 --> 00:17:58,080
plugins

469
00:17:58,080 --> 00:18:00,080
so finally

470
00:18:00,080 --> 00:18:00,960
here

471
00:18:00,960 --> 00:18:03,039
you can see the number of functions per

472
00:18:03,039 --> 00:18:06,080
version and each color belongs to

473
00:18:06,080 --> 00:18:08,720
a different version so you can see how

474
00:18:08,720 --> 00:18:10,880
many functions are shared between the

475
00:18:10,880 --> 00:18:12,320
different versions

476
00:18:12,320 --> 00:18:15,520
and also you can see the the changes

477
00:18:15,520 --> 00:18:16,960
that

478
00:18:16,960 --> 00:18:19,200
we have been explaining here

479
00:18:19,200 --> 00:18:21,360
in addition you can see in yellow that

480
00:18:21,360 --> 00:18:22,640
there are many

481
00:18:22,640 --> 00:18:24,799
many functions and this is because in

482
00:18:24,799 --> 00:18:26,080
this version

483
00:18:26,080 --> 00:18:28,080
they ask code escalation and that's

484
00:18:28,080 --> 00:18:29,919
explained how

485
00:18:29,919 --> 00:18:31,440
why

486
00:18:31,440 --> 00:18:32,720
now you see

487
00:18:32,720 --> 00:18:34,320
that unique

488
00:18:34,320 --> 00:18:36,640
amount of unique function for for that

489
00:18:36,640 --> 00:18:39,039
version

490
00:18:40,640 --> 00:18:41,520
so

491
00:18:41,520 --> 00:18:44,080
we have been extracting a lot of the

492
00:18:44,080 --> 00:18:46,640
metadata from all these samples and we

493
00:18:46,640 --> 00:18:49,039
have obtaining some inside

494
00:18:49,039 --> 00:18:50,160
so

495
00:18:50,160 --> 00:18:52,080
we have been using a

496
00:18:52,080 --> 00:18:54,559
mainly three three parameters that is

497
00:18:54,559 --> 00:18:58,080
the affiliate id as you can see there

498
00:18:58,080 --> 00:19:01,280
is a format the format is the the first

499
00:19:01,280 --> 00:19:04,000
part is a string that is related to the

500
00:19:04,000 --> 00:19:06,640
affiliate and the second part

501
00:19:06,640 --> 00:19:08,960
in our opinion is the is the campaign

502
00:19:08,960 --> 00:19:10,400
because they are

503
00:19:10,400 --> 00:19:12,640
increasing the campaign in some cases

504
00:19:12,640 --> 00:19:13,840
there are not

505
00:19:13,840 --> 00:19:15,919
there are not a campaign number for

506
00:19:15,919 --> 00:19:18,480
example with aa and tr they only

507
00:19:18,480 --> 00:19:21,919
maintain the same name but

508
00:19:21,919 --> 00:19:22,799
but

509
00:19:22,799 --> 00:19:24,720
it's interesting for tracking another

510
00:19:24,720 --> 00:19:26,720
interesting thing is the version the

511
00:19:26,720 --> 00:19:28,400
version number

512
00:19:28,400 --> 00:19:30,799
is the version that has the sample and

513
00:19:30,799 --> 00:19:32,720
the timestamp that is when the sample

514
00:19:32,720 --> 00:19:34,160
was built

515
00:19:34,160 --> 00:19:36,000
using this information we have been

516
00:19:36,000 --> 00:19:37,840
creating different graphs in order to

517
00:19:37,840 --> 00:19:40,080
represent or to obtain some insights for

518
00:19:40,080 --> 00:19:42,559
example in order to know what is the

519
00:19:42,559 --> 00:19:44,080
most prevalent

520
00:19:44,080 --> 00:19:46,080
affiliate

521
00:19:46,080 --> 00:19:48,799
affiliate that is using kubot basically

522
00:19:48,799 --> 00:19:51,440
in our data we have created this bubble

523
00:19:51,440 --> 00:19:52,720
graph and that

524
00:19:52,720 --> 00:19:54,320
in our opinion is very represented

525
00:19:54,320 --> 00:19:55,600
representative

526
00:19:55,600 --> 00:19:59,120
we can see that before 2020 spx and sp

527
00:19:59,120 --> 00:20:00,880
that are very prevalent

528
00:20:00,880 --> 00:20:04,080
then from 2020 and from 2021

529
00:20:04,080 --> 00:20:08,320
again spx sp and appears abc and tr that

530
00:20:08,320 --> 00:20:11,360
are the more relevant there from 2021

531
00:20:11,360 --> 00:20:15,120
from 2022 we have again spx and the new

532
00:20:15,120 --> 00:20:17,520
obama by then clinton appears

533
00:20:17,520 --> 00:20:21,720
they call the president botnet and on

534
00:20:21,720 --> 00:20:26,320
2022 we have a tcr and aaa and the

535
00:20:26,320 --> 00:20:28,960
others that remains the same that the

536
00:20:28,960 --> 00:20:32,080
last campaigns or last years

537
00:20:32,080 --> 00:20:34,880
so this is a general overview and we're

538
00:20:34,880 --> 00:20:37,120
going to pick the most relevant there in

539
00:20:37,120 --> 00:20:38,640
order to

540
00:20:38,640 --> 00:20:40,080
create this

541
00:20:40,080 --> 00:20:42,640
timeline from the activity of the

542
00:20:42,640 --> 00:20:46,480
different groups from 2018 to 2022. for

543
00:20:46,480 --> 00:20:48,720
example we can see here the activity of

544
00:20:48,720 --> 00:20:51,840
the sp affiliate id

545
00:20:51,840 --> 00:20:54,480
but then we see another interesting like

546
00:20:54,480 --> 00:20:56,480
tr and aaa

547
00:20:56,480 --> 00:20:58,640
that uh and one interesting thing is

548
00:20:58,640 --> 00:20:59,919
that

549
00:20:59,919 --> 00:21:03,120
when tr ends the aas starts and there

550
00:21:03,120 --> 00:21:04,960
are some researchers that say that there

551
00:21:04,960 --> 00:21:06,320
are some

552
00:21:06,320 --> 00:21:08,640
some links between them but maybe there

553
00:21:08,640 --> 00:21:11,200
are only related to the spam campaigns

554
00:21:11,200 --> 00:21:15,039
or the ttps in order to deliver delivery

555
00:21:15,039 --> 00:21:16,480
to make the delivery

556
00:21:16,480 --> 00:21:18,400
and we have another interest in there

557
00:21:18,400 --> 00:21:20,640
the obama by then clinton

558
00:21:20,640 --> 00:21:23,120
that they deploy in a very similar way

559
00:21:23,120 --> 00:21:24,880
they are distributed in a very similar

560
00:21:24,880 --> 00:21:26,080
way but

561
00:21:26,080 --> 00:21:28,480
we don't have more information about is

562
00:21:28,480 --> 00:21:30,640
that if they are related at the end or

563
00:21:30,640 --> 00:21:31,760
not

564
00:21:31,760 --> 00:21:33,840
so another interesting thing that we can

565
00:21:33,840 --> 00:21:35,280
extract from this

566
00:21:35,280 --> 00:21:38,400
using the the versions uh the maya and

567
00:21:38,400 --> 00:21:40,640
the minor version the complete version

568
00:21:40,640 --> 00:21:43,840
is that the the when that those

569
00:21:43,840 --> 00:21:46,320
updates in the different affiliates id

570
00:21:46,320 --> 00:21:47,840
are um

571
00:21:47,840 --> 00:21:50,799
are deployed if you you see the the

572
00:21:50,799 --> 00:21:52,960
colors it's very easy to see that they

573
00:21:52,960 --> 00:21:55,039
are deployed at this very very similar

574
00:21:55,039 --> 00:21:56,880
time that means that at the end there

575
00:21:56,880 --> 00:21:59,120
are some kind of automatic or we can

576
00:21:59,120 --> 00:22:00,799
extract from this that there are some

577
00:22:00,799 --> 00:22:04,320
kind of automatic a builder or something

578
00:22:04,320 --> 00:22:05,919
that that

579
00:22:05,919 --> 00:22:07,919
that allows the keyboard botnet to

580
00:22:07,919 --> 00:22:10,799
update itself in a in in a transparent

581
00:22:10,799 --> 00:22:13,679
way for the for the affiliate

582
00:22:13,679 --> 00:22:15,120
and that is very different for the

583
00:22:15,120 --> 00:22:17,200
common malware that we have been seen in

584
00:22:17,200 --> 00:22:18,080
other

585
00:22:18,080 --> 00:22:20,880
in other talks for example talking about

586
00:22:20,880 --> 00:22:22,799
the infostealers that they have to

587
00:22:22,799 --> 00:22:25,840
create an alert and tell to the to their

588
00:22:25,840 --> 00:22:27,919
affiliate that they have to date here

589
00:22:27,919 --> 00:22:29,200
with cubot

590
00:22:29,200 --> 00:22:32,000
we think that they directly update the

591
00:22:32,000 --> 00:22:34,720
votes and that is a transparent process

592
00:22:34,720 --> 00:22:35,919
for the

593
00:22:35,919 --> 00:22:37,280
for the affiliate and another

594
00:22:37,280 --> 00:22:39,280
interesting thing is that not only that

595
00:22:39,280 --> 00:22:42,400
because they update the bot but not only

596
00:22:42,400 --> 00:22:45,039
the control panels sometimes update

597
00:22:45,039 --> 00:22:45,840
a

598
00:22:45,840 --> 00:22:49,120
decrypter in order to avoid

599
00:22:49,120 --> 00:22:51,600
the antibiotics measures

600
00:22:51,600 --> 00:22:53,520
and in order to update for example if

601
00:22:53,520 --> 00:22:54,799
they are going to

602
00:22:54,799 --> 00:22:55,919
to add

603
00:22:55,919 --> 00:22:58,960
some new factor so in conclusion

604
00:22:58,960 --> 00:23:01,360
in this talk we have been seeing how a

605
00:23:01,360 --> 00:23:04,320
cubot has been evolving and has been

606
00:23:04,320 --> 00:23:05,440
changing

607
00:23:05,440 --> 00:23:07,760
a lot for these years

608
00:23:07,760 --> 00:23:11,280
from a banking of an old banker or a

609
00:23:11,280 --> 00:23:14,080
normal banker to a more modular malware

610
00:23:14,080 --> 00:23:16,320
and

611
00:23:16,480 --> 00:23:19,360
from a modular malware we see that these

612
00:23:19,360 --> 00:23:20,960
are very active

613
00:23:20,960 --> 00:23:22,880
is in continuous development

614
00:23:22,880 --> 00:23:25,039
and for that reason we think that is

615
00:23:25,039 --> 00:23:27,200
very important to track and looking at

616
00:23:27,200 --> 00:23:29,360
this timeline is very easy to see that

617
00:23:29,360 --> 00:23:31,600
for example in the following months it's

618
00:23:31,600 --> 00:23:33,280
possible that they are going to release

619
00:23:33,280 --> 00:23:36,640
a a new a new major version

620
00:23:36,640 --> 00:23:38,799
so

621
00:23:40,960 --> 00:23:43,919
i am glad to be here at vodka

622
00:23:43,919 --> 00:23:46,320
and it was a pleasure and

623
00:23:46,320 --> 00:23:48,960
i hope that all of you we hope that all

624
00:23:48,960 --> 00:23:52,400
of you now understand better how

625
00:23:52,400 --> 00:23:54,559
how cubot has been evolving during these

626
00:23:54,559 --> 00:23:56,400
nine years

627
00:23:56,400 --> 00:23:58,799
i hope to see all of you at the next

628
00:23:58,799 --> 00:24:00,880
vodka any questions

629
00:24:00,880 --> 00:24:04,039
thank you

630
00:24:07,960 --> 00:24:09,360
[Applause]

631
00:24:09,360 --> 00:24:13,000
so any questions

632
00:24:19,520 --> 00:24:22,918
come on guys

633
00:24:39,919 --> 00:24:42,480
hi thanks for the presentation

634
00:24:42,480 --> 00:24:44,559
did you find the

635
00:24:44,559 --> 00:24:47,200
steel traces of the dji code on the most

636
00:24:47,200 --> 00:24:49,600
recent versions of keyboard

637
00:24:49,600 --> 00:24:51,520
um

638
00:24:51,520 --> 00:24:53,919
maybe marketing cannot to be honest i

639
00:24:53,919 --> 00:24:55,279
don't check that

640
00:24:55,279 --> 00:24:57,440
but it's true in that version i have

641
00:24:57,440 --> 00:24:58,400
shown

642
00:24:58,400 --> 00:25:01,200
they still have bots

643
00:25:01,200 --> 00:25:03,440
okay

644
00:25:05,760 --> 00:25:06,960
okay

645
00:25:06,960 --> 00:25:09,760
another question

646
00:25:13,679 --> 00:25:14,000
one

647
00:25:14,000 --> 00:25:15,200
[Music]

648
00:25:15,200 --> 00:25:17,360
two

649
00:25:17,360 --> 00:25:21,600
three okay thank you okay thank you

650
00:25:25,360 --> 00:25:27,840
okay

