1
00:00:00,320 --> 00:00:01,920
you have the floor

2
00:00:01,920 --> 00:00:02,879
thank you

3
00:00:02,879 --> 00:00:05,200
so hi i'm daniel this is jeremy we both

4
00:00:05,200 --> 00:00:07,680
work from fort on micro and we're very

5
00:00:07,680 --> 00:00:09,599
glad to be here in real life for this

6
00:00:09,599 --> 00:00:12,080
conference after two years of

7
00:00:12,080 --> 00:00:13,840
pandemic and we'll present you the

8
00:00:13,840 --> 00:00:15,599
result of our investigation that we name

9
00:00:15,599 --> 00:00:17,680
operation gambling puppet

10
00:00:17,680 --> 00:00:19,680
so this is the outline of the talk so we

11
00:00:19,680 --> 00:00:21,600
will see some intentional infection

12
00:00:21,600 --> 00:00:22,640
vectors

13
00:00:22,640 --> 00:00:25,199
malware discussion discussion targeting

14
00:00:25,199 --> 00:00:27,519
infrastructure et cetera et cetera

15
00:00:27,519 --> 00:00:30,480
so it all started with a sample from

16
00:00:30,480 --> 00:00:32,558
belonging to the x-nut malware family so

17
00:00:32,558 --> 00:00:35,200
it targets linux operating system

18
00:00:35,200 --> 00:00:36,880
and we found that the command control

19
00:00:36,880 --> 00:00:39,520
server domain name was familiar to us

20
00:00:39,520 --> 00:00:41,200
and actually it belonged to some

21
00:00:41,200 --> 00:00:43,200
investigation we did two years ago named

22
00:00:43,200 --> 00:00:45,360
operation derby control so this was a

23
00:00:45,360 --> 00:00:47,440
targeted attack so it was interesting to

24
00:00:47,440 --> 00:00:48,239
us

25
00:00:48,239 --> 00:00:50,640
so we we searched a bit more we voted on

26
00:00:50,640 --> 00:00:52,800
that so we found more samples

27
00:00:52,800 --> 00:00:54,879
we found different malware families then

28
00:00:54,879 --> 00:00:56,640
we found out different platforms were

29
00:00:56,640 --> 00:00:58,160
targeted so actually windows on

30
00:00:58,160 --> 00:00:59,920
macintosh

31
00:00:59,920 --> 00:01:01,600
we figure out some of the targets of

32
00:01:01,600 --> 00:01:02,399
this

33
00:01:02,399 --> 00:01:05,280
attack some infection vectors etc etc so

34
00:01:05,280 --> 00:01:07,439
we had a lot of material and we decided

35
00:01:07,439 --> 00:01:09,520
we could do some paper so this talk is

36
00:01:09,520 --> 00:01:12,000
the result of this investigation

37
00:01:12,000 --> 00:01:14,960
so let's discuss the infection vectors

38
00:01:14,960 --> 00:01:16,960
the first one is a chat application that

39
00:01:16,960 --> 00:01:18,960
was offered through a website that you

40
00:01:18,960 --> 00:01:21,119
can see here in the screenshot on the

41
00:01:21,119 --> 00:01:22,080
left

42
00:01:22,080 --> 00:01:23,920
the chat application was called mimi

43
00:01:23,920 --> 00:01:26,080
which actually in chinese means secret

44
00:01:26,080 --> 00:01:28,880
so this chat application was advertised

45
00:01:28,880 --> 00:01:31,520
as being like secured application

46
00:01:31,520 --> 00:01:32,799
and as you can see on the bottom of the

47
00:01:32,799 --> 00:01:33,920
screenshot

48
00:01:33,920 --> 00:01:35,759
it was offered for the windows on mac

49
00:01:35,759 --> 00:01:37,520
platform on the website is written in

50
00:01:37,520 --> 00:01:39,520
chinese

51
00:01:39,520 --> 00:01:41,360
so when we look at the the application

52
00:01:41,360 --> 00:01:44,079
itself we found out it was written

53
00:01:44,079 --> 00:01:46,240
using the electron javascript framework

54
00:01:46,240 --> 00:01:49,040
which is based on the node.js runtime so

55
00:01:49,040 --> 00:01:50,880
this means it can run on different

56
00:01:50,880 --> 00:01:52,960
platforms without changing the code

57
00:01:52,960 --> 00:01:56,960
actually you just need to recompile it

58
00:01:56,960 --> 00:01:58,000
and

59
00:01:58,000 --> 00:01:59,360
sorry

60
00:01:59,360 --> 00:02:00,399
sorry sorry

61
00:02:00,399 --> 00:02:02,399
and then so there is a

62
00:02:02,399 --> 00:02:04,000
one file that references the malicious

63
00:02:04,000 --> 00:02:07,040
payload actually electronman.js file

64
00:02:07,040 --> 00:02:09,199
and so if you can look at the excerpt of

65
00:02:09,199 --> 00:02:11,599
this this code depending on the platform

66
00:02:11,599 --> 00:02:14,480
it will run either the uso private

67
00:02:14,480 --> 00:02:17,680
executable in the devs folder or if it's

68
00:02:17,680 --> 00:02:19,440
darwin which means actually mac os

69
00:02:19,440 --> 00:02:22,239
platform it will run during x64 on the

70
00:02:22,239 --> 00:02:24,400
bottom of the screenshot you can see

71
00:02:24,400 --> 00:02:26,480
the content of the devs folder on

72
00:02:26,480 --> 00:02:27,920
windows platform

73
00:02:27,920 --> 00:02:29,920
and actually you can recognize what we

74
00:02:29,920 --> 00:02:31,280
just saw actually

75
00:02:31,280 --> 00:02:33,599
the usual way of loading some plugix

76
00:02:33,599 --> 00:02:36,560
malware family which is some legitimate

77
00:02:36,560 --> 00:02:38,879
executable that will load

78
00:02:38,879 --> 00:02:40,800
through dll side loading some malicious

79
00:02:40,800 --> 00:02:43,200
dll that will actually decrypt the the

80
00:02:43,200 --> 00:02:44,160
payload

81
00:02:44,160 --> 00:02:46,319
which is the third file

82
00:02:46,319 --> 00:02:48,480
so if we summarize this the target will

83
00:02:48,480 --> 00:02:51,360
visit the chat application website

84
00:02:51,360 --> 00:02:53,040
download the installer and depending on

85
00:02:53,040 --> 00:02:55,200
the platform it will run either plugix

86
00:02:55,200 --> 00:02:57,040
or some malware family in mac os

87
00:02:57,040 --> 00:02:58,800
platform that we called orat that we

88
00:02:58,800 --> 00:03:00,879
will see later

89
00:03:00,879 --> 00:03:03,440
one thing to note about this

90
00:03:03,440 --> 00:03:05,680
website is that you could register

91
00:03:05,680 --> 00:03:09,360
through it either by email or by phone

92
00:03:09,360 --> 00:03:12,400
on they were limiting the prefixes fund

93
00:03:12,400 --> 00:03:14,959
numbers to some countries so this gives

94
00:03:14,959 --> 00:03:17,280
an idea of what are the targets for this

95
00:03:17,280 --> 00:03:18,560
trade tactor so you can see that there

96
00:03:18,560 --> 00:03:20,560
is u.s and canada and all the others are

97
00:03:20,560 --> 00:03:23,840
countries from southeast asia

98
00:03:23,840 --> 00:03:25,760
the second infection vector we found is

99
00:03:25,760 --> 00:03:27,760
a bit more complicated

100
00:03:27,760 --> 00:03:29,760
it all starts with the tradactor that

101
00:03:29,760 --> 00:03:31,200
will

102
00:03:31,200 --> 00:03:32,879
first find a

103
00:03:32,879 --> 00:03:34,640
legitimate website

104
00:03:34,640 --> 00:03:36,400
and it will exploit a persistent

105
00:03:36,400 --> 00:03:38,799
cross-site scripting vulnerability so it

106
00:03:38,799 --> 00:03:40,720
will inject some javascript code in that

107
00:03:40,720 --> 00:03:41,840
website

108
00:03:41,840 --> 00:03:43,599
that code will be triggered when the

109
00:03:43,599 --> 00:03:45,920
target visits the website and in this

110
00:03:45,920 --> 00:03:48,080
case what the code does is it will load

111
00:03:48,080 --> 00:03:50,080
a third-party javascript code from a

112
00:03:50,080 --> 00:03:51,680
third-party server

113
00:03:51,680 --> 00:03:54,480
which we call here here xss platform

114
00:03:54,480 --> 00:03:56,799
it will also load some php script

115
00:03:56,799 --> 00:03:59,120
and then after this code is run it will

116
00:03:59,120 --> 00:04:00,480
redirect

117
00:04:00,480 --> 00:04:02,720
the target to a final website which will

118
00:04:02,720 --> 00:04:05,920
offer some fake flash installer

119
00:04:05,920 --> 00:04:07,920
so if the target then falls for this

120
00:04:07,920 --> 00:04:10,000
viewer and install the flash

121
00:04:10,000 --> 00:04:12,560
fake installer it will get delivered by

122
00:04:12,560 --> 00:04:15,439
a malware we saw this technique being

123
00:04:15,439 --> 00:04:17,199
used for different malware families this

124
00:04:17,199 --> 00:04:19,120
is why i don't specify which malware is

125
00:04:19,120 --> 00:04:20,720
delivered because there were multiple

126
00:04:20,720 --> 00:04:22,160
ones

127
00:04:22,160 --> 00:04:24,880
actually the the crossroads scripting

128
00:04:24,880 --> 00:04:27,040
display contains some call to display a

129
00:04:27,040 --> 00:04:28,960
message so you can see here the message

130
00:04:28,960 --> 00:04:30,880
you can see it's written in chinese

131
00:04:30,880 --> 00:04:32,880
so the if you translate it it will be

132
00:04:32,880 --> 00:04:34,720
just saying that the flash version is

133
00:04:34,720 --> 00:04:36,000
too old

134
00:04:36,000 --> 00:04:37,680
this was

135
00:04:37,680 --> 00:04:39,680
kind of surprising for us that this

136
00:04:39,680 --> 00:04:40,960
flash

137
00:04:40,960 --> 00:04:42,800
trick is still used because flash is

138
00:04:42,800 --> 00:04:45,280
supposed to be end of life since the end

139
00:04:45,280 --> 00:04:47,680
of 2020 and then we found out that in

140
00:04:47,680 --> 00:04:50,560
china there is an exception to this rule

141
00:04:50,560 --> 00:04:51,919
and

142
00:04:51,919 --> 00:04:55,120
actually adobe allowed a third party

143
00:04:55,120 --> 00:04:56,880
editor to still

144
00:04:56,880 --> 00:04:58,960
offer the flash installer in china so

145
00:04:58,960 --> 00:05:01,280
this is interesting something that we

146
00:05:01,280 --> 00:05:02,639
learned

147
00:05:02,639 --> 00:05:04,400
so the script would do some checks

148
00:05:04,400 --> 00:05:06,639
display this message and then call the

149
00:05:06,639 --> 00:05:08,720
php script on redirect to this website

150
00:05:08,720 --> 00:05:10,560
so this is what the final website looks

151
00:05:10,560 --> 00:05:12,560
like again written in chinese offering

152
00:05:12,560 --> 00:05:15,120
the adobe flash player

153
00:05:15,120 --> 00:05:17,440
we think that this php script probably

154
00:05:17,440 --> 00:05:19,680
collects some statistics about the bit

155
00:05:19,680 --> 00:05:22,960
themes on in those that third-party

156
00:05:22,960 --> 00:05:25,039
server that was hosting the javascript

157
00:05:25,039 --> 00:05:27,600
on php script we we looked around and

158
00:05:27,600 --> 00:05:29,840
found like an authentic authentication

159
00:05:29,840 --> 00:05:30,800
panel

160
00:05:30,800 --> 00:05:32,800
it can written in chinese so you can see

161
00:05:32,800 --> 00:05:34,080
the top left

162
00:05:34,080 --> 00:05:36,880
the xss ping tie message which means xss

163
00:05:36,880 --> 00:05:39,199
platform and on the bottom

164
00:05:39,199 --> 00:05:40,960
some message which is some disclaimer

165
00:05:40,960 --> 00:05:42,320
actually in chinese

166
00:05:42,320 --> 00:05:44,400
stating that this is a private access

167
00:05:44,400 --> 00:05:46,400
platform and that there are other free

168
00:05:46,400 --> 00:05:48,880
online xss platforms around

169
00:05:48,880 --> 00:05:51,360
so what we believe is this platform

170
00:05:51,360 --> 00:05:53,360
is some kind of

171
00:05:53,360 --> 00:05:55,520
vulnerability platform that allows

172
00:05:55,520 --> 00:05:56,720
actually the

173
00:05:56,720 --> 00:05:58,800
transactor to scan for cross-site

174
00:05:58,800 --> 00:06:00,479
scripting vulnerabilities in remote

175
00:06:00,479 --> 00:06:03,520
legitimate websites

176
00:06:03,759 --> 00:06:05,520
we found that two legitimate websites

177
00:06:05,520 --> 00:06:06,880
were exploited

178
00:06:06,880 --> 00:06:09,280
you could identify the first one

179
00:06:09,280 --> 00:06:12,400
which was a website news websites aimed

180
00:06:12,400 --> 00:06:14,240
at the chinese community

181
00:06:14,240 --> 00:06:16,080
of a big u.s city

182
00:06:16,080 --> 00:06:17,759
unfortunately we could not identify the

183
00:06:17,759 --> 00:06:19,360
second website because it was an ip

184
00:06:19,360 --> 00:06:21,759
address that saw no domain name and it

185
00:06:21,759 --> 00:06:24,000
was offline at the time of we when we

186
00:06:24,000 --> 00:06:25,680
checked

187
00:06:25,680 --> 00:06:28,400
the third infection vector is a dmg file

188
00:06:28,400 --> 00:06:30,160
which is some kind of installer for mac

189
00:06:30,160 --> 00:06:31,360
platform

190
00:06:31,360 --> 00:06:32,479
desktop

191
00:06:32,479 --> 00:06:34,720
desktop actually not phone

192
00:06:34,720 --> 00:06:36,160
mac and then

193
00:06:36,160 --> 00:06:38,080
it contains some pre-installed scripts

194
00:06:38,080 --> 00:06:39,680
so here you can see the script is very

195
00:06:39,680 --> 00:06:41,919
simple it will just like download some

196
00:06:41,919 --> 00:06:44,000
payload from a remote website and

197
00:06:44,000 --> 00:06:45,360
execute it

198
00:06:45,360 --> 00:06:46,080
and

199
00:06:46,080 --> 00:06:48,800
we can note that the the file was named

200
00:06:48,800 --> 00:06:50,319
bitget.dmg

201
00:06:50,319 --> 00:06:51,919
and we found that bit get is a

202
00:06:51,919 --> 00:06:53,599
singapore-based cryptocurrency exchange

203
00:06:53,599 --> 00:06:56,080
application so this probably means that

204
00:06:56,080 --> 00:06:57,919
it has some relation to the

205
00:06:57,919 --> 00:06:59,440
targets

206
00:06:59,440 --> 00:07:01,199
so we let jeromiel discuss the malware

207
00:07:01,199 --> 00:07:02,639
now

208
00:07:02,639 --> 00:07:04,800
so in this section we will talk about

209
00:07:04,800 --> 00:07:07,039
malware toolkit

210
00:07:07,039 --> 00:07:09,599
so this thread actor was very active and

211
00:07:09,599 --> 00:07:12,319
they used like all three major

212
00:07:12,319 --> 00:07:16,000
they used malware for all three major

213
00:07:16,000 --> 00:07:18,400
platforms which means like for

214
00:07:18,400 --> 00:07:20,240
windows linux and mac

215
00:07:20,240 --> 00:07:23,199
some of these malware families are known

216
00:07:23,199 --> 00:07:25,680
or has been previously used either by

217
00:07:25,680 --> 00:07:28,080
some other groups or they are

218
00:07:28,080 --> 00:07:30,160
publicly available on github for example

219
00:07:30,160 --> 00:07:31,840
so this is the list of

220
00:07:31,840 --> 00:07:34,639
the known families on windows in this

221
00:07:34,639 --> 00:07:37,759
presentation we will not go through the

222
00:07:37,759 --> 00:07:39,919
known families we will focus on the new

223
00:07:39,919 --> 00:07:42,800
ones the custom ones but we plan to

224
00:07:42,800 --> 00:07:45,759
publish sooner or later the paper and

225
00:07:45,759 --> 00:07:47,840
blog post there will be some details

226
00:07:47,840 --> 00:07:50,800
even about related to these families so

227
00:07:50,800 --> 00:07:52,639
for known windows mulberry families

228
00:07:52,639 --> 00:07:55,599
they're like plug x we've heard about it

229
00:07:55,599 --> 00:07:58,319
today to ghost threat kabul strike and

230
00:07:58,319 --> 00:07:59,280
others

231
00:07:59,280 --> 00:08:01,840
quasarat was mentioned

232
00:08:01,840 --> 00:08:04,080
for the new families which some of them

233
00:08:04,080 --> 00:08:06,639
we will talk about today was the puppet

234
00:08:06,639 --> 00:08:09,840
loader puppet downloader overat

235
00:08:09,840 --> 00:08:12,319
another mfc downloader and hello bot we

236
00:08:12,319 --> 00:08:15,680
will talk a little bit later about them

237
00:08:15,680 --> 00:08:18,319
under linux known malware families like

238
00:08:18,319 --> 00:08:21,039
xnode hellobot papyrat

239
00:08:21,039 --> 00:08:23,919
reptile rootkid hiding like one of these

240
00:08:23,919 --> 00:08:27,520
previously mentioned families

241
00:08:27,520 --> 00:08:30,879
and for mac we found like one

242
00:08:30,879 --> 00:08:33,599
compiled under mecco mac os which is

243
00:08:33,599 --> 00:08:36,320
called orat originally written in golang

244
00:08:36,320 --> 00:08:38,719
but it can be compiled under different

245
00:08:38,719 --> 00:08:41,440
platforms so let's start with i would

246
00:08:41,440 --> 00:08:44,399
say the most interesting malware family

247
00:08:44,399 --> 00:08:46,240
used by this trajectory which we named

248
00:08:46,240 --> 00:08:47,680
puppet loader

249
00:08:47,680 --> 00:08:49,760
why puppet loader because there had been

250
00:08:49,760 --> 00:08:51,600
like string as you can you can see in

251
00:08:51,600 --> 00:08:53,680
this small screenshot below have been

252
00:08:53,680 --> 00:08:56,640
like a string directly found

253
00:08:56,640 --> 00:08:59,519
in in within the malware so the outer

254
00:08:59,519 --> 00:09:02,320
authors themselves call it puppet loader

255
00:09:02,320 --> 00:09:05,200
it is a custom malware it has five

256
00:09:05,200 --> 00:09:08,160
stages the lightest stage is the

257
00:09:08,160 --> 00:09:09,760
backdoor itself

258
00:09:09,760 --> 00:09:12,000
and it uses for encryption somehow

259
00:09:12,000 --> 00:09:15,440
flawed rc4 implementation

260
00:09:15,440 --> 00:09:17,760
so when i talk about these stages so it

261
00:09:17,760 --> 00:09:19,920
starts with stealthy loader

262
00:09:19,920 --> 00:09:21,600
which loads

263
00:09:21,600 --> 00:09:24,560
in a stealthy way a dropper this dropper

264
00:09:24,560 --> 00:09:25,680
drops

265
00:09:25,680 --> 00:09:28,160
basic loader which is the third stage

266
00:09:28,160 --> 00:09:31,279
then it drops one bmp file like bitmap

267
00:09:31,279 --> 00:09:32,880
file but in

268
00:09:32,880 --> 00:09:34,000
in

269
00:09:34,000 --> 00:09:36,399
to this bitmap file there is attached

270
00:09:36,399 --> 00:09:38,640
there are attached some encrypted data

271
00:09:38,640 --> 00:09:39,760
with core

272
00:09:39,760 --> 00:09:41,760
and another bitmap file with another

273
00:09:41,760 --> 00:09:44,480
attached data with the another stage

274
00:09:44,480 --> 00:09:47,279
then the basic loader decrypts and loads

275
00:09:47,279 --> 00:09:48,160
this

276
00:09:48,160 --> 00:09:51,200
core from the bitmap with core

277
00:09:51,200 --> 00:09:54,320
and the core decrypts and loads the main

278
00:09:54,320 --> 00:09:55,760
client

279
00:09:55,760 --> 00:09:58,320
so these are all these five stages

280
00:09:58,320 --> 00:10:00,080
i mentioned that there is something with

281
00:10:00,080 --> 00:10:03,040
flawed rc4 implementation

282
00:10:03,040 --> 00:10:04,399
so how

283
00:10:04,399 --> 00:10:06,560
how it was implemented so in the right

284
00:10:06,560 --> 00:10:08,800
there is there is the code for

285
00:10:08,800 --> 00:10:10,160
pseudorandom

286
00:10:10,160 --> 00:10:11,839
generation

287
00:10:11,839 --> 00:10:12,959
and

288
00:10:12,959 --> 00:10:15,680
the most important part is the swap

289
00:10:15,680 --> 00:10:16,720
functions

290
00:10:16,720 --> 00:10:19,120
swap function and the swap function is

291
00:10:19,120 --> 00:10:21,920
implemented in the in the five steps in

292
00:10:21,920 --> 00:10:24,480
in the table on the left it's kind of in

293
00:10:24,480 --> 00:10:26,480
a strange way like they have like

294
00:10:26,480 --> 00:10:29,760
temporary value then they assign the sum

295
00:10:29,760 --> 00:10:32,720
of like two locations because it wants

296
00:10:32,720 --> 00:10:34,079
to it wants to

297
00:10:34,079 --> 00:10:35,120
swap

298
00:10:35,120 --> 00:10:38,640
locations from table with offset i and j

299
00:10:38,640 --> 00:10:40,720
so it use some sum

300
00:10:40,720 --> 00:10:42,000
then some

301
00:10:42,000 --> 00:10:44,320
some subtraction and so on

302
00:10:44,320 --> 00:10:46,480
so if you want to go like step by step

303
00:10:46,480 --> 00:10:48,320
so in the left there will be the table

304
00:10:48,320 --> 00:10:50,800
which i showed you before and in the

305
00:10:50,800 --> 00:10:53,279
right table are the actual values so you

306
00:10:53,279 --> 00:10:55,920
can see on the right there is originally

307
00:10:55,920 --> 00:10:58,560
s i and sj values

308
00:10:58,560 --> 00:11:02,079
s i is red sj is green and after all

309
00:11:02,079 --> 00:11:04,880
these five operations or the steps the

310
00:11:04,880 --> 00:11:05,600
the

311
00:11:05,600 --> 00:11:08,560
red should be in the right column and

312
00:11:08,560 --> 00:11:10,560
the the green should appear in the left

313
00:11:10,560 --> 00:11:12,800
column so after the first operation you

314
00:11:12,800 --> 00:11:15,279
can see the temp value is sum of these

315
00:11:15,279 --> 00:11:18,959
values after the step two s i equals to

316
00:11:18,959 --> 00:11:20,480
some of the values

317
00:11:20,480 --> 00:11:23,440
after the third step temp is equal to

318
00:11:23,440 --> 00:11:24,480
s i

319
00:11:24,480 --> 00:11:25,440
then

320
00:11:25,440 --> 00:11:27,120
then

321
00:11:27,120 --> 00:11:29,760
then the second column that sj is

322
00:11:29,760 --> 00:11:32,640
assigned the original si value and in

323
00:11:32,640 --> 00:11:35,600
the last step which you can see that

324
00:11:35,600 --> 00:11:39,200
that these two two values are swapped so

325
00:11:39,200 --> 00:11:41,279
it seems to work

326
00:11:41,279 --> 00:11:45,519
what happens if i and j are equal

327
00:11:45,519 --> 00:11:48,320
so in the first step temp is assigned

328
00:11:48,320 --> 00:11:49,440
the double

329
00:11:49,440 --> 00:11:52,399
the double value of i because i points

330
00:11:52,399 --> 00:11:54,480
to the same place as j

331
00:11:54,480 --> 00:11:56,639
so s i plus s j

332
00:11:56,639 --> 00:11:59,120
equals 2 times s i

333
00:11:59,120 --> 00:12:02,079
in the second step s i is assigned the

334
00:12:02,079 --> 00:12:05,519
stem value so the s i as j and temp

335
00:12:05,519 --> 00:12:06,800
is now equal

336
00:12:06,800 --> 00:12:08,560
all of them are equal the same value

337
00:12:08,560 --> 00:12:10,560
which is 2 times s i

338
00:12:10,560 --> 00:12:13,760
then it gets then it gets subtracted so

339
00:12:13,760 --> 00:12:17,200
suddenly temp value is zero

340
00:12:17,200 --> 00:12:19,279
and later everything is zero

341
00:12:19,279 --> 00:12:21,519
so what so what happens for the internal

342
00:12:21,519 --> 00:12:24,560
stage of the rc4 cipher our this

343
00:12:24,560 --> 00:12:26,720
internal stage should be permutation of

344
00:12:26,720 --> 00:12:29,839
all the numbers from 0 to ff and each

345
00:12:29,839 --> 00:12:31,920
number should be there exactly once so

346
00:12:31,920 --> 00:12:33,600
you can see here

347
00:12:33,600 --> 00:12:36,880
in the in with this arrow the left is

348
00:12:36,880 --> 00:12:39,600
sorry the left is the stake before

349
00:12:39,600 --> 00:12:42,160
and the right is after so there is like

350
00:12:42,160 --> 00:12:44,959
one zero here and one zero stays here

351
00:12:44,959 --> 00:12:47,839
but also when when it wants to swap

352
00:12:47,839 --> 00:12:50,560
this value to c so after the swapping

353
00:12:50,560 --> 00:12:53,120
this 2c becomes zero so suddenly there

354
00:12:53,120 --> 00:12:55,680
are two zeros and the longer this

355
00:12:55,680 --> 00:12:59,200
process runs the more zeros appear in

356
00:12:59,200 --> 00:13:01,760
this internal stage and after long run

357
00:13:01,760 --> 00:13:04,000
they're almost all zeros so

358
00:13:04,000 --> 00:13:07,839
the the encryption like doesn't work

359
00:13:08,320 --> 00:13:09,920
so we have seen this this weird

360
00:13:09,920 --> 00:13:11,200
implementation or this flawed

361
00:13:11,200 --> 00:13:13,360
implementation also in like two more

362
00:13:13,360 --> 00:13:15,040
malware families one was this puppet

363
00:13:15,040 --> 00:13:16,959
downloader and one was like some

364
00:13:16,959 --> 00:13:21,279
userland rootkit from tigerplug

365
00:13:21,279 --> 00:13:23,600
now let's talk a little bit about puppet

366
00:13:23,600 --> 00:13:25,760
loader and talk a little bit more about

367
00:13:25,760 --> 00:13:28,639
these five stages so the first stage was

368
00:13:28,639 --> 00:13:30,240
the stealthy loader

369
00:13:30,240 --> 00:13:33,279
so it hooked several functions from

370
00:13:33,279 --> 00:13:34,880
ntdll

371
00:13:34,880 --> 00:13:37,200
and then also used some undocumented

372
00:13:37,200 --> 00:13:39,040
ntdls functions

373
00:13:39,040 --> 00:13:41,120
to avoid recursive hooking problems

374
00:13:41,120 --> 00:13:43,680
these are like rtl push pop and get

375
00:13:43,680 --> 00:13:45,040
frame

376
00:13:45,040 --> 00:13:48,160
this frame is some data structure

377
00:13:48,160 --> 00:13:51,120
pushed on the stack and it contains some

378
00:13:51,120 --> 00:13:53,839
pointers too to some buffers

379
00:13:53,839 --> 00:13:56,079
it can be the buffer with the payload

380
00:13:56,079 --> 00:13:59,040
buffer with name of the files

381
00:13:59,040 --> 00:14:01,440
size of the payload and there can be

382
00:14:01,440 --> 00:14:05,360
some open handles and so on

383
00:14:05,360 --> 00:14:06,399
then

384
00:14:06,399 --> 00:14:09,839
the the loader tries to load like one

385
00:14:09,839 --> 00:14:12,639
legitimate func legitimate dll in this

386
00:14:12,639 --> 00:14:15,279
case it it's called asic field.dll it's

387
00:14:15,279 --> 00:14:17,760
some some file from

388
00:14:17,760 --> 00:14:20,160
windows system 32 directory

389
00:14:20,160 --> 00:14:23,760
then hooked anti-open file replaces this

390
00:14:23,760 --> 00:14:25,519
asic field with

391
00:14:25,519 --> 00:14:27,760
lz32.dll

392
00:14:27,760 --> 00:14:31,440
then hooked create section

393
00:14:31,440 --> 00:14:34,480
changes the size of the created section

394
00:14:34,480 --> 00:14:36,320
to correspond the size of the malicious

395
00:14:36,320 --> 00:14:38,800
payload then the hooked

396
00:14:38,800 --> 00:14:41,040
nt-map view of section function

397
00:14:41,040 --> 00:14:43,600
again changes the size of the payload

398
00:14:43,600 --> 00:14:45,839
and copies malicious payload into the

399
00:14:45,839 --> 00:14:48,720
file and then antiquary sec then hooked

400
00:14:48,720 --> 00:14:50,480
antiquary section

401
00:14:50,480 --> 00:14:52,959
will compute the difference between

402
00:14:52,959 --> 00:14:54,959
actually loaded the

403
00:14:54,959 --> 00:14:57,760
image base and preferred image base

404
00:14:57,760 --> 00:15:00,320
it and when it is not at the preferred

405
00:15:00,320 --> 00:15:02,639
image base that it returns this this

406
00:15:02,639 --> 00:15:06,079
error that status image noted base

407
00:15:06,079 --> 00:15:09,519
and the loader rebases and loads

408
00:15:09,519 --> 00:15:10,839
the

409
00:15:10,839 --> 00:15:12,480
dependencies

410
00:15:12,480 --> 00:15:14,480
so the stealthy loader loads in a way

411
00:15:14,480 --> 00:15:15,279
that

412
00:15:15,279 --> 00:15:20,240
if you parse this peb ldr data structure

413
00:15:20,240 --> 00:15:23,040
it tells you that asic filled the dll

414
00:15:23,040 --> 00:15:25,440
file was loaded if you run process

415
00:15:25,440 --> 00:15:28,320
monitor it tells you that lz32dl was

416
00:15:28,320 --> 00:15:31,600
loaded but in reality in the reality

417
00:15:31,600 --> 00:15:33,040
none of them was loaded it would be

418
00:15:33,040 --> 00:15:34,800
malicious payload

419
00:15:34,800 --> 00:15:36,399
which is in this case the second stage

420
00:15:36,399 --> 00:15:37,519
the dropper

421
00:15:37,519 --> 00:15:40,399
the dropper drops just dll file and two

422
00:15:40,399 --> 00:15:41,839
bitmap files

423
00:15:41,839 --> 00:15:44,160
so nothing interesting here

424
00:15:44,160 --> 00:15:46,560
this the third stage is the basic loader

425
00:15:46,560 --> 00:15:48,959
which searches for previously dropped

426
00:15:48,959 --> 00:15:51,680
bitmap files these bitmap files are as

427
00:15:51,680 --> 00:15:53,680
you can see here very small

428
00:15:53,680 --> 00:15:57,360
like 30 33 times 11 pixels with an

429
00:15:57,360 --> 00:16:00,079
overlay there are encrypted

430
00:16:00,079 --> 00:16:02,240
encrypted uh

431
00:16:02,240 --> 00:16:05,600
next stages it decorate it decrypts them

432
00:16:05,600 --> 00:16:07,360
runs them

433
00:16:07,360 --> 00:16:10,399
stage four is core which runs

434
00:16:10,399 --> 00:16:12,560
logging thread

435
00:16:12,560 --> 00:16:13,600
which

436
00:16:13,600 --> 00:16:16,079
locks all the information about about uh

437
00:16:16,079 --> 00:16:18,720
progress of running the

438
00:16:18,720 --> 00:16:20,240
the puppet loader

439
00:16:20,240 --> 00:16:23,279
and they're like list of supported

440
00:16:23,279 --> 00:16:25,279
command line arguments you can notice

441
00:16:25,279 --> 00:16:27,279
that sometimes the right typos like

442
00:16:27,279 --> 00:16:29,759
instead of invoke there is in oak

443
00:16:29,759 --> 00:16:31,759
and so on

444
00:16:31,759 --> 00:16:35,120
fifth stage is the main backdoor

445
00:16:35,120 --> 00:16:37,360
supporting the main like typical big

446
00:16:37,360 --> 00:16:38,800
door functions

447
00:16:38,800 --> 00:16:40,480
cnc communication

448
00:16:40,480 --> 00:16:43,360
is via udp udp

449
00:16:43,360 --> 00:16:46,320
and again rc4 encryption the flawed

450
00:16:46,320 --> 00:16:47,440
encryption

451
00:16:47,440 --> 00:16:49,440
and the key is here

452
00:16:49,440 --> 00:16:52,000
here randomly generated and sent within

453
00:16:52,000 --> 00:16:54,240
the data stream

454
00:16:54,240 --> 00:16:55,839
now we will continue with another

455
00:16:55,839 --> 00:16:58,480
interesting malware which is orat

456
00:16:58,480 --> 00:17:00,560
written in golang we have seen it

457
00:17:00,560 --> 00:17:03,279
compiled under windows and mac

458
00:17:03,279 --> 00:17:06,000
it has some configuration which is

459
00:17:06,000 --> 00:17:08,480
in overlay which is encrypted after

460
00:17:08,480 --> 00:17:10,559
decrypting you can see the information

461
00:17:10,559 --> 00:17:12,400
like local

462
00:17:12,400 --> 00:17:15,119
like type of encryption

463
00:17:15,119 --> 00:17:18,400
cnc encryption cnc address

464
00:17:18,400 --> 00:17:20,559
if it is used as traffic forwarder or

465
00:17:20,559 --> 00:17:21,760
not

466
00:17:21,760 --> 00:17:24,559
it runs the local server so the the

467
00:17:24,559 --> 00:17:27,199
attacker has to or can

468
00:17:27,199 --> 00:17:29,440
connect directly to this to the infected

469
00:17:29,440 --> 00:17:30,320
machine

470
00:17:30,320 --> 00:17:32,559
and issue the commands

471
00:17:32,559 --> 00:17:35,679
it uh it's implemented via something

472
00:17:35,679 --> 00:17:38,400
called the registered routes so

473
00:17:38,400 --> 00:17:40,080
there are like these are the list of

474
00:17:40,080 --> 00:17:42,799
paths which are supported

475
00:17:42,799 --> 00:17:44,480
by the back door

476
00:17:44,480 --> 00:17:47,520
and the threat actor basically goes to

477
00:17:47,520 --> 00:17:49,280
this for example to the

478
00:17:49,280 --> 00:17:52,160
url address slash agent slash info to

479
00:17:52,160 --> 00:17:55,039
get information about the machine he

480
00:17:55,039 --> 00:17:57,440
wants for example screenshot and he

481
00:17:57,440 --> 00:17:58,320
calls

482
00:17:58,320 --> 00:18:01,360
slash agent slash screenshot and so on

483
00:18:01,360 --> 00:18:02,720
and on the right there is the example

484
00:18:02,720 --> 00:18:05,600
like in in golang how simple it is to

485
00:18:05,600 --> 00:18:06,880
to write

486
00:18:06,880 --> 00:18:09,280
this type of code

487
00:18:09,280 --> 00:18:11,760
also we will i will mention like two two

488
00:18:11,760 --> 00:18:14,240
families for linux which are somehow

489
00:18:14,240 --> 00:18:16,160
interesting these are like xnode and

490
00:18:16,160 --> 00:18:18,000
hellobot they are like not new they have

491
00:18:18,000 --> 00:18:21,840
been seen before or reported before not

492
00:18:21,840 --> 00:18:24,160
not reported to used for espionage

493
00:18:24,160 --> 00:18:25,760
features

494
00:18:25,760 --> 00:18:27,600
espionage

495
00:18:27,600 --> 00:18:28,960
goals

496
00:18:28,960 --> 00:18:30,640
they are they have also like typical red

497
00:18:30,640 --> 00:18:32,480
features but for us what is interesting

498
00:18:32,480 --> 00:18:34,080
they are interesting

499
00:18:34,080 --> 00:18:36,799
configuration files which are usually

500
00:18:36,799 --> 00:18:39,919
simply encrypted with with xor

501
00:18:39,919 --> 00:18:43,039
they contain lots of simplified chinese

502
00:18:43,039 --> 00:18:45,679
commands and then they also contain some

503
00:18:45,679 --> 00:18:47,919
identifiers on some notes usually

504
00:18:47,919 --> 00:18:50,080
related to gambling

505
00:18:50,080 --> 00:18:51,760
also like one interesting thing about

506
00:18:51,760 --> 00:18:53,760
these two families is that

507
00:18:53,760 --> 00:18:56,320
there is like one one special file with

508
00:18:56,320 --> 00:18:57,840
this strange name

509
00:18:57,840 --> 00:19:00,480
and it tells that

510
00:19:00,480 --> 00:19:02,880
that the machine is already infected by

511
00:19:02,880 --> 00:19:05,120
x node but when this is

512
00:19:05,120 --> 00:19:07,039
but when this is noticed by the hello

513
00:19:07,039 --> 00:19:09,760
bot the hellobot runs this command f

514
00:19:09,760 --> 00:19:12,320
user minus k something which

515
00:19:12,320 --> 00:19:15,280
which finds out which processes are are

516
00:19:15,280 --> 00:19:17,760
opening or touching this file and if it

517
00:19:17,760 --> 00:19:19,600
finds them the

518
00:19:19,600 --> 00:19:22,160
the hello bolt kills the instances so it

519
00:19:22,160 --> 00:19:24,160
shows that either either before the

520
00:19:24,160 --> 00:19:26,240
thread actor used

521
00:19:26,240 --> 00:19:28,480
used x note and then updated to hello

522
00:19:28,480 --> 00:19:30,320
both and wanted to kill the previous

523
00:19:30,320 --> 00:19:32,720
instances or there's some

524
00:19:32,720 --> 00:19:35,600
competition for for the resources with

525
00:19:35,600 --> 00:19:39,799
maybe some other group

526
00:19:40,640 --> 00:19:41,760
so now let's talk a bit about the

527
00:19:41,760 --> 00:19:44,240
targets

528
00:19:44,720 --> 00:19:47,120
so we used three sources to find targets

529
00:19:47,120 --> 00:19:49,120
first one was of course our telemetry

530
00:19:49,120 --> 00:19:51,440
but also we used the previous malware

531
00:19:51,440 --> 00:19:53,760
configurations that we discussed

532
00:19:53,760 --> 00:19:55,840
and we also found some key logs that

533
00:19:55,840 --> 00:19:58,559
were generated by malware related with

534
00:19:58,559 --> 00:20:00,000
this traductor and we found them in the

535
00:20:00,000 --> 00:20:02,240
wild so we could analyze them

536
00:20:02,240 --> 00:20:04,320
so quick word about the telemetry

537
00:20:04,320 --> 00:20:05,120
the

538
00:20:05,120 --> 00:20:07,280
we got more hits coming from china

539
00:20:07,280 --> 00:20:08,559
actually there were downloads of the

540
00:20:08,559 --> 00:20:10,480
fake flash downloader

541
00:20:10,480 --> 00:20:12,720
but we also found some hits from the us

542
00:20:12,720 --> 00:20:15,440
but we know that they all came from that

543
00:20:15,440 --> 00:20:18,480
legitimate website which was actually

544
00:20:18,480 --> 00:20:21,360
oriented to our chinese community

545
00:20:21,360 --> 00:20:23,360
on the other heats were from hong kong

546
00:20:23,360 --> 00:20:26,640
malaysia on taiwan

547
00:20:26,640 --> 00:20:28,480
then about the the key logs that we

548
00:20:28,480 --> 00:20:30,880
could analyze we could identify some of

549
00:20:30,880 --> 00:20:33,600
the victims based on some of the content

550
00:20:33,600 --> 00:20:35,280
of those keylock files

551
00:20:35,280 --> 00:20:37,039
and so they we found two chinese

552
00:20:37,039 --> 00:20:38,159
gambling

553
00:20:38,159 --> 00:20:40,159
companies websites actually on one

554
00:20:40,159 --> 00:20:43,440
malaysian hosting provider

555
00:20:43,600 --> 00:20:46,000
and the last the configuration files as

556
00:20:46,000 --> 00:20:47,200
you mentioned there were some kind of

557
00:20:47,200 --> 00:20:49,120
campaign identifiers or notes and we

558
00:20:49,120 --> 00:20:51,440
found some of some words that might

559
00:20:51,440 --> 00:20:54,400
refer to the targets or the campaign

560
00:20:54,400 --> 00:20:56,480
a few examples for example there's yabo

561
00:20:56,480 --> 00:20:57,600
which is a

562
00:20:57,600 --> 00:20:59,440
huge gambling website

563
00:20:59,440 --> 00:21:00,840
same for

564
00:21:00,840 --> 00:21:03,760
w88 there is some gameworks that might

565
00:21:03,760 --> 00:21:05,280
be actually changing based gaming

566
00:21:05,280 --> 00:21:08,720
company etc etc

567
00:21:09,120 --> 00:21:10,000
so

568
00:21:10,000 --> 00:21:12,400
the targets are mainly in china but also

569
00:21:12,400 --> 00:21:14,159
in some other southeast asian countries

570
00:21:14,159 --> 00:21:15,120
and u.s

571
00:21:15,120 --> 00:21:17,120
we found out the main targeted industry

572
00:21:17,120 --> 00:21:19,039
is gambling but not limited to that so

573
00:21:19,039 --> 00:21:20,240
we've also found one company in

574
00:21:20,240 --> 00:21:22,480
education two companies in i.t services

575
00:21:22,480 --> 00:21:23,919
and one company in electronics

576
00:21:23,919 --> 00:21:25,679
manufacturing

577
00:21:25,679 --> 00:21:26,799
so now let's discuss about the

578
00:21:26,799 --> 00:21:29,120
infrastructure

579
00:21:29,120 --> 00:21:31,120
so i say here it's a big infrastructure

580
00:21:31,120 --> 00:21:33,039
so i think this is in terms of apd

581
00:21:33,039 --> 00:21:34,880
groups because this morning we saw

582
00:21:34,880 --> 00:21:36,720
infrastructure that were like thousands

583
00:21:36,720 --> 00:21:37,919
thousands of

584
00:21:37,919 --> 00:21:39,600
servers so this is kind of ridiculous

585
00:21:39,600 --> 00:21:43,600
but in apt it's quite big like 50 cncs

586
00:21:43,600 --> 00:21:45,919
and if we you look at the domain names

587
00:21:45,919 --> 00:21:48,480
we could find related subdomains so more

588
00:21:48,480 --> 00:21:51,919
than 150

589
00:21:51,919 --> 00:21:54,880
and there is also like 12 different uh

590
00:21:54,880 --> 00:21:56,480
remote access tool families so which

591
00:21:56,480 --> 00:21:58,720
means the protector has to set up 12

592
00:21:58,720 --> 00:22:01,440
different back end so the controllers as

593
00:22:01,440 --> 00:22:04,159
well mentioned before so this is like a

594
00:22:04,159 --> 00:22:06,720
lot of work to maintain all of this

595
00:22:06,720 --> 00:22:08,720
we can note that many of those domain

596
00:22:08,720 --> 00:22:10,400
names

597
00:22:10,400 --> 00:22:11,919
have their ip address hidden by

598
00:22:11,919 --> 00:22:13,360
cloudflare

599
00:22:13,360 --> 00:22:15,840
and in some cases we found that

600
00:22:15,840 --> 00:22:17,919
multiple subdomains of one single root

601
00:22:17,919 --> 00:22:19,760
domain were linked to different malware

602
00:22:19,760 --> 00:22:22,159
families so let's see an example of this

603
00:22:22,159 --> 00:22:22,880
so

604
00:22:22,880 --> 00:22:24,880
there is the github.wiki

605
00:22:24,880 --> 00:22:27,520
website which actually

606
00:22:27,520 --> 00:22:30,400
has this those subdomains there are more

607
00:22:30,400 --> 00:22:32,000
than that but for the example we will

608
00:22:32,000 --> 00:22:34,320
just limit to these four subdomains

609
00:22:34,320 --> 00:22:37,120
so if you go to that github.wiki page

610
00:22:37,120 --> 00:22:39,039
actually we'll

611
00:22:39,039 --> 00:22:40,640
land on some

612
00:22:40,640 --> 00:22:43,200
page that contains legitimate github

613
00:22:43,200 --> 00:22:45,039
documentation so we found out it's an

614
00:22:45,039 --> 00:22:47,360
exact copy of the docs.heatup.com

615
00:22:47,360 --> 00:22:48,960
website

616
00:22:48,960 --> 00:22:49,919
but then

617
00:22:49,919 --> 00:22:53,200
so this probably is to to

618
00:22:53,200 --> 00:22:55,520
lured uh any i don't know analyst that

619
00:22:55,520 --> 00:22:57,039
will go to this website maybe it will

620
00:22:57,039 --> 00:23:00,240
flag this domain as uh legitimate but

621
00:23:00,240 --> 00:23:01,840
then we found some

622
00:23:01,840 --> 00:23:04,159
malware sample from hellobot that

623
00:23:04,159 --> 00:23:06,080
was talking actually to a sub-domain of

624
00:23:06,080 --> 00:23:08,000
github.wiki so this was malicious of

625
00:23:08,000 --> 00:23:09,760
course we found that this other

626
00:23:09,760 --> 00:23:12,000
subdomain delivered some alright malware

627
00:23:12,000 --> 00:23:13,039
sample

628
00:23:13,039 --> 00:23:16,320
which had the cnc to a third subdomain

629
00:23:16,320 --> 00:23:17,640
on this same

630
00:23:17,640 --> 00:23:20,000
deal.github.wiki delivered a papyrite

631
00:23:20,000 --> 00:23:22,159
malware sample which talked to a default

632
00:23:22,159 --> 00:23:24,000
subdomain of github.wiki so you can see

633
00:23:24,000 --> 00:23:27,280
this is like kind of complex

634
00:23:27,280 --> 00:23:28,559
infrastructure

635
00:23:28,559 --> 00:23:30,240
we even found another subdomain of

636
00:23:30,240 --> 00:23:32,480
github.wiki that if you go there you

637
00:23:32,480 --> 00:23:35,679
will find this like malware panel

638
00:23:35,679 --> 00:23:39,200
so it was quite interesting

639
00:23:39,440 --> 00:23:41,360
so a quick note also about the domain

640
00:23:41,360 --> 00:23:42,320
names

641
00:23:42,320 --> 00:23:44,159
so if you are like me and don't speak

642
00:23:44,159 --> 00:23:46,559
chinese you will just look at this and

643
00:23:46,559 --> 00:23:49,120
say okay that's like seems like regular

644
00:23:49,120 --> 00:23:50,720
regular domain names

645
00:23:50,720 --> 00:23:53,279
but in fact if you translate them or you

646
00:23:53,279 --> 00:23:54,880
talk to some colleagues that speak

647
00:23:54,880 --> 00:23:56,000
chinese

648
00:23:56,000 --> 00:23:58,000
you'll find out that dash eight means

649
00:23:58,000 --> 00:23:59,760
actually a big dick

650
00:23:59,760 --> 00:24:01,600
that what's unima

651
00:24:01,600 --> 00:24:04,799
means i your mother and shabi means

652
00:24:04,799 --> 00:24:06,480
 so

653
00:24:06,480 --> 00:24:08,240
yeah we were wondering

654
00:24:08,240 --> 00:24:09,760
is the protector trying to pass some

655
00:24:09,760 --> 00:24:12,320
kind of message or something yeah we

656
00:24:12,320 --> 00:24:13,840
don't really know what's the purpose

657
00:24:13,840 --> 00:24:15,760
maybe he's a frustrated teenager we have

658
00:24:15,760 --> 00:24:17,919
no idea but it was quite funny to find

659
00:24:17,919 --> 00:24:19,919
this out

660
00:24:19,919 --> 00:24:23,200
i know a word also about attribution

661
00:24:23,200 --> 00:24:25,360
so this is always tricky of course so

662
00:24:25,360 --> 00:24:27,760
what we can say with high confidence is

663
00:24:27,760 --> 00:24:29,520
that the tradactor speaks chinese

664
00:24:29,520 --> 00:24:30,480
language

665
00:24:30,480 --> 00:24:33,039
because there is like this xss platform

666
00:24:33,039 --> 00:24:35,360
it was actually we found out in the html

667
00:24:35,360 --> 00:24:37,600
code for this platform that it was

668
00:24:37,600 --> 00:24:39,360
downloaded from a chinese forum the

669
00:24:39,360 --> 00:24:41,120
panel itself is written in chinese the

670
00:24:41,120 --> 00:24:43,360
malware panel is in chinese a lot of the

671
00:24:43,360 --> 00:24:45,120
crypt decrypted configuration files are

672
00:24:45,120 --> 00:24:48,000
in chinese etc etc so we saw all of this

673
00:24:48,000 --> 00:24:49,520
in the the bottom you can see the

674
00:24:49,520 --> 00:24:51,120
screenshot of the controller we found

675
00:24:51,120 --> 00:24:53,600
and the the title is again chinese like

676
00:24:53,600 --> 00:24:55,919
home delivery master controller so this

677
00:24:55,919 --> 00:24:57,760
we can say we had confidence

678
00:24:57,760 --> 00:25:00,880
but we also found links to non-groups

679
00:25:00,880 --> 00:25:01,679
and

680
00:25:01,679 --> 00:25:03,840
every person that work on chinese

681
00:25:03,840 --> 00:25:06,400
traders know that it's a mess actually

682
00:25:06,400 --> 00:25:09,360
so let's see an example of this mess

683
00:25:09,360 --> 00:25:10,080
i

684
00:25:10,080 --> 00:25:11,760
said that it all started with one

685
00:25:11,760 --> 00:25:14,000
subdomain actually shoppingchannel.net

686
00:25:14,000 --> 00:25:16,159
which was linked to our previous

687
00:25:16,159 --> 00:25:18,640
investigation operation drb control in

688
00:25:18,640 --> 00:25:22,080
this investigation the tradactor used

689
00:25:22,080 --> 00:25:24,400
the hyperbrow malware family and as far

690
00:25:24,400 --> 00:25:26,799
as we know this malware family is only

691
00:25:26,799 --> 00:25:28,880
used by the iron tiger attacker also

692
00:25:28,880 --> 00:25:31,919
known as apt-27 or emissary panda so

693
00:25:31,919 --> 00:25:34,799
this is what first link that we we have

694
00:25:34,799 --> 00:25:37,600
second link is that xnode malware family

695
00:25:37,600 --> 00:25:39,679
actually in the report from dr webb from

696
00:25:39,679 --> 00:25:42,640
2015 they attribute this malware family

697
00:25:42,640 --> 00:25:44,080
to chinese

698
00:25:44,080 --> 00:25:45,360
group

699
00:25:45,360 --> 00:25:46,640
and this group

700
00:25:46,640 --> 00:25:48,880
we found an integer blog post that

701
00:25:48,880 --> 00:25:51,520
attributes this group to operation

702
00:25:51,520 --> 00:25:53,760
operation pizza ciao which is some white

703
00:25:53,760 --> 00:25:55,760
paper but

704
00:25:55,760 --> 00:25:58,000
i think this link is based on some

705
00:25:58,000 --> 00:26:01,520
encryption key for some ghost rat sample

706
00:26:01,520 --> 00:26:04,080
and this operation visit chair was

707
00:26:04,080 --> 00:26:05,840
actually also also attributed to iron

708
00:26:05,840 --> 00:26:08,000
tiger so we have two links to this

709
00:26:08,000 --> 00:26:10,080
trajectory but we have another totally

710
00:26:10,080 --> 00:26:11,360
different link

711
00:26:11,360 --> 00:26:13,200
so we found actually one of the plugix

712
00:26:13,200 --> 00:26:15,360
dlls was signed by a stolen certificate

713
00:26:15,360 --> 00:26:17,760
from the gravity company which is some

714
00:26:17,760 --> 00:26:19,760
south korean company i think

715
00:26:19,760 --> 00:26:20,799
and

716
00:26:20,799 --> 00:26:22,880
this company was mentioned in a blog

717
00:26:22,880 --> 00:26:25,520
post from co-intelligence

718
00:26:25,520 --> 00:26:27,440
that linked this

719
00:26:27,440 --> 00:26:31,039
compromising but to the winning ti group

720
00:26:31,039 --> 00:26:32,960
so we have another link to another known

721
00:26:32,960 --> 00:26:35,360
trade actor we also this blog post

722
00:26:35,360 --> 00:26:37,120
actually also mentions a blog post from

723
00:26:37,120 --> 00:26:40,000
eset where they also mention

724
00:26:40,000 --> 00:26:42,480
some malwares linked to with nti

725
00:26:42,480 --> 00:26:43,440
and they

726
00:26:43,440 --> 00:26:45,360
think that gravity might be one of the

727
00:26:45,360 --> 00:26:46,640
compromised companies that are

728
00:26:46,640 --> 00:26:48,400
displaying that blog post mentioned in

729
00:26:48,400 --> 00:26:50,880
that blog post also for the record

730
00:26:50,880 --> 00:26:52,799
operation derby controller also had some

731
00:26:52,799 --> 00:26:54,799
links to win nti actually because we

732
00:26:54,799 --> 00:26:57,120
found one ip address that if you look at

733
00:26:57,120 --> 00:26:59,360
the passive dns data contain a domain

734
00:26:59,360 --> 00:27:01,279
name that was also attributed to winning

735
00:27:01,279 --> 00:27:02,559
ti so

736
00:27:02,559 --> 00:27:04,400
as you can imagine this is all really

737
00:27:04,400 --> 00:27:05,600
messy

738
00:27:05,600 --> 00:27:08,240
so we decided that okay these are some

739
00:27:08,240 --> 00:27:10,480
links that we we want to

740
00:27:10,480 --> 00:27:12,480
mention to the community but we prefer

741
00:27:12,480 --> 00:27:14,559
to just take another

742
00:27:14,559 --> 00:27:16,640
our own transactor and so it will be a

743
00:27:16,640 --> 00:27:18,320
new name i think it's earth berber rock

744
00:27:18,320 --> 00:27:20,080
or something like that that the one will

745
00:27:20,080 --> 00:27:21,520
remember of course

746
00:27:21,520 --> 00:27:23,440
but whatever so

747
00:27:23,440 --> 00:27:24,960
in conclusion

748
00:27:24,960 --> 00:27:26,960
this is an advanced trait actor

749
00:27:26,960 --> 00:27:28,640
so we showed that the infrastructure is

750
00:27:28,640 --> 00:27:30,559
big they have a lot of development

751
00:27:30,559 --> 00:27:32,240
capabilities because they have some new

752
00:27:32,240 --> 00:27:34,399
malware families that are complex they

753
00:27:34,399 --> 00:27:36,399
have to maintain all of these back ends

754
00:27:36,399 --> 00:27:38,240
so they have a lot of different malware

755
00:27:38,240 --> 00:27:39,840
families used

756
00:27:39,840 --> 00:27:43,200
they target three different platforms

757
00:27:43,200 --> 00:27:44,960
and the targeting is mostly but not

758
00:27:44,960 --> 00:27:47,679
limited to gambling english industry

759
00:27:47,679 --> 00:27:49,840
and we we show some links to some known

760
00:27:49,840 --> 00:27:52,240
chinese protectors some maybe last thing

761
00:27:52,240 --> 00:27:54,559
we we have to mention is that gambling

762
00:27:54,559 --> 00:27:57,760
is uh very is regulated in china so it

763
00:27:57,760 --> 00:27:59,200
might

764
00:27:59,200 --> 00:28:00,720
make sense for

765
00:28:00,720 --> 00:28:03,120
these countries to try to like see which

766
00:28:03,120 --> 00:28:05,200
companies are in the gray zone or not

767
00:28:05,200 --> 00:28:06,640
complying to the rules or something like

768
00:28:06,640 --> 00:28:07,919
that so

769
00:28:07,919 --> 00:28:10,159
yeah on the i think our blog post will

770
00:28:10,159 --> 00:28:12,159
be published probably now

771
00:28:12,159 --> 00:28:15,360
uh it will be just an excerpt of the

772
00:28:15,360 --> 00:28:17,120
windows model analysis and i think the

773
00:28:17,120 --> 00:28:18,640
full blog post with all the other

774
00:28:18,640 --> 00:28:20,240
analysis will publish maybe in two weeks

775
00:28:20,240 --> 00:28:21,440
something like that

776
00:28:21,440 --> 00:28:22,640
so thank you and if you have any

777
00:28:22,640 --> 00:28:23,840
questions

778
00:28:23,840 --> 00:28:27,080
thank you

779
00:28:31,600 --> 00:28:34,080
okay is there any question

780
00:28:34,080 --> 00:28:36,799
in the room about

781
00:28:36,799 --> 00:28:38,960
gambling puppets

782
00:28:38,960 --> 00:28:41,440
yeah over

783
00:28:42,840 --> 00:28:45,440
there hello uh thanks for the great

784
00:28:45,440 --> 00:28:46,640
presentation

785
00:28:46,640 --> 00:28:47,679
uh

786
00:28:47,679 --> 00:28:49,279
my question would be

787
00:28:49,279 --> 00:28:51,360
it seems that a lot of the tools you

788
00:28:51,360 --> 00:28:52,960
described and definitely the activity

789
00:28:52,960 --> 00:28:53,840
has

790
00:28:53,840 --> 00:28:54,960
this

791
00:28:54,960 --> 00:28:58,559
state nexus sense that i guess we could

792
00:28:58,559 --> 00:29:01,120
all guess where it's coming from

793
00:29:01,120 --> 00:29:03,200
um

794
00:29:03,200 --> 00:29:06,080
but i guess my question is um whether

795
00:29:06,080 --> 00:29:07,520
you think there's like actually a

796
00:29:07,520 --> 00:29:10,320
financial motive behind this operation

797
00:29:10,320 --> 00:29:12,720
and whether that could be

798
00:29:12,720 --> 00:29:15,200
some kind of a criminal uh syndicate

799
00:29:15,200 --> 00:29:18,720
that branches out of those

800
00:29:18,720 --> 00:29:21,200
otherwise state-sponsored uh

801
00:29:21,200 --> 00:29:23,679
actors

802
00:29:23,840 --> 00:29:25,679
i don't believe there might be some

803
00:29:25,679 --> 00:29:28,480
financial motive because uh well we did

804
00:29:28,480 --> 00:29:30,320
not find for example any coin miner or

805
00:29:30,320 --> 00:29:33,039
stuff like that and also because the

806
00:29:33,039 --> 00:29:35,120
previous produce investigation operation

807
00:29:35,120 --> 00:29:36,399
the op control

808
00:29:36,399 --> 00:29:38,240
in that case we found that they were

809
00:29:38,240 --> 00:29:41,120
after the databases coming from those

810
00:29:41,120 --> 00:29:42,480
gambling websites

811
00:29:42,480 --> 00:29:44,720
so my personal opinion is that maybe

812
00:29:44,720 --> 00:29:46,799
it's more related to getting information

813
00:29:46,799 --> 00:29:48,960
about the customers of those websites

814
00:29:48,960 --> 00:29:49,919
maybe

815
00:29:49,919 --> 00:29:52,240
but honestly we don't have the the proof

816
00:29:52,240 --> 00:29:57,000
for that so this is like my own feeling

817
00:30:08,640 --> 00:30:10,880
maybe you should get a mic

818
00:30:10,880 --> 00:30:12,399
yeah i'm sorry for asking so many

819
00:30:12,399 --> 00:30:14,080
questions today but

820
00:30:14,080 --> 00:30:16,640
excellent guys um i was curious like you

821
00:30:16,640 --> 00:30:19,360
mentioned that they use this app that

822
00:30:19,360 --> 00:30:22,159
fake app bit get right yes and you you

823
00:30:22,159 --> 00:30:24,080
kind of said that it kind of suggests

824
00:30:24,080 --> 00:30:27,679
which uh where the the targets are right

825
00:30:27,679 --> 00:30:29,200
and bitget is the

826
00:30:29,200 --> 00:30:30,640
the one that has been developed maybe

827
00:30:30,640 --> 00:30:32,720
used in singapore somehow right

828
00:30:32,720 --> 00:30:33,600
i said

829
00:30:33,600 --> 00:30:36,240
so it's related to the the targeting but

830
00:30:36,240 --> 00:30:38,799
not i don't say bit get got targeted or

831
00:30:38,799 --> 00:30:40,559
actually we don't have the inflection

832
00:30:40,559 --> 00:30:43,039
vector for this this uh how it was

833
00:30:43,039 --> 00:30:44,480
delivered we don't know yeah i

834
00:30:44,480 --> 00:30:45,919
understand maybe not the not the

835
00:30:45,919 --> 00:30:47,760
developer of bit yet but you suggested

836
00:30:47,760 --> 00:30:49,600
that this is linked to singapore and

837
00:30:49,600 --> 00:30:51,840
maybe the targets could be there as well

838
00:30:51,840 --> 00:30:54,559
right so yeah like like in china in

839
00:30:54,559 --> 00:30:57,120
singapore uh online gambling is actually

840
00:30:57,120 --> 00:31:00,240
restricted it's a criminal offense

841
00:31:00,240 --> 00:31:03,039
so there's probably no none or maybe

842
00:31:03,039 --> 00:31:05,120
like low targets when it comes to online

843
00:31:05,120 --> 00:31:07,519
gambling however bitcat is uh the

844
00:31:07,519 --> 00:31:09,919
application used for uh cryptocurrency

845
00:31:09,919 --> 00:31:13,120
and crypto assets trading so i wonder if

846
00:31:13,120 --> 00:31:15,519
you sell any access to

847
00:31:15,519 --> 00:31:18,000
uh the cryptocurrencies businesses being

848
00:31:18,000 --> 00:31:20,159
targeted within this campaign or none at

849
00:31:20,159 --> 00:31:21,679
all

850
00:31:21,679 --> 00:31:24,640
honestly no we did not see that but but

851
00:31:24,640 --> 00:31:26,720
yeah we have limited telemetry and yeah

852
00:31:26,720 --> 00:31:28,880
maybe we missed something it cannot be

853
00:31:28,880 --> 00:31:33,559
excluded that they are directed to

854
00:31:34,720 --> 00:31:37,200
over there

855
00:31:38,960 --> 00:31:41,440
it's the last question

856
00:31:41,440 --> 00:31:44,159
hello really nice talk just

857
00:31:44,159 --> 00:31:45,360
one question when i've looked at the

858
00:31:45,360 --> 00:31:46,880
configuration that you show in the

859
00:31:46,880 --> 00:31:49,200
slides of some of the malware they were

860
00:31:49,200 --> 00:31:52,159
communicating directly outside of a

861
00:31:52,159 --> 00:31:54,880
network on some non-standard port

862
00:31:54,880 --> 00:31:57,840
which usually is not exactly usually is

863
00:31:57,840 --> 00:31:58,799
not

864
00:31:58,799 --> 00:32:01,440
something that will go nice in the

865
00:32:01,440 --> 00:32:02,799
company if you are

866
00:32:02,799 --> 00:32:06,000
you mean this screenshot yes exactly so

867
00:32:06,000 --> 00:32:08,559
is it targeting individual on

868
00:32:08,559 --> 00:32:10,559
non-protected network or is it

869
00:32:10,559 --> 00:32:13,120
targeting

870
00:32:13,120 --> 00:32:16,480
people inside the company

871
00:32:16,480 --> 00:32:18,720
like

872
00:32:19,600 --> 00:32:20,559
yeah

873
00:32:20,559 --> 00:32:22,880
we we don't know but we had no hits on

874
00:32:22,880 --> 00:32:23,679
this

875
00:32:23,679 --> 00:32:26,399
specific marble family so we we don't we

876
00:32:26,399 --> 00:32:28,240
don't found any alright hit in our

877
00:32:28,240 --> 00:32:30,880
telemetry so we cannot say uh who was

878
00:32:30,880 --> 00:32:32,320
targeted by this

879
00:32:32,320 --> 00:32:33,840
stuff but but it was delivered actually

880
00:32:33,840 --> 00:32:36,159
by um one of the infection vectors i

881
00:32:36,159 --> 00:32:38,799
mentioned so

882
00:32:38,880 --> 00:32:41,519
yeah but i think we are right if

883
00:32:41,519 --> 00:32:43,039
they must be targeting probably some

884
00:32:43,039 --> 00:32:44,799
network which

885
00:32:44,799 --> 00:32:46,720
doesn't like filter this on typical port

886
00:32:46,720 --> 00:32:49,039
because like i agree if these ports are

887
00:32:49,039 --> 00:32:50,640
blocked then

888
00:32:50,640 --> 00:32:53,600
it wouldn't work for them so

889
00:32:53,600 --> 00:32:54,320
it

890
00:32:54,320 --> 00:32:56,880
must be like it must confirm what you

891
00:32:56,880 --> 00:32:58,080
are saying

892
00:32:58,080 --> 00:33:00,320
okay

893
00:33:00,720 --> 00:33:04,760
okay thank you very much

