1
00:00:00,320 --> 00:00:01,760
alexis

2
00:00:01,760 --> 00:00:04,480
you have the floor

3
00:00:12,000 --> 00:00:13,840
all right thank you eric thank you all

4
00:00:13,840 --> 00:00:15,920
for being here on this early morning for

5
00:00:15,920 --> 00:00:17,279
the best talk of the conference

6
00:00:17,279 --> 00:00:19,439
apparently

7
00:00:19,439 --> 00:00:22,160
um cool so when i imagine air gap

8
00:00:22,160 --> 00:00:24,400
networks i see things just like this

9
00:00:24,400 --> 00:00:26,640
picture in my mind

10
00:00:26,640 --> 00:00:28,960
small castles totally cut off from the

11
00:00:28,960 --> 00:00:31,439
internet to protect the most sensitive

12
00:00:31,439 --> 00:00:34,719
stuff top secret documents power grids

13
00:00:34,719 --> 00:00:37,120
nuclear centrifuges maybe

14
00:00:37,120 --> 00:00:39,680
but whenever we analyze a new malware

15
00:00:39,680 --> 00:00:41,120
that seems to target these types of

16
00:00:41,120 --> 00:00:42,960
network not gonna lie there's a little

17
00:00:42,960 --> 00:00:45,120
bit of adrenaline rush because we know

18
00:00:45,120 --> 00:00:47,760
we're looking at uh something like a

19
00:00:47,760 --> 00:00:50,640
tool that an attacker devised to attack

20
00:00:50,640 --> 00:00:53,199
something of great value that probably

21
00:00:53,199 --> 00:00:55,520
went unnoticed for too long

22
00:00:55,520 --> 00:00:56,960
hold on yep

23
00:00:56,960 --> 00:00:59,120
so my name is alexey i'm a senior

24
00:00:59,120 --> 00:01:02,239
manager at eset i'm here with fakundo my

25
00:01:02,239 --> 00:01:04,159
manager yeah not yet

26
00:01:04,159 --> 00:01:06,479
a researcher in my team in my montreal

27
00:01:06,479 --> 00:01:07,840
team

28
00:01:07,840 --> 00:01:10,080
and we're here this morning to discuss

29
00:01:10,080 --> 00:01:11,840
how threat actors have been attacking

30
00:01:11,840 --> 00:01:13,760
air gap networks with malware

31
00:01:13,760 --> 00:01:15,360
specifically built

32
00:01:15,360 --> 00:01:16,799
to operate in these restricted

33
00:01:16,799 --> 00:01:18,479
environments

34
00:01:18,479 --> 00:01:20,960
you'd think this type of malware is

35
00:01:20,960 --> 00:01:23,680
pretty rare which is kind of true

36
00:01:23,680 --> 00:01:27,119
but in 2020 alone four new frameworks

37
00:01:27,119 --> 00:01:29,200
were exposed uh previously unknown

38
00:01:29,200 --> 00:01:31,439
frameworks and that's what prompted us

39
00:01:31,439 --> 00:01:33,439
to revisit this whole category of of

40
00:01:33,439 --> 00:01:35,439
malware and put all of them in

41
00:01:35,439 --> 00:01:37,119
perspective to try and understand how

42
00:01:37,119 --> 00:01:38,479
they work

43
00:01:38,479 --> 00:01:40,000
and see if we could come up with some

44
00:01:40,000 --> 00:01:41,520
effective detection and defense

45
00:01:41,520 --> 00:01:44,079
mechanisms and actually we published um

46
00:01:44,079 --> 00:01:45,600
the result of this study in a white

47
00:01:45,600 --> 00:01:47,200
paper a few months ago

48
00:01:47,200 --> 00:01:48,320
on our

49
00:01:48,320 --> 00:01:50,000
company blog

50
00:01:50,000 --> 00:01:52,320
and today we'll just summarize some of

51
00:01:52,320 --> 00:01:55,520
the key findings of that study

52
00:01:55,520 --> 00:01:58,799
and so first we needed to agree

53
00:01:58,799 --> 00:02:00,960
among among us what

54
00:02:00,960 --> 00:02:03,759
constitutes a malware that targets an

55
00:02:03,759 --> 00:02:05,119
air gap network

56
00:02:05,119 --> 00:02:06,799
because there are no predefined

57
00:02:06,799 --> 00:02:08,239
definition out there at least from a

58
00:02:08,239 --> 00:02:10,479
purely technical perspective so this is

59
00:02:10,479 --> 00:02:12,319
the definition we use for this for this

60
00:02:12,319 --> 00:02:14,800
research so it's a malware or a set of

61
00:02:14,800 --> 00:02:16,800
malware components acting together a

62
00:02:16,800 --> 00:02:17,920
framework

63
00:02:17,920 --> 00:02:19,920
that implements an offline covert

64
00:02:19,920 --> 00:02:22,000
communication mechanism between an air

65
00:02:22,000 --> 00:02:26,080
gap system and the attacker

66
00:02:26,080 --> 00:02:28,080
and we believe it all started a little

67
00:02:28,080 --> 00:02:30,080
over 15 years ago

68
00:02:30,080 --> 00:02:33,040
with apt-28 who developed and used a

69
00:02:33,040 --> 00:02:35,519
malware called usb steeler as early as

70
00:02:35,519 --> 00:02:37,840
in 2005

71
00:02:37,840 --> 00:02:40,560
and then followed 16 other frameworks

72
00:02:40,560 --> 00:02:42,480
developed by other threat actors for a

73
00:02:42,480 --> 00:02:45,040
grand total of 17

74
00:02:45,040 --> 00:02:46,560
up to this day

75
00:02:46,560 --> 00:02:48,400
and a few of these frameworks have been

76
00:02:48,400 --> 00:02:50,160
attributed with pretty high confidence

77
00:02:50,160 --> 00:02:52,239
to well-known threat actors such as dark

78
00:02:52,239 --> 00:02:55,519
hotel mustang panda

79
00:02:55,519 --> 00:02:57,280
but for others the attribution has been

80
00:02:57,280 --> 00:03:00,480
less clear-cut or flat-out controversial

81
00:03:00,480 --> 00:03:03,120
but regardless of the exact attribution

82
00:03:03,120 --> 00:03:05,280
we can really state that they were all

83
00:03:05,280 --> 00:03:07,360
product of nation state actors

84
00:03:07,360 --> 00:03:09,440
hence the title of our research 15 years

85
00:03:09,440 --> 00:03:11,920
of nation state efforts

86
00:03:11,920 --> 00:03:14,000
so in our analysis we studied

87
00:03:14,000 --> 00:03:17,519
all the existing reports are there and

88
00:03:17,519 --> 00:03:19,200
we compare them based on several

89
00:03:19,200 --> 00:03:22,159
properties with a specific focus on

90
00:03:22,159 --> 00:03:25,200
those that are really tied to air gap

91
00:03:25,200 --> 00:03:27,840
networks such as how does the malware

92
00:03:27,840 --> 00:03:30,480
actually get executed on a system that's

93
00:03:30,480 --> 00:03:32,480
on the air gap side of the network

94
00:03:32,480 --> 00:03:34,480
and how does the malware establish a

95
00:03:34,480 --> 00:03:37,920
communication channel with the attacker

96
00:03:37,920 --> 00:03:39,519
to effectively jump

97
00:03:39,519 --> 00:03:41,840
the the air gap and so for this we

98
00:03:41,840 --> 00:03:43,120
formalized

99
00:03:43,120 --> 00:03:46,080
the anatomy of air gap networks but from

100
00:03:46,080 --> 00:03:48,480
really the malware perspective

101
00:03:48,480 --> 00:03:49,760
and we came up with two distinct

102
00:03:49,760 --> 00:03:51,599
categories connected and offline

103
00:03:51,599 --> 00:03:53,760
frameworks so let me show you how that

104
00:03:53,760 --> 00:03:56,080
looks like

105
00:03:56,080 --> 00:03:57,840
so most frameworks belong to that

106
00:03:57,840 --> 00:04:00,560
category the connected frameworks those

107
00:04:00,560 --> 00:04:02,400
are built to provide fully remote

108
00:04:02,400 --> 00:04:04,239
end-to-end connectivity over the

109
00:04:04,239 --> 00:04:06,239
internet between the attacker and the

110
00:04:06,239 --> 00:04:09,040
compromised systems on the air gap side

111
00:04:09,040 --> 00:04:11,040
so we consider the target network as

112
00:04:11,040 --> 00:04:14,080
having two sides separated by an air gap

113
00:04:14,080 --> 00:04:15,760
so at the top you've got the connected

114
00:04:15,760 --> 00:04:18,478
side where the systems have internet

115
00:04:18,478 --> 00:04:19,680
connectivity

116
00:04:19,680 --> 00:04:21,600
and at the bottom is the air gap side

117
00:04:21,600 --> 00:04:23,199
that's where the attacker really wants

118
00:04:23,199 --> 00:04:24,720
to get to

119
00:04:24,720 --> 00:04:26,960
and that's a fairly typical setup

120
00:04:26,960 --> 00:04:28,720
because people who work with airgap

121
00:04:28,720 --> 00:04:30,240
system also need

122
00:04:30,240 --> 00:04:32,400
the internet to do their regular

123
00:04:32,400 --> 00:04:35,280
activity browsing the net getting emails

124
00:04:35,280 --> 00:04:37,680
and naturally that connected system will

125
00:04:37,680 --> 00:04:39,680
be the remote attacker's initial target

126
00:04:39,680 --> 00:04:42,400
the point of entry if you will so

127
00:04:42,400 --> 00:04:44,000
techniques used to gain control of that

128
00:04:44,000 --> 00:04:46,000
connected system are not so interesting

129
00:04:46,000 --> 00:04:47,520
they're similar to what we see in

130
00:04:47,520 --> 00:04:49,680
everyday attack what differs is the type

131
00:04:49,680 --> 00:04:52,080
of payload that gets deployed

132
00:04:52,080 --> 00:04:54,080
so one thing that payload will do is it

133
00:04:54,080 --> 00:04:56,479
will wait for a usb drive to be plugged

134
00:04:56,479 --> 00:04:59,199
in and it will weaponize it that usually

135
00:04:59,199 --> 00:05:01,280
means two things uh there was there

136
00:05:01,280 --> 00:05:02,720
there will be a malware component that

137
00:05:02,720 --> 00:05:05,199
will be copied on the drive and it's a

138
00:05:05,199 --> 00:05:07,120
component a sample

139
00:05:07,120 --> 00:05:09,039
that is meant to be really run on the

140
00:05:09,039 --> 00:05:12,000
air gap sign and there'll also be a an

141
00:05:12,000 --> 00:05:13,600
exit some sort of execution vector

142
00:05:13,600 --> 00:05:15,680
something to launch or trigger the

143
00:05:15,680 --> 00:05:18,479
malware to execute itself it can be an

144
00:05:18,479 --> 00:05:21,759
exploit decoy document uh trojanized

145
00:05:21,759 --> 00:05:24,320
software facundo here we'll be talking

146
00:05:24,320 --> 00:05:26,560
about that in a bit more details later

147
00:05:26,560 --> 00:05:28,240
on

148
00:05:28,240 --> 00:05:29,759
so when the drive

149
00:05:29,759 --> 00:05:31,680
the weaponized drive gets inserted in

150
00:05:31,680 --> 00:05:33,039
the air gap system that's when the

151
00:05:33,039 --> 00:05:34,720
execution vector

152
00:05:34,720 --> 00:05:37,280
triggers and the system becomes

153
00:05:37,280 --> 00:05:39,840
compromised

154
00:05:39,840 --> 00:05:41,919
and that malware running on the air gap

155
00:05:41,919 --> 00:05:42,960
side

156
00:05:42,960 --> 00:05:44,639
will typically do some automated

157
00:05:44,639 --> 00:05:46,720
reconnaissance and file stealing

158
00:05:46,720 --> 00:05:47,840
activity

159
00:05:47,840 --> 00:05:50,400
and copy all that data back on the usb

160
00:05:50,400 --> 00:05:53,680
drive in real real funky ways

161
00:05:53,680 --> 00:05:55,199
again facundo will give some some great

162
00:05:55,199 --> 00:05:58,000
details later

163
00:05:58,400 --> 00:06:01,039
so that's the exfiltration part from the

164
00:06:01,039 --> 00:06:02,960
air gap system but that's not enough the

165
00:06:02,960 --> 00:06:04,960
data needs still to reach the attacker

166
00:06:04,960 --> 00:06:08,319
right and for that the drive containing

167
00:06:08,319 --> 00:06:10,720
the data needs to be connected again on

168
00:06:10,720 --> 00:06:12,800
the connected system

169
00:06:12,800 --> 00:06:15,199
and the malware running there will

170
00:06:15,199 --> 00:06:17,759
automatically extract the data and relay

171
00:06:17,759 --> 00:06:20,560
it back to the attacker through

172
00:06:20,560 --> 00:06:22,400
via the internet through some some sort

173
00:06:22,400 --> 00:06:25,120
of c2 protocol

174
00:06:25,120 --> 00:06:26,960
and all these steps will take place

175
00:06:26,960 --> 00:06:29,120
automatically without any intervention

176
00:06:29,120 --> 00:06:31,199
from the attacker um some some

177
00:06:31,199 --> 00:06:34,160
frameworks are built just like that

178
00:06:34,160 --> 00:06:35,440
everything is hardcore that but other

179
00:06:35,440 --> 00:06:36,960
frameworks are more evolved and they

180
00:06:36,960 --> 00:06:39,360
actually have a communication protocol

181
00:06:39,360 --> 00:06:40,880
that allows the attacker to

182
00:06:40,880 --> 00:06:43,039
interactively

183
00:06:43,039 --> 00:06:44,800
exchange commands and responses with the

184
00:06:44,800 --> 00:06:46,400
isolated systems

185
00:06:46,400 --> 00:06:48,800
and so in these cases we'll really see

186
00:06:48,800 --> 00:06:50,639
two distinct protocols

187
00:06:50,639 --> 00:06:51,919
one that

188
00:06:51,919 --> 00:06:53,840
goes over the internet that will connect

189
00:06:53,840 --> 00:06:56,000
the attacker to the connected system and

190
00:06:56,000 --> 00:06:57,919
another one that is between the

191
00:06:57,919 --> 00:07:00,400
connected system and the air gap one

192
00:07:00,400 --> 00:07:02,960
so the connected system really acts as a

193
00:07:02,960 --> 00:07:06,080
proxy for the attacker

194
00:07:06,080 --> 00:07:08,560
in other rare cases um the attack

195
00:07:08,560 --> 00:07:11,039
scenario doesn't involve any connected

196
00:07:11,039 --> 00:07:14,319
system on the on the victim's side

197
00:07:14,319 --> 00:07:16,400
so we call these offline frameworks but

198
00:07:16,400 --> 00:07:18,000
you can think of them as mission

199
00:07:18,000 --> 00:07:19,520
impossible frameworks

200
00:07:19,520 --> 00:07:21,199
because in these cases everything

201
00:07:21,199 --> 00:07:22,319
indicates

202
00:07:22,319 --> 00:07:24,479
that there's a presence of an operator

203
00:07:24,479 --> 00:07:27,599
or or a collaborator on the ground to

204
00:07:27,599 --> 00:07:29,680
perform some of the critical actions

205
00:07:29,680 --> 00:07:31,759
such as weaponizing the usb drive or

206
00:07:31,759 --> 00:07:34,160
even physically carrying the drive to

207
00:07:34,160 --> 00:07:35,919
execute the payload and leave with with

208
00:07:35,919 --> 00:07:37,599
the stolen data

209
00:07:37,599 --> 00:07:39,520
and now i'll pass the mic to facundo

210
00:07:39,520 --> 00:07:41,280
we'll give some details about

211
00:07:41,280 --> 00:07:44,400
some pretty interesting https and just a

212
00:07:44,400 --> 00:07:46,400
quick note it's fakundo's first ever

213
00:07:46,400 --> 00:07:48,639
presentation so i hope you'll give him

214
00:07:48,639 --> 00:07:51,800
some support

215
00:07:54,170 --> 00:07:57,319
[Applause]

216
00:07:59,199 --> 00:08:01,759
so as alexis said we focus on the

217
00:08:01,759 --> 00:08:04,319
malware properties that are specific to

218
00:08:04,319 --> 00:08:06,800
attacking their gap networks

219
00:08:06,800 --> 00:08:08,160
we divided

220
00:08:08,160 --> 00:08:10,080
into three broad categories older

221
00:08:10,080 --> 00:08:12,800
techniques to execute the malicious code

222
00:08:12,800 --> 00:08:15,440
for the purpose of gaining a foothold in

223
00:08:15,440 --> 00:08:18,000
the network or conducting reconnaissance

224
00:08:18,000 --> 00:08:19,280
of

225
00:08:19,280 --> 00:08:22,319
potentially air-gapped systems

226
00:08:22,319 --> 00:08:25,120
these strip categories are

227
00:08:25,120 --> 00:08:28,160
automated execution non-automated

228
00:08:28,160 --> 00:08:30,720
execution and only triggered

229
00:08:30,720 --> 00:08:33,440
non-automated execution deliberately

230
00:08:33,440 --> 00:08:35,919
performed

231
00:08:35,919 --> 00:08:38,839
so let's begin with the automated

232
00:08:38,839 --> 00:08:42,399
execution exploiting the remote

233
00:08:42,399 --> 00:08:45,040
code execution vulnerabilities is one of

234
00:08:45,040 --> 00:08:47,839
the most effective techniques to execute

235
00:08:47,839 --> 00:08:50,959
the malware 11 such vulnerabilities have

236
00:08:50,959 --> 00:08:53,600
been discovered and patched in the last

237
00:08:53,600 --> 00:08:55,360
decade

238
00:08:55,360 --> 00:08:58,080
and only two have confirmed use in the

239
00:08:58,080 --> 00:08:59,360
wild

240
00:08:59,360 --> 00:09:01,839
the most famous one is without a doubt

241
00:09:01,839 --> 00:09:04,959
this tuxnet lnk exploit which only

242
00:09:04,959 --> 00:09:08,880
required a user to view an lnk

243
00:09:08,880 --> 00:09:11,680
files through windows explorer to

244
00:09:11,680 --> 00:09:15,120
trigger the vulnerability

245
00:09:16,560 --> 00:09:18,880
however it was later discovered by

246
00:09:18,880 --> 00:09:21,120
gasperski researchers that the equation

247
00:09:21,120 --> 00:09:23,200
group funny have been exploiting this

248
00:09:23,200 --> 00:09:25,040
vulnerability

249
00:09:25,040 --> 00:09:28,399
signs at least 2008

250
00:09:28,399 --> 00:09:30,880
and even after malware released a batch

251
00:09:30,880 --> 00:09:33,920
in 2010 funny gauss and mini flame

252
00:09:33,920 --> 00:09:36,480
continued to use it for

253
00:09:36,480 --> 00:09:39,120
five more years more or less

254
00:09:39,120 --> 00:09:40,959
but science the discovery of this

255
00:09:40,959 --> 00:09:42,720
malware no other

256
00:09:42,720 --> 00:09:45,040
base exploit based

257
00:09:45,040 --> 00:09:47,360
code execution has been observed in the

258
00:09:47,360 --> 00:09:51,839
wild to compromise our gap networks

259
00:09:52,320 --> 00:09:54,399
for our next category we take a step

260
00:09:54,399 --> 00:09:56,560
back from the complexity of software

261
00:09:56,560 --> 00:09:58,720
vulnerabilities and

262
00:09:58,720 --> 00:10:01,519
instead we focus on the human factor and

263
00:10:01,519 --> 00:10:04,240
deception tricks

264
00:10:04,240 --> 00:10:06,880
in this scenario the aim is to trick an

265
00:10:06,880 --> 00:10:09,600
unsuspecting user into executing the

266
00:10:09,600 --> 00:10:11,279
malicious code

267
00:10:11,279 --> 00:10:14,720
we have sell three techniques

268
00:10:15,519 --> 00:10:18,560
one is the abuse of windows autorun and

269
00:10:18,560 --> 00:10:21,200
how to play future

270
00:10:21,200 --> 00:10:23,680
the planting decoy files to lure the

271
00:10:23,680 --> 00:10:25,600
potential victims

272
00:10:25,600 --> 00:10:27,760
and rigging

273
00:10:27,760 --> 00:10:30,880
file existing files with malicious

274
00:10:30,880 --> 00:10:33,120
code for example

275
00:10:33,120 --> 00:10:35,120
that hotel ipt

276
00:10:35,120 --> 00:10:37,120
retro malware

277
00:10:37,120 --> 00:10:38,480
replaced

278
00:10:38,480 --> 00:10:42,160
the world office documents with rtf

279
00:10:42,160 --> 00:10:44,800
copies that contain an exploit that will

280
00:10:44,800 --> 00:10:47,440
launch the malware on the system

281
00:10:47,440 --> 00:10:51,040
and also run c by dark hotel would

282
00:10:51,040 --> 00:10:52,640
uh infect

283
00:10:52,640 --> 00:10:54,800
executable files in all of the drives

284
00:10:54,800 --> 00:10:57,760
that were available so that's a kind of

285
00:10:57,760 --> 00:11:01,279
old-school value stuff

286
00:11:01,279 --> 00:11:03,120
usb but now

287
00:11:03,120 --> 00:11:06,560
at least five of the 17 frameworks have

288
00:11:06,560 --> 00:11:09,920
abused the autorun and autoplay in one

289
00:11:09,920 --> 00:11:11,440
way or another

290
00:11:11,440 --> 00:11:15,120
usb stiller and agent btc as well as an

291
00:11:15,120 --> 00:11:18,640
earlier version of stuxnet

292
00:11:18,640 --> 00:11:21,040
that implemented an outrun file that

293
00:11:21,040 --> 00:11:23,760
contain both the executable and the

294
00:11:23,760 --> 00:11:27,279
outer run instructions

295
00:11:27,600 --> 00:11:30,399
it disabled the autoplay to force the

296
00:11:30,399 --> 00:11:33,440
user to go to my computer or use the

297
00:11:33,440 --> 00:11:35,519
entry in the navigation tree of windows

298
00:11:35,519 --> 00:11:37,279
explorer

299
00:11:37,279 --> 00:11:39,360
and with shell

300
00:11:39,360 --> 00:11:42,079
with the shell dll it add an additional

301
00:11:42,079 --> 00:11:43,839
open command

302
00:11:43,839 --> 00:11:46,079
to the context menu that executed

303
00:11:46,079 --> 00:11:48,959
stuxnet is the potential victim clicks

304
00:11:48,959 --> 00:11:53,600
or double clicks on the drive shortcut

305
00:11:53,600 --> 00:11:57,040
now mustang panda custom plugx malware

306
00:11:57,040 --> 00:11:59,200
uses a much simple trick

307
00:11:59,200 --> 00:12:02,560
it hides all the existing folders

308
00:12:02,560 --> 00:12:06,160
in the drive and creates lnk files

309
00:12:06,160 --> 00:12:09,040
for each one pointing to the malicious

310
00:12:09,040 --> 00:12:11,680
executable in the cycle being folder

311
00:12:11,680 --> 00:12:12,880
this technique

312
00:12:12,880 --> 00:12:15,120
kind of preserves the appearance that

313
00:12:15,120 --> 00:12:16,480
the drive is

314
00:12:16,480 --> 00:12:19,480
clean

315
00:12:25,440 --> 00:12:28,240
now perhaps the techniques under this

316
00:12:28,240 --> 00:12:31,680
last category are the most puzzling

317
00:12:31,680 --> 00:12:33,760
the analysis indicates that the

318
00:12:33,760 --> 00:12:37,440
attackers did not intend for a user to

319
00:12:37,440 --> 00:12:40,000
execute the malicious code but it

320
00:12:40,000 --> 00:12:43,519
appears that the concept of operation

321
00:12:43,519 --> 00:12:45,920
was to have a human asset covertly

322
00:12:45,920 --> 00:12:48,399
execute the malicious components in the

323
00:12:48,399 --> 00:12:50,639
target network

324
00:12:50,639 --> 00:12:54,000
now how do you think as malware research

325
00:12:54,000 --> 00:12:55,920
that we can

326
00:12:55,920 --> 00:13:00,360
identify such a scenario

327
00:13:06,240 --> 00:13:07,200
that's it

328
00:13:07,200 --> 00:13:10,399
let's take in this interesting case of

329
00:13:10,399 --> 00:13:13,920
usb corporate by the apt cycle that also

330
00:13:13,920 --> 00:13:17,839
known as goblin banner hey mark

331
00:13:19,760 --> 00:13:22,639
in this case the core the code running

332
00:13:22,639 --> 00:13:25,200
on the connected site responsible for

333
00:13:25,200 --> 00:13:28,240
weaponizing the designated usb drives

334
00:13:28,240 --> 00:13:30,000
copies the malware for the air gap

335
00:13:30,000 --> 00:13:32,959
system in a hidden folder on the drive

336
00:13:32,959 --> 00:13:35,920
without any execution vector

337
00:13:35,920 --> 00:13:38,480
the analysis indicates that the only

338
00:13:38,480 --> 00:13:41,040
possible way for that malware to execute

339
00:13:41,040 --> 00:13:43,440
it is someone knows exactly where the

340
00:13:43,440 --> 00:13:45,519
malware is hidden and launches it

341
00:13:45,519 --> 00:13:47,440
deliberately

342
00:13:47,440 --> 00:13:50,399
and there is no indication that it is

343
00:13:50,399 --> 00:13:53,839
part of an update mechanism on the air

344
00:13:53,839 --> 00:13:56,639
gap side

345
00:13:58,480 --> 00:13:59,760
now

346
00:13:59,760 --> 00:14:03,040
in 2015 we discovered a malware on a

347
00:14:03,040 --> 00:14:04,560
mission

348
00:14:04,560 --> 00:14:06,560
something like this

349
00:14:06,560 --> 00:14:09,120
we called it the usb tiff

350
00:14:09,120 --> 00:14:11,279
at the time we could not attribute this

351
00:14:11,279 --> 00:14:13,120
sophisticated malware to any known

352
00:14:13,120 --> 00:14:14,480
groups

353
00:14:14,480 --> 00:14:17,600
but it was until two years later when

354
00:14:17,600 --> 00:14:18,880
the ball

355
00:14:18,880 --> 00:14:20,959
seven leaks occurred that we began to

356
00:14:20,959 --> 00:14:23,040
suspect that this malware was part of

357
00:14:23,040 --> 00:14:24,480
the lambert's

358
00:14:24,480 --> 00:14:28,079
apt group toolkit

359
00:14:29,600 --> 00:14:32,320
new finance helped us to narrow down the

360
00:14:32,320 --> 00:14:35,040
candidates in in this couples of of the

361
00:14:35,040 --> 00:14:37,519
league to an implant code named

362
00:14:37,519 --> 00:14:39,519
margarita

363
00:14:39,519 --> 00:14:42,160
the description of of this system fits

364
00:14:42,160 --> 00:14:43,120
both

365
00:14:43,120 --> 00:14:44,959
this scenario and the capabilities that

366
00:14:44,959 --> 00:14:48,319
we found on usb

367
00:14:49,120 --> 00:14:51,680
the human asset let's call him tom will

368
00:14:51,680 --> 00:14:54,880
weaponize the usb and create

369
00:14:54,880 --> 00:14:57,040
circumstance

370
00:14:57,040 --> 00:14:58,800
in the target machine in which he will

371
00:14:58,800 --> 00:15:01,199
have to see certain files on the usb

372
00:15:01,199 --> 00:15:02,880
drive

373
00:15:02,880 --> 00:15:05,920
he will launch a notepad firefox so

374
00:15:05,920 --> 00:15:09,760
truecrypts uh trojanize applications

375
00:15:09,760 --> 00:15:12,720
and the software will in turn silently

376
00:15:12,720 --> 00:15:14,959
load the malware and in the background

377
00:15:14,959 --> 00:15:19,319
it prepared the data for exfiltration

378
00:15:24,880 --> 00:15:27,600
finally on that note uh getting the

379
00:15:27,600 --> 00:15:30,480
malware executed on the target just

380
00:15:30,480 --> 00:15:32,560
one part of the mission

381
00:15:32,560 --> 00:15:35,120
the collected information needs a way to

382
00:15:35,120 --> 00:15:37,040
leave the air gap system and safely

383
00:15:37,040 --> 00:15:38,959
reach the attackers

384
00:15:38,959 --> 00:15:40,800
we will now present

385
00:15:40,800 --> 00:15:42,800
what we consider some of the coolest

386
00:15:42,800 --> 00:15:45,279
ways that the attackers have managed to

387
00:15:45,279 --> 00:15:48,320
achieve this goal

388
00:15:49,120 --> 00:15:50,079
so

389
00:15:50,079 --> 00:15:52,480
going back to 2008

390
00:15:52,480 --> 00:15:55,519
funny the funny malware sets they were

391
00:15:55,519 --> 00:15:57,600
already too high for

392
00:15:57,600 --> 00:15:59,759
even some of the most sophisticated

393
00:15:59,759 --> 00:16:02,480
marvels that were developed after like

394
00:16:02,480 --> 00:16:06,880
say flame gauze project sauron

395
00:16:06,880 --> 00:16:07,759
and

396
00:16:07,759 --> 00:16:08,880
at the same

397
00:16:08,880 --> 00:16:11,600
the same time in the developed by groups

398
00:16:11,600 --> 00:16:13,279
that are at the same

399
00:16:13,279 --> 00:16:15,759
technical skill level

400
00:16:15,759 --> 00:16:18,399
one of the funny most interesting

401
00:16:18,399 --> 00:16:21,120
feature is the capability to create a

402
00:16:21,120 --> 00:16:22,399
hidden storage

403
00:16:22,399 --> 00:16:25,120
space in the usb drive that use a fat

404
00:16:25,120 --> 00:16:27,279
file system remember that this malware

405
00:16:27,279 --> 00:16:30,560
is a little bit old too

406
00:16:30,639 --> 00:16:32,560
they achieved this by creating a

407
00:16:32,560 --> 00:16:35,199
directory entry with a combination of

408
00:16:35,199 --> 00:16:38,079
two attributes that make it

409
00:16:38,079 --> 00:16:39,839
uh

410
00:16:39,839 --> 00:16:42,160
that make it uh basically

411
00:16:42,160 --> 00:16:44,240
invalid for for the parcel so when the

412
00:16:44,240 --> 00:16:47,120
windows find such an entry it it is

413
00:16:47,120 --> 00:16:49,360
ignored and essentially it is invisible

414
00:16:49,360 --> 00:16:52,639
to to the user and basically to any

415
00:16:52,639 --> 00:16:55,199
other tool

416
00:16:55,920 --> 00:16:58,399
this entry contains an offset to located

417
00:16:58,399 --> 00:17:01,040
an allocated space of almost one

418
00:17:01,040 --> 00:17:03,680
megabyte in size which contains the

419
00:17:03,680 --> 00:17:06,480
collected information as well as both

420
00:17:06,480 --> 00:17:09,679
the the commands the modules and stolen

421
00:17:09,679 --> 00:17:12,880
data and the result of executing these

422
00:17:12,880 --> 00:17:15,360
commands

423
00:17:15,679 --> 00:17:18,480
it's also worth noting that funny the

424
00:17:18,480 --> 00:17:21,679
flame sorry uses a similar trick but

425
00:17:21,679 --> 00:17:24,799
instead of creating this directory it

426
00:17:24,799 --> 00:17:28,000
directly creates a file with an invalid

427
00:17:28,000 --> 00:17:31,200
name that windows ignores because the

428
00:17:31,200 --> 00:17:34,640
invalid name is just the dot

429
00:17:34,640 --> 00:17:37,360
so that's nice that's a more optimized

430
00:17:37,360 --> 00:17:39,760
technique

431
00:17:39,760 --> 00:17:41,440
now

432
00:17:41,440 --> 00:17:43,679
ramsay is a malware that we discover in

433
00:17:43,679 --> 00:17:46,559
2020 and we attribute to their hotel as

434
00:17:46,559 --> 00:17:48,240
i said

435
00:17:48,240 --> 00:17:49,679
the attackers came up with a

436
00:17:49,679 --> 00:17:52,080
decentralized way to spread the the

437
00:17:52,080 --> 00:17:54,160
stolen information around the system

438
00:17:54,160 --> 00:17:56,640
drives as well as the network and

439
00:17:56,640 --> 00:17:57,760
removable

440
00:17:57,760 --> 00:18:00,320
drives

441
00:18:00,320 --> 00:18:03,200
when one c is executed into a following

442
00:18:03,200 --> 00:18:05,600
process it will hook the close handle

443
00:18:05,600 --> 00:18:09,440
api and when the hook is executed

444
00:18:09,440 --> 00:18:11,840
it checks for the extension of the file

445
00:18:11,840 --> 00:18:15,039
that was opened by the process

446
00:18:15,039 --> 00:18:17,760
if it is a word document it will open a

447
00:18:17,760 --> 00:18:21,200
special container that encapsulates

448
00:18:21,200 --> 00:18:23,600
all the collected and compressed

449
00:18:23,600 --> 00:18:25,679
information

450
00:18:25,679 --> 00:18:28,640
this same container is also appended to

451
00:18:28,640 --> 00:18:30,960
every word document that is found in the

452
00:18:30,960 --> 00:18:32,799
available drive

453
00:18:32,799 --> 00:18:34,640
currency

454
00:18:34,640 --> 00:18:37,200
follows the same philosophy to receive

455
00:18:37,200 --> 00:18:38,960
commands

456
00:18:38,960 --> 00:18:41,200
it will look for other types of files

457
00:18:41,200 --> 00:18:43,520
which might potentially have

458
00:18:43,520 --> 00:18:45,919
appended another type of

459
00:18:45,919 --> 00:18:48,640
con container with instruction to

460
00:18:48,640 --> 00:18:49,679
execute

461
00:18:49,679 --> 00:18:51,840
certain modules or

462
00:18:51,840 --> 00:18:53,919
batch commands in the system

463
00:18:53,919 --> 00:18:56,480
at a specific

464
00:18:56,480 --> 00:19:00,000
target machine based on the gu id that

465
00:19:00,000 --> 00:19:04,640
is only unique to every infected machine

466
00:19:04,640 --> 00:19:07,600
now to alex

467
00:19:09,520 --> 00:19:11,440
all right so how to defend against those

468
00:19:11,440 --> 00:19:13,919
those types of attacks um so there are a

469
00:19:13,919 --> 00:19:16,320
couple of proposals in our paper but if

470
00:19:16,320 --> 00:19:18,320
you have to remember only one thing from

471
00:19:18,320 --> 00:19:19,440
our talk

472
00:19:19,440 --> 00:19:22,240
is that it's always always always about

473
00:19:22,240 --> 00:19:25,760
usb drives okay there has been no

474
00:19:25,760 --> 00:19:28,160
publicly reported cases where any other

475
00:19:28,160 --> 00:19:30,000
physical medium

476
00:19:30,000 --> 00:19:32,640
was used to jump the the air gap no

477
00:19:32,640 --> 00:19:35,280
electromagnetic electromagnetic signals

478
00:19:35,280 --> 00:19:37,440
no acoustic signals nothing is authentic

479
00:19:37,440 --> 00:19:40,720
like that so just usb drives

480
00:19:40,720 --> 00:19:42,880
so how to make it harder for attackers

481
00:19:42,880 --> 00:19:44,080
to use that

482
00:19:44,080 --> 00:19:46,160
those drives to compromise air gap

483
00:19:46,160 --> 00:19:47,440
networks so

484
00:19:47,440 --> 00:19:49,919
obviously physically disabling usb

485
00:19:49,919 --> 00:19:51,520
drives on the systems that don't need

486
00:19:51,520 --> 00:19:53,840
that don't require

487
00:19:53,840 --> 00:19:55,919
that that connector

488
00:19:55,919 --> 00:19:58,240
for the remaining systems where usb is

489
00:19:58,240 --> 00:19:59,919
necessary

490
00:19:59,919 --> 00:20:01,280
there are some policies that can be

491
00:20:01,280 --> 00:20:03,600
implemented in windows

492
00:20:03,600 --> 00:20:05,600
to disable file execution

493
00:20:05,600 --> 00:20:07,520
when they come from remove removable

494
00:20:07,520 --> 00:20:09,440
drives

495
00:20:09,440 --> 00:20:12,000
and we can also think of implementing a

496
00:20:12,000 --> 00:20:14,240
like a middle box that would sanitize

497
00:20:14,240 --> 00:20:16,240
usb drives whenever they go back and

498
00:20:16,240 --> 00:20:17,360
forth

499
00:20:17,360 --> 00:20:20,880
between the the two network sides

500
00:20:20,880 --> 00:20:22,799
and that that station could for example

501
00:20:22,799 --> 00:20:25,679
remove unwanted file file types like lnk

502
00:20:25,679 --> 00:20:28,320
and autorun files and perform an

503
00:20:28,320 --> 00:20:30,480
anti-malware scan

504
00:20:30,480 --> 00:20:33,280
of course that won't prevent

505
00:20:33,280 --> 00:20:36,559
an attacker on on the ground to just not

506
00:20:36,559 --> 00:20:39,039
or to bypass that policy uh but still

507
00:20:39,039 --> 00:20:42,159
that uh that box would um would really

508
00:20:42,159 --> 00:20:44,480
interfere with uh lots of attack tactics

509
00:20:44,480 --> 00:20:49,120
we've seen uh used uh even recently

510
00:20:49,120 --> 00:20:51,520
so that's how to defend um and since

511
00:20:51,520 --> 00:20:54,320
many of us here are malware analysts um

512
00:20:54,320 --> 00:20:56,480
i also wanted to share some some quick

513
00:20:56,480 --> 00:20:58,799
tips or things to keep in mind uh when

514
00:20:58,799 --> 00:21:01,600
analyzing that type of malware

515
00:21:01,600 --> 00:21:03,520
and so remember that most frameworks are

516
00:21:03,520 --> 00:21:06,000
connected and we'll have two distinct

517
00:21:06,000 --> 00:21:07,919
components uh one running on the

518
00:21:07,919 --> 00:21:09,919
connected side one on the air gap side

519
00:21:09,919 --> 00:21:11,679
um so to get a full picture of the

520
00:21:11,679 --> 00:21:13,760
attack you'll need to find and analyze

521
00:21:13,760 --> 00:21:15,919
two different samples so if you only

522
00:21:15,919 --> 00:21:17,840
have one chances are you're missing the

523
00:21:17,840 --> 00:21:20,640
other one and you should look for it

524
00:21:20,640 --> 00:21:24,000
and when you analyze one or one sample

525
00:21:24,000 --> 00:21:25,760
you should try and determine quickly

526
00:21:25,760 --> 00:21:28,159
which side the component is meant to be

527
00:21:28,159 --> 00:21:31,679
executed in and understanding that early

528
00:21:31,679 --> 00:21:33,440
on in the analysis will really help

529
00:21:33,440 --> 00:21:35,919
focus your work and you'll have a better

530
00:21:35,919 --> 00:21:37,760
understanding of of the whole attack

531
00:21:37,760 --> 00:21:40,159
much much faster

532
00:21:40,159 --> 00:21:41,760
now to identify a connected side

533
00:21:41,760 --> 00:21:43,039
component

534
00:21:43,039 --> 00:21:44,799
you can look for their three main

535
00:21:44,799 --> 00:21:47,360
properties so the first one will be a

536
00:21:47,360 --> 00:21:49,520
function to to go online and communicate

537
00:21:49,520 --> 00:21:52,000
with a c2 obviously that's not really

538
00:21:52,000 --> 00:21:53,120
specific

539
00:21:53,120 --> 00:21:54,559
but at least it's going to tell you that

540
00:21:54,559 --> 00:21:55,360
that

541
00:21:55,360 --> 00:21:57,840
sample is not meant to be run on the air

542
00:21:57,840 --> 00:22:00,240
gap side

543
00:22:00,240 --> 00:22:02,000
second property there will be code to

544
00:22:02,000 --> 00:22:04,880
weaponize usb drives

545
00:22:04,880 --> 00:22:06,320
but careful

546
00:22:06,320 --> 00:22:07,840
don't jump to conclusions because you

547
00:22:07,840 --> 00:22:09,919
just you might just be analyzing a

548
00:22:09,919 --> 00:22:12,400
simple usb worm that has nothing to do

549
00:22:12,400 --> 00:22:15,280
with air gap system

550
00:22:15,280 --> 00:22:18,080
and finally there will be code to read

551
00:22:18,080 --> 00:22:20,799
the content of usb drives to extract the

552
00:22:20,799 --> 00:22:22,799
exfiltrated data and then relay it back

553
00:22:22,799 --> 00:22:25,200
to the attacker

554
00:22:25,200 --> 00:22:27,600
as for the airgap side component the

555
00:22:27,600 --> 00:22:29,280
main thing that will be present there is

556
00:22:29,280 --> 00:22:31,200
code that will perform reconnaissance

557
00:22:31,200 --> 00:22:33,679
and search for files to steal and of

558
00:22:33,679 --> 00:22:35,919
course code that will write that data

559
00:22:35,919 --> 00:22:38,480
back on the usb drive

560
00:22:38,480 --> 00:22:40,320
and one thing that probably won't be

561
00:22:40,320 --> 00:22:42,480
there is code that communicates with the

562
00:22:42,480 --> 00:22:44,240
internet

563
00:22:44,240 --> 00:22:46,799
and all that seems pretty um pretty

564
00:22:46,799 --> 00:22:48,320
normal pretty basic but i still wanted

565
00:22:48,320 --> 00:22:51,280
to uh to mention it today because so we

566
00:22:51,280 --> 00:22:53,679
we read what 20 20 something reports

567
00:22:53,679 --> 00:22:56,240
fakunder and i and in many cases some of

568
00:22:56,240 --> 00:22:58,400
those key properties of the samples that

569
00:22:58,400 --> 00:23:01,440
were described uh were just not

570
00:23:01,440 --> 00:23:04,320
not described and it made the whole

571
00:23:04,320 --> 00:23:05,840
understanding of how the attack took

572
00:23:05,840 --> 00:23:07,600
place pretty confusing

573
00:23:07,600 --> 00:23:10,159
so if you're about to write a report

574
00:23:10,159 --> 00:23:11,600
i encourage you to pay attention to

575
00:23:11,600 --> 00:23:13,280
these components into and to make sure

576
00:23:13,280 --> 00:23:16,720
that they are described in your analysis

577
00:23:16,720 --> 00:23:18,320
um and

578
00:23:18,320 --> 00:23:19,440
in closing

579
00:23:19,440 --> 00:23:22,720
so malware that attacks air gap networks

580
00:23:22,720 --> 00:23:24,880
are challenging to analyze not only from

581
00:23:24,880 --> 00:23:26,799
the technical perspective but also

582
00:23:26,799 --> 00:23:30,240
because samples are hard to come by

583
00:23:30,240 --> 00:23:33,120
air gap systems don't always

584
00:23:33,120 --> 00:23:35,600
have nt malware solutions running and if

585
00:23:35,600 --> 00:23:36,720
they do

586
00:23:36,720 --> 00:23:38,320
by definition they won't be sending

587
00:23:38,320 --> 00:23:40,400
telemetry back to vendors which creates

588
00:23:40,400 --> 00:23:42,799
a huge blind spot for us

589
00:23:42,799 --> 00:23:45,679
and at the same time attacks happen in

590
00:23:45,679 --> 00:23:47,919
really sensitive networks

591
00:23:47,919 --> 00:23:51,120
so victims are not likely to share

592
00:23:51,120 --> 00:23:53,360
information with with researchers

593
00:23:53,360 --> 00:23:54,880
or to make any

594
00:23:54,880 --> 00:23:58,400
details of any attack public

595
00:23:58,400 --> 00:24:00,799
and an example of samples that are hard

596
00:24:00,799 --> 00:24:02,880
to come by that's

597
00:24:02,880 --> 00:24:05,760
a good example is ramsey

598
00:24:05,760 --> 00:24:07,679
the research started by

599
00:24:07,679 --> 00:24:10,799
spotting a trojan eye 7-zip installer on

600
00:24:10,799 --> 00:24:13,760
virustotal and we eventually determined

601
00:24:13,760 --> 00:24:15,600
that that was the component

602
00:24:15,600 --> 00:24:18,960
meant to run on the air gap side and

603
00:24:18,960 --> 00:24:20,400
we start looking for the missing

604
00:24:20,400 --> 00:24:21,840
component the other one that would be

605
00:24:21,840 --> 00:24:23,360
running on the connected side and that

606
00:24:23,360 --> 00:24:25,840
would parse the ramsey containers

607
00:24:25,840 --> 00:24:27,520
extract the stolen data and give it back

608
00:24:27,520 --> 00:24:29,440
to the attacker and

609
00:24:29,440 --> 00:24:30,960
this is a real screenshot of our

610
00:24:30,960 --> 00:24:32,480
internal wiki

611
00:24:32,480 --> 00:24:35,279
and that task remains incomplete uh two

612
00:24:35,279 --> 00:24:36,480
years after

613
00:24:36,480 --> 00:24:38,400
after that that work

614
00:24:38,400 --> 00:24:40,000
so who knows maybe that sample will

615
00:24:40,000 --> 00:24:42,159
eventually come up and we'll figure out

616
00:24:42,159 --> 00:24:44,880
how dark hotel really operates

617
00:24:44,880 --> 00:24:46,960
the ramsey framework

618
00:24:46,960 --> 00:24:49,279
so thank you all for your attention if

619
00:24:49,279 --> 00:24:50,880
you ever come across

620
00:24:50,880 --> 00:24:52,720
some some some malware you think is

621
00:24:52,720 --> 00:24:54,240
targeting air gap networks don't

622
00:24:54,240 --> 00:24:56,480
hesitate to reach out to us

623
00:24:56,480 --> 00:24:58,840
i assure you we'll honor any tlp you

624
00:24:58,840 --> 00:25:00,400
decide

625
00:25:00,400 --> 00:25:02,000
and i know recently that there has been

626
00:25:02,000 --> 00:25:05,679
a few incidents about tlp being breached

627
00:25:05,679 --> 00:25:08,480
and some some trusted relationships were

628
00:25:08,480 --> 00:25:10,080
a bit shaken

629
00:25:10,080 --> 00:25:11,919
and it would be easy to just decide to

630
00:25:11,919 --> 00:25:13,440
stop sharing all together it's much

631
00:25:13,440 --> 00:25:15,440
simpler but that would really be a

632
00:25:15,440 --> 00:25:17,120
mistake i think we just need even more

633
00:25:17,120 --> 00:25:19,279
information sharing than ever

634
00:25:19,279 --> 00:25:21,679
so there are many trustworthy people out

635
00:25:21,679 --> 00:25:24,240
there trustworthy organizations so just

636
00:25:24,240 --> 00:25:26,850
don't give up just yet thank you

637
00:25:26,850 --> 00:25:36,480
[Applause]

638
00:25:36,480 --> 00:25:39,520
we got a fan here

639
00:25:40,080 --> 00:25:43,639
so you have a question

640
00:25:50,960 --> 00:25:54,960
thank you hi pedro from midside so great

641
00:25:54,960 --> 00:25:57,440
presentation thank you um

642
00:25:57,440 --> 00:25:59,840
so there are and other many uh

643
00:25:59,840 --> 00:26:02,400
fascinating ways to exfiltrate you know

644
00:26:02,400 --> 00:26:05,120
data from air gap systems such as

645
00:26:05,120 --> 00:26:06,400
acoustic

646
00:26:06,400 --> 00:26:08,720
uh electromagnetic emissions air hopper

647
00:26:08,720 --> 00:26:11,200
like like you said why do you think

648
00:26:11,200 --> 00:26:13,600
we don't see that in the in the wild you

649
00:26:13,600 --> 00:26:14,880
think it's

650
00:26:14,880 --> 00:26:17,360
not really uh from the operational point

651
00:26:17,360 --> 00:26:19,760
of view working or we just don't find

652
00:26:19,760 --> 00:26:22,480
those samples

653
00:26:22,480 --> 00:26:24,799
i can venture and answer um your guess

654
00:26:24,799 --> 00:26:28,080
is as good as mine um

655
00:26:28,400 --> 00:26:30,080
probably there are some i mean we're

656
00:26:30,080 --> 00:26:31,360
just seeing the tip of the iceberg

657
00:26:31,360 --> 00:26:34,720
what's being reported publicly right um

658
00:26:34,720 --> 00:26:37,120
but on the other hand those techniques

659
00:26:37,120 --> 00:26:38,880
they still have to be implemented by by

660
00:26:38,880 --> 00:26:41,760
malware right so

661
00:26:41,760 --> 00:26:43,600
we have quite a

662
00:26:43,600 --> 00:26:46,159
i i think we have a good visibility as a

663
00:26:46,159 --> 00:26:49,600
as a global community in malware and

664
00:26:49,600 --> 00:26:51,520
malware specifically and if if we don't

665
00:26:51,520 --> 00:26:52,799
discover it today we're going to

666
00:26:52,799 --> 00:26:56,000
discover it later on

667
00:26:56,000 --> 00:26:58,159
but but the point i wanted to make is

668
00:26:58,159 --> 00:26:59,919
that

669
00:26:59,919 --> 00:27:01,600
those techniques you mentioned

670
00:27:01,600 --> 00:27:03,919
they make the headlines they make great

671
00:27:03,919 --> 00:27:05,279
presentations at black hat and

672
00:27:05,279 --> 00:27:07,679
everything and i think there's a lot of

673
00:27:07,679 --> 00:27:09,279
attention being given to those

674
00:27:09,279 --> 00:27:10,480
techniques

675
00:27:10,480 --> 00:27:12,080
even though they haven't been seen in

676
00:27:12,080 --> 00:27:13,840
the wall and even though even in recent

677
00:27:13,840 --> 00:27:15,039
years

678
00:27:15,039 --> 00:27:17,120
everything is going through usb because

679
00:27:17,120 --> 00:27:19,039
usb works

680
00:27:19,039 --> 00:27:21,840
i assume

681
00:27:22,799 --> 00:27:24,640
so before like implementing a big

682
00:27:24,640 --> 00:27:27,120
faraday cage around your air gap systems

683
00:27:27,120 --> 00:27:28,720
make sure you tackle the usb problem

684
00:27:28,720 --> 00:27:30,880
first and then move on to something more

685
00:27:30,880 --> 00:27:33,880
complicated

686
00:27:42,960 --> 00:27:45,360
thank you quick question how many of the

687
00:27:45,360 --> 00:27:49,039
samples were targeted on on ot or scada

688
00:27:49,039 --> 00:27:51,919
systems out of the 17 because a number

689
00:27:51,919 --> 00:27:53,360
of the air-gapped systems or many of

690
00:27:53,360 --> 00:27:54,960
them you will have the top secret blah

691
00:27:54,960 --> 00:27:57,279
blah blah but another number of air gap

692
00:27:57,279 --> 00:27:58,799
tip systems are the ones you spoke with

693
00:27:58,799 --> 00:28:00,640
the power grids or power grid maybe not

694
00:28:00,640 --> 00:28:03,360
but production and so how many of the

695
00:28:03,360 --> 00:28:05,600
samples were targeted on ot or scada

696
00:28:05,600 --> 00:28:06,799
systems

697
00:28:06,799 --> 00:28:07,840
just one

698
00:28:07,840 --> 00:28:08,640
i think

699
00:28:08,640 --> 00:28:09,840
i think it's just

700
00:28:09,840 --> 00:28:12,880
just sucksnet the so the goal of all the

701
00:28:12,880 --> 00:28:15,840
16 others were clearly espionage file

702
00:28:15,840 --> 00:28:18,240
stealing

703
00:28:18,240 --> 00:28:20,240
only stuxnet had

704
00:28:20,240 --> 00:28:22,159
let's say an operational

705
00:28:22,159 --> 00:28:24,000
mission

706
00:28:24,000 --> 00:28:26,000
although there was some file stealing

707
00:28:26,000 --> 00:28:27,600
capability

708
00:28:27,600 --> 00:28:30,840
but yeah

709
00:28:35,120 --> 00:28:38,000
another question

710
00:28:40,159 --> 00:28:43,039
vitaly left

711
00:28:51,440 --> 00:28:53,679
um could we say that these attacks are

712
00:28:53,679 --> 00:28:58,919
closely aligned to insider attacks

713
00:29:00,000 --> 00:29:03,279
so for the cases where the um

714
00:29:03,279 --> 00:29:05,440
the execution vector doesn't exist like

715
00:29:05,440 --> 00:29:07,200
the one facundo mentioned where the

716
00:29:07,200 --> 00:29:09,600
malware meant to be executed is hidden

717
00:29:09,600 --> 00:29:12,399
and there's like there's no way

718
00:29:12,399 --> 00:29:14,320
a normal user would know where to look

719
00:29:14,320 --> 00:29:17,360
like would fall for it and execute it

720
00:29:17,360 --> 00:29:18,720
inadvertently

721
00:29:18,720 --> 00:29:21,279
in those cases yeah an insider job would

722
00:29:21,279 --> 00:29:22,880
really make sense

723
00:29:22,880 --> 00:29:25,360
but that's not the majority of the cases

724
00:29:25,360 --> 00:29:26,480
especially

725
00:29:26,480 --> 00:29:28,080
for the frameworks that are connected

726
00:29:28,080 --> 00:29:29,760
where the whole chain starts from

727
00:29:29,760 --> 00:29:32,399
remotely and then there's a

728
00:29:32,399 --> 00:29:35,440
usb drive getting weaponized

729
00:29:35,440 --> 00:29:37,440
so there are some cases yeah

730
00:29:37,440 --> 00:29:40,080
it's pretty clear that there's someone

731
00:29:40,080 --> 00:29:42,399
in the inside or someone on the outside

732
00:29:42,399 --> 00:29:43,360
but kind of

733
00:29:43,360 --> 00:29:47,799
breaking in and doing something bad

734
00:29:56,399 --> 00:29:58,480
uh follow one question

735
00:29:58,480 --> 00:30:00,720
what are the are there trends in the

736
00:30:00,720 --> 00:30:02,799
data targeting mechanisms

737
00:30:02,799 --> 00:30:05,440
so once you have this autonomous malware

738
00:30:05,440 --> 00:30:07,279
on the air gap system it needs to

739
00:30:07,279 --> 00:30:08,480
retrieve

740
00:30:08,480 --> 00:30:10,640
data so are there data types that they

741
00:30:10,640 --> 00:30:12,240
typically go after how does the

742
00:30:12,240 --> 00:30:14,159
targeting system work do you see trends

743
00:30:14,159 --> 00:30:16,399
in that

744
00:30:19,039 --> 00:30:22,640
uh yeah it's mostly the basic basic

745
00:30:22,640 --> 00:30:25,919
stuff they'll go after documents and in

746
00:30:25,919 --> 00:30:29,200
some special cases they go after like

747
00:30:29,200 --> 00:30:32,080
autocad files and that that type of

748
00:30:32,080 --> 00:30:33,279
stuff

749
00:30:33,279 --> 00:30:35,679
mainly there is no nothing much

750
00:30:35,679 --> 00:30:37,919
surprising though it's let's say just

751
00:30:37,919 --> 00:30:40,320
like other regular malware trying to

752
00:30:40,320 --> 00:30:43,919
siphon all of the data that they can

753
00:30:43,919 --> 00:30:46,480
and in in some cases the list of like

754
00:30:46,480 --> 00:30:49,039
file extensions would be hard-coded and

755
00:30:49,039 --> 00:30:51,440
there's no other way for the so

756
00:30:51,440 --> 00:30:53,600
basically the attacker knew in advance

757
00:30:53,600 --> 00:30:55,440
what files they wanted to go

758
00:30:55,440 --> 00:30:58,159
to go for and and nothing more and um

759
00:30:58,159 --> 00:31:00,320
like the case of a usb

760
00:31:00,320 --> 00:31:02,720
steeler or so many usb

761
00:31:02,720 --> 00:31:05,360
the the the apt-28 one

762
00:31:05,360 --> 00:31:06,880
there was no way for the attacker to

763
00:31:06,880 --> 00:31:09,279
request additional file extensions it

764
00:31:09,279 --> 00:31:11,919
was a one-time thing these are the files

765
00:31:11,919 --> 00:31:16,360
extract everything and move on

766
00:31:19,440 --> 00:31:23,039
last question yeah up there

767
00:31:26,720 --> 00:31:28,000
thanks a lot for the presentation

768
00:31:28,000 --> 00:31:30,159
sarkari head of sir to you so just a

769
00:31:30,159 --> 00:31:32,399
comment on the defense so one thing i

770
00:31:32,399 --> 00:31:33,919
have seen implemented

771
00:31:33,919 --> 00:31:35,919
to also try to defeat kind of like the

772
00:31:35,919 --> 00:31:37,519
insider threat

773
00:31:37,519 --> 00:31:40,399
is basically um when you like the

774
00:31:40,399 --> 00:31:42,799
operator takes the usb drive from the

775
00:31:42,799 --> 00:31:44,960
connected system he connects it to he

776
00:31:44,960 --> 00:31:46,799
has to connect it to a different system

777
00:31:46,799 --> 00:31:48,640
running for example linux

778
00:31:48,640 --> 00:31:50,960
which kind of like images the drive then

779
00:31:50,960 --> 00:31:53,760
pass it on to the air gap it system

780
00:31:53,760 --> 00:31:55,440
and then afterward he has to plug it

781
00:31:55,440 --> 00:31:58,080
back to the linux system again another

782
00:31:58,080 --> 00:32:00,720
image and also see if there are

783
00:32:00,720 --> 00:32:02,640
elements that have been copied from the

784
00:32:02,640 --> 00:32:04,640
air gapped system and then plug it back

785
00:32:04,640 --> 00:32:06,240
to the connected system

786
00:32:06,240 --> 00:32:07,120
and

787
00:32:07,120 --> 00:32:09,200
if the operator does not do that so

788
00:32:09,200 --> 00:32:10,960
every day at the end of the day

789
00:32:10,960 --> 00:32:13,039
there is a sysadmin who comes to the

790
00:32:13,039 --> 00:32:14,960
linux box and check

791
00:32:14,960 --> 00:32:16,799
also they have systems on the connected

792
00:32:16,799 --> 00:32:19,039
system in the air gap system to match

793
00:32:19,039 --> 00:32:21,200
the three entries and ensure there is

794
00:32:21,200 --> 00:32:22,640
kind of like no gaps or something that

795
00:32:22,640 --> 00:32:24,720
has been installed so this is kind of

796
00:32:24,720 --> 00:32:28,080
like a variant on the anti malware or

797
00:32:28,080 --> 00:32:29,600
sanitizer

798
00:32:29,600 --> 00:32:31,039
that makes total sense and that would

799
00:32:31,039 --> 00:32:33,679
break like probably all the attacks that

800
00:32:33,679 --> 00:32:36,240
that we that have been documented yeah

801
00:32:36,240 --> 00:32:38,880
so i see it implemented

802
00:32:38,880 --> 00:32:41,840
once um in in real life and i think i

803
00:32:41,840 --> 00:32:43,760
found that very neat it is very neat

804
00:32:43,760 --> 00:32:44,880
yeah thank you for sharing you're

805
00:32:44,880 --> 00:32:47,200
welcome

806
00:32:47,440 --> 00:32:48,799
thank you

807
00:32:48,799 --> 00:32:50,320
another question

808
00:32:50,320 --> 00:32:51,919
one two

809
00:32:51,919 --> 00:32:56,519
three okay thank you very much

