1
00:00:00,080 --> 00:00:02,159
hello everyone the talk i'm going to

2
00:00:02,159 --> 00:00:04,720
present today is titled detecting and

3
00:00:04,720 --> 00:00:07,040
disrupting compromised devices based on

4
00:00:07,040 --> 00:00:08,800
their communication patterns to

5
00:00:08,800 --> 00:00:11,920
legitimate web services

6
00:00:11,920 --> 00:00:14,160
first i'll present myself my name is

7
00:00:14,160 --> 00:00:16,560
hans aban and i'm a data scientist lead

8
00:00:16,560 --> 00:00:18,560
for akamai technologies

9
00:00:18,560 --> 00:00:21,039
my research interests are user behavior

10
00:00:21,039 --> 00:00:24,240
analysis anomaly detection and network

11
00:00:24,240 --> 00:00:25,279
traffic

12
00:00:25,279 --> 00:00:27,920
please feel free to reach out in me

13
00:00:27,920 --> 00:00:29,920
in email after the talk for any

14
00:00:29,920 --> 00:00:33,840
questions or thoughts you may have

15
00:00:33,840 --> 00:00:36,160
the agenda for this talk is to start

16
00:00:36,160 --> 00:00:37,840
with a short introduction of the

17
00:00:37,840 --> 00:00:39,760
enterprise protection shift from

18
00:00:39,760 --> 00:00:42,800
blacklisting domains to the idea of

19
00:00:42,800 --> 00:00:45,520
monitoring device behavior to detect

20
00:00:45,520 --> 00:00:47,360
bots that are compromising the

21
00:00:47,360 --> 00:00:49,039
enterprise

22
00:00:49,039 --> 00:00:51,440
then we'll go shortly over a specific

23
00:00:51,440 --> 00:00:53,360
framework that is currently running in

24
00:00:53,360 --> 00:00:54,719
production

25
00:00:54,719 --> 00:00:57,120
as an example for monitoring devices

26
00:00:57,120 --> 00:00:59,920
behavior i'll provide some of the

27
00:00:59,920 --> 00:01:02,399
technical background about the methods

28
00:01:02,399 --> 00:01:03,359
we use

29
00:01:03,359 --> 00:01:06,240
power spectra density psd a neural

30
00:01:06,240 --> 00:01:07,680
network

31
00:01:07,680 --> 00:01:10,000
and then we'll dive in into presenting

32
00:01:10,000 --> 00:01:13,520
the framework itself the framework goal

33
00:01:13,520 --> 00:01:16,320
is to detect infected devices according

34
00:01:16,320 --> 00:01:20,000
to their dns traffic patterns

35
00:01:20,000 --> 00:01:22,240
and lastly i'll present

36
00:01:22,240 --> 00:01:24,720
some of our live detections that are

37
00:01:24,720 --> 00:01:27,280
actually very unusual to detect

38
00:01:27,280 --> 00:01:29,680
especially because of the fact that the

39
00:01:29,680 --> 00:01:32,640
device is reaching out to legitimate

40
00:01:32,640 --> 00:01:34,159
domains

41
00:01:34,159 --> 00:01:35,360
um

42
00:01:35,360 --> 00:01:37,840
i'll talk about possible enforcement's

43
00:01:37,840 --> 00:01:40,720
way to disrupt the malicious activity

44
00:01:40,720 --> 00:01:44,560
and will finish with takeaways

45
00:01:44,880 --> 00:01:47,759
on akamai our product protects more than

46
00:01:47,759 --> 00:01:50,720
400 enterprises worldwide

47
00:01:50,720 --> 00:01:53,680
worldwide the enterprises are concerned

48
00:01:53,680 --> 00:01:56,479
with automated bottish behavior and

49
00:01:56,479 --> 00:01:58,799
unwanted activity that is risking the

50
00:01:58,799 --> 00:02:00,240
enterprise

51
00:02:00,240 --> 00:02:02,079
the more traditional solution for

52
00:02:02,079 --> 00:02:04,320
protecting enterprises is to find

53
00:02:04,320 --> 00:02:07,200
indication of compromised domain or your

54
00:02:07,200 --> 00:02:08,000
in

55
00:02:08,000 --> 00:02:09,440
in such a way

56
00:02:09,440 --> 00:02:12,640
you can increase the blacklist and block

57
00:02:12,640 --> 00:02:15,360
insurance of an enterprise device to a

58
00:02:15,360 --> 00:02:18,239
malicious domain

59
00:02:18,480 --> 00:02:21,680
however lately we see a shift where

60
00:02:21,680 --> 00:02:24,879
there are attempts to find indication of

61
00:02:24,879 --> 00:02:27,120
a compromised device by tracking its

62
00:02:27,120 --> 00:02:28,239
behavior

63
00:02:28,239 --> 00:02:31,280
in order to alert the enterprise admin

64
00:02:31,280 --> 00:02:33,519
about suspicious activity that is

65
00:02:33,519 --> 00:02:37,840
happening in the enterprise network

66
00:02:38,720 --> 00:02:39,599
so

67
00:02:39,599 --> 00:02:42,080
why is that shift is so important in

68
00:02:42,080 --> 00:02:43,599
security

69
00:02:43,599 --> 00:02:46,080
some well-known apt groups as well as

70
00:02:46,080 --> 00:02:48,879
cyber criminals leverage

71
00:02:48,879 --> 00:02:51,840
legitimate web services such as github

72
00:02:51,840 --> 00:02:54,480
twitter google storage and many more in

73
00:02:54,480 --> 00:02:56,400
order to achieve their attack goals and

74
00:02:56,400 --> 00:02:58,159
breach an enterprise

75
00:02:58,159 --> 00:03:00,159
an example for such an attack is

76
00:03:00,159 --> 00:03:02,800
anarchos a malware that uses a variety

77
00:03:02,800 --> 00:03:05,920
of techniques to execute commands

78
00:03:05,920 --> 00:03:09,440
it tries to undermine its detection by

79
00:03:09,440 --> 00:03:11,120
adding layers of

80
00:03:11,120 --> 00:03:12,800
obfuscation

81
00:03:12,800 --> 00:03:15,040
and mimicking the behavior of legitimate

82
00:03:15,040 --> 00:03:16,239
users

83
00:03:16,239 --> 00:03:19,519
ameritas uses twitter github and cloud

84
00:03:19,519 --> 00:03:22,239
storage services to rely commands and

85
00:03:22,239 --> 00:03:24,480
extract sensitive data from compromised

86
00:03:24,480 --> 00:03:26,640
networks

87
00:03:26,640 --> 00:03:30,319
so such an attacks like hammer toss that

88
00:03:30,319 --> 00:03:33,280
hides behind legitimate services

89
00:03:33,280 --> 00:03:35,360
are very hard to find

90
00:03:35,360 --> 00:03:38,239
and enterprises must be aware and defend

91
00:03:38,239 --> 00:03:42,640
themselves from this kind of attacks

92
00:03:43,360 --> 00:03:46,159
to provide more technical details and

93
00:03:46,159 --> 00:03:48,720
intuition i'll go over a specific

94
00:03:48,720 --> 00:03:51,680
detection framework that we developed to

95
00:03:51,680 --> 00:03:55,280
detect such infected devices according

96
00:03:55,280 --> 00:03:57,840
to their dns traffic

97
00:03:57,840 --> 00:03:59,680
if you wish to learn more about this

98
00:03:59,680 --> 00:04:00,879
method

99
00:04:00,879 --> 00:04:02,480
then it's fully described on the

100
00:04:02,480 --> 00:04:04,799
research paper that got accepted to

101
00:04:04,799 --> 00:04:06,480
zurich

102
00:04:06,480 --> 00:04:10,400
the name of the research paper is

103
00:04:10,400 --> 00:04:12,799
below morton detection of malicious

104
00:04:12,799 --> 00:04:16,720
proteins in large-scale dns traffic

105
00:04:17,120 --> 00:04:19,918
to increase coverage i suggest

106
00:04:19,918 --> 00:04:22,720
to develop multiple techniques and

107
00:04:22,720 --> 00:04:27,400
incorporate them into the framework

108
00:04:28,800 --> 00:04:31,199
so we are talking here about a common

109
00:04:31,199 --> 00:04:33,440
attack gene that starts with with

110
00:04:33,440 --> 00:04:36,080
infection a malware is being downloaded

111
00:04:36,080 --> 00:04:38,800
and executed over an enterprise device

112
00:04:38,800 --> 00:04:41,600
it can be from spam infected file

113
00:04:41,600 --> 00:04:44,479
phishing or anything else

114
00:04:44,479 --> 00:04:47,199
so now the device is being compromised

115
00:04:47,199 --> 00:04:50,400
and joined as a bot to a botnet that is

116
00:04:50,400 --> 00:04:53,280
controlled by a remote attacker

117
00:04:53,280 --> 00:04:55,600
once the device has been infected and

118
00:04:55,600 --> 00:04:58,160
joined to the botnet there is sometimes

119
00:04:58,160 --> 00:05:00,800
a periodic routine communication between

120
00:05:00,800 --> 00:05:03,440
the device and the remote attacker it

121
00:05:03,440 --> 00:05:05,440
all happens through a command and

122
00:05:05,440 --> 00:05:08,160
control channel of course

123
00:05:08,160 --> 00:05:10,400
in such a communication the attacker can

124
00:05:10,400 --> 00:05:13,280
orchestrate a variety of malicious acts

125
00:05:13,280 --> 00:05:14,880
it can be ddos

126
00:05:14,880 --> 00:05:18,240
ransomware or data exploitation

127
00:05:18,240 --> 00:05:22,000
uh so given all of this we're interested

128
00:05:22,000 --> 00:05:25,199
in identifying uh these parts that are

129
00:05:25,199 --> 00:05:27,280
engaging in routine militias about

130
00:05:27,280 --> 00:05:28,639
communication

131
00:05:28,639 --> 00:05:30,240
to host names

132
00:05:30,240 --> 00:05:34,320
even legitimate us names

133
00:05:34,800 --> 00:05:36,560
there are three different types of

134
00:05:36,560 --> 00:05:39,039
malicious routine communication

135
00:05:39,039 --> 00:05:41,919
the first is beaconing where a device is

136
00:05:41,919 --> 00:05:44,320
trying to access a single domain in a

137
00:05:44,320 --> 00:05:45,680
routine way

138
00:05:45,680 --> 00:05:47,840
the second type is the multi-state

139
00:05:47,840 --> 00:05:50,639
channels where different aust names are

140
00:05:50,639 --> 00:05:53,199
being used in each state stage of the

141
00:05:53,199 --> 00:05:54,880
routine communication

142
00:05:54,880 --> 00:05:57,759
and lastly there is dji domain

143
00:05:57,759 --> 00:06:01,199
generation algorithm

144
00:06:02,800 --> 00:06:07,199
all three of this free technique um

145
00:06:07,199 --> 00:06:10,000
are seen in the wild in recent attacks

146
00:06:10,000 --> 00:06:12,160
whether the communication is made to a

147
00:06:12,160 --> 00:06:15,280
malicious or legitimate us names

148
00:06:15,280 --> 00:06:18,160
as examples images and required and

149
00:06:18,160 --> 00:06:19,680
known malwares

150
00:06:19,680 --> 00:06:22,160
often use beaconing in their malicious

151
00:06:22,160 --> 00:06:23,600
operations

152
00:06:23,600 --> 00:06:25,680
and if we're talking about multi-state

153
00:06:25,680 --> 00:06:28,319
channels then there are there is

154
00:06:28,319 --> 00:06:31,120
ameritas and also zusi

155
00:06:31,120 --> 00:06:33,759
popular malwares

156
00:06:33,759 --> 00:06:36,400
and many more

157
00:06:37,680 --> 00:06:40,560
for understanding our algorithm i'll

158
00:06:40,560 --> 00:06:42,720
provide the technical background of the

159
00:06:42,720 --> 00:06:46,639
methods we use psd power spectra density

160
00:06:46,639 --> 00:06:50,080
and deep learning model neural network

161
00:06:50,080 --> 00:06:51,199
so

162
00:06:51,199 --> 00:06:53,759
we represent each enterprise device

163
00:06:53,759 --> 00:06:56,400
behavior by creating an informative

164
00:06:56,400 --> 00:06:59,440
representation of each enterprise device

165
00:06:59,440 --> 00:07:02,880
using psd power spectral density

166
00:07:02,880 --> 00:07:05,280
this representation will serve as an

167
00:07:05,280 --> 00:07:08,639
input to the neural network model

168
00:07:08,639 --> 00:07:13,240
for fast and accurate classification

169
00:07:16,000 --> 00:07:18,240
power spectral density psd is a

170
00:07:18,240 --> 00:07:20,479
technique that is leveraged from the

171
00:07:20,479 --> 00:07:23,199
signal processing field it transforms

172
00:07:23,199 --> 00:07:25,759
the signal from the time domain to its

173
00:07:25,759 --> 00:07:27,280
frequency domain

174
00:07:27,280 --> 00:07:30,880
and then the higher spectral density of

175
00:07:30,880 --> 00:07:34,319
individual frequencies the more tendency

176
00:07:34,319 --> 00:07:37,039
to repeat with this period the time

177
00:07:37,039 --> 00:07:38,880
series has

178
00:07:38,880 --> 00:07:43,199
so if we have any device network traffic

179
00:07:43,199 --> 00:07:46,560
which contains user id query name and

180
00:07:46,560 --> 00:07:47,840
time stamp

181
00:07:47,840 --> 00:07:50,960
we can convert it to ps2 presentation in

182
00:07:50,960 --> 00:07:53,840
order to find signs for periodicity in

183
00:07:53,840 --> 00:07:56,560
the traffic

184
00:07:56,879 --> 00:07:59,599
a better intuition about psd

185
00:07:59,599 --> 00:08:02,240
both graph here represents the psd as

186
00:08:02,240 --> 00:08:04,560
function of the frequency

187
00:08:04,560 --> 00:08:07,039
let's say i have an activity of a normal

188
00:08:07,039 --> 00:08:10,879
benign device with legitimate behavior

189
00:08:10,879 --> 00:08:13,120
on the left you can see how the psd will

190
00:08:13,120 --> 00:08:15,120
look like for that user

191
00:08:15,120 --> 00:08:17,520
mini is not trying to contact any cnc

192
00:08:17,520 --> 00:08:20,400
server there is nothing automatic and

193
00:08:20,400 --> 00:08:23,280
periodic in this activity

194
00:08:23,280 --> 00:08:25,599
on the right side you can see how the

195
00:08:25,599 --> 00:08:27,840
power spectrum density will look like

196
00:08:27,840 --> 00:08:30,400
after we added synthetic periodic

197
00:08:30,400 --> 00:08:32,399
activity to the device

198
00:08:32,399 --> 00:08:35,279
you can see a peak that wasn't there on

199
00:08:35,279 --> 00:08:37,839
the original graph of the device

200
00:08:37,839 --> 00:08:41,120
so basically the higher psd at specific

201
00:08:41,120 --> 00:08:42,399
frequency

202
00:08:42,399 --> 00:08:44,800
the more we can suspect periodic

203
00:08:44,800 --> 00:08:47,839
behavior to a cnc which can tell us that

204
00:08:47,839 --> 00:08:51,680
the device is being compromised

205
00:08:52,880 --> 00:08:56,720
this is a full overview of the system

206
00:08:56,720 --> 00:08:58,560
we're using here

207
00:08:58,560 --> 00:09:01,440
supervised learning this is why we have

208
00:09:01,440 --> 00:09:03,040
two phases

209
00:09:03,040 --> 00:09:05,680
training and deployment

210
00:09:05,680 --> 00:09:07,600
the train model will be used at the

211
00:09:07,600 --> 00:09:09,440
deployment phase for identifying

212
00:09:09,440 --> 00:09:12,080
compromised devices

213
00:09:12,080 --> 00:09:14,880
the training starts with receiving dns

214
00:09:14,880 --> 00:09:16,880
traffic of devices

215
00:09:16,880 --> 00:09:19,040
we do data cleaning

216
00:09:19,040 --> 00:09:21,680
and then we randomly select clients that

217
00:09:21,680 --> 00:09:24,320
are injected with period periodic

218
00:09:24,320 --> 00:09:25,440
behavior

219
00:09:25,440 --> 00:09:27,680
so now we have two types of clients we

220
00:09:27,680 --> 00:09:28,880
have clients

221
00:09:28,880 --> 00:09:31,760
with periodic activity and clients

222
00:09:31,760 --> 00:09:34,399
without periodic activity

223
00:09:34,399 --> 00:09:36,959
then we compute psd for each of the

224
00:09:36,959 --> 00:09:38,160
devices

225
00:09:38,160 --> 00:09:41,040
so we have a vector and padding of psd

226
00:09:41,040 --> 00:09:43,120
for each device

227
00:09:43,120 --> 00:09:46,000
these vector embeddings are serving as

228
00:09:46,000 --> 00:09:49,200
an input to train a neural net network

229
00:09:49,200 --> 00:09:51,680
model that will be used later in the

230
00:09:51,680 --> 00:09:53,839
deployment phase

231
00:09:53,839 --> 00:09:56,320
so now at the deployment phase we do the

232
00:09:56,320 --> 00:09:59,360
same process of representing each device

233
00:09:59,360 --> 00:10:01,200
as a psd vector

234
00:10:01,200 --> 00:10:03,680
and the train model is used and is

235
00:10:03,680 --> 00:10:05,519
deciding whether the device is being

236
00:10:05,519 --> 00:10:07,440
compromised or not

237
00:10:07,440 --> 00:10:10,000
eventually the algorithm will produce a

238
00:10:10,000 --> 00:10:14,000
list of compromised devices

239
00:10:15,360 --> 00:10:18,240
so the defense system i just presented

240
00:10:18,240 --> 00:10:20,320
is active and currently is running in

241
00:10:20,320 --> 00:10:22,160
production

242
00:10:22,160 --> 00:10:24,560
thanks to the system we have found a

243
00:10:24,560 --> 00:10:27,360
real-world detection

244
00:10:27,360 --> 00:10:30,560
of infected devices and some of

245
00:10:30,560 --> 00:10:33,200
security violations within enterprise

246
00:10:33,200 --> 00:10:34,000
did

247
00:10:34,000 --> 00:10:36,000
within enterprises that were not

248
00:10:36,000 --> 00:10:39,519
detected with the use of blacklist

249
00:10:39,519 --> 00:10:42,720
that happens of course because

250
00:10:42,720 --> 00:10:45,920
the malware uses legitimate domains in

251
00:10:45,920 --> 00:10:48,640
his malicious activity

252
00:10:48,640 --> 00:10:50,800
the traffic we're using here is danish

253
00:10:50,800 --> 00:10:53,920
it's dns traffic

254
00:10:54,959 --> 00:10:57,760
so this is one detection our

255
00:10:57,760 --> 00:11:00,160
our algorithm found the time series

256
00:11:00,160 --> 00:11:02,959
figure here represents dns request count

257
00:11:02,959 --> 00:11:05,519
as function of time you can see here a

258
00:11:05,519 --> 00:11:08,720
device that is accessing multiple

259
00:11:08,720 --> 00:11:09,839
domains

260
00:11:09,839 --> 00:11:11,760
pretty much at the same time with

261
00:11:11,760 --> 00:11:15,120
periodic intervals activity you can see

262
00:11:15,120 --> 00:11:17,920
that all nine axis domains are

263
00:11:17,920 --> 00:11:20,800
legitimate but the network behavior

264
00:11:20,800 --> 00:11:24,880
deviates from the normal patterns

265
00:11:25,440 --> 00:11:27,120
after seeing

266
00:11:27,120 --> 00:11:29,760
this detection we started to explore a

267
00:11:29,760 --> 00:11:31,360
bit more about

268
00:11:31,360 --> 00:11:34,079
how can we attribute this behavior to a

269
00:11:34,079 --> 00:11:36,160
specific malware

270
00:11:36,160 --> 00:11:38,800
so using virustotal we saw there is a

271
00:11:38,800 --> 00:11:42,320
specific trojan called f fsisla

272
00:11:42,320 --> 00:11:45,200
that is accessing these specific domains

273
00:11:45,200 --> 00:11:48,560
and matches the behavior we just found

274
00:11:48,560 --> 00:11:52,320
so it was first observed in early 2019

275
00:11:52,320 --> 00:11:55,040
if cisner is an advanced trojan that an

276
00:11:55,040 --> 00:11:57,120
attacker remotely controlled the victim

277
00:11:57,120 --> 00:11:58,240
pc

278
00:11:58,240 --> 00:12:00,880
the infection is disagree is distributed

279
00:12:00,880 --> 00:12:04,560
through a small scale spam campaign

280
00:12:04,560 --> 00:12:07,519
and it maintains a c2 communication to

281
00:12:07,519 --> 00:12:10,000
control the payloads and sending

282
00:12:10,000 --> 00:12:12,160
sensitive information

283
00:12:12,160 --> 00:12:14,480
it can perform activities

284
00:12:14,480 --> 00:12:17,120
without the user knowledge

285
00:12:17,120 --> 00:12:19,279
for example it can capture keyboard

286
00:12:19,279 --> 00:12:23,839
input or collect system information

287
00:12:23,839 --> 00:12:26,800
download your upload file and many more

288
00:12:26,800 --> 00:12:30,399
malicious operations

289
00:12:30,399 --> 00:12:33,200
another example here is your block new

290
00:12:33,200 --> 00:12:35,440
block is a malicious add-on for chrome

291
00:12:35,440 --> 00:12:37,760
browser that is despised as an ad

292
00:12:37,760 --> 00:12:38,800
blocker

293
00:12:38,800 --> 00:12:41,600
new block uses code that was cloned to

294
00:12:41,600 --> 00:12:44,160
mimic a legitimate ad blocker and

295
00:12:44,160 --> 00:12:46,160
includes a malicious baccalaureate for

296
00:12:46,160 --> 00:12:47,680
cookie stuff

297
00:12:47,680 --> 00:12:49,839
so at the time series here you can see

298
00:12:49,839 --> 00:12:52,399
that the u-blox sends a heartbeat every

299
00:12:52,399 --> 00:12:55,360
15 minutes to its service

300
00:12:55,360 --> 00:12:59,600
that uses a specific host name

301
00:13:01,040 --> 00:13:02,800
so we have talked about

302
00:13:02,800 --> 00:13:05,600
security violations so far and possible

303
00:13:05,600 --> 00:13:08,720
consequences that can come with them

304
00:13:08,720 --> 00:13:11,279
but what the hand what an enterprise

305
00:13:11,279 --> 00:13:13,040
could do once it's

306
00:13:13,040 --> 00:13:15,839
detected a compromised device there are

307
00:13:15,839 --> 00:13:18,560
several possible disruption that can be

308
00:13:18,560 --> 00:13:20,959
taken based on the enterprise security

309
00:13:20,959 --> 00:13:22,160
stack

310
00:13:22,160 --> 00:13:25,600
from a more bold and stringent

311
00:13:25,600 --> 00:13:27,519
approach to a more

312
00:13:27,519 --> 00:13:28,880
indulgent

313
00:13:28,880 --> 00:13:29,760
one

314
00:13:29,760 --> 00:13:32,560
examples from a

315
00:13:32,560 --> 00:13:35,519
possible disruption while detecting

316
00:13:35,519 --> 00:13:38,880
abnormal behavior can be divided into

317
00:13:38,880 --> 00:13:40,480
three categories

318
00:13:40,480 --> 00:13:42,000
monitoring

319
00:13:42,000 --> 00:13:45,199
security check and blocking

320
00:13:45,199 --> 00:13:46,639
in monitoring

321
00:13:46,639 --> 00:13:49,279
you can monitor the entire activity of

322
00:13:49,279 --> 00:13:53,279
the device or its relevant sessions

323
00:13:53,279 --> 00:13:54,959
in security check

324
00:13:54,959 --> 00:13:58,079
you can have a trust that is pending on

325
00:13:58,079 --> 00:13:59,600
security check

326
00:13:59,600 --> 00:14:01,600
you can trigger an av check before

327
00:14:01,600 --> 00:14:03,920
allowing for further access to any

328
00:14:03,920 --> 00:14:05,839
enterprise service

329
00:14:05,839 --> 00:14:08,560
and the more bold one is blocking to

330
00:14:08,560 --> 00:14:12,079
revoke trust for specific apps prevent

331
00:14:12,079 --> 00:14:14,399
the device from accessing sensitive

332
00:14:14,399 --> 00:14:17,920
applications like financial

333
00:14:17,920 --> 00:14:21,920
or block relevant sessions or the entire

334
00:14:21,920 --> 00:14:25,120
activity of the device

335
00:14:26,480 --> 00:14:28,160
so we have shown

336
00:14:28,160 --> 00:14:31,199
use cases this system detected that no

337
00:14:31,199 --> 00:14:34,720
blacklist or signature match was able to

338
00:14:34,720 --> 00:14:35,760
detect

339
00:14:35,760 --> 00:14:38,079
therefore if you want to defend against

340
00:14:38,079 --> 00:14:40,480
sophisticated attacks as a network

341
00:14:40,480 --> 00:14:43,760
defender don't only use block list

342
00:14:43,760 --> 00:14:47,120
or signatures and start doing behavior

343
00:14:47,120 --> 00:14:49,760
based defense system

344
00:14:49,760 --> 00:14:51,680
because it can be even a legitimate

345
00:14:51,680 --> 00:14:54,800
company that uses a spyware and you are

346
00:14:54,800 --> 00:14:57,440
not necessarily want a spyware in your

347
00:14:57,440 --> 00:15:00,079
enterprise network

348
00:15:00,079 --> 00:15:01,279
second

349
00:15:01,279 --> 00:15:03,920
second building a personal

350
00:15:03,920 --> 00:15:06,399
optimized system leveraging your massive

351
00:15:06,399 --> 00:15:09,120
network logs with specific use cases to

352
00:15:09,120 --> 00:15:11,519
look for is beneficial to protect from

353
00:15:11,519 --> 00:15:14,079
insider attacks

354
00:15:14,079 --> 00:15:17,040
and third maintain a holistic approach

355
00:15:17,040 --> 00:15:19,920
to view both internal and external web

356
00:15:19,920 --> 00:15:22,880
services as suspicious it doesn't matter

357
00:15:22,880 --> 00:15:24,720
who is asking it if your enterprise

358
00:15:24,720 --> 00:15:27,920
enterprises uses it it could be a part

359
00:15:27,920 --> 00:15:31,279
of a data breach attacks

360
00:15:31,360 --> 00:15:34,079
thank you everyone

361
00:15:34,079 --> 00:15:38,330
please feel free to ask questions

362
00:15:38,330 --> 00:15:45,769
[Applause]

363
00:15:48,399 --> 00:15:50,560
so hen um

364
00:15:50,560 --> 00:15:53,839
the the mic was off but

365
00:15:53,839 --> 00:15:55,759
the crowd just uploaded

366
00:15:55,759 --> 00:15:57,519
to your presentation

367
00:15:57,519 --> 00:15:58,720
are you available to answer the

368
00:15:58,720 --> 00:16:00,399
questions

369
00:16:00,399 --> 00:16:01,600
yes

370
00:16:01,600 --> 00:16:03,199
okay

371
00:16:03,199 --> 00:16:06,479
what's the questions in the room

372
00:16:06,720 --> 00:16:09,720
okay

373
00:16:17,360 --> 00:16:18,240
hey

374
00:16:18,240 --> 00:16:21,199
good talk um i wonder how large is your

375
00:16:21,199 --> 00:16:22,800
training data set and how long does it

376
00:16:22,800 --> 00:16:24,240
take to train the data set for the

377
00:16:24,240 --> 00:16:26,959
neural network

378
00:16:29,839 --> 00:16:32,880
the data is very large

379
00:16:32,880 --> 00:16:35,519
the training set as you see we simulated

380
00:16:35,519 --> 00:16:37,600
the periodic traffic so

381
00:16:37,600 --> 00:16:40,399
we could we could have like uh label

382
00:16:40,399 --> 00:16:41,759
data sets

383
00:16:41,759 --> 00:16:46,639
uh very large label data sets so

384
00:16:46,639 --> 00:16:50,759
basically it was very large

385
00:16:50,800 --> 00:16:54,000
but but how large

386
00:17:00,320 --> 00:17:02,639
millions millions

387
00:17:02,639 --> 00:17:05,639
records

388
00:17:06,880 --> 00:17:10,400
uh hello every question as well um over

389
00:17:10,400 --> 00:17:13,359
what period of time do you capture to

390
00:17:13,359 --> 00:17:16,640
compute the frequency and or you deal

391
00:17:16,640 --> 00:17:19,599
or do you do to deal with the jitter

392
00:17:19,599 --> 00:17:22,400
because most of the malwares have some

393
00:17:22,400 --> 00:17:25,599
jitter in it so basically the time you

394
00:17:25,599 --> 00:17:28,079
use to make the capture will

395
00:17:28,079 --> 00:17:30,640
influence a lot if you detect them or

396
00:17:30,640 --> 00:17:33,120
not

397
00:17:33,120 --> 00:17:36,640
so we're doing it in several

398
00:17:36,640 --> 00:17:39,520
window times we're doing this algorithm

399
00:17:39,520 --> 00:17:40,720
in

400
00:17:40,720 --> 00:17:41,520
in

401
00:17:41,520 --> 00:17:43,760
a week and a day

402
00:17:43,760 --> 00:17:45,440
and even an hour

403
00:17:45,440 --> 00:17:49,120
to not miss uh detections uh so this is

404
00:17:49,120 --> 00:17:52,000
how we try to detect all

405
00:17:52,000 --> 00:17:55,600
and uh basically um

406
00:17:55,600 --> 00:17:57,360
we do

407
00:17:57,360 --> 00:17:59,840
we this when we are simulating the

408
00:17:59,840 --> 00:18:01,600
periodic traffic

409
00:18:01,600 --> 00:18:02,640
we do

410
00:18:02,640 --> 00:18:03,440
uh

411
00:18:03,440 --> 00:18:06,880
we do see the current buttons outside

412
00:18:06,880 --> 00:18:08,559
and we see their

413
00:18:08,559 --> 00:18:11,679
uh behavior and we're trying to simulate

414
00:18:11,679 --> 00:18:14,640
our periodic traffic that will match

415
00:18:14,640 --> 00:18:16,000
this

416
00:18:16,000 --> 00:18:18,799
these botnets

417
00:18:25,679 --> 00:18:27,520
hi this series is

418
00:18:27,520 --> 00:18:30,240
uh uh from alba cloud

419
00:18:30,240 --> 00:18:33,120
good presentation uh one question um

420
00:18:33,120 --> 00:18:35,440
since stochastical properties of the

421
00:18:35,440 --> 00:18:37,600
malware changes and payload behavior

422
00:18:37,600 --> 00:18:40,160
changes uh how

423
00:18:40,160 --> 00:18:42,240
frequently you would suggest to retrain

424
00:18:42,240 --> 00:18:44,960
your neural network

425
00:18:44,960 --> 00:18:46,880
um

426
00:18:46,880 --> 00:18:49,760
i'll suggest to do it once in a month

427
00:18:49,760 --> 00:18:53,790
i think it can be a good optimization

428
00:18:53,790 --> 00:18:55,520
[Music]

429
00:18:55,520 --> 00:18:58,400
this is what we do after a bit of

430
00:18:58,400 --> 00:19:00,720
thresholds optimizing optimizations and

431
00:19:00,720 --> 00:19:02,799
seeing how the buffets are getting

432
00:19:02,799 --> 00:19:03,919
updated

433
00:19:03,919 --> 00:19:06,240
um so one month

434
00:19:06,240 --> 00:19:08,799
will be my answer yeah

435
00:19:08,799 --> 00:19:10,799
and a quick follow-up question uh you

436
00:19:10,799 --> 00:19:12,880
mentioned if i heard correctly that your

437
00:19:12,880 --> 00:19:15,120
training set is synthetic uh so that

438
00:19:15,120 --> 00:19:17,120
means basically you train the neural

439
00:19:17,120 --> 00:19:18,799
network on what you know

440
00:19:18,799 --> 00:19:19,600
so

441
00:19:19,600 --> 00:19:20,880
how

442
00:19:20,880 --> 00:19:22,240
do you plan to

443
00:19:22,240 --> 00:19:26,480
for this approach to detect unknowns

444
00:19:26,480 --> 00:19:30,080
yeah so basically we do try to add

445
00:19:30,080 --> 00:19:32,320
we do add synthetic data

446
00:19:32,320 --> 00:19:35,600
about known malwares but it's still

447
00:19:35,600 --> 00:19:40,400
able to uh to discover new ones

448
00:19:40,400 --> 00:19:44,080
yes it won't detect everyone

449
00:19:44,080 --> 00:19:45,440
out there but

450
00:19:45,440 --> 00:19:50,160
it will still be able to uh to find new

451
00:19:50,160 --> 00:19:51,600
ones

452
00:19:51,600 --> 00:19:55,679
if the periodic activity will be

453
00:19:55,679 --> 00:19:58,480
will be similar to

454
00:19:58,480 --> 00:20:00,720
to the ones we uh

455
00:20:00,720 --> 00:20:03,440
we reached

456
00:20:04,720 --> 00:20:09,760
thank you uh last question in the room

457
00:20:17,840 --> 00:20:19,679
thank you for the talk yeah so

458
00:20:19,679 --> 00:20:22,000
your assumption that this methodology

459
00:20:22,000 --> 00:20:23,600
works is because

460
00:20:23,600 --> 00:20:26,000
bonnets or malware follow some fixed

461
00:20:26,000 --> 00:20:28,400
pattern on the dns queries right and

462
00:20:28,400 --> 00:20:32,159
what if the malware adapt by

463
00:20:32,159 --> 00:20:34,000
randomizing their query or even

464
00:20:34,000 --> 00:20:35,200
generating

465
00:20:35,200 --> 00:20:37,120
query to legitimate like google yahoo

466
00:20:37,120 --> 00:20:40,000
sites even they just throw them away

467
00:20:40,000 --> 00:20:42,400
or even replay or capture replay the

468
00:20:42,400 --> 00:20:46,320
organic users query patterns

469
00:20:46,320 --> 00:20:49,120
if i understand correctly you are asking

470
00:20:49,120 --> 00:20:52,400
what happens if an attacker is changing

471
00:20:52,400 --> 00:20:55,760
the periodic like is trying to

472
00:20:55,760 --> 00:20:58,559
take two minutes uh after

473
00:20:58,559 --> 00:21:00,400
is this what you're asking yeah just

474
00:21:00,400 --> 00:21:01,520
formulate

475
00:21:01,520 --> 00:21:04,480
emulating the organic user's behavior

476
00:21:04,480 --> 00:21:07,440
yeah okay so basically we do uh

477
00:21:07,440 --> 00:21:09,200
try uh

478
00:21:09,200 --> 00:21:11,840
we do try to do it in several time

479
00:21:11,840 --> 00:21:14,880
windows for example not to look uh at

480
00:21:14,880 --> 00:21:19,200
the specific timestamp of the query or

481
00:21:19,200 --> 00:21:22,080
you know just see what happens in five

482
00:21:22,080 --> 00:21:24,720
minutes ten minutes windows and then

483
00:21:24,720 --> 00:21:26,799
we're trying to be robust

484
00:21:26,799 --> 00:21:28,000
as

485
00:21:28,000 --> 00:21:28,840
as

486
00:21:28,840 --> 00:21:30,480
possible uh

487
00:21:30,480 --> 00:21:34,559
but it is an important uh issue what you

488
00:21:34,559 --> 00:21:36,480
are saying because an attacker you know

489
00:21:36,480 --> 00:21:37,440
can

490
00:21:37,440 --> 00:21:39,840
can send one minute after two minutes

491
00:21:39,840 --> 00:21:42,320
after and then maybe confuse us but this

492
00:21:42,320 --> 00:21:43,760
is why we're trying

493
00:21:43,760 --> 00:21:47,520
multiple time windows

494
00:21:47,679 --> 00:21:50,400
to catch that

495
00:21:51,120 --> 00:21:52,559
okay

496
00:21:52,559 --> 00:21:53,520
um

497
00:21:53,520 --> 00:21:56,320
thank you very much thank you again

498
00:21:56,320 --> 00:21:59,559
thank you

