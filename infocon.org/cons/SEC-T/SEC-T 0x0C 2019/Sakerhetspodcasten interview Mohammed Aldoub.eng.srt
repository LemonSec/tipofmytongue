1
00:00:03,299 --> 00:00:10,750
hi and welcome to seconds per thousand

2
00:00:06,399 --> 00:00:13,240
live ish here at sixty yes sir we just

3
00:00:10,750 --> 00:00:16,119
grabbed Mohammed Al Dube off the stage

4
00:00:13,240 --> 00:00:18,369
hello where he talked about AWS security

5
00:00:16,119 --> 00:00:22,090
right yes so can tell this more about

6
00:00:18,369 --> 00:00:24,970
you talk so my talk was about attacking

7
00:00:22,090 --> 00:00:26,830
less security especially in terms of

8
00:00:24,970 --> 00:00:29,229
let's say actually both in terms of

9
00:00:26,830 --> 00:00:30,580
exploitation and post exploitation so I

10
00:00:29,230 --> 00:00:33,010
can get the initial access and how we

11
00:00:30,580 --> 00:00:36,159
can utilize that initial access to get

12
00:00:33,010 --> 00:00:39,489
somewhere else my talk let's say

13
00:00:36,159 --> 00:00:42,280
concentrate on how the traditional model

14
00:00:39,489 --> 00:00:43,780
applies to a SS how the regular web

15
00:00:42,280 --> 00:00:45,999
application bar abilities apply to

16
00:00:43,780 --> 00:00:47,829
address whether or not they can make

17
00:00:45,999 --> 00:00:50,499
things worse or better

18
00:00:47,829 --> 00:00:53,440
so as we first think we discussed which

19
00:00:50,499 --> 00:00:54,819
is of most importance is how the ablest

20
00:00:53,440 --> 00:00:57,039
environment in terms of security

21
00:00:54,819 --> 00:00:58,749
difference differs from the regular

22
00:00:57,039 --> 00:01:01,719
enterprise environment we usually come

23
00:00:58,749 --> 00:01:03,819
from we discussed the shared

24
00:01:01,719 --> 00:01:06,310
responsibility model of edit less which

25
00:01:03,819 --> 00:01:08,140
means that Amazon will handle some stuff

26
00:01:06,310 --> 00:01:11,140
for you so for example you don't have to

27
00:01:08,140 --> 00:01:14,740
care about hardware destruction of

28
00:01:11,140 --> 00:01:17,140
devices data center security cameras you

29
00:01:14,740 --> 00:01:19,960
don't have to care take care about let's

30
00:01:17,140 --> 00:01:22,719
say low-level attacks on networking for

31
00:01:19,960 --> 00:01:25,419
example ARBs who think but you do have

32
00:01:22,719 --> 00:01:27,869
to take more care than before on your

33
00:01:25,420 --> 00:01:30,490
own customer data and your own

34
00:01:27,869 --> 00:01:32,229
application security because now you're

35
00:01:30,490 --> 00:01:34,539
not running inside your own data center

36
00:01:32,229 --> 00:01:37,079
so whatever physical security helped you

37
00:01:34,539 --> 00:01:39,159
before it's now running on the cloud and

38
00:01:37,079 --> 00:01:41,798
you have neighbors on the cloud for

39
00:01:39,159 --> 00:01:43,450
example so you have to really understand

40
00:01:41,799 --> 00:01:45,520
how the model differs for the better

41
00:01:43,450 --> 00:01:51,909
things and the worst things in terms of

42
00:01:45,520 --> 00:01:54,130
security a lot of companies are moving

43
00:01:51,909 --> 00:01:56,409
to account and especially AWS what do we

44
00:01:54,130 --> 00:01:58,298
say are the the biggest differences from

45
00:01:56,409 --> 00:02:00,369
from both an attacker and perhaps a

46
00:01:58,299 --> 00:02:02,560
defendant perspective what what what

47
00:02:00,369 --> 00:02:04,659
stuff are harder and what is it better

48
00:02:02,560 --> 00:02:06,969
in in there in the cloud movement from

49
00:02:04,659 --> 00:02:08,789
security perspective okay so from

50
00:02:06,969 --> 00:02:13,329
security let's talk about the attacker

51
00:02:08,788 --> 00:02:15,700
in Amazon running attacks against lower

52
00:02:13,330 --> 00:02:16,760
levels of the stack for example it's

53
00:02:15,700 --> 00:02:18,679
working

54
00:02:16,760 --> 00:02:20,329
much more difficult as we said for

55
00:02:18,680 --> 00:02:22,939
example so running many the mental

56
00:02:20,330 --> 00:02:25,129
attacks is more difficult you have to

57
00:02:22,939 --> 00:02:27,739
use Amazon's own features for that

58
00:02:25,129 --> 00:02:29,929
for example vbc virtual private cloud

59
00:02:27,739 --> 00:02:31,670
traffic mirror and so you can't just

60
00:02:29,930 --> 00:02:35,239
plug your own hardware or plug your own

61
00:02:31,670 --> 00:02:38,599
for example you know tab that it work

62
00:02:35,239 --> 00:02:40,760
so as an attacker who have to actually

63
00:02:38,599 --> 00:02:42,920
go up the stack so we have to learn how

64
00:02:40,760 --> 00:02:46,548
to use the Amazon API to make your

65
00:02:42,920 --> 00:02:49,208
attacks let's say automated we have to

66
00:02:46,549 --> 00:02:52,459
put more focus on understanding the

67
00:02:49,209 --> 00:02:56,060
issues of Amazon itself for example the

68
00:02:52,459 --> 00:02:58,730
Amazon permission system the Amazon

69
00:02:56,060 --> 00:03:00,739
services and how they the behavior and

70
00:02:58,730 --> 00:03:02,690
the configuration of Amazon services so

71
00:03:00,739 --> 00:03:04,220
that you can utilize that because the

72
00:03:02,690 --> 00:03:06,109
problem and that's the same thing for

73
00:03:04,220 --> 00:03:08,359
both attackers and defenders is that

74
00:03:06,109 --> 00:03:10,519
when you go to the cloud now you have

75
00:03:08,359 --> 00:03:13,280
lots more things to understand in terms

76
00:03:10,519 --> 00:03:15,799
of the environment itself so you have to

77
00:03:13,280 --> 00:03:18,319
understand the Amazon let's say

78
00:03:15,799 --> 00:03:20,150
ecosystem the ABI is the permissions all

79
00:03:18,319 --> 00:03:23,690
the features inside it's how they

80
00:03:20,150 --> 00:03:25,370
attract with each other and then you can

81
00:03:23,690 --> 00:03:27,139
understand whether or not you have to

82
00:03:25,370 --> 00:03:29,810
shift or change make some changes to it

83
00:03:27,139 --> 00:03:31,519
at morning as an attack you also have to

84
00:03:29,810 --> 00:03:34,489
learn how Amazon work so that you can

85
00:03:31,519 --> 00:03:35,930
utilize or abused all of these missed

86
00:03:34,489 --> 00:03:37,579
assumptions by the developers in the

87
00:03:35,930 --> 00:03:39,560
defenders yeah because that's a common

88
00:03:37,579 --> 00:03:42,290
problem though like sends Amazon's

89
00:03:39,560 --> 00:03:45,230
ecosystem is currently changing a lot

90
00:03:42,290 --> 00:03:48,440
evolving services are attached features

91
00:03:45,230 --> 00:03:49,879
are added in every every module or every

92
00:03:48,440 --> 00:03:50,329
service there is right if I give an

93
00:03:49,879 --> 00:03:53,120
example

94
00:03:50,329 --> 00:03:54,919
yeah well Amazon adds a new service they

95
00:03:53,120 --> 00:03:57,169
don't enable cloud the trail for it

96
00:03:54,919 --> 00:03:59,599
cloud of trail is the log system inside

97
00:03:57,169 --> 00:04:01,819
Amazon Cloud which is a tent only so you

98
00:03:59,599 --> 00:04:05,149
can't delete from it but the thing is

99
00:04:01,819 --> 00:04:07,578
once usually when they add a new service

100
00:04:05,150 --> 00:04:09,530
they don't you would pad a cloud of

101
00:04:07,579 --> 00:04:13,010
trail logging features to it immediately

102
00:04:09,530 --> 00:04:15,500
so if you use it or if an attacker

103
00:04:13,010 --> 00:04:17,930
initialize it on your account you you

104
00:04:15,500 --> 00:04:19,880
really have difficulty and understanding

105
00:04:17,930 --> 00:04:21,289
what's happened there because it doesn't

106
00:04:19,880 --> 00:04:23,330
have looks yet that's one example

107
00:04:21,289 --> 00:04:24,979
another example is that by default

108
00:04:23,330 --> 00:04:26,780
clouds trail the logging as we said

109
00:04:24,979 --> 00:04:28,729
system for Amazon is not enabled on all

110
00:04:26,780 --> 00:04:30,669
reaches so suppose you will have your

111
00:04:28,729 --> 00:04:33,310
structure running in for example

112
00:04:30,669 --> 00:04:35,830
the United States in California in

113
00:04:33,310 --> 00:04:37,449
Amazon's region in California and you

114
00:04:35,830 --> 00:04:38,949
enable to either trade for that and you

115
00:04:37,449 --> 00:04:41,409
don't enable cloud to trade for all

116
00:04:38,949 --> 00:04:43,539
amazon regions someone could if they

117
00:04:41,409 --> 00:04:45,460
compromise your account to make things

118
00:04:43,539 --> 00:04:47,560
more stealthy they could go and create

119
00:04:45,460 --> 00:04:49,688
some infrastructure in Amazon's region

120
00:04:47,560 --> 00:04:50,979
and Japan for example and then because

121
00:04:49,689 --> 00:04:52,569
you don't have the cloud to trade label

122
00:04:50,979 --> 00:04:54,279
there you know you wouldn't know what's

123
00:04:52,569 --> 00:04:57,610
going on what's happened or what was

124
00:04:54,279 --> 00:05:01,060
done was created in your own environment

125
00:04:57,610 --> 00:05:03,039
there in that region so for example one

126
00:05:01,060 --> 00:05:05,169
of the most important recommendations to

127
00:05:03,039 --> 00:05:07,330
enable cloud to trail everywhere but

128
00:05:05,169 --> 00:05:07,779
that's not the default which is really

129
00:05:07,330 --> 00:05:09,699
interesting

130
00:05:07,779 --> 00:05:11,529
in my opinion I think Amazon should have

131
00:05:09,699 --> 00:05:14,590
been able to cloud tray by default for

132
00:05:11,529 --> 00:05:16,870
all regions because if or at least if I

133
00:05:14,590 --> 00:05:19,840
start any service their cloud firm

134
00:05:16,870 --> 00:05:21,370
should be initiated that she yes how I

135
00:05:19,840 --> 00:05:23,859
knew that some but there is actually

136
00:05:21,370 --> 00:05:26,020
open source projects or a mais that you

137
00:05:23,860 --> 00:05:28,210
can install that helps you track the

138
00:05:26,020 --> 00:05:31,628
changes in your nature there are lots of

139
00:05:28,210 --> 00:05:33,789
tools for a bless I'd like to you can

140
00:05:31,629 --> 00:05:35,889
run yourself or you can install in the

141
00:05:33,789 --> 00:05:38,289
cloud so what is it for example the ami

142
00:05:35,889 --> 00:05:41,110
which means the ami is the Amazon

143
00:05:38,289 --> 00:05:42,460
machine image which means that it's an

144
00:05:41,110 --> 00:05:44,020
image for a server that you run for

145
00:05:42,460 --> 00:05:46,270
example you can create and missus

146
00:05:44,020 --> 00:05:48,008
appliance in the cloud so you create an

147
00:05:46,270 --> 00:05:50,318
image for so then you can just create

148
00:05:48,009 --> 00:05:52,210
servers of that and it's image to do the

149
00:05:50,319 --> 00:05:54,849
scanning for example so there are lots

150
00:05:52,210 --> 00:05:57,219
of security vendors usually the old days

151
00:05:54,849 --> 00:06:00,569
you had to buy the box right where the

152
00:05:57,219 --> 00:06:02,919
hardware then they solve for you virtual

153
00:06:00,569 --> 00:06:05,399
images for example for VMware right

154
00:06:02,919 --> 00:06:08,169
sorry that you can install on ESXi

155
00:06:05,399 --> 00:06:10,930
and the cloud they created Mis we can

156
00:06:08,169 --> 00:06:12,938
which you can actually instantiate in

157
00:06:10,930 --> 00:06:15,520
your account to gain access to these

158
00:06:12,939 --> 00:06:17,680
security tools so that's one thing for

159
00:06:15,520 --> 00:06:19,389
example that you can utilize inside

160
00:06:17,680 --> 00:06:21,939
amador so some of the popular tools that

161
00:06:19,389 --> 00:06:25,360
we use have a place inside Amazon we can

162
00:06:21,939 --> 00:06:28,330
use them but as we said still there is a

163
00:06:25,360 --> 00:06:30,909
lot of focus on the homework that the

164
00:06:28,330 --> 00:06:32,770
defender has to do inside Amazon's own

165
00:06:30,909 --> 00:06:34,860
special environment and their own

166
00:06:32,770 --> 00:06:37,330
ecosystem I've seen many times

167
00:06:34,860 --> 00:06:38,979
organizations use Amazon just like they

168
00:06:37,330 --> 00:06:40,870
use the regular browser so for example

169
00:06:38,979 --> 00:06:43,240
the ec2 instance they use it exactly

170
00:06:40,870 --> 00:06:44,080
like it's like a regular server so they

171
00:06:43,240 --> 00:06:45,629
log in they

172
00:06:44,080 --> 00:06:48,250
- what - give it updates and all of that

173
00:06:45,629 --> 00:06:50,409
okay that's that's fine but that's not

174
00:06:48,250 --> 00:06:52,150
the power of the cloud you know they say

175
00:06:50,409 --> 00:06:54,938
treat your servers in the cloud like

176
00:06:52,150 --> 00:06:56,770
cats or look like pets so what they mean

177
00:06:54,939 --> 00:06:59,319
is that don't give any server special

178
00:06:56,770 --> 00:07:01,409
treatment use automation to manage all

179
00:06:59,319 --> 00:07:04,539
the servers to handle all the updates

180
00:07:01,409 --> 00:07:06,280
because when time goes on you'll see

181
00:07:04,539 --> 00:07:08,919
that your configuration well the care

182
00:07:06,280 --> 00:07:10,539
will be will begin to diverge right so

183
00:07:08,919 --> 00:07:12,549
not consistent yeah

184
00:07:10,539 --> 00:07:15,099
the cloud can help you with that if you

185
00:07:12,550 --> 00:07:17,050
use the clouds features the cloud native

186
00:07:15,099 --> 00:07:20,219
tools and the echo system that's

187
00:07:17,050 --> 00:07:24,099
intended for these services exactly user

188
00:07:20,219 --> 00:07:25,900
let's touch based on the I am module

189
00:07:24,099 --> 00:07:29,378
what's heard what should take of that do

190
00:07:25,900 --> 00:07:31,568
you think that's that it's easy as a

191
00:07:29,379 --> 00:07:32,110
developer or a sysadmin to do it the

192
00:07:31,569 --> 00:07:34,810
right way

193
00:07:32,110 --> 00:07:36,310
no it's complex yeah right super complex

194
00:07:34,810 --> 00:07:38,199
so I'm not gonna sit here and tell you

195
00:07:36,310 --> 00:07:40,120
that everything is easy no some things

196
00:07:38,199 --> 00:07:43,060
are really complex something some things

197
00:07:40,120 --> 00:07:45,189
especially when you're talking about the

198
00:07:43,060 --> 00:07:47,620
evolving of the ecosystem and everything

199
00:07:45,189 --> 00:07:51,250
needs you intertwine Amazon now has

200
00:07:47,620 --> 00:07:53,500
almost 6,000 permissions I am many of

201
00:07:51,250 --> 00:07:57,099
them don't allow customization so they

202
00:07:53,500 --> 00:07:59,199
are there are now only wildcard actions

203
00:07:57,099 --> 00:08:01,750
on those services so that's a really

204
00:07:59,199 --> 00:08:03,729
difficult thing for defenders to manage

205
00:08:01,750 --> 00:08:06,069
and that's a really good benefit for

206
00:08:03,729 --> 00:08:07,419
attackers because when permissions are

207
00:08:06,069 --> 00:08:10,569
really difficult to understand by

208
00:08:07,419 --> 00:08:13,870
developers they tend to give out lets

209
00:08:10,569 --> 00:08:15,729
excessive permission yeah so that's a

210
00:08:13,870 --> 00:08:20,610
really big problem and another problem

211
00:08:15,729 --> 00:08:23,979
I've seen that defenders usually don't

212
00:08:20,610 --> 00:08:26,560
monitor and manage the I M permissions

213
00:08:23,979 --> 00:08:29,199
so they don't push for example some of

214
00:08:26,560 --> 00:08:31,930
them do the basic stuff like autumn

215
00:08:29,199 --> 00:08:33,729
alert if any user gets added that's cool

216
00:08:31,930 --> 00:08:35,380
but do alert if there's a new key that

217
00:08:33,729 --> 00:08:37,300
was added alert if there's a policy that

218
00:08:35,380 --> 00:08:39,610
was added so some things are really

219
00:08:37,299 --> 00:08:41,140
complex or let's say require your own

220
00:08:39,610 --> 00:08:43,360
customization because Amazon doesn't

221
00:08:41,140 --> 00:08:47,019
allow it or doesn't not allow doesn't

222
00:08:43,360 --> 00:08:48,810
provide it by default have the past no

223
00:08:47,019 --> 00:08:52,360
so these are new things that the

224
00:08:48,810 --> 00:08:55,119
developers or defenders have to get used

225
00:08:52,360 --> 00:08:56,230
to so yeah sometimes go to the cloud

226
00:08:55,120 --> 00:08:57,820
could be a lot more work

227
00:08:56,230 --> 00:09:00,370
than the regular enterprise yeah for

228
00:08:57,820 --> 00:09:02,790
sure I would say so I would say like a

229
00:09:00,370 --> 00:09:06,730
lot of enterprises run into the cloud to

230
00:09:02,790 --> 00:09:09,699
to make it easier to run your backends

231
00:09:06,730 --> 00:09:11,680
but I would say it's more from the truth

232
00:09:09,700 --> 00:09:16,210
because it's a more complex environment

233
00:09:11,680 --> 00:09:18,339
more interoperable environment and as

234
00:09:16,210 --> 00:09:20,080
you mentioning the ABS profiles and all

235
00:09:18,340 --> 00:09:22,450
the intertwine maintenance and there we

236
00:09:20,080 --> 00:09:24,850
have like reverse blacklisting functions

237
00:09:22,450 --> 00:09:26,650
now you're not actions which sort of is

238
00:09:24,850 --> 00:09:28,690
not action in conjunction with the law

239
00:09:26,650 --> 00:09:30,870
sort of means if you haven't explicitly

240
00:09:28,690 --> 00:09:33,280
said this is not allowed

241
00:09:30,870 --> 00:09:35,500
then it's allowed yeah the white list

242
00:09:33,280 --> 00:09:39,120
versus black list approach that's really

243
00:09:35,500 --> 00:09:45,310
just twisting your mind the thing is

244
00:09:39,120 --> 00:09:47,080
with the Amazon with organisations

245
00:09:45,310 --> 00:09:49,569
mortgage Amazon they think they want to

246
00:09:47,080 --> 00:09:52,090
have less problems and they had you not

247
00:09:49,570 --> 00:09:58,810
can have less problems we just hope that

248
00:09:52,090 --> 00:10:00,520
we get to know better problem so yeah if

249
00:09:58,810 --> 00:10:03,280
there's an organization that has lots of

250
00:10:00,520 --> 00:10:05,800
developers hmm move it to the cloud

251
00:10:03,280 --> 00:10:07,689
could be a really good choice given they

252
00:10:05,800 --> 00:10:10,000
actually give attention to the edulis

253
00:10:07,690 --> 00:10:11,800
and brampton because to it so yeah so

254
00:10:10,000 --> 00:10:13,780
they don't just use it just like any

255
00:10:11,800 --> 00:10:15,640
other regular but it's more or less like

256
00:10:13,780 --> 00:10:17,740
don't you think it's more or less of a

257
00:10:15,640 --> 00:10:20,860
maturity level as well if you have a

258
00:10:17,740 --> 00:10:22,930
good and solid devops pipeline from the

259
00:10:20,860 --> 00:10:26,140
gecko like you're building everything in

260
00:10:22,930 --> 00:10:28,900
a in a more or less defined pipeline and

261
00:10:26,140 --> 00:10:32,380
sort of use cloud native stuff like

262
00:10:28,900 --> 00:10:35,910
terraform or some kind of yeah more or

263
00:10:32,380 --> 00:10:39,070
less streamlined and customer

264
00:10:35,910 --> 00:10:43,390
customizable pipeline and then you will

265
00:10:39,070 --> 00:10:45,040
be more or less ok but it's sort of it

266
00:10:43,390 --> 00:10:47,740
demands that you would know what you're

267
00:10:45,040 --> 00:10:51,189
doing exactly in every step ok so that's

268
00:10:47,740 --> 00:10:54,580
why it's so easy to to to get mess up so

269
00:10:51,190 --> 00:10:56,710
configuration issues in my opinion it's

270
00:10:54,580 --> 00:11:00,430
the new thing like we talked about this

271
00:10:56,710 --> 00:11:01,900
is RF and the metadata layers that's

272
00:11:00,430 --> 00:11:05,199
just part of it then you have this

273
00:11:01,900 --> 00:11:07,000
complex feature sets that nobody really

274
00:11:05,200 --> 00:11:08,890
understands and are really really proud

275
00:11:07,000 --> 00:11:10,120
to be misconfigure yeah the problem with

276
00:11:08,890 --> 00:11:11,710
automation

277
00:11:10,120 --> 00:11:13,750
Automation should be good right it's a

278
00:11:11,710 --> 00:11:16,390
positive word when you the automation

279
00:11:13,750 --> 00:11:18,490
arts the probably automation if you

280
00:11:16,390 --> 00:11:23,530
automate your wrong stuff now you have

281
00:11:18,490 --> 00:11:24,820
an automated problem that yes really

282
00:11:23,530 --> 00:11:27,670
tricky to understand the difference I

283
00:11:24,820 --> 00:11:30,880
liked an example now terraform versus

284
00:11:27,670 --> 00:11:32,800
Jeff which one do use chef's for example

285
00:11:30,880 --> 00:11:34,570
is is good to manage running

286
00:11:32,800 --> 00:11:36,370
environments that are already divergent

287
00:11:34,570 --> 00:11:38,410
for example because it it tries based on

288
00:11:36,370 --> 00:11:41,800
SSH keys for example that it uses to

289
00:11:38,410 --> 00:11:44,050
manage the server's terraform on the

290
00:11:41,800 --> 00:11:46,390
other hand is best used to create an

291
00:11:44,050 --> 00:11:48,579
environment instead of managing and

292
00:11:46,390 --> 00:11:51,819
running one that's already diverged or

293
00:11:48,580 --> 00:11:54,850
change for example so really if you if

294
00:11:51,820 --> 00:11:57,160
you had like thousands of resources to

295
00:11:54,850 --> 00:11:59,020
manage then you go to these small

296
00:11:57,160 --> 00:12:01,660
differences will manifest themselves at

297
00:11:59,020 --> 00:12:03,970
a much greater and grander scale that's

298
00:12:01,660 --> 00:12:05,589
why automation is really you know tricky

299
00:12:03,970 --> 00:12:08,350
if you automate the bad stuff or the

300
00:12:05,590 --> 00:12:09,820
wrong stuff because now you have 10,000

301
00:12:08,350 --> 00:12:12,670
times the problem because your automated

302
00:12:09,820 --> 00:12:14,500
the problem it's in yeah so this was a

303
00:12:12,670 --> 00:12:17,199
lot about post exploitation I guess

304
00:12:14,500 --> 00:12:18,760
mostly how do you get there typically

305
00:12:17,200 --> 00:12:20,260
how what's the easiest way to get like

306
00:12:18,760 --> 00:12:23,260
they the first foot-tall the first

307
00:12:20,260 --> 00:12:25,330
access keys usually if you see a

308
00:12:23,260 --> 00:12:27,160
practice of how most organizations are

309
00:12:25,330 --> 00:12:30,580
attack in the cloud it's usually through

310
00:12:27,160 --> 00:12:33,250
regular what variabilities the thing is

311
00:12:30,580 --> 00:12:36,010
many times these regular web

312
00:12:33,250 --> 00:12:37,810
vulnerabilities manifest their severity

313
00:12:36,010 --> 00:12:39,370
differently in the cloud I'll give an

314
00:12:37,810 --> 00:12:42,609
example suppose I have a regular

315
00:12:39,370 --> 00:12:45,330
enterprise that runs a Windows database

316
00:12:42,610 --> 00:12:48,610
server and I've have asked injection

317
00:12:45,330 --> 00:12:51,070
usually I could run my own SQL code on

318
00:12:48,610 --> 00:12:52,840
that Windows database server right SQL

319
00:12:51,070 --> 00:12:55,390
Server but then I can use it for example

320
00:12:52,840 --> 00:12:58,090
the experiment gem procedure to run

321
00:12:55,390 --> 00:12:59,770
commands on that server itself and maybe

322
00:12:58,090 --> 00:13:02,560
come home as that server and then from

323
00:12:59,770 --> 00:13:04,689
that server go on to the to the rest of

324
00:13:02,560 --> 00:13:08,380
the data setting right now in the cloud

325
00:13:04,690 --> 00:13:10,290
suppose a cloud customer uses RDS

326
00:13:08,380 --> 00:13:13,000
Amazon's

327
00:13:10,290 --> 00:13:15,040
distributed to take care of this service

328
00:13:13,000 --> 00:13:17,230
yeah

329
00:13:15,040 --> 00:13:19,599
when you have asked injection on RDS

330
00:13:17,230 --> 00:13:21,430
you're usually constrained at all the

331
00:13:19,600 --> 00:13:23,530
data itself so you can't compromise that

332
00:13:21,430 --> 00:13:26,770
super because it's managed by Amazon and

333
00:13:23,530 --> 00:13:29,199
you can't use it to let's say propagate

334
00:13:26,770 --> 00:13:30,579
further through the environment as is as

335
00:13:29,200 --> 00:13:33,580
it to as a regular enterprise

336
00:13:30,580 --> 00:13:35,680
so this means that in my opinion regular

337
00:13:33,580 --> 00:13:38,050
SQL injection regular entreprises is

338
00:13:35,680 --> 00:13:39,459
maybe more dangerous than in adolescent

339
00:13:38,050 --> 00:13:42,010
environments because you could reach

340
00:13:39,460 --> 00:13:42,880
there like a snapshot spell let's see

341
00:13:42,010 --> 00:13:45,310
the other way around

342
00:13:42,880 --> 00:13:47,680
that's a suresh yeah as we as I said in

343
00:13:45,310 --> 00:13:49,660
the talk nobody cared about as a seraph

344
00:13:47,680 --> 00:13:52,209
before they even called it over yeah

345
00:13:49,660 --> 00:13:54,490
like yeah it's a you know it's a lame

346
00:13:52,210 --> 00:13:56,860
name doesn't you need you know capture

347
00:13:54,490 --> 00:13:59,080
the severity of its own nobility I fear

348
00:13:56,860 --> 00:14:00,700
it may be can if you can guess and an

349
00:13:59,080 --> 00:14:03,460
internal service you can call it's me

350
00:14:00,700 --> 00:14:04,900
yeah that's it so inside dead centers at

351
00:14:03,460 --> 00:14:07,570
regular enterprise they didn't care much

352
00:14:04,900 --> 00:14:10,300
about xsrf usual always reported as low

353
00:14:07,570 --> 00:14:11,650
in some people even don't even report it

354
00:14:10,300 --> 00:14:14,530
they don't even see the need for it

355
00:14:11,650 --> 00:14:17,020
however to see that now in the cloud as

356
00:14:14,530 --> 00:14:20,040
we demonstrated and in the talk fascist

357
00:14:17,020 --> 00:14:23,530
RF could be the most dangerous polity

358
00:14:20,040 --> 00:14:26,079
with that fine but ask Capital One how

359
00:14:23,530 --> 00:14:28,089
it played out for them ya know we have a

360
00:14:26,080 --> 00:14:30,250
lot of breaches of those as well have

361
00:14:28,090 --> 00:14:33,960
you looked anything of the clustering

362
00:14:30,250 --> 00:14:37,810
the kubernetes cluster in navy s dks

363
00:14:33,960 --> 00:14:39,820
yeah Amazon's say containers and

364
00:14:37,810 --> 00:14:43,630
kubernetes services ACS as weak a

365
00:14:39,820 --> 00:14:44,830
cáceres aks sorry have lots of issues

366
00:14:43,630 --> 00:14:46,270
that need to be understood correctly

367
00:14:44,830 --> 00:14:47,050
because now we have the complexity of

368
00:14:46,270 --> 00:14:49,060
kubernetes

369
00:14:47,050 --> 00:14:52,530
then under that the complexity of edulis

370
00:14:49,060 --> 00:14:56,170
itself but it's not my specialization

371
00:14:52,530 --> 00:14:58,449
there is as a tool released by Rhino

372
00:14:56,170 --> 00:15:00,640
security labs for the content container

373
00:14:58,450 --> 00:15:02,740
attacks on IDs so someone who's

374
00:15:00,640 --> 00:15:05,260
interested in both edulis and containers

375
00:15:02,740 --> 00:15:07,630
/ kubernetes could check into that - I

376
00:15:05,260 --> 00:15:09,010
think it's called ec cat or something

377
00:15:07,630 --> 00:15:10,720
like that I don't remember the name

378
00:15:09,010 --> 00:15:12,600
exactly I think something like that and

379
00:15:10,720 --> 00:15:16,620
then you have pakku as well for yeah

380
00:15:12,600 --> 00:15:19,390
exploitation exactly in your - yeah

381
00:15:16,620 --> 00:15:25,080
yeah but it means as I said we talk

382
00:15:19,390 --> 00:15:25,080
means life in Arabic you know Clyde that

383
00:15:25,380 --> 00:15:30,850
is a post exploitation attack framework

384
00:15:28,930 --> 00:15:33,030
so it assumes that you only have a key

385
00:15:30,850 --> 00:15:35,970
you have an access key in some context

386
00:15:33,030 --> 00:15:38,319
so that's a test knows that it has

387
00:15:35,970 --> 00:15:40,810
privileges to do whatever feature you

388
00:15:38,320 --> 00:15:42,910
want to use inside inside box oh but it

389
00:15:40,810 --> 00:15:45,550
allows you to attack ec2 instances

390
00:15:42,910 --> 00:15:48,160
without having access to TSO such key as

391
00:15:45,550 --> 00:15:50,050
we've seen in writing features as well

392
00:15:48,160 --> 00:15:53,410
yes really yes it takes a long time

393
00:15:50,050 --> 00:15:55,540
exactly the attack service is very

394
00:15:53,410 --> 00:15:57,670
important because sometimes you miss

395
00:15:55,540 --> 00:15:59,199
something the defenders missed you you

396
00:15:57,670 --> 00:16:03,040
see something the defender is missed for

397
00:15:59,200 --> 00:16:05,560
example sure and even as a consultant I

398
00:16:03,040 --> 00:16:07,060
do it with my clients because it could

399
00:16:05,560 --> 00:16:09,520
be the case that someone compromised my

400
00:16:07,060 --> 00:16:11,500
client they created the instance in for

401
00:16:09,520 --> 00:16:13,150
example Japan or South Paulo and the

402
00:16:11,500 --> 00:16:14,980
different features of Amazon I guess you

403
00:16:13,150 --> 00:16:20,050
can use it as like an audit tool that's

404
00:16:14,980 --> 00:16:21,370
exactly it actually dumps the lambda and

405
00:16:20,050 --> 00:16:23,530
rahmatullah variables which usually

406
00:16:21,370 --> 00:16:25,420
contain like pass order secrets so

407
00:16:23,530 --> 00:16:28,030
environment variables are wait for me

408
00:16:25,420 --> 00:16:29,079
for a developer to send arguments to the

409
00:16:28,030 --> 00:16:31,540
lambda function because the other

410
00:16:29,080 --> 00:16:34,480
function cannot be invoked already so

411
00:16:31,540 --> 00:16:37,500
it's a few seconds exactly that's how

412
00:16:34,480 --> 00:16:40,390
you can for example send let's say

413
00:16:37,500 --> 00:16:43,960
arguments or parameters to it work also

414
00:16:40,390 --> 00:16:45,970
dumped the both the secrets manager and

415
00:16:43,960 --> 00:16:49,240
the parameter store of Amazon which

416
00:16:45,970 --> 00:16:52,390
people usually use to store credentials

417
00:16:49,240 --> 00:16:53,800
keys parameters that other service can

418
00:16:52,390 --> 00:16:55,360
use for example suppose I have an

419
00:16:53,800 --> 00:16:57,130
application and they don't want to put

420
00:16:55,360 --> 00:16:59,920
the database password in a plain text in

421
00:16:57,130 --> 00:17:03,640
the config file so I can dynamically

422
00:16:59,920 --> 00:17:05,619
call Amazon secret manager at runtime to

423
00:17:03,640 --> 00:17:07,240
obtain the password credentials and that

424
00:17:05,619 --> 00:17:11,469
it's not now living in the configuration

425
00:17:07,240 --> 00:17:13,180
file itself so it's a really good case

426
00:17:11,470 --> 00:17:15,910
to let's a good use case for secrets

427
00:17:13,180 --> 00:17:17,709
manager to not have your secrets in

428
00:17:15,910 --> 00:17:19,900
plain text in source code so you use

429
00:17:17,709 --> 00:17:21,280
that feature of Amazon so a barque can

430
00:17:19,900 --> 00:17:23,530
also of course give it enough

431
00:17:21,280 --> 00:17:25,869
permissions for the API key that you

432
00:17:23,530 --> 00:17:28,850
have somehow obtained before to dump

433
00:17:25,869 --> 00:17:30,860
these secrets manager inside inside

434
00:17:28,850 --> 00:17:33,500
Kim s and parameter story yeah yeah

435
00:17:30,860 --> 00:17:35,899
secrets manager parameter store the way

436
00:17:33,500 --> 00:17:37,970
Berkeley uses the runs the attacks

437
00:17:35,900 --> 00:17:39,770
against ec2 instances is using the

438
00:17:37,970 --> 00:17:42,050
system's merger feature inside Amazon

439
00:17:39,770 --> 00:17:44,320
systems major feature allows you to run

440
00:17:42,050 --> 00:17:47,870
your own power shell or bash shell

441
00:17:44,320 --> 00:17:49,370
scripts on the ec2 instances and this

442
00:17:47,870 --> 00:17:51,229
would come from inside Amazon so a

443
00:17:49,370 --> 00:17:55,780
defender looking for regular connections

444
00:17:51,230 --> 00:17:59,360
coming from outside yeah yeah and it's

445
00:17:55,780 --> 00:18:01,520
it is locked actually both input and

446
00:17:59,360 --> 00:18:03,229
output inside system manager so system

447
00:18:01,520 --> 00:18:05,389
Engine logs the ambit and the output of

448
00:18:03,230 --> 00:18:06,890
all these commands but unless they

449
00:18:05,390 --> 00:18:08,180
defined your knows about system manager

450
00:18:06,890 --> 00:18:09,560
then you know the misses so that's the

451
00:18:08,180 --> 00:18:13,250
point that's why you have to understand

452
00:18:09,560 --> 00:18:16,399
the EDS ecosystem yeah that's really

453
00:18:13,250 --> 00:18:18,440
good summer yeah and to finish this off

454
00:18:16,400 --> 00:18:20,300
I would like to thank you for

455
00:18:18,440 --> 00:18:25,720
enlightening me on one of the new

456
00:18:20,300 --> 00:18:25,720
services of Amazon the satellite ground

457
00:18:26,260 --> 00:18:32,810
services are so you know so various the

458
00:18:30,650 --> 00:18:35,840
really widespread unbelievable thing is

459
00:18:32,810 --> 00:18:38,899
video transcoding servers satellite

460
00:18:35,840 --> 00:18:41,199
ground stations you know they also have

461
00:18:38,900 --> 00:18:44,480
a service called Mechanical Turk yeah

462
00:18:41,200 --> 00:18:45,740
it's where you hire no booty labor to do

463
00:18:44,480 --> 00:18:50,360
things for you yeah just pressing

464
00:18:45,740 --> 00:18:53,990
there's lots of really interesting

465
00:18:50,360 --> 00:18:56,389
services you know whether bad or good

466
00:18:53,990 --> 00:18:58,670
depends on your interpretation but

467
00:18:56,390 --> 00:19:01,190
really it's that's why it's difficult to

468
00:18:58,670 --> 00:19:02,960
to to and to secure so if our listeners

469
00:19:01,190 --> 00:19:05,150
would like to like tune in on your

470
00:19:02,960 --> 00:19:06,860
channel where do you are you have a

471
00:19:05,150 --> 00:19:11,450
Twitter handle yes I drove it Twitter

472
00:19:06,860 --> 00:19:13,820
handle yes it's ball net V oh you Ln 80

473
00:19:11,450 --> 00:19:16,100
yeah I think it was a github maple with

474
00:19:13,820 --> 00:19:18,919
same MO yes yes Amy also my github so

475
00:19:16,100 --> 00:19:21,230
now you know where to go yeah yeah

476
00:19:18,920 --> 00:19:22,510
really good yeah thank you yeah thank

477
00:19:21,230 --> 00:19:25,510
you

478
00:19:22,510 --> 00:19:25,510
good

