1
00:00:03,180 --> 00:00:14,879
so um quick question how many of you are

2
00:00:06,669 --> 00:00:20,439
red teamers okay blue teamers okay

3
00:00:14,879 --> 00:00:26,980
pentesters malware people with the rest

4
00:00:20,439 --> 00:00:28,808
of you what do you do know we're asking

5
00:00:26,980 --> 00:00:31,210
this as the solar talk is basically like

6
00:00:28,809 --> 00:00:34,149
attacking and defending when we're

7
00:00:31,210 --> 00:00:36,370
looking for what focused like where we

8
00:00:34,149 --> 00:00:40,269
should focus more but i guess we'll just

9
00:00:36,370 --> 00:00:43,748
go with it so originally was battling

10
00:00:40,269 --> 00:00:46,329
the clouds but we worked on it and found

11
00:00:43,749 --> 00:00:48,670
some new vectors and we called it from

12
00:00:46,329 --> 00:00:50,620
the cloud to the ground or from having

13
00:00:48,670 --> 00:00:53,589
to hell

14
00:00:50,620 --> 00:00:55,809
quick intro i'm dan egoland

15
00:00:53,589 --> 00:00:59,409
i'm a CTO at a company called net alpha

16
00:00:55,809 --> 00:00:59,800
financial systems mo will present

17
00:00:59,409 --> 00:01:02,829
himself

18
00:00:59,800 --> 00:01:06,610
Mosab freed i'm the co-founder of la

19
00:01:02,829 --> 00:01:08,530
drops pen tester red teamer mobile

20
00:01:06,610 --> 00:01:12,370
application pen tester the ordinary

21
00:01:08,530 --> 00:01:15,580
part-time hair model yeah and oh a

22
00:01:12,370 --> 00:01:25,360
really important question who saw don't

23
00:01:15,580 --> 00:01:29,200
mess with the Zohan yeah so we're going

24
00:01:25,360 --> 00:01:33,810
to be talking about a double yes anyone

25
00:01:29,200 --> 00:01:36,550
running their systems on the cloud great

26
00:01:33,810 --> 00:01:39,520
so you have the share responsibility

27
00:01:36,550 --> 00:01:42,340
model depends on what you use if it's

28
00:01:39,520 --> 00:01:46,449
like infrastructure just ec two's you're

29
00:01:42,340 --> 00:01:49,300
in charge of like your OS apps data the

30
00:01:46,450 --> 00:01:51,160
virtual networks a delious will take

31
00:01:49,300 --> 00:01:54,340
care of the hypervisor is the physical

32
00:01:51,160 --> 00:01:56,470
networks and hardware itself if using

33
00:01:54,340 --> 00:01:58,930
something like a pass like elastic

34
00:01:56,470 --> 00:02:01,929
beanstalk you don't even have to take

35
00:01:58,930 --> 00:02:03,210
care of a operating system same thing

36
00:02:01,930 --> 00:02:07,870
with the

37
00:02:03,210 --> 00:02:10,239
Fargate if you're using ECS and then the

38
00:02:07,870 --> 00:02:12,700
last one which is like SAS maybe

39
00:02:10,240 --> 00:02:14,560
something similar to lambdas even in

40
00:02:12,700 --> 00:02:16,660
lambda you don't have to take care of

41
00:02:14,560 --> 00:02:19,950
your if you have to take care of your

42
00:02:16,660 --> 00:02:22,870
data but yeah I would call them the SAS

43
00:02:19,950 --> 00:02:25,269
so the first thing when you pen test an

44
00:02:22,870 --> 00:02:28,240
AWS environment or any environment you

45
00:02:25,270 --> 00:02:29,590
want to get foothold so there are a

46
00:02:28,240 --> 00:02:32,380
couple ways you can always look for

47
00:02:29,590 --> 00:02:35,260
exposed machines would like old versions

48
00:02:32,380 --> 00:02:38,859
all the servers would like CDs that you

49
00:02:35,260 --> 00:02:43,660
can find in Stan we can refine manually

50
00:02:38,860 --> 00:02:47,709
or like using some tool like web app

51
00:02:43,660 --> 00:02:50,950
logic vulnerabilities there's a lot of

52
00:02:47,709 --> 00:02:53,470
SSR f of seeing a bunch of presentations

53
00:02:50,950 --> 00:02:56,200
I haven't seen in a while too much like

54
00:02:53,470 --> 00:02:58,390
you have to be very talented developer

55
00:02:56,200 --> 00:03:02,260
to have an exposed SSS RF and your

56
00:02:58,390 --> 00:03:04,899
server and then you have the whole Maher

57
00:03:02,260 --> 00:03:08,470
data server anyone familiar with the

58
00:03:04,900 --> 00:03:11,140
made their server and are able yes great

59
00:03:08,470 --> 00:03:13,180
so basically stores everything to your

60
00:03:11,140 --> 00:03:16,359
instance needs to know and all the

61
00:03:13,180 --> 00:03:21,100
permission that it has so we're gonna

62
00:03:16,360 --> 00:03:24,130
start with a one demo which is a DC

63
00:03:21,100 --> 00:03:25,989
realization attack on celery so it's

64
00:03:24,130 --> 00:03:27,970
basically an exposed write a server

65
00:03:25,989 --> 00:03:31,600
which you can go to show down and you

66
00:03:27,970 --> 00:03:33,340
will see tens of thousands of them so I

67
00:03:31,600 --> 00:03:35,640
made a little script that will look for

68
00:03:33,340 --> 00:03:39,549
a key with the celery which is a worker

69
00:03:35,640 --> 00:03:43,359
and we'll put a malicious pickle which

70
00:03:39,549 --> 00:03:50,709
we call the home's bomb and we'll get us

71
00:03:43,360 --> 00:03:54,730
a shell so let's see that so first thing

72
00:03:50,709 --> 00:03:56,860
we do is we got a server let's say in

73
00:03:54,730 --> 00:04:01,060
showdown we found a server we got our

74
00:03:56,860 --> 00:04:04,739
target I also to script after we're

75
00:04:01,060 --> 00:04:07,810
gonna put a lock on the cue get the task

76
00:04:04,739 --> 00:04:11,230
change it the data in the task with our

77
00:04:07,810 --> 00:04:14,190
malicious object once it gets on pickled

78
00:04:11,230 --> 00:04:14,190
we get a shell

79
00:04:15,130 --> 00:04:22,900
so let's see that in action so we have

80
00:04:17,829 --> 00:04:24,490
enough chat on the right side the right

81
00:04:22,900 --> 00:04:28,270
side right here we have nut chat and

82
00:04:24,490 --> 00:04:30,940
we'll have a shell pop up there we go we

83
00:04:28,270 --> 00:04:35,140
got a shell we did a curl to the mayor

84
00:04:30,940 --> 00:04:39,370
data server got some user data

85
00:04:35,140 --> 00:04:42,880
we also see some if you notice you see

86
00:04:39,370 --> 00:04:46,030
that it's running Amazon SSM agent which

87
00:04:42,880 --> 00:04:46,540
is a Systems Manager just from doing

88
00:04:46,030 --> 00:04:48,549
that

89
00:04:46,540 --> 00:04:51,880
you know what permissions the machine

90
00:04:48,550 --> 00:04:54,600
has and that other machines can execute

91
00:04:51,880 --> 00:04:58,810
code on this machine on that machine

92
00:04:54,600 --> 00:05:01,510
which is pretty good recon info because

93
00:04:58,810 --> 00:05:03,190
in AWS in order to once you get a set of

94
00:05:01,510 --> 00:05:05,770
credentials you have no idea what they

95
00:05:03,190 --> 00:05:09,580
can do the only way for you to find out

96
00:05:05,770 --> 00:05:13,390
is to start a for-loop trying to access

97
00:05:09,580 --> 00:05:16,090
every service and that is super noisy

98
00:05:13,390 --> 00:05:18,159
I personally implemented some strips

99
00:05:16,090 --> 00:05:20,710
that will listen to the noise on cloud

100
00:05:18,160 --> 00:05:22,270
trail and if you start doing that the

101
00:05:20,710 --> 00:05:24,340
Machine I'll kill the machine and pop a

102
00:05:22,270 --> 00:05:28,330
new one and you'll be out within a

103
00:05:24,340 --> 00:05:31,239
minute so don't do stuff it's like

104
00:05:28,330 --> 00:05:32,530
running and map and an internal and Moe

105
00:05:31,240 --> 00:05:35,530
will tell you that you want to run an

106
00:05:32,530 --> 00:05:36,669
nmap on full-blast motor and internal

107
00:05:35,530 --> 00:05:42,760
because you'll get a tech dead and

108
00:05:36,670 --> 00:05:45,670
checked out some here we're gonna dump

109
00:05:42,760 --> 00:05:49,270
the credentials for this machine we can

110
00:05:45,670 --> 00:05:52,390
use this potential after from our local

111
00:05:49,270 --> 00:06:00,159
machine put it in our profile and start

112
00:05:52,390 --> 00:06:02,620
pinging different services and lastly

113
00:06:00,160 --> 00:06:04,780
we'll get the yeah there we go we have

114
00:06:02,620 --> 00:06:09,820
the access key don't try to use it it's

115
00:06:04,780 --> 00:06:13,690
expired I deleted it this is literally

116
00:06:09,820 --> 00:06:18,120
the 40 lines of code I had to do to look

117
00:06:13,690 --> 00:06:21,610
for machines that are vulnerable to this

118
00:06:18,120 --> 00:06:24,610
just put a lock on the road ask you if

119
00:06:21,610 --> 00:06:27,550
it has combo binding that means it's a

120
00:06:24,610 --> 00:06:28,630
celery worker you can look for

121
00:06:27,550 --> 00:06:31,840
application

122
00:06:28,630 --> 00:06:36,130
/x python serialized that means the uses

123
00:06:31,840 --> 00:06:39,010
pickle PI ml also has a vulnerability

124
00:06:36,130 --> 00:06:41,440
which you can use until the latest

125
00:06:39,010 --> 00:06:43,480
version pickle was the default they

126
00:06:41,440 --> 00:06:50,710
changed it so a bit hard to get these

127
00:06:43,480 --> 00:06:53,740
now but still wildly available so don't

128
00:06:50,710 --> 00:06:59,890
use pickle and you won't feel any pain

129
00:06:53,740 --> 00:07:02,860
or llamo second thing regarding clouds

130
00:06:59,890 --> 00:07:06,190
and this whole DevOps movement where you

131
00:07:02,860 --> 00:07:07,990
have the Cloud Foundry landscape with

132
00:07:06,190 --> 00:07:10,990
like all these new cool tools that let

133
00:07:07,990 --> 00:07:13,570
you do everything so easily but when you

134
00:07:10,990 --> 00:07:15,370
do everything so easily a lot of

135
00:07:13,570 --> 00:07:17,770
security risks from especially when

136
00:07:15,370 --> 00:07:20,910
everything works perfectly with default

137
00:07:17,770 --> 00:07:28,570
settings anyone use any service smash

138
00:07:20,910 --> 00:07:31,510
console Lindner sto no ok so for this

139
00:07:28,570 --> 00:07:33,310
example we're gonna use console it's you

140
00:07:31,510 --> 00:07:36,070
basically it's a distributed service

141
00:07:33,310 --> 00:07:38,850
mesh you register your services to it it

142
00:07:36,070 --> 00:07:41,860
installs DNS maps from your machine and

143
00:07:38,850 --> 00:07:44,080
let's say you have 10 poster servers and

144
00:07:41,860 --> 00:07:47,760
you want to pink one of them you just

145
00:07:44,080 --> 00:07:50,380
pink post dress dot service console and

146
00:07:47,760 --> 00:07:54,909
it'll reach one of them no matter where

147
00:07:50,380 --> 00:07:57,540
you are this is a little bit of info I

148
00:07:54,910 --> 00:07:59,950
mean I'm not gonna go through all of it

149
00:07:57,540 --> 00:08:03,130
you'll have the slides but this is

150
00:07:59,950 --> 00:08:06,610
basically service discovery and service

151
00:08:03,130 --> 00:08:08,080
mesh it also has a cycler proxy which

152
00:08:06,610 --> 00:08:12,430
you can use for end-to-end encryption

153
00:08:08,080 --> 00:08:14,229
between your services this is what it

154
00:08:12,430 --> 00:08:15,910
looks like on the dashboard if you want

155
00:08:14,230 --> 00:08:20,590
to see what services you have registered

156
00:08:15,910 --> 00:08:23,320
so I'm gonna go and decide but easier to

157
00:08:20,590 --> 00:08:25,989
console to Postgres servers of a primary

158
00:08:23,320 --> 00:08:28,150
and then a secondary replicas one

159
00:08:25,990 --> 00:08:30,310
century server for anyone who doesn't

160
00:08:28,150 --> 00:08:33,819
know what century is or are to two of

161
00:08:30,310 --> 00:08:36,669
them know it's to health checks century

162
00:08:33,820 --> 00:08:38,589
is for error reporting from your apps if

163
00:08:36,669 --> 00:08:39,909
you get a crash it's a nice dashboard

164
00:08:38,589 --> 00:08:43,060
shows you what crashed what

165
00:08:39,909 --> 00:08:44,890
line what code and the vault server

166
00:08:43,059 --> 00:08:49,329
which is a secret management server

167
00:08:44,890 --> 00:08:51,610
which will talk about it a bit later but

168
00:08:49,330 --> 00:08:53,530
from any machine that is on that service

169
00:08:51,610 --> 00:08:56,260
mesh like the one that we just popped

170
00:08:53,530 --> 00:08:59,020
right now with celery you can do consul

171
00:08:56,260 --> 00:09:02,710
catalogue and you will see what services

172
00:08:59,020 --> 00:09:05,079
are available so we have these four you

173
00:09:02,710 --> 00:09:08,920
can also do a dig query for post res and

174
00:09:05,080 --> 00:09:13,740
you will see that you have two a records

175
00:09:08,920 --> 00:09:17,709
for two different posed rest servers so

176
00:09:13,740 --> 00:09:21,100
I'm thinking if it's so easy to register

177
00:09:17,710 --> 00:09:22,590
a service and I'm on a machine that's

178
00:09:21,100 --> 00:09:25,390
turned to the service mesh

179
00:09:22,590 --> 00:09:28,750
why wouldn't just I can make like a

180
00:09:25,390 --> 00:09:31,180
rogue service and it will run robin and

181
00:09:28,750 --> 00:09:33,190
at some point it will hit me so I wrote

182
00:09:31,180 --> 00:09:35,650
a little script I don't know if anyone

183
00:09:33,190 --> 00:09:38,530
saw read the wire protocol for post

184
00:09:35,650 --> 00:09:40,449
dress but the server literally tells the

185
00:09:38,530 --> 00:09:44,410
client if it should send the password in

186
00:09:40,450 --> 00:09:46,960
plain text or an md5 hash and you can

187
00:09:44,410 --> 00:09:49,060
play with it you can the client will say

188
00:09:46,960 --> 00:09:51,490
I want to authenticate with SSL if the

189
00:09:49,060 --> 00:09:55,180
server says I don't do SSL their client

190
00:09:51,490 --> 00:09:57,760
will by default downgrade so I made a

191
00:09:55,180 --> 00:09:59,979
small script that will make it downgrade

192
00:09:57,760 --> 00:10:02,080
it will make it sending in plain text

193
00:09:59,980 --> 00:10:04,900
but then it will talk to the database

194
00:10:02,080 --> 00:10:07,990
and send everything properly a large

195
00:10:04,900 --> 00:10:12,550
database once so it's transparent but

196
00:10:07,990 --> 00:10:14,290
end of they the user doesn't know I'm

197
00:10:12,550 --> 00:10:17,170
getting his friend n chosen plaintext

198
00:10:14,290 --> 00:10:19,599
and he's still talking to the database

199
00:10:17,170 --> 00:10:22,479
so this is how you register a new

200
00:10:19,600 --> 00:10:26,530
service you have the name you have the

201
00:10:22,480 --> 00:10:27,730
ID you even have a health check and you

202
00:10:26,530 --> 00:10:31,630
can see what you can do in this health

203
00:10:27,730 --> 00:10:33,340
check I mean bin bash and use your

204
00:10:31,630 --> 00:10:36,970
imagination and what command you want to

205
00:10:33,340 --> 00:10:39,060
run every 60 seconds very very dangerous

206
00:10:36,970 --> 00:10:42,670
I don't know why they allow that but

207
00:10:39,060 --> 00:10:42,880
they used to allow remote scripts as

208
00:10:42,670 --> 00:10:46,420
well

209
00:10:42,880 --> 00:10:48,370
they canceled it but I mean if you have

210
00:10:46,420 --> 00:10:51,479
access you can have a strip double down

211
00:10:48,370 --> 00:10:51,480
a little remote strip so

212
00:10:53,000 --> 00:10:59,630
so we have the name we have the port 5 4

213
00:10:55,820 --> 00:11:01,850
3 2 which is the port for Postgres we

214
00:10:59,630 --> 00:11:04,280
have the or health check with arbitrary

215
00:11:01,850 --> 00:11:08,090
commands we're going to move it to the

216
00:11:04,280 --> 00:11:12,770
conflict directory do a hot reload it's

217
00:11:08,090 --> 00:11:18,050
not even gonna stop the service so let's

218
00:11:12,770 --> 00:11:22,460
explore this so I have two screencasts

219
00:11:18,050 --> 00:11:24,260
on the left I'm going to make the Rope

220
00:11:22,460 --> 00:11:29,780
service on the machine that I just

221
00:11:24,260 --> 00:11:32,240
popped so you can see that's the same

222
00:11:29,780 --> 00:11:38,110
configuration that I showed you before

223
00:11:32,240 --> 00:11:38,110
with the same ports I'm gonna run this

224
00:11:44,710 --> 00:11:54,230
now I got my little proxy Explorer

225
00:11:48,740 --> 00:11:56,480
script which will just do it will act as

226
00:11:54,230 --> 00:11:59,750
a transparent proxy it will get their

227
00:11:56,480 --> 00:12:04,310
credentials on the way just by utilizing

228
00:11:59,750 --> 00:12:10,010
this design feature of the Postgres wire

229
00:12:04,310 --> 00:12:13,780
protocol and I will speed up a little

230
00:12:10,010 --> 00:12:17,120
bit so you can see that the it's

231
00:12:13,780 --> 00:12:21,220
listening right now on the right side

232
00:12:17,120 --> 00:12:25,460
I'm gonna just open a Python shell and

233
00:12:21,220 --> 00:12:27,230
try to connect to post dress through my

234
00:12:25,460 --> 00:12:31,130
surface refering mechanism like I would

235
00:12:27,230 --> 00:12:34,610
do I would just go post dress dot

236
00:12:31,130 --> 00:12:37,520
service console and I expected to hit

237
00:12:34,610 --> 00:12:41,240
one of my servers so you can see that

238
00:12:37,520 --> 00:12:43,370
I'll do it a couple of times it won't

239
00:12:41,240 --> 00:12:44,840
worked right away because it does I do

240
00:12:43,370 --> 00:12:46,840
have a couple of servers so it's not

241
00:12:44,840 --> 00:12:52,340
gonna hit my rogue one right away

242
00:12:46,840 --> 00:12:57,890
but if we wait a little bit a little bit

243
00:12:52,340 --> 00:13:02,240
more we will see their credentials right

244
00:12:57,890 --> 00:13:03,740
there and the the other machine does not

245
00:13:02,240 --> 00:13:05,300
know that I take their credentials you

246
00:13:03,740 --> 00:13:06,980
can keep talking to pose

247
00:13:05,300 --> 00:13:10,189
I'll just relay everything in the

248
00:13:06,980 --> 00:13:12,460
background so I've seen this I've done

249
00:13:10,190 --> 00:13:15,020
this you don't want to do this

250
00:13:12,460 --> 00:13:18,110
protect your services check the

251
00:13:15,020 --> 00:13:20,210
integrity of the processes and I hope

252
00:13:18,110 --> 00:13:24,800
console will have better documentation

253
00:13:20,210 --> 00:13:26,210
because as everything new its you read

254
00:13:24,800 --> 00:13:29,150
the documentation they have like their

255
00:13:26,210 --> 00:13:30,760
production hardening version but it

256
00:13:29,150 --> 00:13:32,930
takes you so long to reach it and

257
00:13:30,760 --> 00:13:36,140
everything works so perfectly with one

258
00:13:32,930 --> 00:13:39,050
click that it's really like most people

259
00:13:36,140 --> 00:13:41,420
will not get there so I'm gonna pass it

260
00:13:39,050 --> 00:13:43,880
off to moe

261
00:13:41,420 --> 00:13:46,130
to give us a little intro about Active

262
00:13:43,880 --> 00:13:47,500
Directory and then we'll connect

263
00:13:46,130 --> 00:13:51,260
everything together

264
00:13:47,500 --> 00:13:53,060
sure Thank You Danny so you know Active

265
00:13:51,260 --> 00:13:55,700
Directory is used to manage computers

266
00:13:53,060 --> 00:13:58,670
and users in most enterprises this is

267
00:13:55,700 --> 00:14:01,340
very much on a fundamental level

268
00:13:58,670 --> 00:14:04,400
it's a directory service exchange and

269
00:14:01,340 --> 00:14:09,440
LDAP is a protocol that's used to talk

270
00:14:04,400 --> 00:14:11,540
to it now in this attack scenario Danny

271
00:14:09,440 --> 00:14:14,330
and I were going back and forth you know

272
00:14:11,540 --> 00:14:16,300
how do you make a realistic attack

273
00:14:14,330 --> 00:14:18,770
scenario how do we connect it right

274
00:14:16,300 --> 00:14:21,050
we're talking about companies that are

275
00:14:18,770 --> 00:14:24,170
migrating to the cloud so they have

276
00:14:21,050 --> 00:14:26,750
their like ad servers their domain admin

277
00:14:24,170 --> 00:14:29,120
control domain controller is under

278
00:14:26,750 --> 00:14:31,370
internal network and then they have

279
00:14:29,120 --> 00:14:34,400
something that's on the cloud and there

280
00:14:31,370 --> 00:14:36,650
is a connection like there is wire

281
00:14:34,400 --> 00:14:39,380
between them how do we cross that wire

282
00:14:36,650 --> 00:14:42,829
and go from the cloud to the ground to

283
00:14:39,380 --> 00:14:44,390
the internal and you know there's a we

284
00:14:42,830 --> 00:14:45,950
thought of different attack scenarios

285
00:14:44,390 --> 00:14:51,020
you could have said oh there's a system

286
00:14:45,950 --> 00:14:59,870
that's exposed with RDP to the internet

287
00:14:51,020 --> 00:15:02,180
it's got blue key you're gonna know like

288
00:14:59,870 --> 00:15:05,380
enterprises focusable huffin our server

289
00:15:02,180 --> 00:15:07,790
with RDP you would like blue keep

290
00:15:05,380 --> 00:15:10,760
exposed to the Internet yeah hopefully

291
00:15:07,790 --> 00:15:13,370
we hope so but you know like most of

292
00:15:10,760 --> 00:15:15,080
what we saw was things from turbo low

293
00:15:13,370 --> 00:15:16,250
countries where you can see the screen

294
00:15:15,080 --> 00:15:17,790
and they actually asked you for

295
00:15:16,250 --> 00:15:20,490
activation code for Windows

296
00:15:17,790 --> 00:15:22,339
that's not interesting yes you know if

297
00:15:20,490 --> 00:15:24,930
you are legitimate legitimate

298
00:15:22,340 --> 00:15:27,270
organization and you have already

299
00:15:24,930 --> 00:15:29,579
exposed the internet and that instances

300
00:15:27,270 --> 00:15:31,560
happens to be vulnerable to flukey thing

301
00:15:29,580 --> 00:15:33,030
you have bigger problems on your hands

302
00:15:31,560 --> 00:15:35,699
so we're looking at a more of a

303
00:15:33,030 --> 00:15:38,850
realistic attack vector and the one that

304
00:15:35,700 --> 00:15:40,530
we identified was ad FS which is a

305
00:15:38,850 --> 00:15:43,740
single sign-on solution created by

306
00:15:40,530 --> 00:15:46,140
Microsoft and you know there's ad FS

307
00:15:43,740 --> 00:15:47,970
proxy and the proxy host in the cloud

308
00:15:46,140 --> 00:15:50,360
that allows to authenticate to Active

309
00:15:47,970 --> 00:15:53,090
Directory enable services without direct

310
00:15:50,360 --> 00:15:58,580
connection to the internal network so

311
00:15:53,090 --> 00:16:03,150
you know to translate the geeking E's

312
00:15:58,580 --> 00:16:05,460
you have the ability to authenticate to

313
00:16:03,150 --> 00:16:08,060
Active Directory without actually

314
00:16:05,460 --> 00:16:10,620
exposing your any of your 80 servers

315
00:16:08,060 --> 00:16:11,160
your domain controllers out in the

316
00:16:10,620 --> 00:16:13,440
Internet

317
00:16:11,160 --> 00:16:16,709
so yeah you'll probably have like a VPN

318
00:16:13,440 --> 00:16:18,900
or there's some kind of tunnel between

319
00:16:16,710 --> 00:16:20,670
them and it won't just draw on the wire

320
00:16:18,900 --> 00:16:22,829
like through a regular internet

321
00:16:20,670 --> 00:16:26,089
connection exactly exactly

322
00:16:22,830 --> 00:16:30,230
now there has been a vulnerability

323
00:16:26,090 --> 00:16:33,210
identified in this setup here this was

324
00:16:30,230 --> 00:16:33,540
identified by preempt they spoke at Def

325
00:16:33,210 --> 00:16:35,730
Con

326
00:16:33,540 --> 00:16:37,890
yeah that's pretty new yeah it's like a

327
00:16:35,730 --> 00:16:39,960
month or a couple of months all right

328
00:16:37,890 --> 00:16:46,439
yeah immediately after our Danny a nice

329
00:16:39,960 --> 00:16:49,290
talk so we were like okay so basically

330
00:16:46,440 --> 00:16:51,660
what we looked at is the real world use

331
00:16:49,290 --> 00:16:53,939
case scenario in this and in this attack

332
00:16:51,660 --> 00:16:56,160
vector is that you've got either

333
00:16:53,940 --> 00:17:00,480
sharepoint server or exchange server

334
00:16:56,160 --> 00:17:03,510
that's sitting on the outside and you

335
00:17:00,480 --> 00:17:06,300
need to be able to authenticate to a tea

336
00:17:03,510 --> 00:17:09,329
server on the inside to domain

337
00:17:06,300 --> 00:17:11,760
controller now there's a vulnerability

338
00:17:09,329 --> 00:17:17,010
identified by preempt which basically

339
00:17:11,760 --> 00:17:19,980
allows you to brute force and run a

340
00:17:17,010 --> 00:17:25,650
dictionary attack whether you want to

341
00:17:19,980 --> 00:17:27,510
crack ntlm or go after Kerberos but this

342
00:17:25,650 --> 00:17:29,040
doesn't trigger your organization's

343
00:17:27,510 --> 00:17:31,560
lockout policy

344
00:17:29,040 --> 00:17:33,260
and you because it's coming from the

345
00:17:31,560 --> 00:17:36,120
outside you're not receiving any

346
00:17:33,260 --> 00:17:40,379
notifications so effectively you now

347
00:17:36,120 --> 00:17:43,800
have attackers constantly attempting to

348
00:17:40,380 --> 00:17:47,940
brute-force your credentials and you are

349
00:17:43,800 --> 00:17:50,639
completely oblivious to this now with

350
00:17:47,940 --> 00:17:53,010
that really you know what that means is

351
00:17:50,640 --> 00:17:55,800
the you basically got a valid set of

352
00:17:53,010 --> 00:18:01,710
credentials eventually yeah only a

353
00:17:55,800 --> 00:18:06,210
matter of time so basically it's

354
00:18:01,710 --> 00:18:09,330
celebration time yeah but not so fast

355
00:18:06,210 --> 00:18:12,000
though so they showed it in the most

356
00:18:09,330 --> 00:18:14,490
like basic way right like having a adfs

357
00:18:12,000 --> 00:18:17,970
proxy just sitting like on your public

358
00:18:14,490 --> 00:18:19,710
subnet and like as a developer as a

359
00:18:17,970 --> 00:18:21,780
person does DevOps and like

360
00:18:19,710 --> 00:18:24,720
infrastructure I would not put something

361
00:18:21,780 --> 00:18:27,000
that is important to me on a public

362
00:18:24,720 --> 00:18:32,460
subnet I'll put like in in genetics or

363
00:18:27,000 --> 00:18:36,170
Apache or any other proxy and a machine

364
00:18:32,460 --> 00:18:40,200
that will cost me about three dollars

365
00:18:36,170 --> 00:18:43,770
per month with these lines of code we'll

366
00:18:40,200 --> 00:18:46,650
just a small rate limit I mean I give up

367
00:18:43,770 --> 00:18:48,150
too much I mean there's no need for 10

368
00:18:46,650 --> 00:18:52,260
requests per seconds for authentication

369
00:18:48,150 --> 00:18:58,380
per IP but I mean this will take you a

370
00:18:52,260 --> 00:19:01,379
long long time to brute-force it so too

371
00:18:58,380 --> 00:19:06,810
bad I feel no pain feel something I feel

372
00:19:01,380 --> 00:19:09,330
no pain feels no pain so Danny's now

373
00:19:06,810 --> 00:19:12,690
rate limited us so that's that's a

374
00:19:09,330 --> 00:19:14,639
concern what I'm gonna do now is with my

375
00:19:12,690 --> 00:19:17,880
valid set of credentials is I'm going to

376
00:19:14,640 --> 00:19:19,970
enumerate your organization most

377
00:19:17,880 --> 00:19:22,280
organizations obviously have VPN access

378
00:19:19,970 --> 00:19:25,230
so now I'm gonna attempt to authenticate

379
00:19:22,280 --> 00:19:28,800
to your VPN with my credentials that I

380
00:19:25,230 --> 00:19:31,020
have confirmed working if for you know

381
00:19:28,800 --> 00:19:32,879
an obvious countermeasure would be that

382
00:19:31,020 --> 00:19:35,100
an organization may have multi-factor

383
00:19:32,880 --> 00:19:36,870
authentication so what I'm going to do

384
00:19:35,100 --> 00:19:37,919
instead is I'm going to use a tool

385
00:19:36,870 --> 00:19:39,149
called ruler

386
00:19:37,920 --> 00:19:42,150
and I'm going to create a malicious

387
00:19:39,150 --> 00:19:44,460
outlook rule that the next time the user

388
00:19:42,150 --> 00:19:47,190
sinks their mail they're going to

389
00:19:44,460 --> 00:19:49,470
actually execute and send the reverse

390
00:19:47,190 --> 00:19:52,530
shell to me so now I've pivoted to your

391
00:19:49,470 --> 00:19:56,220
internal network and that's where the

392
00:19:52,530 --> 00:20:01,620
party begins yeah so so let's go so

393
00:19:56,220 --> 00:20:03,299
let's go once we're on the inside you

394
00:20:01,620 --> 00:20:07,620
know I'm just going to do ten quick easy

395
00:20:03,299 --> 00:20:10,379
ways to get domain admin more more

396
00:20:07,620 --> 00:20:14,668
region more of the challenging you know

397
00:20:10,380 --> 00:20:17,250
yeah I'm not gonna do you know MS 17 RCE

398
00:20:14,669 --> 00:20:17,730
stuff because that's just that's that's

399
00:20:17,250 --> 00:20:22,110
too easy

400
00:20:17,730 --> 00:20:24,360
we're gonna go after like low low to

401
00:20:22,110 --> 00:20:26,909
medium findings that typically your

402
00:20:24,360 --> 00:20:29,100
vulnerability scanner is telling you

403
00:20:26,910 --> 00:20:32,880
that hey this is only informational this

404
00:20:29,100 --> 00:20:35,250
is low don't worry about it but it's not

405
00:20:32,880 --> 00:20:37,530
true because when you combine two to

406
00:20:35,250 --> 00:20:39,840
three informational and little findings

407
00:20:37,530 --> 00:20:42,600
and you chain them together you now have

408
00:20:39,840 --> 00:20:45,540
a substantial attack vector and this can

409
00:20:42,600 --> 00:20:48,178
be all done quite rather trivially and

410
00:20:45,540 --> 00:20:50,129
it's very low and slow so most

411
00:20:48,179 --> 00:20:52,799
organizations aren't able to pick this

412
00:20:50,130 --> 00:20:56,160
up so a few things that I want to talk

413
00:20:52,799 --> 00:21:00,570
about PowerShell is dying everyone knows

414
00:20:56,160 --> 00:21:03,480
that Empire was retired but we now have

415
00:21:00,570 --> 00:21:05,760
dotnet dotnet is amazing we can do just

416
00:21:03,480 --> 00:21:07,320
about anything and everything we could

417
00:21:05,760 --> 00:21:09,120
ever imagine

418
00:21:07,320 --> 00:21:11,760
there's install shield you have

419
00:21:09,120 --> 00:21:13,290
undetectable payloads there's C twos all

420
00:21:11,760 --> 00:21:15,990
over the place that are being constantly

421
00:21:13,290 --> 00:21:19,700
deployed and released there's now a c3

422
00:21:15,990 --> 00:21:24,799
which allows you to basically use

423
00:21:19,700 --> 00:21:28,980
approved whitelisted vendors such as

424
00:21:24,799 --> 00:21:30,480
asher dropbox all that stuff gets right

425
00:21:28,980 --> 00:21:33,210
through these are all red teaming

426
00:21:30,480 --> 00:21:35,120
tactics which is you know one of the

427
00:21:33,210 --> 00:21:39,419
points that i was making earlier is that

428
00:21:35,120 --> 00:21:41,100
the the line between pen testing and red

429
00:21:39,419 --> 00:21:42,570
teaming is is kind of getting there

430
00:21:41,100 --> 00:21:45,780
they're getting closer and closer

431
00:21:42,570 --> 00:21:47,909
together because as a pen tester the

432
00:21:45,780 --> 00:21:49,500
stuff that you used to do doesn't

433
00:21:47,910 --> 00:21:50,820
typically work anymore and you have to

434
00:21:49,500 --> 00:21:54,259
start using more

435
00:21:50,820 --> 00:21:56,820
covert methods to to get into an

436
00:21:54,259 --> 00:21:59,070
organization so it's it's not that's a

437
00:21:56,820 --> 00:22:02,309
good thing it really is but you know you

438
00:21:59,070 --> 00:22:05,460
cut off to understand that the degree of

439
00:22:02,309 --> 00:22:07,620
sophistication is increasing and now

440
00:22:05,460 --> 00:22:09,539
there's kind of like a bit of a merge

441
00:22:07,620 --> 00:22:10,918
between the two industries they're kind

442
00:22:09,539 --> 00:22:14,158
of heading in the same direction yeah we

443
00:22:10,919 --> 00:22:16,830
also see that from from a PT's like the

444
00:22:14,159 --> 00:22:19,470
talk I gave earlier with the ITO we saw

445
00:22:16,830 --> 00:22:21,509
the dead two sets of servers one for the

446
00:22:19,470 --> 00:22:23,879
malware distribution that was probably

447
00:22:21,509 --> 00:22:25,830
something that is whitelisted and then

448
00:22:23,879 --> 00:22:28,590
that their server for delivering their

449
00:22:25,830 --> 00:22:31,230
payloads for just from compromised

450
00:22:28,590 --> 00:22:33,120
servers so that's things I mean they're

451
00:22:31,230 --> 00:22:35,159
doing that as well they learned that you

452
00:22:33,120 --> 00:22:37,469
can bypass all mechanisms and windows

453
00:22:35,159 --> 00:22:41,730
for downloading files once you have them

454
00:22:37,470 --> 00:22:43,860
on either whitelisted servers or you do

455
00:22:41,730 --> 00:22:45,649
like a reflective file download which

456
00:22:43,860 --> 00:22:48,600
can bypass it as well absolutely

457
00:22:45,649 --> 00:22:51,168
absolutely so one of the you know

458
00:22:48,600 --> 00:22:54,750
tactics is once you're on the inside

459
00:22:51,169 --> 00:22:57,240
very very very very rudimentary simple

460
00:22:54,750 --> 00:23:00,690
us I call it the one scan to rule them

461
00:22:57,240 --> 00:23:03,080
all just a quick end map scan I'm only

462
00:23:00,690 --> 00:23:06,570
looking at four four five which is SMB

463
00:23:03,080 --> 00:23:08,639
3268 second identify LDAP and I'm just

464
00:23:06,570 --> 00:23:11,509
doing really simple checks in all

465
00:23:08,639 --> 00:23:14,309
sessions do you have a sandy signing

466
00:23:11,509 --> 00:23:16,320
disabled are there anonymous shares if

467
00:23:14,309 --> 00:23:18,539
you want to look for s of the RCS you

468
00:23:16,320 --> 00:23:21,360
can go for that and then you find

469
00:23:18,539 --> 00:23:24,269
whether your LDAP is and the reason you

470
00:23:21,360 --> 00:23:24,899
do that for you know just a quick

471
00:23:24,269 --> 00:23:28,259
rundown

472
00:23:24,899 --> 00:23:30,299
why does null sessions matter well I can

473
00:23:28,259 --> 00:23:32,309
enumerate your Active Directory I can

474
00:23:30,299 --> 00:23:35,279
get a list of users I can get a list of

475
00:23:32,309 --> 00:23:37,799
domain admins I can pull your password

476
00:23:35,279 --> 00:23:40,440
policy and this is just the info finding

477
00:23:37,799 --> 00:23:42,299
this is you know your Nessus your vault

478
00:23:40,440 --> 00:23:44,850
scanner will tell you this is an info

479
00:23:42,299 --> 00:23:48,240
finding but when I have all that

480
00:23:44,850 --> 00:23:51,860
information now I can guess hey you know

481
00:23:48,240 --> 00:23:55,200
this users password is summer 2019 or

482
00:23:51,860 --> 00:23:58,110
password one two three which happens way

483
00:23:55,200 --> 00:24:02,159
more often than you think it's it's just

484
00:23:58,110 --> 00:24:03,580
you know absurd how easy something such

485
00:24:02,159 --> 00:24:07,600
as null sessions can lead in

486
00:24:03,580 --> 00:24:11,080
compromise SMB signing disabled this is

487
00:24:07,600 --> 00:24:14,409
categorized as a medium finding they're

488
00:24:11,080 --> 00:24:18,399
very dangerous when you combine it with

489
00:24:14,410 --> 00:24:21,880
relay attacks when you're using you know

490
00:24:18,400 --> 00:24:24,720
a tool such as responder or MIT m6 all

491
00:24:21,880 --> 00:24:28,720
you're doing is basically poisoning

492
00:24:24,720 --> 00:24:32,320
protocols that that layer two that are

493
00:24:28,720 --> 00:24:36,250
basically enabled by default and all of

494
00:24:32,320 --> 00:24:40,360
your systems will respond to it so now I

495
00:24:36,250 --> 00:24:43,210
now have a method to automatically relay

496
00:24:40,360 --> 00:24:45,070
authentication attempts and the moment I

497
00:24:43,210 --> 00:24:47,620
relay those authentication attempts and

498
00:24:45,070 --> 00:24:49,600
a user with privileges authenticates on

499
00:24:47,620 --> 00:24:52,149
your network I'm gonna have system

500
00:24:49,600 --> 00:24:55,149
access system privileges on that system

501
00:24:52,150 --> 00:24:58,300
and not only just that system but every

502
00:24:55,150 --> 00:25:01,270
single system that user I've relayed

503
00:24:58,300 --> 00:25:04,180
their credentials to so it's just a

504
00:25:01,270 --> 00:25:06,850
massive blasts of shells that you're

505
00:25:04,180 --> 00:25:09,670
gonna or code execution that's going to

506
00:25:06,850 --> 00:25:13,810
result from something as simple as a low

507
00:25:09,670 --> 00:25:16,030
finding so these are all very you know

508
00:25:13,810 --> 00:25:19,450
typical techniques that we use in an

509
00:25:16,030 --> 00:25:22,570
internal assessment the SMB relay attack

510
00:25:19,450 --> 00:25:25,360
which we just discussed very very simple

511
00:25:22,570 --> 00:25:27,129
results in system privileges you throw

512
00:25:25,360 --> 00:25:29,860
in W pad spoofing authentication

513
00:25:27,130 --> 00:25:32,640
requests and then you relay those

514
00:25:29,860 --> 00:25:35,649
authentication attempts to those systems

515
00:25:32,640 --> 00:25:37,890
and at the same time you're collecting

516
00:25:35,650 --> 00:25:41,740
their hash you're providing them an own

517
00:25:37,890 --> 00:25:44,530
challenge key and as a result I can now

518
00:25:41,740 --> 00:25:46,510
have your net ntlm hash and I can crack

519
00:25:44,530 --> 00:25:49,510
that in the background as I'm doing

520
00:25:46,510 --> 00:25:52,360
everything else so very very simple very

521
00:25:49,510 --> 00:25:55,629
trivial attack typically I've run 1

522
00:25:52,360 --> 00:25:57,189
million top 1 million password accounts

523
00:25:55,630 --> 00:26:00,430
and you'd be amazed how many people are

524
00:25:57,190 --> 00:26:02,620
gonna I'm able to crack how many hashes

525
00:26:00,430 --> 00:26:06,550
and using something that simple and

526
00:26:02,620 --> 00:26:09,280
trivial now there are mitigations in

527
00:26:06,550 --> 00:26:14,210
place for this those mitigation serves

528
00:26:09,280 --> 00:26:16,830
SMB signing and there's also EPA now

529
00:26:14,210 --> 00:26:19,440
unfortunately that was working until

530
00:26:16,830 --> 00:26:24,179
about a month ago

531
00:26:19,440 --> 00:26:27,020
so preempts researchers did release an

532
00:26:24,180 --> 00:26:30,180
attack where they called drop the mic

533
00:26:27,020 --> 00:26:34,040
which is mic is for message integrity

534
00:26:30,180 --> 00:26:38,220
control checks now those folks basically

535
00:26:34,040 --> 00:26:39,750
implemented it into ntlm relay X so now

536
00:26:38,220 --> 00:26:41,910
you're able to relay authentication

537
00:26:39,750 --> 00:26:43,170
attempts the systems that have that

538
00:26:41,910 --> 00:26:45,110
mitigation in place

539
00:26:43,170 --> 00:26:47,700
so those mitigations are now broken

540
00:26:45,110 --> 00:26:49,860
which now means that I can relay

541
00:26:47,700 --> 00:26:55,140
authentication attempts that every

542
00:26:49,860 --> 00:26:57,090
system that I have access to the SMB on

543
00:26:55,140 --> 00:26:58,850
your internal network in the moment that

544
00:26:57,090 --> 00:27:02,669
an authenticated user a privileged user

545
00:26:58,850 --> 00:27:05,610
authenticates I have a shell on their

546
00:27:02,670 --> 00:27:10,020
system and you know right now the

547
00:27:05,610 --> 00:27:14,189
mitigations are broken now Microsoft did

548
00:27:10,020 --> 00:27:16,290
just release a patch but it doesn't work

549
00:27:14,190 --> 00:27:18,420
correctly so you're gonna have to find

550
00:27:16,290 --> 00:27:20,490
an alternative measures in the meantime

551
00:27:18,420 --> 00:27:22,650
until they fix it correctly and we know

552
00:27:20,490 --> 00:27:24,900
how long it takes people to passion of

553
00:27:22,650 --> 00:27:30,060
systems right the patches release oh

554
00:27:24,900 --> 00:27:32,340
right and this is pretty new so it's

555
00:27:30,060 --> 00:27:35,490
it's a it's a pretty pretty substantial

556
00:27:32,340 --> 00:27:37,679
attack vector now in your typical pen

557
00:27:35,490 --> 00:27:39,450
testing scenario once you have a shell

558
00:27:37,680 --> 00:27:41,610
you're looking for you know you

559
00:27:39,450 --> 00:27:44,580
typically dump ashes and then you see if

560
00:27:41,610 --> 00:27:46,469
those local hashes can allow

561
00:27:44,580 --> 00:27:49,350
authentication to other systems your

562
00:27:46,470 --> 00:27:53,010
past in the hash it's a try true tested

563
00:27:49,350 --> 00:27:55,020
technique we also were looking for clear

564
00:27:53,010 --> 00:27:57,510
text credentials and we obtain that by

565
00:27:55,020 --> 00:28:00,540
dumping else ass we're looking for

566
00:27:57,510 --> 00:28:02,370
domain admin tokens if a user a domain

567
00:28:00,540 --> 00:28:04,800
admin privileges is authenticated we

568
00:28:02,370 --> 00:28:06,840
impersonate their token and now we have

569
00:28:04,800 --> 00:28:09,000
domain admin privileges but that's not

570
00:28:06,840 --> 00:28:11,939
enough that's not that's fine we want

571
00:28:09,000 --> 00:28:14,820
everything we want every system and

572
00:28:11,940 --> 00:28:16,650
everything we wanted from the loud to

573
00:28:14,820 --> 00:28:20,070
the ground we want everything covered

574
00:28:16,650 --> 00:28:21,730
we're here for ultimate destruction yeah

575
00:28:20,070 --> 00:28:27,350
we're dropping WM

576
00:28:21,730 --> 00:28:29,630
that's right so an attack vector that

577
00:28:27,350 --> 00:28:32,750
was released by and I apologize if I

578
00:28:29,630 --> 00:28:34,160
mispronounce his name Dirk John Moe

579
00:28:32,750 --> 00:28:38,300
lemma

580
00:28:34,160 --> 00:28:42,680
he has come up using the research that

581
00:28:38,300 --> 00:28:45,530
was released by preempts along with his

582
00:28:42,680 --> 00:28:48,020
own personal research he's come up with

583
00:28:45,530 --> 00:28:50,810
a method of basically taking SMB

584
00:28:48,020 --> 00:28:53,660
authentication requests and reeling that

585
00:28:50,810 --> 00:28:56,419
to LDAP now typically that wasn't

586
00:28:53,660 --> 00:28:59,540
possible in the past but now it is

587
00:28:56,420 --> 00:29:01,760
because of the the no mic dropping the

588
00:28:59,540 --> 00:29:04,040
mic attack vector that we just discussed

589
00:29:01,760 --> 00:29:09,350
previously so now you're basically able

590
00:29:04,040 --> 00:29:11,000
to relay SMB it attempts to LDAP which

591
00:29:09,350 --> 00:29:14,870
means you're compromising a domain

592
00:29:11,000 --> 00:29:16,700
controller and that is I mean that's

593
00:29:14,870 --> 00:29:19,159
game over that's very bad it's it's

594
00:29:16,700 --> 00:29:22,550
absolutely game over and what's even

595
00:29:19,160 --> 00:29:25,820
more tricky now is if you add another

596
00:29:22,550 --> 00:29:27,830
bug you can and this is called the spool

597
00:29:25,820 --> 00:29:29,990
service bug or the printer bug all

598
00:29:27,830 --> 00:29:33,860
you're doing is basically coercing a

599
00:29:29,990 --> 00:29:36,380
system to authenticate to you without

600
00:29:33,860 --> 00:29:39,439
having any privileges on that system so

601
00:29:36,380 --> 00:29:43,580
you're now tricking a system typically

602
00:29:39,440 --> 00:29:47,480
an exchange server which are have highly

603
00:29:43,580 --> 00:29:51,939
can you know permissions in place and by

604
00:29:47,480 --> 00:29:55,700
doing this you're using DC sync to

605
00:29:51,940 --> 00:29:57,500
replicate ad and through exchange and

606
00:29:55,700 --> 00:30:01,210
you dumped all the hashes in your

607
00:29:57,500 --> 00:30:04,850
organization and this is you know a

608
00:30:01,210 --> 00:30:08,510
deadly attack vector you're done you're

609
00:30:04,850 --> 00:30:12,290
done yeah and this method could also be

610
00:30:08,510 --> 00:30:15,920
used to jump from force to force so it's

611
00:30:12,290 --> 00:30:20,840
a it's a very very scary time to be an

612
00:30:15,920 --> 00:30:23,410
active directory of it the there's two

613
00:30:20,840 --> 00:30:26,419
scenarios one of them I just discussed

614
00:30:23,410 --> 00:30:29,780
so exchange server connects back to the

615
00:30:26,420 --> 00:30:31,310
attacker box via SMB which is relayed to

616
00:30:29,780 --> 00:30:34,639
LDAP and

617
00:30:31,310 --> 00:30:36,649
you know you grant DC sync to dump all

618
00:30:34,640 --> 00:30:39,440
the password hashes

619
00:30:36,650 --> 00:30:42,080
there's Kerberos delegation you're

620
00:30:39,440 --> 00:30:43,910
relaying LDAP over TLS to create a new

621
00:30:42,080 --> 00:30:47,270
machine account you're running the

622
00:30:43,910 --> 00:30:51,260
printer bug or spool bug script once

623
00:30:47,270 --> 00:30:53,690
again and you're now initiating a

624
00:30:51,260 --> 00:30:57,800
connection from domain controller 1 to

625
00:30:53,690 --> 00:31:02,510
domain controller 2 and as a result you

626
00:30:57,800 --> 00:31:05,210
now have created a computer account on

627
00:31:02,510 --> 00:31:09,379
that's on the in Active Directory and

628
00:31:05,210 --> 00:31:12,050
you can impersonate a DA admin and run

629
00:31:09,380 --> 00:31:14,510
secrets dump which is a great tool

630
00:31:12,050 --> 00:31:17,360
that'll just dump everything without

631
00:31:14,510 --> 00:31:20,180
even you know I've never even had a good

632
00:31:17,360 --> 00:31:22,189
yes so when we were doing this we looked

633
00:31:20,180 --> 00:31:24,620
like a couple of ways we can do each

634
00:31:22,190 --> 00:31:26,720
thing like you saw a list how we get an

635
00:31:24,620 --> 00:31:28,909
initial footer on the machine and then

636
00:31:26,720 --> 00:31:32,270
we saw we can VPN server your

637
00:31:28,910 --> 00:31:34,610
credentials you show drooler I don't

638
00:31:32,270 --> 00:31:37,670
know if you explained it did you explain

639
00:31:34,610 --> 00:31:39,290
the workings of roller yeah ok so yeah I

640
00:31:37,670 --> 00:31:43,130
mean that's an amazing little first time

641
00:31:39,290 --> 00:31:44,960
I heard it I was like amazed so there's

642
00:31:43,130 --> 00:31:47,000
like we're literally out like a bunch of

643
00:31:44,960 --> 00:31:50,750
pieces that you can connect and make a

644
00:31:47,000 --> 00:31:52,610
workflow like you test three of this for

645
00:31:50,750 --> 00:31:54,890
this stage we basically have like four

646
00:31:52,610 --> 00:31:58,189
stages and a couple of ways for each

647
00:31:54,890 --> 00:31:59,660
stage and from testing it like it was

648
00:31:58,190 --> 00:32:02,440
almost possible to find something

649
00:31:59,660 --> 00:32:06,890
without going the blue keep eternal blue

650
00:32:02,440 --> 00:32:10,550
ready RDP expose the servers absolutely

651
00:32:06,890 --> 00:32:12,200
absolutely so you know what we're doing

652
00:32:10,550 --> 00:32:15,139
here is a little bit more under the

653
00:32:12,200 --> 00:32:17,810
radar but one of the best parts of being

654
00:32:15,140 --> 00:32:21,230
a pen tester or a red teamer is getting

655
00:32:17,810 --> 00:32:23,690
a bunch of shells and you know this is

656
00:32:21,230 --> 00:32:25,190
one of my little tricks that I use was

657
00:32:23,690 --> 00:32:28,280
something that I use in my goodie bags

658
00:32:25,190 --> 00:32:31,700
I'm releasing it to you guys may the

659
00:32:28,280 --> 00:32:34,910
force be with you please be careful when

660
00:32:31,700 --> 00:32:39,230
you're using this because right now I've

661
00:32:34,910 --> 00:32:41,510
I've tested this across at least 35 to

662
00:32:39,230 --> 00:32:43,639
40 n products and putting products and

663
00:32:41,510 --> 00:32:45,830
none of them none of them caught this

664
00:32:43,639 --> 00:32:48,080
we take no responsibility for anyone

665
00:32:45,830 --> 00:32:48,999
chooses to use any of the things a stock

666
00:32:48,080 --> 00:32:52,759
exactly

667
00:32:48,999 --> 00:32:58,309
so in this attack scenario we're using

668
00:32:52,759 --> 00:33:02,739
responder MIT m6 for DNS exposing ntlm

669
00:32:58,309 --> 00:33:05,509
relay X with the no mic so we're able to

670
00:33:02,739 --> 00:33:07,580
target systems that do have those

671
00:33:05,509 --> 00:33:10,009
mitigations in place they're still going

672
00:33:07,580 --> 00:33:13,668
to get compromised and then we're using

673
00:33:10,009 --> 00:33:18,649
some Trinity which is a c2 and I'm gonna

674
00:33:13,669 --> 00:33:22,539
use a msbuild stager and this is going

675
00:33:18,649 --> 00:33:26,899
to be compiled and run on the fly so

676
00:33:22,539 --> 00:33:30,889
it's an HTTP listener also if you want

677
00:33:26,899 --> 00:33:33,080
you can use an HTTP to listener which is

678
00:33:30,889 --> 00:33:36,109
completely invisible as far as any

679
00:33:33,080 --> 00:33:39,279
security products go right now so if you

680
00:33:36,109 --> 00:33:42,199
do have a c2 you can you can create a

681
00:33:39,279 --> 00:33:44,779
listener that that is sent over an agent

682
00:33:42,200 --> 00:33:47,389
that sends over over HTTP to and there's

683
00:33:44,779 --> 00:33:49,940
no products that are even monitoring

684
00:33:47,389 --> 00:33:53,988
that so that's a big glaring hole right

685
00:33:49,940 --> 00:33:56,090
now so what we're doing this is quick

686
00:33:53,989 --> 00:34:00,259
screenshots this is me creating my

687
00:33:56,090 --> 00:34:02,389
listener I've configured it to to go

688
00:34:00,259 --> 00:34:06,590
over for for three it's HTTP I've

689
00:34:02,389 --> 00:34:09,889
supplied the certificates and the key

690
00:34:06,590 --> 00:34:12,259
that I want it to use and you know this

691
00:34:09,889 --> 00:34:14,299
is my stager I'm using the MS build

692
00:34:12,260 --> 00:34:16,760
stager which is going to give me just a

693
00:34:14,299 --> 00:34:19,790
simple XML file that I'm going to host

694
00:34:16,760 --> 00:34:21,980
on my own SMB server and you can

695
00:34:19,790 --> 00:34:24,889
actually host it on a web server you

696
00:34:21,980 --> 00:34:26,510
know it's ultimately up to you that's

697
00:34:24,889 --> 00:34:28,280
three bucket and Google I probably won't

698
00:34:26,510 --> 00:34:31,250
have solutely absolutely and if you put

699
00:34:28,280 --> 00:34:36,260
it on an s3 bucket a probably white list

700
00:34:31,250 --> 00:34:38,649
it's white or white listed all these

701
00:34:36,260 --> 00:34:43,690
organizations are white listed because

702
00:34:38,649 --> 00:34:46,940
Microsoft so what we have here is a

703
00:34:43,690 --> 00:34:49,069
screen shot of me running ntlm really

704
00:34:46,940 --> 00:34:50,119
I've had to blur some of this stuff out

705
00:34:49,069 --> 00:34:54,829
because these are from my actual

706
00:34:50,119 --> 00:34:58,430
assessments and over here you can start

707
00:34:54,829 --> 00:35:00,230
seeing them receiving connections now

708
00:34:58,430 --> 00:35:03,770
this is while I'm running responder

709
00:35:00,230 --> 00:35:07,069
which is doing the poisoning and and MIT

710
00:35:03,770 --> 00:35:09,619
m6 which is doing ipv6 poisoning and

711
00:35:07,069 --> 00:35:15,710
it's broadcasting saying hey I am I'm

712
00:35:09,619 --> 00:35:19,579
the DHCP server for for your v6 now this

713
00:35:15,710 --> 00:35:21,470
is something that all systems in a

714
00:35:19,579 --> 00:35:23,810
Windows environment are automatically

715
00:35:21,470 --> 00:35:27,140
configured with v6 so you would have to

716
00:35:23,810 --> 00:35:30,680
disable v6 and otherwise this is just

717
00:35:27,140 --> 00:35:33,770
going to go completely unnoticed so I

718
00:35:30,680 --> 00:35:36,618
haven't even had any MIT m6 attacks get

719
00:35:33,770 --> 00:35:40,150
flagged yet so it's a substantial

720
00:35:36,619 --> 00:35:42,710
concern now what happens from there

721
00:35:40,150 --> 00:35:45,730
myosin myosin these server is actually

722
00:35:42,710 --> 00:35:50,359
hosting my XML file which is my stager

723
00:35:45,730 --> 00:35:55,240
and you what you see here is people

724
00:35:50,359 --> 00:35:57,440
connecting to my SMB server and they're

725
00:35:55,240 --> 00:36:00,379
authenticating to me I'm recording their

726
00:35:57,440 --> 00:36:04,720
hash and I'm serving them my malicious

727
00:36:00,380 --> 00:36:06,589
ex an XML file which is being executed

728
00:36:04,720 --> 00:36:08,720
by msbuild

729
00:36:06,589 --> 00:36:11,869
on their system it's compiled and

730
00:36:08,720 --> 00:36:14,089
executed with system privileges so on

731
00:36:11,869 --> 00:36:16,790
the screenshot here on the left you're

732
00:36:14,089 --> 00:36:20,660
gonna see just and this is this attack I

733
00:36:16,790 --> 00:36:23,089
ran it for about 30 seconds and you know

734
00:36:20,660 --> 00:36:25,609
by combining those multiple tools and

735
00:36:23,089 --> 00:36:29,560
those attack vectors I was able to pull

736
00:36:25,609 --> 00:36:34,130
up 60 plus shells within 30 seconds and

737
00:36:29,560 --> 00:36:37,819
no one noticed it at all and they all

738
00:36:34,130 --> 00:36:41,290
have system privileges and from here I

739
00:36:37,819 --> 00:36:44,650
can launch well this is me celebrating

740
00:36:41,290 --> 00:36:44,650
having a good time

741
00:36:46,970 --> 00:36:51,410
this is like it's like a flashback to

742
00:36:49,369 --> 00:36:55,640
the pentesting in the 90s you know this

743
00:36:51,410 --> 00:36:57,410
is just yeah we have a dump we think

744
00:36:55,640 --> 00:36:59,720
between two DCs we

745
00:36:57,410 --> 00:37:01,700
all the hashes all the hash we have

746
00:36:59,720 --> 00:37:05,330
shelves popping up like left and right

747
00:37:01,700 --> 00:37:07,520
yeah so we went from the cloud and we

748
00:37:05,330 --> 00:37:09,830
owned the whole ground exactly and we

749
00:37:07,520 --> 00:37:12,140
just started with a cloud right we we

750
00:37:09,830 --> 00:37:14,690
just looked at it as a pivot point for

751
00:37:12,140 --> 00:37:16,100
the internal for now and we have a bunch

752
00:37:14,690 --> 00:37:19,010
of more things that like further

753
00:37:16,100 --> 00:37:20,360
solution in the cloud is you we just

754
00:37:19,010 --> 00:37:24,080
because we saw that there is some talk

755
00:37:20,360 --> 00:37:25,580
about post exploitation in the cloud we

756
00:37:24,080 --> 00:37:27,830
didn't want to get into it we want to do

757
00:37:25,580 --> 00:37:29,870
something interesting especially at

758
00:37:27,830 --> 00:37:32,029
these times when clouds are kind of

759
00:37:29,870 --> 00:37:34,220
still new and organizations are not like

760
00:37:32,030 --> 00:37:36,830
fully cloud and then they're not like

761
00:37:34,220 --> 00:37:38,629
fully internal on-premise they're trying

762
00:37:36,830 --> 00:37:40,790
to do this connection and that leaves

763
00:37:38,630 --> 00:37:42,980
the law of vulnerabilities and a lot of

764
00:37:40,790 --> 00:37:46,850
new techniques to kind of tunnel down

765
00:37:42,980 --> 00:37:48,980
absolutely absolutely so you know with

766
00:37:46,850 --> 00:37:53,360
new technology comes new attack vectors

767
00:37:48,980 --> 00:37:55,670
yeah so so what we have here just diving

768
00:37:53,360 --> 00:37:57,890
a little bit deeper into this situ that

769
00:37:55,670 --> 00:38:00,890
I really enjoy using it's called solid

770
00:37:57,890 --> 00:38:05,230
Trinity once I have a shell on on a

771
00:38:00,890 --> 00:38:08,240
system I can you know invoke Mimi Katz

772
00:38:05,230 --> 00:38:11,300
which allows me to extract credentials

773
00:38:08,240 --> 00:38:12,799
and clear text but even more cool stuff

774
00:38:11,300 --> 00:38:15,740
that I can do is that can execute a

775
00:38:12,800 --> 00:38:19,580
dotnet assembly in memory I can dump

776
00:38:15,740 --> 00:38:23,629
else ass I can move and pivot laterally

777
00:38:19,580 --> 00:38:25,850
using win RM WMI so using basically

778
00:38:23,630 --> 00:38:27,950
known and approved protocols that are

779
00:38:25,850 --> 00:38:30,410
already in your organization so it's not

780
00:38:27,950 --> 00:38:35,359
going to look suspicious it's not going

781
00:38:30,410 --> 00:38:39,379
to look fishy now Microsoft released

782
00:38:35,360 --> 00:38:44,630
mitigations recently to prevent Mimi

783
00:38:39,380 --> 00:38:51,440
cat-style attacks and this was started

784
00:38:44,630 --> 00:38:54,470
in Windows 2012 2016 Windows 10 now if

785
00:38:51,440 --> 00:38:56,660
you look on this right screen here we

786
00:38:54,470 --> 00:39:00,379
have some powershell that we can invoke

787
00:38:56,660 --> 00:39:03,950
that does suspend defender which

788
00:39:00,380 --> 00:39:06,770
prevents AMC which is you know been a

789
00:39:03,950 --> 00:39:09,680
pain in the butt for quite some time now

790
00:39:06,770 --> 00:39:12,380
but the end result is

791
00:39:09,680 --> 00:39:14,660
we can now make mini Katz agree to get

792
00:39:12,380 --> 00:39:18,859
great again and who doesn't like me gets

793
00:39:14,660 --> 00:39:23,180
everyone the cats so now you know we're

794
00:39:18,859 --> 00:39:26,180
able to run Mimi cats on 2012-2016 all

795
00:39:23,180 --> 00:39:29,390
those systems that it was not possible

796
00:39:26,180 --> 00:39:31,609
to run many cats on before and now I'm

797
00:39:29,390 --> 00:39:36,730
able to you know hop on to the network

798
00:39:31,609 --> 00:39:39,920
and and deploy Mimi cats on a Class C

799
00:39:36,730 --> 00:39:41,980
within seconds and just start getting

800
00:39:39,920 --> 00:39:46,069
creds back in clear-text

801
00:39:41,980 --> 00:39:48,380
and right now there's no method to

802
00:39:46,069 --> 00:39:51,410
prevent this there's no detection for

803
00:39:48,380 --> 00:39:55,999
for preventing this as of right now this

804
00:39:51,410 --> 00:39:57,700
has all been tested and Mo's assessments

805
00:39:55,999 --> 00:40:01,430
so this is not something on a

806
00:39:57,700 --> 00:40:03,410
handcrafted machine it was specific on

807
00:40:01,430 --> 00:40:05,538
figurations this is battle tested oh

808
00:40:03,410 --> 00:40:12,348
yeah that's why it's all blurred out

809
00:40:05,539 --> 00:40:14,210
yeah Mike you look cool yeah so yeah

810
00:40:12,349 --> 00:40:17,829
it's it's always been a game of cat and

811
00:40:14,210 --> 00:40:23,440
mouse but right now I think Jerry's

812
00:40:17,829 --> 00:40:29,569
kicking Tom but again for now for now

813
00:40:23,440 --> 00:40:32,920
yeah how we do it I still don't believe

814
00:40:29,569 --> 00:40:35,869
that I can still think so I'm not a

815
00:40:32,920 --> 00:40:37,880
crazy expert in AD you haven't worked

816
00:40:35,869 --> 00:40:38,869
honestly with 82 much most of what I

817
00:40:37,880 --> 00:40:41,390
know is from moe

818
00:40:38,869 --> 00:40:44,420
but I do work on a cloud or anything

819
00:40:41,390 --> 00:40:47,569
that it's totally preventable to prevent

820
00:40:44,420 --> 00:40:52,960
that pivot because that was an easy

821
00:40:47,569 --> 00:40:56,989
pivot and that is like like I said about

822
00:40:52,960 --> 00:40:58,549
60000 ready servers on shoutin I tested

823
00:40:56,989 --> 00:41:01,130
a small sample to see if they run celery

824
00:40:58,549 --> 00:41:04,239
with pickle I'm a very nice sample to

825
00:41:01,130 --> 00:41:06,829
that so I can pop them pretty easily

826
00:41:04,239 --> 00:41:08,960
service meshes are popping up everywhere

827
00:41:06,829 --> 00:41:10,880
every dev up conference you'll go to

828
00:41:08,960 --> 00:41:13,279
everyone's gonna say how nice it is to

829
00:41:10,880 --> 00:41:15,200
have a service mesh and everything is

830
00:41:13,279 --> 00:41:17,210
going to look configurable and they

831
00:41:15,200 --> 00:41:21,129
don't talk about security too much so

832
00:41:17,210 --> 00:41:23,020
I'll do it so if you're running on AWS

833
00:41:21,130 --> 00:41:24,970
first thing

834
00:41:23,020 --> 00:41:27,480
most importantly a thing you should do

835
00:41:24,970 --> 00:41:30,339
is have your infrastructure as code

836
00:41:27,480 --> 00:41:32,230
don't do manual configuration don't run

837
00:41:30,339 --> 00:41:34,359
machines manually when you have it as

838
00:41:32,230 --> 00:41:36,490
code you have a revision you have it in

839
00:41:34,359 --> 00:41:39,400
github if something went wrong you can

840
00:41:36,490 --> 00:41:42,848
see who did it change why what change it

841
00:41:39,400 --> 00:41:45,190
was and you can revert you can choose

842
00:41:42,849 --> 00:41:48,070
your own tool I am a fan of Hoshi Corp

843
00:41:45,190 --> 00:41:49,000
terraform a lot of people use AWS

844
00:41:48,070 --> 00:41:51,310
CloudFormation

845
00:41:49,000 --> 00:41:53,290
I like kashikar because it's vendor

846
00:41:51,310 --> 00:41:57,930
agnostic you can use it with any vendor

847
00:41:53,290 --> 00:42:00,099
you can so it's funny but CloudFormation

848
00:41:57,930 --> 00:42:02,319
sometimes it doesn't work with new aw

849
00:42:00,099 --> 00:42:04,750
services because take some time to build

850
00:42:02,320 --> 00:42:06,250
a module for it but in terraform it's

851
00:42:04,750 --> 00:42:09,190
open source so you can write your own

852
00:42:06,250 --> 00:42:10,630
draw module and you'll get it working or

853
00:42:09,190 --> 00:42:13,839
the community will get working within a

854
00:42:10,630 --> 00:42:15,910
day where AWS I'll open tickets and

855
00:42:13,839 --> 00:42:18,580
it'll take weeks for them to give me a

856
00:42:15,910 --> 00:42:20,589
way to configure an HTTP listener

857
00:42:18,580 --> 00:42:23,700
instead of an HTTP one which is like

858
00:42:20,589 --> 00:42:28,630
crazy at to like write scripts to do it

859
00:42:23,700 --> 00:42:31,118
so this is like one example I got like

860
00:42:28,630 --> 00:42:34,650
my OpenVPN in my public subnet because I

861
00:42:31,119 --> 00:42:38,890
don't want anything else being there of

862
00:42:34,650 --> 00:42:42,280
a vault cluster if you are enrolled you

863
00:42:38,890 --> 00:42:46,650
have vault in your AWS secret store both

864
00:42:42,280 --> 00:42:49,270
of them store secrets for you immutable

865
00:42:46,650 --> 00:42:53,050
infrastructure I don't think you should

866
00:42:49,270 --> 00:42:56,470
be touching I think that if there's a

867
00:42:53,050 --> 00:43:00,849
CVE or any vulnerability in a machine

868
00:42:56,470 --> 00:43:03,520
you're running you take an ami you fix

869
00:43:00,849 --> 00:43:05,830
that you update it and swap all your

870
00:43:03,520 --> 00:43:08,290
machines are the new ami and then you

871
00:43:05,830 --> 00:43:10,509
don't have that scared that all did i

872
00:43:08,290 --> 00:43:13,050
patch this patch this you always have

873
00:43:10,510 --> 00:43:16,150
your one ami that's your top ami it's

874
00:43:13,050 --> 00:43:18,700
hardened you have you can drop to github

875
00:43:16,150 --> 00:43:20,470
you have the hardening guide and you

876
00:43:18,700 --> 00:43:21,220
have a bunch of ansible strips to harden

877
00:43:20,470 --> 00:43:25,959
Linux

878
00:43:21,220 --> 00:43:27,549
whether it's redhead or Santos honestly

879
00:43:25,960 --> 00:43:30,760
I believe that's the best way to do it

880
00:43:27,550 --> 00:43:32,890
because you every machine you will run

881
00:43:30,760 --> 00:43:34,960
will start with the same baseline that

882
00:43:32,890 --> 00:43:36,578
you know is secure and you know that if

883
00:43:34,960 --> 00:43:39,630
it's not secure anymore

884
00:43:36,579 --> 00:43:42,429
you'll make a new one based of that and

885
00:43:39,630 --> 00:43:45,189
ec2 takes like a minute to pop up and

886
00:43:42,429 --> 00:43:48,279
down so it'll take you maximum of like

887
00:43:45,189 --> 00:43:50,649
two three hours if you have thousands of

888
00:43:48,279 --> 00:43:54,929
machine to replace them one by one do

889
00:43:50,650 --> 00:43:58,299
like a blue drink deploy very easy and

890
00:43:54,929 --> 00:44:00,339
saves you a lot of management and a lot

891
00:43:58,299 --> 00:44:06,219
of room from mistake of forgetting to

892
00:44:00,339 --> 00:44:09,328
patch servers secret management there is

893
00:44:06,219 --> 00:44:12,039
SSM well parameter store by double yes

894
00:44:09,329 --> 00:44:15,309
there is Hoshi core vault it basically

895
00:44:12,039 --> 00:44:18,400
stores any secrets for your apps whether

896
00:44:15,309 --> 00:44:22,239
it's credentials for different services

897
00:44:18,400 --> 00:44:25,569
API keys I really like it for using it

898
00:44:22,239 --> 00:44:27,989
to generate automatically generate

899
00:44:25,569 --> 00:44:30,009
short-lived database credentials so

900
00:44:27,989 --> 00:44:33,779
instead of first of all like don't

901
00:44:30,009 --> 00:44:39,069
hard-code them save them somewhere safe

902
00:44:33,779 --> 00:44:41,859
but here you can get vault a higher

903
00:44:39,069 --> 00:44:45,849
privileged account credential on your

904
00:44:41,859 --> 00:44:47,739
database and tell it that these are my

905
00:44:45,849 --> 00:44:50,140
machines that they can ask for

906
00:44:47,739 --> 00:44:52,239
credentials each potential will live for

907
00:44:50,140 --> 00:44:54,459
30 minutes with access to specific

908
00:44:52,239 --> 00:44:56,829
tables that that machine needs hmm and

909
00:44:54,459 --> 00:44:58,538
then they'll die within 30 minutes if

910
00:44:56,829 --> 00:45:00,670
they need it again they'll ask for a

911
00:44:58,539 --> 00:45:04,989
nutri dental so even if it gets leaked

912
00:45:00,670 --> 00:45:07,179
it's 30 minutes and you minimize the

913
00:45:04,989 --> 00:45:09,939
impact from it do you follow the

914
00:45:07,179 --> 00:45:12,369
hardening guide of seeing some PLC's of

915
00:45:09,939 --> 00:45:15,489
people dumping the memory from vault and

916
00:45:12,369 --> 00:45:19,199
getting the master key out so either use

917
00:45:15,489 --> 00:45:21,939
the runtime but runtime like rasp

918
00:45:19,199 --> 00:45:24,039
application in the security system or

919
00:45:21,939 --> 00:45:26,828
folder hardening guy which tells you

920
00:45:24,039 --> 00:45:30,189
like to disable cord up disable log like

921
00:45:26,829 --> 00:45:33,699
shut logging on the machine please do

922
00:45:30,189 --> 00:45:37,029
that because it's a great tool but if

923
00:45:33,699 --> 00:45:39,609
you don't harden it it's also a great

924
00:45:37,029 --> 00:45:44,769
place to take all your secrets like from

925
00:45:39,609 --> 00:45:48,930
one machine I talked about console they

926
00:45:44,769 --> 00:45:50,700
I am kinda so I am using it I

927
00:45:48,930 --> 00:45:53,940
my own protections from the attack that

928
00:45:50,700 --> 00:45:56,399
I found where you can impersonate other

929
00:45:53,940 --> 00:45:58,380
services I think it's still a great tool

930
00:45:56,400 --> 00:46:01,819
because of the size card that I give you

931
00:45:58,380 --> 00:46:06,270
so let your services talk to each other

932
00:46:01,819 --> 00:46:08,270
and to an encryption without like doing

933
00:46:06,270 --> 00:46:11,220
anything with a manager you cheese

934
00:46:08,270 --> 00:46:15,650
interact with vault vault will generate

935
00:46:11,220 --> 00:46:18,629
the TLS Jesus so it's very good for that

936
00:46:15,650 --> 00:46:22,020
I'm gonna do a write-up on how I protect

937
00:46:18,630 --> 00:46:26,430
it now after from impersonation I'll

938
00:46:22,020 --> 00:46:30,020
share on Twitter laughs I know a lot of

939
00:46:26,430 --> 00:46:33,440
people use wofe you have the aw swath I

940
00:46:30,020 --> 00:46:38,910
personally think it's way too expensive

941
00:46:33,440 --> 00:46:41,490
when you pay by the rule so I what I do

942
00:46:38,910 --> 00:46:43,680
is I put a couple of rules there to

943
00:46:41,490 --> 00:46:46,618
block like the most obvious attempts

944
00:46:43,680 --> 00:46:50,399
like different scanners and then I

945
00:46:46,619 --> 00:46:52,740
always have a reverse proxy behind it so

946
00:46:50,400 --> 00:46:55,619
I got nginx running with knack C which

947
00:46:52,740 --> 00:46:57,479
is an open source swath and I do not pay

948
00:46:55,619 --> 00:47:01,470
by the rule I can have a bunch of rules

949
00:46:57,480 --> 00:47:04,079
it's pretty fast I didn't see a lot of

950
00:47:01,470 --> 00:47:06,029
people in my last presentation when I

951
00:47:04,079 --> 00:47:07,950
was talking about this told me that

952
00:47:06,030 --> 00:47:11,579
their wife and like their proxy are

953
00:47:07,950 --> 00:47:13,230
getting like choked from SSL so like

954
00:47:11,579 --> 00:47:15,510
from stripping SSL so I just said like

955
00:47:13,230 --> 00:47:17,579
put an Al be at tier seven little

956
00:47:15,510 --> 00:47:20,130
bouncer make it take care of all your

957
00:47:17,579 --> 00:47:23,430
SSL get your traffic unencrypted and

958
00:47:20,130 --> 00:47:25,500
your internal subnets so they'll save

959
00:47:23,430 --> 00:47:30,450
you a lot of money and a lot of trouble

960
00:47:25,500 --> 00:47:32,490
of having to to autoscale your Wow for

961
00:47:30,450 --> 00:47:35,220
whatever think you're doing that needs

962
00:47:32,490 --> 00:47:37,020
to strip as a cell like I feel some

963
00:47:35,220 --> 00:47:39,598
things just let a to us take care of it

964
00:47:37,020 --> 00:47:43,200
they'll do a distributed in a very nice

965
00:47:39,599 --> 00:47:47,280
way so this is an example

966
00:47:43,200 --> 00:47:49,980
alb with a wife forget that wife right

967
00:47:47,280 --> 00:47:52,589
there and then behind that nginx with

968
00:47:49,980 --> 00:47:57,079
maxi you can find huge set of roles to

969
00:47:52,589 --> 00:47:59,730
like almost every scanner l block and

970
00:47:57,079 --> 00:48:01,710
it's pretty easy as like a learning mode

971
00:47:59,730 --> 00:48:02,340
which is like a feedback loop so you put

972
00:48:01,710 --> 00:48:04,680
on a learning

973
00:48:02,340 --> 00:48:07,560
it will tell you what it was supposed to

974
00:48:04,680 --> 00:48:09,509
block and then you can go like yes this

975
00:48:07,560 --> 00:48:11,940
is malicious or no this is like a legit

976
00:48:09,510 --> 00:48:15,090
request and you can do that every time

977
00:48:11,940 --> 00:48:17,010
you do an update for your app or any

978
00:48:15,090 --> 00:48:18,450
service you run that again and you see

979
00:48:17,010 --> 00:48:20,070
if it blocks anything that's legitimate

980
00:48:18,450 --> 00:48:22,339
and you tell it not to block it it's a

981
00:48:20,070 --> 00:48:24,030
very nice feedback loop and very nice

982
00:48:22,340 --> 00:48:26,400
way to use it

983
00:48:24,030 --> 00:48:29,010
ECI UCCS for container management

984
00:48:26,400 --> 00:48:31,920
console Connect for end-to-end

985
00:48:29,010 --> 00:48:36,410
encryption between all my services and

986
00:48:31,920 --> 00:48:42,840
then vault for secret management and

987
00:48:36,410 --> 00:48:45,690
last thing is AWS services that I think

988
00:48:42,840 --> 00:48:47,940
everyone should use because they do come

989
00:48:45,690 --> 00:48:50,190
to the rescue in a lot of places where

990
00:48:47,940 --> 00:48:54,180
you do not want to do it by yourself

991
00:48:50,190 --> 00:48:56,670
so we have guard duty which basically I

992
00:48:54,180 --> 00:48:58,319
would add cloud trail but I assume that

993
00:48:56,670 --> 00:49:00,420
everyone that's using AWS has cloud

994
00:48:58,320 --> 00:49:01,800
trail because if you don't have cloud

995
00:49:00,420 --> 00:49:05,370
shell enabled and AWS

996
00:49:01,800 --> 00:49:07,980
don't use able yes but it will go

997
00:49:05,370 --> 00:49:10,740
through your logs and find things that

998
00:49:07,980 --> 00:49:13,110
look suspicious like if you take any of

999
00:49:10,740 --> 00:49:15,810
the post exploitation scripts of tools

1000
00:49:13,110 --> 00:49:18,180
right now like I think there's like bark

1001
00:49:15,810 --> 00:49:21,270
there is PACU and you try to run them on

1002
00:49:18,180 --> 00:49:24,120
ec2 that has a cloud trail and guard you

1003
00:49:21,270 --> 00:49:26,400
enabled you will get like alerts right

1004
00:49:24,120 --> 00:49:30,240
away because they'll starts making noise

1005
00:49:26,400 --> 00:49:33,660
and guard you will save your ass it

1006
00:49:30,240 --> 00:49:36,180
takes a little bit of time so I I do use

1007
00:49:33,660 --> 00:49:38,129
it but I do have a little proxy inside

1008
00:49:36,180 --> 00:49:40,410
each machine that will look for these

1009
00:49:38,130 --> 00:49:43,440
access denied and will chill the machine

1010
00:49:40,410 --> 00:49:45,540
like within I think it took me I got

1011
00:49:43,440 --> 00:49:48,660
like a 20 second response time after

1012
00:49:45,540 --> 00:49:50,100
three axes and I'd like if I run a

1013
00:49:48,660 --> 00:49:51,690
machine it should not get off access

1014
00:49:50,100 --> 00:49:53,430
denied from able your service like I

1015
00:49:51,690 --> 00:49:56,430
know what I'm doing in order I configure

1016
00:49:53,430 --> 00:49:58,680
my my permissions an inspector which

1017
00:49:56,430 --> 00:50:03,870
does the whole assessment of all your

1018
00:49:58,680 --> 00:50:06,089
machines with the CBS s databases and

1019
00:50:03,870 --> 00:50:08,250
everything so it will tell you if you

1020
00:50:06,090 --> 00:50:10,590
have any of your a.m. eyes have any

1021
00:50:08,250 --> 00:50:14,460
things that you need to patch and then

1022
00:50:10,590 --> 00:50:19,680
you go bacon you am i with hacker

1023
00:50:14,460 --> 00:50:21,210
upgrade everything and you're good yeah

1024
00:50:19,680 --> 00:50:24,060
I think we're uh

1025
00:50:21,210 --> 00:50:28,140
let's go disco let's do this drill any

1026
00:50:24,060 --> 00:50:35,700
questions well first of all thank you so

1027
00:50:28,140 --> 00:50:37,440
much Danny Rosa thank you you used up

1028
00:50:35,700 --> 00:50:39,299
most of your time not much time for Q&A

1029
00:50:37,440 --> 00:50:42,530
if there are questions from the audience

1030
00:50:39,300 --> 00:50:42,530
maybe we can take one hour till

1031
00:50:42,830 --> 00:50:51,450
everybody wants to go yeah one yes yeah

1032
00:50:48,000 --> 00:50:55,250
oh you all right

1033
00:50:51,450 --> 00:50:55,250
yeah he's behind is behind the

1034
00:51:01,560 --> 00:51:06,759
so unless I understood you had

1035
00:51:03,880 --> 00:51:09,910
unencrypted traffic from alb to your

1036
00:51:06,760 --> 00:51:14,490
easiest tasks that you were encrypting

1037
00:51:09,910 --> 00:51:18,009
traffic between your tasks I had on so

1038
00:51:14,490 --> 00:51:20,069
it would yeah I would strip that cell it

1039
00:51:18,010 --> 00:51:22,690
would go through a while after that

1040
00:51:20,070 --> 00:51:23,890
because I mean you would need to strip

1041
00:51:22,690 --> 00:51:25,150
something for the wife to see the

1042
00:51:23,890 --> 00:51:28,118
contents right especially if you're

1043
00:51:25,150 --> 00:51:30,760
doing Jason but then once it reaches a

1044
00:51:28,119 --> 00:51:33,490
so the LB goes to a wife and then

1045
00:51:30,760 --> 00:51:35,730
reaches the ECS endpoint but then all

1046
00:51:33,490 --> 00:51:40,299
the traffic between my services is

1047
00:51:35,730 --> 00:51:42,520
end-to-end encrypted so it will be very

1048
00:51:40,300 --> 00:51:45,640
hard for you unless you can hack into a

1049
00:51:42,520 --> 00:51:47,800
alb like it's an AWS service which I

1050
00:51:45,640 --> 00:51:50,470
assume they take care of theirs I mean I

1051
00:51:47,800 --> 00:51:53,380
hope they taken great security measures

1052
00:51:50,470 --> 00:51:55,180
to protect it because a lot of a lot of

1053
00:51:53,380 --> 00:51:57,550
the world runs on that so

1054
00:51:55,180 --> 00:51:59,980
but when between your services that

1055
00:51:57,550 --> 00:52:03,369
might not be just in inside where VPC

1056
00:51:59,980 --> 00:52:06,369
them because I guess as long as you're

1057
00:52:03,369 --> 00:52:09,369
inside VPC then you have Sdn so you will

1058
00:52:06,369 --> 00:52:11,109
most likely not get it yes like the

1059
00:52:09,369 --> 00:52:12,550
Waffen the LP would be like on my public

1060
00:52:11,109 --> 00:52:15,160
subnet which is the only thing it's

1061
00:52:12,550 --> 00:52:17,320
facing outside and they're the only ones

1062
00:52:15,160 --> 00:52:19,420
that can direct into my first internal

1063
00:52:17,320 --> 00:52:22,869
subnet which would have my reverse

1064
00:52:19,420 --> 00:52:25,690
proxies with my internal laughs and only

1065
00:52:22,869 --> 00:52:27,640
they can like go inside to the other

1066
00:52:25,690 --> 00:52:30,070
internal subnets that each has its own

1067
00:52:27,640 --> 00:52:32,650
like I have a data subnet for databases

1068
00:52:30,070 --> 00:52:34,990
and I have like strict ACL rules and

1069
00:52:32,650 --> 00:52:39,359
security groups between them yep thank

1070
00:52:34,990 --> 00:52:39,359
you work

1071
00:52:40,080 --> 00:52:44,319
all right then again big hand

1072
00:52:42,850 --> 00:52:47,739
Daniel no son thank you

1073
00:52:44,320 --> 00:52:47,739
[Applause]

