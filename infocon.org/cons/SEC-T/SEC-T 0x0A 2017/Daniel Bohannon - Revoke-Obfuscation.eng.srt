1
00:00:00,060 --> 00:00:06,060
thank you very<font color="#CCCCCC"> much this</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> is not</font>

2
00:00:03,360 --> 00:00:08,910
<font color="#E5E5E5">the whole talk the guy did the research</font>

3
00:00:06,060 --> 00:00:10,260
with<font color="#E5E5E5"> who's unfortunately</font><font color="#CCCCCC"> not here he</font>

4
00:00:08,910 --> 00:00:12,450
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> put this together which I'm</font>

5
00:00:10,260 --> 00:00:14,910
really amazed by<font color="#E5E5E5"> but I got to say after</font>

6
00:00:12,450 --> 00:00:16,740
<font color="#E5E5E5">some of those demo videos last night</font>

7
00:00:14,910 --> 00:00:20,009
this doesn't kind<font color="#E5E5E5"> of pales</font><font color="#CCCCCC"> into</font>

8
00:00:16,740 --> 00:00:21,778
comparison<font color="#CCCCCC"> but but yeah so my name is</font>

9
00:00:20,010 --> 00:00:23,340
Daniel Bohannon

10
00:00:21,779 --> 00:00:26,369
as I said<font color="#CCCCCC"> Leigh</font><font color="#E5E5E5"> Holmes is the other guy</font>

11
00:00:23,340 --> 00:00:27,840
who did this research with me<font color="#CCCCCC"> and today</font>

12
00:00:26,369 --> 00:00:29,939
I'm gonna be<font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> Revo Coffee</font>

13
00:00:27,840 --> 00:00:34,590
Association basically detecting off you

14
00:00:29,939 --> 00:00:38,340
skated PowerShell<font color="#E5E5E5"> using science</font><font color="#CCCCCC"> so a</font>

15
00:00:34,590 --> 00:00:40,469
little<font color="#E5E5E5"> bit about me I'm a I worked for</font>

16
00:00:38,340 --> 00:00:41,700
mandiant based out of Washington<font color="#CCCCCC"> DC I've</font>

17
00:00:40,469 --> 00:00:43,800
been there<font color="#E5E5E5"> for</font><font color="#CCCCCC"> about two two-and-a-half</font>

18
00:00:41,700 --> 00:00:46,020
<font color="#E5E5E5">years came from an operational</font>

19
00:00:43,800 --> 00:00:48,089
<font color="#E5E5E5">background than operational</font><font color="#CCCCCC"> security and</font>

20
00:00:46,020 --> 00:00:50,280
then<font color="#CCCCCC"> IR consulting and now for</font><font color="#E5E5E5"> recently</font>

21
00:00:48,090 --> 00:00:52,379
<font color="#CCCCCC">trans transitioned in I'm a senior</font>

22
00:00:50,280 --> 00:00:55,230
applied security researcher focusing on

23
00:00:52,379 --> 00:00:57,210
detection<font color="#CCCCCC"> basically a detection</font><font color="#E5E5E5"> a scale</font>

24
00:00:55,230 --> 00:00:59,910
<font color="#E5E5E5">across all of our clients and then</font>

25
00:00:57,210 --> 00:01:02,059
causing mayhem with obfuscation<font color="#E5E5E5"> to</font>

26
00:00:59,910 --> 00:01:04,949
improve our detection<font color="#CCCCCC"> z'</font>

27
00:01:02,059 --> 00:01:06,539
<font color="#CCCCCC">i'm also the author of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Invo coffee</font>

28
00:01:04,949 --> 00:01:08,460
<font color="#E5E5E5">station and invoke cradle craft or</font>

29
00:01:06,540 --> 00:01:11,970
obfuscation frameworks and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> co-author</font>

30
00:01:08,460 --> 00:01:13,619
<font color="#CCCCCC">of revoke confiscation and my partner in</font>

31
00:01:11,970 --> 00:01:16,048
crime<font color="#CCCCCC"> lee holmes he's an awesome guy</font>

32
00:01:13,619 --> 00:01:18,150
he's a lead security<font color="#E5E5E5"> architect at</font>

33
00:01:16,049 --> 00:01:19,890
Microsoft out in<font color="#E5E5E5"> Seattle and he's also</font>

34
00:01:18,150 --> 00:01:22,500
one of the original<font color="#E5E5E5"> PowerShell</font>

35
00:01:19,890 --> 00:01:23,970
developers<font color="#E5E5E5"> so it was awesome to learn</font>

36
00:01:22,500 --> 00:01:26,009
about PowerShell from the guy who helped

37
00:01:23,970 --> 00:01:27,720
write it and<font color="#E5E5E5"> also when you're writing</font>

38
00:01:26,009 --> 00:01:29,939
PowerShell code and the person who wrote

39
00:01:27,720 --> 00:01:31,470
the<font color="#CCCCCC"> language is looking at</font><font color="#E5E5E5"> that code you</font>

40
00:01:29,939 --> 00:01:32,820
learn how little you know about<font color="#E5E5E5"> it but</font>

41
00:01:31,470 --> 00:01:34,920
he's<font color="#CCCCCC"> just an awesome guy I learned a</font><font color="#E5E5E5"> ton</font>

42
00:01:32,820 --> 00:01:38,298
<font color="#CCCCCC">from him I'm also the author</font><font color="#E5E5E5"> of the</font>

43
00:01:34,920 --> 00:01:41,700
Windows PowerShell cookbook so today

44
00:01:38,299 --> 00:01:43,340
we're<font color="#E5E5E5"> gonna look at kind of a treatise</font>

45
00:01:41,700 --> 00:01:45,600
<font color="#CCCCCC">of folly from</font><font color="#E5E5E5"> the blue team perspective</font>

46
00:01:43,340 --> 00:01:47,009
<font color="#CCCCCC">and I feel</font><font color="#E5E5E5"> like I can say this</font><font color="#CCCCCC"> because</font>

47
00:01:45,600 --> 00:01:49,199
I'm a blue team and all these<font color="#E5E5E5"> follies</font>

48
00:01:47,009 --> 00:01:50,430
I've made<font color="#E5E5E5"> and I intend to share them</font>

49
00:01:49,200 --> 00:01:52,140
with you<font color="#CCCCCC"> so that</font><font color="#E5E5E5"> we can all improve</font>

50
00:01:50,430 --> 00:01:54,420
together<font color="#CCCCCC"> but what bad assumptions are</font>

51
00:01:52,140 --> 00:01:56,040
<font color="#CCCCCC">being made out</font><font color="#E5E5E5"> there hopefully</font><font color="#CCCCCC"> what good</font>

52
00:01:54,420 --> 00:01:59,340
assumptions are<font color="#CCCCCC"> being made well let's</font>

53
00:01:56,040 --> 00:02:02,009
look at<font color="#E5E5E5"> it at a very minimum when it</font>

54
00:01:59,340 --> 00:02:04,320
comes to investigating attacks that

55
00:02:02,009 --> 00:02:05,969
involve PowerShell<font color="#E5E5E5"> some component which</font>

56
00:02:04,320 --> 00:02:08,098
on every investigation<font color="#E5E5E5"> I've ever been on</font>

57
00:02:05,969 --> 00:02:09,660
PowerShell has played at least a

58
00:02:08,098 --> 00:02:11,849
significant part in<font color="#E5E5E5"> one of the stages of</font>

59
00:02:09,660 --> 00:02:13,920
the attack<font color="#CCCCCC"> lifecycle at the very least</font>

60
00:02:11,849 --> 00:02:16,079
<font color="#E5E5E5">you want</font><font color="#CCCCCC"> command-line argument</font>

61
00:02:13,920 --> 00:02:19,410
which you can find<font color="#CCCCCC"> in security logs 46</font>

62
00:02:16,080 --> 00:02:21,959
88<font color="#E5E5E5"> or a system on Eid</font><font color="#CCCCCC"> 1 both</font><font color="#E5E5E5"> of those</font>

63
00:02:19,410 --> 00:02:24,230
are really<font color="#CCCCCC"> really great option but what</font>

64
00:02:21,959 --> 00:02:26,220
you<font color="#CCCCCC"> really want in addition to</font><font color="#E5E5E5"> that is</font>

65
00:02:24,230 --> 00:02:28,470
<font color="#E5E5E5">PowerShell logging specifically</font>

66
00:02:26,220 --> 00:02:31,080
<font color="#E5E5E5">PowerShell version 5 script lock logging</font>

67
00:02:28,470 --> 00:02:33,600
number<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> which is your Eid 4104 and then</font>

68
00:02:31,080 --> 00:02:34,590
module and transcription after that and

69
00:02:33,600 --> 00:02:36,690
at the<font color="#E5E5E5"> bottom here these are</font><font color="#CCCCCC"> two great</font>

70
00:02:34,590 --> 00:02:38,100
<font color="#CCCCCC">resources one from the PowerShell team</font>

71
00:02:36,690 --> 00:02:40,560
and the other from a colleague<font color="#CCCCCC"> of mine</font>

72
00:02:38,100 --> 00:02:42,329
<font color="#CCCCCC">outlining all the</font><font color="#E5E5E5"> the first one outlines</font>

73
00:02:40,560 --> 00:02:44,760
<font color="#E5E5E5">all the awesome stuff</font><font color="#CCCCCC"> the PowerShell</font>

74
00:02:42,330 --> 00:02:47,550
team has built into<font color="#E5E5E5"> later</font><font color="#CCCCCC"> versions of</font>

75
00:02:44,760 --> 00:02:49,049
<font color="#E5E5E5">PowerShell and</font><font color="#CCCCCC"> the latter one is</font><font color="#E5E5E5"> looking</font>

76
00:02:47,550 --> 00:02:50,459
at what you actually<font color="#E5E5E5"> get what</font><font color="#CCCCCC"> are the</font>

77
00:02:49,050 --> 00:02:52,380
<font color="#CCCCCC">benefits you actually get when I say</font>

78
00:02:50,459 --> 00:02:54,660
upgrade to PowerShell<font color="#E5E5E5"> 5 some of you may</font>

79
00:02:52,380 --> 00:02:56,579
say that's<font color="#E5E5E5"> not trivial and I get that</font>

80
00:02:54,660 --> 00:02:58,410
but what<font color="#E5E5E5"> are the benefits you're missing</font>

81
00:02:56,580 --> 00:03:01,290
out<font color="#CCCCCC"> on this blog post</font><font color="#E5E5E5"> is an excellent</font>

82
00:02:58,410 --> 00:03:02,760
way of<font color="#E5E5E5"> going over that and hopefully</font>

83
00:03:01,290 --> 00:03:04,620
this talk will also be<font color="#E5E5E5"> ammunition you</font>

84
00:03:02,760 --> 00:03:05,579
<font color="#CCCCCC">can take</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> and say hey here's some of</font>

85
00:03:04,620 --> 00:03:07,470
the<font color="#E5E5E5"> reasons why we want to get the</font>

86
00:03:05,580 --> 00:03:13,380
<font color="#CCCCCC">PowerShell 5 so we don't have</font><font color="#E5E5E5"> to deal</font>

87
00:03:07,470 --> 00:03:14,519
with<font color="#CCCCCC"> this completely</font><font color="#E5E5E5"> blind so how we're</font>

88
00:03:13,380 --> 00:03:15,900
just going<font color="#CCCCCC"> to take the first</font><font color="#E5E5E5"> part and</font>

89
00:03:14,519 --> 00:03:16,980
<font color="#E5E5E5">diving into some off eustachian</font>

90
00:03:15,900 --> 00:03:18,900
techniques when it comes to<font color="#CCCCCC"> powershell</font>

91
00:03:16,980 --> 00:03:20,880
<font color="#CCCCCC">and again hopefully</font><font color="#E5E5E5"> this is going to</font>

92
00:03:18,900 --> 00:03:22,320
help some of<font color="#E5E5E5"> us see some of the follies</font>

93
00:03:20,880 --> 00:03:25,109
that we've been<font color="#E5E5E5"> making</font><font color="#CCCCCC"> as defenders when</font>

94
00:03:22,320 --> 00:03:26,670
<font color="#E5E5E5">it comes to our assumptions and</font><font color="#CCCCCC"> then</font>

95
00:03:25,109 --> 00:03:31,010
we're gonna look at how do we<font color="#E5E5E5"> actually</font>

96
00:03:26,670 --> 00:03:33,268
detect<font color="#E5E5E5"> this in a different way</font><font color="#CCCCCC"> so</font>

97
00:03:31,010 --> 00:03:34,920
<font color="#CCCCCC">oftentimes</font><font color="#E5E5E5"> we'll see attackers launch in</font>

98
00:03:33,269 --> 00:03:37,140
<font color="#E5E5E5">PowerShell most commonly from command</font>

99
00:03:34,920 --> 00:03:39,690
<font color="#E5E5E5">sometimes from off from</font><font color="#CCCCCC"> windward accel</font>

100
00:03:37,140 --> 00:03:41,670
stuff like that<font color="#E5E5E5"> but typically a lot of</font>

101
00:03:39,690 --> 00:03:43,620
<font color="#E5E5E5">defenders myself included when I started</font>

102
00:03:41,670 --> 00:03:44,850
was I want to look for PowerShell<font color="#E5E5E5"> dot</font>

103
00:03:43,620 --> 00:03:47,459
<font color="#CCCCCC">exe</font><font color="#E5E5E5"> running and then look</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the</font>

104
00:03:44,850 --> 00:03:49,530
arguments that<font color="#E5E5E5"> come after that</font><font color="#CCCCCC"> and if I</font>

105
00:03:47,459 --> 00:03:52,620
see malicious strings<font color="#CCCCCC"> then that's of</font>

106
00:03:49,530 --> 00:03:54,329
interest<font color="#E5E5E5"> however there</font><font color="#CCCCCC"> are other ways</font>

107
00:03:52,620 --> 00:03:55,049
<font color="#CCCCCC">that you can actually PowerShell code on</font>

108
00:03:54,329 --> 00:03:58,019
the command line

109
00:03:55,049 --> 00:04:00,930
<font color="#E5E5E5">and as a lot of command line utilities</font>

110
00:03:58,019 --> 00:04:03,329
like command<font color="#E5E5E5"> or</font><font color="#CCCCCC"> whim</font><font color="#E5E5E5"> ik they can accept</font>

111
00:04:00,930 --> 00:04:05,850
standard<font color="#E5E5E5"> input as the command</font><font color="#CCCCCC"> ask in</font>

112
00:04:03,329 --> 00:04:07,350
PowerShell<font color="#E5E5E5"> so for example these two</font>

113
00:04:05,850 --> 00:04:09,630
<font color="#E5E5E5">ladder samples you can have command</font>

114
00:04:07,350 --> 00:04:11,790
echoing your actual<font color="#E5E5E5"> command content and</font>

115
00:04:09,630 --> 00:04:14,459
piping it in the<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> dash or</font>

116
00:04:11,790 --> 00:04:15,720
<font color="#E5E5E5">PowerShell IEX input and there's a lot</font>

117
00:04:14,459 --> 00:04:17,310
<font color="#E5E5E5">more ways you</font><font color="#CCCCCC"> can do</font><font color="#E5E5E5"> this but these are</font>

118
00:04:15,720 --> 00:04:19,289
<font color="#CCCCCC">the two most common ones</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> as you'll</font>

119
00:04:17,310 --> 00:04:20,910
<font color="#CCCCCC">see our command runs</font><font color="#E5E5E5"> but if you're</font>

120
00:04:19,289 --> 00:04:24,240
looking at logs then<font color="#E5E5E5"> PowerShell</font>

121
00:04:20,910 --> 00:04:26,700
arguments<font color="#E5E5E5"> are PowerShell - PowerShell</font><font color="#CCCCCC"> IX</font>

122
00:04:24,240 --> 00:04:27,719
input the<font color="#E5E5E5"> actual command content is in</font>

123
00:04:26,700 --> 00:04:30,490
the parent<font color="#E5E5E5"> process</font>

124
00:04:27,719 --> 00:04:32,169
so as a defender<font color="#E5E5E5"> when you start to kind</font>

125
00:04:30,490 --> 00:04:33,520
<font color="#CCCCCC">of build out your rules that you want to</font>

126
00:04:32,169 --> 00:04:36,280
look for<font color="#E5E5E5"> and command-line arguments</font>

127
00:04:33,520 --> 00:04:37,448
<font color="#E5E5E5">don't just look for</font><font color="#CCCCCC"> PowerShell 2xe maybe</font>

128
00:04:36,280 --> 00:04:41,770
you should also look for the parent

129
00:04:37,449 --> 00:04:43,060
<font color="#CCCCCC">process instead sometimes people</font><font color="#E5E5E5"> will</font>

130
00:04:41,770 --> 00:04:45,240
<font color="#E5E5E5">say okay well let me just look for</font>

131
00:04:43,060 --> 00:04:48,610
command or any process<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that matter</font>

132
00:04:45,240 --> 00:04:50,710
<font color="#CCCCCC">where I also see a pipe</font><font color="#E5E5E5"> PowerShell maybe</font>

133
00:04:48,610 --> 00:04:52,569
<font color="#E5E5E5">that'll help me out well not exactly</font>

134
00:04:50,710 --> 00:04:54,609
<font color="#CCCCCC">because what you</font><font color="#E5E5E5"> can do here is you can</font>

135
00:04:52,569 --> 00:04:56,259
<font color="#E5E5E5">say I'm going to have embedded commands</font>

136
00:04:54,610 --> 00:04:57,969
so the first command<font color="#E5E5E5"> will set power and</font>

137
00:04:56,259 --> 00:05:00,400
then<font color="#E5E5E5"> shell and two different variables</font>

138
00:04:57,969 --> 00:05:02,319
<font color="#E5E5E5">and then it will reassemble those in the</font>

139
00:05:00,400 --> 00:05:04,299
<font color="#E5E5E5">next command such that as you can see in</font>

140
00:05:02,319 --> 00:05:06,520
the logs here<font color="#CCCCCC"> you</font><font color="#E5E5E5"> never see pipe</font>

141
00:05:04,300 --> 00:05:10,719
<font color="#E5E5E5">PowerShell I'm showing up in that parent</font>

142
00:05:06,520 --> 00:05:12,520
process<font color="#E5E5E5"> this is an actual technique from</font>

143
00:05:10,719 --> 00:05:16,360
<font color="#E5E5E5">the wild</font><font color="#CCCCCC"> Fenn</font><font color="#E5E5E5"> a is a financially</font>

144
00:05:12,520 --> 00:05:18,359
motivated<font color="#CCCCCC"> threat actor and this is a</font>

145
00:05:16,360 --> 00:05:20,500
sample<font color="#E5E5E5"> we came across in February</font>

146
00:05:18,360 --> 00:05:22,509
<font color="#E5E5E5">actually does anyone here know John</font>

147
00:05:20,500 --> 00:05:24,129
Lambert<font color="#E5E5E5"> from Microsoft he was the first</font>

148
00:05:22,509 --> 00:05:26,889
one<font color="#E5E5E5"> to tweet this he's an amazing person</font>

149
00:05:24,129 --> 00:05:28,300
<font color="#CCCCCC">to</font><font color="#E5E5E5"> follow because he tweets out really</font>

150
00:05:26,889 --> 00:05:30,129
awesome samples that he finds in<font color="#CCCCCC"> the</font>

151
00:05:28,300 --> 00:05:31,870
wild<font color="#E5E5E5"> it's a really good source of</font>

152
00:05:30,129 --> 00:05:33,490
information<font color="#E5E5E5"> but what we see here is what</font>

153
00:05:31,870 --> 00:05:35,500
<font color="#E5E5E5">Finn ate at the very bottom this is</font>

154
00:05:33,490 --> 00:05:37,569
their<font color="#E5E5E5"> actual</font><font color="#CCCCCC"> PowerShell command you see</font>

155
00:05:35,500 --> 00:05:39,550
the nice little<font color="#CCCCCC"> ix at the</font><font color="#E5E5E5"> end but then</font>

156
00:05:37,569 --> 00:05:41,529
they set to environment variables<font color="#E5E5E5"> but</font>

157
00:05:39,550 --> 00:05:43,449
this is one environment<font color="#E5E5E5"> variable which</font>

158
00:05:41,529 --> 00:05:45,639
they call Microsoft<font color="#E5E5E5"> Update catalog and</font>

159
00:05:43,449 --> 00:05:47,770
then<font color="#CCCCCC"> the other one is PowerShell - and</font>

160
00:05:45,639 --> 00:05:51,599
then all this is<font color="#CCCCCC"> inside</font><font color="#E5E5E5"> of a macro then</font>

161
00:05:47,770 --> 00:05:53,020
<font color="#E5E5E5">they launch command echo bar one bar to</font>

162
00:05:51,599 --> 00:05:57,610
look familiar

163
00:05:53,020 --> 00:05:59,438
so this is being<font color="#CCCCCC"> used in the</font><font color="#E5E5E5"> wild other</font>

164
00:05:57,610 --> 00:06:01,779
ways you<font color="#E5E5E5"> can do this that you can pass</font>

165
00:05:59,439 --> 00:06:04,419
stuff from from a parent or grandparent

166
00:06:01,779 --> 00:06:05,529
process down to<font color="#CCCCCC"> the child process the</font>

167
00:06:04,419 --> 00:06:07,719
<font color="#CCCCCC">powershell is you can store</font><font color="#E5E5E5"> in</font>

168
00:06:05,529 --> 00:06:09,490
environment variables<font color="#CCCCCC"> i'm copter is a</font>

169
00:06:07,719 --> 00:06:11,680
malware<font color="#E5E5E5"> that really enjoys this</font>

170
00:06:09,490 --> 00:06:12,729
technique and there's a lot of different

171
00:06:11,680 --> 00:06:14,439
ways to<font color="#E5E5E5"> call an environment variable</font>

172
00:06:12,729 --> 00:06:16,930
Koffler typically is<font color="#E5E5E5"> going to use dollar</font>

173
00:06:14,439 --> 00:06:18,310
<font color="#CCCCCC">sign EMV colon and then the name</font><font color="#E5E5E5"> but</font>

174
00:06:16,930 --> 00:06:20,969
these are just<font color="#E5E5E5"> a</font><font color="#CCCCCC"> few of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ways that</font>

175
00:06:18,310 --> 00:06:23,439
you<font color="#E5E5E5"> can extract values out</font><font color="#CCCCCC"> of variables</font>

176
00:06:20,969 --> 00:06:25,389
other<font color="#CCCCCC"> things you can</font><font color="#E5E5E5"> do you can echo</font>

177
00:06:23,439 --> 00:06:26,740
your content<font color="#E5E5E5"> your payload into the</font>

178
00:06:25,389 --> 00:06:31,839
<font color="#E5E5E5">clipboard and then just have</font><font color="#CCCCCC"> powershell</font>

179
00:06:26,740 --> 00:06:33,189
pull that out so let's go<font color="#E5E5E5"> through this</font>

180
00:06:31,839 --> 00:06:34,629
example<font color="#E5E5E5"> then let's say that we have our</font>

181
00:06:33,189 --> 00:06:35,860
<font color="#E5E5E5">malicious strings we're looking for and</font>

182
00:06:34,629 --> 00:06:37,930
we're looking for<font color="#E5E5E5"> that in powershell on</font>

183
00:06:35,860 --> 00:06:40,599
<font color="#CCCCCC">its parent process</font><font color="#E5E5E5"> what we could</font>

184
00:06:37,930 --> 00:06:41,479
actually do if we're an attacker is we

185
00:06:40,599 --> 00:06:43,128
could say<font color="#E5E5E5"> okay let me</font>

186
00:06:41,479 --> 00:06:45,080
let me put a third process in the mix we

187
00:06:43,129 --> 00:06:46,759
have command command<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> the</font>

188
00:06:45,080 --> 00:06:49,248
first command let me<font color="#E5E5E5"> set my payload and</font>

189
00:06:46,759 --> 00:06:51,889
in this case I<font color="#CCCCCC"> set a variable</font><font color="#E5E5E5"> called CMD</font>

190
00:06:49,249 --> 00:06:53,029
<font color="#E5E5E5">in the</font><font color="#CCCCCC"> second one let</font><font color="#E5E5E5"> me echo the</font>

191
00:06:51,889 --> 00:06:55,909
contents of that<font color="#E5E5E5"> variable in the</font>

192
00:06:53,029 --> 00:06:58,129
<font color="#CCCCCC">powershell - now this runs but as you'll</font>

193
00:06:55,909 --> 00:06:59,569
see<font color="#CCCCCC"> PowerShell - is the</font><font color="#E5E5E5"> arts for</font><font color="#CCCCCC"> the</font>

194
00:06:58,129 --> 00:07:01,520
first process and then we see the<font color="#E5E5E5"> entire</font>

195
00:06:59,569 --> 00:07:03,800
command in the parent process<font color="#E5E5E5"> which is</font>

196
00:07:01,520 --> 00:07:06,740
good for<font color="#E5E5E5"> us as defenders but as an</font>

197
00:07:03,800 --> 00:07:08,300
attacker<font color="#CCCCCC"> what if we actually</font><font color="#E5E5E5"> escaped</font><font color="#CCCCCC"> one</font>

198
00:07:06,740 --> 00:07:10,460
layer of escaping<font color="#CCCCCC"> to that pipe</font>

199
00:07:08,300 --> 00:07:14,060
so it's escape for the first command<font color="#E5E5E5"> but</font>

200
00:07:10,460 --> 00:07:16,580
<font color="#E5E5E5">not for the second one bingo PowerShell</font>

201
00:07:14,060 --> 00:07:18,379
<font color="#E5E5E5">- is the arcs for the first process the</font>

202
00:07:16,580 --> 00:07:20,120
second process<font color="#E5E5E5"> just has the name of</font><font color="#CCCCCC"> the</font>

203
00:07:18,379 --> 00:07:22,009
<font color="#CCCCCC">variable now this only works</font><font color="#E5E5E5"> one layer</font>

204
00:07:20,120 --> 00:07:25,009
child process deep because it actually

205
00:07:22,009 --> 00:07:27,949
resolves in memory<font color="#E5E5E5"> and this is pretty</font>

206
00:07:25,009 --> 00:07:30,259
cool<font color="#CCCCCC"> and we see it hackers doing this so</font>

207
00:07:27,949 --> 00:07:31,879
maybe we should<font color="#E5E5E5"> say okay</font><font color="#CCCCCC"> instead</font><font color="#E5E5E5"> of just</font>

208
00:07:30,259 --> 00:07:33,439
<font color="#CCCCCC">looking for the parent</font><font color="#E5E5E5"> process let's</font>

209
00:07:31,879 --> 00:07:35,479
look recursively all the way up the

210
00:07:33,439 --> 00:07:36,409
process tree<font color="#E5E5E5"> at all</font><font color="#CCCCCC"> the arguments and</font>

211
00:07:35,479 --> 00:07:39,109
see if we find something<font color="#E5E5E5"> interesting</font>

212
00:07:36,409 --> 00:07:40,998
<font color="#E5E5E5">would that work be better than nothing</font>

213
00:07:39,110 --> 00:07:43,039
but<font color="#E5E5E5"> there are ways that you</font><font color="#CCCCCC"> can have</font><font color="#E5E5E5"> no</font>

214
00:07:40,999 --> 00:07:44,659
<font color="#E5E5E5">shared process</font><font color="#CCCCCC"> and attackers are doing</font>

215
00:07:43,039 --> 00:07:46,219
this<font color="#E5E5E5"> the clipboard is one example</font><font color="#CCCCCC"> I</font>

216
00:07:44,659 --> 00:07:47,719
could<font color="#E5E5E5"> have you know process</font><font color="#CCCCCC"> a over here</font>

217
00:07:46,219 --> 00:07:49,430
echo into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> clipboard and the</font>

218
00:07:47,719 --> 00:07:51,319
<font color="#E5E5E5">unrelated process retrieve the contents</font>

219
00:07:49,430 --> 00:07:52,819
from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> clipboard you could also do</font>

220
00:07:51,319 --> 00:07:54,610
<font color="#CCCCCC">something like this where you can</font><font color="#E5E5E5"> have</font>

221
00:07:52,819 --> 00:07:57,169
<font color="#E5E5E5">one process spawn a command with a</font>

222
00:07:54,610 --> 00:07:59,569
payload<font color="#E5E5E5"> in the title let's say and then</font>

223
00:07:57,169 --> 00:08:01,639
use<font color="#CCCCCC"> WMI to reassemble that title or like</font>

224
00:07:59,569 --> 00:08:03,680
<font color="#E5E5E5">this attacker a lot of commands with a</font>

225
00:08:01,639 --> 00:08:05,779
lot<font color="#E5E5E5"> of titles using</font><font color="#CCCCCC"> WMI</font><font color="#E5E5E5"> to piece them</font>

226
00:08:03,680 --> 00:08:10,249
<font color="#E5E5E5">all back together and then execute the</font>

227
00:08:05,779 --> 00:08:12,289
<font color="#E5E5E5">contents so the good news is that all</font><font color="#CCCCCC"> of</font>

228
00:08:10,249 --> 00:08:13,699
this is captured in PowerShell<font color="#E5E5E5"> script</font>

229
00:08:12,289 --> 00:08:16,009
block logging when there's this symbol

230
00:08:13,699 --> 00:08:17,120
up here<font color="#E5E5E5"> every slide where you see the</font>

231
00:08:16,009 --> 00:08:20,180
symbol<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there are quite a</font><font color="#CCCCCC"> few on the</font>

232
00:08:17,120 --> 00:08:22,310
slide so I apologize<font color="#E5E5E5"> but basically this</font>

233
00:08:20,180 --> 00:08:23,810
says all<font color="#E5E5E5"> this stuff no matter how it was</font>

234
00:08:22,310 --> 00:08:25,520
launched or you know thrown into

235
00:08:23,810 --> 00:08:27,649
PowerShell<font color="#CCCCCC"> it's recorded in</font><font color="#E5E5E5"> the</font>

236
00:08:25,520 --> 00:08:30,289
PowerShell logs<font color="#E5E5E5"> so it's just a reminder</font>

237
00:08:27,649 --> 00:08:31,610
<font color="#CCCCCC">of hey this is really important</font><font color="#E5E5E5"> to have</font>

238
00:08:30,289 --> 00:08:33,500
<font color="#E5E5E5">these logs enabled because you</font><font color="#CCCCCC"> actually</font>

239
00:08:31,610 --> 00:08:36,349
see<font color="#E5E5E5"> this stuff now will</font><font color="#CCCCCC"> it make it easy</font>

240
00:08:33,500 --> 00:08:37,760
to<font color="#E5E5E5"> detect not always but at least you</font>

241
00:08:36,349 --> 00:08:40,849
have a fighting chance of somewhere<font color="#E5E5E5"> to</font>

242
00:08:37,760 --> 00:08:42,769
start and the bad<font color="#CCCCCC"> news</font><font color="#E5E5E5"> is however that</font>

243
00:08:40,849 --> 00:08:45,019
there is token layer off<font color="#E5E5E5"> you see a</font><font color="#CCCCCC"> ssin</font>

244
00:08:42,769 --> 00:08:46,880
which we're just about to<font color="#E5E5E5"> dive into that</font>

245
00:08:45,019 --> 00:08:48,620
does persist<font color="#CCCCCC"> all the way</font><font color="#E5E5E5"> into even the</font>

246
00:08:46,880 --> 00:08:51,800
best<font color="#E5E5E5"> PowerShell script block logs</font>

247
00:08:48,620 --> 00:08:54,350
one other note here<font color="#CCCCCC"> when it</font><font color="#E5E5E5"> comes to</font>

248
00:08:51,800 --> 00:08:55,310
looking for arguments in<font color="#CCCCCC"> PowerShell Dexy</font>

249
00:08:54,350 --> 00:08:57,200
keep in mind that

250
00:08:55,310 --> 00:08:59,869
hackers<font color="#CCCCCC"> also like to</font><font color="#E5E5E5"> just copy</font>

251
00:08:57,200 --> 00:09:02,570
<font color="#E5E5E5">PowerShell to let's say Firefox XE and</font>

252
00:08:59,870 --> 00:09:05,150
then run their payloads<font color="#E5E5E5"> so when it comes</font>

253
00:09:02,570 --> 00:09:06,380
to any binaries<font color="#E5E5E5"> my advice is if the</font>

254
00:09:05,150 --> 00:09:07,880
arguments<font color="#CCCCCC"> themselves are good enough</font>

255
00:09:06,380 --> 00:09:09,170
indicators then forget the name<font color="#CCCCCC"> of the</font>

256
00:09:07,880 --> 00:09:13,880
<font color="#CCCCCC">process</font><font color="#E5E5E5"> and you'll actually start to</font>

257
00:09:09,170 --> 00:09:15,410
catch renaming binary attacks<font color="#E5E5E5"> so let's</font>

258
00:09:13,880 --> 00:09:16,850
look at an example<font color="#E5E5E5"> we're gonna</font><font color="#CCCCCC"> och you</font>

259
00:09:15,410 --> 00:09:19,550
skate the cradle now what do I<font color="#E5E5E5"> mean by</font>

260
00:09:16,850 --> 00:09:21,500
cradle<font color="#E5E5E5"> well cradle is this</font><font color="#CCCCCC"> one-liner at</font>

261
00:09:19,550 --> 00:09:24,349
the very top<font color="#CCCCCC"> here comes the one-liner</font><font color="#E5E5E5"> in</font>

262
00:09:21,500 --> 00:09:25,790
memory<font color="#E5E5E5"> let's download</font><font color="#CCCCCC"> a remote content</font>

263
00:09:24,350 --> 00:09:28,670
<font color="#E5E5E5">and then execute it without ever hitting</font>

264
00:09:25,790 --> 00:09:31,279
<font color="#E5E5E5">disk</font><font color="#CCCCCC"> and this is super</font><font color="#E5E5E5"> common because</font>

265
00:09:28,670 --> 00:09:33,860
copy and paste is easy and it's our<font color="#E5E5E5"> very</font>

266
00:09:31,279 --> 00:09:35,960
best friend<font color="#CCCCCC"> you'll see this syntax</font><font color="#E5E5E5"> in</font>

267
00:09:33,860 --> 00:09:38,180
<font color="#E5E5E5">vail</font><font color="#CCCCCC"> powersploit Metasploit all the big</font>

268
00:09:35,960 --> 00:09:40,640
<font color="#E5E5E5">players out there everyone uses this</font>

269
00:09:38,180 --> 00:09:41,930
syntax<font color="#E5E5E5"> so at the</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> least we should</font><font color="#CCCCCC"> be</font>

270
00:09:40,640 --> 00:09:45,650
<font color="#E5E5E5">good at</font><font color="#CCCCCC"> detecting this out of the</font><font color="#E5E5E5"> box</font>

271
00:09:41,930 --> 00:09:47,359
right so if this is our attacker command

272
00:09:45,650 --> 00:09:50,180
at the top<font color="#E5E5E5"> then that's defenders maybe</font>

273
00:09:47,360 --> 00:09:51,770
we can say<font color="#E5E5E5"> okay if we see this in logs</font>

274
00:09:50,180 --> 00:09:54,500
or if we see it on<font color="#E5E5E5"> the command line</font><font color="#CCCCCC"> if</font>

275
00:09:51,770 --> 00:09:58,579
we key off<font color="#CCCCCC"> of the string invoke</font>

276
00:09:54,500 --> 00:10:00,380
expression and new object<font color="#E5E5E5"> and system net</font>

277
00:09:58,580 --> 00:10:03,050
that live client<font color="#CCCCCC"> and download string</font>

278
00:10:00,380 --> 00:10:06,410
HTTP this would catch this exact command

279
00:10:03,050 --> 00:10:07,969
<font color="#CCCCCC">so now let's look at</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> few stations</font>

280
00:10:06,410 --> 00:10:08,680
<font color="#E5E5E5">can really mess this up for</font><font color="#CCCCCC"> us as</font>

281
00:10:07,970 --> 00:10:10,820
defenders

282
00:10:08,680 --> 00:10:12,620
first of all system dot this<font color="#E5E5E5"> is not</font>

283
00:10:10,820 --> 00:10:15,200
necessary<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to move pretty quickly</font>

284
00:10:12,620 --> 00:10:17,390
<font color="#CCCCCC">through</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> material</font><font color="#E5E5E5"> and these slides</font>

285
00:10:15,200 --> 00:10:18,470
are<font color="#CCCCCC"> available online so definitely</font>

286
00:10:17,390 --> 00:10:20,180
<font color="#E5E5E5">encourage you to</font><font color="#CCCCCC"> go back and check it</font>

287
00:10:18,470 --> 00:10:21,710
out<font color="#CCCCCC"> but I</font><font color="#E5E5E5"> really want to get to</font><font color="#CCCCCC"> to the</font>

288
00:10:20,180 --> 00:10:23,270
<font color="#E5E5E5">really fun stuff in detecting this so</font>

289
00:10:21,710 --> 00:10:24,620
it's not<font color="#E5E5E5"> just</font><font color="#CCCCCC"> like a really depressing</font>

290
00:10:23,270 --> 00:10:26,990
<font color="#E5E5E5">talk for us defender it's actually a</font>

291
00:10:24,620 --> 00:10:30,020
<font color="#E5E5E5">quick show of hands who here is blue</font>

292
00:10:26,990 --> 00:10:31,700
<font color="#E5E5E5">blue team defender in a day job awesome</font>

293
00:10:30,020 --> 00:10:33,319
<font color="#CCCCCC">please don't</font><font color="#E5E5E5"> throw anything at me</font><font color="#CCCCCC"> I</font>

294
00:10:31,700 --> 00:10:35,690
promise<font color="#CCCCCC"> I'll turn this around at the</font><font color="#E5E5E5"> end</font>

295
00:10:33,320 --> 00:10:37,970
<font color="#E5E5E5">and I'm assuming everyone else is red</font><font color="#CCCCCC"> or</font>

296
00:10:35,690 --> 00:10:40,070
undecided<font color="#CCCCCC"> or purple</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> like what I</font>

297
00:10:37,970 --> 00:10:41,720
<font color="#CCCCCC">like to consider</font><font color="#E5E5E5"> myself so system dot</font>

298
00:10:40,070 --> 00:10:43,670
this<font color="#CCCCCC"> is not necessary PowerShell will</font>

299
00:10:41,720 --> 00:10:45,020
automatically<font color="#E5E5E5"> pre pin this and actually</font>

300
00:10:43,670 --> 00:10:47,120
<font color="#CCCCCC">when</font><font color="#E5E5E5"> you look at module logs you'll see</font>

301
00:10:45,020 --> 00:10:48,709
system dot<font color="#CCCCCC"> it's prepended</font><font color="#E5E5E5"> so if an</font>

302
00:10:47,120 --> 00:10:50,750
attacker<font color="#E5E5E5"> doesn't have to put system dot</font>

303
00:10:48,709 --> 00:10:52,130
in this command<font color="#E5E5E5"> as a defender</font><font color="#CCCCCC"> I don't</font>

304
00:10:50,750 --> 00:10:54,170
want to<font color="#CCCCCC"> account on it needing to be</font>

305
00:10:52,130 --> 00:10:55,910
there in<font color="#E5E5E5"> my defenses so I'm gonna remove</font>

306
00:10:54,170 --> 00:10:58,029
<font color="#E5E5E5">it from the attacker command and from my</font>

307
00:10:55,910 --> 00:11:01,000
<font color="#E5E5E5">defenses make sense</font>

308
00:10:58,029 --> 00:11:03,140
<font color="#E5E5E5">all right the URL this is</font><font color="#CCCCCC"> a string and</font>

309
00:11:01,000 --> 00:11:04,280
strings are amazing if you<font color="#E5E5E5"> can get</font>

310
00:11:03,140 --> 00:11:05,930
something<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a string you</font><font color="#E5E5E5"> can off you</font>

311
00:11:04,280 --> 00:11:07,510
<font color="#E5E5E5">skate it like crazy so you can</font>

312
00:11:05,930 --> 00:11:09,500
concatenate it<font color="#E5E5E5"> in line just</font><font color="#CCCCCC"> like that</font>

313
00:11:07,510 --> 00:11:13,510
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> use sing</font>

314
00:11:09,500 --> 00:11:13,510
quotes double<font color="#E5E5E5"> quotes whitespace etc</font>

315
00:11:13,780 --> 00:11:18,709
download string so download string<font color="#CCCCCC"> in</font>

316
00:11:16,910 --> 00:11:20,930
the context of<font color="#CCCCCC"> PowerShell this is a</font>

317
00:11:18,710 --> 00:11:23,090
member token when I say token<font color="#E5E5E5"> layer off</font>

318
00:11:20,930 --> 00:11:25,370
<font color="#E5E5E5">you station PowerShell token</font><font color="#CCCCCC"> eise's the</font>

319
00:11:23,090 --> 00:11:27,980
command<font color="#E5E5E5"> the URL is a string token</font>

320
00:11:25,370 --> 00:11:29,210
download string is a member token invoke

321
00:11:27,980 --> 00:11:32,030
expression a new object those are

322
00:11:29,210 --> 00:11:33,890
command<font color="#CCCCCC"> let tokens</font><font color="#E5E5E5"> so from</font><font color="#CCCCCC"> power shalls'</font>

323
00:11:32,030 --> 00:11:36,170
<font color="#E5E5E5">perspective download string is a member</font>

324
00:11:33,890 --> 00:11:39,650
but it's actually a<font color="#CCCCCC"> method of</font><font color="#E5E5E5"> the net</font>

325
00:11:36,170 --> 00:11:42,050
<font color="#E5E5E5">dot web client dotnet class so it's</font>

326
00:11:39,650 --> 00:11:43,520
however<font color="#CCCCCC"> not the only method</font><font color="#E5E5E5"> it's the</font>

327
00:11:42,050 --> 00:11:45,680
most common<font color="#CCCCCC"> ways the attackers use</font>

328
00:11:43,520 --> 00:11:47,480
<font color="#E5E5E5">there's actually quite a few</font><font color="#CCCCCC"> and this is</font>

329
00:11:45,680 --> 00:11:48,410
<font color="#E5E5E5">just a partial list and the ones that</font>

330
00:11:47,480 --> 00:11:51,500
really<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to draw your</font><font color="#CCCCCC"> attention to</font>

331
00:11:48,410 --> 00:11:53,030
<font color="#CCCCCC">our</font><font color="#E5E5E5"> download string file and data and we</font>

332
00:11:51,500 --> 00:11:54,890
talked<font color="#CCCCCC"> about this a bit of the community</font>

333
00:11:53,030 --> 00:11:56,660
night<font color="#E5E5E5"> but</font><font color="#CCCCCC"> these are all ones that we see</font>

334
00:11:54,890 --> 00:11:59,150
attackers using so to cover all<font color="#E5E5E5"> of these</font>

335
00:11:56,660 --> 00:12:01,569
why don't we just change our defenses to

336
00:11:59,150 --> 00:12:05,300
look for dot download and we'll be good

337
00:12:01,570 --> 00:12:07,130
<font color="#E5E5E5">so we'll do that next</font><font color="#CCCCCC"> why might this</font>

338
00:12:05,300 --> 00:12:09,890
print<font color="#E5E5E5"> to</font><font color="#CCCCCC"> see be problematic in our in</font>

339
00:12:07,130 --> 00:12:12,170
our detection<font color="#E5E5E5"> here well some attackers</font>

340
00:12:09,890 --> 00:12:13,490
will actually set new<font color="#E5E5E5"> object net that</font>

341
00:12:12,170 --> 00:12:15,829
web client as a variable<font color="#E5E5E5"> typically</font>

342
00:12:13,490 --> 00:12:17,810
calling it WC<font color="#E5E5E5"> and</font><font color="#CCCCCC"> these have variable</font>

343
00:12:15,830 --> 00:12:21,560
name dot download string<font color="#E5E5E5"> so let's remove</font>

344
00:12:17,810 --> 00:12:22,699
that<font color="#CCCCCC"> parenthesis from our detection</font><font color="#E5E5E5"> all</font>

345
00:12:21,560 --> 00:12:25,280
<font color="#E5E5E5">right here's</font><font color="#CCCCCC"> where it gets a little</font>

346
00:12:22,700 --> 00:12:26,960
crazy<font color="#CCCCCC"> so download string this</font><font color="#E5E5E5"> is a</font>

347
00:12:25,280 --> 00:12:28,459
member how might we actually office<font color="#E5E5E5"> get</font>

348
00:12:26,960 --> 00:12:30,350
a member so when I<font color="#E5E5E5"> first started looking</font>

349
00:12:28,460 --> 00:12:32,210
<font color="#E5E5E5">at this about a year year</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a half ago</font>

350
00:12:30,350 --> 00:12:33,470
<font color="#E5E5E5">I basically</font><font color="#CCCCCC"> just started trying to screw</font>

351
00:12:32,210 --> 00:12:35,630
<font color="#CCCCCC">around with</font><font color="#E5E5E5"> it and</font><font color="#CCCCCC"> see what</font><font color="#E5E5E5"> I could</font><font color="#CCCCCC"> make</font>

352
00:12:33,470 --> 00:12:37,070
still work<font color="#CCCCCC"> so I found you</font><font color="#E5E5E5"> could put</font>

353
00:12:35,630 --> 00:12:40,760
single<font color="#CCCCCC"> quotes around it now let's</font><font color="#E5E5E5"> don't</font>

354
00:12:37,070 --> 00:12:42,200
<font color="#E5E5E5">make it a string but like kind of I</font>

355
00:12:40,760 --> 00:12:44,450
found however<font color="#E5E5E5"> that</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> you put double</font>

356
00:12:42,200 --> 00:12:45,589
<font color="#CCCCCC">quotes around it</font><font color="#E5E5E5"> you can actually do a</font>

357
00:12:44,450 --> 00:12:47,390
little more<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> if you look at</font>

358
00:12:45,589 --> 00:12:50,089
download string<font color="#E5E5E5"> this next</font><font color="#CCCCCC"> slide I</font>

359
00:12:47,390 --> 00:12:51,460
promise you works what you<font color="#E5E5E5"> can do is you</font>

360
00:12:50,089 --> 00:12:53,600
<font color="#E5E5E5">can just put a tick mark in there</font>

361
00:12:51,460 --> 00:12:54,920
and what you can actually do is put a

362
00:12:53,600 --> 00:12:56,450
lot of tick marks if you'd like<font color="#E5E5E5"> but</font>

363
00:12:54,920 --> 00:12:58,339
<font color="#CCCCCC">basically why does this work well</font><font color="#E5E5E5"> the</font>

364
00:12:56,450 --> 00:13:00,320
tick mark is the escape<font color="#CCCCCC"> character for</font>

365
00:12:58,339 --> 00:13:01,910
<font color="#CCCCCC">powershell</font><font color="#E5E5E5"> and if it's not one of these</font>

366
00:13:00,320 --> 00:13:03,020
predefined escape characters then it

367
00:13:01,910 --> 00:13:05,900
doesn't<font color="#E5E5E5"> really have any meaning</font><font color="#CCCCCC"> at all</font>

368
00:13:03,020 --> 00:13:09,170
<font color="#CCCCCC">so it executes and then it's all still</font>

369
00:13:05,900 --> 00:13:10,160
in the<font color="#CCCCCC"> the logs so you can put a</font><font color="#E5E5E5"> lot of</font>

370
00:13:09,170 --> 00:13:11,780
tech characters in there as long<font color="#CCCCCC"> as</font>

371
00:13:10,160 --> 00:13:15,410
<font color="#CCCCCC">you're not proceeding a character</font><font color="#E5E5E5"> that</font>

372
00:13:11,780 --> 00:13:17,689
<font color="#E5E5E5">has an escaped meaning however</font><font color="#CCCCCC"> i really</font>

373
00:13:15,410 --> 00:13:19,400
<font color="#CCCCCC">wanted</font><font color="#E5E5E5"> to put ticks in front of those</font>

374
00:13:17,690 --> 00:13:20,750
characters that<font color="#E5E5E5"> had escaped meanings and</font>

375
00:13:19,400 --> 00:13:22,610
so what<font color="#E5E5E5"> i found</font><font color="#CCCCCC"> is all you have to do is</font>

376
00:13:20,750 --> 00:13:23,630
just<font color="#E5E5E5"> uppercase the characters and then</font>

377
00:13:22,610 --> 00:13:25,740
you can put tick marks and

378
00:13:23,630 --> 00:13:27,450
so now we can<font color="#E5E5E5"> put tick marks in front</font>

379
00:13:25,740 --> 00:13:29,070
<font color="#CCCCCC">any character that we want</font><font color="#E5E5E5"> and as you</font>

380
00:13:27,450 --> 00:13:30,930
see<font color="#E5E5E5"> a persist in the command</font><font color="#CCCCCC"> line</font>

381
00:13:29,070 --> 00:13:33,510
argument logs as well as powers<font color="#CCCCCC"> shell</font>

382
00:13:30,930 --> 00:13:34,500
script block logs<font color="#E5E5E5"> which means</font><font color="#CCCCCC"> even if</font>

383
00:13:33,510 --> 00:13:36,030
you have the latest<font color="#CCCCCC"> version of</font>

384
00:13:34,500 --> 00:13:37,860
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> and all this stuff enabled</font>

385
00:13:36,030 --> 00:13:44,189
you still have to<font color="#E5E5E5"> take these tick</font><font color="#CCCCCC"> marks</font>

386
00:13:37,860 --> 00:13:46,200
into account so if you decide to<font color="#E5E5E5"> try to</font>

387
00:13:44,190 --> 00:13:48,000
use<font color="#CCCCCC"> reg X</font><font color="#E5E5E5"> and I actually would not</font>

388
00:13:46,200 --> 00:13:50,040
advise that<font color="#E5E5E5"> for some reasons we'll look</font>

389
00:13:48,000 --> 00:13:51,720
at<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit make sure</font><font color="#CCCCCC"> that in</font>

390
00:13:50,040 --> 00:13:54,060
<font color="#CCCCCC">addition to this download</font><font color="#E5E5E5"> stuff you also</font>

391
00:13:51,720 --> 00:13:55,920
look for open read because that is also

392
00:13:54,060 --> 00:13:57,810
a memory<font color="#E5E5E5"> only way that you can download</font>

393
00:13:55,920 --> 00:14:00,900
a payload it returns it as a byte stream

394
00:13:57,810 --> 00:14:02,880
<font color="#CCCCCC">but it is</font><font color="#E5E5E5"> something we've seen a lot</font>

395
00:14:00,900 --> 00:14:06,870
less often<font color="#E5E5E5"> but still we've seen it in</font>

396
00:14:02,880 --> 00:14:09,000
<font color="#E5E5E5">the wild now if you'll notice here we</font>

397
00:14:06,870 --> 00:14:11,730
can also if we add this dot invoke then

398
00:14:09,000 --> 00:14:13,590
we can treat download string completely

399
00:14:11,730 --> 00:14:15,300
as a string and start<font color="#E5E5E5"> to do like</font>

400
00:14:13,590 --> 00:14:16,680
concatenation or even like reordering

401
00:14:15,300 --> 00:14:18,410
<font color="#E5E5E5">and stuff like that so</font><font color="#CCCCCC"> that's why I</font>

402
00:14:16,680 --> 00:14:20,819
<font color="#E5E5E5">wouldn't recommend doing reg X because</font>

403
00:14:18,410 --> 00:14:23,790
when it<font color="#E5E5E5"> comes to reordering stuff it's</font>

404
00:14:20,820 --> 00:14:25,800
<font color="#E5E5E5">just game over so let's just remove</font><font color="#CCCCCC"> that</font>

405
00:14:23,790 --> 00:14:27,750
for my indicators next at that web

406
00:14:25,800 --> 00:14:29,729
client well we can obfuscate this with

407
00:14:27,750 --> 00:14:30,990
double quotes<font color="#CCCCCC"> tick marks</font><font color="#E5E5E5"> we can treat</font>

408
00:14:29,730 --> 00:14:32,520
this as a full-blown<font color="#E5E5E5"> string and</font>

409
00:14:30,990 --> 00:14:34,170
<font color="#CCCCCC">concatenate it</font><font color="#E5E5E5"> or set it in</font><font color="#CCCCCC"> multiple</font>

410
00:14:32,520 --> 00:14:36,870
variables and reassemble it<font color="#E5E5E5"> so let's</font>

411
00:14:34,170 --> 00:14:37,819
<font color="#E5E5E5">just remove</font><font color="#CCCCCC"> that for my indicators new</font>

412
00:14:36,870 --> 00:14:40,320
object

413
00:14:37,820 --> 00:14:41,310
so now PowerShell is really inviting for

414
00:14:40,320 --> 00:14:43,530
new users I actually kind<font color="#E5E5E5"> of</font>

415
00:14:41,310 --> 00:14:46,109
accidentally stumbled<font color="#CCCCCC"> into</font><font color="#E5E5E5"> PowerShell I</font>

416
00:14:43,530 --> 00:14:47,430
was writing batch files<font color="#E5E5E5"> and one of the</font>

417
00:14:46,110 --> 00:14:49,290
guys in my last job<font color="#E5E5E5"> said won't you just</font>

418
00:14:47,430 --> 00:14:49,979
change that<font color="#CCCCCC"> to adopt</font><font color="#E5E5E5"> PS one and then run</font>

419
00:14:49,290 --> 00:14:52,469
it with PowerShell

420
00:14:49,980 --> 00:14:54,060
<font color="#E5E5E5">and I said well</font><font color="#CCCCCC"> well actually work means</font>

421
00:14:52,470 --> 00:14:55,440
like yeah like it's really<font color="#E5E5E5"> friendly it</font>

422
00:14:54,060 --> 00:14:56,880
basically<font color="#E5E5E5"> has all these aliases</font><font color="#CCCCCC"> that</font>

423
00:14:55,440 --> 00:14:59,130
take<font color="#E5E5E5"> into account if you're</font><font color="#CCCCCC"> doing make</font>

424
00:14:56,880 --> 00:15:00,480
<font color="#E5E5E5">derp order then you don't have to do the</font>

425
00:14:59,130 --> 00:15:03,960
<font color="#E5E5E5">PowerShell versions of those commands</font>

426
00:15:00,480 --> 00:15:05,340
those are all aliases<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> PowerShell</font>

427
00:15:03,960 --> 00:15:07,500
is really inviting but<font color="#E5E5E5"> that as a</font>

428
00:15:05,340 --> 00:15:09,000
defender it means you have to look for

429
00:15:07,500 --> 00:15:11,090
all those options<font color="#E5E5E5"> when you're writing</font>

430
00:15:09,000 --> 00:15:13,080
defenses<font color="#E5E5E5"> because any of</font><font color="#CCCCCC"> those are valid</font>

431
00:15:11,090 --> 00:15:15,390
however<font color="#CCCCCC"> a new object</font><font color="#E5E5E5"> doesn't have</font><font color="#CCCCCC"> a</font>

432
00:15:13,080 --> 00:15:16,680
single alias so I thought perfect<font color="#E5E5E5"> this</font>

433
00:15:15,390 --> 00:15:20,430
<font color="#E5E5E5">is</font><font color="#CCCCCC"> gonna be a really really good</font>

434
00:15:16,680 --> 00:15:22,109
indicator not<font color="#E5E5E5"> so much so there are so</font>

435
00:15:20,430 --> 00:15:23,219
many commandlets<font color="#E5E5E5"> in PowerShell that</font>

436
00:15:22,110 --> 00:15:24,840
sometimes you forget what you're looking

437
00:15:23,220 --> 00:15:27,510
for and there's this really nice<font color="#CCCCCC"> git</font>

438
00:15:24,840 --> 00:15:29,700
command<font color="#E5E5E5"> so in this example there's a</font>

439
00:15:27,510 --> 00:15:32,160
there's a command I<font color="#E5E5E5"> want</font><font color="#CCCCCC"> that's new - P</font>

440
00:15:29,700 --> 00:15:34,710
something<font color="#E5E5E5"> so let me just say</font><font color="#CCCCCC"> git command</font>

441
00:15:32,160 --> 00:15:36,900
<font color="#E5E5E5">new - P wildcard</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> here all the</font>

442
00:15:34,710 --> 00:15:38,610
functions<font color="#E5E5E5"> and commands that return there</font>

443
00:15:36,900 --> 00:15:41,790
now this is<font color="#E5E5E5"> returning not text but</font>

444
00:15:38,610 --> 00:15:43,950
<font color="#E5E5E5">PowerShell objects so what</font><font color="#CCCCCC"> that means is</font>

445
00:15:41,790 --> 00:15:45,719
that we can<font color="#CCCCCC"> actually take that object</font>

446
00:15:43,950 --> 00:15:47,400
that<font color="#E5E5E5"> comes back and invoke it now if we</font>

447
00:15:45,720 --> 00:15:48,750
pass it<font color="#CCCCCC"> to invoke expression</font><font color="#E5E5E5"> it will</font>

448
00:15:47,400 --> 00:15:50,310
actually convert that object into<font color="#CCCCCC"> a</font>

449
00:15:48,750 --> 00:15:53,040
<font color="#CCCCCC">string and</font><font color="#E5E5E5"> as long</font><font color="#CCCCCC"> as we're returning a</font>

450
00:15:50,310 --> 00:15:55,770
<font color="#E5E5E5">single object</font><font color="#CCCCCC"> then it will</font><font color="#E5E5E5"> return the</font>

451
00:15:53,040 --> 00:15:58,140
name of that<font color="#CCCCCC"> object which is</font><font color="#E5E5E5"> the name</font><font color="#CCCCCC"> of</font>

452
00:15:55,770 --> 00:16:00,270
the commandment<font color="#E5E5E5"> but we can do better</font>

453
00:15:58,140 --> 00:16:02,100
<font color="#CCCCCC">than that</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> invoke it with</font>

454
00:16:00,270 --> 00:16:03,779
a dot<font color="#E5E5E5"> or an ampersand</font><font color="#CCCCCC"> now these are</font>

455
00:16:02,100 --> 00:16:06,180
invocation operators which are<font color="#E5E5E5"> actually</font>

456
00:16:03,779 --> 00:16:08,100
acting<font color="#CCCCCC"> on the object itself so this is</font>

457
00:16:06,180 --> 00:16:09,779
new object<font color="#E5E5E5"> now you may say well</font><font color="#CCCCCC"> why does</font>

458
00:16:08,100 --> 00:16:11,810
that matter<font color="#E5E5E5"> because if I'm a defender I</font>

459
00:16:09,779 --> 00:16:15,000
still see new<font color="#E5E5E5"> object sitting right there</font>

460
00:16:11,810 --> 00:16:16,949
exactly<font color="#E5E5E5"> so as an attacker what we could</font>

461
00:16:15,000 --> 00:16:19,339
do is<font color="#E5E5E5"> use that nice</font><font color="#CCCCCC"> wild-card</font>

462
00:16:16,950 --> 00:16:22,890
functionality<font color="#E5E5E5"> and do something like</font><font color="#CCCCCC"> that</font>

463
00:16:19,339 --> 00:16:24,570
<font color="#E5E5E5">or that in any combination that we want</font>

464
00:16:22,890 --> 00:16:27,089
as long<font color="#E5E5E5"> as it returns a single</font><font color="#CCCCCC"> object</font>

465
00:16:24,570 --> 00:16:28,680
<font color="#E5E5E5">that is now a new</font><font color="#CCCCCC"> object</font><font color="#E5E5E5"> and you will</font>

466
00:16:27,089 --> 00:16:30,270
not see<font color="#CCCCCC"> new object</font><font color="#E5E5E5"> on the command line</font>

467
00:16:28,680 --> 00:16:33,359
or script<font color="#CCCCCC"> block</font><font color="#E5E5E5"> logs</font><font color="#CCCCCC"> where you will see</font>

468
00:16:30,270 --> 00:16:35,130
it is in module logs<font color="#CCCCCC"> see I D 4103</font>

469
00:16:33,360 --> 00:16:37,320
but for any script that runs<font color="#E5E5E5"> every</font>

470
00:16:35,130 --> 00:16:39,089
<font color="#E5E5E5">single parameter binding like this is</font>

471
00:16:37,320 --> 00:16:40,620
its own logs<font color="#CCCCCC"> you could have hundreds or</font>

472
00:16:39,089 --> 00:16:43,260
<font color="#E5E5E5">even thousands of module augs for a</font>

473
00:16:40,620 --> 00:16:45,839
single script invocation<font color="#CCCCCC"> so the data is</font>

474
00:16:43,260 --> 00:16:47,130
<font color="#E5E5E5">all there it's just not in one place and</font>

475
00:16:45,839 --> 00:16:49,320
it makes it a bit difficult<font color="#E5E5E5"> to kind of</font>

476
00:16:47,130 --> 00:16:51,959
reassemble depending on what kind<font color="#CCCCCC"> of</font>

477
00:16:49,320 --> 00:16:54,360
solutions that<font color="#CCCCCC"> you have so the problem</font>

478
00:16:51,959 --> 00:16:55,739
gets a little<font color="#E5E5E5"> worse get command</font><font color="#CCCCCC"> maybe to</font>

479
00:16:54,360 --> 00:16:57,720
start looking for<font color="#E5E5E5"> a get command</font><font color="#CCCCCC"> on the</font>

480
00:16:55,740 --> 00:17:00,240
<font color="#E5E5E5">command</font><font color="#CCCCCC"> line which is actually</font><font color="#E5E5E5"> extremely</font>

481
00:16:57,720 --> 00:17:03,420
uncommon<font color="#E5E5E5"> so that might</font><font color="#CCCCCC"> be a good</font><font color="#E5E5E5"> one but</font>

482
00:17:00,240 --> 00:17:05,250
get command<font color="#E5E5E5"> has an alias of GCM</font><font color="#CCCCCC"> and</font>

483
00:17:03,420 --> 00:17:07,349
<font color="#E5E5E5">actually if you promise to</font><font color="#CCCCCC"> keep a secret</font>

484
00:17:05,250 --> 00:17:11,040
there's an undocumented alias forget

485
00:17:07,349 --> 00:17:13,109
command and it is<font color="#E5E5E5"> command because</font>

486
00:17:11,040 --> 00:17:14,699
<font color="#E5E5E5">PowerShell again being really really</font>

487
00:17:13,109 --> 00:17:17,069
helpful says oh I see you type this

488
00:17:14,699 --> 00:17:18,420
thing and I'll have a function<font color="#CCCCCC"> named</font>

489
00:17:17,069 --> 00:17:20,339
command<font color="#E5E5E5"> I don't have a command line</font>

490
00:17:18,420 --> 00:17:21,900
<font color="#CCCCCC">named command</font><font color="#E5E5E5"> maybe you meant get -</font>

491
00:17:20,339 --> 00:17:23,550
command<font color="#E5E5E5"> and it will</font><font color="#CCCCCC"> check that</font><font color="#E5E5E5"> and like</font>

492
00:17:21,900 --> 00:17:26,130
yep get<font color="#E5E5E5"> command is definitely are you</font>

493
00:17:23,550 --> 00:17:27,869
<font color="#E5E5E5">looking for</font><font color="#CCCCCC"> so there you</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> now why this</font>

494
00:17:26,130 --> 00:17:29,370
is<font color="#E5E5E5"> important</font><font color="#CCCCCC"> to defenders as any time</font>

495
00:17:27,869 --> 00:17:32,010
you're writing detection is based on a

496
00:17:29,370 --> 00:17:34,530
commandment that starts with get - that

497
00:17:32,010 --> 00:17:38,429
get - is not necessary<font color="#E5E5E5"> and attackers</font>

498
00:17:34,530 --> 00:17:40,290
might not have it in their command so

499
00:17:38,429 --> 00:17:42,630
maybe we look<font color="#E5E5E5"> for new</font><font color="#CCCCCC"> object get command</font>

500
00:17:40,290 --> 00:17:43,980
GCM command if we don't want to<font color="#E5E5E5"> use</font>

501
00:17:42,630 --> 00:17:45,870
wildcards for any of the stuff<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font>

502
00:17:43,980 --> 00:17:48,210
just chunk up our command what name<font color="#E5E5E5"> into</font>

503
00:17:45,870 --> 00:17:50,080
variables<font color="#E5E5E5"> or do string manipulation the</font>

504
00:17:48,210 --> 00:17:53,409
the world is our oyster when<font color="#E5E5E5"> it comes to</font>

505
00:17:50,080 --> 00:17:54,760
this<font color="#CCCCCC"> PowerShell one not oh</font><font color="#E5E5E5"> this is just</font>

506
00:17:53,409 --> 00:17:56,110
a few<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can do this exact</font>

507
00:17:54,760 --> 00:17:59,440
<font color="#CCCCCC">same thing</font><font color="#E5E5E5"> with PowerShell one dot oh</font>

508
00:17:56,110 --> 00:18:01,000
now that's you know kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> ugly looking</font>

509
00:17:59,440 --> 00:18:03,070
<font color="#E5E5E5">code how the later versions of</font>

510
00:18:01,000 --> 00:18:04,870
PowerShell<font color="#CCCCCC"> have made it a lot</font><font color="#E5E5E5"> easier to</font>

511
00:18:03,070 --> 00:18:07,539
<font color="#CCCCCC">accomplish this with shorter commands</font>

512
00:18:04,870 --> 00:18:09,639
<font color="#E5E5E5">but attackers don't always choose the</font>

513
00:18:07,539 --> 00:18:10,960
<font color="#E5E5E5">smallest commands if they no defenders</font>

514
00:18:09,640 --> 00:18:12,909
are not looking<font color="#CCCCCC"> for this this would be a</font>

515
00:18:10,960 --> 00:18:16,330
really<font color="#E5E5E5"> great</font><font color="#CCCCCC"> opportunity for them</font>

516
00:18:12,909 --> 00:18:17,740
my advice is look at posh code.org<font color="#CCCCCC"> a</font>

517
00:18:16,330 --> 00:18:19,629
popular<font color="#CCCCCC"> powershell script sharing</font>

518
00:18:17,740 --> 00:18:20,980
platform<font color="#E5E5E5"> and it's been around</font><font color="#CCCCCC"> since the</font>

519
00:18:19,630 --> 00:18:23,350
beginning<font color="#CCCCCC"> of PowerShell so there's a lot</font>

520
00:18:20,980 --> 00:18:24,519
<font color="#E5E5E5">of old and new scripts there and you can</font>

521
00:18:23,350 --> 00:18:25,928
find a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> really good ones that</font><font color="#CCCCCC"> are</font>

522
00:18:24,519 --> 00:18:28,809
syntax the important thing<font color="#CCCCCC"> to see here</font>

523
00:18:25,929 --> 00:18:30,549
<font color="#CCCCCC">is this execution context this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> an</font>

524
00:18:28,809 --> 00:18:32,408
automatic variable in PowerShell<font color="#CCCCCC"> and</font>

525
00:18:30,549 --> 00:18:33,549
this is really important keep that in

526
00:18:32,409 --> 00:18:35,289
mind because<font color="#E5E5E5"> we're gonna see this played</font>

527
00:18:33,549 --> 00:18:37,269
out<font color="#E5E5E5"> a lot and as a defender if you're</font>

528
00:18:35,289 --> 00:18:39,940
not<font color="#E5E5E5"> looking for</font><font color="#CCCCCC"> that I would highly</font>

529
00:18:37,269 --> 00:18:42,159
recommend<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> I've very rarely</font>

530
00:18:39,940 --> 00:18:43,600
seen this in the<font color="#E5E5E5"> wild but that's</font>

531
00:18:42,159 --> 00:18:45,130
<font color="#E5E5E5">probably because most people don't have</font>

532
00:18:43,600 --> 00:18:46,480
PowerShell logging enabled and

533
00:18:45,130 --> 00:18:48,370
unfortunately attackers aren't in the

534
00:18:46,480 --> 00:18:49,960
habit of enabling<font color="#E5E5E5"> it for you so I do</font>

535
00:18:48,370 --> 00:18:53,168
recommend<font color="#CCCCCC"> you enable</font><font color="#E5E5E5"> it before you have</font>

536
00:18:49,960 --> 00:18:55,179
to deal with<font color="#E5E5E5"> attackers so all the stuff</font>

537
00:18:53,169 --> 00:18:57,340
with<font color="#E5E5E5"> get command</font><font color="#CCCCCC"> you can do the exact</font>

538
00:18:55,179 --> 00:18:58,690
<font color="#CCCCCC">same thing with git alias</font><font color="#E5E5E5"> although</font>

539
00:18:57,340 --> 00:19:00,730
you're working with the alias<font color="#CCCCCC"> name and</font>

540
00:18:58,690 --> 00:19:01,960
<font color="#E5E5E5">not the command line name so git command</font>

541
00:19:00,730 --> 00:19:04,179
you can<font color="#E5E5E5"> do that for let's say invoke</font>

542
00:19:01,960 --> 00:19:05,110
expression get a list you can do with

543
00:19:04,179 --> 00:19:08,889
<font color="#CCCCCC">IEX</font>

544
00:19:05,110 --> 00:19:11,949
and get alias has an<font color="#E5E5E5"> alias of</font><font color="#CCCCCC"> ghoul</font><font color="#E5E5E5"> and</font>

545
00:19:08,889 --> 00:19:13,899
then the get alias unofficial alias is

546
00:19:11,950 --> 00:19:17,740
alias<font color="#CCCCCC"> you know because of</font><font color="#E5E5E5"> the whole</font><font color="#CCCCCC"> git</font>

547
00:19:13,899 --> 00:19:20,229
- thing<font color="#E5E5E5"> so so we'll just go with this</font>

548
00:19:17,740 --> 00:19:22,389
option<font color="#E5E5E5"> for our attacker command and</font>

549
00:19:20,230 --> 00:19:24,669
we're just not gonna worry<font color="#CCCCCC"> about trying</font>

550
00:19:22,389 --> 00:19:27,189
<font color="#E5E5E5">to detect that because there's just so</font>

551
00:19:24,669 --> 00:19:28,690
many options<font color="#E5E5E5"> so if you did try</font><font color="#CCCCCC"> to detect</font>

552
00:19:27,190 --> 00:19:30,039
it though these are all commandlets that

553
00:19:28,690 --> 00:19:32,799
can have tick marks put<font color="#E5E5E5"> in front of them</font>

554
00:19:30,039 --> 00:19:34,779
<font color="#E5E5E5">oh that's fun another thing you can do</font>

555
00:19:32,799 --> 00:19:36,340
instead of tick marks is go back to<font color="#CCCCCC"> our</font>

556
00:19:34,779 --> 00:19:37,990
<font color="#E5E5E5">invocation operators the dot and</font>

557
00:19:36,340 --> 00:19:40,840
ampersand<font color="#E5E5E5"> and then you can just say new</font>

558
00:19:37,990 --> 00:19:43,330
<font color="#CCCCCC">objects concatenated</font><font color="#E5E5E5"> this one right here</font>

559
00:19:40,840 --> 00:19:44,740
this is<font color="#E5E5E5"> one of the nice ways that you</font>

560
00:19:43,330 --> 00:19:46,689
can<font color="#CCCCCC"> reorder content so you basically</font>

561
00:19:44,740 --> 00:19:48,220
take<font color="#E5E5E5"> a string like new object chunk it</font>

562
00:19:46,690 --> 00:19:49,899
up in this case<font color="#CCCCCC"> two three sub strings</font>

563
00:19:48,220 --> 00:19:53,350
<font color="#E5E5E5">and then set the ordering of those on</font>

564
00:19:49,899 --> 00:19:54,969
the left<font color="#CCCCCC"> sides of the dash</font><font color="#E5E5E5"> F so some</font>

565
00:19:53,350 --> 00:19:56,559
people<font color="#E5E5E5"> will have said okay well when I</font>

566
00:19:54,970 --> 00:19:57,940
<font color="#E5E5E5">look at</font><font color="#CCCCCC"> PowerShell arguments or event</font>

567
00:19:56,559 --> 00:19:59,918
logs<font color="#CCCCCC"> I just remove all the special</font>

568
00:19:57,940 --> 00:20:01,210
characters so in that case if this you

569
00:19:59,919 --> 00:20:02,770
have this concatenated stuff if you

570
00:20:01,210 --> 00:20:04,539
remove the pluses<font color="#E5E5E5"> and</font>

571
00:20:02,770 --> 00:20:06,220
the you know quotes and<font color="#E5E5E5"> stuff the new</font>

572
00:20:04,539 --> 00:20:08,950
object<font color="#CCCCCC"> will actually come back</font><font color="#E5E5E5"> together</font>

573
00:20:06,220 --> 00:20:12,850
and you can<font color="#E5E5E5"> apply rules to it here new</font>

574
00:20:08,950 --> 00:20:14,110
object never comes back together<font color="#E5E5E5"> so</font>

575
00:20:12,850 --> 00:20:16,000
let's just give up on<font color="#E5E5E5"> this indicator</font>

576
00:20:14,110 --> 00:20:18,490
<font color="#E5E5E5">I'll be a realist here so we're left</font>

577
00:20:16,000 --> 00:20:20,350
with invoke expression and<font color="#E5E5E5"> again if you</font>

578
00:20:18,490 --> 00:20:22,360
<font color="#E5E5E5">are defender</font><font color="#CCCCCC"> if you're not looking for</font>

579
00:20:20,350 --> 00:20:24,370
<font color="#CCCCCC">IEX</font><font color="#E5E5E5"> or invoke expression on the command</font>

580
00:20:22,360 --> 00:20:27,908
line<font color="#CCCCCC"> you're missing some seriously easy</font>

581
00:20:24,370 --> 00:20:30,129
<font color="#E5E5E5">wins out there so what things we need to</font>

582
00:20:27,909 --> 00:20:32,770
keep in<font color="#CCCCCC"> mind though about this</font><font color="#E5E5E5"> well it</font>

583
00:20:30,130 --> 00:20:34,240
has an alias<font color="#CCCCCC"> of IX</font><font color="#E5E5E5"> ordering doesn't</font>

584
00:20:32,770 --> 00:20:35,770
matter<font color="#E5E5E5"> you can have it at the</font><font color="#CCCCCC"> beginning</font>

585
00:20:34,240 --> 00:20:38,980
<font color="#E5E5E5">of an expression or an</font><font color="#CCCCCC"> expression being</font>

586
00:20:35,770 --> 00:20:40,450
piped<font color="#E5E5E5"> into it</font><font color="#CCCCCC"> since their command lets</font>

587
00:20:38,980 --> 00:20:42,520
you can just add tick marks in front<font color="#CCCCCC"> of</font>

588
00:20:40,450 --> 00:20:44,649
<font color="#E5E5E5">them you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> use the invocation</font>

589
00:20:42,520 --> 00:20:46,510
operators<font color="#E5E5E5"> and treat</font><font color="#CCCCCC"> ie X</font><font color="#E5E5E5"> or invoke</font>

590
00:20:44,649 --> 00:20:49,330
expression as strings and manipulate it

591
00:20:46,510 --> 00:20:51,279
with any<font color="#E5E5E5"> of the string manipulation</font><font color="#CCCCCC"> and</font>

592
00:20:49,330 --> 00:20:52,870
just a<font color="#E5E5E5"> fun note</font><font color="#CCCCCC"> I'll be talking</font><font color="#E5E5E5"> here in</font>

593
00:20:51,279 --> 00:20:54,399
a second<font color="#E5E5E5"> about the powershell corpus</font>

594
00:20:52,870 --> 00:20:57,100
that<font color="#CCCCCC"> lee and</font><font color="#E5E5E5"> i assembled as part of this</font>

595
00:20:54,399 --> 00:20:58,330
research of all the powershell scripts

596
00:20:57,100 --> 00:21:01,120
that we assembled all<font color="#CCCCCC"> I'll talk about</font>

597
00:20:58,330 --> 00:21:02,918
<font color="#E5E5E5">the numbers in a minute less than 3% of</font>

598
00:21:01,120 --> 00:21:04,209
scripts actually<font color="#E5E5E5"> used invoke expressions</font>

599
00:21:02,919 --> 00:21:06,309
<font color="#CCCCCC">so from a script perspective it's</font>

600
00:21:04,210 --> 00:21:08,260
actually pretty<font color="#E5E5E5"> darn uncommon but again</font>

601
00:21:06,309 --> 00:21:12,370
on the command line<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> uncommon</font>

602
00:21:08,260 --> 00:21:13,840
<font color="#E5E5E5">in legitimate</font><font color="#CCCCCC"> powershell the other thing</font>

603
00:21:12,370 --> 00:21:16,629
to keep in<font color="#CCCCCC"> mind is invoke expression has</font>

604
00:21:13,840 --> 00:21:18,939
a<font color="#E5E5E5"> cousin called</font><font color="#CCCCCC"> invoke command and now</font>

605
00:21:16,630 --> 00:21:20,679
invoke command is really fascinating

606
00:21:18,940 --> 00:21:22,450
typically it's used to run a command<font color="#E5E5E5"> on</font>

607
00:21:20,679 --> 00:21:24,820
a remote system<font color="#E5E5E5"> but if you don't define</font>

608
00:21:22,450 --> 00:21:26,289
a remote<font color="#E5E5E5"> system it runs locally besides</font>

609
00:21:24,820 --> 00:21:28,270
that<font color="#E5E5E5"> the biggest difference is invoke</font>

610
00:21:26,289 --> 00:21:31,179
expression<font color="#E5E5E5"> is expecting to</font><font color="#CCCCCC"> invoke a</font>

611
00:21:28,270 --> 00:21:34,179
string or an expression invoke command

612
00:21:31,179 --> 00:21:35,110
<font color="#E5E5E5">is expecting a script block we have</font>

613
00:21:34,179 --> 00:21:37,510
<font color="#CCCCCC">invoked command</font>

614
00:21:35,110 --> 00:21:39,908
it's a<font color="#E5E5E5"> oasis or ICM you can use the dot</font>

615
00:21:37,510 --> 00:21:41,799
or ampersand<font color="#E5E5E5"> invocation operators also</font>

616
00:21:39,909 --> 00:21:43,899
<font color="#E5E5E5">at the</font><font color="#CCCCCC"> end of the curly braces there you</font>

617
00:21:41,799 --> 00:21:46,029
can put dot invoke invoke<font color="#E5E5E5"> returns is</font>

618
00:21:43,899 --> 00:21:49,389
invoke with context if<font color="#CCCCCC"> your powershell</font><font color="#E5E5E5"> 3</font>

619
00:21:46,029 --> 00:21:50,770
year later<font color="#E5E5E5"> a lot of different options so</font>

620
00:21:49,390 --> 00:21:53,169
<font color="#E5E5E5">let's say that we want to look</font><font color="#CCCCCC"> for all</font>

621
00:21:50,770 --> 00:21:54,879
<font color="#E5E5E5">these options here you</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> have the</font>

622
00:21:53,169 --> 00:21:56,559
powershell one dodo syntax<font color="#E5E5E5"> again</font>

623
00:21:54,880 --> 00:21:58,419
execution context<font color="#E5E5E5"> there it is again</font>

624
00:21:56,559 --> 00:22:00,158
and the invoke script will handle the

625
00:21:58,419 --> 00:22:02,649
<font color="#CCCCCC">invoke strip method</font><font color="#E5E5E5"> will handle both</font><font color="#CCCCCC"> an</font>

626
00:22:00,159 --> 00:22:04,809
expression<font color="#E5E5E5"> or</font><font color="#CCCCCC"> a script lock it doesn't</font>

627
00:22:02,649 --> 00:22:06,850
matter<font color="#E5E5E5"> now what's really gonna be</font>

628
00:22:04,809 --> 00:22:08,770
problematic<font color="#CCCCCC"> is this ampersand</font><font color="#E5E5E5"> and dot</font>

629
00:22:06,850 --> 00:22:11,529
how could you possibly signature off of

630
00:22:08,770 --> 00:22:14,289
an ampersand or a dot<font color="#CCCCCC"> and not get insane</font>

631
00:22:11,529 --> 00:22:15,820
false positives<font color="#CCCCCC"> well one thing we could</font>

632
00:22:14,289 --> 00:22:17,530
do is<font color="#E5E5E5"> say</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> i only want to look</font>

633
00:22:15,820 --> 00:22:20,200
<font color="#E5E5E5">ampersand or dot if there are also curly</font>

634
00:22:17,530 --> 00:22:21,970
braces<font color="#E5E5E5"> because the</font><font color="#CCCCCC"> only way</font><font color="#E5E5E5"> to write a</font>

635
00:22:20,200 --> 00:22:25,450
<font color="#E5E5E5">script block in PowerShell is to have it</font>

636
00:22:21,970 --> 00:22:28,780
<font color="#E5E5E5">encapsulated in curly braces</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> not</font>

637
00:22:25,450 --> 00:22:30,460
quite<font color="#CCCCCC"> you can convert expressions to</font>

638
00:22:28,780 --> 00:22:33,340
script locks<font color="#CCCCCC"> and here are just</font><font color="#E5E5E5"> two ways</font>

639
00:22:30,460 --> 00:22:35,230
<font color="#E5E5E5">of doing that</font><font color="#CCCCCC"> you can use</font><font color="#E5E5E5"> a script</font><font color="#CCCCCC"> block</font>

640
00:22:33,340 --> 00:22:37,750
class<font color="#E5E5E5"> in the create method or you can</font>

641
00:22:35,230 --> 00:22:40,840
use execution context once again and use

642
00:22:37,750 --> 00:22:42,190
its new script lock<font color="#CCCCCC"> method</font><font color="#E5E5E5"> and so in</font>

643
00:22:40,840 --> 00:22:43,750
this case<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> have script</font><font color="#CCCCCC"> locks</font>

644
00:22:42,190 --> 00:22:44,710
without ever having curly braces and

645
00:22:43,750 --> 00:22:46,420
<font color="#E5E5E5">there are other ways</font><font color="#CCCCCC"> you can get around</font>

646
00:22:44,710 --> 00:22:48,700
<font color="#E5E5E5">curly braces but these are just two and</font>

647
00:22:46,420 --> 00:22:49,810
for each of<font color="#E5E5E5"> these you can</font><font color="#CCCCCC"> often get</font><font color="#E5E5E5"> him</font>

648
00:22:48,700 --> 00:22:53,080
with all the stuff<font color="#CCCCCC"> we literally</font><font color="#E5E5E5"> just</font>

649
00:22:49,810 --> 00:22:57,520
talked about so there's no<font color="#E5E5E5"> easy win here</font>

650
00:22:53,080 --> 00:22:59,110
unfortunately<font color="#CCCCCC"> and in an invoke kredel</font>

651
00:22:57,520 --> 00:23:03,220
crafter<font color="#E5E5E5"> which</font><font color="#CCCCCC"> i talked about</font><font color="#E5E5E5"> two days</font>

652
00:22:59,110 --> 00:23:04,600
<font color="#E5E5E5">ago</font><font color="#CCCCCC"> we actually I built in</font><font color="#E5E5E5"> eleven eleven</font>

653
00:23:03,220 --> 00:23:06,730
different invocation options<font color="#E5E5E5"> these</font><font color="#CCCCCC"> are</font>

654
00:23:04,600 --> 00:23:08,860
the nine from memory cradles and<font color="#E5E5E5"> a few</font>

655
00:23:06,730 --> 00:23:10,240
more for<font color="#E5E5E5"> disk based cradles but</font>

656
00:23:08,860 --> 00:23:12,100
basically there's a lot<font color="#CCCCCC"> of ways you can</font>

657
00:23:10,240 --> 00:23:14,410
invoke content that looks<font color="#E5E5E5"> very different</font>

658
00:23:12,100 --> 00:23:16,629
<font color="#E5E5E5">than you might expect</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the reason</font>

659
00:23:14,410 --> 00:23:18,220
that<font color="#E5E5E5"> I put all this research and codify</font>

660
00:23:16,630 --> 00:23:20,740
<font color="#E5E5E5">into these tools that I spend way too</font>

661
00:23:18,220 --> 00:23:22,990
much time<font color="#CCCCCC"> on and ASCII art and colors</font>

662
00:23:20,740 --> 00:23:25,000
and<font color="#E5E5E5"> stuff like that is because</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> really</font>

663
00:23:22,990 --> 00:23:26,380
want it to<font color="#E5E5E5"> be accessible to anyone to</font>

664
00:23:25,000 --> 00:23:27,850
look at and to be able<font color="#CCCCCC"> to just to say</font>

665
00:23:26,380 --> 00:23:30,310
you know<font color="#E5E5E5"> what let me randomly produced</font>

666
00:23:27,850 --> 00:23:32,080
<font color="#E5E5E5">ten thousand and</font><font color="#CCCCCC"> off.you</font><font color="#E5E5E5"> skated samples</font>

667
00:23:30,310 --> 00:23:34,270
and see how<font color="#CCCCCC"> many</font><font color="#E5E5E5"> of these my detection</font>

668
00:23:32,080 --> 00:23:35,800
is actually miss and then tweak my

669
00:23:34,270 --> 00:23:37,870
<font color="#E5E5E5">detections so that we can come up with</font>

670
00:23:35,800 --> 00:23:41,320
speed here<font color="#E5E5E5"> that's exactly what I do in</font>

671
00:23:37,870 --> 00:23:45,340
my<font color="#CCCCCC"> day to</font><font color="#E5E5E5"> day job all right</font>

672
00:23:41,320 --> 00:23:47,169
take a<font color="#E5E5E5"> deep breath</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was a lot so the</font>

673
00:23:45,340 --> 00:23:48,340
good<font color="#CCCCCC"> news is that</font><font color="#E5E5E5"> there's really not</font>

674
00:23:47,170 --> 00:23:50,400
anything else that you<font color="#CCCCCC"> can do from</font>

675
00:23:48,340 --> 00:23:52,419
<font color="#E5E5E5">Northeast Asian perspective</font><font color="#CCCCCC"> after this</font>

676
00:23:50,400 --> 00:23:54,250
no I'm just kidding there's<font color="#E5E5E5"> a way more</font>

677
00:23:52,420 --> 00:23:56,350
you can do<font color="#E5E5E5"> that</font><font color="#CCCCCC"> was just</font><font color="#E5E5E5"> token layer off</font>

678
00:23:54,250 --> 00:23:57,430
you<font color="#CCCCCC"> station</font><font color="#E5E5E5"> so let's say after</font><font color="#CCCCCC"> we go</font>

679
00:23:56,350 --> 00:23:58,870
<font color="#CCCCCC">through all this token layer off</font><font color="#E5E5E5"> you</font>

680
00:23:57,430 --> 00:24:00,790
station we then just<font color="#CCCCCC"> take</font><font color="#E5E5E5"> the entire</font>

681
00:23:58,870 --> 00:24:02,739
command and say you know what let<font color="#E5E5E5"> me</font>

682
00:24:00,790 --> 00:24:04,510
treat you<font color="#E5E5E5"> as a string and then I get all</font>

683
00:24:02,740 --> 00:24:06,430
the amazing string off you<font color="#CCCCCC"> scan</font><font color="#E5E5E5"> like</font>

684
00:24:04,510 --> 00:24:08,110
reversing the entire command on the

685
00:24:06,430 --> 00:24:12,310
command line<font color="#E5E5E5"> and then in memory are</font>

686
00:24:08,110 --> 00:24:14,530
irreversible delimiters and split and

687
00:24:12,310 --> 00:24:16,000
reassemble we can do the same thing with

688
00:24:14,530 --> 00:24:17,290
<font color="#E5E5E5">a replace just say yeah pull those</font>

689
00:24:16,000 --> 00:24:19,600
garbage delimiters out I don't<font color="#E5E5E5"> want</font>

690
00:24:17,290 --> 00:24:20,889
those again all happening<font color="#E5E5E5"> in memory we</font>

691
00:24:19,600 --> 00:24:23,530
<font color="#E5E5E5">can also just do any kind of crazy</font>

692
00:24:20,890 --> 00:24:26,320
concatenation that we want to<font color="#E5E5E5"> do and all</font>

693
00:24:23,530 --> 00:24:28,030
<font color="#E5E5E5">of these are interesting the thing to</font>

694
00:24:26,320 --> 00:24:29,679
keep in<font color="#CCCCCC"> mind here is that each layer of</font>

695
00:24:28,030 --> 00:24:32,080
this string off<font color="#CCCCCC"> eustachian we</font>

696
00:24:29,680 --> 00:24:33,730
<font color="#E5E5E5">be result of the entire command it will</font>

697
00:24:32,080 --> 00:24:35,169
be resolved<font color="#E5E5E5"> in script lock logs for</font>

698
00:24:33,730 --> 00:24:36,430
every single<font color="#CCCCCC"> rapper of</font><font color="#E5E5E5"> string off you</font>

699
00:24:35,170 --> 00:24:39,310
station you'll have a separate script

700
00:24:36,430 --> 00:24:40,600
<font color="#CCCCCC">lock log for each of those so now</font>

701
00:24:39,310 --> 00:24:42,580
wouldn't<font color="#E5E5E5"> it be awful if someone wrote a</font>

702
00:24:40,600 --> 00:24:45,669
tool just<font color="#CCCCCC"> to like automate this</font><font color="#E5E5E5"> the only</font>

703
00:24:42,580 --> 00:24:47,560
one can do it so more<font color="#E5E5E5"> or less that's</font>

704
00:24:45,670 --> 00:24:49,150
what I did a<font color="#E5E5E5"> year ago</font><font color="#CCCCCC"> to teach myself</font>

705
00:24:47,560 --> 00:24:51,190
<font color="#E5E5E5">and to have a nice way to test my</font>

706
00:24:49,150 --> 00:24:53,920
detections<font color="#E5E5E5"> I've heard that some</font><font color="#CCCCCC"> people</font>

707
00:24:51,190 --> 00:24:55,510
will use<font color="#CCCCCC"> this offensively</font><font color="#E5E5E5"> so my</font>

708
00:24:53,920 --> 00:24:57,130
<font color="#E5E5E5">apologies for</font><font color="#CCCCCC"> that unfortunately there's</font>

709
00:24:55,510 --> 00:25:00,129
no good<font color="#CCCCCC"> way to give this</font><font color="#E5E5E5"> information and</font>

710
00:24:57,130 --> 00:25:03,040
<font color="#E5E5E5">tooling to the good guys</font><font color="#CCCCCC"> so everyone is</font>

711
00:25:00,130 --> 00:25:05,020
is fair game it seems<font color="#E5E5E5"> but you can just</font>

712
00:25:03,040 --> 00:25:06,580
<font color="#E5E5E5">produce</font><font color="#CCCCCC"> this exact same download cradle</font>

713
00:25:05,020 --> 00:25:08,350
and<font color="#E5E5E5"> a click of a button have it be</font>

714
00:25:06,580 --> 00:25:10,389
something like<font color="#E5E5E5"> this you</font><font color="#CCCCCC"> could then say</font>

715
00:25:08,350 --> 00:25:11,889
after<font color="#E5E5E5"> this token off you station let me</font>

716
00:25:10,390 --> 00:25:14,230
go for that string<font color="#E5E5E5"> off</font><font color="#CCCCCC"> you skatin and</font>

717
00:25:11,890 --> 00:25:15,520
produce something<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> now this is</font>

718
00:25:14,230 --> 00:25:17,950
unfortunately stuff we see quite<font color="#E5E5E5"> a bit</font>

719
00:25:15,520 --> 00:25:19,420
<font color="#E5E5E5">especially most recently with</font><font color="#CCCCCC"> apt 32</font>

720
00:25:17,950 --> 00:25:21,700
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Vietnamese</font><font color="#E5E5E5"> attack group</font>

721
00:25:19,420 --> 00:25:23,200
also<font color="#CCCCCC"> known as ocean Lotus and</font><font color="#E5E5E5"> they</font>

722
00:25:21,700 --> 00:25:24,940
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> do about five six or seven</font>

723
00:25:23,200 --> 00:25:26,980
<font color="#CCCCCC">layers</font><font color="#E5E5E5"> of string off you station after</font>

724
00:25:24,940 --> 00:25:28,750
<font color="#E5E5E5">the token layer off you station so I've</font>

725
00:25:26,980 --> 00:25:31,210
I've decoded a lot of my own work

726
00:25:28,750 --> 00:25:33,640
<font color="#CCCCCC">recently</font><font color="#E5E5E5"> which I get a lot of dirty</font>

727
00:25:31,210 --> 00:25:36,190
<font color="#E5E5E5">looks in the office for that but uh it</font>

728
00:25:33,640 --> 00:25:37,330
<font color="#E5E5E5">is what it is I suppose now in boat</font>

729
00:25:36,190 --> 00:25:39,160
<font color="#E5E5E5">cradle crafter</font><font color="#CCCCCC"> will take a different</font>

730
00:25:37,330 --> 00:25:40,600
<font color="#CCCCCC">spin on off you</font><font color="#E5E5E5"> station</font>

731
00:25:39,160 --> 00:25:42,220
you don't actually<font color="#E5E5E5"> perform substitution</font>

732
00:25:40,600 --> 00:25:44,709
off you station to<font color="#CCCCCC"> produce something</font>

733
00:25:42,220 --> 00:25:45,880
like<font color="#E5E5E5"> this instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> taking download</font>

734
00:25:44,710 --> 00:25:47,650
string and putting tick marks are

735
00:25:45,880 --> 00:25:49,330
<font color="#CCCCCC">concatenating</font><font color="#E5E5E5"> it'll basically enumerate</font>

736
00:25:47,650 --> 00:25:51,070
all the<font color="#E5E5E5"> methods for the net that web</font>

737
00:25:49,330 --> 00:25:53,080
client<font color="#E5E5E5"> class and then choose whichever</font>

738
00:25:51,070 --> 00:25:54,490
<font color="#CCCCCC">one will resolve the download string and</font>

739
00:25:53,080 --> 00:25:57,669
so this is the kind<font color="#CCCCCC"> of syntax you get</font>

740
00:25:54,490 --> 00:25:58,510
with<font color="#E5E5E5"> cradle crafter you can also do</font>

741
00:25:57,670 --> 00:26:02,710
<font color="#CCCCCC">something</font><font color="#E5E5E5"> like this</font>

742
00:25:58,510 --> 00:26:05,200
<font color="#CCCCCC">100% of special</font><font color="#E5E5E5"> characters</font><font color="#CCCCCC"> now I cannot</font>

743
00:26:02,710 --> 00:26:07,360
take credit<font color="#E5E5E5"> for this back in 2010</font><font color="#CCCCCC"> a</font>

744
00:26:05,200 --> 00:26:08,920
Japanese researcher with a handle<font color="#CCCCCC"> amudha</font>

745
00:26:07,360 --> 00:26:10,959
<font color="#E5E5E5">Gucci came up with this and they wrote</font>

746
00:26:08,920 --> 00:26:12,720
hello world<font color="#E5E5E5"> and I really want to</font><font color="#CCCCCC"> meet</font>

747
00:26:10,960 --> 00:26:14,650
this person<font color="#E5E5E5"> someday because it's just</font>

748
00:26:12,720 --> 00:26:16,450
fantastically brilliant how they came<font color="#E5E5E5"> up</font>

749
00:26:14,650 --> 00:26:18,790
<font color="#CCCCCC">with this but</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> 100% special</font>

750
00:26:16,450 --> 00:26:20,650
characters<font color="#CCCCCC"> if you have</font><font color="#E5E5E5"> PowerShell script</font>

751
00:26:18,790 --> 00:26:22,960
block logs<font color="#CCCCCC"> this will resolve to about</font>

752
00:26:20,650 --> 00:26:25,420
<font color="#E5E5E5">three different layers and it's insanely</font>

753
00:26:22,960 --> 00:26:27,310
easy to<font color="#E5E5E5"> detect a couple of those layers</font>

754
00:26:25,420 --> 00:26:29,110
but if you don't have that and<font color="#CCCCCC"> this is</font>

755
00:26:27,310 --> 00:26:31,480
what you're dealing<font color="#E5E5E5"> with then that's</font>

756
00:26:29,110 --> 00:26:34,149
really sucky<font color="#E5E5E5"> right and this is mainly</font>

757
00:26:31,480 --> 00:26:36,250
<font color="#E5E5E5">just</font><font color="#CCCCCC"> a lot of variables and the variable</font>

758
00:26:34,150 --> 00:26:38,080
names are<font color="#E5E5E5"> composed of special characters</font>

759
00:26:36,250 --> 00:26:39,610
what you could also do is make those

760
00:26:38,080 --> 00:26:41,230
variable names<font color="#E5E5E5"> different links of</font>

761
00:26:39,610 --> 00:26:43,510
<font color="#E5E5E5">whitespace and come up with something</font>

762
00:26:41,230 --> 00:26:46,180
<font color="#CCCCCC">like that and back in Jane</font>

763
00:26:43,510 --> 00:26:47,980
<font color="#E5E5E5">I was talking with with Casey Smith or</font>

764
00:26:46,180 --> 00:26:49,360
<font color="#E5E5E5">subti and he looked at this and laughed</font>

765
00:26:47,980 --> 00:26:53,830
and<font color="#CCCCCC"> said oh this reminds</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> of a</font>

766
00:26:49,360 --> 00:26:55,780
<font color="#CCCCCC">whitespace encoding</font><font color="#E5E5E5"> and I said what is</font>

767
00:26:53,830 --> 00:26:57,370
that that sounds amazing<font color="#CCCCCC"> and so he</font>

768
00:26:55,780 --> 00:26:58,480
explained it to me<font color="#E5E5E5"> and so then I went</font>

769
00:26:57,370 --> 00:26:59,889
<font color="#CCCCCC">off and started writing and that's</font><font color="#E5E5E5"> the</font>

770
00:26:58,480 --> 00:27:01,750
second one<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> white spaced have</font>

771
00:26:59,890 --> 00:27:03,040
<font color="#CCCCCC">encoding</font><font color="#E5E5E5"> so you can see a tick mark at</font>

772
00:27:01,750 --> 00:27:05,320
the very beginning<font color="#E5E5E5"> and this whole</font>

773
00:27:03,040 --> 00:27:06,970
section<font color="#CCCCCC"> is either white spaces</font><font color="#E5E5E5"> delimited</font>

774
00:27:05,320 --> 00:27:08,080
by tabs or tabs delimited by white

775
00:27:06,970 --> 00:27:09,880
spaces and the stuff at<font color="#CCCCCC"> the end</font>

776
00:27:08,080 --> 00:27:11,649
basically<font color="#E5E5E5"> decodes that and invokes it</font>

777
00:27:09,880 --> 00:27:13,360
again<font color="#E5E5E5"> this will show up in several</font>

778
00:27:11,650 --> 00:27:14,770
layers and<font color="#E5E5E5"> script lock logs but it's</font>

779
00:27:13,360 --> 00:27:21,340
actually<font color="#E5E5E5"> pretty easy to detect if you</font>

780
00:27:14,770 --> 00:27:23,800
have those logs so for the<font color="#E5E5E5"> blue teamers</font>

781
00:27:21,340 --> 00:27:28,330
out there<font color="#CCCCCC"> I share this feeling with</font><font color="#E5E5E5"> you</font>

782
00:27:23,800 --> 00:27:30,310
every day<font color="#E5E5E5"> is there any hope well</font>

783
00:27:28,330 --> 00:27:32,530
fortunately I'm only halfway<font color="#E5E5E5"> through my</font>

784
00:27:30,310 --> 00:27:34,659
<font color="#CCCCCC">time a little over 1/2 so let's get to</font>

785
00:27:32,530 --> 00:27:36,310
<font color="#E5E5E5">the good news</font><font color="#CCCCCC"> for us defenders how can</font>

786
00:27:34,660 --> 00:27:38,950
we actually<font color="#E5E5E5"> possibly expect to detect</font>

787
00:27:36,310 --> 00:27:43,870
this stuff so we're going<font color="#E5E5E5"> to try a</font>

788
00:27:38,950 --> 00:27:46,030
little<font color="#E5E5E5"> science so as a human</font><font color="#CCCCCC"> we can look</font>

789
00:27:43,870 --> 00:27:48,699
at<font color="#E5E5E5"> this and say this is not healthy code</font>

790
00:27:46,030 --> 00:27:50,080
this<font color="#E5E5E5"> is really abnormal</font><font color="#CCCCCC"> no one would</font>

791
00:27:48,700 --> 00:27:52,120
look at<font color="#E5E5E5"> this in their environment and</font>

792
00:27:50,080 --> 00:27:54,610
say yep let's just let that<font color="#CCCCCC"> go on</font>

793
00:27:52,120 --> 00:27:57,129
through unnoticed<font color="#CCCCCC"> this is really crazy</font>

794
00:27:54,610 --> 00:27:59,620
and so as a<font color="#E5E5E5"> human if we can see that how</font>

795
00:27:57,130 --> 00:28:03,300
can<font color="#E5E5E5"> we have a system a machine</font><font color="#CCCCCC"> look at</font>

796
00:27:59,620 --> 00:28:07,449
this and say<font color="#E5E5E5"> this does not feel normal</font>

797
00:28:03,300 --> 00:28:08,919
so a year<font color="#E5E5E5"> ago</font><font color="#CCCCCC"> after I released the mocha</font>

798
00:28:07,450 --> 00:28:10,630
coffee station<font color="#CCCCCC"> Leigh Holmes kind of how</font>

799
00:28:08,920 --> 00:28:12,910
<font color="#CCCCCC">he</font><font color="#E5E5E5"> first met was he released this blog</font>

800
00:28:10,630 --> 00:28:15,130
<font color="#CCCCCC">post about</font><font color="#E5E5E5"> a month later on detecting</font>

801
00:28:12,910 --> 00:28:17,100
<font color="#E5E5E5">off</font><font color="#CCCCCC"> he skated PowerShell code and he</font>

802
00:28:15,130 --> 00:28:19,630
<font color="#CCCCCC">actually took some of the samples from</font>

803
00:28:17,100 --> 00:28:21,490
generated<font color="#E5E5E5"> from my tool and what he did</font>

804
00:28:19,630 --> 00:28:24,100
<font color="#E5E5E5">was he took</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the scripts on the</font>

805
00:28:21,490 --> 00:28:27,130
<font color="#CCCCCC">Posche co.org the PowerShell script</font>

806
00:28:24,100 --> 00:28:29,320
sharing platform<font color="#E5E5E5"> and he looked at</font><font color="#CCCCCC"> using</font>

807
00:28:27,130 --> 00:28:30,670
a kind<font color="#E5E5E5"> of a baby step of science and</font>

808
00:28:29,320 --> 00:28:32,530
saying what if we<font color="#CCCCCC"> just look at character</font>

809
00:28:30,670 --> 00:28:34,420
frequency analysis<font color="#CCCCCC"> because there's a lot</font>

810
00:28:32,530 --> 00:28:36,399
<font color="#E5E5E5">of weird characters here especially</font><font color="#CCCCCC"> that</font>

811
00:28:34,420 --> 00:28:37,720
guy if<font color="#CCCCCC"> 100 percent</font><font color="#E5E5E5"> of your script of</font>

812
00:28:36,400 --> 00:28:40,450
special characters<font color="#CCCCCC"> like</font><font color="#E5E5E5"> that's not</font>

813
00:28:37,720 --> 00:28:43,000
healthy right<font color="#E5E5E5"> so how can we</font><font color="#CCCCCC"> actually</font>

814
00:28:40,450 --> 00:28:44,770
look<font color="#E5E5E5"> at this in a lot of scripts</font><font color="#CCCCCC"> and so</font>

815
00:28:43,000 --> 00:28:46,830
on the right you'll<font color="#CCCCCC"> see</font><font color="#E5E5E5"> all the scripts</font>

816
00:28:44,770 --> 00:28:50,980
<font color="#E5E5E5">in posh code</font><font color="#CCCCCC"> these are the average</font>

817
00:28:46,830 --> 00:28:55,179
<font color="#E5E5E5">character frequency for the scripts</font><font color="#CCCCCC"> e</font><font color="#E5E5E5"> ta</font>

818
00:28:50,980 --> 00:28:56,560
<font color="#E5E5E5">R and you'll see the dollar sign is the</font>

819
00:28:55,180 --> 00:28:56,970
very first special character that<font color="#E5E5E5"> comes</font>

820
00:28:56,560 --> 00:28:59,129
up

821
00:28:56,970 --> 00:29:01,200
3%<font color="#CCCCCC"> on average of any given powershell</font>

822
00:28:59,130 --> 00:29:04,950
script<font color="#CCCCCC"> on the left we have those other</font>

823
00:29:01,200 --> 00:29:07,470
<font color="#E5E5E5">two samples</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> 20% tick</font>

824
00:29:04,950 --> 00:29:10,140
marks<font color="#E5E5E5"> obviously this is all special</font>

825
00:29:07,470 --> 00:29:11,429
characters so visually we<font color="#CCCCCC"> can look at</font>

826
00:29:10,140 --> 00:29:13,440
<font color="#E5E5E5">this</font><font color="#CCCCCC"> even and say yeah these look very</font>

827
00:29:11,429 --> 00:29:17,100
different<font color="#CCCCCC"> but again</font><font color="#E5E5E5"> at scale how can a</font>

828
00:29:13,440 --> 00:29:20,070
system know that these are<font color="#E5E5E5"> different so</font>

829
00:29:17,100 --> 00:29:20,760
we come to a<font color="#CCCCCC"> math e slide</font><font color="#E5E5E5"> cosine</font>

830
00:29:20,070 --> 00:29:23,210
similarity

831
00:29:20,760 --> 00:29:25,320
I won't nerd<font color="#E5E5E5"> out too much but basically</font>

832
00:29:23,210 --> 00:29:27,809
<font color="#E5E5E5">cosine similarity this was really cool</font>

833
00:29:25,320 --> 00:29:29,549
so basically if<font color="#E5E5E5"> you have two different</font>

834
00:29:27,809 --> 00:29:31,740
<font color="#E5E5E5">lines points on the line let's say you</font>

835
00:29:29,549 --> 00:29:33,330
have two points<font color="#E5E5E5"> point a and B and then</font>

836
00:29:31,740 --> 00:29:35,820
<font color="#E5E5E5">another a</font><font color="#CCCCCC"> and B for two different lines</font>

837
00:29:33,330 --> 00:29:37,918
that<font color="#E5E5E5"> have angles like this</font><font color="#CCCCCC"> cosine</font>

838
00:29:35,820 --> 00:29:39,360
similarity<font color="#CCCCCC"> o is basically saying</font><font color="#E5E5E5"> just as</font>

839
00:29:37,919 --> 00:29:41,940
you can look at the angle between two

840
00:29:39,360 --> 00:29:43,530
<font color="#E5E5E5">different lines you can say how similar</font>

841
00:29:41,940 --> 00:29:45,030
they are<font color="#E5E5E5"> so lines like this are gonna be</font>

842
00:29:43,530 --> 00:29:47,428
a bit<font color="#CCCCCC"> more similar</font><font color="#E5E5E5"> but like this is</font>

843
00:29:45,030 --> 00:29:49,908
really different<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and you can</font>

844
00:29:47,429 --> 00:29:53,370
extend this concept<font color="#E5E5E5"> to three dimensional</font>

845
00:29:49,909 --> 00:29:55,110
lines or four dimensions<font color="#E5E5E5"> or maybe</font>

846
00:29:53,370 --> 00:29:58,049
dimensions to take into<font color="#E5E5E5"> account all the</font>

847
00:29:55,110 --> 00:30:01,770
<font color="#E5E5E5">characters in</font><font color="#CCCCCC"> the alphabet that you may</font>

848
00:29:58,049 --> 00:30:03,929
see<font color="#E5E5E5"> in</font><font color="#CCCCCC"> a powershell script so that's</font>

849
00:30:01,770 --> 00:30:06,870
what we did<font color="#CCCCCC"> in this blog post</font><font color="#E5E5E5"> as he</font>

850
00:30:03,929 --> 00:30:09,179
basically used this cosine similarity to

851
00:30:06,870 --> 00:30:10,979
say let<font color="#E5E5E5"> me take all the</font><font color="#CCCCCC"> lists of</font><font color="#E5E5E5"> were</font>

852
00:30:09,179 --> 00:30:12,539
called features which<font color="#E5E5E5"> are basically just</font>

853
00:30:10,980 --> 00:30:14,190
<font color="#E5E5E5">the count and the percentage of all</font>

854
00:30:12,539 --> 00:30:15,840
<font color="#E5E5E5">these characters and then compare each</font>

855
00:30:14,190 --> 00:30:19,049
script to the average<font color="#E5E5E5"> of everything in</font>

856
00:30:15,840 --> 00:30:21,059
<font color="#E5E5E5">posh code and as you can see most of the</font>

857
00:30:19,049 --> 00:30:23,250
healthy normal scripts are very very

858
00:30:21,059 --> 00:30:24,928
close to the<font color="#CCCCCC"> value of</font><font color="#E5E5E5"> one they're like</font>

859
00:30:23,250 --> 00:30:26,549
almost topped out as yeah this looks

860
00:30:24,929 --> 00:30:28,440
really normal<font color="#E5E5E5"> but then we have our two</font>

861
00:30:26,549 --> 00:30:31,500
<font color="#CCCCCC">samples down here at 15%</font>

862
00:30:28,440 --> 00:30:33,120
<font color="#CCCCCC">37% really low</font><font color="#E5E5E5"> and if you do a scatter</font>

863
00:30:31,500 --> 00:30:35,039
<font color="#CCCCCC">plot on</font><font color="#E5E5E5"> this all the scripts and posh</font>

864
00:30:33,120 --> 00:30:37,530
code you'll see<font color="#E5E5E5"> that most all</font><font color="#CCCCCC"> of them</font>

865
00:30:35,039 --> 00:30:40,140
are in the<font color="#E5E5E5"> 90th percentile and then</font>

866
00:30:37,530 --> 00:30:43,200
these<font color="#CCCCCC"> ones at the</font><font color="#E5E5E5"> bottom</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> may be</font>

867
00:30:40,140 --> 00:30:44,760
worth<font color="#E5E5E5"> looking at and so if you have</font>

868
00:30:43,200 --> 00:30:46,590
thousands<font color="#E5E5E5"> of scripts like this like I</font>

869
00:30:44,760 --> 00:30:48,658
think<font color="#E5E5E5"> 3,500 scripts is what this was at</font>

870
00:30:46,590 --> 00:30:50,428
<font color="#E5E5E5">the time then instead of looking at</font>

871
00:30:48,659 --> 00:30:53,429
3,500 scripts you could just say let me

872
00:30:50,429 --> 00:30:54,960
take<font color="#E5E5E5"> everything below 60 70</font><font color="#CCCCCC"> %</font><font color="#E5E5E5"> and now</font>

873
00:30:53,429 --> 00:30:57,360
you're<font color="#CCCCCC"> looking at a couple</font><font color="#E5E5E5"> dozen scripts</font>

874
00:30:54,960 --> 00:30:59,990
<font color="#CCCCCC">you've greatly</font><font color="#E5E5E5"> reduced the data you have</font>

875
00:30:57,360 --> 00:31:02,580
<font color="#CCCCCC">to go through</font><font color="#E5E5E5"> to manually look for evil</font>

876
00:30:59,990 --> 00:31:04,830
however<font color="#E5E5E5"> to do this</font><font color="#CCCCCC"> properly we needed</font>

877
00:31:02,580 --> 00:31:06,389
more<font color="#CCCCCC"> data than just</font><font color="#E5E5E5"> 3,000 scripts so</font>

878
00:31:04,830 --> 00:31:08,699
last year Microsoft ran a<font color="#CCCCCC"> contest called</font>

879
00:31:06,390 --> 00:31:10,470
underhanded<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> people in the</font>

880
00:31:08,700 --> 00:31:11,760
community to<font color="#E5E5E5"> submit underhanded or</font>

881
00:31:10,470 --> 00:31:12,780
you skated<font color="#E5E5E5"> PowerShell to</font><font color="#CCCCCC"> try to get</font>

882
00:31:11,760 --> 00:31:16,350
around<font color="#E5E5E5"> a certain check</font><font color="#CCCCCC"> they're</font>

883
00:31:12,780 --> 00:31:19,049
performing<font color="#CCCCCC"> but</font><font color="#E5E5E5"> we really needed a</font>

884
00:31:16,350 --> 00:31:21,178
massive corpus<font color="#E5E5E5"> so over the past several</font>

885
00:31:19,049 --> 00:31:23,730
months<font color="#E5E5E5"> we assembled to the best of our</font>

886
00:31:21,179 --> 00:31:25,679
knowledge the largest<font color="#E5E5E5"> PowerShell corpus</font>

887
00:31:23,730 --> 00:31:29,100
and actually released it as part of<font color="#E5E5E5"> our</font>

888
00:31:25,679 --> 00:31:31,440
research<font color="#CCCCCC"> and the important thing that we</font>

889
00:31:29,100 --> 00:31:33,389
wanted to convey is that<font color="#E5E5E5"> since Lee and I</font>

890
00:31:31,440 --> 00:31:36,990
are<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> gentleman when</font><font color="#E5E5E5"> we only</font>

891
00:31:33,390 --> 00:31:38,970
<font color="#E5E5E5">built this corpus we did it politely now</font>

892
00:31:36,990 --> 00:31:40,640
what do I<font color="#CCCCCC"> mean by that well</font><font color="#E5E5E5"> Lee went out</font>

893
00:31:38,970 --> 00:31:43,110
and wrote a script starting with github

894
00:31:40,640 --> 00:31:44,909
to scrape all the<font color="#CCCCCC"> PowerShell projects</font>

895
00:31:43,110 --> 00:31:46,490
out<font color="#CCCCCC"> of github</font><font color="#E5E5E5"> and as you'll</font><font color="#CCCCCC"> see the blue</font>

896
00:31:44,909 --> 00:31:49,530
portions are<font color="#CCCCCC"> the code that</font><font color="#E5E5E5"> actually</font>

897
00:31:46,490 --> 00:31:52,049
retrieves the contents and all that<font color="#E5E5E5"> read</font>

898
00:31:49,530 --> 00:31:53,879
this<font color="#E5E5E5"> is actually Canadian</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> Lee is</font>

899
00:31:52,049 --> 00:31:55,860
Canadian<font color="#E5E5E5"> and he's so polite and this is</font>

900
00:31:53,880 --> 00:31:56,460
like throttling<font color="#E5E5E5"> and stuff like that to</font>

901
00:31:55,860 --> 00:31:59,158
make<font color="#E5E5E5"> sure that we're not</font><font color="#CCCCCC"> actually</font>

902
00:31:56,460 --> 00:32:01,169
pounding get<font color="#CCCCCC"> Hubbs resources so</font><font color="#E5E5E5"> um</font><font color="#CCCCCC"> Leith</font>

903
00:31:59,159 --> 00:32:02,970
looked at all the<font color="#CCCCCC"> the github</font><font color="#E5E5E5"> project IDs</font>

904
00:32:01,169 --> 00:32:04,500
and<font color="#E5E5E5"> it was up to</font><font color="#CCCCCC"> ten million and</font><font color="#E5E5E5"> so he</font>

905
00:32:02,970 --> 00:32:06,659
basically<font color="#E5E5E5"> started this and</font><font color="#CCCCCC"> after a</font><font color="#E5E5E5"> month</font>

906
00:32:04,500 --> 00:32:08,820
we were almost at<font color="#CCCCCC"> ten million</font><font color="#E5E5E5"> and then</font>

907
00:32:06,659 --> 00:32:09,960
it got<font color="#E5E5E5"> to 11 million and</font><font color="#CCCCCC"> twelve million</font>

908
00:32:08,820 --> 00:32:10,559
<font color="#CCCCCC">and he was like this doesn't make</font><font color="#E5E5E5"> any</font>

909
00:32:09,960 --> 00:32:12,030
<font color="#CCCCCC">sense</font>

910
00:32:10,559 --> 00:32:13,350
there was only<font color="#CCCCCC"> ten</font><font color="#E5E5E5"> million and they went</font>

911
00:32:12,030 --> 00:32:15,360
<font color="#E5E5E5">back and</font><font color="#CCCCCC"> look he's</font><font color="#E5E5E5"> like oh my gosh just</font>

912
00:32:13,350 --> 00:32:16,860
a<font color="#CCCCCC"> hundred million</font><font color="#E5E5E5"> and so instead</font><font color="#CCCCCC"> of</font>

913
00:32:15,360 --> 00:32:20,039
instead<font color="#CCCCCC"> of waiting an entire year to</font>

914
00:32:16,860 --> 00:32:21,870
<font color="#E5E5E5">finish scraping politely</font><font color="#CCCCCC"> what he did was</font>

915
00:32:20,039 --> 00:32:23,429
he just<font color="#E5E5E5"> politely asked github if there</font>

916
00:32:21,870 --> 00:32:25,320
<font color="#CCCCCC">was a way that</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> could tell</font><font color="#E5E5E5"> us all</font>

917
00:32:23,429 --> 00:32:26,880
the Power Cell projects<font color="#E5E5E5"> and github was</font>

918
00:32:25,320 --> 00:32:28,649
awesome they basically ran<font color="#E5E5E5"> a query</font>

919
00:32:26,880 --> 00:32:30,690
zipped up<font color="#E5E5E5"> all the PowerShell projects</font>

920
00:32:28,650 --> 00:32:32,070
and handed it to<font color="#E5E5E5"> us and so big prompts</font>

921
00:32:30,690 --> 00:32:33,690
you<font color="#E5E5E5"> to get home so I think the most</font>

922
00:32:32,070 --> 00:32:35,129
polite thing is the first<font color="#E5E5E5"> ask the people</font>

923
00:32:33,690 --> 00:32:37,440
with the data and a<font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> times they're</font>

924
00:32:35,130 --> 00:32:41,159
really open to<font color="#E5E5E5"> sharing it with you all</font>

925
00:32:37,440 --> 00:32:43,460
public data of<font color="#E5E5E5"> course so I'll just like</font>

926
00:32:41,159 --> 00:32:46,110
<font color="#E5E5E5">to say thank you to</font><font color="#CCCCCC"> every single</font>

927
00:32:43,460 --> 00:32:49,799
contributor<font color="#CCCCCC"> of PowerShell scripts to</font>

928
00:32:46,110 --> 00:32:51,809
github<font color="#CCCCCC"> TechNet</font><font color="#E5E5E5"> posh code</font><font color="#CCCCCC"> PowerShell</font>

929
00:32:49,799 --> 00:32:53,220
<font color="#E5E5E5">gallery has anyone here</font><font color="#CCCCCC"> ever contributed</font>

930
00:32:51,809 --> 00:32:55,190
<font color="#E5E5E5">a PowerShell script to any of those</font>

931
00:32:53,220 --> 00:32:57,360
platforms you<font color="#CCCCCC"> should</font><font color="#E5E5E5"> raise your hand</font>

932
00:32:55,190 --> 00:32:58,740
<font color="#E5E5E5">awesome thank you</font><font color="#CCCCCC"> so much</font><font color="#E5E5E5"> because</font>

933
00:32:57,360 --> 00:32:59,908
without you<font color="#CCCCCC"> this research will not be</font>

934
00:32:58,740 --> 00:33:02,250
<font color="#E5E5E5">process possible and your name is</font>

935
00:32:59,909 --> 00:33:04,350
actually<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this slide and it's also</font>

936
00:33:02,250 --> 00:33:08,880
embedded<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the code</font><font color="#CCCCCC"> and some fun</font><font color="#E5E5E5"> places</font>

937
00:33:04,350 --> 00:33:11,100
I'll talk about<font color="#CCCCCC"> later</font><font color="#E5E5E5"> so so now we have</font>

938
00:33:08,880 --> 00:33:14,159
all these scripts<font color="#CCCCCC"> and</font><font color="#E5E5E5"> now what do we do</font>

939
00:33:11,100 --> 00:33:16,320
<font color="#E5E5E5">with all these scripts well we look at</font>

940
00:33:14,159 --> 00:33:17,760
them<font color="#E5E5E5"> a lot of times people will think</font>

941
00:33:16,320 --> 00:33:19,770
<font color="#E5E5E5">you know hacking culture is really cool</font>

942
00:33:17,760 --> 00:33:21,419
you have a hoodie and you know<font color="#E5E5E5"> typing</font>

943
00:33:19,770 --> 00:33:23,610
away and smoke and<font color="#E5E5E5"> fog everywhere</font><font color="#CCCCCC"> but</font>

944
00:33:21,419 --> 00:33:24,020
this<font color="#E5E5E5"> is actually like a lot less cool</font>

945
00:33:23,610 --> 00:33:25,850
than that

946
00:33:24,020 --> 00:33:27,770
just like a<font color="#E5E5E5"> notepad window pops up and</font>

947
00:33:25,850 --> 00:33:29,149
say yeah that<font color="#CCCCCC"> one's kind of</font><font color="#E5E5E5"> off you</font>

948
00:33:27,770 --> 00:33:32,060
skated you know Martha's off you<font color="#CCCCCC"> skated</font>

949
00:33:29,150 --> 00:33:33,170
<font color="#CCCCCC">close that pop-up the next one but</font><font color="#E5E5E5"> in</font>

950
00:33:32,060 --> 00:33:35,810
doing<font color="#E5E5E5"> that we look at some interesting</font>

951
00:33:33,170 --> 00:33:39,680
<font color="#E5E5E5">stuff</font><font color="#CCCCCC"> some of the</font><font color="#E5E5E5"> stuff we found was</font>

952
00:33:35,810 --> 00:33:42,080
just<font color="#E5E5E5"> really sad</font><font color="#CCCCCC"> like this example</font><font color="#E5E5E5"> remove</font>

953
00:33:39,680 --> 00:33:44,150
<font color="#CCCCCC">game's ps1</font><font color="#E5E5E5"> this is a real script out</font>

954
00:33:42,080 --> 00:33:45,740
there<font color="#E5E5E5"> someone wrote to basically killed</font>

955
00:33:44,150 --> 00:33:46,790
processes for any games<font color="#CCCCCC"> running</font><font color="#E5E5E5"> on a</font>

956
00:33:45,740 --> 00:33:50,990
system and then<font color="#CCCCCC"> removed the game's</font>

957
00:33:46,790 --> 00:33:52,010
directory<font color="#CCCCCC"> major buzzkill but in all</font>

958
00:33:50,990 --> 00:33:54,110
<font color="#E5E5E5">seriousness some of the stuff was</font>

959
00:33:52,010 --> 00:33:55,670
actually<font color="#E5E5E5"> a bit heavier that we came</font>

960
00:33:54,110 --> 00:33:57,020
<font color="#E5E5E5">across this next one we</font><font color="#CCCCCC"> actually had to</font>

961
00:33:55,670 --> 00:34:00,980
kind of pause our research for a bit<font color="#E5E5E5"> and</font>

962
00:33:57,020 --> 00:34:03,110
<font color="#CCCCCC">figure out how to</font><font color="#E5E5E5"> handle and it was</font>

963
00:34:00,980 --> 00:34:05,300
filling up the US House and<font color="#E5E5E5"> Senate</font>

964
00:34:03,110 --> 00:34:07,250
servers with we<font color="#E5E5E5"> don't want SOPA Stop</font>

965
00:34:05,300 --> 00:34:08,418
Online Piracy Act so some<font color="#E5E5E5"> interesting</font>

966
00:34:07,250 --> 00:34:09,889
stuff you'll find<font color="#E5E5E5"> you look through</font><font color="#CCCCCC"> that</font>

967
00:34:08,418 --> 00:34:13,520
<font color="#CCCCCC">mini scripts</font><font color="#E5E5E5"> but it's fascinating to</font>

968
00:34:09,889 --> 00:34:14,779
<font color="#E5E5E5">look at at like real people</font><font color="#CCCCCC"> wrote all</font>

969
00:34:13,520 --> 00:34:17,840
these scripts and<font color="#E5E5E5"> so there's</font><font color="#CCCCCC"> just this</font>

970
00:34:14,780 --> 00:34:19,700
crazy<font color="#E5E5E5"> amount</font><font color="#CCCCCC"> of information</font><font color="#E5E5E5"> stored in</font>

971
00:34:17,840 --> 00:34:21,730
here<font color="#E5E5E5"> so how many scripts did we get four</font>

972
00:34:19,699 --> 00:34:25,939
hundred<font color="#E5E5E5"> and eight thousand scripts over</font>

973
00:34:21,730 --> 00:34:27,530
<font color="#CCCCCC">28,000 authors</font><font color="#E5E5E5"> and and we also</font>

974
00:34:25,940 --> 00:34:29,240
contributed about<font color="#E5E5E5"> four thousand of our</font>

975
00:34:27,530 --> 00:34:30,950
<font color="#E5E5E5">own randomly off you skated versions of</font>

976
00:34:29,239 --> 00:34:34,270
randomly selected scripts from<font color="#E5E5E5"> all those</font>

977
00:34:30,949 --> 00:34:37,759
<font color="#E5E5E5">platforms to incorporate in as well now</font>

978
00:34:34,270 --> 00:34:38,899
<font color="#CCCCCC">lead did a little a little math wizardry</font>

979
00:34:37,760 --> 00:34:40,340
here and<font color="#E5E5E5"> basically said if you had a</font>

980
00:34:38,899 --> 00:34:42,440
<font color="#E5E5E5">human typing at 50 words per minute</font>

981
00:34:40,340 --> 00:34:45,350
<font color="#CCCCCC">eight hours a day didn't</font><font color="#E5E5E5"> even take</font>

982
00:34:42,440 --> 00:34:47,450
weekends off it would take<font color="#E5E5E5"> 30 years to</font>

983
00:34:45,350 --> 00:34:49,060
produce all this corpus<font color="#E5E5E5"> so it's an</font>

984
00:34:47,449 --> 00:34:51,139
incredible<font color="#E5E5E5"> amount of humanity</font>

985
00:34:49,060 --> 00:34:53,690
encapsulated in this<font color="#E5E5E5"> corpus which is</font>

986
00:34:51,139 --> 00:34:55,668
really really<font color="#E5E5E5"> cool so the important</font>

987
00:34:53,690 --> 00:34:59,180
thing<font color="#E5E5E5"> here is that when</font><font color="#CCCCCC"> you manually</font>

988
00:34:55,668 --> 00:35:01,310
<font color="#E5E5E5">label the 7,000 scripts 7,000</font><font color="#CCCCCC"> note paths</font>

989
00:34:59,180 --> 00:35:06,470
popping up and saying<font color="#E5E5E5"> off you skated not</font>

990
00:35:01,310 --> 00:35:08,240
<font color="#E5E5E5">off you skated bad good so why did we</font>

991
00:35:06,470 --> 00:35:10,370
why don't we label all this data<font color="#E5E5E5"> if you</font>

992
00:35:08,240 --> 00:35:12,200
<font color="#E5E5E5">think back at our posh code example what</font>

993
00:35:10,370 --> 00:35:14,540
we did is<font color="#E5E5E5"> we took everything below let's</font>

994
00:35:12,200 --> 00:35:16,700
say 60<font color="#E5E5E5"> or 70 percent</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we looked at it</font>

995
00:35:14,540 --> 00:35:18,230
and<font color="#E5E5E5"> said are you off you skated are you</font>

996
00:35:16,700 --> 00:35:23,060
not how good is just<font color="#E5E5E5"> using character</font>

997
00:35:18,230 --> 00:35:24,800
frequency<font color="#E5E5E5"> to find evil and the thing</font>

998
00:35:23,060 --> 00:35:26,150
about this is is<font color="#CCCCCC"> that what you don't</font><font color="#E5E5E5"> get</font>

999
00:35:24,800 --> 00:35:28,040
<font color="#E5E5E5">with this metric is you don't know how</font>

1000
00:35:26,150 --> 00:35:30,590
many off<font color="#E5E5E5"> you skated examples did you</font>

1001
00:35:28,040 --> 00:35:32,509
miss that<font color="#E5E5E5"> actually fell in that 80th or</font>

1002
00:35:30,590 --> 00:35:34,070
90th percentile<font color="#CCCCCC"> and so when we</font><font color="#E5E5E5"> actually</font>

1003
00:35:32,510 --> 00:35:35,750
go<font color="#CCCCCC"> through and manually</font><font color="#E5E5E5"> label this data</font>

1004
00:35:34,070 --> 00:35:37,880
we actually<font color="#E5E5E5"> have</font>

1005
00:35:35,750 --> 00:35:39,860
we have an assertive yes it's off you

1006
00:35:37,880 --> 00:35:41,840
<font color="#E5E5E5">skater - no it's not off you skated for</font>

1007
00:35:39,860 --> 00:35:43,130
<font color="#E5E5E5">us to do future testing on which we'll</font>

1008
00:35:41,840 --> 00:35:45,680
talk about<font color="#E5E5E5"> in</font><font color="#CCCCCC"> just a moment</font>

1009
00:35:43,130 --> 00:35:47,720
and Ryan Cobb did some research on this

1010
00:35:45,680 --> 00:35:49,549
as<font color="#E5E5E5"> well and you basically see this chart</font>

1011
00:35:47,720 --> 00:35:52,069
here<font color="#CCCCCC"> that again as you approach that</font>

1012
00:35:49,550 --> 00:35:54,710
90th and 100th percentile<font color="#E5E5E5"> you're gonna</font>

1013
00:35:52,070 --> 00:35:56,990
get a lot more false<font color="#CCCCCC"> positives but</font><font color="#E5E5E5"> your</font>

1014
00:35:54,710 --> 00:35:58,250
false negative rates go<font color="#CCCCCC"> down so you have</font>

1015
00:35:56,990 --> 00:36:00,970
to look<font color="#E5E5E5"> dig through a lot more false</font>

1016
00:35:58,250 --> 00:36:03,770
<font color="#CCCCCC">positives to find more false negatives</font>

1017
00:36:00,970 --> 00:36:08,600
<font color="#CCCCCC">in your in your</font><font color="#E5E5E5"> quest to find off you</font>

1018
00:36:03,770 --> 00:36:11,810
skated evil so with the character

1019
00:36:08,600 --> 00:36:15,589
frequency<font color="#CCCCCC"> what we get is a precision</font><font color="#E5E5E5"> of</font>

1020
00:36:11,810 --> 00:36:16,759
<font color="#E5E5E5">89% and recall 37% what this means is</font>

1021
00:36:15,590 --> 00:36:19,640
that if you have a hundred thousand

1022
00:36:16,760 --> 00:36:23,810
scripts<font color="#E5E5E5"> and let's say</font><font color="#CCCCCC"> 10% are off you</font>

1023
00:36:19,640 --> 00:36:25,850
skated so<font color="#E5E5E5"> 10%</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> I run this script and</font>

1024
00:36:23,810 --> 00:36:27,500
<font color="#E5E5E5">it says all</font><font color="#CCCCCC"> right here's of all</font><font color="#E5E5E5"> these</font>

1025
00:36:25,850 --> 00:36:29,240
hundred thousand scripts<font color="#E5E5E5"> a thousand of</font>

1026
00:36:27,500 --> 00:36:31,100
<font color="#CCCCCC">them</font><font color="#E5E5E5"> are off you skated let's say it was</font>

1027
00:36:29,240 --> 00:36:33,129
right about every<font color="#E5E5E5"> single one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those</font>

1028
00:36:31,100 --> 00:36:35,150
then the precision is a hundred<font color="#E5E5E5"> percent</font>

1029
00:36:33,130 --> 00:36:37,670
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> this script told me was bad</font>

1030
00:36:35,150 --> 00:36:41,120
<font color="#CCCCCC">it is</font><font color="#E5E5E5"> truly bad but the recall would</font>

1031
00:36:37,670 --> 00:36:43,160
only be<font color="#CCCCCC"> 10% it missed 90% of the evil</font>

1032
00:36:41,120 --> 00:36:45,319
out<font color="#CCCCCC"> there and so these two scores are</font>

1033
00:36:43,160 --> 00:36:46,819
related<font color="#E5E5E5"> and really important and it's</font>

1034
00:36:45,320 --> 00:36:50,180
what goes<font color="#CCCCCC"> into what's called this</font><font color="#E5E5E5"> f1</font>

1035
00:36:46,820 --> 00:36:53,600
score<font color="#CCCCCC"> and with this model we had two</font>

1036
00:36:50,180 --> 00:36:57,169
<font color="#E5E5E5">percent false positive rate so I wonder</font>

1037
00:36:53,600 --> 00:37:00,680
<font color="#E5E5E5">if we can do better</font><font color="#CCCCCC"> so Lee and I asked</font>

1038
00:36:57,170 --> 00:37:03,350
this question<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we figured that we</font>

1039
00:37:00,680 --> 00:37:05,480
<font color="#CCCCCC">could so Power Cell</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a language</font><font color="#E5E5E5"> it</font>

1040
00:37:03,350 --> 00:37:06,529
knows how to<font color="#E5E5E5"> interpret our</font><font color="#CCCCCC"> shell</font><font color="#E5E5E5"> code</font>

1041
00:37:05,480 --> 00:37:09,170
and so as you<font color="#E5E5E5"> can see here in this</font>

1042
00:37:06,530 --> 00:37:11,090
command<font color="#E5E5E5"> power shell can tokenize it and</font>

1043
00:37:09,170 --> 00:37:13,640
say yep get<font color="#CCCCCC"> command this</font><font color="#E5E5E5"> is called a</font>

1044
00:37:11,090 --> 00:37:16,520
generic token<font color="#E5E5E5"> the name is a parameter</font>

1045
00:37:13,640 --> 00:37:18,379
<font color="#E5E5E5">left</font><font color="#CCCCCC"> parentheses the format operator</font><font color="#E5E5E5"> etc</font>

1046
00:37:16,520 --> 00:37:20,030
but what power<font color="#E5E5E5"> shall also knows and what</font>

1047
00:37:18,380 --> 00:37:22,610
became available in<font color="#CCCCCC"> powershell</font><font color="#E5E5E5"> 3 and</font>

1048
00:37:20,030 --> 00:37:24,920
later<font color="#E5E5E5"> is the relationship of each of</font>

1049
00:37:22,610 --> 00:37:28,490
these into a tree<font color="#E5E5E5"> which is called the</font>

1050
00:37:24,920 --> 00:37:29,870
abstract<font color="#E5E5E5"> syntax tree or AST</font><font color="#CCCCCC"> and so now</font>

1051
00:37:28,490 --> 00:37:31,279
we not<font color="#E5E5E5"> only know what are all the types</font>

1052
00:37:29,870 --> 00:37:33,109
we<font color="#E5E5E5"> also know</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> relationship to each</font>

1053
00:37:31,280 --> 00:37:35,330
other<font color="#CCCCCC"> so not</font><font color="#E5E5E5"> only do we know that</font><font color="#CCCCCC"> this</font>

1054
00:37:33,110 --> 00:37:36,560
is an array<font color="#CCCCCC"> of a thousand characters but</font>

1055
00:37:35,330 --> 00:37:37,940
<font color="#E5E5E5">we also know what every one of those</font>

1056
00:37:36,560 --> 00:37:40,970
characters<font color="#E5E5E5"> is and if one of</font><font color="#CCCCCC"> those is</font>

1057
00:37:37,940 --> 00:37:42,980
<font color="#E5E5E5">also another array and how they're how</font>

1058
00:37:40,970 --> 00:37:46,370
everything correlates back to the

1059
00:37:42,980 --> 00:37:48,380
overall script<font color="#E5E5E5"> I really find an easy way</font>

1060
00:37:46,370 --> 00:37:49,220
<font color="#CCCCCC">to explore AST is through</font><font color="#E5E5E5"> this ast</font>

1061
00:37:48,380 --> 00:37:50,780
Explorer

1062
00:37:49,220 --> 00:37:53,538
which you can just<font color="#E5E5E5"> run the very top</font>

1063
00:37:50,780 --> 00:37:55,490
install module show<font color="#CCCCCC"> PSA st and then i'll</font>

1064
00:37:53,539 --> 00:37:56,750
grab<font color="#CCCCCC"> it from</font><font color="#E5E5E5"> the powershell gallery it's</font>

1065
00:37:55,490 --> 00:38:00,558
just a nice way<font color="#CCCCCC"> to kind</font><font color="#E5E5E5"> of explore</font>

1066
00:37:56,750 --> 00:38:02,510
what's there<font color="#CCCCCC"> so what we did was said you</font>

1067
00:38:00,559 --> 00:38:04,520
know what instead of just<font color="#CCCCCC"> getting data</font>

1068
00:38:02,510 --> 00:38:07,579
points<font color="#E5E5E5"> from character frequency analysis</font>

1069
00:38:04,520 --> 00:38:09,380
what if we<font color="#E5E5E5"> got like a lot more so we did</font>

1070
00:38:07,579 --> 00:38:11,059
is we<font color="#E5E5E5"> pulled for any input</font><font color="#CCCCCC"> powershell</font>

1071
00:38:09,380 --> 00:38:12,470
<font color="#E5E5E5">commander script</font><font color="#CCCCCC"> first we look at</font><font color="#E5E5E5"> the</font>

1072
00:38:11,059 --> 00:38:15,440
distribution<font color="#CCCCCC"> of aft types</font>

1073
00:38:12,470 --> 00:38:16,669
what percentage<font color="#CCCCCC"> variables are there in</font>

1074
00:38:15,440 --> 00:38:18,680
this<font color="#E5E5E5"> entire script and what percentage</font>

1075
00:38:16,670 --> 00:38:20,180
<font color="#E5E5E5">of the entire script is variables so for</font>

1076
00:38:18,680 --> 00:38:21,890
<font color="#CCCCCC">every one of these we have a count and a</font>

1077
00:38:20,180 --> 00:38:23,930
percentage<font color="#E5E5E5"> so how many variables</font>

1078
00:38:21,890 --> 00:38:25,819
<font color="#E5E5E5">commandlets are raised</font><font color="#CCCCCC"> if your entire</font>

1079
00:38:23,930 --> 00:38:27,500
script<font color="#E5E5E5"> is you know hundred thousand</font>

1080
00:38:25,819 --> 00:38:30,020
characters<font color="#E5E5E5"> and</font><font color="#CCCCCC"> 99 percent script is a</font>

1081
00:38:27,500 --> 00:38:31,970
single array<font color="#E5E5E5"> that's pretty weird</font>

1082
00:38:30,020 --> 00:38:34,160
<font color="#E5E5E5">and so all these kinds of</font><font color="#CCCCCC"> things we</font>

1083
00:38:31,970 --> 00:38:35,990
weren't<font color="#E5E5E5"> specifically looking to say this</font>

1084
00:38:34,160 --> 00:38:38,058
is a threshold<font color="#E5E5E5"> we think is bad</font><font color="#CCCCCC"> we are</font>

1085
00:38:35,990 --> 00:38:40,308
purely<font color="#E5E5E5"> just saying give me the features</font>

1086
00:38:38,059 --> 00:38:41,780
extract as<font color="#E5E5E5"> much as we possibly can</font><font color="#CCCCCC"> we</font>

1087
00:38:40,309 --> 00:38:43,460
<font color="#E5E5E5">looked for the distribution of operators</font>

1088
00:38:41,780 --> 00:38:45,920
like how<font color="#CCCCCC"> many assignment operators</font>

1089
00:38:43,460 --> 00:38:48,049
binary operators unary operators etc

1090
00:38:45,920 --> 00:38:50,270
<font color="#E5E5E5">look at a</font><font color="#CCCCCC"> race size</font><font color="#E5E5E5"> range it's again a</font>

1091
00:38:48,049 --> 00:38:52,490
radius of<font color="#CCCCCC"> one to ten characters that's</font>

1092
00:38:50,270 --> 00:38:54,980
interesting what<font color="#CCCCCC"> about 5000 that's a bit</font>

1093
00:38:52,490 --> 00:38:57,259
more interesting<font color="#E5E5E5"> and then for each</font><font color="#CCCCCC"> one</font>

1094
00:38:54,980 --> 00:38:59,180
of<font color="#E5E5E5"> these for the character distribution</font>

1095
00:38:57,260 --> 00:39:01,099
stuff that that<font color="#CCCCCC"> Li did last year</font><font color="#E5E5E5"> he just</font>

1096
00:38:59,180 --> 00:39:02,598
took<font color="#CCCCCC"> the entire</font><font color="#E5E5E5"> script well that gives</font>

1097
00:39:01,099 --> 00:39:04,789
an attackers a huge window just to<font color="#E5E5E5"> pad a</font>

1098
00:39:02,599 --> 00:39:06,829
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> stuff in there to throw off your</font>

1099
00:39:04,789 --> 00:39:09,109
detection<font color="#CCCCCC"> but we're actually doing this</font>

1100
00:39:06,829 --> 00:39:10,970
<font color="#E5E5E5">per type so we'll take all the strings</font>

1101
00:39:09,109 --> 00:39:13,250
<font color="#E5E5E5">and do character frequency analysis all</font>

1102
00:39:10,970 --> 00:39:14,959
the commands all the functions<font color="#E5E5E5"> all the</font>

1103
00:39:13,250 --> 00:39:16,760
comments<font color="#CCCCCC"> etc and we do way more than</font>

1104
00:39:14,960 --> 00:39:19,160
<font color="#CCCCCC">just frequency analysis we also look for</font>

1105
00:39:16,760 --> 00:39:22,760
entropy<font color="#E5E5E5"> we look for length</font><font color="#CCCCCC"> for all those</font>

1106
00:39:19,160 --> 00:39:24,410
the min<font color="#CCCCCC"> max</font><font color="#E5E5E5"> average median mode range we</font>

1107
00:39:22,760 --> 00:39:27,049
look for white<font color="#E5E5E5"> space density character</font>

1108
00:39:24,410 --> 00:39:28,879
casing all that stuff<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we ended up</font>

1109
00:39:27,049 --> 00:39:32,509
<font color="#E5E5E5">with is for any input command or script</font>

1110
00:39:28,880 --> 00:39:33,980
<font color="#E5E5E5">we have almost 5000 features which we</font>

1111
00:39:32,510 --> 00:39:36,559
were really<font color="#E5E5E5"> excited about first and then</font>

1112
00:39:33,980 --> 00:39:38,210
thought<font color="#CCCCCC"> well how do we deal with 5000</font>

1113
00:39:36,559 --> 00:39:39,890
features what how do we actually<font color="#E5E5E5"> have</font>

1114
00:39:38,210 --> 00:39:43,369
<font color="#E5E5E5">this help us find off you</font><font color="#CCCCCC"> stated</font>

1115
00:39:39,890 --> 00:39:46,279
<font color="#E5E5E5">PowerShell so what we do is something</font>

1116
00:39:43,369 --> 00:39:48,799
like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have for every</font><font color="#CCCCCC"> PowerShell</font>

1117
00:39:46,279 --> 00:39:51,650
script we extract<font color="#CCCCCC"> 5000 features and then</font>

1118
00:39:48,799 --> 00:39:52,880
we also would like<font color="#CCCCCC"> to have another</font><font color="#E5E5E5"> list</font>

1119
00:39:51,650 --> 00:39:53,869
to say how important<font color="#CCCCCC"> their</font><font color="#E5E5E5"> each of these</font>

1120
00:39:52,880 --> 00:39:55,549
features<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> these are more</font>

1121
00:39:53,869 --> 00:39:57,230
important<font color="#E5E5E5"> than others that's</font><font color="#CCCCCC"> why</font><font color="#E5E5E5"> you see</font>

1122
00:39:55,549 --> 00:39:59,630
up here we basically<font color="#E5E5E5"> have these weights</font>

1123
00:39:57,230 --> 00:40:02,029
<font color="#CCCCCC">are this weighted vectors what the</font>

1124
00:39:59,630 --> 00:40:03,200
<font color="#E5E5E5">information retrieval community calls it</font>

1125
00:40:02,029 --> 00:40:04,880
however figuring

1126
00:40:03,200 --> 00:40:07,098
which of these features are more

1127
00:40:04,880 --> 00:40:08,210
important<font color="#E5E5E5"> than others</font><font color="#CCCCCC"> how do we do that</font>

1128
00:40:07,099 --> 00:40:09,920
that's not something<font color="#E5E5E5"> me and</font><font color="#CCCCCC"> Lee just</font>

1129
00:40:08,210 --> 00:40:12,260
<font color="#E5E5E5">figured out and tuned every single one</font>

1130
00:40:09,920 --> 00:40:14,300
of these<font color="#CCCCCC"> 5000 well there's a way</font><font color="#E5E5E5"> that we</font>

1131
00:40:12,260 --> 00:40:16,820
can be a<font color="#E5E5E5"> little smarter about</font><font color="#CCCCCC"> it for</font><font color="#E5E5E5"> all</font>

1132
00:40:14,300 --> 00:40:19,550
<font color="#E5E5E5">these</font><font color="#CCCCCC"> values we use what's called the</font>

1133
00:40:16,820 --> 00:40:20,630
the<font color="#CCCCCC"> logic function to basically instead</font>

1134
00:40:19,550 --> 00:40:22,400
<font color="#E5E5E5">of having these values that are like</font>

1135
00:40:20,630 --> 00:40:24,500
thousands or hundreds the logit function

1136
00:40:22,400 --> 00:40:26,420
<font color="#CCCCCC">cramps everything down</font><font color="#E5E5E5"> to say everyone</font>

1137
00:40:24,500 --> 00:40:27,670
is playing between<font color="#CCCCCC"> 0 & 1 and that's what</font>

1138
00:40:26,420 --> 00:40:30,230
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of brings all these points together</font>

1139
00:40:27,670 --> 00:40:32,390
<font color="#CCCCCC">and then we also use a linear</font><font color="#E5E5E5"> regression</font>

1140
00:40:30,230 --> 00:40:33,589
<font color="#E5E5E5">which is the weights how I was talking</font>

1141
00:40:32,390 --> 00:40:35,299
about basically taking every<font color="#E5E5E5"> single</font>

1142
00:40:33,589 --> 00:40:38,060
feature<font color="#E5E5E5"> multiplying that by its</font>

1143
00:40:35,300 --> 00:40:39,770
corresponding<font color="#CCCCCC"> weight and then adding all</font>

1144
00:40:38,060 --> 00:40:41,420
those together<font color="#E5E5E5"> and then there's a number</font>

1145
00:40:39,770 --> 00:40:43,040
<font color="#E5E5E5">when you add all those multiplied</font>

1146
00:40:41,420 --> 00:40:45,530
features together<font color="#CCCCCC"> and if it's above</font><font color="#E5E5E5"> this</font>

1147
00:40:43,040 --> 00:40:48,259
number<font color="#E5E5E5"> then it's bad</font><font color="#CCCCCC"> if it's below it</font>

1148
00:40:45,530 --> 00:40:49,700
then it's good and that was<font color="#E5E5E5"> the the bias</font>

1149
00:40:48,260 --> 00:40:51,440
that<font color="#CCCCCC"> you see at the very beginning</font><font color="#E5E5E5"> so</font>

1150
00:40:49,700 --> 00:40:53,000
basically when<font color="#CCCCCC"> it comes down to</font><font color="#E5E5E5"> it if</font>

1151
00:40:51,440 --> 00:40:55,849
the result of all these<font color="#CCCCCC"> multiplications</font>

1152
00:40:53,000 --> 00:41:00,890
<font color="#E5E5E5">is 1 it's off</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> skated if it's less</font>

1153
00:40:55,849 --> 00:41:02,359
<font color="#CCCCCC">than that</font><font color="#E5E5E5"> it's not off you skated so all</font>

1154
00:41:00,890 --> 00:41:05,480
these features<font color="#E5E5E5"> the way that we decide</font>

1155
00:41:02,359 --> 00:41:08,210
the weight of all<font color="#E5E5E5"> these features</font><font color="#CCCCCC"> is</font>

1156
00:41:05,480 --> 00:41:09,740
through this basically we run we take

1157
00:41:08,210 --> 00:41:11,420
our<font color="#E5E5E5"> label data set this is where that</font>

1158
00:41:09,740 --> 00:41:13,040
<font color="#E5E5E5">comes</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> play and</font><font color="#E5E5E5"> we run it</font>

1159
00:41:11,420 --> 00:41:16,040
through<font color="#E5E5E5"> all these feature extractions</font>

1160
00:41:13,040 --> 00:41:17,180
<font color="#CCCCCC">and run it against all these at the</font>

1161
00:41:16,040 --> 00:41:20,029
beginning<font color="#CCCCCC"> all the</font><font color="#E5E5E5"> weights for the exact</font>

1162
00:41:17,180 --> 00:41:21,980
<font color="#E5E5E5">same and then at the end for every</font>

1163
00:41:20,030 --> 00:41:23,359
single<font color="#E5E5E5"> run it'll say hey was I correct</font>

1164
00:41:21,980 --> 00:41:25,520
or<font color="#E5E5E5"> not because member we've labeled this</font>

1165
00:41:23,359 --> 00:41:27,529
data<font color="#E5E5E5"> and if it's correct everything's</font>

1166
00:41:25,520 --> 00:41:29,270
good<font color="#CCCCCC"> if it's</font><font color="#E5E5E5"> incorrect if it said hey</font>

1167
00:41:27,530 --> 00:41:30,530
you're off you skated but it's not then

1168
00:41:29,270 --> 00:41:32,750
what it<font color="#CCCCCC"> does</font><font color="#E5E5E5"> is it says</font><font color="#CCCCCC"> okay which</font>

1169
00:41:30,530 --> 00:41:34,339
weights were the<font color="#CCCCCC"> wrongest</font>

1170
00:41:32,750 --> 00:41:36,170
well the weights<font color="#E5E5E5"> that contributed most</font>

1171
00:41:34,339 --> 00:41:38,180
heavily to this we're gonna tune those

1172
00:41:36,170 --> 00:41:40,220
down the most<font color="#E5E5E5"> and the weights that were</font>

1173
00:41:38,180 --> 00:41:42,049
the least we're gonna<font color="#E5E5E5"> tune those down</font>

1174
00:41:40,220 --> 00:41:43,730
the very least<font color="#E5E5E5"> and so you go through</font>

1175
00:41:42,050 --> 00:41:45,170
thousands and thousands of iterations of

1176
00:41:43,730 --> 00:41:46,460
this<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> is figuring out</font>

1177
00:41:45,170 --> 00:41:50,210
which weights are more important<font color="#E5E5E5"> than</font>

1178
00:41:46,460 --> 00:41:53,450
others and at the end you get<font color="#CCCCCC"> 5,000</font>

1179
00:41:50,210 --> 00:41:56,000
weights one for each one<font color="#CCCCCC"> so now does</font>

1180
00:41:53,450 --> 00:41:57,470
<font color="#E5E5E5">this work well we're pretty excited with</font>

1181
00:41:56,000 --> 00:41:59,030
these<font color="#CCCCCC"> results with this</font><font color="#E5E5E5"> linear</font>

1182
00:41:57,470 --> 00:42:02,529
regression<font color="#E5E5E5"> and gradient descent what we</font>

1183
00:41:59,030 --> 00:42:08,300
got is<font color="#CCCCCC"> 96% precision</font>

1184
00:42:02,530 --> 00:42:10,160
<font color="#CCCCCC">94% recall</font><font color="#E5E5E5"> and false positives or</font><font color="#CCCCCC"> 1%</font><font color="#E5E5E5"> so</font>

1185
00:42:08,300 --> 00:42:12,770
compared<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the character analysis alone</font>

1186
00:42:10,160 --> 00:42:15,920
<font color="#E5E5E5">we just increased our</font><font color="#CCCCCC"> chances of</font><font color="#E5E5E5"> finding</font>

1187
00:42:12,770 --> 00:42:17,270
<font color="#CCCCCC">obviated content by</font><font color="#E5E5E5"> 10 times and we cut</font>

1188
00:42:15,920 --> 00:42:21,440
in half<font color="#CCCCCC"> for false</font><font color="#E5E5E5"> positives</font>

1189
00:42:17,270 --> 00:42:23,320
this is really exciting<font color="#CCCCCC"> stuff for us so</font>

1190
00:42:21,440 --> 00:42:25,310
another thing<font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep in</font><font color="#CCCCCC"> mind is that</font>

1191
00:42:23,320 --> 00:42:26,270
<font color="#E5E5E5">sometimes you</font><font color="#CCCCCC"> may</font><font color="#E5E5E5"> be interested in</font>

1192
00:42:25,310 --> 00:42:28,490
<font color="#E5E5E5">casting a wider net</font>

1193
00:42:26,270 --> 00:42:30,320
<font color="#E5E5E5">maybe</font><font color="#CCCCCC"> there's stuff</font><font color="#E5E5E5"> that is</font><font color="#CCCCCC"> not as off</font>

1194
00:42:28,490 --> 00:42:31,459
you skated as you'd like<font color="#CCCCCC"> to know right</font>

1195
00:42:30,320 --> 00:42:34,310
off<font color="#E5E5E5"> the</font><font color="#CCCCCC"> bat but it's still just like</font>

1196
00:42:31,460 --> 00:42:36,170
<font color="#E5E5E5">sketchy so for example this thing on the</font>

1197
00:42:34,310 --> 00:42:38,060
<font color="#CCCCCC">left obviously this is not good news</font>

1198
00:42:36,170 --> 00:42:40,610
all special<font color="#E5E5E5"> characters that's crazy</font><font color="#CCCCCC"> but</font>

1199
00:42:38,060 --> 00:42:42,950
<font color="#E5E5E5">on the right</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know like maybe like</font>

1200
00:42:40,610 --> 00:42:44,750
there's using those deaf the -<font color="#E5E5E5"> f</font><font color="#CCCCCC"> former</font>

1201
00:42:42,950 --> 00:42:46,640
<font color="#E5E5E5">operators</font><font color="#CCCCCC"> maybe if I had the world's</font>

1202
00:42:44,750 --> 00:42:48,440
best intern I would like that intern to

1203
00:42:46,640 --> 00:42:49,879
say hey you<font color="#CCCCCC"> just like</font><font color="#E5E5E5"> take a second look</font>

1204
00:42:48,440 --> 00:42:52,370
<font color="#E5E5E5">at this one this looks kind of weird and</font>

1205
00:42:49,880 --> 00:42:54,920
so we<font color="#E5E5E5"> basically included sketchy</font><font color="#CCCCCC"> stuff</font>

1206
00:42:52,370 --> 00:42:57,049
into a separate<font color="#E5E5E5"> training and in the tool</font>

1207
00:42:54,920 --> 00:42:58,760
you<font color="#CCCCCC"> can actually define deep for like</font>

1208
00:42:57,050 --> 00:43:00,980
deep inspection and you'll get more

1209
00:42:58,760 --> 00:43:02,450
results<font color="#E5E5E5"> back</font><font color="#CCCCCC"> so you'll</font><font color="#E5E5E5"> have to look</font>

1210
00:43:00,980 --> 00:43:04,370
<font color="#E5E5E5">through more false</font><font color="#CCCCCC"> positives but if you</font>

1211
00:43:02,450 --> 00:43:06,350
want to cast a wider net<font color="#CCCCCC"> that's totally</font>

1212
00:43:04,370 --> 00:43:08,060
an option<font color="#E5E5E5"> there and and there's the</font>

1213
00:43:06,350 --> 00:43:09,770
sketchy column there of the results from

1214
00:43:08,060 --> 00:43:12,470
<font color="#E5E5E5">that</font><font color="#CCCCCC"> again the slides are</font><font color="#E5E5E5"> online</font><font color="#CCCCCC"> I'm</font>

1215
00:43:09,770 --> 00:43:15,470
gonna kind of keep pressing forward<font color="#CCCCCC"> Lee</font>

1216
00:43:12,470 --> 00:43:18,200
did look at<font color="#E5E5E5"> some other algorithms to use</font>

1217
00:43:15,470 --> 00:43:19,430
and he basically<font color="#CCCCCC"> just took all this CSV</font>

1218
00:43:18,200 --> 00:43:21,589
data<font color="#CCCCCC"> that we produced for all</font><font color="#E5E5E5"> these</font>

1219
00:43:19,430 --> 00:43:23,480
features<font color="#E5E5E5"> and</font><font color="#CCCCCC"> just threw</font><font color="#E5E5E5"> it up into Azure</font>

1220
00:43:21,590 --> 00:43:25,460
machine learning studio<font color="#E5E5E5"> and ran through</font>

1221
00:43:23,480 --> 00:43:27,380
<font color="#CCCCCC">a couple</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> ones</font><font color="#E5E5E5"> the one that came</font>

1222
00:43:25,460 --> 00:43:29,930
the closest was the boosted<font color="#E5E5E5"> this is the</font>

1223
00:43:27,380 --> 00:43:31,430
boosted decision tree algorithm but<font color="#E5E5E5"> and</font>

1224
00:43:29,930 --> 00:43:33,919
the end<font color="#E5E5E5"> the gradient descent</font><font color="#CCCCCC"> that we</font>

1225
00:43:31,430 --> 00:43:35,390
used was actually the very best<font color="#E5E5E5"> and so</font>

1226
00:43:33,920 --> 00:43:37,340
it was kind of cool after the fact to

1227
00:43:35,390 --> 00:43:44,690
use some of<font color="#CCCCCC"> these tools</font><font color="#E5E5E5"> to validate</font><font color="#CCCCCC"> our</font>

1228
00:43:37,340 --> 00:43:46,940
manual findings so demo time so anyone

1229
00:43:44,690 --> 00:43:49,940
<font color="#E5E5E5">who knows me knows</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I love ASCII art</font>

1230
00:43:46,940 --> 00:43:52,400
and this function<font color="#E5E5E5"> has nothing to do with</font>

1231
00:43:49,940 --> 00:43:53,900
<font color="#E5E5E5">finding evil it's literally just my</font>

1232
00:43:52,400 --> 00:43:56,030
chance to put<font color="#CCCCCC"> some ASCII art into</font><font color="#E5E5E5"> the</font>

1233
00:43:53,900 --> 00:43:57,410
project and<font color="#CCCCCC"> so it's just</font><font color="#E5E5E5"> looking at a</font>

1234
00:43:56,030 --> 00:43:59,510
command<font color="#E5E5E5"> at the top and then kind of</font>

1235
00:43:57,410 --> 00:44:02,420
showing<font color="#E5E5E5"> you</font><font color="#CCCCCC"> a sneak</font><font color="#E5E5E5"> peek of how deep we</font>

1236
00:43:59,510 --> 00:44:03,770
can go with extracting<font color="#CCCCCC"> these features</font><font color="#E5E5E5"> on</font>

1237
00:44:02,420 --> 00:44:05,540
average it<font color="#CCCCCC"> takes less</font><font color="#E5E5E5"> than 300</font>

1238
00:44:03,770 --> 00:44:07,130
milliseconds for any command or script

1239
00:44:05,540 --> 00:44:08,600
to extract all the features perform<font color="#E5E5E5"> that</font>

1240
00:44:07,130 --> 00:44:10,940
weighted multiplication and then decide

1241
00:44:08,600 --> 00:44:12,920
is it off you skated or not as you'll

1242
00:44:10,940 --> 00:44:14,570
<font color="#E5E5E5">see here it looks very very</font><font color="#CCCCCC"> similar to</font>

1243
00:44:12,920 --> 00:44:17,300
the invoke<font color="#E5E5E5"> off eustachian and cradle</font>

1244
00:44:14,570 --> 00:44:19,460
crafter<font color="#E5E5E5"> menus you can type tutorial</font>

1245
00:44:17,300 --> 00:44:21,260
which<font color="#E5E5E5"> is literally the</font><font color="#CCCCCC"> readme but it has</font>

1246
00:44:19,460 --> 00:44:23,930
<font color="#E5E5E5">really pretty colors so if you want to</font>

1247
00:44:21,260 --> 00:44:25,940
<font color="#E5E5E5">do that you can check</font><font color="#CCCCCC"> that out</font><font color="#E5E5E5"> fun facts</font>

1248
00:44:23,930 --> 00:44:27,710
again we spent a lot of time going

1249
00:44:25,940 --> 00:44:28,910
<font color="#E5E5E5">through a lot of data and there's some</font>

1250
00:44:27,710 --> 00:44:30,590
<font color="#E5E5E5">interesting things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you find</font><font color="#CCCCCC"> in</font>

1251
00:44:28,910 --> 00:44:31,040
<font color="#E5E5E5">there so we put some fun facts in there</font>

1252
00:44:30,590 --> 00:44:32,800
<font color="#E5E5E5">for you too</font>

1253
00:44:31,040 --> 00:44:36,350
<font color="#E5E5E5">check out nice little random fun fact</font>

1254
00:44:32,800 --> 00:44:37,820
<font color="#CCCCCC">also</font><font color="#E5E5E5"> since I love ASCII art when you</font>

1255
00:44:36,350 --> 00:44:39,259
look<font color="#CCCCCC"> through thousands</font><font color="#E5E5E5"> and thousands</font><font color="#CCCCCC"> and</font>

1256
00:44:37,820 --> 00:44:41,570
thousands of scripts<font color="#E5E5E5"> you find other</font>

1257
00:44:39,260 --> 00:44:43,340
<font color="#E5E5E5">people also like ASCII art so if you</font>

1258
00:44:41,570 --> 00:44:45,080
want<font color="#E5E5E5"> to see a random sampling of really</font>

1259
00:44:43,340 --> 00:44:47,420
interesting ASCII<font color="#E5E5E5"> art that we found just</font>

1260
00:44:45,080 --> 00:44:49,640
<font color="#E5E5E5">check that out</font><font color="#CCCCCC"> we can also look at a set</font>

1261
00:44:47,420 --> 00:44:51,350
of fun quotes and then<font color="#E5E5E5"> also credits</font><font color="#CCCCCC"> so</font>

1262
00:44:49,640 --> 00:44:52,490
again<font color="#E5E5E5"> every single github contributor</font>

1263
00:44:51,350 --> 00:44:54,500
that<font color="#E5E5E5"> has contributed a PowerShell</font>

1264
00:44:52,490 --> 00:44:55,850
project<font color="#E5E5E5"> as of a couple months ago your</font>

1265
00:44:54,500 --> 00:44:57,230
name is literally embedded in<font color="#E5E5E5"> this</font>

1266
00:44:55,850 --> 00:44:59,029
script and you can randomly look<font color="#E5E5E5"> at</font>

1267
00:44:57,230 --> 00:45:00,170
<font color="#E5E5E5">contributors we actually have a sub list</font>

1268
00:44:59,030 --> 00:45:02,330
of our<font color="#E5E5E5"> favorite names there's some</font>

1269
00:45:00,170 --> 00:45:03,950
<font color="#E5E5E5">really creative names out</font><font color="#CCCCCC"> there so again</font>

1270
00:45:02,330 --> 00:45:06,380
<font color="#E5E5E5">this has nothing to do with finding evil</font>

1271
00:45:03,950 --> 00:45:08,569
<font color="#E5E5E5">it's just</font><font color="#CCCCCC"> me expressing my creativity so</font>

1272
00:45:06,380 --> 00:45:10,250
if you don't care<font color="#CCCCCC"> about any of that</font>

1273
00:45:08,570 --> 00:45:12,950
then just<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> the function</font><font color="#CCCCCC"> called</font>

1274
00:45:10,250 --> 00:45:16,250
<font color="#E5E5E5">Revo Confiscation run one of these two</font>

1275
00:45:12,950 --> 00:45:19,220
<font color="#E5E5E5">functions the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> one is get our vo</font>

1276
00:45:16,250 --> 00:45:22,070
script block our vo is the prefix forget

1277
00:45:19,220 --> 00:45:23,299
Revo confiscation<font color="#E5E5E5"> but basically a lot of</font>

1278
00:45:22,070 --> 00:45:25,070
<font color="#E5E5E5">people</font><font color="#CCCCCC"> don't have a directory with</font>

1279
00:45:23,300 --> 00:45:26,390
<font color="#CCCCCC">400,000 powershell scripts sitting</font>

1280
00:45:25,070 --> 00:45:29,210
around and ideally you want<font color="#E5E5E5"> to know</font>

1281
00:45:26,390 --> 00:45:31,250
what's running<font color="#E5E5E5"> in my environment</font><font color="#CCCCCC"> so most</font>

1282
00:45:29,210 --> 00:45:32,660
<font color="#E5E5E5">people if they have powershell script</font>

1283
00:45:31,250 --> 00:45:34,700
block logging enabled<font color="#E5E5E5"> how do you</font>

1284
00:45:32,660 --> 00:45:36,049
<font color="#CCCCCC">actually extract those scripts from</font>

1285
00:45:34,700 --> 00:45:38,330
script<font color="#CCCCCC"> block logs</font><font color="#E5E5E5"> because when you have</font>

1286
00:45:36,050 --> 00:45:41,090
<font color="#E5E5E5">really long scripts they can be logged</font>

1287
00:45:38,330 --> 00:45:44,000
<font color="#E5E5E5">over tens or even hundreds</font><font color="#CCCCCC"> of different</font>

1288
00:45:41,090 --> 00:45:45,200
<font color="#CCCCCC">script block log entries so what we did</font>

1289
00:45:44,000 --> 00:45:47,030
is<font color="#CCCCCC"> we just</font><font color="#E5E5E5"> wrote this function to go</font>

1290
00:45:45,200 --> 00:45:48,649
through and you<font color="#CCCCCC"> can just query in memory</font>

1291
00:45:47,030 --> 00:45:51,440
get win event from<font color="#E5E5E5"> all your systems</font><font color="#CCCCCC"> or</font>

1292
00:45:48,650 --> 00:45:52,880
<font color="#CCCCCC">just look at raw EVT</font><font color="#E5E5E5"> x files pipe it</font>

1293
00:45:51,440 --> 00:45:55,520
<font color="#E5E5E5">into this function it will extract and</font>

1294
00:45:52,880 --> 00:45:57,620
reassemble<font color="#CCCCCC"> all the scripts for you so</font>

1295
00:45:55,520 --> 00:45:59,540
even if you<font color="#E5E5E5"> don't have</font><font color="#CCCCCC"> a sim</font><font color="#E5E5E5"> even have</font>

1296
00:45:57,620 --> 00:46:01,279
any of that<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> if you get</font><font color="#E5E5E5"> powershell</font>

1297
00:45:59,540 --> 00:46:03,620
<font color="#CCCCCC">5 out to</font><font color="#E5E5E5"> your systems enable that log</font>

1298
00:46:01,280 --> 00:46:06,020
then you can query it in memory<font color="#CCCCCC"> where</font>

1299
00:46:03,620 --> 00:46:07,310
<font color="#CCCCCC">the zero indexing cost anywhere and then</font>

1300
00:46:06,020 --> 00:46:09,320
just pipe it<font color="#CCCCCC"> into this</font><font color="#E5E5E5"> function it'll</font>

1301
00:46:07,310 --> 00:46:12,710
basically<font color="#E5E5E5"> dump out</font><font color="#CCCCCC"> all the</font><font color="#E5E5E5"> unique</font>

1302
00:46:09,320 --> 00:46:14,960
scripts that<font color="#CCCCCC"> you have so once you have</font>

1303
00:46:12,710 --> 00:46:17,150
<font color="#CCCCCC">that then brings</font><font color="#E5E5E5"> you to the second</font>

1304
00:46:14,960 --> 00:46:19,610
function<font color="#E5E5E5"> the real function which is</font>

1305
00:46:17,150 --> 00:46:22,100
measure<font color="#CCCCCC"> rvo obfuscation and that is that</font>

1306
00:46:19,610 --> 00:46:24,560
<font color="#E5E5E5">chewing through and determining off you</font>

1307
00:46:22,100 --> 00:46:26,120
skated versus not obfuscated as you can

1308
00:46:24,560 --> 00:46:28,070
see it's pretty<font color="#E5E5E5"> quick even with really</font>

1309
00:46:26,120 --> 00:46:29,450
large scripts<font color="#E5E5E5"> and again this is doing</font>

1310
00:46:28,070 --> 00:46:31,400
all the feature extraction if all those

1311
00:46:29,450 --> 00:46:33,589
<font color="#CCCCCC">5,000 features doing 5,000</font>

1312
00:46:31,400 --> 00:46:35,840
multiplications<font color="#E5E5E5"> adding them up seeing go</font>

1313
00:46:33,590 --> 00:46:37,790
or<font color="#E5E5E5"> no go and then the results this whole</font>

1314
00:46:35,840 --> 00:46:39,830
<font color="#CCCCCC">project</font><font color="#E5E5E5"> is done in formal powershell</font>

1315
00:46:37,790 --> 00:46:42,620
object-oriented stuff so everything<font color="#E5E5E5"> else</font>

1316
00:46:39,830 --> 00:46:44,460
comes back as objects all the the exact

1317
00:46:42,620 --> 00:46:46,470
script<font color="#E5E5E5"> that hit the hash of it is it off</font>

1318
00:46:44,460 --> 00:46:47,640
you skated how long it took to extract

1319
00:46:46,470 --> 00:46:49,980
the features how long it took to measure

1320
00:46:47,640 --> 00:46:54,060
the features and then all of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> 5,000</font>

1321
00:46:49,980 --> 00:46:56,040
features are all there<font color="#E5E5E5"> now as an</font>

1322
00:46:54,060 --> 00:46:57,869
operational guy<font color="#E5E5E5"> it was really important</font>

1323
00:46:56,040 --> 00:47:00,470
that<font color="#E5E5E5"> this not just be something</font><font color="#CCCCCC"> that</font>

1324
00:46:57,869 --> 00:47:02,609
researchers<font color="#E5E5E5"> can</font><font color="#CCCCCC"> use but that you as</font>

1325
00:47:00,470 --> 00:47:05,640
defenders on the<font color="#E5E5E5"> job can</font><font color="#CCCCCC"> take this back</font>

1326
00:47:02,609 --> 00:47:07,529
immediately<font color="#E5E5E5"> and use it today</font><font color="#CCCCCC"> so we did</font>

1327
00:47:05,640 --> 00:47:10,109
is we built<font color="#E5E5E5"> in some</font><font color="#CCCCCC"> pretty verbose are</font>

1328
00:47:07,530 --> 00:47:11,760
pretty robust<font color="#CCCCCC"> whitelisting so that you</font>

1329
00:47:10,109 --> 00:47:13,080
can<font color="#E5E5E5"> basically say okay as I go</font><font color="#CCCCCC"> through</font>

1330
00:47:11,760 --> 00:47:14,369
my environment<font color="#E5E5E5"> these scripts are</font><font color="#CCCCCC"> v is</font>

1331
00:47:13,080 --> 00:47:15,540
off you skated<font color="#E5E5E5"> yeah they actually look a</font>

1332
00:47:14,369 --> 00:47:17,099
little<font color="#E5E5E5"> sketchy but</font><font color="#CCCCCC"> I know they're good</font>

1333
00:47:15,540 --> 00:47:18,810
<font color="#E5E5E5">so</font><font color="#CCCCCC"> I must drag those</font><font color="#E5E5E5"> over into the</font>

1334
00:47:17,099 --> 00:47:20,040
<font color="#E5E5E5">whitelist folder and it will hash them</font>

1335
00:47:18,810 --> 00:47:22,140
<font color="#CCCCCC">and it will never alert you on that</font>

1336
00:47:20,040 --> 00:47:24,570
exact hash<font color="#E5E5E5"> again you can also whitelist</font>

1337
00:47:22,140 --> 00:47:27,060
by strings regex which<font color="#E5E5E5"> I would be</font>

1338
00:47:24,570 --> 00:47:28,950
caution caution<font color="#E5E5E5"> to you to just be</font>

1339
00:47:27,060 --> 00:47:30,210
<font color="#E5E5E5">careful what you</font><font color="#CCCCCC"> put in there but</font><font color="#E5E5E5"> again</font>

1340
00:47:28,950 --> 00:47:34,259
we wanted to make<font color="#E5E5E5"> it an</font><font color="#CCCCCC"> option for</font>

1341
00:47:30,210 --> 00:47:36,210
people<font color="#E5E5E5"> so with all that being</font><font color="#CCCCCC"> said</font>

1342
00:47:34,260 --> 00:47:38,310
there's a lot of crazy office<font color="#CCCCCC"> Gatien</font>

1343
00:47:36,210 --> 00:47:40,320
<font color="#E5E5E5">stuff out there but there are new ways</font>

1344
00:47:38,310 --> 00:47:41,940
<font color="#CCCCCC">to detect against it as a defender it's</font>

1345
00:47:40,320 --> 00:47:43,680
still very very<font color="#E5E5E5"> very important that we</font>

1346
00:47:41,940 --> 00:47:45,180
look<font color="#CCCCCC"> for</font><font color="#E5E5E5"> indicators of</font><font color="#CCCCCC"> compromise look</font>

1347
00:47:43,680 --> 00:47:48,240
for the non off you skate<font color="#E5E5E5"> stuff you know</font>

1348
00:47:45,180 --> 00:47:49,560
<font color="#E5E5E5">was bad</font><font color="#CCCCCC"> go download</font><font color="#E5E5E5"> Empire today and run</font>

1349
00:47:48,240 --> 00:47:51,330
it and see<font color="#E5E5E5"> what does this look</font><font color="#CCCCCC"> like by</font>

1350
00:47:49,560 --> 00:47:52,830
default<font color="#CCCCCC"> ifs kiddies are using this</font><font color="#E5E5E5"> I</font>

1351
00:47:51,330 --> 00:47:55,410
want<font color="#E5E5E5"> to be able to catch them</font>

1352
00:47:52,830 --> 00:47:56,759
cobalt strike<font color="#CCCCCC"> there's a lot of just</font>

1353
00:47:55,410 --> 00:47:58,529
awesome frameworks out<font color="#E5E5E5"> there that you</font>

1354
00:47:56,760 --> 00:48:00,119
can get<font color="#CCCCCC"> your hands on and start to I</font>

1355
00:47:58,530 --> 00:48:01,410
<font color="#E5E5E5">don't want to say</font><font color="#CCCCCC"> Sig but that's exactly</font>

1356
00:48:00,119 --> 00:48:04,050
<font color="#E5E5E5">what</font><font color="#CCCCCC"> you're doing because low-hanging</font>

1357
00:48:01,410 --> 00:48:05,580
fruit<font color="#E5E5E5"> is still fruit nonetheless then</font>

1358
00:48:04,050 --> 00:48:07,230
<font color="#E5E5E5">after you're feeling good about that</font>

1359
00:48:05,580 --> 00:48:08,730
look at the obfuscated stuff and see how

1360
00:48:07,230 --> 00:48:10,050
<font color="#E5E5E5">can i implement something</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> to</font>

1361
00:48:08,730 --> 00:48:12,270
<font color="#E5E5E5">look for</font><font color="#CCCCCC"> AA few skated scripts or</font>

1362
00:48:10,050 --> 00:48:13,589
<font color="#E5E5E5">command-line arguments a couple of the</font>

1363
00:48:12,270 --> 00:48:15,150
<font color="#E5E5E5">references up here I mentioned a few</font>

1364
00:48:13,589 --> 00:48:17,220
<font color="#CCCCCC">these before if you've never read</font>

1365
00:48:15,150 --> 00:48:18,780
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> hearts the blue team it's a</font>

1366
00:48:17,220 --> 00:48:21,330
blog and white paper by<font color="#E5E5E5"> the PowerShell</font>

1367
00:48:18,780 --> 00:48:25,410
team it is<font color="#CCCCCC"> a phenomenal resource</font><font color="#E5E5E5"> that is</font>

1368
00:48:21,330 --> 00:48:27,509
continually<font color="#CCCCCC"> being updated</font><font color="#E5E5E5"> so yeah that's</font>

1369
00:48:25,410 --> 00:48:28,890
that's<font color="#E5E5E5"> the end</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> my talk thank you</font><font color="#CCCCCC"> very</font>

1370
00:48:27,510 --> 00:48:35,080
<font color="#E5E5E5">much</font>

1371
00:48:28,890 --> 00:48:37,460
[Applause]

1372
00:48:35,080 --> 00:48:38,960
it and I did want<font color="#CCCCCC"> to emphasize one more</font>

1373
00:48:37,460 --> 00:48:40,520
<font color="#E5E5E5">time really quickly Holmes I'm really</font>

1374
00:48:38,960 --> 00:48:43,130
sad he couldn't<font color="#CCCCCC"> be here but the</font><font color="#E5E5E5"> guy's</font>

1375
00:48:40,520 --> 00:48:44,720
awesome<font color="#CCCCCC"> and this this</font><font color="#E5E5E5"> project would not</font>

1376
00:48:43,130 --> 00:48:46,930
<font color="#E5E5E5">have been anything without him so a</font>

1377
00:48:44,720 --> 00:48:51,009
really<font color="#CCCCCC"> a big shout-out to</font><font color="#E5E5E5"> Leon this is</font>

1378
00:48:46,930 --> 00:48:53,930
<font color="#CCCCCC">he's he's mostly responsible for</font>

1379
00:48:51,010 --> 00:48:56,180
<font color="#CCCCCC">Marshall</font><font color="#E5E5E5"> yeah yep one of the original</font>

1380
00:48:53,930 --> 00:48:58,069
PowerShell<font color="#E5E5E5"> developers so he knows it</font>

1381
00:48:56,180 --> 00:49:01,060
pretty well<font color="#E5E5E5"> basically the reason why</font>

1382
00:48:58,070 --> 00:49:04,010
this is a<font color="#E5E5E5"> problem from</font><font color="#CCCCCC"> the beginning but</font>

1383
00:49:01,060 --> 00:49:05,660
we we<font color="#E5E5E5"> have we started with a very</font>

1384
00:49:04,010 --> 00:49:08,780
love-hate relationship but we've hugged

1385
00:49:05,660 --> 00:49:13,970
it out and and we're on<font color="#CCCCCC"> good terms so so</font>

1386
00:49:08,780 --> 00:49:16,460
yeah yeah is<font color="#E5E5E5"> it yeah</font><font color="#CCCCCC"> something about if</font>

1387
00:49:13,970 --> 00:49:18,200
you're<font color="#E5E5E5"> not part of the problem good</font>

1388
00:49:16,460 --> 00:49:21,050
<font color="#E5E5E5">money to be made in prolonging the</font>

1389
00:49:18,200 --> 00:49:22,520
problem was<font color="#E5E5E5"> I he has no</font><font color="#CCCCCC"> sympathy when</font><font color="#E5E5E5"> I</font>

1390
00:49:21,050 --> 00:49:24,230
tell him<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> Leo I</font><font color="#CCCCCC"> just spent the past</font>

1391
00:49:22,520 --> 00:49:25,520
three hours decoding all this stuff he's

1392
00:49:24,230 --> 00:49:26,360
<font color="#CCCCCC">like do</font><font color="#E5E5E5"> you make your bed</font><font color="#CCCCCC"> you lay in it</font>

1393
00:49:25,520 --> 00:49:30,980
<font color="#E5E5E5">you know</font>

1394
00:49:26,360 --> 00:49:35,690
well fair point fair<font color="#E5E5E5"> point but you know</font>

1395
00:49:30,980 --> 00:49:42,620
and<font color="#E5E5E5"> all right questions from the</font>

1396
00:49:35,690 --> 00:49:44,180
audience regarding<font color="#CCCCCC"> character</font>

1397
00:49:42,620 --> 00:49:47,080
<font color="#E5E5E5">distribution I think it could be quite</font>

1398
00:49:44,180 --> 00:49:49,700
easily compensated for by<font color="#E5E5E5"> just naming</font>

1399
00:49:47,080 --> 00:49:52,580
any variable with a proper distribution

1400
00:49:49,700 --> 00:49:54,470
<font color="#E5E5E5">yes would cover the script also the same</font>

1401
00:49:52,580 --> 00:49:56,360
thing<font color="#E5E5E5"> for objects like if you too many</font>

1402
00:49:54,470 --> 00:49:57,980
variables put in<font color="#CCCCCC"> some</font><font color="#E5E5E5"> other stuff</font><font color="#CCCCCC"> there</font>

1403
00:49:56,360 --> 00:49:58,820
to get<font color="#E5E5E5"> skipped to have a normal</font>

1404
00:49:57,980 --> 00:50:03,170
<font color="#CCCCCC">distribution</font>

1405
00:49:58,820 --> 00:50:05,120
yeah<font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> how we do detect</font><font color="#E5E5E5"> that yeah</font>

1406
00:50:03,170 --> 00:50:07,460
<font color="#CCCCCC">that's a</font><font color="#E5E5E5"> really good point so yeah it as</font>

1407
00:50:05,120 --> 00:50:09,170
an attacker<font color="#E5E5E5"> I don't have to use</font>

1408
00:50:07,460 --> 00:50:10,670
randomized variable names randomized

1409
00:50:09,170 --> 00:50:13,070
<font color="#E5E5E5">casing I can make it</font><font color="#CCCCCC"> look as legit as</font>

1410
00:50:10,670 --> 00:50:14,990
possible and the challenge<font color="#E5E5E5"> there is to</font>

1411
00:50:13,070 --> 00:50:16,670
evade this<font color="#CCCCCC"> detection is you're gonna</font>

1412
00:50:14,990 --> 00:50:18,830
have to make every<font color="#CCCCCC"> single thing look</font>

1413
00:50:16,670 --> 00:50:21,520
legit even the percentages of<font color="#E5E5E5"> those</font>

1414
00:50:18,830 --> 00:50:23,990
things so<font color="#E5E5E5"> again let's say that you have</font>

1415
00:50:21,520 --> 00:50:25,550
90<font color="#CCCCCC"> percent of your script is variables</font>

1416
00:50:23,990 --> 00:50:27,200
<font color="#E5E5E5">even though they're named normal stuff</font>

1417
00:50:25,550 --> 00:50:28,370
that's a lot<font color="#CCCCCC"> of your script</font><font color="#E5E5E5"> to just be</font>

1418
00:50:27,200 --> 00:50:29,689
variables and so you basically have<font color="#E5E5E5"> to</font>

1419
00:50:28,370 --> 00:50:33,319
<font color="#CCCCCC">evade every single one</font><font color="#E5E5E5"> of these is it</font>

1420
00:50:29,690 --> 00:50:35,960
possible to evade this<font color="#E5E5E5"> absolutely the</font>

1421
00:50:33,320 --> 00:50:38,000
ways to counter<font color="#E5E5E5"> that is to basically</font>

1422
00:50:35,960 --> 00:50:39,590
<font color="#E5E5E5">produce samples that evade it and then</font>

1423
00:50:38,000 --> 00:50:41,090
throw those<font color="#E5E5E5"> into the labeled bucket and</font>

1424
00:50:39,590 --> 00:50:42,560
then<font color="#CCCCCC"> spend all</font><font color="#E5E5E5"> of five minutes free</font>

1425
00:50:41,090 --> 00:50:44,510
running the learning and he<font color="#E5E5E5"> produced a</font>

1426
00:50:42,560 --> 00:50:46,970
slightly modified vector and then plug

1427
00:50:44,510 --> 00:50:48,549
<font color="#CCCCCC">that right in and so it's a really good</font>

1428
00:50:46,970 --> 00:50:49,808
<font color="#CCCCCC">question and honestly</font><font color="#E5E5E5"> one of the big</font>

1429
00:50:48,549 --> 00:50:51,849
reasons that we<font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> all this</font>

1430
00:50:49,809 --> 00:50:53,319
including<font color="#CCCCCC"> the corpus and everything</font><font color="#E5E5E5"> so</font>

1431
00:50:51,849 --> 00:50:54,910
<font color="#E5E5E5">that anyone can</font><font color="#CCCCCC"> take it and actually</font>

1432
00:50:53,319 --> 00:50:56,469
make<font color="#E5E5E5"> those modifications even say hey</font>

1433
00:50:54,910 --> 00:50:58,509
like I<font color="#E5E5E5"> found this new way that</font><font color="#CCCCCC"> you can</font>

1434
00:50:56,469 --> 00:51:00,699
<font color="#E5E5E5">actually have this stuff and it actually</font>

1435
00:50:58,509 --> 00:51:02,369
<font color="#E5E5E5">gets by and then you can actually feed</font>

1436
00:51:00,699 --> 00:51:05,140
that right<font color="#CCCCCC"> into the the loop and then</font>

1437
00:51:02,369 --> 00:51:07,359
adjust<font color="#E5E5E5"> that wait until</font><font color="#CCCCCC"> it detects it</font><font color="#E5E5E5"> in</font>

1438
00:51:05,140 --> 00:51:09,368
your<font color="#CCCCCC"> environment so we're always open to</font>

1439
00:51:07,359 --> 00:51:11,140
<font color="#E5E5E5">people and pull requests and ideas and</font>

1440
00:51:09,369 --> 00:51:12,579
<font color="#E5E5E5">stuff like that but we</font><font color="#CCCCCC"> really want it to</font>

1441
00:51:11,140 --> 00:51:13,989
<font color="#E5E5E5">be</font><font color="#CCCCCC"> a community</font><font color="#E5E5E5"> project so that people</font>

1442
00:51:12,579 --> 00:51:17,859
can find<font color="#E5E5E5"> these ways around it and then</font>

1443
00:51:13,989 --> 00:51:20,979
and then update<font color="#CCCCCC"> it but</font><font color="#E5E5E5"> I like the</font><font color="#CCCCCC"> way</font>

1444
00:51:17,859 --> 00:51:22,808
you're thinking<font color="#E5E5E5"> though</font><font color="#CCCCCC"> I thought</font><font color="#E5E5E5"> it was</font>

1445
00:51:20,979 --> 00:51:25,629
<font color="#E5E5E5">quite</font><font color="#CCCCCC"> obvious that</font><font color="#E5E5E5"> you start by with the</font>

1446
00:51:22,809 --> 00:51:28,660
cradle craft or thing and then you do

1447
00:51:25,630 --> 00:51:31,660
the remote obvious keishon at the

1448
00:51:28,660 --> 00:51:33,219
obfuscation<font color="#CCCCCC"> window isn't it</font><font color="#E5E5E5"> natural that</font>

1449
00:51:31,660 --> 00:51:34,328
<font color="#E5E5E5">the next thing the</font><font color="#CCCCCC"> next tool</font><font color="#E5E5E5"> you're</font>

1450
00:51:33,219 --> 00:51:37,029
gonna make is something<font color="#CCCCCC"> that</font>

1451
00:51:34,329 --> 00:51:39,549
automatically makes<font color="#E5E5E5"> obfuscated code look</font>

1452
00:51:37,029 --> 00:51:44,140
legit<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that you can do talk about that</font>

1453
00:51:39,549 --> 00:51:45,579
<font color="#E5E5E5">yeah and then you can do people most</font>

1454
00:51:44,140 --> 00:51:47,828
<font color="#CCCCCC">people I talk to</font><font color="#E5E5E5"> when they see the name</font>

1455
00:51:45,579 --> 00:51:49,359
Revo<font color="#E5E5E5"> confiscation they ask me oh I'm so</font>

1456
00:51:47,829 --> 00:51:50,769
glad you made<font color="#E5E5E5"> something to do</font><font color="#CCCCCC"> if you</font>

1457
00:51:49,359 --> 00:51:54,429
skate all this stuff and I'm<font color="#CCCCCC"> really</font>

1458
00:51:50,769 --> 00:51:56,919
sorry that's not<font color="#CCCCCC"> what this does and it</font>

1459
00:51:54,429 --> 00:51:58,359
it's a hard problem it really<font color="#CCCCCC"> is the</font>

1460
00:51:56,920 --> 00:51:59,890
<font color="#E5E5E5">best</font><font color="#CCCCCC"> deal few skater out</font><font color="#E5E5E5"> there is</font>

1461
00:51:58,359 --> 00:52:01,150
PowerShell logging<font color="#E5E5E5"> because it's going to</font>

1462
00:51:59,890 --> 00:52:03,519
<font color="#E5E5E5">remove everything</font><font color="#CCCCCC"> except for</font><font color="#E5E5E5"> that last</font>

1463
00:52:01,150 --> 00:52:06,880
<font color="#E5E5E5">layer</font><font color="#CCCCCC"> of tokens</font><font color="#E5E5E5"> of token layer off you</font>

1464
00:52:03,519 --> 00:52:08,558
station there's some<font color="#E5E5E5"> really clunky</font>

1465
00:52:06,880 --> 00:52:09,999
scripts that<font color="#E5E5E5"> I've thrown together and</font>

1466
00:52:08,559 --> 00:52:11,799
I've done it<font color="#CCCCCC"> taking a</font><font color="#E5E5E5"> couple stabs at</font>

1467
00:52:09,999 --> 00:52:15,308
<font color="#E5E5E5">I've never really been satisfied enough</font>

1468
00:52:11,799 --> 00:52:16,900
with it<font color="#CCCCCC"> to show anyone</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> that code at</font>

1469
00:52:15,309 --> 00:52:18,789
some point I<font color="#E5E5E5"> probably will pick up</font><font color="#CCCCCC"> at</font>

1470
00:52:16,900 --> 00:52:20,789
pick it up again<font color="#E5E5E5"> the honestly my hope is</font>

1471
00:52:18,789 --> 00:52:23,979
<font color="#E5E5E5">that someone else will do</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> instead</font>

1472
00:52:20,789 --> 00:52:26,079
<font color="#E5E5E5">because yeah it just it makes my brain</font>

1473
00:52:23,979 --> 00:52:28,419
hurt just<font color="#E5E5E5"> thinking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it but so if</font>

1474
00:52:26,079 --> 00:52:29,949
anyone is<font color="#CCCCCC"> interested in in writing ways</font>

1475
00:52:28,420 --> 00:52:32,319
to<font color="#E5E5E5"> diiie off you see that stuff I'll</font>

1476
00:52:29,949 --> 00:52:34,150
gladly share all the<font color="#E5E5E5"> samples that I've</font>

1477
00:52:32,319 --> 00:52:35,589
been working<font color="#CCCCCC"> on and the failures I've</font>

1478
00:52:34,150 --> 00:52:37,119
made to hopefully<font color="#E5E5E5"> kind of let you avoid</font>

1479
00:52:35,589 --> 00:52:39,819
<font color="#E5E5E5">making those same mistakes but that</font>

1480
00:52:37,119 --> 00:52:44,259
<font color="#CCCCCC">would be awesome so sadly that doesn't</font>

1481
00:52:39,819 --> 00:52:49,058
<font color="#E5E5E5">exist</font><font color="#CCCCCC"> today but any</font><font color="#E5E5E5"> more questions from</font>

1482
00:52:44,259 --> 00:52:54,369
<font color="#E5E5E5">the</font><font color="#CCCCCC"> audience all the</font><font color="#E5E5E5"> way in the back Ron</font>

1483
00:52:49,059 --> 00:52:59,349
Thomas no my only<font color="#E5E5E5"> reaction when I was</font>

1484
00:52:54,369 --> 00:53:00,849
looking<font color="#E5E5E5"> at this</font><font color="#CCCCCC"> is like why thank</font><font color="#E5E5E5"> you</font>

1485
00:52:59,349 --> 00:53:02,410
and if you want<font color="#CCCCCC"> to fix it why</font><font color="#E5E5E5"> wouldn't</font>

1486
00:53:00,849 --> 00:53:05,080
you<font color="#E5E5E5"> like go in and fix</font>

1487
00:53:02,410 --> 00:53:06,850
isn't it obvious what the problem<font color="#CCCCCC"> is you</font>

1488
00:53:05,080 --> 00:53:09,850
mean right<font color="#CCCCCC"> she</font><font color="#E5E5E5"> needs to go if you know</font>

1489
00:53:06,850 --> 00:53:12,610
you mean like<font color="#E5E5E5"> a</font><font color="#CCCCCC"> mixed version of</font>

1490
00:53:09,850 --> 00:53:14,830
<font color="#CCCCCC">PowerShell maybe should not give people</font>

1491
00:53:12,610 --> 00:53:16,090
this<font color="#E5E5E5"> yeah that</font><font color="#CCCCCC"> that's a</font><font color="#E5E5E5"> very common</font>

1492
00:53:14,830 --> 00:53:17,620
<font color="#E5E5E5">question especially to leave like</font><font color="#CCCCCC"> you</font>

1493
00:53:16,090 --> 00:53:19,390
<font color="#E5E5E5">helped</font><font color="#CCCCCC"> write it</font><font color="#E5E5E5"> why in the heck did you</font>

1494
00:53:17,620 --> 00:53:21,069
make it be able<font color="#E5E5E5"> to do all this</font><font color="#CCCCCC"> stuff and</font>

1495
00:53:19,390 --> 00:53:22,839
<font color="#E5E5E5">at the end of the day you look at any</font>

1496
00:53:21,070 --> 00:53:23,200
language and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do crazy stuff</font><font color="#CCCCCC"> like</font>

1497
00:53:22,840 --> 00:53:24,940
this

1498
00:53:23,200 --> 00:53:27,069
maybe<font color="#E5E5E5"> not</font><font color="#CCCCCC"> all maybe not every language</font>

1499
00:53:24,940 --> 00:53:29,500
is<font color="#E5E5E5"> this extent but there are very</font>

1500
00:53:27,070 --> 00:53:30,910
<font color="#CCCCCC">legitimate reasons to use</font><font color="#E5E5E5"> escape</font>

1501
00:53:29,500 --> 00:53:32,980
characters and stuff<font color="#E5E5E5"> like that</font>

1502
00:53:30,910 --> 00:53:35,710
in concatenated things it's extremely

1503
00:53:32,980 --> 00:53:37,600
powerful<font color="#CCCCCC"> and there's not really a super</font>

1504
00:53:35,710 --> 00:53:39,370
<font color="#E5E5E5">easy way to say like your intention is</font>

1505
00:53:37,600 --> 00:53:40,450
bad and this<font color="#E5E5E5"> thing you're</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> so again</font>

1506
00:53:39,370 --> 00:53:42,520
the thing to keep<font color="#E5E5E5"> in mind is this is not</font>

1507
00:53:40,450 --> 00:53:44,020
saying good bad<font color="#E5E5E5"> this is saying off you</font>

1508
00:53:42,520 --> 00:53:45,310
skated not off you skated so a lot<font color="#E5E5E5"> of</font>

1509
00:53:44,020 --> 00:53:46,810
times we'll see legitimately off you

1510
00:53:45,310 --> 00:53:49,270
skated stuff<font color="#CCCCCC"> as part of like code golf</font>

1511
00:53:46,810 --> 00:53:50,140
competitions or something but yeah at

1512
00:53:49,270 --> 00:53:52,240
the<font color="#CCCCCC"> end of the day you don't want to</font>

1513
00:53:50,140 --> 00:53:53,529
neuter<font color="#E5E5E5"> the language for this fringe case</font>

1514
00:53:52,240 --> 00:53:54,660
because attackers will still find<font color="#E5E5E5"> a</font><font color="#CCCCCC"> way</font>

1515
00:53:53,530 --> 00:53:59,110
is to abuse it

1516
00:53:54,660 --> 00:54:01,899
but<font color="#E5E5E5"> yeah the question in the back</font>

1517
00:53:59,110 --> 00:54:04,180
yeah very<font color="#E5E5E5"> much from the</font><font color="#CCCCCC"> stop</font><font color="#E5E5E5"> doing</font>

1518
00:54:01,900 --> 00:54:07,810
science<font color="#CCCCCC"> slide until the demo slide</font>

1519
00:54:04,180 --> 00:54:11,169
<font color="#E5E5E5">uh-huh what kind of language agnostic</font><font color="#CCCCCC"> so</font>

1520
00:54:07,810 --> 00:54:13,090
have you had any ideas to try to<font color="#E5E5E5"> check</font>

1521
00:54:11,170 --> 00:54:17,800
other languages other than<font color="#CCCCCC"> PowerShell</font>

1522
00:54:13,090 --> 00:54:19,900
<font color="#CCCCCC">and will you be back next</font><font color="#E5E5E5"> year with no</font>

1523
00:54:17,800 --> 00:54:21,970
<font color="#CCCCCC">it's a really good question</font><font color="#E5E5E5"> and from the</font>

1524
00:54:19,900 --> 00:54:23,740
very beginning<font color="#E5E5E5"> Lee and I discussed this</font>

1525
00:54:21,970 --> 00:54:26,830
as well can we<font color="#E5E5E5"> apply this exact same</font>

1526
00:54:23,740 --> 00:54:30,669
logic<font color="#E5E5E5"> to other languages</font><font color="#CCCCCC"> the the</font><font color="#E5E5E5"> answer</font>

1527
00:54:26,830 --> 00:54:32,740
is the simple<font color="#E5E5E5"> answer is yes but</font><font color="#CCCCCC"> the</font>

1528
00:54:30,670 --> 00:54:34,930
<font color="#CCCCCC">thing is is that the huge benefit we get</font>

1529
00:54:32,740 --> 00:54:37,600
here is that PowerShell is<font color="#E5E5E5"> ast is what</font>

1530
00:54:34,930 --> 00:54:39,580
really enables<font color="#CCCCCC"> us to extract</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> 5000</font>

1531
00:54:37,600 --> 00:54:42,339
features quite easily<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think it</font>

1532
00:54:39,580 --> 00:54:44,020
<font color="#E5E5E5">comes down to how robust the languages</font>

1533
00:54:42,340 --> 00:54:46,630
you're trying to detect<font color="#CCCCCC"> office keishon</font>

1534
00:54:44,020 --> 00:54:49,480
in so I think<font color="#CCCCCC"> JavaScript would probably</font>

1535
00:54:46,630 --> 00:54:51,130
<font color="#E5E5E5">be a number a close second to look at as</font>

1536
00:54:49,480 --> 00:54:54,520
well but<font color="#E5E5E5"> really it doesn't quite have</font>

1537
00:54:51,130 --> 00:54:56,230
<font color="#CCCCCC">the same feature</font><font color="#E5E5E5"> extracting capabilities</font>

1538
00:54:54,520 --> 00:54:57,910
<font color="#CCCCCC">just because that ast isn't exposed</font><font color="#E5E5E5"> in</font>

1539
00:54:56,230 --> 00:54:59,020
the same way<font color="#E5E5E5"> that being said there's a</font>

1540
00:54:57,910 --> 00:55:02,500
lot of other ways you<font color="#E5E5E5"> can extract</font>

1541
00:54:59,020 --> 00:55:05,140
features<font color="#E5E5E5"> just looking at you know common</font>

1542
00:55:02,500 --> 00:55:06,880
you know objects or function names<font color="#E5E5E5"> are</font>

1543
00:55:05,140 --> 00:55:08,350
<font color="#E5E5E5">kind of well I think it's called a bag</font>

1544
00:55:06,880 --> 00:55:11,710
of<font color="#E5E5E5"> words and basically saying these are</font>

1545
00:55:08,350 --> 00:55:13,960
all<font color="#E5E5E5"> features I care about</font><font color="#CCCCCC"> but at</font><font color="#E5E5E5"> that</font>

1546
00:55:11,710 --> 00:55:15,820
<font color="#E5E5E5">point it's al it's not quite as it's not</font>

1547
00:55:13,960 --> 00:55:18,250
quite as agnostic as what

1548
00:55:15,820 --> 00:55:20,200
<font color="#E5E5E5">was but I'm really hopeful that people</font>

1549
00:55:18,250 --> 00:55:23,110
<font color="#E5E5E5">will see this in</font><font color="#CCCCCC"> rise</font><font color="#E5E5E5"> that it's</font><font color="#CCCCCC"> actually</font>

1550
00:55:20,200 --> 00:55:24,790
<font color="#E5E5E5">not insanely difficult it's just</font><font color="#CCCCCC"> a bit</font>

1551
00:55:23,110 --> 00:55:27,070
<font color="#CCCCCC">time-consuming the most important part</font>

1552
00:55:24,790 --> 00:55:31,080
is extracting all those<font color="#E5E5E5"> features trying</font>

1553
00:55:27,070 --> 00:55:34,180
to do that in a<font color="#E5E5E5"> really fast way and then</font>

1554
00:55:31,080 --> 00:55:35,650
having<font color="#E5E5E5"> labeled data data that is off you</font>

1555
00:55:34,180 --> 00:55:37,060
<font color="#E5E5E5">stated that you can say this is labeled</font>

1556
00:55:35,650 --> 00:55:39,400
as<font color="#CCCCCC"> office cater to this</font><font color="#E5E5E5"> is not those are</font>

1557
00:55:37,060 --> 00:55:40,810
<font color="#E5E5E5">the two main things</font><font color="#CCCCCC"> and after</font><font color="#E5E5E5"> that the</font>

1558
00:55:39,400 --> 00:55:46,060
<font color="#E5E5E5">last part</font><font color="#CCCCCC"> is just</font><font color="#E5E5E5"> plugging that</font>

1559
00:55:40,810 --> 00:55:48,040
information together<font color="#CCCCCC"> so really good</font>

1560
00:55:46,060 --> 00:55:50,110
question<font color="#E5E5E5"> again I hope other people</font><font color="#CCCCCC"> are</font>

1561
00:55:48,040 --> 00:55:51,070
<font color="#E5E5E5">interested in pursuing this with other</font>

1562
00:55:50,110 --> 00:55:53,770
languages as well<font color="#E5E5E5"> because I think</font>

1563
00:55:51,070 --> 00:55:59,110
<font color="#E5E5E5">there's a lot of value there more</font>

1564
00:55:53,770 --> 00:56:00,350
<font color="#E5E5E5">questions no all right so Thank You</font>

1565
00:55:59,110 --> 00:56:04,460
<font color="#E5E5E5">Daniel thank you</font><font color="#CCCCCC"> very much</font>

1566
00:56:00,350 --> 00:56:04,460
[Applause]

