1
00:00:15,599 --> 00:00:17,760
thank you very much um

2
00:00:17,760 --> 00:00:20,400
so my talk is called hiding in plain

3
00:00:20,400 --> 00:00:22,000
sight

4
00:00:22,000 --> 00:00:25,760
how the solarwinds hack went undetected

5
00:00:25,760 --> 00:00:27,439
of course this wasn't undetected right

6
00:00:27,439 --> 00:00:29,519
we know about the solarwinds hack

7
00:00:29,519 --> 00:00:32,640
so the better title will be almost

8
00:00:32,640 --> 00:00:34,719
undetected i guess because they were

9
00:00:34,719 --> 00:00:38,640
really close to not getting detected

10
00:00:40,079 --> 00:00:41,680
the reason i'm talking about solarwinds

11
00:00:41,680 --> 00:00:42,879
is because

12
00:00:42,879 --> 00:00:44,640
i spent a lot of time in back in

13
00:00:44,640 --> 00:00:45,760
december

14
00:00:45,760 --> 00:00:48,320
reverse engineering the

15
00:00:48,320 --> 00:00:49,440
malicious

16
00:00:49,440 --> 00:00:52,239
update of solarwinds

17
00:00:52,239 --> 00:00:53,600
because i built a

18
00:00:53,600 --> 00:00:56,239
decoder for the dns traffic that was

19
00:00:56,239 --> 00:00:58,399
used for command and control

20
00:00:58,399 --> 00:00:59,840
um

21
00:00:59,840 --> 00:01:01,120
and

22
00:01:01,120 --> 00:01:03,280
this decoder has been used by certain

23
00:01:03,280 --> 00:01:05,920
organizations to identify victims

24
00:01:05,920 --> 00:01:07,760
and notify them that they have been

25
00:01:07,760 --> 00:01:09,439
compromised or at least that they were

26
00:01:09,439 --> 00:01:12,880
running this trojanized version of

27
00:01:12,880 --> 00:01:14,960
solarwinds orion

28
00:01:14,960 --> 00:01:17,360
but i'm not here to talk about my this

29
00:01:17,360 --> 00:01:20,000
project uh i'm here to talk about things

30
00:01:20,000 --> 00:01:21,119
i learned

31
00:01:21,119 --> 00:01:22,799
while i was reverse engineering the

32
00:01:22,799 --> 00:01:24,799
source code for

33
00:01:24,799 --> 00:01:27,119
the solarwinds orion products or the uh

34
00:01:27,119 --> 00:01:30,240
trojanized update

35
00:01:31,600 --> 00:01:34,240
um here's a simple timeline i'm not sure

36
00:01:34,240 --> 00:01:37,280
if you can see it but

37
00:01:37,520 --> 00:01:40,079
as you can see back in 2019 somewhere

38
00:01:40,079 --> 00:01:41,600
there i don't know exactly when it

39
00:01:41,600 --> 00:01:43,680
happened but the source code was

40
00:01:43,680 --> 00:01:45,600
modified or at least solar winds were

41
00:01:45,600 --> 00:01:46,799
hacked so that

42
00:01:46,799 --> 00:01:49,439
it was possible to inject uh

43
00:01:49,439 --> 00:01:51,520
additional code into their

44
00:01:51,520 --> 00:01:54,159
uh to their builds

45
00:01:54,159 --> 00:01:56,719
but it was not until in february

46
00:01:56,719 --> 00:01:58,399
that the domain the command and control

47
00:01:58,399 --> 00:02:00,159
domain was that was used in this first

48
00:02:00,159 --> 00:02:03,439
stage that this domain was activated

49
00:02:03,439 --> 00:02:05,920
and it was not until march

50
00:02:05,920 --> 00:02:07,040
that the

51
00:02:07,040 --> 00:02:08,800
malicious updates were available for

52
00:02:08,800 --> 00:02:12,520
download for solarwinds users

53
00:02:12,520 --> 00:02:15,699
[Music]

54
00:02:15,760 --> 00:02:17,360
but basically this is a timeline after

55
00:02:17,360 --> 00:02:20,640
that a lot of victims or a lot of

56
00:02:20,640 --> 00:02:23,040
backdoors were installed at victims

57
00:02:23,040 --> 00:02:25,360
and finally in december fireeye went

58
00:02:25,360 --> 00:02:26,560
public with

59
00:02:26,560 --> 00:02:27,680
uh

60
00:02:27,680 --> 00:02:29,200
this

61
00:02:29,200 --> 00:02:30,560
this incident

62
00:02:30,560 --> 00:02:32,640
because they were hacked themselves

63
00:02:32,640 --> 00:02:35,360
they were a victim

64
00:02:35,360 --> 00:02:37,840
um right so i'm going to talk about

65
00:02:37,840 --> 00:02:40,000
how they hid so what in one ways they

66
00:02:40,000 --> 00:02:40,959
hit is

67
00:02:40,959 --> 00:02:42,319
uh

68
00:02:42,319 --> 00:02:45,519
they named the code or the the the

69
00:02:45,519 --> 00:02:46,959
c-sharp file

70
00:02:46,959 --> 00:02:47,840
um

71
00:02:47,840 --> 00:02:50,160
for the back door you know very similar

72
00:02:50,160 --> 00:02:52,800
to the other files so in the namespace

73
00:02:52,800 --> 00:02:54,319
uh uh

74
00:02:54,319 --> 00:02:57,280
solarwinds orion core business layer

75
00:02:57,280 --> 00:02:59,120
these are the c-sharp files that are in

76
00:02:59,120 --> 00:03:02,239
there and one of these is the

77
00:03:02,239 --> 00:03:04,480
it's the code for the backdoor and i

78
00:03:04,480 --> 00:03:06,480
highlighted like the word business layer

79
00:03:06,480 --> 00:03:08,239
and orion because those are very common

80
00:03:08,239 --> 00:03:09,200
names

81
00:03:09,200 --> 00:03:12,000
uh in this project uh and the only one

82
00:03:12,000 --> 00:03:14,400
that has both orion and business layer

83
00:03:14,400 --> 00:03:16,720
that's the back door so they picked like

84
00:03:16,720 --> 00:03:18,480
okay let's pick some common names and

85
00:03:18,480 --> 00:03:20,239
name our c sharp files something very

86
00:03:20,239 --> 00:03:22,400
similar so okay

87
00:03:22,400 --> 00:03:25,360
that's something uh

88
00:03:25,360 --> 00:03:27,200
other things they did that they hid in

89
00:03:27,200 --> 00:03:29,360
the source code very well they named

90
00:03:29,360 --> 00:03:31,360
variables

91
00:03:31,360 --> 00:03:33,360
and gave him the names that

92
00:03:33,360 --> 00:03:35,840
was making sense for a solarwinds

93
00:03:35,840 --> 00:03:37,920
product which was a

94
00:03:37,920 --> 00:03:40,159
a product for monitoring network or

95
00:03:40,159 --> 00:03:41,519
monitoring service on the network for

96
00:03:41,519 --> 00:03:43,200
example

97
00:03:43,200 --> 00:03:45,360
the green comments there that's

98
00:03:45,360 --> 00:03:47,680
something i've put there so that was not

99
00:03:47,680 --> 00:03:50,080
there by the attackers

100
00:03:50,080 --> 00:03:51,840
so instead of

101
00:03:51,840 --> 00:03:53,760
and this enum was used to keep track of

102
00:03:53,760 --> 00:03:57,439
which state the bacter was in

103
00:03:57,439 --> 00:03:59,599
so instead of saying i'm in the state to

104
00:03:59,599 --> 00:04:01,760
continue running they call it i'm the in

105
00:04:01,760 --> 00:04:03,680
the net biostate

106
00:04:03,680 --> 00:04:07,040
and then the imp link is means stop

107
00:04:07,040 --> 00:04:09,200
and then we have restart and stop and a

108
00:04:09,200 --> 00:04:11,519
few other commands that were rarely used

109
00:04:11,519 --> 00:04:13,040
so these ones i

110
00:04:13,040 --> 00:04:14,959
commented in greens those are the ones i

111
00:04:14,959 --> 00:04:16,798
saw being used

112
00:04:16,798 --> 00:04:19,039
um

113
00:04:19,279 --> 00:04:21,358
and that and this is just one example

114
00:04:21,358 --> 00:04:22,880
there are many examples of how they

115
00:04:22,880 --> 00:04:24,880
named variables in their source code to

116
00:04:24,880 --> 00:04:26,560
make it look like it was part of the

117
00:04:26,560 --> 00:04:29,440
original product

118
00:04:33,199 --> 00:04:36,000
the commands on top the four first dns

119
00:04:36,000 --> 00:04:38,240
queries or domain names those are dns

120
00:04:38,240 --> 00:04:39,680
queries that

121
00:04:39,680 --> 00:04:41,600
this backed or used as command and

122
00:04:41,600 --> 00:04:44,160
control so these are four actual queries

123
00:04:44,160 --> 00:04:45,919
from four actual

124
00:04:45,919 --> 00:04:47,600
organizations who had installed this

125
00:04:47,600 --> 00:04:49,840
trojanized update

126
00:04:49,840 --> 00:04:51,520
as you can see they tried to mimic the

127
00:04:51,520 --> 00:04:52,880
behavior of

128
00:04:52,880 --> 00:04:53,600
the

129
00:04:53,600 --> 00:04:54,960
aws

130
00:04:54,960 --> 00:04:57,440
domains right very similar like this you

131
00:04:57,440 --> 00:04:59,280
have this app sync and then where in the

132
00:04:59,280 --> 00:05:01,039
world you are and then

133
00:05:01,039 --> 00:05:04,160
avs vm cloud which sounds like aws

134
00:05:04,160 --> 00:05:05,919
something

135
00:05:05,919 --> 00:05:08,080
but as you can see the first subdomain

136
00:05:08,080 --> 00:05:10,080
like the the first part of that

137
00:05:10,080 --> 00:05:12,880
subdomain uh looks random

138
00:05:12,880 --> 00:05:15,199
but it's not actually not random so this

139
00:05:15,199 --> 00:05:17,840
is what my software did it took those

140
00:05:17,840 --> 00:05:20,080
strings and decoded them

141
00:05:20,080 --> 00:05:22,000
into the data because this is data

142
00:05:22,000 --> 00:05:23,600
that's being exfiltrated to the

143
00:05:23,600 --> 00:05:25,680
attackers over dns

144
00:05:25,680 --> 00:05:27,120
so my tool did

145
00:05:27,120 --> 00:05:29,919
it actually decoded this to say that the

146
00:05:29,919 --> 00:05:31,199
first

147
00:05:31,199 --> 00:05:33,120
dns request said that the internal

148
00:05:33,120 --> 00:05:34,639
active directory domain for our

149
00:05:34,639 --> 00:05:36,840
organizations is

150
00:05:36,840 --> 00:05:39,759
jpso.gov so it would and this is the

151
00:05:39,759 --> 00:05:43,039
data that was exfiltrated from the

152
00:05:43,039 --> 00:05:45,520
by the trojan to the attackers so you

153
00:05:45,520 --> 00:05:47,840
expected first the domain name

154
00:05:47,840 --> 00:05:50,320
uh and then the security products

155
00:05:50,320 --> 00:05:52,080
are where they had the list of security

156
00:05:52,080 --> 00:05:53,520
products they looked for

157
00:05:53,520 --> 00:05:55,280
so you can see one victim here ran

158
00:05:55,280 --> 00:05:58,000
windows defender and the fourth victim

159
00:05:58,000 --> 00:06:00,000
was running defender crowdstrike and

160
00:06:00,000 --> 00:06:02,160
f-secure

161
00:06:02,160 --> 00:06:04,800
but still you know still they got this

162
00:06:04,800 --> 00:06:08,639
piece of backdoor in in their systems

163
00:06:09,600 --> 00:06:11,440
but what's interesting here is that this

164
00:06:11,440 --> 00:06:13,520
is all the informations the attacker had

165
00:06:13,520 --> 00:06:14,880
to go on

166
00:06:14,880 --> 00:06:17,199
when they picked their victim

167
00:06:17,199 --> 00:06:19,759
and they really had picked their victims

168
00:06:19,759 --> 00:06:21,039
uh

169
00:06:21,039 --> 00:06:22,720
i would say it's somewhere around one

170
00:06:22,720 --> 00:06:25,680
percent of all the the jordanis

171
00:06:25,680 --> 00:06:26,880
installations

172
00:06:26,880 --> 00:06:28,240
only one percent they actually

173
00:06:28,240 --> 00:06:29,759
hand-picked to say like these are the

174
00:06:29,759 --> 00:06:32,400
ones that are interesting the other 99

175
00:06:32,400 --> 00:06:35,440
they would just stop the back door as

176
00:06:35,440 --> 00:06:38,160
soon as they could

177
00:06:39,680 --> 00:06:41,600
um

178
00:06:41,600 --> 00:06:44,160
there is a difference as you can see in

179
00:06:44,160 --> 00:06:45,440
in march

180
00:06:45,440 --> 00:06:47,600
the trojan ice software update was

181
00:06:47,600 --> 00:06:48,639
available

182
00:06:48,639 --> 00:06:51,039
but it was not until april that

183
00:06:51,039 --> 00:06:52,720
they were seeing people reporting in

184
00:06:52,720 --> 00:06:54,000
over dns

185
00:06:54,000 --> 00:06:56,319
to this top domain name

186
00:06:56,319 --> 00:06:58,479
and the reason for that is

187
00:06:58,479 --> 00:07:01,360
this little piece of code in the in the

188
00:07:01,360 --> 00:07:03,039
back door

189
00:07:03,039 --> 00:07:03,919
um

190
00:07:03,919 --> 00:07:06,800
so it's doing a

191
00:07:06,800 --> 00:07:09,520
get last right time

192
00:07:09,520 --> 00:07:11,440
um and it's

193
00:07:11,440 --> 00:07:13,520
and it's then adding some delay you can

194
00:07:13,520 --> 00:07:14,800
see this

195
00:07:14,800 --> 00:07:16,720
random when it took a random number

196
00:07:16,720 --> 00:07:19,759
between 288 and 336

197
00:07:19,759 --> 00:07:22,240
and that's number of hours so it took a

198
00:07:22,240 --> 00:07:24,080
random number of hours

199
00:07:24,080 --> 00:07:26,400
uh and it was wait for that number of

200
00:07:26,400 --> 00:07:28,960
hours before the backdoor was actually

201
00:07:28,960 --> 00:07:31,120
activated

202
00:07:31,120 --> 00:07:32,960
and it's coming from our malware just

203
00:07:32,960 --> 00:07:35,360
like sleep for 10 minutes to avoid being

204
00:07:35,360 --> 00:07:37,680
executed or avoid being detected if it's

205
00:07:37,680 --> 00:07:39,919
executed in a sandbox for example

206
00:07:39,919 --> 00:07:41,120
that's

207
00:07:41,120 --> 00:07:43,039
this is similar but not exactly like

208
00:07:43,039 --> 00:07:44,560
that

209
00:07:44,560 --> 00:07:47,759
because it checks the timestamp of the

210
00:07:47,759 --> 00:07:50,879
last write time of the dll in this case

211
00:07:50,879 --> 00:07:52,720
um

212
00:07:52,720 --> 00:07:54,960
and for you forensics people the last

213
00:07:54,960 --> 00:07:57,280
right time that's the modified time in

214
00:07:57,280 --> 00:07:59,199
the file system so not created time it's

215
00:07:59,199 --> 00:08:02,160
a modified time and depending on how you

216
00:08:02,160 --> 00:08:04,000
copy a file or install a file the

217
00:08:04,000 --> 00:08:06,080
modified time might be preserved or it

218
00:08:06,080 --> 00:08:08,639
might be changed in this case it seems

219
00:08:08,639 --> 00:08:10,720
like it was actually being preserved so

220
00:08:10,720 --> 00:08:13,039
the modified time would be the time

221
00:08:13,039 --> 00:08:15,199
stamp when the file was compiled or

222
00:08:15,199 --> 00:08:17,759
signed from solarwinds themselves so

223
00:08:17,759 --> 00:08:19,919
this means this software would sleep for

224
00:08:19,919 --> 00:08:21,759
12 or 14 days

225
00:08:21,759 --> 00:08:23,840
from when this software was compiled

226
00:08:23,840 --> 00:08:25,360
which means that they'll probably get

227
00:08:25,360 --> 00:08:27,039
through the q and a or testing that

228
00:08:27,039 --> 00:08:29,759
solarwinds did before they released it

229
00:08:29,759 --> 00:08:32,479
uh because it wasn't activated

230
00:08:32,479 --> 00:08:35,599
but then once it was out

231
00:08:35,599 --> 00:08:37,279
it's

232
00:08:37,279 --> 00:08:38,399
when

233
00:08:38,399 --> 00:08:40,159
foreign days had passed from when it was

234
00:08:40,159 --> 00:08:42,799
compiled uh it would probably be

235
00:08:42,799 --> 00:08:45,519
activated right away

236
00:08:45,519 --> 00:08:47,839
um right so they should have used

237
00:08:47,839 --> 00:08:49,920
or if they wanted to sleep for for 12

238
00:08:49,920 --> 00:08:51,920
days from when it was installed they

239
00:08:51,920 --> 00:08:53,440
could have used

240
00:08:53,440 --> 00:08:57,120
get create creation time instead

241
00:08:57,120 --> 00:08:59,040
this is how the command control worked

242
00:08:59,040 --> 00:09:00,480
so they had different commands so

243
00:09:00,480 --> 00:09:02,640
depending on which which response the

244
00:09:02,640 --> 00:09:05,760
clients com get from the dns query

245
00:09:05,760 --> 00:09:08,480
the backdoor would behave differently so

246
00:09:08,480 --> 00:09:11,200
these continue commands which means that

247
00:09:11,200 --> 00:09:13,839
the backdoor should continue to beacon

248
00:09:13,839 --> 00:09:15,200
because the attackers haven't yet

249
00:09:15,200 --> 00:09:18,560
decided if it's interesting or not

250
00:09:18,560 --> 00:09:21,040
but as soon as they decided that oh this

251
00:09:21,040 --> 00:09:22,480
is an organization we don't want to

252
00:09:22,480 --> 00:09:23,519
target

253
00:09:23,519 --> 00:09:25,040
they would send one of these red

254
00:09:25,040 --> 00:09:28,080
commands in the bottom left which means

255
00:09:28,080 --> 00:09:30,320
stop beaconing and it was like it would

256
00:09:30,320 --> 00:09:33,360
disable the backdoor altogether

257
00:09:33,360 --> 00:09:35,519
but for a few victims they selected to

258
00:09:35,519 --> 00:09:37,839
respond with this target address instead

259
00:09:37,839 --> 00:09:38,640
and

260
00:09:38,640 --> 00:09:41,040
after that they could also later on

261
00:09:41,040 --> 00:09:42,720
supply a

262
00:09:42,720 --> 00:09:44,240
new domain name that would be the new

263
00:09:44,240 --> 00:09:46,959
command control domain that was used for

264
00:09:46,959 --> 00:09:50,319
https command control

265
00:09:50,399 --> 00:09:52,240
and what i was impressed with is how

266
00:09:52,240 --> 00:09:54,320
fast the attackers

267
00:09:54,320 --> 00:09:57,040
were able to send the stop

268
00:09:57,040 --> 00:09:59,040
commands because you know they got this

269
00:09:59,040 --> 00:10:00,399
active director domain they got the

270
00:10:00,399 --> 00:10:02,240
security products and then as soon as

271
00:10:02,240 --> 00:10:04,480
they could they sent this stop command

272
00:10:04,480 --> 00:10:06,320
in order to stay under the radar to make

273
00:10:06,320 --> 00:10:08,800
sure that they don't leak or their

274
00:10:08,800 --> 00:10:12,800
people don't notice this dns traffic

275
00:10:13,920 --> 00:10:16,720
here's one real world example of

276
00:10:16,720 --> 00:10:20,160
someone who had installed this backdoor

277
00:10:20,160 --> 00:10:23,600
these are the dns queries that were sent

278
00:10:23,600 --> 00:10:24,720
so the first

279
00:10:24,720 --> 00:10:26,959
dns query revealed the active directory

280
00:10:26,959 --> 00:10:29,279
domain

281
00:10:29,600 --> 00:10:32,959
the attacker or the the dns server sent

282
00:10:32,959 --> 00:10:36,800
the response in the 8.18 network

283
00:10:36,800 --> 00:10:38,399
which means that it should continue

284
00:10:38,399 --> 00:10:40,880
beginning and the last octet was

285
00:10:40,880 --> 00:10:43,440
actually used to tell the client how

286
00:10:43,440 --> 00:10:45,120
long it should sleep before it connects

287
00:10:45,120 --> 00:10:47,200
back again in this case i say come back

288
00:10:47,200 --> 00:10:49,440
in one hour so one hour later the client

289
00:10:49,440 --> 00:10:50,800
comes back

290
00:10:50,800 --> 00:10:52,399
sends information that it's running

291
00:10:52,399 --> 00:10:54,880
carbon black

292
00:10:54,880 --> 00:10:57,040
and it now got a response saying okay

293
00:10:57,040 --> 00:10:59,360
now you can sleep one day but continue

294
00:10:59,360 --> 00:11:00,560
beaconing

295
00:11:00,560 --> 00:11:02,800
then come back say okay i've already

296
00:11:02,800 --> 00:11:04,800
provided you with the domain name and

297
00:11:04,800 --> 00:11:06,320
carbon black that's all i have so it

298
00:11:06,320 --> 00:11:08,880
just sent what i call a ping so no new

299
00:11:08,880 --> 00:11:11,040
information it will sleep from the end

300
00:11:11,040 --> 00:11:13,200
of the pain and then sleep but finally

301
00:11:13,200 --> 00:11:15,839
uh they got this 2140

302
00:11:15,839 --> 00:11:18,959
network which means stop the dns beacon

303
00:11:18,959 --> 00:11:21,600
so this this is all that went out so

304
00:11:21,600 --> 00:11:22,880
over the course of

305
00:11:22,880 --> 00:11:26,079
was three days it sent five dns queries

306
00:11:26,079 --> 00:11:28,000
then it stopped and then the backdoor

307
00:11:28,000 --> 00:11:29,680
was disabled

308
00:11:29,680 --> 00:11:32,000
so most organizations probably would not

309
00:11:32,000 --> 00:11:33,360
detect this

310
00:11:33,360 --> 00:11:35,200
and this is why it's

311
00:11:35,200 --> 00:11:38,160
i believe that this vector was remained

312
00:11:38,160 --> 00:11:42,120
undetected for so long

313
00:11:43,839 --> 00:11:46,320
um but of course fireeye finally

314
00:11:46,320 --> 00:11:47,920
detected it

315
00:11:47,920 --> 00:11:49,200
but what if

316
00:11:49,200 --> 00:11:51,279
because fighter were actually targeted

317
00:11:51,279 --> 00:11:53,519
and they discovered that someone is in

318
00:11:53,519 --> 00:11:55,600
our network's doing bad things and

319
00:11:55,600 --> 00:11:57,600
somehow they were actually good enough

320
00:11:57,600 --> 00:11:59,600
to trace that back to the solar winds

321
00:11:59,600 --> 00:12:01,120
compromise

322
00:12:01,120 --> 00:12:03,040
i mean if they weren't wouldn't have

323
00:12:03,040 --> 00:12:05,360
been targeted i don't think i would have

324
00:12:05,360 --> 00:12:06,880
known about this attack maybe no one in

325
00:12:06,880 --> 00:12:09,440
this room would have

326
00:12:09,440 --> 00:12:10,880
and uh

327
00:12:10,880 --> 00:12:13,279
so they were i would say they were very

328
00:12:13,279 --> 00:12:17,760
close to not being uh detected at all

329
00:12:17,760 --> 00:12:20,079
uh and just in conclusions to summarize

330
00:12:20,079 --> 00:12:22,560
uh the success factors for the attackers

331
00:12:22,560 --> 00:12:24,959
was that you know they picked class

332
00:12:24,959 --> 00:12:27,040
names variable names

333
00:12:27,040 --> 00:12:29,120
intelligently to to blend in with the

334
00:12:29,120 --> 00:12:32,000
normal uh source code and they had the

335
00:12:32,000 --> 00:12:33,360
command and control sleep for a long

336
00:12:33,360 --> 00:12:35,760
time before they did anything

337
00:12:35,760 --> 00:12:37,120
and the command control traffic with

338
00:12:37,120 --> 00:12:39,760
just a few dns queries like a couple of

339
00:12:39,760 --> 00:12:42,959
dns queries per day

340
00:12:43,200 --> 00:12:45,760
and the attackers terminated

341
00:12:45,760 --> 00:12:49,040
non-interesting backdoors super fast and

342
00:12:49,040 --> 00:12:52,160
the only hand picked like one percent of

343
00:12:52,160 --> 00:12:53,680
victims to target

344
00:12:53,680 --> 00:12:54,639
uh

345
00:12:54,639 --> 00:12:56,560
just to make sure that you know it's not

346
00:12:56,560 --> 00:13:00,639
a big compromise they just pick them

347
00:13:00,639 --> 00:13:02,399
to make sure there's only a few victims

348
00:13:02,399 --> 00:13:03,839
who actually get compromised with

349
00:13:03,839 --> 00:13:05,519
further malware

350
00:13:05,519 --> 00:13:09,079
so that's it

