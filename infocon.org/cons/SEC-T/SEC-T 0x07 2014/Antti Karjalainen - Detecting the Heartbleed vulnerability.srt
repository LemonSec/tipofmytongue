1
00:00:00,000 --> 00:00:07,020
<font color="#CCCCCC">so the next talk is my auntie he</font>

2
00:00:04,410 --> 00:00:09,150
<font color="#CCCCCC">submitted wanted to talk about the the</font>

3
00:00:07,020 --> 00:00:14,129
types of problems with how the heart bug

4
00:00:09,150 --> 00:00:16,049
was found and we're really happy<font color="#E5E5E5"> to to</font>

5
00:00:14,130 --> 00:00:19,500
get more insight on that from the

6
00:00:16,049 --> 00:00:30,539
<font color="#E5E5E5">horse's mouth so speak</font><font color="#CCCCCC"> so the</font><font color="#E5E5E5"> next side</font>

7
00:00:19,500 --> 00:00:33,899
<font color="#E5E5E5">and he</font><font color="#CCCCCC"> ok i'm caroline</font><font color="#E5E5E5"> and i work with</font>

8
00:00:30,539 --> 00:00:37,260
<font color="#E5E5E5">code</font><font color="#CCCCCC"> megan i am</font><font color="#E5E5E5"> i'm working</font><font color="#CCCCCC"> a set this</font>

9
00:00:33,899 --> 00:00:40,710
<font color="#E5E5E5">tool developer</font><font color="#CCCCCC"> we are developing fast</font>

10
00:00:37,260 --> 00:00:44,820
testing tools<font color="#E5E5E5"> for different network</font>

11
00:00:40,710 --> 00:00:50,610
protocols and file formats and<font color="#CCCCCC"> i'm going</font>

12
00:00:44,820 --> 00:00:54,120
<font color="#CCCCCC">to talk about</font><font color="#E5E5E5"> technology behind or</font>

13
00:00:50,610 --> 00:00:55,170
methods<font color="#E5E5E5"> how the heartbleed</font><font color="#CCCCCC"> part was</font>

14
00:00:54,120 --> 00:00:57,959
found

15
00:00:55,170 --> 00:01:02,039
<font color="#CCCCCC">it's about our track I don't know how</font>

16
00:00:57,960 --> 00:01:04,470
<font color="#CCCCCC">google it found that because the hard</font>

17
00:01:02,039 --> 00:01:10,140
<font color="#CCCCCC">way back was independently</font><font color="#E5E5E5"> found</font>

18
00:01:04,470 --> 00:01:13,590
discovered by<font color="#E5E5E5"> us and</font><font color="#CCCCCC"> Google</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> i'm</font>

19
00:01:10,140 --> 00:01:17,040
going<font color="#CCCCCC"> to start with a brief</font><font color="#E5E5E5"> introduction</font>

20
00:01:13,590 --> 00:01:19,259
<font color="#CCCCCC">to fuzzing on going to introduce</font>

21
00:01:17,040 --> 00:01:26,280
different<font color="#CCCCCC"> funding methods</font><font color="#E5E5E5"> and failure</font>

22
00:01:19,259 --> 00:01:31,290
modes that has<font color="#E5E5E5"> being normally or or had</font>

23
00:01:26,280 --> 00:01:34,829
has been catched<font color="#CCCCCC"> with by</font><font color="#E5E5E5"> fuzzing and the</font>

24
00:01:31,290 --> 00:01:39,150
next next part of my talk is about

25
00:01:34,829 --> 00:01:42,869
augment that diagnosing methods

26
00:01:39,150 --> 00:01:48,329
<font color="#E5E5E5">it's about what what more we could</font>

27
00:01:42,869 --> 00:01:50,670
detect<font color="#E5E5E5"> what what different problems we</font>

28
00:01:48,329 --> 00:01:56,039
can detect from the system under test

29
00:01:50,670 --> 00:01:59,670
that are triggered by<font color="#E5E5E5"> buzzing and in the</font>

30
00:01:56,040 --> 00:02:03,299
third part of my talk is demonstrations

31
00:01:59,670 --> 00:02:07,799
<font color="#E5E5E5">about how we found the</font><font color="#CCCCCC"> hard way back and</font>

32
00:02:03,299 --> 00:02:09,750
also about<font color="#CCCCCC"> new</font><font color="#E5E5E5"> TLS certifcate very</font>

33
00:02:07,799 --> 00:02:13,290
verification<font color="#CCCCCC"> luck</font>

34
00:02:09,750 --> 00:02:17,730
<font color="#CCCCCC">likes air</font><font color="#E5E5E5"> search</font><font color="#CCCCCC"> is that said that</font><font color="#E5E5E5"> this</font>

35
00:02:13,290 --> 00:02:21,750
year<font color="#E5E5E5"> has been quite awful also year for</font>

36
00:02:17,730 --> 00:02:25,049
<font color="#E5E5E5">dls protocols for for stupid errors and</font>

37
00:02:21,750 --> 00:02:27,060
mistakes<font color="#E5E5E5"> that i'm going to show two of</font>

38
00:02:25,050 --> 00:02:31,709
those

39
00:02:27,060 --> 00:02:34,560
<font color="#CCCCCC">okay i think quite all</font><font color="#E5E5E5"> many of you</font>

40
00:02:31,709 --> 00:02:37,230
already know about<font color="#CCCCCC"> what-what fussing</font><font color="#E5E5E5"> is</font>

41
00:02:34,560 --> 00:02:41,520
but it serves as a good introduction to

42
00:02:37,230 --> 00:02:42,238
the other parts of my talk so here it

43
00:02:41,520 --> 00:02:46,050
comes

44
00:02:42,239 --> 00:02:49,200
so<font color="#CCCCCC"> fucking is- testing technique</font><font color="#E5E5E5"> so we</font>

45
00:02:46,050 --> 00:02:52,470
are feeding the system under test with

46
00:02:49,200 --> 00:02:57,299
<font color="#E5E5E5">invalid and valid data and try that way</font>

47
00:02:52,470 --> 00:03:03,300
to get that target system<font color="#CCCCCC"> too crass or</font>

48
00:02:57,300 --> 00:03:07,470
expose the<font color="#CCCCCC"> box in</font><font color="#E5E5E5"> the in the system so</font>

49
00:03:03,300 --> 00:03:09,930
<font color="#E5E5E5">what can be fast</font><font color="#CCCCCC"> network protocols</font><font color="#E5E5E5"> file</font>

50
00:03:07,470 --> 00:03:13,920
formats<font color="#E5E5E5"> user interfaces</font>

51
00:03:09,930 --> 00:03:17,489
<font color="#CCCCCC">ap</font><font color="#E5E5E5"> ice from the security point of view</font>

52
00:03:13,920 --> 00:03:21,630
<font color="#E5E5E5">those interfaces that's</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> that are</font>

53
00:03:17,489 --> 00:03:23,730
exposed to or that are crossing the

54
00:03:21,630 --> 00:03:26,519
bounder<font color="#CCCCCC"> trust boundary are the</font>

55
00:03:23,730 --> 00:03:29,010
interesting one<font color="#E5E5E5"> once of course</font><font color="#CCCCCC"> user</font>

56
00:03:26,519 --> 00:03:34,380
interfaces<font color="#CCCCCC"> an API should be first also</font>

57
00:03:29,010 --> 00:03:36,720
to get that<font color="#E5E5E5"> the more robust but on my</font>

58
00:03:34,380 --> 00:03:40,970
speech<font color="#CCCCCC"> i'm going to mostly talked about</font>

59
00:03:36,720 --> 00:03:40,970
<font color="#CCCCCC">buzzing</font><font color="#E5E5E5"> network protocols</font>

60
00:03:41,460 --> 00:03:47,010
<font color="#CCCCCC">fussing doesn't require access to the</font>

61
00:03:44,430 --> 00:03:50,880
source<font color="#CCCCCC"> code so you can actually this</font>

62
00:03:47,010 --> 00:03:54,209
<font color="#CCCCCC">it's black black box testing method</font><font color="#E5E5E5"> so</font>

63
00:03:50,880 --> 00:03:58,620
you can just<font color="#E5E5E5"> also proprietary software</font>

64
00:03:54,210 --> 00:04:04,230
and of<font color="#E5E5E5"> course when you are</font><font color="#CCCCCC"> fasting</font><font color="#E5E5E5"> you</font>

65
00:03:58,620 --> 00:04:06,750
can always<font color="#CCCCCC"> invent new</font><font color="#E5E5E5"> input so what's</font>

66
00:04:04,230 --> 00:04:10,859
the problem there is to find meaningful

67
00:04:06,750 --> 00:04:13,350
<font color="#E5E5E5">best cases and that kind of for example</font>

68
00:04:10,860 --> 00:04:16,800
<font color="#CCCCCC">pottery conditions that are likely to</font>

69
00:04:13,350 --> 00:04:23,280
trigger<font color="#E5E5E5"> problems in the target system</font>

70
00:04:16,800 --> 00:04:28,080
this<font color="#E5E5E5"> kind of values are for example some</font>

71
00:04:23,280 --> 00:04:33,210
control streams and overflows or things

72
00:04:28,080 --> 00:04:35,940
like that<font color="#E5E5E5"> the most simple</font><font color="#CCCCCC"> buzzing</font>

73
00:04:33,210 --> 00:04:40,320
technique is very random

74
00:04:35,940 --> 00:04:45,030
so you just<font color="#CCCCCC"> dump</font><font color="#E5E5E5"> random that</font><font color="#CCCCCC"> through</font>

75
00:04:40,320 --> 00:04:49,860
some<font color="#E5E5E5"> net network port or file and let</font>

76
00:04:45,030 --> 00:04:52,710
the target system<font color="#E5E5E5"> past that so it's</font>

77
00:04:49,860 --> 00:04:57,080
quite shallow shallow<font color="#E5E5E5"> testing technique</font>

78
00:04:52,710 --> 00:04:57,080
<font color="#E5E5E5">goes</font><font color="#CCCCCC"> course</font>

79
00:04:57,310 --> 00:05:05,620
<font color="#CCCCCC">most</font><font color="#E5E5E5"> system nowadays are are at least</font>

80
00:05:02,770 --> 00:05:10,330
<font color="#E5E5E5">that reliable that they didn't</font><font color="#CCCCCC"> press</font>

81
00:05:05,620 --> 00:05:14,920
with<font color="#E5E5E5"> with random</font><font color="#CCCCCC"> together the little bit</font>

82
00:05:10,330 --> 00:05:17,620
more better<font color="#CCCCCC"> buzzing technique is</font>

83
00:05:14,920 --> 00:05:20,500
<font color="#E5E5E5">location-based buzzing or template-based</font>

84
00:05:17,620 --> 00:05:25,150
<font color="#CCCCCC">flashy</font><font color="#E5E5E5"> buzzing where you are having a</font>

85
00:05:20,500 --> 00:05:29,200
template files or protocol data units<font color="#E5E5E5"> or</font>

86
00:05:25,150 --> 00:05:33,789
messages and you take these templates

87
00:05:29,200 --> 00:05:41,080
and then<font color="#E5E5E5"> fast that that structure and</font>

88
00:05:33,790 --> 00:05:43,660
inject that into the target system<font color="#E5E5E5"> so in</font>

89
00:05:41,080 --> 00:05:47,320
that<font color="#E5E5E5"> me that the quality of test cases</font>

90
00:05:43,660 --> 00:05:49,780
<font color="#E5E5E5">heavily bases on the template files</font>

91
00:05:47,320 --> 00:05:54,010
because it is not possible to<font color="#CCCCCC"> canary</font>

92
00:05:49,780 --> 00:05:58,780
other other functionalities of that

93
00:05:54,010 --> 00:06:00,250
protocol that which you are not putting

94
00:05:58,780 --> 00:06:03,369
<font color="#E5E5E5">butting in</font>

95
00:06:00,250 --> 00:06:06,880
in those template files or<font color="#CCCCCC"> Massachusetts</font>

96
00:06:03,370 --> 00:06:09,670
<font color="#E5E5E5">and also the epic</font><font color="#CCCCCC"> effectivity</font>

97
00:06:06,880 --> 00:06:12,490
defensively on protocol or file<font color="#E5E5E5"> format</font>

98
00:06:09,670 --> 00:06:15,340
<font color="#E5E5E5">so if there are folks for example</font><font color="#CCCCCC"> length</font>

99
00:06:12,490 --> 00:06:17,770
<font color="#E5E5E5">or check sums and you are just using a</font>

100
00:06:15,340 --> 00:06:20,830
template file and those links are not

101
00:06:17,770 --> 00:06:23,440
calculated over the<font color="#E5E5E5"> let's say over</font><font color="#CCCCCC"> for</font>

102
00:06:20,830 --> 00:06:28,780
<font color="#CCCCCC">one family</font><font color="#E5E5E5"> then it fails to the length</font>

103
00:06:23,440 --> 00:06:32,469
<font color="#E5E5E5">pausing and that's it but it works for</font>

104
00:06:28,780 --> 00:06:36,130
example let's say<font color="#CCCCCC"> HTTP</font><font color="#E5E5E5"> where the message</font>

105
00:06:32,470 --> 00:06:40,150
structure is quite simple there is just

106
00:06:36,130 --> 00:06:43,719
this line<font color="#CCCCCC"> feats in the end of the lines</font>

107
00:06:40,150 --> 00:06:46,780
<font color="#CCCCCC">and or</font><font color="#E5E5E5"> hitters and then there's</font><font color="#CCCCCC"> payload</font>

108
00:06:43,720 --> 00:06:50,470
so you can basically just<font color="#CCCCCC"> first</font><font color="#E5E5E5"> those</font>

109
00:06:46,780 --> 00:06:52,619
templates files and<font color="#E5E5E5"> sent them and it's</font>

110
00:06:50,470 --> 00:06:56,729
pretty effective

111
00:06:52,620 --> 00:07:00,180
<font color="#CCCCCC">I don't know</font><font color="#E5E5E5"> if you can see anything</font>

112
00:06:56,729 --> 00:07:06,330
about<font color="#E5E5E5"> about the picture but</font><font color="#CCCCCC"> it's have</font>

113
00:07:00,180 --> 00:07:10,860
something<font color="#CCCCCC"> then what</font><font color="#E5E5E5"> is the most advanced</font>

114
00:07:06,330 --> 00:07:16,229
technique to first is to have an actual

115
00:07:10,860 --> 00:07:19,919
<font color="#E5E5E5">protocol implementation that you are</font>

116
00:07:16,229 --> 00:07:24,570
having<font color="#CCCCCC"> a model of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> protocol</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a</font>

117
00:07:19,919 --> 00:07:27,810
<font color="#E5E5E5">syntax and then you have the rules</font><font color="#CCCCCC"> the</font>

118
00:07:24,570 --> 00:07:31,050
semantics of the protocol that lets say

119
00:07:27,810 --> 00:07:37,470
calculates correctly<font color="#E5E5E5"> length over those</font>

120
00:07:31,050 --> 00:07:42,930
<font color="#CCCCCC">analyzed values and and</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> index</font><font color="#E5E5E5"> index</font>

121
00:07:37,470 --> 00:07:45,360
<font color="#E5E5E5">into the target system so and and that</font>

122
00:07:42,930 --> 00:07:47,940
<font color="#CCCCCC">model-based</font><font color="#E5E5E5"> passing is created from the</font>

123
00:07:45,360 --> 00:07:49,800
specification for that protocol model is

124
00:07:47,940 --> 00:07:54,360
<font color="#E5E5E5">created from the</font><font color="#CCCCCC"> specification</font><font color="#E5E5E5"> so</font>

125
00:07:49,800 --> 00:07:57,330
there's no limit in that<font color="#E5E5E5"> you don't need</font>

126
00:07:54,360 --> 00:08:02,010
the template files for including all

127
00:07:57,330 --> 00:08:04,770
possible<font color="#CCCCCC"> HDD</font><font color="#E5E5E5"> hitters</font><font color="#CCCCCC"> so it</font><font color="#E5E5E5"> it can</font>

128
00:08:02,010 --> 00:08:09,330
generate those<font color="#CCCCCC"> headers</font><font color="#E5E5E5"> in the in the</font>

129
00:08:04,770 --> 00:08:12,200
test cases and and that way<font color="#E5E5E5"> it is more</font>

130
00:08:09,330 --> 00:08:12,200
efficient

131
00:08:13,070 --> 00:08:20,090
<font color="#E5E5E5">and it also allows for the fasting of</font>

132
00:08:16,520 --> 00:08:25,099
complex<font color="#CCCCCC"> protocols let's say</font><font color="#E5E5E5"> pls you have</font>

133
00:08:20,090 --> 00:08:28,789
to complete the handshake<font color="#CCCCCC"> to do actually</font>

134
00:08:25,100 --> 00:08:32,120
inject<font color="#E5E5E5"> to application layer data for</font>

135
00:08:28,790 --> 00:08:36,110
example<font color="#E5E5E5"> you have to make sure that these</font>

136
00:08:32,120 --> 00:08:38,450
first steps are correct<font color="#CCCCCC"> so you can</font>

137
00:08:36,110 --> 00:08:43,190
<font color="#E5E5E5">actually inject that</font><font color="#CCCCCC"> normally</font><font color="#E5E5E5"> the target</font>

138
00:08:38,450 --> 00:08:46,160
system and of course<font color="#E5E5E5"> because the</font><font color="#CCCCCC"> foster</font>

139
00:08:43,190 --> 00:08:50,360
has the<font color="#CCCCCC"> data types</font><font color="#E5E5E5"> and knows the value</font>

140
00:08:46,160 --> 00:08:54,260
demise of that<font color="#E5E5E5"> of them so it can try the</font>

141
00:08:50,360 --> 00:08:57,530
boundary boundary values and it knows

142
00:08:54,260 --> 00:09:03,080
which are illegal<font color="#E5E5E5"> values for the</font>

143
00:08:57,530 --> 00:09:05,900
different data types<font color="#CCCCCC"> this a snippet</font><font color="#E5E5E5"> for</font>

144
00:09:03,080 --> 00:09:09,140
<font color="#E5E5E5">from just an initiation protocol in</font>

145
00:09:05,900 --> 00:09:14,030
augmented<font color="#CCCCCC"> personal</font><font color="#E5E5E5"> reform</font>

146
00:09:09,140 --> 00:09:15,800
well<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> this index form a little</font>

147
00:09:14,030 --> 00:09:20,300
<font color="#CCCCCC">part</font><font color="#E5E5E5"> for the SI p</font>

148
00:09:15,800 --> 00:09:23,479
in addition<font color="#CCCCCC"> due to this kind of syntax</font>

149
00:09:20,300 --> 00:09:25,569
you need the rules which let's say for

150
00:09:23,480 --> 00:09:25,570
example

151
00:09:27,230 --> 00:09:37,910
<font color="#E5E5E5">well there isn't any complex length or</font>

152
00:09:34,850 --> 00:09:40,670
some<font color="#CCCCCC"> Jackson's but for example if there</font>

153
00:09:37,910 --> 00:09:43,579
were<font color="#E5E5E5"> then you need to calculate those</font>

154
00:09:40,670 --> 00:09:47,089
<font color="#CCCCCC">chickens correctly and then get the</font>

155
00:09:43,580 --> 00:09:55,130
normalized value to the<font color="#E5E5E5"> parsha where we</font>

156
00:09:47,090 --> 00:09:58,220
actually is parsed so<font color="#E5E5E5"> what what is the</font>

157
00:09:55,130 --> 00:10:01,730
animal coverage of the<font color="#CCCCCC"> state aware</font>

158
00:09:58,220 --> 00:10:05,840
<font color="#E5E5E5">model-based</font><font color="#CCCCCC"> Foster</font><font color="#E5E5E5"> is that we can</font>

159
00:10:01,730 --> 00:10:09,620
<font color="#E5E5E5">analyze</font><font color="#CCCCCC"> feel devil put put for example</font>

160
00:10:05,840 --> 00:10:14,720
on some<font color="#E5E5E5"> username field overflow</font><font color="#CCCCCC"> and</font>

161
00:10:09,620 --> 00:10:17,480
<font color="#CCCCCC">emily or things like that or the next</font>

162
00:10:14,720 --> 00:10:22,310
step is structural<font color="#CCCCCC"> let's say we have</font>

163
00:10:17,480 --> 00:10:25,550
<font color="#CCCCCC">x.509 certificate file we can</font><font color="#E5E5E5"> take a</font>

164
00:10:22,310 --> 00:10:25,969
<font color="#E5E5E5">coke before on the subject field and at</font>

165
00:10:25,550 --> 00:10:28,670
that

166
00:10:25,970 --> 00:10:35,330
for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> 50 times and that and</font>

167
00:10:28,670 --> 00:10:38,150
calculate the<font color="#CCCCCC"> CD asn.1 bear</font><font color="#E5E5E5"> lengths</font>

168
00:10:35,330 --> 00:10:43,730
correctly so that<font color="#CCCCCC"> Potter</font><font color="#E5E5E5"> really positive</font>

169
00:10:38,150 --> 00:10:47,750
<font color="#E5E5E5">also all those 50 subject fields then</font>

170
00:10:43,730 --> 00:10:52,760
<font color="#CCCCCC">there is sequence level</font><font color="#E5E5E5"> anomalies for</font>

171
00:10:47,750 --> 00:10:56,090
example on TLS<font color="#E5E5E5"> we could for example in</font>

172
00:10:52,760 --> 00:10:59,689
the middle of the hand say<font color="#E5E5E5"> sent client</font>

173
00:10:56,090 --> 00:11:02,270
hello again or things like that so it

174
00:10:59,690 --> 00:11:05,930
misses up with the system<font color="#CCCCCC"> hundred guests</font>

175
00:11:02,270 --> 00:11:10,339
state machine

176
00:11:05,930 --> 00:11:16,760
<font color="#E5E5E5">so what</font><font color="#CCCCCC"> what can we find using buzzing</font>

177
00:11:10,339 --> 00:11:22,779
most obvious<font color="#CCCCCC"> is scratches</font><font color="#E5E5E5"> then there is</font>

178
00:11:16,760 --> 00:11:22,779
denial of services<font color="#CCCCCC"> express years</font>

179
00:11:26,600 --> 00:11:33,620
<font color="#E5E5E5">all those things are quite easy the sea</font>

180
00:11:30,079 --> 00:11:36,680
actually the target system isn't<font color="#E5E5E5"> anymore</font>

181
00:11:33,620 --> 00:11:39,819
<font color="#E5E5E5">answering to you so you know something's</font>

182
00:11:36,680 --> 00:11:39,819
messed up

183
00:11:40,610 --> 00:11:49,940
here's an example from the x.509<font color="#CCCCCC"> i9</font>

184
00:11:44,449 --> 00:11:54,199
certificate so as you can clearly see in

185
00:11:49,940 --> 00:11:56,089
the beginning there is a length field<font color="#CCCCCC"> so</font>

186
00:11:54,199 --> 00:12:01,490
let's<font color="#E5E5E5"> say we have a template-based</font>

187
00:11:56,089 --> 00:12:05,029
<font color="#E5E5E5">father and we force field here and if</font><font color="#CCCCCC"> we</font>

188
00:12:01,490 --> 00:12:08,720
put<font color="#E5E5E5"> their extra data then this length</font>

189
00:12:05,029 --> 00:12:13,550
there<font color="#E5E5E5"> is incorrect and the pausing would</font>

190
00:12:08,720 --> 00:12:17,899
stop in<font color="#E5E5E5"> too early it did it it wouldn't</font>

191
00:12:13,550 --> 00:12:22,219
go<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it could we wouldn't go do the</font>

192
00:12:17,899 --> 00:12:25,940
actual animal<font color="#E5E5E5"> so you need to have a</font>

193
00:12:22,220 --> 00:12:33,350
model-based<font color="#E5E5E5"> father too fast x.509</font>

194
00:12:25,940 --> 00:12:36,529
certificates<font color="#E5E5E5"> traditionally the failure</font>

195
00:12:33,350 --> 00:12:40,639
modes that has been<font color="#CCCCCC"> recognized using</font>

196
00:12:36,529 --> 00:12:45,079
<font color="#CCCCCC">fuzzing</font><font color="#E5E5E5"> has been well of course crashes</font>

197
00:12:40,639 --> 00:12:51,170
<font color="#CCCCCC">and and and</font><font color="#E5E5E5"> memory each and</font>

198
00:12:45,079 --> 00:12:54,529
<font color="#CCCCCC">denial-of-service</font><font color="#E5E5E5"> situations and</font>

199
00:12:51,170 --> 00:12:59,360
recognizing these<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of failures is</font>

200
00:12:54,529 --> 00:13:03,800
quite<font color="#E5E5E5"> straightforward</font><font color="#CCCCCC"> so you have an</font>

201
00:12:59,360 --> 00:13:06,380
external monitor which<font color="#CCCCCC"> which</font><font color="#E5E5E5"> is</font>

202
00:13:03,800 --> 00:13:09,979
monitoring the system responses<font color="#E5E5E5"> if it</font>

203
00:13:06,380 --> 00:13:14,540
<font color="#E5E5E5">doesn't failure it or is it if it</font>

204
00:13:09,980 --> 00:13:17,900
doesn't respond them<font color="#CCCCCC"> it it has grasped</font>

205
00:13:14,540 --> 00:13:21,079
and of course you<font color="#E5E5E5"> are you can monitor</font>

206
00:13:17,900 --> 00:13:24,470
<font color="#CCCCCC">analyzed the locks</font><font color="#E5E5E5"> off</font><font color="#CCCCCC"> the target system</font>

207
00:13:21,080 --> 00:13:26,630
<font color="#CCCCCC">if there is some error codes or</font>

208
00:13:24,470 --> 00:13:29,360
something like like that<font color="#E5E5E5"> we know that</font>

209
00:13:26,630 --> 00:13:33,980
<font color="#CCCCCC">are</font><font color="#E5E5E5"> buzzing has caused something</font>

210
00:13:29,360 --> 00:13:36,470
<font color="#E5E5E5">problems there then simple net for money</font>

211
00:13:33,980 --> 00:13:41,060
management protocol that can be used for

212
00:13:36,470 --> 00:13:47,420
monitor for example memory conception or

213
00:13:41,060 --> 00:13:53,689
<font color="#CCCCCC">cpu</font><font color="#E5E5E5"> usually a utilization and all</font><font color="#CCCCCC"> crime</font>

214
00:13:47,420 --> 00:13:57,770
<font color="#E5E5E5">or address an</font><font color="#CCCCCC"> advisor builds</font><font color="#E5E5E5"> can be used</font>

215
00:13:53,690 --> 00:14:01,370
for detecting<font color="#CCCCCC"> what's a</font><font color="#E5E5E5"> references</font>

216
00:13:57,770 --> 00:14:07,490
<font color="#E5E5E5">outside of the alligator memory or</font>

217
00:14:01,370 --> 00:14:11,030
double fries and problems like that but

218
00:14:07,490 --> 00:14:13,160
what<font color="#E5E5E5"> if what if</font><font color="#CCCCCC"> fuzzing</font><font color="#E5E5E5"> is causing that</font>

219
00:14:11,030 --> 00:14:17,030
kind of failure modes that cannot be

220
00:14:13,160 --> 00:14:21,680
recognized with<font color="#E5E5E5"> then outside outside</font>

221
00:14:17,030 --> 00:14:28,850
monitor<font color="#E5E5E5"> what if the sut is acting</font>

222
00:14:21,680 --> 00:14:32,689
correctly<font color="#CCCCCC"> it doesn't leak memory or</font>

223
00:14:28,850 --> 00:14:37,490
doesn't produce any error messages<font color="#E5E5E5"> but</font>

224
00:14:32,690 --> 00:14:42,380
still<font color="#CCCCCC"> acts behaves</font><font color="#E5E5E5"> somehow somehow</font>

225
00:14:37,490 --> 00:14:47,030
<font color="#E5E5E5">wrongly well</font><font color="#CCCCCC"> straightaway</font><font color="#E5E5E5"> father knows</font>

226
00:14:42,380 --> 00:14:49,280
what<font color="#E5E5E5"> what it has done and well the first</font>

227
00:14:47,030 --> 00:14:52,339
question how shoot the<font color="#CCCCCC"> issue</font><font color="#E5E5E5"> the reactor</font>

228
00:14:49,280 --> 00:14:56,510
<font color="#CCCCCC">that invalid input then that is that its</font>

229
00:14:52,340 --> 00:14:58,790
<font color="#CCCCCC">moral of conformance testing testing</font>

230
00:14:56,510 --> 00:15:02,360
problem but but the second one

231
00:14:58,790 --> 00:15:06,180
what are the things that the system

232
00:15:02,360 --> 00:15:14,940
under this<font color="#E5E5E5"> shooting up</font><font color="#CCCCCC"> do in any</font><font color="#E5E5E5"> case</font>

233
00:15:06,180 --> 00:15:19,290
<font color="#E5E5E5">and let's say we are funding for example</font>

234
00:15:14,940 --> 00:15:21,660
user credentials<font color="#CCCCCC"> then we are knowing</font>

235
00:15:19,290 --> 00:15:25,260
that this isn't valid<font color="#CCCCCC"> while you work for</font>

236
00:15:21,660 --> 00:15:30,480
the user<font color="#E5E5E5"> password so we shouldn't get</font>

237
00:15:25,260 --> 00:15:33,360
<font color="#CCCCCC">through the</font><font color="#E5E5E5"> product that resources</font><font color="#CCCCCC"> so</font>

238
00:15:30,480 --> 00:15:39,660
<font color="#CCCCCC">here comes this segment at</font><font color="#E5E5E5"> diagnosing</font>

239
00:15:33,360 --> 00:15:44,850
methods<font color="#E5E5E5"> the kickoff for that development</font>

240
00:15:39,660 --> 00:15:47,969
on<font color="#E5E5E5"> us was when we were developing our</font>

241
00:15:44,850 --> 00:15:51,000
internet<font color="#E5E5E5"> key extent like this street and</font>

242
00:15:47,970 --> 00:15:56,010
we were testing the interoperability

243
00:15:51,000 --> 00:16:00,209
<font color="#E5E5E5">against</font><font color="#CCCCCC"> runx1 and we were using area say</font>

244
00:15:56,010 --> 00:16:05,760
<font color="#CCCCCC">signatures for authentication and</font>

245
00:16:00,209 --> 00:16:09,479
everything went fine we get get the<font color="#CCCCCC"> best</font>

246
00:16:05,760 --> 00:16:12,540
<font color="#CCCCCC">route to enter a borough operate against</font>

247
00:16:09,480 --> 00:16:16,920
the strong<font color="#CCCCCC"> sperm and we made a better</font>

248
00:16:12,540 --> 00:16:20,640
built and<font color="#E5E5E5"> sent that</font><font color="#CCCCCC"> 12 are some West</font>

249
00:16:16,920 --> 00:16:23,699
customer<font color="#CCCCCC"> item</font><font color="#E5E5E5"> remember what</font><font color="#CCCCCC"> with one</font><font color="#E5E5E5"> and</font>

250
00:16:20,640 --> 00:16:26,730
they said that we are calculating the

251
00:16:23,700 --> 00:16:29,790
signature<font color="#E5E5E5"> in a wrong manner it doesn't</font>

252
00:16:26,730 --> 00:16:33,390
<font color="#E5E5E5">enter</font><font color="#CCCCCC"> upright or interoperate</font><font color="#E5E5E5"> against</font>

253
00:16:29,790 --> 00:16:35,520
their system then we were thinking<font color="#E5E5E5"> about</font>

254
00:16:33,390 --> 00:16:40,199
what's wrong

255
00:16:35,520 --> 00:16:44,189
it works fine against<font color="#CCCCCC"> the</font><font color="#E5E5E5"> strong</font><font color="#CCCCCC"> one and</font>

256
00:16:40,200 --> 00:16:47,940
we were studying the problem and notice

257
00:16:44,190 --> 00:16:50,790
that when there is<font color="#E5E5E5"> prefixed eros in the</font>

258
00:16:47,940 --> 00:16:56,459
signature<font color="#CCCCCC"> storms one actually gives a</font>

259
00:16:50,790 --> 00:17:01,380
fail<font color="#E5E5E5"> failure code in the signature</font>

260
00:16:56,459 --> 00:17:03,510
verification process and<font color="#E5E5E5"> and the method</font>

261
00:17:01,380 --> 00:17:07,170
or function which was calling that

262
00:17:03,510 --> 00:17:10,650
verification process<font color="#E5E5E5"> notice that</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> we</font>

263
00:17:07,170 --> 00:17:15,049
didn't receive<font color="#E5E5E5"> the</font><font color="#CCCCCC"> 0 which</font><font color="#E5E5E5"> is a fail</font>

264
00:17:10,650 --> 00:17:19,369
signature<font color="#CCCCCC"> we</font><font color="#E5E5E5"> receive a true</font><font color="#CCCCCC"> so</font>

265
00:17:15,049 --> 00:17:26,118
<font color="#CCCCCC">see another signature is good and it</font>

266
00:17:19,368 --> 00:17:28,368
<font color="#CCCCCC">proceed</font><font color="#E5E5E5"> so that that made us to think</font>

267
00:17:26,118 --> 00:17:30,619
that if it's possible to test

268
00:17:28,368 --> 00:17:33,559
automatically<font color="#CCCCCC"> this kind of</font>

269
00:17:30,619 --> 00:17:36,860
vulnerabilities<font color="#CCCCCC"> because we are knowing</font>

270
00:17:33,559 --> 00:17:41,330
when we are analyzing that for let's say

271
00:17:36,860 --> 00:17:45,439
<font color="#CCCCCC">eres</font><font color="#E5E5E5"> a signature so and we know when on</font>

272
00:17:41,330 --> 00:17:49,820
that protocol sequence<font color="#E5E5E5"> we are requesting</font>

273
00:17:45,440 --> 00:17:52,039
for the protected resources and if we

274
00:17:49,820 --> 00:17:57,049
are actually getting those protected

275
00:17:52,039 --> 00:17:58,249
resources<font color="#E5E5E5"> then then we should give a</font>

276
00:17:57,049 --> 00:18:03,080
fail<font color="#E5E5E5"> verdict</font>

277
00:17:58,249 --> 00:18:06,710
that's how<font color="#CCCCCC"> are</font><font color="#E5E5E5"> the indication</font><font color="#CCCCCC"> Pybus</font>

278
00:18:03,080 --> 00:18:09,320
<font color="#CCCCCC">chick was</font><font color="#E5E5E5"> done so we are analyzing user</font>

279
00:18:06,710 --> 00:18:14,559
credentials and trying to access

280
00:18:09,320 --> 00:18:14,559
protected resources without principles

281
00:18:16,450 --> 00:18:23,530
<font color="#CCCCCC">Apple school failed</font><font color="#E5E5E5"> with similar problem</font>

282
00:18:21,280 --> 00:18:26,800
<font color="#E5E5E5">there</font>

283
00:18:23,530 --> 00:18:30,970
this proof of<font color="#E5E5E5"> position signature was not</font>

284
00:18:26,800 --> 00:18:34,930
verified correctly and the<font color="#CCCCCC"> Apple steel</font>

285
00:18:30,970 --> 00:18:38,020
<font color="#CCCCCC">as implementation late let another</font>

286
00:18:34,930 --> 00:18:47,200
negated<font color="#E5E5E5"> user to the protected resources</font>

287
00:18:38,020 --> 00:18:56,020
there is a diagram<font color="#CCCCCC"> that's what simple</font>

288
00:18:47,200 --> 00:18:58,450
<font color="#E5E5E5">the next this kind of check</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> La</font>

289
00:18:56,020 --> 00:19:00,730
<font color="#E5E5E5">derived from the other case and</font><font color="#CCCCCC"> Pybus</font>

290
00:18:58,450 --> 00:19:03,700
check this is for certificate

291
00:19:00,730 --> 00:19:07,390
verification<font color="#CCCCCC"> the problem</font><font color="#E5E5E5"> there is very</font>

292
00:19:03,700 --> 00:19:12,460
similar than the other indication<font color="#CCCCCC"> bypass</font>

293
00:19:07,390 --> 00:19:16,230
<font color="#E5E5E5">certificate verification process is</font>

294
00:19:12,460 --> 00:19:16,230
quite complex

295
00:19:20,120 --> 00:19:26,959
<font color="#CCCCCC">there</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> subjects certifcate</font><font color="#E5E5E5"> and its</font>

296
00:19:23,750 --> 00:19:31,340
private key and then<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> see a CS</font>

297
00:19:26,960 --> 00:19:33,230
private key and certificate and<font color="#CCCCCC"> cas sign</font>

298
00:19:31,340 --> 00:19:36,889
<font color="#CCCCCC">it the</font><font color="#E5E5E5"> certificate</font>

299
00:19:33,230 --> 00:19:40,610
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> and when we are receiving a</font>

300
00:19:36,890 --> 00:19:42,920
certifcate<font color="#E5E5E5"> we need to verify that that</font>

301
00:19:40,610 --> 00:19:46,699
certificate has been issued by<font color="#CCCCCC"> the trust</font>

302
00:19:42,920 --> 00:19:50,930
<font color="#E5E5E5">trusted certificate other day and this</font>

303
00:19:46,700 --> 00:19:55,010
is pretty much what<font color="#E5E5E5"> Meredith was</font>

304
00:19:50,930 --> 00:19:57,470
presenting<font color="#E5E5E5"> yesterday that this is a</font>

305
00:19:55,010 --> 00:20:02,420
complex process and if<font color="#E5E5E5"> security</font>

306
00:19:57,470 --> 00:20:07,130
libraries are leaving these things for

307
00:20:02,420 --> 00:20:12,290
the application layer<font color="#CCCCCC"> developer person</font>

308
00:20:07,130 --> 00:20:18,260
<font color="#E5E5E5">we are in problem because there is so so</font>

309
00:20:12,290 --> 00:20:21,680
many<font color="#E5E5E5"> steps where you can screw up the</font>

310
00:20:18,260 --> 00:20:26,060
steps are you need to verify that<font color="#CCCCCC"> see a</font>

311
00:20:21,680 --> 00:20:28,190
signature or if<font color="#CCCCCC"> they're if</font><font color="#E5E5E5"> it's if the</font>

312
00:20:26,060 --> 00:20:31,070
subject to verification<font color="#E5E5E5"> isn't signed by</font>

313
00:20:28,190 --> 00:20:34,520
the subject or root CA you have to

314
00:20:31,070 --> 00:20:39,200
verify that<font color="#E5E5E5"> complete certifcate</font><font color="#CCCCCC"> chain</font>

315
00:20:34,520 --> 00:20:42,410
<font color="#CCCCCC">through the</font><font color="#E5E5E5"> through the</font><font color="#CCCCCC"> root CA you have</font>

316
00:20:39,200 --> 00:20:44,540
to<font color="#E5E5E5"> check this</font><font color="#CCCCCC"> site matters</font><font color="#E5E5E5"> you have the</font>

317
00:20:42,410 --> 00:20:47,690
<font color="#CCCCCC">very fact that</font><font color="#E5E5E5"> certificate subject is</font>

318
00:20:44,540 --> 00:20:50,780
that<font color="#CCCCCC"> expected</font><font color="#E5E5E5"> one that the</font><font color="#CCCCCC"> where if I</font>

319
00:20:47,690 --> 00:20:52,640
wanted the period<font color="#CCCCCC"> check the certificate</font>

320
00:20:50,780 --> 00:20:59,000
hasn't<font color="#CCCCCC"> beat</font><font color="#E5E5E5"> replicated using those</font>

321
00:20:52,640 --> 00:21:00,770
<font color="#E5E5E5">always</font><font color="#CCCCCC"> ocsp prodigal if the use key</font>

322
00:20:59,000 --> 00:21:04,040
length is acceptable

323
00:21:00,770 --> 00:21:08,960
nowadays<font color="#E5E5E5"> some systems doesn't anymore</font>

324
00:21:04,040 --> 00:21:12,800
except<font color="#E5E5E5"> thousand</font><font color="#CCCCCC"> 24 feet long</font>

325
00:21:08,960 --> 00:21:16,760
RSA keys for example and then of course

326
00:21:12,800 --> 00:21:21,050
you need to check that the certificate

327
00:21:16,760 --> 00:21:23,810
that other<font color="#CCCCCC"> here is offering you is</font><font color="#E5E5E5"> is</font>

328
00:21:21,050 --> 00:21:24,500
used for that purpose that<font color="#E5E5E5"> it is used in</font>

329
00:21:23,810 --> 00:21:28,760
that

330
00:21:24,500 --> 00:21:31,310
<font color="#CCCCCC">principal</font><font color="#E5E5E5"> and after all these tips you</font>

331
00:21:28,760 --> 00:21:36,170
know that the certificate is trusted<font color="#E5E5E5"> but</font>

332
00:21:31,310 --> 00:21:39,379
after<font color="#E5E5E5"> that you need to need to verify</font>

333
00:21:36,170 --> 00:21:43,160
that the certificate is actually that

334
00:21:39,380 --> 00:21:47,090
from that part<font color="#E5E5E5"> party that has sent that</font>

335
00:21:43,160 --> 00:21:50,810
so that other<font color="#E5E5E5"> party needs to send a</font>

336
00:21:47,090 --> 00:21:56,750
proof of position using its private key

337
00:21:50,810 --> 00:21:59,270
and<font color="#CCCCCC"> effort</font><font color="#E5E5E5"> if if the signature can be</font>

338
00:21:56,750 --> 00:22:02,060
verified using using the certificate

339
00:21:59,270 --> 00:22:06,650
then we have actually<font color="#CCCCCC"> all</font><font color="#E5E5E5"> indicated that</font>

340
00:22:02,060 --> 00:22:10,730
other<font color="#CCCCCC"> peer</font><font color="#E5E5E5"> so how do we</font>

341
00:22:06,650 --> 00:22:13,550
this certificate verification<font color="#E5E5E5"> negative</font>

342
00:22:10,730 --> 00:22:18,140
testing is of course necessary we need

343
00:22:13,550 --> 00:22:22,220
to try<font color="#CCCCCC"> invalid values</font><font color="#E5E5E5"> we need to try for</font>

344
00:22:18,140 --> 00:22:26,800
example<font color="#E5E5E5"> it's a the certificate has been</font>

345
00:22:22,220 --> 00:22:26,800
isn't anymore

346
00:22:27,260 --> 00:22:35,390
well it or<font color="#CCCCCC"> related the period has</font>

347
00:22:29,270 --> 00:22:37,460
expired and when you are<font color="#E5E5E5"> causing the</font>

348
00:22:35,390 --> 00:22:40,250
<font color="#CCCCCC">quality</font><font color="#E5E5E5"> the period and the signature is</font>

349
00:22:37,460 --> 00:22:43,160
calculated over that certifcate<font color="#E5E5E5"> then</font>

350
00:22:40,250 --> 00:22:47,000
actually the father needs to have the<font color="#CCCCCC"> cs</font>

351
00:22:43,160 --> 00:22:50,540
private key<font color="#E5E5E5"> so it can sign over those</font>

352
00:22:47,000 --> 00:22:53,150
animal eyes<font color="#E5E5E5"> while use so that because</font>

353
00:22:50,540 --> 00:22:56,149
the target system<font color="#CCCCCC"> it</font><font color="#E5E5E5"> first</font>

354
00:22:53,150 --> 00:22:58,910
it checks<font color="#CCCCCC"> the signature on that in and</font>

355
00:22:56,150 --> 00:23:00,920
if the signature<font color="#E5E5E5"> check fails then it</font>

356
00:22:58,910 --> 00:23:04,840
drops the certificate and we don't know

357
00:23:00,920 --> 00:23:04,840
if it checks the<font color="#CCCCCC"> validity</font><font color="#E5E5E5"> period</font>

358
00:23:08,290 --> 00:23:17,379
<font color="#E5E5E5">so on the state where father</font><font color="#CCCCCC"> we need to</font>

359
00:23:12,700 --> 00:23:20,920
have<font color="#CCCCCC"> root CA which science those animals</font>

360
00:23:17,380 --> 00:23:23,440
certificates and when we know that there

361
00:23:20,920 --> 00:23:29,170
is some problematic<font color="#E5E5E5"> values we can</font>

362
00:23:23,440 --> 00:23:31,930
actually give<font color="#E5E5E5"> of fail</font><font color="#CCCCCC"> ready when the</font>

363
00:23:29,170 --> 00:23:36,820
system under<font color="#E5E5E5"> test except those animals</font>

364
00:23:31,930 --> 00:23:42,130
certificates<font color="#E5E5E5"> then the next possible step</font>

365
00:23:36,820 --> 00:23:46,419
or<font color="#CCCCCC"> check is this is totally different</font>

366
00:23:42,130 --> 00:23:48,220
than the last<font color="#CCCCCC"> to those other</font><font color="#E5E5E5"> indication</font>

367
00:23:46,420 --> 00:23:53,950
<font color="#CCCCCC">fibers instead of</font><font color="#E5E5E5"> certificate validation</font>

368
00:23:48,220 --> 00:23:56,530
checks<font color="#E5E5E5"> this is amplification on UDP</font>

369
00:23:53,950 --> 00:24:01,030
protocol it is possible to spoof the

370
00:23:56,530 --> 00:24:05,050
<font color="#CCCCCC">center</font><font color="#E5E5E5"> IP address and when you spoof</font>

371
00:24:01,030 --> 00:24:08,320
that<font color="#CCCCCC"> through the distributed to attack</font>

372
00:24:05,050 --> 00:24:12,340
target target's<font color="#E5E5E5"> IP address you</font><font color="#CCCCCC"> again</font>

373
00:24:08,320 --> 00:24:14,730
<font color="#CCCCCC">rely</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> UDP</font><font color="#E5E5E5"> UDP that crime through the</font>

374
00:24:12,340 --> 00:24:18,120
<font color="#E5E5E5">to the weighting system</font>

375
00:24:14,730 --> 00:24:23,040
<font color="#E5E5E5">and when there's this kind of UDP</font>

376
00:24:18,120 --> 00:24:26,040
protocol which<font color="#E5E5E5"> sense larger responses</font>

377
00:24:23,040 --> 00:24:30,270
than<font color="#CCCCCC"> than the request</font><font color="#E5E5E5"> was it is possible</font>

378
00:24:26,040 --> 00:24:34,049
to amplify the<font color="#E5E5E5"> the scent that crime and</font>

379
00:24:30,270 --> 00:24:37,470
so may make that distributed<font color="#CCCCCC"> to select</font>

380
00:24:34,049 --> 00:24:44,160
more<font color="#E5E5E5"> severe</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> were there will be more</font>

381
00:24:37,470 --> 00:24:47,880
data<font color="#E5E5E5"> sent to the target system so we can</font>

382
00:24:44,160 --> 00:24:51,240
check on you<font color="#CCCCCC"> debased</font><font color="#E5E5E5"> brother goals that</font>

383
00:24:47,880 --> 00:24:55,440
when we are sending<font color="#E5E5E5"> first message on</font><font color="#CCCCCC"> the</font>

384
00:24:51,240 --> 00:24:57,270
sequence so if<font color="#CCCCCC"> responses speaker</font><font color="#E5E5E5"> for</font>

385
00:24:55,440 --> 00:25:00,169
<font color="#E5E5E5">that</font><font color="#CCCCCC"> three question</font><font color="#E5E5E5"> amplification is</font>

386
00:24:57,270 --> 00:25:00,168
possible

387
00:25:02,770 --> 00:25:11,440
<font color="#E5E5E5">and also</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> normalization may cause that</font>

388
00:25:05,500 --> 00:25:13,780
for example on UDP based prodigal<font color="#E5E5E5"> the</font>

389
00:25:11,440 --> 00:25:15,970
target system<font color="#E5E5E5"> responses with some kind</font>

390
00:25:13,780 --> 00:25:17,980
of large error<font color="#E5E5E5"> message to the</font><font color="#CCCCCC"> animalist</font>

391
00:25:15,970 --> 00:25:21,010
message<font color="#CCCCCC"> so you get a bigger</font>

392
00:25:17,980 --> 00:25:29,800
amplification<font color="#E5E5E5"> with the with the invalid</font>

393
00:25:21,010 --> 00:25:32,920
request<font color="#CCCCCC"> this check</font><font color="#E5E5E5"> is derived from from</font>

394
00:25:29,800 --> 00:25:34,899
the amplification check when we had done

395
00:25:32,920 --> 00:25:38,380
the amplification check we thought

396
00:25:34,900 --> 00:25:42,250
<font color="#CCCCCC">thought about that</font><font color="#E5E5E5"> is it possible to</font>

397
00:25:38,380 --> 00:25:44,890
check for<font color="#E5E5E5"> for unexpected data or</font><font color="#CCCCCC"> bigger</font>

398
00:25:42,250 --> 00:25:48,100
responses also on other protocols

399
00:25:44,890 --> 00:25:51,070
let's say for example on<font color="#CCCCCC"> tcp</font><font color="#E5E5E5"> if we</font>

400
00:25:48,100 --> 00:25:54,580
recognize that the target system is

401
00:25:51,070 --> 00:25:57,040
sending more more data that it was

402
00:25:54,580 --> 00:26:00,879
received on the on the wallet case then

403
00:25:57,040 --> 00:26:02,710
we can give a warning and for the user

404
00:26:00,880 --> 00:26:05,890
and that<font color="#E5E5E5"> check check</font>

405
00:26:02,710 --> 00:26:09,940
<font color="#E5E5E5">what</font><font color="#CCCCCC"> the sut is sending to you</font><font color="#E5E5E5"> is there</font>

406
00:26:05,890 --> 00:26:14,530
anything anything that shouldn't be

407
00:26:09,940 --> 00:26:18,400
there and that<font color="#E5E5E5"> but that was actually</font>

408
00:26:14,530 --> 00:26:21,840
that the check that notified us about

409
00:26:18,400 --> 00:26:21,840
the heartbleed back

410
00:26:23,290 --> 00:26:32,409
<font color="#E5E5E5">works like this</font><font color="#CCCCCC"> one we based this case</font>

411
00:26:28,750 --> 00:26:35,140
we take the reference<font color="#CCCCCC"> values</font><font color="#E5E5E5"> how much we</font>

412
00:26:32,410 --> 00:26:40,960
<font color="#E5E5E5">had</font><font color="#CCCCCC"> center data and how much we are</font>

413
00:26:35,140 --> 00:26:43,660
receiving data and comparing they simply

414
00:26:40,960 --> 00:26:47,920
<font color="#E5E5E5">through the normalized this case we can</font>

415
00:26:43,660 --> 00:26:54,130
raise the warning or fail<font color="#E5E5E5"> verdict and</font>

416
00:26:47,920 --> 00:26:59,410
notify the user so how the<font color="#CCCCCC"> heartbeat</font><font color="#E5E5E5"> but</font>

417
00:26:54,130 --> 00:27:02,530
<font color="#E5E5E5">was found in</font><font color="#CCCCCC"> a while</font><font color="#E5E5E5"> we are implementing</font>

418
00:26:59,410 --> 00:27:04,450
new<font color="#CCCCCC"> street for different protocols we</font>

419
00:27:02,530 --> 00:27:08,889
usually this the interoperability

420
00:27:04,450 --> 00:27:10,600
against<font color="#E5E5E5"> open source systems and when you</font>

421
00:27:08,890 --> 00:27:13,060
do that and you<font color="#E5E5E5"> cross the open source</font>

422
00:27:10,600 --> 00:27:15,280
system you want to make that better and

423
00:27:13,060 --> 00:27:18,760
so<font color="#E5E5E5"> testing of those open source</font>

424
00:27:15,280 --> 00:27:25,149
implementations<font color="#E5E5E5"> comes as a by-product</font>

425
00:27:18,760 --> 00:27:27,070
and<font color="#CCCCCC"> last spring</font><font color="#E5E5E5"> we were developing</font><font color="#CCCCCC"> RTLS</font>

426
00:27:25,150 --> 00:27:30,190
<font color="#E5E5E5">fucking tools and we were implementing</font>

427
00:27:27,070 --> 00:27:35,050
those we call<font color="#E5E5E5"> them safeguard chicks</font>

428
00:27:30,190 --> 00:27:35,830
<font color="#E5E5E5">those for which was the example was once</font>

429
00:27:35,050 --> 00:27:38,560
were

430
00:27:35,830 --> 00:27:42,250
<font color="#E5E5E5">this kind of safeguard</font><font color="#CCCCCC"> checks are</font>

431
00:27:38,560 --> 00:27:46,419
<font color="#E5E5E5">implementing those on the</font><font color="#CCCCCC"> tls</font><font color="#E5E5E5"> this tool</font>

432
00:27:42,250 --> 00:27:49,240
and<font color="#CCCCCC"> I had been</font><font color="#E5E5E5"> working on TLS protocol</font>

433
00:27:46,420 --> 00:27:51,460
before so<font color="#CCCCCC"> I knew the heartbeat</font><font color="#E5E5E5"> program</font>

434
00:27:49,240 --> 00:27:55,900
protocol from there and I thought that

435
00:27:51,460 --> 00:27:59,770
hey let<font color="#CCCCCC"> dls supports also the heartbeat</font>

436
00:27:55,900 --> 00:28:03,880
<font color="#CCCCCC">bro let's at</font><font color="#E5E5E5"> at this also on</font><font color="#CCCCCC"> art dealers</font>

437
00:27:59,770 --> 00:28:09,370
<font color="#CCCCCC">fucking tool and we were using openssl</font>

438
00:28:03,880 --> 00:28:13,700
101 f<font color="#CCCCCC"> and</font><font color="#E5E5E5"> Judy</font><font color="#CCCCCC"> ls3 212</font><font color="#E5E5E5"> as a distant</font>

439
00:28:09,370 --> 00:28:20,418
<font color="#E5E5E5">argot</font><font color="#CCCCCC"> when we were developing our</font><font color="#E5E5E5"> Father</font>

440
00:28:13,700 --> 00:28:24,830
<font color="#E5E5E5">this is a</font><font color="#CCCCCC"> keyless system first there is</font>

441
00:28:20,419 --> 00:28:26,840
<font color="#CCCCCC">a TLS handshake</font><font color="#E5E5E5"> and when the handshake</font>

442
00:28:24,830 --> 00:28:33,168
has been completed and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> ciphers are</font>

443
00:28:26,840 --> 00:28:35,870
<font color="#CCCCCC">up</font><font color="#E5E5E5"> then there you user sense or client</font>

444
00:28:33,169 --> 00:28:39,769
and server since<font color="#E5E5E5"> obligation data and you</font>

445
00:28:35,870 --> 00:28:43,250
can<font color="#E5E5E5"> during that</font><font color="#CCCCCC"> since and heartbeat</font>

446
00:28:39,769 --> 00:28:48,470
three<font color="#CCCCCC"> kristen</font><font color="#E5E5E5"> and the other</font><font color="#CCCCCC"> peer</font><font color="#E5E5E5"> shoot</font>

447
00:28:43,250 --> 00:28:51,889
<font color="#CCCCCC">response</font><font color="#E5E5E5"> with the heartbeat response the</font>

448
00:28:48,470 --> 00:28:54,769
heartbeat protocol is symmetric<font color="#E5E5E5"> so for</font>

449
00:28:51,889 --> 00:28:56,959
example<font color="#E5E5E5"> cerar good good</font><font color="#CCCCCC"> sent</font><font color="#E5E5E5"> the</font>

450
00:28:54,769 --> 00:28:58,580
heartbeat regressed and<font color="#E5E5E5"> and the client</font>

451
00:28:56,960 --> 00:29:02,570
<font color="#E5E5E5">shoot</font><font color="#CCCCCC"> response with the heartbeat</font>

452
00:28:58,580 --> 00:29:07,279
<font color="#E5E5E5">response and when the session should be</font>

453
00:29:02,570 --> 00:29:10,010
closed<font color="#E5E5E5"> then the closing party since a</font>

454
00:29:07,279 --> 00:29:15,019
<font color="#CCCCCC">close notify</font><font color="#E5E5E5"> alert message and the other</font>

455
00:29:10,010 --> 00:29:15,950
peer<font color="#E5E5E5"> response</font><font color="#CCCCCC"> with that heartbeat</font>

456
00:29:15,019 --> 00:29:18,049
protocol

457
00:29:15,950 --> 00:29:21,830
well like I said<font color="#E5E5E5"> TLS and</font><font color="#CCCCCC"> Ed</font><font color="#E5E5E5"> less</font>

458
00:29:18,049 --> 00:29:25,399
<font color="#CCCCCC">political support support it</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> TLS</font><font color="#E5E5E5"> it</font>

459
00:29:21,830 --> 00:29:28,549
<font color="#CCCCCC">it is</font><font color="#E5E5E5"> used that for figuring out if the</font>

460
00:29:25,399 --> 00:29:31,189
other<font color="#CCCCCC"> beer is still there because dls</font>

461
00:29:28,549 --> 00:29:33,889
<font color="#E5E5E5">works on top of UDP protocol and you</font>

462
00:29:31,190 --> 00:29:39,980
don't actually know if other<font color="#CCCCCC"> bar here</font>

463
00:29:33,889 --> 00:29:42,199
<font color="#E5E5E5">still listens to you and</font><font color="#CCCCCC"> Auntie LS it is</font>

464
00:29:39,980 --> 00:29:45,740
used for keeping the<font color="#E5E5E5"> connection</font><font color="#CCCCCC"> life so</font>

465
00:29:42,200 --> 00:29:48,880
that the<font color="#CCCCCC"> timeout</font><font color="#E5E5E5"> counter didn't expire</font>

466
00:29:45,740 --> 00:29:54,010
or things like that

467
00:29:48,880 --> 00:29:56,410
<font color="#E5E5E5">so I think it's more apropriate with the</font>

468
00:29:54,010 --> 00:30:00,460
dtls<font color="#E5E5E5"> because usually when you are using</font>

469
00:29:56,410 --> 00:30:01,900
TLS you send some<font color="#E5E5E5"> HTTP</font><font color="#CCCCCC"> requests and get</font>

470
00:30:00,460 --> 00:30:04,900
the response and<font color="#CCCCCC"> close</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> connection</font>

471
00:30:01,900 --> 00:30:08,350
<font color="#CCCCCC">that</font><font color="#E5E5E5"> that's it</font><font color="#CCCCCC"> you don't actually need</font>

472
00:30:04,900 --> 00:30:10,900
to use any heartbeat messages there to

473
00:30:08,350 --> 00:30:18,850
test if<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> keeping the comics and</font>

474
00:30:10,900 --> 00:30:22,150
<font color="#CCCCCC">the wife and what's quite important</font>

475
00:30:18,850 --> 00:30:24,159
aspect is that the use of the heartbeat

476
00:30:22,150 --> 00:30:25,960
extension should be negotiated during

477
00:30:24,160 --> 00:30:31,090
the TLS handshake

478
00:30:25,960 --> 00:30:33,790
so for example client<font color="#E5E5E5"> shoot</font><font color="#CCCCCC"> you Chae say</font>

479
00:30:31,090 --> 00:30:35,590
on the<font color="#CCCCCC"> client hello that it supports</font>

480
00:30:33,790 --> 00:30:39,520
heartbeat<font color="#E5E5E5"> profile and wants to use that</font>

481
00:30:35,590 --> 00:30:43,179
and server<font color="#CCCCCC"> accept it by including that</font>

482
00:30:39,520 --> 00:30:44,320
heartbeat<font color="#CCCCCC"> protocol extension in the</font>

483
00:30:43,180 --> 00:30:53,320
server hello

484
00:30:44,320 --> 00:30:57,790
so<font color="#CCCCCC"> I'm showing now you to</font><font color="#E5E5E5"> chemo about</font>

485
00:30:53,320 --> 00:31:04,179
about the test case that<font color="#E5E5E5"> raised our</font>

486
00:30:57,790 --> 00:31:07,570
awareness about that<font color="#CCCCCC"> heart laid-back i'm</font>

487
00:31:04,180 --> 00:31:12,070
<font color="#E5E5E5">having a vulnerable</font><font color="#CCCCCC"> open ssl server</font><font color="#E5E5E5"> here</font>

488
00:31:07,570 --> 00:31:15,429
<font color="#CCCCCC">that's the reference implementation</font>

489
00:31:12,070 --> 00:31:17,939
provided along with the<font color="#E5E5E5"> openness</font><font color="#CCCCCC"> of the</font>

490
00:31:15,430 --> 00:31:17,940
<font color="#E5E5E5">library</font>

491
00:31:18,490 --> 00:31:29,470
<font color="#E5E5E5">like</font><font color="#CCCCCC"> I said we were including the</font>

492
00:31:24,340 --> 00:31:37,149
heartbeat protocol support to that to

493
00:31:29,470 --> 00:31:39,460
the<font color="#CCCCCC"> tls</font><font color="#E5E5E5"> oh and the test case that</font>

494
00:31:37,150 --> 00:31:43,300
trigger the problem was this kind of

495
00:31:39,460 --> 00:31:47,590
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> actually a client alert and the</font>

496
00:31:43,300 --> 00:31:54,000
<font color="#E5E5E5">wallet client alert looks like looks</font>

497
00:31:47,590 --> 00:31:54,000
like this<font color="#E5E5E5"> let me show you</font>

498
00:32:05,250 --> 00:32:13,380
<font color="#CCCCCC">contenttype</font><font color="#E5E5E5"> and there is 15 and on the</font>

499
00:32:10,620 --> 00:32:16,830
<font color="#E5E5E5">payload inside that record structure is</font>

500
00:32:13,380 --> 00:32:20,880
<font color="#E5E5E5">two</font><font color="#CCCCCC"> bites</font><font color="#E5E5E5"> alert level it can be warning</font>

501
00:32:16,830 --> 00:32:25,679
or fatal<font color="#E5E5E5"> and then there is this</font><font color="#CCCCCC"> other</font>

502
00:32:20,880 --> 00:32:27,630
<font color="#CCCCCC">prescription and those values</font><font color="#E5E5E5"> or fields</font>

503
00:32:25,680 --> 00:32:32,550
are on the client alert

504
00:32:27,630 --> 00:32:38,130
there are 0<font color="#CCCCCC"> 100 and what was the test</font>

505
00:32:32,550 --> 00:32:44,419
case was that we were analyzing the

506
00:32:38,130 --> 00:32:44,420
content type of that client alert<font color="#E5E5E5"> so</font>

507
00:32:51,080 --> 00:33:00,949
<font color="#E5E5E5">it was one object</font><font color="#CCCCCC"> anomaly</font><font color="#E5E5E5"> very simple we</font>

508
00:32:56,210 --> 00:33:03,710
had<font color="#CCCCCC"> seats are father to put a heartbeat</font>

509
00:33:00,950 --> 00:33:14,059
<font color="#CCCCCC">burgle content-type on that field and it</font>

510
00:33:03,710 --> 00:33:16,850
<font color="#CCCCCC">tries that value then so when we use a I</font>

511
00:33:14,059 --> 00:33:19,129
need to you have also the wallet case

512
00:33:16,850 --> 00:33:22,279
for the reference so that it could<font color="#E5E5E5"> it</font>

513
00:33:19,130 --> 00:33:23,929
can notice that we are receiving

514
00:33:22,279 --> 00:33:29,240
unexpected data

515
00:33:23,929 --> 00:33:32,149
<font color="#CCCCCC">ok and are our safeguard</font><font color="#E5E5E5"> chicks</font><font color="#CCCCCC"> notified</font>

516
00:33:29,240 --> 00:33:36,559
<font color="#E5E5E5">that we are getting some sense of some</font>

517
00:33:32,149 --> 00:33:43,649
unexpected data for<font color="#CCCCCC"> the for the</font><font color="#E5E5E5"> client</font>

518
00:33:36,559 --> 00:33:46,080
alert and see<font color="#CCCCCC"> I have</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ok</font>

519
00:33:43,650 --> 00:33:54,120
<font color="#CCCCCC">I</font><font color="#E5E5E5"> wires are</font><font color="#CCCCCC"> Kira</font><font color="#E5E5E5"> listening to</font><font color="#CCCCCC"> do that</font>

520
00:33:46,080 --> 00:33:58,889
<font color="#CCCCCC">through</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> port</font><font color="#E5E5E5"> and we saw so here</font>

521
00:33:54,120 --> 00:34:01,050
<font color="#E5E5E5">that like wire</font><font color="#CCCCCC"> Sox shows that it is it</font>

522
00:33:58,890 --> 00:34:03,420
isn't actually any more<font color="#CCCCCC"> client</font><font color="#E5E5E5"> other</font>

523
00:34:01,050 --> 00:34:05,909
message that we are<font color="#E5E5E5"> seeing sending it is</font>

524
00:34:03,420 --> 00:34:09,690
<font color="#E5E5E5">heartbeat</font><font color="#CCCCCC"> request and what the</font>

525
00:34:05,910 --> 00:34:15,270
vulnerable<font color="#CCCCCC"> openssl</font><font color="#E5E5E5"> was sending us it was</font>

526
00:34:09,690 --> 00:34:18,149
a wallet heartbeat response and then

527
00:34:15,270 --> 00:34:22,199
when we were studying the heartbeat

528
00:34:18,149 --> 00:34:25,679
<font color="#E5E5E5">protocol</font><font color="#CCCCCC"> the Michigan message structure</font>

529
00:34:22,199 --> 00:34:29,370
is like this like<font color="#CCCCCC"> surgery</font><font color="#E5E5E5"> was presenting</font>

530
00:34:25,679 --> 00:34:32,760
on his presentation<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> one went</font><font color="#E5E5E5"> by</font>

531
00:34:29,370 --> 00:34:37,319
type and<font color="#E5E5E5"> then there's</font><font color="#CCCCCC"> to talk that long</font>

532
00:34:32,760 --> 00:34:44,040
<font color="#CCCCCC">payload length and on the client alert</font>

533
00:34:37,320 --> 00:34:48,270
<font color="#CCCCCC">we had an</font><font color="#E5E5E5"> octave of 01 with which is</font>

534
00:34:44,040 --> 00:34:51,270
basically<font color="#CCCCCC"> hardly three quest and that</font><font color="#E5E5E5"> 00</font>

535
00:34:48,270 --> 00:34:53,940
<font color="#E5E5E5">matches with the first octet of the</font>

536
00:34:51,270 --> 00:34:57,300
payload length<font color="#E5E5E5"> and what happened is that</font>

537
00:34:53,940 --> 00:35:01,380
it reads the second<font color="#CCCCCC"> doctorate for that</font>

538
00:34:57,300 --> 00:35:04,020
length<font color="#E5E5E5"> on its memory and dumped us</font><font color="#CCCCCC"> the</font>

539
00:35:01,380 --> 00:35:07,890
response with that<font color="#E5E5E5"> that amount of data</font>

540
00:35:04,020 --> 00:35:10,110
<font color="#E5E5E5">when we tried a certain several times</font>

541
00:35:07,890 --> 00:35:13,049
let's say there is one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> out that's</font>

542
00:35:10,110 --> 00:35:15,890
<font color="#E5E5E5">received</font><font color="#CCCCCC"> their</font><font color="#E5E5E5"> if we try that</font><font color="#CCCCCC"> saying</font>

543
00:35:13,050 --> 00:35:15,890
this case again

544
00:35:22,000 --> 00:35:26,620
<font color="#E5E5E5">we are seeing that we are now receiving</font>

545
00:35:24,490 --> 00:35:29,589
245<font color="#CCCCCC"> pockets</font>

546
00:35:26,620 --> 00:35:33,880
<font color="#CCCCCC">ok so the</font><font color="#E5E5E5"> second second octave of that</font>

547
00:35:29,590 --> 00:35:39,460
<font color="#E5E5E5">length</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> speaker now so that made</font>

548
00:35:33,880 --> 00:35:42,640
us think of that we should try using a

549
00:35:39,460 --> 00:35:50,590
real<font color="#E5E5E5"> heartbeat three quest with the</font>

550
00:35:42,640 --> 00:35:55,089
maximum length and<font color="#CCCCCC"> width me</font><font color="#E5E5E5"> form so we</font>

551
00:35:50,590 --> 00:35:59,500
created a custom<font color="#E5E5E5"> normally case for debt</font>

552
00:35:55,090 --> 00:36:02,740
and it looks like this<font color="#CCCCCC"> so we are having</font>

553
00:35:59,500 --> 00:36:06,700
a<font color="#E5E5E5"> bailout in inside the heartbeat three</font>

554
00:36:02,740 --> 00:36:11,399
<font color="#CCCCCC">court of three objects with</font><font color="#E5E5E5"> maximum</font>

555
00:36:06,700 --> 00:36:14,129
length there and

556
00:36:11,400 --> 00:36:17,240
<font color="#E5E5E5">when we</font><font color="#CCCCCC"> tried to run that against the</font>

557
00:36:14,130 --> 00:36:17,240
<font color="#CCCCCC">openssl</font>

558
00:36:22,200 --> 00:36:28,069
<font color="#E5E5E5">we received 64 kilobytes response</font>

559
00:36:29,550 --> 00:36:32,360
<font color="#E5E5E5">with</font>

560
00:36:33,850 --> 00:36:36,810
<font color="#E5E5E5">looks like this</font>

561
00:36:36,950 --> 00:36:39,970
<font color="#CCCCCC">on wire sock</font>

562
00:36:42,270 --> 00:36:47,850
<font color="#E5E5E5">there is quite much on any dls memory</font>

563
00:36:45,390 --> 00:36:52,799
<font color="#E5E5E5">done but because there isn't</font><font color="#CCCCCC"> that much</font>

564
00:36:47,850 --> 00:36:56,910
traffic on that are out<font color="#E5E5E5"> my target system</font>

565
00:36:52,800 --> 00:37:00,720
but anyway<font color="#E5E5E5"> there was also some snippets</font>

566
00:36:56,910 --> 00:37:02,580
from certificates and so so on so we

567
00:37:00,720 --> 00:37:07,109
knew that this is extreme with that

568
00:37:02,580 --> 00:37:08,340
because it is actually used memory with

569
00:37:07,110 --> 00:37:12,390
which<font color="#CCCCCC"> it</font>

570
00:37:08,340 --> 00:37:16,710
the target is<font color="#E5E5E5"> dumping and the of course</font>

571
00:37:12,390 --> 00:37:18,600
the<font color="#E5E5E5"> first first fear was that if if the</font>

572
00:37:16,710 --> 00:37:21,240
target system is compromising its

573
00:37:18,600 --> 00:37:26,490
private key because it<font color="#E5E5E5"> it needs to use</font>

574
00:37:21,240 --> 00:37:30,750
its private key to go go through the

575
00:37:26,490 --> 00:37:35,509
<font color="#E5E5E5">hand take because it it needs to prove</font>

576
00:37:30,750 --> 00:37:35,510
that it is the holder of the certifcate

577
00:37:38,140 --> 00:37:47,470
and like it was later<font color="#CCCCCC"> proved that it it</font>

578
00:37:44,410 --> 00:37:53,769
really<font color="#CCCCCC"> like</font><font color="#E5E5E5"> also the private</font><font color="#CCCCCC"> keys</font>

579
00:37:47,470 --> 00:37:57,368
it was using those Prime's<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> what</font>

580
00:37:53,769 --> 00:38:01,058
<font color="#CCCCCC">what most people who were claiming that</font>

581
00:37:57,369 --> 00:38:04,299
<font color="#E5E5E5">nay it isn't leaking private</font><font color="#CCCCCC"> case was</font>

582
00:38:01,059 --> 00:38:06,880
actually searching for some<font color="#CCCCCC"> ascii</font>

583
00:38:04,299 --> 00:38:09,279
<font color="#CCCCCC">armored presentation of the private key</font>

584
00:38:06,880 --> 00:38:13,510
or stuff like that but actually what you

585
00:38:09,279 --> 00:38:16,660
need to look for is<font color="#CCCCCC"> crimes</font><font color="#E5E5E5"> and you need</font>

586
00:38:13,510 --> 00:38:18,579
to know<font color="#E5E5E5"> the architecture of the server</font>

587
00:38:16,660 --> 00:38:21,549
so you know actually the big

588
00:38:18,579 --> 00:38:25,839
presentation and<font color="#E5E5E5"> and things like that</font>

589
00:38:21,549 --> 00:38:28,690
but this thing is quite easy because if

590
00:38:25,839 --> 00:38:30,910
you know that<font color="#CCCCCC"> and as you know the public</font>

591
00:38:28,690 --> 00:38:35,680
key you know the models and<font color="#E5E5E5"> it's a</font>

592
00:38:30,910 --> 00:38:42,700
simple calculation of<font color="#E5E5E5"> divide and just</font>

593
00:38:35,680 --> 00:38:47,500
using some<font color="#E5E5E5"> or scrolling the window of</font>

594
00:38:42,700 --> 00:38:51,519
the key length across that 64 kilobytes

595
00:38:47,500 --> 00:38:53,920
and doing the attack<font color="#E5E5E5"> time our time and</font>

596
00:38:51,519 --> 00:38:57,788
this thing like that<font color="#E5E5E5"> you went when the</font>

597
00:38:53,920 --> 00:39:04,299
DVD<font color="#CCCCCC"> / goes it matches it doesn't produce</font>

598
00:38:57,789 --> 00:39:08,069
any any left<font color="#E5E5E5"> left</font><font color="#CCCCCC"> overs or</font><font color="#E5E5E5"> how do you</font>

599
00:39:04,299 --> 00:39:08,069
say that<font color="#E5E5E5"> when</font><font color="#CCCCCC"> it when it's</font>

600
00:39:08,920 --> 00:39:17,340
<font color="#E5E5E5">when the deviation</font><font color="#CCCCCC"> coast</font><font color="#E5E5E5"> goes</font><font color="#CCCCCC"> ok you</font>

601
00:39:13,090 --> 00:39:17,340
know that you have found a private keep

602
00:39:19,980 --> 00:39:33,660
<font color="#CCCCCC">so that was the hard</font><font color="#E5E5E5"> playback another</font>

603
00:39:29,520 --> 00:39:39,330
demo is for the<font color="#E5E5E5"> new TLS which was also</font>

604
00:39:33,660 --> 00:39:40,859
<font color="#E5E5E5">this spring</font><font color="#CCCCCC"> was it like</font><font color="#E5E5E5"> februari</font><font color="#CCCCCC"> pls</font>

605
00:39:39,330 --> 00:39:44,040
<font color="#CCCCCC">force</font><font color="#E5E5E5"> having this certificate</font>

606
00:39:40,859 --> 00:39:46,799
<font color="#E5E5E5">verification</font><font color="#CCCCCC"> park pretty much the same</font>

607
00:39:44,040 --> 00:39:54,090
problem as there was with the apples

608
00:39:46,800 --> 00:39:56,550
apples<font color="#E5E5E5"> go to</font><font color="#CCCCCC"> file</font><font color="#E5E5E5"> buck</font><font color="#CCCCCC"> doubles</font><font color="#E5E5E5"> back was</font>

609
00:39:54,090 --> 00:40:02,070
about the proof of<font color="#E5E5E5"> process and signature</font>

610
00:39:56,550 --> 00:40:03,840
and<font color="#E5E5E5"> no dls had problems with very</font>

611
00:40:02,070 --> 00:40:06,630
<font color="#CCCCCC">difficult verification of the sea a</font>

612
00:40:03,840 --> 00:40:12,180
signature<font color="#E5E5E5"> in the same certifcate and</font>

613
00:40:06,630 --> 00:40:19,460
this case is here<font color="#CCCCCC"> on going to</font><font color="#E5E5E5"> shut down</font>

614
00:40:12,180 --> 00:40:19,460
the<font color="#CCCCCC"> openssl ok</font><font color="#E5E5E5"> so</font>

615
00:40:20,810 --> 00:40:29,810
<font color="#CCCCCC">quality mature in the certificate looks</font>

616
00:40:23,720 --> 00:40:31,459
like this it is 256<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> long and we</font>

617
00:40:29,810 --> 00:40:37,400
are going to analyze that

618
00:40:31,460 --> 00:40:43,580
let's take that one<font color="#E5E5E5"> first we are going</font>

619
00:40:37,400 --> 00:40:49,460
to use or do<font color="#CCCCCC"> underfoot</font><font color="#E5E5E5"> underflow</font><font color="#CCCCCC"> anomaly</font>

620
00:40:43,580 --> 00:40:52,900
<font color="#CCCCCC">there</font><font color="#E5E5E5"> so it is only</font><font color="#CCCCCC"> 70 that's long that</font>

621
00:40:49,460 --> 00:40:52,900
signature<font color="#CCCCCC"> let's see what happens</font>

622
00:40:55,610 --> 00:41:03,410
<font color="#E5E5E5">our Father is acting now as a as a</font>

623
00:40:59,810 --> 00:41:09,020
malicious<font color="#CCCCCC"> openssl managed</font><font color="#E5E5E5"> to steal</font><font color="#CCCCCC"> his</font>

624
00:41:03,410 --> 00:41:12,920
server and you have<font color="#CCCCCC"> warmer all new news</font>

625
00:41:09,020 --> 00:41:15,950
<font color="#CCCCCC">Els client and when we try against that</font>

626
00:41:12,920 --> 00:41:17,420
it says that handshake has failed

627
00:41:15,950 --> 00:41:19,399
there<font color="#E5E5E5"> there was an error in the</font>

628
00:41:17,420 --> 00:41:22,340
certificate and the signature<font color="#CCCCCC"> was that</font>

629
00:41:19,400 --> 00:41:32,630
was invalid<font color="#E5E5E5"> but let's try a different</font>

630
00:41:22,340 --> 00:41:37,490
kind of animal<font color="#CCCCCC"> e this underflow raises</font>

631
00:41:32,630 --> 00:41:43,600
the whole signature<font color="#E5E5E5"> and when that one is</font>

632
00:41:37,490 --> 00:41:43,600
sent<font color="#CCCCCC"> through</font><font color="#E5E5E5"> the target system</font>

633
00:41:46,920 --> 00:41:54,640
<font color="#E5E5E5">the</font><font color="#CCCCCC"> handshake</font>

634
00:41:49,420 --> 00:42:01,510
<font color="#E5E5E5">complete so it fails to actually verify</font>

635
00:41:54,640 --> 00:42:06,250
that signature<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> certifcate and</font>

636
00:42:01,510 --> 00:42:10,990
when you think about that<font color="#E5E5E5"> on 1 2014</font>

637
00:42:06,250 --> 00:42:14,530
there are three big<font color="#CCCCCC"> pls</font><font color="#E5E5E5"> implemented</font>

638
00:42:10,990 --> 00:42:17,259
<font color="#E5E5E5">since</font><font color="#CCCCCC"> no dls openssl</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> apple</font><font color="#E5E5E5"> TLS and</font>

639
00:42:14,530 --> 00:42:24,220
there they all are having this kind of

640
00:42:17,260 --> 00:42:27,040
very severe vulnerabilities<font color="#E5E5E5"> it it was</font>

641
00:42:24,220 --> 00:42:31,419
quite<font color="#E5E5E5"> eye-opening experience because</font>

642
00:42:27,040 --> 00:42:37,420
<font color="#CCCCCC">what</font><font color="#E5E5E5"> what I had thought earlier that</font>

643
00:42:31,420 --> 00:42:40,089
when you are really gonna<font color="#E5E5E5"> found find</font>

644
00:42:37,420 --> 00:42:41,859
something new in the<font color="#CCCCCC"> tls implementation</font>

645
00:42:40,089 --> 00:42:44,558
<font color="#CCCCCC">is going to be something really</font>

646
00:42:41,859 --> 00:42:47,140
difficult that you have you need to have

647
00:42:44,559 --> 00:42:50,680
<font color="#E5E5E5">a huge amount</font><font color="#CCCCCC"> of calculation capacity</font>

648
00:42:47,140 --> 00:42:53,740
and<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> but then there is this kind</font>

649
00:42:50,680 --> 00:42:58,180
of stupid<font color="#CCCCCC"> theory things that you fail</font>

650
00:42:53,740 --> 00:43:02,740
the failed to verify those two

651
00:42:58,180 --> 00:43:05,950
signatures that that means everything on

652
00:43:02,740 --> 00:43:10,509
the<font color="#CCCCCC"> tls</font><font color="#E5E5E5"> if you fail to verify those</font>

653
00:43:05,950 --> 00:43:13,270
those signatures in<font color="#CCCCCC"> TLS</font><font color="#E5E5E5"> it is merely a</font>

654
00:43:10,510 --> 00:43:18,369
layer of office<font color="#E5E5E5"> keishon when doing the</font>

655
00:43:13,270 --> 00:43:19,839
management<font color="#CCCCCC"> middle addict so</font><font color="#E5E5E5"> it's it's</font>

656
00:43:18,369 --> 00:43:25,260
quite unbelievable

657
00:43:19,839 --> 00:43:25,259
why don't people<font color="#E5E5E5"> this there's stuff</font>

658
00:43:33,220 --> 00:43:44,859
<font color="#E5E5E5">and we are still having time so I</font><font color="#CCCCCC"> I so</font>

659
00:43:38,950 --> 00:43:48,790
an example about the amplification<font color="#E5E5E5"> this</font>

660
00:43:44,859 --> 00:43:50,980
isn't that bad but<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's it works as</font>

661
00:43:48,790 --> 00:43:57,880
a proof of concept for the amplification

662
00:43:50,980 --> 00:44:02,940
chick<font color="#CCCCCC"> i'm running community LSD TLS</font>

663
00:43:57,880 --> 00:44:02,940
server here

664
00:44:05,250 --> 00:44:07,970
<font color="#E5E5E5">and</font>

665
00:44:08,450 --> 00:44:20,299
<font color="#E5E5E5">like I said</font><font color="#CCCCCC"> dtls works of over UDP</font><font color="#E5E5E5"> UDP</font>

666
00:44:15,290 --> 00:44:26,089
protocol<font color="#CCCCCC"> so it is possible to rely</font><font color="#E5E5E5"> those</font>

667
00:44:20,300 --> 00:44:28,940
<font color="#CCCCCC">UD be</font><font color="#E5E5E5"> dark rums</font><font color="#CCCCCC"> through the to the</font>

668
00:44:26,089 --> 00:44:34,730
target where you which<font color="#E5E5E5"> witch you want to</font>

669
00:44:28,940 --> 00:44:40,010
<font color="#CCCCCC">be in a denial-of-service</font><font color="#E5E5E5"> attack</font><font color="#CCCCCC"> so what</font>

670
00:44:34,730 --> 00:44:45,619
we are doing here is that we are sending

671
00:44:40,010 --> 00:44:49,690
this kind of anomaly<font color="#E5E5E5"> the record is</font>

672
00:44:45,619 --> 00:44:49,690
actually only one octave long

673
00:45:07,020 --> 00:45:09,620
<font color="#E5E5E5">and we</font>

674
00:45:09,660 --> 00:45:17,220
<font color="#E5E5E5">run this against the community LSD</font><font color="#CCCCCC"> other</font>

675
00:45:12,089 --> 00:45:24,210
server we notice that we<font color="#CCCCCC"> play in the</font>

676
00:45:17,220 --> 00:45:27,209
amplification<font color="#E5E5E5"> warning</font><font color="#CCCCCC"> now let's see here</font>

677
00:45:24,210 --> 00:45:29,160
<font color="#E5E5E5">because anything only one</font><font color="#CCCCCC"> octave to the</font>

678
00:45:27,210 --> 00:45:29,760
target system and we are receiving a

679
00:45:29,160 --> 00:45:31,649
wallet

680
00:45:29,760 --> 00:45:33,030
<font color="#CCCCCC">hello every fri request from the target</font>

681
00:45:31,650 --> 00:45:39,510
system so there is actually

682
00:45:33,030 --> 00:45:42,660
<font color="#E5E5E5">amplification of 44 times we sent only</font>

683
00:45:39,510 --> 00:45:45,690
one and<font color="#CCCCCC"> received 44</font><font color="#E5E5E5"> so it is possible to</font>

684
00:45:42,660 --> 00:45:50,009
amplify<font color="#E5E5E5"> 44 times more day that through</font>

685
00:45:45,690 --> 00:45:54,000
the target system<font color="#E5E5E5"> but of course if you</font>

686
00:45:50,010 --> 00:45:56,490
calculate their<font color="#CCCCCC"> ib layer and UVB layer</font>

687
00:45:54,000 --> 00:45:59,490
then there is overhead and the

688
00:45:56,490 --> 00:46:02,578
<font color="#E5E5E5">amplification isn't that big but anyway</font>

689
00:45:59,490 --> 00:46:04,950
it it works as a<font color="#E5E5E5"> proof of concept anyway</font>

690
00:46:02,579 --> 00:46:07,650
<font color="#E5E5E5">and it's</font><font color="#CCCCCC"> clear</font><font color="#E5E5E5"> they're less reference</font>

691
00:46:04,950 --> 00:46:11,750
reference implementation so it isn't

692
00:46:07,650 --> 00:46:11,750
<font color="#E5E5E5">that but anyway</font>

693
00:46:14,460 --> 00:46:18,410
<font color="#E5E5E5">CC</font>

694
00:46:15,869 --> 00:46:18,410
<font color="#E5E5E5">thank you</font>

695
00:46:23,710 --> 00:46:32,619
<font color="#E5E5E5">there's also some questions for you</font>

696
00:46:29,680 --> 00:46:35,259
it's mostly about<font color="#CCCCCC"> do you know where you</font>

697
00:46:32,619 --> 00:46:37,420
have<font color="#CCCCCC"> deployed</font><font color="#E5E5E5"> the openssl please check</font>

698
00:46:35,260 --> 00:46:40,750
your stuff and<font color="#CCCCCC"> that's your</font><font color="#E5E5E5"> stuff</font>

699
00:46:37,420 --> 00:46:43,480
how many more anomalies have you found

700
00:46:40,750 --> 00:46:45,339
that you're still researching on<font color="#CCCCCC"> fun</font>

701
00:46:43,480 --> 00:46:45,880
more stuff<font color="#CCCCCC"> they yeah you have a</font><font color="#E5E5E5"> full</font><font color="#CCCCCC"> 20</font>

702
00:46:45,339 --> 00:46:50,950
<font color="#CCCCCC">list</font>

703
00:46:45,880 --> 00:46:54,820
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> therefore listen I say that</font><font color="#E5E5E5"> are</font>

704
00:46:50,950 --> 00:46:58,540
doing<font color="#E5E5E5"> a</font><font color="#CCCCCC"> son</font><font color="#E5E5E5"> fields of let's say</font><font color="#CCCCCC"> openssl</font>

705
00:46:54,820 --> 00:47:01,660
<font color="#E5E5E5">our new</font><font color="#CCCCCC"> jealous</font><font color="#E5E5E5"> you find everything</font><font color="#CCCCCC"> you</font>

706
00:46:58,540 --> 00:47:06,430
<font color="#CCCCCC">knew their</font><font color="#E5E5E5"> abilities there so there is</font>

707
00:47:01,660 --> 00:47:08,440
<font color="#CCCCCC">problem</font><font color="#E5E5E5"> still yeah</font><font color="#CCCCCC"> there's a lot of</font>

708
00:47:06,430 --> 00:47:11,200
<font color="#CCCCCC">problems and you</font><font color="#E5E5E5"> have a research listen</font>

709
00:47:08,440 --> 00:47:12,280
do you have a research<font color="#CCCCCC"> list that you're</font>

710
00:47:11,200 --> 00:47:15,970
going<font color="#E5E5E5"> through</font>

711
00:47:12,280 --> 00:47:19,210
no because<font color="#CCCCCC"> but as I said it's actually a</font>

712
00:47:15,970 --> 00:47:22,990
<font color="#CCCCCC">byproduct we are trying to develop our</font>

713
00:47:19,210 --> 00:47:26,560
own own tools<font color="#E5E5E5"> we haven't got that much</font>

714
00:47:22,990 --> 00:47:29,649
resource to test the target systems<font color="#CCCCCC"> so</font>

715
00:47:26,560 --> 00:47:32,470
what we are doing is to provide our

716
00:47:29,650 --> 00:47:36,760
tools for<font color="#CCCCCC"> open source projects so they</font>

717
00:47:32,470 --> 00:47:39,339
again this<font color="#E5E5E5"> their systems on their time</font>

718
00:47:36,760 --> 00:47:42,700
and we don't have the use our time to

719
00:47:39,339 --> 00:47:43,930
test<font color="#E5E5E5"> open source system so it's better</font>

720
00:47:42,700 --> 00:47:46,899
to do that way

721
00:47:43,930 --> 00:47:50,109
<font color="#E5E5E5">yeah and of course when they are using</font>

722
00:47:46,900 --> 00:47:53,410
<font color="#CCCCCC">our our</font><font color="#E5E5E5"> fathers</font><font color="#CCCCCC"> say our listing also our</font>

723
00:47:50,109 --> 00:47:55,359
systems and<font color="#E5E5E5"> we don't seem to have a</font>

724
00:47:53,410 --> 00:47:56,770
microphone and they were around here<font color="#CCCCCC"> I</font>

725
00:47:55,359 --> 00:47:59,710
<font color="#CCCCCC">don't know where they went</font>

726
00:47:56,770 --> 00:48:01,869
it was the<font color="#E5E5E5"> there</font><font color="#CCCCCC"> if you have if you have</font>

727
00:47:59,710 --> 00:48:04,260
<font color="#E5E5E5">a question</font><font color="#CCCCCC"> Sergei many</font><font color="#E5E5E5"> antique and</font>

728
00:48:01,869 --> 00:48:04,260
repeated

729
00:48:04,690 --> 00:48:21,450
<font color="#CCCCCC">okay yeah</font><font color="#E5E5E5"> yeah</font>

730
00:48:23,720 --> 00:48:30,589
<font color="#E5E5E5">amount of data there yeah but say</font><font color="#CCCCCC"> in</font>

731
00:48:28,940 --> 00:48:31,820
some cases this is supposed to happen

732
00:48:30,590 --> 00:48:37,070
right

733
00:48:31,820 --> 00:48:39,109
<font color="#E5E5E5">yeah so how do you distinguish in the</font>

734
00:48:37,070 --> 00:48:40,849
definition between you know the case

735
00:48:39,109 --> 00:48:46,130
<font color="#CCCCCC">when this is supposed to happen vs not</font>

736
00:48:40,849 --> 00:48:49,010
<font color="#E5E5E5">well it doesn't matter if it's supposed</font>

737
00:48:46,130 --> 00:48:51,920
to happen if<font color="#E5E5E5"> that does amplify then the</font>

738
00:48:49,010 --> 00:48:55,040
distributed<font color="#E5E5E5"> relying the</font>

739
00:48:51,920 --> 00:49:00,290
<font color="#CCCCCC">denial-of-service attack</font><font color="#E5E5E5"> is possible you</font>

740
00:48:55,040 --> 00:49:02,869
can<font color="#CCCCCC"> spot the source address so what-what</font>

741
00:49:00,290 --> 00:49:05,420
<font color="#E5E5E5">actual implementations for example</font><font color="#CCCCCC"> pls</font>

742
00:49:02,869 --> 00:49:08,480
<font color="#E5E5E5">there is having they they are having</font>

743
00:49:05,420 --> 00:49:10,700
extra<font color="#E5E5E5"> message hello</font><font color="#CCCCCC"> arif i request with</font>

744
00:49:08,480 --> 00:49:13,849
which is quite small compared to the

745
00:49:10,700 --> 00:49:17,000
normal TLS handshake when where the

746
00:49:13,849 --> 00:49:19,609
server is actually sending back<font color="#E5E5E5"> to</font>

747
00:49:17,000 --> 00:49:24,200
certifcate and large messages like that

748
00:49:19,609 --> 00:49:27,890
so it is for preventing<font color="#E5E5E5"> big</font>

749
00:49:24,200 --> 00:49:31,430
amplification<font color="#CCCCCC"> there</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> it sends back the</font>

750
00:49:27,890 --> 00:49:35,779
relatively small hello<font color="#CCCCCC"> arif i</font><font color="#E5E5E5"> request</font>

751
00:49:31,430 --> 00:49:38,330
and if that receiver<font color="#E5E5E5"> there is answering</font>

752
00:49:35,780 --> 00:49:41,930
<font color="#E5E5E5">to</font><font color="#CCCCCC"> then that we know that it's the</font>

753
00:49:38,330 --> 00:49:44,480
actual<font color="#E5E5E5"> it doesn't do the right relying</font>

754
00:49:41,930 --> 00:49:48,200
<font color="#E5E5E5">distributed right so you model the</font>

755
00:49:44,480 --> 00:49:50,990
protocol in terms of length of response

756
00:49:48,200 --> 00:49:52,640
<font color="#E5E5E5">to your question responses because you</font>

757
00:49:50,990 --> 00:49:54,950
see I was thinking that if you<font color="#CCCCCC"> were</font><font color="#E5E5E5"> to</font>

758
00:49:52,640 --> 00:49:58,040
<font color="#CCCCCC">drive</font><font color="#E5E5E5"> that model automatically right and</font>

759
00:49:54,950 --> 00:49:59,868
then you know a typical HTTP<font color="#CCCCCC"> request</font>

760
00:49:58,040 --> 00:50:02,720
yeah<font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean usually it gets that</font><font color="#CCCCCC"> why</font>

761
00:49:59,869 --> 00:50:06,589
<font color="#E5E5E5">they're there but it is it isn't that</font>

762
00:50:02,720 --> 00:50:10,368
<font color="#CCCCCC">could check on PCP</font><font color="#E5E5E5"> because like you said</font>

763
00:50:06,589 --> 00:50:12,259
<font color="#E5E5E5">HTTP you send a relatively small</font><font color="#CCCCCC"> request</font>

764
00:50:10,369 --> 00:50:15,710
and you get the whole website back

765
00:50:12,260 --> 00:50:18,650
through<font color="#E5E5E5"> it is meaningless there but on</font>

766
00:50:15,710 --> 00:50:21,230
top of the UDP<font color="#CCCCCC"> it is always possible if</font>

767
00:50:18,650 --> 00:50:23,630
the first message<font color="#E5E5E5"> if the first response</font>

768
00:50:21,230 --> 00:50:27,140
is bigger than the<font color="#E5E5E5"> request you get the</font>

769
00:50:23,630 --> 00:50:29,300
amplification<font color="#CCCCCC"> IC</font><font color="#E5E5E5"> IC so it doesn't work</font>

770
00:50:27,140 --> 00:50:32,029
<font color="#E5E5E5">for streams but it has worked for</font><font color="#CCCCCC"> dat</font>

771
00:50:29,300 --> 00:50:32,630
<font color="#CCCCCC">against</font><font color="#E5E5E5"> unreliable channel</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> is</font>

772
00:50:32,030 --> 00:50:33,329
<font color="#E5E5E5">possible</font>

773
00:50:32,630 --> 00:50:38,219
<font color="#CCCCCC">great</font>

774
00:50:33,329 --> 00:50:41,489
<font color="#CCCCCC">Thank You</font><font color="#E5E5E5"> wasn't very interesting</font><font color="#CCCCCC"> two</font>

775
00:50:38,219 --> 00:50:45,479
more questions

776
00:50:41,489 --> 00:50:50,059
<font color="#E5E5E5">no</font><font color="#CCCCCC"> all right in that case thank you very</font>

777
00:50:45,479 --> 00:50:50,058
much<font color="#CCCCCC"> i</font><font color="#E5E5E5"> think and</font>

