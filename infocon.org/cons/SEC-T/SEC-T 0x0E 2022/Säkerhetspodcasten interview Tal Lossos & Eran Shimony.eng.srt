1
00:00:03,620 --> 00:00:06,540
Sophie we are very happy to be here in

2
00:00:06,540 --> 00:00:08,760
the podcast of SEC T presenting our

3
00:00:08,760 --> 00:00:10,700
first talk in a wonderful interview

4
00:00:10,700 --> 00:00:15,059
followed by Peter I'm Peter and Richard

5
00:00:15,059 --> 00:00:17,760
from seconds for costume and uh we're

6
00:00:17,760 --> 00:00:21,020
happy to be here with uh you guys from

7
00:00:21,020 --> 00:00:23,840
tal and uh

8
00:00:23,840 --> 00:00:26,760
yeah why can't I remember that it's it's

9
00:00:26,760 --> 00:00:30,240
awesome awful awful no uh really nice to

10
00:00:30,240 --> 00:00:32,820
talk to you today and uh thank you for a

11
00:00:32,820 --> 00:00:35,640
good talk it was uh it was a really nice

12
00:00:35,640 --> 00:00:37,200
start

13
00:00:37,200 --> 00:00:40,379
um for the conference I think we um

14
00:00:40,379 --> 00:00:42,780
uh we heard you talk about

15
00:00:42,780 --> 00:00:46,020
um finding vulnerabilities in uh in

16
00:00:46,020 --> 00:00:49,980
kernel and looking at closed sourced and

17
00:00:49,980 --> 00:00:51,600
and open source and some of the

18
00:00:51,600 --> 00:00:54,059
methodologies behind that

19
00:00:54,059 --> 00:00:56,219
um could you uh could you elaborate a

20
00:00:56,219 --> 00:00:58,379
little bit about you know what what took

21
00:00:58,379 --> 00:01:00,120
you into

22
00:01:00,120 --> 00:01:01,500
um vulnerability research and

23
00:01:01,500 --> 00:01:04,559
specifically perhaps the kernel okay so

24
00:01:04,559 --> 00:01:06,360
great thank you for having us and we are

25
00:01:06,360 --> 00:01:07,799
very happy to

26
00:01:07,799 --> 00:01:09,900
do our talk and present our research and

27
00:01:09,900 --> 00:01:11,760
of course to be done with it that's good

28
00:01:11,760 --> 00:01:13,920
so we are mostly focused on the

29
00:01:13,920 --> 00:01:17,159
discovery of zero days yeah and both of

30
00:01:17,159 --> 00:01:19,740
us like level 11 and the kernel itself

31
00:01:19,740 --> 00:01:22,020
and in the past we did a lot of closed

32
00:01:22,020 --> 00:01:24,360
Source research towards the windows

33
00:01:24,360 --> 00:01:26,759
kernel and now it's time for the Linux

34
00:01:26,759 --> 00:01:29,700
kernel which I'll specialize and will

35
00:01:29,700 --> 00:01:32,340
expand yes so I originally came indeed I

36
00:01:32,340 --> 00:01:36,479
I did so in many types of jobs but I

37
00:01:36,479 --> 00:01:38,640
really liked I did for a long time a low

38
00:01:38,640 --> 00:01:41,400
level Linux development yeah so a very

39
00:01:41,400 --> 00:01:44,100
internal development and maybe focusing

40
00:01:44,100 --> 00:01:46,920
on security perspectives and not a long

41
00:01:46,920 --> 00:01:49,560
well not a long time ago I discovered

42
00:01:49,560 --> 00:01:51,000
all the topic of a vulnerability

43
00:01:51,000 --> 00:01:53,159
research and um

44
00:01:53,159 --> 00:01:55,140
I think because I like the security

45
00:01:55,140 --> 00:01:57,360
topic it's really nice to know like to

46
00:01:57,360 --> 00:01:59,220
finding vulnerabilities it's uh it's

47
00:01:59,220 --> 00:02:00,780
like going around for the development

48
00:02:00,780 --> 00:02:03,420
side and then yeah that's basically it

49
00:02:03,420 --> 00:02:05,100
so for him it was very natural because

50
00:02:05,100 --> 00:02:07,799
he is a very strong uh background at

51
00:02:07,799 --> 00:02:09,780
kernel development also kind of model

52
00:02:09,780 --> 00:02:11,879
development and for me it was very easy

53
00:02:11,879 --> 00:02:13,980
because I started as a developer as a

54
00:02:13,980 --> 00:02:15,720
model developer mostly and then went

55
00:02:15,720 --> 00:02:18,120
immediately to vulnerable vulnerability

56
00:02:18,120 --> 00:02:20,940
research so it was a very good match we

57
00:02:20,940 --> 00:02:23,099
also also share an office

58
00:02:23,099 --> 00:02:25,680
I hear is terrible music he hears my

59
00:02:25,680 --> 00:02:27,260
fantastic music

60
00:02:27,260 --> 00:02:29,220
sounds like a good day at the office

61
00:02:29,220 --> 00:02:32,099
though I hear Swedish music so it's okay

62
00:02:32,099 --> 00:02:35,280
yeah you you were uh you were talking

63
00:02:35,280 --> 00:02:37,379
about some of the the methodology that

64
00:02:37,379 --> 00:02:39,120
goes behind finding these uh

65
00:02:39,120 --> 00:02:40,860
vulnerabilities and and you were

66
00:02:40,860 --> 00:02:43,680
touching on the subject of of uh fuzzers

67
00:02:43,680 --> 00:02:47,040
uh but you didn't sort of weave that

68
00:02:47,040 --> 00:02:50,160
into the talk and and you were talking

69
00:02:50,160 --> 00:02:52,680
about dumb fuzzers and then intelligent

70
00:02:52,680 --> 00:02:55,440
or AI driven or somewhat intelligent

71
00:02:55,440 --> 00:02:58,379
frustration or Advanced fuzzers

72
00:02:58,379 --> 00:03:01,019
um when when would you

73
00:03:01,019 --> 00:03:04,860
sort of apply the one or the other you

74
00:03:04,860 --> 00:03:06,080
want to take this

75
00:03:06,080 --> 00:03:08,700
okay so previously in last year we

76
00:03:08,700 --> 00:03:10,920
presented our talk on a fuzzing Windows

77
00:03:10,920 --> 00:03:13,319
drivers we are using a KFL KFL is a very

78
00:03:13,319 --> 00:03:15,360
Advanced fuzzer and complicated to set

79
00:03:15,360 --> 00:03:17,879
it up actually just the mere usage of it

80
00:03:17,879 --> 00:03:20,099
like to set it up took us around two

81
00:03:20,099 --> 00:03:22,800
months or so and we did not have enough

82
00:03:22,800 --> 00:03:25,620
time for that now and also we had the

83
00:03:25,620 --> 00:03:27,720
source code so it was a lot easier to

84
00:03:27,720 --> 00:03:29,819
understand what goes behind of the

85
00:03:29,819 --> 00:03:30,739
things

86
00:03:30,739 --> 00:03:35,099
also as you will yes and if I mad yes it

87
00:03:35,099 --> 00:03:37,319
um basically we didn't have to to use

88
00:03:37,319 --> 00:03:39,239
the fuzzers because

89
00:03:39,239 --> 00:03:41,760
um it took it took us very short time to

90
00:03:41,760 --> 00:03:43,860
find the vulnerabilities and only from

91
00:03:43,860 --> 00:03:46,200
looking at the source code and by as we

92
00:03:46,200 --> 00:03:47,519
explained like we have a couple of

93
00:03:47,519 --> 00:03:50,099
methodologies to it and here in this uh

94
00:03:50,099 --> 00:03:53,159
this project we use the type of that we

95
00:03:53,159 --> 00:03:55,680
we check the syncs first we checked

96
00:03:55,680 --> 00:03:58,560
other vulnerable uh we can say functions

97
00:03:58,560 --> 00:04:00,239
that we have even found very easily the

98
00:04:00,239 --> 00:04:02,519
vulnerabilities so we just didn't have

99
00:04:02,519 --> 00:04:06,120
to use um so don't further suit us great

100
00:04:06,120 --> 00:04:08,220
because let's examine the software like

101
00:04:08,220 --> 00:04:12,060
it's like a tree a code path so if you

102
00:04:12,060 --> 00:04:14,220
have a direct line it's very easy to use

103
00:04:14,220 --> 00:04:16,079
something that is sequential like a dumb

104
00:04:16,079 --> 00:04:19,199
fuzzer then then in the cases that you

105
00:04:19,199 --> 00:04:20,880
need to spread out like a tree then a

106
00:04:20,880 --> 00:04:24,180
full-blown fuzzer it's more useful cool

107
00:04:24,180 --> 00:04:27,600
yeah because I remember if I

108
00:04:27,600 --> 00:04:29,580
can take us back to last year you were

109
00:04:29,580 --> 00:04:31,500
talking about automating you know

110
00:04:31,500 --> 00:04:33,540
fussing of Kernel drivers and all the

111
00:04:33,540 --> 00:04:35,100
hassle you had to go through that that

112
00:04:35,100 --> 00:04:37,500
of course does not apply when you have

113
00:04:37,500 --> 00:04:39,720
the source code it's a totally different

114
00:04:39,720 --> 00:04:42,060
ball game sometimes you need it but in

115
00:04:42,060 --> 00:04:45,300
this case you really didn't yeah cool

116
00:04:45,300 --> 00:04:46,740
no so

117
00:04:46,740 --> 00:04:50,820
um it was a sort of a spectacular uh you

118
00:04:50,820 --> 00:04:53,820
know thing about looking at these uh

119
00:04:53,820 --> 00:04:56,639
peripherals that I guess mostly Gamers

120
00:04:56,639 --> 00:04:59,220
like to add to their computers and I was

121
00:04:59,220 --> 00:05:01,080
I was you know what really cracked me up

122
00:05:01,080 --> 00:05:04,560
because I I recognized your face and and

123
00:05:04,560 --> 00:05:06,320
and when when

124
00:05:06,320 --> 00:05:08,520
they asked you do you want to use the

125
00:05:08,520 --> 00:05:10,259
clicker and I was like he's not gonna

126
00:05:10,259 --> 00:05:12,780
let anyone plug in the USB drive in his

127
00:05:12,780 --> 00:05:15,000
computer and we exactly showed the

128
00:05:15,000 --> 00:05:18,620
reason why you shoot it like at least

129
00:05:18,740 --> 00:05:22,979
I was like that was funny no

130
00:05:22,979 --> 00:05:25,440
um so anyway but how can we

131
00:05:25,440 --> 00:05:28,199
um as as

132
00:05:28,199 --> 00:05:31,259
sort of blue teamers

133
00:05:31,259 --> 00:05:33,720
use the the types of things that you

134
00:05:33,720 --> 00:05:35,220
guys do

135
00:05:35,220 --> 00:05:37,259
that's an excellent question actually

136
00:05:37,259 --> 00:05:39,479
yeah so the obvious thing is to update

137
00:05:39,479 --> 00:05:41,580
whatever is possible yeah yeah that's

138
00:05:41,580 --> 00:05:43,500
very ordinary

139
00:05:43,500 --> 00:05:46,080
and also tell mentioned that Razer is

140
00:05:46,080 --> 00:05:48,060
one Razer not the razor is one of the

141
00:05:48,060 --> 00:05:50,820
most popular vendors out there still it

142
00:05:50,820 --> 00:05:52,080
seems that

143
00:05:52,080 --> 00:05:53,400
it's not enough

144
00:05:53,400 --> 00:05:56,100
but I mean you have to look at from

145
00:05:56,100 --> 00:05:57,840
their side I mean they're they're all

146
00:05:57,840 --> 00:06:00,780
about shiny lights and and rainbow

147
00:06:00,780 --> 00:06:03,060
colors and all that of course so of

148
00:06:03,060 --> 00:06:04,699
course

149
00:06:04,699 --> 00:06:09,479
update whatever you can yeah and yeah in

150
00:06:09,479 --> 00:06:11,220
this case there is the classic mismatch

151
00:06:11,220 --> 00:06:14,759
of security and new features and shiny

152
00:06:14,759 --> 00:06:18,360
and brighty features now it's okay the

153
00:06:18,360 --> 00:06:20,280
the bugs were patched completely yeah

154
00:06:20,280 --> 00:06:22,740
and in a very good way you like the

155
00:06:22,740 --> 00:06:24,060
communication was fantastic with them

156
00:06:24,060 --> 00:06:25,380
all right again I have to mention again

157
00:06:25,380 --> 00:06:27,600
that open razor is indeed an operations

158
00:06:27,600 --> 00:06:31,440
project and it's not um it's not behind

159
00:06:31,440 --> 00:06:33,120
the Razer company it's like an operation

160
00:06:33,120 --> 00:06:34,259
software project with a lot of

161
00:06:34,259 --> 00:06:36,960
Maintenance yes and after again finding

162
00:06:36,960 --> 00:06:38,639
the vulnerabilities the communication

163
00:06:38,639 --> 00:06:40,560
with the main maintenance was very good

164
00:06:40,560 --> 00:06:42,300
and I've sent in an email about

165
00:06:42,300 --> 00:06:45,000
regarding the monopieties and where they

166
00:06:45,000 --> 00:06:46,800
fix it very very quickly but we can give

167
00:06:46,800 --> 00:06:48,660
a shout out to our team member Omar

168
00:06:48,660 --> 00:06:50,940
safati which found like

169
00:06:50,940 --> 00:06:53,699
well it's almost similar type of bug on

170
00:06:53,699 --> 00:06:55,319
Windows on the Windows driver which is

171
00:06:55,319 --> 00:06:57,300
the official driver of Fraser that

172
00:06:57,300 --> 00:07:00,180
allowed him to run code in the kernel

173
00:07:00,180 --> 00:07:03,539
directly from low privileged user yes so

174
00:07:03,539 --> 00:07:05,699
it seems in some cases the code quality

175
00:07:05,699 --> 00:07:07,919
is a bit lacking in those peripheral

176
00:07:07,919 --> 00:07:10,560
devices so what's the solution it says

177
00:07:10,560 --> 00:07:14,180
uh monolithic kernel

178
00:07:14,180 --> 00:07:16,880
maybe yes

179
00:07:16,880 --> 00:07:19,440
something okay

180
00:07:19,440 --> 00:07:21,180
laugh at me because I'm a really

181
00:07:21,180 --> 00:07:23,460
Advocate not an advocate sorry a hater

182
00:07:23,460 --> 00:07:25,199
of this operating system make is a lot

183
00:07:25,199 --> 00:07:28,319
safer and you cannot have like drivers

184
00:07:28,319 --> 00:07:30,720
like kernel drivers in Mac in the

185
00:07:30,720 --> 00:07:33,240
mechanical for instance so it reduces

186
00:07:33,240 --> 00:07:35,639
the attack surface substantially yeah

187
00:07:35,639 --> 00:07:37,940
also there is a small

188
00:07:37,940 --> 00:07:40,800
difference that in Windows you have your

189
00:07:40,800 --> 00:07:43,259
driver to be designed and Linux you do

190
00:07:43,259 --> 00:07:46,199
not as a result it depends ah in most

191
00:07:46,199 --> 00:07:48,720
cases come on yes so in so as a result

192
00:07:48,720 --> 00:07:51,240
in most cases the code quality is a bit

193
00:07:51,240 --> 00:07:53,460
lower yeah in the link side within the

194
00:07:53,460 --> 00:07:55,620
windows but yeah there will be always

195
00:07:55,620 --> 00:07:59,039
bugs and we want them to be fixed as

196
00:07:59,039 --> 00:08:00,599
soon as possible and to raise the

197
00:08:00,599 --> 00:08:04,560
awareness and I think people with enough

198
00:08:04,560 --> 00:08:07,500
good knowledge of internals and some

199
00:08:07,500 --> 00:08:09,599
exploitation could also find similar

200
00:08:09,599 --> 00:08:13,199
types of bugs as well yeah so one

201
00:08:13,199 --> 00:08:16,500
very common argument there's uh I mean

202
00:08:16,500 --> 00:08:18,539
open source which is close so much there

203
00:08:18,539 --> 00:08:22,379
there's all these different Wars and so

204
00:08:22,379 --> 00:08:23,819
um

205
00:08:23,819 --> 00:08:26,460
so you you have some experience like

206
00:08:26,460 --> 00:08:29,160
that's one set of data points like

207
00:08:29,160 --> 00:08:32,520
uh where you found much availabilities

208
00:08:32,520 --> 00:08:35,458
versus low vulnerabilities

209
00:08:35,458 --> 00:08:37,020
um

210
00:08:37,020 --> 00:08:39,719
like can you measure this in some way

211
00:08:39,719 --> 00:08:41,700
like yeah

212
00:08:41,700 --> 00:08:42,419
um

213
00:08:42,419 --> 00:08:45,560
can you prove or or have something

214
00:08:45,560 --> 00:08:48,899
approve but have some sort of model for

215
00:08:48,899 --> 00:08:50,700
knowing that

216
00:08:50,700 --> 00:08:52,740
do you think the closed doors version

217
00:08:52,740 --> 00:08:57,000
has fewer bugs right but but do we know

218
00:08:57,000 --> 00:08:59,940
that or is it just harder to find them

219
00:08:59,940 --> 00:09:02,220
because they enclosed Source

220
00:09:02,220 --> 00:09:05,339
um so in my opinion it's very well it's

221
00:09:05,339 --> 00:09:08,100
it's my opinion from but from what I've

222
00:09:08,100 --> 00:09:11,040
experienced that in open source again

223
00:09:11,040 --> 00:09:12,839
from my experience there's less

224
00:09:12,839 --> 00:09:14,640
vulnerabilities than in closed stores

225
00:09:14,640 --> 00:09:17,459
but again it doesn't really mean like it

226
00:09:17,459 --> 00:09:18,839
depends on what you're searching and

227
00:09:18,839 --> 00:09:21,420
like whose company developed it but in

228
00:09:21,420 --> 00:09:24,000
general again only because it's open

229
00:09:24,000 --> 00:09:26,220
source and everyone can check it out and

230
00:09:26,220 --> 00:09:29,279
read the code and commit code into it so

231
00:09:29,279 --> 00:09:30,899
from what I've seen in open source

232
00:09:30,899 --> 00:09:32,880
there's lecture nobilities but again

233
00:09:32,880 --> 00:09:34,560
there's always vulnerabilities yeah yeah

234
00:09:34,560 --> 00:09:36,420
I would I would like to say that I think

235
00:09:36,420 --> 00:09:39,120
that in the oil in the popular projects

236
00:09:39,120 --> 00:09:40,440
in open source there are a lot of people

237
00:09:40,440 --> 00:09:42,540
looking at it so even in the before

238
00:09:42,540 --> 00:09:44,120
release

239
00:09:44,120 --> 00:09:47,399
yeah people people like check it a lot

240
00:09:47,399 --> 00:09:49,260
and they communicate pretty well on

241
00:09:49,260 --> 00:09:51,480
closer so ever it's not you usually the

242
00:09:51,480 --> 00:09:54,000
case now once you have the product like

243
00:09:54,000 --> 00:09:55,740
you have the binary of an open source

244
00:09:55,740 --> 00:09:57,899
Visa closers I think then closed Source

245
00:09:57,899 --> 00:10:00,240
becomes a lot more tricky because you'll

246
00:10:00,240 --> 00:10:02,220
like the source code of course and so on

247
00:10:02,220 --> 00:10:04,860
and so on and also some companies

248
00:10:04,860 --> 00:10:08,220
without saying names of apples like one

249
00:10:08,220 --> 00:10:10,320
two obfuscate their code and make things

250
00:10:10,320 --> 00:10:12,300
a lot harder it doesn't mean the bugs

251
00:10:12,300 --> 00:10:14,459
are not there it is a bit more complex

252
00:10:14,459 --> 00:10:17,040
to find them but I think in my point of

253
00:10:17,040 --> 00:10:19,019
view that visual allows security

254
00:10:19,019 --> 00:10:20,880
researchers and developers to understand

255
00:10:20,880 --> 00:10:24,480
the code base as best to eliminate and

256
00:10:24,480 --> 00:10:26,940
find more bugs yes and I just will add

257
00:10:26,940 --> 00:10:29,040
something to it that even

258
00:10:29,040 --> 00:10:31,320
companies with closed source project

259
00:10:31,320 --> 00:10:33,420
even if we say that you guys have

260
00:10:33,420 --> 00:10:35,040
vulnerabilities in your drivers for

261
00:10:35,040 --> 00:10:36,300
example say no we've done different

262
00:10:36,300 --> 00:10:38,640
abilities and then there'll be once like

263
00:10:38,640 --> 00:10:40,620
look make it clear that you don't have

264
00:10:40,620 --> 00:10:42,120
security that's a great thing some

265
00:10:42,120 --> 00:10:44,160
vendors like the security policy the

266
00:10:44,160 --> 00:10:47,459
security Discord disclosure uh process

267
00:10:47,459 --> 00:10:48,899
we can say that we have been in

268
00:10:48,899 --> 00:10:50,880
communication more than two dozen uh

269
00:10:50,880 --> 00:10:53,339
different uh vendors and there is a

270
00:10:53,339 --> 00:10:55,920
discrepancy between the way vendors

271
00:10:55,920 --> 00:10:59,519
treat your findings yeah even if they're

272
00:10:59,519 --> 00:11:02,399
fully proven with a POC yes some vendors

273
00:11:02,399 --> 00:11:03,959
really like happy that you communicated

274
00:11:03,959 --> 00:11:06,300
with them and very acting fast and some

275
00:11:06,300 --> 00:11:08,100
areas don't reply to you and say no we

276
00:11:08,100 --> 00:11:10,200
don't have vulnerabilities and just go

277
00:11:10,200 --> 00:11:11,399
away yeah

278
00:11:11,399 --> 00:11:13,440
yeah but that I only think I think that

279
00:11:13,440 --> 00:11:15,180
is a universal problem it doesn't matter

280
00:11:15,180 --> 00:11:17,220
if it's closed Source or open well open

281
00:11:17,220 --> 00:11:19,320
source might be different because you

282
00:11:19,320 --> 00:11:21,000
know anyone can go there and look at the

283
00:11:21,000 --> 00:11:22,560
code I think in open source the

284
00:11:22,560 --> 00:11:24,839
community is better than in a closed

285
00:11:24,839 --> 00:11:26,100
Source but but when it comes to

286
00:11:26,100 --> 00:11:28,140
different companies I think you're gonna

287
00:11:28,140 --> 00:11:32,040
find as many responses to a

288
00:11:32,040 --> 00:11:33,899
responsible disclosure as you're going

289
00:11:33,899 --> 00:11:36,300
to find companies because they are

290
00:11:36,300 --> 00:11:38,760
they're handling handling things very

291
00:11:38,760 --> 00:11:42,899
differently at companies I agree cool so

292
00:11:42,899 --> 00:11:44,760
what what talks are you looking forward

293
00:11:44,760 --> 00:11:47,220
to now you've uh you know you've got

294
00:11:47,220 --> 00:11:50,579
your thing all done I have my answers

295
00:11:50,579 --> 00:11:53,100
read so I'm I'm really

296
00:11:53,100 --> 00:11:56,160
um I worked a lot with the evpf for

297
00:11:56,160 --> 00:11:58,079
Linux and I know it quite well with the

298
00:11:58,079 --> 00:11:59,640
internals of it and everything about it

299
00:11:59,640 --> 00:12:01,920
and I saw that there is a talk about

300
00:12:01,920 --> 00:12:03,779
evpf in the windows and I really look

301
00:12:03,779 --> 00:12:06,839
forward Richard Johnson that I took some

302
00:12:06,839 --> 00:12:08,700
inspiration because this is an expert of

303
00:12:08,700 --> 00:12:11,339
fuzzing so it will be pretty interesting

304
00:12:11,339 --> 00:12:14,579
also the purple Pizza yes because Edwin

305
00:12:14,579 --> 00:12:18,000
is a great uh presenter and also the

306
00:12:18,000 --> 00:12:19,700
Tesla Bluetooth

307
00:12:19,700 --> 00:12:23,540
but I haven't seen it

308
00:12:25,860 --> 00:12:27,779
anyway thanks for taking the time to

309
00:12:27,779 --> 00:12:30,000
talk to us thank you guys um hope you

310
00:12:30,000 --> 00:12:31,440
enjoy the rest of the conference thank

311
00:12:31,440 --> 00:12:35,839
you very much you too thank you so much

