1
00:00:04,460 --> 00:00:07,020
so I'll begin by tearing off this

2
00:00:07,020 --> 00:00:09,240
obligatory plaster my name is Alvin

3
00:00:09,240 --> 00:00:12,559
bjerk I work for a company called River

4
00:00:12,559 --> 00:00:15,960
we do design Automation and formal

5
00:00:15,960 --> 00:00:18,660
verification of the signaling systems

6
00:00:18,660 --> 00:00:21,240
for Railway and Metro

7
00:00:21,240 --> 00:00:23,820
which means that technically I'm in the

8
00:00:23,820 --> 00:00:25,320
field of

9
00:00:25,320 --> 00:00:27,359
computer safety and not computer

10
00:00:27,359 --> 00:00:29,160
security

11
00:00:29,160 --> 00:00:31,320
but as it happens in Swedish these two

12
00:00:31,320 --> 00:00:33,000
terms coincide so I still think it's

13
00:00:33,000 --> 00:00:35,960
okay for me to be here

14
00:00:36,719 --> 00:00:39,739
I'm here to talk about the 2018

15
00:00:39,739 --> 00:00:41,520
badge challenge

16
00:00:41,520 --> 00:00:44,760
but 2018 is four years ago so why am I

17
00:00:44,760 --> 00:00:46,920
only talking about this now

18
00:00:46,920 --> 00:00:48,559
well

19
00:00:48,559 --> 00:00:51,480
the challenge was released during sexy

20
00:00:51,480 --> 00:00:54,780
Beyond on a small NFC tag which looked

21
00:00:54,780 --> 00:00:58,039
like this if you can see it

22
00:00:58,079 --> 00:01:00,600
and then for a year nobody solved with

23
00:01:00,600 --> 00:01:01,379
it

24
00:01:01,379 --> 00:01:04,619
personal I didn't even look at it

25
00:01:04,619 --> 00:01:07,020
then safety compute came around with its

26
00:01:07,020 --> 00:01:08,280
own badge challenge

27
00:01:08,280 --> 00:01:10,799
but the old one was also re-released in

28
00:01:10,799 --> 00:01:12,299
post reform

29
00:01:12,299 --> 00:01:15,680
and this caught my attention

30
00:01:16,740 --> 00:01:19,260
I tried my hand at both challenges but

31
00:01:19,260 --> 00:01:22,200
didn't get very far in either one

32
00:01:22,200 --> 00:01:24,659
but then half a year later around the

33
00:01:24,659 --> 00:01:26,340
time the spring Pub would usually be

34
00:01:26,340 --> 00:01:27,119
held

35
00:01:27,119 --> 00:01:29,340
it occurred to me that my new employer

36
00:01:29,340 --> 00:01:32,100
might not want to pay for my ticket for

37
00:01:32,100 --> 00:01:34,020
exactly next year

38
00:01:34,020 --> 00:01:35,939
because before then I'd always bought a

39
00:01:35,939 --> 00:01:39,720
student ticket which was cheap enough

40
00:01:39,720 --> 00:01:41,820
so I figured maybe my best chance at

41
00:01:41,820 --> 00:01:43,740
getting back here was to earn a free

42
00:01:43,740 --> 00:01:46,920
ticket and I gave the chance another go

43
00:01:46,920 --> 00:01:50,880
and eventually succeeded in solving it

44
00:01:50,880 --> 00:01:53,220
and then kovitz truck

45
00:01:53,220 --> 00:01:55,979
and then last year I couldn't attend but

46
00:01:55,979 --> 00:01:59,179
now it is finally go time

47
00:02:00,119 --> 00:02:02,939
so let's look at the challenge uh and by

48
00:02:02,939 --> 00:02:05,219
by the way this is like a typical slide

49
00:02:05,219 --> 00:02:06,899
it's some code on the top and then

50
00:02:06,899 --> 00:02:08,580
outputs below it

51
00:02:08,580 --> 00:02:11,038
I will not discuss the code at all

52
00:02:11,038 --> 00:02:15,060
and also I tend to display linear data

53
00:02:15,060 --> 00:02:16,800
in tabular form

54
00:02:16,800 --> 00:02:18,780
so keep in mind that the shape is

55
00:02:18,780 --> 00:02:20,640
completely arbitrary and made to fit the

56
00:02:20,640 --> 00:02:21,780
slides

57
00:02:21,780 --> 00:02:25,459
so this is all one string

58
00:02:25,500 --> 00:02:27,480
the challenge had two parts it begins

59
00:02:27,480 --> 00:02:29,940
with a text on community ecology from

60
00:02:29,940 --> 00:02:32,459
which some letters are missing

61
00:02:32,459 --> 00:02:35,459
and then below that is a puzzle with

62
00:02:35,459 --> 00:02:36,959
actual puzzle input within square

63
00:02:36,959 --> 00:02:39,440
brackets

64
00:02:41,220 --> 00:02:44,060
I began by

65
00:02:44,060 --> 00:02:46,260
painstakingly figuring out what the

66
00:02:46,260 --> 00:02:48,840
missing letters ought to be only later

67
00:02:48,840 --> 00:02:51,780
to find out that the text the complete

68
00:02:51,780 --> 00:02:53,340
text was available on web page so I

69
00:02:53,340 --> 00:02:55,200
could just have a look there

70
00:02:55,200 --> 00:02:59,179
but anyway this is what I found

71
00:03:00,360 --> 00:03:04,080
and this contains too few vowels to be a

72
00:03:04,080 --> 00:03:06,300
transposition and it's also not the

73
00:03:06,300 --> 00:03:08,580
Caesar Cipher or other simple Cipher I

74
00:03:08,580 --> 00:03:11,060
could think of

75
00:03:11,099 --> 00:03:13,620
so moving on to the

76
00:03:13,620 --> 00:03:15,720
actual puzzle

77
00:03:15,720 --> 00:03:18,540
it in turn had two parts it began with a

78
00:03:18,540 --> 00:03:21,000
string of four symbols and then a series

79
00:03:21,000 --> 00:03:24,379
of hexadecimal digits

80
00:03:25,140 --> 00:03:27,300
looking at the digits it seemed clear

81
00:03:27,300 --> 00:03:29,519
that they should be grouped 2 and 2 and

82
00:03:29,519 --> 00:03:34,099
interpreted as a bite-sized numbers

83
00:03:36,180 --> 00:03:38,819
and staring at this long enough after a

84
00:03:38,819 --> 00:03:41,340
while uh faint pattern emerge

85
00:03:41,340 --> 00:03:43,739
so if we take

86
00:03:43,739 --> 00:03:46,860
the numbers and group them pairwise

87
00:03:46,860 --> 00:03:49,560
like this so here we have three one

88
00:03:49,560 --> 00:03:52,140
first pair then two one two one one one

89
00:03:52,140 --> 00:03:54,900
two two and so on

90
00:03:54,900 --> 00:03:57,599
then it seems that the

91
00:03:57,599 --> 00:04:01,080
numbers is composed of Two interleaved

92
00:04:01,080 --> 00:04:03,840
subsequences the One going you know in

93
00:04:03,840 --> 00:04:06,599
top of the major three rows

94
00:04:06,599 --> 00:04:09,180
beginning three two two one two and so

95
00:04:09,180 --> 00:04:09,900
on

96
00:04:09,900 --> 00:04:12,480
and the one beginning one one one one

97
00:04:12,480 --> 00:04:16,459
one two and so on

98
00:04:18,600 --> 00:04:21,060
and then in the bottom left there is an

99
00:04:21,060 --> 00:04:25,400
outlier 20 more on this later

100
00:04:25,500 --> 00:04:27,419
it should also be noted that they're

101
00:04:27,419 --> 00:04:28,620
exactly

102
00:04:28,620 --> 00:04:30,720
twice as many numbers as they were

103
00:04:30,720 --> 00:04:35,040
missing letters in the community text

104
00:04:35,040 --> 00:04:38,040
but this was about as far as I got the

105
00:04:38,040 --> 00:04:40,580
first time around

106
00:04:40,860 --> 00:04:42,780
then half a year later I had another

107
00:04:42,780 --> 00:04:44,280
look at the

108
00:04:44,280 --> 00:04:47,419
the missing letters

109
00:04:48,540 --> 00:04:50,220
it occurred to me that if you have a

110
00:04:50,220 --> 00:04:51,120
text

111
00:04:51,120 --> 00:04:52,979
and a secret message you want to hide

112
00:04:52,979 --> 00:04:54,900
within the text you would be incredibly

113
00:04:54,900 --> 00:04:57,720
lucky if the message happened to be a

114
00:04:57,720 --> 00:04:59,340
subsequence of the text as you cannot

115
00:04:59,340 --> 00:05:00,840
control the letters

116
00:05:00,840 --> 00:05:02,699
what you can control however are the

117
00:05:02,699 --> 00:05:04,080
positions of the letters so I took

118
00:05:04,080 --> 00:05:05,820
another look at those so these are the

119
00:05:05,820 --> 00:05:07,800
positions of the underscores in the

120
00:05:07,800 --> 00:05:10,500
community college text

121
00:05:10,500 --> 00:05:12,840
and this sequence seems to grow in nice

122
00:05:12,840 --> 00:05:14,400
small increments

123
00:05:14,400 --> 00:05:16,139
so as it turns out if you take the

124
00:05:16,139 --> 00:05:18,300
successive differences between the

125
00:05:18,300 --> 00:05:20,340
positions of the missing letters

126
00:05:20,340 --> 00:05:22,740
including the space which separated the

127
00:05:22,740 --> 00:05:24,180
Community College it takes from the

128
00:05:24,180 --> 00:05:26,880
puzzle then the secret message is

129
00:05:26,880 --> 00:05:28,979
revealed

130
00:05:28,979 --> 00:05:35,940
it says there is a hint at secd.org Taj

131
00:05:37,139 --> 00:05:40,320
this is a webpage which looked like this

132
00:05:40,320 --> 00:05:42,840
it first has batch puzzle hint and

133
00:05:42,840 --> 00:05:44,280
glorious leadspeak

134
00:05:44,280 --> 00:05:47,220
then it says sad squeezing skills spoil

135
00:05:47,220 --> 00:05:49,259
Samuel's stylish symbols in some kind of

136
00:05:49,259 --> 00:05:51,780
news paper cutout font

137
00:05:51,780 --> 00:05:54,300
and at the bottom it warns of of by one

138
00:05:54,300 --> 00:05:56,660
errors

139
00:05:58,680 --> 00:06:01,440
I'm not sure I understood this hints but

140
00:06:01,440 --> 00:06:02,880
one word

141
00:06:02,880 --> 00:06:05,400
jumped out and that is squeezing which

142
00:06:05,400 --> 00:06:09,739
hinted at compression playing a role

143
00:06:11,039 --> 00:06:13,800
so one common compression technique

144
00:06:13,800 --> 00:06:15,780
which has a distinct advantage of me

145
00:06:15,780 --> 00:06:19,020
knowing about it is run length encoding

146
00:06:19,020 --> 00:06:21,419
and then the idea is that if you read

147
00:06:21,419 --> 00:06:24,300
your text from left to right whenever

148
00:06:24,300 --> 00:06:26,819
you come across a subsequence which in

149
00:06:26,819 --> 00:06:28,860
this context is Color Run

150
00:06:28,860 --> 00:06:31,080
where you would be repeating yourself

151
00:06:31,080 --> 00:06:33,660
then instead of doing so you produce two

152
00:06:33,660 --> 00:06:35,520
numbers

153
00:06:35,520 --> 00:06:37,740
an offset and a length

154
00:06:37,740 --> 00:06:40,380
which refer back into the text you've

155
00:06:40,380 --> 00:06:43,219
already read

156
00:06:47,940 --> 00:06:50,039
they seem to fit with the puzzle because

157
00:06:50,039 --> 00:06:52,919
it starts with a string and then

158
00:06:52,919 --> 00:06:55,620
contains numbers which appear to come in

159
00:06:55,620 --> 00:06:56,639
pairs

160
00:06:56,639 --> 00:07:00,180
which slowly grew

161
00:07:00,180 --> 00:07:02,580
so we take

162
00:07:02,580 --> 00:07:04,560
the first component of each pair to be

163
00:07:04,560 --> 00:07:07,620
an offset and the second component to be

164
00:07:07,620 --> 00:07:09,780
a length

165
00:07:09,780 --> 00:07:12,960
and then expand the indices we get the

166
00:07:12,960 --> 00:07:15,060
following so here I've also included the

167
00:07:15,060 --> 00:07:17,900
indices of the initial segment too

168
00:07:17,900 --> 00:07:20,580
0123 refer to the first part of this

169
00:07:20,580 --> 00:07:23,039
ring and then we have a run of length

170
00:07:23,039 --> 00:07:25,919
one starting at the third index and then

171
00:07:25,919 --> 00:07:27,479
a runner length one starting with the

172
00:07:27,479 --> 00:07:28,860
second index

173
00:07:28,860 --> 00:07:30,660
and then a run of the ink one starting

174
00:07:30,660 --> 00:07:33,360
the second index that's one and then

175
00:07:33,360 --> 00:07:35,340
I run a link one starting the first

176
00:07:35,340 --> 00:07:37,199
index and then a one love length two

177
00:07:37,199 --> 00:07:38,819
starting at the

178
00:07:38,819 --> 00:07:41,340
second index that's one two and then in

179
00:07:41,340 --> 00:07:42,780
the middle somewhere you can see a very

180
00:07:42,780 --> 00:07:44,160
long run

181
00:07:44,160 --> 00:07:47,220
and that's a round of length twenty

182
00:07:47,220 --> 00:07:50,580
so to get from here to the message you

183
00:07:50,580 --> 00:07:52,380
can take this vector and index it into

184
00:07:52,380 --> 00:07:54,900
itself until fixed point and then index

185
00:07:54,900 --> 00:07:57,599
into the initial segment which I think

186
00:07:57,599 --> 00:08:00,300
is pretty neat but don't worry about it

187
00:08:00,300 --> 00:08:02,759
wait

188
00:08:02,759 --> 00:08:04,440
the message turns out to be Morse code

189
00:08:04,440 --> 00:08:07,560
which I'm sure you're all familiar with

190
00:08:07,560 --> 00:08:10,380
decoding for morse code

191
00:08:10,380 --> 00:08:14,580
we get something which turns out to be a

192
00:08:14,580 --> 00:08:17,580
Caesar Cipher with a key 13 also known

193
00:08:17,580 --> 00:08:20,659
as rod 13.

194
00:08:20,940 --> 00:08:23,280
which gives a message a single serve key

195
00:08:23,280 --> 00:08:28,638
for loss for something something

196
00:08:30,539 --> 00:08:33,860
I was stuck here for a while

197
00:08:33,958 --> 00:08:36,599
it's not quite right or it doesn't seem

198
00:08:36,599 --> 00:08:38,940
quite right but it's also not completely

199
00:08:38,940 --> 00:08:40,140
wrong

200
00:08:40,140 --> 00:08:43,140
but I couldn't find a step in which an

201
00:08:43,140 --> 00:08:46,140
error could have been introduced

202
00:08:46,140 --> 00:08:49,620
and since the hint said something about

203
00:08:49,620 --> 00:08:52,980
sad skills I figure that maybe there was

204
00:08:52,980 --> 00:08:55,320
an intentional mistake somewhere which I

205
00:08:55,320 --> 00:08:57,180
was supposed to figure out

206
00:08:57,180 --> 00:08:59,279
but at this point I decided to contact

207
00:08:59,279 --> 00:09:02,399
Matthias to see if I could get him to

208
00:09:02,399 --> 00:09:04,500
confirm that this was indeed a correct

209
00:09:04,500 --> 00:09:07,440
partial solution to the puzzle

210
00:09:07,440 --> 00:09:09,779
and he was quick to reply and said that

211
00:09:09,779 --> 00:09:11,220
well

212
00:09:11,220 --> 00:09:13,440
this was there was indeed an

213
00:09:13,440 --> 00:09:16,320
unintentional mistake in the puzzle

214
00:09:16,320 --> 00:09:19,140
so going back to the hexadecimal digits

215
00:09:19,140 --> 00:09:21,420
there's a 14 in here somewhere

216
00:09:21,420 --> 00:09:24,180
I think this one

217
00:09:24,180 --> 00:09:26,760
which was supposed to be 14 decimal and

218
00:09:26,760 --> 00:09:29,660
not 14 hex

219
00:09:32,040 --> 00:09:34,740
and as you know 14 hex is 20 decimal so

220
00:09:34,740 --> 00:09:37,080
this is our outlier which is still an

221
00:09:37,080 --> 00:09:40,320
outlier but of lesser magnitude

222
00:09:40,320 --> 00:09:42,360
so if we patch this and then redo

223
00:09:42,360 --> 00:09:45,200
everything we did before

224
00:09:45,720 --> 00:09:47,640
we get a slightly better message which

225
00:09:47,640 --> 00:09:50,160
says a single serve key for lost force

226
00:09:50,160 --> 00:09:52,320
and then something which presumably is

227
00:09:52,320 --> 00:09:54,680
the key

228
00:09:54,839 --> 00:09:58,500
single serve seems to mean a one-time

229
00:09:58,500 --> 00:10:00,180
pad kind of thing

230
00:10:00,180 --> 00:10:01,800
but it's a bit less clear what lost

231
00:10:01,800 --> 00:10:03,959
forts refer to

232
00:10:03,959 --> 00:10:06,060
however there aren't many things it

233
00:10:06,060 --> 00:10:07,800
could be

234
00:10:07,800 --> 00:10:09,839
so the missing letters could be

235
00:10:09,839 --> 00:10:12,600
considered lost and lost fourths could

236
00:10:12,600 --> 00:10:14,760
mean a fourth of the Lost

237
00:10:14,760 --> 00:10:17,600
letters

238
00:10:19,320 --> 00:10:22,140
the length of the missing lattice does

239
00:10:22,140 --> 00:10:23,760
not quite divide

240
00:10:23,760 --> 00:10:25,800
by four evenly into the length of the

241
00:10:25,800 --> 00:10:29,420
key but it's quite close

242
00:10:29,880 --> 00:10:32,580
so to me there are only a few ways or a

243
00:10:32,580 --> 00:10:34,680
few obvious ways to divide the string

244
00:10:34,680 --> 00:10:36,899
into four parts

245
00:10:36,899 --> 00:10:39,120
and as for the key I could only see

246
00:10:39,120 --> 00:10:40,680
three options either addition

247
00:10:40,680 --> 00:10:43,200
subtraction by the key or subtraction

248
00:10:43,200 --> 00:10:45,720
from the key

249
00:10:45,720 --> 00:10:48,660
possibly with another

250
00:10:48,660 --> 00:10:52,100
constant term

251
00:10:53,339 --> 00:10:55,920
it turned out that

252
00:10:55,920 --> 00:10:58,260
you should take every fourth letter

253
00:10:58,260 --> 00:11:00,899
starting from the fourth one and then

254
00:11:00,899 --> 00:11:03,779
subtract from the key and that you

255
00:11:03,779 --> 00:11:06,540
yielded the final answer which was three

256
00:11:06,540 --> 00:11:09,260
and three two

257
00:11:09,660 --> 00:11:11,220
so this is what the complete solution

258
00:11:11,220 --> 00:11:13,079
script looked like which is in dialog

259
00:11:13,079 --> 00:11:15,120
APL and I think turned out pretty

260
00:11:15,120 --> 00:11:16,680
succinct

261
00:11:16,680 --> 00:11:21,060
you can see the patch in here

262
00:11:21,060 --> 00:11:22,140
like

263
00:11:22,140 --> 00:11:24,600
there

264
00:11:24,600 --> 00:11:26,519
and then I want to also say something

265
00:11:26,519 --> 00:11:28,920
about the corrected version of the

266
00:11:28,920 --> 00:11:30,600
problem available on web page it's

267
00:11:30,600 --> 00:11:32,760
almost the same except that it is

268
00:11:32,760 --> 00:11:34,860
basically for encoded of course

269
00:11:34,860 --> 00:11:37,560
no patching needs to be done but

270
00:11:37,560 --> 00:11:39,060
curiously enough

271
00:11:39,060 --> 00:11:41,399
in the last

272
00:11:41,399 --> 00:11:43,440
deciphering step you have to add a

273
00:11:43,440 --> 00:11:46,140
constant factor of 12 and then you get a

274
00:11:46,140 --> 00:11:48,120
slightly different answer which is free

275
00:11:48,120 --> 00:11:51,600
entry XC where the XC I think

276
00:11:51,600 --> 00:11:55,640
refers to safety compute

277
00:11:56,820 --> 00:11:59,980
and that's all thank you for listening

278
00:11:59,980 --> 00:12:02,080
[Applause]

279
00:12:02,080 --> 00:12:02,640
[Music]

280
00:12:02,640 --> 00:12:06,789
[Applause]

