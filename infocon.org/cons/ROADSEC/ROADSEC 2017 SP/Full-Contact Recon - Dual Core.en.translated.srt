1
00:00:13,585 --> 00:00:17,959
 Hi, thanks for coming by my name is Int0x80 I am 

2
00:00:17,959 --> 00:00:19,563
 the Rapper in a group called Dual core. 

3
00:00:20,335 --> 00:00:23,656
 Or you can call me by my nickname that is 'Staff'. 

4
00:00:27,488 --> 00:00:31,911
 This is me on Twitter if you want to follow me or tweet things about rap music. 

5
00:00:32,262 --> 00:00:32,891
 Add me. 

6
00:00:33,809 --> 00:00:37,302
 I set up this talk with my friend Savant, it's him here. 

7
00:00:37,346 --> 00:00:39,352
 He's in California so he can not be here. 

8
00:00:39,472 --> 00:00:42,645
 I am very happy to return to ROADSEC, I have been here last year and I loved it, 

9
00:00:42,645 --> 00:00:44,243
 So thank you for calling me again. 

10
00:00:46,525 --> 00:00:48,164
 Standard legal responsibility. 

11
00:00:48,164 --> 00:00:50,838
 Go break laws, do whatever you want to do. 

12
00:00:52,273 --> 00:00:56,893
 This is the Rapper in Dual Core. I like computers. 

13
00:00:58,466 --> 00:01:02,932
 I am a professional, pay my salary but really I only like 

14
00:01:02,932 --> 00:01:07,668
 of crushing my keyboard and sometimes some funny things happen. 

15
00:01:10,641 --> 00:01:13,459
 This is Savant, he weighs more than I do. 

16
00:01:13,459 --> 00:01:15,384
 Again, he can not be here today. 

17
00:01:15,556 --> 00:01:18,481
 Also, I hope you like Rick and Morty too. 

18
00:01:20,121 --> 00:01:23,229
 So this talk is called 'Full Contact Recon'. (Full contact recognition) 

19
00:01:23,273 --> 00:01:26,097
 We go through everything and let's start from the end. 

20
00:01:26,731 --> 00:01:28,833
 With the main endpoint. 

21
00:01:29,620 --> 00:01:34,429
 And let's look at the hypothetical offensive operations. 

22
00:01:35,134 --> 00:01:36,758
 Then we'll talk about how we do things, 

23
00:01:37,029 --> 00:01:40,118
 working with our offensive operations. 

24
00:01:40,926 --> 00:01:43,022
 So the premise of all this, 

25
00:01:43,318 --> 00:01:46,006
 is that if you are doing a Pentest or a Redteam operation. 

26
00:01:46,310 --> 00:01:49,638
 You can prioritize the operation with recognition. 

27
00:01:49,942 --> 00:01:53,934
 You can get as much information about your target without even touching it. 

28
00:01:54,398 --> 00:01:57,214
 The moment you make a connection in the infrastructure of your target. 

29
00:01:57,390 --> 00:02:00,046
 You have shell access with privileges. 

30
00:02:00,254 --> 00:02:01,958
 Or system privileges. 

31
00:02:02,174 --> 00:02:06,142
 So the point of all this is, first send that little traffic to your target. 

32
00:02:06,793 --> 00:02:12,151
 Because every time you send traffic to your target, you run the risk of getting caught. 

33
00:02:12,416 --> 00:02:14,809
 So let's talk about ways we build 

34
00:02:14,809 --> 00:02:16,050
 the recognition of our operation. 

35
00:02:18,195 --> 00:02:22,560
 That is our conclusion. Hackers, pentesters, use the easy way. 

36
00:02:22,888 --> 00:02:25,704
 Like, I'm lazy, I do not have time to see everything. 

37
00:02:26,353 --> 00:02:28,647
 So I go straight on the road that I think is faster. 

38
00:02:29,252 --> 00:02:31,387
 So you can also do this, 

39
00:02:31,987 --> 00:02:35,001
 repeat these same steps and find that there are many areas of attack 

40
00:02:35,346 --> 00:02:38,787
 in your organization or on your target you are looking for. 

41
00:02:39,683 --> 00:02:44,194
 Then you can use Full Contact Recon. To basically create a connection before it even starts. 

42
00:02:46,389 --> 00:02:51,005
 So let's talk, we'll delineate on what an operation Redteam, 

43
00:02:51,317 --> 00:02:53,437
 a Pentest and a vulnerability rate are. 

44
00:02:54,253 --> 00:02:56,940
 So starting with the pretense test. 

45
00:02:57,173 --> 00:02:59,702
 Something of the sort with a pretense test. But not really. 

46
00:02:59,702 --> 00:03:01,422
 This is more like a vulnerability scanner. 

47
00:03:01,422 --> 00:03:03,665
 You're running something like Nessus or Qualys. 

48
00:03:03,873 --> 00:03:06,920
 And you're just finding vulnerabilities that need fixing. 

49
00:03:07,217 --> 00:03:09,487
 But you're not really solving problems. 

50
00:03:09,696 --> 00:03:14,167
 You may not be identifying problems as processes or process flows. 

51
00:03:14,407 --> 00:03:16,222
 With more complex systems in place. 

52
00:03:17,816 --> 00:03:20,584
 So usually you're holding hands, probably have little time 

53
00:03:20,800 --> 00:03:22,843
 to do this. Maybe a day or a week. 

54
00:03:22,843 --> 00:03:27,304
 You do not have time to do things physically, ruptures, or social engineering. 

55
00:03:28,888 --> 00:03:30,713
 So in this way you make no acknowledgment. 

56
00:03:31,145 --> 00:03:32,856
 You basically just open the scanner and the wheel. 

57
00:03:34,088 --> 00:03:37,192
 Conflict, that's what I think is an infiltration test. 

58
00:03:37,840 --> 00:03:40,800
 As if you were saying: Can I prove that the object is outside? 

59
00:03:41,226 --> 00:03:46,387
 We have determined that KillChain Acceleration is a basic scenario. 

60
00:03:46,611 --> 00:03:48,067
 If I have a shell on this system. 

61
00:03:48,324 --> 00:03:51,980
 Can I have access to this other information here in a productive environment? 

62
00:03:52,299 --> 00:03:55,436
 And you basically try to prove a particular KillChain. 

63
00:03:57,011 --> 00:03:59,708
 There is some recognition going on here, but it's like 

64
00:03:59,972 --> 00:04:00,980
 if you still had access. 

65
00:04:01,380 --> 00:04:03,292
 You start with some access. 

66
00:04:04,324 --> 00:04:06,108
 Yolo Scoped, that's what I do. 

67
00:04:06,284 --> 00:04:08,892
 We do things from Redteam, we rarely start with anything. 

68
00:04:09,148 --> 00:04:10,748
 We are really laboratory opponents. 

69
00:04:11,012 --> 00:04:15,132
 We figure out how to get in, how to get things and how to get out. 

70
00:04:15,845 --> 00:04:18,228
 That is why recognition is very important. 

71
00:04:18,430 --> 00:04:20,189
 Because it 's all about how not to get caught. 

72
00:04:22,741 --> 00:04:25,236
 Ok, so what is Full Contact Recon? 

73
00:04:26,134 --> 00:04:30,173
 We are basically using this idea we want to do 

74
00:04:30,349 --> 00:04:32,149
 is to get as much information as we can get. 

75
00:04:32,342 --> 00:04:35,753
 Using other platforms and services on the internet. 

76
00:04:35,753 --> 00:04:37,764
 Without touching the infrastructure of our target. 

77
00:04:39,003 --> 00:04:40,974
 We have this idea of ​​being economical in the packages. 

78
00:04:41,031 --> 00:04:43,703
 The whole package you send in your target infrastructure, 

79
00:04:43,703 --> 00:04:45,888
 is a chance to be detected. 

80
00:04:46,996 --> 00:04:51,135
 We're literally trying not to be detected, to steal things and leave. 

81
00:04:53,942 --> 00:04:58,905
 So if you send packages over the internet, if you run NMAP SCAN 

82
00:04:59,209 --> 00:05:02,448
 or you are using Burp to see the target sites. 

83
00:05:02,762 --> 00:05:05,157
 Predictable risk of being caught. 

84
00:05:05,157 --> 00:05:06,933
 You can go to the next structure, 

85
00:05:06,933 --> 00:05:10,259
 scanners on the internet are regularly updated. 

86
00:05:11,272 --> 00:05:14,776
 So you will not make too much noise getting caught. 

87
00:05:15,221 --> 00:05:18,185
 Now if you already have an access, or an entry point 

88
00:05:18,185 --> 00:05:19,079
 within the environment. 

89
00:05:19,079 --> 00:05:21,047
 And you're looking and moving in there. 

90
00:05:21,047 --> 00:05:22,838
 Chances increase that they are detected. Right? 

91
00:05:23,104 --> 00:05:27,168
 There must be only a few people in that corporation unless on the internet. 

92
00:05:27,168 --> 00:05:31,172
 And if you change to the production environment, your customer's information, 

93
00:05:31,172 --> 00:05:34,349
 or the secrets that should be kept. 

94
00:05:34,349 --> 00:05:36,950
 There should be fewer people in that production environment, 

95
00:05:36,950 --> 00:05:38,979
 meaning that any traffic you send is 

96
00:05:38,980 --> 00:05:41,636
 something else to show that you're attacking. 

97
00:05:43,399 --> 00:05:47,008
 So why not use exploits? All this was done without using Exploits. 

98
00:05:47,221 --> 00:05:51,390
 There are a few reasons, first of all for memory break 

99
00:05:51,390 --> 00:05:52,587
 is very bad. 

100
00:05:52,793 --> 00:05:57,238
 Does everyone here know EternalBlue? The exploit that came from DNS. 

101
00:05:57,927 --> 00:06:02,868
 The original name of this exploit was EternalBlue Screen. (The eternal blue screen) 

102
00:06:02,868 --> 00:06:06,252
 Because it crashed systems often, it was really unstable. 

103
00:06:06,252 --> 00:06:08,608
 So you do not want to crash your target systems. 

104
00:06:09,621 --> 00:06:13,115
 It also increases the risk of denied service detection if you go offline. 

105
00:06:13,289 --> 00:06:19,457
 Because the services are offline, you may be investigated of why the system is stopped. 

106
00:06:20,218 --> 00:06:23,456
 Also when you use exploits, people also sign exploits. 

107
00:06:23,456 --> 00:06:26,425
 Then you can be detected with a NIDS or antivirus. 

108
00:06:28,379 --> 00:06:31,960
 For us, not using exploits is because we have succeeded without using them. 

109
00:06:31,960 --> 00:06:33,955
 We do not need exploits, so we do not worry. 

110
00:06:35,366 --> 00:06:37,652
 Okay, so this is what usually happens. 

111
00:06:37,978 --> 00:06:40,509
 Find systems with the information you want. 

112
00:06:40,794 --> 00:06:43,714
 Find people who have access to these systems. 

113
00:06:44,569 --> 00:06:46,626
 Find the credential used by these people. 

114
00:06:47,354 --> 00:06:49,226
 And really get what you want. 

115
00:06:49,826 --> 00:06:51,370
 Again, all without being caught. 

116
00:06:53,418 --> 00:06:56,586
 So this is a quick story about the Redteam operation we participated in. 

117
00:06:57,060 --> 00:07:00,293
 And how our idea of ​​complete recognition began. 

118
00:07:00,300 --> 00:07:04,369
 So we have a target company, and we want to invade them. 

119
00:07:04,656 --> 00:07:09,905
 And Savant was at home, the rest of us were in DefCom, partying, 

120
00:07:10,183 --> 00:07:11,695
 drinking all the beers and hacking all things. 

121
00:07:12,441 --> 00:07:15,344
 And Savant said he was going to start recognizing that target. 

122
00:07:15,616 --> 00:07:16,623
 Let's see what happens. 

123
00:07:16,825 --> 00:07:20,926
 So he goes to LinkedIn. If you ask, who are the employees of this company? 

124
00:07:21,136 --> 00:07:23,257
 'Oh, this guy is an IT administrator. 

125
00:07:23,569 --> 00:07:28,537
 Let me see, it is in the LinkedIn database by chance? Yes he is.' 

126
00:07:28,728 --> 00:07:30,688
 'Okay, let me break his password quickly.' 

127
00:07:30,928 --> 00:07:33,215
 'Password broken!' 

128
00:07:34,328 --> 00:07:37,311
 Then Savant looked again and asked himself, 

129
00:07:37,696 --> 00:07:39,456
 Is there anything else I can use SSH in that company? 

130
00:07:40,312 --> 00:07:43,176
 And of course on the site there is a system with open SSH. 

131
00:07:43,375 --> 00:07:47,488
 Then Savant said, 'Let me try these guys, work email address, 

132
00:07:47,752 --> 00:07:50,664
 such as user name, and LinkedIn password. And it worked. 

133
00:07:51,248 --> 00:07:53,928
 And as the guy is an IT administrator, he has access to everything. 

134
00:07:54,192 --> 00:07:57,592
 And Savant practically finalized the operation before 

135
00:07:57,760 --> 00:07:59,632
 that we could come together and work on it. 

136
00:07:59,896 --> 00:08:02,884
 We were all defcom, drinking all the beers and hacked everything. 

137
00:08:02,884 --> 00:08:04,690
 It happened in 2 minutes and it was done. 

138
00:08:06,706 --> 00:08:08,921
 So this is how a complete recognition of contact should be made. 

139
00:08:09,225 --> 00:08:12,882
 Okay, this is a hypothetical Redteam operation. 

140
00:08:13,146 --> 00:08:19,714
 We're going to shoot 'Dirty Rick desperately wants to own the DNA of a real Morty.' 

141
00:08:19,962 --> 00:08:23,610
 'Ricks' advice stores this DNA in a database 

142
00:08:23,858 --> 00:08:25,818
 highly secure on Earth C137. 

143
00:08:26,154 --> 00:08:29,567
 'Dirty Rick wants to hire the hacker Rick to get the file back.' 

144
00:08:30,373 --> 00:08:32,201
 Anyone here watch Rick and Morty? 

145
00:08:34,837 --> 00:08:36,269
 My people! 

146
00:08:38,532 --> 00:08:40,755
 So here's the hacker Rick. We will call the 

147
00:08:40,986 --> 00:08:42,168
 'Whirly Derby Conspiracy' 

148
00:08:43,143 --> 00:08:45,289
 Hacker Rick gives a summary of recognition. 

149
00:08:45,536 --> 00:08:47,497
 While you are thinking about this operation. 

150
00:08:48,688 --> 00:08:51,952
 After some research, Rick hacker realizes that the database is being 

151
00:08:52,216 --> 00:08:57,776
 hosted by Citadel operators along with NASA on Earth C137. 

152
00:08:58,095 --> 00:09:01,012
 Hacker Rick consults Savant the legitimate box of 

153
00:09:01,026 --> 00:09:03,540
 pwn probability of the matrix and accepts the challenge. 

154
00:09:03,687 --> 00:09:07,601
 What is the legitimate pwn probability box of the matrix? 

155
00:09:07,601 --> 00:09:08,796
 You must be asking yourself. 

156
00:09:09,158 --> 00:09:11,312
 Well that's. 

157
00:09:13,187 --> 00:09:14,867
 An official chart we made. 

158
00:09:15,714 --> 00:09:18,827
 Basically what we are seeing in total is 

159
00:09:19,075 --> 00:09:22,731
 if the order of an organization grows as they age, 

160
00:09:22,940 --> 00:09:26,420
 and visitor numbers increase, so there is employee growth. 

161
00:09:26,684 --> 00:09:29,098
 There is an increased chance of invading them. 

162
00:09:29,667 --> 00:09:32,362
 There are configurations of systems and people that are forgotten. 

163
00:09:32,587 --> 00:09:35,131
 There are technical data that are subject, 

164
00:09:35,168 --> 00:09:36,763
 sometimes when there are acquisitions in companies, 

165
00:09:36,763 --> 00:09:39,137
 which are completely different to be migrated. 

166
00:09:39,137 --> 00:09:40,821
 There are all these ways to get in. 

167
00:09:43,403 --> 00:09:45,787
 So let's talk first about how to find systems. Right? 

168
00:09:48,924 --> 00:09:53,091
 Ok, we want to find IP addresses in this NASA case. 

169
00:09:53,427 --> 00:09:55,139
 NASA has been the US space agency. 

170
00:09:55,355 --> 00:09:56,594
 Right? They want to track aliens 

171
00:09:56,594 --> 00:09:59,255
 put people on the moon, send people to space. 

172
00:09:59,469 --> 00:10:00,502
 They are smarter than me. 

173
00:10:00,502 --> 00:10:02,054
 So why not hack them and not take their secrets? 

174
00:10:02,394 --> 00:10:03,606
 And please, do not hack them. 

175
00:10:04,567 --> 00:10:06,222
 I want to continue to send people into space. 

176
00:10:07,077 --> 00:10:09,173
 Okay, everyone knows the IP address, right? 

177
00:10:10,094 --> 00:10:14,813
 Then, AS numbers. AS numbers are hierarchically like the IP addresses 

178
00:10:14,813 --> 00:10:17,244
 are allocated geographically by the planet. 

179
00:10:17,793 --> 00:10:20,443
 So if we want to get IP addresses from an organization, 

180
00:10:20,443 --> 00:10:22,811
 we can literally download this database. 

181
00:10:22,811 --> 00:10:28,723
 Unzip it. Use a 'bash' and see the IP addresses of the organization. 

182
00:10:31,583 --> 00:10:33,728
 So we're pulling out ... 

183
00:10:34,739 --> 00:10:37,229
 Downloading the database by extracting it. 

184
00:10:38,043 --> 00:10:41,708
 And we're going to use 'egrep' by NASA. And we get multiple IP addresses. 

185
00:10:42,597 --> 00:10:43,933
 So now we have several systems to look for. 

186
00:10:47,181 --> 00:10:52,821
 PTRarchive that has many DNS records. Since 2008. 

187
00:10:53,037 --> 00:10:54,997
 So there are almost 10 years of DNS on the internet. 

188
00:10:55,597 --> 00:11:00,381
 You can search by IP address, IP area and also by name of an organization. 

189
00:11:01,013 --> 00:11:03,925
 Then on this screen you can see, we put an IP address. 

190
00:11:04,101 --> 00:11:05,861
 We also put NASA. 

191
00:11:08,381 --> 00:11:12,741
 And here are the results. We got some NASA hosts. 

192
00:11:12,957 --> 00:11:14,181
 Some other NASA hosts. 

193
00:11:14,445 --> 00:11:15,453
 So cool. 

194
00:11:15,805 --> 00:11:20,877
 Again, all with PTRArchive and AS numbers. We did not play at NASA. 

195
00:11:21,069 --> 00:11:23,006
 We have not shipped any packages to NASA yet. 

196
00:11:26,813 --> 00:11:28,845
 GOOGLE search certifies a transparency report. 

197
00:11:29,558 --> 00:11:31,869
 So another source of data, you can use for free. 

198
00:11:32,037 --> 00:11:34,997
 GOOGLE files are basically certified data. 

199
00:11:36,230 --> 00:11:38,326
 And you can simply get them. 

200
00:11:41,630 --> 00:11:43,824
 So these are the seekers used by NASA. 

201
00:11:43,824 --> 00:11:47,098
 And again we get more hosting names. 

202
00:11:47,099 --> 00:11:49,639
 hq.nasa.gov, cc.nasa.gov 

203
00:11:55,704 --> 00:11:57,656
 Sublister, a free tool. 

204
00:11:58,744 --> 00:12:00,200
 You can use it to search for domains. 

205
00:12:00,960 --> 00:12:05,815
 So in Sublister you say, tell me all the domains you can find on nasa.gov. 

206
00:12:06,080 --> 00:12:07,864
 We're going to have several subdomains on top of that, right? 

207
00:12:08,272 --> 00:12:12,288
 Then Sublister goes to Baidu, goes to Yahoo, goes to Google, 

208
00:12:12,527 --> 00:12:15,111
 goes to Bing and all those platforms, right? 

209
00:12:15,328 --> 00:12:19,656
 None of these are NASA. And in the end we get 1100 addresses. 

210
00:12:19,848 --> 00:12:22,303
 We now have 1100 NASA target addresses. 

211
00:12:23,319 --> 00:12:25,854
 Without sending any traffic signal to NASA. 

212
00:12:28,504 --> 00:12:31,306
 So at this point NASA does not even know we're looking for things about them. 

213
00:12:34,163 --> 00:12:36,930
 Shodan, I mentioned Shodan earlier, Shodan is incredible. 

214
00:12:37,138 --> 00:12:40,458
 Anyone here wear Shodan? My people. 

215
00:12:40,660 --> 00:12:43,491
 So incredible, you can put an IP address. 

216
00:12:43,723 --> 00:12:45,627
 You can search for services, you can put a name. 

217
00:12:46,033 --> 00:12:49,250
 When we started looking for NASA, we found 350 results. 

218
00:12:51,945 --> 00:12:54,713
 We have science.nasa.gov, 

219
00:12:56,796 --> 00:13:01,048
 this looks like FTP. Here it goes. 

220
00:13:01,437 --> 00:13:03,741
 Nasa.hq anonymous FTP server. 

221
00:13:03,871 --> 00:13:06,658
 But again, we have not talked to NASA yet. 

222
00:13:07,001 --> 00:13:08,177
 So no package shipped to NASA yet. 

223
00:13:09,586 --> 00:13:12,466
 So we found several systems, now we will find 

224
00:13:12,746 --> 00:13:14,329
 people who have access to such systems. 

225
00:13:16,122 --> 00:13:19,708
 So when we start with an operation, the first thing we do is 

226
00:13:19,708 --> 00:13:22,415
 look who the people who work with this company are, 

227
00:13:22,415 --> 00:13:25,266
 who probably has access to the information I want. 

228
00:13:26,997 --> 00:13:29,755
 In many cases, after much customer information 

229
00:13:29,907 --> 00:13:32,871
 which will be stored in some type of database. 

230
00:13:34,088 --> 00:13:36,736
 Usually people interact with this information, 

231
00:13:36,736 --> 00:13:38,870
 such as database engineers, 

232
00:13:38,870 --> 00:13:41,026
 or software developers, or something of the sort. 

233
00:13:41,122 --> 00:13:44,329
 So, GitHub is an incredible platform for developers 

234
00:13:44,619 --> 00:13:45,379
 and for engineers. 

235
00:13:46,523 --> 00:13:50,744
 One amazing thing is that every time you make a submission to GitHub, 

236
00:13:50,851 --> 00:13:52,960
 has an email address associated with it. 

237
00:13:54,175 --> 00:13:57,271
 So I wrote a scheduled tool that extracts 

238
00:13:57,560 --> 00:14:00,439
 email addresses of someone sending something personal on GitHub. 

239
00:14:00,764 --> 00:14:02,399
 Or an organization you post to GitHub. 

240
00:14:03,331 --> 00:14:05,013
 So if you want to do this manually, 

241
00:14:05,229 --> 00:14:07,980
 this is an example how it can be done. You can clone GitHub. 

242
00:14:09,236 --> 00:14:11,949
 You can run 'git log', use 'grep' in the author, 

243
00:14:12,221 --> 00:14:15,325
 and create expressions to search for e-mail addresses. 

244
00:14:15,573 --> 00:14:18,749
 So this is my entire GitHub listing. 

245
00:14:18,942 --> 00:14:21,637
 And we see this si@secutirysense.co.uk. 

246
00:14:22,541 --> 00:14:25,581
 We see this xcdx@gmail.com. This is my email address. 

247
00:14:27,389 --> 00:14:28,348
 For now. 

248
00:14:31,270 --> 00:14:34,182
 But this is manually, but what if we do it in a programmable way. 

249
00:14:35,590 --> 00:14:37,373
 This was only for one post. 

250
00:14:37,613 --> 00:14:43,373
 I have many posts, NASA has, there are Brazilians posting on GitHub. 

251
00:14:45,395 --> 00:14:49,539
 So this is GitHump. 

252
00:14:50,627 --> 00:14:53,035
 I did not know what kind of internet connection we would have here. 

253
00:14:54,043 --> 00:14:57,595
 But what you do is, we go on NASA's GitHub. Right? 

254
00:14:57,995 --> 00:15:01,803
 And we can describe all the achievements of all NASA posts. 

255
00:15:02,747 --> 00:15:04,819
 What I first did was pick up a random person here. 

256
00:15:05,199 --> 00:15:07,733
 Who is a contributor, I choose this guy. A. Frank Leone. 

257
00:15:10,359 --> 00:15:11,973
 So I get his username. 

258
00:15:11,973 --> 00:15:15,959
 A. Frank Leone. I pass here on githump. 

259
00:15:18,214 --> 00:15:19,751
 Githump goes to GitHub, 

260
00:15:21,039 --> 00:15:25,175
 and 'pushes' every post that that user or organization has. 

261
00:15:26,167 --> 00:15:29,606
 So here we find 107 e-mail addresses. In this post. 

262
00:15:30,127 --> 00:15:32,070
 We found 8 email addresses. 

263
00:15:32,071 --> 00:15:35,188
 And in the end, we received individual emails from all of them. 

264
00:15:35,425 --> 00:15:37,560
 And we keep this file. 

265
00:15:39,733 --> 00:15:43,579
 So let's see if we can get some NASA e-mail address from GitHub. 

266
00:15:45,397 --> 00:15:49,197
 Here we use the 'grep' that will search for 'NASA'. 

267
00:15:51,685 --> 00:15:52,645
 Nice! 

268
00:15:53,062 --> 00:15:56,333
 So now I have e-mail addresses from NASA staff, 

269
00:15:56,333 --> 00:15:59,464
 which I can probably use to search 

270
00:15:59,482 --> 00:16:01,593
 by user names or e-mail address formats, 

271
00:16:01,786 --> 00:16:02,555
 for NASA officials. 

272
00:16:02,555 --> 00:16:04,679
 So if I want to try entering the system later, 

273
00:16:05,349 --> 00:16:07,155
 I have at least a few people to look for. 

274
00:16:08,475 --> 00:16:10,891
 Again, all this just for GitHub. 

275
00:16:11,556 --> 00:16:12,995
 No package has yet been sent to NASA. 

276
00:16:13,203 --> 00:16:14,659
 NASA has no idea we're doing this. 

277
00:16:16,685 --> 00:16:19,844
 The code for GitHump is made in bash, very easy. 

278
00:16:21,875 --> 00:16:26,131
 This is my GitHump, feel free to copy it, modify it, 

279
00:16:26,131 --> 00:16:28,473
 send me questions, I'll be happy to add new tools. 

280
00:16:30,190 --> 00:16:33,727
 Basic stuff, this is just for use. 

281
00:16:34,247 --> 00:16:35,487
 Welcome messages. 

282
00:16:36,886 --> 00:16:40,367
 So the reason this program works is that GitHub has an API 

283
00:16:40,559 --> 00:16:41,550
 that you can interact with it. 

284
00:16:41,871 --> 00:16:44,103
 So if you use curl to run, make an API request. 

285
00:16:45,471 --> 00:16:47,871
 We are ordering all repositories for the target. 

286
00:16:48,816 --> 00:16:52,385
 So we're pulling out, using some bash to remove the names. 

287
00:16:52,601 --> 00:16:56,345
 And for each repository, we clone, 

288
00:16:56,521 --> 00:17:01,928
 and for each delivery in the repository, we retrieve the information from the author. 

289
00:17:02,977 --> 00:17:05,112
 Take all these records of authority information, 

290
00:17:05,401 --> 00:17:06,657
 remove the email addresses from this, 

291
00:17:06,833 --> 00:17:09,121
 and now we have many e-mail addresses, and many authors. 

292
00:17:09,656 --> 00:17:11,512
 That's cool, right? 

293
00:17:11,704 --> 00:17:14,385
 We got two useful information. 

294
00:17:15,270 --> 00:17:18,777
 We get people who are probably contributors, 

295
00:17:18,777 --> 00:17:22,648
 as someone who is a development engineer at NASA. 

296
00:17:23,108 --> 00:17:25,603
 I mean, these people can have access, or some kind of access, 

297
00:17:25,604 --> 00:17:26,723
 for the information we want. 

298
00:17:26,768 --> 00:17:28,203
 And we have the e-mail from these people. 

299
00:17:28,203 --> 00:17:30,418
 What we can use to search their database later. 

300
00:17:30,692 --> 00:17:32,604
 To get some kind of access. 

301
00:17:39,771 --> 00:17:41,107
 Again, I'm sorry. 

302
00:17:41,307 --> 00:17:42,277
 I'm sick, I got a cold. 

303
00:17:45,011 --> 00:17:50,216
 So when you're tying GitHump with any other automation. 

304
00:17:50,216 --> 00:17:51,575
 You should not be positioned. 

305
00:17:51,586 --> 00:17:54,158
 In my Redteam we have a Slack bot. 

306
00:17:54,295 --> 00:17:56,793
 And we hooked GitHub to the Slack bot. 

307
00:17:56,793 --> 00:18:00,164
 So in the conversation with Slack I can say, bang, GitHump! 

308
00:18:00,875 --> 00:18:05,588
 And then, at the time, find all the people you can. 

309
00:18:06,020 --> 00:18:07,879
 I do not even need to run the tool myself. 

310
00:18:08,056 --> 00:18:09,832
 I simply use this Slack and it works. 

311
00:18:11,119 --> 00:18:14,574
 The gists are great too. Does anyone here use gists on GitHub? 

312
00:18:14,776 --> 00:18:15,895
 When you have a code in idea 

313
00:18:16,087 --> 00:18:17,343
 and you just put it on quickly. Yes. 

314
00:18:18,166 --> 00:18:20,048
 Many legal details you can find on the gists. 

315
00:18:20,800 --> 00:18:22,152
 And let's get back to this later. 

316
00:18:23,870 --> 00:18:26,806
 Okay, on another platform we can use this as GitHub 

317
00:18:26,974 --> 00:18:31,360
 has Travis-CI. Does anyone use Travis-CI? Amazing. 

318
00:18:31,552 --> 00:18:34,783
 Continuous integration, basically you can put more codes, 

319
00:18:34,984 --> 00:18:36,678
 build it, and keep going. 

320
00:18:36,943 --> 00:18:39,360
 But, it is a source of public information. 

321
00:18:39,632 --> 00:18:43,072
 Then there is travis-ci.org, which we can access 

322
00:18:43,295 --> 00:18:46,439
 programmatically, and use the usernames and email addresses there. 

323
00:18:47,991 --> 00:18:50,783
 So I wrote this TCISPY tool. Spy Travis-CI. 

324
00:18:51,983 --> 00:18:54,102
 And I used the Python module of travisspy. 

325
00:18:55,911 --> 00:18:58,583
 And you can get information for yourself. 

326
00:19:00,511 --> 00:19:03,902
 Again, I did not know what the internet would be like here, 

327
00:19:04,087 --> 00:19:06,408
 so I rode this in my hotel using the wi-fi. 

328
00:19:12,143 --> 00:19:13,735
 So this is the complete desktop. 

329
00:19:13,967 --> 00:19:15,231
 You clone the post. 

330
00:19:16,951 --> 00:19:18,120
 I'm careful that somehow 

331
00:19:18,336 --> 00:19:20,071
 my environment is clear from sending packets. 

332
00:19:21,235 --> 00:19:25,263
 Pip installs the Python module from travelspy. 

333
00:19:25,263 --> 00:19:31,168
 And you just run the tcispy script and send that script to the target. 

334
00:19:31,169 --> 00:19:35,936
 We have that, let's go to travis-ci.org/news. 

335
00:19:36,176 --> 00:19:39,568
 And these are the target projects that we can 

336
00:19:39,590 --> 00:19:40,904
 try to take some information from them. 

337
00:19:42,076 --> 00:19:44,436
 So I found this 'EDSC Echo Form'. 

338
00:19:44,885 --> 00:19:47,910
 There are 167 shipments, so I'll try this. 

339
00:19:49,574 --> 00:19:51,301
 And you should also have noticed that we also have a 

340
00:19:51,469 --> 00:19:54,270
 number md5 at the end. 

341
00:19:54,293 --> 00:19:56,229
 It is an API key that you have to generate 

342
00:19:56,581 --> 00:19:58,061
 in your personal GitHub account. 

343
00:19:58,254 --> 00:20:00,525
 It's free, you only ask for some permissions. 

344
00:20:00,806 --> 00:20:05,190
 Which will be documented in the tcispy code or in the GitHub readme. 

345
00:20:05,350 --> 00:20:07,598
 So it's really easy to set up. 

346
00:20:07,781 --> 00:20:10,118
 But when you already have your API key set up in GitHub, 

347
00:20:10,478 --> 00:20:12,630
 you can start making programmable queries on Travis-CI, 

348
00:20:12,886 --> 00:20:14,062
 and then get information. 

349
00:20:14,798 --> 00:20:17,768
 So when we requested this project edsc-echoforms. 

350
00:20:17,768 --> 00:20:22,356
 We got some email addresses and return names. 

351
00:20:23,530 --> 00:20:25,764
 We currently ... this looks familiar. 

352
00:20:26,539 --> 00:20:30,253
 Because, we saw him here. Right? 

353
00:20:30,253 --> 00:20:31,601
 This is cool. 

354
00:20:32,907 --> 00:20:34,312
 The other thing needed in that. 

355
00:20:34,657 --> 00:20:37,151
 Are we going to look for these email addresses 

356
00:20:37,336 --> 00:20:39,617
 in dumps of the database of soon. 

357
00:20:40,516 --> 00:20:41,693
 And if I do not sign up ... 

358
00:20:42,092 --> 00:20:44,165
 And if I work for NASA, I sign up for LinkedIn 

359
00:20:44,333 --> 00:20:46,317
 but do not sign me up at nasa.gov? 

360
00:20:47,540 --> 00:20:49,860
 Right? If the only thing I have are nasa.gov e-mail addresses, 

361
00:20:50,037 --> 00:20:52,068
 I'm going to lose some of NASA's employees when 

362
00:20:52,068 --> 00:20:53,927
 to look for the dump of the database. 

363
00:20:54,468 --> 00:20:58,242
 But look, we got this guy's personal email too. 

364
00:20:58,242 --> 00:21:01,078
 So now we can do a 'grep' through his personal and work email, 

365
00:21:01,238 --> 00:21:03,494
 for all the dump of their database. 

366
00:21:03,628 --> 00:21:07,580
 Our goal is to get as many e-mail addresses as we can, 

367
00:21:08,091 --> 00:21:11,803
 of each person to access the information we want. 

368
00:21:11,846 --> 00:21:16,533
 And then get those email addresses, and search the entire database added, 

369
00:21:16,829 --> 00:21:20,101
 looking for hashs that we can translate into real passwords. 

370
00:21:28,821 --> 00:21:31,716
 Tcispy runs in Python, also very straightforward. 

371
00:21:32,021 --> 00:21:33,327
 Because I'm not an incredible developer. 

372
00:21:33,327 --> 00:21:34,612
 I only write simple things. 

373
00:21:37,014 --> 00:21:41,654
 Again, these are the arguments, the target post, and pass that you have. 

374
00:21:41,654 --> 00:21:44,577
 These are the permissions your pass will need on GitHub. 

375
00:21:47,734 --> 00:21:50,342
 And we're using the TravisPy module. 

376
00:21:51,332 --> 00:21:54,053
 And literally repeating every architecture, 

377
00:21:54,453 --> 00:21:56,875
 and removing the author's name and email. 

378
00:21:57,685 --> 00:21:59,524
 And it clears. 

379
00:21:59,525 --> 00:22:01,301
 It is. Very simple. 

380
00:22:17,724 --> 00:22:21,035
 And another good place to find people who can be your target, 

381
00:22:21,036 --> 00:22:22,793
 is Data.com. 

382
00:22:22,793 --> 00:22:24,016
 Does anyone here use Data.com? 

383
00:22:25,209 --> 00:22:28,201
 Cool, you can literally put the name of a company, 

384
00:22:28,523 --> 00:22:30,457
 and ask who the employees of that company are. 

385
00:22:30,651 --> 00:22:32,098
 And here are all the employees. 

386
00:22:32,946 --> 00:22:33,802
 Works well. 

387
00:22:35,607 --> 00:22:37,553
 So, so data.com works. 

388
00:22:37,760 --> 00:22:41,238
 You can search for a company, and here we have many names. 

389
00:22:41,238 --> 00:22:43,604
 Your titles, your location. 

390
00:22:46,100 --> 00:22:49,032
 The funny thing about data.com is that I could not 

391
00:22:49,191 --> 00:22:50,392
 have done otherwise. 

392
00:22:50,656 --> 00:22:53,272
 But I know there are people who do not do it that way. 

393
00:22:53,472 --> 00:22:56,062
 That data.com gives you credit. 

394
00:22:56,268 --> 00:23:00,218
 So you use credits like me that have 10 points. Right? 

395
00:23:01,780 --> 00:23:04,652
 The more information you order, the more you spend points. 

396
00:23:05,364 --> 00:23:08,052
 But what you can do, is that you can 

397
00:23:08,268 --> 00:23:09,444
 pick up all the information of a company, 

398
00:23:09,612 --> 00:23:11,920
 load the data.com that information, 

399
00:23:11,920 --> 00:23:13,048
 and get more points. 

400
00:23:13,234 --> 00:23:16,951
 And that you can use to get more people to hack. 

401
00:23:17,051 --> 00:23:19,300
 It's a good cycle if you feed it. 

402
00:23:19,508 --> 00:23:24,052
 I know that not everyone would do this, but you can use the platform that way. 

403
00:23:25,284 --> 00:23:29,340
 Hunter.io, amazing page, you can see things, 

404
00:23:29,548 --> 00:23:33,024
 domain names, and gives you email addresses 

405
00:23:33,024 --> 00:23:34,362
 linked to these domain names. 

406
00:23:34,846 --> 00:23:37,825
 That's good too, give you email address formats. 

407
00:23:38,025 --> 00:23:40,369
 As well as the account. 

408
00:23:40,624 --> 00:23:44,969
 Registration is free, you can sign in with a free account. 

409
00:23:45,144 --> 00:23:48,705
 It will obfuscate the email address, so you use it fully. 

410
00:23:49,065 --> 00:23:52,348
 And again, all this without having to touch nasa.gov yet. 

411
00:23:52,348 --> 00:23:54,234
 Zero packages at nasa.gov. 

412
00:23:54,234 --> 00:23:56,760
 Nasa.gov has no idea we are behind them. 

413
00:23:57,441 --> 00:24:00,664
 9 thousand e-mail addresses, it's crazy. 

414
00:24:02,411 --> 00:24:07,603
 Okay, now we've seen Bosun before. 

415
00:24:07,603 --> 00:24:10,608
 But we do not know, Bosun is still working at NASA? 

416
00:24:11,633 --> 00:24:14,464
 It would be really strange if we access Bosun in the NASA account 

417
00:24:14,744 --> 00:24:16,465
 and he is not working there anymore. 

418
00:24:16,737 --> 00:24:18,089
 This to me is a red flag. 

419
00:24:18,969 --> 00:24:21,304
 So how can we find out if Bosun still works at NASA? 

420
00:24:22,264 --> 00:24:25,264
 We can connect to the SMTP server and try to send an email, 

421
00:24:25,561 --> 00:24:28,320
 and if we do not get a response back, we're ready. 

422
00:24:28,551 --> 00:24:32,804
 So Hunter.io can do this, Verify-email.org can also do this. 

423
00:24:33,762 --> 00:24:34,877
 But I'll explain, 

424
00:24:35,065 --> 00:24:39,168
 here at this point, we will connect to nasa.gov. 

425
00:24:39,561 --> 00:24:41,583
 Okay, if you notice here we look 

426
00:24:41,793 --> 00:24:43,905
 nasa.gov, which may not reach the DNS service. 

427
00:24:44,369 --> 00:24:47,399
 But here we make a connection with the email service. 

428
00:24:48,097 --> 00:24:49,761
 So now we ship packages to NASA. 

429
00:24:50,373 --> 00:24:53,176
 But what we are doing is just organizing the email, 

430
00:24:53,400 --> 00:24:56,832
 and NASA SMTP you can do with RCTool, Verify 

431
00:24:56,847 --> 00:24:59,447
 can use Verify, and has another primitive SMTP. 

432
00:24:59,706 --> 00:25:02,267
 And we're just going to ask, is this email account still valid? 

433
00:25:02,827 --> 00:25:03,692
 And that's just it. 

434
00:25:03,692 --> 00:25:06,565
 The connection closes after that, and we do not send any email. 

435
00:25:07,557 --> 00:25:11,917
 So if you're a Blue Team, and you're in the defense, 

436
00:25:12,597 --> 00:25:18,541
 You will want to see and see how someone opens a connection to an SMTP 

437
00:25:18,757 --> 00:25:23,301
 and checks the address emails and terminates the connection without sending an email. 

438
00:25:23,469 --> 00:25:26,762
 It must be people you should monitor more closely, 

439
00:25:26,762 --> 00:25:28,117
 active in your network. 

440
00:25:31,525 --> 00:25:33,117
 Twitter, we all use Twitter. 

441
00:25:34,223 --> 00:25:35,685
 There is a plugin called 'All My Tweets'. 

442
00:25:35,908 --> 00:25:40,956
 It's a Twitter API, but it basically aggregates all tweets from a target account. 

443
00:25:41,188 --> 00:25:43,980
 And in that case, this is my account, @dualcoremusic 

444
00:25:44,149 --> 00:25:46,828
 And I was looking for my email address on all my tweets. 

445
00:25:47,069 --> 00:25:49,467
 So I would tell Twitter, 

446
00:25:49,612 --> 00:25:51,564
 'Okay, show me dualcoremusic@gmail.com.' 

447
00:25:52,885 --> 00:25:55,716
 So I can use this on some other guy, 

448
00:25:55,884 --> 00:25:57,532
 or any other NASA employee. 

449
00:25:57,764 --> 00:26:01,092
 Go through other tweets, seek rejection from users, 

450
00:26:01,253 --> 00:26:03,252
 look for email addresses that have previously tweeted. 

451
00:26:03,831 --> 00:26:06,494
 Remove all that, now I have more e-mail addresses 

452
00:26:06,566 --> 00:26:08,481
 per individual user. 

453
00:26:11,003 --> 00:26:15,621
 LinkedIn, we all know that it is great to investigate people. 

454
00:26:15,622 --> 00:26:18,547
 But did you know that if you have LinkedIn eviction, 

455
00:26:18,748 --> 00:26:22,463
 can you get email addresses from user profiles? 

456
00:26:22,960 --> 00:26:24,351
 Cool, I'll show you how. 

457
00:26:25,518 --> 00:26:26,797
 So let's go to LinkedIn and look for someone. 

458
00:26:27,632 --> 00:26:30,485
 We get a unique ID, like LinkedIn's username. 

459
00:26:30,654 --> 00:26:32,245
 And we look at LinkedIn eviction, 

460
00:26:32,389 --> 00:26:34,542
 and we get the associated emails. 

461
00:26:35,580 --> 00:26:37,780
 This is the profile of Valentin, which David hacked. 

462
00:26:38,812 --> 00:26:43,052
 If we revise the source of this, we will get something like that. 

463
00:26:43,300 --> 00:26:44,556
 These annotation numbers. 

464
00:26:44,992 --> 00:26:46,760
 And we can get this number of annotation, 

465
00:26:46,943 --> 00:26:47,823
 which has a unique identification. 

466
00:26:48,895 --> 00:26:50,591
 And look at LinkedIn eviction 

467
00:26:50,959 --> 00:26:52,097
 and find an email address. 

468
00:26:53,775 --> 00:26:56,048
 We can also do this for an entire organization. 

469
00:26:56,328 --> 00:27:01,110
 So if we search for NASA on LinkedIn, we have 19,000 employees. 

470
00:27:02,192 --> 00:27:04,336
 We have 19,000 e-mail addresses from NASA employees. 

471
00:27:04,977 --> 00:27:06,119
 All for free, right? 

472
00:27:06,504 --> 00:27:11,775
 We did not even touch NASA's infrastructure making that recognition. 

473
00:27:20,498 --> 00:27:23,322
 So when you run ... This is running JPL, 

474
00:27:23,578 --> 00:27:25,218
 the NASA Jet Propulsion Laboratory. 

475
00:27:25,394 --> 00:27:27,406
 These are some of the identifications we have made. 

476
00:27:27,528 --> 00:27:29,903
 And when we look at those IDs in the LinkedIn eviction, 

477
00:27:30,063 --> 00:27:34,408
 we get that. These e-mails from nasa.gov. 

478
00:27:34,935 --> 00:27:39,598
 We also get what appear to be encrypted hashs. 

479
00:27:40,323 --> 00:27:41,572
 And they really are. 

480
00:27:41,572 --> 00:27:45,024
 We now have several hashs of every dump of the database. 

481
00:27:45,024 --> 00:27:46,918
 We'll get all the email addresses we collect, 

482
00:27:46,918 --> 00:27:49,078
 let's search all of them for the added database dump. 

483
00:27:49,078 --> 00:27:50,384
 We have all these hashs. 

484
00:27:51,026 --> 00:27:52,680
 Let's try to get credentials. 

485
00:27:54,211 --> 00:27:57,310
 So we worked and had some money that we spent 

486
00:27:57,310 --> 00:27:59,539
 in Sagitta's Brutalis equipment to work with the Hash. 

487
00:27:59,620 --> 00:28:03,639
 It has, as I know, six video cards or eight video cards. 

488
00:28:04,276 --> 00:28:06,441
 And it breaks passwords hash really really fast. 

489
00:28:06,765 --> 00:28:08,778
 But, if you do not have that kind of money. 

490
00:28:08,978 --> 00:28:11,899
 You can even translate hashs quickly into fetching. 

491
00:28:12,520 --> 00:28:17,410
 So there is insidepro.com. And they have this search engine inside the insidepro. 

492
00:28:17,593 --> 00:28:19,042
 And they store hashs inside. 

493
00:28:20,730 --> 00:28:21,842
 And then you get credentials. 

494
00:28:23,130 --> 00:28:26,273
 So we literally got 167 credentials for free. 

495
00:28:27,082 --> 00:28:28,210
 Without touching NASA. 

496
00:28:30,385 --> 00:28:32,345
 Also Google, right? 

497
00:28:32,529 --> 00:28:34,833
 Google hash, and you can find free translations 

498
00:28:34,920 --> 00:28:36,393
 and Google knows about it. 

499
00:28:36,853 --> 00:28:40,566
 Free internet for the 'rainbow table'. 

500
00:28:44,321 --> 00:28:47,928
 So what I think, that there are multiple versions of the LinkedIn eviction. 

501
00:28:48,241 --> 00:28:49,960
 I think the last statistic I saw, maybe 

502
00:28:50,120 --> 00:28:54,102
 96% or 98% of the eviction credentials had been hacked. 

503
00:28:54,103 --> 00:28:58,643
 So by entering our copy of broken LinkedIn dump credentials. 

504
00:28:58,988 --> 00:29:03,029
 He obtained 1628 credentials from NASA employees. 

505
00:29:03,511 --> 00:29:06,598
 All for free, without even touching NASA yet. 

506
00:29:07,696 --> 00:29:12,040
 Ok, so we have several users, who probably have access to good things. 

507
00:29:12,256 --> 00:29:14,328
 We have several hosts to look for. 

508
00:29:14,576 --> 00:29:16,264
 And we have several credentials for these users. 

509
00:29:16,785 --> 00:29:18,688
 And we have the systems, the people and the credentials. 

510
00:29:19,360 --> 00:29:20,679
 So I should start using them. 

511
00:29:22,152 --> 00:29:23,736
 Well, one of my favorite things to see, 

512
00:29:23,904 --> 00:29:27,248
 Wikis, there is a lot of information on Wikis. Right? 

513
00:29:27,824 --> 00:29:29,305
 So, going back to what we were doing, 

514
00:29:29,560 --> 00:29:30,744
 the system enumeration. 

515
00:29:30,760 --> 00:29:32,576
 Our system recognition. 

516
00:29:32,608 --> 00:29:35,688
 We found these Wikis, so that's fine. 

517
00:29:35,992 --> 00:29:40,120
 We will try to enter with some credentials in the Wiki. 

518
00:29:40,121 --> 00:29:43,932
 And if you can get in, you can get much more information. 

519
00:29:45,044 --> 00:29:48,905
 I mentioned GitHub earlier, I have an operation where 

520
00:29:48,905 --> 00:29:53,869
 a developer left a S3 Bucket url in his git on GitHub, 

521
00:29:53,869 --> 00:29:57,353
 and I was able to navigate that S3 Bucket 

522
00:29:57,354 --> 00:30:00,689
 and remove all backups that were on that S3 Bucket. 

523
00:30:03,045 --> 00:30:05,917
 You can use Google to find S3 Buckets, 

524
00:30:05,917 --> 00:30:09,703
 but gists are there to win. All the way. 

525
00:30:11,624 --> 00:30:15,871
 So the backups I got, from the S3 Bucket were duplicates. 

526
00:30:16,199 --> 00:30:18,895
 Has anyone seen duplicity? I did not know that until I saw it. 

527
00:30:19,047 --> 00:30:20,967
 A backup utility is free. 

528
00:30:21,135 --> 00:30:23,855
 But it's basically doing an rsync with GPG. 

529
00:30:24,399 --> 00:30:26,591
 It's a bit strange, you have encryption with backups. 

530
00:30:26,935 --> 00:30:30,163
 And we basically ended up with this encrypted file, 

531
00:30:30,163 --> 00:30:32,192
 with a TAR volume, sent to the cloud. 

532
00:30:32,349 --> 00:30:35,203
 I think duplicity can speak of several other platform sources, 

533
00:30:35,203 --> 00:30:37,206
 but many people are accustomed to these three. 

534
00:30:39,616 --> 00:30:45,689
 So here I am using aws sending to my tool, 

535
00:30:45,689 --> 00:30:48,794
 taking backups of that puppet server. 

536
00:30:48,969 --> 00:30:52,574
 And using duplicity to unzip the backups. 

537
00:30:54,414 --> 00:30:56,769
 But there's something that seems strange on this screen. 

538
00:31:01,305 --> 00:31:02,361
 No encryption. 

539
00:31:02,713 --> 00:31:08,606
 So for lack of use of GPG, then I'll need the secret passwords, 

540
00:31:08,606 --> 00:31:12,796
 keys to be able to unzip and re-compress those backups. 

541
00:31:12,796 --> 00:31:16,081
 But because of this operation the target did not use cryptography. 

542
00:31:16,081 --> 00:31:17,731
 I get all the secrets for free. 

543
00:31:21,841 --> 00:31:24,346
 So here I put several SSH keys in backups. 

544
00:31:24,602 --> 00:31:28,994
 And I was able to use the SSH key to enter 

545
00:31:29,202 --> 00:31:31,082
 like SSH in their environment and move around. 

546
00:31:31,690 --> 00:31:34,265
 And guess what, everything is completely invaded. 

547
00:31:35,431 --> 00:31:42,343
 That screen was ... there was an internet application that had an authentication mechanism on it. 

548
00:31:42,343 --> 00:31:45,601
 So I came in from behind that source code from that internet application. 

549
00:31:45,601 --> 00:31:49,365
 And I was able to dump credentials every time an engineer or developer came in. 

550
00:31:49,951 --> 00:31:52,658
 So these are one of the credentials, which I managed to withdraw. 

551
00:31:54,808 --> 00:31:57,214
 So at the end of the game, we're using secrets that 

552
00:31:57,295 --> 00:32:01,982
 we got it and now we have the source code for the real Morty. 

553
00:32:05,263 --> 00:32:10,602
 Again, Full Contact Recon, finding the systems, meeting the people 

554
00:32:10,603 --> 00:32:13,218
 who use these systems, and finding their credentials. 

555
00:32:14,057 --> 00:32:17,102
 Without sending traffic to the target's infrastructure. 

556
00:32:17,102 --> 00:32:19,786
 And then when you connect, you have a shell, 

557
00:32:19,786 --> 00:32:23,304
 has access, privileges and is quiet to go wherever you want. 

558
00:32:25,455 --> 00:32:28,886
 Again, hackers are lazy, what I did was just 

559
00:32:29,000 --> 00:32:32,548
 look on the internet, and then 'bam'. An entire organization. 

560
00:32:32,654 --> 00:32:34,754
 So take these steps, go back to work, 

561
00:32:34,754 --> 00:32:36,717
 and try again against your organization. 

562
00:32:36,872 --> 00:32:39,101
 How to steal credentials, close systems, 

563
00:32:39,101 --> 00:32:42,511
 make people work everywhere. 

564
00:32:42,823 --> 00:32:45,404
 I strive for a multinational to change its way of authenticating. 

565
00:32:45,604 --> 00:32:49,515
 But you can use these steps being a Red Team or Blue Team. 

566
00:32:49,673 --> 00:32:51,810
 To help improve the security of your organization. 

567
00:32:53,672 --> 00:32:56,876
 Thank you! Any question? 

