1
00:00:00,000 --> 00:00:01,310
- [Adam] And for our next speaker,

2
00:00:01,310 --> 00:00:04,300
we're gonna have Anthony
Randazzo from Expel.

3
00:00:04,300 --> 00:00:05,133
Thank you.

4
00:00:05,133 --> 00:00:06,460
I'm really excited to be here.

5
00:00:06,460 --> 00:00:09,040
Thank you, ATT&CK team for
giving me the opportunity

6
00:00:09,040 --> 00:00:12,829
to know present cloud things.

7
00:00:12,830 --> 00:00:16,450
Cloud is sort of this
new frontier in security

8
00:00:16,450 --> 00:00:21,122
that we're starting to discover,
so I'm happy to be here.

9
00:00:26,500 --> 00:00:30,960
All right, so again, my
name is Anthony Randazzo.

10
00:00:30,960 --> 00:00:34,310
I lead the global response
team here at Expel.

11
00:00:34,310 --> 00:00:35,143
What is Expel?

12
00:00:35,143 --> 00:00:36,880
Expel's a technology company

13
00:00:36,880 --> 00:00:40,210
that's built this SAS
application, the SAS platform,

14
00:00:40,210 --> 00:00:43,660
to enable our 24/7 managed
detection and response service.

15
00:00:43,660 --> 00:00:45,800
We integrate directly with the APIs

16
00:00:45,800 --> 00:00:48,212
and more than 45 different
security vendors.

17
00:00:49,200 --> 00:00:54,200
Prior to Expel, I managed a
Fortune 25 healthcare detection

18
00:00:54,307 --> 00:00:55,650
and response team.

19
00:00:55,650 --> 00:00:58,440
Before that, I dabbled
in threat intelligence.

20
00:00:58,440 --> 00:01:01,349
I was a crime analyst at iSIGHT Partners,

21
00:01:01,350 --> 00:01:04,480
which was subsequently
acquired by FireEye.

22
00:01:04,480 --> 00:01:09,450
Just a quick disclaimer, I'm
by no means a cloud expert,

23
00:01:09,450 --> 00:01:12,717
but I do frequently
contribute our cloud detection

24
00:01:12,717 --> 00:01:16,533
and response findings to our
blog, which you can see here.

25
00:01:17,390 --> 00:01:21,633
Feel free to hit that URL
up for some cool to that.

26
00:01:26,930 --> 00:01:27,853
All right.

27
00:01:31,090 --> 00:01:34,900
So what to expect from this presentation.

28
00:01:34,900 --> 00:01:37,500
We're all insecurity and we all know

29
00:01:37,500 --> 00:01:39,890
that security is sort of this afterthought

30
00:01:39,890 --> 00:01:43,050
in our corporate technology environments.

31
00:01:43,050 --> 00:01:45,220
It shouldn't be a surprise to anybody

32
00:01:45,220 --> 00:01:48,333
that cloud sort of
followed that similar path.

33
00:01:49,480 --> 00:01:51,440
To be honest, we're actually observing

34
00:01:51,440 --> 00:01:53,120
that much of cloud security
is actually falling

35
00:01:53,120 --> 00:01:55,710
on people outside of
traditional security teams

36
00:01:55,710 --> 00:01:58,830
like devops or cloud architecture.

37
00:01:58,830 --> 00:02:01,360
But it's not all doom and gloom.

38
00:02:01,360 --> 00:02:04,860
So this presentation's less
about how we can use ATT&CK

39
00:02:04,860 --> 00:02:06,140
and its current form today,

40
00:02:06,140 --> 00:02:08,750
but how we can evolve and mature it.

41
00:02:08,750 --> 00:02:11,400
So today, we're gonna
cover ATT&CK for cloud

42
00:02:11,400 --> 00:02:15,740
as we see it here,
defending the control plane,

43
00:02:15,740 --> 00:02:18,440
a real world incident
and some other incidents

44
00:02:18,440 --> 00:02:22,109
and how we've applied
ATT&CK for cloud there

45
00:02:22,110 --> 00:02:24,420
and then some takeaways.

46
00:02:24,420 --> 00:02:27,320
Just a quick note again,
on this presentation,

47
00:02:27,320 --> 00:02:30,209
it assumes that you have a
limited knowledge of cloud.

48
00:02:30,210 --> 00:02:33,180
So apologies if there's
anything that's elementary

49
00:02:33,180 --> 00:02:35,150
to the cloud experts out there,

50
00:02:35,150 --> 00:02:39,120
or if I've overlooked a
foundational information

51
00:02:39,120 --> 00:02:42,913
for less experienced
cloud security people.

52
00:02:46,912 --> 00:02:50,690
So ATT&CK for clouds just over a year old.

53
00:02:50,690 --> 00:02:52,700
The community has been iterating

54
00:02:53,600 --> 00:02:57,440
as the world learns more
about attackers in the cloud.

55
00:02:57,440 --> 00:02:58,750
Jen and the ATT&CK team

56
00:02:58,750 --> 00:03:01,570
released some really, really
great changes last month,

57
00:03:01,570 --> 00:03:04,680
plus all the new sub techniques for cloud.

58
00:03:04,680 --> 00:03:07,940
So what exactly is ATT&CK for cloud.

59
00:03:07,940 --> 00:03:09,570
Simply put it's a way

60
00:03:09,570 --> 00:03:12,010
to communicate how attackers misuse

61
00:03:12,010 --> 00:03:13,959
and abuse cloud services.

62
00:03:13,960 --> 00:03:16,220
So we see this as two big buckets today.

63
00:03:16,220 --> 00:03:17,737
We have infrastructure as a service

64
00:03:17,737 --> 00:03:19,320
and we have software as a service.

65
00:03:19,320 --> 00:03:21,209
So infrastructure as a service

66
00:03:21,210 --> 00:03:25,440
are those large cloud providers
like AWS, Azure, Google.

67
00:03:25,440 --> 00:03:28,070
The ATT&CK surface for these
infrastructures as a service

68
00:03:28,070 --> 00:03:29,670
are similar because they're providing

69
00:03:29,670 --> 00:03:32,489
almost the same services as each other,

70
00:03:32,490 --> 00:03:34,440
they just use different names.

71
00:03:34,440 --> 00:03:36,810
When we talk about software as a service,

72
00:03:36,810 --> 00:03:38,110
these are cloud services

73
00:03:38,110 --> 00:03:39,760
that you don't have to
manage any infrastructure

74
00:03:39,760 --> 00:03:40,792
or a platform.

75
00:03:41,670 --> 00:03:44,540
The big ones, we all know,
Salesforce, ServiceNow,

76
00:03:44,540 --> 00:03:47,260
Zoom, Workday, GitHub, et cetera.

77
00:03:47,260 --> 00:03:49,019
The ATT&CK services with these,

78
00:03:49,020 --> 00:03:51,060
there's a little bit more variance,

79
00:03:51,060 --> 00:03:53,070
but are likely gonna be concerned

80
00:03:53,070 --> 00:03:58,070
with the identity and access
management that software

81
00:03:58,320 --> 00:04:00,093
and the service APIs for them.

82
00:04:04,750 --> 00:04:08,370
So how is cloud different

83
00:04:08,370 --> 00:04:11,400
from the rest of the enterprise ATT&CK?

84
00:04:11,400 --> 00:04:15,300
So there there's clearly
enough differences

85
00:04:15,300 --> 00:04:18,550
in the ATT&CK surfaces of
each of the operating systems.

86
00:04:18,550 --> 00:04:22,113
So Linux, Windows, Mac, that
they weren't their own matrix.

87
00:04:23,070 --> 00:04:25,310
But what makes the cloud matrices

88
00:04:26,170 --> 00:04:28,330
or the cloud providers different?

89
00:04:28,330 --> 00:04:29,900
It's not really that much.

90
00:04:29,900 --> 00:04:31,549
So identity and access management

91
00:04:31,550 --> 00:04:33,350
is the primary differentiator

92
00:04:33,350 --> 00:04:35,010
in each of these cloud platforms.

93
00:04:35,010 --> 00:04:36,730
They all provide the same services.

94
00:04:36,730 --> 00:04:40,610
It's how you access those
services at their core.

95
00:04:40,610 --> 00:04:44,330
So each platform has a different identity

96
00:04:44,330 --> 00:04:46,190
and access management.

97
00:04:46,190 --> 00:04:48,610
And we'd argue that much
of the learning curve

98
00:04:48,610 --> 00:04:51,000
actually lies with the IAM,

99
00:04:51,000 --> 00:04:52,660
the identity and access management

100
00:04:52,660 --> 00:04:54,393
for security practitioners.

101
00:04:55,260 --> 00:04:59,570
So what makes the cloud matrices similar,

102
00:04:59,570 --> 00:05:01,110
and this is the big thing here,

103
00:05:01,110 --> 00:05:03,820
each of them have what we call a control

104
00:05:03,820 --> 00:05:05,193
or a management plane.

105
00:05:06,075 --> 00:05:07,909
And this is a similar attack surface

106
00:05:07,910 --> 00:05:09,680
across each of those providers.

107
00:05:09,680 --> 00:05:12,990
So the infrastructure as a service users,

108
00:05:12,990 --> 00:05:14,780
we use this control plane

109
00:05:14,780 --> 00:05:18,690
to manage the various
cloud resources via APIs.

110
00:05:18,690 --> 00:05:21,480
And this is where we're
actually seeing attackers abuse

111
00:05:21,480 --> 00:05:23,610
and misuse cloud services.

112
00:05:23,610 --> 00:05:27,130
And it'll be one of the main
focuses of this presentation.

113
00:05:27,130 --> 00:05:30,623
So considering the differences
and similarities today,

114
00:05:31,818 --> 00:05:34,520
is this enough for each
of these cloud providers

115
00:05:34,520 --> 00:05:36,190
to warrant their own matrix.

116
00:05:36,190 --> 00:05:39,469
Today we have an AWS
matrix, and Azure matrix,

117
00:05:39,470 --> 00:05:40,990
and GCP matrix.

118
00:05:40,990 --> 00:05:42,670
And the answer is actually no.

119
00:05:42,670 --> 00:05:44,867
So last month, Jen on the ATT&CK team

120
00:05:44,867 --> 00:05:49,010
announced their consolidation
from one matrix down

121
00:05:49,010 --> 00:05:51,560
or from the three matrices
down to one matrix

122
00:05:51,560 --> 00:05:53,933
based on what we know
about attackers today.

123
00:05:58,010 --> 00:06:01,800
So let's zoom in on the
the cloud attack surfaces.

124
00:06:01,800 --> 00:06:04,250
There's lots of new
technology in the cloud

125
00:06:04,250 --> 00:06:06,253
that didn't even exist 10 years ago.

126
00:06:07,370 --> 00:06:10,910
And there's quite attack
surfaces at the same time.

127
00:06:10,910 --> 00:06:14,530
So we already mentioned the control plane,

128
00:06:14,530 --> 00:06:15,919
the management plane,

129
00:06:15,920 --> 00:06:19,160
it's a way to abstract administration away

130
00:06:19,160 --> 00:06:23,160
from all of these various
services using one thing.

131
00:06:23,160 --> 00:06:26,480
We have Kubernetes and it's
control plane for management.

132
00:06:26,480 --> 00:06:27,870
Kubernetes being a way

133
00:06:27,870 --> 00:06:30,143
to manage or containerize the environment.

134
00:06:31,273 --> 00:06:32,960
I'm not an expert by
any means of Kubernetes,

135
00:06:32,960 --> 00:06:34,919
so I will stop there.

136
00:06:34,920 --> 00:06:39,180
Storage services like
S3 or Azure Blob Service

137
00:06:39,180 --> 00:06:41,550
or Google cloud service,

138
00:06:41,550 --> 00:06:44,103
this is your hard drives in the cloud.

139
00:06:45,000 --> 00:06:46,500
The compute resources,

140
00:06:46,500 --> 00:06:49,690
so all of the VMs that run in the cloud.

141
00:06:49,690 --> 00:06:54,690
So Amazon EC2, Azure VM,

142
00:06:54,760 --> 00:06:57,500
this is where all of our
applications are running

143
00:06:57,500 --> 00:06:58,600
that are not in containerized

144
00:06:58,600 --> 00:07:00,900
or even in containerized environments.

145
00:07:00,900 --> 00:07:04,962
Cloud databases and AWS,
RDS, Redshift, et cetera.

146
00:07:05,990 --> 00:07:10,390
So why did we choose to
focus on this control plane

147
00:07:10,390 --> 00:07:13,402
given we know about all of
these different attack surfaces?

148
00:07:14,710 --> 00:07:15,852
A few reasons.

149
00:07:18,560 --> 00:07:20,500
Our theory was that it
would likely be easier

150
00:07:20,500 --> 00:07:23,050
to spot attacker fingerprints.

151
00:07:23,050 --> 00:07:24,440
And I'll get more on this soon

152
00:07:24,440 --> 00:07:26,850
with regards to like the data that we use

153
00:07:26,850 --> 00:07:28,630
to spot those fingerprints.

154
00:07:28,630 --> 00:07:31,280
But it's also a super
high risk for businesses,

155
00:07:31,280 --> 00:07:33,630
a business, any businesses.

156
00:07:33,630 --> 00:07:38,070
If you lose the access
keys to your control plane,

157
00:07:38,070 --> 00:07:41,120
it could potentially be
like having domain admin

158
00:07:41,120 --> 00:07:42,693
for a Windows environment.

159
00:07:44,490 --> 00:07:46,940
Another reason, there's
not a ton of traction

160
00:07:46,940 --> 00:07:48,230
with EDR in the cloud.

161
00:07:48,230 --> 00:07:49,790
There's very few vendors

162
00:07:49,790 --> 00:07:52,350
that are actually spending
a ton of effort here

163
00:07:52,350 --> 00:07:54,630
and there's even less
customers deploying it

164
00:07:56,253 --> 00:07:59,909
that could be possibly due to
the reason I mentioned before

165
00:07:59,910 --> 00:08:04,310
of cloud security falling
on other teams like devops.

166
00:08:04,310 --> 00:08:06,610
And lastly, the migration

167
00:08:06,610 --> 00:08:10,343
to containerized and
serverless cloud compute.

168
00:08:14,940 --> 00:08:18,219
So it's important to know
what we're responsible for

169
00:08:18,220 --> 00:08:22,100
versus what our cloud
providers are responsible for

170
00:08:22,100 --> 00:08:23,610
regarding security.

171
00:08:23,610 --> 00:08:26,730
So this is the shared responsibility model

172
00:08:26,730 --> 00:08:28,190
for cloud security.

173
00:08:28,190 --> 00:08:31,219
Each provider has one and
they're all relatively the same.

174
00:08:31,220 --> 00:08:34,840
This is AWS's, which much of
the rest of this presentation

175
00:08:34,840 --> 00:08:36,463
will be the focus of.

176
00:08:37,600 --> 00:08:39,360
But what what we found out

177
00:08:39,360 --> 00:08:41,610
through the shared responsibility model

178
00:08:41,610 --> 00:08:44,130
is that the cloud provider
is actually responsible

179
00:08:44,130 --> 00:08:45,670
for very little security.

180
00:08:45,670 --> 00:08:48,510
And I think this is kinda a
misconception that people have

181
00:08:48,510 --> 00:08:50,030
when migrating to the cloud

182
00:08:51,065 --> 00:08:52,950
that there's inherently more security.

183
00:08:52,950 --> 00:08:55,180
It's definitely true in some instances,

184
00:08:55,180 --> 00:08:57,959
but generally speaking, it's not.

185
00:08:57,960 --> 00:09:01,540
So on this diagram,

186
00:09:01,540 --> 00:09:04,699
the blue mostly represents all
the different cloud services.

187
00:09:04,700 --> 00:09:09,700
that each provider offers,
that's EC2 and VPC,

188
00:09:09,710 --> 00:09:14,160
S3 storage, IAM, RDS, all
these different acronyms

189
00:09:14,160 --> 00:09:16,709
that are services and AWS.

190
00:09:16,710 --> 00:09:19,780
All of these services are
managed by their control plane,

191
00:09:19,780 --> 00:09:22,110
and the control plane is made
up of many different APIs

192
00:09:22,110 --> 00:09:23,890
to access each service.

193
00:09:23,890 --> 00:09:25,640
So there's three ways

194
00:09:25,640 --> 00:09:27,610
that you can actually
access those services

195
00:09:27,610 --> 00:09:29,550
through the control plane.

196
00:09:29,550 --> 00:09:33,933
First, the web UI, that's
console.aws.amazon.com.

197
00:09:35,140 --> 00:09:38,090
Next is the CLI, which is
the command line interface

198
00:09:38,090 --> 00:09:39,780
through some shell.

199
00:09:39,780 --> 00:09:41,620
This isn't commonly used.

200
00:09:41,620 --> 00:09:43,310
And then we have programmatic access

201
00:09:43,310 --> 00:09:45,430
through software development kits, SDKs.

202
00:09:45,430 --> 00:09:47,329
And this is the most common

203
00:09:47,330 --> 00:09:52,290
because most AWS resources
are managed programmatically

204
00:09:52,290 --> 00:09:53,849
through infrastructures code

205
00:09:53,850 --> 00:09:55,853
like Terraform or cloud formation.

206
00:09:56,960 --> 00:09:59,400
But we do know that
the cloud control plane

207
00:09:59,400 --> 00:10:01,800
is actually a shared responsibility.

208
00:10:01,800 --> 00:10:05,490
AWS tries to make the
APIs inherently secure,

209
00:10:05,490 --> 00:10:06,750
and you can make the debate

210
00:10:06,750 --> 00:10:09,550
as to whether there's
vulnerabilities or their features,

211
00:10:10,630 --> 00:10:15,100
but they're also providing
protection through paid services

212
00:10:15,100 --> 00:10:16,690
like Amazon guard duty

213
00:10:22,310 --> 00:10:24,329
So here is a brief story

214
00:10:24,330 --> 00:10:26,587
of our threat detection journey in AWS.

215
00:10:28,230 --> 00:10:31,800
We know we wanted to focus on
defending the control plane,

216
00:10:31,800 --> 00:10:33,189
but where do we start?

217
00:10:33,190 --> 00:10:36,880
So first we ask what native
detection capabilities

218
00:10:36,880 --> 00:10:40,630
or services does AWS offer
for the control plane?

219
00:10:40,630 --> 00:10:42,150
The answer is guard duty,

220
00:10:42,150 --> 00:10:47,150
and there's about 50 or so use
cases or guard duty findings

221
00:10:47,530 --> 00:10:51,699
for the control plane that
offers threat detection

222
00:10:51,700 --> 00:10:52,750
in that service.

223
00:10:52,750 --> 00:10:57,120
So there's definitely some
great detection in guard duty,

224
00:10:57,120 --> 00:10:59,930
but some are less helpful just
like any security product.

225
00:10:59,930 --> 00:11:01,890
We actually have a couple
of blogs highlighting

226
00:11:01,890 --> 00:11:03,463
the value we see in guard duty.

227
00:11:05,300 --> 00:11:07,750
So knowing that what are our gaps?

228
00:11:07,750 --> 00:11:10,530
We have guard duty, what are the gaps

229
00:11:10,530 --> 00:11:13,270
and how we defend this control plane.

230
00:11:13,270 --> 00:11:16,449
There's almost 10,000 different APIs.

231
00:11:16,450 --> 00:11:18,063
So there's probably quite a few.

232
00:11:19,160 --> 00:11:22,100
Shout out to Scott at Summit Route

233
00:11:22,100 --> 00:11:25,800
for providing the plethora
of AWS security resources

234
00:11:25,800 --> 00:11:28,516
we used sort of drive this detection

235
00:11:28,517 --> 00:11:30,103
and response strategy as well.

236
00:11:31,540 --> 00:11:32,663
So what's next?

237
00:11:33,737 --> 00:11:37,230
Now we need to find the data
that we have available to us

238
00:11:37,230 --> 00:11:42,000
to develop that detection
strategy for the control plane.

239
00:11:42,000 --> 00:11:45,050
And with that, we're sort
of off the CloudTrail now.

240
00:11:45,050 --> 00:11:47,880
So CloudTrail is the native AWS logging

241
00:11:47,880 --> 00:11:49,173
for our control plane.

242
00:11:52,200 --> 00:11:53,910
So we've got all the CloudTrail data.

243
00:11:53,910 --> 00:11:55,839
How do we start building
threat detections?

244
00:11:55,840 --> 00:11:56,950
What are our use cases?

245
00:11:56,950 --> 00:11:58,830
What are our threat models?

246
00:11:58,830 --> 00:12:01,970
So we decided to look at
offensive security tools

247
00:12:01,970 --> 00:12:04,720
that abused or misused
the control plane in AWS.

248
00:12:04,720 --> 00:12:06,790
These are penetration testing frameworks.

249
00:12:06,790 --> 00:12:09,890
PACU is or was

250
00:12:09,890 --> 00:12:12,790
and probably still is the
most well-known today.

251
00:12:12,790 --> 00:12:15,469
This was open source from the good folks

252
00:12:15,470 --> 00:12:17,473
over at Rhino Security Labs.

253
00:12:18,530 --> 00:12:20,209
After we did this,

254
00:12:20,210 --> 00:12:23,270
we built experimental detections
on the CloudTrail data

255
00:12:23,270 --> 00:12:27,380
to see if, one, attackers were
actually using these tools,

256
00:12:27,380 --> 00:12:28,630
which some were,

257
00:12:28,630 --> 00:12:33,630
or two, are the attackers
abusing or misusing the APIs

258
00:12:37,210 --> 00:12:41,470
that were identified in
these OSTs in other ways.

259
00:12:41,470 --> 00:12:43,200
So from there, we iterated.

260
00:12:43,200 --> 00:12:46,950
We tuned, enriched,
contextualized these detections

261
00:12:46,950 --> 00:12:49,310
as we learned more about real attackers.

262
00:12:49,310 --> 00:12:53,630
And we caught a bunch of
penetration testers in red team

263
00:12:53,630 --> 00:12:54,743
along the way.

264
00:12:58,190 --> 00:13:00,920
So this is an actual attack

265
00:13:00,920 --> 00:13:02,872
that Expel detected and responded to.

266
00:13:04,220 --> 00:13:07,350
It's what I would call an
unconventional coin miner.

267
00:13:07,350 --> 00:13:11,310
Because when we generally
see a coin miner,

268
00:13:11,310 --> 00:13:14,630
it's a result of an RCE exploitation

269
00:13:14,630 --> 00:13:16,143
on some web application.

270
00:13:17,550 --> 00:13:20,670
In this instance, we have an attacker

271
00:13:20,670 --> 00:13:25,180
that identified root AWS access keys

272
00:13:25,180 --> 00:13:27,849
and a GitHub repo or wherever it was,

273
00:13:27,850 --> 00:13:30,650
and then used those keys we saw

274
00:13:30,650 --> 00:13:33,390
from an unusual IP from that environment.

275
00:13:33,390 --> 00:13:37,253
So let's talk about root
access key risk a little bit.

276
00:13:39,560 --> 00:13:43,270
The root access key
risk allows an attacker

277
00:13:43,270 --> 00:13:44,720
to have complete control

278
00:13:44,720 --> 00:13:47,400
of potentially production environment.

279
00:13:47,400 --> 00:13:51,390
This is route access, unless
there are some controls

280
00:13:51,390 --> 00:13:54,460
that you can implement to
reduce access to root keys,

281
00:13:54,460 --> 00:13:57,080
but in most instances
it's complete control

282
00:13:57,080 --> 00:13:58,930
of that AWS account.

283
00:13:58,930 --> 00:14:03,930
So basically the domain
admin of the AWS account.

284
00:14:04,220 --> 00:14:06,420
So what did the attacker
do with those keys?

285
00:14:08,280 --> 00:14:11,970
He or she created
multiple, extra large EC2s

286
00:14:11,970 --> 00:14:15,950
and associated SSH key pairs
for those EC2 instances,

287
00:14:15,950 --> 00:14:17,550
those are VMs.

288
00:14:17,550 --> 00:14:20,829
Then they modified the
VPC security groups,

289
00:14:20,830 --> 00:14:23,810
the virtual firewalls to allow any access.

290
00:14:23,810 --> 00:14:26,949
And this was all done via
an automated bot written

291
00:14:26,950 --> 00:14:30,753
in one of the AWS SDKs or
software development kits.

292
00:14:30,753 --> 00:14:32,810
At this instance, it was going,

293
00:14:32,810 --> 00:14:35,839
so a whole bot that was written and go.

294
00:14:35,840 --> 00:14:39,620
So those SSH keys were then passed off

295
00:14:39,620 --> 00:14:42,940
to access the new EC2s that were spun up

296
00:14:42,940 --> 00:14:44,940
to install the coin miners.

297
00:14:44,940 --> 00:14:47,340
This is where we actually
saw guard duty coming.

298
00:14:50,840 --> 00:14:53,010
Guard duty detections are
based on three data sets.

299
00:14:53,010 --> 00:14:56,900
It's CloudTrail, which is
the control plane logs.

300
00:14:56,900 --> 00:14:59,930
Your DNS and AWS and your VPC flow logs,

301
00:14:59,930 --> 00:15:01,660
which is your NetFlow.

302
00:15:01,660 --> 00:15:04,250
But keep in mind that
this guard duty alert

303
00:15:04,250 --> 00:15:07,783
is actually EC2 finding and
is not for the control plane.

304
00:15:08,760 --> 00:15:11,310
This finding is actually meant
to identify evil in your EC2

305
00:15:11,310 --> 00:15:14,250
based on DNS or flow traffic.

306
00:15:14,250 --> 00:15:16,000
But at the end of the day,

307
00:15:16,000 --> 00:15:18,630
it was great correlation for our analysts.

308
00:15:18,630 --> 00:15:22,870
So with this story painted
or this picture painted,

309
00:15:22,870 --> 00:15:27,250
this leads into how we visualize
MITRE ATT&CK for cloud.

310
00:15:27,250 --> 00:15:28,700
So let's get into that a bit.

311
00:15:30,780 --> 00:15:34,630
So what we have here is a model
of everything that occurred

312
00:15:35,670 --> 00:15:39,319
with the AWS root keys
before those SSH keys

313
00:15:39,320 --> 00:15:42,270
were used to authenticate to EC2.

314
00:15:42,270 --> 00:15:44,453
Think of it as two phases of the attack.

315
00:15:45,630 --> 00:15:48,370
But this also highlights how
little we know about attacks

316
00:15:48,370 --> 00:15:52,083
on the infrastructure of service
platforms, AWS, GCP, Azure,

317
00:15:53,110 --> 00:15:56,433
There's lots of maturity and
the other enterprise matrices.

318
00:15:57,340 --> 00:15:59,280
So to detect an attacker here,

319
00:15:59,280 --> 00:16:01,319
we're relying on our security signal

320
00:16:01,320 --> 00:16:03,070
from those control planes.

321
00:16:03,070 --> 00:16:05,780
So for AWS, it's CloudTrail.

322
00:16:05,780 --> 00:16:08,069
And GCP, it's the admin activity,

323
00:16:08,070 --> 00:16:10,550
the system event and the
data access audit logs.

324
00:16:10,550 --> 00:16:12,473
It's the activity logs and Azure.

325
00:16:13,500 --> 00:16:14,800
All of these control plane logs

326
00:16:14,800 --> 00:16:16,599
are not created equal, though.

327
00:16:16,600 --> 00:16:19,930
You got to think that AWS has been around

328
00:16:19,930 --> 00:16:23,439
for probably five more...

329
00:16:23,440 --> 00:16:25,400
It's got five more years
of maturity than GCP.

330
00:16:25,400 --> 00:16:28,530
So naturally, the AWS control plane logs

331
00:16:28,530 --> 00:16:32,913
are significantly more mature
than GCP in our experience.

332
00:16:37,510 --> 00:16:41,300
So here is what we call the
second phase of the ATT&CK.

333
00:16:41,300 --> 00:16:45,510
Everything after those SSH
keys were passed to the bot

334
00:16:45,510 --> 00:16:47,760
to install the coin miners.

335
00:16:47,760 --> 00:16:50,960
And what you're seeing here is
the enterprise Linux matrix.

336
00:16:50,960 --> 00:16:52,050
So the first thing we observe

337
00:16:52,050 --> 00:16:54,420
is obviously a much more well understood

338
00:16:54,420 --> 00:16:58,130
and mature attack surface
than an attack for cloud.

339
00:16:58,130 --> 00:17:01,340
But interestingly, this is
almost the same attack mapping

340
00:17:01,340 --> 00:17:06,340
as we sort of mentioned
earlier with RCE exploitation

341
00:17:06,760 --> 00:17:09,052
of a web application to
install a coin miner.

342
00:17:16,839 --> 00:17:19,689
So we actually have a few
more examples of attackers

343
00:17:19,690 --> 00:17:21,860
hopping around between the cloud

344
00:17:21,859 --> 00:17:24,760
and the enterprise
windows or Linux matrices.

345
00:17:24,760 --> 00:17:29,440
So similar to the attack
we described earlier,

346
00:17:29,440 --> 00:17:34,440
we have another instance of an attacker,

347
00:17:34,620 --> 00:17:37,129
except this came from the AWS CLI.

348
00:17:37,130 --> 00:17:39,410
So it was more hands on keyboard,

349
00:17:39,410 --> 00:17:42,110
but it was multiple compromised keys

350
00:17:42,110 --> 00:17:46,280
and the attacker imported
their own SSH keys

351
00:17:46,280 --> 00:17:47,817
to access the EC2.

352
00:17:48,740 --> 00:17:53,740
Next, we had Python SDK access,
AWS system security manager,

353
00:17:55,870 --> 00:18:00,870
SSM is the SCCM of AWS.

354
00:18:00,900 --> 00:18:05,900
And by default, this
provides pseudo Linux access.

355
00:18:07,111 --> 00:18:08,510
While this wasn't a real attacker,

356
00:18:08,510 --> 00:18:10,573
it was a pretty sophisticated red team.

357
00:18:12,050 --> 00:18:16,129
Next we have server-side
request forgery exploitation,

358
00:18:16,130 --> 00:18:17,153
so SSRF.

359
00:18:18,370 --> 00:18:19,639
These are the ones that we see

360
00:18:19,640 --> 00:18:22,360
or we used to see most
commonly in the news,

361
00:18:22,360 --> 00:18:26,219
similar to many high profile
breaches like Capital One,

362
00:18:26,220 --> 00:18:28,380
essentially the EC2 instance,

363
00:18:28,380 --> 00:18:32,820
the VM has credential
access to the control plane

364
00:18:32,820 --> 00:18:34,810
through the instance metadata service

365
00:18:36,040 --> 00:18:41,040
that provides data, the EC2,
that it needs to do its thing.

366
00:18:41,130 --> 00:18:44,410
But essentially, you can take
those EC2 instance credentials

367
00:18:44,410 --> 00:18:48,500
that may be over permissioned
and can use those

368
00:18:48,500 --> 00:18:51,840
to do malicious abuse,
misuse the control plane,

369
00:18:51,840 --> 00:18:54,203
or even use them and escalate privileges.

370
00:18:55,120 --> 00:18:57,832
And lastly, we saw an RDS database.

371
00:18:58,900 --> 00:19:01,180
What this was, was actually a broad scan

372
00:19:01,180 --> 00:19:04,270
against open PostgreSQL databases.

373
00:19:04,270 --> 00:19:07,670
It wasn't quite that hop between matrices,

374
00:19:07,670 --> 00:19:10,130
but what was interesting
was that we were able

375
00:19:10,130 --> 00:19:12,290
to identify how the database was ransomed

376
00:19:12,290 --> 00:19:15,280
through the CloudTrail control plane logs.

377
00:19:15,280 --> 00:19:18,780
And to do this, actually CloudTrail logs,

378
00:19:18,780 --> 00:19:21,690
we saw when the password was changed

379
00:19:21,690 --> 00:19:25,670
and that RDS instance was clearly exposed

380
00:19:25,670 --> 00:19:26,993
to the open internet.

381
00:19:34,170 --> 00:19:37,870
So based on our detection
response experience

382
00:19:37,870 --> 00:19:40,070
in AWS here at Expel,

383
00:19:40,070 --> 00:19:43,679
we developed this really
cool mind map for ATT&CK

384
00:19:43,680 --> 00:19:47,590
for the APIs that we observed
being abused or misused

385
00:19:47,590 --> 00:19:51,120
over the last 18 plus months.

386
00:19:51,120 --> 00:19:54,010
So keep in mind that
many of these have yet

387
00:19:54,010 --> 00:19:56,750
to be modeled into ATT&CK for cloud,

388
00:19:56,750 --> 00:20:00,200
but we're definitely working
with Jen and the miter folks

389
00:20:00,200 --> 00:20:03,510
to get some of this stuff
documented and modeled in.

390
00:20:03,510 --> 00:20:07,140
But if you would like a
copy, the link is there,

391
00:20:07,140 --> 00:20:09,290
and we're happy to
share it with everybody.

392
00:20:12,190 --> 00:20:15,300
So let's talk about some of the takeaways.

393
00:20:15,300 --> 00:20:19,383
There's clearly lots of
ATT&CK surface in the cloud.

394
00:20:20,450 --> 00:20:22,190
But there's also lots of opportunity

395
00:20:22,190 --> 00:20:25,630
to better understand all
of the enterprise matrices

396
00:20:25,630 --> 00:20:27,873
and improve cloud in particular.

397
00:20:29,200 --> 00:20:32,080
We don't know what we don't know.

398
00:20:32,080 --> 00:20:34,620
There's a lot of public
detections out there

399
00:20:34,620 --> 00:20:36,479
against CloudTrail,

400
00:20:37,400 --> 00:20:40,140
but many of these vast
majority of these are

401
00:20:40,140 --> 00:20:42,880
for what we would call
a risky configuration.

402
00:20:42,880 --> 00:20:45,570
So an S3 bucket exposed to the internet

403
00:20:45,570 --> 00:20:48,540
or an RDS bucket exposed to the internet.

404
00:20:48,540 --> 00:20:53,540
A risky configuration change
on your VPC security group.

405
00:20:54,460 --> 00:20:57,220
And these aren't really
pushing the envelope,

406
00:20:57,220 --> 00:21:01,240
it's just a lot of alerts that
don't tell us a whole lot.

407
00:21:01,240 --> 00:21:04,070
What we need are more
threat-centric detections.

408
00:21:04,070 --> 00:21:06,350
We need more experimentation.

409
00:21:06,350 --> 00:21:09,112
Again, this is sort of that new frontier,

410
00:21:10,830 --> 00:21:12,669
and we need to try a
bunch of different things

411
00:21:12,670 --> 00:21:14,623
to sort of see what sticks.

412
00:21:15,510 --> 00:21:18,190
And lastly, attack automation I think

413
00:21:18,190 --> 00:21:20,720
is really here to stay.

414
00:21:20,720 --> 00:21:23,110
Almost every example that I had discussed

415
00:21:23,110 --> 00:21:25,350
was an automated attack

416
00:21:25,350 --> 00:21:27,439
with the exception of the one attacker

417
00:21:27,440 --> 00:21:28,590
that was using the CLI.

418
00:21:30,640 --> 00:21:34,360
But this limits our ability
to respond rapidly attacks.

419
00:21:34,360 --> 00:21:36,639
And it almost implies that
we have to sort of shift

420
00:21:36,640 --> 00:21:40,703
to this automated response
framework in the cloud.

421
00:21:41,910 --> 00:21:44,643
So that's all I had today.

422
00:21:45,954 --> 00:21:49,649
I hope that this is very
insightful for everybody.

423
00:21:49,650 --> 00:21:52,010
I know this is a lot of new material

424
00:21:52,010 --> 00:21:55,010
and a lot of new concepts to people.

425
00:21:55,010 --> 00:21:59,110
18 months ago, I had virtually
no experience in the cloud.

426
00:21:59,110 --> 00:22:02,979
So let me be a lesson to anybody else

427
00:22:02,980 --> 00:22:06,033
that it's easy to spin up
and learn these things.

428
00:22:07,040 --> 00:22:09,570
But I'm happy to elaborate
on anything in Slack.

429
00:22:09,570 --> 00:22:14,120
And thanks again for having me here today.

430
00:22:14,120 --> 00:22:14,959
- Thanks for sharing.

431
00:22:14,960 --> 00:22:15,810
That was fantastic.

432
00:22:15,810 --> 00:22:17,629
And like you said, a lot of us
are kind of in the same boat

433
00:22:17,630 --> 00:22:19,780
where we know of the risks here,

434
00:22:19,780 --> 00:22:21,600
we know of the growing threat,

435
00:22:21,600 --> 00:22:24,300
but just getting those
first steps into the cloud,

436
00:22:24,300 --> 00:22:25,149
it's such a learning curve.

437
00:22:25,150 --> 00:22:27,720
So we definitely appreciate
all your insight.

438
00:22:27,720 --> 00:22:30,650
We had a lot of great
questions building up in Slack,

439
00:22:30,650 --> 00:22:31,909
so definitely over there.

440
00:22:31,909 --> 00:22:32,742
You had some really good ones.

441
00:22:32,742 --> 00:22:35,700
I'm gonna to poke your mind a little bit.

442
00:22:35,700 --> 00:22:37,510
So you shared before like
the shared responsibility,

443
00:22:37,510 --> 00:22:40,180
I think that's not something
necessarily that's new,

444
00:22:40,180 --> 00:22:42,950
like even in the traditional
enterprise environment,

445
00:22:42,950 --> 00:22:44,340
there's some kind of spillage

446
00:22:44,340 --> 00:22:47,379
between the users and the actual vendors.

447
00:22:47,380 --> 00:22:49,290
But what are your thoughts

448
00:22:49,290 --> 00:22:51,470
on how as a security practitioner,

449
00:22:51,470 --> 00:22:53,090
and we use this same example from Alley,

450
00:22:53,090 --> 00:22:56,330
the small SOC, how do I
work with the big vendors?

451
00:22:56,330 --> 00:22:58,520
I'm thinking about things
like metadata services,

452
00:22:58,520 --> 00:23:00,680
things that maybe are
outside of my control.

453
00:23:00,680 --> 00:23:01,900
What are your suggestion

454
00:23:01,900 --> 00:23:03,670
here for like as a security practitioner,

455
00:23:03,670 --> 00:23:06,250
how can I augment those services

456
00:23:06,250 --> 00:23:07,650
as well as work with the vendors

457
00:23:07,650 --> 00:23:09,640
to actually increase the security

458
00:23:09,640 --> 00:23:11,860
as we learn more about these threats.

459
00:23:11,860 --> 00:23:15,070
- Yeah, it's tough as a
small shot, because I mean,

460
00:23:15,070 --> 00:23:17,929
as we all know, we're
stretched pretty thin as it is

461
00:23:17,930 --> 00:23:20,630
from the security perspective.

462
00:23:20,630 --> 00:23:21,770
I think it's important

463
00:23:23,360 --> 00:23:25,110
which the community is
doing a very good job at,

464
00:23:25,110 --> 00:23:27,810
but when we identified these things

465
00:23:27,810 --> 00:23:29,389
that are inherently problematic,

466
00:23:29,390 --> 00:23:32,210
like particularly metadata service

467
00:23:32,210 --> 00:23:33,830
I'll use that as an example.

468
00:23:33,830 --> 00:23:35,639
So the instance metadata service

469
00:23:36,730 --> 00:23:38,570
after their Capital One breach,

470
00:23:38,570 --> 00:23:40,426
there was so much pressure on AWS

471
00:23:40,426 --> 00:23:41,830
to make that thing more secure

472
00:23:41,830 --> 00:23:43,409
because it was causing so many problems.

473
00:23:43,410 --> 00:23:48,410
But actually they revealed
instant metadata service

474
00:23:49,290 --> 00:23:54,290
version two, which eliminates
a lot of the risks there.

475
00:23:54,810 --> 00:23:58,820
However, it does take an army

476
00:23:58,820 --> 00:24:01,090
to migrate all your
applications and everything

477
00:24:01,090 --> 00:24:03,270
over to the new instance,
metadata service.

478
00:24:03,270 --> 00:24:07,760
So yeah, it's tricky,
it's tricky for sure.

479
00:24:07,760 --> 00:24:08,593
- Makes all sense.

480
00:24:08,593 --> 00:24:10,007
And one of the interesting
things that you mentioned was

481
00:24:10,007 --> 00:24:12,860
was kind of the overlap between
matrices, like you said.

482
00:24:12,860 --> 00:24:14,060
I think one of the examples you shared

483
00:24:14,060 --> 00:24:15,889
was cloud was the beginning of the breach,

484
00:24:15,890 --> 00:24:18,480
and it quickly jumped over to Linux.

485
00:24:18,480 --> 00:24:21,600
But thinking about for those
that are kind of more focused

486
00:24:21,600 --> 00:24:23,469
on the native cloud attacks,

487
00:24:23,470 --> 00:24:24,820
I think some of the trends we've seen

488
00:24:24,820 --> 00:24:26,939
is a lot of that has
been either ransomware

489
00:24:26,940 --> 00:24:28,720
or just complete exfiltration,

490
00:24:28,720 --> 00:24:30,600
just attacking data in some way,

491
00:24:30,600 --> 00:24:32,790
either holding hostage or stealing it.

492
00:24:32,790 --> 00:24:34,000
what are your trend

493
00:24:34,000 --> 00:24:36,060
or what do you kinda see on the horizon

494
00:24:36,060 --> 00:24:38,120
in terms of those cloud native attacks?

495
00:24:38,120 --> 00:24:42,479
- Sure, there's a couple
ways I can answer this.

496
00:24:42,480 --> 00:24:44,403
I can be an optimist or an alarmist.

497
00:24:47,180 --> 00:24:49,650
We don't know what we
don't know in the cloud

498
00:24:49,650 --> 00:24:51,880
with regards to how...

499
00:24:51,880 --> 00:24:56,480
Because the threat detection
monitoring really isn't there.

500
00:24:56,480 --> 00:24:58,800
I don't think there's
a ton of organizations

501
00:24:58,800 --> 00:25:00,530
that are doing this.

502
00:25:00,530 --> 00:25:03,540
But once we learn more about attackers

503
00:25:03,540 --> 00:25:06,860
and once that stuff starts
being socialized a little bit,

504
00:25:06,860 --> 00:25:09,689
I'm almost curious to see if
more attackers actually migrate

505
00:25:09,690 --> 00:25:11,913
to attacking things
like the control plane.

506
00:25:12,820 --> 00:25:16,070
What's interesting about
the coin miner attack

507
00:25:16,070 --> 00:25:17,780
is that that attacker

508
00:25:17,780 --> 00:25:20,700
could have monetized
those root access keys

509
00:25:20,700 --> 00:25:24,270
significantly more than
installing a few coin miners.

510
00:25:24,270 --> 00:25:25,103
They had control

511
00:25:25,103 --> 00:25:27,563
of what could have been
a production environment.

512
00:25:29,720 --> 00:25:33,515
But I think that attackers
have risk management as well.

513
00:25:33,515 --> 00:25:36,223
So how much heat do they
wanna bring on themselves?

514
00:25:38,916 --> 00:25:41,310
But again, most of this
stuff is automated.

515
00:25:41,310 --> 00:25:45,000
So there's a preconceived notion

516
00:25:45,000 --> 00:25:46,900
of what the attacker wants to achieve.

517
00:25:47,890 --> 00:25:50,290
- And then a final
question I had for you is,

518
00:25:50,290 --> 00:25:51,860
personally, I've worked
with the cloud team

519
00:25:51,860 --> 00:25:54,260
at ATT&CK and Jen in kind of
helping mature that model,

520
00:25:54,260 --> 00:25:55,750
so we definitely appreciate everything

521
00:25:55,750 --> 00:25:58,290
you guys have contributed
and kind of a work with us

522
00:25:58,290 --> 00:25:59,409
to help build that out.

523
00:25:59,410 --> 00:26:00,490
But one of the things to keep mentioned

524
00:26:00,490 --> 00:26:02,570
is that we're all in this together.

525
00:26:02,570 --> 00:26:03,960
All of this is maturing at the same time.

526
00:26:03,960 --> 00:26:06,010
The trade craft from
adversaries is growing,

527
00:26:06,010 --> 00:26:09,379
as well as our ability to detect
these things, harden them,

528
00:26:09,380 --> 00:26:10,830
and then, like you said, share information

529
00:26:10,830 --> 00:26:12,919
about whatever say is actually doing.

530
00:26:12,920 --> 00:26:15,680
What advice can you give
to the community listening

531
00:26:15,680 --> 00:26:16,950
on how we can work together

532
00:26:16,950 --> 00:26:19,360
to actually like reach that end state

533
00:26:19,360 --> 00:26:21,860
of more secure cloud development

534
00:26:21,860 --> 00:26:25,663
and more secure cloud deployment?

535
00:26:26,850 --> 00:26:30,590
- Yeah, so I think it'll evolve over time.

536
00:26:30,590 --> 00:26:33,370
I think the cloud is
still relatively immature,

537
00:26:33,370 --> 00:26:35,449
especially from a security perspective.

538
00:26:35,450 --> 00:26:39,040
I mentioned how a lot of
cloud security falls on teams

539
00:26:39,040 --> 00:26:40,510
that are outside of traditional security.

540
00:26:40,510 --> 00:26:43,300
So I think as that matures a little more,

541
00:26:43,300 --> 00:26:45,092
we'll get a better grasp of things.

542
00:26:46,920 --> 00:26:49,143
But with that being said,

543
00:26:51,260 --> 00:26:54,160
the information sharing
is really important here.

544
00:26:54,160 --> 00:26:56,890
I think that's how the
security community as a whole

545
00:26:56,890 --> 00:26:59,920
has evolved everything.

546
00:26:59,920 --> 00:27:03,210
Look how mature attack for Linux

547
00:27:03,210 --> 00:27:04,810
and attack for Windows this goes.

548
00:27:04,810 --> 00:27:07,980
Those are contributions from
a bunch of people trying

549
00:27:07,980 --> 00:27:09,480
to work together for a collective goal.

550
00:27:09,480 --> 00:27:14,480
So I think as long as
long as we're continuing

551
00:27:14,600 --> 00:27:16,830
to help each other, we'll get there.

552
00:27:16,830 --> 00:27:17,929
- Yup, we're all in this together,

553
00:27:17,930 --> 00:27:18,840
it's all about the community.

554
00:27:18,840 --> 00:27:20,429
So thanks again for your presentation.

555
00:27:20,430 --> 00:27:23,040
Like you said, definitely hop
over and hop over to Slack,

556
00:27:23,040 --> 00:27:24,500
there's some great
questions building up there.

557
00:27:24,500 --> 00:27:25,880
Definitely wants more insights from you.

558
00:27:25,880 --> 00:27:28,050
But with that, I'm gonna
turn it back over to Adam

559
00:27:28,050 --> 00:27:29,800
to introduce our next speaker.

560
00:27:29,800 --> 00:27:31,230
Thanks again, Anthony.

561
00:27:31,230 --> 00:27:33,373
- Yeah, and thank you both of you again.

