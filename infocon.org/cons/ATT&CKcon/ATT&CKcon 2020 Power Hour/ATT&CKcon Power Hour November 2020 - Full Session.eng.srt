1
00:00:04,430 --> 00:00:06,840
- Welcome to November's
ATT&CK CON POWER HOUR,

2
00:00:06,840 --> 00:00:09,520
The best 90 minutes
you'll have this month.

3
00:00:09,520 --> 00:00:13,340
I'm your host and lead of
MITRE ATT&CK, Adam Pennington.

4
00:00:13,340 --> 00:00:15,850
If you aren't familiar with
MITRE, we're not-for-profit

5
00:00:15,850 --> 00:00:18,810
dedicated to solving
problems for a safer world.

6
00:00:18,810 --> 00:00:21,330
Through our public private
partnerships and federally funded

7
00:00:21,330 --> 00:00:24,360
research and development centers,
we work across government

8
00:00:24,360 --> 00:00:26,780
and with industry to
tackle some of the world's

9
00:00:26,780 --> 00:00:28,530
biggest problems.

10
00:00:28,530 --> 00:00:31,950
If you're here, you've
probably heard of ATT&CK,

11
00:00:31,950 --> 00:00:34,410
with ATT&CK and ATT&CK
CON, we're working to bring

12
00:00:34,410 --> 00:00:37,669
communities together to
improve cybersecurity.

13
00:00:37,670 --> 00:00:41,270
ATT&CK is open and available
to any person or organization

14
00:00:41,270 --> 00:00:43,990
for use at no charge globally.

15
00:00:43,990 --> 00:00:46,570
I wanna start today by
thanking all of our ATT&CK CON

16
00:00:46,570 --> 00:00:48,230
POWER HOUR speakers.

17
00:00:48,230 --> 00:00:51,599
As with past ATT&CK CONS,
this year was very competitive

18
00:00:51,600 --> 00:00:54,670
with a 28% acceptance
rate from our open CFP

19
00:00:54,670 --> 00:00:56,100
over the summer.

20
00:00:56,100 --> 00:00:58,430
Those accepted talks
will make up the monthly

21
00:00:58,430 --> 00:01:00,610
ATT&CK CON POWER HOUR
sessions we have scheduled

22
00:01:00,610 --> 00:01:01,513
through January.

23
00:01:02,370 --> 00:01:05,340
Thanks also to all of you
for joining us for the next

24
00:01:05,340 --> 00:01:07,420
90 minutes, and hopefully
we'll see you at future

25
00:01:07,420 --> 00:01:09,263
ATT&CK CON POWER HOUR as well.

26
00:01:10,180 --> 00:01:12,620
A couple of quick housekeeping
notes before we start,

27
00:01:12,620 --> 00:01:15,860
along with your link to today's
session you should have also

28
00:01:15,860 --> 00:01:17,570
gotten a Slack invite.

29
00:01:17,570 --> 00:01:19,630
If you're already in
our Slack, please join

30
00:01:19,630 --> 00:01:22,890
the ATT&CK CON POWER
HOUR November channel.

31
00:01:22,890 --> 00:01:25,630
In that Slack you'll find a
channel dedicated to each talk

32
00:01:25,630 --> 00:01:28,750
by the speakers last name,
please ask any questions

33
00:01:28,750 --> 00:01:31,170
you have for today's speakers in there.

34
00:01:31,170 --> 00:01:33,690
Our own Jamie Williams
may ask your question live

35
00:01:33,690 --> 00:01:35,690
or the speaker will have
an opportunity to answer

36
00:01:35,690 --> 00:01:38,230
it in Slack after their talk.

37
00:01:38,230 --> 00:01:42,290
Yes, today's session is being
recorded, and will be posted

38
00:01:42,290 --> 00:01:44,920
online once we're done editing
and captioning the videos,

39
00:01:44,920 --> 00:01:46,053
hopefully next week.

40
00:01:47,030 --> 00:01:49,320
So without further ado,
I'm gonna turn it over

41
00:01:49,320 --> 00:01:52,960
to our first speaker of
November ATT&CK CON POWER HOUR,

42
00:01:52,960 --> 00:01:54,643
Allie Mellen from Cybereason.

43
00:01:56,424 --> 00:01:57,574
- Thanks so much, Adam.

44
00:02:01,100 --> 00:02:05,530
Hi everyone, it's a pleasure
to be here with you today.

45
00:02:05,530 --> 00:02:07,530
I'm especially honored
to be your first speaker,

46
00:02:07,530 --> 00:02:10,039
even if that's just because
they went alphabetically

47
00:02:10,039 --> 00:02:11,799
and my name starts with A.

48
00:02:11,800 --> 00:02:13,993
I've lucked out because of that before.

49
00:02:14,940 --> 00:02:17,960
Today I'm gonna be talking
about Mapping the EventBot,

50
00:02:17,960 --> 00:02:20,933
Mobile Banking Trojan with
MITRE ATT&CK for Mobile.

51
00:02:21,870 --> 00:02:23,150
a little background on me

52
00:02:23,150 --> 00:02:26,493
before we dive in, I've been
in tech for about a decade.

53
00:02:27,510 --> 00:02:29,730
I spent five of those years actually

54
00:02:29,730 --> 00:02:31,350
as a mobile app developer.

55
00:02:31,350 --> 00:02:35,609
So I have a real appreciation
for mobile as its own industry

56
00:02:35,610 --> 00:02:37,120
and its own space.

57
00:02:37,120 --> 00:02:40,230
And I actually got into
security shortly after that,

58
00:02:40,230 --> 00:02:44,950
from completing some internet
of things, device research,

59
00:02:44,950 --> 00:02:46,470
security research.

60
00:02:46,470 --> 00:02:48,760
And from there I started
working at Cybereason.

61
00:02:48,760 --> 00:02:53,010
I'm now as security strategist
in our security team,

62
00:02:53,010 --> 00:02:57,489
I work on our infrastructure
security and product security.

63
00:02:57,490 --> 00:02:59,550
So, I'm very excited to talk you guys

64
00:02:59,550 --> 00:03:04,230
about what MITRE ATT&CK is,
why we at Cybereason really

65
00:03:04,230 --> 00:03:06,519
think it's important to align to it?

66
00:03:06,520 --> 00:03:08,780
I wanna give this really cool example

67
00:03:08,780 --> 00:03:12,110
of mobile malware research that
our team, our research team

68
00:03:12,110 --> 00:03:15,550
saw, and then talk about
why it's important to align

69
00:03:15,550 --> 00:03:18,260
to MITRE ATT&CK for mobile,
and why it's really important

70
00:03:18,260 --> 00:03:19,630
for the future too.

71
00:03:19,630 --> 00:03:21,890
Because it's not just about
what we're doing right now,

72
00:03:21,890 --> 00:03:23,459
it's about laying that foundation.

73
00:03:23,460 --> 00:03:25,640
And I think that's one of
the reasons why MITRE ATT&CK

74
00:03:25,640 --> 00:03:26,903
is so important.

75
00:03:28,190 --> 00:03:33,190
So, as an organization, we
think about MITRE ATT&CK a lot,

76
00:03:33,200 --> 00:03:35,649
our research team aligns
every piece of research

77
00:03:35,650 --> 00:03:37,540
that we put out to MITRE ATT&CK.

78
00:03:37,540 --> 00:03:42,540
And whether it's mobile
malware or just typical attacks

79
00:03:42,970 --> 00:03:44,150
on the endpoint.

80
00:03:44,150 --> 00:03:45,920
And there are a couple of reasons why?

81
00:03:45,920 --> 00:03:48,700
And they really do come
down to knowledge sharing.

82
00:03:48,700 --> 00:03:51,649
Whether that's purple teaming,
whether that's having a red

83
00:03:51,650 --> 00:03:54,180
team, we're actually able to
communicate with the blue team

84
00:03:54,180 --> 00:03:56,390
about what they're doing and why?

85
00:03:56,390 --> 00:03:59,950
It's really important to
have a common language

86
00:03:59,950 --> 00:04:01,380
by which to communicate that.

87
00:04:01,380 --> 00:04:04,620
And that's what MITRE ATT&CK
really provides to us.

88
00:04:04,620 --> 00:04:09,050
So, it's really about not
just classifying the tactics

89
00:04:09,050 --> 00:04:11,050
techniques and procedures
that we're seeing,

90
00:04:11,050 --> 00:04:14,850
but also about being able to
share that in a common language

91
00:04:14,850 --> 00:04:18,300
with the community, whether
it's internally, with partners,

92
00:04:18,300 --> 00:04:22,150
with customers or just with the
business, in order to really

93
00:04:22,150 --> 00:04:23,303
communicate value.

94
00:04:24,410 --> 00:04:28,300
Taking that a step further,
why we actually map

95
00:04:28,300 --> 00:04:30,410
to MITRE ATT&CK for mobile?

96
00:04:30,410 --> 00:04:32,980
Is one, because it's really cool.

97
00:04:32,980 --> 00:04:36,820
They offer a really innovative
approach to this problem

98
00:04:36,820 --> 00:04:40,960
that at the end of the
day not a decent number,

99
00:04:40,960 --> 00:04:44,239
but not as many as we wanna
be seeing over the next

100
00:04:44,240 --> 00:04:46,620
few years, are really working to approach

101
00:04:46,620 --> 00:04:49,610
this mobile security problem.

102
00:04:49,610 --> 00:04:52,470
The second is that, mobile is
actually a really important

103
00:04:52,470 --> 00:04:55,510
target that enterprises
need to take seriously.

104
00:04:55,510 --> 00:05:00,020
60% of corporate data is
accessed through mobile devices,

105
00:05:00,020 --> 00:05:01,599
and that's a huge amount.

106
00:05:01,600 --> 00:05:04,820
And we don't even really
think about it in classical

107
00:05:04,820 --> 00:05:08,830
traditional defense and
security within enterprises.

108
00:05:08,830 --> 00:05:10,793
So it's really important to address.

109
00:05:11,690 --> 00:05:14,719
And the last thing that's
really important, is again,

110
00:05:14,720 --> 00:05:17,540
it's communicating value in a clear way.

111
00:05:17,540 --> 00:05:20,297
What I really love about
MITRE ATT&CK, and MITRE ATT&CK

112
00:05:20,297 --> 00:05:22,510
for Mobile, is that we're actually able

113
00:05:22,510 --> 00:05:26,060
to use it to abstract
the problem in such a way

114
00:05:26,060 --> 00:05:29,670
that it's now easy to understand
and communicate to others.

115
00:05:29,670 --> 00:05:32,560
We can take this really
complicated piece of research,

116
00:05:32,560 --> 00:05:34,220
that's really technical.

117
00:05:34,220 --> 00:05:37,390
Our blogs are like 40
pages long on this stuff,

118
00:05:37,390 --> 00:05:39,930
and we can condense it
into something that anyone

119
00:05:39,930 --> 00:05:42,563
can understand, and
that's really powerful.

120
00:05:44,750 --> 00:05:47,333
So let's talk about this
piece of mobile malware.

121
00:05:48,170 --> 00:05:51,740
This is a threat that our
Cybereason Nocturnus team,

122
00:05:51,740 --> 00:05:55,490
which is our threat research
team found called EventBot.

123
00:05:55,490 --> 00:05:58,510
It is a mobile banking Trojan targeting

124
00:05:58,510 --> 00:06:00,870
financial services applications.

125
00:06:00,870 --> 00:06:03,730
It's looking to collect user
data, and it was specifically

126
00:06:03,730 --> 00:06:06,283
targeting the US and Europe.

127
00:06:07,150 --> 00:06:09,510
What's so fascinating about this ATT&CK,

128
00:06:09,510 --> 00:06:11,360
besides it being pretty cool and it's,

129
00:06:11,360 --> 00:06:15,640
just with this information,
is that it actually targets

130
00:06:15,640 --> 00:06:18,800
over 200 different financial applications

131
00:06:18,800 --> 00:06:21,380
on Android devices.

132
00:06:21,380 --> 00:06:26,380
And these are not just some
financial applications,

133
00:06:26,610 --> 00:06:29,430
these are really well-known applications.

134
00:06:29,430 --> 00:06:32,560
Things like capital One UK, we're talking

135
00:06:32,560 --> 00:06:37,290
about PayPal business,
we've got Revolut in here.

136
00:06:37,290 --> 00:06:41,230
There's Santander UK,
there is TransferWise,

137
00:06:41,230 --> 00:06:45,210
which I personally have on
my phone and love to use

138
00:06:45,210 --> 00:06:48,530
for getting money from overseas.

139
00:06:48,530 --> 00:06:53,530
There's also Coinbase, we've
got ING Direct, and UniCredit.

140
00:06:55,490 --> 00:06:58,420
So, what's important to
note about this is, I assume

141
00:06:58,420 --> 00:07:00,730
that a lot of people that
are actually on this Zoom

142
00:07:00,730 --> 00:07:04,240
right now have one of these
apps on their devices.

143
00:07:04,240 --> 00:07:07,320
But more than that, they're
not all just targeted

144
00:07:07,320 --> 00:07:10,240
at the consumer, some of
these are also targeted

145
00:07:10,240 --> 00:07:13,030
at the enterprise, things
like, as we mentioned,

146
00:07:13,030 --> 00:07:14,219
PayPal business.

147
00:07:14,220 --> 00:07:17,360
They're looking to gather
information and credentials

148
00:07:17,360 --> 00:07:20,090
from business applications
as well as individual

149
00:07:20,090 --> 00:07:21,320
user applications.

150
00:07:21,320 --> 00:07:23,040
And that's super important
when we're thinking

151
00:07:23,040 --> 00:07:25,970
about how things like
mobile malware are actually

152
00:07:25,970 --> 00:07:27,573
gonna affect the enterprise.

153
00:07:30,140 --> 00:07:33,349
So, what our team did for
this piece of research,

154
00:07:33,350 --> 00:07:36,280
and what our team does for
every piece of research

155
00:07:36,280 --> 00:07:38,479
is aligned to MITRE ATT&CK.

156
00:07:38,480 --> 00:07:41,300
What was really exciting
about this, is MITRE ATT&CK

157
00:07:41,300 --> 00:07:44,300
actually has MITRE ATT&CK
for Mobile, so we can align

158
00:07:44,300 --> 00:07:49,300
mobile malware we're seeing to
each tactic that MITRE ATT&CK

159
00:07:50,120 --> 00:07:51,950
has for mobile.

160
00:07:51,950 --> 00:07:55,450
And you can see them here,
and for anyone who's really

161
00:07:55,450 --> 00:07:58,440
familiar with MITRE ATT&CK you
can see how they're organized

162
00:07:58,440 --> 00:08:00,443
from tactics to techniques.

163
00:08:01,310 --> 00:08:05,680
And this gives us a really
easy way to understand

164
00:08:05,680 --> 00:08:08,490
these different ATT&CKs,
and understand exactly

165
00:08:08,490 --> 00:08:12,070
what's going on, and take
a step back from the really

166
00:08:12,070 --> 00:08:13,620
technical details.

167
00:08:13,620 --> 00:08:16,070
So we can get a better
perspective for those people

168
00:08:16,070 --> 00:08:18,610
who may not want to dig into the research,

169
00:08:18,610 --> 00:08:20,140
or may not want to be doing the research,

170
00:08:20,140 --> 00:08:22,700
or may have other priorities.

171
00:08:22,700 --> 00:08:27,700
So, this is really what
I see as the best part

172
00:08:28,230 --> 00:08:31,400
of MITRE ATT&CK for Mobile, is
that you can really abstract

173
00:08:31,400 --> 00:08:34,100
the problem in such a
way that it's really easy

174
00:08:34,100 --> 00:08:36,150
to understand and
communicate to other people.

175
00:08:36,150 --> 00:08:40,669
And as a computer engineer, I
love extraction, so this takes

176
00:08:40,669 --> 00:08:41,502
the cake.

177
00:08:43,159 --> 00:08:45,199
But what's really cool about it?

178
00:08:45,200 --> 00:08:48,290
At least to me, is what it allows us to do

179
00:08:48,290 --> 00:08:50,910
when we're talking about
communicating this.

180
00:08:50,910 --> 00:08:53,449
Because we have that table
which is already useful

181
00:08:53,450 --> 00:08:55,760
on its face, but it's
very useful for people

182
00:08:55,760 --> 00:08:58,080
who are in the security industry.

183
00:08:58,080 --> 00:09:01,420
But what's awesome is
that it gives us the basis

184
00:09:01,420 --> 00:09:03,990
to actually communicate this
threat in a way that someone

185
00:09:03,990 --> 00:09:06,350
who's not even technical can understand.

186
00:09:06,350 --> 00:09:08,890
I'm gonna show you that
here with this timeline.

187
00:09:08,890 --> 00:09:12,130
So we took that same
piece of mobile malware,

188
00:09:12,130 --> 00:09:14,280
and we broke it down
into a timeline starting

189
00:09:14,280 --> 00:09:16,089
with initial access.

190
00:09:16,090 --> 00:09:19,580
What's happening in this
research, is an unsuspecting user

191
00:09:19,580 --> 00:09:22,610
is downloading EventBot,
which is masquerading

192
00:09:22,610 --> 00:09:24,130
as a legitimate application.

193
00:09:24,130 --> 00:09:26,260
And what's so cool about this, is we saw

194
00:09:26,260 --> 00:09:30,500
this so early on, that we
were actually able to see

195
00:09:30,500 --> 00:09:34,100
this application, this
malware, iteratively improving

196
00:09:34,100 --> 00:09:38,300
itself in order to appear
legitimate, ultimately

197
00:09:38,300 --> 00:09:40,479
with the goal of getting
on the Google Play Store.

198
00:09:40,480 --> 00:09:42,680
Although we didn't see it
on the Google Play Store

199
00:09:42,680 --> 00:09:44,479
because it was so early in the process,

200
00:09:44,480 --> 00:09:45,733
that was its end goal.

201
00:09:48,070 --> 00:09:52,140
Next, it looks to get control
of accessibility features

202
00:09:52,140 --> 00:09:54,080
just by asking for them.

203
00:09:54,080 --> 00:09:55,670
And it starts to run in the background,

204
00:09:55,670 --> 00:09:58,540
because again it's convinced
people that it's legitimate.

205
00:09:58,540 --> 00:10:00,469
That it's an application
they should trust because

206
00:10:00,470 --> 00:10:02,550
they want to access the calculator,

207
00:10:02,550 --> 00:10:04,609
or whatever they're pretending
that this application

208
00:10:04,610 --> 00:10:05,443
is gonna do.

209
00:10:07,380 --> 00:10:10,810
Next comes discovery, where
since they have control

210
00:10:10,810 --> 00:10:13,859
of the accessibility features,
which gives them such a wide

211
00:10:13,860 --> 00:10:18,740
control of the different ways
that the devices choosing

212
00:10:18,740 --> 00:10:21,450
to collect information, that
they can actually really dig

213
00:10:21,450 --> 00:10:23,810
into some important
reconnaissance information,

214
00:10:23,810 --> 00:10:26,619
like the device info and the
names of Android packages.

215
00:10:26,620 --> 00:10:28,940
And that's how they
know which applications,

216
00:10:28,940 --> 00:10:30,900
if the applications that
they're trying to target

217
00:10:30,900 --> 00:10:32,023
are on the device.

218
00:10:33,600 --> 00:10:36,380
They go further than that, and
they start actually tracking

219
00:10:36,380 --> 00:10:39,270
the device pin, and collecting
financial information,

220
00:10:39,270 --> 00:10:42,350
personal data, keystrokes,
and even passwords.

221
00:10:42,350 --> 00:10:45,550
So, for anyone here and I'm
sure no one here has done it,

222
00:10:45,550 --> 00:10:48,560
because they are all good
security professionals.

223
00:10:48,560 --> 00:10:52,550
But for anyone here who
has actually copy pasted

224
00:10:52,550 --> 00:10:55,199
from their notes application
their password into one

225
00:10:55,200 --> 00:10:58,040
of their banking
applications, this malware

226
00:10:58,040 --> 00:10:59,183
has that info now.

227
00:11:01,050 --> 00:11:04,430
Of Course, we see them
exfiltrate that to the ATT&CKer

228
00:11:04,430 --> 00:11:07,760
C2 server, but this is where
things get interesting,

229
00:11:07,760 --> 00:11:11,790
because of course, as security
professionals we have two

230
00:11:11,790 --> 00:11:13,839
factor authentication enabled.

231
00:11:13,840 --> 00:11:16,780
And so when the ATT&CKer goes
to log into these accounts

232
00:11:16,780 --> 00:11:21,458
with the credentials that it
just stole, perhaps we think,

233
00:11:21,458 --> 00:11:24,089
Oh, I'm such a good security
professional I have two

234
00:11:24,090 --> 00:11:26,880
factor authentication, so I
will know and be able to stop

235
00:11:26,880 --> 00:11:29,270
this person from getting into my account.

236
00:11:29,270 --> 00:11:33,569
But here's the problem, the
attacker has access to the place

237
00:11:33,570 --> 00:11:36,660
where most two factor authentication goes.

238
00:11:36,660 --> 00:11:39,449
In many forms of two factor
authentication, you get a text

239
00:11:39,450 --> 00:11:43,330
sent to your device and this
malware immediately steals

240
00:11:43,330 --> 00:11:46,560
that message, sends any
necessary information back

241
00:11:46,560 --> 00:11:49,369
to the attacker and then deletes it.

242
00:11:49,370 --> 00:11:52,410
So not only do they have
control of your device,

243
00:11:52,410 --> 00:11:54,920
they're tracking everything
that you're typing,

244
00:11:54,920 --> 00:11:58,290
but then they're able to
delete messages at will

245
00:11:58,290 --> 00:12:00,230
so that they can prevent you from knowing

246
00:12:00,230 --> 00:12:02,080
when they're accessing your accounts.

247
00:12:03,080 --> 00:12:07,110
So, I first of all find
this ATT&CK fascinating,

248
00:12:07,110 --> 00:12:10,700
but what I find really
fascinating is how we're actually

249
00:12:10,700 --> 00:12:12,980
able to communicate this in a way where,

250
00:12:12,980 --> 00:12:15,220
when I talk about this
to non-technical people,

251
00:12:15,220 --> 00:12:16,620
it clicks for them.

252
00:12:16,620 --> 00:12:19,220
Why mobile malware is really scary?

253
00:12:19,220 --> 00:12:22,320
And that's because of
the mapping that we have,

254
00:12:22,320 --> 00:12:23,733
to MITRE ATT&CK for Mobile.

255
00:12:25,540 --> 00:12:28,780
So, what's really important
and what I really wanna think

256
00:12:28,780 --> 00:12:30,819
about, and what you guys think
about when you're thinking

257
00:12:30,820 --> 00:12:34,690
about this problem is, how is this a step

258
00:12:34,690 --> 00:12:39,050
in the right direction, to
actually being able to map

259
00:12:39,050 --> 00:12:40,729
these ATT&CKs more completely?

260
00:12:40,730 --> 00:12:43,690
And to be able to communicate,
which as an industry we know

261
00:12:43,690 --> 00:12:45,880
is one of the biggest
problems that we have is just

262
00:12:45,880 --> 00:12:49,050
communication, and being
able to communicate problems

263
00:12:49,050 --> 00:12:50,589
to other people?

264
00:12:50,590 --> 00:12:55,590
How can MITRE ATT&CK really
help us to get out of the weeds,

265
00:12:55,900 --> 00:12:59,890
and then actually communicate
these issues to other people?

266
00:12:59,890 --> 00:13:03,040
And I think that, I hope
that this example really

267
00:13:03,040 --> 00:13:06,949
illustrates that and gives us
an idea of what could possibly

268
00:13:06,950 --> 00:13:08,140
come next.

269
00:13:08,140 --> 00:13:12,610
Because I think that not
only do we have MITRE ATT&CK

270
00:13:12,610 --> 00:13:15,750
for Enterprise, we have
MITRE ATT&CK for Mobile,

271
00:13:15,750 --> 00:13:19,370
and I can see a world where
those two need to combine.

272
00:13:19,370 --> 00:13:21,900
Because ATT&CKs don't
stop at mobile devices,

273
00:13:21,900 --> 00:13:25,150
they don't stop at traditional
end points, they can go

274
00:13:25,150 --> 00:13:26,329
across both.

275
00:13:26,330 --> 00:13:28,710
That's one of the main goals
of mobile malware ATT&CKs,

276
00:13:28,710 --> 00:13:33,120
is to get to other devices,
to get to other end points.

277
00:13:33,120 --> 00:13:36,290
And so, I imagine there will
be a future where we actually

278
00:13:36,290 --> 00:13:39,800
consider these to be all one in the same.

279
00:13:39,800 --> 00:13:44,089
And my hope is that we can
use MITRE ATT&CK for Mobile

280
00:13:44,090 --> 00:13:47,520
as the basis as we think
about other types of ATT&CKs,

281
00:13:47,520 --> 00:13:52,340
like ATT&CKs on IoT devices,
or other devices down the line

282
00:13:52,340 --> 00:13:53,173
that we see.

283
00:13:55,100 --> 00:13:59,090
So, I wanna thank you guys so
much for attending my talk,

284
00:13:59,090 --> 00:14:02,520
I also wanna give a big thank
you to the MITRE ATT&CK team,

285
00:14:02,520 --> 00:14:04,610
they really made this so easy and so fun,

286
00:14:04,610 --> 00:14:06,060
and I really appreciate it.

287
00:14:06,060 --> 00:14:08,670
And I'm happy to take any
questions, you can feel free

288
00:14:08,670 --> 00:14:11,240
to email me if you have questions too.

289
00:14:11,240 --> 00:14:15,250
Check out our blog and feel
free to contact me on Twitter

290
00:14:15,250 --> 00:14:17,223
or follow me @hackerxbella.

291
00:14:18,920 --> 00:14:19,930
- Excellent talk Allie.

292
00:14:19,930 --> 00:14:21,599
And thanks again for all the reporting

293
00:14:21,600 --> 00:14:24,380
and all the contributions
we've gotten from your team,

294
00:14:24,380 --> 00:14:26,510
it's been excellent
collaborating with you.

295
00:14:26,510 --> 00:14:29,420
We had a couple of questions
building up in the Slack,

296
00:14:29,420 --> 00:14:31,810
so definitely hop over there,
but, I just kind of wanted

297
00:14:31,810 --> 00:14:32,790
to ask one.

298
00:14:32,790 --> 00:14:34,520
I think a lot of the
community might resonate

299
00:14:34,520 --> 00:14:36,420
with your talk because like
I said, we all have phones.

300
00:14:36,420 --> 00:14:38,719
Mine's five feet away
from me at any point.

301
00:14:38,720 --> 00:14:40,670
And like you said, I think a
really interesting statistic

302
00:14:40,670 --> 00:14:43,540
you shared was that, 60% of our
corporate data is accessible

303
00:14:43,540 --> 00:14:44,380
from these devices.

304
00:14:44,380 --> 00:14:46,830
So it's something we really
need to take seriously,

305
00:14:46,830 --> 00:14:49,470
but what is your advice
to like a security team

306
00:14:49,470 --> 00:14:51,680
maybe a smaller unit that's just started

307
00:14:51,680 --> 00:14:53,250
maybe they have a an enterprise set up,

308
00:14:53,250 --> 00:14:54,890
but they do recognize like you said,

309
00:14:54,890 --> 00:14:56,240
the importance of mobile?

310
00:14:56,240 --> 00:14:58,950
What are your suggestions for
first steps, and how to start

311
00:14:58,950 --> 00:15:00,320
taking this seriously?

312
00:15:00,320 --> 00:15:03,940
- Totally, I think that as we
all know, small security teams

313
00:15:03,940 --> 00:15:06,150
have much bigger priorities.

314
00:15:06,150 --> 00:15:08,150
So of course it is always a juggling act

315
00:15:08,150 --> 00:15:10,083
with what you're going to prioritize.

316
00:15:11,070 --> 00:15:14,639
One of the reasons why I think
that mobile is so important,

317
00:15:14,639 --> 00:15:17,940
and so interesting, is because
we do use it all the time.

318
00:15:17,940 --> 00:15:20,400
And especially now that
we're working from home,

319
00:15:20,400 --> 00:15:22,390
it becomes so important to stay connected

320
00:15:22,390 --> 00:15:24,910
even when we're doing
household activities.

321
00:15:24,910 --> 00:15:26,630
Like if you have to take
your kids for a walk,

322
00:15:26,630 --> 00:15:28,970
because they've been stuck
inside all day, you're probably

323
00:15:28,970 --> 00:15:30,760
gonna take your phone and
you're probably gonna have Slack

324
00:15:30,760 --> 00:15:33,200
or teams on your phone
and want to be accessing

325
00:15:33,200 --> 00:15:35,320
that in case something bad happens.

326
00:15:35,320 --> 00:15:38,250
So, I think that the best
first step that you can take

327
00:15:38,250 --> 00:15:41,750
is first working with IT very
closely, because of course

328
00:15:41,750 --> 00:15:45,870
for most teams IT controls
mobile device management or EMM.

329
00:15:45,870 --> 00:15:49,010
And, it's really important to
make sure that any policies

330
00:15:49,010 --> 00:15:53,480
are up to date, and all of the
basics IT hygiene is covered.

331
00:15:53,480 --> 00:15:57,550
And then, really try to start
doing some awareness training,

332
00:15:57,550 --> 00:16:01,170
because not only can you
access a lot of corporate data

333
00:16:01,170 --> 00:16:03,939
on the phones, but you're
also three times more likely

334
00:16:03,940 --> 00:16:06,160
to fall for a phishing
ATT&CK on a small screen,

335
00:16:06,160 --> 00:16:07,102
which is crazy.

336
00:16:07,102 --> 00:16:07,935
(Jamie laughing)

337
00:16:07,935 --> 00:16:10,859
So it's really important to
just get people in that mindset

338
00:16:10,860 --> 00:16:14,780
where not to distrust their
mobile devices but to think

339
00:16:14,780 --> 00:16:17,449
about what they're doing
with them more and not trust

340
00:16:17,450 --> 00:16:19,000
them immediately.

341
00:16:19,000 --> 00:16:21,230
Like I think a lot of advertising really

342
00:16:21,230 --> 00:16:23,420
convinces us that they're safe.

343
00:16:23,420 --> 00:16:24,300
- That makes sense.

344
00:16:24,300 --> 00:16:25,650
And I think we had an
interesting question from one

345
00:16:25,650 --> 00:16:27,800
of our speakers last
from our last session,

346
00:16:28,790 --> 00:16:31,870
you mentioned the EventBot and
kind of the banking element,

347
00:16:31,870 --> 00:16:33,970
do you see any other like major trends

348
00:16:33,970 --> 00:16:35,100
in the mobile malware space?

349
00:16:35,100 --> 00:16:36,890
Like, yeah, I know, typically
I think one of the themes

350
00:16:36,890 --> 00:16:39,370
in our last ATT&CK CON
was ATT&CKing the human

351
00:16:39,370 --> 00:16:40,203
behind the keyboard.

352
00:16:40,203 --> 00:16:42,230
And in this case it
applies perfectly to mobile

353
00:16:42,230 --> 00:16:45,180
because like you said, it
really, it's just, that phone

354
00:16:45,180 --> 00:16:47,109
is the gateway into the mind of the human.

355
00:16:47,110 --> 00:16:48,550
It's like there are so
many vulnerabilities

356
00:16:48,550 --> 00:16:52,449
that we can't patch as
techies and engineers,

357
00:16:52,450 --> 00:16:55,230
it goes through training,
but I guess long story short,

358
00:16:55,230 --> 00:16:57,630
what are your kind of
your forecast for trends,

359
00:16:57,630 --> 00:16:59,910
things that you're seeing now
as well as what do you think

360
00:16:59,910 --> 00:17:01,959
the future of this
mobile malware is going?

361
00:17:01,960 --> 00:17:04,470
- It's really fascinating,
there are a couple of things

362
00:17:04,470 --> 00:17:06,579
that come to mind immediately.

363
00:17:06,579 --> 00:17:10,220
Of course phishing, we all
think of phishing when we think

364
00:17:10,220 --> 00:17:12,450
of security and like
a huge security issue.

365
00:17:12,450 --> 00:17:15,540
But what's fascinating about
mobile phishing ATT&CKs

366
00:17:15,540 --> 00:17:18,069
is that they're not really
coming from email, they're coming

367
00:17:18,069 --> 00:17:21,069
from things like WhatsApp,
they're coming from SMS messages,

368
00:17:21,069 --> 00:17:23,490
they're coming from social media websites.

369
00:17:23,490 --> 00:17:26,380
So, I think that having to
kind of shift our brains

370
00:17:26,380 --> 00:17:28,830
to thinking about a
different type of phishing

371
00:17:28,830 --> 00:17:32,080
than we're typically used
to is really important.

372
00:17:32,080 --> 00:17:35,230
As far as trends go to,
we've seen unfortunately,

373
00:17:35,230 --> 00:17:39,370
a lot of people pretending
that they, or masquerading

374
00:17:39,370 --> 00:17:43,639
their applications as things
like CDC applications,

375
00:17:43,640 --> 00:17:45,970
or World Health Organization applications.

376
00:17:45,970 --> 00:17:50,790
And, as we really get into what
will hopefully be a vaccine

377
00:17:50,790 --> 00:17:54,110
season, I think we'll probably
see a lot more applications

378
00:17:54,110 --> 00:17:56,040
like that that are trying
to trick people especially

379
00:17:56,040 --> 00:17:58,050
when it comes to Android devices.

380
00:17:58,050 --> 00:17:59,853
- Okay, and it goes back
to trust like you said,

381
00:17:59,853 --> 00:18:02,700
it's really, it's kind of seems
like a central theme here.

382
00:18:02,700 --> 00:18:04,580
I just had, I think one
final question come up,

383
00:18:04,580 --> 00:18:06,436
a really good one.

384
00:18:06,436 --> 00:18:07,939
Do you have any, obviously
don't have the statistics

385
00:18:07,940 --> 00:18:11,210
off your hand, but what are
kinda your thoughts or themes

386
00:18:11,210 --> 00:18:14,190
regarding the hybrid ATT&CKs
where people are using mobile

387
00:18:14,190 --> 00:18:16,330
as kind of a gateway to get
to enterprise resources?

388
00:18:16,330 --> 00:18:18,639
Do you think that's kind
of a very common occurrence

389
00:18:18,640 --> 00:18:19,970
or do you think it's, you know, actors

390
00:18:19,970 --> 00:18:22,810
are more kind of content
with just getting device data

391
00:18:22,810 --> 00:18:25,899
directly from like iOS or Android?

392
00:18:25,900 --> 00:18:27,190
- It's funny you say that cause I actually

393
00:18:27,190 --> 00:18:28,746
do have a statistic about that.

394
00:18:28,746 --> 00:18:30,660
(Allie laughing)

395
00:18:30,660 --> 00:18:35,190
90% of mobile malware is trying
to access other connected

396
00:18:35,190 --> 00:18:38,360
ports in different devices
that it can get access to.

397
00:18:38,360 --> 00:18:40,090
So it really is trying to move,

398
00:18:40,090 --> 00:18:43,240
I think that there are really
two ways that mobile malware

399
00:18:43,240 --> 00:18:45,490
or two risks that come
with mobile malware.

400
00:18:45,490 --> 00:18:48,700
One, whatever's on the
device, and two, accessing

401
00:18:48,700 --> 00:18:51,090
the Enterprise network and
getting to other devices.

402
00:18:51,090 --> 00:18:54,209
We can see this like, you
don't think much to connect

403
00:18:54,210 --> 00:18:56,160
your phone to a Starbucks WiFi,

404
00:18:56,160 --> 00:18:58,540
but what if it's not an
actual Starbucks WiFi?

405
00:18:58,540 --> 00:19:00,409
And then you go to connect
your phone to the Enterprise

406
00:19:00,410 --> 00:19:03,160
network, you can run into
all sorts of problems.

407
00:19:03,160 --> 00:19:06,020
And so I think it's really,
really important, and that's one

408
00:19:06,020 --> 00:19:08,950
of the things that I talk
about a lot when I'm talking

409
00:19:08,950 --> 00:19:11,200
about mobile malware, is
not just what's happening

410
00:19:11,200 --> 00:19:12,033
on the device.

411
00:19:12,033 --> 00:19:14,129
What's really interesting
is when we see it actually

412
00:19:14,130 --> 00:19:16,880
going from the device into
the Enterprise network

413
00:19:16,880 --> 00:19:18,410
and targeting other devices.

414
00:19:18,410 --> 00:19:20,470
So I think that's critical.

415
00:19:20,470 --> 00:19:21,940
- Yeah, that's an amazing statistic.

416
00:19:21,940 --> 00:19:24,247
So thank you for sharing and
thanks again for your talk.

417
00:19:24,247 --> 00:19:25,080
- Thank you.

418
00:19:25,080 --> 00:19:26,120
- Like I said, it's been fantastic.

419
00:19:26,120 --> 00:19:27,919
I think this resonates with
all of us, really some great

420
00:19:27,920 --> 00:19:29,070
knowledge to share.

421
00:19:29,070 --> 00:19:30,700
And with that, I'm gonna
turn it back over to Adam

422
00:19:30,700 --> 00:19:32,410
to introduce our next speaker.

423
00:19:32,410 --> 00:19:33,800
- Thank you so much.

424
00:19:33,800 --> 00:19:35,080
- Thank you, Jamie and Allie.

425
00:19:35,080 --> 00:19:37,199
And so for our next speaker,

426
00:19:37,200 --> 00:19:41,163
we're gonna have Anthony
Randazzo, from Expel.

427
00:19:42,780 --> 00:19:45,129
- So thank you, I'm
really excited to be here.

428
00:19:45,130 --> 00:19:47,850
Thank you ATT&CK team for
giving me the opportunity

429
00:19:47,850 --> 00:19:51,530
to present cloud things.

430
00:19:51,530 --> 00:19:55,100
Cloud is sort of this
new frontier in security

431
00:19:55,100 --> 00:19:59,783
that we're starting to discover,
so I'm happy to be here.

432
00:20:05,160 --> 00:20:09,640
All right, so again, my
name is Anthony Randazzo,

433
00:20:09,640 --> 00:20:12,980
I lead the global response
team here at Expel.

434
00:20:12,980 --> 00:20:13,813
What is Expel?

435
00:20:13,813 --> 00:20:16,760
Expel is a technology
company that's built this SAS

436
00:20:16,760 --> 00:20:20,730
application, the SAS platform
to enable our 24/7 managed

437
00:20:20,730 --> 00:20:22,340
detection and response service.

438
00:20:22,340 --> 00:20:25,580
We integrate directly with
the APIs and more than 45

439
00:20:25,580 --> 00:20:26,929
different security vendors.

440
00:20:27,850 --> 00:20:32,780
Prior to Expel, I managed
Fortune 25 Healthcare

441
00:20:32,780 --> 00:20:34,310
Detection and Response team.

442
00:20:34,310 --> 00:20:37,090
Before that I dabbled
in threat intelligence,

443
00:20:37,090 --> 00:20:40,030
that was a crime ware
analyst at iSight Partners,

444
00:20:40,030 --> 00:20:43,139
which was subsequently
acquired by FireEye.

445
00:20:43,140 --> 00:20:48,110
Just a quick disclaimer, I'm
by no means a cloud expert,

446
00:20:48,110 --> 00:20:50,770
but I do frequently
contribute our, you know,

447
00:20:50,770 --> 00:20:53,930
cloud detection and response
findings to our blog,

448
00:20:53,930 --> 00:20:58,050
which you can see here, feel
free to to hit that URL up

449
00:20:58,050 --> 00:21:00,233
for some cool tidbits.

450
00:21:05,590 --> 00:21:06,443
All right.

451
00:21:09,750 --> 00:21:13,550
So, what to expect from this presentation,

452
00:21:13,550 --> 00:21:16,909
we're all insecurity and
we all know that security

453
00:21:16,910 --> 00:21:20,120
is sort of this afterthought
in our corporate technology

454
00:21:20,120 --> 00:21:21,709
environments.

455
00:21:21,710 --> 00:21:24,570
It shouldn't be a surprise
to anybody that clouds

456
00:21:24,570 --> 00:21:26,993
sort of followed that similar path.

457
00:21:28,150 --> 00:21:30,850
To be honest, we're actually
observing that much of cloud

458
00:21:30,850 --> 00:21:32,129
security is actually falling on people

459
00:21:32,130 --> 00:21:35,230
outside of traditional
security teams like, DevOps,

460
00:21:35,230 --> 00:21:40,020
or Cloud Architecture, but
it's not all doom and gloom.

461
00:21:40,020 --> 00:21:43,600
So this presentation's less
about how we can use ATT&CK

462
00:21:43,600 --> 00:21:46,209
and its current form today,
but how we can evolve

463
00:21:46,210 --> 00:21:47,420
and mature it.

464
00:21:47,420 --> 00:21:49,940
So today we're gonna
cover, ATT&CK for Cloud

465
00:21:49,940 --> 00:21:54,410
as we see it here,
defending the control plane,

466
00:21:54,410 --> 00:21:56,840
a real world incident
and some other incidents,

467
00:21:56,840 --> 00:22:00,790
and how we've applied
ATT&CK for cloud there,

468
00:22:00,790 --> 00:22:03,090
and then some takeaways

469
00:22:03,090 --> 00:22:06,570
Just a quick note again, on
this presentation, it assumes

470
00:22:06,570 --> 00:22:08,870
that you have a limited
knowledge of cloud.

471
00:22:08,870 --> 00:22:11,830
So apologies if there's
anything that's elementary

472
00:22:11,830 --> 00:22:15,449
to the cloud experts out there,
or if I've overlooked any

473
00:22:15,450 --> 00:22:19,660
foundational information
for less experienced

474
00:22:19,660 --> 00:22:20,863
cloud security people.

475
00:22:25,370 --> 00:22:29,860
So, ATT&CK for cloud's just
over a year old, the community

476
00:22:29,860 --> 00:22:34,860
has been iterating as the world
learns more about attackers

477
00:22:34,910 --> 00:22:36,110
in the cloud.

478
00:22:36,110 --> 00:22:38,679
Jen, and the tech team released
some really, really great

479
00:22:38,680 --> 00:22:42,090
changes last month, plus
all the new sub techniques

480
00:22:42,090 --> 00:22:43,320
for cloud.

481
00:22:43,320 --> 00:22:46,600
So what exactly is ATT&CK for Cloud?

482
00:22:46,600 --> 00:22:50,669
Simply put, it's a way to
communicate how attackers misuse

483
00:22:50,670 --> 00:22:52,650
and abuse cloud services.

484
00:22:52,650 --> 00:22:54,890
So we see this as two big buckets today,

485
00:22:54,890 --> 00:22:56,397
we have infrastructure-as-a-service,

486
00:22:56,397 --> 00:22:57,980
and we have software-as-a-service.

487
00:22:57,980 --> 00:23:00,970
So, infrastructure-as-a-service
are those large cloud

488
00:23:00,970 --> 00:23:04,110
providers like AWS, Azure, Google.

489
00:23:04,110 --> 00:23:06,729
The ATT&CK surface for these
infrastructures of service

490
00:23:06,730 --> 00:23:09,160
are similar because they're
providing almost the same

491
00:23:09,160 --> 00:23:13,100
services as each other, they
just use different names.

492
00:23:13,100 --> 00:23:16,389
When we talk about
software-as-a-service, these are cloud

493
00:23:16,390 --> 00:23:18,440
services that you don't have
to manage any infrastructure

494
00:23:18,440 --> 00:23:19,463
or a platform.

495
00:23:20,340 --> 00:23:23,750
The big ones we all know,
Salesforce, ServiceNow, Zoom,

496
00:23:23,750 --> 00:23:25,920
Workday, GitHub, et cetera.

497
00:23:25,920 --> 00:23:28,170
The ATT&CK services with these,
you know, there's a little

498
00:23:28,170 --> 00:23:31,730
bit more variance, but are
likely gonna be concerned

499
00:23:31,730 --> 00:23:35,360
with the identity and access
management of those platforms

500
00:23:35,360 --> 00:23:38,763
of that software and the
service APIs for them.

501
00:23:43,430 --> 00:23:48,420
So, how is cloud different from the rest

502
00:23:48,420 --> 00:23:50,070
of Enterprise ATT&CK?

503
00:23:50,070 --> 00:23:54,639
So, there there's clearly
enough differences in the ATT&CK

504
00:23:54,640 --> 00:23:57,210
surfaces of each of the operating systems.

505
00:23:57,210 --> 00:23:59,890
So Linux, windows, Mac,
that they weren't thorough

506
00:23:59,890 --> 00:24:00,773
on matrix.

507
00:24:01,730 --> 00:24:05,930
But what makes the cloud
matrices of the cloud providers

508
00:24:05,930 --> 00:24:07,000
different?

509
00:24:07,000 --> 00:24:08,560
It's not really that much.

510
00:24:08,560 --> 00:24:11,270
So identity and access
management is the primary

511
00:24:11,270 --> 00:24:13,670
differentiator in each
of these cloud platforms.

512
00:24:13,670 --> 00:24:16,520
They all provide the same
services, it's how you access

513
00:24:16,520 --> 00:24:19,270
those services at their core.

514
00:24:19,270 --> 00:24:22,990
So each platform has a different identity

515
00:24:22,990 --> 00:24:24,940
and access management.

516
00:24:24,940 --> 00:24:27,600
And we'd argue that much of
the learning curve actually

517
00:24:27,600 --> 00:24:31,330
lies with the, I am the
identity and access management

518
00:24:31,330 --> 00:24:33,082
for security practitioners.

519
00:24:33,930 --> 00:24:38,240
So what makes the cloud matrices similar?

520
00:24:38,240 --> 00:24:39,770
And this is the big thing here.

521
00:24:39,770 --> 00:24:42,490
Each of them have what we call a control

522
00:24:42,490 --> 00:24:44,610
or a management plane.

523
00:24:44,610 --> 00:24:47,219
This is a similar ATT&CK
surface across each

524
00:24:47,220 --> 00:24:48,350
of those providers.

525
00:24:48,350 --> 00:24:51,649
So that the infrastructure
that service users,

526
00:24:51,650 --> 00:24:55,220
we use this control plane
to manage the various

527
00:24:55,220 --> 00:24:57,350
cloud resources via APIs.

528
00:24:57,350 --> 00:24:59,610
And this is where we're
actually seeing attackers

529
00:24:59,610 --> 00:25:02,550
abuse and misuse cloud services.

530
00:25:02,550 --> 00:25:05,810
And it'll be one of the main
focuses of this presentation.

531
00:25:05,810 --> 00:25:09,293
So, considering the differences
and similarities today,

532
00:25:10,501 --> 00:25:13,879
is this enough for each of
these cloud providers to warrant

533
00:25:13,880 --> 00:25:14,840
their own matrix?

534
00:25:14,840 --> 00:25:18,139
Today we have an AWS
matrix, an Azure matrix

535
00:25:18,140 --> 00:25:19,640
and a GCP matrix.

536
00:25:19,640 --> 00:25:21,320
And the answer is actually no.

537
00:25:21,320 --> 00:25:24,419
So last month Jen and
the ATT&CK team announced

538
00:25:24,420 --> 00:25:28,520
a consolidation from one
matrix down, or from the three

539
00:25:28,520 --> 00:25:31,389
matrices down to one matrix
based on what we know

540
00:25:31,390 --> 00:25:32,613
about attackers today.

541
00:25:36,670 --> 00:25:40,452
So let's zoom in on the
cloud ATT&CK surfaces.

542
00:25:40,452 --> 00:25:42,920
There's lots of new
technology in the cloud

543
00:25:42,920 --> 00:25:44,923
that didn't even exist 10 years ago.

544
00:25:46,030 --> 00:25:49,580
And there's quite a few with
ECS services at the same time.

545
00:25:49,580 --> 00:25:52,857
So, we already mentioned
that the control plane

546
00:25:52,857 --> 00:25:56,810
and the management plane,
it's a way to abstract

547
00:25:56,810 --> 00:25:59,610
administration away from all
of these various services

548
00:25:59,610 --> 00:26:01,830
using one thing.

549
00:26:01,830 --> 00:26:05,389
We have Kubernetes, and it's
control plane for management,

550
00:26:05,390 --> 00:26:08,070
Kubernetes being a way to
a manager containerized

551
00:26:08,070 --> 00:26:08,903
environment.

552
00:26:09,870 --> 00:26:11,669
I'm not an expert by any
means of the Kubernetes

553
00:26:11,670 --> 00:26:13,570
so I will stop there.

554
00:26:13,570 --> 00:26:17,860
Storage services like S3
or Azure blob service,

555
00:26:17,860 --> 00:26:20,219
or Google cloud service.

556
00:26:20,220 --> 00:26:22,763
This is your hard drives in the cloud,

557
00:26:23,850 --> 00:26:25,179
the compute resources, right?

558
00:26:25,180 --> 00:26:28,360
So all of the VMs that run in the cloud.

559
00:26:28,360 --> 00:26:33,360
So Amazon EC2, Azure VM, this is where all

560
00:26:34,170 --> 00:26:36,150
of our applications are running

561
00:26:36,150 --> 00:26:38,340
that are not in containerized
or even in containerized

562
00:26:38,340 --> 00:26:39,560
environments.

563
00:26:39,560 --> 00:26:43,633
Cloud databases, NAWS,
RDS, Redshift, et cetera.

564
00:26:44,660 --> 00:26:49,060
So, why did we choose to
focus on this control plane,

565
00:26:49,060 --> 00:26:52,082
given we know about all of
these different ATT&CK surfaces?

566
00:26:53,610 --> 00:26:54,443
A few reasons.

567
00:26:54,443 --> 00:26:59,180
So, our theory was that
it would likely be easier

568
00:26:59,180 --> 00:27:02,390
to spot attacker
fingerprints, and I'll get

569
00:27:02,390 --> 00:27:04,960
more on this soon with
regards to like the data

570
00:27:04,960 --> 00:27:07,300
that we use to spot those fingerprints.

571
00:27:07,300 --> 00:27:10,800
But it's also a super
high risk for a business

572
00:27:10,800 --> 00:27:14,820
any businesses, if you
lose the access keys

573
00:27:14,820 --> 00:27:17,560
to your control plane,
it could potentially

574
00:27:17,560 --> 00:27:21,363
be like having domain admin
for a windows environment.

575
00:27:22,310 --> 00:27:25,600
There's another reason
there's not a ton of traction

576
00:27:25,600 --> 00:27:26,899
with EDR in the cloud.

577
00:27:26,900 --> 00:27:29,470
There's very few vendors
that are actually spending

578
00:27:29,470 --> 00:27:32,570
a ton of effort here, and
there's even less customers

579
00:27:32,570 --> 00:27:34,070
deploying it.

580
00:27:34,070 --> 00:27:37,520
That could, it could be
possibly due to the reason

581
00:27:37,520 --> 00:27:41,490
I mentioned before, of cloud
security falling on other teams

582
00:27:41,490 --> 00:27:42,990
like DevOps.

583
00:27:42,990 --> 00:27:47,990
And lastly, the migration to
containerized and server lists,

584
00:27:48,100 --> 00:27:49,023
cloud compute.

585
00:27:53,600 --> 00:27:56,639
So, it's important to know
what we're responsible

586
00:27:56,640 --> 00:28:00,780
for, versus what our cloud
providers are responsible for,

587
00:28:00,780 --> 00:28:02,280
regarding security.

588
00:28:02,280 --> 00:28:05,399
So this is the shared responsibility model

589
00:28:05,400 --> 00:28:06,840
for cloud security.

590
00:28:06,840 --> 00:28:09,870
Each provider has one and
they're all relatively the same.

591
00:28:09,870 --> 00:28:13,500
This is AWS's, which much of
the rest of this presentation

592
00:28:13,500 --> 00:28:18,280
will be the focus of, but
what we've found out through

593
00:28:18,280 --> 00:28:21,760
the shared responsibility model
is that, the cloud provider

594
00:28:21,760 --> 00:28:24,340
is actually responsible
for very little security.

595
00:28:24,340 --> 00:28:26,820
And I think this is kind of
a misconception that people

596
00:28:26,820 --> 00:28:30,450
have been migrating to the
cloud, that there's inherently

597
00:28:30,450 --> 00:28:31,630
more security.

598
00:28:31,630 --> 00:28:34,610
It's definitely true in some
instances, but generally

599
00:28:34,610 --> 00:28:35,822
speaking, it's not.

600
00:28:36,750 --> 00:28:41,470
So on this diagram, the
the blue mostly represents

601
00:28:41,470 --> 00:28:45,610
all the different cloud services
that each provider offers.

602
00:28:45,610 --> 00:28:50,610
That's EC2 and VPC, S3 storage, IAM, RDS,

603
00:28:51,150 --> 00:28:55,390
all these different acronyms
that are services and AWS.

604
00:28:55,390 --> 00:28:58,470
All of these services are
managed by their control plane,

605
00:28:58,470 --> 00:29:00,770
and the control plane is made
up of many different APIs

606
00:29:00,770 --> 00:29:02,550
to access each service.

607
00:29:02,550 --> 00:29:05,629
So there's three ways that
you can actually access

608
00:29:05,630 --> 00:29:08,210
those services through
their control plane.

609
00:29:08,210 --> 00:29:12,420
First, the web UI, that's
console, that's, aws.amazon.com,

610
00:29:12,420 --> 00:29:13,815
right?

611
00:29:13,815 --> 00:29:16,760
Next is the CLI, which is
the Command Line Interface

612
00:29:16,760 --> 00:29:20,270
through some shell, this
isn't commonly used.

613
00:29:20,270 --> 00:29:22,950
And then we have
programmatic access through,

614
00:29:22,950 --> 00:29:24,110
Software Development Kits SDK's,

615
00:29:24,110 --> 00:29:25,969
and this is the most common, right?

616
00:29:25,970 --> 00:29:30,950
Because most AWS resources
are managed programmatically

617
00:29:30,950 --> 00:29:33,490
through infrastructures
code like, Terraform

618
00:29:33,490 --> 00:29:35,640
or CloudFormation.

619
00:29:35,640 --> 00:29:38,700
But we do know that the cloud
control plane is actually

620
00:29:38,700 --> 00:29:40,490
a shared responsibility.

621
00:29:40,490 --> 00:29:44,990
AWS tries make the APIs inherently
secure, and you can make

622
00:29:44,990 --> 00:29:46,990
the debate as to whether
there's vulnerabilities

623
00:29:46,990 --> 00:29:48,123
over their features?

624
00:29:49,300 --> 00:29:53,760
But they're also providing
protection through paid services

625
00:29:53,760 --> 00:29:55,453
like Amazon guard duty.

626
00:30:00,980 --> 00:30:04,270
So here is a a brief story
of our threat detection

627
00:30:04,270 --> 00:30:05,247
journey in AWS.

628
00:30:06,358 --> 00:30:10,460
We know we wanted to focus on
defending the control plane,

629
00:30:10,460 --> 00:30:11,870
but where do we start?

630
00:30:11,870 --> 00:30:15,550
So, first we ask, what
native detection capabilities

631
00:30:15,550 --> 00:30:19,336
or services does AWS offer
for the control plane?

632
00:30:19,336 --> 00:30:23,160
The answer there's guard
duty, and there's about 50

633
00:30:23,160 --> 00:30:26,190
or so use cases are, guard duty findings

634
00:30:26,190 --> 00:30:30,360
for the control plane that
offers threat detection

635
00:30:30,360 --> 00:30:31,409
in that service.

636
00:30:31,410 --> 00:30:35,780
So, there's definitely some
great detections in guard duty,

637
00:30:35,780 --> 00:30:38,590
but some are less helpful just
like any security product.

638
00:30:38,590 --> 00:30:40,570
We actually have a couple
of blogs highlighting

639
00:30:40,570 --> 00:30:42,123
the value we see in guard duty.

640
00:30:43,980 --> 00:30:46,420
So knowing that, what are our gaps?

641
00:30:46,420 --> 00:30:50,570
We have guard duty, what are
the gaps, and how we defend

642
00:30:50,570 --> 00:30:51,929
this control plane.

643
00:30:51,930 --> 00:30:55,790
There's almost 10,000 different
APIs, so there's probably

644
00:30:55,790 --> 00:31:00,770
quite a few, you know, shout
out to Scott at summit route,

645
00:31:00,770 --> 00:31:05,770
for providing the pluffer of
AWS security resources we used

646
00:31:05,800 --> 00:31:08,773
sort of drive this detection
and response strategy as well.

647
00:31:10,210 --> 00:31:11,333
So what's next?

648
00:31:12,378 --> 00:31:15,429
Now we need to find the
data that we have available

649
00:31:15,430 --> 00:31:19,080
to us to develop that detection strategy

650
00:31:19,080 --> 00:31:20,649
for the control plane.

651
00:31:20,650 --> 00:31:23,500
And with that, we're sort
of off to cloud trail,

652
00:31:23,500 --> 00:31:26,540
now so, cloud trail is
the native AWS logging

653
00:31:26,540 --> 00:31:27,843
for our control plane.

654
00:31:30,870 --> 00:31:33,360
So we've got all of our cloud
trail data, how do we start

655
00:31:33,360 --> 00:31:34,500
building threat detections?

656
00:31:34,500 --> 00:31:35,620
What are our use cases?

657
00:31:35,620 --> 00:31:37,489
What are our threat models?

658
00:31:37,490 --> 00:31:40,830
So we decided to look at
offensive security tools

659
00:31:40,830 --> 00:31:43,370
they abused or misused,
the control plane and AWS.

660
00:31:43,370 --> 00:31:45,879
These are penetration testing frameworks.

661
00:31:45,880 --> 00:31:49,380
PACU is, isn't, or wasn't, probably still

662
00:31:49,380 --> 00:31:51,450
is the most well-known today.

663
00:31:51,450 --> 00:31:54,140
This was open source from the good folks

664
00:31:54,140 --> 00:31:56,163
over at Rhino Security Labs.

665
00:31:57,190 --> 00:32:00,600
After we did this, we built
experimental detections

666
00:32:00,600 --> 00:32:04,370
on the cloud trail data
to see if one, attackers

667
00:32:04,370 --> 00:32:07,290
were actually using these
tools, which some were,

668
00:32:07,290 --> 00:32:12,290
or two, are the attackers
abusing or misusing the APIs

669
00:32:15,540 --> 00:32:20,139
that were identified in
these OSTs in other ways.

670
00:32:20,140 --> 00:32:24,240
So from there we iterated,
we tuned and reached,

671
00:32:24,240 --> 00:32:26,110
contextualized these
detections as we learn

672
00:32:26,110 --> 00:32:27,959
more about real attackers.

673
00:32:27,960 --> 00:32:31,340
And evidence, we caught
a bunch of penetration,

674
00:32:31,340 --> 00:32:33,403
testers in red team along the way.

675
00:32:36,850 --> 00:32:40,540
So, this is an actual
attack that Expel detected

676
00:32:40,540 --> 00:32:41,533
and responded to.

677
00:32:42,900 --> 00:32:46,010
It's what I would call an
unconventional coin miner,

678
00:32:46,010 --> 00:32:50,770
because when we generally see
a coin miner, it's a result

679
00:32:50,770 --> 00:32:55,093
of like an RCE exploitation on
some web application, right?

680
00:32:56,210 --> 00:33:01,210
In this instance we have
an attacker that identified

681
00:33:01,440 --> 00:33:06,440
root AWS access keys, and a
GitHub repo or wherever it was,

682
00:33:06,510 --> 00:33:11,030
and then use those keys
we saw from an unusual IP

683
00:33:11,030 --> 00:33:12,070
from that environment.

684
00:33:12,070 --> 00:33:15,913
So, let's talk about root
access key risks a little bit.

685
00:33:18,230 --> 00:33:22,760
The root access key risk allows
an attacker to have complete

686
00:33:22,760 --> 00:33:26,050
control of potentially
production environment.

687
00:33:26,050 --> 00:33:30,050
This is a route access,
unless there are some controls

688
00:33:30,050 --> 00:33:33,120
that you can implement to
reduce access to root keys

689
00:33:33,120 --> 00:33:35,739
but, in most instances
it's complete control

690
00:33:35,740 --> 00:33:37,610
of that AWS account.

691
00:33:37,610 --> 00:33:42,610
So, basically the domain
admin of the AWS account.

692
00:33:42,890 --> 00:33:45,090
So what did the attacker
do with those keys?

693
00:33:46,940 --> 00:33:51,850
He or she created multiple,
extra large EC2 and associated

694
00:33:51,850 --> 00:33:56,240
SSH key pairs for those EC2
instances, those are VMs.

695
00:33:56,240 --> 00:33:59,960
Then they modified the VPC
security groups, the virtual

696
00:33:59,960 --> 00:34:02,480
firewall to allow any access.

697
00:34:02,480 --> 00:34:05,610
And this was all done via
an automated Bot written

698
00:34:05,610 --> 00:34:09,770
in one of the AWS SDKs, the
Software Development Kits,

699
00:34:09,770 --> 00:34:11,469
and this instance it was golint.

700
00:34:11,469 --> 00:34:14,509
So, a whole Bot it was written in Go.

701
00:34:14,510 --> 00:34:19,110
So, those SSH keys were
then passed off to access

702
00:34:20,040 --> 00:34:23,360
the new EC2 that were spun up
to install the coin miners.

703
00:34:23,360 --> 00:34:25,290
And this is where we
actually saw a guard duty

704
00:34:25,290 --> 00:34:26,123
come in.

705
00:34:27,360 --> 00:34:31,670
So guard duty detections are
based on three data sets,

706
00:34:31,670 --> 00:34:35,570
it's cloud trail, which
is the control play logs,

707
00:34:35,570 --> 00:34:38,590
your DNS and AWS, and your VPC flow logs,

708
00:34:38,590 --> 00:34:40,330
which is your NetFlow.

709
00:34:40,330 --> 00:34:44,020
But keep in mind that this guard
duty alert is actually easy

710
00:34:44,020 --> 00:34:46,840
to finding and is not
for the control plane.

711
00:34:46,840 --> 00:34:49,320
These findings are actually
meant to identify evil

712
00:34:49,320 --> 00:34:52,930
in your EC2 based on like
DNS flow, flow traffic,

713
00:34:52,929 --> 00:34:55,569
but, at the end of the day,
it was great correlation

714
00:34:55,570 --> 00:34:57,120
for all the analysts.

715
00:34:57,120 --> 00:35:01,540
So, with this story painted,
or this picture painted,

716
00:35:01,540 --> 00:35:05,920
this leads into how we visualize
MITRE ATT&CK for Cloud,

717
00:35:05,920 --> 00:35:07,370
so let's get into that a bit.

718
00:35:09,440 --> 00:35:13,290
So, what we have here is a model
of everything that occurred

719
00:35:14,340 --> 00:35:18,950
with the AWS root keys before
those SSH keys were used

720
00:35:18,950 --> 00:35:22,279
to authenticate to EC2,
think of it as two phases

721
00:35:22,280 --> 00:35:23,113
of the ATT&CK.

722
00:35:24,300 --> 00:35:27,020
But this also highlights how
little we know about ATT&CKs

723
00:35:27,020 --> 00:35:30,763
on the infrastructure service
platforms, AWS, GCP, Azure,

724
00:35:31,790 --> 00:35:34,723
there's lots of maturity in
the other enterprise matrices.

725
00:35:36,000 --> 00:35:39,610
So to detect an attacker here,
we're relying on our security

726
00:35:39,610 --> 00:35:41,740
signal from those control planes.

727
00:35:41,740 --> 00:35:45,459
So for AWS it's cloud trail, and GCP

728
00:35:45,460 --> 00:35:47,650
it's the admin activity, the system event

729
00:35:47,650 --> 00:35:50,420
and the data access audit
logs, it's the activity logs

730
00:35:50,420 --> 00:35:51,253
in Azure.

731
00:35:52,364 --> 00:35:54,340
All of these control plane
logs are not created equal

732
00:35:54,340 --> 00:35:58,600
though, you gotta think
that AWS has been around

733
00:35:58,600 --> 00:36:03,600
for probably, it's got five
more years of maturity than GCP.

734
00:36:04,070 --> 00:36:08,160
So naturally the AWS control
plane logs are significantly

735
00:36:08,160 --> 00:36:11,573
more mature than GCP in our experience.

736
00:36:16,140 --> 00:36:19,960
So here is what we'd call the
second phase of the ATT&CK.

737
00:36:19,960 --> 00:36:24,170
Everything after those SSH
keys were passed to the bot

738
00:36:24,170 --> 00:36:26,430
to install the coin miners.

739
00:36:26,430 --> 00:36:29,629
And what you're seeing here is
the enterprise Linux matrix.

740
00:36:29,630 --> 00:36:32,540
So the first thing we observed
is obviously a much more well

741
00:36:32,540 --> 00:36:36,790
understood and mature ATT&CK
surface than ATT&CK for Cloud.

742
00:36:36,790 --> 00:36:40,009
But interestingly, this is
almost the same ATT&CK mapping

743
00:36:40,010 --> 00:36:45,010
as we sort of mentioned
earlier with RCE exploitation

744
00:36:45,130 --> 00:36:47,723
of a web application to
install acquaint minor.

745
00:36:55,520 --> 00:36:58,360
So we actually have quite a
few more examples of attackers

746
00:36:58,360 --> 00:37:02,250
hopping around between the cloud
and the enterprise windows,

747
00:37:02,250 --> 00:37:03,410
or Linux matrices.

748
00:37:03,410 --> 00:37:08,109
So, similar to the ATT&CK
we described earlier,

749
00:37:08,110 --> 00:37:13,110
we have another instance of
an attacker except this came

750
00:37:14,170 --> 00:37:15,790
from the AWS CLI.

751
00:37:15,790 --> 00:37:19,020
So it was more hands on
keyboard, but it was multiple

752
00:37:19,020 --> 00:37:24,020
compromised keys, and the
attacker imported their own

753
00:37:24,080 --> 00:37:27,410
SSH keys to access the EC2.

754
00:37:27,410 --> 00:37:32,410
Next we had, Python SDK access,
AWS system security manager,

755
00:37:34,540 --> 00:37:39,540
SSM is the SCCM of AWS.

756
00:37:39,637 --> 00:37:44,637
And by default, this
provides pseudo Linux access,

757
00:37:45,831 --> 00:37:48,310
while this wasn't a real
attacker, it was a pretty

758
00:37:48,310 --> 00:37:49,460
sophisticated red team.

759
00:37:50,870 --> 00:37:54,799
Next we have, server-side
request forgery, exploitation.

760
00:37:54,800 --> 00:37:58,310
So SSRF, these are the
ones we see the most,

761
00:37:58,310 --> 00:38:02,310
or we used to see most commonly
in the news, similar to many

762
00:38:02,310 --> 00:38:05,470
high profile breaches like
capital one, essentially

763
00:38:05,470 --> 00:38:10,470
the EC2 instance, the
VM, has credential access

764
00:38:10,540 --> 00:38:13,490
to the control plane through
the instance metadata service

765
00:38:14,700 --> 00:38:18,120
that provides data to
the EC2, that it needs

766
00:38:18,120 --> 00:38:19,790
to do its thing.

767
00:38:19,790 --> 00:38:23,070
But essentially you can take
those EC2 incidents credentials

768
00:38:23,070 --> 00:38:28,010
that may be overpermissioned,
and can use those to do

769
00:38:28,010 --> 00:38:31,243
malicious abuse, misuse the
control plane or even use

770
00:38:31,243 --> 00:38:33,549
them to escalate privileges.

771
00:38:33,550 --> 00:38:37,570
And lastly, we saw an RDS database ransom.

772
00:38:37,570 --> 00:38:41,400
What this was, was actually
a broad scan against open

773
00:38:41,400 --> 00:38:42,950
Postgres databases.

774
00:38:42,950 --> 00:38:46,330
It wasn't quite that hot between matrices,

775
00:38:46,330 --> 00:38:49,470
but what was interesting was
that we were able to identify

776
00:38:49,470 --> 00:38:52,870
how the database was ransomed
through the cloud trail,

777
00:38:52,870 --> 00:38:56,710
control plane logs, and
to do this way we actually

778
00:38:56,710 --> 00:39:00,360
CloudTrail logs, we saw when
the password was changed

779
00:39:00,360 --> 00:39:04,330
and that RDS instance was clearly exposed

780
00:39:04,330 --> 00:39:05,380
to the open internet.

781
00:39:12,830 --> 00:39:16,529
So, based on our detection
response experience

782
00:39:16,530 --> 00:39:20,490
in AWS here at Expel, we developed
this really cool mind map

783
00:39:20,490 --> 00:39:25,490
for ATT&CK, for the APIs
that we observed being abused

784
00:39:25,540 --> 00:39:29,779
or misused over the last 18 plus months.

785
00:39:29,780 --> 00:39:33,300
So, keep in mind that many of
these have yet to be modeled

786
00:39:33,300 --> 00:39:36,760
into ATT&CK for Cloud, but
we're definitely working

787
00:39:36,760 --> 00:39:40,330
with Jen and the MITRE folks
to get some of the stuff

788
00:39:40,330 --> 00:39:42,200
documented and modeled in.

789
00:39:42,200 --> 00:39:45,799
But if you would like a
copy, the link's there,

790
00:39:45,800 --> 00:39:47,950
and we're happy to
share it with everybody.

791
00:39:50,850 --> 00:39:54,089
So, let's talk about
some of the takeaways.

792
00:39:54,090 --> 00:39:58,033
There's clearly lots of
ATT&CK surface in the cloud,

793
00:39:59,120 --> 00:40:02,569
but there's also lots of
opportunity to better understand

794
00:40:02,570 --> 00:40:05,600
all of the enterprise
matrices and improve cloud

795
00:40:05,600 --> 00:40:06,543
in particular.

796
00:40:07,860 --> 00:40:09,963
We don't know what we don't know.

797
00:40:10,850 --> 00:40:14,040
There's a lot of public
detections out there against

798
00:40:14,040 --> 00:40:18,509
CloudTrail, but many of
these, the vast majority

799
00:40:18,510 --> 00:40:21,540
of these are for what we would
call a risky configuration.

800
00:40:21,540 --> 00:40:25,480
So an S3 bucket exposed to
the internet or an RDS bucket

801
00:40:25,480 --> 00:40:29,480
exposed to the internet, a
risky configuration change

802
00:40:29,480 --> 00:40:33,130
on your VPC security group.

803
00:40:33,130 --> 00:40:35,880
And these aren't really
pushing the envelope,

804
00:40:35,880 --> 00:40:39,900
it's just a lot of alerts that
don't tell us a whole lot.

805
00:40:39,900 --> 00:40:43,030
What we need are more threat
centric detections, we need

806
00:40:43,030 --> 00:40:45,010
more experimentation.

807
00:40:45,010 --> 00:40:50,010
Again, this is sort of that new
frontier, and we need to try

808
00:40:50,250 --> 00:40:53,283
a bunch of different things
to sort of see what sticks.

809
00:40:54,170 --> 00:40:57,930
And lastly, ATT&CK
automation I think is really

810
00:40:57,930 --> 00:40:59,399
here to stay.

811
00:40:59,400 --> 00:41:03,610
Almost every example that I
had discussed was an automated

812
00:41:03,610 --> 00:41:06,100
ATT&CK, with the exception
of the one attacker

813
00:41:06,100 --> 00:41:10,520
that was using the CLI,
but this limits our ability

814
00:41:10,520 --> 00:41:13,030
to respond rapidly ATT&CKs.

815
00:41:13,030 --> 00:41:15,300
And it almost implies that
we have to sort of shift

816
00:41:15,300 --> 00:41:19,373
to this automated response
framework in the cloud.

817
00:41:20,570 --> 00:41:25,570
So, that's all I had today,
I hope that this is very

818
00:41:26,490 --> 00:41:28,310
insightful for everybody.

819
00:41:28,310 --> 00:41:31,120
I know this is a lot of
new material and a lot

820
00:41:31,120 --> 00:41:33,650
of new concepts to people.

821
00:41:33,650 --> 00:41:36,500
18 months ago I had like
virtually no experience

822
00:41:36,500 --> 00:41:37,780
in the cloud.

823
00:41:37,780 --> 00:41:42,460
So, let me be a lesson to
anybody else that it's easy

824
00:41:42,460 --> 00:41:46,720
to spin up and learn these
things, but I'm happy

825
00:41:46,720 --> 00:41:48,230
to elaborate on anything in Slack.

826
00:41:48,230 --> 00:41:52,780
And thanks again for having
me here today, Mutter.

827
00:41:52,780 --> 00:41:54,455
- Thanks for sharing, that was fantastic.

828
00:41:54,455 --> 00:41:56,299
And like you said, a lot of us
are kind of in the same boat,

829
00:41:56,300 --> 00:41:59,580
where we know of the risks
here, we know of the growing

830
00:41:59,580 --> 00:42:02,600
threat, but just getting
those first steps into cloud,

831
00:42:02,600 --> 00:42:03,810
it was such a learning curve.

832
00:42:03,810 --> 00:42:06,400
So we definitely appreciate
all your insight.

833
00:42:06,400 --> 00:42:09,320
We had a lot of great
questions building up on Slack.

834
00:42:09,320 --> 00:42:11,280
So definitely over there,
yeah, some really good ones.

835
00:42:11,280 --> 00:42:14,370
I'm gonna poke your brain
on mine a little bit.

836
00:42:14,370 --> 00:42:16,170
So you mentioned before, like
the shared responsibility,

837
00:42:16,170 --> 00:42:18,850
I think that's not something
necessarily that's new,

838
00:42:18,850 --> 00:42:21,127
like even in the traditional
enterprise environment,

839
00:42:21,128 --> 00:42:24,080
there's some kind of
spillage between the users

840
00:42:24,080 --> 00:42:27,940
and the actual vendors,
but what are your thoughts

841
00:42:27,940 --> 00:42:30,300
on how as a security
practitioner, I'm gonna use

842
00:42:30,300 --> 00:42:31,730
the same example from Allie.

843
00:42:31,730 --> 00:42:35,040
And it was a small SOC, how do
I work with the big vendors?

844
00:42:35,040 --> 00:42:37,180
I'm thinking about things
like metadata services,

845
00:42:37,180 --> 00:42:39,359
things that maybe are
outside of my control.

846
00:42:39,360 --> 00:42:41,870
What are your suggesting
here for like, as a security

847
00:42:41,870 --> 00:42:45,270
practitioner, how can I
augment those services as well

848
00:42:45,270 --> 00:42:48,330
as work with the vendors to
actually increase the security

849
00:42:48,330 --> 00:42:50,549
as we learn more about these threats?

850
00:42:50,550 --> 00:42:53,740
- Yeah, as it's tough as a
small shop, because I mean

851
00:42:53,740 --> 00:42:56,140
as we all know we're stretched pretty thin

852
00:42:56,140 --> 00:42:59,279
as it is from the security perspective.

853
00:42:59,280 --> 00:43:02,680
I think it's important, you
know, which the community

854
00:43:02,680 --> 00:43:05,500
is doing a very good job
at, but when we identified

855
00:43:05,500 --> 00:43:08,060
these things that are
inherently problematic,

856
00:43:08,060 --> 00:43:10,880
like particularly, like metadata service,

857
00:43:10,880 --> 00:43:12,500
I'll use that as an example.

858
00:43:12,500 --> 00:43:16,440
So the instance metadata
service, after their capital one

859
00:43:16,440 --> 00:43:19,810
breach, there was so much
pressure on AWS to make that thing

860
00:43:19,810 --> 00:43:22,360
more secure, because it was
causing so many problems

861
00:43:22,360 --> 00:43:27,360
that they actually revealed
instant metadata service

862
00:43:27,960 --> 00:43:32,960
version two, which eliminates
a lot of the risks there.

863
00:43:33,480 --> 00:43:38,100
However, it does take an army to migrate

864
00:43:38,100 --> 00:43:40,790
all your applications and
everything over to the new

865
00:43:40,790 --> 00:43:41,930
instance metadata service.

866
00:43:41,930 --> 00:43:46,430
So, yeah, it's tricky,
it's tricky for sure.

867
00:43:46,430 --> 00:43:47,263
- Makes a lot of sense.

868
00:43:47,263 --> 00:43:48,779
And one of the interesting
things that you mentioned

869
00:43:48,780 --> 00:43:51,540
was kind of the overlap between
matrices, like you said,

870
00:43:51,540 --> 00:43:53,730
I think one of the examples
you shared was cloud

871
00:43:53,730 --> 00:43:55,600
was the beginning of the breach,
and it quickly jumped over

872
00:43:55,600 --> 00:43:57,140
to Linux.

873
00:43:57,140 --> 00:44:00,270
But thinking about those
that are kind of more focused

874
00:44:00,270 --> 00:44:03,130
on the native cloud ATT&CKs,
I think some of the trends

875
00:44:03,130 --> 00:44:05,600
we've seen is a lot of that
has been either ransomware,

876
00:44:05,600 --> 00:44:07,370
or just complete exfiltration.

877
00:44:07,370 --> 00:44:10,660
Just tacking data in some
way, either holding hostage

878
00:44:10,660 --> 00:44:11,830
or stealing it.

879
00:44:11,830 --> 00:44:13,970
What are your trends or
what do you kind of see

880
00:44:13,970 --> 00:44:16,790
on the horizon in terms of
those cloud native ATT&CKs?

881
00:44:16,790 --> 00:44:20,800
- Sure, there's a couple
ways I can answer this,

882
00:44:20,800 --> 00:44:23,083
I can be an optimist or an alarmist.

883
00:44:23,920 --> 00:44:28,320
So the, we don't know what
we don't know in the cloud

884
00:44:28,320 --> 00:44:32,530
with regards to how, because
the threat detection monitoring

885
00:44:32,530 --> 00:44:33,973
really isn't there.

886
00:44:35,160 --> 00:44:37,190
I don't think there's
a ton of organizations

887
00:44:37,190 --> 00:44:42,190
that are doing this, but once
we learn more about attackers

888
00:44:42,360 --> 00:44:44,240
and once that stuff
starts being socialized

889
00:44:44,240 --> 00:44:46,899
a little bit more, I'm
almost curious to see

890
00:44:46,900 --> 00:44:49,470
if more attackers actually
migrate to attacking things

891
00:44:49,470 --> 00:44:50,620
like the control plane.

892
00:44:51,480 --> 00:44:54,420
What's interesting about
the coin miner ATT&CK

893
00:44:54,420 --> 00:44:57,290
is that, that attacker
could have monetized

894
00:44:57,290 --> 00:45:01,240
those root access keys
significantly more than installing

895
00:45:01,240 --> 00:45:02,939
a few coin miners, right?

896
00:45:02,940 --> 00:45:05,820
They had control of what
could have been production

897
00:45:05,820 --> 00:45:06,770
environment, right?

898
00:45:08,240 --> 00:45:12,060
But I think that attackers
have risk management as well.

899
00:45:12,060 --> 00:45:15,170
So, how much heat do they
wanna bring on themselves?

900
00:45:15,170 --> 00:45:19,980
The, yeah, I, but again, most
of this stuff is automated,

901
00:45:19,980 --> 00:45:24,600
so there's a preconceived
notion of what the attackers

902
00:45:24,600 --> 00:45:25,513
wants to achieve.

903
00:45:26,560 --> 00:45:29,400
- And then a final question
I had for you is, personally

904
00:45:29,400 --> 00:45:31,570
I've worked with the cloud
team and ATT&CK and Jen,

905
00:45:31,570 --> 00:45:33,110
in kind of helping mature that models.

906
00:45:33,110 --> 00:45:34,730
We definitely appreciate
everything you guys

907
00:45:34,730 --> 00:45:37,370
have contributed and kind of
a work with us to help build

908
00:45:37,370 --> 00:45:38,203
that out.

909
00:45:38,203 --> 00:45:40,070
But one of the things
to keep mention is that,

910
00:45:40,070 --> 00:45:42,100
we're all in this together,
all this is maturing

911
00:45:42,100 --> 00:45:42,933
at the same time.

912
00:45:42,933 --> 00:45:44,680
The trade craft from
adversaries is growing,

913
00:45:44,680 --> 00:45:48,040
as well as our ability to detect
these things, harden them,

914
00:45:48,040 --> 00:45:49,500
and then like you said, share information

915
00:45:49,500 --> 00:45:51,580
about what adversaries are actually doing.

916
00:45:51,580 --> 00:45:54,340
What advice can you give
to the community listening

917
00:45:54,340 --> 00:45:57,740
on how we can work together to
actually like reach that end

918
00:45:57,740 --> 00:46:01,379
state of more secure cloud
development and more secure

919
00:46:03,120 --> 00:46:04,403
cloud deployment?

920
00:46:05,520 --> 00:46:09,970
- Yeah, so I think it will
evolve over time, I think

921
00:46:09,970 --> 00:46:12,490
the cloud is still relatively
immature especially

922
00:46:12,490 --> 00:46:14,120
from a security perspective.

923
00:46:14,120 --> 00:46:17,250
I mentioned how a lot
of cloud security falls

924
00:46:17,250 --> 00:46:19,180
on teams that are outside
of traditional security.

925
00:46:19,180 --> 00:46:21,980
So I think as that
matures a little bit more

926
00:46:21,980 --> 00:46:23,763
we'll get a better grasp of things.

927
00:46:25,580 --> 00:46:30,580
But with that being said, there
is the information sharing

928
00:46:31,100 --> 00:46:34,750
is really important here, I
think that's how the security

929
00:46:34,750 --> 00:46:38,590
community as a whole
has evolved everything.

930
00:46:38,590 --> 00:46:43,470
Look how mature ATT&CK for
Linux and ATT&CK for windows,

931
00:46:43,470 --> 00:46:46,649
those are contributions from
a bunch of people trying

932
00:46:46,650 --> 00:46:48,140
to work together for a collective goal.

933
00:46:48,140 --> 00:46:53,140
So, I think as long as
we're continuing to help

934
00:46:53,540 --> 00:46:55,509
each other we'll get there.

935
00:46:55,510 --> 00:46:56,770
- Yep, we're all in
this together, it is all

936
00:46:56,770 --> 00:46:57,603
about the community.

937
00:46:57,603 --> 00:46:59,100
So thanks again for your presentation.

938
00:46:59,100 --> 00:47:01,700
Like you said, definitely
hop over to Slack,

939
00:47:01,700 --> 00:47:03,160
there's some great
questions building up there,

940
00:47:03,160 --> 00:47:04,529
definitely wants more insights from you.

941
00:47:04,530 --> 00:47:06,730
But, with that, I'm gonna
turn it back over to Adam

942
00:47:06,730 --> 00:47:08,460
to introduce our next speaker.

943
00:47:08,460 --> 00:47:09,900
Thanks again, Anthony.

944
00:47:09,900 --> 00:47:12,053
- Yeah, and thank you, both of you again.

945
00:47:13,470 --> 00:47:16,370
So our next speaker, I think
is gonna be taking the prize

946
00:47:16,370 --> 00:47:18,283
for our farthest away today.

947
00:47:19,470 --> 00:47:22,323
We have Nitya Garg from LinkedIn.

948
00:47:31,870 --> 00:47:33,290
- Thank you, Adam.

949
00:47:33,290 --> 00:47:35,759
All right, good morning,
good afternoon, good evening

950
00:47:35,760 --> 00:47:36,870
to all of you.

951
00:47:36,870 --> 00:47:39,930
My name is Nitya, and
I'm from Bangalore India.

952
00:47:39,930 --> 00:47:42,676
Today I will be presenting
on building detections

953
00:47:42,677 --> 00:47:45,480
for cloud with KQL and ATT&CK.

954
00:47:48,800 --> 00:47:51,770
Before I start a brief
introduction about me.

955
00:47:51,770 --> 00:47:54,980
I have over 7 years of
experience in cybersecurity,

956
00:47:54,980 --> 00:47:58,620
most of which has been focused
on analyzing intrusions,

957
00:47:58,620 --> 00:48:02,279
responding to security incidents
and building detections.

958
00:48:02,280 --> 00:48:05,460
Currently I'm working as
information security engineer

959
00:48:05,460 --> 00:48:09,910
for Trek Mitigation an incident
response team at LinkedIn.

960
00:48:09,910 --> 00:48:13,100
I have a blog that I use as a
platform to share my thoughts,

961
00:48:13,100 --> 00:48:16,870
learnings, and experiences
on InfoSec and on life.

962
00:48:16,870 --> 00:48:19,319
I can be found on Twitter
by handle, nitya--garg.

963
00:48:22,940 --> 00:48:24,390
All right, let's get started.

964
00:48:27,290 --> 00:48:29,520
Agenda for today's presentation includes,

965
00:48:29,520 --> 00:48:32,040
introducing MTRE ATT&CK
for Cloud, what is new

966
00:48:32,040 --> 00:48:33,440
in MITRE ATT&CK for Cloud?

967
00:48:33,440 --> 00:48:37,130
And how we can leverage it for
building detections in cloud?

968
00:48:37,130 --> 00:48:39,900
I will then talk about the
overall high level process

969
00:48:39,900 --> 00:48:41,980
for developing a detection.

970
00:48:41,980 --> 00:48:44,487
As an example, I will
discuss about the cloud-based

971
00:48:44,487 --> 00:48:49,487
technique T1528, with the
steal application access token.

972
00:48:49,950 --> 00:48:52,540
I will be covering what
the ATT&CK technique is,

973
00:48:52,540 --> 00:48:55,380
what log sources and
events can be monitored?

974
00:48:55,380 --> 00:48:57,587
And how to guide the detection query

975
00:48:57,587 --> 00:49:00,223
for this ATT&CK technique.

976
00:49:05,150 --> 00:49:07,070
I would like to begin with the statement,

977
00:49:07,070 --> 00:49:10,130
attackers have to succeed at every stage,

978
00:49:10,130 --> 00:49:13,017
defenders have to catch them at any one.

979
00:49:13,886 --> 00:49:17,830
Well, the more popular
opinion, all they say something

980
00:49:17,830 --> 00:49:20,770
contradictory to it that,
defenders have to be right

981
00:49:20,770 --> 00:49:23,960
every time, while attackers
have to be right ones.

982
00:49:23,960 --> 00:49:26,640
And the reason many believe
so, is because it takes

983
00:49:26,640 --> 00:49:30,400
one unpacked system,
or one negligent user,

984
00:49:30,400 --> 00:49:35,400
or one guarantee for an attacker
to get inside the network.

985
00:49:35,690 --> 00:49:38,420
But if they're familiar
with the ATT&CK life cycle,

986
00:49:38,420 --> 00:49:41,560
you know that from the very
early reconnaissance stage

987
00:49:41,560 --> 00:49:45,259
to the final data exfiltration
stage, an attacker

988
00:49:45,260 --> 00:49:47,460
has to not only succeed at every stage,

989
00:49:47,460 --> 00:49:50,700
but they have to also cover
their tracks all the time.

990
00:49:50,700 --> 00:49:54,319
And that opens multiple windows
for a defender to detect

991
00:49:54,320 --> 00:49:55,153
the ATT&CK.

992
00:49:57,050 --> 00:49:59,410
This approach is also
called defense in depth,

993
00:49:59,410 --> 00:50:01,790
which is like leveraging
multiple redundant

994
00:50:01,790 --> 00:50:03,480
defensive measures.

995
00:50:03,480 --> 00:50:06,300
And while the strategy
has been a core component

996
00:50:06,300 --> 00:50:09,340
of enterprise security for some time now,

997
00:50:09,340 --> 00:50:12,514
it is equally applicable and
efficient for cloud security

998
00:50:12,514 --> 00:50:13,580
as well.

999
00:50:13,580 --> 00:50:17,240
But as we know, cloud technology
is relatively a new domain

1000
00:50:17,240 --> 00:50:18,810
which is still growing and evolving.

1001
00:50:18,810 --> 00:50:22,440
So, how do we build a
resilient detection strategy

1002
00:50:22,440 --> 00:50:24,960
for cloud while still learning about it?

1003
00:50:24,960 --> 00:50:26,110
Where do we even start?

1004
00:50:30,160 --> 00:50:33,399
Well, MITRE ATT&CK has
made our job a little easy

1005
00:50:33,400 --> 00:50:36,090
in finding answers to these questions.

1006
00:50:36,090 --> 00:50:39,100
So what MITRE has done, it
has created a database of all

1007
00:50:39,100 --> 00:50:41,210
the known attack techniques for cloud.

1008
00:50:41,210 --> 00:50:44,330
And these techniques are grouped
under 10 different tactics

1009
00:50:44,330 --> 00:50:46,960
or post exploitation stages.

1010
00:50:46,960 --> 00:50:50,100
This database is constantly
updated with many remote

1011
00:50:50,100 --> 00:50:53,373
individuals and organizations
contributing towards it.

1012
00:50:54,396 --> 00:50:57,380
ATT&CK framework can be leveraged
for threat intelligence,

1013
00:50:57,380 --> 00:51:00,550
detection and analytics, It was
really simulation assessment

1014
00:51:00,550 --> 00:51:01,560
and engineering.

1015
00:51:01,560 --> 00:51:04,960
But for the scope of this
presentation, I will be discussing

1016
00:51:04,960 --> 00:51:08,573
on how to use ATT&CK for
building detections in cloud.

1017
00:51:10,540 --> 00:51:13,090
But let's first understand the detection

1018
00:51:13,090 --> 00:51:14,303
development process.

1019
00:51:17,830 --> 00:51:20,490
So the first step when
developing a detection

1020
00:51:20,490 --> 00:51:22,533
is to select the ATT&CK
technique for which you want

1021
00:51:22,533 --> 00:51:25,370
to build that detection for.

1022
00:51:25,370 --> 00:51:27,520
Now it can be that you're already familiar

1023
00:51:27,520 --> 00:51:29,890
with that specific ATT&CK
technique, what is it,

1024
00:51:29,890 --> 00:51:31,310
and how it works?

1025
00:51:31,310 --> 00:51:34,390
And in that case, you can
skip the step two and straight

1026
00:51:34,390 --> 00:51:35,609
away go to step three.

1027
00:51:35,610 --> 00:51:38,470
But many of the times it
happens that we may not be very

1028
00:51:38,470 --> 00:51:40,910
well aware of it, and
that is common this time,

1029
00:51:40,910 --> 00:51:44,332
and that database is huge
and no one knows everything.

1030
00:51:45,310 --> 00:51:49,029
And that has been the step two
about researching the ATT&CK

1031
00:51:49,030 --> 00:51:51,270
technique becomes very important.

1032
00:51:51,270 --> 00:51:53,970
Now before we can go and
start building the detection

1033
00:51:53,970 --> 00:51:57,390
itself, we need to do our
homework, like study and research

1034
00:51:57,390 --> 00:51:58,520
about that technique.

1035
00:51:58,520 --> 00:52:01,320
How that ATT&CK works,
and what is its relevance

1036
00:52:01,320 --> 00:52:03,200
at your organization?

1037
00:52:03,200 --> 00:52:06,370
Is the adapt technique
applicable to your environment?

1038
00:52:06,370 --> 00:52:08,863
And if yes, then how it can be exploited?

1039
00:52:10,860 --> 00:52:12,740
So ATT&CK gives a detailed description

1040
00:52:12,740 --> 00:52:15,470
of the ATT&CK technique,
and it also gives a multiple

1041
00:52:15,470 --> 00:52:18,928
references to other links and
resources that can be helpful

1042
00:52:18,929 --> 00:52:21,173
when researching about that technique.

1043
00:52:23,430 --> 00:52:26,290
The next step is to
identify the data sources

1044
00:52:26,290 --> 00:52:28,620
that you need to monitor
and leverage for building

1045
00:52:28,620 --> 00:52:30,020
that detection.

1046
00:52:30,020 --> 00:52:32,810
Now at that list on all
the potential data sources

1047
00:52:32,810 --> 00:52:35,700
that are applicable for
that ATT&CK technique.

1048
00:52:35,700 --> 00:52:38,669
The offer, the identification
of the data sources,

1049
00:52:38,670 --> 00:52:42,420
you may have to check the
availability in your environment.

1050
00:52:42,420 --> 00:52:45,810
If they're available, you can
go to step four, but in case

1051
00:52:45,810 --> 00:52:48,320
the required logs are
missing, that can be a blocker

1052
00:52:48,320 --> 00:52:50,220
in your detection development process.

1053
00:52:51,350 --> 00:52:53,529
But let us say that you
have the required data,

1054
00:52:53,530 --> 00:52:54,910
so it's available.

1055
00:52:54,910 --> 00:52:59,049
So next look, before you start
writing the actual detection

1056
00:52:59,050 --> 00:53:03,000
query, try to visualize and
hypothesize the detections

1057
00:53:03,000 --> 00:53:06,350
scenario, how that ATT&CK
technique can be exploited

1058
00:53:06,350 --> 00:53:07,183
in your environment?

1059
00:53:07,183 --> 00:53:10,083
And what are the events you
need to monitor to detect it?

1060
00:53:11,700 --> 00:53:15,060
And once a detection scenario
picture is clear in your head,

1061
00:53:15,060 --> 00:53:18,430
or even you have written down
in a paper, review the logs

1062
00:53:18,430 --> 00:53:22,520
for those identify data
sources to know and understand

1063
00:53:22,520 --> 00:53:25,500
what events and fields
can be monitored in logs.

1064
00:53:26,400 --> 00:53:28,487
And then comes the main step of writing

1065
00:53:28,487 --> 00:53:30,217
the detection query itself.

1066
00:53:32,163 --> 00:53:35,550
And before you deploy the
detection query to production,

1067
00:53:35,550 --> 00:53:37,960
try to revisit the detection query.

1068
00:53:37,960 --> 00:53:41,990
It is real that a detection
written in the first attempt

1069
00:53:41,990 --> 00:53:44,580
itself is a high efficacy detection.

1070
00:53:44,580 --> 00:53:47,400
So fine-tuning the detection
to reduce the number

1071
00:53:47,400 --> 00:53:50,833
of potential false positive
is always a good practice.

1072
00:53:56,610 --> 00:53:59,610
Let us not see how to implement
this process for writing

1073
00:53:59,610 --> 00:54:02,330
the detection query for
one of the MITRE ATT&CK

1074
00:54:02,330 --> 00:54:03,636
techniques for cloud.

1075
00:54:03,637 --> 00:54:07,090
The cloud technique that I have
chosen for this presentation

1076
00:54:07,090 --> 00:54:09,683
is Steal Application Access Token.

1077
00:54:11,530 --> 00:54:14,670
Adversary steal the application
access token and they use

1078
00:54:14,670 --> 00:54:17,190
them in place of login credentials.

1079
00:54:17,190 --> 00:54:20,010
So application access
token, they are used to make

1080
00:54:20,010 --> 00:54:23,460
authorized API requests
on behalf of the user,

1081
00:54:23,460 --> 00:54:26,610
and they are used formally
radio-access resources

1082
00:54:26,610 --> 00:54:28,423
and cloud-based applications.

1083
00:54:29,680 --> 00:54:33,169
So in this type of ATT&CK,
attackers try to trick the users

1084
00:54:33,170 --> 00:54:36,180
into granting a malicious
application access

1085
00:54:36,180 --> 00:54:38,883
to sensitive data and other resources.

1086
00:54:40,430 --> 00:54:44,770
Or this is one, commonly
implemented framework that issues

1087
00:54:44,770 --> 00:54:47,600
token to users for access to systems.

1088
00:54:47,600 --> 00:54:51,750
So if in your organization you
have implemented any commonly

1089
00:54:51,750 --> 00:54:55,720
used old service like, Azure
Active Directory or an Okta,

1090
00:54:55,720 --> 00:54:58,640
it is very likely that this
ATT&CK technique is relevant

1091
00:54:58,640 --> 00:55:00,243
to your organization as well.

1092
00:55:02,210 --> 00:55:04,567
The data sources that
are identified by ATT&CK

1093
00:55:04,567 --> 00:55:07,420
for this technique includes,
Azure activity logs,

1094
00:55:07,420 --> 00:55:08,763
and OAuth audit logs.

1095
00:55:11,750 --> 00:55:14,630
So we learned about the
ATT&CK technique and undefined

1096
00:55:14,630 --> 00:55:16,620
the data sources, and the next step now

1097
00:55:16,620 --> 00:55:18,653
is to build a detection.

1098
00:55:23,470 --> 00:55:26,560
So to get some detection
ideas, we go back to ATT&CK

1099
00:55:26,560 --> 00:55:28,810
and read what it says about the detection.

1100
00:55:28,810 --> 00:55:32,009
And this is what they have
mentioned on their website

1101
00:55:32,010 --> 00:55:34,122
for this particular ATT&CK technique.

1102
00:55:34,122 --> 00:55:37,720
Security analysts can filter
for apps that are authorized

1103
00:55:37,720 --> 00:55:41,439
by a small number of
users, apps requesting high

1104
00:55:41,440 --> 00:55:44,550
risk permissions, and
permissions that are incongrouos

1105
00:55:44,550 --> 00:55:46,540
with the app's purpose.

1106
00:55:46,540 --> 00:55:49,910
Admins to identify
privilege escalation action

1107
00:55:49,910 --> 00:55:53,040
such as role creations
or policy modifications,

1108
00:55:53,040 --> 00:55:54,700
which could be the actions performed

1109
00:55:54,700 --> 00:55:56,406
after the initial access.

1110
00:56:01,280 --> 00:56:04,940
To simply ATT&CK suggestions,
I've created bullet point

1111
00:56:04,940 --> 00:56:05,900
out of these.

1112
00:56:05,900 --> 00:56:08,390
So the first detection
I did that we can pull

1113
00:56:08,390 --> 00:56:11,230
from what ATT&CK says about the detection,

1114
00:56:11,230 --> 00:56:14,160
is monitor for high
severity permissions granted

1115
00:56:14,160 --> 00:56:15,740
to an application.

1116
00:56:15,740 --> 00:56:19,370
So any application requesting
for some high severity

1117
00:56:19,370 --> 00:56:21,830
permissions like reading
and sending emails,

1118
00:56:21,830 --> 00:56:25,720
writing to mailbox settings
or writing all users profiles

1119
00:56:25,720 --> 00:56:29,040
that can be a red flag, and
it should be looked up for.

1120
00:56:29,040 --> 00:56:32,680
Second, monitor for applications
sending permission requests

1121
00:56:32,680 --> 00:56:34,310
for too many users.

1122
00:56:34,310 --> 00:56:37,759
So if the same application is
sending permission requests

1123
00:56:37,760 --> 00:56:40,530
to many users, it could
be trying to compromise

1124
00:56:40,530 --> 00:56:42,840
as many accounts as possible.

1125
00:56:42,840 --> 00:56:45,810
So you may want to verify
that if it doesn't authorize

1126
00:56:45,810 --> 00:56:48,982
action or it's a potential abuse.

1127
00:56:50,950 --> 00:56:53,720
Third, monitor for
privilege escalation actions

1128
00:56:53,720 --> 00:56:57,060
such as role creations
or policy modification.

1129
00:56:57,060 --> 00:57:00,259
Now after the initial
compromise, attackers usually try

1130
00:57:00,260 --> 00:57:04,540
to escalate privilege in order
to search for more sensitive

1131
00:57:04,540 --> 00:57:06,100
and valuable data.

1132
00:57:06,100 --> 00:57:09,993
So monitoring for such actions
can be additional detection.

1133
00:57:16,700 --> 00:57:19,529
So now we have some detection
ideas on how to build

1134
00:57:19,530 --> 00:57:23,510
a detection for potential
OAuth access token abuse.

1135
00:57:23,510 --> 00:57:26,910
The next step is to monitor the
logs for those events sites.

1136
00:57:26,910 --> 00:57:30,529
Now, depending on which OAuth
service you have implemented

1137
00:57:30,530 --> 00:57:32,420
in your organization, you should review

1138
00:57:32,420 --> 00:57:33,893
the audit logs for same.

1139
00:57:34,840 --> 00:57:37,640
Here I have listed down the event types

1140
00:57:37,640 --> 00:57:40,370
for the Azure Active Directory.

1141
00:57:40,370 --> 00:57:44,960
So the first event site is
the, Add OAuth2PermissionGrant,

1142
00:57:44,960 --> 00:57:48,334
which is generated in the
usage of OAuth2PermissionGrant.

1143
00:57:48,334 --> 00:57:51,799
OAuth2PermissionGrant, is a
resource type that represents

1144
00:57:51,800 --> 00:57:55,450
the permission granted
to an OAuth application.

1145
00:57:55,450 --> 00:57:57,830
Second is, add delegated
permission grants,

1146
00:57:57,830 --> 00:58:00,060
delegated permissions
are those permissions

1147
00:58:00,060 --> 00:58:03,390
which are delegated to an
application from the authorization

1148
00:58:03,390 --> 00:58:06,663
of a signed in user,
or the resource owner.

1149
00:58:07,757 --> 00:58:10,920
Third, is consent to
application, this event type

1150
00:58:10,920 --> 00:58:14,850
is generated whenever a user
consent or grants permission

1151
00:58:14,850 --> 00:58:16,190
to an application.

1152
00:58:16,190 --> 00:58:19,858
And the last event types are
related to service principals,

1153
00:58:19,858 --> 00:58:22,520
service principals are
same as a service account

1154
00:58:22,520 --> 00:58:24,320
but they're called principals in HR.

1155
00:58:26,270 --> 00:58:28,560
So add service principal,
every type is logged,

1156
00:58:28,560 --> 00:58:30,860
whenever a new service
principal is created,

1157
00:58:30,860 --> 00:58:34,710
and add app role assignment
is logged when a new service

1158
00:58:34,710 --> 00:58:36,810
principal is assigned an application role.

1159
00:58:43,680 --> 00:58:46,593
So this is a detection query
retaining KQL to detect

1160
00:58:46,593 --> 00:58:50,565
when the high risk permission
is granted to an application.

1161
00:58:50,565 --> 00:58:53,536
KQL stand for, Kusto Query Language.

1162
00:58:53,536 --> 00:58:56,860
Kusto Query language is a
simple yet powerful language

1163
00:58:56,860 --> 00:59:00,690
to query structured, semi-structured
and unstructured data.

1164
00:59:00,690 --> 00:59:03,317
The language is very expressive
and it is very easy to read

1165
00:59:03,317 --> 00:59:05,403
and understand the query intent.

1166
00:59:06,550 --> 00:59:09,060
So what do we do in this detection query?

1167
00:59:09,060 --> 00:59:11,660
We define a list of high risk permissions

1168
00:59:11,660 --> 00:59:14,839
which are not usually
requested for or granted.

1169
00:59:14,840 --> 00:59:16,940
And that list has been given a name

1170
00:59:16,940 --> 00:59:20,910
as High Risk Permissions,
which contains some sensitive

1171
00:59:20,910 --> 00:59:24,520
permissions like, user reads
rights all and similar.

1172
00:59:24,520 --> 00:59:27,790
The next statement in the
query, it defines the table name

1173
00:59:27,790 --> 00:59:30,573
in which we are interested
in searching the events for.

1174
00:59:31,790 --> 00:59:34,300
So, as I mentioned before
it should be the audit logs

1175
00:59:34,300 --> 00:59:36,510
of the OAuth service
which you have implemented

1176
00:59:36,510 --> 00:59:37,940
in your organization.

1177
00:59:37,940 --> 00:59:40,438
Here, it is audit logs that stands for,

1178
00:59:40,438 --> 00:59:42,163
Azure Active Directory audit logs.

1179
00:59:45,228 --> 00:59:49,670
So we then check for the event
type consent to applications.

1180
00:59:49,670 --> 00:59:52,790
So this event type is
generated whenever a user

1181
00:59:52,790 --> 00:59:55,733
grants permission to an application.

1182
00:59:57,183 --> 01:00:00,100
And the next few steps in the
detection grade, they extract

1183
01:00:00,100 --> 01:00:02,910
some important fields
like, application name,

1184
01:00:02,910 --> 01:00:07,009
application ID, user name,
and the IP address who granted

1185
01:00:07,010 --> 01:00:08,740
permission to the application.

1186
01:00:08,740 --> 01:00:12,133
And all of these fields are
very important for the security

1187
01:00:12,133 --> 01:00:14,290
analyst or the incident responders

1188
01:00:14,290 --> 01:00:16,720
when they are investigating the ATT&CK.

1189
01:00:16,720 --> 01:00:18,959
But the main condition
here, we just checked

1190
01:00:18,960 --> 01:00:21,610
in this detection query
is to look for the value

1191
01:00:21,610 --> 01:00:23,210
in the scope field.

1192
01:00:23,210 --> 01:00:26,217
So the scope field contains
the permission name,

1193
01:00:26,217 --> 01:00:29,050
and if that permission name matches

1194
01:00:29,050 --> 01:00:31,910
with what we have defined in our list

1195
01:00:31,910 --> 01:00:35,460
for the high risk permission,
this detection query will show

1196
01:00:35,460 --> 01:00:36,793
the results for that.

1197
01:00:49,220 --> 01:00:51,330
So the image shows here
one sample query results

1198
01:00:51,330 --> 01:00:55,069
that were pulled by running
the KQL Detection Query,

1199
01:00:55,070 --> 01:00:57,210
which I just discussed in the last slide.

1200
01:00:57,210 --> 01:00:59,640
So as we can see from the
image, the application

1201
01:00:59,640 --> 01:01:02,350
has been given some high
risk permissions like,

1202
01:01:02,350 --> 01:01:05,487
user read right, Privileged
access results, and Similar,

1203
01:01:05,487 --> 01:01:10,143
which runs an application
to do sensitive operations.

1204
01:01:16,990 --> 01:01:20,140
So we learn today how to leverage
MITRE ATT&CK for building

1205
01:01:20,140 --> 01:01:21,460
detections in cloud.

1206
01:01:21,460 --> 01:01:24,910
What are the high level steps
for developing a detection?

1207
01:01:24,910 --> 01:01:26,890
We also learned about the
cloud-based techniques

1208
01:01:26,890 --> 01:01:29,740
steal application access
token, and how to write

1209
01:01:29,740 --> 01:01:30,910
the detection query.

1210
01:01:30,910 --> 01:01:34,683
And that brings me to the
end of this presentation.

1211
01:01:36,300 --> 01:01:38,690
Thank you so much, thank
you to all the participants

1212
01:01:38,690 --> 01:01:42,700
and to the MITRE ATT&CK team,
which did a wonderful job.

1213
01:01:42,700 --> 01:01:44,553
- Thank you, and that was
an excellent presentation

1214
01:01:44,554 --> 01:01:47,240
as well as we knew we had to
deal with the time difference,

1215
01:01:47,240 --> 01:01:48,870
so definitely appreciate
you staying up so late

1216
01:01:48,870 --> 01:01:51,325
and sharing all this great knowledge.

1217
01:01:51,325 --> 01:01:53,350
(indistinct chatter)

1218
01:01:53,350 --> 01:01:55,819
- So, Nitya, I think one of
the really powerful things

1219
01:01:55,820 --> 01:01:59,340
you said is that, attackers
have to succeed on every stage,

1220
01:01:59,340 --> 01:02:01,050
but as defenders like you
said, we just couldn't find

1221
01:02:01,050 --> 01:02:04,380
one stage and find one
clue and run that down.

1222
01:02:04,380 --> 01:02:06,840
But as you said, that takes a
lot of homework as a defender,

1223
01:02:06,840 --> 01:02:11,210
you can't just swing for the
fences and hope for the best.

1224
01:02:11,210 --> 01:02:14,760
So what advice would you give
to people for, like I said,

1225
01:02:14,760 --> 01:02:19,670
I think your KQL Query example
was perfect but that involves

1226
01:02:19,670 --> 01:02:21,390
so much knowledge, like
you have to know what data

1227
01:02:21,390 --> 01:02:22,259
is available.

1228
01:02:22,260 --> 01:02:24,700
What kind of advice
would you give to people

1229
01:02:24,700 --> 01:02:27,149
who are like, just starting
with cloud and like figuring out

1230
01:02:27,150 --> 01:02:29,673
what are those data sources
and how do you access them?

1231
01:02:32,270 --> 01:02:36,700
- Sure, So I like listed down
that ATT&CK helps us there,

1232
01:02:36,700 --> 01:02:40,140
like it will show on that
ATT&CK technique page itself,

1233
01:02:40,140 --> 01:02:42,490
it will show you what are the data sources

1234
01:02:42,490 --> 01:02:45,049
that you can leverage for monitoring

1235
01:02:45,050 --> 01:02:46,490
that particular technique.

1236
01:02:46,490 --> 01:02:49,006
So you just have to check
that whether those logs

1237
01:02:49,007 --> 01:02:52,120
are available in your
environment, and if that technique

1238
01:02:52,120 --> 01:02:55,020
is applicable to be explored
in your environment?

1239
01:02:55,020 --> 01:02:58,270
So for example, for this
talk, I talk about the Steal

1240
01:02:58,270 --> 01:03:01,310
Application Access Token,
so it says that you need

1241
01:03:01,310 --> 01:03:03,799
to have audit logs.

1242
01:03:03,800 --> 01:03:06,010
So whichever service you have implemented

1243
01:03:06,010 --> 01:03:08,520
in your environment like, Okta, Google,

1244
01:03:08,520 --> 01:03:09,670
Azure Active Directory.

1245
01:03:09,670 --> 01:03:12,940
So you may want to check that
you have audit logs available

1246
01:03:12,940 --> 01:03:14,240
for them and how you can leverage.

1247
01:03:14,240 --> 01:03:17,229
So, I think starting with
the ATT&CK itself can help

1248
01:03:17,230 --> 01:03:18,511
you there.

1249
01:03:18,511 --> 01:03:20,120
- That makes sense, and
that probably helps as well

1250
01:03:20,120 --> 01:03:22,160
prioritize, like you said,
I think your selection

1251
01:03:22,160 --> 01:03:24,460
of a technique was spot on,
because that's when we actually

1252
01:03:24,460 --> 01:03:27,180
see very often with like
the tokens are so vital

1253
01:03:27,180 --> 01:03:28,580
in these cloud environments.

1254
01:03:29,751 --> 01:03:31,900
But the final question I had is, I think

1255
01:03:31,900 --> 01:03:35,190
you kind of displayed the power
of like KQL, do you have any

1256
01:03:35,190 --> 01:03:37,110
advice or resources for
people that are interested

1257
01:03:37,110 --> 01:03:37,943
in like learning more?

1258
01:03:37,943 --> 01:03:39,230
Like how did you learn KQL?

1259
01:03:39,230 --> 01:03:41,060
Was it something that you
just kind of get on and start

1260
01:03:41,060 --> 01:03:42,810
playing with, or are
there any great resources

1261
01:03:42,810 --> 01:03:45,660
that you can point to, or
kind of share with others?

1262
01:03:45,660 --> 01:03:46,493
- Yeah, sure.

1263
01:03:46,493 --> 01:03:50,570
So Microsoft has done a very
good documentation on KQL,

1264
01:03:50,570 --> 01:03:55,570
so like it has given all
the proper known syntax

1265
01:03:55,700 --> 01:03:58,720
available for all the fields and whatever,

1266
01:03:58,720 --> 01:04:01,910
like it has capabilities, so you can start

1267
01:04:01,910 --> 01:04:02,770
from there it says.

1268
01:04:02,770 --> 01:04:04,780
And then there's a very
good source available

1269
01:04:04,780 --> 01:04:06,250
on Pluralsight for it.

1270
01:04:06,250 --> 01:04:09,470
So, maybe that's something
that you can check out,

1271
01:04:09,470 --> 01:04:12,629
but yeah, a good starting
point will be to start

1272
01:04:12,630 --> 01:04:14,610
from the Microsoft documentation itself.

1273
01:04:14,610 --> 01:04:15,760
They've done a good job there.

1274
01:04:15,760 --> 01:04:17,850
- I think a couple of
people are already dropping

1275
01:04:17,850 --> 01:04:18,683
those in Slack.

1276
01:04:18,683 --> 01:04:20,250
So thank you for sharing
that great insight,

1277
01:04:20,250 --> 01:04:21,408
and great knowledge.

1278
01:04:21,408 --> 01:04:23,009
And with that, I'm gonna
turn it back over to Adam,

1279
01:04:23,010 --> 01:04:24,510
to introduce our next speaker.

1280
01:04:25,680 --> 01:04:28,370
- Thank you, so we're
coming up on our second last

1281
01:04:28,370 --> 01:04:30,000
speaker today.

1282
01:04:30,000 --> 01:04:32,833
We have Matt Snyder
joining us from VMware.

1283
01:04:35,830 --> 01:04:39,230
- Right, hey everybody, I'm
really excited to be here.

1284
01:04:39,230 --> 01:04:42,610
We'll get started just a second,
I just requested control.

1285
01:04:42,610 --> 01:04:47,020
All right, and we're off.

1286
01:04:47,020 --> 01:04:49,670
So, I really appreciate
everybody making time out

1287
01:04:49,670 --> 01:04:52,410
of their busy days and
schedules to hang out

1288
01:04:52,410 --> 01:04:55,990
with us, and listen to
me kind of rant and rave

1289
01:04:55,990 --> 01:04:59,113
about a topic that's very
near and dear to my heart.

1290
01:05:00,230 --> 01:05:02,440
So a little bit about me.

1291
01:05:02,440 --> 01:05:05,860
I've been in this industry
for about 15 years.

1292
01:05:05,860 --> 01:05:07,970
One of the kind of
highlights out of my career,

1293
01:05:07,970 --> 01:05:11,490
when I was very junior,
I was back in 2013.

1294
01:05:11,490 --> 01:05:14,580
I was on the Incident Response
team at Neiman Marcus,

1295
01:05:14,580 --> 01:05:17,403
during one of the first
major credit card breaches.

1296
01:05:18,486 --> 01:05:21,770
And with that experience, I
feel like I've been in a great

1297
01:05:21,770 --> 01:05:26,090
position to see how our
industry has changed since

1298
01:05:26,090 --> 01:05:29,270
those major events have
really brought security

1299
01:05:29,270 --> 01:05:33,280
to the forefront of just about
every organization out there.

1300
01:05:33,280 --> 01:05:37,230
And then also being able to
relate, and explain that,

1301
01:05:37,230 --> 01:05:42,230
having that post-breach budget
surplus, doesn't solve all

1302
01:05:43,500 --> 01:05:44,400
of your problems.

1303
01:05:44,400 --> 01:05:46,400
Being able to pick out all
the tools that you want to,

1304
01:05:46,400 --> 01:05:48,600
there's still more work
that has to be done.

1305
01:05:50,890 --> 01:05:54,850
And with that, just setting
the agenda really quickly,

1306
01:05:54,850 --> 01:05:58,450
in this talk, I'm gonna
talk about how we at VMware

1307
01:05:58,450 --> 01:06:00,759
are integrating MITRE ATT&CK framework

1308
01:06:00,760 --> 01:06:05,400
into our security operations,
from a holistic standpoint,

1309
01:06:05,400 --> 01:06:06,930
we're not just talking about hunting

1310
01:06:06,930 --> 01:06:08,480
or finding specific things.

1311
01:06:08,480 --> 01:06:10,650
We're really ingraining
this into everything

1312
01:06:10,650 --> 01:06:11,773
that we do here.

1313
01:06:12,610 --> 01:06:16,350
On that point, this does not
cover any VMware specific

1314
01:06:16,350 --> 01:06:20,819
products or services, I'm not
discussing any future plans

1315
01:06:20,820 --> 01:06:22,910
about those products or services.

1316
01:06:22,910 --> 01:06:25,490
What they can and can't
do with MITRE ATT&CK,

1317
01:06:25,490 --> 01:06:28,009
this is a vendor neutral presentation.

1318
01:06:28,010 --> 01:06:31,700
So anything that you can
take away from this talk

1319
01:06:31,700 --> 01:06:34,633
should be able to used
anywhere and everywhere.

1320
01:06:37,972 --> 01:06:40,910
And with that, I wanna set
kind of the problem statement

1321
01:06:40,910 --> 01:06:44,640
I've kind of alluded to
earlier in my introduction is,

1322
01:06:44,640 --> 01:06:47,250
why are we even bothering
with MITRE ATT&CK?

1323
01:06:47,250 --> 01:06:51,244
There's a ton of stuff to be
done in our day-to-day lives,

1324
01:06:51,244 --> 01:06:54,930
why take on another
challenge, another project

1325
01:06:56,452 --> 01:07:00,163
to add on to existing,
really heavy workloads?

1326
01:07:01,290 --> 01:07:06,290
And, what I've seen in my
time is that, there's a flaw

1327
01:07:08,240 --> 01:07:10,270
that we've kind of latched on to.

1328
01:07:10,270 --> 01:07:13,870
There's this cycle that we go
through and we haven't really

1329
01:07:13,870 --> 01:07:15,830
broken out of it in the last seven years.

1330
01:07:15,830 --> 01:07:19,180
And that goes a little like
this, there's some sort of hole

1331
01:07:19,180 --> 01:07:21,759
or gap, it gets exploited,
there's some sort

1332
01:07:21,760 --> 01:07:25,830
of security incident, then
we patch that with tools

1333
01:07:25,830 --> 01:07:29,180
or actual patches, and
then we wait for that cycle

1334
01:07:29,180 --> 01:07:30,660
to repeat again.

1335
01:07:30,660 --> 01:07:33,230
And we see that it happens
over and over and over again,

1336
01:07:33,230 --> 01:07:35,737
and even over the last
seven years as our tools

1337
01:07:35,737 --> 01:07:39,670
and the technologies and our
people have gotten better,

1338
01:07:39,670 --> 01:07:42,190
we still see these types of attacks.

1339
01:07:42,190 --> 01:07:46,430
And I think this ties in
perfectly with an example

1340
01:07:46,430 --> 01:07:51,430
about survivorship bias, and
an example from world war two,

1341
01:07:51,540 --> 01:07:54,680
when they were looking at
planes returning from combat

1342
01:07:54,680 --> 01:07:56,359
missions, and they were trying to figure

1343
01:07:56,360 --> 01:08:00,200
out what they can do to
harden their structure

1344
01:08:00,200 --> 01:08:03,439
so they lost fewer planes.

1345
01:08:03,440 --> 01:08:07,380
And one of the engineers or
scientists on that project

1346
01:08:07,380 --> 01:08:11,370
Abraham Wald, noted that the
planes that they were looking

1347
01:08:11,370 --> 01:08:14,960
at in the analysis that they
were doing were on planes

1348
01:08:14,960 --> 01:08:16,080
that had returned.

1349
01:08:16,080 --> 01:08:19,470
So as you can see here in this
picture, the little red dots,

1350
01:08:19,470 --> 01:08:22,480
that's all indications of damage of planes

1351
01:08:22,479 --> 01:08:24,219
that had survived.

1352
01:08:24,220 --> 01:08:28,390
The areas where there
wasn't any recorded damage

1353
01:08:28,390 --> 01:08:30,740
meant that it was less
likely that those planes

1354
01:08:30,740 --> 01:08:33,609
were going to return
back from their missions.

1355
01:08:33,609 --> 01:08:36,859
And those were the areas
that needed more armor

1356
01:08:36,859 --> 01:08:40,380
in reinforcing and not
these areas where we've seen

1357
01:08:40,380 --> 01:08:41,660
the plane survive.

1358
01:08:41,660 --> 01:08:44,590
And I think that ties in
really well with the challenges

1359
01:08:44,590 --> 01:08:46,110
that we're facing today.

1360
01:08:46,109 --> 01:08:49,009
And how do we harden our infrastructure,

1361
01:08:49,010 --> 01:08:52,580
but what we've kind of relied
on doing is, patching up

1362
01:08:52,580 --> 01:08:57,580
the areas that we already knew
about and still in a sense

1363
01:08:58,090 --> 01:09:01,330
flying blind to these areas
that we don't know about.

1364
01:09:01,330 --> 01:09:04,830
And what I'm gonna talk
about is how we can use MITRE

1365
01:09:04,830 --> 01:09:07,240
to be our guide, to help us to understand

1366
01:09:07,240 --> 01:09:10,000
where those critical areas
are in our environment,

1367
01:09:10,000 --> 01:09:12,542
and what we need to do
to harden those areas?

1368
01:09:15,029 --> 01:09:19,290
And with that getting into
it is, first off is logging,

1369
01:09:19,290 --> 01:09:22,859
you have to have the logs to
be able to detect the activity

1370
01:09:22,859 --> 01:09:24,750
without it you're blind to it.

1371
01:09:24,750 --> 01:09:28,580
And one of the most
common questions I get is,

1372
01:09:28,580 --> 01:09:29,649
what do you need?

1373
01:09:29,649 --> 01:09:32,779
And, that has led to a
lot of heated debates

1374
01:09:32,779 --> 01:09:37,160
because everybody's got an
opinion on what the right thing

1375
01:09:37,160 --> 01:09:39,032
to log is, what the right level is.

1376
01:09:40,689 --> 01:09:44,339
And so, solution one is,
we'll just log everything,

1377
01:09:44,340 --> 01:09:47,490
we'll collect everything,
problem solved, nobody's feelings

1378
01:09:47,490 --> 01:09:49,782
get hurt, and we have everything we want.

1379
01:09:52,290 --> 01:09:55,530
The problem with that solution
is, collecting everything

1380
01:09:55,530 --> 01:09:57,559
costs money, and it costs a lot of money

1381
01:09:57,560 --> 01:09:58,970
if you're gonna collect everything.

1382
01:09:58,970 --> 01:10:01,970
Collecting just enough
is still very expensive,

1383
01:10:01,970 --> 01:10:04,980
so we need to be intelligent
about this, because

1384
01:10:04,980 --> 01:10:06,950
there's costs that we need to consider.

1385
01:10:06,950 --> 01:10:11,160
We need to consider other
things like performance impacts

1386
01:10:11,160 --> 01:10:12,410
onto the end points.

1387
01:10:12,410 --> 01:10:14,690
Generating all this data
especially if we're talking

1388
01:10:14,690 --> 01:10:18,860
about an application server,
there might not be enough

1389
01:10:19,970 --> 01:10:23,850
storage on that device or it
might be running at max CPU

1390
01:10:23,850 --> 01:10:26,800
utilization and we can't
add additional load to that.

1391
01:10:26,800 --> 01:10:28,650
So we need to be cautious of that.

1392
01:10:28,650 --> 01:10:31,150
The other thing we need
to be concerned about,

1393
01:10:31,150 --> 01:10:33,330
or think about is, we
need to move that data

1394
01:10:33,330 --> 01:10:35,347
to a central location most of the times.

1395
01:10:35,347 --> 01:10:40,347
And most companies, it's not
uncommon to have facilities

1396
01:10:41,820 --> 01:10:42,710
throughout the world.

1397
01:10:42,710 --> 01:10:45,270
So we've got to move that
data all around the world,

1398
01:10:45,270 --> 01:10:47,470
and that can be very expensive as well.

1399
01:10:47,470 --> 01:10:50,600
And the last thing is, once you've collect

1400
01:10:50,600 --> 01:10:53,700
this and you've aggregated it
together, these logging tools,

1401
01:10:53,700 --> 01:10:56,040
these SIM products, they're not cheap.

1402
01:10:56,040 --> 01:10:58,220
And then you need to
store all of that data,

1403
01:10:58,220 --> 01:11:00,700
and if you're talking
about terabytes of data,

1404
01:11:00,700 --> 01:11:03,490
that can get really expensive
really quickly because

1405
01:11:03,490 --> 01:11:06,620
you also have retention
periods that you have to meet

1406
01:11:06,620 --> 01:11:08,390
for various compliance reasons.

1407
01:11:08,390 --> 01:11:11,670
So you storing that
data is not negotiable.

1408
01:11:11,670 --> 01:11:15,660
So we need to find a way to be
able to make everybody happy

1409
01:11:15,660 --> 01:11:17,360
and get what we need.

1410
01:11:17,360 --> 01:11:20,089
With that, we need to be intelligent

1411
01:11:20,090 --> 01:11:21,220
about what we're logging.

1412
01:11:21,220 --> 01:11:24,130
We don't want to just log
everything, and we have a lot

1413
01:11:24,130 --> 01:11:26,530
of digital waste lying around.

1414
01:11:26,530 --> 01:11:30,410
We can't be so specific
and narrow in our focus

1415
01:11:30,410 --> 01:11:35,050
that we're leading a bunch of
logged events back on a server

1416
01:11:35,050 --> 01:11:38,930
that is going to ride over
that data really quickly

1417
01:11:38,930 --> 01:11:40,770
and it's gone forever.

1418
01:11:40,770 --> 01:11:45,260
So with MITRE ATT&CK, we can
take a lot of those opinions

1419
01:11:45,260 --> 01:11:48,727
out of the conversation about
what needs to be logged.

1420
01:11:48,727 --> 01:11:53,727
And we can look at real
world ATT&CKs, and we can see

1421
01:11:53,860 --> 01:11:56,780
what it takes to detect
them, and we can focus

1422
01:11:56,780 --> 01:11:58,530
on those things first.

1423
01:11:58,530 --> 01:12:03,360
We can see the different
platforms that those ATT&CKs

1424
01:12:03,360 --> 01:12:04,620
are available on.

1425
01:12:04,620 --> 01:12:07,750
So for example, if you
only have Linux servers

1426
01:12:07,750 --> 01:12:10,570
in an environment, you don't
need to worry about all

1427
01:12:10,570 --> 01:12:15,259
of the Microsoft techniques
that are just applied

1428
01:12:15,260 --> 01:12:16,310
to Windows.

1429
01:12:16,310 --> 01:12:21,310
So you can start to narrow
down and get to the heart

1430
01:12:21,570 --> 01:12:24,590
of what's really important to you.

1431
01:12:24,590 --> 01:12:26,910
And as I mentioned earlier,
one of the really common

1432
01:12:26,910 --> 01:12:30,950
questions that I hear, not
only what logs do you need,

1433
01:12:30,950 --> 01:12:32,800
it's what you care about?

1434
01:12:32,800 --> 01:12:36,047
And that can be a very tricky
question is, how do you answer

1435
01:12:36,047 --> 01:12:39,919
what does security care
about in a way that is short

1436
01:12:39,920 --> 01:12:42,590
and concise that can hold
that person's attention

1437
01:12:42,590 --> 01:12:45,370
and not respond back to them and say,

1438
01:12:45,370 --> 01:12:48,030
hey, clear off your schedule
for the next three months,

1439
01:12:48,030 --> 01:12:51,250
and I'll give you a
crash course in security,

1440
01:12:51,250 --> 01:12:53,020
and we can tell you about all the things

1441
01:12:53,020 --> 01:12:54,610
cause that's not gonna work either.

1442
01:12:54,610 --> 01:12:57,839
So we need to be very specific.

1443
01:12:57,840 --> 01:13:01,980
And we found that being able
to relate back to MITRE ATT&CK

1444
01:13:01,980 --> 01:13:05,259
is a great way of taking something
that's, it's independent,

1445
01:13:05,260 --> 01:13:08,080
it's not, what are the
things that Matt Snyder cares

1446
01:13:08,080 --> 01:13:11,000
about, or what are the things
that Joe Smith cares about?

1447
01:13:11,000 --> 01:13:14,363
And it's, hey, this is a vendor neutral,

1448
01:13:15,650 --> 01:13:18,940
it's a collaboration
across various industries,

1449
01:13:18,940 --> 01:13:22,580
and these are the things that
we found to be most important.

1450
01:13:22,580 --> 01:13:26,769
So it takes a little bit of
that, maybe that tension,

1451
01:13:26,770 --> 01:13:31,770
or maybe if you've got
these political battles

1452
01:13:32,090 --> 01:13:35,310
between departments
going on, it really helps

1453
01:13:35,310 --> 01:13:39,100
to step outside and look at
something from a third party

1454
01:13:39,100 --> 01:13:41,470
to say hey, this is
what we've got going on,

1455
01:13:41,470 --> 01:13:43,130
and these are the things we care about,

1456
01:13:43,130 --> 01:13:45,920
and it helps facilitate
those conversations.

1457
01:13:45,920 --> 01:13:50,920
And I found doing that has
helped ease some of the tensions

1458
01:13:52,370 --> 01:13:54,960
that I've seen before,
and it makes the process

1459
01:13:54,960 --> 01:13:56,760
go a lot smoother.

1460
01:13:56,760 --> 01:14:00,930
And it's also a really great
tool to be able to provide

1461
01:14:00,930 --> 01:14:03,360
to those business units
or those system admins

1462
01:14:03,360 --> 01:14:05,929
to say, hey, these are the
things that we do care about.

1463
01:14:05,930 --> 01:14:09,330
Know you can specify
the specific APT groups

1464
01:14:09,330 --> 01:14:12,470
that are relevant to your
industry or to your company

1465
01:14:12,470 --> 01:14:16,730
where you feel align
with the type of ATT&CKs

1466
01:14:16,730 --> 01:14:19,110
that you're most likely to sustain.

1467
01:14:19,110 --> 01:14:22,280
You can guide these
groups to MITRE ATT&CK,

1468
01:14:22,280 --> 01:14:25,139
could say, hey, this
is what we care about,

1469
01:14:25,140 --> 01:14:28,070
look at these different
TTPs, and inside of there,

1470
01:14:28,070 --> 01:14:31,809
there's all kinds of great
links to white papers,

1471
01:14:31,810 --> 01:14:35,400
articles about actual
attacks that have happened

1472
01:14:35,400 --> 01:14:37,339
and what people have learned from them.

1473
01:14:37,340 --> 01:14:41,450
And that's a really good
resource to focus their attention

1474
01:14:41,450 --> 01:14:44,440
on these areas that you
and your security team care

1475
01:14:44,440 --> 01:14:47,030
about, as opposed to
just setting them free

1476
01:14:47,030 --> 01:14:49,120
on the internet, where
they're gonna come across

1477
01:14:49,120 --> 01:14:54,120
all kinds of wild, no
proof of concept ATT&CKs,

1478
01:14:54,490 --> 01:14:58,599
and various things that
may not be relevant

1479
01:14:58,600 --> 01:15:00,473
to you and your industry.

1480
01:15:02,149 --> 01:15:05,150
And so now that you've got
that, this is a quick example

1481
01:15:05,150 --> 01:15:07,759
of how we've integrated that
into our logging standards.

1482
01:15:07,760 --> 01:15:09,900
We can give this to the
business units and we can say,

1483
01:15:09,900 --> 01:15:12,629
this is what we care about,
this is what's most important

1484
01:15:12,630 --> 01:15:15,390
to us, and they'll also
be able to understand

1485
01:15:15,390 --> 01:15:16,770
why it's important to us.

1486
01:15:16,770 --> 01:15:19,960
And that really takes away
the why is security asking

1487
01:15:19,960 --> 01:15:20,810
us for this?

1488
01:15:20,810 --> 01:15:24,410
This is exactly why we're
asking, because threat actors

1489
01:15:24,410 --> 01:15:27,563
are actively engaging in
this type of activity.

1490
01:15:30,690 --> 01:15:33,330
And as we move along, now that
we know what we want to log

1491
01:15:33,330 --> 01:15:36,930
we can get into our security
monitoring and building alerts

1492
01:15:36,930 --> 01:15:37,763
with meaning.

1493
01:15:37,763 --> 01:15:41,220
And this is a pretty good
example of what I've found

1494
01:15:41,220 --> 01:15:42,950
most security monitoring looks like.

1495
01:15:42,950 --> 01:15:47,700
You kind of hit a few key
areas, you're not doing a really

1496
01:15:47,700 --> 01:15:52,230
good enough job, but hey, it
passes you've got security.

1497
01:15:52,230 --> 01:15:55,093
And we need to change that as an industry.

1498
01:15:55,093 --> 01:15:59,210
And as we tie back into
building a balanced portfolio

1499
01:15:59,210 --> 01:16:04,003
and looking at the example I
gave earlier with the airplane,

1500
01:16:04,982 --> 01:16:08,230
on the left, in the blue
heat map you can see

1501
01:16:08,230 --> 01:16:10,000
kind of what we're building alerts around.

1502
01:16:10,000 --> 01:16:12,670
And then when we look at the
airplane you can see the damage

1503
01:16:12,670 --> 01:16:13,520
it's sustaining.

1504
01:16:13,520 --> 01:16:17,810
And this is a really good
illustration of using survivor

1505
01:16:17,810 --> 01:16:20,290
bias to kind of solve a problem and look

1506
01:16:21,213 --> 01:16:23,400
at what we're seeing in
an edge as an industry

1507
01:16:23,400 --> 01:16:25,272
in a different way.

1508
01:16:25,273 --> 01:16:27,320
And these are really kind of close,

1509
01:16:27,320 --> 01:16:29,910
that I find it kind of
striking when you compare

1510
01:16:29,910 --> 01:16:32,960
and contrast these two
pictures, is you wanna make sure

1511
01:16:32,960 --> 01:16:37,080
that you're focusing on
building a broad even security

1512
01:16:37,080 --> 01:16:40,690
portfolio and not just
stacking up your armor,

1513
01:16:40,690 --> 01:16:43,053
so to speak in certain areas.

1514
01:16:48,810 --> 01:16:51,980
So now that we're aligning
our alerts, and our detections

1515
01:16:51,980 --> 01:16:54,373
with MITRE ATT&CK, let me jump back.

1516
01:17:00,060 --> 01:17:02,880
The delay got me, our alerts
start to have a little bit

1517
01:17:02,880 --> 01:17:04,920
more meaning, there's
more context behind them,

1518
01:17:04,920 --> 01:17:07,097
because now we're mapping
through these TTPs

1519
01:17:07,097 --> 01:17:10,889
and our analysts can see,
okay, I've got an alert

1520
01:17:10,890 --> 01:17:14,580
that is now, you know, we're implementing

1521
01:17:14,580 --> 01:17:15,590
risk-based alerting.

1522
01:17:15,590 --> 01:17:18,910
And so you can tie the
activity that might be very low

1523
01:17:18,910 --> 01:17:21,710
fidelity alerts into these chain events.

1524
01:17:21,710 --> 01:17:23,780
And now when an analyst
review something, they can see

1525
01:17:23,780 --> 01:17:26,630
that you've got something
that maybe it's hitting across

1526
01:17:26,630 --> 01:17:27,650
initial access.

1527
01:17:27,650 --> 01:17:29,389
And then you see something in execution,

1528
01:17:29,390 --> 01:17:32,100
and then maybe something
across lateral movement.

1529
01:17:32,100 --> 01:17:35,740
And all of those individually
might be too low to actually

1530
01:17:35,740 --> 01:17:38,429
trigger an alert, but
together our analysts can see

1531
01:17:38,430 --> 01:17:40,580
that hey, we've got something here.

1532
01:17:40,580 --> 01:17:43,510
We've got this chain together
of events and it looks like

1533
01:17:43,510 --> 01:17:44,390
an actual attack.

1534
01:17:44,390 --> 01:17:47,210
So it helps us to reduce
false positives, build better

1535
01:17:47,210 --> 01:17:51,740
fidelity alerts and really get to the data

1536
01:17:51,740 --> 01:17:52,860
that we're caring about.

1537
01:17:52,860 --> 01:17:55,920
And then also we're using MITRE
ATT&CK to track our maturity

1538
01:17:55,920 --> 01:17:56,753
and growth.

1539
01:17:56,753 --> 01:17:58,809
We need to be able to see
where we're starting out with,

1540
01:17:58,810 --> 01:18:02,120
so you can look at your
portfolio and say, okay,

1541
01:18:02,120 --> 01:18:05,570
I can detect these things,
and as time goes on,

1542
01:18:05,570 --> 01:18:06,910
you can see how you're growing.

1543
01:18:06,910 --> 01:18:10,019
And this is a really great tool
to work with your leadership

1544
01:18:10,020 --> 01:18:13,050
teams to be able to say,
hey, given our current status

1545
01:18:13,050 --> 01:18:15,470
and our current workload,
we can build towards

1546
01:18:15,470 --> 01:18:17,210
these detections in this amount of time.

1547
01:18:17,210 --> 01:18:20,190
And then after that time's
passed, you go back and you look

1548
01:18:20,190 --> 01:18:22,629
and you can reevaluate and
say, hey, we got this far,

1549
01:18:22,630 --> 01:18:24,950
but we didn't get as far as
we need, we need more people,

1550
01:18:24,950 --> 01:18:28,690
or we need better tools in
order to really close that gap

1551
01:18:28,690 --> 01:18:29,900
where we need to be.

1552
01:18:29,900 --> 01:18:33,900
And the last thing I wanna talk
about is using MITRE ATT&CK

1553
01:18:33,900 --> 01:18:35,696
to evaluate security tools.

1554
01:18:35,697 --> 01:18:38,480
And this can be new tools,
this can be existing tools,

1555
01:18:38,480 --> 01:18:41,049
with attack it really
helps us if you think back

1556
01:18:41,050 --> 01:18:43,790
to that heat map, we can
overlay all of our tools

1557
01:18:43,790 --> 01:18:45,650
and we can see what matters most to us,

1558
01:18:45,650 --> 01:18:46,920
and what we can detect.

1559
01:18:46,920 --> 01:18:50,450
We overlay that again on
top of what the attackers

1560
01:18:50,450 --> 01:18:52,769
that we're most concerned
about what they can do.

1561
01:18:52,770 --> 01:18:56,520
And then we can identify those
areas that maybe we have gaps

1562
01:18:56,520 --> 01:18:57,353
in coverage.

1563
01:18:57,353 --> 01:19:00,530
And then we can use that to
review our tools, to make sure

1564
01:19:00,530 --> 01:19:03,330
that they're able to do the
things that we want to do.

1565
01:19:03,330 --> 01:19:06,080
Because a lot of the times we
see these tools kind of boxed

1566
01:19:06,080 --> 01:19:08,809
and sold as those as seen on TV products.

1567
01:19:08,810 --> 01:19:11,710
You see these overdramatic sales pitches,

1568
01:19:11,710 --> 01:19:14,670
and then you end up with the
solution that just really

1569
01:19:14,670 --> 01:19:16,240
doesn't work.

1570
01:19:16,240 --> 01:19:20,080
And I'm running up against
time, but the last thing

1571
01:19:20,080 --> 01:19:24,710
I would like to mention about
this is, just because a tool

1572
01:19:24,710 --> 01:19:27,880
or a vendor says that
they aligned with MITRE,

1573
01:19:27,880 --> 01:19:31,000
that doesn't mean that they
went through some accreditation

1574
01:19:31,000 --> 01:19:34,790
process and they've been
blessed by MITRE to detect all

1575
01:19:34,790 --> 01:19:35,710
of these things.

1576
01:19:35,710 --> 01:19:39,620
It's really up to you to
put them through the test

1577
01:19:39,620 --> 01:19:42,510
and make sure that they
can find those things

1578
01:19:42,510 --> 01:19:46,000
before you go ahead and
purchase and implement that.

1579
01:19:46,000 --> 01:19:49,840
With that, I know we're up
at time, so, happy to answer

1580
01:19:49,840 --> 01:19:51,920
any questions in the Slack channel.

1581
01:19:51,920 --> 01:19:53,380
Thank you everybody.

1582
01:19:53,380 --> 01:19:54,920
- Thanks Matt, that was amazing.

1583
01:19:54,920 --> 01:19:57,140
You'll see some big fans
in the Slack channel,

1584
01:19:57,140 --> 01:20:00,450
for your meme game, we
definitely appreciate the gifts.

1585
01:20:00,450 --> 01:20:01,480
One of the interesting thing...

1586
01:20:01,480 --> 01:20:03,269
Yeah, absolutely, one of
the interesting things

1587
01:20:03,270 --> 01:20:07,700
that you said was, you kind
of explored all hidden costs

1588
01:20:07,700 --> 01:20:09,510
of a detection, like your
it's not just a blue team

1589
01:20:09,510 --> 01:20:11,250
seeing something and
right detection for it.

1590
01:20:11,250 --> 01:20:13,510
There's costs with logging and licensing

1591
01:20:13,510 --> 01:20:15,010
and all these other elements.

1592
01:20:15,010 --> 01:20:18,450
And it really does take all
the involved stakeholders

1593
01:20:19,800 --> 01:20:20,913
to kind of buy in.

1594
01:20:21,770 --> 01:20:24,480
But one of the questions I had was like,

1595
01:20:24,480 --> 01:20:26,839
what advice would you
give in terms of keeping

1596
01:20:26,840 --> 01:20:28,900
all those stakeholders
involved with this entire

1597
01:20:28,900 --> 01:20:29,732
detection pipeline?

1598
01:20:29,733 --> 01:20:31,870
Because like you said, it's
not just writing analytics,

1599
01:20:31,870 --> 01:20:34,070
there's so much more cost
and so much more decisions

1600
01:20:34,070 --> 01:20:35,230
involved here.

1601
01:20:35,230 --> 01:20:38,959
- Right, and I think that's
where the ATT&CK matrix really

1602
01:20:38,960 --> 01:20:41,830
helps out, because we can
visualize what we can do

1603
01:20:41,830 --> 01:20:45,000
as a security department
with our stakeholders

1604
01:20:45,000 --> 01:20:47,980
and say, hey, with what we
have right now, we can detect

1605
01:20:47,980 --> 01:20:48,812
these things.

1606
01:20:48,813 --> 01:20:52,410
And you really take away
that, why didn't security

1607
01:20:52,410 --> 01:20:54,290
catch this after an incident?

1608
01:20:54,290 --> 01:20:56,640
I've heard that so many
times throughout my career

1609
01:20:56,640 --> 01:20:59,770
and I've got, I can count
the gray hairs on my head

1610
01:20:59,770 --> 01:21:02,580
every time that's happened,
because it just makes your head

1611
01:21:02,580 --> 01:21:03,710
wanna explode.

1612
01:21:03,710 --> 01:21:07,380
Using this, this is a way
to, before that even happens,

1613
01:21:07,380 --> 01:21:09,180
being able to go to your
leadership team and say,

1614
01:21:09,180 --> 01:21:11,400
hey, we can do this with
the tools that we have,

1615
01:21:11,400 --> 01:21:12,809
with the people we have,

1616
01:21:12,810 --> 01:21:14,860
and then this is where our attackers

1617
01:21:14,860 --> 01:21:15,839
are coming from.

1618
01:21:15,840 --> 01:21:18,410
And then we can overlay that
with what we're actually seeing

1619
01:21:18,410 --> 01:21:19,700
in our day to day alerts.

1620
01:21:19,700 --> 01:21:22,420
And we can let them know say,
this is where we're going,

1621
01:21:22,420 --> 01:21:23,990
we can't do anything about this.

1622
01:21:23,990 --> 01:21:26,340
If you wanna be able to
stop this kind of technique,

1623
01:21:26,340 --> 01:21:29,550
we need engagement from
our infrastructure team

1624
01:21:29,550 --> 01:21:33,160
to be able to come up with
policies and technologies

1625
01:21:33,160 --> 01:21:35,760
in place to stop this from
happening in the first place.

1626
01:21:35,760 --> 01:21:39,320
'Cause prevention is really
where the goal of everybody

1627
01:21:39,320 --> 01:21:42,040
in security is trying to
get at, how do we stop

1628
01:21:42,040 --> 01:21:43,019
this from even happening?

1629
01:21:43,020 --> 01:21:45,410
And that's where you work
with your infrastructure team,

1630
01:21:45,410 --> 01:21:48,360
your IT ops team, getting
everybody on that same page.

1631
01:21:48,360 --> 01:21:52,490
So they can see these things
as a team and understand that,

1632
01:21:52,490 --> 01:21:55,070
hey, where we're right
now, we can't detect this.

1633
01:21:55,070 --> 01:21:58,750
You took away this tool from
us, we're blind at these areas,

1634
01:21:58,750 --> 01:22:01,390
so, if you're not gonna
give that tool back, we need

1635
01:22:01,390 --> 01:22:05,780
you to go and you need to do
something on our policy side

1636
01:22:05,780 --> 01:22:09,240
to stop this activity from
being able to get a foothold

1637
01:22:10,340 --> 01:22:12,810
- Great insights, thank you so much.

1638
01:22:12,810 --> 01:22:14,640
Great presentation, like I
said, definitely hop over

1639
01:22:14,640 --> 01:22:16,900
to Slack and definitely
respond to some of the praise

1640
01:22:16,900 --> 01:22:18,812
and questions that are building up there.

1641
01:22:20,380 --> 01:22:21,824
- Thank you very much to Matt.

1642
01:22:21,824 --> 01:22:23,223
- (mumbles) I could do this.

1643
01:22:24,440 --> 01:22:27,660
- And so we're gonna ask
for our final speakers,

1644
01:22:27,660 --> 01:22:30,858
we're gonna have Jamie
switch roles and become

1645
01:22:30,858 --> 01:22:33,550
our speakers, where he now
be joined by Mike Hartley,

1646
01:22:33,550 --> 01:22:35,330
both from the MITRE ATT&CK team.

1647
01:22:35,330 --> 01:22:37,380
So, take it away guys.

1648
01:22:37,380 --> 01:22:38,610
- Thanks Adam.

1649
01:22:38,610 --> 01:22:40,950
And like I said, this
is Jamie Williams here,

1650
01:22:40,950 --> 01:22:43,150
I'm here with my friend Mike
Hartley, and we're giving

1651
01:22:43,150 --> 01:22:45,440
you an update from the ATT&CK
team on what's happening

1652
01:22:45,440 --> 01:22:46,437
with PRE-ATT&CK.

1653
01:22:47,800 --> 01:22:51,453
So it has been a truly
crazy 2020 and in many ways,

1654
01:22:52,327 --> 01:22:54,740
and even just for the ATT&CK
team, we started the year

1655
01:22:54,740 --> 01:22:55,700
doing some techniques.

1656
01:22:55,700 --> 01:22:58,380
We released data, we released
the final, and I believe

1657
01:22:58,380 --> 01:22:59,680
it was July.

1658
01:22:59,680 --> 01:23:02,260
We've been growing cloud,
and then recently we released

1659
01:23:02,260 --> 01:23:05,043
the network platform as
well as ICS and Sticks.

1660
01:23:06,020 --> 01:23:08,920
So if you been like anyone
in the ATT&CK consumer,

1661
01:23:08,920 --> 01:23:11,350
you might've noticed in the
most recent release that,

1662
01:23:11,350 --> 01:23:13,200
ATT&CK normally grows vertically.

1663
01:23:13,200 --> 01:23:15,970
We see new techniques, new sub techniques,

1664
01:23:15,970 --> 01:23:18,340
but in this release, ATT&CK for Enterprise

1665
01:23:18,340 --> 01:23:19,323
got a little wider.

1666
01:23:20,170 --> 01:23:23,350
And this is because we merged
the previous PRE-ATT&CK matrix

1667
01:23:23,350 --> 01:23:24,183
into Enterprise.

1668
01:23:24,183 --> 01:23:26,540
So Mike and I are gonna give
you a little more detail

1669
01:23:26,540 --> 01:23:28,910
on what happened there, as
well as some transparency

1670
01:23:28,910 --> 01:23:30,240
and insight into the decision making

1671
01:23:30,240 --> 01:23:31,639
that went into this process.

1672
01:23:33,680 --> 01:23:35,500
First off, this didn't happen overnight,

1673
01:23:35,500 --> 01:23:37,840
this wasn't something that
we just decided this year

1674
01:23:37,840 --> 01:23:40,810
and implemented you might've
seen this graphic previously.

1675
01:23:40,810 --> 01:23:43,510
This is actually, this was
included, this entire idea

1676
01:23:43,510 --> 01:23:46,520
for this merger was included
in our 2020 roadmap,

1677
01:23:46,520 --> 01:23:48,760
as well as if you followed
ATT&CK CON last year,

1678
01:23:48,760 --> 01:23:50,960
Adam actually presented an introduction

1679
01:23:50,960 --> 01:23:51,890
for what we're thinking here.

1680
01:23:51,890 --> 01:23:53,830
So, you know, big
picture, this is something

1681
01:23:53,830 --> 01:23:55,650
that's been kind of on
our minds for awhile,

1682
01:23:55,650 --> 01:23:59,009
and it just has been
implemented as a version eight,

1683
01:23:59,010 --> 01:24:01,117
this most recent release of ATT&CK.

1684
01:24:02,827 --> 01:24:05,720
So a little background about
PRE-ATT&CK, it was initially

1685
01:24:05,720 --> 01:24:09,610
released in 2017, as a separate
matrix from Enterprise.

1686
01:24:09,610 --> 01:24:12,150
So it had its own 17 tactics.

1687
01:24:12,150 --> 01:24:14,629
Long story short is, when
you think about a kill chain

1688
01:24:14,630 --> 01:24:17,540
Enterprise typically focuses
on what we call post compromise

1689
01:24:17,540 --> 01:24:18,680
or right of boom.

1690
01:24:18,680 --> 01:24:21,010
While PRE-ATT&CK was kind
of thinking, left of boom,

1691
01:24:21,010 --> 01:24:23,050
the behaviors that an
adversary would execute leading

1692
01:24:23,050 --> 01:24:23,970
up to compromise.

1693
01:24:23,970 --> 01:24:26,800
So thinking of things like,
deciding on targeting,

1694
01:24:26,800 --> 01:24:30,110
deciding on what the priorities are?

1695
01:24:30,110 --> 01:24:32,650
Gathering information about their victim,

1696
01:24:32,650 --> 01:24:34,849
staging and developing
resources, things like that.

1697
01:24:34,850 --> 01:24:37,400
And PRE-ATT&CK really opened
up some really interesting

1698
01:24:37,400 --> 01:24:40,009
use cases, most importantly,
how do you get ahead

1699
01:24:40,010 --> 01:24:40,843
of a breach?

1700
01:24:40,843 --> 01:24:44,070
As a defender, how can I see
artifacts of an adversary

1701
01:24:44,070 --> 01:24:45,049
getting ready to target me?

1702
01:24:45,050 --> 01:24:47,150
Whether it be, setting up domains,

1703
01:24:47,150 --> 01:24:49,349
tracking bottleneck activity.

1704
01:24:49,350 --> 01:24:50,990
These are really important
considerations especially

1705
01:24:50,990 --> 01:24:53,790
if we start thinking about open source

1706
01:24:53,790 --> 01:24:56,240
intelligent requirements,
like, where do we need

1707
01:24:56,240 --> 01:24:59,620
to look for in the public
space to actually start seeing

1708
01:24:59,620 --> 01:25:02,570
adversary activity before it's
actually in our environment?

1709
01:25:05,250 --> 01:25:06,770
And like I said before,
this wasn't something

1710
01:25:06,770 --> 01:25:09,620
that happened overnight,
dating all the way back

1711
01:25:09,620 --> 01:25:12,340
to version two of ATT&CK in
2018, we actually started

1712
01:25:12,340 --> 01:25:15,810
to pull bits and pieces of
PRE-ATT&CK over into Enterprise.

1713
01:25:15,810 --> 01:25:18,950
Particularly in this case,
the initial access tactic

1714
01:25:18,950 --> 01:25:21,780
was actually populated from two
tactics that were previously

1715
01:25:21,780 --> 01:25:23,730
in PRE, you know, launching compromise.

1716
01:25:23,730 --> 01:25:26,099
So like I said, this is something
that we've kind of always

1717
01:25:26,100 --> 01:25:29,420
wanted, I had the desire
to kind of bring these two,

1718
01:25:29,420 --> 01:25:33,620
pre and post compromise, major
C'S and thoughts together.

1719
01:25:33,620 --> 01:25:36,570
And finally in version eight,
we've actually achieved that.

1720
01:25:37,690 --> 01:25:39,820
So like I said, this most
recent release of ATT&CK

1721
01:25:39,820 --> 01:25:42,049
version eight, we've officially deprecated

1722
01:25:42,050 --> 01:25:44,390
the PRE-ATT&CK matrix,
it is still available

1723
01:25:44,390 --> 01:25:48,710
in VR versioning, but, going
version eight and forward,

1724
01:25:48,710 --> 01:25:50,870
PRE-ATT&CK is deprecated
and has been replaced

1725
01:25:50,870 --> 01:25:52,840
by the PRE platform and Enterprise.

1726
01:25:52,840 --> 01:25:56,530
So PRE will sit next to Windows,
Mac, iOS, Linux network,

1727
01:25:56,530 --> 01:25:59,362
cloud, all those other
platforms within Enterprise.

1728
01:26:01,000 --> 01:26:03,040
As you can see in the
graphic on the bottom right

1729
01:26:03,040 --> 01:26:07,490
is a perfect example of highlighting this,

1730
01:26:07,490 --> 01:26:08,492
PRE-ATT&CK was huge.

1731
01:26:10,170 --> 01:26:11,740
We had to do a lot of
re-scoping, a lot of downs

1732
01:26:11,740 --> 01:26:13,530
to like to get it into the
two tactics that are now

1733
01:26:13,530 --> 01:26:14,550
in Enterprise.

1734
01:26:14,550 --> 01:26:16,650
And just kind of giving
you some transparency

1735
01:26:16,650 --> 01:26:18,790
into the thought process
that went into that,

1736
01:26:18,790 --> 01:26:21,450
to kind of match everything
currently in Enterprise.

1737
01:26:21,450 --> 01:26:25,370
We had three main criteria for
translating these techniques,

1738
01:26:25,370 --> 01:26:27,640
first of which was the
behavior had to be technical,

1739
01:26:27,640 --> 01:26:29,730
it had to be something that an
adversary's doing with a host

1740
01:26:29,730 --> 01:26:33,519
or a system or something
which kind of leads,

1741
01:26:33,520 --> 01:26:35,983
something technical, which
leads to our second point.

1742
01:26:36,850 --> 01:26:39,500
It had to be something that
was visible to a defender,

1743
01:26:39,500 --> 01:26:42,240
as you know, it's great to
think about adversaries,

1744
01:26:42,240 --> 01:26:43,940
making decisions, and
kind of having their own

1745
01:26:43,940 --> 01:26:46,389
board meetings and kind of
defining their priorities.

1746
01:26:46,390 --> 01:26:48,510
But to match the rest
Enterprise, that's not something

1747
01:26:48,510 --> 01:26:49,940
we're gonna see, it's not
something we can actually

1748
01:26:49,940 --> 01:26:51,009
defend against.

1749
01:26:51,010 --> 01:26:53,440
So it really, unfortunately
didn't have a place

1750
01:26:53,440 --> 01:26:54,820
in Enterprise.

1751
01:26:54,820 --> 01:26:56,349
And finally, in the spirit of ATT&CK,

1752
01:26:56,350 --> 01:26:59,640
everything's based on
open source in the wild,

1753
01:26:59,640 --> 01:27:01,530
it had to be something that
we actually had evidence

1754
01:27:01,530 --> 01:27:03,210
of seeing adversaries do this.

1755
01:27:03,210 --> 01:27:06,090
So it kind of, as you can
see, the technical aspect

1756
01:27:06,090 --> 01:27:09,780
being visible, all of that
cascades into that in the wild

1757
01:27:09,780 --> 01:27:12,509
documentation, public reporting criteria

1758
01:27:12,510 --> 01:27:14,717
that we use to build
the rest of the ATT&CK.

1759
01:27:15,660 --> 01:27:18,940
So like I said, finally, the
final merger, we've pulled

1760
01:27:18,940 --> 01:27:21,790
initial access before and
then the final merger included

1761
01:27:21,790 --> 01:27:24,170
the creation of two new
tactics, as you can see

1762
01:27:24,170 --> 01:27:25,910
in the bottom right, Reconnaissance

1763
01:27:25,910 --> 01:27:27,160
and Resource Development.

1764
01:27:28,370 --> 01:27:30,769
So kind of just diving into the
first tactic Reconnaissance,

1765
01:27:30,770 --> 01:27:34,310
you can kind of think of this
as pre compromised discovery.

1766
01:27:34,310 --> 01:27:36,640
This is an adversary actively or passively

1767
01:27:36,640 --> 01:27:38,010
gathering information
that they're gonna use

1768
01:27:38,010 --> 01:27:38,863
during targeting.

1769
01:27:40,060 --> 01:27:42,960
In terms of just stats,
Reconnaissance is 10 techniques,

1770
01:27:42,960 --> 01:27:46,140
31 sub techniques, and really
interesting nuance about it,

1771
01:27:46,140 --> 01:27:48,530
is it split into two
categories more or less.

1772
01:27:48,530 --> 01:27:51,460
There's the what, what information

1773
01:27:51,460 --> 01:27:52,920
is the adversary gathering?

1774
01:27:52,920 --> 01:27:54,880
Whether it's about your
host, your infrastructure,

1775
01:27:54,880 --> 01:27:59,360
your personnel, you kind of
think of those, as well as how?

1776
01:27:59,360 --> 01:28:02,070
How was an adversary actually
gathering this information?

1777
01:28:02,070 --> 01:28:03,210
Are they scanning for it?

1778
01:28:03,210 --> 01:28:04,950
Are they sending you phishing probes?

1779
01:28:04,950 --> 01:28:07,380
Or are they kind of
triaging and combing through

1780
01:28:07,380 --> 01:28:09,063
publicly available information?

1781
01:28:12,220 --> 01:28:15,970
- Thanks, the resource
development tactic is focused

1782
01:28:15,970 --> 01:28:19,730
on an adversary trying to
establish resources that can use

1783
01:28:19,730 --> 01:28:22,320
to support operations.

1784
01:28:22,320 --> 01:28:24,849
So that includes techniques
that all the adversaries

1785
01:28:24,850 --> 01:28:29,060
creating, purchasing, or
compromising and stealing resources

1786
01:28:29,060 --> 01:28:31,650
that can be used to support targeting.

1787
01:28:31,650 --> 01:28:34,780
Resources here include
infrastructure, such as buying

1788
01:28:34,780 --> 01:28:37,980
or compromising servers
or domains, accounts,

1789
01:28:37,980 --> 01:28:40,379
such as creating or
compromising email accounts

1790
01:28:40,380 --> 01:28:43,890
or creating and developing
a social media persona,

1791
01:28:43,890 --> 01:28:46,640
and capabilities such as
developing or downloading

1792
01:28:46,640 --> 01:28:48,580
malware exploits.

1793
01:28:48,580 --> 01:28:50,250
While there are six new techniques,

1794
01:28:50,250 --> 01:28:54,750
and 26 sub-techniques here,
please don't let that scare you.

1795
01:28:54,750 --> 01:28:57,060
There's a parallelism
among and within techniques

1796
01:28:57,060 --> 01:28:59,363
that helps make use of
these more manageable.

1797
01:29:01,160 --> 01:29:04,660
As part of this release, we've
also added a new PRE platform

1798
01:29:04,660 --> 01:29:08,782
tag, as these behaviors talk
fit easily into windows, Mac,

1799
01:29:08,783 --> 01:29:12,413
iOS, Linux, cloud network, or
any other existing platform.

1800
01:29:13,260 --> 01:29:16,210
We've also added a new
Pre-compromised Mitigation,

1801
01:29:16,210 --> 01:29:18,840
as often, these behaviors
are outside the scope

1802
01:29:18,840 --> 01:29:21,350
of preventative measures
and Enterprise defender

1803
01:29:21,350 --> 01:29:26,350
can typically take for
detections in data sources.

1804
01:29:26,410 --> 01:29:29,580
As Jamie said, everything
going in here is as opposed

1805
01:29:29,580 --> 01:29:33,080
to some defenders, but
many are not observable

1806
01:29:33,080 --> 01:29:35,980
to most Enterprise defenders.

1807
01:29:35,980 --> 01:29:39,019
We've highlighted some data
sources and detections in cases

1808
01:29:39,020 --> 01:29:41,130
where there are detections
applicable to a broad

1809
01:29:41,130 --> 01:29:42,750
set of defenders.

1810
01:29:42,750 --> 01:29:45,500
Such as using domain registration
information to detect

1811
01:29:45,500 --> 01:29:48,700
adversaries purchasing
domains, including things like,

1812
01:29:48,700 --> 01:29:51,090
monitoring for domains
registered that are similar

1813
01:29:51,090 --> 01:29:54,890
to your own, that might
be used for something like

1814
01:29:54,890 --> 01:29:55,990
credential harvesting.

1815
01:29:57,032 --> 01:29:59,650
In some cases we also
have pointers to related

1816
01:29:59,650 --> 01:30:02,250
post-compromised behaviors
where detection efforts

1817
01:30:02,250 --> 01:30:03,453
may be more fruitful.

1818
01:30:04,860 --> 01:30:06,389
So why do this?

1819
01:30:06,390 --> 01:30:09,530
We hope to promote community
adoption and contributions

1820
01:30:09,530 --> 01:30:11,830
around tracking adversary Reconnaissance

1821
01:30:11,830 --> 01:30:14,360
and Resource Development efforts,

1822
01:30:14,360 --> 01:30:16,759
and to have more integration
across the wider spectrum

1823
01:30:16,760 --> 01:30:18,323
of adversary behaviors.

1824
01:30:20,080 --> 01:30:22,460
As Jamie mentioned, for
the version eight release

1825
01:30:22,460 --> 01:30:25,920
we have deprecated PRE-ATT&CK,
however, previous versions

1826
01:30:25,920 --> 01:30:29,240
of ATT&CK will retain
the PRE-ATT&CK matrix,

1827
01:30:29,240 --> 01:30:33,040
in case you aren't ready to
make the switch quite yet.

1828
01:30:33,040 --> 01:30:37,019
So you can still use PRE-ATT&CK
in version 7.2 and earlier

1829
01:30:37,020 --> 01:30:40,843
on our website, in the Sticks
and in the ATT&CK navigator.

1830
01:30:42,820 --> 01:30:44,719
So how can you help?

1831
01:30:44,720 --> 01:30:48,460
As we said, ATT&CK is very
focused on the community,

1832
01:30:48,460 --> 01:30:52,250
so feedback and contributions
would be greatly appreciated.

1833
01:30:52,250 --> 01:30:54,060
Looking through things
like new techniques,

1834
01:30:54,060 --> 01:30:57,480
or scoping of existing
techniques, documentation

1835
01:30:57,480 --> 01:31:01,549
of potential detections in
mitigation, and of course

1836
01:31:01,550 --> 01:31:04,160
reported instances of
in the wild adversary

1837
01:31:04,160 --> 01:31:05,673
procedure examples.

1838
01:31:07,590 --> 01:31:11,120
Lastly, we wanna give a
special thanks to a few people,

1839
01:31:11,120 --> 01:31:13,460
including MITRE Ingrid Parker, for working

1840
01:31:13,460 --> 01:31:16,320
with the ATT&CK team
to develop the criteria

1841
01:31:16,320 --> 01:31:19,059
for determining what PRE-ATT&CK
behaviors could assimilate

1842
01:31:19,060 --> 01:31:21,200
into Enterprise ATT&CK.

1843
01:31:21,200 --> 01:31:24,559
We also wanna give special
thanks to former ATT&CK team

1844
01:31:24,560 --> 01:31:27,720
member, Katie Nichols, along
with current head of ATT&CK,

1845
01:31:27,720 --> 01:31:31,500
Adam Pennington, for white
boarding sessions to determine

1846
01:31:31,500 --> 01:31:34,770
the techniques and sub-techniques
that fit those criteria.

1847
01:31:34,770 --> 01:31:37,730
And lastly, thank you to
Kristen Asbeck, for leading

1848
01:31:37,730 --> 01:31:40,570
the creation of PRE-ATT&CK,
which much of this work

1849
01:31:40,570 --> 01:31:42,240
was based on.

1850
01:31:42,240 --> 01:31:45,580
And that folks is how we
helped put the PRE into ATT&CK,

1851
01:31:45,580 --> 01:31:47,733
thank you, and back over to you Jamie.

1852
01:31:48,649 --> 01:31:50,370
- And I'm just gonna thank
everyone again for joining

1853
01:31:50,370 --> 01:31:53,019
ATT&CK CON, as well as I
know in advance, for all

1854
01:31:53,020 --> 01:31:55,070
the contributions to the PRE effort.

1855
01:31:55,070 --> 01:31:56,620
And with that, I'll turn
it over back to Adam

1856
01:31:56,620 --> 01:31:57,463
for a sign off.

1857
01:31:58,360 --> 01:32:01,950
- And thank you guys, Mike
and Jamie will be available

1858
01:32:01,950 --> 01:32:03,099
for questions in the Slack.

1859
01:32:03,100 --> 01:32:06,180
Jamie's not gonna ask
himself questions today.

1860
01:32:06,180 --> 01:32:09,930
Thank you again to all today's
speakers, and for everyone

1861
01:32:09,930 --> 01:32:10,763
for joining us.

1862
01:32:10,763 --> 01:32:13,160
There's been some great
discussions in the Slack

1863
01:32:13,160 --> 01:32:15,670
which hopefully to keep
going after we're done here.

1864
01:32:15,670 --> 01:32:18,230
Links to videos and slides
from today will be emailed

1865
01:32:18,230 --> 01:32:20,120
to everyone who registered
once they're ready

1866
01:32:20,120 --> 01:32:21,550
to be put online.

1867
01:32:21,550 --> 01:32:24,150
And we'll be getting those
out to everybody as well.

1868
01:32:25,150 --> 01:32:27,780
Please join us for the
next ATT&CK CON POWER HOUR

1869
01:32:27,780 --> 01:32:29,349
on December 11th.

1870
01:32:29,350 --> 01:32:31,990
Registration is open
today, and thank you again

1871
01:32:31,990 --> 01:32:32,973
for joining us.

