1
00:00:12,160 --> 00:00:15,599
our next speakers up are johnny johnson

2
00:00:15,599 --> 00:00:18,080
from red canary and off hart hong from

3
00:00:18,080 --> 00:00:19,439
falconforce

4
00:00:19,439 --> 00:00:21,439
this next talk comes from two comp

5
00:00:21,439 --> 00:00:23,199
companies across the atlantic from each

6
00:00:23,199 --> 00:00:25,680
other and pairs a multiple attack con

7
00:00:25,680 --> 00:00:27,680
speaker and a first time attack con

8
00:00:27,680 --> 00:00:28,880
speaker

9
00:00:28,880 --> 00:00:30,800
so as i mentioned in my talk earlier and

10
00:00:30,800 --> 00:00:33,360
obviously from lex's just now

11
00:00:33,360 --> 00:00:35,680
data sources have been on our mind a lot

12
00:00:35,680 --> 00:00:37,120
this past year

13
00:00:37,120 --> 00:00:39,040
we're often asked what data sources

14
00:00:39,040 --> 00:00:40,320
should i gather

15
00:00:40,320 --> 00:00:41,680
and we're interested in learning from

16
00:00:41,680 --> 00:00:43,840
often johnny's experiences so please

17
00:00:43,840 --> 00:00:47,840
welcome to the stage often johnny

18
00:00:49,039 --> 00:00:52,239
big green button big one all right

19
00:00:52,239 --> 00:00:54,320
hey everyone

20
00:00:54,320 --> 00:00:56,160
welcome

21
00:00:56,160 --> 00:00:59,039
so as uh adam already introduced we're

22
00:00:59,039 --> 00:01:00,320
going to be talking a little bit about

23
00:01:00,320 --> 00:01:02,800
data sources i'm super excited about

24
00:01:02,800 --> 00:01:05,360
alex talk as well to see where mitre is

25
00:01:05,360 --> 00:01:07,119
progressing

26
00:01:07,119 --> 00:01:09,439
and i got the right button so okay why

27
00:01:09,439 --> 00:01:10,880
do we care about data sources i think

28
00:01:10,880 --> 00:01:12,720
it's an open question everybody has an

29
00:01:12,720 --> 00:01:14,720
opinion about it so we'll talk a little

30
00:01:14,720 --> 00:01:16,560
bit about our opinion

31
00:01:16,560 --> 00:01:18,960
we'll talk a little bit about how we

32
00:01:18,960 --> 00:01:20,799
start looking at them what we do with

33
00:01:20,799 --> 00:01:21,840
them

34
00:01:21,840 --> 00:01:22,880
and of course we need to have a

35
00:01:22,880 --> 00:01:25,439
conclusion for this so that that picture

36
00:01:25,439 --> 00:01:27,600
is already a slight teaser into one of

37
00:01:27,600 --> 00:01:30,240
the ways that we are looking at them

38
00:01:30,240 --> 00:01:31,920
uh but first let's introduce ourselves a

39
00:01:31,920 --> 00:01:33,680
little bit so i'm joined with johnny hey

40
00:01:33,680 --> 00:01:35,840
everybody um my name is johnny johnson

41
00:01:35,840 --> 00:01:38,240
um i am a senior threat researcher at

42
00:01:38,240 --> 00:01:41,040
red canary previously i was working at

43
00:01:41,040 --> 00:01:43,360
spectreops um my

44
00:01:43,360 --> 00:01:45,439
kind of focus is around windows

45
00:01:45,439 --> 00:01:47,520
internals a lot of database things and

46
00:01:47,520 --> 00:01:48,799
i'm trying to

47
00:01:48,799 --> 00:01:50,720
as the days go by get better in reverse

48
00:01:50,720 --> 00:01:54,640
engineering um i am a one of the hosts

49
00:01:54,640 --> 00:01:56,320
of the detection challenging paradigms

50
00:01:56,320 --> 00:01:58,320
podcast if you have heard of that and

51
00:01:58,320 --> 00:01:59,600
probably the most important thing on

52
00:01:59,600 --> 00:02:02,240
this slide is i am a self-proclaimed

53
00:02:02,240 --> 00:02:04,000
professional at call of duty

54
00:02:04,000 --> 00:02:06,640
specifically in 1v1 knives so if you

55
00:02:06,640 --> 00:02:07,680
ever want to

56
00:02:07,680 --> 00:02:09,199
ever want to catch that just let me know

57
00:02:09,199 --> 00:02:11,200
so

58
00:02:11,200 --> 00:02:14,000
nice right um my name is oliverton i

59
00:02:14,000 --> 00:02:15,760
work at falconforce as i had mentioned

60
00:02:15,760 --> 00:02:17,360
it's a dutch company so you might not

61
00:02:17,360 --> 00:02:19,200
have seen it yet

62
00:02:19,200 --> 00:02:21,040
and over there i'm doing primarily

63
00:02:21,040 --> 00:02:22,879
detection engineering general security

64
00:02:22,879 --> 00:02:24,640
research trying to build some open

65
00:02:24,640 --> 00:02:27,440
source tools to help people out

66
00:02:27,440 --> 00:02:28,800
i started out as a documentary

67
00:02:28,800 --> 00:02:30,480
photographer so i never went to school

68
00:02:30,480 --> 00:02:32,239
for this

69
00:02:32,239 --> 00:02:33,519
and apparently you don't have to right

70
00:02:33,519 --> 00:02:35,200
everybody can can do as long as you're

71
00:02:35,200 --> 00:02:36,560
motivated enough

72
00:02:36,560 --> 00:02:39,519
um i have two young sons why adore and

73
00:02:39,519 --> 00:02:41,120
of course i like bottom hawks it's i'm

74
00:02:41,120 --> 00:02:42,400
olaf so

75
00:02:42,400 --> 00:02:43,280
um

76
00:02:43,280 --> 00:02:44,879
but moving on

77
00:02:44,879 --> 00:02:46,400
i think this is one of our few memes

78
00:02:46,400 --> 00:02:47,920
sadly so

79
00:02:47,920 --> 00:02:49,760
why do we actually care about data

80
00:02:49,760 --> 00:02:52,319
sources and the more data is is sort of

81
00:02:52,319 --> 00:02:54,560
yeah conflicting message because we

82
00:02:54,560 --> 00:02:56,000
don't want everything we only want

83
00:02:56,000 --> 00:02:57,280
useful stuff

84
00:02:57,280 --> 00:02:58,239
so

85
00:02:58,239 --> 00:03:00,959
um a couple of things for for a value

86
00:03:00,959 --> 00:03:02,959
thing so how do

87
00:03:02,959 --> 00:03:04,720
we value a data source so one of the

88
00:03:04,720 --> 00:03:07,040
things is well we can at least

89
00:03:07,040 --> 00:03:08,879
determine where do we start looking what

90
00:03:08,879 --> 00:03:10,400
do we need

91
00:03:10,400 --> 00:03:12,159
which fields are actually useful for

92
00:03:12,159 --> 00:03:14,159
good detection and then primarily a

93
00:03:14,159 --> 00:03:16,159
behavioral detection and not necessarily

94
00:03:16,159 --> 00:03:19,840
a signature if we can get that

95
00:03:20,080 --> 00:03:21,599
but also

96
00:03:21,599 --> 00:03:24,159
from that perspective is what do we need

97
00:03:24,159 --> 00:03:26,159
in those fields to be there and what is

98
00:03:26,159 --> 00:03:28,159
required to actually have that focus and

99
00:03:28,159 --> 00:03:31,920
what events are also in terms of volume

100
00:03:31,920 --> 00:03:34,239
sort of valuable enough i mean we don't

101
00:03:34,239 --> 00:03:36,720
want to get a fire hose and then have a

102
00:03:36,720 --> 00:03:39,200
one single potential event once a year

103
00:03:39,200 --> 00:03:41,120
it's just not cost effective

104
00:03:41,120 --> 00:03:43,519
um and from that perspective also how to

105
00:03:43,519 --> 00:03:45,920
help the id people or whoever is

106
00:03:45,920 --> 00:03:47,519
onboarding this

107
00:03:47,519 --> 00:03:50,000
to to get it enabled and get it into our

108
00:03:50,000 --> 00:03:52,959
into our data set so this this

109
00:03:52,959 --> 00:03:55,519
slide is probably almost as famous as

110
00:03:55,519 --> 00:03:57,599
dave bianco's that have seen a couple of

111
00:03:57,599 --> 00:03:59,439
times already and it's quite relevant

112
00:03:59,439 --> 00:04:00,799
right even though

113
00:04:00,799 --> 00:04:02,959
most of our presentation is lists it's

114
00:04:02,959 --> 00:04:05,040
just an easier way of presenting it

115
00:04:05,040 --> 00:04:06,799
looking at it from a graph perspective

116
00:04:06,799 --> 00:04:09,280
is super relevant

117
00:04:09,280 --> 00:04:11,680
and to do that so mitre already has this

118
00:04:11,680 --> 00:04:13,439
great relational database so for

119
00:04:13,439 --> 00:04:15,280
instance a group that is tied to a

120
00:04:15,280 --> 00:04:16,959
tactic then a technique everybody's seen

121
00:04:16,959 --> 00:04:18,560
this right so now the data components

122
00:04:18,560 --> 00:04:20,560
are there and i skip the data source bit

123
00:04:20,560 --> 00:04:21,918
because of the slide

124
00:04:21,918 --> 00:04:22,880
size

125
00:04:22,880 --> 00:04:24,960
but it's it should be there but from

126
00:04:24,960 --> 00:04:27,120
there we need to go further because this

127
00:04:27,120 --> 00:04:29,759
is still nice as a defender but how do

128
00:04:29,759 --> 00:04:31,360
we apply this so

129
00:04:31,360 --> 00:04:33,199
one of the things that we can do now is

130
00:04:33,199 --> 00:04:35,840
for instance with the osap model from

131
00:04:35,840 --> 00:04:38,000
from the rodriguez brothers

132
00:04:38,000 --> 00:04:40,560
that's now in the otr framework so it's

133
00:04:40,560 --> 00:04:43,280
being applied by everybody you can tidy

134
00:04:43,280 --> 00:04:45,840
events and even go to the provider stage

135
00:04:45,840 --> 00:04:47,759
and later on you can also do fields

136
00:04:47,759 --> 00:04:49,759
these kind of things it's really nice

137
00:04:49,759 --> 00:04:51,919
and what you can do once you start doing

138
00:04:51,919 --> 00:04:53,759
this you can add your detection rules

139
00:04:53,759 --> 00:04:55,440
you can start maybe your textures or

140
00:04:55,440 --> 00:04:57,520
your sightings you can do your attack

141
00:04:57,520 --> 00:05:00,320
scripts like the red canary guys put out

142
00:05:00,320 --> 00:05:02,080
and and much more the possibilities are

143
00:05:02,080 --> 00:05:04,080
endless there so what we can do later on

144
00:05:04,080 --> 00:05:06,479
is try to graph a little bit more so

145
00:05:06,479 --> 00:05:08,000
where do we need to start looking

146
00:05:08,000 --> 00:05:10,960
actually if we start doing this so

147
00:05:10,960 --> 00:05:13,360
there's a ton there's a ton of of data

148
00:05:13,360 --> 00:05:15,199
components in wider already i didn't

149
00:05:15,199 --> 00:05:17,039
count them but it's like

150
00:05:17,039 --> 00:05:19,120
i think over 80 and these are the top

151
00:05:19,120 --> 00:05:21,280
five with references to technique so

152
00:05:21,280 --> 00:05:23,919
command execution is referenced in 253

153
00:05:23,919 --> 00:05:25,840
techniques which is a lot

154
00:05:25,840 --> 00:05:28,160
and that list goes down so this is

155
00:05:28,160 --> 00:05:30,080
important but it's not maybe the most

156
00:05:30,080 --> 00:05:31,600
important because there's there's of

157
00:05:31,600 --> 00:05:33,600
course more than a top five and

158
00:05:33,600 --> 00:05:35,680
sometimes an execution of a certain

159
00:05:35,680 --> 00:05:37,360
technique doesn't necessarily mean that

160
00:05:37,360 --> 00:05:39,120
it's in one of those so never forget

161
00:05:39,120 --> 00:05:40,960
about those because if we graph that

162
00:05:40,960 --> 00:05:42,560
it's quite a lot already right it's it's

163
00:05:42,560 --> 00:05:44,000
almost a maze

164
00:05:44,000 --> 00:05:45,840
and if you look back then into the

165
00:05:45,840 --> 00:05:47,759
events which you can't really see yet

166
00:05:47,759 --> 00:05:48,479
but

167
00:05:48,479 --> 00:05:50,560
you'll see in a bit it it starts to

168
00:05:50,560 --> 00:05:53,440
become more relevant so and in terms of

169
00:05:53,440 --> 00:05:55,840
relevance how do we apply this so so one

170
00:05:55,840 --> 00:05:57,919
of the things that we looked at is uh

171
00:05:57,919 --> 00:05:59,360
rat canary put out their threat

172
00:05:59,360 --> 00:06:01,280
detection report so it's oversight of

173
00:06:01,280 --> 00:06:03,520
what they've observed over the past year

174
00:06:03,520 --> 00:06:05,039
and these are the top five most observed

175
00:06:05,039 --> 00:06:07,199
techniques used by attackers in their

176
00:06:07,199 --> 00:06:09,600
client base

177
00:06:09,600 --> 00:06:11,440
and from there we can start mapping that

178
00:06:11,440 --> 00:06:12,160
to

179
00:06:12,160 --> 00:06:13,840
the data components so the data

180
00:06:13,840 --> 00:06:15,840
components are the yellow bits

181
00:06:15,840 --> 00:06:17,840
the techniques were on the left and then

182
00:06:17,840 --> 00:06:20,080
we can start plotting that into which

183
00:06:20,080 --> 00:06:22,319
events would we need to actually detect

184
00:06:22,319 --> 00:06:23,039
this

185
00:06:23,039 --> 00:06:25,520
and this is of course arbitrary it's

186
00:06:25,520 --> 00:06:28,000
it's built by the open source community

187
00:06:28,000 --> 00:06:30,479
and mitre so it's never complete but it

188
00:06:30,479 --> 00:06:32,560
might give you a good starting point in

189
00:06:32,560 --> 00:06:34,720
to say okay hey i have i have i don't

190
00:06:34,720 --> 00:06:36,639
know windows event logs and these event

191
00:06:36,639 --> 00:06:38,560
ids i have let's start looking into that

192
00:06:38,560 --> 00:06:40,400
data set to see if we can actually build

193
00:06:40,400 --> 00:06:42,720
detections

194
00:06:42,720 --> 00:06:44,960
so if we start looking at which of the

195
00:06:44,960 --> 00:06:48,160
components were listed in in the in the

196
00:06:48,160 --> 00:06:49,759
in those techniques and then put that

197
00:06:49,759 --> 00:06:51,360
next to the top five there there is

198
00:06:51,360 --> 00:06:53,280
overlap so that's cool but there's also

199
00:06:53,280 --> 00:06:54,800
other stuff right so

200
00:06:54,800 --> 00:06:57,280
from there we can say okay

201
00:06:57,280 --> 00:06:59,680
maybe some of the other data sources are

202
00:06:59,680 --> 00:07:01,360
as important or more important than

203
00:07:01,360 --> 00:07:03,199
those top five

204
00:07:03,199 --> 00:07:04,720
and one of the things that we want to

205
00:07:04,720 --> 00:07:06,560
take you into now is basically two

206
00:07:06,560 --> 00:07:08,319
examples so i'll start with the windows

207
00:07:08,319 --> 00:07:10,560
registry and then johnny takes over

208
00:07:10,560 --> 00:07:12,160
and he'll show another data source that

209
00:07:12,160 --> 00:07:13,919
we find very valuable

210
00:07:13,919 --> 00:07:17,199
and why did i select a registry well

211
00:07:17,199 --> 00:07:19,199
it's it's it's probably one of the most

212
00:07:19,199 --> 00:07:22,160
valuable data sources for a forensic

213
00:07:22,160 --> 00:07:24,960
investigator they they love that stuff i

214
00:07:24,960 --> 00:07:26,639
did a lot of ir and this is the first

215
00:07:26,639 --> 00:07:28,960
place i usually go but for some reason

216
00:07:28,960 --> 00:07:31,360
defenders look at it less in my

217
00:07:31,360 --> 00:07:33,440
experience at least where i if i come to

218
00:07:33,440 --> 00:07:35,120
customers they usually do pros come

219
00:07:35,120 --> 00:07:36,720
outline process creation these kind of

220
00:07:36,720 --> 00:07:40,240
things super nice very valuable but

221
00:07:40,240 --> 00:07:42,560
easier to avoid whereas the registry is

222
00:07:42,560 --> 00:07:44,960
very hard to not have a registry key

223
00:07:44,960 --> 00:07:47,759
registered for an action that you take

224
00:07:47,759 --> 00:07:49,759
so from that perspective behaviorally

225
00:07:49,759 --> 00:07:53,199
this is a great focus area

226
00:07:53,759 --> 00:07:55,680
and if we start looking at the amount of

227
00:07:55,680 --> 00:07:57,199
techniques that actually

228
00:07:57,199 --> 00:07:59,199
are referenced with it with a

229
00:07:59,199 --> 00:08:00,639
registry key

230
00:08:00,639 --> 00:08:02,720
ref either components so it can be

231
00:08:02,720 --> 00:08:04,560
modification creation anything like that

232
00:08:04,560 --> 00:08:06,160
there's 86 of them so it's quite a lot

233
00:08:06,160 --> 00:08:07,520
of techniques that we can catch from

234
00:08:07,520 --> 00:08:09,440
that

235
00:08:09,440 --> 00:08:11,680
and i didn't do the proper research yet

236
00:08:11,680 --> 00:08:13,360
but it's i think there there's way more

237
00:08:13,360 --> 00:08:14,879
techniques that we potentially could

238
00:08:14,879 --> 00:08:17,360
cover with it just it's not tagged yet

239
00:08:17,360 --> 00:08:19,280
right it's not it might just false or

240
00:08:19,280 --> 00:08:21,840
attack faults it's just somebody didn't

241
00:08:21,840 --> 00:08:23,120
write it up

242
00:08:23,120 --> 00:08:25,280
um and and from there there's there's

243
00:08:25,280 --> 00:08:26,560
like

244
00:08:26,560 --> 00:08:28,560
leaks of examples but a couple of those

245
00:08:28,560 --> 00:08:29,840
are um

246
00:08:29,840 --> 00:08:31,599
gum hijacking

247
00:08:31,599 --> 00:08:33,120
all kinds of discovery stuff and these

248
00:08:33,120 --> 00:08:34,559
are probably the hardest to do from a

249
00:08:34,559 --> 00:08:35,839
registry perspective because the

250
00:08:35,839 --> 00:08:37,440
telemetry is not always there as i'll

251
00:08:37,440 --> 00:08:38,719
show you later

252
00:08:38,719 --> 00:08:40,719
um but you can even add a user to the

253
00:08:40,719 --> 00:08:42,399
registry for instance or create a

254
00:08:42,399 --> 00:08:44,399
service and that's all it's all visible

255
00:08:44,399 --> 00:08:45,519
there

256
00:08:45,519 --> 00:08:47,440
so from that enumeration perspective as

257
00:08:47,440 --> 00:08:48,959
i mentioned so you there's all kinds of

258
00:08:48,959 --> 00:08:50,959
registry keys that attackers will look

259
00:08:50,959 --> 00:08:53,680
at to see hey how how well secured is

260
00:08:53,680 --> 00:08:57,279
this box what kind of policies are there

261
00:08:57,279 --> 00:08:59,680
even if we look into the code of seat

262
00:08:59,680 --> 00:09:01,839
belt there's all kinds of services and

263
00:09:01,839 --> 00:09:03,440
and other locations where they're

264
00:09:03,440 --> 00:09:05,600
looking to see hey what can we do what

265
00:09:05,600 --> 00:09:08,880
is exploitable what is something that we

266
00:09:08,880 --> 00:09:10,240
can do

267
00:09:10,240 --> 00:09:12,720
and from a more practical perspective so

268
00:09:12,720 --> 00:09:14,959
a service creation you can just do from

269
00:09:14,959 --> 00:09:16,720
a powershell command for instance or do

270
00:09:16,720 --> 00:09:18,080
it through a gui

271
00:09:18,080 --> 00:09:20,560
and what will happen of course is if you

272
00:09:20,560 --> 00:09:22,320
do it the proper way you'll get a

273
00:09:22,320 --> 00:09:24,720
service creation log entry in the

274
00:09:24,720 --> 00:09:26,959
windows event log

275
00:09:26,959 --> 00:09:28,240
however

276
00:09:28,240 --> 00:09:29,920
you don't have to do that so one of the

277
00:09:29,920 --> 00:09:31,600
things that you can do is just write

278
00:09:31,600 --> 00:09:33,680
these keys to the registry and i did

279
00:09:33,680 --> 00:09:35,760
this with brockmount but you can you can

280
00:09:35,760 --> 00:09:37,440
monitor in all kinds of way i really

281
00:09:37,440 --> 00:09:39,600
like pro i love uh procmom because it

282
00:09:39,600 --> 00:09:43,120
will give you the full the full details

283
00:09:43,120 --> 00:09:44,800
and this is something that i can then

284
00:09:44,800 --> 00:09:47,519
take and replicate and see hey if i only

285
00:09:47,519 --> 00:09:49,440
write those registry keys is that server

286
00:09:49,440 --> 00:09:50,959
is still there well actually turns out

287
00:09:50,959 --> 00:09:53,680
it is so i need and then that event id

288
00:09:53,680 --> 00:09:55,519
that we saw before doesn't it get

289
00:09:55,519 --> 00:09:57,200
generated so if i'm looking only for

290
00:09:57,200 --> 00:10:00,080
search creation event event ids

291
00:10:00,080 --> 00:10:01,920
i might miss it so this is a better

292
00:10:01,920 --> 00:10:03,200
detection

293
00:10:03,200 --> 00:10:04,480
because if you do it the proper way you

294
00:10:04,480 --> 00:10:06,079
get it if you don't do it the proper way

295
00:10:06,079 --> 00:10:07,920
you still get it

296
00:10:07,920 --> 00:10:09,680
and then from there in this registry you

297
00:10:09,680 --> 00:10:11,200
can you can basically get everything so

298
00:10:11,200 --> 00:10:12,959
you can keep service type so maybe you

299
00:10:12,959 --> 00:10:15,360
don't want to have an alert for every

300
00:10:15,360 --> 00:10:17,200
new service creation which kind of makes

301
00:10:17,200 --> 00:10:19,040
sense but maybe you do want to know when

302
00:10:19,040 --> 00:10:19,839
they

303
00:10:19,839 --> 00:10:21,760
start a kernel driver or something like

304
00:10:21,760 --> 00:10:24,480
that and you can also see how it started

305
00:10:24,480 --> 00:10:26,160
so if it's automatically started or

306
00:10:26,160 --> 00:10:28,240
manually these kind of things it might

307
00:10:28,240 --> 00:10:31,040
influence your decision tree later on

308
00:10:31,040 --> 00:10:33,040
and you also get the binary that's tied

309
00:10:33,040 --> 00:10:35,279
to it the name and so forth

310
00:10:35,279 --> 00:10:37,120
so it's quite valuable just from from

311
00:10:37,120 --> 00:10:39,120
one single data source

312
00:10:39,120 --> 00:10:41,040
and the same can be done actually by

313
00:10:41,040 --> 00:10:43,120
adding a user through the via the

314
00:10:43,120 --> 00:10:45,440
registry to the sam database so

315
00:10:45,440 --> 00:10:47,839
if you add a user via the normal gui you

316
00:10:47,839 --> 00:10:50,160
will get all kinds of event ids event

317
00:10:50,160 --> 00:10:52,399
data

318
00:10:52,399 --> 00:10:55,519
and the sam hive will also be updated

319
00:10:55,519 --> 00:10:57,360
and you can query it from from the

320
00:10:57,360 --> 00:10:58,720
registry

321
00:10:58,720 --> 00:11:00,000
but you can also do it the other way

322
00:11:00,000 --> 00:11:01,680
around with some fiddling so i found the

323
00:11:01,680 --> 00:11:03,519
tool that did it i i don't know exactly

324
00:11:03,519 --> 00:11:05,279
how it works but

325
00:11:05,279 --> 00:11:07,200
uh it's it's quite nice because it adds

326
00:11:07,200 --> 00:11:08,880
a registry key and then the sam database

327
00:11:08,880 --> 00:11:10,880
is also updated so this is another way

328
00:11:10,880 --> 00:11:13,680
of covertly adding a user to a box that

329
00:11:13,680 --> 00:11:16,640
you might otherwise not catch

330
00:11:16,640 --> 00:11:18,560
and again all kinds of telemetry is

331
00:11:18,560 --> 00:11:20,720
being generated so we can guess just

332
00:11:20,720 --> 00:11:23,279
build a detection based on certain

333
00:11:23,279 --> 00:11:25,760
traits of of what is actually happening

334
00:11:25,760 --> 00:11:29,200
in this in this set

335
00:11:29,200 --> 00:11:30,079
so

336
00:11:30,079 --> 00:11:32,000
how do you get that data that's

337
00:11:32,000 --> 00:11:34,079
primarily the biggest concern right so

338
00:11:34,079 --> 00:11:37,600
windows has a feature to to do this

339
00:11:37,600 --> 00:11:39,760
however it's not very accessible not

340
00:11:39,760 --> 00:11:42,240
very easy

341
00:11:42,240 --> 00:11:45,440
you have to basically create a secure

342
00:11:45,440 --> 00:11:47,279
cycle basically on an object and you

343
00:11:47,279 --> 00:11:49,600
have to define it per registry key or

344
00:11:49,600 --> 00:11:52,079
per path that you want to be monitoring

345
00:11:52,079 --> 00:11:53,760
but the awesome thing is that you can

346
00:11:53,760 --> 00:11:55,680
also do it for read access so if they

347
00:11:55,680 --> 00:11:57,200
start enumerating certain keys that

348
00:11:57,200 --> 00:11:58,959
you're actually interested in you can

349
00:11:58,959 --> 00:12:01,440
build a cycle for only those and do the

350
00:12:01,440 --> 00:12:03,200
rest from another of another path like

351
00:12:03,200 --> 00:12:05,680
sysmon is awesome for it of course

352
00:12:05,680 --> 00:12:07,760
but most of edrs also have quite good

353
00:12:07,760 --> 00:12:10,079
visibility in creation deletion

354
00:12:10,079 --> 00:12:11,600
modification

355
00:12:11,600 --> 00:12:13,760
but not necessarily into reads i i

356
00:12:13,760 --> 00:12:15,839
haven't seen a lot of edr's that do that

357
00:12:15,839 --> 00:12:17,519
please do by the way

358
00:12:17,519 --> 00:12:18,959
just for a couple of keys right i don't

359
00:12:18,959 --> 00:12:20,320
want everything because then you get

360
00:12:20,320 --> 00:12:21,839
that firehose that we thought that i

361
00:12:21,839 --> 00:12:23,600
talked about in the beginning but it

362
00:12:23,600 --> 00:12:25,279
would be really valuable to have some of

363
00:12:25,279 --> 00:12:26,639
that telemetry there and while

364
00:12:26,639 --> 00:12:28,639
researching you can of course look at

365
00:12:28,639 --> 00:12:30,720
the event tracing for windows

366
00:12:30,720 --> 00:12:32,800
there's a specific provider for that

367
00:12:32,800 --> 00:12:34,720
again you don't want to ingest that into

368
00:12:34,720 --> 00:12:37,360
your sim because then you get flooded

369
00:12:37,360 --> 00:12:38,399
and poor

370
00:12:38,399 --> 00:12:39,440
um

371
00:12:39,440 --> 00:12:41,360
or or you can use it to like procman

372
00:12:41,360 --> 00:12:43,519
osquary something like that uh maybe

373
00:12:43,519 --> 00:12:46,160
even velociraptor

374
00:12:46,160 --> 00:12:48,240
and if you start graphing that again to

375
00:12:48,240 --> 00:12:50,959
that similar thing you can see that

376
00:12:50,959 --> 00:12:52,720
also in attack there there's quite a lot

377
00:12:52,720 --> 00:12:54,480
for the modification not a lot for the

378
00:12:54,480 --> 00:12:55,600
reads

379
00:12:55,600 --> 00:12:57,920
um which makes sense it's harder to

380
00:12:57,920 --> 00:13:00,480
detect still would be valuable and then

381
00:13:00,480 --> 00:13:02,639
again this is also a biased look because

382
00:13:02,639 --> 00:13:04,720
this only looks at like sysmon defender

383
00:13:04,720 --> 00:13:07,440
for endpoint and the microsoft

384
00:13:07,440 --> 00:13:10,320
native logs so i would encourage other

385
00:13:10,320 --> 00:13:13,200
people to start augmenting this as well

386
00:13:13,200 --> 00:13:15,279
it's all open source and the tool to

387
00:13:15,279 --> 00:13:16,639
generate this

388
00:13:16,639 --> 00:13:18,240
will be published as well so my

389
00:13:18,240 --> 00:13:20,399
colleague is is writing a powershell

390
00:13:20,399 --> 00:13:22,240
script to

391
00:13:22,240 --> 00:13:25,519
make a nice ingestion method into neo4j

392
00:13:25,519 --> 00:13:27,920
and i'm building a bloodhound port that

393
00:13:27,920 --> 00:13:30,399
that actually gives you all the

394
00:13:30,399 --> 00:13:33,680
secondary attributes as well

395
00:13:33,680 --> 00:13:36,639
so i'll now hand over to johnny for his

396
00:13:36,639 --> 00:13:38,320
subject much

397
00:13:38,320 --> 00:13:40,240
it's this button right

398
00:13:40,240 --> 00:13:42,000
yeah okay great yeah so now we're gonna

399
00:13:42,000 --> 00:13:44,399
move into process access um i don't see

400
00:13:44,399 --> 00:13:46,800
a lot of this used at least by defenders

401
00:13:46,800 --> 00:13:48,480
so i really wanted to talk about the

402
00:13:48,480 --> 00:13:50,720
importance of this sub data source

403
00:13:50,720 --> 00:13:52,959
so let's get into it so the objectives

404
00:13:52,959 --> 00:13:55,040
for this section is to

405
00:13:55,040 --> 00:13:57,360
talk about what is process access

406
00:13:57,360 --> 00:13:59,360
i want to take a step back and just go

407
00:13:59,360 --> 00:14:01,680
ahead and speak about what is a process

408
00:14:01,680 --> 00:14:03,279
what are objects

409
00:14:03,279 --> 00:14:05,360
what is a handle

410
00:14:05,360 --> 00:14:06,959
and then what is the access that the

411
00:14:06,959 --> 00:14:08,800
handle might return to you

412
00:14:08,800 --> 00:14:10,399
and then most importantly how can a

413
00:14:10,399 --> 00:14:12,240
defender use this

414
00:14:12,240 --> 00:14:13,120
in

415
00:14:13,120 --> 00:14:15,600
the day-to-day telemetry um i don't know

416
00:14:15,600 --> 00:14:17,440
why i chose that i just saw it on the

417
00:14:17,440 --> 00:14:18,639
internet and i was like you know what i

418
00:14:18,639 --> 00:14:20,079
think this is a good place to display

419
00:14:20,079 --> 00:14:21,760
that so

420
00:14:21,760 --> 00:14:23,040
so

421
00:14:23,040 --> 00:14:24,160
um

422
00:14:24,160 --> 00:14:25,920
if you're not familiar process access is

423
00:14:25,920 --> 00:14:28,079
a sub data source within a broader data

424
00:14:28,079 --> 00:14:30,959
source known as process

425
00:14:30,959 --> 00:14:33,600
and as within process you can see os

426
00:14:33,600 --> 00:14:36,000
operating system api execution process

427
00:14:36,000 --> 00:14:38,320
access process creation and process

428
00:14:38,320 --> 00:14:40,800
metadata um i wanted to focus on this

429
00:14:40,800 --> 00:14:42,480
just because there is a little bit of a

430
00:14:42,480 --> 00:14:45,760
niche piece as it is relates to attacks

431
00:14:45,760 --> 00:14:46,800
um

432
00:14:46,800 --> 00:14:48,480
and thanks to olaf for making this

433
00:14:48,480 --> 00:14:50,720
mapping for me there are um

434
00:14:50,720 --> 00:14:52,480
multiple attacks this relates to there

435
00:14:52,480 --> 00:14:54,000
probably is more than what is listed

436
00:14:54,000 --> 00:14:55,680
here just research hasn't been done on

437
00:14:55,680 --> 00:14:57,040
that quite yet

438
00:14:57,040 --> 00:14:59,760
and there are a lot of good um

439
00:14:59,760 --> 00:15:02,000
like events that provide that to us

440
00:15:02,000 --> 00:15:04,399
right so let's talk on some of those

441
00:15:04,399 --> 00:15:06,399
um if you're not familiar um sysmon will

442
00:15:06,399 --> 00:15:09,040
give us this an even id10 um there are

443
00:15:09,040 --> 00:15:10,639
some great attributes in here that i

444
00:15:10,639 --> 00:15:13,360
will go over in a moment but another one

445
00:15:13,360 --> 00:15:15,279
is actually given to us by the windows

446
00:15:15,279 --> 00:15:17,120
security event

447
00:15:17,120 --> 00:15:19,760
and this is 4656 as well this one's a

448
00:15:19,760 --> 00:15:21,600
little bit more unique as i'll touch on

449
00:15:21,600 --> 00:15:22,959
this in a moment but it actually will

450
00:15:22,959 --> 00:15:25,760
give insight into other object accesses

451
00:15:25,760 --> 00:15:28,800
as well not just process based

452
00:15:28,800 --> 00:15:30,560
great so let's take a step back and

453
00:15:30,560 --> 00:15:31,839
let's talk about all these different

454
00:15:31,839 --> 00:15:33,519
pieces so what is a process think of a

455
00:15:33,519 --> 00:15:35,680
process really it's just a container

456
00:15:35,680 --> 00:15:36,480
that

457
00:15:36,480 --> 00:15:39,680
is that hosts a whole bunch of resources

458
00:15:39,680 --> 00:15:41,199
to run an instance of a program so

459
00:15:41,199 --> 00:15:43,040
really like inside of a process you'll

460
00:15:43,040 --> 00:15:44,560
have threads you'll have memory you'll

461
00:15:44,560 --> 00:15:46,639
have tokens um

462
00:15:46,639 --> 00:15:48,160
and that is the process is meant to

463
00:15:48,160 --> 00:15:50,480
contain all those things it is backed by

464
00:15:50,480 --> 00:15:52,480
a structure within the kernel called the

465
00:15:52,480 --> 00:15:53,920
e-process structure and that'll be

466
00:15:53,920 --> 00:15:56,320
important here in a moment um and it's a

467
00:15:56,320 --> 00:15:58,959
process type kernel object also

468
00:15:58,959 --> 00:16:00,720
important here in a moment

469
00:16:00,720 --> 00:16:02,000
objects

470
00:16:02,000 --> 00:16:03,440
these are just data structures that need

471
00:16:03,440 --> 00:16:06,000
to be shared and protected and reflect

472
00:16:06,000 --> 00:16:08,959
some resource i'm right so a thread is

473
00:16:08,959 --> 00:16:11,279
an object a process is an object

474
00:16:11,279 --> 00:16:13,519
a token is an object these are all

475
00:16:13,519 --> 00:16:17,199
different types the registry as well

476
00:16:17,199 --> 00:16:18,880
anytime you want to access an object and

477
00:16:18,880 --> 00:16:20,639
do something with that target object you

478
00:16:20,639 --> 00:16:22,639
have to obtain something called a handle

479
00:16:22,639 --> 00:16:24,240
if you are in user mode in kernel mode

480
00:16:24,240 --> 00:16:26,160
you can do a pointer or you could have a

481
00:16:26,160 --> 00:16:28,399
handle but specifically within user mode

482
00:16:28,399 --> 00:16:30,639
you have to have a handle

483
00:16:30,639 --> 00:16:31,680
so what does that look like and what's

484
00:16:31,680 --> 00:16:34,320
the purpose of this a handle allows

485
00:16:34,320 --> 00:16:37,360
objects to be shared across processes

486
00:16:37,360 --> 00:16:39,040
this is simply just an entry within an

487
00:16:39,040 --> 00:16:41,519
internal table and it's used to regulate

488
00:16:41,519 --> 00:16:44,320
access to that target object

489
00:16:44,320 --> 00:16:45,839
once the handle is obtained to that

490
00:16:45,839 --> 00:16:47,040
target object

491
00:16:47,040 --> 00:16:49,759
dependent on the access that was granted

492
00:16:49,759 --> 00:16:51,279
the

493
00:16:51,279 --> 00:16:54,240
the source user can do whatever access

494
00:16:54,240 --> 00:16:55,680
that is and i'll get to that in a moment

495
00:16:55,680 --> 00:16:57,120
they just can't do anything higher than

496
00:16:57,120 --> 00:17:00,000
what they requested

497
00:17:00,560 --> 00:17:03,279
so what is access each object type has a

498
00:17:03,279 --> 00:17:04,959
set of access rights that allow the

499
00:17:04,959 --> 00:17:07,199
requester to perform a set of actions so

500
00:17:07,199 --> 00:17:09,119
an access right is simply just a bit

501
00:17:09,119 --> 00:17:11,199
flag that relates to the different type

502
00:17:11,199 --> 00:17:13,280
of accesses you might have on an object

503
00:17:13,280 --> 00:17:14,640
and then there's something called an

504
00:17:14,640 --> 00:17:18,640
access mask an access access mask

505
00:17:18,640 --> 00:17:21,280
really just defines what users and

506
00:17:21,280 --> 00:17:23,839
groups have access to that target object

507
00:17:23,839 --> 00:17:25,039
and so

508
00:17:25,039 --> 00:17:26,640
let's let's look at a practical example

509
00:17:26,640 --> 00:17:28,640
of this so there's an api out there

510
00:17:28,640 --> 00:17:30,400
called open process so say i want to

511
00:17:30,400 --> 00:17:32,559
access a target object specifically a

512
00:17:32,559 --> 00:17:35,360
process since this is process access um

513
00:17:35,360 --> 00:17:36,960
the first parameter that's passed

514
00:17:36,960 --> 00:17:38,240
through is

515
00:17:38,240 --> 00:17:40,799
called desired access and

516
00:17:40,799 --> 00:17:42,880
at the bottom it actually gives good

517
00:17:42,880 --> 00:17:44,799
documentation that this is just the

518
00:17:44,799 --> 00:17:46,880
access right to check the security

519
00:17:46,880 --> 00:17:48,880
descriptor of that process to see if

520
00:17:48,880 --> 00:17:50,799
that user has access to do that

521
00:17:50,799 --> 00:17:52,240
operation

522
00:17:52,240 --> 00:17:53,840
um

523
00:17:53,840 --> 00:17:55,919
so like i mentioned every object has

524
00:17:55,919 --> 00:17:58,480
these access rights these

525
00:17:58,480 --> 00:18:00,080
that will specify the operation that you

526
00:18:00,080 --> 00:18:02,080
want to perform with this object this is

527
00:18:02,080 --> 00:18:03,600
just a small screenshot there's a whole

528
00:18:03,600 --> 00:18:05,360
bunch of them within microsoft

529
00:18:05,360 --> 00:18:07,200
documentation so definitely suggest

530
00:18:07,200 --> 00:18:08,400
checking those out this is just a small

531
00:18:08,400 --> 00:18:09,840
screenshot of the process one and

532
00:18:09,840 --> 00:18:11,520
because olaf talked about the registry i

533
00:18:11,520 --> 00:18:13,760
wanted to show there are instances of

534
00:18:13,760 --> 00:18:15,600
this with the registry as well but we'll

535
00:18:15,600 --> 00:18:17,200
move forward i'm just talking

536
00:18:17,200 --> 00:18:19,520
specifically about processes since the

537
00:18:19,520 --> 00:18:21,200
um sub data source today we're worried

538
00:18:21,200 --> 00:18:22,080
about is

539
00:18:22,080 --> 00:18:24,160
process access

540
00:18:24,160 --> 00:18:27,200
so back to um sysmon event id 10

541
00:18:27,200 --> 00:18:28,559
there's a lot of really cool fields in

542
00:18:28,559 --> 00:18:30,640
here obviously there's the source image

543
00:18:30,640 --> 00:18:32,559
there is the source thread there's the

544
00:18:32,559 --> 00:18:34,080
source process

545
00:18:34,080 --> 00:18:36,480
there's also the target image the target

546
00:18:36,480 --> 00:18:38,640
process but most importantly one thing i

547
00:18:38,640 --> 00:18:40,799
want to get into is

548
00:18:40,799 --> 00:18:43,280
the granite access field um how many

549
00:18:43,280 --> 00:18:44,720
people here have like seen this and

550
00:18:44,720 --> 00:18:47,039
probably have seen like zero times one

551
00:18:47,039 --> 00:18:49,440
fff as it goes with mini malware or

552
00:18:49,440 --> 00:18:51,280
anything like that right great cool

553
00:18:51,280 --> 00:18:53,840
let's get into that um

554
00:18:53,840 --> 00:18:55,520
whenever a process wants to implement

555
00:18:55,520 --> 00:18:56,799
some function we're going to use

556
00:18:56,799 --> 00:18:59,679
minidump right dump here um on another

557
00:18:59,679 --> 00:19:01,520
process the reason why i chose this was

558
00:19:01,520 --> 00:19:03,600
for two reasons one dumping lsas is

559
00:19:03,600 --> 00:19:05,440
pretty popular and two it seems like

560
00:19:05,440 --> 00:19:07,120
every week there's another technique or

561
00:19:07,120 --> 00:19:09,120
way to dump elsa so

562
00:19:09,120 --> 00:19:10,480
figured this would be

563
00:19:10,480 --> 00:19:12,400
interesting to sum

564
00:19:12,400 --> 00:19:14,080
whenever this happens we need to

565
00:19:14,080 --> 00:19:16,160
identify the function the api that's

566
00:19:16,160 --> 00:19:17,679
being done so this is a screenshot of

567
00:19:17,679 --> 00:19:19,360
minidump right dump and the first

568
00:19:19,360 --> 00:19:20,720
parameter we can pass through is a

569
00:19:20,720 --> 00:19:22,480
handle great now we know that it needs a

570
00:19:22,480 --> 00:19:24,160
handle and has to specify those rights

571
00:19:24,160 --> 00:19:26,240
the question is what rights do i need in

572
00:19:26,240 --> 00:19:28,480
order to dump lsas with this particular

573
00:19:28,480 --> 00:19:30,400
api well

574
00:19:30,400 --> 00:19:32,640
within that first parameter it actually

575
00:19:32,640 --> 00:19:34,320
specifies that you need process query

576
00:19:34,320 --> 00:19:37,679
information process vm read

577
00:19:37,679 --> 00:19:40,480
whenever doing this great so now i know

578
00:19:40,480 --> 00:19:42,000
that is the minimum

579
00:19:42,000 --> 00:19:43,679
rights an attacker needs to leverage

580
00:19:43,679 --> 00:19:46,080
this api

581
00:19:46,080 --> 00:19:48,480
once that's identified i'm going to

582
00:19:48,480 --> 00:19:50,880
figure out what those relate to um and

583
00:19:50,880 --> 00:19:53,280
this is just the hex representation of

584
00:19:53,280 --> 00:19:55,440
what those accesses look like and it's

585
00:19:55,440 --> 00:19:57,039
gonna be 1410 so this is the minimum

586
00:19:57,039 --> 00:19:59,120
again that an attacker needs to do to

587
00:19:59,120 --> 00:20:01,919
dump lsas via many dump right them

588
00:20:01,919 --> 00:20:04,320
they um could grant uh higher but not

589
00:20:04,320 --> 00:20:06,559
less so essentially you could do like

590
00:20:06,559 --> 00:20:08,080
zero times one ff as many people have

591
00:20:08,080 --> 00:20:10,559
seen um and that's simply because people

592
00:20:10,559 --> 00:20:12,080
are just like give me all the rights and

593
00:20:12,080 --> 00:20:13,840
i'll do with this as i please once i get

594
00:20:13,840 --> 00:20:15,039
that handle

595
00:20:15,039 --> 00:20:16,080
so we're gonna get into bit rise

596
00:20:16,080 --> 00:20:18,960
operations um we there's if you haven't

597
00:20:18,960 --> 00:20:22,159
heard of these and or x or x and but we

598
00:20:22,159 --> 00:20:23,440
only are going to care about and today

599
00:20:23,440 --> 00:20:25,280
so i'm not going to speak about the rest

600
00:20:25,280 --> 00:20:26,960
um and this can be used with cis bonds

601
00:20:26,960 --> 00:20:29,360
even id 10 granted access it can be used

602
00:20:29,360 --> 00:20:31,360
any any event source that gives us that

603
00:20:31,360 --> 00:20:33,600
granted access right

604
00:20:33,600 --> 00:20:35,360
um and specifically whenever this is

605
00:20:35,360 --> 00:20:36,559
done we're going to see the binary

606
00:20:36,559 --> 00:20:38,720
representation of these access masks and

607
00:20:38,720 --> 00:20:40,000
we're just going to go down the line and

608
00:20:40,000 --> 00:20:41,760
we're going to see if both of those are

609
00:20:41,760 --> 00:20:43,360
one

610
00:20:43,360 --> 00:20:44,480
then that's a match and we're going to

611
00:20:44,480 --> 00:20:45,440
we're going to return one and

612
00:20:45,440 --> 00:20:47,679
essentially what we want to do with this

613
00:20:47,679 --> 00:20:50,000
is see with whatever access that was

614
00:20:50,000 --> 00:20:51,039
granted

615
00:20:51,039 --> 00:20:52,720
if the um

616
00:20:52,720 --> 00:20:54,240
the access right that the minimum that

617
00:20:54,240 --> 00:20:55,840
the attacker needs lives within that

618
00:20:55,840 --> 00:20:57,039
access mask

619
00:20:57,039 --> 00:20:58,880
just because a number looks higher than

620
00:20:58,880 --> 00:21:01,280
what an attacker needs doesn't mean it

621
00:21:01,280 --> 00:21:04,400
actually lives inside that

622
00:21:04,400 --> 00:21:07,200
um so say we have a normal um let's say

623
00:21:07,200 --> 00:21:10,720
proc dump does um all access it dumps it

624
00:21:10,720 --> 00:21:12,320
um and it's going to use many dump right

625
00:21:12,320 --> 00:21:14,320
them but does use that api

626
00:21:14,320 --> 00:21:15,440
does

627
00:21:15,440 --> 00:21:17,919
1410 live within all access so this is

628
00:21:17,919 --> 00:21:19,360
kind of what the math will look like i'm

629
00:21:19,360 --> 00:21:20,880
not going to get into it too much but

630
00:21:20,880 --> 00:21:22,640
again we're looking for matches of ones

631
00:21:22,640 --> 00:21:25,039
if those line up then we will see when

632
00:21:25,039 --> 00:21:27,280
those um correlate

633
00:21:27,280 --> 00:21:30,000
answer that question is yes um 1410 does

634
00:21:30,000 --> 00:21:31,520
live within um

635
00:21:31,520 --> 00:21:33,840
uh zero times one ff

636
00:21:33,840 --> 00:21:35,600
but what is the

637
00:21:35,600 --> 00:21:37,280
like how can we figure these out as

638
00:21:37,280 --> 00:21:39,200
defenders and how can we leverage this i

639
00:21:39,200 --> 00:21:40,640
think that's the big piece right what's

640
00:21:40,640 --> 00:21:42,799
the impact this is very easy to do

641
00:21:42,799 --> 00:21:44,400
inside of powershell

642
00:21:44,400 --> 00:21:45,360
um

643
00:21:45,360 --> 00:21:46,880
but there are actually some analytical

644
00:21:46,880 --> 00:21:48,400
platforms that allow you to do these

645
00:21:48,400 --> 00:21:50,720
operations as well jupiter if you're i

646
00:21:50,720 --> 00:21:51,679
don't know if anybody's a jupiter

647
00:21:51,679 --> 00:21:53,840
notebook fan here i very much am one um

648
00:21:53,840 --> 00:21:55,120
it definitely allows you to do that and

649
00:21:55,120 --> 00:21:57,200
then kuso as well will allow you to do

650
00:21:57,200 --> 00:21:59,840
this

651
00:22:00,080 --> 00:22:01,600
so let's look at examples because if

652
00:22:01,600 --> 00:22:04,400
it's not practical um like there is a

653
00:22:04,400 --> 00:22:06,080
threshold of research and practicality

654
00:22:06,080 --> 00:22:07,280
so let's look at the practicality of

655
00:22:07,280 --> 00:22:09,440
these um dumping elsa so let's get let's

656
00:22:09,440 --> 00:22:12,080
look at that mini dump write dump api um

657
00:22:12,080 --> 00:22:13,520
here we can see a query this is a

658
00:22:13,520 --> 00:22:15,440
detection that i wrote

659
00:22:15,440 --> 00:22:16,640
to my lab

660
00:22:16,640 --> 00:22:18,640
and essentially it's just going to use

661
00:22:18,640 --> 00:22:21,679
even id10 as the main

662
00:22:21,679 --> 00:22:24,080
data source for this detection

663
00:22:24,080 --> 00:22:25,600
keep in mind if you do this this is

664
00:22:25,600 --> 00:22:28,080
going to be very loud even id10 is very

665
00:22:28,080 --> 00:22:30,720
loud as when processes are accessed it

666
00:22:30,720 --> 00:22:32,000
happens all the time in the environment

667
00:22:32,000 --> 00:22:34,480
and if you allow this even event id to

668
00:22:34,480 --> 00:22:35,919
go through it's just going to be super

669
00:22:35,919 --> 00:22:37,679
noisy um

670
00:22:37,679 --> 00:22:39,520
so that being said let's look at an

671
00:22:39,520 --> 00:22:42,000
example of when it's like the secondary

672
00:22:42,000 --> 00:22:43,919
event id or the sub

673
00:22:43,919 --> 00:22:46,159
um

674
00:22:46,320 --> 00:22:48,240
sub data source within that and this is

675
00:22:48,240 --> 00:22:50,480
another example with uh

676
00:22:50,480 --> 00:22:51,919
read process memory but i want to get

677
00:22:51,919 --> 00:22:54,000
into the sub data piece one so process

678
00:22:54,000 --> 00:22:56,000
injection or by those process injection

679
00:22:56,000 --> 00:22:58,240
um reflective dll injections so this is

680
00:22:58,240 --> 00:23:00,400
specifically in this instance someone's

681
00:23:00,400 --> 00:23:02,720
using create remote thread api

682
00:23:02,720 --> 00:23:03,840
um

683
00:23:03,840 --> 00:23:06,000
and so here i'm using even id8 from

684
00:23:06,000 --> 00:23:07,200
sysmon

685
00:23:07,200 --> 00:23:09,280
but i'm actually leveraging the event id

686
00:23:09,280 --> 00:23:11,919
10 to tell me like hey does

687
00:23:11,919 --> 00:23:14,799
was create mode thread used whenever um

688
00:23:14,799 --> 00:23:17,440
actually whenever these events fired off

689
00:23:17,440 --> 00:23:19,760
and then if so what processes were those

690
00:23:19,760 --> 00:23:20,960
and what were the access rights that

691
00:23:20,960 --> 00:23:22,960
were actually given given to the

692
00:23:22,960 --> 00:23:24,960
defender

693
00:23:24,960 --> 00:23:27,200
wrapping up so again remember as

694
00:23:27,200 --> 00:23:28,559
defenders we have to look at the bigger

695
00:23:28,559 --> 00:23:30,320
picture and we have to understand our

696
00:23:30,320 --> 00:23:32,640
telemetry sources and understand really

697
00:23:32,640 --> 00:23:34,159
how we can leverage them to their full

698
00:23:34,159 --> 00:23:35,679
capacity

699
00:23:35,679 --> 00:23:37,200
and we have to understand within our

700
00:23:37,200 --> 00:23:39,440
organization as well what fits what

701
00:23:39,440 --> 00:23:42,559
makes sense what data sources really do

702
00:23:42,559 --> 00:23:44,000
we need in order to catch the things

703
00:23:44,000 --> 00:23:46,559
that we want

704
00:23:47,279 --> 00:23:49,360
and then

705
00:23:49,360 --> 00:23:52,240
again understanding um the telemetry is

706
00:23:52,240 --> 00:23:54,000
the key to unlocking the true potential

707
00:23:54,000 --> 00:23:55,200
there are a lot of really good open

708
00:23:55,200 --> 00:23:57,679
source projects that actually um go into

709
00:23:57,679 --> 00:23:59,760
some of these things the osun project uh

710
00:23:59,760 --> 00:24:02,480
sysmon modular by olaf that goes through

711
00:24:02,480 --> 00:24:04,400
these but um

712
00:24:04,400 --> 00:24:06,960
that is the end

713
00:24:06,960 --> 00:24:09,360
thank you

714
00:24:12,640 --> 00:24:14,080
oh i don't want to cramp your bloody

715
00:24:14,080 --> 00:24:15,279
spot here yeah i'll sneak in the middle

716
00:24:15,279 --> 00:24:16,480
yeah why not

717
00:24:16,480 --> 00:24:18,799
yeah i love this uh i feel like a

718
00:24:18,799 --> 00:24:20,080
there's a data component for this

719
00:24:20,080 --> 00:24:22,159
process modification or something yeah

720
00:24:22,159 --> 00:24:24,960
great great conversation great talk um i

721
00:24:24,960 --> 00:24:26,880
think we have a couple time for a couple

722
00:24:26,880 --> 00:24:29,520
questions but i really love you know

723
00:24:29,520 --> 00:24:31,600
kind of the theme of your talk was

724
00:24:31,600 --> 00:24:33,520
it's not arbitrary you don't just like

725
00:24:33,520 --> 00:24:34,720
haley said earlier you don't start in

726
00:24:34,720 --> 00:24:36,159
the top left of the matrix and work your

727
00:24:36,159 --> 00:24:38,000
way through and try to detect everything

728
00:24:38,000 --> 00:24:39,600
and i love kind of what you captured in

729
00:24:39,600 --> 00:24:41,679
terms of you know how do you start

730
00:24:41,679 --> 00:24:42,960
making those decisions it's a little bit

731
00:24:42,960 --> 00:24:44,240
knowing yourself it's a little bit

732
00:24:44,240 --> 00:24:45,760
knowing your adversary it's a little bit

733
00:24:45,760 --> 00:24:48,080
knowing like you said the impact

734
00:24:48,080 --> 00:24:50,000
for those out there that you know this

735
00:24:50,000 --> 00:24:51,520
really maybe for the first time they

736
00:24:51,520 --> 00:24:53,039
really saw deep in the weeds for texture

737
00:24:53,039 --> 00:24:54,960
engineering what kind of advice would

738
00:24:54,960 --> 00:24:56,880
you give because i you know very often

739
00:24:56,880 --> 00:24:59,360
myself included and lex has been there

740
00:24:59,360 --> 00:25:01,520
you know we we pick up on a topic we get

741
00:25:01,520 --> 00:25:03,120
in the weeds we dig down and access

742
00:25:03,120 --> 00:25:05,039
flags and things like that and it's like

743
00:25:05,039 --> 00:25:06,799
how do you bring that back out and like

744
00:25:06,799 --> 00:25:08,640
you said how do you show that back out

745
00:25:08,640 --> 00:25:10,159
to the organization and you know provide

746
00:25:10,159 --> 00:25:11,600
the value and kind of make that into

747
00:25:11,600 --> 00:25:13,760
threat modeling and other processes that

748
00:25:13,760 --> 00:25:15,600
are you know compounded in this decision

749
00:25:15,600 --> 00:25:17,279
yeah i would say the first thing i could

750
00:25:17,279 --> 00:25:19,039
say that is don't be scared um the

751
00:25:19,039 --> 00:25:21,600
biggest thing to remember as we continue

752
00:25:21,600 --> 00:25:23,120
as researchers is

753
00:25:23,120 --> 00:25:24,559
um we're not going to know it all and

754
00:25:24,559 --> 00:25:26,080
the deeper we go into something we might

755
00:25:26,080 --> 00:25:28,159
have unraveled a bias or something we

756
00:25:28,159 --> 00:25:30,240
didn't know prior and that that's

757
00:25:30,240 --> 00:25:32,400
phenomenal right but i um in order for

758
00:25:32,400 --> 00:25:34,000
that impact to be there there needs to

759
00:25:34,000 --> 00:25:35,760
be either some type of scalability

760
00:25:35,760 --> 00:25:39,200
potential or um some type of um

761
00:25:39,200 --> 00:25:43,440
like um output to our teams and so when

762
00:25:43,440 --> 00:25:44,480
going into some of these things the

763
00:25:44,480 --> 00:25:45,840
question might be like is it practical

764
00:25:45,840 --> 00:25:47,840
like if someone doesn't have uh jupiter

765
00:25:47,840 --> 00:25:49,760
notebooks or cousteau or have the analog

766
00:25:49,760 --> 00:25:52,640
platform to do some of those access um

767
00:25:52,640 --> 00:25:55,919
flag operations a bit max operations um

768
00:25:55,919 --> 00:25:57,440
it might not be realistic from the type

769
00:25:57,440 --> 00:25:58,880
of detection engineering they might have

770
00:25:58,880 --> 00:26:00,880
to look for specific ones but the point

771
00:26:00,880 --> 00:26:03,679
is to bring awareness in general around

772
00:26:03,679 --> 00:26:05,840
those behavioral opportunities for our

773
00:26:05,840 --> 00:26:06,880
environment

774
00:26:06,880 --> 00:26:09,039
excellent yeah i love that like comment

775
00:26:09,039 --> 00:26:10,400
because just because

776
00:26:10,400 --> 00:26:11,600
you know it's

777
00:26:11,600 --> 00:26:13,039
not having

778
00:26:13,039 --> 00:26:14,720
at the end of a good question you don't

779
00:26:14,720 --> 00:26:16,240
need to have the answer it's just the

780
00:26:16,240 --> 00:26:17,600
knowledge like you said even if you know

781
00:26:17,600 --> 00:26:19,120
your gaps and you know your limitations

782
00:26:19,120 --> 00:26:21,120
that in itself is more powerful than you

783
00:26:21,120 --> 00:26:22,480
know not being like you said being

784
00:26:22,480 --> 00:26:24,159
afraid of really digging and answering

785
00:26:24,159 --> 00:26:25,919
those tough questions absolutely

786
00:26:25,919 --> 00:26:26,799
um

787
00:26:26,799 --> 00:26:28,159
we have about maybe time for two

788
00:26:28,159 --> 00:26:30,320
questions i see a couple hands popping

789
00:26:30,320 --> 00:26:31,679
up anyone

790
00:26:31,679 --> 00:26:33,760
brave enough um

791
00:26:33,760 --> 00:26:35,600
while we give people a time moment i

792
00:26:35,600 --> 00:26:37,600
know olaf we've spoke about this in the

793
00:26:37,600 --> 00:26:38,720
past i know you come from a very

794
00:26:38,720 --> 00:26:41,679
artistic visual background uh what would

795
00:26:41,679 --> 00:26:43,919
you share in terms of you know the

796
00:26:43,919 --> 00:26:45,840
benefits that you've experienced you

797
00:26:45,840 --> 00:26:47,039
know really

798
00:26:47,039 --> 00:26:49,679
making really complex ideas more

799
00:26:49,679 --> 00:26:51,279
tangible like what are you what is kind

800
00:26:51,279 --> 00:26:52,480
of you know the

801
00:26:52,480 --> 00:26:54,559
thought process that goes into that

802
00:26:54,559 --> 00:26:56,480
yeah personally for me it's it's just

803
00:26:56,480 --> 00:26:59,039
easier if i see it right so having all

804
00:26:59,039 --> 00:27:00,799
these excel sheets is great because it

805
00:27:00,799 --> 00:27:02,480
can automatically search through it but

806
00:27:02,480 --> 00:27:04,320
but in the graph database you can do the

807
00:27:04,320 --> 00:27:06,640
same but i can visualize it for myself

808
00:27:06,640 --> 00:27:09,200
and it's so much quicker if you saw one

809
00:27:09,200 --> 00:27:10,320
of those graphs you could immediately

810
00:27:10,320 --> 00:27:12,400
see okay i need this this and that

811
00:27:12,400 --> 00:27:14,400
whereas that mental reference might be

812
00:27:14,400 --> 00:27:16,159
there somewhere but if i can visualize

813
00:27:16,159 --> 00:27:18,320
it for myself it's so much quicker

814
00:27:18,320 --> 00:27:20,000
and then i can also flip it around so

815
00:27:20,000 --> 00:27:22,880
what what i recently did is add all the

816
00:27:22,880 --> 00:27:25,360
components to our detections and

817
00:27:25,360 --> 00:27:27,600
basically start looking at hey the

818
00:27:27,600 --> 00:27:29,520
detections that i wrote are they

819
00:27:29,520 --> 00:27:32,000
actually the same as miter reference so

820
00:27:32,000 --> 00:27:33,279
i can see

821
00:27:33,279 --> 00:27:35,039
in the case of some detections that i

822
00:27:35,039 --> 00:27:37,120
use a data source or a specific event id

823
00:27:37,120 --> 00:27:38,559
that isn't referenced or the other way

824
00:27:38,559 --> 00:27:39,520
around

825
00:27:39,520 --> 00:27:41,279
and then i can either improve my

826
00:27:41,279 --> 00:27:42,960
detection or i can submit something to

827
00:27:42,960 --> 00:27:45,200
you guys and see if it would fit so

828
00:27:45,200 --> 00:27:46,880
these kind of things

829
00:27:46,880 --> 00:27:49,279
are very difficult to do for me at least

830
00:27:49,279 --> 00:27:51,039
not having it in a graphical way it's

831
00:27:51,039 --> 00:27:53,440
just a quicker way for me to to digest

832
00:27:53,440 --> 00:27:55,039
it i don't think i'm in the same boat so

833
00:27:55,039 --> 00:27:56,480
i very much appreciate all the work you

834
00:27:56,480 --> 00:27:58,080
do in that space to really like you know

835
00:27:58,080 --> 00:28:01,360
said um kind of not just you know just

836
00:28:01,360 --> 00:28:03,039
being different but also just being more

837
00:28:03,039 --> 00:28:04,240
inclusive of different types of

838
00:28:04,240 --> 00:28:06,240
personalities because i i myself i will

839
00:28:06,240 --> 00:28:07,600
read something if you put a picture next

840
00:28:07,600 --> 00:28:08,640
to it i'm going to remember the picture

841
00:28:08,640 --> 00:28:11,120
not though all the words are really fun

842
00:28:11,120 --> 00:28:13,120
but um i think we're coming up on time

843
00:28:13,120 --> 00:28:14,880
here but one final question i wanted to

844
00:28:14,880 --> 00:28:17,120
have you know kind of ask you both was

845
00:28:17,120 --> 00:28:19,279
you know going forward you know what can

846
00:28:19,279 --> 00:28:21,520
we as the attack team do to you know

847
00:28:21,520 --> 00:28:22,640
like i said one of our biggest goals

848
00:28:22,640 --> 00:28:23,840
with this data sources and data

849
00:28:23,840 --> 00:28:26,080
components was bridging the gap between

850
00:28:26,080 --> 00:28:28,799
as i said earlier kind of the abstract

851
00:28:28,799 --> 00:28:31,200
and the universal down to the you know

852
00:28:31,200 --> 00:28:32,720
what are the real practitioners doing

853
00:28:32,720 --> 00:28:34,880
day to day what problems do they see you

854
00:28:34,880 --> 00:28:37,039
know any any suggestions for us the

855
00:28:37,039 --> 00:28:38,480
attack team as well as the community

856
00:28:38,480 --> 00:28:40,640
what can we do better i would say the

857
00:28:40,640 --> 00:28:41,760
biggest thing that i would see is

858
00:28:41,760 --> 00:28:43,279
there's a lot of correlation going from

859
00:28:43,279 --> 00:28:45,360
the data source up to like the technique

860
00:28:45,360 --> 00:28:46,880
but maybe spreading that the data

861
00:28:46,880 --> 00:28:48,640
sources or the sub data sources to

862
00:28:48,640 --> 00:28:50,559
relevant event ids that we see commonly

863
00:28:50,559 --> 00:28:52,799
within the environment the community um

864
00:28:52,799 --> 00:28:54,000
so like cis

865
00:28:54,000 --> 00:28:56,720
security events um you know mde things

866
00:28:56,720 --> 00:28:58,399
like that that might be very beneficial

867
00:28:58,399 --> 00:29:00,320
to people and then um maybe have some

868
00:29:00,320 --> 00:29:02,799
type of repository for those tables that

869
00:29:02,799 --> 00:29:05,360
might exist make it real yeah

870
00:29:05,360 --> 00:29:06,880
yeah i think we discussed this earlier

871
00:29:06,880 --> 00:29:09,600
as well we private but i think having a

872
00:29:09,600 --> 00:29:12,640
classifier or a waiting system to to the

873
00:29:12,640 --> 00:29:14,320
event or to the at least to the

874
00:29:14,320 --> 00:29:16,480
component so which component is the most

875
00:29:16,480 --> 00:29:18,720
likely to give you the best detection

876
00:29:18,720 --> 00:29:19,919
and of course sometimes you need to

877
00:29:19,919 --> 00:29:22,000
correlate and do multiples i think that

878
00:29:22,000 --> 00:29:24,000
will be useful for a lot of people to

879
00:29:24,000 --> 00:29:26,240
start i mean if you get all the

880
00:29:26,240 --> 00:29:27,360
techniques that you have to build like

881
00:29:27,360 --> 00:29:29,200
haley described

882
00:29:29,200 --> 00:29:31,360
where right like so so having that

883
00:29:31,360 --> 00:29:34,080
direction and maybe in the high level

884
00:29:34,080 --> 00:29:36,240
description from that same detection

885
00:29:36,240 --> 00:29:37,600
perspective

886
00:29:37,600 --> 00:29:40,320
give a couple of pointers what is yeah

887
00:29:40,320 --> 00:29:41,760
like guidance you don't have to give the

888
00:29:41,760 --> 00:29:44,080
rules i think but but steering people in

889
00:29:44,080 --> 00:29:45,200
the right direction would already

890
00:29:45,200 --> 00:29:46,960
benefit a lot of people i love that and

891
00:29:46,960 --> 00:29:48,880
it goes back to not being scared or even

892
00:29:48,880 --> 00:29:50,080
if we can't answer the question let's

893
00:29:50,080 --> 00:29:51,679
ask it and you know absolutely a step in

894
00:29:51,679 --> 00:29:53,520
the right direction is a step forward

895
00:29:53,520 --> 00:29:55,760
well thank you both and thank you yeah

896
00:29:55,760 --> 00:29:56,990
thank you

897
00:29:56,990 --> 00:30:02,150
[Applause]

