1
00:00:01,040 --> 00:00:03,540
- [Katie] Please join me in
welcoming Karl Scheuerman

2
00:00:03,540 --> 00:00:04,890
and Piotr Wojtyla.

3
00:00:05,938 --> 00:00:08,937
(audience applauds)

4
00:00:11,190 --> 00:00:12,023
- Well done.

5
00:00:16,107 --> 00:00:18,173
- Great, thank you so much Katie.

6
00:00:19,760 --> 00:00:22,410
And thank you to the,

7
00:00:22,410 --> 00:00:23,243
my mic?

8
00:00:26,830 --> 00:00:28,000
There, is that better?

9
00:00:28,000 --> 00:00:28,910
There we go.

10
00:00:28,910 --> 00:00:29,940
Thanks.

11
00:00:29,940 --> 00:00:33,240
Well good afternoon everyone,
it is a privilege to be here,

12
00:00:33,240 --> 00:00:34,690
and presenting at ATT&CK Con,

13
00:00:34,690 --> 00:00:36,919
thank you very much to
Katie for the introduction,

14
00:00:36,920 --> 00:00:39,150
and to the ATT&CK team for having us here.

15
00:00:39,150 --> 00:00:42,690
I'm Karl and I'm joined by my
friend and colleague, Piotr.

16
00:00:42,690 --> 00:00:45,640
We are from CrowdStrike, we are members

17
00:00:45,640 --> 00:00:47,820
of the CrowdStrike OverWatch
threat hunting team.

18
00:00:47,820 --> 00:00:49,430
OverWatch is our threat hunting service,

19
00:00:49,430 --> 00:00:50,790
and on the OverWatch team

20
00:00:50,790 --> 00:00:53,230
we have been using ATT&CK
for a few years now,

21
00:00:53,230 --> 00:00:54,559
and it's been great for us,

22
00:00:54,560 --> 00:00:57,180
and what we'd like to
talk with you about today

23
00:00:57,180 --> 00:00:59,600
is how, in particular,
over just this past year,

24
00:00:59,600 --> 00:01:02,060
we've made some significant
enhancements and improvements

25
00:01:02,060 --> 00:01:03,720
to how we are implementing ATT&CK

26
00:01:03,720 --> 00:01:05,673
into our threat hunting processes.

27
00:01:07,690 --> 00:01:10,270
But first, a quick word
on our backgrounds,

28
00:01:10,270 --> 00:01:13,320
I started my career in
government doin' the military

29
00:01:13,320 --> 00:01:14,500
and intelligence community thing,

30
00:01:14,500 --> 00:01:17,310
and I've now been at
CrowdStrike for over four years,

31
00:01:17,310 --> 00:01:19,310
and I've been on our
OverWatch threat hunting team

32
00:01:19,310 --> 00:01:21,280
for that entire time.

33
00:01:21,280 --> 00:01:23,510
I also still serve in a part-time capacity

34
00:01:23,510 --> 00:01:24,630
in the Air National Guard,

35
00:01:24,630 --> 00:01:26,060
I'm the director of operations

36
00:01:26,060 --> 00:01:28,580
for a cyber-intelligence
squadron up in Washington state,

37
00:01:28,580 --> 00:01:30,220
so I know a few speakers already today

38
00:01:30,220 --> 00:01:32,789
have talked about ways that
you can serve and give back,

39
00:01:32,790 --> 00:01:34,870
like being an adjunct
professor and teaching,

40
00:01:34,870 --> 00:01:36,760
well, of course serving
in the reserve component

41
00:01:36,760 --> 00:01:38,740
is another way to give
back to the community and,

42
00:01:38,740 --> 00:01:39,690
as a national guardsman,

43
00:01:39,690 --> 00:01:41,590
I'm obligated to be a shameless recruiter,

44
00:01:41,590 --> 00:01:43,700
so if anybody is interested in serving,

45
00:01:43,700 --> 00:01:45,060
giving back in that capacity,

46
00:01:45,060 --> 00:01:46,950
I'd be more than happy
to talk to you about that

47
00:01:46,950 --> 00:01:48,283
during one of the breaks.

48
00:01:53,720 --> 00:01:54,553
- [Piotr] Hello?

49
00:01:54,553 --> 00:01:55,470
Yeah, cool.

50
00:01:55,470 --> 00:01:56,640
Hey everyone, it's great to be here.

51
00:01:56,640 --> 00:01:57,940
My name is Piotr Wojtyla,

52
00:01:57,940 --> 00:02:00,090
and I've been previously involved more,

53
00:02:00,090 --> 00:02:02,720
mostly in instant response, but now,

54
00:02:02,720 --> 00:02:05,070
with our threat hunting
and OverWatch team,

55
00:02:05,070 --> 00:02:07,050
more in a research position, so,

56
00:02:07,050 --> 00:02:08,300
I don't really know what I do,

57
00:02:08,300 --> 00:02:10,813
I just do different things
that they ask of me.

58
00:02:13,890 --> 00:02:17,170
- All right, so, our agenda for today,

59
00:02:17,170 --> 00:02:19,670
we are going to talk to you
about attacking the hard way,

60
00:02:19,670 --> 00:02:22,049
that is, the way that we were
doing it before this year,

61
00:02:22,050 --> 00:02:24,730
which, had some challenges
that we'll talk about,

62
00:02:24,730 --> 00:02:26,670
and then I'll talk about the ways

63
00:02:26,670 --> 00:02:29,559
that we have made some
improvements to that,

64
00:02:29,560 --> 00:02:33,060
and now we're implementing
ATT&CK in a much easier way,

65
00:02:33,060 --> 00:02:35,280
you could say, and then we'll wrap up

66
00:02:35,280 --> 00:02:37,670
with talking about some interesting TTPs

67
00:02:37,670 --> 00:02:41,309
we've seen in the wild over
the first half of this year,

68
00:02:41,310 --> 00:02:43,740
which, sharing those examples we think

69
00:02:43,740 --> 00:02:46,370
helps validate the successes
we've had in these improvements

70
00:02:46,370 --> 00:02:49,530
and how we've been implementing
ATT&CK here more recently.

71
00:02:49,530 --> 00:02:52,090
Also a few other notes
I should mention is,

72
00:02:52,090 --> 00:02:54,100
when we refer to specific adversaries,

73
00:02:54,100 --> 00:02:56,430
of course, as has been
mentioned several times today,

74
00:02:56,430 --> 00:02:57,940
there's different naming
conventions, right,

75
00:02:57,940 --> 00:03:00,190
we use that CrowdStrike naming convention,

76
00:03:00,190 --> 00:03:02,620
which is the national animal theme, so,

77
00:03:02,620 --> 00:03:05,260
when we say a Panda,
that's a Chinese adversary,

78
00:03:05,260 --> 00:03:09,160
and when we say a Chollima,
that's a North Korean adversary,

79
00:03:09,160 --> 00:03:11,060
Bears are Russian, and so on,

80
00:03:11,060 --> 00:03:12,190
and then if we say Spiders,

81
00:03:12,190 --> 00:03:13,670
that's referring to a criminal adversary,

82
00:03:13,670 --> 00:03:15,549
so sometimes we throw
those things out without,

83
00:03:15,550 --> 00:03:18,320
just somewhat naturally, but
that's what we're referring to.

84
00:03:18,320 --> 00:03:21,519
And one other note as
we get started here is,

85
00:03:21,520 --> 00:03:23,890
that the content we're sharing today,

86
00:03:23,890 --> 00:03:28,440
these interesting findings,
the valuable work that's been,

87
00:03:28,440 --> 00:03:30,800
that has led to significant findings

88
00:03:30,800 --> 00:03:32,020
from our threat hunting operations

89
00:03:32,020 --> 00:03:35,790
is the result of an entire team
of OverWatch threat hunters.

90
00:03:35,790 --> 00:03:37,730
Piotr and I can't take all the credit

91
00:03:37,730 --> 00:03:39,019
for what is being shared today,

92
00:03:39,020 --> 00:03:41,400
they're the ones who deserve that credit.

93
00:03:41,400 --> 00:03:43,500
We have a great team of very
skilled and experienced hunters

94
00:03:43,500 --> 00:03:44,750
that we're grateful for,

95
00:03:44,750 --> 00:03:46,580
and so this is very much a team effort

96
00:03:46,580 --> 00:03:48,430
that's resulted in this presentation.

97
00:03:50,600 --> 00:03:51,950
Okay, attacking the hard way,

98
00:03:51,950 --> 00:03:54,380
how were we implementing and using ATT&CK

99
00:03:54,380 --> 00:03:55,953
prior to this year?

100
00:03:57,280 --> 00:04:00,220
Well it was a challenge
in the sense that we,

101
00:04:00,220 --> 00:04:01,490
it was laborious.

102
00:04:01,490 --> 00:04:04,297
We got a lot of value out of using ATT&CK.

103
00:04:04,297 --> 00:04:07,859
ATT&CK has given us some
great improvements overall

104
00:04:07,860 --> 00:04:10,130
in our threat hunting service
that we provide for customers,

105
00:04:10,130 --> 00:04:12,420
because it's allowed us to standardize

106
00:04:12,420 --> 00:04:14,950
and more clearly communicate
our threat findings

107
00:04:14,950 --> 00:04:15,783
to customers.

108
00:04:15,783 --> 00:04:17,899
It's allowed us from an
intelligence perspective

109
00:04:17,899 --> 00:04:21,929
to more effectively and
accurately track adversary trends

110
00:04:21,930 --> 00:04:22,763
over time.

111
00:04:22,763 --> 00:04:24,080
That's all been really good stuff.

112
00:04:24,080 --> 00:04:28,859
And, as far as how we've
gone about using ATT&CK

113
00:04:28,860 --> 00:04:30,140
in the past, more specifically,

114
00:04:30,140 --> 00:04:33,190
what we do is, when we
identify targeted intrusions,

115
00:04:33,190 --> 00:04:35,760
we go back and we review all of the data,

116
00:04:35,760 --> 00:04:38,800
and manually map that
back to attack techniques,

117
00:04:38,800 --> 00:04:41,370
and we leverage all data
sources we have access to,

118
00:04:41,370 --> 00:04:44,430
so primarily that's our
Falcon endpoint product.

119
00:04:44,430 --> 00:04:46,770
We have endpoint event data
that comes into our cloud

120
00:04:46,770 --> 00:04:51,210
and we can partition off the
portions of that activity

121
00:04:51,210 --> 00:04:53,400
that's relevant to a targeted intrusion,

122
00:04:53,400 --> 00:04:56,450
and map that, we also rely
upon any forensics data

123
00:04:56,450 --> 00:04:58,300
that our services incident response teams

124
00:04:58,300 --> 00:04:59,670
can pull back for us,

125
00:04:59,670 --> 00:05:01,450
for relevant intrusions as well,

126
00:05:01,450 --> 00:05:03,909
and then if there are
samples from the activity

127
00:05:03,910 --> 00:05:06,580
that our intelligence team
can get ahold of and reverse,

128
00:05:06,580 --> 00:05:10,359
and do some binary analysis
on, we'll pull that in as well,

129
00:05:10,360 --> 00:05:13,262
so any and every resource
we can, we pull that in,

130
00:05:13,262 --> 00:05:17,310
and then map that manually
by going through that data

131
00:05:17,310 --> 00:05:18,320
as human analysts

132
00:05:18,320 --> 00:05:20,940
and identifying when certain
techniques are employed,

133
00:05:20,940 --> 00:05:23,950
and manually map that back
to particular techniques.

134
00:05:23,950 --> 00:05:26,450
Now, when we have done that mapping,

135
00:05:26,450 --> 00:05:28,860
both prior to this year
and still this year,

136
00:05:28,860 --> 00:05:31,660
we're only doing that
for targeted intrusions,

137
00:05:31,660 --> 00:05:33,160
and that is those state-sponsored,

138
00:05:33,160 --> 00:05:35,010
or even criminally motivated,

139
00:05:35,010 --> 00:05:37,550
targeted actors who're going
after specific organizations,

140
00:05:37,550 --> 00:05:38,760
often times that's interactive,

141
00:05:38,760 --> 00:05:40,250
hands-on keyboard type of activity.

142
00:05:40,250 --> 00:05:43,890
We're not targeting the
more common, low-level,

143
00:05:43,890 --> 00:05:46,380
noisy commodity-type malware threats

144
00:05:46,380 --> 00:05:49,210
that is also seen often,
out there in the wild,

145
00:05:49,210 --> 00:05:50,849
these are, these are
those targeted adversaries

146
00:05:50,850 --> 00:05:53,080
that we're taking the time
to map, but even still,

147
00:05:53,080 --> 00:05:55,169
given the fact that we're analyzing new,

148
00:05:55,170 --> 00:05:57,380
targeted intrusion
activity on daily basis,

149
00:05:57,380 --> 00:06:01,020
this is, this is a laborious process

150
00:06:01,020 --> 00:06:03,930
when you're having to
do all of this manually,

151
00:06:03,930 --> 00:06:05,270
hence the illustration here

152
00:06:05,270 --> 00:06:07,820
of Sisyphus constantly
pushing that rock up the hill.

153
00:06:07,820 --> 00:06:09,950
It seemed like we were
constantly overwhelmed

154
00:06:09,950 --> 00:06:11,530
and having a difficult time keeping up,

155
00:06:11,530 --> 00:06:13,940
doing this in a very manual process.

156
00:06:13,940 --> 00:06:16,790
So, we've made some changes this year,

157
00:06:16,790 --> 00:06:19,460
and we decided hey, we need
to automate some of this,

158
00:06:19,460 --> 00:06:20,640
at least as much as possible,

159
00:06:20,640 --> 00:06:22,510
at least as much that makes sense.

160
00:06:22,510 --> 00:06:24,330
And some of that automation was motivated

161
00:06:24,330 --> 00:06:26,979
by some of the presentations
given last year at ATT&CK Con,

162
00:06:26,980 --> 00:06:28,470
where there were some presenters

163
00:06:28,470 --> 00:06:30,750
who talked about the pros and cons

164
00:06:30,750 --> 00:06:33,330
of automating attack technique mapping.

165
00:06:33,330 --> 00:06:34,993
So we decided yeah, we're gonna
give that a shot this year,

166
00:06:34,993 --> 00:06:36,710
what're some ways we can do that,

167
00:06:36,710 --> 00:06:39,960
and so that's taken a few
different forms for us.

168
00:06:39,960 --> 00:06:41,150
First and foremost,

169
00:06:41,150 --> 00:06:44,030
we have taken advantage
of our own product itself,

170
00:06:44,030 --> 00:06:45,969
so the Falcon endpoint product

171
00:06:45,970 --> 00:06:48,830
that we use for a lot of our
hunting, in and of itself,

172
00:06:48,830 --> 00:06:52,609
it already is looking for
specific malicious behaviors,

173
00:06:52,610 --> 00:06:55,720
and those behaviors, when they are fired,

174
00:06:55,720 --> 00:06:57,790
when they're triggered as
detections in the product,

175
00:06:57,790 --> 00:07:01,150
those detections are already
mapped to the most likely,

176
00:07:01,150 --> 00:07:03,500
most common attack technique
for that type of behavior,

177
00:07:03,500 --> 00:07:06,560
so hey, that's a, that's a
resource we can take advantage of

178
00:07:06,560 --> 00:07:09,450
to help automatically populate
these technique mappings

179
00:07:09,450 --> 00:07:10,840
for targeted intrusions,

180
00:07:10,840 --> 00:07:12,179
because those targeted intrusions

181
00:07:12,180 --> 00:07:14,050
are going to often times trigger

182
00:07:14,050 --> 00:07:16,100
at least some of those detections

183
00:07:16,100 --> 00:07:18,150
within that product itself,

184
00:07:18,150 --> 00:07:20,049
so that's good, we can
take advantage of that.

185
00:07:20,050 --> 00:07:21,140
Also as a threat hunting team,

186
00:07:21,140 --> 00:07:23,789
there's a lot more beyond
our product detections,

187
00:07:23,790 --> 00:07:26,040
of behaviors that we are looking for,

188
00:07:26,040 --> 00:07:28,760
a lot more experimental
hunting leads that,

189
00:07:28,760 --> 00:07:30,969
similarly can, to an extent,

190
00:07:30,970 --> 00:07:34,750
be mapped in advance to a most common,

191
00:07:34,750 --> 00:07:37,320
a most likely attack technique associated

192
00:07:37,320 --> 00:07:38,450
with that behavior,

193
00:07:38,450 --> 00:07:40,420
so hey, there's another
whole batch of resources

194
00:07:40,420 --> 00:07:41,900
we can take into account, so,

195
00:07:41,900 --> 00:07:44,260
using some of those types of capabilities,

196
00:07:44,260 --> 00:07:47,719
we scripted up some
capabilities that allow us then

197
00:07:47,720 --> 00:07:50,380
to take a set of targeted intrusion data,

198
00:07:50,380 --> 00:07:52,250
and run it through that scripting engine,

199
00:07:52,250 --> 00:07:56,840
and output for us,
automated, mapped techniques

200
00:07:56,840 --> 00:07:59,590
for that particular targeted
intrusion, which is great.

201
00:08:00,850 --> 00:08:05,850
So here you see a very stripped
down version of the output

202
00:08:06,510 --> 00:08:08,750
from that automated mapping that we do.

203
00:08:08,750 --> 00:08:09,980
Some of the fields are limited,

204
00:08:09,980 --> 00:08:12,893
but the most relevant
key pieces here we've,

205
00:08:12,893 --> 00:08:15,580
is what we're honing in on here for focus.

206
00:08:15,580 --> 00:08:17,400
So in that first column,

207
00:08:17,400 --> 00:08:19,099
you've got the technique
that's been mapped

208
00:08:19,100 --> 00:08:20,260
and then of course a timestamp

209
00:08:20,260 --> 00:08:22,260
and then the associated
command line activity

210
00:08:22,260 --> 00:08:25,750
for the behavior that was
auto-mapped, if you will.

211
00:08:25,750 --> 00:08:28,100
So we'll look at that first line briefly,

212
00:08:28,100 --> 00:08:30,080
up here in the process,

213
00:08:30,080 --> 00:08:31,950
the process injection technique mapping,

214
00:08:31,950 --> 00:08:34,569
so what's happening there, is in that,

215
00:08:34,570 --> 00:08:36,760
Search Protocol Host process,

216
00:08:36,760 --> 00:08:41,020
a Cobalt Strike implant has
been injected into that process,

217
00:08:41,020 --> 00:08:43,380
and is acting as that malicious implant,

218
00:08:43,380 --> 00:08:46,150
therefore, oh yeah, process
injection is making sense.

219
00:08:46,150 --> 00:08:47,459
And I, I should say too,

220
00:08:47,460 --> 00:08:50,250
that this is a real-world
example from earlier this year,

221
00:08:50,250 --> 00:08:52,230
there, this was a criminally-motivated,

222
00:08:52,230 --> 00:08:57,230
targeted intrusion against a
financial sector institution.

223
00:08:58,250 --> 00:09:01,160
And, so yeah, this is all
from that same intrusion,

224
00:09:01,160 --> 00:09:04,469
real-world data, and the next technique,

225
00:09:04,470 --> 00:09:06,860
if you go next down the line,

226
00:09:06,860 --> 00:09:09,780
you see there's masquerading
that has been mapped

227
00:09:09,780 --> 00:09:13,199
to a similar Search Protocol Host process.

228
00:09:13,200 --> 00:09:16,880
Now, what's happening here is,

229
00:09:16,880 --> 00:09:20,180
this flagged on a particular
behavior that was pre-mapped,

230
00:09:20,180 --> 00:09:21,219
that we mapped to masquerading

231
00:09:21,220 --> 00:09:23,640
because it's looking for unusual execution

232
00:09:23,640 --> 00:09:25,180
of Search Protocol Host.

233
00:09:25,180 --> 00:09:28,449
Essentially, when Search Protocol
Host is executed normally,

234
00:09:28,450 --> 00:09:29,283
it's going to have

235
00:09:29,283 --> 00:09:31,090
additional command line arguments with it,

236
00:09:31,090 --> 00:09:33,550
so when it's executed in this fashion,

237
00:09:33,550 --> 00:09:35,400
there's no additional
command line arguments.

238
00:09:35,400 --> 00:09:36,670
Something weird's going on,

239
00:09:36,670 --> 00:09:39,349
we typically would think
that that's maybe a,

240
00:09:39,350 --> 00:09:42,360
some other piece of malware
that's trying to masquerade

241
00:09:42,360 --> 00:09:43,440
as Search Protocol Host.

242
00:09:43,440 --> 00:09:45,780
Well, what's really happening here

243
00:09:45,780 --> 00:09:48,230
is that Search Protocol Host

244
00:09:48,230 --> 00:09:49,890
is what is actually running here,

245
00:09:49,890 --> 00:09:52,620
this is legit Search Protocol
Host, but it's behaving,

246
00:09:52,620 --> 00:09:54,810
it's executing in a strange fashion

247
00:09:54,810 --> 00:09:57,359
because of that Cobalt Strike
activity I mentioned earlier

248
00:09:57,360 --> 00:10:00,210
that had been mapped previously
to process injection,

249
00:10:00,210 --> 00:10:03,150
so for masquerading,
it's not a true mapping,

250
00:10:03,150 --> 00:10:06,569
it's not a very accurate
automated mapping,

251
00:10:06,570 --> 00:10:08,410
because that's not the
type of masquerading

252
00:10:08,410 --> 00:10:11,350
that we were looking for when
we originally created the map

253
00:10:11,350 --> 00:10:15,050
from that pattern to the
technique of masquerading.

254
00:10:15,050 --> 00:10:16,530
So this, right then and there

255
00:10:16,530 --> 00:10:18,280
shows you some of the limitations

256
00:10:18,280 --> 00:10:21,000
that come with automating
attack technique mapping,

257
00:10:21,000 --> 00:10:22,500
at least in this fashion.

258
00:10:22,500 --> 00:10:24,740
So that would be an example
of something we'd filter out

259
00:10:24,740 --> 00:10:26,890
from our final results
and have to go through,

260
00:10:26,890 --> 00:10:30,240
so, even here, even still with
this automation happening,

261
00:10:30,240 --> 00:10:32,430
you still need that
human analyst in the loop

262
00:10:32,430 --> 00:10:34,760
to go through and verify accuracy,

263
00:10:34,760 --> 00:10:36,310
validate those findings to make sure

264
00:10:36,310 --> 00:10:39,239
that the automated mapping is correct.

265
00:10:39,240 --> 00:10:40,830
Continuing down the line,

266
00:10:40,830 --> 00:10:42,680
command line interface, that's
pretty self-explanatory,

267
00:10:42,680 --> 00:10:44,260
the adversary was using a command shelf

268
00:10:44,260 --> 00:10:46,530
for some of their operations.

269
00:10:46,530 --> 00:10:48,439
Next you'll see a couple techniques listed

270
00:10:48,440 --> 00:10:49,840
as sensor-based ML.

271
00:10:49,840 --> 00:10:51,630
Of course, we recognize that that's not a,

272
00:10:51,630 --> 00:10:53,360
that's not a official attack technique,

273
00:10:53,360 --> 00:10:55,250
that's an internal naming convention

274
00:10:55,250 --> 00:10:57,770
that we use just because there're
a couple pieces of malware

275
00:10:57,770 --> 00:11:00,819
as part of this attack that were executed

276
00:11:00,820 --> 00:11:05,489
that triggered our next-gen
AV machine learning algorithms

277
00:11:05,489 --> 00:11:07,730
that were identified,

278
00:11:07,730 --> 00:11:11,560
and since that malware in that
generic sense doesn't really,

279
00:11:11,560 --> 00:11:13,640
it's too difficult to map
it to a single technique,

280
00:11:13,640 --> 00:11:15,069
we just have that placeholder

281
00:11:15,070 --> 00:11:17,150
as sensor-based machine learning there,

282
00:11:17,150 --> 00:11:18,400
so that's what's happening in that,

283
00:11:18,400 --> 00:11:20,420
those two lines of results.

284
00:11:20,420 --> 00:11:21,939
And then the final result,

285
00:11:21,940 --> 00:11:25,940
you see Windows admin shares
was automatically mapped

286
00:11:25,940 --> 00:11:30,310
to the behavior in that last
final large command line here,

287
00:11:30,310 --> 00:11:32,349
and, what's happening in that behavior,

288
00:11:32,350 --> 00:11:34,440
what the pattern was
that triggered on that,

289
00:11:34,440 --> 00:11:36,313
was a pattern looking for SMBexec.

290
00:11:37,500 --> 00:11:39,270
Many of you are probably
familiar with SMBexec,

291
00:11:39,270 --> 00:11:41,960
it's that open source tool
that acts like PsExec,

292
00:11:41,960 --> 00:11:43,730
essentially allows adversaries,

293
00:11:43,730 --> 00:11:45,780
we see targeted adversaries
use it from time to time,

294
00:11:45,780 --> 00:11:49,040
they use that to perform
execution of malicious activity

295
00:11:49,040 --> 00:11:52,384
on remote hosts, so because
of that remote behavior,

296
00:11:52,384 --> 00:11:56,460
we auto pre-mapped that to Windows shares,

297
00:11:56,460 --> 00:11:58,350
because it often uses Windows shares

298
00:11:58,350 --> 00:12:00,860
to perform that execution
on the remote hosts.

299
00:12:00,860 --> 00:12:03,897
But you can see here, this says,

300
00:12:03,897 --> 00:12:05,480
there's something
different happening here,

301
00:12:05,480 --> 00:12:09,110
this actually is the SMBexec
tool used in this intrusion,

302
00:12:09,110 --> 00:12:10,550
and there's a lot happening there,

303
00:12:10,550 --> 00:12:12,329
I don't have time to go
into all the details,

304
00:12:12,330 --> 00:12:13,640
but essentially what it's doing

305
00:12:13,640 --> 00:12:15,520
is it's actually executing on local hosts,

306
00:12:15,520 --> 00:12:17,220
it's not reaching out over the network

307
00:12:17,220 --> 00:12:20,190
to perform its malicious activity.

308
00:12:20,190 --> 00:12:22,860
Therefore again, this is
another case where even it's a,

309
00:12:22,860 --> 00:12:25,720
it's a true positive hit of
something malicious happening,

310
00:12:25,720 --> 00:12:27,720
the pattern being mapped to Windows shares

311
00:12:27,720 --> 00:12:29,270
doesn't really match, it's not,

312
00:12:29,270 --> 00:12:31,199
that's not a correct mapping per se.

313
00:12:31,200 --> 00:12:32,820
So this is yet another
example of something

314
00:12:32,820 --> 00:12:35,030
that we would need to filter
out of our results, and,

315
00:12:35,030 --> 00:12:37,240
we wouldn't necessarily say
that this is Windows shares

316
00:12:37,240 --> 00:12:38,570
in this example, in this case.

317
00:12:38,570 --> 00:12:40,000
But there's probably other techniques,

318
00:12:40,000 --> 00:12:42,070
so, the other part here is,

319
00:12:42,070 --> 00:12:44,670
auto-mapping is only gonna get you so far.

320
00:12:44,670 --> 00:12:46,530
You need a human in the loop to verify,

321
00:12:46,530 --> 00:12:48,640
validate the accuracy of the findings,

322
00:12:48,640 --> 00:12:50,300
and you still have to go
through all the event data,

323
00:12:50,300 --> 00:12:52,680
because not everything in the intrusion

324
00:12:52,680 --> 00:12:54,459
necessarily's gonna be detected

325
00:12:54,460 --> 00:12:57,480
by some of our pre-mapped
capabilities, so you,

326
00:12:57,480 --> 00:12:59,730
there's still somewhat of
a manual element to it,

327
00:12:59,730 --> 00:13:02,210
but, automating gives us a jumpstart.

328
00:13:02,210 --> 00:13:05,060
It closes the gap, it gives us a headstart

329
00:13:05,060 --> 00:13:07,686
in mapping the entire intrusion to ATT&CK.

330
00:13:09,230 --> 00:13:10,063
- Cool.

331
00:13:10,063 --> 00:13:12,819
Karl gave us an overview of
our journey since last year.

332
00:13:12,820 --> 00:13:14,560
So, kind of to summarize it,

333
00:13:14,560 --> 00:13:16,760
we take findings from
different investigations,

334
00:13:16,760 --> 00:13:18,640
instant response, threat intelligence,

335
00:13:18,640 --> 00:13:20,880
threat hunting, intrusions.

336
00:13:20,880 --> 00:13:24,450
We map that based on the ATT&CK framework,

337
00:13:24,450 --> 00:13:27,020
and then we create observables,
or what we call observables,

338
00:13:27,020 --> 00:13:29,040
so examples of how that specific technique

339
00:13:29,040 --> 00:13:31,189
was used by the adversaries.

340
00:13:31,190 --> 00:13:32,350
So it kind of begs the question,

341
00:13:32,350 --> 00:13:34,380
what do we do with that data next?

342
00:13:34,380 --> 00:13:35,510
So the first thing we do

343
00:13:35,510 --> 00:13:39,910
is we create a tactical threat
profiles for the adversaries,

344
00:13:39,910 --> 00:13:43,400
that allows us to pivot based
on the data that we mapped.

345
00:13:43,400 --> 00:13:44,233
As an example,

346
00:13:44,233 --> 00:13:47,369
I want to know every single
credential access technique

347
00:13:47,370 --> 00:13:48,560
done by Wicked Panda,

348
00:13:48,560 --> 00:13:51,449
how that stuck against every
credential access technique

349
00:13:51,450 --> 00:13:52,720
done by Fancy Bear,

350
00:13:52,720 --> 00:13:54,340
and look for similarity,

351
00:13:54,340 --> 00:13:56,300
look for things that might be interesting.

352
00:13:56,300 --> 00:13:57,160
Another thing that we do

353
00:13:57,160 --> 00:13:59,569
is we take those threat actor profiles,

354
00:13:59,570 --> 00:14:02,080
and we apply that knowledge across the,

355
00:14:02,080 --> 00:14:04,370
across our customers,
across different verticals,

356
00:14:04,370 --> 00:14:08,930
and try to track campaigns
across our customer base,

357
00:14:08,930 --> 00:14:11,729
track and enrich campaigns
across our customer base.

358
00:14:11,730 --> 00:14:15,350
So as an example, last, this
year, earlier this year,

359
00:14:15,350 --> 00:14:16,600
we had an intrusion,

360
00:14:16,600 --> 00:14:19,130
we had the same threat actor, Wicked Panda

361
00:14:20,340 --> 00:14:24,170
who targeted different customers
across multiple verticals.

362
00:14:24,170 --> 00:14:26,250
And, among many different techniques,

363
00:14:26,250 --> 00:14:30,170
we saw one behavioral technique
that was very, very similar.

364
00:14:30,170 --> 00:14:32,449
Basically, they renamed Mimikatz,

365
00:14:32,450 --> 00:14:34,220
and execute that renamed
version of Mimikatz,

366
00:14:34,220 --> 00:14:35,940
but the name of the
Mimikatz would be a filler

367
00:14:35,940 --> 00:14:38,010
to name of the customer they were after.

368
00:14:38,010 --> 00:14:41,200
And that would be on different customers.

369
00:14:41,200 --> 00:14:42,913
It wasn't the only thing that was specific

370
00:14:42,913 --> 00:14:43,746
to that adversary,

371
00:14:43,746 --> 00:14:46,010
it was just one of those kind
of behavioral, tactical things

372
00:14:46,010 --> 00:14:47,010
that we looked that was like okay,

373
00:14:47,010 --> 00:14:49,319
that's very similar to
something else we've seen

374
00:14:49,320 --> 00:14:51,467
that was also associated
with that actor base

375
00:14:51,467 --> 00:14:55,069
and in Panda space and
infrastructure, things like that.

376
00:14:55,070 --> 00:14:56,980
The bottom line is that we can use that,

377
00:14:56,980 --> 00:14:58,530
we can those threat actor profiles

378
00:14:58,530 --> 00:15:00,420
based on the observables that we created,

379
00:15:00,420 --> 00:15:01,939
to kind of track different campaigns

380
00:15:01,940 --> 00:15:04,210
across our customer base.

381
00:15:04,210 --> 00:15:06,480
And what we do with that data

382
00:15:06,480 --> 00:15:08,560
is we create the final deliverables,

383
00:15:08,560 --> 00:15:10,709
or we create our reporting that we share

384
00:15:10,710 --> 00:15:13,590
both with our customers
and with the community,

385
00:15:13,590 --> 00:15:18,293
as part of our half-year
and yearly reports.

386
00:15:20,880 --> 00:15:24,010
- And, that is something too

387
00:15:24,010 --> 00:15:26,990
that you're seeing
example of here, is, yeah,

388
00:15:26,990 --> 00:15:31,040
when we are completed
with all of our analysis

389
00:15:31,040 --> 00:15:32,510
that's done all the mapping,

390
00:15:32,510 --> 00:15:34,670
we can deliver that,
and we do deliver that

391
00:15:34,670 --> 00:15:35,670
even publicly at times,

392
00:15:35,670 --> 00:15:39,260
so our annual and mid-year
OverWatch threat hunting reports

393
00:15:39,260 --> 00:15:40,770
are something that's published publicly,

394
00:15:40,770 --> 00:15:42,480
and we've got it mapped with the details,

395
00:15:42,480 --> 00:15:44,810
been facilitated by our automated process,

396
00:15:44,810 --> 00:15:46,569
filled in still with some manual process,

397
00:15:46,570 --> 00:15:48,800
but you get an end result
like what you see here.

398
00:15:48,800 --> 00:15:50,040
This is just an example,

399
00:15:50,040 --> 00:15:51,730
this isn't necessarily
from the same intrusion

400
00:15:51,730 --> 00:15:52,630
we were talking about before,

401
00:15:52,630 --> 00:15:55,100
but this is just a
couple different examples

402
00:15:55,100 --> 00:15:57,770
of what that final product looks like,

403
00:15:57,770 --> 00:16:00,439
and speaking of our annual
and mid-year reporting,

404
00:16:00,440 --> 00:16:02,230
we actually just released
our mid-year report,

405
00:16:02,230 --> 00:16:03,850
which again covers our
threat hunting findings

406
00:16:03,850 --> 00:16:05,190
for the first half of the year,

407
00:16:05,190 --> 00:16:06,080
so if you just Google

408
00:16:06,080 --> 00:16:08,350
2019 CrowdStrike
OverWatch Mid-Year Report,

409
00:16:08,350 --> 00:16:09,970
you can pull down a copy of that,

410
00:16:09,970 --> 00:16:12,670
and it provides not just specific examples

411
00:16:12,670 --> 00:16:13,849
like what was in the previous slide,

412
00:16:13,850 --> 00:16:16,730
but we even also provide, as best we can,

413
00:16:16,730 --> 00:16:19,380
the overall review of all the techniques

414
00:16:19,380 --> 00:16:21,230
that we've mapped over
that given time period,

415
00:16:21,230 --> 00:16:23,780
and all the targeted intrusion
activity that we've seen.

416
00:16:23,780 --> 00:16:26,699
It's delivered in this heat map view,

417
00:16:26,700 --> 00:16:28,470
and so we encourage you to take
a look at that if you wanna,

418
00:16:28,470 --> 00:16:31,420
if you do wanna dive into some
of those additional details.

419
00:16:32,260 --> 00:16:34,700
There are a few of these examples,

420
00:16:34,700 --> 00:16:36,930
of course but, sometimes, we
see some techniques a lot,

421
00:16:36,930 --> 00:16:38,569
but every now and then
we see some techniques

422
00:16:38,570 --> 00:16:41,330
used in a particularly unique fashion,

423
00:16:41,330 --> 00:16:42,970
and so there's a few examples now

424
00:16:42,970 --> 00:16:45,580
as we continue with the
presentation that we'll dive into,

425
00:16:45,580 --> 00:16:48,930
of a few interesting
technique implementations seen

426
00:16:48,930 --> 00:16:50,910
in targeted intrusions in the wild.

427
00:16:50,910 --> 00:16:52,850
The tactics highlighted in green here

428
00:16:52,850 --> 00:16:55,160
are the tactics we'll
share a few examples from.

429
00:16:55,160 --> 00:16:57,100
We don't have time, for
time's sake we're limited,

430
00:16:57,100 --> 00:17:00,270
we can't share an example from
each of the tactic families,

431
00:17:00,270 --> 00:17:02,483
but these are the ones
we'll dive into now.

432
00:17:04,069 --> 00:17:07,200
Okay so, interesting TTPs in the wild.

433
00:17:07,200 --> 00:17:09,290
We will start with an intrusion

434
00:17:09,290 --> 00:17:12,490
that occurred against
an academic institution,

435
00:17:12,490 --> 00:17:16,849
where the victim organization suspected

436
00:17:16,849 --> 00:17:18,899
that something was goin'
on on their network.

437
00:17:18,900 --> 00:17:20,930
They called in our services team

438
00:17:20,930 --> 00:17:22,500
to go in and do incident response,

439
00:17:22,500 --> 00:17:24,079
and we as threat hunters in OverWatch

440
00:17:24,079 --> 00:17:27,000
then partnered with our
on-ground incident responders,

441
00:17:27,000 --> 00:17:31,190
to work together to help
uncover potential evidence

442
00:17:31,190 --> 00:17:32,100
of an adversary there,

443
00:17:32,100 --> 00:17:33,500
and sure enough, it didn't take too long

444
00:17:33,500 --> 00:17:36,870
for us to find evidence
of targeted activity.

445
00:17:36,870 --> 00:17:39,860
It looked like Velvet
Chollima was on the network,

446
00:17:39,860 --> 00:17:41,729
and it turns out, sure enough,

447
00:17:41,730 --> 00:17:43,920
a further analysis
confirmed that and verified

448
00:17:43,920 --> 00:17:47,270
this was actually part of that
larger Stolen Pencil campaign

449
00:17:47,270 --> 00:17:52,270
that was reported, publicly,
widely, earlier this past year,

450
00:17:52,660 --> 00:17:56,380
and in this case, this is
one of those institutions.

451
00:17:56,380 --> 00:17:58,160
North Koreans were actively targeting

452
00:17:58,160 --> 00:18:00,560
a number of Western-based
academic institutions,

453
00:18:00,560 --> 00:18:03,020
so that's what this
intrusion was all about,

454
00:18:03,020 --> 00:18:06,860
and among the artifacts that
we had uncovered pretty,

455
00:18:06,860 --> 00:18:08,990
pretty early on in the
course of the analysis

456
00:18:08,990 --> 00:18:12,460
was an implant that our
intelligence team calls Gold Stamp,

457
00:18:12,460 --> 00:18:13,750
and the Gold Stamp implant

458
00:18:13,750 --> 00:18:16,840
has a number of different
collection tactic capabilities.

459
00:18:16,840 --> 00:18:18,720
It is primarily a keylogger,

460
00:18:18,720 --> 00:18:20,400
but it can do some other things,

461
00:18:20,400 --> 00:18:22,220
including an interesting twist

462
00:18:22,220 --> 00:18:23,670
on the clipboard data technique,

463
00:18:23,670 --> 00:18:25,010
so what this implant's able to do

464
00:18:25,010 --> 00:18:29,460
is identify when a
cryptocurrency wallet address

465
00:18:29,460 --> 00:18:30,890
is saved to the clipboard,

466
00:18:30,890 --> 00:18:35,890
it will replace that
clipboard saved wallet address

467
00:18:36,380 --> 00:18:40,060
with a wallet address that's
owned by Velvet Chollima,

468
00:18:40,060 --> 00:18:44,020
therefore when crypto-transfer
activity happens that,

469
00:18:44,020 --> 00:18:45,879
that cryptocurrency will be transferred

470
00:18:45,880 --> 00:18:48,413
to a Velvet Chollima-controlled account.

471
00:18:50,520 --> 00:18:54,670
Similarly, we'll, we'll stay
with the same intrusion here,

472
00:18:54,670 --> 00:18:57,850
because there's a lot of
interesting dynamics involved

473
00:18:57,850 --> 00:18:59,050
in this particular intrusion.

474
00:18:59,050 --> 00:19:00,450
A lot of it was reported publicly,

475
00:19:00,450 --> 00:19:03,840
but there's some other
interesting aspects to it,

476
00:19:03,840 --> 00:19:05,090
that we wanted to highlight,

477
00:19:05,090 --> 00:19:07,919
that wasn't talked about
as much in the public,

478
00:19:07,920 --> 00:19:10,330
so something that happened
early on in this intrusion,

479
00:19:10,330 --> 00:19:12,929
the adversary had gained access

480
00:19:12,930 --> 00:19:15,830
and had entrenched
themselves pretty effectively

481
00:19:15,830 --> 00:19:17,379
throughout the network before we got there

482
00:19:17,380 --> 00:19:20,420
and before we had visibility,
and during that time,

483
00:19:20,420 --> 00:19:22,650
they were able to dump credentials

484
00:19:22,650 --> 00:19:25,120
and gather a number of valid accounts,

485
00:19:25,120 --> 00:19:28,050
and unfortunately for at
least one particular user

486
00:19:28,050 --> 00:19:29,680
on this academic network,

487
00:19:29,680 --> 00:19:32,160
they had reused the same credentials

488
00:19:32,160 --> 00:19:33,690
for their academic network account

489
00:19:33,690 --> 00:19:37,370
as they did for some other
personal services and accounts,

490
00:19:37,370 --> 00:19:38,969
including PayPal and Gmail,

491
00:19:38,970 --> 00:19:41,730
so unfortunately, the
Velvet Chollima adversaries

492
00:19:41,730 --> 00:19:45,230
were able to commandeer his
PayPal and Gmail accounts.

493
00:19:45,230 --> 00:19:49,470
And they used that to,

494
00:19:49,470 --> 00:19:52,540
to take their browser
extensions techniques,

495
00:19:52,540 --> 00:19:55,060
technique to a whole
new level if you will.

496
00:19:55,060 --> 00:19:56,040
So essentially what they did

497
00:19:56,040 --> 00:19:58,780
is they used this individual's
legitimate Gmail account

498
00:19:58,780 --> 00:20:01,760
to go into the Google Chrome Web Store,

499
00:20:01,760 --> 00:20:04,070
and they posted their browser extension,

500
00:20:04,070 --> 00:20:05,790
their malicious browser extension,

501
00:20:05,790 --> 00:20:07,500
to the Google Chrome Web Store,

502
00:20:07,500 --> 00:20:09,800
and used this guy's
Gmail account to comment

503
00:20:09,800 --> 00:20:12,500
about how great this
Google Chrome extension is,

504
00:20:12,500 --> 00:20:13,530
and how everybody should download,

505
00:20:13,530 --> 00:20:16,310
it gives you these great
custom font capabilities.

506
00:20:16,310 --> 00:20:18,179
And, turns out, and actually

507
00:20:18,180 --> 00:20:19,750
they're just trying to further infect

508
00:20:19,750 --> 00:20:21,850
more potential victims,

509
00:20:21,850 --> 00:20:24,919
and, obviously having a
legitimate Gmail account

510
00:20:24,920 --> 00:20:26,970
that's commenting on the browser extension

511
00:20:26,970 --> 00:20:28,000
would pique interest,

512
00:20:28,000 --> 00:20:30,940
and shows you just the level of creativity

513
00:20:30,940 --> 00:20:32,335
that our adversaries will go to,

514
00:20:32,335 --> 00:20:36,240
but there you have it, an
interesting, crafty implementation

515
00:20:36,240 --> 00:20:38,223
of the browser extensions technique.

516
00:20:39,370 --> 00:20:41,639
- Another one from one of our customers

517
00:20:41,640 --> 00:20:46,210
in the telecom vertical,
this time it was on,

518
00:20:46,210 --> 00:20:50,040
actually the adversary
targeted the Linux part of the,

519
00:20:50,040 --> 00:20:51,110
of their estate.

520
00:20:51,110 --> 00:20:56,090
And the adversary used the
combination of valid credential,

521
00:20:56,090 --> 00:20:57,850
valid accounts,

522
00:20:57,850 --> 00:21:01,580
SSH to log in to perform some
basic OSINT reconnaissance,

523
00:21:01,580 --> 00:21:03,610
reviewed some shell history,

524
00:21:03,610 --> 00:21:05,750
tried to identify systems and accounts,

525
00:21:05,750 --> 00:21:08,280
and systems that they could log in,

526
00:21:08,280 --> 00:21:10,530
accounts that they could use
to log in to those systems,

527
00:21:10,530 --> 00:21:11,899
things like that.

528
00:21:11,900 --> 00:21:14,240
But the key thing that I
wanna talk about in this case

529
00:21:14,240 --> 00:21:17,530
is the fact that they
modified system binaries.

530
00:21:17,530 --> 00:21:21,350
So instead of, instead of
trying to draw up a root gate

531
00:21:21,350 --> 00:21:24,709
that would hide the activity
specific to the processes that,

532
00:21:24,710 --> 00:21:27,800
or the network traffic
related to the threat actor,

533
00:21:27,800 --> 00:21:31,129
they actually replaced
tools, administrative tools,

534
00:21:31,130 --> 00:21:32,060
on the system.

535
00:21:32,060 --> 00:21:35,899
So they recompiled, they
recompiled the tools on the box,

536
00:21:35,900 --> 00:21:37,510
things like ps, things like top,

537
00:21:37,510 --> 00:21:40,210
things like, things like netstat.

538
00:21:40,210 --> 00:21:42,290
Any, any tool that the
administrator might use

539
00:21:42,290 --> 00:21:45,110
or my user might use, would
basically have its new version,

540
00:21:45,110 --> 00:21:47,360
with a, with a, with an extra code,

541
00:21:47,360 --> 00:21:49,580
and that code actually checked

542
00:21:49,580 --> 00:21:51,783
every time the command would be executed.

543
00:21:52,880 --> 00:21:55,610
The command, the tool would
first check the directory

544
00:21:55,610 --> 00:21:56,443
that was on the system,

545
00:21:56,443 --> 00:21:58,550
and in that directory, there
would be an information

546
00:21:58,550 --> 00:22:02,210
about network, about
processes, and about files,

547
00:22:02,210 --> 00:22:04,830
that would be redacted from
the output from that tool.

548
00:22:04,830 --> 00:22:06,060
And that way, the adversary

549
00:22:06,060 --> 00:22:09,080
would basically be able
to hide on the system

550
00:22:09,080 --> 00:22:11,379
from anyone who was trying to investigate.

551
00:22:11,380 --> 00:22:12,380
Obviously, the active,

552
00:22:12,380 --> 00:22:16,500
the functionality is similar,
in a way, to root gates,

553
00:22:16,500 --> 00:22:19,120
but they decided not to drop
specific root gate implant,

554
00:22:19,120 --> 00:22:22,879
but instead replace tools with additional,

555
00:22:22,880 --> 00:22:24,900
with additional functionality.

556
00:22:24,900 --> 00:22:26,773
As you can see, on the slide,

557
00:22:27,800 --> 00:22:29,490
the snippet of that activity,

558
00:22:29,490 --> 00:22:31,760
the adversary basically
removed the ps file

559
00:22:31,760 --> 00:22:34,660
and then recompiled
their own version of ps,

560
00:22:34,660 --> 00:22:36,763
and left it on the system.

561
00:22:39,150 --> 00:22:42,800
Moving on to another, another example.

562
00:22:42,800 --> 00:22:46,270
Same adversary, the same
intrusion, this time,

563
00:22:46,270 --> 00:22:51,003
in addition to the threat
actor modifying binaries,

564
00:22:52,160 --> 00:22:55,360
that allowing to, to hide,
from potential administrators

565
00:22:55,360 --> 00:22:57,429
and potential incident responders,

566
00:22:57,430 --> 00:22:59,040
trying to investigate that activity,

567
00:22:59,040 --> 00:23:00,950
they've also modify SSH

568
00:23:00,950 --> 00:23:03,530
in a way they could maintain
access to the system,

569
00:23:03,530 --> 00:23:05,490
as well as collect additional credentials.

570
00:23:05,490 --> 00:23:09,733
So, that modified SSH
binary would actually,

571
00:23:11,000 --> 00:23:15,023
actually change the auth_password
function within the SSH,

572
00:23:15,023 --> 00:23:18,010
that is responsible for
validating user log-ons.

573
00:23:18,010 --> 00:23:20,180
And that modification
basically allowed them

574
00:23:20,180 --> 00:23:22,750
to provide the same password,
the same solid password,

575
00:23:22,750 --> 00:23:24,200
that will allow them
to log in to the system

576
00:23:24,200 --> 00:23:25,490
every single time,

577
00:23:25,490 --> 00:23:29,270
as well as collect any
legitimate user log on,

578
00:23:29,270 --> 00:23:31,690
username and password,
and save it into a file.

579
00:23:31,690 --> 00:23:34,270
That way, they could then
access those credentials

580
00:23:34,270 --> 00:23:36,973
and potentially reuse it
somewhere else on the network.

581
00:23:39,400 --> 00:23:43,990
Another story, another
intrusion, another story.

582
00:23:43,990 --> 00:23:44,823
This time,

583
00:23:45,670 --> 00:23:48,993
one of the adversaries
targeting a software company,

584
00:23:49,970 --> 00:23:52,950
basically the threat actor
used interactive log on

585
00:23:52,950 --> 00:23:54,420
to execute a batch script

586
00:23:54,420 --> 00:23:57,210
that automated a multi-stage
execution process.

587
00:23:57,210 --> 00:24:00,270
Couple of droppers, couple of downloaders.

588
00:24:00,270 --> 00:24:03,639
The end result of that
multi-stage execution chain

589
00:24:03,640 --> 00:24:05,780
were two files that were
created on the system.

590
00:24:05,780 --> 00:24:08,550
One of them was a .inf file,

591
00:24:08,550 --> 00:24:12,040
that is the profile for the,

592
00:24:12,040 --> 00:24:13,800
for the connection manager,

593
00:24:13,800 --> 00:24:16,540
that inf file was an actual implant,

594
00:24:16,540 --> 00:24:21,030
and the threat actor executed
the connection manager service

595
00:24:21,030 --> 00:24:24,370
to install that profile on the system,

596
00:24:24,370 --> 00:24:27,550
leading to the installation
of the malicious implant.

597
00:24:27,550 --> 00:24:31,210
We usually see the
connection manager being used

598
00:24:31,210 --> 00:24:34,350
by the E-crime teams, but
in this particular case,

599
00:24:34,350 --> 00:24:37,469
we suspected it was
the, targeted adversary,

600
00:24:37,470 --> 00:24:39,160
most likely one of the Pandas,

601
00:24:39,160 --> 00:24:40,220
and kind of getting back

602
00:24:40,220 --> 00:24:42,160
to when I talked about threat profiles

603
00:24:42,160 --> 00:24:44,280
and how we create those
tactical threat profiles,

604
00:24:44,280 --> 00:24:45,870
unfortunately our threat intelligence team

605
00:24:45,870 --> 00:24:48,530
didn't have enough information
to attribute that activity

606
00:24:48,530 --> 00:24:51,120
based on the data that was
available at that time,

607
00:24:51,120 --> 00:24:52,530
but based on that behavioral

608
00:24:52,530 --> 00:24:54,330
and tactical level of information

609
00:24:54,330 --> 00:24:57,889
that we're able to gather
with, based on our observables,

610
00:24:57,890 --> 00:25:00,370
based on, based on the
profiles that we created,

611
00:25:00,370 --> 00:25:02,409
we're able to look at similar activity

612
00:25:02,410 --> 00:25:05,610
of that specific Panda, and
other behavioral techniques,

613
00:25:05,610 --> 00:25:08,649
and, it's very likely that in this case

614
00:25:08,650 --> 00:25:10,620
it was actually the targeted adversary,

615
00:25:10,620 --> 00:25:12,590
just based on the back of that research

616
00:25:12,590 --> 00:25:14,470
and observables that we did.

617
00:25:14,470 --> 00:25:18,360
So it kind of allows us to
apply that threat profile

618
00:25:18,360 --> 00:25:20,669
to identify the threat actor,

619
00:25:20,670 --> 00:25:22,860
and then use that knowledge
to find other activity

620
00:25:22,860 --> 00:25:26,352
specific to that actor,
within the network.

621
00:25:28,440 --> 00:25:29,530
All right,

622
00:25:29,530 --> 00:25:33,108
next one is also specific

623
00:25:33,108 --> 00:25:37,000
to an adversary who targeted, this time,

624
00:25:37,000 --> 00:25:42,000
a industrial, defense
industrial base company.

625
00:25:42,060 --> 00:25:44,560
In this particular case, the threat actor,

626
00:25:44,560 --> 00:25:46,899
we were asked both the
incident response team,

627
00:25:46,900 --> 00:25:48,750
the threat intelligence team
and our threat hunting team

628
00:25:48,750 --> 00:25:50,710
were asked to help out.

629
00:25:50,710 --> 00:25:52,570
It was a pre-existing intrusion,

630
00:25:52,570 --> 00:25:55,060
so it rolled in, into the environment

631
00:25:55,060 --> 00:25:57,750
where the threat actor was
already well established.

632
00:25:57,750 --> 00:26:02,030
And we've seen the threat
actor using valid accounts

633
00:26:02,030 --> 00:26:04,210
with scheduled tasks, with PsExec,

634
00:26:04,210 --> 00:26:07,490
to execute and move
laterally on the network.

635
00:26:07,490 --> 00:26:08,640
But one of the,

636
00:26:08,640 --> 00:26:10,950
the most interesting
findings during the intrusion

637
00:26:10,950 --> 00:26:14,030
was a custom tool that they used to steal

638
00:26:14,030 --> 00:26:15,889
and manipulate tokens,

639
00:26:15,890 --> 00:26:17,150
excuse me, in memory,

640
00:26:17,150 --> 00:26:19,870
that allowed them to impersonate any user

641
00:26:19,870 --> 00:26:20,860
on the system.

642
00:26:20,860 --> 00:26:21,729
So that tool,

643
00:26:21,730 --> 00:26:24,540
and you can see example of
the execution of that tool,

644
00:26:24,540 --> 00:26:27,690
basically works as Run
As on a Windows system.

645
00:26:27,690 --> 00:26:30,000
You provide a username
you want to impersonate,

646
00:26:30,000 --> 00:26:31,550
the tool you want to execute,

647
00:26:31,550 --> 00:26:35,840
and that magically happens
through the token impersonation,

648
00:26:35,840 --> 00:26:39,760
in memory token
impersonation, on the system.

649
00:26:39,760 --> 00:26:42,129
- Yeah, and is awfully
kind of the adversary, too,

650
00:26:42,130 --> 00:26:45,110
to name their tool after what technique

651
00:26:45,110 --> 00:26:47,209
they were actually using there, token.exe.

652
00:26:48,730 --> 00:26:51,193
Even APT sometimes takes shortcuts.

653
00:26:52,230 --> 00:26:53,063
Cool.

654
00:26:53,063 --> 00:26:55,480
Okay, the last example
here that we'll share

655
00:26:55,480 --> 00:26:58,130
comes from a case of big game hunting.

656
00:26:58,130 --> 00:27:00,160
When we say big game hunting,
what we're referring to

657
00:27:00,160 --> 00:27:01,940
are those targeted ransomware attacks

658
00:27:01,940 --> 00:27:05,270
where a criminal adversary
will go after an organization

659
00:27:05,270 --> 00:27:07,250
of various sizes.

660
00:27:07,250 --> 00:27:08,083
This example here

661
00:27:08,083 --> 00:27:10,800
is from a large international
conglomerate organization

662
00:27:10,800 --> 00:27:11,700
that was targeted, but,

663
00:27:11,700 --> 00:27:13,570
could be an organization of any size,

664
00:27:13,570 --> 00:27:16,409
with that targeted ransomware attack,

665
00:27:16,410 --> 00:27:19,470
and this has gained a lot of
popularity in recent months

666
00:27:19,470 --> 00:27:21,240
of course with smaller organizations

667
00:27:21,240 --> 00:27:25,260
like municipal governments,
or public school districts,

668
00:27:25,260 --> 00:27:27,680
things like that being
targeted with this ransomware,

669
00:27:27,680 --> 00:27:30,140
where an adversary goes after
a particular organization

670
00:27:30,140 --> 00:27:32,580
and tries to spread that
ransomware as widely as possible

671
00:27:32,580 --> 00:27:35,270
to lock down that network
and hold it for ransom.

672
00:27:35,270 --> 00:27:37,629
We do see this type of
activity quite often,

673
00:27:37,630 --> 00:27:40,220
and the most common types
of ransomware employed

674
00:27:40,220 --> 00:27:42,680
in the big game hunting
operations that we uncover

675
00:27:42,680 --> 00:27:43,720
when we do our threat hunting

676
00:27:43,720 --> 00:27:47,040
are typically Ryuk or Defray,

677
00:27:47,040 --> 00:27:49,600
or Phobos, or Dharma.

678
00:27:49,600 --> 00:27:51,990
And this one was one of the Dharma cases.

679
00:27:51,990 --> 00:27:54,190
Dharma is somewhat interesting

680
00:27:54,190 --> 00:27:56,030
in that according to our
intelligence findings,

681
00:27:56,030 --> 00:27:57,480
our intelligence team, they assess

682
00:27:57,480 --> 00:28:01,610
that Dharma may have some
level of control there,

683
00:28:01,610 --> 00:28:05,429
but it's widely deployed by a
number of different affiliates

684
00:28:05,430 --> 00:28:08,600
who use that Dharma ransomware.

685
00:28:08,600 --> 00:28:11,120
So even, but even though a
number of different affiliates

686
00:28:11,120 --> 00:28:13,510
may be using it to target various,

687
00:28:13,510 --> 00:28:15,820
various different organizations,

688
00:28:15,820 --> 00:28:20,669
we still see quite a bit
of overlap in TTPs utilized

689
00:28:20,670 --> 00:28:22,900
in the course of those
big game hunting attacks

690
00:28:22,900 --> 00:28:24,740
that use Dharma.

691
00:28:24,740 --> 00:28:28,410
Some of those common TTPs are RDP,

692
00:28:28,410 --> 00:28:31,450
brute forcing, RDP password
spraying to gain initial access

693
00:28:31,450 --> 00:28:32,790
into the environment.

694
00:28:32,790 --> 00:28:35,330
Then they, they'll almost always deploy

695
00:28:35,330 --> 00:28:37,080
the same network share scanning tool

696
00:28:37,080 --> 00:28:38,639
to identify potential network shares

697
00:28:38,640 --> 00:28:41,760
where they could spread
their ransomware tool to.

698
00:28:41,760 --> 00:28:46,440
They also really like to
use different open source,

699
00:28:46,440 --> 00:28:48,670
openly available tools that allow them

700
00:28:48,670 --> 00:28:51,100
to disable security
products on those endpoints,

701
00:28:51,100 --> 00:28:53,060
so things like Process Hacker, PC Hunter,

702
00:28:53,060 --> 00:28:55,190
so, anyways, you see a lot
of these common overlaps,

703
00:28:55,190 --> 00:28:56,550
and we did see a lot of those behaviors

704
00:28:56,550 --> 00:28:58,100
in this particular attack, but,

705
00:28:58,100 --> 00:29:00,550
this attack added something
that we hadn't seen

706
00:29:00,550 --> 00:29:03,700
from the other Dharma big
game hunting campaigns,

707
00:29:03,700 --> 00:29:06,030
and that is some
modifications to the registry

708
00:29:06,030 --> 00:29:09,780
that were unusual, some of
those system setting changes.

709
00:29:09,780 --> 00:29:12,580
So, what they did is they, they ran the,

710
00:29:12,580 --> 00:29:15,070
a command that led to that registry change

711
00:29:15,070 --> 00:29:15,909
that you see there

712
00:29:15,910 --> 00:29:18,220
where they essentially
changed the RDP settings

713
00:29:18,220 --> 00:29:20,230
to disable timeout.

714
00:29:20,230 --> 00:29:22,560
And the reason we suspect
they did this is because,

715
00:29:22,560 --> 00:29:26,250
when they land on the
network, on their beachhead,

716
00:29:26,250 --> 00:29:27,570
with that RDP access,

717
00:29:27,570 --> 00:29:28,760
it could take them some time

718
00:29:28,760 --> 00:29:31,950
to ultimately achieve
their ultimate goals,

719
00:29:31,950 --> 00:29:36,250
and they don't wanna lose
that exact session access

720
00:29:36,250 --> 00:29:37,083
in the middle of that.

721
00:29:37,083 --> 00:29:38,780
It could take them as, we've seen as many,

722
00:29:38,780 --> 00:29:40,440
evidence of hours, even days,

723
00:29:40,440 --> 00:29:42,580
for them to move around,
escalate privileges,

724
00:29:42,580 --> 00:29:45,620
move laterally, to effectively
spread the ransomware

725
00:29:45,620 --> 00:29:46,489
to lock down the network,

726
00:29:46,490 --> 00:29:48,680
so they wanna make sure they
have enough time to do that,

727
00:29:48,680 --> 00:29:50,030
so they modified the registry

728
00:29:50,030 --> 00:29:53,223
to make sure that their RDP
session wouldn't time out.

729
00:29:55,910 --> 00:29:58,250
And that concludes our presentation.

730
00:29:58,250 --> 00:30:00,420
We, yeah, are grateful
again for the chance,

731
00:30:00,420 --> 00:30:01,530
and happy to take any questions.

732
00:30:01,530 --> 00:30:02,363
If we're out of time,

733
00:30:02,363 --> 00:30:04,390
happy to take 'em offline
during break as well.

734
00:30:04,390 --> 00:30:05,223
Thank you.
- Yep, I think

735
00:30:05,223 --> 00:30:06,056
you're just at time.

736
00:30:06,056 --> 00:30:09,993
Perfect, thank you so much.
(audience applauds)

