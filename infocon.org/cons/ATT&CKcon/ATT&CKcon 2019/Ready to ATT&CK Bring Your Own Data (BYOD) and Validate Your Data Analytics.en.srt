1
00:00:01,140 --> 00:00:01,972
- [Announcer] It's my pleasure

2
00:00:01,973 --> 00:00:04,770
to introduce Roberto
and Jose Luis Rodriguez.

3
00:00:04,770 --> 00:00:06,084
Yes, they are brothers.

4
00:00:06,084 --> 00:00:08,302
(applauding)

5
00:00:08,302 --> 00:00:11,367
- Thank you.

6
00:00:11,367 --> 00:00:13,840
Can you guys hear us?

7
00:00:13,840 --> 00:00:14,830
Yep.

8
00:00:14,830 --> 00:00:15,663
All right.

9
00:00:15,663 --> 00:00:16,540
So, well, thank you very much, everybody,

10
00:00:16,540 --> 00:00:18,300
for coming today for our presentation.

11
00:00:18,300 --> 00:00:20,350
We'll be talking about an exciting project

12
00:00:20,350 --> 00:00:21,684
and how that's helping us a lot

13
00:00:21,684 --> 00:00:24,727
to also contribute back
to the ATT&CK data sources

14
00:00:24,727 --> 00:00:27,410
and the core analytics as well.

15
00:00:27,410 --> 00:00:28,780
And my name, once again, Roberto.

16
00:00:28,780 --> 00:00:31,015
You guys may know me by Cyb3rWardOg.

17
00:00:31,015 --> 00:00:31,848
- [Jose] My name is Jose.

18
00:00:31,848 --> 00:00:32,890
I go by Cyb3rPandaH.

19
00:00:32,890 --> 00:00:34,750
- As you can tell, we're from Peru

20
00:00:34,750 --> 00:00:35,910
and we're also brothers.

21
00:00:35,910 --> 00:00:37,678
So, that's our name.

22
00:00:37,678 --> 00:00:38,510
(applauding and laughing)

23
00:00:38,511 --> 00:00:39,820
All right.

24
00:00:39,820 --> 00:00:42,710
And we are the authors and contributors

25
00:00:42,710 --> 00:00:44,550
of a lot of the projects
that you see over there.

26
00:00:44,550 --> 00:00:46,589
And actually we created a

27
00:00:46,590 --> 00:00:49,140
Open GitHub organization
to put everything in there

28
00:00:49,140 --> 00:00:51,230
and to start building a community.

29
00:00:51,230 --> 00:00:52,680
And today we have a lot to talk about.

30
00:00:52,680 --> 00:00:54,339
It's a lot of material for 30 minutes.

31
00:00:54,340 --> 00:00:56,500
All the way from exploring
ATT&CK data sources

32
00:00:56,500 --> 00:00:59,820
or ATT&CK itself from 2018 to today.

33
00:00:59,820 --> 00:01:01,710
All the way to start using Mordor.

34
00:01:01,710 --> 00:01:03,647
A project that we are
so happy to talk about

35
00:01:03,647 --> 00:01:05,960
to start contributing back to a couple

36
00:01:05,960 --> 00:01:08,012
of older projects for
Mitre ATT&CK, as well.

37
00:01:08,013 --> 00:01:10,263
(coughing)

38
00:01:14,400 --> 00:01:15,233
Yep.

39
00:01:15,233 --> 00:01:16,560
- Okay.

40
00:01:16,560 --> 00:01:17,690
So, we would like to start our talk

41
00:01:17,690 --> 00:01:19,690
with just giving to you guys an idea

42
00:01:19,690 --> 00:01:22,300
of how can you query
the old information...

43
00:01:22,300 --> 00:01:24,283
All the information you have in ATT&CK.

44
00:01:25,290 --> 00:01:27,650
And the way we like to do this

45
00:01:27,650 --> 00:01:29,710
is using the public TAXII server

46
00:01:29,710 --> 00:01:33,369
the direct (mumbles)
where all the information

47
00:01:34,367 --> 00:01:36,993
from ATT&CK is our beta wall over there

48
00:01:36,993 --> 00:01:37,963
in a state format.

49
00:01:38,990 --> 00:01:41,920
So, in order to query this data,

50
00:01:41,920 --> 00:01:43,547
Roberto created a Python library,

51
00:01:43,547 --> 00:01:45,700
ATT&CK CTI, which works on top

52
00:01:45,700 --> 00:01:48,690
of the two libraries that Mitre created.

53
00:01:48,690 --> 00:01:50,539
And if you want to install it,

54
00:01:50,540 --> 00:01:52,610
you can do it via PIP

55
00:01:54,089 --> 00:01:55,670
or direct from source.

56
00:01:55,670 --> 00:01:57,430
And also, if you want to learn more

57
00:01:58,300 --> 00:01:59,619
from this library

58
00:02:00,646 --> 00:02:01,479
you can just go

59
00:02:01,479 --> 00:02:03,950
to the link that is below.

60
00:02:03,950 --> 00:02:05,680
We have a lot of resources there

61
00:02:05,680 --> 00:02:07,860
that will help you to start

62
00:02:07,860 --> 00:02:09,660
understanding the library and using it

63
00:02:09,660 --> 00:02:11,859
to query the information
that is over there.

64
00:02:13,420 --> 00:02:15,269
So, these are some of the functions

65
00:02:15,270 --> 00:02:18,349
that you can find in the library.

66
00:02:18,349 --> 00:02:21,880
If you want more information
about each function,

67
00:02:21,880 --> 00:02:24,019
you can go to the link that is below.

68
00:02:24,020 --> 00:02:25,873
So, for today, we are just

69
00:02:25,873 --> 00:02:29,799
using a couple of them in a short video.

70
00:02:29,800 --> 00:02:30,882
So, you can understand how can you use

71
00:02:30,882 --> 00:02:33,923
it via Jupyter Notebooks.

72
00:02:37,680 --> 00:02:39,790
So, let's start with our first demo,

73
00:02:39,790 --> 00:02:42,290
which is a short video about...

74
00:02:43,440 --> 00:02:45,067
- [Roberto] Yep, that started it.

75
00:02:45,068 --> 00:02:45,901
- Okay.

76
00:02:45,901 --> 00:02:47,350
So, basically what we
need to do is, of course,

77
00:02:47,350 --> 00:02:49,549
import our library and also initialize

78
00:02:49,550 --> 00:02:52,480
our Python class that will allow us

79
00:02:52,480 --> 00:02:54,100
to start working with some functions.

80
00:02:54,100 --> 00:02:56,299
Like, for example, get techniques

81
00:02:56,300 --> 00:02:59,540
that will give us all
the techniques in ATT&CK.

82
00:02:59,540 --> 00:03:02,320
So, have 535 techniques.

83
00:03:02,320 --> 00:03:05,859
Now, before we continue,
we need to remove all the

84
00:03:07,396 --> 00:03:09,209
deprecated techniques.

85
00:03:09,210 --> 00:03:11,910
So, we have 519 techniques
and then at the end

86
00:03:11,910 --> 00:03:14,160
you can start working with a Python list

87
00:03:14,160 --> 00:03:17,143
where you can start
exploring more about ATT&CK.

88
00:03:20,050 --> 00:03:23,570
Now, something else that you
can do with library is...

89
00:03:24,763 --> 00:03:25,596
Oh, sorry.

90
00:03:25,596 --> 00:03:27,210
You can just follow the same steps.

91
00:03:27,210 --> 00:03:29,770
Import the libraries and
you can starting work

92
00:03:29,770 --> 00:03:31,790
with this information and this

93
00:03:31,790 --> 00:03:32,850
is actually the first time

94
00:03:32,850 --> 00:03:35,769
that we are translating.
- Translating.

95
00:03:35,770 --> 00:03:36,603
- The mighty ATT&CK

96
00:03:36,603 --> 00:03:37,880
framework to Spanish.
- To Spanish.

97
00:03:37,880 --> 00:03:38,713
(laughing)

98
00:03:38,713 --> 00:03:39,577
So, there it is.

99
00:03:39,577 --> 00:03:42,561
So, we're starting to say everything.

100
00:03:42,561 --> 00:03:43,650
(laughing)

101
00:03:43,650 --> 00:03:45,049
- Yep, so you can see something

102
00:03:45,049 --> 00:03:46,077
is already in there with
the words and all that.

103
00:03:46,077 --> 00:03:47,250
So, that was pretty cool

104
00:03:47,250 --> 00:03:48,870
just to run the Python library

105
00:03:48,870 --> 00:03:50,630
and then see some stuff
that we never thought

106
00:03:50,630 --> 00:03:52,410
that it was translated that way.

107
00:03:52,410 --> 00:03:53,270
So, that was pretty cool.

108
00:03:53,270 --> 00:03:54,420
- [Man] Yep.

109
00:03:54,420 --> 00:03:55,253
(laughing)

110
00:03:55,253 --> 00:03:56,450
- So, now using this
library what we can do

111
00:03:56,450 --> 00:03:58,410
is to start exploring the new

112
00:03:59,790 --> 00:04:03,030
or the last updates that
the ATT&CK team released

113
00:04:03,030 --> 00:04:03,910
a couple of weeks ago.

114
00:04:03,910 --> 00:04:04,743
- [Roberto] A couple of days ago.

115
00:04:04,743 --> 00:04:06,660
- A couple of days ago.

116
00:04:06,660 --> 00:04:10,170
So, of course, we know that
we have 519 techniques.

117
00:04:10,170 --> 00:04:13,373
Some of them have data
sources, others not.

118
00:04:14,320 --> 00:04:17,899
Actually, 49% of the techniques
do not have data sources.

119
00:04:17,899 --> 00:04:20,507
Now, if we split this
information by matrix, right,

120
00:04:20,507 --> 00:04:23,660
you can see that in the enterprise matrix

121
00:04:23,660 --> 00:04:25,820
we only have one data source.

122
00:04:25,820 --> 00:04:28,110
Sorry, one technique without data sources.

123
00:04:28,110 --> 00:04:30,440
This is cool because last
year, the same slide,

124
00:04:30,440 --> 00:04:32,120
we had four techniques.

125
00:04:32,120 --> 00:04:34,449
So, that means that people
is contributing to ATT&CK

126
00:04:34,449 --> 00:04:35,680
that we have Modor.

127
00:04:35,680 --> 00:04:37,910
- [Roberto] Yeah, so, there's
one that you can just go back

128
00:04:37,910 --> 00:04:39,660
this weekend and then
start working on that one

129
00:04:39,660 --> 00:04:40,822
if you wanna contribute back.

130
00:04:40,822 --> 00:04:41,655
(laughing)

131
00:04:41,655 --> 00:04:42,488
- [Jose] Yep.

132
00:04:42,488 --> 00:04:43,346
- Right there.

133
00:04:43,346 --> 00:04:44,590
That's the one you need.

134
00:04:44,590 --> 00:04:46,780
- Now, from a data source perspective,

135
00:04:46,780 --> 00:04:48,780
five mandatory, process mandatory,

136
00:04:48,780 --> 00:04:50,604
and process command line is still are

137
00:04:50,605 --> 00:04:54,500
the data sources that cover

138
00:04:54,500 --> 00:04:57,483
most of the enterprise framework.

139
00:04:58,820 --> 00:05:02,080
Now, with all this new numbers, right,

140
00:05:02,080 --> 00:05:05,680
we went back to the ATT&CK CON 2018

141
00:05:06,657 --> 00:05:08,969
where we presented a methodology to map

142
00:05:10,439 --> 00:05:13,223
ATT&CK data sources all
the way to event logs.

143
00:05:14,930 --> 00:05:18,800
Modeling our data and also
documenting our events

144
00:05:18,800 --> 00:05:22,247
we started finding relationships between

145
00:05:22,247 --> 00:05:25,060
ATT&CK data sources and event logs.

146
00:05:25,060 --> 00:05:26,580
And we start to calling

147
00:05:26,580 --> 00:05:29,443
these relationships sub-data sources.

148
00:05:31,040 --> 00:05:34,090
Now, this allowed us

149
00:05:34,090 --> 00:05:36,900
to start building a document

150
00:05:36,900 --> 00:05:37,813
which a Google Doc, right?

151
00:05:37,813 --> 00:05:38,646
- [Roberto] Yep.
- Actually.

152
00:05:38,646 --> 00:05:39,479
- [Roberto] It's a Google Doc.

153
00:05:39,479 --> 00:05:40,500
A public Google Doc, yeah.

154
00:05:40,500 --> 00:05:41,333
- Yeah.

155
00:05:41,333 --> 00:05:44,380
So, where we start documenting and

156
00:05:45,560 --> 00:05:48,070
modeling every single event log

157
00:05:48,070 --> 00:05:50,219
that we collected in our environment.

158
00:05:50,220 --> 00:05:53,520
So, if you want to get this file

159
00:05:53,520 --> 00:05:55,320
and also learn more about it,

160
00:05:55,320 --> 00:05:57,010
you can go to the link below.

161
00:05:57,010 --> 00:05:58,590
You just go to the OSSEM option

162
00:05:58,590 --> 00:05:59,719
and then type data sources

163
00:05:59,720 --> 00:06:01,180
and just click on the last option

164
00:06:01,180 --> 00:06:02,380
you have on the website.

165
00:06:04,060 --> 00:06:05,050
Now.

166
00:06:05,050 --> 00:06:06,580
- Yeah, there is a lot
more to doing there,

167
00:06:06,580 --> 00:06:08,280
which is learn that we starting noticing.

168
00:06:08,280 --> 00:06:10,131
Where now we wanted to also know

169
00:06:10,131 --> 00:06:12,796
what is actually triggering
all these events.

170
00:06:12,797 --> 00:06:13,950
What are the things that we can do

171
00:06:13,950 --> 00:06:16,190
to start mapping things to an event?

172
00:06:16,190 --> 00:06:18,650
So, not just an event
back to the data source,

173
00:06:18,650 --> 00:06:21,409
but actually back to a
potential API, for example.

174
00:06:21,410 --> 00:06:22,840
So, from a security perspective,

175
00:06:22,840 --> 00:06:24,729
we started doing this cool graph

176
00:06:24,730 --> 00:06:25,563
where we can have

177
00:06:25,563 --> 00:06:27,229
some events mapped to specific APIs.

178
00:06:27,230 --> 00:06:29,100
That was pretty cool
'cause that's allowing

179
00:06:29,100 --> 00:06:31,540
us to now start thinking data sources

180
00:06:31,540 --> 00:06:32,842
that we are probably collecting

181
00:06:32,842 --> 00:06:34,750
after a simulation, for example.

182
00:06:34,750 --> 00:06:37,963
Or how we can plan a
potential simulation as well.

183
00:06:39,010 --> 00:06:42,510
Of course, project started
the APT-To-Event Project.

184
00:06:42,510 --> 00:06:45,380
It's part of the Hunters
Forge project as well

185
00:06:45,380 --> 00:06:46,820
and here we can, for example,

186
00:06:46,820 --> 00:06:48,010
this does not cover everything

187
00:06:48,010 --> 00:06:49,638
but at least some APIs map

188
00:06:49,638 --> 00:06:52,630
to the Sysmon events ideas as well.

189
00:06:52,630 --> 00:06:55,300
So, some of them would
actually trigger these events

190
00:06:55,300 --> 00:06:57,480
and it was very helpful
to start also mapping

191
00:06:57,480 --> 00:07:00,293
a couple of other techniques
that we were simulating.

192
00:07:01,430 --> 00:07:04,500
- So, since last when we
were started documenting

193
00:07:04,500 --> 00:07:08,023
and analyzing all the data from ATT&CK.

194
00:07:09,110 --> 00:07:12,540
We found a few opportunities
to contribute back

195
00:07:12,540 --> 00:07:15,503
to the ATT&CK team all
the way since data sources

196
00:07:15,503 --> 00:07:18,120
that are covered by other data sources

197
00:07:18,120 --> 00:07:20,900
to the validation of the events IDs

198
00:07:20,900 --> 00:07:24,673
that are recommended for
every day ATT&CK data source.

199
00:07:27,699 --> 00:07:28,670
What do we mean

200
00:07:28,670 --> 00:07:31,860
with data sources covered
by other data sources

201
00:07:31,860 --> 00:07:35,093
and events logs that are too broad.

202
00:07:36,080 --> 00:07:37,659
So, this thing, this example,

203
00:07:37,660 --> 00:07:41,750
where you can see credentials
in registry technique.

204
00:07:41,750 --> 00:07:44,870
You can see all the Windows
registry data sources

205
00:07:44,870 --> 00:07:47,543
mapped to all those events on the right.

206
00:07:48,610 --> 00:07:50,240
Something very interesting here is that

207
00:07:50,240 --> 00:07:51,990
there are some events

208
00:07:51,990 --> 00:07:55,070
that are from Windows
security events logs.

209
00:07:55,070 --> 00:07:58,300
So, what we did was...

210
00:07:58,300 --> 00:08:01,800
Okay, so lets go to our data sources graph

211
00:08:01,800 --> 00:08:04,280
and actually one of the data sources

212
00:08:04,280 --> 00:08:06,210
has the name Windows Event Logs.

213
00:08:06,210 --> 00:08:08,048
So, there might be

214
00:08:08,048 --> 00:08:10,963
a correlation there between data sources.

215
00:08:11,980 --> 00:08:13,086
And this is really interesting because

216
00:08:13,086 --> 00:08:15,043
for a Windows event logs we
have at least 400 events.

217
00:08:17,489 --> 00:08:20,239
So, that's a lot of
information that we have there.

218
00:08:20,240 --> 00:08:21,630
So, what we did was to start

219
00:08:21,630 --> 00:08:24,890
just starting to segment

220
00:08:24,890 --> 00:08:27,570
our events using the

221
00:08:30,040 --> 00:08:31,840
audit categories and sub-categories

222
00:08:31,840 --> 00:08:33,380
of the event logs.

223
00:08:33,380 --> 00:08:34,720
So, for example, let's focus

224
00:08:34,720 --> 00:08:39,097
on the audit registry piece of this data

225
00:08:39,097 --> 00:08:41,360
and if you remember
the slide where we have

226
00:08:41,360 --> 00:08:44,159
all the macro and Windows
registry to event logs

227
00:08:44,159 --> 00:08:46,610
we only had two of them.

228
00:08:46,610 --> 00:08:47,660
But there are more

229
00:08:47,660 --> 00:08:50,360
and we can start getting
more context from this event.

230
00:08:51,350 --> 00:08:53,330
They are not only related

231
00:08:53,330 --> 00:08:55,690
to the Windows events logs data source.

232
00:08:55,690 --> 00:09:00,140
We can start mapping
those Window events logs

233
00:09:00,140 --> 00:09:02,780
to different data sources
like Window registry,

234
00:09:02,780 --> 00:09:07,110
file monitoring based on
the relationships between

235
00:09:08,450 --> 00:09:09,963
elements in our date model.

236
00:09:12,460 --> 00:09:15,090
We are currently collaborating
with ATT&CK team.

237
00:09:15,090 --> 00:09:16,710
We already had a couple of meetings

238
00:09:16,710 --> 00:09:18,970
with Blake and Jamie.

239
00:09:18,970 --> 00:09:21,530
So, we hope that after this presentation

240
00:09:21,530 --> 00:09:24,492
we can start contributing
with the ATT&CK team too.

241
00:09:26,690 --> 00:09:30,000
And something about the platforms.

242
00:09:30,000 --> 00:09:32,340
It's like there are some
Windows data sources

243
00:09:33,360 --> 00:09:36,910
that are mapped to platforms
that are not Windows.

244
00:09:36,910 --> 00:09:38,520
So, we need to be careful with that.

245
00:09:38,520 --> 00:09:40,880
And this could be fixed

246
00:09:40,880 --> 00:09:43,263
just if we start talking
about sub-techniques.

247
00:09:45,007 --> 00:09:45,839
- Yeah.

248
00:09:45,840 --> 00:09:47,420
So, just until there just be careful

249
00:09:47,420 --> 00:09:50,349
when you mapping things back
to specific data sources,

250
00:09:50,350 --> 00:09:51,960
keep those things in mind, right?

251
00:09:51,960 --> 00:09:53,840
How actually some data sources

252
00:09:53,840 --> 00:09:56,310
are mapped to other techniques
and other platforms as well.

253
00:09:56,310 --> 00:09:58,140
So, getting into the validation piece,

254
00:09:58,140 --> 00:09:59,710
we also found some opportunities in here.

255
00:09:59,710 --> 00:10:02,350
How can we start
recommending data sources?

256
00:10:02,350 --> 00:10:04,657
We always say, "If we
meed Windows registry,

257
00:10:04,657 --> 00:10:06,290
"let's go all this."

258
00:10:06,290 --> 00:10:07,449
Well, the reality is that

259
00:10:07,450 --> 00:10:09,130
not everybody can collect everything.

260
00:10:09,130 --> 00:10:11,200
And some people might have low bandwidth

261
00:10:11,200 --> 00:10:12,240
for collection of data.

262
00:10:12,240 --> 00:10:14,190
So, you have to be very specific.

263
00:10:14,190 --> 00:10:16,127
So, we can take all of this, for example,

264
00:10:16,127 --> 00:10:19,069
and then before we even go further

265
00:10:19,070 --> 00:10:21,210
I always ask myself, "How does this fit?

266
00:10:21,210 --> 00:10:22,500
Everything that we just talk about

267
00:10:22,500 --> 00:10:25,840
in our potential program or
things that we're working on.

268
00:10:25,840 --> 00:10:28,410
So, this, could be a basic example

269
00:10:28,410 --> 00:10:30,800
in how you do research
or develop analytics,

270
00:10:30,800 --> 00:10:32,569
everything that we talked about so far

271
00:10:32,570 --> 00:10:34,340
just falls into the modeling of data,

272
00:10:34,340 --> 00:10:36,390
documentation, identifying relationships,

273
00:10:36,390 --> 00:10:37,223
and trying to understand what it is

274
00:10:37,223 --> 00:10:39,180
that you need to collect.

275
00:10:39,180 --> 00:10:40,270
Now, next question.

276
00:10:40,270 --> 00:10:41,980
So, what do we do, then, to validate all

277
00:10:41,980 --> 00:10:44,060
of these recommended data sources?

278
00:10:44,060 --> 00:10:46,010
Well, that's right in the next step.

279
00:10:46,010 --> 00:10:47,930
Why can't we just started
doing some simulations

280
00:10:47,930 --> 00:10:49,530
so we can start mapping a couple

281
00:10:49,530 --> 00:10:52,329
of things that get
generated after a technique

282
00:10:52,330 --> 00:10:54,480
back to our data sources?

283
00:10:54,480 --> 00:10:55,710
And when we talk about simulation,

284
00:10:55,710 --> 00:10:58,820
we go beyond just testing
your AB triggering something

285
00:10:58,820 --> 00:11:00,210
or your EVR triggering something.

286
00:11:00,210 --> 00:11:02,720
We're talking about learning
about the adversary.

287
00:11:02,720 --> 00:11:05,100
Trying to map data sources
to specific actions

288
00:11:05,100 --> 00:11:06,530
all the way to even validate

289
00:11:06,530 --> 00:11:09,390
the complemented, I would say,

290
00:11:09,390 --> 00:11:11,060
the analytics that you built on the top

291
00:11:11,060 --> 00:11:12,239
of what you already paid for

292
00:11:12,240 --> 00:11:14,098
or you're getting automatically.

293
00:11:14,098 --> 00:11:16,380
So, this may be familiar for some of you.

294
00:11:16,380 --> 00:11:17,760
Just basic stuff.

295
00:11:17,760 --> 00:11:19,900
Trying to plan your specific simulation,

296
00:11:19,900 --> 00:11:23,050
execute it, try to see
if it trigger anything,

297
00:11:23,050 --> 00:11:24,670
and then go in the loop all the way

298
00:11:24,670 --> 00:11:26,170
until you feel comfortable documenting

299
00:11:26,170 --> 00:11:27,839
what it is that happened.

300
00:11:27,840 --> 00:11:31,390
If we apply this on credentials
in registry, for example,

301
00:11:31,390 --> 00:11:33,580
Mitre ATT&CK already
provides a lot of information

302
00:11:33,580 --> 00:11:37,131
that you can start using to
start getting prepared for this.

303
00:11:37,131 --> 00:11:39,079
But there is a lot of things that you need

304
00:11:39,080 --> 00:11:39,913
to do besides that, right?

305
00:11:39,913 --> 00:11:42,890
There is actually some
audit policies that you need

306
00:11:42,890 --> 00:11:43,723
to enable and make sure that you have

307
00:11:43,723 --> 00:11:45,151
some settings enabled as well.

308
00:11:45,152 --> 00:11:47,689
And, of course, if you're
talking about Window registry,

309
00:11:47,689 --> 00:11:49,810
especially in security event logs

310
00:11:49,810 --> 00:11:50,839
you can now just enable

311
00:11:50,840 --> 00:11:53,080
and expect everything single
registry just to trigger.

312
00:11:53,080 --> 00:11:54,450
You have to create other rules

313
00:11:54,450 --> 00:11:56,440
for each specific thing
that you're interested.

314
00:11:56,440 --> 00:11:58,120
Similar concept as Sysmon.

315
00:11:58,120 --> 00:12:00,179
When you create your config you map it

316
00:12:00,179 --> 00:12:01,689
to a specific interest.

317
00:12:01,690 --> 00:12:02,990
Now, what it is that we're looking for?

318
00:12:02,990 --> 00:12:04,060
Credentials and registry.

319
00:12:04,060 --> 00:12:05,239
It's a little too broad.

320
00:12:05,240 --> 00:12:07,830
So, let's just focus on a
little bit into, for example,

321
00:12:07,830 --> 00:12:11,210
the default automatic logons for example

322
00:12:11,210 --> 00:12:13,210
that you can use these three commands

323
00:12:13,210 --> 00:12:16,230
and that would enable a
user with specific credits

324
00:12:16,230 --> 00:12:18,323
to automatically logon in your system.

325
00:12:19,370 --> 00:12:21,640
How do you set an audit rule for this?

326
00:12:21,640 --> 00:12:23,750
There is a project that
we also put together.

327
00:12:23,750 --> 00:12:24,950
It's a Power shell module.

328
00:12:24,950 --> 00:12:26,790
Just import that and then you use

329
00:12:26,790 --> 00:12:31,000
a set audit rule function
to set up a monetary rule.

330
00:12:31,000 --> 00:12:34,023
For example, somebody queried
that specific registry.

331
00:12:35,140 --> 00:12:35,973
Testing commands.

332
00:12:35,973 --> 00:12:38,760
This was straight from the
Mitre ATT&CK framework,

333
00:12:38,760 --> 00:12:39,927
but then you have people telling you,

334
00:12:39,927 --> 00:12:42,027
"Hey, can you cover some more of that

335
00:12:42,027 --> 00:12:44,987
"because that doesn't go with our numbers.

336
00:12:44,987 --> 00:12:46,135
"We need to have at least three."

337
00:12:46,135 --> 00:12:47,350
(laughing)

338
00:12:47,350 --> 00:12:49,620
And so, let's just throw some
Power shell in there, right?

339
00:12:49,620 --> 00:12:51,340
How can you do these with PowerShell?

340
00:12:51,340 --> 00:12:52,270
And then if you feel that you feel

341
00:12:52,270 --> 00:12:53,727
that you're being advanced and you say,

342
00:12:53,727 --> 00:12:55,829
"Let's do C Sharp and Python,"

343
00:12:55,830 --> 00:12:58,350
you're be surprised that
doesn't change the behavior.

344
00:12:58,350 --> 00:13:02,800
But just mark it as a
very advanced variation

345
00:13:02,800 --> 00:13:05,000
'cause you're using C Sharp or Python.

346
00:13:05,000 --> 00:13:06,720
So, are we actually ready?

347
00:13:06,720 --> 00:13:08,120
Well, not yet, right?

348
00:13:08,120 --> 00:13:09,560
'Cause you need to start executing

349
00:13:09,560 --> 00:13:10,392
in a certain environment.

350
00:13:10,393 --> 00:13:12,390
There is actually
standardized and documented.

351
00:13:12,390 --> 00:13:13,990
If you do it on your own computer,

352
00:13:13,990 --> 00:13:15,080
it's not going to help anybody

353
00:13:15,080 --> 00:13:17,070
from a replication perspective.

354
00:13:17,070 --> 00:13:19,860
At the end of the day you start
doing something like this.

355
00:13:19,860 --> 00:13:22,040
Where you generate some data, you're ready

356
00:13:22,040 --> 00:13:23,540
to start validating analytics,

357
00:13:23,540 --> 00:13:26,410
and you start also learning
about these techniques,

358
00:13:26,410 --> 00:13:28,520
and once the variations kick in

359
00:13:28,520 --> 00:13:29,653
then you start getting
a little freaky now.

360
00:13:29,653 --> 00:13:31,542
There's a lot of things going on in here.

361
00:13:31,542 --> 00:13:34,410
But the reality is that
when the process queries

362
00:13:34,410 --> 00:13:35,829
or registry key value,

363
00:13:35,830 --> 00:13:37,678
there are specific events
that are going to show up.

364
00:13:37,678 --> 00:13:40,260
And it doesn't matter if it's Power shell.

365
00:13:40,260 --> 00:13:41,510
It doesn't matter if it's Python.

366
00:13:41,510 --> 00:13:43,439
It doesn't matter if
it's just plain rank Key

367
00:13:43,440 --> 00:13:44,809
or CMD commands in there.

368
00:13:44,809 --> 00:13:47,709
It's going to pretty much
generate a lot of the data sources

369
00:13:47,709 --> 00:13:49,939
that Mitre ATT&CK actually tell.

370
00:13:49,940 --> 00:13:51,740
Recommends for you to collect,

371
00:13:51,740 --> 00:13:53,390
which is process monitoring,

372
00:13:53,390 --> 00:13:55,324
handle request, handles being closed,

373
00:13:55,324 --> 00:13:57,937
access to a registry key value,

374
00:13:57,937 --> 00:14:00,270
and at the end of the
say we can go from here

375
00:14:00,270 --> 00:14:01,610
all the way to here.

376
00:14:01,610 --> 00:14:03,360
So, at the end we're
gonna start validating

377
00:14:03,360 --> 00:14:04,883
what it is that actually this technique

378
00:14:04,883 --> 00:14:07,400
is recommending for us.

379
00:14:07,400 --> 00:14:09,600
Once again Mitre ATT&CK
does a great job telling you

380
00:14:09,600 --> 00:14:11,760
you need Windows registry
because you actually

381
00:14:11,760 --> 00:14:13,890
do need that to validate some of this.

382
00:14:13,890 --> 00:14:15,850
But it's also something that you could do

383
00:14:15,850 --> 00:14:18,010
on the top of that to start validating

384
00:14:18,010 --> 00:14:21,010
what it is that you need from
a Windows registry monitoring.

385
00:14:22,200 --> 00:14:23,033
All right.

386
00:14:23,033 --> 00:14:24,270
So, we starting finding some opportunities

387
00:14:24,270 --> 00:14:26,060
in here as well where
there is a lot of things

388
00:14:26,060 --> 00:14:27,449
that we needed to go as you tell.

389
00:14:27,450 --> 00:14:29,580
A couple of slides just
to set my environment.

390
00:14:29,580 --> 00:14:33,210
Today we're generating similar data.

391
00:14:33,210 --> 00:14:35,270
Well, there is a lot of people
doing this in the world.

392
00:14:35,270 --> 00:14:36,850
A lot of teams doing this.

393
00:14:36,850 --> 00:14:38,560
Everybody just doing the same thing

394
00:14:38,560 --> 00:14:40,300
but I'm going take these slides

395
00:14:40,300 --> 00:14:41,339
and do it tomorrow.

396
00:14:41,340 --> 00:14:43,020
And there's a lot of
things that are happening

397
00:14:43,020 --> 00:14:47,210
but we keep generating
the same data, right?

398
00:14:47,210 --> 00:14:49,660
So, what if we can share our data sets?

399
00:14:49,660 --> 00:14:50,795
What if we can just grab it,

400
00:14:50,795 --> 00:14:52,760
pretty much what I just today,

401
00:14:52,760 --> 00:14:54,170
and you share it with anybody else?

402
00:14:54,170 --> 00:14:56,990
At that end of the day,
we can a lot of even teams

403
00:14:56,990 --> 00:14:59,940
that do not have people that
are doing this simulation

404
00:14:59,940 --> 00:15:01,370
assessments that have the expertise

405
00:15:01,370 --> 00:15:04,710
but that they are ready
to jump into data analysis

406
00:15:04,710 --> 00:15:06,820
or data validation and they
want to do some validation

407
00:15:06,820 --> 00:15:09,070
with ATT&CK data sources, for example.

408
00:15:09,070 --> 00:15:11,110
We're gonna start doing
something like that.

409
00:15:11,110 --> 00:15:13,220
And here is where the project
models comes into place

410
00:15:13,220 --> 00:15:17,084
where it's a repository
of pre-recorded data sets

411
00:15:17,084 --> 00:15:21,420
in JSON format categorizing
the Mitre ATT&CK way,

412
00:15:21,420 --> 00:15:23,449
and that you can use.

413
00:15:23,450 --> 00:15:27,060
And everything comes with
a lot of documentation

414
00:15:27,060 --> 00:15:28,660
because I believe that this is key.

415
00:15:28,660 --> 00:15:31,630
I want you to know why
certain events trigger.

416
00:15:31,630 --> 00:15:33,731
I just don't wanna give
you a document and say,

417
00:15:33,731 --> 00:15:37,237
"Good luck. There's formats to bypass you.

418
00:15:37,237 --> 00:15:38,350
"I'm awesome."

419
00:15:38,350 --> 00:15:39,183
No.

420
00:15:39,183 --> 00:15:40,016
(laughing)

421
00:15:40,016 --> 00:15:41,069
There's actually a lot going on in here

422
00:15:41,070 --> 00:15:43,227
that you need to
understand in order to know

423
00:15:43,227 --> 00:15:45,720
why certain telemetry trigger.

424
00:15:45,720 --> 00:15:46,910
We have certain environments

425
00:15:46,910 --> 00:15:47,959
and if you haven't noticed yet

426
00:15:47,960 --> 00:15:49,560
we love the "Lord of the Rings"

427
00:15:49,560 --> 00:15:53,160
and the shire is just a
basic Windows environment.

428
00:15:53,160 --> 00:15:54,790
Where you have you Windows computers,

429
00:15:54,790 --> 00:15:57,656
your domain controller,
your C2 box and all of that.

430
00:15:57,657 --> 00:16:00,530
And at the end of the day, we
have some telemetry enable,

431
00:16:00,530 --> 00:16:01,980
and everything is documented.

432
00:16:01,980 --> 00:16:03,500
Specific Sysmon config.

433
00:16:03,500 --> 00:16:05,218
Specific audit policies.

434
00:16:05,218 --> 00:16:07,760
We take all this data, use WEF?,

435
00:16:07,760 --> 00:16:09,670
send it to a Windows event collector,

436
00:16:09,670 --> 00:16:11,079
collect the data that Win Log,

437
00:16:11,080 --> 00:16:12,360
send them back to health,

438
00:16:12,360 --> 00:16:14,710
and then we can just start collecting

439
00:16:14,710 --> 00:16:16,513
that data also offline.

440
00:16:17,470 --> 00:16:19,610
We have another environment called Erebor,

441
00:16:19,610 --> 00:16:22,780
and this environment
is similar to the Shire

442
00:16:22,780 --> 00:16:25,702
but it uses other
telemetries such as SILKETW.

443
00:16:25,702 --> 00:16:28,470
Thank you Rubin from Far Eye.

444
00:16:28,470 --> 00:16:30,971
Awesome, awesome project
where you can actually tell

445
00:16:30,971 --> 00:16:35,646
your endpoint or SILKETW
what ETW providers to enable.

446
00:16:35,646 --> 00:16:37,468
They enable those provides.

447
00:16:37,469 --> 00:16:40,128
Some event trace sessions gets created.

448
00:16:40,128 --> 00:16:42,710
They subscribe to those ETW providers.

449
00:16:42,710 --> 00:16:44,990
SILKETW collects the data in real time

450
00:16:44,990 --> 00:16:47,360
and writes it back to an
event log in real time.

451
00:16:47,360 --> 00:16:48,950
And you're pretty much collecting data

452
00:16:48,950 --> 00:16:50,950
from ETW providers where

453
00:16:53,026 --> 00:16:54,584
the specific channel for event log

454
00:16:54,584 --> 00:16:56,160
is pretty much not set up.

455
00:16:56,160 --> 00:16:57,500
So, it was not meant to

456
00:16:57,500 --> 00:17:01,340
practically just send
events to the event log.

457
00:17:01,340 --> 00:17:03,470
We apply the same concept in here

458
00:17:03,470 --> 00:17:05,197
and you might be asking yourself,

459
00:17:05,196 --> 00:17:06,689
"How do we collect the data?"

460
00:17:06,690 --> 00:17:10,355
Well, we use Kafkacat
as our tool to import,

461
00:17:10,355 --> 00:17:15,355
to extract data, and also
to send data to a server.

462
00:17:15,720 --> 00:17:17,850
If you want to take a
snapshot of your data,

463
00:17:17,849 --> 00:17:20,579
all you got to do is
follow these commands.

464
00:17:20,579 --> 00:17:23,010
That C if for consumer mode

465
00:17:23,010 --> 00:17:26,400
and that ON at the end is
pretty start collecting

466
00:17:26,400 --> 00:17:27,700
from when you start.

467
00:17:27,700 --> 00:17:29,770
Push all that data to a file.

468
00:17:29,770 --> 00:17:30,686
And I wanna show you a video

469
00:17:30,686 --> 00:17:32,909
how that actually happens.

470
00:17:32,910 --> 00:17:34,940
What I have my coven in,

471
00:17:34,940 --> 00:17:37,520
my health stack with Kafkacat,

472
00:17:37,520 --> 00:17:39,340
and I'm putting everything into a file.

473
00:17:39,340 --> 00:17:41,570
So, it's already putting
everything into a file.

474
00:17:41,570 --> 00:17:42,677
So, you can see at the bottom.

475
00:17:42,677 --> 00:17:44,840
Coven end, I just run a command.

476
00:17:44,840 --> 00:17:46,942
Pretty much my credentials
in registry command.

477
00:17:46,942 --> 00:17:49,510
And then at the end I can just

478
00:17:49,510 --> 00:17:51,379
start validating that this would generate

479
00:17:51,380 --> 00:17:52,733
some data as well.

480
00:17:53,930 --> 00:17:54,763
And once that happens,

481
00:17:54,763 --> 00:17:57,370
I can see the password in there.

482
00:17:57,370 --> 00:17:58,229
And that's it.

483
00:17:58,230 --> 00:18:00,000
So, that was a successful testing

484
00:18:00,000 --> 00:18:02,810
of my specific simulation.

485
00:18:02,810 --> 00:18:04,860
If I go to the Mordor documentation,

486
00:18:04,860 --> 00:18:06,899
you might be asking, "Who is winning?"

487
00:18:06,900 --> 00:18:09,980
2018, that's the password Pgustavo

488
00:18:09,980 --> 00:18:12,707
and Pgustava is my dog
with his girlfriend.

489
00:18:12,707 --> 00:18:13,938
(laughing)

490
00:18:13,938 --> 00:18:16,500
That's definitely how things work in here

491
00:18:16,500 --> 00:18:17,942
and that's it.

492
00:18:17,942 --> 00:18:20,570
And then how do you get data back?

493
00:18:20,570 --> 00:18:22,538
Well, you can actually
run a similar command

494
00:18:22,538 --> 00:18:26,900
with the -P for producer
and -l to point to a file.

495
00:18:26,900 --> 00:18:28,530
And all this will be in the slides

496
00:18:28,530 --> 00:18:30,277
and you can then do it later.

497
00:18:30,277 --> 00:18:31,940
And if you don't wanna do that,

498
00:18:31,940 --> 00:18:32,773
if you say, "You know what man?

499
00:18:32,773 --> 00:18:34,447
"Give me all the data.

500
00:18:34,448 --> 00:18:35,692
"I just wanna analyze your data.

501
00:18:35,692 --> 00:18:37,050
"I don't about Kafkacat
and all of this stuff."

502
00:18:37,050 --> 00:18:39,216
Run these three commands and
you every single data set

503
00:18:39,217 --> 00:18:43,330
in JSON file format in
your system are ready.

504
00:18:43,330 --> 00:18:45,259
Simple as that.

505
00:18:45,259 --> 00:18:47,600
So, at the end of the
day we went from spending

506
00:18:47,600 --> 00:18:49,480
a lot of time producing the data

507
00:18:49,480 --> 00:18:51,359
all the way to start analyzing the data

508
00:18:51,359 --> 00:18:54,310
and also start validating our analytics.

509
00:18:54,310 --> 00:18:57,393
That's how easy it is to
do it more Modor files.

510
00:18:58,280 --> 00:18:59,117
And you might be asking yourself,

511
00:18:59,117 --> 00:18:59,950
"What do we do with this?

512
00:18:59,950 --> 00:19:01,363
"Where do we get analytics?

513
00:19:01,363 --> 00:19:02,717
"I have a lot of data.

514
00:19:02,717 --> 00:19:05,070
"I'm so anxious I don't know what to do."

515
00:19:05,070 --> 00:19:09,090
Well, Mordor and CAR can
actually live to a little bit.

516
00:19:09,090 --> 00:19:11,830
With CAR, you can have
a specific analytic.

517
00:19:11,830 --> 00:19:14,419
In this case, one provided by Tony Lambert

518
00:19:14,420 --> 00:19:15,389
from Red Canary

519
00:19:15,389 --> 00:19:17,360
and in here you can pretty much start

520
00:19:17,360 --> 00:19:20,000
interactively using Task Manger

521
00:19:20,000 --> 00:19:23,060
to get the memory contents
of L (mumbles), for example.

522
00:19:23,060 --> 00:19:25,050
Dump the memory contents of LSAS.

523
00:19:25,050 --> 00:19:26,330
And, of course, you might ask yourself,

524
00:19:26,330 --> 00:19:28,010
how do we simulate this?

525
00:19:28,010 --> 00:19:30,530
Well, I simulated that for you already

526
00:19:30,530 --> 00:19:32,097
where you can just have, for example,

527
00:19:32,097 --> 00:19:35,210
and RDP session, Kafkacat
is starting before

528
00:19:35,210 --> 00:19:37,150
we execute the simulation.

529
00:19:37,150 --> 00:19:39,830
As you can see, all the data
is being sent over there

530
00:19:39,830 --> 00:19:40,810
and I do my

531
00:19:42,294 --> 00:19:43,327
administrator logon.

532
00:19:43,327 --> 00:19:45,530
Just getting to my box.

533
00:19:45,530 --> 00:19:48,800
And first wanna check
I'm in a RDP session.

534
00:19:48,800 --> 00:19:51,090
And then from there I can start doing some

535
00:19:52,060 --> 00:19:53,750
just opening the task manager

536
00:19:53,750 --> 00:19:58,015
and I'm a very slow
(faintly speaking), sorry.

537
00:19:58,015 --> 00:19:58,848
(laughing)

538
00:19:58,848 --> 00:20:02,220
And I just go to right click on LSAS,

539
00:20:02,220 --> 00:20:03,910
click on create dump file,

540
00:20:03,910 --> 00:20:06,910
and that's pretty much
what it would be in.

541
00:20:06,910 --> 00:20:07,960
Pretty much what I wanted to take.

542
00:20:07,960 --> 00:20:09,685
And at the end of the day,

543
00:20:09,685 --> 00:20:12,004
I can pretty much have
that data at the bottom.

544
00:20:12,004 --> 00:20:14,060
As you can tell, everything that I'm doing

545
00:20:14,060 --> 00:20:16,530
is being recording to a file.

546
00:20:16,530 --> 00:20:18,466
That's how simple it
is just to collect data

547
00:20:18,466 --> 00:20:21,489
as you're doing a simulation to validate

548
00:20:22,844 --> 00:20:24,803
your recommended data sources as well.

549
00:20:26,220 --> 00:20:27,053
All right.

550
00:20:27,890 --> 00:20:30,850
So, CAR Analytics gives
you also some analytics.

551
00:20:30,850 --> 00:20:32,629
Things that you can start playing with.

552
00:20:32,630 --> 00:20:35,323
And they provided this for file creation.

553
00:20:36,300 --> 00:20:37,133
You might ask yourself,

554
00:20:37,133 --> 00:20:38,300
"Where do I run this?"

555
00:20:38,300 --> 00:20:39,940
And, well, there's a lot of places

556
00:20:39,940 --> 00:20:40,773
where you can run this.

557
00:20:40,773 --> 00:20:41,760
A lot of Sims.

558
00:20:41,760 --> 00:20:44,488
I love to use Jupyter
Notebooks to do this.

559
00:20:44,488 --> 00:20:47,002
And Jupyter Notebooks are just

560
00:20:47,002 --> 00:20:48,500
think about Jupyter Notebooks

561
00:20:48,500 --> 00:20:50,770
as a file that you can
access to the web interface

562
00:20:50,770 --> 00:20:54,500
where you can save input,
output, visualizations,

563
00:20:54,500 --> 00:20:56,900
and notes to tell the
story about your analytic.

564
00:20:57,850 --> 00:20:58,760
The way how it works?

565
00:20:58,760 --> 00:21:02,107
It actually has this Kernal
and client infrastructure

566
00:21:02,107 --> 00:21:05,910
where once again it gets
input, evaluates the input,

567
00:21:05,910 --> 00:21:07,840
and then he gets you the data back.

568
00:21:07,840 --> 00:21:09,568
And this is pretty much
what it will look like

569
00:21:09,568 --> 00:21:11,160
as an architecture.

570
00:21:11,160 --> 00:21:13,540
The beautiful thing about
Jupyter is that the Kernel

571
00:21:13,540 --> 00:21:15,600
is not the Windows
operating system Kernal.

572
00:21:15,600 --> 00:21:16,433
Nothing to do with that.

573
00:21:16,433 --> 00:21:19,350
It's pretty much the analytics piece,

574
00:21:19,350 --> 00:21:20,966
the engine that will execute things.

575
00:21:20,967 --> 00:21:23,823
And the beauty of this
you can have R, Python,

576
00:21:23,823 --> 00:21:26,390
Pice Park, anything like
that, which is amazing.

577
00:21:26,390 --> 00:21:28,240
So, why don't we take this

578
00:21:28,240 --> 00:21:29,821
and put it into a Jupyter Notebook,

579
00:21:29,821 --> 00:21:32,750
which is gonna be posted
on the Hunter Playbook

580
00:21:32,750 --> 00:21:34,240
because we use Jupyter Notebooks

581
00:21:34,240 --> 00:21:35,807
for all our analytics.

582
00:21:35,807 --> 00:21:38,600
And that's my dog, by the way, as well.

583
00:21:38,600 --> 00:21:40,919
I love my dogs on my stickers.

584
00:21:40,920 --> 00:21:43,400
We're gonna use a library
created by Jose as well,

585
00:21:43,400 --> 00:21:45,460
which allows me to do
some statistical analysis.

586
00:21:45,460 --> 00:21:46,610
We're not gonna use some of that

587
00:21:46,610 --> 00:21:49,814
but just to let you know why
we're using that in there.

588
00:21:49,815 --> 00:21:50,937
And the way how this works is

589
00:21:50,937 --> 00:21:55,719
we're gonna grab this specific notebook.

590
00:21:55,720 --> 00:21:57,480
We have some tags and descriptions

591
00:21:57,480 --> 00:21:59,075
about the specific analytic,

592
00:21:59,075 --> 00:22:01,160
which I like to actually document.

593
00:22:01,160 --> 00:22:03,100
I wanna have a specific format to tell you

594
00:22:03,100 --> 00:22:05,590
the story about my analytic.

595
00:22:05,590 --> 00:22:07,705
Some data sources, and also some

596
00:22:07,705 --> 00:22:11,550
data sets Modor that I'm using
to validate this analytic,

597
00:22:11,550 --> 00:22:14,105
and then I can just now
processing this dataset.

598
00:22:14,105 --> 00:22:16,810
And you're gonna have
this notebook as well.

599
00:22:16,810 --> 00:22:19,936
So, the idea here is
just to grab this data

600
00:22:19,936 --> 00:22:23,736
and put it in a way that I
can start running queries.

601
00:22:23,737 --> 00:22:28,330
But how I do this, I actually
make my data a SQL view,

602
00:22:28,330 --> 00:22:31,490
which would allow me to
run SZL queries on the top.

603
00:22:31,490 --> 00:22:33,140
Every single step is documented

604
00:22:33,140 --> 00:22:36,188
and I can start running the CAR analytics.

605
00:22:36,188 --> 00:22:37,342
CAR analytics analytic,

606
00:22:37,342 --> 00:22:40,090
which is looking for process creation

607
00:22:40,090 --> 00:22:43,030
from task manager with
the extension of DMP

608
00:22:43,030 --> 00:22:46,070
with the string LSAS, for example, right?

609
00:22:46,070 --> 00:22:47,973
And I can do that with Sysmon as well.

610
00:22:49,290 --> 00:22:51,210
And I have some other analytics

611
00:22:51,210 --> 00:22:53,430
that I can start running, for example.

612
00:22:53,430 --> 00:22:55,770
Trying to do some process,
accessing a process,

613
00:22:55,770 --> 00:22:57,251
where I can just start doing.

614
00:22:57,251 --> 00:23:00,410
For example, in here
looking for the cold trace.

615
00:23:00,410 --> 00:23:02,010
Looking for a specific DLLs

616
00:23:02,010 --> 00:23:05,850
where the APIs are used for dumping.

617
00:23:05,850 --> 00:23:08,770
The memory contents of
a process and all that.

618
00:23:08,770 --> 00:23:10,783
So, pretty simple stuff and

619
00:23:10,783 --> 00:23:13,270
at the end you're gonna
have some extra ture

620
00:23:13,270 --> 00:23:14,985
through analytics in this notebook

621
00:23:14,985 --> 00:23:16,939
where I can actually look, for example,

622
00:23:16,940 --> 00:23:18,430
with out task managers.

623
00:23:18,430 --> 00:23:23,430
Show me any(?) that is actually
accessing LSAS and all that.

624
00:23:23,780 --> 00:23:25,240
And then I can join stuff,

625
00:23:25,240 --> 00:23:27,090
which I love about Jupyter notebooks.

626
00:23:27,090 --> 00:23:29,855
You can run, joints, and test your stuff,

627
00:23:29,855 --> 00:23:31,400
and I think that the isone.

628
00:23:31,400 --> 00:23:33,650
It just gives me some more context

629
00:23:33,650 --> 00:23:36,107
about the process accessing a process.

630
00:23:36,107 --> 00:23:38,550
I'm joining that with a process creation

631
00:23:38,550 --> 00:23:41,510
because it gives me
extra information such as

632
00:23:41,510 --> 00:23:42,670
Lowen ID.

633
00:23:42,670 --> 00:23:46,100
And I can say then that
Lowen ID and then joining

634
00:23:46,100 --> 00:23:47,209
with another event.

635
00:23:47,210 --> 00:23:50,070
In this case if we scroll
down a little bit (laughs)

636
00:23:50,070 --> 00:23:53,145
it's gonna be the event 4778,

637
00:23:53,145 --> 00:23:56,581
which tells me when a new
session is actually started

638
00:23:56,581 --> 00:23:59,709
and in there I can actually see that

639
00:23:59,710 --> 00:24:02,438
somebody was running a RDP session

640
00:24:02,438 --> 00:24:05,010
mapped to a process creation.

641
00:24:05,010 --> 00:24:07,494
Mapped to a process accessing LSAS

642
00:24:07,494 --> 00:24:09,766
with this specific DLLs and all of that.

643
00:24:09,767 --> 00:24:11,617
So, you can see the results in there.

644
00:24:12,960 --> 00:24:13,793
All right.

645
00:24:13,793 --> 00:24:14,626
So, this is cool.

646
00:24:14,626 --> 00:24:15,940
We pretty much took a CAR analytic,

647
00:24:15,940 --> 00:24:17,698
modeled the dataset, and
we start playing with it,

648
00:24:17,698 --> 00:24:19,560
and something that we're doing

649
00:24:19,560 --> 00:24:21,182
is building a community around this.

650
00:24:21,182 --> 00:24:24,110
And this is the Public Slug channel

651
00:24:24,110 --> 00:24:26,010
that you can access and get a free invite.

652
00:24:26,010 --> 00:24:28,300
That's gonna be in the slides at the end.

653
00:24:28,300 --> 00:24:30,320
But something that I'm doing is actually

654
00:24:30,320 --> 00:24:33,770
doing now giving you a Mordo dataset

655
00:24:33,770 --> 00:24:35,560
and a Jupyter Notebook,

656
00:24:35,560 --> 00:24:37,100
and everybody gets a notebook now.

657
00:24:37,100 --> 00:24:39,740
So, we're gonna do this in three minutes.

658
00:24:39,740 --> 00:24:42,202
So, the way how this works
is a project called Binder,

659
00:24:42,202 --> 00:24:44,340
and the way that this works it allows you

660
00:24:44,340 --> 00:24:46,980
to put together all of these services

661
00:24:46,980 --> 00:24:48,357
that at the end of the day what it does

662
00:24:48,357 --> 00:24:51,810
it actually creates an
open infrastructure for you

663
00:24:51,810 --> 00:24:53,611
to use with Jupyter Notebooks.

664
00:24:53,612 --> 00:24:57,240
You can take the Threat
Hunter Playbook Repo,

665
00:24:57,240 --> 00:24:59,360
and then that's going
to pretty much create

666
00:24:59,360 --> 00:25:02,290
your own Jupyter Notebook
server in Binder,

667
00:25:02,290 --> 00:25:03,550
and you can use it.

668
00:25:03,550 --> 00:25:07,139
So, we can pretty much
do something like this.

669
00:25:07,140 --> 00:25:09,410
If you were streaming
this right now, anybody,

670
00:25:09,410 --> 00:25:10,874
go to Threat Hunter Playbook,

671
00:25:10,874 --> 00:25:14,843
scroll down and the video starts.

672
00:25:17,660 --> 00:25:18,779
There you go.

673
00:25:18,779 --> 00:25:19,612
(coughing)

674
00:25:19,612 --> 00:25:20,580
One.

675
00:25:20,580 --> 00:25:22,212
I think I started the video.

676
00:25:22,212 --> 00:25:23,045
Ah.

677
00:25:25,610 --> 00:25:26,669
I don't know where the video is.

678
00:25:26,670 --> 00:25:27,840
- [Roberto] It's written there?

679
00:25:27,840 --> 00:25:28,685
- (faintly speaking)

680
00:25:28,685 --> 00:25:29,518
Oh, yeah.

681
00:25:29,518 --> 00:25:30,351
So, anyways.

682
00:25:30,351 --> 00:25:33,130
So, just go to this specific link in here,

683
00:25:33,130 --> 00:25:35,020
order the Threat Hunter Playbook.

684
00:25:35,020 --> 00:25:36,560
I don't see any played in there

685
00:25:36,560 --> 00:25:37,860
so that's pretty interesting.

686
00:25:37,860 --> 00:25:40,560
So, when you go there is
gonna be a Binder like.

687
00:25:40,560 --> 00:25:42,760
You click on it and it's gonna pretty much

688
00:25:42,760 --> 00:25:44,378
stay in that Jupyter server

689
00:25:44,378 --> 00:25:47,820
with Mordor dataset,
Jupyter Notebooks as well,

690
00:25:47,820 --> 00:25:51,090
map to specific analytics
that are mapped to a tag.

691
00:25:51,090 --> 00:25:53,649
Some of them are actually
mapped to the current analytics

692
00:25:53,650 --> 00:25:56,330
to extend the analytics portion of that,

693
00:25:56,330 --> 00:25:59,199
and then you will be able
to run all that together

694
00:25:59,200 --> 00:26:01,720
in pretty much a Jupyter
Notebook in the cloud.

695
00:26:01,720 --> 00:26:04,150
So, open infrastructure for open hunts

696
00:26:04,150 --> 00:26:05,790
that you can use for free,

697
00:26:05,790 --> 00:26:07,389
and the Threat Hunter Playbook has that

698
00:26:07,390 --> 00:26:09,050
as a back in at the moment.

699
00:26:09,050 --> 00:26:10,512
So, if you're live streaming,

700
00:26:10,512 --> 00:26:12,060
go there and click on it,

701
00:26:12,060 --> 00:26:14,330
and you might break Binder
'cause there's a lot of people

702
00:26:14,330 --> 00:26:15,163
in the live stream right now.

703
00:26:15,163 --> 00:26:16,460
(laughing)

704
00:26:16,460 --> 00:26:17,830
We're going this for the community,

705
00:26:17,830 --> 00:26:19,495
and we love to empower the community.

706
00:26:19,495 --> 00:26:22,239
And, of course, we cannot
just do it by ourselves.

707
00:26:22,240 --> 00:26:23,370
We wanna do it together,

708
00:26:23,370 --> 00:26:25,120
and all of the things
that we build, once again,

709
00:26:25,120 --> 00:26:26,330
are open source and things

710
00:26:26,330 --> 00:26:27,770
that we can share with the community,

711
00:26:27,770 --> 00:26:29,160
and pretty much give it to people

712
00:26:29,160 --> 00:26:31,850
that do not have the
resources or the flexibility

713
00:26:31,850 --> 00:26:33,090
just to build something.

714
00:26:33,090 --> 00:26:34,600
You can just click a link now

715
00:26:34,600 --> 00:26:37,449
and get all of these
data sources and stuff

716
00:26:37,450 --> 00:26:39,370
going on for free.

717
00:26:39,370 --> 00:26:42,020
Through your browser and I
think that that's pretty cool

718
00:26:42,020 --> 00:26:44,142
'cause I can actually reach
out to any part of the world

719
00:26:44,142 --> 00:26:46,709
to be able to run analytics and validate

720
00:26:46,709 --> 00:26:50,630
what we're building with real-time queries

721
00:26:50,630 --> 00:26:53,335
and also data sources
that we built as well.

722
00:26:53,335 --> 00:26:56,161
These are all the references that we have

723
00:26:56,161 --> 00:26:59,342
and before anything thank you very much.

724
00:26:59,342 --> 00:27:01,420
Muchas Gracias for everything

725
00:27:01,420 --> 00:27:03,410
and thank you ATT&CK
Con for the conference

726
00:27:03,410 --> 00:27:04,320
and for letting us be here.

727
00:27:04,320 --> 00:27:05,350
Thank you.

728
00:27:05,350 --> 00:27:07,766
(applauding)

