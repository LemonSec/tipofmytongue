1
00:00:09,330 --> 00:00:11,860
<font color="#CCCCCC">I think today</font><font color="#E5E5E5"> by the</font><font color="#CCCCCC"> IHC</font><font color="#E5E5E5"> our fellow of</font>

2
00:00:11,339 --> 00:00:13,750
course

3
00:00:11,860 --> 00:00:16,779
<font color="#CCCCCC">mentally pros to</font><font color="#E5E5E5"> become an</font><font color="#CCCCCC"> IAS er fellow</font>

4
00:00:13,750 --> 00:00:18,640
<font color="#E5E5E5">but eventually you run out of Chelsea's</font>

5
00:00:16,779 --> 00:00:20,259
and Manchester United's and you start

6
00:00:18,640 --> 00:00:22,810
<font color="#E5E5E5">having to give rewards</font><font color="#CCCCCC"> to West Ham</font>

7
00:00:20,259 --> 00:00:25,000
<font color="#CCCCCC">United and you know you go to the curve</font>

8
00:00:22,810 --> 00:00:26,890
<font color="#E5E5E5">the middle of the Premiership or even</font>

9
00:00:25,000 --> 00:00:28,599
the bottom<font color="#CCCCCC"> of the Premiership so I know</font>

10
00:00:26,890 --> 00:00:30,210
exactly<font color="#CCCCCC"> where I stand in the hierarchy</font>

11
00:00:28,599 --> 00:00:32,829
<font color="#CCCCCC">but but thank you</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> those</font><font color="#E5E5E5"> kind words</font>

12
00:00:30,210 --> 00:00:35,920
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so I'm going to talk about SSH and</font>

13
00:00:32,829 --> 00:00:37,170
this is unashamedly a crypto talk but I

14
00:00:35,920 --> 00:00:40,120
actually got<font color="#E5E5E5"> to</font><font color="#CCCCCC"> talk a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> about</font>

15
00:00:37,170 --> 00:00:42,340
software<font color="#CCCCCC"> vulnerabilities and patching</font>

16
00:00:40,120 --> 00:00:43,570
and the dangers of patching<font color="#CCCCCC"> crypto</font><font color="#E5E5E5"> code</font>

17
00:00:42,340 --> 00:00:46,210
<font color="#E5E5E5">so there's a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> of kind of</font>

18
00:00:43,570 --> 00:00:48,550
coding software<font color="#E5E5E5"> in there as well</font><font color="#CCCCCC"> but I</font>

19
00:00:46,210 --> 00:00:50,110
am a cryptographer<font color="#CCCCCC"> okay and I'm</font><font color="#E5E5E5"> proud to</font>

20
00:00:48,550 --> 00:00:51,279
<font color="#CCCCCC">admit</font><font color="#E5E5E5"> I'm a cryptographer</font><font color="#CCCCCC"> and I think</font>

21
00:00:50,110 --> 00:00:52,780
you'll see quite<font color="#E5E5E5"> a lot of crypto today</font>

22
00:00:51,280 --> 00:00:55,120
<font color="#E5E5E5">maybe a little bit in contrast to</font>

23
00:00:52,780 --> 00:00:56,440
<font color="#E5E5E5">yesterday so I have 45 minutes I'm going</font>

24
00:00:55,120 --> 00:00:58,690
<font color="#E5E5E5">to try and cover as much</font><font color="#CCCCCC"> of this as I</font>

25
00:00:56,440 --> 00:01:00,430
can<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> something's gone wrong on</font>

26
00:00:58,690 --> 00:01:01,899
<font color="#CCCCCC">this</font><font color="#E5E5E5"> slide but I'll fix</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> later so</font>

27
00:01:00,430 --> 00:01:03,370
I'm gonna talk<font color="#E5E5E5"> about SSH and talk about</font>

28
00:01:01,899 --> 00:01:05,590
<font color="#E5E5E5">the measurement study we did what we</font>

29
00:01:03,370 --> 00:01:07,689
<font color="#E5E5E5">learned</font><font color="#CCCCCC"> from that</font><font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> the</font>

30
00:01:05,590 --> 00:01:09,909
<font color="#E5E5E5">security analysis that one can do of the</font>

31
00:01:07,689 --> 00:01:11,710
different encryption<font color="#E5E5E5"> modes</font><font color="#CCCCCC"> in SSH so I</font>

32
00:01:09,909 --> 00:01:13,360
guess SSH doesn't really<font color="#E5E5E5"> need very much</font>

33
00:01:11,710 --> 00:01:16,658
<font color="#CCCCCC">of an instruction here</font><font color="#E5E5E5"> how many</font><font color="#CCCCCC"> of you</font>

34
00:01:13,360 --> 00:01:17,770
<font color="#E5E5E5">are using SSH okay maybe I should ask if</font>

35
00:01:16,659 --> 00:01:21,490
the other way<font color="#CCCCCC"> around is anybody not</font>

36
00:01:17,770 --> 00:01:23,350
using SSH is anybody not using SSH right

37
00:01:21,490 --> 00:01:25,720
now at this very moment<font color="#E5E5E5"> to log</font><font color="#CCCCCC"> into some</font>

38
00:01:23,350 --> 00:01:28,289
remote machine somewhere<font color="#CCCCCC"> okay so it's a</font>

39
00:01:25,720 --> 00:01:31,840
very<font color="#E5E5E5"> important tool that we all rely</font><font color="#CCCCCC"> on</font>

40
00:01:28,290 --> 00:01:35,260
and this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> Baku pedia page for</font><font color="#E5E5E5"> our</font>

41
00:01:31,840 --> 00:01:37,150
part<font color="#E5E5E5"> of the Wikipedia page</font><font color="#CCCCCC"> but SSH</font>

42
00:01:35,260 --> 00:01:39,790
really<font color="#E5E5E5"> hasn't had as much attention as</font>

43
00:01:37,150 --> 00:01:44,619
other protocols have like SSL TLS<font color="#E5E5E5"> for</font>

44
00:01:39,790 --> 00:01:47,320
example<font color="#E5E5E5"> so we way back in 2008 2009</font>

45
00:01:44,619 --> 00:01:48,250
started<font color="#E5E5E5"> looking at it</font><font color="#CCCCCC"> and it's one</font><font color="#E5E5E5"> of</font>

46
00:01:47,320 --> 00:01:50,289
those<font color="#E5E5E5"> things that's been kind of</font>

47
00:01:48,250 --> 00:01:52,420
rattling<font color="#E5E5E5"> around in my head ever since as</font>

48
00:01:50,290 --> 00:01:54,250
an interesting thing<font color="#CCCCCC"> to come back to and</font>

49
00:01:52,420 --> 00:01:56,530
every time you<font color="#E5E5E5"> come back to a complex</font>

50
00:01:54,250 --> 00:01:58,240
protocol you see new<font color="#CCCCCC"> things and</font><font color="#E5E5E5"> you</font>

51
00:01:56,530 --> 00:02:00,250
<font color="#E5E5E5">learn new things about the cryptography</font>

52
00:01:58,240 --> 00:02:02,229
there and that's a I think<font color="#E5E5E5"> an important</font>

53
00:02:00,250 --> 00:02:03,549
lesson<font color="#E5E5E5"> in life is</font><font color="#CCCCCC"> to not</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> think that</font>

54
00:02:02,229 --> 00:02:05,619
you know<font color="#CCCCCC"> everything the first time you</font>

55
00:02:03,549 --> 00:02:09,220
you encounter it but to repeatedly

56
00:02:05,619 --> 00:02:11,640
revisit the topic<font color="#E5E5E5"> so what is SSH doing</font>

57
00:02:09,220 --> 00:02:14,379
to your data well<font color="#E5E5E5"> this is how the</font>

58
00:02:11,640 --> 00:02:16,059
<font color="#E5E5E5">symmetric encryption in SSH is working</font>

59
00:02:14,379 --> 00:02:17,768
so we're going<font color="#E5E5E5"> to actually ignore the</font>

60
00:02:16,060 --> 00:02:20,440
fact that some complicated key exchange

61
00:02:17,769 --> 00:02:21,730
protocol has taken place<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> some</font>

62
00:02:20,440 --> 00:02:23,020
keys have been<font color="#E5E5E5"> established</font><font color="#CCCCCC"> some</font>

63
00:02:21,730 --> 00:02:24,609
cryptographic keys we're going to assume

64
00:02:23,020 --> 00:02:25,240
<font color="#CCCCCC">that's all</font><font color="#E5E5E5"> been</font><font color="#CCCCCC"> done and</font><font color="#E5E5E5"> now we're</font>

65
00:02:24,610 --> 00:02:27,160
looking at<font color="#E5E5E5"> what</font>

66
00:02:25,240 --> 00:02:29,440
<font color="#E5E5E5">happens to your username</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> password</font>

67
00:02:27,160 --> 00:02:31,480
<font color="#CCCCCC">when</font><font color="#E5E5E5"> you're entering them into an SSH</font>

68
00:02:29,440 --> 00:02:33,760
session<font color="#E5E5E5"> so that's the payload that we</font>

69
00:02:31,480 --> 00:02:35,829
<font color="#E5E5E5">want to protect sequence of bytes</font><font color="#CCCCCC"> but</font>

70
00:02:33,760 --> 00:02:38,140
data get encoded<font color="#E5E5E5"> in some way so we have</font>

71
00:02:35,830 --> 00:02:41,380
<font color="#E5E5E5">some padding</font><font color="#CCCCCC"> we have a packet length</font>

72
00:02:38,140 --> 00:02:42,970
field<font color="#E5E5E5"> and so on and then we apply an</font>

73
00:02:41,380 --> 00:02:45,760
encryption algorithm to that so think

74
00:02:42,970 --> 00:02:47,560
here<font color="#E5E5E5"> of something like CBC mode of a</font>

75
00:02:45,760 --> 00:02:49,540
block cipher<font color="#E5E5E5"> or maybe counter mode of a</font>

76
00:02:47,560 --> 00:02:52,090
block cipher<font color="#CCCCCC"> this gives us our cipher</font>

77
00:02:49,540 --> 00:02:54,609
<font color="#CCCCCC">text</font><font color="#E5E5E5"> notice that the the sequence</font><font color="#CCCCCC"> number</font>

78
00:02:52,090 --> 00:02:56,410
hasn't<font color="#E5E5E5"> been used yet notice also that</font>

79
00:02:54,610 --> 00:02:58,510
this field the packet length field is

80
00:02:56,410 --> 00:03:01,810
actually<font color="#CCCCCC"> being encrypted</font><font color="#E5E5E5"> as part of the</font>

81
00:02:58,510 --> 00:03:04,149
data<font color="#E5E5E5"> okay so when we see the sequence of</font>

82
00:03:01,810 --> 00:03:06,490
<font color="#CCCCCC">ciphertext bytes</font><font color="#E5E5E5"> on the wire going</font><font color="#CCCCCC"> from</font>

83
00:03:04,150 --> 00:03:07,990
<font color="#CCCCCC">a client</font><font color="#E5E5E5"> to a server there's no sort of</font>

84
00:03:06,490 --> 00:03:09,790
metadata<font color="#E5E5E5"> there like the length</font>

85
00:03:07,990 --> 00:03:12,580
information is<font color="#E5E5E5"> actually hidden and</font>

86
00:03:09,790 --> 00:03:14,829
that's a<font color="#E5E5E5"> deliberate design decision by</font>

87
00:03:12,580 --> 00:03:17,160
the<font color="#E5E5E5"> ssh designers to hide as much data</font>

88
00:03:14,830 --> 00:03:19,300
<font color="#E5E5E5">as possible about about</font><font color="#CCCCCC"> ssh packets</font><font color="#E5E5E5"> of</font>

89
00:03:17,160 --> 00:03:22,180
<font color="#CCCCCC">course we want some kind of</font><font color="#E5E5E5"> integrity</font>

90
00:03:19,300 --> 00:03:23,830
<font color="#CCCCCC">protection so what ssh does is it takes</font>

91
00:03:22,180 --> 00:03:25,510
the sequence number and<font color="#CCCCCC"> this encoded</font>

92
00:03:23,830 --> 00:03:27,910
payload and puts it through a<font color="#CCCCCC"> mock</font>

93
00:03:25,510 --> 00:03:29,799
algorithm you can<font color="#E5E5E5"> think here of</font><font color="#CCCCCC"> H Mac as</font>

94
00:03:27,910 --> 00:03:32,230
your<font color="#CCCCCC"> Mac algorithm</font><font color="#E5E5E5"> and that gives us a</font>

95
00:03:29,800 --> 00:03:34,420
<font color="#E5E5E5">Mac tag and this is the data the cipher</font>

96
00:03:32,230 --> 00:03:36,000
<font color="#E5E5E5">text concatenated with the Mac tag that</font>

97
00:03:34,420 --> 00:03:38,350
<font color="#E5E5E5">is actually transmitted on the wire</font>

98
00:03:36,000 --> 00:03:41,620
between a client and a server<font color="#E5E5E5"> maybe in a</font>

99
00:03:38,350 --> 00:03:43,720
sequence of TCP segments you know over

100
00:03:41,620 --> 00:03:47,260
IP<font color="#E5E5E5"> okay so this is all running over</font>

101
00:03:43,720 --> 00:03:49,540
<font color="#E5E5E5">tcp/ip</font><font color="#CCCCCC"> at the application layer</font><font color="#E5E5E5"> so this</font>

102
00:03:47,260 --> 00:03:52,030
<font color="#E5E5E5">is what's known</font><font color="#CCCCCC"> as a stateful and</font><font color="#E5E5E5"> code</font>

103
00:03:49,540 --> 00:03:54,220
then encrypt<font color="#E5E5E5"> and Mac construction which</font>

104
00:03:52,030 --> 00:03:57,010
is<font color="#CCCCCC"> a bit of a mouthful so</font><font color="#E5E5E5"> focus on the</font>

105
00:03:54,220 --> 00:03:58,990
<font color="#CCCCCC">enm part first enm means encrypt and</font><font color="#E5E5E5"> Mac</font>

106
00:03:57,010 --> 00:04:01,390
there<font color="#E5E5E5"> are three basic</font><font color="#CCCCCC"> ways of combining</font>

107
00:03:58,990 --> 00:04:03,160
an encryption scheme<font color="#E5E5E5"> and a Mac algorithm</font>

108
00:04:01,390 --> 00:04:05,380
to make a strongly secure encryption

109
00:04:03,160 --> 00:04:07,210
scheme<font color="#E5E5E5"> sometimes you get strong security</font>

110
00:04:05,380 --> 00:04:09,370
sometimes you don't and one of them is

111
00:04:07,210 --> 00:04:11,500
encrypt and Mike<font color="#E5E5E5"> the other two are Mac</font>

112
00:04:09,370 --> 00:04:14,830
then encrypt<font color="#E5E5E5"> which is what SSL was using</font>

113
00:04:11,500 --> 00:04:16,839
and TLS until recently<font color="#E5E5E5"> and then the</font>

114
00:04:14,830 --> 00:04:18,190
final one is<font color="#E5E5E5"> Mac then encrypt and</font>

115
00:04:16,839 --> 00:04:20,140
actually of those three things<font color="#E5E5E5"> the only</font>

116
00:04:18,190 --> 00:04:21,910
<font color="#E5E5E5">one that's really generically secure is</font>

117
00:04:20,140 --> 00:04:24,190
<font color="#E5E5E5">Mac</font><font color="#CCCCCC"> vending</font><font color="#E5E5E5"> necessary is</font>

118
00:04:21,910 --> 00:04:25,960
encrypt-then-mac<font color="#CCCCCC"> so let's encrypt and</font>

119
00:04:24,190 --> 00:04:27,760
Mac construction where you take the

120
00:04:25,960 --> 00:04:29,469
<font color="#CCCCCC">plaintext and</font><font color="#E5E5E5"> you encrypt it</font><font color="#CCCCCC"> and then</font>

121
00:04:27,760 --> 00:04:31,630
you also apply<font color="#CCCCCC"> a Mac algorithm to the</font>

122
00:04:29,470 --> 00:04:35,290
<font color="#E5E5E5">plaintext</font><font color="#CCCCCC"> it's not really the best</font>

123
00:04:31,630 --> 00:04:36,250
<font color="#E5E5E5">construction to use it we say encode</font>

124
00:04:35,290 --> 00:04:38,480
that encrypt-then-mac

125
00:04:36,250 --> 00:04:40,160
because of the<font color="#E5E5E5"> fact that the peel</font>

126
00:04:38,480 --> 00:04:42,170
is also put in some<font color="#CCCCCC"> data structure</font>

127
00:04:40,160 --> 00:04:43,460
before<font color="#E5E5E5"> the encryption is done and we say</font>

128
00:04:42,170 --> 00:04:45,500
<font color="#E5E5E5">it's stable because here we have a</font>

129
00:04:43,460 --> 00:04:47,840
sequence<font color="#CCCCCC"> number which is a</font><font color="#E5E5E5"> four by</font>

130
00:04:45,500 --> 00:04:50,150
values for 32-bit<font color="#E5E5E5"> value which is</font>

131
00:04:47,840 --> 00:04:52,280
increasing for<font color="#E5E5E5"> each by one for each</font>

132
00:04:50,150 --> 00:04:54,080
<font color="#E5E5E5">packet that we send on an</font><font color="#CCCCCC"> SSH connection</font>

133
00:04:52,280 --> 00:04:56,119
<font color="#E5E5E5">okay so every packet will get a new</font>

134
00:04:54,080 --> 00:04:58,159
sequence number incorporated into the

135
00:04:56,120 --> 00:05:01,100
Mac computation and this is important

136
00:04:58,160 --> 00:05:02,540
for for preventing replay attacks and

137
00:05:01,100 --> 00:05:05,690
detecting the fact<font color="#E5E5E5"> that the data might</font>

138
00:05:02,540 --> 00:05:07,610
have been reordered by an attacker<font color="#E5E5E5"> okay</font>

139
00:05:05,690 --> 00:05:09,920
<font color="#E5E5E5">so the packet length field here is a</font>

140
00:05:07,610 --> 00:05:12,770
<font color="#E5E5E5">four byte value 32 bits and it's</font>

141
00:05:09,920 --> 00:05:14,600
measuring<font color="#CCCCCC"> the</font><font color="#E5E5E5"> length of this data so</font>

142
00:05:12,770 --> 00:05:16,729
it's<font color="#CCCCCC"> actually measuring the</font><font color="#E5E5E5"> size of the</font>

143
00:05:14,600 --> 00:05:18,830
<font color="#E5E5E5">the padding line field which is 1 by</font><font color="#CCCCCC"> 2</font>

144
00:05:16,730 --> 00:05:20,540
<font color="#E5E5E5">plus the length of the payload plus the</font>

145
00:05:18,830 --> 00:05:22,700
<font color="#E5E5E5">length of the padding but it doesn't</font>

146
00:05:20,540 --> 00:05:24,350
<font color="#E5E5E5">include itself PC I mean it's not self</font>

147
00:05:22,700 --> 00:05:26,450
referential<font color="#CCCCCC"> okay and it doesn't</font><font color="#E5E5E5"> include</font>

148
00:05:24,350 --> 00:05:29,810
<font color="#E5E5E5">the sequence number so it's everything</font>

149
00:05:26,450 --> 00:05:34,130
<font color="#E5E5E5">from here to</font><font color="#CCCCCC"> the end of the of the</font><font color="#E5E5E5"> year</font>

150
00:05:29,810 --> 00:05:35,720
of<font color="#E5E5E5"> the plaintext</font><font color="#CCCCCC"> okay good</font><font color="#E5E5E5"> and there's</font>

151
00:05:34,130 --> 00:05:37,100
an RFC for<font color="#E5E5E5"> this that describes various</font>

152
00:05:35,720 --> 00:05:40,190
different modes and so on how you can

153
00:05:37,100 --> 00:05:43,300
how you can do this<font color="#E5E5E5"> there's also there's</font>

154
00:05:40,190 --> 00:05:45,290
<font color="#E5E5E5">also an IRC for counter mode RSC</font><font color="#CCCCCC"> 4 3 4 4</font>

155
00:05:43,300 --> 00:05:48,020
for the corresponding block cipher so

156
00:05:45,290 --> 00:05:50,090
you can use<font color="#CCCCCC"> AES in Cottonwood ok so a</font>

157
00:05:48,020 --> 00:05:52,460
little<font color="#E5E5E5"> bit of history about this</font><font color="#CCCCCC"> so this</font>

158
00:05:50,090 --> 00:05:55,929
<font color="#CCCCCC">was you know came into service</font><font color="#E5E5E5"> in the</font>

159
00:05:52,460 --> 00:05:57,919
<font color="#E5E5E5">late 90s and then in 2002</font><font color="#CCCCCC"> some</font>

160
00:05:55,930 --> 00:06:00,140
cryptographers got hold of this<font color="#CCCCCC"> Volare</font>

161
00:05:57,920 --> 00:06:02,270
corner and<font color="#CCCCCC"> nine peremptory introduced a</font>

162
00:06:00,140 --> 00:06:04,219
new security notion don't worry this is

163
00:06:02,270 --> 00:06:05,750
the only heavy<font color="#E5E5E5"> DD slide in the whole</font>

164
00:06:04,220 --> 00:06:08,480
talk after that<font color="#E5E5E5"> it's all just</font><font color="#CCCCCC"> bits</font><font color="#E5E5E5"> and</font>

165
00:06:05,750 --> 00:06:09,890
bytes<font color="#CCCCCC"> all the way down</font><font color="#E5E5E5"> so just for the</font>

166
00:06:08,480 --> 00:06:11,600
moment bear with me<font color="#E5E5E5"> if you notice if</font>

167
00:06:09,890 --> 00:06:13,640
you're not into theory and<font color="#E5E5E5"> it's really</font>

168
00:06:11,600 --> 00:06:15,410
they<font color="#CCCCCC"> develop this nice security model a</font>

169
00:06:13,640 --> 00:06:17,870
stateful security model and they were

170
00:06:15,410 --> 00:06:20,330
<font color="#CCCCCC">able to prove something</font><font color="#E5E5E5"> nice about SSH</font>

171
00:06:17,870 --> 00:06:23,420
in particular<font color="#E5E5E5"> the</font><font color="#CCCCCC"> SSH</font><font color="#E5E5E5"> encounter mode was</font>

172
00:06:20,330 --> 00:06:25,159
secure and<font color="#E5E5E5"> also SSH and CBC mode was</font>

173
00:06:23,420 --> 00:06:27,140
secure as long<font color="#CCCCCC"> as you use random</font>

174
00:06:25,160 --> 00:06:29,390
<font color="#E5E5E5">initialization vectors for CBC mode</font>

175
00:06:27,140 --> 00:06:32,450
which is actually not what SSH was doing

176
00:06:29,390 --> 00:06:34,610
<font color="#CCCCCC">ssh was doing chained initialization</font>

177
00:06:32,450 --> 00:06:36,430
vectors<font color="#E5E5E5"> like in SSL v3 or something or</font>

178
00:06:34,610 --> 00:06:38,930
TLS 1.0

179
00:06:36,430 --> 00:06:40,850
<font color="#CCCCCC">ok so then that</font><font color="#E5E5E5"> was great</font>

180
00:06:38,930 --> 00:06:44,210
error we get<font color="#E5E5E5"> some nice validation</font><font color="#CCCCCC"> but</font>

181
00:06:40,850 --> 00:06:46,730
<font color="#CCCCCC">unfortunately</font><font color="#E5E5E5"> in 2009 we saw myself and</font>

182
00:06:44,210 --> 00:06:49,190
<font color="#E5E5E5">Martin Albirex and Gavin Watson produced</font>

183
00:06:46,730 --> 00:06:50,780
an attack against SSH<font color="#E5E5E5"> in CBC mode and of</font>

184
00:06:49,190 --> 00:06:52,010
course the attack is I would<font color="#CCCCCC"> cite of the</font>

185
00:06:50,780 --> 00:06:54,830
security<font color="#E5E5E5"> model</font>

186
00:06:52,010 --> 00:06:57,200
is just beyond the reach<font color="#E5E5E5"> of the security</font>

187
00:06:54,830 --> 00:06:59,479
model<font color="#E5E5E5"> so this is a an important lesson</font>

188
00:06:57,200 --> 00:07:00,800
<font color="#CCCCCC">for</font><font color="#E5E5E5"> practitioners I think the if a</font>

189
00:06:59,480 --> 00:07:03,620
cryptographer comes to you<font color="#E5E5E5"> and says</font><font color="#CCCCCC"> I</font>

190
00:07:00,800 --> 00:07:05,900
proven<font color="#CCCCCC"> it's secure</font><font color="#E5E5E5"> you should say show</font>

191
00:07:03,620 --> 00:07:07,520
<font color="#CCCCCC">me</font><font color="#E5E5E5"> your security model okay and get them</font>

192
00:07:05,900 --> 00:07:09,169
to explain to you why their security

193
00:07:07,520 --> 00:07:11,810
model<font color="#CCCCCC"> captures all of the</font><font color="#E5E5E5"> important</font>

194
00:07:09,170 --> 00:07:13,460
attacks in practice and probably<font color="#E5E5E5"> pretty</font>

195
00:07:11,810 --> 00:07:16,400
soon you'll<font color="#E5E5E5"> have them admitting that it</font>

196
00:07:13,460 --> 00:07:18,890
doesn't so the attack exploited

197
00:07:16,400 --> 00:07:22,210
<font color="#E5E5E5">fragmented delivery and tcp/ip and this</font>

198
00:07:18,890 --> 00:07:25,130
is the idea<font color="#CCCCCC"> that an attacker can take a</font>

199
00:07:22,210 --> 00:07:27,049
small number of<font color="#E5E5E5"> bytes and deliver it to</font>

200
00:07:25,130 --> 00:07:28,940
<font color="#E5E5E5">an</font><font color="#CCCCCC"> ssh implementation</font><font color="#E5E5E5"> say running</font><font color="#CCCCCC"> on a</font>

201
00:07:27,050 --> 00:07:30,950
server<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then see how the server</font>

202
00:07:28,940 --> 00:07:32,510
reacts to that sequence<font color="#CCCCCC"> of bytes</font><font color="#E5E5E5"> and</font>

203
00:07:30,950 --> 00:07:34,099
then send another fragment<font color="#CCCCCC"> and another</font>

204
00:07:32,510 --> 00:07:35,840
<font color="#E5E5E5">fragment and we'll come back to this</font>

205
00:07:34,100 --> 00:07:38,180
attack in a few slides time and talk

206
00:07:35,840 --> 00:07:39,950
about<font color="#CCCCCC"> it in</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit more detail</font><font color="#CCCCCC"> so</font>

207
00:07:38,180 --> 00:07:42,530
the at that<font color="#E5E5E5"> time the leading</font>

208
00:07:39,950 --> 00:07:46,250
implementation of open<font color="#E5E5E5"> of SSH was open</font>

209
00:07:42,530 --> 00:07:48,440
SSH they<font color="#CCCCCC"> claim to</font><font color="#E5E5E5"> be about</font><font color="#CCCCCC"> 80% of</font>

210
00:07:46,250 --> 00:07:50,930
servers on<font color="#CCCCCC"> the internet and they</font>

211
00:07:48,440 --> 00:07:53,090
released a<font color="#E5E5E5"> patch to stop</font><font color="#CCCCCC"> this specific</font>

212
00:07:50,930 --> 00:07:54,800
attack<font color="#CCCCCC"> okay so we have an attack</font>

213
00:07:53,090 --> 00:07:56,840
I<font color="#E5E5E5"> was side of the model which</font>

214
00:07:54,800 --> 00:07:58,730
invalidates the security proof and then

215
00:07:56,840 --> 00:08:02,989
we have a patch for<font color="#E5E5E5"> that specific attack</font>

216
00:07:58,730 --> 00:08:05,000
<font color="#E5E5E5">okay but no security proof in 2010 we</font>

217
00:08:02,990 --> 00:08:06,860
decided that we should<font color="#CCCCCC"> really see what</font>

218
00:08:05,000 --> 00:08:10,640
we could prove in a more realistic

219
00:08:06,860 --> 00:08:12,890
security model so we<font color="#E5E5E5"> proved</font><font color="#CCCCCC"> that</font>

220
00:08:10,640 --> 00:08:15,620
actually<font color="#E5E5E5"> SSH encounter mode is secure in</font>

221
00:08:12,890 --> 00:08:17,419
an extended security model that captures

222
00:08:15,620 --> 00:08:19,760
<font color="#E5E5E5">this</font><font color="#CCCCCC"> ability</font><font color="#E5E5E5"> of the attacker to</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

223
00:08:17,420 --> 00:08:22,580
<font color="#E5E5E5">deliver small amounts of ciphertext to</font>

224
00:08:19,760 --> 00:08:25,820
to a server<font color="#CCCCCC"> okay this kind of frag</font>

225
00:08:22,580 --> 00:08:28,729
we called it fragmented<font color="#CCCCCC"> ciphertext</font><font color="#E5E5E5"> and</font>

226
00:08:25,820 --> 00:08:30,800
then in 2012<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see that I like to</font>

227
00:08:28,730 --> 00:08:32,390
keep coming<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to problems</font><font color="#CCCCCC"> we wrote</font>

228
00:08:30,800 --> 00:08:34,729
another<font color="#E5E5E5"> research paper less this one was</font>

229
00:08:32,390 --> 00:08:36,559
published<font color="#E5E5E5"> at Euro 2012</font><font color="#CCCCCC"> and we'd</font><font color="#E5E5E5"> kind of</font>

230
00:08:34,729 --> 00:08:39,260
a general study of these kinds of

231
00:08:36,559 --> 00:08:41,119
<font color="#CCCCCC">encryption schemes supporting fragmented</font>

232
00:08:39,260 --> 00:08:44,090
<font color="#E5E5E5">decryption fragmented delivery and</font>

233
00:08:41,120 --> 00:08:46,490
decryption<font color="#E5E5E5"> of of cipher texts</font><font color="#CCCCCC"> okay and</font>

234
00:08:44,090 --> 00:08:48,830
we came<font color="#CCCCCC"> up with</font><font color="#E5E5E5"> a new security notion in</font>

235
00:08:46,490 --> 00:08:51,350
<font color="#E5E5E5">CFA security we also came up</font><font color="#CCCCCC"> with some</font>

236
00:08:48,830 --> 00:08:53,900
<font color="#CCCCCC">additional</font><font color="#E5E5E5"> security properties that SSH</font>

237
00:08:51,350 --> 00:08:56,180
seems to be<font color="#E5E5E5"> trying to provide but isn't</font>

238
00:08:53,900 --> 00:08:58,340
really<font color="#CCCCCC"> very successfully providing in</font>

239
00:08:56,180 --> 00:09:00,050
particular<font color="#E5E5E5"> this idea of boundary hiding</font>

240
00:08:58,340 --> 00:09:02,570
<font color="#E5E5E5">so if we go</font><font color="#CCCCCC"> back to the picture for</font><font color="#E5E5E5"> just</font>

241
00:09:00,050 --> 00:09:04,490
one moment<font color="#E5E5E5"> here the packet length field</font>

242
00:09:02,570 --> 00:09:05,630
is<font color="#CCCCCC"> encrypted and so if you look at</font><font color="#E5E5E5"> the</font>

243
00:09:04,490 --> 00:09:08,390
<font color="#E5E5E5">sequence of packets</font>

244
00:09:05,630 --> 00:09:11,000
message packets on the<font color="#E5E5E5"> wire you just get</font>

245
00:09:08,390 --> 00:09:12,740
a sequence of chunks like<font color="#E5E5E5"> this and for</font>

246
00:09:11,000 --> 00:09:15,020
<font color="#E5E5E5">the particular encryption schemes in use</font>

247
00:09:12,740 --> 00:09:17,120
that means that you<font color="#E5E5E5"> are at an attacker</font>

248
00:09:15,020 --> 00:09:19,520
<font color="#CCCCCC">all you see</font><font color="#E5E5E5"> the long sequence of</font><font color="#CCCCCC"> random</font>

249
00:09:17,120 --> 00:09:22,520
bytes<font color="#CCCCCC"> you can't tell where one ends and</font>

250
00:09:19,520 --> 00:09:24,680
<font color="#E5E5E5">the next begins</font><font color="#CCCCCC"> okay so imagine</font><font color="#E5E5E5"> a bunch</font>

251
00:09:22,520 --> 00:09:27,050
of<font color="#CCCCCC"> these structures put back-to-back on</font>

252
00:09:24,680 --> 00:09:28,550
<font color="#E5E5E5">the network flowing across</font><font color="#CCCCCC"> a network it</font>

253
00:09:27,050 --> 00:09:29,240
just looks like a long<font color="#E5E5E5"> sequence of</font>

254
00:09:28,550 --> 00:09:33,290
random<font color="#E5E5E5"> bytes</font>

255
00:09:29,240 --> 00:09:35,540
okay so<font color="#E5E5E5"> TLS is trying to sorry SSH is</font>

256
00:09:33,290 --> 00:09:37,370
trying to<font color="#CCCCCC"> achieve this kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> binary</font>

257
00:09:35,540 --> 00:09:39,050
hiding property so<font color="#E5E5E5"> you can't see where</font>

258
00:09:37,370 --> 00:09:42,170
one ciphertext ends and the<font color="#CCCCCC"> next one</font>

259
00:09:39,050 --> 00:09:44,329
begins<font color="#E5E5E5"> so we we</font><font color="#CCCCCC"> modeled this two in our</font>

260
00:09:42,170 --> 00:09:45,949
<font color="#E5E5E5">2012 paper and another property related</font>

261
00:09:44,330 --> 00:09:47,660
<font color="#E5E5E5">to</font><font color="#CCCCCC"> denial-of-service which I guess</font><font color="#E5E5E5"> will</font>

262
00:09:45,950 --> 00:09:48,110
<font color="#E5E5E5">come back to it I'll say more about it</font>

263
00:09:47,660 --> 00:09:51,980
<font color="#CCCCCC">later</font>

264
00:09:48,110 --> 00:09:54,410
<font color="#E5E5E5">so that brings us up to 2015 that's</font>

265
00:09:51,980 --> 00:09:56,060
where<font color="#E5E5E5"> SSH stood we had some attacks we</font>

266
00:09:54,410 --> 00:10:00,530
had some security<font color="#E5E5E5"> proofs there was you</font>

267
00:09:56,060 --> 00:10:02,989
know so we in 2015 we decided to do a

268
00:10:00,530 --> 00:10:05,540
measurement study of<font color="#CCCCCC"> SSH deployment and</font>

269
00:10:02,990 --> 00:10:08,660
the reason we<font color="#E5E5E5"> did this is also sort of</font>

270
00:10:05,540 --> 00:10:11,420
<font color="#E5E5E5">interesting in the UK our government</font>

271
00:10:08,660 --> 00:10:13,339
assesses<font color="#E5E5E5"> all of our research every six</font>

272
00:10:11,420 --> 00:10:15,500
<font color="#E5E5E5">or seven years</font><font color="#CCCCCC"> I'm one of it one</font><font color="#E5E5E5"> of the</font>

273
00:10:13,340 --> 00:10:17,900
<font color="#E5E5E5">things they assess is impact did you</font>

274
00:10:15,500 --> 00:10:18,830
change the world<font color="#E5E5E5"> with your research and</font>

275
00:10:17,900 --> 00:10:21,680
<font color="#CCCCCC">we have to write these case studies</font>

276
00:10:18,830 --> 00:10:23,420
explaining how we change the<font color="#CCCCCC"> world okay</font>

277
00:10:21,680 --> 00:10:25,760
it's a lot of<font color="#CCCCCC"> BS</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> we have to do it</font>

278
00:10:23,420 --> 00:10:27,079
right<font color="#CCCCCC"> so we thought well</font><font color="#E5E5E5"> maybe SSH would</font>

279
00:10:25,760 --> 00:10:29,420
make a good case study<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we had</font>

280
00:10:27,080 --> 00:10:31,310
this attack in 2009 you know and maybe

281
00:10:29,420 --> 00:10:33,229
<font color="#E5E5E5">things changed right maybe you could see</font>

282
00:10:31,310 --> 00:10:35,209
that the West people<font color="#CCCCCC"> were using CBC</font><font color="#E5E5E5"> mode</font>

283
00:10:33,230 --> 00:10:39,020
<font color="#E5E5E5">more people were using counter mode or</font>

284
00:10:35,210 --> 00:10:40,700
<font color="#E5E5E5">something so we decided to start a</font>

285
00:10:39,020 --> 00:10:42,439
measurement study<font color="#E5E5E5"> and that actually led</font>

286
00:10:40,700 --> 00:10:44,690
to<font color="#E5E5E5"> a whole sequence of things which</font>

287
00:10:42,440 --> 00:10:46,070
which led to<font color="#E5E5E5"> this paper that</font><font color="#CCCCCC"> uriah</font>

288
00:10:44,690 --> 00:10:48,890
referred<font color="#CCCCCC"> to in his in his</font><font color="#E5E5E5"> introduction</font>

289
00:10:46,070 --> 00:10:51,410
published at<font color="#E5E5E5"> CCS last year so what do</font><font color="#CCCCCC"> we</font>

290
00:10:48,890 --> 00:10:53,300
do<font color="#E5E5E5"> we did two internet</font><font color="#CCCCCC"> wide scans we use</font>

291
00:10:51,410 --> 00:10:56,270
the sort of standard<font color="#E5E5E5"> tools for this</font><font color="#CCCCCC"> G</font>

292
00:10:53,300 --> 00:10:58,280
<font color="#CCCCCC">grab and z map we grab banners and we</font>

293
00:10:56,270 --> 00:11:00,740
got and what<font color="#E5E5E5"> we really</font><font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to find</font>

294
00:10:58,280 --> 00:11:03,860
out<font color="#E5E5E5"> is which algorithm does each SSH</font>

295
00:11:00,740 --> 00:11:06,200
server on the<font color="#E5E5E5"> internet prefer we found</font>

296
00:11:03,860 --> 00:11:09,650
about<font color="#E5E5E5"> two to the 24 servers so about 16</font>

297
00:11:06,200 --> 00:11:12,230
<font color="#E5E5E5">million servers that were responding</font><font color="#CCCCCC"> to</font>

298
00:11:09,650 --> 00:11:15,050
<font color="#E5E5E5">SSH connection requests in each of our</font>

299
00:11:12,230 --> 00:11:17,480
two scans<font color="#E5E5E5"> we did two scans roughly one</font>

300
00:11:15,050 --> 00:11:18,770
and<font color="#CCCCCC"> a half months apart</font><font color="#E5E5E5"> we didn't really</font>

301
00:11:17,480 --> 00:11:19,250
we were a bit surprised by that<font color="#E5E5E5"> number</font>

302
00:11:18,770 --> 00:11:21,620
<font color="#E5E5E5">that means</font>

303
00:11:19,250 --> 00:11:22,430
like one in every 256 hosts on the

304
00:11:21,620 --> 00:11:25,310
<font color="#CCCCCC">Internet</font>

305
00:11:22,430 --> 00:11:29,479
out of all<font color="#E5E5E5"> 2</font><font color="#CCCCCC"> to the 32 IP addresses</font><font color="#E5E5E5"> ipv4</font>

306
00:11:25,310 --> 00:11:32,719
addresses is running<font color="#E5E5E5"> SSH</font><font color="#CCCCCC"> ok that's quite</font>

307
00:11:29,480 --> 00:11:35,480
a lot of SSH servers so what do<font color="#E5E5E5"> we find</font>

308
00:11:32,720 --> 00:11:36,800
here's some data<font color="#E5E5E5"> about Russian numbers</font>

309
00:11:35,480 --> 00:11:38,750
and there's a<font color="#E5E5E5"> little bit smaller</font><font color="#CCCCCC"> here at</font>

310
00:11:36,800 --> 00:11:40,430
the back I did warn<font color="#CCCCCC"> you to move</font><font color="#E5E5E5"> forward</font>

311
00:11:38,750 --> 00:11:44,330
it's<font color="#CCCCCC"> not too late to</font><font color="#E5E5E5"> move if you want to</font>

312
00:11:40,430 --> 00:11:47,300
move<font color="#E5E5E5"> and what can</font><font color="#CCCCCC"> you see here</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> ok</font>

313
00:11:44,330 --> 00:11:49,490
<font color="#E5E5E5">lots of open SSH and lots of drop there</font>

314
00:11:47,300 --> 00:11:50,810
<font color="#CCCCCC">I didn't really know what drop there was</font>

315
00:11:49,490 --> 00:11:52,720
when we started<font color="#CCCCCC"> this research</font>

316
00:11:50,810 --> 00:11:55,250
anybody here know what drop<font color="#CCCCCC"> air is</font>

317
00:11:52,720 --> 00:11:58,490
<font color="#CCCCCC">usually good good so I'm ignorant and</font>

318
00:11:55,250 --> 00:12:00,440
you're much better informed<font color="#CCCCCC"> and so this</font>

319
00:11:58,490 --> 00:12:02,420
is<font color="#CCCCCC"> actually kind of a small footprint</font>

320
00:12:00,440 --> 00:12:04,520
implementation of SSH<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> very</font>

321
00:12:02,420 --> 00:12:09,250
popular<font color="#E5E5E5"> in embedded systems</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> home</font>

322
00:12:04,520 --> 00:12:11,630
<font color="#CCCCCC">rooters and</font><font color="#E5E5E5"> so on ok and I see</font>

323
00:12:09,250 --> 00:12:13,760
everything else<font color="#CCCCCC"> adds up to less than 5%</font>

324
00:12:11,630 --> 00:12:17,270
<font color="#E5E5E5">of what we could see on the</font><font color="#CCCCCC"> Internet</font>

325
00:12:13,760 --> 00:12:18,500
so 95%<font color="#E5E5E5"> is</font><font color="#CCCCCC"> OpenSSH and</font><font color="#E5E5E5"> drop there and you</font>

326
00:12:17,270 --> 00:12:21,500
start<font color="#CCCCCC"> to look at things like virtual</font>

327
00:12:18,500 --> 00:12:25,310
numbers and you see<font color="#E5E5E5"> that for example you</font>

328
00:12:21,500 --> 00:12:28,850
know<font color="#CCCCCC"> 42% of drop beer that's like 8</font>

329
00:12:25,310 --> 00:12:31,489
million servers<font color="#E5E5E5"> roughly is drop beer a</font>

330
00:12:28,850 --> 00:12:32,480
2014 version<font color="#CCCCCC"> of</font><font color="#E5E5E5"> draw beer</font><font color="#CCCCCC"> and this is in</font>

331
00:12:31,490 --> 00:12:34,880
late 2015

332
00:12:32,480 --> 00:12:36,800
so there's a kind<font color="#CCCCCC"> of time lag in</font><font color="#E5E5E5"> new</font>

333
00:12:34,880 --> 00:12:41,810
versions of drop<font color="#E5E5E5"> they're being being</font>

334
00:12:36,800 --> 00:12:43,370
distributed<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so ok</font><font color="#CCCCCC"> now an interesting</font>

335
00:12:41,810 --> 00:12:45,290
<font color="#E5E5E5">thing here is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> nearly a million</font>

336
00:12:43,370 --> 00:12:47,630
while<font color="#E5E5E5"> million</font><font color="#CCCCCC"> Felicity</font><font color="#E5E5E5"> nearly</font><font color="#CCCCCC"> 900</font>

337
00:12:45,290 --> 00:12:51,199
<font color="#CCCCCC">thousand of these servers are older than</font>

338
00:12:47,630 --> 00:12:53,180
version 0.5<font color="#CCCCCC"> to of dropper and the reason</font>

339
00:12:51,200 --> 00:12:56,089
that<font color="#E5E5E5"> is significant is that it was only</font>

340
00:12:53,180 --> 00:12:56,810
in 0.5 to that counter mode was

341
00:12:56,089 --> 00:12:59,960
implemented

342
00:12:56,810 --> 00:13:02,689
so prior to 0.5<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the only</font><font color="#E5E5E5"> mode</font><font color="#CCCCCC"> of</font>

343
00:12:59,960 --> 00:13:04,850
encryption<font color="#E5E5E5"> with CBC mode and that's</font>

344
00:13:02,690 --> 00:13:07,700
vulnerable<font color="#E5E5E5"> to a variation of our 2009</font>

345
00:13:04,850 --> 00:13:10,400
attack so there's<font color="#CCCCCC"> 900,000</font><font color="#E5E5E5"> servers out</font>

346
00:13:07,700 --> 00:13:11,050
there<font color="#E5E5E5"> that prefer a cipher suite which</font>

347
00:13:10,400 --> 00:13:14,750
is broken

348
00:13:11,050 --> 00:13:20,599
<font color="#CCCCCC">ok out</font><font color="#E5E5E5"> of 16 million that we find that's</font>

349
00:13:14,750 --> 00:13:21,950
<font color="#E5E5E5">not great</font><font color="#CCCCCC"> ok moving</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> OpenSSH</font><font color="#E5E5E5"> and the</font>

350
00:13:20,600 --> 00:13:24,740
first thing<font color="#CCCCCC"> that struck me</font><font color="#E5E5E5"> here is that</font>

351
00:13:21,950 --> 00:13:27,770
<font color="#CCCCCC">the most</font><font color="#E5E5E5"> popular version</font><font color="#CCCCCC"> of OpenSSH is</font>

352
00:13:24,740 --> 00:13:31,640
<font color="#CCCCCC">OpenSSH version 5.3 which was released</font>

353
00:13:27,770 --> 00:13:32,750
<font color="#E5E5E5">in about 2009 this is ancient</font><font color="#CCCCCC"> an ancient</font>

354
00:13:31,640 --> 00:13:34,550
version<font color="#CCCCCC"> now that</font>

355
00:13:32,750 --> 00:13:36,530
<font color="#CCCCCC">I</font><font color="#E5E5E5"> mean it hasn't been patched</font><font color="#CCCCCC"> and this</font>

356
00:13:34,550 --> 00:13:38,479
is probably dominated by the major<font color="#E5E5E5"> Linux</font>

357
00:13:36,530 --> 00:13:41,329
distros<font color="#E5E5E5"> so it's maybe not as big a</font>

358
00:13:38,480 --> 00:13:44,870
disaster<font color="#CCCCCC"> as it looks</font><font color="#E5E5E5"> but still there's a</font>

359
00:13:41,330 --> 00:13:47,870
lot of old<font color="#CCCCCC"> SSH</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> OpenSSH out there so</font>

360
00:13:44,870 --> 00:13:50,450
what does this say<font color="#CCCCCC"> oh yeah okay so this</font>

361
00:13:47,870 --> 00:13:53,570
says well<font color="#E5E5E5"> if you look carefully about</font>

362
00:13:50,450 --> 00:13:55,670
166 thousands of the servers are<font color="#E5E5E5"> over</font>

363
00:13:53,570 --> 00:13:57,800
<font color="#CCCCCC">other than version 5.2 and prefer CBC</font>

364
00:13:55,670 --> 00:14:00,920
mode so potentially vulnerable<font color="#CCCCCC"> to our</font>

365
00:13:57,800 --> 00:14:02,120
2009<font color="#E5E5E5"> tag directly against</font><font color="#CCCCCC"> OpenSSH</font><font color="#E5E5E5"> okay</font>

366
00:14:00,920 --> 00:14:04,160
<font color="#E5E5E5">so if you add those two numbers together</font>

367
00:14:02,120 --> 00:14:05,540
<font color="#E5E5E5">nine hundred thousand plus hundred</font>

368
00:14:04,160 --> 00:14:07,490
<font color="#E5E5E5">sixty-six thousand you get more</font><font color="#CCCCCC"> than a</font>

369
00:14:05,540 --> 00:14:09,949
million servers<font color="#E5E5E5"> which are</font><font color="#CCCCCC"> vulnerable to</font>

370
00:14:07,490 --> 00:14:11,690
some verse which would prefer a<font color="#E5E5E5"> cipher</font>

371
00:14:09,950 --> 00:14:14,000
suite which is vulnerable<font color="#CCCCCC"> to a new</font><font color="#E5E5E5"> an</font>

372
00:14:11,690 --> 00:14:18,500
attack<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I don't think that's very</font>

373
00:14:14,000 --> 00:14:20,090
<font color="#E5E5E5">good okay so moving forward I think I've</font>

374
00:14:18,500 --> 00:14:23,210
said<font color="#CCCCCC"> all of this let's</font><font color="#E5E5E5"> look at now the</font>

375
00:14:20,090 --> 00:14:25,400
preferred algorithms by version<font color="#E5E5E5"> so</font><font color="#CCCCCC"> what</font>

376
00:14:23,210 --> 00:14:27,980
<font color="#CCCCCC">we could open SSH and</font><font color="#E5E5E5"> say what</font>

377
00:14:25,400 --> 00:14:29,600
algorithms did those servers<font color="#CCCCCC"> say that</font>

378
00:14:27,980 --> 00:14:31,820
they would prefer<font color="#E5E5E5"> to use above</font><font color="#CCCCCC"> anything</font>

379
00:14:29,600 --> 00:14:34,190
<font color="#E5E5E5">else and what you see here</font><font color="#CCCCCC"> is there's a</font>

380
00:14:31,820 --> 00:14:36,170
lot of counter<font color="#E5E5E5"> mode okay if there's a</font>

381
00:14:34,190 --> 00:14:37,910
lot<font color="#E5E5E5"> of other stuff as well</font><font color="#CCCCCC"> and there's</font>

382
00:14:36,170 --> 00:14:39,650
stuff in here<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we didn't even know</font>

383
00:14:37,910 --> 00:14:40,819
what<font color="#CCCCCC"> it was and we couldn't</font><font color="#E5E5E5"> find any</font>

384
00:14:39,650 --> 00:14:43,610
documentation for it

385
00:14:40,820 --> 00:14:45,500
so for<font color="#E5E5E5"> example anything that ends</font><font color="#CCCCCC"> I can</font>

386
00:14:43,610 --> 00:14:48,770
get my laser pointer going and the thing

387
00:14:45,500 --> 00:14:52,130
that<font color="#E5E5E5"> ends ETM okay at that's short for</font>

388
00:14:48,770 --> 00:14:55,280
<font color="#CCCCCC">ETM</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> OpenSSH</font><font color="#E5E5E5"> comm and we didn't know</font>

389
00:14:52,130 --> 00:14:58,370
what this<font color="#CCCCCC"> was and it turns out</font><font color="#E5E5E5"> that in a</font>

390
00:14:55,280 --> 00:15:00,020
<font color="#E5E5E5">row in</font><font color="#CCCCCC"> 2013 2014 the OpenSSH team</font>

391
00:14:58,370 --> 00:15:03,020
decided<font color="#E5E5E5"> to add their own</font>

392
00:15:00,020 --> 00:15:04,490
<font color="#E5E5E5">encrypt-then-mac construction that's</font>

393
00:15:03,020 --> 00:15:06,230
great<font color="#CCCCCC"> they'd be</font><font color="#E5E5E5"> paying attention</font><font color="#CCCCCC"> to the</font>

394
00:15:04,490 --> 00:15:08,000
<font color="#E5E5E5">literature and they had seen that</font>

395
00:15:06,230 --> 00:15:09,800
encrypt-then-mac was the most robust

396
00:15:08,000 --> 00:15:13,010
thing you could do<font color="#E5E5E5"> so they added it to</font>

397
00:15:09,800 --> 00:15:14,930
their to their<font color="#E5E5E5"> code base okay but it</font>

398
00:15:13,010 --> 00:15:18,530
<font color="#E5E5E5">isn't documented anywhere</font><font color="#CCCCCC"> they just</font>

399
00:15:14,930 --> 00:15:20,750
added<font color="#E5E5E5"> it to the code base</font><font color="#CCCCCC"> okay we'll</font>

400
00:15:18,530 --> 00:15:23,030
come<font color="#E5E5E5"> back to</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and if you can't it</font>

401
00:15:20,750 --> 00:15:25,430
turns out there's<font color="#E5E5E5"> 155 different</font>

402
00:15:23,030 --> 00:15:27,890
combinations that are preferred by at

403
00:15:25,430 --> 00:15:29,420
least one server on the<font color="#CCCCCC"> internet</font><font color="#E5E5E5"> but</font>

404
00:15:27,890 --> 00:15:31,610
<font color="#E5E5E5">many of them is a very very small number</font>

405
00:15:29,420 --> 00:15:34,520
<font color="#CCCCCC">of servers but still that's</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot of</font>

406
00:15:31,610 --> 00:15:36,800
<font color="#E5E5E5">diversity</font><font color="#CCCCCC"> I think a little</font><font color="#E5E5E5"> bit of crypto</font>

407
00:15:34,520 --> 00:15:38,660
diversity is a good thing<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> a lot</font>

408
00:15:36,800 --> 00:15:40,910
of crypto diversity is<font color="#CCCCCC"> not necessarily a</font>

409
00:15:38,660 --> 00:15:43,790
good thing<font color="#CCCCCC"> ok so there's lots of counter</font>

410
00:15:40,910 --> 00:15:45,709
mode lots of followed by CBC there's a

411
00:15:43,790 --> 00:15:46,459
<font color="#CCCCCC">lots of</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> ETM thing</font><font color="#E5E5E5"> there's a little</font>

412
00:15:45,709 --> 00:15:49,040
bit of<font color="#E5E5E5"> ChaCha</font>

413
00:15:46,460 --> 00:15:51,830
- auntie<font color="#E5E5E5"> Paula</font><font color="#CCCCCC"> 1305</font><font color="#E5E5E5"> and that's actually</font>

414
00:15:49,040 --> 00:15:54,079
<font color="#CCCCCC">no the default in OpenSSH since</font><font color="#E5E5E5"> version</font>

415
00:15:51,830 --> 00:15:56,180
seven point something or<font color="#E5E5E5"> six point</font>

416
00:15:54,080 --> 00:15:58,010
something<font color="#E5E5E5"> so you would expect</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> see</font>

417
00:15:56,180 --> 00:16:01,550
this<font color="#E5E5E5"> going up in the figures eventually</font>

418
00:15:58,010 --> 00:16:04,100
but<font color="#E5E5E5"> right now our back in 2015-2016 it</font>

419
00:16:01,550 --> 00:16:07,189
was running<font color="#E5E5E5"> at about</font><font color="#CCCCCC"> 1.7 percent and a</font>

420
00:16:04,100 --> 00:16:07,760
tiny amount of<font color="#E5E5E5"> GCM you can use AES</font><font color="#CCCCCC"> TCM</font>

421
00:16:07,190 --> 00:16:09,500
as well

422
00:16:07,760 --> 00:16:11,800
<font color="#E5E5E5">I didn't describe how to do that but</font>

423
00:16:09,500 --> 00:16:14,570
it's also<font color="#CCCCCC"> available</font>

424
00:16:11,800 --> 00:16:16,699
okay what about<font color="#CCCCCC"> drop</font><font color="#E5E5E5"> beer well as you</font>

425
00:16:14,570 --> 00:16:19,580
<font color="#E5E5E5">would expect</font><font color="#CCCCCC"> from a small</font><font color="#E5E5E5"> a small</font>

426
00:16:16,700 --> 00:16:20,990
footprint<font color="#E5E5E5"> implementation there's much</font>

427
00:16:19,580 --> 00:16:23,930
less diversity<font color="#E5E5E5"> there's much fewer</font>

428
00:16:20,990 --> 00:16:26,300
<font color="#E5E5E5">algorithms supported and actually 90% of</font>

429
00:16:23,930 --> 00:16:28,280
<font color="#E5E5E5">over is counter mode which for which we</font>

430
00:16:26,300 --> 00:16:30,469
have a pretty<font color="#E5E5E5"> good</font><font color="#CCCCCC"> security analysis and</font>

431
00:16:28,280 --> 00:16:33,770
there's no<font color="#E5E5E5"> exotic options there's no GCM</font>

432
00:16:30,470 --> 00:16:35,540
there's no<font color="#E5E5E5"> poly ChaCha etc etc the</font>

433
00:16:33,770 --> 00:16:38,510
<font color="#E5E5E5">problem is though all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the CBC modes</font>

434
00:16:35,540 --> 00:16:40,370
remain unpatched against our 2009 attack

435
00:16:38,510 --> 00:16:41,569
<font color="#CCCCCC">know that you need</font><font color="#E5E5E5"> to tweak the attack a</font>

436
00:16:40,370 --> 00:16:44,570
<font color="#E5E5E5">little bit but it's</font><font color="#CCCCCC"> not rocket</font><font color="#E5E5E5"> science</font>

437
00:16:41,570 --> 00:16:48,680
<font color="#E5E5E5">to do</font><font color="#CCCCCC"> it so</font><font color="#E5E5E5"> eight percent of that total</font>

438
00:16:44,570 --> 00:16:50,330
<font color="#CCCCCC">are vulnerable to</font><font color="#E5E5E5"> that old attack okay</font>

439
00:16:48,680 --> 00:16:52,790
<font color="#E5E5E5">so that gave</font><font color="#CCCCCC"> us some</font><font color="#E5E5E5"> food for thought</font>

440
00:16:50,330 --> 00:16:55,040
<font color="#CCCCCC">some</font><font color="#E5E5E5"> useful data things did change</font>

441
00:16:52,790 --> 00:16:56,719
<font color="#CCCCCC">there's more counter</font><font color="#E5E5E5"> more than there</font>

442
00:16:55,040 --> 00:16:59,719
<font color="#CCCCCC">used to be but there's still</font><font color="#E5E5E5"> a lot of</font>

443
00:16:56,720 --> 00:17:01,940
CBC<font color="#E5E5E5"> mode around so our</font><font color="#CCCCCC"> reaction to that</font>

444
00:16:59,720 --> 00:17:03,530
<font color="#CCCCCC">is to say well let's break CBC mode</font>

445
00:17:01,940 --> 00:17:05,810
again<font color="#E5E5E5"> okay</font>

446
00:17:03,530 --> 00:17:08,780
then try<font color="#CCCCCC"> and</font><font color="#E5E5E5"> get rid</font><font color="#CCCCCC"> of it</font><font color="#E5E5E5"> let's try and</font>

447
00:17:05,810 --> 00:17:10,369
get<font color="#CCCCCC"> rid of it</font><font color="#E5E5E5"> so there was a patch and</font>

448
00:17:08,780 --> 00:17:12,349
we would need to<font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to break</font>

449
00:17:10,369 --> 00:17:14,899
through<font color="#CCCCCC"> that patch somehow</font><font color="#E5E5E5"> so let me</font>

450
00:17:12,349 --> 00:17:17,869
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> how we did that this is an</font>

451
00:17:14,900 --> 00:17:19,970
attack on<font color="#E5E5E5"> the patch CBC mode in</font><font color="#CCCCCC"> OpenSSH</font>

452
00:17:17,869 --> 00:17:21,109
<font color="#E5E5E5">so we're getting</font><font color="#CCCCCC"> pretty specific now</font><font color="#E5E5E5"> but</font>

453
00:17:19,970 --> 00:17:22,760
this<font color="#E5E5E5"> is what you have to do you have</font><font color="#CCCCCC"> to</font>

454
00:17:21,109 --> 00:17:24,770
<font color="#CCCCCC">look at specific implementations</font><font color="#E5E5E5"> and</font>

455
00:17:22,760 --> 00:17:26,450
show how they<font color="#CCCCCC"> can be broken</font><font color="#E5E5E5"> in order to</font>

456
00:17:24,770 --> 00:17:29,090
to move move the<font color="#E5E5E5"> state</font><font color="#CCCCCC"> of-the-art</font>

457
00:17:26,450 --> 00:17:31,490
<font color="#E5E5E5">forward okay so remember this picture</font>

458
00:17:29,090 --> 00:17:33,830
<font color="#E5E5E5">this is how the how the encrypt and</font>

459
00:17:31,490 --> 00:17:36,380
<font color="#CCCCCC">matte construction works</font><font color="#E5E5E5"> now let's think</font>

460
00:17:33,830 --> 00:17:39,530
about decryption because this is<font color="#CCCCCC"> running</font>

461
00:17:36,380 --> 00:17:42,800
<font color="#CCCCCC">over tcp/ip it's perfectly possible</font>

462
00:17:39,530 --> 00:17:44,720
<font color="#E5E5E5">under normal operations that a</font><font color="#CCCCCC"> cipher</font>

463
00:17:42,800 --> 00:17:48,590
<font color="#E5E5E5">text will be fragmented across several</font>

464
00:17:44,720 --> 00:17:50,660
TCP packets<font color="#E5E5E5"> okay and so the processing</font>

465
00:17:48,590 --> 00:17:52,490
of<font color="#E5E5E5"> these of these chunks has to be done</font>

466
00:17:50,660 --> 00:17:54,290
in a<font color="#E5E5E5"> kind of online manner as they are</font>

467
00:17:52,490 --> 00:17:56,540
arriving<font color="#E5E5E5"> at the server or at the client</font>

468
00:17:54,290 --> 00:17:59,450
<font color="#E5E5E5">let's just say at the server okay so</font>

469
00:17:56,540 --> 00:18:00,320
these chunks are arriving<font color="#E5E5E5"> in a sequence</font>

470
00:17:59,450 --> 00:18:03,919
of packets

471
00:18:00,320 --> 00:18:05,779
and and so on<font color="#E5E5E5"> and the question is how do</font>

472
00:18:03,919 --> 00:18:09,080
you do the decryption<font color="#E5E5E5"> of the incoming</font>

473
00:18:05,779 --> 00:18:10,330
packet sequence the incoming sequence of

474
00:18:09,080 --> 00:18:13,070
<font color="#E5E5E5">ciphertext fragments</font>

475
00:18:10,330 --> 00:18:14,689
okay<font color="#E5E5E5"> first thing is well if you'd</font><font color="#CCCCCC"> like</font>

476
00:18:13,070 --> 00:18:16,850
to check<font color="#E5E5E5"> a Mac on the plaintext</font>

477
00:18:14,690 --> 00:18:19,429
eventually so you better recover the

478
00:18:16,850 --> 00:18:21,769
plaintext<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> even know how long</font>

479
00:18:19,429 --> 00:18:25,159
<font color="#CCCCCC">the plaintext is meant to be because the</font>

480
00:18:21,769 --> 00:18:27,080
<font color="#E5E5E5">land field was encrypted okay</font><font color="#CCCCCC"> so hard</font>

481
00:18:25,159 --> 00:18:29,269
what<font color="#CCCCCC"> are you going</font><font color="#E5E5E5"> to do maybe I'll let</font>

482
00:18:27,080 --> 00:18:30,439
<font color="#E5E5E5">you think</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that for a second how</font>

483
00:18:29,269 --> 00:18:34,720
<font color="#E5E5E5">are you going to handle the decryption</font>

484
00:18:30,440 --> 00:18:34,720
here any suggestions from the audience

485
00:18:36,009 --> 00:18:41,090
<font color="#E5E5E5">maybe it's</font><font color="#CCCCCC"> at the</font><font color="#E5E5E5"> early</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the morning</font>

486
00:18:38,029 --> 00:18:42,820
and you know<font color="#E5E5E5"> you all have coped</font>

487
00:18:41,090 --> 00:18:47,678
<font color="#CCCCCC">Schmilsson</font>

488
00:18:42,820 --> 00:18:47,678
<font color="#E5E5E5">knocked in villain okay</font>

489
00:18:50,240 --> 00:18:53,930
well let's think<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> here's what</font>

490
00:18:52,190 --> 00:18:56,900
happens in<font color="#E5E5E5"> organizers</font><font color="#CCCCCC"> age prior to</font>

491
00:18:53,930 --> 00:18:58,160
<font color="#E5E5E5">version 5.2</font><font color="#CCCCCC"> so this is back</font><font color="#E5E5E5"> in 2008 what</font>

492
00:18:56,900 --> 00:19:00,230
you have to do is you get<font color="#E5E5E5"> the first</font>

493
00:18:58,160 --> 00:19:02,810
block<font color="#CCCCCC"> of the first fragment</font><font color="#E5E5E5"> that arrives</font>

494
00:19:00,230 --> 00:19:04,370
and<font color="#CCCCCC"> you say</font><font color="#E5E5E5"> okay that's where my lens</font>

495
00:19:02,810 --> 00:19:05,629
field is going<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> okay here's the</font>

496
00:19:04,370 --> 00:19:08,330
packet length field at the front

497
00:19:05,630 --> 00:19:10,220
so<font color="#CCCCCC"> this first chunk here if it's long</font>

498
00:19:08,330 --> 00:19:11,990
enough<font color="#E5E5E5"> to contain a complete block say</font>

499
00:19:10,220 --> 00:19:14,060
of CBC<font color="#E5E5E5"> mode encryption</font><font color="#CCCCCC"> or counter mode</font>

500
00:19:11,990 --> 00:19:15,920
encryption<font color="#CCCCCC"> I could decrypt</font><font color="#E5E5E5"> that block</font>

501
00:19:14,060 --> 00:19:17,690
<font color="#E5E5E5">and get the packet when filled out and</font>

502
00:19:15,920 --> 00:19:19,970
now I have the packet<font color="#CCCCCC"> lens field now I</font>

503
00:19:17,690 --> 00:19:22,400
know how many bytes<font color="#CCCCCC"> I should accept I</font>

504
00:19:19,970 --> 00:19:24,230
can do the arithmetic<font color="#CCCCCC"> I can take the the</font>

505
00:19:22,400 --> 00:19:26,150
<font color="#CCCCCC">length field</font><font color="#E5E5E5"> this value and plus the</font>

506
00:19:24,230 --> 00:19:28,070
size of the<font color="#E5E5E5"> Mac and that</font><font color="#CCCCCC"> will tell me</font>

507
00:19:26,150 --> 00:19:29,960
<font color="#E5E5E5">how</font><font color="#CCCCCC"> many bytes I need</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I have to</font>

508
00:19:28,070 --> 00:19:32,330
<font color="#CCCCCC">adjust by</font><font color="#E5E5E5"> four because remember the</font>

509
00:19:29,960 --> 00:19:34,400
packet length<font color="#E5E5E5"> field itself was not</font>

510
00:19:32,330 --> 00:19:35,570
included in<font color="#CCCCCC"> the value</font><font color="#E5E5E5"> in the packet</font>

511
00:19:34,400 --> 00:19:38,090
<font color="#CCCCCC">length field right it was not</font>

512
00:19:35,570 --> 00:19:40,580
<font color="#CCCCCC">self-referential</font><font color="#E5E5E5"> okay so you have to</font>

513
00:19:38,090 --> 00:19:42,199
decrypt something you have to<font color="#E5E5E5"> decrypt</font>

514
00:19:40,580 --> 00:19:43,970
before you've authenticated this data

515
00:19:42,200 --> 00:19:45,740
<font color="#E5E5E5">and act on that data</font>

516
00:19:43,970 --> 00:19:47,360
okay now<font color="#E5E5E5"> that should be setting some</font>

517
00:19:45,740 --> 00:19:49,850
alarm bells<font color="#CCCCCC"> ringing</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> minds</font>

518
00:19:47,360 --> 00:19:51,379
okay so then we wait<font color="#E5E5E5"> until that many</font>

519
00:19:49,850 --> 00:19:53,570
bytes have<font color="#E5E5E5"> a rip have been received and</font>

520
00:19:51,380 --> 00:19:55,040
<font color="#E5E5E5">now finally we've got enough plain text</font>

521
00:19:53,570 --> 00:19:57,020
<font color="#CCCCCC">that we think we've</font><font color="#E5E5E5"> got enough plain</font>

522
00:19:55,040 --> 00:19:59,090
text<font color="#E5E5E5"> that we can interpret</font><font color="#CCCCCC"> what comes</font>

523
00:19:57,020 --> 00:20:01,490
next as the Mac value and then<font color="#E5E5E5"> verify</font>

524
00:19:59,090 --> 00:20:02,990
the Mac<font color="#E5E5E5"> okay and that's really the</font><font color="#CCCCCC"> only</font>

525
00:20:01,490 --> 00:20:05,750
<font color="#E5E5E5">way you can do it because of the way</font>

526
00:20:02,990 --> 00:20:10,460
this<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> been built so here's the</font>

527
00:20:05,750 --> 00:20:13,490
attack<font color="#E5E5E5"> from our paper in 2009 and let's</font>

528
00:20:10,460 --> 00:20:16,250
take a target ciphertext block that<font color="#E5E5E5"> can</font>

529
00:20:13,490 --> 00:20:18,320
<font color="#E5E5E5">be any block at all from a sequence of</font>

530
00:20:16,250 --> 00:20:20,570
packets<font color="#CCCCCC"> that went past</font><font color="#E5E5E5"> on the wire the</font>

531
00:20:18,320 --> 00:20:21,889
one that contains<font color="#CCCCCC"> your password</font><font color="#E5E5E5"> okay</font>

532
00:20:20,570 --> 00:20:24,050
think of<font color="#E5E5E5"> it as being that one it's a</font>

533
00:20:21,890 --> 00:20:26,480
sensitive ciphertext block<font color="#E5E5E5"> it's a block</font>

534
00:20:24,050 --> 00:20:29,540
that<font color="#CCCCCC"> we would like to try</font><font color="#E5E5E5"> to decrypt and</font>

535
00:20:26,480 --> 00:20:31,850
let's inject it into the<font color="#E5E5E5"> stream in such</font>

536
00:20:29,540 --> 00:20:35,180
a way that<font color="#E5E5E5"> it's interpreted as the first</font>

537
00:20:31,850 --> 00:20:36,620
block<font color="#E5E5E5"> of a new packet okay so the packet</font>

538
00:20:35,180 --> 00:20:38,600
goes quiet for a while<font color="#E5E5E5"> this story the</font>

539
00:20:36,620 --> 00:20:39,860
connection<font color="#CCCCCC"> goes quiet for a while that</font>

540
00:20:38,600 --> 00:20:43,040
<font color="#E5E5E5">means</font><font color="#CCCCCC"> we know there's no transmission</font>

541
00:20:39,860 --> 00:20:45,469
going<font color="#E5E5E5"> on let's send our block no so it</font>

542
00:20:43,040 --> 00:20:48,170
gets interpreted<font color="#CCCCCC"> by the receiver</font><font color="#E5E5E5"> as if</font>

543
00:20:45,470 --> 00:20:50,120
it was the first block<font color="#E5E5E5"> of a new SSH</font>

544
00:20:48,170 --> 00:20:52,610
packet although what that means is that

545
00:20:50,120 --> 00:20:54,620
<font color="#E5E5E5">the receiver will decrypt it using some</font>

546
00:20:52,610 --> 00:20:56,419
initial initialization vector this<font color="#E5E5E5"> will</font>

547
00:20:54,620 --> 00:20:59,179
actually<font color="#E5E5E5"> be the</font><font color="#CCCCCC"> last block of</font><font color="#E5E5E5"> the</font>

548
00:20:56,420 --> 00:21:01,550
previous ciphertext<font color="#CCCCCC"> okay it's known to</font>

549
00:20:59,180 --> 00:21:03,800
the<font color="#CCCCCC"> attacker</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the it will</font><font color="#E5E5E5"> then treat</font>

550
00:21:01,550 --> 00:21:06,710
the first<font color="#E5E5E5"> four bytes of the plaintext</font>

551
00:21:03,800 --> 00:21:10,370
as the<font color="#CCCCCC"> lens</font><font color="#E5E5E5"> field okay so this block</font>

552
00:21:06,710 --> 00:21:11,960
here I want to<font color="#E5E5E5"> emphasize was not a block</font>

553
00:21:10,370 --> 00:21:14,750
that<font color="#CCCCCC"> contained the length</font><font color="#E5E5E5"> field</font>

554
00:21:11,960 --> 00:21:16,520
it contained your password but<font color="#E5E5E5"> it's</font>

555
00:21:14,750 --> 00:21:19,760
interpreted as if it<font color="#CCCCCC"> contained a</font><font color="#E5E5E5"> length</font>

556
00:21:16,520 --> 00:21:23,000
field by<font color="#E5E5E5"> the decryption process is it</font>

557
00:21:19,760 --> 00:21:25,340
clear<font color="#E5E5E5"> okay now what happens next</font><font color="#CCCCCC"> the</font>

558
00:21:23,000 --> 00:21:28,280
attacker will<font color="#CCCCCC"> now just send in random</font>

559
00:21:25,340 --> 00:21:31,370
blocks<font color="#E5E5E5"> scratch</font><font color="#CCCCCC"> okay you're come to</font>

560
00:21:28,280 --> 00:21:35,540
<font color="#E5E5E5">clutch okay good so vitae</font>

561
00:21:31,370 --> 00:21:38,989
<font color="#E5E5E5">okay now at the end finally enough data</font>

562
00:21:35,540 --> 00:21:40,940
has arrived<font color="#E5E5E5"> that the receiver says okay</font>

563
00:21:38,990 --> 00:21:43,640
what comes next must be the<font color="#CCCCCC"> Mac let me</font>

564
00:21:40,940 --> 00:21:45,710
check the Mac<font color="#E5E5E5"> okay so here comes the Mac</font>

565
00:21:43,640 --> 00:21:47,720
<font color="#E5E5E5">and the Mac will fail because we</font>

566
00:21:45,710 --> 00:21:49,970
<font color="#E5E5E5">injected garbage here so this is garbage</font>

567
00:21:47,720 --> 00:21:51,920
plaintext the Mac will fail and<font color="#E5E5E5"> an error</font>

568
00:21:49,970 --> 00:21:55,070
message<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be sent and the connection</font>

569
00:21:51,920 --> 00:21:56,900
will be<font color="#E5E5E5"> terminated okay the question for</font>

570
00:21:55,070 --> 00:22:02,050
you<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> audience</font><font color="#E5E5E5"> how many bytes do we</font>

571
00:21:56,900 --> 00:22:02,050
have to send in to cause the Mac to fill

572
00:22:02,140 --> 00:22:05,140
yes

573
00:22:07,280 --> 00:22:11,540
right<font color="#E5E5E5"> it corresponds to the value here</font>

574
00:22:09,800 --> 00:22:13,490
<font color="#CCCCCC">with a little bit</font><font color="#E5E5E5"> of arithmetic right</font>

575
00:22:11,540 --> 00:22:14,659
<font color="#E5E5E5">plus</font><font color="#CCCCCC"> four minus four or something okay</font>

576
00:22:13,490 --> 00:22:17,000
there's a<font color="#E5E5E5"> little bit of arithmetic going</font>

577
00:22:14,660 --> 00:22:19,580
on okay<font color="#E5E5E5"> so now you see the attack I</font>

578
00:22:17,000 --> 00:22:22,250
think<font color="#E5E5E5"> some of you do anyway okay so the</font>

579
00:22:19,580 --> 00:22:25,280
number<font color="#CCCCCC"> of bytes that</font><font color="#E5E5E5"> are needed</font><font color="#CCCCCC"> to cause</font>

580
00:22:22,250 --> 00:22:27,530
this decryption process<font color="#E5E5E5"> to terminate to</font>

581
00:22:25,280 --> 00:22:29,540
end<font color="#CCCCCC"> it determined by something in</font><font color="#E5E5E5"> the</font>

582
00:22:27,530 --> 00:22:32,240
<font color="#CCCCCC">very first block here but</font><font color="#E5E5E5"> that's related</font>

583
00:22:29,540 --> 00:22:35,240
to<font color="#E5E5E5"> the true decryption of</font><font color="#CCCCCC"> CI star</font><font color="#E5E5E5"> okay</font>

584
00:22:32,240 --> 00:22:37,730
<font color="#E5E5E5">so we have to play this</font><font color="#CCCCCC"> game where we we</font>

585
00:22:35,240 --> 00:22:40,430
say well what we can<font color="#E5E5E5"> learn this orange</font>

586
00:22:37,730 --> 00:22:42,590
value<font color="#E5E5E5"> now from observing the decryption</font>

587
00:22:40,430 --> 00:22:44,450
process<font color="#E5E5E5"> what we really want to know</font><font color="#CCCCCC"> is</font>

588
00:22:42,590 --> 00:22:46,459
<font color="#E5E5E5">this green value where we actually</font>

589
00:22:44,450 --> 00:22:47,720
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of having the IV here</font><font color="#E5E5E5"> we</font>

590
00:22:46,460 --> 00:22:49,970
actually<font color="#E5E5E5"> had the previous ciphertext</font>

591
00:22:47,720 --> 00:22:51,860
block<font color="#E5E5E5"> because that's the real decryption</font>

592
00:22:49,970 --> 00:22:55,400
process<font color="#E5E5E5"> that would give us the green</font>

593
00:22:51,860 --> 00:22:58,040
block but now we just<font color="#CCCCCC"> use arithmetic we</font>

594
00:22:55,400 --> 00:23:01,370
use X ORS<font color="#E5E5E5"> and this is the basic</font><font color="#CCCCCC"> property</font>

595
00:22:58,040 --> 00:23:02,930
of CBC<font color="#E5E5E5"> mode that somehow the decrypt you</font>

596
00:23:01,370 --> 00:23:06,560
can you can<font color="#CCCCCC"> play this game of saying</font>

597
00:23:02,930 --> 00:23:08,930
well this value XOR with the IV would

598
00:23:06,560 --> 00:23:11,060
give you a value<font color="#E5E5E5"> coming out of here out</font>

599
00:23:08,930 --> 00:23:12,800
of<font color="#CCCCCC"> the decryption</font><font color="#E5E5E5"> of the is the block</font>

600
00:23:11,060 --> 00:23:14,149
cipher decryption we'd have to get<font color="#E5E5E5"> the</font>

601
00:23:12,800 --> 00:23:15,649
<font color="#CCCCCC">same value over here</font><font color="#E5E5E5"> because we're</font>

602
00:23:14,150 --> 00:23:18,230
<font color="#CCCCCC">applying the blog side for decryption to</font>

603
00:23:15,650 --> 00:23:20,090
the same<font color="#E5E5E5"> ciphertext block so this XOR</font>

604
00:23:18,230 --> 00:23:22,150
equation must hold<font color="#E5E5E5"> and you can rearrange</font>

605
00:23:20,090 --> 00:23:24,770
this equation<font color="#E5E5E5"> to recover the green field</font>

606
00:23:22,150 --> 00:23:28,430
okay so you've recovered<font color="#E5E5E5"> four bytes of</font>

607
00:23:24,770 --> 00:23:31,900
plain text from an<font color="#CCCCCC"> SSH</font><font color="#E5E5E5"> connection not</font>

608
00:23:28,430 --> 00:23:34,220
bad huh good<font color="#E5E5E5"> and it's only four bytes</font>

609
00:23:31,900 --> 00:23:36,050
but<font color="#E5E5E5"> SSH was meant to be bulletproof</font>

610
00:23:34,220 --> 00:23:37,610
<font color="#CCCCCC">right you were using it to</font><font color="#E5E5E5"> protect your</font>

611
00:23:36,050 --> 00:23:40,100
ultra-sensitive password for<font color="#E5E5E5"> logging</font>

612
00:23:37,610 --> 00:23:43,659
<font color="#E5E5E5">into your your server so this is a bit</font>

613
00:23:40,100 --> 00:23:45,590
of a disaster<font color="#E5E5E5"> so that's back in 2009 and</font>

614
00:23:43,660 --> 00:23:48,170
actually the real attacks<font color="#CCCCCC"> are a little</font>

615
00:23:45,590 --> 00:23:50,689
<font color="#E5E5E5">bit more complicated very very briefly</font>

616
00:23:48,170 --> 00:23:52,850
we actually sanity check this<font color="#CCCCCC"> length</font>

617
00:23:50,690 --> 00:23:55,070
field<font color="#E5E5E5"> before we go any further so as</font>

618
00:23:52,850 --> 00:23:56,689
soon as<font color="#E5E5E5"> we going back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> long go</font>

619
00:23:55,070 --> 00:23:58,810
back<font color="#E5E5E5"> to the picture take too long but as</font>

620
00:23:56,690 --> 00:24:00,830
soon as<font color="#E5E5E5"> we decrypt that first block of</font>

621
00:23:58,810 --> 00:24:02,990
<font color="#E5E5E5">ciphertext we're going to check</font><font color="#CCCCCC"> are</font>

622
00:24:00,830 --> 00:24:05,330
those first four bytes sensible<font color="#E5E5E5"> do they</font>

623
00:24:02,990 --> 00:24:07,430
make<font color="#CCCCCC"> sense and</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> OpenSSH was doing</font>

624
00:24:05,330 --> 00:24:09,800
was checking<font color="#E5E5E5"> this value lay between five</font>

625
00:24:07,430 --> 00:24:13,190
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the absolute minimum</font><font color="#CCCCCC"> value it</font>

626
00:24:09,800 --> 00:24:16,730
could<font color="#E5E5E5"> have because of</font><font color="#CCCCCC"> padding</font><font color="#E5E5E5"> and two to</font>

627
00:24:13,190 --> 00:24:18,410
the<font color="#CCCCCC"> 18 it's a 32-bit field so the kind</font>

628
00:24:16,730 --> 00:24:20,539
of maximum<font color="#CCCCCC"> value it could be would be</font>

629
00:24:18,410 --> 00:24:21,679
<font color="#CCCCCC">two to</font><font color="#E5E5E5"> the 32 minus one</font>

630
00:24:20,539 --> 00:24:22,999
and they're saying<font color="#E5E5E5"> well we're going</font><font color="#CCCCCC"> to</font>

631
00:24:21,679 --> 00:24:24,829
<font color="#E5E5E5">make sure it's no larger than</font><font color="#CCCCCC"> two to</font><font color="#E5E5E5"> the</font>

632
00:24:22,999 --> 00:24:26,989
<font color="#CCCCCC">18</font><font color="#E5E5E5"> okay</font>

633
00:24:24,829 --> 00:24:30,529
and the RFC says you should check that

634
00:24:26,989 --> 00:24:32,809
<font color="#E5E5E5">the the length field is reasonable it</font>

635
00:24:30,529 --> 00:24:33,919
doesn't<font color="#E5E5E5"> define what reasonable means but</font>

636
00:24:32,809 --> 00:24:35,570
it says<font color="#CCCCCC"> you</font><font color="#E5E5E5"> should check is reasonable</font>

637
00:24:33,919 --> 00:24:37,849
and<font color="#E5E5E5"> this is how</font><font color="#CCCCCC"> OpenSSH interpreted</font><font color="#E5E5E5"> that</font>

638
00:24:35,570 --> 00:24:40,399
and you also do a kind of a modularity

639
00:24:37,849 --> 00:24:41,718
check so<font color="#E5E5E5"> you know this is CBC mode so</font>

640
00:24:40,399 --> 00:24:43,820
everything<font color="#E5E5E5"> should be a multiple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

641
00:24:41,719 --> 00:24:44,959
block size and that gives you a second

642
00:24:43,820 --> 00:24:46,908
arithmetic condition

643
00:24:44,959 --> 00:24:48,739
<font color="#E5E5E5">okay BL here stands for block</font><font color="#CCCCCC"> lengths</font>

644
00:24:46,909 --> 00:24:52,009
think of<font color="#E5E5E5"> sixteen there</font>

645
00:24:48,739 --> 00:24:54,139
<font color="#E5E5E5">okay for AES so these two tests that you</font>

646
00:24:52,009 --> 00:24:56,119
do<font color="#E5E5E5"> but what's funny is that each of</font>

647
00:24:54,139 --> 00:24:58,549
these checks<font color="#E5E5E5"> if it fails will produce a</font>

648
00:24:56,119 --> 00:25:00,049
different<font color="#CCCCCC"> error message so this thing is</font>

649
00:24:58,549 --> 00:25:01,429
leaking more information through these

650
00:25:00,049 --> 00:25:03,499
error<font color="#CCCCCC"> messages and these are all</font>

651
00:25:01,429 --> 00:25:06,109
distinguishable by the attacker<font color="#CCCCCC"> I won't</font>

652
00:25:03,499 --> 00:25:07,159
go<font color="#E5E5E5"> through the</font><font color="#CCCCCC"> details of it</font><font color="#E5E5E5"> but this is</font>

653
00:25:06,109 --> 00:25:08,899
<font color="#CCCCCC">this is nirvana</font>

654
00:25:07,159 --> 00:25:11,929
for a crypt<font color="#CCCCCC"> analyst</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> this is this</font>

655
00:25:08,899 --> 00:25:14,658
<font color="#E5E5E5">is happy</font><font color="#CCCCCC"> days</font><font color="#E5E5E5"> okay and then if and only</font>

656
00:25:11,929 --> 00:25:16,159
if<font color="#CCCCCC"> both of these tests pass OpenSSH will</font>

657
00:25:14,659 --> 00:25:17,809
sit and<font color="#E5E5E5"> wait</font><font color="#CCCCCC"> for more bytes</font><font color="#E5E5E5"> and then it</font>

658
00:25:16,159 --> 00:25:20,029
will perform the<font color="#E5E5E5"> match check and</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> will</font>

659
00:25:17,809 --> 00:25:21,139
<font color="#E5E5E5">produce yet a third error message so</font><font color="#CCCCCC"> you</font>

660
00:25:20,029 --> 00:25:24,799
can<font color="#CCCCCC"> always tell these different</font>

661
00:25:21,139 --> 00:25:26,869
conditions<font color="#E5E5E5"> apart okay so when you put it</font>

662
00:25:24,799 --> 00:25:29,089
all<font color="#E5E5E5"> together including this extra stuff</font>

663
00:25:26,869 --> 00:25:31,279
<font color="#E5E5E5">you don't quite recover</font><font color="#CCCCCC"> four bytes with</font>

664
00:25:29,089 --> 00:25:34,009
probability one what you recover is four

665
00:25:31,279 --> 00:25:36,469
bytes or 32 bits<font color="#E5E5E5"> with probability</font><font color="#CCCCCC"> two to</font>

666
00:25:34,009 --> 00:25:38,690
the minus 18<font color="#E5E5E5"> because basically these</font><font color="#CCCCCC"> two</font>

667
00:25:36,469 --> 00:25:40,429
tests<font color="#E5E5E5"> together they pass with</font>

668
00:25:38,690 --> 00:25:43,009
probability about<font color="#CCCCCC"> two to the minus 18</font>

669
00:25:40,429 --> 00:25:44,569
<font color="#E5E5E5">for random blocks and you can do better</font>

670
00:25:43,009 --> 00:25:47,869
if<font color="#CCCCCC"> you have partially</font><font color="#E5E5E5"> known plaintext</font>

671
00:25:44,569 --> 00:25:51,039
etc etc<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so that was</font><font color="#E5E5E5"> that's the</font>

672
00:25:47,869 --> 00:25:55,329
attack from 2009 what was the patch

673
00:25:51,039 --> 00:25:58,219
what did<font color="#CCCCCC"> OpenSSH do</font><font color="#E5E5E5"> here's what they do</font>

674
00:25:55,329 --> 00:26:01,069
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of sending an error message if</font>

675
00:25:58,219 --> 00:26:02,449
the lens checks<font color="#E5E5E5"> fail what the chord was</font>

676
00:26:01,069 --> 00:26:04,908
changed to do was to say well<font color="#E5E5E5"> okay</font>

677
00:26:02,449 --> 00:26:06,529
something's gone wrong<font color="#E5E5E5"> don't send an</font>

678
00:26:04,909 --> 00:26:09,409
error message no because that<font color="#E5E5E5"> leaks</font>

679
00:26:06,529 --> 00:26:11,449
<font color="#CCCCCC">information</font><font color="#E5E5E5"> let's wait</font><font color="#CCCCCC"> awhile let's wait</font>

680
00:26:09,409 --> 00:26:14,659
until<font color="#CCCCCC"> two to the 18 bytes have arrived</font>

681
00:26:11,449 --> 00:26:17,209
<font color="#E5E5E5">on the network okay and then check a Mac</font>

682
00:26:14,659 --> 00:26:18,919
on<font color="#CCCCCC"> 2 to the 18 bytes</font><font color="#E5E5E5"> now you're not</font>

683
00:26:17,209 --> 00:26:21,649
leaking<font color="#E5E5E5"> the fact that the lens field</font>

684
00:26:18,919 --> 00:26:24,109
test has<font color="#CCCCCC"> failed in any way and then the</font>

685
00:26:21,649 --> 00:26:26,059
other<font color="#E5E5E5"> path is if those paths you'll</font>

686
00:26:24,109 --> 00:26:30,069
<font color="#E5E5E5">receive a certain number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> bytes</font><font color="#CCCCCC"> as</font>

687
00:26:26,059 --> 00:26:32,658
indicated by the the length field<font color="#E5E5E5"> if</font>

688
00:26:30,069 --> 00:26:34,190
that field before you would get a Mac

689
00:26:32,659 --> 00:26:35,960
error<font color="#E5E5E5"> and that was the kind</font><font color="#CCCCCC"> of stuff</font>

690
00:26:34,190 --> 00:26:37,250
error message<font color="#E5E5E5"> that you could tell so</font>

691
00:26:35,960 --> 00:26:39,559
instead of<font color="#E5E5E5"> now sending that error</font>

692
00:26:37,250 --> 00:26:41,659
message<font color="#CCCCCC"> what you do is again you wait</font>

693
00:26:39,559 --> 00:26:44,779
until<font color="#CCCCCC"> 2 to the 18</font><font color="#E5E5E5"> bytes have arrived and</font>

694
00:26:41,659 --> 00:26:48,730
then you check a Mac on<font color="#CCCCCC"> 2 to the 18</font>

695
00:26:44,779 --> 00:26:51,259
bytes so now you see that in either case

696
00:26:48,730 --> 00:26:53,419
you're going<font color="#E5E5E5"> to wait until</font><font color="#CCCCCC"> a set number</font>

697
00:26:51,259 --> 00:26:55,639
of<font color="#E5E5E5"> bytes have arrived and then and only</font>

698
00:26:53,419 --> 00:26:57,740
then you're going<font color="#E5E5E5"> to check the Mac so</font>

699
00:26:55,639 --> 00:26:59,539
<font color="#E5E5E5">this these kind</font><font color="#CCCCCC"> of error messages are no</font>

700
00:26:57,740 --> 00:27:00,950
longer<font color="#E5E5E5"> available to the versary you have</font>

701
00:26:59,539 --> 00:27:02,870
a single error message which<font color="#E5E5E5"> will always</font>

702
00:27:00,950 --> 00:27:06,250
<font color="#CCCCCC">be a</font><font color="#E5E5E5"> Mac failure and that's</font><font color="#CCCCCC"> not leaking</font>

703
00:27:02,870 --> 00:27:06,250
<font color="#E5E5E5">anything yuck</font>

704
00:27:09,470 --> 00:27:15,639
so both of these paths will down<font color="#CCCCCC"> SSH a</font>

705
00:27:12,590 --> 00:27:18,559
lot because<font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> something goes wrong</font>

706
00:27:15,639 --> 00:27:20,479
<font color="#E5E5E5">SSH is now going to wait until 256</font>

707
00:27:18,559 --> 00:27:22,039
kilobytes have arrived<font color="#E5E5E5"> on the network</font>

708
00:27:20,480 --> 00:27:24,049
<font color="#E5E5E5">and if you're an illness in an</font>

709
00:27:22,039 --> 00:27:25,700
<font color="#E5E5E5">interactive session</font><font color="#CCCCCC"> that's a lot of</font>

710
00:27:24,049 --> 00:27:28,009
<font color="#E5E5E5">typing you have to do to generate that</font>

711
00:27:25,700 --> 00:27:29,600
<font color="#CCCCCC">much traffic on the network okay</font><font color="#E5E5E5"> so what</font>

712
00:27:28,009 --> 00:27:32,929
this relates<font color="#E5E5E5"> to this property of a</font>

713
00:27:29,600 --> 00:27:36,019
denial of service<font color="#E5E5E5"> by flipping a single</font>

714
00:27:32,929 --> 00:27:38,779
bit<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the packet</font><font color="#E5E5E5"> the attacker can make</font>

715
00:27:36,019 --> 00:27:42,080
the receiver<font color="#E5E5E5"> hang can make it wait for</font>

716
00:27:38,779 --> 00:27:43,639
<font color="#E5E5E5">up to</font><font color="#CCCCCC"> two to</font><font color="#E5E5E5"> the 18 so this fix is not</font><font color="#CCCCCC"> a</font>

717
00:27:42,080 --> 00:27:46,158
good<font color="#E5E5E5"> fix from the point of view</font><font color="#CCCCCC"> of</font>

718
00:27:43,639 --> 00:27:48,320
denial of service again for an active

719
00:27:46,159 --> 00:27:50,210
attacker is that the point you<font color="#E5E5E5"> were</font>

720
00:27:48,320 --> 00:27:52,220
making<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> but it's</font><font color="#CCCCCC"> even worse than</font>

721
00:27:50,210 --> 00:27:53,240
<font color="#E5E5E5">that so</font><font color="#CCCCCC"> let's see</font><font color="#E5E5E5"> how it's even worse</font>

722
00:27:52,220 --> 00:27:55,309
but that's a great<font color="#E5E5E5"> point</font>

723
00:27:53,240 --> 00:27:56,450
<font color="#E5E5E5">so and that relates to that property of</font>

724
00:27:55,309 --> 00:27:58,490
denial of service that<font color="#E5E5E5"> I was talking</font>

725
00:27:56,450 --> 00:28:00,320
<font color="#CCCCCC">about</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> back at the</font><font color="#E5E5E5"> beginning okay so</font>

726
00:27:58,490 --> 00:28:01,549
this is trivially vulnerable to denial

727
00:28:00,320 --> 00:28:03,110
of service attacks where<font color="#E5E5E5"> the attack</font>

728
00:28:01,549 --> 00:28:04,879
where the client<font color="#E5E5E5"> is just sitting</font>

729
00:28:03,110 --> 00:28:06,860
<font color="#E5E5E5">thinking well my connection</font><font color="#CCCCCC"> hasn't</font>

730
00:28:04,879 --> 00:28:11,059
<font color="#CCCCCC">terminated but nor is</font><font color="#E5E5E5"> anything happening</font>

731
00:28:06,860 --> 00:28:12,979
<font color="#E5E5E5">at the server okay so no error message</font>

732
00:28:11,059 --> 00:28:14,389
is ever sent until<font color="#CCCCCC"> 2 to the 18 bytes of</font>

733
00:28:12,980 --> 00:28:17,299
<font color="#CCCCCC">ciphertext I've arrived and the question</font>

734
00:28:14,389 --> 00:28:18,949
is is this a<font color="#E5E5E5"> good patch but obviously</font>

735
00:28:17,299 --> 00:28:20,330
not<font color="#E5E5E5"> right I've set it up so it's not a</font>

736
00:28:18,950 --> 00:28:22,309
good patch but<font color="#CCCCCC"> I mean this is what</font><font color="#E5E5E5"> they</font>

737
00:28:20,330 --> 00:28:24,080
<font color="#E5E5E5">did and this bugged me</font><font color="#CCCCCC"> for years</font>

738
00:28:22,309 --> 00:28:26,149
<font color="#E5E5E5">actually and we never really</font><font color="#CCCCCC"> sat down</font>

739
00:28:24,080 --> 00:28:27,860
<font color="#E5E5E5">and analyze that until we did that</font>

740
00:28:26,149 --> 00:28:29,418
measurement study and we saw that<font color="#E5E5E5"> CBC</font>

741
00:28:27,860 --> 00:28:30,769
was still out there<font color="#CCCCCC"> and we thought</font><font color="#E5E5E5"> well</font>

742
00:28:29,419 --> 00:28:34,909
it's time<font color="#CCCCCC"> to go back</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> look at</font><font color="#E5E5E5"> this</font>

743
00:28:30,769 --> 00:28:37,970
<font color="#E5E5E5">again what can we see so here's the</font>

744
00:28:34,909 --> 00:28:40,159
problem<font color="#E5E5E5"> here is a Mac on</font><font color="#CCCCCC"> 2 to the 18</font>

745
00:28:37,970 --> 00:28:44,419
bytes<font color="#E5E5E5"> and that's the only Mac you</font>

746
00:28:40,159 --> 00:28:47,029
compute here<font color="#E5E5E5"> there's a Mac that's done</font>

747
00:28:44,419 --> 00:28:49,100
here<font color="#CCCCCC"> for the Mac verification</font><font color="#E5E5E5"> and then</font>

748
00:28:47,029 --> 00:28:51,409
another Mac's down here after<font color="#E5E5E5"> you</font>

749
00:28:49,100 --> 00:28:53,029
receive this all<font color="#CCCCCC"> 2 to the 18 bytes</font><font color="#E5E5E5"> so</font>

750
00:28:51,409 --> 00:28:56,299
you actually<font color="#E5E5E5"> have two Mac verifications</font>

751
00:28:53,029 --> 00:28:58,730
going on here<font color="#CCCCCC"> okay one on LF by</font><font color="#E5E5E5"> it's the</font>

752
00:28:56,299 --> 00:29:00,799
length field<font color="#E5E5E5"> roughly speaking and one on</font>

753
00:28:58,730 --> 00:29:02,090
<font color="#CCCCCC">two to the 18 bytes so now you see</font>

754
00:29:00,799 --> 00:29:05,799
there's a<font color="#E5E5E5"> difference in the amount of</font>

755
00:29:02,090 --> 00:29:08,029
<font color="#CCCCCC">computation that</font><font color="#E5E5E5"> you do in the two paths</font>

756
00:29:05,799 --> 00:29:10,730
now the attack is<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> obvious I think</font>

757
00:29:08,029 --> 00:29:13,700
<font color="#E5E5E5">so here's the picture</font><font color="#CCCCCC"> Georgia</font><font color="#E5E5E5"> I'm sorry</font>

758
00:29:10,730 --> 00:29:15,679
we stole<font color="#E5E5E5"> your artwork again</font><font color="#CCCCCC"> okay this is</font>

759
00:29:13,700 --> 00:29:17,059
work beautiful pictures done by Georgia

760
00:29:15,679 --> 00:29:20,149
<font color="#E5E5E5">as a Martian who's in the audience</font>

761
00:29:17,059 --> 00:29:21,950
thanks for coming<font color="#CCCCCC"> ok so here's here's</font>

762
00:29:20,149 --> 00:29:22,830
Alice sending<font color="#CCCCCC"> her data</font><font color="#E5E5E5"> to the server and</font>

763
00:29:21,950 --> 00:29:24,990
here's the

764
00:29:22,830 --> 00:29:28,199
injecting some<font color="#CCCCCC"> cypher textbook</font><font color="#E5E5E5"> so here's</font>

765
00:29:24,990 --> 00:29:32,010
what we do in the attack<font color="#E5E5E5"> we send</font><font color="#CCCCCC"> two to</font>

766
00:29:28,200 --> 00:29:35,100
the<font color="#E5E5E5"> 18 by</font><font color="#CCCCCC"> its -1 block very quickly to</font>

767
00:29:32,010 --> 00:29:37,040
the server<font color="#CCCCCC"> ok and when we time how long</font>

768
00:29:35,100 --> 00:29:40,260
it<font color="#CCCCCC"> takes for the Mac error to come back</font>

769
00:29:37,040 --> 00:29:43,170
and there's<font color="#CCCCCC"> basically two paths there's</font>

770
00:29:40,260 --> 00:29:46,140
a slow path and a fast path<font color="#E5E5E5"> and on the</font>

771
00:29:43,170 --> 00:29:48,780
slow path<font color="#CCCCCC"> the size X both passed and</font>

772
00:29:46,140 --> 00:29:51,330
then we did a Mac on LS by it and

773
00:29:48,780 --> 00:29:53,610
another mark on<font color="#CCCCCC"> 2 to the 18 bytes and on</font>

774
00:29:51,330 --> 00:29:55,860
the fast path<font color="#E5E5E5"> we only did a mark on to</font>

775
00:29:53,610 --> 00:29:58,560
the 18 bytes so if you can send all of

776
00:29:55,860 --> 00:30:00,149
<font color="#E5E5E5">these bytes quickly enough</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the server</font>

777
00:29:58,560 --> 00:30:03,090
<font color="#E5E5E5">the</font><font color="#CCCCCC"> server</font><font color="#E5E5E5"> has them all to do its</font>

778
00:30:00,150 --> 00:30:06,450
processing then the you got what<font color="#CCCCCC"> you get</font>

779
00:30:03,090 --> 00:30:08,639
in the timing signal is basically how

780
00:30:06,450 --> 00:30:12,020
long it takes to<font color="#E5E5E5"> compute a Mac on LF</font>

781
00:30:08,640 --> 00:30:15,180
bytes but that<font color="#E5E5E5"> depends on the size of LF</font>

782
00:30:12,020 --> 00:30:18,090
so you have leakage again<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> you</font>

783
00:30:15,180 --> 00:30:19,830
cannot get exactly<font color="#E5E5E5"> the value of LS but</font>

784
00:30:18,090 --> 00:30:21,419
<font color="#E5E5E5">you can get maybe everything except the</font>

785
00:30:19,830 --> 00:30:22,740
<font color="#CCCCCC">for least significant bits are the six</font>

786
00:30:21,420 --> 00:30:25,080
least significant bits of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> lenss</font>

787
00:30:22,740 --> 00:30:27,600
<font color="#E5E5E5">field just by timing how long it takes</font>

788
00:30:25,080 --> 00:30:30,990
<font color="#E5E5E5">for this Mac error to come back</font><font color="#CCCCCC"> okay so</font>

789
00:30:27,600 --> 00:30:33,480
the attack is basically reanimated<font color="#E5E5E5"> okay</font>

790
00:30:30,990 --> 00:30:35,040
<font color="#E5E5E5">now instead</font><font color="#CCCCCC"> of being an attack where you</font>

791
00:30:33,480 --> 00:30:37,410
feed in one block at a<font color="#CCCCCC"> time and you</font>

792
00:30:35,040 --> 00:30:40,110
observe<font color="#E5E5E5"> for the error message now you</font>

793
00:30:37,410 --> 00:30:42,930
send all the data quickly and then you

794
00:30:40,110 --> 00:30:45,240
<font color="#E5E5E5">do a timing analysis</font><font color="#CCCCCC"> and the timing</font>

795
00:30:42,930 --> 00:30:47,010
signal is actually gigantic so in the

796
00:30:45,240 --> 00:30:49,710
lucky 13 attack that<font color="#CCCCCC"> your I mentioned</font>

797
00:30:47,010 --> 00:30:52,770
we're able to time<font color="#E5E5E5"> 1h map compression</font>

798
00:30:49,710 --> 00:30:55,470
function remotely over<font color="#CCCCCC"> a</font><font color="#E5E5E5"> network here</font>

799
00:30:52,770 --> 00:30:58,530
<font color="#E5E5E5">we're timing a Mac on some large number</font>

800
00:30:55,470 --> 00:31:00,330
<font color="#CCCCCC">of</font><font color="#E5E5E5"> bytes</font><font color="#CCCCCC"> up to 2 to the</font><font color="#E5E5E5"> 18 bytes</font><font color="#CCCCCC"> okay so</font>

801
00:30:58,530 --> 00:31:02,250
here the<font color="#E5E5E5"> timing signal</font><font color="#CCCCCC"> in principle is</font>

802
00:31:00,330 --> 00:31:04,590
<font color="#E5E5E5">something like a thousand times bigger</font>

803
00:31:02,250 --> 00:31:06,540
than<font color="#E5E5E5"> in the lucky 13 attack this is</font>

804
00:31:04,590 --> 00:31:12,120
actually an easy signal to observe even

805
00:31:06,540 --> 00:31:14,399
<font color="#E5E5E5">over many hops</font><font color="#CCCCCC"> okay so how did they</font>

806
00:31:12,120 --> 00:31:17,760
patch this<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> disclose this to the</font>

807
00:31:14,400 --> 00:31:19,170
<font color="#CCCCCC">OpenSSH team</font><font color="#E5E5E5"> they thought about it for a</font>

808
00:31:17,760 --> 00:31:21,960
<font color="#E5E5E5">while they talked to us a little bit and</font>

809
00:31:19,170 --> 00:31:24,810
here's what they did<font color="#CCCCCC"> okay so we still</font><font color="#E5E5E5"> do</font>

810
00:31:21,960 --> 00:31:28,020
this up here<font color="#E5E5E5"> we we do it a Mac check on</font>

811
00:31:24,810 --> 00:31:29,700
to the 18 bytes<font color="#CCCCCC"> and down here we want to</font>

812
00:31:28,020 --> 00:31:31,320
wait<font color="#CCCCCC"> until</font><font color="#E5E5E5"> treated 18 bytes of arrives</font>

813
00:31:29,700 --> 00:31:33,000
<font color="#E5E5E5">and check what we were doing was</font>

814
00:31:31,320 --> 00:31:34,350
checking a<font color="#E5E5E5"> Mac</font><font color="#CCCCCC"> onto</font><font color="#E5E5E5"> to the 18 bytes and</font>

815
00:31:33,000 --> 00:31:35,890
the problem was<font color="#CCCCCC"> that we had already</font>

816
00:31:34,350 --> 00:31:38,320
checked<font color="#E5E5E5"> a mark up here</font>

817
00:31:35,890 --> 00:31:40,990
so let's try<font color="#E5E5E5"> to equalize things</font><font color="#CCCCCC"> let</font>

818
00:31:38,320 --> 00:31:44,620
instead check a mark here<font color="#CCCCCC"> on</font><font color="#E5E5E5"> two to the</font>

819
00:31:40,990 --> 00:31:46,450
18 - LF<font color="#CCCCCC"> bites</font><font color="#E5E5E5"> and then here we've got a</font>

820
00:31:44,620 --> 00:31:50,320
mark on LF by<font color="#E5E5E5"> its</font><font color="#CCCCCC"> and a mark</font><font color="#E5E5E5"> on to the</font>

821
00:31:46,450 --> 00:31:52,540
18 - LF bites<font color="#E5E5E5"> so roughly that's roughly</font>

822
00:31:50,320 --> 00:31:54,879
<font color="#CCCCCC">equivalent to doing a Mac on - to the 18</font>

823
00:31:52,540 --> 00:31:56,799
bytes<font color="#E5E5E5"> which is what we have up here so</font>

824
00:31:54,880 --> 00:31:58,840
there's a<font color="#E5E5E5"> chance that we've equalized</font>

825
00:31:56,799 --> 00:32:00,100
<font color="#E5E5E5">the timing by doing this and this is</font>

826
00:31:58,840 --> 00:32:01,540
<font color="#E5E5E5">what we said they should do we</font>

827
00:32:00,100 --> 00:32:06,669
recommended this in<font color="#E5E5E5"> our research paper</font>

828
00:32:01,540 --> 00:32:10,960
and they implemented it so is this a

829
00:32:06,670 --> 00:32:12,490
good patch so hands<font color="#E5E5E5"> up if you</font><font color="#CCCCCC"> think this</font>

830
00:32:10,960 --> 00:32:15,730
is a good patch because<font color="#E5E5E5"> now we've</font><font color="#CCCCCC"> taken</font>

831
00:32:12,490 --> 00:32:17,410
<font color="#E5E5E5">away</font><font color="#CCCCCC"> the timing signal</font><font color="#E5E5E5"> right everybody's</font>

832
00:32:15,730 --> 00:32:20,160
<font color="#E5E5E5">very nervous one guy one brave person</font>

833
00:32:17,410 --> 00:32:22,990
<font color="#CCCCCC">good on you who</font><font color="#E5E5E5"> thinks it's a bad patch</font>

834
00:32:20,160 --> 00:32:24,400
one person<font color="#E5E5E5"> I know at the back</font><font color="#CCCCCC"> hannah</font><font color="#E5E5E5"> has</font>

835
00:32:22,990 --> 00:32:27,820
been paying<font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot of attention to the</font>

836
00:32:24,400 --> 00:32:29,410
<font color="#CCCCCC">OpenSSH mailing list</font><font color="#E5E5E5"> I think</font><font color="#CCCCCC"> okay so it</font>

837
00:32:27,820 --> 00:32:31,960
turns<font color="#CCCCCC"> out</font><font color="#E5E5E5"> that is not</font><font color="#CCCCCC"> a good patch and</font>

838
00:32:29,410 --> 00:32:33,520
we made a<font color="#CCCCCC"> mistake and that mistake</font>

839
00:32:31,960 --> 00:32:38,110
<font color="#CCCCCC">unfortunately got propagated to the</font>

840
00:32:33,520 --> 00:32:41,710
<font color="#CCCCCC">OpenSSH</font><font color="#E5E5E5"> codebase let me explain why here</font>

841
00:32:38,110 --> 00:32:44,260
now is<font color="#E5E5E5"> another attack okay instead of</font>

842
00:32:41,710 --> 00:32:49,480
sending<font color="#E5E5E5"> two to the 18 - the block size</font>

843
00:32:44,260 --> 00:32:51,070
bytes<font color="#E5E5E5"> we send just one byte less and we</font>

844
00:32:49,480 --> 00:32:54,970
don't have<font color="#E5E5E5"> to do it quickly anymore we</font>

845
00:32:51,070 --> 00:32:57,460
<font color="#E5E5E5">just do our leisure</font><font color="#CCCCCC"> okay and then we</font>

846
00:32:54,970 --> 00:33:01,570
wait a few<font color="#E5E5E5"> seconds and then we send one</font>

847
00:32:57,460 --> 00:33:03,160
more bite<font color="#E5E5E5"> so eventually we've also sent</font>

848
00:33:01,570 --> 00:33:05,559
this first<font color="#E5E5E5"> blog here as in the previous</font>

849
00:33:03,160 --> 00:33:07,179
as in all the<font color="#CCCCCC"> previous attacks</font><font color="#E5E5E5"> so the</font>

850
00:33:05,559 --> 00:33:10,210
total<font color="#CCCCCC"> amount of data</font><font color="#E5E5E5"> that is being</font><font color="#CCCCCC"> sent</font>

851
00:33:07,179 --> 00:33:12,640
is<font color="#CCCCCC"> two to</font><font color="#E5E5E5"> the 18 bytes but</font><font color="#CCCCCC"> it's</font>

852
00:33:10,210 --> 00:33:15,700
staggered in such a way<font color="#CCCCCC"> that the final</font>

853
00:33:12,640 --> 00:33:19,090
<font color="#E5E5E5">Mac check cannot be done until this last</font>

854
00:33:15,700 --> 00:33:22,480
byte has<font color="#E5E5E5"> arrived</font><font color="#CCCCCC"> now let's</font><font color="#E5E5E5"> think about</font>

855
00:33:19,090 --> 00:33:24,459
that<font color="#E5E5E5"> final Mac check</font><font color="#CCCCCC"> okay and every time</font>

856
00:33:22,480 --> 00:33:26,320
how long<font color="#E5E5E5"> it</font><font color="#CCCCCC"> takes for the Mac error</font>

857
00:33:24,460 --> 00:33:29,530
message to come back now let's think

858
00:33:26,320 --> 00:33:31,629
<font color="#E5E5E5">about it okay</font><font color="#CCCCCC"> actually it's reversed now</font>

859
00:33:29,530 --> 00:33:33,460
<font color="#E5E5E5">I'm going to do that again my student</font>

860
00:33:31,630 --> 00:33:35,919
made<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> the slide and it's really</font>

861
00:33:33,460 --> 00:33:36,220
great<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see these animations there we</font>

862
00:33:35,919 --> 00:33:39,280
go

863
00:33:36,220 --> 00:33:40,750
thanks<font color="#E5E5E5"> turbine for doing this</font><font color="#CCCCCC"> if you</font>

864
00:33:39,280 --> 00:33:44,200
look<font color="#CCCCCC"> very</font><font color="#E5E5E5"> carefully at what's happening</font>

865
00:33:40,750 --> 00:33:47,140
<font color="#E5E5E5">now okay we've got a Mac on</font><font color="#CCCCCC"> to to the 18</font>

866
00:33:44,200 --> 00:33:49,450
bytes<font color="#CCCCCC"> we've got a Mac on LS by</font><font color="#E5E5E5"> it's plus</font>

867
00:33:47,140 --> 00:33:49,660
a Mac<font color="#CCCCCC"> onto to the 18 minus</font><font color="#E5E5E5"> LS bytes this</font>

868
00:33:49,450 --> 00:33:51,760
is the

869
00:33:49,660 --> 00:33:54,310
thing you do last in the two<font color="#CCCCCC"> different</font>

870
00:33:51,760 --> 00:33:56,560
cases<font color="#E5E5E5"> but</font><font color="#CCCCCC"> this one is done during the</font>

871
00:33:54,310 --> 00:33:59,260
<font color="#E5E5E5">wait step here</font><font color="#CCCCCC"> okay it's</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> during</font>

872
00:33:56,560 --> 00:34:01,240
normal processing<font color="#E5E5E5"> whereas this one isn't</font>

873
00:33:59,260 --> 00:34:02,890
done until<font color="#E5E5E5"> the very end</font><font color="#CCCCCC"> in this timing</font>

874
00:34:01,240 --> 00:34:04,870
interval here so again<font color="#CCCCCC"> we've got a</font>

875
00:34:02,890 --> 00:34:06,760
<font color="#E5E5E5">timing attack</font><font color="#CCCCCC"> right there's a timing</font>

876
00:34:04,870 --> 00:34:08,980
difference<font color="#E5E5E5"> between a final mark on</font><font color="#CCCCCC"> two</font>

877
00:34:06,760 --> 00:34:11,860
to the 18<font color="#E5E5E5"> bytes and a final mark on this</font>

878
00:34:08,980 --> 00:34:15,040
many bytes<font color="#E5E5E5"> okay so by making</font><font color="#CCCCCC"> that change</font>

879
00:34:11,860 --> 00:34:16,630
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> made</font><font color="#E5E5E5"> things worse because</font><font color="#CCCCCC"> it's</font>

880
00:34:15,040 --> 00:34:18,489
no<font color="#CCCCCC"> longer necessary to inject all of</font>

881
00:34:16,630 --> 00:34:19,929
these bytes quickly<font color="#E5E5E5"> you just have to</font>

882
00:34:18,489 --> 00:34:28,199
inject the right number of<font color="#E5E5E5"> bytes and</font>

883
00:34:19,929 --> 00:34:28,200
<font color="#E5E5E5">then wait</font><font color="#CCCCCC"> for a second y-yes</font>

884
00:34:29,120 --> 00:34:32,929
because what you want<font color="#CCCCCC"> is</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want</font>

885
00:34:31,460 --> 00:34:35,540
to do is you want to<font color="#CCCCCC"> allow normal</font>

886
00:34:32,929 --> 00:34:38,419
<font color="#CCCCCC">processing to happen if the length</font>

887
00:34:35,540 --> 00:34:40,340
fields<font color="#E5E5E5"> past</font><font color="#CCCCCC"> and that's why you wait here</font>

888
00:34:38,420 --> 00:34:43,700
<font color="#E5E5E5">for a few seconds a few</font><font color="#CCCCCC"> milliseconds</font>

889
00:34:40,340 --> 00:34:45,560
actually is sufficient<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> but you</font>

890
00:34:43,699 --> 00:34:47,719
<font color="#E5E5E5">don't want the last</font><font color="#CCCCCC"> Mac</font><font color="#E5E5E5"> check to be</font>

891
00:34:45,560 --> 00:34:51,020
triggered<font color="#CCCCCC"> until you're ready to time</font><font color="#E5E5E5"> it</font>

892
00:34:47,719 --> 00:34:52,459
so<font color="#CCCCCC"> sending</font><font color="#E5E5E5"> the last one byte here gives</font>

893
00:34:51,020 --> 00:34:54,380
you the opportunity<font color="#CCCCCC"> to say okay know</font>

894
00:34:52,460 --> 00:34:56,240
start my clock<font color="#E5E5E5"> because what I know is</font>

895
00:34:54,380 --> 00:34:58,280
that<font color="#E5E5E5"> that last Mac check will only be</font>

896
00:34:56,239 --> 00:35:00,319
done after this single<font color="#E5E5E5"> byte here</font><font color="#CCCCCC"> is</font>

897
00:34:58,280 --> 00:35:02,480
injected and not before<font color="#CCCCCC"> it</font><font color="#E5E5E5"> can't be and</font>

898
00:35:00,320 --> 00:35:05,090
that gives you the opportunity<font color="#CCCCCC"> to detect</font>

899
00:35:02,480 --> 00:35:08,650
the difference<font color="#CCCCCC"> here in this box</font><font color="#E5E5E5"> and in</font>

900
00:35:05,090 --> 00:35:08,650
this box<font color="#E5E5E5"> okay</font>

901
00:35:09,410 --> 00:35:13,640
almost certainly<font color="#E5E5E5"> Oh almost anything you</font>

902
00:35:12,110 --> 00:35:15,530
<font color="#E5E5E5">do makes it worse that's that's what I</font>

903
00:35:13,640 --> 00:35:18,290
learned<font color="#E5E5E5"> from this whole this</font><font color="#CCCCCC"> whole</font>

904
00:35:15,530 --> 00:35:20,450
exercise<font color="#E5E5E5"> yes okay</font>

905
00:35:18,290 --> 00:35:21,950
maybe it's getting<font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to follow now</font>

906
00:35:20,450 --> 00:35:24,080
and I understand that<font color="#CCCCCC"> this is kind of</font>

907
00:35:21,950 --> 00:35:26,899
quite tricky stuff<font color="#E5E5E5"> okay we didn't see it</font>

908
00:35:24,080 --> 00:35:29,240
<font color="#E5E5E5">until quite late okay</font>

909
00:35:26,900 --> 00:35:32,180
so this is us accepting our best paper

910
00:35:29,240 --> 00:35:35,919
award<font color="#E5E5E5"> at CCS last year and here's me</font>

911
00:35:32,180 --> 00:35:35,919
thinking<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> we got away with it</font>

912
00:35:36,310 --> 00:35:43,490
but wrongly<font color="#E5E5E5"> as it turns out okay so we</font>

913
00:35:41,720 --> 00:35:45,250
told the<font color="#CCCCCC"> new OpenSSH team about the</font>

914
00:35:43,490 --> 00:35:48,919
first attack<font color="#E5E5E5"> the first one I</font><font color="#CCCCCC"> showed you</font>

915
00:35:45,250 --> 00:35:50,270
<font color="#E5E5E5">already and we worked</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> closely with</font>

916
00:35:48,920 --> 00:35:52,070
them they were<font color="#E5E5E5"> actually very happy for</font>

917
00:35:50,270 --> 00:35:53,000
<font color="#E5E5E5">us to talk about</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> anyway because it</font>

918
00:35:52,070 --> 00:35:55,460
turned out<font color="#CCCCCC"> that they weren't</font>

919
00:35:53,000 --> 00:35:57,370
<font color="#E5E5E5">you know they had already deprecated</font><font color="#CCCCCC"> CBC</font>

920
00:35:55,460 --> 00:35:59,270
mode quite heavily<font color="#E5E5E5"> in their inner code</font>

921
00:35:57,370 --> 00:36:01,400
<font color="#E5E5E5">they added some</font><font color="#CCCCCC"> added those</font>

922
00:35:59,270 --> 00:36:02,450
countermeasures<font color="#CCCCCC"> that we suggested then</font>

923
00:36:01,400 --> 00:36:05,690
we told them that<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> those</font>

924
00:36:02,450 --> 00:36:07,430
countermeasures<font color="#E5E5E5"> are no good</font><font color="#CCCCCC"> and we told</font>

925
00:36:05,690 --> 00:36:10,220
<font color="#CCCCCC">them also</font><font color="#E5E5E5"> about some other issues some</font>

926
00:36:07,430 --> 00:36:11,870
quite very subtle by<font color="#E5E5E5"> counting issues so</font>

927
00:36:10,220 --> 00:36:13,009
they had an off error you know<font color="#E5E5E5"> the</font>

928
00:36:11,870 --> 00:36:15,770
number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> bytes they were counting</font>

929
00:36:13,010 --> 00:36:18,140
wasn't<font color="#E5E5E5"> exactly right and an</font><font color="#CCCCCC"> open SSH</font>

930
00:36:15,770 --> 00:36:21,080
five point at<font color="#E5E5E5"> seven point five they</font>

931
00:36:18,140 --> 00:36:22,759
<font color="#CCCCCC">fixed a subtle</font><font color="#E5E5E5"> byte counting entry the</font>

932
00:36:21,080 --> 00:36:24,380
really subtle error<font color="#E5E5E5"> but it didn't</font>

933
00:36:22,760 --> 00:36:26,990
actually fix<font color="#E5E5E5"> this last attack that I</font>

934
00:36:24,380 --> 00:36:28,460
just showed you<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> because it's</font>

935
00:36:26,990 --> 00:36:30,500
essentially<font color="#CCCCCC"> impossible to fix</font>

936
00:36:28,460 --> 00:36:31,670
we could have reverted<font color="#CCCCCC"> back to</font><font color="#E5E5E5"> the</font>

937
00:36:30,500 --> 00:36:33,560
previous thing but it would<font color="#E5E5E5"> still have</font>

938
00:36:31,670 --> 00:36:35,150
being a timing attack<font color="#CCCCCC"> so they're</font><font color="#E5E5E5"> kind of</font>

939
00:36:33,560 --> 00:36:40,130
an<font color="#E5E5E5"> impossible situation this thing is</font>

940
00:36:35,150 --> 00:36:42,050
<font color="#E5E5E5">kind of fundamentally broken</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> the</font>

941
00:36:40,130 --> 00:36:44,210
last bullet<font color="#CCCCCC"> point there says several</font>

942
00:36:42,050 --> 00:36:46,160
residual<font color="#E5E5E5"> issues still remain and that's</font>

943
00:36:44,210 --> 00:36:47,810
<font color="#CCCCCC">called for saying actually the OpenSSH</font>

944
00:36:46,160 --> 00:36:50,450
and<font color="#CCCCCC"> cbc mode is</font><font color="#E5E5E5"> still vulnerable to</font>

945
00:36:47,810 --> 00:36:53,930
quite a nasty attack that<font color="#E5E5E5"> will recover a</font>

946
00:36:50,450 --> 00:36:55,129
plaintext<font color="#CCCCCC"> i'm but to be fair</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> OpenSSH</font>

947
00:36:53,930 --> 00:36:58,040
as<font color="#E5E5E5"> i mentioned they've been steadily</font>

948
00:36:55,130 --> 00:36:59,300
<font color="#E5E5E5">getting rid of cbc mode</font><font color="#CCCCCC"> for example it</font>

949
00:36:58,040 --> 00:37:02,690
was default<font color="#E5E5E5"> it was disabled by default</font>

950
00:36:59,300 --> 00:37:04,220
<font color="#CCCCCC">and OpenSSH</font><font color="#E5E5E5"> six point seven we haven't</font>

951
00:37:02,690 --> 00:37:06,650
yet removed it completely from<font color="#E5E5E5"> the</font>

952
00:37:04,220 --> 00:37:09,939
<font color="#CCCCCC">codebase so</font><font color="#E5E5E5"> you can still you can still</font>

953
00:37:06,650 --> 00:37:13,370
switch on if you<font color="#CCCCCC"> really want to okay</font>

954
00:37:09,940 --> 00:37:14,900
good so what else have we<font color="#E5E5E5"> been doing</font><font color="#CCCCCC"> in</font>

955
00:37:13,370 --> 00:37:16,759
this<font color="#E5E5E5"> paper so there was the attack and</font>

956
00:37:14,900 --> 00:37:18,110
then<font color="#CCCCCC"> as</font><font color="#E5E5E5"> there's other work that didn't</font>

957
00:37:16,760 --> 00:37:21,440
make<font color="#CCCCCC"> into</font><font color="#E5E5E5"> the paper because</font><font color="#CCCCCC"> we were too</font>

958
00:37:18,110 --> 00:37:24,050
stupid<font color="#CCCCCC"> we also try to prove security of</font>

959
00:37:21,440 --> 00:37:25,790
some<font color="#E5E5E5"> different modes so we had this one</font>

960
00:37:24,050 --> 00:37:26,720
hundred<font color="#CCCCCC"> and ninety nine different cipher</font>

961
00:37:25,790 --> 00:37:28,250
<font color="#E5E5E5">suites being used</font>

962
00:37:26,720 --> 00:37:29,779
we thought<font color="#CCCCCC"> we'd</font><font color="#E5E5E5"> better analyze some</font><font color="#CCCCCC"> of</font>

963
00:37:28,250 --> 00:37:31,790
that and see if<font color="#E5E5E5"> we could prove security</font>

964
00:37:29,780 --> 00:37:33,020
results about it I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go rather</font>

965
00:37:31,790 --> 00:37:35,570
<font color="#CCCCCC">quickly</font><font color="#E5E5E5"> note because</font><font color="#CCCCCC"> I've just</font><font color="#E5E5E5"> been</font>

966
00:37:33,020 --> 00:37:37,610
<font color="#E5E5E5">given the the</font><font color="#CCCCCC"> five-minute signal by your</font>

967
00:37:35,570 --> 00:37:38,450
<font color="#CCCCCC">eye</font><font color="#E5E5E5"> so there's lots of things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> have</font>

968
00:37:37,610 --> 00:37:41,420
<font color="#CCCCCC">been introduced</font>

969
00:37:38,450 --> 00:37:44,689
I mentioned GCM here the<font color="#E5E5E5"> Lancefield is</font>

970
00:37:41,420 --> 00:37:46,430
no longer encrypted<font color="#E5E5E5"> and actually that's</font>

971
00:37:44,690 --> 00:37:47,930
a sensible<font color="#E5E5E5"> decision because of</font><font color="#CCCCCC"> we as we</font>

972
00:37:46,430 --> 00:37:49,129
saw encrypting<font color="#CCCCCC"> length fields gets you</font>

973
00:37:47,930 --> 00:37:50,899
into<font color="#CCCCCC"> trouble</font>

974
00:37:49,130 --> 00:37:53,090
<font color="#E5E5E5">okay but instead</font><font color="#CCCCCC"> now it's treated as</font>

975
00:37:50,900 --> 00:37:54,950
<font color="#E5E5E5">associated data in the GCM construction</font>

976
00:37:53,090 --> 00:37:57,080
there's a then they<font color="#E5E5E5"> added that's generic</font>

977
00:37:54,950 --> 00:37:59,029
<font color="#E5E5E5">encrypt-then-mac construction again the</font>

978
00:37:57,080 --> 00:38:01,190
<font color="#E5E5E5">lens field is not</font><font color="#CCCCCC"> encrypted</font><font color="#E5E5E5"> but its</font>

979
00:37:59,030 --> 00:38:03,800
integrity protected by the<font color="#CCCCCC"> Mac</font><font color="#E5E5E5"> and then</font>

980
00:38:01,190 --> 00:38:06,890
there's<font color="#CCCCCC"> cha-cha xx poly 1305 in</font><font color="#E5E5E5"> version</font>

981
00:38:03,800 --> 00:38:09,140
6.5 and became the default<font color="#CCCCCC"> in 6.9</font><font color="#E5E5E5"> and</font>

982
00:38:06,890 --> 00:38:12,500
actually it actually encrypts<font color="#CCCCCC"> the</font><font color="#E5E5E5"> level</font>

983
00:38:09,140 --> 00:38:15,080
again so it's clear to me<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

984
00:38:12,500 --> 00:38:17,150
designers of<font color="#CCCCCC"> OpenSSH are is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> OpenSSH</font>

985
00:38:15,080 --> 00:38:19,040
development team sorry<font color="#E5E5E5"> are really keen</font>

986
00:38:17,150 --> 00:38:20,900
to<font color="#CCCCCC"> hide the line</font><font color="#E5E5E5"> field</font><font color="#CCCCCC"> they really want</font>

987
00:38:19,040 --> 00:38:24,230
<font color="#E5E5E5">to prevent as much traffic</font><font color="#CCCCCC"> analysis as</font>

988
00:38:20,900 --> 00:38:26,450
possible<font color="#CCCCCC"> okay</font>

989
00:38:24,230 --> 00:38:28,910
let's remind ourselves of this again

990
00:38:26,450 --> 00:38:30,620
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the the naive construction</font>

991
00:38:28,910 --> 00:38:32,750
<font color="#E5E5E5">here's the generic encrypt-then-mac</font>

992
00:38:30,620 --> 00:38:35,089
construction so it's what you would

993
00:38:32,750 --> 00:38:35,930
expect you encrypt but<font color="#E5E5E5"> know the packet</font>

994
00:38:35,090 --> 00:38:37,700
<font color="#E5E5E5">length is in the clear</font>

995
00:38:35,930 --> 00:38:39,710
and then you<font color="#E5E5E5"> mark all of that</font>

996
00:38:37,700 --> 00:38:41,200
<font color="#E5E5E5">incorporating the sequence number so</font>

997
00:38:39,710 --> 00:38:43,610
this is pretty<font color="#E5E5E5"> good cryptographically</font>

998
00:38:41,200 --> 00:38:46,730
<font color="#CCCCCC">you could prove nice security results</font>

999
00:38:43,610 --> 00:38:49,010
about this and we did in our paper<font color="#CCCCCC"> okay</font>

1000
00:38:46,730 --> 00:38:50,960
AES GCM is<font color="#E5E5E5"> working more or less the same</font>

1001
00:38:49,010 --> 00:38:53,540
<font color="#CCCCCC">way and now the packet length</font><font color="#E5E5E5"> field is</font>

1002
00:38:50,960 --> 00:38:53,930
in the clear unfortunately they<font color="#CCCCCC"> got it</font>

1003
00:38:53,540 --> 00:38:56,420
wrong

1004
00:38:53,930 --> 00:38:58,520
how can you get encrypt-then-mac<font color="#CCCCCC"> wrong</font>

1005
00:38:56,420 --> 00:39:01,760
right<font color="#E5E5E5"> I mean it's like the simplest</font>

1006
00:38:58,520 --> 00:39:05,930
<font color="#E5E5E5">thing possible well here's the</font><font color="#CCCCCC"> code can</font>

1007
00:39:01,760 --> 00:39:10,250
you see the<font color="#E5E5E5"> problem let</font><font color="#CCCCCC"> me help you here</font>

1008
00:39:05,930 --> 00:39:11,120
is the<font color="#CCCCCC"> Mac computation okay once all the</font>

1009
00:39:10,250 --> 00:39:13,610
data<font color="#E5E5E5"> has arrived</font>

1010
00:39:11,120 --> 00:39:15,700
let's check the<font color="#E5E5E5"> Mac but it's not</font>

1011
00:39:13,610 --> 00:39:18,380
<font color="#E5E5E5">checking the Mac it's computing the Mac</font>

1012
00:39:15,700 --> 00:39:22,040
<font color="#E5E5E5">okay so it's computing the Mac value on</font>

1013
00:39:18,380 --> 00:39:24,310
the received<font color="#E5E5E5"> cipher text then</font><font color="#CCCCCC"> we decrypt</font>

1014
00:39:22,040 --> 00:39:27,250
<font color="#E5E5E5">by calling something called cipher crypt</font>

1015
00:39:24,310 --> 00:39:30,770
<font color="#E5E5E5">it's not very helpful but anyway okay</font><font color="#CCCCCC"> so</font>

1016
00:39:27,250 --> 00:39:32,960
<font color="#E5E5E5">we've computed a Mac now we decrypt and</font>

1017
00:39:30,770 --> 00:39:34,090
then finally we<font color="#CCCCCC"> check that</font><font color="#E5E5E5"> the Mac is</font>

1018
00:39:32,960 --> 00:39:36,920
correct

1019
00:39:34,090 --> 00:39:40,010
so the Mac check is done after<font color="#E5E5E5"> the</font>

1020
00:39:36,920 --> 00:39:41,240
<font color="#E5E5E5">decryption even though the Mac was</font>

1021
00:39:40,010 --> 00:39:42,680
completed on<font color="#CCCCCC"> the ciphertext</font>

1022
00:39:41,240 --> 00:39:44,600
<font color="#E5E5E5">and could have been and should have been</font>

1023
00:39:42,680 --> 00:39:49,609
<font color="#E5E5E5">checked as soon as the cipher text was</font>

1024
00:39:44,600 --> 00:39:53,210
all<font color="#CCCCCC"> available</font><font color="#E5E5E5"> okay this is not good this</font>

1025
00:39:49,610 --> 00:39:55,400
does lead<font color="#CCCCCC"> to possibly two attacks so if</font>

1026
00:39:53,210 --> 00:39:58,090
you think<font color="#E5E5E5"> about it if there</font><font color="#CCCCCC"> was in this</font>

1027
00:39:55,400 --> 00:40:00,560
<font color="#E5E5E5">code here some kind</font><font color="#CCCCCC"> of padding Oracle</font>

1028
00:39:58,090 --> 00:40:02,660
then because the Mac check is only done

1029
00:40:00,560 --> 00:40:02,960
afterwards<font color="#E5E5E5"> the padding Oracle could be</font>

1030
00:40:02,660 --> 00:40:05,720
true

1031
00:40:02,960 --> 00:40:07,460
by an attacker<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> it turned out that</font>

1032
00:40:05,720 --> 00:40:09,529
in the court<font color="#E5E5E5"> there was no such problem</font>

1033
00:40:07,460 --> 00:40:11,839
<font color="#E5E5E5">but there could have</font><font color="#CCCCCC"> been this</font><font color="#E5E5E5"> is an</font>

1034
00:40:09,530 --> 00:40:15,829
unsafe way to implement<font color="#E5E5E5"> encrypt-then-mac</font>

1035
00:40:11,839 --> 00:40:18,410
<font color="#CCCCCC">in general and the reason is that</font><font color="#E5E5E5"> they</font>

1036
00:40:15,829 --> 00:40:20,510
wanted<font color="#CCCCCC"> to reuse this code</font><font color="#E5E5E5"> here from the</font>

1037
00:40:18,410 --> 00:40:22,879
encrypt and<font color="#E5E5E5"> map construction this is</font>

1038
00:40:20,510 --> 00:40:25,250
legacy code and the retrofitted

1039
00:40:22,880 --> 00:40:27,950
encrypt-then-mac<font color="#E5E5E5"> into the existing code</font>

1040
00:40:25,250 --> 00:40:29,569
path<font color="#E5E5E5"> okay instead of creating a separate</font>

1041
00:40:27,950 --> 00:40:31,970
code path for the encrypt-then-mac

1042
00:40:29,569 --> 00:40:34,400
construction<font color="#E5E5E5"> so this is this here and</font>

1043
00:40:31,970 --> 00:40:36,589
the point is<font color="#E5E5E5"> that with encrypt and Mac</font>

1044
00:40:34,400 --> 00:40:38,450
<font color="#E5E5E5">you can only check the Mac once you have</font>

1045
00:40:36,589 --> 00:40:41,029
the plain<font color="#CCCCCC"> text</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> you can only check</font><font color="#E5E5E5"> the</font>

1046
00:40:38,450 --> 00:40:43,040
<font color="#E5E5E5">Mac</font><font color="#CCCCCC"> after the decryption right that's</font>

1047
00:40:41,030 --> 00:40:45,829
why it ends<font color="#E5E5E5"> up there that's pretty</font>

1048
00:40:43,040 --> 00:40:47,930
horrible<font color="#CCCCCC"> okay and this was fixed in</font>

1049
00:40:45,829 --> 00:40:50,059
<font color="#CCCCCC">OpenSSH 7.3 so we disclose that to the</font>

1050
00:40:47,930 --> 00:40:53,169
<font color="#CCCCCC">OpenSSH team and they fix</font><font color="#E5E5E5"> this as a bug</font>

1051
00:40:50,059 --> 00:40:55,970
- here's the<font color="#CCCCCC"> cha cha</font><font color="#E5E5E5"> 20 construction</font>

1052
00:40:53,170 --> 00:40:59,270
just to frighten you or maybe wake you

1053
00:40:55,970 --> 00:41:01,098
up my god what's going on and it's<font color="#CCCCCC"> kind</font>

1054
00:40:59,270 --> 00:41:03,619
of strange<font color="#E5E5E5"> so we encrypt the packet</font>

1055
00:41:01,099 --> 00:41:05,750
<font color="#E5E5E5">length field and we encrypt the payload</font>

1056
00:41:03,619 --> 00:41:08,030
<font color="#E5E5E5">but we do using two separate</font><font color="#CCCCCC"> ChaCha</font>

1057
00:41:05,750 --> 00:41:10,970
<font color="#CCCCCC">twenty instances using two separate keys</font>

1058
00:41:08,030 --> 00:41:14,780
k1 and k2<font color="#E5E5E5"> here we're deriving some kind</font>

1059
00:41:10,970 --> 00:41:17,540
of key for a poly<font color="#CCCCCC"> 1305 Mac algorithm to</font>

1060
00:41:14,780 --> 00:41:21,650
get<font color="#E5E5E5"> a Mac tag and we send c1 c2</font><font color="#CCCCCC"> and the</font>

1061
00:41:17,540 --> 00:41:24,470
Mac on the<font color="#E5E5E5"> wire okay so this is getting</font>

1062
00:41:21,650 --> 00:41:27,140
<font color="#CCCCCC">quite</font><font color="#E5E5E5"> complicated let me just skip</font>

1063
00:41:24,470 --> 00:41:29,089
<font color="#E5E5E5">through this okay and here's the key</font>

1064
00:41:27,140 --> 00:41:31,790
<font color="#CCCCCC">thing we're encrypting the lens</font><font color="#E5E5E5"> field</font>

1065
00:41:29,089 --> 00:41:33,259
again do I<font color="#E5E5E5"> have an attack because</font>

1066
00:41:31,790 --> 00:41:37,730
<font color="#CCCCCC">there's an encrypted one field</font>

1067
00:41:33,260 --> 00:41:39,920
no this is secure and in our paper we're

1068
00:41:37,730 --> 00:41:41,839
actually using<font color="#E5E5E5"> an extension of our</font>

1069
00:41:39,920 --> 00:41:44,630
existing security models<font color="#E5E5E5"> we're able to</font>

1070
00:41:41,839 --> 00:41:46,160
prove that<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is secure at least within</font>

1071
00:41:44,630 --> 00:41:48,530
<font color="#E5E5E5">the confines</font><font color="#CCCCCC"> of our security</font><font color="#E5E5E5"> model</font><font color="#CCCCCC"> and</font>

1072
00:41:46,160 --> 00:41:49,700
the reason it's okay is that really this

1073
00:41:48,530 --> 00:41:53,089
is<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> counter mode encryption</font>

1074
00:41:49,700 --> 00:41:55,069
inside<font color="#CCCCCC"> cha-cha xx and now you can't play</font>

1075
00:41:53,089 --> 00:41:56,540
these cut and paste games with blocks<font color="#CCCCCC"> if</font>

1076
00:41:55,069 --> 00:41:57,170
you try to<font color="#E5E5E5"> move a block from one place</font>

1077
00:41:56,540 --> 00:41:58,880
to<font color="#CCCCCC"> another</font>

1078
00:41:57,170 --> 00:42:00,829
the<font color="#E5E5E5"> decryptions are completely unrelated</font>

1079
00:41:58,880 --> 00:42:02,660
to<font color="#CCCCCC"> each other so all</font><font color="#E5E5E5"> of those cut and</font>

1080
00:42:00,829 --> 00:42:05,690
paste attacks go away<font color="#E5E5E5"> and you can</font>

1081
00:42:02,660 --> 00:42:07,149
formally prove that that's<font color="#E5E5E5"> okay okay so</font>

1082
00:42:05,690 --> 00:42:10,339
that's really what this<font color="#CCCCCC"> slide is saying</font>

1083
00:42:07,150 --> 00:42:12,230
it says that we we<font color="#E5E5E5"> prove the security of</font>

1084
00:42:10,339 --> 00:42:14,690
<font color="#CCCCCC">these different modes so here's a</font><font color="#E5E5E5"> table</font>

1085
00:42:12,230 --> 00:42:17,029
<font color="#CCCCCC">summarizing our kind</font><font color="#E5E5E5"> of formal security</font>

1086
00:42:14,690 --> 00:42:19,489
<font color="#E5E5E5">analysis lots of takes a lot</font>

1087
00:42:17,029 --> 00:42:21,709
crosses and what you see in this first

1088
00:42:19,489 --> 00:42:22,999
<font color="#CCCCCC">column is if you want security against</font>

1089
00:42:21,709 --> 00:42:24,769
these kind<font color="#E5E5E5"> of chores and fragment</font>

1090
00:42:22,999 --> 00:42:28,609
attacks<font color="#E5E5E5"> like the ones we used in the in</font>

1091
00:42:24,769 --> 00:42:30,558
<font color="#E5E5E5">the any attack work you can get security</font>

1092
00:42:28,609 --> 00:42:32,630
for CBC<font color="#E5E5E5"> mode and you can't really get</font>

1093
00:42:30,559 --> 00:42:35,209
<font color="#E5E5E5">security for kind of fixed CBC mode</font>

1094
00:42:32,630 --> 00:42:37,609
either<font color="#CCCCCC"> okay that's what the that kind</font><font color="#E5E5E5"> of</font>

1095
00:42:35,209 --> 00:42:40,368
long sequence of<font color="#E5E5E5"> attacks</font><font color="#CCCCCC"> shows you but</font>

1096
00:42:37,609 --> 00:42:42,679
the other<font color="#E5E5E5"> modes do achieve can kind of</font>

1097
00:42:40,369 --> 00:42:44,509
<font color="#CCCCCC">CCA</font><font color="#E5E5E5"> security in this fragment fragmented</font>

1098
00:42:42,679 --> 00:42:48,369
setting all of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> modes give you</font>

1099
00:42:44,509 --> 00:42:50,539
integrity<font color="#E5E5E5"> because</font><font color="#CCCCCC"> of the use</font><font color="#E5E5E5"> of a Mac</font>

1100
00:42:48,369 --> 00:42:52,249
<font color="#E5E5E5">some of them but not all of them give</font>

1101
00:42:50,539 --> 00:42:54,890
you<font color="#E5E5E5"> this boundary hiding property and</font>

1102
00:42:52,249 --> 00:42:56,598
the reason that<font color="#CCCCCC"> the encrypt-then-mac and</font>

1103
00:42:54,890 --> 00:42:58,489
the GCM constructions do not give you

1104
00:42:56,599 --> 00:43:00,439
boundary hiding is that they have the

1105
00:42:58,489 --> 00:43:02,839
plain text field sorry the<font color="#E5E5E5"> land field in</font>

1106
00:43:00,439 --> 00:43:06,078
the clear<font color="#E5E5E5"> to enable the decryption to be</font>

1107
00:43:02,839 --> 00:43:07,159
done<font color="#E5E5E5"> and if you can see land fields then</font>

1108
00:43:06,079 --> 00:43:08,659
you can certainly see<font color="#E5E5E5"> where the</font>

1109
00:43:07,159 --> 00:43:10,009
<font color="#CCCCCC">boundaries are between packets</font><font color="#E5E5E5"> because</font>

1110
00:43:08,659 --> 00:43:12,650
you can just measure the<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of bytes</font>

1111
00:43:10,009 --> 00:43:14,599
<font color="#E5E5E5">between okay so you can't get that</font>

1112
00:43:12,650 --> 00:43:17,390
<font color="#CCCCCC">prevention</font><font color="#E5E5E5"> of traffic passive traffic</font>

1113
00:43:14,599 --> 00:43:21,259
analysis based on lengths<font color="#E5E5E5"> that you might</font>

1114
00:43:17,390 --> 00:43:23,479
<font color="#E5E5E5">hope for interestingly none of the</font>

1115
00:43:21,259 --> 00:43:25,429
constructions<font color="#E5E5E5"> achieve boundary hiding</font>

1116
00:43:23,479 --> 00:43:26,928
against chosen fragment<font color="#E5E5E5"> attackers so</font>

1117
00:43:25,429 --> 00:43:28,999
there's like<font color="#E5E5E5"> a chosen ciphertext setting</font>

1118
00:43:26,929 --> 00:43:30,559
<font color="#E5E5E5">an order to achieve any</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of denial</font>

1119
00:43:28,999 --> 00:43:32,509
of service resistance they all have this

1120
00:43:30,559 --> 00:43:35,779
problem<font color="#CCCCCC"> that an attacker who can</font><font color="#E5E5E5"> flip a</font>

1121
00:43:32,509 --> 00:43:39,319
single bit<font color="#E5E5E5"> in the cipher text stream can</font>

1122
00:43:35,779 --> 00:43:40,279
cause a connection to hang<font color="#E5E5E5"> okay so none</font>

1123
00:43:39,319 --> 00:43:41,869
of these problem<font color="#E5E5E5"> none of these</font>

1124
00:43:40,279 --> 00:43:43,219
constructions achieve these kind of

1125
00:43:41,869 --> 00:43:44,929
strongest security notions that<font color="#E5E5E5"> you</font>

1126
00:43:43,219 --> 00:43:47,919
<font color="#E5E5E5">might want beyond the standard</font>

1127
00:43:44,929 --> 00:43:50,779
confidentiality<font color="#E5E5E5"> and integrity properties</font>

1128
00:43:47,919 --> 00:43:54,499
okay<font color="#CCCCCC"> so coming to some concluding</font>

1129
00:43:50,779 --> 00:43:55,849
<font color="#CCCCCC">remarks I hope that we've developed</font><font color="#E5E5E5"> and</font>

1130
00:43:54,499 --> 00:43:58,999
I hope I've conveyed<font color="#CCCCCC"> to you that we have</font>

1131
00:43:55,849 --> 00:44:00,409
<font color="#CCCCCC">developed</font><font color="#E5E5E5"> a better understanding of all</font>

1132
00:43:58,999 --> 00:44:02,988
the<font color="#CCCCCC"> different encryption</font><font color="#E5E5E5"> modes that</font>

1133
00:44:00,409 --> 00:44:04,909
<font color="#CCCCCC">OpenSSH and</font><font color="#E5E5E5"> ssh more generally is</font>

1134
00:44:02,989 --> 00:44:07,239
supporting we've done this measurement

1135
00:44:04,909 --> 00:44:11,359
study<font color="#E5E5E5"> we found</font><font color="#CCCCCC"> new attacks</font><font color="#E5E5E5"> on CBC mode</font>

1136
00:44:07,239 --> 00:44:12,559
and we did security<font color="#E5E5E5"> analysis for the</font>

1137
00:44:11,359 --> 00:44:14,749
other main modes<font color="#E5E5E5"> that are out there</font>

1138
00:44:12,559 --> 00:44:16,789
<font color="#CCCCCC">really carefully characterizing what</font>

1139
00:44:14,749 --> 00:44:19,669
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> security</font><font color="#E5E5E5"> you can hope to</font><font color="#CCCCCC"> get</font>

1140
00:44:16,789 --> 00:44:21,469
<font color="#CCCCCC">from them none of</font><font color="#E5E5E5"> the schemes in use</font>

1141
00:44:19,669 --> 00:44:23,868
today<font color="#E5E5E5"> possesses all of</font><font color="#CCCCCC"> the properties</font>

1142
00:44:21,469 --> 00:44:25,159
that<font color="#E5E5E5"> you might want you can get strong</font>

1143
00:44:23,869 --> 00:44:27,229
integrity you can get good

1144
00:44:25,159 --> 00:44:29,059
confidentiality properties but these

1145
00:44:27,229 --> 00:44:30,598
more advanced properties like prevention

1146
00:44:29,059 --> 00:44:34,079
of traffic<font color="#E5E5E5"> analysis and</font>

1147
00:44:30,599 --> 00:44:36,809
<font color="#CCCCCC">denial-of-service</font><font color="#E5E5E5"> are not achieved but</font>

1148
00:44:34,079 --> 00:44:38,849
<font color="#E5E5E5">we can get them so in our 2012 paper</font>

1149
00:44:36,809 --> 00:44:41,279
there's a scheme<font color="#E5E5E5"> called</font><font color="#CCCCCC"> inter Mac</font><font color="#E5E5E5"> which</font>

1150
00:44:38,849 --> 00:44:43,440
<font color="#E5E5E5">is basically encrypting and macking</font>

1151
00:44:41,279 --> 00:44:45,869
little chunks of data and processing

1152
00:44:43,440 --> 00:44:47,430
them<font color="#E5E5E5"> in chunks as they arrive</font><font color="#CCCCCC"> ok so you</font>

1153
00:44:45,869 --> 00:44:48,630
have some overhead<font color="#E5E5E5"> because you have</font>

1154
00:44:47,430 --> 00:44:51,538
extra<font color="#E5E5E5"> Macs</font>

1155
00:44:48,630 --> 00:44:53,519
but that doesn't profit<font color="#CCCCCC"> ease</font><font color="#E5E5E5"> so if you</font>

1156
00:44:51,539 --> 00:44:55,559
want them you can get<font color="#E5E5E5"> them and what</font>

1157
00:44:53,519 --> 00:44:57,538
we're<font color="#E5E5E5"> doing right now is actually</font>

1158
00:44:55,559 --> 00:45:00,630
<font color="#E5E5E5">writing code</font><font color="#CCCCCC"> and prototyping it and</font>

1159
00:44:57,539 --> 00:45:02,999
measuring its performance based on<font color="#E5E5E5"> this</font>

1160
00:45:00,630 --> 00:45:04,979
<font color="#CCCCCC">Intermatic scheme</font><font color="#E5E5E5"> from our 2012 paper</font><font color="#CCCCCC"> ok</font>

1161
00:45:02,999 --> 00:45:06,629
and we hope to if you look<font color="#CCCCCC"> very</font>

1162
00:45:04,979 --> 00:45:08,489
carefully you<font color="#E5E5E5"> can find our code on</font>

1163
00:45:06,630 --> 00:45:10,289
github<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you have to know what to</font>

1164
00:45:08,489 --> 00:45:12,569
search for<font color="#CCCCCC"> I guess in</font><font color="#E5E5E5"> turr Mac would be</font>

1165
00:45:10,289 --> 00:45:14,430
a good start<font color="#E5E5E5"> scam</font><font color="#CCCCCC"> and we plan to</font><font color="#E5E5E5"> write</font>

1166
00:45:12,569 --> 00:45:17,069
this up as a paper and talk<font color="#E5E5E5"> about the</font>

1167
00:45:14,430 --> 00:45:19,529
the whole<font color="#E5E5E5"> development process and talk</font>

1168
00:45:17,069 --> 00:45:21,630
about<font color="#E5E5E5"> what kind of security we</font><font color="#CCCCCC"> can get</font>

1169
00:45:19,529 --> 00:45:24,680
for<font color="#CCCCCC"> ssh at what</font><font color="#E5E5E5"> cost</font>

1170
00:45:21,630 --> 00:45:26,579
<font color="#CCCCCC">ok because it's</font><font color="#E5E5E5"> not completely for free</font>

1171
00:45:24,680 --> 00:45:28,410
<font color="#CCCCCC">ok if you're interested</font><font color="#E5E5E5"> in reading</font>

1172
00:45:26,579 --> 00:45:30,900
further<font color="#CCCCCC"> here's some papers</font><font color="#E5E5E5"> that you</font>

1173
00:45:28,410 --> 00:45:32,578
might want to look at<font color="#E5E5E5"> and the I guess</font>

1174
00:45:30,900 --> 00:45:35,249
the place<font color="#E5E5E5"> to start</font><font color="#CCCCCC"> is probably</font><font color="#E5E5E5"> the last</font>

1175
00:45:32,579 --> 00:45:39,180
paper<font color="#E5E5E5"> which you can find online at the</font>

1176
00:45:35,249 --> 00:45:39,970
<font color="#E5E5E5">CCS website ok thank you</font><font color="#CCCCCC"> very much for</font>

1177
00:45:39,180 --> 00:45:45,859
<font color="#E5E5E5">your attention</font>

1178
00:45:39,970 --> 00:45:45,859
[Applause]

