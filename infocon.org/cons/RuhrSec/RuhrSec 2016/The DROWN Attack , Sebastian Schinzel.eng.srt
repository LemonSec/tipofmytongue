1
00:00:00,060 --> 00:00:04,140
<font color="#E5E5E5">okay thank</font><font color="#CCCCCC"> you very much for the</font>

2
00:00:01,890 --> 00:00:07,770
introduction Mario yeah<font color="#E5E5E5"> I'm Sebastian</font>

3
00:00:04,140 --> 00:00:10,860
and<font color="#E5E5E5"> I'm one of</font><font color="#CCCCCC"> 15 authors</font><font color="#E5E5E5"> of this attack</font>

4
00:00:07,770 --> 00:00:12,540
which<font color="#CCCCCC"> is a bit strange so the the attack</font>

5
00:00:10,860 --> 00:00:14,879
<font color="#E5E5E5">actually developed over more</font><font color="#CCCCCC"> than one</font>

6
00:00:12,540 --> 00:00:18,029
<font color="#E5E5E5">year and it started like a little tiny</font>

7
00:00:14,880 --> 00:00:19,859
idea<font color="#E5E5E5"> of Nimrod and and me and we looked</font>

8
00:00:18,029 --> 00:00:21,448
at SSL version<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> which is not really</font>

9
00:00:19,859 --> 00:00:23,670
<font color="#CCCCCC">relevant so we</font><font color="#E5E5E5"> just looked at it and</font>

10
00:00:21,449 --> 00:00:25,590
then<font color="#E5E5E5"> it kept like exploding and</font>

11
00:00:23,670 --> 00:00:28,109
exploding<font color="#E5E5E5"> and exploding it got worse and</font>

12
00:00:25,590 --> 00:00:31,349
worse<font color="#E5E5E5"> and worse</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> now we got a logo</font>

13
00:00:28,109 --> 00:00:34,829
and a<font color="#CCCCCC"> webpage</font><font color="#E5E5E5"> and so on and so on so</font><font color="#CCCCCC"> ok</font>

14
00:00:31,349 --> 00:00:37,440
the exploit chain for drown is not

15
00:00:34,829 --> 00:00:40,620
mathematically<font color="#CCCCCC"> not very difficult</font><font color="#E5E5E5"> but</font>

16
00:00:37,440 --> 00:00:42,239
there's many things which you or several

17
00:00:40,620 --> 00:00:44,489
things which you<font color="#E5E5E5"> need to understand in</font>

18
00:00:42,239 --> 00:00:49,559
order<font color="#E5E5E5"> to get a grasp of why drown is</font>

19
00:00:44,489 --> 00:00:52,230
really a problem when I say SSL version

20
00:00:49,559 --> 00:00:55,320
<font color="#CCCCCC">two I'm speaking of 90s crypto</font><font color="#E5E5E5"> so</font>

21
00:00:52,230 --> 00:00:58,260
prehistoric<font color="#CCCCCC"> Jurassic</font><font color="#E5E5E5"> cryptography that</font>

22
00:00:55,320 --> 00:01:00,690
<font color="#CCCCCC">you see there there's something like</font><font color="#E5E5E5"> des</font>

23
00:00:58,260 --> 00:01:02,640
the data<font color="#E5E5E5"> encryption standard there's</font>

24
00:01:00,690 --> 00:01:05,459
something<font color="#E5E5E5"> like our c4</font><font color="#CCCCCC"> which just</font>

25
00:01:02,640 --> 00:01:08,729
recently<font color="#E5E5E5"> died which</font><font color="#CCCCCC"> was used like</font><font color="#E5E5E5"> for</font>

26
00:01:05,459 --> 00:01:11,309
many years<font color="#E5E5E5"> our</font><font color="#CCCCCC"> c2</font><font color="#E5E5E5"> there's something like</font>

27
00:01:08,729 --> 00:01:13,229
an md5 everyone knows that md5<font color="#CCCCCC"> is broken</font>

28
00:01:11,310 --> 00:01:15,869
<font color="#E5E5E5">and so on and so on</font><font color="#CCCCCC"> so these were in</font><font color="#E5E5E5"> the</font>

29
00:01:13,229 --> 00:01:18,509
90s<font color="#E5E5E5"> and then with the Netscape they came</font>

30
00:01:15,869 --> 00:01:21,119
up with<font color="#E5E5E5"> with a new protocol SSL version</font>

31
00:01:18,509 --> 00:01:23,430
<font color="#E5E5E5">1 was so bad that I never published it</font>

32
00:01:21,119 --> 00:01:25,950
<font color="#E5E5E5">right so there's there's nothing</font><font color="#CCCCCC"> written</font>

33
00:01:23,430 --> 00:01:28,170
<font color="#E5E5E5">down what SSL version version 1 really</font>

34
00:01:25,950 --> 00:01:30,900
did and then they published SSL version

35
00:01:28,170 --> 00:01:33,600
2 which was like good<font color="#CCCCCC"> enough for them to</font>

36
00:01:30,900 --> 00:01:36,150
publish it but bad enough that<font color="#E5E5E5"> he was</font>

37
00:01:33,600 --> 00:01:39,000
<font color="#E5E5E5">broken within a few months later</font><font color="#CCCCCC"> right</font>

38
00:01:36,150 --> 00:01:41,850
so SSL version 2 was published in 94<font color="#CCCCCC"> and</font>

39
00:01:39,000 --> 00:01:44,759
was broken<font color="#E5E5E5"> fundamentally broken in 94</font>

40
00:01:41,850 --> 00:01:47,669
and I pictured this something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font>

41
00:01:44,759 --> 00:01:50,520
right so as I said<font color="#E5E5E5"> it was - so</font><font color="#CCCCCC"> it was</font>

42
00:01:47,670 --> 00:01:52,439
proposed and it died immediately<font color="#CCCCCC"> because</font>

43
00:01:50,520 --> 00:01:54,380
there's a<font color="#CCCCCC"> fundamental problem</font><font color="#E5E5E5"> in SSL</font>

44
00:01:52,439 --> 00:01:57,990
version 2 which allows a

45
00:01:54,380 --> 00:02:00,449
<font color="#CCCCCC">man-in-the-middle to to downgrade</font><font color="#E5E5E5"> your</font>

46
00:01:57,990 --> 00:02:02,640
<font color="#CCCCCC">cipher suite so let's just assume</font><font color="#E5E5E5"> you</font>

47
00:02:00,450 --> 00:02:06,240
you're a client and<font color="#CCCCCC"> you speak</font><font color="#E5E5E5"> to a</font>

48
00:02:02,640 --> 00:02:07,680
server<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you select a 128</font><font color="#E5E5E5"> bit cipher</font>

49
00:02:06,240 --> 00:02:11,340
suite which is strong which is<font color="#E5E5E5"> still</font>

50
00:02:07,680 --> 00:02:12,990
strong<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> men in the middle</font><font color="#E5E5E5"> could</font>

51
00:02:11,340 --> 00:02:16,290
<font color="#CCCCCC">downgrade your attack to a</font>

52
00:02:12,990 --> 00:02:18,120
<font color="#CCCCCC">week</font><font color="#E5E5E5"> cipher let's say</font><font color="#CCCCCC"> ds1 export cipher</font>

53
00:02:16,290 --> 00:02:20,070
or something<font color="#E5E5E5"> like this well and you have</font>

54
00:02:18,120 --> 00:02:21,840
no way<font color="#CCCCCC"> of finding out</font>

55
00:02:20,070 --> 00:02:24,209
so the cipher suite selection is nothing

56
00:02:21,840 --> 00:02:27,020
that is<font color="#E5E5E5"> authenticated in SSL version 2</font>

57
00:02:24,210 --> 00:02:29,820
<font color="#E5E5E5">and therefore it's fundamentally broken</font>

58
00:02:27,020 --> 00:02:32,220
<font color="#E5E5E5">so we could leave it here better</font>

59
00:02:29,820 --> 00:02:34,920
basically there's really<font color="#E5E5E5"> no reason of</font>

60
00:02:32,220 --> 00:02:36,960
using SSL version 2 the<font color="#CCCCCC"> last browser</font>

61
00:02:34,920 --> 00:02:39,809
that supported SSL version 2 was

62
00:02:36,960 --> 00:02:42,870
Internet Explorer 6<font color="#E5E5E5"> and it would still</font>

63
00:02:39,810 --> 00:02:45,780
never negotiate SSL version 2<font color="#E5E5E5"> if it has</font>

64
00:02:42,870 --> 00:02:47,850
the opportunity<font color="#CCCCCC"> to use SSL version 3 all</font>

65
00:02:45,780 --> 00:02:50,700
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so as I said Internet Explorer 6</font>

66
00:02:47,850 --> 00:02:53,370
<font color="#E5E5E5">would still would still prefer SSL</font>

67
00:02:50,700 --> 00:02:59,429
version 3 so it should be<font color="#E5E5E5"> gone</font><font color="#CCCCCC"> by now</font>

68
00:02:53,370 --> 00:03:01,230
<font color="#E5E5E5">right which it's not quite gone right so</font>

69
00:02:59,430 --> 00:03:02,550
we have<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like a little island</font>

70
00:03:01,230 --> 00:03:05,190
we thought there there might be a little

71
00:03:02,550 --> 00:03:08,550
island<font color="#E5E5E5"> and when we scan the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> we</font>

72
00:03:05,190 --> 00:03:10,260
might find a few SSL version<font color="#E5E5E5"> 2 instances</font>

73
00:03:08,550 --> 00:03:12,660
<font color="#CCCCCC">so that we can</font><font color="#E5E5E5"> write a paper and</font><font color="#CCCCCC"> at</font>

74
00:03:10,260 --> 00:03:15,540
least get something<font color="#E5E5E5"> out of our research</font>

75
00:03:12,660 --> 00:03:18,180
<font color="#E5E5E5">and then we did the scanning and we were</font>

76
00:03:15,540 --> 00:03:20,340
<font color="#E5E5E5">actually quite surprised that</font><font color="#CCCCCC"> SSL</font>

77
00:03:18,180 --> 00:03:24,200
version 2 is still prevalent<font color="#E5E5E5"> it's still</font>

78
00:03:20,340 --> 00:03:28,380
used on many many servers<font color="#E5E5E5"> so for example</font>

79
00:03:24,200 --> 00:03:31,200
<font color="#E5E5E5">let's start with HTTPS we scan port 4</font>

80
00:03:28,380 --> 00:03:35,010
for<font color="#E5E5E5"> 3 over the full Internet we saw</font>

81
00:03:31,200 --> 00:03:37,679
<font color="#E5E5E5">approximately 35 million servers that</font>

82
00:03:35,010 --> 00:03:41,940
supported some kind of SSL or TLS<font color="#E5E5E5"> and</font>

83
00:03:37,680 --> 00:03:44,190
out of those 6 million<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> 17%</font><font color="#E5E5E5"> were</font>

84
00:03:41,940 --> 00:03:45,329
still happy<font color="#CCCCCC"> to negotiate SSL version 2</font>

85
00:03:44,190 --> 00:03:48,570
which is really strange

86
00:03:45,330 --> 00:03:50,460
<font color="#E5E5E5">the</font><font color="#CCCCCC"> 17% is quite high when you look at</font>

87
00:03:48,570 --> 00:03:55,890
<font color="#E5E5E5">SMTP</font><font color="#CCCCCC"> for example port 25</font>

88
00:03:50,460 --> 00:03:59,160
we found 3.3 million servers that

89
00:03:55,890 --> 00:04:01,589
<font color="#CCCCCC">support it with SSL and TLS</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> star</font><font color="#E5E5E5"> TLS</font>

90
00:03:59,160 --> 00:04:03,600
right those<font color="#CCCCCC"> are only those</font><font color="#E5E5E5"> SMTP servers</font>

91
00:04:01,590 --> 00:04:06,540
that support some<font color="#E5E5E5"> kind of encryption and</font>

92
00:04:03,600 --> 00:04:09,480
out of those<font color="#E5E5E5"> almost 1 million supported</font>

93
00:04:06,540 --> 00:04:12,260
SSL version 2<font color="#E5E5E5"> and you see that there's a</font>

94
00:04:09,480 --> 00:04:15,420
difference<font color="#CCCCCC"> among protocols</font><font color="#E5E5E5"> some of them</font>

95
00:04:12,260 --> 00:04:18,779
support SSL version 2 quite often<font color="#E5E5E5"> some</font>

96
00:04:15,420 --> 00:04:21,120
of<font color="#E5E5E5"> them don't</font><font color="#CCCCCC"> the reason why for</font><font color="#E5E5E5"> smtp we</font>

97
00:04:18,779 --> 00:04:24,419
see so many SSL version 2 supported

98
00:04:21,120 --> 00:04:26,580
service is opportunistic<font color="#E5E5E5"> encryption</font>

99
00:04:24,419 --> 00:04:28,919
<font color="#E5E5E5">so basically especially after</font>

100
00:04:26,580 --> 00:04:31,590
Snowden<font color="#E5E5E5"> people were saying we have to</font>

101
00:04:28,919 --> 00:04:35,758
use some encryption<font color="#CCCCCC"> even if it's really</font>

102
00:04:31,590 --> 00:04:38,099
<font color="#CCCCCC">bad</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> SMTP has a</font><font color="#E5E5E5"> plain text fallback</font>

103
00:04:35,759 --> 00:04:41,370
so when<font color="#E5E5E5"> two smtp servers speak to each</font>

104
00:04:38,099 --> 00:04:44,099
other<font color="#E5E5E5"> and and deliver emails and they</font>

105
00:04:41,370 --> 00:04:47,099
can<font color="#CCCCCC"> negotiate a SS</font><font color="#E5E5E5"> l or TLS connection</font>

106
00:04:44,099 --> 00:04:49,259
<font color="#CCCCCC">they will fall back to</font><font color="#E5E5E5"> plain text</font><font color="#CCCCCC"> and so</font>

107
00:04:47,099 --> 00:04:51,810
and<font color="#E5E5E5"> indeed SSL version 2 is a</font>

108
00:04:49,259 --> 00:04:55,889
fundamentally broken<font color="#CCCCCC"> protocol</font><font color="#E5E5E5"> but only</font>

109
00:04:51,810 --> 00:04:57,629
for active attackers<font color="#E5E5E5"> so if you have like</font>

110
00:04:55,889 --> 00:05:01,080
a pcap dump a Wireshark

111
00:04:57,629 --> 00:05:03,180
<font color="#CCCCCC">a file of an SSL version 2 handshake</font>

112
00:05:01,080 --> 00:05:05,190
it's still very<font color="#CCCCCC"> difficult to</font><font color="#E5E5E5"> break it</font>

113
00:05:03,180 --> 00:05:06,659
right<font color="#E5E5E5"> it would be very difficult for an</font>

114
00:05:05,190 --> 00:05:08,639
essay to break it<font color="#E5E5E5"> you have to be an</font>

115
00:05:06,659 --> 00:05:11,610
active man in the middle so SSL version

116
00:05:08,639 --> 00:05:14,039
2 is actually<font color="#E5E5E5"> better than plain text and</font>

117
00:05:11,610 --> 00:05:16,710
<font color="#CCCCCC">therefore everyone</font><font color="#E5E5E5"> was saying for for</font>

118
00:05:14,039 --> 00:05:19,110
<font color="#CCCCCC">smtp you have to enable everything RC</font>

119
00:05:16,710 --> 00:05:20,400
<font color="#CCCCCC">for</font><font color="#E5E5E5"> whatever ciphers you got everything</font>

120
00:05:19,110 --> 00:05:22,650
because everything<font color="#CCCCCC"> is better than</font><font color="#E5E5E5"> plain</font>

121
00:05:20,400 --> 00:05:25,289
text<font color="#E5E5E5"> and what</font><font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> today is</font>

122
00:05:22,650 --> 00:05:27,840
that enabling SSL version 2 is really

123
00:05:25,289 --> 00:05:33,240
really<font color="#E5E5E5"> a bad idea</font><font color="#CCCCCC"> even for opportunistic</font>

124
00:05:27,840 --> 00:05:36,029
encryption<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so I already said Brown is</font>

125
00:05:33,240 --> 00:05:38,129
not not<font color="#E5E5E5"> metal mathematically not very</font>

126
00:05:36,029 --> 00:05:41,039
difficult<font color="#CCCCCC"> but it's a long exploit</font><font color="#E5E5E5"> train</font>

127
00:05:38,129 --> 00:05:43,469
and so we thought about what would<font color="#E5E5E5"> be</font>

128
00:05:41,039 --> 00:05:46,409
<font color="#CCCCCC">the</font><font color="#E5E5E5"> fundamental puzzle pieces that you</font>

129
00:05:43,469 --> 00:05:48,990
need<font color="#CCCCCC"> to understand for drown and the</font>

130
00:05:46,409 --> 00:05:51,770
first cluster<font color="#E5E5E5"> of puzzle pieces are the</font>

131
00:05:48,990 --> 00:05:55,409
first<font color="#CCCCCC"> three that is life in bathhouse</font>

132
00:05:51,770 --> 00:05:57,568
1989's attack that<font color="#CCCCCC"> York</font><font color="#E5E5E5"> shrank in the</font>

133
00:05:55,409 --> 00:05:59,789
keynote<font color="#E5E5E5"> already mentioned I will give a</font>

134
00:05:57,569 --> 00:06:01,949
short introduction<font color="#CCCCCC"> to this then we</font>

135
00:05:59,789 --> 00:06:03,539
present<font color="#E5E5E5"> a new protocol flaw in SSL</font>

136
00:06:01,949 --> 00:06:06,180
version<font color="#CCCCCC"> tool which is so far unknown</font>

137
00:06:03,539 --> 00:06:10,099
<font color="#E5E5E5">right since there is nothing</font><font color="#CCCCCC"> to do with</font>

138
00:06:06,180 --> 00:06:13,800
the<font color="#E5E5E5"> the break that was found in 1994 and</font>

139
00:06:10,099 --> 00:06:16,830
we need 40 bit export ciphers<font color="#E5E5E5"> so 40 bit</font>

140
00:06:13,800 --> 00:06:19,770
export ciphers is let's say a<font color="#E5E5E5"> child that</font>

141
00:06:16,830 --> 00:06:24,710
was<font color="#E5E5E5"> born out of</font><font color="#CCCCCC"> the first crypto Wars</font>

142
00:06:19,770 --> 00:06:27,120
so the first crypto Wars the the the

143
00:06:24,710 --> 00:06:31,080
<font color="#E5E5E5">like the government of the United States</font>

144
00:06:27,120 --> 00:06:33,210
<font color="#CCCCCC">of America said ok we produce a lot of</font>

145
00:06:31,080 --> 00:06:35,370
cryptography<font color="#CCCCCC"> and when we export this</font>

146
00:06:33,210 --> 00:06:36,659
through some other countries<font color="#E5E5E5"> we can't</font>

147
00:06:35,370 --> 00:06:38,520
<font color="#E5E5E5">even read the stuff that the</font><font color="#CCCCCC"> other</font>

148
00:06:36,659 --> 00:06:40,450
countries<font color="#CCCCCC"> are sending anymore which</font><font color="#E5E5E5"> is</font>

149
00:06:38,520 --> 00:06:43,630
bad<font color="#CCCCCC"> and so therefore</font><font color="#E5E5E5"> they said</font>

150
00:06:40,450 --> 00:06:46,570
we in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to export</font>

151
00:06:43,630 --> 00:06:49,120
cryptography<font color="#CCCCCC"> you have to</font><font color="#E5E5E5"> limit its its</font>

152
00:06:46,570 --> 00:06:52,030
strength<font color="#E5E5E5"> and one way to limit its</font>

153
00:06:49,120 --> 00:06:54,100
strength is<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> limit like</font>

154
00:06:52,030 --> 00:06:56,530
cryptography<font color="#CCCCCC"> to 40 bit</font><font color="#E5E5E5"> so the</font><font color="#CCCCCC"> Keaton</font>

155
00:06:54,100 --> 00:06:58,450
maximum allowed key size is 40 bit<font color="#E5E5E5"> which</font>

156
00:06:56,530 --> 00:07:00,669
<font color="#E5E5E5">is still supported in SSL version 2 and</font>

157
00:06:58,450 --> 00:07:02,950
<font color="#CCCCCC">when we</font><font color="#E5E5E5"> take these three together</font><font color="#CCCCCC"> and</font>

158
00:07:00,670 --> 00:07:06,580
blend it a<font color="#CCCCCC"> little we get a practical</font>

159
00:07:02,950 --> 00:07:10,210
attack against SSL version 2<font color="#E5E5E5"> alright and</font>

160
00:07:06,580 --> 00:07:13,060
this<font color="#E5E5E5"> would be like a passive attack now</font>

161
00:07:10,210 --> 00:07:15,460
this would be<font color="#CCCCCC"> an attack where we can we</font>

162
00:07:13,060 --> 00:07:17,680
can decrypt an SSL version<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> handshake</font>

163
00:07:15,460 --> 00:07:21,700
after the fact<font color="#E5E5E5"> as a as a passive</font>

164
00:07:17,680 --> 00:07:28,510
monitoring<font color="#E5E5E5"> person then there's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> third</font>

165
00:07:21,700 --> 00:07:31,390
puzzle piece<font color="#E5E5E5"> which means that</font><font color="#CCCCCC"> are not</font>

166
00:07:28,510 --> 00:07:34,150
<font color="#CCCCCC">only SSL versions so SSL version 2</font>

167
00:07:31,390 --> 00:07:36,130
version 3 TLS 1.0 and<font color="#E5E5E5"> so on and so on</font>

168
00:07:34,150 --> 00:07:38,020
they use the same key material for the

169
00:07:36,130 --> 00:07:40,240
same server so if you have a server and

170
00:07:38,020 --> 00:07:42,099
<font color="#CCCCCC">you allow all the versions then all</font>

171
00:07:40,240 --> 00:07:44,290
<font color="#E5E5E5">versions will use the same key material</font>

172
00:07:42,100 --> 00:07:46,810
which is very<font color="#CCCCCC"> interesting and when we</font>

173
00:07:44,290 --> 00:07:48,790
put this puzzle<font color="#E5E5E5"> piece to the rest we</font><font color="#CCCCCC"> can</font>

174
00:07:46,810 --> 00:07:50,830
not only<font color="#CCCCCC"> break SSL version</font><font color="#E5E5E5"> 2 but we can</font>

175
00:07:48,790 --> 00:07:54,310
break all<font color="#CCCCCC"> of a sudden all TLS</font>

176
00:07:50,830 --> 00:07:56,590
connections<font color="#E5E5E5"> right so you observe some</font>

177
00:07:54,310 --> 00:07:58,840
kind of TLS connection and you can<font color="#E5E5E5"> break</font>

178
00:07:56,590 --> 00:08:03,190
<font color="#CCCCCC">it afterwards under the condition that</font>

179
00:07:58,840 --> 00:08:04,599
<font color="#E5E5E5">the server supports SSL version 2</font><font color="#CCCCCC"> ok now</font>

180
00:08:03,190 --> 00:08:07,270
this<font color="#E5E5E5"> is here it gets really interesting</font>

181
00:08:04,600 --> 00:08:09,190
<font color="#CCCCCC">this was the point where we</font><font color="#E5E5E5"> said ok now</font>

182
00:08:07,270 --> 00:08:12,490
it<font color="#E5E5E5"> gets really</font><font color="#CCCCCC"> interesting because now</font>

183
00:08:09,190 --> 00:08:14,170
we<font color="#E5E5E5"> were using SSL version 2 to</font><font color="#CCCCCC"> break to</font>

184
00:08:12,490 --> 00:08:17,590
break<font color="#E5E5E5"> something which was actually known</font>

185
00:08:14,170 --> 00:08:21,820
<font color="#CCCCCC">to be good I TLS is still known to be to</font>

186
00:08:17,590 --> 00:08:23,859
be secret<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> everything now is a</font>

187
00:08:21,820 --> 00:08:26,349
protocol<font color="#CCCCCC"> level</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> means it effects</font>

188
00:08:23,860 --> 00:08:28,690
all SSL version<font color="#E5E5E5"> 2 implementations</font>

189
00:08:26,350 --> 00:08:32,800
<font color="#E5E5E5">ok it's it's actually</font><font color="#CCCCCC"> a flaw in</font><font color="#E5E5E5"> the</font>

190
00:08:28,690 --> 00:08:35,979
protocol<font color="#E5E5E5"> but when we put two more puzzle</font>

191
00:08:32,799 --> 00:08:38,380
pieces to the to the mix to

192
00:08:35,979 --> 00:08:40,270
implementation<font color="#E5E5E5"> errors in open SSL all of</font>

193
00:08:38,380 --> 00:08:42,809
a sudden our practical attack which

194
00:08:40,270 --> 00:08:45,610
still involved lots<font color="#E5E5E5"> of computing power</font>

195
00:08:42,809 --> 00:08:47,380
<font color="#CCCCCC">this attacks</font><font color="#E5E5E5"> gets trivial all of a</font>

196
00:08:45,610 --> 00:08:50,020
sudden a trivial means it takes several

197
00:08:47,380 --> 00:08:52,320
minutes<font color="#E5E5E5"> on this on this laptop</font><font color="#CCCCCC"> we don't</font>

198
00:08:50,020 --> 00:08:56,310
need a<font color="#CCCCCC"> big cluster anymore right</font>

199
00:08:52,320 --> 00:08:58,560
and<font color="#E5E5E5"> and also it's not</font><font color="#CCCCCC"> only that</font><font color="#E5E5E5"> we have</font>

200
00:08:56,310 --> 00:09:00,869
a<font color="#E5E5E5"> practical attack against many TLS</font>

201
00:08:58,560 --> 00:09:03,449
servers but a lot of TLS servers so we

202
00:09:00,870 --> 00:09:07,290
<font color="#CCCCCC">get really these</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> implementation</font>

203
00:09:03,450 --> 00:09:09,060
<font color="#E5E5E5">errors are like very unfortunate but</font>

204
00:09:07,290 --> 00:09:14,610
they help the attack to<font color="#CCCCCC"> make it much</font>

205
00:09:09,060 --> 00:09:15,989
more much more practical<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> let's give</font>

206
00:09:14,610 --> 00:09:20,040
a short introduction<font color="#CCCCCC"> in life in</font>

207
00:09:15,990 --> 00:09:23,190
<font color="#CCCCCC">bathhouse 1998 attack there is like I</font>

208
00:09:20,040 --> 00:09:24,569
will<font color="#E5E5E5"> give you</font><font color="#CCCCCC"> just the the idea that you</font>

209
00:09:23,190 --> 00:09:26,450
need<font color="#E5E5E5"> to understand why this attack</font>

210
00:09:24,570 --> 00:09:28,800
really<font color="#E5E5E5"> works it's a padding Oracle</font>

211
00:09:26,450 --> 00:09:30,600
<font color="#E5E5E5">attack and it's it's much fun to</font>

212
00:09:28,800 --> 00:09:33,349
implement it so<font color="#E5E5E5"> if you have some time</font>

213
00:09:30,600 --> 00:09:38,400
try to implement it<font color="#E5E5E5"> it's really really</font>

214
00:09:33,350 --> 00:09:41,220
<font color="#CCCCCC">nice ok this</font><font color="#E5E5E5"> is an RSA key exchange in</font>

215
00:09:38,400 --> 00:09:43,620
TLS<font color="#CCCCCC"> ok this is not</font><font color="#E5E5E5"> the fee Hellman we</font>

216
00:09:41,220 --> 00:09:46,320
don't use<font color="#E5E5E5"> perfect forward secrecy</font><font color="#CCCCCC"> we</font>

217
00:09:43,620 --> 00:09:49,080
have a TLS client on the<font color="#E5E5E5"> left a TLS</font>

218
00:09:46,320 --> 00:09:52,770
server on the right and the TLS client

219
00:09:49,080 --> 00:09:56,970
starts a TLS<font color="#E5E5E5"> handshake with with a</font>

220
00:09:52,770 --> 00:10:00,060
<font color="#CCCCCC">so-called client hello message the</font>

221
00:09:56,970 --> 00:10:02,430
server responds<font color="#CCCCCC"> with a server hello and</font>

222
00:10:00,060 --> 00:10:05,430
with a server hello it sends his<font color="#CCCCCC"> a TLS</font>

223
00:10:02,430 --> 00:10:07,739
certificate the TLS certificate contains

224
00:10:05,430 --> 00:10:11,939
an RSA public key which is very

225
00:10:07,740 --> 00:10:13,880
important and in the<font color="#E5E5E5"> next step the the</font>

226
00:10:11,940 --> 00:10:17,040
the<font color="#CCCCCC"> client does something which is very</font>

227
00:10:13,880 --> 00:10:20,760
<font color="#E5E5E5">important for the security</font><font color="#CCCCCC"> of of TLS</font>

228
00:10:17,040 --> 00:10:23,010
overall for this key exchange<font color="#CCCCCC"> the client</font>

229
00:10:20,760 --> 00:10:25,200
generates a random<font color="#CCCCCC"> premaster secret</font><font color="#E5E5E5"> and</font>

230
00:10:23,010 --> 00:10:29,939
this<font color="#CCCCCC"> premaster secret is some kind of a</font>

231
00:10:25,200 --> 00:10:32,700
<font color="#CCCCCC">session key right and it generates a</font>

232
00:10:29,940 --> 00:10:34,920
random<font color="#E5E5E5"> a session key then encrypts it</font>

233
00:10:32,700 --> 00:10:37,080
with the RSA public key<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was in the</font>

234
00:10:34,920 --> 00:10:39,689
certificate<font color="#CCCCCC"> sends</font><font color="#E5E5E5"> it over to the server</font>

235
00:10:37,080 --> 00:10:41,580
<font color="#CCCCCC">the server</font><font color="#E5E5E5"> decrypts it because he has he</font>

236
00:10:39,690 --> 00:10:44,850
<font color="#E5E5E5">has the private key right</font><font color="#CCCCCC"> so it can</font>

237
00:10:41,580 --> 00:10:46,910
decrypt it<font color="#E5E5E5"> so a client and server I have</font>

238
00:10:44,850 --> 00:10:50,310
<font color="#E5E5E5">to has the same they have the same</font>

239
00:10:46,910 --> 00:10:52,530
session key and<font color="#E5E5E5"> can speak AES together</font>

240
00:10:50,310 --> 00:10:55,319
<font color="#E5E5E5">for example</font><font color="#CCCCCC"> right so this</font><font color="#E5E5E5"> is the a</font>

241
00:10:52,530 --> 00:10:58,140
symmetric key exchange that is used over

242
00:10:55,320 --> 00:11:00,570
RSA and everything from there will<font color="#CCCCCC"> be</font>

243
00:10:58,140 --> 00:11:03,429
encrypted<font color="#E5E5E5"> using AES that means symmetric</font>

244
00:11:00,570 --> 00:11:07,029
encryption for example<font color="#CCCCCC"> ok</font>

245
00:11:03,429 --> 00:11:08,559
if if<font color="#E5E5E5"> someone records this key exchange</font>

246
00:11:07,029 --> 00:11:10,989
<font color="#E5E5E5">and all the data that they sent</font>

247
00:11:08,559 --> 00:11:13,059
afterwards<font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> afterwards break</font>

248
00:11:10,989 --> 00:11:15,339
<font color="#E5E5E5">this client key exchange this encrypted</font>

249
00:11:13,059 --> 00:11:17,079
<font color="#E5E5E5">session key if you can break it you can</font>

250
00:11:15,339 --> 00:11:18,339
break<font color="#E5E5E5"> like you can decrypt simply</font>

251
00:11:17,079 --> 00:11:22,449
decrypt all<font color="#E5E5E5"> the data that was</font>

252
00:11:18,339 --> 00:11:24,369
<font color="#E5E5E5">transferred which is something that</font>

253
00:11:22,449 --> 00:11:26,258
happened for example<font color="#CCCCCC"> to lab a bit</font><font color="#E5E5E5"> so if</font>

254
00:11:24,369 --> 00:11:28,989
someone steals<font color="#E5E5E5"> your private key from</font>

255
00:11:26,259 --> 00:11:30,970
your TLS server<font color="#E5E5E5"> you can you can years</font>

256
00:11:28,989 --> 00:11:33,309
<font color="#E5E5E5">after that you can still decrypt all the</font>

257
00:11:30,970 --> 00:11:35,709
traffic<font color="#E5E5E5"> that you have recorded so it's</font>

258
00:11:33,309 --> 00:11:37,749
basically everything rises<font color="#E5E5E5"> and falls</font>

259
00:11:35,709 --> 00:11:39,518
with this client key exchange<font color="#E5E5E5"> if you can</font>

260
00:11:37,749 --> 00:11:44,109
break it you can break<font color="#E5E5E5"> the TLS even</font>

261
00:11:39,519 --> 00:11:46,899
afterwards<font color="#E5E5E5"> okay so this</font><font color="#CCCCCC"> premaster secret</font>

262
00:11:44,109 --> 00:11:48,339
is it's a session key it is used for

263
00:11:46,899 --> 00:11:51,309
symmetric<font color="#CCCCCC"> encryption and symmetric</font>

264
00:11:48,339 --> 00:11:54,039
encryption uses shorter keys then then a

265
00:11:51,309 --> 00:11:58,209
symmetric encryption<font color="#E5E5E5"> so in the case of</font>

266
00:11:54,039 --> 00:12:04,419
TLS<font color="#CCCCCC"> it uses this is the</font><font color="#E5E5E5"> session key here</font>

267
00:11:58,209 --> 00:12:08,649
it's 46 bytes<font color="#CCCCCC"> 0 3 0</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> is the version of</font>

268
00:12:04,419 --> 00:12:11,289
TLS that is used is TLS 1.0 and then you

269
00:12:08,649 --> 00:12:13,449
need<font color="#E5E5E5"> to use padding because RSA is a</font>

270
00:12:11,289 --> 00:12:16,119
block cipher<font color="#CCCCCC"> so when you have a 2,000</font>

271
00:12:13,449 --> 00:12:18,309
bit key you can<font color="#CCCCCC"> always only</font><font color="#E5E5E5"> encrypt 2000</font>

272
00:12:16,119 --> 00:12:20,350
bit<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so you need to have some</font>

273
00:12:18,309 --> 00:12:23,889
padding and the<font color="#E5E5E5"> padding that is used</font>

274
00:12:20,350 --> 00:12:28,569
<font color="#E5E5E5">here is pkcs1 in version 1.5 and this</font>

275
00:12:23,889 --> 00:12:31,059
<font color="#E5E5E5">says it starts with 0 0 0 2 then we have</font>

276
00:12:28,569 --> 00:12:34,449
<font color="#E5E5E5">random padding and the random padding</font>

277
00:12:31,059 --> 00:12:37,029
must not have must not contain<font color="#E5E5E5"> 0 because</font>

278
00:12:34,449 --> 00:12:39,508
the 0<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> bite here is the delimiter</font>

279
00:12:37,029 --> 00:12:44,379
<font color="#E5E5E5">between padding and the actual content</font>

280
00:12:39,509 --> 00:12:48,369
<font color="#CCCCCC">okay and this</font><font color="#E5E5E5"> is a very easy</font><font color="#CCCCCC"> padding</font>

281
00:12:44,379 --> 00:12:54,220
scheme that is<font color="#E5E5E5"> used in TLS</font><font color="#CCCCCC"> ok what is</font>

282
00:12:48,369 --> 00:12:56,470
important<font color="#E5E5E5"> is ours a is not so it's</font>

283
00:12:54,220 --> 00:12:58,119
basically an integer<font color="#CCCCCC"> right it's a number</font>

284
00:12:56,470 --> 00:12:59,949
it's not<font color="#E5E5E5"> a</font><font color="#CCCCCC"> bit field it's</font><font color="#E5E5E5"> not treated as</font>

285
00:12:58,119 --> 00:13:03,279
a bit field but it's a very very<font color="#E5E5E5"> big</font>

286
00:12:59,949 --> 00:13:06,099
number<font color="#CCCCCC"> and so when you</font><font color="#E5E5E5"> know that this</font>

287
00:13:03,279 --> 00:13:08,559
<font color="#CCCCCC">number starts with</font><font color="#E5E5E5"> a 0 0 0 2 you have</font>

288
00:13:06,100 --> 00:13:12,749
<font color="#E5E5E5">boundaries right so you know a boundary</font>

289
00:13:08,559 --> 00:13:12,749
within within which this<font color="#E5E5E5"> particular</font>

290
00:13:12,820 --> 00:13:19,270
within this particular integer<font color="#E5E5E5"> right now</font>

291
00:13:14,980 --> 00:13:24,850
is okay<font color="#E5E5E5"> so not</font><font color="#CCCCCC"> Dyson daka's attack has</font>

292
00:13:19,270 --> 00:13:27,490
like a very interesting observation<font color="#CCCCCC"> with</font>

293
00:13:24,850 --> 00:13:31,060
<font color="#E5E5E5">blossom</font><font color="#CCCCCC"> Bacchus attack the attacker has</font>

294
00:13:27,490 --> 00:13:33,100
already captured<font color="#E5E5E5"> an RSA key exchange</font>

295
00:13:31,060 --> 00:13:36,670
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is what you see here so the</font>

296
00:13:33,100 --> 00:13:39,040
attacker just<font color="#E5E5E5"> watches</font><font color="#CCCCCC"> at TLS</font><font color="#E5E5E5"> RSA key</font>

297
00:13:36,670 --> 00:13:41,529
exchange<font color="#E5E5E5"> and records it he does</font><font color="#CCCCCC"> nothing</font>

298
00:13:39,040 --> 00:13:43,750
more<font color="#CCCCCC"> it</font><font color="#E5E5E5"> doesn't change anything</font><font color="#CCCCCC"> then he</font>

299
00:13:41,529 --> 00:13:45,370
uses the<font color="#E5E5E5"> the premaster secret</font><font color="#CCCCCC"> they</font>

300
00:13:43,750 --> 00:13:48,130
<font color="#CCCCCC">encrypt the</font><font color="#E5E5E5"> premaster secret and tries</font>

301
00:13:45,370 --> 00:13:51,480
to decrypt it by<font color="#E5E5E5"> making changes to it</font>

302
00:13:48,130 --> 00:13:55,350
<font color="#E5E5E5">and then sending it over to</font><font color="#CCCCCC"> the server</font>

303
00:13:51,480 --> 00:13:58,630
and the the fundamental<font color="#CCCCCC"> the fundamental</font>

304
00:13:55,350 --> 00:14:01,960
puzzle piece<font color="#CCCCCC"> for publishing bajas attack</font>

305
00:13:58,630 --> 00:14:03,580
is the you need<font color="#E5E5E5"> to have an Oracle which</font>

306
00:14:01,960 --> 00:14:06,610
is in this<font color="#E5E5E5"> case the server which</font>

307
00:14:03,580 --> 00:14:08,620
decrypts<font color="#E5E5E5"> the premaster secret and tells</font>

308
00:14:06,610 --> 00:14:11,380
you whether the<font color="#CCCCCC"> modify premaster secret</font>

309
00:14:08,620 --> 00:14:13,839
<font color="#E5E5E5">has a correct padding so for example it</font>

310
00:14:11,380 --> 00:14:15,520
<font color="#CCCCCC">starts with zero zero zero two there's</font>

311
00:14:13,839 --> 00:14:17,470
there<font color="#CCCCCC"> are other checks but this is the</font>

312
00:14:15,520 --> 00:14:19,839
most important thing and if you<font color="#E5E5E5"> know</font>

313
00:14:17,470 --> 00:14:22,030
this<font color="#E5E5E5"> then you can derive some</font>

314
00:14:19,839 --> 00:14:24,190
information from<font color="#E5E5E5"> this from the clear</font>

315
00:14:22,030 --> 00:14:27,100
text net that just that<font color="#CCCCCC"> just came out of</font>

316
00:14:24,190 --> 00:14:29,620
this decryption because you know that

317
00:14:27,100 --> 00:14:33,820
the Oracle<font color="#CCCCCC"> like</font><font color="#E5E5E5"> the the interval between</font>

318
00:14:29,620 --> 00:14:37,510
<font color="#E5E5E5">this the the plaintext is is between 2b</font>

319
00:14:33,820 --> 00:14:40,270
and 3b<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> 3 comes</font><font color="#E5E5E5"> from</font>

320
00:14:37,510 --> 00:14:44,410
the<font color="#CCCCCC"> zero zero zero two thing down right</font>

321
00:14:40,270 --> 00:14:48,280
<font color="#E5E5E5">so you learned that this is this is this</font>

322
00:14:44,410 --> 00:14:51,130
is the like<font color="#E5E5E5"> the interval between between</font>

323
00:14:48,280 --> 00:14:54,069
which this this clear text is and now

324
00:14:51,130 --> 00:14:56,589
you repeat<font color="#E5E5E5"> this so and with each each</font>

325
00:14:54,070 --> 00:14:58,480
time where the Oracle<font color="#E5E5E5"> says yes this was</font>

326
00:14:56,589 --> 00:15:00,310
the pairing was<font color="#E5E5E5"> correct you learn you</font>

327
00:14:58,480 --> 00:15:02,860
learn a<font color="#E5E5E5"> few more bits of the actual</font>

328
00:15:00,310 --> 00:15:04,660
clear text<font color="#E5E5E5"> so it was called the million</font>

329
00:15:02,860 --> 00:15:06,850
questions<font color="#E5E5E5"> attack so you needed</font><font color="#CCCCCC"> one</font>

330
00:15:04,660 --> 00:15:08,680
<font color="#CCCCCC">million requests in order to find out</font>

331
00:15:06,850 --> 00:15:11,200
the clear text<font color="#CCCCCC"> but in the</font><font color="#E5E5E5"> mean time</font>

332
00:15:08,680 --> 00:15:11,500
between<font color="#E5E5E5"> 1998 and now it's almost 20</font>

333
00:15:11,200 --> 00:15:13,630
years

334
00:15:11,500 --> 00:15:16,120
<font color="#CCCCCC">there were several</font><font color="#E5E5E5"> papers were published</font>

335
00:15:13,630 --> 00:15:18,580
<font color="#E5E5E5">what this is down to a few thousand</font>

336
00:15:16,120 --> 00:15:23,800
requests<font color="#E5E5E5"> depending on what the Oracle</font>

337
00:15:18,580 --> 00:15:26,020
checks and so on its own<font color="#E5E5E5"> okay so we need</font>

338
00:15:23,800 --> 00:15:28,359
to know the life in Bacchus attack we

339
00:15:26,020 --> 00:15:31,180
know that we can construct a padding

340
00:15:28,360 --> 00:15:33,070
Oracle<font color="#E5E5E5"> where we can send an arbitrary</font>

341
00:15:31,180 --> 00:15:35,260
<font color="#CCCCCC">ciphertext and</font><font color="#E5E5E5"> it will tell</font><font color="#CCCCCC"> us whether</font>

342
00:15:33,070 --> 00:15:37,029
the the resulting plaintext was

343
00:15:35,260 --> 00:15:39,520
correctly<font color="#CCCCCC"> padded or not</font><font color="#E5E5E5"> let's imagine</font>

344
00:15:37,029 --> 00:15:41,110
the horror<font color="#E5E5E5"> code which is which is known</font>

345
00:15:39,520 --> 00:15:43,209
right and there's implementations on

346
00:15:41,110 --> 00:15:46,089
github for<font color="#CCCCCC"> Afridi's</font><font color="#E5E5E5"> so this is something</font>

347
00:15:43,209 --> 00:15:48,699
that<font color="#CCCCCC"> just simply works</font><font color="#E5E5E5"> now we want to</font>

348
00:15:46,089 --> 00:15:50,410
<font color="#E5E5E5">introduce a</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> flaw for SSL version</font><font color="#CCCCCC"> 2</font>

349
00:15:48,700 --> 00:15:53,890
and<font color="#CCCCCC"> before we do that I want</font><font color="#E5E5E5"> to show you</font>

350
00:15:50,410 --> 00:15:57,910
how the SSL version 2 protocol<font color="#E5E5E5"> actually</font>

351
00:15:53,890 --> 00:16:00,189
looks like<font color="#CCCCCC"> it looks similar to</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> to</font>

352
00:15:57,910 --> 00:16:04,719
this of TLS<font color="#E5E5E5"> which I just showed</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> just</font>

353
00:16:00,190 --> 00:16:09,250
with a with a few minor<font color="#CCCCCC"> tweaks so with</font>

354
00:16:04,720 --> 00:16:11,260
TLS<font color="#E5E5E5"> you will send the</font><font color="#CCCCCC"> client will send</font>

355
00:16:09,250 --> 00:16:13,930
the list of<font color="#CCCCCC"> supported ciphers to the</font>

356
00:16:11,260 --> 00:16:16,480
server right it will send a<font color="#E5E5E5"> list of</font>

357
00:16:13,930 --> 00:16:19,089
<font color="#CCCCCC">supported ciphers to the server with TLS</font>

358
00:16:16,480 --> 00:16:22,990
the server<font color="#E5E5E5"> just takes one cipher suite</font>

359
00:16:19,089 --> 00:16:27,459
that that he supports and and and begins

360
00:16:22,990 --> 00:16:30,070
<font color="#E5E5E5">with that</font><font color="#CCCCCC"> with SSL version</font><font color="#E5E5E5"> 2</font><font color="#CCCCCC"> it's you</font>

361
00:16:27,459 --> 00:16:31,719
have one more round trip here<font color="#E5E5E5"> so here</font>

362
00:16:30,070 --> 00:16:34,149
you<font color="#E5E5E5"> get a list</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> supported cipher</font>

363
00:16:31,720 --> 00:16:37,270
suites that<font color="#CCCCCC"> the client supports the</font>

364
00:16:34,149 --> 00:16:39,459
server<font color="#CCCCCC"> picks the out of this light</font>

365
00:16:37,270 --> 00:16:42,160
<font color="#CCCCCC">cypher cipher suite list it picks those</font>

366
00:16:39,459 --> 00:16:44,800
which the claw server<font color="#E5E5E5"> also supports but</font>

367
00:16:42,160 --> 00:16:48,040
<font color="#E5E5E5">it's still at least</font><font color="#CCCCCC"> sends it back to the</font>

368
00:16:44,800 --> 00:16:53,099
<font color="#E5E5E5">server I'm sorry to the client and then</font>

369
00:16:48,040 --> 00:16:55,959
the client<font color="#E5E5E5"> selects a cipher suite</font><font color="#CCCCCC"> ok</font>

370
00:16:53,100 --> 00:16:57,550
this year the client master key is

371
00:16:55,959 --> 00:16:58,959
something like the premaster secret it

372
00:16:57,550 --> 00:17:02,260
just has a<font color="#CCCCCC"> different name but the</font>

373
00:16:58,959 --> 00:17:04,208
concept<font color="#E5E5E5"> is very similar</font><font color="#CCCCCC"> then it</font>

374
00:17:02,260 --> 00:17:06,099
generates<font color="#E5E5E5"> the actual session key and so</font>

375
00:17:04,209 --> 00:17:07,870
on and so<font color="#CCCCCC"> on and what is now very</font>

376
00:17:06,099 --> 00:17:11,740
important and this<font color="#CCCCCC"> is a difference</font><font color="#E5E5E5"> to</font>

377
00:17:07,869 --> 00:17:14,948
TLS<font color="#E5E5E5"> the server will immediately send the</font>

378
00:17:11,740 --> 00:17:18,609
<font color="#CCCCCC">so-called</font><font color="#E5E5E5"> serve a verifier message with</font>

379
00:17:14,949 --> 00:17:22,179
TLS<font color="#CCCCCC"> I will just</font><font color="#E5E5E5"> quickly go</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> order</font>

380
00:17:18,609 --> 00:17:23,979
<font color="#E5E5E5">to show you this with TLS you have here</font>

381
00:17:22,179 --> 00:17:26,770
the<font color="#E5E5E5"> client key exchange and then the</font>

382
00:17:23,980 --> 00:17:30,130
client will send a finished message and

383
00:17:26,770 --> 00:17:31,990
this finished message contains some<font color="#CCCCCC"> kind</font>

384
00:17:30,130 --> 00:17:35,679
of message authentication code and it

385
00:17:31,990 --> 00:17:36,460
proves<font color="#CCCCCC"> that it just</font><font color="#E5E5E5"> said it it knows the</font>

386
00:17:35,679 --> 00:17:39,220
<font color="#CCCCCC">plaintext</font>

387
00:17:36,460 --> 00:17:41,650
<font color="#CCCCCC">off the of the premaster secret that it</font>

388
00:17:39,220 --> 00:17:48,190
<font color="#E5E5E5">send so it's some kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> authentication</font>

389
00:17:41,650 --> 00:17:51,640
step which here is not<font color="#E5E5E5"> the</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> so what</font>

390
00:17:48,190 --> 00:17:53,679
this means<font color="#E5E5E5"> is let's assume</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> the</font>

391
00:17:51,640 --> 00:17:56,919
black in Baja attacker and we sent a

392
00:17:53,679 --> 00:17:59,860
modified<font color="#CCCCCC"> cypher text to the server</font><font color="#E5E5E5"> then</font>

393
00:17:56,919 --> 00:18:01,630
we the server will decrypt it<font color="#E5E5E5"> and it</font>

394
00:17:59,860 --> 00:18:03,850
will send us immediately<font color="#E5E5E5"> the server</font>

395
00:18:01,630 --> 00:18:07,960
verify message which is<font color="#E5E5E5"> encrypted with</font>

396
00:18:03,850 --> 00:18:10,360
<font color="#E5E5E5">this session</font><font color="#CCCCCC"> key</font><font color="#E5E5E5"> okay so we just know</font>

397
00:18:07,960 --> 00:18:12,880
<font color="#CCCCCC">that the server verify is</font><font color="#E5E5E5"> encrypted with</font>

398
00:18:10,360 --> 00:18:15,549
this with<font color="#CCCCCC"> this</font><font color="#E5E5E5"> session key we don't know</font>

399
00:18:12,880 --> 00:18:16,960
the key<font color="#E5E5E5"> but we know the plain text</font><font color="#CCCCCC"> so</font>

400
00:18:15,549 --> 00:18:19,240
the plain<font color="#E5E5E5"> text of server verify is</font>

401
00:18:16,960 --> 00:18:21,669
actually this challenge<font color="#E5E5E5"> that was sent by</font>

402
00:18:19,240 --> 00:18:24,309
<font color="#E5E5E5">the client</font><font color="#CCCCCC"> and that's a server</font>

403
00:18:21,669 --> 00:18:27,600
authentication step so the server here

404
00:18:24,309 --> 00:18:30,549
proves that it could successfully

405
00:18:27,600 --> 00:18:32,830
decrypt the session key the premaster

406
00:18:30,549 --> 00:18:35,379
secret if you want then construct<font color="#E5E5E5"> the</font>

407
00:18:32,830 --> 00:18:38,020
session key from it<font color="#E5E5E5"> then encrypt this</font>

408
00:18:35,380 --> 00:18:41,110
challenge the client<font color="#CCCCCC"> just sent and yeah</font>

409
00:18:38,020 --> 00:18:42,070
that it can do that and this<font color="#E5E5E5"> is very</font>

410
00:18:41,110 --> 00:18:46,178
<font color="#E5E5E5">this is some very interesting</font>

411
00:18:42,070 --> 00:18:48,220
<font color="#E5E5E5">information</font><font color="#CCCCCC"> right let's just keep this</font>

412
00:18:46,179 --> 00:18:50,860
<font color="#CCCCCC">in mind</font><font color="#E5E5E5"> there's one more puzzle piece</font>

413
00:18:48,220 --> 00:18:52,780
and and I<font color="#E5E5E5"> will soon put them together</font>

414
00:18:50,860 --> 00:18:54,428
and then then I hope you will understand

415
00:18:52,780 --> 00:18:56,470
why we<font color="#CCCCCC"> need these three puzzle pieces</font>

416
00:18:54,429 --> 00:18:58,950
<font color="#CCCCCC">the third puzzle piece that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> need in</font>

417
00:18:56,470 --> 00:19:04,360
order<font color="#E5E5E5"> to make a practical attack is</font>

418
00:18:58,950 --> 00:19:08,020
these export ciphers with 40 bit<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

419
00:19:04,360 --> 00:19:12,100
how a SSL and TLS cipher suite<font color="#E5E5E5"> looks</font>

420
00:19:08,020 --> 00:19:15,730
like so<font color="#CCCCCC"> you from</font><font color="#E5E5E5"> this here you learn</font>

421
00:19:12,100 --> 00:19:17,889
that the<font color="#CCCCCC"> rc2 cipher will be used which</font>

422
00:19:15,730 --> 00:19:20,880
is like the little<font color="#E5E5E5"> brother of rc4 it's a</font>

423
00:19:17,890 --> 00:19:25,360
block cipher not a stream cipher<font color="#E5E5E5"> it uses</font>

424
00:19:20,880 --> 00:19:27,820
<font color="#E5E5E5">128 bits in CBC mode of operation but</font>

425
00:19:25,360 --> 00:19:31,330
<font color="#E5E5E5">now something here is happens</font><font color="#CCCCCC"> it tells</font>

426
00:19:27,820 --> 00:19:35,110
you okay there's export<font color="#CCCCCC"> 40 an export 40</font>

427
00:19:31,330 --> 00:19:38,980
means<font color="#E5E5E5"> that out of</font><font color="#CCCCCC"> this 128 bits</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> 40</font>

428
00:19:35,110 --> 00:19:41,830
are secret<font color="#E5E5E5"> right I told you that the</font>

429
00:19:38,980 --> 00:19:44,530
session key this<font color="#CCCCCC"> premaster secret</font><font color="#E5E5E5"> will</font>

430
00:19:41,830 --> 00:19:48,580
<font color="#E5E5E5">be sent by the client encrypted to the</font>

431
00:19:44,530 --> 00:19:51,158
server<font color="#E5E5E5"> and usually</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> would be 128 bit</font>

432
00:19:48,580 --> 00:19:52,250
would would be<font color="#CCCCCC"> encrypted sent to</font><font color="#E5E5E5"> the</font>

433
00:19:51,159 --> 00:19:55,060
server but in

434
00:19:52,250 --> 00:19:58,550
case when you have export ciphers only

435
00:19:55,060 --> 00:20:02,149
40<font color="#CCCCCC"> of those so eighty-eight</font><font color="#E5E5E5"> bit are sent</font>

436
00:19:58,550 --> 00:20:04,610
in a clear and<font color="#E5E5E5"> it looks like this in SSL</font>

437
00:20:02,150 --> 00:20:06,710
speak the premaster secret is here

438
00:20:04,610 --> 00:20:10,040
<font color="#CCCCCC">actually the master</font><font color="#E5E5E5"> secret</font><font color="#CCCCCC"> m'kay and</font>

439
00:20:06,710 --> 00:20:14,690
it's<font color="#E5E5E5"> simply a concatenation</font><font color="#CCCCCC"> so you have</font>

440
00:20:10,040 --> 00:20:19,190
with 440 440 bit ciphers<font color="#CCCCCC"> it would mean</font>

441
00:20:14,690 --> 00:20:21,500
that<font color="#E5E5E5"> m'kay clear is</font><font color="#CCCCCC"> 88 bits long and</font><font color="#E5E5E5"> MK</font>

442
00:20:19,190 --> 00:20:24,710
secret is 40 bit long<font color="#E5E5E5"> and both are</font>

443
00:20:21,500 --> 00:20:27,440
<font color="#CCCCCC">concatenated</font><font color="#E5E5E5"> but the first this one are</font>

444
00:20:24,710 --> 00:20:30,410
sent in a<font color="#E5E5E5"> clear and only those are are</font>

445
00:20:27,440 --> 00:20:32,480
are encrypted and sent over<font color="#CCCCCC"> to the to</font>

446
00:20:30,410 --> 00:20:34,520
the server<font color="#E5E5E5"> so most of the key is</font>

447
00:20:32,480 --> 00:20:36,500
actually<font color="#E5E5E5"> sent in clear okay and</font>

448
00:20:34,520 --> 00:20:39,590
therefore much more<font color="#E5E5E5"> easy to break and</font>

449
00:20:36,500 --> 00:20:42,920
<font color="#CCCCCC">now I hope it makes sense</font><font color="#E5E5E5"> like why</font><font color="#CCCCCC"> the</font>

450
00:20:39,590 --> 00:20:46,699
government did this<font color="#E5E5E5"> okay now</font>

451
00:20:42,920 --> 00:20:49,580
SSL also supports non export ciphers and

452
00:20:46,700 --> 00:20:52,160
<font color="#CCCCCC">there the</font><font color="#E5E5E5"> length of</font><font color="#CCCCCC"> MK clea is simply 0</font>

453
00:20:49,580 --> 00:20:55,070
so they<font color="#E5E5E5"> simply this is simply an</font><font color="#CCCCCC"> empty</font>

454
00:20:52,160 --> 00:20:56,840
string<font color="#CCCCCC"> okay nothing of the key will be</font>

455
00:20:55,070 --> 00:21:05,540
<font color="#E5E5E5">sent in a clear therefore</font><font color="#CCCCCC"> it has</font><font color="#E5E5E5"> keith</font>

456
00:20:56,840 --> 00:21:06,409
drinks<font color="#E5E5E5"> 138 bit in this case okay okay so</font>

457
00:21:05,540 --> 00:21:09,889
this is good

458
00:21:06,410 --> 00:21:12,020
so now we have we we don't<font color="#E5E5E5"> and on this</font>

459
00:21:09,890 --> 00:21:14,750
time we don't<font color="#E5E5E5"> yet know whether the</font>

460
00:21:12,020 --> 00:21:16,639
padding that of the master key that<font color="#CCCCCC"> we</font>

461
00:21:14,750 --> 00:21:19,160
just sent<font color="#CCCCCC"> over to the</font><font color="#E5E5E5"> server was correct</font>

462
00:21:16,640 --> 00:21:21,680
<font color="#E5E5E5">or not we don't know this yet just we</font>

463
00:21:19,160 --> 00:21:23,990
know we<font color="#E5E5E5"> net the attacker now knows the</font>

464
00:21:21,680 --> 00:21:27,310
plaintext<font color="#E5E5E5"> because it was this random</font>

465
00:21:23,990 --> 00:21:29,630
random challenge the client was sent and

466
00:21:27,310 --> 00:21:32,149
he knows the plaintext he knows the

467
00:21:29,630 --> 00:21:34,520
<font color="#CCCCCC">cipher text but he wants the key</font><font color="#E5E5E5"> when he</font>

468
00:21:32,150 --> 00:21:36,620
knows the key he learned something<font color="#E5E5E5"> about</font>

469
00:21:34,520 --> 00:21:40,190
he learned something<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the premaster</font>

470
00:21:36,620 --> 00:21:42,350
secret and<font color="#E5E5E5"> of the panic okay the</font>

471
00:21:40,190 --> 00:21:44,750
important thing is we can find out the

472
00:21:42,350 --> 00:21:47,360
key for export ciphers because it's only

473
00:21:44,750 --> 00:21:49,760
40 bit<font color="#E5E5E5"> and 40 bit is something which we</font>

474
00:21:47,360 --> 00:21:52,310
<font color="#E5E5E5">can put force on</font><font color="#CCCCCC"> uncommon hardware</font><font color="#E5E5E5"> right</font>

475
00:21:49,760 --> 00:21:54,230
<font color="#CCCCCC">I will dive deeper into this what what</font>

476
00:21:52,310 --> 00:21:55,520
hardware<font color="#CCCCCC"> we used but for a bit is</font>

477
00:21:54,230 --> 00:21:58,130
something that we that<font color="#CCCCCC"> we can indeed</font>

478
00:21:55,520 --> 00:22:01,010
<font color="#CCCCCC">brute-force</font><font color="#E5E5E5"> today okay so</font><font color="#CCCCCC"> we can find</font>

479
00:21:58,130 --> 00:22:02,540
out the<font color="#E5E5E5"> key which is very important and</font>

480
00:22:01,010 --> 00:22:05,520
<font color="#E5E5E5">why this is important I hope this</font>

481
00:22:02,540 --> 00:22:08,760
becomes<font color="#CCCCCC"> clear</font><font color="#E5E5E5"> right here</font>

482
00:22:05,520 --> 00:22:11,400
so<font color="#CCCCCC"> yuk-yuk shrink in the</font><font color="#E5E5E5"> keynote already</font>

483
00:22:08,760 --> 00:22:13,950
said<font color="#CCCCCC"> dyson bajas attack was never really</font>

484
00:22:11,400 --> 00:22:16,170
fixed in the TLS protocol<font color="#E5E5E5"> there's more</font>

485
00:22:13,950 --> 00:22:19,470
like in<font color="#E5E5E5"> the RFC's they</font><font color="#CCCCCC"> give an</font>

486
00:22:16,170 --> 00:22:24,809
implementation<font color="#E5E5E5"> advice they unify the the</font>

487
00:22:19,470 --> 00:22:27,059
error messages<font color="#E5E5E5"> so a concurrent a current</font>

488
00:22:24,809 --> 00:22:29,460
TLS server will<font color="#CCCCCC"> not tell you whether the</font>

489
00:22:27,059 --> 00:22:31,290
padding was was wrong or not<font color="#E5E5E5"> it will</font>

490
00:22:29,460 --> 00:22:33,510
just<font color="#CCCCCC"> simply tell you</font><font color="#E5E5E5"> something went</font>

491
00:22:31,290 --> 00:22:35,220
wrong<font color="#E5E5E5"> right so something</font><font color="#CCCCCC"> went wrong and</font>

492
00:22:33,510 --> 00:22:38,520
<font color="#CCCCCC">we don't</font><font color="#E5E5E5"> know whether it was pairing or</font>

493
00:22:35,220 --> 00:22:41,340
it was<font color="#CCCCCC"> something difficult</font><font color="#E5E5E5"> was something</font>

494
00:22:38,520 --> 00:22:45,450
<font color="#E5E5E5">different</font><font color="#CCCCCC"> and what they do then is</font>

495
00:22:41,340 --> 00:22:48,059
actually<font color="#CCCCCC"> in case that the the padding</font>

496
00:22:45,450 --> 00:22:50,220
<font color="#CCCCCC">was not valid</font><font color="#E5E5E5"> they generate a random</font>

497
00:22:48,059 --> 00:22:53,389
<font color="#CCCCCC">premaster secret and just continue in</font>

498
00:22:50,220 --> 00:22:56,520
the inner<font color="#E5E5E5"> flow the reason for this is</font>

499
00:22:53,390 --> 00:22:58,110
they want<font color="#E5E5E5"> to provoke this leads to the</font>

500
00:22:56,520 --> 00:23:00,120
<font color="#E5E5E5">fact that client and server will have</font>

501
00:22:58,110 --> 00:23:02,129
<font color="#E5E5E5">different session keys and then they try</font>

502
00:23:00,120 --> 00:23:04,709
<font color="#E5E5E5">to speak</font><font color="#CCCCCC"> to each</font><font color="#E5E5E5"> other and they</font><font color="#CCCCCC"> get</font>

503
00:23:02,130 --> 00:23:08,190
garbage and and then this this general

504
00:23:04,710 --> 00:23:11,130
<font color="#E5E5E5">error comes out okay TLS 1.0 says in</font>

505
00:23:08,190 --> 00:23:13,050
case the<font color="#CCCCCC"> pairing is not correct for</font>

506
00:23:11,130 --> 00:23:15,750
example it<font color="#E5E5E5"> doesn't start</font><font color="#CCCCCC"> with zero zero</font>

507
00:23:13,050 --> 00:23:18,030
<font color="#CCCCCC">zero two</font><font color="#E5E5E5"> then we generate a random</font>

508
00:23:15,750 --> 00:23:20,550
<font color="#CCCCCC">premaster secret</font><font color="#E5E5E5"> and proceed with</font><font color="#CCCCCC"> this</font>

509
00:23:18,030 --> 00:23:24,960
random<font color="#CCCCCC"> premaster secret</font><font color="#E5E5E5"> and then make an</font>

510
00:23:20,550 --> 00:23:26,520
error later in the in the<font color="#E5E5E5"> handshake this</font>

511
00:23:24,960 --> 00:23:30,630
is a very interesting<font color="#E5E5E5"> timing leak which</font>

512
00:23:26,520 --> 00:23:32,910
we exploited in our 2014<font color="#CCCCCC"> paper because</font>

513
00:23:30,630 --> 00:23:34,830
when we make<font color="#E5E5E5"> very exact timing</font>

514
00:23:32,910 --> 00:23:37,350
measurements<font color="#E5E5E5"> and we sent over</font><font color="#CCCCCC"> a</font>

515
00:23:34,830 --> 00:23:39,389
<font color="#E5E5E5">ciphertext</font><font color="#CCCCCC"> and if the padding was not</font>

516
00:23:37,350 --> 00:23:41,520
correct<font color="#E5E5E5"> it will generate a</font><font color="#CCCCCC"> premaster</font>

517
00:23:39,390 --> 00:23:43,470
<font color="#CCCCCC">secret</font><font color="#E5E5E5"> which takes a few microseconds</font>

518
00:23:41,520 --> 00:23:45,420
<font color="#E5E5E5">which we can which we can measure and</font>

519
00:23:43,470 --> 00:23:48,450
then from this we<font color="#CCCCCC"> get</font><font color="#E5E5E5"> a we get a blush</font>

520
00:23:45,420 --> 00:23:52,170
in the<font color="#CCCCCC"> hopper go they fix this in TLS</font>

521
00:23:48,450 --> 00:23:55,470
1.2<font color="#E5E5E5"> by saying we always generate a</font>

522
00:23:52,170 --> 00:23:57,960
random<font color="#CCCCCC"> premaster secret</font><font color="#E5E5E5"> and only</font><font color="#CCCCCC"> if the</font>

523
00:23:55,470 --> 00:24:00,630
decrypt the premaster secret was was not

524
00:23:57,960 --> 00:24:03,000
<font color="#E5E5E5">correctly padded we just</font><font color="#CCCCCC"> use this so</font>

525
00:24:00,630 --> 00:24:05,070
there's a more like<font color="#E5E5E5"> an assignment but</font>

526
00:24:03,000 --> 00:24:09,210
the<font color="#E5E5E5"> actually generation of the premaster</font>

527
00:24:05,070 --> 00:24:11,490
secret<font color="#E5E5E5"> is done always right which means</font>

528
00:24:09,210 --> 00:24:14,370
<font color="#E5E5E5">the timing leak is closed but one thing</font>

529
00:24:11,490 --> 00:24:17,850
<font color="#CCCCCC">that is very</font><font color="#E5E5E5"> interesting here in</font><font color="#CCCCCC"> darling</font>

530
00:24:14,370 --> 00:24:18,789
pairing always results results<font color="#E5E5E5"> in random</font>

531
00:24:17,850 --> 00:24:22,178
<font color="#CCCCCC">premaster secret</font>

532
00:24:18,789 --> 00:24:26,369
<font color="#E5E5E5">okay and this hopefully</font><font color="#CCCCCC"> makes sense</font><font color="#E5E5E5"> from</font>

533
00:24:22,179 --> 00:24:28,839
this slide so<font color="#E5E5E5"> we don't send the same</font>

534
00:24:26,369 --> 00:24:32,408
<font color="#E5E5E5">encrypted</font><font color="#CCCCCC"> premaster secret to the server</font>

535
00:24:28,839 --> 00:24:34,089
once<font color="#E5E5E5"> but twice okay so we sent the same</font>

536
00:24:32,409 --> 00:24:36,279
encrypted<font color="#CCCCCC"> prima a previous the secret</font>

537
00:24:34,089 --> 00:24:38,979
<font color="#E5E5E5">that we now want to break twice to the</font>

538
00:24:36,279 --> 00:24:42,519
server<font color="#E5E5E5"> now under the condition that the</font>

539
00:24:38,979 --> 00:24:45,969
premaster secret is valid both keys of

540
00:24:42,519 --> 00:24:48,399
the server verify will be the same

541
00:24:45,969 --> 00:24:49,029
because<font color="#E5E5E5"> no random</font><font color="#CCCCCC"> premaster secret was</font>

542
00:24:48,399 --> 00:24:51,189
chosen

543
00:24:49,029 --> 00:24:52,869
<font color="#E5E5E5">okay the padding was correct</font><font color="#CCCCCC"> so it</font>

544
00:24:51,190 --> 00:24:55,209
extract that the<font color="#E5E5E5"> encrypted</font><font color="#CCCCCC"> premaster</font>

545
00:24:52,869 --> 00:24:55,809
<font color="#CCCCCC">secret</font><font color="#E5E5E5"> and went on with it in in the</font>

546
00:24:55,209 --> 00:24:59,469
<font color="#E5E5E5">handshake</font>

547
00:24:55,809 --> 00:25:01,989
if the premaster secret is invalid<font color="#E5E5E5"> then</font>

548
00:24:59,469 --> 00:25:04,449
we got to<font color="#E5E5E5"> survive every file and both</font>

549
00:25:01,989 --> 00:25:07,479
server verify were done with a different

550
00:25:04,449 --> 00:25:09,669
key<font color="#CCCCCC"> and that we can find out its 40-bit</font>

551
00:25:07,479 --> 00:25:13,179
<font color="#E5E5E5">right so we</font><font color="#CCCCCC"> can simply</font><font color="#E5E5E5"> brute force the</font>

552
00:25:09,669 --> 00:25:17,199
<font color="#CCCCCC">forty bit and from</font><font color="#E5E5E5"> this we get a</font><font color="#CCCCCC"> blank</font>

553
00:25:13,179 --> 00:25:19,829
in<font color="#E5E5E5"> Baja Oracle</font><font color="#CCCCCC"> okay so we do</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> to</font>

554
00:25:17,199 --> 00:25:22,269
repeat<font color="#CCCCCC"> it once more we sent the same</font>

555
00:25:19,829 --> 00:25:25,029
<font color="#CCCCCC">encrypted premaster secret</font><font color="#E5E5E5"> twice to the</font>

556
00:25:22,269 --> 00:25:27,009
<font color="#CCCCCC">same server</font><font color="#E5E5E5"> we get to server verifies</font>

557
00:25:25,029 --> 00:25:29,949
and if both server verifies were

558
00:25:27,009 --> 00:25:30,519
constructed with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> same with the same</font>

559
00:25:29,949 --> 00:25:33,489
key

560
00:25:30,519 --> 00:25:35,259
we know that the<font color="#E5E5E5"> pms was valid</font><font color="#CCCCCC"> otherwise</font>

561
00:25:33,489 --> 00:25:38,289
if two keys were used for the server

562
00:25:35,259 --> 00:25:40,659
verify we know that the<font color="#E5E5E5"> pms was invalid</font>

563
00:25:38,289 --> 00:25:43,509
<font color="#CCCCCC">because we have a random premaster</font>

564
00:25:40,659 --> 00:25:46,929
<font color="#CCCCCC">secret</font><font color="#E5E5E5"> okay so this is nice this</font><font color="#CCCCCC"> is a</font>

565
00:25:43,509 --> 00:25:49,029
nice observation<font color="#CCCCCC"> that is located only in</font>

566
00:25:46,929 --> 00:25:51,519
<font color="#E5E5E5">SSL version</font><font color="#CCCCCC"> 2 and it's actually</font><font color="#E5E5E5"> applied</font>

567
00:25:49,029 --> 00:25:56,799
<font color="#E5E5E5">in Baja Oracle that</font><font color="#CCCCCC"> are so far so</font><font color="#E5E5E5"> far</font>

568
00:25:51,519 --> 00:25:59,379
unknown<font color="#CCCCCC"> okay just a few</font><font color="#E5E5E5"> numbers that we</font>

569
00:25:56,799 --> 00:26:00,158
give here<font color="#E5E5E5"> in order that Brown really</font>

570
00:25:59,379 --> 00:26:03,399
works

571
00:26:00,159 --> 00:26:06,039
we need to collect 1000 TL s<font color="#CCCCCC"> handshapes</font>

572
00:26:03,399 --> 00:26:07,629
<font color="#E5E5E5">and we can only break one of them so</font>

573
00:26:06,039 --> 00:26:10,949
approach we need<font color="#CCCCCC"> to collect</font>

574
00:26:07,629 --> 00:26:14,918
approximately<font color="#E5E5E5"> 1000 and this one there's</font>

575
00:26:10,949 --> 00:26:17,559
approximately<font color="#E5E5E5"> one handshake in there</font>

576
00:26:14,919 --> 00:26:19,029
that we<font color="#E5E5E5"> can that we</font><font color="#CCCCCC"> can break</font><font color="#E5E5E5"> so it's</font>

577
00:26:17,559 --> 00:26:21,579
it's<font color="#E5E5E5"> not that we can break each and</font>

578
00:26:19,029 --> 00:26:24,639
<font color="#E5E5E5">every one we can only break one of 1 out</font>

579
00:26:21,579 --> 00:26:26,739
of<font color="#E5E5E5"> 1000 but this basically only means</font>

580
00:26:24,639 --> 00:26:30,069
that<font color="#CCCCCC"> we have to watch the the victim</font>

581
00:26:26,739 --> 00:26:31,590
<font color="#E5E5E5">long enough</font><font color="#CCCCCC"> okay for example if you have</font>

582
00:26:30,069 --> 00:26:34,889
an email<font color="#CCCCCC"> program</font>

583
00:26:31,590 --> 00:26:36,570
we'll retrieve your email over TLS we

584
00:26:34,890 --> 00:26:39,480
just have to wait for<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> days until</font>

585
00:26:36,570 --> 00:26:41,158
right because it will it will<font color="#E5E5E5"> regularly</font>

586
00:26:39,480 --> 00:26:43,770
check the<font color="#E5E5E5"> email make</font><font color="#CCCCCC"> the you TLS</font>

587
00:26:41,159 --> 00:26:45,990
connections and so on<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> on then we</font>

588
00:26:43,770 --> 00:26:47,879
need<font color="#E5E5E5"> to perform around 40,000 SSL</font>

589
00:26:45,990 --> 00:26:49,710
version<font color="#CCCCCC"> 2 handshakes</font><font color="#E5E5E5"> which is not much</font>

590
00:26:47,880 --> 00:26:52,200
you can done you can do this in a few

591
00:26:49,710 --> 00:26:55,200
seconds actually<font color="#E5E5E5"> and now comes the most</font>

592
00:26:52,200 --> 00:26:57,870
the<font color="#E5E5E5"> the very expensive part we need to</font>

593
00:26:55,200 --> 00:27:01,260
perform<font color="#E5E5E5"> approximately 2 to the 50 export</font>

594
00:26:57,870 --> 00:27:05,070
<font color="#E5E5E5">cipher encryptions right and</font><font color="#CCCCCC"> 2 to</font><font color="#E5E5E5"> the 50</font>

595
00:27:01,260 --> 00:27:07,799
<font color="#E5E5E5">is actually 2 to</font><font color="#CCCCCC"> the 40 but</font><font color="#E5E5E5"> 1000 times</font>

596
00:27:05,070 --> 00:27:11,700
<font color="#E5E5E5">so we have like approximately</font><font color="#CCCCCC"> 1000 TLS</font>

597
00:27:07,799 --> 00:27:13,770
handshakes and and yeah so the overall

598
00:27:11,700 --> 00:27:17,100
complexity is 2 to the<font color="#E5E5E5"> 50 which</font><font color="#CCCCCC"> is</font>

599
00:27:13,770 --> 00:27:19,309
involved<font color="#CCCCCC"> but</font><font color="#E5E5E5"> I'll get into this a little</font>

600
00:27:17,100 --> 00:27:19,309
later

601
00:27:19,760 --> 00:27:28,590
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> so let's speak about shared keys</font>

602
00:27:23,159 --> 00:27:32,960
<font color="#E5E5E5">among SSL versions so basically TLS</font>

603
00:27:28,590 --> 00:27:35,220
neither TLS nor SSL offers a way of

604
00:27:32,960 --> 00:27:37,470
<font color="#E5E5E5">where you can hand</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> different</font>

605
00:27:35,220 --> 00:27:40,380
certificates<font color="#E5E5E5"> depending on</font><font color="#CCCCCC"> as on the TLS</font>

606
00:27:37,470 --> 00:27:43,289
version<font color="#E5E5E5"> so there's no possibility to say</font>

607
00:27:40,380 --> 00:27:45,779
<font color="#E5E5E5">I want to a for TLS 1.0 I want this</font>

608
00:27:43,289 --> 00:27:48,320
<font color="#E5E5E5">certificate</font><font color="#CCCCCC"> and if the client</font><font color="#E5E5E5"> speaks TLS</font>

609
00:27:45,779 --> 00:27:52,140
1.2<font color="#E5E5E5"> for example I want to use another</font>

610
00:27:48,320 --> 00:27:54,809
<font color="#E5E5E5">another certificate</font><font color="#CCCCCC"> so basically the</font>

611
00:27:52,140 --> 00:27:58,950
<font color="#CCCCCC">same certificate and the same</font><font color="#E5E5E5"> RSA key</font>

612
00:27:54,809 --> 00:28:02,220
material is as used for<font color="#CCCCCC"> all SSL and TLS</font>

613
00:27:58,950 --> 00:28:05,070
versions right and and<font color="#E5E5E5"> basically you see</font>

614
00:28:02,220 --> 00:28:07,169
this you see this<font color="#CCCCCC"> in theater</font><font color="#E5E5E5"> that there</font>

615
00:28:05,070 --> 00:28:09,389
are many<font color="#E5E5E5"> systems on the Internet</font>

616
00:28:07,169 --> 00:28:13,740
we see they have SSL version<font color="#E5E5E5"> 2 enabled</font>

617
00:28:09,390 --> 00:28:17,100
<font color="#E5E5E5">app</font><font color="#CCCCCC"> to TLS 1.2 right and the same is</font>

618
00:28:13,740 --> 00:28:21,210
valid for different protocols<font color="#E5E5E5"> so SMTP</font>

619
00:28:17,100 --> 00:28:23,399
<font color="#CCCCCC">I'm a pop3</font><font color="#E5E5E5"> HTTP XMPP for example they</font>

620
00:28:21,210 --> 00:28:27,960
<font color="#E5E5E5">all use or or have the capability of</font>

621
00:28:23,399 --> 00:28:29,939
<font color="#E5E5E5">using TLS and when they use like when</font>

622
00:28:27,960 --> 00:28:32,490
you have one<font color="#E5E5E5"> system where the email</font>

623
00:28:29,940 --> 00:28:36,149
server<font color="#CCCCCC"> and the HTTP server uses the same</font>

624
00:28:32,490 --> 00:28:38,940
RSA keys and we can abuse<font color="#E5E5E5"> this in a very</font>

625
00:28:36,149 --> 00:28:42,120
interesting way<font color="#CCCCCC"> because we can say if</font><font color="#E5E5E5"> 10</font>

626
00:28:38,940 --> 00:28:44,840
systems share one certificate<font color="#E5E5E5"> and share</font>

627
00:28:42,120 --> 00:28:47,178
the same RSA key material and

628
00:28:44,840 --> 00:28:49,340
only one of<font color="#CCCCCC"> those 10 systems is</font>

629
00:28:47,179 --> 00:28:51,919
vulnerable to drown<font color="#CCCCCC"> then we can break</font>

630
00:28:49,340 --> 00:28:54,908
connections<font color="#E5E5E5"> to all</font><font color="#CCCCCC"> 10 of</font><font color="#E5E5E5"> these systems</font>

631
00:28:51,919 --> 00:28:57,289
because<font color="#E5E5E5"> they use the same key material</font>

632
00:28:54,909 --> 00:29:00,710
<font color="#CCCCCC">okay and this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> really devastating I</font>

633
00:28:57,289 --> 00:29:03,320
have this<font color="#E5E5E5"> is just</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> a picture where</font>

634
00:29:00,710 --> 00:29:05,480
where I<font color="#E5E5E5"> just want to tell you this so</font>

635
00:29:03,320 --> 00:29:07,970
let's assume you have<font color="#E5E5E5"> like a TLS</font>

636
00:29:05,480 --> 00:29:10,580
connection to a single server that is

637
00:29:07,970 --> 00:29:12,140
<font color="#CCCCCC">vulnerable to drown because it supports</font>

638
00:29:10,580 --> 00:29:14,899
SSL<font color="#CCCCCC"> Goshen to then you can obviously</font>

639
00:29:12,140 --> 00:29:17,630
<font color="#E5E5E5">break it you can obviously break this</font>

640
00:29:14,900 --> 00:29:20,659
TLS connection but what I'm saying here

641
00:29:17,630 --> 00:29:23,419
<font color="#E5E5E5">and the point I'm trying to make is here</font>

642
00:29:20,659 --> 00:29:25,880
the our attacker observes<font color="#E5E5E5"> a TLS</font>

643
00:29:23,419 --> 00:29:27,679
connection to one server and then

644
00:29:25,880 --> 00:29:29,990
there's another server both have the

645
00:29:27,679 --> 00:29:33,409
same<font color="#E5E5E5"> RSA keys the same certificates and</font>

646
00:29:29,990 --> 00:29:36,140
only this<font color="#E5E5E5"> one uses SSL version</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> then</font>

647
00:29:33,409 --> 00:29:38,779
you can use<font color="#CCCCCC"> then</font><font color="#E5E5E5"> you can break this TLS</font>

648
00:29:36,140 --> 00:29:40,970
connection to this system by making<font color="#CCCCCC"> the</font>

649
00:29:38,779 --> 00:29:42,620
drawn attack<font color="#E5E5E5"> to this system which is</font>

650
00:29:40,970 --> 00:29:44,720
<font color="#CCCCCC">quite which is quite strange you can</font>

651
00:29:42,620 --> 00:29:46,729
even load<font color="#CCCCCC"> balance right</font><font color="#E5E5E5"> so when you have</font>

652
00:29:44,720 --> 00:29:50,120
like several thousand systems using the

653
00:29:46,730 --> 00:29:52,880
<font color="#E5E5E5">same certificate</font><font color="#CCCCCC"> and what</font><font color="#E5E5E5"> I think</font><font color="#CCCCCC"> they</font>

654
00:29:50,120 --> 00:29:54,949
the top sister<font color="#E5E5E5"> the top certificate that</font>

655
00:29:52,880 --> 00:29:57,649
was vulnerable to<font color="#E5E5E5"> drown was used by a</font>

656
00:29:54,950 --> 00:29:59,149
<font color="#E5E5E5">half a million systems right there's no</font>

657
00:29:57,649 --> 00:30:00,918
you can you can load balance the attack

658
00:29:59,149 --> 00:30:02,809
<font color="#E5E5E5">right when you when you don't want to</font>

659
00:30:00,919 --> 00:30:04,220
spend<font color="#E5E5E5"> forty thousand connections to a</font>

660
00:30:02,809 --> 00:30:06,529
single system<font color="#E5E5E5"> you can load balancer</font><font color="#CCCCCC"> to</font>

661
00:30:04,220 --> 00:30:10,549
<font color="#CCCCCC">two all the others they just have to use</font>

662
00:30:06,529 --> 00:30:12,350
the same certificate<font color="#E5E5E5"> okay so so we</font>

663
00:30:10,549 --> 00:30:16,789
measure this<font color="#E5E5E5"> we did some there's some</font>

664
00:30:12,350 --> 00:30:18,620
<font color="#CCCCCC">scanning and so how you read this table</font>

665
00:30:16,789 --> 00:30:20,480
is it looks<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> so you here you</font>

666
00:30:18,620 --> 00:30:22,580
have the<font color="#E5E5E5"> ports on the x-axis</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> here</font>

667
00:30:20,480 --> 00:30:26,899
you have the ports on the<font color="#E5E5E5"> only y-axis</font>

668
00:30:22,580 --> 00:30:28,820
<font color="#E5E5E5">and you read it like this</font><font color="#CCCCCC"> so of</font><font color="#E5E5E5"> all the</font>

669
00:30:26,899 --> 00:30:33,709
certificates<font color="#E5E5E5"> that we saw on the internet</font>

670
00:30:28,820 --> 00:30:37,039
on port 25 18% of those<font color="#CCCCCC"> certificates are</font>

671
00:30:33,710 --> 00:30:39,289
also used on<font color="#E5E5E5"> HTTPS and now that's an</font>

672
00:30:37,039 --> 00:30:42,620
important<font color="#E5E5E5"> point because I just told you</font>

673
00:30:39,289 --> 00:30:45,649
<font color="#E5E5E5">SMTP that the SSL configuration of SMTP</font>

674
00:30:42,620 --> 00:30:47,510
<font color="#CCCCCC">is much worse than those of HTTP I</font>

675
00:30:45,649 --> 00:30:50,449
<font color="#CCCCCC">people all people all the people cooking</font>

676
00:30:47,510 --> 00:30:52,640
<font color="#E5E5E5">look</font><font color="#CCCCCC"> onload look on HTTP but when they</font>

677
00:30:50,450 --> 00:30:55,640
use the same certificates<font color="#E5E5E5"> but different</font>

678
00:30:52,640 --> 00:30:58,580
configurations<font color="#E5E5E5"> then we can break HTTP</font>

679
00:30:55,640 --> 00:31:01,070
connections by<font color="#E5E5E5"> doing the drone attack</font>

680
00:30:58,580 --> 00:31:05,060
<font color="#CCCCCC">SMTP for</font><font color="#E5E5E5"> example under</font><font color="#CCCCCC"> the condition</font>

681
00:31:01,070 --> 00:31:07,399
that<font color="#E5E5E5"> I use the same certificate okay now</font>

682
00:31:05,060 --> 00:31:12,320
and<font color="#E5E5E5"> the increase that we get from this</font>

683
00:31:07,400 --> 00:31:16,220
is really<font color="#CCCCCC"> enormous</font><font color="#E5E5E5"> so we just learned a</font>

684
00:31:12,320 --> 00:31:18,980
few slides earlier<font color="#E5E5E5"> that 28% of all SMTP</font>

685
00:31:16,220 --> 00:31:22,070
servers are vulnerable to<font color="#CCCCCC"> drown</font><font color="#E5E5E5"> but when</font>

686
00:31:18,980 --> 00:31:25,330
we take into<font color="#CCCCCC"> account</font><font color="#E5E5E5"> all the systems</font>

687
00:31:22,070 --> 00:31:28,580
that<font color="#E5E5E5"> run a certificate that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> somehow</font>

688
00:31:25,330 --> 00:31:34,010
somewhere on the<font color="#CCCCCC"> Internet exposed by our</font>

689
00:31:28,580 --> 00:31:36,439
a yia<font color="#E5E5E5"> of</font><font color="#CCCCCC"> drown vulnerable server then</font>

690
00:31:34,010 --> 00:31:38,960
this number<font color="#E5E5E5"> rises significantly and in</font>

691
00:31:36,440 --> 00:31:41,630
this case here it was<font color="#CCCCCC"> almost 1</font><font color="#E5E5E5"> million</font>

692
00:31:38,960 --> 00:31:46,010
and<font color="#E5E5E5"> it</font><font color="#CCCCCC"> rises to</font><font color="#E5E5E5"> 1.7 million</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> there's</font><font color="#CCCCCC"> a</font>

693
00:31:41,630 --> 00:31:47,840
<font color="#E5E5E5">huge increase that we just have by by</font>

694
00:31:46,010 --> 00:31:50,030
basically looking or by basically

695
00:31:47,840 --> 00:31:53,030
marking a certificate as vulnerable<font color="#CCCCCC"> if</font>

696
00:31:50,030 --> 00:31:56,899
it is used<font color="#E5E5E5"> by a single server that is</font>

697
00:31:53,030 --> 00:32:00,430
vulnerable<font color="#CCCCCC"> to</font><font color="#E5E5E5"> drown so only 28 of all</font>

698
00:31:56,900 --> 00:32:03,080
<font color="#CCCCCC">smtp servers are vulnerable to</font><font color="#E5E5E5"> drown but</font>

699
00:32:00,430 --> 00:32:05,180
<font color="#CCCCCC">50% of all</font><font color="#E5E5E5"> smtp servers the connections</font>

700
00:32:03,080 --> 00:32:07,520
to them can be broken<font color="#E5E5E5"> because</font><font color="#CCCCCC"> the</font>

701
00:32:05,180 --> 00:32:09,710
<font color="#CCCCCC">certificate that is</font><font color="#E5E5E5"> used is somewhere</font>

702
00:32:07,520 --> 00:32:11,960
else<font color="#CCCCCC"> on some other port somewhere in the</font>

703
00:32:09,710 --> 00:32:14,060
world<font color="#E5E5E5"> used on the system that is</font>

704
00:32:11,960 --> 00:32:18,500
<font color="#CCCCCC">vulnerable to drown so this really</font>

705
00:32:14,060 --> 00:32:21,620
<font color="#E5E5E5">scaled scales up quite a lot okay so I</font>

706
00:32:18,500 --> 00:32:23,480
told<font color="#E5E5E5"> you the attacker needs</font><font color="#CCCCCC"> has the</font>

707
00:32:21,620 --> 00:32:26,449
attack has a<font color="#E5E5E5"> complexity of</font><font color="#CCCCCC"> 2 to the 50</font>

708
00:32:23,480 --> 00:32:28,780
so<font color="#E5E5E5"> we need to we need</font><font color="#CCCCCC"> to perform</font><font color="#E5E5E5"> these</font>

709
00:32:26,450 --> 00:32:31,910
<font color="#CCCCCC">two to the</font><font color="#E5E5E5"> 50 exhaustive searches</font>

710
00:32:28,780 --> 00:32:35,840
approximately<font color="#CCCCCC"> 1,000 times so that's</font><font color="#E5E5E5"> why</font>

711
00:32:31,910 --> 00:32:38,330
we have<font color="#CCCCCC"> two to</font><font color="#E5E5E5"> the 50 and we we we use</font>

712
00:32:35,840 --> 00:32:39,740
<font color="#E5E5E5">several ways of finding out how</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> we</font>

713
00:32:38,330 --> 00:32:42,110
do this<font color="#E5E5E5"> brute forcing in a most</font>

714
00:32:39,740 --> 00:32:44,570
efficient way basically<font color="#E5E5E5"> what we use this</font>

715
00:32:42,110 --> 00:32:47,870
<font color="#E5E5E5">we had a cluster of CPUs we had a</font>

716
00:32:44,570 --> 00:32:50,260
<font color="#E5E5E5">cluster of GPUs and here at the</font><font color="#CCCCCC"> rope</font><font color="#E5E5E5"> we</font>

717
00:32:47,870 --> 00:32:53,989
had a<font color="#E5E5E5"> cluster of every eighth of</font><font color="#CCCCCC"> each</font>

718
00:32:50,260 --> 00:32:56,629
<font color="#E5E5E5">FPGAs and we basically implemented the</font>

719
00:32:53,990 --> 00:32:59,210
attack with the source<font color="#E5E5E5"> code that we that</font>

720
00:32:56,630 --> 00:33:01,400
<font color="#CCCCCC">we stole</font><font color="#E5E5E5"> from open</font><font color="#CCCCCC"> SSL right so we took</font>

721
00:32:59,210 --> 00:33:03,710
md5 and<font color="#E5E5E5"> we took the</font><font color="#CCCCCC"> ac4 cipher</font>

722
00:33:01,400 --> 00:33:06,320
<font color="#E5E5E5">constructed everything with with 40 bit</font>

723
00:33:03,710 --> 00:33:08,780
and then we got<font color="#CCCCCC"> some numbers</font><font color="#E5E5E5"> and then we</font>

724
00:33:06,320 --> 00:33:11,179
we thought<font color="#E5E5E5"> about</font><font color="#CCCCCC"> okay let's let's talk</font>

725
00:33:08,780 --> 00:33:11,460
to people who<font color="#CCCCCC"> are really good at</font><font color="#E5E5E5"> brute</font>

726
00:33:11,180 --> 00:33:13,380
<font color="#E5E5E5">for</font>

727
00:33:11,460 --> 00:33:16,080
<font color="#CCCCCC">Singh and the first thing that</font><font color="#E5E5E5"> comes to</font>

728
00:33:13,380 --> 00:33:17,880
your<font color="#CCCCCC"> mind</font><font color="#E5E5E5"> is a hash</font><font color="#CCCCCC"> cut team</font><font color="#E5E5E5"> they do</font>

729
00:33:16,080 --> 00:33:20,100
password brute-forcing and they're very

730
00:33:17,880 --> 00:33:23,250
very<font color="#CCCCCC"> good and</font><font color="#E5E5E5"> this and this is what you</font>

731
00:33:20,100 --> 00:33:24,899
see<font color="#CCCCCC"> here with the platform</font><font color="#E5E5E5"> there's</font>

732
00:33:23,250 --> 00:33:29,520
something called naive<font color="#E5E5E5"> and there's an</font>

733
00:33:24,899 --> 00:33:32,039
optimized thing and so basically we send

734
00:33:29,520 --> 00:33:35,120
our code our<font color="#E5E5E5"> naive implementation of the</font>

735
00:33:32,039 --> 00:33:38,129
attack to<font color="#CCCCCC"> enjoy the autumn of</font><font color="#E5E5E5"> hash Kent</font>

736
00:33:35,120 --> 00:33:41,158
<font color="#E5E5E5">and basically overnight</font><font color="#CCCCCC"> he improved</font><font color="#E5E5E5"> the</font>

737
00:33:38,130 --> 00:33:43,380
code with by a factor of<font color="#CCCCCC"> 20 right</font><font color="#E5E5E5"> so the</font>

738
00:33:41,159 --> 00:33:46,230
time was reduced<font color="#E5E5E5"> by a factor of 20 which</font>

739
00:33:43,380 --> 00:33:49,679
is<font color="#E5E5E5"> really really really amazing</font><font color="#CCCCCC"> okay and</font>

740
00:33:46,230 --> 00:33:52,350
so he offered us<font color="#E5E5E5"> to to use the hash code</font>

741
00:33:49,679 --> 00:33:55,320
cluster so team<font color="#CCCCCC"> half-cat uses they have</font>

742
00:33:52,350 --> 00:33:58,529
like a huge cluster<font color="#E5E5E5"> of of different GPUs</font>

743
00:33:55,320 --> 00:34:00,840
and we use this and we also ran it on

744
00:33:58,529 --> 00:34:04,789
Amazon and there we found that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can</font>

745
00:34:00,840 --> 00:34:07,500
break a single TLS connection for $440

746
00:34:04,789 --> 00:34:09,690
<font color="#E5E5E5">the hash</font><font color="#CCCCCC"> CAD cluster costs approximately</font>

747
00:34:07,500 --> 00:34:13,460
<font color="#E5E5E5">eighteen thousand</font><font color="#CCCCCC"> dollars</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you would</font>

748
00:34:09,690 --> 00:34:16,500
buy it but that's flat<font color="#E5E5E5"> right right so</font>

749
00:34:13,460 --> 00:34:18,359
<font color="#E5E5E5">$440 is basically a single breaking a</font>

750
00:34:16,500 --> 00:34:20,820
<font color="#CCCCCC">single or performing a</font><font color="#E5E5E5"> single drone</font>

751
00:34:18,359 --> 00:34:23,190
attack and this is like<font color="#E5E5E5"> eighteen</font>

752
00:34:20,820 --> 00:34:25,169
<font color="#E5E5E5">thousand is like the flat rate and you</font>

753
00:34:23,190 --> 00:34:27,418
<font color="#E5E5E5">can break</font><font color="#CCCCCC"> it within 3/4 of a day</font><font color="#E5E5E5"> so</font>

754
00:34:25,168 --> 00:34:33,230
<font color="#E5E5E5">that's like 18 hours or so</font><font color="#CCCCCC"> okay</font>

755
00:34:27,418 --> 00:34:35,759
per connection<font color="#E5E5E5"> okay now this was</font><font color="#CCCCCC"> drone</font>

756
00:34:33,230 --> 00:34:37,199
<font color="#CCCCCC">what I want to talk to you now what I</font>

757
00:34:35,760 --> 00:34:40,800
want to explain<font color="#CCCCCC"> to you</font><font color="#E5E5E5"> is to</font>

758
00:34:37,199 --> 00:34:42,868
implementation<font color="#E5E5E5"> arrows in open SSL</font><font color="#CCCCCC"> and</font>

759
00:34:40,800 --> 00:34:45,899
<font color="#CCCCCC">the important part this is</font><font color="#E5E5E5"> only SSL</font>

760
00:34:42,869 --> 00:34:48,839
version<font color="#CCCCCC"> two</font><font color="#E5E5E5"> so basically we we spoke to</font>

761
00:34:45,899 --> 00:34:50,279
a lot of open SSL core developers and

762
00:34:48,839 --> 00:34:52,320
most of them were saying<font color="#E5E5E5"> okay I've never</font>

763
00:34:50,280 --> 00:34:53,700
<font color="#E5E5E5">actually looked at this code because</font>

764
00:34:52,320 --> 00:34:55,950
<font color="#E5E5E5">nobody's using it anymore</font>

765
00:34:53,699 --> 00:34:57,990
<font color="#E5E5E5">right so so it was they they were</font>

766
00:34:55,949 --> 00:34:59,879
<font color="#E5E5E5">shipping code</font><font color="#CCCCCC"> what they considered and</font>

767
00:34:57,990 --> 00:35:01,529
that<font color="#CCCCCC"> nobody is using</font><font color="#E5E5E5"> anymore and</font>

768
00:34:59,880 --> 00:35:04,170
therefore<font color="#CCCCCC"> nobody looked at it anymore</font>

769
00:35:01,530 --> 00:35:06,300
but when we submitted<font color="#E5E5E5"> patches people</font>

770
00:35:04,170 --> 00:35:07,800
were like<font color="#E5E5E5"> okay so I've never</font><font color="#CCCCCC"> actually</font>

771
00:35:06,300 --> 00:35:10,170
looked<font color="#E5E5E5"> at it I need some time in order</font>

772
00:35:07,800 --> 00:35:12,180
<font color="#CCCCCC">to learn the code</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so there the</font>

773
00:35:10,170 --> 00:35:15,740
first<font color="#E5E5E5"> one</font><font color="#CCCCCC"> is what we call the cipher</font>

774
00:35:12,180 --> 00:35:19,140
<font color="#E5E5E5">suite selection back and I told</font><font color="#CCCCCC"> you with</font>

775
00:35:15,740 --> 00:35:21,598
with SSL version 2<font color="#E5E5E5"> the client sends a</font>

776
00:35:19,140 --> 00:35:24,810
list of<font color="#CCCCCC"> supported cipher Suites</font><font color="#E5E5E5"> then the</font>

777
00:35:21,599 --> 00:35:26,760
server takes out of<font color="#CCCCCC"> this</font><font color="#E5E5E5"> list and</font>

778
00:35:24,810 --> 00:35:28,710
you list of the cipher suites that<font color="#E5E5E5"> he</font>

779
00:35:26,760 --> 00:35:31,440
supports as well<font color="#E5E5E5"> and then the client</font>

780
00:35:28,710 --> 00:35:34,830
chooses one so we have<font color="#CCCCCC"> to list soak up</font>

781
00:35:31,440 --> 00:35:39,090
that<font color="#E5E5E5"> go</font><font color="#CCCCCC"> back and</font><font color="#E5E5E5"> forth</font><font color="#CCCCCC"> and what is</font>

782
00:35:34,830 --> 00:35:41,549
<font color="#E5E5E5">generally possible is a very weird</font><font color="#CCCCCC"> thing</font>

783
00:35:39,090 --> 00:35:44,640
I find it's in<font color="#E5E5E5"> general possible to</font>

784
00:35:41,550 --> 00:35:47,460
support<font color="#E5E5E5"> SSL version</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> but no SSL</font>

785
00:35:44,640 --> 00:35:48,779
version to cipher Suites protocol and

786
00:35:47,460 --> 00:35:51,540
cipher suites are two different<font color="#CCCCCC"> things</font>

787
00:35:48,780 --> 00:35:54,210
<font color="#E5E5E5">and so basically when you have SSL</font>

788
00:35:51,540 --> 00:35:56,910
version<font color="#CCCCCC"> 2 enabled</font><font color="#E5E5E5"> but no cipher suite of</font>

789
00:35:54,210 --> 00:35:59,640
SSL version tool<font color="#E5E5E5"> any standard conforming</font>

790
00:35:56,910 --> 00:36:01,470
client will tell<font color="#E5E5E5"> you yeah it supports</font>

791
00:35:59,640 --> 00:36:02,879
SSL version - but I can't negotiate any

792
00:36:01,470 --> 00:36:06,919
cipher and<font color="#E5E5E5"> we'll just close the</font>

793
00:36:02,880 --> 00:36:09,840
connection which is<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so most people</font>

794
00:36:06,920 --> 00:36:12,060
configure their configure their cipher

795
00:36:09,840 --> 00:36:14,910
<font color="#CCCCCC">Suites but not the protocol and now</font>

796
00:36:12,060 --> 00:36:18,870
there is<font color="#CCCCCC"> a very interesting</font><font color="#E5E5E5"> Bank in in</font>

797
00:36:14,910 --> 00:36:21,120
open SSL basically<font color="#E5E5E5"> I as a client sent</font><font color="#CCCCCC"> it</font>

798
00:36:18,870 --> 00:36:23,460
a list of the<font color="#E5E5E5"> supported ciphers and I</font>

799
00:36:21,120 --> 00:36:25,440
include the export ciphers<font color="#E5E5E5"> remember we</font>

800
00:36:23,460 --> 00:36:27,420
<font color="#E5E5E5">need the export ciphers</font><font color="#CCCCCC"> then I get a</font>

801
00:36:25,440 --> 00:36:29,430
list back of the server and it<font color="#E5E5E5"> tells me</font>

802
00:36:27,420 --> 00:36:31,380
<font color="#CCCCCC">okay I support SSL version</font><font color="#E5E5E5"> 2 ciphers but</font>

803
00:36:29,430 --> 00:36:34,049
<font color="#E5E5E5">no expert</font><font color="#CCCCCC"> Cypress because they are no</font>

804
00:36:31,380 --> 00:36:37,740
good<font color="#CCCCCC"> and then I as the attacker</font>

805
00:36:34,050 --> 00:36:38,130
<font color="#E5E5E5">non-conforming client I say yeah</font><font color="#CCCCCC"> ok</font>

806
00:36:37,740 --> 00:36:41,370
great

807
00:36:38,130 --> 00:36:43,260
<font color="#CCCCCC">I I want to</font><font color="#E5E5E5"> negotiate an export</font><font color="#CCCCCC"> 40 a</font>

808
00:36:41,370 --> 00:36:47,130
cipher suite and then I<font color="#CCCCCC"> have the server</font>

809
00:36:43,260 --> 00:36:49,530
will just accept<font color="#E5E5E5"> it</font><font color="#CCCCCC"> which is which is</font>

810
00:36:47,130 --> 00:36:52,230
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> ok you have a system and you</font>

811
00:36:49,530 --> 00:36:54,210
<font color="#E5E5E5">configure your</font><font color="#CCCCCC"> open</font><font color="#E5E5E5"> SSL and yes it's a</font>

812
00:36:52,230 --> 00:36:55,950
<font color="#E5E5E5">very secure list of cipher suites that</font>

813
00:36:54,210 --> 00:36:59,340
you only support<font color="#CCCCCC"> you have just forgotten</font>

814
00:36:55,950 --> 00:37:02,160
to tell it - SSL version<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> then this</font>

815
00:36:59,340 --> 00:37:03,990
system will be vulnerable<font color="#CCCCCC"> if you have a</font>

816
00:37:02,160 --> 00:37:05,520
<font color="#CCCCCC">non-conforming client and it's</font>

817
00:37:03,990 --> 00:37:07,799
vulnerable<font color="#E5E5E5"> to</font><font color="#CCCCCC"> drum</font><font color="#E5E5E5"> right and a</font>

818
00:37:05,520 --> 00:37:10,140
substantial<font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> assistance on the</font>

819
00:37:07,800 --> 00:37:12,780
<font color="#E5E5E5">internet they had SSL version 2 enabled</font>

820
00:37:10,140 --> 00:37:14,549
<font color="#E5E5E5">but in a way that no standard conforming</font>

821
00:37:12,780 --> 00:37:17,100
SSL version 2 client would be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

822
00:37:14,550 --> 00:37:17,730
<font color="#E5E5E5">negotiate a handshake okay so it's not a</font>

823
00:37:17,100 --> 00:37:19,589
big<font color="#E5E5E5"> issue</font>

824
00:37:17,730 --> 00:37:21,600
most scanners were saying no it's not a

825
00:37:19,590 --> 00:37:23,490
big issue<font color="#CCCCCC"> but because of</font><font color="#E5E5E5"> this park</font>

826
00:37:21,600 --> 00:37:25,850
because<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this open SSL</font><font color="#CCCCCC"> buck it is an</font>

827
00:37:23,490 --> 00:37:29,609
issue<font color="#CCCCCC"> ok</font>

828
00:37:25,850 --> 00:37:31,529
the second one so we spent a<font color="#E5E5E5"> lot of time</font>

829
00:37:29,610 --> 00:37:34,530
on brute forcing the<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> to the 50</font>

830
00:37:31,530 --> 00:37:38,090
complexity a<font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> really many months</font>

831
00:37:34,530 --> 00:37:40,190
were spent doing<font color="#E5E5E5"> this and</font><font color="#CCCCCC"> until we</font><font color="#E5E5E5"> found</font>

832
00:37:38,090 --> 00:37:43,430
special<font color="#CCCCCC"> drone which was someone</font><font color="#E5E5E5"> someone</font>

833
00:37:40,190 --> 00:37:45,980
in in February<font color="#CCCCCC"> so very late</font><font color="#E5E5E5"> before we</font>

834
00:37:43,430 --> 00:37:48,319
before<font color="#E5E5E5"> we went public and this works</font>

835
00:37:45,980 --> 00:37:51,710
this<font color="#E5E5E5"> works like this</font><font color="#CCCCCC"> I told you the</font>

836
00:37:48,320 --> 00:37:56,900
<font color="#CCCCCC">forty bit export snipers are strange</font>

837
00:37:51,710 --> 00:37:59,090
<font color="#E5E5E5">because you have 128 bit keys</font><font color="#CCCCCC"> a part of</font>

838
00:37:56,900 --> 00:38:01,160
it is shipped in clear<font color="#CCCCCC"> a part of it will</font>

839
00:37:59,090 --> 00:38:05,450
be<font color="#E5E5E5"> will be encrypted</font><font color="#CCCCCC"> it's the only part</font>

840
00:38:01,160 --> 00:38:09,890
of the<font color="#CCCCCC"> 138 bit is exactly it's exactly</font>

841
00:38:05,450 --> 00:38:13,790
secure now<font color="#E5E5E5"> this is like the construction</font>

842
00:38:09,890 --> 00:38:15,830
<font color="#CCCCCC">it's more like a string concatenation</font>

843
00:38:13,790 --> 00:38:18,860
<font color="#CCCCCC">this is these are</font><font color="#E5E5E5"> the clear bits</font><font color="#CCCCCC"> these</font>

844
00:38:15,830 --> 00:38:20,660
<font color="#E5E5E5">are the secret bits the actual</font>

845
00:38:18,860 --> 00:38:24,350
encryption<font color="#CCCCCC"> key is the server right key</font>

846
00:38:20,660 --> 00:38:26,480
and<font color="#E5E5E5"> it uses</font><font color="#CCCCCC"> MK</font><font color="#E5E5E5"> and uses an md5 hash</font>

847
00:38:24,350 --> 00:38:29,089
that's<font color="#E5E5E5"> not relevant and it uses MK but</font>

848
00:38:26,480 --> 00:38:32,780
it<font color="#E5E5E5"> only uses the first</font><font color="#CCCCCC"> 16 byte</font><font color="#E5E5E5"> whatever</font>

849
00:38:29,090 --> 00:38:36,830
is the first 16 byte will be used now

850
00:38:32,780 --> 00:38:42,290
well now let's just say you have a 128

851
00:38:36,830 --> 00:38:44,750
<font color="#E5E5E5">bit cipher suite selected then all the</font>

852
00:38:42,290 --> 00:38:47,120
key bits<font color="#CCCCCC"> all the key bytes will be will</font>

853
00:38:44,750 --> 00:38:50,450
be<font color="#CCCCCC"> used in in the actual hash which is</font>

854
00:38:47,120 --> 00:38:53,210
good<font color="#E5E5E5"> but when you use</font><font color="#CCCCCC"> a non export</font>

855
00:38:50,450 --> 00:38:56,210
<font color="#E5E5E5">cipher non-expert cipher and you still</font>

856
00:38:53,210 --> 00:38:59,350
sent a secret bits<font color="#CCCCCC"> then something very</font>

857
00:38:56,210 --> 00:39:02,780
<font color="#E5E5E5">strange happens the</font><font color="#CCCCCC"> 4 bits are like</font>

858
00:38:59,350 --> 00:39:05,860
prepended the first<font color="#CCCCCC"> 4 bytes are the ones</font>

859
00:39:02,780 --> 00:39:07,490
that<font color="#CCCCCC"> were</font><font color="#E5E5E5"> sent on a clear and here this</font>

860
00:39:05,860 --> 00:39:10,370
the<font color="#E5E5E5"> secret</font>

861
00:39:07,490 --> 00:39:12,799
bits<font color="#CCCCCC"> secret bytes there are still 16</font>

862
00:39:10,370 --> 00:39:16,299
bytes in there<font color="#E5E5E5"> because it's a non export</font>

863
00:39:12,800 --> 00:39:19,040
cipher but the last<font color="#CCCCCC"> 4 bytes are somehow</font>

864
00:39:16,300 --> 00:39:20,660
truncated right because I told<font color="#E5E5E5"> you this</font>

865
00:39:19,040 --> 00:39:23,750
<font color="#CCCCCC">here we'll just use the first</font><font color="#E5E5E5"> thing</font>

866
00:39:20,660 --> 00:39:27,440
first 16 byte so we have<font color="#E5E5E5"> effectively cut</font>

867
00:39:23,750 --> 00:39:31,250
<font color="#CCCCCC">off for byte of of the flow key</font><font color="#E5E5E5"> and now</font>

868
00:39:27,440 --> 00:39:35,270
when I do 15 clear bits<font color="#E5E5E5"> 15 clear bytes</font>

869
00:39:31,250 --> 00:39:37,640
sorry<font color="#CCCCCC"> we</font><font color="#E5E5E5"> basically have only one byte of</font>

870
00:39:35,270 --> 00:39:40,880
<font color="#CCCCCC">the secret of the secret key here and</font>

871
00:39:37,640 --> 00:39:43,850
that we can<font color="#CCCCCC"> brute-force so when I</font>

872
00:39:40,880 --> 00:39:48,380
negotiate<font color="#CCCCCC"> a SSL version</font><font color="#E5E5E5"> to handshake and</font>

873
00:39:43,850 --> 00:39:50,870
I send 15 bytes of<font color="#CCCCCC"> the clea which are no</font>

874
00:39:48,380 --> 00:39:51,079
15<font color="#CCCCCC"> zero bytes</font><font color="#E5E5E5"> or 15</font><font color="#CCCCCC"> 1 bytes</font><font color="#E5E5E5"> doesn't</font>

875
00:39:50,870 --> 00:39:54,558
really

876
00:39:51,079 --> 00:39:56,690
matter<font color="#CCCCCC"> then I get</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> server verify</font><font color="#E5E5E5"> and</font>

877
00:39:54,559 --> 00:40:01,400
the server verify of the server verify

878
00:39:56,690 --> 00:40:04,670
<font color="#CCCCCC">there is only 128</font><font color="#E5E5E5"> bit or to an or sorry</font>

879
00:40:01,400 --> 00:40:06,489
it's<font color="#E5E5E5"> actually only 8 bit here that is</font>

880
00:40:04,670 --> 00:40:09,789
really unknown<font color="#E5E5E5"> and that I can</font><font color="#CCCCCC"> root force</font>

881
00:40:06,489 --> 00:40:14,900
right on average<font color="#E5E5E5"> I only need 128 byte</font>

882
00:40:09,789 --> 00:40:17,569
<font color="#E5E5E5">tries and</font><font color="#CCCCCC"> then I know</font><font color="#E5E5E5"> k1 and from this I</font>

883
00:40:14,900 --> 00:40:20,749
can learn each and every<font color="#E5E5E5"> byte</font>

884
00:40:17,569 --> 00:40:23,599
<font color="#E5E5E5">successively</font><font color="#CCCCCC"> all right so basically</font><font color="#E5E5E5"> it's</font>

885
00:40:20,749 --> 00:40:25,339
<font color="#E5E5E5">like I can a kid</font><font color="#CCCCCC"> scooch over each by it</font>

886
00:40:23,599 --> 00:40:27,440
and<font color="#E5E5E5"> then just brute force the single</font>

887
00:40:25,339 --> 00:40:31,819
byte I can<font color="#E5E5E5"> learn by it by by it by</font>

888
00:40:27,440 --> 00:40:33,940
simply sending<font color="#CCCCCC"> 15 15 padding bytes and</font>

889
00:40:31,819 --> 00:40:36,920
and so on<font color="#CCCCCC"> and so on</font>

890
00:40:33,940 --> 00:40:38,989
so basically a generic<font color="#E5E5E5"> drone had</font><font color="#CCCCCC"> two to</font>

891
00:40:36,920 --> 00:40:41,779
the<font color="#E5E5E5"> 50 complexity special drone only</font>

892
00:40:38,989 --> 00:40:48,019
requires 15 probe connections and on

893
00:40:41,779 --> 00:40:51,049
<font color="#E5E5E5">average 15 times 128 like</font><font color="#CCCCCC"> 8 bits are 256</font>

894
00:40:48,019 --> 00:40:54,979
possibilities on average<font color="#CCCCCC"> I will I will</font>

895
00:40:51,049 --> 00:40:58,219
find<font color="#E5E5E5"> this the solution in 128 rise so we</font>

896
00:40:54,979 --> 00:41:00,618
only need<font color="#E5E5E5"> two thousand trial encryptions</font>

897
00:40:58,219 --> 00:41:02,599
and<font color="#E5E5E5"> not</font><font color="#CCCCCC"> to to the</font><font color="#E5E5E5"> 40 which is</font><font color="#CCCCCC"> a bit</font>

898
00:41:00,619 --> 00:41:05,749
<font color="#E5E5E5">unfortunate because we'd spent so many</font>

899
00:41:02,599 --> 00:41:09,769
months in order<font color="#E5E5E5"> to to make</font><font color="#CCCCCC"> this really</font>

900
00:41:05,749 --> 00:41:12,649
<font color="#CCCCCC">fast but</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> it's only a a</font><font color="#CCCCCC"> OpenSSL</font>

901
00:41:09,769 --> 00:41:16,819
back and it's closed<font color="#CCCCCC"> obviously what is</font>

902
00:41:12,650 --> 00:41:19,130
<font color="#E5E5E5">very interesting is this</font><font color="#CCCCCC"> bug was closed</font>

903
00:41:16,819 --> 00:41:22,940
<font color="#E5E5E5">last year in 2015</font>

904
00:41:19,130 --> 00:41:26,509
<font color="#E5E5E5">already and nobody knew so it was a</font>

905
00:41:22,940 --> 00:41:30,440
silent<font color="#E5E5E5"> fix so we submitted a we</font>

906
00:41:26,509 --> 00:41:32,539
submitted a a patch to a<font color="#CCCCCC"> bug</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> was</font>

907
00:41:30,440 --> 00:41:34,640
closed<font color="#CCCCCC"> and on the way</font>

908
00:41:32,539 --> 00:41:36,680
Emelia of<font color="#E5E5E5"> OpenSSL fixed another bug</font>

909
00:41:34,640 --> 00:41:39,618
which he didn't see and we didn't see

910
00:41:36,680 --> 00:41:40,519
and that was basically<font color="#E5E5E5"> this buck what is</font>

911
00:41:39,619 --> 00:41:43,009
<font color="#E5E5E5">interesting here</font>

912
00:41:40,519 --> 00:41:45,680
we scanned<font color="#E5E5E5"> for this particular bug and</font>

913
00:41:43,009 --> 00:41:48,890
we found that<font color="#E5E5E5"> a substantial amount is</font>

914
00:41:45,680 --> 00:41:49,729
still vulnerable<font color="#CCCCCC"> also for this for this</font>

915
00:41:48,890 --> 00:41:52,759
special drone

916
00:41:49,729 --> 00:41:55,729
so what you see here<font color="#E5E5E5"> of all the holes on</font>

917
00:41:52,759 --> 00:41:58,849
the<font color="#E5E5E5"> internet on port 25</font><font color="#CCCCCC"> 28 percent are</font>

918
00:41:55,729 --> 00:42:01,968
vulnerable to<font color="#CCCCCC"> to generic ground</font><font color="#E5E5E5"> they</font>

919
00:41:58,849 --> 00:42:04,369
support SSL version<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> but 25 percent</font>

920
00:42:01,969 --> 00:42:06,920
<font color="#CCCCCC">obviously run</font>

921
00:42:04,369 --> 00:42:08,749
open SSL version that is more than one

922
00:42:06,920 --> 00:42:13,069
year<font color="#CCCCCC"> old</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> it was fixed</font><font color="#E5E5E5"> in March</font>

923
00:42:08,749 --> 00:42:14,538
2015<font color="#E5E5E5"> which is telling about how people</font>

924
00:42:13,069 --> 00:42:18,200
<font color="#CCCCCC">patched their systems which doesn't seem</font>

925
00:42:14,539 --> 00:42:20,359
to be at all right<font color="#E5E5E5"> so</font><font color="#CCCCCC"> basically most</font><font color="#E5E5E5"> of</font>

926
00:42:18,200 --> 00:42:23,839
<font color="#CCCCCC">the systems that we found that support</font>

927
00:42:20,359 --> 00:42:26,180
SSL version<font color="#CCCCCC"> tool are open SSL</font><font color="#E5E5E5"> that is</font>

928
00:42:23,839 --> 00:42:29,630
more than one<font color="#E5E5E5"> one year old which is</font>

929
00:42:26,180 --> 00:42:32,899
<font color="#CCCCCC">pretty bad</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I'm running out of time</font>

930
00:42:29,630 --> 00:42:35,900
I<font color="#E5E5E5"> think</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> just wanted to show you that</font>

931
00:42:32,900 --> 00:42:38,450
<font color="#E5E5E5">like we we created</font><font color="#CCCCCC"> logo we created a a</font>

932
00:42:35,900 --> 00:42:40,309
web page<font color="#E5E5E5"> and Ron attack.com got a lot</font><font color="#CCCCCC"> of</font>

933
00:42:38,450 --> 00:42:43,399
<font color="#E5E5E5">visitors</font><font color="#CCCCCC"> so this was</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> interesting</font>

934
00:42:40,309 --> 00:42:46,900
<font color="#E5E5E5">so only</font><font color="#CCCCCC"> only like let's say on the four</font>

935
00:42:43,400 --> 00:42:50,089
on the first four days<font color="#E5E5E5"> we almost had a</font>

936
00:42:46,900 --> 00:42:51,769
half a million unique people<font color="#E5E5E5"> on the</font>

937
00:42:50,089 --> 00:42:53,509
<font color="#E5E5E5">system which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> very interesting because</font>

938
00:42:51,769 --> 00:42:55,640
<font color="#E5E5E5">so many people wanted</font><font color="#CCCCCC"> to look at how</font>

939
00:42:53,509 --> 00:42:57,980
this how this<font color="#E5E5E5"> attack worked which was</font>

940
00:42:55,640 --> 00:43:01,400
<font color="#E5E5E5">also quite interesting so</font><font color="#CCCCCC"> ground attack</font>

941
00:42:57,980 --> 00:43:03,319
<font color="#CCCCCC">common was hosted</font><font color="#E5E5E5"> at University</font>

942
00:43:01,400 --> 00:43:05,990
<font color="#CCCCCC">mince the University of Applied Sciences</font>

943
00:43:03,319 --> 00:43:10,910
so in my<font color="#CCCCCC"> university</font><font color="#E5E5E5"> and so we went</font>

944
00:43:05,990 --> 00:43:15,618
online at 1:00 1:00 p.m. and on<font color="#E5E5E5"> five on</font>

945
00:43:10,910 --> 00:43:17,899
on 3:30<font color="#CCCCCC"> a DDoS attack</font><font color="#E5E5E5"> was started</font>

946
00:43:15,619 --> 00:43:19,460
against<font color="#E5E5E5"> Ronnie tech comm which I only</font>

947
00:43:17,900 --> 00:43:21,890
found out because<font color="#CCCCCC"> nothing was working</font>

948
00:43:19,460 --> 00:43:25,940
anymore so<font color="#CCCCCC"> the whole photo shoot</font><font color="#E5E5E5"> was was</font>

949
00:43:21,890 --> 00:43:27,739
off the net and so the<font color="#E5E5E5"> off</font><font color="#CCCCCC"> fool is</font>

950
00:43:25,940 --> 00:43:29,329
connected to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> University so we</font><font color="#E5E5E5"> use</font>

951
00:43:27,739 --> 00:43:31,430
the uplink of the<font color="#E5E5E5"> University and so the</font>

952
00:43:29,329 --> 00:43:34,999
<font color="#CCCCCC">University of münster was also down and</font>

953
00:43:31,430 --> 00:43:39,049
so basically yeah<font color="#E5E5E5"> now everyone knows me</font>

954
00:43:34,999 --> 00:43:41,529
in in Winston<font color="#E5E5E5"> which is a pity</font><font color="#CCCCCC"> okay okay</font>

955
00:43:39,049 --> 00:43:41,529
thank<font color="#CCCCCC"> you very much</font>

956
00:43:44,160 --> 00:43:46,220
you

