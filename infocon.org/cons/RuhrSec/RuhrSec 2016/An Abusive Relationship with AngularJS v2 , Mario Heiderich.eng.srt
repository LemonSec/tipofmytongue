1
00:00:03,740 --> 00:00:08,309
thank you very<font color="#CCCCCC"> much</font><font color="#E5E5E5"> let's start so this</font>

2
00:00:06,150 --> 00:00:10,769
talk is<font color="#E5E5E5"> gonna be about my personal</font>

3
00:00:08,309 --> 00:00:14,480
abusive relationship with angularjs<font color="#CCCCCC"> so</font>

4
00:00:10,769 --> 00:00:18,029
who<font color="#E5E5E5"> here in the room knows angularjs</font>

5
00:00:14,480 --> 00:00:19,890
that's a lot<font color="#E5E5E5"> so who here is cursed with</font>

6
00:00:18,029 --> 00:00:23,369
<font color="#E5E5E5">having to deal with</font><font color="#CCCCCC"> it like</font><font color="#E5E5E5"> writing</font><font color="#CCCCCC"> code</font>

7
00:00:19,890 --> 00:00:24,810
<font color="#CCCCCC">in angularjs</font><font color="#E5E5E5"> only one person that's good</font>

8
00:00:23,369 --> 00:00:26,519
<font color="#CCCCCC">I</font><font color="#E5E5E5"> like it</font>

9
00:00:24,810 --> 00:00:28,470
who<font color="#E5E5E5"> here has</font><font color="#CCCCCC"> two pen</font><font color="#E5E5E5"> tests against</font>

10
00:00:26,519 --> 00:00:31,259
websites that are using angularjs

11
00:00:28,470 --> 00:00:33,559
all right that's a bit more<font color="#E5E5E5"> like more</font>

12
00:00:31,260 --> 00:00:35,370
people pen<font color="#CCCCCC"> test them right let's see</font><font color="#E5E5E5"> I</font>

13
00:00:33,559 --> 00:00:38,129
don't<font color="#E5E5E5"> think we need the introduction</font>

14
00:00:35,370 --> 00:00:40,290
that's<font color="#E5E5E5"> me I</font><font color="#CCCCCC"> am Mario</font><font color="#E5E5E5"> and maintain some</font>

15
00:00:38,129 --> 00:00:41,489
<font color="#E5E5E5">projects and</font><font color="#CCCCCC"> pop some alerts</font><font color="#E5E5E5"> and you can</font>

16
00:00:40,290 --> 00:00:42,930
<font color="#E5E5E5">follow me on</font><font color="#CCCCCC"> Twitter if you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to and</font>

17
00:00:41,489 --> 00:00:45,510
you<font color="#CCCCCC"> can write me emails if you feel like</font>

18
00:00:42,930 --> 00:00:48,510
it I might even respond and today we're

19
00:00:45,510 --> 00:00:49,620
<font color="#E5E5E5">gonna be</font><font color="#CCCCCC"> talking about angularjs don't</font>

20
00:00:48,510 --> 00:00:51,930
be fooled we're not<font color="#E5E5E5"> gonna be talking</font>

21
00:00:49,620 --> 00:00:54,300
<font color="#CCCCCC">about angularjs 2.0</font><font color="#E5E5E5"> because it's too</font>

22
00:00:51,930 --> 00:00:56,550
early there's nothing<font color="#E5E5E5"> there yet</font><font color="#CCCCCC"> that is</font>

23
00:00:54,300 --> 00:00:58,589
like<font color="#CCCCCC"> worth having a deep look at because</font>

24
00:00:56,550 --> 00:01:00,029
no one uses<font color="#CCCCCC"> it yeah it's too fresh we're</font>

25
00:00:58,590 --> 00:01:02,550
gonna be having<font color="#CCCCCC"> a look</font><font color="#E5E5E5"> at angularjs one</font>

26
00:01:00,030 --> 00:01:05,099
point<font color="#E5E5E5"> X and how it deals</font><font color="#CCCCCC"> with security</font>

27
00:01:02,550 --> 00:01:08,610
<font color="#CCCCCC">and why this</font><font color="#E5E5E5"> is relevant</font><font color="#CCCCCC"> for us</font><font color="#E5E5E5"> as</font>

28
00:01:05,099 --> 00:01:10,559
testers<font color="#E5E5E5"> um</font><font color="#CCCCCC"> my question</font><font color="#E5E5E5"> that I'm</font>

29
00:01:08,610 --> 00:01:13,320
<font color="#E5E5E5">personally</font><font color="#CCCCCC"> going to ask and try</font><font color="#E5E5E5"> to</font>

30
00:01:10,560 --> 00:01:14,880
answer<font color="#E5E5E5"> is whether angularjs is the honey</font>

31
00:01:13,320 --> 00:01:18,779
<font color="#E5E5E5">booboo of JavaScript</font><font color="#CCCCCC"> and works who here</font>

32
00:01:14,880 --> 00:01:20,820
knows honey<font color="#CCCCCC"> booboo</font><font color="#E5E5E5"> that is surprisingly</font>

33
00:01:18,780 --> 00:01:22,320
few people<font color="#E5E5E5"> you should really</font><font color="#CCCCCC"> have a look</font>

34
00:01:20,820 --> 00:01:24,779
at who honey booboo is because it's

35
00:01:22,320 --> 00:01:26,339
terrifying<font color="#CCCCCC"> like just like have a look</font>

36
00:01:24,780 --> 00:01:29,640
you will<font color="#E5E5E5"> be surprised what</font><font color="#CCCCCC"> kind of</font>

37
00:01:26,340 --> 00:01:32,009
things exist<font color="#E5E5E5"> anyhow</font><font color="#CCCCCC"> what is angular JS</font>

38
00:01:29,640 --> 00:01:33,240
<font color="#CCCCCC">angler</font><font color="#E5E5E5"> J's is one of the most popular</font>

39
00:01:32,009 --> 00:01:34,560
model view controller frameworks

40
00:01:33,240 --> 00:01:36,390
actually it's called<font color="#E5E5E5"> model view whatever</font>

41
00:01:34,560 --> 00:01:37,500
<font color="#E5E5E5">because it's so flexible and they want</font>

42
00:01:36,390 --> 00:01:40,890
to<font color="#CCCCCC"> have something cool</font><font color="#E5E5E5"> in the name so</font>

43
00:01:37,500 --> 00:01:44,070
they call it<font color="#CCCCCC"> M the W</font><font color="#E5E5E5"> instead of</font><font color="#CCCCCC"> MVC</font>

44
00:01:40,890 --> 00:01:47,159
which is fairly well<font color="#E5E5E5"> known and it called</font>

45
00:01:44,070 --> 00:01:48,869
itself the superheroic framework<font color="#E5E5E5"> and you</font>

46
00:01:47,159 --> 00:01:50,850
<font color="#CCCCCC">can see that there's certain amount</font><font color="#E5E5E5"> of</font>

47
00:01:48,869 --> 00:01:54,000
self left involved and it is maintained

48
00:01:50,850 --> 00:01:56,490
and recommended<font color="#CCCCCC"> by Google</font><font color="#E5E5E5"> so people who</font>

49
00:01:54,000 --> 00:01:58,469
consider using<font color="#CCCCCC"> this framework</font><font color="#E5E5E5"> might be</font>

50
00:01:56,490 --> 00:02:00,960
extra encouraged to do<font color="#CCCCCC"> so because they</font>

51
00:01:58,469 --> 00:02:02,729
see the company name following the<font color="#E5E5E5"> name</font>

52
00:02:00,960 --> 00:02:04,469
of the framework<font color="#E5E5E5"> it has a very</font>

53
00:02:02,729 --> 00:02:05,939
polarizing philosophy because it tells

54
00:02:04,469 --> 00:02:07,320
you certain things<font color="#E5E5E5"> that you cannot do</font>

55
00:02:05,939 --> 00:02:09,179
<font color="#E5E5E5">anymore it tells you that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> cannot</font>

56
00:02:07,320 --> 00:02:11,160
build web<font color="#CCCCCC"> applications the classic way</font>

57
00:02:09,179 --> 00:02:13,380
anymore<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to build them the way</font>

58
00:02:11,160 --> 00:02:15,480
the framework wants you to do so and

59
00:02:13,380 --> 00:02:17,280
if you don't and it's gonna be bad<font color="#CCCCCC"> for</font>

60
00:02:15,480 --> 00:02:18,959
<font color="#E5E5E5">your we're gonna see why that is it</font>

61
00:02:17,280 --> 00:02:20,520
still has an<font color="#E5E5E5"> ever-growing user base so</font>

62
00:02:18,960 --> 00:02:22,860
there's more<font color="#CCCCCC"> and more users and websites</font>

63
00:02:20,520 --> 00:02:23,940
adopting<font color="#CCCCCC"> through this framework</font><font color="#E5E5E5"> and if</font>

64
00:02:22,860 --> 00:02:25,560
you have a<font color="#E5E5E5"> look at the traffic</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

65
00:02:23,940 --> 00:02:27,570
github repository you will notice<font color="#E5E5E5"> that</font>

66
00:02:25,560 --> 00:02:29,430
there<font color="#CCCCCC"> is a lot of</font><font color="#E5E5E5"> things going on</font>

67
00:02:27,570 --> 00:02:31,140
tons of pull<font color="#E5E5E5"> requests tons of commits so</font>

68
00:02:29,430 --> 00:02:33,630
there's a lot<font color="#E5E5E5"> of activity here</font><font color="#CCCCCC"> which</font>

69
00:02:31,140 --> 00:02:36,989
also<font color="#E5E5E5"> in a way makes it attractive for an</font>

70
00:02:33,630 --> 00:02:38,850
attacker now the question would<font color="#E5E5E5"> be why</font>

71
00:02:36,990 --> 00:02:40,800
talking<font color="#E5E5E5"> about angularjs</font><font color="#CCCCCC"> again because I</font>

72
00:02:38,850 --> 00:02:42,750
have been<font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about this</font><font color="#CCCCCC"> before in a</font>

73
00:02:40,800 --> 00:02:44,280
<font color="#CCCCCC">different presentation that was more in</font>

74
00:02:42,750 --> 00:02:45,650
<font color="#CCCCCC">the general topic</font><font color="#E5E5E5"> of JavaScript</font>

75
00:02:44,280 --> 00:02:49,140
<font color="#CCCCCC">model-view-controller frameworks</font><font color="#E5E5E5"> and</font>

76
00:02:45,650 --> 00:02:51,180
<font color="#E5E5E5">checking how they destroy existing</font>

77
00:02:49,140 --> 00:02:53,339
security assumptions or modify them in a

78
00:02:51,180 --> 00:02:55,710
way<font color="#E5E5E5"> that is good</font><font color="#CCCCCC"> for the attacker now</font>

79
00:02:53,340 --> 00:02:57,810
angler<font color="#CCCCCC"> J's is special and it's like a</font>

80
00:02:55,710 --> 00:02:59,820
match made<font color="#CCCCCC"> in heaven</font><font color="#E5E5E5"> because they have</font>

81
00:02:57,810 --> 00:03:01,680
so much power<font color="#E5E5E5"> in the framework</font><font color="#CCCCCC"> and they</font>

82
00:02:59,820 --> 00:03:03,840
enable developers to do so many things

83
00:03:01,680 --> 00:03:06,660
<font color="#CCCCCC">and</font><font color="#E5E5E5"> so many interesting in new ways that</font>

84
00:03:03,840 --> 00:03:09,990
<font color="#CCCCCC">of course</font><font color="#E5E5E5"> attack vectors are being made</font>

85
00:03:06,660 --> 00:03:11,609
available as<font color="#E5E5E5"> to and when the very</font>

86
00:03:09,990 --> 00:03:14,010
beginning<font color="#CCCCCC"> of</font><font color="#E5E5E5"> our research there</font><font color="#CCCCCC"> is like</font>

87
00:03:11,610 --> 00:03:15,750
three years<font color="#E5E5E5"> ago we found some trivially</font>

88
00:03:14,010 --> 00:03:18,450
to exploit<font color="#CCCCCC"> box in angularjs</font><font color="#E5E5E5"> and the old</font>

89
00:03:15,750 --> 00:03:19,890
inversions like<font color="#CCCCCC"> 1.0 point something and</font>

90
00:03:18,450 --> 00:03:23,280
we wrote the developers and they said

91
00:03:19,890 --> 00:03:24,510
<font color="#CCCCCC">like yeah ability and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> yeah we do</font>

92
00:03:23,280 --> 00:03:26,040
think it's<font color="#E5E5E5"> one and then there was a</font>

93
00:03:24,510 --> 00:03:27,540
<font color="#CCCCCC">discussion was a bit straight if you</font>

94
00:03:26,040 --> 00:03:29,340
<font color="#E5E5E5">click this particular link here and you</font>

95
00:03:27,540 --> 00:03:32,190
will<font color="#E5E5E5"> be led to the</font><font color="#CCCCCC"> Google Doc where I</font>

96
00:03:29,340 --> 00:03:33,630
actually<font color="#E5E5E5"> in person debated with a core</font>

97
00:03:32,190 --> 00:03:35,250
team about whether this is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> security</font>

98
00:03:33,630 --> 00:03:37,140
<font color="#CCCCCC">issue or not</font><font color="#E5E5E5"> so food transparency have a</font>

99
00:03:35,250 --> 00:03:39,240
look at this thing it was<font color="#E5E5E5"> a little bit</font>

100
00:03:37,140 --> 00:03:41,040
frustrating but<font color="#E5E5E5"> it's still not personal</font>

101
00:03:39,240 --> 00:03:43,890
I think<font color="#CCCCCC"> so I'm just very interested in</font>

102
00:03:41,040 --> 00:03:45,989
<font color="#E5E5E5">this frame report it can do how it does</font>

103
00:03:43,890 --> 00:03:48,149
it and how this<font color="#E5E5E5"> actually effects</font>

104
00:03:45,990 --> 00:03:49,380
websites that<font color="#CCCCCC"> believed to be secure</font><font color="#E5E5E5"> but</font>

105
00:03:48,150 --> 00:03:52,530
all of a sudden they're not<font color="#CCCCCC"> anymore</font>

106
00:03:49,380 --> 00:03:54,120
because of this<font color="#E5E5E5"> framework so here you</font>

107
00:03:52,530 --> 00:03:56,490
<font color="#E5E5E5">can see a screenshot from a search</font>

108
00:03:54,120 --> 00:03:58,230
engine and<font color="#CCCCCC"> you can see what you find</font>

109
00:03:56,490 --> 00:03:59,760
first when you google<font color="#CCCCCC"> for angularjs</font><font color="#E5E5E5"> and</font>

110
00:03:58,230 --> 00:04:00,989
says<font color="#E5E5E5"> like yeah we are these</font><font color="#CCCCCC"> super heroic</font>

111
00:03:59,760 --> 00:04:03,540
<font color="#CCCCCC">javascript memory so they are</font><font color="#E5E5E5"> ready for</font>

112
00:04:00,990 --> 00:04:06,510
<font color="#CCCCCC">in some sense as you</font><font color="#E5E5E5"> can see a lot of</font>

113
00:04:03,540 --> 00:04:08,400
<font color="#CCCCCC">self-love superheroic and it's got a</font>

114
00:04:06,510 --> 00:04:10,049
polarizing philosophy so it changes<font color="#E5E5E5"> the</font>

115
00:04:08,400 --> 00:04:11,490
ways websites are working you cannot do

116
00:04:10,050 --> 00:04:13,650
<font color="#CCCCCC">certain things</font><font color="#E5E5E5"> anymore other things you</font>

117
00:04:11,490 --> 00:04:16,530
<font color="#CCCCCC">have to</font><font color="#E5E5E5"> do to make it work they break</font>

118
00:04:13,650 --> 00:04:19,200
the<font color="#CCCCCC"> API in that they offer very very</font>

119
00:04:16,529 --> 00:04:21,450
very<font color="#CCCCCC"> often so it's absolutely common</font><font color="#E5E5E5"> for</font>

120
00:04:19,200 --> 00:04:24,000
a minor release but a<font color="#E5E5E5"> couple of</font><font color="#CCCCCC"> ApS are</font>

121
00:04:21,450 --> 00:04:25,919
being<font color="#E5E5E5"> broken and if you follow the</font>

122
00:04:24,000 --> 00:04:26,710
<font color="#E5E5E5">change</font><font color="#CCCCCC"> log and just have a look at how</font>

123
00:04:25,919 --> 00:04:28,568
<font color="#E5E5E5">often they bro</font>

124
00:04:26,710 --> 00:04:30,940
the API in<font color="#E5E5E5"> the past you can see</font><font color="#CCCCCC"> should</font>

125
00:04:28,569 --> 00:04:33,280
<font color="#CCCCCC">use like search for</font><font color="#E5E5E5"> breaking is like 92</font>

126
00:04:30,940 --> 00:04:36,190
matches<font color="#E5E5E5"> so they broke the API like 92</font>

127
00:04:33,280 --> 00:04:37,479
<font color="#CCCCCC">freakin times that's incredible</font><font color="#E5E5E5"> so you</font>

128
00:04:36,190 --> 00:04:40,630
might get the feeling that they only

129
00:04:37,479 --> 00:04:42,490
break<font color="#E5E5E5"> the API because it's fun um they</font>

130
00:04:40,630 --> 00:04:45,190
do<font color="#E5E5E5"> we have the assumption</font><font color="#CCCCCC"> that hTML is</font>

131
00:04:42,490 --> 00:04:47,139
<font color="#E5E5E5">not capable of doing enough</font><font color="#CCCCCC"> they like</font>

132
00:04:45,190 --> 00:04:48,880
HTML but they<font color="#E5E5E5"> think yes still not enough</font>

133
00:04:47,139 --> 00:04:51,759
<font color="#E5E5E5">so there should be more power in HTML</font>

134
00:04:48,880 --> 00:04:54,430
<font color="#E5E5E5">more things should</font><font color="#CCCCCC"> be available to</font>

135
00:04:51,759 --> 00:04:56,889
<font color="#E5E5E5">developers</font><font color="#CCCCCC"> to be done declaratively</font>

136
00:04:54,430 --> 00:04:58,630
<font color="#E5E5E5">meaning I have a tag</font><font color="#CCCCCC"> I have an attribute</font>

137
00:04:56,889 --> 00:05:00,910
<font color="#CCCCCC">I put stuff in there</font><font color="#E5E5E5"> and the magic</font>

138
00:04:58,630 --> 00:05:03,340
happens but sometimes happens<font color="#E5E5E5"> in the</font>

139
00:05:00,910 --> 00:05:04,720
HTML world but<font color="#E5E5E5"> not always and so we need</font>

140
00:05:03,340 --> 00:05:06,369
<font color="#CCCCCC">JavaScript and this is like now this</font>

141
00:05:04,720 --> 00:05:08,169
should all be<font color="#E5E5E5"> handled by HTML so we need</font>

142
00:05:06,370 --> 00:05:10,410
sugar on top<font color="#CCCCCC"> of HTML we need new</font>

143
00:05:08,169 --> 00:05:13,240
attributes<font color="#E5E5E5"> relations inside</font><font color="#CCCCCC"> the HTML</font>

144
00:05:10,410 --> 00:05:15,400
structures and then magic<font color="#CCCCCC"> happens and it</font>

145
00:05:13,240 --> 00:05:17,979
did magic<font color="#CCCCCC"> does</font><font color="#E5E5E5"> happen with very few</font>

146
00:05:15,400 --> 00:05:24,280
things<font color="#E5E5E5"> you can invoke very powerful</font>

147
00:05:17,979 --> 00:05:25,270
features so again is angularjs<font color="#E5E5E5"> the honey</font>

148
00:05:24,280 --> 00:05:27,130
booboo<font color="#E5E5E5"> of motor view controller</font>

149
00:05:25,270 --> 00:05:29,198
frameworks<font color="#E5E5E5"> we don't know yet let's check</font>

150
00:05:27,130 --> 00:05:30,550
this out<font color="#E5E5E5"> they do have fairly high</font>

151
00:05:29,199 --> 00:05:33,669
security standards<font color="#CCCCCC"> so it's not about</font>

152
00:05:30,550 --> 00:05:35,470
bashing the framework here the<font color="#E5E5E5"> security</font>

153
00:05:33,669 --> 00:05:41,020
level is indeed great if developers

154
00:05:35,470 --> 00:05:44,530
follow the rules<font color="#E5E5E5"> and well the problem is</font>

155
00:05:41,020 --> 00:05:46,990
<font color="#E5E5E5">that the rules dictate that your web</font>

156
00:05:44,530 --> 00:05:48,820
application cannot<font color="#E5E5E5"> be like a classic</font><font color="#CCCCCC"> web</font>

157
00:05:46,990 --> 00:05:50,530
application<font color="#E5E5E5"> so this old thing where you</font>

158
00:05:48,820 --> 00:05:51,969
<font color="#CCCCCC">say</font><font color="#E5E5E5"> like hey I have a</font><font color="#CCCCCC"> cat</font><font color="#E5E5E5"> request and it</font>

159
00:05:50,530 --> 00:05:53,799
has parameters<font color="#E5E5E5"> and I send it to</font><font color="#CCCCCC"> the</font>

160
00:05:51,969 --> 00:05:55,840
<font color="#E5E5E5">server and the server</font><font color="#CCCCCC"> sends some stuff</font>

161
00:05:53,800 --> 00:05:56,979
back and there's like<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> input</font><font color="#CCCCCC"> as</font>

162
00:05:55,840 --> 00:05:58,810
mix with the output and with the

163
00:05:56,979 --> 00:06:00,789
structure<font color="#CCCCCC"> you can't do this anymore</font><font color="#E5E5E5"> you</font>

164
00:05:58,810 --> 00:06:02,259
<font color="#E5E5E5">have to separate stuff but who does it</font>

165
00:06:00,789 --> 00:06:05,520
<font color="#CCCCCC">in the first</font><font color="#E5E5E5"> place like few websites</font>

166
00:06:02,259 --> 00:06:08,860
<font color="#CCCCCC">actually strictly</font><font color="#E5E5E5"> and consequently do it</font>

167
00:06:05,520 --> 00:06:10,090
so what they and I mean the angular

168
00:06:08,860 --> 00:06:12,340
<font color="#E5E5E5">teams say on their website</font><font color="#CCCCCC"> is</font>

169
00:06:10,090 --> 00:06:14,590
essentially you can't do<font color="#E5E5E5"> anything</font>

170
00:06:12,340 --> 00:06:16,090
anymore that you<font color="#E5E5E5"> used to do with classic</font>

171
00:06:14,590 --> 00:06:17,469
<font color="#E5E5E5">web sites you cannot mix client and</font>

172
00:06:16,090 --> 00:06:19,479
<font color="#E5E5E5">server-side templates it's impossible</font>

173
00:06:17,469 --> 00:06:21,159
you can't do this<font color="#E5E5E5"> so there is no such</font>

174
00:06:19,479 --> 00:06:22,570
thing as reflection anymore you<font color="#CCCCCC"> can send</font>

175
00:06:21,159 --> 00:06:25,900
a get parameter and then<font color="#E5E5E5"> you get to get</font>

176
00:06:22,570 --> 00:06:28,150
parameter back<font color="#E5E5E5"> can't do it you can also</font>

177
00:06:25,900 --> 00:06:29,979
not generate<font color="#CCCCCC"> templates dynamically based</font>

178
00:06:28,150 --> 00:06:31,388
on user<font color="#CCCCCC"> input</font><font color="#E5E5E5"> in fact why that's an</font>

179
00:06:29,979 --> 00:06:32,620
awesome<font color="#E5E5E5"> feature I love to do that but</font>

180
00:06:31,389 --> 00:06:34,449
you can't like an angularjs

181
00:06:32,620 --> 00:06:36,430
<font color="#CCCCCC">you can't do that templates</font><font color="#E5E5E5"> have to be</font>

182
00:06:34,449 --> 00:06:37,690
static<font color="#CCCCCC"> of course they are usually</font><font color="#E5E5E5"> not</font>

183
00:06:36,430 --> 00:06:39,260
<font color="#E5E5E5">and that is where we come in as</font>

184
00:06:37,690 --> 00:06:40,880
<font color="#E5E5E5">attackers but at</font>

185
00:06:39,260 --> 00:06:44,090
the description says<font color="#E5E5E5"> somewhere you can't</font>

186
00:06:40,880 --> 00:06:45,980
do it<font color="#E5E5E5"> you should also not put user input</font>

187
00:06:44,090 --> 00:06:47,810
into scope eval<font color="#E5E5E5"> like really kind</font><font color="#CCCCCC"> of</font>

188
00:06:45,980 --> 00:06:49,580
Captain Obvious but<font color="#E5E5E5"> people do that we</font>

189
00:06:47,810 --> 00:06:51,620
see this all the<font color="#CCCCCC"> time</font><font color="#E5E5E5"> but you shouldn't</font>

190
00:06:49,580 --> 00:06:53,599
do that<font color="#E5E5E5"> and last but not least they</font>

191
00:06:51,620 --> 00:06:55,850
recommend to<font color="#CCCCCC"> use CSP</font><font color="#E5E5E5"> and it's kind of</font>

192
00:06:53,600 --> 00:06:57,920
special<font color="#CCCCCC"> because</font><font color="#E5E5E5"> they are capable and</font>

193
00:06:55,850 --> 00:06:59,510
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is one of the few defects where</font>

194
00:06:57,920 --> 00:07:01,220
this is the<font color="#E5E5E5"> case they are</font><font color="#CCCCCC"> capable</font><font color="#E5E5E5"> of</font>

195
00:06:59,510 --> 00:07:03,920
<font color="#E5E5E5">running on a website that</font><font color="#CCCCCC"> is utilizing</font>

196
00:07:01,220 --> 00:07:05,330
CSP most other frameworks<font color="#CCCCCC"> can't because</font>

197
00:07:03,920 --> 00:07:06,710
of internal<font color="#CCCCCC"> features but they can they</font>

198
00:07:05,330 --> 00:07:08,359
<font color="#E5E5E5">have a special mode that enables them to</font>

199
00:07:06,710 --> 00:07:09,919
run to<font color="#E5E5E5"> use or non-use</font><font color="#CCCCCC"> P enabled websites</font>

200
00:07:08,360 --> 00:07:11,780
we're gonna<font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> in a sec</font><font color="#CCCCCC"> we</font>

201
00:07:09,920 --> 00:07:13,820
will find this<font color="#E5E5E5"> thing on</font><font color="#CCCCCC"> darts</font><font color="#E5E5E5"> images or</font>

202
00:07:11,780 --> 00:07:15,500
<font color="#CCCCCC">guide security</font><font color="#E5E5E5"> it's not that super easy</font>

203
00:07:13,820 --> 00:07:16,849
<font color="#CCCCCC">to find</font><font color="#E5E5E5"> but at least they wrote it</font><font color="#CCCCCC"> down</font>

204
00:07:15,500 --> 00:07:18,440
at some<font color="#CCCCCC"> place and</font><font color="#E5E5E5"> you get some kind</font><font color="#CCCCCC"> of</font>

205
00:07:16,850 --> 00:07:21,140
picture<font color="#E5E5E5"> what they weren't from you and</font>

206
00:07:18,440 --> 00:07:23,180
<font color="#CCCCCC">whatnot</font><font color="#E5E5E5"> but now let me not</font><font color="#CCCCCC"> seen too</font>

207
00:07:21,140 --> 00:07:25,190
actually<font color="#CCCCCC"> some attacks</font><font color="#E5E5E5"> and the question</font>

208
00:07:23,180 --> 00:07:27,140
is this<font color="#E5E5E5"> topic is huge</font><font color="#CCCCCC"> Anglet is is huge</font>

209
00:07:25,190 --> 00:07:29,240
<font color="#CCCCCC">this you train berg</font><font color="#E5E5E5"> there are so many</font>

210
00:07:27,140 --> 00:07:30,500
attack vectors<font color="#E5E5E5"> and also depends on how</font>

211
00:07:29,240 --> 00:07:31,910
<font color="#CCCCCC">websites are using it what the</font>

212
00:07:30,500 --> 00:07:33,830
implementations are not<font color="#CCCCCC"> only on the</font>

213
00:07:31,910 --> 00:07:35,510
frameworks core and so on depends on

214
00:07:33,830 --> 00:07:37,099
plugins and<font color="#E5E5E5"> whatnot</font><font color="#CCCCCC"> so let's first</font>

215
00:07:35,510 --> 00:07:39,159
<font color="#CCCCCC">fracture the</font><font color="#E5E5E5"> whole thing and find out</font>

216
00:07:37,100 --> 00:07:42,140
what we actually<font color="#E5E5E5"> want to attack here</font>

217
00:07:39,160 --> 00:07:43,610
well there's<font color="#E5E5E5"> four nice vectors that are</font>

218
00:07:42,140 --> 00:07:44,659
really sticking out there's more<font color="#CCCCCC"> of</font>

219
00:07:43,610 --> 00:07:46,040
course<font color="#E5E5E5"> but those ones are really</font>

220
00:07:44,660 --> 00:07:48,890
sticking out<font color="#E5E5E5"> and we see them pretty</font><font color="#CCCCCC"> much</font>

221
00:07:46,040 --> 00:07:52,070
all the time<font color="#E5E5E5"> during our tests vector</font>

222
00:07:48,890 --> 00:07:54,349
number one they<font color="#CCCCCC"> have a sandbox and the</font>

223
00:07:52,070 --> 00:07:56,480
sandbox<font color="#E5E5E5"> is supposed to isolate</font>

224
00:07:54,350 --> 00:07:58,760
expressions<font color="#CCCCCC"> from the Dom</font><font color="#E5E5E5"> you want to</font>

225
00:07:56,480 --> 00:08:00,350
attack that<font color="#CCCCCC"> a-tech number two they</font><font color="#E5E5E5"> have</font>

226
00:07:58,760 --> 00:08:02,539
a sanitizer so they have a piece of<font color="#E5E5E5"> code</font>

227
00:08:00,350 --> 00:08:05,540
<font color="#CCCCCC">that allows you to pass in a string of</font>

228
00:08:02,540 --> 00:08:07,730
<font color="#CCCCCC">HTML and</font><font color="#E5E5E5"> what comes out is sanitize HTML</font>

229
00:08:05,540 --> 00:08:09,500
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is safe to use</font><font color="#E5E5E5"> that's a perfect</font>

230
00:08:07,730 --> 00:08:11,480
target<font color="#E5E5E5"> I love it already then they have</font>

231
00:08:09,500 --> 00:08:14,600
a CSP<font color="#E5E5E5"> mode</font><font color="#CCCCCC"> as mentioned so they allow</font>

232
00:08:11,480 --> 00:08:16,130
developers<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> both CSP and a fancy</font>

233
00:08:14,600 --> 00:08:17,990
framework and that<font color="#CCCCCC"> somehow goes together</font>

234
00:08:16,130 --> 00:08:20,810
<font color="#CCCCCC">but they also combine this with a</font>

235
00:08:17,990 --> 00:08:22,490
<font color="#E5E5E5">possibility</font><font color="#CCCCCC"> of still using inline events</font>

236
00:08:20,810 --> 00:08:23,780
and they're triggered markup so that

237
00:08:22,490 --> 00:08:25,790
sounds interesting we want to attack

238
00:08:23,780 --> 00:08:27,469
that<font color="#E5E5E5"> and last but not least I mentioned</font>

239
00:08:25,790 --> 00:08:30,110
<font color="#CCCCCC">there's a</font><font color="#E5E5E5"> lot of traction on their</font>

240
00:08:27,470 --> 00:08:31,940
<font color="#CCCCCC">github on their tracker with full</font>

241
00:08:30,110 --> 00:08:33,080
requests with<font color="#CCCCCC"> commits with tickets and</font>

242
00:08:31,940 --> 00:08:34,549
so on<font color="#CCCCCC"> we kind of want to</font><font color="#E5E5E5"> make use of</font>

243
00:08:33,080 --> 00:08:36,110
<font color="#CCCCCC">that we want</font><font color="#E5E5E5"> to attack the code base we</font>

244
00:08:34,549 --> 00:08:37,699
want<font color="#CCCCCC"> to be really nasty and</font><font color="#E5E5E5"> see if we</font>

245
00:08:36,110 --> 00:08:39,349
can<font color="#E5E5E5"> smarter something</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that is nasty</font>

246
00:08:37,700 --> 00:08:42,140
and<font color="#E5E5E5"> they won't</font><font color="#CCCCCC"> even notice there would</font>

247
00:08:39,349 --> 00:08:43,370
<font color="#E5E5E5">be vector number four so</font><font color="#CCCCCC"> let's have a</font>

248
00:08:42,140 --> 00:08:45,350
<font color="#E5E5E5">look at vector number one the sandbox</font>

249
00:08:43,370 --> 00:08:47,600
<font color="#CCCCCC">the sandbox is kind of a weird creature</font>

250
00:08:45,350 --> 00:08:49,160
because technically the<font color="#CCCCCC"> angularjs team</font>

251
00:08:47,600 --> 00:08:51,290
says like yeah it's not<font color="#E5E5E5"> a security</font>

252
00:08:49,160 --> 00:08:52,779
<font color="#E5E5E5">feature</font><font color="#CCCCCC"> don't use it as a</font><font color="#E5E5E5"> security</font>

253
00:08:51,290 --> 00:08:54,639
feature and they are right

254
00:08:52,779 --> 00:08:57,579
but everybody does that everybody

255
00:08:54,639 --> 00:09:00,730
assumes so and they kind<font color="#E5E5E5"> of based on</font>

256
00:08:57,579 --> 00:09:02,170
that have to<font color="#CCCCCC"> adjust</font><font color="#E5E5E5"> the sandbox so when</font>

257
00:09:00,730 --> 00:09:03,820
we first were confronted<font color="#E5E5E5"> with this thing</font>

258
00:09:02,170 --> 00:09:05,649
and had the possibility<font color="#CCCCCC"> to for example</font>

259
00:09:03,820 --> 00:09:08,459
play with<font color="#CCCCCC"> web sites using angularjs</font><font color="#E5E5E5"> and</font>

260
00:09:05,649 --> 00:09:11,829
very old versions<font color="#E5E5E5"> we saw that there is</font>

261
00:09:08,459 --> 00:09:13,660
possibilities to abuse an expression to

262
00:09:11,829 --> 00:09:15,399
actually get access<font color="#CCCCCC"> to window to the</font><font color="#E5E5E5"> DOM</font>

263
00:09:13,660 --> 00:09:18,250
and then execute arbitrary JavaScript

264
00:09:15,399 --> 00:09:20,410
<font color="#E5E5E5">and that was not the purpose like an</font>

265
00:09:18,250 --> 00:09:23,320
expression shouldn't do that so they

266
00:09:20,410 --> 00:09:24,790
were<font color="#E5E5E5"> trying to</font><font color="#CCCCCC"> protect against that they</font>

267
00:09:23,320 --> 00:09:26,709
say clearly<font color="#E5E5E5"> this is not a security</font>

268
00:09:24,790 --> 00:09:29,349
sandbox<font color="#CCCCCC"> you shouldn't rely</font><font color="#E5E5E5"> on this thing</font>

269
00:09:26,709 --> 00:09:31,029
it's only to get developers fingers off

270
00:09:29,350 --> 00:09:33,040
<font color="#E5E5E5">the Dom</font><font color="#CCCCCC"> because they don't want</font>

271
00:09:31,029 --> 00:09:35,019
developers<font color="#CCCCCC"> use Dom because</font><font color="#E5E5E5"> the Dom is</font>

272
00:09:33,040 --> 00:09:36,459
full of crap<font color="#E5E5E5"> and what they</font><font color="#CCCCCC"> actually want</font>

273
00:09:35,019 --> 00:09:38,470
to do is say let developers please use

274
00:09:36,459 --> 00:09:39,939
our API is they are a bit better and

275
00:09:38,470 --> 00:09:41,470
<font color="#E5E5E5">more structure but don't use</font><font color="#CCCCCC"> the Dom</font>

276
00:09:39,940 --> 00:09:44,889
because<font color="#E5E5E5"> you don't want to go there and</font>

277
00:09:41,470 --> 00:09:47,529
<font color="#CCCCCC">that</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of right so</font><font color="#E5E5E5"> we'd look at this</font>

278
00:09:44,889 --> 00:09:49,870
thing and despite them saying it's not<font color="#E5E5E5"> a</font>

279
00:09:47,529 --> 00:09:53,320
<font color="#E5E5E5">security feature we treated it as such</font>

280
00:09:49,870 --> 00:09:56,079
and<font color="#CCCCCC"> that made sense because</font><font color="#E5E5E5"> later</font><font color="#CCCCCC"> on</font>

281
00:09:53,320 --> 00:09:58,480
other people treated as such as well and

282
00:09:56,079 --> 00:10:00,430
we found<font color="#E5E5E5"> tons of XSS that otherwise</font>

283
00:09:58,480 --> 00:10:02,079
would<font color="#E5E5E5"> not have</font><font color="#CCCCCC"> been found</font><font color="#E5E5E5"> the first</font>

284
00:10:00,430 --> 00:10:04,120
<font color="#CCCCCC">bypasses were of course</font><font color="#E5E5E5"> trivial because</font>

285
00:10:02,079 --> 00:10:05,769
<font color="#E5E5E5">here you</font><font color="#CCCCCC"> can see an</font><font color="#E5E5E5"> expression starting</font>

286
00:10:04,120 --> 00:10:08,019
with double curlies<font color="#E5E5E5"> terminating with</font>

287
00:10:05,769 --> 00:10:10,300
double curlies<font color="#E5E5E5"> and you cannot just</font><font color="#CCCCCC"> go</font>

288
00:10:08,019 --> 00:10:12,730
there and<font color="#CCCCCC"> say</font><font color="#E5E5E5"> like alert</font><font color="#CCCCCC"> 1 you have to</font>

289
00:10:10,300 --> 00:10:14,949
<font color="#CCCCCC">do it in a</font><font color="#E5E5E5"> more sneaky way</font><font color="#CCCCCC"> so inside</font><font color="#E5E5E5"> the</font>

290
00:10:12,730 --> 00:10:16,420
expression<font color="#E5E5E5"> here the scope object</font><font color="#CCCCCC"> and the</font>

291
00:10:14,949 --> 00:10:17,829
scope object<font color="#E5E5E5"> is giving you a bunch of</font>

292
00:10:16,420 --> 00:10:20,019
<font color="#CCCCCC">functionality that the framework</font><font color="#E5E5E5"> offers</font>

293
00:10:17,829 --> 00:10:21,069
<font color="#CCCCCC">not too much but</font><font color="#E5E5E5"> a little bit just the</font>

294
00:10:20,019 --> 00:10:23,529
things that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> need inside an</font>

295
00:10:21,069 --> 00:10:24,579
expression but every scope object<font color="#CCCCCC"> array</font>

296
00:10:23,529 --> 00:10:27,000
of your object or<font color="#E5E5E5"> everything in</font>

297
00:10:24,579 --> 00:10:29,319
<font color="#E5E5E5">JavaScript usually has a constructor</font><font color="#CCCCCC"> and</font>

298
00:10:27,000 --> 00:10:31,120
the constructor of the scope<font color="#CCCCCC"> object was</font>

299
00:10:29,319 --> 00:10:32,229
object and then you<font color="#CCCCCC"> ask the Constructors</font>

300
00:10:31,120 --> 00:10:33,610
constructor with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> team</font><font color="#E5E5E5"> you the</font>

301
00:10:32,230 --> 00:10:35,470
function constructor and the function

302
00:10:33,610 --> 00:10:36,639
constructors equivalent to an eval so we

303
00:10:35,470 --> 00:10:38,199
can throw<font color="#E5E5E5"> in a string and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> you have</font>

304
00:10:36,639 --> 00:10:39,910
code execution<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> exactly what we</font>

305
00:10:38,199 --> 00:10:42,609
did<font color="#CCCCCC"> here it's like baby steps</font><font color="#E5E5E5"> so that</font>

306
00:10:39,910 --> 00:10:46,300
was easy<font color="#E5E5E5"> we've reported this and they</font>

307
00:10:42,610 --> 00:10:47,410
fixed it<font color="#E5E5E5"> and things were good so if you</font>

308
00:10:46,300 --> 00:10:48,790
want<font color="#E5E5E5"> to play with this</font><font color="#CCCCCC"> thing this is</font>

309
00:10:47,410 --> 00:10:50,199
<font color="#CCCCCC">like copy and paste ready you're just</font>

310
00:10:48,790 --> 00:10:52,000
like copy this thing paste it into<font color="#CCCCCC"> your</font>

311
00:10:50,199 --> 00:10:53,380
editor<font color="#CCCCCC"> double</font><font color="#E5E5E5"> check</font><font color="#CCCCCC"> it that I didn't</font>

312
00:10:52,000 --> 00:10:54,819
hide anything in there and then you

313
00:10:53,380 --> 00:10:56,319
execute<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and you will see an</font><font color="#CCCCCC"> alert I</font>

314
00:10:54,819 --> 00:10:57,579
think you will even<font color="#E5E5E5"> see two alerts</font>

315
00:10:56,319 --> 00:11:01,120
because<font color="#E5E5E5"> the</font><font color="#CCCCCC"> positive was broken back</font>

316
00:10:57,579 --> 00:11:02,560
<font color="#E5E5E5">then but better</font><font color="#CCCCCC"> true</font><font color="#E5E5E5"> than none so as</font>

317
00:11:01,120 --> 00:11:04,750
mentioned<font color="#E5E5E5"> they fix that and they made</font>

318
00:11:02,560 --> 00:11:05,550
the sandbox a bit stronger<font color="#CCCCCC"> and said like</font>

319
00:11:04,750 --> 00:11:07,830
okay<font color="#E5E5E5"> the</font>

320
00:11:05,550 --> 00:11:09,300
see the constructor<font color="#E5E5E5"> let's</font><font color="#CCCCCC"> sax we kind of</font>

321
00:11:07,830 --> 00:11:10,709
need to prohibit<font color="#CCCCCC"> access to the function</font>

322
00:11:09,300 --> 00:11:12,779
constructor because function constructor

323
00:11:10,709 --> 00:11:14,640
is evil<font color="#E5E5E5"> and gives us access to the</font>

324
00:11:12,779 --> 00:11:16,890
global<font color="#E5E5E5"> object from anywhere in the</font><font color="#CCCCCC"> Dom</font>

325
00:11:14,640 --> 00:11:18,240
<font color="#E5E5E5">so we need to prohibit</font><font color="#CCCCCC"> that and make</font>

326
00:11:16,890 --> 00:11:22,230
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> that no one can use the function</font>

327
00:11:18,240 --> 00:11:23,430
constructor<font color="#E5E5E5"> and they did that then other</font>

328
00:11:22,230 --> 00:11:26,399
<font color="#CCCCCC">people had a</font><font color="#E5E5E5"> look at this thing and</font>

329
00:11:23,430 --> 00:11:28,529
found<font color="#E5E5E5"> bypasses</font><font color="#CCCCCC"> John Horhn</font><font color="#E5E5E5"> with his</font>

330
00:11:26,399 --> 00:11:29,760
<font color="#CCCCCC">Carleton cover Molinaro Gareth</font><font color="#E5E5E5"> Hayes</font>

331
00:11:28,529 --> 00:11:32,220
a lot of people<font color="#CCCCCC"> have developed</font><font color="#E5E5E5"> this</font>

332
00:11:29,760 --> 00:11:33,540
<font color="#E5E5E5">thing including myself</font><font color="#CCCCCC"> and we all had</font>

333
00:11:32,220 --> 00:11:35,100
the same goal because we<font color="#E5E5E5"> wanted to get</font>

334
00:11:33,540 --> 00:11:36,599
around that limitation<font color="#E5E5E5"> of not being able</font>

335
00:11:35,100 --> 00:11:38,579
to<font color="#E5E5E5"> use the function constructor anymore</font>

336
00:11:36,600 --> 00:11:40,200
but find different ways<font color="#E5E5E5"> here is</font>

337
00:11:38,579 --> 00:11:41,880
something<font color="#CCCCCC"> that Y</font><font color="#E5E5E5"> and it it looks</font>

338
00:11:40,200 --> 00:11:43,230
complicated<font color="#CCCCCC"> but if you actually</font><font color="#E5E5E5"> have a</font>

339
00:11:41,880 --> 00:11:45,810
<font color="#E5E5E5">look at this thing</font><font color="#CCCCCC"> step-by-step it's</font>

340
00:11:43,230 --> 00:11:47,610
fairly<font color="#E5E5E5"> trivial so you see the opening</font>

341
00:11:45,810 --> 00:11:50,399
curly zag<font color="#E5E5E5"> and closing curly then you see</font>

342
00:11:47,610 --> 00:11:52,380
a<font color="#E5E5E5"> variety take an empty string we</font><font color="#CCCCCC"> take</font>

343
00:11:50,399 --> 00:11:54,450
the sub method of that<font color="#E5E5E5"> empty string then</font>

344
00:11:52,380 --> 00:11:56,189
we access call and then call<font color="#CCCCCC"> off the</font>

345
00:11:54,450 --> 00:11:58,230
call function<font color="#E5E5E5"> and we throw them some in</font>

346
00:11:56,190 --> 00:11:59,940
that<font color="#CCCCCC"> is trying</font><font color="#E5E5E5"> to give us the</font>

347
00:11:58,230 --> 00:12:02,029
constructor<font color="#CCCCCC"> where</font><font color="#E5E5E5"> get on property</font>

348
00:11:59,940 --> 00:12:04,529
descriptor<font color="#CCCCCC"> and the value and then we</font>

349
00:12:02,029 --> 00:12:06,029
<font color="#E5E5E5">receive the function constructor we</font>

350
00:12:04,529 --> 00:12:07,860
throw in the alert<font color="#E5E5E5"> one we execute the</font>

351
00:12:06,029 --> 00:12:09,060
whole thing and done sandbox<font color="#CCCCCC"> bypassed</font><font color="#E5E5E5"> so</font>

352
00:12:07,860 --> 00:12:11,100
in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> particular situation</font><font color="#E5E5E5"> the</font>

353
00:12:09,060 --> 00:12:12,989
framework<font color="#E5E5E5"> would not</font><font color="#CCCCCC"> notice that</font><font color="#E5E5E5"> we're</font>

354
00:12:11,100 --> 00:12:15,779
actually secretly accessing the function

355
00:12:12,990 --> 00:12:18,779
constructor but be fine with it because

356
00:12:15,779 --> 00:12:21,270
<font color="#E5E5E5">we were accessing it via the return</font>

357
00:12:18,779 --> 00:12:22,829
value of this<font color="#E5E5E5"> operation here so</font>

358
00:12:21,270 --> 00:12:26,279
framework didn't notice that<font color="#E5E5E5"> so they had</font>

359
00:12:22,829 --> 00:12:27,569
to<font color="#E5E5E5"> fix this then I had a</font><font color="#CCCCCC"> look at</font><font color="#E5E5E5"> this</font>

360
00:12:26,279 --> 00:12:29,970
<font color="#E5E5E5">thing because we were testing against</font><font color="#CCCCCC"> a</font>

361
00:12:27,570 --> 00:12:32,070
website that<font color="#E5E5E5"> was using a specific minor</font>

362
00:12:29,970 --> 00:12:35,459
version of angularjs where they changed

363
00:12:32,070 --> 00:12:37,680
the sandbox<font color="#E5E5E5"> so before that the sandbox</font>

364
00:12:35,459 --> 00:12:39,839
<font color="#E5E5E5">was more strict with 1.2.0</font>

365
00:12:37,680 --> 00:12:41,130
then it was in<font color="#CCCCCC"> 1.2</font><font color="#E5E5E5"> point 18 because</font>

366
00:12:39,839 --> 00:12:41,760
developers were complaining that it's

367
00:12:41,130 --> 00:12:43,079
too<font color="#CCCCCC"> strict</font>

368
00:12:41,760 --> 00:12:45,300
so they had to<font color="#E5E5E5"> kind of follow two goals</font>

369
00:12:43,079 --> 00:12:47,010
<font color="#E5E5E5">on the one hand as annoying them</font>

370
00:12:45,300 --> 00:12:48,300
constantly<font color="#E5E5E5"> with new bypasses on the</font>

371
00:12:47,010 --> 00:12:49,890
other hand<font color="#CCCCCC"> developer select</font><font color="#E5E5E5"> this thing</font>

372
00:12:48,300 --> 00:12:51,120
is too strict now what were you<font color="#E5E5E5"> doing so</font>

373
00:12:49,890 --> 00:12:51,270
there was not a nice<font color="#CCCCCC"> position that were</font>

374
00:12:51,120 --> 00:12:54,149
in

375
00:12:51,270 --> 00:12:56,339
I realized that in<font color="#CCCCCC"> 1.2.0</font><font color="#E5E5E5"> we couldn't use</font>

376
00:12:54,149 --> 00:12:59,040
<font color="#CCCCCC">yundt exploit so we</font><font color="#E5E5E5"> couldn't just like</font>

377
00:12:56,339 --> 00:13:00,690
access and Roscoe Roscoe proto<font color="#E5E5E5"> and there</font>

378
00:12:59,040 --> 00:13:02,849
must<font color="#E5E5E5"> like</font><font color="#CCCCCC"> ok when you can't access</font>

379
00:13:00,690 --> 00:13:04,110
underscore<font color="#CCCCCC"> nesco proto you just get</font>

380
00:13:02,850 --> 00:13:05,790
prototype off and then you<font color="#E5E5E5"> have the same</font>

381
00:13:04,110 --> 00:13:07,350
<font color="#E5E5E5">result</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that is equivalent and it</font>

382
00:13:05,790 --> 00:13:09,060
popped<font color="#E5E5E5"> the alert and everything was</font><font color="#CCCCCC"> fine</font>

383
00:13:07,350 --> 00:13:09,750
but other than that it's<font color="#E5E5E5"> pretty much the</font>

384
00:13:09,060 --> 00:13:12,540
<font color="#CCCCCC">same thing</font>

385
00:13:09,750 --> 00:13:14,430
of course they fix that<font color="#E5E5E5"> then Matthias</font>

386
00:13:12,540 --> 00:13:16,500
<font color="#E5E5E5">Carlson came and said like yeah hmm what</font>

387
00:13:14,430 --> 00:13:18,800
about called X called X<font color="#E5E5E5"> are awesome no</font>

388
00:13:16,500 --> 00:13:20,869
one has a look at called X these days

389
00:13:18,800 --> 00:13:22,910
so he took<font color="#E5E5E5"> the two string</font><font color="#CCCCCC"> property of</font>

390
00:13:20,869 --> 00:13:24,050
the scope object<font color="#CCCCCC"> access</font><font color="#E5E5E5"> the constructor</font>

391
00:13:22,910 --> 00:13:25,639
accessed the prototype<font color="#CCCCCC"> of the</font>

392
00:13:24,050 --> 00:13:28,069
constructor<font color="#CCCCCC"> and then access to string</font>

393
00:13:25,639 --> 00:13:29,869
again and assigning<font color="#E5E5E5"> something else to it</font>

394
00:13:28,069 --> 00:13:31,279
<font color="#E5E5E5">so basically</font><font color="#CCCCCC"> he's making</font><font color="#E5E5E5"> sure that</font>

395
00:13:29,869 --> 00:13:33,350
<font color="#E5E5E5">whenever two string or an implicit</font>

396
00:13:31,279 --> 00:13:34,790
string<font color="#CCCCCC"> if ocation happens then it does</font>

397
00:13:33,350 --> 00:13:36,439
something<font color="#CCCCCC"> completely different than</font>

398
00:13:34,790 --> 00:13:38,899
<font color="#E5E5E5">actually string defying because what it</font>

399
00:13:36,439 --> 00:13:40,129
actually does is executing call<font color="#E5E5E5"> you</font>

400
00:13:38,899 --> 00:13:42,170
could have even<font color="#CCCCCC"> abridged it a little</font><font color="#E5E5E5"> bit</font>

401
00:13:40,129 --> 00:13:43,879
but<font color="#CCCCCC"> Edwards working and it was</font>

402
00:13:42,170 --> 00:13:45,439
overwriting<font color="#CCCCCC"> the string if ocation</font>

403
00:13:43,879 --> 00:13:47,600
changing it to<font color="#CCCCCC"> something else to an</font>

404
00:13:45,439 --> 00:13:49,069
actual call<font color="#E5E5E5"> then he formed an array in</font>

405
00:13:47,600 --> 00:13:51,049
this area had one useless<font color="#E5E5E5"> element we</font>

406
00:13:49,069 --> 00:13:53,748
just<font color="#E5E5E5"> needed for sorting and one active</font>

407
00:13:51,049 --> 00:13:55,459
<font color="#E5E5E5">string that this later being executed he</font>

408
00:13:53,749 --> 00:13:57,920
sorts the whole thing and he defines a

409
00:13:55,459 --> 00:13:59,209
callback function for the salt operation

410
00:13:57,920 --> 00:14:00,679
which is<font color="#CCCCCC"> then</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> true string</font>

411
00:13:59,209 --> 00:14:02,209
constructor which is overwritten here

412
00:14:00,679 --> 00:14:05,480
giving us the function constructor<font color="#CCCCCC"> and</font>

413
00:14:02,209 --> 00:14:07,819
<font color="#CCCCCC">we have a bypass</font><font color="#E5E5E5"> of course they fixed it</font>

414
00:14:05,480 --> 00:14:09,850
then kaboom owner came and<font color="#E5E5E5"> developed</font>

415
00:14:07,819 --> 00:14:12,439
<font color="#E5E5E5">something similar</font><font color="#CCCCCC"> he</font><font color="#E5E5E5"> basically said okay</font>

416
00:14:09,850 --> 00:14:12,829
this little JavaScript thing that's too

417
00:14:12,439 --> 00:14:14,299
easy

418
00:14:12,829 --> 00:14:17,089
<font color="#CCCCCC">in this</font><font color="#E5E5E5"> that's gonna be some other way</font>

419
00:14:14,299 --> 00:14:18,980
<font color="#CCCCCC">to break the sandbox so the first ten</font>

420
00:14:17,089 --> 00:14:20,779
<font color="#E5E5E5">bots bypasses that we saw were like</font>

421
00:14:18,980 --> 00:14:23,509
<font color="#CCCCCC">first generation bypasses because they</font>

422
00:14:20,779 --> 00:14:25,220
modify the<font color="#CCCCCC"> DOM and</font><font color="#E5E5E5"> only the Dom this is</font>

423
00:14:23,509 --> 00:14:26,899
the first second generation bypass

424
00:14:25,220 --> 00:14:29,329
because<font color="#E5E5E5"> it modifies the internal</font>

425
00:14:26,899 --> 00:14:31,759
functionality of the framework so here's

426
00:14:29,329 --> 00:14:33,498
a look what he can<font color="#E5E5E5"> access at in the</font>

427
00:14:31,759 --> 00:14:35,179
scope<font color="#CCCCCC"> object and then he messes with</font><font color="#E5E5E5"> the</font>

428
00:14:33,499 --> 00:14:37,189
scope object changes<font color="#E5E5E5"> things and</font>

429
00:14:35,179 --> 00:14:39,350
<font color="#E5E5E5">eventually gets a free function</font>

430
00:14:37,189 --> 00:14:41,480
constructor<font color="#E5E5E5"> so the first bypass that is</font>

431
00:14:39,350 --> 00:14:43,549
actually modifying the framework

432
00:14:41,480 --> 00:14:46,790
internals itself and not<font color="#E5E5E5"> the Dom anymore</font>

433
00:14:43,549 --> 00:14:48,799
that's like generation<font color="#CCCCCC"> two then there</font>

434
00:14:46,790 --> 00:14:50,118
was another<font color="#E5E5E5"> one that was involving event</font>

435
00:14:48,799 --> 00:14:52,160
interactions the enemy found<font color="#E5E5E5"> this thing</font>

436
00:14:50,119 --> 00:14:53,809
<font color="#E5E5E5">so you</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> have a piece of markup</font>

437
00:14:52,160 --> 00:14:55,670
and<font color="#E5E5E5"> here you can nicely see this kind of</font>

438
00:14:53,809 --> 00:14:57,709
<font color="#E5E5E5">sugar ring this kind of extending markup</font>

439
00:14:55,670 --> 00:14:59,540
and<font color="#E5E5E5"> the features</font><font color="#CCCCCC"> there off</font><font color="#E5E5E5"> because you</font>

440
00:14:57,709 --> 00:15:01,518
<font color="#E5E5E5">have an</font><font color="#CCCCCC"> NG - app attribute and</font><font color="#E5E5E5"> then you</font>

441
00:14:59,540 --> 00:15:03,379
have<font color="#CCCCCC"> an energy focus attribute let us</font>

442
00:15:01,519 --> 00:15:04,790
actually define a non focus event it's

443
00:15:03,379 --> 00:15:06,049
<font color="#E5E5E5">just called differently and</font><font color="#CCCCCC"> processed</font>

444
00:15:04,790 --> 00:15:08,599
differently but that's<font color="#E5E5E5"> the very</font><font color="#CCCCCC"> same</font>

445
00:15:06,049 --> 00:15:09,889
<font color="#E5E5E5">thing it's just an event enter and we</font>

446
00:15:08,600 --> 00:15:11,449
see<font color="#CCCCCC"> that we access the dollar event</font>

447
00:15:09,889 --> 00:15:12,949
<font color="#CCCCCC">object and we access view which is</font>

448
00:15:11,449 --> 00:15:14,628
window then we<font color="#E5E5E5"> access location let me</font>

449
00:15:12,949 --> 00:15:16,639
access replace the sandbox doesn't care

450
00:15:14,629 --> 00:15:19,040
will throw<font color="#E5E5E5"> JavaScript</font><font color="#CCCCCC"> or I</font><font color="#E5E5E5"> and we make</font>

451
00:15:16,639 --> 00:15:21,079
the whole thing<font color="#E5E5E5"> editable we attach the</font>

452
00:15:19,040 --> 00:15:23,360
<font color="#E5E5E5">ID of</font><font color="#CCCCCC"> the element which is</font><font color="#E5E5E5"> through to</font>

453
00:15:21,079 --> 00:15:25,459
the<font color="#E5E5E5"> URL and then</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> autofocuses and then</font>

454
00:15:23,360 --> 00:15:27,679
the JavaScript executes because focus

455
00:15:25,459 --> 00:15:28,849
event event<font color="#CCCCCC"> view viewers window location</font>

456
00:15:27,679 --> 00:15:32,350
replace<font color="#E5E5E5"> and there we go</font>

457
00:15:28,850 --> 00:15:32,350
still trivial<font color="#E5E5E5"> Oh</font>

458
00:15:32,380 --> 00:15:37,990
they fix that<font color="#E5E5E5"> and then it got seemingly</font>

459
00:15:35,770 --> 00:15:40,360
hard to<font color="#E5E5E5"> actually attack this damn</font>

460
00:15:37,990 --> 00:15:41,740
sandbox<font color="#E5E5E5"> because they really put a lot of</font>

461
00:15:40,360 --> 00:15:44,110
effort into this I'm not<font color="#E5E5E5"> sure how much</font>

462
00:15:41,740 --> 00:15:46,450
they<font color="#CCCCCC"> spent on that but it</font><font color="#E5E5E5"> certainly</font>

463
00:15:44,110 --> 00:15:49,450
wasn't cheap<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Yan's next bypass looks</font>

464
00:15:46,450 --> 00:15:50,680
like this<font color="#CCCCCC"> I'm totally not interested</font><font color="#E5E5E5"> in</font>

465
00:15:49,450 --> 00:15:52,210
expanding this<font color="#CCCCCC"> thing to you right now</font>

466
00:15:50,680 --> 00:15:54,130
because partly<font color="#CCCCCC"> I don't understand it</font>

467
00:15:52,210 --> 00:15:56,080
<font color="#E5E5E5">myself which is</font><font color="#CCCCCC"> okay I don't</font><font color="#E5E5E5"> feel bad</font>

468
00:15:54,130 --> 00:15:58,510
<font color="#CCCCCC">about this it's perfectly fine and we</font>

469
00:15:56,080 --> 00:16:00,220
don't have<font color="#E5E5E5"> the time but he does the same</font>

470
00:15:58,510 --> 00:16:02,170
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> that gabbard it essentially so he</font>

471
00:16:00,220 --> 00:16:03,730
modifies the internals of<font color="#CCCCCC"> the framework</font>

472
00:16:02,170 --> 00:16:05,589
piece by piece<font color="#CCCCCC"> lovely</font><font color="#E5E5E5"> there's a little</font>

473
00:16:03,730 --> 00:16:07,180
bit<font color="#CCCCCC"> Heelys a little bit there but it's</font>

474
00:16:05,590 --> 00:16:09,220
one<font color="#E5E5E5"> of the last and the most complex</font>

475
00:16:07,180 --> 00:16:10,870
<font color="#E5E5E5">second generation exploits on the second</font>

476
00:16:09,220 --> 00:16:12,610
generation sandbox bypasses and

477
00:16:10,870 --> 00:16:13,900
eventually you of course<font color="#E5E5E5"> gets the</font>

478
00:16:12,610 --> 00:16:16,810
function constructor he throws a string

479
00:16:13,900 --> 00:16:20,470
and then that happens<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> reported</font>

480
00:16:16,810 --> 00:16:22,479
and<font color="#E5E5E5"> I fixed it so meanwhile this thing</font>

481
00:16:20,470 --> 00:16:24,850
is<font color="#E5E5E5"> pretty tight you</font><font color="#CCCCCC"> can't have access to</font>

482
00:16:22,480 --> 00:16:26,530
window<font color="#CCCCCC"> to kind of access to function</font><font color="#E5E5E5"> you</font>

483
00:16:24,850 --> 00:16:29,410
can't have<font color="#CCCCCC"> access to object because X</font>

484
00:16:26,530 --> 00:16:30,939
<font color="#CCCCCC">could 5 no call now applying or document</font>

485
00:16:29,410 --> 00:16:32,650
no Dom nodes nothing like everything is

486
00:16:30,940 --> 00:16:34,780
blocked in the<font color="#E5E5E5"> sandbox and apparently it</font>

487
00:16:32,650 --> 00:16:36,189
looked quite secure but was<font color="#E5E5E5"> that already</font>

488
00:16:34,780 --> 00:16:37,959
the end<font color="#CCCCCC"> of the road</font><font color="#E5E5E5"> let's have a look</font><font color="#CCCCCC"> of</font>

489
00:16:36,190 --> 00:16:41,260
course it was<font color="#E5E5E5"> not this is</font><font color="#CCCCCC"> Young's</font><font color="#E5E5E5"> next</font>

490
00:16:37,960 --> 00:16:43,390
bypass and he<font color="#CCCCCC"> basically makes again use</font>

491
00:16:41,260 --> 00:16:45,580
of the internal<font color="#CCCCCC"> trina fication features</font>

492
00:16:43,390 --> 00:16:48,220
but he does two things<font color="#CCCCCC"> he attacks both</font>

493
00:16:45,580 --> 00:16:49,660
the framework or and the<font color="#CCCCCC"> Dom</font><font color="#E5E5E5"> sort of</font>

494
00:16:48,220 --> 00:16:51,130
<font color="#E5E5E5">like the first generation free bypass</font>

495
00:16:49,660 --> 00:16:53,800
<font color="#E5E5E5">how to say because he first says like</font>

496
00:16:51,130 --> 00:16:55,810
<font color="#CCCCCC">hey</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> just take a number</font><font color="#E5E5E5"> and then I kind</font>

497
00:16:53,800 --> 00:16:57,459
<font color="#CCCCCC">of</font><font color="#E5E5E5"> bypass the sandbox by still accessing</font>

498
00:16:55,810 --> 00:16:59,619
Una's cuantas copas<font color="#E5E5E5"> underscore with this</font>

499
00:16:57,460 --> 00:17:01,000
double index trick then I'm overwriting

500
00:16:59,620 --> 00:17:02,590
<font color="#E5E5E5">the two string method then I'm doing</font>

501
00:17:01,000 --> 00:17:04,119
some stuff<font color="#CCCCCC"> here then I call for an</font>

502
00:17:02,590 --> 00:17:06,190
<font color="#CCCCCC">implicit unification that is happening</font>

503
00:17:04,119 --> 00:17:09,339
inside<font color="#E5E5E5"> the eval which is then calling</font>

504
00:17:06,190 --> 00:17:10,780
the pop method that is then expecting a

505
00:17:09,339 --> 00:17:13,389
<font color="#CCCCCC">callback and the callback is the</font>

506
00:17:10,780 --> 00:17:15,790
function constructor and again we have

507
00:17:13,390 --> 00:17:17,500
JavaScript that<font color="#E5E5E5"> is popped I think this</font>

508
00:17:15,790 --> 00:17:19,089
is<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> the exploit that</font><font color="#CCCCCC"> Nicholas</font>

509
00:17:17,500 --> 00:17:23,859
<font color="#CCCCCC">was using yesterday in</font><font color="#E5E5E5"> his presentation</font>

510
00:17:19,089 --> 00:17:25,899
<font color="#E5E5E5">and it's pretty nice so then Gareth came</font>

511
00:17:23,859 --> 00:17:28,179
and had a<font color="#E5E5E5"> look at this things like</font><font color="#CCCCCC"> all</font>

512
00:17:25,900 --> 00:17:29,920
<font color="#E5E5E5">those sandbox bypasses are super</font>

513
00:17:28,180 --> 00:17:30,940
<font color="#CCCCCC">complicated let's just like have a look</font>

514
00:17:29,920 --> 00:17:32,470
at a<font color="#E5E5E5"> different thing</font><font color="#CCCCCC"> and he was</font><font color="#E5E5E5"> the</font>

515
00:17:30,940 --> 00:17:35,890
<font color="#E5E5E5">first one to have a look at</font><font color="#CCCCCC"> dollar eval</font>

516
00:17:32,470 --> 00:17:37,690
and he realized that<font color="#E5E5E5"> dollar eval that</font><font color="#CCCCCC"> is</font>

517
00:17:35,890 --> 00:17:40,030
always<font color="#CCCCCC"> available in the scope it's</font>

518
00:17:37,690 --> 00:17:42,220
always there by<font color="#CCCCCC"> default</font><font color="#E5E5E5"> does a certain</font>

519
00:17:40,030 --> 00:17:44,649
<font color="#E5E5E5">thing because it does check for certain</font>

520
00:17:42,220 --> 00:17:46,000
<font color="#CCCCCC">characters upon parsing the string and</font>

521
00:17:44,650 --> 00:17:48,070
it does so

522
00:17:46,000 --> 00:17:49,690
using the chart method<font color="#CCCCCC"> and when the</font>

523
00:17:48,070 --> 00:17:51,639
chart method would find a character<font color="#E5E5E5"> that</font>

524
00:17:49,690 --> 00:17:53,140
kind<font color="#E5E5E5"> of implied</font><font color="#CCCCCC"> that something bad</font><font color="#E5E5E5"> a</font>

525
00:17:51,640 --> 00:17:54,430
<font color="#E5E5E5">fishy is going on it would say like no</font>

526
00:17:53,140 --> 00:17:57,430
you can't do this<font color="#E5E5E5"> this looks dangerous</font>

527
00:17:54,430 --> 00:17:58,990
don't so he said like okay<font color="#E5E5E5"> let's just</font>

528
00:17:57,430 --> 00:18:00,310
like<font color="#CCCCCC"> overwrite char ad so it</font>

529
00:17:58,990 --> 00:18:02,530
takes a<font color="#E5E5E5"> string you</font><font color="#CCCCCC"> access</font><font color="#E5E5E5"> the</font>

530
00:18:00,310 --> 00:18:04,629
constructor the prototype<font color="#E5E5E5"> the char at he</font>

531
00:18:02,530 --> 00:18:06,879
assigns<font color="#CCCCCC"> error</font><font color="#E5E5E5"> joined to this</font><font color="#CCCCCC"> to char at</font>

532
00:18:04,630 --> 00:18:08,950
always returns true and in addition as a

533
00:18:06,880 --> 00:18:10,690
free feature concatenates<font color="#E5E5E5"> what is being</font>

534
00:18:08,950 --> 00:18:13,870
<font color="#E5E5E5">passed in this thing going directly into</font>

535
00:18:10,690 --> 00:18:16,660
<font color="#E5E5E5">the eval and then the alert pops so he</font>

536
00:18:13,870 --> 00:18:18,879
reported that<font color="#E5E5E5"> and it took a long time it</font>

537
00:18:16,660 --> 00:18:20,380
took<font color="#E5E5E5"> pretty much 120 days for them to</font>

538
00:18:18,880 --> 00:18:24,150
fix that<font color="#E5E5E5"> I mean like why is it</font><font color="#CCCCCC"> taking so</font>

539
00:18:20,380 --> 00:18:29,170
long<font color="#E5E5E5"> and well they eventually fixed it</font>

540
00:18:24,150 --> 00:18:32,350
but<font color="#CCCCCC"> I had a look at the fix and the fix</font>

541
00:18:29,170 --> 00:18:35,290
<font color="#E5E5E5">was terrible it was ridiculous</font><font color="#CCCCCC"> I leave</font>

542
00:18:32,350 --> 00:18:38,379
it to you as an<font color="#CCCCCC"> exercise</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> bypass this</font>

543
00:18:35,290 --> 00:18:39,460
fix<font color="#E5E5E5"> I think you can do it so you will</font>

544
00:18:38,380 --> 00:18:43,180
<font color="#E5E5E5">find the</font><font color="#CCCCCC"> slides</font><font color="#E5E5E5"> very soon they're</font>

545
00:18:39,460 --> 00:18:45,220
already<font color="#CCCCCC"> online and it can be done we had</font>

546
00:18:43,180 --> 00:18:47,440
the bypass<font color="#E5E5E5"> after about</font><font color="#CCCCCC"> 10 minutes</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it</font>

547
00:18:45,220 --> 00:18:49,150
was like<font color="#CCCCCC"> very nice and I treated that</font><font color="#E5E5E5"> we</font>

548
00:18:47,440 --> 00:18:51,220
have a bypass<font color="#E5E5E5"> and then someone</font><font color="#CCCCCC"> from the</font>

549
00:18:49,150 --> 00:18:52,540
core team<font color="#CCCCCC"> approached me and say like do</font>

550
00:18:51,220 --> 00:18:55,780
you want<font color="#CCCCCC"> to share</font><font color="#E5E5E5"> this thing so we</font><font color="#CCCCCC"> can</font>

551
00:18:52,540 --> 00:18:57,780
fix<font color="#E5E5E5"> it and I said no I hope I'm having</font>

552
00:18:55,780 --> 00:19:00,220
<font color="#E5E5E5">I'm gonna have enough time in the</font>

553
00:18:57,780 --> 00:19:01,750
minutes after<font color="#E5E5E5"> the talk to explain why I</font>

554
00:19:00,220 --> 00:19:03,310
say<font color="#E5E5E5"> no and how this whole thing ended</font>

555
00:19:01,750 --> 00:19:04,300
but<font color="#CCCCCC"> I think it's important but let's</font>

556
00:19:03,310 --> 00:19:07,300
let's wait with that<font color="#E5E5E5"> for now</font>

557
00:19:04,300 --> 00:19:10,419
<font color="#E5E5E5">but the bypass is there we have</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> it's</font>

558
00:19:07,300 --> 00:19:12,159
fairly<font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> find and the team is okay</font>

559
00:19:10,420 --> 00:19:14,950
<font color="#E5E5E5">with us not reporting this but more</font>

560
00:19:12,160 --> 00:19:16,780
<font color="#E5E5E5">about this there any other there's of</font>

561
00:19:14,950 --> 00:19:18,970
course ways to abuse user interaction to

562
00:19:16,780 --> 00:19:20,530
bypass the sandbox<font color="#CCCCCC"> um I had a</font><font color="#E5E5E5"> little</font>

563
00:19:18,970 --> 00:19:22,720
fetish for copy<font color="#E5E5E5"> and paste for quite some</font>

564
00:19:20,530 --> 00:19:24,580
time<font color="#CCCCCC"> and build something that is</font><font color="#E5E5E5"> using</font>

565
00:19:22,720 --> 00:19:26,260
an NG copy event and then modifying the

566
00:19:24,580 --> 00:19:27,280
content of the<font color="#E5E5E5"> clipboard and then you</font>

567
00:19:26,260 --> 00:19:28,660
have<font color="#E5E5E5"> something</font><font color="#CCCCCC"> completely different in</font>

568
00:19:27,280 --> 00:19:30,550
the clipboard<font color="#CCCCCC"> you put it</font><font color="#E5E5E5"> into the Dom</font>

569
00:19:28,660 --> 00:19:32,770
when you<font color="#E5E5E5"> paste it and angularjs does the</font>

570
00:19:30,550 --> 00:19:34,180
magic<font color="#CCCCCC"> here so that works as well and I</font>

571
00:19:32,770 --> 00:19:35,590
<font color="#E5E5E5">think it's still working in chrome</font><font color="#CCCCCC"> and</font>

572
00:19:34,180 --> 00:19:37,690
in Firefox maybe in<font color="#CCCCCC"> chrome not</font><font color="#E5E5E5"> anymore</font>

573
00:19:35,590 --> 00:19:42,370
<font color="#CCCCCC">because I think they fix the copy</font><font color="#E5E5E5"> and</font>

574
00:19:37,690 --> 00:19:44,290
<font color="#E5E5E5">paste XSS</font><font color="#CCCCCC"> altogether</font><font color="#E5E5E5"> but anyhow</font><font color="#CCCCCC"> so again</font>

575
00:19:42,370 --> 00:19:46,719
the question<font color="#CCCCCC"> Anglin yes is it the honey</font>

576
00:19:44,290 --> 00:19:48,040
booboo of JavaScript frameworks well

577
00:19:46,720 --> 00:19:49,690
we're getting<font color="#E5E5E5"> closer to</font><font color="#CCCCCC"> the answering of</font>

578
00:19:48,040 --> 00:19:52,450
a feeling<font color="#E5E5E5"> so let's have a look</font><font color="#CCCCCC"> at the</font>

579
00:19:49,690 --> 00:19:54,400
next<font color="#E5E5E5"> thing the sanitizer the sanitizer</font>

580
00:19:52,450 --> 00:19:57,040
basically has the purpose<font color="#E5E5E5"> of an</font>

581
00:19:54,400 --> 00:19:58,750
accepting a string<font color="#E5E5E5"> and giving back a</font>

582
00:19:57,040 --> 00:19:59,590
sanitized version of<font color="#E5E5E5"> that string</font><font color="#CCCCCC"> so no</font>

583
00:19:58,750 --> 00:20:01,000
active stuff and

584
00:19:59,590 --> 00:20:02,889
no evil<font color="#CCCCCC"> stuff and there are</font><font color="#E5E5E5"> no alerts</font>

585
00:20:01,000 --> 00:20:05,470
that can pop no no<font color="#E5E5E5"> things that can leak</font>

586
00:20:02,890 --> 00:20:06,760
<font color="#E5E5E5">accidentally and of course we need</font><font color="#CCCCCC"> to</font>

587
00:20:05,470 --> 00:20:08,710
<font color="#E5E5E5">have a look at this thing it's a</font>

588
00:20:06,760 --> 00:20:11,200
component and it's called<font color="#CCCCCC"> da</font><font color="#E5E5E5"> sanitized</font>

589
00:20:08,710 --> 00:20:12,850
<font color="#E5E5E5">and it's used by default in many many</font>

590
00:20:11,200 --> 00:20:14,620
<font color="#CCCCCC">situations whenever</font><font color="#E5E5E5"> you map markup</font>

591
00:20:12,850 --> 00:20:16,149
directly to the dama negligees it's used

592
00:20:14,620 --> 00:20:18,340
implicitly<font color="#CCCCCC"> you can also use it</font>

593
00:20:16,150 --> 00:20:21,039
explicitly units<font color="#E5E5E5"> looks fairly strong</font>

594
00:20:18,340 --> 00:20:22,330
well only<font color="#E5E5E5"> that it doesn't because</font>

595
00:20:21,039 --> 00:20:24,010
there's two<font color="#CCCCCC"> versions of</font><font color="#E5E5E5"> it there</font><font color="#CCCCCC"> is one</font>

596
00:20:22,330 --> 00:20:25,330
<font color="#E5E5E5">experimental</font><font color="#CCCCCC"> version and there is one</font>

597
00:20:24,010 --> 00:20:27,490
traditional version the traditional

598
00:20:25,330 --> 00:20:29,110
<font color="#CCCCCC">version is still used a lot in the wild</font>

599
00:20:27,490 --> 00:20:32,440
<font color="#E5E5E5">and that</font><font color="#CCCCCC"> actually has its own HTML</font>

600
00:20:29,110 --> 00:20:34,360
<font color="#E5E5E5">parser when I say HTML parser</font><font color="#CCCCCC"> self</font>

601
00:20:32,440 --> 00:20:35,110
<font color="#CCCCCC">written you should all be like oh this</font>

602
00:20:34,360 --> 00:20:36,850
<font color="#E5E5E5">is a catastrophe</font>

603
00:20:35,110 --> 00:20:39,070
<font color="#E5E5E5">yes it is it is basically the HTML</font>

604
00:20:36,850 --> 00:20:43,120
parser that<font color="#E5E5E5"> was written by John Resig</font><font color="#CCCCCC"> in</font>

605
00:20:39,070 --> 00:20:45,340
the year 2008<font color="#CCCCCC"> so a framework from</font><font color="#E5E5E5"> 2016</font>

606
00:20:43,120 --> 00:20:47,529
or 2015 uses a parser that<font color="#E5E5E5"> is like</font><font color="#CCCCCC"> eight</font>

607
00:20:45,340 --> 00:20:49,449
<font color="#E5E5E5">years old or</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> more it's not a good</font>

608
00:20:47,529 --> 00:20:50,649
thing<font color="#CCCCCC"> it was</font><font color="#E5E5E5"> like super unstable</font>

609
00:20:49,450 --> 00:20:53,350
crashing all the time throwing

610
00:20:50,649 --> 00:20:54,580
<font color="#CCCCCC">exceptions like</font><font color="#E5E5E5"> horrible thing so we had</font>

611
00:20:53,350 --> 00:20:58,120
<font color="#E5E5E5">a look at this thing and that was a</font>

612
00:20:54,580 --> 00:20:59,678
bypass so this bypass was found by me

613
00:20:58,120 --> 00:21:00,850
and Gareth and hey is pretty much<font color="#E5E5E5"> in</font>

614
00:20:59,679 --> 00:21:04,000
<font color="#CCCCCC">parallel because we were</font><font color="#E5E5E5"> sitting on the</font>

615
00:21:00,850 --> 00:21:06,668
<font color="#E5E5E5">same research grant and the old version</font>

616
00:21:04,000 --> 00:21:08,470
of the<font color="#E5E5E5"> sanitizer uses and allows SVG so</font>

617
00:21:06,669 --> 00:21:10,179
all you<font color="#E5E5E5"> need is an SVG specifically in a</font>

618
00:21:08,470 --> 00:21:11,620
<font color="#E5E5E5">namespace and then using the use element</font>

619
00:21:10,179 --> 00:21:13,720
because they didn't consider<font color="#E5E5E5"> the use</font>

620
00:21:11,620 --> 00:21:16,029
element to be bad<font color="#E5E5E5"> the only thing that we</font>

621
00:21:13,720 --> 00:21:18,130
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have somewhere on the website is</font>

622
00:21:16,029 --> 00:21:19,809
some resource that we somehow control

623
00:21:18,130 --> 00:21:22,029
<font color="#E5E5E5">mime type doesn't matter could be</font><font color="#CCCCCC"> a</font>

624
00:21:19,809 --> 00:21:23,860
<font color="#CCCCCC">J'son could be a gif could be a PDF</font>

625
00:21:22,029 --> 00:21:25,210
could be anything<font color="#E5E5E5"> but</font><font color="#CCCCCC"> we just</font><font color="#E5E5E5"> need to</font>

626
00:21:23,860 --> 00:21:26,740
control<font color="#E5E5E5"> some of the content whether</font><font color="#CCCCCC"> it</font>

627
00:21:25,210 --> 00:21:28,750
renders<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the document or not doesn't</font>

628
00:21:26,740 --> 00:21:31,149
really<font color="#E5E5E5"> matter</font><font color="#CCCCCC"> chrome will then fetch</font>

629
00:21:28,750 --> 00:21:32,350
that URL<font color="#E5E5E5"> will ignore the mime type that</font>

630
00:21:31,149 --> 00:21:35,289
<font color="#E5E5E5">which should be</font><font color="#CCCCCC"> files back by the way</font>

631
00:21:32,350 --> 00:21:37,510
and then execute what is in the SVG

632
00:21:35,289 --> 00:21:38,830
if you go to this<font color="#E5E5E5"> URL you</font><font color="#CCCCCC"> can play with</font>

633
00:21:37,510 --> 00:21:40,360
this<font color="#CCCCCC"> thing open it in Chrome just click</font>

634
00:21:38,830 --> 00:21:42,460
that thing you will see that the<font color="#E5E5E5"> filter</font>

635
00:21:40,360 --> 00:21:43,689
<font color="#E5E5E5">is being bypassed so reported that but</font>

636
00:21:42,460 --> 00:21:45,340
there's<font color="#E5E5E5"> not too much</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> they can do</font>

637
00:21:43,690 --> 00:21:47,140
other<font color="#CCCCCC"> than kind</font><font color="#E5E5E5"> of prohibiting the</font><font color="#CCCCCC"> use</font>

638
00:21:45,340 --> 00:21:48,639
element and they would heavily restrict

639
00:21:47,140 --> 00:21:50,770
the entire functionality but<font color="#E5E5E5"> what they</font>

640
00:21:48,640 --> 00:21:52,630
<font color="#CCCCCC">really decided was to go for a new</font>

641
00:21:50,770 --> 00:21:54,668
sanitizer a more experimental<font color="#E5E5E5"> one one</font>

642
00:21:52,630 --> 00:21:56,980
that<font color="#E5E5E5"> is not using this dusty parser</font><font color="#CCCCCC"> and</font>

643
00:21:54,669 --> 00:21:58,330
one that is now putting<font color="#E5E5E5"> an end to SVG</font>

644
00:21:56,980 --> 00:22:00,309
because<font color="#E5E5E5"> like you know we have it with</font>

645
00:21:58,330 --> 00:22:01,449
SVG it's like always<font color="#E5E5E5"> this SVG stuff like</font>

646
00:22:00,309 --> 00:22:03,580
<font color="#E5E5E5">there's always something</font><font color="#CCCCCC"> in there</font><font color="#E5E5E5"> right</font>

647
00:22:01,450 --> 00:22:04,870
so now SVG is completely forbidden you

648
00:22:03,580 --> 00:22:07,299
can<font color="#E5E5E5"> turn it on if you</font><font color="#CCCCCC"> want to but it's</font>

649
00:22:04,870 --> 00:22:08,799
pretty<font color="#E5E5E5"> much forbidden so we had another</font>

650
00:22:07,299 --> 00:22:10,480
<font color="#E5E5E5">look at this new thing</font><font color="#CCCCCC"> that there's no</font>

651
00:22:08,799 --> 00:22:10,900
using document implementation does it

652
00:22:10,480 --> 00:22:12,760
<font color="#E5E5E5">use</font>

653
00:22:10,900 --> 00:22:16,540
her anymore<font color="#CCCCCC"> doesn't crash that often so</font>

654
00:22:12,760 --> 00:22:17,740
it's actually quite good<font color="#CCCCCC"> SPG is</font><font color="#E5E5E5"> that so</font>

655
00:22:16,540 --> 00:22:20,050
we don't<font color="#E5E5E5"> have access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> that technology</font>

656
00:22:17,740 --> 00:22:20,500
<font color="#E5E5E5">anymore for finding bypasses let's have</font>

657
00:22:20,050 --> 00:22:22,480
a look

658
00:22:20,500 --> 00:22:25,330
turns out<font color="#E5E5E5"> that</font><font color="#CCCCCC"> in chrome there is an M</font>

659
00:22:22,480 --> 00:22:27,310
XSS vulnerability<font color="#CCCCCC"> M XSS means we inject</font>

660
00:22:25,330 --> 00:22:29,050
something<font color="#E5E5E5"> everything is fine then the</font>

661
00:22:27,310 --> 00:22:30,820
browser<font color="#CCCCCC"> change up somehow with</font><font color="#E5E5E5"> inner</font>

662
00:22:29,050 --> 00:22:32,940
HTML or something like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and then all</font>

663
00:22:30,820 --> 00:22:36,820
of a sudden<font color="#E5E5E5"> it's not fine anymore</font>

664
00:22:32,940 --> 00:22:40,000
taking a URL or<font color="#E5E5E5"> an anchor giving it an</font><font color="#CCCCCC"> H</font>

665
00:22:36,820 --> 00:22:41,950
<font color="#E5E5E5">ref and</font><font color="#CCCCCC"> filling in the URL and that URL</font>

666
00:22:40,000 --> 00:22:44,410
<font color="#E5E5E5">is fine because it's pretty</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> nothing</font>

667
00:22:41,950 --> 00:22:46,300
<font color="#E5E5E5">but a relative URL</font><font color="#CCCCCC"> that is not a working</font>

668
00:22:44,410 --> 00:22:49,510
JavaScript<font color="#CCCCCC"> UI that's</font><font color="#E5E5E5"> just a relative</font><font color="#CCCCCC"> URL</font>

669
00:22:46,300 --> 00:22:50,950
<font color="#CCCCCC">me using Unicode whitespace here</font><font color="#E5E5E5"> if you</font>

670
00:22:49,510 --> 00:22:52,260
just<font color="#E5E5E5"> put this into the document and do</font>

671
00:22:50,950 --> 00:22:54,070
nothing<font color="#E5E5E5"> with it just render it</font>

672
00:22:52,260 --> 00:22:55,510
everything will be<font color="#E5E5E5"> fine you click this</font>

673
00:22:54,070 --> 00:22:57,280
thing<font color="#E5E5E5"> nothing happens it just</font><font color="#CCCCCC"> like sends</font>

674
00:22:55,510 --> 00:22:59,200
you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the relative your eye but once</font>

675
00:22:57,280 --> 00:23:01,300
you change the<font color="#CCCCCC"> HTML a little bit with</font>

676
00:22:59,200 --> 00:23:03,130
<font color="#E5E5E5">inner HTML or</font><font color="#CCCCCC"> anything</font><font color="#E5E5E5"> else then this</font>

677
00:23:01,300 --> 00:23:04,300
<font color="#E5E5E5">thing mutates because</font><font color="#CCCCCC"> Chrome things in</font>

678
00:23:03,130 --> 00:23:06,850
the<font color="#E5E5E5"> background</font><font color="#CCCCCC"> that would</font><font color="#E5E5E5"> be cool at you</font>

679
00:23:04,300 --> 00:23:09,340
to just remove<font color="#E5E5E5"> Unicode whitespace like</font>

680
00:23:06,850 --> 00:23:10,990
oh yeah wait a second if<font color="#E5E5E5"> you remove in</font>

681
00:23:09,340 --> 00:23:12,669
strip<font color="#E5E5E5"> Unicode whitespace in front of</font>

682
00:23:10,990 --> 00:23:14,020
your<font color="#CCCCCC"> El handlers</font><font color="#E5E5E5"> then the URL</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was</font>

683
00:23:12,670 --> 00:23:15,490
formerly relative will become a

684
00:23:14,020 --> 00:23:17,740
<font color="#CCCCCC">JavaScript</font><font color="#E5E5E5"> your eye and then pop goes</font>

685
00:23:15,490 --> 00:23:19,510
the weasel so we check<font color="#E5E5E5"> what kind</font><font color="#CCCCCC"> of</font>

686
00:23:17,740 --> 00:23:20,800
characters were affected<font color="#CCCCCC"> and this one</font>

687
00:23:19,510 --> 00:23:22,629
this one this<font color="#CCCCCC"> one this one this</font><font color="#E5E5E5"> one all</font>

688
00:23:20,800 --> 00:23:25,300
together<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that was the next bypass</font>

689
00:23:22,630 --> 00:23:27,510
surprisingly<font color="#CCCCCC"> bios bypasses were by</font>

690
00:23:25,300 --> 00:23:29,889
Google as so they were in<font color="#CCCCCC"> Chrome and</font>

691
00:23:27,510 --> 00:23:31,690
caused<font color="#E5E5E5"> by a framework</font><font color="#CCCCCC"> created by Google</font>

692
00:23:29,890 --> 00:23:34,510
<font color="#E5E5E5">so there was kind of like</font><font color="#CCCCCC"> mmm</font>

693
00:23:31,690 --> 00:23:37,510
<font color="#E5E5E5">interesting but yeah I think there</font>

694
00:23:34,510 --> 00:23:39,520
should<font color="#E5E5E5"> be fix</font><font color="#CCCCCC"> anyhow getting closer to</font>

695
00:23:37,510 --> 00:23:40,900
<font color="#CCCCCC">the</font><font color="#E5E5E5"> question whether angularjs is</font><font color="#CCCCCC"> the</font>

696
00:23:39,520 --> 00:23:43,930
honey<font color="#E5E5E5"> booboo of transcript frameworks or</font>

697
00:23:40,900 --> 00:23:45,430
not so both sanitizers are<font color="#E5E5E5"> bypassed and</font>

698
00:23:43,930 --> 00:23:46,960
<font color="#E5E5E5">I do not know if there</font><font color="#CCCCCC"> is fixes out</font>

699
00:23:45,430 --> 00:23:48,610
there so just<font color="#E5E5E5"> recently run to the</font>

700
00:23:46,960 --> 00:23:50,380
<font color="#CCCCCC">website where the fixes weren't out with</font>

701
00:23:48,610 --> 00:23:53,320
<font color="#CCCCCC">a</font><font color="#E5E5E5"> fairly modern version so I'm not</font><font color="#CCCCCC"> sure</font>

702
00:23:50,380 --> 00:23:57,040
<font color="#E5E5E5">of too much happened on this field let's</font>

703
00:23:53,320 --> 00:24:00,340
go to a3 a3 was who remembers<font color="#CCCCCC"> the CSP</font>

704
00:23:57,040 --> 00:24:02,350
mode as mentioned angularjs can

705
00:24:00,340 --> 00:24:04,060
cooperate with CSP so that means if<font color="#E5E5E5"> you</font>

706
00:24:02,350 --> 00:24:06,820
<font color="#E5E5E5">have a website</font><font color="#CCCCCC"> that is using strong CSP</font>

707
00:24:04,060 --> 00:24:10,270
most of the other fancy frameworks<font color="#E5E5E5"> won't</font>

708
00:24:06,820 --> 00:24:12,129
work anymore but angularjs will that is

709
00:24:10,270 --> 00:24:14,530
because it<font color="#E5E5E5"> also works in Google</font><font color="#CCCCCC"> Chrome</font>

710
00:24:12,130 --> 00:24:16,690
extensions and works in packaged apps

711
00:24:14,530 --> 00:24:18,220
<font color="#E5E5E5">and in certain other contexts where CSP</font>

712
00:24:16,690 --> 00:24:20,380
is mandatory<font color="#E5E5E5"> you have to have it</font><font color="#CCCCCC"> you</font>

713
00:24:18,220 --> 00:24:21,880
can't<font color="#E5E5E5"> get around it</font><font color="#CCCCCC"> and well if you want</font>

714
00:24:20,380 --> 00:24:23,170
to recommend<font color="#E5E5E5"> the framework for universal</font>

715
00:24:21,880 --> 00:24:24,250
<font color="#CCCCCC">use you have to</font><font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that it works</font>

716
00:24:23,170 --> 00:24:25,840
<font color="#E5E5E5">in CSP we</font>

717
00:24:24,250 --> 00:24:27,430
<font color="#E5E5E5">talk about the magic</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is there why</font>

718
00:24:25,840 --> 00:24:28,659
it works in<font color="#CCCCCC"> c esprit mode and why it</font>

719
00:24:27,430 --> 00:24:30,550
doesn't<font color="#E5E5E5"> need to function constructor or</font>

720
00:24:28,660 --> 00:24:32,140
<font color="#E5E5E5">evil but I don't want to kind of</font>

721
00:24:30,550 --> 00:24:33,370
<font color="#E5E5E5">position this</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> but if you are</font>

722
00:24:32,140 --> 00:24:34,870
<font color="#E5E5E5">interested in how this works just</font><font color="#CCCCCC"> like</font>

723
00:24:33,370 --> 00:24:39,790
<font color="#E5E5E5">check me up later on we can talk about</font>

724
00:24:34,870 --> 00:24:42,580
this so<font color="#E5E5E5"> CSP is quite cool and in itself</font>

725
00:24:39,790 --> 00:24:45,510
<font color="#E5E5E5">it has certain potential of killing XSS</font>

726
00:24:42,580 --> 00:24:48,070
<font color="#E5E5E5">or at least making it a bit harder</font><font color="#CCCCCC"> and</font>

727
00:24:45,510 --> 00:24:49,960
it is mandatory in certain contexts<font color="#E5E5E5"> my</font>

728
00:24:48,070 --> 00:24:51,370
Chrome extensions<font color="#E5E5E5"> package tabs Firefox</font>

729
00:24:49,960 --> 00:24:53,950
extensions in a way we talked about<font color="#E5E5E5"> this</font>

730
00:24:51,370 --> 00:24:56,530
<font color="#E5E5E5">yesterday so</font><font color="#CCCCCC"> it's very interesting</font><font color="#E5E5E5"> to</font>

731
00:24:53,950 --> 00:24:58,320
see<font color="#CCCCCC"> that angularjs</font><font color="#E5E5E5"> works in the CSP</font>

732
00:24:56,530 --> 00:25:01,030
context and still has feature parity

733
00:24:58,320 --> 00:25:03,310
<font color="#E5E5E5">mostly so all those features</font><font color="#CCCCCC"> that we saw</font>

734
00:25:01,030 --> 00:25:04,720
before the<font color="#E5E5E5"> sandbox the inline</font><font color="#CCCCCC"> event</font>

735
00:25:03,310 --> 00:25:07,690
handlers<font color="#CCCCCC"> energy something something they</font>

736
00:25:04,720 --> 00:25:09,280
still work which<font color="#CCCCCC"> of course</font><font color="#E5E5E5"> gives us the</font>

737
00:25:07,690 --> 00:25:11,920
<font color="#CCCCCC">possibility to do interesting</font><font color="#E5E5E5"> things</font>

738
00:25:09,280 --> 00:25:14,889
<font color="#CCCCCC">because technically then the framework</font>

739
00:25:11,920 --> 00:25:16,450
bypasses CSP on its own that means if we

740
00:25:14,890 --> 00:25:17,320
<font color="#CCCCCC">have a website</font><font color="#E5E5E5"> that is</font><font color="#CCCCCC"> CP protected we</font>

741
00:25:16,450 --> 00:25:18,970
can't do this<font color="#E5E5E5"> anymore</font>

742
00:25:17,320 --> 00:25:20,620
we can't just<font color="#E5E5E5"> like inject a double quote</font>

743
00:25:18,970 --> 00:25:22,120
on click equals alert<font color="#CCCCCC"> 1 because then the</font>

744
00:25:20,620 --> 00:25:23,260
<font color="#E5E5E5">website says like</font><font color="#CCCCCC"> no that's inline</font>

745
00:25:22,120 --> 00:25:25,300
<font color="#E5E5E5">JavaScript I am NOT</font><font color="#CCCCCC"> going to let you</font>

746
00:25:23,260 --> 00:25:27,310
execute<font color="#E5E5E5"> that</font><font color="#CCCCCC"> thanks browser which is</font>

747
00:25:25,300 --> 00:25:29,350
<font color="#E5E5E5">good but the</font><font color="#CCCCCC"> only thing</font><font color="#E5E5E5"> that we have to</font>

748
00:25:27,310 --> 00:25:32,679
<font color="#CCCCCC">do in stat</font><font color="#E5E5E5"> at least in the older</font>

749
00:25:29,350 --> 00:25:35,199
versions is not use<font color="#CCCCCC"> our click but you</font>

750
00:25:32,680 --> 00:25:37,480
singular JSA ng - click and then dollar

751
00:25:35,200 --> 00:25:39,340
<font color="#E5E5E5">event which is the</font><font color="#CCCCCC"> raw event</font><font color="#E5E5E5"> then view</font>

752
00:25:37,480 --> 00:25:42,490
which is window then alert<font color="#E5E5E5"> one and</font>

753
00:25:39,340 --> 00:25:43,990
<font color="#CCCCCC">that's it</font><font color="#E5E5E5"> no difference same thing so</font>

754
00:25:42,490 --> 00:25:46,630
the framework bypasses itself by

755
00:25:43,990 --> 00:25:50,230
re-enabling inline<font color="#CCCCCC"> javascript like holy</font>

756
00:25:46,630 --> 00:25:52,150
<font color="#CCCCCC"> why</font><font color="#E5E5E5"> this but they did</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so of</font>

757
00:25:50,230 --> 00:25:55,120
course<font color="#E5E5E5"> we were part of that and they</font>

758
00:25:52,150 --> 00:25:56,830
<font color="#E5E5E5">fixed it</font><font color="#CCCCCC"> we also found out that</font><font color="#E5E5E5"> it's</font>

759
00:25:55,120 --> 00:25:59,290
like extremely flexible in terms of

760
00:25:56,830 --> 00:26:01,210
parsing<font color="#E5E5E5"> so you can either do this or you</font>

761
00:25:59,290 --> 00:26:02,740
can do<font color="#CCCCCC"> that or</font><font color="#E5E5E5"> you can do this or you</font>

762
00:26:01,210 --> 00:26:04,000
can do that<font color="#E5E5E5"> or you can</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> like throw a</font>

763
00:26:02,740 --> 00:26:05,410
bhatoora garbage and here because they

764
00:26:04,000 --> 00:26:06,820
normalize for<font color="#CCCCCC"> whatever reason you can</font>

765
00:26:05,410 --> 00:26:07,720
also do that so if you run<font color="#CCCCCC"> into a black</font>

766
00:26:06,820 --> 00:26:10,600
<font color="#E5E5E5">list</font>

767
00:26:07,720 --> 00:26:13,000
fear no longer angularjs<font color="#CCCCCC"> got you</font><font color="#E5E5E5"> covered</font>

768
00:26:10,600 --> 00:26:14,919
<font color="#E5E5E5">though that works nicely</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> as</font>

769
00:26:13,000 --> 00:26:16,240
mentioned<font color="#CCCCCC"> they fixed at least the easy</font>

770
00:26:14,920 --> 00:26:17,500
code execution<font color="#E5E5E5"> not the person</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

771
00:26:16,240 --> 00:26:21,880
still<font color="#CCCCCC"> corrupt</font><font color="#E5E5E5"> but the easy code</font>

772
00:26:17,500 --> 00:26:24,370
execution so the good<font color="#CCCCCC"> thing is that</font><font color="#E5E5E5"> the</font>

773
00:26:21,880 --> 00:26:26,950
fix<font color="#CCCCCC"> are</font><font color="#E5E5E5"> because are pretty good</font><font color="#CCCCCC"> so they</font>

774
00:26:24,370 --> 00:26:29,139
for example<font color="#CCCCCC"> check</font><font color="#E5E5E5"> if the object that</font>

775
00:26:26,950 --> 00:26:31,240
you're<font color="#CCCCCC"> dealing with in the parser at the</font>

776
00:26:29,140 --> 00:26:33,820
current state is<font color="#E5E5E5"> window and select if</font>

777
00:26:31,240 --> 00:26:35,530
that is window you cannot proceed you

778
00:26:33,820 --> 00:26:36,860
cannot go any further<font color="#E5E5E5"> because it's</font>

779
00:26:35,530 --> 00:26:40,309
window just<font color="#E5E5E5"> like nope</font>

780
00:26:36,860 --> 00:26:41,629
not gonna<font color="#E5E5E5"> happen hmm that's annoying but</font>

781
00:26:40,309 --> 00:26:46,370
then there<font color="#E5E5E5"> was this cool chrome bug</font>

782
00:26:41,630 --> 00:26:48,799
again<font color="#CCCCCC"> chrome and in chrome</font><font color="#E5E5E5"> when you have</font>

783
00:26:46,370 --> 00:26:50,500
a CSP protected<font color="#CCCCCC"> website and on the CSP</font>

784
00:26:48,799 --> 00:26:53,990
protected website<font color="#E5E5E5"> you create a blob</font><font color="#CCCCCC"> and</font>

785
00:26:50,500 --> 00:26:56,030
this blob is being filled<font color="#CCCCCC"> with HTML</font><font color="#E5E5E5"> and</font>

786
00:26:53,990 --> 00:26:58,100
then this<font color="#E5E5E5"> blob is being turned into an</font>

787
00:26:56,030 --> 00:27:00,830
object URL and then<font color="#E5E5E5"> you take this object</font>

788
00:26:58,100 --> 00:27:03,980
URL as a blob<font color="#CCCCCC"> uri and redirect to this</font>

789
00:27:00,830 --> 00:27:05,629
thing then it forgets about CSP that

790
00:27:03,980 --> 00:27:07,100
result where you redirect<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that</font>

791
00:27:05,630 --> 00:27:08,150
document<font color="#CCCCCC"> that is being shown doesn't</font>

792
00:27:07,100 --> 00:27:10,100
have CSP anymore

793
00:27:08,150 --> 00:27:12,710
the trick is<font color="#CCCCCC"> well-known in public and I</font>

794
00:27:10,100 --> 00:27:15,678
<font color="#E5E5E5">think it was even</font><font color="#CCCCCC"> a Google+ about this</font>

795
00:27:12,710 --> 00:27:17,780
themselves<font color="#CCCCCC"> so that is known now the</font>

796
00:27:15,679 --> 00:27:19,130
point is that<font color="#CCCCCC"> you're like that's</font><font color="#E5E5E5"> kind of</font>

797
00:27:17,780 --> 00:27:21,290
<font color="#E5E5E5">weird because we have to execute</font>

798
00:27:19,130 --> 00:27:22,790
JavaScript executes JavaScript like why

799
00:27:21,290 --> 00:27:25,940
do<font color="#E5E5E5"> it in the first place like we have to</font>

800
00:27:22,790 --> 00:27:28,159
bypass<font color="#CCCCCC"> ESP to</font><font color="#E5E5E5"> bypass</font><font color="#CCCCCC"> us be no</font><font color="#E5E5E5"> angularjs</font>

801
00:27:25,940 --> 00:27:31,160
does it for us<font color="#CCCCCC"> in</font><font color="#E5E5E5"> combination with the</font>

802
00:27:28,160 --> 00:27:33,350
chrome<font color="#CCCCCC"> bug</font><font color="#E5E5E5"> and a nice new</font><font color="#CCCCCC"> feature that</font>

803
00:27:31,160 --> 00:27:35,990
<font color="#CCCCCC">was given to</font><font color="#E5E5E5"> us by</font><font color="#CCCCCC"> Eggman script six</font>

804
00:27:33,350 --> 00:27:37,459
this<font color="#CCCCCC"> is not so nice to read so let's</font>

805
00:27:35,990 --> 00:27:39,190
just<font color="#CCCCCC"> like go</font><font color="#E5E5E5"> here and let's start</font>

806
00:27:37,460 --> 00:27:42,559
reading<font color="#E5E5E5"> this from the bottom to</font><font color="#CCCCCC"> the top</font>

807
00:27:39,190 --> 00:27:45,559
here we build a<font color="#CCCCCC"> block we access dollar</font>

808
00:27:42,559 --> 00:27:47,870
<font color="#E5E5E5">event at all</font><font color="#CCCCCC"> of you and the blob of end</font>

809
00:27:45,559 --> 00:27:49,730
<font color="#CCCCCC">view blob we throw some HTML</font><font color="#E5E5E5"> into the</font>

810
00:27:47,870 --> 00:27:52,399
<font color="#CCCCCC">blob we give it a type that</font><font color="#E5E5E5"> is according</font>

811
00:27:49,730 --> 00:27:54,890
<font color="#CCCCCC">to our needs</font><font color="#E5E5E5"> text HTML of course and now</font>

812
00:27:52,400 --> 00:27:56,809
we have a block<font color="#E5E5E5"> but now we have just</font>

813
00:27:54,890 --> 00:27:59,150
like this<font color="#E5E5E5"> naked blob object we can't do</font>

814
00:27:56,809 --> 00:28:01,389
anything with this<font color="#E5E5E5"> because</font><font color="#CCCCCC"> a blob needs</font>

815
00:27:59,150 --> 00:28:04,700
to be instantiated with<font color="#CCCCCC"> the new operator</font>

816
00:28:01,390 --> 00:28:06,559
now you can see we're inside<font color="#CCCCCC"> ng-click</font>

817
00:28:04,700 --> 00:28:08,630
so we get around the limitation of

818
00:28:06,559 --> 00:28:10,160
having to you know<font color="#E5E5E5"> infiltrate and</font>

819
00:28:08,630 --> 00:28:11,179
execute<font color="#E5E5E5"> JavaScript that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> coming</font><font color="#CCCCCC"> from</font>

820
00:28:10,160 --> 00:28:14,450
somewhere<font color="#E5E5E5"> but just do</font><font color="#CCCCCC"> it inside</font><font color="#E5E5E5"> the</font>

821
00:28:11,179 --> 00:28:16,490
<font color="#CCCCCC">markup in line which is good but</font><font color="#E5E5E5"> we have</font>

822
00:28:14,450 --> 00:28:19,640
a<font color="#CCCCCC"> problem because to really</font><font color="#E5E5E5"> create a</font>

823
00:28:16,490 --> 00:28:22,370
blob<font color="#CCCCCC"> you have to say</font><font color="#E5E5E5"> a new block to get</font>

824
00:28:19,640 --> 00:28:25,010
<font color="#E5E5E5">this blob</font><font color="#CCCCCC"> but we can't use</font><font color="#E5E5E5"> new because</font>

825
00:28:22,370 --> 00:28:26,989
the angularjs<font color="#E5E5E5"> person says like</font><font color="#CCCCCC"> navi you</font>

826
00:28:25,010 --> 00:28:28,879
know I don't understand<font color="#E5E5E5"> you it's like</font>

827
00:28:26,990 --> 00:28:30,799
hmm<font color="#E5E5E5"> so we need to create</font><font color="#CCCCCC"> a blob</font><font color="#E5E5E5"> but we</font>

828
00:28:28,880 --> 00:28:33,080
don't have new that sucks the<font color="#E5E5E5"> kind of</font>

829
00:28:30,799 --> 00:28:34,790
limits<font color="#E5E5E5"> our attack we had a bypass</font><font color="#CCCCCC"> an</font>

830
00:28:33,080 --> 00:28:36,740
<font color="#CCCCCC">order Firefox they weren't</font><font color="#E5E5E5"> really caring</font>

831
00:28:34,790 --> 00:28:38,210
about the new operator but in modern

832
00:28:36,740 --> 00:28:41,450
browsers<font color="#E5E5E5"> you need the new up right would</font>

833
00:28:38,210 --> 00:28:43,490
create a<font color="#E5E5E5"> block well thanks to Eggman</font>

834
00:28:41,450 --> 00:28:46,280
script<font color="#CCCCCC"> 6 this requirement</font><font color="#E5E5E5"> has left and</font>

835
00:28:43,490 --> 00:28:48,860
we<font color="#E5E5E5"> can do it functionally so we can say</font>

836
00:28:46,280 --> 00:28:50,450
dollar event<font color="#CCCCCC"> the love you dot refer dot</font>

837
00:28:48,860 --> 00:28:52,070
dollar<font color="#E5E5E5"> event dot view</font>

838
00:28:50,450 --> 00:28:55,489
don't<font color="#E5E5E5"> reflect who knows what that's</font>

839
00:28:52,070 --> 00:28:58,668
<font color="#E5E5E5">reflect thing is well JavaScript now has</font>

840
00:28:55,489 --> 00:29:02,480
a reflection<font color="#E5E5E5"> API</font><font color="#CCCCCC"> because why not right</font>

841
00:28:58,669 --> 00:29:03,679
<font color="#E5E5E5">so it's like that was really</font><font color="#CCCCCC"> missing</font>

842
00:29:02,480 --> 00:29:05,299
<font color="#E5E5E5">right this is like I couldn't wait for</font>

843
00:29:03,679 --> 00:29:07,580
<font color="#E5E5E5">the reflection API so we have a</font>

844
00:29:05,299 --> 00:29:11,779
reflection<font color="#E5E5E5"> API no and the reflection API</font>

845
00:29:07,580 --> 00:29:13,639
allows us to programmatically create a

846
00:29:11,779 --> 00:29:14,929
<font color="#CCCCCC">blob from within</font><font color="#E5E5E5"> a function call is an</font>

847
00:29:13,639 --> 00:29:16,820
argument<font color="#CCCCCC"> so all we have to do is call</font>

848
00:29:14,929 --> 00:29:18,679
reflect construct<font color="#E5E5E5"> throw the blob and</font>

849
00:29:16,820 --> 00:29:21,710
<font color="#E5E5E5">without the new operator</font><font color="#CCCCCC"> and then we</font><font color="#E5E5E5"> get</font>

850
00:29:18,679 --> 00:29:24,379
a fresh<font color="#E5E5E5"> blob so that's cool so we have</font>

851
00:29:21,710 --> 00:29:26,359
<font color="#E5E5E5">satisfied the angularjs parser and</font><font color="#CCCCCC"> the</font>

852
00:29:24,379 --> 00:29:27,498
browser right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> so both parties</font><font color="#CCCCCC"> that</font>

853
00:29:26,359 --> 00:29:28,639
were kind<font color="#E5E5E5"> of fighting against</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> are</font>

854
00:29:27,499 --> 00:29:30,409
<font color="#E5E5E5">not satisfied and then the only</font><font color="#CCCCCC"> thing</font>

855
00:29:28,639 --> 00:29:32,629
<font color="#E5E5E5">that we have to do is get a reference</font><font color="#CCCCCC"> to</font>

856
00:29:30,409 --> 00:29:34,580
the URL that<font color="#E5E5E5"> short call get object your</font>

857
00:29:32,629 --> 00:29:36,590
<font color="#E5E5E5">L throw the blob that we created with</font>

858
00:29:34,580 --> 00:29:38,269
<font color="#CCCCCC">the reflection API into that thing get</font>

859
00:29:36,590 --> 00:29:39,949
<font color="#CCCCCC">the blob your eye out</font><font color="#E5E5E5"> and then make an</font>

860
00:29:38,269 --> 00:29:41,059
event view location<font color="#CCCCCC"> replace on the blob</font>

861
00:29:39,950 --> 00:29:42,859
your<font color="#E5E5E5"> eye and then we have arbitrary</font>

862
00:29:41,059 --> 00:29:44,149
JavaScript execution<font color="#E5E5E5"> because then CSP is</font>

863
00:29:42,859 --> 00:29:46,249
gone we can do whatever the we want

864
00:29:44,149 --> 00:29:46,789
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> we have the website</font><font color="#E5E5E5"> under</font>

865
00:29:46,249 --> 00:29:52,249
control

866
00:29:46,789 --> 00:29:54,889
despite CSP<font color="#E5E5E5"> which is nice so let us of</font>

867
00:29:52,249 --> 00:29:56,809
course<font color="#E5E5E5"> very specific and we were also</font>

868
00:29:54,889 --> 00:29:59,928
<font color="#CCCCCC">thinking about</font><font color="#E5E5E5"> like how can we be like</font>

869
00:29:56,809 --> 00:30:01,668
<font color="#E5E5E5">less</font><font color="#CCCCCC"> specific</font><font color="#E5E5E5"> and you know do something</font>

870
00:29:59,929 --> 00:30:04,009
really really bad<font color="#CCCCCC"> even if there's good</font>

871
00:30:01,669 --> 00:30:06,679
CSP even if the framework<font color="#E5E5E5"> is at a very</font>

872
00:30:04,009 --> 00:30:08,840
<font color="#CCCCCC">very recent level even if the website</font><font color="#E5E5E5"> is</font>

873
00:30:06,679 --> 00:30:12,009
set up in a very<font color="#E5E5E5"> good</font><font color="#CCCCCC"> way and the</font><font color="#E5E5E5"> only</font>

874
00:30:08,840 --> 00:30:14,119
thing that we have is an injection<font color="#CCCCCC"> and</font>

875
00:30:12,009 --> 00:30:17,659
the<font color="#E5E5E5"> website using</font><font color="#CCCCCC"> a content delivery</font>

876
00:30:14,119 --> 00:30:20,570
network<font color="#E5E5E5"> so the first thought was wait a</font>

877
00:30:17,659 --> 00:30:22,789
second if they use<font color="#E5E5E5"> the CDN to pull</font>

878
00:30:20,570 --> 00:30:24,950
angularjs from<font color="#E5E5E5"> whatever other library</font>

879
00:30:22,789 --> 00:30:27,289
<font color="#E5E5E5">then they're likely</font><font color="#CCCCCC"> to use the Google</font>

880
00:30:24,950 --> 00:30:28,549
CDN<font color="#E5E5E5"> but the Google CDN gives us not only</font>

881
00:30:27,289 --> 00:30:29,749
<font color="#CCCCCC">the</font><font color="#E5E5E5"> modern version of the framework</font><font color="#CCCCCC"> but</font>

882
00:30:28,549 --> 00:30:31,668
also the ancient<font color="#E5E5E5"> versions of the</font>

883
00:30:29,749 --> 00:30:33,169
framework so if the<font color="#CCCCCC"> website is using</font><font color="#E5E5E5"> a</font>

884
00:30:31,669 --> 00:30:34,759
<font color="#E5E5E5">new version of the framework</font><font color="#CCCCCC"> why can't</font>

885
00:30:33,169 --> 00:30:36,559
we<font color="#E5E5E5"> just like</font><font color="#CCCCCC"> reom port an older version</font>

886
00:30:34,759 --> 00:30:38,720
<font color="#E5E5E5">of</font><font color="#CCCCCC"> the framework and</font><font color="#E5E5E5"> just get all the</font>

887
00:30:36,559 --> 00:30:41,720
nasty<font color="#E5E5E5"> bugs back we tried that and it</font>

888
00:30:38,720 --> 00:30:42,980
worked<font color="#CCCCCC"> so that is all</font><font color="#E5E5E5"> you have to do you</font>

889
00:30:41,720 --> 00:30:44,929
<font color="#E5E5E5">have a good website</font><font color="#CCCCCC"> that has good</font>

890
00:30:42,980 --> 00:30:46,909
headers<font color="#E5E5E5"> and the only mistake</font><font color="#CCCCCC"> is that</font>

891
00:30:44,929 --> 00:30:48,559
<font color="#E5E5E5">they actually whitelist</font><font color="#CCCCCC"> AGX google api</font>

892
00:30:46,909 --> 00:30:50,059
<font color="#E5E5E5">stuck on tons of websites do that we had</font>

893
00:30:48,559 --> 00:30:52,309
<font color="#E5E5E5">a look at the headers out there and this</font>

894
00:30:50,059 --> 00:30:53,658
<font color="#CCCCCC">is</font><font color="#E5E5E5"> not that uncommon</font><font color="#CCCCCC"> so they use one of</font>

895
00:30:52,309 --> 00:30:55,009
<font color="#E5E5E5">the very very recent version of</font>

896
00:30:53,659 --> 00:30:57,889
angularjs one point four point<font color="#CCCCCC"> nine</font>

897
00:30:55,009 --> 00:30:59,239
<font color="#E5E5E5">there is no nice CSP bypass here that</font>

898
00:30:57,889 --> 00:31:02,149
works<font color="#CCCCCC"> out of the box well there is one</font>

899
00:30:59,239 --> 00:31:03,739
now but it's harder to bypass and then

900
00:31:02,149 --> 00:31:04,280
the only<font color="#E5E5E5"> thing that we do is injecting</font>

901
00:31:03,739 --> 00:31:06,800
into<font color="#E5E5E5"> the</font>

902
00:31:04,280 --> 00:31:08,960
injecting<font color="#CCCCCC"> a</font><font color="#E5E5E5"> new script element importing</font>

903
00:31:06,800 --> 00:31:10,669
old angularjs<font color="#CCCCCC"> then defining</font><font color="#E5E5E5"> the click</font>

904
00:31:08,960 --> 00:31:12,860
<font color="#E5E5E5">handler or whatever</font><font color="#CCCCCC"> handler and</font><font color="#E5E5E5"> that's</font>

905
00:31:10,670 --> 00:31:16,370
it<font color="#CCCCCC"> you just like override the fixes with</font>

906
00:31:12,860 --> 00:31:18,320
an old<font color="#CCCCCC"> version and bypass so that was</font>

907
00:31:16,370 --> 00:31:20,149
<font color="#E5E5E5">quite nice and they're useful</font><font color="#CCCCCC"> and the</font>

908
00:31:18,320 --> 00:31:21,710
<font color="#E5E5E5">good thing is that it evenly it doesn't</font>

909
00:31:20,150 --> 00:31:23,120
really depend on<font color="#E5E5E5"> where</font><font color="#CCCCCC"> you inject and</font>

910
00:31:21,710 --> 00:31:24,590
how you inject and when you inject if

911
00:31:23,120 --> 00:31:28,459
you inject here everything is good

912
00:31:24,590 --> 00:31:30,679
anyway and if you inject further<font color="#E5E5E5"> up then</font>

913
00:31:28,460 --> 00:31:32,930
it's also<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> because with the angularjs</font>

914
00:31:30,680 --> 00:31:35,510
<font color="#CCCCCC">team has is for the versions starting</font>

915
00:31:32,930 --> 00:31:36,920
<font color="#CCCCCC">1.2 point</font><font color="#E5E5E5"> 15 is a collision check but</font>

916
00:31:35,510 --> 00:31:38,390
for the very old versions that don't

917
00:31:36,920 --> 00:31:39,980
have a<font color="#E5E5E5"> collision check and the collision</font>

918
00:31:38,390 --> 00:31:41,240
check says like if<font color="#CCCCCC"> I find</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> existing</font>

919
00:31:39,980 --> 00:31:43,040
angular<font color="#E5E5E5"> JS version already</font><font color="#CCCCCC"> I'm just</font>

920
00:31:41,240 --> 00:31:44,660
<font color="#CCCCCC">going to say</font><font color="#E5E5E5"> bye-bye so</font><font color="#CCCCCC"> even if you</font>

921
00:31:43,040 --> 00:31:46,700
inject somewhere further up the<font color="#E5E5E5"> road</font>

922
00:31:44,660 --> 00:31:48,470
before<font color="#E5E5E5"> the actual angularjs</font><font color="#CCCCCC"> is being</font>

923
00:31:46,700 --> 00:31:50,120
included<font color="#CCCCCC"> still ok because the old one</font>

924
00:31:48,470 --> 00:31:51,470
will<font color="#E5E5E5"> always win</font><font color="#CCCCCC"> either you injected</font>

925
00:31:50,120 --> 00:31:52,850
later it will win or you<font color="#E5E5E5"> injected</font>

926
00:31:51,470 --> 00:31:55,010
earlier and you will also<font color="#E5E5E5"> win so there</font>

927
00:31:52,850 --> 00:31:56,510
is nothing<font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> work on for the</font>

928
00:31:55,010 --> 00:31:59,090
attack it just works right off<font color="#E5E5E5"> the box</font>

929
00:31:56,510 --> 00:32:01,460
which<font color="#E5E5E5"> is quite useful</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> honest we</font>

930
00:31:59,090 --> 00:32:03,500
use this trick<font color="#E5E5E5"> quite commonly it's not</font>

931
00:32:01,460 --> 00:32:04,910
very rare like of the recent<font color="#CCCCCC"> the</font><font color="#E5E5E5"> last</font>

932
00:32:03,500 --> 00:32:06,740
time when we<font color="#CCCCCC"> used it</font><font color="#E5E5E5"> was against the dot</font>

933
00:32:04,910 --> 00:32:07,790
<font color="#CCCCCC">trust domain so they had an XSS because</font>

934
00:32:06,740 --> 00:32:11,530
of that and all they have to change this

935
00:32:07,790 --> 00:32:14,149
back<font color="#CCCCCC"> to bad anyway</font>

936
00:32:11,530 --> 00:32:15,860
the Google team did something really

937
00:32:14,150 --> 00:32:17,720
really<font color="#CCCCCC"> awesome to make like a very clear</font>

938
00:32:15,860 --> 00:32:20,120
statement<font color="#E5E5E5"> about the security qualities</font>

939
00:32:17,720 --> 00:32:21,590
<font color="#CCCCCC">of the sandbox and expressions</font><font color="#E5E5E5"> and they</font>

940
00:32:20,120 --> 00:32:24,679
basically blogged about this and select

941
00:32:21,590 --> 00:32:27,199
please everybody<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> not a security</font>

942
00:32:24,680 --> 00:32:28,670
tool if you find an<font color="#E5E5E5"> interpolation</font>

943
00:32:27,200 --> 00:32:30,800
somewhere on a<font color="#CCCCCC"> website just</font><font color="#E5E5E5"> send it to</font>

944
00:32:28,670 --> 00:32:32,030
<font color="#CCCCCC">us</font><font color="#E5E5E5"> it counts as exercise</font><font color="#CCCCCC"> it's a very</font>

945
00:32:30,800 --> 00:32:34,399
good<font color="#CCCCCC"> statement I really liked it and</font>

946
00:32:32,030 --> 00:32:36,560
that is the old<font color="#CCCCCC"> day that the</font><font color="#E5E5E5"> Google team</font>

947
00:32:34,400 --> 00:32:38,030
dropped on angularjs<font color="#CCCCCC"> on their own block</font>

948
00:32:36,560 --> 00:32:40,550
from<font color="#CCCCCC"> Eduardo and it's pretty</font><font color="#E5E5E5"> damn</font>

949
00:32:38,030 --> 00:32:42,530
<font color="#E5E5E5">awesome so he</font><font color="#CCCCCC"> basically just injects a</font>

950
00:32:40,550 --> 00:32:44,419
mark up grabs the event then does a

951
00:32:42,530 --> 00:32:45,710
repetition<font color="#CCCCCC"> over</font><font color="#E5E5E5"> the event extracts the</font>

952
00:32:44,420 --> 00:32:47,540
view object<font color="#E5E5E5"> that is then window the</font>

953
00:32:45,710 --> 00:32:50,570
sandbox<font color="#CCCCCC"> does</font><font color="#E5E5E5"> notice he</font><font color="#CCCCCC"> call it an</font><font color="#E5E5E5"> array</font>

954
00:32:47,540 --> 00:32:54,020
reduced that<font color="#E5E5E5"> this using the alert from</font>

955
00:32:50,570 --> 00:32:56,000
<font color="#CCCCCC">the window method as the call bag fitted</font>

956
00:32:54,020 --> 00:33:00,500
with a<font color="#CCCCCC"> parameter and then he is full</font>

957
00:32:56,000 --> 00:33:02,870
code execution<font color="#E5E5E5"> quite beautiful so again</font>

958
00:33:00,500 --> 00:33:04,220
we're<font color="#CCCCCC"> getting closer to</font><font color="#E5E5E5"> the answer to</font>

959
00:33:02,870 --> 00:33:05,330
whether this is<font color="#CCCCCC"> a good frame</font><font color="#E5E5E5"> we're gonna</font>

960
00:33:04,220 --> 00:33:07,550
bet<font color="#E5E5E5"> not a good frame and we'll see</font>

961
00:33:05,330 --> 00:33:11,179
because<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> one thing left and that</font>

962
00:33:07,550 --> 00:33:14,629
is a4 and that<font color="#CCCCCC"> is the attack off or</font>

963
00:33:11,180 --> 00:33:16,370
against the<font color="#CCCCCC"> codebase itself so we really</font>

964
00:33:14,630 --> 00:33:18,110
wanted to<font color="#E5E5E5"> be dicks with this one because</font>

965
00:33:16,370 --> 00:33:20,239
<font color="#CCCCCC">we</font><font color="#E5E5E5"> think someone has to do</font>

966
00:33:18,110 --> 00:33:23,330
and better us than<font color="#CCCCCC"> the actual attackers</font>

967
00:33:20,240 --> 00:33:25,429
so as mentioned<font color="#E5E5E5"> they have a lot of</font>

968
00:33:23,330 --> 00:33:28,250
<font color="#E5E5E5">traction on their repo like there is so</font>

969
00:33:25,429 --> 00:33:29,990
many<font color="#CCCCCC"> commits</font><font color="#E5E5E5"> and so many things going on</font>

970
00:33:28,250 --> 00:33:31,640
and so<font color="#CCCCCC"> many pull requests and people are</font>

971
00:33:29,990 --> 00:33:34,370
like screaming<font color="#E5E5E5"> and shouting and like</font>

972
00:33:31,640 --> 00:33:36,260
it's<font color="#E5E5E5"> like a marketplace really many many</font>

973
00:33:34,370 --> 00:33:38,120
<font color="#CCCCCC">things going</font><font color="#E5E5E5"> on what would keep an</font>

974
00:33:36,260 --> 00:33:39,799
attacker from<font color="#E5E5E5"> just like sneaking into</font>

975
00:33:38,120 --> 00:33:41,510
<font color="#CCCCCC">that screaming and shouting</font><font color="#E5E5E5"> crowd and</font>

976
00:33:39,799 --> 00:33:43,090
planting something<font color="#E5E5E5"> nasty</font><font color="#CCCCCC"> somewhere in</font>

977
00:33:41,510 --> 00:33:46,250
the code and hoping<font color="#E5E5E5"> no one would notice</font>

978
00:33:43,090 --> 00:33:49,309
<font color="#E5E5E5">so we did that</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> English yes and it</font>

979
00:33:46,250 --> 00:33:51,200
worked<font color="#E5E5E5"> um I talked about this thing with</font>

980
00:33:49,309 --> 00:33:53,178
with<font color="#CCCCCC"> Google's</font><font color="#E5E5E5"> security team in November</font>

981
00:33:51,200 --> 00:33:54,500
2014 so they knew and<font color="#E5E5E5"> they were like</font>

982
00:33:53,179 --> 00:33:55,429
yeah this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of word you're</font>

983
00:33:54,500 --> 00:33:57,980
<font color="#E5E5E5">not gonna pull this one off</font>

984
00:33:55,429 --> 00:33:59,299
so<font color="#CCCCCC"> ok but can I please</font><font color="#E5E5E5"> try it say yeah</font>

985
00:33:57,980 --> 00:34:01,010
but<font color="#E5E5E5"> you really</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to let us</font><font color="#CCCCCC"> know when</font>

986
00:33:59,299 --> 00:34:04,908
it<font color="#E5E5E5"> works because</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to fix that</font>

987
00:34:01,010 --> 00:34:07,370
<font color="#E5E5E5">very</font><font color="#CCCCCC"> very quickly</font><font color="#E5E5E5"> so what we</font><font color="#CCCCCC"> needed was</font>

988
00:34:04,909 --> 00:34:09,409
some situation<font color="#CCCCCC"> that allowed us</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do</font>

989
00:34:07,370 --> 00:34:11,480
something<font color="#E5E5E5"> malicious but it looks good</font>

990
00:34:09,409 --> 00:34:13,369
<font color="#E5E5E5">and they would notice and they would</font>

991
00:34:11,480 --> 00:34:15,139
permit what we're trying to do and add

992
00:34:13,369 --> 00:34:16,550
it<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> codebase and this is not</font>

993
00:34:15,139 --> 00:34:18,230
really<font color="#CCCCCC"> a bug that</font><font color="#E5E5E5"> you find every</font><font color="#CCCCCC"> day</font>

994
00:34:16,550 --> 00:34:20,030
like<font color="#E5E5E5"> this is something where a lot of</font>

995
00:34:18,230 --> 00:34:21,949
stars have to be aligned<font color="#E5E5E5"> to kind of make</font>

996
00:34:20,030 --> 00:34:23,869
this<font color="#CCCCCC"> situation happen so you</font><font color="#E5E5E5"> either you</font>

997
00:34:21,949 --> 00:34:25,339
have<font color="#CCCCCC"> to be really</font><font color="#E5E5E5"> good at fishing or you</font>

998
00:34:23,869 --> 00:34:27,500
have to<font color="#E5E5E5"> have really</font><font color="#CCCCCC"> good preconditions</font>

999
00:34:25,339 --> 00:34:29,570
in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> codebase</font><font color="#E5E5E5"> so we checked the</font>

1000
00:34:27,500 --> 00:34:31,730
<font color="#CCCCCC">codebase</font><font color="#E5E5E5"> and one day and there was an</font>

1001
00:34:29,570 --> 00:34:34,399
October 2014 something popped my<font color="#E5E5E5"> I was</font>

1002
00:34:31,730 --> 00:34:38,330
like<font color="#CCCCCC"> there is</font><font color="#E5E5E5"> something strange in the</font>

1003
00:34:34,399 --> 00:34:40,969
<font color="#CCCCCC">sanitizer because the sanitizer allows</font>

1004
00:34:38,330 --> 00:34:42,619
and<font color="#CCCCCC"> whitelists two</font><font color="#E5E5E5"> attributes that are</font>

1005
00:34:40,969 --> 00:34:45,020
technically dangerous at<font color="#E5E5E5"> whitelists</font>

1006
00:34:42,619 --> 00:34:47,139
<font color="#E5E5E5">attribute name and tribute type anyone</font>

1007
00:34:45,020 --> 00:34:50,300
remember these what those two<font color="#CCCCCC"> fellows do</font>

1008
00:34:47,139 --> 00:34:53,060
those are from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> SVG namespace and you</font>

1009
00:34:50,300 --> 00:34:54,830
can use them for SVG animations<font color="#E5E5E5"> and set</font>

1010
00:34:53,060 --> 00:34:57,500
<font color="#CCCCCC">elements</font><font color="#E5E5E5"> to declaratively change</font>

1011
00:34:54,830 --> 00:34:59,480
surrounding<font color="#CCCCCC"> elements which is</font><font color="#E5E5E5"> quite cool</font>

1012
00:34:57,500 --> 00:35:03,050
because you<font color="#CCCCCC"> can also then declaratively</font>

1013
00:34:59,480 --> 00:35:04,790
change<font color="#E5E5E5"> the hatred of an anchor from</font>

1014
00:35:03,050 --> 00:35:07,310
something<font color="#E5E5E5"> harmless to something nasty</font>

1015
00:35:04,790 --> 00:35:09,290
<font color="#E5E5E5">and technically they already have that</font>

1016
00:35:07,310 --> 00:35:10,790
back<font color="#E5E5E5"> so they already have the</font><font color="#CCCCCC"> exist</font><font color="#E5E5E5"> s</font>

1017
00:35:09,290 --> 00:35:13,790
and I tried this thing it's<font color="#E5E5E5"> like</font><font color="#CCCCCC"> oh</font>

1018
00:35:10,790 --> 00:35:15,259
doesn't work so they kind<font color="#E5E5E5"> of still kill</font>

1019
00:35:13,790 --> 00:35:18,230
the white listed attributes<font color="#CCCCCC"> no why's</font>

1020
00:35:15,260 --> 00:35:20,210
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and I realized that they kill the</font>

1021
00:35:18,230 --> 00:35:23,839
white listed attributes<font color="#E5E5E5"> because of a</font>

1022
00:35:20,210 --> 00:35:26,270
back in<font color="#CCCCCC"> the parser</font><font color="#E5E5E5"> this is the back you</font>

1023
00:35:23,839 --> 00:35:28,400
<font color="#CCCCCC">can</font><font color="#E5E5E5"> see here they basically take what is</font>

1024
00:35:26,270 --> 00:35:30,440
white listed and they take<font color="#CCCCCC"> what they</font><font color="#E5E5E5"> get</font>

1025
00:35:28,400 --> 00:35:31,460
from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> markup to sanitize and then</font>

1026
00:35:30,440 --> 00:35:32,569
they compare

1027
00:35:31,460 --> 00:35:34,849
whether what they are supposed to

1028
00:35:32,569 --> 00:35:37,490
<font color="#CCCCCC">sanitize is existing on the</font><font color="#E5E5E5"> whitelist or</font>

1029
00:35:34,849 --> 00:35:39,920
not<font color="#E5E5E5"> but what they do is they lowercase</font>

1030
00:35:37,490 --> 00:35:42,828
<font color="#CCCCCC">it and as you</font><font color="#E5E5E5"> could</font><font color="#CCCCCC"> see here</font><font color="#E5E5E5"> those</font>

1031
00:35:39,920 --> 00:35:45,680
attribute names are mixed case so they

1032
00:35:42,829 --> 00:35:47,960
would receive a mixed case<font color="#E5E5E5"> piece of</font>

1033
00:35:45,680 --> 00:35:49,879
<font color="#E5E5E5">attribute name from the mark up and they</font>

1034
00:35:47,960 --> 00:35:52,690
would compare it<font color="#E5E5E5"> to a lowercase version</font>

1035
00:35:49,880 --> 00:35:55,190
<font color="#E5E5E5">from</font><font color="#CCCCCC"> the white from</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> whitelist</font><font color="#E5E5E5"> and</font>

1036
00:35:52,690 --> 00:35:57,319
that of<font color="#CCCCCC"> course doesn't</font><font color="#E5E5E5"> work because</font>

1037
00:35:55,190 --> 00:35:59,390
there is no match<font color="#E5E5E5"> anymore and then they</font>

1038
00:35:57,319 --> 00:36:01,069
say like yeah it is on the whitelist<font color="#CCCCCC"> but</font>

1039
00:35:59,390 --> 00:36:03,828
we<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> really see it because of our</font>

1040
00:36:01,069 --> 00:36:05,779
<font color="#E5E5E5">own lower casing so no let's throw this</font>

1041
00:36:03,829 --> 00:36:07,790
out<font color="#CCCCCC"> it's like</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> buck is</font><font color="#E5E5E5"> perfect</font>

1042
00:36:05,780 --> 00:36:10,369
<font color="#E5E5E5">because</font><font color="#CCCCCC"> the only</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that we have to</font>

1043
00:36:07,790 --> 00:36:12,109
do now is<font color="#E5E5E5"> report this as a</font><font color="#CCCCCC"> buck but shut</font>

1044
00:36:10,369 --> 00:36:17,510
up<font color="#E5E5E5"> about the actual implications if they</font>

1045
00:36:12,109 --> 00:36:19,430
fix<font color="#E5E5E5"> it and we did that so it took</font><font color="#CCCCCC"> some</font>

1046
00:36:17,510 --> 00:36:22,400
time<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think I posted the issue in</font>

1047
00:36:19,430 --> 00:36:24,200
November 2014<font color="#CCCCCC"> or late November 2014</font><font color="#E5E5E5"> and</font>

1048
00:36:22,400 --> 00:36:25,640
then I played<font color="#E5E5E5"> the waiting game just like</font>

1049
00:36:24,200 --> 00:36:27,319
sitting<font color="#CCCCCC"> there waiting waiting waiting</font>

1050
00:36:25,640 --> 00:36:28,700
forgetting about it receiving an email

1051
00:36:27,319 --> 00:36:29,839
<font color="#E5E5E5">to like yeah thanks for the back we</font>

1052
00:36:28,700 --> 00:36:30,890
accept this<font color="#E5E5E5"> this is a valid</font><font color="#CCCCCC"> part we're</font>

1053
00:36:29,839 --> 00:36:34,849
<font color="#CCCCCC">gonna fix it too and</font><font color="#E5E5E5"> thank you so much</font>

1054
00:36:30,890 --> 00:36:36,290
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> nice so I had a look at the fix and</font>

1055
00:36:34,849 --> 00:36:38,869
<font color="#E5E5E5">was perfect because it gave us excess</font>

1056
00:36:36,290 --> 00:36:41,000
essence like sweet<font color="#E5E5E5"> how good is that</font>

1057
00:36:38,869 --> 00:36:44,900
so they fix the<font color="#E5E5E5"> bark that created a</font>

1058
00:36:41,000 --> 00:36:46,670
Nexus S and I informed<font color="#CCCCCC"> Eduardo like</font>

1059
00:36:44,900 --> 00:36:47,359
really<font color="#E5E5E5"> really quickly</font><font color="#CCCCCC"> said like dude it</font>

1060
00:36:46,670 --> 00:36:50,480
actually worked

1061
00:36:47,359 --> 00:36:52,369
so please kind of inform the<font color="#CCCCCC"> involve</font>

1062
00:36:50,480 --> 00:36:53,950
<font color="#CCCCCC">parties to kind of get rid of this thing</font>

1063
00:36:52,369 --> 00:36:56,059
<font color="#E5E5E5">before it actually hits</font><font color="#CCCCCC"> the release</font><font color="#E5E5E5"> and</font>

1064
00:36:53,950 --> 00:36:57,319
we<font color="#E5E5E5"> waited a little bit and we wait a</font>

1065
00:36:56,059 --> 00:36:58,910
<font color="#CCCCCC">little bit</font><font color="#E5E5E5"> and eventually they fix it</font>

1066
00:36:57,319 --> 00:37:00,740
but this is<font color="#E5E5E5"> how it looked like so you</font>

1067
00:36:58,910 --> 00:37:02,990
basically have<font color="#E5E5E5"> an</font><font color="#CCCCCC"> SVG you have an anchor</font>

1068
00:37:00,740 --> 00:37:03,859
<font color="#E5E5E5">this anchor has a URL</font><font color="#CCCCCC"> or an</font><font color="#E5E5E5"> href that</font>

1069
00:37:02,990 --> 00:37:05,419
it's really harmless<font color="#E5E5E5"> it's just a</font>

1070
00:37:03,859 --> 00:37:07,160
<font color="#CCCCCC">question mark</font><font color="#E5E5E5"> then we have a circle</font>

1071
00:37:05,420 --> 00:37:09,200
<font color="#E5E5E5">something big just something to click on</font>

1072
00:37:07,160 --> 00:37:10,730
and then we have<font color="#CCCCCC"> an any</font><font color="#E5E5E5"> mate element and</font>

1073
00:37:09,200 --> 00:37:11,960
now it's<font color="#E5E5E5"> just like one</font><font color="#CCCCCC"> of these things</font>

1074
00:37:10,730 --> 00:37:13,460
where<font color="#CCCCCC"> you</font><font color="#E5E5E5"> ask yourself like is this</font>

1075
00:37:11,960 --> 00:37:14,569
<font color="#E5E5E5">really necessary do we need this kind of</font>

1076
00:37:13,460 --> 00:37:16,160
<font color="#E5E5E5">feature in the browser so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have an</font>

1077
00:37:14,569 --> 00:37:18,319
animate element that's using the

1078
00:37:16,160 --> 00:37:21,140
attribute name and specifying<font color="#CCCCCC"> s a href</font>

1079
00:37:18,319 --> 00:37:23,210
<font color="#E5E5E5">so that means that it changes</font><font color="#CCCCCC"> animates</font>

1080
00:37:21,140 --> 00:37:25,250
<font color="#E5E5E5">the excellent</font><font color="#CCCCCC"> H ref of the surrounding</font>

1081
00:37:23,210 --> 00:37:26,750
element it starts at second<font color="#E5E5E5"> zero of</font>

1082
00:37:25,250 --> 00:37:28,910
whatever time unit<font color="#E5E5E5"> we're using here and</font>

1083
00:37:26,750 --> 00:37:31,369
it changes it<font color="#E5E5E5"> from JavaScript the</font><font color="#CCCCCC"> right</font>

1084
00:37:28,910 --> 00:37:33,200
<font color="#CCCCCC">one</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> M</font><font color="#E5E5E5"> presenting</font><font color="#CCCCCC"> it tells make any</font>

1085
00:37:31,369 --> 00:37:36,680
sense we're changing it from<font color="#E5E5E5"> something</font>

1086
00:37:33,200 --> 00:37:37,879
evil<font color="#E5E5E5"> to something good we should be</font>

1087
00:37:36,680 --> 00:37:39,680
doing this the<font color="#E5E5E5"> other way around right</font>

1088
00:37:37,880 --> 00:37:41,359
because it<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> make any sense we're</font>

1089
00:37:39,680 --> 00:37:43,940
<font color="#CCCCCC">diffusing the</font><font color="#E5E5E5"> attack were not creating</font>

1090
00:37:41,359 --> 00:37:44,810
it wrong<font color="#E5E5E5"> because what is actually</font>

1091
00:37:43,940 --> 00:37:46,340
happening<font color="#CCCCCC"> here</font>

1092
00:37:44,810 --> 00:37:48,440
that we're trying<font color="#CCCCCC"> to change something</font>

1093
00:37:46,340 --> 00:37:51,880
<font color="#E5E5E5">that is harmless from something that is</font>

1094
00:37:48,440 --> 00:37:54,260
evil<font color="#E5E5E5"> to something that is who knows it</font>

1095
00:37:51,880 --> 00:37:56,330
invalid<font color="#CCCCCC"> because we're talking</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> XML</font>

1096
00:37:54,260 --> 00:37:57,800
<font color="#CCCCCC">here</font><font color="#E5E5E5"> and you can't just go</font><font color="#CCCCCC"> ahead and</font>

1097
00:37:56,330 --> 00:37:59,480
<font color="#E5E5E5">take an attribute value that is</font><font color="#CCCCCC"> only</font>

1098
00:37:57,800 --> 00:38:00,800
containing<font color="#CCCCCC"> an ampersand</font><font color="#E5E5E5"> because we're</font>

1099
00:37:59,480 --> 00:38:02,750
expecting<font color="#CCCCCC"> an entity here and the</font>

1100
00:38:00,800 --> 00:38:04,310
entities incomplete so the browser goes

1101
00:38:02,750 --> 00:38:06,560
ahead and says like Oh kinda changes to

1102
00:38:04,310 --> 00:38:09,350
the wait a second<font color="#E5E5E5"> that is invalid I</font>

1103
00:38:06,560 --> 00:38:10,790
can't where was I<font color="#CCCCCC"> oh here with the from</font>

1104
00:38:09,350 --> 00:38:13,160
so that changed it back<font color="#E5E5E5"> to from and</font>

1105
00:38:10,790 --> 00:38:15,470
that's how we<font color="#E5E5E5"> get the attack and so that</font>

1106
00:38:13,160 --> 00:38:19,549
was<font color="#E5E5E5"> quite nice</font><font color="#CCCCCC"> rooks and chrome works in</font>

1107
00:38:15,470 --> 00:38:21,200
Firefox<font color="#E5E5E5"> there's good news beaker also</font>

1108
00:38:19,550 --> 00:38:24,620
works<font color="#E5E5E5"> in Oprah but there's good news</font>

1109
00:38:21,200 --> 00:38:27,109
because SVG 2.0 is deprecating this

1110
00:38:24,620 --> 00:38:28,430
feature<font color="#E5E5E5"> entirely and it's gonna be</font>

1111
00:38:27,110 --> 00:38:29,750
interesting<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> when browsers</font>

1112
00:38:28,430 --> 00:38:32,149
actually deprecated this as well and

1113
00:38:29,750 --> 00:38:32,620
kind<font color="#E5E5E5"> of get</font><font color="#CCCCCC"> rid of it</font><font color="#E5E5E5"> um let's see we'll</font>

1114
00:38:32,150 --> 00:38:36,140
see

1115
00:38:32,620 --> 00:38:37,580
<font color="#CCCCCC">anyhow there was</font><font color="#E5E5E5"> the bypass reported and</font>

1116
00:38:36,140 --> 00:38:39,230
we didn't<font color="#E5E5E5"> hear anything from the</font>

1117
00:38:37,580 --> 00:38:41,360
angularjs team from Google<font color="#CCCCCC"> security yes</font>

1118
00:38:39,230 --> 00:38:43,640
but<font color="#E5E5E5"> not regular Justine one week</font><font color="#CCCCCC"> passed</font>

1119
00:38:41,360 --> 00:38:45,710
two weeks<font color="#CCCCCC"> passed</font><font color="#E5E5E5"> they came up with the</font>

1120
00:38:43,640 --> 00:38:47,089
RC one it's<font color="#CCCCCC"> like</font><font color="#E5E5E5"> damn it</font><font color="#CCCCCC"> it's getting</font>

1121
00:38:45,710 --> 00:38:48,500
<font color="#CCCCCC">closed they came up with</font><font color="#E5E5E5"> the RC</font><font color="#CCCCCC"> tools</font>

1122
00:38:47,090 --> 00:38:49,550
<font color="#CCCCCC">like holy</font><font color="#E5E5E5"> they're close to release</font>

1123
00:38:48,500 --> 00:38:50,960
they have to fix this

1124
00:38:49,550 --> 00:38:52,760
so we<font color="#CCCCCC"> pink</font><font color="#E5E5E5"> them again and</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> and</font>

1125
00:38:50,960 --> 00:38:54,710
again<font color="#E5E5E5"> and eventually</font><font color="#CCCCCC"> they actually did</font>

1126
00:38:52,760 --> 00:38:56,420
fix the back<font color="#E5E5E5"> so they completely</font>

1127
00:38:54,710 --> 00:38:57,920
<font color="#E5E5E5">restructure of the way they</font><font color="#CCCCCC"> fill the</font>

1128
00:38:56,420 --> 00:39:00,470
white<font color="#E5E5E5"> list with like a different mapping</font>

1129
00:38:57,920 --> 00:39:03,020
function and now everything is<font color="#CCCCCC"> fine so</font>

1130
00:39:00,470 --> 00:39:05,779
yeah<font color="#CCCCCC"> and they also added</font><font color="#E5E5E5"> this thing to</font>

1131
00:39:03,020 --> 00:39:07,850
one of the core components<font color="#E5E5E5"> specifically</font>

1132
00:39:05,780 --> 00:39:10,850
to the dollar<font color="#CCCCCC"> sanitized component so</font>

1133
00:39:07,850 --> 00:39:12,170
like okay<font color="#E5E5E5"> you just</font><font color="#CCCCCC"> never ever Uglies</font>

1134
00:39:10,850 --> 00:39:13,520
just don't just like no one<font color="#E5E5E5"> can touch</font>

1135
00:39:12,170 --> 00:39:14,900
this<font color="#E5E5E5"> like we have enough there is</font>

1136
00:39:13,520 --> 00:39:16,520
another<font color="#E5E5E5"> person</font><font color="#CCCCCC"> like this and then please</font>

1137
00:39:14,900 --> 00:39:18,950
just<font color="#E5E5E5"> like double review whatever just</font>

1138
00:39:16,520 --> 00:39:23,030
like no<font color="#CCCCCC"> cool</font><font color="#E5E5E5"> at least we did</font><font color="#CCCCCC"> something</font>

1139
00:39:18,950 --> 00:39:24,710
we created<font color="#CCCCCC"> a comment but not everybody</font>

1140
00:39:23,030 --> 00:39:27,950
liked us for that<font color="#CCCCCC"> I think these</font><font color="#E5E5E5"> kind of</font>

1141
00:39:24,710 --> 00:39:31,520
things are necessary<font color="#CCCCCC"> to be done by</font>

1142
00:39:27,950 --> 00:39:32,899
<font color="#E5E5E5">attackers who do evil things but with</font>

1143
00:39:31,520 --> 00:39:34,970
good things<font color="#E5E5E5"> in mind and it's better that</font>

1144
00:39:32,900 --> 00:39:37,580
we do it than someone<font color="#E5E5E5"> else but</font><font color="#CCCCCC"> not</font>

1145
00:39:34,970 --> 00:39:39,049
everybody liked us for that<font color="#E5E5E5"> so yeah</font>

1146
00:39:37,580 --> 00:39:43,880
<font color="#CCCCCC">we've backed off you further in the end</font>

1147
00:39:39,050 --> 00:39:48,530
so they even<font color="#CCCCCC"> gave us money sweet sweet</font>

1148
00:39:43,880 --> 00:39:50,780
money so let's draw a quick<font color="#E5E5E5"> conclusion</font>

1149
00:39:48,530 --> 00:39:52,360
<font color="#E5E5E5">because I'm running out</font><font color="#CCCCCC"> of time we've</font>

1150
00:39:50,780 --> 00:39:56,690
seen four attack vectors now

1151
00:39:52,360 --> 00:39:57,809
sandbox<font color="#E5E5E5"> sanitizer CSP mode and just</font>

1152
00:39:56,690 --> 00:39:59,549
<font color="#E5E5E5">attacking</font><font color="#CCCCCC"> the</font>

1153
00:39:57,809 --> 00:40:01,170
people and the code themselves but just

1154
00:39:59,549 --> 00:40:02,509
like abusing<font color="#E5E5E5"> their own backs and turning</font>

1155
00:40:01,170 --> 00:40:06,869
them against<font color="#E5E5E5"> them they won't</font><font color="#CCCCCC"> even notice</font>

1156
00:40:02,509 --> 00:40:08,699
<font color="#E5E5E5">it was</font><font color="#CCCCCC"> a bit unfair but no they no I do</font>

1157
00:40:06,869 --> 00:40:10,380
<font color="#E5E5E5">believe that angularjs does in fact</font>

1158
00:40:08,699 --> 00:40:11,999
<font color="#CCCCCC">extend</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> attack surface dramatically</font>

1159
00:40:10,380 --> 00:40:14,609
<font color="#E5E5E5">so there are so many things that are not</font>

1160
00:40:11,999 --> 00:40:16,499
necessary<font color="#CCCCCC"> and I do not</font><font color="#E5E5E5"> really think that</font>

1161
00:40:14,609 --> 00:40:19,979
they built this<font color="#CCCCCC"> framework in a fairly</font>

1162
00:40:16,499 --> 00:40:22,379
responsible<font color="#E5E5E5"> way because yes they specify</font>

1163
00:40:19,979 --> 00:40:23,729
how to<font color="#E5E5E5"> use this framework</font><font color="#CCCCCC"> but they did</font>

1164
00:40:22,380 --> 00:40:24,839
<font color="#E5E5E5">not put</font><font color="#CCCCCC"> into considerations that</font>

1165
00:40:23,729 --> 00:40:27,959
developers are<font color="#CCCCCC"> going to screw</font><font color="#E5E5E5"> it up</font>

1166
00:40:24,839 --> 00:40:29,160
<font color="#E5E5E5">anyway somehow sometimes you</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> even</font>

1167
00:40:27,959 --> 00:40:30,509
<font color="#E5E5E5">know that you screwed up because you</font>

1168
00:40:29,160 --> 00:40:32,098
<font color="#CCCCCC">don't even find that particular website</font>

1169
00:40:30,509 --> 00:40:33,269
<font color="#E5E5E5">that tells you how to do it right you</font>

1170
00:40:32,099 --> 00:40:35,309
<font color="#E5E5E5">just say like I have a website already</font>

1171
00:40:33,269 --> 00:40:37,140
<font color="#E5E5E5">and it's working fine it's perfectly</font>

1172
00:40:35,309 --> 00:40:39,239
safe against XSS<font color="#E5E5E5"> but I want to qualify</font>

1173
00:40:37,140 --> 00:40:41,069
<font color="#CCCCCC">this</font><font color="#E5E5E5"> thing and put angularjs on top and</font>

1174
00:40:39,239 --> 00:40:43,109
that's<font color="#E5E5E5"> it that's it</font><font color="#CCCCCC"> event you're</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> a</font>

1175
00:40:41,069 --> 00:40:46,170
<font color="#E5E5E5">majority of our clients</font><font color="#CCCCCC"> actually did</font>

1176
00:40:43,109 --> 00:40:48,390
that<font color="#E5E5E5"> multiple</font><font color="#CCCCCC"> times in a row so we asked</font>

1177
00:40:46,170 --> 00:40:49,680
our<font color="#E5E5E5"> clients so did you really fix it or</font>

1178
00:40:48,390 --> 00:40:51,839
now we just upgraded<font color="#E5E5E5"> the version of the</font>

1179
00:40:49,680 --> 00:40:53,339
XS SS cons like<font color="#E5E5E5"> no it's not gone</font><font color="#CCCCCC"> so we</font>

1180
00:40:51,839 --> 00:40:56,219
had so many awkward discussions with

1181
00:40:53,339 --> 00:40:58,109
clients doing exactly that<font color="#CCCCCC"> and I</font><font color="#E5E5E5"> think</font>

1182
00:40:56,219 --> 00:41:00,089
the framework<font color="#CCCCCC"> should</font><font color="#E5E5E5"> have seen that</font>

1183
00:40:58,109 --> 00:41:03,150
coming<font color="#CCCCCC"> and I see the framework should</font>

1184
00:41:00,089 --> 00:41:05,880
have had<font color="#CCCCCC"> better and more prominent</font>

1185
00:41:03,150 --> 00:41:06,929
<font color="#E5E5E5">security information</font><font color="#CCCCCC"> to teach developers</font>

1186
00:41:05,880 --> 00:41:08,609
to not<font color="#E5E5E5"> shoot themselves in the foot</font>

1187
00:41:06,929 --> 00:41:09,929
because<font color="#CCCCCC"> it's like a</font><font color="#E5E5E5"> machine</font><font color="#CCCCCC"> gun they</font>

1188
00:41:08,609 --> 00:41:13,769
keep shooting themselves in the foot<font color="#E5E5E5"> all</font>

1189
00:41:09,929 --> 00:41:15,959
<font color="#E5E5E5">the time multiple times in a row um I do</font>

1190
00:41:13,769 --> 00:41:17,729
believe<font color="#E5E5E5"> that Google's team</font><font color="#CCCCCC"> meanwhile</font>

1191
00:41:15,959 --> 00:41:19,319
does actually<font color="#E5E5E5"> quite well so they have</font>

1192
00:41:17,729 --> 00:41:20,788
<font color="#CCCCCC">all the communication they had this blog</font>

1193
00:41:19,319 --> 00:41:23,189
<font color="#CCCCCC">post where they're</font><font color="#E5E5E5"> probably all day on</font>

1194
00:41:20,789 --> 00:41:24,539
themselves<font color="#CCCCCC"> I do believe that</font><font color="#E5E5E5"> the entire</font>

1195
00:41:23,189 --> 00:41:25,859
team<font color="#E5E5E5"> and the documentation could do a</font>

1196
00:41:24,539 --> 00:41:27,209
little<font color="#E5E5E5"> bit better and</font><font color="#CCCCCC"> helping developers</font>

1197
00:41:25,859 --> 00:41:29,910
<font color="#CCCCCC">and kind of enumerate in these</font><font color="#E5E5E5"> things</font>

1198
00:41:27,209 --> 00:41:31,979
and<font color="#E5E5E5"> actually making the risk that</font><font color="#CCCCCC"> you</font>

1199
00:41:29,910 --> 00:41:33,569
undertake or that you accept when

1200
00:41:31,979 --> 00:41:35,519
putting angularjs on top of your

1201
00:41:33,569 --> 00:41:36,719
<font color="#CCCCCC">existing applications more prominent so</font>

1202
00:41:35,519 --> 00:41:41,160
people really understand what is<font color="#E5E5E5"> going</font>

1203
00:41:36,719 --> 00:41:43,079
<font color="#E5E5E5">on and yeah</font><font color="#CCCCCC"> I wouldn't</font><font color="#E5E5E5"> I want to</font>

1204
00:41:41,160 --> 00:41:44,999
<font color="#CCCCCC">conclude here and I want</font><font color="#E5E5E5"> to kind of</font>

1205
00:41:43,079 --> 00:41:47,309
finalize<font color="#E5E5E5"> with this one last thing</font><font color="#CCCCCC"> that</font>

1206
00:41:44,999 --> 00:41:48,839
was mentioning so I said<font color="#CCCCCC"> something when</font>

1207
00:41:47,309 --> 00:41:51,569
talking about sandbox bypasses in the

1208
00:41:48,839 --> 00:41:54,029
middle of this talk<font color="#E5E5E5"> and I said that we</font>

1209
00:41:51,569 --> 00:41:55,679
have a bypass<font color="#E5E5E5"> and that they asked us</font><font color="#CCCCCC"> to</font>

1210
00:41:54,029 --> 00:41:58,259
give us the<font color="#E5E5E5"> bypass so they can fix them</font>

1211
00:41:55,679 --> 00:42:00,539
and we said no<font color="#E5E5E5"> and now quite</font>

1212
00:41:58,259 --> 00:42:02,309
understandably<font color="#E5E5E5"> you might say that</font><font color="#CCCCCC"> is not</font>

1213
00:42:00,539 --> 00:42:04,589
a good move like why did you<font color="#CCCCCC"> do that</font>

1214
00:42:02,309 --> 00:42:06,390
that<font color="#CCCCCC"> is not</font><font color="#E5E5E5"> very ethical and I agree</font>

1215
00:42:04,589 --> 00:42:08,308
it's not<font color="#E5E5E5"> very ethical</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> we have a</font>

1216
00:42:06,390 --> 00:42:10,170
reason<font color="#CCCCCC"> for that and we have an</font><font color="#E5E5E5"> agreement</font>

1217
00:42:08,309 --> 00:42:11,600
with<font color="#E5E5E5"> the maintainer of angularjs right</font>

1218
00:42:10,170 --> 00:42:13,060
now so

1219
00:42:11,600 --> 00:42:14,930
<font color="#E5E5E5">I tweeted that we have the bypass</font><font color="#CCCCCC"> and</font>

1220
00:42:13,060 --> 00:42:16,279
someone from<font color="#CCCCCC"> the core team came that</font>

1221
00:42:14,930 --> 00:42:19,069
means that I do do<font color="#E5E5E5"> you want to share</font>

1222
00:42:16,280 --> 00:42:22,040
<font color="#E5E5E5">that exploit exploit you never call it</font>

1223
00:42:19,070 --> 00:42:23,810
exploit in the past and I said anyway I

1224
00:42:22,040 --> 00:42:26,240
don't<font color="#CCCCCC"> want to share it</font><font color="#E5E5E5"> he's like okay</font>

1225
00:42:23,810 --> 00:42:27,650
<font color="#E5E5E5">that's sad why not</font><font color="#CCCCCC"> it's like</font><font color="#E5E5E5"> I'm not</font>

1226
00:42:26,240 --> 00:42:30,560
gonna explain this in 140 characters

1227
00:42:27,650 --> 00:42:32,750
<font color="#CCCCCC">let's jump on a call he said yes so we</font>

1228
00:42:30,560 --> 00:42:35,450
jumped<font color="#E5E5E5"> on a call and I was talking</font><font color="#CCCCCC"> to a</font>

1229
00:42:32,750 --> 00:42:37,760
Pete bacon Darwin who's<font color="#CCCCCC"> now the</font><font color="#E5E5E5"> core</font>

1230
00:42:35,450 --> 00:42:39,640
tech lead of the remaining parts that

1231
00:42:37,760 --> 00:42:42,530
are there with angularjs one point X and

1232
00:42:39,640 --> 00:42:43,759
he asked me right away<font color="#CCCCCC"> in select so what</font>

1233
00:42:42,530 --> 00:42:46,460
do you want do<font color="#CCCCCC"> you want money</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> this</font>

1234
00:42:43,760 --> 00:42:48,200
<font color="#E5E5E5">things no I don't want money but our</font>

1235
00:42:46,460 --> 00:42:50,180
<font color="#E5E5E5">problem is</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a penetration testing</font>

1236
00:42:48,200 --> 00:42:51,740
firm is<font color="#E5E5E5"> that we have to deliver proof of</font>

1237
00:42:50,180 --> 00:42:54,950
concepts to<font color="#CCCCCC"> our clients we have one</font>

1238
00:42:51,740 --> 00:42:56,750
<font color="#E5E5E5">client they have an angularjs</font><font color="#CCCCCC"> XSS we</font>

1239
00:42:54,950 --> 00:42:58,220
point out where it is<font color="#CCCCCC"> we give</font><font color="#E5E5E5"> them a</font>

1240
00:42:56,750 --> 00:43:00,590
proof of concept with<font color="#E5E5E5"> the popping alert</font>

1241
00:42:58,220 --> 00:43:02,810
or whatever we use then they fix this

1242
00:43:00,590 --> 00:43:04,100
thing by updating<font color="#E5E5E5"> the version testing</font>

1243
00:43:02,810 --> 00:43:06,410
the vector that we<font color="#E5E5E5"> send them so like</font>

1244
00:43:04,100 --> 00:43:08,120
it's not<font color="#E5E5E5"> working anymore so</font><font color="#CCCCCC"> we say then</font>

1245
00:43:06,410 --> 00:43:10,220
yeah but you<font color="#CCCCCC"> just updated the version</font>

1246
00:43:08,120 --> 00:43:11,720
now we have to have a new<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have to</font>

1247
00:43:10,220 --> 00:43:15,730
find a new cell box bypass that's<font color="#CCCCCC"> gonna</font>

1248
00:43:11,720 --> 00:43:18,169
<font color="#CCCCCC">cross this time</font><font color="#E5E5E5"> sorry so they again</font>

1249
00:43:15,730 --> 00:43:20,420
require us to<font color="#E5E5E5"> have a look at the code</font>

1250
00:43:18,170 --> 00:43:22,700
bypass<font color="#E5E5E5"> the sandbox again</font><font color="#CCCCCC"> prove to</font><font color="#E5E5E5"> them</font>

1251
00:43:20,420 --> 00:43:24,860
again that<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> deliverable let</font><font color="#E5E5E5"> happen</font>

1252
00:43:22,700 --> 00:43:27,049
like<font color="#E5E5E5"> six times in a row and after six</font>

1253
00:43:24,860 --> 00:43:28,940
times in a row<font color="#E5E5E5"> always</font><font color="#CCCCCC"> finding new</font>

1254
00:43:27,050 --> 00:43:31,280
sandbox bypasses<font color="#CCCCCC"> that always takes you</font>

1255
00:43:28,940 --> 00:43:33,680
<font color="#E5E5E5">like maybe two hours maybe half a day</font>

1256
00:43:31,280 --> 00:43:35,630
<font color="#E5E5E5">maybe a full night</font><font color="#CCCCCC"> eventually you get</font>

1257
00:43:33,680 --> 00:43:36,830
sick of finding sandbox bypasses just to

1258
00:43:35,630 --> 00:43:40,130
prove<font color="#CCCCCC"> to your clients</font><font color="#E5E5E5"> that that's</font>

1259
00:43:36,830 --> 00:43:43,310
<font color="#E5E5E5">durable so my line</font><font color="#CCCCCC"> of argument to the</font>

1260
00:43:40,130 --> 00:43:45,350
maintainer of the<font color="#E5E5E5"> angularjs</font><font color="#CCCCCC"> team was we</font>

1261
00:43:43,310 --> 00:43:47,120
have a sandbox<font color="#CCCCCC"> bypass</font><font color="#E5E5E5"> we don't want you</font>

1262
00:43:45,350 --> 00:43:48,770
<font color="#E5E5E5">to fix it but</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't want to use</font><font color="#CCCCCC"> it</font>

1263
00:43:47,120 --> 00:43:50,420
for<font color="#E5E5E5"> bad we just want to use it</font><font color="#CCCCCC"> to prove</font>

1264
00:43:48,770 --> 00:43:51,830
to clients<font color="#E5E5E5"> that even if they update to</font>

1265
00:43:50,420 --> 00:43:54,140
the latest version<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> still</font>

1266
00:43:51,830 --> 00:43:55,970
vulnerable<font color="#CCCCCC"> and only if they really fix</font>

1267
00:43:54,140 --> 00:43:57,950
it by setting<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> the container</font>

1268
00:43:55,970 --> 00:44:00,589
<font color="#CCCCCC">to</font><font color="#E5E5E5"> engine on bindable then they're safe</font>

1269
00:43:57,950 --> 00:44:02,839
and we can't do<font color="#E5E5E5"> that if we only have</font>

1270
00:44:00,590 --> 00:44:04,340
tools<font color="#CCCCCC"> that sold like</font><font color="#E5E5E5"> a console error and</font>

1271
00:44:02,840 --> 00:44:05,300
the client comes to<font color="#E5E5E5"> us</font><font color="#CCCCCC"> and said</font><font color="#E5E5E5"> oh yeah</font>

1272
00:44:04,340 --> 00:44:07,130
but you<font color="#E5E5E5"> can't execute arbitrary</font>

1273
00:44:05,300 --> 00:44:08,540
JavaScript<font color="#E5E5E5"> so we're fine right no you're</font>

1274
00:44:07,130 --> 00:44:10,310
<font color="#E5E5E5">not because someone else will at some</font>

1275
00:44:08,540 --> 00:44:11,930
<font color="#CCCCCC">point it's</font><font color="#E5E5E5"> probably likely going</font><font color="#CCCCCC"> to be</font>

1276
00:44:10,310 --> 00:44:14,299
asked<font color="#CCCCCC"> because we now have to sit</font><font color="#E5E5E5"> down in</font>

1277
00:44:11,930 --> 00:44:15,919
our free<font color="#CCCCCC"> time</font><font color="#E5E5E5"> and find a new bypass so</font>

1278
00:44:14,300 --> 00:44:18,200
we<font color="#E5E5E5"> finally get the client to secure the</font>

1279
00:44:15,920 --> 00:44:19,310
applications<font color="#CCCCCC"> so you see the dilemma here</font>

1280
00:44:18,200 --> 00:44:22,819
or do you<font color="#E5E5E5"> see the</font><font color="#CCCCCC"> degenerate</font>

1281
00:44:19,310 --> 00:44:24,770
<font color="#E5E5E5">programmatics cool I see some people</font>

1282
00:44:22,820 --> 00:44:27,110
<font color="#E5E5E5">nodding so I explained all</font>

1283
00:44:24,770 --> 00:44:28,370
thing<font color="#E5E5E5"> to to the maintainer</font><font color="#CCCCCC"> and he told</font>

1284
00:44:27,110 --> 00:44:31,510
me over<font color="#E5E5E5"> the</font><font color="#CCCCCC"> phone like you know what</font>

1285
00:44:28,370 --> 00:44:33,410
that's cool<font color="#E5E5E5"> with me okay that was easy</font>

1286
00:44:31,510 --> 00:44:34,910
sorry is fine with<font color="#CCCCCC"> that they're fine</font>

1287
00:44:33,410 --> 00:44:35,990
with that<font color="#CCCCCC"> he basically</font><font color="#E5E5E5"> said as long as</font>

1288
00:44:34,910 --> 00:44:38,839
<font color="#CCCCCC">you don't</font><font color="#E5E5E5"> publish this thing</font><font color="#CCCCCC"> you can</font>

1289
00:44:35,990 --> 00:44:40,490
keep it<font color="#E5E5E5"> um and he also explained that</font>

1290
00:44:38,840 --> 00:44:42,140
<font color="#E5E5E5">one point X was pretty much abandoned</font>

1291
00:44:40,490 --> 00:44:43,819
and that<font color="#CCCCCC"> there's like a couple of</font><font color="#E5E5E5"> people</font>

1292
00:44:42,140 --> 00:44:45,799
left maintaining this thing and that

1293
00:44:43,820 --> 00:44:47,570
<font color="#E5E5E5">this is also the reason why the last</font>

1294
00:44:45,800 --> 00:44:48,920
<font color="#CCCCCC">sandbox bypass took</font><font color="#E5E5E5"> some low to fix so</font>

1295
00:44:47,570 --> 00:44:52,040
long to fix the hundred and<font color="#CCCCCC"> twenty days</font>

1296
00:44:48,920 --> 00:44:54,320
and well this one would probably<font color="#CCCCCC"> also</font>

1297
00:44:52,040 --> 00:44:55,610
take a long time<font color="#E5E5E5"> to fix and yeah there</font>

1298
00:44:54,320 --> 00:44:57,680
is<font color="#E5E5E5"> no reason to actually fix it because</font>

1299
00:44:55,610 --> 00:44:59,240
<font color="#E5E5E5">the project is</font><font color="#CCCCCC"> pretty much dead all the</font>

1300
00:44:57,680 --> 00:45:02,960
energy<font color="#CCCCCC"> of the core</font><font color="#E5E5E5"> team is going into</font>

1301
00:44:59,240 --> 00:45:05,029
2.0<font color="#E5E5E5"> and if you're using one point X be</font>

1302
00:45:02,960 --> 00:45:08,210
careful because security<font color="#CCCCCC"> patches</font><font color="#E5E5E5"> are not</font>

1303
00:45:05,030 --> 00:45:10,870
gonna come<font color="#E5E5E5"> and yeah that concludes my</font>

1304
00:45:08,210 --> 00:45:10,870
talk thank you very much

