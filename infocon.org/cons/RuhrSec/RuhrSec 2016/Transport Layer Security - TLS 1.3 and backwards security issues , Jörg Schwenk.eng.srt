1
00:00:00,060 --> 00:00:05,819
so<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think it's a</font><font color="#E5E5E5"> nice opportunity to</font>

2
00:00:03,510 --> 00:00:09,809
give a short overview on recent work on

3
00:00:05,819 --> 00:00:12,269
TLS<font color="#E5E5E5"> and this is also a nice boundary</font>

4
00:00:09,809 --> 00:00:16,590
because the<font color="#E5E5E5"> last talk</font><font color="#CCCCCC"> to tomorrow will</font>

5
00:00:12,269 --> 00:00:18,240
be a talk on drown so I will mention<font color="#CCCCCC"> it</font>

6
00:00:16,590 --> 00:00:20,460
<font color="#E5E5E5">around here shortly because it fits the</font>

7
00:00:18,240 --> 00:00:23,220
big picture<font color="#E5E5E5"> but I think you will get</font>

8
00:00:20,460 --> 00:00:25,050
<font color="#E5E5E5">this is some little</font><font color="#CCCCCC"> bit older stuff and</font>

9
00:00:23,220 --> 00:00:28,680
<font color="#E5E5E5">and tomorrow you will hear the latest</font>

10
00:00:25,050 --> 00:00:30,929
<font color="#E5E5E5">news</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> how to break break TMS so I</font>

11
00:00:28,680 --> 00:00:33,269
entitled<font color="#E5E5E5"> this talk transport layer</font>

12
00:00:30,929 --> 00:00:36,300
security the past in the<font color="#CCCCCC"> future why the</font>

13
00:00:33,270 --> 00:00:40,320
<font color="#E5E5E5">future because it's it's about mostly</font>

14
00:00:36,300 --> 00:00:42,300
<font color="#E5E5E5">about the new version of TLS 1.3 so I</font>

15
00:00:40,320 --> 00:00:45,629
still<font color="#E5E5E5"> don't understand why it's called</font>

16
00:00:42,300 --> 00:00:48,328
1.3 for me it's a 2.0<font color="#CCCCCC"> because there are</font>

17
00:00:45,629 --> 00:00:54,078
so<font color="#E5E5E5"> many changes that</font><font color="#CCCCCC"> will be made in</font><font color="#E5E5E5"> the</font>

18
00:00:48,329 --> 00:00:59,070
<font color="#CCCCCC">new standard so just a</font><font color="#E5E5E5"> short comparison</font>

19
00:00:54,079 --> 00:01:01,770
<font color="#CCCCCC">about the diversions</font><font color="#E5E5E5"> so as you may know</font>

20
00:00:59,070 --> 00:01:04,290
the TLS standard consists of the

21
00:01:01,770 --> 00:01:07,229
<font color="#E5E5E5">handshake protocol where algorithms and</font>

22
00:01:04,290 --> 00:01:10,380
keys are negotiated<font color="#E5E5E5"> and the record layer</font>

23
00:01:07,229 --> 00:01:12,539
<font color="#E5E5E5">while data is encrypted</font><font color="#CCCCCC"> and everything</font>

24
00:01:10,380 --> 00:01:14,810
will change<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that when nothing will be</font>

25
00:01:12,540 --> 00:01:18,780
left unchanged in the<font color="#E5E5E5"> use telnet</font>

26
00:01:14,810 --> 00:01:21,030
<font color="#E5E5E5">the main one of the main intentions of</font>

27
00:01:18,780 --> 00:01:25,229
<font color="#CCCCCC">fourteen of Neustadt was to reduce</font>

28
00:01:21,030 --> 00:01:28,439
<font color="#E5E5E5">latency so the old handshake version</font>

29
00:01:25,229 --> 00:01:32,009
needs at least two round-trip times<font color="#E5E5E5"> so</font>

30
00:01:28,439 --> 00:01:35,990
we have two exchanges in both directions

31
00:01:32,009 --> 00:01:41,400
<font color="#CCCCCC">the new handshake will use only</font><font color="#E5E5E5"> 1.5</font>

32
00:01:35,990 --> 00:01:43,048
<font color="#E5E5E5">round-trip times some problematic cipher</font>

33
00:01:41,400 --> 00:01:46,409
suite families will be completely

34
00:01:43,049 --> 00:01:49,320
<font color="#CCCCCC">eliminated</font><font color="#E5E5E5"> not because of the security</font>

35
00:01:46,409 --> 00:01:54,930
<font color="#CCCCCC">issues associated with</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> I assume but</font>

36
00:01:49,320 --> 00:01:57,689
<font color="#E5E5E5">it's many idea of observation</font><font color="#CCCCCC"> so we want</font>

37
00:01:54,930 --> 00:02:00,270
the designers of TLS 1.3 want to have

38
00:01:57,689 --> 00:02:03,179
perfect forward secrecy<font color="#E5E5E5"> in the future so</font>

39
00:02:00,270 --> 00:02:08,269
that no<font color="#E5E5E5"> military agency can spy on</font>

40
00:02:03,180 --> 00:02:11,370
connections that are in the in the past

41
00:02:08,270 --> 00:02:13,290
<font color="#E5E5E5">yeah in the old standard only two</font>

42
00:02:11,370 --> 00:02:15,989
messages are encrypted<font color="#E5E5E5"> to finish</font>

43
00:02:13,290 --> 00:02:18,120
justice has changed<font color="#CCCCCC"> the designers tried</font>

44
00:02:15,989 --> 00:02:20,069
to encrypt<font color="#E5E5E5"> as many and check messages as</font>

45
00:02:18,120 --> 00:02:22,200
possible<font color="#E5E5E5"> and there is even a zero</font>

46
00:02:20,069 --> 00:02:28,319
<font color="#E5E5E5">round-trip time version where</font><font color="#CCCCCC"> you can</font>

47
00:02:22,200 --> 00:02:30,659
encrypt<font color="#CCCCCC"> with the first exchange</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> okay</font>

48
00:02:28,319 --> 00:02:34,439
and<font color="#E5E5E5"> for for the old versions we had to</font>

49
00:02:30,659 --> 00:02:36,870
devise an our own security<font color="#E5E5E5"> model</font><font color="#CCCCCC"> ACCE</font><font color="#E5E5E5"> to</font>

50
00:02:34,439 --> 00:02:38,280
<font color="#CCCCCC">prove formally</font><font color="#E5E5E5"> proof</font><font color="#CCCCCC"> its security</font><font color="#E5E5E5"> this</font>

51
00:02:36,870 --> 00:02:40,500
will be changed<font color="#CCCCCC"> too it will</font><font color="#E5E5E5"> be a</font>

52
00:02:38,280 --> 00:02:43,920
classical authenticated key exchange

53
00:02:40,500 --> 00:02:47,239
protocol<font color="#E5E5E5"> so they took some input from</font>

54
00:02:43,920 --> 00:02:49,559
from the formal modeling community and

55
00:02:47,239 --> 00:02:55,159
many cryptographers<font color="#E5E5E5"> are working on on</font>

56
00:02:49,560 --> 00:02:57,359
<font color="#E5E5E5">this new version and the extensions</font>

57
00:02:55,159 --> 00:02:59,370
<font color="#E5E5E5">changed so there will be no more</font>

58
00:02:57,359 --> 00:03:03,599
<font color="#E5E5E5">abbreviated handshake there will be no</font>

59
00:02:59,370 --> 00:03:08,299
more renegotiation all will be packed

60
00:03:03,599 --> 00:03:08,298
into the main handshake<font color="#E5E5E5"> with different</font>

61
00:03:08,900 --> 00:03:14,909
versions<font color="#CCCCCC"> ok the record layer was in the</font>

62
00:03:13,169 --> 00:03:17,810
focus<font color="#CCCCCC"> of many</font><font color="#E5E5E5"> of the attacks that</font>

63
00:03:14,909 --> 00:03:21,810
<font color="#E5E5E5">received much publicity lately so poodle</font>

64
00:03:17,810 --> 00:03:25,949
<font color="#CCCCCC">crime beasts</font><font color="#E5E5E5"> these were all attacks on</font>

65
00:03:21,810 --> 00:03:29,190
the record layer<font color="#E5E5E5"> lucky 13 so this was a</font>

66
00:03:25,949 --> 00:03:31,349
reason<font color="#E5E5E5"> to</font><font color="#CCCCCC"> change this part because TLS</font>

67
00:03:29,190 --> 00:03:34,290
used a very strange<font color="#E5E5E5"> construction called</font>

68
00:03:31,349 --> 00:03:36,418
<font color="#CCCCCC">MEK then patch then encrypt and this is</font>

69
00:03:34,290 --> 00:03:38,608
the<font color="#E5E5E5"> reason why so many attacks succeeded</font>

70
00:03:36,419 --> 00:03:40,979
here this will be changed<font color="#E5E5E5"> this will be</font>

71
00:03:38,609 --> 00:03:44,760
changed to pet then encrypt-then-mac<font color="#CCCCCC"> and</font>

72
00:03:40,979 --> 00:03:46,949
this should make<font color="#CCCCCC"> away with all</font><font color="#E5E5E5"> these</font>

73
00:03:44,760 --> 00:03:52,198
<font color="#E5E5E5">attacks that you have that we have</font>

74
00:03:46,949 --> 00:03:54,209
<font color="#CCCCCC">learnt</font><font color="#E5E5E5"> in the past few years</font><font color="#CCCCCC"> a c4 was</font>

75
00:03:52,199 --> 00:03:56,909
heavily<font color="#CCCCCC"> criticized</font><font color="#E5E5E5"> because of the biases</font>

76
00:03:54,209 --> 00:03:59,909
it has this will also<font color="#E5E5E5"> be removed from</font>

77
00:03:56,909 --> 00:04:02,418
the record layer so no more<font color="#E5E5E5"> as</font><font color="#CCCCCC"> c4 in TLS</font>

78
00:03:59,909 --> 00:04:02,418
<font color="#CCCCCC">1 2 3</font>

79
00:04:03,979 --> 00:04:09,329
<font color="#CCCCCC">ok so took</font><font color="#E5E5E5"> a little bit deeper into this</font>

80
00:04:07,319 --> 00:04:12,720
<font color="#E5E5E5">comparison here's a picture of the</font>

81
00:04:09,329 --> 00:04:16,519
handshake<font color="#E5E5E5"> structure in the old versions</font>

82
00:04:12,720 --> 00:04:19,889
and the new version<font color="#CCCCCC"> and as you may see</font>

83
00:04:16,519 --> 00:04:24,330
there<font color="#E5E5E5"> is one</font><font color="#CCCCCC"> exchange less so the last</font>

84
00:04:19,889 --> 00:04:26,370
message is sent by the client<font color="#E5E5E5"> now</font><font color="#CCCCCC"> not by</font>

85
00:04:24,330 --> 00:04:30,320
the server<font color="#E5E5E5"> as before</font>

86
00:04:26,370 --> 00:04:33,750
and this also means that<font color="#E5E5E5"> the key</font>

87
00:04:30,320 --> 00:04:36,719
negotiation has to be started by the

88
00:04:33,750 --> 00:04:38,490
client so there is a<font color="#CCCCCC"> defilement</font><font color="#E5E5E5"> key</font>

89
00:04:36,720 --> 00:04:41,880
exchange in<font color="#E5E5E5"> the old version</font><font color="#CCCCCC"> the server</font>

90
00:04:38,490 --> 00:04:45,090
started it in the<font color="#CCCCCC"> new version the client</font>

91
00:04:41,880 --> 00:04:48,960
will start it and this saves 0.5

92
00:04:45,090 --> 00:04:52,260
round-trip times<font color="#CCCCCC"> overall what you</font><font color="#E5E5E5"> see</font>

93
00:04:48,960 --> 00:04:55,919
here in<font color="#CCCCCC"> grey these are the</font><font color="#E5E5E5"> encrypted</font>

94
00:04:52,260 --> 00:04:58,349
messages<font color="#CCCCCC"> so formally as I told you only</font>

95
00:04:55,919 --> 00:05:00,359
<font color="#E5E5E5">the finished messages were encrypted</font><font color="#CCCCCC"> and</font>

96
00:04:58,350 --> 00:05:04,050
there was no apparent<font color="#CCCCCC"> reason for doing</font>

97
00:05:00,360 --> 00:05:05,820
<font color="#CCCCCC">so it was just an</font><font color="#E5E5E5"> incident the protocol</font>

98
00:05:04,050 --> 00:05:08,310
would be as secure if they weren't

99
00:05:05,820 --> 00:05:12,570
encrypted in in the new version it makes

100
00:05:08,310 --> 00:05:15,650
sense<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can hide</font><font color="#E5E5E5"> the server identity</font>

101
00:05:12,570 --> 00:05:19,080
and also the client<font color="#E5E5E5"> identity if you wish</font>

102
00:05:15,650 --> 00:05:22,080
<font color="#CCCCCC">for example one interesting case may be</font>

103
00:05:19,080 --> 00:05:24,930
<font color="#E5E5E5">you can use TLS with client</font>

104
00:05:22,080 --> 00:05:27,659
authentication<font color="#E5E5E5"> over tor and it will not</font>

105
00:05:24,930 --> 00:05:29,850
reveal<font color="#E5E5E5"> your identity whereas in the the</font>

106
00:05:27,660 --> 00:05:31,229
old version<font color="#E5E5E5"> it would immediately reveal</font>

107
00:05:29,850 --> 00:05:32,910
your identity<font color="#E5E5E5"> because your client</font>

108
00:05:31,229 --> 00:05:35,280
certificate<font color="#E5E5E5"> would be sent in the clear</font>

109
00:05:32,910 --> 00:05:39,150
<font color="#E5E5E5">so there will be</font><font color="#CCCCCC"> a lot of you privacy</font>

110
00:05:35,280 --> 00:05:41,159
features there<font color="#CCCCCC"> and so it's an</font>

111
00:05:39,150 --> 00:05:46,080
<font color="#CCCCCC">interesting development that's</font><font color="#E5E5E5"> taking</font>

112
00:05:41,160 --> 00:05:49,380
place<font color="#E5E5E5"> there but the question is will we</font>

113
00:05:46,080 --> 00:05:51,539
<font color="#E5E5E5">get</font><font color="#CCCCCC"> rid of all our</font><font color="#E5E5E5"> problems by</font><font color="#CCCCCC"> just</font>

114
00:05:49,380 --> 00:05:54,690
introducing<font color="#CCCCCC"> a new version</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

115
00:05:51,539 --> 00:05:58,080
thing I'm talking about<font color="#E5E5E5"> today and my</font>

116
00:05:54,690 --> 00:05:59,699
answer is<font color="#CCCCCC"> no so we will have</font><font color="#E5E5E5"> to take</font>

117
00:05:58,080 --> 00:06:01,680
<font color="#E5E5E5">care</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we configure the</font><font color="#CCCCCC"> servers</font>

118
00:05:59,699 --> 00:06:04,800
correctly it's<font color="#E5E5E5"> not sufficient to say</font>

119
00:06:01,680 --> 00:06:07,380
<font color="#CCCCCC">that we want to have TLS 1.3 as our</font>

120
00:06:04,800 --> 00:06:13,669
preferred option<font color="#CCCCCC"> we really have</font><font color="#E5E5E5"> to</font>

121
00:06:07,380 --> 00:06:18,840
remove old ones<font color="#CCCCCC"> to to be to stay</font><font color="#E5E5E5"> secure</font>

122
00:06:13,669 --> 00:06:21,599
<font color="#CCCCCC">ok to explain</font><font color="#E5E5E5"> this attack I have to go a</font>

123
00:06:18,840 --> 00:06:24,960
little bit<font color="#E5E5E5"> into detail about one class</font>

124
00:06:21,599 --> 00:06:28,530
of attacks<font color="#E5E5E5"> that</font><font color="#CCCCCC"> didn't receive</font><font color="#E5E5E5"> it was</font>

125
00:06:24,960 --> 00:06:31,080
very old and is a but very<font color="#E5E5E5"> persistent so</font>

126
00:06:28,530 --> 00:06:35,429
there was no<font color="#E5E5E5"> really good patch against</font>

127
00:06:31,080 --> 00:06:38,438
it<font color="#CCCCCC"> like bhai attacks and I'll try</font><font color="#E5E5E5"> to</font>

128
00:06:35,430 --> 00:06:41,349
<font color="#E5E5E5">show</font><font color="#CCCCCC"> you why this this is a problem here</font>

129
00:06:38,439 --> 00:06:43,119
and<font color="#CCCCCC"> Oracle attacks on the record layer I</font>

130
00:06:41,349 --> 00:06:44,800
will<font color="#E5E5E5"> mention only very shortly because</font>

131
00:06:43,119 --> 00:06:48,339
this is<font color="#E5E5E5"> not in the main the main goal of</font>

132
00:06:44,800 --> 00:06:51,519
<font color="#E5E5E5">this talk okay if you have a look at the</font>

133
00:06:48,339 --> 00:06:53,409
<font color="#E5E5E5">history of SSA yes</font><font color="#CCCCCC"> its history where</font>

134
00:06:51,519 --> 00:06:57,159
<font color="#E5E5E5">there's some gaps where nothing happened</font>

135
00:06:53,409 --> 00:06:58,719
in standardization and some activity<font color="#E5E5E5"> so</font>

136
00:06:57,159 --> 00:07:02,188
most<font color="#E5E5E5"> of the activity was centered around</font>

137
00:06:58,719 --> 00:07:06,550
<font color="#CCCCCC">two 2006-2008 two new versions</font><font color="#E5E5E5"> appeared</font>

138
00:07:02,189 --> 00:07:09,279
and there was no real reason<font color="#CCCCCC"> for that</font>

139
00:07:06,550 --> 00:07:13,599
because<font color="#E5E5E5"> the attacks were still scarce</font>

140
00:07:09,279 --> 00:07:15,099
<font color="#CCCCCC">and it was just improvement of the</font><font color="#E5E5E5"> awe</font>

141
00:07:13,599 --> 00:07:17,139
of<font color="#E5E5E5"> these standards who is this was</font>

142
00:07:15,099 --> 00:07:24,729
<font color="#E5E5E5">really minor minor versions minor</font>

143
00:07:17,139 --> 00:07:26,709
updates<font color="#E5E5E5"> but if you look at and just to</font>

144
00:07:24,729 --> 00:07:30,399
<font color="#E5E5E5">mention the old versions are still used</font>

145
00:07:26,709 --> 00:07:32,800
<font color="#CCCCCC">frequently and in the case</font><font color="#E5E5E5"> of SSA 2.0</font>

146
00:07:30,399 --> 00:07:35,229
this was really surprising<font color="#CCCCCC"> to me</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> I</font>

147
00:07:32,800 --> 00:07:37,629
learned<font color="#E5E5E5"> it from from the town paper that</font>

148
00:07:35,229 --> 00:07:40,329
is so heavily used<font color="#E5E5E5"> because this is</font>

149
00:07:37,629 --> 00:07:42,129
really a<font color="#CCCCCC"> version that has known</font><font color="#E5E5E5"> security</font>

150
00:07:40,329 --> 00:07:45,909
issues and should be deactivated should

151
00:07:42,129 --> 00:07:47,829
have been deactivated long ago<font color="#CCCCCC"> if you</font>

152
00:07:45,909 --> 00:07:50,229
look at the tech<font color="#CCCCCC"> history you can see in</font>

153
00:07:47,829 --> 00:07:56,169
an exponential<font color="#CCCCCC"> increase in</font><font color="#E5E5E5"> attacks so</font>

154
00:07:50,229 --> 00:08:01,419
but this did happen only after 2009 so

155
00:07:56,169 --> 00:08:03,789
before that<font color="#CCCCCC"> it was more stupid</font><font color="#E5E5E5"> back so</font>

156
00:08:01,419 --> 00:08:05,769
the debian back was before<font color="#CCCCCC"> that where</font>

157
00:08:03,789 --> 00:08:08,318
the the<font color="#E5E5E5"> random number generator was</font>

158
00:08:05,769 --> 00:08:12,339
removed from this<font color="#E5E5E5"> from the source code</font>

159
00:08:08,319 --> 00:08:14,099
<font color="#E5E5E5">and certificate verification</font><font color="#CCCCCC"> issues this</font>

160
00:08:12,339 --> 00:08:17,529
is<font color="#E5E5E5"> of course a standard issue with with</font>

161
00:08:14,099 --> 00:08:21,998
TLS<font color="#E5E5E5"> how to verify certificates correctly</font>

162
00:08:17,529 --> 00:08:22,899
but after that so after TLS 1.2<font color="#E5E5E5"> all</font>

163
00:08:21,999 --> 00:08:24,489
these attacks

164
00:08:22,899 --> 00:08:30,209
appeared<font color="#E5E5E5"> under on the record layer</font>

165
00:08:24,489 --> 00:08:33,308
mostly<font color="#E5E5E5"> but also different attacks and</font>

166
00:08:30,209 --> 00:08:35,198
the newest<font color="#E5E5E5"> detects I have listed above</font>

167
00:08:33,308 --> 00:08:37,478
heartbleed<font color="#E5E5E5"> again this was an</font>

168
00:08:35,198 --> 00:08:39,490
implementation error<font color="#E5E5E5"> it hits the most</font>

169
00:08:37,479 --> 00:08:42,519
important implementation of TLS

170
00:08:39,490 --> 00:08:47,500
<font color="#E5E5E5">therefore it had a great impact but it's</font>

171
00:08:42,519 --> 00:08:49,509
it only could<font color="#E5E5E5"> easily be litigated</font><font color="#CCCCCC"> three</font>

172
00:08:47,500 --> 00:08:51,810
shake was a very interesting theoretical

173
00:08:49,509 --> 00:08:53,880
attack<font color="#CCCCCC"> I think with less</font>

174
00:08:51,810 --> 00:08:59,550
practical impact<font color="#E5E5E5"> but it showed how</font>

175
00:08:53,880 --> 00:09:01,649
complex the handshake was<font color="#E5E5E5"> poodle</font><font color="#CCCCCC"> I think</font>

176
00:08:59,550 --> 00:09:04,920
one<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> strongest attacks to date</font>

177
00:09:01,649 --> 00:09:07,680
didn't receive as much attention<font color="#E5E5E5"> as</font><font color="#CCCCCC"> it</font>

178
00:09:04,920 --> 00:09:09,870
deserved<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it broke</font><font color="#E5E5E5"> till as</font>

179
00:09:07,680 --> 00:09:13,258
completely<font color="#E5E5E5"> and could only be mitigated</font>

180
00:09:09,870 --> 00:09:15,089
by<font color="#E5E5E5"> deactivating</font><font color="#CCCCCC"> as a</font><font color="#E5E5E5"> cell 3 to 0 so we</font>

181
00:09:13,259 --> 00:09:19,079
<font color="#CCCCCC">have Tory we</font><font color="#E5E5E5"> have reasons to deactivate</font>

182
00:09:15,089 --> 00:09:23,880
<font color="#E5E5E5">SSL 2.0 and 3.0 completely because of</font>

183
00:09:19,079 --> 00:09:26,040
<font color="#CCCCCC">Brown and poodle yeah then another</font>

184
00:09:23,880 --> 00:09:28,380
<font color="#E5E5E5">blocking buffer attack this was from</font>

185
00:09:26,040 --> 00:09:33,589
from<font color="#E5E5E5"> our chair</font><font color="#CCCCCC"> I will talk about this</font>

186
00:09:28,380 --> 00:09:37,319
later<font color="#CCCCCC"> in 2015 we had freak</font><font color="#E5E5E5"> smack</font><font color="#CCCCCC"> tail</font><font color="#E5E5E5"> as</font>

187
00:09:33,589 --> 00:09:41,579
these problems about<font color="#CCCCCC"> the state machine</font>

188
00:09:37,319 --> 00:09:43,500
of TLS surfaced<font color="#E5E5E5"> and</font><font color="#CCCCCC"> blacking back</font>

189
00:09:41,579 --> 00:09:45,959
<font color="#CCCCCC">assigning and this is the thing</font><font color="#E5E5E5"> I want</font>

190
00:09:43,500 --> 00:09:49,829
<font color="#CCCCCC">to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about in the second part of this</font>

191
00:09:45,959 --> 00:09:51,930
and now we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> drown and we are</font><font color="#E5E5E5"> still</font>

192
00:09:49,829 --> 00:09:54,750
<font color="#CCCCCC">expecting you other attacks on TLS</font>

193
00:09:51,930 --> 00:09:58,050
<font color="#E5E5E5">because it seems there are infinitely</font>

194
00:09:54,750 --> 00:10:02,250
many positive possibilities<font color="#E5E5E5"> were to</font>

195
00:09:58,050 --> 00:10:03,630
attack on how to attack it<font color="#CCCCCC"> ok but I want</font>

196
00:10:02,250 --> 00:10:05,970
<font color="#CCCCCC">to concentrate on blocking buffer</font>

197
00:10:03,630 --> 00:10:10,110
attacks because we need these to show

198
00:10:05,970 --> 00:10:13,410
that maybe TLS 1.3 is not the solution

199
00:10:10,110 --> 00:10:16,490
<font color="#CCCCCC">the only it's one solution but</font><font color="#E5E5E5"> we have</font>

200
00:10:13,410 --> 00:10:19,800
to do more<font color="#E5E5E5"> than</font><font color="#CCCCCC"> just to deactivate it</font>

201
00:10:16,490 --> 00:10:22,699
what is<font color="#E5E5E5"> obliging</font><font color="#CCCCCC"> waha attack so black</font>

202
00:10:19,800 --> 00:10:26,729
power attacks only<font color="#E5E5E5"> work for TL as RSA</font>

203
00:10:22,699 --> 00:10:28,769
<font color="#E5E5E5">this will be eliminated</font><font color="#CCCCCC"> until as 1.3 so</font>

204
00:10:26,730 --> 00:10:32,430
apparently this should not<font color="#E5E5E5"> be an issue</font>

205
00:10:28,769 --> 00:10:33,870
<font color="#CCCCCC">anymore</font><font color="#E5E5E5"> what I want to show you is the</font>

206
00:10:32,430 --> 00:10:36,239
black<font color="#E5E5E5"> number of attacks are very very</font>

207
00:10:33,870 --> 00:10:38,839
persistent so they occurred over time

208
00:10:36,240 --> 00:10:41,639
<font color="#E5E5E5">and time again and again and again and</font>

209
00:10:38,839 --> 00:10:44,579
the<font color="#E5E5E5"> the basis for</font><font color="#CCCCCC"> blazing bucket</font><font color="#E5E5E5"> X is</font>

210
00:10:41,639 --> 00:10:48,240
this client key exchange message to the

211
00:10:44,579 --> 00:10:51,269
screen<font color="#E5E5E5"> here I don't</font><font color="#CCCCCC"> want to go</font><font color="#E5E5E5"> into</font>

212
00:10:48,240 --> 00:10:54,449
details but we have<font color="#CCCCCC"> a padding</font><font color="#E5E5E5"> here that</font>

213
00:10:51,269 --> 00:10:58,230
starts with<font color="#E5E5E5"> 2 bytes that</font><font color="#CCCCCC"> are fixed</font><font color="#E5E5E5"> 0</font><font color="#CCCCCC"> and</font>

214
00:10:54,449 --> 00:11:01,079
<font color="#CCCCCC">2 and when after decrypting the message</font>

215
00:10:58,230 --> 00:11:03,060
this padding is checked and the original

216
00:11:01,079 --> 00:11:05,189
<font color="#CCCCCC">blacken baahar attacked it used the</font><font color="#E5E5E5"> fact</font>

217
00:11:03,060 --> 00:11:07,800
that still a server

218
00:11:05,190 --> 00:11:12,680
answered with<font color="#E5E5E5"> two different error</font>

219
00:11:07,800 --> 00:11:17,099
messages<font color="#E5E5E5"> if this check was not</font>

220
00:11:12,680 --> 00:11:20,819
<font color="#CCCCCC">successful so in this case climb key</font>

221
00:11:17,100 --> 00:11:22,950
exchange<font color="#E5E5E5"> message is</font><font color="#CCCCCC"> read</font><font color="#E5E5E5"> because now the</font>

222
00:11:20,820 --> 00:11:26,340
attacker manipulates this message it

223
00:11:22,950 --> 00:11:31,410
changes something on this<font color="#E5E5E5"> message and as</font>

224
00:11:26,340 --> 00:11:33,060
you can easily<font color="#E5E5E5"> calculate if this first</font>

225
00:11:31,410 --> 00:11:36,510
two<font color="#E5E5E5"> bytes are checked on the server side</font>

226
00:11:33,060 --> 00:11:39,839
in<font color="#E5E5E5"> roughly 1 out of 2 to the 16 cases</font>

227
00:11:36,510 --> 00:11:42,900
<font color="#E5E5E5">this padding will match so in this case</font>

228
00:11:39,840 --> 00:11:46,650
we<font color="#E5E5E5"> will</font><font color="#CCCCCC"> have the different error message</font>

229
00:11:42,900 --> 00:11:49,410
in most of the cases this padding will

230
00:11:46,650 --> 00:11:52,819
be<font color="#E5E5E5"> wrong and error message</font><font color="#CCCCCC"> 1 will be</font>

231
00:11:49,410 --> 00:11:56,160
sent back<font color="#E5E5E5"> so then the attacker knows</font><font color="#CCCCCC"> ok</font>

232
00:11:52,820 --> 00:11:59,910
<font color="#E5E5E5">my padding didn't start with the correct</font>

233
00:11:56,160 --> 00:12:04,410
byte values in 1 out of 2 to 16<font color="#E5E5E5"> cases he</font>

234
00:11:59,910 --> 00:12:06,569
gets another error message because the

235
00:12:04,410 --> 00:12:08,640
attacker doesn't know the premaster

236
00:12:06,570 --> 00:12:11,280
secret so<font color="#E5E5E5"> he cannot calculate a correct</font>

237
00:12:08,640 --> 00:12:13,470
key<font color="#E5E5E5"> so the client finished messages</font>

238
00:12:11,280 --> 00:12:15,569
cannot be verified<font color="#E5E5E5"> by the server so</font>

239
00:12:13,470 --> 00:12:19,500
<font color="#CCCCCC">indeed</font><font color="#E5E5E5"> and in that case it will always</font>

240
00:12:15,570 --> 00:12:22,350
fail so this is a<font color="#E5E5E5"> wrong message</font><font color="#CCCCCC"> to and</font>

241
00:12:19,500 --> 00:12:25,110
from each error message<font color="#E5E5E5"> to that the</font>

242
00:12:22,350 --> 00:12:27,210
attacker receives he can go one step

243
00:12:25,110 --> 00:12:29,460
<font color="#E5E5E5">further in the</font><font color="#CCCCCC"> lighting Baha attack and</font>

244
00:12:27,210 --> 00:12:31,560
can reduce<font color="#E5E5E5"> the number</font><font color="#CCCCCC"> of candidates for</font>

245
00:12:29,460 --> 00:12:34,130
the<font color="#E5E5E5"> plaintext contained in in the</font>

246
00:12:31,560 --> 00:12:37,949
<font color="#E5E5E5">original a client key exchange message</font>

247
00:12:34,130 --> 00:12:39,750
so this was fixed<font color="#E5E5E5"> soon after Daniel</font>

248
00:12:37,950 --> 00:12:41,550
<font color="#CCCCCC">Bryan Barker publishes the tech the</font>

249
00:12:39,750 --> 00:12:44,520
error messages were unified so if they

250
00:12:41,550 --> 00:12:51,170
were simply the same error message for

251
00:12:44,520 --> 00:12:54,030
both cases then some years<font color="#CCCCCC"> later</font><font color="#E5E5E5"> 3</font>

252
00:12:51,170 --> 00:12:57,240
<font color="#CCCCCC">Chekhov's check cryptographers came up</font>

253
00:12:54,030 --> 00:12:59,180
with a new<font color="#E5E5E5"> version of this attack the</font>

254
00:12:57,240 --> 00:13:04,080
<font color="#CCCCCC">euston a countermeasure this was</font>

255
00:12:59,180 --> 00:13:10,020
integrated into<font color="#E5E5E5"> SSL 3.0 against version</font>

256
00:13:04,080 --> 00:13:14,040
<font color="#E5E5E5">rollbacks attacks to SSL version 2 in</font>

257
00:13:10,020 --> 00:13:18,600
this this padding there is now<font color="#E5E5E5"> version</font>

258
00:13:14,040 --> 00:13:22,650
number included so and they used

259
00:13:18,600 --> 00:13:24,210
the fact that they received some some

260
00:13:22,650 --> 00:13:26,240
information<font color="#E5E5E5"> from the server whenever</font>

261
00:13:24,210 --> 00:13:29,760
<font color="#E5E5E5">these this this version number was</font>

262
00:13:26,240 --> 00:13:32,160
incorrect or correct<font color="#E5E5E5"> so this was the</font>

263
00:13:29,760 --> 00:13:38,310
<font color="#E5E5E5">next step in this displacement</font><font color="#CCCCCC"> pocket</font>

264
00:13:32,160 --> 00:13:42,420
chain then we did some work together

265
00:13:38,310 --> 00:13:45,479
with Sebastian and and others from<font color="#E5E5E5"> the</font>

266
00:13:42,420 --> 00:13:49,680
community and<font color="#E5E5E5"> we tried</font><font color="#CCCCCC"> to have a look at</font>

267
00:13:45,480 --> 00:13:50,760
the timing behavior<font color="#E5E5E5"> and despite all the</font>

268
00:13:49,680 --> 00:13:53,939
<font color="#E5E5E5">countermeasures</font><font color="#CCCCCC"> that had been</font>

269
00:13:50,760 --> 00:13:56,250
implemented<font color="#E5E5E5"> to</font><font color="#CCCCCC"> date in in many</font>

270
00:13:53,940 --> 00:13:59,640
applications we could measure a timing

271
00:13:56,250 --> 00:14:01,200
difference<font color="#E5E5E5"> between messages</font><font color="#CCCCCC"> that started</font>

272
00:13:59,640 --> 00:14:05,780
with a correct<font color="#E5E5E5"> two bytes and those that</font>

273
00:14:01,200 --> 00:14:08,820
didn't<font color="#E5E5E5"> and this was sufficient to break</font>

274
00:14:05,780 --> 00:14:11,520
<font color="#E5E5E5">three implementations to Java one</font>

275
00:14:08,820 --> 00:14:13,980
<font color="#CCCCCC">hardware</font><font color="#E5E5E5"> based it was not sufficient</font><font color="#CCCCCC"> to</font>

276
00:14:11,520 --> 00:14:16,680
do break<font color="#CCCCCC"> open SSL</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> there</font>

277
00:14:13,980 --> 00:14:18,680
additional<font color="#CCCCCC"> measures have been taken</font><font color="#E5E5E5"> to</font>

278
00:14:16,680 --> 00:14:24,689
prevent<font color="#CCCCCC"> lighting above</font><font color="#E5E5E5"> heretics</font>

279
00:14:18,680 --> 00:14:27,810
so and if you if<font color="#E5E5E5"> I want to put this the</font>

280
00:14:24,690 --> 00:14:29,400
<font color="#CCCCCC">drown attack into into</font><font color="#E5E5E5"> this context I</font>

281
00:14:27,810 --> 00:14:33,989
would<font color="#E5E5E5"> say okay now we have another</font>

282
00:14:29,400 --> 00:14:36,120
example<font color="#CCCCCC"> what what can happen</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and</font>

283
00:14:33,990 --> 00:14:40,710
this is the talk you will hear from

284
00:14:36,120 --> 00:14:43,080
<font color="#E5E5E5">Sebastian tomorrow there's even more</font>

285
00:14:40,710 --> 00:14:44,550
than these four examples<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> put</font>

286
00:14:43,080 --> 00:14:47,720
together<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> Blyton baahar type</font>

287
00:14:44,550 --> 00:14:50,400
attacks that have been<font color="#E5E5E5"> published</font><font color="#CCCCCC"> so the</font>

288
00:14:47,720 --> 00:14:53,250
there was<font color="#E5E5E5"> black navaja</font>

289
00:14:50,400 --> 00:14:55,740
attack at is<font color="#CCCCCC"> Oryx 2012 in in a different</font>

290
00:14:53,250 --> 00:15:01,050
<font color="#E5E5E5">context there were</font><font color="#CCCCCC"> blackened waha</font>

291
00:14:55,740 --> 00:15:04,740
attacks on hardware security modules<font color="#E5E5E5"> so</font>

292
00:15:01,050 --> 00:15:08,900
it seems<font color="#E5E5E5"> that this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> problem</font><font color="#CCCCCC"> that is</font>

293
00:15:04,740 --> 00:15:11,640
very<font color="#E5E5E5"> hard to mitigate even if you go to</font>

294
00:15:08,900 --> 00:15:15,410
what cryptographers always<font color="#CCCCCC"> proposed - Oh</font>

295
00:15:11,640 --> 00:15:18,650
<font color="#CCCCCC">our AP optimal as a metric encoding</font>

296
00:15:15,410 --> 00:15:22,829
encryption padding then you may<font color="#CCCCCC"> have a</font>

297
00:15:18,650 --> 00:15:25,780
manga attack this is a more efficient

298
00:15:22,830 --> 00:15:27,430
variant of the item for attacks<font color="#E5E5E5"> so it's</font>

299
00:15:25,780 --> 00:15:30,220
not<font color="#E5E5E5"> something that can easily be</font>

300
00:15:27,430 --> 00:15:35,069
mitigated with<font color="#E5E5E5"> cryptography alone you</font>

301
00:15:30,220 --> 00:15:35,070
need F to enhance the implementation

302
00:15:35,280 --> 00:15:45,819
<font color="#E5E5E5">okay so the assumption is for my my my</font>

303
00:15:42,130 --> 00:15:47,950
thesis that<font color="#E5E5E5"> TLS 1.3 will not completely</font>

304
00:15:45,820 --> 00:15:50,980
solve the problem that<font color="#CCCCCC"> lighten bother</font>

305
00:15:47,950 --> 00:15:54,730
<font color="#E5E5E5">like attacks may</font><font color="#CCCCCC"> root my a realistic</font>

306
00:15:50,980 --> 00:15:57,520
threat<font color="#E5E5E5"> in the future so we may have this</font>

307
00:15:54,730 --> 00:16:00,820
problem<font color="#E5E5E5"> again and again with all the</font>

308
00:15:57,520 --> 00:16:03,430
versions of TLS that support<font color="#E5E5E5"> RSA so it's</font>

309
00:16:00,820 --> 00:16:06,870
only<font color="#E5E5E5"> problem for RSA but we may have</font>

310
00:16:03,430 --> 00:16:10,989
this<font color="#CCCCCC"> dispersions around for a long</font><font color="#E5E5E5"> time</font>

311
00:16:06,870 --> 00:16:13,210
<font color="#E5E5E5">okay just as a round up for the attack</font>

312
00:16:10,990 --> 00:16:16,240
picture<font color="#E5E5E5"> a short word on the oracle</font>

313
00:16:13,210 --> 00:16:21,940
attacks<font color="#E5E5E5"> on the on the record layer why</font>

314
00:16:16,240 --> 00:16:26,140
is this why was this possible<font color="#E5E5E5"> just to</font>

315
00:16:21,940 --> 00:16:26,590
name three examples we<font color="#E5E5E5"> have padding</font>

316
00:16:26,140 --> 00:16:28,390
Oracle

317
00:16:26,590 --> 00:16:32,110
so really padding Oracle attack was

318
00:16:28,390 --> 00:16:34,480
poodle<font color="#E5E5E5"> who extended the ideas from from</font>

319
00:16:32,110 --> 00:16:36,700
vada neat with the padding used in and

320
00:16:34,480 --> 00:16:41,380
<font color="#CCCCCC">Android so on down</font><font color="#E5E5E5"> to the padding used</font>

321
00:16:36,700 --> 00:16:43,839
in until s we have a timing<font color="#E5E5E5"> Oracle in</font>

322
00:16:41,380 --> 00:16:46,990
lucky 13 we have<font color="#CCCCCC"> a length Oracle in</font>

323
00:16:43,839 --> 00:16:52,240
crime<font color="#CCCCCC"> why is is</font><font color="#E5E5E5"> always possible so at</font>

324
00:16:46,990 --> 00:16:57,070
least for<font color="#E5E5E5"> the first two there's maybe</font>

325
00:16:52,240 --> 00:17:00,220
the<font color="#E5E5E5"> reason is this Mac then patch then</font>

326
00:16:57,070 --> 00:17:05,680
encrypt structure of the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> old record</font>

327
00:17:00,220 --> 00:17:09,160
layer<font color="#E5E5E5"> so what does Mac then pet</font><font color="#CCCCCC"> that</font>

328
00:17:05,680 --> 00:17:10,930
encrypt mean on the server side so on

329
00:17:09,160 --> 00:17:11,410
the server side we do this the other way

330
00:17:10,930 --> 00:17:16,930
<font color="#CCCCCC">around</font>

331
00:17:11,410 --> 00:17:19,390
so we first decrypt and the padding

332
00:17:16,930 --> 00:17:21,850
Oracle<font color="#E5E5E5"> attacks described by voting me</font>

333
00:17:19,390 --> 00:17:25,240
they've worked for encryption that

334
00:17:21,849 --> 00:17:28,329
didn't have a checksum<font color="#E5E5E5"> like a Mac but</font>

335
00:17:25,240 --> 00:17:31,810
here in this construction<font color="#E5E5E5"> Mac then pet</font>

336
00:17:28,329 --> 00:17:33,850
in encrypt the Mac is somehow made

337
00:17:31,810 --> 00:17:36,490
useless<font color="#E5E5E5"> because it's the last step that</font>

338
00:17:33,850 --> 00:17:39,280
is checked<font color="#E5E5E5"> and it should be the</font><font color="#CCCCCC"> first</font>

339
00:17:36,490 --> 00:17:41,650
step<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the idea until s1</font>

340
00:17:39,280 --> 00:17:45,070
<font color="#E5E5E5">three so what we do when we decrypt a</font>

341
00:17:41,650 --> 00:17:46,690
<font color="#E5E5E5">Mac then</font><font color="#CCCCCC"> pet and encrypt transport</font><font color="#E5E5E5"> layer</font>

342
00:17:45,070 --> 00:17:49,960
message we first decrypt the message

343
00:17:46,690 --> 00:17:52,720
there we expect no errors because after

344
00:17:49,960 --> 00:17:55,030
decryption<font color="#CCCCCC"> we only expect</font><font color="#E5E5E5"> a randomly</font>

345
00:17:52,720 --> 00:17:58,480
looking byte string<font color="#E5E5E5"> so we'd</font><font color="#CCCCCC"> have no</font>

346
00:17:55,030 --> 00:18:01,300
assumption on what is no<font color="#E5E5E5"> assumption on</font>

347
00:17:58,480 --> 00:18:03,010
the<font color="#CCCCCC"> plaintext</font><font color="#E5E5E5"> the only assumption on the</font>

348
00:18:01,300 --> 00:18:05,220
<font color="#CCCCCC">plaintext we</font><font color="#E5E5E5"> have is that the padding is</font>

349
00:18:03,010 --> 00:18:08,770
correct and this<font color="#CCCCCC"> is checked</font><font color="#E5E5E5"> in the</font>

350
00:18:05,220 --> 00:18:10,930
second<font color="#E5E5E5"> step and in the second step we</font>

351
00:18:08,770 --> 00:18:14,530
<font color="#CCCCCC">may have</font><font color="#E5E5E5"> a source of</font><font color="#CCCCCC"> information because</font>

352
00:18:10,930 --> 00:18:18,220
<font color="#E5E5E5">we get some some padding errors and if</font>

353
00:18:14,530 --> 00:18:22,980
we have this was with poodle where they

354
00:18:18,220 --> 00:18:26,890
induced padding errors and were able<font color="#E5E5E5"> to</font>

355
00:18:22,980 --> 00:18:31,030
use<font color="#CCCCCC"> these</font><font color="#E5E5E5"> dis padding errors to compute</font>

356
00:18:26,890 --> 00:18:35,410
<font color="#E5E5E5">plaintext</font><font color="#CCCCCC"> byte and</font><font color="#E5E5E5"> then lastly the Mac</font>

357
00:18:31,030 --> 00:18:38,910
is checked<font color="#E5E5E5"> and this check may occur with</font>

358
00:18:35,410 --> 00:18:42,400
some<font color="#E5E5E5"> time delay depending on the padding</font>

359
00:18:38,910 --> 00:18:47,290
<font color="#CCCCCC">this</font><font color="#E5E5E5"> was the idea behind lucky 13 where</font>

360
00:18:42,400 --> 00:18:48,940
you can shift<font color="#E5E5E5"> the Mac position a</font><font color="#CCCCCC"> little</font>

361
00:18:47,290 --> 00:18:52,870
<font color="#E5E5E5">bit so</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> takes a little bit longer</font>

362
00:18:48,940 --> 00:18:54,690
and<font color="#E5E5E5"> you can deduce from from this timing</font>

363
00:18:52,870 --> 00:18:57,850
difference<font color="#E5E5E5"> something</font><font color="#CCCCCC"> about the plaintext</font>

364
00:18:54,690 --> 00:18:59,350
<font color="#CCCCCC">so all this is problematic because we</font>

365
00:18:57,850 --> 00:19:03,429
have this<font color="#E5E5E5"> construction and therefore</font><font color="#CCCCCC"> it</font>

366
00:18:59,350 --> 00:19:05,199
will<font color="#E5E5E5"> be changed</font><font color="#CCCCCC"> to encrypt and pet pet</font>

367
00:19:03,430 --> 00:19:07,180
then encrypt-then-mac<font color="#E5E5E5"> padding must be</font>

368
00:19:05,200 --> 00:19:10,210
done before encryption so what we will

369
00:19:07,180 --> 00:19:13,270
do is we will check the Mac on the

370
00:19:10,210 --> 00:19:18,900
<font color="#CCCCCC">ciphertext and all these problems on a</font>

371
00:19:13,270 --> 00:19:25,389
record<font color="#E5E5E5"> player will disappear</font><font color="#CCCCCC"> okay so</font>

372
00:19:18,900 --> 00:19:28,480
this was the the old the past what<font color="#E5E5E5"> about</font>

373
00:19:25,390 --> 00:19:31,780
the<font color="#E5E5E5"> future so I would want</font><font color="#CCCCCC"> to start with</font>

374
00:19:28,480 --> 00:19:35,530
another<font color="#E5E5E5"> short overview</font><font color="#CCCCCC"> until as 1.3 so</font>

375
00:19:31,780 --> 00:19:38,760
give a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> details on</font><font color="#E5E5E5"> what</font>

376
00:19:35,530 --> 00:19:40,450
is new there and then I will show

377
00:19:38,760 --> 00:19:44,650
<font color="#CCCCCC">backwards-compatibility attack</font>

378
00:19:40,450 --> 00:19:47,320
we presented a<font color="#CCCCCC"> CCS last year that uses</font>

379
00:19:44,650 --> 00:19:51,440
older versions of TLS to break till as

380
00:19:47,320 --> 00:19:54,769
1.3 so

381
00:19:51,440 --> 00:19:58,909
short short overview so first of all one

382
00:19:54,769 --> 00:20:00,769
message<font color="#E5E5E5"> the</font><font color="#CCCCCC"> standard is very complex so</font>

383
00:19:58,909 --> 00:20:04,370
we<font color="#CCCCCC"> tried to</font><font color="#E5E5E5"> extract the cryptographic</font>

384
00:20:00,769 --> 00:20:10,100
<font color="#E5E5E5">essence from from the standard and put</font>

385
00:20:04,370 --> 00:20:12,379
it in in two descriptions<font color="#CCCCCC"> left is the</font>

386
00:20:10,100 --> 00:20:14,379
standard handshake<font color="#E5E5E5"> and right is the</font><font color="#CCCCCC"> zero</font>

387
00:20:12,379 --> 00:20:16,908
<font color="#CCCCCC">round to a plan handshake so it's</font>

388
00:20:14,379 --> 00:20:20,689
there's a lot<font color="#E5E5E5"> of crypto in in the new</font>

389
00:20:16,909 --> 00:20:23,450
standard<font color="#E5E5E5"> and what is also very complex</font>

390
00:20:20,690 --> 00:20:26,450
is the key derivation<font color="#E5E5E5"> so this is still</font>

391
00:20:23,450 --> 00:20:30,049
<font color="#E5E5E5">not fit and not finished yet</font><font color="#CCCCCC"> so there</font>

392
00:20:26,450 --> 00:20:35,480
will be key derivation function and you

393
00:20:30,049 --> 00:20:38,299
key derivation function will be used<font color="#E5E5E5"> h h</font>

394
00:20:35,480 --> 00:20:41,750
GD f this<font color="#E5E5E5"> is a key deviation function</font>

395
00:20:38,299 --> 00:20:45,860
proposed by<font color="#CCCCCC"> luca krafchick and it is</font>

396
00:20:41,750 --> 00:20:50,389
what's used in in text secure and partly

397
00:20:45,860 --> 00:20:52,250
in an IPSec<font color="#E5E5E5"> so it's a</font><font color="#CCCCCC"> a new construction</font>

398
00:20:50,389 --> 00:20:55,699
<font color="#CCCCCC">and</font><font color="#E5E5E5"> that the whole key structure is</font>

399
00:20:52,250 --> 00:21:00,080
<font color="#E5E5E5">different we have now a static secret</font>

400
00:20:55,700 --> 00:21:02,450
that<font color="#E5E5E5"> may be an ephemeral secret in some</font>

401
00:21:00,080 --> 00:21:04,939
cases<font color="#CCCCCC"> so also that</font><font color="#E5E5E5"> the terminology</font><font color="#CCCCCC"> is a</font>

402
00:21:02,450 --> 00:21:07,460
<font color="#CCCCCC">little bit</font><font color="#E5E5E5"> confusing and all these keys</font>

403
00:21:04,940 --> 00:21:10,610
are<font color="#E5E5E5"> mixed stay are passed through this</font>

404
00:21:07,460 --> 00:21:13,190
<font color="#CCCCCC">HKD F function and we get a lot more</font>

405
00:21:10,610 --> 00:21:15,620
keys<font color="#CCCCCC"> we have keys to compute the</font>

406
00:21:13,190 --> 00:21:17,840
<font color="#E5E5E5">finished messages we have again a master</font>

407
00:21:15,620 --> 00:21:21,139
secret<font color="#E5E5E5"> like in the old version but we</font>

408
00:21:17,840 --> 00:21:23,000
have<font color="#E5E5E5"> different keys exported from that</font>

409
00:21:21,139 --> 00:21:24,918
from the master security<font color="#E5E5E5"> the encryption</font>

410
00:21:23,000 --> 00:21:26,950
and integrity keys will be<font color="#E5E5E5"> computed and</font>

411
00:21:24,919 --> 00:21:30,019
in<font color="#CCCCCC"> addition the resumption secrets and</font>

412
00:21:26,950 --> 00:21:32,740
exporter secrets<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> get also keys</font>

413
00:21:30,019 --> 00:21:35,419
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can export</font><font color="#CCCCCC"> from the from the</font>

414
00:21:32,740 --> 00:21:37,490
TLS handshake to other applications<font color="#CCCCCC"> and</font>

415
00:21:35,419 --> 00:21:39,320
<font color="#E5E5E5">that you can use for</font><font color="#CCCCCC"> example for doing</font>

416
00:21:37,490 --> 00:21:45,379
JavaScript<font color="#E5E5E5"> cryptography or something</font>

417
00:21:39,320 --> 00:21:52,850
like<font color="#E5E5E5"> that so</font><font color="#CCCCCC"> okay to make</font><font color="#E5E5E5"> it a</font><font color="#CCCCCC"> little</font>

418
00:21:45,379 --> 00:21:55,490
bit easier to<font color="#E5E5E5"> follow what is new I have</font>

419
00:21:52,850 --> 00:21:58,549
a slide<font color="#CCCCCC"> here with the three goals that</font><font color="#E5E5E5"> I</font>

420
00:21:55,490 --> 00:22:01,519
think are the<font color="#CCCCCC"> most important goals</font><font color="#E5E5E5"> that</font>

421
00:21:58,549 --> 00:22:04,668
still has 1.3 wants to achieve<font color="#E5E5E5"> these</font>

422
00:22:01,519 --> 00:22:05,430
goals are perfect forward secrecy<font color="#CCCCCC"> so</font><font color="#E5E5E5"> no</font>

423
00:22:04,669 --> 00:22:09,630
<font color="#E5E5E5">body</font>

424
00:22:05,430 --> 00:22:12,720
should be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to decrypt exchanges that</font>

425
00:22:09,630 --> 00:22:14,610
lie in the<font color="#CCCCCC"> past</font><font color="#E5E5E5"> even not a government</font>

426
00:22:12,720 --> 00:22:17,430
<font color="#E5E5E5">agency</font><font color="#CCCCCC"> that requests the private key of</font>

427
00:22:14,610 --> 00:22:19,500
<font color="#E5E5E5">the server there should only be</font><font color="#CCCCCC"> possible</font>

428
00:22:17,430 --> 00:22:21,060
to encrypt connections lie in the<font color="#E5E5E5"> future</font>

429
00:22:19,500 --> 00:22:23,400
<font color="#E5E5E5">so this is the goal of perfect forward</font>

430
00:22:21,060 --> 00:22:26,250
secrecy<font color="#E5E5E5"> another goal was to reduce</font>

431
00:22:23,400 --> 00:22:30,300
<font color="#E5E5E5">round-trip time this was a goal pushed</font>

432
00:22:26,250 --> 00:22:32,790
by<font color="#CCCCCC"> goobie to make everything faster and</font>

433
00:22:30,300 --> 00:22:37,139
another goal that<font color="#E5E5E5"> was stated in some</font>

434
00:22:32,790 --> 00:22:41,810
<font color="#E5E5E5">slides</font><font color="#CCCCCC"> was to give more privacy</font><font color="#E5E5E5"> but it's</font>

435
00:22:37,140 --> 00:22:46,080
<font color="#E5E5E5">more privacy is really not specified</font>

436
00:22:41,810 --> 00:22:48,270
<font color="#E5E5E5">it's just some argument</font><font color="#CCCCCC"> right to encrypt</font>

437
00:22:46,080 --> 00:22:51,659
more<font color="#E5E5E5"> messages</font><font color="#CCCCCC"> so how do we</font><font color="#E5E5E5"> achieve these</font>

438
00:22:48,270 --> 00:22:55,440
goals in in the new handshake<font color="#CCCCCC"> this is</font>

439
00:22:51,660 --> 00:22:59,940
the new handshake<font color="#CCCCCC"> the perfect for mercy</font>

440
00:22:55,440 --> 00:23:02,130
is achieved by<font color="#E5E5E5"> simply eliminating the</font>

441
00:22:59,940 --> 00:23:06,330
<font color="#E5E5E5">two</font><font color="#CCCCCC"> cipher suite families still as RSA</font>

442
00:23:02,130 --> 00:23:11,250
<font color="#E5E5E5">and TLS D ha this is these were the two</font>

443
00:23:06,330 --> 00:23:14,820
families that enabled<font color="#E5E5E5"> spying of agencies</font>

444
00:23:11,250 --> 00:23:18,150
on<font color="#E5E5E5"> past traffic and it will be removed</font>

445
00:23:14,820 --> 00:23:23,010
so in if everyone<font color="#E5E5E5"> uses TLS 1.3 it won't</font>

446
00:23:18,150 --> 00:23:27,540
be possible<font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> to to spy all</font>

447
00:23:23,010 --> 00:23:29,660
connections so this is<font color="#E5E5E5"> somehow in the</font>

448
00:23:27,540 --> 00:23:34,440
standard handshake easily achieved

449
00:23:29,660 --> 00:23:37,470
<font color="#E5E5E5">reduced</font><font color="#CCCCCC"> round trip times we have to make</font>

450
00:23:34,440 --> 00:23:40,710
the<font color="#CCCCCC"> client start the key exchange</font><font color="#E5E5E5"> this</font>

451
00:23:37,470 --> 00:23:42,450
comes<font color="#E5E5E5"> with some complications</font><font color="#CCCCCC"> because in</font>

452
00:23:40,710 --> 00:23:44,190
the old version they had time they had

453
00:23:42,450 --> 00:23:47,400
one<font color="#CCCCCC"> exchange to agree on all the</font>

454
00:23:44,190 --> 00:23:49,890
<font color="#E5E5E5">cryptographic parameters if the client</font>

455
00:23:47,400 --> 00:23:53,280
now starts the<font color="#E5E5E5"> key exchange he does not</font>

456
00:23:49,890 --> 00:23:55,080
know which group which mathematical

457
00:23:53,280 --> 00:23:58,170
group<font color="#CCCCCC"> dissolvable</font><font color="#E5E5E5"> used to compute</font><font color="#CCCCCC"> the</font>

458
00:23:55,080 --> 00:23:59,939
keys so he<font color="#E5E5E5"> has to make</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> guesses</font><font color="#CCCCCC"> so</font>

459
00:23:58,170 --> 00:24:03,780
this especially means that he may

460
00:23:59,940 --> 00:24:06,030
include<font color="#E5E5E5"> several key shares in his client</font>

461
00:24:03,780 --> 00:24:09,389
<font color="#CCCCCC">cliche message and I try to indicate</font>

462
00:24:06,030 --> 00:24:13,610
<font color="#E5E5E5">this with a prime order group and an</font>

463
00:24:09,390 --> 00:24:17,040
elliptic curve group so we<font color="#E5E5E5"> he will put</font>

464
00:24:13,610 --> 00:24:18,490
<font color="#E5E5E5">the same share in many different groups</font>

465
00:24:17,040 --> 00:24:20,559
<font color="#E5E5E5">in this message and the</font>

466
00:24:18,490 --> 00:24:24,880
I can select<font color="#E5E5E5"> one so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> one of the</font>

467
00:24:20,559 --> 00:24:29,379
small changes<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I needed to reduce</font>

468
00:24:24,880 --> 00:24:33,340
the round-trip time more privacy<font color="#E5E5E5"> this is</font>

469
00:24:29,380 --> 00:24:36,280
of<font color="#E5E5E5"> course simple we simply encrypt more</font>

470
00:24:33,340 --> 00:24:38,260
we can do this because the saw the

471
00:24:36,280 --> 00:24:41,889
client now starts<font color="#E5E5E5"> the handshake so the</font>

472
00:24:38,260 --> 00:24:44,620
server<font color="#CCCCCC"> after he selected his defilement</font>

473
00:24:41,890 --> 00:24:46,330
share can he can compute the key<font color="#CCCCCC"> he has</font>

474
00:24:44,620 --> 00:24:48,250
to<font color="#E5E5E5"> sent his share unencrypted but</font>

475
00:24:46,330 --> 00:24:53,290
everything<font color="#CCCCCC"> after that he</font><font color="#E5E5E5"> can send</font>

476
00:24:48,250 --> 00:24:56,440
encrypted<font color="#CCCCCC"> so because of the</font><font color="#E5E5E5"> fact that we</font>

477
00:24:53,290 --> 00:25:01,139
start the<font color="#CCCCCC"> cloud</font><font color="#E5E5E5"> key exchange earlier we</font>

478
00:24:56,440 --> 00:25:04,900
can also encrypt earlier<font color="#CCCCCC"> okay this is</font>

479
00:25:01,140 --> 00:25:08,980
but not the end of<font color="#E5E5E5"> the story this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> we</font>

480
00:25:04,900 --> 00:25:12,370
can encrypt<font color="#E5E5E5"> somehow earlier but one</font><font color="#CCCCCC"> of</font>

481
00:25:08,980 --> 00:25:14,290
the<font color="#E5E5E5"> ideas that were originally</font>

482
00:25:12,370 --> 00:25:16,270
implemented by Google<font color="#E5E5E5"> were in the quic</font>

483
00:25:14,290 --> 00:25:19,360
protocol was the idea<font color="#E5E5E5"> to start</font>

484
00:25:16,270 --> 00:25:21,700
encrypting<font color="#E5E5E5"> immediately and for doing so</font>

485
00:25:19,360 --> 00:25:24,610
we need we need something we need some

486
00:25:21,700 --> 00:25:26,110
key of the server<font color="#E5E5E5"> that is cached on the</font>

487
00:25:24,610 --> 00:25:29,229
client side

488
00:25:26,110 --> 00:25:31,780
this is cached in a client configuration

489
00:25:29,230 --> 00:25:34,510
message that was exchanged<font color="#E5E5E5"> in some</font>

490
00:25:31,780 --> 00:25:37,899
previous handshake<font color="#E5E5E5"> and if we if the</font>

491
00:25:34,510 --> 00:25:40,929
<font color="#CCCCCC">client has such a message cached</font><font color="#E5E5E5"> he can</font>

492
00:25:37,900 --> 00:25:43,270
use the zero round-trip time handshake

493
00:25:40,929 --> 00:25:48,370
and here nearly<font color="#E5E5E5"> everything is encrypted</font>

494
00:25:43,270 --> 00:25:50,290
<font color="#CCCCCC">so what we have is we have</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> messages</font>

495
00:25:48,370 --> 00:25:53,320
<font color="#CCCCCC">that must be</font><font color="#E5E5E5"> sent unencrypted because</font>

496
00:25:50,290 --> 00:25:56,290
otherwise decryption will not work on

497
00:25:53,320 --> 00:25:59,409
the server<font color="#E5E5E5"> side</font><font color="#CCCCCC"> the client Keisha</font><font color="#E5E5E5"> must</font>

498
00:25:56,290 --> 00:26:01,178
be sent unencrypted<font color="#E5E5E5"> but then and also</font>

499
00:25:59,410 --> 00:26:03,820
the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> client hello message containing</font>

500
00:26:01,179 --> 00:26:06,280
the nonce because this nonce is used for

501
00:26:03,820 --> 00:26:08,649
key derivation and if you don't know it

502
00:26:06,280 --> 00:26:10,928
we cannot derive the key<font color="#E5E5E5"> then two</font>

503
00:26:08,650 --> 00:26:13,929
<font color="#CCCCCC">different</font><font color="#E5E5E5"> keys will be</font><font color="#CCCCCC"> used this</font><font color="#E5E5E5"> is the</font>

504
00:26:10,929 --> 00:26:17,350
<font color="#CCCCCC">two shades of gray that I've</font><font color="#E5E5E5"> used here</font>

505
00:26:13,929 --> 00:26:21,460
the first one<font color="#CCCCCC"> is</font><font color="#E5E5E5"> semi static key that</font>

506
00:26:17,350 --> 00:26:25,530
will<font color="#E5E5E5"> be computed from this cached server</font>

507
00:26:21,460 --> 00:26:30,070
<font color="#E5E5E5">key share and the client Keisha</font><font color="#CCCCCC"> that was</font>

508
00:26:25,530 --> 00:26:31,680
sent in<font color="#E5E5E5"> a second message</font><font color="#CCCCCC"> and as you see</font>

509
00:26:30,070 --> 00:26:34,760
the client now can

510
00:26:31,680 --> 00:26:37,620
send<font color="#CCCCCC"> additional data in encrypted form</font>

511
00:26:34,760 --> 00:26:40,620
especially<font color="#E5E5E5"> interesting here is the</font>

512
00:26:37,620 --> 00:26:43,889
server name indication extension because

513
00:26:40,620 --> 00:26:47,219
<font color="#CCCCCC">this is an indication that normally</font>

514
00:26:43,890 --> 00:26:49,350
violates the other server privacy so it

515
00:26:47,220 --> 00:26:52,920
doesn't make very<font color="#E5E5E5"> much</font><font color="#CCCCCC"> sense if I</font>

516
00:26:49,350 --> 00:26:56,010
encrypt the server certificate where the

517
00:26:52,920 --> 00:26:59,400
<font color="#CCCCCC">server's identity is</font><font color="#E5E5E5"> is contained but</font>

518
00:26:56,010 --> 00:27:02,280
then I have<font color="#E5E5E5"> to send for for virtual</font>

519
00:26:59,400 --> 00:27:04,590
hosting based solutions<font color="#E5E5E5"> the identity of</font>

520
00:27:02,280 --> 00:27:07,230
<font color="#E5E5E5">the server its domain name in the</font><font color="#CCCCCC"> SMI</font>

521
00:27:04,590 --> 00:27:10,620
extension so this is<font color="#E5E5E5"> something that</font>

522
00:27:07,230 --> 00:27:12,090
<font color="#E5E5E5">where the some privacy</font><font color="#CCCCCC"> definition that</font>

523
00:27:10,620 --> 00:27:14,189
<font color="#E5E5E5">did not really</font><font color="#CCCCCC"> make sense because</font>

524
00:27:12,090 --> 00:27:16,709
encrypting the certificate makes only

525
00:27:14,190 --> 00:27:18,600
<font color="#E5E5E5">sense if also as an</font><font color="#CCCCCC"> I is encrypted</font><font color="#E5E5E5"> but</font>

526
00:27:16,710 --> 00:27:20,070
this can be<font color="#CCCCCC"> achieved</font><font color="#E5E5E5"> with this</font><font color="#CCCCCC"> zero</font>

527
00:27:18,600 --> 00:27:22,560
round-trip time and check so<font color="#CCCCCC"> if you want</font>

528
00:27:20,070 --> 00:27:24,929
<font color="#E5E5E5">to have really private privacy what you</font>

529
00:27:22,560 --> 00:27:27,629
have to do is you have<font color="#CCCCCC"> to visit</font><font color="#E5E5E5"> the</font>

530
00:27:24,930 --> 00:27:29,640
server with a normal handshake<font color="#CCCCCC"> I get all</font>

531
00:27:27,630 --> 00:27:33,050
the the<font color="#CCCCCC"> server configuration messages</font>

532
00:27:29,640 --> 00:27:35,490
store them and then start the<font color="#E5E5E5"> next</font>

533
00:27:33,050 --> 00:27:38,970
<font color="#CCCCCC">handshake in this</font><font color="#E5E5E5"> zero</font><font color="#CCCCCC"> round-trip time</font>

534
00:27:35,490 --> 00:27:41,940
mode and then an observer cannot see

535
00:27:38,970 --> 00:27:45,270
which to which of the<font color="#E5E5E5"> virtual service</font>

536
00:27:41,940 --> 00:27:48,140
you are<font color="#E5E5E5"> talking so</font><font color="#CCCCCC"> this is really an</font>

537
00:27:45,270 --> 00:27:53,010
increase<font color="#E5E5E5"> in privacy</font>

538
00:27:48,140 --> 00:27:56,270
<font color="#CCCCCC">okay enter yeah the perfect I underlined</font>

539
00:27:53,010 --> 00:27:58,710
everything there<font color="#E5E5E5"> we of course we have</font>

540
00:27:56,270 --> 00:28:00,930
reduced<font color="#E5E5E5"> the round-trip time to zero we</font>

541
00:27:58,710 --> 00:28:03,270
can start<font color="#CCCCCC"> immediately with</font><font color="#E5E5E5"> encryption we</font>

542
00:28:00,930 --> 00:28:05,010
have more<font color="#E5E5E5"> privacy than in the regular</font>

543
00:28:03,270 --> 00:28:07,379
handshake<font color="#CCCCCC"> because we encrypt no messages</font>

544
00:28:05,010 --> 00:28:09,420
what<font color="#CCCCCC"> about the perfect for secrecy</font>

545
00:28:07,380 --> 00:28:11,610
this is the reason why we don't use<font color="#E5E5E5"> the</font>

546
00:28:09,420 --> 00:28:13,740
same key<font color="#CCCCCC"> for all of the exchange we</font>

547
00:28:11,610 --> 00:28:15,780
changed the key after<font color="#CCCCCC"> the server key</font>

548
00:28:13,740 --> 00:28:17,040
exchange message because this<font color="#E5E5E5"> first key</font>

549
00:28:15,780 --> 00:28:19,710
doesn't<font color="#E5E5E5"> have to be perfect forward</font>

550
00:28:17,040 --> 00:28:23,370
secrecy<font color="#E5E5E5"> property this first key can</font>

551
00:28:19,710 --> 00:28:25,470
still be so an agency could still

552
00:28:23,370 --> 00:28:27,479
decrypt the first messages if he

553
00:28:25,470 --> 00:28:34,200
requested this semi<font color="#CCCCCC"> static keys for</font>

554
00:28:27,480 --> 00:28:35,940
<font color="#CCCCCC">Messala</font><font color="#E5E5E5"> okay so this was over you over</font>

555
00:28:34,200 --> 00:28:41,270
<font color="#CCCCCC">the goals that the handshake wants to</font>

556
00:28:35,940 --> 00:28:45,360
achieve<font color="#E5E5E5"> additional changes in TLS 1.3</font>

557
00:28:41,270 --> 00:28:47,490
the handshake with<font color="#E5E5E5"> preciate keys</font>

558
00:28:45,360 --> 00:28:52,669
replaces the<font color="#CCCCCC"> abbreviate</font><font color="#E5E5E5"> handshake</font><font color="#CCCCCC"> so we</font>

559
00:28:47,490 --> 00:28:56,309
have some replacements<font color="#CCCCCC"> we have</font>

560
00:28:52,670 --> 00:28:59,160
renegotiation<font color="#CCCCCC"> we'll be also</font><font color="#E5E5E5"> be replaced</font>

561
00:28:56,309 --> 00:29:01,049
<font color="#E5E5E5">by this by another handshake which may</font>

562
00:28:59,160 --> 00:29:05,400
use this resumption secret that's

563
00:29:01,049 --> 00:29:07,080
produced in a regular handshake<font color="#CCCCCC"> the new</font>

564
00:29:05,400 --> 00:29:09,120
key derivation I shot a<font color="#CCCCCC"> showdown</font><font color="#E5E5E5"> on a</font>

565
00:29:07,080 --> 00:29:10,949
slide and of course on<font color="#E5E5E5"> the record layer</font>

566
00:29:09,120 --> 00:29:14,639
we will<font color="#E5E5E5"> have patched and encrypted neck</font>

567
00:29:10,950 --> 00:29:17,070
or more to<font color="#CCCCCC"> condense Mogilev</font><font color="#E5E5E5"> a counter</font>

568
00:29:14,640 --> 00:29:19,200
mode which achieves the same<font color="#E5E5E5"> goal to</font>

569
00:29:17,070 --> 00:29:22,379
counter all these attacks on the record

570
00:29:19,200 --> 00:29:24,150
player<font color="#CCCCCC"> ok so there's a lot of</font><font color="#E5E5E5"> work being</font>

571
00:29:22,380 --> 00:29:30,450
done there's a very<font color="#E5E5E5"> active</font><font color="#CCCCCC"> discussion</font>

572
00:29:24,150 --> 00:29:33,090
and the I think<font color="#CCCCCC"> the standardizing body</font>

573
00:29:30,450 --> 00:29:35,130
at ITF does a great work in removing all

574
00:29:33,090 --> 00:29:38,399
<font color="#E5E5E5">these vulnerabilities but the question</font>

575
00:29:35,130 --> 00:29:40,080
remains is this<font color="#E5E5E5"> still</font><font color="#CCCCCC"> the final word ok</font>

576
00:29:38,400 --> 00:29:41,790
do we still<font color="#E5E5E5"> get rid</font><font color="#CCCCCC"> of all the problems</font>

577
00:29:40,080 --> 00:29:49,070
we<font color="#E5E5E5"> have if you only</font><font color="#CCCCCC"> introduce a new</font>

578
00:29:41,790 --> 00:29:50,820
<font color="#E5E5E5">version so and this</font><font color="#CCCCCC"> is where I want to</font>

579
00:29:49,070 --> 00:29:57,240
<font color="#E5E5E5">introduce it with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> backwards</font>

580
00:29:50,820 --> 00:29:59,730
<font color="#E5E5E5">compatibility attack this is a slide</font>

581
00:29:57,240 --> 00:30:01,860
<font color="#E5E5E5">that may be the best time</font><font color="#CCCCCC"> we'll go to</font>

582
00:29:59,730 --> 00:30:03,860
more detail<font color="#E5E5E5"> have a better statistic on</font>

583
00:30:01,860 --> 00:30:08,428
that this<font color="#E5E5E5"> is just from from</font><font color="#CCCCCC"> the internet</font>

584
00:30:03,860 --> 00:30:11,760
it shows<font color="#E5E5E5"> that many versions are</font>

585
00:30:08,429 --> 00:30:13,890
supported on many servers<font color="#E5E5E5"> the tool in</font>

586
00:30:11,760 --> 00:30:16,679
red should be deactivated because<font color="#CCCCCC"> they</font>

587
00:30:13,890 --> 00:30:19,350
are real<font color="#CCCCCC"> they</font><font color="#E5E5E5"> are completely broken and</font>

588
00:30:16,679 --> 00:30:23,070
but still<font color="#E5E5E5"> some servers are running</font>

589
00:30:19,350 --> 00:30:28,230
running<font color="#E5E5E5"> these versions they are our goal</font>

590
00:30:23,070 --> 00:30:30,710
so<font color="#E5E5E5"> the attack will still work if SSL is</font>

591
00:30:28,230 --> 00:30:34,049
completely deactivated in versions<font color="#E5E5E5"> 2</font><font color="#CCCCCC"> &</font><font color="#E5E5E5"> 3</font>

592
00:30:30,710 --> 00:30:38,190
<font color="#E5E5E5">what we need is we had that</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> of the</font>

593
00:30:34,049 --> 00:30:41,129
<font color="#CCCCCC">versions 1.0 1.1 or 1.2 is running with</font>

594
00:30:38,190 --> 00:30:43,140
the till as RSA cipher suite<font color="#E5E5E5"> this is the</font>

595
00:30:41,130 --> 00:30:46,400
assumption<font color="#CCCCCC"> and we need obliging for her</font>

596
00:30:43,140 --> 00:30:48,960
weakness<font color="#E5E5E5"> in some implementation so</font>

597
00:30:46,400 --> 00:30:54,000
currently<font color="#E5E5E5"> there are known no known</font>

598
00:30:48,960 --> 00:30:56,669
<font color="#CCCCCC">lightning baahar vulnerabilities out in</font>

599
00:30:54,000 --> 00:30:58,630
the wild but as a try to motivate<font color="#CCCCCC"> they</font>

600
00:30:56,669 --> 00:31:02,060
<font color="#CCCCCC">they are turn up time</font>

601
00:30:58,630 --> 00:31:04,130
from from time to time and we may<font color="#E5E5E5"> not</font><font color="#CCCCCC"> be</font>

602
00:31:02,060 --> 00:31:08,570
sure<font color="#E5E5E5"> that we've completely mitigated the</font>

603
00:31:04,130 --> 00:31:14,750
problem so one<font color="#E5E5E5"> surprising thing that</font><font color="#CCCCCC"> I</font>

604
00:31:08,570 --> 00:31:17,179
have<font color="#E5E5E5"> to explain in some extra</font><font color="#CCCCCC"> light is</font>

605
00:31:14,750 --> 00:31:21,230
and it was also surprising to me when

606
00:31:17,180 --> 00:31:23,600
when<font color="#CCCCCC"> Tebow and</font><font color="#E5E5E5"> your I explained it to me</font>

607
00:31:21,230 --> 00:31:26,330
typically with a<font color="#CCCCCC"> Black Mafia attack you</font>

608
00:31:23,600 --> 00:31:29,500
try to<font color="#CCCCCC"> decrypt something you sent an</font>

609
00:31:26,330 --> 00:31:32,120
encrypted<font color="#E5E5E5"> message to the TLS server and</font>

610
00:31:29,500 --> 00:31:33,940
with all these<font color="#E5E5E5"> these error messages you</font>

611
00:31:32,120 --> 00:31:38,060
get to try<font color="#E5E5E5"> to decrypt it</font>

612
00:31:33,940 --> 00:31:40,670
but RSA has<font color="#CCCCCC"> a nice</font><font color="#E5E5E5"> property here</font>

613
00:31:38,060 --> 00:31:43,820
decryption and signing are the same<font color="#CCCCCC"> of</font>

614
00:31:40,670 --> 00:31:47,300
is the same operation so what we can do

615
00:31:43,820 --> 00:31:50,090
if<font color="#E5E5E5"> we have a black in Baja weakness we</font>

616
00:31:47,300 --> 00:31:52,250
can<font color="#E5E5E5"> also sign a Batory messages so</font>

617
00:31:50,090 --> 00:31:55,129
instead of decrypting we assign them

618
00:31:52,250 --> 00:31:58,250
this was discovered<font color="#E5E5E5"> by yoga so</font><font color="#CCCCCC"> Moravsky</font>

619
00:31:55,130 --> 00:32:01,850
<font color="#E5E5E5">and Pattinson was published at NDS</font><font color="#CCCCCC"> s14</font>

620
00:31:58,250 --> 00:32:04,370
think<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is the basis of this</font>

621
00:32:01,850 --> 00:32:06,620
attack<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we use</font><font color="#CCCCCC"> obliging Baja Oracle</font><font color="#E5E5E5"> in</font>

622
00:32:04,370 --> 00:32:12,709
a different way we do not<font color="#CCCCCC"> long encrypt</font>

623
00:32:06,620 --> 00:32:15,020
but we<font color="#E5E5E5"> sign messages so on the scenario</font>

624
00:32:12,710 --> 00:32:19,790
is<font color="#CCCCCC"> that we have a web</font><font color="#E5E5E5"> server that</font>

625
00:32:15,020 --> 00:32:23,030
<font color="#E5E5E5">supports TLS 1.0 or 1.1 or 1.2 for</font>

626
00:32:19,790 --> 00:32:27,290
backward compatibility<font color="#CCCCCC"> reasons and also</font>

627
00:32:23,030 --> 00:32:28,010
<font color="#E5E5E5">serves TLS 1.3 and there is one advanced</font>

628
00:32:27,290 --> 00:32:30,980
user

629
00:32:28,010 --> 00:32:33,500
Lisa<font color="#E5E5E5"> in this case she has deactivated</font>

630
00:32:30,980 --> 00:32:35,810
all the<font color="#CCCCCC"> Oates</font><font color="#E5E5E5"> versions of TLS in</font><font color="#CCCCCC"> the</font>

631
00:32:33,500 --> 00:32:38,540
browser<font color="#E5E5E5"> so her browser will only speak</font>

632
00:32:35,810 --> 00:32:40,129
<font color="#CCCCCC">till as</font><font color="#E5E5E5"> 1.3 nothing else so he has</font>

633
00:32:38,540 --> 00:32:44,389
completely made made sure that nothing

634
00:32:40,130 --> 00:32:46,570
will happen with old versions of TLS so

635
00:32:44,390 --> 00:32:49,840
what can our attacker now do<font color="#E5E5E5"> our</font>

636
00:32:46,570 --> 00:32:53,500
<font color="#CCCCCC">attacker will act as a</font><font color="#E5E5E5"> man-in-the-middle</font>

637
00:32:49,840 --> 00:32:58,010
<font color="#CCCCCC">MA and she will impersonate</font><font color="#E5E5E5"> the server</font>

638
00:32:53,500 --> 00:33:00,500
so when Lisa starts the connection he

639
00:32:58,010 --> 00:33:03,020
will send all the messages<font color="#E5E5E5"> that can</font><font color="#CCCCCC"> be</font>

640
00:33:00,500 --> 00:33:06,230
generated<font color="#E5E5E5"> without the</font><font color="#CCCCCC"> server's secret</font>

641
00:33:03,020 --> 00:33:09,779
key so these are the<font color="#E5E5E5"> first messages so</font>

642
00:33:06,230 --> 00:33:12,509
he can generate<font color="#E5E5E5"> the server</font><font color="#CCCCCC"> ahead</font><font color="#E5E5E5"> out</font>

643
00:33:09,779 --> 00:33:16,889
<font color="#E5E5E5">he share and the certificate certificate</font>

644
00:33:12,509 --> 00:33:17,399
is public publicly<font color="#E5E5E5"> known he can sent</font>

645
00:33:16,889 --> 00:33:19,529
this

646
00:33:17,399 --> 00:33:23,369
he can even encrypt the certificate

647
00:33:19,529 --> 00:33:27,479
<font color="#E5E5E5">because</font><font color="#CCCCCC"> he can compute the key from the</font>

648
00:33:23,369 --> 00:33:29,549
<font color="#CCCCCC">tool keesha's what he can't send</font><font color="#E5E5E5"> at the</font>

649
00:33:27,479 --> 00:33:33,539
moment is a digital signature on all

650
00:33:29,549 --> 00:33:38,658
<font color="#E5E5E5">this so this is the message</font><font color="#CCCCCC"> that he has</font>

651
00:33:33,539 --> 00:33:42,899
<font color="#E5E5E5">to send next this is</font><font color="#CCCCCC"> the certverify</font>

652
00:33:38,659 --> 00:33:44,580
<font color="#E5E5E5">message so this is here he has to</font>

653
00:33:42,899 --> 00:33:47,580
generate<font color="#CCCCCC"> this message somehow</font><font color="#E5E5E5"> and here</font>

654
00:33:44,580 --> 00:33:52,228
he<font color="#E5E5E5"> will use the</font><font color="#CCCCCC"> de server</font><font color="#E5E5E5"> and especially</font>

655
00:33:47,580 --> 00:33:54,059
<font color="#E5E5E5">he will used old TLS 1.0 version he will</font>

656
00:33:52,229 --> 00:34:00,839
perform<font color="#E5E5E5"> a</font><font color="#CCCCCC"> blazing power attack against</font>

657
00:33:54,059 --> 00:34:06,658
this old version of TLS<font color="#E5E5E5"> and what it does</font>

658
00:34:00,839 --> 00:34:08,099
<font color="#CCCCCC">he tries</font><font color="#E5E5E5"> to get a signature on on</font><font color="#CCCCCC"> it get</font>

659
00:34:06,659 --> 00:34:10,919
a signature that he has to put in<font color="#CCCCCC"> this</font>

660
00:34:08,099 --> 00:34:13,589
<font color="#E5E5E5">or verify message so I will hash the</font>

661
00:34:10,918 --> 00:34:16,739
previous messages we format<font color="#E5E5E5"> everything</font>

662
00:34:13,589 --> 00:34:19,889
<font color="#E5E5E5">and coat everything</font><font color="#CCCCCC"> in pkcs1 signature</font>

663
00:34:16,739 --> 00:34:21,538
and<font color="#E5E5E5"> then people sent this message</font><font color="#CCCCCC"> modify</font>

664
00:34:19,889 --> 00:34:28,319
this message send it<font color="#E5E5E5"> repeatedly to the</font>

665
00:34:21,539 --> 00:34:30,210
<font color="#E5E5E5">to the server and will from the error</font>

666
00:34:28,319 --> 00:34:34,710
messages<font color="#E5E5E5"> he receives or from the timing</font>

667
00:34:30,210 --> 00:34:38,369
<font color="#E5E5E5">measurements he receives will compute</font>

668
00:34:34,710 --> 00:34:43,049
<font color="#CCCCCC">the signature on</font><font color="#E5E5E5"> the message so he has</font>

669
00:34:38,369 --> 00:34:45,929
to do as<font color="#E5E5E5"> to set up many many handshakes</font>

670
00:34:43,049 --> 00:34:48,960
<font color="#CCCCCC">with this old version of TLS</font><font color="#E5E5E5"> but finally</font>

671
00:34:45,929 --> 00:34:50,849
<font color="#CCCCCC">you will succeed and will be able</font><font color="#E5E5E5"> to</font>

672
00:34:48,960 --> 00:34:53,069
<font color="#E5E5E5">compute a signature and then the</font>

673
00:34:50,849 --> 00:34:55,099
handshake<font color="#E5E5E5"> can be completed and the</font>

674
00:34:53,069 --> 00:34:58,890
attacker has successfully impersonated

675
00:34:55,099 --> 00:35:00,240
<font color="#CCCCCC">the server but of course Lisa</font><font color="#E5E5E5"> is not</font>

676
00:34:58,890 --> 00:35:05,129
<font color="#E5E5E5">talking to the attacker or not to the</font>

677
00:35:00,240 --> 00:35:09,058
server this<font color="#E5E5E5"> is something that you</font><font color="#CCCCCC"> are</font>

678
00:35:05,130 --> 00:35:11,369
verified experimentally<font color="#CCCCCC"> the most</font>

679
00:35:09,059 --> 00:35:15,510
<font color="#E5E5E5">difficult problem in the case of TLS is</font>

680
00:35:11,369 --> 00:35:18,059
to keep the connection alive for long

681
00:35:15,510 --> 00:35:19,799
enough so we we had<font color="#E5E5E5"> implemented an</font>

682
00:35:18,059 --> 00:35:22,710
artificial<font color="#CCCCCC"> blythe navaja oracle that was</font>

683
00:35:19,799 --> 00:35:29,640
very fast<font color="#E5E5E5"> on the server side</font>

684
00:35:22,710 --> 00:35:33,090
and I think<font color="#E5E5E5"> this time</font><font color="#CCCCCC"> a browser</font><font color="#E5E5E5"> kept TCP</font>

685
00:35:29,640 --> 00:35:37,020
connection open<font color="#E5E5E5"> was in the in the area</font>

686
00:35:33,090 --> 00:35:38,760
of minutes<font color="#CCCCCC"> and so this black Homburg</font>

687
00:35:37,020 --> 00:35:40,800
attack had to succeed within<font color="#E5E5E5"> this time</font>

688
00:35:38,760 --> 00:35:44,640
<font color="#E5E5E5">frame otherwise it would be useless</font>

689
00:35:40,800 --> 00:35:48,570
<font color="#E5E5E5">because in the next attempt different</font>

690
00:35:44,640 --> 00:35:51,900
random dances<font color="#E5E5E5"> would be used and all the</font>

691
00:35:48,570 --> 00:35:53,850
<font color="#CCCCCC">attack had to start fresh this was a</font>

692
00:35:51,900 --> 00:35:57,660
main<font color="#CCCCCC"> difference to quick</font><font color="#E5E5E5"> because in</font>

693
00:35:53,850 --> 00:35:59,839
quick<font color="#E5E5E5"> we had a signature they did not</font>

694
00:35:57,660 --> 00:36:02,250
not depend on the<font color="#E5E5E5"> nonce s but only on</font>

695
00:35:59,840 --> 00:36:04,290
the message so for quick we could take

696
00:36:02,250 --> 00:36:06,210
all<font color="#CCCCCC"> the time in the</font><font color="#E5E5E5"> world</font><font color="#CCCCCC"> so quick would</font>

697
00:36:04,290 --> 00:36:08,970
be broken<font color="#CCCCCC"> completely with this</font><font color="#E5E5E5"> attack</font>

698
00:36:06,210 --> 00:36:12,000
<font color="#E5E5E5">without any timing constraints but TLS</font>

699
00:36:08,970 --> 00:36:15,149
1.3 luckily had<font color="#E5E5E5"> this dependency on one</font>

700
00:36:12,000 --> 00:36:21,840
<font color="#E5E5E5">other messages so that the attack is not</font>

701
00:36:15,150 --> 00:36:25,650
that hard<font color="#CCCCCC"> for TLS</font><font color="#E5E5E5"> 1.3</font><font color="#CCCCCC"> okay but I think</font>

702
00:36:21,840 --> 00:36:28,170
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> message I want to</font><font color="#E5E5E5"> give we</font>

703
00:36:25,650 --> 00:36:29,940
may still break a new version<font color="#CCCCCC"> that</font>

704
00:36:28,170 --> 00:36:33,450
should be resistant to<font color="#CCCCCC"> Blyton for</font>

705
00:36:29,940 --> 00:36:37,470
attacks if we have an old version

706
00:36:33,450 --> 00:36:42,230
<font color="#E5E5E5">running on the server</font><font color="#CCCCCC"> the reason</font><font color="#E5E5E5"> for</font>

707
00:36:37,470 --> 00:36:44,490
that is indicated right from the server

708
00:36:42,230 --> 00:36:46,800
<font color="#E5E5E5">typically we will use the same</font>

709
00:36:44,490 --> 00:36:48,029
certificate<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> same public key for</font>

710
00:36:46,800 --> 00:36:50,430
all these versions<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font>

711
00:36:48,030 --> 00:36:52,230
<font color="#CCCCCC">configuration issue it could</font><font color="#E5E5E5"> be solved</font>

712
00:36:50,430 --> 00:36:54,779
easily if<font color="#CCCCCC"> we modify</font><font color="#E5E5E5"> the server software</font>

713
00:36:52,230 --> 00:36:56,820
so<font color="#CCCCCC"> that for</font><font color="#E5E5E5"> each TLS version we use a</font>

714
00:36:54,780 --> 00:36:59,070
<font color="#E5E5E5">different key then this attack wouldn't</font>

715
00:36:56,820 --> 00:37:00,780
work<font color="#E5E5E5"> or also</font><font color="#CCCCCC"> wouldn't work</font><font color="#E5E5E5"> but it's</font>

716
00:36:59,070 --> 00:37:04,530
mostly the<font color="#CCCCCC"> case</font><font color="#E5E5E5"> that we use the same key</font>

717
00:37:00,780 --> 00:37:05,880
<font color="#CCCCCC">for all versions so this is the problem</font>

718
00:37:04,530 --> 00:37:07,740
here<font color="#CCCCCC"> okay</font>

719
00:37:05,880 --> 00:37:13,680
my last slide<font color="#CCCCCC"> and I'm just</font><font color="#E5E5E5"> in time I</font>

720
00:37:07,740 --> 00:37:16,830
think<font color="#CCCCCC"> I think SSL 3.0 and T up to TLS</font>

721
00:37:13,680 --> 00:37:19,080
1.2<font color="#E5E5E5"> were very good protocols they remain</font>

722
00:37:16,830 --> 00:37:20,850
secure for<font color="#E5E5E5"> 15 years so we shouldn't</font>

723
00:37:19,080 --> 00:37:23,870
underestimate<font color="#E5E5E5"> this it's easy to</font>

724
00:37:20,850 --> 00:37:27,900
criticize things<font color="#E5E5E5"> people often</font><font color="#CCCCCC"> criticize</font>

725
00:37:23,870 --> 00:37:30,480
<font color="#E5E5E5">GSM a5</font><font color="#CCCCCC"> it's a bad algorithm</font><font color="#E5E5E5"> because it's</font>

726
00:37:27,900 --> 00:37:32,520
<font color="#E5E5E5">broken now</font><font color="#CCCCCC"> but it lasted for for</font><font color="#E5E5E5"> several</font>

727
00:37:30,480 --> 00:37:35,070
years<font color="#E5E5E5"> and this is the same for TLS so</font>

728
00:37:32,520 --> 00:37:36,450
it's it's a good protocol<font color="#E5E5E5"> it lasted for</font>

729
00:37:35,070 --> 00:37:39,720
<font color="#E5E5E5">15</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> but it's time</font>

730
00:37:36,450 --> 00:37:41,609
a new version until<font color="#CCCCCC"> s103</font><font color="#E5E5E5"> will mitigate</font>

731
00:37:39,720 --> 00:37:46,129
<font color="#E5E5E5">many problems especially on the record</font>

732
00:37:41,609 --> 00:37:48,000
layer<font color="#E5E5E5"> we will see less problems however</font>

733
00:37:46,130 --> 00:37:50,160
<font color="#CCCCCC">backwards-compatibility attacks Romania</font>

734
00:37:48,000 --> 00:37:52,740
major security threat<font color="#CCCCCC"> and this is</font><font color="#E5E5E5"> where</font>

735
00:37:50,160 --> 00:37:54,810
<font color="#E5E5E5">I will put your</font><font color="#CCCCCC"> attention to</font><font color="#E5E5E5"> the last</font>

736
00:37:52,740 --> 00:37:56,578
talk tomorrow<font color="#CCCCCC"> well you will see a</font><font color="#E5E5E5"> very</font>

737
00:37:54,810 --> 00:37:59,540
dramatic<font color="#CCCCCC"> example of backward</font>

738
00:37:56,579 --> 00:38:04,020
compatibility<font color="#CCCCCC"> attacks</font><font color="#E5E5E5"> the drone attack</font>

739
00:37:59,540 --> 00:38:05,849
<font color="#E5E5E5">that you all certainly aware of and last</font>

740
00:38:04,020 --> 00:38:07,920
thing doesn't have to do anything<font color="#E5E5E5"> with</font>

741
00:38:05,849 --> 00:38:09,960
my talk<font color="#CCCCCC"> but</font><font color="#E5E5E5"> I think maybe we will have</font>

742
00:38:07,920 --> 00:38:12,720
new attacker models for example

743
00:38:09,960 --> 00:38:14,820
<font color="#CCCCCC">colocation in the cloud and we will see</font>

744
00:38:12,720 --> 00:38:16,589
many<font color="#CCCCCC"> new attacks because we have many</font><font color="#E5E5E5"> we</font>

745
00:38:14,820 --> 00:38:19,380
can look deeper into<font color="#E5E5E5"> an implementation</font>

746
00:38:16,589 --> 00:38:22,700
and extract<font color="#E5E5E5"> more</font><font color="#CCCCCC"> information from there</font>

747
00:38:19,380 --> 00:38:22,700
<font color="#E5E5E5">thank you for attention</font>

