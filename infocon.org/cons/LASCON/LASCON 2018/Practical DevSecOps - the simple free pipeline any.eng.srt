1
00:00:17,589 --> 00:00:23,359
<font color="#E5E5E5">okay let's get started</font><font color="#CCCCCC"> hi</font><font color="#E5E5E5"> everyone my</font>

2
00:00:21,019 --> 00:00:27,288
name is<font color="#E5E5E5"> Jeff Williams</font><font color="#CCCCCC"> CTO and co-founder</font>

3
00:00:23,359 --> 00:00:27,829
at<font color="#E5E5E5"> contrast security and I've been</font>

4
00:00:27,289 --> 00:00:29,689
<font color="#E5E5E5">working with</font>

5
00:00:27,829 --> 00:00:31,849
<font color="#CCCCCC">iwasa since the beginning of</font><font color="#E5E5E5"> OS but</font><font color="#CCCCCC"> I</font>

6
00:00:29,689 --> 00:00:34,940
was one<font color="#CCCCCC"> of the founders</font><font color="#E5E5E5"> of a wasp and I</font>

7
00:00:31,849 --> 00:00:36,829
was the<font color="#E5E5E5"> global chair for the for nine</font>

8
00:00:34,940 --> 00:00:37,849
years<font color="#CCCCCC"> while we were getting</font><font color="#E5E5E5"> off the</font>

9
00:00:36,829 --> 00:00:40,040
<font color="#CCCCCC">ground but</font><font color="#E5E5E5"> I haven't really done much</font>

10
00:00:37,850 --> 00:00:43,070
<font color="#E5E5E5">with us in the last you know I don't</font>

11
00:00:40,040 --> 00:00:44,019
know six or<font color="#E5E5E5"> seven years so I still love</font>

12
00:00:43,070 --> 00:00:46,280
us<font color="#CCCCCC"> a lot</font>

13
00:00:44,019 --> 00:00:47,420
it's one of<font color="#CCCCCC"> the best things that I feel</font>

14
00:00:46,280 --> 00:00:50,210
<font color="#CCCCCC">like I've</font><font color="#E5E5E5"> done in my career</font><font color="#CCCCCC"> I'm</font>

15
00:00:47,420 --> 00:00:52,519
extremely excited<font color="#CCCCCC"> and proud to be</font>

16
00:00:50,210 --> 00:00:55,670
<font color="#E5E5E5">speaking</font><font color="#CCCCCC"> here today I'm</font><font color="#E5E5E5"> going to talk</font>

17
00:00:52,519 --> 00:00:58,879
about building<font color="#E5E5E5"> a</font><font color="#CCCCCC"> dev snake ops pipeline</font>

18
00:00:55,670 --> 00:01:00,710
and I'll just start by<font color="#E5E5E5"> saying I think</font>

19
00:00:58,879 --> 00:01:03,650
that DevOps is one of the most

20
00:01:00,710 --> 00:01:05,930
<font color="#CCCCCC">transformative things that's happened to</font>

21
00:01:03,650 --> 00:01:07,548
software<font color="#E5E5E5"> since object-oriented</font>

22
00:01:05,930 --> 00:01:10,100
programming came out I mean it's really

23
00:01:07,549 --> 00:01:11,450
like that level<font color="#E5E5E5"> of transformation</font><font color="#CCCCCC"> some</font>

24
00:01:10,100 --> 00:01:13,189
of you may<font color="#CCCCCC"> be too young</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> remember</font>

25
00:01:11,450 --> 00:01:18,560
before<font color="#E5E5E5"> but we used to do a different</font>

26
00:01:13,189 --> 00:01:21,548
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of programming that's right so</font>

27
00:01:18,560 --> 00:01:24,799
let's jump into<font color="#CCCCCC"> it here a</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> I</font>

28
00:01:21,549 --> 00:01:27,520
wanted to start by<font color="#E5E5E5"> giving a sense of</font>

29
00:01:24,799 --> 00:01:29,659
what the average application looks like

30
00:01:27,520 --> 00:01:32,259
now I've represented it here's an

31
00:01:29,659 --> 00:01:35,479
iceberg<font color="#E5E5E5"> and what's below the</font><font color="#CCCCCC"> water is</font>

32
00:01:32,259 --> 00:01:38,389
libraries and frameworks<font color="#E5E5E5"> you know open</font>

33
00:01:35,479 --> 00:01:41,240
source code primarily and above the

34
00:01:38,389 --> 00:01:43,280
above<font color="#E5E5E5"> the</font><font color="#CCCCCC"> waterline</font><font color="#E5E5E5"> is your custom code</font>

35
00:01:41,240 --> 00:01:45,109
and I think it's interesting<font color="#E5E5E5"> to</font><font color="#CCCCCC"> just</font>

36
00:01:43,280 --> 00:01:48,319
look at where the<font color="#CCCCCC"> vulnerabilities fall</font>

37
00:01:45,109 --> 00:01:50,630
in this in<font color="#E5E5E5"> this iceberg most of them are</font>

38
00:01:48,319 --> 00:01:54,319
above the<font color="#E5E5E5"> waterline average application</font>

39
00:01:50,630 --> 00:01:58,399
<font color="#CCCCCC">has 26.7 vulnerabilities in his custom</font>

40
00:01:54,319 --> 00:02:00,740
code that is bananas<font color="#E5E5E5"> by the way that is</font>

41
00:01:58,399 --> 00:02:02,630
an insane<font color="#E5E5E5"> level of vulnerability</font><font color="#CCCCCC"> and</font>

42
00:02:00,740 --> 00:02:05,568
this has been true by the way<font color="#CCCCCC"> for the</font>

43
00:02:02,630 --> 00:02:07,130
last<font color="#E5E5E5"> 15 years it's roughly that number</font>

44
00:02:05,569 --> 00:02:08,869
of you know<font color="#CCCCCC"> like</font><font color="#E5E5E5"> truly verified</font>

45
00:02:07,130 --> 00:02:13,250
vulnerabilities<font color="#CCCCCC"> it</font><font color="#E5E5E5"> hasn't gone up and</font>

46
00:02:08,869 --> 00:02:14,930
<font color="#CCCCCC">down very</font><font color="#E5E5E5"> much over</font><font color="#CCCCCC"> that time can you</font>

47
00:02:13,250 --> 00:02:17,480
<font color="#E5E5E5">imagine if</font><font color="#CCCCCC"> we were like the airline</font>

48
00:02:14,930 --> 00:02:21,590
industry<font color="#CCCCCC"> and every time you tested a</font>

49
00:02:17,480 --> 00:02:23,840
plane it had<font color="#CCCCCC"> 26.7 safety problems that's</font>

50
00:02:21,590 --> 00:02:25,730
<font color="#E5E5E5">nuts we're producing massively</font>

51
00:02:23,840 --> 00:02:27,840
vulnerable code and it's<font color="#E5E5E5"> almost all</font>

52
00:02:25,730 --> 00:02:32,250
basic blocking and tackle

53
00:02:27,840 --> 00:02:34,590
<font color="#CCCCCC">I wrote that I lost top 10 in 2002</font><font color="#E5E5E5"> that</font>

54
00:02:32,250 --> 00:02:37,890
16 years ago<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> still the same</font>

55
00:02:34,590 --> 00:02:39,540
<font color="#E5E5E5"> in there</font><font color="#CCCCCC"> I had this idea like oh</font>

56
00:02:37,890 --> 00:02:41,429
well we'll<font color="#E5E5E5"> put the top 10 out</font><font color="#CCCCCC"> there and</font>

57
00:02:39,540 --> 00:02:42,870
then we'll do<font color="#E5E5E5"> that for a few</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> and</font>

58
00:02:41,430 --> 00:02:45,090
we'll raise<font color="#CCCCCC"> the</font><font color="#E5E5E5"> bar and then we'll add a</font>

59
00:02:42,870 --> 00:02:48,150
few and like<font color="#E5E5E5"> over time we'll just get</font>

60
00:02:45,090 --> 00:02:51,209
better<font color="#E5E5E5"> but we haven't and sometimes when</font>

61
00:02:48,150 --> 00:02:52,890
you try to create<font color="#CCCCCC"> a floor</font><font color="#E5E5E5"> you actually</font>

62
00:02:51,209 --> 00:02:54,150
end up<font color="#CCCCCC"> creating a ceiling so now like</font>

63
00:02:52,890 --> 00:02:55,879
<font color="#E5E5E5">the office top 10 is kind of</font>

64
00:02:54,150 --> 00:02:59,160
aspirational for most organizations

65
00:02:55,879 --> 00:03:03,230
<font color="#E5E5E5">which is awful</font><font color="#CCCCCC"> and an unintended side</font>

66
00:02:59,160 --> 00:03:03,230
effect of what I was trying to do there

67
00:03:03,530 --> 00:03:07,500
<font color="#E5E5E5">and a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> people are</font><font color="#CCCCCC"> talking about</font>

68
00:03:05,459 --> 00:03:08,819
<font color="#E5E5E5">you know library vulnerabilities which I</font>

69
00:03:07,500 --> 00:03:11,099
think are<font color="#CCCCCC"> really important but</font><font color="#E5E5E5"> let's</font>

70
00:03:08,819 --> 00:03:15,000
<font color="#CCCCCC">just remember</font><font color="#E5E5E5"> that's like one of</font><font color="#CCCCCC"> the top</font>

71
00:03:11,099 --> 00:03:16,828
<font color="#E5E5E5">10 so</font><font color="#CCCCCC"> you know I think</font><font color="#E5E5E5"> it's it's an easy</font>

72
00:03:15,000 --> 00:03:18,120
to understand problem so people rush out

73
00:03:16,829 --> 00:03:19,560
<font color="#E5E5E5">they're like oh we got to make sure</font>

74
00:03:18,120 --> 00:03:21,420
we're not using libraries with known

75
00:03:19,560 --> 00:03:22,470
vulnerabilities and you can buy tools

76
00:03:21,420 --> 00:03:24,690
that are good at that<font color="#E5E5E5"> because it's a</font>

77
00:03:22,470 --> 00:03:26,489
simple problem<font color="#E5E5E5"> and you know maybe you</font>

78
00:03:24,690 --> 00:03:28,379
<font color="#E5E5E5">can put some effort into that but really</font>

79
00:03:26,489 --> 00:03:29,400
you're not pushing<font color="#E5E5E5"> the ball very far</font>

80
00:03:28,379 --> 00:03:31,260
down<font color="#E5E5E5"> the</font><font color="#CCCCCC"> field if that's the only</font>

81
00:03:29,400 --> 00:03:32,819
<font color="#CCCCCC">problem</font><font color="#E5E5E5"> that you solve and you can see</font>

82
00:03:31,260 --> 00:03:34,649
why in the iceberg<font color="#E5E5E5"> and in fact it's</font>

83
00:03:32,819 --> 00:03:37,200
actually<font color="#E5E5E5"> even</font><font color="#CCCCCC"> worse than</font><font color="#E5E5E5"> this because</font><font color="#CCCCCC"> if</font>

84
00:03:34,650 --> 00:03:39,989
<font color="#E5E5E5">you look you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> 79 percent of the code</font>

85
00:03:37,200 --> 00:03:42,179
is below the<font color="#CCCCCC"> waterline and so people</font><font color="#E5E5E5"> say</font>

86
00:03:39,989 --> 00:03:46,739
like focus on<font color="#CCCCCC"> the big part of the code</font>

87
00:03:42,180 --> 00:03:50,340
<font color="#E5E5E5">right but really almost all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that code</font>

88
00:03:46,739 --> 00:03:52,410
is unused<font color="#E5E5E5"> that library code</font><font color="#CCCCCC"> almost never</font>

89
00:03:50,340 --> 00:03:56,280
gets called so<font color="#E5E5E5"> only a tiny fraction of</font>

90
00:03:52,410 --> 00:03:58,349
it actually<font color="#CCCCCC"> ever gets invoked and there</font>

91
00:03:56,280 --> 00:03:59,730
are far fewer<font color="#E5E5E5"> vulnerabilities in that</font>

92
00:03:58,349 --> 00:04:02,340
part so if you're gonna totally says hey

93
00:03:59,730 --> 00:04:04,500
you're<font color="#CCCCCC"> using</font><font color="#E5E5E5"> 25</font><font color="#CCCCCC"> out-of-date libraries</font>

94
00:04:02,340 --> 00:04:05,639
<font color="#E5E5E5">you need to replace them all well it's</font>

95
00:04:04,500 --> 00:04:07,319
pretty<font color="#E5E5E5"> good chance that you're</font><font color="#CCCCCC"> not</font>

96
00:04:05,639 --> 00:04:08,819
actually<font color="#E5E5E5"> invoking the code in those</font>

97
00:04:07,319 --> 00:04:10,560
libraries at all anyway so there's a

98
00:04:08,819 --> 00:04:13,828
really<font color="#CCCCCC"> a weird kind</font><font color="#E5E5E5"> of false alarm</font>

99
00:04:10,560 --> 00:04:17,548
<font color="#E5E5E5">so be careful on where you focus your</font>

100
00:04:13,829 --> 00:04:20,039
efforts in<font color="#CCCCCC"> app side the other side of</font>

101
00:04:17,548 --> 00:04:22,830
this is<font color="#E5E5E5"> that attacks are out there</font><font color="#CCCCCC"> if</font>

102
00:04:20,039 --> 00:04:25,050
you actually<font color="#E5E5E5"> look if you put</font>

103
00:04:22,830 --> 00:04:27,690
measure measurements on<font color="#CCCCCC"> your</font>

104
00:04:25,050 --> 00:04:29,099
applications<font color="#E5E5E5"> and try to measure who's</font>

105
00:04:27,690 --> 00:04:30,630
actually<font color="#CCCCCC"> attacking you</font><font color="#E5E5E5"> and what kind of</font>

106
00:04:29,099 --> 00:04:31,950
techniques they're using<font color="#CCCCCC"> you'll see</font>

107
00:04:30,630 --> 00:04:33,599
every application<font color="#E5E5E5"> out</font><font color="#CCCCCC"> there gets</font>

108
00:04:31,950 --> 00:04:36,889
attacked every single month<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> our</font>

109
00:04:33,599 --> 00:04:39,740
<font color="#E5E5E5">our results from</font><font color="#CCCCCC"> last month</font>

110
00:04:36,889 --> 00:04:41,870
maybe 20,000 applications<font color="#CCCCCC"> and you can</font>

111
00:04:39,740 --> 00:04:44,240
see there's a huge level<font color="#CCCCCC"> of attack this</font>

112
00:04:41,870 --> 00:04:45,650
is the<font color="#CCCCCC"> likelihood that the application</font>

113
00:04:44,240 --> 00:04:48,229
will see an attack in<font color="#CCCCCC"> that category</font>

114
00:04:45,650 --> 00:04:50,060
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so more than</font><font color="#CCCCCC"> half the applications</font>

115
00:04:48,229 --> 00:04:52,188
see sequel injection attacks more than

116
00:04:50,060 --> 00:04:54,409
that<font color="#E5E5E5"> sees you know</font><font color="#CCCCCC"> path</font><font color="#E5E5E5"> traversal</font><font color="#CCCCCC"> and</font>

117
00:04:52,189 --> 00:04:56,180
reflected XSS there's a ton of scanning

118
00:04:54,409 --> 00:04:58,090
going out on there anybody know what

119
00:04:56,180 --> 00:05:04,340
that<font color="#E5E5E5"> that first</font><font color="#CCCCCC"> CVE is by the way that</font>

120
00:04:58,090 --> 00:05:07,310
<font color="#CCCCCC">5638 nobody that's Equifax</font><font color="#E5E5E5"> that's the</font>

121
00:05:04,340 --> 00:05:09,789
breach that<font color="#CCCCCC"> took</font><font color="#E5E5E5"> down Equifax and you</font>

122
00:05:07,310 --> 00:05:12,319
<font color="#E5E5E5">got to be</font><font color="#CCCCCC"> aware the day after that</font>

123
00:05:09,789 --> 00:05:16,279
vulnerability was disclosed<font color="#CCCCCC"> at</font><font color="#E5E5E5"> an OS</font>

124
00:05:12,319 --> 00:05:19,129
prevent it started getting immediately

125
00:05:16,279 --> 00:05:21,770
attacked<font color="#E5E5E5"> broad scale attacks across the</font>

126
00:05:19,129 --> 00:05:24,469
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> within</font><font color="#CCCCCC"> a day</font><font color="#E5E5E5"> and that's the new</font>

127
00:05:21,770 --> 00:05:26,750
<font color="#CCCCCC">reality is that folks are looking</font><font color="#E5E5E5"> for</font>

128
00:05:24,469 --> 00:05:28,699
new<font color="#E5E5E5"> vulnerability disclosures they read</font>

129
00:05:26,750 --> 00:05:30,080
<font color="#E5E5E5">the disclosure they</font><font color="#CCCCCC"> reverse-engineer an</font>

130
00:05:28,699 --> 00:05:31,610
attack and<font color="#E5E5E5"> then they start bombarding</font>

131
00:05:30,080 --> 00:05:34,188
<font color="#CCCCCC">the</font><font color="#E5E5E5"> internet to try to find</font>

132
00:05:31,610 --> 00:05:35,750
vulnerabilities<font color="#CCCCCC"> you know fine you know</font>

133
00:05:34,189 --> 00:05:37,580
<font color="#E5E5E5">folks that are vulnerable</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> that so you</font>

134
00:05:35,750 --> 00:05:39,080
got to have a process<font color="#CCCCCC"> in place for</font>

135
00:05:37,580 --> 00:05:42,889
dealing with<font color="#E5E5E5"> these new vulnerabilities</font>

136
00:05:39,080 --> 00:05:44,508
that<font color="#E5E5E5"> are coming out very quickly so look</font>

137
00:05:42,889 --> 00:05:45,860
that's a bad situation<font color="#E5E5E5"> if</font><font color="#CCCCCC"> we got a lot</font>

138
00:05:44,509 --> 00:05:47,990
of vulnerabilities and there's a lot<font color="#E5E5E5"> of</font>

139
00:05:45,860 --> 00:05:50,690
attacks out there that's a<font color="#E5E5E5"> recipe</font><font color="#CCCCCC"> for</font>

140
00:05:47,990 --> 00:05:52,789
<font color="#E5E5E5">disaster</font><font color="#CCCCCC"> so we got to do better we got</font>

141
00:05:50,690 --> 00:05:54,050
to do basic blocking and<font color="#CCCCCC"> tackling</font><font color="#E5E5E5"> to</font>

142
00:05:52,789 --> 00:05:56,449
deal with some of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> problems that</font>

143
00:05:54,050 --> 00:05:58,300
we've known about<font color="#CCCCCC"> for at least 20 years</font>

144
00:05:56,449 --> 00:06:01,729
<font color="#CCCCCC">cross-site scripting sequel injection</font>

145
00:05:58,300 --> 00:06:07,610
<font color="#CCCCCC">command injection path traversal and so</font>

146
00:06:01,729 --> 00:06:08,889
on these<font color="#CCCCCC"> are not new</font><font color="#E5E5E5"> vulnerabilities so</font>

147
00:06:07,610 --> 00:06:11,479
here's the problem

148
00:06:08,889 --> 00:06:15,979
traditional<font color="#CCCCCC"> application</font><font color="#E5E5E5"> security</font><font color="#CCCCCC"> doesn't</font>

149
00:06:11,479 --> 00:06:18,589
really work<font color="#E5E5E5"> I'm guilty here I ran</font><font color="#CCCCCC"> a</font>

150
00:06:15,979 --> 00:06:20,419
consulting company for<font color="#CCCCCC"> fifteen years and</font>

151
00:06:18,589 --> 00:06:21,830
we did<font color="#CCCCCC"> all the services everything</font>

152
00:06:20,419 --> 00:06:23,299
<font color="#E5E5E5">that's in the you know the maturity</font>

153
00:06:21,830 --> 00:06:24,949
models we did threat modeling and

154
00:06:23,300 --> 00:06:28,159
architecture reviews and code<font color="#CCCCCC"> review and</font>

155
00:06:24,949 --> 00:06:30,199
pen testing and training<font color="#E5E5E5"> and you know</font>

156
00:06:28,159 --> 00:06:35,210
automation and<font color="#CCCCCC"> absolute programs and all</font>

157
00:06:30,199 --> 00:06:37,279
all this stuff I've done it all and by

158
00:06:35,210 --> 00:06:39,020
and<font color="#CCCCCC"> large I have</font><font color="#E5E5E5"> to say I</font><font color="#CCCCCC"> don't think it</font>

159
00:06:37,279 --> 00:06:40,580
works<font color="#CCCCCC"> very well and the results show</font>

160
00:06:39,020 --> 00:06:42,859
<font color="#CCCCCC">that like we can't</font><font color="#E5E5E5"> keep doing what we've</font>

161
00:06:40,580 --> 00:06:43,938
been<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> because it doesn't work we're</font>

162
00:06:42,860 --> 00:06:45,800
not<font color="#E5E5E5"> getting the results that we really</font>

163
00:06:43,939 --> 00:06:48,440
want ultimately I think<font color="#CCCCCC"> here's the</font>

164
00:06:45,800 --> 00:06:50,330
problem is if you've<font color="#CCCCCC"> got any</font><font color="#E5E5E5"> kind of</font>

165
00:06:48,440 --> 00:06:54,199
decent<font color="#E5E5E5"> sized portfolio of</font>

166
00:06:50,330 --> 00:06:55,878
locations if you're trying to shove it

167
00:06:54,199 --> 00:06:59,389
through<font color="#CCCCCC"> a traditional apps tech program</font>

168
00:06:55,879 --> 00:07:01,759
<font color="#E5E5E5">which is built with experts and tools</font>

169
00:06:59,389 --> 00:07:04,699
for experts<font color="#E5E5E5"> you're doomed</font><font color="#CCCCCC"> because</font>

170
00:07:01,759 --> 00:07:06,289
<font color="#CCCCCC">there's not enough experts anytime you</font>

171
00:07:04,699 --> 00:07:08,030
do anything<font color="#E5E5E5"> that</font><font color="#CCCCCC"> requires</font><font color="#E5E5E5"> an expert</font>

172
00:07:06,289 --> 00:07:09,979
involved in the critical path to getting

173
00:07:08,030 --> 00:07:11,809
code into<font color="#CCCCCC"> production you're screwed</font>

174
00:07:09,979 --> 00:07:13,789
<font color="#E5E5E5">because</font><font color="#CCCCCC"> you've got an instant</font><font color="#E5E5E5"> bottleneck</font>

175
00:07:11,810 --> 00:07:15,949
and there's nothing<font color="#CCCCCC"> that you can do to</font>

176
00:07:13,789 --> 00:07:17,900
scale it so ultimately my talk here

177
00:07:15,949 --> 00:07:20,360
<font color="#CCCCCC">today is about getting you to see that</font>

178
00:07:17,900 --> 00:07:22,219
<font color="#CCCCCC">we have to get</font><font color="#E5E5E5"> security experts off the</font>

179
00:07:20,360 --> 00:07:25,370
<font color="#CCCCCC">critical path</font><font color="#E5E5E5"> we've got to be</font><font color="#CCCCCC"> able to</font>

180
00:07:22,219 --> 00:07:28,460
push code into<font color="#CCCCCC"> production</font><font color="#E5E5E5"> without me or</font>

181
00:07:25,370 --> 00:07:30,770
you in the critical path<font color="#CCCCCC"> that means your</font>

182
00:07:28,460 --> 00:07:32,960
job<font color="#E5E5E5"> changes you can't be the guy that's</font>

183
00:07:30,770 --> 00:07:35,870
finding the<font color="#CCCCCC"> xs/s you've got to be more</font>

184
00:07:32,960 --> 00:07:40,190
<font color="#E5E5E5">like a coach or a tool Smith in order to</font>

185
00:07:35,870 --> 00:07:42,620
help get that pipeline<font color="#E5E5E5"> automated and you</font>

186
00:07:40,190 --> 00:07:44,180
know if you've got<font color="#CCCCCC"> a bottleneck kind of</font>

187
00:07:42,620 --> 00:07:46,639
process what<font color="#CCCCCC"> we see in almost</font><font color="#E5E5E5"> every</font>

188
00:07:44,180 --> 00:07:48,909
<font color="#CCCCCC">organization is that</font><font color="#E5E5E5"> they only</font><font color="#CCCCCC"> focus on</font>

189
00:07:46,639 --> 00:07:50,689
a subset<font color="#CCCCCC"> of their application portfolio</font>

190
00:07:48,909 --> 00:07:51,949
<font color="#CCCCCC">anybody</font><font color="#E5E5E5"> got an</font><font color="#CCCCCC"> organization where</font>

191
00:07:50,689 --> 00:07:55,039
they're<font color="#CCCCCC"> only</font><font color="#E5E5E5"> looking at like the</font>

192
00:07:51,949 --> 00:07:57,379
criticals<font color="#E5E5E5"> these are the high risk</font>

193
00:07:55,039 --> 00:07:58,430
applications may some organizations

194
00:07:57,379 --> 00:08:00,560
they're like well that's<font color="#E5E5E5"> just the ones</font>

195
00:07:58,430 --> 00:08:02,449
<font color="#CCCCCC">that</font><font color="#E5E5E5"> are external facing some</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

196
00:08:00,560 --> 00:08:04,190
smarter ones are like well it's the

197
00:08:02,449 --> 00:08:05,509
external<font color="#CCCCCC"> facing ones but it's also some</font>

198
00:08:04,190 --> 00:08:06,949
of the internal<font color="#E5E5E5"> ones that are really</font>

199
00:08:05,509 --> 00:08:09,469
valuable<font color="#E5E5E5"> because that's you know</font><font color="#CCCCCC"> that's</font>

200
00:08:06,949 --> 00:08:10,669
<font color="#E5E5E5">a high impact us but however you figure</font>

201
00:08:09,469 --> 00:08:12,979
it<font color="#E5E5E5"> out they're only</font><font color="#CCCCCC"> looking at a subset</font>

202
00:08:10,669 --> 00:08:16,370
<font color="#CCCCCC">of the apps</font><font color="#E5E5E5"> and then what happens is</font>

203
00:08:12,979 --> 00:08:18,889
that's still too much<font color="#CCCCCC"> for this approach</font>

204
00:08:16,370 --> 00:08:20,569
to<font color="#CCCCCC"> work and so then they have to start</font>

205
00:08:18,889 --> 00:08:21,949
lowering<font color="#CCCCCC"> the bar</font><font color="#E5E5E5"> right and all of a</font>

206
00:08:20,569 --> 00:08:23,960
sudden<font color="#CCCCCC"> now you're configuring your tools</font>

207
00:08:21,949 --> 00:08:27,860
to not<font color="#CCCCCC"> false-alarm</font><font color="#E5E5E5"> so much anybody done</font>

208
00:08:23,960 --> 00:08:29,739
that<font color="#E5E5E5"> a star turn it off</font><font color="#CCCCCC"> rules</font><font color="#E5E5E5"> and pretty</font>

209
00:08:27,860 --> 00:08:32,899
soon<font color="#E5E5E5"> you've got an incredibly expensive</font>

210
00:08:29,740 --> 00:08:34,190
<font color="#E5E5E5">XSS detector and that's</font><font color="#CCCCCC"> what we're</font>

211
00:08:32,899 --> 00:08:36,078
putting<font color="#E5E5E5"> all this effort and work into</font>

212
00:08:34,190 --> 00:08:38,570
<font color="#E5E5E5">building a program that's ultimately not</font>

213
00:08:36,078 --> 00:08:41,598
delivering what<font color="#CCCCCC"> we</font><font color="#E5E5E5"> want and I think</font><font color="#CCCCCC"> we</font>

214
00:08:38,570 --> 00:08:43,849
all know what we want<font color="#E5E5E5"> if you want to</font>

215
00:08:41,599 --> 00:08:45,920
<font color="#CCCCCC">Matt imagine the outcome that</font><font color="#E5E5E5"> you really</font>

216
00:08:43,849 --> 00:08:48,110
want you want all<font color="#CCCCCC"> of your applications</font>

217
00:08:45,920 --> 00:08:49,670
<font color="#E5E5E5">in your portfolio</font><font color="#CCCCCC"> and you want to be</font>

218
00:08:48,110 --> 00:08:51,980
relatively<font color="#E5E5E5"> sure that they're not</font>

219
00:08:49,670 --> 00:08:55,189
vulnerable<font color="#E5E5E5"> to</font><font color="#CCCCCC"> attack and that they're</font>

220
00:08:51,980 --> 00:08:56,390
protected if they are attacked that's

221
00:08:55,190 --> 00:08:57,800
the goal but we're not<font color="#E5E5E5"> getting anywhere</font>

222
00:08:56,390 --> 00:09:02,780
close<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that with the current program</font>

223
00:08:57,800 --> 00:09:06,170
so I think dev<font color="#CCCCCC"> SEC Ops is incredibly</font>

224
00:09:02,780 --> 00:09:09,589
promising<font color="#E5E5E5"> DevOps transformed software</font>

225
00:09:06,170 --> 00:09:12,439
development and<font color="#E5E5E5"> dev sack ops can</font>

226
00:09:09,590 --> 00:09:16,550
transform security but it's not just

227
00:09:12,440 --> 00:09:20,210
shoving legacy security tools into

228
00:09:16,550 --> 00:09:24,020
DevOps<font color="#CCCCCC"> Larry Mascheroni from Comcast he</font>

229
00:09:20,210 --> 00:09:26,600
calls that lipstick DevOps lipstick on a

230
00:09:24,020 --> 00:09:28,069
pig<font color="#E5E5E5"> right it's automating the scan</font>

231
00:09:26,600 --> 00:09:29,870
button<font color="#E5E5E5"> is not going to get us there</font>

232
00:09:28,070 --> 00:09:32,480
<font color="#E5E5E5">because it doesn't</font><font color="#CCCCCC"> really solve the</font>

233
00:09:29,870 --> 00:09:34,670
problems<font color="#E5E5E5"> with the expert group</font><font color="#CCCCCC"> and we'll</font>

234
00:09:32,480 --> 00:09:37,160
get to that<font color="#CCCCCC"> in just a second but</font><font color="#E5E5E5"> the the</font>

235
00:09:34,670 --> 00:09:40,640
big transformations with DevOps<font color="#E5E5E5"> we're</font>

236
00:09:37,160 --> 00:09:44,089
taking a software process that you know

237
00:09:40,640 --> 00:09:46,460
<font color="#CCCCCC">as big</font><font color="#E5E5E5"> monolithic and not very you</font><font color="#CCCCCC"> know</font>

238
00:09:44,090 --> 00:09:49,490
not<font color="#CCCCCC"> very agile</font><font color="#E5E5E5"> not very many feedback</font>

239
00:09:46,460 --> 00:09:50,720
loops<font color="#E5E5E5"> and transforming it they took</font><font color="#CCCCCC"> the</font>

240
00:09:49,490 --> 00:09:53,930
work<font color="#E5E5E5"> and broke it down into little</font>

241
00:09:50,720 --> 00:09:57,970
<font color="#E5E5E5">pieces</font><font color="#CCCCCC"> that you can deliver now can we</font>

242
00:09:53,930 --> 00:10:00,920
do<font color="#E5E5E5"> that for security sure but we don't a</font>

243
00:09:57,970 --> 00:10:03,200
pen test is like<font color="#E5E5E5"> this big chunk of work</font>

244
00:10:00,920 --> 00:10:05,719
<font color="#E5E5E5">right security architecture is a big</font>

245
00:10:03,200 --> 00:10:08,780
chunk of work that we do all is one big

246
00:10:05,720 --> 00:10:10,880
giant<font color="#E5E5E5"> thing we got to break that</font><font color="#CCCCCC"> down</font>

247
00:10:08,780 --> 00:10:16,490
the<font color="#E5E5E5"> little pieces that we can deliver</font>

248
00:10:10,880 --> 00:10:17,900
<font color="#E5E5E5">all the way piece by piece</font><font color="#CCCCCC"> and as we'll</font>

249
00:10:16,490 --> 00:10:21,140
see a<font color="#E5E5E5"> lot of that work can be done</font>

250
00:10:17,900 --> 00:10:22,699
<font color="#E5E5E5">without security experts so that's the</font>

251
00:10:21,140 --> 00:10:24,380
first<font color="#E5E5E5"> thing is getting security work</font>

252
00:10:22,700 --> 00:10:25,940
flowing<font color="#E5E5E5"> because right now it's not</font>

253
00:10:24,380 --> 00:10:28,520
flowing we do it you know at the end<font color="#E5E5E5"> of</font>

254
00:10:25,940 --> 00:10:30,500
the<font color="#E5E5E5"> lifecycle it's a big effort it's a</font>

255
00:10:28,520 --> 00:10:33,079
long feedback loop<font color="#E5E5E5"> it's all the same</font>

256
00:10:30,500 --> 00:10:34,760
<font color="#E5E5E5">problems your software had so that's the</font>

257
00:10:33,080 --> 00:10:36,080
first step we<font color="#E5E5E5"> got to break down security</font>

258
00:10:34,760 --> 00:10:38,030
<font color="#E5E5E5">work into little pieces that are</font>

259
00:10:36,080 --> 00:10:40,910
valuable<font color="#CCCCCC"> the second thing is we've got</font>

260
00:10:38,030 --> 00:10:44,030
to<font color="#E5E5E5"> ensure instant feedback</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of the</font>

261
00:10:40,910 --> 00:10:46,040
<font color="#E5E5E5">feedback that we give is way too late</font>

262
00:10:44,030 --> 00:10:48,230
if you ever<font color="#E5E5E5"> anybody seen</font><font color="#CCCCCC"> that curve</font>

263
00:10:46,040 --> 00:10:51,770
where it says like you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> a security</font>

264
00:10:48,230 --> 00:10:53,900
vulnerability costs<font color="#E5E5E5"> X in if you find it</font>

265
00:10:51,770 --> 00:10:56,180
in<font color="#E5E5E5"> requirements or development and then</font>

266
00:10:53,900 --> 00:10:58,520
it's like 10<font color="#E5E5E5"> X if you find it in</font><font color="#CCCCCC"> tests</font>

267
00:10:56,180 --> 00:11:01,670
and you know<font color="#E5E5E5"> 100 X if you find it in</font>

268
00:10:58,520 --> 00:11:05,270
production<font color="#CCCCCC"> that chart is all wrong</font>

269
00:11:01,670 --> 00:11:06,680
<font color="#E5E5E5">because it's not a straight line about</font>

270
00:11:05,270 --> 00:11:10,480
<font color="#E5E5E5">half an hour after that code gets</font>

271
00:11:06,680 --> 00:11:13,250
<font color="#CCCCCC">committed the cost goes up by like</font>

272
00:11:10,480 --> 00:11:14,320
zillion times<font color="#E5E5E5"> right because once it's</font>

273
00:11:13,250 --> 00:11:16,750
committed<font color="#E5E5E5"> developer</font>

274
00:11:14,320 --> 00:11:19,270
the next thing if they can fix<font color="#E5E5E5"> it in</font>

275
00:11:16,750 --> 00:11:21,790
stride<font color="#E5E5E5"> while their programming costs</font>

276
00:11:19,270 --> 00:11:24,370
<font color="#E5E5E5">almost nothing but it immediately goes</font>

277
00:11:21,790 --> 00:11:26,620
up so the the curves wrong<font color="#E5E5E5"> but the point</font>

278
00:11:24,370 --> 00:11:28,900
is right<font color="#E5E5E5"> like we got to get super early</font>

279
00:11:26,620 --> 00:11:31,960
<font color="#E5E5E5">in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> process get these problems fixed</font>

280
00:11:28,900 --> 00:11:34,300
<font color="#E5E5E5">instantly and then the last thing is in</font>

281
00:11:31,960 --> 00:11:36,580
for DevOps<font color="#CCCCCC"> is to create this culture of</font>

282
00:11:34,300 --> 00:11:38,349
experimentation<font color="#E5E5E5"> and learning and that's</font>

283
00:11:36,580 --> 00:11:41,970
<font color="#E5E5E5">also something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we really struggle</font>

284
00:11:38,350 --> 00:11:44,650
with<font color="#E5E5E5"> insecurity is most security is done</font>

285
00:11:41,970 --> 00:11:47,260
based<font color="#E5E5E5"> on standards that are kind of</font>

286
00:11:44,650 --> 00:11:47,829
backwards looking you know<font color="#E5E5E5"> like the top</font>

287
00:11:47,260 --> 00:11:49,689
<font color="#CCCCCC">ten</font>

288
00:11:47,830 --> 00:11:50,680
<font color="#E5E5E5">it looks backwards that like what what</font>

289
00:11:49,690 --> 00:11:52,030
vulnerabilities do you have it's<font color="#CCCCCC"> not</font>

290
00:11:50,680 --> 00:11:53,800
thinking about<font color="#E5E5E5"> what's the threat</font><font color="#CCCCCC"> gonna</font>

291
00:11:52,030 --> 00:11:56,829
be in three years<font color="#CCCCCC"> or five years when the</font>

292
00:11:53,800 --> 00:11:58,810
<font color="#E5E5E5">system is out being deployed</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> not</font>

293
00:11:56,830 --> 00:12:01,990
building<font color="#E5E5E5"> for that threat we're building</font>

294
00:11:58,810 --> 00:12:05,079
for the threat from<font color="#E5E5E5"> three years ago or</font>

295
00:12:01,990 --> 00:12:08,160
<font color="#E5E5E5">more audit driven</font><font color="#CCCCCC"> app SiC is really</font>

296
00:12:05,080 --> 00:12:09,820
about it if so we can<font color="#E5E5E5"> build a culture of</font>

297
00:12:08,160 --> 00:12:11,680
<font color="#E5E5E5">experimentation and</font><font color="#CCCCCC"> learning but we</font>

298
00:12:09,820 --> 00:12:12,940
<font color="#CCCCCC">gotta</font><font color="#E5E5E5"> allow everybody to say hey that's</font>

299
00:12:11,680 --> 00:12:14,829
a you know<font color="#CCCCCC"> that's a potential</font>

300
00:12:12,940 --> 00:12:16,150
vulnerability<font color="#CCCCCC"> comment</font><font color="#E5E5E5"> on the threat</font>

301
00:12:14,830 --> 00:12:18,790
model<font color="#CCCCCC"> make it concrete and we'll talk a</font>

302
00:12:16,150 --> 00:12:20,709
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more about that</font><font color="#E5E5E5"> so I think</font>

303
00:12:18,790 --> 00:12:22,870
<font color="#E5E5E5">this is really promising</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not</font>

304
00:12:20,710 --> 00:12:24,760
what this talk<font color="#CCCCCC"> is about if you're</font>

305
00:12:22,870 --> 00:12:26,230
<font color="#E5E5E5">interested I wrote a ref card about this</font>

306
00:12:24,760 --> 00:12:28,180
<font color="#E5E5E5">a</font><font color="#CCCCCC"> D zone that you can download</font>

307
00:12:26,230 --> 00:12:29,770
intro to dev<font color="#CCCCCC"> sack ops</font><font color="#E5E5E5"> and there's some</font>

308
00:12:28,180 --> 00:12:33,219
other materials out<font color="#E5E5E5"> there that I think</font>

309
00:12:29,770 --> 00:12:34,990
<font color="#E5E5E5">are good</font><font color="#CCCCCC"> I just want to throw this</font><font color="#E5E5E5"> up</font>

310
00:12:33,220 --> 00:12:37,960
there as<font color="#E5E5E5"> III encourage you</font><font color="#CCCCCC"> to look at</font>

311
00:12:34,990 --> 00:12:39,490
pictures<font color="#CCCCCC"> of dev sack ops</font><font color="#E5E5E5"> that are out</font>

312
00:12:37,960 --> 00:12:40,990
<font color="#CCCCCC">there</font><font color="#E5E5E5"> because there's a lot of different</font>

313
00:12:39,490 --> 00:12:42,460
you know reference architectures and

314
00:12:40,990 --> 00:12:44,290
pipelines<font color="#E5E5E5"> that people are trying</font><font color="#CCCCCC"> to draw</font>

315
00:12:42,460 --> 00:12:48,150
but<font color="#E5E5E5"> they're they're all super</font>

316
00:12:44,290 --> 00:12:50,319
complicated<font color="#E5E5E5"> they've got a zillion tools</font>

317
00:12:48,150 --> 00:12:52,800
<font color="#E5E5E5">and then they're trying</font><font color="#CCCCCC"> to take</font><font color="#E5E5E5"> all</font>

318
00:12:50,320 --> 00:12:55,240
<font color="#E5E5E5">those tools and shove them together and</font>

319
00:12:52,800 --> 00:12:56,890
orchestrate that process<font color="#E5E5E5"> if you look at</font>

320
00:12:55,240 --> 00:12:58,240
<font color="#CCCCCC">gardener's process for instance</font><font color="#E5E5E5"> they're</font>

321
00:12:56,890 --> 00:13:00,130
basically like well you got to buy<font color="#CCCCCC"> one</font>

322
00:12:58,240 --> 00:13:01,510
of<font color="#E5E5E5"> every single kind of tool and then</font>

323
00:13:00,130 --> 00:13:02,650
you<font color="#E5E5E5"> need an orchestration tool to run</font>

324
00:13:01,510 --> 00:13:04,660
all<font color="#E5E5E5"> those tools and then you</font><font color="#CCCCCC"> need</font>

325
00:13:02,650 --> 00:13:07,140
another<font color="#CCCCCC"> tool to take all the results of</font>

326
00:13:04,660 --> 00:13:09,310
all those tools<font color="#E5E5E5"> and correlate them and</font>

327
00:13:07,140 --> 00:13:11,740
you know analyze them so that you<font color="#E5E5E5"> can</font>

328
00:13:09,310 --> 00:13:14,589
make get value out<font color="#CCCCCC"> that's bananas</font>

329
00:13:11,740 --> 00:13:16,120
nobody has that's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> gonna work nobody</font>

330
00:13:14,590 --> 00:13:19,150
<font color="#CCCCCC">has enough people</font><font color="#E5E5E5"> to run all those tools</font>

331
00:13:16,120 --> 00:13:20,740
much less see this little<font color="#E5E5E5"> icon at the</font>

332
00:13:19,150 --> 00:13:23,880
top this is<font color="#CCCCCC"> app sack</font><font color="#E5E5E5"> analyst</font>

333
00:13:20,740 --> 00:13:23,880
false-positive remover

334
00:13:25,680 --> 00:13:32,258
that bubble<font color="#E5E5E5"> should be like 80 or 90</font>

335
00:13:29,709 --> 00:13:34,239
<font color="#CCCCCC">percent</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> this screen because that's</font>

336
00:13:32,259 --> 00:13:36,070
all the work I know many organizations

337
00:13:34,240 --> 00:13:39,220
have<font color="#E5E5E5"> teams</font><font color="#CCCCCC"> I don't wonder if she's</font><font color="#E5E5E5"> got</font>

338
00:13:36,070 --> 00:13:41,860
over<font color="#E5E5E5"> 50 people all they do is take the</font>

339
00:13:39,220 --> 00:13:44,199
output<font color="#E5E5E5"> of static analysis tools and weed</font>

340
00:13:41,860 --> 00:13:45,790
out the false positives<font color="#E5E5E5"> not only is that</font>

341
00:13:44,199 --> 00:13:47,920
<font color="#CCCCCC">it's sort of</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> miserable existence it's</font>

342
00:13:45,790 --> 00:13:49,300
not a<font color="#CCCCCC"> career</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> automated if you</font>

343
00:13:47,920 --> 00:13:51,339
have to have a<font color="#E5E5E5"> human in the loop it's by</font>

344
00:13:49,300 --> 00:13:53,410
<font color="#CCCCCC">definition it's not automated</font><font color="#E5E5E5"> so we're</font>

345
00:13:51,339 --> 00:13:55,329
failing<font color="#CCCCCC"> it on that so just look at these</font>

346
00:13:53,410 --> 00:13:59,290
<font color="#E5E5E5">pictures with a skeptical eye if</font><font color="#CCCCCC"> they're</font>

347
00:13:55,329 --> 00:14:01,810
<font color="#E5E5E5">I call this tool soup and</font><font color="#CCCCCC"> tool soup is</font>

348
00:13:59,290 --> 00:14:03,160
not a knapsack strategy you can't just

349
00:14:01,810 --> 00:14:06,369
take a zillion tools and throw into<font color="#E5E5E5"> the</font>

350
00:14:03,160 --> 00:14:08,649
problem<font color="#CCCCCC"> and expect value</font><font color="#E5E5E5"> to come out so</font>

351
00:14:06,370 --> 00:14:10,899
I want<font color="#CCCCCC"> to the last speaker talked about</font>

352
00:14:08,649 --> 00:14:12,850
starting<font color="#CCCCCC"> with the end in mind</font><font color="#E5E5E5"> and I want</font>

353
00:14:10,899 --> 00:14:15,490
to do that here too so when I<font color="#E5E5E5"> think</font>

354
00:14:12,850 --> 00:14:19,569
<font color="#CCCCCC">about a dev sack ops pipeline for me</font>

355
00:14:15,490 --> 00:14:22,389
it's three parts<font color="#E5E5E5"> in development we want</font>

356
00:14:19,569 --> 00:14:25,120
to empower developers to create secure

357
00:14:22,389 --> 00:14:26,920
code and<font color="#CCCCCC"> checking in clean right I think</font>

358
00:14:25,120 --> 00:14:28,690
<font color="#CCCCCC">we</font><font color="#E5E5E5"> can all probably agree on that to me</font>

359
00:14:26,920 --> 00:14:30,399
<font color="#E5E5E5">that means it's got a it's got to do</font>

360
00:14:28,690 --> 00:14:34,269
significant testing it's got to be

361
00:14:30,399 --> 00:14:36,040
accurate<font color="#CCCCCC"> because you know we can't they</font>

362
00:14:34,269 --> 00:14:38,500
don't<font color="#CCCCCC"> have the expertise to deal with</font>

363
00:14:36,040 --> 00:14:39,699
false positives<font color="#CCCCCC"> it's got to</font><font color="#E5E5E5"> provide them</font>

364
00:14:38,500 --> 00:14:42,339
<font color="#E5E5E5">feedback through the tools</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

365
00:14:39,699 --> 00:14:45,189
<font color="#CCCCCC">already using</font><font color="#E5E5E5"> we can't have them go</font><font color="#CCCCCC"> to</font>

366
00:14:42,339 --> 00:14:47,290
some separate dashboard<font color="#E5E5E5"> and it can't</font>

367
00:14:45,190 --> 00:14:48,579
slow them<font color="#E5E5E5"> down</font><font color="#CCCCCC"> so that's in development</font>

368
00:14:47,290 --> 00:14:50,019
if we could give developers<font color="#E5E5E5"> instant</font>

369
00:14:48,579 --> 00:14:51,699
feedback that say hey you committed

370
00:14:50,019 --> 00:14:53,079
sequel injection<font color="#E5E5E5"> on right here and</font>

371
00:14:51,699 --> 00:14:54,519
here's what you need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do to fix it and</font>

372
00:14:53,079 --> 00:14:56,680
they can<font color="#E5E5E5"> just fix it and check</font><font color="#CCCCCC"> it and</font>

373
00:14:54,519 --> 00:14:59,949
clean then that's a process<font color="#E5E5E5"> that I think</font>

374
00:14:56,680 --> 00:15:01,779
<font color="#CCCCCC">we</font><font color="#E5E5E5"> can that can work</font><font color="#CCCCCC"> I'll show you how</font>

375
00:14:59,949 --> 00:15:03,399
just<font color="#CCCCCC"> a second that's that's</font><font color="#E5E5E5"> part two so</font>

376
00:15:01,779 --> 00:15:05,560
the next thing<font color="#CCCCCC"> is in the</font><font color="#E5E5E5"> integration</font>

377
00:15:03,399 --> 00:15:06,670
environment<font color="#E5E5E5"> or QA environment</font><font color="#CCCCCC"> this is</font>

378
00:15:05,560 --> 00:15:09,160
where I think<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> be a little</font>

379
00:15:06,670 --> 00:15:10,029
bit more formal right in development<font color="#CCCCCC"> you</font>

380
00:15:09,160 --> 00:15:11,410
don't want to track all those

381
00:15:10,029 --> 00:15:12,850
<font color="#E5E5E5">vulnerabilities and put</font><font color="#CCCCCC"> in extra work</font>

382
00:15:11,410 --> 00:15:14,439
<font color="#CCCCCC">unless</font><font color="#E5E5E5"> you fix them and get them out</font><font color="#CCCCCC"> of</font>

383
00:15:12,850 --> 00:15:16,510
the way<font color="#CCCCCC"> just like any other stick</font><font color="#E5E5E5"> you</font>

384
00:15:14,439 --> 00:15:18,250
<font color="#E5E5E5">know any other software problem but an</font>

385
00:15:16,510 --> 00:15:20,709
integration<font color="#CCCCCC"> I think you don't</font><font color="#E5E5E5"> want to</font>

386
00:15:18,250 --> 00:15:22,660
slow down builds<font color="#E5E5E5"> you do want to</font>

387
00:15:20,709 --> 00:15:24,969
integrate<font color="#E5E5E5"> with normal testing tools and</font>

388
00:15:22,660 --> 00:15:26,050
you should be a<font color="#CCCCCC"> little bit more formal</font>

389
00:15:24,970 --> 00:15:28,149
like you might want to break the build

390
00:15:26,050 --> 00:15:29,709
you might want to create<font color="#E5E5E5"> JIRA tickets</font><font color="#CCCCCC"> at</font>

391
00:15:28,149 --> 00:15:31,750
this point for issues<font color="#E5E5E5"> and track them to</font>

392
00:15:29,709 --> 00:15:34,599
closure so that<font color="#CCCCCC"> you can deliver</font><font color="#E5E5E5"> assured</font>

393
00:15:31,750 --> 00:15:35,840
software into production<font color="#CCCCCC"> so I I don't</font>

394
00:15:34,600 --> 00:15:37,790
<font color="#CCCCCC">think it's like shift</font>

395
00:15:35,840 --> 00:15:41,330
is kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the wrong language for me</font>

396
00:15:37,790 --> 00:15:44,449
it's it's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> useful analogy but it's not</font>

397
00:15:41,330 --> 00:15:47,290
just<font color="#E5E5E5"> about shifting left</font><font color="#CCCCCC"> it's about you</font>

398
00:15:44,450 --> 00:15:49,520
know<font color="#E5E5E5"> starting left but you also have to</font>

399
00:15:47,290 --> 00:15:52,400
do more security in QA and<font color="#CCCCCC"> we'll</font>

400
00:15:49,520 --> 00:15:53,930
actually<font color="#E5E5E5"> talk about in production I mean</font>

401
00:15:52,400 --> 00:15:55,790
apps like doesn't stop when<font color="#E5E5E5"> you deliver</font>

402
00:15:53,930 --> 00:15:59,120
the<font color="#E5E5E5"> code right like there's a whole</font>

403
00:15:55,790 --> 00:16:01,790
attack world out<font color="#E5E5E5"> there</font><font color="#CCCCCC"> and I think</font>

404
00:15:59,120 --> 00:16:03,380
organizations<font color="#E5E5E5"> are really lacking in this</font>

405
00:16:01,790 --> 00:16:05,329
I<font color="#CCCCCC"> think most organizations</font><font color="#E5E5E5"> don't know</font>

406
00:16:03,380 --> 00:16:07,310
who's attacking<font color="#E5E5E5"> them</font><font color="#CCCCCC"> or what attack</font>

407
00:16:05,330 --> 00:16:10,610
vectors they're using<font color="#E5E5E5"> I think they don't</font>

408
00:16:07,310 --> 00:16:14,510
<font color="#E5E5E5">know much</font><font color="#CCCCCC"> about you know how how people</font>

409
00:16:10,610 --> 00:16:17,120
<font color="#CCCCCC">are approaching the application I think</font>

410
00:16:14,510 --> 00:16:18,680
they want protection<font color="#CCCCCC"> in production and</font>

411
00:16:17,120 --> 00:16:20,570
that's not<font color="#E5E5E5"> just</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> known</font>

412
00:16:18,680 --> 00:16:22,400
vulnerabilities but<font color="#E5E5E5"> for new stuff</font><font color="#CCCCCC"> that</font>

413
00:16:20,570 --> 00:16:23,900
comes out you want to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able to deploy</font>

414
00:16:22,400 --> 00:16:26,959
<font color="#CCCCCC">a protection really fast like someone</font>

415
00:16:23,900 --> 00:16:29,840
today<font color="#E5E5E5"> some researcher could release some</font>

416
00:16:26,960 --> 00:16:30,520
new<font color="#E5E5E5"> zero day in struts or spring and</font>

417
00:16:29,840 --> 00:16:33,440
guess what

418
00:16:30,520 --> 00:16:36,140
half the applications out<font color="#CCCCCC"> there now</font><font color="#E5E5E5"> are</font>

419
00:16:33,440 --> 00:16:38,690
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be vulnerable to some new crazy</font>

420
00:16:36,140 --> 00:16:40,010
attack<font color="#E5E5E5"> and most organizations aren't</font>

421
00:16:38,690 --> 00:16:42,290
<font color="#E5E5E5">going to be able to respond to that any</font>

422
00:16:40,010 --> 00:16:43,910
faster than<font color="#E5E5E5"> Equifax did they're gonna</font>

423
00:16:42,290 --> 00:16:46,520
have to<font color="#E5E5E5"> pull their apps out of</font>

424
00:16:43,910 --> 00:16:48,709
<font color="#CCCCCC">production they're gonna have to</font><font color="#E5E5E5"> get the</font>

425
00:16:46,520 --> 00:16:50,480
new library<font color="#E5E5E5"> add it to the</font><font color="#CCCCCC"> application</font>

426
00:16:48,710 --> 00:16:52,550
rewrite the code<font color="#E5E5E5"> to match the new</font>

427
00:16:50,480 --> 00:16:54,350
library<font color="#CCCCCC"> because they don't patch</font><font color="#E5E5E5"> open</font>

428
00:16:52,550 --> 00:16:56,030
<font color="#E5E5E5">source you issue a new open source</font>

429
00:16:54,350 --> 00:16:58,490
library and then they're<font color="#E5E5E5"> gonna have to</font>

430
00:16:56,030 --> 00:16:59,930
do their<font color="#E5E5E5"> testing and QA and security and</font>

431
00:16:58,490 --> 00:17:02,270
then push it<font color="#CCCCCC"> into production</font><font color="#E5E5E5"> that takes</font>

432
00:16:59,930 --> 00:17:04,040
a long<font color="#CCCCCC"> time</font><font color="#E5E5E5"> if you've got 50 apps</font>

433
00:17:02,270 --> 00:17:06,950
written<font color="#E5E5E5"> with spring</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is a massive</font>

434
00:17:04,040 --> 00:17:08,389
<font color="#E5E5E5">distraction</font><font color="#CCCCCC"> and so we need</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> to</font>

435
00:17:06,950 --> 00:17:10,580
deal with<font color="#CCCCCC"> that in</font><font color="#E5E5E5"> the operational side</font>

436
00:17:08,390 --> 00:17:12,680
<font color="#CCCCCC">of things</font><font color="#E5E5E5"> so if we can do with it if we</font>

437
00:17:10,579 --> 00:17:13,909
could<font color="#E5E5E5"> do this I think we'd be in pretty</font>

438
00:17:12,680 --> 00:17:16,880
good<font color="#E5E5E5"> shape so now I'm gonna try and tell</font>

439
00:17:13,910 --> 00:17:20,060
<font color="#CCCCCC">you how I see that happening</font><font color="#E5E5E5"> we got to</font>

440
00:17:16,880 --> 00:17:23,180
start<font color="#E5E5E5"> with instrumentation so there's a</font>

441
00:17:20,060 --> 00:17:24,679
<font color="#CCCCCC">shift going</font><font color="#E5E5E5"> on in</font><font color="#CCCCCC"> the security world to</font>

442
00:17:23,180 --> 00:17:26,959
<font color="#E5E5E5">not just an</font><font color="#CCCCCC"> application security</font><font color="#E5E5E5"> but</font>

443
00:17:24,680 --> 00:17:30,680
kind<font color="#E5E5E5"> of everywhere to move from scanning</font>

444
00:17:26,959 --> 00:17:32,270
<font color="#E5E5E5">and firewalls to instrumentation so</font>

445
00:17:30,680 --> 00:17:33,380
skinny<font color="#E5E5E5"> and follows kind of works at the</font>

446
00:17:32,270 --> 00:17:36,110
perimeter right you're looking<font color="#CCCCCC"> at</font>

447
00:17:33,380 --> 00:17:39,250
network<font color="#CCCCCC"> traffic or HTTP traffic</font><font color="#E5E5E5"> to try</font>

448
00:17:36,110 --> 00:17:42,260
to identify attacks<font color="#E5E5E5"> and vulnerabilities</font>

449
00:17:39,250 --> 00:17:45,440
<font color="#E5E5E5">and you don't have a ton of information</font>

450
00:17:42,260 --> 00:17:47,950
about<font color="#CCCCCC"> what's really</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> on a better</font>

451
00:17:45,440 --> 00:17:49,330
<font color="#E5E5E5">approach is to instrument</font>

452
00:17:47,950 --> 00:17:52,480
thing that<font color="#E5E5E5"> you're actually trying to</font>

453
00:17:49,330 --> 00:17:55,210
protect<font color="#E5E5E5"> so at the application layer we</font>

454
00:17:52,480 --> 00:17:57,970
can instrument the actual app and look

455
00:17:55,210 --> 00:17:59,140
at how it runs<font color="#E5E5E5"> at other layers there's</font>

456
00:17:57,970 --> 00:18:01,420
you know the<font color="#E5E5E5"> container layer there's</font>

457
00:17:59,140 --> 00:18:03,520
products like aqua<font color="#E5E5E5"> and</font><font color="#CCCCCC"> twistlock</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> the</font>

458
00:18:01,420 --> 00:18:05,110
post layer there's you<font color="#CCCCCC"> know things</font><font color="#E5E5E5"> like</font>

459
00:18:03,520 --> 00:18:06,490
<font color="#E5E5E5">carbon black which are instrumenting</font>

460
00:18:05,110 --> 00:18:09,429
even if the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> network layer there's</font>

461
00:18:06,490 --> 00:18:12,970
<font color="#E5E5E5">products from</font><font color="#CCCCCC"> AWS and</font><font color="#E5E5E5"> so on that</font><font color="#CCCCCC"> VMware</font>

462
00:18:09,430 --> 00:18:13,990
that can can give you direct analysis of

463
00:18:12,970 --> 00:18:17,020
the thing that<font color="#CCCCCC"> you're trying to</font><font color="#E5E5E5"> protect</font>

464
00:18:13,990 --> 00:18:19,380
<font color="#E5E5E5">and so to me the modern security stack</font>

465
00:18:17,020 --> 00:18:21,820
looks like this and it protects itself

466
00:18:19,380 --> 00:18:23,140
<font color="#E5E5E5">you can take that stack</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can move</font>

467
00:18:21,820 --> 00:18:24,669
it you can<font color="#CCCCCC"> put</font><font color="#E5E5E5"> it in</font><font color="#CCCCCC"> your data</font><font color="#E5E5E5"> center</font>

468
00:18:23,140 --> 00:18:26,410
you<font color="#E5E5E5"> can put it in the cloud you</font><font color="#CCCCCC"> can put</font>

469
00:18:24,670 --> 00:18:28,210
it in an elastic environment the

470
00:18:26,410 --> 00:18:30,280
protection goes with the thing<font color="#E5E5E5"> that</font>

471
00:18:28,210 --> 00:18:33,400
you're<font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> protect the idea of</font>

472
00:18:30,280 --> 00:18:36,160
having a perimeter around everything<font color="#E5E5E5"> is</font>

473
00:18:33,400 --> 00:18:37,360
fundamentally<font color="#CCCCCC"> flawed</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> always what</font>

474
00:18:36,160 --> 00:18:38,950
happens<font color="#CCCCCC"> is wherever</font><font color="#E5E5E5"> you put the</font>

475
00:18:37,360 --> 00:18:40,179
perimeter then all of a<font color="#CCCCCC"> sudden you gotta</font>

476
00:18:38,950 --> 00:18:41,770
<font color="#E5E5E5">run a whole bunch of connections in and</font>

477
00:18:40,180 --> 00:18:43,570
out somebody wants to<font color="#E5E5E5"> run a browser from</font>

478
00:18:41,770 --> 00:18:46,780
inside the perimeter<font color="#E5E5E5"> and then you're</font>

479
00:18:43,570 --> 00:18:49,689
<font color="#E5E5E5">screwed one one employee gets knocked</font>

480
00:18:46,780 --> 00:18:51,730
over<font color="#E5E5E5"> and now the attacker is inside your</font>

481
00:18:49,690 --> 00:18:56,530
<font color="#E5E5E5">intranet and you know the whole thing</font>

482
00:18:51,730 --> 00:18:58,990
<font color="#CCCCCC">crumbles so this to me is the way out of</font>

483
00:18:56,530 --> 00:19:02,020
<font color="#CCCCCC">that edit Moroso does some great</font><font color="#E5E5E5"> talks</font>

484
00:18:58,990 --> 00:19:04,300
he's the former CEO<font color="#E5E5E5"> of AT&T now he</font><font color="#CCCCCC"> runs</font>

485
00:19:02,020 --> 00:19:09,629
a thing called<font color="#E5E5E5"> tag cyber but he talks</font>

486
00:19:04,300 --> 00:19:13,149
about this<font color="#E5E5E5"> process of offload sorry</font>

487
00:19:09,630 --> 00:19:14,860
explode<font color="#E5E5E5"> offload reload and explode is</font>

488
00:19:13,150 --> 00:19:16,660
basically taking the stuff that's<font color="#CCCCCC"> inside</font>

489
00:19:14,860 --> 00:19:19,120
the perimeter<font color="#CCCCCC"> and blowing it up</font><font color="#E5E5E5"> take</font>

490
00:19:16,660 --> 00:19:23,560
those<font color="#CCCCCC"> workloads move them into</font><font color="#E5E5E5"> the cloud</font>

491
00:19:19,120 --> 00:19:26,020
that's<font color="#E5E5E5"> offload and then reload is adding</font>

492
00:19:23,560 --> 00:19:28,510
<font color="#CCCCCC">new modern</font><font color="#E5E5E5"> security protections</font><font color="#CCCCCC"> to that</font>

493
00:19:26,020 --> 00:19:30,490
stack so<font color="#CCCCCC"> that your applications are</font>

494
00:19:28,510 --> 00:19:31,350
protected wherever they are<font color="#E5E5E5"> and then it</font>

495
00:19:30,490 --> 00:19:33,250
<font color="#E5E5E5">doesn't matter</font>

496
00:19:31,350 --> 00:19:38,590
anybody here still talk<font color="#CCCCCC"> about like</font>

497
00:19:33,250 --> 00:19:42,310
internal<font color="#E5E5E5"> apps versus external apps</font><font color="#CCCCCC"> okay</font>

498
00:19:38,590 --> 00:19:44,050
if there's no perimeter<font color="#E5E5E5"> then that</font>

499
00:19:42,310 --> 00:19:46,360
<font color="#CCCCCC">distinction</font><font color="#E5E5E5"> doesn't make any sense there</font>

500
00:19:44,050 --> 00:19:48,909
is no<font color="#CCCCCC"> internal and no external right</font><font color="#E5E5E5"> so</font>

501
00:19:46,360 --> 00:19:51,820
I really want you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> think about every</font>

502
00:19:48,910 --> 00:19:53,020
app is<font color="#CCCCCC"> just out there on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Internet</font>

503
00:19:51,820 --> 00:19:55,120
<font color="#E5E5E5">and how are you going to protect it</font>

504
00:19:53,020 --> 00:19:57,700
<font color="#CCCCCC">because</font><font color="#E5E5E5"> the perimeter doesn't really</font>

505
00:19:55,120 --> 00:20:00,050
provide<font color="#CCCCCC"> that distinction</font><font color="#E5E5E5"> so I don't like</font>

506
00:19:57,700 --> 00:20:03,840
when people<font color="#E5E5E5"> talk about internal</font>

507
00:20:00,050 --> 00:20:05,450
<font color="#E5E5E5">okay so at the application layer let's</font>

508
00:20:03,840 --> 00:20:07,800
talk about instrumentation based

509
00:20:05,450 --> 00:20:10,200
approaches to security<font color="#E5E5E5"> so I'm going</font><font color="#CCCCCC"> to</font>

510
00:20:07,800 --> 00:20:15,690
talk<font color="#CCCCCC"> about two technologies here I asked</font>

511
00:20:10,200 --> 00:20:17,930
<font color="#CCCCCC">a rasp who's heard of asks in rasp</font><font color="#E5E5E5"> okay</font>

512
00:20:15,690 --> 00:20:19,710
so maybe half that's great<font color="#E5E5E5"> so</font>

513
00:20:17,930 --> 00:20:23,310
fundamentally these technologies are

514
00:20:19,710 --> 00:20:29,570
<font color="#CCCCCC">very different than traditional SAS dest</font>

515
00:20:23,310 --> 00:20:31,169
and<font color="#E5E5E5"> woth technologies so I asked is inst</font>

516
00:20:29,570 --> 00:20:32,429
interactive applications to create

517
00:20:31,170 --> 00:20:34,410
testing I actually<font color="#E5E5E5"> think of it as</font>

518
00:20:32,430 --> 00:20:36,540
instrumented application security

519
00:20:34,410 --> 00:20:38,250
testing<font color="#CCCCCC"> so for me that's a bit more</font>

520
00:20:36,540 --> 00:20:40,409
<font color="#E5E5E5">descriptive and the whole idea of I</font>

521
00:20:38,250 --> 00:20:42,180
asked is to<font color="#E5E5E5"> detect vulnerabilities it</font>

522
00:20:40,410 --> 00:20:43,800
does the same kinds of<font color="#CCCCCC"> things that SAST</font>

523
00:20:42,180 --> 00:20:47,130
and DAST<font color="#E5E5E5"> will do just very differently</font>

524
00:20:43,800 --> 00:20:49,409
<font color="#E5E5E5">and rasp is</font><font color="#CCCCCC"> about preventing</font>

525
00:20:47,130 --> 00:20:51,030
vulnerabilities<font color="#E5E5E5"> from being exploited</font><font color="#CCCCCC"> so</font>

526
00:20:49,410 --> 00:20:53,610
this is does the kinds<font color="#E5E5E5"> of things that a</font>

527
00:20:51,030 --> 00:20:55,620
<font color="#E5E5E5">wife would do but from inside the</font>

528
00:20:53,610 --> 00:21:00,330
running application so the way this

529
00:20:55,620 --> 00:21:03,419
works is you'll add a<font color="#CCCCCC"> Iestyn rasp</font><font color="#E5E5E5"> agent</font>

530
00:21:00,330 --> 00:21:05,520
<font color="#E5E5E5">to your application and you know this</font>

531
00:21:03,420 --> 00:21:07,260
<font color="#E5E5E5">like for</font><font color="#CCCCCC"> Java it could be a jar file</font><font color="#E5E5E5"> for</font>

532
00:21:05,520 --> 00:21:09,810
Ruby it could be a gem it's it's a

533
00:21:07,260 --> 00:21:12,030
application component and what it does

534
00:21:09,810 --> 00:21:16,889
is it instruments the application with

535
00:21:12,030 --> 00:21:20,040
sensors<font color="#E5E5E5"> and then those sensors watch the</font>

536
00:21:16,890 --> 00:21:22,560
application run and they can provide

537
00:21:20,040 --> 00:21:24,360
<font color="#CCCCCC">that telemetry</font><font color="#E5E5E5"> to an engine that can</font>

538
00:21:22,560 --> 00:21:26,790
detect vulnerabilities very accurately

539
00:21:24,360 --> 00:21:28,409
and<font color="#E5E5E5"> detect attacks very accurately and</font>

540
00:21:26,790 --> 00:21:30,750
and prevent those attacks from working

541
00:21:28,410 --> 00:21:35,790
<font color="#E5E5E5">so let me give an example</font><font color="#CCCCCC"> of a sequel</font>

542
00:21:30,750 --> 00:21:37,440
injection attack so the attacker sends

543
00:21:35,790 --> 00:21:39,270
in an attack maybe it's like you<font color="#CCCCCC"> know</font>

544
00:21:37,440 --> 00:21:43,200
single<font color="#E5E5E5"> tick or one equals</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> something</font>

545
00:21:39,270 --> 00:21:45,840
<font color="#CCCCCC">like that and that data</font><font color="#E5E5E5"> it's not trying</font>

546
00:21:43,200 --> 00:21:46,890
<font color="#CCCCCC">to block it at the parameter because if</font>

547
00:21:45,840 --> 00:21:48,720
you try to<font color="#E5E5E5"> block at the perimeter you're</font>

548
00:21:46,890 --> 00:21:50,730
always going to<font color="#CCCCCC"> be inaccurate you don't</font>

549
00:21:48,720 --> 00:21:52,680
know maybe that was a blog post that<font color="#CCCCCC"> had</font>

550
00:21:50,730 --> 00:21:54,750
you know single tick or<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> equals</font><font color="#CCCCCC"> 1 in it</font>

551
00:21:52,680 --> 00:21:56,970
<font color="#E5E5E5">wasn't going into the database it's just</font>

552
00:21:54,750 --> 00:22:00,180
normal<font color="#E5E5E5"> data so you know modern</font>

553
00:21:56,970 --> 00:22:01,980
applications take complex data JSON and

554
00:22:00,180 --> 00:22:04,590
serialized objects and so<font color="#CCCCCC"> on so you can</font>

555
00:22:01,980 --> 00:22:05,760
never<font color="#E5E5E5"> really</font><font color="#CCCCCC"> be sure</font><font color="#E5E5E5"> what's in them so</font>

556
00:22:04,590 --> 00:22:07,649
try to pocket the perimeter isn't a

557
00:22:05,760 --> 00:22:09,710
great<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> from inside the app you</font>

558
00:22:07,650 --> 00:22:15,050
<font color="#E5E5E5">can see hey that data flowed through</font>

559
00:22:09,710 --> 00:22:17,510
ended up<font color="#CCCCCC"> in a sequel query if that data</font>

560
00:22:15,050 --> 00:22:19,879
<font color="#E5E5E5">from the attacker changes the meaning of</font>

561
00:22:17,510 --> 00:22:21,710
<font color="#E5E5E5">the query and I</font><font color="#CCCCCC"> asked can analyze that</font>

562
00:22:19,880 --> 00:22:24,380
<font color="#E5E5E5">from</font><font color="#CCCCCC"> raspbian</font><font color="#E5E5E5"> analyze that from inside</font>

563
00:22:21,710 --> 00:22:25,640
<font color="#CCCCCC">the app then that's the definition of</font>

564
00:22:24,380 --> 00:22:27,140
sequel injection<font color="#E5E5E5"> right an attacker</font>

565
00:22:25,640 --> 00:22:28,550
should never be able to<font color="#E5E5E5"> change</font><font color="#CCCCCC"> the</font>

566
00:22:27,140 --> 00:22:30,370
<font color="#E5E5E5">meaning of your queries</font>

567
00:22:28,550 --> 00:22:33,770
that's what sequel injection<font color="#E5E5E5"> is and</font>

568
00:22:30,370 --> 00:22:35,030
that's what<font color="#E5E5E5"> rasp can protect so instead</font>

569
00:22:33,770 --> 00:22:36,680
<font color="#CCCCCC">of</font><font color="#E5E5E5"> trying to guess like is this an</font>

570
00:22:35,030 --> 00:22:37,540
attack and having<font color="#CCCCCC"> this false alarm</font>

571
00:22:36,680 --> 00:22:41,180
problem

572
00:22:37,540 --> 00:22:43,100
<font color="#E5E5E5">Rask can see exactly when there's an</font>

573
00:22:41,180 --> 00:22:44,510
attack and prevent it from<font color="#E5E5E5"> explained so</font>

574
00:22:43,100 --> 00:22:45,980
then then the<font color="#CCCCCC"> Rast can intervene and</font>

575
00:22:44,510 --> 00:22:48,320
prevent that query from<font color="#E5E5E5"> going to the</font>

576
00:22:45,980 --> 00:22:49,610
database<font color="#E5E5E5"> right so defense from inside</font>

577
00:22:48,320 --> 00:22:51,320
the application it's got a lot more

578
00:22:49,610 --> 00:22:53,810
context a<font color="#E5E5E5"> lot more</font><font color="#CCCCCC"> information it can</font><font color="#E5E5E5"> be</font>

579
00:22:51,320 --> 00:22:55,790
more accurate now<font color="#E5E5E5"> I asked works</font>

580
00:22:53,810 --> 00:22:57,770
similarly<font color="#E5E5E5"> and this is a little bit more</font>

581
00:22:55,790 --> 00:22:59,000
<font color="#CCCCCC">tricky to get your head around</font><font color="#E5E5E5"> so now</font>

582
00:22:57,770 --> 00:23:02,620
what should<font color="#E5E5E5"> imagine that there's just a</font>

583
00:22:59,000 --> 00:23:05,060
developer just<font color="#E5E5E5"> writing their code and</font>

584
00:23:02,620 --> 00:23:06,409
they don't they<font color="#CCCCCC"> don't know how</font><font color="#E5E5E5"> to attack</font>

585
00:23:05,060 --> 00:23:07,790
the application<font color="#E5E5E5"> because they're not</font>

586
00:23:06,410 --> 00:23:09,260
security experts they don't know<font color="#CCCCCC"> about</font>

587
00:23:07,790 --> 00:23:11,540
single tick or one equals one

588
00:23:09,260 --> 00:23:13,000
they just type in normal data like they

589
00:23:11,540 --> 00:23:15,860
might type in the word Jeff

590
00:23:13,000 --> 00:23:18,260
well I asked<font color="#E5E5E5"> can track that data like</font>

591
00:23:15,860 --> 00:23:20,479
<font color="#CCCCCC">taint tracing and track that data</font>

592
00:23:18,260 --> 00:23:23,900
<font color="#E5E5E5">through to where it lands in a sequel</font>

593
00:23:20,480 --> 00:23:26,300
query and then<font color="#E5E5E5"> the I asked can look back</font>

594
00:23:23,900 --> 00:23:28,190
<font color="#CCCCCC">across</font><font color="#E5E5E5"> that data's history and say hey</font>

595
00:23:26,300 --> 00:23:30,050
was this data ever escaped or

596
00:23:28,190 --> 00:23:32,660
parameterised<font color="#CCCCCC"> in a way that would</font><font color="#E5E5E5"> have</font>

597
00:23:30,050 --> 00:23:35,360
stopped sequel<font color="#E5E5E5"> injection and if it</font>

598
00:23:32,660 --> 00:23:37,040
hasn't<font color="#CCCCCC"> been</font><font color="#E5E5E5"> protected then we know that</font>

599
00:23:35,360 --> 00:23:39,169
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> an exploitable path through the</font>

600
00:23:37,040 --> 00:23:41,149
application it's a way to get<font color="#E5E5E5"> data</font><font color="#CCCCCC"> to</font>

601
00:23:39,170 --> 00:23:43,160
into a query<font color="#E5E5E5"> and there's no defenses on</font>

602
00:23:41,150 --> 00:23:46,880
that path<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you can very accurately</font>

603
00:23:43,160 --> 00:23:49,460
<font color="#E5E5E5">identify vulnerabilities in applications</font>

604
00:23:46,880 --> 00:23:51,860
this way<font color="#CCCCCC"> too and again we didn't have to</font>

605
00:23:49,460 --> 00:23:57,530
be experts<font color="#E5E5E5"> in security here anybody can</font>

606
00:23:51,860 --> 00:23:59,030
do this<font color="#CCCCCC"> any</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> want make sure everybody's</font>

607
00:23:57,530 --> 00:24:02,030
with me every everybody<font color="#E5E5E5"> understanding I</font>

608
00:23:59,030 --> 00:24:03,649
asked and raspier so we've instrumented

609
00:24:02,030 --> 00:24:07,129
<font color="#CCCCCC">this security directly into the</font>

610
00:24:03,650 --> 00:24:08,600
application<font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> going to do now is</font>

611
00:24:07,130 --> 00:24:12,050
we're to<font color="#E5E5E5"> look at how can we use those</font>

612
00:24:08,600 --> 00:24:14,959
technologies<font color="#CCCCCC"> to create a full dev</font><font color="#E5E5E5"> sec</font>

613
00:24:12,050 --> 00:24:17,389
ops pipeline<font color="#E5E5E5"> so this is a pipeline for</font>

614
00:24:14,960 --> 00:24:21,080
<font color="#CCCCCC">Springpad</font><font color="#E5E5E5"> clinic and it's pretty simple</font>

615
00:24:17,390 --> 00:24:21,860
<font color="#E5E5E5">it's you know the codes and github will</font>

616
00:24:21,080 --> 00:24:24,860
use norm

617
00:24:21,860 --> 00:24:27,189
development tools<font color="#E5E5E5"> like eclipse and slack</font>

618
00:24:24,860 --> 00:24:29,240
and so on in our development<font color="#E5E5E5"> environment</font>

619
00:24:27,190 --> 00:24:31,520
<font color="#CCCCCC">we'll build it with Jenkins</font>

620
00:24:29,240 --> 00:24:32,780
we've got bug trackers and sonar cube

621
00:24:31,520 --> 00:24:34,879
and stuff like that

622
00:24:32,780 --> 00:24:37,220
we'll use<font color="#E5E5E5"> some testing</font><font color="#CCCCCC"> with selenium</font><font color="#E5E5E5"> and</font>

623
00:24:34,880 --> 00:24:39,530
things like<font color="#CCCCCC"> that and then we'll push</font>

624
00:24:37,220 --> 00:24:42,620
this<font color="#E5E5E5"> into pivotal</font><font color="#CCCCCC"> Cloud Foundry to run</font>

625
00:24:39,530 --> 00:24:44,389
and we're using<font color="#E5E5E5"> you know typical sim we</font>

626
00:24:42,620 --> 00:24:47,840
use<font color="#CCCCCC"> Splunk and so on in that environment</font>

627
00:24:44,390 --> 00:24:49,309
<font color="#CCCCCC">so this is our our pipeline and we want</font>

628
00:24:47,840 --> 00:24:51,199
to add security<font color="#E5E5E5"> to this so what we're</font>

629
00:24:49,309 --> 00:24:53,750
<font color="#E5E5E5">gonna do is we're gonna add I asked in</font>

630
00:24:51,200 --> 00:24:55,640
the<font color="#E5E5E5"> development environment this will</font>

631
00:24:53,750 --> 00:24:57,590
give us<font color="#CCCCCC"> visibility into vulnerabilities</font>

632
00:24:55,640 --> 00:25:01,940
instantly as we're<font color="#E5E5E5"> just writing our code</font>

633
00:24:57,590 --> 00:25:03,590
<font color="#E5E5E5">into our normal job then in the</font><font color="#CCCCCC"> CIC the</font>

634
00:25:01,940 --> 00:25:06,080
environment we're gonna add both<font color="#E5E5E5"> I asked</font>

635
00:25:03,590 --> 00:25:07,399
and rasp<font color="#CCCCCC"> and I asked as easy to</font>

636
00:25:06,080 --> 00:25:09,080
<font color="#E5E5E5">understand we want to know if there's</font>

637
00:25:07,400 --> 00:25:11,120
any vulnerabilities<font color="#CCCCCC"> that somehow snuck</font>

638
00:25:09,080 --> 00:25:13,879
out of<font color="#E5E5E5"> development and made it into the</font>

639
00:25:11,120 --> 00:25:15,770
QA environment but<font color="#CCCCCC"> we'll also</font><font color="#E5E5E5"> run</font>

640
00:25:13,880 --> 00:25:17,840
<font color="#CCCCCC">raspier because we want to</font><font color="#E5E5E5"> make sure</font>

641
00:25:15,770 --> 00:25:19,760
<font color="#E5E5E5">that</font><font color="#CCCCCC"> we've fully tested our application</font>

642
00:25:17,840 --> 00:25:23,178
with all<font color="#E5E5E5"> the defenses turned on and then</font>

643
00:25:19,760 --> 00:25:24,679
we deploy exactly what we tested<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font>

644
00:25:23,179 --> 00:25:26,360
this<font color="#E5E5E5"> is a way to get great confidence</font>

645
00:25:24,679 --> 00:25:29,210
<font color="#CCCCCC">that you know security</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> in place</font><font color="#E5E5E5"> and</font>

646
00:25:26,360 --> 00:25:31,760
<font color="#CCCCCC">working and then in production</font><font color="#E5E5E5"> will one</font>

647
00:25:29,210 --> 00:25:36,200
run with<font color="#E5E5E5"> Rassman places will have attack</font>

648
00:25:31,760 --> 00:25:39,020
detection and<font color="#CCCCCC"> prevention in in</font>

649
00:25:36,200 --> 00:25:41,150
production<font color="#E5E5E5"> and the good news is this</font><font color="#CCCCCC"> is</font>

650
00:25:39,020 --> 00:25:42,679
really<font color="#CCCCCC"> easy</font><font color="#E5E5E5"> anyone can do this pretty</font>

651
00:25:41,150 --> 00:25:45,380
quickly<font color="#E5E5E5"> so I'm going to demonstrate this</font>

652
00:25:42,679 --> 00:25:46,880
<font color="#E5E5E5">this is the demo portion so I've got</font>

653
00:25:45,380 --> 00:25:49,820
<font color="#E5E5E5">three screens here I've got a</font>

654
00:25:46,880 --> 00:25:51,290
<font color="#E5E5E5">development environment</font><font color="#CCCCCC"> conveniently</font>

655
00:25:49,820 --> 00:25:54,620
labeled with the<font color="#E5E5E5"> word development at the</font>

656
00:25:51,290 --> 00:25:56,840
top<font color="#CCCCCC"> I</font><font color="#E5E5E5"> got</font><font color="#CCCCCC"> to see I see</font><font color="#E5E5E5"> the environments</font>

657
00:25:54,620 --> 00:25:58,280
and I've got a production environment so

658
00:25:56,840 --> 00:25:59,540
just so people<font color="#CCCCCC"> don't get confused</font><font color="#E5E5E5"> I</font>

659
00:25:58,280 --> 00:26:01,178
switch environments back and forth a

660
00:25:59,540 --> 00:26:03,980
<font color="#CCCCCC">little bit so that's that's</font><font color="#E5E5E5"> your</font>

661
00:26:01,179 --> 00:26:06,320
<font color="#CCCCCC">bird-watching</font><font color="#E5E5E5"> guide so here I've got an</font>

662
00:26:03,980 --> 00:26:09,650
<font color="#CCCCCC">application the spring pet clinic</font><font color="#E5E5E5"> app in</font>

663
00:26:06,320 --> 00:26:12,409
Eclipse<font color="#E5E5E5"> and I want to get started so I'm</font>

664
00:26:09,650 --> 00:26:14,990
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> add I asked to this environment</font><font color="#CCCCCC"> so</font>

665
00:26:12,410 --> 00:26:18,590
the first step is to go download<font color="#E5E5E5"> an</font><font color="#CCCCCC"> eye</font>

666
00:26:14,990 --> 00:26:22,220
<font color="#CCCCCC">Astin rasp</font><font color="#E5E5E5"> agent I'm</font><font color="#CCCCCC"> gonna use the one</font>

667
00:26:18,590 --> 00:26:24,590
<font color="#CCCCCC">from</font><font color="#E5E5E5"> my</font><font color="#CCCCCC"> company</font><font color="#E5E5E5"> contrast</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font>

668
00:26:22,220 --> 00:26:26,150
contrast<font color="#E5E5E5"> Community Edition it's free</font><font color="#CCCCCC"> and</font>

669
00:26:24,590 --> 00:26:26,629
full strength for anybody who<font color="#E5E5E5"> wants to</font>

670
00:26:26,150 --> 00:26:30,200
<font color="#E5E5E5">try this</font>

671
00:26:26,630 --> 00:26:32,480
so that's but<font color="#E5E5E5"> you could use other</font><font color="#CCCCCC"> eye a</font>

672
00:26:30,200 --> 00:26:36,080
<font color="#CCCCCC">sand rasp agents here as well</font>

673
00:26:32,480 --> 00:26:38,180
and the first step is to add<font color="#CCCCCC"> the agent</font>

674
00:26:36,080 --> 00:26:42,020
to the environment<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I've downloaded</font>

675
00:26:38,180 --> 00:26:43,790
<font color="#E5E5E5">this contrast jar file</font><font color="#CCCCCC"> and I've added it</font>

676
00:26:42,020 --> 00:26:45,379
<font color="#CCCCCC">to my project</font><font color="#E5E5E5"> here and I just need to</font>

677
00:26:43,790 --> 00:26:47,990
configure<font color="#E5E5E5"> it so that when we run this</font>

678
00:26:45,380 --> 00:26:49,970
application<font color="#E5E5E5"> contrast runs along with</font><font color="#CCCCCC"> it</font>

679
00:26:47,990 --> 00:26:52,610
<font color="#E5E5E5">so in this case this is</font><font color="#CCCCCC"> a spring</font><font color="#E5E5E5"> boot</font>

680
00:26:49,970 --> 00:26:54,530
application so we can add it<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the palm</font>

681
00:26:52,610 --> 00:26:56,689
this way so that every<font color="#CCCCCC"> time we launch</font>

682
00:26:54,530 --> 00:26:59,210
with spring boot we're gonna add this

683
00:26:56,690 --> 00:27:01,970
Java agent flag<font color="#E5E5E5"> to the way the</font>

684
00:26:59,210 --> 00:27:04,520
<font color="#CCCCCC">application runs now Java agent flag is</font>

685
00:27:01,970 --> 00:27:06,860
pretty standard<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> exactly the way</font>

686
00:27:04,520 --> 00:27:09,110
that<font color="#CCCCCC"> you add tools like New Relic</font><font color="#E5E5E5"> and</font>

687
00:27:06,860 --> 00:27:10,820
<font color="#E5E5E5">AppDynamics</font><font color="#CCCCCC"> to applications on the</font>

688
00:27:09,110 --> 00:27:13,129
performance<font color="#E5E5E5"> side we're just doing</font>

689
00:27:10,820 --> 00:27:16,340
<font color="#CCCCCC">exactly that</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> thing for security</font>

690
00:27:13,130 --> 00:27:18,470
here so we add<font color="#E5E5E5"> this agent and a couple</font>

691
00:27:16,340 --> 00:27:21,709
other configuration options here and

692
00:27:18,470 --> 00:27:27,700
<font color="#E5E5E5">then I'm just</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> run this application</font>

693
00:27:21,710 --> 00:27:30,560
normally so as the application starts<font color="#E5E5E5"> up</font>

694
00:27:27,700 --> 00:27:32,360
this I asked agent<font color="#E5E5E5"> is in the background</font>

695
00:27:30,560 --> 00:27:34,250
it's<font color="#E5E5E5"> instrumenting the code as</font><font color="#CCCCCC"> it loads</font>

696
00:27:32,360 --> 00:27:36,050
so when it runs<font color="#E5E5E5"> in memory it's now</font>

697
00:27:34,250 --> 00:27:37,610
instrumented for security<font color="#E5E5E5"> and everything</font>

698
00:27:36,050 --> 00:27:40,040
<font color="#E5E5E5">happens automatically in the background</font>

699
00:27:37,610 --> 00:27:42,409
it'll just start testing<font color="#CCCCCC"> itself like</font>

700
00:27:40,040 --> 00:27:46,129
once I do this<font color="#E5E5E5"> this application is now</font>

701
00:27:42,410 --> 00:27:47,300
protected<font color="#E5E5E5"> from this point forward</font><font color="#CCCCCC"> and</font>

702
00:27:46,130 --> 00:27:49,070
you don't have<font color="#E5E5E5"> to change anything about</font>

703
00:27:47,300 --> 00:27:56,060
<font color="#CCCCCC">the</font><font color="#E5E5E5"> way you build</font><font color="#CCCCCC"> test or deploy your</font>

704
00:27:49,070 --> 00:28:00,830
<font color="#CCCCCC">code here to do this so applications now</font>

705
00:27:56,060 --> 00:28:01,940
start<font color="#E5E5E5"> it up so this is the first time</font>

706
00:28:00,830 --> 00:28:04,850
<font color="#CCCCCC">that I've brought</font><font color="#E5E5E5"> this application</font>

707
00:28:01,940 --> 00:28:06,620
<font color="#E5E5E5">online</font><font color="#CCCCCC"> so I'm just kind of starting</font>

708
00:28:04,850 --> 00:28:09,409
<font color="#CCCCCC">fresh here</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can see I actually</font>

709
00:28:06,620 --> 00:28:10,429
<font color="#E5E5E5">have</font><font color="#CCCCCC"> a contrast plug-in</font><font color="#E5E5E5"> in the IDE</font><font color="#CCCCCC"> and</font>

710
00:28:09,410 --> 00:28:13,790
you can see there's no vulnerabilities

711
00:28:10,430 --> 00:28:15,370
here yet<font color="#E5E5E5"> so all I have to do is browse</font>

712
00:28:13,790 --> 00:28:20,690
around<font color="#E5E5E5"> and just use this application</font>

713
00:28:15,370 --> 00:28:22,550
normally so I'll put last con here and

714
00:28:20,690 --> 00:28:25,040
you can see you'll see slack<font color="#E5E5E5"> alerts</font>

715
00:28:22,550 --> 00:28:26,570
start coming in for vulnerabilities as

716
00:28:25,040 --> 00:28:28,790
we use this<font color="#CCCCCC"> application so I'm just</font>

717
00:28:26,570 --> 00:28:30,800
<font color="#E5E5E5">going to put in some normal data here</font>

718
00:28:28,790 --> 00:28:31,420
<font color="#E5E5E5">and again this is a lot</font><font color="#CCCCCC"> different than</font>

719
00:28:30,800 --> 00:28:35,700
you know<font color="#E5E5E5"> how</font>

720
00:28:31,420 --> 00:28:35,700
<font color="#E5E5E5">to have a pen tester</font><font color="#CCCCCC"> - to do this</font>

721
00:28:36,780 --> 00:28:40,629
<font color="#E5E5E5">because you don't need to know anything</font>

722
00:28:39,130 --> 00:28:45,220
about security<font color="#E5E5E5"> ultimately that's really</font>

723
00:28:40,630 --> 00:28:48,220
the key is if your tool requires any

724
00:28:45,220 --> 00:28:49,510
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> security expertise then you</font>

725
00:28:48,220 --> 00:28:51,550
can't<font color="#CCCCCC"> really give it to developers we</font>

726
00:28:49,510 --> 00:28:54,310
need tools for novice<font color="#E5E5E5"> software</font>

727
00:28:51,550 --> 00:28:57,100
developers so<font color="#CCCCCC"> that novice developers can</font>

728
00:28:54,310 --> 00:28:59,770
<font color="#CCCCCC">write and commit clean code otherwise</font><font color="#E5E5E5"> it</font>

729
00:28:57,100 --> 00:29:02,560
just won't<font color="#E5E5E5"> scale so look I'm just adding</font>

730
00:28:59,770 --> 00:29:06,060
<font color="#E5E5E5">a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> little little fields here</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> to</font>

731
00:29:02,560 --> 00:29:06,060
make sure<font color="#CCCCCC"> we get some</font><font color="#E5E5E5"> coverage data and</font>

732
00:29:06,210 --> 00:29:09,640
you<font color="#E5E5E5"> know click on a couple</font><font color="#CCCCCC"> links all you</font>

733
00:29:08,710 --> 00:29:12,880
have to do is just<font color="#E5E5E5"> use this</font>

734
00:29:09,640 --> 00:29:14,740
functionality<font color="#E5E5E5"> than normal way and is</font><font color="#CCCCCC"> in</font>

735
00:29:12,880 --> 00:29:17,800
the<font color="#E5E5E5"> background doing the testing so now</font>

736
00:29:14,740 --> 00:29:19,260
if i refresh<font color="#E5E5E5"> this contrast has already</font>

737
00:29:17,800 --> 00:29:22,389
identified<font color="#CCCCCC"> a bunch</font><font color="#E5E5E5"> of interesting</font>

738
00:29:19,260 --> 00:29:25,390
vulnerabilities and that that's what I

739
00:29:22,390 --> 00:29:27,790
asked can do<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it's directly</font>

740
00:29:25,390 --> 00:29:30,040
<font color="#E5E5E5">measuring the running application much</font>

741
00:29:27,790 --> 00:29:32,460
more accurate<font color="#CCCCCC"> than traditional tools</font>

742
00:29:30,040 --> 00:29:35,320
like SAST and DAST<font color="#CCCCCC"> so here you can see</font>

743
00:29:32,460 --> 00:29:36,760
<font color="#E5E5E5">found a hibernate injection some</font>

744
00:29:35,320 --> 00:29:39,520
cross-site request forgery on three

745
00:29:36,760 --> 00:29:40,870
pages stored cross-site scripting by the

746
00:29:39,520 --> 00:29:43,360
restored cross-site scripting<font color="#E5E5E5"> is really</font>

747
00:29:40,870 --> 00:29:45,129
tricky<font color="#CCCCCC"> to find</font><font color="#E5E5E5"> because you know for</font>

748
00:29:43,360 --> 00:29:48,070
traditional tools it's one thread that

749
00:29:45,130 --> 00:29:49,540
<font color="#CCCCCC">puts the the</font><font color="#E5E5E5"> untrusted</font><font color="#CCCCCC"> data in the</font>

750
00:29:48,070 --> 00:29:51,730
database<font color="#CCCCCC"> and another thread that pulls</font>

751
00:29:49,540 --> 00:29:54,070
it out and renders<font color="#CCCCCC"> it so the tools can't</font>

752
00:29:51,730 --> 00:29:55,600
connect those things<font color="#CCCCCC"> but</font><font color="#E5E5E5"> because it's</font>

753
00:29:54,070 --> 00:29:58,000
we're running inside the<font color="#CCCCCC"> app it's easy</font>

754
00:29:55,600 --> 00:30:00,010
for tools like I asked to see hard-coded

755
00:29:58,000 --> 00:30:01,960
password parameter pollution and and

756
00:30:00,010 --> 00:30:06,610
notice here this<font color="#CCCCCC"> is a range of different</font>

757
00:30:01,960 --> 00:30:08,050
<font color="#CCCCCC">kinds of</font><font color="#E5E5E5"> vulnerabilities</font><font color="#CCCCCC"> - tools are</font>

758
00:30:06,610 --> 00:30:11,290
good at<font color="#E5E5E5"> finding things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are obvious</font>

759
00:30:08,050 --> 00:30:13,720
in HTTP traffic right things like<font color="#CCCCCC"> prayin</font>

760
00:30:11,290 --> 00:30:16,780
<font color="#E5E5E5">or pollution and failure</font><font color="#CCCCCC"> DS</font><font color="#E5E5E5"> autocomplete</font>

761
00:30:13,720 --> 00:30:18,220
<font color="#E5E5E5">and you know you didn't use X frame</font>

762
00:30:16,780 --> 00:30:21,460
options to stop clickjacking stuff like

763
00:30:18,220 --> 00:30:24,280
that<font color="#E5E5E5"> obvious</font><font color="#CCCCCC"> - a - tool but very</font>

764
00:30:21,460 --> 00:30:25,660
<font color="#CCCCCC">difficult for a sass tool to find</font><font color="#E5E5E5"> sass</font>

765
00:30:24,280 --> 00:30:27,820
tools on the other hand are good at

766
00:30:25,660 --> 00:30:29,380
things like<font color="#CCCCCC"> hard-coded passwords weak</font>

767
00:30:27,820 --> 00:30:31,510
encryption algorithm those are obvious

768
00:30:29,380 --> 00:30:35,890
in<font color="#E5E5E5"> the code so that's the place to</font><font color="#CCCCCC"> look</font>

769
00:30:31,510 --> 00:30:38,440
for<font color="#E5E5E5"> those and really none</font><font color="#CCCCCC"> of those tools</font>

770
00:30:35,890 --> 00:30:39,880
<font color="#E5E5E5">are very good at data flow problems data</font>

771
00:30:38,440 --> 00:30:43,130
flow problems like all the injections

772
00:30:39,880 --> 00:30:45,480
sequel injection cross-site scripting

773
00:30:43,130 --> 00:30:47,250
XPath injection LDAP injection<font color="#E5E5E5"> command</font>

774
00:30:45,480 --> 00:30:49,980
injection<font color="#E5E5E5"> is serious object ever</font>

775
00:30:47,250 --> 00:30:52,050
everything<font color="#E5E5E5"> like that and so we need a</font>

776
00:30:49,980 --> 00:30:53,970
<font color="#E5E5E5">different solution to try to do</font><font color="#CCCCCC"> dataflow</font>

777
00:30:52,050 --> 00:30:56,850
analysis and all three<font color="#E5E5E5"> of these</font><font color="#CCCCCC"> things</font>

778
00:30:53,970 --> 00:30:58,710
are built inside the<font color="#CCCCCC"> I asked technology</font>

779
00:30:56,850 --> 00:31:01,860
<font color="#E5E5E5">so we get all different views</font><font color="#CCCCCC"> of the</font>

780
00:30:58,710 --> 00:31:03,780
application<font color="#E5E5E5"> so here you know let's drill</font>

781
00:31:01,860 --> 00:31:06,379
down<font color="#CCCCCC"> into one of these</font><font color="#E5E5E5"> vulnerabilities</font>

782
00:31:03,780 --> 00:31:11,160
<font color="#E5E5E5">so when I open up this hibernate</font>

783
00:31:06,380 --> 00:31:12,420
injection<font color="#CCCCCC"> we get the details and I'm</font>

784
00:31:11,160 --> 00:31:14,250
<font color="#E5E5E5">gonna zoom in maybe this will work</font>

785
00:31:12,420 --> 00:31:15,350
sometimes I can I can scroll in does

786
00:31:14,250 --> 00:31:18,330
<font color="#E5E5E5">that scroll</font>

787
00:31:15,350 --> 00:31:21,120
<font color="#CCCCCC">okay so this</font><font color="#E5E5E5"> tells a</font><font color="#CCCCCC"> little story about</font>

788
00:31:18,330 --> 00:31:24,689
<font color="#CCCCCC">what the I asked</font><font color="#E5E5E5"> engine was able to see</font>

789
00:31:21,120 --> 00:31:26,699
it says here's some of the HTTP requests

790
00:31:24,690 --> 00:31:28,440
we saw some untrusted data come in in

791
00:31:26,700 --> 00:31:31,110
this last name parameter<font color="#E5E5E5"> and when I</font>

792
00:31:28,440 --> 00:31:33,810
typed in last<font color="#E5E5E5"> con and that data was</font>

793
00:31:31,110 --> 00:31:36,090
accessed<font color="#E5E5E5"> on</font><font color="#CCCCCC"> you know this method and</font>

794
00:31:33,810 --> 00:31:41,190
<font color="#E5E5E5">this line of code and it ended up in</font>

795
00:31:36,090 --> 00:31:42,810
this hibernate query without going

796
00:31:41,190 --> 00:31:44,880
through<font color="#E5E5E5"> any kind of escaping or</font>

797
00:31:42,810 --> 00:31:47,280
<font color="#E5E5E5">parameterization if it had been escaped</font>

798
00:31:44,880 --> 00:31:48,570
<font color="#E5E5E5">or parameterize somehow the</font><font color="#CCCCCC"> iast engine</font>

799
00:31:47,280 --> 00:31:53,090
would have seen it and it<font color="#E5E5E5"> wouldn't have</font>

800
00:31:48,570 --> 00:31:55,560
reported this vulnerability<font color="#E5E5E5"> so this is</font>

801
00:31:53,090 --> 00:31:57,659
really<font color="#E5E5E5"> good proof that this is a real</font>

802
00:31:55,560 --> 00:31:59,129
exploitable vulnerability because we

803
00:31:57,660 --> 00:32:01,230
<font color="#CCCCCC">saved you</font><font color="#E5E5E5"> can actually see it you can</font>

804
00:31:59,130 --> 00:32:02,970
<font color="#E5E5E5">see the data flow through now</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> you know</font>

805
00:32:01,230 --> 00:32:05,280
<font color="#CCCCCC">add a stool</font><font color="#E5E5E5"> would only show you the top</font>

806
00:32:02,970 --> 00:32:06,780
line up there<font color="#E5E5E5"> a static tool would only</font>

807
00:32:05,280 --> 00:32:08,040
show you you know kind<font color="#CCCCCC"> of the method of</font>

808
00:32:06,780 --> 00:32:10,830
<font color="#E5E5E5">the line of code which you have no idea</font>

809
00:32:08,040 --> 00:32:12,060
how to test it<font color="#CCCCCC"> and the last</font><font color="#E5E5E5"> line here is</font>

810
00:32:10,830 --> 00:32:15,149
no<font color="#CCCCCC"> other tool can really show you that</font>

811
00:32:12,060 --> 00:32:17,550
full query with the actual data in it so

812
00:32:15,150 --> 00:32:23,370
this<font color="#E5E5E5"> is much richer</font><font color="#CCCCCC"> kind of finding than</font>

813
00:32:17,550 --> 00:32:24,960
other tools provide and of course<font color="#E5E5E5"> you</font>

814
00:32:23,370 --> 00:32:28,050
know the tools provide things like<font color="#CCCCCC"> the</font>

815
00:32:24,960 --> 00:32:30,660
<font color="#CCCCCC">details on</font><font color="#E5E5E5"> how to fix it</font><font color="#CCCCCC"> the full HTTP</font>

816
00:32:28,050 --> 00:32:32,129
<font color="#CCCCCC">request</font><font color="#E5E5E5"> so you have a test case that you</font>

817
00:32:30,660 --> 00:32:34,560
can use to verify<font color="#E5E5E5"> that you fixed it</font>

818
00:32:32,130 --> 00:32:36,750
correctly<font color="#E5E5E5"> and then this events tab I</font>

819
00:32:34,560 --> 00:32:39,330
<font color="#E5E5E5">think is</font><font color="#CCCCCC"> interesting this shows the the</font>

820
00:32:36,750 --> 00:32:41,490
full path through the application for

821
00:32:39,330 --> 00:32:43,439
this vulnerability<font color="#CCCCCC"> this shows you know</font>

822
00:32:41,490 --> 00:32:45,870
where the data was read in and this<font color="#E5E5E5"> get</font>

823
00:32:43,440 --> 00:32:47,960
<font color="#E5E5E5">parameter values method</font><font color="#CCCCCC"> the full stack</font>

824
00:32:45,870 --> 00:32:51,120
trace for that and all the runtime<font color="#CCCCCC"> State</font>

825
00:32:47,960 --> 00:32:53,430
<font color="#E5E5E5">at the end the last step is the you know</font>

826
00:32:51,120 --> 00:32:54,300
the actual create query<font color="#E5E5E5"> call that went</font>

827
00:32:53,430 --> 00:32:56,040
to the data

828
00:32:54,300 --> 00:32:58,409
and in between<font color="#E5E5E5"> there's a bunch of string</font>

829
00:32:56,040 --> 00:33:00,600
operations<font color="#E5E5E5"> here any of these you</font><font color="#CCCCCC"> can</font>

830
00:32:58,410 --> 00:33:03,090
<font color="#E5E5E5">double click on and</font><font color="#CCCCCC"> go right to the line</font>

831
00:33:00,600 --> 00:33:04,639
of code where<font color="#CCCCCC"> the problem is so in this</font>

832
00:33:03,090 --> 00:33:07,350
case you can see this is<font color="#E5E5E5"> where this can</font>

833
00:33:04,640 --> 00:33:09,000
<font color="#E5E5E5">concatenated query got built and where</font>

834
00:33:07,350 --> 00:33:11,850
the developer would make the fix

835
00:33:09,000 --> 00:33:14,250
okay so again<font color="#E5E5E5"> anybody can use this that</font>

836
00:33:11,850 --> 00:33:16,230
<font color="#E5E5E5">the goal here is</font><font color="#CCCCCC"> that I asked is usable</font>

837
00:33:14,250 --> 00:33:18,450
by any novice developer<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'll tell</font>

838
00:33:16,230 --> 00:33:20,760
you story about my<font color="#CCCCCC"> son he's in high</font>

839
00:33:18,450 --> 00:33:22,080
school he's building<font color="#E5E5E5"> he's</font><font color="#CCCCCC"> in a</font>

840
00:33:20,760 --> 00:33:24,330
programming<font color="#E5E5E5"> class and so he built his</font>

841
00:33:22,080 --> 00:33:27,090
first Java EE application<font color="#CCCCCC"> this for his</font>

842
00:33:24,330 --> 00:33:28,949
school's Writing Center<font color="#E5E5E5"> and he came to</font>

843
00:33:27,090 --> 00:33:32,909
<font color="#CCCCCC">me and said hey</font><font color="#E5E5E5"> it's ready I want to put</font>

844
00:33:28,950 --> 00:33:33,780
it on<font color="#CCCCCC"> online</font><font color="#E5E5E5"> I was like whoa let's just</font>

845
00:33:32,910 --> 00:33:37,080
check it<font color="#CCCCCC"> out first</font>

846
00:33:33,780 --> 00:33:38,639
go you know<font color="#E5E5E5"> grab a copy contrast and</font><font color="#CCCCCC"> and</font>

847
00:33:37,080 --> 00:33:40,470
run it and see<font color="#CCCCCC"> what</font><font color="#E5E5E5"> happens he came back</font>

848
00:33:38,640 --> 00:33:43,140
like half an hour<font color="#E5E5E5"> later he goes well</font>

849
00:33:40,470 --> 00:33:45,600
dude I had<font color="#CCCCCC"> four cross-site scripting x'</font>

850
00:33:43,140 --> 00:33:49,050
<font color="#CCCCCC">and two sequel injections</font><font color="#E5E5E5"> he talks like</font>

851
00:33:45,600 --> 00:33:53,030
that<font color="#E5E5E5"> because easy team sure</font><font color="#CCCCCC"> and I was</font>

852
00:33:49,050 --> 00:33:56,790
like<font color="#CCCCCC"> all son</font><font color="#E5E5E5"> that's okay it happens and</font>

853
00:33:53,030 --> 00:33:58,770
<font color="#E5E5E5">he's</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> okay I fixed it</font><font color="#CCCCCC"> like</font>

854
00:33:56,790 --> 00:34:00,629
that's exactly what we<font color="#CCCCCC"> need is novice</font>

855
00:33:58,770 --> 00:34:03,120
developers you<font color="#CCCCCC"> can find and fix their</font>

856
00:34:00,630 --> 00:34:05,100
own vulnerabilities<font color="#E5E5E5"> check in clean code</font>

857
00:34:03,120 --> 00:34:09,029
<font color="#E5E5E5">that's the key</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> getting this right</font><font color="#CCCCCC"> in</font>

858
00:34:05,100 --> 00:34:11,129
development<font color="#E5E5E5"> okay so I think</font><font color="#CCCCCC"> it's</font>

859
00:34:09,030 --> 00:34:12,480
important<font color="#CCCCCC"> to get this data to the</font>

860
00:34:11,129 --> 00:34:14,520
developers through<font color="#E5E5E5"> the tools they're</font>

861
00:34:12,480 --> 00:34:16,139
already<font color="#E5E5E5"> using I think slack is a good</font>

862
00:34:14,520 --> 00:34:19,080
vehicle for<font color="#E5E5E5"> this you can see</font><font color="#CCCCCC"> here's some</font>

863
00:34:16,139 --> 00:34:21,030
<font color="#CCCCCC">of the vulnerabilities we just found in</font>

864
00:34:19,080 --> 00:34:25,020
slack with all the do here's the<font color="#CCCCCC"> store</font>

865
00:34:21,030 --> 00:34:26,550
<font color="#E5E5E5">cross-site scripting information and so</font>

866
00:34:25,020 --> 00:34:29,520
that's that's a nice vehicle<font color="#E5E5E5"> to alert a</font>

867
00:34:26,550 --> 00:34:32,790
team about<font color="#E5E5E5"> a new vulnerability there's</font>

868
00:34:29,520 --> 00:34:36,149
also a way<font color="#CCCCCC"> of doing</font><font color="#E5E5E5"> this through you</font>

869
00:34:32,790 --> 00:34:37,889
know right through the the<font color="#CCCCCC"> browser</font><font color="#E5E5E5"> which</font>

870
00:34:36,149 --> 00:34:39,388
i<font color="#E5E5E5"> think is kind of interesting</font><font color="#CCCCCC"> this case</font>

871
00:34:37,889 --> 00:34:42,960
<font color="#E5E5E5">this is that page</font><font color="#CCCCCC"> that was vulnerable</font>

872
00:34:39,389 --> 00:34:45,120
<font color="#E5E5E5">and you can get a browser</font><font color="#CCCCCC"> plug-in here</font>

873
00:34:42,960 --> 00:34:46,560
to pull down and this will show<font color="#CCCCCC"> you just</font>

874
00:34:45,120 --> 00:34:49,319
<font color="#E5E5E5">the vulnerabilities associated with this</font>

875
00:34:46,560 --> 00:34:50,429
page<font color="#CCCCCC"> so I think that's</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> powerful</font>

876
00:34:49,320 --> 00:34:52,050
like this is the page<font color="#CCCCCC"> where that</font>

877
00:34:50,429 --> 00:34:53,490
hibernate injection<font color="#E5E5E5"> so this is a nice</font>

878
00:34:52,050 --> 00:34:56,520
way to communicate with development

879
00:34:53,489 --> 00:34:58,410
teams<font color="#E5E5E5"> is to show right in their UI that</font>

880
00:34:56,520 --> 00:35:00,750
they're<font color="#CCCCCC"> using all the time where the</font>

881
00:34:58,410 --> 00:35:02,790
<font color="#CCCCCC">vulnerabilities are so this</font><font color="#E5E5E5"> is this is</font>

882
00:35:00,750 --> 00:35:04,410
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> of powerful I'm not</font><font color="#CCCCCC"> gonna spend</font><font color="#E5E5E5"> a</font>

883
00:35:02,790 --> 00:35:05,880
lot<font color="#CCCCCC"> of time on this but if you if you're</font>

884
00:35:04,410 --> 00:35:07,799
<font color="#CCCCCC">interested in</font>

885
00:35:05,880 --> 00:35:10,290
what tools are<font color="#E5E5E5"> good at and what they're</font>

886
00:35:07,800 --> 00:35:13,560
<font color="#E5E5E5">not good at go check out the OS</font>

887
00:35:10,290 --> 00:35:16,980
benchmark project these guys built<font color="#CCCCCC"> 3000</font>

888
00:35:13,560 --> 00:35:20,630
test<font color="#E5E5E5"> cases a few</font><font color="#CCCCCC"> years ago</font><font color="#E5E5E5"> to test what</font>

889
00:35:16,980 --> 00:35:23,520
static and dynamic tools are good at<font color="#E5E5E5"> and</font>

890
00:35:20,630 --> 00:35:25,050
it's not a hard test<font color="#CCCCCC"> it's relatively</font>

891
00:35:23,520 --> 00:35:26,430
easy<font color="#E5E5E5"> that half the test is false</font>

892
00:35:25,050 --> 00:35:28,350
positives half the test<font color="#E5E5E5"> is true</font>

893
00:35:26,430 --> 00:35:30,180
<font color="#E5E5E5">positives and you just you know you can</font>

894
00:35:28,350 --> 00:35:32,670
clone the git repository<font color="#CCCCCC"> run your tool</font>

895
00:35:30,180 --> 00:35:35,160
get the report<font color="#CCCCCC"> feed it back into the</font>

896
00:35:32,670 --> 00:35:36,570
benchmark<font color="#E5E5E5"> and it'll grade that report</font>

897
00:35:35,160 --> 00:35:38,279
for you and tell you<font color="#E5E5E5"> what they got right</font>

898
00:35:36,570 --> 00:35:40,020
<font color="#E5E5E5">and what they got wrong this will tell</font>

899
00:35:38,280 --> 00:35:42,090
you what your tools are good at and<font color="#CCCCCC"> what</font>

900
00:35:40,020 --> 00:35:44,190
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> not good</font><font color="#CCCCCC"> at I do hear people</font>

901
00:35:42,090 --> 00:35:47,520
using<font color="#E5E5E5"> you know tools for security like</font>

902
00:35:44,190 --> 00:35:50,330
you know<font color="#E5E5E5"> find find bugs with security</font>

903
00:35:47,520 --> 00:35:52,560
bugs<font color="#CCCCCC"> the</font><font color="#E5E5E5"> benchmark will tell you exactly</font>

904
00:35:50,330 --> 00:35:54,569
<font color="#E5E5E5">what</font><font color="#CCCCCC"> that tool is</font><font color="#E5E5E5"> good at and what</font><font color="#CCCCCC"> is</font>

905
00:35:52,560 --> 00:35:57,090
not<font color="#CCCCCC"> good at and it's interesting you</font>

906
00:35:54,570 --> 00:36:00,140
know you look at things<font color="#E5E5E5"> like insecure</font>

907
00:35:57,090 --> 00:36:02,430
cookies and weak random numbers awesome

908
00:36:00,140 --> 00:36:03,629
fun bugs<font color="#E5E5E5"> are super at that but when you</font>

909
00:36:02,430 --> 00:36:05,069
<font color="#E5E5E5">get to the harder things like you</font><font color="#CCCCCC"> know</font>

910
00:36:03,630 --> 00:36:07,710
<font color="#E5E5E5">the data flow problems like command</font>

911
00:36:05,070 --> 00:36:08,850
injection and sequel injection and<font color="#E5E5E5"> XPath</font>

912
00:36:07,710 --> 00:36:11,430
injection and things like<font color="#E5E5E5"> that they're</font>

913
00:36:08,850 --> 00:36:13,560
<font color="#E5E5E5">they're way</font><font color="#CCCCCC"> over it's it's barely</font><font color="#E5E5E5"> better</font>

914
00:36:11,430 --> 00:36:15,419
than guessing<font color="#E5E5E5"> and so you know you should</font>

915
00:36:13,560 --> 00:36:17,190
<font color="#E5E5E5">know if you're gonna trust these tools</font>

916
00:36:15,420 --> 00:36:19,770
with the security of your<font color="#E5E5E5"> enterprise you</font>

917
00:36:17,190 --> 00:36:21,180
should know what they're good at<font color="#E5E5E5"> and you</font>

918
00:36:19,770 --> 00:36:23,040
doesn't know there's no<font color="#E5E5E5"> other way to do</font>

919
00:36:21,180 --> 00:36:25,950
this<font color="#E5E5E5"> you can't use webgoat</font><font color="#CCCCCC"> I wrote</font>

920
00:36:23,040 --> 00:36:28,529
<font color="#E5E5E5">webgoat by the way 1999 and if you've</font>

921
00:36:25,950 --> 00:36:31,290
<font color="#E5E5E5">used it</font><font color="#CCCCCC"> you can't use webgoat to test</font><font color="#E5E5E5"> a</font>

922
00:36:28,530 --> 00:36:34,440
security tool<font color="#CCCCCC"> it's got a very narrow set</font>

923
00:36:31,290 --> 00:36:36,029
of vulnerabilities to<font color="#E5E5E5"> test for so you</font>

924
00:36:34,440 --> 00:36:38,010
need to use something<font color="#E5E5E5"> that tests a broad</font>

925
00:36:36,030 --> 00:36:40,920
range of<font color="#E5E5E5"> vulnerabilities and like I said</font>

926
00:36:38,010 --> 00:36:42,450
<font color="#CCCCCC">this is a super easy test</font><font color="#E5E5E5"> if the tools</font>

927
00:36:40,920 --> 00:36:44,070
aren't acing this test they're really it

928
00:36:42,450 --> 00:36:45,299
<font color="#CCCCCC">just doesn't prove that</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> tools</font><font color="#E5E5E5"> never</font>

929
00:36:44,070 --> 00:36:47,430
<font color="#E5E5E5">going to find a false positive</font><font color="#CCCCCC"> or</font>

930
00:36:45,300 --> 00:36:51,180
<font color="#E5E5E5">anything but I asked tends to do very</font>

931
00:36:47,430 --> 00:36:56,310
very<font color="#CCCCCC"> well against this</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so I'm going</font>

932
00:36:51,180 --> 00:36:57,899
to<font color="#E5E5E5"> shift to</font><font color="#CCCCCC"> the the</font><font color="#E5E5E5"> CI CD environment</font>

933
00:36:56,310 --> 00:37:00,270
first what I'm<font color="#CCCCCC"> going to do is I</font><font color="#E5E5E5"> would</font>

934
00:36:57,900 --> 00:37:01,770
say like<font color="#E5E5E5"> browsing the application to</font>

935
00:37:00,270 --> 00:37:03,360
find vulnerabilities that's convenient

936
00:37:01,770 --> 00:37:05,880
for developers<font color="#E5E5E5"> but you also want a</font>

937
00:37:03,360 --> 00:37:07,380
<font color="#E5E5E5">reliable way of checking</font><font color="#CCCCCC"> to make sure</font>

938
00:37:05,880 --> 00:37:08,580
your app<font color="#E5E5E5"> doesn't have</font><font color="#CCCCCC"> vulnerabilities</font>

939
00:37:07,380 --> 00:37:12,030
you want to make sure<font color="#E5E5E5"> you cover</font>

940
00:37:08,580 --> 00:37:13,650
everything<font color="#CCCCCC"> so I asked runs every time</font>

941
00:37:12,030 --> 00:37:16,140
you use<font color="#E5E5E5"> the application</font><font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to run</font>

942
00:37:13,650 --> 00:37:17,970
a set of<font color="#E5E5E5"> test cases here in</font><font color="#CCCCCC"> the</font>

943
00:37:16,140 --> 00:37:20,220
<font color="#E5E5E5">background</font><font color="#CCCCCC"> and it runs with country</font>

944
00:37:17,970 --> 00:37:23,700
actually the configurations in the palm

945
00:37:20,220 --> 00:37:27,029
<font color="#E5E5E5">it this is under the</font><font color="#CCCCCC"> Surefire</font><font color="#E5E5E5"> plugin so</font>

946
00:37:23,700 --> 00:37:29,490
you<font color="#E5E5E5"> just add the the contrast jar here</font>

947
00:37:27,030 --> 00:37:31,680
the same way<font color="#CCCCCC"> I</font><font color="#E5E5E5"> also add jacoco as a code</font>

948
00:37:29,490 --> 00:37:33,629
coverage agent because<font color="#E5E5E5"> you should really</font>

949
00:37:31,680 --> 00:37:35,460
<font color="#E5E5E5">know</font><font color="#CCCCCC"> about code coverage if you're doing</font>

950
00:37:33,630 --> 00:37:36,900
security testing<font color="#E5E5E5"> if you're doing a pen</font>

951
00:37:35,460 --> 00:37:38,460
test or a dynamic scan you should

952
00:37:36,900 --> 00:37:43,080
<font color="#E5E5E5">absolutely have code coverage hooked up</font>

953
00:37:38,460 --> 00:37:44,400
<font color="#CCCCCC">so you know really what</font><font color="#E5E5E5"> you got and you</font>

954
00:37:43,080 --> 00:37:45,660
should<font color="#E5E5E5"> i mean static tools don't tell</font>

955
00:37:44,400 --> 00:37:47,730
you what<font color="#E5E5E5"> they cover and what they miss</font>

956
00:37:45,660 --> 00:37:51,359
but they miss a lot<font color="#CCCCCC"> so it's actually</font>

957
00:37:47,730 --> 00:37:53,910
impossible to<font color="#E5E5E5"> really know but this means</font>

958
00:37:51,359 --> 00:37:57,000
every time I check<font color="#E5E5E5"> in code this these</font>

959
00:37:53,910 --> 00:37:59,940
tests will run and I've got let's see

960
00:37:57,000 --> 00:38:02,250
I've got<font color="#E5E5E5"> Jenkins here and so every time</font>

961
00:37:59,940 --> 00:38:05,520
<font color="#CCCCCC">I run and I'll</font><font color="#E5E5E5"> start a build now every</font>

962
00:38:02,250 --> 00:38:08,670
<font color="#E5E5E5">time I run a build all my test cases run</font>

963
00:38:05,520 --> 00:38:11,220
and I asked<font color="#E5E5E5"> is in the background testing</font>

964
00:38:08,670 --> 00:38:12,570
every<font color="#E5E5E5"> single interaction with the</font>

965
00:38:11,220 --> 00:38:19,919
application<font color="#E5E5E5"> that happens so it's like</font>

966
00:38:12,570 --> 00:38:21,270
<font color="#CCCCCC">getting security</font><font color="#E5E5E5"> testing for free and so</font>

967
00:38:19,920 --> 00:38:24,839
I think security<font color="#E5E5E5"> should</font><font color="#CCCCCC"> be a little bit</font>

968
00:38:21,270 --> 00:38:26,790
more<font color="#E5E5E5"> formal here in in this yes in the</font>

969
00:38:24,839 --> 00:38:28,680
<font color="#CCCCCC">environment</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> a good test that</font>

970
00:38:26,790 --> 00:38:30,210
you checked everything<font color="#E5E5E5"> so I think this</font>

971
00:38:28,680 --> 00:38:32,490
<font color="#E5E5E5">is a good place to automatically create</font>

972
00:38:30,210 --> 00:38:34,170
JIRA tickets<font color="#E5E5E5"> like if you weed out say 80</font>

973
00:38:32,490 --> 00:38:36,390
or<font color="#CCCCCC"> 90%</font><font color="#E5E5E5"> of the vulnerabilities in dev</font>

974
00:38:34,170 --> 00:38:38,609
you're checking<font color="#E5E5E5"> and cleaner code now</font>

975
00:38:36,390 --> 00:38:40,710
when you<font color="#E5E5E5"> find something in QA you create</font>

976
00:38:38,609 --> 00:38:44,098
a ticket<font color="#CCCCCC"> track it make make sure it</font><font color="#E5E5E5"> gets</font>

977
00:38:40,710 --> 00:38:47,250
closed<font color="#E5E5E5"> and they're good integrations</font>

978
00:38:44,099 --> 00:38:48,780
from I asked<font color="#CCCCCC"> right</font><font color="#E5E5E5"> into bug tracking</font>

979
00:38:47,250 --> 00:38:50,460
tools with all the details that<font color="#E5E5E5"> the</font>

980
00:38:48,780 --> 00:38:52,830
developer would need so you know really

981
00:38:50,460 --> 00:38:55,170
the goal here<font color="#CCCCCC"> is developers should never</font>

982
00:38:52,830 --> 00:38:56,970
be looking at your security<font color="#E5E5E5"> tools right</font>

983
00:38:55,170 --> 00:38:58,290
they should get security<font color="#CCCCCC"> information</font>

984
00:38:56,970 --> 00:38:59,399
just like<font color="#CCCCCC"> they get every</font><font color="#E5E5E5"> other bug right</font>

985
00:38:58,290 --> 00:39:01,920
through the tools<font color="#CCCCCC"> that they're already</font>

986
00:38:59,400 --> 00:39:05,190
using<font color="#E5E5E5"> that's the least disruptive thing</font>

987
00:39:01,920 --> 00:39:06,540
that we can do and I'll<font color="#CCCCCC"> show the code</font>

988
00:39:05,190 --> 00:39:07,800
coverage<font color="#E5E5E5"> results here I think this is</font>

989
00:39:06,540 --> 00:39:09,270
<font color="#CCCCCC">really interesting</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> this</font>

990
00:39:07,800 --> 00:39:11,070
says for<font color="#E5E5E5"> the most part I'm getting</font>

991
00:39:09,270 --> 00:39:12,990
pretty<font color="#E5E5E5"> good code coverage but I've got</font>

992
00:39:11,070 --> 00:39:14,310
obviously<font color="#E5E5E5"> one big class here that I'm</font>

993
00:39:12,990 --> 00:39:15,839
<font color="#E5E5E5">not getting code coverage in and I</font>

994
00:39:14,310 --> 00:39:17,759
should<font color="#E5E5E5"> probably write a test case for</font>

995
00:39:15,839 --> 00:39:21,330
<font color="#E5E5E5">that you can even drill down here and</font>

996
00:39:17,760 --> 00:39:23,220
get<font color="#E5E5E5"> the details of exactly what lines of</font>

997
00:39:21,330 --> 00:39:24,839
code are executed<font color="#E5E5E5"> by your test cases and</font>

998
00:39:23,220 --> 00:39:27,180
so on so it you<font color="#E5E5E5"> know this can help you</font>

999
00:39:24,839 --> 00:39:28,720
drive towards really good code coverage

1000
00:39:27,180 --> 00:39:32,569
and<font color="#E5E5E5"> is doesn't mean</font>

1001
00:39:28,720 --> 00:39:35,299
full test cases<font color="#CCCCCC"> I ask</font><font color="#E5E5E5"> just needs you</font>

1002
00:39:32,570 --> 00:39:37,460
know basic execution of the web

1003
00:39:35,300 --> 00:39:45,140
functionality<font color="#E5E5E5"> so you know a simple</font>

1004
00:39:37,460 --> 00:39:47,060
<font color="#E5E5E5">crawler like it</font><font color="#CCCCCC"> Arachne sorry</font><font color="#E5E5E5"> Arachne</font>

1005
00:39:45,140 --> 00:39:48,259
you can run without you know running the

1006
00:39:47,060 --> 00:39:49,790
vulnerability<font color="#CCCCCC"> tests because</font><font color="#E5E5E5"> you don't</font>

1007
00:39:48,260 --> 00:39:50,750
<font color="#E5E5E5">need them but you can use that</font><font color="#CCCCCC"> to crawl</font>

1008
00:39:49,790 --> 00:39:55,370
the application to<font color="#E5E5E5"> get really good</font>

1009
00:39:50,750 --> 00:39:59,840
coverage over an application<font color="#E5E5E5"> um</font><font color="#CCCCCC"> okay so</font>

1010
00:39:55,370 --> 00:40:02,180
<font color="#E5E5E5">I want</font><font color="#CCCCCC"> to show you this in in the</font>

1011
00:39:59,840 --> 00:40:05,750
contrast dashboard<font color="#E5E5E5"> again</font><font color="#CCCCCC"> this is the</font>

1012
00:40:02,180 --> 00:40:07,520
<font color="#CCCCCC">free community ition of contrast</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we</font>

1013
00:40:05,750 --> 00:40:10,070
built<font color="#E5E5E5"> this dashboard</font><font color="#CCCCCC"> since the start of</font>

1014
00:40:07,520 --> 00:40:12,140
<font color="#E5E5E5">this talk what this shows is for spring</font>

1015
00:40:10,070 --> 00:40:17,510
pet clinic<font color="#CCCCCC"> we've started</font><font color="#E5E5E5"> this dashboard</font>

1016
00:40:12,140 --> 00:40:19,850
<font color="#CCCCCC">and you can see we've found a</font><font color="#E5E5E5"> bunch of</font>

1017
00:40:17,510 --> 00:40:21,530
vulnerabilities<font color="#E5E5E5"> and development we're</font>

1018
00:40:19,850 --> 00:40:23,180
also looking at what's going<font color="#E5E5E5"> on in QA</font>

1019
00:40:21,530 --> 00:40:25,820
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> the kind of</font><font color="#E5E5E5"> a sign of an</font>

1020
00:40:23,180 --> 00:40:27,379
unhealthy<font color="#E5E5E5"> project right because we</font>

1021
00:40:25,820 --> 00:40:28,670
didn't<font color="#E5E5E5"> shift left we're still finding a</font>

1022
00:40:27,380 --> 00:40:30,950
ton of vulnerabilities in the QA

1023
00:40:28,670 --> 00:40:32,690
environment<font color="#E5E5E5"> so this is a project where</font>

1024
00:40:30,950 --> 00:40:34,790
<font color="#CCCCCC">we can go</font><font color="#E5E5E5"> in and maybe do some training</font>

1025
00:40:32,690 --> 00:40:36,770
<font color="#E5E5E5">maybe help folks understand how to use</font>

1026
00:40:34,790 --> 00:40:38,570
the technology<font color="#CCCCCC"> a little better</font><font color="#E5E5E5"> and get</font>

1027
00:40:36,770 --> 00:40:42,890
those vulnerabilities fixed in death

1028
00:40:38,570 --> 00:40:44,780
when they come up getting this kind<font color="#E5E5E5"> of</font>

1029
00:40:42,890 --> 00:40:46,040
<font color="#CCCCCC">visibility from</font><font color="#E5E5E5"> other tools will be</font>

1030
00:40:44,780 --> 00:40:48,530
<font color="#E5E5E5">really hard like I</font><font color="#CCCCCC"> don't know anybody</font>

1031
00:40:46,040 --> 00:40:50,480
who<font color="#E5E5E5"> runs static in in dev and static in</font>

1032
00:40:48,530 --> 00:40:53,210
QA and continuously compares the results

1033
00:40:50,480 --> 00:40:57,590
<font color="#CCCCCC">to see</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> one's</font><font color="#E5E5E5"> doing better</font><font color="#CCCCCC"> I think</font>

1034
00:40:53,210 --> 00:41:00,700
that'd be<font color="#CCCCCC"> really hard and I also wanted</font>

1035
00:40:57,590 --> 00:41:03,830
<font color="#E5E5E5">to show here the the library analysis</font>

1036
00:41:00,700 --> 00:41:05,689
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is really important</font><font color="#CCCCCC"> you should know</font>

1037
00:41:03,830 --> 00:41:08,210
<font color="#CCCCCC">exactly what</font><font color="#E5E5E5"> codes are running across</font>

1038
00:41:05,690 --> 00:41:09,470
your<font color="#CCCCCC"> entire enterprise</font><font color="#E5E5E5"> and that's one of</font>

1039
00:41:08,210 --> 00:41:11,810
<font color="#CCCCCC">the things that I asked</font><font color="#E5E5E5"> o students they</font>

1040
00:41:09,470 --> 00:41:13,399
can just directly measure<font color="#E5E5E5"> the libraries</font>

1041
00:41:11,810 --> 00:41:15,560
<font color="#E5E5E5">that are being used by</font><font color="#CCCCCC"> your applications</font>

1042
00:41:13,400 --> 00:41:17,360
<font color="#E5E5E5">pull that all together</font><font color="#CCCCCC"> and build a</font>

1043
00:41:15,560 --> 00:41:19,870
global database of all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> libraries</font>

1044
00:41:17,360 --> 00:41:22,010
<font color="#CCCCCC">that you've got in</font><font color="#E5E5E5"> this case you can see</font>

1045
00:41:19,870 --> 00:41:24,529
you know I've got a bunch of libraries

1046
00:41:22,010 --> 00:41:27,470
here how<font color="#E5E5E5"> many does it say hold on open</font>

1047
00:41:24,530 --> 00:41:29,150
<font color="#E5E5E5">that up</font><font color="#CCCCCC"> so I've got you know hundred</font>

1048
00:41:27,470 --> 00:41:31,430
<font color="#CCCCCC">thirty-two</font><font color="#E5E5E5"> libraries with</font><font color="#CCCCCC"> 15 known</font>

1049
00:41:29,150 --> 00:41:33,860
vulnerabilities<font color="#CCCCCC"> across ten libraries and</font>

1050
00:41:31,430 --> 00:41:35,540
if I want to<font color="#E5E5E5"> just filter down and see</font>

1051
00:41:33,860 --> 00:41:37,520
which the vulnerable libraries are I

1052
00:41:35,540 --> 00:41:38,650
could pull<font color="#CCCCCC"> that up and</font><font color="#E5E5E5"> then this is kind</font>

1053
00:41:37,520 --> 00:41:41,390
<font color="#CCCCCC">of</font><font color="#E5E5E5"> interesting</font>

1054
00:41:38,650 --> 00:41:41,990
remember I<font color="#E5E5E5"> said most libraries aren't</font>

1055
00:41:41,390 --> 00:41:44,270
you

1056
00:41:41,990 --> 00:41:47,200
well if we<font color="#E5E5E5"> look at these vulnerable ones</font>

1057
00:41:44,270 --> 00:41:48,619
<font color="#E5E5E5">and you can see you know the</font><font color="#CCCCCC"> the C V's</font>

1058
00:41:47,200 --> 00:41:51,049
listed here

1059
00:41:48,619 --> 00:41:54,109
<font color="#E5E5E5">you know this Jackson has five different</font>

1060
00:41:51,049 --> 00:41:55,700
CVS associated with it<font color="#E5E5E5"> but we can also</font>

1061
00:41:54,109 --> 00:41:57,710
see how much of<font color="#CCCCCC"> those libraries are</font>

1062
00:41:55,700 --> 00:41:59,180
actually used right so<font color="#E5E5E5"> this shows you</font>

1063
00:41:57,710 --> 00:42:01,549
the<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of classes used out of</font><font color="#CCCCCC"> those</font>

1064
00:41:59,180 --> 00:42:04,788
libraries<font color="#CCCCCC"> and you know I think</font><font color="#E5E5E5"> four</font><font color="#CCCCCC"> of</font>

1065
00:42:01,549 --> 00:42:06,349
these are used but<font color="#E5E5E5"> the other six they're</font>

1066
00:42:04,789 --> 00:42:08,569
huge they have vulnerabilities where

1067
00:42:06,349 --> 00:42:09,890
they're<font color="#E5E5E5"> completely unused by the spring</font>

1068
00:42:08,569 --> 00:42:11,808
<font color="#E5E5E5">pet clinic application they're just</font>

1069
00:42:09,890 --> 00:42:14,750
there<font color="#E5E5E5"> because of</font><font color="#CCCCCC"> compile time dependency</font>

1070
00:42:11,809 --> 00:42:15,890
<font color="#E5E5E5">they're never invoked so these are</font>

1071
00:42:14,750 --> 00:42:18,079
libraries that you probably<font color="#E5E5E5"> don't want</font>

1072
00:42:15,890 --> 00:42:18,500
to rush out and fix<font color="#E5E5E5"> because this waste</font>

1073
00:42:18,079 --> 00:42:19,819
of<font color="#E5E5E5"> effort</font>

1074
00:42:18,500 --> 00:42:24,770
<font color="#CCCCCC">may be you should update</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> eventually</font>

1075
00:42:19,819 --> 00:42:28,250
but you<font color="#E5E5E5"> know no rush okay</font><font color="#CCCCCC"> so that's</font>

1076
00:42:24,770 --> 00:42:30,079
automated testing in<font color="#CCCCCC"> queue ACS</font><font color="#E5E5E5"> see I see</font>

1077
00:42:28,250 --> 00:42:32,359
the<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> will switch gears and</font>

1078
00:42:30,079 --> 00:42:34,130
<font color="#E5E5E5">jump</font><font color="#CCCCCC"> over to</font><font color="#E5E5E5"> production here now</font>

1079
00:42:32,359 --> 00:42:36,200
remember<font color="#E5E5E5"> this is rasp runtime</font>

1080
00:42:34,130 --> 00:42:41,480
<font color="#CCCCCC">application self</font><font color="#E5E5E5"> protection that's</font>

1081
00:42:36,200 --> 00:42:42,770
protecting these applications<font color="#E5E5E5"> and here's</font>

1082
00:42:41,480 --> 00:42:45,200
the data that's you know this is data

1083
00:42:42,770 --> 00:42:47,450
coming<font color="#CCCCCC"> into Splunk off these</font>

1084
00:42:45,200 --> 00:42:49,879
applications<font color="#E5E5E5"> and you can see some</font>

1085
00:42:47,450 --> 00:42:52,788
attacks are blocked some are ineffective

1086
00:42:49,880 --> 00:42:54,500
<font color="#CCCCCC">and some are actually exploited</font><font color="#E5E5E5"> here and</font>

1087
00:42:52,789 --> 00:42:56,390
the<font color="#E5E5E5"> reason</font><font color="#CCCCCC"> for that exploit a bit is you</font>

1088
00:42:54,500 --> 00:43:00,289
can run<font color="#CCCCCC"> like a laughs</font><font color="#E5E5E5"> you can run rasp</font>

1089
00:42:56,390 --> 00:43:01,430
in a log only<font color="#E5E5E5"> mode if you want and you</font>

1090
00:43:00,289 --> 00:43:04,339
know you should have<font color="#CCCCCC"> a dashboard that</font>

1091
00:43:01,430 --> 00:43:05,990
shows you<font color="#E5E5E5"> exactly how you're being</font>

1092
00:43:04,339 --> 00:43:08,538
attacked<font color="#E5E5E5"> and who's attacking you in and</font>

1093
00:43:05,990 --> 00:43:10,069
so<font color="#E5E5E5"> on so let's take a look at how rasp</font>

1094
00:43:08,539 --> 00:43:11,539
<font color="#E5E5E5">actually works I'll go back to dev here</font>

1095
00:43:10,069 --> 00:43:15,680
for a<font color="#E5E5E5"> minute where I</font><font color="#CCCCCC"> don't have rasp</font>

1096
00:43:11,539 --> 00:43:18,470
<font color="#E5E5E5">engaged and we'll just you know we'll go</font>

1097
00:43:15,680 --> 00:43:20,390
to this this API you can see it<font color="#CCCCCC"> just</font>

1098
00:43:18,470 --> 00:43:23,959
works normally but if I do a sequel

1099
00:43:20,390 --> 00:43:26,868
injection<font color="#CCCCCC"> oops if I do a sequel</font>

1100
00:43:23,960 --> 00:43:28,190
injection<font color="#CCCCCC"> I can exploit</font><font color="#E5E5E5"> this and pull</font>

1101
00:43:26,869 --> 00:43:31,700
all the<font color="#CCCCCC"> records out of</font><font color="#E5E5E5"> the database</font>

1102
00:43:28,190 --> 00:43:33,260
<font color="#CCCCCC">right</font><font color="#E5E5E5"> well all I did was add rasp to</font>

1103
00:43:31,700 --> 00:43:36,279
this application<font color="#CCCCCC"> now this is in</font>

1104
00:43:33,260 --> 00:43:40,250
<font color="#CCCCCC">production you can</font><font color="#E5E5E5"> see I'm running in</font>

1105
00:43:36,279 --> 00:43:43,510
pivotal Cloud Foundry here and now when

1106
00:43:40,250 --> 00:43:46,579
I try to exploit that same vulnerability

1107
00:43:43,510 --> 00:43:48,980
now rasp intervenes and prevents<font color="#E5E5E5"> that</font>

1108
00:43:46,579 --> 00:43:50,960
vulnerability<font color="#CCCCCC"> from being exploited so</font>

1109
00:43:48,980 --> 00:43:52,880
generally you can drop in<font color="#E5E5E5"> Wrath safely</font>

1110
00:43:50,960 --> 00:43:54,370
into an application<font color="#CCCCCC"> and just keep using</font>

1111
00:43:52,880 --> 00:43:57,010
<font color="#E5E5E5">it and won't do anything until</font>

1112
00:43:54,370 --> 00:43:58,509
you<font color="#E5E5E5"> actually try to attack the app this</font>

1113
00:43:57,010 --> 00:44:00,700
applies to<font color="#CCCCCC"> not only custom code</font>

1114
00:43:58,510 --> 00:44:02,770
vulnerabilities<font color="#E5E5E5"> so you know they lost</font>

1115
00:44:00,700 --> 00:44:05,890
top<font color="#CCCCCC"> ten kinds</font><font color="#E5E5E5"> of vulnerabilities</font><font color="#CCCCCC"> and a</font>

1116
00:44:02,770 --> 00:44:08,140
bunch more but also to<font color="#E5E5E5"> library</font>

1117
00:44:05,890 --> 00:44:10,029
vulnerabilities so all the struts and

1118
00:44:08,140 --> 00:44:12,339
<font color="#E5E5E5">spring vulnerabilities from last year or</font>

1119
00:44:10,030 --> 00:44:15,340
<font color="#E5E5E5">almost all expression language injection</font>

1120
00:44:12,340 --> 00:44:16,930
<font color="#E5E5E5">kinds of problems rasp protects against</font>

1121
00:44:15,340 --> 00:44:22,510
those those kinds of<font color="#CCCCCC"> vulnerabilities and</font>

1122
00:44:16,930 --> 00:44:24,009
makes them unexploited so<font color="#E5E5E5"> I think this</font>

1123
00:44:22,510 --> 00:44:25,990
<font color="#CCCCCC">is really important</font><font color="#E5E5E5"> for every</font>

1124
00:44:24,010 --> 00:44:27,550
<font color="#CCCCCC">application</font><font color="#E5E5E5"> to have this kind of</font>

1125
00:44:25,990 --> 00:44:28,959
protection<font color="#CCCCCC"> because you're not</font><font color="#E5E5E5"> going to</font>

1126
00:44:27,550 --> 00:44:30,430
be able<font color="#CCCCCC"> to respond to</font><font color="#E5E5E5"> new</font>

1127
00:44:28,960 --> 00:44:32,050
vulnerabilities that<font color="#E5E5E5"> come out in a</font>

1128
00:44:30,430 --> 00:44:34,210
timely<font color="#E5E5E5"> manner</font><font color="#CCCCCC"> everyone should know who's</font>

1129
00:44:32,050 --> 00:44:35,950
attacking<font color="#CCCCCC"> and how you're being attacked</font>

1130
00:44:34,210 --> 00:44:38,440
and<font color="#CCCCCC"> Rass can enable that really</font><font color="#E5E5E5"> easily</font>

1131
00:44:35,950 --> 00:44:39,910
<font color="#E5E5E5">and so you know look that the contrast</font>

1132
00:44:38,440 --> 00:44:41,920
one here is free<font color="#E5E5E5"> if you've got an</font>

1133
00:44:39,910 --> 00:44:43,750
application<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> to try it on and</font>

1134
00:44:41,920 --> 00:44:51,130
see<font color="#CCCCCC"> what attacks on</font><font color="#E5E5E5"> your application</font>

1135
00:44:43,750 --> 00:44:52,780
look like<font color="#E5E5E5"> super</font><font color="#CCCCCC"> easy to add it</font><font color="#E5E5E5"> and let's</font>

1136
00:44:51,130 --> 00:44:55,000
see so I thought what I do is I show the

1137
00:44:52,780 --> 00:44:56,260
<font color="#CCCCCC">the</font><font color="#E5E5E5"> actual attack traffic</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> look</font>

1138
00:44:55,000 --> 00:45:00,490
at it in the sim<font color="#CCCCCC"> where you can look</font><font color="#E5E5E5"> at</font>

1139
00:44:56,260 --> 00:45:02,710
it in the the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> rasped dashboard in</font>

1140
00:45:00,490 --> 00:45:05,799
this case<font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> show both effective and</font>

1141
00:45:02,710 --> 00:45:07,510
<font color="#E5E5E5">ineffective attacks and you can see here</font>

1142
00:45:05,800 --> 00:45:10,030
you know<font color="#E5E5E5"> the kind</font><font color="#CCCCCC"> of range of attacks</font>

1143
00:45:07,510 --> 00:45:11,680
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is you can see here there's you</font>

1144
00:45:10,030 --> 00:45:13,090
know<font color="#E5E5E5"> expression language</font><font color="#CCCCCC"> injection CVE</font>

1145
00:45:11,680 --> 00:45:15,040
attacks coming in sequel injection

1146
00:45:13,090 --> 00:45:17,370
attempts and then<font color="#CCCCCC"> I'll look into this</font>

1147
00:45:15,040 --> 00:45:19,900
one that we<font color="#CCCCCC"> just did a minute</font><font color="#E5E5E5"> ago</font><font color="#CCCCCC"> and</font>

1148
00:45:17,370 --> 00:45:22,870
rasp<font color="#E5E5E5"> is a little different than what you</font>

1149
00:45:19,900 --> 00:45:25,540
get<font color="#E5E5E5"> from a laugh raft shows you the</font>

1150
00:45:22,870 --> 00:45:27,850
attack in<font color="#E5E5E5"> the URL</font><font color="#CCCCCC"> here you can see it's</font>

1151
00:45:25,540 --> 00:45:29,770
<font color="#E5E5E5">encoded and it flows through into the</font>

1152
00:45:27,850 --> 00:45:32,980
sequel query basically a lot like what I

1153
00:45:29,770 --> 00:45:34,660
showed<font color="#E5E5E5"> you for the vulnerability but no</font>

1154
00:45:32,980 --> 00:45:36,340
other you know another attack detection

1155
00:45:34,660 --> 00:45:39,100
<font color="#E5E5E5">can really show you the actual query</font>

1156
00:45:36,340 --> 00:45:40,690
that<font color="#CCCCCC"> was targeted and</font><font color="#E5E5E5"> of course you get</font>

1157
00:45:39,100 --> 00:45:42,940
<font color="#E5E5E5">the details like</font><font color="#CCCCCC"> the full stack trace</font>

1158
00:45:40,690 --> 00:45:45,730
<font color="#E5E5E5">full line of code</font><font color="#CCCCCC"> even the currently</font>

1159
00:45:42,940 --> 00:45:47,050
<font color="#E5E5E5">logged in user because I asked</font><font color="#CCCCCC"> this part</font>

1160
00:45:45,730 --> 00:45:49,740
<font color="#CCCCCC">of the application it knows who's logged</font>

1161
00:45:47,050 --> 00:45:52,240
in so<font color="#E5E5E5"> instead of</font><font color="#CCCCCC"> blocking an IP address</font>

1162
00:45:49,740 --> 00:45:54,189
you can<font color="#CCCCCC"> go and turn off that</font><font color="#E5E5E5"> users</font>

1163
00:45:52,240 --> 00:45:55,180
account<font color="#E5E5E5"> or you know make them reset</font>

1164
00:45:54,190 --> 00:45:57,190
their password or<font color="#E5E5E5"> something because</font>

1165
00:45:55,180 --> 00:45:59,940
<font color="#E5E5E5">they're attacking you so you can respond</font>

1166
00:45:57,190 --> 00:45:59,940
a lot<font color="#E5E5E5"> differently</font>

1167
00:46:00,840 --> 00:46:07,900
<font color="#E5E5E5">okay so that's</font>

1168
00:46:05,350 --> 00:46:10,509
<font color="#CCCCCC">Iestyn rasp</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> we went through</font>

1169
00:46:07,900 --> 00:46:12,850
building this pipeline<font color="#E5E5E5"> that it's not</font>

1170
00:46:10,510 --> 00:46:15,130
<font color="#E5E5E5">difficult to build an</font><font color="#CCCCCC"> effective deficit</font>

1171
00:46:12,850 --> 00:46:17,110
cops pipeline using<font color="#E5E5E5"> I asked and rasp</font><font color="#CCCCCC"> you</font>

1172
00:46:15,130 --> 00:46:19,030
don't have to change anything about the

1173
00:46:17,110 --> 00:46:21,520
<font color="#CCCCCC">way that your pipeline works</font><font color="#E5E5E5"> you can</font>

1174
00:46:19,030 --> 00:46:23,950
layer<font color="#CCCCCC"> I</font><font color="#E5E5E5"> ass and rasp on top of your</font>

1175
00:46:21,520 --> 00:46:25,660
<font color="#CCCCCC">pipeline and and get these kind of</font>

1176
00:46:23,950 --> 00:46:27,759
results<font color="#CCCCCC"> so I think</font><font color="#E5E5E5"> I did what</font><font color="#CCCCCC"> I set</font><font color="#E5E5E5"> out</font>

1177
00:46:25,660 --> 00:46:30,279
to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to show you that we</font><font color="#CCCCCC"> can</font>

1178
00:46:27,760 --> 00:46:32,110
empower<font color="#CCCCCC"> developers to fix their own</font>

1179
00:46:30,280 --> 00:46:35,290
vulnerabilities<font color="#E5E5E5"> and check in clean code</font>

1180
00:46:32,110 --> 00:46:37,720
<font color="#E5E5E5">without irritating them we can assure</font>

1181
00:46:35,290 --> 00:46:39,340
<font color="#E5E5E5">that build before</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> goes into</font>

1182
00:46:37,720 --> 00:46:42,310
production<font color="#CCCCCC"> and</font><font color="#E5E5E5"> make sure we're</font>

1183
00:46:39,340 --> 00:46:45,670
committing you know deploying code that

1184
00:46:42,310 --> 00:46:47,860
<font color="#E5E5E5">doesn't have vulnerabilities</font><font color="#CCCCCC"> and we can</font>

1185
00:46:45,670 --> 00:46:49,510
protect applications whether<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are</font>

1186
00:46:47,860 --> 00:46:51,160
legacy applications or new applications

1187
00:46:49,510 --> 00:46:53,980
we can<font color="#E5E5E5"> protect them against being</font>

1188
00:46:51,160 --> 00:46:56,589
exploited<font color="#CCCCCC"> by both old vulnerabilities</font>

1189
00:46:53,980 --> 00:46:58,960
<font color="#E5E5E5">and new vulnerabilities and we can do it</font>

1190
00:46:56,590 --> 00:47:00,760
<font color="#E5E5E5">without you know without breaking</font>

1191
00:46:58,960 --> 00:47:03,550
software development processes and

1192
00:47:00,760 --> 00:47:05,890
without complex diagrams and so on so

1193
00:47:03,550 --> 00:47:08,890
this to<font color="#CCCCCC"> me is what apps that</font><font color="#E5E5E5"> good scale</font>

1194
00:47:05,890 --> 00:47:11,259
<font color="#E5E5E5">looks like we instrument our application</font>

1195
00:47:08,890 --> 00:47:13,600
<font color="#CCCCCC">portfolio and we start getting real-time</font>

1196
00:47:11,260 --> 00:47:15,420
telemetry<font color="#CCCCCC"> we're measuring</font><font color="#E5E5E5"> everything</font>

1197
00:47:13,600 --> 00:47:17,830
<font color="#E5E5E5">that we're doing and</font><font color="#CCCCCC"> this is you know</font>

1198
00:47:15,420 --> 00:47:19,990
fundamentally instrumentation is

1199
00:47:17,830 --> 00:47:22,060
incredibly important<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> that we</font>

1200
00:47:19,990 --> 00:47:25,390
build in<font color="#E5E5E5"> the world</font><font color="#CCCCCC"> that's complicated</font>

1201
00:47:22,060 --> 00:47:28,029
we instrument it like factories and cars

1202
00:47:25,390 --> 00:47:30,250
<font color="#E5E5E5">and nuclear power plants and so on</font>

1203
00:47:28,030 --> 00:47:33,190
<font color="#E5E5E5">they're all super instrumented for</font>

1204
00:47:30,250 --> 00:47:35,620
temperature<font color="#CCCCCC"> and vibration</font><font color="#E5E5E5"> and sound and</font>

1205
00:47:33,190 --> 00:47:38,170
<font color="#E5E5E5">everything but we don't instrument</font>

1206
00:47:35,620 --> 00:47:39,790
software software<font color="#E5E5E5"> is arguably the most</font>

1207
00:47:38,170 --> 00:47:41,500
<font color="#E5E5E5">complex thing that man has</font><font color="#CCCCCC"> ever built</font>

1208
00:47:39,790 --> 00:47:42,100
<font color="#E5E5E5">and we have no idea what's going on</font>

1209
00:47:41,500 --> 00:47:46,930
<font color="#E5E5E5">inside</font>

1210
00:47:42,100 --> 00:47:50,589
all we got is log files<font color="#E5E5E5"> there's garbage</font>

1211
00:47:46,930 --> 00:47:52,180
<font color="#CCCCCC">in log</font><font color="#E5E5E5"> files</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> need to know what's</font>

1212
00:47:50,590 --> 00:47:54,310
<font color="#E5E5E5">going on inside and so security</font>

1213
00:47:52,180 --> 00:47:56,620
instrumentation I believe is the path

1214
00:47:54,310 --> 00:48:00,009
towards achieving continuous<font color="#CCCCCC"> apps tech</font>

1215
00:47:56,620 --> 00:48:01,870
at scale<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I didn't want to just</font>

1216
00:48:00,010 --> 00:48:03,490
<font color="#CCCCCC">mention that the community edition we're</font>

1217
00:48:01,870 --> 00:48:05,319
trying to do something<font color="#E5E5E5"> special here you</font>

1218
00:48:03,490 --> 00:48:08,169
know there's 21 million developers in

1219
00:48:05,320 --> 00:48:10,880
the<font color="#CCCCCC"> world</font><font color="#E5E5E5"> and my estimate is that</font><font color="#CCCCCC"> about</font>

1220
00:48:08,170 --> 00:48:14,030
<font color="#CCCCCC">6%</font><font color="#E5E5E5"> of them have access to any kind of</font>

1221
00:48:10,880 --> 00:48:15,860
<font color="#CCCCCC">application</font><font color="#E5E5E5"> security tools that's that's</font>

1222
00:48:14,030 --> 00:48:17,720
a shame<font color="#CCCCCC"> we're never</font><font color="#E5E5E5"> gonna get in</font><font color="#CCCCCC"> front</font>

1223
00:48:15,860 --> 00:48:21,140
<font color="#E5E5E5">of the problem</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> app</font><font color="#CCCCCC"> sack with that</font>

1224
00:48:17,720 --> 00:48:24,080
<font color="#E5E5E5">situation so we're making</font><font color="#CCCCCC"> the contrast</font>

1225
00:48:21,140 --> 00:48:26,810
is full strength<font color="#E5E5E5"> analysis and protection</font>

1226
00:48:24,080 --> 00:48:28,700
for one application<font color="#E5E5E5"> we're doing Java</font>

1227
00:48:26,810 --> 00:48:31,070
right now<font color="#E5E5E5"> but soon we'll be releasing</font>

1228
00:48:28,700 --> 00:48:34,759
the other languages<font color="#CCCCCC"> that we support net</font>

1229
00:48:31,070 --> 00:48:36,920
nodejs Ruby and Python<font color="#CCCCCC"> and so we can</font>

1230
00:48:34,760 --> 00:48:38,720
bring great<font color="#E5E5E5"> protection to massive</font>

1231
00:48:36,920 --> 00:48:40,790
<font color="#E5E5E5">amounts of applications across the world</font>

1232
00:48:38,720 --> 00:48:41,689
and<font color="#E5E5E5"> make the situation much better so</font>

1233
00:48:40,790 --> 00:48:43,310
please<font color="#E5E5E5"> check it out</font>

1234
00:48:41,690 --> 00:48:46,430
<font color="#CCCCCC">if you have</font><font color="#E5E5E5"> any questions about it don't</font>

1235
00:48:43,310 --> 00:48:48,350
<font color="#E5E5E5">hesitate</font><font color="#CCCCCC"> to reach out to me we do</font><font color="#E5E5E5"> have a</font>

1236
00:48:46,430 --> 00:48:51,290
booth<font color="#E5E5E5"> there</font><font color="#CCCCCC"> if you want to</font><font color="#E5E5E5"> see it we can</font>

1237
00:48:48,350 --> 00:48:53,810
show it to you<font color="#E5E5E5"> and with that I'll I'll</font>

1238
00:48:51,290 --> 00:48:55,279
stop<font color="#CCCCCC"> I do want you</font><font color="#E5E5E5"> to go fast and be</font>

1239
00:48:53,810 --> 00:49:04,990
secure and<font color="#CCCCCC"> I'd be happy to take your</font>

1240
00:48:55,280 --> 00:49:06,860
questions<font color="#E5E5E5"> for the next few</font><font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> thank</font>

1241
00:49:04,990 --> 00:49:11,499
<font color="#E5E5E5">you question</font>

1242
00:49:06,860 --> 00:49:11,499
[Applause]

1243
00:49:11,950 --> 00:49:16,368
for sure

1244
00:49:13,750 --> 00:49:21,529
they<font color="#E5E5E5"> are the reason</font><font color="#CCCCCC"> that I started</font><font color="#E5E5E5"> this</font>

1245
00:49:16,369 --> 00:49:25,059
<font color="#E5E5E5">company</font><font color="#CCCCCC"> Mustang</font><font color="#E5E5E5"> yes no false positives</font>

1246
00:49:21,529 --> 00:49:27,920
are a big problem<font color="#CCCCCC"> and if</font><font color="#E5E5E5"> you have grass</font>

1247
00:49:25,059 --> 00:49:29,900
<font color="#E5E5E5">automatically blocking what it perceives</font>

1248
00:49:27,920 --> 00:49:33,529
<font color="#CCCCCC">as security incidents</font><font color="#E5E5E5"> you run the</font><font color="#CCCCCC"> risk</font>

1249
00:49:29,900 --> 00:49:35,690
of blocking your legitimate innocent

1250
00:49:33,529 --> 00:49:37,849
customers<font color="#E5E5E5"> if you have a bad false</font>

1251
00:49:35,690 --> 00:49:39,410
positive rate<font color="#CCCCCC"> so how do you account for</font>

1252
00:49:37,849 --> 00:49:42,319
<font color="#E5E5E5">that when you're dealing with</font><font color="#CCCCCC"> rats</font>

1253
00:49:39,410 --> 00:49:44,720
yeah I mean generally<font color="#E5E5E5"> instrumentation is</font>

1254
00:49:42,319 --> 00:49:48,470
far more accurate<font color="#CCCCCC"> than</font><font color="#E5E5E5"> you know just</font>

1255
00:49:44,720 --> 00:49:51,589
<font color="#CCCCCC">looking at HTTP requests so with</font>

1256
00:49:48,470 --> 00:49:53,808
accuracy<font color="#E5E5E5"> comes better protection it's</font>

1257
00:49:51,589 --> 00:49:55,930
really just that simple<font color="#CCCCCC"> you know we we</font>

1258
00:49:53,809 --> 00:49:58,430
have<font color="#CCCCCC"> a hard roll we call it our our</font>

1259
00:49:55,930 --> 00:50:00,769
<font color="#E5E5E5">Hippocratic oath that will never break a</font>

1260
00:49:58,430 --> 00:50:02,419
nap<font color="#E5E5E5"> and so we we work really hard</font><font color="#CCCCCC"> to</font>

1261
00:50:00,769 --> 00:50:06,470
<font color="#E5E5E5">make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that you know the only things</font>

1262
00:50:02,420 --> 00:50:08,660
that<font color="#E5E5E5"> we block are legit attacks Thanks</font>

1263
00:50:06,470 --> 00:50:10,848
<font color="#E5E5E5">yeah I mean obviously</font><font color="#CCCCCC"> there's a lot</font><font color="#E5E5E5"> more</font>

1264
00:50:08,660 --> 00:50:14,960
detail there<font color="#E5E5E5"> and I can be happy to go</font>

1265
00:50:10,849 --> 00:50:17,779
into<font color="#E5E5E5"> that with you offline yes</font><font color="#CCCCCC"> so you</font>

1266
00:50:14,960 --> 00:50:21,019
might envision that the<font color="#CCCCCC"> DevOps the</font>

1267
00:50:17,779 --> 00:50:23,359
engineering teams might raise a question

1268
00:50:21,019 --> 00:50:26,930
<font color="#E5E5E5">about the performance impacts oh yeah</font><font color="#CCCCCC"> a</font>

1269
00:50:23,359 --> 00:50:29,869
<font color="#CCCCCC">pest harassment so I wanted to get</font><font color="#E5E5E5"> your</font>

1270
00:50:26,930 --> 00:50:31,328
<font color="#CCCCCC">feedback on what</font><font color="#E5E5E5"> one might expect in</font>

1271
00:50:29,869 --> 00:50:35,480
terms<font color="#E5E5E5"> of</font><font color="#CCCCCC"> performance feedbacks</font>

1272
00:50:31,329 --> 00:50:38,299
<font color="#E5E5E5">interoperability other conflicts</font><font color="#CCCCCC"> that</font>

1273
00:50:35,480 --> 00:50:39,619
one might expect<font color="#E5E5E5"> from integrating those</font>

1274
00:50:38,299 --> 00:50:41,869
technologies<font color="#CCCCCC"> in</font><font color="#E5E5E5"> be they other</font>

1275
00:50:39,619 --> 00:50:42,400
technologies<font color="#E5E5E5"> yeah sure so two things</font>

1276
00:50:41,869 --> 00:50:44,710
there

1277
00:50:42,400 --> 00:50:47,809
first of all rasp is really fast

1278
00:50:44,710 --> 00:50:49,279
<font color="#CCCCCC">contrast adds about 50</font><font color="#E5E5E5"> microseconds</font><font color="#CCCCCC"> to a</font>

1279
00:50:47,809 --> 00:50:52,279
<font color="#E5E5E5">round-trip HTTP</font><font color="#CCCCCC"> request</font>

1280
00:50:49,279 --> 00:50:54,170
<font color="#E5E5E5">that's for normal</font><font color="#CCCCCC"> traffic for heavy</font>

1281
00:50:52,279 --> 00:50:55,730
attacks that goes up<font color="#CCCCCC"> to</font><font color="#E5E5E5"> about 250</font>

1282
00:50:54,170 --> 00:50:58,369
microseconds<font color="#E5E5E5"> or a quarter of a</font>

1283
00:50:55,730 --> 00:51:00,380
millisecond so way<font color="#E5E5E5"> faster than</font><font color="#CCCCCC"> a laugh I</font>

1284
00:50:58,369 --> 00:51:03,109
suspect it's faster than most

1285
00:51:00,380 --> 00:51:05,299
organizations<font color="#E5E5E5"> would be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to add input</font>

1286
00:51:03,109 --> 00:51:06,769
validation<font color="#E5E5E5"> to their code because most</font>

1287
00:51:05,299 --> 00:51:09,859
developers will do<font color="#E5E5E5"> something relatively</font>

1288
00:51:06,769 --> 00:51:12,258
<font color="#E5E5E5">naive like use reg X's or something rasp</font>

1289
00:51:09,859 --> 00:51:14,058
<font color="#E5E5E5">is woven right</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the code so it's</font>

1290
00:51:12,259 --> 00:51:16,309
executing<font color="#E5E5E5"> in this the same way that your</font>

1291
00:51:14,059 --> 00:51:19,290
own developers validation will work but

1292
00:51:16,309 --> 00:51:22,350
it's<font color="#E5E5E5"> highly optimized for speed and</font>

1293
00:51:19,290 --> 00:51:23,880
performance so I I<font color="#E5E5E5"> think you know</font>

1294
00:51:22,350 --> 00:51:27,360
performance for most<font color="#CCCCCC"> applications it's</font>

1295
00:51:23,880 --> 00:51:30,480
not an issue<font color="#CCCCCC"> you</font><font color="#E5E5E5"> mentioned conflict with</font>

1296
00:51:27,360 --> 00:51:33,540
other things<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> environment in in</font>

1297
00:51:30,480 --> 00:51:35,790
<font color="#E5E5E5">the first few years we had conflicts</font>

1298
00:51:33,540 --> 00:51:38,730
with some of the APM agents because

1299
00:51:35,790 --> 00:51:39,960
<font color="#CCCCCC">they've run in</font><font color="#E5E5E5"> the same way but that's</font>

1300
00:51:38,730 --> 00:51:42,120
<font color="#E5E5E5">essentially gone now we run right</font>

1301
00:51:39,960 --> 00:51:43,770
<font color="#E5E5E5">alongside dynaTrace and out dynamics and</font>

1302
00:51:42,120 --> 00:51:46,290
New Relic and a bunch<font color="#E5E5E5"> of other stuff in</font>

1303
00:51:43,770 --> 00:51:47,580
production and frankly I'm super glad

1304
00:51:46,290 --> 00:51:49,350
<font color="#E5E5E5">that those products are out there</font>

1305
00:51:47,580 --> 00:51:52,290
because<font color="#E5E5E5"> they blazed the way for this</font>

1306
00:51:49,350 --> 00:51:54,330
operations teams are open to adding<font color="#E5E5E5"> this</font>

1307
00:51:52,290 --> 00:51:56,550
kind<font color="#E5E5E5"> of agent to applications because</font>

1308
00:51:54,330 --> 00:51:58,529
they're used to it<font color="#E5E5E5"> yeah so like I said</font>

1309
00:51:56,550 --> 00:52:01,170
the<font color="#CCCCCC"> the communication is just Java for</font>

1310
00:51:58,530 --> 00:52:02,790
now but we're going to add the languages

1311
00:52:01,170 --> 00:52:04,500
that<font color="#CCCCCC"> we other languages that we already</font>

1312
00:52:02,790 --> 00:52:05,910
<font color="#E5E5E5">support and have supported for</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> we</font>

1313
00:52:04,500 --> 00:52:09,060
just<font color="#E5E5E5"> were doing one at a time</font><font color="#CCCCCC"> because we</font>

1314
00:52:05,910 --> 00:52:12,299
wanted to<font color="#E5E5E5"> kind of you know take one step</font>

1315
00:52:09,060 --> 00:52:16,230
at a time<font color="#E5E5E5"> but that's net nodejs Ruby and</font>

1316
00:52:12,300 --> 00:52:18,360
Python yeah<font color="#E5E5E5"> and there's other languages</font>

1317
00:52:16,230 --> 00:52:23,160
coming<font color="#E5E5E5"> even languages like go like</font>

1318
00:52:18,360 --> 00:52:26,130
native compiled languages<font color="#E5E5E5"> yeah yeah</font><font color="#CCCCCC"> he</font>

1319
00:52:23,160 --> 00:52:27,899
plans for nodejs<font color="#E5E5E5"> Express you know</font>

1320
00:52:26,130 --> 00:52:30,890
something like<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> myrn</font><font color="#E5E5E5"> stack react</font>

1321
00:52:27,900 --> 00:52:33,060
anything<font color="#CCCCCC"> javis yeah yes so no jess is</font>

1322
00:52:30,890 --> 00:52:34,379
supported<font color="#E5E5E5"> like</font><font color="#CCCCCC"> well I</font><font color="#E5E5E5"> mean that</font><font color="#CCCCCC"> inner</font>

1323
00:52:33,060 --> 00:52:36,660
<font color="#E5E5E5">commercial product it's</font><font color="#CCCCCC"> not in the</font>

1324
00:52:34,380 --> 00:52:38,790
<font color="#CCCCCC">community</font><font color="#E5E5E5"> edition yet but</font><font color="#CCCCCC"> will be there</font>

1325
00:52:36,660 --> 00:52:41,069
<font color="#E5E5E5">and</font><font color="#CCCCCC"> actually it's interesting JavaScript</font>

1326
00:52:38,790 --> 00:52:43,230
is insanely<font color="#E5E5E5"> hard to analyze statically</font>

1327
00:52:41,070 --> 00:52:47,340
because it's a<font color="#E5E5E5"> weekly</font><font color="#CCCCCC"> type layer it's</font>

1328
00:52:43,230 --> 00:52:49,740
got a<font color="#E5E5E5"> million issues but so most statics</font>

1329
00:52:47,340 --> 00:52:53,870
holes really<font color="#E5E5E5"> are</font><font color="#CCCCCC"> just kind of grep for</font>

1330
00:52:49,740 --> 00:52:55,709
you know<font color="#E5E5E5"> security problems but because</font>

1331
00:52:53,870 --> 00:52:58,710
instrumentation happens at<font color="#E5E5E5"> runtime</font>

1332
00:52:55,710 --> 00:53:00,180
<font color="#E5E5E5">everything's fully resolved and so you</font>

1333
00:52:58,710 --> 00:53:01,170
know we don't<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the same kinds of</font>

1334
00:53:00,180 --> 00:53:03,299
problems

1335
00:53:01,170 --> 00:53:05,910
analyzing<font color="#CCCCCC"> javascript so we've got</font><font color="#E5E5E5"> really</font>

1336
00:53:03,300 --> 00:53:11,390
the the only<font color="#E5E5E5"> technology that works well</font>

1337
00:53:05,910 --> 00:53:15,710
on server-side<font color="#E5E5E5"> JavaScript yeah does</font>

1338
00:53:11,390 --> 00:53:20,879
support<font color="#E5E5E5"> legacy applications and also</font><font color="#CCCCCC"> how</font>

1339
00:53:15,710 --> 00:53:24,120
<font color="#CCCCCC">grasp</font><font color="#E5E5E5"> learn about 0.0 day exploits as</font>

1340
00:53:20,880 --> 00:53:27,120
well as<font color="#E5E5E5"> emerging</font><font color="#CCCCCC"> these great questions</font>

1341
00:53:24,120 --> 00:53:29,500
<font color="#CCCCCC">no really</font><font color="#E5E5E5"> really great so yeah you can</font>

1342
00:53:27,120 --> 00:53:32,170
drop in<font color="#CCCCCC"> rascal on a legacy</font><font color="#E5E5E5"> application I</font>

1343
00:53:29,500 --> 00:53:33,310
<font color="#E5E5E5">you know it's it's dynamic binary</font>

1344
00:53:32,170 --> 00:53:34,420
instrumentation so you don't<font color="#E5E5E5"> even have</font>

1345
00:53:33,310 --> 00:53:36,640
to<font color="#E5E5E5"> have the source code right you can</font>

1346
00:53:34,420 --> 00:53:39,610
<font color="#CCCCCC">just add</font><font color="#E5E5E5"> it to a server you can even add</font>

1347
00:53:36,640 --> 00:53:42,129
it to<font color="#CCCCCC"> commercial products and it just</font>

1348
00:53:39,610 --> 00:53:43,870
goes to work right<font color="#CCCCCC"> away second</font><font color="#E5E5E5"> part your</font>

1349
00:53:42,130 --> 00:53:47,560
questions<font color="#E5E5E5"> about you</font><font color="#CCCCCC"> know how to</font><font color="#E5E5E5"> updates</font>

1350
00:53:43,870 --> 00:53:50,410
happen for for new things most<font color="#E5E5E5"> zero days</font>

1351
00:53:47,560 --> 00:53:53,620
are instances<font color="#CCCCCC"> of some vulnerability that</font>

1352
00:53:50,410 --> 00:53:55,839
<font color="#E5E5E5">a rasp already protects against right so</font>

1353
00:53:53,620 --> 00:53:57,970
like if a new spring expression language

1354
00:53:55,840 --> 00:53:59,860
vulnerability comes<font color="#E5E5E5"> out it's already</font>

1355
00:53:57,970 --> 00:54:02,529
been protected against by<font color="#CCCCCC"> Rask because</font>

1356
00:53:59,860 --> 00:54:06,190
rasp makes expression language injection

1357
00:54:02,530 --> 00:54:07,360
<font color="#E5E5E5">and impossible to exploit</font><font color="#CCCCCC"> I could dig</font>

1358
00:54:06,190 --> 00:54:09,220
into the details<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> but it's you</font>

1359
00:54:07,360 --> 00:54:12,130
know we're sandboxing the actual

1360
00:54:09,220 --> 00:54:14,049
evaluation of the<font color="#CCCCCC"> expression but</font><font color="#E5E5E5"> if</font>

1361
00:54:12,130 --> 00:54:16,870
there is something<font color="#E5E5E5"> genuinely novel</font><font color="#CCCCCC"> like</font>

1362
00:54:14,050 --> 00:54:20,920
some new kind of injection<font color="#CCCCCC"> a</font><font color="#E5E5E5"> wasp</font>

1363
00:54:16,870 --> 00:54:22,990
injection or something<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you want an</font>

1364
00:54:20,920 --> 00:54:24,250
update<font color="#CCCCCC"> to go out so everything</font><font color="#E5E5E5"> in our</font>

1365
00:54:22,990 --> 00:54:26,589
environment<font color="#CCCCCC"> everything automatically</font>

1366
00:54:24,250 --> 00:54:27,880
updates so new rules go out<font color="#E5E5E5"> you can it</font>

1367
00:54:26,590 --> 00:54:29,530
can<font color="#E5E5E5"> push out across</font><font color="#CCCCCC"> your entire</font>

1368
00:54:27,880 --> 00:54:32,470
<font color="#E5E5E5">application portfolio in a matter of</font>

1369
00:54:29,530 --> 00:54:33,670
minutes<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you're protected</font><font color="#E5E5E5"> so you</font>

1370
00:54:32,470 --> 00:54:34,959
<font color="#E5E5E5">know I think that's important to</font><font color="#CCCCCC"> look</font>

1371
00:54:33,670 --> 00:54:43,090
<font color="#CCCCCC">for it you know how does it update</font><font color="#E5E5E5"> over</font>

1372
00:54:34,960 --> 00:54:44,140
<font color="#E5E5E5">time yeah any other questions all right</font>

1373
00:54:43,090 --> 00:54:47,520
<font color="#CCCCCC">thank you</font><font color="#E5E5E5"> very much everybody I</font>

1374
00:54:44,140 --> 00:54:47,520
<font color="#CCCCCC">appreciate the time Thanks</font>

1375
00:54:48,460 --> 00:54:50,520
<font color="#E5E5E5">you</font>

1376
00:54:56,980 --> 00:54:59,040
you

