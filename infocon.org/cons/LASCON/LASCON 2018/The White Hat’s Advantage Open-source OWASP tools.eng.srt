1
00:00:16,929 --> 00:00:21,650
let's talk about some<font color="#E5E5E5"> open-source</font><font color="#CCCCCC"> OWASA</font>

2
00:00:20,029 --> 00:00:23,989
tools to help<font color="#E5E5E5"> out with penetration</font>

3
00:00:21,650 --> 00:00:26,720
testing coverage<font color="#E5E5E5"> a little bit about me</font>

4
00:00:23,989 --> 00:00:31,220
my<font color="#CCCCCC"> name is Ken prahl I wear two hats I'm</font>

5
00:00:26,720 --> 00:00:32,839
the CTO for<font color="#CCCCCC"> Cody</font><font color="#E5E5E5"> X</font><font color="#CCCCCC"> Co DX is in a system</font>

6
00:00:31,220 --> 00:00:34,220
or<font color="#CCCCCC"> platform that allows you to</font><font color="#E5E5E5"> bring in</font>

7
00:00:32,840 --> 00:00:37,579
<font color="#CCCCCC">all of</font><font color="#E5E5E5"> your application security testing</font>

8
00:00:34,220 --> 00:00:39,949
activities so<font color="#E5E5E5"> static dynamic is manual</font>

9
00:00:37,579 --> 00:00:42,860
bring that all into a single<font color="#CCCCCC"> platform</font>

10
00:00:39,949 --> 00:00:44,989
<font color="#E5E5E5">you can correlate and deduplicate manage</font>

11
00:00:42,860 --> 00:00:46,940
all the findings<font color="#E5E5E5"> so we have a booth</font><font color="#CCCCCC"> here</font>

12
00:00:44,989 --> 00:00:49,159
at<font color="#E5E5E5"> last con feel free to stop</font><font color="#CCCCCC"> by and</font>

13
00:00:46,940 --> 00:00:51,589
learn some<font color="#E5E5E5"> more about</font><font color="#CCCCCC"> that</font>

14
00:00:49,159 --> 00:00:54,739
<font color="#CCCCCC">I'm also</font><font color="#E5E5E5"> the principal investigator</font><font color="#CCCCCC"> for</font>

15
00:00:51,589 --> 00:00:57,710
<font color="#CCCCCC">secure decisions secure decisions does</font>

16
00:00:54,739 --> 00:01:00,949
cyber R&D for the government and

17
00:00:57,710 --> 00:01:03,350
actually<font color="#E5E5E5"> Cody X was initially funded</font>

18
00:01:00,949 --> 00:01:05,869
through funding<font color="#CCCCCC"> from the government so</font>

19
00:01:03,350 --> 00:01:08,030
<font color="#E5E5E5">Department Homeland Security had Small</font>

20
00:01:05,869 --> 00:01:10,520
<font color="#E5E5E5">Business Innovation research contracts</font>

21
00:01:08,030 --> 00:01:12,020
where Cody X<font color="#E5E5E5"> Connors started out and</font>

22
00:01:10,520 --> 00:01:14,119
then we eventually spun that out<font color="#E5E5E5"> into a</font>

23
00:01:12,020 --> 00:01:16,039
separate company<font color="#E5E5E5"> the tools we'll be</font>

24
00:01:14,119 --> 00:01:21,679
<font color="#E5E5E5">talking about</font><font color="#CCCCCC"> today we're also sponsored</font>

25
00:01:16,040 --> 00:01:23,450
by DHS<font color="#CCCCCC"> and I am the project leader for</font>

26
00:01:21,679 --> 00:01:26,450
<font color="#E5E5E5">both of those called code pulse and the</font>

27
00:01:23,450 --> 00:01:28,939
attack surface detector my background is

28
00:01:26,450 --> 00:01:30,850
in in software development I was doing

29
00:01:28,939 --> 00:01:33,199
C++<font color="#E5E5E5"> development for custom software</font>

30
00:01:30,850 --> 00:01:37,818
<font color="#E5E5E5">actually for the parent company which is</font>

31
00:01:33,200 --> 00:01:39,319
applied visions<font color="#CCCCCC"> and about in 2000 I</font>

32
00:01:37,819 --> 00:01:41,719
<font color="#CCCCCC">started working under the</font><font color="#E5E5E5"> secure</font>

33
00:01:39,319 --> 00:01:43,639
<font color="#E5E5E5">decisions division doing</font><font color="#CCCCCC"> cybersecurity</font>

34
00:01:41,719 --> 00:01:45,798
research a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> in the network side</font><font color="#E5E5E5"> of</font>

35
00:01:43,639 --> 00:01:47,420
things particularly in<font color="#E5E5E5"> visualization</font><font color="#CCCCCC"> how</font>

36
00:01:45,799 --> 00:01:49,399
to make sense of<font color="#CCCCCC"> all the data that's</font>

37
00:01:47,420 --> 00:01:50,959
<font color="#E5E5E5">being</font><font color="#CCCCCC"> collected and a lot of that stuff</font>

38
00:01:49,399 --> 00:01:53,240
you'll see as<font color="#E5E5E5"> part of the presentation</font>

39
00:01:50,959 --> 00:01:56,679
<font color="#CCCCCC">today</font><font color="#E5E5E5"> it's all about</font><font color="#CCCCCC"> like how we make</font>

40
00:01:53,240 --> 00:01:56,679
this<font color="#E5E5E5"> stuff more usable and consumable</font>

41
00:01:57,039 --> 00:02:00,950
it's a little bit about the<font color="#CCCCCC"> agenda</font><font color="#E5E5E5"> I'm</font>

42
00:01:59,479 --> 00:02:03,170
gonna start<font color="#E5E5E5"> out just giving you a brief</font>

43
00:02:00,950 --> 00:02:06,579
<font color="#CCCCCC">overview of the two tools</font><font color="#E5E5E5"> we'll talk</font>

44
00:02:03,170 --> 00:02:09,440
about the white hat<font color="#E5E5E5"> penetration tester</font>

45
00:02:06,579 --> 00:02:11,810
<font color="#E5E5E5">you know what advantages they can have</font>

46
00:02:09,440 --> 00:02:13,400
and<font color="#CCCCCC"> how we</font><font color="#E5E5E5"> can sort of make things</font><font color="#CCCCCC"> a</font>

47
00:02:11,810 --> 00:02:15,200
little bit<font color="#E5E5E5"> better for them the typical</font>

48
00:02:13,400 --> 00:02:17,330
workflow for<font color="#CCCCCC"> a penetration tester</font><font color="#E5E5E5"> and</font>

49
00:02:15,200 --> 00:02:20,030
<font color="#CCCCCC">the importance</font><font color="#E5E5E5"> of understanding</font><font color="#CCCCCC"> the</font>

50
00:02:17,330 --> 00:02:22,220
attack surface and how that<font color="#E5E5E5"> fits</font><font color="#CCCCCC"> in then</font>

51
00:02:20,030 --> 00:02:24,290
we'll talk<font color="#E5E5E5"> about both of</font><font color="#CCCCCC"> the tools</font><font color="#E5E5E5"> os</font>

52
00:02:22,220 --> 00:02:26,540
code pulse<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> OS attack surface</font>

53
00:02:24,290 --> 00:02:28,620
detector what's their<font color="#E5E5E5"> challenges that</font>

54
00:02:26,540 --> 00:02:30,720
<font color="#E5E5E5">they address how it works and a short</font>

55
00:02:28,620 --> 00:02:33,239
for each<font color="#E5E5E5"> of those and then</font><font color="#CCCCCC"> finally wrap</font>

56
00:02:30,720 --> 00:02:34,470
up with you know<font color="#E5E5E5"> just some pointers</font><font color="#CCCCCC"> to</font>

57
00:02:33,239 --> 00:02:37,890
where you can<font color="#E5E5E5"> find some more</font><font color="#CCCCCC"> information</font>

58
00:02:34,470 --> 00:02:40,739
and some<font color="#E5E5E5"> QA in the end I hope that you</font>

59
00:02:37,890 --> 00:02:46,828
learn and see how we can make black box

60
00:02:40,739 --> 00:02:48,959
<font color="#E5E5E5">penetration testing less opaque all</font>

61
00:02:46,829 --> 00:02:51,360
right so the two tools<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to talk</font>

62
00:02:48,959 --> 00:02:53,760
about<font color="#E5E5E5"> today are lost code pulse and the</font>

63
00:02:51,360 --> 00:02:55,349
attack surface detector<font color="#E5E5E5"> I've been to you</font>

64
00:02:53,760 --> 00:02:56,670
know many<font color="#CCCCCC"> different talks and</font><font color="#E5E5E5"> a lot of</font>

65
00:02:55,349 --> 00:02:58,409
times there's<font color="#E5E5E5"> this projects that are</font>

66
00:02:56,670 --> 00:02:59,819
kind<font color="#E5E5E5"> of not really released yet or</font>

67
00:02:58,409 --> 00:03:02,700
<font color="#E5E5E5">they're up and coming these are both</font>

68
00:02:59,819 --> 00:03:05,280
<font color="#E5E5E5">mature projects code pulse is a lab</font>

69
00:03:02,700 --> 00:03:07,200
level<font color="#E5E5E5"> project</font><font color="#CCCCCC"> within</font><font color="#E5E5E5"> OAuth it's been</font>

70
00:03:05,280 --> 00:03:10,079
around<font color="#E5E5E5"> for about four</font><font color="#CCCCCC"> years we've</font>

71
00:03:07,200 --> 00:03:13,048
recently done<font color="#E5E5E5"> a lot more features</font><font color="#CCCCCC"> to it</font>

72
00:03:10,079 --> 00:03:14,849
and I'll go over<font color="#E5E5E5"> that</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> it's a way</font>

73
00:03:13,049 --> 00:03:16,200
<font color="#CCCCCC">of being</font><font color="#E5E5E5"> able to see what kind of code</font>

74
00:03:14,849 --> 00:03:19,200
<font color="#E5E5E5">coverage you're getting during your</font>

75
00:03:16,200 --> 00:03:21,629
testing activities in real time<font color="#E5E5E5"> the</font>

76
00:03:19,200 --> 00:03:23,280
attack surface detector is also a No Mas

77
00:03:21,629 --> 00:03:25,560
project is<font color="#CCCCCC"> really</font><font color="#E5E5E5"> recently made in a</font>

78
00:03:23,280 --> 00:03:27,299
<font color="#CCCCCC">loss project this builds off some of</font><font color="#E5E5E5"> the</font>

79
00:03:25,560 --> 00:03:28,799
<font color="#E5E5E5">work that denim group has done in the</font>

80
00:03:27,299 --> 00:03:31,859
past<font color="#E5E5E5"> we actually collaborated with them</font>

81
00:03:28,799 --> 00:03:34,169
on this research project<font color="#CCCCCC"> and security</font>

82
00:03:31,859 --> 00:03:35,700
<font color="#E5E5E5">has continued to evolve</font><font color="#CCCCCC"> the attack</font>

83
00:03:34,169 --> 00:03:37,349
surface detector<font color="#E5E5E5"> and add additional</font>

84
00:03:35,700 --> 00:03:39,388
features<font color="#CCCCCC"> which I'll talk about today the</font>

85
00:03:37,349 --> 00:03:41,069
<font color="#CCCCCC">overall</font><font color="#E5E5E5"> objective of the attack surface</font>

86
00:03:39,389 --> 00:03:44,669
detector is to<font color="#E5E5E5"> figure out the attack</font>

87
00:03:41,069 --> 00:03:48,720
surface and use<font color="#E5E5E5"> that to feed</font><font color="#CCCCCC"> into</font>

88
00:03:44,669 --> 00:03:50,970
existing tools like zap and<font color="#E5E5E5"> Bert so is</font>

89
00:03:48,720 --> 00:03:54,720
anyone here<font color="#E5E5E5"> concerned themselves a white</font>

90
00:03:50,970 --> 00:03:57,419
hat<font color="#E5E5E5"> pen tester or</font><font color="#CCCCCC"> weight have pen</font>

91
00:03:54,720 --> 00:04:00,329
testers anyone for<font color="#E5E5E5"> someone in the back</font>

92
00:03:57,419 --> 00:04:02,609
Google<font color="#E5E5E5"> also you know official hackers</font>

93
00:04:00,329 --> 00:04:03,660
and<font color="#E5E5E5"> OAuth terms</font><font color="#CCCCCC"> to the breakers people</font>

94
00:04:02,609 --> 00:04:06,720
that are trying to<font color="#E5E5E5"> break into</font>

95
00:04:03,660 --> 00:04:09,180
applications as opposed to builders<font color="#CCCCCC"> you</font>

96
00:04:06,720 --> 00:04:11,970
have plenty<font color="#E5E5E5"> of disadvantages over over</font>

97
00:04:09,180 --> 00:04:13,709
malicious counterparts you know

98
00:04:11,970 --> 00:04:15,269
attackers have all the time<font color="#CCCCCC"> in the world</font>

99
00:04:13,709 --> 00:04:17,370
<font color="#E5E5E5">and they just need to find one</font>

100
00:04:15,269 --> 00:04:19,289
vulnerability<font color="#CCCCCC"> where</font><font color="#E5E5E5"> white hat pen tester</font>

101
00:04:17,370 --> 00:04:20,699
<font color="#E5E5E5">they need to try and find all of the</font>

102
00:04:19,289 --> 00:04:23,070
vulnerabilities<font color="#E5E5E5"> and protect against it</font>

103
00:04:20,699 --> 00:04:24,389
and they<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have as much time and if</font>

104
00:04:23,070 --> 00:04:25,469
you're<font color="#CCCCCC"> working with</font><font color="#E5E5E5"> a development team</font>

105
00:04:24,389 --> 00:04:27,360
<font color="#CCCCCC">you know they're</font><font color="#E5E5E5"> going really fast</font>

106
00:04:25,470 --> 00:04:30,780
<font color="#E5E5E5">DevOps you know they're putting</font><font color="#CCCCCC"> out</font>

107
00:04:27,360 --> 00:04:32,180
releases<font color="#CCCCCC"> faster</font><font color="#E5E5E5"> and faster every day so</font>

108
00:04:30,780 --> 00:04:34,440
how do you keep up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> that you know</font>

109
00:04:32,180 --> 00:04:38,130
how did it's<font color="#E5E5E5"> a big challenge</font><font color="#CCCCCC"> for</font>

110
00:04:34,440 --> 00:04:40,409
penetration<font color="#E5E5E5"> testers</font><font color="#CCCCCC"> so there's a few</font>

111
00:04:38,130 --> 00:04:41,009
<font color="#CCCCCC">advantages that can be leveraged so if</font>

112
00:04:40,409 --> 00:04:43,979
you have ax

113
00:04:41,009 --> 00:04:45,240
<font color="#E5E5E5">to these server binaries</font><font color="#CCCCCC"> four-bike</font><font color="#E5E5E5"> code</font>

114
00:04:43,979 --> 00:04:46,438
and if<font color="#E5E5E5"> they have access to the source</font>

115
00:04:45,240 --> 00:04:48,119
code<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are some additional</font>

116
00:04:46,439 --> 00:04:50,149
<font color="#CCCCCC">capabilities and improvements</font><font color="#E5E5E5"> and</font>

117
00:04:48,119 --> 00:04:52,409
efficiencies that can<font color="#E5E5E5"> be made</font><font color="#CCCCCC"> with</font>

118
00:04:50,149 --> 00:04:53,969
<font color="#CCCCCC">access to those and even if you don't</font>

119
00:04:52,409 --> 00:04:56,490
<font color="#E5E5E5">have access</font><font color="#CCCCCC"> to that I'll talk</font><font color="#E5E5E5"> about some</font>

120
00:04:53,969 --> 00:04:57,569
<font color="#E5E5E5">other approaches that can be</font><font color="#CCCCCC"> used or you</font>

121
00:04:56,490 --> 00:05:02,939
can still make use of some<font color="#CCCCCC"> of these</font>

122
00:04:57,569 --> 00:05:07,559
capabilities<font color="#E5E5E5"> anyone have used</font><font color="#CCCCCC"> os app</font>

123
00:05:02,939 --> 00:05:10,409
<font color="#E5E5E5">before so this app is a freely available</font>

124
00:05:07,559 --> 00:05:12,869
tool from ojas it's a flagship project

125
00:05:10,409 --> 00:05:14,849
it allows you to<font color="#CCCCCC"> both manually or</font>

126
00:05:12,869 --> 00:05:21,229
<font color="#E5E5E5">automated testing against a web</font>

127
00:05:14,849 --> 00:05:23,099
application<font color="#CCCCCC"> about</font><font color="#E5E5E5"> burp awesome</font><font color="#CCCCCC"> burp is</font><font color="#E5E5E5"> a</font>

128
00:05:21,229 --> 00:05:26,008
commercial tool and there's a community

129
00:05:23,099 --> 00:05:28,259
<font color="#CCCCCC">version also</font><font color="#E5E5E5"> a low cost</font><font color="#CCCCCC"> professional</font>

130
00:05:26,009 --> 00:05:30,569
version both<font color="#E5E5E5"> really</font><font color="#CCCCCC"> really great tools</font>

131
00:05:28,259 --> 00:05:33,809
<font color="#E5E5E5">and we'll be using these tools and</font>

132
00:05:30,569 --> 00:05:35,249
demonstrations<font color="#E5E5E5"> today but what I'm gonna</font>

133
00:05:33,809 --> 00:05:36,539
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about also</font><font color="#E5E5E5"> applies to</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> doing</font>

134
00:05:35,249 --> 00:05:39,629
manual testing or if you're<font color="#E5E5E5"> using</font>

135
00:05:36,539 --> 00:05:42,719
commercial tools like<font color="#CCCCCC"> Nets</font><font color="#E5E5E5"> Parker or</font>

136
00:05:39,629 --> 00:05:44,669
Acunetix<font color="#E5E5E5"> or if you're</font><font color="#CCCCCC"> doing selenium</font>

137
00:05:42,719 --> 00:05:47,009
testing or just QA testing in general

138
00:05:44,669 --> 00:05:51,139
<font color="#CCCCCC">how can you see how much</font><font color="#E5E5E5"> coverage for</font>

139
00:05:47,009 --> 00:05:53,430
getting so let's go<font color="#E5E5E5"> over the the</font><font color="#CCCCCC"> typical</font>

140
00:05:51,139 --> 00:05:55,439
penetration testing<font color="#E5E5E5"> workflow you have</font>

141
00:05:53,430 --> 00:05:56,699
you know<font color="#E5E5E5"> this web application here</font>

142
00:05:55,439 --> 00:06:00,360
probably connects to some data

143
00:05:56,699 --> 00:06:02,939
repository typically<font color="#CCCCCC"> a penetration</font>

144
00:06:00,360 --> 00:06:04,979
tester will try and figure out the

145
00:06:02,939 --> 00:06:06,479
different user roles<font color="#E5E5E5"> to authenticate</font>

146
00:06:04,979 --> 00:06:07,859
<font color="#E5E5E5">right so if you can't authenticate to</font>

147
00:06:06,479 --> 00:06:09,359
<font color="#E5E5E5">the web app you're probably not going to</font>

148
00:06:07,860 --> 00:06:11,569
be able to test much of it you need<font color="#CCCCCC"> to</font>

149
00:06:09,360 --> 00:06:13,469
<font color="#E5E5E5">either</font><font color="#CCCCCC"> be provided or figure out how to</font>

150
00:06:11,569 --> 00:06:17,219
get<font color="#CCCCCC"> into</font><font color="#E5E5E5"> different parts of the</font>

151
00:06:13,469 --> 00:06:20,219
<font color="#CCCCCC">application I</font><font color="#E5E5E5"> then go through endpoint</font>

152
00:06:17,219 --> 00:06:21,779
enumeration a lot of times<font color="#E5E5E5"> you'll kind</font>

153
00:06:20,219 --> 00:06:23,159
of<font color="#E5E5E5"> just go through the</font><font color="#CCCCCC"> application go</font>

154
00:06:21,779 --> 00:06:24,300
through every link that you could find

155
00:06:23,159 --> 00:06:25,729
fill out the forms

156
00:06:24,300 --> 00:06:27,479
see if there's multiple<font color="#CCCCCC"> staged</font>

157
00:06:25,729 --> 00:06:28,919
Processing's that happen like if there's

158
00:06:27,479 --> 00:06:30,300
a checkout process<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to first</font>

159
00:06:28,919 --> 00:06:32,188
fill out<font color="#E5E5E5"> a form and go</font><font color="#CCCCCC"> within the next</font>

160
00:06:30,300 --> 00:06:35,129
<font color="#E5E5E5">page kind of go through</font><font color="#CCCCCC"> the application</font>

161
00:06:32,189 --> 00:06:36,809
<font color="#CCCCCC">and and exercise it and figure out all</font>

162
00:06:35,129 --> 00:06:40,110
the different entry points<font color="#CCCCCC"> and different</font>

163
00:06:36,809 --> 00:06:42,709
<font color="#E5E5E5">points that you</font><font color="#CCCCCC"> can you'll go from there</font>

164
00:06:40,110 --> 00:06:45,719
and<font color="#CCCCCC"> then a lot of</font><font color="#E5E5E5"> times you use</font>

165
00:06:42,709 --> 00:06:47,729
automated spider or<font color="#E5E5E5"> crawler so</font><font color="#CCCCCC"> Berkins</font>

166
00:06:45,719 --> 00:06:49,050
app you can once<font color="#E5E5E5"> you have this kind of</font>

167
00:06:47,729 --> 00:06:50,039
go<font color="#CCCCCC"> through the manual process then you</font>

168
00:06:49,050 --> 00:06:51,810
can<font color="#E5E5E5"> run these tools and they'll</font>

169
00:06:50,039 --> 00:06:52,830
automatically come and discover all of

170
00:06:51,810 --> 00:06:58,140
<font color="#E5E5E5">the different</font>

171
00:06:52,830 --> 00:07:00,120
<font color="#E5E5E5">URLs that they can see and then</font><font color="#CCCCCC"> you can</font>

172
00:06:58,140 --> 00:07:01,729
also do<font color="#E5E5E5"> brute forcing or forced browsing</font>

173
00:07:00,120 --> 00:07:04,020
<font color="#E5E5E5">so there are maybe things</font><font color="#CCCCCC"> that the</font>

174
00:07:01,730 --> 00:07:06,390
dynamic tools can't see from<font color="#E5E5E5"> the outside</font>

175
00:07:04,020 --> 00:07:08,820
<font color="#CCCCCC">so they you know continues like</font>

176
00:07:06,390 --> 00:07:10,800
<font color="#CCCCCC">dictionaries</font><font color="#E5E5E5"> to try and guess at other</font>

177
00:07:08,820 --> 00:07:13,170
URLs that<font color="#E5E5E5"> there might be like let's try</font>

178
00:07:10,800 --> 00:07:15,060
<font color="#E5E5E5">to put slash admin on on this URL and</font>

179
00:07:13,170 --> 00:07:17,700
see if we can get in even<font color="#E5E5E5"> because</font>

180
00:07:15,060 --> 00:07:19,770
anything that's unlinked<font color="#E5E5E5"> the you know</font>

181
00:07:17,700 --> 00:07:21,770
<font color="#E5E5E5">from the outside you really</font><font color="#CCCCCC"> can't can't</font>

182
00:07:19,770 --> 00:07:26,370
discover unless you're trying<font color="#CCCCCC"> gassers</font>

183
00:07:21,770 --> 00:07:28,620
get lucky<font color="#E5E5E5"> from the important in out pops</font>

184
00:07:26,370 --> 00:07:30,120
the attack surface<font color="#E5E5E5"> the attack surfaces</font>

185
00:07:28,620 --> 00:07:31,710
all of the entry<font color="#CCCCCC"> points</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> the</font>

186
00:07:30,120 --> 00:07:34,260
application what are the URLs<font color="#E5E5E5"> that this</font>

187
00:07:31,710 --> 00:07:35,940
application<font color="#CCCCCC"> is exposing what parameters</font>

188
00:07:34,260 --> 00:07:38,400
are is it expecting and we'll talk more

189
00:07:35,940 --> 00:07:39,780
<font color="#CCCCCC">about the attack surface in a bit and</font>

190
00:07:38,400 --> 00:07:41,219
<font color="#CCCCCC">then</font><font color="#E5E5E5"> once you have</font><font color="#CCCCCC"> that then</font><font color="#E5E5E5"> you can go</font>

191
00:07:39,780 --> 00:07:42,900
about<font color="#E5E5E5"> the vulnerability discovery</font>

192
00:07:41,220 --> 00:07:47,460
process whether it's doing passive

193
00:07:42,900 --> 00:07:50,219
active or<font color="#CCCCCC"> fuzzing so let's talk about</font>

194
00:07:47,460 --> 00:07:53,099
<font color="#E5E5E5">the attack surface let's use a home as</font>

195
00:07:50,220 --> 00:07:55,890
an analogy<font color="#E5E5E5"> so for home if you're you</font>

196
00:07:53,100 --> 00:07:57,510
<font color="#CCCCCC">know</font><font color="#E5E5E5"> worried about an intruder</font><font color="#CCCCCC"> what are</font>

197
00:07:55,890 --> 00:08:00,060
the different<font color="#CCCCCC"> ways that someone can get</font>

198
00:07:57,510 --> 00:08:01,920
into the house well they can check<font color="#E5E5E5"> the</font>

199
00:08:00,060 --> 00:08:03,380
front<font color="#E5E5E5"> door maybe that's unlocked and</font>

200
00:08:01,920 --> 00:08:05,580
they just walk right in<font color="#E5E5E5"> the front door</font>

201
00:08:03,380 --> 00:08:07,740
<font color="#CCCCCC">or maybe there's a side door</font><font color="#E5E5E5"> that's</font>

202
00:08:05,580 --> 00:08:10,080
that's available<font color="#E5E5E5"> for an entry or</font><font color="#CCCCCC"> maybe</font>

203
00:08:07,740 --> 00:08:12,210
there's an open window<font color="#CCCCCC"> to get into the</font>

204
00:08:10,080 --> 00:08:14,789
house<font color="#E5E5E5"> the same thing for an application</font>

205
00:08:12,210 --> 00:08:16,729
<font color="#E5E5E5">for an application you</font><font color="#CCCCCC"> have different</font>

206
00:08:14,790 --> 00:08:18,990
<font color="#E5E5E5">ways of getting in so maybe there's a</font>

207
00:08:16,730 --> 00:08:20,970
login<font color="#CCCCCC"> page that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to get into or</font>

208
00:08:18,990 --> 00:08:26,040
there's other points<font color="#E5E5E5"> of our other entry</font>

209
00:08:20,970 --> 00:08:27,330
points<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get into a web</font><font color="#CCCCCC"> application so</font>

210
00:08:26,040 --> 00:08:29,280
let's<font color="#CCCCCC"> take a look</font><font color="#E5E5E5"> at what kind of the</font>

211
00:08:27,330 --> 00:08:31,349
internals<font color="#E5E5E5"> of a house look at the</font>

212
00:08:29,280 --> 00:08:32,490
blueprint of it you know how that<font color="#E5E5E5"> open</font>

213
00:08:31,350 --> 00:08:36,600
window but that's just kind<font color="#CCCCCC"> of the</font>

214
00:08:32,490 --> 00:08:38,070
starting<font color="#E5E5E5"> point for forgetting and right</font>

215
00:08:36,600 --> 00:08:39,540
so you need<font color="#E5E5E5"> to know like what are you</font>

216
00:08:38,070 --> 00:08:41,190
<font color="#CCCCCC">trying to protect and where is</font><font color="#E5E5E5"> that so</font>

217
00:08:39,539 --> 00:08:43,319
you have<font color="#E5E5E5"> to go from</font><font color="#CCCCCC"> that open window to</font>

218
00:08:41,190 --> 00:08:44,580
<font color="#CCCCCC">the sensitive information</font><font color="#E5E5E5"> that you try</font>

219
00:08:43,320 --> 00:08:46,830
and<font color="#CCCCCC"> ever check the same thing with a web</font>

220
00:08:44,580 --> 00:08:48,330
application<font color="#CCCCCC"> you know there's different</font>

221
00:08:46,830 --> 00:08:49,920
<font color="#E5E5E5">paths that you can take through the web</font>

222
00:08:48,330 --> 00:08:54,840
application<font color="#E5E5E5"> to get at</font><font color="#CCCCCC"> that sensitive</font>

223
00:08:49,920 --> 00:08:56,400
<font color="#CCCCCC">information but you</font><font color="#E5E5E5"> know a web app isn't</font>

224
00:08:54,840 --> 00:08:57,660
that simple it's more like this

225
00:08:56,400 --> 00:08:59,819
it's more like more<font color="#E5E5E5"> like a skyscraper</font>

226
00:08:57,660 --> 00:09:02,819
<font color="#CCCCCC">right it's it's it's much more complex</font>

227
00:08:59,820 --> 00:09:04,410
<font color="#CCCCCC">and</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> just a simple blueprint</font><font color="#E5E5E5"> but</font>

228
00:09:02,820 --> 00:09:06,600
<font color="#E5E5E5">you probably have something more like</font>

229
00:09:04,410 --> 00:09:08,069
this<font color="#E5E5E5"> or you know many floors</font>

230
00:09:06,600 --> 00:09:10,230
have to go through so you know looking

231
00:09:08,069 --> 00:09:13,170
at<font color="#CCCCCC"> something</font><font color="#E5E5E5"> like this how</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> you</font>

232
00:09:10,230 --> 00:09:15,209
figure out how much coverage<font color="#E5E5E5"> you're</font>

233
00:09:13,170 --> 00:09:16,920
getting for an<font color="#E5E5E5"> application of this size</font>

234
00:09:15,209 --> 00:09:18,380
right just massive<font color="#E5E5E5"> how do you keep</font><font color="#CCCCCC"> track</font>

235
00:09:16,920 --> 00:09:20,939
<font color="#CCCCCC">of that as you're going</font><font color="#E5E5E5"> through the app</font>

236
00:09:18,380 --> 00:09:26,310
<font color="#E5E5E5">so that's that's</font><font color="#CCCCCC"> why we created code</font>

237
00:09:20,940 --> 00:09:29,190
pulse so if you look at on Wikipedia for

238
00:09:26,310 --> 00:09:31,920
at the web application<font color="#E5E5E5"> security scanner</font>

239
00:09:29,190 --> 00:09:35,100
entry<font color="#E5E5E5"> you'll you'll you'll</font><font color="#CCCCCC"> see this</font><font color="#E5E5E5"> in</font>

240
00:09:31,920 --> 00:09:37,110
there<font color="#E5E5E5"> and it wasn't put in by me</font><font color="#CCCCCC"> the</font>

241
00:09:35,100 --> 00:09:38,819
<font color="#E5E5E5">penetration tester should look at the</font>

242
00:09:37,110 --> 00:09:41,190
coverage of<font color="#E5E5E5"> the web application or a</font>

243
00:09:38,819 --> 00:09:43,949
bits attack surface to know if it if<font color="#E5E5E5"> the</font>

244
00:09:41,190 --> 00:09:45,690
tool was configured<font color="#E5E5E5"> correctly or is able</font>

245
00:09:43,949 --> 00:09:48,359
<font color="#E5E5E5">to understand the web application so</font>

246
00:09:45,690 --> 00:09:50,670
that's<font color="#E5E5E5"> a really important part in in</font>

247
00:09:48,360 --> 00:09:53,040
running<font color="#E5E5E5"> these tools and if you're</font>

248
00:09:50,670 --> 00:09:55,259
running<font color="#E5E5E5"> a dynamic tool it can tell you</font>

249
00:09:53,040 --> 00:09:56,699
all the<font color="#CCCCCC"> endpoints that</font><font color="#E5E5E5"> it sees but it</font>

250
00:09:55,259 --> 00:10:01,790
doesn't know what it doesn't<font color="#E5E5E5"> know right</font>

251
00:09:56,699 --> 00:10:04,709
so how can<font color="#E5E5E5"> you help you measure that so</font>

252
00:10:01,790 --> 00:10:08,550
code<font color="#CCCCCC"> post was designed</font><font color="#E5E5E5"> to meet these</font>

253
00:10:04,709 --> 00:10:11,189
challenges<font color="#E5E5E5"> you know when you're doing</font>

254
00:10:08,550 --> 00:10:12,269
<font color="#CCCCCC">your</font><font color="#E5E5E5"> testing manual automated how much</font>

255
00:10:11,189 --> 00:10:12,990
of the application<font color="#E5E5E5"> did you actually</font>

256
00:10:12,269 --> 00:10:15,269
<font color="#E5E5E5">cover</font>

257
00:10:12,990 --> 00:10:18,360
<font color="#E5E5E5">did you reach all the app and what</font>

258
00:10:15,269 --> 00:10:20,069
percentage how you know<font color="#E5E5E5"> for the</font>

259
00:10:18,360 --> 00:10:21,839
accidents just<font color="#E5E5E5"> performed which part of</font>

260
00:10:20,069 --> 00:10:23,310
the source<font color="#E5E5E5"> code were executed so as</font>

261
00:10:21,839 --> 00:10:25,259
you're playing with the app as you're

262
00:10:23,310 --> 00:10:27,089
trying<font color="#E5E5E5"> to get to</font><font color="#CCCCCC"> different areas or like</font>

263
00:10:25,259 --> 00:10:29,250
<font color="#CCCCCC">you're looking</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> house scenarios</font>

264
00:10:27,089 --> 00:10:31,259
you putting a<font color="#CCCCCC"> different input what are</font>

265
00:10:29,250 --> 00:10:32,880
the different ways<font color="#CCCCCC"> you can go and how</font>

266
00:10:31,259 --> 00:10:34,649
<font color="#E5E5E5">can</font><font color="#CCCCCC"> you how can</font><font color="#E5E5E5"> you see this how can you</font>

267
00:10:32,880 --> 00:10:37,889
see how your<font color="#E5E5E5"> input is affecting the</font>

268
00:10:34,649 --> 00:10:40,110
execution<font color="#E5E5E5"> of the code which tools are</font>

269
00:10:37,889 --> 00:10:42,360
getting<font color="#E5E5E5"> better coverage you know so you</font>

270
00:10:40,110 --> 00:10:44,519
try<font color="#CCCCCC"> zap you try Ferb maybe you're</font>

271
00:10:42,360 --> 00:10:45,689
evaluating commercial tools<font color="#E5E5E5"> which ones</font>

272
00:10:44,519 --> 00:10:48,810
are giving you better coverage for

273
00:10:45,689 --> 00:10:51,089
combinations of coverage which testers

274
00:10:48,810 --> 00:10:53,130
are<font color="#E5E5E5"> getting better coverage so</font><font color="#CCCCCC"> you hire</font>

275
00:10:51,089 --> 00:10:55,319
some outside pen testing<font color="#CCCCCC"> organization</font>

276
00:10:53,130 --> 00:10:56,850
<font color="#E5E5E5">and how much coverage</font><font color="#CCCCCC"> I'm I'm just</font>

277
00:10:55,319 --> 00:10:59,939
testing<font color="#E5E5E5"> today actually view or you have</font>

278
00:10:56,850 --> 00:11:01,980
a internal team you<font color="#E5E5E5"> want to see you know</font>

279
00:10:59,939 --> 00:11:03,300
how well how<font color="#E5E5E5"> long well for more coverage</font>

280
00:11:01,980 --> 00:11:06,750
perspective<font color="#E5E5E5"> they're getting you can use</font>

281
00:11:03,300 --> 00:11:08,339
this tool how can you tune the tool to

282
00:11:06,750 --> 00:11:09,899
<font color="#CCCCCC">get better dust</font><font color="#E5E5E5"> test coverage so you</font>

283
00:11:08,339 --> 00:11:11,220
<font color="#CCCCCC">know each of these tools</font><font color="#E5E5E5"> have a lot of</font>

284
00:11:09,899 --> 00:11:14,880
<font color="#E5E5E5">different</font><font color="#CCCCCC"> attributes a lot of different</font>

285
00:11:11,220 --> 00:11:17,160
<font color="#CCCCCC">properties to</font><font color="#E5E5E5"> get better results</font><font color="#CCCCCC"> you</font>

286
00:11:14,880 --> 00:11:18,860
know this can<font color="#E5E5E5"> be used to help</font><font color="#CCCCCC"> improve</font>

287
00:11:17,160 --> 00:11:20,990
that<font color="#E5E5E5"> and get</font>

288
00:11:18,860 --> 00:11:22,730
and then finally communicating<font color="#CCCCCC"> the</font>

289
00:11:20,990 --> 00:11:26,089
testing coverage<font color="#E5E5E5"> to others you know so</font>

290
00:11:22,730 --> 00:11:28,579
you<font color="#CCCCCC"> did your tests you know how well how</font>

291
00:11:26,089 --> 00:11:32,000
well<font color="#E5E5E5"> did you do so help with coverage</font>

292
00:11:28,579 --> 00:11:35,719
gaps<font color="#E5E5E5"> help with tuning the tools and help</font>

293
00:11:32,000 --> 00:11:38,300
with communicating<font color="#E5E5E5"> results so code pulse</font>

294
00:11:35,720 --> 00:11:40,310
<font color="#E5E5E5">is code coverage tool now you probably</font>

295
00:11:38,300 --> 00:11:43,729
have<font color="#CCCCCC"> seen other code coverage tools</font>

296
00:11:40,310 --> 00:11:45,469
<font color="#CCCCCC">before I think what you see in a lot of</font>

297
00:11:43,730 --> 00:11:47,180
<font color="#E5E5E5">the other tools is</font><font color="#CCCCCC"> you do your</font><font color="#E5E5E5"> testing</font>

298
00:11:45,470 --> 00:11:49,430
and<font color="#E5E5E5"> then you get</font><font color="#CCCCCC"> a code coverage report</font>

299
00:11:47,180 --> 00:11:50,810
at the end code pulse is a<font color="#E5E5E5"> little</font>

300
00:11:49,430 --> 00:11:54,739
different code pulse is built for

301
00:11:50,810 --> 00:11:57,380
<font color="#E5E5E5">penetration testing activities so it's</font>

302
00:11:54,740 --> 00:11:59,300
kind of geared toward for that<font color="#E5E5E5"> and it's</font>

303
00:11:57,380 --> 00:12:00,890
in<font color="#CCCCCC"> real-time which I haven't</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> seen</font>

304
00:11:59,300 --> 00:12:03,500
any other<font color="#E5E5E5"> tool that</font><font color="#CCCCCC"> it's in</font><font color="#E5E5E5"> real-time</font>

305
00:12:00,890 --> 00:12:06,199
providing feedback as<font color="#E5E5E5"> you're testing and</font>

306
00:12:03,500 --> 00:12:07,970
it's very visual<font color="#CCCCCC"> so the old adage that a</font>

307
00:12:06,200 --> 00:12:10,190
picture's worth a thousand words is very

308
00:12:07,970 --> 00:12:11,899
<font color="#CCCCCC">true and</font><font color="#E5E5E5"> my background</font><font color="#CCCCCC"> is in information</font>

309
00:12:10,190 --> 00:12:15,140
visualization<font color="#E5E5E5"> so if we can provide a</font>

310
00:12:11,899 --> 00:12:17,540
picture<font color="#E5E5E5"> that can portray information in</font>

311
00:12:15,140 --> 00:12:20,120
a<font color="#E5E5E5"> visual way that goes a long way in</font>

312
00:12:17,540 --> 00:12:22,160
communicating results<font color="#E5E5E5"> to others it's</font>

313
00:12:20,120 --> 00:12:24,260
also very<font color="#E5E5E5"> scalable so I like it we</font><font color="#CCCCCC"> have</font>

314
00:12:22,160 --> 00:12:26,120
an application<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> 2 million</font><font color="#E5E5E5"> lines of</font>

315
00:12:24,260 --> 00:12:29,300
code<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> show the code coverage on the</font>

316
00:12:26,120 --> 00:12:32,750
single window<font color="#E5E5E5"> of the whole app you know</font>

317
00:12:29,300 --> 00:12:34,459
it's really<font color="#CCCCCC"> really scale so in a</font>

318
00:12:32,750 --> 00:12:36,110
<font color="#E5E5E5">nutshell code code pulse is a real-time</font>

319
00:12:34,459 --> 00:12:39,649
<font color="#E5E5E5">code coverage visualization tool for</font>

320
00:12:36,110 --> 00:12:43,670
<font color="#E5E5E5">penetration testing activities how it</font>

321
00:12:39,649 --> 00:12:45,470
works<font color="#CCCCCC"> so we have the pen tester looking</font>

322
00:12:43,670 --> 00:12:49,490
you<font color="#E5E5E5"> know working with</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> application in</font>

323
00:12:45,470 --> 00:12:50,990
this<font color="#CCCCCC"> case it's</font><font color="#E5E5E5"> webgoat typically it's a</font>

324
00:12:49,490 --> 00:12:54,230
black box perspective they don't<font color="#CCCCCC"> know</font>

325
00:12:50,990 --> 00:12:56,510
the internals<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the application but</font>

326
00:12:54,230 --> 00:12:58,640
<font color="#E5E5E5">with code pulse you install an agent</font>

327
00:12:56,510 --> 00:13:01,279
within<font color="#E5E5E5"> the application so if people are</font>

328
00:12:58,640 --> 00:13:04,279
familiar<font color="#E5E5E5"> with</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> technology it's a very</font>

329
00:13:01,279 --> 00:13:06,140
<font color="#E5E5E5">similar concept</font><font color="#CCCCCC"> we support Java and.net</font>

330
00:13:04,279 --> 00:13:08,510
<font color="#CCCCCC">so you install this agent in your</font>

331
00:13:06,140 --> 00:13:11,269
application<font color="#E5E5E5"> and then with that</font><font color="#CCCCCC"> agent we</font>

332
00:13:08,510 --> 00:13:13,250
can keep track<font color="#CCCCCC"> of all the testing</font>

333
00:13:11,269 --> 00:13:14,839
activity<font color="#E5E5E5"> that's going on</font><font color="#CCCCCC"> and provide a</font>

334
00:13:13,250 --> 00:13:19,399
<font color="#CCCCCC">real-time code coverage information</font><font color="#E5E5E5"> back</font>

335
00:13:14,839 --> 00:13:23,029
to the<font color="#E5E5E5"> penetration tester we call this</font>

336
00:13:19,399 --> 00:13:24,290
glass box<font color="#CCCCCC"> testing because now you'll be</font>

337
00:13:23,029 --> 00:13:25,420
able to see the<font color="#E5E5E5"> inside of</font><font color="#CCCCCC"> the</font>

338
00:13:24,290 --> 00:13:28,569
application<font color="#CCCCCC"> as</font><font color="#E5E5E5"> you're testing</font>

339
00:13:25,420 --> 00:13:30,670
<font color="#CCCCCC">is</font><font color="#E5E5E5"> no longer a black box so provides</font>

340
00:13:28,570 --> 00:13:34,090
transparency<font color="#E5E5E5"> so you can see a lot more</font>

341
00:13:30,670 --> 00:13:35,979
<font color="#E5E5E5">information instant feedback and again</font>

342
00:13:34,090 --> 00:13:39,970
helping with tuning your testing

343
00:13:35,980 --> 00:13:43,360
activities so this is this<font color="#E5E5E5"> is this is</font>

344
00:13:39,970 --> 00:13:45,280
code pulse<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the this</font><font color="#CCCCCC"> is what is</font>

345
00:13:43,360 --> 00:13:47,560
called<font color="#E5E5E5"> a tree map each of these boxes</font>

346
00:13:45,280 --> 00:13:50,560
<font color="#E5E5E5">represent a method within this</font>

347
00:13:47,560 --> 00:13:52,900
application<font color="#E5E5E5"> and its size by how big that</font>

348
00:13:50,560 --> 00:13:56,229
method is and so as you<font color="#E5E5E5"> interact with</font>

349
00:13:52,900 --> 00:13:58,120
the application<font color="#E5E5E5"> the boxes will light up</font>

350
00:13:56,230 --> 00:14:00,550
to indicate<font color="#E5E5E5"> that you've hit that method</font>

351
00:13:58,120 --> 00:14:02,080
and so<font color="#E5E5E5"> just like the blueprint of</font><font color="#CCCCCC"> the</font>

352
00:14:00,550 --> 00:14:04,120
house that<font color="#E5E5E5"> we saw the little floor plan</font>

353
00:14:02,080 --> 00:14:05,470
this is kind of a blueprint for<font color="#E5E5E5"> the</font>

354
00:14:04,120 --> 00:14:07,810
application<font color="#E5E5E5"> the makeup of the</font>

355
00:14:05,470 --> 00:14:09,570
application all of the classes and

356
00:14:07,810 --> 00:14:11,890
methods that make up the application<font color="#E5E5E5"> and</font>

357
00:14:09,570 --> 00:14:15,580
you can<font color="#E5E5E5"> see in real</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> how much</font>

358
00:14:11,890 --> 00:14:18,880
coverage<font color="#E5E5E5"> you're getting so looking at</font>

359
00:14:15,580 --> 00:14:21,970
some<font color="#E5E5E5"> coverage scenarios</font><font color="#CCCCCC"> in this case I</font>

360
00:14:18,880 --> 00:14:25,450
took<font color="#CCCCCC"> web goats and wasps projects I</font>

361
00:14:21,970 --> 00:14:29,050
installed our code pulse<font color="#CCCCCC"> agent in it and</font>

362
00:14:25,450 --> 00:14:33,580
I did some testing<font color="#CCCCCC"> so I used OAuth SAP</font>

363
00:14:29,050 --> 00:14:36,010
in this case<font color="#E5E5E5"> so my first thing that I</font>

364
00:14:33,580 --> 00:14:39,540
did with with this is I just<font color="#E5E5E5"> started up</font>

365
00:14:36,010 --> 00:14:45,430
<font color="#CCCCCC">zap I pointed it</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> web goat I did a</font>

366
00:14:39,540 --> 00:14:46,990
spider<font color="#E5E5E5"> and an active scan and you know</font>

367
00:14:45,430 --> 00:14:48,849
this is this is web<font color="#CCCCCC"> goat this is all the</font>

368
00:14:46,990 --> 00:14:50,770
classes it's<font color="#CCCCCC"> broken down by the</font>

369
00:14:48,850 --> 00:14:54,120
namespaces<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> like the sequel</font>

370
00:14:50,770 --> 00:14:54,120
injection classes that they<font color="#CCCCCC"> have</font>

371
00:14:56,160 --> 00:15:01,240
<font color="#CCCCCC">something that's cut off a little bit</font>

372
00:14:58,210 --> 00:15:06,970
<font color="#E5E5E5">but up here one of</font><font color="#CCCCCC"> the boxes was hit</font>

373
00:15:01,240 --> 00:15:11,440
which is<font color="#E5E5E5"> the index.jsp</font><font color="#CCCCCC"> also covered the</font>

374
00:15:06,970 --> 00:15:14,860
login dot JSP<font color="#E5E5E5"> and the logging controller</font>

375
00:15:11,440 --> 00:15:18,190
class<font color="#CCCCCC"> so you know if I didn't you know</font>

376
00:15:14,860 --> 00:15:21,340
<font color="#CCCCCC">it</font><font color="#E5E5E5"> I know</font><font color="#CCCCCC"> for my testing I like I did</font>

377
00:15:18,190 --> 00:15:24,460
everything I gave<font color="#E5E5E5"> zap the URL web</font><font color="#CCCCCC"> goat</font><font color="#E5E5E5"> I</font>

378
00:15:21,340 --> 00:15:26,410
let it spider I let it scan<font color="#E5E5E5"> but really I</font>

379
00:15:24,460 --> 00:15:28,930
didn't cover any really much to the app

380
00:15:26,410 --> 00:15:30,250
I only<font color="#E5E5E5"> covered the login page so but you</font>

381
00:15:28,930 --> 00:15:32,620
by<font color="#E5E5E5"> looking at this picture I would be</font>

382
00:15:30,250 --> 00:15:34,180
able<font color="#E5E5E5"> to quickly see the fact that I</font><font color="#CCCCCC"> I</font>

383
00:15:32,620 --> 00:15:37,360
didn't<font color="#E5E5E5"> I didn't really cover much of</font><font color="#CCCCCC"> the</font>

384
00:15:34,180 --> 00:15:39,010
app<font color="#E5E5E5"> so then I didn't I</font>

385
00:15:37,360 --> 00:15:41,200
took that<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little further and I said</font>

386
00:15:39,010 --> 00:15:44,290
<font color="#E5E5E5">okay let me login so I</font><font color="#CCCCCC"> logged</font><font color="#E5E5E5"> in with</font>

387
00:15:41,200 --> 00:15:45,970
<font color="#E5E5E5">the I think the admin password ran the</font>

388
00:15:44,290 --> 00:15:48,099
spider again<font color="#E5E5E5"> and I ran an active scan</font>

389
00:15:45,970 --> 00:15:50,260
and now you know some<font color="#E5E5E5"> more things were</font>

390
00:15:48,100 --> 00:15:51,850
<font color="#CCCCCC">hit I got a little bit</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> coverage in</font>

391
00:15:50,260 --> 00:15:54,010
this case and I can see that<font color="#CCCCCC"> visually</font>

392
00:15:51,850 --> 00:15:56,950
and<font color="#E5E5E5"> I thought well</font><font color="#CCCCCC"> maybe I should try</font>

393
00:15:54,010 --> 00:15:59,650
<font color="#CCCCCC">and</font><font color="#E5E5E5"> navigate</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> webgoat to try and</font>

394
00:15:56,950 --> 00:16:01,180
you know let Zack know about some of the

395
00:15:59,650 --> 00:16:02,860
pages<font color="#CCCCCC"> that it wasn't able to find</font><font color="#E5E5E5"> and</font>

396
00:16:01,180 --> 00:16:05,020
then I got you know a much better

397
00:16:02,860 --> 00:16:08,290
picture<font color="#E5E5E5"> so you can see how this was able</font>

398
00:16:05,020 --> 00:16:09,400
<font color="#CCCCCC">to</font><font color="#E5E5E5"> help me tune my testing and overcome</font>

399
00:16:08,290 --> 00:16:11,620
some<font color="#CCCCCC"> of the things that I talked about</font>

400
00:16:09,400 --> 00:16:13,180
<font color="#CCCCCC">earlier where you know making sure that</font>

401
00:16:11,620 --> 00:16:17,290
<font color="#CCCCCC">you have the logins to get into</font>

402
00:16:13,180 --> 00:16:18,609
different<font color="#E5E5E5"> pages</font><font color="#CCCCCC"> and being able you</font><font color="#E5E5E5"> know</font>

403
00:16:17,290 --> 00:16:20,740
going through the kind of<font color="#E5E5E5"> that manual</font>

404
00:16:18,610 --> 00:16:22,090
process where you're navigating through

405
00:16:20,740 --> 00:16:23,860
the application to get<font color="#E5E5E5"> better coverage</font>

406
00:16:22,090 --> 00:16:26,800
<font color="#CCCCCC">so now you know</font><font color="#E5E5E5"> what this tool</font><font color="#CCCCCC"> is able</font>

407
00:16:23,860 --> 00:16:30,190
to to<font color="#E5E5E5"> use that to improve my testing</font>

408
00:16:26,800 --> 00:16:31,569
coverage and you can also see<font color="#E5E5E5"> things</font>

409
00:16:30,190 --> 00:16:34,360
that we're still missed so like<font color="#E5E5E5"> this</font>

410
00:16:31,570 --> 00:16:36,580
<font color="#CCCCCC">refresh DB screen is a method</font><font color="#E5E5E5"> within web</font>

411
00:16:34,360 --> 00:16:38,380
<font color="#CCCCCC">built I didn't go to I guess I didn't go</font>

412
00:16:36,580 --> 00:16:40,960
to that<font color="#E5E5E5"> page where there's a page within</font>

413
00:16:38,380 --> 00:16:42,640
web go where you<font color="#E5E5E5"> can if your admin you</font>

414
00:16:40,960 --> 00:16:44,110
can<font color="#E5E5E5"> kind of refresh the whole database</font><font color="#CCCCCC"> I</font>

415
00:16:42,640 --> 00:16:45,460
I didn't cover<font color="#CCCCCC"> that part of the</font>

416
00:16:44,110 --> 00:16:48,850
application<font color="#CCCCCC"> I would</font><font color="#E5E5E5"> be able to see that</font>

417
00:16:45,460 --> 00:16:50,560
by interacting with<font color="#CCCCCC"> this so you can</font><font color="#E5E5E5"> see</font>

418
00:16:48,850 --> 00:16:52,750
here you<font color="#E5E5E5"> know these are the three scans</font>

419
00:16:50,560 --> 00:16:59,109
that<font color="#E5E5E5"> we're done I'm able to see</font><font color="#CCCCCC"> visually</font>

420
00:16:52,750 --> 00:17:02,560
how<font color="#E5E5E5"> I was able to improve my testing so</font>

421
00:16:59,110 --> 00:17:04,990
you can also use<font color="#CCCCCC"> Kodiaks to compare</font>

422
00:17:02,560 --> 00:17:06,220
different<font color="#CCCCCC"> types of testing</font><font color="#E5E5E5"> that you're</font>

423
00:17:04,990 --> 00:17:08,950
<font color="#E5E5E5">doing so in this case I'm looking at</font>

424
00:17:06,220 --> 00:17:11,620
manual and automated<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> that's</font>

425
00:17:08,950 --> 00:17:13,420
in black was found by both<font color="#E5E5E5"> techniques it</font>

426
00:17:11,619 --> 00:17:15,429
was found by<font color="#E5E5E5"> both manual and automated</font>

427
00:17:13,420 --> 00:17:17,320
scans<font color="#E5E5E5"> and the things that are in green</font>

428
00:17:15,430 --> 00:17:18,430
were just found during my<font color="#E5E5E5"> manual testing</font>

429
00:17:17,319 --> 00:17:22,990
and then the things in blue were found

430
00:17:18,430 --> 00:17:24,790
just<font color="#E5E5E5"> by my automated testing you can</font>

431
00:17:22,990 --> 00:17:27,040
also use it to<font color="#E5E5E5"> compare tools so you know</font>

432
00:17:24,790 --> 00:17:28,510
to<font color="#E5E5E5"> run you know one tool and run another</font>

433
00:17:27,040 --> 00:17:30,760
tool and see how<font color="#E5E5E5"> much coverage you're</font>

434
00:17:28,510 --> 00:17:32,830
getting<font color="#E5E5E5"> between the different two</font>

435
00:17:30,760 --> 00:17:36,040
different<font color="#CCCCCC"> types of tools</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> you know</font>

436
00:17:32,830 --> 00:17:39,580
the black is overlap the purple is<font color="#CCCCCC"> tool</font>

437
00:17:36,040 --> 00:17:41,920
be in the<font color="#CCCCCC"> Greens tool a or compare</font>

438
00:17:39,580 --> 00:17:44,169
testers<font color="#E5E5E5"> so you know you have to kind of</font>

439
00:17:41,920 --> 00:17:46,060
penetration<font color="#E5E5E5"> testers that you want to see</font>

440
00:17:44,170 --> 00:17:48,580
how much coverage<font color="#CCCCCC"> that getting you can</font>

441
00:17:46,060 --> 00:17:50,490
you can do that<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> those</font><font color="#E5E5E5"> are just</font>

442
00:17:48,580 --> 00:17:53,340
<font color="#E5E5E5">kind of different</font><font color="#CCCCCC"> scenarios that</font><font color="#E5E5E5"> can be</font>

443
00:17:50,490 --> 00:17:55,970
they use<font color="#CCCCCC"> alright let's jump into</font><font color="#E5E5E5"> a</font>

444
00:17:53,340 --> 00:17:55,970
demonstration

445
00:17:56,660 --> 00:18:03,030
this is contoso University which is a

446
00:18:00,350 --> 00:18:07,500
sample application<font color="#CCCCCC"> from</font><font color="#E5E5E5"> Microsoft on how</font>

447
00:18:03,030 --> 00:18:09,870
to<font color="#E5E5E5"> build an asp.net MVC application it's</font>

448
00:18:07,500 --> 00:18:12,600
on a basic app or you have departments

449
00:18:09,870 --> 00:18:19,739
courses instructors and students you can

450
00:18:12,600 --> 00:18:26,689
add delete<font color="#CCCCCC"> and</font><font color="#E5E5E5"> edit yeah so that's the</font>

451
00:18:19,740 --> 00:18:26,690
app here<font color="#CCCCCC"> close out</font>

452
00:18:28,590 --> 00:18:35,730
and so this is code pulse I've given in

453
00:18:30,899 --> 00:18:39,120
<font color="#E5E5E5">this</font><font color="#CCCCCC"> case I've given code</font><font color="#E5E5E5"> pulse the the</font>

454
00:18:35,730 --> 00:18:43,740
<font color="#CCCCCC">dll's and source</font><font color="#E5E5E5"> code for the contoso</font>

455
00:18:39,120 --> 00:18:46,830
<font color="#CCCCCC">university application it has generated</font>

456
00:18:43,740 --> 00:18:48,870
<font color="#E5E5E5">this application inventory which</font>

457
00:18:46,830 --> 00:18:52,139
represents<font color="#E5E5E5"> all of the kind of namespaces</font>

458
00:18:48,870 --> 00:18:54,658
within the<font color="#CCCCCC"> canto so university app we've</font>

459
00:18:52,139 --> 00:18:56,729
also run<font color="#CCCCCC"> dependency check against</font><font color="#E5E5E5"> this</font>

460
00:18:54,659 --> 00:18:58,200
<font color="#CCCCCC">application we have that integrated</font>

461
00:18:56,730 --> 00:19:00,149
that's another<font color="#CCCCCC"> a wasp project where it</font>

462
00:18:58,200 --> 00:19:02,249
<font color="#E5E5E5">allows you to see vulnerable components</font>

463
00:19:00,149 --> 00:19:04,439
that you might be using<font color="#E5E5E5"> for example you</font>

464
00:19:02,249 --> 00:19:06,360
know like using<font color="#E5E5E5"> an old version</font><font color="#CCCCCC"> of struts</font>

465
00:19:04,440 --> 00:19:08,879
this can be<font color="#CCCCCC"> helpful for a penetration</font>

466
00:19:06,360 --> 00:19:10,590
tester because these are different ways

467
00:19:08,879 --> 00:19:11,730
<font color="#CCCCCC">that someone you can get into an</font>

468
00:19:10,590 --> 00:19:14,009
application<font color="#E5E5E5"> right so if you know that</font>

469
00:19:11,730 --> 00:19:15,419
this app<font color="#E5E5E5"> is using a vulnerable version</font>

470
00:19:14,009 --> 00:19:21,629
of a particular library<font color="#E5E5E5"> you can then try</font>

471
00:19:15,419 --> 00:19:24,149
and exploit that vulnerability<font color="#E5E5E5"> so I can</font>

472
00:19:21,629 --> 00:19:27,149
check<font color="#E5E5E5"> off you know I checked off the</font>

473
00:19:24,149 --> 00:19:28,639
contoso<font color="#CCCCCC"> University namespace</font><font color="#E5E5E5"> and you</font>

474
00:19:27,149 --> 00:19:30,840
know I see we see a bunch of boxes<font color="#CCCCCC"> here</font>

475
00:19:28,639 --> 00:19:32,039
<font color="#E5E5E5">that represent all the different</font><font color="#CCCCCC"> methods</font>

476
00:19:30,840 --> 00:19:34,590
if you see like there's<font color="#E5E5E5"> this migration</font>

477
00:19:32,039 --> 00:19:37,440
<font color="#E5E5E5">class or</font><font color="#CCCCCC"> namespace</font><font color="#E5E5E5"> these are all the</font>

478
00:19:34,590 --> 00:19:39,418
<font color="#CCCCCC">methods</font><font color="#E5E5E5"> within the migration namespace</font>

479
00:19:37,440 --> 00:19:41,249
<font color="#CCCCCC">which is probably never gonna</font><font color="#E5E5E5"> get a call</font>

480
00:19:39,419 --> 00:19:44,190
<font color="#E5E5E5">during</font><font color="#CCCCCC"> runtime because it's just for</font>

481
00:19:41,249 --> 00:19:45,749
updating<font color="#E5E5E5"> the app I didn't mention</font><font color="#CCCCCC"> before</font>

482
00:19:44,190 --> 00:19:47,820
but code pulse<font color="#E5E5E5"> and the attack surface</font>

483
00:19:45,749 --> 00:19:50,639
detector are integrated<font color="#E5E5E5"> so within code</font>

484
00:19:47,820 --> 00:19:51,840
pulse<font color="#E5E5E5"> now we can determine the attack</font>

485
00:19:50,639 --> 00:19:54,498
surface and that's<font color="#E5E5E5"> where you see these</font>

486
00:19:51,840 --> 00:19:57,689
little<font color="#E5E5E5"> icons here</font>

487
00:19:54,499 --> 00:19:59,519
so all these represent methods that<font color="#E5E5E5"> are</font>

488
00:19:57,690 --> 00:20:02,220
part of the attack surface<font color="#CCCCCC"> these</font><font color="#E5E5E5"> are the</font>

489
00:19:59,519 --> 00:20:06,330
entry points an attacker can take to get

490
00:20:02,220 --> 00:20:08,309
<font color="#E5E5E5">into the application so let's and that's</font>

491
00:20:06,330 --> 00:20:13,439
in this<font color="#CCCCCC"> controllers namespace I'm going</font>

492
00:20:08,309 --> 00:20:20,970
<font color="#E5E5E5">to focus on</font><font color="#CCCCCC"> the controllers</font><font color="#E5E5E5"> and we'll</font>

493
00:20:13,440 --> 00:20:22,860
start up<font color="#E5E5E5"> the agent so in this case it</font>

494
00:20:20,970 --> 00:20:24,690
gets against a dotnet application I am

495
00:20:22,860 --> 00:20:27,479
now instrumenting that<font color="#CCCCCC"> and I'm going to</font>

496
00:20:24,690 --> 00:20:31,740
attach<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> this project</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> gonna</font>

497
00:20:27,480 --> 00:20:33,929
start a new<font color="#E5E5E5"> recording and we'll just</font>

498
00:20:31,740 --> 00:20:35,700
<font color="#E5E5E5">call this manual we're just going to do</font>

499
00:20:33,929 --> 00:20:38,269
some manual<font color="#E5E5E5"> explore exploration of the</font>

500
00:20:35,700 --> 00:20:38,269
application

501
00:20:38,460 --> 00:20:49,169
<font color="#CCCCCC">and</font><font color="#E5E5E5"> right so and I'll go to the</font><font color="#CCCCCC"> homepage</font>

502
00:20:43,710 --> 00:20:50,759
<font color="#E5E5E5">and is is just gonna wake</font><font color="#CCCCCC"> up again it's</font>

503
00:20:49,169 --> 00:20:53,879
now being instrumented the first time

504
00:20:50,759 --> 00:20:59,309
it's a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit slower</font><font color="#CCCCCC"> I can go to the</font>

505
00:20:53,879 --> 00:21:01,350
<font color="#CCCCCC">departments I</font><font color="#E5E5E5"> should bring up a page</font>

506
00:20:59,309 --> 00:21:05,629
where you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> add and</font><font color="#CCCCCC"> remove departments</font>

507
00:21:01,350 --> 00:21:07,889
let's go to instructors students courses

508
00:21:05,629 --> 00:21:09,559
so as I'm<font color="#CCCCCC"> interacting with the app you</font>

509
00:21:07,889 --> 00:21:12,869
see that it's highlighting in<font color="#E5E5E5"> real time</font>

510
00:21:09,559 --> 00:21:19,889
all the methods that were<font color="#E5E5E5"> touched and</font>

511
00:21:12,869 --> 00:21:23,090
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> gonna focus</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the CD so this box</font>

512
00:21:19,889 --> 00:21:26,689
represents<font color="#E5E5E5"> everything that's related to</font>

513
00:21:23,090 --> 00:21:29,360
the courses so this is<font color="#CCCCCC"> Mama's here I</font>

514
00:21:26,690 --> 00:21:32,100
mean<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> all the</font><font color="#E5E5E5"> methods within</font>

515
00:21:29,360 --> 00:21:33,479
interacting with<font color="#E5E5E5"> courses so I'm gonna go</font>

516
00:21:32,100 --> 00:21:35,279
ahead<font color="#E5E5E5"> and interact with courses and</font>

517
00:21:33,480 --> 00:21:37,529
you'll see how we're gonna improve<font color="#E5E5E5"> the</font>

518
00:21:35,279 --> 00:21:40,200
coverage here like this details and

519
00:21:37,529 --> 00:21:44,789
<font color="#E5E5E5">things like that so we'll add a new</font>

520
00:21:40,200 --> 00:21:48,899
course course<font color="#CCCCCC"> 100</font><font color="#E5E5E5"> it's the app set</font>

521
00:21:44,789 --> 00:21:51,899
course<font color="#E5E5E5"> three credits and it's in the</font>

522
00:21:48,899 --> 00:21:53,340
computer<font color="#CCCCCC"> science department</font><font color="#E5E5E5"> you see that</font>

523
00:21:51,899 --> 00:21:57,090
we<font color="#E5E5E5"> just we just hit some stuff here we</font>

524
00:21:53,340 --> 00:22:02,490
just did it create a lot of<font color="#CCCCCC"> fan of</font>

525
00:21:57,090 --> 00:22:04,529
calculus<font color="#E5E5E5"> so we'll delete that one</font><font color="#CCCCCC"> so now</font>

526
00:22:02,490 --> 00:22:07,350
we've<font color="#CCCCCC"> interested interface with that</font>

527
00:22:04,529 --> 00:22:11,570
we're gonna head<font color="#CCCCCC"> in</font><font color="#E5E5E5"> let's edit the app</font>

528
00:22:07,350 --> 00:22:14,399
sack it's it's a<font color="#CCCCCC"> fork</font><font color="#E5E5E5"> for credit class</font>

529
00:22:11,570 --> 00:22:22,230
<font color="#CCCCCC">I'll go ahead</font><font color="#E5E5E5"> and look at the details of</font>

530
00:22:14,399 --> 00:22:24,508
it so I've exercised a<font color="#CCCCCC"> lot of this the</font>

531
00:22:22,230 --> 00:22:26,249
courses right so got pretty<font color="#CCCCCC"> good</font>

532
00:22:24,509 --> 00:22:29,519
coverage here but I missed a couple<font color="#E5E5E5"> I</font>

533
00:22:26,249 --> 00:22:32,279
missed two boxes here<font color="#E5E5E5"> so</font><font color="#CCCCCC"> one is this</font>

534
00:22:29,519 --> 00:22:37,950
update course credit and update course

535
00:22:32,279 --> 00:22:39,779
credits with a<font color="#E5E5E5"> parameter so the contoso</font>

536
00:22:37,950 --> 00:22:43,350
<font color="#CCCCCC">university</font><font color="#E5E5E5"> application actually has a</font>

537
00:22:39,779 --> 00:22:44,610
hidden<font color="#E5E5E5"> endpoint in it wasn't</font><font color="#CCCCCC"> an - by us</font>

538
00:22:43,350 --> 00:22:46,110
it's actually<font color="#CCCCCC"> just</font><font color="#E5E5E5"> in there so you it's</font>

539
00:22:44,610 --> 00:22:49,859
not something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can navigate to</font>

540
00:22:46,110 --> 00:22:51,059
from the application but if go and if I

541
00:22:49,859 --> 00:22:53,389
go<font color="#CCCCCC"> to like to edit</font>

542
00:22:51,059 --> 00:22:53,389
<font color="#E5E5E5">here</font>

543
00:23:04,290 --> 00:23:11,159
so there's a hidden update course credit

544
00:23:07,640 --> 00:23:13,880
<font color="#CCCCCC">now I've hit that</font><font color="#E5E5E5"> what this</font><font color="#CCCCCC"> endpoint</font>

545
00:23:11,160 --> 00:23:19,200
<font color="#E5E5E5">does is it allows you to multiply</font><font color="#CCCCCC"> the</font>

546
00:23:13,880 --> 00:23:20,580
every course by a certain number<font color="#E5E5E5"> so</font>

547
00:23:19,200 --> 00:23:22,770
we're gonna<font color="#E5E5E5"> we're gonna multiply it by</font>

548
00:23:20,580 --> 00:23:26,490
<font color="#CCCCCC">two and now I've received</font><font color="#E5E5E5"> you know now</font>

549
00:23:22,770 --> 00:23:28,200
I've got full<font color="#CCCCCC"> coverage</font><font color="#E5E5E5"> this this update</font>

550
00:23:26,490 --> 00:23:29,280
<font color="#CCCCCC">course credits something that you</font>

551
00:23:28,200 --> 00:23:32,190
<font color="#E5E5E5">wouldn't be able to see from the</font><font color="#CCCCCC"> outside</font>

552
00:23:29,280 --> 00:23:35,190
<font color="#E5E5E5">but now having an inside perspective you</font>

553
00:23:32,190 --> 00:23:44,610
can<font color="#E5E5E5"> improve the</font><font color="#CCCCCC"> coverage but</font><font color="#E5E5E5"> we can take</font>

554
00:23:35,190 --> 00:23:45,870
this a step further<font color="#E5E5E5"> and look</font><font color="#CCCCCC"> at with one</font>

555
00:23:44,610 --> 00:23:46,889
of the new<font color="#E5E5E5"> features is</font><font color="#CCCCCC"> to look</font><font color="#E5E5E5"> at the</font>

556
00:23:45,870 --> 00:23:49,820
kind<font color="#E5E5E5"> of is look at the line level</font>

557
00:23:46,890 --> 00:23:56,460
<font color="#CCCCCC">coverage</font><font color="#E5E5E5"> and so if I'm</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at this</font>

558
00:23:49,820 --> 00:23:58,020
edit method takes in an integer<font color="#E5E5E5"> and it</font>

559
00:23:56,460 --> 00:24:01,470
basically<font color="#E5E5E5"> says well if that integer is</font>

560
00:23:58,020 --> 00:24:03,420
<font color="#E5E5E5">null go throw this error otherwise try</font>

561
00:24:01,470 --> 00:24:05,820
and find it if it's null<font color="#E5E5E5"> for another</font>

562
00:24:03,420 --> 00:24:08,730
error if it's<font color="#E5E5E5"> found and you know</font>

563
00:24:05,820 --> 00:24:11,399
<font color="#E5E5E5">continue so so far I've only gone</font>

564
00:24:08,730 --> 00:24:14,790
through the kind<font color="#E5E5E5"> of happy scenario</font><font color="#CCCCCC"> and I</font>

565
00:24:11,400 --> 00:24:18,480
got 5 of<font color="#CCCCCC"> 7 so 71%</font><font color="#E5E5E5"> coverage within this</font>

566
00:24:14,790 --> 00:24:20,100
method so<font color="#E5E5E5"> let's you know we can go ahead</font>

567
00:24:18,480 --> 00:24:22,830
<font color="#E5E5E5">and explore this more</font><font color="#CCCCCC"> I can go ahead</font><font color="#E5E5E5"> and</font>

568
00:24:20,100 --> 00:24:25,280
<font color="#CCCCCC">say let's let's not let's pass</font><font color="#E5E5E5"> a nothing</font>

569
00:24:22,830 --> 00:24:28,679
out through an error which<font color="#CCCCCC"> is expected</font>

570
00:24:25,280 --> 00:24:32,520
<font color="#CCCCCC">and you'll see</font><font color="#E5E5E5"> you know that now we've</font>

571
00:24:28,680 --> 00:24:37,350
covered that particular case<font color="#CCCCCC"> and improve</font>

572
00:24:32,520 --> 00:24:44,129
things or if I put in a ID that I know

573
00:24:37,350 --> 00:24:46,050
is<font color="#E5E5E5"> not valid now that's going</font><font color="#CCCCCC"> to that</font>

574
00:24:44,130 --> 00:24:48,210
condition<font color="#CCCCCC"> and</font><font color="#E5E5E5"> now now we actually have</font>

575
00:24:46,050 --> 00:24:49,560
<font color="#E5E5E5">hundred percent coverage within this</font>

576
00:24:48,210 --> 00:24:51,420
method so before we're looking<font color="#CCCCCC"> more at</font>

577
00:24:49,560 --> 00:24:53,940
<font color="#E5E5E5">the myth the method</font><font color="#CCCCCC"> level coverage</font><font color="#E5E5E5"> now</font>

578
00:24:51,420 --> 00:24:55,110
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> actually line level coverage so you</font>

579
00:24:53,940 --> 00:24:57,450
can go in<font color="#E5E5E5"> and make</font><font color="#CCCCCC"> sure you're getting</font>

580
00:24:55,110 --> 00:25:02,879
complete coverage and again<font color="#CCCCCC"> in real time</font>

581
00:24:57,450 --> 00:25:05,630
be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to see that yeah let's do one</font>

582
00:25:02,880 --> 00:25:05,630
more<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> here</font>

583
00:25:06,410 --> 00:25:16,630
so I'm going to stop that<font color="#E5E5E5"> recording and</font>

584
00:25:10,960 --> 00:25:20,650
we'll try and run<font color="#E5E5E5"> zap against this and</font>

585
00:25:16,630 --> 00:25:20,650
I'll call this one zap

586
00:25:27,970 --> 00:25:33,309
so now we're recording<font color="#CCCCCC"> the interaction</font>

587
00:25:31,629 --> 00:25:42,189
<font color="#CCCCCC">that zap has with this web application</font>

588
00:25:33,309 --> 00:25:44,110
I'm<font color="#CCCCCC"> going to go and</font><font color="#E5E5E5"> spider now you see</font>

589
00:25:42,190 --> 00:25:45,879
you know<font color="#CCCCCC"> Isis app is</font><font color="#E5E5E5"> going doing its</font>

590
00:25:44,110 --> 00:25:47,709
thing<font color="#E5E5E5"> you can see all the different</font>

591
00:25:45,879 --> 00:25:52,959
<font color="#CCCCCC">methods that are being called</font><font color="#E5E5E5"> again</font>

592
00:25:47,710 --> 00:25:59,019
<font color="#E5E5E5">right in</font><font color="#CCCCCC"> real time and zap finish sits</font>

593
00:25:52,960 --> 00:26:02,169
spider<font color="#E5E5E5"> I can stop that session and now I</font>

594
00:25:59,019 --> 00:26:07,629
can compare what<font color="#CCCCCC"> Zab found versus what</font>

595
00:26:02,169 --> 00:26:10,480
<font color="#E5E5E5">was found during a manual testing</font><font color="#CCCCCC"> and of</font>

596
00:26:07,629 --> 00:26:12,969
course the update source credits was not

597
00:26:10,480 --> 00:26:15,370
found by zap<font color="#E5E5E5"> because of not able</font><font color="#CCCCCC"> to</font>

598
00:26:12,970 --> 00:26:20,200
discover that<font color="#E5E5E5"> hidden endpoint so this is</font>

599
00:26:15,370 --> 00:26:21,580
kind of a way of being able to<font color="#E5E5E5"> improve</font>

600
00:26:20,200 --> 00:26:27,639
your coverage<font color="#E5E5E5"> and find things that you</font>

601
00:26:21,580 --> 00:26:32,559
<font color="#E5E5E5">would otherwise miss all right so that</font>

602
00:26:27,639 --> 00:26:33,549
<font color="#E5E5E5">was</font><font color="#CCCCCC"> the code pulse</font><font color="#E5E5E5"> part of it now I'm</font>

603
00:26:32,559 --> 00:26:38,529
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk about the attack surface</font>

604
00:26:33,549 --> 00:26:40,840
detector so you know similar<font color="#E5E5E5"> how we saw</font>

605
00:26:38,529 --> 00:26:41,980
in the code<font color="#CCCCCC"> balls demo there's parts of</font>

606
00:26:40,840 --> 00:26:46,029
<font color="#E5E5E5">the attack surface that are going</font><font color="#CCCCCC"> to be</font>

607
00:26:41,980 --> 00:26:47,590
missing<font color="#CCCCCC"> unless you're</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> UN</font><font color="#E5E5E5"> true</font>

608
00:26:46,029 --> 00:26:49,179
forcing so everyone to develop a

609
00:26:47,590 --> 00:26:50,350
solution<font color="#E5E5E5"> that</font><font color="#CCCCCC"> can buffer</font><font color="#E5E5E5"> I have a</font>

610
00:26:49,179 --> 00:26:54,490
complete picture<font color="#E5E5E5"> of the attack surface</font>

611
00:26:50,350 --> 00:26:56,439
in an automated way so the attack

612
00:26:54,490 --> 00:26:58,750
surface<font color="#E5E5E5"> helps abbreviate pen testing</font>

613
00:26:56,440 --> 00:27:00,809
efforts by automatic automatically

614
00:26:58,750 --> 00:27:02,830
discovering the attack surface process

615
00:27:00,809 --> 00:27:04,330
particularly it will discover<font color="#E5E5E5"> hidden or</font>

616
00:27:02,830 --> 00:27:07,720
unlinked<font color="#E5E5E5"> endpoints just like we saw on</font>

617
00:27:04,330 --> 00:27:09,399
<font color="#E5E5E5">the demo and also optional parameters so</font>

618
00:27:07,720 --> 00:27:10,570
you<font color="#E5E5E5"> may have like</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> debug parameter or</font>

619
00:27:09,399 --> 00:27:13,750
other<font color="#E5E5E5"> parameters that aren't could be</font>

620
00:27:10,570 --> 00:27:16,360
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> seen from the</font><font color="#CCCCCC"> outside</font><font color="#E5E5E5"> this</font>

621
00:27:13,750 --> 00:27:20,529
<font color="#E5E5E5">can be used to proceed tools like zap</font>

622
00:27:16,360 --> 00:27:22,059
and burp so by proceeding in feed the

623
00:27:20,529 --> 00:27:24,159
feed those tools with the attack surface

624
00:27:22,059 --> 00:27:26,590
<font color="#E5E5E5">before you go on and do your</font><font color="#CCCCCC"> spider hang</font>

625
00:27:24,159 --> 00:27:27,789
or active scanning<font color="#E5E5E5"> so it can discover</font>

626
00:27:26,590 --> 00:27:30,908
things that<font color="#CCCCCC"> would it would otherwise</font>

627
00:27:27,789 --> 00:27:33,120
would<font color="#CCCCCC"> be</font><font color="#E5E5E5"> very hard for it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do you</font><font color="#CCCCCC"> can</font>

628
00:27:30,909 --> 00:27:34,960
also compare the differences between

629
00:27:33,120 --> 00:27:36,610
applications so<font color="#CCCCCC"> you can focus your</font>

630
00:27:34,960 --> 00:27:37,270
testing activities on what has<font color="#CCCCCC"> changed</font>

631
00:27:36,610 --> 00:27:41,530
<font color="#E5E5E5">between</font>

632
00:27:37,270 --> 00:27:43,360
<font color="#CCCCCC">another so how does</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> work so it</font>

633
00:27:41,530 --> 00:27:44,980
performs<font color="#CCCCCC"> a static source code analysis</font>

634
00:27:43,360 --> 00:27:47,320
so you need to provide the attack

635
00:27:44,980 --> 00:27:51,400
surfaces character with your source code

636
00:27:47,320 --> 00:27:52,960
<font color="#CCCCCC">and then it</font><font color="#E5E5E5"> looks at the different</font>

637
00:27:51,400 --> 00:27:53,980
<font color="#E5E5E5">routes and the parameters for the</font>

638
00:27:52,960 --> 00:27:55,510
different<font color="#CCCCCC"> framework so these are</font>

639
00:27:53,980 --> 00:27:58,060
<font color="#E5E5E5">frameworks that we currently</font><font color="#CCCCCC"> support the</font>

640
00:27:55,510 --> 00:28:00,250
<font color="#E5E5E5">languages</font><font color="#CCCCCC"> and frameworks of c-sharp</font><font color="#E5E5E5"> Java</font>

641
00:27:58,060 --> 00:28:02,379
Python Ruby<font color="#E5E5E5"> and these are all the</font>

642
00:28:00,250 --> 00:28:04,000
frameworks<font color="#E5E5E5"> underneath there</font><font color="#CCCCCC"> that we</font>

643
00:28:02,380 --> 00:28:06,700
currently support<font color="#E5E5E5"> we're looking to add</font>

644
00:28:04,000 --> 00:28:08,530
more<font color="#CCCCCC"> and so all open source</font><font color="#E5E5E5"> so we're</font>

645
00:28:06,700 --> 00:28:11,920
<font color="#E5E5E5">looking for contributions from others as</font>

646
00:28:08,530 --> 00:28:13,120
well so<font color="#E5E5E5"> I'm in summary on the kind</font><font color="#CCCCCC"> of</font>

647
00:28:11,920 --> 00:28:16,630
the benefits of it I'll take questions

648
00:28:13,120 --> 00:28:19,629
right at the end it kind of the benefits

649
00:28:16,630 --> 00:28:21,400
<font color="#CCCCCC">it</font><font color="#E5E5E5"> minimizes the attack surface gaps so</font>

650
00:28:19,630 --> 00:28:23,580
you can find those<font color="#E5E5E5"> only</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> points also</font>

651
00:28:21,400 --> 00:28:25,900
<font color="#E5E5E5">helps the parameter detection so</font>

652
00:28:23,580 --> 00:28:27,760
optional<font color="#CCCCCC"> primers I might be missing or</font>

653
00:28:25,900 --> 00:28:29,200
just just knowing the parameter data

654
00:28:27,760 --> 00:28:31,270
type and<font color="#E5E5E5"> then the values that are</font>

655
00:28:29,200 --> 00:28:32,950
expecting can improve your testing

656
00:28:31,270 --> 00:28:35,710
activity right so rather than<font color="#E5E5E5"> guessing</font>

657
00:28:32,950 --> 00:28:37,830
at the type<font color="#CCCCCC"> of parameter you know that</font>

658
00:28:35,710 --> 00:28:43,800
information<font color="#CCCCCC"> and that</font><font color="#E5E5E5"> could be used</font>

659
00:28:37,830 --> 00:28:45,970
precede the tools like zap and<font color="#CCCCCC"> burr to</font>

660
00:28:43,800 --> 00:28:48,970
make the testing<font color="#E5E5E5"> process process more</font>

661
00:28:45,970 --> 00:28:50,890
efficient<font color="#E5E5E5"> and help reduce time so rather</font>

662
00:28:48,970 --> 00:28:52,390
than<font color="#E5E5E5"> having to manually enumerate the</font>

663
00:28:50,890 --> 00:28:53,890
attack surface<font color="#E5E5E5"> either going brute force</font>

664
00:28:52,390 --> 00:28:55,510
or<font color="#E5E5E5"> if you had</font><font color="#CCCCCC"> access to</font><font color="#E5E5E5"> the source code</font>

665
00:28:53,890 --> 00:28:57,880
<font color="#CCCCCC">you'd have</font><font color="#E5E5E5"> to go through</font><font color="#CCCCCC"> the source code</font>

666
00:28:55,510 --> 00:29:00,250
<font color="#E5E5E5">and try and figure out what the attack</font>

667
00:28:57,880 --> 00:29:02,710
surface is and that<font color="#E5E5E5"> could be</font><font color="#CCCCCC"> error-prone</font>

668
00:29:00,250 --> 00:29:04,030
and<font color="#E5E5E5"> it's at the manual</font><font color="#CCCCCC"> process and also</font>

669
00:29:02,710 --> 00:29:07,210
<font color="#E5E5E5">be able to compare the differences</font>

670
00:29:04,030 --> 00:29:08,889
<font color="#E5E5E5">between two</font><font color="#CCCCCC"> applications to help target</font>

671
00:29:07,210 --> 00:29:10,630
<font color="#CCCCCC">your testing you know as we talked</font><font color="#E5E5E5"> about</font>

672
00:29:08,890 --> 00:29:15,550
<font color="#E5E5E5">before</font><font color="#CCCCCC"> I'm trying to keep up with the</font>

673
00:29:10,630 --> 00:29:19,420
fast<font color="#E5E5E5"> pace development so these we do</font>

674
00:29:15,550 --> 00:29:21,100
have<font color="#E5E5E5"> plugins for zap and burp they're</font>

675
00:29:19,420 --> 00:29:23,020
available<font color="#CCCCCC"> right from within the tools</font>

676
00:29:21,100 --> 00:29:24,939
you<font color="#CCCCCC"> just go ahead</font><font color="#E5E5E5"> and look for the</font>

677
00:29:23,020 --> 00:29:29,320
attack service detector and install

678
00:29:24,940 --> 00:29:34,000
<font color="#E5E5E5">those plugins and I'll show you how it</font>

679
00:29:29,320 --> 00:29:36,149
<font color="#E5E5E5">works in this case I'm going to</font><font color="#CCCCCC"> use burp</font>

680
00:29:34,000 --> 00:29:36,150
suite

681
00:29:37,120 --> 00:29:44,090
and again you can go here<font color="#CCCCCC"> you can either</font>

682
00:29:40,820 --> 00:29:46,070
go<font color="#E5E5E5"> download it from our github page you</font>

683
00:29:44,090 --> 00:29:49,639
can add it or you can go to the B<font color="#CCCCCC"> app</font>

684
00:29:46,070 --> 00:29:52,309
<font color="#CCCCCC">store</font><font color="#E5E5E5"> and find the surface detector and</font>

685
00:29:49,639 --> 00:29:55,250
you know it'll<font color="#E5E5E5"> be all integrated within</font>

686
00:29:52,309 --> 00:29:57,760
zapper<font color="#CCCCCC"> Bert you then see a new</font><font color="#E5E5E5"> tab</font>

687
00:29:55,250 --> 00:29:59,960
called<font color="#E5E5E5"> the attack surface detector and</font>

688
00:29:57,760 --> 00:30:02,840
then then the options you can specify

689
00:29:59,960 --> 00:30:06,139
the source code location<font color="#E5E5E5"> this could be a</font>

690
00:30:02,840 --> 00:30:07,370
<font color="#E5E5E5">folder or zip file a word file</font><font color="#CCCCCC"> if you</font>

691
00:30:06,139 --> 00:30:08,750
<font color="#E5E5E5">have something that you want to compare</font>

692
00:30:07,370 --> 00:30:10,689
<font color="#CCCCCC">it to</font><font color="#E5E5E5"> so in this case</font><font color="#CCCCCC"> um you know</font>

693
00:30:08,750 --> 00:30:13,480
comparing version<font color="#E5E5E5"> 2 with the version</font><font color="#CCCCCC"> 1</font>

694
00:30:10,690 --> 00:30:19,880
that's kind of the core that<font color="#E5E5E5"> you need</font>

695
00:30:13,480 --> 00:30:22,220
<font color="#E5E5E5">and you could also put in the the target</font>

696
00:30:19,880 --> 00:30:23,419
<font color="#E5E5E5">configuration so you know from the</font>

697
00:30:22,220 --> 00:30:24,889
source<font color="#E5E5E5"> code</font><font color="#CCCCCC"> perspective we don't know</font>

698
00:30:23,419 --> 00:30:26,510
where it's hosted if you fill this

699
00:30:24,889 --> 00:30:29,178
information<font color="#E5E5E5"> out then we can</font><font color="#CCCCCC"> use that to</font>

700
00:30:26,510 --> 00:30:34,250
<font color="#CCCCCC">seed burp to know how to then go ahead</font>

701
00:30:29,179 --> 00:30:35,539
and do spy<font color="#CCCCCC"> during an attack</font><font color="#E5E5E5"> so once</font>

702
00:30:34,250 --> 00:30:38,870
that's in there you just<font color="#CCCCCC"> click this</font>

703
00:30:35,539 --> 00:30:41,000
import endpoints from source it's<font color="#CCCCCC"> going</font>

704
00:30:38,870 --> 00:30:43,279
through the source code<font color="#E5E5E5"> figuring out all</font>

705
00:30:41,000 --> 00:30:46,159
<font color="#E5E5E5">the</font><font color="#CCCCCC"> endpoints</font><font color="#E5E5E5"> that it's able</font><font color="#CCCCCC"> to find and</font>

706
00:30:43,279 --> 00:30:47,690
then you see those<font color="#E5E5E5"> listed here so these</font>

707
00:30:46,159 --> 00:30:51,080
are<font color="#CCCCCC"> all the</font><font color="#E5E5E5"> endpoints again I'm using</font>

708
00:30:47,690 --> 00:30:52,669
<font color="#E5E5E5">the contoso</font><font color="#CCCCCC"> university application we</font>

709
00:30:51,080 --> 00:30:54,309
did make<font color="#E5E5E5"> some modifications</font><font color="#CCCCCC"> to show the</font>

710
00:30:52,669 --> 00:30:57,320
differences<font color="#E5E5E5"> between two versions</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> it</font>

711
00:30:54,309 --> 00:30:59,600
<font color="#CCCCCC">but here we see</font><font color="#E5E5E5"> the number of detected</font>

712
00:30:57,320 --> 00:31:01,428
endpoints<font color="#E5E5E5"> whether it's a get method or a</font>

713
00:30:59,600 --> 00:31:03,049
post method<font color="#CCCCCC"> and whether it's</font><font color="#E5E5E5"> been</font>

714
00:31:01,429 --> 00:31:04,580
<font color="#E5E5E5">modified between the two different</font>

715
00:31:03,049 --> 00:31:06,980
<font color="#CCCCCC">versions and then you can click here and</font>

716
00:31:04,580 --> 00:31:09,769
get more<font color="#CCCCCC"> information so you can</font><font color="#E5E5E5"> see you</font>

717
00:31:06,980 --> 00:31:13,730
know for this create<font color="#E5E5E5"> endpoint this debug</font>

718
00:31:09,769 --> 00:31:15,889
string<font color="#E5E5E5"> wasn't added parameter since the</font>

719
00:31:13,730 --> 00:31:19,010
last time<font color="#E5E5E5"> you did</font><font color="#CCCCCC"> your testing</font><font color="#E5E5E5"> this</font>

720
00:31:15,889 --> 00:31:24,379
particular one the integer change to a

721
00:31:19,010 --> 00:31:25,908
string this<font color="#CCCCCC"> is a new</font><font color="#E5E5E5"> endpoint</font><font color="#CCCCCC"> that was</font>

722
00:31:24,380 --> 00:31:28,279
added so<font color="#CCCCCC"> you know you can</font><font color="#E5E5E5"> kind of get a</font>

723
00:31:25,909 --> 00:31:30,889
<font color="#CCCCCC">sense for what</font><font color="#E5E5E5"> has changed between</font>

724
00:31:28,279 --> 00:31:36,130
different versions<font color="#CCCCCC"> and then within</font><font color="#E5E5E5"> the</font>

725
00:31:30,889 --> 00:31:36,129
target<font color="#CCCCCC"> here it's gonna</font><font color="#E5E5E5"> show all</font>

726
00:31:38,220 --> 00:31:43,020
so now this is<font color="#E5E5E5"> gonna use right</font><font color="#CCCCCC"> within</font>

727
00:31:40,080 --> 00:31:44,850
the target<font color="#E5E5E5"> of burp these are all the end</font>

728
00:31:43,020 --> 00:31:49,289
points<font color="#CCCCCC"> that were detected by</font><font color="#E5E5E5"> a text</font>

729
00:31:44,850 --> 00:31:51,480
surface detector<font color="#CCCCCC"> I can sort by</font><font color="#E5E5E5"> comment</font>

730
00:31:49,289 --> 00:31:54,059
here so<font color="#E5E5E5"> this is new end points that were</font>

731
00:31:51,480 --> 00:31:56,909
detected modified and just end points

732
00:31:54,059 --> 00:31:58,740
<font color="#E5E5E5">that were detected via the attack</font>

733
00:31:56,909 --> 00:32:01,710
surface analysis<font color="#CCCCCC"> from</font><font color="#E5E5E5"> here you can use</font>

734
00:31:58,740 --> 00:32:05,970
the standard<font color="#CCCCCC"> Burke tools</font><font color="#E5E5E5"> an intruder</font>

735
00:32:01,710 --> 00:32:07,679
repeater<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the site map here is also</font>

736
00:32:05,970 --> 00:32:11,270
<font color="#CCCCCC">pre-populated with</font><font color="#E5E5E5"> all of the</font>

737
00:32:07,679 --> 00:32:11,270
information that<font color="#CCCCCC"> I was</font><font color="#E5E5E5"> able to discover</font>

738
00:32:13,250 --> 00:32:21,080
<font color="#E5E5E5">so that's an overview of the attack</font>

739
00:32:17,370 --> 00:32:21,080
surface detector plugins

740
00:32:31,690 --> 00:32:38,140
and so for contoso<font color="#CCCCCC"> University</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

741
00:32:34,900 --> 00:32:39,250
<font color="#CCCCCC">Cana this is before</font><font color="#E5E5E5"> proceeding where I</font>

742
00:32:38,140 --> 00:32:41,470
just<font color="#CCCCCC"> I ran burp</font>

743
00:32:39,250 --> 00:32:43,390
against the<font color="#CCCCCC"> application and</font><font color="#E5E5E5"> then after a</font>

744
00:32:41,470 --> 00:32:46,210
proceeding<font color="#E5E5E5"> again it was able to find</font>

745
00:32:43,390 --> 00:32:48,040
that hidden<font color="#E5E5E5"> endpoint be update course</font>

746
00:32:46,210 --> 00:32:51,490
credits<font color="#E5E5E5"> is also</font><font color="#CCCCCC"> able to</font><font color="#E5E5E5"> find the delete</font>

747
00:32:48,040 --> 00:32:52,690
and<font color="#E5E5E5"> edit on</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> department's in this</font>

748
00:32:51,490 --> 00:32:55,390
case it wasn't<font color="#CCCCCC"> able to define that</font>

749
00:32:52,690 --> 00:32:56,010
<font color="#CCCCCC">because when</font><font color="#E5E5E5"> I ran this there</font><font color="#CCCCCC"> were</font><font color="#E5E5E5"> there</font>

750
00:32:55,390 --> 00:32:59,320
<font color="#E5E5E5">weren't any</font>

751
00:32:56,010 --> 00:33:01,900
<font color="#E5E5E5">departments created and so</font><font color="#CCCCCC"> Burke wasn't</font>

752
00:32:59,320 --> 00:33:03,850
able to find<font color="#E5E5E5"> that there</font><font color="#CCCCCC"> was um</font><font color="#E5E5E5"> the</font>

753
00:33:01,900 --> 00:33:05,650
<font color="#CCCCCC">delete and</font><font color="#E5E5E5"> edit because there was there</font>

754
00:33:03,850 --> 00:33:08,709
was<font color="#CCCCCC"> no data in there to make</font><font color="#E5E5E5"> that happen</font>

755
00:33:05,650 --> 00:33:10,210
<font color="#CCCCCC">but by doing</font><font color="#E5E5E5"> the attack surface</font><font color="#CCCCCC"> detector</font>

756
00:33:08,710 --> 00:33:12,550
you would to be<font color="#CCCCCC"> able to know about</font><font color="#E5E5E5"> those</font>

757
00:33:10,210 --> 00:33:18,070
<font color="#E5E5E5">other entry points</font><font color="#CCCCCC"> into the application</font>

758
00:33:12,550 --> 00:33:20,980
<font color="#E5E5E5">and</font><font color="#CCCCCC"> this is a</font><font color="#E5E5E5"> report that burp can</font>

759
00:33:18,070 --> 00:33:24,370
generate again<font color="#CCCCCC"> this is before seating</font>

760
00:33:20,980 --> 00:33:25,960
and after<font color="#E5E5E5"> proceeding so you can see that</font>

761
00:33:24,370 --> 00:33:28,659
<font color="#E5E5E5">we</font><font color="#CCCCCC"> were able to get a lot more coverage</font>

762
00:33:25,960 --> 00:33:31,060
<font color="#CCCCCC">we found more dynamic URLs more static</font>

763
00:33:28,660 --> 00:33:33,490
URLs more parameters so it's<font color="#CCCCCC"> just a way</font>

764
00:33:31,060 --> 00:33:37,210
of<font color="#E5E5E5"> improving demonstrating how you can</font>

765
00:33:33,490 --> 00:33:39,850
improve the attack surface then<font color="#CCCCCC"> within</font>

766
00:33:37,210 --> 00:33:41,260
code pulse we've brought both in so you

767
00:33:39,850 --> 00:33:43,419
know<font color="#E5E5E5"> without the attack surface detector</font>

768
00:33:41,260 --> 00:33:46,300
and with the attack<font color="#CCCCCC"> surface detector you</font>

769
00:33:43,420 --> 00:33:49,330
can<font color="#CCCCCC"> see that we were able</font><font color="#E5E5E5"> to find things</font>

770
00:33:46,300 --> 00:33:51,879
and<font color="#CCCCCC"> a lot more</font><font color="#E5E5E5"> boxes were highlighted</font>

771
00:33:49,330 --> 00:33:54,179
<font color="#E5E5E5">here by first using</font><font color="#CCCCCC"> the attack surface</font>

772
00:33:51,880 --> 00:33:58,540
detector<font color="#E5E5E5"> before going through the</font>

773
00:33:54,180 --> 00:34:01,360
automated<font color="#E5E5E5"> scanning so in fact there was</font>

774
00:33:58,540 --> 00:34:03,580
if you<font color="#E5E5E5"> look at the</font><font color="#CCCCCC"> controllers name</font>

775
00:34:01,360 --> 00:34:05,679
space without the<font color="#E5E5E5"> attack surface detect</font>

776
00:34:03,580 --> 00:34:09,250
about<font color="#CCCCCC"> 46% coverage</font><font color="#E5E5E5"> than when</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> first</font>

777
00:34:05,680 --> 00:34:14,830
ran that we got<font color="#E5E5E5"> 75% coverage so increase</font>

778
00:34:09,250 --> 00:34:18,960
it by 29% this is a<font color="#E5E5E5"> report</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> a</font>

779
00:34:14,830 --> 00:34:22,719
commercial<font color="#E5E5E5"> application that we tested</font>

780
00:34:18,960 --> 00:34:24,100
<font color="#CCCCCC">this was just running burp directly this</font>

781
00:34:22,719 --> 00:34:26,259
<font color="#CCCCCC">is just running</font><font color="#E5E5E5"> the attack surface</font>

782
00:34:24,100 --> 00:34:27,969
detector and then this is running the

783
00:34:26,260 --> 00:34:31,290
attack surface detector and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> running</font>

784
00:34:27,969 --> 00:34:33,609
burps<font color="#E5E5E5"> automated crawling and scanning</font>

785
00:34:31,290 --> 00:34:35,650
which you know has the best coverage<font color="#CCCCCC"> but</font>

786
00:34:33,610 --> 00:34:38,169
you<font color="#E5E5E5"> can see how how things have</font><font color="#CCCCCC"> been be</font>

787
00:34:35,650 --> 00:34:40,418
<font color="#E5E5E5">able to improve on this commercial</font>

788
00:34:38,168 --> 00:34:42,969
application<font color="#E5E5E5"> rather than just the</font><font color="#CCCCCC"> contoso</font>

789
00:34:40,418 --> 00:34:46,520
<font color="#E5E5E5">university demo</font>

790
00:34:42,969 --> 00:34:48,168
and then lastly we<font color="#CCCCCC"> have a command-line</font>

791
00:34:46,520 --> 00:34:51,199
<font color="#CCCCCC">interface for the attack surface</font>

792
00:34:48,168 --> 00:34:52,759
detector so one<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> challenges is you</font>

793
00:34:51,199 --> 00:34:56,210
know you may<font color="#E5E5E5"> not always be</font><font color="#CCCCCC"> able to get</font>

794
00:34:52,760 --> 00:34:58,790
<font color="#E5E5E5">access directly</font><font color="#CCCCCC"> to the source code</font><font color="#E5E5E5"> so if</font>

795
00:34:56,210 --> 00:35:00,710
you're doing<font color="#E5E5E5"> a scan for review for</font>

796
00:34:58,790 --> 00:35:03,710
someone else<font color="#E5E5E5"> they can run this attack</font>

797
00:35:00,710 --> 00:35:06,349
surface detector CLI tool which will

798
00:35:03,710 --> 00:35:08,540
output a JSON file<font color="#E5E5E5"> of the attack surface</font>

799
00:35:06,349 --> 00:35:10,550
and then give that<font color="#E5E5E5"> back to the tester</font>

800
00:35:08,540 --> 00:35:12,859
that can then be important to zap and

801
00:35:10,550 --> 00:35:15,200
burp or use it<font color="#E5E5E5"> for other</font><font color="#CCCCCC"> purposes as</font>

802
00:35:12,859 --> 00:35:17,710
<font color="#CCCCCC">well so without having direct access to</font>

803
00:35:15,200 --> 00:35:20,598
<font color="#E5E5E5">the source</font><font color="#CCCCCC"> code which is</font><font color="#E5E5E5"> sometimes</font>

804
00:35:17,710 --> 00:35:24,140
sensitive<font color="#E5E5E5"> and sometimes</font><font color="#CCCCCC"> if for</font>

805
00:35:20,599 --> 00:35:26,630
especially<font color="#E5E5E5"> for</font><font color="#CCCCCC"> blackbox testing you know</font>

806
00:35:24,140 --> 00:35:28,069
this is a way of<font color="#E5E5E5"> being able to still use</font>

807
00:35:26,630 --> 00:35:32,990
these technologies<font color="#CCCCCC"> out</font><font color="#E5E5E5"> having direct</font>

808
00:35:28,070 --> 00:35:35,540
<font color="#CCCCCC">access to the source code and that's a</font>

809
00:35:32,990 --> 00:35:38,450
wrap so here's where you can learn<font color="#E5E5E5"> more</font>

810
00:35:35,540 --> 00:35:41,420
about the tools the code pulse<font color="#CCCCCC"> we have</font>

811
00:35:38,450 --> 00:35:44,810
<font color="#CCCCCC">cocoa stock code</font><font color="#E5E5E5"> pulse code gasp</font><font color="#CCCCCC"> roast</font>

812
00:35:41,420 --> 00:35:48,380
<font color="#CCCCCC">com website</font><font color="#E5E5E5"> it's also on OS have some</font>

813
00:35:44,810 --> 00:35:50,720
<font color="#E5E5E5">fliers here on both technologies</font><font color="#CCCCCC"> zap</font>

814
00:35:48,380 --> 00:35:52,790
that we used here it's also<font color="#CCCCCC"> no loss</font>

815
00:35:50,720 --> 00:35:54,709
project<font color="#CCCCCC"> web</font><font color="#E5E5E5"> code dependency check you</font>

816
00:35:52,790 --> 00:35:56,599
can<font color="#E5E5E5"> find all those in the OS repository</font>

817
00:35:54,710 --> 00:35:59,270
and the code toasty<font color="#CCCCCC"> University</font>

818
00:35:56,599 --> 00:36:03,650
demonstration<font color="#E5E5E5"> it's available</font><font color="#CCCCCC"> here and</font>

819
00:35:59,270 --> 00:36:04,250
then a burp suite<font color="#E5E5E5"> which I used so thank</font>

820
00:36:03,650 --> 00:36:08,109
you everyone

821
00:36:04,250 --> 00:36:11,290
appreciate<font color="#CCCCCC"> it</font><font color="#E5E5E5"> we'll take some questions</font>

822
00:36:08,109 --> 00:36:11,290
<font color="#E5E5E5">yes sir</font>

823
00:36:15,640 --> 00:36:20,109
this is nothing<font color="#E5E5E5"> nothing is sold</font><font color="#CCCCCC"> here</font>

824
00:36:17,860 --> 00:36:22,180
this is all<font color="#CCCCCC"> open source</font><font color="#E5E5E5"> really a free</font><font color="#CCCCCC"> -</font>

825
00:36:20,110 --> 00:36:24,520
of<font color="#CCCCCC"> freely available the attack surface</font>

826
00:36:22,180 --> 00:36:26,799
detector can<font color="#CCCCCC"> be used independently</font>

827
00:36:24,520 --> 00:36:28,540
either using that CLI where you just

828
00:36:26,800 --> 00:36:30,550
<font color="#E5E5E5">pointing your</font><font color="#CCCCCC"> app you get a JSON</font><font color="#E5E5E5"> file</font>

829
00:36:28,540 --> 00:36:32,710
<font color="#CCCCCC">with the attack surface</font><font color="#E5E5E5"> or you can use</font>

830
00:36:30,550 --> 00:36:35,470
<font color="#CCCCCC">it integrated with burp and</font><font color="#E5E5E5"> zap plugins</font>

831
00:36:32,710 --> 00:36:37,180
<font color="#E5E5E5">or if you know if you get code pulse it</font>

832
00:36:35,470 --> 00:36:39,700
will<font color="#CCCCCC"> have this</font><font color="#E5E5E5"> already embedded inside</font>

833
00:36:37,180 --> 00:36:41,379
of<font color="#E5E5E5"> it and then you get the nice addition</font>

834
00:36:39,700 --> 00:36:43,419
of<font color="#E5E5E5"> being able</font><font color="#CCCCCC"> to see with that</font><font color="#E5E5E5"> tree map</font>

835
00:36:41,380 --> 00:36:45,640
<font color="#E5E5E5">all of</font><font color="#CCCCCC"> the things</font><font color="#E5E5E5"> that are part</font><font color="#CCCCCC"> of the</font>

836
00:36:43,420 --> 00:36:49,680
attack surface are highlighted based<font color="#E5E5E5"> on</font>

837
00:36:45,640 --> 00:36:49,680
that same kind<font color="#E5E5E5"> of analysis that's done</font>

838
00:36:50,580 --> 00:36:53,580
yes

839
00:36:59,150 --> 00:37:03,920
yeah so from my understanding<font color="#E5E5E5"> the single</font>

840
00:37:01,310 --> 00:37:05,029
single page apps will<font color="#E5E5E5"> I saw you have a</font>

841
00:37:03,920 --> 00:37:07,210
job<font color="#E5E5E5"> and my everything's kind of</font>

842
00:37:05,030 --> 00:37:10,700
<font color="#E5E5E5">JavaScript</font><font color="#CCCCCC"> II and but they're still</font>

843
00:37:07,210 --> 00:37:13,340
querying out to some back-end<font color="#E5E5E5"> REST API</font>

844
00:37:10,700 --> 00:37:16,609
<font color="#E5E5E5">and that's</font><font color="#CCCCCC"> where you can still figure</font>

845
00:37:13,340 --> 00:37:32,360
out<font color="#E5E5E5"> your attack surface right so you</font><font color="#CCCCCC"> and</font>

846
00:37:16,610 --> 00:37:35,870
so I think<font color="#E5E5E5"> it still comes into play yeah</font>

847
00:37:32,360 --> 00:37:38,090
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> that's a good question</font><font color="#E5E5E5"> there's</font>

848
00:37:35,870 --> 00:37:40,549
other there's other<font color="#E5E5E5"> parts of the attack</font>

849
00:37:38,090 --> 00:37:42,110
surface<font color="#E5E5E5"> of</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> why besides just web</font>

850
00:37:40,550 --> 00:37:45,320
requests<font color="#E5E5E5"> that's not currently covered</font>

851
00:37:42,110 --> 00:37:47,830
<font color="#E5E5E5">but</font><font color="#CCCCCC"> that that's</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> potential area</font>

852
00:37:45,320 --> 00:37:47,830
for expansion

853
00:37:50,190 --> 00:37:55,710
<font color="#E5E5E5">blew your ears like an angel</font>

854
00:37:53,160 --> 00:37:58,649
yeah I will post them yeah absolutely

855
00:37:55,710 --> 00:38:00,300
<font color="#CCCCCC">yeah and I'm at the code gekks</font><font color="#E5E5E5"> booth</font>

856
00:37:58,650 --> 00:38:02,250
I can provide<font color="#CCCCCC"> a more in-depth</font>

857
00:38:00,300 --> 00:38:04,580
demonstration<font color="#E5E5E5"> really looking for</font>

858
00:38:02,250 --> 00:38:07,200
feedback<font color="#CCCCCC"> again it's all open</font><font color="#E5E5E5"> source</font>

859
00:38:04,580 --> 00:38:09,360
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> proactive</font><font color="#CCCCCC"> we're you know feel free</font>

860
00:38:07,200 --> 00:38:11,850
to reach out to<font color="#E5E5E5"> me</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you want a demo we</font>

861
00:38:09,360 --> 00:38:13,050
can set up<font color="#CCCCCC"> time to do a demo I'm looking</font>

862
00:38:11,850 --> 00:38:15,089
<font color="#E5E5E5">to a contributor if you're looking to</font>

863
00:38:13,050 --> 00:38:17,520
just use it<font color="#E5E5E5"> really really interested in</font>

864
00:38:15,090 --> 00:38:21,840
getting<font color="#E5E5E5"> feedback from the community so</font>

865
00:38:17,520 --> 00:38:24,140
feel free to reach<font color="#CCCCCC"> out all</font><font color="#E5E5E5"> right thank</font>

866
00:38:21,840 --> 00:38:24,140
you everyone

867
00:38:25,540 --> 00:38:30,479
[Applause]

