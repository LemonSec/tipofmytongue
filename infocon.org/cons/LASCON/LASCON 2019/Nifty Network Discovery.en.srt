1
00:00:09,300 --> 00:00:32,280
[Music]

2
00:00:35,570 --> 00:00:40,710
so it's also fun being the afternoon

3
00:00:38,190 --> 00:00:42,780
spot after lunch spot on a Friday but I

4
00:00:40,710 --> 00:00:44,430
promise it'll be very fast and you can

5
00:00:42,780 --> 00:00:47,040
ignore it if you like but seriously

6
00:00:44,430 --> 00:00:48,059
though like so this talk is a little bit

7
00:00:47,040 --> 00:00:50,129
different from a lot of the stuff at

8
00:00:48,059 --> 00:00:51,720
last con it's basically the tip assists

9
00:00:50,129 --> 00:00:53,010
of applications everything is not an

10
00:00:51,720 --> 00:00:54,540
application the network is probably what

11
00:00:53,010 --> 00:00:55,830
we talked about today and it's to be a

12
00:00:54,540 --> 00:00:57,360
little bit encyclopedic and that we're

13
00:00:55,830 --> 00:00:58,650
kind of running through a thousand

14
00:00:57,360 --> 00:01:00,660
different discovery techniques different

15
00:00:58,650 --> 00:01:02,580
protocols another kind of network

16
00:01:00,660 --> 00:01:04,500
weirdness but it all kind of comes

17
00:01:02,580 --> 00:01:06,300
together with how do you discover things

18
00:01:04,500 --> 00:01:07,770
on modern networks today and how

19
00:01:06,300 --> 00:01:10,110
different has it is it from you know

20
00:01:07,770 --> 00:01:11,550
prior discovery techniques so if you

21
00:01:10,110 --> 00:01:13,950
like getting deep into the weeds on

22
00:01:11,550 --> 00:01:16,470
weird S&P fields and strange ways to

23
00:01:13,950 --> 00:01:17,820
reflect fields back from TCP syn packets

24
00:01:16,470 --> 00:01:19,289
and all that fun stuff this will be a

25
00:01:17,820 --> 00:01:21,690
fun talk if you do not care about

26
00:01:19,290 --> 00:01:23,340
network stuff at all this may be a

27
00:01:21,690 --> 00:01:25,740
little boring feel free to take a nap or

28
00:01:23,340 --> 00:01:29,070
go to the bar anything else you like so

29
00:01:25,740 --> 00:01:31,020
that I'll get started so I work for a

30
00:01:29,070 --> 00:01:32,789
traitor's I work for a coca research one

31
00:01:31,020 --> 00:01:33,960
hand I do security testing Consulting

32
00:01:32,790 --> 00:01:35,640
Red Team all that fun stuff

33
00:01:33,960 --> 00:01:37,288
other hands I've been building a network

34
00:01:35,640 --> 00:01:40,679
discovery product last year so we just

35
00:01:37,289 --> 00:01:42,630
went live about 25 days ago so we have

36
00:01:40,679 --> 00:01:44,789
customers now it's amazing and it does

37
00:01:42,630 --> 00:01:46,110
basically it asked inventory IT staff so

38
00:01:44,789 --> 00:01:48,060
that's kind of a lot of the work that

39
00:01:46,110 --> 00:01:50,670
you're seeing presented today has been

40
00:01:48,060 --> 00:01:52,110
driving the development of your security

41
00:01:50,670 --> 00:01:55,110
work or of the product that I work on as

42
00:01:52,110 --> 00:01:56,280
well so why do we care about discovery

43
00:01:55,110 --> 00:01:57,420
in the first place well if you're on a

44
00:01:56,280 --> 00:01:58,979
network and you try to figure out what

45
00:01:57,420 --> 00:02:01,830
the heck you have that's step one of

46
00:01:58,979 --> 00:02:04,140
security in a lot of realms if you look

47
00:02:01,830 --> 00:02:07,500
at a lot of the standards out there that

48
00:02:04,140 --> 00:02:08,788
require you to you know keep track where

49
00:02:07,500 --> 00:02:10,258
you have acid m in Tory's prints the

50
00:02:08,788 --> 00:02:11,309
very first thing you have to do to meet

51
00:02:10,258 --> 00:02:13,529
the security requirements of any

52
00:02:11,310 --> 00:02:14,880
standards you know this is the kind of

53
00:02:13,530 --> 00:02:16,830
obvious thing is you can't secure what

54
00:02:14,880 --> 00:02:18,450
you don't know about but also the fact

55
00:02:16,830 --> 00:02:20,400
that everything else builds on asset

56
00:02:18,450 --> 00:02:21,599
inventory if you don't know what's on

57
00:02:20,400 --> 00:02:23,340
your network you can't track patch

58
00:02:21,599 --> 00:02:24,569
levels you can't track remediation you

59
00:02:23,340 --> 00:02:26,840
don't know what stuff is pinging out to

60
00:02:24,569 --> 00:02:28,890
a third party all kinds of fun stuff so

61
00:02:26,840 --> 00:02:30,690
if you look at the way that older and

62
00:02:28,890 --> 00:02:32,760
our discovery has been done it's always

63
00:02:30,690 --> 00:02:34,349
been actually directory base WMI being

64
00:02:32,760 --> 00:02:36,929
sweeping running and map here and there

65
00:02:34,349 --> 00:02:38,399
that doesn't really keep up anymore so

66
00:02:36,930 --> 00:02:39,420
there's a couple ways that doesn't keep

67
00:02:38,400 --> 00:02:41,310
up anymore we'll go into that a little

68
00:02:39,420 --> 00:02:42,570
bit but the key point here is there's

69
00:02:41,310 --> 00:02:44,190
definitely room for innovation in the

70
00:02:42,570 --> 00:02:44,420
network discovery space and I'm hoping

71
00:02:44,190 --> 00:02:45,859
to

72
00:02:44,420 --> 00:02:47,000
trick it a little bit to that with what

73
00:02:45,860 --> 00:02:49,280
I'm talking about today and some of the

74
00:02:47,000 --> 00:02:50,930
open-source tools you publish if you

75
00:02:49,280 --> 00:02:52,520
look at external asset discovery this is

76
00:02:50,930 --> 00:02:53,780
a very much in the wheelhouse of last

77
00:02:52,520 --> 00:02:55,489
con where if you're trying to figure out

78
00:02:53,780 --> 00:02:56,900
what a company has application wise and

79
00:02:55,489 --> 00:02:58,160
you want to break into it because that's

80
00:02:56,900 --> 00:02:59,480
what we're doing or at least defend it

81
00:02:58,160 --> 00:03:01,160
you got to figure what's out there in

82
00:02:59,480 --> 00:03:02,420
the first place and this used to be

83
00:03:01,160 --> 00:03:03,859
really difficult you used to be you have

84
00:03:02,420 --> 00:03:05,420
to go trawl through all the old errand

85
00:03:03,860 --> 00:03:07,640
records to say okay find me every

86
00:03:05,420 --> 00:03:09,290
customer allocated Aaron block that

87
00:03:07,640 --> 00:03:10,850
happens to have this company name in it

88
00:03:09,290 --> 00:03:13,370
but not that company name but this one

89
00:03:10,850 --> 00:03:14,959
over here spelt this way it would take

90
00:03:13,370 --> 00:03:16,459
hours going through all the Aaron bulk

91
00:03:14,959 --> 00:03:17,450
data or going through Whois records

92
00:03:16,459 --> 00:03:19,880
trying to figure out exactly what a

93
00:03:17,450 --> 00:03:21,619
company has these days is actually a lot

94
00:03:19,880 --> 00:03:24,109
easier and the reason for that is comes

95
00:03:21,620 --> 00:03:25,940
down to certificate transparency who's

96
00:03:24,110 --> 00:03:28,760
familiar with show hands for whose

97
00:03:25,940 --> 00:03:31,250
promoters target transparency awesome

98
00:03:28,760 --> 00:03:33,048
okay Ct is amazing Ct is amazing because

99
00:03:31,250 --> 00:03:34,700
every single certificate that you care

100
00:03:33,049 --> 00:03:36,799
about as a security tester as a security

101
00:03:34,700 --> 00:03:38,480
person is be published on the internet

102
00:03:36,799 --> 00:03:41,120
almost in real time when it's registered

103
00:03:38,480 --> 00:03:46,010
so every extended validated extended

104
00:03:41,120 --> 00:03:47,630
validation certificate ear to be part of

105
00:03:46,010 --> 00:03:49,190
Chrome now the great thing about that is

106
00:03:47,630 --> 00:03:50,989
every high value website out there that

107
00:03:49,190 --> 00:03:53,690
has an AV cert is now immediately

108
00:03:50,989 --> 00:03:54,799
visible when that cert is published so

109
00:03:53,690 --> 00:03:56,000
you don't think Oh guess host names

110
00:03:54,799 --> 00:03:57,290
anymore they're all published in this

111
00:03:56,000 --> 00:03:59,209
difficult rands perón see because that's

112
00:03:57,290 --> 00:04:00,350
where your subject alt names your seat

113
00:03:59,209 --> 00:04:02,810
your common name all that stuff are

114
00:04:00,350 --> 00:04:04,670
posted so CT is great you can actually

115
00:04:02,810 --> 00:04:06,140
monitor CT in real time and find

116
00:04:04,670 --> 00:04:07,518
websites that are being registered as

117
00:04:06,140 --> 00:04:09,230
they're being registered you can

118
00:04:07,519 --> 00:04:10,790
actually snipe these you can find people

119
00:04:09,230 --> 00:04:12,980
setting up WordPress installations and

120
00:04:10,790 --> 00:04:14,600
before WordPress is even properly

121
00:04:12,980 --> 00:04:16,219
installed they have to allocate as SSL

122
00:04:14,600 --> 00:04:17,988
cert for it well if you pull the CT

123
00:04:16,220 --> 00:04:19,459
registration the SL cert out of the CT

124
00:04:17,988 --> 00:04:20,779
registration in real time you can

125
00:04:19,459 --> 00:04:22,850
actually configure that WordPress site

126
00:04:20,779 --> 00:04:24,289
backdoor it and star their modules then

127
00:04:22,850 --> 00:04:25,850
reset the configuration again afterwards

128
00:04:24,289 --> 00:04:27,440
before the user even sees in the first

129
00:04:25,850 --> 00:04:29,510
place and this happens automatically

130
00:04:27,440 --> 00:04:30,680
these days for things like GoDaddy and

131
00:04:29,510 --> 00:04:32,360
all these other third parties that set

132
00:04:30,680 --> 00:04:34,550
up WordPress sites on behalf of the

133
00:04:32,360 --> 00:04:36,020
users the second that SL serves publish

134
00:04:34,550 --> 00:04:37,220
it's not publicly visible internet and

135
00:04:36,020 --> 00:04:39,440
you can snipe them to the first set of

136
00:04:37,220 --> 00:04:41,360
use case so if you care about that stuff

137
00:04:39,440 --> 00:04:43,310
there's a whole lot of talks on at lots

138
00:04:41,360 --> 00:04:44,930
of cool research speaker techcom HDM a

139
00:04:43,310 --> 00:04:47,000
lot of my little talks cover CT stuff

140
00:04:44,930 --> 00:04:49,130
and external discovery this talk is not

141
00:04:47,000 --> 00:04:50,389
that this talk is the inverse of that

142
00:04:49,130 --> 00:04:53,570
we're gonna talk about internal network

143
00:04:50,389 --> 00:04:54,530
discovery so use the external was

144
00:04:53,570 --> 00:04:56,090
considered part part

145
00:04:54,530 --> 00:04:56,340
external is all the stuff internet that

146
00:04:56,090 --> 00:04:57,900
might

147
00:04:56,340 --> 00:04:59,280
a company and we care about that stuff

148
00:04:57,900 --> 00:05:00,960
because that's how people generally

149
00:04:59,280 --> 00:05:02,909
break in but what we're seeing is that

150
00:05:00,960 --> 00:05:04,140
visibility into internal environments

151
00:05:02,910 --> 00:05:06,090
has gotten much more difficult over the

152
00:05:04,140 --> 00:05:07,950
years especially if you're a company

153
00:05:06,090 --> 00:05:10,049
with has lots and lots of branch offices

154
00:05:07,950 --> 00:05:12,420
lots of small sites even involved lots

155
00:05:10,050 --> 00:05:13,320
of M&A your University where 90% of the

156
00:05:12,420 --> 00:05:15,210
equipment on your network is your

157
00:05:13,320 --> 00:05:16,860
student stuff not yours there's all

158
00:05:15,210 --> 00:05:18,750
these challenges with really complicated

159
00:05:16,860 --> 00:05:20,910
really segmented and really kind of

160
00:05:18,750 --> 00:05:22,680
distributed networks that were standard

161
00:05:20,910 --> 00:05:26,070
internal network discovery tools really

162
00:05:22,680 --> 00:05:27,270
stopped working years ago if you look at

163
00:05:26,070 --> 00:05:28,770
how the network operations teams

164
00:05:27,270 --> 00:05:31,500
generally look at discovery it's usually

165
00:05:28,770 --> 00:05:34,140
based on either SNP or based on telnet

166
00:05:31,500 --> 00:05:35,700
or SH CLI automation using tools like

167
00:05:34,140 --> 00:05:37,020
net brains and aa fake and things like

168
00:05:35,700 --> 00:05:38,849
that or all the SolarWinds stuff out

169
00:05:37,020 --> 00:05:40,200
there to do monitoring detection that's

170
00:05:38,850 --> 00:05:41,550
us great but what happens when you don't

171
00:05:40,200 --> 00:05:42,930
have s to V credentials because it's

172
00:05:41,550 --> 00:05:44,400
part of an acquired company being

173
00:05:42,930 --> 00:05:46,530
attached to your environment and you

174
00:05:44,400 --> 00:05:48,239
just don't have credentials to it same

175
00:05:46,530 --> 00:05:49,739
thing goes for a D most of the IT

176
00:05:48,240 --> 00:05:51,090
inventory tools out there or whether

177
00:05:49,740 --> 00:05:52,230
it's a you know another SolarWinds

178
00:05:51,090 --> 00:05:53,880
product or whether it's something else

179
00:05:52,230 --> 00:05:55,560
out there that does you know software

180
00:05:53,880 --> 00:05:57,300
inventory those are required being able

181
00:05:55,560 --> 00:05:59,070
to log into those desktops usually over

182
00:05:57,300 --> 00:06:00,630
you know port 445 through SMB and

183
00:05:59,070 --> 00:06:03,150
authenticated to using Active Directory

184
00:06:00,630 --> 00:06:04,770
credentials if you don't have Active

185
00:06:03,150 --> 00:06:06,690
Directory credentials well you don't get

186
00:06:04,770 --> 00:06:08,370
that anymore and even worse what if you

187
00:06:06,690 --> 00:06:09,900
can't even connect to port 445 because

188
00:06:08,370 --> 00:06:11,400
your new security standard says all

189
00:06:09,900 --> 00:06:13,650
desktops must have the firewall enabled

190
00:06:11,400 --> 00:06:15,000
even internally so as we move towards

191
00:06:13,650 --> 00:06:16,440
things like the kind of beyond Corp

192
00:06:15,000 --> 00:06:18,120
security model where we're hardening all

193
00:06:16,440 --> 00:06:19,800
of our desktops behind the firewall as

194
00:06:18,120 --> 00:06:22,140
well as outside of it as more folks

195
00:06:19,800 --> 00:06:23,610
moving to the laptops to BYOD all over

196
00:06:22,140 --> 00:06:25,979
typical discovery tools stop working

197
00:06:23,610 --> 00:06:27,300
entirely for internal the fallback for

198
00:06:25,980 --> 00:06:28,680
all this though is a lot of companies

199
00:06:27,300 --> 00:06:30,960
are using things like end up and just

200
00:06:28,680 --> 00:06:32,220
straight ICMP pings to say okay here's

201
00:06:30,960 --> 00:06:33,359
the stuff that we don't know about we

202
00:06:32,220 --> 00:06:36,210
can least ping it with one of these

203
00:06:33,360 --> 00:06:37,560
tools but they really go very far end up

204
00:06:36,210 --> 00:06:40,049
is an amazing tool I love that map

205
00:06:37,560 --> 00:06:41,550
they've used it for almost 20 years now

206
00:06:40,050 --> 00:06:43,080
what m-f is great at is telling you

207
00:06:41,550 --> 00:06:44,640
exactly what services is running and

208
00:06:43,080 --> 00:06:46,289
exactly what kernel version is running

209
00:06:44,640 --> 00:06:47,669
on that system it doesn't really tell

210
00:06:46,290 --> 00:06:49,080
you this thing's this particular access

211
00:06:47,670 --> 00:06:50,990
point this is that switch this is that

212
00:06:49,080 --> 00:06:53,039
printer that's the level of a

213
00:06:50,990 --> 00:06:54,570
coordination across all the fingerprints

214
00:06:53,040 --> 00:06:56,550
that and that doesn't do by itself and

215
00:06:54,570 --> 00:06:58,710
there's lots of ways to wrap that for

216
00:06:56,550 --> 00:07:00,660
example the you know Metasploit software

217
00:06:58,710 --> 00:07:02,039
will wrap the nmap XML and then use that

218
00:07:00,660 --> 00:07:03,180
do additional identification on that but

219
00:07:02,040 --> 00:07:04,140
it's not really the point of them that

220
00:07:03,180 --> 00:07:06,630
Emmett doesn't do that type of

221
00:07:04,140 --> 00:07:08,400
identification so the key point for all

222
00:07:06,630 --> 00:07:09,900
this is if most the tools that do

223
00:07:08,400 --> 00:07:11,489
discovery today don't do it too

224
00:07:09,900 --> 00:07:13,349
you discovery they do it so they can

225
00:07:11,490 --> 00:07:14,430
sell you the thing they actually do so

226
00:07:13,350 --> 00:07:15,419
that could be patch management that

227
00:07:14,430 --> 00:07:17,460
could be monitoring it could be

228
00:07:15,419 --> 00:07:19,169
inventory but what they do is not

229
00:07:17,460 --> 00:07:22,520
discovery what they do is something else

230
00:07:19,169 --> 00:07:22,520
and discovery is how they get you there

231
00:07:22,820 --> 00:07:25,740
so we talked about most of this in

232
00:07:24,780 --> 00:07:27,000
addition to all the stuff we chatted

233
00:07:25,740 --> 00:07:28,830
about there's also things like Sdn

234
00:07:27,000 --> 00:07:30,169
containers clouds of realization these

235
00:07:28,830 --> 00:07:33,270
are all throwing a monkey wrench into

236
00:07:30,169 --> 00:07:36,780
how folks do visibility and tracking

237
00:07:33,270 --> 00:07:38,039
internally today as far as like how

238
00:07:36,780 --> 00:07:39,599
people are doing discovery you'll see a

239
00:07:38,039 --> 00:07:41,550
lot of folks moving to pass or discovery

240
00:07:39,600 --> 00:07:42,900
things like net flow which is talked

241
00:07:41,550 --> 00:07:44,250
earlier about talked a little bit about

242
00:07:42,900 --> 00:07:47,310
building your own net flow from from

243
00:07:44,250 --> 00:07:49,710
traffic logs you also see more folks

244
00:07:47,310 --> 00:07:50,850
using like centralized Sdn type

245
00:07:49,710 --> 00:07:52,859
solutions where you're actually pulling

246
00:07:50,850 --> 00:07:54,330
SNP from like four Scout solution where

247
00:07:52,860 --> 00:07:55,380
they actually do ask me people hauling

248
00:07:54,330 --> 00:07:57,719
about their switches to find all the

249
00:07:55,380 --> 00:07:59,310
devices there's lots of new approaches

250
00:07:57,720 --> 00:08:00,900
that are being tried these days to help

251
00:07:59,310 --> 00:08:02,310
with internal discovery but what

252
00:08:00,900 --> 00:08:04,320
nobody's doing what there's very few

253
00:08:02,310 --> 00:08:06,630
innovation happening at all is active

254
00:08:04,320 --> 00:08:08,370
scanning discovery no one you know he

255
00:08:06,630 --> 00:08:09,840
used to be back in the 90s early 2000s

256
00:08:08,370 --> 00:08:11,220
if you want to find stuff you scan for

257
00:08:09,840 --> 00:08:13,138
it you think it you're an nmap grande

258
00:08:11,220 --> 00:08:14,220
necesitas something these days move

259
00:08:13,139 --> 00:08:15,539
people are moving further and further

260
00:08:14,220 --> 00:08:17,070
away from actual discovery B's has

261
00:08:15,539 --> 00:08:18,599
gotten much harder the amount of

262
00:08:17,070 --> 00:08:19,770
information you can gather from a system

263
00:08:18,599 --> 00:08:21,330
on the network where the firewall turned

264
00:08:19,770 --> 00:08:22,710
on is very little compared to what it

265
00:08:21,330 --> 00:08:24,530
used to be and a lot of folks have moved

266
00:08:22,710 --> 00:08:26,609
away from actual discovery as a result

267
00:08:24,530 --> 00:08:27,750
so the challenges with actual discovery

268
00:08:26,610 --> 00:08:29,820
of course is if you have an

269
00:08:27,750 --> 00:08:31,199
authenticated discovery tool it's bring

270
00:08:29,820 --> 00:08:34,620
your password to everything on the

271
00:08:31,199 --> 00:08:36,800
network now like who here uses responder

272
00:08:34,620 --> 00:08:38,909
is the first thing they do on a pen test

273
00:08:36,799 --> 00:08:40,289
okay a couple folks so responders great

274
00:08:38,909 --> 00:08:41,789
it just passively listens then I work

275
00:08:40,289 --> 00:08:43,559
waiting for someone to connect to it so

276
00:08:41,789 --> 00:08:44,880
if you go into a new environment you're

277
00:08:43,559 --> 00:08:46,079
about to do pen tests you set up a

278
00:08:44,880 --> 00:08:47,910
laptop you connect the network you run

279
00:08:46,080 --> 00:08:49,320
responder you walk away some time the

280
00:08:47,910 --> 00:08:51,300
next 24 hours they'll be a bone scan

281
00:08:49,320 --> 00:08:53,070
they'll be an IT it adds an inventory

282
00:08:51,300 --> 00:08:54,479
enumeration there'll be a patch

283
00:08:53,070 --> 00:08:55,529
management tool to be something out

284
00:08:54,480 --> 00:08:56,520
there that just connects to every

285
00:08:55,529 --> 00:08:58,380
computer the network gives you his

286
00:08:56,520 --> 00:09:00,480
password and that's just how these tools

287
00:08:58,380 --> 00:09:02,520
work they depend on something else

288
00:09:00,480 --> 00:09:03,690
logging into every single system on the

289
00:09:02,520 --> 00:09:05,069
Tor network and giving it credentials

290
00:09:03,690 --> 00:09:07,050
they didn't have before which is huge

291
00:09:05,070 --> 00:09:08,400
security risk Voland scanners are

292
00:09:07,050 --> 00:09:09,839
notorious for this every time we run an

293
00:09:08,400 --> 00:09:11,339
SS scan with credentials it's going to

294
00:09:09,839 --> 00:09:13,380
send you that stored credential to all

295
00:09:11,339 --> 00:09:14,850
those systems you try to connect to and

296
00:09:13,380 --> 00:09:16,200
there's ways to limit your risk ways to

297
00:09:14,850 --> 00:09:18,240
use reduce writes accounts and all that

298
00:09:16,200 --> 00:09:19,709
fun stuff but most the tools that do

299
00:09:18,240 --> 00:09:21,420
active scanning especially credentialed

300
00:09:19,709 --> 00:09:22,920
ones are security risk in that they

301
00:09:21,420 --> 00:09:23,229
expose your credentials to an untrusted

302
00:09:22,920 --> 00:09:26,050
third

303
00:09:23,230 --> 00:09:27,280
on the same segment Hakeem in the middle

304
00:09:26,050 --> 00:09:28,510
all lots of other fun stuff plus they're

305
00:09:27,280 --> 00:09:31,329
not really as good anymore because of

306
00:09:28,510 --> 00:09:33,130
firewalling and so on so if you look at

307
00:09:31,330 --> 00:09:34,480
the kind of new crop of security tools

308
00:09:33,130 --> 00:09:35,380
coming out for after discovery they work

309
00:09:34,480 --> 00:09:37,000
a little bit differently they're mostly

310
00:09:35,380 --> 00:09:37,960
focused on you know passive discovery

311
00:09:37,000 --> 00:09:40,240
techniques they're not gonna be looking

312
00:09:37,960 --> 00:09:41,770
at pinging your whole network and see

313
00:09:40,240 --> 00:09:44,200
other things respond instead they're

314
00:09:41,770 --> 00:09:45,520
gonna start off inside of your core

315
00:09:44,200 --> 00:09:46,750
network environment they'll be pulling

316
00:09:45,520 --> 00:09:49,300
from your top port they'll be pulling

317
00:09:46,750 --> 00:09:52,960
NetFlow data companies like Sanrio arm

318
00:09:49,300 --> 00:09:54,520
is for scalp clarity etc so it's a nice

319
00:09:52,960 --> 00:09:55,750
improvement factor discovery and that

320
00:09:54,520 --> 00:09:57,550
you see everything as long as it's

321
00:09:55,750 --> 00:09:58,900
talking but there's significant

322
00:09:57,550 --> 00:10:00,040
challenges to it if you try to use

323
00:09:58,900 --> 00:10:01,990
passive discovery tools for an

324
00:10:00,040 --> 00:10:03,699
environment that you don't have access

325
00:10:01,990 --> 00:10:05,170
to when this multiple hops away one

326
00:10:03,700 --> 00:10:06,340
that's on a remote site it's really

327
00:10:05,170 --> 00:10:07,479
challenging just to get your net flow

328
00:10:06,340 --> 00:10:10,420
out of those devices in the first place

329
00:10:07,480 --> 00:10:11,920
it's also really challenging to figure

330
00:10:10,420 --> 00:10:14,110
out you know to coordinate with a remote

331
00:10:11,920 --> 00:10:15,490
IT team things like that they're also

332
00:10:14,110 --> 00:10:17,500
kind of expensive because unless you

333
00:10:15,490 --> 00:10:19,060
have remote access to that environment

334
00:10:17,500 --> 00:10:20,380
or you've got a device on the remote end

335
00:10:19,060 --> 00:10:21,969
or a virtual appliance to the remote end

336
00:10:20,380 --> 00:10:23,680
it's hard to really capture the data you

337
00:10:21,970 --> 00:10:25,120
need for discovery so these tools are

338
00:10:23,680 --> 00:10:26,560
great when you have the ability to do

339
00:10:25,120 --> 00:10:28,840
centralized deployments and when you can

340
00:10:26,560 --> 00:10:29,890
actually do a remote site capture but

341
00:10:28,840 --> 00:10:31,000
they start to fall down and seem to get

342
00:10:29,890 --> 00:10:32,319
beyond that so what we're really missing

343
00:10:31,000 --> 00:10:36,250
say is there's no great tools out there

344
00:10:32,320 --> 00:10:37,210
for like active discovery and most of

345
00:10:36,250 --> 00:10:39,460
research and active discovery really

346
00:10:37,210 --> 00:10:41,440
peaked in the late 90s early 2000s there

347
00:10:39,460 --> 00:10:43,030
used to be this huge like zoo of network

348
00:10:41,440 --> 00:10:45,220
discovery tools out there everything

349
00:10:43,030 --> 00:10:48,970
from make flash CD to X probe and poff

350
00:10:45,220 --> 00:10:50,920
casus NFP all the a map there's a bunch

351
00:10:48,970 --> 00:10:52,330
of teetsi tools a bunch of ADM tools

352
00:10:50,920 --> 00:10:53,650
every hacker crew had their own little

353
00:10:52,330 --> 00:10:55,690
mini scanner they ran something for

354
00:10:53,650 --> 00:10:56,770
there's old Legion tool from Rhino 9

355
00:10:55,690 --> 00:10:58,780
there's all this stuff that used to

356
00:10:56,770 --> 00:11:00,490
exist and now we've got an that and then

357
00:10:58,780 --> 00:11:01,660
that was great because nmap PC it wasn't

358
00:11:00,490 --> 00:11:03,070
an amoeba and gobbled up all those

359
00:11:01,660 --> 00:11:04,420
things just like Metasploit did with all

360
00:11:03,070 --> 00:11:06,100
the exploits of the world I went through

361
00:11:04,420 --> 00:11:07,300
an implement all of them we seen and map

362
00:11:06,100 --> 00:11:08,650
turn around implement all the best

363
00:11:07,300 --> 00:11:10,660
techniques of all the old tools bring

364
00:11:08,650 --> 00:11:11,949
together the challenges there's not a

365
00:11:10,660 --> 00:11:14,050
lot of new stuff happening and after

366
00:11:11,950 --> 00:11:16,180
discovery space a lot of the weird

367
00:11:14,050 --> 00:11:17,890
obscure stuff like has anyone here run a

368
00:11:16,180 --> 00:11:19,500
Christmas scan and end up in the last

369
00:11:17,890 --> 00:11:24,160
five years

370
00:11:19,500 --> 00:11:25,240
besides Jaguar okay so they mean that

371
00:11:24,160 --> 00:11:27,910
these are cool techniques but they're

372
00:11:25,240 --> 00:11:28,870
not use very much anymore but low-level

373
00:11:27,910 --> 00:11:30,850
fingerprints have actually more relevant

374
00:11:28,870 --> 00:11:33,850
than ever all those like newfangled like

375
00:11:30,850 --> 00:11:35,230
you know web 3.0 you know DevOps e

376
00:11:33,850 --> 00:11:36,540
technologies out there like your fancy

377
00:11:35,230 --> 00:11:38,820
Sdn deployments your

378
00:11:36,540 --> 00:11:40,500
or containerized networking all that

379
00:11:38,820 --> 00:11:42,270
stuff has like fingerprint abilities

380
00:11:40,500 --> 00:11:43,860
p-stats it does stuff that's different

381
00:11:42,270 --> 00:11:46,020
oh so that's weird compared to normal s

382
00:11:43,860 --> 00:11:46,980
yet all the fun cool stuff we did back

383
00:11:46,020 --> 00:11:48,120
to the 90s to figure out whether

384
00:11:46,980 --> 00:11:49,530
someone's Windows or Linux it now

385
00:11:48,120 --> 00:11:50,940
applies to containers now applies to

386
00:11:49,530 --> 00:11:54,360
virtualization now applies to cloud

387
00:11:50,940 --> 00:11:55,680
environments all the fingerprint all so

388
00:11:54,360 --> 00:11:57,690
applies things like load balancers and

389
00:11:55,680 --> 00:11:58,739
so on so it's all coming back around

390
00:11:57,690 --> 00:12:01,620
again but it's taking a while to get

391
00:11:58,740 --> 00:12:02,970
there the one area where are seeing

392
00:12:01,620 --> 00:12:04,050
decent success with passive

393
00:12:02,970 --> 00:12:05,850
fingerprinting is in the case of

394
00:12:04,050 --> 00:12:07,979
fingerprint deployed directly to a

395
00:12:05,850 --> 00:12:09,810
router so if you're using a fancy

396
00:12:07,980 --> 00:12:11,370
consumer router or a fancy business

397
00:12:09,810 --> 00:12:13,079
router with these features it'll do

398
00:12:11,370 --> 00:12:14,250
things like DP fingerprinting directly

399
00:12:13,080 --> 00:12:16,080
on the router itself using a library

400
00:12:14,250 --> 00:12:17,280
like finger bank and those are cool ways

401
00:12:16,080 --> 00:12:18,570
to say okay what kind of devices do have

402
00:12:17,280 --> 00:12:20,490
my environment is it this kind of phone

403
00:12:18,570 --> 00:12:21,690
of that kind of phone the challenge of

404
00:12:20,490 --> 00:12:22,980
those solutions though is as soon as it

405
00:12:21,690 --> 00:12:24,210
can only be receipt your DCP client

406
00:12:22,980 --> 00:12:25,500
fingerprint in other words it's not on

407
00:12:24,210 --> 00:12:28,400
the same segment as your finger putting

408
00:12:25,500 --> 00:12:30,750
tool it doesn't tell you much anymore

409
00:12:28,400 --> 00:12:32,459
so sorry for the long rant but the idea

410
00:12:30,750 --> 00:12:33,810
is like if we wanted to build a awesome

411
00:12:32,460 --> 00:12:35,070
thing that didn't require that was

412
00:12:33,810 --> 00:12:36,359
actually discovery base the required

413
00:12:35,070 --> 00:12:38,280
credentials they didn't require having

414
00:12:36,360 --> 00:12:40,140
local tap for taxes they didn't require

415
00:12:38,280 --> 00:12:41,189
layer to access to everything and work

416
00:12:40,140 --> 00:12:42,510
across everything how do we go about

417
00:12:41,190 --> 00:12:44,130
doing it and this is kind of what led me

418
00:12:42,510 --> 00:12:45,480
down the path of the research and the

419
00:12:44,130 --> 00:12:46,830
product death stuff but I'm here to talk

420
00:12:45,480 --> 00:12:49,770
about the research itself and some of

421
00:12:46,830 --> 00:12:50,880
the cool tech things you can do so the

422
00:12:49,770 --> 00:12:52,140
challenge is it's very similar to

423
00:12:50,880 --> 00:12:53,880
running a bone scanner if you are going

424
00:12:52,140 --> 00:12:56,640
to rewrite Qualis or necess from scratch

425
00:12:53,880 --> 00:12:57,840
today there's hundreds of thousands of

426
00:12:56,640 --> 00:13:00,090
volchek so you'd have to implement just

427
00:12:57,840 --> 00:13:01,560
to get to the minimum bar discovery is

428
00:13:00,090 --> 00:13:02,550
not quite as bad but there's definitely

429
00:13:01,560 --> 00:13:03,989
a lot of work that has to be done you

430
00:13:02,550 --> 00:13:05,160
have to treat it the same way you have

431
00:13:03,990 --> 00:13:06,480
to do a whole lot of research trying to

432
00:13:05,160 --> 00:13:08,370
figure out how can I send a really small

433
00:13:06,480 --> 00:13:09,570
probe to this device and have it respond

434
00:13:08,370 --> 00:13:10,890
back in a way that tells me that it's

435
00:13:09,570 --> 00:13:12,450
not this device or it's this other

436
00:13:10,890 --> 00:13:14,280
device or T's version and not this other

437
00:13:12,450 --> 00:13:15,330
version so it's very similar to pre

438
00:13:14,280 --> 00:13:17,040
authenticating vulnerability scanning

439
00:13:15,330 --> 00:13:18,270
work and that work is really expensive

440
00:13:17,040 --> 00:13:20,730
the reason we've seen most volcanic

441
00:13:18,270 --> 00:13:22,319
switch to authenticated checks is

442
00:13:20,730 --> 00:13:24,180
because you can't keep up with unnethe

443
00:13:22,320 --> 00:13:25,410
indicated scanning necess does a pretty

444
00:13:24,180 --> 00:13:26,609
good job of that so far the one of the

445
00:13:25,410 --> 00:13:28,110
few vendors that actually tries to keep

446
00:13:26,610 --> 00:13:29,430
ahead of the pre authenticated work but

447
00:13:28,110 --> 00:13:31,380
they've got an entire dedicated team

448
00:13:29,430 --> 00:13:33,270
just doing that get paired to the same

449
00:13:31,380 --> 00:13:35,400
size team doing all of the other 90% of

450
00:13:33,270 --> 00:13:37,170
the fingerprints it's just a huge

451
00:13:35,400 --> 00:13:38,160
research effort however that's what I

452
00:13:37,170 --> 00:13:39,569
like doing sorry I should love this

453
00:13:38,160 --> 00:13:41,310
stuff but let's actually treat this like

454
00:13:39,570 --> 00:13:43,140
a research project and look at this is

455
00:13:41,310 --> 00:13:44,939
you know doing applied research for the

456
00:13:43,140 --> 00:13:46,140
sake of device discovery at the same

457
00:13:44,940 --> 00:13:47,220
level that we've previously done for

458
00:13:46,140 --> 00:13:49,400
exploit development of own building

459
00:13:47,220 --> 00:13:49,400
research

460
00:13:49,420 --> 00:13:52,900
so starting off this is like what my

461
00:13:50,980 --> 00:13:54,730
all-time favorite discovery technique of

462
00:13:52,900 --> 00:13:57,730
using since 1994 and I'll probably keep

463
00:13:54,730 --> 00:14:04,870
using until 2000 in 94 at this point if

464
00:13:57,730 --> 00:14:06,550
I lived that long but so let's see for

465
00:14:04,870 --> 00:14:10,300
folks who are familiar with like NetBIOS

466
00:14:06,550 --> 00:14:11,469
137 gtp probes I think I've given an

467
00:14:10,300 --> 00:14:13,569
answer right here in the slide already

468
00:14:11,470 --> 00:14:15,850
but so you can use them to of course

469
00:14:13,570 --> 00:14:17,530
find the host name of the system used to

470
00:14:15,850 --> 00:14:18,820
tell you the work crew prep system you

471
00:14:17,530 --> 00:14:20,170
can tell the MAC address of the system

472
00:14:18,820 --> 00:14:22,780
remotely if it's not Samba and not

473
00:14:20,170 --> 00:14:24,400
faking out the MAC address but it's the

474
00:14:22,780 --> 00:14:25,990
second query you can do when you scan a

475
00:14:24,400 --> 00:14:27,880
system on the network for a NetBIOS gtp

476
00:14:25,990 --> 00:14:29,110
over 137 you say hey what's your name

477
00:14:27,880 --> 00:14:31,180
the device will come back saying my name

478
00:14:29,110 --> 00:14:32,410
is Bob ok great Bob if you go back and

479
00:14:31,180 --> 00:14:33,910
then query that system again saying hey

480
00:14:32,410 --> 00:14:35,020
Bob what are your what are your IP

481
00:14:33,910 --> 00:14:37,329
addresses it'll actually come back a

482
00:14:35,020 --> 00:14:38,410
list of all those ipv4 interfaces now

483
00:14:37,330 --> 00:14:39,940
the really cool thing about that those

484
00:14:38,410 --> 00:14:42,670
are the current active interfaces

485
00:14:39,940 --> 00:14:44,560
including VPN adapters its cloud adapter

486
00:14:42,670 --> 00:14:45,849
is virtualization adapters all that fun

487
00:14:44,560 --> 00:14:47,560
stuff you can find all your systems

488
00:14:45,850 --> 00:14:49,060
running a VMware virtualization stack on

489
00:14:47,560 --> 00:14:50,439
the local network using a single

490
00:14:49,060 --> 00:14:53,109
unauthenticated UDP Pro up the broadcast

491
00:14:50,440 --> 00:14:54,100
works great you also get the MAC address

492
00:14:53,110 --> 00:14:55,210
back which tells you more things about

493
00:14:54,100 --> 00:14:56,620
the environment you can tell what the

494
00:14:55,210 --> 00:14:58,570
devices on a VPN you can tell what the

495
00:14:56,620 --> 00:14:59,650
VPN IP address is so if you're trying to

496
00:14:58,570 --> 00:15:01,480
figure out is this device currently

497
00:14:59,650 --> 00:15:03,280
connected to a V PC using Amazon's VPN

498
00:15:01,480 --> 00:15:04,570
client as long as you don't the firewall

499
00:15:03,280 --> 00:15:05,920
enabled on Windows it'll actually tell

500
00:15:04,570 --> 00:15:08,230
you through a single unattended K to you

501
00:15:05,920 --> 00:15:10,209
be back so I love this stuff so I'm

502
00:15:08,230 --> 00:15:13,420
using this for years to figure out how

503
00:15:10,210 --> 00:15:14,410
to do multi home host discovery so we're

504
00:15:13,420 --> 00:15:16,540
trying to figure out how to break into

505
00:15:14,410 --> 00:15:17,709
the you know the PCI CDE or some other

506
00:15:16,540 --> 00:15:19,209
sensitive environment from the network

507
00:15:17,710 --> 00:15:20,980
that you're currently on you can scan

508
00:15:19,210 --> 00:15:22,420
the subnet look via NetBIOS find any

509
00:15:20,980 --> 00:15:23,740
device comes back saying it has an IP

510
00:15:22,420 --> 00:15:25,449
and that other sudden that as well and

511
00:15:23,740 --> 00:15:27,880
then break into that box is that box

512
00:15:25,450 --> 00:15:29,110
will get you where you want to go so

513
00:15:27,880 --> 00:15:30,820
there's a open source tool for this I'm

514
00:15:29,110 --> 00:15:33,520
going to play for it at github comm each

515
00:15:30,820 --> 00:15:35,110
year next net and this does NetBIOS

516
00:15:33,520 --> 00:15:36,819
queries really quickly and sprays

517
00:15:35,110 --> 00:15:38,650
packets out and get to you MAC addresses

518
00:15:36,820 --> 00:15:39,850
and all the IPS coming back in and a

519
00:15:38,650 --> 00:15:41,560
great way to find all your multiple home

520
00:15:39,850 --> 00:15:43,990
boxes when things are kind of their

521
00:15:41,560 --> 00:15:45,969
default configuration so skipping ahead

522
00:15:43,990 --> 00:15:47,110
a bit if you're trying to figure out how

523
00:15:45,970 --> 00:15:49,210
to find more information than

524
00:15:47,110 --> 00:15:51,340
opportunistic SDP we've all used SNP for

525
00:15:49,210 --> 00:15:53,170
discovery at some point STP is like the

526
00:15:51,340 --> 00:15:54,970
stupid brother printer that I just

527
00:15:53,170 --> 00:15:57,670
bought has a driver that installs that

528
00:15:54,970 --> 00:15:59,140
SVP gets and sets by default on every

529
00:15:57,670 --> 00:16:00,670
network key joint so I was looking at

530
00:15:59,140 --> 00:16:01,960
the Wireshark traffic this laptop I

531
00:16:00,670 --> 00:16:03,099
plugged into the last PI Network and I'm

532
00:16:01,960 --> 00:16:04,510
seeing it do SMTP set

533
00:16:03,100 --> 00:16:06,190
request random device in the local

534
00:16:04,510 --> 00:16:07,480
subnet look what the heck man like this

535
00:16:06,190 --> 00:16:07,870
just the printer driver doing it all by

536
00:16:07,480 --> 00:16:09,280
itself

537
00:16:07,870 --> 00:16:11,950
so the cool thing about that though is

538
00:16:09,280 --> 00:16:13,030
they assume that STP is gonna be enabled

539
00:16:11,950 --> 00:16:14,590
on every printer and they're gonna

540
00:16:13,030 --> 00:16:16,030
assume that version 2 is enabled with

541
00:16:14,590 --> 00:16:17,230
the committee string of public so great

542
00:16:16,030 --> 00:16:19,030
let's views that how do we figure out

543
00:16:17,230 --> 00:16:21,070
how to get the most information for SNP

544
00:16:19,030 --> 00:16:22,660
as possible not an a like oh I'm gonna

545
00:16:21,070 --> 00:16:23,740
steer your password or still that

546
00:16:22,660 --> 00:16:25,120
potentials withdrawal great things you

547
00:16:23,740 --> 00:16:26,740
can do with it but how do I just get

548
00:16:25,120 --> 00:16:29,860
like basic discovery information out of

549
00:16:26,740 --> 00:16:31,060
these devices that RSVP enabled so you

550
00:16:29,860 --> 00:16:32,320
can pull things out like the art cache

551
00:16:31,060 --> 00:16:33,699
you can find the neighbors that realize

552
00:16:32,320 --> 00:16:34,930
by pulling his art cache you can dump

553
00:16:33,700 --> 00:16:36,460
the Mack and VLAN tables and with

554
00:16:34,930 --> 00:16:37,719
switches really quickly which gives you

555
00:16:36,460 --> 00:16:39,040
the full port topology because they

556
00:16:37,720 --> 00:16:40,570
listed every other client connected to

557
00:16:39,040 --> 00:16:41,650
the same environment you can find device

558
00:16:40,570 --> 00:16:42,670
that are completely firewalls off

559
00:16:41,650 --> 00:16:43,990
because you can then find their Mac

560
00:16:42,670 --> 00:16:45,819
routers in the port table and say okay

561
00:16:43,990 --> 00:16:47,890
but I got the Mac where's IP and keep

562
00:16:45,820 --> 00:16:49,300
looking for it so it's a little bit

563
00:16:47,890 --> 00:16:50,800
limited but there's a lot of really cool

564
00:16:49,300 --> 00:16:52,569
benefits when you do happen to find a

565
00:16:50,800 --> 00:16:53,949
SNMP enable device somewhere in your

566
00:16:52,570 --> 00:16:54,940
attack environment your target

567
00:16:53,950 --> 00:16:58,030
environment because it'll tell you about

568
00:16:54,940 --> 00:17:00,490
all this neighbors as to be really is

569
00:16:58,030 --> 00:17:03,010
the NARC of the IT world so you're an

570
00:17:00,490 --> 00:17:05,290
example here if you want to dump the IT

571
00:17:03,010 --> 00:17:06,790
cache this is telling us the MAC

572
00:17:05,290 --> 00:17:08,349
addresses of all the workstations in the

573
00:17:06,790 --> 00:17:10,540
same local network just by pulling the

574
00:17:08,349 --> 00:17:11,500
art cache of the printer so as long as

575
00:17:10,540 --> 00:17:12,520
you had a printer somewhere it's gonna

576
00:17:11,500 --> 00:17:13,810
dump you all the information so we're

577
00:17:12,520 --> 00:17:16,510
gonna build on this example we're gonna

578
00:17:13,810 --> 00:17:17,440
make this like the the base of our fort

579
00:17:16,510 --> 00:17:18,490
that we're gonna build on top of this

580
00:17:17,440 --> 00:17:21,280
little kernel of information because

581
00:17:18,490 --> 00:17:23,140
it's so much fun to mess with so you can

582
00:17:21,280 --> 00:17:25,020
take that based example a second ago or

583
00:17:23,140 --> 00:17:27,190
do SMP polling of this particular Amit

584
00:17:25,020 --> 00:17:28,629
insight great this will tell me anything

585
00:17:27,190 --> 00:17:28,960
that's currently in the art cache to the

586
00:17:28,630 --> 00:17:29,980
printer

587
00:17:28,960 --> 00:17:31,570
well what's in our cache the printer

588
00:17:29,980 --> 00:17:33,010
obviously anything that talks to the

589
00:17:31,570 --> 00:17:34,060
printer is gonna be an art cache as long

590
00:17:33,010 --> 00:17:35,290
as it's pulled it in the last five

591
00:17:34,060 --> 00:17:37,179
minutes or so it'll be in the art cache

592
00:17:35,290 --> 00:17:38,560
of it so all your workstation is to have

593
00:17:37,180 --> 00:17:40,060
an active connection to that printer

594
00:17:38,560 --> 00:17:41,409
thermic addresses will show up in a

595
00:17:40,060 --> 00:17:42,790
printer so if you dump the art - look

596
00:17:41,410 --> 00:17:43,990
Twitter it's not just telling you here's

597
00:17:42,790 --> 00:17:45,490
IP and here's the Mac of things that are

598
00:17:43,990 --> 00:17:47,050
nearby it's like here's the IP here's

599
00:17:45,490 --> 00:17:48,880
the Mac of devices that are talking to

600
00:17:47,050 --> 00:17:50,050
this specific printer right now so you

601
00:17:48,880 --> 00:17:51,310
know which systems are probably

602
00:17:50,050 --> 00:17:52,600
workstations that ever printer installed

603
00:17:51,310 --> 00:17:53,590
and you know which ones are talking

604
00:17:52,600 --> 00:17:54,610
about printer so getting connection

605
00:17:53,590 --> 00:17:57,159
information out of it as well you're not

606
00:17:54,610 --> 00:17:59,439
just getting our cache so let's build on

607
00:17:57,160 --> 00:18:01,840
a bit let's say we wanted to enumerate

608
00:17:59,440 --> 00:18:03,550
the remote subnet of the MAC addresses

609
00:18:01,840 --> 00:18:06,159
of a remote subnet we can't do an arts

610
00:18:03,550 --> 00:18:07,840
can because it's across the firewall we

611
00:18:06,160 --> 00:18:08,950
can get the art cache normally but the

612
00:18:07,840 --> 00:18:10,600
art caches only tell us things that are

613
00:18:08,950 --> 00:18:12,220
currently in our cache that's not really

614
00:18:10,600 --> 00:18:13,270
enough to tell us if we want to find

615
00:18:12,220 --> 00:18:15,400
everything not just what's currently

616
00:18:13,270 --> 00:18:16,450
talking the printer today so how do we

617
00:18:15,400 --> 00:18:16,810
force things to talk to the printer

618
00:18:16,450 --> 00:18:18,910
remote

619
00:18:16,810 --> 00:18:21,429
well the really easy mode is he spoof

620
00:18:18,910 --> 00:18:23,170
IPS you say okay I'm in 192 168 0 at

621
00:18:21,430 --> 00:18:23,890
whatever my printers in 119 wants to get

622
00:18:23,170 --> 00:18:27,100
one dot whatever

623
00:18:23,890 --> 00:18:28,960
let me spoof traffic from one to the the

624
00:18:27,100 --> 00:18:30,760
printer from every source IP of the

625
00:18:28,960 --> 00:18:32,350
destination subnet and you'll cause all

626
00:18:30,760 --> 00:18:35,410
the reflected replies that end up in our

627
00:18:32,350 --> 00:18:37,030
cache so using a super good example here

628
00:18:35,410 --> 00:18:39,160
yeah so using n map for example with a

629
00:18:37,030 --> 00:18:40,540
send IP option spoofing your SP host

630
00:18:39,160 --> 00:18:42,820
scanning your target Network like that

631
00:18:40,540 --> 00:18:44,020
you actually force populate our cache of

632
00:18:42,820 --> 00:18:45,399
the printer with all the devices in the

633
00:18:44,020 --> 00:18:47,110
remote subnet and then you can dump the

634
00:18:45,400 --> 00:18:48,760
our cache then you get them all so now

635
00:18:47,110 --> 00:18:49,810
we've got a remote ARP scan built on the

636
00:18:48,760 --> 00:18:53,740
fact that we've got a printer sitting in

637
00:18:49,810 --> 00:18:55,179
this environment the challenge this

638
00:18:53,740 --> 00:18:56,950
though is it doesn't work if you've got

639
00:18:55,180 --> 00:18:58,360
our P filter one or RP 40 calls Eero on

640
00:18:56,950 --> 00:19:00,340
linux routers so I've got a Linux based

641
00:18:58,360 --> 00:19:01,209
router between you and that subnet a lot

642
00:19:00,340 --> 00:19:02,679
of those get drawn from the floor

643
00:19:01,210 --> 00:19:04,780
however if you've got standard like

644
00:19:02,680 --> 00:19:06,640
Netgear or some switch or layer 3 switch

645
00:19:04,780 --> 00:19:08,710
involved they generally pass the traffic

646
00:19:06,640 --> 00:19:12,130
right through unless you've got egress

647
00:19:08,710 --> 00:19:13,870
filters in both sides so another we can

648
00:19:12,130 --> 00:19:15,490
do it let's say you can't spoof traffic

649
00:19:13,870 --> 00:19:16,419
because spoofing traffic's easy way to

650
00:19:15,490 --> 00:19:19,870
do this stuff we have to go a little

651
00:19:16,420 --> 00:19:21,490
harder so two guys in the talus team

652
00:19:19,870 --> 00:19:23,560
Martin Alexander had a really cool

653
00:19:21,490 --> 00:19:26,710
technique of using UPnP notify request

654
00:19:23,560 --> 00:19:28,690
to leak ipv6 addresses about v4 subnets

655
00:19:26,710 --> 00:19:30,730
so what they would do is they send a

656
00:19:28,690 --> 00:19:33,100
UPnP request every system on the network

657
00:19:30,730 --> 00:19:35,530
and they say hey you PNP thingy I want

658
00:19:33,100 --> 00:19:37,090
you to notify my UPnP endpoint but I

659
00:19:35,530 --> 00:19:39,430
want you to notify this host name that

660
00:19:37,090 --> 00:19:41,050
resolved to a v6 address instead and so

661
00:19:39,430 --> 00:19:42,580
they cause all the v4 devices on the

662
00:19:41,050 --> 00:19:44,169
whole internet to then connect to a v6

663
00:19:42,580 --> 00:19:45,970
address of their choice and then you can

664
00:19:44,170 --> 00:19:47,740
figure out which ipv6 addresses went to

665
00:19:45,970 --> 00:19:49,540
which IP v4 devices so that's really

666
00:19:47,740 --> 00:19:51,100
cool research however we can abuse that

667
00:19:49,540 --> 00:19:53,200
for a remote ARP spoofing we can say

668
00:19:51,100 --> 00:19:54,760
let's do a UPnP notified to every device

669
00:19:53,200 --> 00:19:55,810
inside the system inside the local

670
00:19:54,760 --> 00:19:57,310
network telling you to talk to my

671
00:19:55,810 --> 00:19:58,629
printer and then vice versa and we can

672
00:19:57,310 --> 00:19:59,710
use that to slowly build up the ARP

673
00:19:58,630 --> 00:20:00,850
cache of the printer it then dump the

674
00:19:59,710 --> 00:20:02,530
ARP cache again and then we have all the

675
00:20:00,850 --> 00:20:04,810
Mac's so it's another way to basically

676
00:20:02,530 --> 00:20:07,629
force populate our cache using UPnP

677
00:20:04,810 --> 00:20:09,100
notify request another way you can do it

678
00:20:07,630 --> 00:20:10,840
this works better if for most corporate

679
00:20:09,100 --> 00:20:12,730
environments we've got you know sip

680
00:20:10,840 --> 00:20:14,649
phones like IP phones in the environment

681
00:20:12,730 --> 00:20:16,840
you can do sip notifies and sips -

682
00:20:14,650 --> 00:20:18,670
excuse me sit invites to force calls

683
00:20:16,840 --> 00:20:20,139
between devices that were then reflect

684
00:20:18,670 --> 00:20:22,510
back to the printer because the

685
00:20:20,140 --> 00:20:24,400
destination end point of the call is

686
00:20:22,510 --> 00:20:26,230
specified in the UDP payload not on the

687
00:20:24,400 --> 00:20:27,940
transport layer so you can send EVP

688
00:20:26,230 --> 00:20:29,350
payload to a phone saying I'm making a

689
00:20:27,940 --> 00:20:30,460
phone call to your phone and I want you

690
00:20:29,350 --> 00:20:31,869
to call me back at this other

691
00:20:30,460 --> 00:20:33,460
I pee and that other IP is the printer

692
00:20:31,869 --> 00:20:34,840
now you're populating our cache of all

693
00:20:33,460 --> 00:20:36,669
your phones you can also use to find

694
00:20:34,840 --> 00:20:38,019
some the desktops as well so this is a

695
00:20:36,669 --> 00:20:39,909
cool technique this is notified by Rick

696
00:20:38,019 --> 00:20:41,590
Lee the Shay of Trend Micro I'm not sure

697
00:20:39,909 --> 00:20:43,529
he's here today but local guy here did

698
00:20:41,590 --> 00:20:46,269
some awesome work on it

699
00:20:43,529 --> 00:20:47,409
so moving on SP I'm gonna hopefully beat

700
00:20:46,269 --> 00:20:49,360
this dead horse all the way into the

701
00:20:47,409 --> 00:20:50,919
ground here but SP v1 is really neat the

702
00:20:49,360 --> 00:20:53,408
challenge of v1 which is a really really

703
00:20:50,919 --> 00:20:55,899
really old version of for you of SNP is

704
00:20:53,409 --> 00:20:57,850
that has it very few features you can

705
00:20:55,899 --> 00:20:58,928
only request 100 ID at a time or

706
00:20:57,850 --> 00:21:00,369
generally you can't do it get bulk

707
00:20:58,929 --> 00:21:01,990
request which is the fast way to query

708
00:21:00,369 --> 00:21:03,459
stuff you know a single blow IDs what

709
00:21:01,990 --> 00:21:05,200
you can do is you can stack multiple oh

710
00:21:03,460 --> 00:21:06,190
I DS into the same get request at the

711
00:21:05,200 --> 00:21:07,269
same time and almost every

712
00:21:06,190 --> 00:21:09,100
implementation out there will support

713
00:21:07,269 --> 00:21:10,659
this so if the device only supports

714
00:21:09,100 --> 00:21:12,369
version 1 and it's really slow you can

715
00:21:10,659 --> 00:21:14,529
still stack multiple ad requests in the

716
00:21:12,369 --> 00:21:16,629
same packet the problems there's no like

717
00:21:14,529 --> 00:21:18,070
user layin tools that do this you have

718
00:21:16,629 --> 00:21:19,059
to actually get into the the wire level

719
00:21:18,070 --> 00:21:20,740
and actually stock all things together

720
00:21:19,059 --> 00:21:22,480
and do all the bare encoding all kind of

721
00:21:20,740 --> 00:21:23,619
junk in destiny so here's an example

722
00:21:22,480 --> 00:21:25,480
what a packet looks like when you

723
00:21:23,619 --> 00:21:27,399
request 15 items in the same Eston DV

724
00:21:25,480 --> 00:21:28,899
won't be one size the only real limit on

725
00:21:27,399 --> 00:21:30,639
this is the response packet has to be

726
00:21:28,899 --> 00:21:32,350
smaller than the maximum set on there

727
00:21:30,639 --> 00:21:34,899
STP server side which is anywhere

728
00:21:32,350 --> 00:21:36,399
between used to be 500 to 1400 bytes

729
00:21:34,899 --> 00:21:37,989
depending on the implementation so you

730
00:21:36,399 --> 00:21:39,158
get a lot of data the neat thing about

731
00:21:37,990 --> 00:21:41,440
this though is let's say you wanted to

732
00:21:39,159 --> 00:21:43,690
enumerate every IP address of an SP

733
00:21:41,440 --> 00:21:44,889
device but with just one packet or less

734
00:21:43,690 --> 00:21:46,330
it's a whole bunch of really sensitive o

735
00:21:44,889 --> 00:21:47,709
ID mids you want to query things like

736
00:21:46,330 --> 00:21:49,899
the store del that password the store

737
00:21:47,710 --> 00:21:51,100
telnet password you want to pull the ARP

738
00:21:49,899 --> 00:21:52,719
cache entries you want to pull anything

739
00:21:51,100 --> 00:21:54,639
you want to pull out SNMP you can now

740
00:21:52,720 --> 00:21:56,320
query about 15 of these at the exact

741
00:21:54,639 --> 00:21:57,279
same time with a single packet and spray

742
00:21:56,320 --> 00:21:59,080
that packet across the entire

743
00:21:57,279 --> 00:22:00,700
environment so send out a like first

744
00:21:59,080 --> 00:22:02,289
scan for SNP and then go back and query

745
00:22:00,700 --> 00:22:04,029
all these through a really slow SNP walk

746
00:22:02,289 --> 00:22:05,700
that is one query at a time you get it

747
00:22:04,029 --> 00:22:09,610
all in exactly one packet really quickly

748
00:22:05,700 --> 00:22:11,860
it's also good for you dots same thing

749
00:22:09,610 --> 00:22:13,449
forget walk so get bulk actually is the

750
00:22:11,860 --> 00:22:14,889
same attribute get bulk you can actually

751
00:22:13,450 --> 00:22:16,629
so get bulk is the way that you query of

752
00:22:14,889 --> 00:22:18,158
multiple IDs at once an SMB version too

753
00:22:16,629 --> 00:22:20,230
so it's only supported in version 2 and

754
00:22:18,159 --> 00:22:21,580
version 3 it queries an entire range of

755
00:22:20,230 --> 00:22:23,259
oh i d--'s starting starting at a

756
00:22:21,580 --> 00:22:24,970
particular entry and then moving to the

757
00:22:23,259 --> 00:22:26,259
maximum value you set but the cool thing

758
00:22:24,970 --> 00:22:27,820
about this you can also stack those you

759
00:22:26,259 --> 00:22:30,100
can put multiple get bulk queries into

760
00:22:27,820 --> 00:22:32,439
the same packet and most devices except

761
00:22:30,100 --> 00:22:34,299
for the IBM I series mainframes will

762
00:22:32,440 --> 00:22:35,289
respond to this just fine and again it's

763
00:22:34,299 --> 00:22:36,759
great for DT off because you can get

764
00:22:35,289 --> 00:22:39,730
like a 1500 byte or even though in some

765
00:22:36,759 --> 00:22:42,190
cases 6500 fragmented a 6500 byte

766
00:22:39,730 --> 00:22:43,450
fragmented UDP packet as a response to

767
00:22:42,190 --> 00:22:43,750
one of these things by pulling a whole

768
00:22:43,450 --> 00:22:46,000
bunch

769
00:22:43,750 --> 00:22:47,770
at the same time so it's really neat you

770
00:22:46,000 --> 00:22:49,660
can actually do you can be seen numerate

771
00:22:47,770 --> 00:22:51,190
you can dump every IP address every mac

772
00:22:49,660 --> 00:22:52,990
gutters every art cache entry at the

773
00:22:51,190 --> 00:22:55,780
same time in the same packet across most

774
00:22:52,990 --> 00:22:56,920
environments of one packet and the speed

775
00:22:55,780 --> 00:22:59,530
is ridiculous so if you're going from

776
00:22:56,920 --> 00:23:01,180
like let's do a quick scan and to fall

777
00:22:59,530 --> 00:23:02,980
by a walk to doing a single packet like

778
00:23:01,180 --> 00:23:06,750
this is saving you by 50 packets and

779
00:23:02,980 --> 00:23:06,750
about you know 20 30 seconds per host

780
00:23:06,900 --> 00:23:10,660
let's see I think yeah here's an example

781
00:23:09,100 --> 00:23:12,520
that so grabbing all the max all IP

782
00:23:10,660 --> 00:23:14,080
you've got 300 ad stats here these are

783
00:23:12,520 --> 00:23:15,430
three get bulks in a row and each one of

784
00:23:14,080 --> 00:23:20,320
these is pulling an entire table for the

785
00:23:15,430 --> 00:23:22,660
remote device so here's the first chance

786
00:23:20,320 --> 00:23:24,370
to win a trade his t-shirt that is only

787
00:23:22,660 --> 00:23:25,780
slightly wrinkled looking so I got

788
00:23:24,370 --> 00:23:27,399
squished in my bag of wear but they say

789
00:23:25,780 --> 00:23:28,750
I only have size large I apologize

790
00:23:27,400 --> 00:23:31,480
but if you would like a size large shirt

791
00:23:28,750 --> 00:23:34,540
and you can answer this question for s

792
00:23:31,480 --> 00:23:37,030
AP version 3 what does it tell you if

793
00:23:34,540 --> 00:23:38,800
you can't authenticate to it you don't

794
00:23:37,030 --> 00:23:40,810
have a valid password system v3 requires

795
00:23:38,800 --> 00:23:43,840
that occasion requires an 8 byte or more

796
00:23:40,810 --> 00:23:46,570
password for either off prif or for the

797
00:23:43,840 --> 00:23:48,429
privacy password so what do you get from

798
00:23:46,570 --> 00:23:49,870
s we version 3 if you can the kind of

799
00:23:48,430 --> 00:23:57,940
gate besides the fact that it's ask me

800
00:23:49,870 --> 00:24:03,850
visa version 3 oh yeah bad error message

801
00:23:57,940 --> 00:24:04,960
bad passwords close any other guesses ok

802
00:24:03,850 --> 00:24:13,360
well that was actually close enough

803
00:24:04,960 --> 00:24:14,980
answer you get a search so SUV version 3

804
00:24:13,360 --> 00:24:17,439
has what's called an engine ID an engine

805
00:24:14,980 --> 00:24:19,270
ID is this kind of opaque identifier a

806
00:24:17,440 --> 00:24:20,770
bunch of big bag of bytes basically that

807
00:24:19,270 --> 00:24:21,850
says if you want to talk to me you have

808
00:24:20,770 --> 00:24:23,139
to authenticate to me and you have to

809
00:24:21,850 --> 00:24:25,510
use engine ID as part of the challenge

810
00:24:23,140 --> 00:24:26,920
and citation process so what very few

811
00:24:25,510 --> 00:24:28,360
people seem to know on the pen test side

812
00:24:26,920 --> 00:24:30,070
is you can do user enumeration to

813
00:24:28,360 --> 00:24:32,830
recipes version 3 there's a tool called

814
00:24:30,070 --> 00:24:34,210
the SP pone or SN ponens want to call it

815
00:24:32,830 --> 00:24:35,980
that which will go through and brutalist

816
00:24:34,210 --> 00:24:37,390
list user names to tell you what to use

817
00:24:35,980 --> 00:24:38,500
names are valid even without knowing the

818
00:24:37,390 --> 00:24:40,180
password so that's a great thing you do

819
00:24:38,500 --> 00:24:41,470
so you get the user name out now why do

820
00:24:40,180 --> 00:24:42,460
you care about user name well maybe the

821
00:24:41,470 --> 00:24:43,930
user name will tell you that the same

822
00:24:42,460 --> 00:24:45,490
user name is valid on these five routers

823
00:24:43,930 --> 00:24:46,720
but that user names not valid in these

824
00:24:45,490 --> 00:24:48,700
other five writers well which ones are

825
00:24:46,720 --> 00:24:50,140
eyes P managed now we know so you can't

826
00:24:48,700 --> 00:24:51,580
a great way to say who operates who

827
00:24:50,140 --> 00:24:53,620
manages these routers these other

828
00:24:51,580 --> 00:24:54,730
routers or switches but that's all we're

829
00:24:53,620 --> 00:24:56,289
gonna talk about

830
00:24:54,730 --> 00:24:58,090
engine ID actually has some other useful

831
00:24:56,289 --> 00:24:59,200
fields in it so gentleman mentioned

832
00:24:58,090 --> 00:25:00,220
before there's some error fields that

833
00:24:59,200 --> 00:25:02,260
come back out they're actually really

834
00:25:00,220 --> 00:25:04,029
interesting so you get invalid engine ID

835
00:25:02,260 --> 00:25:05,260
count is a number of times something's

836
00:25:04,029 --> 00:25:07,179
tried to authenticate to it and failed

837
00:25:05,260 --> 00:25:08,289
so you can get the the baddest

838
00:25:07,179 --> 00:25:10,120
indication counter out of it

839
00:25:08,289 --> 00:25:11,559
unauthenticated you get the engine time

840
00:25:10,120 --> 00:25:13,750
you get the boot size you get the max

841
00:25:11,559 --> 00:25:15,549
size but the really interesting thing

842
00:25:13,750 --> 00:25:17,980
here is the engine ID itself which is

843
00:25:15,549 --> 00:25:19,960
this giant blob up there you can see how

844
00:25:17,980 --> 00:25:22,210
visible it is but essentially it's this

845
00:25:19,960 --> 00:25:23,320
giant blob of bytes which has a type

846
00:25:22,210 --> 00:25:25,929
field then type could be something like

847
00:25:23,320 --> 00:25:27,519
mac address or text field or octet but

848
00:25:25,929 --> 00:25:29,350
what we really care about is what's in

849
00:25:27,519 --> 00:25:30,789
that blob itself because that blob will

850
00:25:29,350 --> 00:25:32,110
give us the enterprise ID which tells

851
00:25:30,789 --> 00:25:33,879
you they manufacture the device for sure

852
00:25:32,110 --> 00:25:35,139
so even without nothing else we're

853
00:25:33,880 --> 00:25:36,549
getting back to manufacturer we can tell

854
00:25:35,139 --> 00:25:37,658
whether it's a Cisco device in a with

855
00:25:36,549 --> 00:25:39,399
Cisco because they bought some other

856
00:25:37,659 --> 00:25:40,600
device their Wireless LAN controllers

857
00:25:39,399 --> 00:25:42,309
come back different engine ID than the

858
00:25:40,600 --> 00:25:43,360
rest of them sometimes the Mac outers

859
00:25:42,309 --> 00:25:46,000
doesn't actually match the engine ID

860
00:25:43,360 --> 00:25:46,959
because of acquisitions another thing

861
00:25:46,000 --> 00:25:48,610
that really really matters here and

862
00:25:46,960 --> 00:25:50,559
think that but we're gonna abuse the

863
00:25:48,610 --> 00:25:51,580
crap out of is that MAC address so

864
00:25:50,559 --> 00:25:52,899
essentially even if you can't

865
00:25:51,580 --> 00:25:54,428
authenticate to advise the rest will be

866
00:25:52,899 --> 00:25:57,149
version 3 you can get its Mac out it's

867
00:25:54,429 --> 00:25:57,149
remotely thought authentication

868
00:25:57,600 --> 00:26:01,570
however getting the MAC address out is

869
00:25:59,409 --> 00:26:03,340
really tricky it depends on the type of

870
00:26:01,570 --> 00:26:05,500
equipment some of them return the Mac

871
00:26:03,340 --> 00:26:07,389
outers is the last six bytes of the inch

872
00:26:05,500 --> 00:26:09,700
ID field some of them do almost like

873
00:26:07,389 --> 00:26:10,990
eui-64 encoding where they put at fffe

874
00:26:09,700 --> 00:26:12,789
in the middle of it between bytes born

875
00:26:10,990 --> 00:26:14,289
to some of them or everything but the

876
00:26:12,789 --> 00:26:16,809
last one byte some reading with last two

877
00:26:14,289 --> 00:26:18,100
bytes so you have to actually figure it

878
00:26:16,809 --> 00:26:19,418
out you have to go through the millions

879
00:26:18,100 --> 00:26:21,309
of knowings replies like so we did

880
00:26:19,419 --> 00:26:22,929
public entire internet got about 22

881
00:26:21,309 --> 00:26:23,830
million of these things dug through them

882
00:26:22,929 --> 00:26:25,389
all and figured out how they're all

883
00:26:23,830 --> 00:26:26,889
formatted and then built rules to do map

884
00:26:25,389 --> 00:26:28,959
them all so that's kind of where we

885
00:26:26,889 --> 00:26:30,699
ended up not only do you get the MAC

886
00:26:28,960 --> 00:26:32,559
address these systems but in cases where

887
00:26:30,700 --> 00:26:34,059
it's based on the net SNP open source

888
00:26:32,559 --> 00:26:35,918
software you get a very different

889
00:26:34,059 --> 00:26:37,539
response which is called a random ID and

890
00:26:35,919 --> 00:26:38,830
the random ID is it pretty cool because

891
00:26:37,539 --> 00:26:40,389
it all she tell you is this device

892
00:26:38,830 --> 00:26:41,289
uniquely this host or is it a different

893
00:26:40,389 --> 00:26:43,809
hook so if you're trying to find a

894
00:26:41,289 --> 00:26:45,460
multi-home device and you do an SME v3

895
00:26:43,809 --> 00:26:46,990
scan you'll get back all these random

896
00:26:45,460 --> 00:26:49,000
IDs from net in s and P hoes

897
00:26:46,990 --> 00:26:50,320
anytime those random IDs are the same

898
00:26:49,000 --> 00:26:51,850
between multiple hosts you know it's

899
00:26:50,320 --> 00:26:53,230
probably the same device so now you've

900
00:26:51,850 --> 00:26:54,969
identified multiple home devices based

901
00:26:53,230 --> 00:26:58,510
on a wide scan by correlating unique

902
00:26:54,970 --> 00:27:01,899
values so switching gears again real

903
00:26:58,510 --> 00:27:03,010
quick way back in like 2004 so I got

904
00:27:01,899 --> 00:27:05,649
pulled into a project where we're trying

905
00:27:03,010 --> 00:27:08,110
to identify it was a large radio station

906
00:27:05,649 --> 00:27:10,709
network and the DJ's were

907
00:27:08,110 --> 00:27:13,000
selling rogue ads and we turn for

908
00:27:10,710 --> 00:27:14,770
unmonitored internet links from each

909
00:27:13,000 --> 00:27:16,299
radio station cuz they want to like look

910
00:27:14,770 --> 00:27:17,379
at porn and do things like that so they

911
00:27:16,299 --> 00:27:18,129
were getting in trouble of corporate

912
00:27:17,380 --> 00:27:19,870
because they're supposed to go through

913
00:27:18,130 --> 00:27:21,280
corporate for their corporate proxy so I

914
00:27:19,870 --> 00:27:23,770
got pulled into this job where we had to

915
00:27:21,280 --> 00:27:25,540
go find all the egress points of this

916
00:27:23,770 --> 00:27:27,160
network from internally but we couldn't

917
00:27:25,540 --> 00:27:28,420
physically go to the sites we didn't

918
00:27:27,160 --> 00:27:29,559
have any privilege oxygen anything we

919
00:27:28,420 --> 00:27:31,030
had no credential didn't name because

920
00:27:29,559 --> 00:27:33,220
these are just like random DJ's Windows

921
00:27:31,030 --> 00:27:35,950
98 or I guess at this point Windows

922
00:27:33,220 --> 00:27:38,650
Vista boxes maybe maybe look too early

923
00:27:35,950 --> 00:27:39,640
fat but essentially we defined out all

924
00:27:38,650 --> 00:27:40,540
the different egress points to the

925
00:27:39,640 --> 00:27:42,070
network I'm gonna do it without

926
00:27:40,540 --> 00:27:44,020
credentials and from a central scanning

927
00:27:42,070 --> 00:27:47,350
location and turn into a whole fun

928
00:27:44,020 --> 00:27:49,929
project so where we ended up with this

929
00:27:47,350 --> 00:27:52,689
the very first thing we did is we ran

930
00:27:49,929 --> 00:27:54,280
bassy a spoof since can so if you're

931
00:27:52,690 --> 00:27:55,690
gonna send a syn packet every system on

932
00:27:54,280 --> 00:27:57,370
in the internal network and you're gonna

933
00:27:55,690 --> 00:27:58,330
send it from an internet host even

934
00:27:57,370 --> 00:28:00,040
though you're sending it on the internal

935
00:27:58,330 --> 00:28:01,629
network the internal host will reply to

936
00:28:00,040 --> 00:28:04,450
that external host as if is local and

937
00:28:01,630 --> 00:28:05,620
router dot it's default route so if that

938
00:28:04,450 --> 00:28:06,610
default route happens to go out a

939
00:28:05,620 --> 00:28:07,928
different interface than when you're

940
00:28:06,610 --> 00:28:09,459
monitoring and it comes back into your

941
00:28:07,929 --> 00:28:11,230
internet facing host you now know all

942
00:28:09,460 --> 00:28:12,280
the points of your network or traffic is

943
00:28:11,230 --> 00:28:13,780
leaving your network through other

944
00:28:12,280 --> 00:28:15,639
internet connections besides the one

945
00:28:13,780 --> 00:28:17,080
that you know about so you can find VPN

946
00:28:15,640 --> 00:28:18,130
adapters that are default gateways back

947
00:28:17,080 --> 00:28:20,439
then it was things like AOL dial-up

948
00:28:18,130 --> 00:28:21,730
would change your default route so if

949
00:28:20,440 --> 00:28:23,440
you find a machine on the local network

950
00:28:21,730 --> 00:28:25,090
that had an AOL adapter and you scanned

951
00:28:23,440 --> 00:28:27,100
it you'd actually see the packet coming

952
00:28:25,090 --> 00:28:29,049
back out of AOL instead and the trick

953
00:28:27,100 --> 00:28:31,178
for this was we encoded the sequence

954
00:28:29,049 --> 00:28:33,340
number of the TCP packet itself had the

955
00:28:31,179 --> 00:28:35,559
internal IP destined coded as the same

956
00:28:33,340 --> 00:28:37,000
32-bit value so when we got the syn ack

957
00:28:35,559 --> 00:28:38,620
back we just decremented one from that

958
00:28:37,000 --> 00:28:41,710
that gave us an internal IP we bust that

959
00:28:38,620 --> 00:28:43,840
DJ for having a well installed the

960
00:28:41,710 --> 00:28:44,770
challenge that was with spoofing this

961
00:28:43,840 --> 00:28:47,080
traffic it doesn't like to cross

962
00:28:44,770 --> 00:28:48,460
firewalls very well because any time the

963
00:28:47,080 --> 00:28:50,770
egress filters on one side of another

964
00:28:48,460 --> 00:28:51,760
firewall it will drop your packets let's

965
00:28:50,770 --> 00:28:53,139
we played around a couple of ways to do

966
00:28:51,760 --> 00:28:55,270
it you can do ICMP as well I guess spoof

967
00:28:53,140 --> 00:28:57,190
ICMP where you include like an encoded

968
00:28:55,270 --> 00:28:59,080
version of the initial destination into

969
00:28:57,190 --> 00:29:00,280
the ICMP data packet spray that across

970
00:28:59,080 --> 00:29:01,840
the entire environment from an external

971
00:29:00,280 --> 00:29:03,549
host looks at ICMP echo is coming back

972
00:29:01,840 --> 00:29:06,790
out and then basically fingerprint them

973
00:29:03,549 --> 00:29:08,139
and then bust them so it worked okay the

974
00:29:06,790 --> 00:29:09,760
problem was soon as the firewalls

975
00:29:08,140 --> 00:29:11,860
stateful firewalls that either managed

976
00:29:09,760 --> 00:29:13,960
ICMP state or TCP sequence States or did

977
00:29:11,860 --> 00:29:14,649
egress detection would break that so

978
00:29:13,960 --> 00:29:16,419
we're looking at what are some other

979
00:29:14,650 --> 00:29:18,640
ways been go and improve that technique

980
00:29:16,419 --> 00:29:19,720
from you know 13 years ago make it

981
00:29:18,640 --> 00:29:20,940
better today or however long it's been

982
00:29:19,720 --> 00:29:22,920
spent a long time

983
00:29:20,940 --> 00:29:24,630
so now folks we could drop this stuff

984
00:29:22,920 --> 00:29:26,970
but UDP payloads actually work a lot

985
00:29:24,630 --> 00:29:28,620
better we can use things like upp notify

986
00:29:26,970 --> 00:29:30,180
you can use like all the UDP stuff we

987
00:29:28,620 --> 00:29:31,560
talked about like net piles and we can

988
00:29:30,180 --> 00:29:34,320
be spoof of those packets internally

989
00:29:31,560 --> 00:29:35,790
just like p2 p4 or spoof the UPP notify

990
00:29:34,320 --> 00:29:37,409
destination to be nirodha facing IP

991
00:29:35,790 --> 00:29:39,450
lists on the internet side and get it

992
00:29:37,410 --> 00:29:40,740
back so here's an example of using zmapp

993
00:29:39,450 --> 00:29:43,050
kind of a modern to take on that so

994
00:29:40,740 --> 00:29:45,000
we're new zmapp internally to scan for

995
00:29:43,050 --> 00:29:46,440
the NetBIOS port we're gonna use that

996
00:29:45,000 --> 00:29:47,760
NetBIOS ping packet that it ships with

997
00:29:46,440 --> 00:29:49,200
that's one of the ones we contributed to

998
00:29:47,760 --> 00:29:50,250
it back in the day and then on the

999
00:29:49,200 --> 00:29:52,050
internet side we're gonna listen for

1000
00:29:50,250 --> 00:29:54,030
anything on port 137 and we can actually

1001
00:29:52,050 --> 00:29:55,830
see internal hosts are responding back

1002
00:29:54,030 --> 00:29:57,600
to us now the cool thing about this is

1003
00:29:55,830 --> 00:29:59,429
the source ports 137 the destination

1004
00:29:57,600 --> 00:30:01,110
ports not so your firewall was dropping

1005
00:29:59,430 --> 00:30:02,400
out that 137 that's fine because it's

1006
00:30:01,110 --> 00:30:04,290
coming back out some rows is to reply to

1007
00:30:02,400 --> 00:30:05,280
it it's not the inbound so most

1008
00:30:04,290 --> 00:30:06,690
firewalls actually allow this traffic

1009
00:30:05,280 --> 00:30:08,370
outputs to them it just looks like a

1010
00:30:06,690 --> 00:30:11,040
weird source port going out to a high

1011
00:30:08,370 --> 00:30:12,600
UDP port but in reality it's a full UDP

1012
00:30:11,040 --> 00:30:15,060
reply leaking back to the MAC address IP

1013
00:30:12,600 --> 00:30:16,350
s hostname workgroup etc so that's a

1014
00:30:15,060 --> 00:30:20,520
cool technique for UDP that it's still

1015
00:30:16,350 --> 00:30:22,409
used today oh I need to start flying to

1016
00:30:20,520 --> 00:30:25,590
this 30 slides we got about 90 more to

1017
00:30:22,410 --> 00:30:29,030
go we can do this I'm getting a little

1018
00:30:25,590 --> 00:30:31,080
faster though so DNS is cool all right

1019
00:30:29,030 --> 00:30:32,970
before I push your DNS I need to figure

1020
00:30:31,080 --> 00:30:38,220
out how to get rid of this t-shirt does

1021
00:30:32,970 --> 00:30:40,020
anyone here know what Idina 0 is Idina 0

1022
00:30:38,220 --> 00:30:43,830
it's a it's an extension to the DNS

1023
00:30:40,020 --> 00:30:46,980
protocol called Idina 0 sorry I don't

1024
00:30:43,830 --> 00:30:49,620
see any hands up and miss anybody all

1025
00:30:46,980 --> 00:30:53,010
right easier one

1026
00:30:49,620 --> 00:30:55,199
if you send if you use one of those big

1027
00:30:53,010 --> 00:30:58,890
DNS gateways out there like 1 1 1 1 or 8

1028
00:30:55,200 --> 00:31:00,360
8 8 how does the down how does the final

1029
00:30:58,890 --> 00:31:01,860
upstream DNS server the website you're

1030
00:31:00,360 --> 00:31:03,330
actually trying to go to know which

1031
00:31:01,860 --> 00:31:04,830
region just serve you from how does it

1032
00:31:03,330 --> 00:31:06,810
do any cask routing how does it find

1033
00:31:04,830 --> 00:31:07,409
either most geographically close system

1034
00:31:06,810 --> 00:31:09,720
for you

1035
00:31:07,410 --> 00:31:12,240
just keep in mind the DNS servers is

1036
00:31:09,720 --> 00:31:13,590
you're talking to the DNS server the DNS

1037
00:31:12,240 --> 00:31:14,970
server the cache in DNS servers and to

1038
00:31:13,590 --> 00:31:17,159
make a request on your behalf but it

1039
00:31:14,970 --> 00:31:18,390
doesn't have doing it from your IP is

1040
00:31:17,160 --> 00:31:19,710
doing using its IPs

1041
00:31:18,390 --> 00:31:21,060
it's going upstream someplace else

1042
00:31:19,710 --> 00:31:22,200
pouring your authoritative server that's

1043
00:31:21,060 --> 00:31:24,300
coming back telling you where to go to

1044
00:31:22,200 --> 00:31:26,400
how does that automotive server know

1045
00:31:24,300 --> 00:31:29,180
where you are to give you the closest

1046
00:31:26,400 --> 00:31:29,180
server to talk to

1047
00:31:32,909 --> 00:31:39,519
yes similar close enough you get a

1048
00:31:35,350 --> 00:31:42,039
t-shirt though so et ns0 is an extension

1049
00:31:39,519 --> 00:31:43,360
for DNS the increases that maximum size

1050
00:31:42,039 --> 00:31:45,370
of the packet but also supports

1051
00:31:43,360 --> 00:31:47,799
something called client subnet discovery

1052
00:31:45,370 --> 00:31:50,500
so what happens is if you use the 8.8

1053
00:31:47,799 --> 00:31:51,700
that 8 DNS server Google's a narc Google

1054
00:31:50,500 --> 00:31:54,039
will actually take your internal IP

1055
00:31:51,700 --> 00:31:55,389
address staple it on to DNS packet and

1056
00:31:54,039 --> 00:31:57,129
forward it upstream to authority of DNS

1057
00:31:55,389 --> 00:31:58,689
server who can then see oh this is where

1058
00:31:57,129 --> 00:32:00,129
the users really coming from and then

1059
00:31:58,690 --> 00:32:01,750
brought you to the right response based

1060
00:32:00,129 --> 00:32:03,759
on that they're actually taking your

1061
00:32:01,750 --> 00:32:06,039
internal IP and sending off to the real

1062
00:32:03,759 --> 00:32:07,480
upstream DNS provider however they just

1063
00:32:06,039 --> 00:32:09,580
sent it directly what they do instead is

1064
00:32:07,480 --> 00:32:11,500
they encode it they encode just the

1065
00:32:09,580 --> 00:32:13,029
slash 24 so it's ok Google is not

1066
00:32:11,500 --> 00:32:14,860
telling you your exact IP just what

1067
00:32:13,029 --> 00:32:17,889
slash 24 you're coming from which is the

1068
00:32:14,860 --> 00:32:20,110
same thing so the cool thing about this

1069
00:32:17,889 --> 00:32:21,309
if if you're doing a pen test or a

1070
00:32:20,110 --> 00:32:23,019
security audit and you run your own

1071
00:32:21,309 --> 00:32:25,240
custom subdomain like a lot of folks do

1072
00:32:23,019 --> 00:32:26,529
for collaborator or things like that

1073
00:32:25,240 --> 00:32:28,090
it tells you a lot of information about

1074
00:32:26,529 --> 00:32:29,320
the environment if you can query any DNS

1075
00:32:28,090 --> 00:32:30,519
server or you can force an internal

1076
00:32:29,320 --> 00:32:32,080
client to pick a DNS request on your

1077
00:32:30,519 --> 00:32:33,009
behalf you can learn a ton of

1078
00:32:32,080 --> 00:32:34,240
information about the environment

1079
00:32:33,009 --> 00:32:36,309
without doing really any work besides

1080
00:32:34,240 --> 00:32:38,200
listening for or any amount DNS requests

1081
00:32:36,309 --> 00:32:40,418
so the way this works is you set up a

1082
00:32:38,200 --> 00:32:41,620
new fake subdomain like blah blah blah

1083
00:32:40,419 --> 00:32:43,509
dot mydomain.com

1084
00:32:41,620 --> 00:32:45,158
and set the NS record fetch main point

1085
00:32:43,509 --> 00:32:46,659
to an IP address you can monitor look

1086
00:32:45,159 --> 00:32:48,159
like a digital ocean and VPS note

1087
00:32:46,659 --> 00:32:49,269
something like that and all you do is

1088
00:32:48,159 --> 00:32:49,720
sniff for traffic coming in and see what

1089
00:32:49,269 --> 00:32:51,370
happens

1090
00:32:49,720 --> 00:32:53,590
so you do something like this you do dig

1091
00:32:51,370 --> 00:32:55,178
request of your encoded string at your

1092
00:32:53,590 --> 00:32:57,279
helper domain at the target the target

1093
00:32:55,179 --> 00:32:58,750
then queries its upstream resolvers that

1094
00:32:57,279 --> 00:33:00,340
then eventually query your server and

1095
00:32:58,750 --> 00:33:02,799
then times out and gets fussy about it

1096
00:33:00,340 --> 00:33:04,178
but in doing so it actually does all

1097
00:33:02,799 --> 00:33:05,860
this fun stuff so you can actually put

1098
00:33:04,179 --> 00:33:07,360
timestamps in these packets and have

1099
00:33:05,860 --> 00:33:08,559
your final server echo back the

1100
00:33:07,360 --> 00:33:09,758
timestamp it receive and do a full

1101
00:33:08,559 --> 00:33:11,500
round-trip time so you can actually

1102
00:33:09,759 --> 00:33:16,000
build cool trace routes engine Adina's

1103
00:33:11,500 --> 00:33:17,950
doing this let's see we can also figure

1104
00:33:16,000 --> 00:33:19,360
out which resolvers give an internal

1105
00:33:17,950 --> 00:33:21,039
machines using so if we query an

1106
00:33:19,360 --> 00:33:22,990
internal box saying look up my custom

1107
00:33:21,039 --> 00:33:24,850
domain it's gonna creates resolver the

1108
00:33:22,990 --> 00:33:26,289
average inquiry us we can then see that

1109
00:33:24,850 --> 00:33:27,879
query and respond back saying we were

1110
00:33:26,289 --> 00:33:29,649
queried by this resolver in the DNS

1111
00:33:27,879 --> 00:33:31,480
packet itself so we actually tell you

1112
00:33:29,649 --> 00:33:32,649
where the nest request came from and in

1113
00:33:31,480 --> 00:33:34,419
other words we can just we can determine

1114
00:33:32,649 --> 00:33:36,100
whether that particular internal DNS

1115
00:33:34,419 --> 00:33:38,200
implementation or that client internally

1116
00:33:36,100 --> 00:33:40,119
is using the proper DNS server or rogue

1117
00:33:38,200 --> 00:33:41,529
DNS server or something else so this

1118
00:33:40,119 --> 00:33:43,720
tells us a lot of cases like where this

1119
00:33:41,529 --> 00:33:45,040
have come from so where this was used

1120
00:33:43,720 --> 00:33:47,830
heavily was the

1121
00:33:45,040 --> 00:33:49,450
Braska child pornography case where they

1122
00:33:47,830 --> 00:33:51,820
bust too much people they use this thing

1123
00:33:49,450 --> 00:33:53,020
called decloak net those use that same

1124
00:33:51,820 --> 00:33:54,220
back-end code is D Club which is

1125
00:33:53,020 --> 00:33:56,770
something I wrote a long long time ago

1126
00:33:54,220 --> 00:33:58,210
mostly to bus tour users and it did

1127
00:33:56,770 --> 00:34:00,310
things like this it would use upstream

1128
00:33:58,210 --> 00:34:01,930
DNS to correlate your eyes PE back to

1129
00:34:00,310 --> 00:34:03,700
your IP so even if it even if by your

1130
00:34:01,930 --> 00:34:05,110
proxies or set up properly if you could

1131
00:34:03,700 --> 00:34:06,700
force your client to make a dns request

1132
00:34:05,110 --> 00:34:08,529
it can leak out your realize fee as a

1133
00:34:06,700 --> 00:34:11,260
result this is one of techniques as used

1134
00:34:08,530 --> 00:34:15,790
by that toolkit for busting this child

1135
00:34:11,260 --> 00:34:17,050
porn ring so we talked about Moses you

1136
00:34:15,790 --> 00:34:19,120
can do things like you can identify weak

1137
00:34:17,050 --> 00:34:21,700
transaction IDs decks or sports other

1138
00:34:19,120 --> 00:34:23,980
things like that there's code base the

1139
00:34:21,699 --> 00:34:25,540
code for this is that github calm HTM

1140
00:34:23,980 --> 00:34:29,918
Rumble - tools but I'll point to it

1141
00:34:25,540 --> 00:34:31,870
later so you can if you query uh let's

1142
00:34:29,918 --> 00:34:33,129
see if you create two dates at 8:00

1143
00:34:31,870 --> 00:34:34,449
upstream resolver to come back or not

1144
00:34:33,130 --> 00:34:36,490
eight-day date today they're actually

1145
00:34:34,449 --> 00:34:38,319
coming out of another any casted IP so

1146
00:34:36,489 --> 00:34:39,668
you won't see your source query coming

1147
00:34:38,320 --> 00:34:40,780
back out at 8:00 to date today you will

1148
00:34:39,668 --> 00:34:42,819
see a query coming out of one of these

1149
00:34:40,780 --> 00:34:43,960
source IPS so the difference being

1150
00:34:42,820 --> 00:34:46,510
CloudFlare and Google in this case

1151
00:34:43,960 --> 00:34:49,000
coming aside is that CloudFlare does not

1152
00:34:46,510 --> 00:34:50,620
use the client subnet DNS the client

1153
00:34:49,000 --> 00:34:52,630
subnet extension to leak your IP what

1154
00:34:50,620 --> 00:34:53,918
they do instead is they say based on the

1155
00:34:52,630 --> 00:34:55,570
IP header so you see coming back out the

1156
00:34:53,918 --> 00:34:56,980
other end of it that correlates to the

1157
00:34:55,570 --> 00:34:59,080
regional provider that you should serve

1158
00:34:56,980 --> 00:35:00,220
your request to so they can still tell

1159
00:34:59,080 --> 00:35:01,810
you the general region of it based on

1160
00:35:00,220 --> 00:35:03,490
which cloud for a pop is alone querying

1161
00:35:01,810 --> 00:35:08,410
you but they don't actually leak your

1162
00:35:03,490 --> 00:35:09,490
actual slash 24 in the process so I'm

1163
00:35:08,410 --> 00:35:10,930
gonna skip ahead but basically if you

1164
00:35:09,490 --> 00:35:12,310
want to filter make your DNS request

1165
00:35:10,930 --> 00:35:13,839
work you have to cook constantly encode

1166
00:35:12,310 --> 00:35:15,370
them with random IDs otherwise they get

1167
00:35:13,840 --> 00:35:18,310
filtered in cached and caches break all

1168
00:35:15,370 --> 00:35:23,980
of our testing say for dicking let's see

1169
00:35:18,310 --> 00:35:25,390
same thing so there's a one time to

1170
00:35:23,980 --> 00:35:26,800
cover today but there's a blog post on

1171
00:35:25,390 --> 00:35:28,480
it the rumble that run website but

1172
00:35:26,800 --> 00:35:31,270
essentially you can use DNS is a remote

1173
00:35:28,480 --> 00:35:33,760
blind port scanner or ping scanner you

1174
00:35:31,270 --> 00:35:34,930
can force a DNS resolver that has access

1175
00:35:33,760 --> 00:35:36,760
to a network that you don't have access

1176
00:35:34,930 --> 00:35:38,379
to to make queries that bounce against

1177
00:35:36,760 --> 00:35:39,670
your NS server then tell it to resolve

1178
00:35:38,380 --> 00:35:41,350
to another name server inside the

1179
00:35:39,670 --> 00:35:42,790
internal network and just about every

1180
00:35:41,350 --> 00:35:47,110
DNS server will make these requests

1181
00:35:42,790 --> 00:35:49,060
before you so if you scan like the 999.9

1182
00:35:47,110 --> 00:35:51,160
public dns server you can actually use

1183
00:35:49,060 --> 00:35:53,590
that server to scan its internal amazon

1184
00:35:51,160 --> 00:35:55,359
eat v pcs and figure out which devices

1185
00:35:53,590 --> 00:35:56,500
on their internal private subnets exist

1186
00:35:55,360 --> 00:35:58,510
which ones don't based on timely

1187
00:35:56,500 --> 00:35:59,800
responses so that's all in

1188
00:35:58,510 --> 00:36:02,770
side of a blog post at the rumble that

1189
00:35:59,800 --> 00:36:04,150
run blog at this point but let's see

1190
00:36:02,770 --> 00:36:07,960
skipping ahead client sudden that stuff

1191
00:36:04,150 --> 00:36:09,340
did you do yeah alright smoothing on the

1192
00:36:07,960 --> 00:36:11,350
Mac outages we talked about lots of ways

1193
00:36:09,340 --> 00:36:12,880
to get Mac outages before via SMP via

1194
00:36:11,350 --> 00:36:14,610
NetBIOS but there's lots of other ways

1195
00:36:12,880 --> 00:36:16,660
to do it

1196
00:36:14,610 --> 00:36:17,830
weather has only been it was a lot of

1197
00:36:16,660 --> 00:36:19,359
talk about how to fingerprint of Mac

1198
00:36:17,830 --> 00:36:20,680
writers obviously the first three bytes

1199
00:36:19,360 --> 00:36:21,700
means the vendor and therefore you can

1200
00:36:20,680 --> 00:36:23,890
look at the vendor you get the rest but

1201
00:36:21,700 --> 00:36:25,299
that's how she no longer true used to be

1202
00:36:23,890 --> 00:36:27,759
the first three bytes in kid the vendor

1203
00:36:25,300 --> 00:36:29,320
now it's up to the first forty four bits

1204
00:36:27,760 --> 00:36:30,490
can be used to determine the vendor and

1205
00:36:29,320 --> 00:36:32,890
there's a lot of netmask now there are

1206
00:36:30,490 --> 00:36:35,830
slash 36 is as well in slash 28 to slash

1207
00:36:32,890 --> 00:36:38,650
24 24 netmask is your standard three

1208
00:36:35,830 --> 00:36:40,360
bytes then you know 28 36 or extensions

1209
00:36:38,650 --> 00:36:43,900
on top of that so they're chopping up

1210
00:36:40,360 --> 00:36:46,270
the mac address space just like we've

1211
00:36:43,900 --> 00:36:48,130
chopped up the IDT ipv4 space as i start

1212
00:36:46,270 --> 00:36:49,420
to run out so you can buy much smaller

1213
00:36:48,130 --> 00:36:50,530
mac that just ranges now so the cool

1214
00:36:49,420 --> 00:36:52,150
thing about this is because these

1215
00:36:50,530 --> 00:36:54,580
mascots rangers are much smaller more

1216
00:36:52,150 --> 00:36:55,870
than were being issued every time you

1217
00:36:54,580 --> 00:36:57,310
know google wants to make a new device

1218
00:36:55,870 --> 00:36:58,750
where there's a chromecast or a pixel

1219
00:36:57,310 --> 00:37:00,279
book or a pixel 4 or something like that

1220
00:36:58,750 --> 00:37:01,180
all the vendors that have any kind of

1221
00:37:00,280 --> 00:37:02,200
networking equipment it's either

1222
00:37:01,180 --> 00:37:03,910
chipsets where there's bluetooth

1223
00:37:02,200 --> 00:37:05,649
wireless ethernet they all have to go

1224
00:37:03,910 --> 00:37:07,450
get another range of MAC addresses on

1225
00:37:05,650 --> 00:37:08,770
the fly and when they go get that Mac

1226
00:37:07,450 --> 00:37:09,790
when they go get that range of MAC

1227
00:37:08,770 --> 00:37:10,750
addresses what they're doing is actually

1228
00:37:09,790 --> 00:37:12,490
telling you something they're telling

1229
00:37:10,750 --> 00:37:13,990
you any device with a MAC address in

1230
00:37:12,490 --> 00:37:17,830
this range it was manufactured at least

1231
00:37:13,990 --> 00:37:20,470
from this tape this date or later so you

1232
00:37:17,830 --> 00:37:22,150
can use let's see yeah it's well cover

1233
00:37:20,470 --> 00:37:23,640
it well probably won't have time but we

1234
00:37:22,150 --> 00:37:25,630
can take it to a later but essentially

1235
00:37:23,640 --> 00:37:27,670
given the MAC address and given a

1236
00:37:25,630 --> 00:37:29,230
database of all the historical oh you I

1237
00:37:27,670 --> 00:37:30,700
registration Sparky the Mac prefix you

1238
00:37:29,230 --> 00:37:32,110
can tell exactly how all the device is

1239
00:37:30,700 --> 00:37:33,399
and that's really useful in some cases

1240
00:37:32,110 --> 00:37:35,500
we're finding older stuff in your

1241
00:37:33,400 --> 00:37:36,940
network or newer phones or actually

1242
00:37:35,500 --> 00:37:37,900
doing very specific fingerprinting so

1243
00:37:36,940 --> 00:37:39,520
that works can be happening with the

1244
00:37:37,900 --> 00:37:40,900
deep Mac project along with the stuff

1245
00:37:39,520 --> 00:37:42,130
I've been working on hopefully we'll

1246
00:37:40,900 --> 00:37:44,920
have a whole lot of much better

1247
00:37:42,130 --> 00:37:46,660
fingerprints from a cottage to soon so

1248
00:37:44,920 --> 00:37:47,890
moving on a little bit emptiness is one

1249
00:37:46,660 --> 00:37:49,629
of my favorite protocols because it

1250
00:37:47,890 --> 00:37:51,850
tells you so much information

1251
00:37:49,630 --> 00:37:53,350
emptiness is one of the very few network

1252
00:37:51,850 --> 00:37:54,940
services you'll find running by default

1253
00:37:53,350 --> 00:37:56,860
on an Android phone on the local Wi-Fi

1254
00:37:54,940 --> 00:37:57,820
so if you scan the network right now

1255
00:37:56,860 --> 00:37:59,650
with all of our phones connect to the

1256
00:37:57,820 --> 00:38:01,870
Wi-Fi every one of us running Android

1257
00:37:59,650 --> 00:38:03,460
majority of when well after respond mdns

1258
00:38:01,870 --> 00:38:05,620
and they'll respond to a pointer to look

1259
00:38:03,460 --> 00:38:06,850
at packet for its own IP address and in

1260
00:38:05,620 --> 00:38:08,290
doing so that tell us the hostname of

1261
00:38:06,850 --> 00:38:10,330
her own device which often is just the

1262
00:38:08,290 --> 00:38:12,500
word Android so now we've got a great

1263
00:38:10,330 --> 00:38:13,640
almost pretty much sure

1264
00:38:12,500 --> 00:38:15,320
way to determine if it's an Android

1265
00:38:13,640 --> 00:38:16,819
device or not over the network by

1266
00:38:15,320 --> 00:38:18,050
default with mobile devices on a

1267
00:38:16,820 --> 00:38:21,440
standard Network even with all the

1268
00:38:18,050 --> 00:38:22,520
security settings in place Mac OS

1269
00:38:21,440 --> 00:38:24,200
actually returns all kinds of cool stuff

1270
00:38:22,520 --> 00:38:25,610
actually almost all Apple devices do

1271
00:38:24,200 --> 00:38:27,620
everything but the most recent iPhones

1272
00:38:25,610 --> 00:38:29,450
and iPads will return the exact device

1273
00:38:27,620 --> 00:38:30,950
model the screen size all kinds of fun

1274
00:38:29,450 --> 00:38:33,439
stuff along with the OS version

1275
00:38:30,950 --> 00:38:34,640
just from DNS queries a printers of the

1276
00:38:33,440 --> 00:38:36,260
worst printers will get everything from

1277
00:38:34,640 --> 00:38:37,790
like a picture of the printer itself all

1278
00:38:36,260 --> 00:38:39,620
the way to the type it gets using

1279
00:38:37,790 --> 00:38:42,560
everything comes up empty nest mes is

1280
00:38:39,620 --> 00:38:45,620
great for those serious example of doing

1281
00:38:42,560 --> 00:38:47,240
a local discovery of mdns where there's

1282
00:38:45,620 --> 00:38:48,410
a local Mac Mini this is all the

1283
00:38:47,240 --> 00:38:49,819
information coming back from a Mac Mini

1284
00:38:48,410 --> 00:38:51,589
on a local subnet you get the name of

1285
00:38:49,820 --> 00:38:54,950
the computer you get what services

1286
00:38:51,590 --> 00:38:57,430
running RFP for VNC SFTP SMB etc at the

1287
00:38:54,950 --> 00:38:59,180
pointer to look up you actually get the

1288
00:38:57,430 --> 00:39:00,049
well this one doesn't have it but you

1289
00:38:59,180 --> 00:39:03,049
get the I before

1290
00:39:00,050 --> 00:39:04,220
ipv4 address in this case but what you

1291
00:39:03,050 --> 00:39:05,690
also get out this often times is the

1292
00:39:04,220 --> 00:39:07,069
actual full MAC address and if it

1293
00:39:05,690 --> 00:39:09,020
doesn't have the explicit MAC address in

1294
00:39:07,070 --> 00:39:12,260
it it'll give you an ipv6 address that's

1295
00:39:09,020 --> 00:39:13,550
encoded the eui-64 address ETI 64 format

1296
00:39:12,260 --> 00:39:15,380
which has the MAC address embedded in

1297
00:39:13,550 --> 00:39:16,490
the v6 address so there's lots of ways

1298
00:39:15,380 --> 00:39:18,230
to pull the back routers out of these

1299
00:39:16,490 --> 00:39:20,089
things here's some examples are just

1300
00:39:18,230 --> 00:39:22,490
common devices you Android phones will

1301
00:39:20,090 --> 00:39:23,990
tell you it's Android IP cameras give

1302
00:39:22,490 --> 00:39:25,640
you very specific service names that

1303
00:39:23,990 --> 00:39:26,779
tell you what vendor they are matte

1304
00:39:25,640 --> 00:39:28,400
printers like to tell you the Mac

1305
00:39:26,780 --> 00:39:30,520
directly saw NAS devices are great give

1306
00:39:28,400 --> 00:39:32,480
me the MAC addresses directly as well

1307
00:39:30,520 --> 00:39:33,860
alright so moving on to more techniques

1308
00:39:32,480 --> 00:39:36,320
before we run out of time

1309
00:39:33,860 --> 00:39:37,640
TLS certificates default SSL

1310
00:39:36,320 --> 00:39:39,230
certificates not necessarily the ones at

1311
00:39:37,640 --> 00:39:40,430
port 443 where you normally go to but

1312
00:39:39,230 --> 00:39:41,450
the ones and all the other ports that

1313
00:39:40,430 --> 00:39:42,919
some of these devices they've running on

1314
00:39:41,450 --> 00:39:44,299
them tell you a ton of information about

1315
00:39:42,920 --> 00:39:45,680
the device they'll tell you everything

1316
00:39:44,300 --> 00:39:47,270
for the Mad Hatter's the manufacturing

1317
00:39:45,680 --> 00:39:49,220
date serial number to the Dell servers

1318
00:39:47,270 --> 00:39:50,480
tag if you want to go get support for

1319
00:39:49,220 --> 00:39:51,919
somebody else's for Dannette device you

1320
00:39:50,480 --> 00:39:54,620
can ask an it get the Mac outer start

1321
00:39:51,920 --> 00:39:56,990
get the ISA there get from one of the

1322
00:39:54,620 --> 00:39:58,220
higher ports like 8900 use that to get

1323
00:39:56,990 --> 00:39:59,750
the serial number get the serial number

1324
00:39:58,220 --> 00:40:01,430
talk to them and you can get support and

1325
00:39:59,750 --> 00:40:02,570
firmware updates and all that stuff you

1326
00:40:01,430 --> 00:40:04,160
can also do things like get the service

1327
00:40:02,570 --> 00:40:05,570
tag for Dell products and once you have

1328
00:40:04,160 --> 00:40:06,649
a service tag for a Dell product you can

1329
00:40:05,570 --> 00:40:08,450
then look up the full specs that

1330
00:40:06,650 --> 00:40:10,100
hardware how many processors it has how

1331
00:40:08,450 --> 00:40:12,049
much RAM it has when a manufacturer the

1332
00:40:10,100 --> 00:40:13,310
hard drive size all that fun stuff even

1333
00:40:12,050 --> 00:40:14,960
sometimes the software stack on what

1334
00:40:13,310 --> 00:40:16,070
software was installed as part of it so

1335
00:40:14,960 --> 00:40:18,020
lots of really cool finger putting stuff

1336
00:40:16,070 --> 00:40:19,970
comes out of TLS fingerprints we were

1337
00:40:18,020 --> 00:40:21,380
recently added about I want to say 100

1338
00:40:19,970 --> 00:40:23,509
fingerprints to the open-source recog

1339
00:40:21,380 --> 00:40:25,250
project I think it's listed yeah that

1340
00:40:23,510 --> 00:40:26,869
project that you were all there that's

1341
00:40:25,250 --> 00:40:29,750
back-end database for next buzz

1342
00:40:26,869 --> 00:40:31,039
Metasploit - bipro Rumble we contribute

1343
00:40:29,750 --> 00:40:32,599
a ton to it church because it's what we

1344
00:40:31,039 --> 00:40:34,549
use as a primary data source it's open

1345
00:40:32,599 --> 00:40:37,039
source is BSD license is free feel free

1346
00:40:34,549 --> 00:40:39,829
to use if your own stuff but we added a

1347
00:40:37,039 --> 00:40:41,390
ton of TLS fingerprints recently here's

1348
00:40:39,829 --> 00:40:42,619
some examples what cool things you can

1349
00:40:41,390 --> 00:40:44,150
do with TLS fingerprints so obviously

1350
00:40:42,619 --> 00:40:45,410
for ubiquity equipment you can see the

1351
00:40:44,150 --> 00:40:47,390
full Mac cutters right there in the CN

1352
00:40:45,410 --> 00:40:48,680
field that's easy Synology you can

1353
00:40:47,390 --> 00:40:50,808
finger it okay it's an ass device that's

1354
00:40:48,680 --> 00:40:52,609
great the Google cast ones really fun

1355
00:40:50,809 --> 00:40:54,619
here so that's a Google Chrome cast the

1356
00:40:52,609 --> 00:40:56,480
first parts of steel number the for y3

1357
00:40:54,619 --> 00:40:58,640
zxb pit the next one's funny though

1358
00:40:56,480 --> 00:41:00,230
because that's sa 8fc a that looks like

1359
00:40:58,640 --> 00:41:01,578
a mac address but he put if you put that

1360
00:41:00,230 --> 00:41:05,000
directly into a Mac I just look up it

1361
00:41:01,579 --> 00:41:08,390
says no valid Mac cutters if you want a

1362
00:41:05,000 --> 00:41:09,710
lovely a trade us hoodie tell me why

1363
00:41:08,390 --> 00:41:10,879
that's not a Mac cutters and how to make

1364
00:41:09,710 --> 00:41:13,940
it invalid MAC address

1365
00:41:10,880 --> 00:41:15,230
it doesn't mean adding colons like

1366
00:41:13,940 --> 00:41:23,480
there's one tiny thing you have to do

1367
00:41:15,230 --> 00:41:27,099
and this bill is valid MAC address no

1368
00:41:23,480 --> 00:41:27,099
colons no not reversing that Cohen's

1369
00:41:28,000 --> 00:41:36,049
almost okay so almost there's a so

1370
00:41:34,460 --> 00:41:37,730
normal Mac cottage is called the global

1371
00:41:36,049 --> 00:41:39,349
MAC address already basically just like

1372
00:41:37,730 --> 00:41:41,569
ip's you've got a multicast and an

1373
00:41:39,349 --> 00:41:44,270
almost field if you have a local only

1374
00:41:41,569 --> 00:41:46,369
Mac outer so you flip one bit so that f8

1375
00:41:44,270 --> 00:41:48,440
becomes an FA so if you drop that si

1376
00:41:46,369 --> 00:41:50,240
excuse me that FA becomes an F feet and

1377
00:41:48,440 --> 00:41:51,799
then if you look at that f8 address

1378
00:41:50,240 --> 00:41:53,419
actually the valid Bluetooth MAC address

1379
00:41:51,799 --> 00:41:54,529
of the Google chromecast so we're

1380
00:41:53,420 --> 00:41:55,910
getting the Bluetooth back out it's the

1381
00:41:54,529 --> 00:41:56,930
Chrome class over the network from a TLS

1382
00:41:55,910 --> 00:41:59,420
certificate but only if you know how to

1383
00:41:56,930 --> 00:42:01,359
flip that second local bit so it's kind

1384
00:41:59,420 --> 00:42:03,710
of an obscure one but not when they're

1385
00:42:01,359 --> 00:42:06,348
also fingerprint your Palo Alto is your

1386
00:42:03,710 --> 00:42:07,369
never firewalls things like that so

1387
00:42:06,349 --> 00:42:09,650
moving on a little bit to network

1388
00:42:07,369 --> 00:42:10,700
manufacturer discovery protocols there's

1389
00:42:09,650 --> 00:42:12,230
lots of really cool ones out there

1390
00:42:10,700 --> 00:42:14,270
brother printers like I mentioned before

1391
00:42:12,230 --> 00:42:16,250
has a ton of them ubiquity has one

1392
00:42:14,270 --> 00:42:17,480
that's on all showed in some are

1393
00:42:16,250 --> 00:42:19,130
broadcast only some could actually go

1394
00:42:17,480 --> 00:42:20,420
across the internet the big blue ones

1395
00:42:19,130 --> 00:42:21,559
really fun because it tells you the full

1396
00:42:20,420 --> 00:42:23,390
MAC address shows it the firmware

1397
00:42:21,559 --> 00:42:24,230
versions it tell you the lots of great

1398
00:42:23,390 --> 00:42:25,910
information about the device the

1399
00:42:24,230 --> 00:42:28,490
national name of it like direct - Karl

1400
00:42:25,910 --> 00:42:29,720
you know it's Karl's box so things like

1401
00:42:28,490 --> 00:42:31,640
that you get tons information out of

1402
00:42:29,720 --> 00:42:33,618
these manufacturers specific discovery

1403
00:42:31,640 --> 00:42:34,609
protocols and people very rarely scan

1404
00:42:33,619 --> 00:42:36,500
for them because they're paying ass to

1405
00:42:34,609 --> 00:42:38,390
scan for like and that doesn't do in the

1406
00:42:36,500 --> 00:42:39,859
UDP discovery by default even if you

1407
00:42:38,390 --> 00:42:42,109
specify UDP port on is generally doing

1408
00:42:39,859 --> 00:42:43,819
very directed probe he's not doing a UDP

1409
00:42:42,109 --> 00:42:45,650
base and manufacturer specific discovery

1410
00:42:43,819 --> 00:42:46,910
probes this is a great way to get lots

1411
00:42:45,650 --> 00:42:48,019
of information so showed ins been

1412
00:42:46,910 --> 00:42:49,759
getting better at scanning these lately

1413
00:42:48,019 --> 00:42:53,299
but very few other tools out there do

1414
00:42:49,760 --> 00:42:54,710
this today let's see so just one quick

1415
00:42:53,299 --> 00:42:57,650
rundown other things you can pull MAC

1416
00:42:54,710 --> 00:42:58,700
addresses from with a product when

1417
00:42:57,650 --> 00:43:01,130
playing with a little bit we get MAC

1418
00:42:58,700 --> 00:43:02,839
addresses from about 10% of the whole

1419
00:43:01,130 --> 00:43:05,180
internet we can pull the MAC address out

1420
00:43:02,839 --> 00:43:06,589
remotely through authentication and we

1421
00:43:05,180 --> 00:43:08,029
get these things out of things like SNP

1422
00:43:06,589 --> 00:43:10,279
with an authentication of the engine ID

1423
00:43:08,029 --> 00:43:12,109
field version 2 for of SNP when the

1424
00:43:10,279 --> 00:43:14,329
community string is available emptyness

1425
00:43:12,109 --> 00:43:15,069
eui-64 ip's device specific protocols

1426
00:43:14,329 --> 00:43:18,260
SSDP

1427
00:43:15,069 --> 00:43:20,119
DCP hostname pointers HTML pages NetBIOS

1428
00:43:18,260 --> 00:43:21,349
replies TLS certs there's like a

1429
00:43:20,119 --> 00:43:22,970
thousand ways you can pull some smack

1430
00:43:21,349 --> 00:43:24,200
routers I want to know its MAC address

1431
00:43:22,970 --> 00:43:25,730
then you know how old it is and you know

1432
00:43:24,200 --> 00:43:27,288
what vendor it belongs to you know

1433
00:43:25,730 --> 00:43:28,490
almost what batch of devices it was in

1434
00:43:27,289 --> 00:43:30,740
you probably know what firmer it's

1435
00:43:28,490 --> 00:43:32,149
running so MAC addresses are great beot

1436
00:43:30,740 --> 00:43:35,479
they really go beyond layer 2 to really

1437
00:43:32,150 --> 00:43:38,690
work with them so we talked about most

1438
00:43:35,480 --> 00:43:40,549
of stuff some projects here I keep track

1439
00:43:38,690 --> 00:43:42,200
of how old every Mac got our prefix on

1440
00:43:40,549 --> 00:43:43,579
the internet is there's a github repo

1441
00:43:42,200 --> 00:43:45,529
you can pull it down as a CSV file and

1442
00:43:43,579 --> 00:43:48,079
type that into your own stuff so the Mac

1443
00:43:45,529 --> 00:43:50,180
ages project also work on the full lui

1444
00:43:48,079 --> 00:43:51,440
registry the triple I Triple E registry

1445
00:43:50,180 --> 00:43:53,118
of all the OE y prefixes you want to

1446
00:43:51,440 --> 00:43:54,410
play at the raw data historically this

1447
00:43:53,119 --> 00:43:56,089
includes a deep map project the

1448
00:43:54,410 --> 00:43:57,288
Wireshark archives it merges it all

1449
00:43:56,089 --> 00:44:00,049
together in one big-ass JSON database

1450
00:43:57,289 --> 00:44:01,039
you can grab the full daily updated JSON

1451
00:44:00,049 --> 00:44:02,599
from that as well if you really care

1452
00:44:01,039 --> 00:44:04,190
about this stuff and I keep mine this

1453
00:44:02,599 --> 00:44:05,630
stuff as a share between Bluetooth Wi-Fi

1454
00:44:04,190 --> 00:44:07,660
Ethernet as well as things like fiber

1455
00:44:05,630 --> 00:44:10,490
channel adapters all use the same

1456
00:44:07,660 --> 00:44:11,690
namespace so just because you have a Mac

1457
00:44:10,490 --> 00:44:16,609
doesn't mean Ethernet it could be

1458
00:44:11,690 --> 00:44:18,019
anything talk about multi home devices

1459
00:44:16,609 --> 00:44:19,940
cover earlier and has lots of other ways

1460
00:44:18,019 --> 00:44:20,808
to do it besides just that bios the

1461
00:44:19,940 --> 00:44:21,950
stuff is pretty important but you're

1462
00:44:20,809 --> 00:44:23,119
trying to figure out how do I get from a

1463
00:44:21,950 --> 00:44:23,960
high security for low security

1464
00:44:23,119 --> 00:44:25,700
environment to a high security

1465
00:44:23,960 --> 00:44:27,200
environment how do I get past

1466
00:44:25,700 --> 00:44:29,240
segmentation how do I find people with

1467
00:44:27,200 --> 00:44:30,950
particular nodes in it in place so just

1468
00:44:29,240 --> 00:44:32,930
like with MAC addresses you can pull

1469
00:44:30,950 --> 00:44:34,819
extra IP addresses out of lots of

1470
00:44:32,930 --> 00:44:36,288
different protocols you can see HP

1471
00:44:34,819 --> 00:44:38,210
redirects to an IP address that's on a

1472
00:44:36,289 --> 00:44:39,259
different subnet you can find TLS

1473
00:44:38,210 --> 00:44:40,490
certificates without the IP address

1474
00:44:39,259 --> 00:44:42,230
embedded in them you can find em DNS

1475
00:44:40,490 --> 00:44:43,609
replies of other IPs other than when

1476
00:44:42,230 --> 00:44:45,559
you're scanning listed in the response

1477
00:44:43,609 --> 00:44:47,660
these six subnets you know we're

1478
00:44:45,559 --> 00:44:49,039
probably enabled SMT of course will give

1479
00:44:47,660 --> 00:44:50,750
you all the adapters in the device

1480
00:44:49,039 --> 00:44:52,190
putting ones remote subnets

1481
00:44:50,750 --> 00:44:54,410
once you identify devices

1482
00:44:52,190 --> 00:44:55,790
that have these multihomed interfaces

1483
00:44:54,410 --> 00:44:57,680
online you can then use them to

1484
00:44:55,790 --> 00:44:59,660
basically pivot through the device and

1485
00:44:57,680 --> 00:45:01,730
then bypass network segmentation so

1486
00:44:59,660 --> 00:45:04,240
here's an example of a fortune

1487
00:45:01,730 --> 00:45:06,800
well column fortune 50 companies

1488
00:45:04,240 --> 00:45:10,270
internal environment just a small subset

1489
00:45:06,800 --> 00:45:14,569
of it every red dot on this screen is an

1490
00:45:10,270 --> 00:45:15,980
ipv4 external subnet so these are all

1491
00:45:14,569 --> 00:45:17,869
internet facing IP addresses you can

1492
00:45:15,980 --> 00:45:19,130
reach from the Internet today every one

1493
00:45:17,869 --> 00:45:20,869
of those little black dots there though

1494
00:45:19,130 --> 00:45:22,310
that's a device bridging at least one of

1495
00:45:20,869 --> 00:45:23,900
these external subnets to one of those

1496
00:45:22,310 --> 00:45:26,390
green dots and all those green dots are

1497
00:45:23,900 --> 00:45:27,829
internal subnets so pretty much from

1498
00:45:26,390 --> 00:45:29,089
anywhere on the internet you get anyone

1499
00:45:27,829 --> 00:45:30,650
to their internal internal environment

1500
00:45:29,089 --> 00:45:32,450
and vice versa a thousand different ways

1501
00:45:30,650 --> 00:45:33,890
this is how much of a pincushion most

1502
00:45:32,450 --> 00:45:35,990
corporate environments are and this

1503
00:45:33,890 --> 00:45:37,879
entire graph was pulled from a unnethe

1504
00:45:35,990 --> 00:45:41,180
indicated internal scan of only part of

1505
00:45:37,880 --> 00:45:42,619
their environment just to give an idea

1506
00:45:41,180 --> 00:45:44,390
of like how much bridging happens in the

1507
00:45:42,619 --> 00:45:45,440
real world now these devices may all be

1508
00:45:44,390 --> 00:45:47,060
fine every one of the little black dots

1509
00:45:45,440 --> 00:45:48,859
may be a device with good hardening and

1510
00:45:47,060 --> 00:45:49,700
no routing enabled and lots at 14 turned

1511
00:45:48,859 --> 00:45:51,380
off and all that stuff

1512
00:45:49,700 --> 00:45:52,848
my guess is least one of them isn't and

1513
00:45:51,380 --> 00:45:54,200
all it takes is one of those suckers to

1514
00:45:52,849 --> 00:45:55,400
get from one network to the next network

1515
00:45:54,200 --> 00:45:56,598
connects network and you can see how

1516
00:45:55,400 --> 00:45:58,250
interconnected they all are right there

1517
00:45:56,599 --> 00:45:59,089
these are all those little black dots

1518
00:45:58,250 --> 00:46:00,380
and everything on the screen here's

1519
00:45:59,089 --> 00:46:02,150
these are only devices that we could

1520
00:46:00,380 --> 00:46:03,800
determine well multihomed about blowing

1521
00:46:02,150 --> 00:46:05,270
information out of them unauthenticated

1522
00:46:03,800 --> 00:46:10,579
using a standard protocol that we just

1523
00:46:05,270 --> 00:46:11,599
talked about so moving on a little bit

1524
00:46:10,579 --> 00:46:14,089
more and then finally the last thing

1525
00:46:11,599 --> 00:46:15,050
here before you break one thing that's

1526
00:46:14,089 --> 00:46:16,490
really important to do on network

1527
00:46:15,050 --> 00:46:18,109
analysis is trying to identify is this

1528
00:46:16,490 --> 00:46:19,790
device the same as some other device is

1529
00:46:18,109 --> 00:46:21,740
this unique is this a multi-home device

1530
00:46:19,790 --> 00:46:23,300
is it part of multiple things like let's

1531
00:46:21,740 --> 00:46:25,549
say you can't get a particular interface

1532
00:46:23,300 --> 00:46:28,460
to tell you more than one IP but you can

1533
00:46:25,550 --> 00:46:30,290
say what what is it what is this device

1534
00:46:28,460 --> 00:46:31,970
and is it similar to this other device

1535
00:46:30,290 --> 00:46:33,589
over here and use that developer

1536
00:46:31,970 --> 00:46:35,240
multi-home list see if it can possibly

1537
00:46:33,589 --> 00:46:36,560
correlate this device of that device

1538
00:46:35,240 --> 00:46:37,819
being the same physical system then you

1539
00:46:36,560 --> 00:46:39,980
know it small to at home because it has

1540
00:46:37,819 --> 00:46:41,000
to be so there's lots of unique things

1541
00:46:39,980 --> 00:46:42,380
out that you can use for it you can use

1542
00:46:41,000 --> 00:46:43,550
a MAC addresses there pretty good

1543
00:46:42,380 --> 00:46:45,230
starting point when you got those

1544
00:46:43,550 --> 00:46:46,550
sometimes they're not unique though Tilo

1545
00:46:45,230 --> 00:46:49,700
certificates are sometimes unique DNS

1546
00:46:46,550 --> 00:46:50,960
host names are unique but it gets hard

1547
00:46:49,700 --> 00:46:51,950
so given a wide-enough you how unique

1548
00:46:50,960 --> 00:46:53,690
with these things in the real world well

1549
00:46:51,950 --> 00:46:54,950
Mac outer says tend to overlap a little

1550
00:46:53,690 --> 00:46:57,380
bit there's lots of bogus ones out there

1551
00:46:54,950 --> 00:46:59,328
you tend to have network storage devices

1552
00:46:57,380 --> 00:47:01,069
use shared private IP addresses for

1553
00:46:59,329 --> 00:47:03,020
their cluster backends and those send

1554
00:47:01,069 --> 00:47:04,130
overlap as well but there are some

1555
00:47:03,020 --> 00:47:05,349
pretty cool things out there so the ones

1556
00:47:04,130 --> 00:47:07,569
that we're using today that

1557
00:47:05,349 --> 00:47:09,670
really well our non blacklisted not got

1558
00:47:07,569 --> 00:47:11,349
or says the angel MSSP DNS computer name

1559
00:47:09,670 --> 00:47:12,700
comes out of the net box replies with

1560
00:47:11,349 --> 00:47:14,559
the one that's the full corporate dot

1561
00:47:12,700 --> 00:47:16,180
dot LAN domain that's a pretty good

1562
00:47:14,559 --> 00:47:17,470
unique identifier this stuff is also

1563
00:47:16,180 --> 00:47:18,399
really valuable if you're doing deeds to

1564
00:47:17,470 --> 00:47:19,569
be tracking if you're trying to figure

1565
00:47:18,400 --> 00:47:21,279
out whether the hosts over here is the

1566
00:47:19,569 --> 00:47:22,660
same host you saw last week these fields

1567
00:47:21,279 --> 00:47:25,059
are pretty much a guarantee that device

1568
00:47:22,660 --> 00:47:26,558
so is is actually the same thing the one

1569
00:47:25,059 --> 00:47:28,089
I like the best in the lately because if

1570
00:47:26,559 --> 00:47:29,859
you follow all the guidelines and turn

1571
00:47:28,089 --> 00:47:31,239
off SMB how do you still find out that

1572
00:47:29,859 --> 00:47:33,848
the device of the same ones that the

1573
00:47:31,239 --> 00:47:34,930
Remote Desktop Protocol has a TLS

1574
00:47:33,849 --> 00:47:36,369
certificate and that certificate is

1575
00:47:34,930 --> 00:47:37,749
valid for about eight months or so by

1576
00:47:36,369 --> 00:47:38,829
default but as long as you're scanning

1577
00:47:37,749 --> 00:47:40,149
with that eight month window you can

1578
00:47:38,829 --> 00:47:41,440
follow that unique signature of that

1579
00:47:40,150 --> 00:47:42,640
fingerprint of that certificate and I'll

1580
00:47:41,440 --> 00:47:44,109
tell you whether the same device or not

1581
00:47:42,640 --> 00:47:46,779
even as it moves between your wireless

1582
00:47:44,109 --> 00:47:48,940
LAN and your corporate networks and of

1583
00:47:46,779 --> 00:47:50,440
course for net SNMP based SNP

1584
00:47:48,940 --> 00:47:51,700
invitations that random ID which is

1585
00:47:50,440 --> 00:47:53,410
available pre authentication through

1586
00:47:51,700 --> 00:47:54,788
version threes engine ID you can use

1587
00:47:53,410 --> 00:47:58,089
that as well to confirm that advice is

1588
00:47:54,789 --> 00:47:59,559
unique or not so some examples here if

1589
00:47:58,089 --> 00:48:01,660
you scan all of Iceland as one does

1590
00:47:59,559 --> 00:48:03,489
we've got four point three million IPS

1591
00:48:01,660 --> 00:48:04,899
we scan them all in a few hours and then

1592
00:48:03,489 --> 00:48:06,670
we said okay which ones these actually

1593
00:48:04,900 --> 00:48:08,529
overlap which these are multihomed we

1594
00:48:06,670 --> 00:48:10,569
found a couple routers on the Icelandic

1595
00:48:08,529 --> 00:48:12,460
IP space that bridged multiple slash

1596
00:48:10,569 --> 00:48:14,019
eights and we knew that the exact same

1597
00:48:12,460 --> 00:48:15,219
device because we found at least one

1598
00:48:14,019 --> 00:48:16,988
unique field to type them all together

1599
00:48:15,219 --> 00:48:18,400
again so you can see a device here this

1600
00:48:16,989 --> 00:48:20,380
one crosses one seventy eight and two

1601
00:48:18,400 --> 00:48:22,210
and three when not here crosses one five

1602
00:48:20,380 --> 00:48:23,200
seven one nine four two thirteen we know

1603
00:48:22,210 --> 00:48:24,729
it's all team devise because they're all

1604
00:48:23,200 --> 00:48:25,839
about the same scope and on the right

1605
00:48:24,729 --> 00:48:27,700
side there this is one that I had like

1606
00:48:25,839 --> 00:48:29,529
two hundred and something IP interfaces

1607
00:48:27,700 --> 00:48:30,999
on it and we actually verified this is

1608
00:48:29,529 --> 00:48:32,140
actually the same router if you cause an

1609
00:48:30,999 --> 00:48:32,709
authentication error on one of those

1610
00:48:32,140 --> 00:48:34,210
interfaces

1611
00:48:32,710 --> 00:48:35,680
you'll see the counter get a updating

1612
00:48:34,210 --> 00:48:37,390
the other interface someplace someplace

1613
00:48:35,680 --> 00:48:38,440
else so you can actually verify that

1614
00:48:37,390 --> 00:48:39,930
these are actually the same device so

1615
00:48:38,440 --> 00:48:41,589
let's say I wanted to like turn off

1616
00:48:39,930 --> 00:48:43,180
parts of Iceland

1617
00:48:41,589 --> 00:48:45,940
that'd rather be a really good candidate

1618
00:48:43,180 --> 00:48:47,288
you make not that sucker offline and a

1619
00:48:45,940 --> 00:48:48,519
large portion of the environment goes

1620
00:48:47,289 --> 00:48:50,229
offline so even without doing a full

1621
00:48:48,519 --> 00:48:51,819
trace route or having like routing

1622
00:48:50,229 --> 00:48:52,989
topology we know that device is

1623
00:48:51,819 --> 00:48:54,249
important we know it's bridging multiple

1624
00:48:52,989 --> 00:48:55,239
segments and we know here's all

1625
00:48:54,249 --> 00:48:59,410
different ways that you can get this

1626
00:48:55,239 --> 00:49:01,599
device from the internet so that's

1627
00:48:59,410 --> 00:49:03,430
pretty much it Discovery's not dead if

1628
00:49:01,599 --> 00:49:05,109
you if you care about the stuff like

1629
00:49:03,430 --> 00:49:06,190
reach out talk to me I love to

1630
00:49:05,109 --> 00:49:07,509
collaborate and stuff I like working

1631
00:49:06,190 --> 00:49:09,579
finger prints particles open-source

1632
00:49:07,509 --> 00:49:12,369
tools work tinnitus wait forever I'm

1633
00:49:09,579 --> 00:49:14,140
gonna work on this forever to the recog

1634
00:49:12,369 --> 00:49:15,279
repos the best open source fingerprint

1635
00:49:14,140 --> 00:49:16,719
database for any kind of application

1636
00:49:15,279 --> 00:49:17,890
layer fingerprint that I know of deep

1637
00:49:16,719 --> 00:49:18,520
Mac is we're gonna be doing all the Mac

1638
00:49:17,890 --> 00:49:19,870
got a specific

1639
00:49:18,520 --> 00:49:22,030
you're printing and all the rumbles

1640
00:49:19,870 --> 00:49:23,529
specific stuff is gonna be that Robo

1641
00:49:22,030 --> 00:49:25,330
tools repository that includes like our

1642
00:49:23,530 --> 00:49:27,700
DNS or remote ping scan tools things

1643
00:49:25,330 --> 00:49:29,290
like that I still the hoodie to giveaway

1644
00:49:27,700 --> 00:49:30,669
who showed up today does not have a

1645
00:49:29,290 --> 00:49:33,340
jacket did he would not have a jacket

1646
00:49:30,670 --> 00:49:34,660
there we go first - aww alright sir we

1647
00:49:33,340 --> 00:49:42,460
try to keep people warm here in Texas

1648
00:49:34,660 --> 00:49:43,730
here we go awesome no questions thank

1649
00:49:42,460 --> 00:49:44,930
you very much

1650
00:49:43,730 --> 00:49:47,110
[Music]

1651
00:49:44,930 --> 00:49:50,348
[Applause]

1652
00:49:47,110 --> 00:49:50,349
[Music]

1653
00:49:56,590 --> 00:49:58,650
you

