1
00:00:09,300 --> 00:00:32,280
[Music]

2
00:00:36,090 --> 00:00:42,030
so thanks for coming I'm here to talk

3
00:00:39,510 --> 00:00:44,550
about threat modeling stories from the

4
00:00:42,030 --> 00:00:48,900
trenches before I get started I'll give

5
00:00:44,550 --> 00:00:51,599
the disclaimer that I didn't create all

6
00:00:48,900 --> 00:00:54,089
these slides a lot of this was created

7
00:00:51,600 --> 00:00:56,850
by some of my team members out in the UK

8
00:00:54,090 --> 00:01:00,480
who are unable to join me here in Texas

9
00:00:56,850 --> 00:01:02,100
today so not all of these are my

10
00:01:00,480 --> 00:01:06,149
personal stories that I did add some new

11
00:01:02,100 --> 00:01:08,130
ones from from my catalog of history so

12
00:01:06,150 --> 00:01:11,460
we can talk about those when we get

13
00:01:08,130 --> 00:01:14,970
there but the other thing I wanted to

14
00:01:11,460 --> 00:01:16,050
say is this is not a SWAT modeling talk

15
00:01:14,970 --> 00:01:17,670
more I explained to you how the threat

16
00:01:16,050 --> 00:01:18,119
modeling is done if you've never seen it

17
00:01:17,670 --> 00:01:20,970
before

18
00:01:18,119 --> 00:01:21,990
cool I'm glad you're here but we're

19
00:01:20,970 --> 00:01:24,390
gonna we're gonna kind of take a

20
00:01:21,990 --> 00:01:27,119
higher-level look at kind of what types

21
00:01:24,390 --> 00:01:29,940
of things interest me and and what we do

22
00:01:27,119 --> 00:01:31,350
when we're doing threat modeling and to

23
00:01:29,940 --> 00:01:33,899
see how things maybe are a little bit

24
00:01:31,350 --> 00:01:35,009
different than might be assumed if you

25
00:01:33,899 --> 00:01:39,690
haven't gone through that approach

26
00:01:35,009 --> 00:01:44,850
before yourself so about me my name is

27
00:01:39,690 --> 00:01:47,580
Stark hacker gamer blockchain spend my

28
00:01:44,850 --> 00:01:48,958
thing for the past two years I put ante

29
00:01:47,580 --> 00:01:50,550
enthusiasts because I like to tell

30
00:01:48,959 --> 00:01:53,340
people it's terrible and don't use it

31
00:01:50,550 --> 00:01:54,990
it's just a slow database mainly because

32
00:01:53,340 --> 00:01:56,929
I'm afraid that if too many people use

33
00:01:54,990 --> 00:01:59,759
it then everything's gonna go to hell so

34
00:01:56,929 --> 00:02:02,099
it would be better maybe if we like took

35
00:01:59,759 --> 00:02:03,509
a more reasoned approach towards new

36
00:02:02,099 --> 00:02:07,560
technologies in the future but that's

37
00:02:03,509 --> 00:02:08,818
not gonna happen so and then and then we

38
00:02:07,560 --> 00:02:12,209
like to call ourselves professional

39
00:02:08,818 --> 00:02:14,458
cynics because my job is to go to my

40
00:02:12,209 --> 00:02:16,590
clients as a consultant and tell them

41
00:02:14,459 --> 00:02:18,180
how they screwed up or tell them that

42
00:02:16,590 --> 00:02:19,620
their assumptions are wrong or tell them

43
00:02:18,180 --> 00:02:22,680
that they forgot about something and

44
00:02:19,620 --> 00:02:24,030
just all around be the no guy but then

45
00:02:22,680 --> 00:02:25,709
but then I stick around and I'm like

46
00:02:24,030 --> 00:02:27,150
okay fine you know you probably still

47
00:02:25,709 --> 00:02:29,280
need to do business you can't just shut

48
00:02:27,150 --> 00:02:34,170
it all down so try to help them build it

49
00:02:29,280 --> 00:02:36,000
build it back up again okay so like I

50
00:02:34,170 --> 00:02:38,519
said I'm not gonna dive into like the

51
00:02:36,000 --> 00:02:41,220
whole methodology of how to do a threat

52
00:02:38,520 --> 00:02:42,570
model or how to build a practice out but

53
00:02:41,220 --> 00:02:44,730
at the high level right we want to look

54
00:02:42,570 --> 00:02:46,799
at a system both

55
00:02:44,730 --> 00:02:48,920
the whole but also we'll talk a little

56
00:02:46,800 --> 00:02:51,630
bit about flow based modeling as well

57
00:02:48,920 --> 00:02:53,429
and kind of break the design on paper

58
00:02:51,630 --> 00:02:55,950
right we want to look at how it's

59
00:02:53,430 --> 00:02:59,400
working what the assumptions were when

60
00:02:55,950 --> 00:03:01,709
we created it what problem it's trying

61
00:02:59,400 --> 00:03:04,350
to solve and what problems might come

62
00:03:01,709 --> 00:03:07,800
out of like unintended consequences of

63
00:03:04,350 --> 00:03:10,290
the system and then of course you know

64
00:03:07,800 --> 00:03:12,540
fix the issues that we find right it's

65
00:03:10,290 --> 00:03:14,549
great to break the system it's it's fun

66
00:03:12,540 --> 00:03:17,940
but it would be great if we could give

67
00:03:14,550 --> 00:03:19,140
some advice at the end okay

68
00:03:17,940 --> 00:03:21,630
like I said we're not here to talk about

69
00:03:19,140 --> 00:03:23,970
the whole process but we're just going

70
00:03:21,630 --> 00:03:25,530
to talk about kind of some cool finds

71
00:03:23,970 --> 00:03:27,660
that we have and maybe gain some

72
00:03:25,530 --> 00:03:31,319
insights about what makes a good threat

73
00:03:27,660 --> 00:03:35,130
model or what makes a good analysis of

74
00:03:31,319 --> 00:03:36,750
an already completed model so first

75
00:03:35,130 --> 00:03:39,720
let's talk about what a design flaw is

76
00:03:36,750 --> 00:03:42,000
right so this is like some box that's

77
00:03:39,720 --> 00:03:44,790
holding some wires safe and the door

78
00:03:42,000 --> 00:03:46,799
jams on the frame of the door so you

79
00:03:44,790 --> 00:03:48,239
can't actually open it all the way so

80
00:03:46,799 --> 00:03:50,190
whoever installed this right was just

81
00:03:48,239 --> 00:03:52,709
told hey man I need you to put this in

82
00:03:50,190 --> 00:03:54,209
the room I need you to install this you

83
00:03:52,709 --> 00:03:56,700
know bolted to the wall and walked away

84
00:03:54,209 --> 00:03:59,130
and didn't think too hard about it you

85
00:03:56,700 --> 00:04:00,780
know but that's not his job right his

86
00:03:59,130 --> 00:04:03,690
job isn't to test it his job is to

87
00:04:00,780 --> 00:04:05,940
install it or you know we can put in a

88
00:04:03,690 --> 00:04:08,640
stop sign in the middle of the road and

89
00:04:05,940 --> 00:04:09,959
it doesn't really do what they think

90
00:04:08,640 --> 00:04:11,399
what we think it's doing right we're

91
00:04:09,959 --> 00:04:15,120
like it's gonna stop traffic and then

92
00:04:11,400 --> 00:04:17,519
people just drive around it and we do

93
00:04:15,120 --> 00:04:19,858
this with software all the time it turns

94
00:04:17,519 --> 00:04:24,060
out it's just a little bit harder to see

95
00:04:19,858 --> 00:04:26,280
the tracks of snow in the software okay

96
00:04:24,060 --> 00:04:28,560
so I've got a series of examples each

97
00:04:26,280 --> 00:04:30,150
one come with their own truck model and

98
00:04:28,560 --> 00:04:31,560
I'm gonna try to make this a little bit

99
00:04:30,150 --> 00:04:36,840
interactive and see if we can get you

100
00:04:31,560 --> 00:04:38,210
all to solve the problem okay so here's

101
00:04:36,840 --> 00:04:40,650
the idea we've got a really basic

102
00:04:38,210 --> 00:04:42,659
application it's got a deal you know

103
00:04:40,650 --> 00:04:44,190
client on the Left ooh DMZ that's

104
00:04:42,660 --> 00:04:46,289
running some reverse proxy that's

105
00:04:44,190 --> 00:04:48,240
probably giving us some controls and

106
00:04:46,289 --> 00:04:50,039
then we on the right we have this like

107
00:04:48,240 --> 00:04:52,200
protected perimeter Network right this

108
00:04:50,039 --> 00:04:54,570
is very traditional app check we're

109
00:04:52,200 --> 00:04:56,310
gonna put a firewall on a DMZ and then

110
00:04:54,570 --> 00:04:58,020
everything on the inside you know it's

111
00:04:56,310 --> 00:04:58,289
great everything can talk to each other

112
00:04:58,020 --> 00:05:01,619
it's

113
00:04:58,289 --> 00:05:03,300
cool because we vetted the people and

114
00:05:01,619 --> 00:05:04,979
we've got a few controls right so a

115
00:05:03,300 --> 00:05:07,349
reverse proxies actually doing a lot of

116
00:05:04,979 --> 00:05:08,550
work for us it's doing mutual TLS right

117
00:05:07,349 --> 00:05:11,128
so it's actually authenticating

118
00:05:08,550 --> 00:05:13,229
whoever's coming in to a certificate

119
00:05:11,129 --> 00:05:14,819
that the client has so it's not a

120
00:05:13,229 --> 00:05:17,669
password based login you get to give

121
00:05:14,819 --> 00:05:19,289
this as more of like a like a like a cat

122
00:05:17,669 --> 00:05:22,438
card or something with a certificate on

123
00:05:19,289 --> 00:05:26,119
board pretty solid right this is top

124
00:05:22,439 --> 00:05:29,449
tier kind of what we expect out of a

125
00:05:26,119 --> 00:05:32,490
super-important front-end application

126
00:05:29,449 --> 00:05:35,490
and then the the app server is actually

127
00:05:32,490 --> 00:05:37,889
going to be signing all of its messages

128
00:05:35,490 --> 00:05:41,309
with a signature based on whoever's

129
00:05:37,889 --> 00:05:44,369
logged in right so that way if we go and

130
00:05:41,309 --> 00:05:47,009
look in the database we can see oh you

131
00:05:44,369 --> 00:05:49,529
know not only do we know that this data

132
00:05:47,009 --> 00:05:51,479
belongs to user a but it's also been

133
00:05:49,529 --> 00:05:53,580
signed by user a so even like the

134
00:05:51,479 --> 00:05:55,378
database administrator for that back-end

135
00:05:53,580 --> 00:05:56,909
system or the secure log server or like

136
00:05:55,379 --> 00:05:58,770
and none of the DBAs or anything they

137
00:05:56,909 --> 00:06:01,169
can't even forward user messages it's

138
00:05:58,770 --> 00:06:02,639
impossible unless they steal the private

139
00:06:01,169 --> 00:06:05,599
key but you know hopefully the user

140
00:06:02,639 --> 00:06:08,069
didn't put their private key on get up

141
00:06:05,599 --> 00:06:09,449
and then the log server is cool too

142
00:06:08,069 --> 00:06:11,819
because it's actually signing and

143
00:06:09,449 --> 00:06:14,659
encrypting log messages too right so

144
00:06:11,819 --> 00:06:16,860
every time a user performs an action we

145
00:06:14,659 --> 00:06:20,339
attest that these are performed it by

146
00:06:16,860 --> 00:06:22,169
signing it with their key again and and

147
00:06:20,339 --> 00:06:24,449
that way if there's an incident or if we

148
00:06:22,169 --> 00:06:27,628
suspect a user of wrongdoing we can go

149
00:06:24,449 --> 00:06:29,939
back and say you know you did X Y & Z

150
00:06:27,629 --> 00:06:31,979
you're not allowed to do those things in

151
00:06:29,939 --> 00:06:34,050
that order or whatever we're gonna sue

152
00:06:31,979 --> 00:06:35,490
you we're gonna come after you we can

153
00:06:34,050 --> 00:06:38,219
prove that because we have cryptographic

154
00:06:35,490 --> 00:06:39,809
hashes for everything so this is this is

155
00:06:38,219 --> 00:06:44,069
really cool right we got some good

156
00:06:39,809 --> 00:06:46,529
security controls in here so what can go

157
00:06:44,069 --> 00:06:48,360
wrong right so this is this is the first

158
00:06:46,529 --> 00:06:50,069
option for I don't have anything to give

159
00:06:48,360 --> 00:06:53,729
away so I have no incentives for you to

160
00:06:50,069 --> 00:06:57,899
answer my questions however I might give

161
00:06:53,729 --> 00:07:00,240
you a high-five after the talk okay so

162
00:06:57,899 --> 00:07:02,399
what could go wrong anybody any ideas

163
00:07:00,240 --> 00:07:04,139
how you might go about breaking this

164
00:07:02,399 --> 00:07:05,849
thing or maybe something that was

165
00:07:04,139 --> 00:07:08,300
overlooked in this excellent control

166
00:07:05,849 --> 00:07:08,300
system

167
00:07:08,940 --> 00:07:14,080
yaki management's a tough one right

168
00:07:10,930 --> 00:07:15,700
because ultimately here the keys rely on

169
00:07:14,080 --> 00:07:17,950
the client to do the right thing and

170
00:07:15,700 --> 00:07:20,310
then for them to like percolate through

171
00:07:17,950 --> 00:07:22,920
the system properly so that's difficult

172
00:07:20,310 --> 00:07:25,870
that's a difficult problem to solve

173
00:07:22,920 --> 00:07:28,050
though keep management talk would be a

174
00:07:25,870 --> 00:07:31,240
much longer talk than I have time for

175
00:07:28,050 --> 00:07:33,540
any other ideas on what what might be a

176
00:07:31,240 --> 00:07:35,830
problem here

177
00:07:33,540 --> 00:07:37,840
well authentication is great because we

178
00:07:35,830 --> 00:07:39,750
got mutual TLS all right so that's

179
00:07:37,840 --> 00:07:42,580
that's rock-solid I'm happy with that

180
00:07:39,750 --> 00:07:45,880
okay this is a tough one so the the

181
00:07:42,580 --> 00:07:47,830
later ones might get easier we'll see so

182
00:07:45,880 --> 00:07:49,540
we have a problem with with integrating

183
00:07:47,830 --> 00:07:53,109
all of our cool security controls

184
00:07:49,540 --> 00:07:54,760
basically so we have all of these

185
00:07:53,110 --> 00:07:58,540
signatures everywhere we have this

186
00:07:54,760 --> 00:08:01,510
identity that the user has but what's

187
00:07:58,540 --> 00:08:03,750
stopping me from changing my identity at

188
00:08:01,510 --> 00:08:07,150
different stages in the application

189
00:08:03,750 --> 00:08:08,920
right so when we create messages in the

190
00:08:07,150 --> 00:08:11,679
app server or when we create logs in a

191
00:08:08,920 --> 00:08:14,470
log server is there a control that's

192
00:08:11,680 --> 00:08:16,600
preventing me from saying oh I'm user a

193
00:08:14,470 --> 00:08:19,330
now these are being on user C in each

194
00:08:16,600 --> 00:08:21,490
stage and they're not they're not

195
00:08:19,330 --> 00:08:23,919
integrating right so when we look at

196
00:08:21,490 --> 00:08:27,190
who's sending the message C the clients

197
00:08:23,920 --> 00:08:29,260
gonna connect as a it's gonna sign their

198
00:08:27,190 --> 00:08:31,719
messages as B so it ends up in the

199
00:08:29,260 --> 00:08:33,939
database as B and then they're gonna say

200
00:08:31,720 --> 00:08:37,780
up but client C is the one who did all

201
00:08:33,940 --> 00:08:39,490
this madness right and they have what

202
00:08:37,780 --> 00:08:41,589
what's happened is that the attacker on

203
00:08:39,490 --> 00:08:43,630
the left the client machine has

204
00:08:41,590 --> 00:08:46,630
generated three different user accounts

205
00:08:43,630 --> 00:08:48,130
right so they validly have keys for all

206
00:08:46,630 --> 00:08:50,170
these accounts it's not like they dig

207
00:08:48,130 --> 00:08:53,020
hacked it or anything but they're just

208
00:08:50,170 --> 00:08:54,939
causing confusion in the system right

209
00:08:53,020 --> 00:08:59,230
and what that means is that if we want

210
00:08:54,940 --> 00:09:01,060
to go back say after an incident and say

211
00:08:59,230 --> 00:09:02,680
we're gonna use our excellent controls

212
00:09:01,060 --> 00:09:04,239
to figure out whodunit

213
00:09:02,680 --> 00:09:06,459
that might actually be difficult now

214
00:09:04,240 --> 00:09:09,490
because now we've got three whodunits

215
00:09:06,460 --> 00:09:10,570
and it's not entirely clear like okay so

216
00:09:09,490 --> 00:09:12,640
were these keys

217
00:09:10,570 --> 00:09:14,950
stolen from users were these keys

218
00:09:12,640 --> 00:09:17,260
compromised in some other way or were

219
00:09:14,950 --> 00:09:19,630
they just diversion tactics what's going

220
00:09:17,260 --> 00:09:21,760
on and so we we spend a lot of time

221
00:09:19,630 --> 00:09:25,300
invest in vesting into

222
00:09:21,760 --> 00:09:25,899
new controls and new fancy ways of doing

223
00:09:25,300 --> 00:09:28,810
things

224
00:09:25,899 --> 00:09:30,339
securely that sometimes we miss the

225
00:09:28,810 --> 00:09:32,229
greater picture and I think the threat

226
00:09:30,339 --> 00:09:35,889
model it is one way that we could

227
00:09:32,230 --> 00:09:37,630
explore these more high-level issues as

228
00:09:35,889 --> 00:09:39,220
opposed to like a check mark type

229
00:09:37,630 --> 00:09:40,779
compliance activity where they're like

230
00:09:39,220 --> 00:09:41,980
you have to sign your messages you have

231
00:09:40,779 --> 00:09:43,959
to sign your logs you have to do this

232
00:09:41,980 --> 00:09:45,250
and you get your stamps right and you

233
00:09:43,959 --> 00:09:47,290
walk down the line and now you're you

234
00:09:45,250 --> 00:09:49,570
know PCI audited or whatever that's cool

235
00:09:47,290 --> 00:09:51,130
but like it might miss the point so so

236
00:09:49,570 --> 00:09:56,310
this is this is what I like to have fun

237
00:09:51,130 --> 00:10:00,459
doing right so what we learned right so

238
00:09:56,310 --> 00:10:03,069
controls are not security controls our

239
00:10:00,459 --> 00:10:05,768
products controls are things that we buy

240
00:10:03,070 --> 00:10:08,019
are things that we invent and they're

241
00:10:05,769 --> 00:10:09,279
necessary for security but they're not

242
00:10:08,019 --> 00:10:13,360
the whole picture right there's

243
00:10:09,279 --> 00:10:15,160
something more here don't evaluate your

244
00:10:13,360 --> 00:10:16,570
controls in isolation right like when I

245
00:10:15,160 --> 00:10:18,579
was going through that system on the

246
00:10:16,570 --> 00:10:19,899
first slide when I took to talked about

247
00:10:18,579 --> 00:10:21,579
the three controls I said these are all

248
00:10:19,899 --> 00:10:22,990
great controls right these are all

249
00:10:21,579 --> 00:10:24,609
things that we want in our systems or we

250
00:10:22,990 --> 00:10:27,310
would encourage others to put into their

251
00:10:24,610 --> 00:10:29,410
systems but if we if we like put the

252
00:10:27,310 --> 00:10:31,329
horse blinders on and we're like it's

253
00:10:29,410 --> 00:10:33,389
good control it's good control we're

254
00:10:31,329 --> 00:10:36,430
gonna miss it

255
00:10:33,389 --> 00:10:40,000
and then yeah reviewing actually what

256
00:10:36,430 --> 00:10:41,769
ends up in the logs as well as how its

257
00:10:40,000 --> 00:10:43,810
protected like what's actually being

258
00:10:41,769 --> 00:10:45,600
written um a lot of times when I do

259
00:10:43,810 --> 00:10:48,369
these threat models for my clients

260
00:10:45,600 --> 00:10:50,139
they're we call them tabletop exercises

261
00:10:48,370 --> 00:10:52,360
we're not supposed to look at code but I

262
00:10:50,139 --> 00:10:54,310
like to look at code anyway because the

263
00:10:52,360 --> 00:10:56,649
code tells me what's actually going on I

264
00:10:54,310 --> 00:10:58,750
like to look at message schemas they're

265
00:10:56,649 --> 00:11:01,240
being passed around everybody using JSON

266
00:10:58,750 --> 00:11:02,800
these days which is great because they

267
00:11:01,240 --> 00:11:04,389
have like swagger files and I can just

268
00:11:02,800 --> 00:11:06,399
like go get the swagger JSON it's

269
00:11:04,389 --> 00:11:09,100
awesome because then I can just be like

270
00:11:06,399 --> 00:11:10,810
hey guys um why are you passing this

271
00:11:09,100 --> 00:11:12,069
correlation idea around everywhere and

272
00:11:10,810 --> 00:11:13,388
they're like oh yeah we need it for

273
00:11:12,069 --> 00:11:15,610
auditing later and I'm like that's cool

274
00:11:13,389 --> 00:11:17,410
but like is it a good idea that I can

275
00:11:15,610 --> 00:11:18,940
correlate all of the actions of all

276
00:11:17,410 --> 00:11:20,439
these users together into a big pool of

277
00:11:18,940 --> 00:11:26,620
like I just want to collect all the data

278
00:11:20,440 --> 00:11:29,620
like maybe not oh okay

279
00:11:26,620 --> 00:11:31,740
so example two we'll call this mind the

280
00:11:29,620 --> 00:11:31,740
gap

281
00:11:32,269 --> 00:11:36,499
so here we're going to have a step-up

282
00:11:34,699 --> 00:11:39,258
authentication so step up is when you're

283
00:11:36,499 --> 00:11:41,029
like say you log into your your bank

284
00:11:39,259 --> 00:11:43,459
application on your phone your mobile

285
00:11:41,029 --> 00:11:44,749
banking and you have to put in your your

286
00:11:43,459 --> 00:11:47,180
username and password to log in maybe

287
00:11:44,749 --> 00:11:49,189
scan your fingerprint or whatever and it

288
00:11:47,180 --> 00:11:51,170
gets um but then you want to do like I

289
00:11:49,189 --> 00:11:54,019
want to transfer ten thousand dollars

290
00:11:51,170 --> 00:11:57,079
overseas because there's a Nigerian

291
00:11:54,019 --> 00:12:01,480
prince who needs the money and the bank

292
00:11:57,079 --> 00:12:03,888
says hey that looks weird and suspicious

293
00:12:01,480 --> 00:12:05,870
we're gonna require you to answer

294
00:12:03,889 --> 00:12:08,480
security questions reenter your password

295
00:12:05,870 --> 00:12:12,499
scan your fingerprint call us text us

296
00:12:08,480 --> 00:12:14,029
whatever that requirement is right it's

297
00:12:12,499 --> 00:12:16,519
a pretty standard feature now especially

298
00:12:14,029 --> 00:12:18,949
in in high-risk applications like mobile

299
00:12:16,519 --> 00:12:21,920
banking to have these step ups I've also

300
00:12:18,949 --> 00:12:23,508
seen it like on my Amazon I can my

301
00:12:21,920 --> 00:12:25,490
Amazon stays logged in all the time on

302
00:12:23,509 --> 00:12:27,350
my home PC cuz I buy a lot of stuff on

303
00:12:25,490 --> 00:12:29,120
Amazon and I never have to put on my

304
00:12:27,350 --> 00:12:30,499
pass around to do anything but if I

305
00:12:29,120 --> 00:12:31,910
change where I ship it to like I just

306
00:12:30,499 --> 00:12:33,769
had a friend who got married so I was

307
00:12:31,910 --> 00:12:35,240
shipping him as wedding present not to

308
00:12:33,769 --> 00:12:37,189
put in my password I have to do

309
00:12:35,240 --> 00:12:38,480
verification emails because they're like

310
00:12:37,189 --> 00:12:39,559
you know that's the first thing an

311
00:12:38,480 --> 00:12:40,879
attacker is gonna do if they steal my

312
00:12:39,559 --> 00:12:43,389
account they're gonna ship them so

313
00:12:40,879 --> 00:12:45,920
they're not ship me stuff

314
00:12:43,389 --> 00:12:48,709
hey man I bought you this cool TV on

315
00:12:45,920 --> 00:12:51,170
your credit card that's not an attack

316
00:12:48,709 --> 00:12:53,420
okay so that's that's what I'm talking

317
00:12:51,170 --> 00:12:57,110
about when I say step up okay cool so on

318
00:12:53,420 --> 00:13:00,229
the Left we've got mobile app of some

319
00:12:57,110 --> 00:13:01,910
sort I think this was a trading

320
00:13:00,230 --> 00:13:03,639
application like a stock trading

321
00:13:01,910 --> 00:13:05,929
application so they're trying to sell

322
00:13:03,639 --> 00:13:08,929
$10,000 or they have acne Corp stock

323
00:13:05,929 --> 00:13:11,300
here and it's gonna go through the cloud

324
00:13:08,929 --> 00:13:12,350
because everything's in the cloud and

325
00:13:11,300 --> 00:13:14,059
we're gonna hit this authentication

326
00:13:12,350 --> 00:13:17,059
layer right so this is our first

327
00:13:14,059 --> 00:13:18,469
security control and our security

328
00:13:17,059 --> 00:13:21,050
controls gonna validate that we're

329
00:13:18,470 --> 00:13:23,929
logged in we are on Bob's account that's

330
00:13:21,050 --> 00:13:25,790
gonna be our victim today and Bob

331
00:13:23,929 --> 00:13:28,730
actually you know is allowed to hit this

332
00:13:25,790 --> 00:13:31,129
endpoint which he is Bob wants to trade

333
00:13:28,730 --> 00:13:33,410
$10,000 says the backend back-end

334
00:13:31,129 --> 00:13:36,889
validates that Bob actually has $10,000

335
00:13:33,410 --> 00:13:39,199
and all this and the back end decides

336
00:13:36,889 --> 00:13:42,620
this is risky we have to do a step-up

337
00:13:39,199 --> 00:13:44,359
transaction or step-up authentication so

338
00:13:42,620 --> 00:13:45,590
the authentication layer sends back a

339
00:13:44,360 --> 00:13:49,610
challenge

340
00:13:45,590 --> 00:13:51,680
to Bob so say that's either a you know

341
00:13:49,610 --> 00:13:54,770
you have to type in your one-time

342
00:13:51,680 --> 00:13:57,939
password or you have to text us a number

343
00:13:54,770 --> 00:14:00,529
or whatever it's some challenge Bob

344
00:13:57,940 --> 00:14:02,240
completes the challenge goes back to the

345
00:14:00,529 --> 00:14:05,150
authentication layer it says okay

346
00:14:02,240 --> 00:14:06,680
here's the response and in this case

347
00:14:05,150 --> 00:14:08,449
it's a it's a one-time password so this

348
00:14:06,680 --> 00:14:10,189
could be like an RSA token or a soft

349
00:14:08,450 --> 00:14:12,050
token or something

350
00:14:10,190 --> 00:14:15,320
the authentication layer just validates

351
00:14:12,050 --> 00:14:17,150
the OTP marks it is used very important

352
00:14:15,320 --> 00:14:18,440
one-time passwords have to be one time

353
00:14:17,150 --> 00:14:21,079
so you have to record all the ones

354
00:14:18,440 --> 00:14:23,060
you've used so far but once that's done

355
00:14:21,080 --> 00:14:25,600
it issues a new session token because it

356
00:14:23,060 --> 00:14:28,160
says you know here's your new you know

357
00:14:25,600 --> 00:14:29,540
session plus plus it's so much better

358
00:14:28,160 --> 00:14:31,550
than the last type you don't have to

359
00:14:29,540 --> 00:14:33,140
type in your password again and you can

360
00:14:31,550 --> 00:14:35,779
send the Nigerian prints all of your

361
00:14:33,140 --> 00:14:37,490
money in the backend school with this

362
00:14:35,779 --> 00:14:39,439
now right because it's got its increased

363
00:14:37,490 --> 00:14:42,740
session identifier it's got Bob's

364
00:14:39,440 --> 00:14:44,960
account it knows everything's good no

365
00:14:42,740 --> 00:14:49,460
problems right everything looks good

366
00:14:44,960 --> 00:14:51,860
everybody okay well before I ask you to

367
00:14:49,460 --> 00:14:52,970
figure out what we're gonna do I'm gonna

368
00:14:51,860 --> 00:14:54,920
show you a couple different scenarios

369
00:14:52,970 --> 00:14:56,150
and then on instead of asking out I'm

370
00:14:54,920 --> 00:14:58,069
gonna do like a raise a hand see which

371
00:14:56,150 --> 00:15:00,680
one maybe we think it's the best idea

372
00:14:58,070 --> 00:15:01,700
from an attackers perspective okay so

373
00:15:00,680 --> 00:15:03,020
the attacker is gonna try a few

374
00:15:01,700 --> 00:15:04,430
different things the first thing the

375
00:15:03,020 --> 00:15:07,790
attacker is gonna try to do is

376
00:15:04,430 --> 00:15:09,380
compromise your phone right if we have a

377
00:15:07,790 --> 00:15:11,150
man in the app or a man in the browser

378
00:15:09,380 --> 00:15:13,010
or a man in the phone or whatever it is

379
00:15:11,150 --> 00:15:16,939
right we're going after the device the

380
00:15:13,010 --> 00:15:18,710
users using that's an option we could go

381
00:15:16,940 --> 00:15:21,560
after the communications link between

382
00:15:18,710 --> 00:15:23,780
the device and the cloud or in the data

383
00:15:21,560 --> 00:15:25,069
center or whatever this would be like a

384
00:15:23,780 --> 00:15:28,310
traditional man-in-the-middle type

385
00:15:25,070 --> 00:15:33,800
attack or we could try relaying

386
00:15:28,310 --> 00:15:35,479
replaying GPS so so by raise of hands

387
00:15:33,800 --> 00:15:37,910
who thinks the first option is the best

388
00:15:35,480 --> 00:15:41,330
idea okay

389
00:15:37,910 --> 00:15:43,670
the second one Oh everybody's like TLS

390
00:15:41,330 --> 00:15:47,709
is awesome I'm not breaking TLS and then

391
00:15:43,670 --> 00:15:50,779
the last one relaying OTP a couple okay

392
00:15:47,709 --> 00:15:54,439
let's see how they do

393
00:15:50,779 --> 00:15:56,030
well we relay the OTP the offic

394
00:15:54,440 --> 00:15:58,100
authentication server is going to reject

395
00:15:56,030 --> 00:15:59,410
it because as I said earlier it's

396
00:15:58,100 --> 00:16:02,379
validating that's one time

397
00:15:59,410 --> 00:16:05,348
so we can't replay and if we could

398
00:16:02,379 --> 00:16:09,009
predict the OTP there's much bigger

399
00:16:05,349 --> 00:16:12,059
problems for the system right if we knew

400
00:16:09,009 --> 00:16:15,160
it ahead of time it would be an issue

401
00:16:12,059 --> 00:16:17,289
the other two right if we go after the

402
00:16:15,160 --> 00:16:19,269
phone itself that would definitely work

403
00:16:17,289 --> 00:16:21,069
but we wouldn't have to bypass any of

404
00:16:19,269 --> 00:16:24,069
this right because if I'm inside the app

405
00:16:21,069 --> 00:16:26,348
I can just send requests at will right

406
00:16:24,069 --> 00:16:28,089
it's completely unnecessary for me to

407
00:16:26,349 --> 00:16:30,220
even bypass the step up because I can

408
00:16:28,089 --> 00:16:33,159
just tell the user just step up and

409
00:16:30,220 --> 00:16:35,049
force them to do it so although that

410
00:16:33,159 --> 00:16:36,939
definitely would work this would be a

411
00:16:35,049 --> 00:16:38,049
different threat model to determine how

412
00:16:36,939 --> 00:16:40,449
to prevent that and we would probably

413
00:16:38,049 --> 00:16:44,019
have to talk about like attestation of

414
00:16:40,449 --> 00:16:47,679
phone integrity and tea PM's and teas on

415
00:16:44,019 --> 00:16:49,899
devices and all that stuff okay the link

416
00:16:47,679 --> 00:16:52,629
between the two which no one wanted to

417
00:16:49,899 --> 00:16:54,309
attack I I tend to agree with anytime I

418
00:16:52,629 --> 00:16:56,829
see TLS on the Internet I'm like okay

419
00:16:54,309 --> 00:16:59,978
this is probably fine you know unless

420
00:16:56,829 --> 00:17:04,599
unless your attacker is a nation-state

421
00:16:59,979 --> 00:17:07,269
you're probably good though it kind of

422
00:17:04,599 --> 00:17:09,128
depends there's a cool anecdote last

423
00:17:07,269 --> 00:17:12,159
year I don't know if like I said earlier

424
00:17:09,128 --> 00:17:15,698
I'm a blockchain anti enthusiast so I

425
00:17:12,159 --> 00:17:18,129
had my anti blockchain story last year

426
00:17:15,699 --> 00:17:20,980
there was a story from my ether wallet

427
00:17:18,128 --> 00:17:23,740
that got hacked hacked and their

428
00:17:20,980 --> 00:17:27,579
websites hosted on AWS and what happened

429
00:17:23,740 --> 00:17:30,460
was some attackers hijacked BGP on the

430
00:17:27,579 --> 00:17:33,820
open Internet to reroute Amazon's route

431
00:17:30,460 --> 00:17:35,740
53 which is Amazon's DNS service to

432
00:17:33,820 --> 00:17:37,629
China or Russia or wherever it was I

433
00:17:35,740 --> 00:17:40,990
don't remember what was - some Asian

434
00:17:37,629 --> 00:17:43,539
country and then all they did is they

435
00:17:40,990 --> 00:17:45,730
had a exact copy of the my ether wallet

436
00:17:43,539 --> 00:17:46,960
website users would go up there upload

437
00:17:45,730 --> 00:17:48,519
their private key do their ether

438
00:17:46,960 --> 00:17:50,409
transactions and they were just

439
00:17:48,519 --> 00:17:52,090
siphoning private keys and they managed

440
00:17:50,409 --> 00:17:54,940
to do this for like 25 minutes before

441
00:17:52,090 --> 00:17:57,759
like global ISPs we're like I don't

442
00:17:54,940 --> 00:18:01,570
think Amazon moved route 53 to Asia just

443
00:17:57,759 --> 00:18:03,789
right now that seems weird but it's it's

444
00:18:01,570 --> 00:18:05,470
surprising that like you know my ether

445
00:18:03,789 --> 00:18:08,110
while it's not a big website this is not

446
00:18:05,470 --> 00:18:09,970
like you know the Google of blockchain I

447
00:18:08,110 --> 00:18:11,559
mean it's not that big of a website in

448
00:18:09,970 --> 00:18:12,970
fact it's really dumb if you're using it

449
00:18:11,559 --> 00:18:14,470
because like don't upload your private

450
00:18:12,970 --> 00:18:18,130
use two websites that doesn't sound like

451
00:18:14,470 --> 00:18:20,289
a good idea but anyway it's a lie he'll

452
00:18:18,130 --> 00:18:22,750
apparently use it but somebody went

453
00:18:20,289 --> 00:18:23,830
after Amazon big company Amazon just to

454
00:18:22,750 --> 00:18:25,120
go out for this tiny little website

455
00:18:23,830 --> 00:18:26,710
because they knew that they could

456
00:18:25,120 --> 00:18:27,820
collect easy money that way right I mean

457
00:18:26,710 --> 00:18:29,650
once you get a private key for a

458
00:18:27,820 --> 00:18:33,189
blockchain cryptocurrency it's just like

459
00:18:29,650 --> 00:18:35,470
money's gone right it's mine so if they

460
00:18:33,190 --> 00:18:36,730
could do the attack it pays and it paid

461
00:18:35,470 --> 00:18:37,750
probably pretty good dividends I think

462
00:18:36,730 --> 00:18:40,480
it was something like twenty five

463
00:18:37,750 --> 00:18:42,850
million dollars or so was stolen okay

464
00:18:40,480 --> 00:18:44,470
anyway that's a long story to say that

465
00:18:42,850 --> 00:18:46,389
maybe attacking the link between the

466
00:18:44,470 --> 00:18:48,490
things could work but we're also not

467
00:18:46,390 --> 00:18:50,350
going to talk about that here so I

468
00:18:48,490 --> 00:18:52,059
tricked you the answer was none of them

469
00:18:50,350 --> 00:18:55,469
so whoever wasn't paying attention it

470
00:18:52,059 --> 00:18:55,470
didn't raise her hand congratulations

471
00:18:56,220 --> 00:19:02,590
there is also this option I didn't even

472
00:18:59,590 --> 00:19:05,500
offer this as an option mainly because

473
00:19:02,590 --> 00:19:07,629
it doesn't work at all on any level so

474
00:19:05,500 --> 00:19:09,370
the idea is like okay well what if we

475
00:19:07,630 --> 00:19:12,010
just bypass the authentication layer and

476
00:19:09,370 --> 00:19:14,199
go directly to the back-end but you know

477
00:19:12,010 --> 00:19:17,020
our back ends a little bit smarter is

478
00:19:14,200 --> 00:19:18,780
like I'm very suspicious of someone who

479
00:19:17,020 --> 00:19:22,150
doesn't have the authentication layers

480
00:19:18,780 --> 00:19:23,830
IP address or signature or whatever so

481
00:19:22,150 --> 00:19:28,450
we'll assume that that also doesn't work

482
00:19:23,830 --> 00:19:31,750
okay so we need more options okay what

483
00:19:28,450 --> 00:19:34,210
else can we do so this is where I get

484
00:19:31,750 --> 00:19:35,890
into what I call flow modeling where

485
00:19:34,210 --> 00:19:37,750
instead of just thinking about the

486
00:19:35,890 --> 00:19:38,830
system as a pile of components which is

487
00:19:37,750 --> 00:19:40,270
what we've done so far we've just been

488
00:19:38,830 --> 00:19:44,500
looking at what I call component model

489
00:19:40,270 --> 00:19:46,418
now we can look at a state model or well

490
00:19:44,500 --> 00:19:48,580
like a swim lane diagram right so I'm

491
00:19:46,419 --> 00:19:50,020
sure you guys are developers or security

492
00:19:48,580 --> 00:19:51,280
professionals you've seen some million

493
00:19:50,020 --> 00:19:52,840
diagrams like this where we say you know

494
00:19:51,280 --> 00:19:55,539
message gets passed one-way response

495
00:19:52,840 --> 00:19:56,530
gets passed together and so on so this

496
00:19:55,539 --> 00:19:59,379
is going to be actually pretty simple

497
00:19:56,530 --> 00:20:01,418
right so so far it's pretty obvious you

498
00:19:59,380 --> 00:20:02,950
log in you get a session token' cool

499
00:20:01,419 --> 00:20:04,929
we're going to call it session 1 that's

500
00:20:02,950 --> 00:20:08,830
our low-level session that's not the

501
00:20:04,929 --> 00:20:12,460
stepped up then we do some action say I

502
00:20:08,830 --> 00:20:14,760
want to move $10,000 and we pass along

503
00:20:12,460 --> 00:20:17,260
session 1 with that request right and

504
00:20:14,760 --> 00:20:19,390
the back end decides that's a risky

505
00:20:17,260 --> 00:20:21,460
transaction and requests the step up and

506
00:20:19,390 --> 00:20:24,340
the challenge is sent back to the user

507
00:20:21,460 --> 00:20:27,170
and this is this is where it comes in

508
00:20:24,340 --> 00:20:31,280
right and we get a response to the

509
00:20:27,170 --> 00:20:32,990
and we get back session - okay so what's

510
00:20:31,280 --> 00:20:36,470
interesting here right is now we have

511
00:20:32,990 --> 00:20:38,480
two session tokens and so how do session

512
00:20:36,470 --> 00:20:41,150
1 in session 2 interact with each other

513
00:20:38,480 --> 00:20:45,429
like how are they used by the overall

514
00:20:41,150 --> 00:20:49,520
system so here's just in a different

515
00:20:45,429 --> 00:20:52,690
layout right just starting signing in

516
00:20:49,520 --> 00:20:55,670
getting your token so on and so forth

517
00:20:52,690 --> 00:20:57,470
so if I'm the attacker right I can log

518
00:20:55,670 --> 00:21:00,080
in on my account I've done have any

519
00:20:57,470 --> 00:21:02,120
money in it but I can do it and I'll get

520
00:21:00,080 --> 00:21:05,840
session 1 underscore attacker and a

521
00:21:02,120 --> 00:21:08,120
session to underscore attacker okay and

522
00:21:05,840 --> 00:21:09,830
what would be nice is if I could skip

523
00:21:08,120 --> 00:21:11,090
all this other stuff I just want to go I

524
00:21:09,830 --> 00:21:14,449
want to go here because this is where I

525
00:21:11,090 --> 00:21:17,120
can move money that's the fun part so we

526
00:21:14,450 --> 00:21:21,650
want to step over everything you know

527
00:21:17,120 --> 00:21:23,389
what what could we use to do that well

528
00:21:21,650 --> 00:21:25,610
let's assume that I compromised my

529
00:21:23,390 --> 00:21:26,900
victim's password somehow right so we're

530
00:21:25,610 --> 00:21:28,969
talking about OTP right so there's no

531
00:21:26,900 --> 00:21:30,650
reason to even talk about OTP if we

532
00:21:28,970 --> 00:21:32,530
assume passwords are perfect but

533
00:21:30,650 --> 00:21:35,270
passwords are definitely not perfect so

534
00:21:32,530 --> 00:21:36,590
you know we'll just assume every threat

535
00:21:35,270 --> 00:21:38,480
model adjusts like passwords will be

536
00:21:36,590 --> 00:21:40,820
stolen they'll be guessed they'll be

537
00:21:38,480 --> 00:21:43,010
fished whatever you know just assume the

538
00:21:40,820 --> 00:21:45,379
passwords gone that's why we're doing

539
00:21:43,010 --> 00:21:47,900
stuff up in the first place ok cool so I

540
00:21:45,380 --> 00:21:50,090
have those three things well what

541
00:21:47,900 --> 00:21:52,670
happens if these two session identifiers

542
00:21:50,090 --> 00:21:55,428
aren't correlated to each other right

543
00:21:52,670 --> 00:22:00,080
who's to say that the user of session 1

544
00:21:55,429 --> 00:22:02,210
is the user of session 2 okay so this is

545
00:22:00,080 --> 00:22:05,240
what it looks like right so we're gonna

546
00:22:02,210 --> 00:22:06,620
login as the victim with well well first

547
00:22:05,240 --> 00:22:08,780
right we're going to assume that we have

548
00:22:06,620 --> 00:22:10,309
these three pieces of information right

549
00:22:08,780 --> 00:22:12,559
so we're all we're going to have our own

550
00:22:10,309 --> 00:22:14,470
sessions but then we're going to use

551
00:22:12,559 --> 00:22:19,250
that password to log in as the victim

552
00:22:14,470 --> 00:22:20,870
okay so now after login we have session

553
00:22:19,250 --> 00:22:23,020
1 and victim and I have already

554
00:22:20,870 --> 00:22:25,669
collected my own session 2 of attacker

555
00:22:23,020 --> 00:22:29,600
we pass those along with the request to

556
00:22:25,670 --> 00:22:31,670
move the money execute the trade and

557
00:22:29,600 --> 00:22:33,439
then we have all of these we'll call

558
00:22:31,670 --> 00:22:34,880
them micro services because that's the

559
00:22:33,440 --> 00:22:37,400
favorite buzz

560
00:22:34,880 --> 00:22:39,050
where these days lots of microservices

561
00:22:37,400 --> 00:22:41,420
in the middle whose responsibility is it

562
00:22:39,050 --> 00:22:43,940
to check right who

563
00:22:41,420 --> 00:22:45,890
what micro-service has the code that

564
00:22:43,940 --> 00:22:48,830
looks at these two things and validates

565
00:22:45,890 --> 00:22:51,440
it and the problem that I think a lot of

566
00:22:48,830 --> 00:22:54,129
places run into especially when we have

567
00:22:51,440 --> 00:22:56,840
this idea of distributed services or

568
00:22:54,130 --> 00:22:59,120
distributed responsibility across micro

569
00:22:56,840 --> 00:23:01,310
services is well the password system

570
00:22:59,120 --> 00:23:03,139
validates the session one because that's

571
00:23:01,310 --> 00:23:05,210
how you get session one is you send a

572
00:23:03,140 --> 00:23:07,640
password and then the step up system is

573
00:23:05,210 --> 00:23:09,830
responsible for session two and then the

574
00:23:07,640 --> 00:23:11,120
trade system doesn't do anything to do

575
00:23:09,830 --> 00:23:14,030
with authentication all that does is

576
00:23:11,120 --> 00:23:16,250
look at your identity right so it's not

577
00:23:14,030 --> 00:23:19,220
clear to me that there is any system on

578
00:23:16,250 --> 00:23:23,570
here that has that responsibility right

579
00:23:19,220 --> 00:23:25,610
so when we were doing this model for for

580
00:23:23,570 --> 00:23:27,169
our client we were talking to them about

581
00:23:25,610 --> 00:23:28,699
the micro services and we looked at

582
00:23:27,170 --> 00:23:30,410
their swagger documents and we could see

583
00:23:28,700 --> 00:23:32,330
that these were different micro services

584
00:23:30,410 --> 00:23:34,400
so that's why we asked the question

585
00:23:32,330 --> 00:23:35,449
really whose responsibility is it to

586
00:23:34,400 --> 00:23:37,790
look at the big picture of the

587
00:23:35,450 --> 00:23:39,950
authentication sequence who's ensuring

588
00:23:37,790 --> 00:23:42,080
that the state flow is being executed

589
00:23:39,950 --> 00:23:45,110
faithfully and we haven't skipped steps

590
00:23:42,080 --> 00:23:47,149
and their response was we don't need to

591
00:23:45,110 --> 00:23:48,979
do that because we have all these micro

592
00:23:47,150 --> 00:23:55,040
services don't you see our cool micro

593
00:23:48,980 --> 00:23:57,290
services okay well because we passed in

594
00:23:55,040 --> 00:24:00,850
session one of the victim and we've

595
00:23:57,290 --> 00:24:03,290
already sent in a stepped-up session the

596
00:24:00,850 --> 00:24:04,939
step-up and the password authentication

597
00:24:03,290 --> 00:24:06,560
layers are gonna be like yeah that looks

598
00:24:04,940 --> 00:24:08,950
good right you've done everything you

599
00:24:06,560 --> 00:24:12,290
needed to do welcome to the system Bob

600
00:24:08,950 --> 00:24:13,610
and then the question is okay well the

601
00:24:12,290 --> 00:24:17,180
backend that actually does the trade

602
00:24:13,610 --> 00:24:18,500
which identity is it going to use for

603
00:24:17,180 --> 00:24:19,910
moving the account money right is it

604
00:24:18,500 --> 00:24:22,160
going to use sessional intercession -

605
00:24:19,910 --> 00:24:23,810
well of course it's gonna use session 1

606
00:24:22,160 --> 00:24:25,700
because that's the only one that it's

607
00:24:23,810 --> 00:24:27,260
guaranteed to be there all right if he

608
00:24:25,700 --> 00:24:29,060
was only moving 50 bucks

609
00:24:27,260 --> 00:24:31,280
it wouldn't require a step up and

610
00:24:29,060 --> 00:24:36,110
there'd be no session - so it only ever

611
00:24:31,280 --> 00:24:40,639
looks at session 1 right so Bob wants to

612
00:24:36,110 --> 00:24:44,510
do the trade attack successful ok

613
00:24:40,640 --> 00:24:46,940
great so again right the controls are

614
00:24:44,510 --> 00:24:49,760
not the end of the story is how the

615
00:24:46,940 --> 00:24:53,299
controls fit into the greater system how

616
00:24:49,760 --> 00:24:55,520
they work together and I I think this is

617
00:24:53,299 --> 00:24:57,110
the the key here is the responsibilities

618
00:24:55,520 --> 00:24:59,629
right clearly drawing out

619
00:24:57,110 --> 00:25:03,020
responsibilities for every micro service

620
00:24:59,630 --> 00:25:06,530
or for every subsystem of your overall

621
00:25:03,020 --> 00:25:08,090
project that tells you am I missing

622
00:25:06,530 --> 00:25:10,610
something you know I'm the developer of

623
00:25:08,090 --> 00:25:12,530
the trade platform and my

624
00:25:10,610 --> 00:25:14,540
responsibilities just do trades I don't

625
00:25:12,530 --> 00:25:16,340
ever have to think about off but if I'm

626
00:25:14,540 --> 00:25:17,389
getting sent to tokens and I know there

627
00:25:16,340 --> 00:25:22,220
are cases where I'm getting sent to

628
00:25:17,390 --> 00:25:24,169
tokens you know hmm did I did I do

629
00:25:22,220 --> 00:25:29,090
enough to diligence when I was designing

630
00:25:24,169 --> 00:25:31,070
this to make that decision or not and

631
00:25:29,090 --> 00:25:33,020
and then this is this is kind of key to

632
00:25:31,070 --> 00:25:36,470
all all threat modeling is what can the

633
00:25:33,020 --> 00:25:37,970
attacker do right that's I think what

634
00:25:36,470 --> 00:25:39,470
we're trying to get at when we're doing

635
00:25:37,970 --> 00:25:43,340
front modeling is thinking like the

636
00:25:39,470 --> 00:25:44,720
attacker well yeah so so they're they're

637
00:25:43,340 --> 00:25:48,168
using the users passwords that they

638
00:25:44,720 --> 00:25:50,960
stole or fished to gain the identity

639
00:25:48,169 --> 00:25:53,240
right so now they are logged in as and

640
00:25:50,960 --> 00:25:56,110
then in order to convince the step-up

641
00:25:53,240 --> 00:25:58,880
system that this session has been

642
00:25:56,110 --> 00:26:01,250
authenticated at the higher level they

643
00:25:58,880 --> 00:26:02,450
pass in their own session identifier for

644
00:26:01,250 --> 00:26:05,059
the step-up identifier they're two

645
00:26:02,450 --> 00:26:07,040
separate say cookies or well I'll call

646
00:26:05,059 --> 00:26:09,020
them JW T's because that's more in vogue

647
00:26:07,040 --> 00:26:11,690
these days so you can think of the first

648
00:26:09,020 --> 00:26:14,418
JWT is actually having the user identity

649
00:26:11,690 --> 00:26:16,190
email address or user ID or whatever and

650
00:26:14,419 --> 00:26:18,049
then a session token just being a

651
00:26:16,190 --> 00:26:20,780
boolean that says step-up equals true

652
00:26:18,049 --> 00:26:23,418
right and so since the second one

653
00:26:20,780 --> 00:26:26,149
doesn't tie to the users actual identity

654
00:26:23,419 --> 00:26:28,429
there's nothing to ensure that the

655
00:26:26,150 --> 00:26:32,000
second one was generated during this

656
00:26:28,429 --> 00:26:33,380
actual session right like do this

657
00:26:32,000 --> 00:26:34,820
session like you can think of like

658
00:26:33,380 --> 00:26:37,820
having a timeline right did the

659
00:26:34,820 --> 00:26:40,010
timelines match up did we follow I go

660
00:26:37,820 --> 00:26:43,280
back a bunch did we follow this process

661
00:26:40,010 --> 00:26:45,679
step by step or did we skip something in

662
00:26:43,280 --> 00:26:47,570
this case we did like we logged in and

663
00:26:45,679 --> 00:26:50,390
then after sign-in we just went to the

664
00:26:47,570 --> 00:26:53,700
end right we didn't for that user we

665
00:26:50,390 --> 00:26:55,830
didn't do step up we just presented them

666
00:26:53,700 --> 00:27:00,659
and already gotten cookie and this like

667
00:26:55,830 --> 00:27:01,649
oh I guess you have it you're good you

668
00:27:00,659 --> 00:27:02,909
know that's that's it's an interesting

669
00:27:01,649 --> 00:27:04,590
question to ask yourself when you're

670
00:27:02,909 --> 00:27:07,350
designing a system is it's like okay

671
00:27:04,590 --> 00:27:08,699
right so we have like say a three-step

672
00:27:07,350 --> 00:27:10,168
login process you gotta type in your

673
00:27:08,700 --> 00:27:12,330
email address you're gonna type in your

674
00:27:10,169 --> 00:27:13,320
password and then you go to do OTP right

675
00:27:12,330 --> 00:27:15,570
and at the end of the whole thing you

676
00:27:13,320 --> 00:27:17,070
get a cookie okay what happens if

677
00:27:15,570 --> 00:27:19,740
someone comes to the site and just has

678
00:27:17,070 --> 00:27:21,178
the cookie we've never seen them before

679
00:27:19,740 --> 00:27:22,830
brand-new IP address brand new

680
00:27:21,179 --> 00:27:23,850
everything they just show up one day

681
00:27:22,830 --> 00:27:27,870
with the cookie and they're logged in

682
00:27:23,850 --> 00:27:29,519
right so that seems really suspicious

683
00:27:27,870 --> 00:27:32,370
there are certainly circumstances where

684
00:27:29,519 --> 00:27:33,960
that happens right where you know they

685
00:27:32,370 --> 00:27:35,668
have a cookie because they got a new

686
00:27:33,960 --> 00:27:36,389
browser session they closed the window

687
00:27:35,669 --> 00:27:39,000
opened it again

688
00:27:36,389 --> 00:27:40,110
they there's some features for like

689
00:27:39,000 --> 00:27:42,210
Firefox where you can like move your

690
00:27:40,110 --> 00:27:43,918
session to your phone that's an option

691
00:27:42,210 --> 00:27:45,360
if they're in the car and they're

692
00:27:43,919 --> 00:27:46,679
driving their IP address it could be

693
00:27:45,360 --> 00:27:48,209
changing as they change cell towers

694
00:27:46,679 --> 00:27:50,429
there's lots of things that can happen

695
00:27:48,210 --> 00:27:52,080
that way right but it's still worth the

696
00:27:50,429 --> 00:27:53,490
effort to go through it and be like okay

697
00:27:52,080 --> 00:27:56,850
well in this particular circumstance

698
00:27:53,490 --> 00:27:59,820
around OTP that doesn't happen or if it

699
00:27:56,850 --> 00:28:02,459
does we just say no let's just do it

700
00:27:59,820 --> 00:28:04,678
again you know is it how often does that

701
00:28:02,460 --> 00:28:10,740
happen versus what could happen if it

702
00:28:04,679 --> 00:28:15,269
goes wrong okay cool next one

703
00:28:10,740 --> 00:28:16,830
so yeah this this one's funny because

704
00:28:15,269 --> 00:28:19,799
it's like really obvious if something's

705
00:28:16,830 --> 00:28:21,689
going wrong but there's something you

706
00:28:19,799 --> 00:28:23,700
know it's much worse than what we can

707
00:28:21,690 --> 00:28:27,179
help them with so when we first got here

708
00:28:23,700 --> 00:28:29,130
we've got a web server in a DMZ and some

709
00:28:27,179 --> 00:28:30,659
protected network again with an app

710
00:28:29,130 --> 00:28:32,730
server and we're just storing passwords

711
00:28:30,659 --> 00:28:36,230
in plain texts in the database all right

712
00:28:32,730 --> 00:28:39,029
so then send oh no we don't do that so

713
00:28:36,230 --> 00:28:42,240
we're like okay new design new design

714
00:28:39,029 --> 00:28:43,620
how about instead of doing plain text we

715
00:28:42,240 --> 00:28:46,289
just you know hash them and put them in

716
00:28:43,620 --> 00:28:49,379
the database okay really simple basic

717
00:28:46,289 --> 00:28:53,340
changes no-one should be upset about

718
00:28:49,380 --> 00:28:54,570
this right what could go wrong and and

719
00:28:53,340 --> 00:28:56,220
before I get into it you know I'll say

720
00:28:54,570 --> 00:28:57,539
okay the passwords are good or the

721
00:28:56,220 --> 00:29:00,360
password hashes are good right we're

722
00:28:57,539 --> 00:29:01,860
using be crept with good iteration

723
00:29:00,360 --> 00:29:04,189
values and they're upgradeable in place

724
00:29:01,860 --> 00:29:07,550
and all have fun stuff salted everything

725
00:29:04,190 --> 00:29:10,340
cool until we get a call then it turns

726
00:29:07,550 --> 00:29:12,700
out that the fraud detection system uses

727
00:29:10,340 --> 00:29:16,459
the user's password in their algorithms

728
00:29:12,700 --> 00:29:18,470
okay now as a security professional my

729
00:29:16,460 --> 00:29:19,640
immediate response is to like light my

730
00:29:18,470 --> 00:29:22,250
hair on fire and go what's wrong with

731
00:29:19,640 --> 00:29:23,600
you but but I get it like you know if

732
00:29:22,250 --> 00:29:25,880
you're trying to come up with features I

733
00:29:23,600 --> 00:29:27,860
would imagine that people who make

734
00:29:25,880 --> 00:29:29,930
fraudulent accounts probably don't pick

735
00:29:27,860 --> 00:29:32,120
the best passwords they also probably

736
00:29:29,930 --> 00:29:33,620
share passwords across their accounts so

737
00:29:32,120 --> 00:29:35,209
it could actually be kind of clever for

738
00:29:33,620 --> 00:29:37,729
an algorithm to just kind of decide

739
00:29:35,210 --> 00:29:39,170
that's a good feature to match on it

740
00:29:37,730 --> 00:29:41,450
just doesn't really work in reality

741
00:29:39,170 --> 00:29:43,310
because we we need to securely store

742
00:29:41,450 --> 00:29:45,020
passwords this like we shouldn't allow

743
00:29:43,310 --> 00:29:46,940
this to happen but the fraud department

744
00:29:45,020 --> 00:29:48,500
doesn't call the security department no

745
00:29:46,940 --> 00:29:51,110
truant department calls the developers

746
00:29:48,500 --> 00:29:53,870
could developer screwed up right broke

747
00:29:51,110 --> 00:29:57,439
their whole Berlin the developers fix it

748
00:29:53,870 --> 00:30:00,080
right so what do they do well when the

749
00:29:57,440 --> 00:30:03,200
user logs in we have their password so

750
00:30:00,080 --> 00:30:05,919
we just put it in the session and so now

751
00:30:03,200 --> 00:30:10,580
we've got a session database in the DMZ

752
00:30:05,920 --> 00:30:13,580
and with all the passwords right right

753
00:30:10,580 --> 00:30:17,720
so you know if we lived in the future

754
00:30:13,580 --> 00:30:19,129
we're you know completely untrusted

755
00:30:17,720 --> 00:30:21,560
environments existed and there were no

756
00:30:19,130 --> 00:30:23,360
DM Z's and nothing trusts anything the

757
00:30:21,560 --> 00:30:25,669
zero trust future we keep getting

758
00:30:23,360 --> 00:30:27,320
promised this wouldn't be any worse in

759
00:30:25,670 --> 00:30:28,970
the first diagram because the dmz

760
00:30:27,320 --> 00:30:30,260
wouldn't be a thing it would just be

761
00:30:28,970 --> 00:30:32,240
another database in their data center

762
00:30:30,260 --> 00:30:34,670
but because the dmz is here because

763
00:30:32,240 --> 00:30:38,420
we're saying that oh this area up here

764
00:30:34,670 --> 00:30:40,430
has you know more access from the open

765
00:30:38,420 --> 00:30:42,230
internet we've lowered our security

766
00:30:40,430 --> 00:30:44,960
threshold here right we've we've said

767
00:30:42,230 --> 00:30:48,460
here's more data hello

768
00:30:44,960 --> 00:30:50,600
you're welcome not not a great situation

769
00:30:48,460 --> 00:30:50,990
right so this is just kind of a quick

770
00:30:50,600 --> 00:30:52,820
one

771
00:30:50,990 --> 00:30:55,640
to kind of remind ourselves that as

772
00:30:52,820 --> 00:30:58,510
things change as requirements get added

773
00:30:55,640 --> 00:31:01,880
even in the middle of a sprint right

774
00:30:58,510 --> 00:31:04,310
that can have big changes to an existing

775
00:31:01,880 --> 00:31:05,990
threat model right so if you do threat

776
00:31:04,310 --> 00:31:07,970
modeling in an organization it's

777
00:31:05,990 --> 00:31:09,560
important not to do it just once but to

778
00:31:07,970 --> 00:31:10,490
have an iterative effect or at least

779
00:31:09,560 --> 00:31:13,580
have a decision

780
00:31:10,490 --> 00:31:15,230
somewhere along the line says hmm have

781
00:31:13,580 --> 00:31:17,760
we made enough changes have we made

782
00:31:15,230 --> 00:31:19,140
security impactful changes that we

783
00:31:17,760 --> 00:31:21,510
to go back and update the throw model

784
00:31:19,140 --> 00:31:28,700
you know and the answer might be no but

785
00:31:21,510 --> 00:31:32,700
you that decision has to be made okay

786
00:31:28,700 --> 00:31:34,770
more about OTP because OTP is fun

787
00:31:32,700 --> 00:31:37,980
so same idea user logs into the cloud

788
00:31:34,770 --> 00:31:41,460
server authentication server OTP server

789
00:31:37,980 --> 00:31:43,500
on the backend password and OTP is sent

790
00:31:41,460 --> 00:31:46,440
at the same time validated in the

791
00:31:43,500 --> 00:31:48,060
backend market is used attacker comes

792
00:31:46,440 --> 00:31:49,260
along tries to replay it remember I

793
00:31:48,060 --> 00:31:51,510
mentioned this earlier and why this

794
00:31:49,260 --> 00:31:53,550
doesn't work because it gets rejected

795
00:31:51,510 --> 00:31:59,940
right one time is one time we can't use

796
00:31:53,550 --> 00:32:01,860
it again yeah so we have a problem

797
00:31:59,940 --> 00:32:11,210
anyone have an idea of what I'm about to

798
00:32:01,860 --> 00:32:11,209
say race condition yeah well hmm kind of

799
00:32:11,990 --> 00:32:16,500
yeah yeah yeah exactly

800
00:32:14,640 --> 00:32:18,870
yeah so there'd be a race condition if

801
00:32:16,500 --> 00:32:20,100
we actually had synchronization but

802
00:32:18,870 --> 00:32:21,330
since we don't have synchronization

803
00:32:20,100 --> 00:32:23,100
we're just gonna desync the servers

804
00:32:21,330 --> 00:32:25,830
immediately right because our good

805
00:32:23,100 --> 00:32:27,750
persons gonna log in along the top line

806
00:32:25,830 --> 00:32:29,790
and then my attacker is gonna get routed

807
00:32:27,750 --> 00:32:33,270
to the bottom one and also be allowed in

808
00:32:29,790 --> 00:32:37,800
because these databases of used otps

809
00:32:33,270 --> 00:32:39,000
aren't being replicated or synced and so

810
00:32:37,800 --> 00:32:41,790
we can put in sync

811
00:32:39,000 --> 00:32:43,650
right but the sync has to be good right

812
00:32:41,790 --> 00:32:46,170
we can't just be like it eventually

813
00:32:43,650 --> 00:32:47,730
it'll sync right and and to be honest it

814
00:32:46,170 --> 00:32:49,950
I mean that's how most databases work is

815
00:32:47,730 --> 00:32:52,560
they don't have lockstep synchronization

816
00:32:49,950 --> 00:32:54,480
because it's really slow but for face

817
00:32:52,560 --> 00:32:56,700
like this yeah you need that

818
00:32:54,480 --> 00:32:57,870
right you got a try I'm not a database

819
00:32:56,700 --> 00:32:59,550
administrator so I'm assuming there's

820
00:32:57,870 --> 00:33:04,379
just like a checkbox to turn that on but

821
00:32:59,550 --> 00:33:06,090
like you know turn it on right they so

822
00:33:04,380 --> 00:33:08,940
it turns out like this company they did

823
00:33:06,090 --> 00:33:10,980
have synchronization but it was I think

824
00:33:08,940 --> 00:33:13,680
it was like once a day they synchronize

825
00:33:10,980 --> 00:33:15,210
the servers because it this was just

826
00:33:13,680 --> 00:33:17,370
like another table in an existing

827
00:33:15,210 --> 00:33:18,630
database and it wasn't a database that

828
00:33:17,370 --> 00:33:20,879
needed to be capes kept synchronized

829
00:33:18,630 --> 00:33:24,600
generically and I think they had bought

830
00:33:20,880 --> 00:33:26,250
the OTP solution off shelf and so OTP

831
00:33:24,600 --> 00:33:27,959
solution doesn't support synchronization

832
00:33:26,250 --> 00:33:29,340
that wasn't something that they I don't

833
00:33:27,960 --> 00:33:31,110
even think that solution supported doing

834
00:33:29,340 --> 00:33:31,490
this but they're like oh it's just a

835
00:33:31,110 --> 00:33:33,350
rest

836
00:33:31,490 --> 00:33:39,370
we can put that on the database server

837
00:33:33,350 --> 00:33:42,408
it'll be fine yeah okay right so

838
00:33:39,370 --> 00:33:45,199
deployment scenarios matter doing threat

839
00:33:42,409 --> 00:33:49,000
modeling in your dev environment doesn't

840
00:33:45,200 --> 00:33:49,000
do you much good so don't do that

841
00:33:49,070 --> 00:33:53,418
and if there are multiple instances of

842
00:33:51,440 --> 00:33:56,210
an app it is a good idea to at least

843
00:33:53,419 --> 00:33:59,480
think about what could happen in in that

844
00:33:56,210 --> 00:34:01,490
scenario I will say that most of the

845
00:33:59,480 --> 00:34:03,020
time when we do threat modeling if

846
00:34:01,490 --> 00:34:03,559
someone's like yes we load-balanced this

847
00:34:03,020 --> 00:34:06,350
service

848
00:34:03,559 --> 00:34:07,610
I don't like get into the grete

849
00:34:06,350 --> 00:34:08,690
nitty-gritty of what that means and how

850
00:34:07,610 --> 00:34:11,118
they're doing load balancing and

851
00:34:08,690 --> 00:34:13,099
synchronization protocols on it stuff I

852
00:34:11,119 --> 00:34:14,990
might ask some basic sync stuff but like

853
00:34:13,099 --> 00:34:16,639
I'm not gonna really get into it unless

854
00:34:14,989 --> 00:34:20,408
we have a situation where I think hey

855
00:34:16,639 --> 00:34:23,109
like OTP is in play or we have like a

856
00:34:20,409 --> 00:34:25,280
whenever the security control relies on

857
00:34:23,109 --> 00:34:27,529
synchronization that's when we pull in

858
00:34:25,280 --> 00:34:29,359
that that line of questioning but if we

859
00:34:27,530 --> 00:34:31,099
don't think this the controls relying on

860
00:34:29,359 --> 00:34:32,810
that synchronization it's a better

861
00:34:31,099 --> 00:34:34,220
system for it right the less controls

862
00:34:32,810 --> 00:34:37,279
that we need to have and already have a

863
00:34:34,219 --> 00:34:39,560
secure system the better off we are so I

864
00:34:37,280 --> 00:34:41,210
try not to bring in multiple instances

865
00:34:39,560 --> 00:34:46,399
if possible but I have to be aware that

866
00:34:41,210 --> 00:34:51,320
they're there okay playing well with

867
00:34:46,399 --> 00:34:53,330
others so this one this is the one that

868
00:34:51,320 --> 00:34:55,760
I added because this comes from a

869
00:34:53,330 --> 00:34:57,589
project I did a couple years ago and I

870
00:34:55,760 --> 00:35:00,530
was probably the most severe bug I've

871
00:34:57,589 --> 00:35:02,240
ever found and I found it in the threat

872
00:35:00,530 --> 00:35:05,890
model and they didn't believe me and

873
00:35:02,240 --> 00:35:10,520
then I pen tested it and broke it so

874
00:35:05,890 --> 00:35:13,759
yeah so the idea here is that we have a

875
00:35:10,520 --> 00:35:15,410
company that wants to move to the cloud

876
00:35:13,760 --> 00:35:18,349
but they but they don't want to like

877
00:35:15,410 --> 00:35:20,598
move into the real cloud because there's

878
00:35:18,349 --> 00:35:23,330
insecurities in the cloud we're gonna

879
00:35:20,599 --> 00:35:25,480
host our own cloud on-prem and to do

880
00:35:23,330 --> 00:35:27,799
that we're gonna put a whole bunch of

881
00:35:25,480 --> 00:35:29,390
we'll all say these are containers so

882
00:35:27,800 --> 00:35:30,650
the whole bunch of physical machines

883
00:35:29,390 --> 00:35:32,629
that are going to run containers on the

884
00:35:30,650 --> 00:35:35,000
right we're gonna have an AZ that stores

885
00:35:32,630 --> 00:35:37,070
all of our data we're gonna have Sdn for

886
00:35:35,000 --> 00:35:39,500
you know all types of crazy networking

887
00:35:37,070 --> 00:35:40,460
options and then we're gonna buy an

888
00:35:39,500 --> 00:35:42,980
Orchestrator

889
00:35:40,460 --> 00:35:44,810
a product off the market in fact I think

890
00:35:42,980 --> 00:35:47,300
this one was open source

891
00:35:44,810 --> 00:35:49,130
could be wrong but they have some

892
00:35:47,300 --> 00:35:51,800
orchestration software that orchestrates

893
00:35:49,130 --> 00:35:53,360
containers but then it occurred to them

894
00:35:51,800 --> 00:35:57,500
that the orchestration product they

895
00:35:53,360 --> 00:36:01,040
purchased or we're using is garbage at

896
00:35:57,500 --> 00:36:02,600
security and they were told look you

897
00:36:01,040 --> 00:36:04,490
need to have single sign-on integration

898
00:36:02,600 --> 00:36:07,819
does not support it in the Faust product

899
00:36:04,490 --> 00:36:10,669
you have to have you have to prevent

900
00:36:07,820 --> 00:36:13,190
users from creating privileged

901
00:36:10,670 --> 00:36:15,500
containers which the product does not

902
00:36:13,190 --> 00:36:18,140
support you have to prevent you have to

903
00:36:15,500 --> 00:36:21,320
provide at level isolation which the

904
00:36:18,140 --> 00:36:23,290
product does not support so a sane

905
00:36:21,320 --> 00:36:26,780
person would say we need a new product

906
00:36:23,290 --> 00:36:30,529
but this team's like no I got this I've

907
00:36:26,780 --> 00:36:34,310
got a security guy who knows go and he's

908
00:36:30,530 --> 00:36:35,810
gonna write a json validator so that's

909
00:36:34,310 --> 00:36:37,580
what happened so on the left is a bunch

910
00:36:35,810 --> 00:36:39,500
of developers who write their code right

911
00:36:37,580 --> 00:36:42,259
they create their docker files and all

912
00:36:39,500 --> 00:36:44,060
their definitions send it to the api

913
00:36:42,260 --> 00:36:47,330
endpoint which is this validator thing

914
00:36:44,060 --> 00:36:49,310
the validator a authenticates you to the

915
00:36:47,330 --> 00:36:51,049
SSO right make sure that you've signed

916
00:36:49,310 --> 00:36:54,020
in through an azure active directory or

917
00:36:51,050 --> 00:36:55,880
whatever validates the JSON file is

918
00:36:54,020 --> 00:36:58,280
correct format and doesn't contain

919
00:36:55,880 --> 00:36:59,810
dangerous stuff like privileged flags or

920
00:36:58,280 --> 00:37:03,170
mounting network shares or things like

921
00:36:59,810 --> 00:37:06,110
that and it implements the Sdn rules for

922
00:37:03,170 --> 00:37:08,960
isolation implements a shared or an

923
00:37:06,110 --> 00:37:11,090
unshared disk off the NAS so you can get

924
00:37:08,960 --> 00:37:12,650
persistent storage in your container but

925
00:37:11,090 --> 00:37:15,350
only for your app right not for other

926
00:37:12,650 --> 00:37:18,530
apps which is good and it provisions you

927
00:37:15,350 --> 00:37:20,150
want a particular host and then it sends

928
00:37:18,530 --> 00:37:21,410
that to the orchestrator and then

929
00:37:20,150 --> 00:37:24,770
basically all the orchestrator does is

930
00:37:21,410 --> 00:37:27,859
just like execute the JSON file into you

931
00:37:24,770 --> 00:37:29,690
know docker commands and then you're

932
00:37:27,860 --> 00:37:31,520
done now there are all types of other

933
00:37:29,690 --> 00:37:32,990
issues like their logs were just like

934
00:37:31,520 --> 00:37:35,570
hanging out in the wind and all these

935
00:37:32,990 --> 00:37:38,270
other issues but like there there was a

936
00:37:35,570 --> 00:37:40,730
bigger issue with the whole platform and

937
00:37:38,270 --> 00:37:42,770
it all kind of comes down to they picked

938
00:37:40,730 --> 00:37:45,350
a product that had very few security

939
00:37:42,770 --> 00:37:48,080
controls and decided to implement it at

940
00:37:45,350 --> 00:37:52,520
this validator right so they implemented

941
00:37:48,080 --> 00:37:54,410
like I said SSO security options in the

942
00:37:52,520 --> 00:37:55,880
validator and then what they get is they

943
00:37:54,410 --> 00:37:56,620
get all these cool security controls on

944
00:37:55,880 --> 00:37:59,530
the right like

945
00:37:56,620 --> 00:38:01,930
the hosts are like I don't think the

946
00:37:59,530 --> 00:38:04,510
hosts had discs in them I'm pretty sure

947
00:38:01,930 --> 00:38:06,370
they were just pixie booted to ram like

948
00:38:04,510 --> 00:38:08,670
they were doing some really cool stuff

949
00:38:06,370 --> 00:38:11,580
over here on the right to make things as

950
00:38:08,670 --> 00:38:15,670
lean and secure and great as possible

951
00:38:11,580 --> 00:38:17,980
but this whole platform is like falling

952
00:38:15,670 --> 00:38:19,870
on or requiring this json validator

953
00:38:17,980 --> 00:38:26,500
which is like 200 lines of go to be

954
00:38:19,870 --> 00:38:29,529
right yeah so what what is my goal as

955
00:38:26,500 --> 00:38:34,360
the attacker right what can I do if i

956
00:38:29,530 --> 00:38:36,370
bypass these controls right well I could

957
00:38:34,360 --> 00:38:39,130
go to the NAS Drive and collect all the

958
00:38:36,370 --> 00:38:40,870
data right so if I have access to any

959
00:38:39,130 --> 00:38:42,400
like suppose I could write any container

960
00:38:40,870 --> 00:38:44,230
I want I can create whatever JSON

961
00:38:42,400 --> 00:38:46,990
there's no validator I just worst-case

962
00:38:44,230 --> 00:38:49,810
scenario I could mount disks from other

963
00:38:46,990 --> 00:38:51,160
projects into my project so remember

964
00:38:49,810 --> 00:38:52,930
this is all authenticated so this would

965
00:38:51,160 --> 00:38:53,770
be like an employee at this company this

966
00:38:52,930 --> 00:38:55,120
have big company's got a lot of

967
00:38:53,770 --> 00:38:57,070
employees a lot of developers and a lot

968
00:38:55,120 --> 00:39:00,670
of apps some of them more critical than

969
00:38:57,070 --> 00:39:03,760
others so this is not good I could

970
00:39:00,670 --> 00:39:06,040
change the stn right I could send

971
00:39:03,760 --> 00:39:08,710
commands to the SDM to give myself more

972
00:39:06,040 --> 00:39:11,320
access to the network different like

973
00:39:08,710 --> 00:39:13,450
access to individual existing networks

974
00:39:11,320 --> 00:39:14,890
or I could just you know turn off

975
00:39:13,450 --> 00:39:17,770
networks at will I could just be like

976
00:39:14,890 --> 00:39:19,390
hey I want to be the default route for

977
00:39:17,770 --> 00:39:21,610
that network that's an option you can

978
00:39:19,390 --> 00:39:22,900
send in your JSON file and like I can

979
00:39:21,610 --> 00:39:24,550
just drop packets I can do two now

980
00:39:22,900 --> 00:39:28,420
service I can man in the middle stuff

981
00:39:24,550 --> 00:39:30,070
would be it's pretty good good stuff or

982
00:39:28,420 --> 00:39:31,330
I can go after the the bare metal hosts

983
00:39:30,070 --> 00:39:32,890
themselves like I said earlier they're

984
00:39:31,330 --> 00:39:36,069
they're really lean but they still exist

985
00:39:32,890 --> 00:39:40,839
and I don't know how many of you guys

986
00:39:36,070 --> 00:39:42,190
play with docker but during this project

987
00:39:40,840 --> 00:39:45,460
I got pretty good at doing container

988
00:39:42,190 --> 00:39:47,860
breakouts so like giving myself full

989
00:39:45,460 --> 00:39:50,230
root privileges on physical machines

990
00:39:47,860 --> 00:39:53,110
just by spawning a docker containers

991
00:39:50,230 --> 00:39:57,370
pretty easy so I got pretty well-versed

992
00:39:53,110 --> 00:40:00,310
it up so that's a possibility and just

993
00:39:57,370 --> 00:40:04,630
as a reminder write offs or cots product

994
00:40:00,310 --> 00:40:06,100
and a homebrew API and this came up in

995
00:40:04,630 --> 00:40:09,070
the threat model is we were like look

996
00:40:06,100 --> 00:40:10,480
guys you should probably get something

997
00:40:09,070 --> 00:40:12,190
more serious

998
00:40:10,480 --> 00:40:14,380
the front end of this thing then

999
00:40:12,190 --> 00:40:17,619
whatever the hell you know the dude in

1000
00:40:14,380 --> 00:40:22,050
the cubicle wrote for you in two days

1001
00:40:17,619 --> 00:40:24,940
maybe some more work needs to go into it

1002
00:40:22,050 --> 00:40:27,640
and so the question that I had for them

1003
00:40:24,940 --> 00:40:31,230
and I didn't get a good answer for is

1004
00:40:27,640 --> 00:40:34,270
how do we ensure that our validator

1005
00:40:31,230 --> 00:40:37,000
matches the spec for the COTS product

1006
00:40:34,270 --> 00:40:40,900
right cons products have a lot of

1007
00:40:37,000 --> 00:40:44,710
features especially docker products have

1008
00:40:40,900 --> 00:40:47,710
a lot of features so who's making sure

1009
00:40:44,710 --> 00:40:50,829
that our validator actually knows all of

1010
00:40:47,710 --> 00:40:54,550
those features and prevents any of the

1011
00:40:50,829 --> 00:40:56,890
dangerous ones from happening and the

1012
00:40:54,550 --> 00:40:59,200
important part was when I pulled up the

1013
00:40:56,890 --> 00:41:02,049
documentation and said do you guys

1014
00:40:59,200 --> 00:41:05,649
prevent this flag in particular I just

1015
00:41:02,050 --> 00:41:08,470
picked one I think it was I think it was

1016
00:41:05,650 --> 00:41:10,900
the one for mounting a disk right and I

1017
00:41:08,470 --> 00:41:12,390
could you can specify a network disks so

1018
00:41:10,900 --> 00:41:16,300
I was like do you prevent them from

1019
00:41:12,390 --> 00:41:20,799
changing this value and they went I've

1020
00:41:16,300 --> 00:41:23,410
never seen that before like oh boy and

1021
00:41:20,800 --> 00:41:25,210
it didn't occur to them that the

1022
00:41:23,410 --> 00:41:28,799
attacker could read the documentation

1023
00:41:25,210 --> 00:41:31,990
for the open source project you know

1024
00:41:28,800 --> 00:41:33,670
like it just it I mean the guy who wrote

1025
00:41:31,990 --> 00:41:36,848
the code didn't read the documentation

1026
00:41:33,670 --> 00:41:38,770
clearly all he was doing was looking at

1027
00:41:36,849 --> 00:41:41,380
the JSON files that had been developed

1028
00:41:38,770 --> 00:41:42,880
in the past and then just kind of being

1029
00:41:41,380 --> 00:41:44,260
like and we don't want that and we know

1030
00:41:42,880 --> 00:41:45,849
at that so there was just like a

1031
00:41:44,260 --> 00:41:48,910
blacklist for like these are bad things

1032
00:41:45,849 --> 00:41:50,579
like privileged equals true is bad I'm

1033
00:41:48,910 --> 00:41:56,710
like what if privileged equals one

1034
00:41:50,579 --> 00:41:58,480
they're like whoa that took him by

1035
00:41:56,710 --> 00:42:00,220
surprise anyway so at the end of the

1036
00:41:58,480 --> 00:42:01,540
threat model they're like okay okay we

1037
00:42:00,220 --> 00:42:06,669
get it we get it we're gonna do better

1038
00:42:01,540 --> 00:42:09,130
and so now it's 400 lines of go code I'm

1039
00:42:06,670 --> 00:42:12,430
not done so I said earlier I did I did a

1040
00:42:09,130 --> 00:42:14,890
pen test of this because I was upset

1041
00:42:12,430 --> 00:42:17,230
that they didn't do what I said and

1042
00:42:14,890 --> 00:42:18,700
instead did exactly what I told them not

1043
00:42:17,230 --> 00:42:21,640
to do which is just make the black list

1044
00:42:18,700 --> 00:42:23,529
bigger so I went and downloaded the

1045
00:42:21,640 --> 00:42:24,279
documentation and started grepping

1046
00:42:23,530 --> 00:42:29,580
through it

1047
00:42:24,280 --> 00:42:33,430
for things like Mount Port volume

1048
00:42:29,580 --> 00:42:34,840
privileged whatever and what I found out

1049
00:42:33,430 --> 00:42:37,210
is that this particular Orchestrator

1050
00:42:34,840 --> 00:42:39,250
supports an entirely different set of

1051
00:42:37,210 --> 00:42:41,290
commands for doing all the things that

1052
00:42:39,250 --> 00:42:43,930
the regular commands can do right so

1053
00:42:41,290 --> 00:42:45,610
there's like standard JSON the docker

1054
00:42:43,930 --> 00:42:47,799
uses to describe containers if you use

1055
00:42:45,610 --> 00:42:50,260
like docker inspect and that's what he

1056
00:42:47,800 --> 00:42:52,330
thought this Orchestrator takes but the

1057
00:42:50,260 --> 00:42:55,690
orchestrator has like you know we have

1058
00:42:52,330 --> 00:42:57,670
more value to add to this API so they

1059
00:42:55,690 --> 00:43:00,850
added another feature where you could

1060
00:42:57,670 --> 00:43:03,790
just send it docker commands to run and

1061
00:43:00,850 --> 00:43:09,850
it would just you know system execute

1062
00:43:03,790 --> 00:43:11,200
them on on the metal and I figured out

1063
00:43:09,850 --> 00:43:13,450
that they were doing it right in that

1064
00:43:11,200 --> 00:43:16,540
like I couldn't use that itself to like

1065
00:43:13,450 --> 00:43:18,609
just get route which would be funny but

1066
00:43:16,540 --> 00:43:20,050
uh but yeah I could just you know tell

1067
00:43:18,610 --> 00:43:22,180
it to create a privilege container and

1068
00:43:20,050 --> 00:43:23,770
then it would do that and then and then

1069
00:43:22,180 --> 00:43:25,480
like reverse shell it back to me and I

1070
00:43:23,770 --> 00:43:27,630
got root on all the boxes and I like

1071
00:43:25,480 --> 00:43:31,630
could read from disks and change the SDN

1072
00:43:27,630 --> 00:43:35,140
then they got mad and my report told

1073
00:43:31,630 --> 00:43:38,980
them to what whitelist don't blacklist

1074
00:43:35,140 --> 00:43:42,640
whitelist and they went that's gonna be

1075
00:43:38,980 --> 00:43:45,520
a no because that's hard so six months

1076
00:43:42,640 --> 00:43:49,120
later they called us back to do a retest

1077
00:43:45,520 --> 00:43:51,150
and I copy and pasted my sample code out

1078
00:43:49,120 --> 00:43:54,069
of my report and it did not work and

1079
00:43:51,150 --> 00:43:55,300
then I changed one value to a different

1080
00:43:54,070 --> 00:43:58,330
value that I knew from the documentation

1081
00:43:55,300 --> 00:44:00,370
and it did work and I just called them

1082
00:43:58,330 --> 00:44:02,770
and I'm like look man I broke your

1083
00:44:00,370 --> 00:44:06,430
system in 15 minutes this time why don't

1084
00:44:02,770 --> 00:44:09,220
you just like stop the project stop like

1085
00:44:06,430 --> 00:44:12,759
you know paying me to do this stop that

1086
00:44:09,220 --> 00:44:14,339
go fix it and then call me like don't

1087
00:44:12,760 --> 00:44:20,770
don't do all these these half-assed

1088
00:44:14,340 --> 00:44:22,720
fixes yeah so lessons right cots is hard

1089
00:44:20,770 --> 00:44:24,550
and they need your help

1090
00:44:22,720 --> 00:44:26,529
right nothing that you purchase or

1091
00:44:24,550 --> 00:44:28,570
download off github is perfect and

1092
00:44:26,530 --> 00:44:30,760
nothing that you download or pay for

1093
00:44:28,570 --> 00:44:32,620
will work in your environment securely

1094
00:44:30,760 --> 00:44:33,880
out of the box it doesn't exist you

1095
00:44:32,620 --> 00:44:36,520
actually have to do the work you have to

1096
00:44:33,880 --> 00:44:37,900
do the due diligence anybody who says

1097
00:44:36,520 --> 00:44:41,200
it's got drop-in security

1098
00:44:37,900 --> 00:44:43,090
just selling you something right and and

1099
00:44:41,200 --> 00:44:46,419
that's cool but like you know ask the

1100
00:44:43,090 --> 00:44:47,620
questions and get it done right you

1101
00:44:46,420 --> 00:44:49,420
probably don't know all the features

1102
00:44:47,620 --> 00:44:51,940
your product has or might have in a

1103
00:44:49,420 --> 00:44:53,140
future update the particular values that

1104
00:44:51,940 --> 00:44:56,080
I was using at the end of this project

1105
00:44:53,140 --> 00:44:57,400
we're not in the documentation I just

1106
00:44:56,080 --> 00:44:57,970
went and read the code because it was on

1107
00:44:57,400 --> 00:45:00,610
github

1108
00:44:57,970 --> 00:45:03,069
and I can see all of the options that it

1109
00:45:00,610 --> 00:45:06,070
supports and I'm like look guys stop

1110
00:45:03,070 --> 00:45:07,810
doing that and just tell your users what

1111
00:45:06,070 --> 00:45:10,810
they're allowed to do and then only

1112
00:45:07,810 --> 00:45:12,970
support those options and that goes to

1113
00:45:10,810 --> 00:45:14,950
my last point here is employing kind of

1114
00:45:12,970 --> 00:45:16,569
known good templates is a really good

1115
00:45:14,950 --> 00:45:20,319
way to constrain what you have to worry

1116
00:45:16,570 --> 00:45:21,850
about in security making it easy to do

1117
00:45:20,320 --> 00:45:23,590
things right but making it really hard

1118
00:45:21,850 --> 00:45:25,029
to do things wrong put in an exception

1119
00:45:23,590 --> 00:45:25,780
process you know this is one of the

1120
00:45:25,030 --> 00:45:26,920
reasons why they wouldn't do

1121
00:45:25,780 --> 00:45:29,440
whitelisting is they're like well we

1122
00:45:26,920 --> 00:45:30,730
have we have some power users who really

1123
00:45:29,440 --> 00:45:32,920
need these features and I'm like I'm

1124
00:45:30,730 --> 00:45:34,690
sure you do that's cool they can pick up

1125
00:45:32,920 --> 00:45:36,340
the phone and call you they can insert a

1126
00:45:34,690 --> 00:45:38,710
ticket into Xero and get an exception

1127
00:45:36,340 --> 00:45:39,790
made that's not that hard how many of

1128
00:45:38,710 --> 00:45:41,830
these people do you have there like

1129
00:45:39,790 --> 00:45:43,990
there's one team I'm like you have like

1130
00:45:41,830 --> 00:45:46,930
800 developer teams what are you doing

1131
00:45:43,990 --> 00:45:48,459
stop you know set the set that baseline

1132
00:45:46,930 --> 00:45:50,259
tell them what they're allowed to do and

1133
00:45:48,460 --> 00:45:52,600
if they really need to do something

1134
00:45:50,260 --> 00:45:54,490
different you can help them be their

1135
00:45:52,600 --> 00:45:56,410
friend and I feel like this team in

1136
00:45:54,490 --> 00:45:58,600
particular felt like they were the bad

1137
00:45:56,410 --> 00:46:00,460
guy in a lot of situations like they

1138
00:45:58,600 --> 00:46:03,430
were trying really hard not to come

1139
00:46:00,460 --> 00:46:05,560
across to somebody who says no and and

1140
00:46:03,430 --> 00:46:08,470
my message for them which I 100% sure

1141
00:46:05,560 --> 00:46:10,330
they did not listen to is it's okay to

1142
00:46:08,470 --> 00:46:13,439
say no as long as you help them do what

1143
00:46:10,330 --> 00:46:16,870
they actually need to do at the end okay

1144
00:46:13,440 --> 00:46:18,700
last one this one's quick and I'll do

1145
00:46:16,870 --> 00:46:20,740
this with a raise of hands as well a

1146
00:46:18,700 --> 00:46:22,359
user well actually before I ask the

1147
00:46:20,740 --> 00:46:23,859
question when I define what an asset is

1148
00:46:22,360 --> 00:46:26,800
because I'm sure not all of you are

1149
00:46:23,860 --> 00:46:28,750
seasoned threat modelers so an asset is

1150
00:46:26,800 --> 00:46:30,760
like anything that an attacker would be

1151
00:46:28,750 --> 00:46:32,980
interested in in your system right and

1152
00:46:30,760 --> 00:46:34,990
therefore needs to be maintained I call

1153
00:46:32,980 --> 00:46:36,790
it the pot of gold it's whatever

1154
00:46:34,990 --> 00:46:39,640
an attacker wants right so this could be

1155
00:46:36,790 --> 00:46:41,080
the subscription access right so if

1156
00:46:39,640 --> 00:46:42,160
you're like home DSL or something I

1157
00:46:41,080 --> 00:46:44,560
don't know people probably don't have

1158
00:46:42,160 --> 00:46:46,240
DSL anymore but you know whatever you

1159
00:46:44,560 --> 00:46:48,549
have at home home cable internet that's

1160
00:46:46,240 --> 00:46:50,939
an asset your download upload speed

1161
00:46:48,550 --> 00:46:53,190
could be considered an asset in that

1162
00:46:50,940 --> 00:46:55,260
I want to take your upload speed and

1163
00:46:53,190 --> 00:46:59,280
change it to be slower so that you're

1164
00:46:55,260 --> 00:47:01,200
bad at Cod monthly data allowance could

1165
00:46:59,280 --> 00:47:03,720
be an asset right if I use your internet

1166
00:47:01,200 --> 00:47:08,160
to download my torrents that would be

1167
00:47:03,720 --> 00:47:10,500
convenient and discovering where all

1168
00:47:08,160 --> 00:47:11,490
your assets are it's gonna help you do

1169
00:47:10,500 --> 00:47:13,109
your model it's gonna figure out what

1170
00:47:11,490 --> 00:47:14,279
your attacker goals are because if you

1171
00:47:13,109 --> 00:47:17,578
know your assets are you know what you

1172
00:47:14,280 --> 00:47:23,220
need to protect so going back to the

1173
00:47:17,579 --> 00:47:27,359
question oops is a username and asset

1174
00:47:23,220 --> 00:47:30,000
raise of hands if you say yes raise your

1175
00:47:27,359 --> 00:47:32,390
hand if you say no raise your hand if

1176
00:47:30,000 --> 00:47:32,390
you're not paying attention

1177
00:47:32,960 --> 00:47:39,359
okay yeah yeah so everyone seems to

1178
00:47:37,410 --> 00:47:42,270
think user user names are assets um this

1179
00:47:39,359 --> 00:47:44,700
is an example that's kind of interesting

1180
00:47:42,270 --> 00:47:47,819
cuz like you know how can you get to the

1181
00:47:44,700 --> 00:47:49,169
top of the leaderboard anybody how does

1182
00:47:47,819 --> 00:47:55,529
Bob get to the top of the leaderboard if

1183
00:47:49,170 --> 00:47:57,029
he's no good at the game what if he just

1184
00:47:55,529 --> 00:47:59,549
like logs in as all the other users a

1185
00:47:57,029 --> 00:48:04,829
bunch of times wrong and locks them out

1186
00:47:59,549 --> 00:48:06,450
of their account right so now they can't

1187
00:48:04,829 --> 00:48:08,059
play the game anymore because they have

1188
00:48:06,450 --> 00:48:10,319
to like go fiddle with their Gmail and

1189
00:48:08,059 --> 00:48:11,369
Bob's like gaming away and getting all

1190
00:48:10,319 --> 00:48:15,210
the coins and getting the tokens

1191
00:48:11,369 --> 00:48:17,490
whatever right and there's more examples

1192
00:48:15,210 --> 00:48:19,950
than this I was actually just reading

1193
00:48:17,490 --> 00:48:24,629
about an old attack that I don't

1194
00:48:19,950 --> 00:48:26,819
remember but I think it was in 2006 2004

1195
00:48:24,630 --> 00:48:30,630
it was a while ago but it was like one

1196
00:48:26,819 --> 00:48:32,220
of the original versions of eBay would

1197
00:48:30,630 --> 00:48:35,490
tell you the names of all the people

1198
00:48:32,220 --> 00:48:36,990
bidding against you and so so someone

1199
00:48:35,490 --> 00:48:40,189
figured out they could just go and lock

1200
00:48:36,990 --> 00:48:42,538
out those users from their accounts

1201
00:48:40,190 --> 00:48:47,160
right at the end like with a minute to

1202
00:48:42,539 --> 00:48:48,720
spare and so that they would win and so

1203
00:48:47,160 --> 00:48:51,029
that's why if you go on eBay now it

1204
00:48:48,720 --> 00:48:53,098
shows you like first letter then stars

1205
00:48:51,029 --> 00:48:56,400
then last letter ethic Amazon does some

1206
00:48:53,099 --> 00:48:59,490
of the similar stuff yeah it's good

1207
00:48:56,400 --> 00:49:01,680
stuff so the answers is definitely maybe

1208
00:48:59,490 --> 00:49:03,959
right like usernames can be assets it

1209
00:49:01,680 --> 00:49:05,129
depends on the system certainly not in

1210
00:49:03,960 --> 00:49:06,780
all system

1211
00:49:05,130 --> 00:49:08,520
though a lot of places trying to use

1212
00:49:06,780 --> 00:49:10,619
like email as a username or a lot of

1213
00:49:08,520 --> 00:49:12,509
places do use that and that's certainly

1214
00:49:10,619 --> 00:49:14,790
an asset because that's a data leak

1215
00:49:12,510 --> 00:49:16,470
waiting to happen

1216
00:49:14,790 --> 00:49:18,480
but yet not not all users are equal

1217
00:49:16,470 --> 00:49:20,220
right so your your username that you see

1218
00:49:18,480 --> 00:49:21,809
in your user interface is probably not

1219
00:49:20,220 --> 00:49:26,220
your back-end token used for your

1220
00:49:21,809 --> 00:49:27,530
micro-services back-end api's so yeah

1221
00:49:26,220 --> 00:49:31,799
those aren't the same thing

1222
00:49:27,530 --> 00:49:34,559
but yeah I hope I hope you guys learn

1223
00:49:31,800 --> 00:49:37,770
something today about threat modeling

1224
00:49:34,559 --> 00:49:39,809
and design flaws and that these aren't

1225
00:49:37,770 --> 00:49:41,190
you know what we talked about today are

1226
00:49:39,809 --> 00:49:43,200
not via reticle things these all come

1227
00:49:41,190 --> 00:49:44,550
from actual work that me and my

1228
00:49:43,200 --> 00:49:49,169
co-workers have done over the past few

1229
00:49:44,550 --> 00:49:51,240
years you know doing a feature review is

1230
00:49:49,170 --> 00:49:54,059
where you can start but as you dig into

1231
00:49:51,240 --> 00:49:55,529
these think about them more draw them in

1232
00:49:54,059 --> 00:49:57,660
different ways like drawing both the

1233
00:49:55,530 --> 00:49:59,550
component and a flow diagram separately

1234
00:49:57,660 --> 00:50:02,520
and thinking about particularly the

1235
00:49:59,550 --> 00:50:06,809
security critical flows like one time

1236
00:50:02,520 --> 00:50:08,369
step ups or money movement things like

1237
00:50:06,809 --> 00:50:10,049
that you know pick out what the risky

1238
00:50:08,369 --> 00:50:12,200
actions are and spend more time there

1239
00:50:10,049 --> 00:50:18,960
that'll serve you quite a bit of

1240
00:50:12,200 --> 00:50:23,910
benefits okay otherwise I don't know why

1241
00:50:18,960 --> 00:50:25,049
that's there questions I I can take

1242
00:50:23,910 --> 00:50:26,490
questions I don't know how long I'm

1243
00:50:25,049 --> 00:50:27,780
allowed to say it up here I'll be

1244
00:50:26,490 --> 00:50:29,399
hanging out I think there's like snacks

1245
00:50:27,780 --> 00:50:30,480
in the hallway for the next 15-20

1246
00:50:29,400 --> 00:50:36,700
minutes or something like that

1247
00:50:30,480 --> 00:50:39,710
Oh excellent

1248
00:50:36,700 --> 00:50:45,680
[Music]

1249
00:50:39,710 --> 00:50:45,680
thank you excellent

1250
00:50:51,970 --> 00:50:54,029
you

