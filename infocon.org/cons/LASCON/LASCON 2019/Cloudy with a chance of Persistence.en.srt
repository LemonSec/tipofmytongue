1
00:00:09,300 --> 00:00:32,280
[Music]

2
00:00:35,390 --> 00:00:41,010
all right so hi for those of you don't

3
00:00:38,850 --> 00:00:44,120
know me I'm Peter and I'm gonna talk to

4
00:00:41,010 --> 00:00:47,640
you all about AWS post compromise

5
00:00:44,120 --> 00:00:50,040
persistence so the way this is gonna go

6
00:00:47,640 --> 00:00:52,680
is mostly I'm gonna tell bad jokes here

7
00:00:50,040 --> 00:00:58,470
in there hopefully you will laugh if you

8
00:00:52,680 --> 00:01:00,540
don't force laugh hmm just like that so

9
00:00:58,470 --> 00:01:02,519
first just to give me an idea how many

10
00:01:00,540 --> 00:01:04,470
of you all have used AWS just raise your

11
00:01:02,520 --> 00:01:06,330
hand all right

12
00:01:04,470 --> 00:01:08,729
awesome so I won't go too deep into the

13
00:01:06,330 --> 00:01:10,560
details and instead I can tell you more

14
00:01:08,729 --> 00:01:13,800
about myself because I enjoy talking

15
00:01:10,560 --> 00:01:16,680
about me so currently I am a senior

16
00:01:13,800 --> 00:01:18,240
security manager at Capgemini most

17
00:01:16,680 --> 00:01:20,280
people haven't heard of Capgemini I know

18
00:01:18,240 --> 00:01:21,720
I hadn't heard of them before they

19
00:01:20,280 --> 00:01:25,440
acquired the company I used to be part

20
00:01:21,720 --> 00:01:28,380
of but they are a major IT consulting

21
00:01:25,440 --> 00:01:29,670
firm based out of France in my free time

22
00:01:28,380 --> 00:01:31,289
when I'm not doing you know

23
00:01:29,670 --> 00:01:33,479
cybersecurity you're looking around in

24
00:01:31,290 --> 00:01:36,390
the cloud I enjoy cocktails and I really

25
00:01:33,479 --> 00:01:37,920
like funky wines like one wine I

26
00:01:36,390 --> 00:01:40,410
particular you like is called mangia

27
00:01:37,920 --> 00:01:42,060
Bell and it's hard to tell if it's

28
00:01:40,410 --> 00:01:43,740
either bad because it tastes like

29
00:01:42,060 --> 00:01:46,429
band-aids and vinegar or is it supposed

30
00:01:43,740 --> 00:01:49,640
to taste like band-aids and vinegar

31
00:01:46,429 --> 00:01:52,759
thank you that was one of the jokes

32
00:01:49,640 --> 00:01:52,759
excuse me

33
00:01:53,280 --> 00:02:00,090
it might be even me bottom shelf at

34
00:01:55,380 --> 00:02:02,160
7-eleven all right I also help run

35
00:02:00,090 --> 00:02:04,560
besides Houston that took place this

36
00:02:02,160 --> 00:02:05,069
past September on the last day of

37
00:02:04,560 --> 00:02:07,259
derbycon

38
00:02:05,069 --> 00:02:09,119
as you all know or may not know but I

39
00:02:07,259 --> 00:02:10,410
hope to see you all there next year you

40
00:02:09,119 --> 00:02:13,380
won't have to listen to me speak there I

41
00:02:10,410 --> 00:02:15,630
only work a month in the background I am

42
00:02:13,380 --> 00:02:17,880
a native Texan people do like hearing

43
00:02:15,630 --> 00:02:20,430
that for some reason I had no idea why

44
00:02:17,880 --> 00:02:22,400
but you will catch me in cowboy boots

45
00:02:20,430 --> 00:02:24,540
and hats and belt buckles time to time

46
00:02:22,400 --> 00:02:27,209
I've been known to speak at conferences

47
00:02:24,540 --> 00:02:28,829
time to time I took a couple years off

48
00:02:27,209 --> 00:02:30,870
but I'm getting back into the swing of

49
00:02:28,830 --> 00:02:33,420
things so I apologize in advance if I'm

50
00:02:30,870 --> 00:02:35,459
a little rusty and I really like the

51
00:02:33,420 --> 00:02:36,958
cloud you know not just because of the

52
00:02:35,459 --> 00:02:38,730
things they pitch to developers because

53
00:02:36,959 --> 00:02:40,430
of like you know things are scalable an

54
00:02:38,730 --> 00:02:43,500
auto scalable and infrastructure as code

55
00:02:40,430 --> 00:02:44,360
it's because I believe it introduces a

56
00:02:43,500 --> 00:02:46,100
very interesting

57
00:02:44,360 --> 00:02:48,110
attack vector that most people don't

58
00:02:46,100 --> 00:02:50,180
think about everyone thinks about

59
00:02:48,110 --> 00:02:52,160
securing their apps but not too many

60
00:02:50,180 --> 00:02:54,590
people think about securing the platform

61
00:02:52,160 --> 00:02:55,790
in which they host their apps and if you

62
00:02:54,590 --> 00:02:57,950
would like to follow me on Twitter

63
00:02:55,790 --> 00:02:59,480
that's me down there I don't post very

64
00:02:57,950 --> 00:03:03,890
often when I do I get into arguments

65
00:02:59,480 --> 00:03:05,359
with people all the time so this is just

66
00:03:03,890 --> 00:03:07,070
gonna be a brief rundown of what we're

67
00:03:05,360 --> 00:03:08,780
going to go over I won't

68
00:03:07,070 --> 00:03:10,609
dive too deep into giving an

69
00:03:08,780 --> 00:03:11,900
introduction to AWS since a lot of you

70
00:03:10,610 --> 00:03:14,540
raised your hands that you're familiar

71
00:03:11,900 --> 00:03:16,610
with it already but we're gonna cover

72
00:03:14,540 --> 00:03:18,890
some initial entry vectors for proud

73
00:03:16,610 --> 00:03:21,459
people get into your platform how people

74
00:03:18,890 --> 00:03:23,660
hide or rather how attackers high

75
00:03:21,459 --> 00:03:26,480
persistence techniques and then just a

76
00:03:23,660 --> 00:03:29,510
couple tips to help you harden your AWS

77
00:03:26,480 --> 00:03:31,299
installations sound good you're gonna

78
00:03:29,510 --> 00:03:33,950
have to work with me here sound good

79
00:03:31,300 --> 00:03:36,290
thank you I feed off your energy if you

80
00:03:33,950 --> 00:03:38,530
have none I have none and this is sad

81
00:03:36,290 --> 00:03:38,530
for everybody

82
00:03:38,650 --> 00:03:46,040
so why AWS honestly everyone is moving

83
00:03:43,520 --> 00:03:49,190
to the cloud whether it's some sort of

84
00:03:46,040 --> 00:03:51,620
on-premise solution or you know hybrid

85
00:03:49,190 --> 00:03:53,540
solution or completely based on side AWS

86
00:03:51,620 --> 00:03:57,019
Azure Google cloud digital ocean

87
00:03:53,540 --> 00:03:58,310
what-have-you and some big customers

88
00:03:57,019 --> 00:04:00,290
that I've worked with like you know

89
00:03:58,310 --> 00:04:02,420
ranges from Adobe Netflix uses things

90
00:04:00,290 --> 00:04:04,549
for scaling Yelp is hosted completely

91
00:04:02,420 --> 00:04:05,899
within ws I was surprised to find

92
00:04:04,550 --> 00:04:07,760
Kellogg in there because I didn't think

93
00:04:05,900 --> 00:04:09,860
they did too much besides to make cereal

94
00:04:07,760 --> 00:04:12,620
and of course Amazon eats their own dog

95
00:04:09,860 --> 00:04:14,570
food and more than likely your own

96
00:04:12,620 --> 00:04:16,130
company is hosting things in AWS or

97
00:04:14,570 --> 00:04:19,519
planning on moving into some sort of

98
00:04:16,130 --> 00:04:22,310
cloud solution one thing I find very

99
00:04:19,519 --> 00:04:23,870
interesting about AWS and I meant to add

100
00:04:22,310 --> 00:04:26,810
a screenshot of this is the memo that

101
00:04:23,870 --> 00:04:29,419
Jeff Bezos sent out saying that teams

102
00:04:26,810 --> 00:04:30,950
would no longer be able to say interact

103
00:04:29,419 --> 00:04:32,270
without people's back end so I can no

104
00:04:30,950 --> 00:04:34,849
longer connect to your sequel like

105
00:04:32,270 --> 00:04:36,500
database I can no longer connect

106
00:04:34,850 --> 00:04:39,590
directly to your my sequel database

107
00:04:36,500 --> 00:04:43,340
everything must be API driven everything

108
00:04:39,590 --> 00:04:47,299
must have a public facing API so that's

109
00:04:43,340 --> 00:04:48,799
one reason why I believe at least for a

110
00:04:47,300 --> 00:04:53,690
period of time they're in the lead of

111
00:04:48,800 --> 00:04:54,860
let's say the cloud migration march or

112
00:04:53,690 --> 00:04:56,630
anything you want to call that sort

113
00:04:54,860 --> 00:04:57,559
because everything at a public facing

114
00:04:56,630 --> 00:04:59,929
API

115
00:04:57,559 --> 00:05:03,109
and that being said due to the size of

116
00:04:59,929 --> 00:05:05,899
AWS they have a large number of services

117
00:05:03,109 --> 00:05:08,209
that they add every single day that

118
00:05:05,899 --> 00:05:10,849
seems like and they have names that make

119
00:05:08,209 --> 00:05:12,139
absolutely no comes no sense I honestly

120
00:05:10,849 --> 00:05:14,628
can't tell what they do most of the time

121
00:05:12,139 --> 00:05:17,419
which other people can't which adds

122
00:05:14,629 --> 00:05:20,659
several interesting threat vectors and

123
00:05:17,419 --> 00:05:23,659
in the times I've interacted with AWS s

124
00:05:20,659 --> 00:05:25,039
security team they don't have bugs like

125
00:05:23,659 --> 00:05:26,539
you know the various bugs you'll find

126
00:05:25,039 --> 00:05:28,308
inside I am they're like no they're

127
00:05:26,539 --> 00:05:30,829
totally intended it's intended for this

128
00:05:28,309 --> 00:05:32,209
user to be able to do this yes this user

129
00:05:30,829 --> 00:05:35,079
with no privileges should be able to

130
00:05:32,209 --> 00:05:37,399
delete ec2 instances yes yes yes and

131
00:05:35,079 --> 00:05:38,869
then most importantly you know they used

132
00:05:37,399 --> 00:05:41,119
to have a saying no one got fired for

133
00:05:38,869 --> 00:05:46,399
going IBM but these days it seems like

134
00:05:41,119 --> 00:05:48,079
no one gets fired for going AWS and just

135
00:05:46,399 --> 00:05:51,349
to give you another idea about the scope

136
00:05:48,079 --> 00:05:53,869
of how big AWS is these days this is

137
00:05:51,349 --> 00:05:56,419
just a couple examples of very large

138
00:05:53,869 --> 00:05:58,669
companies who are completely or in the

139
00:05:56,419 --> 00:06:01,938
progress of going full AWS from using

140
00:05:58,669 --> 00:06:04,128
their data replication to using glaciar

141
00:06:01,939 --> 00:06:09,769
to using ec2 to use and you know lambda

142
00:06:04,129 --> 00:06:12,259
what have you to scale things so well

143
00:06:09,769 --> 00:06:13,939
you can secure your apps one of the most

144
00:06:12,259 --> 00:06:16,549
often ways people get into

145
00:06:13,939 --> 00:06:19,279
infrastructure is two people and you can

146
00:06:16,549 --> 00:06:21,318
get in in very simple ways one of the

147
00:06:19,279 --> 00:06:23,808
most basic ways is just an infected

148
00:06:21,319 --> 00:06:26,569
device whether it's your laptop whether

149
00:06:23,809 --> 00:06:29,629
it's your phone and I often find in my

150
00:06:26,569 --> 00:06:32,359
experience that it starts with bright

151
00:06:29,629 --> 00:06:33,709
browser add-ons I know everyone uses

152
00:06:32,359 --> 00:06:35,688
them everyone has like you know you

153
00:06:33,709 --> 00:06:36,739
block origin running or like you know

154
00:06:35,689 --> 00:06:38,929
perhaps some of the other security

155
00:06:36,739 --> 00:06:41,149
related ones but some of the lesser

156
00:06:38,929 --> 00:06:43,909
known ones are often bought and sold on

157
00:06:41,149 --> 00:06:46,939
the third-party market so let's take

158
00:06:43,909 --> 00:06:49,789
myself for example if I have a add-on

159
00:06:46,939 --> 00:06:51,379
that has maybe 30,000 users 40,000 users

160
00:06:49,789 --> 00:06:53,209
and it doesn't do anything malicious

161
00:06:51,379 --> 00:06:55,999
maybe it just hides certain iframes to

162
00:06:53,209 --> 00:06:57,979
act similar to that of you block a lot

163
00:06:55,999 --> 00:06:59,629
of attackers are very active in these

164
00:06:57,979 --> 00:07:03,318
markets in which they'll go out and buy

165
00:06:59,629 --> 00:07:05,419
these seemingly benign add-ons and then

166
00:07:03,319 --> 00:07:07,639
you know just add malicious updates here

167
00:07:05,419 --> 00:07:09,169
and there to you know try to hijack the

168
00:07:07,639 --> 00:07:10,530
machine to steal those cookies to get

169
00:07:09,169 --> 00:07:13,890
the authentication token some of

170
00:07:10,530 --> 00:07:18,119
request etc another great thing is

171
00:07:13,890 --> 00:07:21,300
fishing as much as we try to train users

172
00:07:18,120 --> 00:07:23,720
to not fall for fishing they still do is

173
00:07:21,300 --> 00:07:25,730
it an issue at y'all's companies yes no

174
00:07:23,720 --> 00:07:28,440
thank you

175
00:07:25,730 --> 00:07:31,200
one of the popular tools I like to use

176
00:07:28,440 --> 00:07:34,320
this Kingfisher Kingfisher has one an

177
00:07:31,200 --> 00:07:35,940
ability to deploy an AWS usually within

178
00:07:34,320 --> 00:07:38,040
an s3 bucket so like you know it has a

179
00:07:35,940 --> 00:07:41,270
proper HTTP certificate and everything

180
00:07:38,040 --> 00:07:45,200
so it seems more legit to users but

181
00:07:41,270 --> 00:07:48,000
admins for AWS groups are often targeted

182
00:07:45,200 --> 00:07:50,640
specifically by these people by

183
00:07:48,000 --> 00:07:53,040
attackers rather and a lot of this stuff

184
00:07:50,640 --> 00:07:54,570
comes from Oh sense that they'll find

185
00:07:53,040 --> 00:07:57,240
you know going on LinkedIn to where I

186
00:07:54,570 --> 00:07:59,730
see that you are lead cloud architect

187
00:07:57,240 --> 00:08:00,990
for a second such company excellent so

188
00:07:59,730 --> 00:08:02,820
now I know you're the person who I

189
00:08:00,990 --> 00:08:05,160
should be focusing on who I should craft

190
00:08:02,820 --> 00:08:07,530
emails on who I should pretend to be the

191
00:08:05,160 --> 00:08:08,730
package that you missed from UPS and you

192
00:08:07,530 --> 00:08:10,710
just have to click here and oh by the

193
00:08:08,730 --> 00:08:14,640
way could you login to AWS for this none

194
00:08:10,710 --> 00:08:16,609
of related reason source code

195
00:08:14,640 --> 00:08:19,229
repositories are also a large problem

196
00:08:16,610 --> 00:08:20,729
I'm sure everyone's been in an instance

197
00:08:19,229 --> 00:08:22,680
to where they committed something that

198
00:08:20,729 --> 00:08:24,659
they didn't mean to commit and often in

199
00:08:22,680 --> 00:08:27,600
a variety of these things you can find

200
00:08:24,660 --> 00:08:30,900
stuff relating to authentication tokens

201
00:08:27,600 --> 00:08:33,300
to usernames and passwords to secure

202
00:08:30,900 --> 00:08:35,789
secrets basically anything that you need

203
00:08:33,299 --> 00:08:38,159
to get your foothold into this AWS

204
00:08:35,789 --> 00:08:40,650
account and a couple of very popular

205
00:08:38,159 --> 00:08:43,830
tools such as you know get raw truffle

206
00:08:40,650 --> 00:08:45,720
hog or github as a live straining API to

207
00:08:43,830 --> 00:08:48,570
where you can see every commit as it

208
00:08:45,720 --> 00:08:51,030
comes in the real time into public space

209
00:08:48,570 --> 00:08:55,020
and you can just set up some regex to

210
00:08:51,030 --> 00:08:56,850
look for various keys one of my most

211
00:08:55,020 --> 00:09:00,720
favorite ways and lazy ways it's just

212
00:08:56,850 --> 00:09:02,310
social engineering you know I I can you

213
00:09:00,720 --> 00:09:03,870
know domain squat get something close to

214
00:09:02,310 --> 00:09:05,339
your company instead of companies

215
00:09:03,870 --> 00:09:09,660
spelled with an A it's company spelled

216
00:09:05,339 --> 00:09:11,520
with you and I submit a customer support

217
00:09:09,660 --> 00:09:13,350
request to Amazon on your behalf

218
00:09:11,520 --> 00:09:16,740
and I say I'm locked out of my account

219
00:09:13,350 --> 00:09:18,270
can you help me more than often they

220
00:09:16,740 --> 00:09:20,080
would say yes we can and they'll go

221
00:09:18,270 --> 00:09:21,880
ahead and unlock that account and you

222
00:09:20,080 --> 00:09:24,280
any access you'll be surprised how often

223
00:09:21,880 --> 00:09:26,560
this happens as secure as you want to be

224
00:09:24,280 --> 00:09:28,420
in as many doors as you lock you always

225
00:09:26,560 --> 00:09:30,160
have to remember the cloud persists in

226
00:09:28,420 --> 00:09:31,599
someone else's house and they can always

227
00:09:30,160 --> 00:09:34,959
open up a window for me to come through

228
00:09:31,600 --> 00:09:37,780
and then on the low end of the totem

229
00:09:34,960 --> 00:09:39,100
pole I'll just steal your laptop I'll

230
00:09:37,780 --> 00:09:40,750
wait for you to be at Starbucks you'll

231
00:09:39,100 --> 00:09:42,970
go to refill your coffee get some sugar

232
00:09:40,750 --> 00:09:44,140
and I'll just take it off the table go

233
00:09:42,970 --> 00:09:45,220
about my business hopefully you're

234
00:09:44,140 --> 00:09:50,530
already logged and when this goes

235
00:09:45,220 --> 00:09:54,940
through and then more on the service and

236
00:09:50,530 --> 00:09:56,530
infrastructure side does does anyone

237
00:09:54,940 --> 00:09:59,920
remember when data dog was compromised

238
00:09:56,530 --> 00:10:02,020
in 2012 2013 a while back they lost a

239
00:09:59,920 --> 00:10:05,620
number of authentication tokens security

240
00:10:02,020 --> 00:10:07,750
secrets etc that tied into people's

241
00:10:05,620 --> 00:10:09,730
various AWS accounts or cloud accounts

242
00:10:07,750 --> 00:10:11,230
with data dog you could do this

243
00:10:09,730 --> 00:10:11,830
monitoring and most of the tokens for

244
00:10:11,230 --> 00:10:14,110
read-only

245
00:10:11,830 --> 00:10:16,090
but not everyone proper practices very

246
00:10:14,110 --> 00:10:18,760
good hygiene with only giving out

247
00:10:16,090 --> 00:10:19,390
read-only iam roles or tokens or

248
00:10:18,760 --> 00:10:22,270
what-have-you

249
00:10:19,390 --> 00:10:24,220
which can lead to once again as secure

250
00:10:22,270 --> 00:10:26,250
as your house is a chain is only as

251
00:10:24,220 --> 00:10:28,990
strong as the weakest link

252
00:10:26,250 --> 00:10:31,540
third-party repositories have become

253
00:10:28,990 --> 00:10:35,020
more and more of an issue with the rise

254
00:10:31,540 --> 00:10:36,699
of front-ends such as nodejs and some of

255
00:10:35,020 --> 00:10:38,680
others that depend on third-party

256
00:10:36,700 --> 00:10:40,960
repositories that are hosted by NPM

257
00:10:38,680 --> 00:10:42,760
where that happens frequently that an

258
00:10:40,960 --> 00:10:46,150
attacker either takes over a project

259
00:10:42,760 --> 00:10:48,520
that's no longer maintained or typo

260
00:10:46,150 --> 00:10:51,430
squats a project that's very popular to

261
00:10:48,520 --> 00:10:53,590
hope that people may miss type it and

262
00:10:51,430 --> 00:10:55,140
download their malicious binary instead

263
00:10:53,590 --> 00:10:58,780
of the one that you're intending a

264
00:10:55,140 --> 00:11:00,880
second big one has been docker most

265
00:10:58,780 --> 00:11:03,310
people do not cache the docker images

266
00:11:00,880 --> 00:11:04,780
from docker hub locally and instead they

267
00:11:03,310 --> 00:11:07,449
pull it down every time they do a build

268
00:11:04,780 --> 00:11:09,610
so this runs into the same thing too

269
00:11:07,450 --> 00:11:11,350
where someone can type a squat take over

270
00:11:09,610 --> 00:11:13,630
a popular docker image or create a

271
00:11:11,350 --> 00:11:15,070
popular docker image pretend that it's

272
00:11:13,630 --> 00:11:17,560
good for a long period of time before

273
00:11:15,070 --> 00:11:22,600
they decide to pivot into a more

274
00:11:17,560 --> 00:11:25,209
malicious fashion the inside AWS there's

275
00:11:22,600 --> 00:11:27,430
a metadata service that's only available

276
00:11:25,210 --> 00:11:31,420
to you know your ec2 instances or

277
00:11:27,430 --> 00:11:33,400
various other services within AWS inside

278
00:11:31,420 --> 00:11:36,339
this MIT made a data service there

279
00:11:33,400 --> 00:11:38,230
is a fair amount of let's say credential

280
00:11:36,340 --> 00:11:40,300
leakage because the services need this

281
00:11:38,230 --> 00:11:41,890
to talk to each other so let's say I'm a

282
00:11:40,300 --> 00:11:44,020
database for example and you're an ec2

283
00:11:41,890 --> 00:11:45,580
instance ec2 instance will communicate

284
00:11:44,020 --> 00:11:47,680
hey I am this user these are my

285
00:11:45,580 --> 00:11:50,230
credentials please let me store data and

286
00:11:47,680 --> 00:11:52,780
you and I'll be like thumbs up but as a

287
00:11:50,230 --> 00:11:55,420
malicious actor I can see these things

288
00:11:52,780 --> 00:11:57,640
going back and forth I can log it I can

289
00:11:55,420 --> 00:12:00,490
grab that username password and use that

290
00:11:57,640 --> 00:12:03,280
and then to you know either pivot to

291
00:12:00,490 --> 00:12:04,810
another account raise my place I'm sorry

292
00:12:03,280 --> 00:12:07,530
escalate my privileges to more of an

293
00:12:04,810 --> 00:12:09,969
admin of the account or what have you

294
00:12:07,530 --> 00:12:16,420
another popular technique is ami

295
00:12:09,970 --> 00:12:18,340
poisonings ami poisoning is when similar

296
00:12:16,420 --> 00:12:20,110
to the doctrine since I had earlier to

297
00:12:18,340 --> 00:12:22,030
where I create an ami let's say for

298
00:12:20,110 --> 00:12:24,850
example there's no word press am i

299
00:12:22,030 --> 00:12:27,370
that's pre-rolled in the Amazon store

300
00:12:24,850 --> 00:12:28,930
I'll go ahead and create my own you

301
00:12:27,370 --> 00:12:29,500
install it you see it's all well and

302
00:12:28,930 --> 00:12:30,609
dandy

303
00:12:29,500 --> 00:12:32,800
you know I guess where address is

304
00:12:30,610 --> 00:12:35,080
running but my next update is gonna be

305
00:12:32,800 --> 00:12:37,479
malicious and it's gonna grab keys or

306
00:12:35,080 --> 00:12:39,040
it's going to send off credentials you

307
00:12:37,480 --> 00:12:43,840
know whatever malicious acts I want it

308
00:12:39,040 --> 00:12:47,079
to do I won't dive too deep into I am it

309
00:12:43,840 --> 00:12:49,870
I am because that's can be its own talk

310
00:12:47,080 --> 00:12:52,210
itself but we can all agree that it's

311
00:12:49,870 --> 00:12:54,880
very hard to configure to say the least

312
00:12:52,210 --> 00:12:56,260
as I mentioned a little bit earlier most

313
00:12:54,880 --> 00:12:59,230
of the bugs are features and the

314
00:12:56,260 --> 00:13:01,420
features are books but one particular

315
00:12:59,230 --> 00:13:04,240
instance I'll call out is instance

316
00:13:01,420 --> 00:13:05,880
profile abuse which let's say for

317
00:13:04,240 --> 00:13:09,970
example I compromised one of your

318
00:13:05,880 --> 00:13:12,790
developers machines whether in I have

319
00:13:09,970 --> 00:13:14,590
malicious browser add-on that grab his

320
00:13:12,790 --> 00:13:16,660
credentials or I just plain stole his

321
00:13:14,590 --> 00:13:19,810
laptop but I have a foothold in your

322
00:13:16,660 --> 00:13:22,240
organization that's what matters but he

323
00:13:19,810 --> 00:13:24,069
himself cannot access let's say the key

324
00:13:22,240 --> 00:13:26,350
vault or it cannot access certain

325
00:13:24,070 --> 00:13:28,150
cryptic blobs or s3 buckets let's say an

326
00:13:26,350 --> 00:13:31,600
s3 bucket called secrets he cannot

327
00:13:28,150 --> 00:13:34,449
access it but what he can do is spin up

328
00:13:31,600 --> 00:13:36,340
ec2 instances and if the I am that we

329
00:13:34,450 --> 00:13:37,990
talked about earlier was not configured

330
00:13:36,340 --> 00:13:40,570
properly it's gonna be conflicted with

331
00:13:37,990 --> 00:13:42,790
the default role which often has access

332
00:13:40,570 --> 00:13:44,920
to everything so from that developer who

333
00:13:42,790 --> 00:13:46,339
has no access I can then create an ec2

334
00:13:44,920 --> 00:13:50,529
instance who can then

335
00:13:46,339 --> 00:13:50,529
access that s3 bucket on my behalf

336
00:13:50,769 --> 00:13:58,189
public EBS snapshots I honestly do not

337
00:13:54,350 --> 00:13:59,689
understand why snapshots of virtual

338
00:13:58,189 --> 00:14:02,599
machines ever need to be public or

339
00:13:59,689 --> 00:14:04,579
usable outside your organization I can

340
00:14:02,600 --> 00:14:09,139
think of a handful - perhaps you want to

341
00:14:04,579 --> 00:14:11,209
you know share a dump with a third party

342
00:14:09,139 --> 00:14:13,100
user who's not part of your organization

343
00:14:11,209 --> 00:14:15,199
but for a long period of time the

344
00:14:13,100 --> 00:14:16,670
default state for EBS snapshots is

345
00:14:15,199 --> 00:14:18,620
public they've now since changed with

346
00:14:16,670 --> 00:14:21,290
the private and you must go through a

347
00:14:18,620 --> 00:14:23,360
series of hoops to make them public but

348
00:14:21,290 --> 00:14:25,910
it's still a thing if you go out there

349
00:14:23,360 --> 00:14:27,740
and just scan various EBS snapshots

350
00:14:25,910 --> 00:14:32,050
you'll find a variety of data anything

351
00:14:27,740 --> 00:14:38,120
ranging from Social Security numbers to

352
00:14:32,050 --> 00:14:40,550
IP to credentials SSH tokens etc the

353
00:14:38,120 --> 00:14:42,740
same can be said about s3 buckets as you

354
00:14:40,550 --> 00:14:46,490
know s3 is generally the default blob

355
00:14:42,740 --> 00:14:48,769
storage for each for Amazon AWS that

356
00:14:46,490 --> 00:14:50,779
everyone utilizes and due to the I am

357
00:14:48,769 --> 00:14:52,939
roles being misconfigured or s3

358
00:14:50,779 --> 00:14:55,999
permissions being misconfigured you

359
00:14:52,939 --> 00:14:57,860
often have public buckets that contain

360
00:14:55,999 --> 00:15:00,470
sensitive information that one can use

361
00:14:57,860 --> 00:15:04,550
to pivot or to escalate their privileges

362
00:15:00,470 --> 00:15:07,220
or to persist inside and a new one that

363
00:15:04,550 --> 00:15:10,240
I've really enjoyed using of throughout

364
00:15:07,220 --> 00:15:14,480
some time test is VPC mirroring or abuse

365
00:15:10,240 --> 00:15:16,519
so in AWS there is often an issue with

366
00:15:14,480 --> 00:15:18,829
monitoring the network traffic within

367
00:15:16,519 --> 00:15:20,870
your ec2 instances you know in the

368
00:15:18,829 --> 00:15:23,239
classical days when you had your own

369
00:15:20,870 --> 00:15:24,499
data center you would simply set a port

370
00:15:23,240 --> 00:15:27,079
mirroring on your switch you would

371
00:15:24,499 --> 00:15:29,569
mirror that traffic off to a networking

372
00:15:27,079 --> 00:15:31,008
device such as snort sericata bro you

373
00:15:29,569 --> 00:15:34,370
know particular to your pick your pick

374
00:15:31,009 --> 00:15:36,559
but I can't mail Amazon a switch and ask

375
00:15:34,370 --> 00:15:38,540
them hey can you spin on this switch

376
00:15:36,559 --> 00:15:41,050
they'll look at you like you're an idiot

377
00:15:38,540 --> 00:15:44,089
or they'll just throw away your switch

378
00:15:41,050 --> 00:15:46,069
but luckily for us they rolled out the

379
00:15:44,089 --> 00:15:48,139
service I think months ago maybe six

380
00:15:46,069 --> 00:15:50,509
months perhaps a year - we're inside

381
00:15:48,139 --> 00:15:52,790
your V PC you can now configure your own

382
00:15:50,509 --> 00:15:55,850
like you know virtual switch to port

383
00:15:52,790 --> 00:15:57,480
mirror to a device of your choice which

384
00:15:55,850 --> 00:15:59,340
has an attacker who

385
00:15:57,480 --> 00:16:00,570
only has let's say limited privileges

386
00:15:59,340 --> 00:16:03,570
where I'm still trying to learn about

387
00:16:00,570 --> 00:16:05,370
your network this is a godsend I can

388
00:16:03,570 --> 00:16:07,650
simply mirror all your network traffic

389
00:16:05,370 --> 00:16:09,390
to a device that I control that doesn't

390
00:16:07,650 --> 00:16:12,090
have to be with some your ec2 instance

391
00:16:09,390 --> 00:16:14,280
and just analyze all your traffic see

392
00:16:12,090 --> 00:16:16,320
all that those metadata services of the

393
00:16:14,280 --> 00:16:18,930
various AWS services talking back to

394
00:16:16,320 --> 00:16:21,360
each other to try to glean more

395
00:16:18,930 --> 00:16:29,160
information to get more credentials just

396
00:16:21,360 --> 00:16:32,340
to really understand what's going on so

397
00:16:29,160 --> 00:16:33,990
so far we've gone through the ways that

398
00:16:32,340 --> 00:16:36,900
we can compromise user in the way that

399
00:16:33,990 --> 00:16:41,220
we can abuse AWS services to get a

400
00:16:36,900 --> 00:16:44,640
foothold into the organization next is

401
00:16:41,220 --> 00:16:46,050
how we hide so I'm now an attacker and I

402
00:16:44,640 --> 00:16:49,230
don't want you to know that I'm in your

403
00:16:46,050 --> 00:16:51,959
your organization one of the first

404
00:16:49,230 --> 00:16:55,020
things you can do that's most people do

405
00:16:51,960 --> 00:16:57,210
is just I just stop logging I turn off

406
00:16:55,020 --> 00:17:00,120
cloud trail you can't see what I'm doing

407
00:16:57,210 --> 00:17:01,620
if I turn off cloud trail as an attacker

408
00:17:00,120 --> 00:17:04,079
I honestly want to avoid this if you're

409
00:17:01,620 --> 00:17:05,790
a mature organization because one you

410
00:17:04,079 --> 00:17:08,460
will notice if your cloud trail logs

411
00:17:05,790 --> 00:17:11,310
suddenly stop or if your dashboards that

412
00:17:08,460 --> 00:17:15,090
you've built in Splunk or in your ELQ

413
00:17:11,310 --> 00:17:16,349
stack have stopped populating another

414
00:17:15,089 --> 00:17:19,439
thing you can do is just straight delete

415
00:17:16,349 --> 00:17:22,109
them like cloud trails often stored

416
00:17:19,440 --> 00:17:23,970
either internally and some of the AWS

417
00:17:22,109 --> 00:17:25,409
services or people will export it to an

418
00:17:23,970 --> 00:17:27,810
s3 bucket or though I export it

419
00:17:25,410 --> 00:17:29,400
somewhere else I just delete them but

420
00:17:27,810 --> 00:17:32,429
one of the most a key things people can

421
00:17:29,400 --> 00:17:34,560
do is turn it off region to region so if

422
00:17:32,430 --> 00:17:36,330
you're a distributed Amazon customer so

423
00:17:34,560 --> 00:17:37,710
you host things in uswest you hold

424
00:17:36,330 --> 00:17:39,810
things in US East you know etc

425
00:17:37,710 --> 00:17:41,100
throughout the world and I only want to

426
00:17:39,810 --> 00:17:42,899
practice in US West

427
00:17:41,100 --> 00:17:46,110
I will only turn off logging for us with

428
00:17:42,900 --> 00:17:47,670
us West so if your dashboards keep

429
00:17:46,110 --> 00:17:48,929
populating and you are getting alerts

430
00:17:47,670 --> 00:17:50,640
from the rest of the world most people

431
00:17:48,930 --> 00:17:52,290
won't think that anything is going on

432
00:17:50,640 --> 00:17:56,450
unless they have you know very granular

433
00:17:52,290 --> 00:18:00,149
view of what they do inside the console

434
00:17:56,450 --> 00:18:02,760
another sneaky way is adjusting the

435
00:18:00,150 --> 00:18:04,590
cloud trail storage configuration so

436
00:18:02,760 --> 00:18:06,420
when you do configure things to store to

437
00:18:04,590 --> 00:18:08,399
an s3 bucket you know you can configure

438
00:18:06,420 --> 00:18:10,830
size of this like I never want this to

439
00:18:08,400 --> 00:18:11,130
go over a gig or I want this to rotate

440
00:18:10,830 --> 00:18:12,840
every

441
00:18:11,130 --> 00:18:14,330
and blow away in the past three days

442
00:18:12,840 --> 00:18:16,560
while two eccentric cetera et cetera

443
00:18:14,330 --> 00:18:17,960
what you want to do is change their

444
00:18:16,560 --> 00:18:20,250
attention to one minute

445
00:18:17,960 --> 00:18:20,790
so the logs are there they're still

446
00:18:20,250 --> 00:18:22,290
logging

447
00:18:20,790 --> 00:18:24,300
there's no alerts on that part but

448
00:18:22,290 --> 00:18:26,159
they're gone so you can't do any post

449
00:18:24,300 --> 00:18:27,680
compromised analysis to see how I got in

450
00:18:26,160 --> 00:18:30,030
or what I did

451
00:18:27,680 --> 00:18:32,580
another thing is change the location of

452
00:18:30,030 --> 00:18:34,200
where they log so if it's writing to

453
00:18:32,580 --> 00:18:36,689
your s3 bucket perhaps I should write it

454
00:18:34,200 --> 00:18:38,640
to an s3 bucket that I control so one I

455
00:18:36,690 --> 00:18:40,230
can keep my legacy data to know what

456
00:18:38,640 --> 00:18:41,730
I've done in your network and know how

457
00:18:40,230 --> 00:18:44,180
I've compromised you know I kept

458
00:18:41,730 --> 00:18:46,380
persistence at the same time without

459
00:18:44,180 --> 00:18:50,790
setting off some of the usual alarm

460
00:18:46,380 --> 00:18:52,440
bells inside AWS there is an option to

461
00:18:50,790 --> 00:18:55,260
encrypt your cloud trail logs through

462
00:18:52,440 --> 00:18:56,910
AWS key management service from here you

463
00:18:55,260 --> 00:18:58,740
can either specify key and give them a

464
00:18:56,910 --> 00:19:00,930
key ask them to generate a key download

465
00:18:58,740 --> 00:19:05,040
the key etc to encrypt your cloud travel

466
00:19:00,930 --> 00:19:07,500
logs with in this case I can substitute

467
00:19:05,040 --> 00:19:09,000
my own key inside there and just lock

468
00:19:07,500 --> 00:19:11,700
you out completely why the logs keep

469
00:19:09,000 --> 00:19:14,400
writing I can delete the key that you

470
00:19:11,700 --> 00:19:16,530
have in there or a little more sneakily

471
00:19:14,400 --> 00:19:18,180
you can disable the key so the key is

472
00:19:16,530 --> 00:19:21,090
still stored in the key management

473
00:19:18,180 --> 00:19:23,010
service your key not mine but it's

474
00:19:21,090 --> 00:19:25,320
simply disabled so Cloud trail can no

475
00:19:23,010 --> 00:19:27,660
longer access it to write logs so it's

476
00:19:25,320 --> 00:19:29,760
no longer writing Long's a lot of people

477
00:19:27,660 --> 00:19:31,230
don't have that sort of error detection

478
00:19:29,760 --> 00:19:32,940
built in because technically all the

479
00:19:31,230 --> 00:19:36,210
services are still running it as

480
00:19:32,940 --> 00:19:39,530
expected and as we mentioned in the

481
00:19:36,210 --> 00:19:43,140
previous slide VB VPC traffic monitoring

482
00:19:39,530 --> 00:19:45,270
mirroring comes back up I can mirror

483
00:19:43,140 --> 00:19:47,250
that traffic that you're ascending to

484
00:19:45,270 --> 00:19:49,830
your sericata box there's no box your

485
00:19:47,250 --> 00:19:51,990
ideas simply somewhere else I could

486
00:19:49,830 --> 00:19:53,460
disable it I can mirror all your traffic

487
00:19:51,990 --> 00:19:55,380
to your security device and just

488
00:19:53,460 --> 00:19:59,730
overwhelm you with alerts so and try to

489
00:19:55,380 --> 00:20:01,290
move around inside the chaos and from

490
00:19:59,730 --> 00:20:05,250
one of my favorite tools to use inside

491
00:20:01,290 --> 00:20:08,129
AWS is lambda because lambda how many

492
00:20:05,250 --> 00:20:11,610
familiar with Lynda all right so lambda

493
00:20:08,130 --> 00:20:14,520
is the safe service part of AWS by that

494
00:20:11,610 --> 00:20:16,979
I mean it's in a event-driven serverless

495
00:20:14,520 --> 00:20:19,230
architecture so for example you can

496
00:20:16,980 --> 00:20:20,760
write a lambda that you know every

497
00:20:19,230 --> 00:20:22,440
millisecond it checks to see if there's

498
00:20:20,760 --> 00:20:24,179
any single side of this s3 bucket such

499
00:20:22,440 --> 00:20:25,759
as cloud tray lungs and

500
00:20:24,179 --> 00:20:28,320
eat them as soon as they come in so

501
00:20:25,759 --> 00:20:29,759
jumping back ahead instead of deleting

502
00:20:28,320 --> 00:20:31,499
them at the cloud trail level like you

503
00:20:29,759 --> 00:20:32,940
know using delete button I use the lamb

504
00:20:31,499 --> 00:20:36,960
to call and it goes and to delete them

505
00:20:32,940 --> 00:20:38,100
you can also use lamda to you know do

506
00:20:36,960 --> 00:20:40,889
any of the above things that I was

507
00:20:38,100 --> 00:20:42,539
talking about so if you realize that I

508
00:20:40,889 --> 00:20:44,219
have been mirroring your traffic to your

509
00:20:42,539 --> 00:20:45,809
IDs device and overwhelming in you're

510
00:20:44,220 --> 00:20:47,700
like alright we need to stop that it

511
00:20:45,809 --> 00:20:51,029
promptly goes back and turns it back on

512
00:20:47,700 --> 00:20:54,149
if you start your login again in cloud

513
00:20:51,029 --> 00:20:55,740
trail it will turn it back off and if

514
00:20:54,149 --> 00:20:57,719
you try to delete my lamda you can have

515
00:20:55,740 --> 00:21:00,090
nested lamda is that check simply to see

516
00:20:57,720 --> 00:21:02,460
if the lamda before them still exists to

517
00:21:00,090 --> 00:21:04,019
re-enable or recreate that lamda to go

518
00:21:02,460 --> 00:21:06,059
back out there this we can honestly be a

519
00:21:04,019 --> 00:21:07,470
bit of a pain to get rid of if you have

520
00:21:06,059 --> 00:21:10,440
enough nested lamda so that sometimes

521
00:21:07,470 --> 00:21:11,850
you have to engage AWS support and just

522
00:21:10,440 --> 00:21:16,139
ask them to purge everything in the

523
00:21:11,850 --> 00:21:19,110
account so you can start from new which

524
00:21:16,139 --> 00:21:21,539
finally brings us to persistence there's

525
00:21:19,110 --> 00:21:23,549
many ways to persist inside AWS

526
00:21:21,539 --> 00:21:26,970
especially with the services that they

527
00:21:23,549 --> 00:21:28,499
run out every single week I won't say

528
00:21:26,970 --> 00:21:29,820
this is an exhaustive list but it's

529
00:21:28,499 --> 00:21:32,909
definitely some of the stuff that I've

530
00:21:29,820 --> 00:21:35,399
observed throughout different pen tests

531
00:21:32,909 --> 00:21:36,899
or post compromised analysis one of the

532
00:21:35,399 --> 00:21:39,689
most basic things you can do is simply

533
00:21:36,899 --> 00:21:42,330
create a new user but creating a new

534
00:21:39,690 --> 00:21:44,340
user is noisy someone could be a small

535
00:21:42,330 --> 00:21:46,259
organisation where you only have two

536
00:21:44,340 --> 00:21:49,470
cloud admins so you're like whoa I see

537
00:21:46,259 --> 00:21:51,299
Joe and Bob why is there now Jill where

538
00:21:49,470 --> 00:21:52,679
did she come from did we hire a Jill and

539
00:21:51,299 --> 00:21:55,769
why does she have access to our account

540
00:21:52,679 --> 00:21:58,289
a more common way to keep in line with

541
00:21:55,769 --> 00:21:59,039
these things is create another user via

542
00:21:58,289 --> 00:22:01,950
typosquatting

543
00:21:59,039 --> 00:22:07,019
bill with three L's bill with two B's

544
00:22:01,950 --> 00:22:08,789
Bob with two O's 3 O's just something

545
00:22:07,019 --> 00:22:12,509
that won't stand out as much inside the

546
00:22:08,789 --> 00:22:15,210
logs you can also create a temporary

547
00:22:12,509 --> 00:22:16,679
user as the last time I did this testing

548
00:22:15,210 --> 00:22:18,480
it may no longer be true if you create a

549
00:22:16,679 --> 00:22:20,519
user a temporary user and immediately

550
00:22:18,480 --> 00:22:23,009
delete them their access keys are

551
00:22:20,519 --> 00:22:24,659
usually still good for about 30 maybe 20

552
00:22:23,009 --> 00:22:27,179
minutes before whatever job runs on the

553
00:22:24,659 --> 00:22:29,070
background to purchase or access runs so

554
00:22:27,179 --> 00:22:30,990
this can be a very efficient way you

555
00:22:29,070 --> 00:22:33,090
know utilizing lambda to create and

556
00:22:30,990 --> 00:22:34,440
destroy new users and send yourself

557
00:22:33,090 --> 00:22:37,290
those tokens to make sure you can

558
00:22:34,440 --> 00:22:41,440
persist within that network

559
00:22:37,290 --> 00:22:43,928
by default users can have multiple

560
00:22:41,440 --> 00:22:45,330
access keys I think right now the limit

561
00:22:43,929 --> 00:22:47,950
is two it might be a little higher now

562
00:22:45,330 --> 00:22:49,600
but you yourself are only going to

563
00:22:47,950 --> 00:22:52,840
create one access key for yourself more

564
00:22:49,600 --> 00:22:55,300
than likely so to not arise too much

565
00:22:52,840 --> 00:22:57,309
suspicion I can just assign another key

566
00:22:55,300 --> 00:22:59,919
to your user that you use to have the

567
00:22:57,309 --> 00:23:01,300
same permissions that you do people

568
00:22:59,920 --> 00:23:02,800
don't usually look at this as to weird

569
00:23:01,300 --> 00:23:04,780
because you know perhaps they forgot

570
00:23:02,800 --> 00:23:06,460
their other access key or they lost the

571
00:23:04,780 --> 00:23:08,139
file you know they lost access to their

572
00:23:06,460 --> 00:23:10,720
LastPass so this doesn't immediately

573
00:23:08,140 --> 00:23:12,280
stand out to say like you know we've

574
00:23:10,720 --> 00:23:15,460
been compromised we need to learn on

575
00:23:12,280 --> 00:23:17,770
this you can also backdoor existing

576
00:23:15,460 --> 00:23:20,470
roles at this point we're assuming that

577
00:23:17,770 --> 00:23:24,220
you know we have admin within the AWS

578
00:23:20,470 --> 00:23:26,110
console so we can take roles that

579
00:23:24,220 --> 00:23:28,480
currently exist let's say such as Bob

580
00:23:26,110 --> 00:23:30,250
who are picking on earlier and we can

581
00:23:28,480 --> 00:23:33,880
make sure we always have access to Bob's

582
00:23:30,250 --> 00:23:35,470
account either via giving him more

583
00:23:33,880 --> 00:23:37,929
access to things that he shouldn't have

584
00:23:35,470 --> 00:23:41,110
or making sure our access keys are

585
00:23:37,929 --> 00:23:43,809
always assigned to him backdooring a.m.

586
00:23:41,110 --> 00:23:46,510
eyes that are used or is often also very

587
00:23:43,809 --> 00:23:48,160
common similar to the a my poisoning

588
00:23:46,510 --> 00:23:51,129
that we did earlier it's where we take a

589
00:23:48,160 --> 00:23:53,530
a well known ami and turn it malicious

590
00:23:51,130 --> 00:23:56,020
in this case we would take an ami that

591
00:23:53,530 --> 00:23:57,940
they already use on a regular basis so

592
00:23:56,020 --> 00:23:59,860
this is one of I would say the

593
00:23:57,940 --> 00:24:01,720
weaknesses of using infrastructure as

594
00:23:59,860 --> 00:24:03,580
code or using terraform you know such

595
00:24:01,720 --> 00:24:05,800
things to tear down infrastructure and

596
00:24:03,580 --> 00:24:07,689
build them up based on templates your

597
00:24:05,800 --> 00:24:10,030
templates are only as good as the images

598
00:24:07,690 --> 00:24:11,380
you pull from and if I backdoor that

599
00:24:10,030 --> 00:24:13,960
particular image that you're using to

600
00:24:11,380 --> 00:24:16,330
like let's say add a user or add my SSH

601
00:24:13,960 --> 00:24:20,320
key so I can always access it that's not

602
00:24:16,330 --> 00:24:21,939
great for yourself and we can also as

603
00:24:20,320 --> 00:24:24,520
mentioned earlier backdoor more

604
00:24:21,940 --> 00:24:26,950
third-party services these third-party

605
00:24:24,520 --> 00:24:28,929
services like I said can be NPM they

606
00:24:26,950 --> 00:24:31,300
could be on github like any sort of open

607
00:24:28,929 --> 00:24:32,890
source tool it can be a tool that you

608
00:24:31,300 --> 00:24:34,600
find out that the company leverages on a

609
00:24:32,890 --> 00:24:36,910
regular basis that you can afford to

610
00:24:34,600 --> 00:24:40,659
purchase and change the way it normally

611
00:24:36,910 --> 00:24:43,360
functions within there you can also

612
00:24:40,660 --> 00:24:46,720
modify default security groups they've

613
00:24:43,360 --> 00:24:48,490
gotten better these days locking down

614
00:24:46,720 --> 00:24:48,990
secure groups by default like you know

615
00:24:48,490 --> 00:24:51,480
only

616
00:24:48,990 --> 00:24:54,570
SSH in the beginning only allowing you

617
00:24:51,480 --> 00:24:56,550
know 80 and 443 for web servers but you

618
00:24:54,570 --> 00:24:59,520
can still change the default if you have

619
00:24:56,550 --> 00:25:01,740
admin so you can add port 999 that you

620
00:24:59,520 --> 00:25:05,129
would normally use to connect to your

621
00:25:01,740 --> 00:25:09,059
meterpreter that you installed on your

622
00:25:05,130 --> 00:25:10,710
backdoor ami I continue to pick on B PC

623
00:25:09,059 --> 00:25:12,629
traffic mirroring abuse because it's

624
00:25:10,710 --> 00:25:14,100
honestly a very powerful tool and I

625
00:25:12,630 --> 00:25:17,190
really want to hammer this home for

626
00:25:14,100 --> 00:25:19,199
y'all with AWS services talking back and

627
00:25:17,190 --> 00:25:21,000
forth to each other constantly there's

628
00:25:19,200 --> 00:25:23,400
so much information to be gleaned from

629
00:25:21,000 --> 00:25:25,650
here so even let's say you lock me out

630
00:25:23,400 --> 00:25:27,360
if I've already started sending that

631
00:25:25,650 --> 00:25:30,360
poor lyric traffic to a device I control

632
00:25:27,360 --> 00:25:32,820
I can just simply wait for the service

633
00:25:30,360 --> 00:25:34,860
to reallocate grab those credentials go

634
00:25:32,820 --> 00:25:38,460
back in continue abusing your resources

635
00:25:34,860 --> 00:25:40,919
as we discussed earlier and then there's

636
00:25:38,460 --> 00:25:43,890
still my best friend lambda lambda

637
00:25:40,920 --> 00:25:47,720
lambda lambda lambda lambda lambda you

638
00:25:43,890 --> 00:25:51,420
you can use lambda to just be a pest

639
00:25:47,720 --> 00:25:53,309
honestly and most people I recommend to

640
00:25:51,420 --> 00:25:55,230
disable services that they're not using

641
00:25:53,309 --> 00:25:57,270
with an AWS but disabling lambda is

642
00:25:55,230 --> 00:25:59,070
honestly very difficult you can use

643
00:25:57,270 --> 00:26:00,990
these lambda calls as I mentioned in the

644
00:25:59,070 --> 00:26:02,700
previous slide to recreate your

645
00:26:00,990 --> 00:26:05,190
temporary user you know let's say every

646
00:26:02,700 --> 00:26:06,960
five seconds if someone deletes my bill

647
00:26:05,190 --> 00:26:07,290
with three letters that I created

648
00:26:06,960 --> 00:26:09,900
earlier

649
00:26:07,290 --> 00:26:12,420
you immediately recreate them if someone

650
00:26:09,900 --> 00:26:14,130
changes the backdoored ami to a

651
00:26:12,420 --> 00:26:16,950
different one you switch it right back

652
00:26:14,130 --> 00:26:19,200
and most since lambda is event-driven

653
00:26:16,950 --> 00:26:20,100
these things happen as soon as the

654
00:26:19,200 --> 00:26:22,650
change is made

655
00:26:20,100 --> 00:26:23,580
so most humans won't have time to react

656
00:26:22,650 --> 00:26:25,679
I don't know unless you're just

657
00:26:23,580 --> 00:26:31,409
consuming cloud trail yourself and you

658
00:26:25,679 --> 00:26:33,030
see the matrix at night so there's a

659
00:26:31,410 --> 00:26:38,340
couple ways that you can be a little bit

660
00:26:33,030 --> 00:26:41,580
more secure learn how I am works break

661
00:26:38,340 --> 00:26:43,020
down roles that have the least privilege

662
00:26:41,580 --> 00:26:44,520
so like you know a bob only needs to

663
00:26:43,020 --> 00:26:47,340
spin up ec2 time-to-time

664
00:26:44,520 --> 00:26:49,559
only give them that amount of privileges

665
00:26:47,340 --> 00:26:51,330
don't use your root account when you

666
00:26:49,559 --> 00:26:52,590
first make your AWS account you get a

667
00:26:51,330 --> 00:26:53,639
root account that I was access to

668
00:26:52,590 --> 00:26:56,699
everything in this you know this

669
00:26:53,640 --> 00:26:58,740
equivalent of route on a Linux box that

670
00:26:56,700 --> 00:27:00,870
should be used only for trouble

671
00:26:58,740 --> 00:27:02,130
shooting working with support but

672
00:27:00,870 --> 00:27:06,030
besides that you want to use a high

673
00:27:02,130 --> 00:27:08,610
Emeril's guard duty is pretty nice you

674
00:27:06,030 --> 00:27:11,010
know it ingest a lot of AWS logs by

675
00:27:08,610 --> 00:27:12,178
default it looks for anomalies it looks

676
00:27:11,010 --> 00:27:13,740
for things you know the more or less

677
00:27:12,179 --> 00:27:16,410
stand out you can also configure your

678
00:27:13,740 --> 00:27:19,200
own custom rules in there to see like

679
00:27:16,410 --> 00:27:21,660
why do we have more than 10 ec2 it sits

680
00:27:19,200 --> 00:27:23,100
and set up someone changed my ami and we

681
00:27:21,660 --> 00:27:27,960
have more lambda calls than we normally

682
00:27:23,100 --> 00:27:30,209
do get secrets is a tool from AWS labs

683
00:27:27,960 --> 00:27:34,679
that scans each one of your gift commits

684
00:27:30,210 --> 00:27:36,690
for things such as SSH keys secrets you

685
00:27:34,679 --> 00:27:40,290
know etc anything that out needs to have

686
00:27:36,690 --> 00:27:42,270
access to your AWS console I would also

687
00:27:40,290 --> 00:27:45,629
recommend session manager session

688
00:27:42,270 --> 00:27:46,770
manager is a pretty new tool I wouldn't

689
00:27:45,630 --> 00:27:48,840
say that you should roll it out in

690
00:27:46,770 --> 00:27:52,050
production yet but you install a small

691
00:27:48,840 --> 00:27:55,139
agent or add an agent to your ami builds

692
00:27:52,050 --> 00:27:56,190
and that agent can log everything that

693
00:27:55,140 --> 00:27:58,050
happens on the device

694
00:27:56,190 --> 00:27:59,400
so from if it's Windows anything that

695
00:27:58,050 --> 00:28:01,649
happens in PowerShell or anything that

696
00:27:59,400 --> 00:28:03,720
happens in batch and on the Linux side

697
00:28:01,650 --> 00:28:06,030
anything that happens in bash any Python

698
00:28:03,720 --> 00:28:08,280
that runs you have more or less a direct

699
00:28:06,030 --> 00:28:12,450
stream to see what a potential attacker

700
00:28:08,280 --> 00:28:14,220
was doing on this device and like most

701
00:28:12,450 --> 00:28:16,950
things logs are only really good if you

702
00:28:14,220 --> 00:28:18,600
could read them I just like backups I

703
00:28:16,950 --> 00:28:21,480
would recommend having logs at multiple

704
00:28:18,600 --> 00:28:24,000
places whether it's locally inside AWS

705
00:28:21,480 --> 00:28:26,760
and another cloud type service and then

706
00:28:24,000 --> 00:28:28,559
perhaps on Prem so if I compromised your

707
00:28:26,760 --> 00:28:30,629
AWS account and maybe compromised that

708
00:28:28,559 --> 00:28:32,580
third party you still have a third copy

709
00:28:30,630 --> 00:28:35,610
or you have a chance to figure out how I

710
00:28:32,580 --> 00:28:38,669
got into reverse things and then turn on

711
00:28:35,610 --> 00:28:41,879
all of auditing logging gets expensive

712
00:28:38,670 --> 00:28:44,429
when it comes to storage but you can't

713
00:28:41,880 --> 00:28:46,230
get around it it's just a cost it has to

714
00:28:44,429 --> 00:28:47,670
be eaten you need to turn on Cloud trill

715
00:28:46,230 --> 00:28:50,850
you need to watch all the configs you

716
00:28:47,670 --> 00:28:53,040
need cloud launch so a question I

717
00:28:50,850 --> 00:28:56,159
commonly get is where should I store my

718
00:28:53,040 --> 00:28:58,139
logs outside you know guard duty or

719
00:28:56,160 --> 00:29:00,600
cloud watch what have you s3 buckets are

720
00:28:58,140 --> 00:29:03,830
an option and a lot of various companies

721
00:29:00,600 --> 00:29:07,678
such as Backblaze or digital ocean of

722
00:29:03,830 --> 00:29:10,139
replicated the way that the s3 API works

723
00:29:07,679 --> 00:29:12,190
so if you're already pushing things to

724
00:29:10,140 --> 00:29:14,320
s3 you can easily tie into some of

725
00:29:12,190 --> 00:29:17,009
other services to make sure things are

726
00:29:14,320 --> 00:29:17,009
backed up properly

727
00:29:18,509 --> 00:29:31,730
no questions alright with that thank you

728
00:29:24,600 --> 00:29:31,730
[Applause]

729
00:29:36,530 --> 00:29:38,590
you

