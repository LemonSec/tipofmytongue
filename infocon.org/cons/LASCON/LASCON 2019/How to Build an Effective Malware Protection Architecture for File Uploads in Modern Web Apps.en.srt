1
00:00:09,300 --> 00:00:39,330
[Music]

2
00:00:35,210 --> 00:00:41,730
so yeah welcome to the talk thanks for

3
00:00:39,330 --> 00:00:45,540
joining in the session it's been great

4
00:00:41,730 --> 00:00:48,809
for the last two days lots of talks on

5
00:00:45,540 --> 00:00:51,530
Deficit carbs you know purple teams I I

6
00:00:48,809 --> 00:00:56,970
really love all of the sessions I'm a

7
00:00:51,530 --> 00:01:00,210
brick I mean I am a big fan of you know

8
00:00:56,970 --> 00:01:03,210
dev cyclop culture so I really loved all

9
00:01:00,210 --> 00:01:06,240
of the sessions before we start this I

10
00:01:03,210 --> 00:01:11,270
want to kick off with an analogy right

11
00:01:06,240 --> 00:01:15,390
so imagine you are tasked with saving

12
00:01:11,270 --> 00:01:18,750
titanically so I'm sure all of you would

13
00:01:15,390 --> 00:01:20,820
agree you will not be writing a strong

14
00:01:18,750 --> 00:01:22,860
email to not to the iceberg or the

15
00:01:20,820 --> 00:01:24,630
captain to you know the list of

16
00:01:22,860 --> 00:01:26,700
recommendations to stop it right you

17
00:01:24,630 --> 00:01:30,300
would probably want to create a secure

18
00:01:26,700 --> 00:01:32,369
path for the ship to sail through and

19
00:01:30,300 --> 00:01:34,830
and you know stop bad things from

20
00:01:32,369 --> 00:01:39,270
happening that's really kind of lessons

21
00:01:34,830 --> 00:01:43,020
of this talk to create a secure you know

22
00:01:39,270 --> 00:01:47,069
security paved pathway then you have the

23
00:01:43,020 --> 00:01:50,729
publication's accepting file uploads so

24
00:01:47,069 --> 00:01:53,340
that a little bit about myself I know he

25
00:01:50,729 --> 00:01:56,729
has said eight years that was written a

26
00:01:53,340 --> 00:02:00,179
couple of years back but I have been

27
00:01:56,729 --> 00:02:02,459
doing software development mostly

28
00:02:00,179 --> 00:02:05,580
developing security products and over

29
00:02:02,459 --> 00:02:09,300
the past few years focused on product

30
00:02:05,580 --> 00:02:10,770
security I really like building things I

31
00:02:09,300 --> 00:02:13,800
know a lot of people like breaking

32
00:02:10,770 --> 00:02:17,730
things but I like building stuff and I

33
00:02:13,800 --> 00:02:20,550
really like to invent and you could see

34
00:02:17,730 --> 00:02:23,609
a lot of inventions there I believe in

35
00:02:20,550 --> 00:02:26,209
once inventions are core to kind of help

36
00:02:23,610 --> 00:02:29,819
cyber take take it to the next level

37
00:02:26,209 --> 00:02:34,050
I've heard earlier career attempts I

38
00:02:29,819 --> 00:02:36,000
tried playing soccer didn't go well

39
00:02:34,050 --> 00:02:38,060
but I'm not complaining I really like

40
00:02:36,000 --> 00:02:41,160
this carrier I'm very passionate about

41
00:02:38,060 --> 00:02:43,049
InfoSec and that's one of the reasons I

42
00:02:41,160 --> 00:02:46,349
kind of go around the globe

43
00:02:43,049 --> 00:02:51,120
talking conferences and contributing

44
00:02:46,349 --> 00:02:54,750
awaken to the community for the agenda

45
00:02:51,120 --> 00:02:59,280
today we are going to talk about the

46
00:02:54,750 --> 00:03:01,680
current trends in you know fight based

47
00:02:59,280 --> 00:03:03,750
attacks and then just to set the stage

48
00:03:01,680 --> 00:03:07,079
I'm gonna talk about different malware

49
00:03:03,750 --> 00:03:09,750
processing techniques what they are and

50
00:03:07,079 --> 00:03:11,970
then we will take a look at some of the

51
00:03:09,750 --> 00:03:14,549
recent attacks to kind of give an idea

52
00:03:11,970 --> 00:03:17,069
of made the threat vector shard and then

53
00:03:14,549 --> 00:03:19,739
I'll go and to talk about the

54
00:03:17,069 --> 00:03:27,689
architecture of file upload how you can

55
00:03:19,739 --> 00:03:31,079
design a secure pathway and just a bit

56
00:03:27,689 --> 00:03:33,840
of the introduction on the topic right

57
00:03:31,079 --> 00:03:37,859
I just want to convey that this is an

58
00:03:33,840 --> 00:03:41,519
independent research and this is this

59
00:03:37,859 --> 00:03:44,540
talk will not be you know targeted at

60
00:03:41,519 --> 00:03:48,419
any vendor it's a vendor neutral talk

61
00:03:44,540 --> 00:03:50,010
and the mileage can vary in your

62
00:03:48,419 --> 00:03:51,319
organization so I'm going to talk about

63
00:03:50,010 --> 00:03:55,010
different techniques different

64
00:03:51,319 --> 00:03:57,409
architecture and about scalability but

65
00:03:55,010 --> 00:04:00,599
you should take it with a pinch of salt

66
00:03:57,409 --> 00:04:03,328
this is just descriptive approach I'm

67
00:04:00,599 --> 00:04:06,089
going to propose it's not a prescriptive

68
00:04:03,329 --> 00:04:12,120
approach so I'd like you to take it of

69
00:04:06,090 --> 00:04:14,190
that on a disclaimer before I go on just

70
00:04:12,120 --> 00:04:17,070
so I keep my legal team happy this is

71
00:04:14,190 --> 00:04:19,699
nothing related to whatever I do it

72
00:04:17,070 --> 00:04:24,630
Ouiser the current version or the future

73
00:04:19,699 --> 00:04:26,220
so please take it that way all right so

74
00:04:24,630 --> 00:04:28,169
let's jump into a file based attack

75
00:04:26,220 --> 00:04:31,919
trans right so if you look at this chart

76
00:04:28,169 --> 00:04:36,299
this is from the virus on data breach

77
00:04:31,919 --> 00:04:39,060
report so in 2016 if you look at the web

78
00:04:36,300 --> 00:04:43,380
based attacks it was about like think

79
00:04:39,060 --> 00:04:48,270
about 15% and it has jumped or maybe 17

80
00:04:43,380 --> 00:04:51,240
and has jumped 6% from 2018 so what it

81
00:04:48,270 --> 00:04:54,060
means is attackers are trying to send

82
00:04:51,240 --> 00:04:55,600
malware through where earlier the most

83
00:04:54,060 --> 00:04:57,610
popular

84
00:04:55,600 --> 00:05:00,550
you know delivery method was email but

85
00:04:57,610 --> 00:05:03,820
it's shifting rapidly and also if you

86
00:05:00,550 --> 00:05:06,550
see on the right office doc is becoming

87
00:05:03,820 --> 00:05:06,969
a very popular way to deliver a tomorrow

88
00:05:06,550 --> 00:05:09,790
man

89
00:05:06,970 --> 00:05:12,070
so let's kind of zoom in on that and

90
00:05:09,790 --> 00:05:15,100
talk about what it means right so when

91
00:05:12,070 --> 00:05:17,200
you think about malware typically you

92
00:05:15,100 --> 00:05:20,410
think of an executable that comes into

93
00:05:17,200 --> 00:05:23,740
your environment it gets downloaded in

94
00:05:20,410 --> 00:05:26,080
your system and then it runs a set of

95
00:05:23,740 --> 00:05:28,270
programs maybe talks to the

96
00:05:26,080 --> 00:05:31,659
command-and-control server sends your

97
00:05:28,270 --> 00:05:35,590
data out what nothing but the new trend

98
00:05:31,660 --> 00:05:37,900
is file a Smallville so you have a file

99
00:05:35,590 --> 00:05:41,799
like a word dot which carries a set of

100
00:05:37,900 --> 00:05:43,989
binary instructions and it executes as

101
00:05:41,800 --> 00:05:46,240
part of your known application let's say

102
00:05:43,990 --> 00:05:49,080
PowerShell right so you trust that

103
00:05:46,240 --> 00:05:52,500
program there is no executable or binary

104
00:05:49,080 --> 00:05:59,500
but then it gets executed as a file s

105
00:05:52,500 --> 00:06:01,180
attack so let's talk about different

106
00:05:59,500 --> 00:06:04,150
Marvell processing techniques that are

107
00:06:01,180 --> 00:06:06,310
available to us right before we deep

108
00:06:04,150 --> 00:06:12,010
dive into the tags I will talk about

109
00:06:06,310 --> 00:06:15,460
what the techniques we know of so far so

110
00:06:12,010 --> 00:06:19,469
first surface analysis this is really

111
00:06:15,460 --> 00:06:22,630
kind of taking a piece of file and

112
00:06:19,470 --> 00:06:24,820
understanding what it is right it

113
00:06:22,630 --> 00:06:28,960
doesn't go into the details on what it

114
00:06:24,820 --> 00:06:31,659
does or you know other details on how it

115
00:06:28,960 --> 00:06:35,109
gets executed it doesn't really involve

116
00:06:31,660 --> 00:06:37,710
a lot of CPU cycle per se so you just

117
00:06:35,110 --> 00:06:42,100
take in a fight look at it to say hey

118
00:06:37,710 --> 00:06:44,289
this is Fred for example it doesn't tell

119
00:06:42,100 --> 00:06:48,640
you anything other than that but it's

120
00:06:44,290 --> 00:06:51,820
quite useful because you detect the file

121
00:06:48,640 --> 00:06:54,969
type and if somebody is poofing right

122
00:06:51,820 --> 00:06:57,219
for example if Fred if it's not release

123
00:06:54,970 --> 00:06:59,020
Fred and if it's shut coming in as Fred

124
00:06:57,220 --> 00:07:02,550
you cannot detect and reject that so you

125
00:06:59,020 --> 00:07:05,799
don't want to take a dot exe file

126
00:07:02,550 --> 00:07:09,180
masqueraded as dot doc spawn so that's

127
00:07:05,800 --> 00:07:09,180
what this really does

128
00:07:10,400 --> 00:07:15,080
and then the traditional antivirus scan

129
00:07:12,710 --> 00:07:18,710
I'm sure you're all aware of this

130
00:07:15,080 --> 00:07:21,380
technique there are quite a few

131
00:07:18,710 --> 00:07:23,960
you know drawbacks with the way AV

132
00:07:21,380 --> 00:07:26,330
engines work there are a lot of you know

133
00:07:23,960 --> 00:07:28,700
pasta fall obviously that's that's the

134
00:07:26,330 --> 00:07:31,940
reason we use it but if you think about

135
00:07:28,700 --> 00:07:35,030
the completeness of detection meaning

136
00:07:31,940 --> 00:07:37,250
how many files an AV engine would detect

137
00:07:35,030 --> 00:07:40,700
it kind of varies across different AV

138
00:07:37,250 --> 00:07:43,820
engines and it's always an opinion of

139
00:07:40,700 --> 00:07:47,390
what the product things and it's also a

140
00:07:43,820 --> 00:07:51,230
correlation to the kind of signatures

141
00:07:47,390 --> 00:07:54,050
the product has and a lot of time the AV

142
00:07:51,230 --> 00:07:56,540
engines are not good at classifying the

143
00:07:54,050 --> 00:07:58,670
malware so they can detect and say hey

144
00:07:56,540 --> 00:08:02,690
it looks to be malicious I don't know

145
00:07:58,670 --> 00:08:06,290
which family this belongs to right so so

146
00:08:02,690 --> 00:08:09,560
that is kind of the drawback but there

147
00:08:06,290 --> 00:08:12,440
is a lot of you know good features that

148
00:08:09,560 --> 00:08:15,410
come with it especially if you run

149
00:08:12,440 --> 00:08:18,170
multiple AV engines together it's going

150
00:08:15,410 --> 00:08:20,300
to increase the completeness ratio and

151
00:08:18,170 --> 00:08:22,430
the correctness ratio because now you

152
00:08:20,300 --> 00:08:24,440
instead of having opinion from one

153
00:08:22,430 --> 00:08:26,750
expert you're going to have opinions

154
00:08:24,440 --> 00:08:31,120
from you know different experts on the

155
00:08:26,750 --> 00:08:31,120
same issue or the same file for example

156
00:08:33,549 --> 00:08:40,609
and then we go into dynamic or runtime

157
00:08:37,159 --> 00:08:44,049
analysis so this is where a lot of CPU

158
00:08:40,610 --> 00:08:47,420
cycles goes into right so to run a file

159
00:08:44,049 --> 00:08:51,589
and then see how it behaves and then

160
00:08:47,420 --> 00:08:55,010
kind of extract all the indicators of

161
00:08:51,590 --> 00:08:57,740
compromise and then conclude on whether

162
00:08:55,010 --> 00:09:00,280
the file is malicious or not so it is

163
00:08:57,740 --> 00:09:05,000
typically run in a sandbox so you give a

164
00:09:00,280 --> 00:09:07,640
file to a sandbox of VM and it executes

165
00:09:05,000 --> 00:09:10,040
the file looks at a bunch of indicators

166
00:09:07,640 --> 00:09:12,400
to decide if it's looking to be

167
00:09:10,040 --> 00:09:14,990
malicious or not it's fairly accurate

168
00:09:12,400 --> 00:09:18,800
but then it takes a lot of time to set

169
00:09:14,990 --> 00:09:21,430
up imagine if you have the above

170
00:09:18,800 --> 00:09:24,729
accepting you know PDF

171
00:09:21,430 --> 00:09:28,510
etc you need to have a VM that is set up

172
00:09:24,730 --> 00:09:33,760
with Adobe Microsoft Word for example

173
00:09:28,510 --> 00:09:35,800
and then run the file and also there are

174
00:09:33,760 --> 00:09:42,130
certain nuances to it right if you have

175
00:09:35,800 --> 00:09:45,040
a PDF reader version 19.2 that may not

176
00:09:42,130 --> 00:09:47,710
give you an idea of how it will execute

177
00:09:45,040 --> 00:09:50,050
in a different version and also if you

178
00:09:47,710 --> 00:09:52,090
run it in a PDF Reader versus a writer

179
00:09:50,050 --> 00:09:54,939
the results are going to be different

180
00:09:52,090 --> 00:09:58,210
and sometimes the system doesn't just

181
00:09:54,940 --> 00:10:00,340
work it'll probably be a you know a

182
00:09:58,210 --> 00:10:02,320
pop-up that comes up and you have a

183
00:10:00,340 --> 00:10:05,740
screenshot of the pop-up but there is no

184
00:10:02,320 --> 00:10:08,320
analysis that runs so due to all these

185
00:10:05,740 --> 00:10:12,190
factors it's very time-consuming to set

186
00:10:08,320 --> 00:10:16,270
up and it's also very time consuming to

187
00:10:12,190 --> 00:10:19,360
run a file and get a result and and when

188
00:10:16,270 --> 00:10:22,630
you get a result that comes with a

189
00:10:19,360 --> 00:10:25,300
caveat because you now run a file and

190
00:10:22,630 --> 00:10:29,230
then you are generating result based on

191
00:10:25,300 --> 00:10:31,390
the run of that file and that result can

192
00:10:29,230 --> 00:10:34,360
in turn have a model where if somebody

193
00:10:31,390 --> 00:10:40,199
is writing a sophisticated malware the

194
00:10:34,360 --> 00:10:40,200
results can in turn have infected inputs

195
00:10:40,830 --> 00:10:46,270
so the next technique is a packer

196
00:10:43,600 --> 00:10:50,290
so attackers usually like to obfuscate

197
00:10:46,270 --> 00:10:53,020
the payload so one common way is to pack

198
00:10:50,290 --> 00:10:56,050
the file so that the analysis doesn't

199
00:10:53,020 --> 00:10:59,650
detect it so malware think of it as a

200
00:10:56,050 --> 00:11:01,780
software program like zip or gzip so

201
00:10:59,650 --> 00:11:03,970
somebody can package it and send it and

202
00:11:01,780 --> 00:11:07,110
if you don't answer the file you're

203
00:11:03,970 --> 00:11:11,740
going to lose a lot of analysis metrics

204
00:11:07,110 --> 00:11:14,200
so a good way to kind of analyze packed

205
00:11:11,740 --> 00:11:16,420
files would be the first unpack it and

206
00:11:14,200 --> 00:11:19,360
to unpack it you need a different I mean

207
00:11:16,420 --> 00:11:21,520
define several factors right how many

208
00:11:19,360 --> 00:11:23,110
recursions if you're taking in a zip

209
00:11:21,520 --> 00:11:25,390
file how many recursions do you want to

210
00:11:23,110 --> 00:11:28,770
allow for example what are the file

211
00:11:25,390 --> 00:11:34,060
sizes of the files that could be inside

212
00:11:28,770 --> 00:11:34,970
the packed file so you would always want

213
00:11:34,060 --> 00:11:39,369
and

214
00:11:34,970 --> 00:11:39,370
right if you're taking any fact software

215
00:11:40,180 --> 00:11:45,380
and the next technique is static

216
00:11:43,190 --> 00:11:47,630
analysis I'm talking about this after

217
00:11:45,380 --> 00:11:49,910
unpacking because that's kind of the

218
00:11:47,630 --> 00:11:54,020
primary factor before you could do this

219
00:11:49,910 --> 00:11:56,569
analysis what it does is it looks at the

220
00:11:54,020 --> 00:12:00,250
PE sections or the file sections to see

221
00:11:56,570 --> 00:12:03,400
which sections can attribute to

222
00:12:00,250 --> 00:12:06,260
indicator of compromise so if you take a

223
00:12:03,400 --> 00:12:09,079
PDF file it's going to have a header

224
00:12:06,260 --> 00:12:11,630
it's going to have a section name so

225
00:12:09,080 --> 00:12:13,970
based on these factors you'll be able to

226
00:12:11,630 --> 00:12:19,760
generate a value that could you know

227
00:12:13,970 --> 00:12:23,420
contribute to your IOC factors reverse

228
00:12:19,760 --> 00:12:27,410
engineering this is a complicated topic

229
00:12:23,420 --> 00:12:30,130
and it's very hard to automate write

230
00:12:27,410 --> 00:12:33,620
reverse engineering is very specialized

231
00:12:30,130 --> 00:12:36,470
somebody has to manually look at the run

232
00:12:33,620 --> 00:12:37,790
reverse engineer and look at the code so

233
00:12:36,470 --> 00:12:40,340
I'm not going to go into a lot of

234
00:12:37,790 --> 00:12:44,329
details there are tools available like

235
00:12:40,340 --> 00:12:45,680
ID Pro which you can use to you know do

236
00:12:44,330 --> 00:12:48,770
a first run

237
00:12:45,680 --> 00:12:50,810
you know D compiler but a lot of the

238
00:12:48,770 --> 00:12:53,960
sophisticated malware's are going to

239
00:12:50,810 --> 00:12:56,839
just you know bypass it because they

240
00:12:53,960 --> 00:13:00,050
know ID Pro and it's very easy to

241
00:12:56,840 --> 00:13:03,940
associate something that is not detected

242
00:13:00,050 --> 00:13:03,939
by you know your D compiler

243
00:13:06,550 --> 00:13:14,030
okay so the last technique this is kind

244
00:13:10,430 --> 00:13:17,390
of very recent and modern there are a

245
00:13:14,030 --> 00:13:19,579
lot of engines available that classified

246
00:13:17,390 --> 00:13:22,790
based on a machine learning based

247
00:13:19,580 --> 00:13:25,330
algorithm there are primarily two

248
00:13:22,790 --> 00:13:28,849
different types of classifiers one

249
00:13:25,330 --> 00:13:30,920
before executing a file before the

250
00:13:28,850 --> 00:13:33,470
execution you can do a static analysis

251
00:13:30,920 --> 00:13:37,189
of the file and figure out whether the

252
00:13:33,470 --> 00:13:40,370
file falls into a ml classifier that

253
00:13:37,190 --> 00:13:43,250
that is designed for a malware and the

254
00:13:40,370 --> 00:13:46,000
second is on the execution right you let

255
00:13:43,250 --> 00:13:48,069
the file run detonate it in a V

256
00:13:46,000 --> 00:13:52,300
and then see how the file behaves and

257
00:13:48,069 --> 00:13:55,060
then get the label sort of the behavior

258
00:13:52,300 --> 00:13:57,250
and then classify it with AML classifier

259
00:13:55,060 --> 00:13:59,859
for a detection again this is very

260
00:13:57,250 --> 00:14:01,660
premature right so there are lots of

261
00:13:59,860 --> 00:14:04,300
false positive and there is going to be

262
00:14:01,660 --> 00:14:11,259
a lead time in training the classifiers

263
00:14:04,300 --> 00:14:14,229
to be effective okay I know that's a lot

264
00:14:11,259 --> 00:14:16,050
of content so I'm gonna pause and ask a

265
00:14:14,230 --> 00:14:21,850
question right so we've looked at

266
00:14:16,050 --> 00:14:23,859
different analysis techniques how reason

267
00:14:21,850 --> 00:14:26,889
do you think the analysis have to be if

268
00:14:23,860 --> 00:14:32,009
it has to be useful any any quick

269
00:14:26,889 --> 00:14:36,220
comments thoughts it's 30 minutes

270
00:14:32,009 --> 00:14:44,199
fair enough or if it's coming after two

271
00:14:36,220 --> 00:14:46,209
days 24 hours yeah yeah I'll let we'll

272
00:14:44,199 --> 00:14:47,920
come back to that I'm gonna talk about a

273
00:14:46,209 --> 00:14:52,809
few attacks and then we'll see whether

274
00:14:47,920 --> 00:14:56,889
24 hours really makes sense so yeah

275
00:14:52,809 --> 00:15:00,969
let's talk about the tax rate I want to

276
00:14:56,889 --> 00:15:05,170
talk about three different attacks so

277
00:15:00,970 --> 00:15:09,160
this you probably recognize Carla

278
00:15:05,170 --> 00:15:12,279
Johnson right from Avengers yeah so this

279
00:15:09,160 --> 00:15:14,620
is an image file so in this attack

280
00:15:12,279 --> 00:15:18,850
somebody uploaded image of Scarlett

281
00:15:14,620 --> 00:15:22,269
Johnson and it got stored in the

282
00:15:18,850 --> 00:15:24,899
database Postgres sequel and that

283
00:15:22,269 --> 00:15:28,000
database had a Metasploit module enabled

284
00:15:24,899 --> 00:15:30,160
so you cannot see it in the image but

285
00:15:28,000 --> 00:15:32,410
there is a binary code somewhere near

286
00:15:30,160 --> 00:15:34,329
the left half right so basically what

287
00:15:32,410 --> 00:15:37,839
happened is when the payload came in and

288
00:15:34,329 --> 00:15:41,349
when it got stored the Metasploit module

289
00:15:37,839 --> 00:15:43,300
and behind that there is Linux and there

290
00:15:41,350 --> 00:15:45,819
is a software called data duplicator in

291
00:15:43,300 --> 00:15:48,729
the next that actually extracted some of

292
00:15:45,819 --> 00:15:51,490
the binary components and made a call to

293
00:15:48,730 --> 00:15:54,670
a command-and-control server to download

294
00:15:51,490 --> 00:15:56,470
another image which then led to data

295
00:15:54,670 --> 00:15:56,930
exfiltration so the data from the

296
00:15:56,470 --> 00:15:59,420
readable

297
00:15:56,930 --> 00:16:03,609
is gone so what happened in this case

298
00:15:59,420 --> 00:16:06,469
was it actually evaded all of the AV

299
00:16:03,610 --> 00:16:09,470
scans that would typically run on end

300
00:16:06,470 --> 00:16:12,950
points or the server's right so that's

301
00:16:09,470 --> 00:16:16,160
one example now let's take this image

302
00:16:12,950 --> 00:16:18,500
file and run it through widest total see

303
00:16:16,160 --> 00:16:21,770
what what it gives us

304
00:16:18,500 --> 00:16:25,820
so if you see at the top so this is

305
00:16:21,770 --> 00:16:28,490
virustotal result from you know 67

306
00:16:25,820 --> 00:16:31,820
different engines that look for

307
00:16:28,490 --> 00:16:35,660
malicious URL right only one engine out

308
00:16:31,820 --> 00:16:38,209
of 67 detected it's malicious and and

309
00:16:35,660 --> 00:16:40,100
it's at that time stamp right it it

310
00:16:38,209 --> 00:16:42,500
would have changed over time there are

311
00:16:40,100 --> 00:16:44,720
better signatures available in each of

312
00:16:42,500 --> 00:16:46,850
these engines so it will marry and if

313
00:16:44,720 --> 00:16:49,670
you look at every engine detection for

314
00:16:46,850 --> 00:16:52,730
that image file only three engines had a

315
00:16:49,670 --> 00:16:56,630
signature that detected a variant or a

316
00:16:52,730 --> 00:16:59,029
mutex of that file so order 58 only

317
00:16:56,630 --> 00:17:02,360
three Avery engines are affected so what

318
00:16:59,029 --> 00:17:04,579
it really tells us is av engines are

319
00:17:02,360 --> 00:17:06,260
effective as long as you have the

320
00:17:04,579 --> 00:17:10,790
signatures for it right so even though

321
00:17:06,260 --> 00:17:13,220
we threw a lot of av engines at it it's

322
00:17:10,790 --> 00:17:16,209
probably going to fail depending on the

323
00:17:13,220 --> 00:17:16,209
vector we are looking at

324
00:17:18,130 --> 00:17:23,199
okay so the next one I don't know how

325
00:17:21,640 --> 00:17:27,459
many of you know there is a library

326
00:17:23,199 --> 00:17:30,730
called imagemagick this is a open source

327
00:17:27,459 --> 00:17:35,559
library that you can include in your web

328
00:17:30,730 --> 00:17:37,360
app and it allows someone to edit and

329
00:17:35,559 --> 00:17:39,309
create form

330
00:17:37,360 --> 00:17:44,699
you know files on the fly within the web

331
00:17:39,309 --> 00:17:47,710
app so this had a vulnerability in 2016

332
00:17:44,700 --> 00:17:51,700
there was a very popular attack called

333
00:17:47,710 --> 00:17:53,620
image tragic and what they did was there

334
00:17:51,700 --> 00:17:57,580
a bunch of CVS but if you look at it

335
00:17:53,620 --> 00:18:00,668
they have image files like PNG file that

336
00:17:57,580 --> 00:18:02,860
they run through image magic and that

337
00:18:00,669 --> 00:18:05,440
those files had an exploit which will

338
00:18:02,860 --> 00:18:08,469
then impact the underlying server so

339
00:18:05,440 --> 00:18:10,780
they executed a PowerShell script did a

340
00:18:08,470 --> 00:18:14,909
remote command injection into the server

341
00:18:10,780 --> 00:18:17,530
etc so this is again to highlight a

342
00:18:14,909 --> 00:18:20,280
vulnerability through a file upload that

343
00:18:17,530 --> 00:18:24,190
happens at the library right it's at

344
00:18:20,280 --> 00:18:33,490
application level where something is

345
00:18:24,190 --> 00:18:36,820
exploited so the third example this is

346
00:18:33,490 --> 00:18:41,110
kind of very you know popular in the

347
00:18:36,820 --> 00:18:43,270
sense that Java scripts right they they

348
00:18:41,110 --> 00:18:46,870
could be embedded in PDF and that's one

349
00:18:43,270 --> 00:18:49,000
of the popular mechanisms or vehicles by

350
00:18:46,870 --> 00:18:52,209
which attackers like to deliver the

351
00:18:49,000 --> 00:18:54,549
payload so if you have a web app you do

352
00:18:52,210 --> 00:18:56,740
the baseline and you make sure you're

353
00:18:54,549 --> 00:19:00,120
clearing the OWASP top 10 attacks but

354
00:18:56,740 --> 00:19:03,309
there are cases where web apps can have

355
00:19:00,120 --> 00:19:05,110
exercise for example right maybe some

356
00:19:03,309 --> 00:19:08,379
someone did a good change and they do

357
00:19:05,110 --> 00:19:11,439
not check something this type of attack

358
00:19:08,380 --> 00:19:13,360
can leverage that vulnerability in the

359
00:19:11,440 --> 00:19:16,990
application layer so if you have a web

360
00:19:13,360 --> 00:19:19,750
app that is vulnerable to exercise if

361
00:19:16,990 --> 00:19:23,610
you deliver a PDF or the JavaScript with

362
00:19:19,750 --> 00:19:27,040
that can basically reflect and you know

363
00:19:23,610 --> 00:19:28,969
you execute that JavaScript and attack

364
00:19:27,040 --> 00:19:32,600
that web application

365
00:19:28,970 --> 00:19:36,830
I think that that's pretty much it so

366
00:19:32,600 --> 00:19:41,030
and this is the main point I want to

367
00:19:36,830 --> 00:19:43,389
convey today right you know if you look

368
00:19:41,030 --> 00:19:46,639
at all the attacks we have looked at

369
00:19:43,390 --> 00:19:49,190
endpoint protection or AV scanning at

370
00:19:46,640 --> 00:19:51,290
the server level is not really very

371
00:19:49,190 --> 00:19:53,690
helpful and if you look at the

372
00:19:51,290 --> 00:19:56,899
traditional protection mechanisms we

373
00:19:53,690 --> 00:19:59,870
have all of them made a focus on you

374
00:19:56,900 --> 00:20:02,240
know server based AV detection or laptop

375
00:19:59,870 --> 00:20:07,239
based endpoint detection if a file comes

376
00:20:02,240 --> 00:20:07,240
through right so what do we do about it

377
00:20:07,690 --> 00:20:15,650
so I think having a submission based

378
00:20:12,880 --> 00:20:19,130
automated analysis system it's a good

379
00:20:15,650 --> 00:20:21,350
way to take the files in when I say

380
00:20:19,130 --> 00:20:24,170
submission based analysis system it is

381
00:20:21,350 --> 00:20:26,750
pre execution so when the file is in the

382
00:20:24,170 --> 00:20:29,780
flight and it's coming through the web

383
00:20:26,750 --> 00:20:32,780
application you have this automated

384
00:20:29,780 --> 00:20:36,379
analysis system that does a check on the

385
00:20:32,780 --> 00:20:38,860
file and then accepts only you know

386
00:20:36,380 --> 00:20:41,690
benign files and we'll talk about

387
00:20:38,860 --> 00:20:43,340
different set of controls that that come

388
00:20:41,690 --> 00:20:49,390
into play right in this sort of a

389
00:20:43,340 --> 00:20:51,889
submission based system so before we

390
00:20:49,390 --> 00:20:54,290
architect I think the first step would

391
00:20:51,890 --> 00:20:56,780
be to define the goals so what do we

392
00:20:54,290 --> 00:21:01,129
want this submission based analysis

393
00:20:56,780 --> 00:21:03,230
system to do and at the core we have to

394
00:21:01,130 --> 00:21:06,380
define how much it needs to tell us

395
00:21:03,230 --> 00:21:09,770
right so if someone is coming in but

396
00:21:06,380 --> 00:21:14,390
there are B okay to kind of say hey this

397
00:21:09,770 --> 00:21:17,300
file or this person is checked and we

398
00:21:14,390 --> 00:21:19,790
know Chuck is either bad or good it

399
00:21:17,300 --> 00:21:23,450
starts efficient or do we want to know

400
00:21:19,790 --> 00:21:27,050
what is this wait what is is height and

401
00:21:23,450 --> 00:21:29,750
what is DNA result for example right so

402
00:21:27,050 --> 00:21:33,010
that is the first step you would want to

403
00:21:29,750 --> 00:21:36,050
design or this I mean define based on

404
00:21:33,010 --> 00:21:37,310
the environment that you have and the

405
00:21:36,050 --> 00:21:41,690
other controls you have in the

406
00:21:37,310 --> 00:21:43,070
environment and also when we start

407
00:21:41,690 --> 00:21:45,210
designing solution as

408
00:21:43,070 --> 00:21:48,810
important to look at the customer we

409
00:21:45,210 --> 00:21:52,260
cannot just block PDFs because they have

410
00:21:48,810 --> 00:21:54,510
malicious URLs or embedded scripts so

411
00:21:52,260 --> 00:21:58,410
it's really important to ask questions

412
00:21:54,510 --> 00:22:01,110
to the web applications on who the users

413
00:21:58,410 --> 00:22:04,080
are who upload the file what are the

414
00:22:01,110 --> 00:22:07,740
formats what are the valid business file

415
00:22:04,080 --> 00:22:10,679
formats the application will need and

416
00:22:07,740 --> 00:22:12,660
also talk about the file size and the

417
00:22:10,680 --> 00:22:15,690
traffic that the application really

418
00:22:12,660 --> 00:22:19,020
wants and depending on that you would

419
00:22:15,690 --> 00:22:21,240
then decide what enforcement can be done

420
00:22:19,020 --> 00:22:23,520
on the application side can you enforce

421
00:22:21,240 --> 00:22:27,180
you know a particular file type

422
00:22:23,520 --> 00:22:29,490
whitelist or can you enforce a

423
00:22:27,180 --> 00:22:32,160
synchronous versus synchronous calls

424
00:22:29,490 --> 00:22:36,270
what will the user do if a file is being

425
00:22:32,160 --> 00:22:39,870
scanned for example right and then you

426
00:22:36,270 --> 00:22:41,490
can also think about risky file types

427
00:22:39,870 --> 00:22:44,489
and see whether the application really

428
00:22:41,490 --> 00:22:48,290
needs them or is there a way to you know

429
00:22:44,490 --> 00:22:48,290
kind of blacklist those type of files

430
00:22:48,350 --> 00:22:58,110
okay so putting it together right so

431
00:22:54,960 --> 00:23:01,530
these are kind of the eight steps in a

432
00:22:58,110 --> 00:23:04,560
sequence that I think would help secure

433
00:23:01,530 --> 00:23:06,420
a file upload so one the first thing

434
00:23:04,560 --> 00:23:08,070
before something's accepted we would

435
00:23:06,420 --> 00:23:10,790
want to authenticate and authorize the

436
00:23:08,070 --> 00:23:13,409
user right we thought without

437
00:23:10,790 --> 00:23:15,450
authorizing we don't want some anyone in

438
00:23:13,410 --> 00:23:18,060
the internet to all our files to be

439
00:23:15,450 --> 00:23:19,950
uploaded and then number two there

440
00:23:18,060 --> 00:23:21,960
should be a set of validation or

441
00:23:19,950 --> 00:23:24,840
enforcement based on the surface

442
00:23:21,960 --> 00:23:27,000
analysis of the file that ties back into

443
00:23:24,840 --> 00:23:29,669
the business case of the application to

444
00:23:27,000 --> 00:23:34,350
say you know this application can accept

445
00:23:29,670 --> 00:23:37,770
XY and z but not other type of files and

446
00:23:34,350 --> 00:23:41,730
the third always and you know every time

447
00:23:37,770 --> 00:23:45,110
unpack the file for analysis and analyze

448
00:23:41,730 --> 00:23:48,180
after unpacking it and number four

449
00:23:45,110 --> 00:23:52,229
utilize the AV engines though they have

450
00:23:48,180 --> 00:23:54,810
drawbacks it helps you know get that

451
00:23:52,230 --> 00:23:55,970
first opinion on whether that file is

452
00:23:54,810 --> 00:23:57,830
bad or not

453
00:23:55,970 --> 00:24:00,710
and it's good to have a mixture of Av

454
00:23:57,830 --> 00:24:03,620
engines a mixture of technology that

455
00:24:00,710 --> 00:24:07,460
does it based on signature versus

456
00:24:03,620 --> 00:24:12,439
machine learning based algorithms number

457
00:24:07,460 --> 00:24:14,360
five sanitize the file meaning if there

458
00:24:12,440 --> 00:24:16,509
is a Java Script in a PDF

459
00:24:14,360 --> 00:24:19,158
there is no reason an application needs

460
00:24:16,509 --> 00:24:22,070
javascript in opinions right so sanitize

461
00:24:19,159 --> 00:24:25,610
those malicious you know embedded

462
00:24:22,070 --> 00:24:28,668
objects in the file number six randomize

463
00:24:25,610 --> 00:24:32,269
the file name anything that the user

464
00:24:28,669 --> 00:24:34,519
sends in is untrusted it's not going to

465
00:24:32,269 --> 00:24:37,820
be easy always but you could start with

466
00:24:34,519 --> 00:24:41,149
something like a hash of the file name

467
00:24:37,820 --> 00:24:42,710
for example and then return a generic

468
00:24:41,149 --> 00:24:45,439
error we don't want to say it without

469
00:24:42,710 --> 00:24:47,419
attacker here you uploaded a PDF and

470
00:24:45,440 --> 00:24:50,240
three of my engines detected it's bad

471
00:24:47,419 --> 00:24:52,100
when you keep it straight and say you

472
00:24:50,240 --> 00:24:55,759
know this file is not accepted by the

473
00:24:52,100 --> 00:24:57,678
system and the number eight is very

474
00:24:55,759 --> 00:25:00,620
important whatever the submission based

475
00:24:57,679 --> 00:25:02,929
analysis system does is a primary check

476
00:25:00,620 --> 00:25:04,908
you would want a secondary check where

477
00:25:02,929 --> 00:25:07,070
you try add you have your reverse

478
00:25:04,909 --> 00:25:10,429
engineering and malware analysis team

479
00:25:07,070 --> 00:25:11,928
look at the file D compile it and do the

480
00:25:10,429 --> 00:25:18,169
second level of analysis and

481
00:25:11,929 --> 00:25:20,269
investigation now to the scaling part so

482
00:25:18,169 --> 00:25:24,799
if you tie tie this back to the question

483
00:25:20,269 --> 00:25:27,769
I had initially write how recent should

484
00:25:24,799 --> 00:25:32,389
the analysis results be for us to a

485
00:25:27,769 --> 00:25:34,610
lower file so if you look at the web

486
00:25:32,389 --> 00:25:36,949
applications today a lot of time access

487
00:25:34,610 --> 00:25:39,258
files through api's there are web

488
00:25:36,950 --> 00:25:44,179
services where somebody could write a

489
00:25:39,259 --> 00:25:46,250
bot to upload a file and typically there

490
00:25:44,179 --> 00:25:48,919
are no restrictions right somebody could

491
00:25:46,250 --> 00:25:50,659
upload you know 30 files in a second for

492
00:25:48,919 --> 00:25:53,960
example so there is high frequency of

493
00:25:50,659 --> 00:25:58,460
file uploads and the submission based on

494
00:25:53,960 --> 00:26:00,740
ours needs to churn out and result in a

495
00:25:58,460 --> 00:26:04,610
defined time right again that could

496
00:26:00,740 --> 00:26:06,559
depend on what your application flow is

497
00:26:04,610 --> 00:26:09,229
if you want to have a synchronous flow

498
00:26:06,559 --> 00:26:12,830
allow your user or client to do some

499
00:26:09,230 --> 00:26:14,720
thing else while this is working there

500
00:26:12,830 --> 00:26:17,270
are popular email systems that do that

501
00:26:14,720 --> 00:26:19,280
right Gmail for example allows the user

502
00:26:17,270 --> 00:26:21,770
to do something else while the file is

503
00:26:19,280 --> 00:26:25,070
being uploaded so that's something it

504
00:26:21,770 --> 00:26:28,160
could think about so to her point 24

505
00:26:25,070 --> 00:26:31,189
hours could probably mean or make sense

506
00:26:28,160 --> 00:26:34,850
to you depending on your use case but

507
00:26:31,190 --> 00:26:40,250
what's harder is handling this high

508
00:26:34,850 --> 00:26:43,070
frequency right I mean you have 86,400

509
00:26:40,250 --> 00:26:46,730
seconds in a day and let's say you're

510
00:26:43,070 --> 00:26:48,290
getting 100k files that's what one file

511
00:26:46,730 --> 00:26:52,010
that you'll have to churn out from the

512
00:26:48,290 --> 00:26:56,030
analysis every second right and if you

513
00:26:52,010 --> 00:26:59,120
have 10 minutes for the scan time it's

514
00:26:56,030 --> 00:27:01,040
going to mean 10 minutes is 600 seconds

515
00:26:59,120 --> 00:27:04,010
so it means that you would probably want

516
00:27:01,040 --> 00:27:08,030
to have 600 VMs working in parallel to

517
00:27:04,010 --> 00:27:11,629
churn out 100k files in one second which

518
00:27:08,030 --> 00:27:13,490
is which is huge right so we have to

519
00:27:11,630 --> 00:27:16,910
think about whether it makes sense to

520
00:27:13,490 --> 00:27:19,970
scale horizontally or be scale

521
00:27:16,910 --> 00:27:23,030
vertically have more CPU cores for

522
00:27:19,970 --> 00:27:26,299
example have processing in different

523
00:27:23,030 --> 00:27:28,070
servers so that it doesn't fail and also

524
00:27:26,299 --> 00:27:29,900
we have to think about queue management

525
00:27:28,070 --> 00:27:32,620
how do you place the files in the queue

526
00:27:29,900 --> 00:27:35,990
when it comes through whether it will be

527
00:27:32,620 --> 00:27:38,439
based on the file size the priority and

528
00:27:35,990 --> 00:27:41,230
whatnot so these are just the

529
00:27:38,440 --> 00:27:44,030
considerations that you want to take

530
00:27:41,230 --> 00:27:46,640
there is no one-size-fits-all like I

531
00:27:44,030 --> 00:27:49,010
said but this would be the top

532
00:27:46,640 --> 00:27:50,900
considerations as you try to scale this

533
00:27:49,010 --> 00:27:53,860
automated analysis system and make it

534
00:27:50,900 --> 00:27:57,860
work for your business use case so

535
00:27:53,860 --> 00:28:01,010
streaming is very hard to analyze why do

536
00:27:57,860 --> 00:28:03,879
you need the entire file so you would

537
00:28:01,010 --> 00:28:07,549
have to stream it to a central location

538
00:28:03,880 --> 00:28:09,679
Club it together as a file and then send

539
00:28:07,549 --> 00:28:11,690
that file for analysis otherwise we are

540
00:28:09,679 --> 00:28:14,660
looking at bits and pieces of

541
00:28:11,690 --> 00:28:16,610
information and the submission on our

542
00:28:14,660 --> 00:28:18,350
system or molar processing technique is

543
00:28:16,610 --> 00:28:19,649
probably going to miss a different

544
00:28:18,350 --> 00:28:24,189
factor

545
00:28:19,650 --> 00:28:27,250
yeah I think irrespective of whether

546
00:28:24,190 --> 00:28:30,790
this HTTP or other protocols like SFTP

547
00:28:27,250 --> 00:28:34,600
right we need to look at what are the

548
00:28:30,790 --> 00:28:37,629
different delivery methods and then try

549
00:28:34,600 --> 00:28:39,490
to see the file as a whole and then

550
00:28:37,630 --> 00:28:45,750
analyze the file as a whole before

551
00:28:39,490 --> 00:28:49,540
accepting it so it would apply for SFTP

552
00:28:45,750 --> 00:28:51,660
so it depends on the user base right so

553
00:28:49,540 --> 00:28:54,909
if it's an internet facing application

554
00:28:51,660 --> 00:28:58,300
and if it's allowing a user to sign up

555
00:28:54,910 --> 00:29:00,430
based on email basically anyone in the

556
00:28:58,300 --> 00:29:02,919
world can do that right if you have your

557
00:29:00,430 --> 00:29:03,490
gmail account he can sign in create

558
00:29:02,920 --> 00:29:05,260
account

559
00:29:03,490 --> 00:29:08,530
he still authenticated an authorized

560
00:29:05,260 --> 00:29:10,810
user but the risk level is higher so

561
00:29:08,530 --> 00:29:14,050
you'd want to define who the user base

562
00:29:10,810 --> 00:29:17,230
is and then put in a set of controls

563
00:29:14,050 --> 00:29:19,600
based on that and and that could vary

564
00:29:17,230 --> 00:29:22,510
depending on okay I'm allowing only one

565
00:29:19,600 --> 00:29:25,959
file to be uploaded by this user for the

566
00:29:22,510 --> 00:29:29,110
entire lifecycle rain or if he is based

567
00:29:25,960 --> 00:29:31,060
out of a very risky region of the world

568
00:29:29,110 --> 00:29:34,209
I would want to scan a file so it

569
00:29:31,060 --> 00:29:37,030
actually varies right right yeah that's

570
00:29:34,210 --> 00:29:39,670
that's perfect example right in the

571
00:29:37,030 --> 00:29:43,000
container world you can spin up on

572
00:29:39,670 --> 00:29:44,740
demand run a file and then throw it away

573
00:29:43,000 --> 00:29:47,230
if you don't want that's that's going to

574
00:29:44,740 --> 00:29:49,530
be very useful I think that'll be very

575
00:29:47,230 --> 00:29:52,210
useful but you want to keep in mind that

576
00:29:49,530 --> 00:29:54,879
spinning up that VM and running that

577
00:29:52,210 --> 00:29:57,640
analysis will probably take you say 10

578
00:29:54,880 --> 00:29:59,620
minutes you want to see how the users

579
00:29:57,640 --> 00:30:03,250
would react or what the users would do

580
00:29:59,620 --> 00:30:05,739
in that meantime all right I'm going to

581
00:30:03,250 --> 00:30:07,840
be here if you want to talk to or you

582
00:30:05,740 --> 00:30:10,660
know a chat about anything otherwise

583
00:30:07,840 --> 00:30:12,740
thanks for taking the time it was good

584
00:30:10,660 --> 00:30:14,800
talking to

585
00:30:12,740 --> 00:30:14,800
you

586
00:30:24,610 --> 00:30:26,669
you

