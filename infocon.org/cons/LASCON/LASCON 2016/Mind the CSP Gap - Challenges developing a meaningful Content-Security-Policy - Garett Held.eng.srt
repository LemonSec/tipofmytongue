1
00:00:02,990 --> 00:00:18,989
[Music]

2
00:00:19,090 --> 00:00:28,250
thank you<font color="#E5E5E5"> all right thank you everyone</font>

3
00:00:24,320 --> 00:00:29,990
so I'm here as she mentioned to talk

4
00:00:28,250 --> 00:00:31,640
about the content security policy and

5
00:00:29,990 --> 00:00:34,670
some of the challenges I've seen both as

6
00:00:31,640 --> 00:00:38,630
a vendor who consumes the reports and

7
00:00:34,670 --> 00:00:41,090
does some analysis as well as a security

8
00:00:38,630 --> 00:00:43,100
leader for several acquisitions of a

9
00:00:41,090 --> 00:00:47,230
large software company and trying to get

10
00:00:43,100 --> 00:00:49,640
<font color="#E5E5E5">them</font><font color="#CCCCCC"> to include</font><font color="#E5E5E5"> that CSP header as well</font>

11
00:00:47,230 --> 00:00:52,849
so<font color="#E5E5E5"> I'm not going to go over re on the</font>

12
00:00:49,640 --> 00:00:54,380
the CSP RFC and all the different trivia

13
00:00:52,850 --> 00:00:55,640
things there are a few good<font color="#E5E5E5"> talks out</font>

14
00:00:54,380 --> 00:00:58,400
there what I really want<font color="#CCCCCC"> to do is talk</font>

15
00:00:55,640 --> 00:01:01,400
about<font color="#E5E5E5"> the the process</font><font color="#CCCCCC"> and some of the</font>

16
00:00:58,400 --> 00:01:04,069
tools that we've<font color="#E5E5E5"> been using to help get</font>

17
00:01:01,400 --> 00:01:05,600
that process started and make sure<font color="#CCCCCC"> that</font>

18
00:01:04,069 --> 00:01:08,539
<font color="#CCCCCC">you don't fall into some of the</font><font color="#E5E5E5"> pitfalls</font>

19
00:01:05,600 --> 00:01:12,740
<font color="#E5E5E5">that we have before too so i make over a</font>

20
00:01:08,540 --> 00:01:14,210
brief refresher of CSP you know how to

21
00:01:12,740 --> 00:01:16,490
<font color="#E5E5E5">make a case for CSP inside your</font>

22
00:01:14,210 --> 00:01:17,960
organization how to approach the

23
00:01:16,490 --> 00:01:20,750
different teams about content security

24
00:01:17,960 --> 00:01:23,000
policy some things we've done to make

25
00:01:20,750 --> 00:01:24,860
the reports more<font color="#E5E5E5"> valuable at first you</font>

26
00:01:23,000 --> 00:01:29,600
know analysis and some big data stuff

27
00:01:24,860 --> 00:01:31,700
and how to track your progress when

28
00:01:29,600 --> 00:01:33,919
you're<font color="#E5E5E5"> not seeing inline scripts because</font>

29
00:01:31,700 --> 00:01:35,869
that's a big one<font color="#E5E5E5"> that comes back is hey</font>

30
00:01:33,920 --> 00:01:37,610
just add nonces everywhere well how do I

31
00:01:35,869 --> 00:01:39,920
know<font color="#E5E5E5"> what you know what inline scripts</font>

32
00:01:37,610 --> 00:01:41,569
are there and the legacy applications so

33
00:01:39,920 --> 00:01:43,209
we're going to be open sourcing a piece

34
00:01:41,569 --> 00:01:46,069
of software that will help you do that

35
00:01:43,209 --> 00:01:47,270
and then<font color="#E5E5E5"> some neat CSP tricks that I've</font>

36
00:01:46,069 --> 00:01:49,940
<font color="#E5E5E5">done that you may or may not find</font>

37
00:01:47,270 --> 00:01:53,119
interesting but could help<font color="#E5E5E5"> with the</font>

38
00:01:49,940 --> 00:01:55,069
analysis as well and then some thoughts

39
00:01:53,119 --> 00:01:56,630
on the Google research CSP research

40
00:01:55,069 --> 00:01:58,700
paper which came<font color="#E5E5E5"> out shortly after i</font>

41
00:01:56,630 --> 00:02:00,949
submitted this talk so it's pretty good

42
00:01:58,700 --> 00:02:02,470
timing but<font color="#CCCCCC"> I agree with some of the</font>

43
00:02:00,950 --> 00:02:05,450
stuff and disagree with a<font color="#E5E5E5"> little bit of</font>

44
00:02:02,470 --> 00:02:09,709
the conclusions but if we have some time

45
00:02:05,450 --> 00:02:11,810
we'll go over that as well it's a<font color="#E5E5E5"> little</font>

46
00:02:09,709 --> 00:02:15,110
bit about me i work 40 saw do<font color="#E5E5E5"> we're</font>

47
00:02:11,810 --> 00:02:17,930
doing<font color="#E5E5E5"> rasa pipe work along</font><font color="#CCCCCC"> with laughs</font>

48
00:02:15,110 --> 00:02:21,349
type signals<font color="#E5E5E5"> i'm trying to combine the</font>

49
00:02:17,930 --> 00:02:24,349
best of both<font color="#E5E5E5"> of those worlds to develop</font>

50
00:02:21,349 --> 00:02:26,750
a picture of what an attack is<font color="#E5E5E5"> you know</font>

51
00:02:24,349 --> 00:02:28,578
a better confidence and that an attack

52
00:02:26,750 --> 00:02:30,170
is happening and so content security

53
00:02:28,579 --> 00:02:31,880
policy as part of that

54
00:02:30,170 --> 00:02:34,369
yes you know what resources are being

55
00:02:31,880 --> 00:02:38,120
loaded from where and if new inline

56
00:02:34,370 --> 00:02:39,950
scripts are showing up in the page prior

57
00:02:38,120 --> 00:02:41,840
to that I've been working as a developer

58
00:02:39,950 --> 00:02:44,420
I've been a consultant and a pen tester

59
00:02:41,840 --> 00:02:46,959
and have worked in the product security

60
00:02:44,420 --> 00:02:50,299
team<font color="#E5E5E5"> at Salesforce and then moved to</font>

61
00:02:46,959 --> 00:02:52,160
direct their acquisitions of different

62
00:02:50,300 --> 00:02:54,350
<font color="#E5E5E5">companies so I got to work with</font><font color="#CCCCCC"> you know</font>

63
00:02:52,160 --> 00:02:58,970
a bunch of<font color="#CCCCCC"> different startups sized</font><font color="#E5E5E5"> you</font>

64
00:02:54,350 --> 00:03:00,349
know 10 people to 2,000 people and bring

65
00:02:58,970 --> 00:03:01,580
their security up to the<font color="#CCCCCC"> Salesforce</font>

66
00:03:00,349 --> 00:03:06,679
standard so that's been really

67
00:03:01,580 --> 00:03:09,200
interesting as<font color="#E5E5E5"> well so introduction so</font>

68
00:03:06,680 --> 00:03:10,940
if I who here is familiar with content

69
00:03:09,200 --> 00:03:12,290
security policy if you're spending your

70
00:03:10,940 --> 00:03:16,280
lunch hour here with me then yeah

71
00:03:12,290 --> 00:03:17,690
probably i hope it's a it's a response

72
00:03:16,280 --> 00:03:19,250
header its trucks the browser you know

73
00:03:17,690 --> 00:03:21,470
where it can load resources from and

74
00:03:19,250 --> 00:03:23,780
restricts and things like the eval

75
00:03:21,470 --> 00:03:25,940
function it's really<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> I think of</font>

76
00:03:23,780 --> 00:03:27,830
<font color="#E5E5E5">it as bouncer it's it's going to tell</font>

77
00:03:25,940 --> 00:03:30,319
the browser what you know what things

78
00:03:27,830 --> 00:03:34,519
can be<font color="#E5E5E5"> loaded in there and what the page</font>

79
00:03:30,319 --> 00:03:37,160
can load I comes in sets of directives

80
00:03:34,519 --> 00:03:39,459
and then sources keywords hashes and<font color="#CCCCCC"> on</font>

81
00:03:37,160 --> 00:03:41,480
<font color="#CCCCCC">Susan will cover some examples of that</font>

82
00:03:39,459 --> 00:03:43,160
however<font color="#E5E5E5"> we</font><font color="#CCCCCC"> will not go into all the</font>

83
00:03:41,480 --> 00:03:45,140
directives as I said this is<font color="#E5E5E5"> not a deep</font>

84
00:03:43,160 --> 00:03:47,180
dive into<font color="#E5E5E5"> all of these but as you can</font>

85
00:03:45,140 --> 00:03:52,100
see there<font color="#CCCCCC"> are lots of things you can</font><font color="#E5E5E5"> do</font>

86
00:03:47,180 --> 00:03:54,320
to tune the content security policy so

87
00:03:52,100 --> 00:03:55,910
this<font color="#CCCCCC"> is a very simple example here we</font>

88
00:03:54,320 --> 00:03:57,650
<font color="#CCCCCC">have a Content security policy header</font>

89
00:03:55,910 --> 00:03:59,000
returned and it says you know if

90
00:03:57,650 --> 00:04:01,489
<font color="#E5E5E5">something floated from the same domain</font>

91
00:03:59,000 --> 00:04:03,560
of the application resources loaded from

92
00:04:01,489 --> 00:04:06,019
that URL or it's loaded from a subdomain

93
00:04:03,560 --> 00:04:08,480
of example com then it can load it

94
00:04:06,019 --> 00:04:12,140
anything<font color="#CCCCCC"> else that's emitted it's going</font>

95
00:04:08,480 --> 00:04:15,709
to deny so on tape in line unsafe evo<font color="#E5E5E5"> or</font>

96
00:04:12,140 --> 00:04:18,500
another domain it won't be loud and CSP

97
00:04:15,709 --> 00:04:20,899
one if we wanted to<font color="#CCCCCC"> add an inline script</font>

98
00:04:18,500 --> 00:04:23,330
<font color="#E5E5E5">we'd have to add unsafe inline which</font>

99
00:04:20,899 --> 00:04:25,250
sounds<font color="#CCCCCC"> really bad</font><font color="#E5E5E5"> because it is and so</font>

100
00:04:23,330 --> 00:04:27,349
this talk is<font color="#E5E5E5"> going to cover some ways we</font>

101
00:04:25,250 --> 00:04:31,880
can get around<font color="#E5E5E5"> that and move away from</font>

102
00:04:27,350 --> 00:04:35,270
it if we use some other directive like

103
00:04:31,880 --> 00:04:38,210
font source what will happen<font color="#CCCCCC"> is you know</font>

104
00:04:35,270 --> 00:04:40,130
it only applied to the font so in our

105
00:04:38,210 --> 00:04:41,479
previous example the scripts can be

106
00:04:40,130 --> 00:04:44,150
loaded<font color="#CCCCCC"> from anywhere now</font>

107
00:04:41,480 --> 00:04:50,090
so if you omit a directive that means

108
00:04:44,150 --> 00:04:52,130
<font color="#E5E5E5">it's globally allowed and then there's</font>

109
00:04:50,090 --> 00:04:55,489
the report only mode which is<font color="#E5E5E5"> extremely</font>

110
00:04:52,130 --> 00:04:58,240
useful for tuning these CSP reports so

111
00:04:55,490 --> 00:05:00,620
in this example we send the reports to

112
00:04:58,240 --> 00:05:03,530
example.com CSP airport so it's going to

113
00:05:00,620 --> 00:05:05,240
post a JSON report there and<font color="#E5E5E5"> we'll dig</font>

114
00:05:03,530 --> 00:05:08,960
into some of the report differences from

115
00:05:05,240 --> 00:05:10,430
the different processors as well and one

116
00:05:08,960 --> 00:05:14,539
of<font color="#E5E5E5"> the things that's useful into making</font>

117
00:05:10,430 --> 00:05:15,890
backwards compatible CSP policies is the

118
00:05:14,540 --> 00:05:17,870
fact that<font color="#E5E5E5"> it just ignores unknown</font>

119
00:05:15,890 --> 00:05:19,099
keywords so if you have some<font color="#E5E5E5"> keyword</font>

120
00:05:17,870 --> 00:05:21,200
that doesn't make any<font color="#CCCCCC"> sense to the</font>

121
00:05:19,100 --> 00:05:22,670
current CSP version it's just going<font color="#E5E5E5"> to</font>

122
00:05:21,200 --> 00:05:24,710
ignore that and we'll see some

123
00:05:22,670 --> 00:05:27,320
strategies for how to use<font color="#CCCCCC"> that to create</font>

124
00:05:24,710 --> 00:05:29,659
a policy that's meaningful to the CSP 1c

125
00:05:27,320 --> 00:05:36,469
sp2 and CSP three all in different ways

126
00:05:29,660 --> 00:05:37,970
and<font color="#CCCCCC"> so what are some of the technologies</font>

127
00:05:36,470 --> 00:05:40,070
that we've run into so there<font color="#E5E5E5"> are a</font>

128
00:05:37,970 --> 00:05:42,200
couple types there's the technical so

129
00:05:40,070 --> 00:05:44,420
the<font color="#E5E5E5"> browsers report violations</font>

130
00:05:42,200 --> 00:05:46,250
differently so we'll go through chrome

131
00:05:44,420 --> 00:05:48,920
firefox and safari and some of the

132
00:05:46,250 --> 00:05:50,660
differences there there's going<font color="#CCCCCC"> to have</font>

133
00:05:48,920 --> 00:05:52,190
you know if you have legacy applications

134
00:05:50,660 --> 00:05:54,170
there's a ton of inline scripts so you

135
00:05:52,190 --> 00:05:56,210
have to know what to do with those and

136
00:05:54,170 --> 00:05:58,580
know where they are<font color="#CCCCCC"> and then you could</font>

137
00:05:56,210 --> 00:06:01,159
<font color="#E5E5E5">have hundreds of sources across sites so</font>

138
00:05:58,580 --> 00:06:03,200
we've run into teams that said<font color="#CCCCCC"> no it's</font>

139
00:06:01,160 --> 00:06:05,810
<font color="#E5E5E5">okay we use frameworks</font><font color="#CCCCCC"> to make sure that</font>

140
00:06:03,200 --> 00:06:09,550
we're encoding the output<font color="#E5E5E5"> okay we add</font>

141
00:06:05,810 --> 00:06:12,470
<font color="#CCCCCC">you know CSP and they're also including</font>

142
00:06:09,550 --> 00:06:15,200
<font color="#E5E5E5">JavaScript from you know 200 different</font>

143
00:06:12,470 --> 00:06:18,350
domains that's a security problem in and

144
00:06:15,200 --> 00:06:19,909
of itself and then there's the cultural

145
00:06:18,350 --> 00:06:21,350
stuff which is<font color="#E5E5E5"> when you go to tech ops</font>

146
00:06:19,910 --> 00:06:23,060
and say hey we need to<font color="#CCCCCC"> add this header</font>

147
00:06:21,350 --> 00:06:25,160
or the development teams we need to add

148
00:06:23,060 --> 00:06:26,990
this header like how do we convince them

149
00:06:25,160 --> 00:06:29,230
that<font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> just a nice to have what</font>

150
00:06:26,990 --> 00:06:31,520
<font color="#E5E5E5">weather drivers can we have for this and</font>

151
00:06:29,230 --> 00:06:34,760
it's difficult<font color="#E5E5E5"> to coordinate across</font>

152
00:06:31,520 --> 00:06:36,799
teams as well so if we<font color="#CCCCCC"> have somebody we</font>

153
00:06:34,760 --> 00:06:38,360
need to work with<font color="#CCCCCC"> to consume the reports</font>

154
00:06:36,800 --> 00:06:40,190
somebody need to<font color="#E5E5E5"> tune the reports and</font>

155
00:06:38,360 --> 00:06:41,750
somebody who needs an end go update<font color="#E5E5E5"> the</font>

156
00:06:40,190 --> 00:06:43,070
reports today on the size<font color="#E5E5E5"> of your</font>

157
00:06:41,750 --> 00:06:47,690
organization that may be proved

158
00:06:43,070 --> 00:06:49,010
difficult as well so we the<font color="#E5E5E5"> solutions</font>

159
00:06:47,690 --> 00:06:50,780
<font color="#CCCCCC">that we've come up with our to start</font>

160
00:06:49,010 --> 00:06:52,849
with a permissive policy and I'll

161
00:06:50,780 --> 00:06:54,318
explain<font color="#CCCCCC"> why in a little bit but at</font>

162
00:06:52,849 --> 00:06:57,139
and to<font color="#E5E5E5"> have a plan</font><font color="#CCCCCC"> to move towards a</font>

163
00:06:54,319 --> 00:06:59,119
more restrictive one so you don't have

164
00:06:57,139 --> 00:07:00,319
to<font color="#CCCCCC"> have a perfect policy or a policy</font>

165
00:06:59,119 --> 00:07:05,059
that flocks everything right out of the

166
00:07:00,319 --> 00:07:06,349
gate and this is one of those cultural

167
00:07:05,059 --> 00:07:08,929
things as well so I go<font color="#E5E5E5"> to a lot of</font>

168
00:07:06,349 --> 00:07:11,719
meetups around the<font color="#E5E5E5"> Bay Area and this is</font>

169
00:07:08,929 --> 00:07:13,609
from<font color="#E5E5E5"> a nodejs woman I went to and he did</font>

170
00:07:11,719 --> 00:07:15,589
a brief he was going<font color="#CCCCCC"> to talk</font><font color="#E5E5E5"> on security</font>

171
00:07:13,610 --> 00:07:16,610
he said hey just include these couple

172
00:07:15,589 --> 00:07:19,219
lines and<font color="#E5E5E5"> you don't have to worry about</font>

173
00:07:16,610 --> 00:07:20,679
cross-site scripting ever again and so

174
00:07:19,219 --> 00:07:24,558
this<font color="#CCCCCC"> is part of the culture is not only</font>

175
00:07:20,679 --> 00:07:26,208
you know knowing<font color="#E5E5E5"> that you know CSP is</font>

176
00:07:24,559 --> 00:07:28,999
difficult but to communicate that

177
00:07:26,209 --> 00:07:30,919
developers on how it works and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font>

178
00:07:28,999 --> 00:07:32,479
what this you know when you make your

179
00:07:30,919 --> 00:07:38,688
plan up you have to communicate that

180
00:07:32,479 --> 00:07:41,300
plan to them as well<font color="#CCCCCC"> all right so first</font>

181
00:07:38,689 --> 00:07:43,399
make a case for CSP so the first one is

182
00:07:41,300 --> 00:07:45,259
a pride change management you<font color="#CCCCCC"> know you</font>

183
00:07:43,399 --> 00:07:47,990
want<font color="#E5E5E5"> to know what sources you're</font>

184
00:07:45,259 --> 00:07:49,279
trusting so it's a good idea to use CSP

185
00:07:47,990 --> 00:07:50,809
not only in production but also in

186
00:07:49,279 --> 00:07:53,539
development so you can see and<font color="#E5E5E5"> get those</font>

187
00:07:50,809 --> 00:07:55,879
reports if it developers all of a sudden

188
00:07:53,539 --> 00:07:57,919
including something<font color="#E5E5E5"> from some posts that</font>

189
00:07:55,879 --> 00:07:59,689
shouldn't be trusted because you don't

190
00:07:57,919 --> 00:08:02,719
want<font color="#CCCCCC"> to wait a long time and be stuck</font>

191
00:07:59,689 --> 00:08:04,999
with something<font color="#E5E5E5"> that you know you weren't</font>

192
00:08:02,719 --> 00:08:07,389
involved early on in the process<font color="#E5E5E5"> and now</font>

193
00:08:04,999 --> 00:08:10,729
you're unhappy with<font color="#E5E5E5"> what what's there</font>

194
00:08:07,389 --> 00:08:12,199
you also want<font color="#E5E5E5"> to know what sources are</font>

195
00:08:10,729 --> 00:08:13,729
added so you can<font color="#E5E5E5"> make it a part of the</font>

196
00:08:12,199 --> 00:08:15,680
change<font color="#E5E5E5"> management process you</font><font color="#CCCCCC"> can make a</font>

197
00:08:13,729 --> 00:08:20,688
process around approving those things

198
00:08:15,680 --> 00:08:22,099
and have a paper trail it also makes

199
00:08:20,689 --> 00:08:24,229
your code base more reliable so this<font color="#E5E5E5"> is</font>

200
00:08:22,099 --> 00:08:26,179
a good self or tech ops or something

201
00:08:24,229 --> 00:08:28,399
like that at Salesforce you had the idea

202
00:08:26,179 --> 00:08:30,919
of trust<font color="#E5E5E5"> which is security and</font>

203
00:08:28,399 --> 00:08:32,240
reliability together because not only

204
00:08:30,919 --> 00:08:34,789
does the information out<font color="#E5E5E5"> to be secure</font>

205
00:08:32,240 --> 00:08:36,799
has to be available<font color="#CCCCCC"> to</font><font color="#E5E5E5"> and so if you're</font>

206
00:08:34,789 --> 00:08:39,679
depending on Jack you know scripts from

207
00:08:36,799 --> 00:08:41,419
you know 100 different domains all those

208
00:08:39,679 --> 00:08:43,578
hundred different domains have to be up

209
00:08:41,419 --> 00:08:46,519
and working as well and if there's you

210
00:08:43,578 --> 00:08:48,469
know dns problem with one of<font color="#E5E5E5"> them all</font>

211
00:08:46,519 --> 00:08:50,540
the sudden your site might have problems

212
00:08:48,470 --> 00:08:53,300
<font color="#CCCCCC">as well and so</font><font color="#E5E5E5"> this can be a great</font>

213
00:08:50,540 --> 00:08:55,189
driver for pushing CSP and reducing<font color="#CCCCCC"> the</font>

214
00:08:53,300 --> 00:08:59,389
amount of people you're trusting the run

215
00:08:55,189 --> 00:09:01,010
code and the contacts your customers it

216
00:08:59,389 --> 00:09:03,019
also makes the behavior predictable

217
00:09:01,010 --> 00:09:04,389
which should help with QA and testing<font color="#CCCCCC"> as</font>

218
00:09:03,019 --> 00:09:08,839
<font color="#CCCCCC">well</font>

219
00:09:04,389 --> 00:09:10,939
and then there's compliance and you know

220
00:09:08,839 --> 00:09:12,319
I think<font color="#E5E5E5"> one of the big drivers for</font>

221
00:09:10,939 --> 00:09:14,238
security stuff is not only to<font color="#E5E5E5"> help</font>

222
00:09:12,319 --> 00:09:16,399
achieve compliance but to reduce the

223
00:09:14,239 --> 00:09:20,029
time we have to<font color="#CCCCCC"> spend with compliance</font>

224
00:09:16,399 --> 00:09:21,979
teams and so if<font color="#CCCCCC"> we have that</font><font color="#E5E5E5"> list not</font>

225
00:09:20,029 --> 00:09:24,589
only that list of domains that we trust

226
00:09:21,979 --> 00:09:27,169
and how we're allowing<font color="#E5E5E5"> JavaScript to be</font>

227
00:09:24,589 --> 00:09:30,470
executed<font color="#CCCCCC"> but we can provide proof that</font>

228
00:09:27,169 --> 00:09:32,359
we're enforcing that it can make you

229
00:09:30,470 --> 00:09:36,529
know for<font color="#E5E5E5"> less meetings which should make</font>

230
00:09:32,359 --> 00:09:39,259
everybody happy our last one is<font color="#CCCCCC"> uh</font>

231
00:09:36,529 --> 00:09:41,329
moving<font color="#E5E5E5"> inline scripts so I don't think I</font>

232
00:09:39,259 --> 00:09:43,249
think everyone the security community

233
00:09:41,329 --> 00:09:45,829
would be would agree<font color="#CCCCCC"> that you know</font>

234
00:09:43,249 --> 00:09:48,679
moving inline scripts would be ideal for

235
00:09:45,829 --> 00:09:51,919
your site you want to if you have to add

236
00:09:48,679 --> 00:09:54,829
unsafe inline or manage hashes and nan

237
00:09:51,919 --> 00:09:56,829
says it's a lot of trouble and it's

238
00:09:54,829 --> 00:10:03,709
easier just to remove them and use

239
00:09:56,829 --> 00:10:05,089
included libraries instead so how do we

240
00:10:03,709 --> 00:10:06,799
remove those inline scripts so<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going</font>

241
00:10:05,089 --> 00:10:10,309
to go over<font color="#CCCCCC"> some of the stuff in CSP two</font>

242
00:10:06,799 --> 00:10:13,519
and three real quick the CSP to for CSP

243
00:10:10,309 --> 00:10:16,009
<font color="#CCCCCC">too they introduced hashes which you can</font>

244
00:10:13,519 --> 00:10:18,470
include<font color="#E5E5E5"> a hash of the script body all</font>

245
00:10:16,009 --> 00:10:21,199
right in the the<font color="#CCCCCC"> header of</font><font color="#E5E5E5"> that if</font><font color="#CCCCCC"> that</font>

246
00:10:18,470 --> 00:10:22,429
matches the script that's executed then

247
00:10:21,199 --> 00:10:24,919
you're allowed to run that the browser

248
00:10:22,429 --> 00:10:26,478
allows it to run<font color="#E5E5E5"> that script this does</font>

249
00:10:24,919 --> 00:10:28,850
it scale incredibly well because you'll

250
00:10:26,479 --> 00:10:30,229
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to hash every script and if you</font>

251
00:10:28,850 --> 00:10:34,369
have a bunch of in my script or CSP

252
00:10:30,229 --> 00:10:36,639
header is going to grow quite large the

253
00:10:34,369 --> 00:10:40,429
other one which is<font color="#E5E5E5"> more promising as</font>

254
00:10:36,639 --> 00:10:42,139
moving a lot faster as the nonces so

255
00:10:40,429 --> 00:10:45,470
then this one you include a random knots

256
00:10:42,139 --> 00:10:46,879
every page load however and then the

257
00:10:45,470 --> 00:10:49,339
scripts will include that nonce and

258
00:10:46,879 --> 00:10:51,769
there as well and<font color="#E5E5E5"> the way this is done</font>

259
00:10:49,339 --> 00:10:54,379
is<font color="#E5E5E5"> the template you know your template</font>

260
00:10:51,769 --> 00:10:55,850
has to include a variable that<font color="#CCCCCC"> can be</font>

261
00:10:54,379 --> 00:10:58,759
replaced with that same<font color="#E5E5E5"> Nantes header</font>

262
00:10:55,850 --> 00:11:00,529
that's included in the CSP header and

263
00:10:58,759 --> 00:11:02,509
then if a new script shows up on that

264
00:11:00,529 --> 00:11:04,149
page either inserted by the Dom or

265
00:11:02,509 --> 00:11:06,679
through reflected cross-site scripting

266
00:11:04,149 --> 00:11:09,069
it won't be run because it does<font color="#CCCCCC"> not have</font>

267
00:11:06,679 --> 00:11:09,069
that<font color="#E5E5E5"> nonce</font>

268
00:11:09,550 --> 00:11:18,120
and CSP 3a<font color="#CCCCCC"> the added strict dynamic and</font>

269
00:11:14,050 --> 00:11:19,839
so a strict dynamic what happens is

270
00:11:18,120 --> 00:11:24,640
everything's going to have to have it

271
00:11:19,839 --> 00:11:26,470
unknowns so we'll look at a backwards

272
00:11:24,640 --> 00:11:30,670
compatible strict dynamic policy but in

273
00:11:26,470 --> 00:11:32,980
this case you<font color="#E5E5E5"> may have yo 50 or so</font>

274
00:11:30,670 --> 00:11:34,390
domains and you don't want to whitelist

275
00:11:32,980 --> 00:11:36,420
them all in the CSP<font color="#E5E5E5"> header so you can</font>

276
00:11:34,390 --> 00:11:39,100
<font color="#CCCCCC">just use</font><font color="#E5E5E5"> a nonce in every script tag and</font>

277
00:11:36,420 --> 00:11:41,860
that'll allow things<font color="#E5E5E5"> however</font><font color="#CCCCCC"> that rules</font>

278
00:11:39,100 --> 00:11:44,649
out things like the subdomains and

279
00:11:41,860 --> 00:11:48,339
keywords exit so only hashes and nonces

280
00:11:44,649 --> 00:11:50,500
are available then<font color="#E5E5E5"> so when</font><font color="#CCCCCC"> you use you</font>

281
00:11:48,339 --> 00:11:53,339
know<font color="#E5E5E5"> if we have too many domains URL</font>

282
00:11:50,500 --> 00:11:56,910
scrubs the CSP headers can grow too big

283
00:11:53,339 --> 00:12:00,579
and we're you<font color="#E5E5E5"> know working towards a</font>

284
00:11:56,910 --> 00:12:06,399
policy but this is sort<font color="#E5E5E5"> of an</font>

285
00:12:00,579 --> 00:12:08,979
intermediate step thin and this is a

286
00:12:06,399 --> 00:12:10,779
backwards compatible CSP policy so here

287
00:12:08,980 --> 00:12:13,600
you can see<font color="#CCCCCC"> what it looked like to a CSP</font>

288
00:12:10,779 --> 00:12:17,470
one browser a CSP to browser in a CSP

289
00:12:13,600 --> 00:12:19,540
three browser I'm CSP one it<font color="#CCCCCC"> doesn't</font>

290
00:12:17,470 --> 00:12:22,060
know the nonce keyword it doesn't know

291
00:12:19,540 --> 00:12:23,800
that strict dynamic so it ignores those

292
00:12:22,060 --> 00:12:25,689
things all i think<font color="#CCCCCC"> is paying attention</font>

293
00:12:23,800 --> 00:12:29,620
to is allow unsafe inline<font color="#E5E5E5"> and allow</font>

294
00:12:25,690 --> 00:12:31,120
those subdomains and CSP to that<font color="#CCCCCC"> i'll</font>

295
00:12:29,620 --> 00:12:34,720
pay attention<font color="#CCCCCC"> to the nonce which rules</font>

296
00:12:31,120 --> 00:12:37,600
out the unsafe inline and allows those

297
00:12:34,720 --> 00:12:39,459
things plus the subdomains if they're

298
00:12:37,600 --> 00:12:41,230
include in the script and CS get three

299
00:12:39,459 --> 00:12:43,630
browser it will only pay pay attention

300
00:12:41,230 --> 00:12:45,190
<font color="#E5E5E5">to announces the cert dynamic keyword</font>

301
00:12:43,630 --> 00:12:50,740
and the hashes if you have any of<font color="#E5E5E5"> those</font>

302
00:12:45,190 --> 00:12:52,870
in<font color="#E5E5E5"> your script as well and then we have</font>

303
00:12:50,740 --> 00:12:56,470
unsafe hash attributes which is a work

304
00:12:52,870 --> 00:12:59,020
in progress in CSP<font color="#E5E5E5"> three and this is for</font>

305
00:12:56,470 --> 00:13:00,910
event based things so if you have a nun

306
00:12:59,020 --> 00:13:02,740
mouse over or on load or something<font color="#CCCCCC"> like</font>

307
00:13:00,910 --> 00:13:04,149
that and you want the hashes to apply<font color="#E5E5E5"> to</font>

308
00:13:02,740 --> 00:13:08,290
that as well since we<font color="#E5E5E5"> can't announce</font>

309
00:13:04,149 --> 00:13:11,699
those you can use that property inside

310
00:13:08,290 --> 00:13:11,699
your CSP header to achieve that

311
00:13:14,080 --> 00:13:18,200
on tonight<font color="#E5E5E5"> I want to talk about</font>

312
00:13:16,370 --> 00:13:19,610
approaching teams so this is<font color="#CCCCCC"> probably</font>

313
00:13:18,200 --> 00:13:22,700
one of the hardest thing about CSP is to

314
00:13:19,610 --> 00:13:24,710
actually get them to buy in and the

315
00:13:22,700 --> 00:13:28,340
goals of your plan you want<font color="#E5E5E5"> to not</font>

316
00:13:24,710 --> 00:13:30,590
affect performance so while CSP<font color="#E5E5E5"> reports</font>

317
00:13:28,340 --> 00:13:32,570
are asynchronous and they're going<font color="#E5E5E5"> to be</font>

318
00:13:30,590 --> 00:13:34,430
sent from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> browsers you send about</font>

319
00:13:32,570 --> 00:13:36,920
more than<font color="#E5E5E5"> 10 you're going to see a sort</font>

320
00:13:34,430 --> 00:13:39,050
of you I<font color="#E5E5E5"> slowed down because the browser</font>

321
00:13:36,920 --> 00:13:41,150
is going to be working on compiling

322
00:13:39,050 --> 00:13:43,430
those reports and sending them to the UI

323
00:13:41,150 --> 00:13:46,340
team will start<font color="#E5E5E5"> to see</font><font color="#CCCCCC"> some performance</font>

324
00:13:43,430 --> 00:13:47,810
degradation on the the browser side so

325
00:13:46,340 --> 00:13:50,600
we want<font color="#E5E5E5"> to limit how many reports are</font>

326
00:13:47,810 --> 00:13:52,939
sent because that's the fastest way<font color="#E5E5E5"> to</font>

327
00:13:50,600 --> 00:13:56,120
<font color="#E5E5E5">get your stuff out</font><font color="#CCCCCC"> of production is to</font>

328
00:13:52,940 --> 00:13:57,590
cause any sort of issue there we also

329
00:13:56,120 --> 00:13:58,850
want to make sure we're clear<font color="#E5E5E5"> it's not</font>

330
00:13:57,590 --> 00:14:00,170
<font color="#E5E5E5">going to affect in JavaScript</font>

331
00:13:58,850 --> 00:14:03,410
functionality we're going<font color="#E5E5E5"> to be in</font>

332
00:14:00,170 --> 00:14:06,110
reporting mode at first that you<font color="#E5E5E5"> know it</font>

333
00:14:03,410 --> 00:14:07,430
doesn't<font color="#CCCCCC"> actually block anything and we</font>

334
00:14:06,110 --> 00:14:08,870
want to<font color="#E5E5E5"> make someone else's job easier</font>

335
00:14:07,430 --> 00:14:10,640
so I was talking about compliance is

336
00:14:08,870 --> 00:14:14,360
talking about stability so use those

337
00:14:10,640 --> 00:14:16,430
things<font color="#E5E5E5"> to try to sell the CSP inside</font>

338
00:14:14,360 --> 00:14:18,230
your organization and then we want<font color="#E5E5E5"> to</font>

339
00:14:16,430 --> 00:14:21,199
<font color="#E5E5E5">have a path blocking mode so have a goal</font>

340
00:14:18,230 --> 00:14:22,850
in mind at the end of this which is we

341
00:14:21,200 --> 00:14:23,840
want to be able to lock this down we

342
00:14:22,850 --> 00:14:25,640
<font color="#E5E5E5">want to say it be able to say well I</font>

343
00:14:23,840 --> 00:14:27,830
trust<font color="#E5E5E5"> these sources if you want to add</font>

344
00:14:25,640 --> 00:14:33,230
more sources you know here's the process

345
00:14:27,830 --> 00:14:34,760
and I'll be added to the CSP header so

346
00:14:33,230 --> 00:14:35,780
we have we<font color="#E5E5E5"> approach front-end</font>

347
00:14:34,760 --> 00:14:37,970
engineering we want to say you know

348
00:14:35,780 --> 00:14:39,949
we're probably<font color="#E5E5E5"> just break things you may</font>

349
00:14:37,970 --> 00:14:42,140
see some console air log messages that's

350
00:14:39,950 --> 00:14:45,050
<font color="#E5E5E5">okay you</font><font color="#CCCCCC"> know it's going</font><font color="#E5E5E5"> to show up as</font>

351
00:14:42,140 --> 00:14:46,250
red bars and prone console but don't

352
00:14:45,050 --> 00:14:48,650
worry<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it it's not actually</font>

353
00:14:46,250 --> 00:14:50,060
blocking or causing an error and then we

354
00:14:48,650 --> 00:14:52,310
<font color="#E5E5E5">want to make sure at the face in process</font>

355
00:14:50,060 --> 00:14:56,300
so that we're not causing a performance

356
00:14:52,310 --> 00:14:58,189
hits and the way we do this<font color="#CCCCCC"> is we start</font>

357
00:14:56,300 --> 00:14:59,900
<font color="#E5E5E5">with the really permissive policy so</font>

358
00:14:58,190 --> 00:15:02,840
here's something or permitting just

359
00:14:59,900 --> 00:15:05,060
about everything so we're creating you

360
00:15:02,840 --> 00:15:07,900
know<font color="#E5E5E5"> anything over HTTPS where we have</font>

361
00:15:05,060 --> 00:15:10,250
unsafe eval unsafe inline itself and

362
00:15:07,900 --> 00:15:11,600
some known<font color="#CCCCCC"> CD ends are thrown in there</font>

363
00:15:10,250 --> 00:15:15,500
even<font color="#CCCCCC"> though they'll be redundant at</font>

364
00:15:11,600 --> 00:15:17,990
first so the first thing we're going to

365
00:15:15,500 --> 00:15:21,200
do is we're going<font color="#E5E5E5"> to remove HPS and WSS</font>

366
00:15:17,990 --> 00:15:24,380
so the<font color="#E5E5E5"> WebSocket web sockets of rust</font>

367
00:15:21,200 --> 00:15:26,510
cell and any<font color="#E5E5E5"> SSL stuff so what this will</font>

368
00:15:24,380 --> 00:15:30,470
do is it will send by late

369
00:15:26,510 --> 00:15:32,180
for any unknown<font color="#CCCCCC"> cdns that we have while</font>

370
00:15:30,470 --> 00:15:34,760
<font color="#E5E5E5">allowing all the other things and so we</font>

371
00:15:32,180 --> 00:15:38,120
can collect those reports we try to you

372
00:15:34,760 --> 00:15:39,650
know modify the CSP header and we may

373
00:15:38,120 --> 00:15:43,820
need<font color="#E5E5E5"> to add in you know some other</font>

374
00:15:39,650 --> 00:15:46,130
domain or some other<font color="#CCCCCC"> JavaScript that's</font>

375
00:15:43,820 --> 00:15:49,940
<font color="#E5E5E5">white listed and then</font><font color="#CCCCCC"> we aim for about a</font>

376
00:15:46,130 --> 00:15:53,120
week of say no CSP reports coming in and

377
00:15:49,940 --> 00:15:55,610
then we'll move on to self and we'll

378
00:15:53,120 --> 00:15:57,380
move on to unsafe eval and try to you

379
00:15:55,610 --> 00:16:01,360
know if we need it we<font color="#E5E5E5"> add</font><font color="#CCCCCC"> it back in if</font>

380
00:15:57,380 --> 00:16:08,000
<font color="#E5E5E5">we don't we remove it from the policy</font>

381
00:16:01,360 --> 00:16:09,680
yeah you made it's just<font color="#E5E5E5"> reducing the</font>

382
00:16:08,000 --> 00:16:16,460
attack surface it's less stuff you have

383
00:16:09,680 --> 00:16:18,709
to<font color="#E5E5E5"> trust there may be a situation where</font>

384
00:16:16,460 --> 00:16:20,090
<font color="#E5E5E5">I don't know but there's unrestricted</font>

385
00:16:18,710 --> 00:16:22,400
file upload or something on your site

386
00:16:20,090 --> 00:16:24,770
and somebody could upload a<font color="#E5E5E5"> day s file</font>

387
00:16:22,400 --> 00:16:31,699
somewhere and that would increase<font color="#CCCCCC"> the</font>

388
00:16:24,770 --> 00:16:33,020
severity of that finding that until then

389
00:16:31,700 --> 00:16:34,490
<font color="#E5E5E5">you go through unsafe in mine and at</font>

390
00:16:33,020 --> 00:16:36,050
that point you can decide whether to add

391
00:16:34,490 --> 00:16:38,150
unsafe inline or if you want<font color="#E5E5E5"> to invest</font>

392
00:16:36,050 --> 00:16:39,589
some time into doing the not seen or<font color="#CCCCCC"> the</font>

393
00:16:38,150 --> 00:16:44,449
hashing to pay on how<font color="#CCCCCC"> many inline</font>

394
00:16:39,590 --> 00:16:45,830
scripts you have and then you can

395
00:16:44,450 --> 00:16:47,860
complete it and move on to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> next</font>

396
00:16:45,830 --> 00:16:50,210
directive and so you keep doing<font color="#CCCCCC"> that and</font>

397
00:16:47,860 --> 00:16:53,240
you go<font color="#E5E5E5"> through that cycle and you do it</font>

398
00:16:50,210 --> 00:16:54,950
very you know you just<font color="#CCCCCC"> have this test</font>

399
00:16:53,240 --> 00:16:56,810
this is a subset of the directives just

400
00:16:54,950 --> 00:16:58,100
to give<font color="#E5E5E5"> me an example of like what your</font>

401
00:16:56,810 --> 00:17:00,020
plan might look like for going through

402
00:16:58,100 --> 00:17:02,470
all this and developing your content

403
00:17:00,020 --> 00:17:02,470
security policy

404
00:17:06,619 --> 00:17:13,069
so the other thing we can do is we can

405
00:17:09,319 --> 00:17:14,809
make cspo reports more valuable so<font color="#E5E5E5"> I'm</font>

406
00:17:13,069 --> 00:17:16,670
sure<font color="#CCCCCC"> most of you are</font><font color="#E5E5E5"> familiar with the</font>

407
00:17:14,809 --> 00:17:20,119
CSP<font color="#CCCCCC"> Airport gives you some limited</font>

408
00:17:16,670 --> 00:17:22,339
information but as we'll see there's no

409
00:17:20,119 --> 00:17:25,219
<font color="#E5E5E5">way of knowing whether you know one page</font>

410
00:17:22,339 --> 00:17:27,859
generated 30 CSP reports or it once ESP

411
00:17:25,220 --> 00:17:29,960
Airport per page and if we're in the

412
00:17:27,859 --> 00:17:32,360
application server or even in engine X

413
00:17:29,960 --> 00:17:35,660
we can<font color="#E5E5E5"> make some changes</font><font color="#CCCCCC"> that may be</font>

414
00:17:32,360 --> 00:17:36,919
able to help them you also have<font color="#CCCCCC"> to</font>

415
00:17:35,660 --> 00:17:39,170
recognize the differences between<font color="#E5E5E5"> the</font>

416
00:17:36,920 --> 00:17:40,940
different browsers so some properties

417
00:17:39,170 --> 00:17:43,809
are included with some browsers and

418
00:17:40,940 --> 00:17:46,070
somewhere so here's a example of

419
00:17:43,809 --> 00:17:50,928
different properties included from the

420
00:17:46,070 --> 00:17:52,939
latest Chrome Firefox and Safari and so

421
00:17:50,929 --> 00:17:54,350
you might have to combine the<font color="#E5E5E5"> reports</font>

422
00:17:52,940 --> 00:17:59,059
from the different browsers to create a

423
00:17:54,350 --> 00:18:02,570
complete picture here<font color="#CCCCCC"> and every browser</font>

424
00:17:59,059 --> 00:18:04,460
special so for unsafe inline and eval

425
00:18:02,570 --> 00:18:06,800
one of the problems we ran into early on

426
00:18:04,460 --> 00:18:12,080
was the<font color="#E5E5E5"> browsers definitely don't report</font>

427
00:18:06,800 --> 00:18:13,520
this consistently so<font color="#CCCCCC"> chrome will you</font>

428
00:18:12,080 --> 00:18:17,600
know report it pretty clearly at the

429
00:18:13,520 --> 00:18:21,410
<font color="#E5E5E5">block dries in line or eval</font><font color="#CCCCCC"> Firefox more</font>

430
00:18:17,600 --> 00:18:22,370
<font color="#CCCCCC">reported as self no matter what and you</font>

431
00:18:21,410 --> 00:18:24,740
have<font color="#CCCCCC"> to sort of</font><font color="#E5E5E5"> look at the script</font>

432
00:18:22,370 --> 00:18:26,449
samples will see in the next slide to

433
00:18:24,740 --> 00:18:29,920
<font color="#E5E5E5">determine if it was actually an eval</font>

434
00:18:26,450 --> 00:18:33,830
violation or a inline script violation

435
00:18:29,920 --> 00:18:35,660
and<font color="#E5E5E5"> it's fari it'll report itself for</font>

436
00:18:33,830 --> 00:18:36,860
unsafe inline<font color="#E5E5E5"> and don't worry</font><font color="#CCCCCC"> about eval</font>

437
00:18:35,660 --> 00:18:42,050
because it doesn't actually report that

438
00:18:36,860 --> 00:18:45,800
so<font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> safely assume</font><font color="#CCCCCC"> that it's</font>

439
00:18:42,050 --> 00:18:47,059
unsafe inline at that point hopefully

440
00:18:45,800 --> 00:18:51,320
they're all<font color="#E5E5E5"> moving towards that the</font>

441
00:18:47,059 --> 00:18:53,840
chrome standard soon and so this<font color="#CCCCCC"> is what</font>

442
00:18:51,320 --> 00:18:56,120
it might look like when you get a report

443
00:18:53,840 --> 00:18:59,540
back from<font color="#CCCCCC"> firefox you want to determine</font>

444
00:18:56,120 --> 00:19:01,489
<font color="#E5E5E5">if it's a unsafe inline or eval so if</font>

445
00:18:59,540 --> 00:19:03,889
it's an eval will always be that string

446
00:19:01,490 --> 00:19:06,640
called eval or related function blocked

447
00:19:03,890 --> 00:19:06,640
<font color="#E5E5E5">by CSP</font>

448
00:19:10,370 --> 00:19:15,449
and then we do<font color="#CCCCCC"> some a be testing as well</font>

449
00:19:13,260 --> 00:19:16,830
so one thing that's not really well

450
00:19:15,450 --> 00:19:18,540
document is what happens when you mix

451
00:19:16,830 --> 00:19:20,399
headers<font color="#E5E5E5"> so if you have both the content</font>

452
00:19:18,540 --> 00:19:23,300
security policy and a Content security

453
00:19:20,400 --> 00:19:25,920
policy report only header what happens

454
00:19:23,300 --> 00:19:28,440
so if you use two completely different

455
00:19:25,920 --> 00:19:29,940
directives for the most part but we

456
00:19:28,440 --> 00:19:31,620
found was the headers are completely

457
00:19:29,940 --> 00:19:33,390
independent you'll get the different

458
00:19:31,620 --> 00:19:34,830
reports depending on the header and the

459
00:19:33,390 --> 00:19:41,460
violation so you may<font color="#CCCCCC"> get duplicate</font>

460
00:19:34,830 --> 00:19:44,040
reports if in some cases however<font color="#E5E5E5"> if you</font>

461
00:19:41,460 --> 00:19:46,770
mix and use script source or the same

462
00:19:44,040 --> 00:19:48,240
directive and in both<font color="#E5E5E5"> the content</font>

463
00:19:46,770 --> 00:19:50,550
security policy and content security

464
00:19:48,240 --> 00:19:51,540
policy report only you're going to<font color="#E5E5E5"> get a</font>

465
00:19:50,550 --> 00:19:53,550
little<font color="#E5E5E5"> bit different behavior from</font>

466
00:19:51,540 --> 00:19:56,580
Safari it's<font color="#E5E5E5"> only going to respect one</font>

467
00:19:53,550 --> 00:19:59,159
combination of directive and source and

468
00:19:56,580 --> 00:20:00,990
<font color="#CCCCCC">it'll be the most restrictive on so you</font>

469
00:19:59,160 --> 00:20:06,870
may miss out on<font color="#E5E5E5"> some reports if you</font>

470
00:20:00,990 --> 00:20:08,580
don't look out for that and the reason

471
00:20:06,870 --> 00:20:11,699
<font color="#E5E5E5">we do that is we may want to keep a more</font>

472
00:20:08,580 --> 00:20:15,689
restrictive content security policy and

473
00:20:11,700 --> 00:20:17,190
then use a report<font color="#E5E5E5"> only to see if we</font>

474
00:20:15,690 --> 00:20:19,050
still<font color="#E5E5E5"> need some of the things in there</font>

475
00:20:17,190 --> 00:20:20,370
so as we eat like in about<font color="#CCCCCC"> a year you</font>

476
00:20:19,050 --> 00:20:22,379
want to see if he's still using<font color="#CCCCCC"> a domain</font>

477
00:20:20,370 --> 00:20:24,300
you<font color="#CCCCCC"> can modify the policies so that it</font>

478
00:20:22,380 --> 00:20:28,100
might report only it might<font color="#E5E5E5"> not block it</font>

479
00:20:24,300 --> 00:20:31,610
but<font color="#E5E5E5"> I'll send our poor only work if it's</font>

480
00:20:28,100 --> 00:20:31,610
if it's in use

481
00:20:34,510 --> 00:20:38,950
the other thing we can do is sort of

482
00:20:36,610 --> 00:20:41,350
modify the report your eyes so one of

483
00:20:38,950 --> 00:20:43,240
the tricks that we use is<font color="#CCCCCC"> to add some</font>

484
00:20:41,350 --> 00:20:45,459
properties to the report your eye by

485
00:20:43,240 --> 00:20:48,400
adding arguments on the URL so we had a

486
00:20:45,460 --> 00:20:51,040
transaction ID so that's per per request

487
00:20:48,400 --> 00:20:55,510
per page load we have<font color="#E5E5E5"> an HTML of the</font>

488
00:20:51,040 --> 00:20:57,430
session ID a route ID and which is sort

489
00:20:55,510 --> 00:21:01,720
of a hash of the controller and the

490
00:20:57,430 --> 00:21:04,240
method and sometimes the user ID or a on

491
00:21:01,720 --> 00:21:06,220
the the privacy settings on H<font color="#E5E5E5"> Mac of</font>

492
00:21:04,240 --> 00:21:09,220
that so we<font color="#CCCCCC"> can match all that out in the</font>

493
00:21:06,220 --> 00:21:10,540
reports so what can<font color="#E5E5E5"> we do that that it</font>

494
00:21:09,220 --> 00:21:14,050
might look something like<font color="#E5E5E5"> this with you</font>

495
00:21:10,540 --> 00:21:16,540
know our IDs ID when we get<font color="#E5E5E5"> that report</font>

496
00:21:14,050 --> 00:21:19,360
in we can parse that and you know match

497
00:21:16,540 --> 00:21:22,210
up all the CSP reports to a single

498
00:21:19,360 --> 00:21:23,679
session we<font color="#E5E5E5"> can match it up</font><font color="#CCCCCC"> to we can</font>

499
00:21:22,210 --> 00:21:26,650
tell if the user was authenticated if

500
00:21:23,680 --> 00:21:28,530
the user ideas is present and we can

501
00:21:26,650 --> 00:21:30,910
tell you don't match them all up<font color="#CCCCCC"> to a</font>

502
00:21:28,530 --> 00:21:34,139
certain transaction as well so if one

503
00:21:30,910 --> 00:21:42,820
page is creating most of the CSP reports

504
00:21:34,140 --> 00:21:44,530
we know that<font color="#E5E5E5"> versus several we're using</font>

505
00:21:42,820 --> 00:21:49,179
a<font color="#CCCCCC"> hmm of this session ideas sometimes</font>

506
00:21:44,530 --> 00:21:52,060
<font color="#CCCCCC">truncated as well so maybe like H neck</font>

507
00:21:49,180 --> 00:21:54,070
and then cut off you know cut<font color="#E5E5E5"> it in half</font>

508
00:21:52,060 --> 00:21:55,629
<font color="#E5E5E5">or something</font><font color="#CCCCCC"> like that</font><font color="#E5E5E5"> so we don't need</font>

509
00:21:54,070 --> 00:21:58,330
<font color="#E5E5E5">yet we definitely don't want the actual</font>

510
00:21:55,630 --> 00:22:07,870
session ID in<font color="#CCCCCC"> the URL but we want</font>

511
00:21:58,330 --> 00:22:09,070
<font color="#E5E5E5">something new is we can match up one you</font>

512
00:22:07,870 --> 00:22:10,899
know a<font color="#E5E5E5"> couple warnings don't rely on</font>

513
00:22:09,070 --> 00:22:12,250
reports they can be easily faked we

514
00:22:10,900 --> 00:22:15,520
haven't<font color="#E5E5E5"> seen anybody do this yet but</font>

515
00:22:12,250 --> 00:22:17,260
it's possible that they could be you

516
00:22:15,520 --> 00:22:18,760
know create a bunch<font color="#E5E5E5"> of fake CSP reports</font>

517
00:22:17,260 --> 00:22:19,629
that they know where your CSP reporter

518
00:22:18,760 --> 00:22:21,220
is because they're completely

519
00:22:19,630 --> 00:22:23,500
unauthenticated they're not going to

520
00:22:21,220 --> 00:22:26,760
<font color="#E5E5E5">send any authentication cookies or</font>

521
00:22:23,500 --> 00:22:28,660
anything like that the CSP reporter so

522
00:22:26,760 --> 00:22:31,180
somebody might be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to generate</font><font color="#CCCCCC"> you</font>

523
00:22:28,660 --> 00:22:32,920
know fake hide in the noise type CSP

524
00:22:31,180 --> 00:22:35,110
reports so<font color="#E5E5E5"> you definitely want</font><font color="#CCCCCC"> to keep</font>

525
00:22:32,920 --> 00:22:38,430
track of IP addresses as well when you

526
00:22:35,110 --> 00:22:38,429
collect those TSP reports

527
00:22:39,190 --> 00:22:45,140
my other<font color="#CCCCCC"> things we're doing is back on</font>

528
00:22:41,690 --> 00:22:46,790
this URL is<font color="#CCCCCC"> riding sort of check some</font>

529
00:22:45,140 --> 00:22:49,760
variable at the very end so we doubt a

530
00:22:46,790 --> 00:22:53,149
you know<font color="#CCCCCC"> c equals and then this and that</font>

531
00:22:49,760 --> 00:22:55,400
is a shared secret that hashes that URL

532
00:22:53,150 --> 00:22:57,440
so we can tell if they've modified that

533
00:22:55,400 --> 00:23:01,300
and that just<font color="#E5E5E5"> increases the difficulty</font>

534
00:22:57,440 --> 00:23:01,300
of them faking the CSP reports as well

535
00:23:03,490 --> 00:23:06,740
we're anticipating accounting

536
00:23:05,480 --> 00:23:11,870
encountering them we haven't encountered

537
00:23:06,740 --> 00:23:15,700
them yet but<font color="#CCCCCC"> i guess</font><font color="#E5E5E5"> my mind thinks that</font>

538
00:23:11,870 --> 00:23:18,320
way it's just<font color="#E5E5E5"> like that's what</font><font color="#CCCCCC"> i do so</font>

539
00:23:15,700 --> 00:23:20,570
<font color="#CCCCCC">the other thing is some directives won't</font>

540
00:23:18,320 --> 00:23:22,550
work in reporting mode so if you have

541
00:23:20,570 --> 00:23:24,620
things like frame ancestors or<font color="#E5E5E5"> sandbox</font>

542
00:23:22,550 --> 00:23:26,750
that you want<font color="#E5E5E5"> to add</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to be</font>

543
00:23:24,620 --> 00:23:27,800
careful with<font color="#E5E5E5"> these because you know even</font>

544
00:23:26,750 --> 00:23:29,120
if you add these in report late the

545
00:23:27,800 --> 00:23:31,100
browser is not<font color="#E5E5E5"> going to send reports for</font>

546
00:23:29,120 --> 00:23:35,000
these directives so you have to know

547
00:23:31,100 --> 00:23:36,620
ahead of time what you know what those

548
00:23:35,000 --> 00:23:38,720
are and be sure of those<font color="#E5E5E5"> things so frame</font>

549
00:23:36,620 --> 00:23:44,270
ancestors is what frames are allowed<font color="#CCCCCC"> to</font>

550
00:23:38,720 --> 00:23:46,100
frame<font color="#E5E5E5"> your site and we'll go over a</font>

551
00:23:44,270 --> 00:23:53,690
trick we use to get around that one is

552
00:23:46,100 --> 00:23:56,000
oh<font color="#CCCCCC"> alright so we have</font><font color="#E5E5E5"> one of the most</font>

553
00:23:53,690 --> 00:23:58,130
popular<font color="#E5E5E5"> issues we ran into was dealing</font>

554
00:23:56,000 --> 00:24:00,050
<font color="#CCCCCC">with inline scripts so we'd say hey we</font>

555
00:23:58,130 --> 00:24:01,490
won't add CSP and they're like<font color="#CCCCCC"> yeah</font>

556
00:24:00,050 --> 00:24:02,780
<font color="#E5E5E5">that's great but you</font><font color="#CCCCCC"> know it's going to</font>

557
00:24:01,490 --> 00:24:05,960
<font color="#E5E5E5">be pretty much useless because we have</font>

558
00:24:02,780 --> 00:24:08,690
inline scripts everywhere and so we

559
00:24:05,960 --> 00:24:11,000
developed a<font color="#CCCCCC"> JavaScript profiling library</font>

560
00:24:08,690 --> 00:24:13,280
and we're releasing a version of it open

561
00:24:11,000 --> 00:24:17,179
source which keeps track of if the

562
00:24:13,280 --> 00:24:19,220
script tags have nonces or if they you

563
00:24:17,179 --> 00:24:20,420
know what the it also<font color="#CCCCCC"> hash them for you</font>

564
00:24:19,220 --> 00:24:23,210
so if you want<font color="#E5E5E5"> to collect the hashes of</font>

565
00:24:20,420 --> 00:24:26,270
the script for in all the pages<font color="#E5E5E5"> you can</font>

566
00:24:23,210 --> 00:24:27,860
collect that information as well and so

567
00:24:26,270 --> 00:24:29,600
what they did the agent does is<font color="#E5E5E5"> that the</font>

568
00:24:27,860 --> 00:24:34,639
JavaScript agent sits at the top of the

569
00:24:29,600 --> 00:24:36,320
page in the<font color="#E5E5E5"> head and it will instrument</font>

570
00:24:34,640 --> 00:24:38,360
the Dom so as things are added to the

571
00:24:36,320 --> 00:24:39,830
Dom it'll inspect them it will inspect

572
00:24:38,360 --> 00:24:41,209
the body of the inline JavaScript or

573
00:24:39,830 --> 00:24:44,260
inspect the script tags and what

574
00:24:41,210 --> 00:24:44,260
resources they're loading

575
00:24:44,650 --> 00:24:49,780
and so it clicks and meta information as

576
00:24:47,410 --> 00:24:52,330
a sort<font color="#E5E5E5"> of wrap around that and that</font><font color="#CCCCCC"> is</font>

577
00:24:49,780 --> 00:24:56,200
it'll collect a request ID which<font color="#CCCCCC"> is a</font>

578
00:24:52,330 --> 00:24:58,899
random<font color="#E5E5E5"> ID / / page load such an idea</font>

579
00:24:56,200 --> 00:25:01,090
which it keeps in local storage and a

580
00:24:58,900 --> 00:25:04,270
document URL and the referrer if it's

581
00:25:01,090 --> 00:25:06,610
available and then there are various

582
00:25:04,270 --> 00:25:09,639
events so there might be a script source

583
00:25:06,610 --> 00:25:12,969
event which tells you that a page loaded

584
00:25:09,640 --> 00:25:14,580
a<font color="#E5E5E5"> JavaScript from source other than self</font>

585
00:25:12,970 --> 00:25:19,150
and so you<font color="#E5E5E5"> can keep track</font><font color="#CCCCCC"> of that domain</font>

586
00:25:14,580 --> 00:25:21,610
and where it's located in that<font color="#E5E5E5"> page I'd</font>

587
00:25:19,150 --> 00:25:24,340
also pull some some script contacts run

588
00:25:21,610 --> 00:25:25,540
of the surrounding tags so in this case

589
00:25:24,340 --> 00:25:28,350
we can see you know it's surrounded by

590
00:25:25,540 --> 00:25:32,290
the head in another script tag as well

591
00:25:28,350 --> 00:25:35,110
however<font color="#CCCCCC"> I</font><font color="#E5E5E5"> won't pull you know values and</font>

592
00:25:32,290 --> 00:25:36,760
less it's like a class or ID which will

593
00:25:35,110 --> 00:25:40,929
help you identify<font color="#CCCCCC"> where we're in the</font>

594
00:25:36,760 --> 00:25:42,970
page this is and then if there's an

595
00:25:40,930 --> 00:25:45,460
inline script it will create a slightly

596
00:25:42,970 --> 00:25:48,850
different event and<font color="#CCCCCC"> that will give</font><font color="#E5E5E5"> you a</font>

597
00:25:45,460 --> 00:25:52,240
shot<font color="#E5E5E5"> 256 hash of the script as well as</font>

598
00:25:48,850 --> 00:25:54,399
the<font color="#E5E5E5"> location where</font><font color="#CCCCCC"> the script has</font><font color="#E5E5E5"> and if</font>

599
00:25:52,240 --> 00:25:57,340
as a nonce or not and so<font color="#E5E5E5"> this way you</font>

600
00:25:54,400 --> 00:25:59,260
can sort of start tracking metrics on

601
00:25:57,340 --> 00:26:00,970
how<font color="#E5E5E5"> many inline script you have on your</font>

602
00:25:59,260 --> 00:26:03,550
page and what percentage<font color="#CCCCCC"> of them have</font>

603
00:26:00,970 --> 00:26:06,040
nonces so you know it's part of that

604
00:26:03,550 --> 00:26:08,320
phasing in the CSP policy maybe you

605
00:26:06,040 --> 00:26:10,750
can't get<font color="#E5E5E5"> nonsense in all the scripts vo</font>

606
00:26:08,320 --> 00:26:13,210
in<font color="#CCCCCC"> the next week but over the next two</font>

607
00:26:10,750 --> 00:26:14,860
months<font color="#E5E5E5"> you sort of build a metric around</font>

608
00:26:13,210 --> 00:26:17,020
how many did I<font color="#CCCCCC"> get this week what's my</font>

609
00:26:14,860 --> 00:26:19,000
percentage at the next week and so on<font color="#E5E5E5"> so</font>

610
00:26:17,020 --> 00:26:22,830
you can<font color="#E5E5E5"> show progress and</font><font color="#CCCCCC"> that makes a</font>

611
00:26:19,000 --> 00:26:22,830
lot it's a lot more encouraging that way

612
00:26:24,210 --> 00:26:29,260
alright so this version<font color="#CCCCCC"> of this will be</font>

613
00:26:26,410 --> 00:26:33,910
opening this up today is the CSP in my

614
00:26:29,260 --> 00:26:35,650
nature so please show some interest in

615
00:26:33,910 --> 00:26:37,780
so we can<font color="#E5E5E5"> continue developing the open</font>

616
00:26:35,650 --> 00:26:40,330
<font color="#CCCCCC">source version or if there's other</font>

617
00:26:37,780 --> 00:26:41,920
features you want<font color="#E5E5E5"> roar is starting to</font>

618
00:26:40,330 --> 00:26:44,649
add in some more more things like

619
00:26:41,920 --> 00:26:48,040
letting<font color="#CCCCCC"> you know if document.cookie was</font>

620
00:26:44,650 --> 00:26:50,710
accessed or other you<font color="#E5E5E5"> know things that</font>

621
00:26:48,040 --> 00:26:51,820
<font color="#E5E5E5">might be helpful to to secure scripts</font>

622
00:26:50,710 --> 00:26:54,760
and let you know<font color="#CCCCCC"> if there are</font><font color="#E5E5E5"> malicious</font>

623
00:26:51,820 --> 00:26:56,560
ones this will<font color="#CCCCCC"> work on a vent base of</font>

624
00:26:54,760 --> 00:26:58,269
there's an on mouseover that'll show up

625
00:26:56,560 --> 00:27:02,070
as a script source as well

626
00:26:58,269 --> 00:27:02,070
and you'll get a<font color="#CCCCCC"> Dom vocation of that</font>

627
00:27:07,529 --> 00:27:12,159
and now some CSP tricks so one of the

628
00:27:10,629 --> 00:27:15,248
things we've had was we have this

629
00:27:12,159 --> 00:27:16,599
JavaScript profiler and we have CSP that

630
00:27:15,249 --> 00:27:20,320
are coming in we sort<font color="#E5E5E5"> of want to match</font>

631
00:27:16,599 --> 00:27:21,309
those<font color="#CCCCCC"> two things up and so what we</font>

632
00:27:20,320 --> 00:27:24,489
thought<font color="#CCCCCC"> about using was in an</font>

633
00:27:21,309 --> 00:27:26,830
intentional CSP violation and hopefully

634
00:27:24,489 --> 00:27:28,830
they don't change<font color="#E5E5E5"> anything to to prevent</font>

635
00:27:26,830 --> 00:27:31,389
this but it's a sort of a neat trick

636
00:27:28,830 --> 00:27:32,949
where we use you<font color="#CCCCCC"> know a blocked you or I</font>

637
00:27:31,389 --> 00:27:36,369
will only specify the remain in some

638
00:27:32,950 --> 00:27:37,719
browsers for privacy reasons so how

639
00:27:36,369 --> 00:27:42,428
young<font color="#CCCCCC"> identifier</font><font color="#E5E5E5"> in the path when it</font>

640
00:27:37,719 --> 00:27:44,649
work and making<font color="#E5E5E5"> a random subdomain that</font>

641
00:27:42,429 --> 00:27:46,059
you know provides<font color="#CCCCCC"> us an identifying the</font>

642
00:27:44,649 --> 00:27:47,678
block to your eye but then we're going

643
00:27:46,059 --> 00:27:49,418
to cause a bunch<font color="#E5E5E5"> of DNS problems cashing</font>

644
00:27:47,679 --> 00:27:51,789
and we're probably and<font color="#E5E5E5"> get blacklisted</font>

645
00:27:49,419 --> 00:27:57,309
as well similar because<font color="#E5E5E5"> we'll look like</font>

646
00:27:51,789 --> 00:28:02,679
a piece of malware so it's a<font color="#E5E5E5"> little bit</font>

647
00:27:57,309 --> 00:28:07,599
ipv6 trivia there's a discard address

648
00:28:02,679 --> 00:28:10,899
space 206 to the 64th spaces it is not

649
00:28:07,599 --> 00:28:12,908
routable so we wonder what happens<font color="#E5E5E5"> if</font>

650
00:28:10,899 --> 00:28:15,939
you make a CSP violation to this or a

651
00:28:12,909 --> 00:28:18,639
connect source to this and so what we do

652
00:28:15,940 --> 00:28:21,549
is we<font color="#CCCCCC"> have build that we build our trust</font>

653
00:28:18,639 --> 00:28:25,269
ID so it fits in<font color="#CCCCCC"> that space we make an</font>

654
00:28:21,549 --> 00:28:27,849
intentional violation to have space and

655
00:28:25,269 --> 00:28:29,469
if you see the port number can also be

656
00:28:27,849 --> 00:28:31,089
specified so that's a couple extra bytes

657
00:28:29,469 --> 00:28:33,579
if you needed more address space to it

658
00:28:31,089 --> 00:28:35,379
to<font color="#E5E5E5"> specify something what's going to</font>

659
00:28:33,579 --> 00:28:37,450
<font color="#E5E5E5">happen is now the JavaScript has this</font>

660
00:28:35,379 --> 00:28:39,789
request ID they can submit additional

661
00:28:37,450 --> 00:28:44,799
events to our listener with that request

662
00:28:39,789 --> 00:28:47,950
ID and we have a CSP report which has

663
00:28:44,799 --> 00:28:50,139
both the transaction ID and session ID

664
00:28:47,950 --> 00:28:51,820
as<font color="#E5E5E5"> well as that blocked or I with our</font>

665
00:28:50,139 --> 00:28:54,248
request ID so we just parse that out of

666
00:28:51,820 --> 00:28:56,739
there match them up and now we can

667
00:28:54,249 --> 00:28:59,759
combine CSP reports and our<font color="#CCCCCC"> JavaScript</font>

668
00:28:56,739 --> 00:28:59,759
information as<font color="#E5E5E5"> well</font>

669
00:29:06,970 --> 00:29:13,720
and you can either use a you can use a

670
00:29:10,659 --> 00:29:15,010
live live obtain the CSP events or you

671
00:29:13,720 --> 00:29:16,840
could<font color="#E5E5E5"> have a link table in there as</font><font color="#CCCCCC"> well</font>

672
00:29:15,010 --> 00:29:24,700
that would allow you to more lately do

673
00:29:16,840 --> 00:29:26,168
that in a historical manner one of the

674
00:29:24,700 --> 00:29:29,950
other things is we wanted to<font color="#E5E5E5"> have a</font>

675
00:29:26,169 --> 00:29:31,840
report only for frame ancestors the

676
00:29:29,950 --> 00:29:35,620
browsers and the spec don't currently

677
00:29:31,840 --> 00:29:36,939
support this so you know do we<font color="#E5E5E5"> use frame</font>

678
00:29:35,620 --> 00:29:38,379
busting codes like we could<font color="#E5E5E5"> look at the</font>

679
00:29:36,940 --> 00:29:40,780
parent<font color="#E5E5E5"> and try to tell if it's framed</font>

680
00:29:38,380 --> 00:29:42,970
and try to get some stuff but that

681
00:29:40,780 --> 00:29:47,379
doesn't work with like multi framed

682
00:29:42,970 --> 00:29:49,390
pages and you know maybe frame ancestor

683
00:29:47,380 --> 00:29:52,260
supplies to grandparents and you know

684
00:29:49,390 --> 00:29:54,970
<font color="#E5E5E5">great grandparent frames which it does</font>

685
00:29:52,260 --> 00:29:57,460
so if<font color="#E5E5E5"> we add an invisible I frame inside</font>

686
00:29:54,970 --> 00:30:00,730
our site which has<font color="#E5E5E5"> a CSP header with</font>

687
00:29:57,460 --> 00:30:02,110
frame ancestors and a report<font color="#E5E5E5"> only you</font>

688
00:30:00,730 --> 00:30:04,630
know that invisible<font color="#E5E5E5"> I frame might get</font>

689
00:30:02,110 --> 00:30:06,189
blocked but the<font color="#E5E5E5"> report will still be</font>

690
00:30:04,630 --> 00:30:08,289
sent to our page will still function

691
00:30:06,190 --> 00:30:11,370
normally and<font color="#E5E5E5"> we'll be able to tell which</font>

692
00:30:08,289 --> 00:30:11,370
sites are framing us

693
00:30:19,430 --> 00:30:25,760
<font color="#E5E5E5">I used to get set it to</font><font color="#CCCCCC"> self or</font>

694
00:30:23,330 --> 00:30:29,080
something like that but yeah this this

695
00:30:25,760 --> 00:30:29,080
one would be violated all the<font color="#E5E5E5"> time</font>

696
00:30:31,240 --> 00:30:35,770
alright any questions on that one okay

697
00:30:36,910 --> 00:30:42,200
<font color="#E5E5E5">and the Google CSP paper so this came</font>

698
00:30:39,350 --> 00:30:43,760
out and quick summary is you know

699
00:30:42,200 --> 00:30:45,020
there's a lot<font color="#CCCCCC"> of ineffective CSP</font>

700
00:30:43,760 --> 00:30:47,570
policies as far as cross-site scripting

701
00:30:45,020 --> 00:30:49,190
is concerned no disagreement there are

702
00:30:47,570 --> 00:30:51,500
lots of unsafe in lines because that's

703
00:30:49,190 --> 00:30:52,850
the cheap<font color="#E5E5E5"> people use because they don't</font>

704
00:30:51,500 --> 00:30:55,520
want to<font color="#E5E5E5"> track down all their inline</font>

705
00:30:52,850 --> 00:30:58,280
scripts and that makes<font color="#E5E5E5"> it extremely easy</font>

706
00:30:55,520 --> 00:31:01,870
to when when there's a reflected

707
00:30:58,280 --> 00:31:01,870
cross-site scripting to exploit them

708
00:31:02,260 --> 00:31:07,070
they also noticed a lack of object

709
00:31:04,760 --> 00:31:09,140
source so it's a lack of knowing the

710
00:31:07,070 --> 00:31:11,120
bypasses that are available to so if

711
00:31:09,140 --> 00:31:13,940
there's no object source<font color="#CCCCCC"> defined than</font>

712
00:31:11,120 --> 00:31:16,669
any object horses allowed as we said

713
00:31:13,940 --> 00:31:19,820
earlier and so they have you know<font color="#E5E5E5"> they</font>

714
00:31:16,670 --> 00:31:21,170
show a couple bypasses here where you

715
00:31:19,820 --> 00:31:23,270
can do<font color="#CCCCCC"> things with like the</font><font color="#E5E5E5"> data you</font>

716
00:31:21,170 --> 00:31:24,800
know if data is allowed or if you know

717
00:31:23,270 --> 00:31:27,580
object<font color="#CCCCCC"> source is allowed things you can</font>

718
00:31:24,800 --> 00:31:31,760
get do to get<font color="#E5E5E5"> around the script source</font>

719
00:31:27,580 --> 00:31:34,550
on so their recommendation is nonces and

720
00:31:31,760 --> 00:31:35,810
using the scripts or strict dynamic to

721
00:31:34,550 --> 00:31:38,060
create some backwards compatible

722
00:31:35,810 --> 00:31:39,470
policies which<font color="#E5E5E5"> I agree</font><font color="#CCCCCC"> with and</font>

723
00:31:38,060 --> 00:31:42,200
hopefully you know our<font color="#CCCCCC"> JavaScript</font>

724
00:31:39,470 --> 00:31:44,390
library will help some people track<font color="#CCCCCC"> down</font>

725
00:31:42,200 --> 00:31:50,180
all those script locations and and get

726
00:31:44,390 --> 00:31:52,760
the nonces in there as<font color="#CCCCCC"> well it's a the</font>

727
00:31:50,180 --> 00:31:54,050
papers much more include much bigger

728
00:31:52,760 --> 00:31:56,530
than<font color="#E5E5E5"> that this is very quick summary</font>

729
00:31:54,050 --> 00:31:59,389
it's probably presentation and of itself

730
00:31:56,530 --> 00:32:00,590
but<font color="#CCCCCC"> that's sort of the basics and</font>

731
00:31:59,390 --> 00:32:03,560
<font color="#CCCCCC">they've released</font><font color="#E5E5E5"> a couple of cool tools</font>

732
00:32:00,590 --> 00:32:06,040
one is the CSP evaluator which will show

733
00:32:03,560 --> 00:32:08,210
you like any weaknesses inside your CSP

734
00:32:06,040 --> 00:32:10,580
policy obviously you just paste it in

735
00:32:08,210 --> 00:32:12,350
there you<font color="#E5E5E5"> know what you know</font><font color="#CCCCCC"> and the</font>

736
00:32:10,580 --> 00:32:14,960
other<font color="#CCCCCC"> ones a browser for plug-in testing</font>

737
00:32:12,350 --> 00:32:17,480
so this all you put this into chrome and

738
00:32:14,960 --> 00:32:20,150
you brought your site and it'll tell you

739
00:32:17,480 --> 00:32:22,990
you know what<font color="#E5E5E5"> sort of violations</font>

740
00:32:20,150 --> 00:32:22,990
recurring on the site

741
00:32:26,860 --> 00:32:32,419
my thoughts are don't be<font color="#E5E5E5"> discouraged if</font>

742
00:32:30,380 --> 00:32:33,950
there are holes<font color="#E5E5E5"> in your CSP policy keep</font>

743
00:32:32,420 --> 00:32:36,560
<font color="#E5E5E5">keep working at it doesn't have to be</font>

744
00:32:33,950 --> 00:32:37,910
perfect at first it doesn't<font color="#E5E5E5"> have to even</font>

745
00:32:36,560 --> 00:32:39,889
stop you know all cross-site scripting

746
00:32:37,910 --> 00:32:41,300
there could be workarounds but make make

747
00:32:39,890 --> 00:32:43,700
<font color="#CCCCCC">it more difficult for the attacker and</font>

748
00:32:41,300 --> 00:32:45,860
use it for what it's<font color="#E5E5E5"> also valuable for</font>

749
00:32:43,700 --> 00:32:49,940
the change management I and keeping

750
00:32:45,860 --> 00:32:51,740
stability on your site but make sure you

751
00:32:49,940 --> 00:32:53,090
keep that<font color="#E5E5E5"> in goal that you</font><font color="#CCCCCC"> know you will</font>

752
00:32:51,740 --> 00:32:54,830
eventually get to the point where your

753
00:32:53,090 --> 00:33:03,560
CSP policy is preventing cross-site

754
00:32:54,830 --> 00:33:06,710
scripting so so my summary is you don't

755
00:33:03,560 --> 00:33:10,040
don't<font color="#E5E5E5"> tackle CSP all at once you know</font>

756
00:33:06,710 --> 00:33:11,780
especially legacy apps do it in you know

757
00:33:10,040 --> 00:33:14,330
stages you don't want to creating a

758
00:33:11,780 --> 00:33:15,560
performance problems plus it's just a

759
00:33:14,330 --> 00:33:17,270
ton of work to look through all those

760
00:33:15,560 --> 00:33:20,720
reports it's much easier if you just try

761
00:33:17,270 --> 00:33:22,250
to tackle directed by directive and

762
00:33:20,720 --> 00:33:24,680
track your progress so use something to

763
00:33:22,250 --> 00:33:26,510
track how you're doing even if you're

764
00:33:24,680 --> 00:33:28,580
not<font color="#E5E5E5"> able to turn</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> nonsense right away</font>

765
00:33:26,510 --> 00:33:29,690
make sure you know if you're like twenty

766
00:33:28,580 --> 00:33:33,080
percent of the way there<font color="#CCCCCC"> are eighty</font>

767
00:33:29,690 --> 00:33:34,430
percent of<font color="#E5E5E5"> the way there and used a CSP</font>

768
00:33:33,080 --> 00:33:37,490
to drive other security and stability

769
00:33:34,430 --> 00:33:39,980
objectives so reliability compliance

770
00:33:37,490 --> 00:33:41,690
things like that make it important

771
00:33:39,980 --> 00:33:45,650
inside your organization other than<font color="#E5E5E5"> to</font>

772
00:33:41,690 --> 00:33:47,480
just the security team and<font color="#E5E5E5"> remember that</font>

773
00:33:45,650 --> 00:33:49,700
CSP report<font color="#E5E5E5"> your eyes can be annotated</font>

774
00:33:47,480 --> 00:33:52,670
and you can do<font color="#E5E5E5"> some interesting things</font>

775
00:33:49,700 --> 00:33:53,960
with CSP the convicted extremely

776
00:33:52,670 --> 00:33:57,890
powerful especially when you<font color="#CCCCCC"> tied in</font>

777
00:33:53,960 --> 00:33:59,870
with the<font color="#E5E5E5"> JavaScript events and if you</font>

778
00:33:57,890 --> 00:34:01,520
run across<font color="#E5E5E5"> you know size limitations on</font>

779
00:33:59,870 --> 00:34:02,600
your CSP or something like that<font color="#E5E5E5"> you may</font>

780
00:34:01,520 --> 00:34:05,120
be able to<font color="#CCCCCC"> use that</font><font color="#E5E5E5"> information to</font>

781
00:34:02,600 --> 00:34:08,540
create custom CSP like for certain

782
00:34:05,120 --> 00:34:11,149
routes or application areas you know

783
00:34:08,540 --> 00:34:14,509
admin / may need a different CSP policy

784
00:34:11,149 --> 00:34:20,149
so keep track of those<font color="#E5E5E5"> things and group</font>

785
00:34:14,510 --> 00:34:21,379
those CSP policies together that way we

786
00:34:20,149 --> 00:34:23,388
keep track of<font color="#E5E5E5"> it like I said the IP</font>

787
00:34:21,379 --> 00:34:25,009
addresses so that's where that<font color="#E5E5E5"> fake CSP</font>

788
00:34:23,389 --> 00:34:27,710
report comes in they sort<font color="#E5E5E5"> of fall into</font>

789
00:34:25,010 --> 00:34:31,730
the same category if we<font color="#E5E5E5"> just see it from</font>

790
00:34:27,710 --> 00:34:33,679
a few IP addresses and<font color="#E5E5E5"> we have sort of</font>

791
00:34:31,730 --> 00:34:35,719
the position of<font color="#E5E5E5"> some of those scripts so</font>

792
00:34:33,679 --> 00:34:36,409
if we match those up with the<font color="#E5E5E5"> JavaScript</font>

793
00:34:35,719 --> 00:34:38,629
event and we

794
00:34:36,409 --> 00:34:40,789
like the<font color="#CCCCCC"> Dom was modified and added a</font>

795
00:34:38,629 --> 00:34:41,929
script in the head tag that's<font color="#E5E5E5"> a lot</font>

796
00:34:40,789 --> 00:34:44,740
different than if<font color="#E5E5E5"> it shows up in the</font>

797
00:34:41,929 --> 00:34:46,720
middle of a like an on mouseover and

798
00:34:44,739 --> 00:34:50,000
somewhere<font color="#E5E5E5"> in the middle of the</font><font color="#CCCCCC"> dom</font><font color="#E5E5E5"> and</font>

799
00:34:46,719 --> 00:34:52,638
there's a CSP violation there too so

800
00:34:50,000 --> 00:34:54,230
it's sort of grouping those things and

801
00:34:52,639 --> 00:34:58,210
knowing if it's just like one IP address

802
00:34:54,230 --> 00:35:01,190
causing it or if it's multiple or subset

803
00:34:58,210 --> 00:35:03,559
but<font color="#E5E5E5"> yeah could it's a common problem is</font>

804
00:35:01,190 --> 00:35:06,079
how to deal<font color="#CCCCCC"> with that so I think the</font>

805
00:35:03,559 --> 00:35:08,630
<font color="#E5E5E5">best way is to group by those and then</font>

806
00:35:06,079 --> 00:35:09,950
just try filter out<font color="#E5E5E5"> noise there so</font>

807
00:35:08,630 --> 00:35:13,730
<font color="#E5E5E5">that's one of the things for</font><font color="#CCCCCC"> working on</font>

808
00:35:09,950 --> 00:35:16,759
as a service as well is to to do that

809
00:35:13,730 --> 00:35:18,260
and sort<font color="#E5E5E5"> of determine if it's the subset</font>

810
00:35:16,760 --> 00:35:19,730
is a cross-site scripting attack or if

811
00:35:18,260 --> 00:35:21,650
it's just<font color="#E5E5E5"> like plugins and then we keep</font>

812
00:35:19,730 --> 00:35:25,069
track<font color="#E5E5E5"> of the domains and do reputation</font>

813
00:35:21,650 --> 00:35:27,020
scoring on those as well so CSP<font color="#CCCCCC"> three is</font>

814
00:35:25,069 --> 00:35:28,910
still I think<font color="#E5E5E5"> in I mean they're they're</font>

815
00:35:27,020 --> 00:35:30,589
still discussing the directives and they

816
00:35:28,910 --> 00:35:32,899
<font color="#E5E5E5">definitely have not finalized it so some</font>

817
00:35:30,589 --> 00:35:35,420
of the things<font color="#CCCCCC"> may be supported but</font>

818
00:35:32,900 --> 00:35:37,430
having backwards compatible policies is

819
00:35:35,420 --> 00:35:39,829
extremely important yeah it depending on

820
00:35:37,430 --> 00:35:42,200
the language there<font color="#E5E5E5"> are there a security</font>

821
00:35:39,829 --> 00:35:45,170
header it's<font color="#E5E5E5"> usually</font><font color="#CCCCCC"> a type of security</font>

822
00:35:42,200 --> 00:35:47,689
header library so I know<font color="#E5E5E5"> Twitter is</font>

823
00:35:45,170 --> 00:35:49,579
produced one for Ruby and there's a

824
00:35:47,690 --> 00:35:53,720
similar one for Python as well the cover

825
00:35:49,579 --> 00:35:55,520
<font color="#CCCCCC">chango and rails but most of them are</font>

826
00:35:53,720 --> 00:35:57,529
it's pretty straightforward if you're

827
00:35:55,520 --> 00:36:00,288
not doing awesome of the more dynamic

828
00:35:57,529 --> 00:36:02,680
stuff like we are so you can do even do

829
00:36:00,289 --> 00:36:06,200
it the<font color="#CCCCCC"> internets or patchy level as well</font>

830
00:36:02,680 --> 00:36:08,390
and<font color="#CCCCCC"> their summit as we showed in that</font>

831
00:36:06,200 --> 00:36:09,890
other one although it's a little bit

832
00:36:08,390 --> 00:36:20,089
<font color="#E5E5E5">more complicated than just calling at</font>

833
00:36:09,890 --> 00:36:22,240
CSP all right any others<font color="#CCCCCC"> okay thank you</font>

834
00:36:20,089 --> 00:36:22,240
guys

835
00:36:22,299 --> 00:36:24,359
you

