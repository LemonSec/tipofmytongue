1
00:00:02,990 --> 00:00:20,700
[Music]

2
00:00:18,020 --> 00:00:22,740
okay well I'm going to<font color="#E5E5E5"> go kind of fast</font>

3
00:00:20,700 --> 00:00:24,810
in<font color="#E5E5E5"> this talk this is the first time I've</font>

4
00:00:22,740 --> 00:00:28,320
ever given this particular presentation

5
00:00:24,810 --> 00:00:30,810
so it's a little<font color="#E5E5E5"> experimental it's a lot</font>

6
00:00:28,320 --> 00:00:32,759
of content<font color="#CCCCCC"> that we're going</font><font color="#E5E5E5"> to try and</font>

7
00:00:30,810 --> 00:00:34,350
fit into a<font color="#E5E5E5"> really small amount of time</font>

8
00:00:32,759 --> 00:00:38,370
so I'm<font color="#E5E5E5"> not</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> if I'm going</font><font color="#CCCCCC"> to get</font>

9
00:00:34,350 --> 00:00:40,890
through<font color="#E5E5E5"> it we're going to try so I</font>

10
00:00:38,370 --> 00:00:43,110
wanted<font color="#CCCCCC"> to start with a quick overview of</font>

11
00:00:40,890 --> 00:00:44,570
identity<font color="#CCCCCC"> and access management because i</font>

12
00:00:43,110 --> 00:00:47,730
know there's sort of a split<font color="#E5E5E5"> between</font>

13
00:00:44,570 --> 00:00:50,220
security<font color="#E5E5E5"> people and identity people and</font>

14
00:00:47,730 --> 00:00:53,550
so you<font color="#CCCCCC"> know I'm really</font><font color="#E5E5E5"> more in the</font>

15
00:00:50,220 --> 00:00:56,399
<font color="#E5E5E5">identity space so when I think about the</font>

16
00:00:53,550 --> 00:01:00,089
<font color="#E5E5E5">identity field I think of these four</font>

17
00:00:56,399 --> 00:01:02,460
distinct areas in a lot<font color="#E5E5E5"> of identity</font>

18
00:01:00,090 --> 00:01:04,890
companies sort of blur the lines because

19
00:01:02,460 --> 00:01:07,759
they want<font color="#E5E5E5"> to present a complete solution</font>

20
00:01:04,890 --> 00:01:09,930
to enterprise customers but really

21
00:01:07,759 --> 00:01:12,300
traditionally that if you get when to

22
00:01:09,930 --> 00:01:14,610
get research reports you'd find reports

23
00:01:12,300 --> 00:01:17,700
in these in these different<font color="#CCCCCC"> areas so</font>

24
00:01:14,610 --> 00:01:21,380
this real quick<font color="#E5E5E5"> IDM our identity</font>

25
00:01:17,700 --> 00:01:24,659
management I think of<font color="#CCCCCC"> that as user crud</font>

26
00:01:21,380 --> 00:01:26,940
create user update user delete user

27
00:01:24,659 --> 00:01:29,369
whenever information about a person

28
00:01:26,940 --> 00:01:31,130
changes we need<font color="#E5E5E5"> to update various</font>

29
00:01:29,369 --> 00:01:35,430
systems it could be active<font color="#E5E5E5"> directory</font>

30
00:01:31,130 --> 00:01:38,490
VPNs add an account in google or office

31
00:01:35,430 --> 00:01:40,710
365 so the connectors and and that

32
00:01:38,490 --> 00:01:43,649
includes a right of a user could be

33
00:01:40,710 --> 00:01:46,080
changing a password it could be adding a

34
00:01:43,650 --> 00:01:48,240
user to a group which then causes that

35
00:01:46,080 --> 00:01:52,439
person<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get access to different</font>

36
00:01:48,240 --> 00:01:54,270
systems so<font color="#CCCCCC"> I DM is it's like a</font>

37
00:01:52,439 --> 00:01:56,250
never-ending<font color="#E5E5E5"> battle for companies</font>

38
00:01:54,270 --> 00:01:59,369
there's always you know new systems and

39
00:01:56,250 --> 00:02:02,640
new workflows it could include approval

40
00:01:59,369 --> 00:02:04,560
workflow so it's and not a lot of change

41
00:02:02,640 --> 00:02:06,479
in IDM over the years either it's<font color="#E5E5E5"> sort</font>

42
00:02:04,560 --> 00:02:11,549
of<font color="#E5E5E5"> like the the same problem</font><font color="#CCCCCC"> that we've</font>

43
00:02:06,479 --> 00:02:14,220
been dealing with<font color="#E5E5E5"> and so I I am which is</font>

44
00:02:11,549 --> 00:02:16,709
<font color="#E5E5E5">the topic of this talk is identity and</font>

45
00:02:14,220 --> 00:02:21,720
access management you could<font color="#E5E5E5"> think of</font>

46
00:02:16,709 --> 00:02:23,940
<font color="#CCCCCC">that as the AP is that applications use</font>

47
00:02:21,720 --> 00:02:28,290
to interface with the identity

48
00:02:23,940 --> 00:02:29,730
infrastructure I AG or identity and

49
00:02:28,290 --> 00:02:32,730
access government governor

50
00:02:29,730 --> 00:02:35,609
is you can think of<font color="#CCCCCC"> this as like the</font>

51
00:02:32,730 --> 00:02:38,819
brains of the system at some point you

52
00:02:35,610 --> 00:02:41,610
<font color="#CCCCCC">need an inventory of all of your roles</font>

53
00:02:38,819 --> 00:02:43,890
and responsibilities and you need to

54
00:02:41,610 --> 00:02:48,060
<font color="#E5E5E5">make</font><font color="#CCCCCC"> decisions about you know who should</font>

55
00:02:43,890 --> 00:02:52,260
<font color="#E5E5E5">get access to what so also the I am</font>

56
00:02:48,060 --> 00:02:54,360
system produces a lot<font color="#CCCCCC"> of information so</font>

57
00:02:52,260 --> 00:02:56,310
logs and other information and we need

58
00:02:54,360 --> 00:02:59,489
reports on this information<font color="#CCCCCC"> for</font>

59
00:02:56,310 --> 00:03:01,650
compliance so I AG<font color="#CCCCCC"> the governance part</font>

60
00:02:59,489 --> 00:03:05,010
is doing how do<font color="#E5E5E5"> we make the rules and</font>

61
00:03:01,650 --> 00:03:09,390
then push those rules down to the IDM

62
00:03:05,010 --> 00:03:12,870
and I<font color="#E5E5E5"> am pieces and how do we you know</font>

63
00:03:09,390 --> 00:03:15,690
monitor and interpret and comply all of

64
00:03:12,870 --> 00:03:19,230
these services are backed up by some

65
00:03:15,690 --> 00:03:21,180
kind of database in identity<font color="#CCCCCC"> that's</font>

66
00:03:19,230 --> 00:03:23,578
traditionally been ldap but it really

67
00:03:21,180 --> 00:03:27,269
could be any database it doesn't matter

68
00:03:23,579 --> 00:03:31,319
so the IDM will write to this<font color="#E5E5E5"> directory</font>

69
00:03:27,269 --> 00:03:35,280
services database<font color="#E5E5E5"> I iag I am will rely</font>

70
00:03:31,319 --> 00:03:37,589
on that<font color="#E5E5E5"> and so so really directory</font>

71
00:03:35,280 --> 00:03:43,500
services is sort of the foundation for

72
00:03:37,590 --> 00:03:48,060
for all of these services so all right

73
00:03:43,500 --> 00:03:49,680
let's then go into oauth2 so so I'm

74
00:03:48,060 --> 00:03:52,560
<font color="#E5E5E5">really going to be focusing more on</font>

75
00:03:49,680 --> 00:03:54,419
enterprise the uses of<font color="#CCCCCC"> 0 a 2 for</font>

76
00:03:52,560 --> 00:03:56,819
organizations and enterprise and maybe a

77
00:03:54,419 --> 00:04:00,079
<font color="#E5E5E5">little less on</font><font color="#CCCCCC"> the consumer</font><font color="#E5E5E5"> space but</font><font color="#CCCCCC"> oh</font>

78
00:03:56,819 --> 00:04:03,298
<font color="#CCCCCC">aw to started in the consumer space and</font>

79
00:04:00,079 --> 00:04:06,000
so this<font color="#CCCCCC"> is the problem that</font><font color="#E5E5E5"> ooph was it</font>

80
00:04:03,299 --> 00:04:09,690
was addressing if you have signed up for

81
00:04:06,000 --> 00:04:12,180
<font color="#CCCCCC">a certain service like maybe on your TV</font>

82
00:04:09,690 --> 00:04:13,829
or maybe some of these new<font color="#CCCCCC"> fintech</font>

83
00:04:12,180 --> 00:04:17,340
services where you give them your

84
00:04:13,829 --> 00:04:20,370
password that's a problematic pattern

85
00:04:17,339 --> 00:04:23,099
because the<font color="#E5E5E5"> service that you give that</font>

86
00:04:20,370 --> 00:04:26,070
password to or that<font color="#E5E5E5"> credential to can</font>

87
00:04:23,099 --> 00:04:28,860
impersonate you and the end service has

88
00:04:26,070 --> 00:04:31,229
no way<font color="#E5E5E5"> to distinguish between your TV</font>

89
00:04:28,860 --> 00:04:34,320
who's presenting your password and you

90
00:04:31,229 --> 00:04:37,680
so so<font color="#E5E5E5"> this is this is the original</font>

91
00:04:34,320 --> 00:04:40,650
<font color="#E5E5E5">problem domain is how</font><font color="#CCCCCC"> can we find a way</font>

92
00:04:37,680 --> 00:04:43,169
to authorize some service to act on my

93
00:04:40,650 --> 00:04:47,938
behalf without actually sharing my pal

94
00:04:43,169 --> 00:04:50,639
or my other credential so you<font color="#E5E5E5"> probably</font>

95
00:04:47,939 --> 00:04:52,860
used oo oo to you might not know what it

96
00:04:50,639 --> 00:04:55,379
is but you<font color="#E5E5E5"> might have used it if you've</font>

97
00:04:52,860 --> 00:04:58,349
seen this this dialogue if you've ever

98
00:04:55,379 --> 00:05:01,499
gone to a website and you hit login with

99
00:04:58,349 --> 00:05:04,680
with Google Google presents this form

100
00:05:01,499 --> 00:05:07,439
<font color="#E5E5E5">that says is it</font><font color="#CCCCCC"> okay for</font><font color="#E5E5E5"> Google to share</font>

101
00:05:04,680 --> 00:05:11,029
this information we have about you<font color="#E5E5E5"> with</font>

102
00:05:07,439 --> 00:05:14,960
this third party website so that that is

103
00:05:11,029 --> 00:05:17,909
the the authorization part of<font color="#CCCCCC"> AA to your</font>

104
00:05:14,960 --> 00:05:20,460
<font color="#E5E5E5">authorizing</font><font color="#CCCCCC"> Google to release this</font>

105
00:05:17,909 --> 00:05:22,710
information now you're probably already

106
00:05:20,460 --> 00:05:24,448
logged<font color="#E5E5E5"> into Google I don't know if you</font>

107
00:05:22,710 --> 00:05:27,810
<font color="#CCCCCC">ever noticed but Google almost never</font>

108
00:05:24,449 --> 00:05:29,879
<font color="#E5E5E5">asks you to log in when I when I do a</font>

109
00:05:27,810 --> 00:05:32,129
demo of Google authentication I have to

110
00:05:29,879 --> 00:05:34,499
go into incognito mode and make<font color="#CCCCCC"> sure i</font>

111
00:05:32,129 --> 00:05:36,659
have no cookies if you weren't logged in

112
00:05:34,499 --> 00:05:40,219
already when you hit log in with google

113
00:05:36,659 --> 00:05:42,810
they would first present the password or

114
00:05:40,219 --> 00:05:44,819
whatever their credential you have at

115
00:05:42,810 --> 00:05:49,349
Google and then they would present this

116
00:05:44,819 --> 00:05:51,990
page so one of the misconceptions that

117
00:05:49,349 --> 00:05:58,310
about oh<font color="#CCCCCC"> aw too is that it's an</font>

118
00:05:51,990 --> 00:06:02,159
<font color="#E5E5E5">authentication protocol so one of the</font>

119
00:05:58,310 --> 00:06:06,800
authors of a book on Oh autumn by

120
00:06:02,159 --> 00:06:09,599
Microsoft Vittorio has this quote that

121
00:06:06,800 --> 00:06:11,819
using chocolate to make fudge does not

122
00:06:09,599 --> 00:06:15,979
make chocolate equal fudge and it's<font color="#E5E5E5"> sort</font>

123
00:06:11,819 --> 00:06:20,189
of a good like analogy to keep in<font color="#E5E5E5"> mind</font>

124
00:06:15,979 --> 00:06:23,699
so you<font color="#E5E5E5"> can use OAuth 2 to make a login</font>

125
00:06:20,189 --> 00:06:27,529
flow for authentication<font color="#E5E5E5"> but oh aw</font><font color="#CCCCCC"> 2 by</font>

126
00:06:23,699 --> 00:06:30,779
itself is an authorization framework and

127
00:06:27,529 --> 00:06:34,349
I'll nitpick on another point which is

128
00:06:30,779 --> 00:06:37,830
<font color="#CCCCCC">to say</font><font color="#E5E5E5"> that Oh auth one really was an</font>

129
00:06:34,349 --> 00:06:40,438
authentication<font color="#E5E5E5"> protocol but oh aww too</font>

130
00:06:37,830 --> 00:06:42,448
if you if you go to<font color="#E5E5E5"> the first spec</font><font color="#CCCCCC"> that</font>

131
00:06:40,439 --> 00:06:45,749
was written<font color="#E5E5E5"> it calls it an authorization</font>

132
00:06:42,449 --> 00:06:48,240
framework so some of the frustration

133
00:06:45,749 --> 00:06:50,399
with OAuth 2 was wroth one was a

134
00:06:48,240 --> 00:06:53,279
perfectly good authentication protocol a

135
00:06:50,399 --> 00:06:56,120
while to is really a nothing it's not<font color="#E5E5E5"> a</font>

136
00:06:53,279 --> 00:06:57,919
protocol at all it's a framework so

137
00:06:56,120 --> 00:07:00,740
of a set of common like words and

138
00:06:57,919 --> 00:07:03,530
patterns that we use so there was a lot

139
00:07:00,740 --> 00:07:05,720
<font color="#CCCCCC">of frustration about this but the reason</font>

140
00:07:03,530 --> 00:07:08,270
was was that<font color="#CCCCCC"> Oh auth one was good at</font>

141
00:07:05,720 --> 00:07:11,600
solving authentication but it didn't

142
00:07:08,270 --> 00:07:13,760
really<font color="#E5E5E5"> address other authorization use</font>

143
00:07:11,600 --> 00:07:16,639
cases that<font color="#CCCCCC"> we were facing like can I</font>

144
00:07:13,760 --> 00:07:19,370
post on<font color="#E5E5E5"> your wall or you know there was</font>

145
00:07:16,639 --> 00:07:21,560
just<font color="#CCCCCC"> other we want in it when oh</font><font color="#E5E5E5"> aw</font><font color="#CCCCCC"> too</font>

146
00:07:19,370 --> 00:07:24,050
has written the design goal was to

147
00:07:21,560 --> 00:07:26,320
address a whole number of authorization

148
00:07:24,050 --> 00:07:31,610
use cases not<font color="#E5E5E5"> just not just the</font>

149
00:07:26,320 --> 00:07:35,240
authentication login flow so if you're

150
00:07:31,610 --> 00:07:37,070
familiar with ldap ldap is not one

151
00:07:35,240 --> 00:07:40,340
standard it's a whole bunch of standards

152
00:07:37,070 --> 00:07:44,630
or and and and<font color="#E5E5E5"> Oh auth is really the</font>

153
00:07:40,340 --> 00:07:46,549
same way there's it's<font color="#E5E5E5"> really growing</font>

154
00:07:44,630 --> 00:07:49,159
it's also there's a lot of innovation in

155
00:07:46,550 --> 00:07:53,960
oh off so this<font color="#CCCCCC"> is as if yesterday</font><font color="#E5E5E5"> I</font>

156
00:07:49,160 --> 00:07:58,430
counted<font color="#E5E5E5"> 14 rfcs and 14 active drafts so</font>

157
00:07:53,960 --> 00:08:03,190
that's a lot of<font color="#E5E5E5"> content for for</font>

158
00:07:58,430 --> 00:08:03,190
something that's<font color="#CCCCCC"> not even a protocol so</font>

159
00:08:03,700 --> 00:08:08,120
so and that includes just<font color="#E5E5E5"> to give you an</font>

160
00:08:06,289 --> 00:08:12,530
idea of<font color="#E5E5E5"> the other breadth of the</font>

161
00:08:08,120 --> 00:08:16,760
standard it includes the main sort of

162
00:08:12,530 --> 00:08:21,109
the basis of it is is 6749 which is you

163
00:08:16,760 --> 00:08:24,590
know the oauth2 framework and it defines

164
00:08:21,110 --> 00:08:28,449
the main flows and n terms and

165
00:08:24,590 --> 00:08:32,390
conventions there's quite a number of

166
00:08:28,449 --> 00:08:34,640
rfcs that have to do with tokens JWT

167
00:08:32,390 --> 00:08:37,370
which is used quite a bit outside<font color="#CCCCCC"> of</font>

168
00:08:34,640 --> 00:08:40,968
<font color="#E5E5E5">oooff now is in the OAuth on working</font>

169
00:08:37,370 --> 00:08:46,190
group at IETF but there's also standards

170
00:08:40,969 --> 00:08:50,029
that define algorithms like if i use<font color="#E5E5E5"> aes</font>

171
00:08:46,190 --> 00:08:51,800
as the<font color="#CCCCCC"> key word that's defined in a in a</font>

172
00:08:50,029 --> 00:08:53,689
standard so we all<font color="#E5E5E5"> know that that</font>

173
00:08:51,800 --> 00:08:57,199
respond corresponds to a certain

174
00:08:53,690 --> 00:09:00,860
algorithm<font color="#E5E5E5"> so there's you know there's</font>

175
00:08:57,200 --> 00:09:05,350
crypto or standards that that enable

176
00:09:00,860 --> 00:09:09,529
signing and an encryption there's

177
00:09:05,350 --> 00:09:11,600
standards that basically normalize

178
00:09:09,529 --> 00:09:14,779
for insecurity conventions is it's it's

179
00:09:11,600 --> 00:09:16,610
gotten really quite quite large I think

180
00:09:14,779 --> 00:09:19,129
some of the original frustration with

181
00:09:16,610 --> 00:09:21,350
OAuth was that the first back didn't

182
00:09:19,129 --> 00:09:23,029
<font color="#E5E5E5">really address the breadth of what auth</font>

183
00:09:21,350 --> 00:09:25,550
one did but<font color="#E5E5E5"> when you look at these you</font>

184
00:09:23,029 --> 00:09:27,170
know 20 you know Doc's together they're

185
00:09:25,550 --> 00:09:30,019
<font color="#E5E5E5">getting they're starting to get there on</font>

186
00:09:27,170 --> 00:09:35,529
<font color="#E5E5E5">the bottom link is where you can get all</font>

187
00:09:30,019 --> 00:09:40,459
these docs in one place so let's look<font color="#E5E5E5"> at</font>

188
00:09:35,529 --> 00:09:44,449
the roles so in this diagram i<font color="#E5E5E5"> actually</font>

189
00:09:40,459 --> 00:09:46,998
have if there's a if there's a little

190
00:09:44,449 --> 00:09:50,359
character like this in it it's a person

191
00:09:46,999 --> 00:09:53,139
and if there's not<font color="#E5E5E5"> it's software so you</font>

192
00:09:50,360 --> 00:09:57,470
might hear the term three-legged OAuth

193
00:09:53,139 --> 00:10:00,019
so the three legs would<font color="#CCCCCC"> be let's start</font>

194
00:09:57,470 --> 00:10:02,420
<font color="#E5E5E5">with the resource server that's the</font>

195
00:10:00,019 --> 00:10:05,899
thing<font color="#CCCCCC"> that has the api's that's the</font>

196
00:10:02,420 --> 00:10:08,800
content there's the authorization server

197
00:10:05,899 --> 00:10:11,629
that's the thing<font color="#CCCCCC"> that issues the token</font>

198
00:10:08,800 --> 00:10:14,689
that in debt authorized and the client

199
00:10:11,629 --> 00:10:16,910
is the thing that's connected to the

200
00:10:14,689 --> 00:10:20,870
requesting party the person is trying to

201
00:10:16,910 --> 00:10:23,240
get the content so I have some<font color="#CCCCCC"> other</font>

202
00:10:20,870 --> 00:10:25,730
people in here who<font color="#CCCCCC"> are important I'm</font>

203
00:10:23,240 --> 00:10:30,019
actors so at the top we have the

204
00:10:25,730 --> 00:10:32,360
resource owner so the person who's in

205
00:10:30,019 --> 00:10:36,949
charge of controlling access to that

206
00:10:32,360 --> 00:10:38,839
content in an enterprise situation that

207
00:10:36,949 --> 00:10:40,969
could be the guy who's in charge of the

208
00:10:38,839 --> 00:10:43,550
I am system you know who makes<font color="#E5E5E5"> the</font>

209
00:10:40,970 --> 00:10:48,559
policies about which groups or you know

210
00:10:43,550 --> 00:10:50,449
can get to which which URLs we also<font color="#E5E5E5"> have</font>

211
00:10:48,559 --> 00:10:52,910
the developer and<font color="#CCCCCC"> there the developer</font>

212
00:10:50,449 --> 00:10:55,250
plays a pretty active role in OAuth to

213
00:10:52,910 --> 00:10:58,279
the developer needs to get client client

214
00:10:55,250 --> 00:11:06,470
credentials and needs to<font color="#E5E5E5"> understand how</font>

215
00:10:58,279 --> 00:11:09,290
to obtain these tokens so<font color="#E5E5E5"> before I go</font>

216
00:11:06,470 --> 00:11:11,480
into the profiles /<font color="#E5E5E5"> 2 I wanted to talk a</font>

217
00:11:09,290 --> 00:11:15,079
little bit about<font color="#E5E5E5"> sort of the building</font>

218
00:11:11,480 --> 00:11:17,660
blocks of Roth<font color="#CCCCCC"> to I like</font><font color="#E5E5E5"> to start with</font>

219
00:11:15,079 --> 00:11:20,959
scopes this is really too hard too small

220
00:11:17,660 --> 00:11:22,339
to<font color="#CCCCCC"> see I now see but let me just give</font>

221
00:11:20,959 --> 00:11:27,079
you an idea<font color="#CCCCCC"> um</font>

222
00:11:22,339 --> 00:11:29,749
paid<font color="#CCCCCC"> I took Google has one page I'll add</font>

223
00:11:27,079 --> 00:11:32,689
the URL of<font color="#CCCCCC"> that page to this slide and</font>

224
00:11:29,749 --> 00:11:35,660
that page tells you all of<font color="#E5E5E5"> googles</font><font color="#CCCCCC"> ap is</font>

225
00:11:32,689 --> 00:11:38,300
and what scopes are required to call

226
00:11:35,660 --> 00:11:41,629
those AP is so just looking at this

227
00:11:38,300 --> 00:11:45,949
example they have<font color="#CCCCCC"> a gene a genomics API</font>

228
00:11:41,629 --> 00:11:48,910
which I had no<font color="#CCCCCC"> idea and there's an API</font>

229
00:11:45,949 --> 00:11:53,508
that lets you to<font color="#CCCCCC"> view and manage</font><font color="#E5E5E5"> your</font>

230
00:11:48,910 --> 00:11:57,019
Google Google bigquery whatever that is

231
00:11:53,509 --> 00:12:00,470
so the<font color="#CCCCCC"> idea is is that for each of these</font>

232
00:11:57,019 --> 00:12:03,800
sort of like different features in<font color="#E5E5E5"> their</font>

233
00:12:00,470 --> 00:12:05,809
<font color="#E5E5E5">AP is you might have to attain a token</font>

234
00:12:03,800 --> 00:12:07,490
with a different scope so there could be

235
00:12:05,809 --> 00:12:11,300
you know to make it easy there could be

236
00:12:07,490 --> 00:12:13,819
like a reed token and a right token the

237
00:12:11,300 --> 00:12:17,329
<font color="#E5E5E5">convention is and so scopes is used to</font>

238
00:12:13,819 --> 00:12:21,229
sort of specify what are the permissions

239
00:12:17,329 --> 00:12:24,878
associated with with this token the

240
00:12:21,230 --> 00:12:28,670
convention<font color="#CCCCCC"> is to use non colliding</font>

241
00:12:24,879 --> 00:12:30,050
identifiers for scopes so<font color="#CCCCCC"> URLs are good</font>

242
00:12:28,670 --> 00:12:33,170
because they're in the context of a

243
00:12:30,050 --> 00:12:35,269
domain your ends if you if you even

244
00:12:33,170 --> 00:12:41,709
remember what those are you could use

245
00:12:35,269 --> 00:12:44,509
your ends<font color="#E5E5E5"> too so what are these tokens</font>

246
00:12:41,709 --> 00:12:46,339
so there's there's actually a lot<font color="#E5E5E5"> of</font>

247
00:12:44,509 --> 00:12:48,350
<font color="#CCCCCC">different types of tokens the token is</font>

248
00:12:46,339 --> 00:12:50,420
what the client is<font color="#CCCCCC"> going to present to</font>

249
00:12:48,350 --> 00:12:54,319
<font color="#CCCCCC">the resource server in order to say I</font>

250
00:12:50,420 --> 00:12:57,339
have access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> this thing in OAuth 2 in</font>

251
00:12:54,319 --> 00:13:00,019
the token response there'll be one

252
00:12:57,339 --> 00:13:01,670
there'll be access underscore token

253
00:13:00,019 --> 00:13:04,429
where you have the token and there'll be

254
00:13:01,670 --> 00:13:07,429
a token type field<font color="#CCCCCC"> that'll tell you what</font>

255
00:13:04,429 --> 00:13:09,949
kind<font color="#E5E5E5"> of tokens there are the most people</font>

256
00:13:07,429 --> 00:13:13,579
tend to think<font color="#E5E5E5"> about bearer tokens when</font>

257
00:13:09,949 --> 00:13:18,529
they think of OAuth 2 AB aerotek token

258
00:13:13,579 --> 00:13:20,679
is like a sort of a string that's long

259
00:13:18,529 --> 00:13:23,389
enough that makes it hard to guess

260
00:13:20,679 --> 00:13:26,029
actually<font color="#CCCCCC"> 0 auth to provide some</font>

261
00:13:23,389 --> 00:13:27,709
guidelines about how complex it should

262
00:13:26,029 --> 00:13:32,259
be I<font color="#E5E5E5"> forget what it is i</font><font color="#CCCCCC"> think it's like</font>

263
00:13:27,709 --> 00:13:34,640
<font color="#CCCCCC">two to the 142 2 to the 170 or something</font>

264
00:13:32,259 --> 00:13:37,790
so that's a bearer token and

265
00:13:34,640 --> 00:13:40,460
<font color="#E5E5E5">and and with with this bearer token if</font>

266
00:13:37,790 --> 00:13:43,370
you present it to an API it means you

267
00:13:40,460 --> 00:13:47,480
have access to call that API so the

268
00:13:43,370 --> 00:13:51,710
client needs<font color="#E5E5E5"> to</font><font color="#CCCCCC"> protect the the bearer</font>

269
00:13:47,480 --> 00:13:55,610
token<font color="#E5E5E5"> sam'l sam'l uses bearer tokens to</font>

270
00:13:51,710 --> 00:13:59,260
if you're familiar with sam'l the sam'l

271
00:13:55,610 --> 00:14:05,870
is also using<font color="#E5E5E5"> basically a bearer token</font>

272
00:13:59,260 --> 00:14:11,630
the oauth2 to find this JWT spec so JWT

273
00:14:05,870 --> 00:14:14,900
is a very compact format to send a a

274
00:14:11,630 --> 00:14:18,800
signed and encrypted<font color="#E5E5E5"> JSON and if you</font>

275
00:14:14,900 --> 00:14:21,380
<font color="#CCCCCC">ever look at it at a JW</font><font color="#E5E5E5"> State JWT you'll</font>

276
00:14:18,800 --> 00:14:24,589
<font color="#E5E5E5">notice</font><font color="#CCCCCC"> that it has at least one and</font>

277
00:14:21,380 --> 00:14:27,050
usually two periods and those periods to

278
00:14:24,590 --> 00:14:29,780
limit the parts of<font color="#E5E5E5"> the token so the</font>

279
00:14:27,050 --> 00:14:32,540
first the<font color="#E5E5E5"> first part of the token tells</font>

280
00:14:29,780 --> 00:14:36,079
you how is this token signed and

281
00:14:32,540 --> 00:14:38,599
encrypted the second part<font color="#CCCCCC"> of the token</font>

282
00:14:36,080 --> 00:14:41,990
is the actual payload and the last parts

283
00:14:38,600 --> 00:14:44,300
of signature if the token is not signed

284
00:14:41,990 --> 00:14:48,170
then the signature will be<font color="#E5E5E5"> left off and</font>

285
00:14:44,300 --> 00:14:51,859
it only have one period there's other

286
00:14:48,170 --> 00:14:53,660
kinds of tokens so holder of key or

287
00:14:51,860 --> 00:14:57,200
proof of possession tokens are more

288
00:14:53,660 --> 00:14:59,719
secure so these require the possession

289
00:14:57,200 --> 00:15:04,310
of some cryptographic key in order<font color="#E5E5E5"> for</font>

290
00:14:59,720 --> 00:15:06,110
the receiver<font color="#E5E5E5"> of the token to or they can</font>

291
00:15:04,310 --> 00:15:08,479
<font color="#CCCCCC">be validated</font><font color="#E5E5E5"> cryptographically that</font>

292
00:15:06,110 --> 00:15:11,210
means if the tokens are stolen they

293
00:15:08,480 --> 00:15:13,160
won't do the attacker any good so

294
00:15:11,210 --> 00:15:17,540
they're more secure but it adds some

295
00:15:13,160 --> 00:15:20,240
more security and then what one<font color="#CCCCCC"> of the</font>

296
00:15:17,540 --> 00:15:24,260
innovations in 002 is to introduce this

297
00:15:20,240 --> 00:15:28,250
idea of token binding where the<font color="#CCCCCC"> SSL</font>

298
00:15:24,260 --> 00:15:30,770
channel that the token travels over is

299
00:15:28,250 --> 00:15:33,290
bound to the token so that if somebody

300
00:15:30,770 --> 00:15:36,890
steals a token but they're using it on a

301
00:15:33,290 --> 00:15:40,000
different<font color="#CCCCCC"> SSL channel the resource</font>

302
00:15:36,890 --> 00:15:40,000
server can reject it

303
00:15:42,260 --> 00:15:50,310
sure yes all of these to come well

304
00:15:48,750 --> 00:15:51,810
actually<font color="#E5E5E5"> the holder of key improve your</font>

305
00:15:50,310 --> 00:15:58,349
possession<font color="#CCCCCC"> would it</font><font color="#E5E5E5"> be bearer tokens</font>

306
00:15:51,810 --> 00:16:00,479
yeah so one part that's common 20 auth

307
00:15:58,350 --> 00:16:03,780
is<font color="#E5E5E5"> client credentials if you've ever</font>

308
00:16:00,480 --> 00:16:06,000
called an API that's oh uh protected you

309
00:16:03,780 --> 00:16:09,740
probably<font color="#E5E5E5"> notice that you need a client</font>

310
00:16:06,000 --> 00:16:15,150
ID and some type of client credential to

311
00:16:09,740 --> 00:16:17,340
to call the api so<font color="#E5E5E5"> oh so how do you get</font>

312
00:16:15,150 --> 00:16:20,340
this these<font color="#E5E5E5"> Klein credentials that</font>

313
00:16:17,340 --> 00:16:21,780
happens through registration these are

314
00:16:20,340 --> 00:16:24,240
<font color="#CCCCCC">some pictures of how Google handles</font>

315
00:16:21,780 --> 00:16:26,130
registration they have some forms which

316
00:16:24,240 --> 00:16:28,260
the developer goes to and they click on

317
00:16:26,130 --> 00:16:29,910
you know<font color="#E5E5E5"> I need client credentials and</font>

318
00:16:28,260 --> 00:16:33,150
they fill out the form and<font color="#E5E5E5"> they get</font>

319
00:16:29,910 --> 00:16:35,880
their their credentials but this could

320
00:16:33,150 --> 00:16:38,520
also be automated via AP<font color="#E5E5E5"> is and there's</font>

321
00:16:35,880 --> 00:16:43,800
an<font color="#E5E5E5"> oauth2 standard for client</font>

322
00:16:38,520 --> 00:16:46,980
registration the most confusing part o

323
00:16:43,800 --> 00:16:50,099
auth are the grants and these are sort

324
00:16:46,980 --> 00:16:53,670
of the flows that you can use in order

325
00:16:50,100 --> 00:16:56,340
<font color="#E5E5E5">to obtain permission the primary flows</font>

326
00:16:53,670 --> 00:16:59,969
that are defined in 002 is the

327
00:16:56,340 --> 00:17:01,770
authorization code implicit<font color="#CCCCCC"> Klein</font>

328
00:16:59,970 --> 00:17:03,900
credentials resource owner password

329
00:17:01,770 --> 00:17:09,800
credentials I have swim lanes for this

330
00:17:03,900 --> 00:17:12,930
coming<font color="#E5E5E5"> up so let's just jump into</font><font color="#CCCCCC"> it so</font>

331
00:17:09,800 --> 00:17:15,480
this<font color="#CCCCCC"> is probably too detailed for the</font>

332
00:17:12,930 --> 00:17:19,380
presentation Oh ought to people love

333
00:17:15,480 --> 00:17:23,790
these swim lanes the basic<font color="#E5E5E5"> idea is in</font>

334
00:17:19,380 --> 00:17:26,339
this flow is that the the<font color="#E5E5E5"> person is</font>

335
00:17:23,790 --> 00:17:29,940
going to let's look at a sign-in flow

336
00:17:26,339 --> 00:17:34,020
authentication flow using OAuth so the

337
00:17:29,940 --> 00:17:36,480
person<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to hit a resource the</font>

338
00:17:34,020 --> 00:17:39,300
resource is going to redirect to the

339
00:17:36,480 --> 00:17:40,920
authorization server the authorization

340
00:17:39,300 --> 00:17:44,010
server is going<font color="#E5E5E5"> to ask the person do you</font>

341
00:17:40,920 --> 00:17:47,010
authorize remember that screen we saw in

342
00:17:44,010 --> 00:17:50,610
the<font color="#E5E5E5"> beginning so you're going to hit yes</font>

343
00:17:47,010 --> 00:17:53,370
and at that<font color="#E5E5E5"> point a code which would</font>

344
00:17:50,610 --> 00:17:55,199
<font color="#E5E5E5">also be some type of unguessable string</font>

345
00:17:53,370 --> 00:17:58,049
is going to flow back to

346
00:17:55,200 --> 00:18:00,480
client and the client is going to<font color="#E5E5E5"> take</font>

347
00:17:58,049 --> 00:18:03,090
that code and then present it to the

348
00:18:00,480 --> 00:18:05,940
authorization server with its client

349
00:18:03,090 --> 00:18:08,158
credentials and say I have a code here

350
00:18:05,940 --> 00:18:11,190
are my client credentials I would like

351
00:18:08,159 --> 00:18:13,610
tokens and the authorization server will

352
00:18:11,190 --> 00:18:16,490
respond with an access token and

353
00:18:13,610 --> 00:18:20,070
potentially also<font color="#E5E5E5"> with a refresh token</font>

354
00:18:16,490 --> 00:18:22,860
the access token is used to call the api

355
00:18:20,070 --> 00:18:27,200
on the resource server the Refresh token

356
00:18:22,860 --> 00:18:29,939
is used is presented<font color="#CCCCCC"> to the</font>

357
00:18:27,200 --> 00:18:33,539
authorization server to obtain a new

358
00:18:29,940 --> 00:18:36,630
access<font color="#CCCCCC"> token the access token is</font>

359
00:18:33,539 --> 00:18:38,789
normally short-lived<font color="#E5E5E5"> I think that there</font>

360
00:18:36,630 --> 00:18:40,409
are guidelines in the<font color="#E5E5E5"> OAuth you spec you</font>

361
00:18:38,789 --> 00:18:43,320
know somewhere between a minute and five

362
00:18:40,409 --> 00:18:46,049
<font color="#E5E5E5">minutes something like that the Refresh</font>

363
00:18:43,320 --> 00:18:50,639
token is long-lived a lot of times the

364
00:18:46,049 --> 00:18:52,740
Refresh token will be will be rotated so

365
00:18:50,639 --> 00:18:55,408
when you<font color="#CCCCCC"> ask for a new tokens you'll get</font>

366
00:18:52,740 --> 00:19:00,179
back a new refresh token and it end a

367
00:18:55,409 --> 00:19:03,679
new access<font color="#CCCCCC"> token so but that's the basic</font>

368
00:19:00,179 --> 00:19:06,840
idea<font color="#CCCCCC"> of authorization code user</font>

369
00:19:03,679 --> 00:19:10,260
authorizes code goes to the client the

370
00:19:06,840 --> 00:19:16,230
<font color="#E5E5E5">client presents its client creds and</font>

371
00:19:10,260 --> 00:19:19,440
gets a token so implicit flow is used

372
00:19:16,230 --> 00:19:22,470
when you have an application<font color="#CCCCCC"> that</font>

373
00:19:19,440 --> 00:19:26,370
actually lives in the browser this is a

374
00:19:22,470 --> 00:19:28,799
basically a JavaScript application and

375
00:19:26,370 --> 00:19:32,668
so it's all a totally client-side

376
00:19:28,799 --> 00:19:36,059
application and in this case it's a

377
00:19:32,669 --> 00:19:40,919
little bit<font color="#E5E5E5"> shorter and what happens is</font>

378
00:19:36,059 --> 00:19:42,809
is the<font color="#E5E5E5"> client asked for token in instead</font>

379
00:19:40,919 --> 00:19:45,210
<font color="#E5E5E5">of getting back the code and trading the</font>

380
00:19:42,809 --> 00:19:49,440
code for<font color="#E5E5E5"> a token the client just asked</font>

381
00:19:45,210 --> 00:19:53,460
<font color="#CCCCCC">for a token out rain so basically the</font>

382
00:19:49,440 --> 00:19:58,440
client you know the person is redirected

383
00:19:53,460 --> 00:20:00,870
to the to the opie to the or I'm sorry

384
00:19:58,440 --> 00:20:03,299
<font color="#E5E5E5">to the authorization server the person</font>

385
00:20:00,870 --> 00:20:06,989
authorizes the authorization server

386
00:20:03,299 --> 00:20:09,220
returns on the token to<font color="#E5E5E5"> the client so</font>

387
00:20:06,990 --> 00:20:13,659
this flow is it's really<font color="#E5E5E5"> only a per</font>

388
00:20:09,220 --> 00:20:17,650
priate for for<font color="#CCCCCC"> javascript clients in the</font>

389
00:20:13,659 --> 00:20:20,919
browser there's the the there's no point

390
00:20:17,650 --> 00:20:23,140
using<font color="#E5E5E5"> klein credentials in a javascript</font>

391
00:20:20,919 --> 00:20:25,059
application<font color="#E5E5E5"> in the browser because</font>

392
00:20:23,140 --> 00:20:30,490
<font color="#E5E5E5">there's no way to hide the client</font>

393
00:20:25,059 --> 00:20:33,158
credentials from the person so if you

394
00:20:30,490 --> 00:20:35,740
see anyone using<font color="#E5E5E5"> a implicit flow for a</font>

395
00:20:33,159 --> 00:20:37,809
<font color="#E5E5E5">mobile application or web application</font>

396
00:20:35,740 --> 00:20:41,679
advise them against it that's one of the

397
00:20:37,809 --> 00:20:43,629
most common<font color="#CCCCCC"> mistakes we see now o auth</font>

398
00:20:41,679 --> 00:20:47,320
defines this resource owner password

399
00:20:43,630 --> 00:20:49,870
credential flow and and and so in this

400
00:20:47,320 --> 00:20:52,389
case the client actually takes the

401
00:20:49,870 --> 00:20:54,280
password of the person submits it to the

402
00:20:52,390 --> 00:20:56,650
resource server and gets<font color="#E5E5E5"> back a token</font>

403
00:20:54,280 --> 00:20:58,450
<font color="#E5E5E5">and if you're thinking</font><font color="#CCCCCC"> isn't that what</font>

404
00:20:56,650 --> 00:21:00,850
<font color="#E5E5E5">we're trying to prevent in the first</font>

405
00:20:58,450 --> 00:21:05,590
place the answer is<font color="#CCCCCC"> yes so don't use</font>

406
00:21:00,850 --> 00:21:07,719
that flow um it's in order to use that

407
00:21:05,590 --> 00:21:10,030
flow you have to trust the client<font color="#E5E5E5"> but</font>

408
00:21:07,720 --> 00:21:16,210
it's I<font color="#E5E5E5"> don't even know why it's there</font>

409
00:21:10,030 --> 00:21:18,070
but it's there so oo auth to there's a

410
00:21:16,210 --> 00:21:20,380
separate spec for something called token

411
00:21:18,070 --> 00:21:22,320
introspection so how does the resource

412
00:21:20,380 --> 00:21:26,440
server know that these tokens are good

413
00:21:22,320 --> 00:21:28,750
there's a couple of ways one way<font color="#E5E5E5"> is that</font>

414
00:21:26,440 --> 00:21:30,549
the resource server might be the

415
00:21:28,750 --> 00:21:32,679
authorization server so it might

416
00:21:30,549 --> 00:21:34,750
actually have that token in a database

417
00:21:32,679 --> 00:21:37,450
somewhere and it might just<font color="#CCCCCC"> look up the</font>

418
00:21:34,750 --> 00:21:39,610
<font color="#CCCCCC">token and see if it's expired or not but</font>

419
00:21:37,450 --> 00:21:42,070
what<font color="#E5E5E5"> if the resource server and the</font>

420
00:21:39,610 --> 00:21:44,049
authorization server are different so

421
00:21:42,070 --> 00:21:46,178
think about<font color="#E5E5E5"> Google they have one</font>

422
00:21:44,049 --> 00:21:49,570
authorization server they have tons<font color="#E5E5E5"> of</font>

423
00:21:46,179 --> 00:21:51,789
API servers so in that case you<font color="#CCCCCC"> need</font>

424
00:21:49,570 --> 00:21:55,809
<font color="#CCCCCC">some way to check if this token is is</font>

425
00:21:51,789 --> 00:21:59,289
still valid one way that that you can

426
00:21:55,809 --> 00:22:03,158
accomplish this is by using JWT's if the

427
00:21:59,289 --> 00:22:06,940
authorization server signs the token and

428
00:22:03,159 --> 00:22:09,789
the the claw of the<font color="#E5E5E5"> resource server can</font>

429
00:22:06,940 --> 00:22:12,370
cryptographically verify that it's the

430
00:22:09,789 --> 00:22:14,740
integrity then it doesn't then that's

431
00:22:12,370 --> 00:22:17,110
good it's good to go that the payload of

432
00:22:14,740 --> 00:22:19,840
the token it's expiration could be in

433
00:22:17,110 --> 00:22:21,639
the token itself but

434
00:22:19,840 --> 00:22:25,270
if it's just a bearer token it's just a

435
00:22:21,640 --> 00:22:28,059
string so in that case<font color="#CCCCCC"> we have an</font><font color="#E5E5E5"> API</font>

436
00:22:25,270 --> 00:22:30,129
called token introspection and this

437
00:22:28,059 --> 00:22:32,379
lives at the authorization server and

438
00:22:30,130 --> 00:22:34,330
it's a way to<font color="#E5E5E5"> take a bearer token and</font>

439
00:22:32,380 --> 00:22:39,070
trade<font color="#CCCCCC"> it for something that's more</font>

440
00:22:34,330 --> 00:22:41,439
readable like a JSON and<font color="#E5E5E5"> so this this is</font>

441
00:22:39,070 --> 00:22:45,730
the defect the response that's defined

442
00:22:41,440 --> 00:22:47,770
an introspection API where the the

443
00:22:45,730 --> 00:22:51,690
authorization server must return that

444
00:22:47,770 --> 00:22:54,100
active equals true or true or false<font color="#E5E5E5"> but</font>

445
00:22:51,690 --> 00:22:56,140
then it can return any amount<font color="#E5E5E5"> of</font>

446
00:22:54,100 --> 00:22:58,570
information it wants extra about that

447
00:22:56,140 --> 00:23:00,610
token I didn't have<font color="#E5E5E5"> much room here so it</font>

448
00:22:58,570 --> 00:23:02,139
can only include a couple of claims but

449
00:23:00,610 --> 00:23:05,350
there could be quite a number of claims

450
00:23:02,140 --> 00:23:09,520
it returns so it's almost<font color="#E5E5E5"> like</font><font color="#CCCCCC"> a token</font>

451
00:23:05,350 --> 00:23:12,809
lookup service you can<font color="#E5E5E5"> think of it</font><font color="#CCCCCC"> okay</font>

452
00:23:09,520 --> 00:23:20,860
so we got through our first profile at

453
00:23:12,809 --> 00:23:23,440
1124<font color="#CCCCCC"> okay so now i wasyou is really</font>

454
00:23:20,860 --> 00:23:26,139
handy for the login flow for

455
00:23:23,440 --> 00:23:29,260
authentication and probable and the most

456
00:23:26,140 --> 00:23:34,510
widely deployed profile oo oo<font color="#CCCCCC"> two is</font>

457
00:23:29,260 --> 00:23:37,000
open ID connect now what's there's a lot

458
00:23:34,510 --> 00:23:39,940
of details missing from 0 to that if you

459
00:23:37,000 --> 00:23:42,250
implement you'd want to know like what

460
00:23:39,940 --> 00:23:44,110
is in these JSON tokens what are the

461
00:23:42,250 --> 00:23:46,600
keys what are the values what are the

462
00:23:44,110 --> 00:23:49,270
conventions for the values there's all

463
00:23:46,600 --> 00:23:52,299
sorts of information that if anybody

464
00:23:49,270 --> 00:23:54,309
<font color="#E5E5E5">implements oh aw too they'll have</font><font color="#CCCCCC"> to</font>

465
00:23:52,299 --> 00:23:58,418
make some design decisions about how<font color="#E5E5E5"> to</font>

466
00:23:54,309 --> 00:24:02,168
do it really<font color="#E5E5E5"> and so what open ID connect</font>

467
00:23:58,419 --> 00:24:07,380
does is it gives you the pattern that

468
00:24:02,169 --> 00:24:11,070
was was agreed on<font color="#E5E5E5"> by a</font><font color="#CCCCCC"> number of large</font>

469
00:24:07,380 --> 00:24:14,320
implementers of the vole want to

470
00:24:11,070 --> 00:24:17,408
particularly Microsoft and Google so

471
00:24:14,320 --> 00:24:20,529
Microsoft and Google both had 0 off to

472
00:24:17,409 --> 00:24:23,049
<font color="#CCCCCC">api's for authentication and the</font>

473
00:24:20,529 --> 00:24:25,659
<font color="#E5E5E5">conversation basically came down to do</font>

474
00:24:23,049 --> 00:24:29,049
we really need two different API is

475
00:24:25,659 --> 00:24:31,149
oauth2 api's for authentication can't we

476
00:24:29,049 --> 00:24:32,950
find like the common denominator<font color="#CCCCCC"> of our</font>

477
00:24:31,149 --> 00:24:35,620
AP is and

478
00:24:32,950 --> 00:24:39,280
and so in a lot in a large part that

479
00:24:35,620 --> 00:24:42,159
we're open ID connect comes from it's a

480
00:24:39,280 --> 00:24:44,800
combination of Facebook Microsoft Google

481
00:24:42,160 --> 00:24:46,560
and other large consumer<font color="#E5E5E5"> IDPs best</font>

482
00:24:44,800 --> 00:24:49,389
practices around Oh ought to

483
00:24:46,560 --> 00:24:52,840
authentication so the benefit of this is

484
00:24:49,390 --> 00:24:54,970
that those guys had a trial by fire and

485
00:24:52,840 --> 00:24:56,679
security you know everybody tried to

486
00:24:54,970 --> 00:24:58,300
hack them and they<font color="#E5E5E5"> learned a lot and</font>

487
00:24:56,680 --> 00:25:00,670
they've shared that with the community

488
00:24:58,300 --> 00:25:03,639
so there's a lot<font color="#CCCCCC"> of value to be gained</font>

489
00:25:00,670 --> 00:25:06,880
by adopting their their patterns and

490
00:25:03,640 --> 00:25:10,600
best practices now it's sort of

491
00:25:06,880 --> 00:25:13,210
confusing because an open ID connect if

492
00:25:10,600 --> 00:25:16,000
you read the specs which are not meant

493
00:25:13,210 --> 00:25:19,570
for<font color="#CCCCCC"> a really developers turpitude</font>

494
00:25:16,000 --> 00:25:21,010
they're not very<font color="#CCCCCC"> user-friendly but</font>

495
00:25:19,570 --> 00:25:22,570
what's confusing is it seems like

496
00:25:21,010 --> 00:25:25,570
there's only<font color="#E5E5E5"> two parties</font><font color="#CCCCCC"> and we know</font>

497
00:25:22,570 --> 00:25:27,970
that Oh auth is three-legged so what how

498
00:25:25,570 --> 00:25:31,060
do we<font color="#E5E5E5"> get these two parties so the two</font>

499
00:25:27,970 --> 00:25:33,310
parties in open ID connect are the the

500
00:25:31,060 --> 00:25:36,909
open ID provider and the relying party

501
00:25:33,310 --> 00:25:39,100
if you're familiar with sam'l you might

502
00:25:36,910 --> 00:25:42,280
be thinking identity provider and

503
00:25:39,100 --> 00:25:45,939
service provider so it's<font color="#E5E5E5"> the they're</font>

504
00:25:42,280 --> 00:25:48,370
basically analogous here with all the

505
00:25:45,940 --> 00:25:50,170
jargon has to change and an open ID

506
00:25:48,370 --> 00:25:53,889
connect but basically it's the same

507
00:25:50,170 --> 00:25:58,210
thing<font color="#E5E5E5"> what happens in the reason that</font>

508
00:25:53,890 --> 00:26:00,370
open ID connect has less roles is that

509
00:25:58,210 --> 00:26:02,320
the resource server and the

510
00:26:00,370 --> 00:26:07,300
authorization server are sort of globs

511
00:26:02,320 --> 00:26:10,720
into one unit so open ID connect has a

512
00:26:07,300 --> 00:26:13,450
one endpoint which is protected it's

513
00:26:10,720 --> 00:26:17,410
called the user info endpoint and that's

514
00:26:13,450 --> 00:26:20,530
where a client would say give<font color="#CCCCCC"> me this in</font>

515
00:26:17,410 --> 00:26:22,780
<font color="#CCCCCC">persons information so in our google</font>

516
00:26:20,530 --> 00:26:25,990
example you're authorizing the release

517
00:26:22,780 --> 00:26:29,710
of claims let's a first name last name

518
00:26:25,990 --> 00:26:31,810
email you know to a client a website so

519
00:26:29,710 --> 00:26:35,740
those claims are flowing from the<font color="#E5E5E5"> user</font>

520
00:26:31,810 --> 00:26:40,270
info endpoint but there's a the fact

521
00:26:35,740 --> 00:26:42,940
that that their club together means that

522
00:26:40,270 --> 00:26:44,360
we only have two actors here really

523
00:26:42,940 --> 00:26:46,640
<font color="#CCCCCC">they're three but one of the</font>

524
00:26:44,360 --> 00:26:50,030
combined the other interesting<font color="#CCCCCC"> thing</font>

525
00:26:46,640 --> 00:26:52,610
about open ID connect is because there's

526
00:26:50,030 --> 00:26:55,160
only one protected end point the user

527
00:26:52,610 --> 00:26:57,379
info<font color="#CCCCCC"> endpoint there's no there's less of</font>

528
00:26:55,160 --> 00:26:59,510
a need for token introspection because

529
00:26:57,380 --> 00:27:02,210
we know what<font color="#CCCCCC"> that access token is for</font>

530
00:26:59,510 --> 00:27:04,790
its for<font color="#CCCCCC"> the user info endpoint there's</font>

531
00:27:02,210 --> 00:27:09,470
no question<font color="#CCCCCC"> about what it's for so that</font>

532
00:27:04,790 --> 00:27:11,270
this these simplifications can make open

533
00:27:09,470 --> 00:27:13,280
ID connect a<font color="#E5E5E5"> little bit confusing to</font>

534
00:27:11,270 --> 00:27:15,650
people about why is it three-legged

535
00:27:13,280 --> 00:27:19,040
OAuth 2 but it really does fit the

536
00:27:15,650 --> 00:27:22,669
pattern there's<font color="#CCCCCC"> one other globbing of</font>

537
00:27:19,040 --> 00:27:25,220
roles here which is<font color="#CCCCCC"> that m in the first</font>

538
00:27:22,669 --> 00:27:28,610
oooff diagram we had the resource owner

539
00:27:25,220 --> 00:27:33,380
and the and the requesting party<font color="#E5E5E5"> were</font>

540
00:27:28,610 --> 00:27:36,080
different but in a in open ID connect

541
00:27:33,380 --> 00:27:39,830
they're the same so it's me giving

542
00:27:36,080 --> 00:27:42,980
access to my information so that's why

543
00:27:39,830 --> 00:27:45,710
you know<font color="#CCCCCC"> I am the</font><font color="#E5E5E5"> owner of my email</font>

544
00:27:42,980 --> 00:27:48,230
address<font color="#CCCCCC"> and phone</font><font color="#E5E5E5"> number and name so</font>

545
00:27:45,710 --> 00:27:50,540
that's why I'm the resource owner and

546
00:27:48,230 --> 00:27:52,820
I'm the one requesting access because

547
00:27:50,540 --> 00:27:55,159
I'm<font color="#E5E5E5"> going to a site I'm hitting loot log</font>

548
00:27:52,820 --> 00:27:58,309
in with google or log in with my open ID

549
00:27:55,160 --> 00:28:01,100
connect provider so there's a little<font color="#E5E5E5"> bit</font>

550
00:27:58,309 --> 00:28:07,480
of<font color="#CCCCCC"> motioning together but it really is a</font>

551
00:28:01,100 --> 00:28:10,549
profile of<font color="#CCCCCC"> Roth too so open ID connect</font>

552
00:28:07,480 --> 00:28:13,460
this is off the their main website open

553
00:28:10,549 --> 00:28:16,668
<font color="#CCCCCC">ID net / connect and it shows you that</font>

554
00:28:13,460 --> 00:28:19,240
it's oh off too but<font color="#E5E5E5"> it's also using some</font>

555
00:28:16,669 --> 00:28:21,890
of these other standards so it's using

556
00:28:19,240 --> 00:28:25,429
<font color="#E5E5E5">the hose a suite of standards from</font>

557
00:28:21,890 --> 00:28:28,640
oauth2 that's JSON web tokens that we

558
00:28:25,429 --> 00:28:31,669
talked about JSON web signing JSON web

559
00:28:28,640 --> 00:28:34,220
encryption JSON web keys json web key

560
00:28:31,669 --> 00:28:36,350
sets Jason Webb algorithms like that

561
00:28:34,220 --> 00:28:40,520
whole set of like because we didn't have

562
00:28:36,350 --> 00:28:42,678
<font color="#CCCCCC">enough certificate ki can key</font><font color="#E5E5E5"> set</font>

563
00:28:40,520 --> 00:28:47,090
standards we now have a whole new set of

564
00:28:42,679 --> 00:28:50,210
them in JSON the other<font color="#CCCCCC"> interesting thing</font>

565
00:28:47,090 --> 00:28:53,059
is that open ID<font color="#E5E5E5"> connect is also a number</font>

566
00:28:50,210 --> 00:28:55,520
<font color="#E5E5E5">of related standards and the main three</font>

567
00:28:53,059 --> 00:28:57,570
of those are a core discovery and

568
00:28:55,520 --> 00:29:00,379
dynamic client registration

569
00:28:57,570 --> 00:29:04,830
which I'll get into in a little bit more

570
00:29:00,380 --> 00:29:08,700
so open ID connect introduces a new flow

571
00:29:04,830 --> 00:29:10,830
the<font color="#E5E5E5"> hybrid flow and so remember we</font>

572
00:29:08,700 --> 00:29:12,900
talked about implicit flow and

573
00:29:10,830 --> 00:29:15,210
authorization code flow and those are

574
00:29:12,900 --> 00:29:17,370
still there<font color="#CCCCCC"> and open ID connect but</font>

575
00:29:15,210 --> 00:29:19,830
there's a new there's another flow

576
00:29:17,370 --> 00:29:23,959
that's used by connect called the hybrid

577
00:29:19,830 --> 00:29:27,330
flow and this this diagram I borrowed

578
00:29:23,960 --> 00:29:29,970
from some from nats a camera from<font color="#E5E5E5"> the</font>

579
00:29:27,330 --> 00:29:33,179
open ID<font color="#E5E5E5"> foundation and it's sort of</font>

580
00:29:29,970 --> 00:29:37,050
interesting because<font color="#E5E5E5"> you know implicit</font>

581
00:29:33,180 --> 00:29:39,300
gives you the goal with open ID connect

582
00:29:37,050 --> 00:29:42,960
with sand make simple things simple but

583
00:29:39,300 --> 00:29:46,590
also to support higher assurance

584
00:29:42,960 --> 00:29:49,980
transactions so you know at the bottom

585
00:29:46,590 --> 00:29:52,919
let's say we have plano auth then we

586
00:29:49,980 --> 00:29:55,530
have implicit flow implicit flow had no

587
00:29:52,920 --> 00:29:58,080
client authentication so it's not<font color="#E5E5E5"> quite</font>

588
00:29:55,530 --> 00:30:01,590
as secure then we have authorization

589
00:29:58,080 --> 00:30:04,679
code flow what hybrid flow introduces is

590
00:30:01,590 --> 00:30:06,330
more signing signing of the request and

591
00:30:04,680 --> 00:30:09,150
signing of the response and this adds

592
00:30:06,330 --> 00:30:12,000
extra extra security into the protocol

593
00:30:09,150 --> 00:30:14,370
you don't need<font color="#E5E5E5"> to use hybrid flow but if</font>

594
00:30:12,000 --> 00:30:18,840
you want to use it<font color="#CCCCCC"> to add security it's</font>

595
00:30:14,370 --> 00:30:20,879
there so this<font color="#CCCCCC"> is something that confuses</font>

596
00:30:18,840 --> 00:30:24,179
a lot of<font color="#E5E5E5"> people about open ID connect</font>

597
00:30:20,880 --> 00:30:26,340
this is so the way<font color="#CCCCCC"> that you specify the</font>

598
00:30:24,180 --> 00:30:27,960
flow<font color="#CCCCCC"> and open ID</font><font color="#E5E5E5"> connect is by</font>

599
00:30:26,340 --> 00:30:31,050
specifying what's called the response

600
00:30:27,960 --> 00:30:33,240
type so when<font color="#E5E5E5"> I first looked at open ID</font>

601
00:30:31,050 --> 00:30:35,490
connect I said well I want everything I

602
00:30:33,240 --> 00:30:37,410
want ID tokens I want codes i want that

603
00:30:35,490 --> 00:30:40,050
<font color="#E5E5E5">i want it all so i would ask for all</font>

604
00:30:37,410 --> 00:30:44,040
three and what I was basically<font color="#E5E5E5"> saying is</font>

605
00:30:40,050 --> 00:30:46,230
<font color="#E5E5E5">I want hybrid flow so the idea is is</font>

606
00:30:44,040 --> 00:30:49,530
like<font color="#E5E5E5"> those these keywords are used to</font>

607
00:30:46,230 --> 00:30:51,060
specify the flow so if you want to<font color="#E5E5E5"> do</font>

608
00:30:49,530 --> 00:30:53,610
authorization code flow you're just

609
00:30:51,060 --> 00:31:01,530
going to specify code as your response

610
00:30:53,610 --> 00:31:04,199
type so in awe to we have the access

611
00:31:01,530 --> 00:31:07,680
token and the Refresh token<font color="#E5E5E5"> in open ID</font>

612
00:31:04,200 --> 00:31:10,380
connect oh there's the ID token and the

613
00:31:07,680 --> 00:31:10,880
ID token tells you the details about

614
00:31:10,380 --> 00:31:13,940
what

615
00:31:10,880 --> 00:31:17,630
type of authentication happened so who

616
00:31:13,940 --> 00:31:19,100
issued this token you know in Sam well

617
00:31:17,630 --> 00:31:24,290
that would probably the entity idea of

618
00:31:19,100 --> 00:31:26,990
the IDP who the subject is the<font color="#E5E5E5"> user and</font>

619
00:31:24,290 --> 00:31:29,659
<font color="#CCCCCC">that could be your gmail address or it</font>

620
00:31:26,990 --> 00:31:32,840
could be<font color="#E5E5E5"> some type of other pairwise</font>

621
00:31:29,660 --> 00:31:35,330
non-correlated will identifier the

622
00:31:32,840 --> 00:31:38,480
audience<font color="#E5E5E5"> is who is this token issued to</font>

623
00:31:35,330 --> 00:31:40,280
if the token was not issued to you your

624
00:31:38,480 --> 00:31:45,470
client ID you should throw that token

625
00:31:40,280 --> 00:31:48,139
out the when does this token expire when

626
00:31:45,470 --> 00:31:50,270
was it issued when did the person

627
00:31:48,140 --> 00:31:53,120
authenticate if your google and you

628
00:31:50,270 --> 00:31:56,480
haven't<font color="#E5E5E5"> Rihanna cated in three months or</font>

629
00:31:53,120 --> 00:32:00,919
so in your browser then the application

630
00:31:56,480 --> 00:32:03,230
might want to<font color="#CCCCCC"> know that so also how ACR</font>

631
00:32:00,920 --> 00:32:05,590
is how did you authenticate did you use

632
00:32:03,230 --> 00:32:08,180
password did you use you<font color="#E5E5E5"> know to factor</font>

633
00:32:05,590 --> 00:32:11,030
there's another parameter called AMR

634
00:32:08,180 --> 00:32:13,310
which can give additional information

635
00:32:11,030 --> 00:32:15,860
about the type of authentication so

636
00:32:13,310 --> 00:32:18,590
these things aren't defined inoue<font color="#CCCCCC"> to so</font>

637
00:32:15,860 --> 00:32:22,370
you need open ID connect filled in some

638
00:32:18,590 --> 00:32:25,370
of these gaps am to really take ol2 from

639
00:32:22,370 --> 00:32:30,889
from authorization to usable

640
00:32:25,370 --> 00:32:33,679
authentication protocol so open ID

641
00:32:30,890 --> 00:32:35,810
connect defines discovery one of the

642
00:32:33,680 --> 00:32:37,670
cool things about connect that's maybe

643
00:32:35,810 --> 00:32:40,700
hasn't really taken off as much as we'd

644
00:32:37,670 --> 00:32:45,050
like is the idea that connect could be

645
00:32:40,700 --> 00:32:48,050
used for let's say more dynamic

646
00:32:45,050 --> 00:32:52,520
provisioning so I go<font color="#E5E5E5"> to a website I want</font>

647
00:32:48,050 --> 00:32:55,129
<font color="#E5E5E5">to buy a jacket and I've never done</font>

648
00:32:52,520 --> 00:32:57,410
business with this website before so I

649
00:32:55,130 --> 00:33:00,560
put in I go to check out I put in my

650
00:32:57,410 --> 00:33:03,740
email address<font color="#E5E5E5"> my cat glue org and the</font>

651
00:33:00,560 --> 00:33:06,440
website makes a discovery request to

652
00:33:03,740 --> 00:33:07,910
glue org it says<font color="#E5E5E5"> I have a user from your</font>

653
00:33:06,440 --> 00:33:12,220
domain I'd like to authenticate that

654
00:33:07,910 --> 00:33:15,260
user so send that user back to glue org

655
00:33:12,220 --> 00:33:17,750
I'm sorry so make a discovery request so

656
00:33:15,260 --> 00:33:20,510
you just take you take the mic at and

657
00:33:17,750 --> 00:33:23,120
you drop it and you take glued https

658
00:33:20,510 --> 00:33:23,860
glue org and you add on that<font color="#CCCCCC"> well-known</font>

659
00:33:23,120 --> 00:33:26,020
open

660
00:33:23,860 --> 00:33:29,620
i D configuration and you get back a

661
00:33:26,020 --> 00:33:32,910
JSON object that tells you where are the

662
00:33:29,620 --> 00:33:35,439
<font color="#CCCCCC">endpoints for</font><font color="#E5E5E5"> my open ID connect service</font>

663
00:33:32,910 --> 00:33:37,990
it has other configuration information

664
00:33:35,440 --> 00:33:41,650
for the client so what type of crypto

665
00:33:37,990 --> 00:33:43,330
supported what scopes are available what

666
00:33:41,650 --> 00:33:46,090
other features open<font color="#E5E5E5"> ID</font><font color="#CCCCCC"> connector</font>

667
00:33:43,330 --> 00:33:48,850
available to<font color="#E5E5E5"> you so here's the</font>

668
00:33:46,090 --> 00:33:52,330
registration endpoint so if you want to

669
00:33:48,850 --> 00:33:54,040
<font color="#E5E5E5">get a client ID and secret you call you</font>

670
00:33:52,330 --> 00:33:56,649
would<font color="#CCCCCC"> the first call the registration</font>

671
00:33:54,040 --> 00:33:58,928
endpoint get your client<font color="#E5E5E5"> credentials</font>

672
00:33:56,650 --> 00:34:01,480
then redirect the person to the

673
00:33:58,929 --> 00:34:04,840
authorization endpoint the person would

674
00:34:01,480 --> 00:34:08,619
have authentic<font color="#CCCCCC"> 8 you get back claims so</font>

675
00:34:04,840 --> 00:34:10,899
so discovery really<font color="#E5E5E5"> kicks us off if</font>

676
00:34:08,619 --> 00:34:14,320
you're<font color="#E5E5E5"> thinking about sam'l in a lot of</font>

677
00:34:10,899 --> 00:34:18,190
<font color="#CCCCCC">ways this is the sam'l metadata also</font>

678
00:34:14,320 --> 00:34:21,820
here is the<font color="#CCCCCC"> J wks URI those are the</font>

679
00:34:18,190 --> 00:34:23,530
public keys that are used for signing so

680
00:34:21,820 --> 00:34:26,320
you have everything you need here to

681
00:34:23,530 --> 00:34:31,300
basically<font color="#E5E5E5"> bootstrap sending the user to</font>

682
00:34:26,320 --> 00:34:33,190
this domain for authentication dynamic

683
00:34:31,300 --> 00:34:36,190
client registrations another interesting

684
00:34:33,190 --> 00:34:37,990
one I showed<font color="#E5E5E5"> you the form before of how</font>

685
00:34:36,190 --> 00:34:40,720
you can manually sign up for client

686
00:34:37,989 --> 00:34:45,668
credentials but<font color="#E5E5E5"> that doesn't scale too</font>

687
00:34:40,719 --> 00:34:47,949
well also there's a lot of details about

688
00:34:45,668 --> 00:34:50,888
how you might want to configure your

689
00:34:47,949 --> 00:34:53,319
client what are your preferences as a

690
00:34:50,889 --> 00:34:55,450
client what type of<font color="#E5E5E5"> often if you're a TV</font>

691
00:34:53,320 --> 00:34:59,980
you maybe don't want to use password

692
00:34:55,449 --> 00:35:02,350
authentication maybe one feature i think

693
00:34:59,980 --> 00:35:05,260
is<font color="#E5E5E5"> really important is that open ID</font>

694
00:35:02,350 --> 00:35:09,850
connect allows the client to register a

695
00:35:05,260 --> 00:35:13,869
JW KS a<font color="#CCCCCC"> json web key set so if your</font>

696
00:35:09,850 --> 00:35:15,850
client doesn't want to use API key and

697
00:35:13,869 --> 00:35:18,490
secret you know client ID and client

698
00:35:15,850 --> 00:35:21,339
secret which is basically like<font color="#E5E5E5"> password</font>

699
00:35:18,490 --> 00:35:25,540
for a client<font color="#E5E5E5"> right your client during</font>

700
00:35:21,340 --> 00:35:27,540
registration can register its public key

701
00:35:25,540 --> 00:35:31,150
<font color="#E5E5E5">and then during client authentication</font>

702
00:35:27,540 --> 00:35:33,609
can use there's a<font color="#E5E5E5"> challenge response so</font>

703
00:35:31,150 --> 00:35:34,900
you can prove ownership of the of the of

704
00:35:33,609 --> 00:35:36,529
the<font color="#E5E5E5"> corresponding key that you</font>

705
00:35:34,900 --> 00:35:39,710
registered

706
00:35:36,530 --> 00:35:43,220
so and<font color="#CCCCCC"> this client registration is</font>

707
00:35:39,710 --> 00:35:45,020
really useful for other protocols in

708
00:35:43,220 --> 00:35:51,500
fact we use it<font color="#CCCCCC"> in the next in the next</font>

709
00:35:45,020 --> 00:35:55,100
protocol two now connect as it has is

710
00:35:51,500 --> 00:35:59,210
starting to define<font color="#CCCCCC"> logout there's two</font>

711
00:35:55,100 --> 00:36:03,200
draft specs 14 front channels<font color="#CCCCCC"> logout and</font>

712
00:35:59,210 --> 00:36:05,210
one for a<font color="#E5E5E5"> back channel logout yeah so</font>

713
00:36:03,200 --> 00:36:08,839
front channel log out front channel

714
00:36:05,210 --> 00:36:11,330
means through the browser so the<font color="#E5E5E5"> way</font>

715
00:36:08,840 --> 00:36:12,920
that<font color="#E5E5E5"> this basically works is you hit log</font>

716
00:36:11,330 --> 00:36:17,360
out let's say you're logged<font color="#CCCCCC"> into</font><font color="#E5E5E5"> 10</font>

717
00:36:12,920 --> 00:36:19,580
websites you hit log out and it's an it

718
00:36:17,360 --> 00:36:22,940
sends<font color="#E5E5E5"> you to the end session end point</font>

719
00:36:19,580 --> 00:36:25,819
at the open<font color="#E5E5E5"> ad provider the</font><font color="#CCCCCC"> n session</font>

720
00:36:22,940 --> 00:36:27,490
endpoint kills a session<font color="#E5E5E5"> in the opie but</font>

721
00:36:25,820 --> 00:36:33,950
you're still logged<font color="#CCCCCC"> into</font><font color="#E5E5E5"> 10 applications</font>

722
00:36:27,490 --> 00:36:37,370
then it returns a page where there are

723
00:36:33,950 --> 00:36:39,470
10<font color="#E5E5E5"> should be 10 iframes and each iframe</font>

724
00:36:37,370 --> 00:36:41,900
should contain the<font color="#E5E5E5"> logout URI for the</font>

725
00:36:39,470 --> 00:36:43,970
for the back end applications the

726
00:36:41,900 --> 00:36:45,680
iframes load automatically so

727
00:36:43,970 --> 00:36:47,750
hypothetically they've sort of tricked

728
00:36:45,680 --> 00:36:51,460
your browser to call log out on 10

729
00:36:47,750 --> 00:36:53,840
different sites that all sounds<font color="#CCCCCC"> great</font>

730
00:36:51,460 --> 00:36:56,390
there's<font color="#CCCCCC"> those</font><font color="#E5E5E5"> problems if you're</font>

731
00:36:53,840 --> 00:36:58,070
blocking<font color="#CCCCCC"> third-party cookies your</font>

732
00:36:56,390 --> 00:37:00,680
browser might not allow these these

733
00:36:58,070 --> 00:37:02,810
external like cookies to be cleared from

734
00:37:00,680 --> 00:37:06,859
within a page rendered by<font color="#E5E5E5"> the way the</font>

735
00:37:02,810 --> 00:37:08,930
open ID provider also the open ID

736
00:37:06,860 --> 00:37:10,550
provider never gets any confirmation

737
00:37:08,930 --> 00:37:11,960
that you actually logged out from those

738
00:37:10,550 --> 00:37:14,300
10 apps so it's sort of like a

739
00:37:11,960 --> 00:37:16,760
<font color="#CCCCCC">best-effort</font><font color="#E5E5E5"> if one of those iframes</font>

740
00:37:14,300 --> 00:37:18,500
fails you might still<font color="#CCCCCC"> be logged</font><font color="#E5E5E5"> into one</font>

741
00:37:16,760 --> 00:37:22,700
at one happened and no one would really

742
00:37:18,500 --> 00:37:25,250
know you are or the opie<font color="#E5E5E5"> back-channel</font>

743
00:37:22,700 --> 00:37:27,649
<font color="#CCCCCC">log out is where the opie tries to make</font>

744
00:37:25,250 --> 00:37:29,780
a call to<font color="#E5E5E5"> the application and say this</font>

745
00:37:27,650 --> 00:37:31,570
user logged out so the opie can get a

746
00:37:29,780 --> 00:37:34,100
verification that<font color="#CCCCCC"> log out happened</font>

747
00:37:31,570 --> 00:37:36,170
however your<font color="#E5E5E5"> browser might not have</font>

748
00:37:34,100 --> 00:37:38,420
gotten a<font color="#CCCCCC"> chance to clear the application</font>

749
00:37:36,170 --> 00:37:40,490
cookies and it puts more of a burden on

750
00:37:38,420 --> 00:37:42,290
the application to make sure that the

751
00:37:40,490 --> 00:37:47,089
sessions active every<font color="#E5E5E5"> time you hit the</font>

752
00:37:42,290 --> 00:37:48,330
site so<font color="#E5E5E5"> back-channel also has its own</font>

753
00:37:47,090 --> 00:37:53,310
problems

754
00:37:48,330 --> 00:37:55,850
it's kinda complicated and unreliable so

755
00:37:53,310 --> 00:38:00,210
there's a new effort on the oauth2

756
00:37:55,850 --> 00:38:02,790
called<font color="#E5E5E5"> security events and really logout</font>

757
00:38:00,210 --> 00:38:04,710
needs to be asynchronous so there needs

758
00:38:02,790 --> 00:38:08,130
to be a way for<font color="#E5E5E5"> the applications to</font>

759
00:38:04,710 --> 00:38:10,530
register<font color="#CCCCCC"> I log this session out and for</font>

760
00:38:08,130 --> 00:38:13,530
the<font color="#E5E5E5"> opie to be able to query and track</font>

761
00:38:10,530 --> 00:38:15,420
that this log out really happened so the

762
00:38:13,530 --> 00:38:18,800
security and there's<font color="#CCCCCC"> actually a</font><font color="#E5E5E5"> number</font>

763
00:38:15,420 --> 00:38:21,810
of asynchronous patterns int again in

764
00:38:18,800 --> 00:38:24,740
security like account compromises

765
00:38:21,810 --> 00:38:27,660
another one one one<font color="#CCCCCC"> of the one of</font><font color="#E5E5E5"> the</font>

766
00:38:24,740 --> 00:38:29,879
web here are 10 websites<font color="#E5E5E5"> maybe one</font>

767
00:38:27,660 --> 00:38:32,160
<font color="#E5E5E5">websites detect suspicious activity and</font>

768
00:38:29,880 --> 00:38:34,410
wants to notify the other web site so

769
00:38:32,160 --> 00:38:37,560
there's a number of use cases for an

770
00:38:34,410 --> 00:38:39,690
asynchronous infrastructure for sharing

771
00:38:37,560 --> 00:38:42,930
messages log out is the poster child

772
00:38:39,690 --> 00:38:45,210
because logout gets really ugly in the

773
00:38:42,930 --> 00:38:47,759
enterprise space to that when you have

774
00:38:45,210 --> 00:38:50,850
multiple multiple protocols let's say

775
00:38:47,760 --> 00:38:53,820
you have a legacy I<font color="#E5E5E5"> am system like</font>

776
00:38:50,850 --> 00:38:56,610
siteminder you have sam'l you have open

777
00:38:53,820 --> 00:38:58,260
ID connect you've Kaz and the person

778
00:38:56,610 --> 00:39:00,240
logs out<font color="#CCCCCC"> of a cow's site how do you</font>

779
00:38:58,260 --> 00:39:02,610
propagate that message across all<font color="#E5E5E5"> those</font>

780
00:39:00,240 --> 00:39:04,830
different protocols it's<font color="#E5E5E5"> really like</font>

781
00:39:02,610 --> 00:39:06,960
prone to failure one thing you<font color="#CCCCCC"> might</font>

782
00:39:04,830 --> 00:39:11,220
think<font color="#CCCCCC"> about is making sure the</font>

783
00:39:06,960 --> 00:39:12,720
applications use session cookies so that

784
00:39:11,220 --> 00:39:14,759
if you kill the browser at least the

785
00:39:12,720 --> 00:39:17,970
sessions going to be gone and you you

786
00:39:14,760 --> 00:39:20,700
have one way to tell the person to be

787
00:39:17,970 --> 00:39:25,589
done<font color="#CCCCCC"> okay so we're on the 10 minute</font>

788
00:39:20,700 --> 00:39:30,330
warning<font color="#CCCCCC"> eat five minutes</font><font color="#E5E5E5"> okay I can do</font>

789
00:39:25,590 --> 00:39:34,050
it so we're in<font color="#E5E5E5"> the third profile so this</font>

790
00:39:30,330 --> 00:39:36,630
last profile so what we've been talking

791
00:39:34,050 --> 00:39:39,120
about with<font color="#CCCCCC"> Kinect is authentication who</font>

792
00:39:36,630 --> 00:39:41,220
is this person after we know who this

793
00:39:39,120 --> 00:39:45,690
person<font color="#E5E5E5"> is we want to know can this</font>

794
00:39:41,220 --> 00:39:47,609
person call a certain API so I've been

795
00:39:45,690 --> 00:39:50,580
active in the<font color="#CCCCCC"> ooma working group user</font>

796
00:39:47,610 --> 00:39:53,100
<font color="#CCCCCC">managed access it's a contara working</font>

797
00:39:50,580 --> 00:39:57,060
group standard and to give<font color="#CCCCCC"> you the like</font>

798
00:39:53,100 --> 00:39:59,819
the<font color="#E5E5E5"> five minute overview of uma so we</font>

799
00:39:57,060 --> 00:40:01,890
have a person and that person is using

800
00:39:59,820 --> 00:40:04,600
some software

801
00:40:01,890 --> 00:40:06,759
let's say a mobile app or website and

802
00:40:04,600 --> 00:40:08,950
the person authenticates to the

803
00:40:06,760 --> 00:40:11,500
authorization server let's<font color="#E5E5E5"> say via open</font>

804
00:40:08,950 --> 00:40:14,740
ID connect and then after<font color="#CCCCCC"> that person</font>

805
00:40:11,500 --> 00:40:17,050
authenticates they call an<font color="#CCCCCC"> api and they</font>

806
00:40:14,740 --> 00:40:20,890
need<font color="#E5E5E5"> to present some token to that</font><font color="#CCCCCC"> api</font>

807
00:40:17,050 --> 00:40:23,500
in order to so that<font color="#CCCCCC"> the resource server</font>

808
00:40:20,890 --> 00:40:25,109
knows that they're authorized and the

809
00:40:23,500 --> 00:40:28,810
token should be issued by the

810
00:40:25,110 --> 00:40:30,970
authorization server centrally if you're

811
00:40:28,810 --> 00:40:33,250
<font color="#CCCCCC">thinking about policy enforcement</font><font color="#E5E5E5"> point</font>

812
00:40:30,970 --> 00:40:35,020
policy decision point the resource

813
00:40:33,250 --> 00:40:37,570
server is<font color="#CCCCCC"> the policy enforcement</font><font color="#E5E5E5"> point</font>

814
00:40:35,020 --> 00:40:41,800
the authorization server is a<font color="#E5E5E5"> policy</font>

815
00:40:37,570 --> 00:40:43,720
decision point so in plano off to

816
00:40:41,800 --> 00:40:46,450
<font color="#E5E5E5">something like I showed you for</font><font color="#CCCCCC"> Google</font>

817
00:40:43,720 --> 00:40:49,359
we know the scope we saw it on that<font color="#CCCCCC"> web</font>

818
00:40:46,450 --> 00:40:52,480
<font color="#CCCCCC">page right we request a token for that</font>

819
00:40:49,360 --> 00:40:56,320
scope we get back<font color="#CCCCCC"> the token we present</font>

820
00:40:52,480 --> 00:40:58,000
<font color="#CCCCCC">the token for the resource server and at</font>

821
00:40:56,320 --> 00:41:01,050
that point<font color="#E5E5E5"> the resource server needs to</font>

822
00:40:58,000 --> 00:41:04,720
validate it either via cryptographically

823
00:41:01,050 --> 00:41:09,220
by looking at the signing of a JWT or by

824
00:41:04,720 --> 00:41:11,410
calling token introspection so what's

825
00:41:09,220 --> 00:41:15,209
the problem<font color="#E5E5E5"> with</font><font color="#CCCCCC"> that design well one</font>

826
00:41:11,410 --> 00:41:19,839
problem is that the user or the

827
00:41:15,210 --> 00:41:21,750
developer needs to know the scope that's

828
00:41:19,840 --> 00:41:24,820
why<font color="#CCCCCC"> Google publishes</font><font color="#E5E5E5"> all those scopes</font>

829
00:41:21,750 --> 00:41:27,640
the<font color="#E5E5E5"> scopes must be versioned if Google</font>

830
00:41:24,820 --> 00:41:28,960
changes the scope that's required they

831
00:41:27,640 --> 00:41:31,060
need to<font color="#E5E5E5"> tell you</font><font color="#CCCCCC"> about it they need</font>

832
00:41:28,960 --> 00:41:34,270
that's why it needs to be versioned so

833
00:41:31,060 --> 00:41:36,520
uma introduces a loser coupling between

834
00:41:34,270 --> 00:41:39,220
the authorization infrastructure on the

835
00:41:36,520 --> 00:41:43,540
developer so here's the quick overview

836
00:41:39,220 --> 00:41:46,089
of the flow the client so the person

837
00:41:43,540 --> 00:41:49,029
authenticated and they<font color="#E5E5E5"> call that API and</font>

838
00:41:46,090 --> 00:41:53,320
the first time they call the api they

839
00:41:49,030 --> 00:41:56,170
have no token so the resource server

840
00:41:53,320 --> 00:41:57,550
says<font color="#CCCCCC"> ha no token</font><font color="#E5E5E5"> and it obtains what's</font>

841
00:41:56,170 --> 00:42:00,490
called a permission ticket by

842
00:41:57,550 --> 00:42:03,930
<font color="#E5E5E5">registering the requested resource and</font>

843
00:42:00,490 --> 00:42:08,229
the<font color="#CCCCCC"> scopes with the authorization server</font>

844
00:42:03,930 --> 00:42:10,450
and they return a 403 or 403

845
00:42:08,230 --> 00:42:12,640
unauthorized and return that<font color="#E5E5E5"> permission</font>

846
00:42:10,450 --> 00:42:14,680
ticket back<font color="#CCCCCC"> to the client and now the</font>

847
00:42:12,640 --> 00:42:16,870
client says well I didn't

848
00:42:14,680 --> 00:42:19,299
get the resource but<font color="#E5E5E5"> I did get this</font>

849
00:42:16,870 --> 00:42:21,490
permission ticket it takes a permission

850
00:42:19,300 --> 00:42:24,190
ticket presents<font color="#CCCCCC"> it to the authorization</font>

851
00:42:21,490 --> 00:42:26,529
server and says i need a token for this

852
00:42:24,190 --> 00:42:29,800
permission ticket the authorization

853
00:42:26,530 --> 00:42:32,410
server evaluates the policies issues the

854
00:42:29,800 --> 00:42:35,200
token now the client calls the resource

855
00:42:32,410 --> 00:42:37,060
server with the token the resource

856
00:42:35,200 --> 00:42:38,919
server still has to<font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure that</font>

857
00:42:37,060 --> 00:42:42,210
that's a valid token by either calling

858
00:42:38,920 --> 00:42:45,340
token introspection or by M

859
00:42:42,210 --> 00:42:51,400
cryptographically verifying so the

860
00:42:45,340 --> 00:42:53,470
<font color="#CCCCCC">advantage of this is that we the</font><font color="#E5E5E5"> client</font>

861
00:42:51,400 --> 00:42:55,750
doesn't need to<font color="#CCCCCC"> know the scope it just</font>

862
00:42:53,470 --> 00:42:57,399
calls the API and it doesn't need<font color="#E5E5E5"> to</font>

863
00:42:55,750 --> 00:43:01,290
know anything<font color="#E5E5E5"> about the scope so we can</font>

864
00:42:57,400 --> 00:43:01,290
change the scopes it's a loser bundling

865
00:43:01,590 --> 00:43:05,860
let me show you<font color="#E5E5E5"> a quick example this is</font>

866
00:43:04,000 --> 00:43:08,740
my last slide I just got the two-minute

867
00:43:05,860 --> 00:43:10,630
warning but that's pretty<font color="#E5E5E5"> much</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so</font>

868
00:43:08,740 --> 00:43:13,750
this<font color="#CCCCCC"> is just</font><font color="#E5E5E5"> an example of how we</font>

869
00:43:10,630 --> 00:43:16,630
implement it as a glue but we created

870
00:43:13,750 --> 00:43:22,060
basically a JSON document that we use to

871
00:43:16,630 --> 00:43:25,360
<font color="#CCCCCC">protect and so we provide the URL the</font>

872
00:43:22,060 --> 00:43:27,730
method I'm get post put delete and the

873
00:43:25,360 --> 00:43:30,460
scope that's required so this is used by

874
00:43:27,730 --> 00:43:33,850
the API server to register what are my

875
00:43:30,460 --> 00:43:35,950
AP<font color="#E5E5E5"> is what are the scopes required and</font>

876
00:43:33,850 --> 00:43:39,790
what<font color="#CCCCCC"> are the methods associated with</font>

877
00:43:35,950 --> 00:43:41,410
those scopes so so you can sort of use

878
00:43:39,790 --> 00:43:43,960
like in an enterprise setting you know

879
00:43:41,410 --> 00:43:46,060
to me like if<font color="#CCCCCC"> you're if you ever looked</font>

880
00:43:43,960 --> 00:43:50,310
at siteminder it's it's a similar thing

881
00:43:46,060 --> 00:43:53,170
you know the URL is the resource the

882
00:43:50,310 --> 00:43:55,660
scope is sort of the policies<font color="#CCCCCC"> that have</font>

883
00:43:53,170 --> 00:43:57,760
to be evaluated<font color="#CCCCCC"> or maps to the policies</font>

884
00:43:55,660 --> 00:44:02,440
<font color="#CCCCCC">that have to be evaluated in order to</font>

885
00:43:57,760 --> 00:44:05,410
give access so okay well that's I'm out

886
00:44:02,440 --> 00:44:09,820
of time so that was um you know probably

887
00:44:05,410 --> 00:44:12,730
like to dance but hopefully you're able

888
00:44:09,820 --> 00:44:14,530
to<font color="#CCCCCC"> follow it somewhat so</font><font color="#E5E5E5"> I'm the founder</font>

889
00:44:12,730 --> 00:44:16,780
and CEO of glue glue is a free

890
00:44:14,530 --> 00:44:19,240
open-source identity and access

891
00:44:16,780 --> 00:44:22,420
management platform we implement<font color="#CCCCCC"> open ID</font>

892
00:44:19,240 --> 00:44:24,399
connect and uma<font color="#E5E5E5"> and oh aw to you so if</font>

893
00:44:22,420 --> 00:44:25,630
you have any questions feel free to<font color="#E5E5E5"> hit</font>

894
00:44:24,400 --> 00:44:28,390
our<font color="#E5E5E5"> site and</font>

895
00:44:25,630 --> 00:44:29,500
download the server for free so<font color="#E5E5E5"> okay</font>

896
00:44:28,390 --> 00:44:35,868
thank you

897
00:44:29,500 --> 00:44:35,869
[Applause]

