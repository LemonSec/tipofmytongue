1
00:00:01,800 --> 00:00:21,840
[Music]

2
00:00:18,110 --> 00:00:25,590
it's it's about malware clustering<font color="#CCCCCC"> i am</font>

3
00:00:21,840 --> 00:00:27,599
i'm shrining and from alien vault<font color="#CCCCCC"> i i'm</font>

4
00:00:25,590 --> 00:00:30,090
basically<font color="#E5E5E5"> a data science guy trying to</font>

5
00:00:27,599 --> 00:00:33,480
look at network packets and analyze

6
00:00:30,090 --> 00:00:36,150
malware<font color="#E5E5E5"> based on the static and dynamic</font>

7
00:00:33,480 --> 00:00:38,010
<font color="#E5E5E5">features and other features</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> try to</font>

8
00:00:36,150 --> 00:00:41,910
cluster them and do other other<font color="#E5E5E5"> things</font>

9
00:00:38,010 --> 00:00:44,910
<font color="#CCCCCC">to to derive better insights about the</font>

10
00:00:41,910 --> 00:00:46,290
<font color="#CCCCCC">malware and in turn after</font><font color="#E5E5E5"> getting better</font>

11
00:00:44,910 --> 00:00:49,650
insights you can<font color="#E5E5E5"> do a lot of nice things</font>

12
00:00:46,290 --> 00:00:51,960
<font color="#E5E5E5">with it</font><font color="#CCCCCC"> i'll explain all of</font><font color="#E5E5E5"> them as we</font>

13
00:00:49,650 --> 00:00:53,280
<font color="#E5E5E5">go</font><font color="#CCCCCC"> and please don't hesitate</font><font color="#E5E5E5"> to raise</font>

14
00:00:51,960 --> 00:00:55,830
your hand and ask questions in<font color="#E5E5E5"> the</font>

15
00:00:53,280 --> 00:00:58,199
middle<font color="#CCCCCC"> because this is going</font><font color="#E5E5E5"> to be a bit</font>

16
00:00:55,830 --> 00:01:00,599
of sequence of<font color="#CCCCCC"> mathematical operations</font>

17
00:00:58,199 --> 00:01:03,599
<font color="#E5E5E5">on how you achieve your results so I</font>

18
00:01:00,600 --> 00:01:08,790
would like<font color="#E5E5E5"> you to ask</font><font color="#CCCCCC"> questions</font><font color="#E5E5E5"> as we</font>

19
00:01:03,600 --> 00:01:12,390
<font color="#E5E5E5">move forward need for clustering malware</font>

20
00:01:08,790 --> 00:01:14,130
has<font color="#E5E5E5"> anyone tried to cluster malware or</font>

21
00:01:12,390 --> 00:01:23,299
would you know what<font color="#E5E5E5"> benefits you would</font>

22
00:01:14,130 --> 00:01:23,298
<font color="#E5E5E5">achieve if you do so if sorry</font>

23
00:01:34,590 --> 00:01:40,210
yeah but that's<font color="#E5E5E5"> getting more into</font><font color="#CCCCCC"> the</font>

24
00:01:37,630 --> 00:01:42,910
malware<font color="#E5E5E5"> analysis itself which is done by</font>

25
00:01:40,210 --> 00:01:45,850
malware<font color="#CCCCCC"> researches but</font><font color="#E5E5E5"> this is from a</font>

26
00:01:42,910 --> 00:01:48,210
data science perspective<font color="#CCCCCC"> if you for</font>

27
00:01:45,850 --> 00:01:50,949
<font color="#CCCCCC">example if you if your</font><font color="#E5E5E5"> cluster</font><font color="#CCCCCC"> malware</font>

28
00:01:48,210 --> 00:01:53,350
<font color="#CCCCCC">you would know</font><font color="#E5E5E5"> what are the variants of</font>

29
00:01:50,950 --> 00:01:55,570
a malware present today so if so<font color="#CCCCCC"> it'd be</font>

30
00:01:53,350 --> 00:01:58,360
<font color="#CCCCCC">all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> more nice if</font><font color="#E5E5E5"> you cluster them on</font>

31
00:01:55,570 --> 00:01:59,860
a periodic basis<font color="#E5E5E5"> like once a</font><font color="#CCCCCC"> week</font><font color="#E5E5E5"> or</font>

32
00:01:58,360 --> 00:02:01,179
once a month or<font color="#CCCCCC"> every quarter if you</font>

33
00:01:59,860 --> 00:02:03,429
keep clustering and just look at the

34
00:02:01,180 --> 00:02:05,020
clusters<font color="#E5E5E5"> look at the clusters and see</font>

35
00:02:03,430 --> 00:02:07,420
the changes<font color="#CCCCCC"> in the cluster snapshots</font>

36
00:02:05,020 --> 00:02:10,509
<font color="#CCCCCC">you'll say hey I've seen like</font><font color="#E5E5E5"> seven</font>

37
00:02:07,420 --> 00:02:11,950
clusters<font color="#E5E5E5"> in this quarter</font><font color="#CCCCCC"> and two</font>

38
00:02:10,509 --> 00:02:13,929
quarters<font color="#E5E5E5"> later you see eight clusters</font>

39
00:02:11,950 --> 00:02:15,310
and<font color="#E5E5E5"> it's like you see what's going on is</font>

40
00:02:13,930 --> 00:02:17,890
this this and there's a new small

41
00:02:15,310 --> 00:02:20,130
cluster out there that could be some new

42
00:02:17,890 --> 00:02:22,510
<font color="#CCCCCC">malware which is which has</font><font color="#E5E5E5"> began</font>

43
00:02:20,130 --> 00:02:24,880
spreading<font color="#E5E5E5"> out that's one thing the other</font>

44
00:02:22,510 --> 00:02:26,859
is once<font color="#E5E5E5"> you cluster you can learn some</font>

45
00:02:24,880 --> 00:02:29,799
<font color="#CCCCCC">of the</font><font color="#E5E5E5"> salient features</font><font color="#CCCCCC"> in a cluster and</font>

46
00:02:26,860 --> 00:02:31,150
once you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> the salient features you</font>

47
00:02:29,800 --> 00:02:32,920
could do a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> very nice</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> with</font>

48
00:02:31,150 --> 00:02:35,170
it you<font color="#E5E5E5"> could you could write</font><font color="#CCCCCC"> just one</font>

49
00:02:32,920 --> 00:02:37,450
rule<font color="#CCCCCC"> to detect that whole family of</font>

50
00:02:35,170 --> 00:02:39,609
malware rather than writing<font color="#E5E5E5"> many rules</font>

51
00:02:37,450 --> 00:02:41,769
<font color="#E5E5E5">to</font><font color="#CCCCCC"> detect them that's</font><font color="#E5E5E5"> another that's one</font>

52
00:02:39,610 --> 00:02:43,690
thing the<font color="#CCCCCC"> other is once you</font><font color="#E5E5E5"> have this</font>

53
00:02:41,770 --> 00:02:47,040
whole clustering<font color="#CCCCCC"> mechanism</font><font color="#E5E5E5"> the whole</font>

54
00:02:43,690 --> 00:02:50,770
pipeline<font color="#E5E5E5"> the whole algorithm developed</font>

55
00:02:47,040 --> 00:02:53,700
<font color="#CCCCCC">in-house the good thing is for for</font>

56
00:02:50,770 --> 00:02:56,050
typically<font color="#E5E5E5"> for antivirus companies and</font>

57
00:02:53,700 --> 00:02:58,540
<font color="#CCCCCC">researchers</font><font color="#E5E5E5"> what they can do is using</font>

58
00:02:56,050 --> 00:03:02,890
<font color="#E5E5E5">this</font><font color="#CCCCCC"> pipeline</font><font color="#E5E5E5"> they will be able to</font>

59
00:02:58,540 --> 00:03:05,790
detect new<font color="#CCCCCC"> malware's very new Melges not</font>

60
00:03:02,890 --> 00:03:11,649
seen<font color="#CCCCCC"> before at all as early</font><font color="#E5E5E5"> as possible</font>

61
00:03:05,790 --> 00:03:13,450
<font color="#E5E5E5">right signatures for it</font><font color="#CCCCCC"> and and and push</font>

62
00:03:11,650 --> 00:03:16,560
it to their clients<font color="#CCCCCC"> so that their</font>

63
00:03:13,450 --> 00:03:19,899
clients<font color="#CCCCCC"> can you know can thwart</font><font color="#E5E5E5"> those</font>

64
00:03:16,560 --> 00:03:22,000
attacks<font color="#E5E5E5"> as early as possible</font><font color="#CCCCCC"> so all this</font>

65
00:03:19,900 --> 00:03:25,120
has<font color="#CCCCCC"> to be done very quickly</font><font color="#E5E5E5"> rather than</font>

66
00:03:22,000 --> 00:03:29,830
<font color="#E5E5E5">very late the key to doing</font><font color="#CCCCCC"> this quickly</font>

67
00:03:25,120 --> 00:03:34,150
is<font color="#CCCCCC"> to analyze millions of samples every</font>

68
00:03:29,830 --> 00:03:35,860
<font color="#E5E5E5">day and and compute the clusters compare</font>

69
00:03:34,150 --> 00:03:38,830
the clusters with previous cluster

70
00:03:35,860 --> 00:03:42,790
snapshots<font color="#E5E5E5"> try to find anomalous behavior</font>

71
00:03:38,830 --> 00:03:44,380
<font color="#E5E5E5">and then and then and then</font><font color="#CCCCCC"> just compress</font>

72
00:03:42,790 --> 00:03:47,519
all these things give a very few

73
00:03:44,380 --> 00:03:50,519
interesting malware samples to

74
00:03:47,520 --> 00:03:52,080
<font color="#E5E5E5">analysts who can look at it right very</font>

75
00:03:50,520 --> 00:03:54,630
good signatures for it and quickly

76
00:03:52,080 --> 00:03:56,970
distributed this needs to<font color="#E5E5E5"> be done</font><font color="#CCCCCC"> this</font>

77
00:03:54,630 --> 00:03:58,590
<font color="#E5E5E5">is this pipeline is essential and has to</font>

78
00:03:56,970 --> 00:04:02,190
be<font color="#E5E5E5"> done very quickly so you need to have</font>

79
00:03:58,590 --> 00:04:04,740
<font color="#E5E5E5">this massive parallel pipeline in</font><font color="#CCCCCC"> place</font>

80
00:04:02,190 --> 00:04:10,950
to do<font color="#E5E5E5"> all these things so</font><font color="#CCCCCC"> those are</font><font color="#E5E5E5"> very</font>

81
00:04:04,740 --> 00:04:16,250
<font color="#E5E5E5">nice things to do what is</font><font color="#CCCCCC"> done today to</font>

82
00:04:10,950 --> 00:04:18,659
do to<font color="#E5E5E5"> address this the scale problem</font>

83
00:04:16,250 --> 00:04:20,880
typically what<font color="#CCCCCC"> people do is they will</font>

84
00:04:18,660 --> 00:04:25,260
study the static and dynamic behavior<font color="#CCCCCC"> of</font>

85
00:04:20,880 --> 00:04:31,380
every malware<font color="#E5E5E5"> using some kind of tools</font>

86
00:04:25,260 --> 00:04:33,030
like<font color="#E5E5E5"> ID a pro or or or similar tools</font>

87
00:04:31,380 --> 00:04:35,580
they look at the static and dynamic

88
00:04:33,030 --> 00:04:38,010
behavior and based on<font color="#E5E5E5"> that they'll start</font>

89
00:04:35,580 --> 00:04:40,919
writing<font color="#E5E5E5"> rules and once your</font><font color="#CCCCCC"> rule is</font><font color="#E5E5E5"> set</font>

90
00:04:38,010 --> 00:04:43,110
<font color="#E5E5E5">they'll try to test it on some known</font>

91
00:04:40,920 --> 00:04:45,180
<font color="#E5E5E5">TCAPS some good</font><font color="#CCCCCC"> big</font><font color="#E5E5E5"> gaps on different</font>

92
00:04:43,110 --> 00:04:47,640
<font color="#CCCCCC">malware's and some some</font><font color="#E5E5E5"> good where and</font>

93
00:04:45,180 --> 00:04:49,980
once they have a<font color="#E5E5E5"> reasonable amount of</font>

94
00:04:47,640 --> 00:04:52,620
<font color="#CCCCCC">satisfaction they will release it to</font>

95
00:04:49,980 --> 00:04:57,300
their<font color="#E5E5E5"> clients</font><font color="#CCCCCC"> so that it's kind of it</font>

96
00:04:52,620 --> 00:05:00,600
helps in thwarting those particular

97
00:04:57,300 --> 00:05:03,740
<font color="#E5E5E5">malware and some of their variants it</font>

98
00:05:00,600 --> 00:05:06,690
has to be done very<font color="#E5E5E5"> very carefully so</font>

99
00:05:03,740 --> 00:05:09,570
<font color="#E5E5E5">you have to choose what static behaviors</font>

100
00:05:06,690 --> 00:05:12,330
to pick and what dynamic behaviors to

101
00:05:09,570 --> 00:05:14,969
pick and based on those you have<font color="#E5E5E5"> to have</font>

102
00:05:12,330 --> 00:05:16,740
your own<font color="#E5E5E5"> your cluster so clustering is</font>

103
00:05:14,970 --> 00:05:19,820
not like<font color="#E5E5E5"> it's big it's not generic you</font>

104
00:05:16,740 --> 00:05:22,560
have to you have to<font color="#CCCCCC"> know</font><font color="#E5E5E5"> well in advance</font>

105
00:05:19,820 --> 00:05:24,210
<font color="#CCCCCC">on what basis I'm going to cluster the</font>

106
00:05:22,560 --> 00:05:27,180
<font color="#E5E5E5">malgal am I going to cluster the malware</font>

107
00:05:24,210 --> 00:05:30,210
based on just the dynamic behavior<font color="#E5E5E5"> if it</font>

108
00:05:27,180 --> 00:05:32,940
is just dynamic or<font color="#E5E5E5"> am I mean am I going</font>

109
00:05:30,210 --> 00:05:35,219
to do it<font color="#CCCCCC"> just on HTTP HTTP behavior or</font>

110
00:05:32,940 --> 00:05:38,160
should it<font color="#CCCCCC"> should I include DNS based as</font>

111
00:05:35,220 --> 00:05:38,730
well or forget all all<font color="#E5E5E5"> dynamic behavior</font>

112
00:05:38,160 --> 00:05:40,890
should<font color="#E5E5E5"> I</font>

113
00:05:38,730 --> 00:05:42,630
I can also cluster only on static

114
00:05:40,890 --> 00:05:44,969
behavior what files were<font color="#CCCCCC"> returned what</font>

115
00:05:42,630 --> 00:05:47,550
what registry entries were you know

116
00:05:44,970 --> 00:05:49,830
deleted or edited and stuff like<font color="#E5E5E5"> that so</font>

117
00:05:47,550 --> 00:05:52,200
you<font color="#E5E5E5"> have to first think</font><font color="#CCCCCC"> about the</font>

118
00:05:49,830 --> 00:05:53,820
business<font color="#E5E5E5"> value and based on certain</font>

119
00:05:52,200 --> 00:05:56,039
priorities you make your decision<font color="#CCCCCC"> on</font>

120
00:05:53,820 --> 00:05:58,290
<font color="#CCCCCC">what basis you</font><font color="#E5E5E5"> must be clustering these</font>

121
00:05:56,040 --> 00:06:00,260
<font color="#CCCCCC">mailers and once you have</font><font color="#E5E5E5"> that in place</font>

122
00:05:58,290 --> 00:06:04,580
<font color="#CCCCCC">then</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can slowly</font>

123
00:06:00,260 --> 00:06:08,240
<font color="#E5E5E5">move ahead so you had so the key is you</font>

124
00:06:04,580 --> 00:06:10,729
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> know this in</font><font color="#E5E5E5"> advance prioritize</font>

125
00:06:08,240 --> 00:06:14,810
it and then start breaking it<font color="#CCCCCC"> down into</font>

126
00:06:10,730 --> 00:06:18,470
<font color="#CCCCCC">smaller manageable</font><font color="#E5E5E5"> pieces so what is a</font>

127
00:06:14,810 --> 00:06:19,990
<font color="#E5E5E5">good analysis you have</font><font color="#CCCCCC"> to do two things</font>

128
00:06:18,470 --> 00:06:22,730
from machine learning perspective

129
00:06:19,990 --> 00:06:26,750
<font color="#E5E5E5">feature selection the other is feature</font>

130
00:06:22,730 --> 00:06:30,020
engineering<font color="#E5E5E5"> feature selection is once</font>

131
00:06:26,750 --> 00:06:32,120
you have let's say a typical<font color="#CCCCCC"> tool to to</font>

132
00:06:30,020 --> 00:06:34,280
disassemble your malware you can see the

133
00:06:32,120 --> 00:06:40,700
static and dynamic analysis pick and

134
00:06:34,280 --> 00:06:44,570
choose what features you<font color="#CCCCCC"> want to - that</font>

135
00:06:40,700 --> 00:06:46,700
<font color="#CCCCCC">represents the crux of</font><font color="#E5E5E5"> that malware so</font>

136
00:06:44,570 --> 00:06:48,260
that is feature selection<font color="#E5E5E5"> whatever is</font>

137
00:06:46,700 --> 00:06:50,300
there you pick and<font color="#E5E5E5"> choose that's it no</font>

138
00:06:48,260 --> 00:06:53,360
more<font color="#CCCCCC"> no less</font><font color="#E5E5E5"> and then comes feature</font>

139
00:06:50,300 --> 00:06:55,970
engineering<font color="#CCCCCC"> which is which is a little</font>

140
00:06:53,360 --> 00:06:57,290
add-on<font color="#CCCCCC"> but extremely</font><font color="#E5E5E5"> powerful</font><font color="#CCCCCC"> for</font>

141
00:06:55,970 --> 00:07:00,230
machine learning purposes<font color="#E5E5E5"> which will</font>

142
00:06:57,290 --> 00:07:04,010
give you very<font color="#CCCCCC"> very which will boost the</font>

143
00:07:00,230 --> 00:07:05,840
performance<font color="#CCCCCC"> of your algorithm</font><font color="#E5E5E5"> so to do</font>

144
00:07:04,010 --> 00:07:07,700
feature engineering<font color="#E5E5E5"> you must really talk</font>

145
00:07:05,840 --> 00:07:11,119
with<font color="#CCCCCC"> the domain experts and say hey I</font>

146
00:07:07,700 --> 00:07:12,440
mean<font color="#CCCCCC"> ok before</font><font color="#E5E5E5"> I go that I need to tell</font>

147
00:07:11,120 --> 00:07:14,930
you what feature engineering<font color="#CCCCCC"> you so you</font>

148
00:07:12,440 --> 00:07:17,660
have<font color="#E5E5E5"> to combine different internal</font>

149
00:07:14,930 --> 00:07:20,240
features itself combine them in a linear

150
00:07:17,660 --> 00:07:23,420
<font color="#E5E5E5">way or in some polynomial way and then</font>

151
00:07:20,240 --> 00:07:25,310
say<font color="#CCCCCC"> ok if this this and this</font><font color="#E5E5E5"> occurs then</font>

152
00:07:23,420 --> 00:07:26,980
<font color="#E5E5E5">I'll have a score internal score for it</font>

153
00:07:25,310 --> 00:07:29,540
and<font color="#E5E5E5"> this code will be my derived</font>

154
00:07:26,980 --> 00:07:31,310
attribute it's not an inherent

155
00:07:29,540 --> 00:07:36,290
<font color="#E5E5E5">attributes a derived attribute basically</font>

156
00:07:31,310 --> 00:07:38,690
or this this<font color="#E5E5E5"> value plus log</font><font color="#CCCCCC"> of that</font>

157
00:07:36,290 --> 00:07:41,180
value plus you know a and have some

158
00:07:38,690 --> 00:07:43,040
other bucket of that<font color="#E5E5E5"> the third value is</font>

159
00:07:41,180 --> 00:07:44,690
something very special<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> very</font>

160
00:07:43,040 --> 00:07:47,060
unique<font color="#CCCCCC"> for this particular class of</font>

161
00:07:44,690 --> 00:07:48,950
malware<font color="#E5E5E5"> things of that sort</font><font color="#CCCCCC"> those are</font>

162
00:07:47,060 --> 00:07:57,860
that that's<font color="#E5E5E5"> what I call</font><font color="#CCCCCC"> as feature</font>

163
00:07:48,950 --> 00:08:00,800
<font color="#CCCCCC">engineering to write good signatures the</font>

164
00:07:57,860 --> 00:08:03,650
signature must be specific<font color="#E5E5E5"> enough to</font>

165
00:08:00,800 --> 00:08:09,940
<font color="#CCCCCC">capture the</font><font color="#E5E5E5"> malware that</font><font color="#CCCCCC"> it was written</font>

166
00:08:03,650 --> 00:08:13,758
for and it must<font color="#E5E5E5"> be generic enough to</font>

167
00:08:09,940 --> 00:08:15,589
catch<font color="#E5E5E5"> the</font><font color="#CCCCCC"> variants of the same malware</font>

168
00:08:13,759 --> 00:08:18,319
could be<font color="#CCCCCC"> variants which was written</font>

169
00:08:15,589 --> 00:08:19,539
before or new variants<font color="#CCCCCC"> that might come</font>

170
00:08:18,319 --> 00:08:22,909
tomorrow

171
00:08:19,539 --> 00:08:24,740
it must be generic<font color="#CCCCCC"> enough</font><font color="#E5E5E5"> and always you</font>

172
00:08:22,909 --> 00:08:27,409
strive for zero false positive and<font color="#E5E5E5"> zero</font>

173
00:08:24,740 --> 00:08:30,559
false negative force negatives these two

174
00:08:27,409 --> 00:08:33,468
are extremely hard problems but<font color="#CCCCCC"> I will</font>

175
00:08:30,559 --> 00:08:37,909
go<font color="#E5E5E5"> through some techniques which could</font>

176
00:08:33,469 --> 00:08:42,139
help in doing<font color="#E5E5E5"> so some of</font><font color="#CCCCCC"> the approaches</font>

177
00:08:37,909 --> 00:08:46,550
to<font color="#E5E5E5"> clustering malware or these hash</font>

178
00:08:42,139 --> 00:08:50,149
<font color="#E5E5E5">based hybrid using function call graphs</font>

179
00:08:46,550 --> 00:08:52,550
<font color="#E5E5E5">and using the opcode of the</font><font color="#CCCCCC"> malware</font>

180
00:08:50,149 --> 00:08:57,350
itself<font color="#CCCCCC"> I am NOT going to</font><font color="#E5E5E5"> talk about</font>

181
00:08:52,550 --> 00:09:00,500
function<font color="#CCCCCC"> call graph and opcode it could</font>

182
00:08:57,350 --> 00:09:02,480
be a talk on its own<font color="#CCCCCC"> I'll I'll very</font>

183
00:09:00,500 --> 00:09:05,720
<font color="#CCCCCC">quickly go through hash-based and hybrid</font>

184
00:09:02,480 --> 00:09:08,959
and we can iterate over<font color="#CCCCCC"> it for for more</font>

185
00:09:05,720 --> 00:09:14,860
detailed discussions<font color="#CCCCCC"> step by step</font>

186
00:09:08,959 --> 00:09:18,979
discussions<font color="#E5E5E5"> hash-based</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> I go there</font>

187
00:09:14,860 --> 00:09:22,370
<font color="#E5E5E5">this is our typical analyzed malware</font>

188
00:09:18,980 --> 00:09:25,130
file looks like<font color="#E5E5E5"> so if you if you run it</font>

189
00:09:22,370 --> 00:09:28,699
through<font color="#E5E5E5"> a cuckoo sandbox you will get a</font>

190
00:09:25,130 --> 00:09:31,670
JSON<font color="#E5E5E5"> output adjacent file the JSON file</font>

191
00:09:28,699 --> 00:09:33,380
will have<font color="#E5E5E5"> basically two big sections one</font>

192
00:09:31,670 --> 00:09:35,750
<font color="#CCCCCC">is the static analysis section</font><font color="#E5E5E5"> and then</font>

193
00:09:33,380 --> 00:09:38,389
the<font color="#CCCCCC"> dynamic analysis section</font><font color="#E5E5E5"> the static</font>

194
00:09:35,750 --> 00:09:39,829
analysis section<font color="#E5E5E5"> will tell you what</font>

195
00:09:38,389 --> 00:09:43,790
files were written<font color="#E5E5E5"> what files were</font>

196
00:09:39,829 --> 00:09:46,040
deleted what and<font color="#E5E5E5"> what files were edited</font>

197
00:09:43,790 --> 00:09:49,839
and stuff like that<font color="#E5E5E5"> and then the dynamic</font>

198
00:09:46,040 --> 00:09:52,880
analysis like<font color="#CCCCCC"> this shows what DNS</font>

199
00:09:49,839 --> 00:09:55,339
requests were sent and received and what

200
00:09:52,880 --> 00:09:57,709
HTTP traffic went through and many other

201
00:09:55,339 --> 00:10:02,480
details<font color="#E5E5E5"> so this is just an example of</font>

202
00:09:57,709 --> 00:10:06,079
how how a<font color="#E5E5E5"> analyzed</font><font color="#CCCCCC"> KooKoo analyzed</font>

203
00:10:02,480 --> 00:10:09,199
malware result looked like and this will

204
00:10:06,079 --> 00:10:11,599
be the<font color="#E5E5E5"> input for my clustering so if</font><font color="#CCCCCC"> i</font>

205
00:10:09,199 --> 00:10:14,120
have<font color="#E5E5E5"> million malware</font><font color="#CCCCCC"> i'll first run it</font>

206
00:10:11,600 --> 00:10:17,060
through<font color="#CCCCCC"> cuckoo sandbox i get the</font>

207
00:10:14,120 --> 00:10:20,029
<font color="#CCCCCC">analyzed</font><font color="#E5E5E5"> JSON output like</font><font color="#CCCCCC"> this and</font><font color="#E5E5E5"> this</font>

208
00:10:17,060 --> 00:10:24,229
will form<font color="#E5E5E5"> the basis of my clustering</font>

209
00:10:20,029 --> 00:10:26,300
algorithm<font color="#E5E5E5"> so what do you do is it now</font>

210
00:10:24,230 --> 00:10:27,350
it's<font color="#E5E5E5"> a now the problem</font><font color="#CCCCCC"> essentially boils</font>

211
00:10:26,300 --> 00:10:30,140
down to document cluster

212
00:10:27,350 --> 00:10:30,890
you have a million<font color="#E5E5E5"> documents just</font>

213
00:10:30,140 --> 00:10:32,870
cluster them

214
00:10:30,890 --> 00:10:34,819
it's unsupervised clustering<font color="#CCCCCC"> nobody</font>

215
00:10:32,870 --> 00:10:37,100
tells<font color="#E5E5E5"> you that these</font><font color="#CCCCCC"> ten documents</font>

216
00:10:34,820 --> 00:10:38,750
belong to malware<font color="#E5E5E5"> a these hundred</font>

217
00:10:37,100 --> 00:10:42,200
documents belongs to malware<font color="#CCCCCC"> B nobody</font>

218
00:10:38,750 --> 00:10:43,730
tells that<font color="#E5E5E5"> you have to cluster them to</font>

219
00:10:42,200 --> 00:10:46,970
do<font color="#E5E5E5"> that there are</font><font color="#CCCCCC"> several</font><font color="#E5E5E5"> techniques the</font>

220
00:10:43,730 --> 00:10:49,610
first<font color="#CCCCCC"> one is</font><font color="#E5E5E5"> hash based some of the</font>

221
00:10:46,970 --> 00:10:51,040
concepts I will go through or shingling

222
00:10:49,610 --> 00:10:56,900
<font color="#CCCCCC">min hashing</font><font color="#E5E5E5"> locality-sensitive hashing</font>

223
00:10:51,040 --> 00:11:00,770
<font color="#E5E5E5">and bit vector</font><font color="#CCCCCC"> mattresses shingling is a</font>

224
00:10:56,900 --> 00:11:02,060
<font color="#CCCCCC">strange</font><font color="#E5E5E5"> essentially tokenization</font><font color="#CCCCCC"> how are</font>

225
00:11:00,770 --> 00:11:07,970
you going to tokenize the given

226
00:11:02,060 --> 00:11:10,130
documents so you can every step needs a

227
00:11:07,970 --> 00:11:12,740
lot of<font color="#CCCCCC"> fine-tuning and</font><font color="#E5E5E5"> playing around</font><font color="#CCCCCC"> to</font>

228
00:11:10,130 --> 00:11:16,340
suit your your environment to<font color="#CCCCCC"> your input</font>

229
00:11:12,740 --> 00:11:17,960
<font color="#CCCCCC">so you</font><font color="#E5E5E5"> can you can't</font><font color="#CCCCCC"> organize it in</font>

230
00:11:16,340 --> 00:11:19,970
every four words<font color="#E5E5E5"> I was sorry</font><font color="#CCCCCC"> for</font>

231
00:11:17,960 --> 00:11:21,800
characters<font color="#CCCCCC"> eight characters whatever it</font>

232
00:11:19,970 --> 00:11:23,420
is so you<font color="#E5E5E5"> have to play</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> with it to</font>

233
00:11:21,800 --> 00:11:26,959
see which<font color="#E5E5E5"> is which is good for you</font>

234
00:11:23,420 --> 00:11:30,189
that's essentially shingling so once

235
00:11:26,960 --> 00:11:33,140
your shingle<font color="#E5E5E5"> you let's let's suppose it</font>

236
00:11:30,190 --> 00:11:36,020
three shingles works for you great<font color="#CCCCCC"> fine</font>

237
00:11:33,140 --> 00:11:38,540
<font color="#CCCCCC">if</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> are very short</font><font color="#E5E5E5"> short set of</font>

238
00:11:36,020 --> 00:11:39,980
<font color="#E5E5E5">strings</font><font color="#CCCCCC"> you can move on</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> it if the</font>

239
00:11:38,540 --> 00:11:43,610
shingles are very long you at a<font color="#E5E5E5"> hash</font>

240
00:11:39,980 --> 00:11:48,310
them<font color="#E5E5E5"> because to make it smaller and more</font>

241
00:11:43,610 --> 00:11:48,310
conducive<font color="#CCCCCC"> for computers to</font><font color="#E5E5E5"> crunch</font>

242
00:11:49,150 --> 00:11:57,380
if you shingle them you may<font color="#E5E5E5"> run</font><font color="#CCCCCC"> into</font>

243
00:11:52,910 --> 00:11:59,480
<font color="#CCCCCC">some problems</font><font color="#E5E5E5"> let's suppose</font><font color="#CCCCCC"> that your</font>

244
00:11:57,380 --> 00:12:01,610
shingle let's say you have 100 documents

245
00:11:59,480 --> 00:12:04,220
<font color="#E5E5E5">under such files</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> singling each</font>

246
00:12:01,610 --> 00:12:07,310
one of them into<font color="#CCCCCC"> you into three shingles</font>

247
00:12:04,220 --> 00:12:10,390
<font color="#E5E5E5">and you have all the shingles so the</font>

248
00:12:07,310 --> 00:12:14,209
presumption of clustering is this

249
00:12:10,390 --> 00:12:19,610
if the shingles<font color="#E5E5E5"> of document</font><font color="#CCCCCC"> a and</font>

250
00:12:14,210 --> 00:12:22,280
document be more or less matches these

251
00:12:19,610 --> 00:12:26,810
two<font color="#CCCCCC"> documents are perceived to be</font>

252
00:12:22,280 --> 00:12:29,630
<font color="#E5E5E5">similar right</font><font color="#CCCCCC"> we have to be very careful</font>

253
00:12:26,810 --> 00:12:31,369
there it's not<font color="#CCCCCC"> just any document it's</font>

254
00:12:29,630 --> 00:12:33,650
<font color="#E5E5E5">not like a novel or something which we</font>

255
00:12:31,370 --> 00:12:35,810
<font color="#E5E5E5">are trying to cluster we are trying to</font>

256
00:12:33,650 --> 00:12:37,880
cluster<font color="#CCCCCC"> documents such as this which is</font>

257
00:12:35,810 --> 00:12:40,869
<font color="#CCCCCC">basically which has certain sections in</font>

258
00:12:37,880 --> 00:12:44,680
it nice sections<font color="#E5E5E5"> DNS entry</font>

259
00:12:40,870 --> 00:12:46,600
files added files deleted<font color="#E5E5E5"> malware</font><font color="#CCCCCC"> I may</font>

260
00:12:44,680 --> 00:12:48,699
have files added<font color="#E5E5E5"> like you know file a</font>

261
00:12:46,600 --> 00:12:51,940
file<font color="#CCCCCC"> be and file</font><font color="#E5E5E5"> see malware and then</font>

262
00:12:48,700 --> 00:12:55,870
files deleted will be file<font color="#CCCCCC"> x y&z</font><font color="#E5E5E5"> in</font>

263
00:12:51,940 --> 00:12:58,750
malware<font color="#E5E5E5"> be it may be quite opposite but</font>

264
00:12:55,870 --> 00:13:00,970
<font color="#E5E5E5">if you blindly shingle them and you</font><font color="#CCCCCC"> you</font>

265
00:12:58,750 --> 00:13:03,010
might<font color="#E5E5E5"> end up saying that the algorithm</font>

266
00:13:00,970 --> 00:13:05,590
<font color="#E5E5E5">will end up showing that malware a and</font>

267
00:13:03,010 --> 00:13:07,870
malware be putting them into the same

268
00:13:05,590 --> 00:13:09,940
<font color="#E5E5E5">bucket in the same cluster which</font><font color="#CCCCCC"> is</font>

269
00:13:07,870 --> 00:13:12,160
wrong<font color="#E5E5E5"> so you have to do lot of</font>

270
00:13:09,940 --> 00:13:17,350
<font color="#E5E5E5">pre-processing there</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> had</font><font color="#CCCCCC"> 3 processes</font>

271
00:13:12,160 --> 00:13:20,469
in such a way that the<font color="#E5E5E5"> next stage would</font>

272
00:13:17,350 --> 00:13:23,500
have<font color="#CCCCCC"> a more more granular information</font>

273
00:13:20,470 --> 00:13:27,370
which will which<font color="#CCCCCC"> will</font><font color="#E5E5E5"> exactly tell which</font>

274
00:13:23,500 --> 00:13:31,960
shingles belong to which section after

275
00:13:27,370 --> 00:13:34,590
<font color="#E5E5E5">doing that how are you going to decide</font>

276
00:13:31,960 --> 00:13:37,150
whether<font color="#CCCCCC"> two documents are similar or not</font>

277
00:13:34,590 --> 00:13:39,970
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> one way</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> jacquard</font><font color="#CCCCCC"> some are</font>

278
00:13:37,150 --> 00:13:43,150
very<font color="#CCCCCC"> similar very very commonly known</font>

279
00:13:39,970 --> 00:13:49,210
technique called Jaccard similarity<font color="#E5E5E5"> what</font>

280
00:13:43,150 --> 00:13:52,720
it does is basically gets the vectors of

281
00:13:49,210 --> 00:13:55,300
these two shingles<font color="#E5E5E5"> and then tries to</font>

282
00:13:52,720 --> 00:13:58,320
<font color="#CCCCCC">find</font><font color="#E5E5E5"> the intersection and then divides</font>

283
00:13:55,300 --> 00:14:01,750
that<font color="#E5E5E5"> by the union of these two shingles</font>

284
00:13:58,320 --> 00:14:06,460
very simple and powerful algorithm<font color="#E5E5E5"> but</font>

285
00:14:01,750 --> 00:14:09,190
<font color="#E5E5E5">it has a very very</font><font color="#CCCCCC"> bad inherent property</font>

286
00:14:06,460 --> 00:14:15,150
when it comes to scale if<font color="#E5E5E5"> you are doing</font>

287
00:14:09,190 --> 00:14:19,270
a<font color="#E5E5E5"> million documents it has to do nearly</font>

288
00:14:15,150 --> 00:14:23,650
any<font color="#CCCCCC"> to n</font><font color="#E5E5E5"> minus 1 by 2 times the</font>

289
00:14:19,270 --> 00:14:26,380
comparison which is pretty<font color="#E5E5E5"> long right</font><font color="#CCCCCC"> so</font>

290
00:14:23,650 --> 00:14:28,780
for<font color="#E5E5E5"> example for a million</font><font color="#CCCCCC"> documents it</font>

291
00:14:26,380 --> 00:14:31,120
has to do<font color="#E5E5E5"> fight into 10 power 11</font>

292
00:14:28,780 --> 00:14:33,310
comparisons that<font color="#E5E5E5"> will take more</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> 5</font>

293
00:14:31,120 --> 00:14:36,790
<font color="#CCCCCC">days</font><font color="#E5E5E5"> and for 10 million</font><font color="#CCCCCC"> documents it</font>

294
00:14:33,310 --> 00:14:39,369
will take more<font color="#CCCCCC"> than a year</font><font color="#E5E5E5"> so you don't</font>

295
00:14:36,790 --> 00:14:41,500
want to go there<font color="#E5E5E5"> go in</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> direction if</font>

296
00:14:39,370 --> 00:14:46,270
you<font color="#E5E5E5"> are trying Jaccard similarity</font><font color="#CCCCCC"> don't</font>

297
00:14:41,500 --> 00:14:47,860
ever try to do one document<font color="#E5E5E5"> versus the</font>

298
00:14:46,270 --> 00:14:49,300
rest<font color="#E5E5E5"> of the documents then the second</font>

299
00:14:47,860 --> 00:14:51,100
document<font color="#E5E5E5"> with</font><font color="#CCCCCC"> verses rest of the</font>

300
00:14:49,300 --> 00:14:53,920
documents third document<font color="#CCCCCC"> verses rest of</font>

301
00:14:51,100 --> 00:14:54,680
the logs<font color="#E5E5E5"> no it doesn't work it can't</font>

302
00:14:53,920 --> 00:14:59,689
<font color="#E5E5E5">scape</font>

303
00:14:54,680 --> 00:15:03,290
so how do you how are you<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

304
00:14:59,689 --> 00:15:05,629
<font color="#CCCCCC">address this problem</font><font color="#E5E5E5"> here comes</font><font color="#CCCCCC"> a magic</font>

305
00:15:03,290 --> 00:15:08,389
<font color="#E5E5E5">min hashing and encoding</font><font color="#CCCCCC"> you have to do</font>

306
00:15:05,629 --> 00:15:10,790
<font color="#CCCCCC">lot</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> this play around with</font><font color="#E5E5E5"> different</font>

307
00:15:08,389 --> 00:15:14,809
<font color="#E5E5E5">kinds of min hashing and different kinds</font>

308
00:15:10,790 --> 00:15:18,050
of<font color="#E5E5E5"> encoding to ensure that that</font><font color="#CCCCCC"> your</font>

309
00:15:14,809 --> 00:15:21,110
intermediate<font color="#E5E5E5"> from you know intermediate</font>

310
00:15:18,050 --> 00:15:25,339
results are<font color="#E5E5E5"> conducive for your computer</font>

311
00:15:21,110 --> 00:15:27,470
as<font color="#E5E5E5"> well as for scaling so the main idea</font>

312
00:15:25,339 --> 00:15:33,290
behind min hashing is to converge large

313
00:15:27,470 --> 00:15:36,379
sets of text<font color="#E5E5E5"> into short signatures and</font>

314
00:15:33,290 --> 00:15:39,679
the beauty of Manhattan<font color="#E5E5E5"> is when it</font>

315
00:15:36,379 --> 00:15:42,439
converts these large text into smaller

316
00:15:39,679 --> 00:15:48,410
representations it preserves the

317
00:15:42,439 --> 00:15:51,170
similarity so you use min hashing after

318
00:15:48,410 --> 00:15:53,329
min hashing<font color="#E5E5E5"> you have a smaller signature</font>

319
00:15:51,170 --> 00:15:56,748
<font color="#CCCCCC">write smaller text which represents the</font>

320
00:15:53,329 --> 00:15:58,008
larger text but still it is text which

321
00:15:56,749 --> 00:15:59,269
<font color="#E5E5E5">you don't want to deal</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> test you</font>

322
00:15:58,009 --> 00:16:01,879
<font color="#E5E5E5">want to deal with numbers because</font>

323
00:15:59,269 --> 00:16:04,819
machine learning algorithms always deals

324
00:16:01,879 --> 00:16:06,589
with floating points always<font color="#E5E5E5"> you can't</font>

325
00:16:04,819 --> 00:16:07,790
you can't<font color="#E5E5E5"> get away from that so you have</font>

326
00:16:06,589 --> 00:16:11,540
to<font color="#E5E5E5"> convert them into some</font><font color="#CCCCCC"> kind of</font>

327
00:16:07,790 --> 00:16:14,120
<font color="#E5E5E5">floating point operations right convert</font>

328
00:16:11,540 --> 00:16:16,639
them into<font color="#E5E5E5"> sorry you can encode them you</font>

329
00:16:14,120 --> 00:16:18,019
can encode them into beautiful<font color="#CCCCCC"> 0 1 bit</font>

330
00:16:16,639 --> 00:16:20,569
bit vector matrices

331
00:16:18,019 --> 00:16:25,129
once you have bit<font color="#CCCCCC"> radom bit vector</font>

332
00:16:20,569 --> 00:16:28,099
matrices you<font color="#CCCCCC"> can you can basically map</font>

333
00:16:25,129 --> 00:16:30,800
your input documents as a as beautiful

334
00:16:28,100 --> 00:16:32,769
<font color="#CCCCCC">matrices like</font><font color="#E5E5E5"> this so each column is</font>

335
00:16:30,800 --> 00:16:37,399
except<font color="#E5E5E5"> is a document by itself</font>

336
00:16:32,769 --> 00:16:45,290
represented<font color="#E5E5E5"> by</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> 1 bit vector and each</font>

337
00:16:37,399 --> 00:16:47,779
row assertion right again<font color="#E5E5E5"> now after</font>

338
00:16:45,290 --> 00:16:49,730
doing<font color="#E5E5E5"> this what</font><font color="#CCCCCC"> are you going</font><font color="#E5E5E5"> to do now</font>

339
00:16:47,779 --> 00:16:53,569
<font color="#E5E5E5">you have these documents</font><font color="#CCCCCC"> which is each</font>

340
00:16:49,730 --> 00:16:55,730
column is a document again<font color="#E5E5E5"> the question</font>

341
00:16:53,569 --> 00:16:57,229
is you want<font color="#E5E5E5"> to find similarities between</font>

342
00:16:55,730 --> 00:17:01,399
these<font color="#E5E5E5"> columns now that's basically</font>

343
00:16:57,230 --> 00:17:03,920
<font color="#E5E5E5">similarities between the documents again</font>

344
00:17:01,399 --> 00:17:06,770
scaling problem arises here<font color="#E5E5E5"> right we</font>

345
00:17:03,920 --> 00:17:08,418
have these<font color="#CCCCCC"> bit weight so this</font><font color="#E5E5E5"> is linear</font>

346
00:17:06,770 --> 00:17:10,999
<font color="#E5E5E5">one dimensional vectors</font>

347
00:17:08,419 --> 00:17:13,189
top to bottom<font color="#CCCCCC"> each is a document</font><font color="#E5E5E5"> you had</font>

348
00:17:10,999 --> 00:17:14,629
to compare this vector with the rest<font color="#E5E5E5"> of</font>

349
00:17:13,189 --> 00:17:19,549
the vectors this vector with the rest<font color="#E5E5E5"> of</font>

350
00:17:14,628 --> 00:17:21,438
the vectors again<font color="#CCCCCC"> the same polynomial</font>

351
00:17:19,549 --> 00:17:26,898
complexity problem<font color="#CCCCCC"> quadratic complexity</font>

352
00:17:21,439 --> 00:17:31,940
<font color="#CCCCCC">problem but but the</font><font color="#E5E5E5"> question remains you</font>

353
00:17:26,898 --> 00:17:34,459
have<font color="#CCCCCC"> to find</font><font color="#E5E5E5"> similar columns then comes</font>

354
00:17:31,940 --> 00:17:38,929
<font color="#E5E5E5">another trick</font><font color="#CCCCCC"> it's locality-sensitive</font>

355
00:17:34,460 --> 00:17:44,119
hashing<font color="#E5E5E5"> people have been using hashes</font>

356
00:17:38,929 --> 00:17:48,109
<font color="#E5E5E5">for decades what do you use hash for you</font>

357
00:17:44,119 --> 00:17:52,039
use hash hashing for for the integrity

358
00:17:48,109 --> 00:17:56,749
<font color="#E5E5E5">during data transfer for getting indexes</font>

359
00:17:52,039 --> 00:18:01,460
in databases and<font color="#E5E5E5"> for encrypt for</font>

360
00:17:56,749 --> 00:18:02,590
encryption<font color="#E5E5E5"> of data at store well at rest</font>

361
00:18:01,460 --> 00:18:07,249
<font color="#CCCCCC">right</font>

362
00:18:02,590 --> 00:18:11,178
and the fundamental premise under

363
00:18:07,249 --> 00:18:15,499
hashing is when you hash<font color="#CCCCCC"> two different</font>

364
00:18:11,179 --> 00:18:23,480
items<font color="#E5E5E5"> the result of the hash must be</font>

365
00:18:15,499 --> 00:18:25,460
very<font color="#E5E5E5"> different right and here in the</font>

366
00:18:23,480 --> 00:18:28,659
<font color="#E5E5E5">locality sensitive hashing and for our</font>

367
00:18:25,460 --> 00:18:34,549
<font color="#E5E5E5">purposes the needs are very different</font>

368
00:18:28,659 --> 00:18:37,759
<font color="#CCCCCC">polar-opposite when you hash to very</font>

369
00:18:34,549 --> 00:18:41,899
closely similar<font color="#E5E5E5"> items the result of the</font>

370
00:18:37,759 --> 00:18:43,580
hash must be the same<font color="#E5E5E5"> even the even and</font>

371
00:18:41,899 --> 00:18:47,600
<font color="#E5E5E5">the input is slightly different</font><font color="#CCCCCC"> the</font>

372
00:18:43,580 --> 00:18:49,609
result<font color="#CCCCCC"> of the hash must collide</font><font color="#E5E5E5"> it's a</font>

373
00:18:47,600 --> 00:18:51,619
very very different hashing algorithm

374
00:18:49,609 --> 00:18:56,299
set of hashing algorithm<font color="#E5E5E5"> not your normal</font>

375
00:18:51,619 --> 00:19:00,889
day to day hash that's<font color="#E5E5E5"> where</font><font color="#CCCCCC"> locality</font>

376
00:18:56,299 --> 00:19:02,359
<font color="#CCCCCC">sensitive hashing</font><font color="#E5E5E5"> comes in to help it's</font>

377
00:19:00,889 --> 00:19:06,609
basically a<font color="#E5E5E5"> probability distribution</font>

378
00:19:02,359 --> 00:19:09,529
<font color="#E5E5E5">over a set of items where when you hash</font>

379
00:19:06,609 --> 00:19:13,639
it will give you two different

380
00:19:09,529 --> 00:19:20,119
probabilities<font color="#E5E5E5"> one is for</font><font color="#CCCCCC"> example here I</font>

381
00:19:13,639 --> 00:19:22,639
say<font color="#CCCCCC"> are</font><font color="#E5E5E5"> CR p1 p2 right so if the</font>

382
00:19:20,119 --> 00:19:27,800
distance between the two<font color="#CCCCCC"> documents X&Y</font>

383
00:19:22,640 --> 00:19:32,660
is less than<font color="#CCCCCC"> R or 1 less than R</font><font color="#E5E5E5"> then</font>

384
00:19:27,800 --> 00:19:37,730
probability<font color="#E5E5E5"> of the hash of X is equal</font><font color="#CCCCCC"> to</font>

385
00:19:32,660 --> 00:19:42,260
the probability of<font color="#E5E5E5"> the hash of Y will be</font>

386
00:19:37,730 --> 00:19:43,820
greater than some probability<font color="#CCCCCC"> p1 so the</font>

387
00:19:42,260 --> 00:19:47,180
lesser<font color="#E5E5E5"> the distance between two</font>

388
00:19:43,820 --> 00:19:50,899
documents the higher is<font color="#CCCCCC"> the probability</font>

389
00:19:47,180 --> 00:19:54,590
<font color="#E5E5E5">of both of them being in the</font><font color="#CCCCCC"> same</font>

390
00:19:50,900 --> 00:19:58,910
<font color="#E5E5E5">cluster and if the documents are</font>

391
00:19:54,590 --> 00:20:01,939
dissimilar<font color="#E5E5E5"> then when you when you</font><font color="#CCCCCC"> when</font>

392
00:19:58,910 --> 00:20:03,590
you apply<font color="#CCCCCC"> locality-sensitive</font><font color="#E5E5E5"> hashing the</font>

393
00:20:01,940 --> 00:20:07,640
probability<font color="#CCCCCC"> of them falling</font><font color="#E5E5E5"> into the</font>

394
00:20:03,590 --> 00:20:09,740
same bucket<font color="#E5E5E5"> will be very very low</font><font color="#CCCCCC"> it's a</font>

395
00:20:07,640 --> 00:20:17,150
beautiful<font color="#E5E5E5"> thing to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> right not your</font>

396
00:20:09,740 --> 00:20:20,690
regular hash so you use<font color="#CCCCCC"> LSH on this bit</font>

397
00:20:17,150 --> 00:20:22,490
vector matters<font color="#CCCCCC"> and before that you</font><font color="#E5E5E5"> have</font>

398
00:20:20,690 --> 00:20:28,000
to<font color="#CCCCCC"> ensures some other stuff</font>

399
00:20:22,490 --> 00:20:28,000
make sure the hash of your signatures

400
00:20:28,300 --> 00:20:36,889
are able to<font color="#E5E5E5"> fit into your</font><font color="#CCCCCC"> Ram</font><font color="#E5E5E5"> otherwise</font>

401
00:20:32,810 --> 00:20:39,530
again you fall<font color="#E5E5E5"> into certain problems</font><font color="#CCCCCC"> and</font>

402
00:20:36,890 --> 00:20:43,310
once you find once you once you play

403
00:20:39,530 --> 00:20:45,379
<font color="#E5E5E5">around with</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> LS</font><font color="#CCCCCC"> HS and if you</font>

404
00:20:43,310 --> 00:20:48,500
are<font color="#CCCCCC"> comfortable</font><font color="#E5E5E5"> with one particular</font><font color="#CCCCCC"> LS h</font>

405
00:20:45,380 --> 00:20:51,200
apply<font color="#E5E5E5"> that so you can do once you do</font>

406
00:20:48,500 --> 00:20:53,780
that then it<font color="#CCCCCC"> will be much faster to go</font>

407
00:20:51,200 --> 00:20:55,520
over and and find similarities<font color="#E5E5E5"> between</font>

408
00:20:53,780 --> 00:20:59,139
these documents in your<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> wait a bit</font>

409
00:20:55,520 --> 00:21:05,090
<font color="#E5E5E5">vector matters and once you do that</font>

410
00:20:59,140 --> 00:21:07,400
you'll<font color="#E5E5E5"> get</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> nice n by n matrix there</font>

411
00:21:05,090 --> 00:21:09,709
you<font color="#CCCCCC"> see the diagonal is all</font><font color="#E5E5E5"> one which is</font>

412
00:21:07,400 --> 00:21:12,200
where<font color="#E5E5E5"> the distance of each I mean its</font>

413
00:21:09,710 --> 00:21:14,360
documents right like both both<font color="#CCCCCC"> x and y</font>

414
00:21:12,200 --> 00:21:15,950
<font color="#CCCCCC">axes or documents</font><font color="#E5E5E5"> the similarity</font><font color="#CCCCCC"> between</font>

415
00:21:14,360 --> 00:21:18,320
the documents of<font color="#CCCCCC"> one when they are</font>

416
00:21:15,950 --> 00:21:20,360
similar<font color="#E5E5E5"> to</font><font color="#CCCCCC"> each other and the other</font>

417
00:21:18,320 --> 00:21:21,889
<font color="#E5E5E5">floating point numbers indicate the the</font>

418
00:21:20,360 --> 00:21:23,570
<font color="#E5E5E5">extent of similarity</font><font color="#CCCCCC"> between two</font>

419
00:21:21,890 --> 00:21:28,240
documents<font color="#E5E5E5"> the higher the number</font><font color="#CCCCCC"> the</font>

420
00:21:23,570 --> 00:21:35,000
greater is the similarity once you have

421
00:21:28,240 --> 00:21:36,080
such a nice<font color="#E5E5E5"> similarity matrix you are</font>

422
00:21:35,000 --> 00:21:41,419
almost all

423
00:21:36,080 --> 00:21:46,220
<font color="#CCCCCC">set the cluster of them hoping</font><font color="#E5E5E5"> that the</font>

424
00:21:41,419 --> 00:21:51,700
similarity matrix<font color="#E5E5E5"> is small enough</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> fit</font>

425
00:21:46,220 --> 00:21:53,809
into your machine<font color="#E5E5E5"> then you can apply</font>

426
00:21:51,700 --> 00:21:55,730
<font color="#E5E5E5">clustering techniques such as spectral</font>

427
00:21:53,809 --> 00:21:58,730
clustering or affinity propagation or

428
00:21:55,730 --> 00:22:01,970
some kind of<font color="#CCCCCC"> belief net clustering to</font>

429
00:21:58,730 --> 00:22:04,279
cluster them and get<font color="#CCCCCC"> beautiful clusters</font>

430
00:22:01,970 --> 00:22:06,559
<font color="#CCCCCC">like this I'm</font><font color="#E5E5E5"> not going to talk about</font>

431
00:22:04,279 --> 00:22:09,950
<font color="#E5E5E5">cluster evaluation that's a very</font>

432
00:22:06,559 --> 00:22:16,879
<font color="#E5E5E5">different topic</font><font color="#CCCCCC"> and it definitely needs</font>

433
00:22:09,950 --> 00:22:20,029
<font color="#CCCCCC">its own set of seminars on that but the</font>

434
00:22:16,880 --> 00:22:22,929
the pipeline the ideas has to<font color="#E5E5E5"> follow</font>

435
00:22:20,029 --> 00:22:29,899
these<font color="#E5E5E5"> steps to arrive at a decent</font>

436
00:22:22,929 --> 00:22:35,330
<font color="#E5E5E5">clustering the the belief net algorithms</font>

437
00:22:29,899 --> 00:22:37,489
<font color="#E5E5E5">behave this way</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example you have</font>

438
00:22:35,330 --> 00:22:40,970
a set of<font color="#CCCCCC"> hundred</font><font color="#E5E5E5"> points</font><font color="#CCCCCC"> and you want to</font>

439
00:22:37,490 --> 00:22:43,100
<font color="#CCCCCC">cluster them</font><font color="#E5E5E5"> you nobody tells you</font><font color="#CCCCCC"> ok WC</font>

440
00:22:40,970 --> 00:22:45,080
100 points and<font color="#E5E5E5"> tells</font><font color="#CCCCCC"> ok give</font><font color="#E5E5E5"> me seven</font>

441
00:22:43,100 --> 00:22:47,330
clusters out of that this<font color="#E5E5E5"> is</font>

442
00:22:45,080 --> 00:22:49,250
unsupervised<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you're given some random</font>

443
00:22:47,330 --> 00:22:51,199
number<font color="#E5E5E5"> of points and the algorithm has</font>

444
00:22:49,250 --> 00:22:52,850
<font color="#CCCCCC">to</font><font color="#E5E5E5"> figure out the best number of</font>

445
00:22:51,200 --> 00:22:57,950
clusters and provide high quality

446
00:22:52,850 --> 00:23:00,469
clusters so what it does is<font color="#E5E5E5"> randomly</font>

447
00:22:57,950 --> 00:23:02,690
<font color="#CCCCCC">chooses out of the hundred points it</font>

448
00:23:00,470 --> 00:23:05,510
randomly<font color="#E5E5E5"> chooses like</font><font color="#CCCCCC"> key points let's</font>

449
00:23:02,690 --> 00:23:09,590
say<font color="#CCCCCC"> 8 points as cluster representatives</font>

450
00:23:05,510 --> 00:23:11,629
or cluster heads and once you have<font color="#E5E5E5"> these</font>

451
00:23:09,590 --> 00:23:14,899
cluster heads<font color="#CCCCCC"> what it does is it does</font>

452
00:23:11,630 --> 00:23:17,299
two<font color="#CCCCCC"> things</font><font color="#E5E5E5"> in a lockstep fashion in a</font>

453
00:23:14,899 --> 00:23:20,029
and iteratively<font color="#E5E5E5"> and</font><font color="#CCCCCC"> till the result</font>

454
00:23:17,299 --> 00:23:23,389
converges<font color="#E5E5E5"> what it does is first thing is</font>

455
00:23:20,029 --> 00:23:29,179
these<font color="#E5E5E5"> representatives they will send</font>

456
00:23:23,389 --> 00:23:32,928
messages to<font color="#CCCCCC"> all other</font><font color="#E5E5E5"> members in the</font>

457
00:23:29,179 --> 00:23:36,919
input<font color="#E5E5E5"> data</font><font color="#CCCCCC"> and tell them hey I want to</font>

458
00:23:32,929 --> 00:23:38,360
be your I want to represent<font color="#CCCCCC"> to you once</font>

459
00:23:36,919 --> 00:23:40,100
the message<font color="#E5E5E5"> is received by the other</font>

460
00:23:38,360 --> 00:23:42,678
data<font color="#CCCCCC"> points the other</font><font color="#E5E5E5"> data points</font><font color="#CCCCCC"> will</font>

461
00:23:40,100 --> 00:23:47,649
send back<font color="#E5E5E5"> messages to the sender or to</font>

462
00:23:42,679 --> 00:23:49,490
the representative telling their

463
00:23:47,649 --> 00:23:52,639
preference for

464
00:23:49,490 --> 00:23:54,650
guy<font color="#E5E5E5"> he will tell</font><font color="#CCCCCC"> okay I I like you to be</font>

465
00:23:52,640 --> 00:23:58,130
<font color="#E5E5E5">my representative</font><font color="#CCCCCC"> or he will</font><font color="#E5E5E5"> say I deny</font>

466
00:23:54,650 --> 00:24:00,800
<font color="#E5E5E5">and he will and once and this does this</font>

467
00:23:58,130 --> 00:24:03,500
happens in a<font color="#E5E5E5"> lockstep manner in parallel</font>

468
00:24:00,800 --> 00:24:06,230
for example<font color="#E5E5E5"> all the eight points all the</font>

469
00:24:03,500 --> 00:24:09,140
representatives<font color="#CCCCCC"> will send messages to</font>

470
00:24:06,230 --> 00:24:10,700
all other data<font color="#E5E5E5"> points</font><font color="#CCCCCC"> and say hey I want</font>

471
00:24:09,140 --> 00:24:13,929
<font color="#CCCCCC">to be a representative and all other</font>

472
00:24:10,700 --> 00:24:17,809
<font color="#E5E5E5">data points</font><font color="#CCCCCC"> will send back a response</font>

473
00:24:13,929 --> 00:24:23,630
<font color="#CCCCCC">stating their preference</font><font color="#E5E5E5"> and then once</font>

474
00:24:17,809 --> 00:24:26,600
this first lockstep message exchange is

475
00:24:23,630 --> 00:24:28,300
done<font color="#E5E5E5"> it goes to the next iteration does</font>

476
00:24:26,600 --> 00:24:32,600
it again next iteration does it again

477
00:24:28,300 --> 00:24:37,159
<font color="#E5E5E5">until there is no thrashing thrashing in</font>

478
00:24:32,600 --> 00:24:41,629
the sense that in K minus<font color="#E5E5E5"> one thither</font>

479
00:24:37,160 --> 00:24:45,100
ation this member a will prefer<font color="#E5E5E5"> X to be</font>

480
00:24:41,630 --> 00:24:47,870
its cluster head and then<font color="#CCCCCC"> Kate iteration</font>

481
00:24:45,100 --> 00:24:51,350
<font color="#E5E5E5">remember this member will be</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> you</font>

482
00:24:47,870 --> 00:24:53,419
know in in in<font color="#E5E5E5"> wise would prefer Y as its</font>

483
00:24:51,350 --> 00:24:55,250
representative and<font color="#E5E5E5"> K plus 1 theta</font>

484
00:24:53,420 --> 00:24:57,530
patient goes back to this guy<font color="#E5E5E5"> so it</font>

485
00:24:55,250 --> 00:24:59,240
<font color="#E5E5E5">keeps going back and</font><font color="#CCCCCC"> forth the the</font>

486
00:24:57,530 --> 00:25:00,470
algorithm wouldn't terminate so you have

487
00:24:59,240 --> 00:25:03,380
to have some<font color="#CCCCCC"> kind some kind of</font>

488
00:25:00,470 --> 00:25:05,120
<font color="#E5E5E5">termination condition either fix the</font>

489
00:25:03,380 --> 00:25:07,010
<font color="#E5E5E5">number of iterations as hundred or</font><font color="#CCCCCC"> five</font>

490
00:25:05,120 --> 00:25:09,080
<font color="#CCCCCC">thousand or something and then and</font>

491
00:25:07,010 --> 00:25:12,290
believe with<font color="#E5E5E5"> the results and go or more</font>

492
00:25:09,080 --> 00:25:15,678
on or find certain other mathematical

493
00:25:12,290 --> 00:25:17,600
<font color="#E5E5E5">techniques like what I do is I go into</font>

494
00:25:15,679 --> 00:25:19,460
<font color="#E5E5E5">the matrix itself and</font><font color="#CCCCCC"> slightly I just</font>

495
00:25:17,600 --> 00:25:21,559
some some certain<font color="#E5E5E5"> Epsilon's and stuff</font>

496
00:25:19,460 --> 00:25:23,360
like that<font color="#E5E5E5"> so that it kind of converges</font>

497
00:25:21,559 --> 00:25:28,340
quickly without all these thrashing

498
00:25:23,360 --> 00:25:31,580
happening so once you take care of<font color="#E5E5E5"> all</font>

499
00:25:28,340 --> 00:25:37,610
your matrices then your model is bound

500
00:25:31,580 --> 00:25:42,530
to<font color="#E5E5E5"> get a decent cluster that's about</font>

501
00:25:37,610 --> 00:25:50,469
<font color="#E5E5E5">hash based clustering questions before I</font>

502
00:25:42,530 --> 00:25:50,470
move<font color="#E5E5E5"> on to hybrid based clustering yes</font>

503
00:25:56,870 --> 00:26:05,280
well yeah it's difficult<font color="#CCCCCC"> well you can</font>

504
00:26:03,180 --> 00:26:07,260
<font color="#E5E5E5">adopt the techniques per se is like you</font>

505
00:26:05,280 --> 00:26:09,149
know<font color="#E5E5E5"> you can learn okay this is kind of</font>

506
00:26:07,260 --> 00:26:12,000
directions these<font color="#E5E5E5"> are the steps in a</font>

507
00:26:09,150 --> 00:26:15,030
pipeline<font color="#CCCCCC"> but when it comes to machine</font>

508
00:26:12,000 --> 00:26:17,430
<font color="#E5E5E5">learning or data mining</font><font color="#CCCCCC"> I haven't seen a</font>

509
00:26:15,030 --> 00:26:19,620
single algorithm<font color="#E5E5E5"> where I can just buy</font>

510
00:26:17,430 --> 00:26:21,240
from a vendor or<font color="#E5E5E5"> something and just and</font>

511
00:26:19,620 --> 00:26:23,729
<font color="#E5E5E5">just plug it in and it</font><font color="#CCCCCC"> works magically</font>

512
00:26:21,240 --> 00:26:25,020
<font color="#E5E5E5">there are two very essential things in</font>

513
00:26:23,730 --> 00:26:27,360
machine learning very very<font color="#E5E5E5"> essential</font>

514
00:26:25,020 --> 00:26:29,850
things in machine learning the number

515
00:26:27,360 --> 00:26:32,459
<font color="#CCCCCC">one is pre-processing</font><font color="#E5E5E5"> and feature</font>

516
00:26:29,850 --> 00:26:34,740
engineering<font color="#CCCCCC"> without it</font><font color="#E5E5E5"> you're pretty</font>

517
00:26:32,460 --> 00:26:37,520
<font color="#E5E5E5">much</font><font color="#CCCCCC"> guaranteed that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> will not you</font>

518
00:26:34,740 --> 00:26:41,040
you will not be<font color="#CCCCCC"> satisfied with results</font>

519
00:26:37,520 --> 00:26:42,330
that's one thing<font color="#CCCCCC"> feature engineering</font>

520
00:26:41,040 --> 00:26:45,090
feature<font color="#CCCCCC"> engineering and feature</font>

521
00:26:42,330 --> 00:26:46,949
engineering<font color="#E5E5E5"> either do it yourself or</font>

522
00:26:45,090 --> 00:26:48,750
talk to<font color="#E5E5E5"> the domain experts get to know</font>

523
00:26:46,950 --> 00:26:50,340
what features need to<font color="#CCCCCC"> be there what</font>

524
00:26:48,750 --> 00:26:52,590
combination of features<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to be there</font>

525
00:26:50,340 --> 00:26:55,350
<font color="#E5E5E5">the second with machine learning</font><font color="#CCCCCC"> and all</font>

526
00:26:52,590 --> 00:26:56,520
these things is<font color="#E5E5E5"> fine-tuning you have to</font>

527
00:26:55,350 --> 00:26:58,679
find you and there's<font color="#E5E5E5"> nothing you can</font>

528
00:26:56,520 --> 00:27:01,440
<font color="#E5E5E5">just you know buy off the</font><font color="#CCCCCC"> shelf and get</font>

529
00:26:58,680 --> 00:27:03,030
magical results<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to fine-tune</font>

530
00:27:01,440 --> 00:27:04,800
you can spend an entire<font color="#E5E5E5"> summer just</font>

531
00:27:03,030 --> 00:27:06,720
fine-tuning certain<font color="#E5E5E5"> hyper parameters get</font>

532
00:27:04,800 --> 00:27:09,389
an intern to do it and<font color="#CCCCCC"> hopefully it</font>

533
00:27:06,720 --> 00:27:12,630
works after<font color="#CCCCCC"> the end of</font><font color="#E5E5E5"> the summer so you</font>

534
00:27:09,390 --> 00:27:15,180
have to find you this<font color="#E5E5E5"> know that there is</font>

535
00:27:12,630 --> 00:27:18,720
no other shortcut to this there are some

536
00:27:15,180 --> 00:27:21,450
nice<font color="#E5E5E5"> algorithmic techniques to find the</font>

537
00:27:18,720 --> 00:27:24,030
right set<font color="#E5E5E5"> of hyper parameters but only</font>

538
00:27:21,450 --> 00:27:25,770
for certain<font color="#CCCCCC"> cases</font><font color="#E5E5E5"> whether if you have a</font>

539
00:27:24,030 --> 00:27:27,629
search space which is conducive enough

540
00:27:25,770 --> 00:27:29,460
you can have grid search and other kind

541
00:27:27,630 --> 00:27:32,130
<font color="#E5E5E5">of search mechanisms to search for the</font>

542
00:27:29,460 --> 00:27:33,510
<font color="#E5E5E5">right set of hyper parameters where you</font>

543
00:27:32,130 --> 00:27:35,700
don't have<font color="#CCCCCC"> to do the experiments</font><font color="#E5E5E5"> it'll</font>

544
00:27:33,510 --> 00:27:37,440
run all these<font color="#E5E5E5"> things parallel find the</font>

545
00:27:35,700 --> 00:27:39,510
right set of hyper parameters<font color="#E5E5E5"> and you</font>

546
00:27:37,440 --> 00:27:45,180
can just plug it in<font color="#CCCCCC"> and your random</font>

547
00:27:39,510 --> 00:27:47,460
forest classifier<font color="#E5E5E5"> is amazing if you</font>

548
00:27:45,180 --> 00:27:50,310
don't have that<font color="#E5E5E5"> functionality built</font><font color="#CCCCCC"> into</font>

549
00:27:47,460 --> 00:27:52,170
let's say<font color="#E5E5E5"> I use psychic learns all the</font>

550
00:27:50,310 --> 00:27:54,480
libraries<font color="#CCCCCC"> in Python scikit-learn and are</font>

551
00:27:52,170 --> 00:27:58,080
for all my gut feeling verifications<font color="#E5E5E5"> if</font>

552
00:27:54,480 --> 00:28:00,810
you don't have that it's it's a<font color="#E5E5E5"> tedious</font>

553
00:27:58,080 --> 00:28:03,149
process<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to fine-tune</font><font color="#E5E5E5"> there's no</font>

554
00:28:00,810 --> 00:28:05,879
<font color="#E5E5E5">other way</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you better document what</font>

555
00:28:03,150 --> 00:28:07,080
you do because somebody who is<font color="#E5E5E5"> coming</font>

556
00:28:05,880 --> 00:28:08,549
<font color="#E5E5E5">down the road</font>

557
00:28:07,080 --> 00:28:12,210
you wouldn't know<font color="#E5E5E5"> what the hell you did</font>

558
00:28:08,549 --> 00:28:14,100
<font color="#E5E5E5">and why you put like 0.6 37 there nobody</font>

559
00:28:12,210 --> 00:28:19,919
knows why you<font color="#CCCCCC"> did that</font>

560
00:28:14,100 --> 00:28:22,830
so it's it's about experimentation<font color="#E5E5E5"> this</font>

561
00:28:19,919 --> 00:28:25,260
and on just trial and<font color="#E5E5E5"> error and actually</font>

562
00:28:22,830 --> 00:28:28,678
<font color="#CCCCCC">even</font><font color="#E5E5E5"> at least some kind of smart trial</font>

563
00:28:25,260 --> 00:28:30,779
and error mechanisms so that's about

564
00:28:28,679 --> 00:28:35,370
<font color="#E5E5E5">hash based clustering and here's a</font>

565
00:28:30,779 --> 00:28:38,279
summary<font color="#E5E5E5"> of it so to summarize this you</font>

566
00:28:35,370 --> 00:28:40,408
have these<font color="#CCCCCC"> documents the first step is</font>

567
00:28:38,279 --> 00:28:42,179
<font color="#CCCCCC">you kind</font><font color="#E5E5E5"> of tokenize them with shingling</font>

568
00:28:40,409 --> 00:28:45,299
after<font color="#CCCCCC"> they're shingling if they are big</font>

569
00:28:42,179 --> 00:28:47,669
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can hash them itself</font><font color="#E5E5E5"> then resize</font>

570
00:28:45,299 --> 00:28:50,100
<font color="#E5E5E5">compress those single hashes then you</font>

571
00:28:47,669 --> 00:28:52,440
vectorize them create bit vector

572
00:28:50,100 --> 00:28:55,740
matrices<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then create summaries of</font>

573
00:28:52,440 --> 00:28:58,830
those columns<font color="#E5E5E5"> and once you do if the</font>

574
00:28:55,740 --> 00:29:01,889
summaries are large<font color="#E5E5E5"> hash them again</font><font color="#CCCCCC"> okay</font>

575
00:28:58,830 --> 00:29:03,629
once you do that<font color="#E5E5E5"> then apply</font><font color="#CCCCCC"> locality</font>

576
00:29:01,889 --> 00:29:06,299
<font color="#CCCCCC">sensitive hashing which is very very</font>

577
00:29:03,630 --> 00:29:08,940
<font color="#E5E5E5">powerful once you do that you are in a</font>

578
00:29:06,299 --> 00:29:11,100
<font color="#E5E5E5">good position to create a similarity</font>

579
00:29:08,940 --> 00:29:13,799
matrix<font color="#CCCCCC"> once you do the similarity matrix</font>

580
00:29:11,100 --> 00:29:18,269
then<font color="#E5E5E5"> you can apply</font><font color="#CCCCCC"> some nice clustering</font>

581
00:29:13,799 --> 00:29:20,220
algorithms to to get clusters the

582
00:29:18,269 --> 00:29:23,760
question is all this works on<font color="#E5E5E5"> a single</font>

583
00:29:20,220 --> 00:29:28,080
<font color="#E5E5E5">memory you know if I have to cluster a</font>

584
00:29:23,760 --> 00:29:32,000
million documents<font color="#CCCCCC"> and if your if your</font>

585
00:29:28,080 --> 00:29:34,860
<font color="#CCCCCC">hardware</font><font color="#E5E5E5"> could cannot support it then</font>

586
00:29:32,000 --> 00:29:44,639
you will face some difficulties so how

587
00:29:34,860 --> 00:29:46,799
are you<font color="#E5E5E5"> going to do</font><font color="#CCCCCC"> that yes the</font>

588
00:29:44,639 --> 00:29:50,820
documents is<font color="#E5E5E5"> the one which I showed you</font>

589
00:29:46,799 --> 00:29:53,340
<font color="#E5E5E5">like this just JSON documents this is</font>

590
00:29:50,820 --> 00:29:55,260
this is the output<font color="#E5E5E5"> of a cuckoo sign box</font>

591
00:29:53,340 --> 00:29:58,559
or something<font color="#CCCCCC"> like that okay which will</font>

592
00:29:55,260 --> 00:30:02,639
have a nicely<font color="#E5E5E5"> structured thing it's</font>

593
00:29:58,559 --> 00:30:11,250
nicely structured so it's we are<font color="#E5E5E5"> all</font>

594
00:30:02,639 --> 00:30:13,469
<font color="#E5E5E5">happy no problems out there so if you</font>

595
00:30:11,250 --> 00:30:15,960
<font color="#CCCCCC">want to parallel eyes there are</font>

596
00:30:13,470 --> 00:30:19,429
techniques but you have to implement

597
00:30:15,960 --> 00:30:20,909
them<font color="#CCCCCC"> on your own there</font><font color="#E5E5E5"> are no known</font>

598
00:30:19,429 --> 00:30:25,619
libraries out there

599
00:30:20,909 --> 00:30:28,590
<font color="#CCCCCC">as far as I know you have to</font><font color="#E5E5E5"> I do it and</font>

600
00:30:25,619 --> 00:30:30,330
<font color="#E5E5E5">you can you can</font><font color="#CCCCCC"> utilize it on a GPU or</font>

601
00:30:28,590 --> 00:30:34,109
<font color="#E5E5E5">something where you can nicely paralyze</font>

602
00:30:30,330 --> 00:30:37,019
such algorithms but remember when you

603
00:30:34,109 --> 00:30:40,590
begin to paralyze this for example

604
00:30:37,019 --> 00:30:43,049
<font color="#E5E5E5">clustering is not certain kinds of</font>

605
00:30:40,590 --> 00:30:45,119
clustering algorithms are<font color="#CCCCCC"> not do</font><font color="#E5E5E5"> not</font>

606
00:30:43,049 --> 00:30:46,710
lend themselves<font color="#E5E5E5"> nicely to</font>

607
00:30:45,119 --> 00:30:49,830
parallelization<font color="#E5E5E5"> k-means is</font>

608
00:30:46,710 --> 00:30:53,009
embarrassingly parallel<font color="#E5E5E5"> finding mean of</font>

609
00:30:49,830 --> 00:30:56,039
<font color="#CCCCCC">his billion numbers is embarrassingly</font>

610
00:30:53,009 --> 00:30:57,929
parallel<font color="#E5E5E5"> as against a finding median if</font>

611
00:30:56,039 --> 00:30:59,190
you want to find median<font color="#CCCCCC"> or forget it you</font>

612
00:30:57,929 --> 00:31:03,989
can't<font color="#CCCCCC"> get an accurate answer you can</font>

613
00:30:59,190 --> 00:31:07,649
only approximate it<font color="#CCCCCC"> to certain degree so</font>

614
00:31:03,989 --> 00:31:11,970
you have to be careful there and that is

615
00:31:07,649 --> 00:31:19,918
about<font color="#E5E5E5"> hash based clustering hybrid</font>

616
00:31:11,970 --> 00:31:23,099
approach in hybrid approach you<font color="#CCCCCC"> have you</font>

617
00:31:19,919 --> 00:31:24,749
basically take two sets of<font color="#E5E5E5"> features the</font>

618
00:31:23,099 --> 00:31:28,229
one is the static set the<font color="#E5E5E5"> other is the</font>

619
00:31:24,749 --> 00:31:30,539
dynamic set of features many malware

620
00:31:28,229 --> 00:31:32,580
analysts look at all these two in a

621
00:31:30,539 --> 00:31:35,669
sense they have it in their head and try

622
00:31:32,580 --> 00:31:37,978
to work out their way to do<font color="#E5E5E5"> write</font>

623
00:31:35,669 --> 00:31:41,129
signatures right<font color="#E5E5E5"> and also look at the</font>

624
00:31:37,979 --> 00:31:43,019
<font color="#CCCCCC">packets</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> the from a peak AB</font><font color="#E5E5E5"> if a</font>

625
00:31:41,129 --> 00:31:45,299
<font color="#CCCCCC">peak app has 30 packets they try to you</font>

626
00:31:43,019 --> 00:31:48,749
know<font color="#E5E5E5"> filter off the benign packets look</font>

627
00:31:45,299 --> 00:31:51,330
at<font color="#E5E5E5"> one the D one or two packets which</font>

628
00:31:48,749 --> 00:31:54,470
looks<font color="#CCCCCC"> very interesting</font><font color="#E5E5E5"> and then try to</font>

629
00:31:51,330 --> 00:31:54,470
write<font color="#E5E5E5"> a signature</font><font color="#CCCCCC"> on that</font>

630
00:31:58,890 --> 00:32:06,430
hybrid approach clustering is also on

631
00:32:02,320 --> 00:32:08,439
the same premise or assumption that that

632
00:32:06,430 --> 00:32:16,360
similar<font color="#E5E5E5"> looking documents tend to be</font>

633
00:32:08,440 --> 00:32:18,340
clustered together right so deleted

634
00:32:16,360 --> 00:32:19,959
files here and<font color="#E5E5E5"> set of deleted files</font>

635
00:32:18,340 --> 00:32:23,649
there if they<font color="#E5E5E5"> have more</font><font color="#CCCCCC"> or less the same</font>

636
00:32:19,960 --> 00:32:25,990
file names<font color="#E5E5E5"> yeah great edited files set</font>

637
00:32:23,650 --> 00:32:28,630
of edited files here<font color="#E5E5E5"> if they they look</font>

638
00:32:25,990 --> 00:32:30,400
more<font color="#E5E5E5"> or</font><font color="#CCCCCC"> less</font><font color="#E5E5E5"> the same that's good DNS</font>

639
00:32:28,630 --> 00:32:31,990
entries<font color="#E5E5E5"> they look</font><font color="#CCCCCC"> more or less</font><font color="#E5E5E5"> the same</font>

640
00:32:30,400 --> 00:32:35,680
that's good stuff<font color="#E5E5E5"> like that</font>

641
00:32:31,990 --> 00:32:39,460
so again<font color="#CCCCCC"> pre-processing needs</font><font color="#E5E5E5"> to be done</font>

642
00:32:35,680 --> 00:32:42,070
<font color="#CCCCCC">very</font><font color="#E5E5E5"> carefully and methodically</font><font color="#CCCCCC"> so you</font>

643
00:32:39,460 --> 00:32:44,650
do feature selection first<font color="#E5E5E5"> F is a set</font><font color="#CCCCCC"> of</font>

644
00:32:42,070 --> 00:32:46,659
features<font color="#E5E5E5"> there's a inherent static</font>

645
00:32:44,650 --> 00:32:49,510
inherent features within<font color="#E5E5E5"> your document</font>

646
00:32:46,660 --> 00:32:52,660
<font color="#CCCCCC">and then comes feature engineering which</font>

647
00:32:49,510 --> 00:32:54,940
<font color="#CCCCCC">is derived features which you get out of</font>

648
00:32:52,660 --> 00:32:58,560
both algorithmic techniques as<font color="#E5E5E5"> well as</font>

649
00:32:54,940 --> 00:33:00,460
from domain experts<font color="#E5E5E5"> you get a set of</font>

650
00:32:58,560 --> 00:33:04,030
<font color="#E5E5E5">engineered features or derived</font>

651
00:33:00,460 --> 00:33:06,640
attributes<font color="#E5E5E5"> and then comes the union of</font>

652
00:33:04,030 --> 00:33:08,530
these two<font color="#E5E5E5"> which which with which you are</font>

653
00:33:06,640 --> 00:33:14,860
<font color="#E5E5E5">going to work basically</font><font color="#CCCCCC"> his set of</font>

654
00:33:08,530 --> 00:33:20,410
<font color="#E5E5E5">features so what</font><font color="#CCCCCC"> do you do with this let</font>

655
00:33:14,860 --> 00:33:22,929
s be a set of features<font color="#E5E5E5"> for a your whole</font>

656
00:33:20,410 --> 00:33:26,770
corpus<font color="#E5E5E5"> so let's say you have a million</font>

657
00:33:22,930 --> 00:33:29,860
documents<font color="#E5E5E5"> the cluster for each document</font>

658
00:33:26,770 --> 00:33:33,100
<font color="#E5E5E5">let's say you have</font><font color="#CCCCCC"> for each when I say</font>

659
00:33:29,860 --> 00:33:35,500
<font color="#CCCCCC">s1 is one sample s2</font><font color="#E5E5E5"> is another sample s3</font>

660
00:33:33,100 --> 00:33:37,959
is another sample<font color="#CCCCCC"> a document</font>

661
00:33:35,500 --> 00:33:41,410
representing<font color="#E5E5E5"> that sample basically so</font>

662
00:33:37,960 --> 00:33:44,470
<font color="#E5E5E5">let's you have n in documents in samples</font>

663
00:33:41,410 --> 00:33:46,870
<font color="#E5E5E5">and from these you are going to get only</font>

664
00:33:44,470 --> 00:33:52,240
so for each sample you are going to

665
00:33:46,870 --> 00:33:54,219
<font color="#E5E5E5">extract</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> K features you don't want</font>

666
00:33:52,240 --> 00:33:57,910
to make the mistake of selecting all the

667
00:33:54,220 --> 00:34:00,610
<font color="#CCCCCC">features</font><font color="#E5E5E5"> in s in a given sample there</font>

668
00:33:57,910 --> 00:34:02,830
may be like<font color="#E5E5E5"> 2500 features in</font><font color="#CCCCCC"> a sample</font>

669
00:34:00,610 --> 00:34:05,830
<font color="#CCCCCC">out of</font><font color="#E5E5E5"> which probably</font><font color="#CCCCCC"> hundred and</font><font color="#E5E5E5"> fifty</font>

670
00:34:02,830 --> 00:34:08,170
only are significant enough<font color="#CCCCCC"> to give a</font>

671
00:34:05,830 --> 00:34:09,400
high signal-to-noise ratio among<font color="#E5E5E5"> the</font>

672
00:34:08,170 --> 00:34:10,990
million<font color="#CCCCCC"> documents you are</font><font color="#E5E5E5"> trying to</font>

673
00:34:09,400 --> 00:34:13,149
cluster right

674
00:34:10,989 --> 00:34:16,388
so you have to be very careful in

675
00:34:13,149 --> 00:34:18,299
selecting the features both feature

676
00:34:16,389 --> 00:34:23,099
<font color="#E5E5E5">selection and feature engineering</font><font color="#CCCCCC"> and</font>

677
00:34:18,300 --> 00:34:27,070
once you<font color="#E5E5E5"> select</font><font color="#CCCCCC"> the features for your</font>

678
00:34:23,099 --> 00:34:28,540
your problem space<font color="#E5E5E5"> then do the same</font>

679
00:34:27,070 --> 00:34:31,240
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> for all the</font><font color="#E5E5E5"> million documents</font><font color="#CCCCCC"> just</font>

680
00:34:28,540 --> 00:34:33,399
select these set of features<font color="#CCCCCC"> you have a</font>

681
00:34:31,239 --> 00:34:37,239
vector of features for all<font color="#E5E5E5"> the million</font>

682
00:34:33,399 --> 00:34:40,299
documents<font color="#E5E5E5"> you create a nice nice matrix</font>

683
00:34:37,239 --> 00:34:45,699
out of it the matrix would<font color="#CCCCCC"> look like</font>

684
00:34:40,300 --> 00:34:48,609
this look carefully<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> FK in the</font>

685
00:34:45,699 --> 00:34:52,569
first one<font color="#CCCCCC"> it's F</font><font color="#E5E5E5"> Ln in the next one the</font>

686
00:34:48,609 --> 00:34:55,598
K again<font color="#CCCCCC"> then</font><font color="#E5E5E5"> F L in the next one so for</font>

687
00:34:52,570 --> 00:34:57,520
every document<font color="#E5E5E5"> the kind of feature</font>

688
00:34:55,599 --> 00:35:00,040
<font color="#E5E5E5">selection you do I mean the number of</font>

689
00:34:57,520 --> 00:35:02,020
<font color="#E5E5E5">features</font><font color="#CCCCCC"> you extract</font><font color="#E5E5E5"> could be different</font>

690
00:35:00,040 --> 00:35:02,890
<font color="#E5E5E5">it cannot you can't always have the</font>

691
00:35:02,020 --> 00:35:05,470
exact number of<font color="#E5E5E5"> it</font>

692
00:35:02,890 --> 00:35:08,200
insert certain malware files you will

693
00:35:05,470 --> 00:35:11,169
see some other some<font color="#E5E5E5"> other attribute</font>

694
00:35:08,200 --> 00:35:12,819
which looks to<font color="#CCCCCC"> be super important</font><font color="#E5E5E5"> which</font>

695
00:35:11,170 --> 00:35:14,260
may<font color="#E5E5E5"> not</font><font color="#CCCCCC"> be present</font><font color="#E5E5E5"> in the rest of the</font>

696
00:35:12,820 --> 00:35:16,000
document<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you have to include them</font>

697
00:35:14,260 --> 00:35:19,869
right so you have all these

698
00:35:16,000 --> 00:35:22,150
<font color="#CCCCCC">inconsistencies and matrix manipulation</font>

699
00:35:19,869 --> 00:35:23,920
doesn't like these<font color="#E5E5E5"> inconsistencies</font><font color="#CCCCCC"> so</font>

700
00:35:22,150 --> 00:35:32,320
you have to deal<font color="#CCCCCC"> with matrices are back</font>

701
00:35:23,920 --> 00:35:35,080
again<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so here comes both</font>

702
00:35:32,320 --> 00:35:37,359
mathematical and domain expertise<font color="#CCCCCC"> so how</font>

703
00:35:35,080 --> 00:35:43,839
<font color="#CCCCCC">are you</font><font color="#E5E5E5"> going to deal with</font><font color="#CCCCCC"> these feature</font>

704
00:35:37,359 --> 00:35:46,330
imbalance among your data set so for

705
00:35:43,839 --> 00:35:49,150
<font color="#E5E5E5">example in</font><font color="#CCCCCC"> one malware use you do not</font>

706
00:35:46,330 --> 00:35:51,160
see a referral<font color="#E5E5E5"> and in the next malware</font>

707
00:35:49,150 --> 00:35:53,770
you do see a referral<font color="#CCCCCC"> so what are you</font>

708
00:35:51,160 --> 00:35:57,009
<font color="#E5E5E5">going to do with that vector which does</font>

709
00:35:53,770 --> 00:35:59,830
not have a referrer are you going to

710
00:35:57,010 --> 00:36:05,920
<font color="#E5E5E5">substitute it with value none or a zero</font>

711
00:35:59,830 --> 00:36:07,690
or a null entry or a blank space<font color="#E5E5E5"> and if</font>

712
00:36:05,920 --> 00:36:09,460
you do any<font color="#E5E5E5"> of this how is it going to</font>

713
00:36:07,690 --> 00:36:13,119
<font color="#CCCCCC">affect your matrix operations and</font>

714
00:36:09,460 --> 00:36:15,700
<font color="#E5E5E5">eventually your clustering results you</font>

715
00:36:13,119 --> 00:36:17,920
have to<font color="#E5E5E5"> think about that</font><font color="#CCCCCC"> are you going</font>

716
00:36:15,700 --> 00:36:20,618
to impute some value there based on

717
00:36:17,920 --> 00:36:22,450
<font color="#E5E5E5">previous historical one year of one year</font>

718
00:36:20,619 --> 00:36:23,720
worth of history<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have are you going</font>

719
00:36:22,450 --> 00:36:25,759
to impute<font color="#CCCCCC"> some</font><font color="#E5E5E5"> impurity</font>

720
00:36:23,720 --> 00:36:27,529
is<font color="#E5E5E5"> basically predict kind of based on</font>

721
00:36:25,760 --> 00:36:29,900
some<font color="#E5E5E5"> history based on some statistical</font>

722
00:36:27,530 --> 00:36:32,150
distribution<font color="#E5E5E5"> if you predict hey I mean</font>

723
00:36:29,900 --> 00:36:33,980
I've seen so much so<font color="#E5E5E5"> this mostly this</font>

724
00:36:32,150 --> 00:36:35,950
reference<font color="#E5E5E5"> is</font><font color="#CCCCCC"> come and</font><font color="#E5E5E5"> just plug in that</font>

725
00:36:33,980 --> 00:36:39,500
<font color="#CCCCCC">referrer</font><font color="#E5E5E5"> there are</font><font color="#CCCCCC"> we going to do that</font>

726
00:36:35,950 --> 00:36:46,009
<font color="#E5E5E5">you don't want to write at least try to</font>

727
00:36:39,500 --> 00:36:49,340
minimize those kind<font color="#E5E5E5"> of habits right I'll</font>

728
00:36:46,010 --> 00:36:51,380
we can talk about that a lot but the<font color="#E5E5E5"> the</font>

729
00:36:49,340 --> 00:36:53,690
cuts I'm just telling you what problems

730
00:36:51,380 --> 00:36:55,910
you<font color="#E5E5E5"> might face and you know you have to</font>

731
00:36:53,690 --> 00:36:58,580
<font color="#E5E5E5">where you have to be careful you have</font><font color="#CCCCCC"> to</font>

732
00:36:55,910 --> 00:37:01,609
<font color="#E5E5E5">deal</font><font color="#CCCCCC"> with that and once you</font><font color="#E5E5E5"> have this</font>

733
00:36:58,580 --> 00:37:04,190
set of vet set of features<font color="#E5E5E5"> as one</font>

734
00:37:01,609 --> 00:37:07,069
dimensional<font color="#E5E5E5"> vectors do some kind of</font>

735
00:37:04,190 --> 00:37:08,690
vectorization<font color="#E5E5E5"> some kind of decent vector</font>

736
00:37:07,070 --> 00:37:13,400
for example you can just<font color="#E5E5E5"> blindly use</font>

737
00:37:08,690 --> 00:37:15,830
<font color="#CCCCCC">tf-idf factorization</font><font color="#E5E5E5"> or do something if</font>

738
00:37:13,400 --> 00:37:18,050
you<font color="#CCCCCC"> have a lot more time and</font><font color="#E5E5E5"> tolerant to</font>

739
00:37:15,830 --> 00:37:21,319
more pain<font color="#E5E5E5"> you can talk to the domain</font>

740
00:37:18,050 --> 00:37:23,030
experts and get weights of individual

741
00:37:21,320 --> 00:37:25,010
features relative weights of individual

742
00:37:23,030 --> 00:37:27,800
features so that<font color="#CCCCCC"> you can do weighted T</font>

743
00:37:25,010 --> 00:37:31,160
<font color="#CCCCCC">tf-idf</font><font color="#E5E5E5"> vectorization so that this</font>

744
00:37:27,800 --> 00:37:33,020
<font color="#E5E5E5">feature is</font><font color="#CCCCCC"> more important this than this</font>

745
00:37:31,160 --> 00:37:34,190
feature but less important than<font color="#E5E5E5"> this</font>

746
00:37:33,020 --> 00:37:36,080
feature and stuff like that<font color="#E5E5E5"> so you can</font>

747
00:37:34,190 --> 00:37:38,060
<font color="#E5E5E5">add certain weights so</font><font color="#CCCCCC"> that the sum of</font>

748
00:37:36,080 --> 00:37:40,460
the<font color="#CCCCCC"> weights equals to</font><font color="#E5E5E5"> one at the end you</font>

749
00:37:38,060 --> 00:37:42,049
can<font color="#E5E5E5"> do that once you and then you have</font>

750
00:37:40,460 --> 00:37:44,810
<font color="#CCCCCC">to play</font><font color="#E5E5E5"> around</font><font color="#CCCCCC"> with these weights so</font>

751
00:37:42,050 --> 00:37:46,490
<font color="#CCCCCC">that eventually</font><font color="#E5E5E5"> it kind of converges and</font>

752
00:37:44,810 --> 00:37:49,130
you get<font color="#E5E5E5"> more</font><font color="#CCCCCC"> or less good results in</font><font color="#E5E5E5"> the</font>

753
00:37:46,490 --> 00:37:50,569
future<font color="#E5E5E5"> stuff like that so you can</font><font color="#CCCCCC"> do</font>

754
00:37:49,130 --> 00:37:54,710
that<font color="#CCCCCC"> so once you do all these things</font>

755
00:37:50,570 --> 00:38:02,170
<font color="#E5E5E5">then</font><font color="#CCCCCC"> you get a beautiful tf-idf matrix</font>

756
00:37:54,710 --> 00:38:07,160
like this<font color="#E5E5E5"> or any kind of how do I say</font>

757
00:38:02,170 --> 00:38:08,510
the this matrix is basically<font color="#E5E5E5"> the the</font>

758
00:38:07,160 --> 00:38:13,670
matrix<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> right side basically</font>

759
00:38:08,510 --> 00:38:16,910
<font color="#E5E5E5">represents the the the importance of</font>

760
00:38:13,670 --> 00:38:23,900
that particular feature<font color="#E5E5E5"> in that document</font>

761
00:38:16,910 --> 00:38:28,310
relative to the entire corpus<font color="#E5E5E5"> okay once</font>

762
00:38:23,900 --> 00:38:30,020
you<font color="#E5E5E5"> have this then you create the</font>

763
00:38:28,310 --> 00:38:32,630
similarity matrix back to that same

764
00:38:30,020 --> 00:38:34,430
<font color="#E5E5E5">previous section you know ultimately you</font>

765
00:38:32,630 --> 00:38:35,750
need<font color="#E5E5E5"> a similarity matrix somehow and you</font>

766
00:38:34,430 --> 00:38:37,519
have to define<font color="#E5E5E5"> your own distance</font>

767
00:38:35,750 --> 00:38:39,829
measures and stuff like

768
00:38:37,519 --> 00:38:44,479
but you need a similarity<font color="#E5E5E5"> matrix to move</font>

769
00:38:39,829 --> 00:38:47,329
ahead<font color="#E5E5E5"> and with this</font><font color="#CCCCCC"> tf-idf matrix</font><font color="#E5E5E5"> you</font>

770
00:38:44,479 --> 00:38:50,058
<font color="#CCCCCC">can basically</font><font color="#E5E5E5"> generate a similarity</font>

771
00:38:47,329 --> 00:38:53,269
<font color="#E5E5E5">matrix similarity ranking based on</font>

772
00:38:50,059 --> 00:38:55,489
<font color="#CCCCCC">tf-idf</font><font color="#E5E5E5"> so basically you can multiply the</font>

773
00:38:53,269 --> 00:38:57,109
TF<font color="#CCCCCC"> ideas with</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> transpose and get a</font>

774
00:38:55,489 --> 00:38:58,959
similarity<font color="#E5E5E5"> matrix it could be a cosine</font>

775
00:38:57,109 --> 00:39:02,209
<font color="#CCCCCC">distance or some other design but you</font>

776
00:38:58,959 --> 00:39:04,879
<font color="#CCCCCC">have to experiment</font><font color="#E5E5E5"> with the distance</font>

777
00:39:02,209 --> 00:39:07,098
<font color="#CCCCCC">meshes yourself that is now there are</font>

778
00:39:04,880 --> 00:39:10,189
every machine<font color="#E5E5E5"> learning tool out there</font>

779
00:39:07,099 --> 00:39:12,799
<font color="#E5E5E5">will give you a standard set of distance</font>

780
00:39:10,189 --> 00:39:14,058
measurement functions cosine<font color="#E5E5E5"> similarity</font>

781
00:39:12,799 --> 00:39:16,309
Jaccard similarity

782
00:39:14,059 --> 00:39:19,729
you know Minkowski similarity and many

783
00:39:16,309 --> 00:39:21,469
other similarities<font color="#E5E5E5"> they'll give you you</font>

784
00:39:19,729 --> 00:39:23,479
can try if one of them works for you

785
00:39:21,469 --> 00:39:26,569
<font color="#CCCCCC">over a period of time</font><font color="#E5E5E5"> on empirical</font>

786
00:39:23,479 --> 00:39:28,999
analysis if it works<font color="#E5E5E5"> great otherwise you</font>

787
00:39:26,569 --> 00:39:30,739
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to have your own distance matrix</font>

788
00:39:28,999 --> 00:39:32,868
and whether it<font color="#E5E5E5"> should be metric based or</font>

789
00:39:30,739 --> 00:39:35,959
non metric based<font color="#E5E5E5"> you know and it's when</font>

790
00:39:32,869 --> 00:39:39,079
I say metric based then it has to follow

791
00:39:35,959 --> 00:39:41,808
triangle inequality<font color="#E5E5E5"> right if a is closer</font>

792
00:39:39,079 --> 00:39:43,549
to<font color="#E5E5E5"> B and farther away from C then it has</font>

793
00:39:41,809 --> 00:39:47,479
to<font color="#E5E5E5"> eventually form a triangle otherwise</font>

794
00:39:43,549 --> 00:39:49,159
your your metric is broken<font color="#E5E5E5"> and it won't</font>

795
00:39:47,479 --> 00:39:51,618
give you the right distance when when

796
00:39:49,159 --> 00:39:53,449
you really need<font color="#E5E5E5"> it</font><font color="#CCCCCC"> right so those kind</font>

797
00:39:51,619 --> 00:39:55,999
of<font color="#E5E5E5"> things you have to</font><font color="#CCCCCC"> be very careful</font>

798
00:39:53,449 --> 00:39:58,099
there once you do that<font color="#E5E5E5"> you get a nice</font>

799
00:39:55,999 --> 00:40:02,868
similarity matrix<font color="#E5E5E5"> and once you have some</font>

800
00:39:58,099 --> 00:40:05,149
<font color="#CCCCCC">relative matrix the same procedure get</font>

801
00:40:02,869 --> 00:40:07,369
clusters and the cluster evaluation you

802
00:40:05,149 --> 00:40:10,359
can<font color="#E5E5E5"> do in very different ways</font><font color="#CCCCCC"> I will</font>

803
00:40:07,369 --> 00:40:13,609
briefly talk<font color="#E5E5E5"> about cluster evaluation</font>

804
00:40:10,359 --> 00:40:18,459
<font color="#E5E5E5">before that let me see okay here is the</font>

805
00:40:13,609 --> 00:40:20,808
<font color="#E5E5E5">summary</font><font color="#CCCCCC"> of hybrid based clustering so</font>

806
00:40:18,459 --> 00:40:23,479
<font color="#CCCCCC">you have the samples run it through</font>

807
00:40:20,809 --> 00:40:27,739
cuckoo sandbox<font color="#CCCCCC"> again you get analyzed</font>

808
00:40:23,479 --> 00:40:30,618
<font color="#E5E5E5">JSON files and these files from these</font>

809
00:40:27,739 --> 00:40:34,549
<font color="#E5E5E5">files you do feature extraction once you</font>

810
00:40:30,619 --> 00:40:36,259
get the<font color="#CCCCCC"> features out of it</font><font color="#E5E5E5"> you generate</font>

811
00:40:34,549 --> 00:40:40,249
the corpus<font color="#E5E5E5"> the corpus will be</font>

812
00:40:36,259 --> 00:40:43,939
represented in a nice big matrix<font color="#E5E5E5"> with</font>

813
00:40:40,249 --> 00:40:45,888
<font color="#E5E5E5">floating</font><font color="#CCCCCC"> point numbers in it from</font><font color="#E5E5E5"> that</font>

814
00:40:43,939 --> 00:40:49,098
corpus<font color="#CCCCCC"> you generate similarity matrix</font>

815
00:40:45,889 --> 00:40:50,929
<font color="#E5E5E5">from there you cluster and once you</font>

816
00:40:49,099 --> 00:40:51,680
<font color="#E5E5E5">finish clustering then you can do all</font>

817
00:40:50,929 --> 00:40:53,089
the rest

818
00:40:51,680 --> 00:40:56,149
<font color="#E5E5E5">all the fun things after that is</font>

819
00:40:53,089 --> 00:40:58,190
<font color="#E5E5E5">evaluation wreak luster in finding out</font>

820
00:40:56,150 --> 00:41:01,880
on<font color="#E5E5E5"> homilies within a cluster</font><font color="#CCCCCC"> finding</font>

821
00:40:58,190 --> 00:41:03,740
<font color="#E5E5E5">cluster density</font><font color="#CCCCCC"> trying to find centroids</font>

822
00:41:01,880 --> 00:41:05,660
<font color="#E5E5E5">of the cluster and</font><font color="#CCCCCC"> if the centroid is a</font>

823
00:41:03,740 --> 00:41:07,669
member then great<font color="#E5E5E5"> if it's not</font><font color="#CCCCCC"> a member</font>

824
00:41:05,660 --> 00:41:09,680
yet<font color="#E5E5E5"> I've arranged it and then once you</font>

825
00:41:07,670 --> 00:41:11,300
have a centroid nice centroid then you

826
00:41:09,680 --> 00:41:13,879
can know the salient features<font color="#CCCCCC"> of the</font>

827
00:41:11,300 --> 00:41:16,490
cluster<font color="#E5E5E5"> and then you you can just</font>

828
00:41:13,880 --> 00:41:19,250
monitor<font color="#E5E5E5"> the cluster every month or</font><font color="#CCCCCC"> every</font>

829
00:41:16,490 --> 00:41:22,459
quarter<font color="#E5E5E5"> if you if you had monitored</font><font color="#CCCCCC"> a</font>

830
00:41:19,250 --> 00:41:24,470
particular<font color="#E5E5E5"> you know a particular cluster</font>

831
00:41:22,460 --> 00:41:26,809
over<font color="#CCCCCC"> the past</font><font color="#E5E5E5"> three years and say every</font>

832
00:41:24,470 --> 00:41:29,390
summer this<font color="#E5E5E5"> guy hits he's very prevalent</font>

833
00:41:26,809 --> 00:41:31,010
in<font color="#E5E5E5"> asia-pacific</font><font color="#CCCCCC"> so I know what you did</font>

834
00:41:29,390 --> 00:41:32,270
in<font color="#CCCCCC"> the last three</font><font color="#E5E5E5"> summers and probably I</font>

835
00:41:31,010 --> 00:41:33,920
<font color="#E5E5E5">would know what you would do the next</font>

836
00:41:32,270 --> 00:41:36,460
summer<font color="#E5E5E5"> some</font><font color="#CCCCCC"> stops stuff like that and</font>

837
00:41:33,920 --> 00:41:40,550
you would already have<font color="#E5E5E5"> a nice signatures</font>

838
00:41:36,460 --> 00:41:43,309
readily designed for it right stuff like

839
00:41:40,550 --> 00:41:46,520
<font color="#E5E5E5">a lot of nice</font><font color="#CCCCCC"> things could be done you</font>

840
00:41:43,309 --> 00:41:48,980
<font color="#E5E5E5">can you can basically find out which</font>

841
00:41:46,520 --> 00:41:51,770
clusters of<font color="#E5E5E5"> which family of malware were</font>

842
00:41:48,980 --> 00:41:53,630
prevalent<font color="#E5E5E5"> in early 2006 then faded off</font>

843
00:41:51,770 --> 00:41:56,599
in the summer and then came back<font color="#E5E5E5"> in</font><font color="#CCCCCC"> late</font>

844
00:41:53,630 --> 00:41:58,280
2017 or whatever<font color="#E5E5E5"> you can you will know</font>

845
00:41:56,599 --> 00:42:00,589
that<font color="#E5E5E5"> you can you you can find the</font>

846
00:41:58,280 --> 00:42:04,549
lineage of a given what<font color="#CCCCCC"> see how let's</font>

847
00:42:00,589 --> 00:42:06,319
say<font color="#CCCCCC"> you have one</font><font color="#E5E5E5"> cluster you can find</font>

848
00:42:04,549 --> 00:42:08,960
<font color="#E5E5E5">the lineage within the members of the</font>

849
00:42:06,319 --> 00:42:12,500
cluster<font color="#E5E5E5"> who which malware in within that</font>

850
00:42:08,960 --> 00:42:16,000
cluster was the seminal malware and how

851
00:42:12,500 --> 00:42:18,680
it spread out how the<font color="#E5E5E5"> variants came</font>

852
00:42:16,000 --> 00:42:20,630
which were the<font color="#E5E5E5"> first hop variants second</font>

853
00:42:18,680 --> 00:42:22,640
generation variants and stuff like that

854
00:42:20,630 --> 00:42:31,150
<font color="#E5E5E5">you you have a lot of beautiful</font><font color="#CCCCCC"> things</font>

855
00:42:22,640 --> 00:42:31,150
could be<font color="#E5E5E5"> done with it questions yes</font>

856
00:42:34,319 --> 00:42:50,099
this one okay this is kind<font color="#CCCCCC"> of a dumb</font>

857
00:42:41,789 --> 00:42:51,299
<font color="#CCCCCC">question</font><font color="#E5E5E5"> I admit</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> a feature</font><font color="#CCCCCC"> of this</font>

858
00:42:50,099 --> 00:42:52,829
seems very sensitive to feature

859
00:42:51,299 --> 00:42:54,089
evaluation<font color="#E5E5E5"> right like if you choose the</font>

860
00:42:52,829 --> 00:42:57,239
wrong set<font color="#CCCCCC"> of features you're not gonna</font>

861
00:42:54,089 --> 00:42:58,349
get<font color="#E5E5E5"> very good like cluster generation if</font>

862
00:42:57,239 --> 00:42:59,759
<font color="#E5E5E5">you choose the wrong clustering</font>

863
00:42:58,349 --> 00:43:02,729
algorithm<font color="#E5E5E5"> right it's</font><font color="#CCCCCC"> not going to spit</font>

864
00:42:59,759 --> 00:43:04,289
out very<font color="#E5E5E5"> useful information so you've</font>

865
00:43:02,729 --> 00:43:07,348
got this going<font color="#E5E5E5"> you're feeding</font><font color="#CCCCCC"> it data</font>

866
00:43:04,289 --> 00:43:08,069
<font color="#E5E5E5">how do you know that</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> working</font><font color="#CCCCCC"> like</font>

867
00:43:07,349 --> 00:43:09,529
how do you<font color="#E5E5E5"> know that</font><font color="#CCCCCC"> you're identifying</font>

868
00:43:08,069 --> 00:43:11,999
<font color="#CCCCCC">the right things and</font><font color="#E5E5E5"> how do you</font>

869
00:43:09,529 --> 00:43:13,440
iteratively go back and improve like

870
00:43:11,999 --> 00:43:17,218
your feature extraction<font color="#E5E5E5"> and clustering</font>

871
00:43:13,440 --> 00:43:23,759
and so forth as<font color="#CCCCCC"> you do this it's a</font>

872
00:43:17,219 --> 00:43:26,869
painful<font color="#E5E5E5"> process</font><font color="#CCCCCC"> I I'm a data science guy</font>

873
00:43:23,759 --> 00:43:30,539
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> not a security</font><font color="#CCCCCC"> researcher I have</font>

874
00:43:26,869 --> 00:43:35,789
limited exposure to<font color="#E5E5E5"> malware</font><font color="#CCCCCC"> and their</font>

875
00:43:30,539 --> 00:43:38,459
behavior<font color="#CCCCCC"> so what I do is</font><font color="#E5E5E5"> this so I have</font>

876
00:43:35,789 --> 00:43:42,029
my<font color="#E5E5E5"> C the first is visual examination</font>

877
00:43:38,459 --> 00:43:44,430
once I have the clusters<font color="#CCCCCC"> I look at the</font>

878
00:43:42,029 --> 00:43:47,009
members<font color="#E5E5E5"> of let's say a cluster has seven</font>

879
00:43:44,430 --> 00:43:50,489
members<font color="#CCCCCC"> in it i man</font><font color="#E5E5E5"> will you look at the</font>

880
00:43:47,009 --> 00:43:51,989
<font color="#CCCCCC">JSON files of these seven guys</font><font color="#E5E5E5"> man will</font>

881
00:43:50,489 --> 00:43:54,150
<font color="#E5E5E5">you</font><font color="#CCCCCC"> look at them compare line by line</font>

882
00:43:51,989 --> 00:43:57,719
<font color="#CCCCCC">feature</font><font color="#E5E5E5"> by feature section by section</font>

883
00:43:54,150 --> 00:44:00,719
<font color="#E5E5E5">and validate myself hey they look good</font>

884
00:43:57,719 --> 00:44:02,609
<font color="#CCCCCC">and then I just give that seven member</font>

885
00:44:00,719 --> 00:44:05,190
cluster off to the malware researchers

886
00:44:02,609 --> 00:44:07,619
and and tell them hey I found these as

887
00:44:05,190 --> 00:44:10,979
you know these seven<font color="#E5E5E5"> has variants of the</font>

888
00:44:07,619 --> 00:44:13,319
same<font color="#E5E5E5"> family and they will say why the</font>

889
00:44:10,979 --> 00:44:14,999
hell<font color="#E5E5E5"> this member number five came there</font>

890
00:44:13,319 --> 00:44:16,829
that shouldn't<font color="#E5E5E5"> be</font><font color="#CCCCCC"> there then I will go</font>

891
00:44:14,999 --> 00:44:18,180
and argue<font color="#E5E5E5"> with</font><font color="#CCCCCC"> them hey look look at</font>

892
00:44:16,829 --> 00:44:20,309
<font color="#E5E5E5">that Jason</font><font color="#CCCCCC"> for his they all look the</font>

893
00:44:18,180 --> 00:44:23,219
same and<font color="#CCCCCC"> that guy will come and say hey</font>

894
00:44:20,309 --> 00:44:25,019
no<font color="#CCCCCC"> CooCoo sandbox was run</font><font color="#E5E5E5"> only for three</font>

895
00:44:23,219 --> 00:44:27,599
minutes<font color="#E5E5E5"> that you know in three minutes</font>

896
00:44:25,019 --> 00:44:31,319
<font color="#CCCCCC">this guy didn't do much at all</font><font color="#E5E5E5"> even</font>

897
00:44:27,599 --> 00:44:32,880
<font color="#E5E5E5">though he had the similar traffic if you</font>

898
00:44:31,319 --> 00:44:35,609
run the same<font color="#CCCCCC"> cuckoo sandbox on this</font>

899
00:44:32,880 --> 00:44:37,259
member<font color="#E5E5E5"> number five for next</font><font color="#CCCCCC"> thirty</font>

900
00:44:35,609 --> 00:44:38,819
minutes<font color="#CCCCCC"> he would</font><font color="#E5E5E5"> have done all these</font>

901
00:44:37,259 --> 00:44:41,069
different<font color="#CCCCCC"> things which no</font><font color="#E5E5E5"> other guys</font>

902
00:44:38,819 --> 00:44:42,869
would<font color="#CCCCCC"> have done it so essentially you</font>

903
00:44:41,069 --> 00:44:44,910
<font color="#CCCCCC">are defeated here then I said come</font><font color="#E5E5E5"> on</font>

904
00:44:42,869 --> 00:44:46,019
then run all the samples for<font color="#E5E5E5"> 30 minutes</font>

905
00:44:44,910 --> 00:44:48,170
<font color="#E5E5E5">and he</font><font color="#CCCCCC"> will say I don't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> the</font>

906
00:44:46,019 --> 00:44:48,169
resources

907
00:44:50,350 --> 00:44:56,810
that's why in<font color="#E5E5E5"> most cases this is good</font>

908
00:44:53,870 --> 00:44:59,390
but<font color="#CCCCCC"> you can go</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to opcode clustering</font>

909
00:44:56,810 --> 00:45:01,610
<font color="#CCCCCC">opcode clustering never lies</font>

910
00:44:59,390 --> 00:45:03,379
doesn't lie at all because<font color="#E5E5E5"> you have the</font>

911
00:45:01,610 --> 00:45:05,330
<font color="#CCCCCC">awkward all the instruction sets you</font>

912
00:45:03,380 --> 00:45:06,800
know what it will do even<font color="#E5E5E5"> you don't have</font>

913
00:45:05,330 --> 00:45:10,250
to run it you<font color="#E5E5E5"> don't have to executed in</font>

914
00:45:06,800 --> 00:45:12,830
a cuckoo sandbox<font color="#E5E5E5"> so this is one so but</font>

915
00:45:10,250 --> 00:45:14,210
again<font color="#E5E5E5"> is it's sorry isn't then your</font>

916
00:45:12,830 --> 00:45:15,860
opcode thing though there's there's

917
00:45:14,210 --> 00:45:18,650
obfuscation<font color="#E5E5E5"> and so forth</font><font color="#CCCCCC"> that could come</font>

918
00:45:15,860 --> 00:45:22,700
into play<font color="#E5E5E5"> too</font><font color="#CCCCCC"> there are nice</font>

919
00:45:18,650 --> 00:45:25,940
mathematical<font color="#E5E5E5"> techniques to to to</font><font color="#CCCCCC"> lessen</font>

920
00:45:22,700 --> 00:45:30,740
the problems of you know of<font color="#CCCCCC"> Education</font>

921
00:45:25,940 --> 00:45:34,030
techniques<font color="#E5E5E5"> so yeah did I kind of answer</font>

922
00:45:30,740 --> 00:45:39,200
your<font color="#E5E5E5"> questions sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> okay okay okay</font>

923
00:45:34,030 --> 00:45:40,370
yes so just<font color="#CCCCCC"> out of curiosity um so this</font>

924
00:45:39,200 --> 00:45:42,439
<font color="#E5E5E5">is more of</font><font color="#CCCCCC"> a research</font><font color="#E5E5E5"> but do you have</font>

925
00:45:40,370 --> 00:45:44,390
something<font color="#CCCCCC"> which is working currently</font>

926
00:45:42,440 --> 00:45:46,910
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we could probably try to use</font><font color="#CCCCCC"> and</font>

927
00:45:44,390 --> 00:45:50,299
try<font color="#CCCCCC"> to test it this</font><font color="#E5E5E5"> is working</font><font color="#CCCCCC"> I don't</font>

928
00:45:46,910 --> 00:45:51,740
<font color="#CCCCCC">have a</font><font color="#E5E5E5"> demo but this is in fact</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> but</font>

929
00:45:50,300 --> 00:45:53,030
<font color="#E5E5E5">how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> is it available now can github</font>

930
00:45:51,740 --> 00:45:55,750
or something where we can<font color="#E5E5E5"> get a hold off</font>

931
00:45:53,030 --> 00:45:58,970
and try there<font color="#E5E5E5"> it's mostly internal but</font>

932
00:45:55,750 --> 00:46:01,310
the concepts are all<font color="#E5E5E5"> it's out there this</font>

933
00:45:58,970 --> 00:46:03,410
<font color="#E5E5E5">is no secret command this these concepts</font>

934
00:46:01,310 --> 00:46:07,570
are<font color="#E5E5E5"> probably there</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> four decades or</font>

935
00:46:03,410 --> 00:46:07,569
so so it's no secret of so

936
00:46:11,040 --> 00:46:15,970
with that being the<font color="#E5E5E5"> case and the and the</font>

937
00:46:13,480 --> 00:46:17,680
sort<font color="#E5E5E5"> of primitives being</font><font color="#CCCCCC"> well-known it's</font>

938
00:46:15,970 --> 00:46:20,020
<font color="#E5E5E5">it seems like kind of his point</font><font color="#CCCCCC"> that the</font>

939
00:46:17,680 --> 00:46:22,450
<font color="#E5E5E5">the key thing is feature selection so to</font>

940
00:46:20,020 --> 00:46:23,680
what<font color="#CCCCCC"> extent can you kind of talk to the</font>

941
00:46:22,450 --> 00:46:25,899
features that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> find the most useful</font>

942
00:46:23,680 --> 00:46:28,060
in doing this<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> analysis</font><font color="#CCCCCC"> is that</font>

943
00:46:25,900 --> 00:46:32,140
kind of a<font color="#CCCCCC"> proprietary question it is I</font>

944
00:46:28,060 --> 00:46:34,770
mean<font color="#E5E5E5"> it is an IP actually so the in most</font>

945
00:46:32,140 --> 00:46:38,560
<font color="#E5E5E5">companies for example just data analysis</font>

946
00:46:34,770 --> 00:46:41,710
ultimately<font color="#CCCCCC"> it boils down</font><font color="#E5E5E5"> to the data</font>

947
00:46:38,560 --> 00:46:43,570
they have<font color="#E5E5E5"> and how</font><font color="#CCCCCC"> they how they choose</font>

948
00:46:41,710 --> 00:46:50,770
<font color="#E5E5E5">the data and how they correlate the data</font>

949
00:46:43,570 --> 00:46:51,910
<font color="#E5E5E5">that's that's an IP for them it</font><font color="#CCCCCC"> is if I</font>

950
00:46:50,770 --> 00:46:53,500
<font color="#E5E5E5">tell that then you'll kick me out</font>

951
00:46:51,910 --> 00:46:55,390
because<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> a well-known for example</font>

952
00:46:53,500 --> 00:46:57,400
I rattled or a lack of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> referrer</font><font color="#E5E5E5"> which</font>

953
00:46:55,390 --> 00:47:00,450
is a key thing<font color="#E5E5E5"> and how are you going to</font>

954
00:46:57,400 --> 00:47:04,210
<font color="#E5E5E5">deal</font><font color="#CCCCCC"> with it is something</font><font color="#E5E5E5"> secret right</font>

955
00:47:00,450 --> 00:47:05,980
<font color="#CCCCCC">then having okay for example user agents</font>

956
00:47:04,210 --> 00:47:07,720
right<font color="#E5E5E5"> you</font><font color="#CCCCCC"> had a lot of these user agents</font>

957
00:47:05,980 --> 00:47:09,850
present<font color="#E5E5E5"> right so how are you going to</font>

958
00:47:07,720 --> 00:47:11,740
<font color="#E5E5E5">find the needle</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> haystack about</font>

959
00:47:09,850 --> 00:47:14,170
every user agent how are you going<font color="#E5E5E5"> to</font>

960
00:47:11,740 --> 00:47:15,729
provide it a<font color="#E5E5E5"> wait relative rate it's not</font>

961
00:47:14,170 --> 00:47:18,190
<font color="#E5E5E5">an</font><font color="#CCCCCC"> absolute way it's a relative way</font>

962
00:47:15,730 --> 00:47:20,970
right how are<font color="#CCCCCC"> you</font><font color="#E5E5E5"> going to do that so</font>

963
00:47:18,190 --> 00:47:23,890
<font color="#E5E5E5">you so let's say you are sitting with</font>

964
00:47:20,970 --> 00:47:26,618
<font color="#E5E5E5">with a mountain load of historical data</font>

965
00:47:23,890 --> 00:47:29,770
sets<font color="#E5E5E5"> then you can you</font><font color="#CCCCCC"> can have</font><font color="#E5E5E5"> an very</font>

966
00:47:26,619 --> 00:47:32,920
fast key<font color="#E5E5E5"> value database to search over</font>

967
00:47:29,770 --> 00:47:34,840
all<font color="#E5E5E5"> the previous user ages put them in a</font>

968
00:47:32,920 --> 00:47:37,030
bloom filter<font color="#CCCCCC"> and quickly check whether</font>

969
00:47:34,840 --> 00:47:39,609
it<font color="#CCCCCC"> is there or</font><font color="#E5E5E5"> not and if if you find a</font>

970
00:47:37,030 --> 00:47:40,720
low probability<font color="#CCCCCC"> of that then</font><font color="#E5E5E5"> you can you</font>

971
00:47:39,609 --> 00:47:42,400
<font color="#E5E5E5">know you can say hey this</font><font color="#CCCCCC"> looks</font>

972
00:47:40,720 --> 00:47:43,959
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> essentially what you are</font>

973
00:47:42,400 --> 00:47:47,950
trying<font color="#E5E5E5"> to do is look for interestingness</font>

974
00:47:43,960 --> 00:47:51,070
in your current data based on prior<font color="#E5E5E5"> data</font>

975
00:47:47,950 --> 00:47:52,750
and other other factors right so and

976
00:47:51,070 --> 00:47:54,490
once you do that once<font color="#E5E5E5"> you</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> that this</font>

977
00:47:52,750 --> 00:47:56,109
<font color="#E5E5E5">is</font><font color="#CCCCCC"> interesting the notice core it it's</font>

978
00:47:54,490 --> 00:47:59,890
some kind of<font color="#CCCCCC"> interestingness</font><font color="#E5E5E5"> score from</font>

979
00:47:56,109 --> 00:48:01,600
<font color="#CCCCCC">zero to one right</font><font color="#E5E5E5"> so this there has to</font>

980
00:47:59,890 --> 00:48:03,040
be some net score but before you get

981
00:48:01,600 --> 00:48:05,319
<font color="#E5E5E5">arrived at the net score you have to</font>

982
00:48:03,040 --> 00:48:08,920
scho for individual<font color="#CCCCCC"> attributes and then</font>

983
00:48:05,320 --> 00:48:11,950
come up<font color="#CCCCCC"> with a net</font><font color="#E5E5E5"> thread score Hamming</font>

984
00:48:08,920 --> 00:48:14,560
distances are different<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> there are</font>

985
00:48:11,950 --> 00:48:16,060
various<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to score</font><font color="#E5E5E5"> you have</font>

986
00:48:14,560 --> 00:48:17,950
<font color="#E5E5E5">essentially you had to come up</font><font color="#CCCCCC"> with your</font>

987
00:48:16,060 --> 00:48:21,580
<font color="#CCCCCC">own scoring mechanisms but that signal</font>

988
00:48:17,950 --> 00:48:23,410
<font color="#CCCCCC">means there are nice nice clues in in</font>

989
00:48:21,580 --> 00:48:28,000
literature<font color="#CCCCCC"> but</font>

990
00:48:23,410 --> 00:48:30,730
you have to try<font color="#CCCCCC"> out it's it's</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> no</font>

991
00:48:28,000 --> 00:48:33,160
<font color="#CCCCCC">I'm trying to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> as explanatory as</font>

992
00:48:30,730 --> 00:48:35,500
possible but this it's not<font color="#E5E5E5"> like you know</font>

993
00:48:33,160 --> 00:48:37,210
<font color="#E5E5E5">it's not not like</font><font color="#CCCCCC"> a cookie cutter thing</font>

994
00:48:35,500 --> 00:48:38,829
like one plus one is<font color="#CCCCCC"> equal</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> two just</font>

995
00:48:37,210 --> 00:48:42,990
trust me<font color="#CCCCCC"> I can't do that I can't say</font>

996
00:48:38,829 --> 00:48:42,990
that questions

997
00:48:48,200 --> 00:48:55,399
[Applause]

