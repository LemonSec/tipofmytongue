1
00:00:17,470 --> 00:00:24,320
thank you and John McCoy hacking<font color="#CCCCCC"> Net</font>

2
00:00:21,890 --> 00:00:27,950
<font color="#CCCCCC">Applications the Black Arts version 3</font>

3
00:00:24,320 --> 00:00:30,920
I've given this kind of track talked a

4
00:00:27,950 --> 00:00:33,710
few times and I'm going a little deeper

5
00:00:30,920 --> 00:00:35,000
into instead of just showing you<font color="#E5E5E5"> the</font>

6
00:00:33,710 --> 00:00:38,270
high level<font color="#E5E5E5"> stuff I'm going to try and</font>

7
00:00:35,000 --> 00:00:41,000
drill in and execute some of it a little

8
00:00:38,270 --> 00:00:43,510
more directly so you can see it<font color="#E5E5E5"> and see</font>

9
00:00:41,000 --> 00:00:46,879
that it's easy in the real world and

10
00:00:43,510 --> 00:00:49,760
like I said he said<font color="#E5E5E5"> I'm digital</font>

11
00:00:46,879 --> 00:00:52,640
bodyguard and all of these tools are

12
00:00:49,760 --> 00:00:56,089
free up on my website and all of this

13
00:00:52,640 --> 00:00:58,430
tech research tools white papers videos

14
00:00:56,090 --> 00:01:01,820
are all up there to follow<font color="#CCCCCC"> along and</font>

15
00:00:58,430 --> 00:01:03,860
it's open in public and free<font color="#E5E5E5"> I'll be</font>

16
00:01:01,820 --> 00:01:06,340
<font color="#E5E5E5">looking at attacking dotnet applications</font>

17
00:01:03,860 --> 00:01:08,479
the basic tools<font color="#E5E5E5"> and methodologies and</font>

18
00:01:06,340 --> 00:01:09,740
it's a<font color="#E5E5E5"> little different than attacking a</font>

19
00:01:08,479 --> 00:01:12,410
web app it's a little<font color="#E5E5E5"> different than</font>

20
00:01:09,740 --> 00:01:14,740
attacking a<font color="#E5E5E5"> C++ buffer overflow</font><font color="#CCCCCC"> it's</font>

21
00:01:12,410 --> 00:01:16,670
it's a<font color="#E5E5E5"> different paradigm and</font>

22
00:01:14,740 --> 00:01:19,009
specifically in<font color="#E5E5E5"> the tools and research</font>

23
00:01:16,670 --> 00:01:21,290
and what does<font color="#E5E5E5"> it take to overcome</font>

24
00:01:19,009 --> 00:01:23,360
security inside of an application was it

25
00:01:21,290 --> 00:01:24,979
take to overcome security in an

26
00:01:23,360 --> 00:01:26,800
enterprise that's using that application

27
00:01:24,979 --> 00:01:28,729
it's kind of where this all goes and

28
00:01:26,800 --> 00:01:30,500
hopefully<font color="#CCCCCC"> you'll see that reverse</font>

29
00:01:28,729 --> 00:01:36,020
engineering making cracks keygens

30
00:01:30,500 --> 00:01:38,869
overcoming security is easy<font color="#CCCCCC"> I attack in</font>

31
00:01:36,020 --> 00:01:40,190
memory and on disk I make tools for

32
00:01:38,869 --> 00:01:43,130
reverse engineering and editing

33
00:01:40,190 --> 00:01:45,770
executables and<font color="#CCCCCC"> dll's and caches I make</font>

34
00:01:43,130 --> 00:01:48,110
tools for penetrating at a process

35
00:01:45,770 --> 00:01:50,899
memory space and changing its object

36
00:01:48,110 --> 00:01:54,259
flow in this speech I'm<font color="#E5E5E5"> going to be</font>

37
00:01:50,899 --> 00:01:55,850
<font color="#E5E5E5">talking more on that tacking disk side</font>

38
00:01:54,259 --> 00:01:57,289
you can check<font color="#E5E5E5"> out the rest of my</font>

39
00:01:55,850 --> 00:02:00,348
research if you want to go into on

40
00:01:57,289 --> 00:02:02,030
memory but it's it all boils down to

41
00:02:00,349 --> 00:02:04,700
<font color="#E5E5E5">kind of a simple flow you attack the</font>

42
00:02:02,030 --> 00:02:06,679
logic and decompile it you infect the

43
00:02:04,700 --> 00:02:09,530
logic and you drop your own shims in

44
00:02:06,679 --> 00:02:11,630
there you hook the logic you get in that

45
00:02:09,530 --> 00:02:14,420
flow you get into that unit test driven

46
00:02:11,630 --> 00:02:17,840
cycle and attacking in memory is pretty

47
00:02:14,420 --> 00:02:19,700
<font color="#E5E5E5">much a simple flow of you inject into</font>

48
00:02:17,840 --> 00:02:22,099
the target applications memory space you

49
00:02:19,700 --> 00:02:23,810
navigate the structure and you edit and

50
00:02:22,099 --> 00:02:26,470
control that structure so it's kind of

51
00:02:23,810 --> 00:02:28,519
the<font color="#CCCCCC"> same have been kind of different</font>

52
00:02:26,470 --> 00:02:31,250
whether you're attacking<font color="#E5E5E5"> in memory on</font>

53
00:02:28,519 --> 00:02:33,080
disk it's all just commands right I

54
00:02:31,250 --> 00:02:35,690
on disk its commands and memory its

55
00:02:33,080 --> 00:02:36,980
commands we can't hide these commands

56
00:02:35,690 --> 00:02:38,660
<font color="#E5E5E5">from the user we can't hide these</font>

57
00:02:36,980 --> 00:02:41,060
commands from the in processor because

58
00:02:38,660 --> 00:02:42,799
they have to be there and you have total

59
00:02:41,060 --> 00:02:45,380
<font color="#E5E5E5">control there's nothing stopping you</font>

60
00:02:42,800 --> 00:02:47,420
from editing memory or commands or

61
00:02:45,380 --> 00:02:49,250
anything else inside of your own box

62
00:02:47,420 --> 00:02:51,799
when your admin your admin there is no

63
00:02:49,250 --> 00:02:54,440
higher state they can't hide from you

64
00:02:51,800 --> 00:02:56,440
and how<font color="#CCCCCC"> do</font><font color="#E5E5E5"> you get there how do you get</font>

65
00:02:54,440 --> 00:02:59,090
from<font color="#E5E5E5"> a program that's locking you out</font>

66
00:02:56,440 --> 00:03:01,670
denying you something to<font color="#E5E5E5"> by passing</font>

67
00:02:59,090 --> 00:03:04,640
right through that and that's where<font color="#E5E5E5"> you</font>

68
00:03:01,670 --> 00:03:06,649
get to controlling what you need<font color="#E5E5E5"> I'm</font>

69
00:03:04,640 --> 00:03:09,649
going<font color="#E5E5E5"> to be talking specifically about</font>

70
00:03:06,650 --> 00:03:11,840
editing on<font color="#E5E5E5"> disk what does it really take</font>

71
00:03:09,650 --> 00:03:15,500
to get in<font color="#E5E5E5"> there get your hands dirty and</font>

72
00:03:11,840 --> 00:03:20,450
just take control and let's look at what

73
00:03:15,500 --> 00:03:23,450
we can<font color="#E5E5E5"> do with this that this is what I</font>

74
00:03:20,450 --> 00:03:25,850
generally produce it's a crack you

75
00:03:23,450 --> 00:03:30,019
download off the internet and let's

76
00:03:25,850 --> 00:03:33,590
bring up<font color="#E5E5E5"> I'm using two monitors whereas</font>

77
00:03:30,020 --> 00:03:37,010
normally I use<font color="#E5E5E5"> one so I can see what you</font>

78
00:03:33,590 --> 00:03:39,980
see but this<font color="#E5E5E5"> is going to be a little</font>

79
00:03:37,010 --> 00:03:44,739
interesting so here's<font color="#E5E5E5"> PowerShell the the</font>

80
00:03:39,980 --> 00:03:48,170
basic command prompt and let's install a

81
00:03:44,739 --> 00:03:50,570
exploit this takes over and injects into

82
00:03:48,170 --> 00:03:58,070
our windows and that infects a machine

83
00:03:50,570 --> 00:04:03,100
and this is<font color="#E5E5E5"> PowerShell infected let's</font>

84
00:03:58,070 --> 00:04:03,100
see install it<font color="#E5E5E5"> okay</font>

85
00:04:03,480 --> 00:04:10,390
and this is going<font color="#E5E5E5"> to be a little weird</font>

86
00:04:06,400 --> 00:04:12,730
with me switching screens so so this<font color="#E5E5E5"> is</font>

87
00:04:10,390 --> 00:04:17,199
PI<font color="#CCCCCC"> Rochelle infected and it still works</font>

88
00:04:12,730 --> 00:04:20,459
and it's I'm<font color="#E5E5E5"> just intercepting that one</font>

89
00:04:17,199 --> 00:04:23,229
part the<font color="#E5E5E5"> display function and this is</font>

90
00:04:20,459 --> 00:04:24,970
trivial this is a hardened core

91
00:04:23,229 --> 00:04:27,280
application inside of it where if you

92
00:04:24,970 --> 00:04:29,620
shim this and you<font color="#CCCCCC"> Jack someone's box and</font>

93
00:04:27,280 --> 00:04:31,780
you take this over your god you're above

94
00:04:29,620 --> 00:04:33,699
admin you're above<font color="#CCCCCC"> the admin using the</font>

95
00:04:31,780 --> 00:04:35,679
<font color="#E5E5E5">box you now control the world their</font>

96
00:04:33,699 --> 00:04:37,289
inside and hopefully by the end of the

97
00:04:35,680 --> 00:04:41,020
speech this<font color="#CCCCCC"> will look fairly trivial</font>

98
00:04:37,289 --> 00:04:43,120
that I can demystify going from this

99
00:04:41,020 --> 00:04:44,440
payload you download off the internet to

100
00:04:43,120 --> 00:04:46,360
how do you produce it how do you do it

101
00:04:44,440 --> 00:04:47,650
by hand what does the<font color="#E5E5E5"> lifecycle look</font>

102
00:04:46,360 --> 00:04:53,740
like hopefully this all looks pretty

103
00:04:47,650 --> 00:04:55,719
easy and and it has a defensive quality

104
00:04:53,740 --> 00:04:58,330
<font color="#E5E5E5">too when you talk about your enterprises</font>

105
00:04:55,720 --> 00:04:59,680
uses software how do you know how do you

106
00:04:58,330 --> 00:05:00,940
know what that software does how do you

107
00:04:59,680 --> 00:05:02,979
know if the crypto is good how do you

108
00:05:00,940 --> 00:05:05,229
know if your communication channel is

109
00:05:02,979 --> 00:05:06,699
secure what is it sending home now you

110
00:05:05,229 --> 00:05:08,530
can reach in there and with these tools

111
00:05:06,699 --> 00:05:11,050
<font color="#E5E5E5">i'll be showing you you can take control</font>

112
00:05:08,530 --> 00:05:15,969
<font color="#E5E5E5">of an application</font><font color="#CCCCCC"> for good or bad</font>

113
00:05:11,050 --> 00:05:18,880
purposes and that<font color="#CCCCCC"> takes us to looking at</font>

114
00:05:15,970 --> 00:05:20,710
this is just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> random piece of malware</font>

115
00:05:18,880 --> 00:05:22,330
off the internet like whether it's

116
00:05:20,710 --> 00:05:24,909
<font color="#E5E5E5">something your enterprise needs or</font>

117
00:05:22,330 --> 00:05:28,000
requires how do<font color="#E5E5E5"> you look at it how do</font>

118
00:05:24,909 --> 00:05:30,669
you know what it is this is<font color="#CCCCCC"> gray wool</font>

119
00:05:28,000 --> 00:05:33,039
you can drag and<font color="#CCCCCC"> drop</font><font color="#E5E5E5"> it in there and it</font>

120
00:05:30,669 --> 00:05:35,260
shows you the proper name spaces and all

121
00:05:33,039 --> 00:05:38,349
of that this is not really different in

122
00:05:35,260 --> 00:05:40,440
<font color="#CCCCCC">C++ or kobold or even assembly code all</font>

123
00:05:38,349 --> 00:05:45,039
the commands are still there always<font color="#CCCCCC"> and</font>

124
00:05:40,440 --> 00:05:47,500
i made<font color="#E5E5E5"> this tool for not decompiling but</font>

125
00:05:45,039 --> 00:05:49,659
editing executables and<font color="#CCCCCC"> dll's so i have</font>

126
00:05:47,500 --> 00:05:51,250
a fine main because<font color="#E5E5E5"> i like to I like to</font>

127
00:05:49,659 --> 00:05:52,960
jump to the main I like<font color="#E5E5E5"> to see where the</font>

128
00:05:51,250 --> 00:05:55,599
<font color="#E5E5E5">program flow starts that's where I</font>

129
00:05:52,960 --> 00:05:58,060
commonly start off from and you get

130
00:05:55,599 --> 00:06:01,330
source code back you get the names of

131
00:05:58,060 --> 00:06:04,180
the classes<font color="#E5E5E5"> and that's what this piece</font>

132
00:06:01,330 --> 00:06:06,460
of<font color="#E5E5E5"> software does right so now we can</font>

133
00:06:04,180 --> 00:06:08,860
look through it and understand it we can

134
00:06:06,460 --> 00:06:12,729
know for a fact whether it's doing

135
00:06:08,860 --> 00:06:15,460
crypto good crypto bad and one side<font color="#CCCCCC"> is C</font>

136
00:06:12,729 --> 00:06:16,340
sharp the other side is<font color="#CCCCCC"> il this is a IL</font>

137
00:06:15,460 --> 00:06:17,960
editor because

138
00:06:16,340 --> 00:06:21,710
whether you're attacking vb c sharp

139
00:06:17,960 --> 00:06:27,260
office cated code<font color="#CCCCCC"> i like</font><font color="#E5E5E5"> to attack it in</font>

140
00:06:21,710 --> 00:06:30,979
aisle and so you can do basic like this

141
00:06:27,260 --> 00:06:33,830
has an if up here and this is<font color="#CCCCCC"> an</font><font color="#E5E5E5"> aisle</font>

142
00:06:30,979 --> 00:06:35,840
editor you open it up and you flip this

143
00:06:33,830 --> 00:06:37,310
to put a knot in front and then you

144
00:06:35,840 --> 00:06:40,489
click<font color="#E5E5E5"> Save and it saves out an</font>

145
00:06:37,310 --> 00:06:42,169
executable you don't save out code and

146
00:06:40,490 --> 00:06:44,660
then compile that's where you get in

147
00:06:42,169 --> 00:06:47,270
trouble you just edit that one bit deep

148
00:06:44,660 --> 00:06:49,669
<font color="#E5E5E5">inside and you're done you changed a 0</font>

149
00:06:47,270 --> 00:06:53,240
to a 1 in that key point and you've

150
00:06:49,669 --> 00:06:54,799
subvert it a check and it is that easy<font color="#E5E5E5"> I</font>

151
00:06:53,240 --> 00:06:56,240
try and<font color="#E5E5E5"> take care</font><font color="#CCCCCC"> of all of the</font><font color="#E5E5E5"> security</font>

152
00:06:54,800 --> 00:06:58,580
features you're going to fall up against

153
00:06:56,240 --> 00:07:00,020
and so you could have someone's

154
00:06:58,580 --> 00:07:03,320
<font color="#E5E5E5">workstation and you find this erroneous</font>

155
00:07:00,020 --> 00:07:05,840
piece of software called tweak me exe

156
00:07:03,320 --> 00:07:07,880
and now you can say well<font color="#E5E5E5"> this is what it</font>

157
00:07:05,840 --> 00:07:09,380
does this is what this<font color="#E5E5E5"> is why someone</font>

158
00:07:07,880 --> 00:07:11,360
<font color="#E5E5E5">would have put it there this is what the</font>

159
00:07:09,380 --> 00:07:13,400
ramifications are and you can write a

160
00:07:11,360 --> 00:07:15,590
report you<font color="#CCCCCC"> can take that black box</font>

161
00:07:13,400 --> 00:07:17,120
assessment and turn it into a crystal

162
00:07:15,590 --> 00:07:20,060
box assessment just with a<font color="#E5E5E5"> drag-and-drop</font>

163
00:07:17,120 --> 00:07:23,930
and that's what I'm trying<font color="#E5E5E5"> to bring you</font>

164
00:07:20,060 --> 00:07:26,360
that these previously hard things<font color="#E5E5E5"> to do</font>

165
00:07:23,930 --> 00:07:29,030
or expensive tools to gain access to I'm

166
00:07:26,360 --> 00:07:31,580
trying<font color="#E5E5E5"> to bring this to market for free</font>

167
00:07:29,030 --> 00:07:34,099
cheap and easy lowering the bar from<font color="#E5E5E5"> a</font>

168
00:07:31,580 --> 00:07:35,599
skilled programmer to someone that knows

169
00:07:34,099 --> 00:07:41,840
how to do scripting and use a command

170
00:07:35,599 --> 00:07:44,060
prompt and that's where this is a more

171
00:07:41,840 --> 00:07:47,210
vicious type of malware<font color="#E5E5E5"> I want to</font><font color="#CCCCCC"> show</font>

172
00:07:44,060 --> 00:07:50,419
you what I<font color="#E5E5E5"> kind of do when I get a</font>

173
00:07:47,210 --> 00:07:54,280
contract<font color="#E5E5E5"> to do an analysis of a piece of</font>

174
00:07:50,419 --> 00:07:58,159
malware what I actually start out as so

175
00:07:54,280 --> 00:08:02,090
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the malware unprotected oh so</font>

176
00:07:58,160 --> 00:08:03,950
this is the malware unprotected I've

177
00:08:02,090 --> 00:08:05,539
went through and executed the office

178
00:08:03,950 --> 00:08:09,110
keishon and<font color="#CCCCCC"> gray wolf does the office</font>

179
00:08:05,539 --> 00:08:11,750
keishon and all that and when you<font color="#E5E5E5"> open</font>

180
00:08:09,110 --> 00:08:15,530
it up it's gone through<font color="#E5E5E5"> and removed the</font>

181
00:08:11,750 --> 00:08:17,599
proper<font color="#CCCCCC"> naming but it still</font><font color="#E5E5E5"> has the</font><font color="#CCCCCC"> core</font>

182
00:08:15,530 --> 00:08:20,059
<font color="#E5E5E5">structure it still has a core execution</font>

183
00:08:17,599 --> 00:08:23,060
the core commands and it's like reading

184
00:08:20,060 --> 00:08:25,370
through an interns code it's not it's

185
00:08:23,060 --> 00:08:29,129
not<font color="#E5E5E5"> incredibly hard it's just painful</font>

186
00:08:25,370 --> 00:08:32,519
and this is office keishon and

187
00:08:29,129 --> 00:08:35,610
this this<font color="#E5E5E5"> is what good defensive</font>

188
00:08:32,519 --> 00:08:38,009
software in a weird way malware is some

189
00:08:35,610 --> 00:08:40,409
of the best installing agents I have

190
00:08:38,009 --> 00:08:42,180
ever seen from anyone it will take care

191
00:08:40,409 --> 00:08:45,120
of dependencies it will take care of

192
00:08:42,179 --> 00:08:46,979
collision<font color="#CCCCCC"> dll's it handles all of this</font>

193
00:08:45,120 --> 00:08:50,339
stuff without userlist interaction or

194
00:08:46,980 --> 00:08:52,259
calling IT it installs itself and the

195
00:08:50,339 --> 00:08:54,149
same way that it does sanity checks to

196
00:08:52,259 --> 00:08:56,759
see if someone<font color="#E5E5E5"> has compromised it it</font>

197
00:08:54,149 --> 00:08:59,279
will come in and get the current

198
00:08:56,759 --> 00:09:04,110
executing assembly it'll<font color="#E5E5E5"> get the public</font>

199
00:08:59,279 --> 00:09:07,139
<font color="#E5E5E5">key let's this up this is this is</font>

200
00:09:04,110 --> 00:09:09,990
getting the public key of the execution

201
00:09:07,139 --> 00:09:13,290
to see<font color="#CCCCCC"> Who am I am I who I think I am</font>

202
00:09:09,990 --> 00:09:15,209
and and we should be doing this<font color="#CCCCCC"> for our</font>

203
00:09:13,290 --> 00:09:16,920
normal software but typically this is

204
00:09:15,209 --> 00:09:18,689
<font color="#E5E5E5">only seen on malware that wants to make</font>

205
00:09:16,920 --> 00:09:20,910
<font color="#CCCCCC">sure it's</font><font color="#E5E5E5"> not being compromised it's not</font>

206
00:09:18,689 --> 00:09:27,120
<font color="#E5E5E5">being sandboxed it is running in the</font>

207
00:09:20,910 --> 00:09:29,759
proper context and this is where reverse

208
00:09:27,120 --> 00:09:33,149
engineering kind of meets rubber and

209
00:09:29,759 --> 00:09:35,420
<font color="#E5E5E5">Road where I dig into this and I say</font>

210
00:09:33,149 --> 00:09:37,649
okay what is it well there's a

211
00:09:35,420 --> 00:09:41,759
initialization vector and a key in this

212
00:09:37,649 --> 00:09:45,000
one and why what is it<font color="#CCCCCC"> doing and it's</font>

213
00:09:41,759 --> 00:09:47,040
creating<font color="#E5E5E5"> a decrypter and I just kind of</font>

214
00:09:45,000 --> 00:09:48,899
keep reading through and seeing what is

215
00:09:47,040 --> 00:09:51,029
this is a constructor what are they

216
00:09:48,899 --> 00:09:52,680
looking for they're looking for what

217
00:09:51,029 --> 00:09:54,509
assemblies are there am i under this

218
00:09:52,680 --> 00:09:56,130
assembly am i under this assembly if I'm

219
00:09:54,509 --> 00:09:57,720
this one then<font color="#CCCCCC"> I'll use</font><font color="#E5E5E5"> this function if</font>

220
00:09:56,130 --> 00:10:00,300
on<font color="#CCCCCC"> that one I'll use that</font><font color="#E5E5E5"> function and</font>

221
00:09:57,720 --> 00:10:03,000
this is this is strong redundant code

222
00:10:00,300 --> 00:10:05,519
like a good coder in a good product

223
00:10:03,000 --> 00:10:08,009
would do<font color="#E5E5E5"> this but usually doesn't but</font>

224
00:10:05,519 --> 00:10:12,000
malware authors this is typical this is

225
00:10:08,009 --> 00:10:14,699
this is what I see normally and aside

226
00:10:12,000 --> 00:10:16,170
from what<font color="#E5E5E5"> this really does this this is</font>

227
00:10:14,699 --> 00:10:17,670
kind of<font color="#E5E5E5"> the day to day you get a piece</font>

228
00:10:16,170 --> 00:10:19,829
of malware and you start understanding

229
00:10:17,670 --> 00:10:22,620
who made it why<font color="#CCCCCC"> they made it what the</font>

230
00:10:19,829 --> 00:10:23,910
context of it was and<font color="#CCCCCC"> you get you</font><font color="#E5E5E5"> get a</font>

231
00:10:22,620 --> 00:10:26,399
sense<font color="#E5E5E5"> of who</font><font color="#CCCCCC"> they are</font><font color="#E5E5E5"> and what they</font>

232
00:10:23,910 --> 00:10:29,490
cared about and and it's actually<font color="#E5E5E5"> quite</font>

233
00:10:26,399 --> 00:10:31,649
a quite a fun process and whether this

234
00:10:29,490 --> 00:10:33,540
is a<font color="#E5E5E5"> Microsoft application or a piece of</font>

235
00:10:31,649 --> 00:10:35,420
malware you found on the street<font color="#E5E5E5"> or in</font>

236
00:10:33,540 --> 00:10:37,709
your enterprise floating around and

237
00:10:35,420 --> 00:10:39,779
that's<font color="#E5E5E5"> where we come to attacking where</font>

238
00:10:37,709 --> 00:10:42,180
we're looking at getting into that

239
00:10:39,779 --> 00:10:42,360
application we want to connect and open

240
00:10:42,180 --> 00:10:44,359
it

241
00:10:42,360 --> 00:10:46,860
code base we want to decompile it and

242
00:10:44,360 --> 00:10:49,950
understand what the technology<font color="#E5E5E5"> was are</font>

243
00:10:46,860 --> 00:10:52,829
they using AES are they using RSA or

244
00:10:49,950 --> 00:10:55,890
they using<font color="#E5E5E5"> gpg what are they</font><font color="#CCCCCC"> using we</font>

245
00:10:52,829 --> 00:10:57,719
want to infect it we want to infect it

246
00:10:55,890 --> 00:10:59,430
in the way of we want to<font color="#E5E5E5"> change it we</font>

247
00:10:57,720 --> 00:11:01,860
<font color="#E5E5E5">want to make that modification that we</font>

248
00:10:59,430 --> 00:11:04,050
care about<font color="#E5E5E5"> right and take advantage of</font>

249
00:11:01,860 --> 00:11:06,450
it take advantage of<font color="#CCCCCC"> that one point do</font>

250
00:11:04,050 --> 00:11:08,279
we want<font color="#E5E5E5"> to get past a validation check</font>

251
00:11:06,450 --> 00:11:10,260
do we want to<font color="#E5E5E5"> upgrade the security</font>

252
00:11:08,279 --> 00:11:12,510
that's failing inside of our enterprise

253
00:11:10,260 --> 00:11:14,939
and making us not<font color="#E5E5E5"> PCI compliant whatever</font>

254
00:11:12,510 --> 00:11:17,250
we care about we can take advantage<font color="#E5E5E5"> and</font>

255
00:11:14,940 --> 00:11:20,100
implement that change and we can remote

256
00:11:17,250 --> 00:11:22,860
it whatever whatever our goal is we can

257
00:11:20,100 --> 00:11:24,029
accomplish that<font color="#E5E5E5"> with these tools and so</font>

258
00:11:22,860 --> 00:11:26,579
let's look at that let's<font color="#E5E5E5"> look at</font>

259
00:11:24,029 --> 00:11:28,680
Microsoft media center real quick this

260
00:11:26,579 --> 00:11:30,329
is a ubiquitous application court

261
00:11:28,680 --> 00:11:33,630
windows<font color="#E5E5E5"> it's protected with all their</font>

262
00:11:30,329 --> 00:11:37,019
standard things and this is their pin

263
00:11:33,630 --> 00:11:40,910
check there's a parental lock out to

264
00:11:37,019 --> 00:11:43,649
lock it down and this is it this is a

265
00:11:40,910 --> 00:11:45,600
unfortunately a fairly<font color="#CCCCCC"> typical pin check</font>

266
00:11:43,649 --> 00:11:50,000
where you come in you pass in a string

267
00:11:45,600 --> 00:11:52,470
and that that string is check for null

268
00:11:50,000 --> 00:11:54,959
it's checked for length is greater than

269
00:11:52,470 --> 00:11:57,269
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> and then for no apparent reason</font>

270
00:11:54,959 --> 00:11:59,130
there's an if there's an if branch

271
00:11:57,269 --> 00:12:01,890
depending on what<font color="#CCCCCC"> the zeroth character</font>

272
00:11:59,130 --> 00:12:03,779
in your<font color="#CCCCCC"> password is which if you're a</font>

273
00:12:01,890 --> 00:12:05,459
pen tester you'll never understand this

274
00:12:03,779 --> 00:12:08,189
but if you're in code it's like oh this

275
00:12:05,459 --> 00:12:10,500
is does it begin with<font color="#CCCCCC"> a colon and if it</font>

276
00:12:08,190 --> 00:12:12,660
begins with<font color="#CCCCCC"> a colon or not it comes to a</font>

277
00:12:10,500 --> 00:12:15,779
different conclusion on how it should

278
00:12:12,660 --> 00:12:17,519
validate your<font color="#CCCCCC"> PIN and that that's an</font>

279
00:12:15,779 --> 00:12:19,529
interesting work around where there's

280
00:12:17,519 --> 00:12:22,260
there's an entirely different logic flow

281
00:12:19,529 --> 00:12:24,779
depending on what your stored password

282
00:12:22,260 --> 00:12:28,709
is and and it can be<font color="#E5E5E5"> nice for</font>

283
00:12:24,779 --> 00:12:30,570
understanding<font color="#CCCCCC"> the security</font><font color="#E5E5E5"> so I just</font>

284
00:12:28,709 --> 00:12:32,550
kind of need<font color="#E5E5E5"> to give you a quick</font>

285
00:12:30,570 --> 00:12:35,399
knowledge dump for things that I may use

286
00:12:32,550 --> 00:12:38,729
later but the<font color="#E5E5E5"> gac the global assembly</font>

287
00:12:35,399 --> 00:12:43,709
cash all dotnet things are<font color="#E5E5E5"> cheated into</font>

288
00:12:38,730 --> 00:12:45,630
<font color="#E5E5E5">the gac and the</font><font color="#CCCCCC"> gac looks like this but</font>

289
00:12:43,709 --> 00:12:48,089
there's a desktop I and I inside<font color="#E5E5E5"> that</font>

290
00:12:45,630 --> 00:12:49,560
file folder that denies you access you

291
00:12:48,089 --> 00:12:53,750
delete<font color="#CCCCCC"> that desktop I&I and it looks</font>

292
00:12:49,560 --> 00:12:56,010
<font color="#CCCCCC">like this and this is</font><font color="#E5E5E5"> your gak this is a</font>

293
00:12:53,750 --> 00:12:59,040
DAC pure<font color="#CCCCCC"> gac 32</font>

294
00:12:56,010 --> 00:13:00,950
264<font color="#E5E5E5"> and</font><font color="#CCCCCC"> MSIL MSIL is the</font><font color="#E5E5E5"> BIC whatin</font>

295
00:12:59,040 --> 00:13:03,300
which I can go to any platform and

296
00:13:00,950 --> 00:13:04,830
depending on where what you<font color="#CCCCCC"> are compiled</font>

297
00:13:03,300 --> 00:13:07,079
under you'll go into<font color="#CCCCCC"> different gaps for</font>

298
00:13:04,830 --> 00:13:10,230
different reasons there's native images

299
00:13:07,080 --> 00:13:12,510
where a dll is pre cached and pre

300
00:13:10,230 --> 00:13:14,790
computed and processed into the native

301
00:13:12,510 --> 00:13:17,040
image directories there's multiple<font color="#CCCCCC"> gax</font>

302
00:13:14,790 --> 00:13:19,230
at a high level that's in<font color="#CCCCCC"> windows</font>

303
00:13:17,040 --> 00:13:21,329
assembly windows sxs windows microsoft

304
00:13:19,230 --> 00:13:23,250
net and you go into<font color="#CCCCCC"> these different gaps</font>

305
00:13:21,330 --> 00:13:25,830
for different reasons anyway it's back

306
00:13:23,250 --> 00:13:28,050
to<font color="#CCCCCC"> the temple</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to be</font>

307
00:13:25,830 --> 00:13:33,240
attacking<font color="#E5E5E5"> these these different core</font>

308
00:13:28,050 --> 00:13:35,959
things and we want to we want to<font color="#E5E5E5"> kind of</font>

309
00:13:33,240 --> 00:13:38,130
follow along and understand what is the

310
00:13:35,960 --> 00:13:41,580
what<font color="#CCCCCC"> are we looking at when we talk</font>

311
00:13:38,130 --> 00:13:45,330
about attacking it so here<font color="#CCCCCC"> is the same</font>

312
00:13:41,580 --> 00:13:49,050
basic attack that we did before<font color="#E5E5E5"> I can</font>

313
00:13:45,330 --> 00:13:51,180
open<font color="#CCCCCC"> this up and this attack I did a</font>

314
00:13:49,050 --> 00:13:54,479
password protection down here and let's

315
00:13:51,180 --> 00:13:57,540
dig into it real quick just to just to

316
00:13:54,480 --> 00:13:59,760
get kind of a sense of how you could

317
00:13:57,540 --> 00:14:02,250
take this payload that I have up there

318
00:13:59,760 --> 00:14:05,730
as a general attack<font color="#E5E5E5"> against media center</font>

319
00:14:02,250 --> 00:14:10,640
and decompile it understand it and do it

320
00:14:05,730 --> 00:14:15,810
yourself that<font color="#CCCCCC"> we have a basic form and</font>

321
00:14:10,640 --> 00:14:17,790
it's properly named you can this<font color="#CCCCCC"> is</font>

322
00:14:15,810 --> 00:14:21,569
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to be a little weird since I'm on</font>

323
00:14:17,790 --> 00:14:27,000
your side but so we're<font color="#E5E5E5"> gonna look at an</font>

324
00:14:21,570 --> 00:14:31,200
unpacker<font color="#CCCCCC"> okay so I'm doing a decryption</font>

325
00:14:27,000 --> 00:14:32,760
and I'm<font color="#E5E5E5"> taking in buffers and and where</font>

326
00:14:31,200 --> 00:14:34,740
you can<font color="#E5E5E5"> follow where the strings come</font>

327
00:14:32,760 --> 00:14:37,200
from and where am<font color="#E5E5E5"> I getting the key and</font>

328
00:14:34,740 --> 00:14:41,300
the key has<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> stored in there and I</font>

329
00:14:37,200 --> 00:14:44,250
have<font color="#E5E5E5"> encryption functions and this is</font>

330
00:14:41,300 --> 00:14:45,990
normal in the program you download the

331
00:14:44,250 --> 00:14:47,760
encryption function never gets used but

332
00:14:45,990 --> 00:14:50,190
when I built it I use the encryption to

333
00:14:47,760 --> 00:14:52,740
pack into itself so it has its own

334
00:14:50,190 --> 00:14:54,420
packing logic kind of vestigial e in it

335
00:14:52,740 --> 00:14:56,370
and you'll find things that are

336
00:14:54,420 --> 00:14:59,849
vestigial from the production or the

337
00:14:56,370 --> 00:15:01,950
testing harness inside of it<font color="#E5E5E5"> and you can</font>

338
00:14:59,850 --> 00:15:06,060
kind of understand my paradigm like

339
00:15:01,950 --> 00:15:09,690
where does let's see you can see<font color="#E5E5E5"> I write</font>

340
00:15:06,060 --> 00:15:12,000
a file out to disk and what files

341
00:15:09,690 --> 00:15:14,040
what am<font color="#E5E5E5"> i testing for like what did I</font>

342
00:15:12,000 --> 00:15:16,140
have to<font color="#E5E5E5"> account for in your system to</font>

343
00:15:14,040 --> 00:15:17,849
get this payload in there and so you can

344
00:15:16,140 --> 00:15:20,540
<font color="#E5E5E5">easily read through this and understand</font>

345
00:15:17,850 --> 00:15:23,100
how I executed this whole payload and

346
00:15:20,540 --> 00:15:28,219
this payload basically gives us the

347
00:15:23,100 --> 00:15:32,400
ability to<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we'll inject into it and</font>

348
00:15:28,220 --> 00:15:36,270
give us the ability to bypass the core

349
00:15:32,400 --> 00:15:46,970
passwords inside of it run this as an

350
00:15:36,270 --> 00:15:46,970
admin<font color="#CCCCCC"> ER and oh I have it on this screen</font>

351
00:15:47,660 --> 00:15:57,839
<font color="#CCCCCC">ok so we have media center booting up I</font>

352
00:15:55,820 --> 00:16:00,900
will have<font color="#E5E5E5"> to keep switching back and</font>

353
00:15:57,840 --> 00:16:07,020
forth so it'll be a little jumpy and I

354
00:16:00,900 --> 00:16:09,380
apologize for that so media center is a

355
00:16:07,020 --> 00:16:12,030
core protected<font color="#E5E5E5"> windows application and</font>

356
00:16:09,380 --> 00:16:13,650
you can put a rootkit in here you could

357
00:16:12,030 --> 00:16:16,560
do whatever you want we're attacking

358
00:16:13,650 --> 00:16:19,860
this parental control and whether or<font color="#E5E5E5"> not</font>

359
00:16:16,560 --> 00:16:23,989
we know the password we've hacked in

360
00:16:19,860 --> 00:16:26,340
here and now<font color="#CCCCCC"> any password will work</font><font color="#E5E5E5"> and</font>

361
00:16:23,990 --> 00:16:28,620
that was a quick rootkit just like the

362
00:16:26,340 --> 00:16:30,330
just like the PowerShell it magically

363
00:16:28,620 --> 00:16:32,220
happened right but how do we<font color="#E5E5E5"> actually</font>

364
00:16:30,330 --> 00:16:34,230
execute this that's what<font color="#E5E5E5"> I want to show</font>

365
00:16:32,220 --> 00:16:35,840
you guys<font color="#E5E5E5"> I want to take you</font><font color="#CCCCCC"> from the</font>

366
00:16:34,230 --> 00:16:38,520
ground up of the beginning

367
00:16:35,840 --> 00:16:40,530
implementation all the way through so<font color="#E5E5E5"> I</font>

368
00:16:38,520 --> 00:16:42,150
hope you're actually interested in how

369
00:16:40,530 --> 00:16:43,939
<font color="#E5E5E5">to carry out these exploits because</font>

370
00:16:42,150 --> 00:16:47,819
that's what I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be showing you</font>

371
00:16:43,940 --> 00:16:57,060
so what<font color="#E5E5E5"> does</font><font color="#CCCCCC"> it look like that when we</font>

372
00:16:47,820 --> 00:17:01,740
go after when we go<font color="#CCCCCC"> after it else ah ok</font>

373
00:16:57,060 --> 00:17:03,569
there I'm so we<font color="#CCCCCC"> have a logic in the</font>

374
00:17:01,740 --> 00:17:06,089
check pin that we go in and we put a

375
00:17:03,570 --> 00:17:08,220
return true and and that's it now now

376
00:17:06,089 --> 00:17:12,540
we're autók ating all passwords that's

377
00:17:08,220 --> 00:17:14,220
nice and easy<font color="#E5E5E5"> to understand but what</font>

378
00:17:12,540 --> 00:17:16,290
does<font color="#E5E5E5"> it take to actually do this to</font>

379
00:17:14,220 --> 00:17:19,020
actually run from the beginning to the

380
00:17:16,290 --> 00:17:20,790
end of this attack that when we talk

381
00:17:19,020 --> 00:17:22,859
about here's here's a payload that

382
00:17:20,790 --> 00:17:23,930
magically attacks them what<font color="#E5E5E5"> are we</font>

383
00:17:22,859 --> 00:17:29,669
talking about

384
00:17:23,930 --> 00:17:32,700
so let's let's take that first bin this

385
00:17:29,670 --> 00:17:38,810
is the court execution of the attack

386
00:17:32,700 --> 00:17:42,120
<font color="#CCCCCC">that we come in here we come to Windows</font>

387
00:17:38,810 --> 00:17:46,889
assembly and this is what<font color="#E5E5E5"> it looks like</font>

388
00:17:42,120 --> 00:17:49,229
it's that protected one this may

389
00:17:46,890 --> 00:17:52,500
actually have a glitch since it caches

390
00:17:49,230 --> 00:17:54,380
it but I have a quick unlocker but it

391
00:17:52,500 --> 00:18:00,320
gets cached we'll we'll<font color="#CCCCCC"> see if this</font>

392
00:17:54,380 --> 00:18:07,830
works<font color="#E5E5E5"> ok we can</font><font color="#CCCCCC"> go in at a different way</font>

393
00:18:00,320 --> 00:18:19,520
we'll<font color="#E5E5E5"> go in through command and we'll go</font>

394
00:18:07,830 --> 00:18:27,330
to<font color="#CCCCCC"> windows assembly or go to the jack</font>

395
00:18:19,520 --> 00:18:29,310
msi Oh we'll go to e shell and this is

396
00:18:27,330 --> 00:18:30,840
what<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> inside of there and this is</font>

397
00:18:29,310 --> 00:18:33,919
inside<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> GAC this is where we're</font>

398
00:18:30,840 --> 00:18:37,080
<font color="#E5E5E5">going to so we'll go inside of here and</font>

399
00:18:33,920 --> 00:18:44,730
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> our target we have an eh shell</font>

400
00:18:37,080 --> 00:18:50,939
and so let's do a copy star to<font color="#CCCCCC"> see</font><font color="#E5E5E5"> colon</font>

401
00:18:44,730 --> 00:18:54,000
slash one<font color="#CCCCCC"> okay so now we have our target</font>

402
00:18:50,940 --> 00:18:56,310
<font color="#E5E5E5">out here so now what does it take to</font>

403
00:18:54,000 --> 00:19:00,660
actually crawl inside of this and break

404
00:18:56,310 --> 00:19:04,020
it will pop open<font color="#CCCCCC"> gray wolf and crawl</font>

405
00:19:00,660 --> 00:19:06,210
inside of e h show and this<font color="#CCCCCC"> is actually</font>

406
00:19:04,020 --> 00:19:08,610
<font color="#E5E5E5">a full executable that they just</font>

407
00:19:06,210 --> 00:19:10,190
redeemed a dll and started using it

408
00:19:08,610 --> 00:19:13,760
that's not really important but

409
00:19:10,190 --> 00:19:20,870
interesting come into media center and

410
00:19:13,760 --> 00:19:20,870
tunnel down two options<font color="#E5E5E5"> and down to</font>

411
00:19:22,510 --> 00:19:32,210
control pen and check for pin and so I

412
00:19:29,900 --> 00:19:37,760
<font color="#E5E5E5">told you about</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> logic that this is</font>

413
00:19:32,210 --> 00:19:41,660
the basic logic this is the IL that's

414
00:19:37,760 --> 00:19:44,510
power in the basic logic and this is the

415
00:19:41,660 --> 00:19:47,780
code so i actually have the cracked

416
00:19:44,510 --> 00:19:52,660
version in here right<font color="#E5E5E5"> now so will</font><font color="#CCCCCC"> i</font>

417
00:19:47,780 --> 00:19:58,670
could set<font color="#CCCCCC"> i can set it back by hand so</font>

418
00:19:52,660 --> 00:20:03,110
remove these lines and let's see what

419
00:19:58,670 --> 00:20:08,020
else is there yeah this one too that's

420
00:20:03,110 --> 00:20:15,229
me and we have a return true in there

421
00:20:08,020 --> 00:20:20,680
this one<font color="#CCCCCC"> okay how about if</font><font color="#E5E5E5"> I have the</font>

422
00:20:15,230 --> 00:20:20,680
payload set it back real quick nope

423
00:20:25,510 --> 00:20:32,059
done

424
00:20:27,059 --> 00:20:40,860
done media center open up the payload

425
00:20:32,059 --> 00:20:43,110
reset to the original and<font color="#CCCCCC"> okay I have a</font>

426
00:20:40,860 --> 00:20:46,168
backup copy on here just in case I

427
00:20:43,110 --> 00:20:49,649
messed up the dll<font color="#CCCCCC"> okay so i'm going</font><font color="#E5E5E5"> to</font>

428
00:20:46,169 --> 00:20:52,350
<font color="#E5E5E5">use the reverted copy that i made by</font>

429
00:20:49,649 --> 00:20:57,080
hand okay so here's the<font color="#CCCCCC"> the pure one</font>

430
00:20:52,350 --> 00:21:05,629
that was before i injected it so options

431
00:20:57,080 --> 00:21:13,649
and parental controls<font color="#E5E5E5"> pen check pin and</font>

432
00:21:05,629 --> 00:21:19,070
turn off show<font color="#E5E5E5"> aisle</font><font color="#CCCCCC"> okay so this is the</font>

433
00:21:13,649 --> 00:21:21,899
the basic check that<font color="#E5E5E5"> I showed you I</font>

434
00:21:19,070 --> 00:21:24,539
actually have a compromised one in here

435
00:21:21,899 --> 00:21:28,678
<font color="#E5E5E5">okay anyways this is what I typically do</font>

436
00:21:24,539 --> 00:21:30,450
we have this pin and I want it out I

437
00:21:28,679 --> 00:21:35,070
want<font color="#E5E5E5"> to compromise this with a new</font>

438
00:21:30,450 --> 00:21:36,749
<font color="#CCCCCC">compromise ation here is the pin that we</font>

439
00:21:35,070 --> 00:21:39,689
actually rip out of the system to

440
00:21:36,749 --> 00:21:43,320
validate whether we're there I can come

441
00:21:39,690 --> 00:21:46,019
in<font color="#CCCCCC"> here and start adding new lines so</font><font color="#E5E5E5"> I</font>

442
00:21:43,320 --> 00:21:49,619
clear a room for myself to add new code

443
00:21:46,019 --> 00:21:53,220
and I call a duplicate and down here I

444
00:21:49,619 --> 00:21:54,990
say this<font color="#CCCCCC"> is what this IL does so kind of</font>

445
00:21:53,220 --> 00:21:56,970
like assembly code I'll duplicate the

446
00:21:54,990 --> 00:21:59,429
top layer on the stack so I have the pin

447
00:21:56,970 --> 00:22:06,139
i make a copy of it<font color="#E5E5E5"> i'll put a call out</font>

448
00:21:59,429 --> 00:22:10,289
and i'll put<font color="#E5E5E5"> a target and this target is</font>

449
00:22:06,139 --> 00:22:12,719
to a locally reference so how do<font color="#E5E5E5"> we make</font>

450
00:22:10,289 --> 00:22:16,559
a target<font color="#E5E5E5"> in il this is how i showed you</font>

451
00:22:12,720 --> 00:22:19,139
or this is how my program targets DLLs

452
00:22:16,559 --> 00:22:21,720
this is the program<font color="#E5E5E5"> itself and these</font><font color="#CCCCCC"> are</font>

453
00:22:19,139 --> 00:22:26,008
all<font color="#E5E5E5"> the associated imported DLLs that</font>

454
00:22:21,720 --> 00:22:28,230
the program has to call upon and<font color="#CCCCCC"> i like</font>

455
00:22:26,009 --> 00:22:30,659
to import new DLLs inside of<font color="#E5E5E5"> other</font>

456
00:22:28,230 --> 00:22:34,440
people's application so this one happens

457
00:22:30,659 --> 00:22:39,059
to be having a weird you I and I want<font color="#E5E5E5"> to</font>

458
00:22:34,440 --> 00:22:39,779
use a standard<font color="#CCCCCC"> windows call so i want to</font>

459
00:22:39,059 --> 00:22:46,320
you

460
00:22:39,779 --> 00:22:49,440
<font color="#CCCCCC">News system</font><font color="#E5E5E5"> windows assembly ok so the</font>

461
00:22:46,320 --> 00:22:50,968
cache cleared in<font color="#CCCCCC"> the gac it's a it's a</font>

462
00:22:49,440 --> 00:22:52,049
weird<font color="#CCCCCC"> thing but this is the</font><font color="#E5E5E5"> GAC again</font>

463
00:22:50,969 --> 00:22:53,249
that I looked at that<font color="#CCCCCC"> you couldn't see</font>

464
00:22:52,049 --> 00:22:56,999
that<font color="#E5E5E5"> I had to go through command prompt</font>

465
00:22:53,249 --> 00:23:04,320
anyways this is<font color="#CCCCCC"> Jack msil right jack</font>

466
00:22:56,999 --> 00:23:06,479
<font color="#CCCCCC">MSIL has system.windows.forms and so</font>

467
00:23:04,320 --> 00:23:08,789
this<font color="#CCCCCC"> is the system.windows.forms dll</font>

468
00:23:06,479 --> 00:23:11,369
inside of the<font color="#E5E5E5"> GAC instead of referencing</font>

469
00:23:08,789 --> 00:23:13,739
it in visual studios for the system this

470
00:23:11,369 --> 00:23:16,830
<font color="#CCCCCC">is it</font><font color="#E5E5E5"> right here we can drag and drop</font>

471
00:23:13,739 --> 00:23:19,619
this onto here and now we have it down

472
00:23:16,830 --> 00:23:21,960
<font color="#CCCCCC">here and so I've imported an external</font>

473
00:23:19,619 --> 00:23:26,959
dll into my target that i can now

474
00:23:21,960 --> 00:23:30,509
reference we have system.windows.forms

475
00:23:26,960 --> 00:23:34,950
messagebox.show and now i can show out

476
00:23:30,509 --> 00:23:40,049
the password and this returns a<font color="#CCCCCC"> dialog</font>

477
00:23:34,950 --> 00:23:43,710
result<font color="#E5E5E5"> onto the stack so i put a pop on</font>

478
00:23:40,049 --> 00:23:46,649
there and so that's at duplicating a

479
00:23:43,710 --> 00:23:53,519
variable showing it out and let's save

480
00:23:46,649 --> 00:23:59,279
that in here<font color="#E5E5E5"> we'll take this back up to</font>

481
00:23:53,519 --> 00:24:04,830
eh shell which is our target will come

482
00:23:59,279 --> 00:24:10,229
here to one eh she'll edit that we just

483
00:24:04,830 --> 00:24:14,609
did drag and drop this into our target

484
00:24:10,229 --> 00:24:17,789
and so this<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> actual dll inside of</font>

485
00:24:14,609 --> 00:24:21,539
<font color="#CCCCCC">the GAC that it references so i'll</font>

486
00:24:17,789 --> 00:24:23,820
replace<font color="#CCCCCC"> it with this edit and i didn't</font>

487
00:24:21,539 --> 00:24:26,629
really show you but part of this is also

488
00:24:23,820 --> 00:24:29,099
<font color="#E5E5E5">taking out the native image that is</font>

489
00:24:26,629 --> 00:24:37,939
precompiled and<font color="#E5E5E5"> i go in and just delete</font>

490
00:24:29,099 --> 00:24:37,939
it and then it stops cashing it but um

491
00:24:38,869 --> 00:24:51,539
<font color="#CCCCCC">okay that aired out let's i had a freak</font>

492
00:24:47,970 --> 00:24:55,109
and one that Lee will kick over I'm

493
00:24:51,539 --> 00:24:59,340
trying to<font color="#E5E5E5"> tint the demo gods with a live</font>

494
00:24:55,109 --> 00:25:03,619
coding and we'll see how it goes so we

495
00:24:59,340 --> 00:25:11,279
have our basic implementation general

496
00:25:03,619 --> 00:25:18,749
parental controls and<font color="#CCCCCC"> okay I'll execute</font>

497
00:25:11,279 --> 00:25:22,820
the same crack real quick on this dll so

498
00:25:18,749 --> 00:25:36,720
open it up go to<font color="#E5E5E5"> Microsoft media center</font>

499
00:25:22,820 --> 00:25:45,029
options pin check Oh option Microsoft

500
00:25:36,720 --> 00:25:51,440
media center I don't see options in

501
00:25:45,029 --> 00:25:58,979
there Oh media center<font color="#E5E5E5"> okay options p</font>

502
00:25:51,440 --> 00:26:04,549
rental and check and check for pen okay

503
00:25:58,979 --> 00:26:04,549
<font color="#E5E5E5">we'll add those three lines in duplicate</font>

504
00:26:06,049 --> 00:26:16,489
call target operation drag<font color="#CCCCCC"> and drop</font>

505
00:26:17,950 --> 00:26:29,509
target system.windows.forms<font color="#E5E5E5"> I hope this</font>

506
00:26:27,829 --> 00:26:34,908
works for<font color="#E5E5E5"> all the time that I'm sucking</font>

507
00:26:29,509 --> 00:26:37,849
up from you guys but so on the

508
00:26:34,909 --> 00:26:40,129
day-to-day basis I normally work inside

509
00:26:37,849 --> 00:26:43,099
of applications<font color="#E5E5E5"> that have this included</font>

510
00:26:40,129 --> 00:26:44,718
and so it's it's more testing payloads

511
00:26:43,099 --> 00:26:47,928
or something like that that I'll drop in

512
00:26:44,719 --> 00:26:52,129
and I just<font color="#CCCCCC"> get a lot of questions online</font>

513
00:26:47,929 --> 00:27:04,419
of how how do i execute this attack that

514
00:26:52,129 --> 00:27:04,418
I saw so now we have this one pre-canned

515
00:27:05,890 --> 00:27:13,659
system.windows.forms eh she'll eat<font color="#CCCCCC"> chow</font>

516
00:27:20,050 --> 00:27:38,700
and hopefully be a center yes<font color="#CCCCCC"> okay so I</font>

517
00:27:32,640 --> 00:27:38,700
<font color="#E5E5E5">come in here and parental control</font>

518
00:27:44,490 --> 00:28:02,050
message box um well okay I should have

519
00:27:55,870 --> 00:28:04,030
shown a message box um<font color="#E5E5E5"> okay oh I'll</font>

520
00:28:02,050 --> 00:28:05,860
pretend like I showed you a message box

521
00:28:04,030 --> 00:28:08,830
and then I went<font color="#CCCCCC"> through</font><font color="#E5E5E5"> and had that</font>

522
00:28:05,860 --> 00:28:11,580
message box copy the<font color="#CCCCCC"> the hashcode out</font>

523
00:28:08,830 --> 00:28:16,179
from the pin and put it in the clipboard

524
00:28:11,580 --> 00:28:18,730
so so what is this what does this get us

525
00:28:16,180 --> 00:28:21,760
that we're able to reach<font color="#E5E5E5"> into the</font>

526
00:28:18,730 --> 00:28:26,940
application<font color="#CCCCCC"> and retrieve this sensitive</font>

527
00:28:21,760 --> 00:28:31,330
data that now we can go from having an

528
00:28:26,940 --> 00:28:39,130
attack that will be able<font color="#E5E5E5"> to reach us in</font>

529
00:28:31,330 --> 00:28:41,409
and gain access to a core okay that will

530
00:28:39,130 --> 00:28:45,100
be able<font color="#E5E5E5"> to reach us in and get</font><font color="#CCCCCC"> us access</font>

531
00:28:41,410 --> 00:28:48,430
to this this core logic that now we're

532
00:28:45,100 --> 00:28:51,129
able to access key vulnerable spots we

533
00:28:48,430 --> 00:28:54,810
want to flip a check we want to be able

534
00:28:51,130 --> 00:28:59,160
to set a value to true and all that that

535
00:28:54,810 --> 00:29:01,780
now when we<font color="#CCCCCC"> have a media center that is</font>

536
00:28:59,160 --> 00:29:05,200
somewhat defended that now we can reach

537
00:29:01,780 --> 00:29:07,210
in and access that core logic that now

538
00:29:05,200 --> 00:29:12,160
we it whether it's a phone home and

539
00:29:07,210 --> 00:29:15,310
validation that now we can access the

540
00:29:12,160 --> 00:29:17,350
the core logic of it and we can cut the

541
00:29:15,310 --> 00:29:19,600
logic we can return true we can access

542
00:29:17,350 --> 00:29:20,889
core values which if<font color="#E5E5E5"> I was able to show</font>

543
00:29:19,600 --> 00:29:23,620
you the pin then I would<font color="#CCCCCC"> have been able</font>

544
00:29:20,890 --> 00:29:25,630
to do<font color="#CCCCCC"> that but we're also able to</font>

545
00:29:23,620 --> 00:29:28,780
<font color="#E5E5E5">execute more advanced attacks that are</font>

546
00:29:25,630 --> 00:29:32,080
fairly simple that we can say we want<font color="#E5E5E5"> to</font>

547
00:29:28,780 --> 00:29:33,340
retrieve the md5 and this is the md5

548
00:29:32,080 --> 00:29:36,790
that it was checking

549
00:29:33,340 --> 00:29:42,100
so now we can take this md5 validation

550
00:29:36,790 --> 00:29:44,530
and we could come down here too I'll

551
00:29:42,100 --> 00:29:52,270
switch you back to code so you guys can

552
00:29:44,530 --> 00:29:55,720
see<font color="#E5E5E5"> it so so now this is the md5</font>

553
00:29:52,270 --> 00:29:59,110
validation it's doing md5 and they've

554
00:29:55,720 --> 00:30:01,540
added a little bit of crap at the

555
00:29:59,110 --> 00:30:03,790
beginning which is good right<font color="#E5E5E5"> and now</font>

556
00:30:01,540 --> 00:30:06,399
you can use this to go and brute force

557
00:30:03,790 --> 00:30:09,180
that pin that I brought<font color="#CCCCCC"> back and so you</font>

558
00:30:06,400 --> 00:30:11,020
can pull out their logic for validation

559
00:30:09,180 --> 00:30:12,850
reverse-engineer it and make a brute

560
00:30:11,020 --> 00:30:16,420
forcer in a matter of seconds because

561
00:30:12,850 --> 00:30:19,389
the code to execute this right here and

562
00:30:16,420 --> 00:30:21,850
get<font color="#E5E5E5"> this out is a couple of lines of</font>

563
00:30:19,390 --> 00:30:23,440
code the validation check is a couple of

564
00:30:21,850 --> 00:30:25,120
lines of code and then to write a for

565
00:30:23,440 --> 00:30:27,220
statement that iterates through you can

566
00:30:25,120 --> 00:30:29,770
obviously<font color="#CCCCCC"> see that it could turn around</font>

567
00:30:27,220 --> 00:30:33,460
in a matter of seconds and so you can

568
00:30:29,770 --> 00:30:36,220
<font color="#E5E5E5">take this payload here that returns it</font>

569
00:30:33,460 --> 00:30:41,700
open it up and see how I got that md5

570
00:30:36,220 --> 00:30:47,320
hash out that now in<font color="#CCCCCC"> four let's see it's</font>

571
00:30:41,700 --> 00:30:52,060
probably md5 here's how I reached in to

572
00:30:47,320 --> 00:30:55,300
get that md5 I used a binding get type

573
00:30:52,060 --> 00:30:58,350
to get the dll this<font color="#E5E5E5"> basically references</font>

574
00:30:55,300 --> 00:31:01,300
into it and I get the parental control I

575
00:30:58,350 --> 00:31:03,909
get their parental control object and I

576
00:31:01,300 --> 00:31:07,000
start doing some reflection to use its

577
00:31:03,910 --> 00:31:09,010
own logic to return the value<font color="#CCCCCC"> to me so I</font>

578
00:31:07,000 --> 00:31:12,190
don't try and brute force it myself I

579
00:31:09,010 --> 00:31:14,920
use its logic to<font color="#E5E5E5"> get the pin value and</font>

580
00:31:12,190 --> 00:31:18,010
and this is how I do it this is that md5

581
00:31:14,920 --> 00:31:19,900
return that's right here and I can

582
00:31:18,010 --> 00:31:22,120
change the password or access it you can

583
00:31:19,900 --> 00:31:24,430
see how I do it and now you can<font color="#CCCCCC"> see how</font>

584
00:31:22,120 --> 00:31:26,639
<font color="#E5E5E5">putting a registered equals false can</font>

585
00:31:24,430 --> 00:31:29,770
quickly become registered equals true or

586
00:31:26,640 --> 00:31:33,010
password validation does<font color="#CCCCCC"> a equal B well</font>

587
00:31:29,770 --> 00:31:35,680
does noun a not equal B and so you can

588
00:31:33,010 --> 00:31:38,050
quickly apply this to is registered and

589
00:31:35,680 --> 00:31:40,780
put return true at<font color="#E5E5E5"> the top is a valid</font>

590
00:31:38,050 --> 00:31:42,220
key and you can go so far is to put a

591
00:31:40,780 --> 00:31:44,500
tiny back door that would be

592
00:31:42,220 --> 00:31:46,990
undetectable to AV where sequel cleaning

593
00:31:44,500 --> 00:31:48,670
is just returned and now you<font color="#E5E5E5"> buy</font>

594
00:31:46,990 --> 00:31:51,490
a sequel cleaning inside of an

595
00:31:48,670 --> 00:31:53,320
<font color="#CCCCCC">application</font><font color="#E5E5E5"> and so now when you you pop</font>

596
00:31:51,490 --> 00:31:55,510
a box and your admin on the<font color="#CCCCCC"> box what do</font>

597
00:31:53,320 --> 00:31:57,790
you do will you put this in there sequel

598
00:31:55,510 --> 00:32:00,550
cleaning on that web server and you've

599
00:31:57,790 --> 00:32:02,139
turned off sequel cleaning and and no

600
00:32:00,550 --> 00:32:04,570
one will necessarily find<font color="#E5E5E5"> it because</font>

601
00:32:02,140 --> 00:32:06,790
<font color="#E5E5E5">it's in a compiled dll and if they did a</font>

602
00:32:04,570 --> 00:32:08,439
whole diff of the system and we're<font color="#CCCCCC"> white</font>

603
00:32:06,790 --> 00:32:10,330
<font color="#CCCCCC">listing that they might see it they</font>

604
00:32:08,440 --> 00:32:11,980
might understand<font color="#E5E5E5"> it but good luck and</font>

605
00:32:10,330 --> 00:32:15,909
you're certainly<font color="#E5E5E5"> passed AV on a high</font>

606
00:32:11,980 --> 00:32:18,190
level and and so<font color="#E5E5E5"> now this this seemingly</font>

607
00:32:15,910 --> 00:32:20,050
hardcore attack you might find this<font color="#E5E5E5"> and</font>

608
00:32:18,190 --> 00:32:21,910
say wow someone had some real skill and

609
00:32:20,050 --> 00:32:23,230
as you saw it takes a couple of clicks

610
00:32:21,910 --> 00:32:25,690
and<font color="#E5E5E5"> it could be a high schooler that</font>

611
00:32:23,230 --> 00:32:27,100
barely understands how<font color="#E5E5E5"> to code and and</font>

612
00:32:25,690 --> 00:32:28,960
<font color="#E5E5E5">that's what I'm</font><font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> bring</font><font color="#CCCCCC"> back is</font>

613
00:32:27,100 --> 00:32:32,320
that<font color="#E5E5E5"> this this stuff that seemed very</font>

614
00:32:28,960 --> 00:32:37,080
complex is now show me<font color="#E5E5E5"> show me the key</font>

615
00:32:32,320 --> 00:32:40,899
out and it's it's highly highly a

616
00:32:37,080 --> 00:32:44,230
<font color="#CCCCCC">lifecycle and actually maintainable from</font>

617
00:32:40,900 --> 00:32:45,730
a from a I guess a high level

618
00:32:44,230 --> 00:32:48,160
perspective that someone can easily

619
00:32:45,730 --> 00:32:51,250
understand how you now pass in your

620
00:32:48,160 --> 00:32:52,960
<font color="#E5E5E5">username to do a validation and you do</font>

621
00:32:51,250 --> 00:32:55,240
some math and arithmetic and this is

622
00:32:52,960 --> 00:32:56,740
ninety percent of what i see that you

623
00:32:55,240 --> 00:32:58,720
take in the code that<font color="#E5E5E5"> came in with the</font>

624
00:32:56,740 --> 00:33:01,780
<font color="#CCCCCC">username and if it fails and they don't</font>

625
00:32:58,720 --> 00:33:04,210
validate and that to do a replay attack

626
00:33:01,780 --> 00:33:06,940
is now simple that<font color="#E5E5E5"> you can now rip out</font>

627
00:33:04,210 --> 00:33:08,620
that value that was<font color="#CCCCCC"> necessary and just</font>

628
00:33:06,940 --> 00:33:10,900
simply play it again and that's by

629
00:33:08,620 --> 00:33:13,030
passing a key check<font color="#E5E5E5"> that's registering</font>

630
00:33:10,900 --> 00:33:16,000
software and for some bad software

631
00:33:13,030 --> 00:33:19,000
that's even registering your validation

632
00:33:16,000 --> 00:33:22,960
to execute certain commands or authority

633
00:33:19,000 --> 00:33:24,850
rights in the enterprise and this is

634
00:33:22,960 --> 00:33:28,980
typically what<font color="#CCCCCC"> i see you'll see a public</font>

635
00:33:24,850 --> 00:33:31,570
<font color="#E5E5E5">and private key protection this is on</font>

636
00:33:28,980 --> 00:33:33,190
the people that<font color="#CCCCCC"> are doing updating for</font>

637
00:33:31,570 --> 00:33:34,570
their software this<font color="#E5E5E5"> is probably eighty</font>

638
00:33:33,190 --> 00:33:36,760
percent of<font color="#E5E5E5"> the people that</font><font color="#CCCCCC"> are doing</font><font color="#E5E5E5"> it</font>

639
00:33:34,570 --> 00:33:38,950
well they do a<font color="#CCCCCC"> public/private key you</font>

640
00:33:36,760 --> 00:33:40,660
change the key you<font color="#CCCCCC"> change where it goes</font>

641
00:33:38,950 --> 00:33:42,460
to where it phones home<font color="#E5E5E5"> to and now you</font>

642
00:33:40,660 --> 00:33:44,290
have software inside of an<font color="#CCCCCC"> enterprise</font>

643
00:33:42,460 --> 00:33:46,420
that<font color="#E5E5E5"> is now keyed to you and coming to</font>

644
00:33:44,290 --> 00:33:50,470
you and at any point you<font color="#E5E5E5"> can push an</font>

645
00:33:46,420 --> 00:33:52,570
update there's a random amount of math

646
00:33:50,470 --> 00:33:54,130
and then you just<font color="#E5E5E5"> have to find a couple</font>

647
00:33:52,570 --> 00:33:56,980
of key variables and that's the secret

648
00:33:54,130 --> 00:33:58,660
there's a server call you simply repoint

649
00:33:56,980 --> 00:34:00,999
it or you hack that server call in some

650
00:33:58,660 --> 00:34:03,159
fundamental way setting a value

651
00:34:00,999 --> 00:34:06,099
you can bypass all sorts of security

652
00:34:03,159 --> 00:34:09,129
simply and complex math or key

653
00:34:06,099 --> 00:34:10,750
validation is other part and one percent

654
00:34:09,129 --> 00:34:13,179
of the time they actually ship the key

655
00:34:10,750 --> 00:34:15,789
validation to you and and why beat them

656
00:34:13,179 --> 00:34:17,440
when you can join them you don't need<font color="#CCCCCC"> to</font>

657
00:34:15,789 --> 00:34:19,000
you can just simply replace it with a

658
00:34:17,440 --> 00:34:20,409
key that you like that's easy you don't

659
00:34:19,000 --> 00:34:22,899
have to spend a<font color="#E5E5E5"> lot of time or effort</font>

660
00:34:20,409 --> 00:34:24,789
and so what does<font color="#E5E5E5"> it take what does it</font>

661
00:34:22,899 --> 00:34:29,168
take to really attack an application and

662
00:34:24,789 --> 00:34:31,839
this is the best keylogger it is a piece

663
00:34:29,168 --> 00:34:35,049
of software that I've been wrecking for

664
00:34:31,839 --> 00:34:37,558
the last few years and by the end of

665
00:34:35,049 --> 00:34:40,179
this hopefully you'll you'll see why

666
00:34:37,559 --> 00:34:44,529
it's a keylogger that sits on<font color="#E5E5E5"> your</font>

667
00:34:40,179 --> 00:34:51,269
system<font color="#E5E5E5"> and its office gated this is a</font>

668
00:34:44,529 --> 00:34:53,859
<font color="#CCCCCC">protected application it is the standard</font>

669
00:34:51,268 --> 00:34:55,750
obfuscation you can scroll down<font color="#CCCCCC"> here and</font>

670
00:34:53,859 --> 00:34:57,609
see that it's from dafa skater and

671
00:34:55,750 --> 00:34:59,440
there's a signature you now know what it

672
00:34:57,609 --> 00:35:01,150
was office cated by you can go<font color="#E5E5E5"> and</font>

673
00:34:59,440 --> 00:35:02,619
google it to see what security<font color="#E5E5E5"> they have</font>

674
00:35:01,150 --> 00:35:04,269
in place do you need to worry about it

675
00:35:02,619 --> 00:35:07,920
you need<font color="#E5E5E5"> to bypass or can you ignore it</font>

676
00:35:04,269 --> 00:35:12,729
and it just<font color="#CCCCCC"> so happens that</font><font color="#E5E5E5"> the</font>

677
00:35:07,920 --> 00:35:15,490
validation I want to<font color="#E5E5E5"> go after is in here</font>

678
00:35:12,730 --> 00:35:17,769
and so this<font color="#CCCCCC"> is why I attack this</font>

679
00:35:15,490 --> 00:35:20,049
application viciously for many years I

680
00:35:17,769 --> 00:35:22,479
just wreck this application because it

681
00:35:20,049 --> 00:35:24,700
does a password validation and that's it

682
00:35:22,480 --> 00:35:26,349
right there it takes in what the user

683
00:35:24,700 --> 00:35:28,569
typed in and<font color="#E5E5E5"> trims it it takes in the</font>

684
00:35:26,349 --> 00:35:31,000
stored password and compares them no

685
00:35:28,569 --> 00:35:33,670
Krypto no hoshi no protection your

686
00:35:31,000 --> 00:35:35,200
password is stored<font color="#E5E5E5"> in the clear and for</font>

687
00:35:33,670 --> 00:35:37,269
a piece of software that wants to

688
00:35:35,200 --> 00:35:40,720
pretend to be some level of security

689
00:35:37,269 --> 00:35:42,729
that's horrific like when they stop

690
00:35:40,720 --> 00:35:46,808
storing it in the clear<font color="#CCCCCC"> i'll stop</font>

691
00:35:42,730 --> 00:35:49,900
attacking them and so this<font color="#CCCCCC"> is the the</font>

692
00:35:46,809 --> 00:35:53,559
simple<font color="#E5E5E5"> case where here is a branch on</font>

693
00:35:49,900 --> 00:35:55,119
false that's what<font color="#CCCCCC"> it</font><font color="#E5E5E5"> says down</font><font color="#CCCCCC"> here and</font>

694
00:35:53,559 --> 00:35:57,130
<font color="#CCCCCC">i try and make it nice and easy where</font>

695
00:35:55,119 --> 00:35:59,410
you take this branch on false turn it to

696
00:35:57,130 --> 00:36:03,009
a branch on true and now we've added a

697
00:35:59,410 --> 00:36:08,290
knot and so<font color="#E5E5E5"> now not password validates</font>

698
00:36:03,009 --> 00:36:17,310
we click<font color="#CCCCCC"> Save save it out</font>

699
00:36:08,290 --> 00:36:26,020
and now we have<font color="#E5E5E5"> this one that so any</font>

700
00:36:17,310 --> 00:36:28,660
password now validates oh ooh uh<font color="#E5E5E5"> okay</font>

701
00:36:26,020 --> 00:36:34,830
I'll pop that through one more time

702
00:36:28,660 --> 00:36:34,830
let's see did I save it out correctly

703
00:36:35,490 --> 00:36:55,799
let's see that's<font color="#CCCCCC"> a few auger ah let's</font>

704
00:36:46,330 --> 00:37:02,740
see this was aa oh my demos are wrecking

705
00:36:55,800 --> 00:37:05,320
<font color="#E5E5E5">okay that's okay keep moving okay so so</font>

706
00:37:02,740 --> 00:37:09,339
this password here's where we get a

707
00:37:05,320 --> 00:37:11,080
password right here I'll add a couple of

708
00:37:09,340 --> 00:37:15,280
things<font color="#E5E5E5"> just like I did before I'll call</font>

709
00:37:11,080 --> 00:37:17,680
a duplicate on here a Duke will call it

710
00:37:15,280 --> 00:37:25,230
call out just like we did for the<font color="#CCCCCC"> first</font>

711
00:37:17,680 --> 00:37:32,580
one target it to<font color="#CCCCCC"> Windows system forms</font>

712
00:37:25,230 --> 00:37:38,130
system.windows.forms<font color="#E5E5E5"> messagebox.show</font>

713
00:37:32,580 --> 00:37:38,130
will add one more pop to clean it up

714
00:37:38,250 --> 00:37:42,000
save that out

715
00:37:46,259 --> 00:38:02,680
<font color="#E5E5E5">okay let's take that</font><font color="#CCCCCC"> for a spin so type</font>

716
00:37:53,730 --> 00:38:19,019
and I have some sand boxes that I'll try

717
00:38:02,680 --> 00:38:19,019
<font color="#CCCCCC">and clean real quick ah</font><font color="#E5E5E5"> okay um well um</font>

718
00:38:19,499 --> 00:38:27,999
mmm okay so assuming that this worked I

719
00:38:25,749 --> 00:38:30,189
would take the password in I would show

720
00:38:27,999 --> 00:38:32,980
it out to the user and then I would

721
00:38:30,190 --> 00:38:35,220
subvert the check for some reason that

722
00:38:32,980 --> 00:38:37,990
<font color="#E5E5E5">doesn't seem to be executing and</font>

723
00:38:35,220 --> 00:38:40,359
something interesting to note is that on

724
00:38:37,990 --> 00:38:42,939
its successful password validation this

725
00:38:40,359 --> 00:38:45,819
is a logic that gets executed you change

726
00:38:42,940 --> 00:38:49,989
one variable and<font color="#E5E5E5"> then you execute okay</font>

727
00:38:45,819 --> 00:38:51,730
dialogue result and so you could attack

728
00:38:49,989 --> 00:38:55,299
it or you could inject into memory and

729
00:38:51,730 --> 00:38:57,789
execute these two lines of code and be

730
00:38:55,299 --> 00:38:59,499
able to bypass that and so when<font color="#E5E5E5"> you</font>

731
00:38:57,789 --> 00:39:02,710
actually get in there that<font color="#E5E5E5"> attacking in</font>

732
00:38:59,499 --> 00:39:04,390
memory is so much easier that you're

733
00:39:02,710 --> 00:39:06,099
talking<font color="#CCCCCC"> about these two lines instead of</font>

734
00:39:04,390 --> 00:39:08,799
reverse engineering and trying to buy

735
00:39:06,099 --> 00:39:11,259
<font color="#E5E5E5">you just inject it in a packet and I</font>

736
00:39:08,799 --> 00:39:13,749
have going in there with metasploit or

737
00:39:11,259 --> 00:39:15,789
these other payload systems and I have a

738
00:39:13,749 --> 00:39:19,569
standard payload system that works off

739
00:39:15,789 --> 00:39:22,390
of<font color="#E5E5E5"> Windows DLL injection and I won't</font>

740
00:39:19,569 --> 00:39:24,099
really have time to introduce it but

741
00:39:22,390 --> 00:39:25,629
it's called Drake great dragon and it's

742
00:39:24,099 --> 00:39:29,259
up on my website with payloads and

743
00:39:25,630 --> 00:39:31,450
pre-canned and and so why don't they

744
00:39:29,259 --> 00:39:33,519
hash it why<font color="#E5E5E5"> don't they protect the</font>

745
00:39:31,450 --> 00:39:35,019
password is kind of where<font color="#E5E5E5"> I'm going with</font>

746
00:39:33,519 --> 00:39:37,390
all of this that if they're<font color="#E5E5E5"> going to</font>

747
00:39:35,019 --> 00:39:40,720
claim to be secure software whether this

748
00:39:37,390 --> 00:39:42,848
is norton symantec or<font color="#E5E5E5"> off</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> shelf you</font>

749
00:39:40,720 --> 00:39:44,950
don't care you're using it inside of

750
00:39:42,849 --> 00:39:46,900
your enterprise and now you can reach in

751
00:39:44,950 --> 00:39:48,640
there look at it and say hey we<font color="#E5E5E5"> don't</font>

752
00:39:46,900 --> 00:39:50,710
want to use your software until or

753
00:39:48,640 --> 00:39:53,140
unless or maybe you have<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> it and</font>

754
00:39:50,710 --> 00:39:56,710
you'll patch it yourself and now you can

755
00:39:53,140 --> 00:39:57,618
you can quickly patch it<font color="#E5E5E5"> and so if they</font>

756
00:39:56,710 --> 00:39:59,990
would just use

757
00:39:57,619 --> 00:40:01,759
sha256 do a little bit of salting I

758
00:39:59,990 --> 00:40:03,439
would stop attacking them and for

759
00:40:01,759 --> 00:40:05,450
multiple years they've refused to

760
00:40:03,440 --> 00:40:07,220
they've done plenty of upgrades to try

761
00:40:05,450 --> 00:40:09,649
and stop me in different<font color="#E5E5E5"> ways and that's</font>

762
00:40:07,220 --> 00:40:11,390
all they have to do to stop me that I'm

763
00:40:09,650 --> 00:40:13,279
a highly<font color="#CCCCCC"> skilled reverse engineer</font>

764
00:40:11,390 --> 00:40:14,930
spending hours attacking them and

765
00:40:13,279 --> 00:40:17,240
there's no level they can get to that I

766
00:40:14,930 --> 00:40:18,919
can't get heart higher than and there's

767
00:40:17,240 --> 00:40:21,439
nothing that will stop me except<font color="#CCCCCC"> for</font>

768
00:40:18,920 --> 00:40:23,299
putting a<font color="#CCCCCC"> sha256 on the user password</font>

769
00:40:21,440 --> 00:40:25,039
<font color="#E5E5E5">and so when you talk about why is this</font>

770
00:40:23,299 --> 00:40:27,440
hacker attacking us this is why I'm

771
00:40:25,039 --> 00:40:29,450
attacking them and so it's not

772
00:40:27,440 --> 00:40:35,569
necessarily apparent why someone would

773
00:40:29,450 --> 00:40:39,279
attack your software and I'll try this

774
00:40:35,569 --> 00:40:42,799
real quick um it will probably end

775
00:40:39,279 --> 00:40:47,859
poorly but i'll try and attack this

776
00:40:42,799 --> 00:40:51,710
software one more time so let's open<font color="#E5E5E5"> up</font>

777
00:40:47,859 --> 00:40:56,390
<font color="#CCCCCC">gray wolf and let's drop in the same</font>

778
00:40:51,710 --> 00:41:01,220
piece<font color="#CCCCCC"> of software let's drop this in</font>

779
00:40:56,390 --> 00:41:06,339
here and let's go after<font color="#CCCCCC"> it so now the</font>

780
00:41:01,220 --> 00:41:06,339
<font color="#CCCCCC">the target is going and breaking the</font>

781
00:41:06,579 --> 00:41:16,779
validation of the software let's open it

782
00:41:11,180 --> 00:41:16,779
up<font color="#E5E5E5"> and make sure</font><font color="#CCCCCC"> that we can access it</font>

783
00:41:17,230 --> 00:41:26,829
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I reset the</font><font color="#E5E5E5"> software I'll put in</font>

784
00:41:21,819 --> 00:41:30,319
password 123456 and access the software

785
00:41:26,829 --> 00:41:34,609
okay so so this<font color="#E5E5E5"> is it we come in here</font>

786
00:41:30,319 --> 00:41:36,829
and we have<font color="#CCCCCC"> our license and so how do we</font>

787
00:41:34,609 --> 00:41:38,598
attack this right it's an office gated

788
00:41:36,829 --> 00:41:40,700
piece of software I know this unlock

789
00:41:38,599 --> 00:41:46,339
button goes to code how how do<font color="#CCCCCC"> I get</font>

790
00:41:40,700 --> 00:41:48,169
there right and this is where 100 since

791
00:41:46,339 --> 00:41:51,230
I messed up<font color="#E5E5E5"> a</font><font color="#CCCCCC"> couple of the other demos</font>

792
00:41:48,170 --> 00:41:53,509
I'll just do a memory demo for<font color="#CCCCCC"> you real</font>

793
00:41:51,230 --> 00:41:56,450
quick so what does<font color="#CCCCCC"> it take what does it</font>

794
00:41:53,509 --> 00:42:00,380
take to break into this application so i

795
00:41:56,450 --> 00:42:02,210
have great dragon targeted for all the

796
00:42:00,380 --> 00:42:05,119
different frameworks you take<font color="#CCCCCC"> gray</font>

797
00:42:02,210 --> 00:42:08,359
dragon you target<font color="#E5E5E5"> this it finds 32-bit</font>

798
00:42:05,119 --> 00:42:10,779
uses a 32 bit compatible payload drops

799
00:42:08,359 --> 00:42:13,779
this<font color="#E5E5E5"> in there and now we</font><font color="#CCCCCC"> have a ship</font>

800
00:42:10,779 --> 00:42:16,150
we'll load any dll executable and it'll

801
00:42:13,779 --> 00:42:22,209
run void main inside of the executable

802
00:42:16,150 --> 00:42:24,989
so<font color="#CCCCCC"> I can drag in an executable and now i</font>

803
00:42:22,209 --> 00:42:29,948
can edit the application I've injected

804
00:42:24,989 --> 00:42:31,779
into its application and that's a couple

805
00:42:29,949 --> 00:42:33,369
of lines of code less than 50 lines of

806
00:42:31,779 --> 00:42:35,979
code for<font color="#E5E5E5"> this entire payload that does</font>

807
00:42:33,369 --> 00:42:39,189
court editing and I can do<font color="#E5E5E5"> all sorts of</font>

808
00:42:35,979 --> 00:42:41,739
crazy stuff but this ask button it now

809
00:42:39,189 --> 00:42:44,678
it added a<font color="#CCCCCC"> right-click</font><font color="#E5E5E5"> to everything on</font>

810
00:42:41,739 --> 00:42:47,169
here<font color="#E5E5E5"> I can right click this and this</font><font color="#CCCCCC"> is</font>

811
00:42:44,679 --> 00:42:49,630
what that button fires right that's the

812
00:42:47,169 --> 00:42:53,679
unlock code the unlock code says<font color="#E5E5E5"> okay</font>

813
00:42:49,630 --> 00:42:56,709
well I want<font color="#E5E5E5"> be AZ I'm this function B</font>

814
00:42:53,679 --> 00:42:59,289
Class B function a so let's go look at

815
00:42:56,709 --> 00:43:02,499
be AZ<font color="#E5E5E5"> write that unlock button goes</font>

816
00:42:59,289 --> 00:43:05,789
right there so now when we come in here

817
00:43:02,499 --> 00:43:09,399
we can<font color="#E5E5E5"> be like oh well let's go to be</font>

818
00:43:05,789 --> 00:43:12,219
done and so a good programmer would put

819
00:43:09,400 --> 00:43:14,709
all of the logic in that one class right

820
00:43:12,219 --> 00:43:16,630
so if<font color="#CCCCCC"> that function fires into there</font>

821
00:43:14,709 --> 00:43:23,589
that probably the rest of the logic is

822
00:43:16,630 --> 00:43:26,709
in there so let's see be AZ and so yeah

823
00:43:23,589 --> 00:43:28,650
sure<font color="#E5E5E5"> enough that's it and so that's</font>

824
00:43:26,709 --> 00:43:30,969
going from blind in an application

825
00:43:28,650 --> 00:43:32,829
memory injecting finding out where

826
00:43:30,969 --> 00:43:34,959
button goes going<font color="#E5E5E5"> to where it goes and</font>

827
00:43:32,829 --> 00:43:38,619
now we see this activation failed

828
00:43:34,959 --> 00:43:40,538
activation succeeded and that's kind of

829
00:43:38,619 --> 00:43:42,459
<font color="#E5E5E5">the round trip that now something</font><font color="#CCCCCC"> that</font>

830
00:43:40,539 --> 00:43:45,039
was protected<font color="#CCCCCC"> that</font><font color="#E5E5E5"> they spent time to</font>

831
00:43:42,459 --> 00:43:49,779
<font color="#E5E5E5">protect we can now subvert it quickly</font>

832
00:43:45,039 --> 00:43:52,150
and be able to bypass core functionality

833
00:43:49,779 --> 00:43:54,579
and so you read<font color="#E5E5E5"> through all of these</font>

834
00:43:52,150 --> 00:43:57,789
functions<font color="#CCCCCC"> in here and it turns out that</font>

835
00:43:54,579 --> 00:44:01,900
it resolves one function to another and

836
00:43:57,789 --> 00:44:03,939
this eventually results to be<font color="#E5E5E5"> AAA and so</font>

837
00:44:01,900 --> 00:44:06,849
as I said a good<font color="#E5E5E5"> programmer would put</font>

838
00:44:03,939 --> 00:44:10,598
all of the core logic in this area<font color="#E5E5E5"> so it</font>

839
00:44:06,849 --> 00:44:13,479
resolves to be a a and so here's our

840
00:44:10,599 --> 00:44:15,939
activation<font color="#E5E5E5"> string this is where the</font>

841
00:44:13,479 --> 00:44:18,129
activation actually execute that now we

842
00:44:15,939 --> 00:44:22,239
have a service<font color="#E5E5E5"> call out to the internet</font>

843
00:44:18,130 --> 00:44:24,130
and it takes a certain action and it

844
00:44:22,239 --> 00:44:26,320
will probably<font color="#CCCCCC"> blow up but</font>

845
00:44:24,130 --> 00:44:29,260
let's look at attacking that let's look

846
00:44:26,320 --> 00:44:33,060
<font color="#E5E5E5">at attacking this action in here that</font>

847
00:44:29,260 --> 00:44:37,510
now we scroll<font color="#CCCCCC"> down and we find here is</font>

848
00:44:33,060 --> 00:44:40,690
the best keyloggers web reference

849
00:44:37,510 --> 00:44:45,310
activate key call so it calls out to the

850
00:44:40,690 --> 00:44:48,070
web ok well let's delete that line<font color="#CCCCCC"> okay</font>

851
00:44:45,310 --> 00:44:50,380
well now it no longer calls out to the

852
00:44:48,070 --> 00:44:52,480
web it just doesn't do that call anymore

853
00:44:50,380 --> 00:44:54,910
and that's<font color="#CCCCCC"> what we're going for right</font>

854
00:44:52,480 --> 00:44:58,000
we're<font color="#CCCCCC"> going for that that quick</font><font color="#E5E5E5"> get me</font>

855
00:44:54,910 --> 00:45:03,240
in there and let's attack it and let's

856
00:44:58,000 --> 00:45:09,840
see Wow let's see and there should be

857
00:45:03,240 --> 00:45:14,319
probably one of these two let's see it's

858
00:45:09,840 --> 00:45:17,790
what my notes are for some reason off

859
00:45:14,320 --> 00:45:30,810
but let's flip this one<font color="#CCCCCC"> okay we put a</font>

860
00:45:17,790 --> 00:45:33,700
notch here um let's see 14 yeah okay

861
00:45:30,810 --> 00:45:36,759
probably this one okay we'll try this

862
00:45:33,700 --> 00:45:39,609
one and let's go and attack the<font color="#CCCCCC"> login</font>

863
00:45:36,760 --> 00:45:46,230
logic real quick<font color="#E5E5E5"> just one more time to</font>

864
00:45:39,610 --> 00:45:57,040
<font color="#CCCCCC">see if we can bypass that so w aww and</font>

865
00:45:46,230 --> 00:46:03,070
then<font color="#E5E5E5"> I think it was</font><font color="#CCCCCC"> aww aww ad</font><font color="#E5E5E5"> okay</font>

866
00:45:57,040 --> 00:46:08,650
here's our logic will flip this check to

867
00:46:03,070 --> 00:46:13,630
<font color="#E5E5E5">be a true and let's show out the message</font>

868
00:46:08,650 --> 00:46:17,520
box real quick chance it'll work get one

869
00:46:13,630 --> 00:46:17,520
<font color="#E5E5E5">of these going for you duplicate</font>

870
00:46:17,700 --> 00:46:26,520
call target system.windows.forms

871
00:46:30,330 --> 00:46:37,140
messagebox.show pop off the return value

872
00:46:37,380 --> 00:46:54,430
and save it out and so we have a hacked

873
00:46:49,530 --> 00:46:59,860
compilation of this<font color="#E5E5E5"> that has a chance</font>

874
00:46:54,430 --> 00:47:06,990
judging from how this has been so we'll

875
00:46:59,860 --> 00:47:06,990
take this one okay

876
00:47:07,960 --> 00:47:14,280
<font color="#E5E5E5">I'm not sure where I'm messing up so</font>

877
00:47:14,310 --> 00:47:25,810
let's see this really<font color="#E5E5E5"> does work in the</font>

878
00:47:19,869 --> 00:47:29,500
wild<font color="#E5E5E5"> okay my demos are all to hell today</font>

879
00:47:25,810 --> 00:47:32,410
so today would work<font color="#E5E5E5"> but totally doesn't</font>

880
00:47:29,500 --> 00:47:36,130
<font color="#E5E5E5">today because the demo gods hate me but</font>

881
00:47:32,410 --> 00:47:38,589
but that's that would be breaking their

882
00:47:36,130 --> 00:47:41,770
core security for validating these two

883
00:47:38,589 --> 00:47:44,560
different<font color="#E5E5E5"> critical sections and that's</font>

884
00:47:41,770 --> 00:47:47,200
where I live I live down in il I

885
00:47:44,560 --> 00:47:49,119
actually live where IL becomes assembly

886
00:47:47,200 --> 00:47:51,129
code and where the framework does memory

887
00:47:49,119 --> 00:47:53,339
management and I live in that area of

888
00:47:51,130 --> 00:47:56,050
dotnet that you never consider and

889
00:47:53,339 --> 00:47:57,910
that's why I can find<font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> so easy</font>

890
00:47:56,050 --> 00:48:01,270
because I live in an area that you don't

891
00:47:57,910 --> 00:48:03,670
know exists that now I can infect you in

892
00:48:01,270 --> 00:48:05,470
the gac and your white listing and

893
00:48:03,670 --> 00:48:07,690
program files and everything whitelists

894
00:48:05,470 --> 00:48:09,189
just fine and so<font color="#CCCCCC"> now in your forensics</font>

895
00:48:07,690 --> 00:48:11,619
investigation you forgot<font color="#CCCCCC"> to check the</font>

896
00:48:09,190 --> 00:48:13,839
<font color="#E5E5E5">gac and that's where I'm living and so</font>

897
00:48:11,619 --> 00:48:16,750
when you talk about this level of skill

898
00:48:13,839 --> 00:48:19,000
like can i bypass someone with less

899
00:48:16,750 --> 00:48:20,650
skill than me yeah yeah<font color="#E5E5E5"> I probably can</font>

900
00:48:19,000 --> 00:48:23,770
can I get past someone with more skill

901
00:48:20,650 --> 00:48:25,660
man probably not and when we look at an

902
00:48:23,770 --> 00:48:28,210
application like we have security

903
00:48:25,660 --> 00:48:30,660
dongles we have all of this phone home

904
00:48:28,210 --> 00:48:33,040
ability and<font color="#CCCCCC"> we'll throw on Krypto and</font>

905
00:48:30,660 --> 00:48:35,950
this is where<font color="#E5E5E5"> I like</font><font color="#CCCCCC"> to attack you I</font>

906
00:48:33,040 --> 00:48:38,290
like to attack putting back doors in

907
00:48:35,950 --> 00:48:40,149
your update logic in your phone home if

908
00:48:38,290 --> 00:48:42,790
you're doing encrypted communications

909
00:48:40,150 --> 00:48:44,530
home I can now piggyback repoint that to

910
00:48:42,790 --> 00:48:45,849
my server getting cryptic communications

911
00:48:44,530 --> 00:48:47,920
that<font color="#E5E5E5"> you're allowing to come out of your</font>

912
00:48:45,849 --> 00:48:50,680
<font color="#E5E5E5">network and exfiltrate a couple of</font>

913
00:48:47,920 --> 00:48:52,750
Records every single day and when you

914
00:48:50,680 --> 00:48:54,520
<font color="#CCCCCC">have a security dongle I can now add my</font>

915
00:48:52,750 --> 00:48:57,400
dongles to your sequence i can now

916
00:48:54,520 --> 00:48:59,680
validate myself into your system or your

917
00:48:57,400 --> 00:49:01,810
crypto how do you know if your random

918
00:48:59,680 --> 00:49:04,330
numbers are random i can now go in just

919
00:49:01,810 --> 00:49:06,040
like the NSA and<font color="#E5E5E5"> cripple you in some</font>

920
00:49:04,330 --> 00:49:08,109
fundamental way that I'll still pass all

921
00:49:06,040 --> 00:49:10,330
entropy checks but i will have the<font color="#E5E5E5"> keys</font>

922
00:49:08,109 --> 00:49:12,520
<font color="#CCCCCC">to your kingdom and there's</font><font color="#E5E5E5"> no way that</font>

923
00:49:10,330 --> 00:49:14,650
AV is going to find<font color="#E5E5E5"> me and that's what</font>

924
00:49:12,520 --> 00:49:17,400
<font color="#CCCCCC">i'm trying</font><font color="#E5E5E5"> to bring that we consider</font>

925
00:49:14,650 --> 00:49:20,110
applications to be this<font color="#E5E5E5"> the secure</font>

926
00:49:17,400 --> 00:49:22,930
unfathomably hard area to attack

927
00:49:20,110 --> 00:49:25,300
and it's not it's<font color="#E5E5E5"> really not that</font><font color="#CCCCCC"> hard</font>

928
00:49:22,930 --> 00:49:27,580
that<font color="#E5E5E5"> this is just a level of skill that</font>

929
00:49:25,300 --> 00:49:29,500
was held back from us because the tools

930
00:49:27,580 --> 00:49:31,540
were expensive that<font color="#E5E5E5"> you were talking</font>

931
00:49:29,500 --> 00:49:33,610
about Ida Pro and thousands<font color="#E5E5E5"> of dollars</font>

932
00:49:31,540 --> 00:49:35,590
and now it's simply code obfuscation

933
00:49:33,610 --> 00:49:37,720
that you have to get past you have to

934
00:49:35,590 --> 00:49:39,640
read through a little<font color="#CCCCCC"> bit of challenging</font>

935
00:49:37,720 --> 00:49:41,230
stuff and when it<font color="#E5E5E5"> comes down to it it</font>

936
00:49:39,640 --> 00:49:43,629
doesn't stop anything<font color="#E5E5E5"> because this is</font>

937
00:49:41,230 --> 00:49:46,690
obfuscated that you're<font color="#E5E5E5"> talking about oh</font>

938
00:49:43,630 --> 00:49:49,030
this is a value<font color="#CCCCCC"> that comes back and you</font>

939
00:49:46,690 --> 00:49:50,880
just have to read it or just put in

940
00:49:49,030 --> 00:49:52,990
something<font color="#E5E5E5"> that shows you out the code</font>

941
00:49:50,880 --> 00:49:55,540
what they put in security right

942
00:49:52,990 --> 00:49:57,729
Microsoft gave you security and<font color="#CCCCCC"> yeah</font>

943
00:49:55,540 --> 00:49:59,950
dotnet does have more security than C++

944
00:49:57,730 --> 00:50:02,770
and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> previous languages it gives you</font>

945
00:49:59,950 --> 00:50:03,759
code signing in thousand 24-bit crypto

946
00:50:02,770 --> 00:50:07,000
and you can bake this into your

947
00:50:03,760 --> 00:50:08,980
enterprise and all that and this shuts

948
00:50:07,000 --> 00:50:10,390
down tampering because there's no way

949
00:50:08,980 --> 00:50:13,720
that they<font color="#CCCCCC"> can get this strong name</font>

950
00:50:10,390 --> 00:50:15,279
public signing key it's it's so strong

951
00:50:13,720 --> 00:50:17,140
and will protect<font color="#CCCCCC"> you and</font><font color="#E5E5E5"> this is a</font>

952
00:50:15,280 --> 00:50:19,360
public key and it's a<font color="#E5E5E5"> public key sign</font>

953
00:50:17,140 --> 00:50:21,790
token and it's it's actually pretty

954
00:50:19,360 --> 00:50:24,070
strong and at the end<font color="#CCCCCC"> of the day it's it</font>

955
00:50:21,790 --> 00:50:27,070
identifies the author of this<font color="#E5E5E5"> public key</font>

956
00:50:24,070 --> 00:50:31,390
and well unfortunately<font color="#E5E5E5"> no it really</font>

957
00:50:27,070 --> 00:50:34,270
doesn't work and they tell you that<font color="#E5E5E5"> it's</font>

958
00:50:31,390 --> 00:50:37,210
it's going<font color="#E5E5E5"> to defend you right well why</font>

959
00:50:34,270 --> 00:50:39,009
why<font color="#CCCCCC"> would I say no right that you've</font>

960
00:50:37,210 --> 00:50:41,080
gone from a protected to an unprotected

961
00:50:39,010 --> 00:50:44,110
State and you don't understand why and

962
00:50:41,080 --> 00:50:46,270
that's where that's where experts like

963
00:50:44,110 --> 00:50:47,890
us come in<font color="#E5E5E5"> that we can now say well your</font>

964
00:50:46,270 --> 00:50:50,080
application that you thought was secure

965
00:50:47,890 --> 00:50:52,000
is completely overrun with hackers and

966
00:50:50,080 --> 00:50:55,480
you don't even understand<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> or</font>

967
00:50:52,000 --> 00:50:57,610
why or how and that's because<font color="#E5E5E5"> you take</font>

968
00:50:55,480 --> 00:50:59,890
an executable and<font color="#E5E5E5"> you have a mal</font>

969
00:50:57,610 --> 00:51:01,540
executable<font color="#E5E5E5"> and what's the difference</font>

970
00:50:59,890 --> 00:51:04,569
it's a public key that's protecting it

971
00:51:01,540 --> 00:51:06,580
right well when it<font color="#E5E5E5"> comes down</font><font color="#CCCCCC"> to it this</font>

972
00:51:04,570 --> 00:51:09,010
public key can be transferred this

973
00:51:06,580 --> 00:51:11,890
public key that's public private

974
00:51:09,010 --> 00:51:13,990
thousand 24-bit crypto is simply

975
00:51:11,890 --> 00:51:17,109
transferred<font color="#E5E5E5"> but broken right because it</font>

976
00:51:13,990 --> 00:51:19,270
no longer hashes and that's where the

977
00:51:17,110 --> 00:51:21,460
entire vulnerability and easy bypass

978
00:51:19,270 --> 00:51:23,740
that<font color="#E5E5E5"> I found came in is that when you</font>

979
00:51:21,460 --> 00:51:25,930
talk about this attack vector it's off

980
00:51:23,740 --> 00:51:28,359
by default Windows doesn't go through

981
00:51:25,930 --> 00:51:30,040
and hash every dll when you're loading a

982
00:51:28,360 --> 00:51:32,020
video game that's two gigabytes it

983
00:51:30,040 --> 00:51:33,470
doesn't hash two gigabytes it checks the

984
00:51:32,020 --> 00:51:35,300
keys and I

985
00:51:33,470 --> 00:51:38,259
<font color="#CCCCCC">chance</font><font color="#E5E5E5"> for the keys over and so I'm</font>

986
00:51:35,300 --> 00:51:41,119
using correct keys on mal software and

987
00:51:38,260 --> 00:51:43,670
that was two lines of code for me to

988
00:51:41,119 --> 00:51:45,260
implement that that this entire system

989
00:51:43,670 --> 00:51:47,060
is subverted with a couple of lines of

990
00:51:45,260 --> 00:51:48,530
code and<font color="#CCCCCC"> gray wolf does that</font>

991
00:51:47,060 --> 00:51:51,680
automatically for you that's why<font color="#E5E5E5"> I can</font>

992
00:51:48,530 --> 00:51:53,599
edit these core applications inside a

993
00:51:51,680 --> 00:51:56,029
windows and bypass all of their security

994
00:51:53,599 --> 00:51:57,950
signing and that's what I'm<font color="#CCCCCC"> trying to</font>

995
00:51:56,030 --> 00:52:00,170
bring to you that you can look at these

996
00:51:57,950 --> 00:52:01,939
different<font color="#CCCCCC"> things and we can actually</font>

997
00:52:00,170 --> 00:52:04,460
<font color="#E5E5E5">start securing this that when you talk</font>

998
00:52:01,940 --> 00:52:07,160
about a white listing application go if

999
00:52:04,460 --> 00:52:09,980
you find an executable or a DLL with a

1000
00:52:07,160 --> 00:52:12,140
key that's mismatched and the DLL has

1001
00:52:09,980 --> 00:52:14,119
been infected and erroneously<font color="#CCCCCC"> re-signed</font>

1002
00:52:12,140 --> 00:52:16,910
that's an indicator but how many of<font color="#E5E5E5"> your</font>

1003
00:52:14,119 --> 00:52:18,349
tools would find that<font color="#E5E5E5"> and that's why I'm</font>

1004
00:52:16,910 --> 00:52:20,720
putting out all<font color="#CCCCCC"> of this research to try</font>

1005
00:52:18,349 --> 00:52:24,320
and move us forward and not just become

1006
00:52:20,720 --> 00:52:26,270
complacent and<font color="#CCCCCC"> Trust and so if anyone</font>

1007
00:52:24,320 --> 00:52:27,980
does care there's a registry entry<font color="#E5E5E5"> that</font>

1008
00:52:26,270 --> 00:52:29,750
<font color="#E5E5E5">you can turn it</font><font color="#CCCCCC"> from default off to</font>

1009
00:52:27,980 --> 00:52:32,840
default on but it'll slow your boot time

1010
00:52:29,750 --> 00:52:35,450
down and if a hacker gets in there they

1011
00:52:32,840 --> 00:52:37,690
could flip it and that's a choice that's

1012
00:52:35,450 --> 00:52:39,950
a choice that we can make that Microsoft

1013
00:52:37,690 --> 00:52:42,880
documented but doesn't tell anyone about

1014
00:52:39,950 --> 00:52:45,859
and it will cause an error in the<font color="#CCCCCC"> DLL</font>

1015
00:52:42,880 --> 00:52:48,980
but if you put it in executable it will

1016
00:52:45,859 --> 00:52:50,750
still say oh well the certificate

1017
00:52:48,980 --> 00:52:53,660
probably expired so load the executable

1018
00:52:50,750 --> 00:52:56,510
anyways it's a mal signed non validating

1019
00:52:53,660 --> 00:52:58,040
certificate and it'll still load and so

1020
00:52:56,510 --> 00:53:01,310
you can set that at the enterprise on

1021
00:52:58,040 --> 00:53:03,980
and on<font color="#E5E5E5"> and that's why understanding the</font>

1022
00:53:01,310 --> 00:53:05,660
the<font color="#E5E5E5"> GAC and all of</font><font color="#CCCCCC"> that is so important</font>

1023
00:53:03,980 --> 00:53:08,240
that when you load a DLL it goes into

1024
00:53:05,660 --> 00:53:10,129
<font color="#CCCCCC">the GAC the GAC turns out and your</font>

1025
00:53:08,240 --> 00:53:11,868
native image is destroyed<font color="#CCCCCC"> and it has</font>

1026
00:53:10,130 --> 00:53:14,510
that whole life cycle that I showed<font color="#CCCCCC"> you</font>

1027
00:53:11,869 --> 00:53:18,020
and now you have malware propagating

1028
00:53:14,510 --> 00:53:20,089
through your enterprise and so you can

1029
00:53:18,020 --> 00:53:21,859
infect the framework the same way and

1030
00:53:20,089 --> 00:53:25,369
you can a load sembly code the same way

1031
00:53:21,859 --> 00:53:30,529
and put shims in and it's easy it's easy

1032
00:53:25,369 --> 00:53:32,270
to do<font color="#E5E5E5"> this and so that's where my skill</font>

1033
00:53:30,530 --> 00:53:34,160
sets of application layer logic

1034
00:53:32,270 --> 00:53:36,890
dependable applications function level

1035
00:53:34,160 --> 00:53:39,470
logic and application security reviews

1036
00:53:36,890 --> 00:53:41,420
comes in and so think about function

1037
00:53:39,470 --> 00:53:43,750
level security layered security defend

1038
00:53:41,420 --> 00:53:45,380
your application defend your AP is and

1039
00:53:43,750 --> 00:53:46,640
armor any app

1040
00:53:45,380 --> 00:53:50,900
location whether it's yours or someone

1041
00:53:46,640 --> 00:53:52,640
else's so that's where that's where i'm

1042
00:53:50,900 --> 00:53:54,530
going with all of this and<font color="#CCCCCC"> i</font><font color="#E5E5E5"> hope that</font>

1043
00:53:52,640 --> 00:53:57,890
that it speaks to you and you appreciate

1044
00:53:54,530 --> 00:54:01,430
<font color="#CCCCCC">that this is all easy and all</font><font color="#E5E5E5"> of my</font>

1045
00:53:57,890 --> 00:54:05,750
<font color="#E5E5E5">tools are free will remain free and it's</font>

1046
00:54:01,430 --> 00:54:07,370
open<font color="#E5E5E5"> and should be usable by</font><font color="#CCCCCC"> any low</font>

1047
00:54:05,750 --> 00:54:10,190
level developer or someone without

1048
00:54:07,370 --> 00:54:13,900
development logic so thank you<font color="#CCCCCC"> very much</font>

1049
00:54:10,190 --> 00:54:13,900
and<font color="#CCCCCC"> I hope you enjoy the tools</font>

