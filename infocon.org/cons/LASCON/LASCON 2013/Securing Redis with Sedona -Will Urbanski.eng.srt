1
00:00:16,590 --> 00:00:21,130
today we're gonna talk<font color="#E5E5E5"> about red is and</font>

2
00:00:19,330 --> 00:00:22,538
before<font color="#E5E5E5"> we do so let me tell you a little</font>

3
00:00:21,130 --> 00:00:24,250
<font color="#E5E5E5">bit more about myself it's a little bit</font>

4
00:00:22,539 --> 00:00:26,050
more interesting<font color="#E5E5E5"> than all that bio stuff</font>

5
00:00:24,250 --> 00:00:28,750
I'm a<font color="#E5E5E5"> security researcher I work for a</font>

6
00:00:26,050 --> 00:00:31,570
managed security services provider I'm

7
00:00:28,750 --> 00:00:33,670
an outdoor enthusiast and also tweet a

8
00:00:31,570 --> 00:00:35,320
lot and I've got to<font color="#CCCCCC"> blog in some tools</font>

9
00:00:33,670 --> 00:00:40,090
available online if you're interested

10
00:00:35,320 --> 00:00:42,129
seeing some other projects but you're

11
00:00:40,090 --> 00:00:43,989
here<font color="#CCCCCC"> not for me you're here</font><font color="#E5E5E5"> to learn</font>

12
00:00:42,129 --> 00:00:45,849
<font color="#CCCCCC">about red is maybe because you're using</font>

13
00:00:43,989 --> 00:00:48,610
it in your environment or your thing

14
00:00:45,850 --> 00:00:49,719
about<font color="#E5E5E5"> using it or maybe you already know</font>

15
00:00:48,610 --> 00:00:51,239
what<font color="#E5E5E5"> this talk is about because you've</font>

16
00:00:49,719 --> 00:00:54,910
looked into some of the same issues that

17
00:00:51,239 --> 00:00:56,589
<font color="#E5E5E5">I'm going to illustrate for you all so</font>

18
00:00:54,910 --> 00:00:59,050
we're<font color="#E5E5E5"> gonna talk about what Redis is</font>

19
00:00:56,590 --> 00:01:03,609
what the problems are and what you can

20
00:00:59,050 --> 00:01:05,170
do about<font color="#E5E5E5"> it so let me just see a show of</font>

21
00:01:03,609 --> 00:01:07,510
hands who's actually<font color="#E5E5E5"> used red as before</font>

22
00:01:05,170 --> 00:01:10,689
in their environment<font color="#CCCCCC"> okay awesome</font><font color="#E5E5E5"> so</font>

23
00:01:07,510 --> 00:01:12,460
have<font color="#CCCCCC"> you ever heard of Redis okay so</font>

24
00:01:10,689 --> 00:01:16,330
it's a key<font color="#CCCCCC"> value store it's not really a</font>

25
00:01:12,460 --> 00:01:18,908
database it stores arbitrary types of

26
00:01:16,330 --> 00:01:22,119
data you can store strings lists hashes

27
00:01:18,909 --> 00:01:30,840
sorted sets various types of data and it

28
00:01:22,119 --> 00:01:33,970
does<font color="#CCCCCC"> so very rapidly so reticent and</font>

29
00:01:30,840 --> 00:01:36,100
easy way to store this data there's not

30
00:01:33,970 --> 00:01:38,439
a lot of overhead it's very fast and

31
00:01:36,100 --> 00:01:40,750
it's focused<font color="#E5E5E5"> on being lightweight it's</font>

32
00:01:38,439 --> 00:01:41,979
also open source so you can go<font color="#CCCCCC"> and</font>

33
00:01:40,750 --> 00:01:44,799
download the source code you can run it

34
00:01:41,979 --> 00:01:48,070
<font color="#E5E5E5">on a number of different platforms and</font>

35
00:01:44,799 --> 00:01:50,200
it's generally very well supported in

36
00:01:48,070 --> 00:01:51,758
the community in terms of different

37
00:01:50,200 --> 00:01:55,630
languages that you can integrate with

38
00:01:51,759 --> 00:01:58,000
red is right out of the box now if you

39
00:01:55,630 --> 00:01:59,500
do a<font color="#E5E5E5"> little research on red is you'll</font>

40
00:01:58,000 --> 00:02:01,000
find that they actually<font color="#E5E5E5"> make their</font>

41
00:01:59,500 --> 00:02:03,909
security model available on their

42
00:02:01,000 --> 00:02:06,210
website and<font color="#E5E5E5"> what's interesting about red</font>

43
00:02:03,909 --> 00:02:08,619
is<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that they're very transparent</font><font color="#CCCCCC"> that</font>

44
00:02:06,210 --> 00:02:11,008
there isn't a lot of security<font color="#E5E5E5"> in the</font>

45
00:02:08,619 --> 00:02:13,680
product there solely focused on

46
00:02:11,008 --> 00:02:17,250
on providing a<font color="#CCCCCC"> high-performance simple</font>

47
00:02:13,680 --> 00:02:20,129
solution to use they say on the<font color="#CCCCCC"> website</font>

48
00:02:17,250 --> 00:02:21,569
that it's only designed to be<font color="#CCCCCC"> accessed</font>

49
00:02:20,129 --> 00:02:23,670
by trusted users in a trusted

50
00:02:21,569 --> 00:02:27,268
environment now how<font color="#E5E5E5"> many of you</font><font color="#CCCCCC"> think</font>

51
00:02:23,670 --> 00:02:28,619
that your web farm with your web servers

52
00:02:27,269 --> 00:02:30,750
should be considered a trusted

53
00:02:28,620 --> 00:02:34,019
environment if you're using this as a

54
00:02:30,750 --> 00:02:36,090
back-end for a website even<font color="#CCCCCC"> if you're</font>

55
00:02:34,019 --> 00:02:39,060
using this as you know some sort<font color="#E5E5E5"> of</font>

56
00:02:36,090 --> 00:02:40,859
shared memory solution it's very

57
00:02:39,060 --> 00:02:43,230
difficult to say that we can trust

58
00:02:40,859 --> 00:02:45,299
everyone that should be accessing this

59
00:02:43,230 --> 00:02:49,379
service unless we go through a lot<font color="#CCCCCC"> of</font>

60
00:02:45,299 --> 00:02:51,120
effort<font color="#E5E5E5"> to try to secure it so</font><font color="#CCCCCC"> red is</font>

61
00:02:49,379 --> 00:02:53,069
this command oriented it's not query

62
00:02:51,120 --> 00:02:55,769
oriented so a lot of the traditional

63
00:02:53,069 --> 00:02:58,159
issues that we have<font color="#CCCCCC"> to deal</font><font color="#E5E5E5"> with the</font>

64
00:02:55,769 --> 00:03:01,980
sequel injection aren't really an issue

65
00:02:58,159 --> 00:03:04,290
we<font color="#E5E5E5"> don't have to worry about you know a</font>

66
00:03:01,980 --> 00:03:05,700
user potentially altering the intention

67
00:03:04,290 --> 00:03:07,470
<font color="#E5E5E5">of a command that's being sent because</font>

68
00:03:05,700 --> 00:03:10,379
<font color="#E5E5E5">those are being handled by the lobe lobe</font>

69
00:03:07,470 --> 00:03:13,500
libraries but unfortunately<font color="#CCCCCC"> not all the</font>

70
00:03:10,379 --> 00:03:16,048
commands are created equal so first you

71
00:03:13,500 --> 00:03:19,139
got commands that I consider safe these

72
00:03:16,049 --> 00:03:22,260
are commands that only read from the

73
00:03:19,139 --> 00:03:24,720
datastore they typically<font color="#E5E5E5"> only affect one</font>

74
00:03:22,260 --> 00:03:26,310
key so<font color="#E5E5E5"> you don't have to worry about the</font>

75
00:03:24,720 --> 00:03:28,109
sequel equivalent of a table<font color="#E5E5E5"> scan where</font>

76
00:03:26,310 --> 00:03:30,540
you're potentially paging information in

77
00:03:28,109 --> 00:03:32,040
a knob memory or onto disk and so

78
00:03:30,540 --> 00:03:34,560
there's not going to be an issue with

79
00:03:32,040 --> 00:03:37,888
resource contention these are commands

80
00:03:34,560 --> 00:03:40,910
<font color="#E5E5E5">like get exists and TTL which are just</font>

81
00:03:37,889 --> 00:03:43,349
<font color="#E5E5E5">simply returning small amounts of data</font>

82
00:03:40,910 --> 00:03:44,849
the next group<font color="#E5E5E5"> of commands that we've</font>

83
00:03:43,349 --> 00:03:46,798
got are what I call commands with

84
00:03:44,849 --> 00:03:49,349
consequences these are commands<font color="#E5E5E5"> that</font>

85
00:03:46,799 --> 00:03:51,239
would allow someone to modify data it's

86
00:03:49,349 --> 00:03:53,638
being stored in the Redis cluster so

87
00:03:51,239 --> 00:03:58,530
they allow you<font color="#E5E5E5"> to set a value delete a</font>

88
00:03:53,639 --> 00:04:00,120
value or to remove items from<font color="#CCCCCC"> Q these</font>

89
00:03:58,530 --> 00:04:03,090
only<font color="#E5E5E5"> affect single keys but</font><font color="#CCCCCC"> they are</font>

90
00:04:00,120 --> 00:04:05,849
read or write so again if<font color="#CCCCCC"> someone was to</font>

91
00:04:03,090 --> 00:04:08,400
miss used one of these there's a

92
00:04:05,849 --> 00:04:10,948
potential for some malicious activity

93
00:04:08,400 --> 00:04:14,069
but it's really<font color="#E5E5E5"> not as bad some of the</font>

94
00:04:10,949 --> 00:04:15,419
things I'm about to show you next<font color="#E5E5E5"> we've</font>

95
00:04:14,069 --> 00:04:18,060
got commands that are considered

96
00:04:15,419 --> 00:04:20,340
<font color="#E5E5E5">dangerous commands these are commands</font>

97
00:04:18,060 --> 00:04:22,409
that can infect multiple keys or the

98
00:04:20,339 --> 00:04:23,969
entire service and<font color="#E5E5E5"> they can impact the</font>

99
00:04:22,409 --> 00:04:26,490
availability of a service if<font color="#CCCCCC"> they're</font>

100
00:04:23,970 --> 00:04:29,010
used so these are things like email

101
00:04:26,490 --> 00:04:30,420
which allows you to execute<font color="#CCCCCC"> Lua code on</font>

102
00:04:29,010 --> 00:04:33,270
your own server that's an awesome

103
00:04:30,420 --> 00:04:34,770
feature but you want to make sure<font color="#E5E5E5"> that</font>

104
00:04:33,270 --> 00:04:37,140
only someone that you trust is going to

105
00:04:34,770 --> 00:04:38,880
be using that what about client kill

106
00:04:37,140 --> 00:04:41,010
where you can go in<font color="#E5E5E5"> and kill client</font>

107
00:04:38,880 --> 00:04:43,880
connections to the server so someone

108
00:04:41,010 --> 00:04:46,920
could go in and cut off your patchy

109
00:04:43,880 --> 00:04:48,690
apache web server<font color="#CCCCCC"> i could kill the</font>

110
00:04:46,920 --> 00:04:50,250
administrators connection or we can

111
00:04:48,690 --> 00:04:53,730
change the configuration of the<font color="#E5E5E5"> server</font>

112
00:04:50,250 --> 00:04:56,220
on<font color="#CCCCCC"> the fly so these are things that we</font>

113
00:04:53,730 --> 00:05:00,120
<font color="#E5E5E5">need to keep in mind when we're rolling</font>

114
00:04:56,220 --> 00:05:01,650
this service out in our environment now

115
00:05:00,120 --> 00:05:03,660
we've got the commands will ruin your

116
00:05:01,650 --> 00:05:05,489
weekend these are commands<font color="#E5E5E5"> that will</font>

117
00:05:03,660 --> 00:05:07,380
impact the entire service if they're

118
00:05:05,490 --> 00:05:10,020
<font color="#CCCCCC">just used and can have real devastating</font>

119
00:05:07,380 --> 00:05:11,130
consequences flush and flush all allow

120
00:05:10,020 --> 00:05:13,620
you delete all the keys<font color="#E5E5E5"> from the</font>

121
00:05:11,130 --> 00:05:17,580
database and<font color="#CCCCCC"> shutdown allows you to</font>

122
00:05:13,620 --> 00:05:19,080
remotely<font color="#CCCCCC"> shut down the service and this</font>

123
00:05:17,580 --> 00:05:20,669
brings us<font color="#CCCCCC"> to problem number one with</font>

124
00:05:19,080 --> 00:05:23,640
<font color="#E5E5E5">retta's and that is that there is no</font>

125
00:05:20,669 --> 00:05:25,289
<font color="#CCCCCC">data control language every client the</font>

126
00:05:23,640 --> 00:05:27,539
connection<font color="#CCCCCC"> to service can access all of</font>

127
00:05:25,290 --> 00:05:29,130
those commands they can set data they

128
00:05:27,540 --> 00:05:30,270
can read data they can delete all of

129
00:05:29,130 --> 00:05:33,900
your keys and they can shut<font color="#CCCCCC"> down the</font>

130
00:05:30,270 --> 00:05:35,450
service but<font color="#E5E5E5"> again this is by design red</font>

131
00:05:33,900 --> 00:05:38,159
is a solely focused on being<font color="#E5E5E5"> a</font>

132
00:05:35,450 --> 00:05:39,990
high-performance solution and it's not

133
00:05:38,160 --> 00:05:41,340
focused on providing any of these

134
00:05:39,990 --> 00:05:43,320
security controls that we would expect

135
00:05:41,340 --> 00:05:46,140
from a typical data store or database

136
00:05:43,320 --> 00:05:47,969
now for those of<font color="#E5E5E5"> you who have user as</font>

137
00:05:46,140 --> 00:05:50,580
before you're probably thinking<font color="#E5E5E5"> okay</font>

138
00:05:47,970 --> 00:05:53,520
well there is this kind<font color="#E5E5E5"> of hack where we</font>

139
00:05:50,580 --> 00:05:55,440
can rename commands so you can rename

140
00:05:53,520 --> 00:05:57,630
the shutdown command some random string

141
00:05:55,440 --> 00:05:59,100
if you want to and that's<font color="#E5E5E5"> great until</font>

142
00:05:57,630 --> 00:06:01,620
you actually need to<font color="#CCCCCC"> use the shutdown</font>

143
00:05:59,100 --> 00:06:04,350
command then you have to go look up what

144
00:06:01,620 --> 00:06:05,940
you actually renamed it to also there's

145
00:06:04,350 --> 00:06:07,800
no way to look at<font color="#E5E5E5"> that string and tell</font>

146
00:06:05,940 --> 00:06:09,719
what that<font color="#E5E5E5"> is actually going to do when</font>

147
00:06:07,800 --> 00:06:12,990
you run it on your cluster so if you

148
00:06:09,720 --> 00:06:14,760
forget the name or if someone<font color="#E5E5E5"> is not</font>

149
00:06:12,990 --> 00:06:16,860
familiar<font color="#E5E5E5"> with</font><font color="#CCCCCC"> that command tries to run</font>

150
00:06:14,760 --> 00:06:18,090
it there's no way to tell what action is

151
00:06:16,860 --> 00:06:20,280
going<font color="#E5E5E5"> to take on that service until it</font>

152
00:06:18,090 --> 00:06:25,890
runs so this reduces the usability of

153
00:06:20,280 --> 00:06:28,559
the<font color="#E5E5E5"> service now beyond just a data</font>

154
00:06:25,890 --> 00:06:30,390
control language in general ideally only

155
00:06:28,560 --> 00:06:31,680
authorized users should be<font color="#CCCCCC"> able to run a</font>

156
00:06:30,390 --> 00:06:33,990
shutdown command so we should be<font color="#E5E5E5"> able to</font>

157
00:06:31,680 --> 00:06:35,460
say our web servers cannot shut down the

158
00:06:33,990 --> 00:06:38,100
service but our network

159
00:06:35,460 --> 00:06:40,799
<font color="#CCCCCC">trash can and this brings us to</font><font color="#E5E5E5"> problem</font>

160
00:06:38,100 --> 00:06:43,350
number two and that's that Redis doesn't

161
00:06:40,800 --> 00:06:46,080
really support authentication there's no

162
00:06:43,350 --> 00:06:47,069
way to differentiate between different

163
00:06:46,080 --> 00:06:49,979
clients that are connecting to the

164
00:06:47,069 --> 00:06:52,259
service now again<font color="#E5E5E5"> for those of you who</font>

165
00:06:49,979 --> 00:06:54,960
have used res before there<font color="#E5E5E5"> is an off</font>

166
00:06:52,259 --> 00:06:57,539
<font color="#E5E5E5">command but that off command accepts a</font>

167
00:06:54,960 --> 00:06:59,609
single password and that password is

168
00:06:57,539 --> 00:07:04,289
shared by everyone that connects<font color="#CCCCCC"> to the</font>

169
00:06:59,610 --> 00:07:05,849
service so yeah I mean<font color="#E5E5E5"> what more can you</font>

170
00:07:04,289 --> 00:07:08,190
<font color="#CCCCCC">say there there's</font><font color="#E5E5E5"> no bowl to use the</font>

171
00:07:05,849 --> 00:07:11,039
<font color="#E5E5E5">support and even if there was multi-user</font>

172
00:07:08,190 --> 00:07:14,039
support there's no ACLs and that brings

173
00:07:11,039 --> 00:07:15,750
us<font color="#CCCCCC"> to problem number three even if you</font>

174
00:07:14,039 --> 00:07:17,789
could authenticate you wouldn't want<font color="#CCCCCC"> to</font>

175
00:07:15,750 --> 00:07:20,759
because there's no support for

176
00:07:17,789 --> 00:07:24,479
encryption so everything is being<font color="#E5E5E5"> passed</font>

177
00:07:20,759 --> 00:07:25,949
in the<font color="#E5E5E5"> clear to the database and anyone</font>

178
00:07:24,479 --> 00:07:27,330
can run any command<font color="#E5E5E5"> that they want to</font>

179
00:07:25,949 --> 00:07:29,039
remotely and there's no way to

180
00:07:27,330 --> 00:07:34,198
differentiate our users or log who's

181
00:07:29,039 --> 00:07:37,050
doing what but this<font color="#E5E5E5"> is really</font><font color="#CCCCCC"> ok red is</font>

182
00:07:34,199 --> 00:07:39,449
is unique in that it is one<font color="#CCCCCC"> of the few</font>

183
00:07:37,050 --> 00:07:41,039
open source projects that is extremely

184
00:07:39,449 --> 00:07:43,050
transparent about the<font color="#E5E5E5"> security model</font>

185
00:07:41,039 --> 00:07:44,940
they are up front on the website that

186
00:07:43,050 --> 00:07:47,789
when you run this service it is<font color="#E5E5E5"> up to</font>

187
00:07:44,940 --> 00:07:49,110
you to implement these controls they are

188
00:07:47,789 --> 00:07:52,469
solely focused<font color="#E5E5E5"> on performance and</font>

189
00:07:49,110 --> 00:07:55,500
simplicity and that's a real problem

190
00:07:52,469 --> 00:07:56,699
<font color="#CCCCCC">because look if you look at all the</font>

191
00:07:55,500 --> 00:07:59,669
issues we've had with sequel injection

192
00:07:56,699 --> 00:08:01,740
alone with a database server that can

193
00:07:59,669 --> 00:08:04,169
defend itself<font color="#E5E5E5"> typically how do we expect</font>

194
00:08:01,740 --> 00:08:08,310
our developers to protect this kind<font color="#E5E5E5"> of</font>

195
00:08:04,169 --> 00:08:11,609
solution so what are<font color="#CCCCCC"> some compensating</font>

196
00:08:08,310 --> 00:08:13,110
controls for authorization and

197
00:08:11,610 --> 00:08:14,669
authentication we have the ability to

198
00:08:13,110 --> 00:08:16,710
rename our dangerous commands<font color="#E5E5E5"> that's</font>

199
00:08:14,669 --> 00:08:18,719
great but it reduces the usability and

200
00:08:16,710 --> 00:08:21,599
makes maintenance of the system harder

201
00:08:18,719 --> 00:08:23,039
we've got an off command which is good

202
00:08:21,599 --> 00:08:24,449
step in the right direction but<font color="#E5E5E5"> there's</font>

203
00:08:23,039 --> 00:08:26,280
no way<font color="#CCCCCC"> to differentiate between users</font>

204
00:08:24,449 --> 00:08:28,889
and we're using<font color="#E5E5E5"> a shared password and</font>

205
00:08:26,280 --> 00:08:32,520
it's not encrypted so everything is

206
00:08:28,889 --> 00:08:34,110
passing the clear over the<font color="#E5E5E5"> wire one</font>

207
00:08:32,520 --> 00:08:36,630
solution that you see all over<font color="#CCCCCC"> the place</font>

208
00:08:34,110 --> 00:08:38,219
is to only run<font color="#E5E5E5"> read as locally on the</font>

209
00:08:36,630 --> 00:08:40,559
host so that you have to connect to a

210
00:08:38,219 --> 00:08:43,229
remotely through ssh or some other type

211
00:08:40,559 --> 00:08:45,719
of service that's an easy way to secure

212
00:08:43,229 --> 00:08:47,730
Redis but the problem is then you have

213
00:08:45,720 --> 00:08:48,270
to have everyone SSH into the box and

214
00:08:47,730 --> 00:08:50,370
when they

215
00:08:48,270 --> 00:08:51,930
still<font color="#E5E5E5"> connect to the service their user</font>

216
00:08:50,370 --> 00:08:53,700
account doesn't apply anything guys are

217
00:08:51,930 --> 00:08:56,060
doing on reddit so you still<font color="#CCCCCC"> have the</font>

218
00:08:53,700 --> 00:08:58,440
issue where everyone can do<font color="#CCCCCC"> everything</font>

219
00:08:56,060 --> 00:08:59,880
in terms<font color="#E5E5E5"> of confidentiality they</font>

220
00:08:58,440 --> 00:09:02,250
actually recommend on the website to use

221
00:08:59,880 --> 00:09:03,570
an ssl proxy you can use s tunnel or

222
00:09:02,250 --> 00:09:06,450
some other solution<font color="#E5E5E5"> but again this is</font>

223
00:09:03,570 --> 00:09:09,090
<font color="#CCCCCC">not</font><font color="#E5E5E5"> built into the system and if you</font>

224
00:09:06,450 --> 00:09:11,610
want to encrypt the data at rest there's

225
00:09:09,090 --> 00:09:13,440
no<font color="#CCCCCC"> support whatsoever so in my sequel we</font>

226
00:09:11,610 --> 00:09:15,330
have<font color="#E5E5E5"> this concept of an aes encrypt</font>

227
00:09:13,440 --> 00:09:17,880
function where you can encrypt data as a

228
00:09:15,330 --> 00:09:19,740
part of the query we'd have to wrap the

229
00:09:17,880 --> 00:09:21,960
<font color="#CCCCCC">rightist libraries basically to add that</font>

230
00:09:19,740 --> 00:09:25,530
kind<font color="#E5E5E5"> of functionality and</font><font color="#CCCCCC"> inter</font><font color="#E5E5E5"> it is</font>

231
00:09:21,960 --> 00:09:26,820
natively so these<font color="#E5E5E5"> are some real barriers</font>

232
00:09:25,530 --> 00:09:28,500
that you have to think<font color="#CCCCCC"> about if</font><font color="#E5E5E5"> you're</font>

233
00:09:26,820 --> 00:09:32,370
going to be deploying<font color="#CCCCCC"> read is in your</font>

234
00:09:28,500 --> 00:09:36,630
environment if you have<font color="#E5E5E5"> to comply with</font>

235
00:09:32,370 --> 00:09:38,310
any kind of audit or you know compliance

236
00:09:36,630 --> 00:09:40,260
guidelines how are<font color="#E5E5E5"> you going to be able</font>

237
00:09:38,310 --> 00:09:42,329
<font color="#CCCCCC">to an auditor that you can control who</font>

238
00:09:40,260 --> 00:09:45,350
accesses throughout this insulation

239
00:09:42,330 --> 00:09:50,610
there's<font color="#E5E5E5"> really no</font><font color="#CCCCCC"> way to do it with the</font>

240
00:09:45,350 --> 00:09:53,520
with<font color="#CCCCCC"> the part itself so an ideal</font>

241
00:09:50,610 --> 00:09:55,680
solution that would protect red is would

242
00:09:53,520 --> 00:09:59,760
encrypt all of our data at rest and in

243
00:09:55,680 --> 00:10:01,920
transit we could use SSL or TLS ideally

244
00:09:59,760 --> 00:10:03,240
<font color="#E5E5E5">it would support keyvaluepair encryption</font>

245
00:10:01,920 --> 00:10:04,770
so we could<font color="#CCCCCC"> actually encrypt the keys</font>

246
00:10:03,240 --> 00:10:07,140
when they're stored at the<font color="#E5E5E5"> database in</font>

247
00:10:04,770 --> 00:10:10,380
case someone bust the window and pulls

248
00:10:07,140 --> 00:10:12,000
the hard drive out of the server ideally

249
00:10:10,380 --> 00:10:14,310
would be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> authenticate our users</font>

250
00:10:12,000 --> 00:10:18,330
or just support user accounts in general

251
00:10:14,310 --> 00:10:21,180
and we support modular<font color="#CCCCCC"> indication so if</font>

252
00:10:18,330 --> 00:10:22,920
you're using ldap Kerberos<font color="#E5E5E5"> Active</font>

253
00:10:21,180 --> 00:10:24,839
<font color="#E5E5E5">Directory some sort of identity</font>

254
00:10:22,920 --> 00:10:26,099
management solution internally we should

255
00:10:24,840 --> 00:10:29,250
be able to integrate with that directly

256
00:10:26,100 --> 00:10:31,680
instead of you<font color="#CCCCCC"> know trying</font><font color="#E5E5E5"> to maintain</font>

257
00:10:29,250 --> 00:10:35,280
our own authentication<font color="#E5E5E5"> store we've got</font>

258
00:10:31,680 --> 00:10:38,910
<font color="#E5E5E5">to be able to log access if you can't</font>

259
00:10:35,280 --> 00:10:40,050
log who's taking what actions on<font color="#E5E5E5"> the</font>

260
00:10:38,910 --> 00:10:42,930
server you're going to have a hard time

261
00:10:40,050 --> 00:10:45,060
cleaning up after a breach or trying to

262
00:10:42,930 --> 00:10:48,089
prove that<font color="#E5E5E5"> the actual service itself is</font>

263
00:10:45,060 --> 00:10:50,219
secure and then being able to support

264
00:10:48,090 --> 00:10:52,140
<font color="#CCCCCC">rate limiting so one of the things</font>

265
00:10:50,220 --> 00:10:53,550
that's on the right of site is that if

266
00:10:52,140 --> 00:10:55,020
you're using<font color="#E5E5E5"> the off command they</font>

267
00:10:53,550 --> 00:10:57,810
recommend that you pick a very strong

268
00:10:55,020 --> 00:10:58,710
password because red<font color="#CCCCCC"> as focuses on</font>

269
00:10:57,810 --> 00:11:00,719
performance and

270
00:10:58,710 --> 00:11:03,090
simplicity which means that<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is very</font>

271
00:11:00,720 --> 00:11:06,000
<font color="#E5E5E5">easy to brute force the server</font><font color="#CCCCCC"> you can</font>

272
00:11:03,090 --> 00:11:08,910
send hundreds of thousands<font color="#E5E5E5"> of requests</font>

273
00:11:06,000 --> 00:11:09,930
to a red a server per minute and if

274
00:11:08,910 --> 00:11:12,150
you're working<font color="#E5E5E5"> against password</font>

275
00:11:09,930 --> 00:11:14,699
dictionary it's a pretty easy<font color="#E5E5E5"> to get</font>

276
00:11:12,150 --> 00:11:17,790
<font color="#E5E5E5">through that dictionary just due to the</font>

277
00:11:14,700 --> 00:11:20,060
<font color="#E5E5E5">speed of</font><font color="#CCCCCC"> the service itself so we need</font>

278
00:11:17,790 --> 00:11:22,980
to be<font color="#CCCCCC"> able to rate</font><font color="#E5E5E5"> limit these</font>

279
00:11:20,060 --> 00:11:26,520
authentication attempts against the

280
00:11:22,980 --> 00:11:29,940
server itself we also want to authorize

281
00:11:26,520 --> 00:11:31,890
all of our users so let's<font color="#E5E5E5"> just throw</font>

282
00:11:29,940 --> 00:11:34,260
<font color="#CCCCCC">away the idea of command renaming okay</font>

283
00:11:31,890 --> 00:11:36,060
that's not a good solution let's

284
00:11:34,260 --> 00:11:39,360
implement<font color="#CCCCCC"> sequels data control language</font>

285
00:11:36,060 --> 00:11:41,579
in a<font color="#E5E5E5"> key value space so being able to</font>

286
00:11:39,360 --> 00:11:43,620
allow specific users to run specific

287
00:11:41,580 --> 00:11:45,750
commands or allow specific users to

288
00:11:43,620 --> 00:11:48,120
access specific keys and let's be

289
00:11:45,750 --> 00:11:50,130
practical about this too let's not

290
00:11:48,120 --> 00:11:52,020
impose unnecessary performance or

291
00:11:50,130 --> 00:11:56,700
administrative burdens and let's try to

292
00:11:52,020 --> 00:12:00,390
be compatible<font color="#CCCCCC"> with native clients so in</font>

293
00:11:56,700 --> 00:12:02,280
my work and my own experience I<font color="#E5E5E5"> used</font>

294
00:12:00,390 --> 00:12:03,800
<font color="#E5E5E5">word us a lot</font><font color="#CCCCCC"> and kept coming into these</font>

295
00:12:02,280 --> 00:12:05,220
<font color="#CCCCCC">issues and so I went ahead and</font>

296
00:12:03,800 --> 00:12:07,650
<font color="#E5E5E5">implemented a proof-of-concept</font>

297
00:12:05,220 --> 00:12:09,750
<font color="#CCCCCC">Application Firewall paredes called</font>

298
00:12:07,650 --> 00:12:11,760
Sedona and what I tried to do is

299
00:12:09,750 --> 00:12:14,100
implement authentication authorization

300
00:12:11,760 --> 00:12:16,230
and encryption enhancements to the

301
00:12:14,100 --> 00:12:20,010
reddit score without having to<font color="#CCCCCC"> actually</font>

302
00:12:16,230 --> 00:12:22,080
change any of the source code don't is

303
00:12:20,010 --> 00:12:23,850
written in<font color="#E5E5E5"> Python it uses</font><font color="#CCCCCC"> the twisted</font>

304
00:12:22,080 --> 00:12:25,500
library and it basically acts as a proxy

305
00:12:23,850 --> 00:12:30,270
server for all<font color="#CCCCCC"> commands</font><font color="#E5E5E5"> that are going</font>

306
00:12:25,500 --> 00:12:32,400
<font color="#E5E5E5">into</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> red is installation so in terms</font>

307
00:12:30,270 --> 00:12:35,160
<font color="#E5E5E5">of authentication I've added a user</font>

308
00:12:32,400 --> 00:12:37,530
parameter to the authentication command

309
00:12:35,160 --> 00:12:39,089
so you can now specify a user and<font color="#E5E5E5"> the</font>

310
00:12:37,530 --> 00:12:41,640
password when you authenticate to a

311
00:12:39,090 --> 00:12:44,520
rightist server we've added support for

312
00:12:41,640 --> 00:12:46,199
modular authentication so if you have a

313
00:12:44,520 --> 00:12:47,640
back-end data source like Active

314
00:12:46,200 --> 00:12:50,700
Directory you can authenticate against

315
00:12:47,640 --> 00:12:53,069
that and the version that's<font color="#E5E5E5"> online right</font>

316
00:12:50,700 --> 00:12:55,290
now i'm using bcrypt as the

317
00:12:53,070 --> 00:12:59,880
authentication source well actually<font color="#E5E5E5"> does</font>

318
00:12:55,290 --> 00:13:01,219
store passwords themselves and then we

319
00:12:59,880 --> 00:13:03,060
also want to preserve our native<font color="#E5E5E5"> aw</font>

320
00:13:01,220 --> 00:13:04,950
functionality so if for some reason

321
00:13:03,060 --> 00:13:06,339
you've got some sort<font color="#CCCCCC"> of compatibility</font>

322
00:13:04,950 --> 00:13:08,649
issue where you want to

323
00:13:06,339 --> 00:13:10,300
use a single password we need to support

324
00:13:08,649 --> 00:13:14,829
<font color="#E5E5E5">that and that's a part of a program</font>

325
00:13:10,300 --> 00:13:16,240
right now<font color="#CCCCCC"> I also added authorization so</font>

326
00:13:14,829 --> 00:13:18,729
for each<font color="#E5E5E5"> one of those users we can</font>

327
00:13:16,240 --> 00:13:20,550
specify an access control list and we

328
00:13:18,730 --> 00:13:25,600
can authorize there's an individual

329
00:13:20,550 --> 00:13:28,059
requests on a command or keep key basis

330
00:13:25,600 --> 00:13:30,999
so<font color="#E5E5E5"> we can say that our network</font>

331
00:13:28,059 --> 00:13:33,370
administrators can run you know<font color="#CCCCCC"> shutdown</font>

332
00:13:30,999 --> 00:13:37,360
and flush but our developers can only

333
00:13:33,370 --> 00:13:39,370
get insect keys and similar to<font color="#E5E5E5"> sequel</font>

334
00:13:37,360 --> 00:13:41,079
with the data control language we can<font color="#E5E5E5"> go</font>

335
00:13:39,370 --> 00:13:44,019
in and allow specific users to access

336
00:13:41,079 --> 00:13:46,029
specific tables we can now go in and

337
00:13:44,019 --> 00:13:47,999
restrict users to<font color="#E5E5E5"> only access specific</font>

338
00:13:46,029 --> 00:13:50,980
types<font color="#E5E5E5"> of keys using regular expressions</font>

339
00:13:47,999 --> 00:13:53,939
and we can also accept and reject each

340
00:13:50,980 --> 00:13:56,529
one of these so similar<font color="#CCCCCC"> to an IP tables</font>

341
00:13:53,939 --> 00:13:58,930
set of firewall rules when we receive a

342
00:13:56,529 --> 00:14:01,149
command it goes through a list of ACLs

343
00:13:58,930 --> 00:14:03,609
and then either accepts or rejects that

344
00:14:01,149 --> 00:14:06,040
<font color="#E5E5E5">command based on ACLs passing Monta</font>

345
00:14:03,610 --> 00:14:09,160
<font color="#E5E5E5">dredges server or returning an error the</font>

346
00:14:06,040 --> 00:14:10,839
error and success messages<font color="#E5E5E5"> that are</font>

347
00:14:09,160 --> 00:14:12,550
returned<font color="#E5E5E5"> are using the native rebus</font>

348
00:14:10,839 --> 00:14:15,249
format so if you're using a<font color="#E5E5E5"> Python</font>

349
00:14:12,550 --> 00:14:16,628
<font color="#E5E5E5">library or a ruby library it'll just</font>

350
00:14:15,249 --> 00:14:18,009
interpret that command is coming

351
00:14:16,629 --> 00:14:19,929
straight<font color="#E5E5E5"> from the server there's no</font>

352
00:14:18,009 --> 00:14:23,189
changes that need to be made<font color="#CCCCCC"> to the</font>

353
00:14:19,929 --> 00:14:26,230
<font color="#E5E5E5">client libraries in order to use</font><font color="#CCCCCC"> it so</font>

354
00:14:23,189 --> 00:14:28,870
<font color="#CCCCCC">here's what an ACL looks like it's in</font>

355
00:14:26,230 --> 00:14:30,600
JSON and starting at the top you can see

356
00:14:28,870 --> 00:14:32,589
<font color="#E5E5E5">that when a command is first received</font>

357
00:14:30,600 --> 00:14:34,540
it's going to evaluate against that

358
00:14:32,589 --> 00:14:38,110
first rule which it checks to see if the

359
00:14:34,540 --> 00:14:40,149
<font color="#E5E5E5">command is the set command if it is it</font>

360
00:14:38,110 --> 00:14:42,339
<font color="#CCCCCC">will evaluate it if it matches that key</font>

361
00:14:40,149 --> 00:14:44,980
that's there<font color="#CCCCCC"> and if it will if it</font>

362
00:14:42,339 --> 00:14:47,350
matches that key it'll<font color="#E5E5E5"> accept it so this</font>

363
00:14:44,980 --> 00:14:49,360
would allow this user to write to any of

364
00:14:47,350 --> 00:14:52,839
the keys that<font color="#CCCCCC"> start with test and then</font>

365
00:14:49,360 --> 00:14:55,179
hyphen same thing forget when a user

366
00:14:52,839 --> 00:14:57,730
tries to run that<font color="#E5E5E5"> command it will accept</font>

367
00:14:55,179 --> 00:14:59,769
it and they can also run ping and echo

368
00:14:57,730 --> 00:15:01,360
<font color="#CCCCCC">that they wrote anything else it's going</font>

369
00:14:59,769 --> 00:15:02,529
to<font color="#E5E5E5"> reject a return an error message to</font>

370
00:15:01,360 --> 00:15:07,059
<font color="#CCCCCC">the client saying that that's not</font>

371
00:15:02,529 --> 00:15:11,410
authorized so in terms of encryption

372
00:15:07,059 --> 00:15:13,809
I've also added<font color="#E5E5E5"> SSL support and written</font>

373
00:15:11,410 --> 00:15:15,429
kind of a toy command-line tool it can

374
00:15:13,809 --> 00:15:16,449
be used<font color="#E5E5E5"> to connect to the rightist</font>

375
00:15:15,429 --> 00:15:19,449
server since some

376
00:15:16,449 --> 00:15:24,878
the<font color="#E5E5E5"> red CLI tool that comes with red is</font>

377
00:15:19,449 --> 00:15:27,008
in order to use the encryption so what

378
00:15:24,879 --> 00:15:28,480
are<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the use</font><font color="#CCCCCC"> cases well I already</font>

379
00:15:27,009 --> 00:15:30,819
mentioned this but we've got dev ops

380
00:15:28,480 --> 00:15:32,709
command site segregation you're off

381
00:15:30,819 --> 00:15:34,540
steam is going to need<font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to</font>

382
00:15:32,709 --> 00:15:36,429
shut down the database they're going to

383
00:15:34,540 --> 00:15:37,929
need<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> able to save the database and</font>

384
00:15:36,429 --> 00:15:40,779
change the configuration in case you're

385
00:15:37,929 --> 00:15:43,600
going into maintenance or have some need

386
00:15:40,779 --> 00:15:45,059
<font color="#CCCCCC">to move the server but your developers</font>

387
00:15:43,600 --> 00:15:47,139
don't need to be<font color="#E5E5E5"> doing that and</font>

388
00:15:45,059 --> 00:15:49,299
developers at the same time and need<font color="#CCCCCC"> to</font>

389
00:15:47,139 --> 00:15:51,429
<font color="#E5E5E5">be able to</font><font color="#CCCCCC"> access the data on</font><font color="#E5E5E5"> the</font>

390
00:15:49,299 --> 00:15:55,089
service but don't need to be<font color="#CCCCCC"> around</font>

391
00:15:51,429 --> 00:15:57,069
those commands the use<font color="#CCCCCC"> case are also key</font>

392
00:15:55,089 --> 00:15:59,169
key enforcement so we have to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able to</font>

393
00:15:57,069 --> 00:16:01,689
restrict specific users to specific

394
00:15:59,169 --> 00:16:04,480
parts of the of the<font color="#CCCCCC"> rightist database</font>

395
00:16:01,689 --> 00:16:06,879
and we can actually blacklist commands

396
00:16:04,480 --> 00:16:08,439
without having to rename them so stop

397
00:16:06,879 --> 00:16:10,119
trying<font color="#E5E5E5"> to write</font><font color="#CCCCCC"> down all those weird</font>

398
00:16:08,439 --> 00:16:11,949
commands that you've renamed we can

399
00:16:10,119 --> 00:16:15,850
<font color="#E5E5E5">actually allow users to use the commands</font>

400
00:16:11,949 --> 00:16:17,229
legitimately when they need to so in

401
00:16:15,850 --> 00:16:19,660
terms of some deployment strategies

402
00:16:17,230 --> 00:16:21,399
there's two ways to the point it can be

403
00:16:19,660 --> 00:16:25,209
in line or at the edge of a trusted

404
00:16:21,399 --> 00:16:26,769
environment if you're in line is<font color="#E5E5E5"> going</font>

405
00:16:25,209 --> 00:16:28,419
to be intercepting all the traffic which

406
00:16:26,769 --> 00:16:30,189
is great because you get<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> the</font>

407
00:16:28,419 --> 00:16:32,619
security benefits<font color="#CCCCCC"> the problem is you get</font>

408
00:16:30,189 --> 00:16:34,319
the performance impact of trying to all

409
00:16:32,619 --> 00:16:36,730
authorized and parse all those packets

410
00:16:34,319 --> 00:16:38,169
if you're following<font color="#CCCCCC"> the red</font><font color="#E5E5E5"> is model and</font>

411
00:16:36,730 --> 00:16:39,910
you have a trusted environment where you

412
00:16:38,169 --> 00:16:42,699
<font color="#E5E5E5">trust some of your users or not your</font>

413
00:16:39,910 --> 00:16:45,160
your your other set of users we can only

414
00:16:42,699 --> 00:16:46,719
intercept our untrusted traffic which is

415
00:16:45,160 --> 00:16:49,179
less secure because we're<font color="#CCCCCC"> still allowing</font>

416
00:16:46,720 --> 00:16:50,889
people unlimited access<font color="#E5E5E5"> to the data</font>

417
00:16:49,179 --> 00:16:54,970
store but there's<font color="#E5E5E5"> less of a performance</font>

418
00:16:50,889 --> 00:16:59,319
in<font color="#E5E5E5"> a performance impact now I've used</font>

419
00:16:54,970 --> 00:17:00,549
the P word twice on this slide you're

420
00:16:59,319 --> 00:17:03,279
probably<font color="#CCCCCC"> wondering what the performance</font>

421
00:17:00,549 --> 00:17:05,799
impact is especially with a service like

422
00:17:03,279 --> 00:17:08,769
red is that's solely focused<font color="#CCCCCC"> on being</font>

423
00:17:05,799 --> 00:17:10,720
fast and<font color="#E5E5E5"> reliable so we have two parts</font>

424
00:17:08,769 --> 00:17:12,250
every packet we have to authorize every

425
00:17:10,720 --> 00:17:13,539
packet and we have to track the state

426
00:17:12,250 --> 00:17:14,859
for those connections since we're

427
00:17:13,539 --> 00:17:17,609
allowing users to actually authenticate

428
00:17:14,859 --> 00:17:21,398
through this proxy and that incurs a

429
00:17:17,609 --> 00:17:23,799
significant performance penalty so here

430
00:17:21,398 --> 00:17:27,908
I've<font color="#CCCCCC"> got a graph of request transit</font>

431
00:17:23,799 --> 00:17:29,280
times to the Sedona server using the red

432
00:17:27,909 --> 00:17:32,400
as benchmark tool so

433
00:17:29,280 --> 00:17:35,430
those of you<font color="#CCCCCC"> who are familiar with this</font>

434
00:17:32,400 --> 00:17:39,480
tool it comes<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> res distribution</font>

435
00:17:35,430 --> 00:17:41,550
and basically allows you to run a series

436
00:17:39,480 --> 00:17:43,290
of commands against a server to stress

437
00:17:41,550 --> 00:17:46,260
test it and see what kind<font color="#E5E5E5"> of performance</font>

438
00:17:43,290 --> 00:17:47,850
metrics you get back on the right side

439
00:17:46,260 --> 00:17:49,200
with the key you'll see that the

440
00:17:47,850 --> 00:17:51,740
commands that<font color="#CCCCCC"> I was running we're set</font>

441
00:17:49,200 --> 00:17:54,060
get<font color="#CCCCCC"> L push and</font><font color="#E5E5E5"> L pop which are basically</font>

442
00:17:51,740 --> 00:17:57,180
just adding data to the<font color="#E5E5E5"> database and</font>

443
00:17:54,060 --> 00:17:58,320
<font color="#E5E5E5">then requesting it back and the way that</font>

444
00:17:57,180 --> 00:18:00,600
ever turns numbers is kind of

445
00:17:58,320 --> 00:18:03,990
interesting I'm not<font color="#CCCCCC"> sure how</font>

446
00:18:00,600 --> 00:18:05,610
statistically sound the tool is because

447
00:18:03,990 --> 00:18:07,170
it basically returns<font color="#CCCCCC"> 10 numbers and</font>

448
00:18:05,610 --> 00:18:09,959
splits all those requests into different

449
00:18:07,170 --> 00:18:11,970
buckets so you'll notice<font color="#CCCCCC"> that each one</font>

450
00:18:09,960 --> 00:18:13,980
<font color="#E5E5E5">of those dots on the graph is kind of in</font>

451
00:18:11,970 --> 00:18:16,800
an arbitrary location but what it's

452
00:18:13,980 --> 00:18:19,950
saying is if you look at the<font color="#CCCCCC"> x-axis</font><font color="#E5E5E5"> and</font>

453
00:18:16,800 --> 00:18:22,530
you find one of those values with the

454
00:18:19,950 --> 00:18:23,850
case of all those red get requests that

455
00:18:22,530 --> 00:18:26,790
are right up against the edge that's

456
00:18:23,850 --> 00:18:28,590
<font color="#CCCCCC">basically saying that</font><font color="#E5E5E5"> 95 to ninety-eight</font>

457
00:18:26,790 --> 00:18:31,710
<font color="#E5E5E5">percent of the get requests that we sent</font>

458
00:18:28,590 --> 00:18:34,770
<font color="#E5E5E5">to the server we're responded to in</font>

459
00:18:31,710 --> 00:18:35,700
about fifty two milliseconds so<font color="#E5E5E5"> for</font>

460
00:18:34,770 --> 00:18:37,950
those of you who have used whereas

461
00:18:35,700 --> 00:18:42,050
before you're probably thinking wow

462
00:18:37,950 --> 00:18:44,340
that's really really slow okay it is

463
00:18:42,050 --> 00:18:46,020
this is a proof of concept right<font color="#E5E5E5"> now the</font>

464
00:18:44,340 --> 00:18:48,480
only one that's using this and I'ma be

465
00:18:46,020 --> 00:18:50,820
using regular expressions which is a

466
00:18:48,480 --> 00:18:53,400
part<font color="#E5E5E5"> of the reason why it's so slow but</font>

467
00:18:50,820 --> 00:18:55,980
I am very<font color="#CCCCCC"> confident that</font><font color="#E5E5E5"> we can lower</font>

468
00:18:53,400 --> 00:18:58,800
this number so there<font color="#E5E5E5"> are some</font>

469
00:18:55,980 --> 00:19:02,010
performance implications but there's

470
00:18:58,800 --> 00:19:04,560
some major added security benefits so

471
00:19:02,010 --> 00:19:10,530
hopefully we can improve that<font color="#E5E5E5"> in the</font>

472
00:19:04,560 --> 00:19:12,149
future no this is just<font color="#CCCCCC"> a plain text so</font>

473
00:19:10,530 --> 00:19:13,680
now it got some demos<font color="#E5E5E5"> I'm gonna show you</font>

474
00:19:12,150 --> 00:19:17,450
the config files show you how to

475
00:19:13,680 --> 00:19:17,450
authenticate and authorize

476
00:19:29,570 --> 00:19:39,590
so first let me<font color="#CCCCCC"> show you some of these</font>

477
00:19:33,130 --> 00:19:42,830
config files so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the actual</font>

478
00:19:39,590 --> 00:19:46,520
config file for the service you'll see

479
00:19:42,830 --> 00:19:49,760
that<font color="#E5E5E5"> okay and basically it's in a ini</font>

480
00:19:46,520 --> 00:19:51,050
file where we can specify the<font color="#CCCCCC"> rightist</font>

481
00:19:49,760 --> 00:19:55,550
host that we're going to proxy

482
00:19:51,050 --> 00:19:57,860
connections to and then which serve it

483
00:19:55,550 --> 00:19:59,960
which port we want to advertise on this

484
00:19:57,860 --> 00:20:01,760
house so right now my reddit server is

485
00:19:59,960 --> 00:20:05,120
running on localhost and the<font color="#CCCCCC"> rightist</font>

486
00:20:01,760 --> 00:20:06,530
default port is 63 79 if we're going to

487
00:20:05,120 --> 00:20:10,189
advertise plain text we're going to

488
00:20:06,530 --> 00:20:13,580
<font color="#E5E5E5">listen on 6370 and then down here at the</font>

489
00:20:10,190 --> 00:20:16,360
bottom I've turned off ssl support right

490
00:20:13,580 --> 00:20:19,429
now but<font color="#E5E5E5"> that would be listening on 6371</font>

491
00:20:16,360 --> 00:20:21,469
we have required authentication which

492
00:20:19,430 --> 00:20:23,870
means<font color="#CCCCCC"> that you have</font><font color="#E5E5E5"> to off as a user</font>

493
00:20:21,470 --> 00:20:25,460
once you connect<font color="#E5E5E5"> to the service and</font>

494
00:20:23,870 --> 00:20:27,110
we're able to specify some stuff in<font color="#CCCCCC"> here</font>

495
00:20:25,460 --> 00:20:29,210
like for instance if you don't require

496
00:20:27,110 --> 00:20:31,129
authentication we can specify the

497
00:20:29,210 --> 00:20:32,840
default user which is the ACL that you

498
00:20:31,130 --> 00:20:34,400
get<font color="#E5E5E5"> dropped into as soon as you get to</font>

499
00:20:32,840 --> 00:20:35,449
<font color="#E5E5E5">the service so if you have someone that</font>

500
00:20:34,400 --> 00:20:36,620
wants<font color="#E5E5E5"> to connect to the service and</font>

501
00:20:35,450 --> 00:20:39,050
maybe<font color="#CCCCCC"> run the ping command which is</font>

502
00:20:36,620 --> 00:20:43,189
<font color="#E5E5E5">really not that malicious they can do so</font>

503
00:20:39,050 --> 00:20:46,790
under that ACL to give<font color="#E5E5E5"> you an</font><font color="#CCCCCC"> idea for</font>

504
00:20:43,190 --> 00:20:48,440
what<font color="#E5E5E5"> those acl's look like this is the</font>

505
00:20:46,790 --> 00:20:50,570
config file that we're going<font color="#E5E5E5"> to run in</font>

506
00:20:48,440 --> 00:20:54,050
the demo I've got<font color="#CCCCCC"> two users are</font>

507
00:20:50,570 --> 00:20:56,389
specified here the guest user which is

508
00:20:54,050 --> 00:20:58,700
not allowed to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> anything everything</font>

509
00:20:56,390 --> 00:21:02,360
<font color="#E5E5E5">gets rejected or the test user which</font>

510
00:20:58,700 --> 00:21:04,910
once you authenticate basically you're

511
00:21:02,360 --> 00:21:08,060
stuck with all those ACLs that are

512
00:21:04,910 --> 00:21:11,690
listed there we can run set get ping

513
00:21:08,060 --> 00:21:17,300
echo and reject the auth required all

514
00:21:11,690 --> 00:21:19,430
simple basically there's much of plugins

515
00:21:17,300 --> 00:21:20,899
that<font color="#E5E5E5"> are built into the program so if</font>

516
00:21:19,430 --> 00:21:22,220
you<font color="#E5E5E5"> had a plug into the database all you</font>

517
00:21:20,900 --> 00:21:23,960
need to do<font color="#CCCCCC"> is put the plugin name there</font>

518
00:21:22,220 --> 00:21:27,800
and it'll automatically start using that

519
00:21:23,960 --> 00:21:30,230
and pass any of the values that match

520
00:21:27,800 --> 00:21:32,180
off and then whatever<font color="#E5E5E5"> that value is</font>

521
00:21:30,230 --> 00:21:35,030
straight into that module so it's very

522
00:21:32,180 --> 00:21:36,710
easy<font color="#E5E5E5"> to add support</font><font color="#CCCCCC"> for additional</font>

523
00:21:35,030 --> 00:21:39,830
authentication sources if you want to do

524
00:21:36,710 --> 00:21:42,279
so so what<font color="#E5E5E5"> I'm going to do first is I'm</font>

525
00:21:39,830 --> 00:21:43,718
going to launch the service

526
00:21:42,279 --> 00:21:47,580
so we get the firewall prompt and you'll

527
00:21:43,719 --> 00:21:50,349
see<font color="#E5E5E5"> right here that it's running and</font>

528
00:21:47,580 --> 00:21:51,849
first before we connect through the

529
00:21:50,349 --> 00:21:53,529
<font color="#CCCCCC">Sedona service i'm going to connect</font>

530
00:21:51,849 --> 00:21:58,019
straight into the res database so we can

531
00:21:53,529 --> 00:21:58,019
<font color="#E5E5E5">run some commands and do some stuff so</font>

532
00:21:58,710 --> 00:22:05,139
caching is using the Redis CLI tool I

533
00:22:02,469 --> 00:22:10,320
<font color="#E5E5E5">can go ahead and set any key that I want</font>

534
00:22:05,139 --> 00:22:15,488
so I can set my dog's name to Henry I

535
00:22:10,320 --> 00:22:20,168
can set my dog's age 24 and then I can

536
00:22:15,489 --> 00:22:22,989
<font color="#CCCCCC">go in and delete those keys so there's</font>

537
00:22:20,169 --> 00:22:25,419
nothing<font color="#E5E5E5"> to</font><font color="#CCCCCC"> prevent</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> from taking any</font>

538
00:22:22,989 --> 00:22:34,450
kind<font color="#E5E5E5"> of malicious action like let's say</font>

539
00:22:25,419 --> 00:22:35,499
flush huh there we go so there's<font color="#CCCCCC"> nothing</font>

540
00:22:34,450 --> 00:22:38,820
<font color="#E5E5E5">to prevent me</font><font color="#CCCCCC"> from running those</font>

541
00:22:35,499 --> 00:22:45,669
commands<font color="#E5E5E5"> on service all those keys are</font>

542
00:22:38,820 --> 00:22:48,189
gone<font color="#CCCCCC"> okay so let's go in and let's set</font>

543
00:22:45,669 --> 00:22:52,210
some values under that test key so let's

544
00:22:48,190 --> 00:22:58,599
<font color="#E5E5E5">just set a test name to will and test</font>

545
00:22:52,210 --> 00:23:01,389
age 226<font color="#E5E5E5"> okay so we've set some values we</font>

546
00:22:58,599 --> 00:23:04,509
<font color="#CCCCCC">can get those that works great very cool</font>

547
00:23:01,389 --> 00:23:06,668
let's also run the ping command so we

548
00:23:04,509 --> 00:23:10,719
say ping<font color="#CCCCCC"> your that goes back pong and if</font>

549
00:23:06,669 --> 00:23:11,649
we say echo hi we get high back<font color="#CCCCCC"> okay so</font>

550
00:23:10,719 --> 00:23:12,729
that's some of the functionality of

551
00:23:11,649 --> 00:23:14,289
bread is but there's nothing to prevent

552
00:23:12,729 --> 00:23:16,629
<font color="#CCCCCC">us from running any of those malicious</font>

553
00:23:14,289 --> 00:23:17,919
commands that we<font color="#CCCCCC"> mentioned earlier so</font>

554
00:23:16,629 --> 00:23:19,178
we're going<font color="#E5E5E5"> to exit and we're going to</font>

555
00:23:17,919 --> 00:23:21,969
change the port so we connect through

556
00:23:19,179 --> 00:23:24,969
<font color="#E5E5E5">the proxy you notice</font><font color="#CCCCCC"> that it comes right</font>

557
00:23:21,969 --> 00:23:27,070
up and let's say ping and it says you

558
00:23:24,969 --> 00:23:30,820
must stop<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the Cape first so can't run</font>

559
00:23:27,070 --> 00:23:33,249
echo and<font color="#CCCCCC"> Contra and shut</font><font color="#E5E5E5"> down so that's</font>

560
00:23:30,820 --> 00:23:35,799
great so remember we / rode the off

561
00:23:33,249 --> 00:23:37,779
command so my type off test and<font color="#CCCCCC"> then I'm</font>

562
00:23:35,799 --> 00:23:41,080
gonna use my secret password of tests

563
00:23:37,779 --> 00:23:43,629
and it's going to authenticate us so now

564
00:23:41,080 --> 00:23:47,199
this context is using the test user name

565
00:23:43,629 --> 00:23:49,779
and password I can run paying I let's

566
00:23:47,200 --> 00:23:52,989
run<font color="#CCCCCC"> shutdown not authorized</font><font color="#E5E5E5"> to run shut</font>

567
00:23:49,779 --> 00:23:54,690
down and let's go in and get some of

568
00:23:52,989 --> 00:23:57,690
those keys that we wanted<font color="#CCCCCC"> to</font>

569
00:23:54,690 --> 00:24:01,700
so<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> access test name or I can</font>

570
00:23:57,690 --> 00:24:05,490
<font color="#CCCCCC">access test age but if I try</font><font color="#E5E5E5"> to get dog</font>

571
00:24:01,700 --> 00:24:08,490
I'm not authorized get on that specific

572
00:24:05,490 --> 00:24:11,700
key so even though i can run get on some

573
00:24:08,490 --> 00:24:13,950
keys I can't<font color="#E5E5E5"> run them</font><font color="#CCCCCC"> on all keys so the</font>

574
00:24:11,700 --> 00:24:15,630
advantage of this is that we don't my

575
00:24:13,950 --> 00:24:17,520
ipod<font color="#CCCCCC"> the rightist core you can</font><font color="#E5E5E5"> still use</font>

576
00:24:15,630 --> 00:24:18,720
<font color="#CCCCCC">all the great function is built into</font>

577
00:24:17,520 --> 00:24:21,060
<font color="#CCCCCC">right us in terms of clustering</font>

578
00:24:18,720 --> 00:24:22,410
publish-subscribe and the other features

579
00:24:21,060 --> 00:24:25,350
<font color="#E5E5E5">that you need for a high performance</font>

580
00:24:22,410 --> 00:24:27,570
data datastore but if you're accessing

581
00:24:25,350 --> 00:24:28,770
this from an untrusted source you get

582
00:24:27,570 --> 00:24:32,700
all these advantage of being able to

583
00:24:28,770 --> 00:24:37,460
authorize and authenticate your users so

584
00:24:32,700 --> 00:24:37,460
um to wrap up

585
00:24:44,450 --> 00:24:49,730
I've read<font color="#E5E5E5"> a tool that allows</font><font color="#CCCCCC"> us to add</font>

586
00:24:47,450 --> 00:24:52,270
additional security<font color="#E5E5E5"> Titus installations</font>

587
00:24:49,730 --> 00:24:56,900
it requires no changes to the core and

588
00:24:52,270 --> 00:24:59,060
allows you to secure red is in some

589
00:24:56,900 --> 00:25:02,510
specific use cases with a performance

590
00:24:59,060 --> 00:25:05,750
penalty and this tool is open source it

591
00:25:02,510 --> 00:25:08,210
is<font color="#E5E5E5"> on my github page please go and fork</font>

592
00:25:05,750 --> 00:25:11,210
it and if you<font color="#E5E5E5"> find this useful please</font>

593
00:25:08,210 --> 00:25:14,960
contribute because I don't<font color="#E5E5E5"> really</font><font color="#CCCCCC"> have a</font>

594
00:25:11,210 --> 00:25:16,550
use case for this<font color="#E5E5E5"> in my day job but it's</font>

595
00:25:14,960 --> 00:25:18,470
something<font color="#E5E5E5"> that I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> retta's would</font>

596
00:25:16,550 --> 00:25:21,740
benefit from because it has such a large

597
00:25:18,470 --> 00:25:23,510
user community so if you want you can

598
00:25:21,740 --> 00:25:25,160
use<font color="#E5E5E5"> this key o @ QR code to get</font><font color="#CCCCCC"> access</font>

599
00:25:23,510 --> 00:25:27,950
to the github page or you can follow<font color="#E5E5E5"> me</font>

600
00:25:25,160 --> 00:25:29,360
on<font color="#CCCCCC"> Twitter that's all that I have right</font>

601
00:25:27,950 --> 00:25:32,360
now<font color="#E5E5E5"> though so I want to</font><font color="#CCCCCC"> open it</font><font color="#E5E5E5"> up for</font>

602
00:25:29,360 --> 00:25:39,770
Q&A or we can do some more demos if you

603
00:25:32,360 --> 00:25:41,540
all would like to check the client

604
00:25:39,770 --> 00:25:48,860
libraries calligraphy and all these

605
00:25:41,540 --> 00:25:52,370
things sure so what it does in the

606
00:25:48,860 --> 00:25:54,590
source<font color="#CCCCCC"> code is it the way that in the</font>

607
00:25:52,370 --> 00:25:56,060
reddest protocol itself you send a

608
00:25:54,590 --> 00:25:57,770
command and<font color="#E5E5E5"> then you specify the number</font>

609
00:25:56,060 --> 00:25:59,389
of arguments that are after that command

610
00:25:57,770 --> 00:26:01,190
and it looks at the number<font color="#E5E5E5"> of arguments</font>

611
00:25:59,390 --> 00:26:03,200
to determine whether<font color="#CCCCCC"> or</font><font color="#E5E5E5"> not to use the</font>

612
00:26:01,190 --> 00:26:06,770
off command or to fail back to the old

613
00:26:03,200 --> 00:26:08,270
the old off<font color="#E5E5E5"> command itself if you are</font>

614
00:26:06,770 --> 00:26:09,500
following back to the old off command<font color="#E5E5E5"> it</font>

615
00:26:08,270 --> 00:26:12,110
passes that straight through to<font color="#CCCCCC"> the</font>

616
00:26:09,500 --> 00:26:14,300
server as long as<font color="#E5E5E5"> it passes they CL you</font>

617
00:26:12,110 --> 00:26:17,229
can actually<font color="#CCCCCC"> use the ACL select band off</font>

618
00:26:14,300 --> 00:26:19,639
command<font color="#E5E5E5"> if you really want</font><font color="#CCCCCC"> to so and</font>

619
00:26:17,230 --> 00:26:21,050
that's one of the<font color="#E5E5E5"> advantages of it is</font>

620
00:26:19,640 --> 00:26:22,190
that you know you're authorizing all

621
00:26:21,050 --> 00:26:24,290
those commands before you get to the

622
00:26:22,190 --> 00:26:26,600
server so<font color="#E5E5E5"> you can really customize it</font>

623
00:26:24,290 --> 00:26:29,180
however you want to there's actually a

624
00:26:26,600 --> 00:26:31,669
blog post on ycombinator this week<font color="#E5E5E5"> about</font>

625
00:26:29,180 --> 00:26:33,290
someone went through and showed how easy

626
00:26:31,670 --> 00:26:34,730
it was to add custom commands to<font color="#CCCCCC"> the</font>

627
00:26:33,290 --> 00:26:37,280
reddit score if you want to have a

628
00:26:34,730 --> 00:26:39,680
command called who am<font color="#E5E5E5"> i or if you want</font>

629
00:26:37,280 --> 00:26:42,379
<font color="#CCCCCC">to add your own data type it's pretty</font>

630
00:26:39,680 --> 00:26:44,360
trivial to do so and so the<font color="#E5E5E5"> advantage of</font>

631
00:26:42,380 --> 00:26:46,910
this<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> I don't have</font><font color="#CCCCCC"> like a list of</font>

632
00:26:44,360 --> 00:26:48,580
valid Redis commands auth is the only

633
00:26:46,910 --> 00:26:52,430
command that has that<font color="#E5E5E5"> special</font>

634
00:26:48,580 --> 00:26:52,820
stipulation so if you modify the core to

635
00:26:52,430 --> 00:26:55,399
add addition

636
00:26:52,820 --> 00:27:07,460
functionality it should it should work

637
00:26:55,399 --> 00:27:09,139
fine cool all right well if<font color="#E5E5E5"> you all have</font>

638
00:27:07,460 --> 00:27:12,190
any questions I'm available but thanks

639
00:27:09,139 --> 00:27:12,189
for coming<font color="#E5E5E5"> in I really appreciate</font><font color="#CCCCCC"> it</font>

