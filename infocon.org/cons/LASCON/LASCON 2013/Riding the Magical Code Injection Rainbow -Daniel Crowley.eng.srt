1
00:00:16,309 --> 00:00:21,710
<font color="#E5E5E5">alright so welcome</font><font color="#CCCCCC"> to welcome to</font><font color="#E5E5E5"> our</font>

2
00:00:20,240 --> 00:00:26,988
presentation this is<font color="#E5E5E5"> called riding the</font>

3
00:00:21,710 --> 00:00:29,449
magical code injection rainbow so thank

4
00:00:26,989 --> 00:00:35,449
you I made them myself the pictures and

5
00:00:29,449 --> 00:00:37,970
everything so so we're going<font color="#E5E5E5"> to be</font>

6
00:00:35,449 --> 00:00:40,910
talking about the magical code injection

7
00:00:37,970 --> 00:00:43,070
rainbow which is what we believe is the

8
00:00:40,910 --> 00:00:46,640
next generation in intentionally

9
00:00:43,070 --> 00:00:50,659
vulnerable web applications and<font color="#E5E5E5"> CC why</font>

10
00:00:46,640 --> 00:00:52,190
very soon while we're setting up please

11
00:00:50,659 --> 00:00:56,930
direct your<font color="#E5E5E5"> attention to the important</font>

12
00:00:52,190 --> 00:01:00,769
diagram on the on the board there that

13
00:00:56,930 --> 00:01:02,150
will be on the<font color="#E5E5E5"> test right they have the</font>

14
00:01:00,769 --> 00:01:04,158
further you go up because that's where

15
00:01:02,150 --> 00:01:06,170
the<font color="#E5E5E5"> horn is at the top right and that's</font>

16
00:01:04,159 --> 00:01:07,790
<font color="#E5E5E5">the focus of both the magic and</font><font color="#CCCCCC"> the</font>

17
00:01:06,170 --> 00:01:10,930
<font color="#E5E5E5">awesome it's like right at the tip of</font>

18
00:01:07,790 --> 00:01:13,580
the horn which is why the horn makes a

19
00:01:10,930 --> 00:01:17,509
unicorn so much more magical than just a

20
00:01:13,580 --> 00:01:19,490
regular horse so and taller yeah

21
00:01:17,509 --> 00:01:22,280
giraffes also have a lot of magic right

22
00:01:19,490 --> 00:01:25,490
around there that's why the black tongue

23
00:01:22,280 --> 00:01:29,060
right giraffes have black tongues yeah

24
00:01:25,490 --> 00:01:30,679
just<font color="#E5E5E5"> reach on up there</font><font color="#CCCCCC"> mmm eat some</font>

25
00:01:29,060 --> 00:01:34,159
leaves with my black tongue hey all

26
00:01:30,679 --> 00:01:35,869
right slides<font color="#CCCCCC"> okay so who are we are we</font>

27
00:01:34,159 --> 00:01:39,170
we already had a marvelous introduction

28
00:01:35,869 --> 00:01:42,770
here so I think<font color="#E5E5E5"> we can skip over that a</font>

29
00:01:39,170 --> 00:01:44,899
little bit but like I<font color="#CCCCCC"> said I work</font>

30
00:01:42,770 --> 00:01:46,850
<font color="#CCCCCC">Trustwave senior security consultant I</font>

31
00:01:44,899 --> 00:01:50,569
wrote most of the stuff of the magical

32
00:01:46,850 --> 00:01:52,460
code injection rainbow and that I'm

33
00:01:50,569 --> 00:01:58,249
Andrew I I contributed that one project

34
00:01:52,460 --> 00:01:59,689
Krypton<font color="#E5E5E5"> v and i also love ponies so what</font>

35
00:01:58,249 --> 00:02:03,079
what is the magical code injection

36
00:01:59,689 --> 00:02:07,428
rainbow the magical co-injection rainbow

37
00:02:03,079 --> 00:02:09,500
is a framework for building configurable

38
00:02:07,429 --> 00:02:11,180
<font color="#E5E5E5">vulnerable applications but more</font><font color="#CCCCCC"> than</font>

39
00:02:09,500 --> 00:02:15,530
<font color="#CCCCCC">that is also</font><font color="#E5E5E5"> a series of configurable</font>

40
00:02:11,180 --> 00:02:18,140
vulnerable applications so the idea

41
00:02:15,530 --> 00:02:21,650
behind<font color="#E5E5E5"> it was that we</font><font color="#CCCCCC"> just create a lot</font>

42
00:02:18,140 --> 00:02:23,299
of<font color="#E5E5E5"> things that that you see out in the</font>

43
00:02:21,650 --> 00:02:25,280
<font color="#E5E5E5">real world</font><font color="#CCCCCC"> so like with SQL injection or</font>

44
00:02:23,300 --> 00:02:27,890
with cross-site scripting there's this

45
00:02:25,280 --> 00:02:29,940
is the basic concept but a lot of<font color="#E5E5E5"> times</font>

46
00:02:27,890 --> 00:02:32,790
the actual exploitation varies

47
00:02:29,940 --> 00:02:34,290
<font color="#E5E5E5">in different different applications and</font>

48
00:02:32,790 --> 00:02:36,049
the problem with a<font color="#CCCCCC"> lot of the test beds</font>

49
00:02:34,290 --> 00:02:38,790
that are currently<font color="#CCCCCC"> out there is it's</font>

50
00:02:36,050 --> 00:02:40,290
<font color="#CCCCCC">just pretty much designed to do one type</font>

51
00:02:38,790 --> 00:02:42,090
of exploitation like with the SQL

52
00:02:40,290 --> 00:02:43,109
injections<font color="#E5E5E5"> it's you're usually injecting</font>

53
00:02:42,090 --> 00:02:45,180
into a where<font color="#CCCCCC"> clause Oh with like a</font>

54
00:02:43,110 --> 00:02:46,140
<font color="#E5E5E5">single quote it's not</font><font color="#CCCCCC"> going to know how</font>

55
00:02:45,180 --> 00:02:47,520
<font color="#E5E5E5">to handle like you know things like</font>

56
00:02:46,140 --> 00:02:48,869
blacklisting or if you're injecting into

57
00:02:47,520 --> 00:02:50,520
like a delete statement or if you're

58
00:02:48,870 --> 00:02:52,500
injecting with you know double quotes or

59
00:02:50,520 --> 00:02:54,450
things like that so we wanted to create

60
00:02:52,500 --> 00:02:55,740
some sort of testing that that allows

61
00:02:54,450 --> 00:02:56,489
you<font color="#E5E5E5"> to configure these things and allows</font>

62
00:02:55,740 --> 00:03:00,810
you to configure it for different

63
00:02:56,490 --> 00:03:03,840
scenarios and give you the ability to to

64
00:03:00,810 --> 00:03:05,940
test for things<font color="#CCCCCC"> that even</font><font color="#E5E5E5"> we didn't even</font>

65
00:03:03,840 --> 00:03:07,020
consider and being able to add you know

66
00:03:05,940 --> 00:03:09,510
different parameters you can<font color="#E5E5E5"> turn</font><font color="#CCCCCC"> off</font>

67
00:03:07,020 --> 00:03:10,680
things like<font color="#E5E5E5"> error verbosity so a lot of</font>

68
00:03:09,510 --> 00:03:12,030
applications don't really happen<font color="#CCCCCC"> both</font>

69
00:03:10,680 --> 00:03:13,470
<font color="#CCCCCC">days you don't necessarily</font><font color="#E5E5E5"> know what's</font>

70
00:03:12,030 --> 00:03:15,240
going<font color="#E5E5E5"> on in the back end or that the</font>

71
00:03:13,470 --> 00:03:18,690
thing is vulnerable right away and so

72
00:03:15,240 --> 00:03:20,970
<font color="#E5E5E5">this allows you to go ahead and test and</font>

73
00:03:18,690 --> 00:03:22,380
know that it's vulnerable and see what

74
00:03:20,970 --> 00:03:30,240
you can sort<font color="#E5E5E5"> of do to prove</font><font color="#CCCCCC"> that it's</font>

75
00:03:22,380 --> 00:03:32,190
horrible so there had to be a reason<font color="#E5E5E5"> for</font>

76
00:03:30,240 --> 00:03:33,630
us to make<font color="#CCCCCC"> this right</font><font color="#E5E5E5"> not just so that</font>

77
00:03:32,190 --> 00:03:36,650
we could you know<font color="#E5E5E5"> actually have a</font>

78
00:03:33,630 --> 00:03:39,870
project to go with these amazing names

79
00:03:36,650 --> 00:03:41,580
so there there's or there's already a

80
00:03:39,870 --> 00:03:44,370
lot of vulnerable applications out there

81
00:03:41,580 --> 00:03:46,080
there's<font color="#E5E5E5"> plenty you know I'm</font><font color="#CCCCCC"> sure all of</font>

82
00:03:44,370 --> 00:03:47,790
<font color="#E5E5E5">you have your favorites and hopefully by</font>

83
00:03:46,080 --> 00:03:50,239
the time you walk<font color="#CCCCCC"> away the magical code</font>

84
00:03:47,790 --> 00:03:53,760
injection rainbow will be your favorite

85
00:03:50,239 --> 00:03:57,000
maybe if I<font color="#E5E5E5"> ask really nice so there's</font>

86
00:03:53,760 --> 00:03:59,100
CTF style test beds so it's<font color="#E5E5E5"> just a</font>

87
00:03:57,000 --> 00:04:01,800
series<font color="#CCCCCC"> of challenges usually in like a</font>

88
00:03:59,100 --> 00:04:03,480
linear format or like in a sort of

89
00:04:01,800 --> 00:04:05,040
Jeopardy style format where you have

90
00:04:03,480 --> 00:04:08,518
multiple lines or just sort of like pick

91
00:04:05,040 --> 00:04:10,650
<font color="#E5E5E5">one and go type of thing and the idea</font><font color="#CCCCCC"> is</font>

92
00:04:08,519 --> 00:04:12,989
just to get through all of them and I

93
00:04:10,650 --> 00:04:14,160
know that's<font color="#E5E5E5"> sort of you</font><font color="#CCCCCC"> know you</font><font color="#E5E5E5"> learn</font>

94
00:04:12,989 --> 00:04:17,160
something<font color="#CCCCCC"> from each challenge but it's</font>

95
00:04:14,160 --> 00:04:19,560
<font color="#E5E5E5">something some highly specific scenario</font>

96
00:04:17,160 --> 00:04:21,900
usually one of<font color="#E5E5E5"> my favorite CTF</font>

97
00:04:19,560 --> 00:04:23,669
challenges which is hella contrived but

98
00:04:21,899 --> 00:04:27,750
still awesome is that you have to<font color="#CCCCCC"> write</font>

99
00:04:23,669 --> 00:04:30,840
to brain<font color="#E5E5E5"> fuss programs which output to</font>

100
00:04:27,750 --> 00:04:35,280
different specific strings and which

101
00:04:30,840 --> 00:04:37,770
both have the same md5 hash and this is

102
00:04:35,280 --> 00:04:39,719
awesomely hard and rewarding but it's

103
00:04:37,770 --> 00:04:40,460
also a pain in the ass because writing

104
00:04:39,720 --> 00:04:45,740
anything in brain

105
00:04:40,460 --> 00:04:47,120
is just terrible so anyway but CTFs are

106
00:04:45,740 --> 00:04:48,889
fun they're great and they have their

107
00:04:47,120 --> 00:04:50,900
place and then you have test beds which

108
00:04:48,889 --> 00:04:53,599
are just sort of like off you know

109
00:04:50,900 --> 00:04:55,638
things to play with a non competitive

110
00:04:53,599 --> 00:04:58,460
atmosphere and you have sort of

111
00:04:55,639 --> 00:05:00,199
realistic ones where like victim where

112
00:04:58,460 --> 00:05:02,120
it simulates a real web application with

113
00:05:00,199 --> 00:05:03,530
an actual purpose and it has<font color="#E5E5E5"> boner</font>

114
00:05:02,120 --> 00:05:05,240
abilities built into it which you first

115
00:05:03,530 --> 00:05:07,400
have to find and then<font color="#E5E5E5"> have to exploit</font>

116
00:05:05,240 --> 00:05:08,599
<font color="#CCCCCC">then you have more contrived ones where</font>

117
00:05:07,400 --> 00:05:09,620
it's less about finding the

118
00:05:08,599 --> 00:05:11,360
vulnerabilities and more about

119
00:05:09,620 --> 00:05:13,580
exploitation something like a web good

120
00:05:11,360 --> 00:05:15,500
<font color="#E5E5E5">something</font><font color="#CCCCCC"> like a DV wa where it may even</font>

121
00:05:13,580 --> 00:05:18,050
tell you here's what you need to do to

122
00:05:15,500 --> 00:05:21,979
exploit it and your job is just to do it

123
00:05:18,050 --> 00:05:24,139
so we chose<font color="#CCCCCC"> to make em cir in sort of</font>

124
00:05:21,979 --> 00:05:25,849
the contrived version where you're just

125
00:05:24,139 --> 00:05:27,320
presented with an idea of what you're

126
00:05:25,849 --> 00:05:30,560
going after and<font color="#E5E5E5"> you just have to figure</font>

127
00:05:27,320 --> 00:05:32,090
out<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to do it but there are lots</font><font color="#E5E5E5"> of</font>

128
00:05:30,560 --> 00:05:35,030
<font color="#E5E5E5">these out there there are more than 50</font>

129
00:05:32,090 --> 00:05:39,289
just for web applications alone you know

130
00:05:35,030 --> 00:05:41,508
I think<font color="#E5E5E5"> there was</font><font color="#CCCCCC"> a presentation about</font>

131
00:05:39,289 --> 00:05:43,639
one a new one of<font color="#E5E5E5"> these called</font><font color="#CCCCCC"> rails coat</font>

132
00:05:41,509 --> 00:05:47,090
or maybe it's not<font color="#E5E5E5"> new but one of them</font>

133
00:05:43,639 --> 00:05:49,150
for attacking Ruby on Rails so you know

134
00:05:47,090 --> 00:05:52,130
there's there's an example<font color="#CCCCCC"> right there</font>

135
00:05:49,150 --> 00:05:53,270
and then their intent unintentionally

136
00:05:52,130 --> 00:05:54,800
vulnerable you know real world

137
00:05:53,270 --> 00:05:57,320
applications where somebody just made a

138
00:05:54,800 --> 00:06:00,020
dumb mistake and opened up<font color="#E5E5E5"> the</font>

139
00:05:57,320 --> 00:06:04,270
<font color="#CCCCCC">floodgates right there's</font><font color="#E5E5E5"> more of these</font>

140
00:06:00,020 --> 00:06:04,270
than I can count there's a<font color="#E5E5E5"> lot of them</font>

141
00:06:05,110 --> 00:06:09,560
some of<font color="#E5E5E5"> the limitations that a lot of</font>

142
00:06:08,360 --> 00:06:11,270
<font color="#CCCCCC">those test beds that are out there have</font>

143
00:06:09,560 --> 00:06:12,320
or even the potentially vulnerable web

144
00:06:11,270 --> 00:06:14,960
apps is they'll just a lack of

145
00:06:12,320 --> 00:06:17,360
<font color="#E5E5E5">particular ability like I said there's a</font>

146
00:06:14,960 --> 00:06:18,500
lot of times they give you a verbose

147
00:06:17,360 --> 00:06:20,509
output they'll give you a stack trace

148
00:06:18,500 --> 00:06:22,639
that's not that's true in a lot of rural

149
00:06:20,509 --> 00:06:26,120
applications but it's also true in a<font color="#CCCCCC"> lot</font>

150
00:06:22,639 --> 00:06:27,469
that are it's also natural and so this

151
00:06:26,120 --> 00:06:28,669
sort<font color="#E5E5E5"> of gives you that opportunity to</font>

152
00:06:27,469 --> 00:06:31,880
sort of figure out<font color="#E5E5E5"> what to do if you're</font>

153
00:06:28,669 --> 00:06:35,810
not provided with the answer in in the

154
00:06:31,880 --> 00:06:37,490
response<font color="#CCCCCC"> it's and</font><font color="#E5E5E5"> it's usually</font><font color="#CCCCCC"> just a</font>

155
00:06:35,810 --> 00:06:38,630
very simple manifestation within the

156
00:06:37,490 --> 00:06:40,060
application like I said<font color="#CCCCCC"> with the</font>

157
00:06:38,630 --> 00:06:42,740
cross-site scripting<font color="#E5E5E5"> dvw a for example</font>

158
00:06:40,060 --> 00:06:44,419
<font color="#E5E5E5">you</font><font color="#CCCCCC"> just yo you're just putting a simple</font>

159
00:06:42,740 --> 00:06:45,800
script tag into an input field or you're

160
00:06:44,419 --> 00:06:47,780
just injecting into the where clause or

161
00:06:45,800 --> 00:06:48,949
one equals one a lot of times<font color="#E5E5E5"> that works</font>

162
00:06:47,780 --> 00:06:49,969
a lot of times that does and what

163
00:06:48,949 --> 00:06:51,460
happens if you run into a more

164
00:06:49,969 --> 00:06:52,599
complicated sequel injection

165
00:06:51,460 --> 00:06:54,930
or more complicated cross-site scripting

166
00:06:52,600 --> 00:06:57,270
attack that's using like blacklisting or

167
00:06:54,930 --> 00:06:59,710
filtering of<font color="#E5E5E5"> some kind things like that</font>

168
00:06:57,270 --> 00:07:02,289
and so this sort<font color="#E5E5E5"> of really provides the</font>

169
00:06:59,710 --> 00:07:04,239
opportunity to branch out and exploit

170
00:07:02,289 --> 00:07:06,310
scenarios that are common but not

171
00:07:04,240 --> 00:07:07,750
necessarily brought about in a lot<font color="#CCCCCC"> of</font>

172
00:07:06,310 --> 00:07:10,150
the other vulnerable test beds that are

173
00:07:07,750 --> 00:07:13,419
there out there and<font color="#E5E5E5"> sometimes there's</font>

174
00:07:10,150 --> 00:07:16,900
just no way to debug your attack and

175
00:07:13,419 --> 00:07:19,299
with crypto mg or I'm sorry<font color="#E5E5E5"> with sq LOL</font>

176
00:07:16,900 --> 00:07:20,830
it's just a simple parameter like okay

177
00:07:19,300 --> 00:07:22,870
I'm not exactly sure what's doing

178
00:07:20,830 --> 00:07:24,460
<font color="#CCCCCC">exactly sure why this is</font><font color="#E5E5E5"> working you can</font>

179
00:07:22,870 --> 00:07:25,840
<font color="#CCCCCC">go ahead and put a flag and you know see</font>

180
00:07:24,460 --> 00:07:26,979
the debug output and see exactly what's

181
00:07:25,840 --> 00:07:28,869
going<font color="#E5E5E5"> on and where you're making your</font>

182
00:07:26,979 --> 00:07:30,699
mistakes so<font color="#CCCCCC"> it gives</font><font color="#E5E5E5"> you a real</font>

183
00:07:28,870 --> 00:07:33,070
opportunity to practice and<font color="#E5E5E5"> to learn as</font>

184
00:07:30,699 --> 00:07:34,840
you're going on and a lot of these

185
00:07:33,070 --> 00:07:36,580
applications are only designed to teach

186
00:07:34,840 --> 00:07:38,080
you what the person writing them knows

187
00:07:36,580 --> 00:07:40,930
whereas with these since they are

188
00:07:38,080 --> 00:07:42,940
configurable you can go ahead<font color="#E5E5E5"> and set in</font>

189
00:07:40,930 --> 00:07:44,500
<font color="#CCCCCC">options and set in certain circumstances</font>

190
00:07:42,940 --> 00:07:47,590
that you know we didn't even account for

191
00:07:44,500 --> 00:07:48,699
one of<font color="#E5E5E5"> my favorite examples is I had a</font>

192
00:07:47,590 --> 00:07:51,280
friend who<font color="#E5E5E5"> was actually going through</font>

193
00:07:48,699 --> 00:07:54,069
<font color="#E5E5E5">the the SQL challenges sq LOL challenges</font>

194
00:07:51,280 --> 00:07:55,809
and one of the last challenges is to to

195
00:07:54,069 --> 00:07:58,659
use SQL injection to leverage a

196
00:07:55,810 --> 00:08:00,190
cross-site scripting attack now the idea

197
00:07:58,659 --> 00:08:03,400
<font color="#E5E5E5">behind it was that it was just supposed</font>

198
00:08:00,190 --> 00:08:05,530
<font color="#E5E5E5">to be reflected cross-site scripting he</font>

199
00:08:03,400 --> 00:08:07,120
misread it and tried to do a persistent

200
00:08:05,530 --> 00:08:09,400
cross-site scripting ended up going

201
00:08:07,120 --> 00:08:10,810
through and creating I don't even<font color="#E5E5E5"> fully</font>

202
00:08:09,400 --> 00:08:12,520
understand how we did it but<font color="#E5E5E5"> he ended up</font>

203
00:08:10,810 --> 00:08:14,370
creating a trigger to where every time

204
00:08:12,520 --> 00:08:16,389
the database was accessed it would

205
00:08:14,370 --> 00:08:18,729
inject a cross-site scripting payload

206
00:08:16,389 --> 00:08:20,680
into one of the tables<font color="#E5E5E5"> and it would then</font>

207
00:08:18,729 --> 00:08:21,820
show out within the<font color="#E5E5E5"> application and</font>

208
00:08:20,680 --> 00:08:23,860
that's something I didn't even<font color="#E5E5E5"> know you</font>

209
00:08:21,820 --> 00:08:26,820
<font color="#CCCCCC">could do that he was able to figure out</font>

210
00:08:23,860 --> 00:08:26,820
because<font color="#E5E5E5"> of this framework</font>

211
00:08:28,500 --> 00:08:34,240
so I'd<font color="#CCCCCC"> like to interject and if you</font>

212
00:08:32,320 --> 00:08:36,580
didn't understand why these<font color="#CCCCCC"> things exist</font>

213
00:08:34,240 --> 00:08:39,219
<font color="#E5E5E5">I I think maybe a Shakespearean sonnet</font>

214
00:08:36,580 --> 00:08:42,760
will help you so I luckily I have one

215
00:08:39,219 --> 00:08:44,770
prepared I humbly posit that the current

216
00:08:42,760 --> 00:08:46,930
state with much respect to work which

217
00:08:44,770 --> 00:08:48,970
does precede of test beds made with

218
00:08:46,930 --> 00:08:51,430
<font color="#CCCCCC">Vaughn's to demonstrate is lacking some</font>

219
00:08:48,970 --> 00:08:53,920
inflexibility two options are presented

220
00:08:51,430 --> 00:08:57,310
one present day as far as<font color="#CCCCCC"> 11 deals</font><font color="#E5E5E5"> with</font>

221
00:08:53,920 --> 00:09:00,839
SQL a blind injection bool or time delay

222
00:08:57,310 --> 00:09:03,520
and union statement hacks<font color="#E5E5E5"> og house well</font>

223
00:09:00,839 --> 00:09:06,310
imagine we could change<font color="#E5E5E5"> how queries read</font>

224
00:09:03,520 --> 00:09:08,650
and how our input sanitizes oh how

225
00:09:06,310 --> 00:09:11,650
nimble and specific we could be to

226
00:09:08,650 --> 00:09:14,620
recreate our splurt scenarios and thus

227
00:09:11,650 --> 00:09:22,720
is SQ LOL conceived that we might study

228
00:09:14,620 --> 00:09:24,550
how to pone db's thank you<font color="#E5E5E5"> I can thank</font>

229
00:09:22,720 --> 00:09:28,510
<font color="#E5E5E5">an entire bottle of red wine in one</font>

230
00:09:24,550 --> 00:09:31,630
night for<font color="#E5E5E5"> that so what's actually in the</font>

231
00:09:28,510 --> 00:09:33,250
magical code injection rainbow so we

232
00:09:31,630 --> 00:09:35,950
have a bunch<font color="#E5E5E5"> of test beds already we</font>

233
00:09:33,250 --> 00:09:38,830
have SQ LOL for sequel injection XS sm h

234
00:09:35,950 --> 00:09:41,980
for cross-site scripting crypto mg for

235
00:09:38,830 --> 00:09:44,080
crypto flaws XM LMAO for<font color="#E5E5E5"> XPath and</font><font color="#CCCCCC"> xml</font>

236
00:09:41,980 --> 00:09:46,990
injection<font color="#CCCCCC"> LOL for shell injection and</font>

237
00:09:44,080 --> 00:09:48,280
there's<font color="#CCCCCC"> actually one that we didn't make</font>

238
00:09:46,990 --> 00:09:49,420
<font color="#E5E5E5">that somebody just sort of released</font>

239
00:09:48,280 --> 00:09:53,500
without telling us<font color="#E5E5E5"> and then we found</font>

240
00:09:49,420 --> 00:09:55,120
<font color="#E5E5E5">later called my megusta which is like a</font>

241
00:09:53,500 --> 00:09:56,230
<font color="#CCCCCC">content sniffing</font><font color="#E5E5E5"> test</font><font color="#CCCCCC"> bet i</font><font color="#E5E5E5"> haven't even</font>

242
00:09:55,120 --> 00:09:58,870
gotten a chance to play<font color="#E5E5E5"> with yet but</font>

243
00:09:56,230 --> 00:10:01,720
it's on some thrilled that somebody else

244
00:09:58,870 --> 00:10:03,520
is sort of doing<font color="#E5E5E5"> this same sort of</font><font color="#CCCCCC"> thing</font>

245
00:10:01,720 --> 00:10:06,130
and they gave credit and they're like

246
00:10:03,520 --> 00:10:07,420
you know<font color="#E5E5E5"> greets to people who made</font>

247
00:10:06,130 --> 00:10:09,880
sequel and all that stuff so

248
00:10:07,420 --> 00:10:12,760
heartwarming but we've learned we've

249
00:10:09,880 --> 00:10:14,140
learned a lot in<font color="#CCCCCC"> the pro the process of</font>

250
00:10:12,760 --> 00:10:15,910
making these test beds and working with

251
00:10:14,140 --> 00:10:17,560
them<font color="#E5E5E5"> so</font><font color="#CCCCCC"> i'd like to share</font><font color="#E5E5E5"> some of the</font>

252
00:10:15,910 --> 00:10:20,050
we'd like<font color="#E5E5E5"> to share some of the really</font>

253
00:10:17,560 --> 00:10:23,079
cool<font color="#E5E5E5"> stuff that we've figured out or</font>

254
00:10:20,050 --> 00:10:26,819
discovered or got to put to use with

255
00:10:23,080 --> 00:10:30,610
these test beds so that first that first

256
00:10:26,820 --> 00:10:33,330
payload there is actually pretty<font color="#CCCCCC"> much</font>

257
00:10:30,610 --> 00:10:37,120
equivalent to tick or one equals one and

258
00:10:33,330 --> 00:10:39,220
that sort<font color="#E5E5E5"> of little hard to see but this</font>

259
00:10:37,120 --> 00:10:41,310
is this is amazing<font color="#E5E5E5"> and let me just</font><font color="#CCCCCC"> show</font>

260
00:10:39,220 --> 00:10:45,840
you this in sequel<font color="#E5E5E5"> ol here</font>

261
00:10:41,310 --> 00:10:48,150
so so let<font color="#E5E5E5"> me describe the let me</font>

262
00:10:45,840 --> 00:10:50,610
describe how this payload works in the

263
00:10:48,150 --> 00:10:52,949
meantime I'm gonna does everybody a

264
00:10:50,610 --> 00:11:00,750
picture of this or send up any more time

265
00:10:52,950 --> 00:11:07,050
to look at this<font color="#CCCCCC"> okay yeah yeah you right</font>

266
00:11:00,750 --> 00:11:09,779
okay<font color="#CCCCCC"> all right so i'm going to write</font>

267
00:11:07,050 --> 00:11:15,890
down just a simple sequel query like

268
00:11:09,779 --> 00:11:25,580
you've seen million times before so so

269
00:11:15,890 --> 00:11:25,580
select<font color="#CCCCCC"> we'll just simplify it user from</font>

270
00:11:25,670 --> 00:11:32,449
users where username

271
00:11:40,490 --> 00:11:50,640
equals tick and then some other stuff

272
00:11:44,760 --> 00:11:53,250
here so<font color="#E5E5E5"> one another tick so we'll put in</font>

273
00:11:50,640 --> 00:11:56,720
the payload here that I've talking to

274
00:11:53,250 --> 00:12:03,660
you about in red so that you can see

275
00:11:56,720 --> 00:12:07,490
tick equals tick so so you can<font color="#CCCCCC"> sign</font><font color="#E5E5E5"> it</font>

276
00:12:03,660 --> 00:12:11,100
kind of see what's happening<font color="#CCCCCC"> here now so</font>

277
00:12:07,490 --> 00:12:13,320
so where username equals null equals

278
00:12:11,100 --> 00:12:14,730
null so there's an order of operations

279
00:12:13,320 --> 00:12:16,410
here that basically and there's some

280
00:12:14,730 --> 00:12:22,220
typecasting that goes on<font color="#E5E5E5"> that basically</font>

281
00:12:16,410 --> 00:12:25,079
goes like this username equals no false

282
00:12:22,220 --> 00:12:27,360
false equals<font color="#E5E5E5"> no well we need to convert</font>

283
00:12:25,080 --> 00:12:30,590
null down null becomes false false

284
00:12:27,360 --> 00:12:37,320
equals false that's true<font color="#CCCCCC"> we're true</font>

285
00:12:30,590 --> 00:12:41,580
we're gone so three characters no

286
00:12:37,320 --> 00:12:44,840
<font color="#E5E5E5">whitespace no keywords whatsoever it's</font>

287
00:12:41,580 --> 00:12:49,380
awesome<font color="#E5E5E5"> so this has gotten me past like</font>

288
00:12:44,840 --> 00:12:51,840
all the blacklist filters all of them so

289
00:12:49,380 --> 00:12:55,860
the<font color="#CCCCCC"> next one here this Union selects cur</font>

290
00:12:51,840 --> 00:12:59,160
plus hipped so I want to<font color="#E5E5E5"> talk a little</font>

291
00:12:55,860 --> 00:13:04,110
bit about anti XSS in browsers and why I

292
00:12:59,160 --> 00:13:06,930
split this this up here so when you have

293
00:13:04,110 --> 00:13:09,570
<font color="#E5E5E5">an informed sequel injection you can</font>

294
00:13:06,930 --> 00:13:13,079
pull static data so instead of doing

295
00:13:09,570 --> 00:13:16,440
select column name from tablename you

296
00:13:13,080 --> 00:13:18,060
can do select literal string that's<font color="#E5E5E5"> it</font>

297
00:13:16,440 --> 00:13:19,800
<font color="#E5E5E5">unless you're working</font><font color="#CCCCCC"> with order Oracle</font>

298
00:13:18,060 --> 00:13:21,719
in which case you<font color="#E5E5E5"> have to do select</font>

299
00:13:19,800 --> 00:13:25,170
literal string from<font color="#E5E5E5"> deuel for whatever</font>

300
00:13:21,720 --> 00:13:27,630
reason so so you can select a literal

301
00:13:25,170 --> 00:13:30,719
string which will be output on<font color="#CCCCCC"> the page</font>

302
00:13:27,630 --> 00:13:33,090
and probably will allow you<font color="#E5E5E5"> to do some</font>

303
00:13:30,720 --> 00:13:36,210
cross site scripting stuff the problem

304
00:13:33,090 --> 00:13:38,280
is<font color="#CCCCCC"> that a lot of browsers have anti XSS</font>

305
00:13:36,210 --> 00:13:40,680
protections built into them and

306
00:13:38,280 --> 00:13:41,880
basically the way these work is the

307
00:13:40,680 --> 00:13:43,920
browser will<font color="#CCCCCC"> take a look at</font><font color="#E5E5E5"> all the</font>

308
00:13:41,880 --> 00:13:46,230
inputs and see if their characters which

309
00:13:43,920 --> 00:13:48,180
might<font color="#CCCCCC"> be a part of a like a cross-site</font>

310
00:13:46,230 --> 00:13:50,460
scripting attack and if there are it

311
00:13:48,180 --> 00:13:51,989
will check those parameters to see if

312
00:13:50,460 --> 00:13:54,480
anything in those program

313
00:13:51,990 --> 00:13:57,899
ends up in<font color="#CCCCCC"> the Dom if that ends up in</font>

314
00:13:54,480 --> 00:14:01,709
<font color="#CCCCCC">the Dom that's just they say no no he's</font>

315
00:13:57,899 --> 00:14:04,290
no good so they prevent access in that

316
00:14:01,709 --> 00:14:06,660
way now what<font color="#E5E5E5"> happens when the input is</font>

317
00:14:04,290 --> 00:14:08,849
different from what ends up in<font color="#CCCCCC"> the Dom</font>

318
00:14:06,660 --> 00:14:11,640
but<font color="#E5E5E5"> still you're you're causing</font>

319
00:14:08,850 --> 00:14:15,660
scripting to end up in the Dom wealthy

320
00:14:11,640 --> 00:14:18,449
anti XSS doesn't fire so if you can tell

321
00:14:15,660 --> 00:14:20,189
a database to put together a cross-site

322
00:14:18,450 --> 00:14:23,640
scripting attack and stick it in the Dom

323
00:14:20,190 --> 00:14:26,490
well you have just<font color="#E5E5E5"> bypassed the ante</font>

324
00:14:23,640 --> 00:14:29,490
access protection so even modern

325
00:14:26,490 --> 00:14:33,420
browsers with XSS protections will be

326
00:14:29,490 --> 00:14:35,670
vulnerable to something like<font color="#CCCCCC"> this so so</font>

327
00:14:33,420 --> 00:14:37,680
you can see here we have input

328
00:14:35,670 --> 00:14:40,709
sanitization options so<font color="#CCCCCC"> I can choose all</font>

329
00:14:37,680 --> 00:14:42,750
sorts of different<font color="#E5E5E5"> sanitization I'm not</font>

330
00:14:40,709 --> 00:14:44,189
going to just because that's

331
00:14:42,750 --> 00:14:46,680
counterproductive to what we're trying

332
00:14:44,190 --> 00:14:49,200
to do now environmental settings so i

333
00:14:46,680 --> 00:14:50,729
can say fail instead of<font color="#CCCCCC"> doing what</font>

334
00:14:49,200 --> 00:14:53,100
you're supposed to do every one in ten

335
00:14:50,730 --> 00:14:56,579
times this really with sequel<font color="#E5E5E5"> maps</font>

336
00:14:53,100 --> 00:15:00,630
boolean based blind really really

337
00:14:56,579 --> 00:15:03,510
with it so we can choose how many

338
00:15:00,630 --> 00:15:05,130
results we want the or falsity and we

339
00:15:03,510 --> 00:15:07,939
also have this really<font color="#CCCCCC"> cool show payload</font>

340
00:15:05,130 --> 00:15:10,140
in context option which will show us the

341
00:15:07,940 --> 00:15:12,450
query that was sent<font color="#E5E5E5"> to database and</font>

342
00:15:10,140 --> 00:15:15,360
where our injection string was in the

343
00:15:12,450 --> 00:15:17,310
query underlined so you can see much

344
00:15:15,360 --> 00:15:18,870
like<font color="#E5E5E5"> I showed you on the whiteboard the</font>

345
00:15:17,310 --> 00:15:23,130
I don't even know what<font color="#CCCCCC"> to call this</font>

346
00:15:18,870 --> 00:15:25,290
thing that like I showed you there it'll

347
00:15:23,130 --> 00:15:27,930
<font color="#E5E5E5">show you how your payload fits into the</font>

348
00:15:25,290 --> 00:15:33,180
grand scheme thing of things so<font color="#E5E5E5"> I'm</font>

349
00:15:27,930 --> 00:15:35,219
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to do just</font><font color="#E5E5E5"> tick a union select and</font>

350
00:15:33,180 --> 00:15:36,750
the by default is just going to<font color="#E5E5E5"> go into</font>

351
00:15:35,220 --> 00:15:40,709
a string the where clause so I'm going

352
00:15:36,750 --> 00:15:45,570
<font color="#CCCCCC">to do ticking in select and we'll do it</font>

353
00:15:40,709 --> 00:15:48,750
once with a payload that won't fire in

354
00:15:45,570 --> 00:15:50,220
<font color="#E5E5E5">chrome I'll pull up chrome to show you</font>

355
00:15:48,750 --> 00:15:58,410
because fire from this version<font color="#E5E5E5"> of</font>

356
00:15:50,220 --> 00:16:00,000
Firefox does not have anti XSS did I

357
00:15:58,410 --> 00:16:02,339
take the reign of failure

358
00:16:00,000 --> 00:16:05,250
no I did not I don't want to do that

359
00:16:02,340 --> 00:16:06,930
just now it's fun but<font color="#CCCCCC"> that not not</font>

360
00:16:05,250 --> 00:16:10,200
during a presentation the demo<font color="#E5E5E5"> God's</font>

361
00:16:06,930 --> 00:16:11,819
already hate me out so all right let me

362
00:16:10,200 --> 00:16:15,020
just put this mic down because i can

363
00:16:11,820 --> 00:16:15,020
type better with two hands

364
00:16:38,110 --> 00:16:44,370
so for a fur browser that doesn't have

365
00:16:41,589 --> 00:16:46,209
any anti XSS protections this will<font color="#E5E5E5"> work</font>

366
00:16:44,370 --> 00:16:47,890
so we've just<font color="#E5E5E5"> launched a cross-site</font>

367
00:16:46,209 --> 00:16:51,930
scripting attack but once we take this

368
00:16:47,890 --> 00:16:51,930
and put this into<font color="#E5E5E5"> chrome</font>

369
00:17:03,590 --> 00:17:11,800
no love so let's uh let's change this a

370
00:17:07,790 --> 00:17:14,839
little bit and we can<font color="#E5E5E5"> see the our our</font>

371
00:17:11,800 --> 00:17:17,000
our payload in here and we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see how</font>

372
00:17:14,839 --> 00:17:20,829
<font color="#CCCCCC">the cross-site scripting is not shown</font>

373
00:17:17,000 --> 00:17:22,730
because I need to fix<font color="#E5E5E5"> that potentially</font>

374
00:17:20,829 --> 00:17:23,869
so what we're going to do here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> use</font>

375
00:17:22,730 --> 00:17:26,390
the concat statement because we're

376
00:17:23,869 --> 00:17:28,610
working with my sequel to split the

377
00:17:26,390 --> 00:17:30,020
string up and then concatenate it back

378
00:17:28,610 --> 00:17:31,909
together and we'll see the crumbs anti

379
00:17:30,020 --> 00:17:34,060
XSS protection does not<font color="#E5E5E5"> work when we do</font>

380
00:17:31,910 --> 00:17:34,060
that

381
00:17:56,050 --> 00:17:59,700
ok cool so

382
00:18:02,469 --> 00:18:07,399
so from<font color="#CCCCCC"> a little stuff to know about</font>

383
00:18:04,489 --> 00:18:10,700
anti-access and browsers so let's get

384
00:18:07,399 --> 00:18:15,709
<font color="#E5E5E5">back to the presentation and we'll see</font>

385
00:18:10,700 --> 00:18:20,869
if<font color="#E5E5E5"> it works oh good excellent</font><font color="#CCCCCC"> all right</font>

386
00:18:15,710 --> 00:18:22,909
so<font color="#E5E5E5"> as far as XM LMAO so xpath injection</font>

387
00:18:20,869 --> 00:18:27,139
is a fun little beast and<font color="#CCCCCC"> i got to play</font>

388
00:18:22,909 --> 00:18:28,849
this at the null CTF last year and<font color="#CCCCCC"> i</font>

389
00:18:27,139 --> 00:18:31,129
liked it so much that<font color="#E5E5E5"> i made test bed</font>

390
00:18:28,849 --> 00:18:33,769
for playing with xpath injection and xml

391
00:18:31,129 --> 00:18:37,519
injection and i found out that since

392
00:18:33,769 --> 00:18:40,549
live xml<font color="#E5E5E5"> is written in c or some it's a</font>

393
00:18:37,519 --> 00:18:42,080
<font color="#E5E5E5">native code when</font><font color="#CCCCCC"> you give it an XPath</font>

394
00:18:40,549 --> 00:18:44,799
query that has<font color="#CCCCCC"> an oblate in it it</font>

395
00:18:42,080 --> 00:18:47,989
truncates that at the null byte and so

396
00:18:44,799 --> 00:18:51,619
if you're injecting into an XPath query

397
00:18:47,989 --> 00:18:55,849
you can gain a wider range of nodes by

398
00:18:51,619 --> 00:18:58,339
<font color="#E5E5E5">sticking a null byte in there so that's</font>

399
00:18:55,849 --> 00:19:00,979
fun and<font color="#CCCCCC"> also if you look at an XPath</font>

400
00:18:58,339 --> 00:19:05,239
query it's just like / top-level node /

401
00:19:00,979 --> 00:19:07,759
next level node down etc etc you can

402
00:19:05,239 --> 00:19:10,519
actually<font color="#E5E5E5"> traverse up the node tree using</font>

403
00:19:07,759 --> 00:19:11,989
the same path traversal characters you

404
00:19:10,519 --> 00:19:14,450
would use with the file system so just

405
00:19:11,989 --> 00:19:16,700
dot dot slash so you can traverse up the

406
00:19:14,450 --> 00:19:20,239
xpath tree and get access<font color="#E5E5E5"> to a wider</font>

407
00:19:16,700 --> 00:19:21,619
range of nodes interesting so didn't

408
00:19:20,239 --> 00:19:25,489
know<font color="#E5E5E5"> you could do that before and now I</font>

409
00:19:21,619 --> 00:19:28,249
do also I learned xpath injection for

410
00:19:25,489 --> 00:19:31,609
the most part thanks to this test bed so

411
00:19:28,249 --> 00:19:34,700
that's<font color="#E5E5E5"> fun and then with xml injection</font><font color="#CCCCCC"> i</font>

412
00:19:31,609 --> 00:19:37,699
figured out a way to recover the

413
00:19:34,700 --> 00:19:40,789
structure of the<font color="#CCCCCC"> xml</font><font color="#E5E5E5"> document using</font>

414
00:19:37,700 --> 00:19:43,309
verbose error messages and<font color="#CCCCCC"> i think i'll</font>

415
00:19:40,789 --> 00:19:47,479
show you that one and<font color="#E5E5E5"> i also found a way</font>

416
00:19:43,309 --> 00:19:50,059
to do<font color="#E5E5E5"> out-of-band xml external NT</font>

417
00:19:47,479 --> 00:19:59,979
attacks that retrieve files for you so

418
00:19:50,059 --> 00:19:59,979
fun stuff there so let's pull up XM LMAO

419
00:20:01,520 --> 00:20:07,720
and we'll<font color="#CCCCCC"> go into xml injection and</font>

420
00:20:08,980 --> 00:20:17,780
let's see do node value here so we'll

421
00:20:14,810 --> 00:20:22,490
also show the payload in context so we

422
00:20:17,780 --> 00:20:29,480
can see where we are in the<font color="#CCCCCC"> xml so we</font>

423
00:20:22,490 --> 00:20:35,840
inject here<font color="#CCCCCC"> it's embarrassing all right</font>

424
00:20:29,480 --> 00:20:40,810
so so here's our<font color="#E5E5E5"> xml document and we're</font>

425
00:20:35,840 --> 00:20:40,810
injecting here into the<font color="#CCCCCC"> Isle of Pi note</font>

426
00:20:40,990 --> 00:20:48,880
so our injection string will be end foo

427
00:20:49,270 --> 00:20:56,450
so when we inject this we're going<font color="#E5E5E5"> to</font>

428
00:20:52,850 --> 00:20:59,030
<font color="#E5E5E5">get a metric butt ton of errors as you</font>

429
00:20:56,450 --> 00:21:01,010
can see but you<font color="#E5E5E5"> can see what happened</font>

430
00:20:59,030 --> 00:21:03,620
here we opened<font color="#E5E5E5"> up an i love</font><font color="#CCCCCC"> PI tag and</font>

431
00:21:01,010 --> 00:21:05,660
then closed a foo tag and we didn't open

432
00:21:03,620 --> 00:21:07,399
up you know so we have a mismatch and

433
00:21:05,660 --> 00:21:09,920
the parser will actually tell us hey

434
00:21:07,400 --> 00:21:13,610
opening and ending tag mismatch I love

435
00:21:09,920 --> 00:21:15,560
pie and foo so even<font color="#CCCCCC"> though we probably</font>

436
00:21:13,610 --> 00:21:18,020
can't see the structure<font color="#E5E5E5"> of this XML</font>

437
00:21:15,560 --> 00:21:21,620
document normally we now know that we

438
00:21:18,020 --> 00:21:28,030
are in and I love pie node interesting

439
00:21:21,620 --> 00:21:32,929
so what<font color="#CCCCCC"> we can do now is closed out I</font>

440
00:21:28,030 --> 00:21:34,190
love pie and then<font color="#CCCCCC"> closed out foo which</font>

441
00:21:32,930 --> 00:21:37,130
will cause another opening and ending

442
00:21:34,190 --> 00:21:39,080
tag mismatch error and tell us hey

443
00:21:37,130 --> 00:21:43,760
you've got<font color="#E5E5E5"> to miss a mismatch between</font>

444
00:21:39,080 --> 00:21:48,379
<font color="#CCCCCC">hooray and foo so I say okay well first</font>

445
00:21:43,760 --> 00:21:50,500
I'd like to close out her a Martian is

446
00:21:48,380 --> 00:21:52,040
it it's going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be the other direction</font>

447
00:21:50,500 --> 00:21:53,390
yeah it's going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> the other</font>

448
00:21:52,040 --> 00:21:58,040
direction so I have to click<font color="#E5E5E5"> I close out</font>

449
00:21:53,390 --> 00:22:00,530
I love pie I close out hooray then I

450
00:21:58,040 --> 00:22:03,200
close out foo and<font color="#E5E5E5"> I can keep going like</font>

451
00:22:00,530 --> 00:22:06,020
this and anything upwards of<font color="#E5E5E5"> me in the</font>

452
00:22:03,200 --> 00:22:09,680
hierarchy of the<font color="#CCCCCC"> XML document and</font>

453
00:22:06,020 --> 00:22:11,450
generally this<font color="#CCCCCC"> is going to give us an</font>

454
00:22:09,680 --> 00:22:13,410
idea of the entire structure or at least

455
00:22:11,450 --> 00:22:15,660
a part of it so again

456
00:22:13,410 --> 00:22:18,180
opening tag mismatch xml file and foo

457
00:22:15,660 --> 00:22:20,400
and then when I<font color="#CCCCCC"> closed that xml file its</font>

458
00:22:18,180 --> 00:22:21,990
going to tell me hey you've<font color="#CCCCCC"> got stuff</font>

459
00:22:20,400 --> 00:22:23,760
after the end of the document so<font color="#CCCCCC"> I know</font>

460
00:22:21,990 --> 00:22:26,460
<font color="#CCCCCC">XML file is the very top of the</font><font color="#E5E5E5"> document</font>

461
00:22:23,760 --> 00:22:28,590
right so now I know the hierarchy all

462
00:22:26,460 --> 00:22:30,210
the way up from where I'm injecting to

463
00:22:28,590 --> 00:22:32,669
the top of<font color="#E5E5E5"> them to the top of the</font>

464
00:22:30,210 --> 00:22:34,800
hierarchy so pretty<font color="#CCCCCC"> cool</font><font color="#E5E5E5"> pretty useful</font>

465
00:22:32,670 --> 00:22:36,270
for when you're<font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to do xml</font>

466
00:22:34,800 --> 00:22:37,470
injection attacks when you don't know

467
00:22:36,270 --> 00:22:42,110
the<font color="#CCCCCC"> structure of it and you have opposed</font>

468
00:22:37,470 --> 00:22:42,110
errors so fun stuff

469
00:22:49,330 --> 00:22:55,970
alright<font color="#CCCCCC"> and so for crypt OMG it's more</font>

470
00:22:52,610 --> 00:22:57,649
<font color="#E5E5E5">of a test bed for cryptography flaws and</font>

471
00:22:55,970 --> 00:23:00,500
my focus on here was not necessarily

472
00:22:57,650 --> 00:23:02,810
<font color="#E5E5E5">flaws against algorithms or ciphers but</font>

473
00:23:00,500 --> 00:23:04,520
more<font color="#E5E5E5"> so on implementation a lot of times</font>

474
00:23:02,810 --> 00:23:07,610
with applications they'll use you know

475
00:23:04,520 --> 00:23:08,660
publicly available libraries but they

476
00:23:07,610 --> 00:23:09,949
don't<font color="#E5E5E5"> necessarily configure them right</font>

477
00:23:08,660 --> 00:23:12,130
when they are<font color="#E5E5E5"> using them and it opens up</font>

478
00:23:09,950 --> 00:23:14,270
the door for a lot of potential issues

479
00:23:12,130 --> 00:23:15,200
when<font color="#E5E5E5"> I started this project and actually</font>

480
00:23:14,270 --> 00:23:17,210
the reason why I started this project

481
00:23:15,200 --> 00:23:19,280
was it was right around the time when

482
00:23:17,210 --> 00:23:21,500
the<font color="#E5E5E5"> dotnet padding Oracle was really</font>

483
00:23:19,280 --> 00:23:23,030
starting to take off in<font color="#E5E5E5"> the wild and I</font>

484
00:23:21,500 --> 00:23:26,330
didn't<font color="#E5E5E5"> really know how it worked I</font>

485
00:23:23,030 --> 00:23:27,920
didn't know what was<font color="#E5E5E5"> going on there so I</font>

486
00:23:26,330 --> 00:23:31,639
wanted to create some some way<font color="#CCCCCC"> for me to</font>

487
00:23:27,920 --> 00:23:34,130
test it and I don't really particularly

488
00:23:31,640 --> 00:23:35,360
me and I I<font color="#E5E5E5"> asked don't work so I tried</font>

489
00:23:34,130 --> 00:23:37,250
making an implementation of it and just

490
00:23:35,360 --> 00:23:40,939
you know PHP just to see if I for

491
00:23:37,250 --> 00:23:43,070
practice<font color="#E5E5E5"> and then Dan it came to me and</font>

492
00:23:40,940 --> 00:23:44,720
said yo hey you should try<font color="#E5E5E5"> and make up</font>

493
00:23:43,070 --> 00:23:46,970
more challenge of challenges for it and

494
00:23:44,720 --> 00:23:49,400
we can you know group it together with

495
00:23:46,970 --> 00:23:52,280
<font color="#E5E5E5">all the SQ LOL and</font><font color="#CCCCCC"> xml a low and stuff</font>

496
00:23:49,400 --> 00:23:55,010
that<font color="#E5E5E5"> he was working on so some of the</font>

497
00:23:52,280 --> 00:23:56,360
<font color="#CCCCCC">things i learned from</font><font color="#E5E5E5"> this was doing</font>

498
00:23:55,010 --> 00:23:58,550
<font color="#E5E5E5">like the padding Oracle stuff and doing</font>

499
00:23:56,360 --> 00:24:00,830
some of the key tvblox shuffling is yo I

500
00:23:58,550 --> 00:24:04,070
know this is I've<font color="#CCCCCC"> been rehashed quite a</font>

501
00:24:00,830 --> 00:24:05,389
bit but crypto is hard there's I'm sure

502
00:24:04,070 --> 00:24:07,100
there's plenty of applications that<font color="#E5E5E5"> i</font>

503
00:24:05,390 --> 00:24:08,300
wrote before<font color="#E5E5E5"> i even did this application</font>

504
00:24:07,100 --> 00:24:10,790
<font color="#E5E5E5">at you script oh and i know i did it</font>

505
00:24:08,300 --> 00:24:12,440
wrong and this project really going to

506
00:24:10,790 --> 00:24:17,810
be<font color="#E5E5E5"> the opportunity to see you know why</font>

507
00:24:12,440 --> 00:24:19,160
that was<font color="#E5E5E5"> wrong and so the goal</font><font color="#CCCCCC"> for this</font>

508
00:24:17,810 --> 00:24:20,570
was really<font color="#E5E5E5"> just identifying the real</font>

509
00:24:19,160 --> 00:24:21,500
world scenarios there's a lot of like

510
00:24:20,570 --> 00:24:23,450
there's the mannes aion crypto

511
00:24:21,500 --> 00:24:24,380
challenges which are<font color="#E5E5E5"> pretty good and</font>

512
00:24:23,450 --> 00:24:27,020
they'll teach you how to break some<font color="#CCCCCC"> of</font>

513
00:24:24,380 --> 00:24:28,820
the like the flawed crypto stuff some

514
00:24:27,020 --> 00:24:30,379
bad algorithms things like that but<font color="#E5E5E5"> I</font>

515
00:24:28,820 --> 00:24:32,240
don't really notice a whole lot of

516
00:24:30,380 --> 00:24:35,630
<font color="#CCCCCC">real-world application and the goal for</font>

517
00:24:32,240 --> 00:24:37,880
crypto mg was that they would mimic real

518
00:24:35,630 --> 00:24:39,710
applications like one of them is just

519
00:24:37,880 --> 00:24:43,490
<font color="#E5E5E5">like a sign-in system for articles</font>

520
00:24:39,710 --> 00:24:44,930
another one is just you know a website

521
00:24:43,490 --> 00:24:46,580
that has path includes and things like

522
00:24:44,930 --> 00:24:50,540
that things that I've actually seen in

523
00:24:46,580 --> 00:24:52,720
the wild I tried to mimic those as close

524
00:24:50,540 --> 00:24:52,720
as possible

525
00:24:53,660 --> 00:24:58,370
demo<font color="#CCCCCC"> alright so we go ahead and do the</font>

526
00:24:56,690 --> 00:25:01,900
<font color="#E5E5E5">first challenge charity it's just just</font>

527
00:24:58,370 --> 00:25:04,790
simple web sites got some wings here all

528
00:25:01,900 --> 00:25:06,320
all the challenges here are our<font color="#CCCCCC"> site for</font>

529
00:25:04,790 --> 00:25:11,840
independent doesn't matter what<font color="#CCCCCC"> cipher</font>

530
00:25:06,320 --> 00:25:16,159
they use they actually go surely the

531
00:25:11,840 --> 00:25:17,149
cipher oh good idea and so for this one

532
00:25:16,160 --> 00:25:18,710
as you can see<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have a bunch of</font>

533
00:25:17,150 --> 00:25:20,750
<font color="#CCCCCC">cipher text here that seems to change</font>

534
00:25:18,710 --> 00:25:23,540
when<font color="#CCCCCC"> you go to the various different</font>

535
00:25:20,750 --> 00:25:28,400
pages you just<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> try and modify</font>

536
00:25:23,540 --> 00:25:29,960
this and yet a padding error so now with

537
00:25:28,400 --> 00:25:32,980
knowing with that bad information you

538
00:25:29,960 --> 00:25:36,980
can go ahead and just open<font color="#CCCCCC"> up one of the</font>

539
00:25:32,980 --> 00:25:38,150
the the padding Oracle tools my<font color="#E5E5E5"> favorite</font>

540
00:25:36,980 --> 00:25:39,350
<font color="#E5E5E5">spat</font><font color="#CCCCCC"> buster i'm sure there's others out</font>

541
00:25:38,150 --> 00:25:46,750
there but<font color="#E5E5E5"> that's really just the only</font>

542
00:25:39,350 --> 00:25:46,750
one<font color="#E5E5E5"> i used do you have that bus run</font>

543
00:25:47,710 --> 00:25:55,080
<font color="#CCCCCC">alright probabilities</font>

544
00:25:52,530 --> 00:25:57,030
<font color="#E5E5E5">okay out some</font><font color="#CCCCCC"> climb but it's basically</font>

545
00:25:55,080 --> 00:25:58,889
<font color="#E5E5E5">just a padding Oracle you can go ahead</font>

546
00:25:57,030 --> 00:26:00,120
and just copy this URL<font color="#E5E5E5"> into</font><font color="#CCCCCC"> pad Buster</font>

547
00:25:58,890 --> 00:26:01,800
captain ciphertext at some of the

548
00:26:00,120 --> 00:26:04,590
certain parameters and will actually<font color="#CCCCCC"> go</font>

549
00:26:01,800 --> 00:26:07,680
in and<font color="#E5E5E5"> Pat Buster will perform the</font><font color="#CCCCCC"> CBC</font>

550
00:26:04,590 --> 00:26:09,090
our technique which is I've correct me

551
00:26:07,680 --> 00:26:12,510
if I'm wrong but it's like a complex bit

552
00:26:09,090 --> 00:26:13,980
folding attack essentially will go in

553
00:26:12,510 --> 00:26:15,030
and try and figure<font color="#E5E5E5"> out what the padding</font>

554
00:26:13,980 --> 00:26:17,190
characters are versus what the actual

555
00:26:15,030 --> 00:26:18,660
ciphertext is and based on that will try

556
00:26:17,190 --> 00:26:22,410
to you know to derive the actual

557
00:26:18,660 --> 00:26:24,060
plaintext and so it's a<font color="#E5E5E5"> great way to go</font>

558
00:26:22,410 --> 00:26:25,680
ahead<font color="#E5E5E5"> and practice this before when</font><font color="#CCCCCC"> you</font>

559
00:26:24,060 --> 00:26:27,629
do and to actually try<font color="#E5E5E5"> to identify it</font>

560
00:26:25,680 --> 00:26:30,170
for when you actually see it in in the

561
00:26:27,630 --> 00:26:33,350
real world they're still many asp.net

562
00:26:30,170 --> 00:26:35,940
servers out there that are vulnerable

563
00:26:33,350 --> 00:26:43,040
doing go ahead then go the the<font color="#E5E5E5"> next</font>

564
00:26:35,940 --> 00:26:46,050
challenge so for chit for challenge to

565
00:26:43,040 --> 00:26:51,889
this is a you know just<font color="#E5E5E5"> simple login</font>

566
00:26:46,050 --> 00:26:56,760
system here you<font color="#CCCCCC"> login it'll just</font>

567
00:26:51,890 --> 00:26:59,000
redirect you to UM the application you

568
00:26:56,760 --> 00:27:01,230
go ahead<font color="#E5E5E5"> and click on some articles read</font>

569
00:26:59,000 --> 00:27:04,110
read some articles here and as<font color="#E5E5E5"> you can</font>

570
00:27:01,230 --> 00:27:08,100
see there is<font color="#CCCCCC"> uh some more ciphertext</font>

571
00:27:04,110 --> 00:27:11,040
here so but with this one is a<font color="#CCCCCC"> little</font>

572
00:27:08,100 --> 00:27:12,270
bit<font color="#CCCCCC"> of a different different</font>

573
00:27:11,040 --> 00:27:13,560
vulnerability as you can see you'll

574
00:27:12,270 --> 00:27:16,620
modifying the<font color="#E5E5E5"> cipher tax doesn't really</font>

575
00:27:13,560 --> 00:27:18,240
doesn't give you anything useful here

576
00:27:16,620 --> 00:27:20,909
what's happening is it's what's called

577
00:27:18,240 --> 00:27:22,050
an encryption decryption<font color="#CCCCCC"> Oracle and by</font>

578
00:27:20,910 --> 00:27:25,290
that<font color="#CCCCCC"> i mean the application will</font>

579
00:27:22,050 --> 00:27:27,300
actually encrypt text for you or decrypt

580
00:27:25,290 --> 00:27:34,920
<font color="#CCCCCC">ex for you if you can</font><font color="#E5E5E5"> manipulate it and</font>

581
00:27:27,300 --> 00:27:38,090
in the<font color="#E5E5E5"> right way so birpur is this going</font>

582
00:27:34,920 --> 00:27:38,090
through burp or yes

583
00:27:46,580 --> 00:27:51,540
<font color="#E5E5E5">okay so just for the sake of time here</font>

584
00:27:50,580 --> 00:27:55,320
we'll go ahead and<font color="#E5E5E5"> log out of the</font>

585
00:27:51,540 --> 00:28:02,100
application and I've got I've got it can

586
00:27:55,320 --> 00:28:03,300
copy that let URL with the<font color="#E5E5E5"> article in</font>

587
00:28:02,100 --> 00:28:08,340
there that you have to be authenticated

588
00:28:03,300 --> 00:28:11,000
to see go ahead and<font color="#E5E5E5"> throw that through</font>

589
00:28:08,340 --> 00:28:11,000
the bar

590
00:28:20,540 --> 00:28:26,210
and it redirects me back to the<font color="#CCCCCC"> homepage</font>

591
00:28:24,590 --> 00:28:28,550
and<font color="#E5E5E5"> as you can see there's a parameter</font>

592
00:28:26,210 --> 00:28:32,300
here that's return URL that looks a lot

593
00:28:28,550 --> 00:28:37,240
like ciphertext go ahead and forward

594
00:28:32,300 --> 00:28:37,240
that we can go ahead and<font color="#CCCCCC"> log in again</font>

595
00:28:46,150 --> 00:28:49,110
and<font color="#E5E5E5"> it uh</font>

596
00:28:51,370 --> 00:28:54,370
200

597
00:29:13,740 --> 00:29:17,610
<font color="#E5E5E5">the real and so as you can see it's</font>

598
00:29:15,630 --> 00:29:19,260
redirecting us back to that<font color="#CCCCCC"> page that I</font>

599
00:29:17,610 --> 00:29:21,540
requested before<font color="#E5E5E5"> and so what it's doing</font>

600
00:29:19,260 --> 00:29:22,620
<font color="#CCCCCC">here is that when you access a piece of</font>

601
00:29:21,540 --> 00:29:24,809
the application that's unauthenticated

602
00:29:22,620 --> 00:29:26,610
it will redirect you back to the to<font color="#E5E5E5"> the</font>

603
00:29:24,809 --> 00:29:29,670
login screen for sure to log in in that

604
00:29:26,610 --> 00:29:31,290
cipher text is storing that<font color="#E5E5E5"> URL that you</font>

605
00:29:29,670 --> 00:29:33,420
tried to<font color="#E5E5E5"> access that was authenticated</font>

606
00:29:31,290 --> 00:29:36,178
and then it's<font color="#E5E5E5"> just redirecting you back</font>

607
00:29:33,420 --> 00:29:37,760
so what we can<font color="#E5E5E5"> do here is then figure</font>

608
00:29:36,179 --> 00:29:40,140
out and said what's in this<font color="#E5E5E5"> ciphertext</font>

609
00:29:37,760 --> 00:29:41,220
since we have<font color="#CCCCCC"> our decryption ropa we</font>

610
00:29:40,140 --> 00:29:44,550
know that something<font color="#E5E5E5"> is going to be</font>

611
00:29:41,220 --> 00:29:46,760
decrypted we can go ahead and log out

612
00:29:44,550 --> 00:29:46,760
here

613
00:29:56,190 --> 00:30:00,600
can't see that<font color="#E5E5E5"> I have the return URL</font>

614
00:29:58,200 --> 00:30:03,210
parameter that's cool so we can go ahead

615
00:30:00,600 --> 00:30:10,189
<font color="#E5E5E5">and just delete this piece of text right</font>

616
00:30:03,210 --> 00:30:10,190
here insert that cipher text we copied

617
00:30:16,550 --> 00:30:19,480
<font color="#CCCCCC">login again</font>

618
00:30:30,040 --> 00:30:33,820
and now we got<font color="#CCCCCC"> the redirect but instead</font>

619
00:30:31,780 --> 00:30:35,410
of having the page equals articles<font color="#E5E5E5"> and</font>

620
00:30:33,820 --> 00:30:37,960
the<font color="#E5E5E5"> article ID we have the number one</font>

621
00:30:35,410 --> 00:30:39,070
here which shows that that cipher<font color="#E5E5E5"> text I</font>

622
00:30:37,960 --> 00:30:40,240
would grab from that articles page is

623
00:30:39,070 --> 00:30:41,770
just drawing the number one<font color="#CCCCCC"> so now we</font>

624
00:30:40,240 --> 00:30:43,510
have<font color="#CCCCCC"> a way to arbitrarily decrypt any</font>

625
00:30:41,770 --> 00:30:44,560
data that's stored on the server and

626
00:30:43,510 --> 00:30:47,110
<font color="#E5E5E5">that tells us a couple of things</font><font color="#CCCCCC"> that</font>

627
00:30:44,560 --> 00:30:48,760
tells us that they're reusing the

628
00:30:47,110 --> 00:30:49,990
reusing the encryption keys across

629
00:30:48,760 --> 00:30:52,450
multiple areas of the application and

630
00:30:49,990 --> 00:30:53,650
that tells us that depending on<font color="#E5E5E5"> the mode</font>

631
00:30:52,450 --> 00:30:55,630
of operation if there is an IV in use

632
00:30:53,650 --> 00:30:57,780
they're also reusing that too and so<font color="#E5E5E5"> now</font>

633
00:30:55,630 --> 00:30:59,680
we can sort of arbitrarily decrypt data

634
00:30:57,780 --> 00:31:05,590
now we<font color="#E5E5E5"> just need to figure out a way to</font>

635
00:30:59,680 --> 00:31:12,220
encrypt data so considering the fact

636
00:31:05,590 --> 00:31:14,919
that that it's we're being redirected to

637
00:31:12,220 --> 00:31:16,420
various portions of the site when we

638
00:31:14,920 --> 00:31:21,040
access<font color="#E5E5E5"> something that's unauthenticated</font>

639
00:31:16,420 --> 00:31:22,300
we can try and I have to do the same

640
00:31:21,040 --> 00:31:26,230
thing<font color="#CCCCCC"> let's see if we can modify this</font>

641
00:31:22,300 --> 00:31:32,320
data that we are that we<font color="#E5E5E5"> are seeing so</font>

642
00:31:26,230 --> 00:31:36,390
instead of so the page equals articles

643
00:31:32,320 --> 00:31:36,389
we tried page equals crypt OMG

644
00:31:46,069 --> 00:31:52,969
let him copy that we will log out again

645
00:32:15,960 --> 00:32:19,340
so try and visit this page

646
00:32:20,210 --> 00:32:28,190
intercept the response and we have this

647
00:32:25,730 --> 00:32:31,120
return URL now that<font color="#E5E5E5"> looks a little bit</font>

648
00:32:28,190 --> 00:32:31,120
different than when we started out<font color="#E5E5E5"> with</font>

649
00:32:33,880 --> 00:32:39,850
go ahead<font color="#CCCCCC"> and forward that log in again</font>

650
00:32:36,620 --> 00:32:39,850
and<font color="#E5E5E5"> see what's redirecting us to</font>

651
00:32:52,740 --> 00:32:58,270
and it's redirecting us back to Krypton

652
00:32:56,140 --> 00:33:00,100
<font color="#E5E5E5">G so now we can encrypt and decrypt</font>

653
00:32:58,270 --> 00:33:01,960
arbitrary data and one of the biggest

654
00:33:00,100 --> 00:33:03,969
things I've seen<font color="#E5E5E5"> win exploding crypto</font>

655
00:33:01,960 --> 00:33:05,440
flaws is that a lot<font color="#E5E5E5"> of these developers</font>

656
00:33:03,970 --> 00:33:08,080
they expect crypto to be their key role

657
00:33:05,440 --> 00:33:11,430
for their further<font color="#E5E5E5"> application so they</font>

658
00:33:08,080 --> 00:33:13,960
tend to not filter input anywhere else

659
00:33:11,430 --> 00:33:15,700
or they tend to after<font color="#E5E5E5"> you encode or</font>

660
00:33:13,960 --> 00:33:20,280
whitelist they expect that data to be

661
00:33:15,700 --> 00:33:20,280
trusted<font color="#E5E5E5"> so what we can do here then is</font>

662
00:33:20,670 --> 00:33:29,580
put in something like an SQL statement

663
00:33:22,600 --> 00:33:32,639
so we can do let's say try unions select

664
00:33:29,580 --> 00:33:32,639
from users

665
00:33:37,180 --> 00:33:40,680
and we<font color="#E5E5E5"> will go ahead and</font>

666
00:33:45,929 --> 00:33:48,799
that what

667
00:34:02,430 --> 00:34:09,810
<font color="#E5E5E5">alright so we have that request let's go</font>

668
00:34:05,980 --> 00:34:09,810
<font color="#E5E5E5">ahead and copy this URL log out</font>

669
00:34:36,109 --> 00:34:47,480
and here's<font color="#CCCCCC"> an insight for text now we</font>

670
00:34:38,359 --> 00:34:50,199
have that we can go ahead and go in log

671
00:34:47,480 --> 00:34:50,199
in the application

672
00:34:56,940 --> 00:35:05,819
I'm<font color="#E5E5E5"> going articles and then we can</font>

673
00:34:58,859 --> 00:35:08,279
<font color="#CCCCCC">actually click an article ID and replace</font>

674
00:35:05,819 --> 00:35:09,420
this with our SQL injection string or

675
00:35:08,280 --> 00:35:12,119
with our encrypted SQL injection

676
00:35:09,420 --> 00:35:13,170
straining table<font color="#E5E5E5"> crypt OMG users doesn't</font>

677
00:35:12,119 --> 00:35:20,130
exist so now we know<font color="#E5E5E5"> we have SQL</font>

678
00:35:13,170 --> 00:35:21,420
injection yeah and<font color="#E5E5E5"> so then from here</font>

679
00:35:20,130 --> 00:35:22,770
with just SQL injection we can go ahead

680
00:35:21,420 --> 00:35:23,970
and encrypt the data and<font color="#E5E5E5"> then we can</font>

681
00:35:22,770 --> 00:35:25,680
actually<font color="#E5E5E5"> pull back users and if they're</font>

682
00:35:23,970 --> 00:35:27,629
<font color="#E5E5E5">using that crypto anywhere else</font><font color="#CCCCCC"> right</font>

683
00:35:25,680 --> 00:35:28,859
store passwords for example we can use

684
00:35:27,630 --> 00:35:32,310
the same technique to go ahead<font color="#E5E5E5"> and</font>

685
00:35:28,859 --> 00:35:36,000
decrypt those passwords<font color="#E5E5E5"> soch LOL is a</font>

686
00:35:32,310 --> 00:35:37,140
shell injection test bed and one of the

687
00:35:36,000 --> 00:35:41,270
cool<font color="#CCCCCC"> things we learned about is</font>

688
00:35:37,140 --> 00:35:44,848
alternate white spaces so most most

689
00:35:41,270 --> 00:35:46,680
<font color="#CCCCCC">command-line most shells will actually</font>

690
00:35:44,849 --> 00:35:51,089
take various different wide space as

691
00:35:46,680 --> 00:35:53,399
sort of<font color="#E5E5E5"> parameter separators so one</font>

692
00:35:51,089 --> 00:35:56,549
really interesting one on Windows is

693
00:35:53,400 --> 00:35:58,530
comma so if you don't<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the ability</font>

694
00:35:56,550 --> 00:36:01,410
<font color="#CCCCCC">to put in any white space and you're</font>

695
00:35:58,530 --> 00:36:03,540
<font color="#E5E5E5">doing shell injection on Windows you you</font>

696
00:36:01,410 --> 00:36:06,569
can use commas instead<font color="#CCCCCC"> of white space so</font>

697
00:36:03,540 --> 00:36:09,119
the command for instance type space file

698
00:36:06,569 --> 00:36:14,550
dot txt is equivalent to type comma file

699
00:36:09,119 --> 00:36:16,560
dot txt so funny stuff there but<font color="#E5E5E5"> you can</font>

700
00:36:14,550 --> 00:36:19,760
use for instance non-breaking spaces or

701
00:36:16,560 --> 00:36:23,549
tabs to get around a limitation of of

702
00:36:19,760 --> 00:36:26,730
you<font color="#E5E5E5"> know no spaces and same goes for</font>

703
00:36:23,550 --> 00:36:30,660
sequel actually most sequel databases

704
00:36:26,730 --> 00:36:36,599
will accept any white space in place of

705
00:36:30,660 --> 00:36:38,790
spaces so that's fun new lines can be

706
00:36:36,599 --> 00:36:40,440
used as command separators on pretty

707
00:36:38,790 --> 00:36:42,779
much every operating system<font color="#CCCCCC"> I'm aware of</font>

708
00:36:40,440 --> 00:36:45,930
so if you can't use semicolons pipes

709
00:36:42,780 --> 00:36:50,400
back takes ampersands whatever you<font color="#E5E5E5"> can</font>

710
00:36:45,930 --> 00:36:52,109
use a new line so that's<font color="#E5E5E5"> fun</font><font color="#CCCCCC"> um also I</font>

711
00:36:50,400 --> 00:36:57,210
learned about<font color="#CCCCCC"> a fun little flag for the</font>

712
00:36:52,109 --> 00:36:59,098
find command dash exec there's a there's

713
00:36:57,210 --> 00:37:01,619
a challenge<font color="#CCCCCC"> in shallow</font><font color="#E5E5E5"> L about that</font>

714
00:36:59,099 --> 00:37:03,530
which you can't use any of the<font color="#E5E5E5"> normal</font>

715
00:37:01,619 --> 00:37:06,210
tricks you can't use like pipes

716
00:37:03,530 --> 00:37:09,839
ampersands back tix you can't use the

717
00:37:06,210 --> 00:37:10,589
like dollar sign<font color="#CCCCCC"> / ends construction you</font>

718
00:37:09,839 --> 00:37:12,719
can't

719
00:37:10,589 --> 00:37:14,400
use new lines there's like all the

720
00:37:12,719 --> 00:37:19,219
command separators that I'm aware of are

721
00:37:14,400 --> 00:37:24,719
just not available<font color="#CCCCCC"> to you but partly but</font>

722
00:37:19,219 --> 00:37:26,700
you can add a dash exec flag to the<font color="#E5E5E5"> to</font>

723
00:37:24,719 --> 00:37:29,130
the find command that's being executed

724
00:37:26,700 --> 00:37:31,799
and execute an arbitrary shell command

725
00:37:29,130 --> 00:37:33,630
for every file found so you just<font color="#CCCCCC"> put in</font>

726
00:37:31,799 --> 00:37:37,799
<font color="#E5E5E5">some finally that's definitely gonna</font><font color="#CCCCCC"> be</font>

727
00:37:33,630 --> 00:37:39,180
there like dot and then and then just

728
00:37:37,799 --> 00:37:41,460
have it execute whatever you want

729
00:37:39,180 --> 00:37:44,460
whenever it finds<font color="#CCCCCC"> a file so that's fun</font>

730
00:37:41,460 --> 00:37:46,529
stuff a similar thing was seen in some

731
00:37:44,460 --> 00:37:48,829
<font color="#CCCCCC">telling that Damon's not terribly long</font>

732
00:37:46,529 --> 00:37:52,170
ago and then also terribly long ago

733
00:37:48,829 --> 00:37:56,519
Sonia bugs<font color="#E5E5E5"> resurfaced does anybody know</font>

734
00:37:52,170 --> 00:38:00,259
what the fruit exploit is show hands we

735
00:37:56,519 --> 00:38:03,450
got one excellent so telling a<font color="#E5E5E5"> demon's</font>

736
00:38:00,259 --> 00:38:05,789
will often just take the username that

737
00:38:03,450 --> 00:38:09,118
you give them and pass it directly in a

738
00:38:05,789 --> 00:38:11,369
shell command to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> login utility so</font>

739
00:38:09,119 --> 00:38:12,509
you have login whatever<font color="#E5E5E5"> username and at</font>

740
00:38:11,369 --> 00:38:14,910
that point it prompts you for your

741
00:38:12,509 --> 00:38:16,140
password<font color="#E5E5E5"> you put it in whatever you</font><font color="#CCCCCC"> get</font>

742
00:38:14,910 --> 00:38:16,979
a<font color="#E5E5E5"> login or you don't depending on</font>

743
00:38:16,140 --> 00:38:21,839
whether or<font color="#E5E5E5"> not you've got the right</font>

744
00:38:16,979 --> 00:38:24,710
password so if you do<font color="#CCCCCC"> login</font><font color="#E5E5E5"> dash</font><font color="#CCCCCC"> f user</font>

745
00:38:21,839 --> 00:38:24,710
name it

746
00:38:30,020 --> 00:38:32,080
you

