1
00:00:17,520 --> 00:00:22,259
yeah so let's just mentioned I'm an

2
00:00:19,860 --> 00:00:25,250
<font color="#CCCCCC">application security engineer at Fox so</font>

3
00:00:22,260 --> 00:00:27,540
in my role I am fixing vulnerabilities

4
00:00:25,250 --> 00:00:29,430
building<font color="#CCCCCC"> security frameworks to help</font>

5
00:00:27,540 --> 00:00:32,640
other engineers right secure code and

6
00:00:29,430 --> 00:00:34,530
doing education training and outreach to

7
00:00:32,640 --> 00:00:36,570
make sure that all<font color="#E5E5E5"> the developers that</font>

8
00:00:34,530 --> 00:00:38,220
box understand security and are able to

9
00:00:36,570 --> 00:00:40,379
use those frameworks effectively I

10
00:00:38,220 --> 00:00:44,970
wanted<font color="#E5E5E5"> to start off with a quick poll</font>

11
00:00:40,379 --> 00:00:47,280
who here writes code mix software all

12
00:00:44,970 --> 00:00:50,310
right who here deploys code maintains

13
00:00:47,280 --> 00:00:53,070
code configures it that's why all<font color="#E5E5E5"> right</font>

14
00:00:50,310 --> 00:00:54,590
who here likes to break stuff all right

15
00:00:53,070 --> 00:00:58,280
you guys make my life miserable

16
00:00:54,590 --> 00:01:01,110
seriously I actually like my job<font color="#E5E5E5"> a lot</font>

17
00:00:58,280 --> 00:01:02,820
that's true a<font color="#CCCCCC"> lot better so I'm</font>

18
00:01:01,110 --> 00:01:04,890
currently<font color="#CCCCCC"> working at box I've been there</font>

19
00:01:02,820 --> 00:01:07,590
about a<font color="#CCCCCC"> year and a half prior to</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I</font>

20
00:01:04,890 --> 00:01:09,930
was at symantec for some time working in

21
00:01:07,590 --> 00:01:13,110
a variety of<font color="#CCCCCC"> different roles working</font>

22
00:01:09,930 --> 00:01:16,680
with network security remote access

23
00:01:13,110 --> 00:01:19,410
authentication anti-spam web security

24
00:01:16,680 --> 00:01:22,200
prior to that I was<font color="#CCCCCC"> at safe web which</font>

25
00:01:19,410 --> 00:01:24,509
was acquired by<font color="#E5E5E5"> symantec safe was at one</font>

26
00:01:22,200 --> 00:01:26,369
time the world's largest<font color="#CCCCCC"> Internet</font>

27
00:01:24,509 --> 00:01:28,530
privacy service I was also<font color="#E5E5E5"> the company</font>

28
00:01:26,369 --> 00:01:30,630
<font color="#E5E5E5">or one of the companies that invented</font>

29
00:01:28,530 --> 00:01:34,080
the ssl VPN technology that so many of

30
00:01:30,630 --> 00:01:36,780
us used today before safe web i was

31
00:01:34,080 --> 00:01:38,459
doing my education at Cal Tech it's an

32
00:01:36,780 --> 00:01:40,940
amazing place like New other and

33
00:01:38,459 --> 00:01:43,319
primarily I was learning how to learn I

34
00:01:40,940 --> 00:01:45,690
hope<font color="#E5E5E5"> that all of you will be able to</font>

35
00:01:43,319 --> 00:01:48,140
learn<font color="#E5E5E5"> something interesting and useful</font>

36
00:01:45,690 --> 00:01:48,140
today

37
00:01:48,370 --> 00:01:54,250
so<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going to talk about web security</font>

38
00:01:51,210 --> 00:01:57,639
specifically HTTP headers that can be

39
00:01:54,250 --> 00:02:00,580
used to<font color="#E5E5E5"> secure web applications these</font>

40
00:01:57,640 --> 00:02:02,620
have come up over time usually<font color="#CCCCCC"> the way</font>

41
00:02:00,580 --> 00:02:04,929
it worked would be people<font color="#E5E5E5"> would discover</font>

42
00:02:02,620 --> 00:02:06,850
a class of vulnerabilities and then

43
00:02:04,930 --> 00:02:08,290
someone come up<font color="#E5E5E5"> with a header that could</font>

44
00:02:06,850 --> 00:02:10,810
defend against that class<font color="#CCCCCC"> of</font>

45
00:02:08,289 --> 00:02:12,730
vulnerabilities then another<font color="#E5E5E5"> class of</font>

46
00:02:10,810 --> 00:02:14,380
vulnerabilities would pop up and another

47
00:02:12,730 --> 00:02:15,910
header would come out and this went back

48
00:02:14,380 --> 00:02:18,880
and forth and as you can imagine as

49
00:02:15,910 --> 00:02:21,280
these standards or pseudo standards

50
00:02:18,880 --> 00:02:23,410
evolved it wasn't<font color="#E5E5E5"> really documented or</font>

51
00:02:21,280 --> 00:02:25,390
tracked together all in one place what

52
00:02:23,410 --> 00:02:28,720
tools<font color="#E5E5E5"> you had and what headers you could</font>

53
00:02:25,390 --> 00:02:31,059
use to defend your site so that's why

54
00:02:28,720 --> 00:02:32,830
I'm talking<font color="#CCCCCC"> about today because all the</font>

55
00:02:31,060 --> 00:02:35,980
headers you<font color="#E5E5E5"> have in one place and</font>

56
00:02:32,830 --> 00:02:39,550
hopefully you'll draw upon some things

57
00:02:35,980 --> 00:02:40,540
that<font color="#E5E5E5"> make your site's more secure I'm</font>

58
00:02:39,550 --> 00:02:43,960
going<font color="#E5E5E5"> to start</font><font color="#CCCCCC"> off talking about</font>

59
00:02:40,540 --> 00:02:45,730
cross-site scripting this is the most

60
00:02:43,960 --> 00:02:47,440
common vulnerability that we see at box

61
00:02:45,730 --> 00:02:49,320
and I think that's probably the case for

62
00:02:47,440 --> 00:02:51,970
many of you in<font color="#E5E5E5"> your organization's</font>

63
00:02:49,320 --> 00:02:55,209
there's a couple of headers that can be

64
00:02:51,970 --> 00:02:56,770
used<font color="#CCCCCC"> to defend against that cross-site</font>

65
00:02:55,209 --> 00:03:00,610
request forgery is another one on the

66
00:02:56,770 --> 00:03:02,770
OWASP top<font color="#CCCCCC"> 10 clickjacking comes up from</font>

67
00:03:00,610 --> 00:03:04,750
time to time there's a couple of ways

68
00:03:02,770 --> 00:03:07,060
that<font color="#CCCCCC"> are fairly effective at pending</font>

69
00:03:04,750 --> 00:03:09,820
against clip decking then i'll talk

70
00:03:07,060 --> 00:03:13,330
about sensitive data exposure number six

71
00:03:09,820 --> 00:03:16,180
on the<font color="#CCCCCC"> OS top 10 how you can enable web</font>

72
00:03:13,330 --> 00:03:18,400
api is with cords a couple more areas

73
00:03:16,180 --> 00:03:22,510
talking about things<font color="#E5E5E5"> that are a little</font>

74
00:03:18,400 --> 00:03:24,670
<font color="#E5E5E5">bit still developing posted on trusted</font>

75
00:03:22,510 --> 00:03:26,170
content is fairly straightforward but

76
00:03:24,670 --> 00:03:27,850
there's some<font color="#E5E5E5"> tools you can use to make</font>

77
00:03:26,170 --> 00:03:29,470
that safer for your site and then

78
00:03:27,850 --> 00:03:31,390
there's some emerging standards that are

79
00:03:29,470 --> 00:03:33,370
under discussion and not yet available

80
00:03:31,390 --> 00:03:37,540
but may change the way that we<font color="#E5E5E5"> manage</font>

81
00:03:33,370 --> 00:03:39,220
sessions in<font color="#E5E5E5"> the future all right so</font>

82
00:03:37,540 --> 00:03:41,679
cross-site scripting cross-site

83
00:03:39,220 --> 00:03:44,290
scripting an attacker runs code on your

84
00:03:41,680 --> 00:03:47,110
site<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> do anything that a user can</font>

85
00:03:44,290 --> 00:03:49,840
do so this<font color="#E5E5E5"> is fairly serious it's</font>

86
00:03:47,110 --> 00:03:52,040
essentially<font color="#E5E5E5"> come take over and we want</font>

87
00:03:49,840 --> 00:03:54,709
to do anything<font color="#E5E5E5"> possible to prevent</font>

88
00:03:52,040 --> 00:03:56,659
this like<font color="#E5E5E5"> I said before it's it's very</font>

89
00:03:54,709 --> 00:04:01,459
common<font color="#CCCCCC"> it's number three on the OWASP</font>

90
00:03:56,659 --> 00:04:03,649
top<font color="#CCCCCC"> 10 there are three main forms with</font>

91
00:04:01,459 --> 00:04:05,510
cross-site scripting that are classified

92
00:04:03,650 --> 00:04:07,879
<font color="#CCCCCC">there's reflected cross-site scripting</font>

93
00:04:05,510 --> 00:04:09,920
or something sent out in the<font color="#E5E5E5"> request</font>

94
00:04:07,879 --> 00:04:11,689
from<font color="#E5E5E5"> the browser gets echoed back to the</font>

95
00:04:09,920 --> 00:04:14,140
user and then<font color="#E5E5E5"> executes sin the page</font>

96
00:04:11,689 --> 00:04:16,099
there's stored cross-site scripting wear

97
00:04:14,140 --> 00:04:18,108
something in the database or<font color="#E5E5E5"> maybe</font>

98
00:04:16,100 --> 00:04:20,209
pulled from an external resource by the

99
00:04:18,108 --> 00:04:22,758
server is then rendered in the<font color="#E5E5E5"> page and</font>

100
00:04:20,209 --> 00:04:24,889
causes the script executes there's also

101
00:04:22,759 --> 00:04:27,199
a<font color="#E5E5E5"> Dom based cross-site scripting so this</font>

102
00:04:24,889 --> 00:04:29,990
<font color="#E5E5E5">is where scripts are being assembled on</font>

103
00:04:27,199 --> 00:04:31,759
the<font color="#E5E5E5"> client side and pieces come together</font>

104
00:04:29,990 --> 00:04:33,169
in such a way that some new script is

105
00:04:31,759 --> 00:04:36,740
rendered that executes<font color="#E5E5E5"> sundar the</font>

106
00:04:33,169 --> 00:04:40,099
attackers control so the best tool we

107
00:04:36,740 --> 00:04:42,500
<font color="#E5E5E5">have here to go against the reflected</font>

108
00:04:40,099 --> 00:04:45,800
cross-site scripting is a header called

109
00:04:42,500 --> 00:04:48,440
x.x SS protection this is something<font color="#CCCCCC"> that</font>

110
00:04:45,800 --> 00:04:50,000
<font color="#E5E5E5">was invented in ie8 there was a time</font>

111
00:04:48,440 --> 00:04:51,740
<font color="#CCCCCC">when I II was actually at the forefront</font>

112
00:04:50,000 --> 00:04:53,690
of web security believe it or not<font color="#CCCCCC"> I</font>

113
00:04:51,740 --> 00:04:55,759
<font color="#CCCCCC">nas's something</font><font color="#E5E5E5"> they introduced in that</font>

114
00:04:53,690 --> 00:05:00,229
one then was later adopted by all the

115
00:04:55,759 --> 00:05:02,539
other major browsers so there's this is

116
00:05:00,229 --> 00:05:04,280
designed to protect against that

117
00:05:02,539 --> 00:05:05,960
reflected cross-site scripting where you

118
00:05:04,280 --> 00:05:08,299
see something<font color="#E5E5E5"> in their request and it</font>

119
00:05:05,960 --> 00:05:10,729
comes back in the page as a pattern

120
00:05:08,300 --> 00:05:13,940
<font color="#E5E5E5">that's generally dangerous and so bit by</font>

121
00:05:10,729 --> 00:05:16,610
default that<font color="#CCCCCC"> will be stripped out of the</font>

122
00:05:13,940 --> 00:05:18,650
page now<font color="#E5E5E5"> unfortunately stripping content</font>

123
00:05:16,610 --> 00:05:19,820
out can cause problems because if

124
00:05:18,650 --> 00:05:21,169
there's something before what gets

125
00:05:19,820 --> 00:05:22,789
stripped out and something after what

126
00:05:21,169 --> 00:05:25,490
gets stripped out and they were together

127
00:05:22,789 --> 00:05:28,550
that can be<font color="#E5E5E5"> something dangerous too so</font>

128
00:05:25,490 --> 00:05:30,620
after people figured out that was an

129
00:05:28,550 --> 00:05:33,500
attack vector there was<font color="#CCCCCC"> another</font>

130
00:05:30,620 --> 00:05:36,440
attribute called mode block equals mode

131
00:05:33,500 --> 00:05:38,330
equals walk that was introduced where

132
00:05:36,440 --> 00:05:40,370
instead<font color="#CCCCCC"> of just pulling out the</font>

133
00:05:38,330 --> 00:05:41,900
malicious content if the page looks<font color="#E5E5E5"> like</font>

134
00:05:40,370 --> 00:05:43,550
it might have<font color="#CCCCCC"> cross-site scripting in it</font>

135
00:05:41,900 --> 00:05:47,448
it just<font color="#CCCCCC"> won't render it all and you get</font>

136
00:05:43,550 --> 00:05:50,120
a blank page there's unfortunately one

137
00:05:47,449 --> 00:05:52,849
danger of doing it<font color="#CCCCCC"> that way there's a</font>

138
00:05:50,120 --> 00:05:55,909
series of steps the attacker can use to

139
00:05:52,849 --> 00:05:58,360
capture the document refer win that

140
00:05:55,909 --> 00:06:00,909
blocking mode but<font color="#E5E5E5"> I would say generally</font>

141
00:05:58,360 --> 00:06:02,740
allowing the script<font color="#CCCCCC"> to execute is more</font>

142
00:06:00,910 --> 00:06:05,140
newer than that information exposure and

143
00:06:02,740 --> 00:06:06,310
so I<font color="#E5E5E5"> would recommend using the blocking</font>

144
00:06:05,140 --> 00:06:11,770
mode even though<font color="#E5E5E5"> it does have that</font>

145
00:06:06,310 --> 00:06:14,860
limitation<font color="#E5E5E5"> alright so here we've got an</font>

146
00:06:11,770 --> 00:06:17,560
HTTP request simplified a little bit

147
00:06:14,860 --> 00:06:19,420
fairly standard send it out asking for

148
00:06:17,560 --> 00:06:21,700
index.html and you get back a response

149
00:06:19,420 --> 00:06:24,700
that would have these headers and also a

150
00:06:21,700 --> 00:06:27,400
<font color="#CCCCCC">Content payload so if</font><font color="#E5E5E5"> you're sending the</font>

151
00:06:24,700 --> 00:06:29,050
x x SS protection header you can just

152
00:06:27,400 --> 00:06:30,940
send it in your response like this and

153
00:06:29,050 --> 00:06:33,430
that<font color="#CCCCCC"> tells the browser if you</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> this</font>

154
00:06:30,940 --> 00:06:35,469
script that occurs in<font color="#E5E5E5"> the request you</font>

155
00:06:33,430 --> 00:06:37,900
send out and in the response that comes

156
00:06:35,470 --> 00:06:40,690
back block that page display a blank

157
00:06:37,900 --> 00:06:42,099
page so<font color="#CCCCCC"> i'm</font><font color="#E5E5E5"> going to go and give a</font>

158
00:06:40,690 --> 00:06:45,940
little<font color="#CCCCCC"> example this so you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> how</font>

159
00:06:42,100 --> 00:06:52,210
<font color="#CCCCCC">it</font><font color="#E5E5E5"> works so</font><font color="#CCCCCC"> i've got a very simple web</font>

160
00:06:45,940 --> 00:06:54,760
application here and turns out that you

161
00:06:52,210 --> 00:06:57,520
can send in your own input there and so

162
00:06:54,760 --> 00:07:02,740
it's not just how a world<font color="#CCCCCC"> it's whatever</font>

163
00:06:57,520 --> 00:07:05,169
I want it to be and if I'm feeling

164
00:07:02,740 --> 00:07:07,510
malicious I can actually<font color="#E5E5E5"> send some</font>

165
00:07:05,170 --> 00:07:08,920
script into the page as you can see<font color="#CCCCCC"> that</font>

166
00:07:07,510 --> 00:07:10,330
started executing so this would be<font color="#CCCCCC"> a</font>

167
00:07:08,920 --> 00:07:12,430
cross-site scripting attack of the

168
00:07:10,330 --> 00:07:14,710
reflected<font color="#E5E5E5"> form or something I sent in</font>

169
00:07:12,430 --> 00:07:17,169
the response is echoed back in the page

170
00:07:14,710 --> 00:07:18,849
and then execute in this case I've told

171
00:07:17,169 --> 00:07:21,190
<font color="#E5E5E5">my web application to disable that</font>

172
00:07:18,850 --> 00:07:23,140
default protection that<font color="#CCCCCC"> you get from XX</font>

173
00:07:21,190 --> 00:07:25,600
SS protection so that's why the script

174
00:07:23,140 --> 00:07:28,630
actually executed but i<font color="#E5E5E5"> also have a flag</font>

175
00:07:25,600 --> 00:07:30,850
here that i can turn on that puts that

176
00:07:28,630 --> 00:07:33,520
protection back in place and once I've

177
00:07:30,850 --> 00:07:34,810
done<font color="#E5E5E5"> this you can see Chrome's giving me</font>

178
00:07:33,520 --> 00:07:37,539
a little message saying that excess

179
00:07:34,810 --> 00:07:39,669
that's auditor refused to render that

180
00:07:37,540 --> 00:07:44,490
content execute that script because the

181
00:07:39,669 --> 00:07:46,659
server sent<font color="#E5E5E5"> x.x SS protection header and</font>

182
00:07:44,490 --> 00:07:48,880
similarly if I were going to<font color="#E5E5E5"> turn on</font>

183
00:07:46,660 --> 00:07:50,530
that blocking mode you see you just get

184
00:07:48,880 --> 00:07:51,850
a blank page there's nothing at all so

185
00:07:50,530 --> 00:07:54,479
there's no<font color="#CCCCCC"> chance that that script would</font>

186
00:07:51,850 --> 00:07:54,480
be<font color="#E5E5E5"> able to execute</font>

187
00:07:58,250 --> 00:08:03,390
<font color="#E5E5E5">alright moving on to our next defense</font>

188
00:08:01,500 --> 00:08:06,960
against cross-site scripting this is

189
00:08:03,390 --> 00:08:11,130
content security policy so CSP is a w3c

190
00:08:06,960 --> 00:08:13,409
standard it allows you to control which

191
00:08:11,130 --> 00:08:16,020
resources are being accessed by a

192
00:08:13,410 --> 00:08:17,190
<font color="#E5E5E5">website so you tell the browser these</font>

193
00:08:16,020 --> 00:08:19,380
are the resources you're allowed to

194
00:08:17,190 --> 00:08:22,200
access you can't go look at anything

195
00:08:19,380 --> 00:08:24,270
else it also has a nice property where

196
00:08:22,200 --> 00:08:26,130
if the browser detects that it<font color="#E5E5E5"> will be</font>

197
00:08:24,270 --> 00:08:28,289
<font color="#E5E5E5">violating that policy that you sent down</font>

198
00:08:26,130 --> 00:08:30,840
it can actually report back to you and

199
00:08:28,290 --> 00:08:32,669
tell you hey you had a policy that said

200
00:08:30,840 --> 00:08:35,370
I can only load images from this

201
00:08:32,669 --> 00:08:36,630
particular<font color="#E5E5E5"> origin but I tried to load</font>

202
00:08:35,370 --> 00:08:38,729
one from somewhere else here's what

203
00:08:36,630 --> 00:08:41,010
happened so this is<font color="#CCCCCC"> a really great</font>

204
00:08:38,729 --> 00:08:43,229
property because it allows you to set up

205
00:08:41,010 --> 00:08:44,819
<font color="#E5E5E5">and report only mode watch what happens</font>

206
00:08:43,229 --> 00:08:46,740
and<font color="#E5E5E5"> then tune your policies accordingly</font>

207
00:08:44,820 --> 00:08:50,520
to reflect<font color="#E5E5E5"> the real behavior on your</font>

208
00:08:46,740 --> 00:08:52,020
<font color="#E5E5E5">site I really love this it's also great</font>

209
00:08:50,520 --> 00:08:54,870
to imagine what<font color="#E5E5E5"> would happen if children</font>

210
00:08:52,020 --> 00:08:56,610
work this way be like hey kids no video

211
00:08:54,870 --> 00:08:59,820
games after 9pm and then the next

212
00:08:56,610 --> 00:09:01,410
<font color="#E5E5E5">morning mom dead</font><font color="#CCCCCC"> I snuck downstairs and</font>

213
00:08:59,820 --> 00:09:05,640
played some<font color="#CCCCCC"> video games last</font><font color="#E5E5E5"> night it'd</font>

214
00:09:01,410 --> 00:09:08,640
be pretty cool<font color="#E5E5E5"> all right one of the</font>

215
00:09:05,640 --> 00:09:11,220
<font color="#CCCCCC">challenges</font><font color="#E5E5E5"> of this as a developing</font>

216
00:09:08,640 --> 00:09:12,750
standard which it really is is that you

217
00:09:11,220 --> 00:09:14,670
can't just send one header and get

218
00:09:12,750 --> 00:09:17,610
coverage everywhere I don't know if any

219
00:09:14,670 --> 00:09:19,589
of you remember back in the days of<font color="#E5E5E5"> IE 4</font>

220
00:09:17,610 --> 00:09:21,150
and<font color="#CCCCCC"> netscape for some of you probably</font>

221
00:09:19,590 --> 00:09:22,620
been<font color="#E5E5E5"> around that long where you had to</font>

222
00:09:21,150 --> 00:09:23,579
<font color="#E5E5E5">write your code for one browser and then</font>

223
00:09:22,620 --> 00:09:25,860
you write your<font color="#E5E5E5"> code for the other</font>

224
00:09:23,580 --> 00:09:28,530
browser well this is that it affect all

225
00:09:25,860 --> 00:09:30,990
over again I suspect<font color="#E5E5E5"> over time all the</font>

226
00:09:28,530 --> 00:09:33,209
browsers will confirm converge on what's

227
00:09:30,990 --> 00:09:35,910
now the<font color="#E5E5E5"> define standard which is the</font>

228
00:09:33,210 --> 00:09:37,170
content<font color="#E5E5E5"> security policy header but for</font>

229
00:09:35,910 --> 00:09:38,730
<font color="#E5E5E5">now if you wanted to get complete</font>

230
00:09:37,170 --> 00:09:40,589
<font color="#E5E5E5">coverage</font><font color="#CCCCCC"> you would have to send three</font>

231
00:09:38,730 --> 00:09:43,350
different headers with the same policy

232
00:09:40,590 --> 00:09:45,360
information in them one to<font color="#E5E5E5"> cover newer</font>

233
00:09:43,350 --> 00:09:47,850
versions of<font color="#CCCCCC"> Chrome and Firefox one to</font>

234
00:09:45,360 --> 00:09:49,410
cover<font color="#E5E5E5"> IE and older versions of</font><font color="#CCCCCC"> Firefox</font>

235
00:09:47,850 --> 00:09:51,660
and then one to cover the webkit-based

236
00:09:49,410 --> 00:09:57,689
browsers safari in the<font color="#E5E5E5"> older versions of</font>

237
00:09:51,660 --> 00:09:59,280
<font color="#CCCCCC">Chrome so content security policy allows</font>

238
00:09:57,690 --> 00:10:01,320
you to control over any external

239
00:09:59,280 --> 00:10:03,060
resources that your site may be pulling

240
00:10:01,320 --> 00:10:06,540
in things like scripts<font color="#E5E5E5"> that are</font>

241
00:10:03,060 --> 00:10:07,279
executing embedded media images custom

242
00:10:06,540 --> 00:10:11,060
fonts

243
00:10:07,279 --> 00:10:13,129
I recommend<font color="#CCCCCC"> that you start off and use a</font>

244
00:10:11,060 --> 00:10:14,599
simple policy that will mostly report

245
00:10:13,129 --> 00:10:16,879
and shut<font color="#E5E5E5"> down things you absolutely</font>

246
00:10:14,600 --> 00:10:18,709
don't<font color="#CCCCCC"> want to use so for example if</font><font color="#E5E5E5"> you</font>

247
00:10:16,879 --> 00:10:20,689
run<font color="#CCCCCC"> financial services website it's</font>

248
00:10:18,709 --> 00:10:23,449
<font color="#E5E5E5">unlikely that you'll have embedded audio</font>

249
00:10:20,689 --> 00:10:25,699
and media in your site so<font color="#E5E5E5"> you could say</font>

250
00:10:23,449 --> 00:10:27,769
media none you're not allowed<font color="#CCCCCC"> to execute</font>

251
00:10:25,699 --> 00:10:29,240
media and then if for some reason there

252
00:10:27,769 --> 00:10:31,069
were vulnerability in the media player

253
00:10:29,240 --> 00:10:35,899
an attacker wouldn't be able to<font color="#E5E5E5"> get code</font>

254
00:10:31,069 --> 00:10:37,309
into your page that with load media this

255
00:10:35,899 --> 00:10:38,680
<font color="#E5E5E5">also will give you a chance to get</font>

256
00:10:37,309 --> 00:10:40,639
<font color="#E5E5E5">familiar with content security policy</font>

257
00:10:38,680 --> 00:10:42,290
learn<font color="#E5E5E5"> about how it works and then</font>

258
00:10:40,639 --> 00:10:43,699
potentially use some of the more

259
00:10:42,290 --> 00:10:48,349
powerful<font color="#E5E5E5"> features that would allow you</font>

260
00:10:43,699 --> 00:10:49,878
to shut down scripts<font color="#E5E5E5"> in the future so</font>

261
00:10:48,350 --> 00:10:51,439
this<font color="#E5E5E5"> is what it looks like when you're</font>

262
00:10:49,879 --> 00:10:53,720
deploying a request we've got<font color="#E5E5E5"> our</font>

263
00:10:51,439 --> 00:10:55,579
familiar HTTP<font color="#CCCCCC"> requests and in the</font>

264
00:10:53,720 --> 00:10:58,100
response the server sends some

265
00:10:55,579 --> 00:11:00,290
directives explaining what content is

266
00:10:58,100 --> 00:11:01,670
allowed to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> executed in that page so</font>

267
00:11:00,290 --> 00:11:03,349
here we've got<font color="#CCCCCC"> something that says this</font>

268
00:11:01,670 --> 00:11:06,290
page is not<font color="#E5E5E5"> allowed</font><font color="#CCCCCC"> to run JavaScript</font>

269
00:11:03,350 --> 00:11:08,420
and if you see any violations of that

270
00:11:06,290 --> 00:11:15,949
policy report<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to me make a call to</font>

271
00:11:08,420 --> 00:11:20,689
this uri one note that<font color="#CCCCCC"> i wanted</font><font color="#E5E5E5"> to make</font>

272
00:11:15,949 --> 00:11:23,779
in terms of practical application to

273
00:11:20,689 --> 00:11:25,730
really get at cross-site scripting you

274
00:11:23,779 --> 00:11:27,769
want to set up a policy that says all of

275
00:11:25,730 --> 00:11:30,439
your scripts must be loaded off of the

276
00:11:27,769 --> 00:11:32,809
server and get any script in line in the

277
00:11:30,439 --> 00:11:34,910
page moved away and that way if an

278
00:11:32,809 --> 00:11:37,309
attacker injects script into your page

279
00:11:34,910 --> 00:11:39,769
the browser can say script in<font color="#CCCCCC"> that page</font>

280
00:11:37,309 --> 00:11:41,839
<font color="#CCCCCC">is not allowed to execute block that as</font>

281
00:11:39,769 --> 00:11:43,879
a<font color="#E5E5E5"> policy violation this can be</font>

282
00:11:41,839 --> 00:11:46,610
challenging<font color="#E5E5E5"> for those of us who are</font>

283
00:11:43,879 --> 00:11:48,620
developers developers and especially

284
00:11:46,610 --> 00:11:49,850
what developers like to move fast we

285
00:11:48,620 --> 00:11:53,029
like to get<font color="#CCCCCC"> Co</font><font color="#E5E5E5"> it out we'd like to get</font>

286
00:11:49,850 --> 00:11:55,730
it working and the practice of writing

287
00:11:53,029 --> 00:11:57,589
code only<font color="#CCCCCC"> in script files that are</font>

288
00:11:55,730 --> 00:11:59,839
<font color="#E5E5E5">included rather than code that is in</font>

289
00:11:57,589 --> 00:12:02,149
line into the<font color="#E5E5E5"> page requires a little</font><font color="#CCCCCC"> bit</font>

290
00:11:59,839 --> 00:12:05,149
<font color="#CCCCCC">of adjustment so something to be aware</font>

291
00:12:02,149 --> 00:12:06,889
of that there may be some cultural

292
00:12:05,149 --> 00:12:09,079
adjustments in your organization before

293
00:12:06,889 --> 00:12:12,259
<font color="#CCCCCC">this is something that you could adopt I</font>

294
00:12:09,079 --> 00:12:13,819
think it's relatively new it's very

295
00:12:12,259 --> 00:12:15,769
promising especially because of<font color="#E5E5E5"> that</font>

296
00:12:13,819 --> 00:12:17,329
ability to report back on policy

297
00:12:15,769 --> 00:12:19,189
violations and<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> think everyone</font>

298
00:12:17,329 --> 00:12:20,489
should keep an eye on this as<font color="#CCCCCC"> it makes</font>

299
00:12:19,189 --> 00:12:22,620
its way out into<font color="#E5E5E5"> all browse</font>

300
00:12:20,490 --> 00:12:23,610
<font color="#E5E5E5">it's more broad support I suspect it's</font>

301
00:12:22,620 --> 00:12:25,050
going<font color="#E5E5E5"> to be one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the most powerful</font>

302
00:12:23,610 --> 00:12:31,500
tools<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have against cross-site</font>

303
00:12:25,050 --> 00:12:34,260
scripting<font color="#CCCCCC"> all right moving on to number</font>

304
00:12:31,500 --> 00:12:36,959
eight on the OWASP top<font color="#CCCCCC"> 10 this is</font>

305
00:12:34,260 --> 00:12:38,910
cross-site request forgery this is where

306
00:12:36,959 --> 00:12:40,910
the attacker drives the browser to do

307
00:12:38,910 --> 00:12:44,160
something the user doesn't want to do it

308
00:12:40,910 --> 00:12:46,410
<font color="#CCCCCC">leverages the fact that people may be</font>

309
00:12:44,160 --> 00:12:49,110
using multiple sessions at the<font color="#E5E5E5"> same time</font>

310
00:12:46,410 --> 00:12:52,469
so I might<font color="#E5E5E5"> be logged</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> my webmail and</font>

311
00:12:49,110 --> 00:12:54,600
then I go surf to some other page if I

312
00:12:52,470 --> 00:12:56,750
haven't<font color="#E5E5E5"> hit an attackers page the</font>

313
00:12:54,600 --> 00:13:00,060
attacker can send a request that says I

314
00:12:56,750 --> 00:13:02,339
delete my webmail account over to the

315
00:13:00,060 --> 00:13:04,260
web mail server and because i'm logged

316
00:13:02,339 --> 00:13:06,839
in at the same time the browser<font color="#CCCCCC"> will</font>

317
00:13:04,260 --> 00:13:08,939
happily send along my cookie with my

318
00:13:06,839 --> 00:13:10,290
session ID because that's the way<font color="#E5E5E5"> that</font>

319
00:13:08,940 --> 00:13:12,270
the<font color="#CCCCCC"> webmail is going to track sessions</font>

320
00:13:10,290 --> 00:13:16,230
and unless the web mail server has some

321
00:13:12,270 --> 00:13:18,600
protection saying that<font color="#E5E5E5"> only its requests</font>

322
00:13:16,230 --> 00:13:20,700
should be honored it'll let the emotions

323
00:13:18,600 --> 00:13:23,130
page send that delete account over and<font color="#E5E5E5"> I</font>

324
00:13:20,700 --> 00:13:28,500
won't<font color="#CCCCCC"> even know what happened this is</font>

325
00:13:23,130 --> 00:13:30,870
typically handled using a random token

326
00:13:28,500 --> 00:13:33,360
something that would<font color="#CCCCCC"> be embedded and</font>

327
00:13:30,870 --> 00:13:35,520
sent along with the request either

328
00:13:33,360 --> 00:13:37,079
<font color="#E5E5E5">something random or an H Mac and the</font>

329
00:13:35,520 --> 00:13:39,270
server verifies that only sites that

330
00:13:37,079 --> 00:13:41,250
have that token are making legitimate

331
00:13:39,270 --> 00:13:45,329
requests and all the requests should be

332
00:13:41,250 --> 00:13:47,279
discarded there's a an HTTP header

333
00:13:45,329 --> 00:13:49,290
called origin that the client sends

334
00:13:47,279 --> 00:13:51,329
along that can also<font color="#E5E5E5"> be used</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> same</font>

335
00:13:49,290 --> 00:13:54,089
protection so the server would look and

336
00:13:51,329 --> 00:13:56,399
see if the client sent an<font color="#CCCCCC"> Origin</font><font color="#E5E5E5"> that</font>

337
00:13:54,089 --> 00:13:58,170
was allowed to<font color="#CCCCCC"> make requests on that</font>

338
00:13:56,399 --> 00:13:59,640
server the request would be passed

339
00:13:58,170 --> 00:14:02,310
through and if the origin were<font color="#E5E5E5"> anything</font>

340
00:13:59,640 --> 00:14:05,040
else it should be blocked so here's what

341
00:14:02,310 --> 00:14:06,479
an<font color="#E5E5E5"> Origin header request looks like this</font>

342
00:14:05,040 --> 00:14:07,740
one comes from<font color="#E5E5E5"> the client so the</font>

343
00:14:06,480 --> 00:14:09,839
browsers automatically going to<font color="#E5E5E5"> be</font>

344
00:14:07,740 --> 00:14:12,360
sending<font color="#E5E5E5"> this along whenever it's trying</font>

345
00:14:09,839 --> 00:14:14,760
to make a request for one of those

346
00:14:12,360 --> 00:14:16,500
external resources and the server can

347
00:14:14,760 --> 00:14:17,939
look and see<font color="#CCCCCC"> ok is this coming from my</font>

348
00:14:16,500 --> 00:14:20,760
site or is this coming from something I

349
00:14:17,940 --> 00:14:21,839
don't know and so in the delete account

350
00:14:20,760 --> 00:14:23,459
example if you've got one of these

351
00:14:21,839 --> 00:14:26,130
requests with an origin from attacker

352
00:14:23,459 --> 00:14:28,290
com you would say no I'm<font color="#E5E5E5"> not going to do</font>

353
00:14:26,130 --> 00:14:29,570
with<font color="#CCCCCC"> that account this is a seesaw</font>

354
00:14:28,290 --> 00:14:31,810
request and it's not a legit

355
00:14:29,570 --> 00:14:31,810
at one

356
00:14:35,839 --> 00:14:41,489
so the<font color="#E5E5E5"> next class of vulnerabilities I</font>

357
00:14:38,489 --> 00:14:43,439
wanted to talk<font color="#CCCCCC"> about is clickjacking and</font>

358
00:14:41,489 --> 00:14:46,139
clip<font color="#E5E5E5"> jacking legitimate user</font>

359
00:14:43,439 --> 00:14:48,748
interactions are sent to have unintended

360
00:14:46,139 --> 00:14:50,369
consequences really this is user

361
00:14:48,749 --> 00:14:52,379
interface bait and switch the user

362
00:14:50,369 --> 00:14:54,299
thinks he's<font color="#CCCCCC"> doing something</font><font color="#E5E5E5"> else and in</font>

363
00:14:52,379 --> 00:15:01,709
fact he<font color="#E5E5E5"> ends up doing something he</font>

364
00:14:54,299 --> 00:15:06,029
didn't<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> do so the classic way</font>

365
00:15:01,709 --> 00:15:09,420
that this attack<font color="#E5E5E5"> is exploited is you'll</font>

366
00:15:06,029 --> 00:15:12,209
have<font color="#CCCCCC"> a page and the victim site is put</font>

367
00:15:09,420 --> 00:15:14,610
into a frame on<font color="#E5E5E5"> that page and then the</font>

368
00:15:12,209 --> 00:15:17,368
attack site will render that frame

369
00:15:14,610 --> 00:15:20,069
completely transparent using style

370
00:15:17,369 --> 00:15:21,629
sheets so it's there you<font color="#E5E5E5"> just can't see</font>

371
00:15:20,069 --> 00:15:23,488
it and then the attacker will put

372
00:15:21,629 --> 00:15:26,220
something else up that the user actually

373
00:15:23,489 --> 00:15:29,100
<font color="#E5E5E5">sees that drives him to do certain user</font>

374
00:15:26,220 --> 00:15:31,739
inputs maybe type something maybe click

375
00:15:29,100 --> 00:15:34,379
here click there and he aligns those

376
00:15:31,739 --> 00:15:36,269
clicks that he's tricking the user into

377
00:15:34,379 --> 00:15:38,040
making so<font color="#CCCCCC"> that they're not</font><font color="#E5E5E5"> sent to the</font>

378
00:15:36,269 --> 00:15:42,209
attack page they're actually sent to the

379
00:15:38,040 --> 00:15:44,399
victim site so the user thinks oh I'm

380
00:15:42,209 --> 00:15:46,529
trying to win a<font color="#CCCCCC"> prize or I'm</font><font color="#E5E5E5"> trying to</font>

381
00:15:44,399 --> 00:15:49,259
play a<font color="#CCCCCC"> game by</font><font color="#E5E5E5"> clicking here and typing</font>

382
00:15:46,529 --> 00:15:50,879
there when in fact those requests might

383
00:15:49,259 --> 00:15:54,059
be sent through to<font color="#E5E5E5"> another site in a</font>

384
00:15:50,879 --> 00:15:56,100
frame<font color="#CCCCCC"> that are deleting his account or</font>

385
00:15:54,059 --> 00:15:59,279
making a balance transfer in a baking

386
00:15:56,100 --> 00:16:01,439
application something like that because

387
00:15:59,279 --> 00:16:04,350
of this the easiest defense is to

388
00:16:01,439 --> 00:16:06,748
control<font color="#E5E5E5"> the white pages can be framed so</font>

389
00:16:04,350 --> 00:16:09,509
we have an HTTP header another one<font color="#E5E5E5"> that</font>

390
00:16:06,749 --> 00:16:11,970
was introduced in<font color="#E5E5E5"> ie8 called</font><font color="#CCCCCC"> x frame</font>

391
00:16:09,509 --> 00:16:14,459
options and by setting parameters on

392
00:16:11,970 --> 00:16:15,990
this header<font color="#CCCCCC"> you can control whether or</font>

393
00:16:14,459 --> 00:16:18,809
not your site is allowed to<font color="#E5E5E5"> be placed</font>

394
00:16:15,990 --> 00:16:21,360
into a prank so there's forming options

395
00:16:18,809 --> 00:16:24,449
and deny says no I don't want to be

396
00:16:21,360 --> 00:16:26,929
framed same-origin says you can frame<font color="#E5E5E5"> me</font>

397
00:16:24,449 --> 00:16:29,790
but only<font color="#E5E5E5"> from pages on that same server</font>

398
00:16:26,929 --> 00:16:32,850
a lot of from allows you to specify a

399
00:16:29,790 --> 00:16:35,129
particular site that can frame you and

400
00:16:32,850 --> 00:16:36,869
then allow all is saying<font color="#E5E5E5"> all right</font>

401
00:16:35,129 --> 00:16:39,570
<font color="#E5E5E5">anyone can put me in</font><font color="#CCCCCC"> a frame no big deal</font>

402
00:16:36,869 --> 00:16:43,500
probably something for ad networks or

403
00:16:39,570 --> 00:16:46,170
perhaps some kind<font color="#E5E5E5"> of embedded plugin I</font>

404
00:16:43,500 --> 00:16:49,470
think it's<font color="#E5E5E5"> kind of cool this is as I</font>

405
00:16:46,170 --> 00:16:51,449
mentioned<font color="#E5E5E5"> RFC 7034 I wanted to say that</font>

406
00:16:49,470 --> 00:16:53,430
it was the very newest RFC because it

407
00:16:51,450 --> 00:16:54,960
was<font color="#E5E5E5"> approved on October 10 as an</font>

408
00:16:53,430 --> 00:16:57,569
informational standard for how browsers

409
00:16:54,960 --> 00:16:59,460
behave unfortunately there's been three

410
00:16:57,570 --> 00:17:01,560
or four other rfcs that snuck in since

411
00:16:59,460 --> 00:17:06,720
then so it's<font color="#CCCCCC"> almost the newest but it's</font>

412
00:17:01,560 --> 00:17:07,740
not quite<font color="#CCCCCC"> the brand newest one so here's</font>

413
00:17:06,720 --> 00:17:10,050
what it looks like if you're<font color="#E5E5E5"> sending</font>

414
00:17:07,740 --> 00:17:13,530
back extreme options deny it's pretty

415
00:17:10,050 --> 00:17:15,599
simple it's<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> if you want your</font>

416
00:17:13,530 --> 00:17:18,709
site to be framed with someone to pass

417
00:17:15,599 --> 00:17:20,879
that along in as a query parameter

418
00:17:18,709 --> 00:17:22,709
validated on your server side and then

419
00:17:20,880 --> 00:17:25,709
send back the same origin allowing that

420
00:17:22,709 --> 00:17:28,770
site because the attacker can't control

421
00:17:25,709 --> 00:17:30,480
that parameter being passed and it's

422
00:17:28,770 --> 00:17:33,060
going<font color="#E5E5E5"> to be on your white list so you</font>

423
00:17:30,480 --> 00:17:35,490
would only say these sites can can put

424
00:17:33,060 --> 00:17:38,190
me<font color="#E5E5E5"> in a frame I recommend using this</font>

425
00:17:35,490 --> 00:17:40,080
everywhere it's pretty simple usually

426
00:17:38,190 --> 00:17:42,420
you know when your site wants to be

427
00:17:40,080 --> 00:17:44,939
framed and you're<font color="#E5E5E5"> not cutting off a lot</font>

428
00:17:42,420 --> 00:17:48,230
by blocking framing if your site isn't

429
00:17:44,940 --> 00:17:48,230
intended to be put in a frame

430
00:17:51,500 --> 00:17:55,650
<font color="#E5E5E5">alright so I'm actually going to do a</font>

431
00:17:53,490 --> 00:17:58,530
demo of this one as<font color="#CCCCCC"> well this is going</font>

432
00:17:55,650 --> 00:18:04,680
<font color="#E5E5E5">to be a live demo on a financial</font>

433
00:17:58,530 --> 00:18:07,080
services website<font color="#CCCCCC"> okay so you've got a</font>

434
00:18:04,680 --> 00:18:11,360
very powerful financial services website

435
00:18:07,080 --> 00:18:14,159
from Fort Knox bank and you can see I

436
00:18:11,360 --> 00:18:18,120
can click and perform a transfer of a

437
00:18:14,160 --> 00:18:20,250
thousand dollars it's good enough<font color="#CCCCCC"> if I</font>

438
00:18:18,120 --> 00:18:22,110
want<font color="#E5E5E5"> to do that but unfortunately</font><font color="#CCCCCC"> this</font>

439
00:18:20,250 --> 00:18:23,730
is vulnerable to that same tack vector

440
00:18:22,110 --> 00:18:25,590
where the site could be put into a frame

441
00:18:23,730 --> 00:18:27,600
and I can be tricked into making that

442
00:18:25,590 --> 00:18:30,840
transfer so you imagine you make this

443
00:18:27,600 --> 00:18:33,419
site a bit more transparent this is i

444
00:18:30,840 --> 00:18:34,709
<font color="#CCCCCC">think twenty percent transparency but</font>

445
00:18:33,420 --> 00:18:40,380
the attacker could make that site

446
00:18:34,710 --> 00:18:41,820
disappeared completely and then<font color="#E5E5E5"> you can</font>

447
00:18:40,380 --> 00:18:44,040
go<font color="#CCCCCC"> in and</font><font color="#E5E5E5"> put something else over the</font>

448
00:18:41,820 --> 00:18:45,990
top<font color="#E5E5E5"> of it so if i can trick the user to</font>

449
00:18:44,040 --> 00:18:48,178
go into my page and<font color="#E5E5E5"> say hey look i can</font>

450
00:18:45,990 --> 00:18:50,640
get a free ipad that sounds good i'll

451
00:18:48,179 --> 00:18:53,010
get one of those<font color="#CCCCCC"> i click on</font><font color="#E5E5E5"> that but in</font>

452
00:18:50,640 --> 00:18:54,240
fact it didn't win me an<font color="#E5E5E5"> ipad it</font>

453
00:18:53,010 --> 00:18:56,120
actually transferred that thousand

454
00:18:54,240 --> 00:19:01,070
dollars away because my cliq was sent to

455
00:18:56,120 --> 00:19:01,070
the victim site and not to the<font color="#E5E5E5"> ipad side</font>

456
00:19:01,400 --> 00:19:06,450
so this<font color="#E5E5E5"> is where you can see the</font><font color="#CCCCCC"> X frame</font>

457
00:19:04,050 --> 00:19:08,639
options defense in play if I turn on

458
00:19:06,450 --> 00:19:10,920
<font color="#E5E5E5">that X frame options deny header you'll</font>

459
00:19:08,640 --> 00:19:13,740
see that the frame site refuses to load

460
00:19:10,920 --> 00:19:15,179
it no longer shows up and browser will

461
00:19:13,740 --> 00:19:16,890
tell you<font color="#CCCCCC"> that it's refusing to display</font>

462
00:19:15,179 --> 00:19:19,790
that<font color="#E5E5E5"> content because the X frame options</font>

463
00:19:16,890 --> 00:19:19,790
deny had been sent

464
00:19:21,539 --> 00:19:25,769
so one<font color="#E5E5E5"> thing I want to point out</font><font color="#CCCCCC"> is that</font>

465
00:19:23,759 --> 00:19:27,989
<font color="#E5E5E5">the most common way to do clickjacking</font>

466
00:19:25,769 --> 00:19:30,119
is through that framing attack but there

467
00:19:27,989 --> 00:19:31,859
<font color="#CCCCCC">are</font><font color="#E5E5E5"> other ways to send user inputs in</font>

468
00:19:30,119 --> 00:19:33,809
the wrong place you can make the move up

469
00:19:31,859 --> 00:19:36,570
the windows move around you can pop up

470
00:19:33,809 --> 00:19:38,779
new windows in place so there's a

471
00:19:36,570 --> 00:19:41,399
standard being developed by the w3c

472
00:19:38,779 --> 00:19:43,950
called you I<font color="#CCCCCC"> safety extensions to</font>

473
00:19:41,399 --> 00:19:46,350
content security policy and so these are

474
00:19:43,950 --> 00:19:48,389
<font color="#E5E5E5">similar to the existing content security</font>

475
00:19:46,350 --> 00:19:50,100
policy directives I've mentioned that

476
00:19:48,389 --> 00:19:53,189
control what resources can be<font color="#E5E5E5"> loaded on</font>

477
00:19:50,100 --> 00:19:55,889
a page but in this case<font color="#CCCCCC"> you can set</font>

478
00:19:53,190 --> 00:19:58,590
whether or not a site can be<font color="#E5E5E5"> framed you</font>

479
00:19:55,889 --> 00:20:00,689
could also<font color="#CCCCCC"> say that user input like</font>

480
00:19:58,590 --> 00:20:02,759
clicks and keyboard presses don't get

481
00:20:00,690 --> 00:20:04,440
sent to that site until after it's been

482
00:20:02,759 --> 00:20:06,869
fully visible for a certain period of

483
00:20:04,440 --> 00:20:08,549
<font color="#CCCCCC">time so you might say my site doesn't</font>

484
00:20:06,869 --> 00:20:10,619
want to receive input events until it's

485
00:20:08,549 --> 00:20:13,830
been visible to the user fully displayed

486
00:20:10,619 --> 00:20:15,418
for<font color="#E5E5E5"> 800 milliseconds and that way if the</font>

487
00:20:13,830 --> 00:20:18,059
windows are jumping around or if the

488
00:20:15,419 --> 00:20:19,559
site's been obscured somehow those user

489
00:20:18,059 --> 00:20:21,269
input events won't even trigger on the

490
00:20:19,559 --> 00:20:22,950
site<font color="#CCCCCC"> and so the attacker wouldn't be</font>

491
00:20:21,269 --> 00:20:24,359
able to<font color="#E5E5E5"> take</font><font color="#CCCCCC"> advantage of them to cause</font>

492
00:20:22,950 --> 00:20:26,599
the user to do something he didn't<font color="#CCCCCC"> want</font>

493
00:20:24,359 --> 00:20:26,599
<font color="#E5E5E5">to do</font>

494
00:20:29,750 --> 00:20:35,660
<font color="#E5E5E5">alright so number six on the OWASP top</font>

495
00:20:32,150 --> 00:20:39,290
<font color="#CCCCCC">ten is sensitive data exposure covers</font>

496
00:20:35,660 --> 00:20:41,300
several things dealing with not

497
00:20:39,290 --> 00:20:45,680
encrypting your data either a rest or in

498
00:20:41,300 --> 00:20:50,360
transit there's an attack on this that's

499
00:20:45,680 --> 00:20:52,430
fairly common called ssl stripping so a

500
00:20:50,360 --> 00:20:55,459
lot of the times when you're working

501
00:20:52,430 --> 00:20:56,960
<font color="#E5E5E5">with a web application say a shopping</font>

502
00:20:55,460 --> 00:20:58,430
app the user will have<font color="#E5E5E5"> a bunch of</font>

503
00:20:56,960 --> 00:21:01,130
interactions with the slight clicking

504
00:20:58,430 --> 00:21:02,540
around browsing for items and then<font color="#CCCCCC"> after</font>

505
00:21:01,130 --> 00:21:04,700
he's filled up his cart and he wants to

506
00:21:02,540 --> 00:21:07,970
<font color="#E5E5E5">check out then the site will transition</font>

507
00:21:04,700 --> 00:21:09,740
into HTTPS and use that secure transport

508
00:21:07,970 --> 00:21:11,240
only for the part of the transaction

509
00:21:09,740 --> 00:21:13,810
where the credit card<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the sense of</font>

510
00:21:11,240 --> 00:21:16,160
information gets transferred

511
00:21:13,810 --> 00:21:17,240
unfortunately if there's an attacker out

512
00:21:16,160 --> 00:21:19,850
there performing a man-in-the-middle

513
00:21:17,240 --> 00:21:22,100
attack he can watch all that shopping

514
00:21:19,850 --> 00:21:24,260
happen he can see<font color="#E5E5E5"> what items the user is</font>

515
00:21:22,100 --> 00:21:25,610
putting in the cart and then<font color="#CCCCCC"> right at</font>

516
00:21:24,260 --> 00:21:29,150
the<font color="#E5E5E5"> moment that the user wants</font><font color="#CCCCCC"> to</font>

517
00:21:25,610 --> 00:21:31,729
transition over to use the secure

518
00:21:29,150 --> 00:21:33,680
transaction<font color="#E5E5E5"> deciding to jump in and</font>

519
00:21:31,730 --> 00:21:35,300
start to change things because we didn't

520
00:21:33,680 --> 00:21:36,980
<font color="#CCCCCC">have the confidentiality check that you</font>

521
00:21:35,300 --> 00:21:38,810
get from the encryption we didn't<font color="#E5E5E5"> have</font>

522
00:21:36,980 --> 00:21:41,120
<font color="#CCCCCC">any integrity check and so the attacker</font>

523
00:21:38,810 --> 00:21:42,800
can actually jump in and just strip out

524
00:21:41,120 --> 00:21:45,800
all of those HTTPS s and turn them into

525
00:21:42,800 --> 00:21:47,060
HTTP an unwitting user might go<font color="#CCCCCC"> through</font>

526
00:21:45,800 --> 00:21:49,190
and enter his credit card information

527
00:21:47,060 --> 00:21:50,750
anyway not realizing<font color="#CCCCCC"> that the</font>

528
00:21:49,190 --> 00:21:56,510
transaction isn't being sent over a

529
00:21:50,750 --> 00:22:00,470
secure<font color="#CCCCCC"> Channel so there's one other</font>

530
00:21:56,510 --> 00:22:03,830
related problem which is<font color="#E5E5E5"> even if a user</font>

531
00:22:00,470 --> 00:22:06,830
knows about the security he might<font color="#E5E5E5"> not do</font>

532
00:22:03,830 --> 00:22:07,970
what's in<font color="#E5E5E5"> his best interest so I don't</font>

533
00:22:06,830 --> 00:22:09,919
know<font color="#E5E5E5"> if any of you how many of you have</font>

534
00:22:07,970 --> 00:22:11,990
clicked through on some browser security

535
00:22:09,920 --> 00:22:14,120
<font color="#E5E5E5">warning you no certificate doesn't match</font>

536
00:22:11,990 --> 00:22:15,830
it's expired most of us have done that

537
00:22:14,120 --> 00:22:18,679
you just want to<font color="#E5E5E5"> get to the page and get</font>

538
00:22:15,830 --> 00:22:21,110
your work done unfortunately in certain

539
00:22:18,680 --> 00:22:22,940
situations this is a legitimate attack

540
00:22:21,110 --> 00:22:24,889
and the<font color="#E5E5E5"> users shooting himself in the</font>

541
00:22:22,940 --> 00:22:26,480
foot by going past those warning

542
00:22:24,890 --> 00:22:28,460
messages so this has been dubbed

543
00:22:26,480 --> 00:22:31,010
<font color="#CCCCCC">click-through insecurities where in</font>

544
00:22:28,460 --> 00:22:32,630
spite of the efforts of the browser to

545
00:22:31,010 --> 00:22:35,600
warm these er you're doing<font color="#E5E5E5"> something</font>

546
00:22:32,630 --> 00:22:38,840
dangerous he goes and says ah<font color="#E5E5E5"> I don't</font>

547
00:22:35,600 --> 00:22:40,969
care i need to get my job<font color="#CCCCCC"> done sometimes</font>

548
00:22:38,840 --> 00:22:41,290
as a site operator you don't want users

549
00:22:40,970 --> 00:22:43,000
to

550
00:22:41,290 --> 00:22:49,389
be<font color="#E5E5E5"> able to opt out of security in that</font>

551
00:22:43,000 --> 00:22:53,260
way so<font color="#E5E5E5"> introduce strict Transport</font>

552
00:22:49,390 --> 00:22:57,010
Security so this<font color="#CCCCCC"> is another IETF RFC 67</font>

553
00:22:53,260 --> 00:22:59,160
97 strict Transport Security is a way to

554
00:22:57,010 --> 00:23:02,980
handle both<font color="#CCCCCC"> of these problems it</font>

555
00:22:59,160 --> 00:23:04,990
requires that the browser prevent opt

556
00:23:02,980 --> 00:23:07,150
out and it requires that every

557
00:23:04,990 --> 00:23:08,860
connection made to the server after<font color="#CCCCCC"> you</font>

558
00:23:07,150 --> 00:23:11,890
started strict Transport Security is

559
00:23:08,860 --> 00:23:14,500
over secure<font color="#CCCCCC"> transport</font><font color="#E5E5E5"> so if there's no</font>

560
00:23:11,890 --> 00:23:16,930
request that<font color="#E5E5E5"> was originally supposed to</font>

561
00:23:14,500 --> 00:23:19,000
be HTTP and the browser has previously

562
00:23:16,930 --> 00:23:21,370
seen a strict Transport Security header

563
00:23:19,000 --> 00:23:24,250
to that site it will seamlessly convert

564
00:23:21,370 --> 00:23:26,739
that to be an HTTPS connection and use

565
00:23:24,250 --> 00:23:28,660
the encryption and the authentication

566
00:23:26,740 --> 00:23:31,210
when talking<font color="#E5E5E5"> to that server so this is</font>

567
00:23:28,660 --> 00:23:34,120
pretty<font color="#E5E5E5"> nice for things like baking sites</font>

568
00:23:31,210 --> 00:23:36,130
or for box where all transactions that

569
00:23:34,120 --> 00:23:37,870
the users having ought to be over a

570
00:23:36,130 --> 00:23:40,090
<font color="#CCCCCC">secured connection you can just turn</font>

571
00:23:37,870 --> 00:23:41,739
this on and then once the user visits

572
00:23:40,090 --> 00:23:43,480
the site for the first time he'll<font color="#E5E5E5"> be</font>

573
00:23:41,740 --> 00:23:45,760
locked in and you won't be vulnerable<font color="#E5E5E5"> to</font>

574
00:23:43,480 --> 00:23:50,530
those SSL stripping attacks if someone

575
00:23:45,760 --> 00:23:52,750
can<font color="#E5E5E5"> get in the middle</font><font color="#CCCCCC"> all right so</font>

576
00:23:50,530 --> 00:23:55,420
strict Transport Security look something

577
00:23:52,750 --> 00:23:58,240
like this<font color="#E5E5E5"> it's just one header</font><font color="#CCCCCC"> you send</font>

578
00:23:55,420 --> 00:23:59,860
a max-age saying for how long<font color="#E5E5E5"> you want</font>

579
00:23:58,240 --> 00:24:02,590
<font color="#E5E5E5">to impose this requirement on the</font>

580
00:23:59,860 --> 00:24:05,949
browser the browser will<font color="#E5E5E5"> cache this it's</font>

581
00:24:02,590 --> 00:24:08,020
essentially a TTL counting down so if

582
00:24:05,950 --> 00:24:10,120
the user keeps visiting your site you

583
00:24:08,020 --> 00:24:13,240
keep<font color="#E5E5E5"> sending the header that TTL will be</font>

584
00:24:10,120 --> 00:24:16,030
extended in this case we're saying use

585
00:24:13,240 --> 00:24:17,950
SSL when talking to<font color="#E5E5E5"> me up until one year</font>

586
00:24:16,030 --> 00:24:19,750
out so as long as<font color="#E5E5E5"> the user comes back</font>

587
00:24:17,950 --> 00:24:21,400
within a year get another one of<font color="#CCCCCC"> these</font>

588
00:24:19,750 --> 00:24:25,170
headers he's always going to be using

589
00:24:21,400 --> 00:24:27,220
that secure transport to visit the site

590
00:24:25,170 --> 00:24:29,350
there's another property<font color="#CCCCCC"> that you can</font>

591
00:24:27,220 --> 00:24:33,310
set here as well called allow subdomains

592
00:24:29,350 --> 00:24:36,189
so by default this applies<font color="#E5E5E5"> only to the</font>

593
00:24:33,310 --> 00:24:37,990
server or the origin of the request if

594
00:24:36,190 --> 00:24:40,120
you set the allow subdomains it says

595
00:24:37,990 --> 00:24:43,120
<font color="#E5E5E5">also</font><font color="#CCCCCC"> apply the strict Transport Security</font>

596
00:24:40,120 --> 00:24:47,320
Policy to any of the subdomains that you

597
00:24:43,120 --> 00:24:49,629
might have<font color="#E5E5E5"> under mine so i recommend</font>

598
00:24:47,320 --> 00:24:51,669
deploying this aggressively in today's

599
00:24:49,630 --> 00:24:52,920
day and age the overhead of ssl/tls

600
00:24:51,670 --> 00:24:55,020
isn't that

601
00:24:52,920 --> 00:24:56,580
great a lot of our sites are dealing

602
00:24:55,020 --> 00:24:59,790
<font color="#CCCCCC">with sensitive transactions and we want</font>

603
00:24:56,580 --> 00:25:01,679
our users to be protected and there's I

604
00:24:59,790 --> 00:25:03,930
<font color="#E5E5E5">think very</font><font color="#CCCCCC"> little downside to putting</font>

605
00:25:01,680 --> 00:25:07,910
this in play if your site is primarily

606
00:25:03,930 --> 00:25:07,910
available via HTTPS

607
00:25:10,970 --> 00:25:17,730
alright so a related technology dealing

608
00:25:14,250 --> 00:25:20,400
with SSL and TLS transactions is the

609
00:25:17,730 --> 00:25:22,650
idea of certificate pinning so this is<font color="#CCCCCC"> a</font>

610
00:25:20,400 --> 00:25:25,650
way<font color="#CCCCCC"> of defending against a</font><font color="#E5E5E5"> different</font>

611
00:25:22,650 --> 00:25:27,930
attack vector where everything about the

612
00:25:25,650 --> 00:25:29,820
SSL transaction may be legitimate but

613
00:25:27,930 --> 00:25:32,100
perhaps<font color="#E5E5E5"> the certificate authority has</font>

614
00:25:29,820 --> 00:25:35,189
been compromised so the<font color="#E5E5E5"> way that initial</font>

615
00:25:32,100 --> 00:25:38,459
trust is established between<font color="#CCCCCC"> the client</font>

616
00:25:35,190 --> 00:25:40,470
and<font color="#E5E5E5"> the server is that they'll present a</font>

617
00:25:38,460 --> 00:25:44,490
digital certificate that asserts their

618
00:25:40,470 --> 00:25:46,860
identity now if the assertion is backed

619
00:25:44,490 --> 00:25:49,950
up by<font color="#E5E5E5"> someone who's vouching that that</font>

620
00:25:46,860 --> 00:25:52,320
user that<font color="#E5E5E5"> server or that client is who</font>

621
00:25:49,950 --> 00:25:55,350
it says it is so there<font color="#E5E5E5"> are trusted</font>

622
00:25:52,320 --> 00:25:57,120
parties like Symantec or Microsoft or

623
00:25:55,350 --> 00:26:00,810
Google that issue these certificates

624
00:25:57,120 --> 00:26:03,600
that essentially say I am who I say I am

625
00:26:00,810 --> 00:26:05,940
because that guy said so as<font color="#E5E5E5"> long as you</font>

626
00:26:03,600 --> 00:26:08,689
trust that<font color="#E5E5E5"> guy it's a pretty good system</font>

627
00:26:05,940 --> 00:26:13,080
the problem is if<font color="#E5E5E5"> there's an issue with</font>

628
00:26:08,690 --> 00:26:15,510
the other guy where perhaps his key gets

629
00:26:13,080 --> 00:26:17,909
compromised then the attacker can go and

630
00:26:15,510 --> 00:26:19,770
issue you identities pretty much at will

631
00:26:17,910 --> 00:26:21,360
and there's no<font color="#CCCCCC"> way for the client to</font>

632
00:26:19,770 --> 00:26:23,490
tell<font color="#E5E5E5"> that those new identities aren't</font>

633
00:26:21,360 --> 00:26:24,899
valid because they're still tied back to

634
00:26:23,490 --> 00:26:28,020
the trusted identity that got

635
00:26:24,900 --> 00:26:30,510
compromised so<font color="#CCCCCC"> introduced certificate</font>

636
00:26:28,020 --> 00:26:33,540
pinning or<font color="#E5E5E5"> actually more accurately</font>

637
00:26:30,510 --> 00:26:35,460
public keep inning so this<font color="#E5E5E5"> is a draft</font>

638
00:26:33,540 --> 00:26:38,159
IETF standard that's being discussed

639
00:26:35,460 --> 00:26:40,710
right now that allows you to<font color="#CCCCCC"> specify a</font>

640
00:26:38,160 --> 00:26:43,860
hash of the public key that you're going

641
00:26:40,710 --> 00:26:46,560
to<font color="#CCCCCC"> use in your ssl/tls transactions and</font>

642
00:26:43,860 --> 00:26:48,540
so that says this particular key is the

643
00:26:46,560 --> 00:26:51,780
one that<font color="#E5E5E5"> I'm going to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> so if you see</font>

644
00:26:48,540 --> 00:26:54,389
one that comes from a trusted<font color="#CCCCCC"> Authority</font>

645
00:26:51,780 --> 00:26:57,270
but it isn't<font color="#E5E5E5"> this key you want to ignore</font>

646
00:26:54,390 --> 00:27:00,120
it and throw an error message this one

647
00:26:57,270 --> 00:27:02,220
inherits the nice property that content

648
00:27:00,120 --> 00:27:05,760
security policy had where he can report

649
00:27:02,220 --> 00:27:08,640
back to the server on violations it<font color="#E5E5E5"> also</font>

650
00:27:05,760 --> 00:27:11,010
requires you to set two pins one of the

651
00:27:08,640 --> 00:27:12,690
<font color="#CCCCCC">challenges is that if you ever</font><font color="#E5E5E5"> have a</font>

652
00:27:11,010 --> 00:27:14,790
problem and<font color="#E5E5E5"> you need to refresh or renew</font>

653
00:27:12,690 --> 00:27:16,680
your certificate you don't want all your

654
00:27:14,790 --> 00:27:19,260
clients<font color="#E5E5E5"> to not be able to talk to you</font>

655
00:27:16,680 --> 00:27:20,600
any longer and so it's important<font color="#CCCCCC"> that</font>

656
00:27:19,260 --> 00:27:23,150
you have one pin as your

657
00:27:20,600 --> 00:27:25,399
primary and one is your<font color="#E5E5E5"> backup and then</font>

658
00:27:23,150 --> 00:27:27,410
roll over between the two<font color="#CCCCCC"> of</font><font color="#E5E5E5"> them once</font>

659
00:27:25,400 --> 00:27:30,440
you've moved over to the<font color="#E5E5E5"> backup pin you</font>

660
00:27:27,410 --> 00:27:31,850
put in another backup and promote to

661
00:27:30,440 --> 00:27:35,870
primary the one that<font color="#E5E5E5"> you're currently</font>

662
00:27:31,850 --> 00:27:37,909
<font color="#E5E5E5">using I think this is</font><font color="#CCCCCC"> something that</font><font color="#E5E5E5"> we</font>

663
00:27:35,870 --> 00:27:40,399
<font color="#CCCCCC">should keep an eye on</font><font color="#E5E5E5"> I also think that</font>

664
00:27:37,910 --> 00:27:42,680
the<font color="#E5E5E5"> risks are pretty high here so I</font>

665
00:27:40,400 --> 00:27:44,930
recommend against using this until it's

666
00:27:42,680 --> 00:27:48,560
become a little<font color="#CCCCCC"> bit better adopted and</font>

667
00:27:44,930 --> 00:27:50,630
there's water support I think it

668
00:27:48,560 --> 00:27:52,010
definitely a solves a problem but the

669
00:27:50,630 --> 00:27:53,900
risks of having your site go down

670
00:27:52,010 --> 00:27:55,550
because<font color="#CCCCCC"> you set your pins wrong is</font>

671
00:27:53,900 --> 00:28:02,600
<font color="#E5E5E5">really too high for most of us to take</font>

672
00:27:55,550 --> 00:28:04,070
on so here's what the certificate

673
00:28:02,600 --> 00:28:06,709
pinning header looks like<font color="#CCCCCC"> in action</font><font color="#E5E5E5"> I</font>

674
00:28:04,070 --> 00:28:08,629
set<font color="#CCCCCC"> that public key pins there's a max</font>

675
00:28:06,710 --> 00:28:10,700
age similar<font color="#E5E5E5"> to the strict Transport</font>

676
00:28:08,630 --> 00:28:12,170
Security which is a TTL counting down

677
00:28:10,700 --> 00:28:14,510
how long this information should be

678
00:28:12,170 --> 00:28:16,910
stored and then in this case there's a

679
00:28:14,510 --> 00:28:18,890
<font color="#CCCCCC">couple of pins for two different public</font>

680
00:28:16,910 --> 00:28:22,540
keys and of course<font color="#E5E5E5"> the report your</font>

681
00:28:18,890 --> 00:28:22,540
eyewear violations would be sent

682
00:28:25,940 --> 00:28:31,200
<font color="#E5E5E5">alright the next</font><font color="#CCCCCC"> area</font><font color="#E5E5E5"> I want to talk</font>

683
00:28:28,860 --> 00:28:33,629
about<font color="#E5E5E5"> is not really a security feature</font>

684
00:28:31,200 --> 00:28:35,880
or a security header it's more<font color="#E5E5E5"> of an</font>

685
00:28:33,630 --> 00:28:38,460
<font color="#E5E5E5">insecurity header but it's still very</font>

686
00:28:35,880 --> 00:28:42,660
<font color="#E5E5E5">useful so cross-origin resource sharing</font>

687
00:28:38,460 --> 00:28:46,800
or<font color="#E5E5E5"> chords is a w3c standard that's used</font>

688
00:28:42,660 --> 00:28:49,920
<font color="#E5E5E5">to enable web based api's and mashups so</font>

689
00:28:46,800 --> 00:28:52,290
much of web security back from the

690
00:28:49,920 --> 00:28:54,210
beginning of scripting has had a model

691
00:28:52,290 --> 00:28:57,149
where you have what's called the

692
00:28:54,210 --> 00:28:58,740
<font color="#CCCCCC">same-origin policy</font><font color="#E5E5E5"> so scripts are only</font>

693
00:28:57,150 --> 00:29:01,290
allowed to<font color="#E5E5E5"> communicate back to the</font>

694
00:28:58,740 --> 00:29:03,270
server that sent them presumably<font color="#E5E5E5"> saying</font>

695
00:29:01,290 --> 00:29:06,030
you can<font color="#E5E5E5"> trust yourself but don't trust</font>

696
00:29:03,270 --> 00:29:08,970
anybody else unfortunately with web

697
00:29:06,030 --> 00:29:10,590
pages or web api is sometimes you want

698
00:29:08,970 --> 00:29:12,660
two pages to be able<font color="#E5E5E5"> to interact and</font>

699
00:29:10,590 --> 00:29:15,510
talk to one another and this is great

700
00:29:12,660 --> 00:29:17,100
<font color="#CCCCCC">for creating mashups or sites that</font>

701
00:29:15,510 --> 00:29:19,980
interoperate with each other or

702
00:29:17,100 --> 00:29:25,469
rest-based API s that can be used to

703
00:29:19,980 --> 00:29:28,080
power web applications so with<font color="#E5E5E5"> Korres</font>

704
00:29:25,470 --> 00:29:30,179
it's a way of saying you don't<font color="#CCCCCC"> have to</font>

705
00:29:28,080 --> 00:29:32,280
follow<font color="#E5E5E5"> the same origin policy always a</font>

706
00:29:30,179 --> 00:29:36,920
server can individually opt<font color="#E5E5E5"> out of that</font>

707
00:29:32,280 --> 00:29:40,170
<font color="#E5E5E5">if it wants to so the way this works is</font>

708
00:29:36,920 --> 00:29:43,440
the browser<font color="#E5E5E5"> will make a cross origin</font>

709
00:29:40,170 --> 00:29:45,150
request to the server this happens

710
00:29:43,440 --> 00:29:47,370
regardless as long as it is what's

711
00:29:45,150 --> 00:29:49,740
called a simple<font color="#E5E5E5"> kors request that's</font>

712
00:29:47,370 --> 00:29:52,350
something<font color="#CCCCCC"> that uses</font><font color="#E5E5E5"> get post or head and</font>

713
00:29:49,740 --> 00:29:54,300
has a standard content<font color="#E5E5E5"> types such as</font>

714
00:29:52,350 --> 00:29:57,570
text<font color="#CCCCCC"> plane or something that's</font>

715
00:29:54,300 --> 00:30:00,840
containing form data the server receives

716
00:29:57,570 --> 00:30:02,669
the request and if the origin sent along

717
00:30:00,840 --> 00:30:05,879
in<font color="#CCCCCC"> that request</font><font color="#E5E5E5"> is one that it wants to</font>

718
00:30:02,670 --> 00:30:08,340
allow as a cross origin request it sends

719
00:30:05,880 --> 00:30:10,920
back<font color="#CCCCCC"> a response with this access control</font>

720
00:30:08,340 --> 00:30:13,230
allow origin header saying yes browser

721
00:30:10,920 --> 00:30:15,870
this origin is legitimate for cross

722
00:30:13,230 --> 00:30:17,820
origin requests<font color="#E5E5E5"> please allow it the</font>

723
00:30:15,870 --> 00:30:19,709
browser gets the response and if the

724
00:30:17,820 --> 00:30:23,070
origin matches the one that it requested

725
00:30:19,710 --> 00:30:25,200
it gives the JavaScript layer access<font color="#CCCCCC"> to</font>

726
00:30:23,070 --> 00:30:27,389
the content of the response if the

727
00:30:25,200 --> 00:30:30,030
origins don't match the browser prevents

728
00:30:27,390 --> 00:30:32,309
the access to that content so an

729
00:30:30,030 --> 00:30:33,899
interesting thing here<font color="#CCCCCC"> is the request is</font>

730
00:30:32,309 --> 00:30:37,160
going to happen regardless but<font color="#E5E5E5"> the</font>

731
00:30:33,900 --> 00:30:37,160
response may not be made available

732
00:30:37,830 --> 00:30:43,418
this covers the case of simple cross

733
00:30:40,630 --> 00:30:46,539
origin requests but<font color="#E5E5E5"> sometimes actually</font>

734
00:30:43,419 --> 00:30:48,700
often<font color="#E5E5E5"> you have web api's that are more</font>

735
00:30:46,539 --> 00:30:52,390
complicated<font color="#E5E5E5"> they may be using other HTTP</font>

736
00:30:48,700 --> 00:30:54,460
verbs like put or delete for those we

737
00:30:52,390 --> 00:30:56,289
have additional protections that are

738
00:30:54,460 --> 00:30:59,710
required<font color="#E5E5E5"> before the browser allowed to</font>

739
00:30:56,289 --> 00:31:02,740
make<font color="#E5E5E5"> that request it's called a</font>

740
00:30:59,710 --> 00:31:05,140
pre-flight check so any kind of more

741
00:31:02,740 --> 00:31:07,510
complicated request has to go through

742
00:31:05,140 --> 00:31:09,929
pre-flight first and that means sending

743
00:31:07,510 --> 00:31:12,879
an options<font color="#E5E5E5"> request over to that</font><font color="#CCCCCC"> endpoint</font>

744
00:31:09,929 --> 00:31:15,429
<font color="#E5E5E5">requesting access and then server</font>

745
00:31:12,880 --> 00:31:18,280
responds and says yes you're<font color="#E5E5E5"> allowed to</font>

746
00:31:15,429 --> 00:31:19,620
access this<font color="#E5E5E5"> X endpoint cross-origin here</font>

747
00:31:18,280 --> 00:31:23,110
are the methods you're allowed to use

748
00:31:19,620 --> 00:31:25,299
and then the browser<font color="#E5E5E5"> will make a second</font>

749
00:31:23,110 --> 00:31:27,129
request the actual<font color="#E5E5E5"> request with the put</font>

750
00:31:25,299 --> 00:31:29,679
method and then get the data back in the

751
00:31:27,130 --> 00:31:34,059
response and expose it to the script

752
00:31:29,679 --> 00:31:36,070
layer there's a few<font color="#CCCCCC"> other things</font><font color="#E5E5E5"> that</font>

753
00:31:34,059 --> 00:31:38,399
<font color="#CCCCCC">you can pass with additional headers</font>

754
00:31:36,070 --> 00:31:41,500
there's access control request

755
00:31:38,400 --> 00:31:42,880
credentials which says whether or not

756
00:31:41,500 --> 00:31:44,980
cookies should be sent along in that

757
00:31:42,880 --> 00:31:48,390
<font color="#E5E5E5">cross origin request there's access</font>

758
00:31:44,980 --> 00:31:51,520
control request headers which says I

759
00:31:48,390 --> 00:31:54,039
want to modify the headers in that<font color="#E5E5E5"> xml</font>

760
00:31:51,520 --> 00:31:56,168
<font color="#E5E5E5">httprequest cross-origin am I allowed to</font>

761
00:31:54,039 --> 00:31:58,330
<font color="#E5E5E5">or not and there's access control</font>

762
00:31:56,169 --> 00:31:59,710
exposed headers where the server can

763
00:31:58,330 --> 00:32:01,689
send back a<font color="#E5E5E5"> message to the browser</font>

764
00:31:59,710 --> 00:32:03,940
saying<font color="#CCCCCC"> all right here's my</font><font color="#E5E5E5"> cross origin</font>

765
00:32:01,690 --> 00:32:05,710
response and there's some non-standard

766
00:32:03,940 --> 00:32:08,169
headers in these response that I want

767
00:32:05,710 --> 00:32:11,440
you<font color="#E5E5E5"> to be made available to the script</font>

768
00:32:08,169 --> 00:32:13,240
layer so for example if<font color="#E5E5E5"> you have custom</font>

769
00:32:11,440 --> 00:32:15,640
headers that<font color="#CCCCCC"> your web api is returning</font>

770
00:32:13,240 --> 00:32:17,289
that have critical information you'd

771
00:32:15,640 --> 00:32:18,580
send back an excess control exposed

772
00:32:17,289 --> 00:32:20,408
headers with the name of those headers

773
00:32:18,580 --> 00:32:21,939
saying that the browser should allow

774
00:32:20,409 --> 00:32:24,299
access<font color="#E5E5E5"> to them when it makes a course</font>

775
00:32:21,940 --> 00:32:24,299
request

776
00:32:25,389 --> 00:32:30,579
there's a couple of<font color="#E5E5E5"> things to think</font>

777
00:32:27,489 --> 00:32:33,129
<font color="#CCCCCC">about when implementing</font><font color="#E5E5E5"> cords first off</font>

778
00:32:30,579 --> 00:32:35,440
you're getting that origin header but

779
00:32:33,129 --> 00:32:36,998
it's pretty<font color="#E5E5E5"> easy to spoof I could fire</font>

780
00:32:35,440 --> 00:32:39,399
up curl and make a request to<font color="#E5E5E5"> your</font>

781
00:32:36,999 --> 00:32:41,889
server with any origin I want so don't

782
00:32:39,399 --> 00:32:43,629
rely on origin for access control let's

783
00:32:41,889 --> 00:32:44,859
check that to see<font color="#E5E5E5"> whether or not you</font>

784
00:32:43,629 --> 00:32:48,639
should be allowing a cross origin

785
00:32:44,859 --> 00:32:51,339
request the second is something i call

786
00:32:48,639 --> 00:32:53,889
promiscuous<font color="#CCCCCC"> cores you can send back</font>

787
00:32:51,339 --> 00:32:55,389
access control origin star which means

788
00:32:53,889 --> 00:32:58,089
<font color="#CCCCCC">that anyone is allowed to</font><font color="#E5E5E5"> do a cross</font>

789
00:32:55,389 --> 00:33:00,158
origin request to your site the reason<font color="#E5E5E5"> I</font>

790
00:32:58,089 --> 00:33:02,440
recommend it gets this is because you

791
00:33:00,159 --> 00:33:04,269
<font color="#CCCCCC">don't necessarily know where that site</font>

792
00:33:02,440 --> 00:33:06,459
is running or how it might be protected

793
00:33:04,269 --> 00:33:08,469
and there are certainly<font color="#E5E5E5"> cases where a</font>

794
00:33:06,459 --> 00:33:11,529
site that's sending this allow origin

795
00:33:08,469 --> 00:33:13,690
response could be on your intranet in

796
00:33:11,529 --> 00:33:16,570
that case if it's sending access control

797
00:33:13,690 --> 00:33:18,999
allow origin star it means that<font color="#E5E5E5"> anyone</font>

798
00:33:16,570 --> 00:33:22,208
can make requests to it if you have a

799
00:33:18,999 --> 00:33:24,459
user on your local network he might hit

800
00:33:22,209 --> 00:33:26,200
an attackers page on the internet and

801
00:33:24,459 --> 00:33:28,359
that attacker is allowed to<font color="#E5E5E5"> make it</font>

802
00:33:26,200 --> 00:33:30,339
cross origin request to your internal

803
00:33:28,359 --> 00:33:32,529
site and so there's a good chance<font color="#E5E5E5"> in</font>

804
00:33:30,339 --> 00:33:34,629
<font color="#E5E5E5">this scenario that some data might leak</font>

805
00:33:32,529 --> 00:33:36,729
out that wasn't intended<font color="#E5E5E5"> so it's better</font>

806
00:33:34,629 --> 00:33:39,039
just to whitelist the origins that<font color="#E5E5E5"> you</font>

807
00:33:36,729 --> 00:33:41,639
explicitly approve and not just open it

808
00:33:39,039 --> 00:33:41,639
up carp<font color="#E5E5E5"> launched</font>

809
00:33:45,120 --> 00:33:51,489
so some sites have to deal with user

810
00:33:48,460 --> 00:33:53,590
input most sites view some sites deal

811
00:33:51,490 --> 00:33:55,630
with untrusted user input that is

812
00:33:53,590 --> 00:33:57,250
actually in<font color="#CCCCCC"> that form of files so this</font>

813
00:33:55,630 --> 00:33:59,679
is<font color="#CCCCCC"> something that box deals with all the</font>

814
00:33:57,250 --> 00:34:01,059
time users are uploading files to store

815
00:33:59,679 --> 00:34:04,919
and share and we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be</font>

816
00:34:01,059 --> 00:34:04,918
delivering<font color="#CCCCCC"> those back to other people</font>

817
00:34:05,039 --> 00:34:09,819
it's important because of<font color="#E5E5E5"> that same</font>

818
00:34:07,330 --> 00:34:12,250
origin policy that any of<font color="#E5E5E5"> that untrusted</font>

819
00:34:09,819 --> 00:34:15,129
user content isn't treated as if<font color="#E5E5E5"> it were</font>

820
00:34:12,250 --> 00:34:17,319
coming<font color="#CCCCCC"> from your domain and there's a</font>

821
00:34:15,129 --> 00:34:19,359
few tools that allow you to completely

822
00:34:17,319 --> 00:34:22,540
segregate that this is a<font color="#E5E5E5"> little bit like</font>

823
00:34:19,359 --> 00:34:25,540
a glove box<font color="#E5E5E5"> for untrusted content with</font>

824
00:34:22,540 --> 00:34:29,649
<font color="#E5E5E5">access control sorry with</font><font color="#CCCCCC"> X content type</font>

825
00:34:25,540 --> 00:34:31,359
options this allows you to say I don't

826
00:34:29,649 --> 00:34:34,149
want you to try<font color="#E5E5E5"> to guess what type of</font>

827
00:34:31,359 --> 00:34:38,049
content<font color="#CCCCCC"> I have so there's a very nice</font>

828
00:34:34,149 --> 00:34:40,388
behavior<font color="#E5E5E5"> nice behavior in IE in</font>

829
00:34:38,050 --> 00:34:41,950
particular but also other browsers where

830
00:34:40,389 --> 00:34:43,899
they'll look at the content that<font color="#E5E5E5"> comes</font>

831
00:34:41,949 --> 00:34:45,969
back and try to guess how to<font color="#E5E5E5"> render it</font>

832
00:34:43,899 --> 00:34:48,759
so if you your server sends a response

833
00:34:45,969 --> 00:34:50,918
with content-type text plane and then

834
00:34:48,760 --> 00:34:52,480
there's a bunch<font color="#E5E5E5"> of HTML and Internet</font>

835
00:34:50,918 --> 00:34:54,819
<font color="#E5E5E5">Explorer will look at that and decide</font>

836
00:34:52,480 --> 00:34:56,649
well that looks like HTML clearly you

837
00:34:54,819 --> 00:34:58,990
meant for me to execute that and render

838
00:34:56,649 --> 00:35:00,940
it and so if there were script in there

839
00:34:58,990 --> 00:35:03,430
that script would be executed off of

840
00:35:00,940 --> 00:35:05,109
<font color="#E5E5E5">your domain fortunately there's a way to</font>

841
00:35:03,430 --> 00:35:07,450
turn that<font color="#E5E5E5"> off and that's by sending</font><font color="#CCCCCC"> X</font>

842
00:35:05,109 --> 00:35:09,609
content type options no sniff and that

843
00:35:07,450 --> 00:35:11,200
<font color="#E5E5E5">tells the browser just obey the content</font>

844
00:35:09,609 --> 00:35:15,640
type I told you don't try<font color="#E5E5E5"> to guess what</font>

845
00:35:11,200 --> 00:35:19,240
it's supposed to be<font color="#E5E5E5"> X download options</font>

846
00:35:15,640 --> 00:35:22,118
is related it means that<font color="#E5E5E5"> when of page</font>

847
00:35:19,240 --> 00:35:24,368
comes and the file download box appears

848
00:35:22,119 --> 00:35:28,030
don't allow the user to open it in the

849
00:35:24,369 --> 00:35:30,400
browser so this forces it to go bypass

850
00:35:28,030 --> 00:35:33,060
the browser and reduces the chances that

851
00:35:30,400 --> 00:35:36,250
the user might choose to open a

852
00:35:33,060 --> 00:35:38,680
potentially malicious HTML file and the

853
00:35:36,250 --> 00:35:40,000
last one<font color="#E5E5E5"> the content-disposition allows</font>

854
00:35:38,680 --> 00:35:41,770
you to force the download as an

855
00:35:40,000 --> 00:35:43,930
attachment so if you say

856
00:35:41,770 --> 00:35:46,869
content-disposition attachment instead

857
00:35:43,930 --> 00:35:48,578
of rendering the page at all<font color="#E5E5E5"> it'll go</font>

858
00:35:46,869 --> 00:35:51,270
straight to the download dialogue and be

859
00:35:48,579 --> 00:35:51,270
delivered to disk

860
00:35:51,880 --> 00:35:55,599
so you can use all three of these

861
00:35:53,690 --> 00:35:58,759
together look something like this

862
00:35:55,599 --> 00:36:00,589
<font color="#E5E5E5">content type options no sniff download</font>

863
00:35:58,759 --> 00:36:03,230
option is no open content-disposition

864
00:36:00,589 --> 00:36:05,839
attachment so here user was making a

865
00:36:03,230 --> 00:36:07,970
request for index.html and because of

866
00:36:05,839 --> 00:36:09,619
<font color="#E5E5E5">the content-disposition header it would</font>

867
00:36:07,970 --> 00:36:18,288
be delivered to the<font color="#E5E5E5"> disk as a download</font>

868
00:36:09,619 --> 00:36:20,269
in the<font color="#E5E5E5"> file download HTML so the last</font>

869
00:36:18,289 --> 00:36:24,109
thing I wanted to<font color="#E5E5E5"> talk about today deals</font>

870
00:36:20,269 --> 00:36:26,839
with<font color="#CCCCCC"> OS pop</font><font color="#E5E5E5"> 10 number two broken</font>

871
00:36:24,109 --> 00:36:29,180
authentication and session management so

872
00:36:26,839 --> 00:36:32,359
most websites use some form of cookies

873
00:36:29,180 --> 00:36:34,368
to track sessions HTTP is inherently a

874
00:36:32,359 --> 00:36:36,710
stateless protocol and so you're making

875
00:36:34,369 --> 00:36:38,359
<font color="#CCCCCC">a series of requests you want to track</font>

876
00:36:36,710 --> 00:36:40,430
that those requests are associated<font color="#CCCCCC"> with</font>

877
00:36:38,359 --> 00:36:43,009
each other in some way and the best tool

878
00:36:40,430 --> 00:36:44,509
we<font color="#E5E5E5"> have today is cookies you have some</font>

879
00:36:43,009 --> 00:36:46,400
unique<font color="#E5E5E5"> identifiers in the cookie that</font>

880
00:36:44,509 --> 00:36:49,130
gets sent<font color="#CCCCCC"> back and forth identifying</font>

881
00:36:46,400 --> 00:36:51,079
that user or that session unfortunately

882
00:36:49,130 --> 00:36:53,269
the cookie is really just a bearer token

883
00:36:51,079 --> 00:36:55,609
whoever has the cookie whoever has the

884
00:36:53,269 --> 00:36:57,558
token is the person and that's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> the</font>

885
00:36:55,609 --> 00:36:59,660
best security model to have because if

886
00:36:57,559 --> 00:37:02,240
it gets stolen anyone else can assume

887
00:36:59,660 --> 00:37:04,819
the identity of that<font color="#E5E5E5"> session there's a</font>

888
00:37:02,240 --> 00:37:06,649
few things that are under discussion to

889
00:37:04,819 --> 00:37:08,869
try to solve this problem by<font color="#CCCCCC"> building a</font>

890
00:37:06,650 --> 00:37:12,579
better way of maintaining sessions into

891
00:37:08,869 --> 00:37:16,190
<font color="#E5E5E5">the HTTP protocol with some extensions</font>

892
00:37:12,579 --> 00:37:18,769
the first I'll mention is session

893
00:37:16,190 --> 00:37:20,450
continuation so that's adding new

894
00:37:18,769 --> 00:37:22,459
headers that will be used specifically

895
00:37:20,450 --> 00:37:24,379
to manage sessions and they won't have

896
00:37:22,460 --> 00:37:27,950
this property that<font color="#E5E5E5"> they're a bearer</font>

897
00:37:24,380 --> 00:37:30,319
token the second is<font color="#E5E5E5"> the idea of an</font>

898
00:37:27,950 --> 00:37:32,899
<font color="#E5E5E5">origin cookie this was proposed a few</font>

899
00:37:30,319 --> 00:37:38,829
years ago by Andrew Board sees not drop

900
00:37:32,900 --> 00:37:38,829
box Adam Barth<font color="#CCCCCC"> and Alexei</font>

901
00:37:38,850 --> 00:37:44,460
just kiss that's<font color="#E5E5E5"> exactly how you say it</font>

902
00:37:41,820 --> 00:37:46,950
but<font color="#E5E5E5"> the idea here is that the cookie is</font>

903
00:37:44,460 --> 00:37:48,690
tied to a particular origin server and

904
00:37:46,950 --> 00:37:51,299
if someone<font color="#E5E5E5"> else tries to send that</font>

905
00:37:48,690 --> 00:37:54,240
cookie the browser would not send it

906
00:37:51,300 --> 00:37:58,410
along and then the<font color="#CCCCCC"> third idea is</font>

907
00:37:54,240 --> 00:38:00,299
something that's proposed by dirtball

908
00:37:58,410 --> 00:38:03,299
fonts at Google which is called channel

909
00:38:00,300 --> 00:38:05,520
ID and this is a way<font color="#CCCCCC"> of tying set a</font>

910
00:38:03,300 --> 00:38:09,120
session or attributes of that session

911
00:38:05,520 --> 00:38:11,970
back into an ssl/tls connection and so

912
00:38:09,120 --> 00:38:14,850
if<font color="#CCCCCC"> you have that information stored</font>

913
00:38:11,970 --> 00:38:16,350
along with that ssl/tls connection you

914
00:38:14,850 --> 00:38:18,720
can't steal<font color="#E5E5E5"> it and use it somewhere else</font>

915
00:38:16,350 --> 00:38:21,839
<font color="#E5E5E5">because it's cryptographically bound to</font>

916
00:38:18,720 --> 00:38:23,759
that channel it's not clear which of

917
00:38:21,840 --> 00:38:25,440
these will win they all have merits they

918
00:38:23,760 --> 00:38:27,330
all have things that<font color="#CCCCCC"> are not so good</font>

919
00:38:25,440 --> 00:38:28,980
about them but the<font color="#E5E5E5"> point is there's</font>

920
00:38:27,330 --> 00:38:31,529
<font color="#E5E5E5">discussions going on about how we might</font>

921
00:38:28,980 --> 00:38:33,420
<font color="#E5E5E5">better manage web sessions</font><font color="#CCCCCC"> and encourage</font>

922
00:38:31,530 --> 00:38:34,740
people to keep an eye on that and be

923
00:38:33,420 --> 00:38:36,660
able<font color="#E5E5E5"> to take use of it when it actually</font>

924
00:38:34,740 --> 00:38:42,209
comes out and starts being supported in

925
00:38:36,660 --> 00:38:44,600
browsers so in<font color="#CCCCCC"> summary I wanted to go</font>

926
00:38:42,210 --> 00:38:48,990
over some recommendations for all of you

927
00:38:44,600 --> 00:38:51,270
xxs protects XSS protection one mode

928
00:38:48,990 --> 00:38:54,180
equals walk I<font color="#E5E5E5"> think you can use that</font>

929
00:38:51,270 --> 00:38:55,800
everywhere it's pretty<font color="#E5E5E5"> safe occasionally</font>

930
00:38:54,180 --> 00:38:57,419
you might have false positives if your

931
00:38:55,800 --> 00:38:59,730
site is actually trying to send data

932
00:38:57,420 --> 00:39:01,260
<font color="#CCCCCC">that will be echoed back in the page but</font>

933
00:38:59,730 --> 00:39:02,700
generally just<font color="#E5E5E5"> use it everywhere and</font><font color="#CCCCCC"> it</font>

934
00:39:01,260 --> 00:39:05,130
will protect<font color="#E5E5E5"> you against some cross-site</font>

935
00:39:02,700 --> 00:39:07,439
scripting attacks content security

936
00:39:05,130 --> 00:39:09,720
policy I think<font color="#CCCCCC"> this is something to play</font>

937
00:39:07,440 --> 00:39:12,030
around with get to know<font color="#CCCCCC"> it be familiar</font>

938
00:39:09,720 --> 00:39:13,709
with what it does set up a simple policy

939
00:39:12,030 --> 00:39:15,720
and establish that infrastructure so<font color="#CCCCCC"> you</font>

940
00:39:13,710 --> 00:39:17,460
can start<font color="#E5E5E5"> getting reports back and think</font>

941
00:39:15,720 --> 00:39:19,439
about moving your organization to using

942
00:39:17,460 --> 00:39:22,470
this in the<font color="#E5E5E5"> longer term as it becomes</font>

943
00:39:19,440 --> 00:39:25,730
available across more browsers and is

944
00:39:22,470 --> 00:39:25,730
better standardized

945
00:39:26,099 --> 00:39:30,809
<font color="#CCCCCC">block see surf either by validating an</font>

946
00:39:28,559 --> 00:39:32,819
<font color="#CCCCCC">origin header or by using something else</font>

947
00:39:30,809 --> 00:39:36,239
like randomized tokens in your

948
00:39:32,819 --> 00:39:37,859
application framework I think<font color="#E5E5E5"> x-ray</font>

949
00:39:36,239 --> 00:39:40,739
<font color="#E5E5E5">mountains deny you can also deploy</font>

950
00:39:37,859 --> 00:39:43,529
pretty widely there's pretty much no

951
00:39:40,739 --> 00:39:45,569
harm to sending<font color="#E5E5E5"> that response back it'll</font>

952
00:39:43,529 --> 00:39:47,819
<font color="#E5E5E5">protect you against clickjacking attacks</font>

953
00:39:45,569 --> 00:39:50,220
and you tend to<font color="#E5E5E5"> know when you want your</font>

954
00:39:47,819 --> 00:39:51,720
page to be put into a frame<font color="#E5E5E5"> and you can</font>

955
00:39:50,220 --> 00:39:54,779
adjust the header accordingly in those

956
00:39:51,720 --> 00:39:57,359
situations only strict Transport

957
00:39:54,779 --> 00:39:59,430
Security I'm a big fan I think<font color="#CCCCCC"> if your</font>

958
00:39:57,359 --> 00:40:01,589
site is primarily using secure transport

959
00:39:59,430 --> 00:40:03,118
where you can support primarily secure

960
00:40:01,589 --> 00:40:06,509
transport you should be turning on

961
00:40:03,119 --> 00:40:08,849
strict Transport Security lastly<font color="#CCCCCC"> X</font>

962
00:40:06,509 --> 00:40:10,440
content type options no sniff you can

963
00:40:08,849 --> 00:40:12,180
pretty much send this everywhere and

964
00:40:10,440 --> 00:40:14,099
have your server sent back to correct

965
00:40:12,180 --> 00:40:15,779
constant type there's no reason for the

966
00:40:14,099 --> 00:40:17,369
browser to be guessing as long as<font color="#CCCCCC"> you</font>

967
00:40:15,779 --> 00:40:23,700
have things configured correctly on your

968
00:40:17,369 --> 00:40:25,739
site so these slides and a resource deck

969
00:40:23,700 --> 00:40:27,989
with references on all the topics is

970
00:40:25,739 --> 00:40:29,999
available at the URL here if you have

971
00:40:27,989 --> 00:40:33,559
any questions I'm happy to answer them

972
00:40:29,999 --> 00:40:33,558
by email also in person in<font color="#E5E5E5"> the room</font>

973
00:40:37,710 --> 00:40:39,770
you

