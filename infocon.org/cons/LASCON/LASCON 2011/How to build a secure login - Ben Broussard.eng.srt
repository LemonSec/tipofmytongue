1
00:00:01,639 --> 00:00:11,219
yeah captures the video on the<font color="#E5E5E5"> kind of</font>

2
00:00:04,650 --> 00:00:15,120
<font color="#CCCCCC">life all right last talk of the day how</font>

3
00:00:11,219 --> 00:00:16,619
to build a secure login page it's been

4
00:00:15,120 --> 00:00:18,900
<font color="#CCCCCC">Broussard he's been involved in the</font>

5
00:00:16,619 --> 00:00:20,910
Austin or wasp chapters<font color="#CCCCCC"> it's 2008</font>

6
00:00:18,900 --> 00:00:23,400
getting technical tops serving on the

7
00:00:20,910 --> 00:00:25,920
last on board the chapter board and

8
00:00:23,400 --> 00:00:28,740
organizing the study group outside of

9
00:00:25,920 --> 00:00:31,489
OSP is one on the hats of mainframe and

10
00:00:28,740 --> 00:00:33,739
web app developer cryptographer

11
00:00:31,489 --> 00:00:36,480
<font color="#E5E5E5">pentester he launched his own</font>

12
00:00:33,739 --> 00:00:39,750
application security business g'dalien

13
00:00:36,480 --> 00:00:42,180
security LLC on the side he does

14
00:00:39,750 --> 00:00:45,059
research into brains and AI logic and

15
00:00:42,180 --> 00:00:48,989
mathematical puzzles and is an avid 80s

16
00:00:45,059 --> 00:01:01,108
dancer which is the last 15 minutes<font color="#E5E5E5"> you</font>

17
00:00:48,989 --> 00:01:04,768
ever taught<font color="#CCCCCC"> ok floors as far as this all</font>

18
00:01:01,109 --> 00:01:06,860
right everybody hear me just fine too

19
00:01:04,769 --> 00:01:11,189
loud too quiet now perfect all right

20
00:01:06,860 --> 00:01:12,990
yeah<font color="#E5E5E5"> I'm Ben Broussard I am an 80s</font>

21
00:01:11,189 --> 00:01:14,759
dancer you'll catch me<font color="#E5E5E5"> downtown if you</font>

22
00:01:12,990 --> 00:01:19,408
go on Friday 80s dance night

23
00:01:14,760 --> 00:01:23,040
Barbarella's anyways let's talk day

24
00:01:19,409 --> 00:01:24,780
bound to<font color="#E5E5E5"> be a little sleepy I'll try to</font>

25
00:01:23,040 --> 00:01:26,850
keep it lively when we get to the attack

26
00:01:24,780 --> 00:01:29,759
section which is<font color="#E5E5E5"> the second half it's a</font>

27
00:01:26,850 --> 00:01:34,320
lot of<font color="#E5E5E5"> fun we talked</font><font color="#CCCCCC"> about some examples</font>

28
00:01:29,759 --> 00:01:38,310
of real attacks ways to win bidding on

29
00:01:34,320 --> 00:01:40,619
<font color="#CCCCCC">eBay fun stuff</font><font color="#E5E5E5"> like that so I don't to</font>

30
00:01:38,310 --> 00:01:45,240
keep you awake if it's not feel free<font color="#CCCCCC"> to</font>

31
00:01:40,619 --> 00:01:46,439
go to<font color="#E5E5E5"> sleep all</font><font color="#CCCCCC"> right or you know</font><font color="#E5E5E5"> you</font>

32
00:01:45,240 --> 00:01:47,670
can also get excited because the

33
00:01:46,439 --> 00:01:49,679
mechanical bull is going to be here

34
00:01:47,670 --> 00:01:52,770
after this talk and the bar will be open

35
00:01:49,680 --> 00:01:55,619
so a lot of<font color="#E5E5E5"> things to look forward to</font>

36
00:01:52,770 --> 00:02:00,539
here at last con<font color="#E5E5E5"> all right how to build</font>

37
00:01:55,619 --> 00:02:07,549
a secure login so quick poll who here is

38
00:02:00,540 --> 00:02:07,549
a developer awesome you are<font color="#CCCCCC"> to Carl</font>

39
00:02:07,729 --> 00:02:13,940
<font color="#E5E5E5">alright well good because that means</font>

40
00:02:11,160 --> 00:02:16,650
that<font color="#CCCCCC"> i can kind of speak more freely</font>

41
00:02:13,940 --> 00:02:18,750
about<font color="#E5E5E5"> the technical side of things going</font>

42
00:02:16,650 --> 00:02:21,990
on<font color="#E5E5E5"> this talk is broken down</font><font color="#CCCCCC"> into two</font>

43
00:02:18,750 --> 00:02:23,460
sections how authentication works take

44
00:02:21,990 --> 00:02:26,970
you through kind of what<font color="#E5E5E5"> i see is the</font>

45
00:02:23,460 --> 00:02:29,340
five sections of that and then we'll go

46
00:02:26,970 --> 00:02:34,350
into<font color="#CCCCCC"> the attacks and defenses on each</font>

47
00:02:29,340 --> 00:02:37,680
step<font color="#CCCCCC"> so let's do it all right the pre</font>

48
00:02:34,350 --> 00:02:40,829
log in section 5 sections pre login the

49
00:02:37,680 --> 00:02:44,340
login page the<font color="#E5E5E5"> login redirect vlog in</font>

50
00:02:40,830 --> 00:02:47,370
section and<font color="#CCCCCC"> log out so in the pre</font><font color="#E5E5E5"> login</font>

51
00:02:44,340 --> 00:02:48,960
section users get to the site in a bunch

52
00:02:47,370 --> 00:02:52,080
of<font color="#E5E5E5"> different</font><font color="#CCCCCC"> ways they don't just put</font>

53
00:02:48,960 --> 00:02:53,610
the URL into the URL bar on the browser

54
00:02:52,080 --> 00:02:56,580
they can also get there from search

55
00:02:53,610 --> 00:02:59,930
engine from bookmarks they have links

56
00:02:56,580 --> 00:03:02,370
from emails iframes on other sites and

57
00:02:59,930 --> 00:03:04,110
<font color="#E5E5E5">I'm going to talk briefly about the</font>

58
00:03:02,370 --> 00:03:05,400
request response model of the internet

59
00:03:04,110 --> 00:03:07,710
but since so many of your developers

60
00:03:05,400 --> 00:03:09,360
most of you probably have a good grasp

61
00:03:07,710 --> 00:03:11,989
on that which is<font color="#CCCCCC"> good because it's</font>

62
00:03:09,360 --> 00:03:18,570
required to understand a lot of<font color="#E5E5E5"> these</font>

63
00:03:11,989 --> 00:03:22,440
<font color="#E5E5E5">attacks and defenses so in the pre login</font>

64
00:03:18,570 --> 00:03:24,470
area<font color="#E5E5E5"> it's you don't have any validation</font>

65
00:03:22,440 --> 00:03:27,840
of who's who so<font color="#E5E5E5"> you can't really</font>

66
00:03:24,470 --> 00:03:29,580
complete a lot of actions but you can

67
00:03:27,840 --> 00:03:31,020
usually start actions if it's a shopping

68
00:03:29,580 --> 00:03:34,290
cart application you can usually add

69
00:03:31,020 --> 00:03:35,820
stuff to your shopping cart so there's a

70
00:03:34,290 --> 00:03:38,910
lot<font color="#E5E5E5"> of pre login actions that can</font>

71
00:03:35,820 --> 00:03:41,760
actually be done and we'll talk about

72
00:03:38,910 --> 00:03:43,829
the attacks on those later also<font color="#CCCCCC"> two</font>

73
00:03:41,760 --> 00:03:46,609
things<font color="#E5E5E5"> that are in the pre login area</font>

74
00:03:43,830 --> 00:03:51,360
our account creation and password reset

75
00:03:46,610 --> 00:03:54,060
those are fun to attack the request

76
00:03:51,360 --> 00:03:56,250
response model if you<font color="#E5E5E5"> pull up an HTTP</font>

77
00:03:54,060 --> 00:04:00,209
proxy like burp suite or web scarab or

78
00:03:56,250 --> 00:04:02,519
<font color="#CCCCCC">boxy proxy or fire tabs or you know</font>

79
00:04:00,209 --> 00:04:04,200
there are<font color="#CCCCCC"> a bunch of them you'll see the</font>

80
00:04:02,519 --> 00:04:06,570
actual text that's going by and the

81
00:04:04,200 --> 00:04:09,179
request and response HTTP is just text

82
00:04:06,570 --> 00:04:13,079
you've got this is an example get

83
00:04:09,180 --> 00:04:15,450
request<font color="#CCCCCC"> request goes from the</font><font color="#E5E5E5"> client to</font>

84
00:04:13,080 --> 00:04:17,519
the server response comes back the

85
00:04:15,450 --> 00:04:19,180
response contains some headers such as a

86
00:04:17,519 --> 00:04:22,630
set cookie header that's an

87
00:04:19,180 --> 00:04:25,990
or one that's really the most important

88
00:04:22,630 --> 00:04:30,750
one it also<font color="#E5E5E5"> includes in an HTTP code</font>

89
00:04:25,990 --> 00:04:35,220
like 200 ok or 302 found redirects you

90
00:04:30,750 --> 00:04:35,220
but yeah<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a request responsible</font>

91
00:04:35,360 --> 00:04:45,409
a login page we're<font color="#E5E5E5"> getting a little</font>

92
00:04:38,060 --> 00:04:49,550
static here I'll put a leg up yeah it's

93
00:04:45,409 --> 00:04:50,930
working<font color="#CCCCCC"> alright the</font><font color="#E5E5E5"> login page users can</font>

94
00:04:49,550 --> 00:04:54,110
get to the login page in different ways

95
00:04:50,930 --> 00:04:57,080
and<font color="#CCCCCC"> click</font><font color="#E5E5E5"> on the login link they can</font>

96
00:04:54,110 --> 00:04:58,639
also attempt to go to a logged-in page

97
00:04:57,080 --> 00:05:01,250
without being logged in often<font color="#E5E5E5"> this is</font>

98
00:04:58,639 --> 00:05:02,810
<font color="#E5E5E5">when they bookmark a page that's an</font>

99
00:05:01,250 --> 00:05:05,840
authenticated page and then they try to

100
00:05:02,810 --> 00:05:07,729
<font color="#E5E5E5">go back to it a week later and they can</font>

101
00:05:05,840 --> 00:05:09,859
also make a request to logged in page

102
00:05:07,729 --> 00:05:12,650
<font color="#E5E5E5">after the session has expired this</font>

103
00:05:09,860 --> 00:05:14,330
happens a lot on long forms where you're

104
00:05:12,650 --> 00:05:17,090
filling<font color="#E5E5E5"> out the form takes you an hour</font>

105
00:05:14,330 --> 00:05:20,870
to fill out you hit submit and you're no

106
00:05:17,090 --> 00:05:23,000
longer logged in login page needs to

107
00:05:20,870 --> 00:05:26,210
know where<font color="#CCCCCC"> to send the user after a</font>

108
00:05:23,000 --> 00:05:28,189
successful login so this is necessary

109
00:05:26,210 --> 00:05:30,830
input into the login page it needs to

110
00:05:28,189 --> 00:05:34,219
know once you have<font color="#E5E5E5"> submitted valid</font>

111
00:05:30,830 --> 00:05:35,840
credentials where to redirect you to if

112
00:05:34,219 --> 00:05:37,460
it doesn't<font color="#CCCCCC"> know that</font><font color="#E5E5E5"> where's it going to</font>

113
00:05:35,840 --> 00:05:41,869
send you you<font color="#CCCCCC"> log is not not back to the</font>

114
00:05:37,460 --> 00:05:44,060
login page right so input input to the

115
00:05:41,870 --> 00:05:45,500
login page includes a bunch of<font color="#CCCCCC"> stuff</font>

116
00:05:44,060 --> 00:05:47,779
more stuff than just a username<font color="#CCCCCC"> and</font>

117
00:05:45,500 --> 00:05:51,229
password it also often has a pre login

118
00:05:47,779 --> 00:05:53,180
cookie which might have a tie to the

119
00:05:51,229 --> 00:05:55,159
cart details if it's a shopping cart

120
00:05:53,180 --> 00:05:59,150
like application or if it has<font color="#E5E5E5"> any pre</font>

121
00:05:55,159 --> 00:06:01,039
login functionality also anti cross-site

122
00:05:59,150 --> 00:06:03,080
request forgery tokens are common

123
00:06:01,039 --> 00:06:05,180
CAPTCHAs are sometimes<font color="#E5E5E5"> there sometimes</font>

124
00:06:03,080 --> 00:06:09,378
there's a second factor RSA tokens

125
00:06:05,180 --> 00:06:11,810
something like<font color="#E5E5E5"> that so here the</font><font color="#CCCCCC"> the two</font>

126
00:06:09,379 --> 00:06:15,860
setups one you click<font color="#E5E5E5"> on the login link</font>

127
00:06:11,810 --> 00:06:18,529
and request goes from the client from

128
00:06:15,860 --> 00:06:22,430
the<font color="#E5E5E5"> client to the server server returns</font>

129
00:06:18,529 --> 00:06:24,620
the login form in the response the the

130
00:06:22,430 --> 00:06:26,419
other way is<font color="#CCCCCC"> when you've been logged out</font>

131
00:06:24,620 --> 00:06:27,620
from inactivity or you try to go to a

132
00:06:26,419 --> 00:06:31,669
login<font color="#E5E5E5"> page but you're not actually</font>

133
00:06:27,620 --> 00:06:33,500
logged in<font color="#CCCCCC"> you're 302 found response so</font>

134
00:06:31,669 --> 00:06:36,169
you make<font color="#CCCCCC"> the request to logged in area</font>

135
00:06:33,500 --> 00:06:38,659
you get a 302 found response your

136
00:06:36,169 --> 00:06:41,359
<font color="#E5E5E5">browser process is that</font><font color="#CCCCCC"> response in a</font>

137
00:06:38,659 --> 00:06:43,009
302 found response there<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> location</font>

138
00:06:41,360 --> 00:06:45,919
header and that location tells<font color="#E5E5E5"> your</font>

139
00:06:43,009 --> 00:06:48,259
browser where to redirect<font color="#E5E5E5"> YouTube so it</font>

140
00:06:45,919 --> 00:06:49,070
redirects you to the login page and you

141
00:06:48,259 --> 00:06:50,890
make a request for

142
00:06:49,070 --> 00:06:56,570
login page you get back the login form

143
00:06:50,890 --> 00:06:57,710
here is a it's important you<font color="#E5E5E5"> don't</font>

144
00:06:56,570 --> 00:07:01,430
necessarily have to be able<font color="#E5E5E5"> to read all</font>

145
00:06:57,710 --> 00:07:03,979
of that but I'll go through it briefly

146
00:07:01,430 --> 00:07:06,380
you make a request to<font color="#E5E5E5"> the login page or</font>

147
00:07:03,980 --> 00:07:09,740
to a<font color="#E5E5E5"> logged-in page in this case it's</font>

148
00:07:06,380 --> 00:07:12,260
male / inbox that PHP with email ID

149
00:07:09,740 --> 00:07:14,810
equals 11 and action equals<font color="#CCCCCC"> mark as</font><font color="#E5E5E5"> read</font>

150
00:07:12,260 --> 00:07:16,610
so you're marking the<font color="#E5E5E5"> 11th email as read</font>

151
00:07:14,810 --> 00:07:18,770
you're trying<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do that but you've</font>

152
00:07:16,610 --> 00:07:22,040
waited too long and<font color="#E5E5E5"> so your account is</font>

153
00:07:18,770 --> 00:07:26,630
inactive you get a 302 response it

154
00:07:22,040 --> 00:07:28,490
contains<font color="#CCCCCC"> 22 important headers it</font>

155
00:07:26,630 --> 00:07:29,870
contains other headers as well but two

156
00:07:28,490 --> 00:07:32,210
that are really important for<font color="#CCCCCC"> the login</font>

157
00:07:29,870 --> 00:07:33,500
functionality which is a set cookie

158
00:07:32,210 --> 00:07:35,539
header so this always comes<font color="#E5E5E5"> in a</font>

159
00:07:33,500 --> 00:07:40,430
response request header might have a

160
00:07:35,540 --> 00:07:43,070
cookie a response header might be set

161
00:07:40,430 --> 00:07:45,500
cookie so here at setting the cookie go

162
00:07:43,070 --> 00:07:48,349
to to be what you were trying to<font color="#E5E5E5"> do in</font>

163
00:07:45,500 --> 00:07:50,300
the first place<font color="#E5E5E5"> and then it's a 30 to</font>

164
00:07:48,350 --> 00:07:53,900
respond so it redirects<font color="#E5E5E5"> you to the login</font>

165
00:07:50,300 --> 00:07:55,820
page third action here is you make a

166
00:07:53,900 --> 00:07:57,890
request the login page fourth you get

167
00:07:55,820 --> 00:08:01,730
the login page back fifth you send your

168
00:07:57,890 --> 00:08:04,880
credentials on so that's<font color="#E5E5E5"> the the fifth</font>

169
00:08:01,730 --> 00:08:06,830
one here the last<font color="#E5E5E5"> one and along with</font>

170
00:08:04,880 --> 00:08:08,870
<font color="#E5E5E5">your credentials you often also send</font>

171
00:08:06,830 --> 00:08:14,300
cookies such as an anonymous session ID

172
00:08:08,870 --> 00:08:15,350
and a<font color="#E5E5E5"> go to or a directory or where you</font>

173
00:08:14,300 --> 00:08:16,760
were trying to<font color="#E5E5E5"> go in the first place</font>

174
00:08:15,350 --> 00:08:19,250
cookies sometimes that's a cookie

175
00:08:16,760 --> 00:08:23,450
sometimes that's a parameter that gets

176
00:08:19,250 --> 00:08:28,550
put in the post body of the of the

177
00:08:23,450 --> 00:08:30,920
request<font color="#E5E5E5"> all right then there's this</font>

178
00:08:28,550 --> 00:08:33,789
login redirect this invisible part that

179
00:08:30,920 --> 00:08:37,460
most people don't see in a login<font color="#E5E5E5"> setup</font>

180
00:08:33,789 --> 00:08:40,689
but it is an important part it's a very

181
00:08:37,460 --> 00:08:44,600
important part because it's what happens

182
00:08:40,690 --> 00:08:46,880
directly after validation of users

183
00:08:44,600 --> 00:08:49,310
credentials after the user Crenna users

184
00:08:46,880 --> 00:08:52,510
credentials are validated there's a

185
00:08:49,310 --> 00:08:55,040
redirection response which contains the

186
00:08:52,510 --> 00:08:58,640
<font color="#CCCCCC">set cookie header for your session</font>

187
00:08:55,040 --> 00:09:01,280
cookie so this this 302 response also

188
00:08:58,640 --> 00:09:02,630
contains a set cookie header and it has

189
00:09:01,280 --> 00:09:07,990
your session cookie in there

190
00:09:02,630 --> 00:09:11,660
it's it's set for you it's<font color="#E5E5E5"> usually a 302</font>

191
00:09:07,990 --> 00:09:14,180
response sometimes it's<font color="#CCCCCC"> just a 200 ok</font>

192
00:09:11,660 --> 00:09:17,480
response again it includes that set

193
00:09:14,180 --> 00:09:18,709
cookie header but it redirects you to

194
00:09:17,480 --> 00:09:21,020
where you're supposed<font color="#E5E5E5"> to go in some</font>

195
00:09:18,710 --> 00:09:24,280
other way either it's using a<font color="#CCCCCC"> JavaScript</font>

196
00:09:21,020 --> 00:09:26,720
redirect redirect or a meta tag redirect

197
00:09:24,280 --> 00:09:29,569
those are the main ways to redirects on

198
00:09:26,720 --> 00:09:32,540
one and like<font color="#CCCCCC"> I said the new cookie is</font>

199
00:09:29,570 --> 00:09:36,050
the<font color="#E5E5E5"> logged in session cookie alright so</font>

200
00:09:32,540 --> 00:09:37,880
here it is broken<font color="#E5E5E5"> down three parts first</font>

201
00:09:36,050 --> 00:09:40,250
the response from a successful login so

202
00:09:37,880 --> 00:09:43,240
in the previous steps we submitted our

203
00:09:40,250 --> 00:09:46,880
login credentials<font color="#E5E5E5"> user name password</font>

204
00:09:43,240 --> 00:09:49,610
they were valid and so we get back a 302

205
00:09:46,880 --> 00:09:52,550
found responds with a session cookie

206
00:09:49,610 --> 00:09:53,930
being set you might notice<font color="#CCCCCC"> that there</font>

207
00:09:52,550 --> 00:09:57,500
are some other pieces to a session

208
00:09:53,930 --> 00:10:00,050
<font color="#E5E5E5">cookie such as the path you can</font><font color="#CCCCCC"> also</font>

209
00:09:57,500 --> 00:10:02,560
have a domain attribute<font color="#E5E5E5"> and there are</font>

210
00:10:00,050 --> 00:10:04,969
two flags here secure an HTTP only

211
00:10:02,560 --> 00:10:07,069
secure means that the cookie will only

212
00:10:04,970 --> 00:10:10,460
be submitted over SSL request that you

213
00:10:07,070 --> 00:10:12,440
make over SSL<font color="#E5E5E5"> and HTTP only means that</font>

214
00:10:10,460 --> 00:10:15,500
JavaScript won't have access<font color="#CCCCCC"> to this</font>

215
00:10:12,440 --> 00:10:18,200
cookie so JavaScript code won't be able

216
00:10:15,500 --> 00:10:21,830
to say document cookies and see the

217
00:10:18,200 --> 00:10:24,950
cookie there so you your browser gets

218
00:10:21,830 --> 00:10:26,780
back that 302 found response and it does

219
00:10:24,950 --> 00:10:29,420
what browsers do it processes that and

220
00:10:26,780 --> 00:10:33,949
it goes to the location<font color="#CCCCCC"> it's told to and</font>

221
00:10:29,420 --> 00:10:36,500
so you make a new request to mail /em

222
00:10:33,950 --> 00:10:40,010
box<font color="#CCCCCC"> dot PHP with email ID equals 11 and</font>

223
00:10:36,500 --> 00:10:42,230
action equals mark as read and you send

224
00:10:40,010 --> 00:10:44,660
the cookie with this new request in fact

225
00:10:42,230 --> 00:10:47,270
from<font color="#E5E5E5"> now on every request you make to</font>

226
00:10:44,660 --> 00:10:50,709
the appropriate domain and path and

227
00:10:47,270 --> 00:10:53,750
possibly with some SSL restrictions

228
00:10:50,710 --> 00:10:56,150
contains the cookie this<font color="#CCCCCC"> is something</font>

229
00:10:53,750 --> 00:10:59,330
<font color="#CCCCCC">done automatically by your</font><font color="#E5E5E5"> browser every</font>

230
00:10:56,150 --> 00:11:02,240
after you log in every request that you

231
00:10:59,330 --> 00:11:04,520
make to that domain contains<font color="#E5E5E5"> our session</font>

232
00:11:02,240 --> 00:11:08,410
cookie<font color="#E5E5E5"> this is how login is maintained</font>

233
00:11:04,520 --> 00:11:08,410
that's it that's all<font color="#CCCCCC"> the information</font>

234
00:11:08,500 --> 00:11:13,700
it's not<font color="#E5E5E5"> very common for servers to look</font>

235
00:11:11,870 --> 00:11:15,740
at<font color="#E5E5E5"> things like what IP address is this</font>

236
00:11:13,700 --> 00:11:17,750
coming from or any information like

237
00:11:15,740 --> 00:11:20,000
that it's usually just what cookie value

238
00:11:17,750 --> 00:11:22,070
are they giving me okay that that's tied

239
00:11:20,000 --> 00:11:26,440
to some session that I have<font color="#E5E5E5"> stored so</font>

240
00:11:22,070 --> 00:11:29,180
the cookie is<font color="#E5E5E5"> the person is the browser</font>

241
00:11:26,440 --> 00:11:31,730
and then a response comes back from the

242
00:11:29,180 --> 00:11:34,849
server with the resource they were

243
00:11:31,730 --> 00:11:39,350
trying<font color="#E5E5E5"> to get to in the first place so</font>

244
00:11:34,850 --> 00:11:43,330
now they're logged in and they have

245
00:11:39,350 --> 00:11:46,250
access to sensitive data they can<font color="#E5E5E5"> take</font>

246
00:11:43,330 --> 00:11:47,900
powerful actions they can do all sorts

247
00:11:46,250 --> 00:11:51,200
of stuff it's logged in<font color="#E5E5E5"> it's the juicy</font>

248
00:11:47,900 --> 00:11:52,760
part of the application the like I<font color="#E5E5E5"> said</font>

249
00:11:51,200 --> 00:11:54,590
the user stays logged in because the

250
00:11:52,760 --> 00:11:57,110
browser adds the cookie header with

251
00:11:54,590 --> 00:12:01,040
every request to<font color="#CCCCCC"> the appropriate domain</font>

252
00:11:57,110 --> 00:12:07,400
and paths with flags and such was there

253
00:12:01,040 --> 00:12:10,189
a question often users have to fill<font color="#CCCCCC"> out</font>

254
00:12:07,400 --> 00:12:12,949
long forms that take longer than the

255
00:12:10,190 --> 00:12:16,700
<font color="#E5E5E5">inactivity log out period that's tricky</font>

256
00:12:12,950 --> 00:12:20,870
because forms do a post request and a

257
00:12:16,700 --> 00:12:22,010
post request has all the details<font color="#E5E5E5"> that</font>

258
00:12:20,870 --> 00:12:24,110
you put in there<font color="#E5E5E5"> just like when you</font><font color="#CCCCCC"> log</font>

259
00:12:22,010 --> 00:12:26,420
<font color="#CCCCCC">in it has a post body so it has when you</font>

260
00:12:24,110 --> 00:12:28,520
<font color="#E5E5E5">log in its user name and the equals and</font>

261
00:12:26,420 --> 00:12:31,189
whatever username you have an ampersand

262
00:12:28,520 --> 00:12:34,880
password equals whatever password you

263
00:12:31,190 --> 00:12:40,310
have when you get logged out<font color="#E5E5E5"> and then</font>

264
00:12:34,880 --> 00:12:42,439
logged back in the the 302 redirect just

265
00:12:40,310 --> 00:12:46,880
has a location header just has a URL to

266
00:12:42,440 --> 00:12:49,340
send you to so you try to do try<font color="#E5E5E5"> to post</font>

267
00:12:46,880 --> 00:12:51,830
<font color="#E5E5E5">that long form but instead</font><font color="#CCCCCC"> of it</font>

268
00:12:49,340 --> 00:12:53,390
actually<font color="#E5E5E5"> going through your redirected</font>

269
00:12:51,830 --> 00:12:56,030
to the login page and then after you

270
00:12:53,390 --> 00:12:57,530
login your redirected back to the form

271
00:12:56,030 --> 00:12:59,990
you're trying to post but without all<font color="#CCCCCC"> of</font>

272
00:12:57,530 --> 00:13:05,360
the the post body details being posted

273
00:12:59,990 --> 00:13:08,990
so maintaining<font color="#E5E5E5"> post information across</font>

274
00:13:05,360 --> 00:13:13,910
log and it's<font color="#CCCCCC"> actually a difficult quite</font>

275
00:13:08,990 --> 00:13:16,130
a difficult task actually<font color="#CCCCCC"> Karl and I sat</font>

276
00:13:13,910 --> 00:13:18,709
in a meeting one time to try to figure

277
00:13:16,130 --> 00:13:21,320
that out at UT and I don't think<font color="#CCCCCC"> we got</font>

278
00:13:18,710 --> 00:13:25,060
<font color="#E5E5E5">anywhere with it we had some ideas but</font>

279
00:13:21,320 --> 00:13:25,060
<font color="#E5E5E5">it was it was difficult to</font><font color="#CCCCCC"> implement</font>

280
00:13:28,170 --> 00:13:41,199
that's one way how long exactly but I

281
00:13:36,010 --> 00:13:43,600
mean yeah it'sit's how far do you push

282
00:13:41,200 --> 00:13:45,280
that you know that there were there are

283
00:13:43,600 --> 00:13:47,620
some cases<font color="#E5E5E5"> you can say push it eight</font>

284
00:13:45,280 --> 00:13:49,569
<font color="#E5E5E5">hours everybody works from you know nine</font>

285
00:13:47,620 --> 00:13:53,470
to five or something<font color="#CCCCCC"> like that those</font>

286
00:13:49,570 --> 00:13:55,900
cases might work other places<font color="#E5E5E5"> you don't</font>

287
00:13:53,470 --> 00:13:58,630
really have a time window that you can

288
00:13:55,900 --> 00:14:00,870
limit<font color="#CCCCCC"> it in you might have forms that</font>

289
00:13:58,630 --> 00:14:05,320
somebody has to have up and submit

290
00:14:00,870 --> 00:14:07,240
irregularly so it's in some cases you

291
00:14:05,320 --> 00:14:09,730
can just increase the timeout but in

292
00:14:07,240 --> 00:14:13,540
many cases there's not a good number to

293
00:14:09,730 --> 00:14:15,100
increase it to but yeah we've got

294
00:14:13,540 --> 00:14:16,599
developers in here so we got people<font color="#E5E5E5"> who</font>

295
00:14:15,100 --> 00:14:18,220
are like well what about this isn't this

296
00:14:16,600 --> 00:14:23,680
a solution I like to<font color="#CCCCCC"> hear that that's</font>

297
00:14:18,220 --> 00:14:25,600
good so another tricky thing with the

298
00:14:23,680 --> 00:14:27,160
<font color="#E5E5E5">logged in area is users might have</font>

299
00:14:25,600 --> 00:14:29,740
multiple tabs open they might be doing

300
00:14:27,160 --> 00:14:32,280
<font color="#E5E5E5">multiple processes at the same time so</font>

301
00:14:29,740 --> 00:14:36,340
it's<font color="#E5E5E5"> difficult to try to keep an order</font>

302
00:14:32,280 --> 00:14:38,230
to things you might have something<font color="#CCCCCC"> where</font>

303
00:14:36,340 --> 00:14:41,650
you expect somebody to go through a

304
00:14:38,230 --> 00:14:43,660
process like a checkout process say<font color="#E5E5E5"> has</font>

305
00:14:41,650 --> 00:14:45,250
five stages well when they're in the

306
00:14:43,660 --> 00:14:47,380
third stage<font color="#E5E5E5"> they might have another tab</font>

307
00:14:45,250 --> 00:14:48,910
open at their cart and they might change

308
00:14:47,380 --> 00:14:50,920
their cart details and<font color="#E5E5E5"> then go to</font><font color="#CCCCCC"> the</font>

309
00:14:48,910 --> 00:14:55,530
fourth stage and then finish the check

310
00:14:50,920 --> 00:15:00,640
out how that's handled can work in

311
00:14:55,530 --> 00:15:02,410
different ways here's an example of a

312
00:15:00,640 --> 00:15:06,520
valid<font color="#E5E5E5"> request and response during the</font>

313
00:15:02,410 --> 00:15:09,219
login logged in area it's a request to

314
00:15:06,520 --> 00:15:12,069
payroll / direct deposit dot PHP<font color="#CCCCCC"> its</font>

315
00:15:09,220 --> 00:15:15,190
post request it contains the session ID

316
00:15:12,070 --> 00:15:19,390
cookie<font color="#E5E5E5"> because it's to the valid domain</font>

317
00:15:15,190 --> 00:15:21,550
and it has post body routing number and

318
00:15:19,390 --> 00:15:23,470
account number and cross-site request

319
00:15:21,550 --> 00:15:26,349
forgery token and the response that

320
00:15:23,470 --> 00:15:31,270
comes back just to 200<font color="#CCCCCC"> okay and</font><font color="#E5E5E5"> then</font>

321
00:15:26,350 --> 00:15:32,920
whatever<font color="#CCCCCC"> webpage comes back log out</font>

322
00:15:31,270 --> 00:15:34,569
<font color="#CCCCCC">alright this is the</font><font color="#E5E5E5"> last bit of just</font>

323
00:15:32,920 --> 00:15:35,890
kind of background here's how it<font color="#E5E5E5"> all</font>

324
00:15:34,570 --> 00:15:39,030
fits together and then we're going<font color="#E5E5E5"> to go</font>

325
00:15:35,890 --> 00:15:40,949
into<font color="#E5E5E5"> attacks in the</font><font color="#CCCCCC"> logout area</font>

326
00:15:39,030 --> 00:15:43,380
users get logged out in different<font color="#CCCCCC"> ways</font>

327
00:15:40,950 --> 00:15:46,080
they might click on a log out link that

328
00:15:43,380 --> 00:15:49,140
is not<font color="#CCCCCC"> very common for users to actually</font>

329
00:15:46,080 --> 00:15:50,910
do but some people do it their session

330
00:15:49,140 --> 00:15:54,660
might expire due to inactivity<font color="#E5E5E5"> or</font>

331
00:15:50,910 --> 00:15:58,319
absolute time out they might complete an

332
00:15:54,660 --> 00:16:00,120
action some sites you you get<font color="#E5E5E5"> on the</font>

333
00:15:58,320 --> 00:16:01,380
site<font color="#CCCCCC"> you</font><font color="#E5E5E5"> login to complete an action</font>

334
00:16:00,120 --> 00:16:04,020
once you're done<font color="#CCCCCC"> with that action you're</font>

335
00:16:01,380 --> 00:16:05,910
automatically<font color="#E5E5E5"> logged back out or</font><font color="#CCCCCC"> they</font>

336
00:16:04,020 --> 00:16:07,860
might navigate<font color="#CCCCCC"> to a non logged in</font>

337
00:16:05,910 --> 00:16:10,860
section of<font color="#E5E5E5"> the site or particularly</font>

338
00:16:07,860 --> 00:16:13,080
particularly the login page itself will

339
00:16:10,860 --> 00:16:19,380
often log people out because it sets a

340
00:16:13,080 --> 00:16:23,070
new cookie so there are again kind of

341
00:16:19,380 --> 00:16:26,340
two ways<font color="#CCCCCC"> that this happens in one case</font>

342
00:16:23,070 --> 00:16:29,370
person clicks on the<font color="#CCCCCC"> logout URL they get</font>

343
00:16:26,340 --> 00:16:32,490
a 302 redirect which contains usually a

344
00:16:29,370 --> 00:16:34,290
set cookie for the the session ID cookie

345
00:16:32,490 --> 00:16:35,790
and it changes the value or it changes

346
00:16:34,290 --> 00:16:39,810
the expiration time to<font color="#CCCCCC"> sometime in the</font>

347
00:16:35,790 --> 00:16:42,540
<font color="#CCCCCC">past in order to make sure that they</font>

348
00:16:39,810 --> 00:16:43,949
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> have the correct session ID on</font>

349
00:16:42,540 --> 00:16:45,540
their browser anymore so they<font color="#CCCCCC"> actually</font>

350
00:16:43,950 --> 00:16:47,580
stay logged out<font color="#E5E5E5"> it</font><font color="#CCCCCC"> usually has a</font>

351
00:16:45,540 --> 00:16:49,860
location header as well which sends them

352
00:16:47,580 --> 00:16:51,060
to a default landing page for<font color="#CCCCCC"> the site</font>

353
00:16:49,860 --> 00:16:53,610
when<font color="#CCCCCC"> you click</font><font color="#E5E5E5"> on the log out your</font>

354
00:16:51,060 --> 00:16:56,849
redirected somewhere general it's a non

355
00:16:53,610 --> 00:16:59,790
logged in area when you get logged out

356
00:16:56,850 --> 00:17:02,790
due to inactivity you usually try to

357
00:16:59,790 --> 00:17:05,210
make a request to logged in page and you

358
00:17:02,790 --> 00:17:08,899
get redirected to the login page itself

359
00:17:05,210 --> 00:17:11,640
so again the 302 usually has a cookie

360
00:17:08,900 --> 00:17:14,250
the session ID cookie it updates that in

361
00:17:11,640 --> 00:17:16,100
some way to make<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> that your browser</font>

362
00:17:14,250 --> 00:17:19,800
no longer thinks that it's logged on

363
00:17:16,099 --> 00:17:23,760
another side to that is on the server it

364
00:17:19,800 --> 00:17:28,770
should be disabling the session that's

365
00:17:23,760 --> 00:17:33,660
tied to<font color="#CCCCCC"> that cookie</font><font color="#E5E5E5"> all right the fun</font>

366
00:17:28,770 --> 00:17:36,060
stuff attacks<font color="#CCCCCC"> alright so what are the</font>

367
00:17:33,660 --> 00:17:39,480
goals of an attacker when it comes to

368
00:17:36,060 --> 00:17:42,960
the<font color="#E5E5E5"> authentication piece of an</font>

369
00:17:39,480 --> 00:17:45,390
application obvious goals that they want

370
00:17:42,960 --> 00:17:48,150
to bypass<font color="#E5E5E5"> login they want to log in as a</font>

371
00:17:45,390 --> 00:17:50,130
different user they might want to<font color="#E5E5E5"> force</font>

372
00:17:48,150 --> 00:17:51,470
logged in users to take actions they

373
00:17:50,130 --> 00:17:53,539
don't even<font color="#E5E5E5"> need to log in</font><font color="#CCCCCC"> if they can</font>

374
00:17:51,470 --> 00:17:57,559
that they might want<font color="#E5E5E5"> to get logged in</font>

375
00:17:53,539 --> 00:17:59,990
users information affecting pre login

376
00:17:57,559 --> 00:18:01,870
actions that affect logged in actions<font color="#E5E5E5"> I</font>

377
00:17:59,990 --> 00:18:04,640
call<font color="#CCCCCC"> that like a carryover attack</font>

378
00:18:01,870 --> 00:18:07,340
usually the pre login area is less

379
00:18:04,640 --> 00:18:08,780
secured than the logged in area but if

380
00:18:07,340 --> 00:18:10,570
you can affect the pre login area you

381
00:18:08,780 --> 00:18:12,740
might be able<font color="#E5E5E5"> to have some type</font><font color="#CCCCCC"> of</font>

382
00:18:10,570 --> 00:18:16,610
effect on<font color="#E5E5E5"> the logged in area for</font>

383
00:18:12,740 --> 00:18:19,190
instance with a site like Etsy or<font color="#E5E5E5"> Amazon</font>

384
00:18:16,610 --> 00:18:23,689
if you're selling your stuff on there

385
00:18:19,190 --> 00:18:25,909
and you can get everybody to add one<font color="#E5E5E5"> of</font>

386
00:18:23,690 --> 00:18:27,559
<font color="#E5E5E5">your items to their cart then some</font>

387
00:18:25,909 --> 00:18:28,580
percentage of them won't notice and

388
00:18:27,559 --> 00:18:30,168
they'll end up going through the full

389
00:18:28,580 --> 00:18:32,809
checkout and you'll have<font color="#E5E5E5"> a whole</font><font color="#CCCCCC"> bunch</font>

390
00:18:30,169 --> 00:18:34,429
of people buying your stuff and it's not

391
00:18:32,809 --> 00:18:35,870
<font color="#CCCCCC">something that</font><font color="#E5E5E5"> you is not that you</font>

392
00:18:34,429 --> 00:18:37,010
attacked them while they were logged in

393
00:18:35,870 --> 00:18:37,908
you attack them while they weren't

394
00:18:37,010 --> 00:18:41,059
logged in yet<font color="#E5E5E5"> and they were just</font>

395
00:18:37,909 --> 00:18:43,370
<font color="#CCCCCC">browsing around on the website</font><font color="#E5E5E5"> so it's</font>

396
00:18:41,059 --> 00:18:46,610
kind of a pre login area the attack<font color="#E5E5E5"> gets</font>

397
00:18:43,370 --> 00:18:48,789
carried over you might want to get users

398
00:18:46,610 --> 00:18:51,199
to<font color="#E5E5E5"> log into a known session or account</font>

399
00:18:48,789 --> 00:18:53,870
that's a little<font color="#E5E5E5"> trickier talk talk a</font>

400
00:18:51,200 --> 00:18:56,570
little bit about that coming up getting

401
00:18:53,870 --> 00:18:59,360
valid user names passwords email

402
00:18:56,570 --> 00:19:03,820
addresses those are common and locking

403
00:18:59,360 --> 00:19:07,039
out users is sometimes just mean but

404
00:19:03,820 --> 00:19:10,610
sometimes has really useful effects for

405
00:19:07,039 --> 00:19:12,650
an attacker<font color="#E5E5E5"> alright so how thing is how</font>

406
00:19:10,610 --> 00:19:15,649
do the attacks fit into the pre login

407
00:19:12,650 --> 00:19:19,280
area sequel injection sequel injection

408
00:19:15,650 --> 00:19:21,530
gives you an attack vector at at<font color="#E5E5E5"> the</font>

409
00:19:19,280 --> 00:19:24,320
underlying database well the logged in

410
00:19:21,530 --> 00:19:26,270
area and the pre login area probably

411
00:19:24,320 --> 00:19:27,740
<font color="#CCCCCC">share the same database or at least the</font>

412
00:19:26,270 --> 00:19:32,600
same database server and you might<font color="#E5E5E5"> be</font>

413
00:19:27,740 --> 00:19:34,159
able to hop databases so protecting

414
00:19:32,600 --> 00:19:37,520
against sequel injection in the<font color="#E5E5E5"> pre</font>

415
00:19:34,159 --> 00:19:40,010
login area is just as important it's

416
00:19:37,520 --> 00:19:42,590
also probably the same database or

417
00:19:40,010 --> 00:19:44,629
database server that contains the

418
00:19:42,590 --> 00:19:47,120
passwords the usernames and passwords of

419
00:19:44,630 --> 00:19:48,860
<font color="#E5E5E5">the user table so an attack on the pre</font>

420
00:19:47,120 --> 00:19:51,260
login area can actually be an attack on

421
00:19:48,860 --> 00:19:54,500
the login<font color="#E5E5E5"> page or on the authentication</font>

422
00:19:51,260 --> 00:19:57,559
functionality cross-site scripting as a

423
00:19:54,500 --> 00:19:59,870
social engineering vector so this is fun

424
00:19:57,559 --> 00:20:02,059
you<font color="#CCCCCC"> can do a million different things</font>

425
00:19:59,870 --> 00:20:03,918
with cross-site scripting but one of<font color="#CCCCCC"> the</font>

426
00:20:02,059 --> 00:20:04,940
things<font color="#CCCCCC"> you can do is you can make a</font>

427
00:20:03,919 --> 00:20:07,790
little

428
00:20:04,940 --> 00:20:10,130
javascript<font color="#CCCCCC"> dialogue box pop up and it</font>

429
00:20:07,790 --> 00:20:14,030
has little<font color="#E5E5E5"> input fields and you can have</font>

430
00:20:10,130 --> 00:20:15,770
it say hello i<font color="#CCCCCC"> am a sysadmin of this</font>

431
00:20:14,030 --> 00:20:17,480
site please<font color="#E5E5E5"> enter your username and</font>

432
00:20:15,770 --> 00:20:19,100
<font color="#CCCCCC">password we're experiencing technical</font>

433
00:20:17,480 --> 00:20:20,750
difficulties we'd appreciate if you

434
00:20:19,100 --> 00:20:23,120
could help<font color="#E5E5E5"> us out so there's a little</font>

435
00:20:20,750 --> 00:20:26,360
<font color="#E5E5E5">username field password field they enter</font>

436
00:20:23,120 --> 00:20:30,459
it hit<font color="#CCCCCC"> okay it actually gets sent off to</font>

437
00:20:26,360 --> 00:20:34,219
evil com or whatever the malicious pages

438
00:20:30,460 --> 00:20:38,960
it was pretty convincing actually carry

439
00:20:34,220 --> 00:20:40,220
over attacks<font color="#E5E5E5"> I mentioned sending putting</font>

440
00:20:38,960 --> 00:20:42,620
something in somebody's cart in<font color="#E5E5E5"> the pre</font>

441
00:20:40,220 --> 00:20:43,760
login section having<font color="#E5E5E5"> a go to the log 10</font>

442
00:20:42,620 --> 00:20:47,330
section but they're a bunch of other

443
00:20:43,760 --> 00:20:49,010
ones cookie attacks so usually<font color="#CCCCCC"> a cookie</font>

444
00:20:47,330 --> 00:20:51,139
is how you keep session and that's<font color="#E5E5E5"> true</font>

445
00:20:49,010 --> 00:20:52,790
whether it's the login session or the

446
00:20:51,140 --> 00:20:55,250
pre<font color="#E5E5E5"> logon session if you want to keep</font>

447
00:20:52,790 --> 00:20:56,810
their cart details as they're traveling

448
00:20:55,250 --> 00:20:58,400
through the<font color="#E5E5E5"> site you</font><font color="#CCCCCC"> have to have some</font>

449
00:20:56,810 --> 00:21:00,830
session set up there's usually cooking

450
00:20:58,400 --> 00:21:03,050
involved there so there are cookie

451
00:21:00,830 --> 00:21:04,850
attacks cross-site scripting allows you

452
00:21:03,050 --> 00:21:10,730
to read cookies and set cookies and

453
00:21:04,850 --> 00:21:12,770
that's<font color="#E5E5E5"> true</font><font color="#CCCCCC"> for any sub domain or kind</font>

454
00:21:10,730 --> 00:21:15,880
of you can always set the the cookie

455
00:21:12,770 --> 00:21:19,129
domain up if you're on ABC example.com

456
00:21:15,880 --> 00:21:21,260
then you can set<font color="#E5E5E5"> the domain for example</font>

457
00:21:19,130 --> 00:21:23,080
calm and it will go for any<font color="#CCCCCC"> it'll be</font>

458
00:21:21,260 --> 00:21:27,800
sent with any requests to example.com

459
00:21:23,080 --> 00:21:30,770
see example com vc example com or<font color="#E5E5E5"> AWC</font>

460
00:21:27,800 --> 00:21:33,169
example<font color="#E5E5E5"> com so there's kind of a much</font>

461
00:21:30,770 --> 00:21:35,090
larger<font color="#CCCCCC"> attack surface for cookies than</font>

462
00:21:33,170 --> 00:21:38,720
just the the<font color="#E5E5E5"> specific domain you're</font>

463
00:21:35,090 --> 00:21:42,730
dealing with lack of SSL will show you

464
00:21:38,720 --> 00:21:45,320
what pre login cookies there are and

465
00:21:42,730 --> 00:21:47,750
when we talk about session fixation in a

466
00:21:45,320 --> 00:21:50,090
little bit you'll<font color="#E5E5E5"> see that if an</font>

467
00:21:47,750 --> 00:21:51,770
attacker<font color="#CCCCCC"> can set</font><font color="#E5E5E5"> a cookie for user and</font>

468
00:21:50,090 --> 00:21:54,800
then that gets tied to the user session

469
00:21:51,770 --> 00:21:58,310
then the<font color="#E5E5E5"> attacker knows the</font><font color="#CCCCCC"> user's</font>

470
00:21:54,800 --> 00:21:59,750
session or if the victim say they<font color="#E5E5E5"> just</font>

471
00:21:58,310 --> 00:22:01,909
go to the site they get a pre login

472
00:21:59,750 --> 00:22:04,280
cookie they go they shop a little bit

473
00:22:01,910 --> 00:22:06,620
then they<font color="#E5E5E5"> login if the login page</font>

474
00:22:04,280 --> 00:22:08,330
doesn't give them<font color="#E5E5E5"> a new cookie and an</font>

475
00:22:06,620 --> 00:22:09,739
attacker saw the cookie they were<font color="#CCCCCC"> using</font>

476
00:22:08,330 --> 00:22:13,010
when they were in the pre login area

477
00:22:09,740 --> 00:22:15,000
that didn't have SSL then the<font color="#E5E5E5"> attacker</font>

478
00:22:13,010 --> 00:22:16,830
knows the<font color="#E5E5E5"> person's logged in</font>

479
00:22:15,000 --> 00:22:19,980
ok so then since that's the only thing

480
00:22:16,830 --> 00:22:22,679
that tells the server who's who if an

481
00:22:19,980 --> 00:22:26,100
attacker uses the same cookie that some

482
00:22:22,680 --> 00:22:28,830
valid user uses then the server says oh

483
00:22:26,100 --> 00:22:32,520
yeah you're Bob welcome whatever you

484
00:22:28,830 --> 00:22:34,889
want<font color="#CCCCCC"> Bob header injection is great way</font>

485
00:22:32,520 --> 00:22:37,290
to store cookies and if the cookies are

486
00:22:34,890 --> 00:22:39,420
one and then the next<font color="#E5E5E5"> cookie is 2x</font>

487
00:22:37,290 --> 00:22:42,870
cookie is three you<font color="#E5E5E5"> can predict what</font><font color="#CCCCCC"> the</font>

488
00:22:39,420 --> 00:22:44,100
next cookie can be so that's another way

489
00:22:42,870 --> 00:22:49,830
that you can<font color="#E5E5E5"> kind of figure out what the</font>

490
00:22:44,100 --> 00:22:52,770
<font color="#CCCCCC">cookies are going to be a lot of systems</font>

491
00:22:49,830 --> 00:22:57,899
have sort<font color="#E5E5E5"> of backwards compatibility</font>

492
00:22:52,770 --> 00:23:00,780
features where if you turn off cookies

493
00:22:57,900 --> 00:23:02,640
on your browser the cookie the session

494
00:23:00,780 --> 00:23:05,610
ID will start floating through the URL

495
00:23:02,640 --> 00:23:08,040
you'll have in every request there will

496
00:23:05,610 --> 00:23:10,860
be a query string that has session ID

497
00:23:08,040 --> 00:23:15,300
<font color="#CCCCCC">cooking value or whatever equal your</font>

498
00:23:10,860 --> 00:23:17,010
session ID well if you make a request to

499
00:23:15,300 --> 00:23:19,050
another site<font color="#E5E5E5"> you click on a link on that</font>

500
00:23:17,010 --> 00:23:21,750
page that goes to a different<font color="#E5E5E5"> site the</font>

501
00:23:19,050 --> 00:23:23,550
referer header contains the URL you were

502
00:23:21,750 --> 00:23:25,860
coming from including<font color="#E5E5E5"> the query string</font>

503
00:23:23,550 --> 00:23:28,909
so if the cookies in the query string

504
00:23:25,860 --> 00:23:32,790
then that<font color="#E5E5E5"> can be accelerated</font><font color="#CCCCCC"> off-site</font>

505
00:23:28,910 --> 00:23:34,800
and always fun cross-site request

506
00:23:32,790 --> 00:23:37,050
forgery and click jacking those are ways

507
00:23:34,800 --> 00:23:39,629
to get victims to take actions without

508
00:23:37,050 --> 00:23:42,780
their knowledge or consent in the<font color="#CCCCCC"> pre</font>

509
00:23:39,630 --> 00:23:44,730
login area they still have a session so

510
00:23:42,780 --> 00:23:45,840
you can tie things to their session I'm

511
00:23:44,730 --> 00:23:48,090
saying cross-site request forgery

512
00:23:45,840 --> 00:23:49,409
clickjacking and i would suggest looking

513
00:23:48,090 --> 00:23:50,699
those up if you don't<font color="#CCCCCC"> know</font><font color="#E5E5E5"> what those</font>

514
00:23:49,410 --> 00:23:52,380
are because those are really<font color="#E5E5E5"> interesting</font>

515
00:23:50,700 --> 00:23:54,030
attacks I didn't understand him the

516
00:23:52,380 --> 00:23:56,790
first time somebody told me about them

517
00:23:54,030 --> 00:24:00,330
<font color="#E5E5E5">took me a while because they're a bit</font>

518
00:23:56,790 --> 00:24:04,680
involved technically but extremely

519
00:24:00,330 --> 00:24:07,050
simple to execute all right user

520
00:24:04,680 --> 00:24:10,070
enumeration this is another big thing

521
00:24:07,050 --> 00:24:13,530
that attackers do in the pre login area

522
00:24:10,070 --> 00:24:18,010
and it's not<font color="#CCCCCC"> just the login form itself</font>

523
00:24:13,530 --> 00:24:20,570
a lot of a lot of

524
00:24:18,010 --> 00:24:22,490
visibility is given to the<font color="#E5E5E5"> login form</font>

525
00:24:20,570 --> 00:24:26,210
where you have a username and<font color="#E5E5E5"> password</font>

526
00:24:22,490 --> 00:24:28,250
<font color="#E5E5E5">you put in Bob and one two three four</font>

527
00:24:26,210 --> 00:24:31,160
<font color="#E5E5E5">and it says I'm sorry Bob it's not a</font>

528
00:24:28,250 --> 00:24:32,840
valid username you put in gym and one

529
00:24:31,160 --> 00:24:35,330
two three four<font color="#E5E5E5"> and it says that's not</font>

530
00:24:32,840 --> 00:24:36,980
<font color="#E5E5E5">the correct password for gym that tells</font>

531
00:24:35,330 --> 00:24:38,330
you that Jim is a valid user and<font color="#CCCCCC"> Bob is</font>

532
00:24:36,980 --> 00:24:40,640
not a valid user and you can kind of

533
00:24:38,330 --> 00:24:42,740
brute force through and try to figure

534
00:24:40,640 --> 00:24:46,790
<font color="#E5E5E5">out what all the usernames are a lot of</font>

535
00:24:42,740 --> 00:24:49,490
times<font color="#CCCCCC"> it's first letter and last name so</font>

536
00:24:46,790 --> 00:24:52,700
you<font color="#E5E5E5"> can do it even quicker if you just</font>

537
00:24:49,490 --> 00:24:54,679
use like<font color="#CCCCCC"> a last name list but login</font>

538
00:24:52,700 --> 00:24:57,200
forms not<font color="#E5E5E5"> the only place you can do it</font>

539
00:24:54,679 --> 00:25:00,740
and it's more difficult in account

540
00:24:57,200 --> 00:25:02,780
creation to stop user enumeration and if

541
00:25:00,740 --> 00:25:05,270
there's an account creation piece of

542
00:25:02,780 --> 00:25:07,460
functionality on the site and somebody

543
00:25:05,270 --> 00:25:09,460
tries to sign up with Jim as their

544
00:25:07,460 --> 00:25:12,170
username and Jim is already a valid user

545
00:25:09,460 --> 00:25:13,940
you have<font color="#CCCCCC"> to tell</font><font color="#E5E5E5"> them they can't use</font>

546
00:25:12,170 --> 00:25:15,650
that<font color="#E5E5E5"> username how do you tell them that</font>

547
00:25:13,940 --> 00:25:22,520
without telling<font color="#E5E5E5"> them that Jim is a valid</font>

548
00:25:15,650 --> 00:25:24,890
user it's<font color="#E5E5E5"> difficult so in order to try</font>

549
00:25:22,520 --> 00:25:26,570
to stop user enumeration there what

550
00:25:24,890 --> 00:25:29,780
you'll see Google do for instance in

551
00:25:26,570 --> 00:25:32,149
gmail is after you try five or so

552
00:25:29,780 --> 00:25:36,470
<font color="#CCCCCC">usernames you'll start having to answer</font>

553
00:25:32,150 --> 00:25:38,300
a CAPTCHA as well and a captcha is those

554
00:25:36,470 --> 00:25:40,640
annoying things you see that it's got

555
00:25:38,300 --> 00:25:42,020
letters and<font color="#E5E5E5"> stripes through them and</font>

556
00:25:40,640 --> 00:25:44,570
they're all wiggle d and you're like I

557
00:25:42,020 --> 00:25:49,520
can't tell what that<font color="#E5E5E5"> is either can't</font>

558
00:25:44,570 --> 00:25:51,439
computers is the idea so captions are

559
00:25:49,520 --> 00:25:53,059
kind of<font color="#E5E5E5"> the way to limit how many</font>

560
00:25:51,440 --> 00:25:55,880
automated requests you can do so you

561
00:25:53,059 --> 00:25:59,030
can't do that user enumeration via brute

562
00:25:55,880 --> 00:26:01,010
<font color="#CCCCCC">force method as easily password reset</font>

563
00:25:59,030 --> 00:26:02,809
often it's the<font color="#E5E5E5"> same thing go to a</font>

564
00:26:01,010 --> 00:26:04,580
password reset page there's a little

565
00:26:02,809 --> 00:26:08,020
input box that says input your username

566
00:26:04,580 --> 00:26:11,809
and will email you your password well

567
00:26:08,020 --> 00:26:14,150
your input you know Bob and it says

568
00:26:11,809 --> 00:26:16,250
sorry Bob's not a valid user<font color="#E5E5E5"> but in gym</font>

569
00:26:14,150 --> 00:26:18,800
and it says we've sent you your password

570
00:26:16,250 --> 00:26:20,360
Jim sent you a temporary<font color="#E5E5E5"> password Jim so</font>

571
00:26:18,800 --> 00:26:21,770
you can new user enumeration through

572
00:26:20,360 --> 00:26:23,659
that too so account creation and

573
00:26:21,770 --> 00:26:25,370
password reset are definitely two huge

574
00:26:23,660 --> 00:26:27,490
areas of user enumeration that are<font color="#CCCCCC"> often</font>

575
00:26:25,370 --> 00:26:27,489
ignored

576
00:26:29,290 --> 00:26:38,480
and<font color="#CCCCCC"> I'll just keep going on here on the</font>

577
00:26:33,890 --> 00:26:41,990
login<font color="#E5E5E5"> page sequel injection so the</font>

578
00:26:38,480 --> 00:26:44,960
common sequel injection string that you

579
00:26:41,990 --> 00:26:48,740
always<font color="#E5E5E5"> see which is or one equals one or</font>

580
00:26:44,960 --> 00:26:54,290
single quote space or 11 equals one that

581
00:26:48,740 --> 00:27:01,970
is that can<font color="#E5E5E5"> often get you past login</font>

582
00:26:54,290 --> 00:27:07,730
page what happens is the validation is a

583
00:27:01,970 --> 00:27:13,400
sequel query which is select select star

584
00:27:07,730 --> 00:27:16,420
from users the user table where username

585
00:27:13,400 --> 00:27:19,490
equals and then the user input given and

586
00:27:16,420 --> 00:27:21,650
password equals password given or

587
00:27:19,490 --> 00:27:25,460
password equals a hash password given

588
00:27:21,650 --> 00:27:27,620
and if you can break out of those

589
00:27:25,460 --> 00:27:31,340
strings and actually change what that

590
00:27:27,620 --> 00:27:33,290
query is you can change it to something

591
00:27:31,340 --> 00:27:35,689
that's<font color="#E5E5E5"> always true so then you have</font>

592
00:27:33,290 --> 00:27:41,960
select star from users where username

593
00:27:35,690 --> 00:27:43,880
equals x or<font color="#CCCCCC"> one equals one and then I</font>

594
00:27:41,960 --> 00:27:45,620
put a semicolon and a dash dash and

595
00:27:43,880 --> 00:27:50,030
comment out the rest of<font color="#E5E5E5"> the line and now</font>

596
00:27:45,620 --> 00:27:52,459
the statement is make<font color="#CCCCCC"> sure that you get</font>

597
00:27:50,030 --> 00:27:55,370
at least one result back to the actual

598
00:27:52,460 --> 00:27:58,910
code PHP code around the sequel

599
00:27:55,370 --> 00:28:00,949
statement or whatever<font color="#E5E5E5"> will say if the</font>

600
00:27:58,910 --> 00:28:04,100
number of<font color="#E5E5E5"> records returned is greater</font>

601
00:28:00,950 --> 00:28:05,900
than or equal<font color="#CCCCCC"> to 1 then it's there</font>

602
00:28:04,100 --> 00:28:08,750
they're valid give them a session log

603
00:28:05,900 --> 00:28:10,580
them on everything's good but a true

604
00:28:08,750 --> 00:28:12,080
statement always<font color="#E5E5E5"> pulls back records as</font>

605
00:28:10,580 --> 00:28:15,320
long as there are some in the database

606
00:28:12,080 --> 00:28:17,810
and so the or<font color="#E5E5E5"> one equals one will get</font>

607
00:28:15,320 --> 00:28:19,960
you in and authenticated but not

608
00:28:17,810 --> 00:28:24,950
necessarily as a particular<font color="#E5E5E5"> user</font>

609
00:28:19,960 --> 00:28:26,540
sometimes it's<font color="#E5E5E5"> the first user so sequel</font>

610
00:28:24,950 --> 00:28:28,460
injection to bypass verification that's

611
00:28:26,540 --> 00:28:30,800
kind of how it works a<font color="#E5E5E5"> little deeper</font>

612
00:28:28,460 --> 00:28:31,970
<font color="#CCCCCC">into it cross-site scripting is a</font>

613
00:28:30,800 --> 00:28:34,550
keylogger if you can get a cross-site

614
00:28:31,970 --> 00:28:36,260
scripting attack especially<font color="#CCCCCC"> a stored or</font>

615
00:28:34,550 --> 00:28:39,200
persistent cross-site scripting attack

616
00:28:36,260 --> 00:28:40,620
into a login page then you have

617
00:28:39,200 --> 00:28:43,020
<font color="#CCCCCC">JavaScript that's</font><font color="#E5E5E5"> X</font>

618
00:28:40,620 --> 00:28:45,449
cuting for every person<font color="#E5E5E5"> whenever they go</font>

619
00:28:43,020 --> 00:28:48,900
to the login page welcome<font color="#CCCCCC"> JavaScript do</font>

620
00:28:45,450 --> 00:28:51,870
well it can look<font color="#E5E5E5"> at keystrokes and so</font>

621
00:28:48,900 --> 00:28:53,370
you can<font color="#CCCCCC"> just have that cross site have</font>

622
00:28:51,870 --> 00:28:55,379
that<font color="#CCCCCC"> JavaScript running on the login</font>

623
00:28:53,370 --> 00:28:56,729
page every time<font color="#E5E5E5"> somebody goes there you</font>

624
00:28:55,380 --> 00:29:00,690
look at all their keystrokes you send

625
00:28:56,730 --> 00:29:03,000
<font color="#E5E5E5">them off to your your other site and now</font>

626
00:29:00,690 --> 00:29:06,960
you've got credentials so it's kind of

627
00:29:03,000 --> 00:29:09,180
an incite keylogger that's a fun attack

628
00:29:06,960 --> 00:29:10,950
to do we already<font color="#E5E5E5"> talked a little bit</font>

629
00:29:09,180 --> 00:29:15,630
about user enumeration on the<font color="#E5E5E5"> login page</font>

630
00:29:10,950 --> 00:29:19,860
password brute-forcing is not the

631
00:29:15,630 --> 00:29:22,980
<font color="#CCCCCC">easiest thing</font><font color="#E5E5E5"> to stop but there are two</font>

632
00:29:19,860 --> 00:29:25,229
varieties of password forcing in one

633
00:29:22,980 --> 00:29:27,870
case<font color="#CCCCCC"> you use one user name and you go</font>

634
00:29:25,230 --> 00:29:29,790
through passwords and the other case use

635
00:29:27,870 --> 00:29:33,840
1password and you go through<font color="#CCCCCC"> user names</font>

636
00:29:29,790 --> 00:29:36,960
so if the password rules are upper case

637
00:29:33,840 --> 00:29:40,409
lower case number and greater than<font color="#E5E5E5"> or</font>

638
00:29:36,960 --> 00:29:44,400
equal to 8 characters capital<font color="#E5E5E5"> P password</font>

639
00:29:40,410 --> 00:29:47,250
one is a very common ass word that's

640
00:29:44,400 --> 00:29:49,860
used if they have to change it every

641
00:29:47,250 --> 00:29:54,270
month<font color="#E5E5E5"> fri password to password</font><font color="#CCCCCC"> 3</font>

642
00:29:49,860 --> 00:29:56,280
password for<font color="#E5E5E5"> 412 that sort of stuff and</font>

643
00:29:54,270 --> 00:29:58,290
if you have been<font color="#E5E5E5"> able to do some type of</font>

644
00:29:56,280 --> 00:30:00,120
user enumeration you have all the users

645
00:29:58,290 --> 00:30:02,790
then you can make<font color="#CCCCCC"> a request for each</font>

646
00:30:00,120 --> 00:30:07,080
user using the password of password one

647
00:30:02,790 --> 00:30:11,428
and you'll probably get a greater than

648
00:30:07,080 --> 00:30:12,928
zero percent of a success<font color="#E5E5E5"> rate out</font><font color="#CCCCCC"> of</font>

649
00:30:11,429 --> 00:30:16,400
that so you get some some credentials

650
00:30:12,929 --> 00:30:16,400
some valid credentials you can use

651
00:30:16,700 --> 00:30:20,340
sequel injection for password gathering

652
00:30:19,020 --> 00:30:24,090
so<font color="#E5E5E5"> I told you about the or one equals</font>

653
00:30:20,340 --> 00:30:28,470
one case you<font color="#CCCCCC"> can do you can</font><font color="#E5E5E5"> do one</font>

654
00:30:24,090 --> 00:30:31,320
better you can you can<font color="#CCCCCC"> use sequel</font>

655
00:30:28,470 --> 00:30:32,880
injection to<font color="#CCCCCC"> Union the current statement</font>

656
00:30:31,320 --> 00:30:37,559
that's going to be executed<font color="#CCCCCC"> with a</font>

657
00:30:32,880 --> 00:30:40,380
statement<font color="#CCCCCC"> of your own making and you</font>

658
00:30:37,559 --> 00:30:42,389
might get results that<font color="#E5E5E5"> come back you</font>

659
00:30:40,380 --> 00:30:43,770
might not get results to come back if

660
00:30:42,390 --> 00:30:46,980
you<font color="#CCCCCC"> don't get results to come back from</font>

661
00:30:43,770 --> 00:30:48,840
<font color="#E5E5E5">your Union sequel query then you can</font>

662
00:30:46,980 --> 00:30:51,730
start<font color="#E5E5E5"> doing some blind sequel injection</font>

663
00:30:48,840 --> 00:30:54,850
where you basically use timing you

664
00:30:51,730 --> 00:30:57,460
make a conditional statement<font color="#CCCCCC"> in sequel</font>

665
00:30:54,850 --> 00:31:01,899
<font color="#CCCCCC">that executes if you're right or if</font>

666
00:30:57,460 --> 00:31:06,640
you're wrong<font color="#E5E5E5"> or whatever and you use the</font>

667
00:31:01,900 --> 00:31:09,880
like keyword to say well there<font color="#E5E5E5"> are</font>

668
00:31:06,640 --> 00:31:13,210
several<font color="#CCCCCC"> steps to a</font><font color="#E5E5E5"> really useful sequel</font>

669
00:31:09,880 --> 00:31:15,460
injection first step is figuring<font color="#E5E5E5"> out how</font>

670
00:31:13,210 --> 00:31:17,620
many<font color="#E5E5E5"> columns the original query had so</font>

671
00:31:15,460 --> 00:31:18,820
that<font color="#E5E5E5"> your Union statement can have the</font>

672
00:31:17,620 --> 00:31:20,469
similar number of columns on<font color="#E5E5E5"> the</font>

673
00:31:18,820 --> 00:31:23,740
<font color="#CCCCCC">right-hand side otherwise you get a</font>

674
00:31:20,470 --> 00:31:25,960
syntax error from my sequel then what

675
00:31:23,740 --> 00:31:28,150
you do is you look through if you're in

676
00:31:25,960 --> 00:31:32,140
<font color="#E5E5E5">my sequel you look through information</font>

677
00:31:28,150 --> 00:31:34,090
<font color="#E5E5E5">schema dot columns which is database in</font>

678
00:31:32,140 --> 00:31:37,510
the<font color="#CCCCCC"> table name you look through their</font>

679
00:31:34,090 --> 00:31:43,000
<font color="#CCCCCC">four columns that are like percent pass</font>

680
00:31:37,510 --> 00:31:45,190
percent or are like % s SN % % social

681
00:31:43,000 --> 00:31:47,620
percent and you can start pulling out

682
00:31:45,190 --> 00:31:50,070
which tables and columns have the

683
00:31:47,620 --> 00:31:53,050
information you're<font color="#E5E5E5"> looking for and then</font>

684
00:31:50,070 --> 00:31:55,120
<font color="#CCCCCC">final step is you make a union statement</font>

685
00:31:53,050 --> 00:31:56,470
with that particular table pulling out

686
00:31:55,120 --> 00:31:58,689
the columns that you're interested in

687
00:31:56,470 --> 00:32:02,230
and you<font color="#E5E5E5"> can get all</font><font color="#CCCCCC"> the information</font>

688
00:31:58,690 --> 00:32:04,810
blind sequel injection you have to go

689
00:32:02,230 --> 00:32:08,590
one step further and you get information

690
00:32:04,810 --> 00:32:11,470
through inference if the response takes

691
00:32:08,590 --> 00:32:13,090
a long time versus a short time then<font color="#E5E5E5"> you</font>

692
00:32:11,470 --> 00:32:15,220
know<font color="#CCCCCC"> that either your sleep function ran</font>

693
00:32:13,090 --> 00:32:17,919
or<font color="#CCCCCC"> didn't if it's a conditional</font>

694
00:32:15,220 --> 00:32:21,250
<font color="#CCCCCC">statement that tells you that there is a</font>

695
00:32:17,920 --> 00:32:23,830
column like pass that you can start

696
00:32:21,250 --> 00:32:26,020
doing using the light keyword to do kind

697
00:32:23,830 --> 00:32:29,919
of a binary search for the table name

698
00:32:26,020 --> 00:32:32,200
and continue on in that method<font color="#E5E5E5"> let's</font>

699
00:32:29,920 --> 00:32:33,640
kind<font color="#CCCCCC"> of sequel injection 101 that's how</font>

700
00:32:32,200 --> 00:32:35,830
<font color="#E5E5E5">you actually do it to get data that's</font>

701
00:32:33,640 --> 00:32:39,520
that's what attackers that's how attack

702
00:32:35,830 --> 00:32:44,919
is you sequel injection login cross-site

703
00:32:39,520 --> 00:32:46,920
request forgery this is difficult<font color="#CCCCCC"> to</font>

704
00:32:44,920 --> 00:32:49,420
<font color="#E5E5E5">convince</font><font color="#CCCCCC"> people that it's important</font>

705
00:32:46,920 --> 00:32:52,930
login cross-site request forgery is

706
00:32:49,420 --> 00:32:56,740
where an attacker will<font color="#E5E5E5"> login a victim</font>

707
00:32:52,930 --> 00:33:00,760
under the attackers<font color="#E5E5E5"> account I'm the</font>

708
00:32:56,740 --> 00:33:02,530
attacker we got a victim I make the

709
00:33:00,760 --> 00:33:04,360
victim make a request to the<font color="#E5E5E5"> login page</font>

710
00:33:02,530 --> 00:33:07,889
and I have my

711
00:33:04,360 --> 00:33:10,689
credentials in that<font color="#E5E5E5"> request so now</font>

712
00:33:07,890 --> 00:33:13,059
victim is logged on as the attacker you

713
00:33:10,690 --> 00:33:14,530
might think that's kind of against the

714
00:33:13,059 --> 00:33:16,149
point<font color="#E5E5E5"> right</font><font color="#CCCCCC"> usually it's the attacker</font>

715
00:33:14,530 --> 00:33:17,980
trying to log on as the victim not

716
00:33:16,150 --> 00:33:21,220
trying to log<font color="#E5E5E5"> the victim on as the</font>

717
00:33:17,980 --> 00:33:23,410
attacker but<font color="#E5E5E5"> there are three cases where</font>

718
00:33:21,220 --> 00:33:26,470
this<font color="#CCCCCC"> is really useful one of which is</font>

719
00:33:23,410 --> 00:33:29,049
contests trying to win a contest and you

720
00:33:26,470 --> 00:33:31,090
can log everyone in as yourself guess

721
00:33:29,049 --> 00:33:33,160
who's going<font color="#E5E5E5"> to win the contest say the</font>

722
00:33:31,090 --> 00:33:35,559
contest is first person to submit the

723
00:33:33,160 --> 00:33:37,030
answer to this puzzle gets a car well if

724
00:33:35,559 --> 00:33:38,770
everybody's logged in as you<font color="#E5E5E5"> guess who's</font>

725
00:33:37,030 --> 00:33:42,549
going<font color="#E5E5E5"> to submit the right answer going</font>

726
00:33:38,770 --> 00:33:46,240
to be you also stored data if there's a

727
00:33:42,549 --> 00:33:48,309
site for instance amazoncom go into this

728
00:33:46,240 --> 00:33:51,370
site and you store credit card

729
00:33:48,309 --> 00:33:54,100
information so if i log on<font color="#E5E5E5"> to victim as</font>

730
00:33:51,370 --> 00:33:56,049
me and then I send the victim an email

731
00:33:54,100 --> 00:33:58,990
that says please update your credit card

732
00:33:56,049 --> 00:34:00,340
information they go<font color="#E5E5E5"> into the site they</font>

733
00:33:58,990 --> 00:34:02,530
put their credit card information and

734
00:34:00,340 --> 00:34:04,120
<font color="#E5E5E5">they log back out well now I go into the</font>

735
00:34:02,530 --> 00:34:08,139
site they've just added their credit

736
00:34:04,120 --> 00:34:11,980
card to my account so that's another way

737
00:34:08,139 --> 00:34:14,590
<font color="#E5E5E5">and another way is perhaps not as useful</font>

738
00:34:11,980 --> 00:34:19,359
but you can use it<font color="#E5E5E5"> to frame people they</font>

739
00:34:14,590 --> 00:34:24,060
<font color="#CCCCCC">have my account is logged in as you I've</font>

740
00:34:19,359 --> 00:34:24,060
never actually<font color="#E5E5E5"> seen that but hey why not</font>

741
00:34:24,840 --> 00:34:31,119
on the login<font color="#E5E5E5"> page if there's not ssl for</font>

742
00:34:29,109 --> 00:34:33,580
the response that brings the login page

743
00:34:31,119 --> 00:34:35,800
to you then any man in the middle can

744
00:34:33,580 --> 00:34:38,500
take that login<font color="#E5E5E5"> page and change where it</font>

745
00:34:35,800 --> 00:34:40,720
gets where it sends the next request<font color="#E5E5E5"> to</font>

746
00:34:38,500 --> 00:34:44,139
so instead of the credentials being sent

747
00:34:40,719 --> 00:34:48,219
to the server to validate their sent to

748
00:34:44,139 --> 00:34:51,460
evil com so the login page itself needs

749
00:34:48,219 --> 00:34:53,049
to be returned over an<font color="#CCCCCC"> ssl channel not</font>

750
00:34:51,460 --> 00:34:56,290
just<font color="#E5E5E5"> the credentials that you put in and</font>

751
00:34:53,050 --> 00:34:58,339
send the login page itself and then

752
00:34:56,290 --> 00:35:02,829
account lockout

753
00:34:58,339 --> 00:35:05,450
this is one<font color="#CCCCCC"> of my favorite stories ebay</font>

754
00:35:02,829 --> 00:35:07,759
bidding against people on ebay so you

755
00:35:05,450 --> 00:35:09,348
used<font color="#E5E5E5"> to be able to see the user name of</font>

756
00:35:07,759 --> 00:35:11,259
<font color="#CCCCCC">who could bid against you or who is</font>

757
00:35:09,349 --> 00:35:14,089
bidding against you so you go in<font color="#E5E5E5"> and you</font>

758
00:35:11,259 --> 00:35:15,769
would try to<font color="#CCCCCC"> log in as them you didn't</font>

759
00:35:14,089 --> 00:35:17,299
know their password<font color="#CCCCCC"> okay you</font><font color="#E5E5E5"> try it</font>

760
00:35:15,769 --> 00:35:19,999
again you<font color="#CCCCCC"> try ten more times and then</font>

761
00:35:17,299 --> 00:35:23,029
their account would be locked and they

762
00:35:19,999 --> 00:35:28,368
would not be<font color="#CCCCCC"> able to bid anymore so</font>

763
00:35:23,029 --> 00:35:36,529
guess who won the<font color="#E5E5E5"> the item that's</font><font color="#CCCCCC"> a fun</font>

764
00:35:28,369 --> 00:35:40,099
one all right any thoughts or questions

765
00:35:36,529 --> 00:35:44,799
or is everybody still awake you guys

766
00:35:40,099 --> 00:35:44,799
look pretty awake actually yeah

767
00:35:56,000 --> 00:36:00,860
that that is a good question can<font color="#CCCCCC"> you</font>

768
00:35:58,580 --> 00:36:03,080
tell who is attacking your system based

769
00:36:00,860 --> 00:36:05,060
on the IP<font color="#CCCCCC"> address you can definitely</font>

770
00:36:03,080 --> 00:36:07,400
<font color="#CCCCCC">tell</font><font color="#E5E5E5"> what IP address is attacking your</font>

771
00:36:05,060 --> 00:36:10,880
system<font color="#CCCCCC"> now that IP address could be</font>

772
00:36:07,400 --> 00:36:13,850
coming from somebody's home computer

773
00:36:10,880 --> 00:36:16,700
that has been compromised and so now<font color="#CCCCCC"> you</font>

774
00:36:13,850 --> 00:36:18,860
show up<font color="#E5E5E5"> at this innocent persons house</font>

775
00:36:16,700 --> 00:36:22,549
and you say you've been hacking on our

776
00:36:18,860 --> 00:36:25,310
site you know time to go to jail so in

777
00:36:22,550 --> 00:36:28,820
that case it might not work or<font color="#E5E5E5"> the IP</font>

778
00:36:25,310 --> 00:36:31,190
address might be from Romania good luck

779
00:36:28,820 --> 00:36:35,740
good<font color="#E5E5E5"> luck you know prosecuting or doing</font>

780
00:36:31,190 --> 00:36:35,740
anything for<font color="#E5E5E5"> that yes PJ</font>

781
00:36:42,170 --> 00:36:49,790
right<font color="#CCCCCC"> usually the apache logs are there</font>

782
00:36:44,330 --> 00:36:52,640
but how long are they kept attaching it

783
00:36:49,790 --> 00:36:54,620
to the specific attack if it's a post

784
00:36:52,640 --> 00:36:56,540
request for instance then you certainly

785
00:36:54,620 --> 00:36:57,950
have the post details if it's get

786
00:36:56,540 --> 00:37:01,370
request you will probably see<font color="#E5E5E5"> it in</font><font color="#CCCCCC"> a</font>

787
00:36:57,950 --> 00:37:03,439
query string<font color="#E5E5E5"> the apache logs certainly</font>

788
00:37:01,370 --> 00:37:05,270
if you're doing more extensive logging

789
00:37:03,440 --> 00:37:07,370
which is a good<font color="#CCCCCC"> idea then you'll</font>

790
00:37:05,270 --> 00:37:10,370
probably have more<font color="#CCCCCC"> information and be</font>

791
00:37:07,370 --> 00:37:12,620
able to collate what IP address was

792
00:37:10,370 --> 00:37:15,500
doing it and that is how actually<font color="#CCCCCC"> a lot</font>

793
00:37:12,620 --> 00:37:17,029
of cyber crimes are solved people are

794
00:37:15,500 --> 00:37:19,970
<font color="#CCCCCC">just doing it from there you know</font>

795
00:37:17,030 --> 00:37:27,080
<font color="#CCCCCC">Roadrunner connection and that can be</font>

796
00:37:19,970 --> 00:37:29,270
traced back alright so the login

797
00:37:27,080 --> 00:37:35,990
redirect this is this invisible piece

798
00:37:29,270 --> 00:37:38,630
and header injection is one of the more

799
00:37:35,990 --> 00:37:41,450
common ataxia so header injection the

800
00:37:38,630 --> 00:37:45,110
goal here is to add for an attacker to

801
00:37:41,450 --> 00:37:48,919
add a header to a response that comes

802
00:37:45,110 --> 00:37:52,280
back to<font color="#CCCCCC"> a victim's browser a lot say so</font>

803
00:37:48,920 --> 00:37:54,080
the goal is<font color="#E5E5E5"> to add a header to the HTTP</font>

804
00:37:52,280 --> 00:38:00,740
response that comes back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a victim's</font>

805
00:37:54,080 --> 00:38:03,529
browser the location header is just one

806
00:38:00,740 --> 00:38:05,540
such header it's one that comes back<font color="#CCCCCC"> to</font>

807
00:38:03,530 --> 00:38:09,890
the victims browser after they put in

808
00:38:05,540 --> 00:38:12,920
their login credentials what that

809
00:38:09,890 --> 00:38:14,750
location header points to depends on how

810
00:38:12,920 --> 00:38:17,540
the login system works it might be the

811
00:38:14,750 --> 00:38:21,680
<font color="#CCCCCC">case that I can send you an email or</font>

812
00:38:17,540 --> 00:38:28,250
amazon com some some site and in this

813
00:38:21,680 --> 00:38:30,649
<font color="#CCCCCC">email I include in the query string the</font>

814
00:38:28,250 --> 00:38:32,390
the redirection location so that's

815
00:38:30,650 --> 00:38:35,840
that's some input that goes to login

816
00:38:32,390 --> 00:38:37,670
page is the redirection location so you

817
00:38:35,840 --> 00:38:39,380
click on that you get the login<font color="#E5E5E5"> page you</font>

818
00:38:37,670 --> 00:38:41,870
put in your credentials you hit submit

819
00:38:39,380 --> 00:38:43,610
it<font color="#E5E5E5"> validates it it says good job it</font>

820
00:38:41,870 --> 00:38:45,380
tries to redirect you and it redirects

821
00:38:43,610 --> 00:38:48,640
you to where I wanted<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to go as</font>

822
00:38:45,380 --> 00:38:51,309
opposed<font color="#E5E5E5"> to where you wear</font>

823
00:38:48,640 --> 00:38:53,109
somewhere you want to<font color="#CCCCCC"> go that's that's</font>

824
00:38:51,309 --> 00:38:55,779
how you would<font color="#E5E5E5"> change the location header</font>

825
00:38:53,109 --> 00:38:59,710
header injection actually tries to split

826
00:38:55,779 --> 00:39:03,700
the location header into two headers<font color="#CCCCCC"> so</font>

827
00:38:59,710 --> 00:39:05,920
the only thing that separates headers is

828
00:39:03,700 --> 00:39:10,689
a new line or carriage return line feed

829
00:39:05,920 --> 00:39:14,380
depending<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the operating system so you</font>

830
00:39:10,690 --> 00:39:16,750
know you'll see the HTTP HPD HTTP 200

831
00:39:14,380 --> 00:39:19,150
<font color="#CCCCCC">okay and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> a new line and another</font>

832
00:39:16,750 --> 00:39:23,529
HTTP header and<font color="#E5E5E5"> then a new line maybe a</font>

833
00:39:19,150 --> 00:39:27,880
set cookie header new line in 302 you'll

834
00:39:23,529 --> 00:39:30,460
see HTTP 302 found on a new line and a

835
00:39:27,880 --> 00:39:35,559
couple other headers and then location

836
00:39:30,460 --> 00:39:38,440
and the location maybe a new line and

837
00:39:35,559 --> 00:39:40,559
some more stuff well<font color="#E5E5E5"> if you put in the</font>

838
00:39:38,440 --> 00:39:42,970
characters for carriage return line feed

839
00:39:40,559 --> 00:39:45,190
and they're not<font color="#E5E5E5"> properly encoded by the</font>

840
00:39:42,970 --> 00:39:47,879
web server when they're sent back in the

841
00:39:45,190 --> 00:39:51,430
location<font color="#E5E5E5"> header then it can actually</font>

842
00:39:47,880 --> 00:39:53,440
<font color="#E5E5E5">make an artificial new line and so it</font>

843
00:39:51,430 --> 00:39:55,450
comes back<font color="#CCCCCC"> to the browser has the</font>

844
00:39:53,440 --> 00:39:57,640
location header but then at the<font color="#CCCCCC"> end of</font>

845
00:39:55,450 --> 00:40:00,129
it there's artificially a new line and

846
00:39:57,640 --> 00:40:02,650
another header put in so this can<font color="#CCCCCC"> be</font>

847
00:40:00,130 --> 00:40:04,869
used for<font color="#E5E5E5"> to do to do anything that</font>

848
00:40:02,650 --> 00:40:08,349
headers can do<font color="#CCCCCC"> editors can set cookies</font>

849
00:40:04,869 --> 00:40:10,150
on a browser so header injection one of

850
00:40:08,349 --> 00:40:14,789
the<font color="#E5E5E5"> primary things you use it</font><font color="#CCCCCC"> for is to</font>

851
00:40:10,150 --> 00:40:17,380
set cookies on a victim's browser and

852
00:40:14,789 --> 00:40:20,380
setting cookies sometimes you'll see a

853
00:40:17,380 --> 00:40:22,660
cookie<font color="#CCCCCC"> that has a user name in it and</font>

854
00:40:20,380 --> 00:40:25,660
then there will be like an account page

855
00:40:22,660 --> 00:40:27,640
that says hello comma username that

856
00:40:25,660 --> 00:40:29,558
<font color="#CCCCCC">username is sometimes pulled from that</font>

857
00:40:27,640 --> 00:40:31,868
cookie directly so if you can put in a

858
00:40:29,559 --> 00:40:33,250
cookie<font color="#E5E5E5"> that has some wishes JavaScript</font>

859
00:40:31,869 --> 00:40:35,470
then you can actually<font color="#CCCCCC"> use the cookie as</font>

860
00:40:33,250 --> 00:40:38,529
a cross-site scripting vector so when it

861
00:40:35,470 --> 00:40:41,200
says hello or welcome comma and then the

862
00:40:38,529 --> 00:40:43,990
contents of<font color="#E5E5E5"> the cookie it's the contents</font>

863
00:40:41,200 --> 00:40:46,980
<font color="#E5E5E5">of the cookie including your cross-site</font>

864
00:40:43,990 --> 00:40:49,629
scripting<font color="#CCCCCC"> JavaScript</font><font color="#E5E5E5"> you want to execute</font>

865
00:40:46,980 --> 00:40:50,810
actually just<font color="#CCCCCC"> found</font><font color="#E5E5E5"> that recently it's</font>

866
00:40:49,630 --> 00:40:53,520
fun

867
00:40:50,810 --> 00:40:54,960
predictable session tokens so the login

868
00:40:53,520 --> 00:40:59,340
redirect again is where the session

869
00:40:54,960 --> 00:41:02,150
cookie is set and so session cookie is

870
00:40:59,340 --> 00:41:04,170
they come<font color="#CCCCCC"> in all shapes and sizes and</font>

871
00:41:02,150 --> 00:41:07,260
sometimes they're just an incrementing

872
00:41:04,170 --> 00:41:09,800
number sometimes they're<font color="#E5E5E5"> the time of day</font>

873
00:41:07,260 --> 00:41:13,350
like the date some type of time stamp

874
00:41:09,800 --> 00:41:17,520
sometimes they're hashed version of an

875
00:41:13,350 --> 00:41:20,279
incrementing number so if they're

876
00:41:17,520 --> 00:41:24,720
predictable then you can you can log in

877
00:41:20,280 --> 00:41:26,130
as a regular user and see oh I got 5 i'm

878
00:41:24,720 --> 00:41:29,640
going to<font color="#E5E5E5"> wait 10 minutes and then</font><font color="#CCCCCC"> try</font>

879
00:41:26,130 --> 00:41:31,650
six so if the session token is

880
00:41:29,640 --> 00:41:34,290
predictable then you can guess what a

881
00:41:31,650 --> 00:41:36,330
logged-in users token will be since that

882
00:41:34,290 --> 00:41:37,950
session token is the only thing that

883
00:41:36,330 --> 00:41:43,200
determines as far as the server is

884
00:41:37,950 --> 00:41:44,669
concerned who's who you are<font color="#CCCCCC"> 6 forestry</font>

885
00:41:43,200 --> 00:41:46,830
direction<font color="#E5E5E5"> I talked about</font><font color="#CCCCCC"> that a little</font>

886
00:41:44,670 --> 00:41:49,500
<font color="#E5E5E5">bit with the location header mucking</font>

887
00:41:46,830 --> 00:41:52,290
about you can send them<font color="#E5E5E5"> off site or you</font>

888
00:41:49,500 --> 00:41:54,180
can<font color="#E5E5E5"> send them to the site to</font><font color="#CCCCCC"> a page that</font>

889
00:41:52,290 --> 00:41:59,040
actually takes an action so this is<font color="#CCCCCC"> the</font>

890
00:41:54,180 --> 00:42:03,899
cross-site request forgery example so

891
00:41:59,040 --> 00:42:07,140
the original example I gave was you to

892
00:42:03,900 --> 00:42:09,660
the the mail / inbox not PHP with email

893
00:42:07,140 --> 00:42:12,150
ID equals 11 and action equals<font color="#E5E5E5"> mark is</font>

894
00:42:09,660 --> 00:42:14,910
<font color="#E5E5E5">read action could be delete as well and</font>

895
00:42:12,150 --> 00:42:17,250
if an attacker can<font color="#E5E5E5"> control where the</font>

896
00:42:14,910 --> 00:42:18,930
redirection will go there's some get

897
00:42:17,250 --> 00:42:21,720
requests that<font color="#CCCCCC"> takes some</font><font color="#E5E5E5"> action like</font>

898
00:42:18,930 --> 00:42:26,549
delete all the emails then an attacker

899
00:42:21,720 --> 00:42:28,049
can<font color="#E5E5E5"> force a victim too once they send</font>

900
00:42:26,550 --> 00:42:31,290
their credentials and they get validated

901
00:42:28,050 --> 00:42:33,990
they get redirected to a URL<font color="#CCCCCC"> that takes</font>

902
00:42:31,290 --> 00:42:35,940
an action action might delete their

903
00:42:33,990 --> 00:42:38,490
emails that action might change the

904
00:42:35,940 --> 00:42:42,660
direct<font color="#CCCCCC"> deposit information that action</font>

905
00:42:38,490 --> 00:42:48,270
might make the attacker an admin<font color="#CCCCCC"> on the</font>

906
00:42:42,660 --> 00:42:51,420
site<font color="#CCCCCC"> and you got to</font><font color="#E5E5E5"> have SSL all over</font>

907
00:42:48,270 --> 00:42:54,150
the place login redirect is a very

908
00:42:51,420 --> 00:42:56,340
important place because the session

909
00:42:54,150 --> 00:42:58,560
cookie is being set and then being sent

910
00:42:56,340 --> 00:43:00,450
and that cookie is all that tells the

911
00:42:58,560 --> 00:43:04,220
server who's who so if an attacker gets

912
00:43:00,450 --> 00:43:04,220
it the attacker is the victim

913
00:43:04,710 --> 00:43:13,060
javascript or meta tag redirects are a

914
00:43:08,860 --> 00:43:16,530
little bit hairy because they are

915
00:43:13,060 --> 00:43:18,850
<font color="#CCCCCC">usually written dynamically based on</font>

916
00:43:16,530 --> 00:43:21,850
what would<font color="#CCCCCC"> have been the location header</font>

917
00:43:18,850 --> 00:43:24,549
so login page always gets the input of

918
00:43:21,850 --> 00:43:26,140
where the user was trying to go and then

919
00:43:24,550 --> 00:43:28,330
<font color="#E5E5E5">they have to redirect that user there</font>

920
00:43:26,140 --> 00:43:31,210
somehow if they use a meta tag or

921
00:43:28,330 --> 00:43:34,410
especially<font color="#E5E5E5"> a</font><font color="#CCCCCC"> javascript redirect then</font>

922
00:43:31,210 --> 00:43:39,490
they're putting user input into

923
00:43:34,410 --> 00:43:42,460
<font color="#CCCCCC">JavaScript executing</font><font color="#E5E5E5"> JavaScript block</font>

924
00:43:39,490 --> 00:43:44,259
and there's a lot<font color="#CCCCCC"> of funky things you</font>

925
00:43:42,460 --> 00:43:46,420
can do inside of<font color="#CCCCCC"> javascript block you</font>

926
00:43:44,260 --> 00:43:52,390
can do<font color="#E5E5E5"> things like put a</font><font color="#CCCCCC"> closed script</font>

927
00:43:46,420 --> 00:43:54,670
tag and then continue writing HTML you

928
00:43:52,390 --> 00:43:57,009
can open up another script tag even if

929
00:43:54,670 --> 00:43:59,980
you put a<font color="#E5E5E5"> closed script tag into a</font>

930
00:43:57,010 --> 00:44:02,260
<font color="#CCCCCC">JavaScript quoted string it will close</font>

931
00:43:59,980 --> 00:44:04,270
<font color="#E5E5E5">the JavaScript block the browser will</font>

932
00:44:02,260 --> 00:44:09,220
see that as the band because the browser

933
00:44:04,270 --> 00:44:11,740
as two separate of interpreters one for

934
00:44:09,220 --> 00:44:14,140
HTML and one for JavaScript<font color="#CCCCCC"> so it just</font>

935
00:44:11,740 --> 00:44:15,759
reads through the HTML and it sees oh

936
00:44:14,140 --> 00:44:17,589
here's a<font color="#E5E5E5"> JavaScript lock between this</font>

937
00:44:15,760 --> 00:44:20,830
script at this open script tag in<font color="#E5E5E5"> this</font>

938
00:44:17,590 --> 00:44:22,630
close script tag and so<font color="#CCCCCC"> I'll just</font>

939
00:44:20,830 --> 00:44:24,220
execute the JavaScript in there and then

940
00:44:22,630 --> 00:44:27,610
I'll do whatever happens after that

941
00:44:24,220 --> 00:44:31,359
script tag so if your user input goes

942
00:44:27,610 --> 00:44:33,340
into a JavaScript block you can put a

943
00:44:31,360 --> 00:44:34,930
clone script tag and actually break out

944
00:44:33,340 --> 00:44:37,210
of the JavaScript lock even if your user

945
00:44:34,930 --> 00:44:39,669
input is in a<font color="#CCCCCC"> JavaScript quoted string</font>

946
00:44:37,210 --> 00:44:42,220
you think<font color="#CCCCCC"> JavaScript quoted string oh</font>

947
00:44:39,670 --> 00:44:46,390
that's just data not necessarily<font color="#E5E5E5"> it can</font>

948
00:44:42,220 --> 00:44:47,830
be HTML break out so you<font color="#E5E5E5"> can you can get</font>

949
00:44:46,390 --> 00:44:51,759
some cross-site scripting attacks in

950
00:44:47,830 --> 00:44:53,380
that way all<font color="#E5E5E5"> right I've got about five</font>

951
00:44:51,760 --> 00:44:55,590
minutes left<font color="#E5E5E5"> so I'm go through the</font>

952
00:44:53,380 --> 00:44:57,670
logged in section and logout conclusions

953
00:44:55,590 --> 00:45:00,430
I'll just kind of zoom through here a

954
00:44:57,670 --> 00:45:01,720
little bit quicker in the log bone

955
00:45:00,430 --> 00:45:04,419
section if you get cross-site scripting

956
00:45:01,720 --> 00:45:06,879
attacks in there you can use a framework

957
00:45:04,420 --> 00:45:11,200
called beef really cool framework

958
00:45:06,880 --> 00:45:13,450
basically it's almost like malware on

959
00:45:11,200 --> 00:45:14,308
the victims browser you can make

960
00:45:13,450 --> 00:45:16,739
requests

961
00:45:14,309 --> 00:45:19,170
as them you can<font color="#CCCCCC"> have little pop-ups show</font>

962
00:45:16,739 --> 00:45:22,109
for them it's like complete control over

963
00:45:19,170 --> 00:45:24,569
that domain it's<font color="#E5E5E5"> really cool but it's</font>

964
00:45:22,109 --> 00:45:27,328
one cross-site scripting hole it's full

965
00:45:24,569 --> 00:45:29,729
control you can use cross-site scripting

966
00:45:27,329 --> 00:45:32,660
to try to get the session<font color="#E5E5E5"> token' again</font>

967
00:45:29,729 --> 00:45:35,430
document cookies is how you get that

968
00:45:32,660 --> 00:45:39,839
using javascript you can send that off

969
00:45:35,430 --> 00:45:44,098
anywhere sequel injection you might not

970
00:45:39,839 --> 00:45:46,219
have a way to directly attack the logged

971
00:45:44,099 --> 00:45:49,469
in area you might<font color="#E5E5E5"> not be a valid user</font>

972
00:45:46,219 --> 00:45:51,599
but if you can get a victim to make a

973
00:45:49,469 --> 00:45:54,749
request an unintentional request that

974
00:45:51,599 --> 00:45:58,650
contains a sequel injection payload then

975
00:45:54,749 --> 00:46:00,328
you can cause them to make the sequel

976
00:45:58,650 --> 00:46:01,439
injection attack and then you can do

977
00:46:00,329 --> 00:46:06,329
whatever you can do a sequel injection

978
00:46:01,439 --> 00:46:08,219
attacks which its advanced cross-site

979
00:46:06,329 --> 00:46:10,170
request forgery and clip jacking another

980
00:46:08,219 --> 00:46:12,689
great way even if you don't have<font color="#CCCCCC"> access</font>

981
00:46:10,170 --> 00:46:15,660
you can still make valid users take

982
00:46:12,689 --> 00:46:17,009
actions on<font color="#CCCCCC"> the site and do things for</font>

983
00:46:15,660 --> 00:46:20,399
you<font color="#E5E5E5"> change people's direct deposit</font>

984
00:46:17,009 --> 00:46:22,709
information to your own do all sorts of

985
00:46:20,400 --> 00:46:24,959
stuff<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that ssl if you don't have</font>

986
00:46:22,709 --> 00:46:26,640
<font color="#CCCCCC">ssl in the logged in area then each</font>

987
00:46:24,959 --> 00:46:28,979
request which contains your session

988
00:46:26,640 --> 00:46:31,439
token is sent in<font color="#E5E5E5"> clear text session</font>

989
00:46:28,979 --> 00:46:34,578
<font color="#E5E5E5">token sent in clear text but attacker</font>

990
00:46:31,439 --> 00:46:37,259
gets that they can masquerade is equal

991
00:46:34,579 --> 00:46:39,630
sometimes the logged in area doesn't

992
00:46:37,259 --> 00:46:41,670
actually require it doesn't actually

993
00:46:39,630 --> 00:46:43,890
check to see if you're logged in it

994
00:46:41,670 --> 00:46:46,170
might in ninety percent of the pages<font color="#E5E5E5"> or</font>

995
00:46:43,890 --> 00:46:48,538
<font color="#E5E5E5">ninety nine percent of the pages or one</font>

996
00:46:46,170 --> 00:46:52,920
percent of the pages sometimes that's

997
00:46:48,539 --> 00:46:54,479
the case and yeah it's just there's not

998
00:46:52,920 --> 00:46:56,400
like a consistent framework that's used

999
00:46:54,479 --> 00:47:01,229
on every page to<font color="#CCCCCC"> make sure somebody is</font>

1000
00:46:56,400 --> 00:47:02,640
actually authenticated and we'll skip

1001
00:47:01,229 --> 00:47:05,160
through we talked a little bit about

1002
00:47:02,640 --> 00:47:07,558
force lockout but you can also log

1003
00:47:05,160 --> 00:47:11,098
people out by sending them<font color="#E5E5E5"> to the login</font>

1004
00:47:07,559 --> 00:47:12,359
page<font color="#E5E5E5"> Ajax hijacking is very complex and</font>

1005
00:47:11,099 --> 00:47:16,979
<font color="#E5E5E5">I'll talk to you afterwards if you want</font>

1006
00:47:12,359 --> 00:47:18,749
<font color="#E5E5E5">to talk</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> about that log out again</font>

1007
00:47:16,979 --> 00:47:21,029
forestry direction there's a redirection

1008
00:47:18,749 --> 00:47:22,769
step so you can send<font color="#E5E5E5"> people potentially</font>

1009
00:47:21,029 --> 00:47:26,130
where you want header injection using

1010
00:47:22,769 --> 00:47:27,500
the location header same idea inadequate

1011
00:47:26,130 --> 00:47:29,960
<font color="#CCCCCC">logout session reuse</font>

1012
00:47:27,500 --> 00:47:33,080
sometimes all the<font color="#E5E5E5"> logout does is send</font>

1013
00:47:29,960 --> 00:47:35,120
you to the non logged in area<font color="#E5E5E5"> of the</font>

1014
00:47:33,080 --> 00:47:37,940
site it doesn't remove the cookie it

1015
00:47:35,120 --> 00:47:39,650
doesn't destroy your session so you're

1016
00:47:37,940 --> 00:47:42,200
still logged in an attacker can<font color="#E5E5E5"> still</font>

1017
00:47:39,650 --> 00:47:47,390
get in as you if they can figure<font color="#E5E5E5"> out</font>

1018
00:47:42,200 --> 00:47:48,770
your cookie conclusions log in and

1019
00:47:47,390 --> 00:47:50,600
authentication can't easily be

1020
00:47:48,770 --> 00:47:53,390
segregated from the applications<font color="#CCCCCC"> that</font>

1021
00:47:50,600 --> 00:47:54,770
use it it's a single sign-on<font color="#E5E5E5"> kind of</font>

1022
00:47:53,390 --> 00:47:57,560
hairy because if there's a sequel

1023
00:47:54,770 --> 00:48:00,230
injection on a pre login area or on a

1024
00:47:57,560 --> 00:48:01,850
different application that shares the

1025
00:48:00,230 --> 00:48:04,850
same database server you might be able

1026
00:48:01,850 --> 00:48:06,200
<font color="#E5E5E5">to get the passwords out of that</font>

1027
00:48:04,850 --> 00:48:09,410
database server from a sequel injection

1028
00:48:06,200 --> 00:48:11,600
different area entirely so having one

1029
00:48:09,410 --> 00:48:13,670
group that<font color="#E5E5E5"> works on login and other</font>

1030
00:48:11,600 --> 00:48:16,310
<font color="#E5E5E5">groups that work on other sections if</font>

1031
00:48:13,670 --> 00:48:18,140
they don't have<font color="#E5E5E5"> any communication then</font>

1032
00:48:16,310 --> 00:48:22,430
you can<font color="#CCCCCC"> have some bleed over attacks</font>

1033
00:48:18,140 --> 00:48:24,950
their pre login subdomains parent

1034
00:48:22,430 --> 00:48:26,589
domains sister domains they can all

1035
00:48:24,950 --> 00:48:28,490
affect log in and authentication

1036
00:48:26,590 --> 00:48:31,520
functionality this is through the

1037
00:48:28,490 --> 00:48:35,060
cookies not being being scoped<font color="#E5E5E5"> too</font>

1038
00:48:31,520 --> 00:48:39,140
broadly for instance or not having SSL

1039
00:48:35,060 --> 00:48:42,380
and<font color="#CCCCCC"> having lead over attacks user</font>

1040
00:48:39,140 --> 00:48:43,819
enumeration protection applies login

1041
00:48:42,380 --> 00:48:45,410
page as<font color="#CCCCCC"> well as account creation</font>

1042
00:48:43,820 --> 00:48:48,710
password reset can't stress that enough

1043
00:48:45,410 --> 00:48:50,210
I see that all<font color="#E5E5E5"> over the place cross-site</font>

1044
00:48:48,710 --> 00:48:53,810
scripting and sequel injection a pretty

1045
00:48:50,210 --> 00:48:56,390
much game over stopping brute forcing of

1046
00:48:53,810 --> 00:48:58,880
passwords is difficult so make passwords

1047
00:48:56,390 --> 00:49:01,640
difficult to<font color="#CCCCCC"> brute-force use password</font>

1048
00:48:58,880 --> 00:49:03,290
rules make difficult password rules you

1049
00:49:01,640 --> 00:49:05,900
can even try to make sure<font color="#CCCCCC"> that there</font>

1050
00:49:03,290 --> 00:49:07,930
aren't actually words being used as a

1051
00:49:05,900 --> 00:49:10,970
word is a really<font color="#CCCCCC"> easy thing to find</font>

1052
00:49:07,930 --> 00:49:12,350
dictionary attacks<font color="#E5E5E5"> JavaScript redirects</font>

1053
00:49:10,970 --> 00:49:14,779
can lead to Donbass cross-site scripting

1054
00:49:12,350 --> 00:49:16,310
hard protect against you have to update

1055
00:49:14,780 --> 00:49:18,530
the session cookie during the

1056
00:49:16,310 --> 00:49:21,740
redirection step otherwise if anybody

1057
00:49:18,530 --> 00:49:23,840
knows or can set the pre login session

1058
00:49:21,740 --> 00:49:26,270
cookie or the cookie on a person's

1059
00:49:23,840 --> 00:49:28,910
browser before they<font color="#E5E5E5"> login if that cookie</font>

1060
00:49:26,270 --> 00:49:31,190
is their cookie<font color="#CCCCCC"> after they login</font><font color="#E5E5E5"> then an</font>

1061
00:49:28,910 --> 00:49:33,560
attacker can<font color="#E5E5E5"> have knowledge of that so</font>

1062
00:49:31,190 --> 00:49:35,990
session fixation is big<font color="#E5E5E5"> there use</font>

1063
00:49:33,560 --> 00:49:38,360
cryptography for security related tokens

1064
00:49:35,990 --> 00:49:40,310
you have to<font color="#E5E5E5"> use real cryptography not</font>

1065
00:49:38,360 --> 00:49:44,480
not made up cryptography people can

1066
00:49:40,310 --> 00:49:46,670
figure it out watch what goes into the

1067
00:49:44,480 --> 00:49:50,570
URL<font color="#E5E5E5"> because this can go off site in a</font>

1068
00:49:46,670 --> 00:49:52,430
refer HTTP header<font color="#E5E5E5"> first users to use</font>

1069
00:49:50,570 --> 00:49:54,920
cookies there's no excuse anymore

1070
00:49:52,430 --> 00:49:59,750
nobody's really using links to do their

1071
00:49:54,920 --> 00:50:02,630
online banking and so the backwards

1072
00:49:59,750 --> 00:50:05,390
compatible functionality of having a no

1073
00:50:02,630 --> 00:50:09,320
cookies<font color="#CCCCCC"> setup not really a valid use</font>

1074
00:50:05,390 --> 00:50:12,049
case anymore my opinion using a

1075
00:50:09,320 --> 00:50:14,450
framework to approach problems like

1076
00:50:12,050 --> 00:50:15,650
<font color="#CCCCCC">authentication HTML output sequel</font>

1077
00:50:14,450 --> 00:50:18,439
injection cross-site request forgery

1078
00:50:15,650 --> 00:50:20,300
protection having an opt-out sort of

1079
00:50:18,440 --> 00:50:22,700
situation where you have to turn that

1080
00:50:20,300 --> 00:50:23,840
sort<font color="#E5E5E5"> of protection off is more the way</font>

1081
00:50:22,700 --> 00:50:27,500
to go otherwise you're going<font color="#E5E5E5"> to have</font>

1082
00:50:23,840 --> 00:50:31,010
some percentage of the site's not

1083
00:50:27,500 --> 00:50:32,320
covered of the page is<font color="#E5E5E5"> not covered Ajax</font>

1084
00:50:31,010 --> 00:50:34,550
might require cross-site request forgery

1085
00:50:32,320 --> 00:50:38,210
protection for get<font color="#CCCCCC"> request to that's the</font>

1086
00:50:34,550 --> 00:50:39,860
Ajax hijacking stuff and expiring a

1087
00:50:38,210 --> 00:50:41,420
session cookie is<font color="#CCCCCC"> not a sufficient log</font>

1088
00:50:39,860 --> 00:50:45,110
<font color="#CCCCCC">out procedure yet you also have to</font>

1089
00:50:41,420 --> 00:50:47,660
destroy the session so I think<font color="#E5E5E5"> we're out</font>

1090
00:50:45,110 --> 00:50:49,700
of time so any questions<font color="#E5E5E5"> just come on up</font>

1091
00:50:47,660 --> 00:50:53,500
<font color="#E5E5E5">and I'll be happy to talk about stuff</font>

1092
00:50:49,700 --> 00:50:53,500
<font color="#E5E5E5">and then I'll be riding the bull</font>

1093
00:51:04,480 --> 00:51:06,540
you

