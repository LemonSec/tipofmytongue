1
00:00:06,899 --> 00:00:09,080
foreign

2
00:00:17,730 --> 00:00:20,850
[Music]

3
00:00:30,430 --> 00:00:33,489
[Music]

4
00:00:37,280 --> 00:00:45,520
[Music]

5
00:00:51,100 --> 00:00:54,199
[Music]

6
00:00:54,199 --> 00:00:56,219
excited to be here hopefully I was

7
00:00:56,219 --> 00:00:57,840
enjoying the conference I think it's

8
00:00:57,840 --> 00:01:00,300
been a fantastic day so far a lot of

9
00:01:00,300 --> 00:01:02,160
different uh a lot a lot of learnings

10
00:01:02,160 --> 00:01:03,500
across the board

11
00:01:03,500 --> 00:01:06,240
I believe this is our last presentation

12
00:01:06,240 --> 00:01:08,700
before the bull riding so hopefully

13
00:01:08,700 --> 00:01:10,020
everybody's getting excited I don't want

14
00:01:10,020 --> 00:01:11,760
to be first but you know we'll see how

15
00:01:11,760 --> 00:01:13,080
that goes

16
00:01:13,080 --> 00:01:14,760
um so for today I want to talk about uh

17
00:01:14,760 --> 00:01:17,040
d song that um the devsecops maturity

18
00:01:17,040 --> 00:01:18,119
model

19
00:01:18,119 --> 00:01:20,100
um and talk a bit about maturity models

20
00:01:20,100 --> 00:01:22,080
themselves and then get into the actual

21
00:01:22,080 --> 00:01:24,360
um nuts and bolts of dsom and I think

22
00:01:24,360 --> 00:01:25,500
one of the things I wanted to jump out

23
00:01:25,500 --> 00:01:26,580
too is that you listen to some of the

24
00:01:26,580 --> 00:01:28,320
talks there's a lot of people say Hey

25
00:01:28,320 --> 00:01:30,780
you know this is not a a representation

26
00:01:30,780 --> 00:01:32,759
of my company and

27
00:01:32,759 --> 00:01:34,380
um quite frankly this is a lot of the

28
00:01:34,380 --> 00:01:36,240
learnings that I've had in my time with

29
00:01:36,240 --> 00:01:38,100
the startup jit what I'll talk about so

30
00:01:38,100 --> 00:01:39,420
that I'm bringing a lot of my company

31
00:01:39,420 --> 00:01:41,640
learnings to this it's not to be a sales

32
00:01:41,640 --> 00:01:43,920
pitch but it just wanted to be clear on

33
00:01:43,920 --> 00:01:45,240
that that we're bringing our learnings

34
00:01:45,240 --> 00:01:46,380
forward and love to share with you guys

35
00:01:46,380 --> 00:01:49,259
open source right open World

36
00:01:49,259 --> 00:01:51,180
um so just you know quick uh you might

37
00:01:51,180 --> 00:01:53,579
if I look familiar

38
00:01:53,579 --> 00:01:55,560
um I'm the VP of security engineering

39
00:01:55,560 --> 00:01:58,500
and ciso at jit we're a startup we're

40
00:01:58,500 --> 00:02:01,740
based out of Tel Aviv uh Israel

41
00:02:01,740 --> 00:02:03,360
um and we just come out of stealth mode

42
00:02:03,360 --> 00:02:05,759
about three months ago uh about 40

43
00:02:05,759 --> 00:02:09,060
employees total 38 of those are

44
00:02:09,060 --> 00:02:12,300
developers and then I joined is again

45
00:02:12,300 --> 00:02:14,940
the vpu security Engineering in ciso uh

46
00:02:14,940 --> 00:02:18,599
and before I joined I was with KPMG and

47
00:02:18,599 --> 00:02:21,540
big four Consulting for about 15 years

48
00:02:21,540 --> 00:02:23,099
um and I lived the Consulting role it

49
00:02:23,099 --> 00:02:24,599
was great

50
00:02:24,599 --> 00:02:26,340
um and I love working with clients I led

51
00:02:26,340 --> 00:02:28,260
our within our cyber security practice I

52
00:02:28,260 --> 00:02:31,620
let our Cloud security compliance

53
00:02:31,620 --> 00:02:33,480
um uh practice and what that basically

54
00:02:33,480 --> 00:02:35,520
means is taking cloud service providers

55
00:02:35,520 --> 00:02:38,640
through some very rigorous uh compliance

56
00:02:38,640 --> 00:02:40,020
processes if you guys have heard of

57
00:02:40,020 --> 00:02:42,959
fedramp that's the big one uh we were

58
00:02:42,959 --> 00:02:44,819
really we were the leading team for for

59
00:02:44,819 --> 00:02:47,099
fed ramp compliance but things like sock

60
00:02:47,099 --> 00:02:49,560
2 and ISO but from a big four Consulting

61
00:02:49,560 --> 00:02:51,540
perspective I loved him right because we

62
00:02:51,540 --> 00:02:53,940
show up at uh you know Fortune 500

63
00:02:53,940 --> 00:02:56,640
company even startups there'd be a team

64
00:02:56,640 --> 00:02:59,280
of like five of us 10 of us 20 of us

65
00:02:59,280 --> 00:03:01,440
we'd show up get the job done move on to

66
00:03:01,440 --> 00:03:03,300
the next client but one of the things I

67
00:03:03,300 --> 00:03:05,099
realized quickly was you know is this

68
00:03:05,099 --> 00:03:07,140
lasting right are the processes that

69
00:03:07,140 --> 00:03:09,300
we're implementing are they there long

70
00:03:09,300 --> 00:03:11,519
term right that was a big big challenge

71
00:03:11,519 --> 00:03:13,140
that we had and I think the biggest

72
00:03:13,140 --> 00:03:15,120
thing that I've learned a lot about was

73
00:03:15,120 --> 00:03:17,340
we really stifled development velocity

74
00:03:17,340 --> 00:03:19,140
right because we brought in processes

75
00:03:19,140 --> 00:03:20,580
from the outside

76
00:03:20,580 --> 00:03:22,920
push them down on for lack of a better

77
00:03:22,920 --> 00:03:25,680
term on developers they didn't really

78
00:03:25,680 --> 00:03:27,720
stick or if they did a lot of the

79
00:03:27,720 --> 00:03:29,159
developers would move would move on

80
00:03:29,159 --> 00:03:31,560
right so it was a it was a bit of a of a

81
00:03:31,560 --> 00:03:34,260
challenge but um uh you know in terms of

82
00:03:34,260 --> 00:03:36,959
a lasting impression of our projects we

83
00:03:36,959 --> 00:03:38,459
were successful but the opportunity came

84
00:03:38,459 --> 00:03:40,680
out to join a startup about hey this is

85
00:03:40,680 --> 00:03:43,260
the time to do it and I joined I joined

86
00:03:43,260 --> 00:03:44,280
jit

87
00:03:44,280 --> 00:03:45,720
um just a couple other things about me

88
00:03:45,720 --> 00:03:47,459
you know I I could figure I'm a tech

89
00:03:47,459 --> 00:03:49,440
security in compliance Advocate and I

90
00:03:49,440 --> 00:03:51,239
said that's a lot

91
00:03:51,239 --> 00:03:53,159
um but in terms of supporting developers

92
00:03:53,159 --> 00:03:55,700
you know I really see this is the future

93
00:03:55,700 --> 00:03:58,319
of the security industry quite frankly

94
00:03:58,319 --> 00:04:00,540
right we look at this way as developers

95
00:04:00,540 --> 00:04:03,540
owning security and I love music I love

96
00:04:03,540 --> 00:04:05,519
to be here in Austin awesome music Town

97
00:04:05,519 --> 00:04:07,980
there's so many good venues here so many

98
00:04:07,980 --> 00:04:09,659
great musicians that have come through

99
00:04:09,659 --> 00:04:11,099
throughout the years that are still here

100
00:04:11,099 --> 00:04:13,260
different types of music so maybe get

101
00:04:13,260 --> 00:04:15,959
your show or two off here uh and uh love

102
00:04:15,959 --> 00:04:18,238
to travel and uh love the outdoors as

103
00:04:18,238 --> 00:04:20,880
well uh so it's a bit about me

104
00:04:20,880 --> 00:04:22,320
um so let's talk about now d song from

105
00:04:22,320 --> 00:04:24,780
Theory to uh enforcement so we're gonna

106
00:04:24,780 --> 00:04:27,300
do a little bit of a of a dive into into

107
00:04:27,300 --> 00:04:28,919
security maturity models because we have

108
00:04:28,919 --> 00:04:30,419
to right I think it's important for us

109
00:04:30,419 --> 00:04:32,400
to kind of set the Baseline of what a

110
00:04:32,400 --> 00:04:34,380
maturity model is then we'll get into

111
00:04:34,380 --> 00:04:36,419
what dsom actually is again the devsec

112
00:04:36,419 --> 00:04:39,540
Ops maturity model and then what was the

113
00:04:39,540 --> 00:04:41,940
bulk of our time is an operationalizing

114
00:04:41,940 --> 00:04:44,160
D sum because a lot of these models like

115
00:04:44,160 --> 00:04:46,620
you know could get great in theory uh a

116
00:04:46,620 --> 00:04:49,139
well-written are you decide it's getting

117
00:04:49,139 --> 00:04:50,880
there uh but how do we actually

118
00:04:50,880 --> 00:04:52,139
implement it so we're going to talk a

119
00:04:52,139 --> 00:04:53,759
bit about that and actually looking to

120
00:04:53,759 --> 00:04:55,800
automate using tools and then our

121
00:04:55,800 --> 00:04:57,240
approach object and then of course any

122
00:04:57,240 --> 00:04:59,639
questions that anybody has at the end

123
00:04:59,639 --> 00:05:02,220
would love to talk to that all right so

124
00:05:02,220 --> 00:05:05,100
you know what images come to mind

125
00:05:05,100 --> 00:05:07,440
when you think of security maturity

126
00:05:07,440 --> 00:05:09,960
models um I won't put anybody on the

127
00:05:09,960 --> 00:05:11,520
spot here but I'll just go ahead and

128
00:05:11,520 --> 00:05:13,680
call out maybe not the most exciting

129
00:05:13,680 --> 00:05:15,120
right

130
00:05:15,120 --> 00:05:17,040
um you know the um one of my favorites

131
00:05:17,040 --> 00:05:18,479
Ferris Blues day off and hopefully not

132
00:05:18,479 --> 00:05:20,460
too much of a throwback

133
00:05:20,460 --> 00:05:21,720
um I actually think the English

134
00:05:21,720 --> 00:05:23,520
Professor is kind of people will give

135
00:05:23,520 --> 00:05:24,720
him enough credit everyone thinks about

136
00:05:24,720 --> 00:05:26,820
Bueller Bueller but the English

137
00:05:26,820 --> 00:05:28,680
Professor was much more boring in my

138
00:05:28,680 --> 00:05:31,080
mind but you know it's that's debatable

139
00:05:31,080 --> 00:05:34,139
um so yes yes you know security maturity

140
00:05:34,139 --> 00:05:37,080
models uh may not seem very exciting but

141
00:05:37,080 --> 00:05:39,660
hold on there can be significant value

142
00:05:39,660 --> 00:05:40,979
and we're going to talk about that today

143
00:05:40,979 --> 00:05:43,320
as well as what value these maturity

144
00:05:43,320 --> 00:05:45,120
models can help within your organization

145
00:05:45,120 --> 00:05:47,340
within your role help you to make an

146
00:05:47,340 --> 00:05:49,560
impact right with within your whether

147
00:05:49,560 --> 00:05:51,600
you're a consultant whether you know

148
00:05:51,600 --> 00:05:53,039
your sister whether you're a developer

149
00:05:53,039 --> 00:05:54,780
whatever your role is can really make a

150
00:05:54,780 --> 00:05:57,240
difference across the board and here's

151
00:05:57,240 --> 00:05:58,440
you know I want to talk through some of

152
00:05:58,440 --> 00:06:01,800
those reasons uh you know translation to

153
00:06:01,800 --> 00:06:03,300
leadership

154
00:06:03,300 --> 00:06:04,620
um there was a talk I think that Joe

155
00:06:04,620 --> 00:06:06,780
just gave gave around social engineering

156
00:06:06,780 --> 00:06:08,280
we're saying hey we talked nerd to nerd

157
00:06:08,280 --> 00:06:10,320
right which I love but we speak the same

158
00:06:10,320 --> 00:06:12,300
language but of course we need to be

159
00:06:12,300 --> 00:06:14,820
able to translate to leadership and

160
00:06:14,820 --> 00:06:16,620
these maturity models can really help

161
00:06:16,620 --> 00:06:19,199
with translating the leadership you know

162
00:06:19,199 --> 00:06:21,000
one of the key pain points that we have

163
00:06:21,000 --> 00:06:23,280
could put the language that's simple to

164
00:06:23,280 --> 00:06:25,620
understand simple metrics numbers

165
00:06:25,620 --> 00:06:28,440
maturity levels it's a great way to

166
00:06:28,440 --> 00:06:29,639
bring to your leadership to say hey

167
00:06:29,639 --> 00:06:32,639
we're at this material Level one if you

168
00:06:32,639 --> 00:06:34,020
want us to get to two and three it's

169
00:06:34,020 --> 00:06:35,460
what we have to do and here's the

170
00:06:35,460 --> 00:06:37,020
benefit so it can be a really simple way

171
00:06:37,020 --> 00:06:39,479
to do that not civil but a clear way to

172
00:06:39,479 --> 00:06:41,940
do that and then we we spent a lot of

173
00:06:41,940 --> 00:06:43,440
time to like bring if I was bringing

174
00:06:43,440 --> 00:06:45,180
Consultants or doing internally a lot of

175
00:06:45,180 --> 00:06:48,120
analysis well using maturity models you

176
00:06:48,120 --> 00:06:50,160
can you know perform your analysis and

177
00:06:50,160 --> 00:06:51,180
see where you are from an attorney

178
00:06:51,180 --> 00:06:54,240
perspective all in the same swoop right

179
00:06:54,240 --> 00:06:55,740
so I feel like you know the current

180
00:06:55,740 --> 00:06:58,199
state analysis and GAP prioritizations

181
00:06:58,199 --> 00:06:59,940
you know identifying your gaps and

182
00:06:59,940 --> 00:07:02,340
giving them priorities and material

183
00:07:02,340 --> 00:07:03,600
models can really help with that right

184
00:07:03,600 --> 00:07:05,520
you put it into context that makes steps

185
00:07:05,520 --> 00:07:07,620
across the board and then a couple other

186
00:07:07,620 --> 00:07:09,180
things tools and automation you know

187
00:07:09,180 --> 00:07:11,759
we've gotta we've got to automate if a

188
00:07:11,759 --> 00:07:13,560
process isn't automated it's gonna die

189
00:07:13,560 --> 00:07:15,780
most likely right and you know looking

190
00:07:15,780 --> 00:07:17,699
at maturity models it can show us hey

191
00:07:17,699 --> 00:07:20,160
current state we're doing okay but it's

192
00:07:20,160 --> 00:07:22,199
a manual process here's what's going to

193
00:07:22,199 --> 00:07:24,240
take to automate this process

194
00:07:24,240 --> 00:07:25,080
um and then I think what's really

195
00:07:25,080 --> 00:07:27,419
important is resource needs right hey we

196
00:07:27,419 --> 00:07:29,520
could we can do this right now at this

197
00:07:29,520 --> 00:07:31,259
level but if we really want to get

198
00:07:31,259 --> 00:07:33,240
better we need these skill sets we need

199
00:07:33,240 --> 00:07:35,340
these resources so it can really help

200
00:07:35,340 --> 00:07:36,599
with that again that translation to

201
00:07:36,599 --> 00:07:38,460
leadership and last and definitely not

202
00:07:38,460 --> 00:07:40,680
least is the risk exposure of course you

203
00:07:40,680 --> 00:07:42,000
know uh probably the most important

204
00:07:42,000 --> 00:07:44,099
where our risks are and the level of

205
00:07:44,099 --> 00:07:45,120
those risks so hopefully that makes

206
00:07:45,120 --> 00:07:47,039
sense to kind of get you guys more on

207
00:07:47,039 --> 00:07:49,080
the uh and the theme of hey maturity

208
00:07:49,080 --> 00:07:52,500
models are are helpful now let's uh talk

209
00:07:52,500 --> 00:07:54,120
a bit about the leading maturity models

210
00:07:54,120 --> 00:07:56,940
and I'll share some of the you know nist

211
00:07:56,940 --> 00:07:59,280
uh the nist cyber security framework I'm

212
00:07:59,280 --> 00:08:00,720
sure many of you are familiar with it

213
00:08:00,720 --> 00:08:02,880
the the on this is quick to say it's not

214
00:08:02,880 --> 00:08:04,620
a maturity model well it sure looks like

215
00:08:04,620 --> 00:08:06,840
we wanted acts like one

216
00:08:06,840 --> 00:08:08,220
um you know in terms of looking at the

217
00:08:08,220 --> 00:08:10,800
different levels you know nist has a lot

218
00:08:10,800 --> 00:08:12,539
of great Publications out there that we

219
00:08:12,539 --> 00:08:13,860
can utilize to see where we are from a

220
00:08:13,860 --> 00:08:16,080
maturity perspective uh there are

221
00:08:16,080 --> 00:08:18,000
courses to see the the tried and true

222
00:08:18,000 --> 00:08:19,740
right seeing my what this what this

223
00:08:19,740 --> 00:08:22,199
really is is levels right level one

224
00:08:22,199 --> 00:08:24,180
through five but then there's some

225
00:08:24,180 --> 00:08:26,160
translation that we have to take of like

226
00:08:26,160 --> 00:08:28,379
what does initial mean to what we're

227
00:08:28,379 --> 00:08:29,759
doing and how we're operating as an

228
00:08:29,759 --> 00:08:31,740
organization from a security perspective

229
00:08:31,740 --> 00:08:33,958
so the levels are good tough and

230
00:08:33,958 --> 00:08:35,880
translation for CMI

231
00:08:35,880 --> 00:08:37,860
um this cloud cloud security Alliance

232
00:08:37,860 --> 00:08:39,899
kind of similar we we do like how

233
00:08:39,899 --> 00:08:41,399
they've taken some of the levels and

234
00:08:41,399 --> 00:08:43,679
then translated them to specific areas

235
00:08:43,679 --> 00:08:45,480
around Cloud security but it's still

236
00:08:45,480 --> 00:08:47,339
more broad right it doesn't really get

237
00:08:47,339 --> 00:08:49,860
into how we operate as an organization

238
00:08:49,860 --> 00:08:52,920
and then uh also call out we do like owa

239
00:08:52,920 --> 00:08:54,120
Sam

240
00:08:54,120 --> 00:08:56,040
um I but again it's it's a bit it's a

241
00:08:56,040 --> 00:08:58,380
bit rigid uh but you'll see the diesel

242
00:08:58,380 --> 00:09:00,480
Maxi borrows a lot from a wasp Sam so

243
00:09:00,480 --> 00:09:01,740
you'll definitely take a look at that we

244
00:09:01,740 --> 00:09:03,540
love o wasp obviously

245
00:09:03,540 --> 00:09:05,399
um so

246
00:09:05,399 --> 00:09:08,640
um why we like dsamic jit uh you know a

247
00:09:08,640 --> 00:09:10,080
few reasons here just to kind of cover

248
00:09:10,080 --> 00:09:12,180
this uh you know we love the open source

249
00:09:12,180 --> 00:09:14,160
legit we are I know we're all on open

250
00:09:14,160 --> 00:09:15,540
source you know we think it's the future

251
00:09:15,540 --> 00:09:17,459
we know it's the future I think what

252
00:09:17,459 --> 00:09:18,660
most of us can agree with that that's

253
00:09:18,660 --> 00:09:20,459
pretty much why we're here we value open

254
00:09:20,459 --> 00:09:22,140
source tools and we like the fact that

255
00:09:22,140 --> 00:09:23,700
we can the maternity model has been

256
00:09:23,700 --> 00:09:25,500
built and the community is really

257
00:09:25,500 --> 00:09:27,180
building it up versus you know something

258
00:09:27,180 --> 00:09:28,800
that's made or you know to sell for

259
00:09:28,800 --> 00:09:31,380
example uh developer owned right it's

260
00:09:31,380 --> 00:09:33,480
called the devsecops maturity model yeah

261
00:09:33,480 --> 00:09:35,519
I mean this this model was it's really

262
00:09:35,519 --> 00:09:37,740
about how we operate and we look at

263
00:09:37,740 --> 00:09:39,480
ourselves as an elite or high performing

264
00:09:39,480 --> 00:09:42,720
team from a velocity perspective and you

265
00:09:42,720 --> 00:09:46,200
know certainly the um the dsom is all

266
00:09:46,200 --> 00:09:48,000
about developers

267
00:09:48,000 --> 00:09:49,920
um you know Automation and tooling you

268
00:09:49,920 --> 00:09:52,320
know there's integration from dsum into

269
00:09:52,320 --> 00:09:54,420
different tools and I think it also just

270
00:09:54,420 --> 00:09:56,580
helps us identify areas where we want to

271
00:09:56,580 --> 00:09:58,680
automate as well more clearly across our

272
00:09:58,680 --> 00:10:00,000
life cycle

273
00:10:00,000 --> 00:10:01,440
um and then that stakeholder value it

274
00:10:01,440 --> 00:10:02,580
gets back to the translation to

275
00:10:02,580 --> 00:10:04,200
leadership all right that I talked about

276
00:10:04,200 --> 00:10:07,080
is that dsam provides value to our

277
00:10:07,080 --> 00:10:08,880
developers it provides value to team

278
00:10:08,880 --> 00:10:10,740
leads and it provides value to our

279
00:10:10,740 --> 00:10:12,180
leadership as well so we feel like it's

280
00:10:12,180 --> 00:10:15,180
a great way to provide value across

281
00:10:15,180 --> 00:10:17,040
stakeholders

282
00:10:17,040 --> 00:10:19,019
all right so just a bit

283
00:10:19,019 --> 00:10:21,000
sum I think it's helpful just to kind of

284
00:10:21,000 --> 00:10:22,140
um you know share some of this and give

285
00:10:22,140 --> 00:10:23,580
some credit actually had a great

286
00:10:23,580 --> 00:10:26,459
discussion uh with Timo Pago who built

287
00:10:26,459 --> 00:10:29,279
dsom back in 2017 with the simple

288
00:10:29,279 --> 00:10:32,100
realization of hey we don't have I have

289
00:10:32,100 --> 00:10:33,959
no way to rate how my organization is

290
00:10:33,959 --> 00:10:37,440
operating from a devsecops perspective

291
00:10:37,440 --> 00:10:38,760
um and I talked to TiVo about this talk

292
00:10:38,760 --> 00:10:40,320
he gave some input too and by the way

293
00:10:40,320 --> 00:10:42,000
he's you know this being an open source

294
00:10:42,000 --> 00:10:43,200
project he's certainly opened the

295
00:10:43,200 --> 00:10:45,720
feedback which we're sharing with them

296
00:10:45,720 --> 00:10:46,980
um you know focused on security and

297
00:10:46,980 --> 00:10:49,019
devops strategies

298
00:10:49,019 --> 00:10:51,060
um you know focused on or based on needs

299
00:10:51,060 --> 00:10:52,200
for security prioritization for

300
00:10:52,200 --> 00:10:54,600
developers the maturity levels right

301
00:10:54,600 --> 00:10:56,519
software development

302
00:10:56,519 --> 00:10:58,079
um it's all up there it's out in the

303
00:10:58,079 --> 00:11:00,360
open There's the link for the Olaf's

304
00:11:00,360 --> 00:11:03,000
page and then I think what's what's it

305
00:11:03,000 --> 00:11:04,740
will break this down a little bit but

306
00:11:04,740 --> 00:11:06,839
the security the way that the dsam is

307
00:11:06,839 --> 00:11:07,800
constructed

308
00:11:07,800 --> 00:11:09,959
security Dimensions level specific to

309
00:11:09,959 --> 00:11:11,880
software development right so we you

310
00:11:11,880 --> 00:11:13,500
know we like that

311
00:11:13,500 --> 00:11:15,300
um and just the way that the Teemo kind

312
00:11:15,300 --> 00:11:17,160
of thought about this and then there's

313
00:11:17,160 --> 00:11:18,420
some mapping there's some mapping to

314
00:11:18,420 --> 00:11:20,040
compliance Frameworks Teemo started with

315
00:11:20,040 --> 00:11:22,019
ISO from a global perspective of course

316
00:11:22,019 --> 00:11:23,339
that added that's going to ramp up big

317
00:11:23,339 --> 00:11:25,560
time too right good more mapping which

318
00:11:25,560 --> 00:11:27,240
will be great for uh for you know for

319
00:11:27,240 --> 00:11:28,980
mapping up maturity and also help us

320
00:11:28,980 --> 00:11:31,320
with with compliance

321
00:11:31,320 --> 00:11:33,240
all right so here's just a quick view of

322
00:11:33,240 --> 00:11:35,820
what dsom is and I think already I know

323
00:11:35,820 --> 00:11:37,740
it's it's hard to read the font on the

324
00:11:37,740 --> 00:11:40,500
outside but the kind of the bullseye and

325
00:11:40,500 --> 00:11:43,680
the circular pattern the desert the dsom

326
00:11:43,680 --> 00:11:47,519
utilizes to to measure maturity you know

327
00:11:47,519 --> 00:11:49,019
right away you can see the difference

328
00:11:49,019 --> 00:11:52,079
from the waterfall CMI to how we're

329
00:11:52,079 --> 00:11:53,700
looking at from you know devsecops

330
00:11:53,700 --> 00:11:54,660
perspective

331
00:11:54,660 --> 00:11:56,760
and you know from you know the

332
00:11:56,760 --> 00:11:58,260
dimensions and subdimension so each one

333
00:11:58,260 --> 00:11:59,940
of these kind of layers in the in the

334
00:11:59,940 --> 00:12:01,019
bullseye right you've got building

335
00:12:01,019 --> 00:12:03,320
deployment culture and organization

336
00:12:03,320 --> 00:12:06,180
implementation information gathering and

337
00:12:06,180 --> 00:12:08,040
then tested verification so you've got

338
00:12:08,040 --> 00:12:09,660
all these the all these Dimensions I

339
00:12:09,660 --> 00:12:11,700
mean there's a lot there right there's a

340
00:12:11,700 --> 00:12:13,620
lot to cover we do feel like it's all

341
00:12:13,620 --> 00:12:15,240
encompassing from this you know these

342
00:12:15,240 --> 00:12:18,320
Dimensions perspective

343
00:12:18,839 --> 00:12:19,980
um and then here's just a little bit

344
00:12:19,980 --> 00:12:22,740
more of a view and um you know Joseph

345
00:12:22,740 --> 00:12:24,120
showed this for the information

346
00:12:24,120 --> 00:12:25,740
gathering

347
00:12:25,740 --> 00:12:28,079
um level in this talk earlier but you

348
00:12:28,079 --> 00:12:29,640
know the the uh like for example it's

349
00:12:29,640 --> 00:12:31,560
simple build and deployment is a

350
00:12:31,560 --> 00:12:33,060
dimension underneath you have sub

351
00:12:33,060 --> 00:12:34,860
Dimensions right build and deployment

352
00:12:34,860 --> 00:12:36,420
and then within each one of those you

353
00:12:36,420 --> 00:12:38,579
have the four maturity levels

354
00:12:38,579 --> 00:12:40,260
um now I think what's important is you

355
00:12:40,260 --> 00:12:42,000
want to artificially just choose four

356
00:12:42,000 --> 00:12:45,000
levels so some cases teemos collapse in

357
00:12:45,000 --> 00:12:46,920
the level so we agree with them so like

358
00:12:46,920 --> 00:12:48,779
in some cases you reach level four three

359
00:12:48,779 --> 00:12:50,940
you've also reached level four you know

360
00:12:50,940 --> 00:12:52,380
level one and two are combined so

361
00:12:52,380 --> 00:12:53,820
there's some of those scenarios so some

362
00:12:53,820 --> 00:12:56,040
cases you have three levels uh but in

363
00:12:56,040 --> 00:12:57,540
the end we've there's there's a maximum

364
00:12:57,540 --> 00:12:59,220
of four level levels of maturity for

365
00:12:59,220 --> 00:13:02,220
each sub-dimension

366
00:13:02,220 --> 00:13:05,339
all right so that is the uh kind of an

367
00:13:05,339 --> 00:13:07,560
overview of dsom hopefully it's all

368
00:13:07,560 --> 00:13:09,420
making sense and kind of why we like it

369
00:13:09,420 --> 00:13:10,980
and why it's a bit different from some

370
00:13:10,980 --> 00:13:12,480
of the other maturity models out there

371
00:13:12,480 --> 00:13:14,940
for this talk now we're going to talk

372
00:13:14,940 --> 00:13:16,620
specifically about the implementation

373
00:13:16,620 --> 00:13:19,860
and the test verification uh um

374
00:13:19,860 --> 00:13:21,839
dimensions and then each one of these

375
00:13:21,839 --> 00:13:23,760
subdimensions so there's a lot more and

376
00:13:23,760 --> 00:13:25,440
I have to say like culture organization

377
00:13:25,440 --> 00:13:27,480
and information gathering still very

378
00:13:27,480 --> 00:13:29,940
important but you know Egypt we looked

379
00:13:29,940 --> 00:13:31,380
at some of these Dimensions as kind of

380
00:13:31,380 --> 00:13:34,440
our first cut to improve our maturity

381
00:13:34,440 --> 00:13:35,519
um you know across the board for

382
00:13:35,519 --> 00:13:37,700
security

383
00:13:37,980 --> 00:13:40,079
all right so let's get into the first

384
00:13:40,079 --> 00:13:41,700
one and this is the meat of the talk

385
00:13:41,700 --> 00:13:43,800
here uh for implementation and

386
00:13:43,800 --> 00:13:45,660
application hardening

387
00:13:45,660 --> 00:13:47,639
um so for this first

388
00:13:47,639 --> 00:13:49,740
um you know sub Dimension if you look at

389
00:13:49,740 --> 00:13:51,180
this this actually is borrowed from Sam

390
00:13:51,180 --> 00:13:53,579
so I talked about how dsom is connected

391
00:13:53,579 --> 00:13:55,139
to Sam so you've got these three

392
00:13:55,139 --> 00:13:56,579
maturity levels right so the first

393
00:13:56,579 --> 00:13:58,440
maturity level consider security

394
00:13:58,440 --> 00:13:59,579
explicitly during the software

395
00:13:59,579 --> 00:14:02,040
requirements process uh second is

396
00:14:02,040 --> 00:14:03,240
increased credulity of security

397
00:14:03,240 --> 00:14:04,980
requirements derived from business logic

398
00:14:04,980 --> 00:14:06,899
and known risks and the third is mandate

399
00:14:06,899 --> 00:14:08,880
security requirement process for all

400
00:14:08,880 --> 00:14:10,320
software projects and third-party

401
00:14:10,320 --> 00:14:12,000
dependencies so you've got those

402
00:14:12,000 --> 00:14:13,440
maturity levels from an application

403
00:14:13,440 --> 00:14:15,000
hardening perspective

404
00:14:15,000 --> 00:14:17,279
and the way it's broken down is now

405
00:14:17,279 --> 00:14:18,839
there's two streams you've got software

406
00:14:18,839 --> 00:14:21,420
requirements and supplier security not

407
00:14:21,420 --> 00:14:23,040
surprisingly suppliers been broken out

408
00:14:23,040 --> 00:14:25,800
as a separate uh work stream because of

409
00:14:25,800 --> 00:14:28,440
all the supply chain attacks such you

410
00:14:28,440 --> 00:14:30,000
know it's it becomes such an attack

411
00:14:30,000 --> 00:14:32,880
Vector uh that you know Sam has broken

412
00:14:32,880 --> 00:14:35,160
that out which D sound borrows from so

413
00:14:35,160 --> 00:14:36,180
we're going to spend a bit of time going

414
00:14:36,180 --> 00:14:37,380
through this first one just to kind of

415
00:14:37,380 --> 00:14:38,639
get you guys in the in the motion that

416
00:14:38,639 --> 00:14:39,779
we'll go through the rest of them a bit

417
00:14:39,779 --> 00:14:40,680
faster

418
00:14:40,680 --> 00:14:42,839
but all right so this hopefully this is

419
00:14:42,839 --> 00:14:44,100
making sense of like here are the

420
00:14:44,100 --> 00:14:46,139
maturity levels here's the words on the

421
00:14:46,139 --> 00:14:47,579
page that describe the maturity levels

422
00:14:47,579 --> 00:14:49,920
but how do we actually operationalize

423
00:14:49,920 --> 00:14:53,339
this Right theory to enforcement and the

424
00:14:53,339 --> 00:14:55,380
way that we looked at it is that this

425
00:14:55,380 --> 00:14:57,120
kind of got to keep this stuff simple

426
00:14:57,120 --> 00:14:59,279
right it can't be too complicated

427
00:14:59,279 --> 00:15:00,420
um even though there's a lot there in

428
00:15:00,420 --> 00:15:01,740
dsum

429
00:15:01,740 --> 00:15:03,360
um we looked this kind of bottom flow

430
00:15:03,360 --> 00:15:05,579
understand the risk

431
00:15:05,579 --> 00:15:07,260
map that to security requirements

432
00:15:07,260 --> 00:15:09,300
understand what tools because we got to

433
00:15:09,300 --> 00:15:10,980
automate we got to use tools wherever we

434
00:15:10,980 --> 00:15:11,820
can

435
00:15:11,820 --> 00:15:13,260
understand what tools and then that

436
00:15:13,260 --> 00:15:15,839
that'll derive with specific tasks that

437
00:15:15,839 --> 00:15:18,000
we're going to utilize so looking at

438
00:15:18,000 --> 00:15:20,519
this maturity level one uh you know the

439
00:15:20,519 --> 00:15:21,779
high level applications security

440
00:15:21,779 --> 00:15:23,100
objectives are mapped to functional

441
00:15:23,100 --> 00:15:24,779
requirements and then for the supply

442
00:15:24,779 --> 00:15:26,639
requirements evaluate the supplier based

443
00:15:26,639 --> 00:15:27,839
on an organizational security

444
00:15:27,839 --> 00:15:29,579
requirements

445
00:15:29,579 --> 00:15:31,320
all right so how do we do it

446
00:15:31,320 --> 00:15:33,000
here's how we did I know there's a lot

447
00:15:33,000 --> 00:15:34,139
of words on the page and there's going

448
00:15:34,139 --> 00:15:35,699
to be a lot of text but I'm going to

449
00:15:35,699 --> 00:15:37,019
walk through it and you'll happily share

450
00:15:37,019 --> 00:15:38,639
the slides to

451
00:15:38,639 --> 00:15:41,279
um offline but focusing on this the

452
00:15:41,279 --> 00:15:43,139
software requirements what's our

453
00:15:43,139 --> 00:15:44,399
objective from an application security

454
00:15:44,399 --> 00:15:46,440
perspective right we want to prevent

455
00:15:46,440 --> 00:15:48,120
data or code within the application from

456
00:15:48,120 --> 00:15:50,220
being stolen or hijacked

457
00:15:50,220 --> 00:15:51,899
uh looking at the supply requirements

458
00:15:51,899 --> 00:15:53,820
the supply chain uh what are the

459
00:15:53,820 --> 00:15:55,320
requirements all software libraries are

460
00:15:55,320 --> 00:15:56,699
updated with vulnerabilities remediated

461
00:15:56,699 --> 00:15:58,560
right those are that's kind of how we

462
00:15:58,560 --> 00:16:00,360
look forward uh look at the actual

463
00:16:00,360 --> 00:16:02,639
objectives or requirements so in terms

464
00:16:02,639 --> 00:16:04,199
of kind of mapping the risks over

465
00:16:04,199 --> 00:16:06,240
District requirements we want to scan

466
00:16:06,240 --> 00:16:08,519
code for vulnerabilities we want to scan

467
00:16:08,519 --> 00:16:10,680
code dependencies or vulnerabilities you

468
00:16:10,680 --> 00:16:13,260
want to scan code for hard-coded Secrets

469
00:16:13,260 --> 00:16:14,519
those are three things that we want to

470
00:16:14,519 --> 00:16:15,720
do

471
00:16:15,720 --> 00:16:18,240
so that that maps to our requirements

472
00:16:18,240 --> 00:16:20,399
now let's get the tools right and I

473
00:16:20,399 --> 00:16:22,800
think this is the fun part so again you

474
00:16:22,800 --> 00:16:24,720
know we we love open source security

475
00:16:24,720 --> 00:16:27,240
tools there's some great ones out there

476
00:16:27,240 --> 00:16:29,519
uh here's here's a list of the ones that

477
00:16:29,519 --> 00:16:31,680
we use at jit right from container

478
00:16:31,680 --> 00:16:34,019
scanning to code scanning you know

479
00:16:34,019 --> 00:16:36,060
dependency check infrastructure scanning

480
00:16:36,060 --> 00:16:38,940
you know zap is our is our you know is

481
00:16:38,940 --> 00:16:40,860
our favorite we just hired Simon Bennett

482
00:16:40,860 --> 00:16:42,959
if you guys know Simon who leads the uh

483
00:16:42,959 --> 00:16:46,259
oauth zap project he just joined jit you

484
00:16:46,259 --> 00:16:48,480
know all of these tools we love the fact

485
00:16:48,480 --> 00:16:49,860
that they're open source there's

486
00:16:49,860 --> 00:16:51,720
feedback you know again we feel like

487
00:16:51,720 --> 00:16:53,220
this is the future and all these tools

488
00:16:53,220 --> 00:16:56,160
can be utilized to help you to enable uh

489
00:16:56,160 --> 00:16:58,019
maturity security maturity within your

490
00:16:58,019 --> 00:17:00,720
organization align to dsong so let's

491
00:17:00,720 --> 00:17:02,100
let's go through again back to

492
00:17:02,100 --> 00:17:04,140
application hardening like I mentioned

493
00:17:04,140 --> 00:17:05,819
so the security requirements let's map

494
00:17:05,819 --> 00:17:08,699
those tools so for scan code for

495
00:17:08,699 --> 00:17:11,160
vulnerabilities right so for all of our

496
00:17:11,160 --> 00:17:14,220
python python code we use Bandit for our

497
00:17:14,220 --> 00:17:16,380
go code we use gosec and then for Java

498
00:17:16,380 --> 00:17:18,540
JavaScript and Json we use seven rep

499
00:17:18,540 --> 00:17:20,780
uh then scanning code for dependencies

500
00:17:20,780 --> 00:17:22,740
uh for

501
00:17:22,740 --> 00:17:25,740
um all of our python uh code we use OAS

502
00:17:25,740 --> 00:17:28,380
dependency check which by the way can it

503
00:17:28,380 --> 00:17:30,000
could scan other languages we really

504
00:17:30,000 --> 00:17:32,880
like uh OS depends to check just for

505
00:17:32,880 --> 00:17:34,799
python this who does evaluation just to

506
00:17:34,799 --> 00:17:36,840
share that and then for all of our go

507
00:17:36,840 --> 00:17:38,520
code we use Nancy and then for

508
00:17:38,520 --> 00:17:39,900
JavaScript type everything everything

509
00:17:39,900 --> 00:17:41,880
else we use npm audit there's no fancy

510
00:17:41,880 --> 00:17:44,820
uh graphic for npm audit and then for

511
00:17:44,820 --> 00:17:47,039
our scan for our hard-coded secrets we

512
00:17:47,039 --> 00:17:48,780
use gitlinks because it supports

513
00:17:48,780 --> 00:17:50,520
multiple languages and our buddy Zach

514
00:17:50,520 --> 00:17:51,419
rice

515
00:17:51,419 --> 00:17:53,220
um if you guys don't get leaks

516
00:17:53,220 --> 00:17:54,480
um he just actually just made this a

517
00:17:54,480 --> 00:17:56,039
company not too long ago so that

518
00:17:56,039 --> 00:17:57,299
hopefully this is helping to make sense

519
00:17:57,299 --> 00:18:00,419
right now we've got our dsom levels our

520
00:18:00,419 --> 00:18:02,000
Dimension our sub Dimension

521
00:18:02,000 --> 00:18:04,200
understanding the risks that turns into

522
00:18:04,200 --> 00:18:05,640
security requirements and now we have

523
00:18:05,640 --> 00:18:08,039
our tools mapped to those specific

524
00:18:08,039 --> 00:18:10,320
security requirements where we can see

525
00:18:10,320 --> 00:18:12,660
where we are and it can help us to show

526
00:18:12,660 --> 00:18:13,740
where we are from an immaturity

527
00:18:13,740 --> 00:18:16,020
perspective

528
00:18:16,020 --> 00:18:18,000
that way looks I'm gonna kind of run

529
00:18:18,000 --> 00:18:19,200
through the next material levels a

530
00:18:19,200 --> 00:18:20,520
little bit a little bit faster so for

531
00:18:20,520 --> 00:18:22,559
application hardening again you've got

532
00:18:22,559 --> 00:18:24,600
the two different areas right you've got

533
00:18:24,600 --> 00:18:26,460
structure for software requirements

534
00:18:26,460 --> 00:18:28,380
structured security requirements are

535
00:18:28,380 --> 00:18:30,179
available utilized by developer teams

536
00:18:30,179 --> 00:18:32,100
well by using these these tools we feel

537
00:18:32,100 --> 00:18:33,480
like we're already there right because

538
00:18:33,480 --> 00:18:34,919
these are security requirements that we

539
00:18:34,919 --> 00:18:36,360
we run as part of our development

540
00:18:36,360 --> 00:18:38,940
development processes or in runtime

541
00:18:38,940 --> 00:18:40,860
um so boom we already got level one and

542
00:18:40,860 --> 00:18:43,200
level two by using these tools from A

543
00:18:43,200 --> 00:18:44,880
supplier perspective we're not quite

544
00:18:44,880 --> 00:18:47,220
there yet right because you know this

545
00:18:47,220 --> 00:18:49,020
gets into some manual process supplier

546
00:18:49,020 --> 00:18:51,179
agreements I mean I know there's some

547
00:18:51,179 --> 00:18:52,380
tools out there and I'd love to hear if

548
00:18:52,380 --> 00:18:54,179
anybody has feedback of some tools for

549
00:18:54,179 --> 00:18:56,520
you know managing some Supply agreements

550
00:18:56,520 --> 00:18:58,380
uh but typically there's some back and

551
00:18:58,380 --> 00:19:00,480
forth that we have with our suppliers uh

552
00:19:00,480 --> 00:19:02,400
to get them to comply with our um you

553
00:19:02,400 --> 00:19:05,580
know our third-party security pieces

554
00:19:05,580 --> 00:19:07,799
and the material level three it says

555
00:19:07,799 --> 00:19:09,120
build a requirements framework for

556
00:19:09,120 --> 00:19:11,280
product teams to utilize well by

557
00:19:11,280 --> 00:19:13,620
utilizing utilizing these tools that

558
00:19:13,620 --> 00:19:15,000
gives us our requirements framework

559
00:19:15,000 --> 00:19:16,020
right and of course we have to

560
00:19:16,020 --> 00:19:17,780
understand which tools make sense for us

561
00:19:17,780 --> 00:19:19,860
we feel like we're already in which

562
00:19:19,860 --> 00:19:22,020
level uh maternity level three by

563
00:19:22,020 --> 00:19:23,700
utilizing these tools and then again

564
00:19:23,700 --> 00:19:25,380
from a supplier perspective a bit more

565
00:19:25,380 --> 00:19:27,720
manual right proper security coverage

566
00:19:27,720 --> 00:19:29,880
for external suppliers providing clear

567
00:19:29,880 --> 00:19:32,220
objectives a bit of a back and forth

568
00:19:32,220 --> 00:19:35,520
with uh with suppliers

569
00:19:35,520 --> 00:19:37,500
and then here's just a quick you know

570
00:19:37,500 --> 00:19:39,419
just a quick thing is what we do this is

571
00:19:39,419 --> 00:19:40,919
a view within our jet product but we

572
00:19:40,919 --> 00:19:42,480
just we enable all these code scans

573
00:19:42,480 --> 00:19:44,100
right so

574
00:19:44,100 --> 00:19:45,419
um you know we turn on all these code

575
00:19:45,419 --> 00:19:47,280
scans through our security plan it

576
00:19:47,280 --> 00:19:48,600
enables all the scans that I talked

577
00:19:48,600 --> 00:19:49,740
about

578
00:19:49,740 --> 00:19:51,240
um and then also the the dependency

579
00:19:51,240 --> 00:19:52,799
checking so we actually run those within

580
00:19:52,799 --> 00:19:55,799
our platform on our environment

581
00:19:55,799 --> 00:19:58,860
all right up next is uh development and

582
00:19:58,860 --> 00:20:00,120
Source control

583
00:20:00,120 --> 00:20:02,940
uh so for maturity level one and again

584
00:20:02,940 --> 00:20:04,020
I'm going to go through a little bit

585
00:20:04,020 --> 00:20:05,640
faster now uh hopefully it's making

586
00:20:05,640 --> 00:20:07,320
sense of the process so for material

587
00:20:07,320 --> 00:20:09,059
Level One Source Code Source control

588
00:20:09,059 --> 00:20:11,100
protection and versioning so for this

589
00:20:11,100 --> 00:20:13,020
one we simply want to have SCM

590
00:20:13,020 --> 00:20:15,299
implementation through GitHub so I

591
00:20:15,299 --> 00:20:16,559
realize it's not as easy for everybody

592
00:20:16,559 --> 00:20:19,320
we're a startup we're all on AWS

593
00:20:19,320 --> 00:20:21,480
everything's using GitHub I realized you

594
00:20:21,480 --> 00:20:23,039
know other companies have some Legacy

595
00:20:23,039 --> 00:20:25,799
and on-prem but for us this is a bit

596
00:20:25,799 --> 00:20:28,200
more straightforward s game using GitHub

597
00:20:28,200 --> 00:20:30,780
is a is a straightforward way to um to

598
00:20:30,780 --> 00:20:32,880
have a requirement and then material

599
00:20:32,880 --> 00:20:34,260
levels two and three again these are

600
00:20:34,260 --> 00:20:35,340
collapsed

601
00:20:35,340 --> 00:20:38,280
uh enable code scan protections uh sorry

602
00:20:38,280 --> 00:20:39,860
code scans from application hardening

603
00:20:39,860 --> 00:20:42,600
subdomain and enable Branch protection

604
00:20:42,600 --> 00:20:45,000
and the material level four this gets

605
00:20:45,000 --> 00:20:47,400
into a real shifting left all the way so

606
00:20:47,400 --> 00:20:49,260
you know looking at like an IDE or like

607
00:20:49,260 --> 00:20:51,179
a local blinter for developers those are

608
00:20:51,179 --> 00:20:53,039
the four level four levels

609
00:20:53,039 --> 00:20:55,380
so how do we do it again you know we

610
00:20:55,380 --> 00:20:57,120
look at GitHub right we so we every you

611
00:20:57,120 --> 00:20:59,039
know all our code repos or GitHub that's

612
00:20:59,039 --> 00:21:01,620
how we get to betray level one for two

613
00:21:01,620 --> 00:21:02,880
levels two and three but just talk

614
00:21:02,880 --> 00:21:04,799
through you know all the code scanning

615
00:21:04,799 --> 00:21:06,600
tools that we're utilizing as well as

616
00:21:06,600 --> 00:21:08,640
that were enabling Branch protection as

617
00:21:08,640 --> 00:21:10,440
well which our our product does so we

618
00:21:10,440 --> 00:21:12,419
feel like we've got those uh in a good

619
00:21:12,419 --> 00:21:13,740
spot

620
00:21:13,740 --> 00:21:15,480
um from maturity level four perspective

621
00:21:15,480 --> 00:21:17,160
and looking at the local development

622
00:21:17,160 --> 00:21:19,260
lending and style checks

623
00:21:19,260 --> 00:21:20,460
um we don't have anything in our product

624
00:21:20,460 --> 00:21:21,780
yet we're working on it but certainly

625
00:21:21,780 --> 00:21:23,520
there are many you know choices you have

626
00:21:23,520 --> 00:21:24,539
out there for linters that you can

627
00:21:24,539 --> 00:21:26,220
Implement and and work with your

628
00:21:26,220 --> 00:21:27,660
developers

629
00:21:27,660 --> 00:21:28,980
um you know making sure it's a tool they

630
00:21:28,980 --> 00:21:30,360
want to use

631
00:21:30,360 --> 00:21:31,620
um obviously but that's something that

632
00:21:31,620 --> 00:21:32,880
we're looking to implement with our

633
00:21:32,880 --> 00:21:34,620
without within our tool but there are

634
00:21:34,620 --> 00:21:37,320
many options out there

635
00:21:37,320 --> 00:21:39,659
all right let's um let's make sure

636
00:21:39,659 --> 00:21:41,100
there's anything else oh yeah just a

637
00:21:41,100 --> 00:21:41,820
little bit more about the branch

638
00:21:41,820 --> 00:21:43,620
protection just enabling you know a

639
00:21:43,620 --> 00:21:45,600
minimum number of checks before merging

640
00:21:45,600 --> 00:21:47,460
to Maine

641
00:21:47,460 --> 00:21:49,260
all right this next slide you know even

642
00:21:49,260 --> 00:21:52,080
more text but if you look at the the

643
00:21:52,080 --> 00:21:54,179
subdimension here infrastructure

644
00:21:54,179 --> 00:21:58,080
hardening I mean I wish that AWS and gcp

645
00:21:58,080 --> 00:22:00,179
and Azure you know didn't made it easier

646
00:22:00,179 --> 00:22:02,159
for us to harden our

647
00:22:02,159 --> 00:22:04,380
um you know our infrastructure but the

648
00:22:04,380 --> 00:22:06,299
reality is you know there's a lot of

649
00:22:06,299 --> 00:22:08,039
burden on our developer teams and our

650
00:22:08,039 --> 00:22:10,200
security teams to properly uh Harden

651
00:22:10,200 --> 00:22:12,539
infrastructure but if you look at this

652
00:22:12,539 --> 00:22:14,580
like the the different levels right so

653
00:22:14,580 --> 00:22:16,559
maturity level one it's it's pretty

654
00:22:16,559 --> 00:22:18,240
straightforward right isolated networks

655
00:22:18,240 --> 00:22:20,400
for virtual environments simple access

656
00:22:20,400 --> 00:22:23,580
control for systems uses usage of edge

657
00:22:23,580 --> 00:22:26,280
encryption and Transit at rest and then

658
00:22:26,280 --> 00:22:28,200
usage of tech production environments uh

659
00:22:28,200 --> 00:22:29,580
nothing too groundbreaking here right

660
00:22:29,580 --> 00:22:31,140
from an infrastructure hardening

661
00:22:31,140 --> 00:22:33,299
perspective level two gets into things

662
00:22:33,299 --> 00:22:36,059
like MFA applications are running in

663
00:22:36,059 --> 00:22:37,799
virtualized environments getting into

664
00:22:37,799 --> 00:22:39,539
your data backup dependency checking

665
00:22:39,539 --> 00:22:41,460
which already talked about right filter

666
00:22:41,460 --> 00:22:43,620
outgoing traffic environments hard and

667
00:22:43,620 --> 00:22:45,840
usage of security accounts encryption

668
00:22:45,840 --> 00:22:49,740
and transit for traffic right not just

669
00:22:49,740 --> 00:22:52,080
the edge and then usage of security by

670
00:22:52,080 --> 00:22:53,520
default for components and then virtual

671
00:22:53,520 --> 00:22:54,720
environments are limited so a lot for

672
00:22:54,720 --> 00:22:56,700
level two so I think TMO kind of made

673
00:22:56,700 --> 00:22:57,960
level one a little easier and level two

674
00:22:57,960 --> 00:22:59,580
is a little bit tougher and then levels

675
00:22:59,580 --> 00:23:00,780
three level four getting those kind of

676
00:23:00,780 --> 00:23:02,460
higher maturity levels you know

677
00:23:02,460 --> 00:23:04,020
immutable infrastructure right your

678
00:23:04,020 --> 00:23:05,159
environment cannot be changed what's

679
00:23:05,159 --> 00:23:07,500
once it's been deployed you know you're

680
00:23:07,500 --> 00:23:09,539
using infrastructure as code you know

681
00:23:09,539 --> 00:23:11,159
world-based authentication authorization

682
00:23:11,159 --> 00:23:13,320
and the material level four limitation

683
00:23:13,320 --> 00:23:15,000
of system calls in a virtual

684
00:23:15,000 --> 00:23:18,059
environments microservices uh from a

685
00:23:18,059 --> 00:23:19,440
microservice architecture perspective

686
00:23:19,440 --> 00:23:21,179
and then using production environments

687
00:23:21,179 --> 00:23:23,340
they're closer to your

688
00:23:23,340 --> 00:23:25,679
um your development environments and

689
00:23:25,679 --> 00:23:26,940
then of course the good old chaos monkey

690
00:23:26,940 --> 00:23:28,559
so let's look at this

691
00:23:28,559 --> 00:23:30,059
um to level one so what are the

692
00:23:30,059 --> 00:23:33,179
requirements right so isolated networks

693
00:23:33,179 --> 00:23:35,159
um for virtual environments we look at

694
00:23:35,159 --> 00:23:37,559
this hey enable vpcs we use we're all in

695
00:23:37,559 --> 00:23:40,500
on serverless with AWS so that's how we

696
00:23:40,500 --> 00:23:43,080
enable Network segmentation

697
00:23:43,080 --> 00:23:45,659
uh simple access control for systems so

698
00:23:45,659 --> 00:23:47,159
we Federate systems with Google

699
00:23:47,159 --> 00:23:49,320
authentication enable AWS accounts again

700
00:23:49,320 --> 00:23:51,659
nothing too groundbreaking here uh usage

701
00:23:51,659 --> 00:23:53,340
of edge encryption at Transit so run

702
00:23:53,340 --> 00:23:55,380
kicks on terraform cloud formation

703
00:23:55,380 --> 00:23:56,640
serverless and that's for both

704
00:23:56,640 --> 00:23:58,799
encryption so again Kix is one of those

705
00:23:58,799 --> 00:24:00,900
open source tools sorry uh if you're not

706
00:24:00,900 --> 00:24:03,120
familiar with kicks

707
00:24:03,120 --> 00:24:04,860
um and then for usage of production

708
00:24:04,860 --> 00:24:07,200
environments you know enables separate

709
00:24:07,200 --> 00:24:09,179
production environments with our cloud

710
00:24:09,179 --> 00:24:11,640
provider so for this one you know we

711
00:24:11,640 --> 00:24:13,740
utilize again AWS our serverless

712
00:24:13,740 --> 00:24:16,260
environments is what we're utilizing for

713
00:24:16,260 --> 00:24:19,380
kind of our separation uh in Virtual

714
00:24:19,380 --> 00:24:22,140
environments or you know classic vpcs

715
00:24:22,140 --> 00:24:23,880
um simple access control for systems

716
00:24:23,880 --> 00:24:26,940
again AWS uh in our in our Google

717
00:24:26,940 --> 00:24:28,559
workspace

718
00:24:28,559 --> 00:24:31,080
usage of edge encryption at Transit and

719
00:24:31,080 --> 00:24:34,080
in rest that's kicks again open source

720
00:24:34,080 --> 00:24:36,000
tool and then usage of test and

721
00:24:36,000 --> 00:24:38,340
production environments again AWS so

722
00:24:38,340 --> 00:24:39,480
just to give you an idea of how we've

723
00:24:39,480 --> 00:24:40,679
kind of gone through the maturity levels

724
00:24:40,679 --> 00:24:42,659
and then we run kicks again within our

725
00:24:42,659 --> 00:24:44,580
our tool to scan our full environment

726
00:24:44,580 --> 00:24:47,280
and our infrastructure

727
00:24:47,280 --> 00:24:50,700
uh again level two uh as is a bit more

728
00:24:50,700 --> 00:24:53,400
rigorous in terms of the um you know the

729
00:24:53,400 --> 00:24:55,740
number of requirements uh or that I

730
00:24:55,740 --> 00:24:57,419
should say that the number of

731
00:24:57,419 --> 00:25:00,299
um of of maturity level

732
00:25:00,299 --> 00:25:01,980
um statements looking at the

733
00:25:01,980 --> 00:25:04,559
requirements for MFA right enable MFA on

734
00:25:04,559 --> 00:25:07,260
AWS uh and GitHub applications are

735
00:25:07,260 --> 00:25:08,400
running in virtualized environments

736
00:25:08,400 --> 00:25:10,640
enable vpcs and serverless functions

737
00:25:10,640 --> 00:25:13,080
data backup enable infrastructure

738
00:25:13,080 --> 00:25:15,480
database backup so we use dynamodb so

739
00:25:15,480 --> 00:25:16,500
making sure we've got appropriate

740
00:25:16,500 --> 00:25:18,960
database backups running dependency

741
00:25:18,960 --> 00:25:20,880
checking right we already talked about

742
00:25:20,880 --> 00:25:22,200
this getting code dependencies for

743
00:25:22,200 --> 00:25:24,480
vulnerabilities filter outgoing traffic

744
00:25:24,480 --> 00:25:26,279
enable security groups with traffic

745
00:25:26,279 --> 00:25:29,340
filtering and then you know make sure

746
00:25:29,340 --> 00:25:31,440
the environment is hardened we want to

747
00:25:31,440 --> 00:25:33,840
kicks out all our infrastructure as code

748
00:25:33,840 --> 00:25:35,880
uh usage of Security account let's

749
00:25:35,880 --> 00:25:37,760
disable the infrastructure root account

750
00:25:37,760 --> 00:25:39,960
and then encryption and transit for

751
00:25:39,960 --> 00:25:43,020
internal traffic and the same thing for

752
00:25:43,020 --> 00:25:44,400
um the security by default or again

753
00:25:44,400 --> 00:25:46,559
we're running kicks that's also for the

754
00:25:46,559 --> 00:25:47,820
virtual environment kicks will help us

755
00:25:47,820 --> 00:25:49,260
there as well

756
00:25:49,260 --> 00:25:50,700
um so again just kind of showing how we

757
00:25:50,700 --> 00:25:52,380
map to different tools and technology

758
00:25:52,380 --> 00:25:55,080
for MFA we have our own custom checks

759
00:25:55,080 --> 00:25:58,919
within jit that we run for AWS

760
00:25:58,919 --> 00:26:00,960
um you know we utilize AWS to make sure

761
00:26:00,960 --> 00:26:01,980
that we have the appropriate

762
00:26:01,980 --> 00:26:03,840
applications running in virtualized

763
00:26:03,840 --> 00:26:05,460
environments so serverless is what we

764
00:26:05,460 --> 00:26:07,860
use and for our data backups again a

765
00:26:07,860 --> 00:26:10,080
loss dependency check for dependency

766
00:26:10,080 --> 00:26:12,059
checking uh we talked about some of the

767
00:26:12,059 --> 00:26:14,400
other tools as well uh filter outgoing

768
00:26:14,400 --> 00:26:16,140
traffic AWS and then kicks for the rest

769
00:26:16,140 --> 00:26:17,940
of it right so okay we feel pretty good

770
00:26:17,940 --> 00:26:20,760
about getting the maturity level two uh

771
00:26:20,760 --> 00:26:22,380
three gets it in a bit more and this is

772
00:26:22,380 --> 00:26:24,360
just showing again within our tool kind

773
00:26:24,360 --> 00:26:26,880
of what we run material level three and

774
00:26:26,880 --> 00:26:28,980
four for the requirements so for a

775
00:26:28,980 --> 00:26:31,140
mutable infrastructure uh Implement

776
00:26:31,140 --> 00:26:33,539
serverless functions like AWS Lambda do

777
00:26:33,539 --> 00:26:35,460
not allow it changes post deployment

778
00:26:35,460 --> 00:26:37,500
that's how that's how we've done it for

779
00:26:37,500 --> 00:26:39,240
infrastructure is codes we manage the

780
00:26:39,240 --> 00:26:40,559
provision environment through code over

781
00:26:40,559 --> 00:26:42,659
tools wherever we can and then for

782
00:26:42,659 --> 00:26:44,220
role-based authentication authorization

783
00:26:44,220 --> 00:26:45,900
design and deploy roles aligned with job

784
00:26:45,900 --> 00:26:48,240
functions that's the third level and

785
00:26:48,240 --> 00:26:50,460
then for four the fourth level uh

786
00:26:50,460 --> 00:26:51,960
limitation of system calls and virtual

787
00:26:51,960 --> 00:26:53,340
environments again our serverless

788
00:26:53,340 --> 00:26:56,179
functions deployed with least privilege

789
00:26:56,179 --> 00:26:58,620
microsurface architecture uh this is

790
00:26:58,620 --> 00:27:00,480
where we we use serverless architecture

791
00:27:00,480 --> 00:27:03,299
with step functions within AWS and the

792
00:27:03,299 --> 00:27:05,159
production your environments are used by

793
00:27:05,159 --> 00:27:06,900
developers Dev test environments are

794
00:27:06,900 --> 00:27:09,000
live with prods Look to You know keep

795
00:27:09,000 --> 00:27:10,500
those environments as close as possible

796
00:27:10,500 --> 00:27:12,720
and then use the usage of the good

797
00:27:12,720 --> 00:27:14,100
old-fashioned chaos monkey right mini

798
00:27:14,100 --> 00:27:15,779
cast monkey

799
00:27:15,779 --> 00:27:17,760
um applications out there tools out

800
00:27:17,760 --> 00:27:18,659
there

801
00:27:18,659 --> 00:27:21,480
so just you know quickly uh again AWS

802
00:27:21,480 --> 00:27:23,400
and AWS for the first two levels and

803
00:27:23,400 --> 00:27:25,380
then we actually use uh another open

804
00:27:25,380 --> 00:27:28,020
source tool air IAM for our world-based

805
00:27:28,020 --> 00:27:30,000
authentication and authorization

806
00:27:30,000 --> 00:27:31,080
um and it's actually you could run that

807
00:27:31,080 --> 00:27:32,820
within our tool as well

808
00:27:32,820 --> 00:27:35,760
and then for material level four

809
00:27:35,760 --> 00:27:36,779
um you know we don't have anything with

810
00:27:36,779 --> 00:27:38,580
the dark tool but again I talked about

811
00:27:38,580 --> 00:27:40,860
the AWS configuration that we put in

812
00:27:40,860 --> 00:27:42,419
place to help us achieve these different

813
00:27:42,419 --> 00:27:44,700
levels and then utilizing a you know

814
00:27:44,700 --> 00:27:46,559
again a chaos monkey tool out there

815
00:27:46,559 --> 00:27:48,659
could be helpful

816
00:27:48,659 --> 00:27:50,400
so that's infrastructure Harding that

817
00:27:50,400 --> 00:27:51,840
was a lot I realized hopefully that was

818
00:27:51,840 --> 00:27:53,159
helpful to get you guys an idea and kind

819
00:27:53,159 --> 00:27:55,020
of run through all the requirements for

820
00:27:55,020 --> 00:27:56,340
that

821
00:27:56,340 --> 00:27:57,360
um up next we're gonna get into

822
00:27:57,360 --> 00:28:00,600
application texting so again some of the

823
00:28:00,600 --> 00:28:02,880
levels are collapsed so jump right to

824
00:28:02,880 --> 00:28:04,740
material Level Two

825
00:28:04,740 --> 00:28:06,900
um security unit test for important uh

826
00:28:06,900 --> 00:28:08,940
important components so let's run code

827
00:28:08,940 --> 00:28:11,840
scans at all the repos uh and let's run

828
00:28:11,840 --> 00:28:15,000
infrastructure scans across production

829
00:28:15,000 --> 00:28:17,760
uh matric level three is a security

830
00:28:17,760 --> 00:28:19,260
integration test for important

831
00:28:19,260 --> 00:28:21,720
components so penetration testing a web

832
00:28:21,720 --> 00:28:23,880
application scanning and then material

833
00:28:23,880 --> 00:28:25,620
level four is High coverage of security

834
00:28:25,620 --> 00:28:27,480
related module integration like spoke

835
00:28:27,480 --> 00:28:29,340
testing so this gets in like smoke

836
00:28:29,340 --> 00:28:30,840
testing for stability and functional

837
00:28:30,840 --> 00:28:32,159
testing integrated into a development

838
00:28:32,159 --> 00:28:34,380
processes

839
00:28:34,380 --> 00:28:36,480
um so how do we do it so for the for the

840
00:28:36,480 --> 00:28:37,260
second

841
00:28:37,260 --> 00:28:39,480
um again jumping like level two our

842
00:28:39,480 --> 00:28:41,400
security unit tests uh for reported

843
00:28:41,400 --> 00:28:43,679
components scan all our code repulsive

844
00:28:43,679 --> 00:28:44,880
vulnerabilities we just we talked about

845
00:28:44,880 --> 00:28:46,740
that right so a lot of these different

846
00:28:46,740 --> 00:28:48,120
levels and maturity levels there's

847
00:28:48,120 --> 00:28:50,580
overlap so you know we're running all of

848
00:28:50,580 --> 00:28:52,260
those different code scans within our

849
00:28:52,260 --> 00:28:54,059
our environment and the security

850
00:28:54,059 --> 00:28:55,740
integration test for important

851
00:28:55,740 --> 00:28:58,140
components this is icon is for Cobalt

852
00:28:58,140 --> 00:29:00,779
you know we like Cobalt they um

853
00:29:00,779 --> 00:29:02,520
um they're not open source but it's more

854
00:29:02,520 --> 00:29:04,799
it's a pen tested Community uh and

855
00:29:04,799 --> 00:29:06,960
they've got a platform it's it's much

856
00:29:06,960 --> 00:29:09,179
getting away from the traditional uh

857
00:29:09,179 --> 00:29:12,120
penetration testing uh approaches

858
00:29:12,120 --> 00:29:14,100
um so we utilize them for pen testing

859
00:29:14,100 --> 00:29:16,140
and then using selenium scripts for like

860
00:29:16,140 --> 00:29:18,419
some of our smoke tests right what we

861
00:29:18,419 --> 00:29:20,760
utilize that so those that's the uh

862
00:29:20,760 --> 00:29:22,620
those are some examples some of the

863
00:29:22,620 --> 00:29:24,240
tools and Technology we've used for

864
00:29:24,240 --> 00:29:26,399
maturity level across the board for

865
00:29:26,399 --> 00:29:29,178
application testing

866
00:29:30,480 --> 00:29:32,100
all right so the next one is

867
00:29:32,100 --> 00:29:33,480
consolidation

868
00:29:33,480 --> 00:29:34,919
and I think I really like this one

869
00:29:34,919 --> 00:29:36,539
because you know it's consolidation it's

870
00:29:36,539 --> 00:29:38,100
bringing it all together

871
00:29:38,100 --> 00:29:40,440
and if you look at this one you know for

872
00:29:40,440 --> 00:29:42,539
maturity level one definition of quality

873
00:29:42,539 --> 00:29:44,580
Gates you know simple false positive

874
00:29:44,580 --> 00:29:45,840
treatment treatment of defects of

875
00:29:45,840 --> 00:29:47,760
severity high or higher

876
00:29:47,760 --> 00:29:49,200
so for the requirements for this

877
00:29:49,200 --> 00:29:50,760
implementing the force code

878
00:29:50,760 --> 00:29:52,320
infrastructure pipeline third-party

879
00:29:52,320 --> 00:29:54,120
scans for each pull request right

880
00:29:54,120 --> 00:29:56,580
quality gates for each pull request uh

881
00:29:56,580 --> 00:29:57,779
Implement Branch protection require

882
00:29:57,779 --> 00:29:59,760
approvals prior to the to each pull

883
00:29:59,760 --> 00:30:02,340
request merge uh false positive you know

884
00:30:02,340 --> 00:30:04,919
establish a a process to review false

885
00:30:04,919 --> 00:30:06,539
positive and then triage of all the

886
00:30:06,539 --> 00:30:07,500
highs

887
00:30:07,500 --> 00:30:10,140
uh for retreat level two is simple

888
00:30:10,140 --> 00:30:12,659
visualization of defects so let's get a

889
00:30:12,659 --> 00:30:13,860
dashboard a reporting of our

890
00:30:13,860 --> 00:30:15,720
vulnerabilities in our backlog and our

891
00:30:15,720 --> 00:30:17,940
vulnerabilities per PR right just get

892
00:30:17,940 --> 00:30:19,559
some dashboarding going

893
00:30:19,559 --> 00:30:21,840
and then from maturity level three this

894
00:30:21,840 --> 00:30:23,220
gets into integration of vulnerability

895
00:30:23,220 --> 00:30:25,380
issues into the development process

896
00:30:25,380 --> 00:30:28,200
treatment of defects with moderate uh

897
00:30:28,200 --> 00:30:29,880
severity so not just Highs but the

898
00:30:29,880 --> 00:30:31,799
moderates now and then usage of a

899
00:30:31,799 --> 00:30:34,080
vulnerability management system so for

900
00:30:34,080 --> 00:30:36,120
this one you know automated scans code

901
00:30:36,120 --> 00:30:37,559
scans are running and Reporting and pull

902
00:30:37,559 --> 00:30:40,140
request comments uh triage of all the

903
00:30:40,140 --> 00:30:41,820
moderates and the highs and then

904
00:30:41,820 --> 00:30:43,320
tracking managing and Reporting on

905
00:30:43,320 --> 00:30:44,520
vulnerabilities

906
00:30:44,520 --> 00:30:46,559
and then mature level four Advanced

907
00:30:46,559 --> 00:30:49,260
visualization of defects reproducible

908
00:30:49,260 --> 00:30:50,460
defect tickets the treatment of all

909
00:30:50,460 --> 00:30:52,080
defects so this is you get into some

910
00:30:52,080 --> 00:30:53,760
detailed vulnerability metrics with some

911
00:30:53,760 --> 00:30:55,860
of your root causes and then triage of

912
00:30:55,860 --> 00:30:57,179
everything right the lows moderates and

913
00:30:57,179 --> 00:30:59,480
highs

914
00:31:00,299 --> 00:31:02,039
all right so just a quick I got a quick

915
00:31:02,039 --> 00:31:05,100
mapping and I'm you know uh for the

916
00:31:05,100 --> 00:31:06,899
first two levels you'll be uh actually

917
00:31:06,899 --> 00:31:08,940
the first three levels we utilize within

918
00:31:08,940 --> 00:31:11,220
our our tool I talked about all the

919
00:31:11,220 --> 00:31:13,020
different open source tools that we're

920
00:31:13,020 --> 00:31:14,340
utilizing

921
00:31:14,340 --> 00:31:16,500
um so that's you know in terms of code

922
00:31:16,500 --> 00:31:18,539
scanning infrastructure scanning so we

923
00:31:18,539 --> 00:31:19,980
utilize our own platform with all those

924
00:31:19,980 --> 00:31:22,080
open source tools that I talked about

925
00:31:22,080 --> 00:31:23,640
and we're working on retreated level

926
00:31:23,640 --> 00:31:25,140
four

927
00:31:25,140 --> 00:31:26,520
um you know not quite there yet but

928
00:31:26,520 --> 00:31:28,679
we're getting there and then

929
00:31:28,679 --> 00:31:30,539
you know one of the things too is

930
00:31:30,539 --> 00:31:32,100
important from a developer perspective

931
00:31:32,100 --> 00:31:34,620
is like within GitHub something that we

932
00:31:34,620 --> 00:31:37,260
do within our platform is that we are we

933
00:31:37,260 --> 00:31:39,419
actually run within your uh within your

934
00:31:39,419 --> 00:31:41,399
GitHub comments you'll see that you're

935
00:31:41,399 --> 00:31:43,200
you know we're running we detected these

936
00:31:43,200 --> 00:31:45,240
code vulnerabilities you can see it

937
00:31:45,240 --> 00:31:47,100
right there is running in a bot and then

938
00:31:47,100 --> 00:31:49,440
you can actually um interact and either

939
00:31:49,440 --> 00:31:53,700
accept uh or ignore or fix the

940
00:31:53,700 --> 00:31:55,679
vulnerabilities and that's a really

941
00:31:55,679 --> 00:31:57,120
important piece that we feel like it's

942
00:31:57,120 --> 00:31:58,440
part of those quality Gates and then

943
00:31:58,440 --> 00:31:59,760
working directly with the developers

944
00:31:59,760 --> 00:32:02,039
just again how we do it

945
00:32:02,039 --> 00:32:04,200
um automated pull request comments

946
00:32:04,200 --> 00:32:06,779
all right so now I got a couple a couple

947
00:32:06,779 --> 00:32:10,620
more uh sub Dimensions to walk through

948
00:32:10,620 --> 00:32:12,899
um and this gets into Dynamic and static

949
00:32:12,899 --> 00:32:14,039
depth for applications for

950
00:32:14,039 --> 00:32:15,600
infrastructure this be a bit more

951
00:32:15,600 --> 00:32:17,460
straightforward because again we look at

952
00:32:17,460 --> 00:32:19,260
the tools right which tools we're going

953
00:32:19,260 --> 00:32:21,840
to use so mature level one is just a

954
00:32:21,840 --> 00:32:23,399
simple scan I think Timo made it kind of

955
00:32:23,399 --> 00:32:25,860
easy for us but material Level Two is

956
00:32:25,860 --> 00:32:27,419
coverage of client-side dynamic

957
00:32:27,419 --> 00:32:29,159
components and usage of different roles

958
00:32:29,159 --> 00:32:31,260
level three is coverage of hidden

959
00:32:31,260 --> 00:32:34,020
endpoints uh more uh more input vectors

960
00:32:34,020 --> 00:32:36,000
sequential operations the usage of

961
00:32:36,000 --> 00:32:38,399
multiple scanners and then level four is

962
00:32:38,399 --> 00:32:39,960
coverage analysis and the coverage of

963
00:32:39,960 --> 00:32:42,299
service to service communication so for

964
00:32:42,299 --> 00:32:44,820
for us we looked at oauth Zap for really

965
00:32:44,820 --> 00:32:47,640
all of these areas right and running our

966
00:32:47,640 --> 00:32:49,799
Dynamic scans you know for our

967
00:32:49,799 --> 00:32:52,260
application so running a web application

968
00:32:52,260 --> 00:32:53,760
Scanner we run it through our own

969
00:32:53,760 --> 00:32:55,320
platform but of course oauth zap's been

970
00:32:55,320 --> 00:32:56,940
around for quite a long time it's going

971
00:32:56,940 --> 00:32:58,080
to help us cover all these different

972
00:32:58,080 --> 00:32:59,640
maturity levels you know when it's

973
00:32:59,640 --> 00:33:02,419
implemented appropriately

974
00:33:02,820 --> 00:33:05,640
and without it without authentication as

975
00:33:05,640 --> 00:33:06,659
well

976
00:33:06,659 --> 00:33:09,240
uh looking at the dynamic depth for

977
00:33:09,240 --> 00:33:11,220
infrastructure so for this I haven't

978
00:33:11,220 --> 00:33:12,779
talked about Prowler yet so this is the

979
00:33:12,779 --> 00:33:14,880
first time introducing the open source

980
00:33:14,880 --> 00:33:17,399
Prowler tool but again Prowler is the

981
00:33:17,399 --> 00:33:18,960
tool that is going to utilize if we're

982
00:33:18,960 --> 00:33:20,039
going to utilize across the board power

983
00:33:20,039 --> 00:33:22,380
is great because you know it is uh you

984
00:33:22,380 --> 00:33:26,220
know dynamic uh infrastructure uh you

985
00:33:26,220 --> 00:33:27,539
know running your infrastructure in

986
00:33:27,539 --> 00:33:28,620
runtime

987
00:33:28,620 --> 00:33:31,320
and there's over 250 checks out there

988
00:33:31,320 --> 00:33:33,600
the prowler provides it's aligned with

989
00:33:33,600 --> 00:33:35,700
different uh leading practice

990
00:33:35,700 --> 00:33:37,200
um you know compliance Frameworks like

991
00:33:37,200 --> 00:33:40,799
ISO and gdpr so you know looking at the

992
00:33:40,799 --> 00:33:43,019
different levels to expose Services test

993
00:33:43,019 --> 00:33:45,480
for Network segmentation test the

994
00:33:45,480 --> 00:33:47,279
configuration of cloud environments and

995
00:33:47,279 --> 00:33:48,960
then for a weak password test and then

996
00:33:48,960 --> 00:33:50,700
for our load tests and for unused

997
00:33:50,700 --> 00:33:52,320
resources probably is going to help us

998
00:33:52,320 --> 00:33:54,360
across the board for those

999
00:33:54,360 --> 00:33:56,399
and then we also here I am I talked a

1000
00:33:56,399 --> 00:33:58,320
bit about that open source tool that was

1001
00:33:58,320 --> 00:34:00,480
going to check for unused resources

1002
00:34:00,480 --> 00:34:02,220
so we like the fact that it probably is

1003
00:34:02,220 --> 00:34:04,019
going to help us across the board for

1004
00:34:04,019 --> 00:34:07,460
our Dynamic depth of infrastructure

1005
00:34:07,740 --> 00:34:10,139
and then static depth for applications I

1006
00:34:10,139 --> 00:34:12,239
think you're seeing some some uh you

1007
00:34:12,239 --> 00:34:15,239
know uh some common things here where

1008
00:34:15,239 --> 00:34:17,219
you know all the code scans we ran right

1009
00:34:17,219 --> 00:34:21,418
uh from Bandit gosec and sem grep right

1010
00:34:21,418 --> 00:34:22,980
it's going to help us across the board

1011
00:34:22,980 --> 00:34:26,520
from a static depth for for applications

1012
00:34:26,520 --> 00:34:28,918
um so we we scan code repos for all

1013
00:34:28,918 --> 00:34:31,260
vulnerabilities utilizing these tools

1014
00:34:31,260 --> 00:34:33,179
and it helps us with the first level you

1015
00:34:33,179 --> 00:34:34,679
know system server-side components with

1016
00:34:34,679 --> 00:34:36,599
known vulnerabilities uh local

1017
00:34:36,599 --> 00:34:38,820
development Security checks stack

1018
00:34:38,820 --> 00:34:40,080
analysis for important server-side

1019
00:34:40,080 --> 00:34:41,580
components

1020
00:34:41,580 --> 00:34:42,899
um and on the material level three of

1021
00:34:42,899 --> 00:34:45,540
maturity level four uh down to four gets

1022
00:34:45,540 --> 00:34:46,800
into more of those dependency checking

1023
00:34:46,800 --> 00:34:48,659
which is why we're showing Nancy and and

1024
00:34:48,659 --> 00:34:51,300
oauth's dependency check so again using

1025
00:34:51,300 --> 00:34:52,859
tools across each one of these levels

1026
00:34:52,859 --> 00:34:55,199
helps us to detect these vulnerabilities

1027
00:34:55,199 --> 00:34:57,060
and it helps us to get to these maturity

1028
00:34:57,060 --> 00:35:01,380
levels uh you know right out of the box

1029
00:35:01,380 --> 00:35:04,020
and then from a test and verification

1030
00:35:04,020 --> 00:35:06,839
perspective uh and looking at static

1031
00:35:06,839 --> 00:35:09,480
depth for infrastructure stored Secrets

1032
00:35:09,480 --> 00:35:11,520
again git leaks is what we're utilizing

1033
00:35:11,520 --> 00:35:14,880
and then for uh kicks again is a is it

1034
00:35:14,880 --> 00:35:17,040
infrastructure as code

1035
00:35:17,040 --> 00:35:19,500
um uh and checking our our Cloud

1036
00:35:19,500 --> 00:35:22,500
configuration uh we utilize kicks for

1037
00:35:22,500 --> 00:35:24,839
both material level three two three and

1038
00:35:24,839 --> 00:35:26,160
four so without reading the slides you

1039
00:35:26,160 --> 00:35:27,599
can see right away we're utilizing these

1040
00:35:27,599 --> 00:35:29,099
tools that we've mapped to these

1041
00:35:29,099 --> 00:35:30,119
different maturity levels and then of

1042
00:35:30,119 --> 00:35:33,320
course we run it within our platform

1043
00:35:35,700 --> 00:35:37,740
all right so

1044
00:35:37,740 --> 00:35:39,180
um I'm gonna kind of wrap up wrap up

1045
00:35:39,180 --> 00:35:40,440
here hopefully this has been helpful to

1046
00:35:40,440 --> 00:35:42,240
give you guys an idea of it could be a

1047
00:35:42,240 --> 00:35:44,040
bit daunting right taking on these

1048
00:35:44,040 --> 00:35:46,320
different uh these different uh security

1049
00:35:46,320 --> 00:35:48,060
maturity models so like where do we

1050
00:35:48,060 --> 00:35:51,119
start and you know a jit is an open

1051
00:35:51,119 --> 00:35:53,160
source you're really valuing the open

1052
00:35:53,160 --> 00:35:55,079
source Community open source tools and

1053
00:35:55,079 --> 00:35:57,060
filling you know knowing it's the future

1054
00:35:57,060 --> 00:36:00,420
of infosec and cyber security uh you

1055
00:36:00,420 --> 00:36:01,980
know we're utilizing these open source

1056
00:36:01,980 --> 00:36:03,660
tools wherever we can it's a it's a

1057
00:36:03,660 --> 00:36:06,240
great way to get started and show how

1058
00:36:06,240 --> 00:36:07,560
you can enable these different maturity

1059
00:36:07,560 --> 00:36:11,220
levels uh for dsam so you know just a

1060
00:36:11,220 --> 00:36:13,619
quick show of our of our of our tool

1061
00:36:13,619 --> 00:36:15,540
like we we have you can create a

1062
00:36:15,540 --> 00:36:17,040
customized plan so you can go through

1063
00:36:17,040 --> 00:36:19,260
you'll go to gyp.io I encourage you just

1064
00:36:19,260 --> 00:36:20,520
take a look

1065
00:36:20,520 --> 00:36:22,619
um you can see right away you can do

1066
00:36:22,619 --> 00:36:24,240
your scan code vulnerabilities scan

1067
00:36:24,240 --> 00:36:26,640
codependencies skate code follow code of

1068
00:36:26,640 --> 00:36:28,920
Secrets infrastructure security as well

1069
00:36:28,920 --> 00:36:30,780
and that's looking at your uh your

1070
00:36:30,780 --> 00:36:32,520
third-party app so you could you could

1071
00:36:32,520 --> 00:36:34,440
run all these tools that I talked about

1072
00:36:34,440 --> 00:36:36,780
independently the challenges that you

1073
00:36:36,780 --> 00:36:38,040
have all these different results in

1074
00:36:38,040 --> 00:36:39,900
these different tools we'll aggregate

1075
00:36:39,900 --> 00:36:41,579
those for you and consolidate those

1076
00:36:41,579 --> 00:36:43,440
results for you

1077
00:36:43,440 --> 00:36:45,240
and I talked a bit about the pr comments

1078
00:36:45,240 --> 00:36:46,560
but this is just really important from a

1079
00:36:46,560 --> 00:36:49,619
developer owning perspective it's not

1080
00:36:49,619 --> 00:36:50,820
just your security team that's running

1081
00:36:50,820 --> 00:36:52,200
the scans and like telling the

1082
00:36:52,200 --> 00:36:53,460
developers hear what the problems are

1083
00:36:53,460 --> 00:36:55,260
you want your developers to see it real

1084
00:36:55,260 --> 00:36:56,820
time so they can go through and

1085
00:36:56,820 --> 00:36:58,079
understand what the vulnerabilities are

1086
00:36:58,079 --> 00:37:00,480
so having that Dev native experience is

1087
00:37:00,480 --> 00:37:01,560
really important and something that we

1088
00:37:01,560 --> 00:37:03,060
provide as part of our platform so

1089
00:37:03,060 --> 00:37:06,440
encourage you to take a look

1090
00:37:07,020 --> 00:37:08,820
and then also I think what's really

1091
00:37:08,820 --> 00:37:11,280
important too is you know uh you know

1092
00:37:11,280 --> 00:37:13,680
I'm quick to say hey let's utilize tools

1093
00:37:13,680 --> 00:37:14,880
to help us get to different you know

1094
00:37:14,880 --> 00:37:16,980
higher maturity levels help us Fast

1095
00:37:16,980 --> 00:37:19,040
Track our security program

1096
00:37:19,040 --> 00:37:21,420
at the same time when you run all these

1097
00:37:21,420 --> 00:37:23,640
different tools you're going to get a

1098
00:37:23,640 --> 00:37:25,380
ton of results right you're gonna have

1099
00:37:25,380 --> 00:37:29,099
to do a lot of false positive triage I

1100
00:37:29,099 --> 00:37:30,300
mean that is just the reality of running

1101
00:37:30,300 --> 00:37:33,240
these security tools and depending on

1102
00:37:33,240 --> 00:37:35,220
how large a security team is in your

1103
00:37:35,220 --> 00:37:37,380
organization is you know I was like wow

1104
00:37:37,380 --> 00:37:39,119
that's a lot to take on

1105
00:37:39,119 --> 00:37:41,099
um it can be a lot to take on so how do

1106
00:37:41,099 --> 00:37:42,540
you prioritize one of the things we've

1107
00:37:42,540 --> 00:37:45,119
done is this per each pull request right

1108
00:37:45,119 --> 00:37:46,800
is you're getting ready to merge you

1109
00:37:46,800 --> 00:37:51,119
know a a a a branch into Main

1110
00:37:51,119 --> 00:37:54,420
let's run these checks each time so you

1111
00:37:54,420 --> 00:37:55,800
can prioritize so something that we've

1112
00:37:55,800 --> 00:37:57,599
done you know I don't I don't know if

1113
00:37:57,599 --> 00:38:00,180
it's a new revolutionary concept but

1114
00:38:00,180 --> 00:38:01,859
it's important to see it so something

1115
00:38:01,859 --> 00:38:03,839
that we provide you can take a look to

1116
00:38:03,839 --> 00:38:05,760
see how many PRS are actually monitored

1117
00:38:05,760 --> 00:38:07,859
how many have opened you know are have

1118
00:38:07,859 --> 00:38:09,240
open security findings maybe they're

1119
00:38:09,240 --> 00:38:10,859
being blocked right now and then how

1120
00:38:10,859 --> 00:38:12,420
many have been fixed as well as you can

1121
00:38:12,420 --> 00:38:14,220
you can see that as well but it really

1122
00:38:14,220 --> 00:38:16,619
helps if your backlog is getting you

1123
00:38:16,619 --> 00:38:18,359
know just too big

1124
00:38:18,359 --> 00:38:20,339
um you could look per each pull request

1125
00:38:20,339 --> 00:38:22,680
and that can be a more efficient way to

1126
00:38:22,680 --> 00:38:25,500
say hey can I let this this um you know

1127
00:38:25,500 --> 00:38:27,780
this new code release go out the door or

1128
00:38:27,780 --> 00:38:30,000
do I need to hold on a second we need to

1129
00:38:30,000 --> 00:38:31,320
fix these vulnerabilities there's this

1130
00:38:31,320 --> 00:38:34,700
major issue here that we need to take on

1131
00:38:36,240 --> 00:38:38,160
all right well that that brings us to

1132
00:38:38,160 --> 00:38:40,140
the end of the talk uh I hope this is

1133
00:38:40,140 --> 00:38:42,119
helpful uh for the group to really

1134
00:38:42,119 --> 00:38:43,560
understand you know the different

1135
00:38:43,560 --> 00:38:46,380
security maturity levels

1136
00:38:46,380 --> 00:38:47,880
um the different you know um different

1137
00:38:47,880 --> 00:38:50,040
Frameworks out there how we're thinking

1138
00:38:50,040 --> 00:38:51,839
about it and jit is a startup I realize

1139
00:38:51,839 --> 00:38:53,339
everyone has a different technology

1140
00:38:53,339 --> 00:38:55,740
stack and everything's gonna fit one for

1141
00:38:55,740 --> 00:38:57,960
one uh you know we are quite maybe we're

1142
00:38:57,960 --> 00:38:59,700
lucky as a startup that we have

1143
00:38:59,700 --> 00:39:01,800
everything within AWS with within GitHub

1144
00:39:01,800 --> 00:39:04,619
uh is the starting point for a lot of

1145
00:39:04,619 --> 00:39:06,839
these controls and implementations but I

1146
00:39:06,839 --> 00:39:08,760
think regardless this could be helpful

1147
00:39:08,760 --> 00:39:10,560
for everybody so you know I encourage

1148
00:39:10,560 --> 00:39:12,000
you take a look at our site would love

1149
00:39:12,000 --> 00:39:13,920
for you guys to take a look at our site

1150
00:39:13,920 --> 00:39:14,940
um I would love to hear your feedback

1151
00:39:14,940 --> 00:39:16,380
too please reach out to me Chris at

1152
00:39:16,380 --> 00:39:18,839
jit.io uh but again really appreciate

1153
00:39:18,839 --> 00:39:20,700
the opportunity to talk with everybody

1154
00:39:20,700 --> 00:39:22,859
happily answer any questions that the

1155
00:39:22,859 --> 00:39:25,920
the group has around security maturity

1156
00:39:25,920 --> 00:39:28,680
uh levels uh you know about how we went

1157
00:39:28,680 --> 00:39:31,140
about going doing this at jit any other

1158
00:39:31,140 --> 00:39:32,220
questions out there but thanks everybody

1159
00:39:32,220 --> 00:39:34,440
for your time

1160
00:39:34,440 --> 00:39:37,440
foreign

