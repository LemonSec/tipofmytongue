1
00:00:06,899 --> 00:00:09,080
foreign

2
00:00:54,500 --> 00:00:58,020
so what I'm going to talk about is this

3
00:00:58,020 --> 00:00:59,780
is actually several things at once

4
00:00:59,780 --> 00:01:03,359
automating and security tests and Docker

5
00:01:03,359 --> 00:01:05,700
and development as part of it so I'll

6
00:01:05,700 --> 00:01:08,100
try to stitch them all together this

7
00:01:08,100 --> 00:01:11,240
talk is intended to be very introductory

8
00:01:11,240 --> 00:01:13,680
it's intended to arm you with enough

9
00:01:13,680 --> 00:01:16,159
information to get started on your own

10
00:01:16,159 --> 00:01:18,659
learning or if you know a little bit of

11
00:01:18,659 --> 00:01:20,880
Docker open your mind to the

12
00:01:20,880 --> 00:01:23,880
possibilities of using it or if you're

13
00:01:23,880 --> 00:01:25,619
in a larger organization

14
00:01:25,619 --> 00:01:28,619
know who to talk to in the um in the

15
00:01:28,619 --> 00:01:30,659
development organization to start to

16
00:01:30,659 --> 00:01:33,119
involve security uh in in a really

17
00:01:33,119 --> 00:01:35,640
lightweight way uh rather than running

18
00:01:35,640 --> 00:01:37,320
really big tools Docker lets us run

19
00:01:37,320 --> 00:01:40,020
really small tools so that's what I'm

20
00:01:40,020 --> 00:01:42,439
here for

21
00:01:43,619 --> 00:01:45,420
here's where I came from

22
00:01:45,420 --> 00:01:48,780
I've been doing operations forever uh

23
00:01:48,780 --> 00:01:50,460
like I know how to terminate a scuzzy

24
00:01:50,460 --> 00:01:52,939
bus and stuff

25
00:01:52,939 --> 00:01:56,479
and I've been doing

26
00:01:56,659 --> 00:02:00,240
apparently some other people do too

27
00:02:00,240 --> 00:02:02,240
yeah

28
00:02:03,060 --> 00:02:05,399
um been doing cyber security uh well

29
00:02:05,399 --> 00:02:07,560
just incidentally for a long time but

30
00:02:07,560 --> 00:02:10,440
it's only been my job for the last three

31
00:02:10,440 --> 00:02:11,400
years

32
00:02:11,400 --> 00:02:12,420
um

33
00:02:12,420 --> 00:02:13,980
I'm working for a company called whiz

34
00:02:13,980 --> 00:02:16,560
right now doing Cloud security

35
00:02:16,560 --> 00:02:19,680
uh before that I was at uh Palo Alto

36
00:02:19,680 --> 00:02:21,540
networks where I was the web application

37
00:02:21,540 --> 00:02:24,900
protection specialist uh before that was

38
00:02:24,900 --> 00:02:27,420
Puppet Labs so I love automating things

39
00:02:27,420 --> 00:02:30,239
I think I welcome the robot apocalypse

40
00:02:30,239 --> 00:02:33,840
and um PlayStation I'm in the credits of

41
00:02:33,840 --> 00:02:36,840
over 20 video games it's really fun so

42
00:02:36,840 --> 00:02:38,280
when I beat the final boss I actually

43
00:02:38,280 --> 00:02:41,120
watched the credits

44
00:02:41,280 --> 00:02:42,720
okay

45
00:02:42,720 --> 00:02:45,660
so here's why I'm here and here's

46
00:02:45,660 --> 00:02:47,099
hopefully why you're here or here's

47
00:02:47,099 --> 00:02:50,660
where you're going to get dragged is

48
00:02:50,660 --> 00:02:54,000
bothering to do this stuff is is really

49
00:02:54,000 --> 00:02:56,340
interesting to use attackers tools

50
00:02:56,340 --> 00:02:58,620
they're using this stuff you might as

51
00:02:58,620 --> 00:03:02,519
well use it no reason to to not borrow

52
00:03:02,519 --> 00:03:06,019
tools from the attackers

53
00:03:06,019 --> 00:03:08,400
doing it testing this stuff in

54
00:03:08,400 --> 00:03:10,800
development of course is an ounce of

55
00:03:10,800 --> 00:03:12,659
prevention it's the shift left story

56
00:03:12,659 --> 00:03:15,980
which I'll talk about in a second

57
00:03:16,019 --> 00:03:16,860
um

58
00:03:16,860 --> 00:03:19,140
what's really interesting too about

59
00:03:19,140 --> 00:03:21,959
doing this stuff in development

60
00:03:21,959 --> 00:03:24,599
um is developers you can borrow their

61
00:03:24,599 --> 00:03:27,720
knowledge they know what to attack they

62
00:03:27,720 --> 00:03:29,099
know what the expected inputs and

63
00:03:29,099 --> 00:03:30,360
outputs are where some of the

64
00:03:30,360 --> 00:03:32,420
vulnerabilities are

65
00:03:32,420 --> 00:03:35,879
can be very fun in fact to mix some

66
00:03:35,879 --> 00:03:37,379
Docker into it so that they're excited

67
00:03:37,379 --> 00:03:39,659
then run a CTF something like that see

68
00:03:39,659 --> 00:03:41,220
which tools they use and then now you

69
00:03:41,220 --> 00:03:43,920
know what you're going to need to use

70
00:03:43,920 --> 00:03:46,040
um

71
00:03:46,319 --> 00:03:49,519
automating to continuously test security

72
00:03:49,519 --> 00:03:51,780
is really cool

73
00:03:51,780 --> 00:03:55,799
um scanning things is is useful but you

74
00:03:55,799 --> 00:03:57,360
can't just scan and then ship and then

75
00:03:57,360 --> 00:03:59,879
see what the heck happens so if you've

76
00:03:59,879 --> 00:04:01,739
got something as lightweight as Docker

77
00:04:01,739 --> 00:04:03,900
you have the ability to spend three

78
00:04:03,900 --> 00:04:04,860
minutes

79
00:04:04,860 --> 00:04:08,640
and just check as often as you like on

80
00:04:08,640 --> 00:04:10,260
the security of your application do a

81
00:04:10,260 --> 00:04:12,480
quick test against it as many times as

82
00:04:12,480 --> 00:04:14,459
you like you can even plug it into an

83
00:04:14,459 --> 00:04:16,019
automatic monitoring system or something

84
00:04:16,019 --> 00:04:18,440
like that

85
00:04:19,519 --> 00:04:22,620
and naturally the more often you do it

86
00:04:22,620 --> 00:04:24,060
the less you're going to be a gate

87
00:04:24,060 --> 00:04:25,380
before production

88
00:04:25,380 --> 00:04:29,220
so if you if you want to compare pen

89
00:04:29,220 --> 00:04:30,960
tests really do take weeks Docker takes

90
00:04:30,960 --> 00:04:34,380
seconds and it can be it becomes so

91
00:04:34,380 --> 00:04:37,259
cheap that it's it's second nature it's

92
00:04:37,259 --> 00:04:39,000
easy to automate it doesn't get in the

93
00:04:39,000 --> 00:04:42,419
way of development and so that's why I'm

94
00:04:42,419 --> 00:04:46,159
here to evangelize about that

95
00:04:48,840 --> 00:04:49,680
um

96
00:04:49,680 --> 00:04:52,199
who's worked with containers

97
00:04:52,199 --> 00:04:54,840
okay who like actually feels at all

98
00:04:54,840 --> 00:04:56,280
comfortable with them

99
00:04:56,280 --> 00:04:58,620
okay yeah

100
00:04:58,620 --> 00:05:00,660
um all right good I like introductory

101
00:05:00,660 --> 00:05:02,759
groups uh so that was about 50 50 there

102
00:05:02,759 --> 00:05:03,780
I think

103
00:05:03,780 --> 00:05:04,979
um

104
00:05:04,979 --> 00:05:06,840
you can think about containers and those

105
00:05:06,840 --> 00:05:08,040
of you who are really comfortable with

106
00:05:08,040 --> 00:05:11,160
some don't throw things but you can

107
00:05:11,160 --> 00:05:12,660
really think about containers as being

108
00:05:12,660 --> 00:05:14,220
just really really small virtual

109
00:05:14,220 --> 00:05:16,880
machines that only do a couple of things

110
00:05:16,880 --> 00:05:20,400
that are just purpose built so they're

111
00:05:20,400 --> 00:05:21,960
really really small which means they can

112
00:05:21,960 --> 00:05:24,560
start and stop really really fast

113
00:05:24,560 --> 00:05:27,720
they're generally pre-packaged you can

114
00:05:27,720 --> 00:05:30,600
make your own but there's just a wealth

115
00:05:30,600 --> 00:05:34,259
there's a ton a library of container

116
00:05:34,259 --> 00:05:35,539
images out there that you can borrow

117
00:05:35,539 --> 00:05:37,740
including ones that have attack tools

118
00:05:37,740 --> 00:05:40,380
already built into them

119
00:05:40,380 --> 00:05:42,000
um their single purpose

120
00:05:42,000 --> 00:05:44,280
so you have to think a little bit

121
00:05:44,280 --> 00:05:46,259
differently about how you use these

122
00:05:46,259 --> 00:05:49,740
tools if you're used to trying to do

123
00:05:49,740 --> 00:05:51,360
um trying to break web applications with

124
00:05:51,360 --> 00:05:53,460
something like Kali Linux

125
00:05:53,460 --> 00:05:55,800
every single thing that you run on Kali

126
00:05:55,800 --> 00:05:57,419
Linux is going to be a single container

127
00:05:57,419 --> 00:06:00,060
in the container world so

128
00:06:00,060 --> 00:06:02,940
they take a few seconds to run maybe a

129
00:06:02,940 --> 00:06:04,500
couple minutes for stuff like the Zed

130
00:06:04,500 --> 00:06:06,020
attack proxy

131
00:06:06,020 --> 00:06:08,460
but with that comes the fact that you'll

132
00:06:08,460 --> 00:06:11,699
have a bunch of them running two three

133
00:06:11,699 --> 00:06:13,979
minutes however you can parallelize them

134
00:06:13,979 --> 00:06:16,440
and run them all at once for three

135
00:06:16,440 --> 00:06:18,660
minutes and then sort of the Smurf Army

136
00:06:18,660 --> 00:06:22,020
tells you what you need to know

137
00:06:22,020 --> 00:06:23,880
um but you can you can think about them

138
00:06:23,880 --> 00:06:25,800
as virtual machines

139
00:06:25,800 --> 00:06:27,840
um the gray beards will laugh at you or

140
00:06:27,840 --> 00:06:30,720
worse but they they can really just be

141
00:06:30,720 --> 00:06:31,860
thought of as really really small

142
00:06:31,860 --> 00:06:34,259
virtual machines

143
00:06:34,259 --> 00:06:36,120
so I'm a little more

144
00:06:36,120 --> 00:06:39,380
kind of technically stuff

145
00:06:40,020 --> 00:06:42,479
is this is how Docker itself runs

146
00:06:42,479 --> 00:06:47,180
containers are a that keeps

147
00:06:47,400 --> 00:06:49,699
has a um

148
00:06:49,699 --> 00:06:52,199
all right

149
00:06:52,199 --> 00:06:53,940
Docker is a particular engine for

150
00:06:53,940 --> 00:06:56,940
running containers and what it does is

151
00:06:56,940 --> 00:06:59,940
does the work of organizing these

152
00:06:59,940 --> 00:07:02,280
miniature virtual machines and the files

153
00:07:02,280 --> 00:07:03,720
that they need and the processes that

154
00:07:03,720 --> 00:07:04,560
they need

155
00:07:04,560 --> 00:07:09,180
so we we sort of start out in our world

156
00:07:09,180 --> 00:07:11,340
with all-in-one systems that run

157
00:07:11,340 --> 00:07:13,860
everything this is like your desktop or

158
00:07:13,860 --> 00:07:15,660
a web server that's got a database on it

159
00:07:15,660 --> 00:07:17,880
and a web server on it and and all of

160
00:07:17,880 --> 00:07:20,780
your files on it and that's been

161
00:07:20,780 --> 00:07:23,520
perfectly comfortable space although it

162
00:07:23,520 --> 00:07:25,020
does mean that if you mess something up

163
00:07:25,020 --> 00:07:27,919
on it the whole thing is broken now

164
00:07:27,919 --> 00:07:30,720
so that's kind of one of the reasons why

165
00:07:30,720 --> 00:07:33,660
we why we use Docker and containers is

166
00:07:33,660 --> 00:07:37,220
that there's no need for the other junk

167
00:07:37,220 --> 00:07:40,800
and the core operating system itself to

168
00:07:40,800 --> 00:07:43,199
be tied together that way

169
00:07:43,199 --> 00:07:44,940
um they happen to be tied together that

170
00:07:44,940 --> 00:07:47,340
way but it's possible for me to run

171
00:07:47,340 --> 00:07:49,319
applications

172
00:07:49,319 --> 00:07:50,940
over here that don't interact with

173
00:07:50,940 --> 00:07:52,979
anything else

174
00:07:52,979 --> 00:07:55,740
all the containers do

175
00:07:55,740 --> 00:07:59,160
and all the docker does is says I want

176
00:07:59,160 --> 00:08:01,500
to use the OS without interacting with

177
00:08:01,500 --> 00:08:03,300
any of its pieces so I don't break any

178
00:08:03,300 --> 00:08:05,580
of those pieces I want to run this one

179
00:08:05,580 --> 00:08:07,400
application which might have a couple of

180
00:08:07,400 --> 00:08:09,780
dependencies in it I want to make sure I

181
00:08:09,780 --> 00:08:10,860
have those

182
00:08:10,860 --> 00:08:13,740
I need some files off the disk

183
00:08:13,740 --> 00:08:16,800
I need to connect to the network on some

184
00:08:16,800 --> 00:08:19,199
ports but I really only need to borrow a

185
00:08:19,199 --> 00:08:21,720
very little bit of stuff and don't trust

186
00:08:21,720 --> 00:08:23,840
me

187
00:08:23,879 --> 00:08:25,979
and so you end up with

188
00:08:25,979 --> 00:08:28,740
just these pieces this is what gets

189
00:08:28,740 --> 00:08:31,740
packaged up as a container is just

190
00:08:31,740 --> 00:08:34,860
enough to talk to the operating system

191
00:08:34,860 --> 00:08:37,559
borrow files from it borrow its network

192
00:08:37,559 --> 00:08:41,958
interfaces but then stay out of the way

193
00:08:41,958 --> 00:08:43,740
and

194
00:08:43,740 --> 00:08:45,420
one of the things of course that you

195
00:08:45,420 --> 00:08:47,940
could run is a web server so you could

196
00:08:47,940 --> 00:08:49,680
run your own website on it if you feel

197
00:08:49,680 --> 00:08:52,740
like it and then run some attack tools

198
00:08:52,740 --> 00:08:54,779
to

199
00:08:54,779 --> 00:08:56,760
break this up into really small pieces

200
00:08:56,760 --> 00:08:58,500
that run really fast

201
00:08:58,500 --> 00:09:01,800
so why not have my web server here and

202
00:09:01,800 --> 00:09:04,200
then an attack here or multiple

203
00:09:04,200 --> 00:09:06,060
containers that I'm going to run that

204
00:09:06,060 --> 00:09:08,220
are all going to attack it I might do

205
00:09:08,220 --> 00:09:11,220
some some seriously fun damage here

206
00:09:11,220 --> 00:09:13,140
but it doesn't interact with the real

207
00:09:13,140 --> 00:09:15,540
system at all once I'm done with this I

208
00:09:15,540 --> 00:09:18,060
can just destroy it I don't care those

209
00:09:18,060 --> 00:09:20,220
files that's just a link off to the file

210
00:09:20,220 --> 00:09:23,100
system they don't they don't matter

211
00:09:23,100 --> 00:09:27,000
um and so I can just go totally crazy

212
00:09:27,000 --> 00:09:29,940
it's really really useful for testing of

213
00:09:29,940 --> 00:09:32,399
anything at all so if you're in your

214
00:09:32,399 --> 00:09:34,560
organization and you're you're sort of

215
00:09:34,560 --> 00:09:36,959
one of the web people and you do have

216
00:09:36,959 --> 00:09:38,519
developer people and you have

217
00:09:38,519 --> 00:09:41,279
infrastructure people uh you can find

218
00:09:41,279 --> 00:09:43,080
you can you can find people and borrow

219
00:09:43,080 --> 00:09:46,320
their expertise and their enthusiasm for

220
00:09:46,320 --> 00:09:48,240
this sort of thing and say Hey you know

221
00:09:48,240 --> 00:09:49,920
I was thinking about actually testing my

222
00:09:49,920 --> 00:09:52,019
web applications this way and they'll

223
00:09:52,019 --> 00:09:55,160
get excited I think

224
00:09:55,680 --> 00:09:58,339
the other thing I'll mention

225
00:09:58,339 --> 00:10:02,519
that you have to adapt to is that in the

226
00:10:02,519 --> 00:10:05,459
the old world what we did was we had one

227
00:10:05,459 --> 00:10:07,500
big system that had everything on it if

228
00:10:07,500 --> 00:10:08,820
you broke one thing it broke the whole

229
00:10:08,820 --> 00:10:10,860
system

230
00:10:10,860 --> 00:10:14,580
um containers are intended to

231
00:10:14,580 --> 00:10:17,339
be immutable is is the technical term

232
00:10:17,339 --> 00:10:20,100
but they're intended to be built up once

233
00:10:20,100 --> 00:10:21,839
you don't change anything you don't

234
00:10:21,839 --> 00:10:24,060
update software you they just run

235
00:10:24,060 --> 00:10:25,620
something for a few seconds or minutes

236
00:10:25,620 --> 00:10:28,740
and then you destroy them

237
00:10:28,740 --> 00:10:30,600
um and the interesting thing about

238
00:10:30,600 --> 00:10:33,899
looking at web server loads for instance

239
00:10:33,899 --> 00:10:36,660
is you have to get used to the idea that

240
00:10:36,660 --> 00:10:39,000
when you have some problem with your web

241
00:10:39,000 --> 00:10:41,160
server or with the with the tests that

242
00:10:41,160 --> 00:10:42,480
you're running what you're going to do

243
00:10:42,480 --> 00:10:45,959
is redefine the whole here these 12

244
00:10:45,959 --> 00:10:47,640
containers attack this one container

245
00:10:47,640 --> 00:10:49,320
you're just going to redefine it with

246
00:10:49,320 --> 00:10:50,779
new versions of things or new code

247
00:10:50,779 --> 00:10:53,459
destroy the old one start another one

248
00:10:53,459 --> 00:10:57,540
see what happens destroy it so uh your

249
00:10:57,540 --> 00:10:59,640
files those are going to live in some

250
00:10:59,640 --> 00:11:01,740
place protected your network that's

251
00:11:01,740 --> 00:11:04,800
going to be done by the host itself but

252
00:11:04,800 --> 00:11:06,360
your containers you can't get attached

253
00:11:06,360 --> 00:11:08,700
to you can't you can't

254
00:11:08,700 --> 00:11:11,760
FTP into them and I mean you can't but

255
00:11:11,760 --> 00:11:14,760
the the spirit of containers is to

256
00:11:14,760 --> 00:11:16,620
always rebuild them whenever you need to

257
00:11:16,620 --> 00:11:18,480
change something from scratch

258
00:11:18,480 --> 00:11:21,180
uh makes things very predictable it

259
00:11:21,180 --> 00:11:22,440
sounds like a pain in the ass but

260
00:11:22,440 --> 00:11:23,820
there's a lot of automation that can be

261
00:11:23,820 --> 00:11:26,459
done around it to make it actually work

262
00:11:26,459 --> 00:11:29,060
really nicely

263
00:11:29,459 --> 00:11:32,959
um who's uh who's uh familiar with

264
00:11:32,959 --> 00:11:36,300
microservices and really adopting them

265
00:11:36,300 --> 00:11:37,440
okay

266
00:11:37,440 --> 00:11:39,540
these containers really fit into that

267
00:11:39,540 --> 00:11:41,940
serverless as well the idea that small

268
00:11:41,940 --> 00:11:43,440
components should do one thing

269
00:11:43,440 --> 00:11:44,760
predictably

270
00:11:44,760 --> 00:11:47,399
and interact with each other and that

271
00:11:47,399 --> 00:11:49,620
you should be able to destroy some

272
00:11:49,620 --> 00:11:51,480
portion of it and bring it back with a

273
00:11:51,480 --> 00:11:54,019
new immersion

274
00:11:54,060 --> 00:11:55,860
so

275
00:11:55,860 --> 00:11:58,980
kind of daunting that's as far into the

276
00:11:58,980 --> 00:12:01,640
deep end as I'm really going to take you

277
00:12:01,640 --> 00:12:04,500
the thing to know is that people are

278
00:12:04,500 --> 00:12:07,019
really helpful I mean when they are

279
00:12:07,019 --> 00:12:09,120
helpful they're really helpful and when

280
00:12:09,120 --> 00:12:10,920
they're useless they're really useless

281
00:12:10,920 --> 00:12:13,200
but it's like the it's the inverse bell

282
00:12:13,200 --> 00:12:16,079
curve but in the docker world you will

283
00:12:16,079 --> 00:12:17,820
find people who are helpful if their

284
00:12:17,820 --> 00:12:20,220
readme file is you know at least has a

285
00:12:20,220 --> 00:12:23,160
scroll bar on it you're there's going to

286
00:12:23,160 --> 00:12:25,860
be somebody's trying to help you

287
00:12:25,860 --> 00:12:28,800
um so the reading files take a look at

288
00:12:28,800 --> 00:12:31,200
those try some stuff out the nice thing

289
00:12:31,200 --> 00:12:34,140
about running containers is that you can

290
00:12:34,140 --> 00:12:35,760
just try stuff out it takes two minutes

291
00:12:35,760 --> 00:12:38,839
and and you're back to normal

292
00:12:38,839 --> 00:12:42,660
so you can try things and then the thing

293
00:12:42,660 --> 00:12:45,060
that I would encourage you

294
00:12:45,060 --> 00:12:47,279
is to put in pull requests if you see

295
00:12:47,279 --> 00:12:49,560
things that are either functionality

296
00:12:49,560 --> 00:12:51,240
that wasn't mentioned in the readme file

297
00:12:51,240 --> 00:12:53,339
or if there's a problem there put in a

298
00:12:53,339 --> 00:12:56,279
pull request it's not that hard to do

299
00:12:56,279 --> 00:12:59,700
and it's really it's really fun when

300
00:12:59,700 --> 00:13:01,440
somebody's tool gets better because you

301
00:13:01,440 --> 00:13:03,360
made a change to their documentation

302
00:13:03,360 --> 00:13:05,899
that made it easier at the very least

303
00:13:05,899 --> 00:13:10,440
open issues against it and if you do

304
00:13:10,440 --> 00:13:12,720
open issues it's always really helpful

305
00:13:12,720 --> 00:13:16,320
if you offer a solution so even if you

306
00:13:16,320 --> 00:13:18,240
don't want to go into the editing the

307
00:13:18,240 --> 00:13:19,980
files and doing a pull request opening

308
00:13:19,980 --> 00:13:21,480
an issue and say hey I think you need

309
00:13:21,480 --> 00:13:23,519
this flag to be that flag not just this

310
00:13:23,519 --> 00:13:25,320
doesn't work

311
00:13:25,320 --> 00:13:29,420
but it's a community out there

312
00:13:30,360 --> 00:13:33,139
um you'll break stuff

313
00:13:33,959 --> 00:13:36,240
but it's not the end of the world

314
00:13:36,240 --> 00:13:37,800
what I would encourage you to do when

315
00:13:37,800 --> 00:13:39,720
you're getting started is actually

316
00:13:39,720 --> 00:13:43,019
create a virtual machine in you know

317
00:13:43,019 --> 00:13:45,660
just a Linux virtual machine and you

318
00:13:45,660 --> 00:13:48,019
know your your tool of choice

319
00:13:48,019 --> 00:13:52,139
and trash that thing with Docker to

320
00:13:52,139 --> 00:13:53,700
start with

321
00:13:53,700 --> 00:13:56,820
um for one thing because it's Linux and

322
00:13:56,820 --> 00:13:58,680
Docker images are tend to be running

323
00:13:58,680 --> 00:13:59,779
Linux

324
00:13:59,779 --> 00:14:02,639
it's it's a little a little easier to

325
00:14:02,639 --> 00:14:04,019
get compatibility working there there

326
00:14:04,019 --> 00:14:06,120
aren't translations going on

327
00:14:06,120 --> 00:14:06,779
um

328
00:14:06,779 --> 00:14:09,180
under the covers Docker on Mac and

329
00:14:09,180 --> 00:14:10,560
windows is actually running a Linux

330
00:14:10,560 --> 00:14:13,500
kernel but they're just not telling you

331
00:14:13,500 --> 00:14:15,180
um and that's the sort of obfuscation

332
00:14:15,180 --> 00:14:17,279
that I don't like I'd rather have just a

333
00:14:17,279 --> 00:14:19,560
virtual machine that I can throw away or

334
00:14:19,560 --> 00:14:21,720
that I can snapshot try a bunch of stuff

335
00:14:21,720 --> 00:14:23,940
and then roll back

336
00:14:23,940 --> 00:14:26,639
um so it's it's really easy to to be

337
00:14:26,639 --> 00:14:27,720
safe

338
00:14:27,720 --> 00:14:29,760
about this stuff

339
00:14:29,760 --> 00:14:33,600
and I put Embrace destruction on here

340
00:14:33,600 --> 00:14:34,639
because

341
00:14:34,639 --> 00:14:37,200
because that that is the philosophy

342
00:14:37,200 --> 00:14:38,760
you're going to need to adopt is the one

343
00:14:38,760 --> 00:14:40,740
of microservices the one of of

344
00:14:40,740 --> 00:14:42,600
infrastructure that you destroy when you

345
00:14:42,600 --> 00:14:45,060
need to make it better where you just

346
00:14:45,060 --> 00:14:47,220
change a line or something totally

347
00:14:47,220 --> 00:14:49,740
destroy the entire website and recreate

348
00:14:49,740 --> 00:14:52,320
it so get used to that kind of

349
00:14:52,320 --> 00:14:54,480
Destruction and the fact that you can

350
00:14:54,480 --> 00:14:56,760
try things safely because they take two

351
00:14:56,760 --> 00:15:00,860
minutes and then you know what happened

352
00:15:02,160 --> 00:15:05,839
but so far any questions yet

353
00:15:06,660 --> 00:15:08,220
they're just the introductory stuff I'm

354
00:15:08,220 --> 00:15:11,300
gonna get a technical in a second

355
00:15:11,399 --> 00:15:12,540
all right

356
00:15:12,540 --> 00:15:14,279
well I prayed to the demo gods and

357
00:15:14,279 --> 00:15:16,440
sacrificed the chicken so

358
00:15:16,440 --> 00:15:18,779
let's see what happens

359
00:15:18,779 --> 00:15:20,839
um

360
00:15:21,120 --> 00:15:23,880
yeah let's try it out

361
00:15:23,880 --> 00:15:25,800
we can launch broad attacks these are

362
00:15:25,800 --> 00:15:27,899
all uh dockerized

363
00:15:27,899 --> 00:15:31,079
um the broad tools and I did promise you

364
00:15:31,079 --> 00:15:34,260
that we can run a web server

365
00:15:34,260 --> 00:15:37,320
in a container and so what I'm going to

366
00:15:37,320 --> 00:15:38,820
do here

367
00:15:38,820 --> 00:15:40,980
to start with is I'm just going to say

368
00:15:40,980 --> 00:15:42,360
hey

369
00:15:42,360 --> 00:15:43,079
um

370
00:15:43,079 --> 00:15:45,120
I want to run

371
00:15:45,120 --> 00:15:46,980
and this won't be on the quiz this is

372
00:15:46,980 --> 00:15:48,980
all in the readme file

373
00:15:48,980 --> 00:15:52,019
RM says clean up after me this makes

374
00:15:52,019 --> 00:15:54,480
your life a lot easier

375
00:15:54,480 --> 00:15:55,560
um

376
00:15:55,560 --> 00:15:57,899
I'm going to say I want to run

377
00:15:57,899 --> 00:15:59,760
interactively

378
00:15:59,760 --> 00:16:03,439
and just create a new Ubuntu system

379
00:16:04,380 --> 00:16:07,920
tiny virtual machine with too many

380
00:16:07,920 --> 00:16:10,399
dashes

381
00:16:13,680 --> 00:16:15,740
oh yeah man

382
00:16:15,740 --> 00:16:17,959
should have asked soon

383
00:16:17,959 --> 00:16:19,760
all right

384
00:16:19,760 --> 00:16:22,440
and there you go that was what like two

385
00:16:22,440 --> 00:16:26,660
seconds that it took and now I'm running

386
00:16:26,760 --> 00:16:28,800
assistant

387
00:16:28,800 --> 00:16:31,079
this is the real power of doctor and

388
00:16:31,079 --> 00:16:33,360
then I can go and I can do things uh

389
00:16:33,360 --> 00:16:37,019
let's let's uh update Lads you know

390
00:16:37,019 --> 00:16:39,120
rm-rf

391
00:16:39,120 --> 00:16:42,019
uh

392
00:16:42,480 --> 00:16:45,480
and

393
00:16:45,779 --> 00:16:47,639
when I'm done

394
00:16:47,639 --> 00:16:50,759
I just leave the system

395
00:16:50,759 --> 00:16:53,759
and now it's completely gone if I run it

396
00:16:53,759 --> 00:16:57,060
again it runs from the base state

397
00:16:57,060 --> 00:16:58,920
and

398
00:16:58,920 --> 00:17:01,019
I don't know

399
00:17:01,019 --> 00:17:02,759
I'll just prove to you that I'm on a

400
00:17:02,759 --> 00:17:05,040
command line this is the world of Docker

401
00:17:05,040 --> 00:17:07,020
this is how being able to launch attacks

402
00:17:07,020 --> 00:17:10,199
is going to be uh super simple also

403
00:17:10,199 --> 00:17:11,819
super repeatable

404
00:17:11,819 --> 00:17:13,260
so you don't have to worry that like

405
00:17:13,260 --> 00:17:15,839
some cached file in your attack tool

406
00:17:15,839 --> 00:17:17,640
decided it didn't need to rerun an

407
00:17:17,640 --> 00:17:18,720
attack

408
00:17:18,720 --> 00:17:22,260
it always behaves exactly the same plus

409
00:17:22,260 --> 00:17:25,199
they're published out there on on the

410
00:17:25,199 --> 00:17:27,059
net for you to pull down or you can

411
00:17:27,059 --> 00:17:28,799
publish them internally and when

412
00:17:28,799 --> 00:17:30,120
somebody says what did you run against

413
00:17:30,120 --> 00:17:31,679
this you can say this is exactly what I

414
00:17:31,679 --> 00:17:32,460
mean

415
00:17:32,460 --> 00:17:35,100
on your system on their system it's

416
00:17:35,100 --> 00:17:36,900
Dockers really

417
00:17:36,900 --> 00:17:39,240
it's kind of the formalization of well

418
00:17:39,240 --> 00:17:43,500
it works on my laptop into a world where

419
00:17:43,500 --> 00:17:46,140
um where your laptop is that we should

420
00:17:46,140 --> 00:17:47,880
just ship into production

421
00:17:47,880 --> 00:17:51,260
let me show you another one

422
00:17:51,299 --> 00:17:54,780
get out of here yeah yeah

423
00:17:54,780 --> 00:17:57,480
let's see and what I'm going to do I've

424
00:17:57,480 --> 00:17:59,039
actually got the command queued up and

425
00:17:59,039 --> 00:18:01,559
so I'll show you what I'm going to do

426
00:18:01,559 --> 00:18:05,280
I'm just going to run the Juice Shop

427
00:18:05,280 --> 00:18:07,740
um because it's cool and it's handy and

428
00:18:07,740 --> 00:18:10,620
I'm just saying run a container

429
00:18:10,620 --> 00:18:12,660
destroy everything after I'm done delete

430
00:18:12,660 --> 00:18:14,880
the evidence

431
00:18:14,880 --> 00:18:19,020
um and then listen on Port 3000

432
00:18:19,020 --> 00:18:21,600
the quiz don't worry about it uh and

433
00:18:21,600 --> 00:18:23,760
then Juice Shop is the is the image that

434
00:18:23,760 --> 00:18:25,440
I want to run

435
00:18:25,440 --> 00:18:27,660
and away we go a couple of seconds

436
00:18:27,660 --> 00:18:30,059
it's running it is

437
00:18:30,059 --> 00:18:31,799
still starting up a little it's probably

438
00:18:31,799 --> 00:18:35,480
going to take more like 10 seconds

439
00:18:37,740 --> 00:18:39,200
but there it is

440
00:18:39,200 --> 00:18:41,880
so the real power and my computer like

441
00:18:41,880 --> 00:18:45,240
the fan isn't running on my laptop it's

442
00:18:45,240 --> 00:18:46,620
that's the real power is I've just

443
00:18:46,620 --> 00:18:49,700
started an entire website right here

444
00:18:49,700 --> 00:18:52,080
works on my laptop it'll work in

445
00:18:52,080 --> 00:18:53,460
production because they're the same

446
00:18:53,460 --> 00:18:55,620
thing and so now I'm really working in

447
00:18:55,620 --> 00:18:57,979
production

448
00:18:58,640 --> 00:19:02,460
and let's launch a real Attack

449
00:19:02,460 --> 00:19:04,080
so

450
00:19:04,080 --> 00:19:05,880
I'm going to use and this is where the

451
00:19:05,880 --> 00:19:08,960
readme file comes really

452
00:19:09,059 --> 00:19:11,520
um I'm gonna run Z attack proxy against

453
00:19:11,520 --> 00:19:13,820
it

454
00:19:13,860 --> 00:19:16,219
so

455
00:19:18,360 --> 00:19:20,820
so I'm running a container

456
00:19:20,820 --> 00:19:22,919
delete everything all the evidence later

457
00:19:22,919 --> 00:19:25,080
this is the one

458
00:19:25,080 --> 00:19:27,980
and this is the command I want to run

459
00:19:27,980 --> 00:19:30,900
once it starts up which is just do a

460
00:19:30,900 --> 00:19:32,700
quick scan I'm not sure if it's even

461
00:19:32,700 --> 00:19:34,020
going to hit any of the Juice Shop

462
00:19:34,020 --> 00:19:35,280
things

463
00:19:35,280 --> 00:19:37,380
but we will find out pretty darn quickly

464
00:19:37,380 --> 00:19:39,799
at the time

465
00:19:45,419 --> 00:19:48,080
what the heck did I do

466
00:19:48,900 --> 00:19:52,940
video should I sacrifice two chickens

467
00:19:55,980 --> 00:19:58,460
there

468
00:20:00,419 --> 00:20:03,320
do do

469
00:20:04,620 --> 00:20:06,539
um

470
00:20:06,539 --> 00:20:08,880
no path

471
00:20:08,880 --> 00:20:11,100
see unfortunately containers also change

472
00:20:11,100 --> 00:20:12,720
sometimes too

473
00:20:12,720 --> 00:20:16,140
let me try a full scan because I also

474
00:20:16,140 --> 00:20:19,100
have the command for that

475
00:20:27,539 --> 00:20:32,120
I'm doing something definitely wrong

476
00:20:33,600 --> 00:20:36,918
here's what I have to come down

477
00:20:40,980 --> 00:20:43,160
foreign

478
00:20:47,640 --> 00:20:49,679
give me one second here I'm glad we're

479
00:20:49,679 --> 00:20:52,280
recording this

480
00:20:55,980 --> 00:20:58,380
okay

481
00:20:58,380 --> 00:21:01,440
if anybody sees what it is yell it out

482
00:21:01,440 --> 00:21:04,260
I'm sure it has to do with the TTY that

483
00:21:04,260 --> 00:21:05,760
I'm

484
00:21:05,760 --> 00:21:08,059
supposed

485
00:21:08,100 --> 00:21:10,820
all right

486
00:21:11,039 --> 00:21:12,840
um

487
00:21:12,840 --> 00:21:17,360
run delete map a volume

488
00:21:20,220 --> 00:21:23,400
we're going to zap in GUI mode and make

489
00:21:23,400 --> 00:21:25,679
sure that the first round of commands

490
00:21:25,679 --> 00:21:29,580
are working no I've only got like 24

491
00:21:29,580 --> 00:21:32,240
more minutes

492
00:21:32,940 --> 00:21:35,059
um

493
00:21:37,620 --> 00:21:40,080
I don't know worked on my laptop

494
00:21:40,080 --> 00:21:42,439
foreign

495
00:22:01,440 --> 00:22:03,120
all right that's a little better

496
00:22:03,120 --> 00:22:05,340
so I obviously messed something up one

497
00:22:05,340 --> 00:22:07,260
chicken wasn't enough

498
00:22:07,260 --> 00:22:09,000
um but here we go nickto is now gonna

499
00:22:09,000 --> 00:22:11,940
run and we'll see what it finds

500
00:22:11,940 --> 00:22:15,000
now seconds to boot something up that's

501
00:22:15,000 --> 00:22:16,740
really cool it will take time for one of

502
00:22:16,740 --> 00:22:19,320
these to run but let's see I got

503
00:22:19,320 --> 00:22:21,780
confetti over there I found one

504
00:22:21,780 --> 00:22:24,960
um but I could be running multiples all

505
00:22:24,960 --> 00:22:25,919
at once

506
00:22:25,919 --> 00:22:28,620
so I could be running Zed attack proxy

507
00:22:28,620 --> 00:22:31,679
and Necto and SQL map and

508
00:22:31,679 --> 00:22:32,340
um

509
00:22:32,340 --> 00:22:35,280
whatever tools are out there that's also

510
00:22:35,280 --> 00:22:37,559
a really fun time to talk with the

511
00:22:37,559 --> 00:22:39,780
developers too is to say hey I've been

512
00:22:39,780 --> 00:22:41,640
doing this and they'll just like go to

513
00:22:41,640 --> 00:22:43,799
town on that thing like anything to not

514
00:22:43,799 --> 00:22:46,140
do real work so it's perfect to just

515
00:22:46,140 --> 00:22:48,539
dangle this in front of

516
00:22:48,539 --> 00:22:52,260
how often do you grab the uat QA and

517
00:22:52,260 --> 00:22:54,360
synthetic strips and stick them straight

518
00:22:54,360 --> 00:22:56,100
into the sound

519
00:22:56,100 --> 00:22:57,600
yeah

520
00:22:57,600 --> 00:23:00,000
well the cool thing is if your

521
00:23:00,000 --> 00:23:02,039
developers are using containers to build

522
00:23:02,039 --> 00:23:03,419
the website you can run it on your

523
00:23:03,419 --> 00:23:06,539
laptop uh from whatever revision you

524
00:23:06,539 --> 00:23:10,200
like so it'll be exactly the same as um

525
00:23:10,200 --> 00:23:12,799
as as what it looks like in production

526
00:23:12,799 --> 00:23:16,340
the uncool thing is that if you aren't

527
00:23:16,340 --> 00:23:18,179
uh you're going to need your own

528
00:23:18,179 --> 00:23:20,940
development environment and deploy into

529
00:23:20,940 --> 00:23:22,740
there

530
00:23:22,740 --> 00:23:25,679
yeah what's up uh your previous command

531
00:23:25,679 --> 00:23:28,020
that was failing your current directory

532
00:23:28,020 --> 00:23:30,000
has capitalists capital letters and

533
00:23:30,000 --> 00:23:33,840
spaces right nice nice that's perfect

534
00:23:33,840 --> 00:23:34,980
yeah

535
00:23:34,980 --> 00:23:37,500
okay

536
00:23:37,500 --> 00:23:40,159
thank you

537
00:23:40,500 --> 00:23:43,039
all right

538
00:23:44,460 --> 00:23:46,620
I know it's small all in bigging it in a

539
00:23:46,620 --> 00:23:48,799
second

540
00:23:56,940 --> 00:23:59,960
it's a little better

541
00:24:05,100 --> 00:24:08,240
first name

542
00:24:11,400 --> 00:24:14,960
so that's cranking along somewhere

543
00:24:15,179 --> 00:24:18,059
and flip back over here

544
00:24:18,059 --> 00:24:20,840
and this one finished as well

545
00:24:20,840 --> 00:24:22,440
and

546
00:24:22,440 --> 00:24:23,940
there are some other tricks that I'll

547
00:24:23,940 --> 00:24:27,480
teach you too uh one of which is that

548
00:24:27,480 --> 00:24:29,520
that when these finish up their tests

549
00:24:29,520 --> 00:24:32,280
they have different exit codes which is

550
00:24:32,280 --> 00:24:33,780
really just a way for the system to say

551
00:24:33,780 --> 00:24:36,840
this exceeded or failed so the docker

552
00:24:36,840 --> 00:24:37,919
containers will actually have different

553
00:24:37,919 --> 00:24:41,280
exit codes and say I succeeded or I

554
00:24:41,280 --> 00:24:44,760
failed and so you can actually automate

555
00:24:44,760 --> 00:24:46,799
a bunch of things where you say hey run

556
00:24:46,799 --> 00:24:47,820
this

557
00:24:47,820 --> 00:24:50,400
and maybe you're writing in a script and

558
00:24:50,400 --> 00:24:52,140
scripting languages will respect the

559
00:24:52,140 --> 00:24:54,659
exit codes of tools and so you can just

560
00:24:54,659 --> 00:24:57,840
say hey run this check and if it says

561
00:24:57,840 --> 00:25:00,840
there's an error in the run then go over

562
00:25:00,840 --> 00:25:04,260
here and and email me otherwise continue

563
00:25:04,260 --> 00:25:07,440
and test some other stuff

564
00:25:07,440 --> 00:25:11,100
so this probably had an exit code of

565
00:25:11,100 --> 00:25:14,178
I would guess five

566
00:25:14,820 --> 00:25:16,679
that would be wrong it is an exit code

567
00:25:16,679 --> 00:25:19,159
of success

568
00:25:19,320 --> 00:25:22,140
so finding some stuff there this could

569
00:25:22,140 --> 00:25:26,179
be your application could be anything

570
00:25:27,960 --> 00:25:30,620
and

571
00:25:31,260 --> 00:25:33,360
application specific attacks this is

572
00:25:33,360 --> 00:25:35,700
where the developers come in handy and

573
00:25:35,700 --> 00:25:37,260
you can actually kind of cheat too

574
00:25:37,260 --> 00:25:39,600
because like if you've ever if you've

575
00:25:39,600 --> 00:25:42,539
ever tried to do SQL injection

576
00:25:42,539 --> 00:25:44,940
um it does take a lot of work

577
00:25:44,940 --> 00:25:47,820
to to find all the parameters that are

578
00:25:47,820 --> 00:25:49,980
allowed figure out how you're going to

579
00:25:49,980 --> 00:25:51,480
mess with them

580
00:25:51,480 --> 00:25:54,779
the thing is that that developers they

581
00:25:54,779 --> 00:25:57,600
have this knowledge and they know

582
00:25:57,600 --> 00:26:00,059
only these

583
00:26:00,059 --> 00:26:02,820
um Keys have only these types of values

584
00:26:02,820 --> 00:26:05,159
and they can give you a list of those

585
00:26:05,159 --> 00:26:06,539
they can see here are all the parameters

586
00:26:06,539 --> 00:26:09,120
I take you know come at me bro

587
00:26:09,120 --> 00:26:11,700
and you can feed that right into SQL map

588
00:26:11,700 --> 00:26:14,279
and have a head start and say okay I'm

589
00:26:14,279 --> 00:26:16,080
only going to bother testing these

590
00:26:16,080 --> 00:26:17,820
parameters and messing with them and

591
00:26:17,820 --> 00:26:20,418
trying to do injection

592
00:26:21,299 --> 00:26:23,880
let's try

593
00:26:23,880 --> 00:26:27,380
let's try WP scan

594
00:26:29,279 --> 00:26:34,460
or do and you know what I'm going to do

595
00:26:38,220 --> 00:26:40,700
this

596
00:26:50,179 --> 00:26:53,580
ah I know why

597
00:26:53,580 --> 00:26:55,440
that wasn't the demo gods that was me

598
00:26:55,440 --> 00:26:57,000
actually trying to go out of order it

599
00:26:57,000 --> 00:26:59,220
was it was a bad choice

600
00:26:59,220 --> 00:27:01,200
what I'm going to do

601
00:27:01,200 --> 00:27:04,320
is for for right now we've just been

602
00:27:04,320 --> 00:27:06,000
running individual containers doing one

603
00:27:06,000 --> 00:27:08,520
or two things in a real environment if

604
00:27:08,520 --> 00:27:10,740
your website is containerized it's going

605
00:27:10,740 --> 00:27:13,200
to be multiple containers each with its

606
00:27:13,200 --> 00:27:16,140
own piece of the puzzle and if I want to

607
00:27:16,140 --> 00:27:17,700
run WordPress for instance I'm going to

608
00:27:17,700 --> 00:27:19,559
need to have a web server and a database

609
00:27:19,559 --> 00:27:20,820
server

610
00:27:20,820 --> 00:27:22,980
let me show you how that's done in the

611
00:27:22,980 --> 00:27:25,559
docker land

612
00:27:25,559 --> 00:27:28,460
uh

613
00:27:28,640 --> 00:27:32,460
is love it or hate it yaml

614
00:27:32,460 --> 00:27:33,600
um

615
00:27:33,600 --> 00:27:35,340
and

616
00:27:35,340 --> 00:27:37,919
the upshot of this not going to be on

617
00:27:37,919 --> 00:27:39,960
the quiz his sister says I need two

618
00:27:39,960 --> 00:27:42,919
containers and that they should have

619
00:27:42,919 --> 00:27:46,080
that Port open and that here are some

620
00:27:46,080 --> 00:27:47,760
variables for it

621
00:27:47,760 --> 00:27:50,460
and it makes it super simple

622
00:27:50,460 --> 00:27:52,559
to try all sorts of things I can do a

623
00:27:52,559 --> 00:27:55,679
Docker compose

624
00:27:55,679 --> 00:27:58,100
up

625
00:28:00,299 --> 00:28:03,320
a dash of

626
00:28:06,900 --> 00:28:09,320
and it just goes and does it

627
00:28:09,320 --> 00:28:12,120
now this demonstrates when you don't

628
00:28:12,120 --> 00:28:14,220
have an image locally so I've been

629
00:28:14,220 --> 00:28:16,980
running off of cache so far every time

630
00:28:16,980 --> 00:28:19,620
I've run the container Dockers reached

631
00:28:19,620 --> 00:28:21,120
out to the source and said is there a

632
00:28:21,120 --> 00:28:22,380
newer version

633
00:28:22,380 --> 00:28:24,960
this one obviously has a newer version

634
00:28:24,960 --> 00:28:27,980
so it's just pulling it for me

635
00:28:27,980 --> 00:28:31,020
it's it's kind of magical if you're used

636
00:28:31,020 --> 00:28:32,520
to like virtual machine images and

637
00:28:32,520 --> 00:28:33,720
things

638
00:28:33,720 --> 00:28:36,240
so it's doing

639
00:28:36,240 --> 00:28:39,299
the web server first it's Tethered to my

640
00:28:39,299 --> 00:28:40,140
phone

641
00:28:40,140 --> 00:28:43,140
so it'll take a minute

642
00:28:43,140 --> 00:28:45,419
um and then the other thing I'll show

643
00:28:45,419 --> 00:28:48,120
you is that there are container images

644
00:28:48,120 --> 00:28:50,880
that are like real nice Swiss Army

645
00:28:50,880 --> 00:28:51,960
knives

646
00:28:51,960 --> 00:28:54,360
um so if you are used to running you

647
00:28:54,360 --> 00:28:55,980
know a kaliolinic system somewhere so

648
00:28:55,980 --> 00:28:58,740
that you can you can break things

649
00:28:58,740 --> 00:29:00,480
um there is actually a container for

650
00:29:00,480 --> 00:29:03,059
Kali Linux uh heads up it doesn't have

651
00:29:03,059 --> 00:29:05,820
any applications in it to start with it

652
00:29:05,820 --> 00:29:07,919
just has the framework because the goal

653
00:29:07,919 --> 00:29:11,220
of containers is to be real small

654
00:29:11,220 --> 00:29:13,320
are we doing there okay

655
00:29:13,320 --> 00:29:15,960
that was pulled it is finished

656
00:29:15,960 --> 00:29:18,480
downloading you it's setting up the

657
00:29:18,480 --> 00:29:21,179
network it's creating two volumes away

658
00:29:21,179 --> 00:29:23,159
from the container where I can keep data

659
00:29:23,159 --> 00:29:25,140
and it's safe and I can destroy the

660
00:29:25,140 --> 00:29:26,700
containers I've got two of them right

661
00:29:26,700 --> 00:29:27,539
here

662
00:29:27,539 --> 00:29:29,340
uh anytime I like

663
00:29:29,340 --> 00:29:32,279
and just try again try over it's like

664
00:29:32,279 --> 00:29:35,779
the ultimate and turn it off and on

665
00:29:42,179 --> 00:29:45,240
Presto change oh yeah there we go

666
00:29:45,240 --> 00:29:46,500
so

667
00:29:46,500 --> 00:29:48,299
I mean that was that was like quick

668
00:29:48,299 --> 00:29:49,799
enough that I was able to actually wave

669
00:29:49,799 --> 00:29:52,380
my hands and dance for a second and it

670
00:29:52,380 --> 00:29:54,299
got done like there was there was no

671
00:29:54,299 --> 00:29:57,000
like Millennium Falcon more kind of

672
00:29:57,000 --> 00:29:59,159
moment there uh and so now I've got a

673
00:29:59,159 --> 00:30:01,880
WordPress site uh

674
00:30:01,880 --> 00:30:05,220
hi Gabe that's what I get typing

675
00:30:05,220 --> 00:30:08,220
sideways uh let's see oh no that is

676
00:30:08,220 --> 00:30:12,539
that's what I want thank you uh

677
00:30:13,020 --> 00:30:15,960
and

678
00:30:15,960 --> 00:30:20,520
away we go okay cool

679
00:30:20,520 --> 00:30:24,260
so I can mess with this thing now

680
00:30:24,539 --> 00:30:27,120
and what I'll do is

681
00:30:27,120 --> 00:30:29,399
I'll run my

682
00:30:29,399 --> 00:30:31,080
here we go

683
00:30:31,080 --> 00:30:33,600
so I'm going to run my

684
00:30:33,600 --> 00:30:36,179
WordPress scanner

685
00:30:36,179 --> 00:30:38,580
I've got an API token I already made

686
00:30:38,580 --> 00:30:40,559
that a variable for myself so that none

687
00:30:40,559 --> 00:30:41,480
of you

688
00:30:41,480 --> 00:30:43,559
gets to know it

689
00:30:43,559 --> 00:30:45,240
I'm still going to revoke it as soon as

690
00:30:45,240 --> 00:30:49,159
I get done here I don't trust you

691
00:30:49,860 --> 00:30:53,059
and away we go

692
00:30:56,600 --> 00:30:59,460
Kaboom so

693
00:30:59,460 --> 00:31:03,600
let's see it did it brute force my name

694
00:31:03,600 --> 00:31:05,100
um figured out

695
00:31:05,100 --> 00:31:07,260
what kind of plan I'm on

696
00:31:07,260 --> 00:31:09,659
and that that whole run took I don't

697
00:31:09,659 --> 00:31:11,580
know what was it like 10 seconds

698
00:31:11,580 --> 00:31:14,820
so that's these are so cheap to do

699
00:31:14,820 --> 00:31:16,320
there's no reason not to throw the

700
00:31:16,320 --> 00:31:19,440
entire kitchen sink at at a security

701
00:31:19,440 --> 00:31:22,640
test when you're developing

702
00:31:25,260 --> 00:31:27,779
fuzzing always a fun one to do that'll

703
00:31:27,779 --> 00:31:30,679
take a little bit longer

704
00:31:30,840 --> 00:31:32,820
but there are always command line Flags

705
00:31:32,820 --> 00:31:36,020
to say hey don't go totally crazy

706
00:31:36,799 --> 00:31:39,179
API security I know is a big one people

707
00:31:39,179 --> 00:31:40,860
are talking about

708
00:31:40,860 --> 00:31:44,100
um definitely fun to to fuzz apis uh the

709
00:31:44,100 --> 00:31:45,600
thing I'll encourage you to do also

710
00:31:45,600 --> 00:31:47,159
though is

711
00:31:47,159 --> 00:31:47,760
um

712
00:31:47,760 --> 00:31:49,919
talk with the developers because they

713
00:31:49,919 --> 00:31:52,260
know what they think their API should do

714
00:31:52,260 --> 00:31:54,120
and so you can plug that in and you can

715
00:31:54,120 --> 00:31:56,640
say it should only ever accept any of

716
00:31:56,640 --> 00:31:59,700
these things and do a run that you

717
00:31:59,700 --> 00:32:02,640
expect will completely pass as sort of

718
00:32:02,640 --> 00:32:05,520
like a start to know that that their

719
00:32:05,520 --> 00:32:07,320
specification is correct and then

720
00:32:07,320 --> 00:32:09,960
actually attack the thing afterwards a

721
00:32:09,960 --> 00:32:12,720
bit of an acceptance test almost to to

722
00:32:12,720 --> 00:32:15,080
just

723
00:32:15,539 --> 00:32:18,840
uh let's see yeah

724
00:32:18,840 --> 00:32:21,600
and then general purpose toolkits they

725
00:32:21,600 --> 00:32:23,880
they they do exist we all know I mean we

726
00:32:23,880 --> 00:32:27,360
got Kali and parrot and all those things

727
00:32:27,360 --> 00:32:30,419
um uh as I was saying they they come

728
00:32:30,419 --> 00:32:32,159
with very few Tools in them so you're

729
00:32:32,159 --> 00:32:33,600
going to have to do some your own

730
00:32:33,600 --> 00:32:36,419
assembly and I'll run an example of that

731
00:32:36,419 --> 00:32:38,580
in a second

732
00:32:38,580 --> 00:32:39,960
um very versatile

733
00:32:39,960 --> 00:32:43,200
so you're used to if you're getting used

734
00:32:43,200 --> 00:32:44,399
to Containers you're getting used to

735
00:32:44,399 --> 00:32:46,140
something that's not versatile it only

736
00:32:46,140 --> 00:32:48,059
does one thing that and the one thing

737
00:32:48,059 --> 00:32:49,679
that you tell it to do

738
00:32:49,679 --> 00:32:51,600
um these are are have more of a kitchen

739
00:32:51,600 --> 00:32:54,000
sink to them but they don't start out

740
00:32:54,000 --> 00:32:55,440
that way you'll have to install your own

741
00:32:55,440 --> 00:32:59,000
stuff and I'll show you that

742
00:32:59,220 --> 00:33:00,720
um because I'll show you that with

743
00:33:00,720 --> 00:33:02,820
what's called a Docker file and talk

744
00:33:02,820 --> 00:33:04,399
about layers

745
00:33:04,399 --> 00:33:07,500
containers are so small and you

746
00:33:07,500 --> 00:33:09,120
sometimes need to tweak things on them

747
00:33:09,120 --> 00:33:12,059
and so there's a file called the docker

748
00:33:12,059 --> 00:33:14,039
file that you can create that says

749
00:33:14,039 --> 00:33:15,899
give me this container but before you

750
00:33:15,899 --> 00:33:17,640
run it I want you to do a couple of

751
00:33:17,640 --> 00:33:19,679
things like the app get install or yum

752
00:33:19,679 --> 00:33:20,659
install

753
00:33:20,659 --> 00:33:23,580
or I want you to copy some files from my

754
00:33:23,580 --> 00:33:25,019
local file system

755
00:33:25,019 --> 00:33:28,019
my web route maybe into the image then

756
00:33:28,019 --> 00:33:33,059
run it and if you if you've dealt with

757
00:33:33,059 --> 00:33:36,240
like virtual machine golden images and

758
00:33:36,240 --> 00:33:37,919
had to to deal with those and then

759
00:33:37,919 --> 00:33:40,080
adding things on top that's really what

760
00:33:40,080 --> 00:33:42,539
a Docker file's purpose in life is is

761
00:33:42,539 --> 00:33:44,820
hey I keep running these darn things

762
00:33:44,820 --> 00:33:47,279
so if maybe

763
00:33:47,279 --> 00:33:48,960
I find myself

764
00:33:48,960 --> 00:33:51,000
running

765
00:33:51,000 --> 00:33:53,700
let's see oh yeah

766
00:33:53,700 --> 00:33:56,640
Ubuntu you'll do

767
00:33:56,640 --> 00:33:57,659
um

768
00:33:57,659 --> 00:34:00,779
I have too many dashes again

769
00:34:00,779 --> 00:34:03,480
so here I am and if I found myself you

770
00:34:03,480 --> 00:34:06,059
know every time I want to do this uh

771
00:34:06,059 --> 00:34:09,059
update

772
00:34:09,780 --> 00:34:13,739
and then once I finish that and I must

773
00:34:13,739 --> 00:34:15,800
be on the ultra wide

774
00:34:15,800 --> 00:34:20,879
up uh install uh

775
00:34:21,440 --> 00:34:23,879
nmap maybe I'm going to do some nmap

776
00:34:23,879 --> 00:34:26,060
stuff

777
00:34:26,399 --> 00:34:28,440
I should only ever

778
00:34:28,440 --> 00:34:30,719
um I should write this down and not have

779
00:34:30,719 --> 00:34:33,239
to type it myself because right now I've

780
00:34:33,239 --> 00:34:36,179
taken already 45 seconds doing this and

781
00:34:36,179 --> 00:34:38,159
then you know I'm gonna

782
00:34:38,159 --> 00:34:41,599
run my actual command

783
00:34:42,359 --> 00:34:44,418
the way it goes

784
00:34:44,418 --> 00:34:47,699
what I want is that instantaneous like

785
00:34:47,699 --> 00:34:50,040
let's just go

786
00:34:50,040 --> 00:34:52,739
and that's what a Docker file does so

787
00:34:52,739 --> 00:34:55,879
not going to be on the quiz

788
00:34:56,940 --> 00:34:58,980
but a useful thing to know that you can

789
00:34:58,980 --> 00:35:01,680
do and if you have to learn it yourself

790
00:35:01,680 --> 00:35:03,660
you have to learn it yourself if you

791
00:35:03,660 --> 00:35:05,520
have somebody who knows Docker and knows

792
00:35:05,520 --> 00:35:07,140
the continuous integration and the

793
00:35:07,140 --> 00:35:10,760
development which you might

794
00:35:10,760 --> 00:35:14,099
you'll be able to say hey I saw this guy

795
00:35:14,099 --> 00:35:16,619
talking his demo didn't always work but

796
00:35:16,619 --> 00:35:18,420
this part did

797
00:35:18,420 --> 00:35:21,300
um that he said hey I can just ask you

798
00:35:21,300 --> 00:35:22,859
to make an Ubuntu image that then

799
00:35:22,859 --> 00:35:25,140
updates and installs this thing and then

800
00:35:25,140 --> 00:35:28,200
it just runs a shell or just runs edmap

801
00:35:28,200 --> 00:35:31,200
www.apple.com

802
00:35:31,200 --> 00:35:33,060
and they'll say yep that is totally

803
00:35:33,060 --> 00:35:37,500
possible and I'll do it for you and what

804
00:35:37,500 --> 00:35:41,700
you'll end up with is

805
00:35:42,839 --> 00:35:45,480
these are all destroyed at the end so

806
00:35:45,480 --> 00:35:48,780
this is my last one but it doesn't have

807
00:35:48,780 --> 00:35:50,880
a map on it anywhere

808
00:35:50,880 --> 00:35:52,680
so nothing on my sleeves it comes back

809
00:35:52,680 --> 00:35:57,000
up as normal my Docker file says I want

810
00:35:57,000 --> 00:35:58,920
a different image one that runs Ubuntu

811
00:35:58,920 --> 00:36:03,200
runs this stuff and then freezes it

812
00:36:03,200 --> 00:36:09,078
and this is the command not on the quiz

813
00:36:11,520 --> 00:36:13,640
um

814
00:36:17,099 --> 00:36:19,500
that just says hey let's make this into

815
00:36:19,500 --> 00:36:21,300
an official one so that instead of me

816
00:36:21,300 --> 00:36:23,760
starting it up logging in changing these

817
00:36:23,760 --> 00:36:26,160
things that's not immutable

818
00:36:26,160 --> 00:36:28,200
um this this actually just gives me a

819
00:36:28,200 --> 00:36:30,359
golden image that already does it and

820
00:36:30,359 --> 00:36:33,440
then I can just run

821
00:36:35,339 --> 00:36:37,380
um

822
00:36:37,380 --> 00:36:40,099
that

823
00:36:41,880 --> 00:36:44,040
and now it does have it

824
00:36:44,040 --> 00:36:47,040
so not on the quiz I swear oh there's my

825
00:36:47,040 --> 00:36:48,359
coffee

826
00:36:48,359 --> 00:36:49,560
um not on the quiz but a good thing to

827
00:36:49,560 --> 00:36:51,960
know useful thing to know that that as

828
00:36:51,960 --> 00:36:53,339
you're learning it or is you're finding

829
00:36:53,339 --> 00:36:54,540
people who do know it that are going to

830
00:36:54,540 --> 00:36:58,160
help you that's that's there

831
00:37:01,200 --> 00:37:02,460
all right

832
00:37:02,460 --> 00:37:06,380
so I promised you some continuous attack

833
00:37:07,320 --> 00:37:10,260
and here's where it gets cool for me

834
00:37:10,260 --> 00:37:12,599
who's heard the term shift left

835
00:37:12,599 --> 00:37:14,940
yeah that's pretty good counting okay

836
00:37:14,940 --> 00:37:17,160
good because we're all application

837
00:37:17,160 --> 00:37:18,780
people

838
00:37:18,780 --> 00:37:21,359
um cool uh for anyone who hasn't the

839
00:37:21,359 --> 00:37:23,579
idea of Shifting left really is just we

840
00:37:23,579 --> 00:37:25,079
have this life cycle of an application

841
00:37:25,079 --> 00:37:27,599
where we we do some research we develop

842
00:37:27,599 --> 00:37:28,800
it

843
00:37:28,800 --> 00:37:31,320
um what did I say we deploy it and then

844
00:37:31,320 --> 00:37:33,420
it's in production and that if you

845
00:37:33,420 --> 00:37:34,920
consider that to be a right to left

846
00:37:34,920 --> 00:37:36,660
progression

847
00:37:36,660 --> 00:37:38,280
what if you can get your application

848
00:37:38,280 --> 00:37:41,220
security over to the right towards the

849
00:37:41,220 --> 00:37:43,200
research towards the development end of

850
00:37:43,200 --> 00:37:46,020
things you're way better off fixing one

851
00:37:46,020 --> 00:37:47,520
problem in development is better than

852
00:37:47,520 --> 00:37:49,920
fixing to 100 instances of it that you

853
00:37:49,920 --> 00:37:52,079
end up with in production

854
00:37:52,079 --> 00:37:55,640
so that's all we're really talking about

855
00:37:56,160 --> 00:37:58,380
because this stuff is so small and so

856
00:37:58,380 --> 00:37:59,640
easy to run

857
00:37:59,640 --> 00:38:01,800
what we can do is we can actually do

858
00:38:01,800 --> 00:38:04,859
this in every stage is you saw me you're

859
00:38:04,859 --> 00:38:07,500
just running commands you know just

860
00:38:07,500 --> 00:38:10,200
running what was in the readme and

861
00:38:10,200 --> 00:38:13,260
getting Real Results developers once you

862
00:38:13,260 --> 00:38:16,079
show them the tools they also can say

863
00:38:16,079 --> 00:38:18,480
hey I'm gonna I'm thinking about using

864
00:38:18,480 --> 00:38:20,220
this container I think what I'll do

865
00:38:20,220 --> 00:38:22,440
first is start it up like I did with

866
00:38:22,440 --> 00:38:24,599
juice shop and WordPress and then run

867
00:38:24,599 --> 00:38:26,760
these bunch of other tools that we run

868
00:38:26,760 --> 00:38:28,200
here

869
00:38:28,200 --> 00:38:30,060
they're doing it on their laptop but

870
00:38:30,060 --> 00:38:32,220
because it's a container it's Universal

871
00:38:32,220 --> 00:38:33,780
everywhere so it'll be the same as in

872
00:38:33,780 --> 00:38:36,000
production and you can automate your

873
00:38:36,000 --> 00:38:37,820
attack

874
00:38:37,820 --> 00:38:39,480
so

875
00:38:39,480 --> 00:38:41,339
getting all the way to the research

876
00:38:41,339 --> 00:38:43,980
phase is really cool development's a

877
00:38:43,980 --> 00:38:45,599
little bit easier because Version

878
00:38:45,599 --> 00:38:48,780
Control Systems as you know can kick off

879
00:38:48,780 --> 00:38:50,940
automated tests throw these in in

880
00:38:50,940 --> 00:38:53,220
parallel and

881
00:38:53,220 --> 00:38:56,160
most of the time the security tests if

882
00:38:56,160 --> 00:38:58,140
they're small containers are going to

883
00:38:58,140 --> 00:39:01,140
outrun the acceptance tests so that

884
00:39:01,140 --> 00:39:02,880
stuff will be done right away

885
00:39:02,880 --> 00:39:04,500
could even potentially save you some

886
00:39:04,500 --> 00:39:06,780
time on builds if they're failing really

887
00:39:06,780 --> 00:39:10,380
fast I think I think we've all learned

888
00:39:10,380 --> 00:39:13,020
that the order in which tests run can

889
00:39:13,020 --> 00:39:15,960
can be important uh to to put the the

890
00:39:15,960 --> 00:39:17,820
most fragile ones first so that you fail

891
00:39:17,820 --> 00:39:19,440
early

892
00:39:19,440 --> 00:39:22,920
um deployment and production I would

893
00:39:22,920 --> 00:39:24,540
encourage you since these are such

894
00:39:24,540 --> 00:39:26,460
lightweight things to run them all the

895
00:39:26,460 --> 00:39:29,880
time your monitoring system could just

896
00:39:29,880 --> 00:39:31,820
start a Docker container for 10 seconds

897
00:39:31,820 --> 00:39:35,400
stop and then report on your monitoring

898
00:39:35,400 --> 00:39:37,680
board you're on your dashboard a green

899
00:39:37,680 --> 00:39:38,520
light

900
00:39:38,520 --> 00:39:40,440
there's no reason not to they're so

901
00:39:40,440 --> 00:39:42,480
lightweight

902
00:39:42,480 --> 00:39:43,980
you're going to want to share the

903
00:39:43,980 --> 00:39:45,359
results of this with the developers and

904
00:39:45,359 --> 00:39:47,700
borrow their knowledge so I'll go

905
00:39:47,700 --> 00:39:51,119
slightly evangelist for Dev SEC Ops

906
00:39:51,119 --> 00:39:52,560
um sorry if you're one of the people who

907
00:39:52,560 --> 00:39:54,839
doesn't like that term but I do and

908
00:39:54,839 --> 00:39:56,359
that's a whole other talk

909
00:39:56,359 --> 00:39:59,099
is that

910
00:39:59,099 --> 00:40:00,900
they've got some fun tools that you've

911
00:40:00,900 --> 00:40:02,880
never heard of and you're going to say

912
00:40:02,880 --> 00:40:04,200
hey I heard I can do this thing with a

913
00:40:04,200 --> 00:40:05,339
Docker file and they're going to say oh

914
00:40:05,339 --> 00:40:07,800
yeah oh yeah watch this you know hold my

915
00:40:07,800 --> 00:40:10,680
beard so I think we've got lots of

916
00:40:10,680 --> 00:40:12,839
opportunities for cross-pollination for

917
00:40:12,839 --> 00:40:14,880
me to say hey we thought about using

918
00:40:14,880 --> 00:40:16,619
Docker to test our security the

919
00:40:16,619 --> 00:40:18,240
developers would be like wow this shiny

920
00:40:18,240 --> 00:40:20,040
new awesome then they do stuff then

921
00:40:20,040 --> 00:40:21,180
they're like what have you been doing

922
00:40:21,180 --> 00:40:22,980
and I'm like I don't know I was typing

923
00:40:22,980 --> 00:40:24,420
this stuff but then I had a variable

924
00:40:24,420 --> 00:40:26,220
that had spaces in it when it was

925
00:40:26,220 --> 00:40:28,140
expanded and the developers you know

926
00:40:28,140 --> 00:40:30,119
they've they help you with that so

927
00:40:30,119 --> 00:40:31,940
borrowing is really really really really

928
00:40:31,940 --> 00:40:34,859
the spirit here

929
00:40:34,859 --> 00:40:36,359
um

930
00:40:36,359 --> 00:40:39,300
and here's where I would say to start

931
00:40:39,300 --> 00:40:43,500
is to pick a web application it doesn't

932
00:40:43,500 --> 00:40:46,320
even have to be your own but get

933
00:40:46,320 --> 00:40:47,760
something running maybe in a development

934
00:40:47,760 --> 00:40:50,460
environment maybe not uh just do some

935
00:40:50,460 --> 00:40:52,079
basic attacks like the ones that I've

936
00:40:52,079 --> 00:40:54,720
shown uh they're they're so simple we

937
00:40:54,720 --> 00:40:57,119
already got uh like three confetti

938
00:40:57,119 --> 00:40:59,579
cannons out of your shop let's see what

939
00:40:59,579 --> 00:41:00,900
we've got

940
00:41:00,900 --> 00:41:03,000
ah still on

941
00:41:03,000 --> 00:41:04,500
um but we've already got a confetti

942
00:41:04,500 --> 00:41:06,060
cannon out of here it was a super simple

943
00:41:06,060 --> 00:41:09,000
stock test so that's really easy to do

944
00:41:09,000 --> 00:41:11,820
so don't boil the ocean but but have

945
00:41:11,820 --> 00:41:13,260
some fun

946
00:41:13,260 --> 00:41:16,020
um getting fancy I think requires you to

947
00:41:16,020 --> 00:41:17,700
chat with the developers and say hey

948
00:41:17,700 --> 00:41:21,540
what's what's good uh for you guys like

949
00:41:21,540 --> 00:41:24,660
what pieces do you expect to run what

950
00:41:24,660 --> 00:41:25,920
are you acceptance testing and then

951
00:41:25,920 --> 00:41:27,480
saying hey we're going to hit those

952
00:41:27,480 --> 00:41:29,579
with our tools as well

953
00:41:29,579 --> 00:41:31,099
um so get fancy with their help

954
00:41:31,099 --> 00:41:33,000
definitely integrate into the

955
00:41:33,000 --> 00:41:36,599
development pipeline so that your test

956
00:41:36,599 --> 00:41:39,480
security as a first-class citizen along

957
00:41:39,480 --> 00:41:42,000
with testing functions and acceptance

958
00:41:42,000 --> 00:41:45,540
tests and what happened

959
00:41:45,540 --> 00:41:47,160
and I do think you should totally

960
00:41:47,160 --> 00:41:49,500
integrate it into monitoring it's so

961
00:41:49,500 --> 00:41:52,079
simple it's one little command and it

962
00:41:52,079 --> 00:41:54,240
doesn't take much CPU my fan is still

963
00:41:54,240 --> 00:41:55,220
not running

964
00:41:55,220 --> 00:41:58,440
and it's it's a

965
00:41:58,440 --> 00:42:00,540
I think it's the wave of the future

966
00:42:00,540 --> 00:42:04,700
uh questions yeah

967
00:42:06,859 --> 00:42:09,839
API most of our serverless projects now

968
00:42:09,839 --> 00:42:10,859
and use

969
00:42:10,859 --> 00:42:14,099
apis yeah so have you seen any tools

970
00:42:14,099 --> 00:42:16,020
that will just suggest that

971
00:42:16,020 --> 00:42:18,839
I have I have

972
00:42:18,839 --> 00:42:20,640
um in fact the stuff I was working on at

973
00:42:20,640 --> 00:42:22,980
Palo Alto yesterday so the question was

974
00:42:22,980 --> 00:42:24,660
about um particularly with serverless

975
00:42:24,660 --> 00:42:26,760
the developers will have an open API

976
00:42:26,760 --> 00:42:29,940
spec file um used to be called Swagger

977
00:42:29,940 --> 00:42:31,980
um and that'll say these are the

978
00:42:31,980 --> 00:42:35,339
expected inputs and the expected types

979
00:42:35,339 --> 00:42:36,900
and the expected things that will come

980
00:42:36,900 --> 00:42:39,900
back out there are the The Savvy next

981
00:42:39,900 --> 00:42:42,420
generation tools can take an open API

982
00:42:42,420 --> 00:42:44,820
file import it and then

983
00:42:44,820 --> 00:42:45,480
um

984
00:42:45,480 --> 00:42:48,060
apply that particularly to defense

985
00:42:48,060 --> 00:42:52,460
but but also should be for attack

986
00:42:57,599 --> 00:42:59,339
or anything like that so I've gone into

987
00:42:59,339 --> 00:43:01,079
doctor and just figured it to use more

988
00:43:01,079 --> 00:43:02,940
CPU but I've found that things work more

989
00:43:02,940 --> 00:43:05,819
performantly that way as well okay all

990
00:43:05,819 --> 00:43:08,880
right so I've been skimping on CPU but I

991
00:43:08,880 --> 00:43:10,440
could have cranked it up

992
00:43:10,440 --> 00:43:13,980
okay yeah you mentioned uh using this to

993
00:43:13,980 --> 00:43:17,040
keep track of exact testing environments

994
00:43:17,040 --> 00:43:20,060
how to conversion libraries and things

995
00:43:20,060 --> 00:43:22,800
like when you do an ABD update yeah

996
00:43:22,800 --> 00:43:27,480
update you're randomly gonna get a yeah

997
00:43:27,480 --> 00:43:29,280
what it does is

998
00:43:29,280 --> 00:43:31,980
um the docker file itself

999
00:43:31,980 --> 00:43:35,220
says what I'm going to do is take an

1000
00:43:35,220 --> 00:43:37,079
image as my base

1001
00:43:37,079 --> 00:43:39,119
run those couple of commands which could

1002
00:43:39,119 --> 00:43:40,440
be pulling whatever the latest version

1003
00:43:40,440 --> 00:43:43,800
is and then freeze the image

1004
00:43:43,800 --> 00:43:46,920
and so you only build it once

1005
00:43:46,920 --> 00:43:50,660
and then you run it multiple times

1006
00:43:52,380 --> 00:43:54,859
what else

1007
00:43:55,520 --> 00:43:58,200
fix and looking at the standard out to

1008
00:43:58,200 --> 00:43:59,940
see if it's rendered has actually

1009
00:43:59,940 --> 00:44:02,220
provided an image that has known

1010
00:44:02,220 --> 00:44:04,619
vulnerabilities already yeah all sorts

1011
00:44:04,619 --> 00:44:07,380
of vulnerability tests you can do npm

1012
00:44:07,380 --> 00:44:10,740
and and more and I I would I would even

1013
00:44:10,740 --> 00:44:12,420
go so far as to say if you have vendors

1014
00:44:12,420 --> 00:44:15,900
that are are doing the code analysis for

1015
00:44:15,900 --> 00:44:17,579
you and you're buying their products if

1016
00:44:17,579 --> 00:44:19,319
they can't run it out of Docker you

1017
00:44:19,319 --> 00:44:21,960
should laugh them out the door

1018
00:44:21,960 --> 00:44:24,980
what else

1019
00:44:26,520 --> 00:44:28,079
all right that's my time thanks very

1020
00:44:28,079 --> 00:44:29,220
much for your attention I hope you

1021
00:44:29,220 --> 00:44:31,640
learned something

