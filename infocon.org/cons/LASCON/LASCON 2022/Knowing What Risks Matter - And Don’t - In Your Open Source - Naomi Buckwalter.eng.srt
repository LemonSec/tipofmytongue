1
00:00:06,899 --> 00:00:09,080
foreign

2
00:00:17,730 --> 00:00:20,850
[Music]

3
00:00:30,430 --> 00:00:33,489
[Music]

4
00:00:37,280 --> 00:00:45,520
[Music]

5
00:00:51,100 --> 00:00:54,079
[Music]

6
00:00:54,079 --> 00:00:56,940
hey stop talking back there we're in

7
00:00:56,940 --> 00:00:58,079
this meeting now we're in this

8
00:00:58,079 --> 00:00:59,340
presentation you guys are in the right

9
00:00:59,340 --> 00:01:00,800
place

10
00:01:00,800 --> 00:01:03,300
talking about everyone's favorite topic

11
00:01:03,300 --> 00:01:06,659
let's hear it yes open source risk yay

12
00:01:06,659 --> 00:01:09,180
yeah

13
00:01:09,180 --> 00:01:10,740
hey you guys are here you're missing

14
00:01:10,740 --> 00:01:12,479
lunch I appreciate that some of you guys

15
00:01:12,479 --> 00:01:14,520
are eating that's okay I'm not staring

16
00:01:14,520 --> 00:01:17,280
at you chewing or anything you're here

17
00:01:17,280 --> 00:01:19,920
you're here because I also care just as

18
00:01:19,920 --> 00:01:21,060
much as you do hopefully about open

19
00:01:21,060 --> 00:01:22,799
source risk how we can actually get

20
00:01:22,799 --> 00:01:24,439
better at this how do we actually

21
00:01:24,439 --> 00:01:27,240
mitigate and prioritize risk in our open

22
00:01:27,240 --> 00:01:29,939
source in our supply chain

23
00:01:29,939 --> 00:01:31,920
and I'll tell you a little bit about

24
00:01:31,920 --> 00:01:33,420
what we're trying to do right now we're

25
00:01:33,420 --> 00:01:36,900
using CVSs right CVSs I'm telling you

26
00:01:36,900 --> 00:01:38,520
it's a broken system

27
00:01:38,520 --> 00:01:40,020
I'm going to show you some better ways

28
00:01:40,020 --> 00:01:42,600
well hopefully that's why you're here

29
00:01:42,600 --> 00:01:44,460
right Naomi that's why we're here we're

30
00:01:44,460 --> 00:01:46,799
missing lunch for this so

31
00:01:46,799 --> 00:01:49,619
let's talk about open source risk

32
00:01:49,619 --> 00:01:52,860
but first about me my name is Naomi this

33
00:01:52,860 --> 00:01:54,780
is what I look like

34
00:01:54,780 --> 00:01:56,640
I'm the director of product security at

35
00:01:56,640 --> 00:01:58,259
contrast security where our mission is

36
00:01:58,259 --> 00:02:01,079
to get secure code moving

37
00:02:01,079 --> 00:02:03,000
hi welcome you're not late come in just

38
00:02:03,000 --> 00:02:04,140
it's all good

39
00:02:04,140 --> 00:02:06,180
I'm gonna not make you feel awkward at

40
00:02:06,180 --> 00:02:10,258
all uh my Twitter handle Handler's there

41
00:02:10,258 --> 00:02:13,020
uh congratulations to Elon for

42
00:02:13,020 --> 00:02:15,180
purchasing us

43
00:02:15,180 --> 00:02:17,760
uh some of my hobbies are up there too

44
00:02:17,760 --> 00:02:21,080
parenting if one calls parenting a hobby

45
00:02:21,080 --> 00:02:23,340
volleyball and volunteering through my

46
00:02:23,340 --> 00:02:25,080
nonprofit I have one called cyber

47
00:02:25,080 --> 00:02:26,459
security gatebreakers

48
00:02:26,459 --> 00:02:28,260
and we're here to break down this Jason

49
00:02:28,260 --> 00:02:30,959
cyber security all right that's about me

50
00:02:30,959 --> 00:02:33,060
but you didn't come here to hear me talk

51
00:02:33,060 --> 00:02:34,140
about me

52
00:02:34,140 --> 00:02:35,580
all right

53
00:02:35,580 --> 00:02:37,920
let's talk about how we build software

54
00:02:37,920 --> 00:02:40,440
today and you guys are all smart I'm not

55
00:02:40,440 --> 00:02:42,000
going to tell you something you don't

56
00:02:42,000 --> 00:02:43,379
already know

57
00:02:43,379 --> 00:02:45,660
but these slides are fun because I put

58
00:02:45,660 --> 00:02:47,519
animations on them so

59
00:02:47,519 --> 00:02:48,780
let's see this is what our software

60
00:02:48,780 --> 00:02:50,819
Factory looks like today right your Dev

61
00:02:50,819 --> 00:02:53,760
shops your engineering stores or your

62
00:02:53,760 --> 00:02:55,440
teams here this is how we're creating

63
00:02:55,440 --> 00:02:58,819
software today or is it

64
00:02:59,160 --> 00:03:00,959
now when our developers are writing code

65
00:03:00,959 --> 00:03:01,860
they're going to be introducing

66
00:03:01,860 --> 00:03:03,360
vulnerabilities that's just how it is

67
00:03:03,360 --> 00:03:05,519
this is their custom code we're not even

68
00:03:05,519 --> 00:03:07,620
talking about open source yet just the

69
00:03:07,620 --> 00:03:09,420
custom code that they write

70
00:03:09,420 --> 00:03:11,040
inherently will have vulnerabilities

71
00:03:11,040 --> 00:03:12,900
even if you're the best developer in the

72
00:03:12,900 --> 00:03:14,159
world I'm sure you guys are all amazing

73
00:03:14,159 --> 00:03:15,900
Engineers you're still going to have

74
00:03:15,900 --> 00:03:17,159
some vulnerabilities and this is what a

75
00:03:17,159 --> 00:03:18,420
traditional

76
00:03:18,420 --> 00:03:20,400
vulnerability tack factor is going to

77
00:03:20,400 --> 00:03:21,120
look like you're going to have a

78
00:03:21,120 --> 00:03:22,019
traditional

79
00:03:22,019 --> 00:03:25,080
attack attackers cyber security threats

80
00:03:25,080 --> 00:03:27,720
and malicious actors but

81
00:03:27,720 --> 00:03:29,280
this is why there's a big white space

82
00:03:29,280 --> 00:03:30,659
over here

83
00:03:30,659 --> 00:03:33,300
today our software factories include

84
00:03:33,300 --> 00:03:35,940
other things like Dev tools build tools

85
00:03:35,940 --> 00:03:38,340
dependency tools

86
00:03:38,340 --> 00:03:40,260
and we have different

87
00:03:40,260 --> 00:03:43,200
things like open source open source like

88
00:03:43,200 --> 00:03:45,360
I need some lunch too guys open source

89
00:03:45,360 --> 00:03:46,920
libraries

90
00:03:46,920 --> 00:03:49,140
and we also have the attack vectors that

91
00:03:49,140 --> 00:03:50,819
are not as traditional we have a tax on

92
00:03:50,819 --> 00:03:53,760
software on the software Factory itself

93
00:03:53,760 --> 00:03:55,680
as well as attacks on the software

94
00:03:55,680 --> 00:03:57,599
supply chain so if you're thinking about

95
00:03:57,599 --> 00:03:59,760
this think about some of those

96
00:03:59,760 --> 00:04:02,459
previous examples which I took studious

97
00:04:02,459 --> 00:04:04,620
notes on

98
00:04:04,620 --> 00:04:07,140
who can tell me a very famous supply

99
00:04:07,140 --> 00:04:10,200
chain attack that happened very recently

100
00:04:10,200 --> 00:04:11,640
solarwinds thank you that was the only

101
00:04:11,640 --> 00:04:14,239
one I had actually in my example perfect

102
00:04:14,239 --> 00:04:16,500
he's a plant can say that was a good one

103
00:04:16,500 --> 00:04:18,720
so you ransomware yep so what happened

104
00:04:18,720 --> 00:04:21,238
with uh solarwinds Orion anybody know

105
00:04:21,238 --> 00:04:23,400
what part of the supply chain here the

106
00:04:23,400 --> 00:04:24,840
factory

107
00:04:24,840 --> 00:04:26,639
was compromised

108
00:04:26,639 --> 00:04:28,380
Bill system yes

109
00:04:28,380 --> 00:04:30,259
this guy's smart

110
00:04:30,259 --> 00:04:32,820
he says he learned it yesterday

111
00:04:32,820 --> 00:04:34,380
so

112
00:04:34,380 --> 00:04:37,740
um and and what Orion was servicing what

113
00:04:37,740 --> 00:04:39,600
hundreds of clients if not thousands in

114
00:04:39,600 --> 00:04:42,240
it uh erect a lot of us I don't know if

115
00:04:42,240 --> 00:04:43,440
you were affected don't want to call

116
00:04:43,440 --> 00:04:44,220
that out

117
00:04:44,220 --> 00:04:46,020
but we want to be

118
00:04:46,020 --> 00:04:48,139
we want to be on top of these things

119
00:04:48,139 --> 00:04:50,699
solarwinds was really bad things like

120
00:04:50,699 --> 00:04:52,320
dependency confusion

121
00:04:52,320 --> 00:04:54,300
have you heard of this one this one's

122
00:04:54,300 --> 00:04:55,199
really interesting who knows about

123
00:04:55,199 --> 00:04:58,080
dependency confusion yes yes oh awesome

124
00:04:58,080 --> 00:04:59,400
Adam

125
00:04:59,400 --> 00:05:01,320
so the idea here is

126
00:05:01,320 --> 00:05:04,699
your package managers will check public

127
00:05:04,699 --> 00:05:06,840
repositories before they check private

128
00:05:06,840 --> 00:05:09,840
ones in some cases so one guy decided

129
00:05:09,840 --> 00:05:11,400
I'm going to check something he's going

130
00:05:11,400 --> 00:05:13,740
to make package names guessing the

131
00:05:13,740 --> 00:05:15,240
internal package names of companies like

132
00:05:15,240 --> 00:05:17,340
apple Microsoft PayPal and he actually

133
00:05:17,340 --> 00:05:18,660
guessed right he actually was able to

134
00:05:18,660 --> 00:05:21,300
like inject his own packages using this

135
00:05:21,300 --> 00:05:23,820
dependency confusion thing another part

136
00:05:23,820 --> 00:05:25,560
of the supply chain so things that you

137
00:05:25,560 --> 00:05:27,000
probably didn't even concern yourself

138
00:05:27,000 --> 00:05:27,840
with

139
00:05:27,840 --> 00:05:30,000
they're all built in because all these

140
00:05:30,000 --> 00:05:32,160
vulnerabilities are built in because

141
00:05:32,160 --> 00:05:35,580
of how software is written today

142
00:05:35,580 --> 00:05:37,440
and if you think about it

143
00:05:37,440 --> 00:05:40,860
the more you adopt open source the

144
00:05:40,860 --> 00:05:42,419
higher your risk is going to be and I'm

145
00:05:42,419 --> 00:05:44,220
going to spend the next 20 or 30 minutes

146
00:05:44,220 --> 00:05:46,919
with you describing why that is if you

147
00:05:46,919 --> 00:05:48,240
don't believe me already again you're

148
00:05:48,240 --> 00:05:49,860
all smart I'm not going to tell you

149
00:05:49,860 --> 00:05:52,820
something you don't already know

150
00:05:52,919 --> 00:05:54,120
I'm not going to read this whole thing

151
00:05:54,120 --> 00:05:55,860
but just that bold one I want to call

152
00:05:55,860 --> 00:05:58,259
this out vulnerability is an open source

153
00:05:58,259 --> 00:06:01,080
code increased 50 just last year

154
00:06:01,080 --> 00:06:02,940
and who can tell me the number of CVS

155
00:06:02,940 --> 00:06:06,120
that are actually published or sent to

156
00:06:06,120 --> 00:06:09,600
the public cve places uh every day you

157
00:06:09,600 --> 00:06:11,639
can tell me that just guess

158
00:06:11,639 --> 00:06:15,419
lesson 10 15. close not not that close

159
00:06:15,419 --> 00:06:16,639
what

160
00:06:16,639 --> 00:06:20,340
no sorry sorry it's actually a less than

161
00:06:20,340 --> 00:06:22,380
100 but still pretty high 70 something

162
00:06:22,380 --> 00:06:24,900
on average every day a new new CVS are

163
00:06:24,900 --> 00:06:26,759
published to monitor to all those

164
00:06:26,759 --> 00:06:28,680
different places the the repository is

165
00:06:28,680 --> 00:06:30,960
there it's a lot

166
00:06:30,960 --> 00:06:34,680
and so as we are adopting open source

167
00:06:34,680 --> 00:06:37,620
you could see a 50 annual increase for

168
00:06:37,620 --> 00:06:39,900
companies using open source so this even

169
00:06:39,900 --> 00:06:42,180
this pandemic has accelerated something

170
00:06:42,180 --> 00:06:43,740
like digital transformation it's like

171
00:06:43,740 --> 00:06:45,240
the fancy term for it people are

172
00:06:45,240 --> 00:06:46,940
actually doing more of this building

173
00:06:46,940 --> 00:06:49,800
using open source for their companies

174
00:06:49,800 --> 00:06:53,160
makes sense an average of 118 libraries

175
00:06:53,160 --> 00:06:54,960
for open source libraries found in

176
00:06:54,960 --> 00:06:56,280
applications

177
00:06:56,280 --> 00:06:58,440
and here focus on this one this bold one

178
00:06:58,440 --> 00:07:00,300
the likelihood of a serious

179
00:07:00,300 --> 00:07:01,919
vulnerability in the library increases

180
00:07:01,919 --> 00:07:05,400
6.2 times as the library ages from one

181
00:07:05,400 --> 00:07:07,319
to four years old which is very

182
00:07:07,319 --> 00:07:08,819
important because who wants to guess

183
00:07:08,819 --> 00:07:11,400
what's the average time it takes for a

184
00:07:11,400 --> 00:07:14,100
vulnerability to be published or found

185
00:07:14,100 --> 00:07:17,220
in open source who wants to guess

186
00:07:17,220 --> 00:07:20,400
audience participation check

187
00:07:20,400 --> 00:07:24,360
one year no eight months 18 months oh no

188
00:07:24,360 --> 00:07:26,039
that's the breach that's how long it

189
00:07:26,039 --> 00:07:27,960
takes to discover a breach

190
00:07:27,960 --> 00:07:30,060
we all have jobs forever guys we're not

191
00:07:30,060 --> 00:07:31,740
going anywhere

192
00:07:31,740 --> 00:07:35,220
so no it takes four years GitHub GitHub

193
00:07:35,220 --> 00:07:38,400
John GitHub you guys did a study awesome

194
00:07:38,400 --> 00:07:40,440
study that said like on average it takes

195
00:07:40,440 --> 00:07:42,840
four years for vulnerability to be found

196
00:07:42,840 --> 00:07:45,360
in open source which is crazy if you

197
00:07:45,360 --> 00:07:46,860
think about it so in those four years

198
00:07:46,860 --> 00:07:48,960
that vulnerability has been sitting

199
00:07:48,960 --> 00:07:51,180
there who can tell me how old log4j that

200
00:07:51,180 --> 00:07:53,400
vulnerability how old was that before us

201
00:07:53,400 --> 00:07:54,900
discovered

202
00:07:54,900 --> 00:07:56,460
you can give me the year that I had to

203
00:07:56,460 --> 00:07:58,620
look this up it's not like I knew this

204
00:07:58,620 --> 00:08:01,800
is close close it was actually 2013. so

205
00:08:01,800 --> 00:08:03,060
it was almost like eight nine years

206
00:08:03,060 --> 00:08:04,800
before it was actually you know someone

207
00:08:04,800 --> 00:08:07,740
knew about it and then it blew up right

208
00:08:07,740 --> 00:08:09,240
so

209
00:08:09,240 --> 00:08:10,680
but what are some of these ways that we

210
00:08:10,680 --> 00:08:11,819
can actually get better that's what this

211
00:08:11,819 --> 00:08:12,720
talks about

212
00:08:12,720 --> 00:08:13,979
uh and then take a look at this

213
00:08:13,979 --> 00:08:16,620
highlighted one here uh once TVs are

214
00:08:16,620 --> 00:08:18,180
trending people start talking about on

215
00:08:18,180 --> 00:08:20,520
Twitter again thank you Elon

216
00:08:20,520 --> 00:08:22,800
once people are talking about cbes the

217
00:08:22,800 --> 00:08:24,660
Bad actors are going to try to exploit

218
00:08:24,660 --> 00:08:26,879
them just because uh they're trending

219
00:08:26,879 --> 00:08:28,919
but here's another interesting statistic

220
00:08:28,919 --> 00:08:32,039
what percentage of vulnerabilities have

221
00:08:32,039 --> 00:08:34,440
exploit code written for it of all time

222
00:08:34,440 --> 00:08:36,839
who wants to guess what percentage

223
00:08:36,839 --> 00:08:39,719
of CVS

224
00:08:39,719 --> 00:08:42,059
yeah one percent two percent

225
00:08:42,059 --> 00:08:44,039
crazy right two percent

226
00:08:44,039 --> 00:08:46,560
of all CVS of all time have exploit code

227
00:08:46,560 --> 00:08:48,360
written it so what are we doing to our

228
00:08:48,360 --> 00:08:50,160
poor developers today as security people

229
00:08:50,160 --> 00:08:52,920
do we not walk up to them with a list of

230
00:08:52,920 --> 00:08:54,839
cves and vulnerable libraries and be

231
00:08:54,839 --> 00:08:56,640
like here patch this

232
00:08:56,640 --> 00:08:58,920
like they hate that who's a developer

233
00:08:58,920 --> 00:09:00,360
here

234
00:09:00,360 --> 00:09:03,300
see he hates me right be like here

235
00:09:03,300 --> 00:09:04,860
here's some vulnerabilities go ahead and

236
00:09:04,860 --> 00:09:08,120
fix that what's taking you so long

237
00:09:08,220 --> 00:09:10,080
and then we you and even worse we use

238
00:09:10,080 --> 00:09:12,420
CVSs to be like it's a high it's a

239
00:09:12,420 --> 00:09:16,080
critical right the 10.0 okay who can who

240
00:09:16,080 --> 00:09:17,760
can tell you what the average CVSs score

241
00:09:17,760 --> 00:09:19,620
is you can tell me

242
00:09:19,620 --> 00:09:21,779
what do you think it is

243
00:09:21,779 --> 00:09:24,080
two

244
00:09:24,839 --> 00:09:26,220
this guy

245
00:09:26,220 --> 00:09:27,720
you went I don't have anything to give

246
00:09:27,720 --> 00:09:30,779
you but you win 7.2 average CVSs score

247
00:09:30,779 --> 00:09:32,640
and it's a little bit skewed because if

248
00:09:32,640 --> 00:09:34,380
you are a researcher and you're trying

249
00:09:34,380 --> 00:09:37,440
to publish a cve you're gonna like want

250
00:09:37,440 --> 00:09:38,820
to tell everyone's critical just to get

251
00:09:38,820 --> 00:09:41,160
the clout right so it already kind of

252
00:09:41,160 --> 00:09:44,040
skews high so we don't really need to

253
00:09:44,040 --> 00:09:46,620
use CVSs to say how high or critical

254
00:09:46,620 --> 00:09:47,640
something is because we're not

255
00:09:47,640 --> 00:09:49,740
contextualizing that score we're just

256
00:09:49,740 --> 00:09:50,880
saying here's a vulnerable Library

257
00:09:50,880 --> 00:09:52,560
here's a cve go ahead and Patch this

258
00:09:52,560 --> 00:09:56,279
it's a CVSs 9.8 and then the poor

259
00:09:56,279 --> 00:09:58,019
developers are going to be like we don't

260
00:09:58,019 --> 00:10:00,959
even use this library right right that's

261
00:10:00,959 --> 00:10:02,519
why he hates us

262
00:10:02,519 --> 00:10:04,620
foreign

263
00:10:04,620 --> 00:10:06,240
so is there a better way of doing this

264
00:10:06,240 --> 00:10:07,920
yes yes there is and you are missing

265
00:10:07,920 --> 00:10:09,959
lunch to hear the solution

266
00:10:09,959 --> 00:10:13,019
so the folks at contrast we've created

267
00:10:13,019 --> 00:10:15,540
an open source a state of open source

268
00:10:15,540 --> 00:10:16,920
security report you can go out there

269
00:10:16,920 --> 00:10:19,080
contract security.com we've got a copy

270
00:10:19,080 --> 00:10:21,660
of it nice PDF really long great reading

271
00:10:21,660 --> 00:10:23,459
for children

272
00:10:23,459 --> 00:10:24,600
um you're going to go out there and look

273
00:10:24,600 --> 00:10:26,220
at it we're gonna you're gonna see we

274
00:10:26,220 --> 00:10:28,140
came up with a little bit of a framework

275
00:10:28,140 --> 00:10:30,060
to understand how to actually measure

276
00:10:30,060 --> 00:10:33,360
risk in open source so instead of just

277
00:10:33,360 --> 00:10:35,880
giving somebody a CVSs score and just

278
00:10:35,880 --> 00:10:37,560
say have fun Merry Christmas

279
00:10:37,560 --> 00:10:40,080
right we are actually going to show them

280
00:10:40,080 --> 00:10:41,459
a better way we're going to tell them

281
00:10:41,459 --> 00:10:43,860
contextually how this affects our our

282
00:10:43,860 --> 00:10:45,300
organization how this affects our

283
00:10:45,300 --> 00:10:48,180
application how this risk and again all

284
00:10:48,180 --> 00:10:50,399
security is is managing risk how we are

285
00:10:50,399 --> 00:10:52,740
going to help manage and mitigate risk

286
00:10:52,740 --> 00:10:54,899
for those applications

287
00:10:54,899 --> 00:10:57,180
so we have five layers everything's a

288
00:10:57,180 --> 00:10:59,279
layer in security risk layer what we

289
00:10:59,279 --> 00:11:01,019
need better names for these things right

290
00:11:01,019 --> 00:11:02,700
but anyway we got one two three four

291
00:11:02,700 --> 00:11:04,500
five I'm going to go through each one of

292
00:11:04,500 --> 00:11:05,760
these

293
00:11:05,760 --> 00:11:08,760
so I won't read them straight out to you

294
00:11:08,760 --> 00:11:10,920
but the takeaway here is there's a

295
00:11:10,920 --> 00:11:13,140
better way of doing

296
00:11:13,140 --> 00:11:15,180
risk prioritization

297
00:11:15,180 --> 00:11:17,339
the one that we talk about the most you

298
00:11:17,339 --> 00:11:19,560
can point it out to me out of one two

299
00:11:19,560 --> 00:11:21,300
three four five

300
00:11:21,300 --> 00:11:24,540
who can tell me which one it is it is

301
00:11:24,540 --> 00:11:25,860
for the one we currently use

302
00:11:25,860 --> 00:11:27,600
vulnerabilities in libraries that's what

303
00:11:27,600 --> 00:11:29,519
we're currently using to show our

304
00:11:29,519 --> 00:11:31,260
developers that hey you need to fix this

305
00:11:31,260 --> 00:11:33,779
we're using CVSs scores we're handing

306
00:11:33,779 --> 00:11:35,820
over names of vulnerable libraries and

307
00:11:35,820 --> 00:11:37,860
we're saying patch this it's not working

308
00:11:37,860 --> 00:11:39,360
but it is one of these layers

309
00:11:39,360 --> 00:11:41,100
contextually throughout all the layers

310
00:11:41,100 --> 00:11:42,360
it's going to be better than just the

311
00:11:42,360 --> 00:11:44,160
one layer

312
00:11:44,160 --> 00:11:46,620
all right and here's your obligatory eye

313
00:11:46,620 --> 00:11:49,260
tests for those of you in the back

314
00:11:49,260 --> 00:11:51,480
it's okay I can't really see it either

315
00:11:51,480 --> 00:11:53,640
you're taking a picture today so here it

316
00:11:53,640 --> 00:11:55,819
is

317
00:11:56,519 --> 00:11:58,019
on the left we got the number of

318
00:11:58,019 --> 00:11:59,700
libraries on the right we got the

319
00:11:59,700 --> 00:12:01,079
different Frameworks and the libraries

320
00:12:01,079 --> 00:12:03,899
got java.net node our state of the open

321
00:12:03,899 --> 00:12:07,320
source security report focuses on these

322
00:12:07,320 --> 00:12:09,839
three major languages and Frameworks and

323
00:12:09,839 --> 00:12:11,300
you'll notice a massive difference

324
00:12:11,300 --> 00:12:13,440
between the different languages and

325
00:12:13,440 --> 00:12:15,779
Frameworks you got Java on average the

326
00:12:15,779 --> 00:12:18,060
number of libraries per application 17

327
00:12:18,060 --> 00:12:20,040
of them

328
00:12:20,040 --> 00:12:22,440
use zero to 24 libraries for that

329
00:12:22,440 --> 00:12:23,399
application

330
00:12:23,399 --> 00:12:25,440
compare it to net and this is

331
00:12:25,440 --> 00:12:29,160
interesting there's one library in 43 on

332
00:12:29,160 --> 00:12:31,320
average of.net applications who can tell

333
00:12:31,320 --> 00:12:33,839
me what that library is if you can who's

334
00:12:33,839 --> 00:12:36,920
a.net developer yeah

335
00:12:37,860 --> 00:12:39,899
I'm not a dynamic developer I have no

336
00:12:39,899 --> 00:12:42,480
idea what no no

337
00:12:42,480 --> 00:12:44,240
you could have told me anything bro

338
00:12:44,240 --> 00:12:48,540
because it said literally okay uh so 43

339
00:12:48,540 --> 00:12:50,639
of.net and this is because it's a closed

340
00:12:50,639 --> 00:12:52,680
ecosystem Java you just got a lot more

341
00:12:52,680 --> 00:12:54,300
Java bundles everything together be like

342
00:12:54,300 --> 00:12:56,100
here's spring here's and then you're

343
00:12:56,100 --> 00:12:57,660
like okay I can build all the things but

344
00:12:57,660 --> 00:12:59,399
like.net you know you really can just do

345
00:12:59,399 --> 00:13:01,019
basic stuff node here and this is

346
00:13:01,019 --> 00:13:03,120
interesting who's ever done a node

347
00:13:03,120 --> 00:13:04,079
project

348
00:13:04,079 --> 00:13:06,720
yeah is it is it not true where you want

349
00:13:06,720 --> 00:13:08,880
to do one thing and then you need to

350
00:13:08,880 --> 00:13:10,920
like download 500 Megs of dependencies

351
00:13:10,920 --> 00:13:12,779
right you're just like this is great my

352
00:13:12,779 --> 00:13:14,700
package is going to be so small now

353
00:13:14,700 --> 00:13:16,980
my binaries no

354
00:13:16,980 --> 00:13:19,079
sorry so that's the idea like the

355
00:13:19,079 --> 00:13:21,839
average is over here

356
00:13:21,839 --> 00:13:24,660
uh have almost a thousands like almost

357
00:13:24,660 --> 00:13:27,240
over a thousand on average for node for

358
00:13:27,240 --> 00:13:29,160
node applications and and that's crazy

359
00:13:29,160 --> 00:13:30,240
but

360
00:13:30,240 --> 00:13:31,740
some of the insights there question

361
00:13:31,740 --> 00:13:34,399
already nice

362
00:13:34,920 --> 00:13:36,839
oh Transit I'm going to get to that no

363
00:13:36,839 --> 00:13:39,120
it does not does not these are just

364
00:13:39,120 --> 00:13:43,279
first level first order dependencies yes

365
00:13:44,839 --> 00:13:47,040
yeah he's asking about transitive

366
00:13:47,040 --> 00:13:48,420
dependencies or dependency of

367
00:13:48,420 --> 00:13:50,279
dependencies dependencies of Depends

368
00:13:50,279 --> 00:13:52,500
I'll get to that but no these are just

369
00:13:52,500 --> 00:13:54,600
those first order dependencies direct

370
00:13:54,600 --> 00:13:57,240
calling libraries all right the insights

371
00:13:57,240 --> 00:13:59,700
for this take a look at Java 125

372
00:13:59,700 --> 00:14:01,740
libraries on average

373
00:14:01,740 --> 00:14:04,260
uh there's a logging framework not not a

374
00:14:04,260 --> 00:14:07,380
log for jet not log4j this one the I

375
00:14:07,380 --> 00:14:08,360
don't even know what this one's called

376
00:14:08,360 --> 00:14:10,740
sslf something other logging framework

377
00:14:10,740 --> 00:14:13,200
here that's the most popular with spring

378
00:14:13,200 --> 00:14:15,300
core or close second and it packages all

379
00:14:15,300 --> 00:14:16,560
these vulnerable libraries up together

380
00:14:16,560 --> 00:14:18,600
I'm going to get to the point here

381
00:14:18,600 --> 00:14:21,180
but if you're packaging up all these

382
00:14:21,180 --> 00:14:22,740
libraries

383
00:14:22,740 --> 00:14:24,600
and all these dependencies

384
00:14:24,600 --> 00:14:25,620
they're going to have some

385
00:14:25,620 --> 00:14:27,240
vulnerabilities in them yes now you're

386
00:14:27,240 --> 00:14:28,980
ready to agree yes

387
00:14:28,980 --> 00:14:31,139
but are you using those libraries are

388
00:14:31,139 --> 00:14:34,260
they active in your application no

389
00:14:34,260 --> 00:14:35,700
No Maybe

390
00:14:35,700 --> 00:14:38,779
you're killing me bro

391
00:14:39,000 --> 00:14:40,320
not all parts right I'm going to get to

392
00:14:40,320 --> 00:14:42,240
that we we have data here in our report

393
00:14:42,240 --> 00:14:44,940
that you guys can download but it shows

394
00:14:44,940 --> 00:14:46,920
how you can use data to show your

395
00:14:46,920 --> 00:14:49,380
developers a better way of assessing

396
00:14:49,380 --> 00:14:51,480
risk for your open source it's not just

397
00:14:51,480 --> 00:14:53,220
throwing those CVSs and I'm trying to

398
00:14:53,220 --> 00:14:55,139
get you guys away from this please

399
00:14:55,139 --> 00:14:56,760
please please if you're a security

400
00:14:56,760 --> 00:14:59,040
person don't just create a report and

401
00:14:59,040 --> 00:15:00,360
send it to the developers they

402
00:15:00,360 --> 00:15:02,940
absolutely hate that awful stuff

403
00:15:02,940 --> 00:15:05,639
dot net on average have less than or

404
00:15:05,639 --> 00:15:07,740
fewer than 14 libraries and here's the

405
00:15:07,740 --> 00:15:08,880
name of the library by the way

406
00:15:08,880 --> 00:15:11,820
system.servicemodel.web

407
00:15:11,820 --> 00:15:13,260
again you could have said anything bro

408
00:15:13,260 --> 00:15:15,300
I've been like yeah that's right top

409
00:15:15,300 --> 00:15:18,600
libraries and 45 applications uh and in

410
00:15:18,600 --> 00:15:21,860
node 65 have 500 or more this is crazy

411
00:15:21,860 --> 00:15:24,000
debug being most popular and this other

412
00:15:24,000 --> 00:15:25,920
wanted to look up uh milliseconds

413
00:15:25,920 --> 00:15:27,720
converting time to milliseconds the

414
00:15:27,720 --> 00:15:28,620
second one

415
00:15:28,620 --> 00:15:31,139
all right now down to the good stuff

416
00:15:31,139 --> 00:15:32,399
that's why you came here and paid all

417
00:15:32,399 --> 00:15:35,399
that money for me right risk layer one

418
00:15:35,399 --> 00:15:37,079
active and inactive libraries I

419
00:15:37,079 --> 00:15:39,120
mentioned this just before this but if

420
00:15:39,120 --> 00:15:40,740
you have all these dependencies and all

421
00:15:40,740 --> 00:15:42,720
these libraries not every single one of

422
00:15:42,720 --> 00:15:43,980
them is going to be active who can kiss

423
00:15:43,980 --> 00:15:47,100
people can guess what percentage

424
00:15:47,100 --> 00:15:48,899
across on average across all

425
00:15:48,899 --> 00:15:51,180
applications are actually uh using like

426
00:15:51,180 --> 00:15:52,920
what percentage of active libraries are

427
00:15:52,920 --> 00:15:54,899
actually being used what libraries are

428
00:15:54,899 --> 00:15:56,760
actually being used by an average

429
00:15:56,760 --> 00:15:57,959
application I could have said that way

430
00:15:57,959 --> 00:15:59,279
better

431
00:15:59,279 --> 00:16:01,740
that's a good guess he said 25 anybody

432
00:16:01,740 --> 00:16:04,560
else you you can't go wrong you can just

433
00:16:04,560 --> 00:16:06,360
literally shout out anything it's not

434
00:16:06,360 --> 00:16:08,160
like I have a whip out here

435
00:16:08,160 --> 00:16:10,079
they're that's really good

436
00:16:10,079 --> 00:16:13,199
but yeah one one dollar one dollar it's

437
00:16:13,199 --> 00:16:15,300
actually 38 percent

438
00:16:15,300 --> 00:16:18,180
I like you guys you guys are great 38 of

439
00:16:18,180 --> 00:16:19,920
all libraries are actually actively

440
00:16:19,920 --> 00:16:21,600
being used by an application and here's

441
00:16:21,600 --> 00:16:23,339
the breakdown that's across all the

442
00:16:23,339 --> 00:16:25,320
application thousands tens of thousands

443
00:16:25,320 --> 00:16:27,660
of the ones that we analyzed across

444
00:16:27,660 --> 00:16:30,060
these on average 38 24 of known

445
00:16:30,060 --> 00:16:34,019
applications 42 in Java and 67 in.net so

446
00:16:34,019 --> 00:16:36,720
if you think about the inverse like that

447
00:16:36,720 --> 00:16:37,820
100

448
00:16:37,820 --> 00:16:40,259
of all libraries and dependencies that

449
00:16:40,259 --> 00:16:42,000
are packaged in as part of your bills

450
00:16:42,000 --> 00:16:44,040
only 38 on average are actually being

451
00:16:44,040 --> 00:16:46,139
used you know that's quite low so you're

452
00:16:46,139 --> 00:16:48,000
thinking you're thinking oh so my open

453
00:16:48,000 --> 00:16:49,980
source risk not that big of a deal right

454
00:16:49,980 --> 00:16:51,600
Naomi and I'll have to tell you no

455
00:16:51,600 --> 00:16:53,519
actually wait hold your horses there's

456
00:16:53,519 --> 00:16:55,199
still some bad things out there I can't

457
00:16:55,199 --> 00:16:56,399
tell you like

458
00:16:56,399 --> 00:16:57,959
like you can't just ignore you can't

459
00:16:57,959 --> 00:17:01,638
just ignore Yeah question again

460
00:17:06,480 --> 00:17:09,240
um actually for for our analysts or

461
00:17:09,240 --> 00:17:11,880
sorry our annual I speak two languages

462
00:17:11,880 --> 00:17:13,319
it gets me confusing

463
00:17:13,319 --> 00:17:16,859
um our analysis uh it is for all any app

464
00:17:16,859 --> 00:17:18,599
that was actually uploaded into our

465
00:17:18,599 --> 00:17:20,579
system so it could contain a Dev and it

466
00:17:20,579 --> 00:17:22,619
could contain products so yeah it's just

467
00:17:22,619 --> 00:17:26,280
everything yes so sorry

468
00:17:26,280 --> 00:17:28,380
all right but some nuances here so if

469
00:17:28,380 --> 00:17:31,260
you take a look at this 12 of the top 50

470
00:17:31,260 --> 00:17:33,120
Java libraries are active in more than

471
00:17:33,120 --> 00:17:36,900
half so even if only what 42 of java

472
00:17:36,900 --> 00:17:40,679
applications have active libraries in it

473
00:17:40,679 --> 00:17:43,740
um I'm sorry 42 of the libraries in a

474
00:17:43,740 --> 00:17:46,080
Java application are active 12 of the

475
00:17:46,080 --> 00:17:48,179
top 50 are in more than half so if I

476
00:17:48,179 --> 00:17:50,580
were a malicious actor

477
00:17:50,580 --> 00:17:54,000
which 12 would I focus on

478
00:17:54,000 --> 00:17:56,220
right the 12 that are of in the top 50.

479
00:17:56,220 --> 00:17:58,080
if I wanted to I'm just going to be like

480
00:17:58,080 --> 00:18:00,840
what are the top 12 uh Java libraries

481
00:18:00,840 --> 00:18:02,640
that are being used across more than 50

482
00:18:02,640 --> 00:18:04,320
of the applications and I would look for

483
00:18:04,320 --> 00:18:06,360
those I would look for the cves and I'd

484
00:18:06,360 --> 00:18:08,340
try to write some exploit code for them

485
00:18:08,340 --> 00:18:10,140
right because attackers aren't stupid

486
00:18:10,140 --> 00:18:11,340
they're and this is the reason why I

487
00:18:11,340 --> 00:18:13,260
want to bring this up they're no longer

488
00:18:13,260 --> 00:18:15,780
going for those single attack or single

489
00:18:15,780 --> 00:18:17,220
Target victims anymore

490
00:18:17,220 --> 00:18:19,620
they're not going for your One banks or

491
00:18:19,620 --> 00:18:20,880
your two things they're going through

492
00:18:20,880 --> 00:18:24,080
supply chain because why

493
00:18:24,240 --> 00:18:27,179
you well yeah well it hits so many more

494
00:18:27,179 --> 00:18:30,179
victims right I think about

495
00:18:30,179 --> 00:18:32,640
um Orion you've got not just one victim

496
00:18:32,640 --> 00:18:34,740
but hundreds and thousands and why not

497
00:18:34,740 --> 00:18:36,179
you spend the same amount of time trying

498
00:18:36,179 --> 00:18:38,160
to pop somebody you're gonna just pop

499
00:18:38,160 --> 00:18:40,200
everybody now and that's what happened

500
00:18:40,200 --> 00:18:42,539
they just profit they're so much smarter

501
00:18:42,539 --> 00:18:43,679
so that's what I would do if I'm

502
00:18:43,679 --> 00:18:45,500
malicious actor

503
00:18:45,500 --> 00:18:48,600
49.net uh have have one active library

504
00:18:48,600 --> 00:18:51,360
and in no top 25 libraries

505
00:18:51,360 --> 00:18:53,700
present are present in 92 of

506
00:18:53,700 --> 00:18:55,380
applications

507
00:18:55,380 --> 00:18:57,360
all right most common Library active in

508
00:18:57,360 --> 00:19:00,059
42 cool

509
00:19:00,059 --> 00:19:01,919
all right so what I'm trying to say is

510
00:19:01,919 --> 00:19:04,679
here we really can't rely on some of the

511
00:19:04,679 --> 00:19:06,539
standard tools that we use today who

512
00:19:06,539 --> 00:19:09,299
here uses software composition analysis

513
00:19:09,299 --> 00:19:13,320
sta okay yep good it's good but it

514
00:19:13,320 --> 00:19:15,419
doesn't give you the full story what you

515
00:19:15,419 --> 00:19:17,039
feed it an s-bomb and it tells you all

516
00:19:17,039 --> 00:19:18,900
the cves related to the libraries that

517
00:19:18,900 --> 00:19:21,299
you're using right like that that's okay

518
00:19:21,299 --> 00:19:22,620
you're still going to need some of that

519
00:19:22,620 --> 00:19:24,240
but again that's not enough you need

520
00:19:24,240 --> 00:19:26,039
contextual information

521
00:19:26,039 --> 00:19:28,440
but in this case for log4j if you notice

522
00:19:28,440 --> 00:19:31,679
we actually found that SCA tools have

523
00:19:31,679 --> 00:19:35,580
over reported log4j so we actually had

524
00:19:35,580 --> 00:19:36,660
one

525
00:19:36,660 --> 00:19:40,140
shall be shall remain nameless but our

526
00:19:40,140 --> 00:19:41,660
endpoint protection system actually

527
00:19:41,660 --> 00:19:44,640
scanned local file system for logforte

528
00:19:44,640 --> 00:19:46,919
so what it was a jar name log4j.jar

529
00:19:46,919 --> 00:19:47,760
right

530
00:19:47,760 --> 00:19:50,460
and it found it in like hundreds of

531
00:19:50,460 --> 00:19:52,799
endpoints and it starts popping alerts

532
00:19:52,799 --> 00:19:54,360
it's like okay yeah we found all these

533
00:19:54,360 --> 00:19:56,520
uh and guess what

534
00:19:56,520 --> 00:19:58,679
that code is never reached that code is

535
00:19:58,679 --> 00:20:00,960
never actually like used at all because

536
00:20:00,960 --> 00:20:02,820
it's just someone happened to download

537
00:20:02,820 --> 00:20:04,919
it or something or a package manager and

538
00:20:04,919 --> 00:20:07,200
put it on their file system it was never

539
00:20:07,200 --> 00:20:08,640
actually used for anything so think

540
00:20:08,640 --> 00:20:10,919
about the false positives that came up

541
00:20:10,919 --> 00:20:12,780
in the Learning System and now you got

542
00:20:12,780 --> 00:20:14,940
to chase down every single one no thanks

543
00:20:14,940 --> 00:20:16,799
see that's where we all retire

544
00:20:16,799 --> 00:20:18,840
we moved to the Bahamas and say you know

545
00:20:18,840 --> 00:20:20,220
I'm just gonna do something else for a

546
00:20:20,220 --> 00:20:22,799
little bit and log4j hopping you know

547
00:20:22,799 --> 00:20:25,440
who was on PTO for log4j

548
00:20:25,440 --> 00:20:26,940
no

549
00:20:26,940 --> 00:20:28,440
you

550
00:20:28,440 --> 00:20:30,900
Chris it was Christmas yeah

551
00:20:30,900 --> 00:20:33,299
oh I'm sorry oh did I bring back bad

552
00:20:33,299 --> 00:20:35,960
memories I'm sorry

553
00:20:37,020 --> 00:20:38,940
no correlation whatsoever yeah that's

554
00:20:38,940 --> 00:20:41,840
Christmas ever actually

555
00:20:42,360 --> 00:20:43,440
all right

556
00:20:43,440 --> 00:20:46,380
so lav4j completely over reported by

557
00:20:46,380 --> 00:20:48,360
standard Shoals

558
00:20:48,360 --> 00:20:50,220
um so what sea won't tell you this is a

559
00:20:50,220 --> 00:20:51,780
contractual data I want to like hit home

560
00:20:51,780 --> 00:20:53,580
for you guys SCA is not going to tell

561
00:20:53,580 --> 00:20:55,320
you if your dependencies are only used

562
00:20:55,320 --> 00:20:56,520
for testing they're not going to tell

563
00:20:56,520 --> 00:20:57,840
you about transitive dependencies

564
00:20:57,840 --> 00:20:59,400
they're not going to tell you about

565
00:20:59,400 --> 00:21:02,039
dependencies that are inactive or unused

566
00:21:02,039 --> 00:21:04,260
right this is the stuff that we need to

567
00:21:04,260 --> 00:21:06,120
help our developers with if we are just

568
00:21:06,120 --> 00:21:08,460
giving them lists of cves and vulnerable

569
00:21:08,460 --> 00:21:10,080
libraries they don't know how to

570
00:21:10,080 --> 00:21:12,120
prioritize that so why don't we help

571
00:21:12,120 --> 00:21:14,100
them out by giving them more information

572
00:21:14,100 --> 00:21:16,020
to help them be like you know what this

573
00:21:16,020 --> 00:21:18,720
one is imminently exploitable we want to

574
00:21:18,720 --> 00:21:20,940
focus on this upgrade or this patch

575
00:21:20,940 --> 00:21:23,039
let's do that one first be for all the

576
00:21:23,039 --> 00:21:24,600
others and they're going to be like oh

577
00:21:24,600 --> 00:21:26,640
my God I love security right they're

578
00:21:26,640 --> 00:21:30,559
gonna go you're so helpful finally

579
00:21:33,480 --> 00:21:35,520
log for Shell here's some numbers for

580
00:21:35,520 --> 00:21:37,980
you some interesting stats that we found

581
00:21:37,980 --> 00:21:41,940
64 of java applications package log4j2

582
00:21:41,940 --> 00:21:45,419
and the still vulnerable log for J1 but

583
00:21:45,419 --> 00:21:48,179
you do need the JMS offender library to

584
00:21:48,179 --> 00:21:49,860
go with it so otherwise it's not

585
00:21:49,860 --> 00:21:51,659
exploitable

586
00:21:51,659 --> 00:21:54,179
um and 50 of java applications package

587
00:21:54,179 --> 00:21:56,760
the vulnerable version of log4j today

588
00:21:56,760 --> 00:22:02,120
so even after yeah Alex is laughing

589
00:22:02,159 --> 00:22:04,679
it is funny it actually is fun like if

590
00:22:04,679 --> 00:22:06,059
you guys go on Twitter like the day

591
00:22:06,059 --> 00:22:09,419
after long for Shell happens like some

592
00:22:09,419 --> 00:22:11,039
people were on the long vacation like

593
00:22:11,039 --> 00:22:12,179
the three-day vacation and they come

594
00:22:12,179 --> 00:22:13,470
back on Monday hey what did I miss

595
00:22:13,470 --> 00:22:16,520
[Laughter]

596
00:22:16,520 --> 00:22:19,020
like ciso Security leaders like what do

597
00:22:19,020 --> 00:22:20,820
I miss and be like you just lost three

598
00:22:20,820 --> 00:22:22,740
days in an incident like you need to

599
00:22:22,740 --> 00:22:24,659
figure yourself out like you just got to

600
00:22:24,659 --> 00:22:26,460
do this now

601
00:22:26,460 --> 00:22:28,320
all right

602
00:22:28,320 --> 00:22:31,559
so uh related spring for shell who heard

603
00:22:31,559 --> 00:22:33,059
about spring for shell

604
00:22:33,059 --> 00:22:34,260
you guys should know about spring for

605
00:22:34,260 --> 00:22:35,340
Shell because it's actually worse than

606
00:22:35,340 --> 00:22:36,480
log for sure

607
00:22:36,480 --> 00:22:37,679
yeah you probably didn't hear about it

608
00:22:37,679 --> 00:22:38,760
right because everyone's freaking out

609
00:22:38,760 --> 00:22:40,260
about lockers

610
00:22:40,260 --> 00:22:42,539
spring MVC you would think you're like

611
00:22:42,539 --> 00:22:44,340
oh I don't none of my job apps use spray

612
00:22:44,340 --> 00:22:46,740
I'm good no it's actually packaged in

613
00:22:46,740 --> 00:22:48,659
like a ton of stuff so if you take a

614
00:22:48,659 --> 00:22:51,419
look 74 of job applications use spring

615
00:22:51,419 --> 00:22:53,220
core they're like oh I don't use spring

616
00:22:53,220 --> 00:22:56,280
MVC that framework's old

617
00:22:56,280 --> 00:23:00,000
74 comes packaged with it 71 of spring

618
00:23:00,000 --> 00:23:02,820
UPS on tomcat and Java 9 have at least

619
00:23:02,820 --> 00:23:05,039
one unchecked Auto binding vulnerability

620
00:23:05,039 --> 00:23:07,799
this is mass assignment guys

621
00:23:07,799 --> 00:23:09,419
this is these numbers are actually

622
00:23:09,419 --> 00:23:11,340
higher than log for shell look at this

623
00:23:11,340 --> 00:23:15,600
yeah 64 versus what 74. so so spring for

624
00:23:15,600 --> 00:23:16,679
show

625
00:23:16,679 --> 00:23:18,900
bigger problem big problem

626
00:23:18,900 --> 00:23:20,880
85 percent of java spring applications

627
00:23:20,880 --> 00:23:23,280
package of vulnerable version so so it

628
00:23:23,280 --> 00:23:24,720
doesn't tell you the true story your s

629
00:23:24,720 --> 00:23:27,480
your sea tools can give you information

630
00:23:27,480 --> 00:23:29,580
you just need to contextualize it and

631
00:23:29,580 --> 00:23:31,559
make it better all right let's head on

632
00:23:31,559 --> 00:23:33,600
over to risk layer 2. active and

633
00:23:33,600 --> 00:23:35,220
inactive Library classes so you've got

634
00:23:35,220 --> 00:23:37,380
your active libraries and interactive

635
00:23:37,380 --> 00:23:38,820
libraries now the cost is within the

636
00:23:38,820 --> 00:23:40,500
libraries themselves

637
00:23:40,500 --> 00:23:42,480
oh I was supposed to ask you to guess it

638
00:23:42,480 --> 00:23:44,900
doesn't matter

639
00:23:45,059 --> 00:23:47,880
31 of classes in active libraries are

640
00:23:47,880 --> 00:23:51,900
actually invoked so that means oh uh and

641
00:23:51,900 --> 00:23:54,360
on in total here we go so out of all

642
00:23:54,360 --> 00:23:57,120
application code overall less than 10

643
00:23:57,120 --> 00:23:59,820
percent is actually active Library code

644
00:23:59,820 --> 00:24:02,039
so that means 90 of the code that your

645
00:24:02,039 --> 00:24:03,720
application is running is custom code

646
00:24:03,720 --> 00:24:05,700
which is where you should be focusing

647
00:24:05,700 --> 00:24:07,320
your attention if you are doing things

648
00:24:07,320 --> 00:24:09,299
like secure code review or any kind of

649
00:24:09,299 --> 00:24:10,500
security activities for your

650
00:24:10,500 --> 00:24:11,760
applications

651
00:24:11,760 --> 00:24:13,679
so if you are doing the opposite if

652
00:24:13,679 --> 00:24:15,780
you're doing like 90 of your time as

653
00:24:15,780 --> 00:24:17,400
like fixing vulnerable libraries and

654
00:24:17,400 --> 00:24:19,440
like 10 is doing threat modeling and

655
00:24:19,440 --> 00:24:21,299
like secure code review like flip that

656
00:24:21,299 --> 00:24:23,520
on your head it should be 90 of your

657
00:24:23,520 --> 00:24:25,440
time focused on custom code and securing

658
00:24:25,440 --> 00:24:27,960
that and then like less time for a

659
00:24:27,960 --> 00:24:29,340
vulnerable libraries because why what

660
00:24:29,340 --> 00:24:31,200
are we trying to learn here

661
00:24:31,200 --> 00:24:33,480
open source libraries it depends it

662
00:24:33,480 --> 00:24:34,860
really just depends

663
00:24:34,860 --> 00:24:36,780
so you can't just say there's a really

664
00:24:36,780 --> 00:24:39,480
high cve or CVSs score now go ahead and

665
00:24:39,480 --> 00:24:41,159
fix this your developer is going to be

666
00:24:41,159 --> 00:24:42,720
wait what about all my custom code that

667
00:24:42,720 --> 00:24:44,100
I spend months writing what about that

668
00:24:44,100 --> 00:24:47,340
you're fine but you can't do that and

669
00:24:47,340 --> 00:24:48,720
that's going to be helpful

670
00:24:48,720 --> 00:24:50,940
some nuances here on average for the

671
00:24:50,940 --> 00:24:54,059
average Java app 279 classes in a

672
00:24:54,059 --> 00:24:55,740
library but only 32 percent of those are

673
00:24:55,740 --> 00:24:57,480
in votes this is your average library

674
00:24:57,480 --> 00:25:00,360
for the average Java application in.net

675
00:25:00,360 --> 00:25:02,400
138 classes on average in your average

676
00:25:02,400 --> 00:25:04,980
Library only 67 of those classes are

677
00:25:04,980 --> 00:25:08,159
invoked and in nodes since node pack

678
00:25:08,159 --> 00:25:09,720
everything's bundled in smaller packages

679
00:25:09,720 --> 00:25:11,760
and a classes in a library only five

680
00:25:11,760 --> 00:25:13,980
percent of those classes are invoked

681
00:25:13,980 --> 00:25:16,740
so you really want to think about the

682
00:25:16,740 --> 00:25:19,260
data here because if you are

683
00:25:19,260 --> 00:25:20,820
um focusing on the wrong things your

684
00:25:20,820 --> 00:25:22,500
developers are really we're going to

685
00:25:22,500 --> 00:25:24,120
have a really hard time protecting your

686
00:25:24,120 --> 00:25:25,919
applications right as security people I

687
00:25:25,919 --> 00:25:28,500
won't say developers we us

688
00:25:28,500 --> 00:25:30,840
some metrics here

689
00:25:30,840 --> 00:25:32,760
another eye test for you guys here are

690
00:25:32,760 --> 00:25:35,100
some common the most common Java

691
00:25:35,100 --> 00:25:36,720
packages and libraries that are used in

692
00:25:36,720 --> 00:25:39,059
our applications across the world and

693
00:25:39,059 --> 00:25:41,820
you'll see on average only 32 percent of

694
00:25:41,820 --> 00:25:43,140
those libraries are actually used those

695
00:25:43,140 --> 00:25:46,200
classes are invoked somehow some way

696
00:25:46,200 --> 00:25:47,940
so there's a ton of libraries out there

697
00:25:47,940 --> 00:25:49,860
that are just not active classes that

698
00:25:49,860 --> 00:25:51,419
aren't being used

699
00:25:51,419 --> 00:25:53,460
which is interesting right

700
00:25:53,460 --> 00:25:55,679
all right moving on quickly to risk

701
00:25:55,679 --> 00:25:58,200
layer three any questions so far

702
00:25:58,200 --> 00:26:00,240
I think I'm losing some of you guys

703
00:26:00,240 --> 00:26:02,700
the phones are coming out that's okay

704
00:26:02,700 --> 00:26:04,559
I get it

705
00:26:04,559 --> 00:26:07,140
open source risk really thrilling stuff

706
00:26:07,140 --> 00:26:08,520
right

707
00:26:08,520 --> 00:26:11,520
you guys best audience ever wrist layer

708
00:26:11,520 --> 00:26:13,559
three Library age now this one's

709
00:26:13,559 --> 00:26:15,240
important what did I say it was 6.2

710
00:26:15,240 --> 00:26:18,419
times more vulnerable as it ages

711
00:26:18,419 --> 00:26:20,580
and it takes four years on average to

712
00:26:20,580 --> 00:26:22,980
discover a vulnerability and open source

713
00:26:22,980 --> 00:26:25,260
here are some more averages for you Java

714
00:26:25,260 --> 00:26:27,539
it takes 2.9 years

715
00:26:27,539 --> 00:26:30,600
to find uh sorry sorry 2.9 years an

716
00:26:30,600 --> 00:26:32,480
average library is how old it is in

717
00:26:32,480 --> 00:26:37,679
java.net 1.3 node and on average 2.6 and

718
00:26:37,679 --> 00:26:39,000
like you think about this like why are

719
00:26:39,000 --> 00:26:41,520
libraries so old who can give me some

720
00:26:41,520 --> 00:26:43,320
good reasons why a library might be

721
00:26:43,320 --> 00:26:45,480
outdated about or three years old on

722
00:26:45,480 --> 00:26:47,659
average

723
00:26:48,480 --> 00:26:51,240
no Financial sports for open source I

724
00:26:51,240 --> 00:26:52,740
like that I don't think open source is

725
00:26:52,740 --> 00:26:54,960
generally uh Financial yeah okay I can

726
00:26:54,960 --> 00:26:57,080
see that they log4j

727
00:26:57,080 --> 00:26:59,700
that you don't have a motivation to fix

728
00:26:59,700 --> 00:27:01,500
anything to continue to help me yeah or

729
00:27:01,500 --> 00:27:02,820
something new and shiny comes along and

730
00:27:02,820 --> 00:27:03,840
you're spending your time building that

731
00:27:03,840 --> 00:27:05,760
right

732
00:27:05,760 --> 00:27:08,279
yeah Microsoft doesn't buy your company

733
00:27:08,279 --> 00:27:10,919
so some things like hey um you know that

734
00:27:10,919 --> 00:27:12,779
it's no longer being supported right

735
00:27:12,779 --> 00:27:15,360
that project is is just old uh other

736
00:27:15,360 --> 00:27:17,580
things like hey maybe got Forks to a

737
00:27:17,580 --> 00:27:18,659
different repo and now someone's

738
00:27:18,659 --> 00:27:20,279
actively managing the fork instead and

739
00:27:20,279 --> 00:27:22,559
you're just pointing to the wrong one

740
00:27:22,559 --> 00:27:25,760
um yeah I got an idea

741
00:27:25,860 --> 00:27:27,539
Plex like

742
00:27:27,539 --> 00:27:28,919
oh okay

743
00:27:28,919 --> 00:27:31,679
no one understands it okay that's fair

744
00:27:31,679 --> 00:27:34,020
that's a really good point

745
00:27:34,020 --> 00:27:36,360
uh and here's those stats again those

746
00:27:36,360 --> 00:27:38,880
libraries are old

747
00:27:38,880 --> 00:27:41,760
um 28 or fewer than or less than a year

748
00:27:41,760 --> 00:27:44,580
old and 31 or three plus years old and

749
00:27:44,580 --> 00:27:46,440
this is our analysis we found that very

750
00:27:46,440 --> 00:27:48,900
interesting hope you guys do too

751
00:27:48,900 --> 00:27:50,940
risk layer 4 jumping ahead

752
00:27:50,940 --> 00:27:53,580
vulnerabilities in libraries all right

753
00:27:53,580 --> 00:27:56,640
so this is this is critical to think

754
00:27:56,640 --> 00:27:58,980
about guys when we hand over our list to

755
00:27:58,980 --> 00:28:00,840
our developers and we say there's a

756
00:28:00,840 --> 00:28:03,240
thousand CVS for all these libraries in

757
00:28:03,240 --> 00:28:04,980
your application we're telling them the

758
00:28:04,980 --> 00:28:06,659
green stuff we're giving them the green

759
00:28:06,659 --> 00:28:09,779
stuff hey 94 of your applications have

760
00:28:09,779 --> 00:28:11,640
at least one TV we're telling them this

761
00:28:11,640 --> 00:28:13,200
is it but if you take a look at the

762
00:28:13,200 --> 00:28:14,159
yellow

763
00:28:14,159 --> 00:28:15,720
those are only the active libraries

764
00:28:15,720 --> 00:28:17,400
being used so those like the possibility

765
00:28:17,400 --> 00:28:19,380
of being exploited is that yellow it's

766
00:28:19,380 --> 00:28:21,539
at eight percent for Java and look at

767
00:28:21,539 --> 00:28:24,299
net.net is like barely registering at

768
00:28:24,299 --> 00:28:25,740
one percent

769
00:28:25,740 --> 00:28:27,720
and node is two percent on on average

770
00:28:27,720 --> 00:28:29,640
six percent

771
00:28:29,640 --> 00:28:31,620
can be exploited like the active

772
00:28:31,620 --> 00:28:34,919
libraries can't be reached right

773
00:28:34,919 --> 00:28:36,600
sorry the libraries can't be reached

774
00:28:36,600 --> 00:28:38,039
active libraries yes

775
00:28:38,039 --> 00:28:39,720
five percent of active Java libraries

776
00:28:39,720 --> 00:28:42,840
have serious cbas uh here's about.net

777
00:28:42,840 --> 00:28:44,880
less than one percent uh and no two

778
00:28:44,880 --> 00:28:45,600
percent

779
00:28:45,600 --> 00:28:47,880
and the likelihood of critical CV being

780
00:28:47,880 --> 00:28:50,340
present increases from seven percent at

781
00:28:50,340 --> 00:28:53,760
one year old to 44 that's a huge one

782
00:28:53,760 --> 00:28:55,020
all right

783
00:28:55,020 --> 00:28:57,000
so what I'm trying to say is there's a

784
00:28:57,000 --> 00:28:58,860
ton of false positives in open source if

785
00:28:58,860 --> 00:29:01,320
you're running SCA tools

786
00:29:01,320 --> 00:29:03,179
um you're going to end up with a ton of

787
00:29:03,179 --> 00:29:05,400
false positives and and as a security

788
00:29:05,400 --> 00:29:07,200
professional you are doing a huge favor

789
00:29:07,200 --> 00:29:09,720
to your developers if you are triaging

790
00:29:09,720 --> 00:29:10,919
some of that information if you're

791
00:29:10,919 --> 00:29:12,900
putting contextual data around it and

792
00:29:12,900 --> 00:29:14,279
you're telling them yes this this

793
00:29:14,279 --> 00:29:16,260
library is being actively used this is

794
00:29:16,260 --> 00:29:19,020
going to be your top priority

795
00:29:19,020 --> 00:29:22,020
right I think I've hit that to death

796
00:29:22,020 --> 00:29:23,640
other factors to consider and here's

797
00:29:23,640 --> 00:29:24,779
something you guys might not have heard

798
00:29:24,779 --> 00:29:27,360
of because this is fairly new not CVSs

799
00:29:27,360 --> 00:29:29,039
everyone knows about this

800
00:29:29,039 --> 00:29:31,320
but epss has anyone heard of this I

801
00:29:31,320 --> 00:29:32,659
think it was mentioned a couple times

802
00:29:32,659 --> 00:29:35,039
Adam you used to do my job so that

803
00:29:35,039 --> 00:29:36,179
doesn't count

804
00:29:36,179 --> 00:29:37,679
let's see

805
00:29:37,679 --> 00:29:39,480
all right you guys should check this out

806
00:29:39,480 --> 00:29:40,740
um actually I'm going to do a quick demo

807
00:29:40,740 --> 00:29:43,380
because I think it's fun uh the epss is

808
00:29:43,380 --> 00:29:45,419
exploit prediction scoring system it

809
00:29:45,419 --> 00:29:48,539
uses data from different sources it's

810
00:29:48,539 --> 00:29:50,520
going to look for published exploits

811
00:29:50,520 --> 00:29:52,799
let's go look at the CVSs scores it's

812
00:29:52,799 --> 00:29:54,779
going to look for the for the

813
00:29:54,779 --> 00:29:57,600
probability of a CV that the

814
00:29:57,600 --> 00:30:01,080
exploitability of that cve so like How

815
00:30:01,080 --> 00:30:03,179
likely will this vulnerability be

816
00:30:03,179 --> 00:30:05,100
exploited and it gives you a probability

817
00:30:05,100 --> 00:30:07,559
score a peace score

818
00:30:07,559 --> 00:30:10,340
so that if you go first Dot

819
00:30:10,340 --> 00:30:12,980
first.org the same folks who do cbss

820
00:30:12,980 --> 00:30:16,260
they actually have an API really nice

821
00:30:16,260 --> 00:30:18,659
you can look at all the top

822
00:30:18,659 --> 00:30:22,080
100 cves with the highest probability

823
00:30:22,080 --> 00:30:24,659
scores that it is going to be exploited

824
00:30:24,659 --> 00:30:26,340
yeah I mean do you think you're sharing

825
00:30:26,340 --> 00:30:27,480
that

826
00:30:27,480 --> 00:30:30,080
oops

827
00:30:31,380 --> 00:30:34,140
I'm new to this technology stuff okay

828
00:30:34,140 --> 00:30:36,539
how's that yes

829
00:30:36,539 --> 00:30:40,860
yeah we'll be friends so the top 100 CV

830
00:30:40,860 --> 00:30:43,260
scores uh just prints out you know it's

831
00:30:43,260 --> 00:30:44,940
just a rest call so it's printing out a

832
00:30:44,940 --> 00:30:47,399
bunch of text here but you can take a

833
00:30:47,399 --> 00:30:48,539
look at this

834
00:30:48,539 --> 00:30:50,240
if you'd like to

835
00:30:50,240 --> 00:30:53,220
api.first.org data V1

836
00:30:53,220 --> 00:30:55,740
all apis review on I feel like uh an

837
00:30:55,740 --> 00:30:57,600
epss so go ahead and take a look at that

838
00:30:57,600 --> 00:30:58,799
when you have your free time and then

839
00:30:58,799 --> 00:31:00,179
you can also

840
00:31:00,179 --> 00:31:02,399
take a look at specific vulnerabilities

841
00:31:02,399 --> 00:31:04,620
so anybody have a good vulnerability in

842
00:31:04,620 --> 00:31:05,700
Minds

843
00:31:05,700 --> 00:31:09,720
CV cve number they have one here

844
00:31:09,720 --> 00:31:12,720
so you can actually find the epss scores

845
00:31:12,720 --> 00:31:15,539
for specific CVS and that would just

846
00:31:15,539 --> 00:31:18,360
show up here as a probability score the

847
00:31:18,360 --> 00:31:20,100
higher your probability is the higher

848
00:31:20,100 --> 00:31:23,220
the closer it is to 1.0 the more likely

849
00:31:23,220 --> 00:31:25,679
it will be exploited

850
00:31:25,679 --> 00:31:28,980
and it also gives you a ranking of all

851
00:31:28,980 --> 00:31:31,200
time so out of all the cves are ever

852
00:31:31,200 --> 00:31:34,320
ever published what like how is it fall

853
00:31:34,320 --> 00:31:37,980
in the like rating of how exploitable it

854
00:31:37,980 --> 00:31:39,779
could be and this number changes over

855
00:31:39,779 --> 00:31:41,640
time a little bit

856
00:31:41,640 --> 00:31:43,919
so another one it's a really really cool

857
00:31:43,919 --> 00:31:46,740
guys cvetrends.com

858
00:31:46,740 --> 00:31:48,179
um some guy I forget his name actually

859
00:31:48,179 --> 00:31:50,940
Mike something or Simon Bell he created

860
00:31:50,940 --> 00:31:54,240
this website and it and it like reads

861
00:31:54,240 --> 00:31:55,440
Twitter it's like threat and tell for

862
00:31:55,440 --> 00:31:56,520
CVS

863
00:31:56,520 --> 00:31:58,140
so it takes a look at all the chatter

864
00:31:58,140 --> 00:32:01,020
going on about specific cpes and he

865
00:32:01,020 --> 00:32:04,500
publishes the top 10 or so

866
00:32:04,500 --> 00:32:06,000
um and it tells you like he tells you

867
00:32:06,000 --> 00:32:09,000
how often it's being talked about and

868
00:32:09,000 --> 00:32:11,100
this will help you understand if someone

869
00:32:11,100 --> 00:32:12,720
might like a bad actor is going to try

870
00:32:12,720 --> 00:32:14,940
to write exploit code for it so this

871
00:32:14,940 --> 00:32:16,320
gives you more data to give your

872
00:32:16,320 --> 00:32:17,880
developers and yeah this one's trending

873
00:32:17,880 --> 00:32:19,380
this one's probably really important

874
00:32:19,380 --> 00:32:23,059
let's let's try to fix this one guys

875
00:32:24,120 --> 00:32:26,820
all right back to the slides

876
00:32:26,820 --> 00:32:29,700
so that was um first.org

877
00:32:29,700 --> 00:32:32,600
epss

878
00:32:34,020 --> 00:32:35,460
so if you look at log for Shell we've

879
00:32:35,460 --> 00:32:36,960
got some numbers here and this is this

880
00:32:36,960 --> 00:32:38,159
is important because when you have

881
00:32:38,159 --> 00:32:39,600
something as crazy as log were shown

882
00:32:39,600 --> 00:32:41,760
everyone's hair was on fire and no one

883
00:32:41,760 --> 00:32:43,260
knew really what was going on they just

884
00:32:43,260 --> 00:32:45,240
knew it was bad oh it's so bad it's so

885
00:32:45,240 --> 00:32:47,580
bad uh you know it turns out later that

886
00:32:47,580 --> 00:32:51,000
yes it's still bad however like there

887
00:32:51,000 --> 00:32:52,620
are some mitigations there it's not as

888
00:32:52,620 --> 00:32:54,179
critical because the vulnerability or

889
00:32:54,179 --> 00:32:55,919
the libraries aren't active right so if

890
00:32:55,919 --> 00:32:57,539
you take a look at these numbers you got

891
00:32:57,539 --> 00:32:59,220
a 10.0 rating

892
00:32:59,220 --> 00:33:01,140
for that the first one that came out for

893
00:33:01,140 --> 00:33:03,659
log for shell and it kind of gradually

894
00:33:03,659 --> 00:33:06,260
tapers down from there the epss scores

895
00:33:06,260 --> 00:33:09,120
and the 99th percentile so it still

896
00:33:09,120 --> 00:33:12,419
ranks in the top 99th percentile here or

897
00:33:12,419 --> 00:33:15,000
top one percent sorry top one percent uh

898
00:33:15,000 --> 00:33:17,580
you can see the probability of that log

899
00:33:17,580 --> 00:33:20,279
for J vulnerability being exploited is

900
00:33:20,279 --> 00:33:22,620
0.9 so very close to 1.0 that means it's

901
00:33:22,620 --> 00:33:24,960
very likely to be exploited

902
00:33:24,960 --> 00:33:27,960
and CVA Trends interestingly would not

903
00:33:27,960 --> 00:33:29,399
have told you this because as of today

904
00:33:29,399 --> 00:33:31,559
it no longer shows up in CBE Trends

905
00:33:31,559 --> 00:33:33,899
because other hot news other new hotness

906
00:33:33,899 --> 00:33:36,480
has taken its place

907
00:33:36,480 --> 00:33:38,519
so you can't rely on any one of these

908
00:33:38,519 --> 00:33:40,019
verticals alone you need to put them all

909
00:33:40,019 --> 00:33:41,700
together and tell that story for your

910
00:33:41,700 --> 00:33:42,779
developers

911
00:33:42,779 --> 00:33:45,559
what would you do

912
00:33:46,019 --> 00:33:47,760
uh here's a couple others I know you

913
00:33:47,760 --> 00:33:49,260
guys don't memorize CV numbers neither

914
00:33:49,260 --> 00:33:51,240
do I I'm not weird like that just weird

915
00:33:51,240 --> 00:33:53,880
in other ways uh that that first one is

916
00:33:53,880 --> 00:33:55,260
going to be your

917
00:33:55,260 --> 00:33:55,919
um

918
00:33:55,919 --> 00:33:58,039
spring for shell and the second one's a

919
00:33:58,039 --> 00:34:01,200
visual studio rce

920
00:34:01,200 --> 00:34:03,120
that has six more three but

921
00:34:03,120 --> 00:34:05,940
take a look at the epss course

922
00:34:05,940 --> 00:34:08,339
both of them are in the top one or two

923
00:34:08,339 --> 00:34:11,159
percent of all time to be exploited so

924
00:34:11,159 --> 00:34:14,099
even though your cve has that low rating

925
00:34:14,099 --> 00:34:16,980
of 6.3 it's still in that 98th

926
00:34:16,980 --> 00:34:19,619
percentile and it's got a 0.4

927
00:34:19,619 --> 00:34:21,480
probability of it being explained and I

928
00:34:21,480 --> 00:34:23,940
will say our our recommendation is

929
00:34:23,940 --> 00:34:26,639
anything with a 0.4 or above you really

930
00:34:26,639 --> 00:34:29,520
should try to fix it don't let it go too

931
00:34:29,520 --> 00:34:32,040
long right 0.4 or higher the probability

932
00:34:32,040 --> 00:34:34,139
of it being exploited pretty high

933
00:34:34,139 --> 00:34:35,580
because on average I think these scores

934
00:34:35,580 --> 00:34:37,020
are like point zero zero zero so

935
00:34:37,020 --> 00:34:38,699
anything anytime you see a 0.4 or higher

936
00:34:38,699 --> 00:34:40,500
go ahead and fix that

937
00:34:40,500 --> 00:34:42,659
and interestingly in the cve trends no

938
00:34:42,659 --> 00:34:43,800
one's really talking about this stuff

939
00:34:43,800 --> 00:34:46,500
because it's all news as of today not in

940
00:34:46,500 --> 00:34:49,379
the top 100. but these are still very

941
00:34:49,379 --> 00:34:50,820
vulnerable and exploitable

942
00:34:50,820 --> 00:34:52,800
vulnerabilities

943
00:34:52,800 --> 00:34:55,560
and what would you do so somebody like

944
00:34:55,560 --> 00:34:56,460
me

945
00:34:56,460 --> 00:34:59,160
um I would see a 6.3 in the old me would

946
00:34:59,160 --> 00:35:00,660
have been like oh it's just a 6.3 it's

947
00:35:00,660 --> 00:35:02,820
totally fine but the new me the smarter

948
00:35:02,820 --> 00:35:05,160
me the wiser me you know since I'm

949
00:35:05,160 --> 00:35:07,140
attending this what one second you know

950
00:35:07,140 --> 00:35:09,300
now I'm going to contextualize that data

951
00:35:09,300 --> 00:35:11,400
and understand the exploitability of it

952
00:35:11,400 --> 00:35:13,440
and

953
00:35:13,440 --> 00:35:17,060
um I'm gonna go fix it yes question

954
00:35:21,420 --> 00:35:24,780
yes yes yeah

955
00:35:24,780 --> 00:35:26,640
it's like a province that class like 20

956
00:35:26,640 --> 00:35:28,619
years ago I have no idea how to do that

957
00:35:28,619 --> 00:35:30,000
stuff anymore I didn't know how to do it

958
00:35:30,000 --> 00:35:31,020
then either

959
00:35:31,020 --> 00:35:32,579
all right

960
00:35:32,579 --> 00:35:34,560
any questions on that

961
00:35:34,560 --> 00:35:37,380
epss really cool stuff definitely want

962
00:35:37,380 --> 00:35:38,880
you guys to check it out because the way

963
00:35:38,880 --> 00:35:41,960
we're doing it now not great

964
00:35:46,980 --> 00:35:49,500
so it can increase over time

965
00:35:49,500 --> 00:35:51,000
um but it most likely will decrease

966
00:35:51,000 --> 00:35:52,440
because

967
00:35:52,440 --> 00:35:55,079
um and the more CVS that come out those

968
00:35:55,079 --> 00:35:56,460
are going to be a little bit higher in

969
00:35:56,460 --> 00:35:58,380
probability to exploit so it's the

970
00:35:58,380 --> 00:36:00,900
overall probability out of all the CVS

971
00:36:00,900 --> 00:36:03,900
being exploited how how probable is that

972
00:36:03,900 --> 00:36:05,460
one particular vulnerability going to be

973
00:36:05,460 --> 00:36:07,200
exploited so out of them so the more you

974
00:36:07,200 --> 00:36:09,960
add CVS into that pile you know but if

975
00:36:09,960 --> 00:36:11,339
you add a whole bunch of like lower ones

976
00:36:11,339 --> 00:36:14,420
it's going to go higher so yeah

977
00:36:18,300 --> 00:36:19,920
see that's what if I were a militia

978
00:36:19,920 --> 00:36:21,599
sector I would do that I would be like

979
00:36:21,599 --> 00:36:23,040
what are the ones that are not trending

980
00:36:23,040 --> 00:36:25,680
maybe it's not on the radar for instant

981
00:36:25,680 --> 00:36:27,180
responders maybe people aren't paying

982
00:36:27,180 --> 00:36:28,619
attention to it I would go straight for

983
00:36:28,619 --> 00:36:30,480
those right and if you guys haven't

984
00:36:30,480 --> 00:36:32,339
patched for your lock for day and and

985
00:36:32,339 --> 00:36:34,680
spring for show and stuff like go back

986
00:36:34,680 --> 00:36:36,480
start working on the stuff still

987
00:36:36,480 --> 00:36:38,520
important

988
00:36:38,520 --> 00:36:40,020
and ask for a raise while you're at it

989
00:36:40,020 --> 00:36:41,339
right

990
00:36:41,339 --> 00:36:44,000
all right

991
00:36:44,099 --> 00:36:46,079
um here's here's the last one here that

992
00:36:46,079 --> 00:36:48,480
I'm going to tell you about a licensing

993
00:36:48,480 --> 00:36:51,060
risk not really a security risk here but

994
00:36:51,060 --> 00:36:53,099
still a risk to your business most

995
00:36:53,099 --> 00:36:54,720
recently there's a company called Appian

996
00:36:54,720 --> 00:36:56,520
there are no code low code kind of thing

997
00:36:56,520 --> 00:36:58,140
anybody heard of them me neither it's

998
00:36:58,140 --> 00:37:00,119
all good oh yeah

999
00:37:00,119 --> 00:37:01,680
Adam

1000
00:37:01,680 --> 00:37:05,040
uh they recently won 2.068 billion

1001
00:37:05,040 --> 00:37:07,740
dollars because somebody had used their

1002
00:37:07,740 --> 00:37:11,160
copy left license uh inappropriately so

1003
00:37:11,160 --> 00:37:12,240
think about that that's a great business

1004
00:37:12,240 --> 00:37:14,820
model isn't it guys right just write

1005
00:37:14,820 --> 00:37:16,740
some shitty software and be like you

1006
00:37:16,740 --> 00:37:18,020
can't use this

1007
00:37:18,020 --> 00:37:20,339
I'm kidding they're I've never used them

1008
00:37:20,339 --> 00:37:22,079
but anyway so they won that all that

1009
00:37:22,079 --> 00:37:24,960
money and apparently uh you know appeals

1010
00:37:24,960 --> 00:37:26,040
and all that whatever

1011
00:37:26,040 --> 00:37:28,079
but interesting right so that can affect

1012
00:37:28,079 --> 00:37:29,460
your organization if you're sitting here

1013
00:37:29,460 --> 00:37:31,320
thinking oh we're good there are you

1014
00:37:31,320 --> 00:37:33,180
know public licenses every everyone says

1015
00:37:33,180 --> 00:37:34,740
it's cool to use it like you got to be

1016
00:37:34,740 --> 00:37:36,839
careful about what licenses you are

1017
00:37:36,839 --> 00:37:38,760
using here at contrast we actually went

1018
00:37:38,760 --> 00:37:40,440
through every single one of Open Source

1019
00:37:40,440 --> 00:37:41,880
libraries and we took a look at their

1020
00:37:41,880 --> 00:37:44,460
licensing so a good s-bomb generator

1021
00:37:44,460 --> 00:37:45,839
will actually include the licensing

1022
00:37:45,839 --> 00:37:48,540
information I I implore you to take a

1023
00:37:48,540 --> 00:37:49,740
look at that so you're going to read

1024
00:37:49,740 --> 00:37:50,820
through all the licensing information

1025
00:37:50,820 --> 00:37:52,500
and be like is this one acceptable to

1026
00:37:52,500 --> 00:37:54,900
our business or is it too much risk and

1027
00:37:54,900 --> 00:37:56,640
you want to involve your compliance team

1028
00:37:56,640 --> 00:37:59,040
or your legal team and help that and

1029
00:37:59,040 --> 00:38:00,359
they're going to help you understand if

1030
00:38:00,359 --> 00:38:02,760
that license is going to be acceptable

1031
00:38:02,760 --> 00:38:04,560
for your business

1032
00:38:04,560 --> 00:38:06,359
um some of them I don't know I I think I

1033
00:38:06,359 --> 00:38:08,160
wrote These down some of those older

1034
00:38:08,160 --> 00:38:10,260
licenses

1035
00:38:10,260 --> 00:38:13,140
uh knock around until you stay away from

1036
00:38:13,140 --> 00:38:16,500
uh I didn't write it down

1037
00:38:16,500 --> 00:38:18,480
um yeah where did I get that information

1038
00:38:18,480 --> 00:38:19,800
oh

1039
00:38:19,800 --> 00:38:22,320
okay there it is uh GPL version three

1040
00:38:22,320 --> 00:38:25,140
GPL version two and agpl those are all

1041
00:38:25,140 --> 00:38:29,220
bands from specific societies do not use

1042
00:38:29,220 --> 00:38:31,200
those licenses but go ahead even things

1043
00:38:31,200 --> 00:38:33,540
like the MIT and the BSD the Apache

1044
00:38:33,540 --> 00:38:36,180
licenses those are very permissive

1045
00:38:36,180 --> 00:38:37,440
licenses are great but you still want to

1046
00:38:37,440 --> 00:38:39,060
talk to your legal counsel to make sure

1047
00:38:39,060 --> 00:38:41,839
that's acceptable risk for your business

1048
00:38:41,839 --> 00:38:45,119
licensing risk here 69 of java

1049
00:38:45,119 --> 00:38:48,119
applications use some sort of Licensing

1050
00:38:48,119 --> 00:38:50,400
open source licensing here

1051
00:38:50,400 --> 00:38:54,420
uh 35 in total have one or more specific

1052
00:38:54,420 --> 00:38:56,339
copy left license

1053
00:38:56,339 --> 00:38:58,440
and copy left and copyright copy left is

1054
00:38:58,440 --> 00:39:01,320
just basically uh you can use my like a

1055
00:39:01,320 --> 00:39:03,540
copyrighted license just

1056
00:39:03,540 --> 00:39:06,420
more limited that's what copy left is

1057
00:39:06,420 --> 00:39:08,880
99 of organizations have at least one

1058
00:39:08,880 --> 00:39:11,880
application with a high-risk license

1059
00:39:11,880 --> 00:39:13,440
it was pretty pretty interesting

1060
00:39:13,440 --> 00:39:15,960
interesting data all right so we're at

1061
00:39:15,960 --> 00:39:17,160
the point where we want to start talking

1062
00:39:17,160 --> 00:39:18,119
about

1063
00:39:18,119 --> 00:39:20,880
how to actually fix this stuff so I had

1064
00:39:20,880 --> 00:39:22,560
mentioned talking to developers giving

1065
00:39:22,560 --> 00:39:25,320
more contextual data when you're handing

1066
00:39:25,320 --> 00:39:27,480
over CVS to in libraries to fix

1067
00:39:27,480 --> 00:39:29,040
so that's one thing you want to set

1068
00:39:29,040 --> 00:39:31,140
policies and have conversations with

1069
00:39:31,140 --> 00:39:32,579
your development teams because if you're

1070
00:39:32,579 --> 00:39:33,839
just handing over things over the wall

1071
00:39:33,839 --> 00:39:35,339
you're going to break that relationship

1072
00:39:35,339 --> 00:39:37,800
with them so fast but if you guys both

1073
00:39:37,800 --> 00:39:39,420
understand your inset expectations be

1074
00:39:39,420 --> 00:39:42,060
like we're giving you solid data to do

1075
00:39:42,060 --> 00:39:43,320
something with they're going to

1076
00:39:43,320 --> 00:39:44,700
understand that you're setting a policy

1077
00:39:44,700 --> 00:39:46,320
for yourself I'm always going to follow

1078
00:39:46,320 --> 00:39:48,060
this process always going to give you

1079
00:39:48,060 --> 00:39:49,380
true positives always going to give you

1080
00:39:49,380 --> 00:39:51,300
actionable stuff and the developers are

1081
00:39:51,300 --> 00:39:52,260
going to understand that we're always

1082
00:39:52,260 --> 00:39:53,700
going to fix this within 90 days

1083
00:39:53,700 --> 00:39:55,140
whatever we're going to fix this with

1084
00:39:55,140 --> 00:39:57,119
180 days we promise and you set that

1085
00:39:57,119 --> 00:39:58,560
expectation together you're setting that

1086
00:39:58,560 --> 00:40:00,180
policy together then you're going to

1087
00:40:00,180 --> 00:40:02,220
start making real progress with your

1088
00:40:02,220 --> 00:40:04,260
development development teams in fixing

1089
00:40:04,260 --> 00:40:06,300
open source

1090
00:40:06,300 --> 00:40:08,760
uh continuous monitoring you want to use

1091
00:40:08,760 --> 00:40:11,520
different tools for this uh I will I

1092
00:40:11,520 --> 00:40:13,260
won't say which tool you should use

1093
00:40:13,260 --> 00:40:15,960
hints but you know I work for them but

1094
00:40:15,960 --> 00:40:17,940
if you have continuous monitoring really

1095
00:40:17,940 --> 00:40:19,500
easy way to see what kind of libraries

1096
00:40:19,500 --> 00:40:21,240
are active what kind of routes are being

1097
00:40:21,240 --> 00:40:24,000
used a lot easier to map your active

1098
00:40:24,000 --> 00:40:26,760
libraries to the vulnerabilities yes

1099
00:40:26,760 --> 00:40:29,099
so using all the data available to you

1100
00:40:29,099 --> 00:40:30,720
we talked about CVSs we talked about

1101
00:40:30,720 --> 00:40:33,060
epss we talk about CBE Trends we talked

1102
00:40:33,060 --> 00:40:36,180
about different tools like contrast and

1103
00:40:36,180 --> 00:40:37,740
you are going to use that data to make

1104
00:40:37,740 --> 00:40:39,420
risk-based decisions

1105
00:40:39,420 --> 00:40:41,339
not just emotion-based ones and

1106
00:40:41,339 --> 00:40:43,200
definitely not just because you heard it

1107
00:40:43,200 --> 00:40:44,640
on Twitter right guys we don't do that

1108
00:40:44,640 --> 00:40:47,160
none of you do that you don't just go on

1109
00:40:47,160 --> 00:40:48,359
Twitter be like oh my gosh Kevin

1110
00:40:48,359 --> 00:40:50,220
Beaumont said

1111
00:40:50,220 --> 00:40:53,280
uh embed controls in your CI CDs so

1112
00:40:53,280 --> 00:40:54,420
again you can use different tools for

1113
00:40:54,420 --> 00:40:56,099
this I won't say which tools but you

1114
00:40:56,099 --> 00:40:58,740
know I know some really good ones

1115
00:40:58,740 --> 00:41:01,140
uh embed them within your CI CD that way

1116
00:41:01,140 --> 00:41:02,880
you can automate some of this stuff away

1117
00:41:02,880 --> 00:41:04,859
you can say like using contextual data I

1118
00:41:04,859 --> 00:41:05,820
can tell you which ones are true

1119
00:41:05,820 --> 00:41:07,380
positives and which ones will save you

1120
00:41:07,380 --> 00:41:09,599
time Developers

1121
00:41:09,599 --> 00:41:11,880
all right that's actually all I have for

1122
00:41:11,880 --> 00:41:14,960
you guys do you have any questions

1123
00:41:17,700 --> 00:41:20,099
I like no questions

1124
00:41:20,099 --> 00:41:22,150
cool thanks

1125
00:41:22,150 --> 00:41:28,229
[Applause]

