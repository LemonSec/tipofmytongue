1
00:00:06,899 --> 00:00:09,080
foreign

2
00:00:17,730 --> 00:00:20,850
[Music]

3
00:00:30,430 --> 00:00:33,489
[Music]

4
00:00:37,280 --> 00:00:45,520
[Music]

5
00:00:51,100 --> 00:00:53,780
[Music]

6
00:00:53,780 --> 00:00:57,120
thank you so much uh first of all happy

7
00:00:57,120 --> 00:00:59,640
Friday everybody thanks for coming in to

8
00:00:59,640 --> 00:01:01,199
check out this talk it's a pleasure to

9
00:01:01,199 --> 00:01:03,840
be here uh it's my second last time it

10
00:01:03,840 --> 00:01:06,000
was here in 2019 and quite enjoyed the

11
00:01:06,000 --> 00:01:08,100
conference I'm about to be back I'm

12
00:01:08,100 --> 00:01:09,780
going to talk about uh how you can use

13
00:01:09,780 --> 00:01:11,460
the security knowledge framework at ASCS

14
00:01:11,460 --> 00:01:14,220
to build more secure applications this

15
00:01:14,220 --> 00:01:16,380
talk was originally created by myself

16
00:01:16,380 --> 00:01:18,119
and my colleague Kurt who unfortunately

17
00:01:18,119 --> 00:01:20,280
couldn't be with us student illness so

18
00:01:20,280 --> 00:01:21,720
I'm filling in on his behalf and I'm

19
00:01:21,720 --> 00:01:22,920
going to give him tons of credit because

20
00:01:22,920 --> 00:01:24,960
he put a lot of effort into putting this

21
00:01:24,960 --> 00:01:27,180
together I can't take all the credit we

22
00:01:27,180 --> 00:01:28,860
worked on it together so a little bit

23
00:01:28,860 --> 00:01:31,799
about me uh farshad Abbasi I've been in

24
00:01:31,799 --> 00:01:33,900
this uh I guess software and security

25
00:01:33,900 --> 00:01:36,479
business for over 25 years I you know

26
00:01:36,479 --> 00:01:39,119
started my software game back in the.com

27
00:01:39,119 --> 00:01:41,400
where I built software for about 12 plus

28
00:01:41,400 --> 00:01:43,799
years I would consider myself a full

29
00:01:43,799 --> 00:01:45,360
stack engineer before there was a term

30
00:01:45,360 --> 00:01:47,939
full stack I built web applications I've

31
00:01:47,939 --> 00:01:50,600
written drivers at Intel I've worked on

32
00:01:50,600 --> 00:01:53,159
you know cellular routing engines at

33
00:01:53,159 --> 00:01:54,960
Motorola I've built all kinds of shapes

34
00:01:54,960 --> 00:01:57,360
and software and after building all that

35
00:01:57,360 --> 00:01:58,799
different kinds of software I kind of

36
00:01:58,799 --> 00:02:00,420
thought hey I should go and switch to

37
00:02:00,420 --> 00:02:02,759
security to help people build secure

38
00:02:02,759 --> 00:02:04,680
software because uh guess what while I

39
00:02:04,680 --> 00:02:06,000
was building software a lot of things

40
00:02:06,000 --> 00:02:08,160
that I built got hacked I not buy choice

41
00:02:08,160 --> 00:02:10,258
because uh you know a variety of reasons

42
00:02:10,258 --> 00:02:11,819
that we could talk about later but I

43
00:02:11,819 --> 00:02:13,260
learned a lot of hard lessons and in

44
00:02:13,260 --> 00:02:15,660
fact I teach a security course in

45
00:02:15,660 --> 00:02:18,180
Vancouver at a college called BCIT and I

46
00:02:18,180 --> 00:02:19,620
often have a lot of really good real

47
00:02:19,620 --> 00:02:20,940
life examples so the comment from

48
00:02:20,940 --> 00:02:22,319
everyone's like wow yeah you have a lot

49
00:02:22,319 --> 00:02:24,420
of good examples from your career so I

50
00:02:24,420 --> 00:02:25,680
hope I can share some of that knowledge

51
00:02:25,680 --> 00:02:27,540
with you as well but for the last 14

52
00:02:27,540 --> 00:02:29,700
years I've switched on the other side of

53
00:02:29,700 --> 00:02:31,260
the fence so I've been working with

54
00:02:31,260 --> 00:02:33,239
software developers and and teaching

55
00:02:33,239 --> 00:02:35,099
them about my mistakes so that they they

56
00:02:35,099 --> 00:02:37,800
don't repeat those uh themselves

57
00:02:37,800 --> 00:02:40,260
um I spent a decade as a senior member

58
00:02:40,260 --> 00:02:42,360
of HSBC bank's Global Banks I.T security

59
00:02:42,360 --> 00:02:44,640
team uh you know I did all I helped them

60
00:02:44,640 --> 00:02:45,959
actually form an application security

61
00:02:45,959 --> 00:02:48,300
team back in 2008 uh you know where

62
00:02:48,300 --> 00:02:50,220
application security was fairly brand

63
00:02:50,220 --> 00:02:52,440
new and uh the bank you know HSBC had a

64
00:02:52,440 --> 00:02:53,459
lot of money they wanted to get into

65
00:02:53,459 --> 00:02:55,800
that field uh so they assembled a team

66
00:02:55,800 --> 00:02:57,840
of software folks that also knew

67
00:02:57,840 --> 00:02:59,160
security and we created a global

68
00:02:59,160 --> 00:03:01,440
application security practice I helped

69
00:03:01,440 --> 00:03:03,720
take that practice Global and you know

70
00:03:03,720 --> 00:03:05,519
we built a very successful team that

71
00:03:05,519 --> 00:03:06,780
supported about a thousand different

72
00:03:06,780 --> 00:03:08,400
development teams across the bank in

73
00:03:08,400 --> 00:03:10,260
different regions to build more secure

74
00:03:10,260 --> 00:03:11,940
software and as you can imagine in 2008

75
00:03:11,940 --> 00:03:13,980
everything was waterfall so we went from

76
00:03:13,980 --> 00:03:16,980
waterfall to Agile in around 2010 to an

77
00:03:16,980 --> 00:03:19,379
eleven which was fairly new so we had to

78
00:03:19,379 --> 00:03:20,940
figure out how to you know slide

79
00:03:20,940 --> 00:03:23,400
Security in there and then in 2014 2015

80
00:03:23,400 --> 00:03:25,019
the world went devops so we had to

81
00:03:25,019 --> 00:03:27,300
refactor all of our services in terms of

82
00:03:27,300 --> 00:03:30,120
software security to fit devops pipeline

83
00:03:30,120 --> 00:03:32,159
which is nowadays you call it devsecops

84
00:03:32,159 --> 00:03:33,959
but the term didn't exist at the time so

85
00:03:33,959 --> 00:03:35,400
I've been fortunate enough to be on the

86
00:03:35,400 --> 00:03:36,720
Forefront of a bunch of these movements

87
00:03:36,720 --> 00:03:38,280
and I have lots of stories and battle

88
00:03:38,280 --> 00:03:40,140
all scars and lessons to share with you

89
00:03:40,140 --> 00:03:42,780
I'm currently the old lost Vancouver

90
00:03:42,780 --> 00:03:44,519
chapter lead and we have a board that

91
00:03:44,519 --> 00:03:47,580
together we organize a a great series of

92
00:03:47,580 --> 00:03:49,560
events we also work with the other

93
00:03:49,560 --> 00:03:51,420
chapters in Portland as well as Seattle

94
00:03:51,420 --> 00:03:54,000
and Victoria we have a Pacific Northwest

95
00:03:54,000 --> 00:03:56,040
conference that uh you know we're hoping

96
00:03:56,040 --> 00:03:58,140
that will be as good as last con and

97
00:03:58,140 --> 00:04:00,299
some of you can attend as well I'm also

98
00:04:00,299 --> 00:04:01,620
one of the organizers of besides

99
00:04:01,620 --> 00:04:02,940
Vancouver and a bunch of other stuff

100
00:04:02,940 --> 00:04:05,159
that I'll spare you and so let's talk

101
00:04:05,159 --> 00:04:07,019
about uh let's talk about today's topic

102
00:04:07,019 --> 00:04:08,220
first of all I want to do a quick poll

103
00:04:08,220 --> 00:04:10,680
how many people here are developers or

104
00:04:10,680 --> 00:04:13,260
they're building stuff

105
00:04:13,260 --> 00:04:16,380
okay a few people that's good uh who's

106
00:04:16,380 --> 00:04:18,120
working in security I'm assuming the

107
00:04:18,120 --> 00:04:20,279
rest of you okay cool so out of those

108
00:04:20,279 --> 00:04:21,839
people that are working security how

109
00:04:21,839 --> 00:04:24,180
many of you are working with Developers

110
00:04:24,180 --> 00:04:26,040
okay cool awesome this is the talk for

111
00:04:26,040 --> 00:04:27,479
you because I also worked with

112
00:04:27,479 --> 00:04:29,520
developers that I'm in security and this

113
00:04:29,520 --> 00:04:31,740
has been a phenomenal tool and that that

114
00:04:31,740 --> 00:04:33,780
has helped me in my journey working with

115
00:04:33,780 --> 00:04:35,460
developers so that they can learn about

116
00:04:35,460 --> 00:04:36,600
security

117
00:04:36,600 --> 00:04:38,520
um in an easy manner who's part of the

118
00:04:38,520 --> 00:04:40,320
security knowledge framework

119
00:04:40,320 --> 00:04:42,720
okay awesome cool bunch of you and who's

120
00:04:42,720 --> 00:04:44,220
sort of asvs

121
00:04:44,220 --> 00:04:46,979
awesome I love ASDS So currently I run a

122
00:04:46,979 --> 00:04:48,840
company called forward security the

123
00:04:48,840 --> 00:04:50,040
foundation of our company is based on

124
00:04:50,040 --> 00:04:52,500
asses everything that uh everything that

125
00:04:52,500 --> 00:04:53,580
we do

126
00:04:53,580 --> 00:04:55,320
um you know from our assessments to when

127
00:04:55,320 --> 00:04:56,880
we do devsecops and all the work we do

128
00:04:56,880 --> 00:04:58,740
is really around asbs and you know

129
00:04:58,740 --> 00:05:00,180
myself and team have contributed a whole

130
00:05:00,180 --> 00:05:01,440
bunch and I have

131
00:05:01,440 --> 00:05:03,300
um you know Jeff Williams and and Jim

132
00:05:03,300 --> 00:05:04,440
maniko and all the folks that have

133
00:05:04,440 --> 00:05:05,639
contributed to it over the years to

134
00:05:05,639 --> 00:05:08,160
think and finally kubernetes let's see

135
00:05:08,160 --> 00:05:10,259
shorter hands kubernetes yeah okay cool

136
00:05:10,259 --> 00:05:12,900
awesome that's great so that's a a good

137
00:05:12,900 --> 00:05:14,639
background for this talk

138
00:05:14,639 --> 00:05:16,979
so uh it's Halloween we got a stack of

139
00:05:16,979 --> 00:05:19,020
pumpkins here and and security knowledge

140
00:05:19,020 --> 00:05:20,460
framework is kind of like that security

141
00:05:20,460 --> 00:05:22,199
knowledge framework uh you know is a

142
00:05:22,199 --> 00:05:24,419
bunch of software that's a a great team

143
00:05:24,419 --> 00:05:27,000
has created plus some data plus some

144
00:05:27,000 --> 00:05:28,620
infrastructure and and the

145
00:05:28,620 --> 00:05:30,840
infrastructure is Docker and kubernetes

146
00:05:30,840 --> 00:05:33,060
so that provides a platform uh to have

147
00:05:33,060 --> 00:05:35,280
containerized applications that

148
00:05:35,280 --> 00:05:36,600
demonstrate different vulnerabilities

149
00:05:36,600 --> 00:05:38,639
run on it uh their dockerized containers

150
00:05:38,639 --> 00:05:42,180
the data is primarily around asvs and I

151
00:05:42,180 --> 00:05:44,820
put a star there because a lot of the

152
00:05:44,820 --> 00:05:45,900
data that's populated in security

153
00:05:45,900 --> 00:05:48,180
Knowledge from work comes from from ASCS

154
00:05:48,180 --> 00:05:50,220
but there's other data as well from from

155
00:05:50,220 --> 00:05:52,380
guys from things like the uh security

156
00:05:52,380 --> 00:05:54,960
testing guide and all other wonderful OS

157
00:05:54,960 --> 00:05:57,120
projects as well as external sources of

158
00:05:57,120 --> 00:05:59,520
data that they use to enrich asvs that

159
00:05:59,520 --> 00:06:01,320
makes it uh you know better for someone

160
00:06:01,320 --> 00:06:02,580
who's trying to learn application

161
00:06:02,580 --> 00:06:04,380
security so that basically security

162
00:06:04,380 --> 00:06:07,020
knowledge framework takes the ASDS data

163
00:06:07,020 --> 00:06:09,539
plus other data and wraps it in a bunch

164
00:06:09,539 --> 00:06:11,220
of software and makes it a very easy to

165
00:06:11,220 --> 00:06:13,919
use platform that has Labs code examples

166
00:06:13,919 --> 00:06:17,220
knowledge base in training and so if

167
00:06:17,220 --> 00:06:18,360
your organization has a requirement

168
00:06:18,360 --> 00:06:20,400
space Focus the SES is really good to to

169
00:06:20,400 --> 00:06:21,900
use for that and I know a lot of you are

170
00:06:21,900 --> 00:06:23,340
familiar with that already so I won't go

171
00:06:23,340 --> 00:06:25,560
on about that so what do you what are

172
00:06:25,560 --> 00:06:27,180
going to be the takeaways uh by the end

173
00:06:27,180 --> 00:06:28,319
of this presentation hopefully you

174
00:06:28,319 --> 00:06:30,780
understand how to use uh ASDS and

175
00:06:30,780 --> 00:06:32,759
security knowledge framework together

176
00:06:32,759 --> 00:06:34,199
um you'll get some tools for getting it

177
00:06:34,199 --> 00:06:36,000
up and running that was primarily the

178
00:06:36,000 --> 00:06:38,160
main uh motivation for this presentation

179
00:06:38,160 --> 00:06:39,780
because when we try to get it up and

180
00:06:39,780 --> 00:06:40,860
running we ran into a bunch of

181
00:06:40,860 --> 00:06:42,840
challenges yes you can use the web-based

182
00:06:42,840 --> 00:06:44,280
version that's there it's a demo but if

183
00:06:44,280 --> 00:06:45,539
you're trying to run up your own stack

184
00:06:45,539 --> 00:06:47,340
there are incompatibilities with

185
00:06:47,340 --> 00:06:49,199
kubernetes so we release some code that

186
00:06:49,199 --> 00:06:50,759
I'll share the link with you after so

187
00:06:50,759 --> 00:06:52,319
you can take away with you and be able

188
00:06:52,319 --> 00:06:53,940
to stand up your own environment I

189
00:06:53,940 --> 00:06:56,220
either in a VM on your own machine or in

190
00:06:56,220 --> 00:06:58,199
AWS and that's the the primary

191
00:06:58,199 --> 00:07:00,419
motivation for this talk and you also

192
00:07:00,419 --> 00:07:02,400
another takeaway is getting the most out

193
00:07:02,400 --> 00:07:05,220
of uh asvs and SKF to build more secure

194
00:07:05,220 --> 00:07:06,600
applications and I'll show you how you

195
00:07:06,600 --> 00:07:08,039
could do that and the audience is

196
00:07:08,039 --> 00:07:09,360
security practitioners which a lot of

197
00:07:09,360 --> 00:07:11,940
you are so that uh it's it's those who

198
00:07:11,940 --> 00:07:12,960
are responsible for building

199
00:07:12,960 --> 00:07:15,000
applications Security Programs or

200
00:07:15,000 --> 00:07:17,880
helping trained developers and of course

201
00:07:17,880 --> 00:07:19,259
software developers themselves who need

202
00:07:19,259 --> 00:07:20,520
to write secure software right so I

203
00:07:20,520 --> 00:07:21,900
encourage software developers to stand

204
00:07:21,900 --> 00:07:23,460
this up and go learn about these

205
00:07:23,460 --> 00:07:25,020
security requirements and so should you

206
00:07:25,020 --> 00:07:27,000
those of you who are security folks that

207
00:07:27,000 --> 00:07:28,259
are working with developers you should

208
00:07:28,259 --> 00:07:30,060
definitely encourage them to use this

209
00:07:30,060 --> 00:07:32,340
platform and of course any it or devops

210
00:07:32,340 --> 00:07:34,139
folks are just interested in kubernetes

211
00:07:34,139 --> 00:07:35,880
and deploying uh security knowledge

212
00:07:35,880 --> 00:07:37,080
framework because if you're working at

213
00:07:37,080 --> 00:07:38,819
an organization and you want to stand

214
00:07:38,819 --> 00:07:40,560
this up oftentimes it'll be those folks

215
00:07:40,560 --> 00:07:43,280
that be responsible for doing so

216
00:07:43,280 --> 00:07:46,080
so let's talk about

217
00:07:46,080 --> 00:07:48,000
why and how to use security knowledge

218
00:07:48,000 --> 00:07:49,440
framework

219
00:07:49,440 --> 00:07:51,539
so um

220
00:07:51,539 --> 00:07:53,280
you know you got asvs and it's a basis

221
00:07:53,280 --> 00:07:55,020
for testing applications there's a bunch

222
00:07:55,020 --> 00:07:56,340
of it's a bunch of requirements right it

223
00:07:56,340 --> 00:07:57,360
means the application security

224
00:07:57,360 --> 00:07:59,759
verification standard so the the there

225
00:07:59,759 --> 00:08:02,699
are about 283 or 286 different

226
00:08:02,699 --> 00:08:04,979
verification items or requirements that

227
00:08:04,979 --> 00:08:06,419
are that was originally designed for

228
00:08:06,419 --> 00:08:07,740
people that are testing right so it says

229
00:08:07,740 --> 00:08:11,280
insure or verify that XYZ and ensure X

230
00:08:11,280 --> 00:08:12,960
you know so on and so forth but

231
00:08:12,960 --> 00:08:15,419
developers can also leverage those uh

232
00:08:15,419 --> 00:08:17,460
requirements to build against them kind

233
00:08:17,460 --> 00:08:18,780
of like test driven design right in test

234
00:08:18,780 --> 00:08:20,460
driven design you come up with your test

235
00:08:20,460 --> 00:08:22,080
cases and then you design according to

236
00:08:22,080 --> 00:08:24,180
that and it's a similar idea asvs these

237
00:08:24,180 --> 00:08:25,680
are the verification or the test cases

238
00:08:25,680 --> 00:08:27,360
that a pen tester or a security

239
00:08:27,360 --> 00:08:29,340
professional could use to assess the

240
00:08:29,340 --> 00:08:30,780
security of an application but also

241
00:08:30,780 --> 00:08:31,860
developers could use it as a

242
00:08:31,860 --> 00:08:33,059
requirements to build more secure

243
00:08:33,059 --> 00:08:35,159
applications and uh you know it's funny

244
00:08:35,159 --> 00:08:36,839
because I've I often hear like from

245
00:08:36,839 --> 00:08:38,039
clients that don't really understand

246
00:08:38,039 --> 00:08:40,200
application security hey I want a coding

247
00:08:40,200 --> 00:08:42,299
standard and everyone says yeah I use OS

248
00:08:42,299 --> 00:08:44,700
top 10 or ASCS is a coding standard and

249
00:08:44,700 --> 00:08:47,399
it's yeah it's not necessarily directly

250
00:08:47,399 --> 00:08:49,800
for coding but it's it's I would say

251
00:08:49,800 --> 00:08:52,260
it's more a standard for building secure

252
00:08:52,260 --> 00:08:53,880
software some of it will involve coding

253
00:08:53,880 --> 00:08:55,080
some of it will involve design and

254
00:08:55,080 --> 00:08:56,339
architecture some of it is process

255
00:08:56,339 --> 00:08:57,839
oriented and we're going to look at that

256
00:08:57,839 --> 00:09:00,720
as well but the Three core uses for asvs

257
00:09:00,720 --> 00:09:03,120
are using it as a metric for your

258
00:09:03,120 --> 00:09:04,560
application security and what I mean by

259
00:09:04,560 --> 00:09:05,760
that is that

260
00:09:05,760 --> 00:09:07,500
it gives the developers and application

261
00:09:07,500 --> 00:09:09,720
owners with a yardstick that they can

262
00:09:09,720 --> 00:09:12,000
use to assess the degree of trust that

263
00:09:12,000 --> 00:09:13,680
can be placed on an application right so

264
00:09:13,680 --> 00:09:15,240
for example if you're an application

265
00:09:15,240 --> 00:09:17,640
owner you say you know this this system

266
00:09:17,640 --> 00:09:20,399
has a lot of sensitive data and it's

267
00:09:20,399 --> 00:09:22,680
handling say medical information or

268
00:09:22,680 --> 00:09:24,899
large value transactions therefore they

269
00:09:24,899 --> 00:09:26,399
set the bar at the SVS level three

270
00:09:26,399 --> 00:09:28,500
meaning every single control is in scope

271
00:09:28,500 --> 00:09:30,540
and then you can then measure how you

272
00:09:30,540 --> 00:09:31,980
align with that level three that you've

273
00:09:31,980 --> 00:09:34,200
set as an application or conversely you

274
00:09:34,200 --> 00:09:35,640
can say my application doesn't include a

275
00:09:35,640 --> 00:09:37,140
lot of sensitive data and it includes

276
00:09:37,140 --> 00:09:39,120
just some basic data Maybe not a lot of

277
00:09:39,120 --> 00:09:41,100
pii and it's going to be a level one so

278
00:09:41,100 --> 00:09:42,839
then your yardstick becomes the level

279
00:09:42,839 --> 00:09:44,160
one set of requirements that are about

280
00:09:44,160 --> 00:09:46,680
130 or so of them the other thing is you

281
00:09:46,680 --> 00:09:48,000
can use it as a guidance for secure

282
00:09:48,000 --> 00:09:50,220
development right so not a code secure

283
00:09:50,220 --> 00:09:53,220
coding list but as a guide that

284
00:09:53,220 --> 00:09:55,260
developers can again leverage and

285
00:09:55,260 --> 00:09:57,060
understand what what security should

286
00:09:57,060 --> 00:09:58,860
they be building what technical controls

287
00:09:58,860 --> 00:10:00,180
should they be building into their

288
00:10:00,180 --> 00:10:01,560
application and finally my favorite

289
00:10:01,560 --> 00:10:03,600
using your drink procurement for

290
00:10:03,600 --> 00:10:04,920
application security right there's a lot

291
00:10:04,920 --> 00:10:07,080
of vendors out there that say I pen test

292
00:10:07,080 --> 00:10:08,339
your application and then you get a

293
00:10:08,339 --> 00:10:09,720
quote from them and they say yeah we're

294
00:10:09,720 --> 00:10:11,040
going to test authentication

295
00:10:11,040 --> 00:10:13,920
authorization some other stuff right but

296
00:10:13,920 --> 00:10:15,060
then if you ask them what are the test

297
00:10:15,060 --> 00:10:16,500
cases they don't really have them they

298
00:10:16,500 --> 00:10:19,080
just get a a professional they throw

299
00:10:19,080 --> 00:10:20,760
them at the application and they just

300
00:10:20,760 --> 00:10:22,500
freeform it right and then the problem

301
00:10:22,500 --> 00:10:23,580
with that is two different people

302
00:10:23,580 --> 00:10:25,019
testing the application will come up

303
00:10:25,019 --> 00:10:26,399
with different results because they may

304
00:10:26,399 --> 00:10:29,279
not be testing exactly the same thing if

305
00:10:29,279 --> 00:10:31,560
if ASDS is used as a basis either for a

306
00:10:31,560 --> 00:10:33,300
volatility assessment or a pen test

307
00:10:33,300 --> 00:10:35,279
right if this used as a basis then

308
00:10:35,279 --> 00:10:36,959
you'll get consistent results and you

309
00:10:36,959 --> 00:10:38,339
don't have to limit yourself to asps

310
00:10:38,339 --> 00:10:40,320
right you can definitely start with asps

311
00:10:40,320 --> 00:10:42,240
and if the pen tester wants to free form

312
00:10:42,240 --> 00:10:43,560
it and do more than that there should be

313
00:10:43,560 --> 00:10:45,240
there should be definitely welcome to do

314
00:10:45,240 --> 00:10:46,980
so but at the minimum there should be

315
00:10:46,980 --> 00:10:49,620
that consistency so I would expect any

316
00:10:49,620 --> 00:10:51,420
pen test provider and I hate to use the

317
00:10:51,420 --> 00:10:52,980
term pen testing because all ask

318
00:10:52,980 --> 00:10:54,360
themselves say pen testing is not as

319
00:10:54,360 --> 00:10:56,100
effective when you're testing your

320
00:10:56,100 --> 00:10:57,300
application you should be doing a design

321
00:10:57,300 --> 00:10:59,279
review and threat modeling and code

322
00:10:59,279 --> 00:11:01,800
review and Pen testing all together when

323
00:11:01,800 --> 00:11:03,540
you're testing your application but you

324
00:11:03,540 --> 00:11:05,700
know uh it's still uh you know it's a

325
00:11:05,700 --> 00:11:07,200
good idea to align all of those

326
00:11:07,200 --> 00:11:10,560
activities with asvs where possible

327
00:11:10,560 --> 00:11:12,540
so um you know again a lot of you see in

328
00:11:12,540 --> 00:11:14,459
ASCS but just as a refresher there are

329
00:11:14,459 --> 00:11:16,800
these 14 categories uh you know we

330
00:11:16,800 --> 00:11:18,540
category one is special because it's

331
00:11:18,540 --> 00:11:20,279
it's really around architecture design

332
00:11:20,279 --> 00:11:21,899
and scrap modeling is not you know it's

333
00:11:21,899 --> 00:11:23,820
more of a high level stuff and it gets a

334
00:11:23,820 --> 00:11:25,200
little bit into a process as well like

335
00:11:25,200 --> 00:11:27,720
you know do you do XYZ and things like

336
00:11:27,720 --> 00:11:31,140
that the categories two to towards 14

337
00:11:31,140 --> 00:11:33,120
they pretty much focus on technical

338
00:11:33,120 --> 00:11:34,380
controls right things like

339
00:11:34,380 --> 00:11:36,660
authentication session management access

340
00:11:36,660 --> 00:11:40,079
control all the way to you know API and

341
00:11:40,079 --> 00:11:42,060
web services and configuration there is

342
00:11:42,060 --> 00:11:43,800
a mobile version of asbs as well right

343
00:11:43,800 --> 00:11:45,180
there's a web version at a mobile one

344
00:11:45,180 --> 00:11:47,700
the web one was the original one that uh

345
00:11:47,700 --> 00:11:49,380
you know of course it covers web

346
00:11:49,380 --> 00:11:51,060
application specific controls things

347
00:11:51,060 --> 00:11:52,440
related to you know how cookies are

348
00:11:52,440 --> 00:11:54,180
handled or you know content security

349
00:11:54,180 --> 00:11:55,620
policies and things like that it also

350
00:11:55,620 --> 00:11:58,440
has a section on API the mobile one of

351
00:11:58,440 --> 00:12:01,200
course it focuses on the mobile client's

352
00:12:01,200 --> 00:12:03,180
specific controls but it also dabbles a

353
00:12:03,180 --> 00:12:05,279
little bit into API when we use it I

354
00:12:05,279 --> 00:12:06,720
don't usually use the API section from

355
00:12:06,720 --> 00:12:08,700
the mobile one the API section and the

356
00:12:08,700 --> 00:12:10,620
web one is is more comprehensive so I

357
00:12:10,620 --> 00:12:12,839
tend to rely on that so if someone comes

358
00:12:12,839 --> 00:12:13,920
to me and says hey I want to test my

359
00:12:13,920 --> 00:12:15,600
mobile app and it has a back end what

360
00:12:15,600 --> 00:12:17,339
I'll do is I'll use the controls for the

361
00:12:17,339 --> 00:12:19,200
mobile client from asses mobile and I'll

362
00:12:19,200 --> 00:12:21,180
use the back end controls from this

363
00:12:21,180 --> 00:12:22,380
particular standard so it created

364
00:12:22,380 --> 00:12:23,820
aggregate that's probably the best way

365
00:12:23,820 --> 00:12:25,320
to do it

366
00:12:25,320 --> 00:12:26,880
and and for those of you who have never

367
00:12:26,880 --> 00:12:28,920
seen asbs um you know each category is

368
00:12:28,920 --> 00:12:31,920
further broken into uh a subcategory so

369
00:12:31,920 --> 00:12:34,200
for example seven was error handling and

370
00:12:34,200 --> 00:12:35,820
logging and but seven is further broken

371
00:12:35,820 --> 00:12:37,860
into seven point one seven point two so

372
00:12:37,860 --> 00:12:39,540
for as an example here you can see in

373
00:12:39,540 --> 00:12:42,360
section 7.1 it's specific to law content

374
00:12:42,360 --> 00:12:43,740
and then they've got the three different

375
00:12:43,740 --> 00:12:45,800
levels here you can see that uh control

376
00:12:45,800 --> 00:12:49,019
7.11 and 7.12 they apply to all three

377
00:12:49,019 --> 00:12:51,240
level one two and three so if you say my

378
00:12:51,240 --> 00:12:53,880
applications at any ASDS level these two

379
00:12:53,880 --> 00:12:55,800
controls would apply but control seven

380
00:12:55,800 --> 00:12:58,620
1.3 only applies to applications that

381
00:12:58,620 --> 00:13:00,480
are determined to be at levels two or

382
00:13:00,480 --> 00:13:02,579
three Assurance requirement and and so

383
00:13:02,579 --> 00:13:04,320
you know it's uh it's uh nicely

384
00:13:04,320 --> 00:13:05,459
organized and they're actually going

385
00:13:05,459 --> 00:13:07,320
through an update right now version five

386
00:13:07,320 --> 00:13:09,420
is supposed to come out and when I spoke

387
00:13:09,420 --> 00:13:10,860
to Jim matico he was saying it's going

388
00:13:10,860 --> 00:13:12,540
to be the changes are going to be major

389
00:13:12,540 --> 00:13:15,420
so look out for it um I'm pretty excited

390
00:13:15,420 --> 00:13:16,920
about the the version coming out we've

391
00:13:16,920 --> 00:13:18,839
been contributing quite a bit uh to the

392
00:13:18,839 --> 00:13:20,820
existing version so hopefully uh we'll

393
00:13:20,820 --> 00:13:22,440
see the results of that

394
00:13:22,440 --> 00:13:23,820
so let's talk about the security

395
00:13:23,820 --> 00:13:26,519
knowledge framework itself so SKF and

396
00:13:26,519 --> 00:13:28,260
I'm going to show it to you in a second

397
00:13:28,260 --> 00:13:29,519
um you know we'll do a quick walk

398
00:13:29,519 --> 00:13:31,200
through it has the following key

399
00:13:31,200 --> 00:13:32,700
features so it lets you have projects

400
00:13:32,700 --> 00:13:33,959
and I put a couple of stars there

401
00:13:33,959 --> 00:13:35,760
because the projects on The Learning

402
00:13:35,760 --> 00:13:36,720
Journey they're still under heavy

403
00:13:36,720 --> 00:13:37,980
development and in fact I don't really

404
00:13:37,980 --> 00:13:40,139
recommend using the projects the if

405
00:13:40,139 --> 00:13:41,760
you're using something like jira or some

406
00:13:41,760 --> 00:13:43,139
other project management tool you should

407
00:13:43,139 --> 00:13:44,820
just manage all your requirements in

408
00:13:44,820 --> 00:13:46,380
there my recommendation would be that

409
00:13:46,380 --> 00:13:48,779
you take the asps requirements that

410
00:13:48,779 --> 00:13:51,120
apply to you and then you put them in

411
00:13:51,120 --> 00:13:52,200
jira and you track them there because

412
00:13:52,200 --> 00:13:53,279
that's where the developers are living

413
00:13:53,279 --> 00:13:54,600
right you don't want to introduce yet

414
00:13:54,600 --> 00:13:56,399
another system where they're managing

415
00:13:56,399 --> 00:13:57,779
requirements that just people are not

416
00:13:57,779 --> 00:13:59,459
going to like that and and one of the

417
00:13:59,459 --> 00:14:01,680
one of the main uh things they say in

418
00:14:01,680 --> 00:14:03,839
devsecops is don't introduce more tools

419
00:14:03,839 --> 00:14:05,519
or things that take the process outside

420
00:14:05,519 --> 00:14:07,980
of the the developers uh the developers

421
00:14:07,980 --> 00:14:10,620
uh existing processor pipeline so the

422
00:14:10,620 --> 00:14:12,480
project one is there yeah question so

423
00:14:12,480 --> 00:14:13,920
when you say put them in jira you put

424
00:14:13,920 --> 00:14:16,560
all 268 or you put 14 and then

425
00:14:16,560 --> 00:14:19,260
categories yeah really good question so

426
00:14:19,260 --> 00:14:20,880
the first thing you should do is you

427
00:14:20,880 --> 00:14:22,800
should look at the application and scope

428
00:14:22,800 --> 00:14:24,480
out which controls are applicable to you

429
00:14:24,480 --> 00:14:26,459
so what I usually use out of that so

430
00:14:26,459 --> 00:14:27,899
first thing I do is I talk to the dev

431
00:14:27,899 --> 00:14:29,760
team or the owner of the project and

432
00:14:29,760 --> 00:14:31,139
let's see what kind of sensitive data

433
00:14:31,139 --> 00:14:32,399
this thing handles right so then they

434
00:14:32,399 --> 00:14:34,380
say okay well has a lot of pii but we're

435
00:14:34,380 --> 00:14:35,940
not doing like large value Payment

436
00:14:35,940 --> 00:14:37,260
Processing I'm like okay you're probably

437
00:14:37,260 --> 00:14:39,480
a level two right level two all narrows

438
00:14:39,480 --> 00:14:42,839
it down to about 260 I think then out of

439
00:14:42,839 --> 00:14:44,459
the 260 we say okay not all of those are

440
00:14:44,459 --> 00:14:45,660
going to apply to your application so

441
00:14:45,660 --> 00:14:47,399
what you got to do is go through them

442
00:14:47,399 --> 00:14:48,779
and unfortunately go through them one by

443
00:14:48,779 --> 00:14:50,699
one and this takes about three when I've

444
00:14:50,699 --> 00:14:52,019
done it on with clients it takes about

445
00:14:52,019 --> 00:14:53,880
three to five hours I usually do three

446
00:14:53,880 --> 00:14:56,100
different meetings one hour each and we

447
00:14:56,100 --> 00:14:57,779
go through them I usually give the list

448
00:14:57,779 --> 00:15:00,240
to the team I say hey go and read this

449
00:15:00,240 --> 00:15:01,680
list and then kind of take off which

450
00:15:01,680 --> 00:15:03,060
ones you think apply to you and then

451
00:15:03,060 --> 00:15:04,740
let's have those three meetings you know

452
00:15:04,740 --> 00:15:06,060
it's hour each and then we go through it

453
00:15:06,060 --> 00:15:07,560
together because some of the description

454
00:15:07,560 --> 00:15:08,940
is a little bit ambiguous even myself

455
00:15:08,940 --> 00:15:10,560
when I and I'm a security professional

456
00:15:10,560 --> 00:15:12,420
when I first write it got into the SCS

457
00:15:12,420 --> 00:15:13,920
four years ago a lot of it didn't make

458
00:15:13,920 --> 00:15:16,139
sense to me so I helped them understand

459
00:15:16,139 --> 00:15:17,940
what they actually mean so then once

460
00:15:17,940 --> 00:15:19,500
we've done that exercise we've scoped it

461
00:15:19,500 --> 00:15:21,480
out it usually narrows it down to a much

462
00:15:21,480 --> 00:15:23,519
smaller subset then the other thing that

463
00:15:23,519 --> 00:15:24,779
we do and I'm glad you asked this

464
00:15:24,779 --> 00:15:26,519
question so we let's say we've narrowed

465
00:15:26,519 --> 00:15:29,820
it down to 200 180 right not all of

466
00:15:29,820 --> 00:15:31,260
those would be things you put in just so

467
00:15:31,260 --> 00:15:33,120
some of those controls

468
00:15:33,120 --> 00:15:34,980
like let's say for example there's a

469
00:15:34,980 --> 00:15:36,720
whole bunch of them that are related to

470
00:15:36,720 --> 00:15:38,220
injecting certain things in the header

471
00:15:38,220 --> 00:15:40,199
in the HTTP response header right you

472
00:15:40,199 --> 00:15:41,880
can actually create a library out of

473
00:15:41,880 --> 00:15:43,260
those and then the developers can just

474
00:15:43,260 --> 00:15:44,699
use that library and then automatically

475
00:15:44,699 --> 00:15:46,620
you know every application that's using

476
00:15:46,620 --> 00:15:47,760
that Library those headers would get

477
00:15:47,760 --> 00:15:49,199
injected kind of like a cross-cutting

478
00:15:49,199 --> 00:15:51,300
concerns right that's that's one subset

479
00:15:51,300 --> 00:15:53,699
the other there's a bunch of them that

480
00:15:53,699 --> 00:15:55,079
uh they have to be they're also

481
00:15:55,079 --> 00:15:56,339
cross-cutting concerns but you can't

482
00:15:56,339 --> 00:15:57,779
apply them as a library as an example

483
00:15:57,779 --> 00:16:01,079
input validation right every field you

484
00:16:01,079 --> 00:16:02,399
add to your application will require

485
00:16:02,399 --> 00:16:04,260
input validation so it's not necessarily

486
00:16:04,260 --> 00:16:06,180
specific to a particular user story it

487
00:16:06,180 --> 00:16:07,740
just applies everywhere access control

488
00:16:07,740 --> 00:16:09,779
so what I do with those cross-cutting

489
00:16:09,779 --> 00:16:11,220
concerns or those common controls that

490
00:16:11,220 --> 00:16:13,560
apply to every user story I take those

491
00:16:13,560 --> 00:16:15,420
and I make a list of them of course

492
00:16:15,420 --> 00:16:16,620
these are the ones that the team has

493
00:16:16,620 --> 00:16:17,820
determined that are applicable to the

494
00:16:17,820 --> 00:16:19,560
application they're building and then I

495
00:16:19,560 --> 00:16:21,060
usually make that list because you need

496
00:16:21,060 --> 00:16:22,680
to have that list somewhere as a

497
00:16:22,680 --> 00:16:23,880
reminder right so every time they're

498
00:16:23,880 --> 00:16:25,440
building a new user story they think of

499
00:16:25,440 --> 00:16:27,300
those common controls so the best place

500
00:16:27,300 --> 00:16:28,620
to do that is not a piece of paper in

501
00:16:28,620 --> 00:16:29,880
their cubicle because no one works in an

502
00:16:29,880 --> 00:16:31,680
office anymore but the best place to do

503
00:16:31,680 --> 00:16:33,600
it as is a template in the pool request

504
00:16:33,600 --> 00:16:35,040
because a lot of teams are using GitHub

505
00:16:35,040 --> 00:16:37,860
or some a similar platform and you know

506
00:16:37,860 --> 00:16:39,360
they're often required to do a pull

507
00:16:39,360 --> 00:16:40,740
request and if someone has to review

508
00:16:40,740 --> 00:16:42,839
that and add comments for example in

509
00:16:42,839 --> 00:16:44,940
GitHub what you can do is make those

510
00:16:44,940 --> 00:16:46,500
controls a template in the pull request

511
00:16:46,500 --> 00:16:48,420
so when the person goes to review them

512
00:16:48,420 --> 00:16:50,519
those eight or ten items appear at the

513
00:16:50,519 --> 00:16:52,320
top of the uh the page where they

514
00:16:52,320 --> 00:16:53,759
provide their review so it's top of mind

515
00:16:53,759 --> 00:16:55,560
and you can say have you considered the

516
00:16:55,560 --> 00:16:57,120
following 10 controls so every time they

517
00:16:57,120 --> 00:16:58,980
pull they do pull requests those 10

518
00:16:58,980 --> 00:17:01,199
controls show up and then it says a

519
00:17:01,199 --> 00:17:03,000
reminder for them to make sure they've

520
00:17:03,000 --> 00:17:04,319
considered them so that's the second

521
00:17:04,319 --> 00:17:06,119
thing and then the remainder of those

522
00:17:06,119 --> 00:17:07,199
let's say there's like the other 100

523
00:17:07,199 --> 00:17:08,819
that are remaining there's specific

524
00:17:08,819 --> 00:17:10,020
things you have to build like for

525
00:17:10,020 --> 00:17:12,119
example make sure using bcrypt with 13

526
00:17:12,119 --> 00:17:13,859
iterations when you hash passwords

527
00:17:13,859 --> 00:17:15,780
that's very specific so that becomes a

528
00:17:15,780 --> 00:17:17,819
user story in jira so I throw those as

529
00:17:17,819 --> 00:17:19,919
backlog items and jira those 100 or so

530
00:17:19,919 --> 00:17:21,540
that are remaining and then then we

531
00:17:21,540 --> 00:17:22,919
flash them out so then you know we

532
00:17:22,919 --> 00:17:24,900
create user stories around them that get

533
00:17:24,900 --> 00:17:26,579
implemented and the thing that you

534
00:17:26,579 --> 00:17:27,839
should be doing as well is that you

535
00:17:27,839 --> 00:17:29,400
should make sure that the developers are

536
00:17:29,400 --> 00:17:31,080
chipping away at it right because it's

537
00:17:31,080 --> 00:17:32,520
one thing to throw those 100 controls in

538
00:17:32,520 --> 00:17:34,260
the backlog and it's another because

539
00:17:34,260 --> 00:17:36,179
they don't every Sprint they prioritize

540
00:17:36,179 --> 00:17:39,059
functional requirements so ideally they

541
00:17:39,059 --> 00:17:41,520
would grab one or two of those uh items

542
00:17:41,520 --> 00:17:42,840
in your security epic or security

543
00:17:42,840 --> 00:17:44,520
backlog and adding them to each Sprint

544
00:17:44,520 --> 00:17:46,620
it's okay for them to maybe have a

545
00:17:46,620 --> 00:17:47,940
Sprint without any security but don't

546
00:17:47,940 --> 00:17:49,440
let it go for two or three Sprints where

547
00:17:49,440 --> 00:17:51,000
they've added nothing from the security

548
00:17:51,000 --> 00:17:52,980
backlog because and in my experience

549
00:17:52,980 --> 00:17:54,720
that the typical team that we've worked

550
00:17:54,720 --> 00:17:57,539
with that starts at zero to get them to

551
00:17:57,539 --> 00:17:58,860
implement all the level one requirements

552
00:17:58,860 --> 00:18:00,660
it takes about a year like you know just

553
00:18:00,660 --> 00:18:01,799
on average a lot of teams that I've

554
00:18:01,799 --> 00:18:03,299
worked with some teams go faster some

555
00:18:03,299 --> 00:18:05,280
teams go slower but that's been my

556
00:18:05,280 --> 00:18:07,140
experience is that they chip away at it

557
00:18:07,140 --> 00:18:08,700
over a few Sprints it takes about a year

558
00:18:08,700 --> 00:18:10,320
for them to implement those things uh

559
00:18:10,320 --> 00:18:11,640
over time yes please

560
00:18:11,640 --> 00:18:14,340
so with Dev teams trying to deploy the

561
00:18:14,340 --> 00:18:18,000
production of a fast rate yes

562
00:18:18,000 --> 00:18:20,640
how would you recommend enforcing this

563
00:18:20,640 --> 00:18:23,100
how would you recommend

564
00:18:23,100 --> 00:18:24,539
motivating develop

565
00:18:24,539 --> 00:18:26,640
ment good question so number one you

566
00:18:26,640 --> 00:18:28,380
don't want security to be a hindrance on

567
00:18:28,380 --> 00:18:30,120
the agility of devops absolutely not

568
00:18:30,120 --> 00:18:32,039
right like you want to what was that uh

569
00:18:32,039 --> 00:18:34,260
famous saying is like if a process take

570
00:18:34,260 --> 00:18:35,820
if a gate takes longer than nine minutes

571
00:18:35,820 --> 00:18:37,440
you're not agile right so you got to

572
00:18:37,440 --> 00:18:38,520
make sure everything you're putting in

573
00:18:38,520 --> 00:18:39,980
that process

574
00:18:39,980 --> 00:18:43,020
doesn't slow things down right and these

575
00:18:43,020 --> 00:18:44,760
uh and the good news is that these

576
00:18:44,760 --> 00:18:46,260
aren't Gates that you're putting in the

577
00:18:46,260 --> 00:18:48,179
process right so these are akin to

578
00:18:48,179 --> 00:18:49,679
additional user stories that the

579
00:18:49,679 --> 00:18:50,880
business team would provide to you right

580
00:18:50,880 --> 00:18:52,980
so if the business wants nine new

581
00:18:52,980 --> 00:18:54,539
requirements they go into backlog right

582
00:18:54,539 --> 00:18:56,400
and consider these 100 requirements that

583
00:18:56,400 --> 00:18:58,500
go into the backlog so it's not they're

584
00:18:58,500 --> 00:19:00,840
not gates in the pipeline they're more

585
00:19:00,840 --> 00:19:03,360
store user stories that go into going to

586
00:19:03,360 --> 00:19:04,620
the backlog and then the development

587
00:19:04,620 --> 00:19:06,600
team grabs a couple of them each Sprint

588
00:19:06,600 --> 00:19:08,100
and influence those so that shouldn't

589
00:19:08,100 --> 00:19:09,600
really slow down the pipeline in terms

590
00:19:09,600 --> 00:19:12,240
of deployment now having said that I did

591
00:19:12,240 --> 00:19:13,740
mention that some of those things should

592
00:19:13,740 --> 00:19:15,240
be put in as a template in the pull

593
00:19:15,240 --> 00:19:16,620
request right so like in the original

594
00:19:16,620 --> 00:19:18,660
example we were talking about say 230

595
00:19:18,660 --> 00:19:21,840
controls maybe maybe 15 of them become a

596
00:19:21,840 --> 00:19:23,400
library that you make that the teams can

597
00:19:23,400 --> 00:19:25,380
use this is actually a lot project I was

598
00:19:25,380 --> 00:19:26,880
talking to Jeff Williams yesterday he

599
00:19:26,880 --> 00:19:28,559
mentioned there is a project that has

600
00:19:28,559 --> 00:19:30,240
done that so let's say some of those

601
00:19:30,240 --> 00:19:31,919
become libraries when that's great you

602
00:19:31,919 --> 00:19:33,419
just tell the developers hey use this

603
00:19:33,419 --> 00:19:34,740
library and it automatically applies

604
00:19:34,740 --> 00:19:36,720
these 10 controls that's awesome some of

605
00:19:36,720 --> 00:19:38,820
them become a list in your pull requests

606
00:19:38,820 --> 00:19:40,440
because they're common requirements like

607
00:19:40,440 --> 00:19:42,960
access control like every user story has

608
00:19:42,960 --> 00:19:44,940
to consider access control so you put

609
00:19:44,940 --> 00:19:47,280
those ones as a as a checklist that as a

610
00:19:47,280 --> 00:19:48,299
reminder so when they do the pull

611
00:19:48,299 --> 00:19:49,980
request it shows up hey have you

612
00:19:49,980 --> 00:19:51,900
considered input validation this this

613
00:19:51,900 --> 00:19:53,760
this and then the other ones are just

614
00:19:53,760 --> 00:19:55,320
user stories that they have to chip away

615
00:19:55,320 --> 00:19:57,299
at and build over time so none of these

616
00:19:57,299 --> 00:19:59,940
are hindrance in that pipe in the CI CD

617
00:19:59,940 --> 00:20:00,840
pipeline

618
00:20:00,840 --> 00:20:03,120
good question

619
00:20:03,120 --> 00:20:06,480
um so let me see if I can just quickly

620
00:20:06,480 --> 00:20:08,039
give you a tour

621
00:20:08,039 --> 00:20:09,720
um and we'll get we'll go into a bit

622
00:20:09,720 --> 00:20:11,220
more detail

623
00:20:11,220 --> 00:20:13,140
and

624
00:20:13,140 --> 00:20:14,460
[Music]

625
00:20:14,460 --> 00:20:18,000
okay so here I've got uh I've got this

626
00:20:18,000 --> 00:20:19,919
is the the official webpage for the

627
00:20:19,919 --> 00:20:21,299
security knowledge framework and then if

628
00:20:21,299 --> 00:20:22,980
you go to the demo I mean ideally you

629
00:20:22,980 --> 00:20:24,059
would stand up your own and I'm going to

630
00:20:24,059 --> 00:20:25,620
show you how to do that but if you go to

631
00:20:25,620 --> 00:20:26,940
the demo they've got this online which

632
00:20:26,940 --> 00:20:28,679
is good enough for us to have a quick

633
00:20:28,679 --> 00:20:31,140
look at and um

634
00:20:31,140 --> 00:20:33,780
you can see that uh they've made it kind

635
00:20:33,780 --> 00:20:35,640
of pretty so if you're a developer you

636
00:20:35,640 --> 00:20:36,900
know they've kind of made it easy for

637
00:20:36,900 --> 00:20:38,220
you to get a head start if you're a pen

638
00:20:38,220 --> 00:20:40,200
tester you've got a section for you if

639
00:20:40,200 --> 00:20:41,520
you want to go into training Labs you

640
00:20:41,520 --> 00:20:42,840
can do that quickly or you can go to the

641
00:20:42,840 --> 00:20:44,160
checklist all of these things are also

642
00:20:44,160 --> 00:20:45,960
available at the top right so you can go

643
00:20:45,960 --> 00:20:47,940
to your dashboard which is this you can

644
00:20:47,940 --> 00:20:49,260
go to the projects which is where you

645
00:20:49,260 --> 00:20:50,280
would actually

646
00:20:50,280 --> 00:20:52,020
um you know it's akin to jira right like

647
00:20:52,020 --> 00:20:53,400
you'd pick a bunch of requirements and

648
00:20:53,400 --> 00:20:55,080
then track them and all that for a

649
00:20:55,080 --> 00:20:56,280
specific application again I don't

650
00:20:56,280 --> 00:20:57,539
really recommend using this because most

651
00:20:57,539 --> 00:20:59,280
teams already have a project management

652
00:20:59,280 --> 00:21:01,799
tool and then the the fun part begins

653
00:21:01,799 --> 00:21:03,600
here where you have your checklists so

654
00:21:03,600 --> 00:21:06,480
it's got the webasses and the mobile SVS

655
00:21:06,480 --> 00:21:07,740
right and it's got all the different

656
00:21:07,740 --> 00:21:09,240
categories that I was mentioning you can

657
00:21:09,240 --> 00:21:11,340
see you know that the architecture

658
00:21:11,340 --> 00:21:13,260
design authentication Etc et cetera

659
00:21:13,260 --> 00:21:14,700
they're all here you can add your own

660
00:21:14,700 --> 00:21:16,200
items as well if you have additional

661
00:21:16,200 --> 00:21:17,760
things or requirements that are not here

662
00:21:17,760 --> 00:21:20,280
and then there's the code examples and

663
00:21:20,280 --> 00:21:22,919
for a lot of these asvs items it's got

664
00:21:22,919 --> 00:21:24,299
examples in different languages like

665
00:21:24,299 --> 00:21:26,820
Java JavaScript python may not have it

666
00:21:26,820 --> 00:21:28,380
for everything and if it doesn't the

667
00:21:28,380 --> 00:21:29,820
good news is that it's open source

668
00:21:29,820 --> 00:21:32,100
platform so you can add to it for where

669
00:21:32,100 --> 00:21:34,020
examples may be missing but it's a great

670
00:21:34,020 --> 00:21:35,820
starting point I've been asked by a lot

671
00:21:35,820 --> 00:21:37,440
of clients who like hey I want to

672
00:21:37,440 --> 00:21:40,080
suppose my team is using you know PHP

673
00:21:40,080 --> 00:21:42,240
and they're using Java can you do that

674
00:21:42,240 --> 00:21:43,380
specifically and there's a lot of really

675
00:21:43,380 --> 00:21:45,539
great examples and the beauty is that

676
00:21:45,539 --> 00:21:47,460
there's traceability right so you can

677
00:21:47,460 --> 00:21:49,620
pick an ASDS item and then you can go in

678
00:21:49,620 --> 00:21:51,299
from the checklist into the code

679
00:21:51,299 --> 00:21:54,240
examples and there's also a lab that

680
00:21:54,240 --> 00:21:55,679
correlates to that right so it's all

681
00:21:55,679 --> 00:21:57,120
traceable from the lab so the code

682
00:21:57,120 --> 00:21:59,220
examples or the checklist itself and

683
00:21:59,220 --> 00:22:00,780
then there's the knowledge base and one

684
00:22:00,780 --> 00:22:01,919
of the things that I really like about

685
00:22:01,919 --> 00:22:03,600
this as opposed to just using asps

686
00:22:03,600 --> 00:22:06,059
itself is that asbs on its own doesn't

687
00:22:06,059 --> 00:22:07,679
give a lot of um

688
00:22:07,679 --> 00:22:09,960
doesn't give a lot of information so it

689
00:22:09,960 --> 00:22:12,419
just says you know verify that XYZ and

690
00:22:12,419 --> 00:22:13,679
then the T the person's like well

691
00:22:13,679 --> 00:22:14,940
actually what does that really mean

692
00:22:14,940 --> 00:22:16,860
right so you can go in there and you can

693
00:22:16,860 --> 00:22:18,240
read more about it so let's take a look

694
00:22:18,240 --> 00:22:19,620
here for example in the authentication

695
00:22:19,620 --> 00:22:21,299
requirements there's a whole bunch of

696
00:22:21,299 --> 00:22:22,020
them

697
00:22:22,020 --> 00:22:23,940
um okay this this is the so you can see

698
00:22:23,940 --> 00:22:27,299
here for example for 2.1.1

699
00:22:27,299 --> 00:22:29,159
this is what esps has verified that a

700
00:22:29,159 --> 00:22:30,720
user sets passwords that at least 12

701
00:22:30,720 --> 00:22:32,100
characters well this is easy let's look

702
00:22:32,100 --> 00:22:34,620
at a little bit more challenging one

703
00:22:34,620 --> 00:22:36,539
um you know these are verify that

704
00:22:36,539 --> 00:22:38,280
password submitted during let's actually

705
00:22:38,280 --> 00:22:39,480
you know what let's look at session

706
00:22:39,480 --> 00:22:43,320
management let's go to this one

707
00:22:43,320 --> 00:22:45,240
and then you know let's pick at any of

708
00:22:45,240 --> 00:22:46,620
these right like verify the application

709
00:22:46,620 --> 00:22:48,419
generates a new session token on user

710
00:22:48,419 --> 00:22:49,620
authentication so if you really want to

711
00:22:49,620 --> 00:22:50,640
know what that really means you can

712
00:22:50,640 --> 00:22:52,440
click here and there's a lot more detail

713
00:22:52,440 --> 00:22:54,480
here about that which the regular asps

714
00:22:54,480 --> 00:22:56,039
does not have so that that's one of the

715
00:22:56,039 --> 00:22:57,120
advantages of the security knowledge

716
00:22:57,120 --> 00:22:58,740
framework is this enrichment of extra

717
00:22:58,740 --> 00:23:00,360
data that helps you really understand

718
00:23:00,360 --> 00:23:02,400
what this control is about and often it

719
00:23:02,400 --> 00:23:04,380
has mitigations as well and the

720
00:23:04,380 --> 00:23:05,760
mitigations are also broken into

721
00:23:05,760 --> 00:23:07,380
different phases so it says if you're

722
00:23:07,380 --> 00:23:08,940
trying to achieve this control there's

723
00:23:08,940 --> 00:23:09,900
some stuff you can do during

724
00:23:09,900 --> 00:23:11,400
architecture design so it's got the

725
00:23:11,400 --> 00:23:12,840
different phases now in this case

726
00:23:12,840 --> 00:23:14,100
they're both things that you have to do

727
00:23:14,100 --> 00:23:15,539
during architecture design unfortunately

728
00:23:15,539 --> 00:23:17,400
for this control but if you look at the

729
00:23:17,400 --> 00:23:18,720
other ones there'll be controls that you

730
00:23:18,720 --> 00:23:20,760
do during development or during testing

731
00:23:20,760 --> 00:23:23,220
and so on and so forth and then here it

732
00:23:23,220 --> 00:23:24,840
goes into the labs so for all of those

733
00:23:24,840 --> 00:23:26,520
asbs items if you really want to know

734
00:23:26,520 --> 00:23:28,440
how it actually works that's where the

735
00:23:28,440 --> 00:23:30,000
fun begins so you can launch a lab and

736
00:23:30,000 --> 00:23:31,980
then in that lab it'll demonstrate that

737
00:23:31,980 --> 00:23:33,840
particular that particular vulnerability

738
00:23:33,840 --> 00:23:35,340
in a nice small package and we'll look

739
00:23:35,340 --> 00:23:37,980
at an example of that further on so

740
00:23:37,980 --> 00:23:42,080
let's go back to our presentation here

741
00:23:43,320 --> 00:23:45,179
so

742
00:23:45,179 --> 00:23:47,220
getting it up and running yes this was

743
00:23:47,220 --> 00:23:48,780
uh the motivator for this presentation

744
00:23:48,780 --> 00:23:50,400
so I'm going to talk about how to get it

745
00:23:50,400 --> 00:23:52,380
up and running AWS but we also released

746
00:23:52,380 --> 00:23:53,880
code on the GitHub link that I'll share

747
00:23:53,880 --> 00:23:55,679
with you so you can run it on minicube

748
00:23:55,679 --> 00:23:57,059
on your local machine but if you're

749
00:23:57,059 --> 00:23:58,440
working in a large team it kind of makes

750
00:23:58,440 --> 00:24:00,179
sense to set it up in AWS and have the

751
00:24:00,179 --> 00:24:01,860
whole team use one instance right for

752
00:24:01,860 --> 00:24:03,059
the whole for the whole company or for

753
00:24:03,059 --> 00:24:04,500
the whole team but if you wanted people

754
00:24:04,500 --> 00:24:05,940
to run it on their own machines we've

755
00:24:05,940 --> 00:24:07,919
also made that possible

756
00:24:07,919 --> 00:24:09,600
um so quick pull you already talked

757
00:24:09,600 --> 00:24:10,799
about who's using kubernetes that I'm

758
00:24:10,799 --> 00:24:12,600
assuming most of you know Docker or have

759
00:24:12,600 --> 00:24:14,580
used it yeah awesome

760
00:24:14,580 --> 00:24:17,580
um AWS who's in there okay nice so this

761
00:24:17,580 --> 00:24:19,620
would be pretty useful to you

762
00:24:19,620 --> 00:24:20,640
um

763
00:24:20,640 --> 00:24:22,980
so yeah there's the URL so the code that

764
00:24:22,980 --> 00:24:24,240
we've created to make this work is

765
00:24:24,240 --> 00:24:25,620
released there again I'll put it back on

766
00:24:25,620 --> 00:24:27,240
the slide at the end as well and there

767
00:24:27,240 --> 00:24:28,380
are two different ways to work with it

768
00:24:28,380 --> 00:24:30,299
as I mentioned one is locally using mini

769
00:24:30,299 --> 00:24:32,159
Cube and Docker compose this is more

770
00:24:32,159 --> 00:24:33,600
suitable for the developer one person

771
00:24:33,600 --> 00:24:34,860
using it but if you're in a team

772
00:24:34,860 --> 00:24:36,659
environment and you're a particularly if

773
00:24:36,659 --> 00:24:38,460
you're the devops guy or the it Ops guy

774
00:24:38,460 --> 00:24:41,400
it's it's valuable to set it up on AWS

775
00:24:41,400 --> 00:24:44,039
using cops and terraform

776
00:24:44,039 --> 00:24:44,820
um

777
00:24:44,820 --> 00:24:47,460
cops are sometimes referred as uh Coupe

778
00:24:47,460 --> 00:24:49,620
control for spinning up clusters cops

779
00:24:49,620 --> 00:24:52,500
lets you create destroy and upgrade uh

780
00:24:52,500 --> 00:24:54,480
clusters and is supported on AWS so

781
00:24:54,480 --> 00:24:56,159
Amazon so we're going to cover more of

782
00:24:56,159 --> 00:24:58,559
that uh with GK supported beta and

783
00:24:58,559 --> 00:25:01,020
VMware vsphere support in Alpha so those

784
00:25:01,020 --> 00:25:03,600
aren't quite ready for prime time but

785
00:25:03,600 --> 00:25:05,940
the AWS version is and and it does work

786
00:25:05,940 --> 00:25:07,740
and we're going to show you that now the

787
00:25:07,740 --> 00:25:09,179
lessons we learned while we were doing

788
00:25:09,179 --> 00:25:10,679
this is one that you have to use the so

789
00:25:10,679 --> 00:25:13,740
branch and SKF 4.1 Docker images so if

790
00:25:13,740 --> 00:25:15,000
you're not doing that you're probably

791
00:25:15,000 --> 00:25:16,919
not going to work and then you got to

792
00:25:16,919 --> 00:25:19,500
use costs and terraform AWS we use let's

793
00:25:19,500 --> 00:25:22,200
encrypt for the certificates uh as part

794
00:25:22,200 --> 00:25:23,760
of this and so when you run our code

795
00:25:23,760 --> 00:25:25,860
from GitHub it'll it'll leverage get uh

796
00:25:25,860 --> 00:25:27,059
let's encrypt and I'll show you how that

797
00:25:27,059 --> 00:25:29,279
works we'll do a run through and then

798
00:25:29,279 --> 00:25:31,020
it's got uh you know various AWS

799
00:25:31,020 --> 00:25:33,120
Integrations I highly encourage you to

800
00:25:33,120 --> 00:25:35,580
join the security knowledge framework uh

801
00:25:35,580 --> 00:25:37,380
slack channel in your journey because if

802
00:25:37,380 --> 00:25:38,880
you run into problems there's great

803
00:25:38,880 --> 00:25:40,559
folks there that can help you with that

804
00:25:40,559 --> 00:25:43,559
and the the the current version of SKF

805
00:25:43,559 --> 00:25:47,700
is maxed out at uh at 1.2114 so the

806
00:25:47,700 --> 00:25:49,320
that's that's one of the challenges is

807
00:25:49,320 --> 00:25:50,940
because uh you know things have gone

808
00:25:50,940 --> 00:25:54,059
beyond that to version 1.25 and uh you

809
00:25:54,059 --> 00:25:56,220
that's exactly what we've uh We've we've

810
00:25:56,220 --> 00:25:58,440
fixed we've changed parts of the code to

811
00:25:58,440 --> 00:26:00,600
make it work given that SKF has not been

812
00:26:00,600 --> 00:26:01,679
updated to work with the latest

813
00:26:01,679 --> 00:26:04,200
kubernetes so

814
00:26:04,200 --> 00:26:05,880
um yeah because like the current SKF was

815
00:26:05,880 --> 00:26:08,460
designed for kubernetes 1.21 and uh

816
00:26:08,460 --> 00:26:10,200
there are there are changes particularly

817
00:26:10,200 --> 00:26:13,260
around the Ingress API so that when this

818
00:26:13,260 --> 00:26:15,179
was made the networking Ingress was in

819
00:26:15,179 --> 00:26:17,159
beta but since then is no longer beta

820
00:26:17,159 --> 00:26:18,299
there have been slight changes there's

821
00:26:18,299 --> 00:26:20,880
actually two there's only two changes in

822
00:26:20,880 --> 00:26:22,799
two different parts as you can see that

823
00:26:22,799 --> 00:26:24,059
we've made it one of them is here

824
00:26:24,059 --> 00:26:26,700
related to this uh this line of code and

825
00:26:26,700 --> 00:26:28,200
then the other one is over here that we

826
00:26:28,200 --> 00:26:30,240
that we fixed and that that was part of

827
00:26:30,240 --> 00:26:31,620
that that was the changes that we made

828
00:26:31,620 --> 00:26:32,700
there were a few other things that we

829
00:26:32,700 --> 00:26:34,020
did as well but those were the primary

830
00:26:34,020 --> 00:26:36,000
uh primary issues that we resolved so

831
00:26:36,000 --> 00:26:37,200
those those areas hopefully we get

832
00:26:37,200 --> 00:26:39,299
Rewritten uh by the project owners and

833
00:26:39,299 --> 00:26:40,740
then this this will get fixed but with

834
00:26:40,740 --> 00:26:42,480
the time being you can leverage the

835
00:26:42,480 --> 00:26:44,880
changes that we've made

836
00:26:44,880 --> 00:26:48,779
so let's just do a quick demo uh here

837
00:26:48,779 --> 00:26:50,460
and I'll just show you how this works so

838
00:26:50,460 --> 00:26:52,860
when you run our scripts what it'll do

839
00:26:52,860 --> 00:26:54,539
is it'll generate a whole bunch of other

840
00:26:54,539 --> 00:26:56,279
scripts and then it makes and they're

841
00:26:56,279 --> 00:26:57,779
all numbered really easily and

842
00:26:57,779 --> 00:27:00,299
architecturally uh how this works is it

843
00:27:00,299 --> 00:27:03,179
sets up two clusters

844
00:27:03,179 --> 00:27:05,700
what it does I'm just going to run it on

845
00:27:05,700 --> 00:27:07,559
double speed here it basically you run

846
00:27:07,559 --> 00:27:10,440
this uh you Source this AWS SKF cuffs

847
00:27:10,440 --> 00:27:13,200
shell script and then it generates these

848
00:27:13,200 --> 00:27:15,480
numbered scripts for you so the first

849
00:27:15,480 --> 00:27:18,120
number is uh the step so we've got zero

850
00:27:18,120 --> 00:27:19,919
one zero zero two zero and so on and so

851
00:27:19,919 --> 00:27:22,080
forth so but you'll see that when you

852
00:27:22,080 --> 00:27:23,940
run that uh when you when you run that

853
00:27:23,940 --> 00:27:25,980
when you Source it you'll see that those

854
00:27:25,980 --> 00:27:27,480
scripts automatically your shell scripts

855
00:27:27,480 --> 00:27:29,880
uh get generated for you and because of

856
00:27:29,880 --> 00:27:31,320
the numbering system it's easy to run

857
00:27:31,320 --> 00:27:32,640
through them so you start running

858
00:27:32,640 --> 00:27:34,200
through all the zero the ones that start

859
00:27:34,200 --> 00:27:36,960
with zero so zero one zero two etc etc

860
00:27:36,960 --> 00:27:39,539
those will set up the labs cluster

861
00:27:39,539 --> 00:27:41,039
because essentially there are two

862
00:27:41,039 --> 00:27:43,559
clusters for security two kubernetes

863
00:27:43,559 --> 00:27:45,539
clusters required for the uh security

864
00:27:45,539 --> 00:27:48,179
knowledge framework one cluster is going

865
00:27:48,179 --> 00:27:49,679
to run all the labs and the other

866
00:27:49,679 --> 00:27:51,240
cluster is going to run what they call

867
00:27:51,240 --> 00:27:53,100
Demo or the actual security knowledge

868
00:27:53,100 --> 00:27:55,559
framework software itself why do we need

869
00:27:55,559 --> 00:27:57,120
two clusters does anyone want to take a

870
00:27:57,120 --> 00:27:58,980
wild guess why they use two clusters for

871
00:27:58,980 --> 00:28:01,020
this and I'll just pause this here so

872
00:28:01,020 --> 00:28:02,400
that

873
00:28:02,400 --> 00:28:04,620
any idea why they're using two clusters

874
00:28:04,620 --> 00:28:05,940
that was my first question I was like

875
00:28:05,940 --> 00:28:07,200
hey how come they didn't just use one

876
00:28:07,200 --> 00:28:08,880
kubernetes cluster and just have the

877
00:28:08,880 --> 00:28:10,380
labs be a bunch of containers and then

878
00:28:10,380 --> 00:28:11,400
the main application is another

879
00:28:11,400 --> 00:28:13,080
container right

880
00:28:13,080 --> 00:28:14,880
the the reason that they wanted to do

881
00:28:14,880 --> 00:28:16,679
that is because the labs have

882
00:28:16,679 --> 00:28:18,840
vulnerabilities so if someone breaks out

883
00:28:18,840 --> 00:28:20,039
a lot of those vulnerabilities they

884
00:28:20,039 --> 00:28:21,419
could technically talk to Coupe control

885
00:28:21,419 --> 00:28:23,039
and if you're running your command and

886
00:28:23,039 --> 00:28:24,299
control there with all your passwords

887
00:28:24,299 --> 00:28:25,799
for the users to log in then they could

888
00:28:25,799 --> 00:28:27,419
technically compromise it it's a bit of

889
00:28:27,419 --> 00:28:29,279
an Overkill there are security measures

890
00:28:29,279 --> 00:28:30,900
that you can use kubernetes policies and

891
00:28:30,900 --> 00:28:32,100
other namespaces and other things you

892
00:28:32,100 --> 00:28:33,720
could segregate it try to make it more

893
00:28:33,720 --> 00:28:35,279
secure but they went on the side of B

894
00:28:35,279 --> 00:28:37,620
let's be really really secure so for

895
00:28:37,620 --> 00:28:39,720
that reason they set up two clusters one

896
00:28:39,720 --> 00:28:41,700
cluster is used to launch all the labs

897
00:28:41,700 --> 00:28:43,260
the other clusters used to run the

898
00:28:43,260 --> 00:28:45,000
command and controller the main security

899
00:28:45,000 --> 00:28:46,799
knowledge framework application and

900
00:28:46,799 --> 00:28:48,240
that's where it got tricky right that's

901
00:28:48,240 --> 00:28:50,039
why they need to set up the Ingress and

902
00:28:50,039 --> 00:28:53,400
the Ingress API on the lab side so that

903
00:28:53,400 --> 00:28:55,200
the the command and control can actually

904
00:28:55,200 --> 00:28:57,779
call the other side of things and launch

905
00:28:57,779 --> 00:29:00,299
the uh the labs so yeah as you can see

906
00:29:00,299 --> 00:29:02,279
uh you know the scripts run and then you

907
00:29:02,279 --> 00:29:04,200
basically run them in order and so the

908
00:29:04,200 --> 00:29:06,779
first one sets up all the lab the lab

909
00:29:06,779 --> 00:29:08,340
piece so then now we're into the second

910
00:29:08,340 --> 00:29:09,659
one right because you can see these ones

911
00:29:09,659 --> 00:29:12,179
now start with one so one one oh one two

912
00:29:12,179 --> 00:29:14,220
o one three oh so they basically Define

913
00:29:14,220 --> 00:29:17,039
your demo cluster you create the demo

914
00:29:17,039 --> 00:29:18,600
cluster they validated they create the

915
00:29:18,600 --> 00:29:20,159
Ingress API and then they get the

916
00:29:20,159 --> 00:29:23,279
Ingress API information the the script

917
00:29:23,279 --> 00:29:25,140
will automate all of these it'll set up

918
00:29:25,140 --> 00:29:27,480
C names as long as you've got your AWS

919
00:29:27,480 --> 00:29:29,100
uh um

920
00:29:29,100 --> 00:29:31,620
context set up and the the instructions

921
00:29:31,620 --> 00:29:33,480
are all provided in the readme so when

922
00:29:33,480 --> 00:29:35,279
you go to our GitHub you'll see all the

923
00:29:35,279 --> 00:29:37,080
instructions provided there for you but

924
00:29:37,080 --> 00:29:39,840
you know if you've configured uh AWS

925
00:29:39,840 --> 00:29:41,940
contacts with an IAM user that has the

926
00:29:41,940 --> 00:29:43,140
right permissions to be able to launch

927
00:29:43,140 --> 00:29:44,880
these things then it should be easy but

928
00:29:44,880 --> 00:29:46,020
if you're running into problems that's

929
00:29:46,020 --> 00:29:47,520
what I encourage you to look it's

930
00:29:47,520 --> 00:29:49,200
probably because you haven't used an IIM

931
00:29:49,200 --> 00:29:50,760
user that has the right permissions to

932
00:29:50,760 --> 00:29:52,380
be able to launch all these things so at

933
00:29:52,380 --> 00:29:53,940
the end of it um you know it'll go

934
00:29:53,940 --> 00:29:55,500
through so in this we've already

935
00:29:55,500 --> 00:29:57,960
launched the uh the labs cluster now

936
00:29:57,960 --> 00:30:00,240
it's going through launching the uh

937
00:30:00,240 --> 00:30:01,860
the command and control what they call

938
00:30:01,860 --> 00:30:04,020
the demo cluster and then it sets up all

939
00:30:04,020 --> 00:30:05,460
the certificates and at the end it gives

940
00:30:05,460 --> 00:30:07,320
you a URL in a second and then you

941
00:30:07,320 --> 00:30:09,480
basically take that URL and then um you

942
00:30:09,480 --> 00:30:11,039
know hopefully you can you can start

943
00:30:11,039 --> 00:30:13,320
using that so you can see here uh

944
00:30:13,320 --> 00:30:14,880
there's now there's a validator so it's

945
00:30:14,880 --> 00:30:17,279
going to validate again demo is the the

946
00:30:17,279 --> 00:30:18,659
name they're using for the command and

947
00:30:18,659 --> 00:30:20,580
control so there it is in this case that

948
00:30:20,580 --> 00:30:24,059
cluster uh sector SKF Ford sex zedwax is

949
00:30:24,059 --> 00:30:26,100
ready so then you you know set up the

950
00:30:26,100 --> 00:30:28,320
Ingress that you ran the final scripts

951
00:30:28,320 --> 00:30:30,720
that we provided there and in a you know

952
00:30:30,720 --> 00:30:32,279
a couple of minutes or less this is all

953
00:30:32,279 --> 00:30:33,840
up and running so it makes it super easy

954
00:30:33,840 --> 00:30:35,700
and hopefully you won't run into

955
00:30:35,700 --> 00:30:37,740
problems but if you do grab my email

956
00:30:37,740 --> 00:30:39,600
address at the end of this uh at the end

957
00:30:39,600 --> 00:30:40,980
of the presentation and give me a shout

958
00:30:40,980 --> 00:30:43,440
and like I said also join the join the

959
00:30:43,440 --> 00:30:46,140
SKF uh slack Channel you know we often

960
00:30:46,140 --> 00:30:47,340
tend to hang out in there and if we're

961
00:30:47,340 --> 00:30:48,480
not there's there's other people that

962
00:30:48,480 --> 00:30:50,760
can help you with it as well and so yeah

963
00:30:50,760 --> 00:30:52,320
and then this is the final step and you

964
00:30:52,320 --> 00:30:53,700
can see these numbers start with the two

965
00:30:53,700 --> 00:30:56,039
so there's the 200 and 210 and when you

966
00:30:56,039 --> 00:30:57,840
so these last steps that start with the

967
00:30:57,840 --> 00:30:59,580
two what they're doing these steps are

968
00:30:59,580 --> 00:31:00,960
actually deploying the that security

969
00:31:00,960 --> 00:31:02,399
knowledge framework software so you can

970
00:31:02,399 --> 00:31:04,380
and the components that are required the

971
00:31:04,380 --> 00:31:05,880
initial steps were all around kubernetes

972
00:31:05,880 --> 00:31:07,620
and then now you can see we're putting

973
00:31:07,620 --> 00:31:10,500
rabbitmq MySQL flask all these are all

974
00:31:10,500 --> 00:31:12,539
the pieces for the actual SKF command

975
00:31:12,539 --> 00:31:14,580
and control application so first you

976
00:31:14,580 --> 00:31:16,679
build the labs cluster then you build

977
00:31:16,679 --> 00:31:19,320
the the command and control cluster and

978
00:31:19,320 --> 00:31:21,240
then finally you deploy all the moving

979
00:31:21,240 --> 00:31:23,220
parts for SKF and then boom you've got

980
00:31:23,220 --> 00:31:25,020
yourself a

981
00:31:25,020 --> 00:31:27,360
an environment and you can see here it

982
00:31:27,360 --> 00:31:29,340
takes a bit for it to come up so be

983
00:31:29,340 --> 00:31:30,899
patient if you go to your URL and

984
00:31:30,899 --> 00:31:32,340
nothing comes up that just means that

985
00:31:32,340 --> 00:31:33,840
things are starting up so just give it a

986
00:31:33,840 --> 00:31:36,120
minute or two and then ideally by you

987
00:31:36,120 --> 00:31:37,380
know it takes a minute or two and it

988
00:31:37,380 --> 00:31:38,880
comes up and then you have a running

989
00:31:38,880 --> 00:31:40,559
environment so I'm just going to stop

990
00:31:40,559 --> 00:31:42,360
this here because then we'll go back and

991
00:31:42,360 --> 00:31:44,760
use the live environment to play around

992
00:31:44,760 --> 00:31:46,679
with some of the labs that it has I want

993
00:31:46,679 --> 00:31:48,179
to demonstrate an lfi involvement

994
00:31:48,179 --> 00:31:50,279
ability as an example here for the

995
00:31:50,279 --> 00:31:52,919
audience so

996
00:31:52,919 --> 00:31:56,539
let's go through here

997
00:31:56,659 --> 00:31:59,340
did we go back to the beginning let's

998
00:31:59,340 --> 00:32:02,360
get here

999
00:32:06,440 --> 00:32:11,600
something uh just give me a second

1000
00:32:11,840 --> 00:32:13,559
okay

1001
00:32:13,559 --> 00:32:16,340
we were here

1002
00:32:16,919 --> 00:32:18,480
cool

1003
00:32:18,480 --> 00:32:20,340
so we have a use case right we have this

1004
00:32:20,340 --> 00:32:23,640
company let's take a look and uh Acme

1005
00:32:23,640 --> 00:32:25,260
Corp has three developers they're going

1006
00:32:25,260 --> 00:32:27,120
to ten by the end of the year they want

1007
00:32:27,120 --> 00:32:28,260
these developers to build secure

1008
00:32:28,260 --> 00:32:29,940
software their Dev team knows it's

1009
00:32:29,940 --> 00:32:31,260
important to be secure but they have no

1010
00:32:31,260 --> 00:32:32,640
idea where to begin and this is pretty

1011
00:32:32,640 --> 00:32:33,899
common right a lot of deaf teams are

1012
00:32:33,899 --> 00:32:35,220
like hey I've been told to build a

1013
00:32:35,220 --> 00:32:37,080
security a secure application where do I

1014
00:32:37,080 --> 00:32:38,640
get requirements right so when I worked

1015
00:32:38,640 --> 00:32:41,640
at HSBC while we didn't use this in fact

1016
00:32:41,640 --> 00:32:43,080
I didn't really know about it a lot of

1017
00:32:43,080 --> 00:32:45,000
people don't we ended up creating our

1018
00:32:45,000 --> 00:32:46,740
own application security standard it was

1019
00:32:46,740 --> 00:32:47,880
a lot of work I don't recommend you

1020
00:32:47,880 --> 00:32:49,740
doing that I mean it was myself and two

1021
00:32:49,740 --> 00:32:51,360
other really experienced people we spent

1022
00:32:51,360 --> 00:32:53,700
a ton of time and then when we made it

1023
00:32:53,700 --> 00:32:55,679
it kept getting out of dates and you

1024
00:32:55,679 --> 00:32:57,840
know asvs is a you know open source

1025
00:32:57,840 --> 00:32:59,100
project lots of really smart people

1026
00:32:59,100 --> 00:33:00,840
contribute to it so don't make your own

1027
00:33:00,840 --> 00:33:02,520
application security standard just grab

1028
00:33:02,520 --> 00:33:03,899
this as the application security

1029
00:33:03,899 --> 00:33:05,520
standard and that's what the dev team

1030
00:33:05,520 --> 00:33:07,440
should do but they're like okay yeah we

1031
00:33:07,440 --> 00:33:08,640
grabbed the SVS but we don't understand

1032
00:33:08,640 --> 00:33:10,140
it Russia you barely understand it

1033
00:33:10,140 --> 00:33:12,059
yourself so then the thing is go here

1034
00:33:12,059 --> 00:33:14,159
use SKF and it's got lots of really

1035
00:33:14,159 --> 00:33:16,679
detailed explanations and so what this

1036
00:33:16,679 --> 00:33:17,880
team wants to do is they want to start

1037
00:33:17,880 --> 00:33:19,320
building security requirements into

1038
00:33:19,320 --> 00:33:21,120
their application so guess what I'm

1039
00:33:21,120 --> 00:33:22,679
going to tell them to learn with the

1040
00:33:22,679 --> 00:33:24,360
security knowledge framework right so go

1041
00:33:24,360 --> 00:33:25,740
and stand this up

1042
00:33:25,740 --> 00:33:28,200
as I you know go grab these scripts set

1043
00:33:28,200 --> 00:33:30,299
up an environment and and start using it

1044
00:33:30,299 --> 00:33:31,980
and um

1045
00:33:31,980 --> 00:33:33,600
let's take a look at let's take a look

1046
00:33:33,600 --> 00:33:34,860
at an example let me actually go to

1047
00:33:34,860 --> 00:33:36,899
hopefully the internet connection would

1048
00:33:36,899 --> 00:33:38,760
be solid and we can I want to show you

1049
00:33:38,760 --> 00:33:42,179
the lfi example so here it is right

1050
00:33:42,179 --> 00:33:44,039
so we've got this uh first of all

1051
00:33:44,039 --> 00:33:45,480
there's a write-up here if the person

1052
00:33:45,480 --> 00:33:46,919
wants to read a bit about it there's

1053
00:33:46,919 --> 00:33:48,360
write-ups on all the different labs in

1054
00:33:48,360 --> 00:33:50,519
here as well which is really nice and so

1055
00:33:50,519 --> 00:33:52,860
you can actually click here and it'll

1056
00:33:52,860 --> 00:33:54,539
what what it's doing right now is

1057
00:33:54,539 --> 00:33:57,000
standing up a container demonstrating

1058
00:33:57,000 --> 00:33:58,740
that vulnerability right so here let's

1059
00:33:58,740 --> 00:34:01,500
grab that and go and take a look so this

1060
00:34:01,500 --> 00:34:04,500
is uh mini application that demonstrates

1061
00:34:04,500 --> 00:34:06,539
this lfi right so

1062
00:34:06,539 --> 00:34:08,219
what is this thing this is a little

1063
00:34:08,219 --> 00:34:09,659
sample application in this sample

1064
00:34:09,659 --> 00:34:11,639
application you pick a chapter in a book

1065
00:34:11,639 --> 00:34:14,099
like intro chapter 1 chapter 2 and it'll

1066
00:34:14,099 --> 00:34:15,359
display the contents of that chapter

1067
00:34:15,359 --> 00:34:16,739
right so

1068
00:34:16,739 --> 00:34:19,020
you know if you pick uh you know here it

1069
00:34:19,020 --> 00:34:21,540
is like Etc so it goes and grabs that

1070
00:34:21,540 --> 00:34:24,179
now if as a developer if I go in there

1071
00:34:24,179 --> 00:34:26,820
and I change uh so like let's take a

1072
00:34:26,820 --> 00:34:28,260
look at it let's do it in Spec here I

1073
00:34:28,260 --> 00:34:30,980
can't hold a mic

1074
00:34:31,440 --> 00:34:34,460
if I go here

1075
00:34:37,580 --> 00:34:40,379
you can see that in in this uh in this

1076
00:34:40,379 --> 00:34:43,080
drop down what they're doing

1077
00:34:43,080 --> 00:34:45,560
look

1078
00:34:45,839 --> 00:34:48,719
yeah so you can see the select it has

1079
00:34:48,719 --> 00:34:50,099
the name and it's got the file name

1080
00:34:50,099 --> 00:34:51,540
right they're actually specifying the

1081
00:34:51,540 --> 00:34:54,480
file to grab for that so as a malicious

1082
00:34:54,480 --> 00:34:55,859
person I'm like hey I'm gonna just play

1083
00:34:55,859 --> 00:34:57,300
with that and see what I can put in

1084
00:34:57,300 --> 00:34:59,400
there right so what I can put in there

1085
00:34:59,400 --> 00:35:01,020
is I can change that to finally maybe

1086
00:35:01,020 --> 00:35:03,420
I'm interested in the slash Etc password

1087
00:35:03,420 --> 00:35:05,700
file because I know maybe this is a is a

1088
00:35:05,700 --> 00:35:09,060
Unix box so what I'm going to do uh go

1089
00:35:09,060 --> 00:35:11,160
here we'll just continue through that so

1090
00:35:11,160 --> 00:35:12,359
I'll go and change that file into

1091
00:35:12,359 --> 00:35:15,240
something else and see whether it'll

1092
00:35:15,240 --> 00:35:18,660
grab the file that I want so

1093
00:35:18,660 --> 00:35:20,460
let's see here

1094
00:35:20,460 --> 00:35:22,320
and uh so we'll just go I've just

1095
00:35:22,320 --> 00:35:23,760
automated this in case something goes

1096
00:35:23,760 --> 00:35:24,660
wrong because you never know during

1097
00:35:24,660 --> 00:35:27,359
presentations uh live live demos can go

1098
00:35:27,359 --> 00:35:28,619
wrong so this is the pre-recorded

1099
00:35:28,619 --> 00:35:31,260
version of it so yeah basically the the

1100
00:35:31,260 --> 00:35:33,480
the bad guy or the attacker could go in

1101
00:35:33,480 --> 00:35:35,460
this case and instead of uh you know

1102
00:35:35,460 --> 00:35:37,619
using that file and that was there you

1103
00:35:37,619 --> 00:35:40,740
can change that to you know

1104
00:35:40,740 --> 00:35:43,380
Etc pass WD and in this case uh when

1105
00:35:43,380 --> 00:35:44,760
that when that when that's done then now

1106
00:35:44,760 --> 00:35:46,440
you got the contents of that file so

1107
00:35:46,440 --> 00:35:47,880
that just demonstrated that volatility

1108
00:35:47,880 --> 00:35:49,560
really nicely for that person who's

1109
00:35:49,560 --> 00:35:51,420
trying to learn that and it focuses on a

1110
00:35:51,420 --> 00:35:53,160
single vulnerability there are lots of

1111
00:35:53,160 --> 00:35:54,540
vulnerable applications right that are

1112
00:35:54,540 --> 00:35:56,339
great Juice Shop is fantastic we use you

1113
00:35:56,339 --> 00:35:58,320
shop to train our developers uh there's

1114
00:35:58,320 --> 00:36:00,599
web code lots of goats out there but

1115
00:36:00,599 --> 00:36:01,800
what they don't do is they don't focus

1116
00:36:01,800 --> 00:36:04,260
on specific asvs vulnerabilities right

1117
00:36:04,260 --> 00:36:06,119
they just have like General OS top 10

1118
00:36:06,119 --> 00:36:07,500
built in and you're like well that's

1119
00:36:07,500 --> 00:36:09,300
great we use that for trading developers

1120
00:36:09,300 --> 00:36:10,500
but if you're trying to have that

1121
00:36:10,500 --> 00:36:13,200
traceability across from requirements to

1122
00:36:13,200 --> 00:36:14,640
learning all the way to what's being

1123
00:36:14,640 --> 00:36:16,380
built this is way better because now you

1124
00:36:16,380 --> 00:36:18,359
can say well I wanted the developer to

1125
00:36:18,359 --> 00:36:20,400
build these 100 requirements and then

1126
00:36:20,400 --> 00:36:21,480
they can go and learn about those

1127
00:36:21,480 --> 00:36:23,520
hundreds specifically right and then

1128
00:36:23,520 --> 00:36:24,960
also another thing that I usually

1129
00:36:24,960 --> 00:36:27,780
recommend is focus the training on where

1130
00:36:27,780 --> 00:36:29,400
the developers are weak and how do you

1131
00:36:29,400 --> 00:36:31,800
find out about that well take it take a

1132
00:36:31,800 --> 00:36:34,200
look at your last pen test result and or

1133
00:36:34,200 --> 00:36:36,420
I shouldn't use the word take a look at

1134
00:36:36,420 --> 00:36:38,339
the last application security assessment

1135
00:36:38,339 --> 00:36:40,020
result whether it was a code review or

1136
00:36:40,020 --> 00:36:42,599
threat or pen testing and then determine

1137
00:36:42,599 --> 00:36:44,160
where they failed right and hopefully

1138
00:36:44,160 --> 00:36:46,619
you used asvs to perform that assessment

1139
00:36:46,619 --> 00:36:48,660
let's not call it pen test hopefully use

1140
00:36:48,660 --> 00:36:50,400
asps to do that and then you're like

1141
00:36:50,400 --> 00:36:52,680
yeah these guys failed on these 100 asps

1142
00:36:52,680 --> 00:36:54,180
items then take those and say hey

1143
00:36:54,180 --> 00:36:56,099
developer you you guys failed on these

1144
00:36:56,099 --> 00:36:57,540
hundred go and learn about the in

1145
00:36:57,540 --> 00:36:58,980
security knowledge framework right so

1146
00:36:58,980 --> 00:37:00,900
that provides a really nice tie-in from

1147
00:37:00,900 --> 00:37:02,820
the pet from the pen No not pet that's

1148
00:37:02,820 --> 00:37:04,680
from this assessment that you did all

1149
00:37:04,680 --> 00:37:05,820
the way to the trading and the

1150
00:37:05,820 --> 00:37:07,500
development that you uh that you wanted

1151
00:37:07,500 --> 00:37:09,300
your developers to learn so that they

1152
00:37:09,300 --> 00:37:10,800
don't repeat those mistakes so next time

1153
00:37:10,800 --> 00:37:12,420
when it's time for the annual assessment

1154
00:37:12,420 --> 00:37:14,099
then the developers have learned about

1155
00:37:14,099 --> 00:37:15,119
them and they built them into the

1156
00:37:15,119 --> 00:37:16,320
application and they don't repeat the

1157
00:37:16,320 --> 00:37:18,060
mistakes right

1158
00:37:18,060 --> 00:37:19,619
so I think we're almost nearing the end

1159
00:37:19,619 --> 00:37:20,520
of time

1160
00:37:20,520 --> 00:37:23,579
so take away considerations

1161
00:37:23,579 --> 00:37:25,740
use asbs's security requirements to

1162
00:37:25,740 --> 00:37:28,440
build and test applications asbs is all

1163
00:37:28,440 --> 00:37:30,780
the things SKF can help you get more out

1164
00:37:30,780 --> 00:37:33,480
of the SVS right enriches that it gives

1165
00:37:33,480 --> 00:37:34,980
you recommendations gives you more

1166
00:37:34,980 --> 00:37:36,780
guidance deployed as part of your

1167
00:37:36,780 --> 00:37:38,339
application security training program

1168
00:37:38,339 --> 00:37:41,520
harness the power of asbs and SKF to

1169
00:37:41,520 --> 00:37:43,560
build a more secure software development

1170
00:37:43,560 --> 00:37:45,660
life cycle and you can customize the

1171
00:37:45,660 --> 00:37:47,400
code example so please do it you can

1172
00:37:47,400 --> 00:37:49,020
customize the checklist you can

1173
00:37:49,020 --> 00:37:50,640
customize the knowledge base right use

1174
00:37:50,640 --> 00:37:52,560
this as a basis and add a lot more to it

1175
00:37:52,560 --> 00:37:54,900
to make it fit your environment and you

1176
00:37:54,900 --> 00:37:56,220
know and then as I mentioned customize

1177
00:37:56,220 --> 00:37:57,599
the training based on the areas of

1178
00:37:57,599 --> 00:37:59,579
weakness identified during either

1179
00:37:59,579 --> 00:38:01,200
testing exercises that you've done

1180
00:38:01,200 --> 00:38:04,260
yourself or by Third parties and join

1181
00:38:04,260 --> 00:38:06,060
the the SKF effort right these are open

1182
00:38:06,060 --> 00:38:07,980
source projects they can use your help

1183
00:38:07,980 --> 00:38:10,920
for sure so um yeah thank you for

1184
00:38:10,920 --> 00:38:12,720
attending and I hope you enjoyed this

1185
00:38:12,720 --> 00:38:16,220
talk I'd like to open it up for Q a

1186
00:38:16,500 --> 00:38:18,119
questions questions I know there's been

1187
00:38:18,119 --> 00:38:19,920
some great questions already but uh you

1188
00:38:19,920 --> 00:38:21,960
know hoping that there's more if not

1189
00:38:21,960 --> 00:38:23,700
that's fine as well we could always uh

1190
00:38:23,700 --> 00:38:25,920
you can always reach out to me directly

1191
00:38:25,920 --> 00:38:27,180
um my contact information is there

1192
00:38:27,180 --> 00:38:29,040
that's my email address there's uh

1193
00:38:29,040 --> 00:38:30,540
there's our Twitter handle we're also

1194
00:38:30,540 --> 00:38:31,920
hiring so if you any of you are

1195
00:38:31,920 --> 00:38:33,839
interested in uh in a career in

1196
00:38:33,839 --> 00:38:35,640
application security working with us to

1197
00:38:35,640 --> 00:38:37,320
uh train your developer train developers

1198
00:38:37,320 --> 00:38:39,420
and and have some fun on the way and

1199
00:38:39,420 --> 00:38:41,520
there's the GitHub URL as well for you

1200
00:38:41,520 --> 00:38:43,020
to download the code that we talked

1201
00:38:43,020 --> 00:38:45,060
about yes

1202
00:38:45,060 --> 00:38:48,900
okay can you add your own Labs yeah

1203
00:38:48,900 --> 00:38:51,240
great we have 100 and you should and in

1204
00:38:51,240 --> 00:38:53,040
fact that's what we've done so even

1205
00:38:53,040 --> 00:38:54,359
Juice Shop like anything that's

1206
00:38:54,359 --> 00:38:55,800
containerized because this is just a

1207
00:38:55,800 --> 00:38:57,180
kubernetes that launches Docker

1208
00:38:57,180 --> 00:38:59,220
containers so you can just add any

1209
00:38:59,220 --> 00:39:02,040
containerized lab uh in there so we took

1210
00:39:02,040 --> 00:39:03,720
Jew shop as containerized we took that

1211
00:39:03,720 --> 00:39:05,220
and added in here so now in our team

1212
00:39:05,220 --> 00:39:06,720
they can launch juice shop from right

1213
00:39:06,720 --> 00:39:08,160
here but we need even more like we

1214
00:39:08,160 --> 00:39:09,420
actually looked at the labs they had and

1215
00:39:09,420 --> 00:39:10,800
there was a whole bunch missing so one

1216
00:39:10,800 --> 00:39:12,240
of our team members went and created 14

1217
00:39:12,240 --> 00:39:14,400
new Labs that demonstrate very specific

1218
00:39:14,400 --> 00:39:15,960
things as well and we just containerized

1219
00:39:15,960 --> 00:39:17,339
them and we launch them from here you

1220
00:39:17,339 --> 00:39:18,900
can do that with other platforms forms

1221
00:39:18,900 --> 00:39:20,160
like hack the Box there's a whole bunch

1222
00:39:20,160 --> 00:39:21,839
of other platforms that allow you to do

1223
00:39:21,839 --> 00:39:23,520
that but you know this this is great and

1224
00:39:23,520 --> 00:39:25,260
then as I mentioned there's a training

1225
00:39:25,260 --> 00:39:27,480
module that they're still working on one

1226
00:39:27,480 --> 00:39:28,859
like so right now without the training

1227
00:39:28,859 --> 00:39:30,060
module you can take any container

1228
00:39:30,060 --> 00:39:31,740
containerized lab or application and

1229
00:39:31,740 --> 00:39:33,839
have it launch from here but once they

1230
00:39:33,839 --> 00:39:36,240
fix finish creating that training module

1231
00:39:36,240 --> 00:39:37,920
then you can actually create training

1232
00:39:37,920 --> 00:39:39,960
paths right with scoring and all kinds

1233
00:39:39,960 --> 00:39:41,160
of really fun stuff so you can create

1234
00:39:41,160 --> 00:39:42,780
custom lessons for someone that would

1235
00:39:42,780 --> 00:39:44,820
involve a select number of labs in a

1236
00:39:44,820 --> 00:39:46,320
particular for a particular learning

1237
00:39:46,320 --> 00:39:48,359
outcome so yeah definitely encourage you

1238
00:39:48,359 --> 00:39:49,440
to do that

1239
00:39:49,440 --> 00:39:51,240
and it will release the custom Labs that

1240
00:39:51,240 --> 00:39:52,560
we worked on in the next little while as

1241
00:39:52,560 --> 00:39:53,579
well we'll probably put them all on our

1242
00:39:53,579 --> 00:39:55,200
GitHub as well so if you check out the

1243
00:39:55,200 --> 00:39:56,760
Ford security GitHub there's another

1244
00:39:56,760 --> 00:39:58,140
we've released a bunch of really good

1245
00:39:58,140 --> 00:40:00,119
tools um for those of you who are

1246
00:40:00,119 --> 00:40:02,520
companies are using graph API we just

1247
00:40:02,520 --> 00:40:05,339
released a uh a burp plugin that lets

1248
00:40:05,339 --> 00:40:07,079
you automate active scanning for graphql

1249
00:40:07,079 --> 00:40:09,060
you can cut you can cut something that

1250
00:40:09,060 --> 00:40:10,380
would take two three days of work and

1251
00:40:10,380 --> 00:40:12,900
doing a lot of manual figuring out where

1252
00:40:12,900 --> 00:40:14,520
um you know you you can insert a

1253
00:40:14,520 --> 00:40:15,960
malicious payloads and all that and

1254
00:40:15,960 --> 00:40:18,300
graphql apis we've automated all that so

1255
00:40:18,300 --> 00:40:20,700
it reduces it down to a few minutes so

1256
00:40:20,700 --> 00:40:22,440
my colleague Jared worked on that he did

1257
00:40:22,440 --> 00:40:24,119
a talk at a couple of b-sides but yeah

1258
00:40:24,119 --> 00:40:25,619
that's all in our forward security

1259
00:40:25,619 --> 00:40:29,220
repository among some other useful tools

1260
00:40:29,220 --> 00:40:30,960
awesome

1261
00:40:30,960 --> 00:40:32,660
another question yes sir

1262
00:40:32,660 --> 00:40:35,099
do you have any suggestions about

1263
00:40:35,099 --> 00:40:37,680
security dicing the trainings for the

1264
00:40:37,680 --> 00:40:41,960
developers Associated foreign

1265
00:40:49,040 --> 00:40:51,119
if you've never done an assessment that

1266
00:40:51,119 --> 00:40:52,140
you don't know where the weaknesses are

1267
00:40:52,140 --> 00:40:53,460
I would suggest you start with level one

1268
00:40:53,460 --> 00:40:55,380
so the asbs has level one two and three

1269
00:40:55,380 --> 00:40:56,940
do make a checklist of just the level

1270
00:40:56,940 --> 00:40:58,440
one items that's always the best

1271
00:40:58,440 --> 00:41:00,540
starting point that's only about 130

1272
00:41:00,540 --> 00:41:02,280
controls it might still be too many but

1273
00:41:02,280 --> 00:41:03,780
what you should do is reduce that from

1274
00:41:03,780 --> 00:41:05,640
130 based on what we talked about see

1275
00:41:05,640 --> 00:41:07,020
what's applicable to you because not

1276
00:41:07,020 --> 00:41:08,640
every controller is going to apply to

1277
00:41:08,640 --> 00:41:10,380
every application so start with level

1278
00:41:10,380 --> 00:41:12,359
one and then further reduce it by doing

1279
00:41:12,359 --> 00:41:14,339
a sort of a scoping exercise so go

1280
00:41:14,339 --> 00:41:15,780
through those 130 controls and ask

1281
00:41:15,780 --> 00:41:17,280
yourself does this apply to my

1282
00:41:17,280 --> 00:41:18,480
application because it might your

1283
00:41:18,480 --> 00:41:19,920
application may not have a web front end

1284
00:41:19,920 --> 00:41:21,300
it might be an API only application

1285
00:41:21,300 --> 00:41:22,619
right and then all of a sudden a whole

1286
00:41:22,619 --> 00:41:23,820
bunch of controls are out of scope or

1287
00:41:23,820 --> 00:41:25,140
maybe your application doesn't have

1288
00:41:25,140 --> 00:41:27,240
certain features you can take out those

1289
00:41:27,240 --> 00:41:28,859
controls so start with level one and

1290
00:41:28,859 --> 00:41:30,240
then scope it out based on your

1291
00:41:30,240 --> 00:41:31,619
application and reduce it and then use

1292
00:41:31,619 --> 00:41:32,820
that as the starting point for your

1293
00:41:32,820 --> 00:41:34,200
develop for your requirements and for

1294
00:41:34,200 --> 00:41:35,880
your training yeah no I'm saying that

1295
00:41:35,880 --> 00:41:37,440
after that you're doing that you will be

1296
00:41:37,440 --> 00:41:40,320
having let's say 60 uh female they need

1297
00:41:40,320 --> 00:41:42,540
to cover right but they do not do it in

1298
00:41:42,540 --> 00:41:44,880
the sixth standard first release like

1299
00:41:44,880 --> 00:41:46,020
okay

1300
00:41:46,020 --> 00:41:49,440
three or four whatever so which one will

1301
00:41:49,440 --> 00:41:53,040
be here so as we are okay there's the

1302
00:41:53,040 --> 00:41:54,599
the right way of doing it and then the

1303
00:41:54,599 --> 00:41:55,740
quick and dirty way right the quick and

1304
00:41:55,740 --> 00:41:57,119
dirty way is like I've got a spreadsheet

1305
00:41:57,119 --> 00:41:58,440
I've kind of prioritized them I can send

1306
00:41:58,440 --> 00:41:59,820
them to you if you're interested the

1307
00:41:59,820 --> 00:42:01,440
right way to do it is through thread

1308
00:42:01,440 --> 00:42:03,240
modeling right what you should do is

1309
00:42:03,240 --> 00:42:04,859
understand do a thread model on your

1310
00:42:04,859 --> 00:42:06,300
application understand what the threat

1311
00:42:06,300 --> 00:42:08,099
scenario what what are the different

1312
00:42:08,099 --> 00:42:09,660
threat scenarios that could compromise

1313
00:42:09,660 --> 00:42:11,520
your application and then go and pick

1314
00:42:11,520 --> 00:42:13,800
the asps controls that address those

1315
00:42:13,800 --> 00:42:15,119
threat scenarios right so you might end

1316
00:42:15,119 --> 00:42:17,160
up with 12 threat scenarios but and then

1317
00:42:17,160 --> 00:42:19,260
each threat scenario is often a a chain

1318
00:42:19,260 --> 00:42:20,940
of different attack steps right attack

1319
00:42:20,940 --> 00:42:22,859
step one two three four and then

1320
00:42:22,859 --> 00:42:24,839
identify which ass controls mitigate

1321
00:42:24,839 --> 00:42:26,460
each attack step and then that would be

1322
00:42:26,460 --> 00:42:29,339
your most and then the the ideally the

1323
00:42:29,339 --> 00:42:30,660
controls that you've selected in that

1324
00:42:30,660 --> 00:42:32,160
subset they address all the threat

1325
00:42:32,160 --> 00:42:34,140
scenarios but each draft scenario will

1326
00:42:34,140 --> 00:42:35,400
have a different risk right so once

1327
00:42:35,400 --> 00:42:36,660
you've identified the different threat

1328
00:42:36,660 --> 00:42:38,579
scenarios assign risks to them based on

1329
00:42:38,579 --> 00:42:40,440
impact and likelihood like How likely is

1330
00:42:40,440 --> 00:42:42,119
this threat scenario to happen what is

1331
00:42:42,119 --> 00:42:43,920
the impact and then take the high risk

1332
00:42:43,920 --> 00:42:46,079
ones and then take the asses controls

1333
00:42:46,079 --> 00:42:47,520
that address the highest ones and that

1334
00:42:47,520 --> 00:42:48,960
should be your first priority

1335
00:42:48,960 --> 00:42:50,700
no problem

1336
00:42:50,700 --> 00:42:52,380
yes

1337
00:42:52,380 --> 00:42:55,920
how many rings how much time first hour

1338
00:42:55,920 --> 00:42:58,200
do you think would take maintain this to

1339
00:42:58,200 --> 00:43:00,000
get us up and running if you use our get

1340
00:43:00,000 --> 00:43:01,140
up and running because get up running

1341
00:43:01,140 --> 00:43:02,760
and maintain it over time maintain okay

1342
00:43:02,760 --> 00:43:04,619
so what do we mean by maintaining do you

1343
00:43:04,619 --> 00:43:06,480
mean like adding items to it and things

1344
00:43:06,480 --> 00:43:09,480
like that or no just just running it and

1345
00:43:09,480 --> 00:43:11,579
using it uh well like running it

1346
00:43:11,579 --> 00:43:12,900
hopefully with this scripts it's a

1347
00:43:12,900 --> 00:43:14,940
matter of minutes right and then using I

1348
00:43:14,940 --> 00:43:15,960
mean once it's up and running the

1349
00:43:15,960 --> 00:43:17,400
developers use it the maintenance would

1350
00:43:17,400 --> 00:43:19,140
come in so for example if you wanted to

1351
00:43:19,140 --> 00:43:21,359
make custom Labs or if you want to add

1352
00:43:21,359 --> 00:43:23,819
additional content because SKF updates

1353
00:43:23,819 --> 00:43:25,200
so I guess one maintenance would be when

1354
00:43:25,200 --> 00:43:26,400
they release an update you'd have to

1355
00:43:26,400 --> 00:43:28,200
update it as well right so that would be

1356
00:43:28,200 --> 00:43:29,760
a bit of time and that could be anywhere

1357
00:43:29,760 --> 00:43:31,200
from zero to hundreds of hours like it

1358
00:43:31,200 --> 00:43:32,400
depends on what they break in their next

1359
00:43:32,400 --> 00:43:33,960
update that sort of thing yeah how about

1360
00:43:33,960 --> 00:43:36,180
how how much time out of your app 16

1361
00:43:36,180 --> 00:43:38,460
times it take to learn this and then

1362
00:43:38,460 --> 00:43:42,740
leverage it as well okay so um

1363
00:43:43,099 --> 00:43:45,180
itself once it's up and running they can

1364
00:43:45,180 --> 00:43:46,740
use it the learning part is going to be

1365
00:43:46,740 --> 00:43:48,660
mostly around understanding those asps

1366
00:43:48,660 --> 00:43:51,599
items so if that that's the main learn

1367
00:43:51,599 --> 00:43:52,920
like that's the main effort is going

1368
00:43:52,920 --> 00:43:54,420
let's say for example in that we're

1369
00:43:54,420 --> 00:43:56,099
going to do as fast level one and we're

1370
00:43:56,099 --> 00:43:57,960
gonna we have a hundred items there in

1371
00:43:57,960 --> 00:44:00,300
scope that's what the that's where the

1372
00:44:00,300 --> 00:44:01,619
bulk of the effort comes in when it

1373
00:44:01,619 --> 00:44:03,980
comes to learning them so I would say

1374
00:44:03,980 --> 00:44:06,780
like to implement them you know we

1375
00:44:06,780 --> 00:44:08,220
usually spread it over a year but if you

1376
00:44:08,220 --> 00:44:09,900
were to just look at effort to like

1377
00:44:09,900 --> 00:44:11,819
learn all the level one probably about

1378
00:44:11,819 --> 00:44:13,560
one or two weeks like there have like I

1379
00:44:13,560 --> 00:44:14,940
know colleagues that do workshops on

1380
00:44:14,940 --> 00:44:16,560
this uh one of my colleagues goes to

1381
00:44:16,560 --> 00:44:18,119
companies and does a workshop on like

1382
00:44:18,119 --> 00:44:21,000
two developers to learn how to test and

1383
00:44:21,000 --> 00:44:22,980
how to what each of them mean and how to

1384
00:44:22,980 --> 00:44:24,180
test for them and that's usually a one

1385
00:44:24,180 --> 00:44:26,819
or two week workshop for level two so uh

1386
00:44:26,819 --> 00:44:28,319
if you were to do it non-stop like hey

1387
00:44:28,319 --> 00:44:30,000
let's take two weeks to do that but if

1388
00:44:30,000 --> 00:44:31,920
you spread that two weeks over however

1389
00:44:31,920 --> 00:44:33,720
that really depends on how much effort

1390
00:44:33,720 --> 00:44:35,460
you want to allocate every Sprint so

1391
00:44:35,460 --> 00:44:36,839
that'll just spread that two weeks two

1392
00:44:36,839 --> 00:44:38,520
weeks of effort into a specific other

1393
00:44:38,520 --> 00:44:40,200
duration based on your resource

1394
00:44:40,200 --> 00:44:42,618
availability

1395
00:44:43,200 --> 00:44:45,180
awesome

1396
00:44:45,180 --> 00:44:46,859
cool well then I guess if there are no

1397
00:44:46,859 --> 00:44:48,060
other questions we'll wrap it up I'd

1398
00:44:48,060 --> 00:44:49,619
like to thank you for attending this uh

1399
00:44:49,619 --> 00:44:51,480
it's been a pleasure to be here and uh

1400
00:44:51,480 --> 00:44:52,619
yeah don't forget if you have questions

1401
00:44:52,619 --> 00:44:54,119
please email me there's my email address

1402
00:44:54,119 --> 00:44:55,740
and have a wonderful day enjoy the rest

1403
00:44:55,740 --> 00:44:56,570
of the conference

1404
00:44:56,570 --> 00:45:02,090
[Applause]

