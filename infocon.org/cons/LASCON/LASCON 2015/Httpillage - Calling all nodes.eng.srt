1
00:00:18,990 --> 00:00:24,669
so now I don't<font color="#E5E5E5"> even</font><font color="#CCCCCC"> have to give my talk</font>

2
00:00:21,880 --> 00:00:29,710
the codes on github I'll post some demo

3
00:00:24,670 --> 00:00:31,960
videos have a nice<font color="#E5E5E5"> a so quick into a</font>

4
00:00:29,710 --> 00:00:34,420
slide i'm john from main application

5
00:00:31,960 --> 00:00:36,370
security consultant at envision my

6
00:00:34,420 --> 00:00:38,110
hobbies writing code lately I've been

7
00:00:36,370 --> 00:00:40,269
doing a lot of wood stacking and<font color="#E5E5E5"> apple</font>

8
00:00:38,110 --> 00:00:43,629
picking anyone<font color="#CCCCCC"> else here from Maine by</font>

9
00:00:40,269 --> 00:00:44,769
any chance yeah I didn't think so that's

10
00:00:43,629 --> 00:00:46,419
too<font color="#E5E5E5"> bad i was hoping to get some help</font>

11
00:00:44,769 --> 00:00:48,129
stack and the rest of<font color="#E5E5E5"> my would but</font><font color="#CCCCCC"> i</font>

12
00:00:46,420 --> 00:00:51,789
don't think<font color="#E5E5E5"> you guys want to come for</font>

13
00:00:48,129 --> 00:00:53,559
the<font color="#E5E5E5"> travel so as an application security</font>

14
00:00:51,789 --> 00:00:55,809
consultant<font color="#CCCCCC"> that means I'm in</font><font color="#E5E5E5"> the</font>

15
00:00:53,559 --> 00:00:57,879
business of helping developers fix their

16
00:00:55,809 --> 00:01:00,879
code and their problems by breaking them

17
00:00:57,879 --> 00:01:03,339
and pointing out their flaws i'm here

18
00:01:00,879 --> 00:01:05,710
today to<font color="#E5E5E5"> talk to you about a tool i</font>

19
00:01:03,340 --> 00:01:08,020
built that<font color="#E5E5E5"> i'm releasing that kind of</font>

20
00:01:05,710 --> 00:01:10,030
helps me at least do my job a little

21
00:01:08,020 --> 00:01:13,899
more efficiently and hopefully you<font color="#CCCCCC"> guys</font>

22
00:01:10,030 --> 00:01:16,479
can get some use of it as well so<font color="#E5E5E5"> before</font>

23
00:01:13,899 --> 00:01:18,250
<font color="#E5E5E5">i dig into the details of the talk i</font>

24
00:01:16,479 --> 00:01:20,800
just got<font color="#CCCCCC"> to kind of rant a little bit</font>

25
00:01:18,250 --> 00:01:25,780
and there's<font color="#E5E5E5"> just a few things</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> want to</font>

26
00:01:20,800 --> 00:01:26,950
<font color="#E5E5E5">bring up who here is a developer</font><font color="#CCCCCC"> ok and</font>

27
00:01:25,780 --> 00:01:30,729
do we have<font color="#E5E5E5"> any</font><font color="#CCCCCC"> other application</font>

28
00:01:26,950 --> 00:01:34,929
security testers or any only a few you

29
00:01:30,729 --> 00:01:37,119
<font color="#CCCCCC">ok so one thing that</font><font color="#E5E5E5"> bugs me is the use</font>

30
00:01:34,929 --> 00:01:40,509
of the term penetration tester and then

31
00:01:37,119 --> 00:01:43,209
vulnerability assessments there is a

32
00:01:40,509 --> 00:01:45,280
subtle difference in my opinion between

33
00:01:43,209 --> 00:01:48,090
these two terms and everyone always

34
00:01:45,280 --> 00:01:50,709
disagrees as far as I'm concerned

35
00:01:48,090 --> 00:01:54,190
penetration testing is is more focused

36
00:01:50,709 --> 00:01:56,530
on depth over breath so an organization

37
00:01:54,190 --> 00:01:58,599
is seeking a penetration test they want

38
00:01:56,530 --> 00:02:01,300
<font color="#CCCCCC">you to get as far into their app or</font>

39
00:01:58,599 --> 00:02:03,550
their network as you can by going<font color="#E5E5E5"> deep</font>

40
00:02:01,300 --> 00:02:05,170
<font color="#E5E5E5">and with a vulnerability assessment it's</font>

41
00:02:03,550 --> 00:02:07,060
a little different because they want<font color="#E5E5E5"> to</font>

42
00:02:05,170 --> 00:02:08,619
identify the outlying vulnerability that

43
00:02:07,060 --> 00:02:12,550
at a certain level<font color="#E5E5E5"> and the levels</font>

44
00:02:08,619 --> 00:02:14,890
normally an external level so as an

45
00:02:12,550 --> 00:02:16,780
example you know<font color="#CCCCCC"> you may have a website</font>

46
00:02:14,890 --> 00:02:18,429
and with a vulnerability assessment

47
00:02:16,780 --> 00:02:20,349
you'd want to identify as many

48
00:02:18,430 --> 00:02:23,140
vulnerabilities as you can on the

49
00:02:20,349 --> 00:02:25,689
website now if<font color="#CCCCCC"> we were scope for a black</font>

50
00:02:23,140 --> 00:02:27,518
box penetration test they may want us to

51
00:02:25,689 --> 00:02:29,019
try to break into<font color="#E5E5E5"> the website</font><font color="#CCCCCC"> to a point</font>

52
00:02:27,519 --> 00:02:29,740
where we can use<font color="#CCCCCC"> that pivot throughout</font>

53
00:02:29,019 --> 00:02:32,290
their network

54
00:02:29,740 --> 00:02:34,210
and steal more of their data so if

55
00:02:32,290 --> 00:02:37,299
you're ever<font color="#E5E5E5"> involved in the scoping</font>

56
00:02:34,210 --> 00:02:38,980
process for consulting engagements you

57
00:02:37,300 --> 00:02:40,750
kind of you have to know<font color="#CCCCCC"> that there's a</font>

58
00:02:38,980 --> 00:02:42,609
difference and sometimes clients don't

59
00:02:40,750 --> 00:02:44,530
know what they<font color="#E5E5E5"> want so it's kind of our</font>

60
00:02:42,610 --> 00:02:46,720
job to<font color="#CCCCCC"> help them figure out what they</font>

61
00:02:44,530 --> 00:02:48,430
want<font color="#E5E5E5"> so at envision we do a lot</font><font color="#CCCCCC"> more</font>

62
00:02:46,720 --> 00:02:53,020
vulnerability assessments than we do

63
00:02:48,430 --> 00:02:56,290
penetration test so a<font color="#E5E5E5"> large part of our</font>

64
00:02:53,020 --> 00:02:58,120
job obviously<font color="#CCCCCC"> is is doing report so when</font>

65
00:02:56,290 --> 00:03:00,100
all is said and done<font color="#CCCCCC"> the client expects</font>

66
00:02:58,120 --> 00:03:03,220
<font color="#E5E5E5">a report from us that details what we</font>

67
00:03:00,100 --> 00:03:04,840
found how we did it why it's important

68
00:03:03,220 --> 00:03:06,640
if they don't get that what are we

69
00:03:04,840 --> 00:03:10,000
<font color="#CCCCCC">really giving them there's really no</font>

70
00:03:06,640 --> 00:03:12,670
value one thing I see a lot in in

71
00:03:10,000 --> 00:03:14,740
reports is a similar phrase or this

72
00:03:12,670 --> 00:03:17,380
exact phrase that says an attacker could

73
00:03:14,740 --> 00:03:18,550
so when you discover you know potential

74
00:03:17,380 --> 00:03:20,590
vulnerability and you're writing up the

75
00:03:18,550 --> 00:03:23,800
report you know a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of times</font><font color="#E5E5E5"> we'll say</font>

76
00:03:20,590 --> 00:03:27,550
an attacker could exploit this to do XY

77
00:03:23,800 --> 00:03:29,650
and z now if you're being<font color="#E5E5E5"> paid to</font>

78
00:03:27,550 --> 00:03:31,510
perform the assessment or perform the

79
00:03:29,650 --> 00:03:33,640
penetration test you you are the

80
00:03:31,510 --> 00:03:36,429
attacker you<font color="#E5E5E5"> probably should be doing</font>

81
00:03:33,640 --> 00:03:39,519
this<font color="#E5E5E5"> right if if you</font><font color="#CCCCCC"> can do it you need</font>

82
00:03:36,430 --> 00:03:42,520
to<font color="#E5E5E5"> you need</font><font color="#CCCCCC"> to do it in that varies</font>

83
00:03:39,520 --> 00:03:44,140
because a lot of times that stuff will

84
00:03:42,520 --> 00:03:46,300
<font color="#E5E5E5">be talked about in the scope and certain</font>

85
00:03:44,140 --> 00:03:48,850
certain things you can't dig in and you

86
00:03:46,300 --> 00:03:52,720
can't actually do it it depends very

87
00:03:48,850 --> 00:03:53,890
much on<font color="#E5E5E5"> the scope of the assessment so</font>

88
00:03:52,720 --> 00:03:56,980
the impact statements have<font color="#E5E5E5"> to be</font>

89
00:03:53,890 --> 00:03:58,839
practical you know<font color="#E5E5E5"> for an example an</font>

90
00:03:56,980 --> 00:04:01,600
attacker could intercept the<font color="#E5E5E5"> NSA the</font>

91
00:03:58,840 --> 00:04:03,160
unicorns and ride them to<font color="#E5E5E5"> Mars that's</font>

92
00:04:01,600 --> 00:04:04,920
not super practical because we know<font color="#CCCCCC"> the</font>

93
00:04:03,160 --> 00:04:07,030
NSA doesn't have unicorns in unicorns

94
00:04:04,920 --> 00:04:09,670
probably can't fly all the way to Mars

95
00:04:07,030 --> 00:04:12,430
I'm not sure they probably have<font color="#E5E5E5"> to</font>

96
00:04:09,670 --> 00:04:15,730
consume oxygen<font color="#E5E5E5"> to I think so that's a</font>

97
00:04:12,430 --> 00:04:18,700
non practical example this on the<font color="#E5E5E5"> other</font>

98
00:04:15,730 --> 00:04:20,620
<font color="#E5E5E5">hand is a very practical example an</font>

99
00:04:18,700 --> 00:04:23,860
attacker could enumerate a list of user

100
00:04:20,620 --> 00:04:25,720
accounts seems pretty<font color="#E5E5E5"> easy to do if</font>

101
00:04:23,860 --> 00:04:28,020
you're the attacker you should<font color="#CCCCCC"> probably</font>

102
00:04:25,720 --> 00:04:28,020
do<font color="#CCCCCC"> that</font>

103
00:04:29,440 --> 00:04:35,660
so in a traditional assessment you know

104
00:04:33,949 --> 00:04:38,750
the attacker is generally only one

105
00:04:35,660 --> 00:04:40,490
person now<font color="#E5E5E5"> that varies but generally</font>

106
00:04:38,750 --> 00:04:43,810
it's one person sitting<font color="#E5E5E5"> behind a</font>

107
00:04:40,490 --> 00:04:45,710
computer hopefully a macbook pro

108
00:04:43,810 --> 00:04:47,180
generally connected to the internet

109
00:04:45,710 --> 00:04:49,960
right most of the time we're doing work

110
00:04:47,180 --> 00:04:52,850
over the<font color="#E5E5E5"> Internet sometimes it's on site</font>

111
00:04:49,960 --> 00:04:55,250
directly with the client or over a VPN

112
00:04:52,850 --> 00:04:57,050
or something but the general consensus

113
00:04:55,250 --> 00:04:59,300
is there the computer that I'm

114
00:04:57,050 --> 00:05:01,280
<font color="#E5E5E5">controlling there's the internet or some</font>

115
00:04:59,300 --> 00:05:04,910
sort<font color="#E5E5E5"> of you know connection and then</font>

116
00:05:01,280 --> 00:05:08,900
there's a target this model<font color="#CCCCCC"> is fairly</font>

117
00:05:04,910 --> 00:05:12,260
unrealistic and it's also slow so what

118
00:05:08,900 --> 00:05:14,000
do I mean<font color="#CCCCCC"> by unrealistic well if you've</font>

119
00:05:12,260 --> 00:05:16,039
ever looked at web server logs you know

120
00:05:14,000 --> 00:05:18,380
you're<font color="#E5E5E5"> not being hit by just one user</font>

121
00:05:16,039 --> 00:05:21,740
you know there's tons of IPs scanning

122
00:05:18,380 --> 00:05:24,800
you constantly your server needs to know

123
00:05:21,740 --> 00:05:25,970
how how well it can handle<font color="#E5E5E5"> the load or</font>

124
00:05:24,800 --> 00:05:28,130
how it's going<font color="#E5E5E5"> to react in those</font>

125
00:05:25,970 --> 00:05:30,289
circumstances so we don't build apps for

126
00:05:28,130 --> 00:05:33,349
one user we build<font color="#E5E5E5"> it from many users and</font>

127
00:05:30,289 --> 00:05:34,969
so<font color="#E5E5E5"> having one attacker controlling one</font>

128
00:05:33,349 --> 00:05:40,099
computer who's targeting your

129
00:05:34,970 --> 00:05:41,419
application that's not very realistic so

130
00:05:40,099 --> 00:05:44,659
as a community we can definitely<font color="#CCCCCC"> improve</font>

131
00:05:41,419 --> 00:05:47,770
on<font color="#E5E5E5"> this model and so this</font><font color="#CCCCCC"> is this is</font>

132
00:05:44,660 --> 00:05:47,770
what I'm here to talk about today

133
00:05:49,850 --> 00:05:56,010
so there will be<font color="#E5E5E5"> live demos there will</font>

134
00:05:53,730 --> 00:05:58,500
<font color="#CCCCCC">be live demo failures</font><font color="#E5E5E5"> I do have video</font>

135
00:05:56,010 --> 00:06:02,670
backup so we should get to see something

136
00:05:58,500 --> 00:06:04,620
<font color="#CCCCCC">cool it's just a side note Verizon</font>

137
00:06:02,670 --> 00:06:05,880
coverage down here is not great what do

138
00:06:04,620 --> 00:06:11,220
<font color="#E5E5E5">you guys normally use for cellular</font>

139
00:06:05,880 --> 00:06:13,590
service<font color="#E5E5E5"> AT&T oh we in Maine we we have</font>

140
00:06:11,220 --> 00:06:15,240
AT&T as of like five years ago<font color="#E5E5E5"> but it's</font>

141
00:06:13,590 --> 00:06:17,010
<font color="#E5E5E5">only on the highway so if you travel</font>

142
00:06:15,240 --> 00:06:19,620
anywhere like outside of the highway you

143
00:06:17,010 --> 00:06:21,539
just lose coverage completely and you

144
00:06:19,620 --> 00:06:25,260
get<font color="#E5E5E5"> lost pretty much because your gps</font>

145
00:06:21,540 --> 00:06:28,530
can't tell you where to<font color="#E5E5E5"> go so the tool</font>

146
00:06:25,260 --> 00:06:30,300
is called<font color="#CCCCCC"> HTC pillage the HTTP part is</font>

147
00:06:28,530 --> 00:06:32,729
pretty straightforward that's the

148
00:06:30,300 --> 00:06:34,830
protocol we're attacking pillage

149
00:06:32,730 --> 00:06:37,830
traditionally you know as a verb

150
00:06:34,830 --> 00:06:40,620
definition here means to rob using

151
00:06:37,830 --> 00:06:42,180
violence especially in wartime and when

152
00:06:40,620 --> 00:06:43,920
we're thinking of ourselves as attackers

153
00:06:42,180 --> 00:06:46,290
we we need to be attacking<font color="#E5E5E5"> pretty</font>

154
00:06:43,920 --> 00:06:47,970
violently you know the bad guys of the

155
00:06:46,290 --> 00:06:49,350
world aren't going to be<font color="#E5E5E5"> gentle and nice</font>

156
00:06:47,970 --> 00:06:50,520
when they're attacking your servers

157
00:06:49,350 --> 00:06:51,960
they're going to be violent<font color="#CCCCCC"> and they're</font>

158
00:06:50,520 --> 00:06:54,270
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to do what they have to do to</font>

159
00:06:51,960 --> 00:06:56,039
steal your data that's not always the

160
00:06:54,270 --> 00:06:58,840
case but I kind of like<font color="#CCCCCC"> to assume the</font>

161
00:06:56,040 --> 00:07:03,979
black hats are always very violent

162
00:06:58,840 --> 00:07:08,568
so htd pillage is a tool designed for

163
00:07:03,979 --> 00:07:10,849
the distribution<font color="#CCCCCC"> of attacks anyone here</font>

164
00:07:08,569 --> 00:07:15,229
test web apps security like on<font color="#CCCCCC"> a</font>

165
00:07:10,849 --> 00:07:18,800
<font color="#E5E5E5">day-to-day basis 12 people wow it's kind</font>

166
00:07:15,229 --> 00:07:20,870
of expecting more you so this tool like

167
00:07:18,800 --> 00:07:22,729
I said it's designed to basically allow

168
00:07:20,870 --> 00:07:25,819
you to distribute certain attacks and

169
00:07:22,729 --> 00:07:28,758
we'll go through some examples it's

170
00:07:25,819 --> 00:07:31,819
still very beta I just pushed the code

171
00:07:28,759 --> 00:07:32,689
up a few nights<font color="#E5E5E5"> ago it's on github the</font>

172
00:07:31,819 --> 00:07:34,759
link will be at the end<font color="#CCCCCC"> of the</font>

173
00:07:32,689 --> 00:07:35,990
presentation there's<font color="#CCCCCC"> obviously going to</font>

174
00:07:34,759 --> 00:07:37,729
be bugs there's obviously you're going

175
00:07:35,990 --> 00:07:39,500
<font color="#E5E5E5">to be improvement but you know I want</font>

176
00:07:37,729 --> 00:07:41,419
feedback from everyone see how<font color="#CCCCCC"> we can</font>

177
00:07:39,500 --> 00:07:42,860
improve it and it was originally a

178
00:07:41,419 --> 00:07:45,318
hackathon project so most of<font color="#E5E5E5"> the code</font>

179
00:07:42,860 --> 00:07:48,379
<font color="#E5E5E5">was written in about 24 sleep-deprived</font>

180
00:07:45,319 --> 00:07:52,789
hours so anyone a ruby or rails

181
00:07:48,379 --> 00:07:55,189
developer<font color="#E5E5E5"> wow I'm not sure I'm</font>

182
00:07:52,789 --> 00:07:59,589
comfortable talking you folk no security

183
00:07:55,189 --> 00:07:59,589
testers no rails developers<font color="#CCCCCC"> whoo</font>

184
00:08:00,740 --> 00:08:07,710
well the reason I asked is as you see

185
00:08:05,010 --> 00:08:12,240
here HTTP<font color="#E5E5E5"> College was</font><font color="#CCCCCC"> uh was written in</font>

186
00:08:07,710 --> 00:08:15,090
Ruby and rails so it contains a web

187
00:08:12,240 --> 00:08:18,240
interface and that web interface allows

188
00:08:15,090 --> 00:08:20,369
you to create what I call her job so

189
00:08:18,240 --> 00:08:23,160
when you're attacking a server you would

190
00:08:20,370 --> 00:08:25,440
do that via a job and like i said i'll

191
00:08:23,160 --> 00:08:28,560
demonstrate this has<font color="#CCCCCC"> the user management</font>

192
00:08:25,440 --> 00:08:34,080
because obviously we want users if we

193
00:08:28,560 --> 00:08:35,700
<font color="#E5E5E5">run a company so if we have a consulting</font>

194
00:08:34,080 --> 00:08:38,490
company like we do it in vision we have

195
00:08:35,700 --> 00:08:42,539
<font color="#E5E5E5">more</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> one employee and we want to be</font>

196
00:08:38,490 --> 00:08:47,339
able to control<font color="#E5E5E5"> who has access</font><font color="#CCCCCC"> to it is</font>

197
00:08:42,539 --> 00:08:48,839
<font color="#E5E5E5">that better so user management that's</font>

198
00:08:47,339 --> 00:08:50,370
pretty obvious any tool with the web

199
00:08:48,839 --> 00:08:52,560
interface generally has some<font color="#E5E5E5"> sort of</font>

200
00:08:50,370 --> 00:08:54,480
user management it also has response

201
00:08:52,560 --> 00:08:57,119
tracking so you can kind of just sit and

202
00:08:54,480 --> 00:08:59,070
look at the beautiful web interface and

203
00:08:57,120 --> 00:09:02,820
see what's going<font color="#CCCCCC"> on with your your</font>

204
00:08:59,070 --> 00:09:04,680
requests burp suite integration I have

205
00:09:02,820 --> 00:09:07,800
to ask who here uses burp suite on a

206
00:09:04,680 --> 00:09:16,069
<font color="#E5E5E5">day-to-day basis yeah the general</font>

207
00:09:07,800 --> 00:09:18,750
suspects there's a green light yeah so

208
00:09:16,070 --> 00:09:20,820
so I'll part of the tool I also built a

209
00:09:18,750 --> 00:09:23,220
burp extension that will allow you<font color="#CCCCCC"> to</font>

210
00:09:20,820 --> 00:09:29,550
send the request very easily from burp

211
00:09:23,220 --> 00:09:32,580
to the HTTP pillage server in right as a

212
00:09:29,550 --> 00:09:34,800
right now it supports three major attack

213
00:09:32,580 --> 00:09:36,600
types repeating dictionary and brute

214
00:09:34,800 --> 00:09:38,250
force<font color="#E5E5E5"> I'm going to go through a live</font>

215
00:09:36,600 --> 00:09:41,520
demo of each of those but in a general

216
00:09:38,250 --> 00:09:43,680
sense what I consider a repeating attack

217
00:09:41,520 --> 00:09:45,750
is essentially denial of service so<font color="#E5E5E5"> you</font>

218
00:09:43,680 --> 00:09:47,280
have a web request and you want to<font color="#E5E5E5"> send</font>

219
00:09:45,750 --> 00:09:50,450
that<font color="#E5E5E5"> over and over again as fast as you</font>

220
00:09:47,280 --> 00:09:53,420
<font color="#E5E5E5">can to see how the host reacts</font><font color="#CCCCCC"> and</font>

221
00:09:50,450 --> 00:09:56,160
generally it's not going to be<font color="#CCCCCC"> very well</font>

222
00:09:53,420 --> 00:09:57,870
dictionary pretty<font color="#E5E5E5"> obvious</font><font color="#CCCCCC"> you upload a</font>

223
00:09:56,160 --> 00:10:01,130
dictionary file you can use that to

224
00:09:57,870 --> 00:10:05,880
iterate through for username enumeration

225
00:10:01,130 --> 00:10:08,220
password known passwords things like

226
00:10:05,880 --> 00:10:10,630
that and then brute force it's great for

227
00:10:08,220 --> 00:10:13,940
testing password strength

228
00:10:10,630 --> 00:10:15,800
it also supports response flagging which

229
00:10:13,940 --> 00:10:18,290
which<font color="#CCCCCC"> is important if you actually want</font>

230
00:10:15,800 --> 00:10:20,029
to<font color="#E5E5E5"> get results</font><font color="#CCCCCC"> out of</font><font color="#E5E5E5"> the tool so if you</font>

231
00:10:18,290 --> 00:10:22,160
use burp suite you're pretty familiar

232
00:10:20,029 --> 00:10:24,140
with<font color="#CCCCCC"> the intruder function</font><font color="#E5E5E5"> I'm sure and</font>

233
00:10:22,160 --> 00:10:25,730
what makes<font color="#E5E5E5"> that useful is that you can</font>

234
00:10:24,140 --> 00:10:27,319
<font color="#CCCCCC">actually see the response and you can</font>

235
00:10:25,730 --> 00:10:29,360
search it by strings or regular

236
00:10:27,320 --> 00:10:34,430
expressions to kind<font color="#E5E5E5"> of monitor the</font>

237
00:10:29,360 --> 00:10:37,850
applications behavior so in a general

238
00:10:34,430 --> 00:10:40,370
sense there are two major parts to http

239
00:10:37,850 --> 00:10:41,779
llege a server and then nodes pretty

240
00:10:40,370 --> 00:10:43,130
straightforward<font color="#CCCCCC"> the server is a command</font>

241
00:10:41,779 --> 00:10:45,890
and control server so if you've ever

242
00:10:43,130 --> 00:10:48,579
worked with any any botnets or botnet

243
00:10:45,890 --> 00:10:51,439
controllers it's not too different in

244
00:10:48,579 --> 00:10:54,319
the sense that the<font color="#E5E5E5"> the server is the</font>

245
00:10:51,440 --> 00:10:56,510
general point of<font color="#E5E5E5"> interaction for the</font>

246
00:10:54,320 --> 00:10:58,790
attacker and that delegates work out to

247
00:10:56,510 --> 00:11:00,319
the nodes the nodes are<font color="#CCCCCC"> the ones that</font>

248
00:10:58,790 --> 00:11:02,990
are actually sending the request to<font color="#CCCCCC"> the</font>

249
00:11:00,320 --> 00:11:05,690
clients<font color="#E5E5E5"> and they process the request for</font>

250
00:11:02,990 --> 00:11:10,190
matches so you know I showed you the

251
00:11:05,690 --> 00:11:12,230
traditional traditional testing diagram

252
00:11:10,190 --> 00:11:14,570
and this is kind of what<font color="#E5E5E5"> it would look</font>

253
00:11:12,230 --> 00:11:16,910
like now with distributing our attacks

254
00:11:14,570 --> 00:11:18,800
so we have a user that's controlling a

255
00:11:16,910 --> 00:11:20,300
command and control server that's the

256
00:11:18,800 --> 00:11:22,430
only thing I'm touching as the attacker

257
00:11:20,300 --> 00:11:23,870
the command in troll server is then

258
00:11:22,430 --> 00:11:25,579
telling the nodes what to do<font color="#E5E5E5"> they're</font>

259
00:11:23,870 --> 00:11:27,260
basically sending the request to<font color="#CCCCCC"> the</font>

260
00:11:25,579 --> 00:11:29,120
nodes and the nodes<font color="#E5E5E5"> are sending those to</font>

261
00:11:27,260 --> 00:11:32,560
the targets and they're analyzing them

262
00:11:29,120 --> 00:11:35,510
and the nodes do most of the dirty work

263
00:11:32,560 --> 00:11:37,810
and so in this case you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> now we have</font>

264
00:11:35,510 --> 00:11:43,510
the nose like I said directly<font color="#E5E5E5"> attacking</font>

265
00:11:37,810 --> 00:11:45,260
the target so okay I have a little

266
00:11:43,510 --> 00:11:48,319
animation here just to kind of

267
00:11:45,260 --> 00:11:50,510
demonstrate the flow so node it pulls

268
00:11:48,320 --> 00:11:52,399
for a job<font color="#E5E5E5"> so it sends a request to the</font>

269
00:11:50,510 --> 00:11:55,010
server saying hey is there any work for

270
00:11:52,399 --> 00:11:56,990
<font color="#E5E5E5">me to do give me something</font><font color="#CCCCCC"> to do and</font>

271
00:11:55,010 --> 00:11:59,930
that occurs about every three seconds

272
00:11:56,990 --> 00:12:02,079
and if it<font color="#E5E5E5"> does not receive a job it just</font>

273
00:11:59,930 --> 00:12:05,689
continues polling pretty straightforward

274
00:12:02,079 --> 00:12:08,300
if it does receive a job we begin to

275
00:12:05,690 --> 00:12:10,459
parse the the payloads see what work we

276
00:12:08,300 --> 00:12:12,439
need to do make<font color="#CCCCCC"> sure it's well-formed if</font>

277
00:12:10,459 --> 00:12:14,390
we don't have any payloads we're just

278
00:12:12,440 --> 00:12:15,769
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to continue</font><font color="#E5E5E5"> polling again because</font>

279
00:12:14,390 --> 00:12:17,270
that means we probably already finished

280
00:12:15,769 --> 00:12:19,310
the<font color="#E5E5E5"> work</font>

281
00:12:17,270 --> 00:12:20,810
if we do have payloads that's when we

282
00:12:19,310 --> 00:12:23,420
actually<font color="#E5E5E5"> send the request of the target</font>

283
00:12:20,810 --> 00:12:26,359
so we reform the request on the on the

284
00:12:23,420 --> 00:12:27,439
node we send it to the target we will

285
00:12:26,360 --> 00:12:29,870
then<font color="#E5E5E5"> look to see if there are any</font>

286
00:12:27,440 --> 00:12:32,390
matches so like I said there's response

287
00:12:29,870 --> 00:12:34,760
matching which is which<font color="#CCCCCC"> is really useful</font>

288
00:12:32,390 --> 00:12:38,660
and the nodes actually do the response

289
00:12:34,760 --> 00:12:41,030
matching on the request<font color="#E5E5E5"> directly if</font>

290
00:12:38,660 --> 00:12:43,550
there's no match we then just check<font color="#E5E5E5"> if</font>

291
00:12:41,030 --> 00:12:44,930
the works complete if there is a match

292
00:12:43,550 --> 00:12:46,819
we send it back<font color="#CCCCCC"> to the command</font><font color="#E5E5E5"> and</font>

293
00:12:44,930 --> 00:12:48,050
control server so like I said the

294
00:12:46,820 --> 00:12:50,630
command<font color="#E5E5E5"> and control server kind of</font>

295
00:12:48,050 --> 00:12:54,050
controls all<font color="#CCCCCC"> the data that's our central</font>

296
00:12:50,630 --> 00:12:57,530
point if the works not complete the<font color="#CCCCCC"> gist</font>

297
00:12:54,050 --> 00:12:58,760
iterate keep sending a request obviously

298
00:12:57,530 --> 00:13:00,860
if it's complete we're going to go<font color="#E5E5E5"> back</font>

299
00:12:58,760 --> 00:13:02,810
<font color="#CCCCCC">and continue polling so you know the</font>

300
00:13:00,860 --> 00:13:05,990
<font color="#E5E5E5">idea is that the nodes will just be</font>

301
00:13:02,810 --> 00:13:10,069
stored on some computer or some instance

302
00:13:05,990 --> 00:13:11,300
online i've<font color="#E5E5E5"> been using amazon but they</font>

303
00:13:10,070 --> 00:13:13,580
probably wouldn't<font color="#E5E5E5"> be happy to hear me</font>

304
00:13:11,300 --> 00:13:15,979
say<font color="#CCCCCC"> that so you might</font><font color="#E5E5E5"> want to look at</font>

305
00:13:13,580 --> 00:13:20,990
using some other services or just

306
00:13:15,980 --> 00:13:25,490
hosting some some machines yourself<font color="#E5E5E5"> all</font>

307
00:13:20,990 --> 00:13:29,930
<font color="#CCCCCC">right let's see if we can fail at some</font>

308
00:13:25,490 --> 00:13:32,030
live demos you guys are all<font color="#E5E5E5"> probably</font>

309
00:13:29,930 --> 00:13:33,260
fairly confused right now I blew through

310
00:13:32,030 --> 00:13:34,699
that pretty quickly but I'm<font color="#E5E5E5"> going to</font>

311
00:13:33,260 --> 00:13:37,610
explain in more detail while I'm going

312
00:13:34,700 --> 00:13:39,500
<font color="#E5E5E5">through</font><font color="#CCCCCC"> the live demos this is the best</font>

313
00:13:37,610 --> 00:13:41,360
low-resolution image<font color="#CCCCCC"> I could</font><font color="#E5E5E5"> find that</font>

314
00:13:39,500 --> 00:13:43,580
kind of related<font color="#E5E5E5"> to the talk so obviously</font>

315
00:13:41,360 --> 00:13:45,710
I'm going to have a cat photo in in my

316
00:13:43,580 --> 00:13:49,030
slides the fact that it's super<font color="#E5E5E5"> low</font>

317
00:13:45,710 --> 00:13:49,030
resolution just makes it even better

318
00:13:49,480 --> 00:13:57,070
<font color="#CCCCCC">all right username</font><font color="#E5E5E5"> and numeration who</font>

319
00:13:52,060 --> 00:13:59,949
here knows what this means okay that's

320
00:13:57,070 --> 00:14:03,070
<font color="#CCCCCC">probably a good</font><font color="#E5E5E5"> thing so this</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> very</font>

321
00:13:59,949 --> 00:14:05,709
common finding and it occurs<font color="#CCCCCC"> when the</font>

322
00:14:03,070 --> 00:14:07,959
application discloses existence of a

323
00:14:05,709 --> 00:14:10,540
username or an email<font color="#E5E5E5"> address and we see</font>

324
00:14:07,959 --> 00:14:12,279
this<font color="#E5E5E5"> like I said very commonly normally</font>

325
00:14:10,540 --> 00:14:15,939
in login mechanisms forgot<font color="#CCCCCC"> password</font>

326
00:14:12,279 --> 00:14:18,160
mechanisms and also almost all user

327
00:14:15,940 --> 00:14:21,970
registration mechanisms are vulnerable

328
00:14:18,160 --> 00:14:24,790
<font color="#CCCCCC">to this so as an attacker we we can</font>

329
00:14:21,970 --> 00:14:26,829
discover username enumeration by looking

330
00:14:24,790 --> 00:14:28,389
for verbose to error messages so I'm

331
00:14:26,829 --> 00:14:31,089
<font color="#E5E5E5">sure everyone here is seen in error</font>

332
00:14:28,389 --> 00:14:33,250
message at one point that says you<font color="#E5E5E5"> know</font>

333
00:14:31,089 --> 00:14:35,589
the username does not<font color="#CCCCCC"> exists</font><font color="#E5E5E5"> on the</font>

334
00:14:33,250 --> 00:14:38,230
system or incorrect password for user

335
00:14:35,589 --> 00:14:40,199
name and that<font color="#CCCCCC"> tells us okay that</font>

336
00:14:38,230 --> 00:14:43,480
username does exist in the server

337
00:14:40,199 --> 00:14:45,699
responds diffing sometimes the page will

338
00:14:43,480 --> 00:14:48,399
respond slightly differently if the user

339
00:14:45,699 --> 00:14:51,219
account exists or not it may be a

340
00:14:48,399 --> 00:14:53,560
response code so you<font color="#E5E5E5"> may get an HTTP 302</font>

341
00:14:51,220 --> 00:14:56,220
redirect of the account<font color="#CCCCCC"> exists you may</font>

342
00:14:53,560 --> 00:15:00,969
get a 404 something along<font color="#E5E5E5"> those lines</font>

343
00:14:56,220 --> 00:15:02,949
and also timing a lot of websites are

344
00:15:00,970 --> 00:15:06,220
vulnerable to use your<font color="#E5E5E5"> name and</font>

345
00:15:02,949 --> 00:15:07,899
numeration via timing bugs and this it's

346
00:15:06,220 --> 00:15:10,180
very theoretical but sometimes it can be

347
00:15:07,899 --> 00:15:12,930
practical so I wrote a blog post on that

348
00:15:10,180 --> 00:15:15,939
a<font color="#CCCCCC"> few</font><font color="#E5E5E5"> months back if you're interested</font>

349
00:15:12,930 --> 00:15:17,560
it's normally not something we test

350
00:15:15,940 --> 00:15:21,610
forward because like i said it's it's

351
00:15:17,560 --> 00:15:23,768
generally not practical but it can be so

352
00:15:21,610 --> 00:15:26,290
yeah facebook's vulnerable the username

353
00:15:23,769 --> 00:15:27,970
enumeration if you try to<font color="#E5E5E5"> log in with an</font>

354
00:15:26,290 --> 00:15:31,019
account that doesn't exist it basically

355
00:15:27,970 --> 00:15:33,880
says incorrect incorrect email address

356
00:15:31,019 --> 00:15:36,120
it's pretty straightforward<font color="#CCCCCC"> twitter is</font>

357
00:15:33,880 --> 00:15:38,920
also vulnerable to<font color="#CCCCCC"> username enumeration</font>

358
00:15:36,120 --> 00:15:41,199
<font color="#E5E5E5">I don't feel bad saying this because</font>

359
00:15:38,920 --> 00:15:42,880
they<font color="#E5E5E5"> expressed the fact that they don't</font>

360
00:15:41,199 --> 00:15:46,740
care and they're not<font color="#CCCCCC"> going to fix it so</font>

361
00:15:42,880 --> 00:15:49,569
a lot of organizations really don't care

362
00:15:46,740 --> 00:15:51,850
so use me I'm enumerations in the

363
00:15:49,569 --> 00:15:53,439
interesting vulnerability because it's

364
00:15:51,850 --> 00:15:55,990
on its own it's really not that useful

365
00:15:53,440 --> 00:15:58,480
in most cases and that's why a lot of

366
00:15:55,990 --> 00:16:01,100
organizations<font color="#E5E5E5"> don't care but if we're</font>

367
00:15:58,480 --> 00:16:03,080
doing a you know a black box engagement

368
00:16:01,100 --> 00:16:06,410
<font color="#CCCCCC">we're we're</font><font color="#E5E5E5"> trying to do some recon on</font>

369
00:16:03,080 --> 00:16:08,450
the users or the employees username and

370
00:16:06,410 --> 00:16:09,800
numeration tells us a lot because we<font color="#E5E5E5"> can</font>

371
00:16:08,450 --> 00:16:12,290
use it to<font color="#E5E5E5"> start launching phishing</font>

372
00:16:09,800 --> 00:16:15,650
attacks we can use it<font color="#E5E5E5"> to try to do some</font>

373
00:16:12,290 --> 00:16:17,599
password discovery sometimes if you know

374
00:16:15,650 --> 00:16:19,699
the user user account that exists in the

375
00:16:17,600 --> 00:16:23,150
system you can use that insecure direct

376
00:16:19,700 --> 00:16:25,640
object reference vulnerability and also

377
00:16:23,150 --> 00:16:27,380
for a<font color="#CCCCCC"> DN onam ization so you know if</font>

378
00:16:25,640 --> 00:16:29,840
Ashley Madison is vulnerable to use your

379
00:16:27,380 --> 00:16:31,220
<font color="#E5E5E5">name enumeration obviously you know my</font>

380
00:16:29,840 --> 00:16:33,020
wife is going to see if I'm on their

381
00:16:31,220 --> 00:16:36,860
bike you know leveraging this username

382
00:16:33,020 --> 00:16:39,620
and numeration flaw in you know if if

383
00:16:36,860 --> 00:16:41,930
you try to stay<font color="#E5E5E5"> anonymous online user</font>

384
00:16:39,620 --> 00:16:43,690
name enumeration can can kind of kill

385
00:16:41,930 --> 00:16:48,219
you if you're not smart about it and<font color="#E5E5E5"> so</font>

386
00:16:43,690 --> 00:16:48,220
don't use<font color="#E5E5E5"> your gov email addresses</font>

387
00:16:49,570 --> 00:16:54,470
process for exploitation is generally

388
00:16:52,010 --> 00:16:55,880
<font color="#CCCCCC">pretty straightforward as an attacker we</font>

389
00:16:54,470 --> 00:16:58,370
want to build a list of email addresses

390
00:16:55,880 --> 00:17:01,820
or user names that we know are valid and

391
00:16:58,370 --> 00:17:03,860
generally<font color="#E5E5E5"> exist so adobe database dump</font>

392
00:17:01,820 --> 00:17:06,890
is a is a great place to look because

393
00:17:03,860 --> 00:17:09,380
there's well over four million unique

394
00:17:06,890 --> 00:17:11,090
email addresses contain there so if<font color="#E5E5E5"> I'm</font>

395
00:17:09,380 --> 00:17:13,070
testing<font color="#CCCCCC"> you your website or your service</font>

396
00:17:11,089 --> 00:17:15,399
<font color="#E5E5E5">for username enumeration I can just</font>

397
00:17:13,069 --> 00:17:18,109
pound through all those Adobe database

398
00:17:15,400 --> 00:17:22,010
email addresses<font color="#CCCCCC"> and</font><font color="#E5E5E5"> see if they have</font>

399
00:17:18,109 --> 00:17:23,689
accounts on your server so give them the

400
00:17:22,010 --> 00:17:26,420
dictionary lists we establish a baseline

401
00:17:23,690 --> 00:17:28,790
request which means we just we try<font color="#E5E5E5"> it</font>

402
00:17:26,420 --> 00:17:30,710
manually first and then we<font color="#CCCCCC"> can use</font><font color="#E5E5E5"> the</font>

403
00:17:28,790 --> 00:17:33,170
<font color="#CCCCCC">dictionary to automate that process and</font>

404
00:17:30,710 --> 00:17:35,570
we search for the patterns<font color="#E5E5E5"> that indicate</font>

405
00:17:33,170 --> 00:17:41,360
that<font color="#E5E5E5"> is vulnerable such as the verbose</font>

406
00:17:35,570 --> 00:17:42,649
error<font color="#E5E5E5"> message HTTP response code etc so</font>

407
00:17:41,360 --> 00:17:44,149
yeah I kind of talked about this a

408
00:17:42,650 --> 00:17:47,210
little<font color="#E5E5E5"> bit I mean it's generally very</font>

409
00:17:44,150 --> 00:17:49,850
low impact but it's also load difficulty

410
00:17:47,210 --> 00:17:52,130
which if you're into you know risk

411
00:17:49,850 --> 00:17:53,810
analysis<font color="#E5E5E5"> and and things like that that</font>

412
00:17:52,130 --> 00:17:56,210
would generally mean it's a moderate

413
00:17:53,810 --> 00:17:58,399
risk but like I<font color="#E5E5E5"> said most organizations</font>

414
00:17:56,210 --> 00:18:01,340
consider it low a lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> don't</font>

415
00:17:58,400 --> 00:18:03,650
<font color="#CCCCCC">even bother to fix it so it all depends</font>

416
00:18:01,340 --> 00:18:04,580
who you are and what your users<font color="#CCCCCC"> are</font>

417
00:18:03,650 --> 00:18:06,890
<font color="#CCCCCC">doing</font>

418
00:18:04,580 --> 00:18:10,820
so<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going to switch over do a live</font>

419
00:18:06,890 --> 00:18:12,049
demo or at least try to do a live demo

420
00:18:10,820 --> 00:18:15,879
and then if<font color="#E5E5E5"> not we're going to be</font>

421
00:18:12,049 --> 00:18:21,110
watching some videos videos are cool

422
00:18:15,880 --> 00:18:24,440
oops<font color="#CCCCCC"> alright so if you're not familiar</font>

423
00:18:21,110 --> 00:18:29,120
with burp suite this is burp suite wow

424
00:18:24,440 --> 00:18:32,500
that is terrible well you won't need<font color="#E5E5E5"> to</font>

425
00:18:29,120 --> 00:18:32,500
see a whole lot<font color="#E5E5E5"> of the details there</font>

426
00:18:33,010 --> 00:18:38,299
yeah I don't<font color="#E5E5E5"> even think it's worth it to</font>

427
00:18:35,149 --> 00:18:40,129
be honest so burp suite an intercepting

428
00:18:38,299 --> 00:18:42,408
proxy I use that every day in<font color="#CCCCCC"> my life</font>

429
00:18:40,130 --> 00:18:44,720
pretty<font color="#E5E5E5"> much all my traffic flows through</font>

430
00:18:42,409 --> 00:18:46,880
burp suite this is<font color="#E5E5E5"> not a burp suite</font>

431
00:18:44,720 --> 00:18:50,450
product pitch by<font color="#E5E5E5"> the way I</font><font color="#CCCCCC"> just I like</font>

432
00:18:46,880 --> 00:18:52,580
it as a tool sober treat has extension

433
00:18:50,450 --> 00:18:57,080
capabilities and I wrote<font color="#E5E5E5"> in HTTP pillage</font>

434
00:18:52,580 --> 00:19:00,678
extender into it if you install it

435
00:18:57,080 --> 00:19:03,230
you'll see an h TB pillage cab up at the

436
00:19:00,679 --> 00:19:04,730
top so there are<font color="#CCCCCC"> a few values we have to</font>

437
00:19:03,230 --> 00:19:08,049
enter here in<font color="#E5E5E5"> order to make things work</font>

438
00:19:04,730 --> 00:19:11,529
<font color="#CCCCCC">and we'll</font><font color="#E5E5E5"> get to that in just a second</font>

439
00:19:08,049 --> 00:19:14,440
so as far<font color="#CCCCCC"> as the user interface goes</font>

440
00:19:11,529 --> 00:19:18,049
this<font color="#E5E5E5"> is it its rails i'm going to log in</font>

441
00:19:14,440 --> 00:19:19,880
if one of you was nasty you could

442
00:19:18,049 --> 00:19:24,230
probably find my password because it's

443
00:19:19,880 --> 00:19:26,299
in<font color="#CCCCCC"> the source</font><font color="#E5E5E5"> code but then you would</font>

444
00:19:24,230 --> 00:19:27,860
ruin my live demo and<font color="#CCCCCC"> i would</font><font color="#E5E5E5"> not be</font>

445
00:19:26,299 --> 00:19:31,279
happy but it would<font color="#CCCCCC"> be funny so it's</font>

446
00:19:27,860 --> 00:19:32,689
probably worth it and we'll see<font color="#CCCCCC"> if my</font>

447
00:19:31,279 --> 00:19:34,370
network connections working this is

448
00:19:32,690 --> 00:19:36,409
actually hosted on a server somewhere so

449
00:19:34,370 --> 00:19:38,299
<font color="#CCCCCC">i do need</font><font color="#E5E5E5"> a network connection and if</font>

450
00:19:36,409 --> 00:19:40,630
<font color="#CCCCCC">that doesn't work we'll we'll go to the</font>

451
00:19:38,299 --> 00:19:40,629
videos

452
00:19:46,010 --> 00:19:53,879
hey it worked so when you're first

453
00:19:51,600 --> 00:20:02,010
starting off the most important tab

454
00:19:53,880 --> 00:20:03,270
would be settings yeah I think<font color="#E5E5E5"> we're</font>

455
00:20:02,010 --> 00:20:08,730
<font color="#E5E5E5">going to switch to the video you guys</font>

456
00:20:03,270 --> 00:20:23,190
think this is painful don't blame me

457
00:20:08,730 --> 00:20:25,530
<font color="#E5E5E5">blame verizon alright so i'll try to</font>

458
00:20:23,190 --> 00:20:33,840
narrate what's going on let me make this

459
00:20:25,530 --> 00:20:37,440
<font color="#CCCCCC">make</font><font color="#E5E5E5"> it full screen can you guys see</font>

460
00:20:33,840 --> 00:20:39,620
that well enough so obviously i'm

461
00:20:37,440 --> 00:20:41,669
logging in pretty straightforward

462
00:20:39,620 --> 00:20:43,110
generally want<font color="#E5E5E5"> to have some sort of</font>

463
00:20:41,669 --> 00:20:44,850
authentication on your apps if you're

464
00:20:43,110 --> 00:20:49,590
not doing that you're you probably

465
00:20:44,850 --> 00:20:51,780
should be never receive your passwords

466
00:20:49,590 --> 00:20:56,820
in your browser that's just<font color="#E5E5E5"> an extra</font>

467
00:20:51,780 --> 00:20:58,230
security tip so like<font color="#E5E5E5"> i said eventually</font>

468
00:20:56,820 --> 00:21:08,549
<font color="#CCCCCC">i'm going to i'm going</font><font color="#E5E5E5"> to click on</font>

469
00:20:58,230 --> 00:21:10,500
settings we just kind<font color="#CCCCCC"> of kind of all</font>

470
00:21:08,549 --> 00:21:12,900
right so what I'm demonstrating here is

471
00:21:10,500 --> 00:21:14,190
the the dictionaries part of the tool so

472
00:21:12,900 --> 00:21:17,490
as I said one of the features it

473
00:21:14,190 --> 00:21:19,559
supports is a dictionary attack and when

474
00:21:17,490 --> 00:21:20,760
in order to make<font color="#E5E5E5"> a dictionary</font><font color="#CCCCCC"> attack</font>

475
00:21:19,559 --> 00:21:22,649
successful you have to have a dictionary

476
00:21:20,760 --> 00:21:24,270
so this allows you to upload a

477
00:21:22,650 --> 00:21:28,799
dictionary to the server that<font color="#CCCCCC"> you can</font>

478
00:21:24,270 --> 00:21:30,780
use for the attack so this this one

479
00:21:28,799 --> 00:21:33,540
that's already here is<font color="#CCCCCC"> a 500 worst</font>

480
00:21:30,780 --> 00:21:37,340
passwords dictionary that comes

481
00:21:33,540 --> 00:21:37,340
<font color="#CCCCCC">preloaded with HTTP pillage</font>

482
00:21:37,440 --> 00:21:41,519
so once you upload the dictionary you

483
00:21:40,110 --> 00:21:44,008
can<font color="#CCCCCC"> actually download it again</font><font color="#E5E5E5"> just so</font>

484
00:21:41,519 --> 00:21:49,289
<font color="#E5E5E5">you can verify what it is not super</font>

485
00:21:44,009 --> 00:21:53,700
useful but it gives<font color="#E5E5E5"> you access to it so</font>

486
00:21:49,289 --> 00:21:55,500
<font color="#CCCCCC">I'm going to</font><font color="#E5E5E5"> upload a new dictionary of</font>

487
00:21:53,700 --> 00:21:57,179
a habit of moving my mouse around a lot

488
00:21:55,500 --> 00:21:58,409
when I'm recording demos I notice you

489
00:21:57,179 --> 00:21:59,929
watch you'll see me you just<font color="#E5E5E5"> move the</font>

490
00:21:58,409 --> 00:22:02,940
mouse around which is kind of weird

491
00:21:59,929 --> 00:22:04,889
things people do so yeah just a normal

492
00:22:02,940 --> 00:22:08,070
file upload system select the dictionary

493
00:22:04,889 --> 00:22:10,139
you give it a description upload cloud

494
00:22:08,070 --> 00:22:12,990
stuff<font color="#E5E5E5"> it's stored somewhere and it's</font>

495
00:22:10,139 --> 00:22:14,908
accessible gives you a little a quick

496
00:22:12,990 --> 00:22:16,710
preview just so you kind of know at a

497
00:22:14,909 --> 00:22:22,980
high level what the dictionary is before

498
00:22:16,710 --> 00:22:27,600
you start using it<font color="#CCCCCC"> alright so WordPress</font>

499
00:22:22,980 --> 00:22:31,139
who here uses wordpress wow people are

500
00:22:27,600 --> 00:22:33,779
actually<font color="#CCCCCC"> willing to</font><font color="#E5E5E5"> admit</font><font color="#CCCCCC"> to it yeah</font>

501
00:22:31,139 --> 00:22:35,699
WordPress is uh<font color="#CCCCCC"> I've used wordpress I</font>

502
00:22:33,779 --> 00:22:38,730
know a lot<font color="#CCCCCC"> of lot of</font><font color="#E5E5E5"> people that use</font>

503
00:22:35,700 --> 00:22:40,440
WordPress I like to pick on it wordpress

504
00:22:38,730 --> 00:22:43,169
obviously vulnerable to user name and

505
00:22:40,440 --> 00:22:46,919
numeration I don't know why they won't

506
00:22:43,169 --> 00:22:51,899
fix it but it's definitely been reported

507
00:22:46,919 --> 00:22:53,820
so the login page it's pretty it's<font color="#CCCCCC"> also</font>

508
00:22:51,899 --> 00:22:54,989
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> pretty easy to Detective a</font><font color="#CCCCCC"> website</font>

509
00:22:53,820 --> 00:22:56,610
<font color="#CCCCCC">to</font><font color="#E5E5E5"> using WordPress it's very</font>

510
00:22:54,990 --> 00:22:58,830
straightforward so there are<font color="#CCCCCC"> a lot of</font>

511
00:22:56,610 --> 00:23:00,059
attacks specific reward press so if you

512
00:22:58,830 --> 00:23:02,189
are using wordpress and you're not

513
00:23:00,059 --> 00:23:04,399
updating it daily you're going to have a

514
00:23:02,190 --> 00:23:04,399
bad time

515
00:23:07,850 --> 00:23:13,169
so I'm just starting with<font color="#E5E5E5"> a bad</font><font color="#CCCCCC"> username</font>

516
00:23:11,130 --> 00:23:14,970
that<font color="#CCCCCC"> email that doesn't exist in the</font>

517
00:23:13,170 --> 00:23:18,510
server and what you see is a verbose

518
00:23:14,970 --> 00:23:20,490
message that says invalid username if we

519
00:23:18,510 --> 00:23:22,590
provide a username that does exist in an

520
00:23:20,490 --> 00:23:24,750
invalid password it responds with a

521
00:23:22,590 --> 00:23:26,459
<font color="#E5E5E5">completely different message so you know</font>

522
00:23:24,750 --> 00:23:31,370
that tells us<font color="#E5E5E5"> okay that account does</font>

523
00:23:26,460 --> 00:23:33,750
exist we just don't<font color="#E5E5E5"> have the password so</font>

524
00:23:31,370 --> 00:23:36,600
what i'm doing here is i'm actually

525
00:23:33,750 --> 00:23:39,300
<font color="#E5E5E5">going to take that request from Burt</font>

526
00:23:36,600 --> 00:23:41,010
from burps proxy history and then I want

527
00:23:39,300 --> 00:23:42,750
<font color="#CCCCCC">to</font><font color="#E5E5E5"> send that to</font><font color="#CCCCCC"> the server because</font>

528
00:23:41,010 --> 00:23:44,760
that's the request I want to automate

529
00:23:42,750 --> 00:23:46,560
but before<font color="#CCCCCC"> I do that I actually have to</font>

530
00:23:44,760 --> 00:23:49,830
set the the credentials for the server

531
00:23:46,560 --> 00:23:54,149
in the<font color="#E5E5E5"> URL so just changing the URL to</font>

532
00:23:49,830 --> 00:23:57,659
point to my cnc server which is<font color="#E5E5E5"> hosted</font>

533
00:23:54,150 --> 00:23:59,010
on on the cloud<font color="#E5E5E5"> and then there's a token</font>

534
00:23:57,660 --> 00:24:01,470
you have to<font color="#E5E5E5"> provide and the token is</font>

535
00:23:59,010 --> 00:24:03,330
unique to your install it's just a form

536
00:24:01,470 --> 00:24:05,640
of basic auth it's not great we can

537
00:24:03,330 --> 00:24:07,199
improve on that but it's just something

538
00:24:05,640 --> 00:24:10,620
quick to kind of prevent the bad guys

539
00:24:07,200 --> 00:24:14,700
from you know hacking<font color="#CCCCCC"> my video recorded</font>

540
00:24:10,620 --> 00:24:18,750
demos so you can find this stuff out in

541
00:24:14,700 --> 00:24:20,280
the in the settings panel let's paste it

542
00:24:18,750 --> 00:24:23,790
in there and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> theoretically you</font>

543
00:24:20,280 --> 00:24:25,649
should be able to<font color="#E5E5E5"> create jobs obviously</font>

544
00:24:23,790 --> 00:24:27,060
you know we want<font color="#E5E5E5"> a 10</font><font color="#CCCCCC"> occation</font><font color="#E5E5E5"> because</font>

545
00:24:25,650 --> 00:24:29,040
<font color="#E5E5E5">we don't want someone to just</font>

546
00:24:27,060 --> 00:24:31,760
maliciously add jobs to a command and

547
00:24:29,040 --> 00:24:34,020
control server that would<font color="#E5E5E5"> not be good so</font>

548
00:24:31,760 --> 00:24:35,910
<font color="#E5E5E5">theoretically that</font><font color="#CCCCCC"> token is unique and</font>

549
00:24:34,020 --> 00:24:41,760
only we would know it and that's why it

550
00:24:35,910 --> 00:24:44,040
kind of works but so<font color="#E5E5E5"> I basically just</font>

551
00:24:41,760 --> 00:24:49,350
right clicked on the job send HTTP

552
00:24:44,040 --> 00:24:51,480
pillage it parses it up and then you you

553
00:24:49,350 --> 00:24:54,270
<font color="#E5E5E5">get</font><font color="#CCCCCC"> to see the</font><font color="#E5E5E5"> job in the user interface</font>

554
00:24:51,480 --> 00:24:56,280
<font color="#E5E5E5">so the HTTP headers are displayed there</font>

555
00:24:54,270 --> 00:24:58,290
we also have<font color="#CCCCCC"> a few different tables</font>

556
00:24:56,280 --> 00:25:01,110
which will become important later when

557
00:24:58,290 --> 00:25:02,340
we<font color="#CCCCCC"> actually run the job when we when we</font>

558
00:25:01,110 --> 00:25:04,860
send the job to the<font color="#E5E5E5"> command and control</font>

559
00:25:02,340 --> 00:25:07,320
server it doesn't start automatically we

560
00:25:04,860 --> 00:25:08,669
have to go in<font color="#E5E5E5"> and manually start it so</font>

561
00:25:07,320 --> 00:25:13,980
what we're going to do is we're going to

562
00:25:08,670 --> 00:25:16,470
actually edit it to do that at some

563
00:25:13,980 --> 00:25:22,830
point once<font color="#CCCCCC"> I finish moving my mouse</font>

564
00:25:16,470 --> 00:25:25,170
around it's<font color="#E5E5E5"> really hard to like record</font>

565
00:25:22,830 --> 00:25:27,389
like demos like this and then talk about

566
00:25:25,170 --> 00:25:28,560
<font color="#E5E5E5">them because like it always changes you</font>

567
00:25:27,390 --> 00:25:30,210
never know exactly what<font color="#E5E5E5"> you're going to</font>

568
00:25:28,560 --> 00:25:33,270
say so you're constantly stopping and

569
00:25:30,210 --> 00:25:36,120
starting and moving your mouse and doing

570
00:25:33,270 --> 00:25:38,520
weird things so now<font color="#CCCCCC"> that I'm actually</font>

571
00:25:36,120 --> 00:25:47,489
editing the job I'm<font color="#E5E5E5"> just going to</font>

572
00:25:38,520 --> 00:25:49,020
provide a quick description so we can

573
00:25:47,490 --> 00:25:52,920
edit the HTTP headers who want to send

574
00:25:49,020 --> 00:25:54,570
we can edit the HTTP<font color="#E5E5E5"> post data what I'm</font>

575
00:25:52,920 --> 00:25:57,210
adding here is<font color="#E5E5E5"> I'm adding a response</font>

576
00:25:54,570 --> 00:26:00,000
flag so I'm adding the phrase I want the

577
00:25:57,210 --> 00:26:01,260
nodes to search for and this will tell

578
00:26:00,000 --> 00:26:04,740
me whether or<font color="#E5E5E5"> not this particular</font>

579
00:26:01,260 --> 00:26:06,060
payload did exist in the server<font color="#CCCCCC"> you can</font>

580
00:26:04,740 --> 00:26:09,360
use either string or a regular

581
00:26:06,060 --> 00:26:11,370
<font color="#CCCCCC">expression and in this case when</font>

582
00:26:09,360 --> 00:26:13,229
WordPress does have an account that

583
00:26:11,370 --> 00:26:15,719
exists and you provide the wrong

584
00:26:13,230 --> 00:26:18,690
password it uses the unique phrase

585
00:26:15,720 --> 00:26:21,030
incorrect so<font color="#E5E5E5"> theoretically if the phrase</font>

586
00:26:18,690 --> 00:26:25,530
incorrect occurs in the HTTP response

587
00:26:21,030 --> 00:26:28,700
body we know the username exists so just

588
00:26:25,530 --> 00:26:28,700
a little tidbit there

589
00:26:32,140 --> 00:26:37,580
so changing the attack from repeat to

590
00:26:35,390 --> 00:26:39,170
dictionary and then I'm<font color="#E5E5E5"> selecting the</font>

591
00:26:37,580 --> 00:26:41,629
dictionary you want to use which is the

592
00:26:39,170 --> 00:26:46,130
adobe email address dictionary that we

593
00:26:41,630 --> 00:26:47,810
just<font color="#E5E5E5"> uploaded then starting so what I</font>

594
00:26:46,130 --> 00:26:49,400
what I just did there is I actually

595
00:26:47,810 --> 00:26:51,169
found<font color="#E5E5E5"> that the parameter that's</font>

596
00:26:49,400 --> 00:26:54,080
vulnerable which in this case was log

597
00:26:51,170 --> 00:26:56,360
and I replaced that with the payload

598
00:26:54,080 --> 00:26:59,870
marker so if you use burp you're used to

599
00:26:56,360 --> 00:27:03,320
the payload markers burp uses an HTTP

600
00:26:59,870 --> 00:27:05,270
pillage we just use what<font color="#E5E5E5"> are those</font>

601
00:27:03,320 --> 00:27:07,490
called squiggly brackets that's what I'm

602
00:27:05,270 --> 00:27:10,220
<font color="#E5E5E5">going to</font><font color="#CCCCCC"> call them squiggly brackets p</font>

603
00:27:07,490 --> 00:27:14,350
and then that tells you or that tells

604
00:27:10,220 --> 00:27:14,350
the<font color="#CCCCCC"> node where to insert the payload</font>

605
00:27:15,850 --> 00:27:24,560
curly braces there<font color="#E5E5E5"> you go squiggly</font>

606
00:27:18,680 --> 00:27:26,180
bracket sounds better more technical so

607
00:27:24,560 --> 00:27:28,159
at this point that<font color="#CCCCCC"> the jobs actually</font>

608
00:27:26,180 --> 00:27:29,780
started so any node that's sitting on

609
00:27:28,160 --> 00:27:31,160
the<font color="#E5E5E5"> internet polling for a job would</font>

610
00:27:29,780 --> 00:27:38,899
receive this<font color="#CCCCCC"> and it would start doing</font>

611
00:27:31,160 --> 00:27:40,760
its thing so what you saw right there is

612
00:27:38,900 --> 00:27:44,510
<font color="#E5E5E5">that table actually started populating</font>

613
00:27:40,760 --> 00:27:47,090
with the HTTP status codes and also the

614
00:27:44,510 --> 00:27:49,670
node IDs<font color="#CCCCCC"> so when</font><font color="#E5E5E5"> I'm just saying looking</font>

615
00:27:47,090 --> 00:27:53,030
at the user interface it's pulling doing

616
00:27:49,670 --> 00:27:54,950
some<font color="#E5E5E5"> Ajax stuff and that tells me right</font>

617
00:27:53,030 --> 00:27:56,810
now I have at least four nodes that are

618
00:27:54,950 --> 00:28:00,140
targeting that<font color="#E5E5E5"> server and they've all</font>

619
00:27:56,810 --> 00:28:02,780
received valid status codes so that

620
00:28:00,140 --> 00:28:06,620
tells me nothing's broken the web server

621
00:28:02,780 --> 00:28:09,290
is responding correctly which in a lot

622
00:28:06,620 --> 00:28:11,570
<font color="#CCCCCC">of times it doesn't so</font><font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to</font>

623
00:28:09,290 --> 00:28:16,220
actually<font color="#E5E5E5"> spin up another node here</font>

624
00:28:11,570 --> 00:28:18,560
locally and so the node is actually a I

625
00:28:16,220 --> 00:28:21,050
shouldn't increase the font size so a

626
00:28:18,560 --> 00:28:23,389
note is it is a ruby script so it's

627
00:28:21,050 --> 00:28:25,180
pretty easy<font color="#CCCCCC"> to get started in here we're</font>

628
00:28:23,390 --> 00:28:27,440
specifying the server address

629
00:28:25,180 --> 00:28:31,610
certificate path because i'm actually

630
00:28:27,440 --> 00:28:33,290
using<font color="#CCCCCC"> ssl and then the api t so the API</font>

631
00:28:31,610 --> 00:28:35,149
key just kind of<font color="#E5E5E5"> Afeni</font><font color="#CCCCCC"> kate's the node</font>

632
00:28:33,290 --> 00:28:39,399
so we know we're<font color="#E5E5E5"> not having rogue nodes</font>

633
00:28:35,150 --> 00:28:41,950
join our CNC server in also thread count

634
00:28:39,399 --> 00:28:45,639
how many threads we wanted to want<font color="#E5E5E5"> it to</font>

635
00:28:41,950 --> 00:28:47,559
use and so pretty much instantly it

636
00:28:45,639 --> 00:28:49,869
receives the job and it receives a bunch

637
00:28:47,559 --> 00:28:51,639
<font color="#E5E5E5">of data so in this case there's about a</font>

638
00:28:49,869 --> 00:28:53,678
hundred email addresses and that's

639
00:28:51,639 --> 00:28:55,299
considered the jobs work so those are

640
00:28:53,679 --> 00:28:57,839
the email addresses that node is going

641
00:28:55,299 --> 00:29:00,219
to be<font color="#CCCCCC"> responsible for enumerated through</font>

642
00:28:57,839 --> 00:29:04,839
so the C&C server is what actually

643
00:29:00,219 --> 00:29:07,989
delegates that work out then it just

644
00:29:04,839 --> 00:29:10,719
sits sending those requests verifying

645
00:29:07,989 --> 00:29:15,009
the responses and it does that<font color="#CCCCCC"> for</font><font color="#E5E5E5"> a</font>

646
00:29:10,719 --> 00:29:17,369
little while so I'm just going to<font color="#CCCCCC"> fast</font>

647
00:29:15,009 --> 00:29:21,099
<font color="#CCCCCC">forward</font><font color="#E5E5E5"> it took probably a few minutes</font>

648
00:29:17,369 --> 00:29:22,959
<font color="#E5E5E5">but if you look at the</font><font color="#CCCCCC"> match string you</font>

649
00:29:21,099 --> 00:29:24,700
can't really see<font color="#CCCCCC"> it very well but under</font>

650
00:29:22,960 --> 00:29:29,639
job matches what you'll see is

651
00:29:24,700 --> 00:29:32,379
eventually we'll<font color="#CCCCCC"> have a result</font><font color="#E5E5E5"> all right</font>

652
00:29:29,639 --> 00:29:34,539
so as<font color="#CCCCCC"> soon as as soon as we</font><font color="#E5E5E5"> found that</font>

653
00:29:32,379 --> 00:29:36,759
result it populated there and what that

654
00:29:34,539 --> 00:29:39,580
indicates is that that particular email

655
00:29:36,759 --> 00:29:41,499
address did exist in the server so now

656
00:29:39,580 --> 00:29:45,189
we can be malicious and we can take that

657
00:29:41,499 --> 00:29:46,809
<font color="#E5E5E5">we can try to</font><font color="#CCCCCC"> login so the nodes are</font>

658
00:29:45,190 --> 00:29:48,999
going to keep keep going looking<font color="#CCCCCC"> for</font>

659
00:29:46,809 --> 00:29:55,479
more email addresses but that was a

660
00:29:48,999 --> 00:30:13,749
positive result so yeah any questions

661
00:29:55,479 --> 00:30:15,279
about that<font color="#E5E5E5"> I I host it right now in the</font>

662
00:30:13,749 --> 00:30:17,469
cloud but if you have the resources to

663
00:30:15,279 --> 00:30:19,029
<font color="#E5E5E5">do it locally you could do</font><font color="#CCCCCC"> that as well</font>

664
00:30:17,469 --> 00:30:20,469
so<font color="#CCCCCC"> if your developer and you want to</font>

665
00:30:19,029 --> 00:30:23,129
want<font color="#E5E5E5"> to try doing this you could very</font>

666
00:30:20,469 --> 00:30:23,129
well do it locally

667
00:30:24,640 --> 00:30:35,780
villages basic search tip right so you

668
00:30:33,980 --> 00:30:37,940
could<font color="#CCCCCC"> have the cnc server running</font>

669
00:30:35,780 --> 00:30:42,260
locally and the nodes running on the

670
00:30:37,940 --> 00:30:43,730
cloud pointing back to it yeah so that

671
00:30:42,260 --> 00:30:46,670
email<font color="#CCCCCC"> address we just</font><font color="#E5E5E5"> found out it</font>

672
00:30:43,730 --> 00:30:51,860
existed in<font color="#CCCCCC"> the server and obviously that</font>

673
00:30:46,670 --> 00:30:56,720
guy's using a weak password so i think

674
00:30:51,860 --> 00:30:58,790
we'll<font color="#E5E5E5"> get in we'll have to</font><font color="#CCCCCC"> see but</font><font color="#E5E5E5"> you</font>

675
00:30:56,720 --> 00:31:00,140
<font color="#E5E5E5">see that's a good example of the verbose</font>

676
00:30:58,790 --> 00:31:01,639
error message so that's completely

677
00:31:00,140 --> 00:31:03,350
different<font color="#CCCCCC"> in that case it says the</font>

678
00:31:01,640 --> 00:31:07,610
password for<font color="#E5E5E5"> that particular user is</font>

679
00:31:03,350 --> 00:31:14,178
incorrect so we do know you exist and

680
00:31:07,610 --> 00:31:18,340
then we're going to get in so yeah

681
00:31:14,179 --> 00:31:18,340
that's that's a<font color="#CCCCCC"> username enumeration</font>

682
00:31:19,330 --> 00:31:23,928
hopefully everyone was already<font color="#CCCCCC"> familiar</font>

683
00:31:21,620 --> 00:31:26,360
with it but<font color="#E5E5E5"> that's how we can we can</font>

684
00:31:23,929 --> 00:31:28,640
actually<font color="#E5E5E5"> increase the exploit ability of</font>

685
00:31:26,360 --> 00:31:30,469
it because when we're testing testing

686
00:31:28,640 --> 00:31:32,450
locally it takes a long time to actually

687
00:31:30,470 --> 00:31:34,520
enumerate through that many requests and

688
00:31:32,450 --> 00:31:35,840
it makes kind of unfeasible but if<font color="#E5E5E5"> we</font>

689
00:31:34,520 --> 00:32:00,530
can distribute it out it really

690
00:31:35,840 --> 00:32:02,330
<font color="#CCCCCC">increases the</font><font color="#E5E5E5"> the performance yep but if</font>

691
00:32:00,530 --> 00:32:04,040
you don't<font color="#E5E5E5"> mind I'll get back to that at</font>

692
00:32:02,330 --> 00:32:07,909
the end<font color="#E5E5E5"> I have two more demos I'd like</font>

693
00:32:04,040 --> 00:32:10,550
to try to get<font color="#E5E5E5"> through if I can this</font>

694
00:32:07,910 --> 00:32:13,580
expiring tokens this is an interesting

695
00:32:10,550 --> 00:32:15,678
situation because i was performing an

696
00:32:13,580 --> 00:32:17,449
assessment and i discovered a

697
00:32:15,679 --> 00:32:20,420
vulnerability relating to tokens that

698
00:32:17,450 --> 00:32:22,580
were supposed<font color="#E5E5E5"> to expire and that's what</font>

699
00:32:20,420 --> 00:32:25,460
made me see the need to write a tool to

700
00:32:22,580 --> 00:32:27,770
do<font color="#E5E5E5"> this stuff so when I say expiring</font>

701
00:32:25,460 --> 00:32:29,450
tokens I'm talking about hopefully

702
00:32:27,770 --> 00:32:32,629
random tokens that are used for

703
00:32:29,450 --> 00:32:35,240
<font color="#E5E5E5">out-of-band communication that expire in</font>

704
00:32:32,630 --> 00:32:37,890
you know some certain time window<font color="#E5E5E5"> maybe</font>

705
00:32:35,240 --> 00:32:39,810
60 seconds it might be 15 minutes in

706
00:32:37,890 --> 00:32:41,850
<font color="#CCCCCC">maybe a few</font><font color="#E5E5E5"> hours and the idea is that</font>

707
00:32:39,810 --> 00:32:44,370
theoretically we could probably brute

708
00:32:41,850 --> 00:32:46,110
force those tokens if they're weak but

709
00:32:44,370 --> 00:32:48,479
given that we<font color="#CCCCCC"> have such a</font><font color="#E5E5E5"> small time</font>

710
00:32:46,110 --> 00:32:50,040
window it's hard and the only way we can

711
00:32:48,480 --> 00:32:53,490
solve that<font color="#E5E5E5"> problem is by allocating more</font>

712
00:32:50,040 --> 00:32:56,970
resources so they're very common

713
00:32:53,490 --> 00:32:59,310
especially with multi factor auth you

714
00:32:56,970 --> 00:33:01,080
know and forgot password mechanism so as

715
00:32:59,310 --> 00:33:04,590
an example Google Authenticator uses a

716
00:33:01,080 --> 00:33:06,510
<font color="#CCCCCC">six digit token it's it's a very small</font>

717
00:33:04,590 --> 00:33:10,230
<font color="#E5E5E5">time window I think there's</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> only 30</font>

718
00:33:06,510 --> 00:33:12,360
seconds<font color="#E5E5E5"> or 60 seconds so these abilities</font>

719
00:33:10,230 --> 00:33:13,980
for actually brute-forcing that in in

720
00:33:12,360 --> 00:33:17,879
the time window they have is pretty

721
00:33:13,980 --> 00:33:20,430
small but if you've implemented with a

722
00:33:17,880 --> 00:33:22,020
longer<font color="#E5E5E5"> time window it's it's fairly easy</font>

723
00:33:20,430 --> 00:33:25,440
to actually exploit that and I've seen

724
00:33:22,020 --> 00:33:27,840
that quite a few times so I'm going<font color="#E5E5E5"> to</font>

725
00:33:25,440 --> 00:33:31,890
do another another demo here this demo

726
00:33:27,840 --> 00:33:33,480
is using a django envy which is a tool

727
00:33:31,890 --> 00:33:35,160
we built that's<font color="#E5E5E5"> actually an</font>

728
00:33:33,480 --> 00:33:37,020
intentionally vulnerable Django

729
00:33:35,160 --> 00:33:40,410
application anyone here at django

730
00:33:37,020 --> 00:33:41,910
developer yeah so if you check it out

731
00:33:40,410 --> 00:33:44,190
<font color="#E5E5E5">and want to learn</font><font color="#CCCCCC"> more about Django</font>

732
00:33:41,910 --> 00:33:45,750
security it includes tutorials and

733
00:33:44,190 --> 00:33:48,930
everything to get you started<font color="#E5E5E5"> it's a</font>

734
00:33:45,750 --> 00:33:51,270
great<font color="#E5E5E5"> tool I've used</font><font color="#CCCCCC"> it twice I'm not</font><font color="#E5E5E5"> a</font>

735
00:33:48,930 --> 00:33:54,800
Python person but I think that<font color="#E5E5E5"> was</font>

736
00:33:51,270 --> 00:33:54,800
obvious when I said I'm a ruby person

737
00:33:59,360 --> 00:34:10,259
<font color="#CCCCCC">alright so got Django</font><font color="#E5E5E5"> NV running I'm</font>

738
00:34:04,110 --> 00:34:12,000
going to fast forward because so there's

739
00:34:10,260 --> 00:34:15,480
a forgot password mechanism in Django

740
00:34:12,000 --> 00:34:17,520
envy and the way it works is you provide

741
00:34:15,480 --> 00:34:20,550
your email address and then it sends you

742
00:34:17,520 --> 00:34:25,290
<font color="#E5E5E5">a unique token well it should</font><font color="#CCCCCC"> be a</font>

743
00:34:20,550 --> 00:34:26,940
unique token and so the<font color="#CCCCCC"> idea is that you</font>

744
00:34:25,290 --> 00:34:29,759
would receive the unique token in your

745
00:34:26,940 --> 00:34:31,200
email<font color="#CCCCCC"> address and you'd use that to</font>

746
00:34:29,760 --> 00:34:34,320
confirm your<font color="#CCCCCC"> identity before resetting</font>

747
00:34:31,199 --> 00:34:37,199
your password so<font color="#CCCCCC"> you know in this case</font>

748
00:34:34,320 --> 00:34:40,050
there's a few obvious flaws with this

749
00:34:37,199 --> 00:34:42,779
with this flow number one when you

750
00:34:40,050 --> 00:34:44,190
specify your your reset token you're

751
00:34:42,780 --> 00:34:46,080
also specifying the password ooh you

752
00:34:44,190 --> 00:34:47,280
want to change in the same request and

753
00:34:46,080 --> 00:34:50,810
that makes<font color="#E5E5E5"> it really easy to automate</font>

754
00:34:47,280 --> 00:34:50,810
and brute force that

755
00:34:51,250 --> 00:34:56,768
so what I'm doing is I'm just<font color="#E5E5E5"> I'm just</font>

756
00:34:54,199 --> 00:34:59,808
sending a baseline request with a token

757
00:34:56,768 --> 00:35:03,189
0000 and a password I want to reset<font color="#CCCCCC"> it</font>

758
00:34:59,809 --> 00:35:08,119
to and then i'm going<font color="#E5E5E5"> to send that to</font>

759
00:35:03,190 --> 00:35:18,859
http pillage and<font color="#E5E5E5"> i'm going</font><font color="#CCCCCC"> to edit that</font>

760
00:35:08,119 --> 00:35:21,319
job so what if we're if we're if we're

761
00:35:18,859 --> 00:35:22,990
trying to test a four-digit pin we're

762
00:35:21,319 --> 00:35:25,069
obviously going to be brute forcing it

763
00:35:22,990 --> 00:35:28,490
character sets pretty simple because

764
00:35:25,069 --> 00:35:30,859
it's just<font color="#E5E5E5"> it's just digits so we're</font>

765
00:35:28,490 --> 00:35:33,410
<font color="#CCCCCC">allowed to specify the character set in</font>

766
00:35:30,859 --> 00:35:36,288
this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> I specified for DS which means</font>

767
00:35:33,410 --> 00:35:37,910
digit digit digit digit we're<font color="#E5E5E5"> going to</font>

768
00:35:36,289 --> 00:35:39,680
<font color="#E5E5E5">start it and what that's going to do is</font>

769
00:35:37,910 --> 00:35:46,129
it's going to enumerate through all of

770
00:35:39,680 --> 00:35:50,210
the potential<font color="#CCCCCC"> four-digit tokens going to</font>

771
00:35:46,130 --> 00:35:53,390
start it so it's going to run<font color="#CCCCCC"> for a bit</font>

772
00:35:50,210 --> 00:35:55,160
and then because there's no unique

773
00:35:53,390 --> 00:35:57,890
phrase or anything to search for we

774
00:35:55,160 --> 00:35:59,450
didn't specify a pattern to look for but

775
00:35:57,890 --> 00:36:02,210
theoretically when this is done running

776
00:35:59,450 --> 00:36:06,049
we will have reset the victims password

777
00:36:02,210 --> 00:36:10,490
so we wait<font color="#E5E5E5"> till it's done try it and</font>

778
00:36:06,049 --> 00:36:12,019
then we're able to able to get in sorry

779
00:36:10,490 --> 00:36:13,368
I'm<font color="#E5E5E5"> kind of bouncing around because I</font>

780
00:36:12,019 --> 00:36:17,868
should give me the<font color="#E5E5E5"> five minute warning</font>

781
00:36:13,369 --> 00:36:21,440
like five minutes ago<font color="#E5E5E5"> so but yeah that's</font>

782
00:36:17,869 --> 00:36:23,359
that's it that's actually it's it's a

783
00:36:21,440 --> 00:36:27,019
fairly common vulnerability<font color="#CCCCCC"> for</font>

784
00:36:23,359 --> 00:36:28,848
companies to use weak tokens and they

785
00:36:27,019 --> 00:36:30,288
<font color="#E5E5E5">kind of assume that because they expire</font>

786
00:36:28,849 --> 00:36:31,430
in a<font color="#E5E5E5"> certain amount of time you're not</font>

787
00:36:30,289 --> 00:36:32,779
going to have a problem<font color="#E5E5E5"> but</font>

788
00:36:31,430 --> 00:36:34,910
theoretically if you throw enough

789
00:36:32,779 --> 00:36:36,769
resources at anything you can you can

790
00:36:34,910 --> 00:36:39,348
reduce the time it takes to complete it

791
00:36:36,769 --> 00:36:42,339
so that's that's one case where this

792
00:36:39,349 --> 00:36:42,339
tool really comes in handy

793
00:36:45,819 --> 00:36:55,190
now that's not what<font color="#CCCCCC"> I wanted to do so</font>

794
00:36:53,450 --> 00:36:57,828
the last thing I wanted<font color="#E5E5E5"> to demo I'll</font>

795
00:36:55,190 --> 00:37:00,049
just talk about it real quickly<font color="#E5E5E5"> denial</font>

796
00:36:57,829 --> 00:37:05,660
<font color="#E5E5E5">of service so few of you use wordpress</font>

797
00:37:00,049 --> 00:37:08,210
wordpress has an xml RPC file if that's

798
00:37:05,660 --> 00:37:10,038
publicly accessible you're going to have

799
00:37:08,210 --> 00:37:11,809
a<font color="#E5E5E5"> bad time lately there have been a lot</font>

800
00:37:10,039 --> 00:37:14,720
of denial of service attacks against

801
00:37:11,809 --> 00:37:18,109
that file because it does<font color="#CCCCCC"> XML</font><font color="#E5E5E5"> and to the</font>

802
00:37:14,720 --> 00:37:22,038
expansion so what we can do is we can

803
00:37:18,109 --> 00:37:26,538
actually exploit that and pretty much

804
00:37:22,039 --> 00:37:29,900
bring bring a server to its knees right

805
00:37:26,539 --> 00:37:34,069
here so we'll<font color="#E5E5E5"> skip the fluff and we'll</font>

806
00:37:29,900 --> 00:37:35,900
<font color="#E5E5E5">just get into the</font><font color="#CCCCCC"> video this is an</font>

807
00:37:34,069 --> 00:37:37,579
intentionally vulnerable version of

808
00:37:35,900 --> 00:37:40,640
<font color="#CCCCCC">WordPress so theoretically if you're up</font>

809
00:37:37,579 --> 00:37:42,920
to<font color="#CCCCCC"> date</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> won't have this issue but so</font>

810
00:37:40,640 --> 00:37:48,799
I just<font color="#E5E5E5"> made sure the xml RPC file is</font>

811
00:37:42,920 --> 00:37:54,380
accessible and then we have a custom job

812
00:37:48,799 --> 00:37:57,019
we're going to run<font color="#CCCCCC"> okay so it's</font>

813
00:37:54,380 --> 00:37:59,990
basically an entity expansion attack

814
00:37:57,019 --> 00:38:03,859
which consumes all of the servers memory

815
00:37:59,990 --> 00:38:06,470
so if you can see in my terminal window

816
00:38:03,859 --> 00:38:08,180
there I'll have I'll have top open so

817
00:38:06,470 --> 00:38:11,149
you can see the memory usage in the cpu

818
00:38:08,180 --> 00:38:13,750
<font color="#E5E5E5">load and then pretty much as soon as I</font>

819
00:38:11,150 --> 00:38:16,130
start<font color="#E5E5E5"> running it will see that spike and</font>

820
00:38:13,750 --> 00:38:18,799
this is a pretty serious flaw in

821
00:38:16,130 --> 00:38:21,109
<font color="#CCCCCC">WordPress because it would actually it</font>

822
00:38:18,799 --> 00:38:23,538
would cause if you're running my sequel

823
00:38:21,109 --> 00:38:25,038
it would cause my sequel to crash and it

824
00:38:23,539 --> 00:38:28,430
would have to be manually spawned again

825
00:38:25,039 --> 00:38:31,059
so you<font color="#E5E5E5"> can see the the usage is spiking</font>

826
00:38:28,430 --> 00:38:31,058
pretty quickly

827
00:38:39,480 --> 00:38:45,940
and then eventually<font color="#E5E5E5"> you're going to see</font>

828
00:38:42,340 --> 00:38:48,340
<font color="#CCCCCC">that and that that works pretty much</font>

829
00:38:45,940 --> 00:38:50,200
without fail on WordPress 39 and below

830
00:38:48,340 --> 00:38:54,070
so<font color="#CCCCCC"> if you're running one of those with</font>

831
00:38:50,200 --> 00:38:55,779
<font color="#CCCCCC">xmlrpc open to the world it's</font><font color="#E5E5E5"> very easy</font>

832
00:38:54,070 --> 00:38:58,119
to take you<font color="#CCCCCC"> off line in</font><font color="#E5E5E5"> this case I only</font>

833
00:38:55,780 --> 00:39:00,100
use one node and that was locally so if

834
00:38:58,119 --> 00:39:02,530
I had scaled this in we're hitting you

835
00:39:00,100 --> 00:39:04,540
with 10 notes constantly no matter how

836
00:39:02,530 --> 00:39:06,130
big your server is running it or your

837
00:39:04,540 --> 00:39:10,300
load balancers we can take<font color="#E5E5E5"> it all down</font>

838
00:39:06,130 --> 00:39:19,540
pretty cheaply like that's just<font color="#E5E5E5"> denial</font>

839
00:39:10,300 --> 00:39:21,040
of service no big<font color="#CCCCCC"> deal alright great</font>

840
00:39:19,540 --> 00:39:23,350
well I<font color="#CCCCCC"> think I'll pretty much have to</font>

841
00:39:21,040 --> 00:39:27,220
wrap up since I'm out of time but

842
00:39:23,350 --> 00:39:29,770
<font color="#E5E5E5">there's a few</font><font color="#CCCCCC"> resources here i'll</font><font color="#E5E5E5"> just</font>

843
00:39:27,220 --> 00:39:31,810
leave up yeah<font color="#E5E5E5"> i didn't do any research i</font>

844
00:39:29,770 --> 00:39:33,280
literally got the idea started building

845
00:39:31,810 --> 00:39:34,660
this tool because<font color="#E5E5E5"> i needed something so</font>

846
00:39:33,280 --> 00:39:36,460
there could be something out there that

847
00:39:34,660 --> 00:39:42,520
already does this but<font color="#E5E5E5"> i don't know we</font>

848
00:39:36,460 --> 00:39:44,350
have a cool web interface good job we

849
00:39:42,520 --> 00:39:46,660
made<font color="#CCCCCC"> it</font><font color="#E5E5E5"> through the last set of talks</font>

850
00:39:44,350 --> 00:39:48,549
for the day so we can find out now who

851
00:39:46,660 --> 00:39:57,839
won prizes and then<font color="#E5E5E5"> hopefully get some</font>

852
00:39:48,550 --> 00:39:57,840
sleep at some point tonight thank you

853
00:39:58,000 --> 00:40:00,060
you

