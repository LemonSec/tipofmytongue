1
00:00:18,160 --> 00:00:23,900
<font color="#E5E5E5">I'm going to probably move about it a</font>

2
00:00:20,360 --> 00:00:26,900
little bit okay so yeah we're proud of

3
00:00:23,900 --> 00:00:28,669
rapid seven now in May they acquired NT

4
00:00:26,900 --> 00:00:31,490
objectives we've been building a tool

5
00:00:28,670 --> 00:00:34,370
called nto spider which is now app

6
00:00:31,490 --> 00:00:38,839
spider and as mentioned I've been doing

7
00:00:34,370 --> 00:00:40,879
ab sec for good<font color="#CCCCCC"> fifteen years</font><font color="#E5E5E5"> now and</font>

8
00:00:38,840 --> 00:00:44,809
that's<font color="#E5E5E5"> just pretty much all i do is ab</font>

9
00:00:40,879 --> 00:00:46,099
sec all day what this talk is really

10
00:00:44,809 --> 00:00:50,300
<font color="#E5E5E5">going to be about is just kind of an</font>

11
00:00:46,100 --> 00:00:52,820
overview of where we are at with the

12
00:00:50,300 --> 00:00:55,669
<font color="#CCCCCC">existing test apps kind of the</font><font color="#E5E5E5"> the new</font>

13
00:00:52,820 --> 00:00:57,649
challenges that we see with the way<font color="#CCCCCC"> we</font>

14
00:00:55,670 --> 00:00:58,970
apps are developed these days and then

15
00:00:57,649 --> 00:01:02,210
we'll<font color="#E5E5E5"> talk a little bit about</font><font color="#CCCCCC"> hack is on</font>

16
00:00:58,970 --> 00:01:03,110
and what<font color="#E5E5E5"> that actually is but we're</font>

17
00:01:02,210 --> 00:01:06,619
going<font color="#E5E5E5"> to start off</font><font color="#CCCCCC"> with the existing</font>

18
00:01:03,110 --> 00:01:10,130
<font color="#E5E5E5">test apps there are plenty</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> if</font>

19
00:01:06,619 --> 00:01:12,680
you<font color="#E5E5E5"> look at you know the standard lists</font>

20
00:01:10,130 --> 00:01:15,649
out there you know we've got the comic

21
00:01:12,680 --> 00:01:17,720
kind of is<font color="#E5E5E5"> a goes kind of across all</font>

22
00:01:15,649 --> 00:01:19,610
<font color="#E5E5E5">open-source development right it's like</font>

23
00:01:17,720 --> 00:01:21,590
we all have to<font color="#E5E5E5"> kind of create new</font>

24
00:01:19,610 --> 00:01:25,220
versions and there was actually new one

25
00:01:21,590 --> 00:01:29,630
we started hack is on a little over a

26
00:01:25,220 --> 00:01:31,580
year ago and then I<font color="#E5E5E5"> saw that what does</font>

27
00:01:29,630 --> 00:01:35,089
it called benchmark is the new a wasp

28
00:01:31,580 --> 00:01:37,850
one now that popped up it's a pretty

29
00:01:35,090 --> 00:01:40,640
much like wave<font color="#CCCCCC"> set but there's a list of</font>

30
00:01:37,850 --> 00:01:46,610
them and the wasp list is probably one

31
00:01:40,640 --> 00:01:49,220
of the best lists out there and we've

32
00:01:46,610 --> 00:01:53,360
got there's a collection of offline apps

33
00:01:49,220 --> 00:01:55,189
as well as online apps so this is ones

34
00:01:53,360 --> 00:01:58,369
that are hosted right so there's a

35
00:01:55,189 --> 00:02:01,460
<font color="#E5E5E5">offline and then actually this is online</font>

36
00:01:58,369 --> 00:02:03,079
the both stay offline<font color="#E5E5E5"> have to do so</font>

37
00:02:01,460 --> 00:02:05,449
there's quite a number of them in<font color="#E5E5E5"> your</font>

38
00:02:03,079 --> 00:02:08,600
<font color="#E5E5E5">bell read them on this screen you go to</font>

39
00:02:05,450 --> 00:02:11,750
the website owasp condos or lost about

40
00:02:08,600 --> 00:02:15,980
org you'll see it and there's a ton<font color="#CCCCCC"> of</font>

41
00:02:11,750 --> 00:02:18,200
them and there are very handy like I so

42
00:02:15,980 --> 00:02:20,179
that you can<font color="#CCCCCC"> install that have a bunch</font>

43
00:02:18,200 --> 00:02:22,880
of them pre installed and setup and very

44
00:02:20,180 --> 00:02:26,750
useful I<font color="#E5E5E5"> think we're now on the list i</font>

45
00:02:22,880 --> 00:02:28,160
think hackathons finally on there one of

46
00:02:26,750 --> 00:02:30,770
the things that<font color="#E5E5E5"> we see with all of these</font>

47
00:02:28,160 --> 00:02:34,790
apps is that they

48
00:02:30,770 --> 00:02:36,740
are really built for different purposes

49
00:02:34,790 --> 00:02:39,350
like web<font color="#E5E5E5"> goat was really built as a</font>

50
00:02:36,740 --> 00:02:41,990
teaching tool it kind of walks you

51
00:02:39,350 --> 00:02:44,239
through learning how to hack a web app

52
00:02:41,990 --> 00:02:47,450
and that's really its design it's not

53
00:02:44,240 --> 00:02:48,740
really useful for testing like automated

54
00:02:47,450 --> 00:02:50,079
scanners because it's not really built

55
00:02:48,740 --> 00:02:55,430
that way but it's great for teaching

56
00:02:50,080 --> 00:02:57,470
damn vulnerable web app really is a

57
00:02:55,430 --> 00:02:59,210
decent test app but I think it's more

58
00:02:57,470 --> 00:03:01,010
popular<font color="#E5E5E5"> because of its name than</font>

59
00:02:59,210 --> 00:03:05,180
anything else but it's actually<font color="#E5E5E5"> pretty</font>

60
00:03:01,010 --> 00:03:07,250
useful<font color="#CCCCCC"> hack me bank casino books those</font>

61
00:03:05,180 --> 00:03:10,850
are all the guild found stone team built

62
00:03:07,250 --> 00:03:14,000
those actually I<font color="#CCCCCC"> think we were building</font>

63
00:03:10,850 --> 00:03:15,260
those when I was<font color="#E5E5E5"> still there but those</font>

64
00:03:14,000 --> 00:03:17,510
are all written in various languages

65
00:03:15,260 --> 00:03:19,010
they're all old school looking apps they

66
00:03:17,510 --> 00:03:23,959
look like stuff<font color="#E5E5E5"> that was built in</font><font color="#CCCCCC"> the</font>

67
00:03:19,010 --> 00:03:26,329
90s right these are all very<font color="#CCCCCC"> good tools</font>

68
00:03:23,960 --> 00:03:31,160
each of them are have very good uses a

69
00:03:26,330 --> 00:03:35,090
wave<font color="#CCCCCC"> step was built for Shh ends testing</font>

70
00:03:31,160 --> 00:03:36,290
that he was<font color="#E5E5E5"> doing he did the figure what</font>

71
00:03:35,090 --> 00:03:38,350
he called it what do you remember<font color="#E5E5E5"> the</font>

72
00:03:36,290 --> 00:03:40,700
<font color="#E5E5E5">name</font><font color="#CCCCCC"> of this the whatever Shh ends</font>

73
00:03:38,350 --> 00:03:43,459
<font color="#E5E5E5">tessie kind of compared all the scanners</font>

74
00:03:40,700 --> 00:03:46,310
against each other which was a<font color="#E5E5E5"> very nice</font>

75
00:03:43,459 --> 00:03:48,170
project heck of amount of work to build

76
00:03:46,310 --> 00:03:50,030
that had to build a tool that he could

77
00:03:48,170 --> 00:03:52,670
run<font color="#E5E5E5"> all a web app that he could run all</font>

78
00:03:50,030 --> 00:03:54,700
the scanners against the<font color="#CCCCCC"> see which ones</font>

79
00:03:52,670 --> 00:03:58,910
would<font color="#CCCCCC"> fine which phones but it's a very</font>

80
00:03:54,700 --> 00:04:00,470
simplistic looking app it looks like<font color="#E5E5E5"> you</font>

81
00:03:58,910 --> 00:04:02,000
know standard web one point<font color="#CCCCCC"> o stuff</font>

82
00:04:00,470 --> 00:04:05,390
there's<font color="#CCCCCC"> no there's very little</font>

83
00:04:02,000 --> 00:04:07,670
JavaScript no ajax just kind of a very

84
00:04:05,390 --> 00:04:09,440
flat app it's like if you get to this

85
00:04:07,670 --> 00:04:11,750
page<font color="#CCCCCC"> and you find</font><font color="#E5E5E5"> that you know your</font>

86
00:04:09,440 --> 00:04:14,810
attack payload<font color="#E5E5E5"> finds</font><font color="#CCCCCC"> the ball and great</font>

87
00:04:11,750 --> 00:04:16,608
but it's not<font color="#E5E5E5"> really testing the ability</font>

88
00:04:14,810 --> 00:04:19,040
to crawl<font color="#CCCCCC"> and navigate through these</font>

89
00:04:16,608 --> 00:04:22,520
applications with it was kind of

90
00:04:19,040 --> 00:04:26,230
intended to test that the test the

91
00:04:22,520 --> 00:04:30,320
curling capabilities<font color="#CCCCCC"> is</font><font color="#E5E5E5"> kind of like a</font>

92
00:04:26,230 --> 00:04:32,210
<font color="#E5E5E5">JavaScript gauntlet if you will and and</font>

93
00:04:30,320 --> 00:04:34,040
it's very useful but the it's very<font color="#CCCCCC"> easy</font>

94
00:04:32,210 --> 00:04:36,169
to cheat on that one which was the

95
00:04:34,040 --> 00:04:38,570
bummer it's every basically if you get

96
00:04:36,169 --> 00:04:40,229
to<font color="#E5E5E5"> the page then it records that you've</font>

97
00:04:38,570 --> 00:04:42,500
got<font color="#E5E5E5"> there and</font>

98
00:04:40,230 --> 00:04:44,790
you get<font color="#CCCCCC"> credit for it right so anybody</font>

99
00:04:42,500 --> 00:04:47,120
building a tool could just<font color="#E5E5E5"> Co with it</font>

100
00:04:44,790 --> 00:04:51,090
BAM I'll just find this I actually

101
00:04:47,120 --> 00:04:53,550
contribute back to the project some code

102
00:04:51,090 --> 00:04:55,650
that actually will randomize those

103
00:04:53,550 --> 00:04:59,670
<font color="#CCCCCC">endpoint names so that it's a lot harder</font>

104
00:04:55,650 --> 00:05:02,370
to cheat but anyway the point of each of

105
00:04:59,670 --> 00:05:03,900
these are very isolated<font color="#E5E5E5"> they're very</font>

106
00:05:02,370 --> 00:05:07,590
useful tools they're good for what

107
00:05:03,900 --> 00:05:09,950
they're doing but they are limited

108
00:05:07,590 --> 00:05:12,450
because they're really designed around

109
00:05:09,950 --> 00:05:15,750
classic web we're really<font color="#E5E5E5"> designed around</font>

110
00:05:12,450 --> 00:05:17,670
<font color="#CCCCCC">the old style of development there's no</font>

111
00:05:15,750 --> 00:05:19,650
real dynamic nature to these

112
00:05:17,670 --> 00:05:21,600
applications like we see in the apps

113
00:05:19,650 --> 00:05:23,580
that<font color="#E5E5E5"> we have to test all right</font>

114
00:05:21,600 --> 00:05:27,780
developers are building much more

115
00:05:23,580 --> 00:05:29,669
dynamic applications and there's a lot

116
00:05:27,780 --> 00:05:31,710
of new content there's a lot of Ajax

117
00:05:29,670 --> 00:05:34,200
activity going on<font color="#CCCCCC"> it saps arrest</font>

118
00:05:31,710 --> 00:05:37,229
interfaces and we<font color="#CCCCCC"> don't see that in</font>

119
00:05:34,200 --> 00:05:40,620
these test apps so it<font color="#E5E5E5"> really limits our</font>

120
00:05:37,230 --> 00:05:42,480
ability for people to test tools and see

121
00:05:40,620 --> 00:05:44,460
how the quality of the tool but even<font color="#E5E5E5"> to</font>

122
00:05:42,480 --> 00:05:47,120
learn like to practice against a

123
00:05:44,460 --> 00:05:49,349
vulnerable app and against these

124
00:05:47,120 --> 00:05:52,350
environments right so there's a lot of

125
00:05:49,350 --> 00:05:53,880
limitations that I see so<font color="#CCCCCC"> let's talk a</font>

126
00:05:52,350 --> 00:05:55,620
little bit about that changing landscape

127
00:05:53,880 --> 00:05:58,590
and what it actually looks like all

128
00:05:55,620 --> 00:06:02,880
right we're all used to the classic you

129
00:05:58,590 --> 00:06:04,080
know HTTP<font color="#E5E5E5"> requests we should be it is a</font>

130
00:06:02,880 --> 00:06:06,690
little scary<font color="#CCCCCC"> sometimes I run into</font>

131
00:06:04,080 --> 00:06:09,210
environments especially web developers

132
00:06:06,690 --> 00:06:10,980
and like you know that web developers

133
00:06:09,210 --> 00:06:14,280
have never even<font color="#CCCCCC"> seen their HTTP traffic</font>

134
00:06:10,980 --> 00:06:15,870
which is insane but we're used to the

135
00:06:14,280 --> 00:06:17,609
kind<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> classic model</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the</font>

136
00:06:15,870 --> 00:06:19,980
old name and value pair structure of

137
00:06:17,610 --> 00:06:21,210
standard gettin posts now that's what

138
00:06:19,980 --> 00:06:23,280
we'd been doing<font color="#E5E5E5"> for a long long time</font>

139
00:06:21,210 --> 00:06:25,919
that's how all the tools are really

140
00:06:23,280 --> 00:06:28,169
built was around this model so all of

141
00:06:25,920 --> 00:06:32,280
your pen testing tools are very

142
00:06:28,170 --> 00:06:34,140
comfortable<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this but as we've kind</font>

143
00:06:32,280 --> 00:06:35,940
of moved forward you know the tools

144
00:06:34,140 --> 00:06:38,219
being able to attack this is very easy

145
00:06:35,940 --> 00:06:40,380
very simple for example model to you

146
00:06:38,220 --> 00:06:43,410
know<font color="#CCCCCC"> plug in attacking</font><font color="#E5E5E5"> the value and</font>

147
00:06:40,380 --> 00:06:45,300
seeing<font color="#E5E5E5"> a bit work but what we</font><font color="#CCCCCC"> see is</font>

148
00:06:43,410 --> 00:06:46,590
that that works<font color="#E5E5E5"> these tools that are</font>

149
00:06:45,300 --> 00:06:49,050
built around that are good they can

150
00:06:46,590 --> 00:06:50,820
crawl that application they can go

151
00:06:49,050 --> 00:06:51,800
through that find all the links find the

152
00:06:50,820 --> 00:06:54,420
forms

153
00:06:51,800 --> 00:06:56,670
understand how to crawl them and kind<font color="#E5E5E5"> of</font>

154
00:06:54,420 --> 00:06:58,500
you know then inject the attack payloads

155
00:06:56,670 --> 00:07:02,310
it's kind of a classic web scanner works

156
00:06:58,500 --> 00:07:04,410
all the<font color="#E5E5E5"> tools are doing that what we see</font>

157
00:07:02,310 --> 00:07:06,870
is that<font color="#E5E5E5"> the landscape has been changing</font>

158
00:07:04,410 --> 00:07:08,880
dramatically there's no longer just

159
00:07:06,870 --> 00:07:12,540
these flat HTML files you've got a lot

160
00:07:08,880 --> 00:07:15,270
of dynamic content a<font color="#CCCCCC"> lot of Ajax</font>

161
00:07:12,540 --> 00:07:17,970
activity Ajax really causes crawling to

162
00:07:15,270 --> 00:07:20,640
be a nightmare automated discovery of

163
00:07:17,970 --> 00:07:23,310
<font color="#E5E5E5">what's on your application because it's</font>

164
00:07:20,640 --> 00:07:26,580
kind<font color="#CCCCCC"> of analogous to that the maze in</font>

165
00:07:23,310 --> 00:07:28,560
<font color="#CCCCCC">the labyrinth movie where as you're</font>

166
00:07:26,580 --> 00:07:30,510
navigating through it it's changing and

167
00:07:28,560 --> 00:07:32,340
it's moving<font color="#E5E5E5"> and that's kind of you know</font>

168
00:07:30,510 --> 00:07:35,159
crawling Ajax can be a real difficult

169
00:07:32,340 --> 00:07:37,950
thing and so seeing that in live

170
00:07:35,160 --> 00:07:40,850
applications and not being able to find

171
00:07:37,950 --> 00:07:42,930
bones in there becomes a real problem

172
00:07:40,850 --> 00:07:44,910
part of it is that you know it's not

173
00:07:42,930 --> 00:07:47,700
just HTML based it's not just the

174
00:07:44,910 --> 00:07:49,890
dynamic nature those Ajax apps work that

175
00:07:47,700 --> 00:07:52,229
way because they're turning<font color="#CCCCCC"> around and</font>

176
00:07:49,890 --> 00:07:54,390
making restful calls to the backend<font color="#E5E5E5"> and</font>

177
00:07:52,230 --> 00:07:55,890
getting new content and then changing

178
00:07:54,390 --> 00:07:59,039
what they are showing so the page isn't

179
00:07:55,890 --> 00:08:00,330
necessarily reloading on a new URL it's

180
00:07:59,040 --> 00:08:02,790
just<font color="#E5E5E5"> going and getting something and</font>

181
00:08:00,330 --> 00:08:04,169
then bringing it back and<font color="#CCCCCC"> you have to</font><font color="#E5E5E5"> be</font>

182
00:08:02,790 --> 00:08:06,060
able to handle<font color="#E5E5E5"> the format</font><font color="#CCCCCC"> that you have</font>

183
00:08:04,170 --> 00:08:07,110
to handle that communication when you're

184
00:08:06,060 --> 00:08:08,520
when you're understanding when you're

185
00:08:07,110 --> 00:08:10,440
starting to<font color="#E5E5E5"> attack these apps and you</font>

186
00:08:08,520 --> 00:08:12,719
got<font color="#CCCCCC"> to see what's going</font><font color="#E5E5E5"> on even</font><font color="#CCCCCC"> if your</font>

187
00:08:10,440 --> 00:08:15,300
manual you doing pen testing you have to

188
00:08:12,720 --> 00:08:18,480
get comfortable<font color="#E5E5E5"> with all of this what we</font>

189
00:08:15,300 --> 00:08:21,540
see a lot<font color="#E5E5E5"> of it is rest we hear rest all</font>

190
00:08:18,480 --> 00:08:24,570
the time rest is not a standard it's

191
00:08:21,540 --> 00:08:27,720
really<font color="#E5E5E5"> kind of a way it's a you know</font>

192
00:08:24,570 --> 00:08:29,820
it's a style JSON is one of the very

193
00:08:27,720 --> 00:08:32,670
popular restful format so we'll get<font color="#CCCCCC"> into</font>

194
00:08:29,820 --> 00:08:34,559
the most but you can see rest in a lot

195
00:08:32,669 --> 00:08:37,079
<font color="#CCCCCC">of different ways we can see it kind of</font>

196
00:08:34,559 --> 00:08:40,978
on the URL structure like on<font color="#E5E5E5"> top you can</font>

197
00:08:37,080 --> 00:08:44,730
see xml json now we should<font color="#E5E5E5"> see some flak</font>

198
00:08:40,979 --> 00:08:47,010
flak amf from flash and floods apps but

199
00:08:44,730 --> 00:08:48,540
those are kind of waning google web

200
00:08:47,010 --> 00:08:51,300
toolkit there's a lot<font color="#CCCCCC"> of different</font>

201
00:08:48,540 --> 00:08:53,910
<font color="#E5E5E5">formats that will see the data in and so</font>

202
00:08:51,300 --> 00:08:56,160
as testers as people that need to use

203
00:08:53,910 --> 00:08:57,120
tools you have to make<font color="#CCCCCC"> sure that you are</font>

204
00:08:56,160 --> 00:09:01,500
comfortable<font color="#E5E5E5"> with all these different</font>

205
00:08:57,120 --> 00:09:03,300
formats and there's also mixes rest will

206
00:09:01,500 --> 00:09:04,590
mix things up sometimes you'll send<font color="#E5E5E5"> XML</font>

207
00:09:03,300 --> 00:09:07,140
and get CSVs

208
00:09:04,590 --> 00:09:08,580
back right it developer building that

209
00:09:07,140 --> 00:09:10,650
rest api is doing whatever the hell they

210
00:09:08,580 --> 00:09:12,870
want they<font color="#E5E5E5"> could do input can be</font>

211
00:09:10,650 --> 00:09:14,699
<font color="#E5E5E5">different from output I'll see standard</font>

212
00:09:12,870 --> 00:09:19,070
gets returning JSON that's pretty

213
00:09:14,700 --> 00:09:22,340
classic<font color="#CCCCCC"> we'll see that probably the</font><font color="#E5E5E5"> most</font>

214
00:09:19,070 --> 00:09:25,260
<font color="#CCCCCC">we'll see you know Google web toolkit</font>

215
00:09:22,340 --> 00:09:27,390
has like this pipe delimited format that

216
00:09:25,260 --> 00:09:31,230
it sends and it gets kind<font color="#E5E5E5"> of back a JSON</font>

217
00:09:27,390 --> 00:09:32,699
<font color="#CCCCCC">esque format that we see but</font><font color="#E5E5E5"> there's</font><font color="#CCCCCC"> a</font>

218
00:09:31,230 --> 00:09:36,480
lot of<font color="#E5E5E5"> these different formats JSON</font>

219
00:09:32,700 --> 00:09:39,690
again being the most popular JSON for

220
00:09:36,480 --> 00:09:42,900
those<font color="#CCCCCC"> that don't know is it was really</font>

221
00:09:39,690 --> 00:09:47,100
designed for<font color="#E5E5E5"> JavaScript and it's a</font>

222
00:09:42,900 --> 00:09:52,340
lightweight format so it's not as noisy

223
00:09:47,100 --> 00:09:56,460
as XML we have to have<font color="#CCCCCC"> end tag so simple</font>

224
00:09:52,340 --> 00:09:58,170
JSON that we see like here this<font color="#CCCCCC"> one is</font>

225
00:09:56,460 --> 00:10:00,240
actually a get parameter with a JSON

226
00:09:58,170 --> 00:10:02,250
string so input<font color="#CCCCCC"> equals and then a JSON</font>

227
00:10:00,240 --> 00:10:04,500
<font color="#E5E5E5">string you could see it on the post data</font>

228
00:10:02,250 --> 00:10:07,020
we'll see a lot of these very simplistic

229
00:10:04,500 --> 00:10:10,590
versions and a lot of<font color="#E5E5E5"> times people think</font>

230
00:10:07,020 --> 00:10:12,750
oh well I could take something like this

231
00:10:10,590 --> 00:10:15,720
the simple example and I'm kind of a

232
00:10:12,750 --> 00:10:17,940
know mentally convert those name and

233
00:10:15,720 --> 00:10:20,340
value<font color="#CCCCCC"> no the</font><font color="#E5E5E5"> JSON into name and value</font>

234
00:10:17,940 --> 00:10:22,740
pairs and we see a lot<font color="#E5E5E5"> of tools actually</font>

235
00:10:20,340 --> 00:10:24,750
try<font color="#E5E5E5"> to do that I've seen some like</font>

236
00:10:22,740 --> 00:10:26,520
commercial scanners actually try to do

237
00:10:24,750 --> 00:10:28,920
this where they'll take a very simple

238
00:10:26,520 --> 00:10:30,180
JSON string and convert it internally

239
00:10:28,920 --> 00:10:32,370
into name and value pairs because that's

240
00:10:30,180 --> 00:10:36,300
how they're the<font color="#CCCCCC"> whole tool was built</font>

241
00:10:32,370 --> 00:10:37,620
right as on<font color="#CCCCCC"> that flat model the problem</font>

242
00:10:36,300 --> 00:10:39,750
is that<font color="#E5E5E5"> sometimes they'll try to then</font>

243
00:10:37,620 --> 00:10:42,600
deliver an attack and then<font color="#E5E5E5"> convert back</font>

244
00:10:39,750 --> 00:10:45,240
into JSON and they<font color="#E5E5E5"> don't understand the</font>

245
00:10:42,600 --> 00:10:48,420
format properly so then they fail and so

246
00:10:45,240 --> 00:10:50,610
like this one here<font color="#CCCCCC"> is missing quotes</font>

247
00:10:48,420 --> 00:10:52,709
around the shirt single quote one or one

248
00:10:50,610 --> 00:10:54,030
so it actually wouldn't<font color="#E5E5E5"> work the JSON</font>

249
00:10:52,710 --> 00:10:58,470
<font color="#E5E5E5">parser would throw it out because it's</font>

250
00:10:54,030 --> 00:11:00,360
not<font color="#E5E5E5"> going to parse so what we see is we</font>

251
00:10:58,470 --> 00:11:02,940
need tools that can actually<font color="#E5E5E5"> convert it</font>

252
00:11:00,360 --> 00:11:05,790
properly because JSON isn't just simple

253
00:11:02,940 --> 00:11:07,350
it's not just usually used for that

254
00:11:05,790 --> 00:11:10,099
model if you're using<font color="#E5E5E5"> JSON it's because</font>

255
00:11:07,350 --> 00:11:12,480
you have complex data to be dealing<font color="#CCCCCC"> with</font>

256
00:11:10,100 --> 00:11:14,850
one of<font color="#E5E5E5"> the nice features with JSON is</font>

257
00:11:12,480 --> 00:11:16,880
that is it<font color="#CCCCCC"> does support complex data</font>

258
00:11:14,850 --> 00:11:19,520
structures so you have lists and lists

259
00:11:16,880 --> 00:11:21,200
and you're passing these things in and

260
00:11:19,520 --> 00:11:24,079
it's very nice to<font color="#E5E5E5"> like XML where you can</font>

261
00:11:21,200 --> 00:11:26,300
have nested data so when you start

262
00:11:24,080 --> 00:11:28,850
dealing with that that model of kind of

263
00:11:26,300 --> 00:11:30,319
converting breaks down and what we<font color="#E5E5E5"> see</font>

264
00:11:28,850 --> 00:11:31,940
with a lot<font color="#CCCCCC"> of the tools out there is</font>

265
00:11:30,320 --> 00:11:33,650
that they don't know what to<font color="#E5E5E5"> do anymore</font>

266
00:11:31,940 --> 00:11:35,840
<font color="#E5E5E5">they don't</font><font color="#CCCCCC"> know how to parse this whole</font>

267
00:11:33,650 --> 00:11:37,220
thing it's not<font color="#E5E5E5"> simple and so then</font>

268
00:11:35,840 --> 00:11:38,780
they'll just like deliver their attack

269
00:11:37,220 --> 00:11:40,010
payload at the end of<font color="#E5E5E5"> the string or</font>

270
00:11:38,780 --> 00:11:42,949
something they'll just take it as one

271
00:11:40,010 --> 00:11:45,740
big blob of text and then the attack is

272
00:11:42,950 --> 00:11:47,860
useless<font color="#E5E5E5"> because it's being delivered you</font>

273
00:11:45,740 --> 00:11:49,970
know after<font color="#CCCCCC"> the parser is basically done</font>

274
00:11:47,860 --> 00:11:52,670
you want to be able to hat make sure

275
00:11:49,970 --> 00:11:55,580
that your tools can and in yourself as

276
00:11:52,670 --> 00:11:56,959
your pen testing can dig in deeper and

277
00:11:55,580 --> 00:11:59,120
<font color="#CCCCCC">say</font><font color="#E5E5E5"> okay I need to</font><font color="#CCCCCC"> look at each</font>

278
00:11:56,960 --> 00:12:01,850
individual parameter within this<font color="#E5E5E5"> very</font>

279
00:11:59,120 --> 00:12:04,730
large<font color="#E5E5E5"> data set and attacked each one of</font>

280
00:12:01,850 --> 00:12:06,590
these<font color="#CCCCCC"> parameters individually these are</font>

281
00:12:04,730 --> 00:12:07,730
things that you<font color="#E5E5E5"> need your tools to do is</font>

282
00:12:06,590 --> 00:12:10,010
the sort of thing<font color="#E5E5E5"> that we've done with</font>

283
00:12:07,730 --> 00:12:11,600
ours with<font color="#CCCCCC"> app spiders we can handle</font><font color="#E5E5E5"> all</font>

284
00:12:10,010 --> 00:12:14,030
this sort of thing we can handle<font color="#E5E5E5"> these</font>

285
00:12:11,600 --> 00:12:19,010
different formats and understand those

286
00:12:14,030 --> 00:12:21,680
complex data structures there are some

287
00:12:19,010 --> 00:12:23,569
other oddities you know and this isn't

288
00:12:21,680 --> 00:12:25,310
<font color="#CCCCCC">just JSON you could do this to you know</font>

289
00:12:23,570 --> 00:12:27,830
even<font color="#CCCCCC"> a MF which again isn't used as much</font>

290
00:12:25,310 --> 00:12:29,660
but with AMF its it's actually like

291
00:12:27,830 --> 00:12:34,010
objects that are being passed so it

292
00:12:29,660 --> 00:12:35,540
looks like binary and so you'll<font color="#E5E5E5"> see this</font>

293
00:12:34,010 --> 00:12:37,750
from time to time in<font color="#E5E5E5"> various apps</font>

294
00:12:35,540 --> 00:12:42,170
various services that<font color="#E5E5E5"> you're doing</font>

295
00:12:37,750 --> 00:12:43,730
especially as you're dealing with rest

296
00:12:42,170 --> 00:12:47,000
interfaces that are used by thick

297
00:12:43,730 --> 00:12:48,620
clients in some cases have some gaming

298
00:12:47,000 --> 00:12:50,480
companies that have their own custom

299
00:12:48,620 --> 00:12:53,930
formats that they're<font color="#CCCCCC"> using it's still</font>

300
00:12:50,480 --> 00:12:55,400
all going over HTTP but the data sets

301
00:12:53,930 --> 00:12:57,380
different and so you need to<font color="#E5E5E5"> make sure</font>

302
00:12:55,400 --> 00:12:59,600
your tools can parse those and analyze

303
00:12:57,380 --> 00:13:01,700
them and so when you get into some<font color="#E5E5E5"> of</font>

304
00:12:59,600 --> 00:13:03,290
those weird custom situations which I

305
00:13:01,700 --> 00:13:07,670
<font color="#CCCCCC">don't want to</font><font color="#E5E5E5"> get into too deeply here</font>

306
00:13:03,290 --> 00:13:09,079
<font color="#CCCCCC">okay so let's</font><font color="#E5E5E5"> talk a little bit about</font>

307
00:13:07,670 --> 00:13:12,349
hack is on how this kind<font color="#E5E5E5"> of starts</font>

308
00:13:09,080 --> 00:13:16,420
playing into these environments and what

309
00:13:12,350 --> 00:13:19,970
it offers as i mentioned hack is on is a

310
00:13:16,420 --> 00:13:22,219
modern looking vulnerable test app it

311
00:13:19,970 --> 00:13:25,070
looks like<font color="#CCCCCC"> an e-commerce site so it's</font>

312
00:13:22,220 --> 00:13:28,070
why attack is on all right so it<font color="#CCCCCC"> looks</font>

313
00:13:25,070 --> 00:13:29,630
like<font color="#E5E5E5"> a little online storefront it's got</font>

314
00:13:28,070 --> 00:13:30,590
lots of little elements all over the

315
00:13:29,630 --> 00:13:33,610
place it's a

316
00:13:30,590 --> 00:13:37,550
it uses very modern you know client

317
00:13:33,610 --> 00:13:40,430
frameworks to<font color="#CCCCCC"> kind of give it</font><font color="#E5E5E5"> a modern</font>

318
00:13:37,550 --> 00:13:42,650
<font color="#E5E5E5">look and feel it's pretty easy to</font>

319
00:13:40,430 --> 00:13:48,140
install it runs on PHP so a simple lamp

320
00:13:42,650 --> 00:13:50,630
stack works it also has a mobile

321
00:13:48,140 --> 00:13:53,319
companion client because it has rest api

322
00:13:50,630 --> 00:13:56,000
s2 it has some that it's using for the

323
00:13:53,320 --> 00:13:57,920
HX activity but it also has just a

324
00:13:56,000 --> 00:14:03,020
standard API we built a mobile client

325
00:13:57,920 --> 00:14:05,750
that goes along with it that lets you

326
00:14:03,020 --> 00:14:08,120
see traffic<font color="#CCCCCC"> go into that API and so in</font>

327
00:14:05,750 --> 00:14:10,190
that API has vulnerabilities as well so

328
00:14:08,120 --> 00:14:13,540
you can<font color="#E5E5E5"> see how that actually works I do</font>

329
00:14:10,190 --> 00:14:16,490
a lot of mobile testing and to me

330
00:14:13,540 --> 00:14:19,969
there's a lot of<font color="#CCCCCC"> people building tools</font>

331
00:14:16,490 --> 00:14:22,280
to test the mobile clients and for the

332
00:14:19,970 --> 00:14:24,110
most part those mobile endpoints aren't

333
00:14:22,280 --> 00:14:26,630
that interesting and I don't really<font color="#E5E5E5"> want</font>

334
00:14:24,110 --> 00:14:27,530
<font color="#E5E5E5">to attack that way because I don't</font><font color="#CCCCCC"> want</font>

335
00:14:26,630 --> 00:14:29,840
to<font color="#E5E5E5"> have to deal with attacking</font>

336
00:14:27,530 --> 00:14:32,329
individual people that's too hard if I

337
00:14:29,840 --> 00:14:34,550
learn what API calls<font color="#CCCCCC"> this more black as</font>

338
00:14:32,330 --> 00:14:36,200
making and I can go target<font color="#E5E5E5"> that back end</font>

339
00:14:34,550 --> 00:14:37,939
that's where all the data is at that's

340
00:14:36,200 --> 00:14:40,160
<font color="#E5E5E5">the</font><font color="#CCCCCC"> gold so that's what I want to</font>

341
00:14:37,940 --> 00:14:42,040
practice testing against and that's what

342
00:14:40,160 --> 00:14:44,329
I haven't<font color="#E5E5E5"> really seen a lot of</font>

343
00:14:42,040 --> 00:14:46,819
environments for people to practice but

344
00:14:44,330 --> 00:14:52,610
<font color="#E5E5E5">you can practicing is hack is on so like</font>

345
00:14:46,820 --> 00:14:54,500
<font color="#E5E5E5">I said it runs on a simple lamp stack we</font>

346
00:14:52,610 --> 00:14:55,850
have it hosted as well so if you<font color="#E5E5E5"> just</font>

347
00:14:54,500 --> 00:14:57,230
want to<font color="#E5E5E5"> go to this URL you can actually</font>

348
00:14:55,850 --> 00:15:01,010
see the app<font color="#E5E5E5"> and start playing with it</font>

349
00:14:57,230 --> 00:15:04,490
yourself<font color="#E5E5E5"> we reset it on a pretty regular</font>

350
00:15:01,010 --> 00:15:06,890
basis because it gets destroyed and you

351
00:15:04,490 --> 00:15:09,080
<font color="#E5E5E5">can download the apk it's all available</font>

352
00:15:06,890 --> 00:15:11,410
on github as well that's an open<font color="#E5E5E5"> source</font>

353
00:15:09,080 --> 00:15:13,610
project we're looking<font color="#E5E5E5"> for contributors</font>

354
00:15:11,410 --> 00:15:16,040
but we've been kind of just keep going

355
00:15:13,610 --> 00:15:18,740
we're building into it it's<font color="#E5E5E5"> pretty</font>

356
00:15:16,040 --> 00:15:22,370
simple to set up pretty simple<font color="#E5E5E5"> to get</font>

357
00:15:18,740 --> 00:15:24,350
going you know it's got<font color="#E5E5E5"> a nice little</font>

358
00:15:22,370 --> 00:15:25,310
config wizard like an installation

359
00:15:24,350 --> 00:15:27,290
wizard<font color="#E5E5E5"> they're kind of gets your</font>

360
00:15:25,310 --> 00:15:31,369
database setup just<font color="#E5E5E5"> like any other app</font>

361
00:15:27,290 --> 00:15:33,740
generally like I said the features it

362
00:15:31,370 --> 00:15:36,400
has a standard some some HTML some

363
00:15:33,740 --> 00:15:40,040
standard HTML but has some<font color="#E5E5E5"> Ajax activity</font>

364
00:15:36,400 --> 00:15:43,220
mostly XML and JSON there are portions

365
00:15:40,040 --> 00:15:44,150
with the google web toolkit libraries so

366
00:15:43,220 --> 00:15:47,090
we've kind<font color="#E5E5E5"> of scattered</font>

367
00:15:44,150 --> 00:15:49,490
or different technology so pieces of it

368
00:15:47,090 --> 00:15:52,460
are using jQuery some of its using

369
00:15:49,490 --> 00:15:54,620
google web toolkit way except flash an

370
00:15:52,460 --> 00:15:56,180
amf going on there where you enter your

371
00:15:54,620 --> 00:15:59,000
coupon<font color="#CCCCCC"> code is actually a little</font><font color="#E5E5E5"> flash</font>

372
00:15:56,180 --> 00:16:00,469
applet that runs and you enter your

373
00:15:59,000 --> 00:16:04,040
coupon<font color="#CCCCCC"> code and of course that's using a</font>

374
00:16:00,470 --> 00:16:08,810
MF and you can start stealing coupon

375
00:16:04,040 --> 00:16:11,060
codes through that it also has strict

376
00:16:08,810 --> 00:16:12,410
workflows and sequences which<font color="#E5E5E5"> I'm going</font>

377
00:16:11,060 --> 00:16:14,060
<font color="#E5E5E5">to talk about here and the</font>

378
00:16:12,410 --> 00:16:16,100
vulnerabilities are also configurable

379
00:16:14,060 --> 00:16:17,810
which is kind of interesting so you can

380
00:16:16,100 --> 00:16:20,240
<font color="#E5E5E5">actually if you were to like set up a</font>

381
00:16:17,810 --> 00:16:23,239
classroom<font color="#CCCCCC"> environment or your testing</font>

382
00:16:20,240 --> 00:16:26,060
tools you can actually enable or disable

383
00:16:23,240 --> 00:16:29,150
how everyone look<font color="#E5E5E5"> at it vote different</font>

384
00:16:26,060 --> 00:16:30,709
vulnerabilities on each install so we've

385
00:16:29,150 --> 00:16:32,090
used it in some training sessions and

386
00:16:30,710 --> 00:16:33,830
<font color="#E5E5E5">it's really fun you you know will enable</font>

387
00:16:32,090 --> 00:16:35,780
a few bones on each system that are

388
00:16:33,830 --> 00:16:37,370
<font color="#E5E5E5">different and tell</font><font color="#CCCCCC"> them go we'll try to</font>

389
00:16:35,780 --> 00:16:39,199
find<font color="#E5E5E5"> them so it can't be like hey</font>

390
00:16:37,370 --> 00:16:42,200
where'd you find this cuz everybody's is

391
00:16:39,200 --> 00:16:44,330
different all right but we've made it

392
00:16:42,200 --> 00:16:46,520
configurable in part also so<font color="#CCCCCC"> that if</font>

393
00:16:44,330 --> 00:16:47,750
you're using it to test<font color="#E5E5E5"> tools so if</font>

394
00:16:46,520 --> 00:16:50,750
you're<font color="#E5E5E5"> using it to test an automated</font>

395
00:16:47,750 --> 00:16:52,970
scanner you know if you're<font color="#CCCCCC"> not using</font>

396
00:16:50,750 --> 00:16:54,650
google web toolkit turn off the bones

397
00:16:52,970 --> 00:16:57,500
there because of<font color="#CCCCCC"> those don't matter to</font>

398
00:16:54,650 --> 00:16:59,900
you anymore right it gives you some

399
00:16:57,500 --> 00:17:01,280
flexibility to play with it that way so

400
00:16:59,900 --> 00:17:02,870
let's go<font color="#CCCCCC"> back here the strict workflows</font>

401
00:17:01,280 --> 00:17:05,930
for a second this is<font color="#E5E5E5"> another interesting</font>

402
00:17:02,870 --> 00:17:08,660
feature that we don't<font color="#E5E5E5"> really see with</font>

403
00:17:05,930 --> 00:17:10,880
mostly<font color="#E5E5E5"> other tools and but that we see</font>

404
00:17:08,660 --> 00:17:12,860
in real life<font color="#E5E5E5"> that you need that</font><font color="#CCCCCC"> pen</font>

405
00:17:10,880 --> 00:17:14,330
testers worry about and deal with but

406
00:17:12,859 --> 00:17:17,889
automated tools also need to<font color="#E5E5E5"> deal with</font>

407
00:17:14,329 --> 00:17:20,419
<font color="#E5E5E5">and that is these application workflows</font>

408
00:17:17,890 --> 00:17:22,070
when<font color="#CCCCCC"> I talk about</font><font color="#E5E5E5"> here and i'll use the</font>

409
00:17:20,420 --> 00:17:25,610
shopping cart example this<font color="#E5E5E5"> is what we</font>

410
00:17:22,069 --> 00:17:27,889
have<font color="#E5E5E5"> on hack is on is that there is</font>

411
00:17:25,609 --> 00:17:30,139
often a process you go through to get

412
00:17:27,890 --> 00:17:31,940
through a transaction<font color="#CCCCCC"> alright so in this</font>

413
00:17:30,140 --> 00:17:33,980
case you add an item to<font color="#E5E5E5"> the cart you</font>

414
00:17:31,940 --> 00:17:35,420
view your cart<font color="#E5E5E5"> you hit check out you</font>

415
00:17:33,980 --> 00:17:36,740
give your shipping info your billing

416
00:17:35,420 --> 00:17:38,840
info you confirm your<font color="#CCCCCC"> order and</font><font color="#E5E5E5"> you get</font>

417
00:17:36,740 --> 00:17:43,040
a receipt<font color="#E5E5E5"> pretty standard right this</font>

418
00:17:38,840 --> 00:17:45,740
very normal the problem is that<font color="#CCCCCC"> most</font>

419
00:17:43,040 --> 00:17:49,639
tools out there and some silly pen

420
00:17:45,740 --> 00:17:51,830
testers will just start attacking in the

421
00:17:49,640 --> 00:17:53,440
middle of that effort so they may<font color="#CCCCCC"> just</font>

422
00:17:51,830 --> 00:17:56,330
start delivering attacks against<font color="#CCCCCC"> the</font>

423
00:17:53,440 --> 00:17:57,870
shipping information page but they

424
00:17:56,330 --> 00:17:59,580
haven't added anything to their cart

425
00:17:57,870 --> 00:18:01,409
right or whatever training they did

426
00:17:59,580 --> 00:18:03,149
before<font color="#E5E5E5"> is complete because they got to</font>

427
00:18:01,410 --> 00:18:06,330
the end they got to receive their cart

428
00:18:03,150 --> 00:18:08,460
empty again so they're no longer doing a

429
00:18:06,330 --> 00:18:10,260
useful attack because the application is

430
00:18:08,460 --> 00:18:12,300
going<font color="#E5E5E5"> to complain</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> you got no you</font>

431
00:18:10,260 --> 00:18:13,920
know no items in your cart go away a

432
00:18:12,300 --> 00:18:16,080
little<font color="#E5E5E5"> just redirect them back to the</font>

433
00:18:13,920 --> 00:18:19,590
front page but they don't<font color="#E5E5E5"> belong there</font>

434
00:18:16,080 --> 00:18:21,179
the session state doesn't accept them so

435
00:18:19,590 --> 00:18:24,000
you really<font color="#CCCCCC"> have to if you want to tack</font>

436
00:18:21,180 --> 00:18:26,670
step<font color="#E5E5E5"> 4 you need to set it up you need to</font>

437
00:18:24,000 --> 00:18:28,770
do a clean step<font color="#CCCCCC"> one two three then I can</font>

438
00:18:26,670 --> 00:18:32,040
deliver an attack against step 4 and I

439
00:18:28,770 --> 00:18:33,300
might see my phone a lot<font color="#E5E5E5"> of times</font>

440
00:18:32,040 --> 00:18:34,830
<font color="#CCCCCC">that'll work sometimes we're still going</font>

441
00:18:33,300 --> 00:18:37,200
to miss something because in many

442
00:18:34,830 --> 00:18:39,720
instances you're not going to see a

443
00:18:37,200 --> 00:18:42,179
volatile you're not going to<font color="#E5E5E5"> immediately</font>

444
00:18:39,720 --> 00:18:45,510
see you know the<font color="#E5E5E5"> the results of that</font>

445
00:18:42,179 --> 00:18:48,110
attack it may not<font color="#CCCCCC"> show up until you get</font>

446
00:18:45,510 --> 00:18:50,220
to the very end right maybe after you

447
00:18:48,110 --> 00:18:51,149
confirm<font color="#CCCCCC"> your order is actually when it's</font>

448
00:18:50,220 --> 00:18:53,190
going<font color="#E5E5E5"> to store the data into</font><font color="#CCCCCC"> the</font>

449
00:18:51,150 --> 00:18:56,490
database prior to<font color="#E5E5E5"> that it was all in</font>

450
00:18:53,190 --> 00:18:58,170
session state data right now of a sudden

451
00:18:56,490 --> 00:18:59,820
we see the bone well if you don't

452
00:18:58,170 --> 00:19:02,550
connect all those dots you're going to

453
00:18:59,820 --> 00:19:04,290
miss things right and so both human

454
00:19:02,550 --> 00:19:07,678
fantastic and automated tools need to

455
00:19:04,290 --> 00:19:10,320
process this with our tool we actually

456
00:19:07,679 --> 00:19:11,700
<font color="#CCCCCC">do have the ability to test this so you</font>

457
00:19:10,320 --> 00:19:13,460
can<font color="#CCCCCC"> actually it'll say I'm going</font><font color="#E5E5E5"> to text</font>

458
00:19:11,700 --> 00:19:15,540
up i'm going<font color="#CCCCCC"> to do step one two three</font>

459
00:19:13,460 --> 00:19:17,640
deliver an attack and then follow

460
00:19:15,540 --> 00:19:19,800
<font color="#E5E5E5">through sometimes we'll see it this way</font>

461
00:19:17,640 --> 00:19:21,750
sometimes you'll see it like cross-site

462
00:19:19,800 --> 00:19:22,889
scripting might work on you<font color="#CCCCCC"> know it</font>

463
00:19:21,750 --> 00:19:24,420
might reappear on the confirmation

464
00:19:22,890 --> 00:19:27,540
<font color="#E5E5E5">screens that's where</font><font color="#CCCCCC"> it's printing</font>

465
00:19:24,420 --> 00:19:30,780
everything back to you but we<font color="#CCCCCC"> have this</font>

466
00:19:27,540 --> 00:19:32,149
kind of workflow in hack is on so as

467
00:19:30,780 --> 00:19:35,670
you're going through the shopping cart

468
00:19:32,150 --> 00:19:38,040
the certain attacks only work properly

469
00:19:35,670 --> 00:19:39,840
you know<font color="#CCCCCC"> they'll only work if you do the</font>

470
00:19:38,040 --> 00:19:43,230
attack properly right<font color="#E5E5E5"> because they're</font>

471
00:19:39,840 --> 00:19:44,520
only not validating or<font color="#CCCCCC"> their you</font><font color="#E5E5E5"> know</font>

472
00:19:43,230 --> 00:19:46,860
the data is<font color="#CCCCCC"> only going to the database</font>

473
00:19:44,520 --> 00:19:48,720
at the confirms thing<font color="#E5E5E5"> it's it actually</font>

474
00:19:46,860 --> 00:19:51,360
is implemented that way because that

475
00:19:48,720 --> 00:19:53,280
stuff I've seen in real life right a lot

476
00:19:51,360 --> 00:19:56,189
of what hack is on is is intended to be

477
00:19:53,280 --> 00:20:00,210
is just replications of<font color="#CCCCCC"> real life</font>

478
00:19:56,190 --> 00:20:04,350
problem scenarios so it goes all the way

479
00:20:00,210 --> 00:20:05,880
<font color="#CCCCCC">through like I said it's configurable so</font>

480
00:20:04,350 --> 00:20:08,639
you can kind of go and pick and choose

481
00:20:05,880 --> 00:20:11,220
which attacks you want to enable getting

482
00:20:08,640 --> 00:20:12,090
into a little<font color="#E5E5E5"> bit of the weeds on</font>

483
00:20:11,220 --> 00:20:15,860
looks like the next slides a little

484
00:20:12,090 --> 00:20:19,049
messed up but it has different attacks

485
00:20:15,860 --> 00:20:21,000
getting into<font color="#E5E5E5"> the weeds a little bit you</font>

486
00:20:19,049 --> 00:20:24,080
can kind<font color="#CCCCCC"> of right now it's done through</font>

487
00:20:21,000 --> 00:20:26,220
config files like enabling and disabling

488
00:20:24,080 --> 00:20:27,449
one of our developers is building a

489
00:20:26,220 --> 00:20:31,470
little<font color="#E5E5E5"> tool that will make it</font><font color="#CCCCCC"> very easy</font>

490
00:20:27,450 --> 00:20:33,510
to kind<font color="#E5E5E5"> of like randomized as well but</font>

491
00:20:31,470 --> 00:20:35,190
<font color="#E5E5E5">you kind of go in there and decide</font>

492
00:20:33,510 --> 00:20:37,530
what's going to be vulnerable and what's

493
00:20:35,190 --> 00:20:39,059
not so like<font color="#E5E5E5"> this one here we we hadn't</font>

494
00:20:37,530 --> 00:20:41,100
said the contact name is vulnerable and

495
00:20:39,059 --> 00:20:42,658
so you'll end up seeing<font color="#CCCCCC"> you know when</font>

496
00:20:41,100 --> 00:20:46,709
you attack the contact name middle<font color="#E5E5E5"> it'll</font>

497
00:20:42,659 --> 00:20:49,350
<font color="#E5E5E5">be vulnerable some of them also give you</font>

498
00:20:46,710 --> 00:20:50,429
the ability to pick which attacks so you

499
00:20:49,350 --> 00:20:52,289
<font color="#CCCCCC">can</font><font color="#E5E5E5"> decide</font><font color="#CCCCCC"> if it's cross-site scripting</font>

500
00:20:50,429 --> 00:20:54,000
or you know and if it's going<font color="#E5E5E5"> to be like</font>

501
00:20:52,289 --> 00:20:55,980
persistent cross-site scripting so we're

502
00:20:54,000 --> 00:20:59,340
going to save this data and then you'll

503
00:20:55,980 --> 00:21:01,650
see that later we're doing that for<font color="#E5E5E5"> like</font>

504
00:20:59,340 --> 00:21:03,240
the product review system so when you

505
00:21:01,650 --> 00:21:04,980
review one of the products<font color="#E5E5E5"> in there you</font>

506
00:21:03,240 --> 00:21:07,530
know again it's kind of like an Amazon

507
00:21:04,980 --> 00:21:10,700
right so you review a product that will

508
00:21:07,530 --> 00:21:12,830
stay persistent for a period of time and

509
00:21:10,700 --> 00:21:15,059
so then you can see<font color="#CCCCCC"> that it's persistent</font>

510
00:21:12,830 --> 00:21:17,070
and the way we have<font color="#CCCCCC"> it here and I don't</font>

511
00:21:15,059 --> 00:21:18,750
know tool including ours<font color="#CCCCCC"> were really</font>

512
00:21:17,070 --> 00:21:21,240
good at finding that I made it

513
00:21:18,750 --> 00:21:22,890
persistent and I also made a persistent

514
00:21:21,240 --> 00:21:25,470
for other people but we've implemented

515
00:21:22,890 --> 00:21:26,970
those kind<font color="#E5E5E5"> of features in there so you</font>

516
00:21:25,470 --> 00:21:30,059
can really do<font color="#CCCCCC"> that now of course that</font>

517
00:21:26,970 --> 00:21:32,159
means once you hack it right it's messed

518
00:21:30,059 --> 00:21:35,460
up so somebody's got to move back and

519
00:21:32,159 --> 00:21:39,809
clear out those those comments who are

520
00:21:35,460 --> 00:21:44,400
those uh product reviews but<font color="#E5E5E5"> whatever</font>

521
00:21:39,809 --> 00:21:45,899
it's a cron job we have anti see surf

522
00:21:44,400 --> 00:21:48,419
stuff so if you're trying<font color="#E5E5E5"> to figure out</font>

523
00:21:45,900 --> 00:21:51,659
how you're dealing<font color="#E5E5E5"> with you know cross</font><font color="#CCCCCC"> a</font>

524
00:21:48,419 --> 00:21:54,480
request forgery protection we have<font color="#E5E5E5"> some</font>

525
00:21:51,659 --> 00:21:56,280
config options for that so especially<font color="#E5E5E5"> if</font>

526
00:21:54,480 --> 00:21:58,679
<font color="#E5E5E5">you're adding</font><font color="#CCCCCC"> new features to hack is on</font>

527
00:21:56,280 --> 00:22:00,799
its kind of<font color="#E5E5E5"> got a built-in mechanism for</font>

528
00:21:58,679 --> 00:22:02,940
for<font color="#E5E5E5"> doing that kind of providing a token</font>

529
00:22:00,799 --> 00:22:06,120
we're<font color="#E5E5E5"> trying to put in a bunch of</font>

530
00:22:02,940 --> 00:22:08,070
<font color="#CCCCCC">different see Sir solutions right people</font>

531
00:22:06,120 --> 00:22:12,689
solve it in different ways so we're

532
00:22:08,070 --> 00:22:16,399
making that configurable yeah so you do

533
00:22:12,690 --> 00:22:18,270
the token and<font color="#E5E5E5"> then and then it becomes</font>

534
00:22:16,400 --> 00:22:20,340
configurable right so if that's<font color="#E5E5E5"> going to</font>

535
00:22:18,270 --> 00:22:25,139
<font color="#E5E5E5">be protected or not but the whole</font><font color="#CCCCCC"> thing</font>

536
00:22:20,340 --> 00:22:28,439
<font color="#CCCCCC">is very very flexible to allow people to</font>

537
00:22:25,140 --> 00:22:30,429
modify their install in different ways

538
00:22:28,440 --> 00:22:33,549
you know we're looking for additional

539
00:22:30,429 --> 00:22:35,860
ideas and contributions to this we<font color="#CCCCCC"> are</font>

540
00:22:33,549 --> 00:22:38,049
also i wanted to show it<font color="#CCCCCC"> to you a little</font>

541
00:22:35,860 --> 00:22:42,840
bit<font color="#CCCCCC"> i have it up and running we'll see</font>

542
00:22:38,049 --> 00:22:48,340
how this goes but<font color="#E5E5E5"> i'm going to actually</font>

543
00:22:42,840 --> 00:22:52,090
put this so this is hack is on here and

544
00:22:48,340 --> 00:22:54,360
you<font color="#E5E5E5"> can see if i'm actually stay</font><font color="#CCCCCC"> on line</font>

545
00:22:52,090 --> 00:22:54,360
here

546
00:22:57,530 --> 00:23:00,820
alright so it works

547
00:23:01,610 --> 00:23:06,949
yeah so like this one year is kind of

548
00:23:03,880 --> 00:23:09,650
the thing this is pretty standard if<font color="#E5E5E5"> I</font>

549
00:23:06,950 --> 00:23:11,000
change the prices yeah so it didn't

550
00:23:09,650 --> 00:23:14,120
reload so this kind of some<font color="#CCCCCC"> Ajax</font>

551
00:23:11,000 --> 00:23:19,520
activity here I've got burp up and

552
00:23:14,120 --> 00:23:21,979
running and I scroll<font color="#CCCCCC"> down you can see</font><font color="#E5E5E5"> it</font>

553
00:23:19,520 --> 00:23:26,030
was my searches this is actually

554
00:23:21,980 --> 00:23:27,890
responding back with some HTML the

555
00:23:26,030 --> 00:23:29,870
pretty standard you know<font color="#E5E5E5"> this is a get</font>

556
00:23:27,890 --> 00:23:32,929
it's actually<font color="#CCCCCC"> giving HTML which</font><font color="#E5E5E5"> I think</font>

557
00:23:29,870 --> 00:23:34,459
it operates or whatever but this is

558
00:23:32,929 --> 00:23:36,049
pretty straightforward one of the things

559
00:23:34,460 --> 00:23:39,320
<font color="#CCCCCC">I want to</font><font color="#E5E5E5"> look at here is the mobile app</font>

560
00:23:36,049 --> 00:23:45,020
so earlier I had installed it the APK

561
00:23:39,320 --> 00:23:47,450
installed like burp is frozen there you

562
00:23:45,020 --> 00:23:49,668
go so I did the authentication<font color="#E5E5E5"> where it</font>

563
00:23:47,450 --> 00:23:53,809
actually logged in with some basic auth

564
00:23:49,669 --> 00:23:55,220
<font color="#CCCCCC">preds it got back a token and</font><font color="#E5E5E5"> JSON right</font>

565
00:23:53,809 --> 00:23:56,928
these<font color="#E5E5E5"> are kind</font><font color="#CCCCCC"> of things that we see in</font>

566
00:23:55,220 --> 00:23:59,720
real life we really haven't<font color="#CCCCCC"> had with</font>

567
00:23:56,929 --> 00:24:01,070
test apps but we see this stuff so the

568
00:23:59,720 --> 00:24:04,100
mobile client here<font color="#E5E5E5"> I actually have an</font>

569
00:24:01,070 --> 00:24:09,280
emulator running so we can see the

570
00:24:04,100 --> 00:24:12,918
mobile client and click on<font color="#E5E5E5"> a product</font>

571
00:24:09,280 --> 00:24:15,799
it'll drill in and using the API to get

572
00:24:12,919 --> 00:24:18,730
some data about that go down and see

573
00:24:15,799 --> 00:24:18,730
that request here

574
00:24:20,900 --> 00:24:27,530
I really so what it me see what was this

575
00:24:24,860 --> 00:24:32,780
format so this is<font color="#CCCCCC"> actually was a URL</font>

576
00:24:27,530 --> 00:24:35,360
structured API call right so it's using

577
00:24:32,780 --> 00:24:39,649
it like directory structure and then the

578
00:24:35,360 --> 00:24:41,270
response back is JSON<font color="#E5E5E5"> right but you can</font>

579
00:24:39,650 --> 00:24:42,770
see all<font color="#E5E5E5"> this type of activity again</font>

580
00:24:41,270 --> 00:24:45,200
using this mobile client then you can go

581
00:24:42,770 --> 00:24:50,540
in<font color="#CCCCCC"> and start attacking all right can I</font>

582
00:24:45,200 --> 00:25:00,100
attack so I go<font color="#CCCCCC"> back to</font><font color="#E5E5E5"> this Burke I take</font>

583
00:24:50,540 --> 00:25:00,100
this into repeater and what happens if I

584
00:25:01,670 --> 00:25:07,330
a single<font color="#E5E5E5"> call here then</font>

585
00:25:14,870 --> 00:25:20,510
that error<font color="#E5E5E5"> okay era not found</font><font color="#CCCCCC"> alright so</font>

586
00:25:18,380 --> 00:25:23,930
this is it back actually<font color="#E5E5E5"> shouldn't spit</font>

587
00:25:20,510 --> 00:25:31,129
back to JSON but it's actually spitting

588
00:25:23,930 --> 00:25:33,080
back some full HTML page<font color="#E5E5E5"> if i put the</font>

589
00:25:31,130 --> 00:25:38,920
quote before can't really see<font color="#CCCCCC"> it from</font>

590
00:25:33,080 --> 00:25:42,220
here<font color="#E5E5E5"> after</font><font color="#CCCCCC"> the two right now okay</font><font color="#E5E5E5"> okay</font>

591
00:25:38,920 --> 00:25:42,220
let<font color="#E5E5E5"> me try</font>

592
00:25:46,350 --> 00:25:53,039
yeah so this is<font color="#E5E5E5"> really work in there you</font>

593
00:25:51,120 --> 00:25:55,678
try<font color="#CCCCCC"> one of the other ones so</font><font color="#E5E5E5"> I'll go</font>

594
00:25:53,039 --> 00:25:58,340
back well<font color="#E5E5E5"> actually I should have ended</font>

595
00:25:55,679 --> 00:25:58,340
it to the cart

596
00:26:04,260 --> 00:26:09,589
there

597
00:26:06,509 --> 00:26:09,589
end of the<font color="#CCCCCC"> curt</font>

598
00:26:09,860 --> 00:26:16,639
my cart I can see all my<font color="#CCCCCC"> items here</font>

599
00:26:14,320 --> 00:26:17,629
proceed to<font color="#CCCCCC"> checkout so you go through</font>

600
00:26:16,640 --> 00:26:19,460
this whole<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> all right it goes</font>

601
00:26:17,630 --> 00:26:20,870
through the whole process of putting in

602
00:26:19,460 --> 00:26:23,780
your<font color="#E5E5E5"> credit card information and all</font>

603
00:26:20,870 --> 00:26:25,159
that stuff but it's very<font color="#E5E5E5"> nice because</font>

604
00:26:23,780 --> 00:26:28,280
<font color="#E5E5E5">you kind of go through this</font><font color="#CCCCCC"> whole thing</font>

605
00:26:25,160 --> 00:26:30,710
<font color="#E5E5E5">and actually see the</font><font color="#CCCCCC"> traffic you can</font>

606
00:26:28,280 --> 00:26:32,178
actually see where the mobile app is<font color="#E5E5E5"> not</font>

607
00:26:30,710 --> 00:26:35,179
sending<font color="#E5E5E5"> all the time sometimes it's just</font>

608
00:26:32,179 --> 00:26:36,500
recording the data internally and then

609
00:26:35,179 --> 00:26:38,390
when you get<font color="#E5E5E5"> to a certain point then it</font>

610
00:26:36,500 --> 00:26:39,710
sends everything and you'll see this

611
00:26:38,390 --> 00:26:42,530
kind<font color="#E5E5E5"> of behavior is your kind of going</font>

612
00:26:39,710 --> 00:26:44,809
through it with the you know you and

613
00:26:42,530 --> 00:26:47,030
I'll set this up with the usually the

614
00:26:44,809 --> 00:26:51,980
proxy is the easiest way to do it so I

615
00:26:47,030 --> 00:26:56,230
can actually<font color="#E5E5E5"> see what's going on here's</font>

616
00:26:51,980 --> 00:26:58,309
<font color="#E5E5E5">the proxy and</font><font color="#CCCCCC"> you're all my information</font>

617
00:26:56,230 --> 00:27:00,980
<font color="#CCCCCC">custom or address so it's pulling up</font>

618
00:26:58,309 --> 00:27:02,629
stuff as I'm going through my<font color="#CCCCCC"> card</font>

619
00:27:00,980 --> 00:27:05,120
product but<font color="#CCCCCC"> you get actually an</font>

620
00:27:02,630 --> 00:27:06,530
opportunity to dig in and test with apps

621
00:27:05,120 --> 00:27:08,750
like this which I haven't really<font color="#E5E5E5"> seen</font>

622
00:27:06,530 --> 00:27:11,379
with any other<font color="#E5E5E5"> tool is that it gives you</font>

623
00:27:08,750 --> 00:27:13,340
the ability to really see in a

624
00:27:11,380 --> 00:27:16,030
environment that looks kind<font color="#CCCCCC"> of like a</font>

625
00:27:13,340 --> 00:27:18,470
real app this these vulnerable models

626
00:27:16,030 --> 00:27:19,700
and<font color="#CCCCCC"> and really</font><font color="#E5E5E5"> start testing with it</font>

627
00:27:18,470 --> 00:27:21,919
that's really the point of hack is on

628
00:27:19,700 --> 00:27:23,090
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> still like I said it's an open</font>

629
00:27:21,919 --> 00:27:25,460
source project so we're looking<font color="#CCCCCC"> for</font>

630
00:27:23,090 --> 00:27:28,250
<font color="#E5E5E5">contributions we're looking for ways to</font>

631
00:27:25,460 --> 00:27:30,470
continue<font color="#E5E5E5"> to</font><font color="#CCCCCC"> improve it we've seen other</font>

632
00:27:28,250 --> 00:27:32,870
products come up like benchmark just

633
00:27:30,470 --> 00:27:37,100
came out which<font color="#CCCCCC"> is a pretty interesting</font>

634
00:27:32,870 --> 00:27:38,899
project benchmark is intended to be

635
00:27:37,100 --> 00:27:45,020
scanned by all the various tools out

636
00:27:38,900 --> 00:27:47,330
there and one of the guys<font color="#CCCCCC"> from wasn't</font>

637
00:27:45,020 --> 00:27:49,730
contrast what was that what's the aspect

638
00:27:47,330 --> 00:27:54,199
right<font color="#E5E5E5"> the parent company of contractor</font>

639
00:27:49,730 --> 00:27:58,340
where they contrast went off for<font color="#CCCCCC"> him was</font>

640
00:27:54,200 --> 00:27:59,840
it dave winer you know he's getting a

641
00:27:58,340 --> 00:28:01,879
lot<font color="#CCCCCC"> of criticism for his app because</font>

642
00:27:59,840 --> 00:28:06,770
it's coming from a vendor and of course

643
00:28:01,880 --> 00:28:08,270
contrast does very well on it and and<font color="#E5E5E5"> I</font>

644
00:28:06,770 --> 00:28:10,309
don't want to put any I don't<font color="#E5E5E5"> I don't I</font>

645
00:28:08,270 --> 00:28:12,080
don't like<font color="#CCCCCC"> to get into motives I don't</font>

646
00:28:10,309 --> 00:28:14,540
know that his motives are bad<font color="#E5E5E5"> you know</font>

647
00:28:12,080 --> 00:28:16,639
having talked to talk with them I see

648
00:28:14,540 --> 00:28:19,070
these projects as very useful to the

649
00:28:16,640 --> 00:28:21,800
community because<font color="#E5E5E5"> even that one even</font>

650
00:28:19,070 --> 00:28:23,450
though it's I don't like it in in the

651
00:28:21,800 --> 00:28:25,299
sense that it's all classic HTML

652
00:28:23,450 --> 00:28:27,799
doesn't really test what a modern

653
00:28:25,299 --> 00:28:31,399
scanner should do or modern tools should

654
00:28:27,799 --> 00:28:33,379
be helping<font color="#CCCCCC"> you with it's important that</font>

655
00:28:31,399 --> 00:28:35,510
<font color="#CCCCCC">we have</font><font color="#E5E5E5"> these kind of tools out there so</font>

656
00:28:33,380 --> 00:28:37,309
that<font color="#E5E5E5"> we can compare it's very hard for</font>

657
00:28:35,510 --> 00:28:41,840
people compare tools against each other

658
00:28:37,309 --> 00:28:43,760
and<font color="#E5E5E5"> so I think</font><font color="#CCCCCC"> that kind</font><font color="#E5E5E5"> of putting it</font>

659
00:28:41,840 --> 00:28:45,678
out there I certainly I work<font color="#E5E5E5"> closely</font>

660
00:28:43,760 --> 00:28:50,059
with Larry<font color="#E5E5E5"> sudo when he did his reports</font>

661
00:28:45,679 --> 00:28:51,409
in my 2010 and everybody comes out to

662
00:28:50,059 --> 00:28:55,570
attack like I<font color="#E5E5E5"> know there's been a lot of</font>

663
00:28:51,409 --> 00:28:58,399
attacks against Dave for his and

664
00:28:55,570 --> 00:29:00,740
ultimately we need<font color="#E5E5E5"> these type of apps we</font>

665
00:28:58,399 --> 00:29:02,299
need vulnerable apps to help people see

666
00:29:00,740 --> 00:29:05,779
what's going<font color="#E5E5E5"> on to compare their tools</font>

667
00:29:02,299 --> 00:29:06,918
compare their own processes right they

668
00:29:05,779 --> 00:29:08,960
start you start to realize very quickly

669
00:29:06,919 --> 00:29:10,070
how little some of your tools<font color="#E5E5E5"> do in a</font>

670
00:29:08,960 --> 00:29:13,039
lot of<font color="#E5E5E5"> cases right when you're dealing</font>

671
00:29:10,070 --> 00:29:15,789
<font color="#E5E5E5">with these rest api's is very difficult</font>

672
00:29:13,039 --> 00:29:19,070
even with a lot of<font color="#E5E5E5"> tools that can test</font>

673
00:29:15,789 --> 00:29:20,720
you know we see sound like where you can

674
00:29:19,070 --> 00:29:26,000
<font color="#CCCCCC">give to</font><font color="#E5E5E5"> like all these api calls these</font>

675
00:29:20,720 --> 00:29:28,100
rest api calls a lot of tools even if

676
00:29:26,000 --> 00:29:30,350
you were to record the traffic and<font color="#E5E5E5"> feed</font>

677
00:29:28,100 --> 00:29:31,639
them in if they can't support<font color="#CCCCCC"> json if</font>

678
00:29:30,350 --> 00:29:33,889
they can't support the google web

679
00:29:31,639 --> 00:29:36,289
toolkit formats they're<font color="#E5E5E5"> not going to do</font>

680
00:29:33,889 --> 00:29:40,969
anything useful for you so those tools

681
00:29:36,289 --> 00:29:42,110
become useless as your apps evolve right

682
00:29:40,970 --> 00:29:45,110
if they're<font color="#E5E5E5"> not keeping up with that</font>

683
00:29:42,110 --> 00:29:46,428
evolution we've been actually kind of

684
00:29:45,110 --> 00:29:49,250
getting working with a lot<font color="#CCCCCC"> of customers</font>

685
00:29:46,429 --> 00:29:50,929
on things like swagger because<font color="#E5E5E5"> rusty</font>

686
00:29:49,250 --> 00:29:53,870
guys are becoming bigger I don't know

687
00:29:50,929 --> 00:29:57,769
how<font color="#E5E5E5"> many of you are building or testing</font>

688
00:29:53,870 --> 00:30:00,620
REST API is on a regular basis<font color="#E5E5E5"> so is it</font>

689
00:29:57,769 --> 00:30:01,970
like<font color="#E5E5E5"> all manual effort right the actual</font>

690
00:30:00,620 --> 00:30:03,529
<font color="#CCCCCC">like you're doing security testing it's</font>

691
00:30:01,970 --> 00:30:04,880
all manual isn't or do you<font color="#CCCCCC"> have anybody</font>

692
00:30:03,529 --> 00:30:07,580
have any tools they're using that are

693
00:30:04,880 --> 00:30:12,230
effective besides manually doing it with

694
00:30:07,580 --> 00:30:14,840
burp no that's that's a problem right

695
00:30:12,230 --> 00:30:16,880
for us as an industry if we can't test

696
00:30:14,840 --> 00:30:19,490
these<font color="#E5E5E5"> things now one of the things that</font>

697
00:30:16,880 --> 00:30:21,049
<font color="#E5E5E5">we're pushing for very heavily is for</font>

698
00:30:19,490 --> 00:30:23,720
more and<font color="#E5E5E5"> more people to document their</font>

699
00:30:21,049 --> 00:30:26,658
<font color="#E5E5E5">API is in a format like swagger or API</font>

700
00:30:23,720 --> 00:30:27,950
blueprint because that's where we're

701
00:30:26,659 --> 00:30:29,870
really I think it has start having

702
00:30:27,950 --> 00:30:32,360
solutions and we're building solutions

703
00:30:29,870 --> 00:30:34,789
in our tool so that we can automatically

704
00:30:32,360 --> 00:30:36,289
consume a swagger document are you

705
00:30:34,789 --> 00:30:41,580
familiar with swagger

706
00:30:36,289 --> 00:30:43,860
<font color="#CCCCCC">okay so agar is a format so original web</font>

707
00:30:41,580 --> 00:30:45,360
services were like soap right and<font color="#E5E5E5"> let's</font>

708
00:30:43,860 --> 00:30:46,830
not<font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> xml RPC that's a whole</font>

709
00:30:45,360 --> 00:30:49,620
different thing right but let's just

710
00:30:46,830 --> 00:30:53,070
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about so so so had a companion</font>

711
00:30:49,620 --> 00:30:55,590
which was wisdom the<font color="#E5E5E5"> wsdl file and that</font>

712
00:30:53,070 --> 00:30:59,820
described the all of<font color="#CCCCCC"> the methods and</font>

713
00:30:55,590 --> 00:31:02,010
parameters in your soap api very handy

714
00:30:59,820 --> 00:31:04,918
you can<font color="#E5E5E5"> take a whiz doll file and kind</font>

715
00:31:02,010 --> 00:31:07,980
<font color="#E5E5E5">of auto generate a client rest has not</font>

716
00:31:04,919 --> 00:31:12,750
had that rest<font color="#E5E5E5"> as a soap was</font><font color="#CCCCCC"> XML is very</font>

717
00:31:07,980 --> 00:31:17,039
specific<font color="#CCCCCC"> type of XML use rest is kind of</font>

718
00:31:12,750 --> 00:31:19,250
the Wild West right so there were some

719
00:31:17,039 --> 00:31:21,570
competing standards that kind<font color="#E5E5E5"> of spun up</font>

720
00:31:19,250 --> 00:31:25,760
most of them failed because they tried

721
00:31:21,570 --> 00:31:30,059
<font color="#CCCCCC">to be too much like soap and wisdom</font>

722
00:31:25,760 --> 00:31:31,529
swagger<font color="#CCCCCC"> api blueprint Rammell those have</font>

723
00:31:30,059 --> 00:31:33,570
all been popping up and again we go back

724
00:31:31,529 --> 00:31:37,289
<font color="#E5E5E5">to the competing standards which is</font>

725
00:31:33,570 --> 00:31:40,139
<font color="#CCCCCC">wonderful but swagger is actually a json</font>

726
00:31:37,289 --> 00:31:43,559
formatted documentation of your<font color="#E5E5E5"> api and</font>

727
00:31:40,140 --> 00:31:45,510
they actually the<font color="#E5E5E5"> swagger project it</font>

728
00:31:43,559 --> 00:31:46,799
provides a much api about how much code

729
00:31:45,510 --> 00:31:48,299
hooks that people<font color="#E5E5E5"> can put in their code</font>

730
00:31:46,799 --> 00:31:50,100
and it will help auto generate the

731
00:31:48,299 --> 00:31:51,750
swagger document<font color="#CCCCCC"> forum and then they</font>

732
00:31:50,100 --> 00:31:54,270
have tools it will take the swagger JSON

733
00:31:51,750 --> 00:31:56,640
and convert it to a documentation file

734
00:31:54,270 --> 00:31:59,250
or a<font color="#E5E5E5"> little web page so people can</font>

735
00:31:56,640 --> 00:32:01,799
navigate through and see it very handy

736
00:31:59,250 --> 00:32:04,020
as opposed to just like a word doc that

737
00:32:01,799 --> 00:32:05,700
gotten written once to describe the<font color="#E5E5E5"> API</font>

738
00:32:04,020 --> 00:32:08,850
and has<font color="#E5E5E5"> never been updated to keep up</font>

739
00:32:05,700 --> 00:32:12,630
with<font color="#CCCCCC"> the code right swagger helps with</font>

740
00:32:08,850 --> 00:32:14,699
<font color="#CCCCCC">that and and I I'm just</font><font color="#E5E5E5"> saying swagger</font>

741
00:32:12,630 --> 00:32:16,710
because you know the API blueprint is

742
00:32:14,700 --> 00:32:19,820
trying to do<font color="#E5E5E5"> all the same things but I'm</font>

743
00:32:16,710 --> 00:32:22,289
<font color="#E5E5E5">just using swagger as the example set</font>

744
00:32:19,820 --> 00:32:24,270
but if<font color="#E5E5E5"> you get your doc if you get your</font>

745
00:32:22,289 --> 00:32:28,320
<font color="#E5E5E5">API is documented in these formats now</font>

746
00:32:24,270 --> 00:32:29,970
we have something possible and so we can

747
00:32:28,320 --> 00:32:31,889
<font color="#E5E5E5">start testing that way so if you're if</font>

748
00:32:29,970 --> 00:32:33,779
you haven't checked out swagger and

749
00:32:31,890 --> 00:32:36,240
you're dealing with REST API s start

750
00:32:33,779 --> 00:32:39,149
checking it out it is a great way to get

751
00:32:36,240 --> 00:32:41,730
documentation so that then security

752
00:32:39,149 --> 00:32:43,350
testing can be possible<font color="#CCCCCC"> because</font><font color="#E5E5E5"> now we</font>

753
00:32:41,730 --> 00:32:44,820
can handle<font color="#E5E5E5"> the discovery because even</font><font color="#CCCCCC"> if</font>

754
00:32:43,350 --> 00:32:46,799
<font color="#E5E5E5">you manually set here and navigate</font>

755
00:32:44,820 --> 00:32:48,178
through this mobile app and you record a

756
00:32:46,799 --> 00:32:49,440
bunch of traffic and now you see what

757
00:32:48,179 --> 00:32:51,360
<font color="#E5E5E5">those API is our calls</font>

758
00:32:49,440 --> 00:32:52,830
<font color="#CCCCCC">our it doesn't mean that's all the API</font>

759
00:32:51,360 --> 00:32:55,678
calls they're gonna be a whole bunch

760
00:32:52,830 --> 00:32:57,809
more<font color="#E5E5E5"> that you just didn't hit</font><font color="#CCCCCC"> okay so if</font>

761
00:32:55,679 --> 00:33:00,029
you have a swagger description of your

762
00:32:57,809 --> 00:33:02,940
API now you have something much more

763
00:33:00,029 --> 00:33:04,919
powerful to test with and i see going

764
00:33:02,940 --> 00:33:06,750
forward you'll start to see that in the

765
00:33:04,919 --> 00:33:08,039
tools<font color="#E5E5E5"> i know we're adding into ours i</font>

766
00:33:06,750 --> 00:33:10,110
<font color="#E5E5E5">imagine other people are</font><font color="#CCCCCC"> going to copy</font>

767
00:33:08,039 --> 00:33:13,110
that effort because it's really<font color="#E5E5E5"> the</font>

768
00:33:10,110 --> 00:33:16,408
smart way to do it so<font color="#E5E5E5"> i would certainly</font>

769
00:33:13,110 --> 00:33:17,820
<font color="#E5E5E5">encourage that effort on on any of the</font>

770
00:33:16,409 --> 00:33:20,129
development teams are dealing with<font color="#E5E5E5"> is</font>

771
00:33:17,820 --> 00:33:28,678
get them<font color="#E5E5E5"> to do do swagger a</font>

772
00:33:20,129 --> 00:33:30,600
documentation of their formats so we're

773
00:33:28,679 --> 00:33:34,559
ending a little early iced went a little

774
00:33:30,600 --> 00:33:35,969
fast but hopefully this kind of<font color="#E5E5E5"> got a</font>

775
00:33:34,559 --> 00:33:38,370
lot of time for<font color="#E5E5E5"> questions we kind of</font>

776
00:33:35,970 --> 00:33:40,350
talked about but you know really the

777
00:33:38,370 --> 00:33:42,959
goal here was to just kind of get

778
00:33:40,350 --> 00:33:44,610
everybody to be aware of hack is on go

779
00:33:42,960 --> 00:33:46,320
check it out codes available you can

780
00:33:44,610 --> 00:33:50,039
download it you can use our hosted

781
00:33:46,320 --> 00:33:52,500
version go play with it it's great for

782
00:33:50,039 --> 00:33:54,779
teaching as well as testing your tools

783
00:33:52,500 --> 00:33:56,460
but it's a great teaching<font color="#CCCCCC"> tool because</font>

784
00:33:54,779 --> 00:33:58,289
<font color="#E5E5E5">even for yourself i know a lot</font><font color="#CCCCCC"> of I've</font>

785
00:33:56,460 --> 00:34:01,139
had a lot of people that had never<font color="#E5E5E5"> had</font>

786
00:33:58,289 --> 00:34:04,950
an opportunity<font color="#E5E5E5"> to test these type of</font>

787
00:34:01,139 --> 00:34:06,269
functions because you know they were

788
00:34:04,950 --> 00:34:08,310
worried about testing production or

789
00:34:06,269 --> 00:34:13,859
whatever and so it's a<font color="#E5E5E5"> great tool for</font>

790
00:34:08,310 --> 00:34:15,719
that<font color="#E5E5E5"> so feel free to go at it all of the</font>

791
00:34:13,859 --> 00:34:18,299
information this these slides will be

792
00:34:15,719 --> 00:34:21,989
posted but<font color="#E5E5E5"> certainly able to reach out</font>

793
00:34:18,300 --> 00:34:24,540
to me or just get on github and we

794
00:34:21,989 --> 00:34:28,020
<font color="#E5E5E5">recently have moved it to to the rapid 7</font>

795
00:34:24,540 --> 00:34:31,079
section within github there's a<font color="#E5E5E5"> lot of</font>

796
00:34:28,020 --> 00:34:32,310
<font color="#E5E5E5">rapid seven projects right for those</font>

797
00:34:31,079 --> 00:34:35,520
<font color="#CCCCCC">that are familiar on the network side</font>

798
00:34:32,310 --> 00:34:38,129
there's like<font color="#CCCCCC"> metasploit able so we</font>

799
00:34:35,520 --> 00:34:40,879
almost renamed<font color="#CCCCCC"> hackers on but I don't</font>

800
00:34:38,129 --> 00:34:43,859
<font color="#CCCCCC">like web exploitable I was just too much</font>

801
00:34:40,879 --> 00:34:46,339
so we kept it hack is on have legal had

802
00:34:43,859 --> 00:34:49,909
to approve you know how to took a while

803
00:34:46,339 --> 00:34:52,649
but anyway feel free to get<font color="#CCCCCC"> on there and</font>

804
00:34:49,909 --> 00:34:54,270
these slides will<font color="#E5E5E5"> be public and I think</font>

805
00:34:52,649 --> 00:34:57,359
there's links to it from man vs web app

806
00:34:54,270 --> 00:34:58,770
that's my blog and that's where the

807
00:34:57,359 --> 00:35:01,009
podcasting is going to get restarted

808
00:34:58,770 --> 00:35:03,060
here in a few weeks

809
00:35:01,010 --> 00:35:04,860
so we'll be talking a lot about this<font color="#E5E5E5"> on</font>

810
00:35:03,060 --> 00:35:07,110
the podcast and these sort of problem

811
00:35:04,860 --> 00:35:09,420
sets but<font color="#E5E5E5"> the question</font><font color="#CCCCCC"> is around the</font>

812
00:35:07,110 --> 00:35:12,000
logging on the back end so could

813
00:35:09,420 --> 00:35:13,670
somebody on the defensive side detect

814
00:35:12,000 --> 00:35:18,060
that these<font color="#E5E5E5"> attacks are happening and</font>

815
00:35:13,670 --> 00:35:19,500
currently with the PHP code base there's

816
00:35:18,060 --> 00:35:21,450
<font color="#E5E5E5">not really that much we would because</font>

817
00:35:19,500 --> 00:35:25,470
you generate a lot of errors and stuff

818
00:35:21,450 --> 00:35:27,210
like that we have but<font color="#CCCCCC"> we actually we're</font>

819
00:35:25,470 --> 00:35:29,520
talking<font color="#E5E5E5"> with I don't these those guys</font>

820
00:35:27,210 --> 00:35:32,280
are here privity you guys familiar with

821
00:35:29,520 --> 00:35:33,810
<font color="#CCCCCC">privity at all</font><font color="#E5E5E5"> there they do rasp a</font><font color="#CCCCCC"> real</font>

822
00:35:32,280 --> 00:35:37,260
<font color="#CCCCCC">time application security protection</font>

823
00:35:33,810 --> 00:35:39,900
I've been the<font color="#E5E5E5"> checkmarks I think they're</font>

824
00:35:37,260 --> 00:35:41,760
coming<font color="#CCCCCC"> out with theirs too but we've</font>

825
00:35:39,900 --> 00:35:45,150
been<font color="#E5E5E5"> actually kind of contemplating</font>

826
00:35:41,760 --> 00:35:46,890
writing a new version<font color="#E5E5E5"> of it in Java at</font>

827
00:35:45,150 --> 00:35:48,090
least<font color="#E5E5E5"> the</font><font color="#CCCCCC"> back end probably of</font>

828
00:35:46,890 --> 00:35:51,600
everything else the<font color="#CCCCCC"> same all the same</font>

829
00:35:48,090 --> 00:35:53,310
api's and all that stuff but we're

830
00:35:51,600 --> 00:35:56,069
thinking about<font color="#E5E5E5"> putting building a new</font>

831
00:35:53,310 --> 00:35:59,580
back end in<font color="#CCCCCC"> Java because then tools like</font>

832
00:35:56,070 --> 00:36:02,250
that that are defensive in nature they

833
00:35:59,580 --> 00:36:03,509
are good at<font color="#E5E5E5"> testing Java or.net now we</font>

834
00:36:02,250 --> 00:36:05,010
<font color="#CCCCCC">haven't</font><font color="#E5E5E5"> decided which</font><font color="#CCCCCC"> one it will do it</font>

835
00:36:03,510 --> 00:36:09,810
in but you'll be<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> those too but</font>

836
00:36:05,010 --> 00:36:11,850
then tools<font color="#E5E5E5"> like a like a rasp tool as</font>

837
00:36:09,810 --> 00:36:13,830
intended for<font color="#CCCCCC"> that defensive purpose</font>

838
00:36:11,850 --> 00:36:16,610
attached to code they would be able<font color="#E5E5E5"> to</font>

839
00:36:13,830 --> 00:36:19,049
<font color="#E5E5E5">start picking up on this</font><font color="#CCCCCC"> and certainly</font>

840
00:36:16,610 --> 00:36:21,690
you can obviously<font color="#E5E5E5"> always put a laugh in</font>

841
00:36:19,050 --> 00:36:23,340
front of it and<font color="#E5E5E5"> the wife will in many</font>

842
00:36:21,690 --> 00:36:25,920
cases well<font color="#E5E5E5"> at least see the attacks if</font>

843
00:36:23,340 --> 00:36:27,750
not defend but you can actually see it

844
00:36:25,920 --> 00:36:29,460
through more of<font color="#E5E5E5"> a whack without kind of</font>

845
00:36:27,750 --> 00:36:32,090
<font color="#E5E5E5">be an add-on in our code we don't really</font>

846
00:36:29,460 --> 00:36:34,470
have much logging<font color="#E5E5E5"> that's going on</font>

847
00:36:32,090 --> 00:36:39,210
there's like a config file that starts

848
00:36:34,470 --> 00:36:40,799
everything so you can<font color="#E5E5E5"> always add into</font>

849
00:36:39,210 --> 00:36:42,630
that so that it's there's a new there's

850
00:36:40,800 --> 00:36:45,680
a token all the time or I guess give me

851
00:36:42,630 --> 00:36:45,680
the use case thing<font color="#E5E5E5"> oh</font>

852
00:36:52,339 --> 00:36:57,828
that's interesting to record which<font color="#E5E5E5"> one's</font>

853
00:36:54,499 --> 00:37:01,249
actually got hit so we've<font color="#E5E5E5"> been playing</font>

854
00:36:57,829 --> 00:37:04,339
with<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> that obviously detecting if</font>

855
00:37:01,249 --> 00:37:05,988
an attack came in that would work kind

856
00:37:04,339 --> 00:37:07,788
of<font color="#E5E5E5"> get Sofia at times</font><font color="#CCCCCC"> alright well</font>

857
00:37:05,989 --> 00:37:10,849
hopefully this was useful use of your

858
00:37:07,789 --> 00:37:14,539
time and and if you're interested in and

859
00:37:10,849 --> 00:37:16,099
playing with hack is on or you know any

860
00:37:14,539 --> 00:37:18,049
<font color="#CCCCCC">app sect conversation you want to have</font>

861
00:37:16,099 --> 00:37:20,559
with me you are welcome to<font color="#E5E5E5"> it but thank</font>

862
00:37:18,049 --> 00:37:20,559
you all<font color="#E5E5E5"> for your</font><font color="#CCCCCC"> time</font>

