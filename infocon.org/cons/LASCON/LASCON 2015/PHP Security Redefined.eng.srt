1
00:00:17,390 --> 00:00:23,280
anyway thanks for coming to<font color="#E5E5E5"> my talk I</font>

2
00:00:19,920 --> 00:00:25,470
appreciate<font color="#CCCCCC"> it you know unfortunately PHP</font>

3
00:00:23,280 --> 00:00:27,690
is not a super sexy topic in<font color="#CCCCCC"> the</font>

4
00:00:25,470 --> 00:00:29,310
security community like some of the

5
00:00:27,690 --> 00:00:30,870
other the other<font color="#E5E5E5"> interesting tools</font>

6
00:00:29,310 --> 00:00:32,549
they've shown up<font color="#CCCCCC"> at this conference but</font>

7
00:00:30,870 --> 00:00:35,070
hopefully I can kind of give you<font color="#E5E5E5"> an</font>

8
00:00:32,549 --> 00:00:37,919
overview of<font color="#CCCCCC"> the current</font><font color="#E5E5E5"> state of where</font>

9
00:00:35,070 --> 00:00:40,530
PHP is related to more security kind of

10
00:00:37,920 --> 00:00:43,230
topics and where it's going with the

11
00:00:40,530 --> 00:00:46,650
next<font color="#E5E5E5"> major version PHP 7 which should be</font>

12
00:00:43,230 --> 00:00:49,919
released i think it's mid to end of next

13
00:00:46,650 --> 00:00:51,269
month and it's quite a bit of new

14
00:00:49,920 --> 00:00:54,030
functionality quite a bit of new

15
00:00:51,269 --> 00:00:56,519
features all sorts of good stuff so

16
00:00:54,030 --> 00:00:58,920
anyway just<font color="#CCCCCC"> a brief introduction of</font>

17
00:00:56,519 --> 00:01:01,890
myself got a little bit there I've been

18
00:00:58,920 --> 00:01:04,379
<font color="#E5E5E5">there in PHP stuff for about 15 years 15</font>

19
00:01:01,890 --> 00:01:06,570
plus really but I've really only been

20
00:01:04,379 --> 00:01:09,420
focusing on the security aspect of it

21
00:01:06,570 --> 00:01:11,250
<font color="#CCCCCC">for the past</font><font color="#E5E5E5"> five or six years I am</font><font color="#CCCCCC"> an</font>

22
00:01:09,420 --> 00:01:13,650
application security engineer for

23
00:01:11,250 --> 00:01:16,560
Salesforce or par dot is the child

24
00:01:13,650 --> 00:01:18,120
company that I work for and if you're

25
00:01:16,560 --> 00:01:20,190
interested I'm all over<font color="#E5E5E5"> Twitter at</font>

26
00:01:18,120 --> 00:01:21,930
enigma and<font color="#E5E5E5"> this is a project the</font>

27
00:01:20,190 --> 00:01:24,950
securing PHP project is one that I

28
00:01:21,930 --> 00:01:27,660
started<font color="#CCCCCC"> up base about</font><font color="#E5E5E5"> two years ago</font>

29
00:01:24,950 --> 00:01:29,460
providing PHP developers with more

30
00:01:27,660 --> 00:01:31,979
<font color="#E5E5E5">resources and more information</font><font color="#CCCCCC"> and kind</font>

31
00:01:29,460 --> 00:01:33,600
<font color="#E5E5E5">of more targeted content around securing</font>

32
00:01:31,980 --> 00:01:35,430
their applications and teaching<font color="#CCCCCC"> them</font>

33
00:01:33,600 --> 00:01:37,140
some of the basic concepts all that kind

34
00:01:35,430 --> 00:01:38,520
of good stuff so and there's a

35
00:01:37,140 --> 00:01:42,780
newsletter that goes along with a

36
00:01:38,520 --> 00:01:43,710
<font color="#E5E5E5">Twitter account and everything so just</font>

37
00:01:42,780 --> 00:01:46,770
to start off with a little<font color="#E5E5E5"> bit of</font>

38
00:01:43,710 --> 00:01:48,539
history about PHP it's over 20 years old

39
00:01:46,770 --> 00:01:50,780
now it actually celebrated its 20th

40
00:01:48,540 --> 00:01:53,760
anniversary a couple of<font color="#E5E5E5"> months ago</font>

41
00:01:50,780 --> 00:01:56,640
evolving from the<font color="#E5E5E5"> pearl version that</font>

42
00:01:53,760 --> 00:01:58,440
Rasmus wrote way way back the personal

43
00:01:56,640 --> 00:02:00,740
homepages version and no it does not

44
00:01:58,440 --> 00:02:02,550
stand for personal homepages anymore

45
00:02:00,740 --> 00:02:04,649
somebody thought it would be funny to

46
00:02:02,550 --> 00:02:06,990
make phb stand for PHP hypertext

47
00:02:04,650 --> 00:02:11,099
preprocessor make it nice and recursive

48
00:02:06,990 --> 00:02:12,690
like that so nice<font color="#E5E5E5"> little joke it is used</font>

49
00:02:11,099 --> 00:02:14,459
by over eighty percent of the web I

50
00:02:12,690 --> 00:02:17,280
think the last measurement was between

51
00:02:14,459 --> 00:02:19,769
80 and 85 percent a lot of that is

52
00:02:17,280 --> 00:02:20,819
<font color="#CCCCCC">because of WordPress and Drupal</font><font color="#E5E5E5"> I'm sure</font>

53
00:02:19,769 --> 00:02:24,330
you've all have heard of those

54
00:02:20,819 --> 00:02:27,450
particular<font color="#E5E5E5"> projects usually with several</font>

55
00:02:24,330 --> 00:02:31,110
possibly expletives or or other

56
00:02:27,450 --> 00:02:33,060
interesting things appended to them but

57
00:02:31,110 --> 00:02:36,630
you know those are those are the driving

58
00:02:33,060 --> 00:02:38,340
force behind PHP on the web there's a

59
00:02:36,630 --> 00:02:40,140
lot<font color="#CCCCCC"> of other projects out there that are</font>

60
00:02:38,340 --> 00:02:41,940
popular but those are kind of<font color="#E5E5E5"> the two</font>

61
00:02:40,140 --> 00:02:44,579
major ones that are they're<font color="#E5E5E5"> really</font>

62
00:02:41,940 --> 00:02:47,820
popular the latest version the latest

63
00:02:44,580 --> 00:02:51,390
stable version is PHP 56 I think it's<font color="#E5E5E5"> 56</font>

64
00:02:47,820 --> 00:02:54,450
14 now if i remember right with seven

65
00:02:51,390 --> 00:02:56,820
coming in late 2015 that's next month

66
00:02:54,450 --> 00:02:58,410
basically they're on release candidate

67
00:02:56,820 --> 00:03:00,780
<font color="#CCCCCC">five now i think they're going</font><font color="#E5E5E5"> to do</font>

68
00:02:58,410 --> 00:03:03,150
release<font color="#E5E5E5"> candidate six and then they'll</font>

69
00:03:00,780 --> 00:03:05,580
<font color="#CCCCCC">move into the final final process for</font>

70
00:03:03,150 --> 00:03:08,550
that and<font color="#CCCCCC"> i'll</font><font color="#E5E5E5"> talk about some</font><font color="#CCCCCC"> of the PHP</font>

71
00:03:05,580 --> 00:03:10,050
<font color="#E5E5E5">7 stuff later on</font><font color="#CCCCCC"> i'm going to kind of go</font>

72
00:03:08,550 --> 00:03:13,200
through the current stuff and then move

73
00:03:10,050 --> 00:03:14,520
on to<font color="#E5E5E5"> that stuff again the PHP 7 stuff</font>

74
00:03:13,200 --> 00:03:16,230
that<font color="#E5E5E5"> I'm talking</font><font color="#CCCCCC"> about is a little bit</font>

75
00:03:14,520 --> 00:03:19,080
more security focus there's lots of

76
00:03:16,230 --> 00:03:21,988
other features<font color="#CCCCCC"> that</font><font color="#E5E5E5"> come with it lots of</font>

77
00:03:19,080 --> 00:03:24,630
performance improvements as well so it's

78
00:03:21,989 --> 00:03:28,290
a it's going<font color="#E5E5E5"> to be a great step forward</font>

79
00:03:24,630 --> 00:03:31,650
for the language unfortunately PHP 53 is

80
00:03:28,290 --> 00:03:34,410
still the most widely installed 54 is is

81
00:03:31,650 --> 00:03:35,850
gaining on it this is mostly due to a

82
00:03:34,410 --> 00:03:38,220
lot of the shared hosting providers that

83
00:03:35,850 --> 00:03:39,390
are out there<font color="#E5E5E5"> you know they they put</font>

84
00:03:38,220 --> 00:03:41,070
those versions out there and their

85
00:03:39,390 --> 00:03:42,238
customers get used to it and then they

86
00:03:41,070 --> 00:03:44,910
don't<font color="#E5E5E5"> want to upgrade because they don't</font>

87
00:03:42,239 --> 00:03:47,340
want<font color="#E5E5E5"> to break things fortunately if</font>

88
00:03:44,910 --> 00:03:50,220
you're using<font color="#E5E5E5"> five for making the jump up</font>

89
00:03:47,340 --> 00:03:51,510
<font color="#CCCCCC">to 56 is really not too bad there's a</font>

90
00:03:50,220 --> 00:03:53,100
<font color="#CCCCCC">couple of deprecated things that you</font>

91
00:03:51,510 --> 00:03:54,630
kind of have to worry about but<font color="#E5E5E5"> on the</font>

92
00:03:53,100 --> 00:03:58,109
whole it's really not that bad of<font color="#CCCCCC"> a</font>

93
00:03:54,630 --> 00:04:01,230
transition<font color="#E5E5E5"> who just out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> curiosity who</font>

94
00:03:58,110 --> 00:04:06,330
is using some form of PHP applications

95
00:04:01,230 --> 00:04:09,929
in their environment awesome who doesn't

96
00:04:06,330 --> 00:04:12,959
<font color="#E5E5E5">like PHP no I'm just kidding yeah yeah</font>

97
00:04:09,930 --> 00:04:14,640
all right so they implement an

98
00:04:12,959 --> 00:04:17,790
unofficial support schedule a while back

99
00:04:14,640 --> 00:04:21,680
as you<font color="#E5E5E5"> can see PHP 54 is no longer</font>

100
00:04:17,790 --> 00:04:24,870
supported at all as of month or two ago

101
00:04:21,680 --> 00:04:27,270
55 is insecurity only and full support

102
00:04:24,870 --> 00:04:30,180
is<font color="#E5E5E5"> feelings about 56 is the only one in</font>

103
00:04:27,270 --> 00:04:31,620
full<font color="#CCCCCC"> support currently you can visit</font>

104
00:04:30,180 --> 00:04:33,450
that URL if you're interested in<font color="#E5E5E5"> the</font>

105
00:04:31,620 --> 00:04:35,790
current state<font color="#E5E5E5"> of it that red bar moves</font>

106
00:04:33,450 --> 00:04:39,180
as time goes on so you can<font color="#E5E5E5"> kind of see</font>

107
00:04:35,790 --> 00:04:41,610
<font color="#E5E5E5">where at</font><font color="#CCCCCC"> that against Evans coming up</font>

108
00:04:39,180 --> 00:04:43,260
pretty soon I do want<font color="#E5E5E5"> to give you kind</font>

109
00:04:41,610 --> 00:04:44,160
of an idea of some of the community

110
00:04:43,260 --> 00:04:46,680
around

111
00:04:44,160 --> 00:04:48,480
charity<font color="#CCCCCC"> and PHP we've got a</font><font color="#E5E5E5"> couple of</font>

112
00:04:46,680 --> 00:04:50,910
folks these ones up here at the top are

113
00:04:48,480 --> 00:04:53,280
a little bit<font color="#E5E5E5"> more focused on security</font><font color="#CCCCCC"> in</font>

114
00:04:50,910 --> 00:04:55,950
PHP whether<font color="#E5E5E5"> that's the actual language</font>

115
00:04:53,280 --> 00:04:58,830
or in the community kind<font color="#E5E5E5"> of encouraging</font>

116
00:04:55,950 --> 00:05:00,360
secure development Scott there on the

117
00:04:58,830 --> 00:05:02,969
end has been instrumental lately in

118
00:05:00,360 --> 00:05:05,000
getting the lib sodium extension put

119
00:05:02,970 --> 00:05:07,350
into PHP where it's completely supported

120
00:05:05,000 --> 00:05:09,710
there's a few little bug fixes going on

121
00:05:07,350 --> 00:05:12,450
right now but it's it's ready for use

122
00:05:09,710 --> 00:05:15,510
Anthony was instrumental in implementing

123
00:05:12,450 --> 00:05:17,039
<font color="#E5E5E5">the password hashing interface I'll talk</font>

124
00:05:15,510 --> 00:05:19,500
about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> a little bit a little bit</font>

125
00:05:17,040 --> 00:05:22,500
further<font color="#E5E5E5"> on but that</font><font color="#CCCCCC"> just essentially</font>

126
00:05:19,500 --> 00:05:24,480
makes it super simple for PHP developers

127
00:05:22,500 --> 00:05:26,790
to put in a single function to generate

128
00:05:24,480 --> 00:05:28,650
a decrypted password hash from whatever

129
00:05:26,790 --> 00:05:29,790
<font color="#E5E5E5">the user</font><font color="#CCCCCC"> inputs so don't have to worry</font>

130
00:05:28,650 --> 00:05:31,260
about the cost they don't have to worry

131
00:05:29,790 --> 00:05:32,970
about a valid salt it does all that

132
00:05:31,260 --> 00:05:35,219
generation behind the scenes it makes it

133
00:05:32,970 --> 00:05:37,650
super simple for the developer to put it

134
00:05:35,220 --> 00:05:39,900
in there these folks along the bottom

135
00:05:37,650 --> 00:05:42,719
have given different security talks at

136
00:05:39,900 --> 00:05:44,669
different conferences over time you<font color="#E5E5E5"> know</font>

137
00:05:42,720 --> 00:05:46,080
some of them are more general talks that

138
00:05:44,670 --> 00:05:48,060
are just kind of you know here's how to

139
00:05:46,080 --> 00:05:50,460
write secure code some of them are a

140
00:05:48,060 --> 00:05:52,560
<font color="#CCCCCC">little bit more about PHP the language</font>

141
00:05:50,460 --> 00:05:54,359
you know<font color="#E5E5E5"> it</font><font color="#CCCCCC"> just depends there's there's</font>

142
00:05:52,560 --> 00:05:57,210
been a wide variety of them more

143
00:05:54,360 --> 00:05:58,830
recently fortunately it's been picking

144
00:05:57,210 --> 00:06:00,659
up in frequency it seems like there's

145
00:05:58,830 --> 00:06:02,460
not<font color="#E5E5E5"> a PHP conference that goes by these</font>

146
00:06:00,660 --> 00:06:07,230
days without at least one security talk

147
00:06:02,460 --> 00:06:08,489
so it's always<font color="#E5E5E5"> good I do want to talk</font><font color="#CCCCCC"> a</font>

148
00:06:07,230 --> 00:06:10,740
little bit about some<font color="#E5E5E5"> of the current</font>

149
00:06:08,490 --> 00:06:11,850
libraries and tooling this is just<font color="#E5E5E5"> kind</font>

150
00:06:10,740 --> 00:06:16,110
of a little<font color="#CCCCCC"> bit more around the peak of</font>

151
00:06:11,850 --> 00:06:19,350
PHP ecosystem first off who that uses

152
00:06:16,110 --> 00:06:21,830
PHP has heard<font color="#E5E5E5"> of composer or really</font>

153
00:06:19,350 --> 00:06:25,110
anybody that's awesome<font color="#E5E5E5"> that's great</font>

154
00:06:21,830 --> 00:06:26,880
that's surprising actually you know<font color="#E5E5E5"> like</font>

155
00:06:25,110 --> 00:06:28,410
I'll speak at PHP conferences and I'll

156
00:06:26,880 --> 00:06:30,419
<font color="#E5E5E5">ask the same question and i might get</font>

157
00:06:28,410 --> 00:06:34,500
about the same<font color="#E5E5E5"> number of hands which is</font>

158
00:06:30,419 --> 00:06:35,460
kind<font color="#E5E5E5"> of disconcerting so just real quick</font>

159
00:06:34,500 --> 00:06:38,430
for those of you that aren't familiar

160
00:06:35,460 --> 00:06:40,380
with with composer it's<font color="#E5E5E5"> really the</font>

161
00:06:38,430 --> 00:06:43,110
package manager of a pair was supposed

162
00:06:40,380 --> 00:06:46,680
to be the old pair packages were a

163
00:06:43,110 --> 00:06:48,630
little<font color="#E5E5E5"> bit more refined down they had to</font>

164
00:06:46,680 --> 00:06:49,830
go through a vetting process and you

165
00:06:48,630 --> 00:06:52,050
know they<font color="#E5E5E5"> had to be a certain structure</font>

166
00:06:49,830 --> 00:06:54,000
all that kind of stuff which<font color="#CCCCCC"> was a great</font>

167
00:06:52,050 --> 00:06:56,280
<font color="#CCCCCC">idea but it doesn't really work that</font>

168
00:06:54,000 --> 00:06:59,160
well anymore for what PHP has become

169
00:06:56,280 --> 00:07:01,020
where the community<font color="#E5E5E5"> is at with</font><font color="#CCCCCC"> composure</font>

170
00:06:59,160 --> 00:07:03,150
you can just directly install stuff

171
00:07:01,020 --> 00:07:06,330
again you have<font color="#CCCCCC"> to be careful with the</font>

172
00:07:03,150 --> 00:07:08,638
whole 10 vulnerable components thing you

173
00:07:06,330 --> 00:07:10,590
know it's been<font color="#E5E5E5"> a wasp list and kind of</font>

174
00:07:08,639 --> 00:07:12,290
<font color="#E5E5E5">do code reviews on what you're what</font>

175
00:07:10,590 --> 00:07:14,729
you're using all<font color="#E5E5E5"> that kind of good stuff</font>

176
00:07:12,290 --> 00:07:16,320
but<font color="#E5E5E5"> composure makes it really easy to</font>

177
00:07:14,730 --> 00:07:19,050
pull in it's a completely<font color="#CCCCCC"> open source</font>

178
00:07:16,320 --> 00:07:20,870
project and the use of it<font color="#CCCCCC"> has exploded</font>

179
00:07:19,050 --> 00:07:22,950
<font color="#CCCCCC">over the past couple of years I think</font>

180
00:07:20,870 --> 00:07:26,639
composers really only been around for

181
00:07:22,950 --> 00:07:28,620
<font color="#CCCCCC">three years four years something like</font>

182
00:07:26,639 --> 00:07:30,570
<font color="#CCCCCC">that and it's just I mean it's it's</font>

183
00:07:28,620 --> 00:07:33,120
revolutionized the way that PHP is

184
00:07:30,570 --> 00:07:35,580
written these days you know there's

185
00:07:33,120 --> 00:07:37,350
there was a huge movement to kind<font color="#E5E5E5"> of</font>

186
00:07:35,580 --> 00:07:39,270
package based development versus these

187
00:07:37,350 --> 00:07:40,440
giant monolith of you know here's a

188
00:07:39,270 --> 00:07:43,229
framework go write your<font color="#CCCCCC"> application</font>

189
00:07:40,440 --> 00:07:44,730
inside of it now there's actually

190
00:07:43,230 --> 00:07:47,310
several frameworks that make use of

191
00:07:44,730 --> 00:07:49,470
composer to pull in different components

192
00:07:47,310 --> 00:07:51,180
from other frameworks and kind<font color="#E5E5E5"> of mash</font>

193
00:07:49,470 --> 00:07:53,340
them together and make another custom

194
00:07:51,180 --> 00:07:56,250
frame work out of it so the whole

195
00:07:53,340 --> 00:07:58,138
<font color="#E5E5E5">community is really embraced it the</font>

196
00:07:56,250 --> 00:08:00,300
package of site is where it pulls all<font color="#CCCCCC"> of</font>

197
00:07:58,139 --> 00:08:02,400
its source from you can actually<font color="#E5E5E5"> link</font>

198
00:08:00,300 --> 00:08:04,200
your github repo directly to pack adjust

199
00:08:02,400 --> 00:08:07,049
and so it just pulls it indirectly when

200
00:08:04,200 --> 00:08:09,419
you install it through composer and it

201
00:08:07,050 --> 00:08:10,770
makes it<font color="#E5E5E5"> as easy as kind of one command</font>

202
00:08:09,419 --> 00:08:13,140
you know<font color="#CCCCCC"> you'd see there an install or</font>

203
00:08:10,770 --> 00:08:14,700
an update you can<font color="#CCCCCC"> do a few more things</font>

204
00:08:13,140 --> 00:08:17,580
with<font color="#E5E5E5"> it but those are the two the two</font>

205
00:08:14,700 --> 00:08:20,150
<font color="#E5E5E5">main ones it'll like some of the other</font>

206
00:08:17,580 --> 00:08:22,409
<font color="#E5E5E5">package managers for other other</font>

207
00:08:20,150 --> 00:08:24,359
languages it writes a lock file that

208
00:08:22,410 --> 00:08:26,070
kind<font color="#CCCCCC"> of locks down the versions that you</font>

209
00:08:24,360 --> 00:08:27,990
have installed<font color="#E5E5E5"> so if you run an update</font>

210
00:08:26,070 --> 00:08:30,349
it uses those locks instead of

211
00:08:27,990 --> 00:08:32,130
reinstalling the latest versions

212
00:08:30,350 --> 00:08:33,719
unfortunately like<font color="#E5E5E5"> I mentioned there's</font>

213
00:08:32,130 --> 00:08:35,429
also no vetting of<font color="#CCCCCC"> the packages that are</font>

214
00:08:33,719 --> 00:08:37,440
on there so you really have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font>

215
00:08:35,429 --> 00:08:40,319
careful with what you're using and you

216
00:08:37,440 --> 00:08:41,969
know how the tool is managed you know

217
00:08:40,320 --> 00:08:43,409
how many releases it has you<font color="#E5E5E5"> know</font>

218
00:08:41,969 --> 00:08:45,810
somebody<font color="#E5E5E5"> choked earlier about how many</font>

219
00:08:43,409 --> 00:08:47,670
<font color="#E5E5E5">stars it has on github you know I mean</font>

220
00:08:45,810 --> 00:08:50,310
that that kind<font color="#E5E5E5"> of stuff you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to take</font>

221
00:08:47,670 --> 00:08:52,110
any consideration there are some more

222
00:08:50,310 --> 00:08:54,479
standard libraries and<font color="#E5E5E5"> I'll mention some</font>

223
00:08:52,110 --> 00:08:55,650
of<font color="#E5E5E5"> them here in a second that are widely</font>

224
00:08:54,480 --> 00:08:57,330
used that are a little<font color="#E5E5E5"> bit more</font>

225
00:08:55,650 --> 00:08:59,910
respected versus<font color="#E5E5E5"> just you know the</font>

226
00:08:57,330 --> 00:09:02,160
random one-off input validation library

227
00:08:59,910 --> 00:09:05,089
that somebody wrote you know a year<font color="#CCCCCC"> ago</font>

228
00:09:02,160 --> 00:09:07,199
and hasn't had any<font color="#E5E5E5"> update since then</font>

229
00:09:05,089 --> 00:09:07,980
there are<font color="#CCCCCC"> some major frameworks out</font>

230
00:09:07,200 --> 00:09:10,230
there

231
00:09:07,980 --> 00:09:13,110
then framework<font color="#E5E5E5"> symphony and we're</font>

232
00:09:10,230 --> 00:09:16,890
recently laravel they've all kind<font color="#E5E5E5"> of got</font>

233
00:09:13,110 --> 00:09:18,510
<font color="#E5E5E5">a focus on security stuff the larval</font>

234
00:09:16,890 --> 00:09:21,930
framework is a built on a lot of the

235
00:09:18,510 --> 00:09:24,390
symphony components and all of these

236
00:09:21,930 --> 00:09:26,010
pretty much have security advisories and

237
00:09:24,390 --> 00:09:28,560
updates that they'll post from time to

238
00:09:26,010 --> 00:09:30,120
time symphony and<font color="#CCCCCC"> zen framework are a</font>

239
00:09:28,560 --> 00:09:31,560
little bit<font color="#E5E5E5"> better about it the larval</font>

240
00:09:30,120 --> 00:09:33,300
stuff you know because it's kind<font color="#E5E5E5"> of</font>

241
00:09:31,560 --> 00:09:37,319
based on<font color="#E5E5E5"> symphony gets some of that</font><font color="#CCCCCC"> and</font>

242
00:09:33,300 --> 00:09:39,050
inherit some of it but they're<font color="#E5E5E5"> they're</font>

243
00:09:37,320 --> 00:09:41,880
usually pretty good about it too

244
00:09:39,050 --> 00:09:44,040
<font color="#CCCCCC">symphony actually had I want to</font><font color="#E5E5E5"> say</font>

245
00:09:41,880 --> 00:09:46,260
<font color="#CCCCCC">about a year or two ago they had a fully</font>

246
00:09:44,040 --> 00:09:49,020
<font color="#E5E5E5">paid security audit of all of the code</font>

247
00:09:46,260 --> 00:09:50,850
in their code base at<font color="#CCCCCC"> the time I think</font>

248
00:09:49,020 --> 00:09:52,470
<font color="#CCCCCC">it took him a couple of</font><font color="#E5E5E5"> months to go</font>

249
00:09:50,850 --> 00:09:56,550
through all<font color="#CCCCCC"> the code symphony is not a</font>

250
00:09:52,470 --> 00:09:58,380
small<font color="#E5E5E5"> framework but</font><font color="#CCCCCC"> but they did have</font>

251
00:09:56,550 --> 00:10:02,609
that complete audit they fix tons of

252
00:09:58,380 --> 00:10:04,710
issues in there and<font color="#E5E5E5"> I believe as of six</font>

253
00:10:02,610 --> 00:10:08,250
<font color="#E5E5E5">months ago they got all of them resolved</font>

254
00:10:04,710 --> 00:10:11,850
now in version<font color="#E5E5E5"> to version 3 is coming</font>

255
00:10:08,250 --> 00:10:13,680
out in about a month so which basically

256
00:10:11,850 --> 00:10:16,410
is<font color="#E5E5E5"> version 2 without some of the</font>

257
00:10:13,680 --> 00:10:17,849
backwards compatibility stuff so taking

258
00:10:16,410 --> 00:10:22,500
out stuff rather than adding new

259
00:10:17,850 --> 00:10:23,880
features good thing there is a database

260
00:10:22,500 --> 00:10:26,970
of vulnerable components that's

261
00:10:23,880 --> 00:10:29,520
maintained out there mostly it's for

262
00:10:26,970 --> 00:10:32,100
larger projects frameworks you know

263
00:10:29,520 --> 00:10:34,230
major tooling that's out there this is

264
00:10:32,100 --> 00:10:36,090
for for libraries and stuff not

265
00:10:34,230 --> 00:10:38,490
necessarily like<font color="#E5E5E5"> for WordPress or Drupal</font>

266
00:10:36,090 --> 00:10:40,740
or anything like that those those

267
00:10:38,490 --> 00:10:43,260
projects specifically they kind of

268
00:10:40,740 --> 00:10:45,120
maintain their own stuff but there<font color="#E5E5E5"> is</font>

269
00:10:43,260 --> 00:10:47,069
something that hooks into composer that

270
00:10:45,120 --> 00:10:49,350
will actually check that repository and

271
00:10:47,070 --> 00:10:51,120
say hey you're trying to install you

272
00:10:49,350 --> 00:10:53,040
know this component from<font color="#CCCCCC"> Symphony well</font>

273
00:10:51,120 --> 00:10:56,010
it's it's got known vulnerabilities you

274
00:10:53,040 --> 00:10:57,300
might want to update or potentially it

275
00:10:56,010 --> 00:11:01,020
won't even install it and it just

276
00:10:57,300 --> 00:11:03,719
restricts it completely so real quick

277
00:11:01,020 --> 00:11:05,160
the Drupal project the I'm going to talk

278
00:11:03,720 --> 00:11:07,860
<font color="#E5E5E5">about Drupal and WordPress just real</font>

279
00:11:05,160 --> 00:11:09,020
quick because they are the<font color="#E5E5E5"> two major PHP</font>

280
00:11:07,860 --> 00:11:11,820
based projects that are out there

281
00:11:09,020 --> 00:11:13,270
they're the reason that that statistic

282
00:11:11,820 --> 00:11:16,330
is so high of how

283
00:11:13,270 --> 00:11:18,910
much of the web is powered by PHP Drupal

284
00:11:16,330 --> 00:11:21,190
started about 15 years ago there<font color="#CCCCCC"> are</font>

285
00:11:18,910 --> 00:11:23,920
several major services and sites that

286
00:11:21,190 --> 00:11:26,230
use it along<font color="#CCCCCC"> with</font><font color="#E5E5E5"> you know just several</font>

287
00:11:23,920 --> 00:11:28,599
smaller smaller applications of the

288
00:11:26,230 --> 00:11:31,660
whitehouse gov site i believe is still

289
00:11:28,600 --> 00:11:34,360
based on a mostly stock version of

290
00:11:31,660 --> 00:11:37,300
Drupal obviously they've customized you

291
00:11:34,360 --> 00:11:39,070
know the layout and plugins and all that

292
00:11:37,300 --> 00:11:41,229
kind of good stuff but and they<font color="#CCCCCC"> actually</font>

293
00:11:39,070 --> 00:11:43,600
<font color="#CCCCCC">had the the</font><font color="#E5E5E5"> Drupal foundation come in</font>

294
00:11:41,230 --> 00:11:46,780
and<font color="#E5E5E5"> harden it</font><font color="#CCCCCC"> help with hardening of it</font>

295
00:11:43,600 --> 00:11:48,250
as<font color="#E5E5E5"> well they've been renewing their</font>

296
00:11:46,780 --> 00:11:50,290
security efforts in the past<font color="#E5E5E5"> couple of</font>

297
00:11:48,250 --> 00:11:51,880
years they have a dedicated team of

298
00:11:50,290 --> 00:11:53,829
people as a part of the project that

299
00:11:51,880 --> 00:11:56,620
actually just review things for security

300
00:11:53,830 --> 00:11:58,570
reasons and check the you know check the

301
00:11:56,620 --> 00:12:02,710
different components of<font color="#E5E5E5"> the Drupal</font>

302
00:11:58,570 --> 00:12:04,810
itself as well<font color="#CCCCCC"> as other extensions that</font>

303
00:12:02,710 --> 00:12:06,460
are you know kind<font color="#E5E5E5"> of popular in the</font>

304
00:12:04,810 --> 00:12:09,250
Drupal community they'll actually do

305
00:12:06,460 --> 00:12:11,050
code reviews on those as well they issue

306
00:12:09,250 --> 00:12:13,030
security advisories they have their

307
00:12:11,050 --> 00:12:15,699
security<font color="#CCCCCC"> add email address all that kind</font>

308
00:12:13,030 --> 00:12:18,670
of good stuff and it goes<font color="#E5E5E5"> to that that</font>

309
00:12:15,700 --> 00:12:21,370
specific team and like I mentioned they

310
00:12:18,670 --> 00:12:23,740
do the core<font color="#CCCCCC"> and contributed components</font>

311
00:12:21,370 --> 00:12:28,030
you<font color="#E5E5E5"> can find out</font><font color="#CCCCCC"> more about it if you go</font>

312
00:12:23,740 --> 00:12:31,360
<font color="#E5E5E5">to the security team address</font><font color="#CCCCCC"> WordPress</font>

313
00:12:28,030 --> 00:12:35,829
is<font color="#E5E5E5"> about the same same age it's a little</font>

314
00:12:31,360 --> 00:12:37,420
<font color="#E5E5E5">bit younger there's about fifty eight</font>

315
00:12:35,830 --> 00:12:40,020
percent of the sites<font color="#E5E5E5"> that use content</font>

316
00:12:37,420 --> 00:12:42,310
management systems are using wordpress

317
00:12:40,020 --> 00:12:43,990
the early days of<font color="#CCCCCC"> WordPress it was a</font>

318
00:12:42,310 --> 00:12:45,369
<font color="#E5E5E5">little bit more</font><font color="#CCCCCC"> of a kind</font><font color="#E5E5E5"> of a blogging</font>

319
00:12:43,990 --> 00:12:46,780
platform and I think there's a lot<font color="#CCCCCC"> of</font>

320
00:12:45,370 --> 00:12:49,090
<font color="#E5E5E5">people out there that still think of it</font>

321
00:12:46,780 --> 00:12:51,189
that<font color="#E5E5E5"> way but in more recent years they</font>

322
00:12:49,090 --> 00:12:54,160
really push to<font color="#E5E5E5"> make it more of a general</font>

323
00:12:51,190 --> 00:12:55,930
content management system a lot of the

324
00:12:54,160 --> 00:12:58,360
plugins that kind of implemented that

325
00:12:55,930 --> 00:12:59,739
functionality inside of wordpress some

326
00:12:58,360 --> 00:13:02,410
of that functionality has kind of been

327
00:12:59,740 --> 00:13:03,820
absorbed by<font color="#CCCCCC"> the word press corps and so</font>

328
00:13:02,410 --> 00:13:06,100
they make it a little bit more generic

329
00:13:03,820 --> 00:13:09,400
than just hears you know text<font color="#E5E5E5"> content</font>

330
00:13:06,100 --> 00:13:11,710
for a blog<font color="#CCCCCC"> post or whatever they do you</font>

331
00:13:09,400 --> 00:13:14,110
have their security at they don't<font color="#CCCCCC"> have a</font>

332
00:13:11,710 --> 00:13:15,940
dedicated group<font color="#CCCCCC"> of people that work on</font>

333
00:13:14,110 --> 00:13:18,430
security stuff like the<font color="#E5E5E5"> drupal group</font>

334
00:13:15,940 --> 00:13:20,170
does but they do have a lot of<font color="#E5E5E5"> people</font>

335
00:13:18,430 --> 00:13:21,849
<font color="#E5E5E5">that are more security minded that kind</font>

336
00:13:20,170 --> 00:13:24,589
of go over some of the<font color="#E5E5E5"> new wordpress</font>

337
00:13:21,850 --> 00:13:28,880
features and you know new code

338
00:13:24,590 --> 00:13:31,160
put in they do have security advisories

339
00:13:28,880 --> 00:13:34,130
that are<font color="#CCCCCC"> issued different updates they</font>

340
00:13:31,160 --> 00:13:37,339
work on<font color="#E5E5E5"> the the core code as well as</font>

341
00:13:34,130 --> 00:13:39,230
contributing code but not the vast

342
00:13:37,340 --> 00:13:41,660
amount of WordPress plugins that are out

343
00:13:39,230 --> 00:13:43,340
there a<font color="#E5E5E5"> lot of those some of</font><font color="#CCCCCC"> the major</font>

344
00:13:41,660 --> 00:13:46,699
ones kind of go through code reviews

345
00:13:43,340 --> 00:13:48,950
security-related code reviews but there

346
00:13:46,700 --> 00:13:50,480
<font color="#CCCCCC">are tons and</font><font color="#E5E5E5"> tons of them I mean it you</font>

347
00:13:48,950 --> 00:13:53,630
know you<font color="#E5E5E5"> hear about them pretty much</font>

348
00:13:50,480 --> 00:13:55,700
every day unfortunately poorly written

349
00:13:53,630 --> 00:13:58,790
<font color="#E5E5E5">brilliant plug-ins for WordPress that</font>

350
00:13:55,700 --> 00:14:03,860
just leave a system completely

351
00:13:58,790 --> 00:14:07,550
vulnerable and nobody had any idea but<font color="#E5E5E5"> I</font>

352
00:14:03,860 --> 00:14:09,890
<font color="#E5E5E5">think the I forget where I read it but</font>

353
00:14:07,550 --> 00:14:13,040
there was a statistic that I saw that

354
00:14:09,890 --> 00:14:14,900
said<font color="#CCCCCC"> that probably three fourths of the</font>

355
00:14:13,040 --> 00:14:17,120
hacks that happen on WordPress sites are

356
00:14:14,900 --> 00:14:19,100
because of insecure plugins and not

357
00:14:17,120 --> 00:14:24,320
<font color="#CCCCCC">necessarily the core of WordPress these</font>

358
00:14:19,100 --> 00:14:27,020
days they are not known for fully

359
00:14:24,320 --> 00:14:28,910
embracing more modern PHP stuff they

360
00:14:27,020 --> 00:14:31,250
have a lot of code that's backwards

361
00:14:28,910 --> 00:14:33,260
compatible and so along with that in the

362
00:14:31,250 --> 00:14:35,570
word press corps that kind<font color="#E5E5E5"> of comes some</font>

363
00:14:33,260 --> 00:14:39,380
security concerns about you know if

364
00:14:35,570 --> 00:14:41,960
you're running<font color="#E5E5E5"> this on 53 or 52 you know</font>

365
00:14:39,380 --> 00:14:43,460
because yes it does still<font color="#E5E5E5"> wear 252 even</font>

366
00:14:41,960 --> 00:14:47,110
though it's been completely<font color="#E5E5E5"> out of</font>

367
00:14:43,460 --> 00:14:48,860
service for<font color="#CCCCCC"> four years now so</font>

368
00:14:47,110 --> 00:14:50,510
unfortunately they still have code that

369
00:14:48,860 --> 00:14:53,240
works with that so if you're running<font color="#E5E5E5"> on</font>

370
00:14:50,510 --> 00:14:56,420
five to your yeah there's tons of tons

371
00:14:53,240 --> 00:14:57,980
of vulnerabilities in there yeah

372
00:14:56,420 --> 00:15:00,110
two-thirds of the issues sorry not

373
00:14:57,980 --> 00:15:04,130
three-fourths<font color="#E5E5E5"> two-thirds foot close</font>

374
00:15:00,110 --> 00:15:05,450
pretty close so just real quick some of

375
00:15:04,130 --> 00:15:08,000
the libraries and tooling that are out

376
00:15:05,450 --> 00:15:10,280
there<font color="#CCCCCC"> that have kind of been have kind</font>

377
00:15:08,000 --> 00:15:13,850
of come to the forefront as far as good

378
00:15:10,280 --> 00:15:15,410
tools to use IRC maxell that's Anthony

379
00:15:13,850 --> 00:15:16,610
Farrar that<font color="#E5E5E5"> I mentioned earlier he's</font>

380
00:15:15,410 --> 00:15:19,630
come<font color="#CCCCCC"> up with a couple of different</font>

381
00:15:16,610 --> 00:15:22,190
things he actually came up<font color="#E5E5E5"> with a</font>

382
00:15:19,630 --> 00:15:24,980
polyfill library backwards compatibility

383
00:15:22,190 --> 00:15:27,830
library for the<font color="#CCCCCC"> password</font><font color="#E5E5E5"> hashing so you</font>

384
00:15:24,980 --> 00:15:30,730
can use it<font color="#E5E5E5"> in versions prior to 55 that</font>

385
00:15:27,830 --> 00:15:33,960
<font color="#E5E5E5">it was introduced so you know try to</font>

386
00:15:30,730 --> 00:15:37,140
make that easier for older versions

387
00:15:33,960 --> 00:15:41,070
since it's still<font color="#E5E5E5"> 53 54 you know share</font>

388
00:15:37,140 --> 00:15:44,370
hosting providers the ionized scanner

389
00:15:41,070 --> 00:15:46,910
that will look at the php.ini file and

390
00:15:44,370 --> 00:15:49,620
check it against good security practices

391
00:15:46,910 --> 00:15:52,290
so you can<font color="#CCCCCC"> verify that</font><font color="#E5E5E5"> you're actually</font>

392
00:15:49,620 --> 00:15:54,120
following good practices there that's

393
00:15:52,290 --> 00:15:56,490
<font color="#E5E5E5">kind of something that's been overlooked</font>

394
00:15:54,120 --> 00:15:58,530
in the past a lot<font color="#CCCCCC"> of people just you</font>

395
00:15:56,490 --> 00:16:00,600
know they<font color="#CCCCCC"> worry about validating you</font>

396
00:15:58,530 --> 00:16:01,860
know user input and<font color="#CCCCCC"> worry about</font><font color="#E5E5E5"> the</font>

397
00:16:00,600 --> 00:16:02,820
application<font color="#CCCCCC"> level but they don't</font>

398
00:16:01,860 --> 00:16:05,310
<font color="#E5E5E5">actually think about the server</font>

399
00:16:02,820 --> 00:16:07,140
configuration level there's a lot<font color="#CCCCCC"> of</font>

400
00:16:05,310 --> 00:16:10,380
default settings that come in<font color="#E5E5E5"> the</font>

401
00:16:07,140 --> 00:16:12,600
<font color="#E5E5E5">php.ini that are not secure so if you</font>

402
00:16:10,380 --> 00:16:14,250
haven't<font color="#E5E5E5"> checked your I&I configuration</font>

403
00:16:12,600 --> 00:16:17,850
and you're using PHP<font color="#E5E5E5"> I highly recommend</font>

404
00:16:14,250 --> 00:16:19,650
checking that out or or at least you

405
00:16:17,850 --> 00:16:21,960
know going<font color="#CCCCCC"> through and validating what</font>

406
00:16:19,650 --> 00:16:23,670
your current settings are there's lots

407
00:16:21,960 --> 00:16:26,100
of things that can<font color="#CCCCCC"> be done to kind of</font>

408
00:16:23,670 --> 00:16:29,640
harden it and it's super simple change

409
00:16:26,100 --> 00:16:30,900
the file research server the security

410
00:16:29,640 --> 00:16:32,280
check<font color="#CCCCCC"> er down there is the one</font><font color="#E5E5E5"> that i</font>

411
00:16:30,900 --> 00:16:34,740
mentioned that goes and looks at<font color="#E5E5E5"> that</font>

412
00:16:32,280 --> 00:16:36,420
list of vulnerable components for like

413
00:16:34,740 --> 00:16:38,400
the frameworks and the major projects

414
00:16:36,420 --> 00:16:41,670
that will actually prevent the

415
00:16:38,400 --> 00:16:43,290
installation of vulnerable components so

416
00:16:41,670 --> 00:16:47,370
it's it's pretty nice to introduce<font color="#E5E5E5"> in</font>

417
00:16:43,290 --> 00:16:48,839
there the diffuse PHP encryption is one

418
00:16:47,370 --> 00:16:50,910
that's actually been vetted by several

419
00:16:48,840 --> 00:16:52,920
<font color="#CCCCCC">infosec community members it's super</font>

420
00:16:50,910 --> 00:16:55,069
simple<font color="#E5E5E5"> encryption that you can just</font><font color="#CCCCCC"> drop</font>

421
00:16:52,920 --> 00:16:57,540
<font color="#CCCCCC">into your drop into</font><font color="#E5E5E5"> your application</font>

422
00:16:55,070 --> 00:16:59,400
it's not as full feature to some of the

423
00:16:57,540 --> 00:17:01,199
<font color="#CCCCCC">other ones out</font><font color="#E5E5E5"> there but the the goal</font>

424
00:16:59,400 --> 00:17:03,420
there is to make it simple is to make it

425
00:17:01,200 --> 00:17:05,970
easy to just drop this stuff in and run

426
00:17:03,420 --> 00:17:07,550
with it so and<font color="#E5E5E5"> there's plenty of other</font>

427
00:17:05,970 --> 00:17:10,560
libraries out there that are more

428
00:17:07,550 --> 00:17:14,099
verbose in their syntax and you know how

429
00:17:10,560 --> 00:17:15,990
they're structured that<font color="#CCCCCC"> last one twig</font>

430
00:17:14,099 --> 00:17:18,958
has kind of become<font color="#CCCCCC"> the standard</font><font color="#E5E5E5"> for</font>

431
00:17:15,990 --> 00:17:21,510
templating in the PHP world obviously

432
00:17:18,959 --> 00:17:24,209
<font color="#CCCCCC">you can just use plain PHP and help put</font>

433
00:17:21,510 --> 00:17:27,869
strings and everything but twig does

434
00:17:24,209 --> 00:17:29,640
provide context sensitive escaping so

435
00:17:27,869 --> 00:17:31,469
you run all<font color="#CCCCCC"> of your code through the</font>

436
00:17:29,640 --> 00:17:33,750
template parsing it actually does lexing

437
00:17:31,470 --> 00:17:36,000
and parsing of the<font color="#CCCCCC"> template that you</font>

438
00:17:33,750 --> 00:17:37,290
pass in so it understands if you're

439
00:17:36,000 --> 00:17:38,670
<font color="#E5E5E5">calling a variable inside of a</font>

440
00:17:37,290 --> 00:17:40,950
<font color="#CCCCCC">JavaScript string that it needs to</font>

441
00:17:38,670 --> 00:17:42,590
<font color="#E5E5E5">escape it a certain way versus you know</font>

442
00:17:40,950 --> 00:17:45,890
<font color="#E5E5E5">just regular HTML</font><font color="#CCCCCC"> out</font>

443
00:17:42,590 --> 00:17:48,678
scaping it has all sorts of tongue fun

444
00:17:45,890 --> 00:17:50,450
features and oh and all<font color="#E5E5E5"> of these can be</font>

445
00:17:48,679 --> 00:17:51,830
installed through<font color="#E5E5E5"> composer you don't</font>

446
00:17:50,450 --> 00:17:54,230
have to download them and manually

447
00:17:51,830 --> 00:17:55,730
include them or<font color="#CCCCCC"> anything composer</font>

448
00:17:54,230 --> 00:17:57,230
autoload will just auto load the

449
00:17:55,730 --> 00:18:00,950
libraries for you you can just<font color="#E5E5E5"> use in</font>

450
00:17:57,230 --> 00:18:02,210
that way so real quick<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go</font>

451
00:18:00,950 --> 00:18:04,460
through some<font color="#CCCCCC"> of the current features in</font>

452
00:18:02,210 --> 00:18:08,419
PHP this is most of these are 55 and

453
00:18:04,460 --> 00:18:10,429
above just because that's you know

454
00:18:08,419 --> 00:18:12,320
that's the most recent supported version

455
00:18:10,429 --> 00:18:15,799
<font color="#E5E5E5">obviously it's justin i think it's just</font>

456
00:18:12,320 --> 00:18:18,230
<font color="#CCCCCC">insecurities fixed mode now but so the</font>

457
00:18:15,799 --> 00:18:19,940
<font color="#E5E5E5">native password hashing it's a little</font>

458
00:18:18,230 --> 00:18:22,940
bit more user-friendly version of crypt

459
00:18:19,940 --> 00:18:25,220
you could do be crypt hashing encrypt if

460
00:18:22,940 --> 00:18:26,870
you wanted to and<font color="#E5E5E5"> you still can really</font>

461
00:18:25,220 --> 00:18:31,820
you just<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to pass in the right</font>

462
00:18:26,870 --> 00:18:33,678
string for the start of<font color="#CCCCCC"> the hash and by</font>

463
00:18:31,820 --> 00:18:35,590
<font color="#E5E5E5">default it is bcrypt for the native</font>

464
00:18:33,679 --> 00:18:38,390
password hashing with a cost level of 10

465
00:18:35,590 --> 00:18:40,699
you<font color="#E5E5E5"> can configure that cost level if you</font>

466
00:18:38,390 --> 00:18:42,470
want something higher it's just an

467
00:18:40,700 --> 00:18:45,679
additional option on the password

468
00:18:42,470 --> 00:18:47,870
hashing call it introduced three new

469
00:18:45,679 --> 00:18:50,419
functions password hash password verify

470
00:18:47,870 --> 00:18:52,428
and password needs rehash the password

471
00:18:50,419 --> 00:18:54,799
<font color="#E5E5E5">hashes used to generate the hash itself</font>

472
00:18:52,429 --> 00:18:56,270
you pass in the<font color="#E5E5E5"> password string that</font>

473
00:18:54,799 --> 00:18:59,120
they give<font color="#CCCCCC"> you and it just spits back out</font>

474
00:18:56,270 --> 00:19:01,789
the hash for you password verified takes

475
00:18:59,120 --> 00:19:03,620
the password string input and compares

476
00:19:01,789 --> 00:19:06,379
it to the<font color="#E5E5E5"> hash that you give it so you</font>

477
00:19:03,620 --> 00:19:08,959
<font color="#E5E5E5">don't have to do any weird weird</font>

478
00:19:06,380 --> 00:19:10,340
evaluation there there was a lot of

479
00:19:08,960 --> 00:19:12,679
<font color="#CCCCCC">people that</font><font color="#E5E5E5"> were using the triple equals</font>

480
00:19:10,340 --> 00:19:15,350
for that and that's<font color="#E5E5E5"> an PHP that was</font>

481
00:19:12,679 --> 00:19:16,909
vulnerable to a timing attack issue so

482
00:19:15,350 --> 00:19:20,510
if you're comparing hashes there's also

483
00:19:16,909 --> 00:19:24,710
a hash equals function that's in 55 I

484
00:19:20,510 --> 00:19:27,320
think or 56 might be 56 that does timing

485
00:19:24,710 --> 00:19:30,380
<font color="#CCCCCC">attacks safe comparison of strings hash</font>

486
00:19:27,320 --> 00:19:31,820
strings like that normally<font color="#E5E5E5"> you don't</font>

487
00:19:30,380 --> 00:19:36,350
have to worry<font color="#CCCCCC"> as much if</font><font color="#E5E5E5"> you're using</font>

488
00:19:31,820 --> 00:19:38,450
<font color="#E5E5E5">the triple equals but you know yeah that</font>

489
00:19:36,350 --> 00:19:40,219
password<font color="#E5E5E5"> verify removes any of those</font>

490
00:19:38,450 --> 00:19:42,740
<font color="#CCCCCC">issues that does it behind the scenes</font>

491
00:19:40,220 --> 00:19:46,730
takes care of it the password<font color="#E5E5E5"> needs</font>

492
00:19:42,740 --> 00:19:48,350
rehash so right now whenever<font color="#E5E5E5"> you call</font>

493
00:19:46,730 --> 00:19:50,029
the password hash function you can see

494
00:19:48,350 --> 00:19:52,250
<font color="#CCCCCC">that you pass in this password default</font>

495
00:19:50,029 --> 00:19:55,360
right now the password default is set to

496
00:19:52,250 --> 00:19:57,250
PQ bcrypt but is

497
00:19:55,360 --> 00:19:58,570
gets broken if there's a flaw found in

498
00:19:57,250 --> 00:20:00,400
it in the<font color="#E5E5E5"> future and they want to say</font>

499
00:19:58,570 --> 00:20:02,200
okay nobody use bcrypt anymore we don't

500
00:20:00,400 --> 00:20:04,090
<font color="#E5E5E5">want to do</font><font color="#CCCCCC"> that anymore</font><font color="#E5E5E5"> they can change</font>

501
00:20:02,200 --> 00:20:07,150
<font color="#E5E5E5">that password defaults of something else</font>

502
00:20:04,090 --> 00:20:08,290
to some other hashing algorithm and you

503
00:20:07,150 --> 00:20:10,240
don't have<font color="#E5E5E5"> to go in and change your code</font>

504
00:20:08,290 --> 00:20:12,399
at<font color="#E5E5E5"> all it just says okay you know that's</font>

505
00:20:10,240 --> 00:20:15,490
that's magically the password default

506
00:20:12,400 --> 00:20:18,970
now that password needs rehash should be

507
00:20:15,490 --> 00:20:20,679
called<font color="#E5E5E5"> on those those old passwords the</font>

508
00:20:18,970 --> 00:20:22,420
old hashes that you have and it'll say

509
00:20:20,679 --> 00:20:25,090
okay this doesn't match the right format

510
00:20:22,420 --> 00:20:27,010
so you need to go ahead and rehash that

511
00:20:25,090 --> 00:20:30,668
password and this is just<font color="#E5E5E5"> an easy way of</font>

512
00:20:27,010 --> 00:20:32,679
saying yes<font color="#E5E5E5"> or no basically and you can</font>

513
00:20:30,669 --> 00:20:34,510
see the<font color="#CCCCCC"> password verify is just input</font>

514
00:20:32,679 --> 00:20:36,309
password<font color="#CCCCCC"> and the hash password and it</font>

515
00:20:34,510 --> 00:20:39,910
does the timing attack<font color="#E5E5E5"> safe comparison</font>

516
00:20:36,309 --> 00:20:43,270
behind the scenes for you it replaces

517
00:20:39,910 --> 00:20:46,059
that that quipped call up there were you

518
00:20:43,270 --> 00:20:47,918
actually concatenated the two<font color="#E5E5E5"> Y up there</font>

519
00:20:46,059 --> 00:20:49,510
to the salt and<font color="#CCCCCC"> that was how you told</font>

520
00:20:47,919 --> 00:20:52,360
crypt that it needed to be a bigger

521
00:20:49,510 --> 00:20:55,510
attached yeah it was a<font color="#E5E5E5"> little bit prone</font>

522
00:20:52,360 --> 00:20:58,809
to user error and that also allowed you

523
00:20:55,510 --> 00:21:00,790
to put in bad salt values the bcrypt or

524
00:20:58,809 --> 00:21:03,700
the password hash stuff generates a salt

525
00:21:00,790 --> 00:21:05,260
for you unless you<font color="#CCCCCC"> give it one but by</font>

526
00:21:03,700 --> 00:21:09,549
default it'll just generate a salt a

527
00:21:05,260 --> 00:21:12,400
randomized<font color="#E5E5E5"> salt for you that crypt</font>

528
00:21:09,549 --> 00:21:15,490
function if you didn't pass a salt value

529
00:21:12,400 --> 00:21:17,650
before five six it just didn't say

530
00:21:15,490 --> 00:21:21,010
<font color="#CCCCCC">anything about it</font><font color="#E5E5E5"> which is an awful</font>

531
00:21:17,650 --> 00:21:22,870
thing to do but since<font color="#CCCCCC"> 56 it now throws a</font>

532
00:21:21,010 --> 00:21:24,730
notice to you<font color="#E5E5E5"> and it says specifically</font>

533
00:21:22,870 --> 00:21:27,100
that no salt perimeter was provided and

534
00:21:24,730 --> 00:21:29,290
so<font color="#E5E5E5"> even if you do go back and you use</font>

535
00:21:27,100 --> 00:21:31,570
crypt or you have crypt in your code

536
00:21:29,290 --> 00:21:34,809
right now it'll<font color="#E5E5E5"> throw you this notice</font>

537
00:21:31,570 --> 00:21:36,399
<font color="#E5E5E5">and everybody has all the error</font>

538
00:21:34,809 --> 00:21:40,918
reporting turned on and development

539
00:21:36,400 --> 00:21:43,360
right he all yes yes not okay good

540
00:21:40,919 --> 00:21:46,419
because you have to be notices our

541
00:21:43,360 --> 00:21:49,479
errors those need<font color="#CCCCCC"> to be fixed</font><font color="#E5E5E5"> to don't</font>

542
00:21:46,419 --> 00:21:51,220
don't forget about those in<font color="#E5E5E5"> 56 there</font>

543
00:21:49,480 --> 00:21:53,530
were a lot of new updates to the<font color="#E5E5E5"> openssl</font>

544
00:21:51,220 --> 00:21:55,660
functionality a lot of new stuff was

545
00:21:53,530 --> 00:22:00,700
added to kind of expose more of the base

546
00:21:55,660 --> 00:22:02,620
open<font color="#E5E5E5"> SSL interface it does</font><font color="#CCCCCC"> verified</font>

547
00:22:00,700 --> 00:22:03,110
appear by default on<font color="#E5E5E5"> SSL connection</font>

548
00:22:02,620 --> 00:22:05,989
which

549
00:22:03,110 --> 00:22:08,059
a great major win it supports the

550
00:22:05,990 --> 00:22:11,030
fingerprinting and the list of default

551
00:22:08,059 --> 00:22:15,470
ciphers was updated to the<font color="#E5E5E5"> full Mozilla</font>

552
00:22:11,030 --> 00:22:17,059
list that was out<font color="#CCCCCC"> there compression on</font>

553
00:22:15,470 --> 00:22:22,240
the connections and<font color="#E5E5E5"> it is enabled</font><font color="#CCCCCC"> by</font>

554
00:22:17,059 --> 00:22:24,500
default you can<font color="#E5E5E5"> set the cipher order now</font>

555
00:22:22,240 --> 00:22:27,770
you can get<font color="#E5E5E5"> the protocol on the cipher</font>

556
00:22:24,500 --> 00:22:31,280
from the stream<font color="#E5E5E5"> on request on each</font>

557
00:22:27,770 --> 00:22:34,280
request the context options are a little

558
00:22:31,280 --> 00:22:36,649
bit more forward compatible a little bit

559
00:22:34,280 --> 00:22:40,820
more flexible that way you can select

560
00:22:36,650 --> 00:22:44,090
the ssl/tls version and you can work

561
00:22:40,820 --> 00:22:47,120
with<font color="#E5E5E5"> the public key and the challenges</font>

562
00:22:44,090 --> 00:22:49,699
and verify those you know like<font color="#CCCCCC"> I said a</font>

563
00:22:47,120 --> 00:22:51,409
lot<font color="#CCCCCC"> of the lot of the base level openssl</font>

564
00:22:49,700 --> 00:22:53,360
stuff that was kind of hidden from PHP

565
00:22:51,410 --> 00:22:56,330
before is just kind of it's been more

566
00:22:53,360 --> 00:23:00,290
exposed you can also work a little bit

567
00:22:56,330 --> 00:23:03,379
<font color="#E5E5E5">more with the certificate files you can</font>

568
00:23:00,290 --> 00:23:05,270
do in<font color="#E5E5E5"> per case rather than global before</font>

569
00:23:03,380 --> 00:23:07,400
you could only set those values globally

570
00:23:05,270 --> 00:23:13,970
you can<font color="#CCCCCC"> actually do them per connection</font>

571
00:23:07,400 --> 00:23:17,049
now for the ssl connection oh yeah no<font color="#E5E5E5"> I</font>

572
00:23:13,970 --> 00:23:19,490
<font color="#E5E5E5">think that was it for the openssl stuff</font>

573
00:23:17,049 --> 00:23:22,370
so<font color="#E5E5E5"> I mentioned</font><font color="#CCCCCC"> the timing safe hash</font>

574
00:23:19,490 --> 00:23:25,370
comparison this hash equals function is

575
00:23:22,370 --> 00:23:29,110
the one that's recommended to replace

576
00:23:25,370 --> 00:23:31,820
the triple equals there haven't been any

577
00:23:29,110 --> 00:23:35,389
known exploits for the timing<font color="#E5E5E5"> attack on</font>

578
00:23:31,820 --> 00:23:38,570
the triple equals but it is<font color="#CCCCCC"> possible you</font>

579
00:23:35,390 --> 00:23:41,049
know it's pretty hard to do but<font color="#E5E5E5"> it is</font>

580
00:23:38,570 --> 00:23:44,149
there so they<font color="#E5E5E5"> dropped in a hash equals</font>

581
00:23:41,049 --> 00:23:46,370
there is also a polyfill version of that

582
00:23:44,150 --> 00:23:48,049
<font color="#E5E5E5">so if you're not using 56 you can</font>

583
00:23:46,370 --> 00:23:50,299
introduce that into your code base and

584
00:23:48,049 --> 00:23:52,520
go<font color="#E5E5E5"> ahead and drop a hash equals in and</font>

585
00:23:50,299 --> 00:23:54,799
then if it's<font color="#CCCCCC"> actually defined</font><font color="#E5E5E5"> it'll use</font>

586
00:23:52,520 --> 00:23:59,510
the real hash equals otherwise it uses

587
00:23:54,799 --> 00:24:01,820
<font color="#CCCCCC">the code the polyfill code on there and</font>

588
00:23:59,510 --> 00:24:06,200
yes triple equals when you're<font color="#E5E5E5"> comparing</font>

589
00:24:01,820 --> 00:24:08,480
types PHP is notorious for types<font color="#CCCCCC"> type</font>

590
00:24:06,200 --> 00:24:10,460
juggling so if you're not using triple

591
00:24:08,480 --> 00:24:12,800
equals to compare your stuff and your

592
00:24:10,460 --> 00:24:13,960
you don't have a reason for comparing it

593
00:24:12,800 --> 00:24:16,049
loosely typed

594
00:24:13,960 --> 00:24:19,059
yeah<font color="#E5E5E5"> you're probably doing it wrong</font>

595
00:24:16,049 --> 00:24:22,929
unfortunately one of the other things

596
00:24:19,059 --> 00:24:25,918
<font color="#CCCCCC">that was changed in 55 was the</font>

597
00:24:22,929 --> 00:24:28,750
deprecation of the /e regex modifier

598
00:24:25,919 --> 00:24:31,840
this essentially<font color="#CCCCCC"> would allow an attacker</font>

599
00:24:28,750 --> 00:24:33,520
to<font color="#E5E5E5"> potentially inject PHP code into your</font>

600
00:24:31,840 --> 00:24:35,350
regular expression I don't really know

601
00:24:33,520 --> 00:24:37,779
why you would potentially be using user

602
00:24:35,350 --> 00:24:41,350
input in a regular expression<font color="#E5E5E5"> but it was</font>

603
00:24:37,779 --> 00:24:43,120
there so it would allow for eval that

604
00:24:41,350 --> 00:24:47,320
PHP code if that<font color="#CCCCCC"> managed to sneak in</font>

605
00:24:43,120 --> 00:24:49,120
there it was<font color="#E5E5E5"> deprecated in 55 and in the</font>

606
00:24:47,320 --> 00:24:52,840
upcoming<font color="#CCCCCC"> seven it's just going to be</font>

607
00:24:49,120 --> 00:24:55,418
completely removed you'll get the in 55

608
00:24:52,840 --> 00:24:57,189
you'll get the deprecated message in in

609
00:24:55,419 --> 00:24:59,020
seven<font color="#E5E5E5"> it'll just throw</font><font color="#CCCCCC"> I think it throws</font>

610
00:24:57,190 --> 00:25:04,179
a fatal<font color="#E5E5E5"> error if you try to use it in</font>

611
00:24:59,020 --> 00:25:06,520
seven there was an update<font color="#E5E5E5"> in 55 for a</font>

612
00:25:04,179 --> 00:25:09,130
strict session handling and you can use

613
00:25:06,520 --> 00:25:12,730
strict mode which prevents uninitialized

614
00:25:09,130 --> 00:25:14,500
session the initial I session IDs<font color="#E5E5E5"> so if</font>

615
00:25:12,730 --> 00:25:16,240
it<font color="#E5E5E5"> was given a session ID it doesn't</font>

616
00:25:14,500 --> 00:25:19,510
start up that session with that ID

617
00:25:16,240 --> 00:25:21,190
anymore they prevented there's a there's

618
00:25:19,510 --> 00:25:22,960
a setting in<font color="#E5E5E5"> the ini file that prevents</font>

619
00:25:21,190 --> 00:25:25,720
that from happening on the URL but this

620
00:25:22,960 --> 00:25:27,850
just restricts it even more and you know

621
00:25:25,720 --> 00:25:31,690
ties it<font color="#CCCCCC"> down even more makes it more</font>

622
00:25:27,850 --> 00:25:32,830
straight there was a new session started

623
00:25:31,690 --> 00:25:35,500
regardless of what was sitting the

624
00:25:32,830 --> 00:25:37,689
cookies but<font color="#E5E5E5"> this functionality prevents</font>

625
00:25:35,500 --> 00:25:39,760
the session fixation where you know

626
00:25:37,690 --> 00:25:41,649
you're somehow<font color="#CCCCCC"> setting a cookie or that</font>

627
00:25:39,760 --> 00:25:44,020
session information is set when a user

628
00:25:41,649 --> 00:25:45,820
goes to a site and<font color="#E5E5E5"> you know suddenly you</font>

629
00:25:44,020 --> 00:25:48,840
know that session ID because you know

630
00:25:45,820 --> 00:25:53,139
PHP by default just has that phpsessid

631
00:25:48,840 --> 00:25:54,939
or however it is cookie up there<font color="#E5E5E5"> and</font>

632
00:25:53,140 --> 00:25:57,909
it's just the hash so I mean it's pretty

633
00:25:54,940 --> 00:26:00,070
predictable they fix something a while

634
00:25:57,909 --> 00:26:02,049
back where that hash was actually

635
00:26:00,070 --> 00:26:03,970
predictable<font color="#E5E5E5"> because it was time based</font>

636
00:26:02,049 --> 00:26:05,590
and the way<font color="#E5E5E5"> that was being calculated</font>

637
00:26:03,970 --> 00:26:08,890
there wasn't enough Random randomness

638
00:26:05,590 --> 00:26:11,620
introduced in it so if<font color="#CCCCCC"> someone had I</font>

639
00:26:08,890 --> 00:26:13,630
<font color="#E5E5E5">think if they had the past 20 hashes the</font>

640
00:26:11,620 --> 00:26:16,570
past 20 session hashes they could

641
00:26:13,630 --> 00:26:17,860
actually predict the<font color="#E5E5E5"> next one so yeah</font>

642
00:26:16,570 --> 00:26:21,129
that got<font color="#E5E5E5"> changed pretty quickly when</font>

643
00:26:17,860 --> 00:26:24,939
that<font color="#CCCCCC"> window sounds needless to say oh</font>

644
00:26:21,130 --> 00:26:26,220
and<font color="#CCCCCC"> if you're curious sorry if you're</font>

645
00:26:24,940 --> 00:26:29,909
curious you

646
00:26:26,220 --> 00:26:33,059
actually changed the hashing method that

647
00:26:29,909 --> 00:26:35,460
PHP uses to generate those hashes in the

648
00:26:33,059 --> 00:26:37,470
php.ini file you can change that hash is

649
00:26:35,460 --> 00:26:38,940
just a single setting and you<font color="#E5E5E5"> just tell</font>

650
00:26:37,470 --> 00:26:42,480
it a different hashing method and it

651
00:26:38,940 --> 00:26:43,740
doesn't automatically obviously if you

652
00:26:42,480 --> 00:26:45,360
already have people with sessions<font color="#CCCCCC"> open</font>

653
00:26:43,740 --> 00:26:46,799
and you change that<font color="#E5E5E5"> restart</font><font color="#CCCCCC"> your server</font>

654
00:26:45,360 --> 00:26:52,770
it's going to break their sessions but

655
00:26:46,799 --> 00:26:55,020
yeah small price to pay<font color="#CCCCCC"> okay so future</font>

656
00:26:52,770 --> 00:26:57,299
like I said PHP sevens going to be

657
00:26:55,020 --> 00:27:00,030
<font color="#CCCCCC">coming up here pretty soon they're on</font>

658
00:26:57,299 --> 00:27:01,559
our seas that are see<font color="#CCCCCC"> 5 or c6 he'll be</font>

659
00:27:00,030 --> 00:27:03,990
coming at the end of this month and then

660
00:27:01,559 --> 00:27:07,470
<font color="#E5E5E5">seven the final release will</font><font color="#CCCCCC"> be coming</font>

661
00:27:03,990 --> 00:27:10,110
<font color="#CCCCCC">next month there are a lot of things</font>

662
00:27:07,470 --> 00:27:12,120
<font color="#E5E5E5">that are introduced in seven but there</font>

663
00:27:10,110 --> 00:27:14,760
are<font color="#E5E5E5"> some pretty major things for the PHP</font>

664
00:27:12,120 --> 00:27:17,668
language the first one is scalar type in

665
00:27:14,760 --> 00:27:20,789
Singh this does give you a<font color="#E5E5E5"> little bit</font>

666
00:27:17,669 --> 00:27:23,580
more as far as type<font color="#E5E5E5"> hinting on your</font>

667
00:27:20,789 --> 00:27:26,610
functions right now you can<font color="#CCCCCC"> do like</font>

668
00:27:23,580 --> 00:27:29,939
array or a callable or an interface

669
00:27:26,610 --> 00:27:32,490
something like that<font color="#E5E5E5"> the scalar type</font>

670
00:27:29,940 --> 00:27:35,240
<font color="#E5E5E5">venting influence type checking on like</font>

671
00:27:32,490 --> 00:27:38,190
boolean integer float string

672
00:27:35,240 --> 00:27:40,140
unfortunately to enforce it you have to

673
00:27:38,190 --> 00:27:43,640
turn this on at the top of<font color="#E5E5E5"> every file</font>

674
00:27:40,140 --> 00:27:46,470
and it<font color="#CCCCCC"> is not inherited which was a big</font>

675
00:27:43,640 --> 00:27:49,380
big level of contention around that on

676
00:27:46,470 --> 00:27:51,570
the PHP internals mailing list it's<font color="#E5E5E5"> not</font>

677
00:27:49,380 --> 00:27:52,740
in the<font color="#E5E5E5"> first versions of</font><font color="#CCCCCC"> 7 it's not</font>

678
00:27:51,570 --> 00:27:55,590
going to be something<font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> just</font>

679
00:27:52,740 --> 00:27:58,860
turn on globally you have to define that

680
00:27:55,590 --> 00:28:00,480
<font color="#E5E5E5">at the top</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> every file but you can see</font>

681
00:27:58,860 --> 00:28:02,399
this kind<font color="#E5E5E5"> of stuff where you could</font>

682
00:28:00,480 --> 00:28:04,860
define the user interface for that

683
00:28:02,400 --> 00:28:08,340
function the parameter that was<font color="#E5E5E5"> already</font>

684
00:28:04,860 --> 00:28:10,199
there but stuff like integer was not you

685
00:28:08,340 --> 00:28:13,799
could do typecast<font color="#CCCCCC"> for an integer or</font>

686
00:28:10,200 --> 00:28:16,740
string or anything like that that was a

687
00:28:13,799 --> 00:28:20,460
pretty major win and then on top of that

688
00:28:16,740 --> 00:28:23,309
you can<font color="#E5E5E5"> also do return types in seven we</font>

689
00:28:20,460 --> 00:28:25,950
just use this notation right here and

690
00:28:23,309 --> 00:28:27,539
define the return type again you have to

691
00:28:25,950 --> 00:28:30,030
<font color="#E5E5E5">declare that strict types because</font>

692
00:28:27,539 --> 00:28:32,789
otherwise it has no idea of what these

693
00:28:30,030 --> 00:28:35,370
return types are supposed to be I<font color="#CCCCCC"> don't</font>

694
00:28:32,789 --> 00:28:37,408
<font color="#E5E5E5">think you can use like interface or</font>

695
00:28:35,370 --> 00:28:39,090
callable or you know the other type

696
00:28:37,409 --> 00:28:40,680
hinting for classes

697
00:28:39,090 --> 00:28:44,970
namespace classes or<font color="#CCCCCC"> anything like that</font>

698
00:28:40,680 --> 00:28:46,590
<font color="#E5E5E5">I haven't</font><font color="#CCCCCC"> tried it so it might work but</font>

699
00:28:44,970 --> 00:28:49,830
I think those are just the the base

700
00:28:46,590 --> 00:28:53,189
types for that it'll throw a<font color="#CCCCCC"> typeerror</font>

701
00:28:49,830 --> 00:28:55,439
if that's invalid on the when the strict

702
00:28:53,190 --> 00:28:56,820
mode is turned on if strict mode is off

703
00:28:55,440 --> 00:29:00,420
it doesn't throw any type errors

704
00:28:56,820 --> 00:29:02,370
obviously and if the strict typing is

705
00:29:00,420 --> 00:29:04,940
not turned on<font color="#E5E5E5"> it's going to coerce those</font>

706
00:29:02,370 --> 00:29:08,070
those values into what they need<font color="#CCCCCC"> to be</font>

707
00:29:04,940 --> 00:29:10,410
you know because PHP well it's doing

708
00:29:08,070 --> 00:29:13,470
<font color="#CCCCCC">that</font><font color="#E5E5E5"> so it's changing data types behind</font>

709
00:29:10,410 --> 00:29:17,190
the scenes and yeah one of<font color="#CCCCCC"> its fun</font>

710
00:29:13,470 --> 00:29:19,440
interesting things also<font color="#CCCCCC"> in seven is the</font>

711
00:29:17,190 --> 00:29:22,980
the native cryptographically strong

712
00:29:19,440 --> 00:29:25,260
random generator this was recently

713
00:29:22,980 --> 00:29:26,730
introduced while I say<font color="#CCCCCC"> recently they've</font>

714
00:29:25,260 --> 00:29:30,540
been<font color="#CCCCCC"> working</font><font color="#E5E5E5"> on seven releases for a</font>

715
00:29:26,730 --> 00:29:31,890
while<font color="#CCCCCC"> now but they realized that a lot</font>

716
00:29:30,540 --> 00:29:34,680
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the developers out there we're using</font>

717
00:29:31,890 --> 00:29:36,690
you know<font color="#CCCCCC"> rand or mt r and or just you</font>

718
00:29:34,680 --> 00:29:38,430
know<font color="#E5E5E5"> various kind of hacking methods to</font>

719
00:29:36,690 --> 00:29:41,490
generate these random numbers in PHP

720
00:29:38,430 --> 00:29:42,510
<font color="#E5E5E5">apps so they decided we're just going to</font>

721
00:29:41,490 --> 00:29:44,280
<font color="#E5E5E5">go ahead and put a cryptic</font>

722
00:29:42,510 --> 00:29:47,100
cryptographically strong went in and

723
00:29:44,280 --> 00:29:49,620
<font color="#E5E5E5">people can start using that it replaces</font>

724
00:29:47,100 --> 00:29:50,969
randon in tier and those are not<font color="#E5E5E5"> going</font>

725
00:29:49,620 --> 00:29:53,550
to be deprecated yet there's no

726
00:29:50,970 --> 00:29:55,230
notifications for still using those but

727
00:29:53,550 --> 00:29:57,240
i<font color="#E5E5E5"> have a feeling in the future once this</font>

728
00:29:55,230 --> 00:29:58,500
actually gets in and gets more adoption

729
00:29:57,240 --> 00:30:00,870
that those are going<font color="#E5E5E5"> to start throwing</font>

730
00:29:58,500 --> 00:30:05,700
deprecated notices before too long so

731
00:30:00,870 --> 00:30:07,350
finger scrub the functionality

732
00:30:05,700 --> 00:30:09,200
introduces those two new functions

733
00:30:07,350 --> 00:30:11,219
<font color="#CCCCCC">they're random bytes and random int</font>

734
00:30:09,200 --> 00:30:14,070
there's also a discussion around

735
00:30:11,220 --> 00:30:16,650
possibly including a random string as

736
00:30:14,070 --> 00:30:18,270
well so you can<font color="#CCCCCC"> just</font><font color="#E5E5E5"> generate those</font>

737
00:30:16,650 --> 00:30:20,460
<font color="#CCCCCC">randomized strings so you don't</font><font color="#E5E5E5"> have to</font>

738
00:30:18,270 --> 00:30:22,860
do any fancy handling on bytes or

739
00:30:20,460 --> 00:30:25,260
anything like that<font color="#E5E5E5"> right now</font><font color="#CCCCCC"> you would</font>

740
00:30:22,860 --> 00:30:27,179
have<font color="#E5E5E5"> to get random bytes and then coerce</font>

741
00:30:25,260 --> 00:30:30,300
it into a string by doing some

742
00:30:27,180 --> 00:30:32,750
manipulation on it but at least you're

743
00:30:30,300 --> 00:30:35,370
based on some ran the byte information

744
00:30:32,750 --> 00:30:37,620
previously<font color="#E5E5E5"> the recommended method was</font>

745
00:30:35,370 --> 00:30:40,290
using the<font color="#E5E5E5"> openssl random pseudo bytes</font>

746
00:30:37,620 --> 00:30:42,929
method and grabbing those bites manually

747
00:30:40,290 --> 00:30:46,470
and coercing them that way this just

748
00:30:42,930 --> 00:30:49,350
<font color="#CCCCCC">kind of gives you a an</font><font color="#E5E5E5"> easier way to do</font>

749
00:30:46,470 --> 00:30:52,020
that and it changes up the sources<font color="#CCCCCC"> that</font>

750
00:30:49,350 --> 00:30:53,580
these<font color="#E5E5E5"> things pull from I've</font>

751
00:30:52,020 --> 00:30:55,889
leave it goes it<font color="#E5E5E5"> actually goes in</font>

752
00:30:53,580 --> 00:30:57,949
reverse order so<font color="#CCCCCC"> it</font><font color="#E5E5E5"> starts with these</font>

753
00:30:55,890 --> 00:31:00,540
two down here like<font color="#CCCCCC"> debu random and stuff</font>

754
00:30:57,950 --> 00:31:02,670
and then<font color="#E5E5E5"> obviously on</font><font color="#CCCCCC"> Windows it uses</font>

755
00:31:00,540 --> 00:31:07,409
you know it doesn't<font color="#CCCCCC"> have that</font><font color="#E5E5E5"> so it uses</font>

756
00:31:02,670 --> 00:31:10,110
that<font color="#E5E5E5"> Jin random and I believe if it</font>

757
00:31:07,410 --> 00:31:11,670
can't find<font color="#E5E5E5"> a good enough source for the</font>

758
00:31:10,110 --> 00:31:14,399
random values that actually throws an

759
00:31:11,670 --> 00:31:18,110
error it doesn't try to you know fall

760
00:31:14,400 --> 00:31:18,110
back and use em tier and or anything

761
00:31:18,470 --> 00:31:25,110
excuse so and<font color="#E5E5E5"> this is going to be the</font>

762
00:31:23,670 --> 00:31:29,250
one<font color="#CCCCCC"> that causes</font><font color="#E5E5E5"> the most headaches when</font>

763
00:31:25,110 --> 00:31:31,560
people update to PHP<font color="#CCCCCC"> 7 if</font><font color="#E5E5E5"> anybody in</font>

764
00:31:29,250 --> 00:31:33,540
here has<font color="#CCCCCC"> been using PHP for any amount</font>

765
00:31:31,560 --> 00:31:36,210
of time you know that things like

766
00:31:33,540 --> 00:31:37,980
variable variables and you know how how

767
00:31:36,210 --> 00:31:40,470
variables are interpreted with the curly

768
00:31:37,980 --> 00:31:41,730
braces and<font color="#E5E5E5"> versus the you know the</font>

769
00:31:40,470 --> 00:31:45,000
square brace is all that kind of good

770
00:31:41,730 --> 00:31:47,730
stuff you<font color="#CCCCCC"> know that there's been some</font>

771
00:31:45,000 --> 00:31:49,890
weirdness between you know the different

772
00:31:47,730 --> 00:31:52,190
interpretations of it PHP just tries to

773
00:31:49,890 --> 00:31:55,860
figure out the<font color="#E5E5E5"> best way to interpret it</font>

774
00:31:52,190 --> 00:31:57,840
in PHP<font color="#E5E5E5"> 7 they changed it up so that</font>

775
00:31:55,860 --> 00:32:00,659
<font color="#E5E5E5">there's less errors potentially in the</font>

776
00:31:57,840 --> 00:32:03,209
<font color="#E5E5E5">variable interpretation you can see</font>

777
00:32:00,660 --> 00:32:05,730
that's the actual variable down there on

778
00:32:03,210 --> 00:32:08,430
the<font color="#E5E5E5"> end this</font><font color="#CCCCCC"> is how it used to</font><font color="#E5E5E5"> be</font>

779
00:32:05,730 --> 00:32:11,700
<font color="#E5E5E5">interpreted before PHP 7 and this is how</font>

780
00:32:08,430 --> 00:32:13,830
it will be in page b7 you can see it

781
00:32:11,700 --> 00:32:16,020
kind of you know<font color="#CCCCCC"> like this kind of stuff</font>

782
00:32:13,830 --> 00:32:18,090
it structures it a little bit more so

783
00:32:16,020 --> 00:32:20,280
that you're actually interpreting things

784
00:32:18,090 --> 00:32:23,520
the same way every time regardless of

785
00:32:20,280 --> 00:32:25,620
how you're calling it this unfortunately

786
00:32:23,520 --> 00:32:27,570
<font color="#CCCCCC">is going to break some things</font><font color="#E5E5E5"> out there</font>

787
00:32:25,620 --> 00:32:30,510
especially the ones that use variable

788
00:32:27,570 --> 00:32:33,810
variables and that try<font color="#E5E5E5"> to do any tricky</font>

789
00:32:30,510 --> 00:32:36,300
things with you know returning like Nina

790
00:32:33,810 --> 00:32:39,450
the the function call after the variable

791
00:32:36,300 --> 00:32:41,730
name and all that this also will get rid

792
00:32:39,450 --> 00:32:44,820
of the issue where in some functions if

793
00:32:41,730 --> 00:32:49,440
you're returning a value PHP will throw

794
00:32:44,820 --> 00:32:52,050
a whatsit what does it function cannot

795
00:32:49,440 --> 00:32:54,450
be used in right context it'll actually

796
00:32:52,050 --> 00:32:56,100
get rid of<font color="#E5E5E5"> that kind of stuff because it</font>

797
00:32:54,450 --> 00:32:58,110
does the interpretation correctly it was

798
00:32:56,100 --> 00:32:59,850
because of the<font color="#E5E5E5"> weird</font><font color="#CCCCCC"> type juggling and</font>

799
00:32:58,110 --> 00:33:01,530
how it handled the variable variable

800
00:32:59,850 --> 00:33:02,939
stuff that it couldn't figure out that

801
00:33:01,530 --> 00:33:05,790
that return value

802
00:33:02,940 --> 00:33:08,730
so it'll get rid of<font color="#CCCCCC"> that fortunately</font>

803
00:33:05,790 --> 00:33:12,360
that's been very annoying for several

804
00:33:08,730 --> 00:33:14,120
versions now PHP<font color="#E5E5E5"> 7 also introduces</font>

805
00:33:12,360 --> 00:33:16,229
better unicode support through strings

806
00:33:14,120 --> 00:33:17,729
it's still there's a lot of the

807
00:33:16,230 --> 00:33:20,760
functionality<font color="#E5E5E5"> that still doesn't</font>

808
00:33:17,730 --> 00:33:22,830
directly support<font color="#E5E5E5"> Unicode strings but</font>

809
00:33:20,760 --> 00:33:24,810
<font color="#E5E5E5">it's getting better you can use the</font>

810
00:33:22,830 --> 00:33:27,949
Unicode notation with the slash you and

811
00:33:24,810 --> 00:33:30,470
define the character identifier there

812
00:33:27,950 --> 00:33:33,030
and you<font color="#E5E5E5"> can see that it does actually</font>

813
00:33:30,470 --> 00:33:35,580
detect the correct string length for the

814
00:33:33,030 --> 00:33:39,690
bytes for that that particular unicode

815
00:33:35,580 --> 00:33:42,060
character so it's getting<font color="#E5E5E5"> better but</font><font color="#CCCCCC"> it</font>

816
00:33:39,690 --> 00:33:43,650
doesn't it doesn't detect that there's

817
00:33:42,060 --> 00:33:45,990
unicode characters in there and try<font color="#CCCCCC"> to</font>

818
00:33:43,650 --> 00:33:47,670
try to switch it around accordingly<font color="#E5E5E5"> you</font>

819
00:33:45,990 --> 00:33:52,880
<font color="#CCCCCC">have to you have to use that escaping</font>

820
00:33:47,670 --> 00:33:52,880
syntax but<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> only added in seven</font>

821
00:33:53,390 --> 00:33:59,100
they<font color="#E5E5E5"> also</font><font color="#CCCCCC"> change the exception handling</font>

822
00:33:57,180 --> 00:34:02,220
to make<font color="#E5E5E5"> things a little bit more</font>

823
00:33:59,100 --> 00:34:03,600
consistent before there<font color="#CCCCCC"> was a lot of</font>

824
00:34:02,220 --> 00:34:05,070
<font color="#CCCCCC">different kinds of</font><font color="#E5E5E5"> you know different</font>

825
00:34:03,600 --> 00:34:08,610
kinds<font color="#E5E5E5"> of exceptions that you could</font>

826
00:34:05,070 --> 00:34:11,639
<font color="#CCCCCC">potentially throw if an fatal error was</font>

827
00:34:08,610 --> 00:34:14,550
thrown and and you weren't catching or

828
00:34:11,639 --> 00:34:17,759
well prior to seven you couldn't catch

829
00:34:14,550 --> 00:34:18,930
fatal errors it would<font color="#CCCCCC"> just show the</font>

830
00:34:17,760 --> 00:34:20,700
white page of death you know it just

831
00:34:18,929 --> 00:34:22,049
wouldn't render or you you know you'd

832
00:34:20,699 --> 00:34:23,549
have stuff in your air log or

833
00:34:22,050 --> 00:34:25,500
potentially you know dump out an

834
00:34:23,550 --> 00:34:30,240
exception<font color="#E5E5E5"> if you weren't catching it</font>

835
00:34:25,500 --> 00:34:33,570
correctly the air class built-in air

836
00:34:30,239 --> 00:34:39,020
class replaces the engine exception that

837
00:34:33,570 --> 00:34:42,570
replaces fatal I didn't do it<font color="#CCCCCC"> I promise</font>

838
00:34:39,020 --> 00:34:45,150
I didn't<font color="#E5E5E5"> break it but that replaces</font>

839
00:34:42,570 --> 00:34:47,400
fatal which means that<font color="#E5E5E5"> you can now catch</font>

840
00:34:45,150 --> 00:34:49,710
fatal errors as a part of your error

841
00:34:47,400 --> 00:34:52,130
handling in PHP<font color="#CCCCCC"> 7 which means</font>

842
00:34:49,710 --> 00:34:54,870
essentially if you have a top-level

843
00:34:52,130 --> 00:34:57,540
exception handler that's you can define

844
00:34:54,870 --> 00:34:59,279
<font color="#E5E5E5">a global exception handler so if you</font>

845
00:34:57,540 --> 00:35:01,080
<font color="#E5E5E5">miss something with a</font><font color="#CCCCCC"> try-catch or a</font>

846
00:34:59,280 --> 00:35:03,330
library throws an exception you didn't

847
00:35:01,080 --> 00:35:06,180
realize it would you can define that

848
00:35:03,330 --> 00:35:08,850
global exception handler<font color="#E5E5E5"> and you can now</font>

849
00:35:06,180 --> 00:35:10,589
catch those fail<font color="#E5E5E5"> airs so ideally once</font>

850
00:35:08,850 --> 00:35:12,690
you're running PHP<font color="#CCCCCC"> 7 if you define that</font>

851
00:35:10,590 --> 00:35:13,250
<font color="#E5E5E5">you won't get any more whitepages of</font>

852
00:35:12,690 --> 00:35:20,430
death

853
00:35:13,250 --> 00:35:21,990
so that's a<font color="#CCCCCC"> mostly major win because</font><font color="#E5E5E5"> of</font>

854
00:35:20,430 --> 00:35:23,399
how the engine exception stuff is

855
00:35:21,990 --> 00:35:25,470
implemented you actually get a little

856
00:35:23,400 --> 00:35:28,680
bit more verbose on how the errors are

857
00:35:25,470 --> 00:35:30,509
what the air type is you can get a type

858
00:35:28,680 --> 00:35:33,210
error which is<font color="#E5E5E5"> you know an invalid type</font>

859
00:35:30,510 --> 00:35:35,640
string versus integer you know the<font color="#CCCCCC"> value</font>

860
00:35:33,210 --> 00:35:38,280
<font color="#CCCCCC">of the of the variable you can get</font><font color="#E5E5E5"> a</font>

861
00:35:35,640 --> 00:35:39,810
catchable parse error so you're not<font color="#CCCCCC"> just</font>

862
00:35:38,280 --> 00:35:42,869
going<font color="#E5E5E5"> to get that you know random parse</font>

863
00:35:39,810 --> 00:35:44,910
error exception thrown when you miss a

864
00:35:42,869 --> 00:35:47,490
semicolon or you know miss a character

865
00:35:44,910 --> 00:35:49,740
in there and then the assertion error is

866
00:35:47,490 --> 00:35:52,049
more for asserting values there's that

867
00:35:49,740 --> 00:35:54,359
assert function<font color="#E5E5E5"> that's built into PHP</font>

868
00:35:52,050 --> 00:35:56,820
that you can assert that a value is the

869
00:35:54,359 --> 00:36:00,598
correct type or that it matches the

870
00:35:56,820 --> 00:36:02,880
value you're expecting there was a

871
00:36:00,599 --> 00:36:05,849
problem a while back with the<font color="#CCCCCC"> unsee</font>

872
00:36:02,880 --> 00:36:07,950
realized function if you crafted a

873
00:36:05,849 --> 00:36:10,650
certain string a serialized object

874
00:36:07,950 --> 00:36:13,680
string and it had a disruptor method in

875
00:36:10,650 --> 00:36:16,050
it on uncie realized PHP would actually

876
00:36:13,680 --> 00:36:17,910
fire that destructive method because it

877
00:36:16,050 --> 00:36:20,160
would uncie realize the object created

878
00:36:17,910 --> 00:36:21,750
as a temporary class and then pass it

879
00:36:20,160 --> 00:36:24,569
through the regular object handling

880
00:36:21,750 --> 00:36:26,300
stuff and so a destructors always fired

881
00:36:24,570 --> 00:36:30,570
at the end<font color="#E5E5E5"> of the object being destroyed</font>

882
00:36:26,300 --> 00:36:32,160
yeah it makes sense so in page b7 they

883
00:36:30,570 --> 00:36:35,010
actually implemented a filter done

884
00:36:32,160 --> 00:36:36,450
serialize you can configure<font color="#E5E5E5"> it in a</font>

885
00:36:35,010 --> 00:36:39,030
couple<font color="#CCCCCC"> of different ways you</font><font color="#E5E5E5"> can do the</font>

886
00:36:36,450 --> 00:36:40,980
you know just generally allowed classes

887
00:36:39,030 --> 00:36:44,119
so<font color="#CCCCCC"> you can say yes I want classes to be</font>

888
00:36:40,980 --> 00:36:46,470
instantiated in here you can turn<font color="#E5E5E5"> it</font><font color="#CCCCCC"> off</font>

889
00:36:44,119 --> 00:36:49,200
unfortunately I think<font color="#E5E5E5"> the yeah the</font>

890
00:36:46,470 --> 00:36:51,899
default is true so it still functions

891
00:36:49,200 --> 00:36:54,629
pretty much the same way<font color="#E5E5E5"> but you can</font>

892
00:36:51,900 --> 00:36:56,849
turn<font color="#E5E5E5"> it off which is</font><font color="#CCCCCC"> good hopefully that</font>

893
00:36:54,630 --> 00:36:58,560
will you know<font color="#E5E5E5"> they won't worry as much</font>

894
00:36:56,849 --> 00:37:00,150
about that backwards compatibility break

895
00:36:58,560 --> 00:37:03,480
in the future and they'll swap that

896
00:37:00,150 --> 00:37:05,790
<font color="#E5E5E5">around or you can specifically define</font>

897
00:37:03,480 --> 00:37:08,790
what kind of classes that<font color="#E5E5E5"> you want I</font>

898
00:37:05,790 --> 00:37:13,440
don't know if namespacing works in here

899
00:37:08,790 --> 00:37:15,390
<font color="#E5E5E5">I'm pretty sure it does but you can</font>

900
00:37:13,440 --> 00:37:19,020
define<font color="#E5E5E5"> a list of classes that you want</font>

901
00:37:15,390 --> 00:37:21,629
want it to be able<font color="#E5E5E5"> to in Stan see if you</font>

902
00:37:19,020 --> 00:37:22,860
turn off that functionality and there is

903
00:37:21,630 --> 00:37:24,810
a class in there it

904
00:37:22,860 --> 00:37:27,960
actually creates that PHP incomplete

905
00:37:24,810 --> 00:37:29,610
class so<font color="#E5E5E5"> you have an object but you</font>

906
00:37:27,960 --> 00:37:31,670
can't do<font color="#CCCCCC"> anything with it you can only</font>

907
00:37:29,610 --> 00:37:33,540
look at it and that's pretty much it

908
00:37:31,670 --> 00:37:36,660
they couldn't<font color="#E5E5E5"> figure out a way that</font>

909
00:37:33,540 --> 00:37:38,190
<font color="#CCCCCC">wasn't</font><font color="#E5E5E5"> a return null to handle that kind</font>

910
00:37:36,660 --> 00:37:40,740
of stuff<font color="#E5E5E5"> so they just made this</font>

911
00:37:38,190 --> 00:37:43,560
temporary kind of class thing that can't

912
00:37:40,740 --> 00:37:45,479
you<font color="#E5E5E5"> can't call you can't I don't</font><font color="#CCCCCC"> even</font>

913
00:37:43,560 --> 00:37:48,660
know if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do I promise I'm not</font>

914
00:37:45,480 --> 00:37:50,460
doing anything you can't even<font color="#E5E5E5"> do any</font>

915
00:37:48,660 --> 00:37:55,740
kind of reflection on it or anything

916
00:37:50,460 --> 00:37:58,650
<font color="#E5E5E5">like that yep thank you sure here</font><font color="#CCCCCC"> okay</font>

917
00:37:55,740 --> 00:38:04,439
hopefully<font color="#CCCCCC"> they'll cooperate I'm not too</font>

918
00:37:58,650 --> 00:38:06,390
far from done so um<font color="#CCCCCC"> so that was most of</font>

919
00:38:04,440 --> 00:38:08,610
the new functionality in seven again

920
00:38:06,390 --> 00:38:10,980
that was more security focused kind of

921
00:38:08,610 --> 00:38:12,810
functionality if you're interested in

922
00:38:10,980 --> 00:38:15,210
everything else that's coming with 7 i'm

923
00:38:12,810 --> 00:38:18,299
more than happy to show that to<font color="#CCCCCC"> you</font><font color="#E5E5E5"> i</font>

924
00:38:15,210 --> 00:38:20,610
gave<font color="#CCCCCC"> this presentation at aptech a</font>

925
00:38:18,300 --> 00:38:22,080
couple of weeks ago<font color="#E5E5E5"> and</font><font color="#CCCCCC"> i actually</font><font color="#E5E5E5"> ended</font>

926
00:38:20,610 --> 00:38:24,630
up having somebody from the wikimedia

927
00:38:22,080 --> 00:38:26,970
<font color="#E5E5E5">foundation come in and ask me about PHP</font>

928
00:38:24,630 --> 00:38:29,490
7 and the benefits of going to that / HH

929
00:38:26,970 --> 00:38:31,410
p.m. and i'm not<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> how many people</font>

930
00:38:29,490 --> 00:38:34,319
know the Wikimedia stuff went

931
00:38:31,410 --> 00:38:37,230
exclusively to<font color="#CCCCCC"> HH VN</font><font color="#E5E5E5"> that hip-hop vm</font><font color="#CCCCCC"> the</font>

932
00:38:34,320 --> 00:38:38,790
<font color="#E5E5E5">Facebook put out they exclusively went</font>

933
00:38:37,230 --> 00:38:40,380
to that a while back and I<font color="#CCCCCC"> think he was</font>

934
00:38:38,790 --> 00:38:43,140
slightly disappointed when I recommended

935
00:38:40,380 --> 00:38:48,060
sticking with ph v<font color="#E5E5E5"> 7</font><font color="#CCCCCC"> vs. going to HH</font>

936
00:38:43,140 --> 00:38:50,460
p.m. so yeah if you haven't tried HH

937
00:38:48,060 --> 00:38:52,320
p.m. it's an interesting project it

938
00:38:50,460 --> 00:38:55,050
allows you to compile down the PHP code

939
00:38:52,320 --> 00:38:57,660
so it runs it executes a lot<font color="#CCCCCC"> faster it's</font>

940
00:38:55,050 --> 00:39:00,150
<font color="#CCCCCC">typesafe by by default there's all sorts</font>

941
00:38:57,660 --> 00:39:04,470
of stuff that come with that but it's an

942
00:39:00,150 --> 00:39:07,770
alternative<font color="#E5E5E5"> runtime for the PHP code so</font>

943
00:39:04,470 --> 00:39:09,569
anyway why is this important<font color="#E5E5E5"> I gave you</font>

944
00:39:07,770 --> 00:39:12,509
some statistics at<font color="#E5E5E5"> the beginning of</font>

945
00:39:09,570 --> 00:39:14,280
presentation of you know how much PHP is

946
00:39:12,510 --> 00:39:15,810
out there<font color="#E5E5E5"> and there's more and more</font>

947
00:39:14,280 --> 00:39:17,580
grown and you know it's constantly

948
00:39:15,810 --> 00:39:20,549
growing all the time there's more<font color="#E5E5E5"> and</font>

949
00:39:17,580 --> 00:39:23,310
more of<font color="#E5E5E5"> it out</font><font color="#CCCCCC"> there and major projects</font>

950
00:39:20,550 --> 00:39:24,870
like<font color="#CCCCCC"> WordPress and Drupal and even you</font>

951
00:39:23,310 --> 00:39:27,299
<font color="#CCCCCC">know some of the libraries the composer</font>

952
00:39:24,870 --> 00:39:29,520
stuff that I mentioned it's not going

953
00:39:27,300 --> 00:39:31,290
away and you know there's there's a lot

954
00:39:29,520 --> 00:39:34,570
of it out there I hear more<font color="#E5E5E5"> and</font><font color="#CCCCCC"> more</font>

955
00:39:31,290 --> 00:39:38,110
companies saying a lot<font color="#E5E5E5"> of them were for</font>

956
00:39:34,570 --> 00:39:40,960
internal Cano tooling but because PHP is

957
00:39:38,110 --> 00:39:43,300
so easy to pick up and<font color="#E5E5E5"> it's so quick you</font>

958
00:39:40,960 --> 00:39:46,750
know<font color="#E5E5E5"> it's it's being adopted more widely</font>

959
00:39:43,300 --> 00:39:48,160
and thankfully due to some of<font color="#CCCCCC"> the you</font>

960
00:39:46,750 --> 00:39:50,140
<font color="#CCCCCC">know the newer features that are coming</font>

961
00:39:48,160 --> 00:39:51,460
in the<font color="#E5E5E5"> language is getting better it's</font>

962
00:39:50,140 --> 00:39:54,009
getting a little bit more sane than it

963
00:39:51,460 --> 00:39:56,590
used to be you<font color="#E5E5E5"> know it's it's an uphill</font>

964
00:39:54,010 --> 00:40:00,310
struggle to try to dump some of the the

965
00:39:56,590 --> 00:40:02,860
<font color="#CCCCCC">previous black sheep kind of stuff that</font>

966
00:40:00,310 --> 00:40:04,029
it's the<font color="#CCCCCC"> language has</font><font color="#E5E5E5"> had around it but</font>

967
00:40:02,860 --> 00:40:06,340
I think<font color="#CCCCCC"> it's getting there I mean I</font>

968
00:40:04,030 --> 00:40:08,620
think<font color="#E5E5E5"> you know with with some of the new</font>

969
00:40:06,340 --> 00:40:11,440
features and deprecation of some of the

970
00:40:08,620 --> 00:40:15,640
old crud<font color="#CCCCCC"> that's around in the language</font>

971
00:40:11,440 --> 00:40:18,580
you know<font color="#E5E5E5"> it is getting a lot better so</font>

972
00:40:15,640 --> 00:40:21,580
these<font color="#CCCCCC"> are just two example statistics</font>

973
00:40:18,580 --> 00:40:25,299
that I pulled up that's the it's<font color="#CCCCCC"> tire</font>

974
00:40:21,580 --> 00:40:27,819
btao be index for popularity of

975
00:40:25,300 --> 00:40:29,680
languages you can see<font color="#CCCCCC"> that PHP is down</font>

976
00:40:27,820 --> 00:40:33,730
there number six it actually used to<font color="#E5E5E5"> be</font>

977
00:40:29,680 --> 00:40:35,259
in<font color="#E5E5E5"> five or well not in this particular</font>

978
00:40:33,730 --> 00:40:37,990
one but it was at five for a little

979
00:40:35,260 --> 00:40:41,440
while and<font color="#CCCCCC"> then down here is just the</font>

980
00:40:37,990 --> 00:40:45,100
usage statistics of web applications

981
00:40:41,440 --> 00:40:48,250
this is not just overall usage but you

982
00:40:45,100 --> 00:40:51,190
can see<font color="#CCCCCC"> how large the PHP PHP usage is</font>

983
00:40:48,250 --> 00:40:53,320
out there for a language that is so

984
00:40:51,190 --> 00:40:56,050
widely used across the<font color="#CCCCCC"> Internet in so</font>

985
00:40:53,320 --> 00:40:57,670
many different applications there seems

986
00:40:56,050 --> 00:41:01,420
<font color="#E5E5E5">to be this kind of huge gap between</font>

987
00:40:57,670 --> 00:41:02,530
security and the PHP world and you know

988
00:41:01,420 --> 00:41:03,970
that's one<font color="#E5E5E5"> of the reasons why i like</font>

989
00:41:02,530 --> 00:41:06,670
going to conferences and<font color="#E5E5E5"> i like talking</font>

990
00:41:03,970 --> 00:41:09,189
about this stuff because<font color="#E5E5E5"> it seems like</font>

991
00:41:06,670 --> 00:41:11,650
<font color="#E5E5E5">it always opens at least one or two</font>

992
00:41:09,190 --> 00:41:13,240
developers to you know oh hey this<font color="#E5E5E5"> is</font>

993
00:41:11,650 --> 00:41:16,030
<font color="#E5E5E5">great stuff you know I really wanted to</font>

994
00:41:13,240 --> 00:41:18,640
start writing<font color="#E5E5E5"> secure code and you know</font>

995
00:41:16,030 --> 00:41:22,270
for<font color="#E5E5E5"> the rest it's it's good awareness of</font>

996
00:41:18,640 --> 00:41:24,730
what's out there you know and and you

997
00:41:22,270 --> 00:41:27,520
invest in<font color="#E5E5E5"> that open source security you</font>

998
00:41:24,730 --> 00:41:29,170
invest in<font color="#E5E5E5"> a community like that you know</font>

999
00:41:27,520 --> 00:41:31,660
and if if you're one<font color="#E5E5E5"> of the people that</font>

1000
00:41:29,170 --> 00:41:34,780
understands the the ways to write secure

1001
00:41:31,660 --> 00:41:37,290
code not necessarily<font color="#E5E5E5"> just secure PHP</font>

1002
00:41:34,780 --> 00:41:40,630
code but writing secure code in general

1003
00:41:37,290 --> 00:41:42,759
you know go talk<font color="#E5E5E5"> to a developer you know</font>

1004
00:41:40,630 --> 00:41:44,170
go sit next to them and say hey look you

1005
00:41:42,760 --> 00:41:45,280
know you're writing this feature I

1006
00:41:44,170 --> 00:41:48,250
noticed<font color="#CCCCCC"> that you're writing it</font><font color="#E5E5E5"> this</font>

1007
00:41:45,280 --> 00:41:48,640
particular<font color="#E5E5E5"> way you</font><font color="#CCCCCC"> know your logic might</font>

1008
00:41:48,250 --> 00:41:50,710
be

1009
00:41:48,640 --> 00:41:52,710
lawd in this particular situation you

1010
00:41:50,710 --> 00:41:57,160
know and actually sit down with them and

1011
00:41:52,710 --> 00:41:59,440
<font color="#E5E5E5">you know don't drop it in their laps but</font>

1012
00:41:57,160 --> 00:42:02,170
you know work<font color="#CCCCCC"> with them and</font><font color="#E5E5E5"> cooperate</font>

1013
00:41:59,440 --> 00:42:05,079
with them and<font color="#E5E5E5"> you know and I know it's</font>

1014
00:42:02,170 --> 00:42:07,059
difficult<font color="#E5E5E5"> to sometimes step out of that</font>

1015
00:42:05,079 --> 00:42:08,740
you know<font color="#E5E5E5"> here's a vulnerability go fix</font>

1016
00:42:07,059 --> 00:42:11,349
that vulnerability kind of kind of

1017
00:42:08,740 --> 00:42:13,629
mentality but if you sit<font color="#E5E5E5"> with a</font>

1018
00:42:11,349 --> 00:42:15,579
development group or you know even to

1019
00:42:13,630 --> 00:42:16,720
sit in the planning sessions and just

1020
00:42:15,579 --> 00:42:18,039
say hey you know you're going to be

1021
00:42:16,720 --> 00:42:20,439
implementing this feature here's a

1022
00:42:18,039 --> 00:42:22,359
couple of things<font color="#CCCCCC"> to watch out for you</font>

1023
00:42:20,440 --> 00:42:25,089
know and just kind of keep security on

1024
00:42:22,359 --> 00:42:26,470
their mind and keep it you know keep it

1025
00:42:25,089 --> 00:42:28,420
continuous throughout the development

1026
00:42:26,470 --> 00:42:31,269
process and not<font color="#E5E5E5"> a kind of an</font>

1027
00:42:28,420 --> 00:42:32,859
afterthought a lot<font color="#E5E5E5"> of developers out</font>

1028
00:42:31,269 --> 00:42:34,689
there have that problem you know they

1029
00:42:32,859 --> 00:42:37,359
think oh I'll<font color="#E5E5E5"> develop it I'll make it</font>

1030
00:42:34,690 --> 00:42:41,769
work and then I'll secure it which is a

1031
00:42:37,359 --> 00:42:44,558
terrible approach unfortunately<font color="#CCCCCC"> but I</font>

1032
00:42:41,769 --> 00:42:45,848
think with more integration between you

1033
00:42:44,559 --> 00:42:47,230
know the security groups and the

1034
00:42:45,849 --> 00:42:49,150
development groups you know<font color="#E5E5E5"> kind of</font>

1035
00:42:47,230 --> 00:42:51,130
meshing those two worlds you can

1036
00:42:49,150 --> 00:42:53,170
actually<font color="#E5E5E5"> get a little bit better results</font>

1037
00:42:51,130 --> 00:42:56,880
than just trying to say you know<font color="#E5E5E5"> here's</font>

1038
00:42:53,170 --> 00:43:00,910
what you did wrong kind<font color="#E5E5E5"> of things so</font>

1039
00:42:56,880 --> 00:43:04,509
anyway any questions Oh real quick again

1040
00:43:00,910 --> 00:43:06,399
that's my Twitter handle I'm very active

1041
00:43:04,509 --> 00:43:08,680
on Twitter and I will respond to you if

1042
00:43:06,400 --> 00:43:10,480
<font color="#CCCCCC">you tweet me you can't we mean things</font>

1043
00:43:08,680 --> 00:43:13,930
and I probably will still respond to you

1044
00:43:10,480 --> 00:43:16,480
so and that web sec I<font color="#E5E5E5"> owe site is one</font>

1045
00:43:13,930 --> 00:43:18,399
that I've created it's got some general

1046
00:43:16,480 --> 00:43:20,710
security stuff kind of developer focused

1047
00:43:18,400 --> 00:43:23,230
again but it's got a lot<font color="#E5E5E5"> of PHP based</font>

1048
00:43:20,710 --> 00:43:26,140
content two spotlights on certain

1049
00:43:23,230 --> 00:43:29,650
libraries just general concepts you know

1050
00:43:26,140 --> 00:43:32,170
best practices that kind of stuff so do

1051
00:43:29,650 --> 00:43:36,040
<font color="#E5E5E5">you have any questions I have a mine is</font>

1052
00:43:32,170 --> 00:43:38,390
<font color="#E5E5E5">there a good at static analysis turtles</font>

1053
00:43:36,040 --> 00:43:40,910
right now most of the static analysis

1054
00:43:38,390 --> 00:43:43,460
<font color="#E5E5E5">stuff is the better static</font><font color="#CCCCCC"> analysis</font>

1055
00:43:40,910 --> 00:43:45,290
stuff is more commercial there have been

1056
00:43:43,460 --> 00:43:49,900
<font color="#CCCCCC">a few projects in the past there was a</font>

1057
00:43:45,290 --> 00:43:53,570
rip scanner but as of 53 I<font color="#E5E5E5"> think</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> 54</font>

1058
00:43:49,900 --> 00:43:55,610
it got severely broken because of some

1059
00:43:53,570 --> 00:43:58,160
changes<font color="#CCCCCC"> in the language I actually</font>

1060
00:43:55,610 --> 00:43:59,870
talked to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> guy behind it a tap sec</font>

1061
00:43:58,160 --> 00:44:01,700
and he's working<font color="#E5E5E5"> on a new version of it</font>

1062
00:43:59,870 --> 00:44:02,839
though and he's hoping<font color="#E5E5E5"> I think he's</font>

1063
00:44:01,700 --> 00:44:05,750
hoping<font color="#E5E5E5"> to have it out within the</font><font color="#CCCCCC"> next</font>

1064
00:44:02,840 --> 00:44:07,130
<font color="#E5E5E5">six months something like that that's</font>

1065
00:44:05,750 --> 00:44:09,470
that's a pretty good scanning tool as

1066
00:44:07,130 --> 00:44:11,030
far as static analysis and there's a

1067
00:44:09,470 --> 00:44:13,430
couple of other ones out<font color="#E5E5E5"> there that kind</font>

1068
00:44:11,030 --> 00:44:16,130
of do randomized stuff I worked on one

1069
00:44:13,430 --> 00:44:18,529
for a little while but free time you

1070
00:44:16,130 --> 00:44:21,470
know it's tough stuff comes up

1071
00:44:18,530 --> 00:44:23,300
unfortunately but<font color="#CCCCCC"> yeah most of</font><font color="#E5E5E5"> them</font>

1072
00:44:21,470 --> 00:44:28,100
<font color="#E5E5E5">right now are more commercial on the</font>

1073
00:44:23,300 --> 00:44:31,880
commercial side I<font color="#E5E5E5"> can get you a list</font>

1074
00:44:28,100 --> 00:44:36,040
<font color="#E5E5E5">after if you want yeah anybody else</font>

1075
00:44:31,880 --> 00:44:36,040
anybody else question yes

1076
00:44:42,349 --> 00:44:53,480
sessional engine was fairly easy to

1077
00:44:45,089 --> 00:44:58,578
predict fact that the universe is beset

1078
00:44:53,480 --> 00:45:03,810
bringing in an entire<font color="#E5E5E5"> highway traffic</font>

1079
00:44:58,579 --> 00:45:07,740
functionality in the<font color="#E5E5E5"> page we felt right</font>

1080
00:45:03,810 --> 00:45:11,700
in photographers to fire coach make sure

1081
00:45:07,740 --> 00:45:12,959
<font color="#CCCCCC">that you're right right so are you</font>

1082
00:45:11,700 --> 00:45:16,560
talking<font color="#CCCCCC"> about that a random number</font>

1083
00:45:12,960 --> 00:45:19,849
generator or the session a stuff so the

1084
00:45:16,560 --> 00:45:22,890
session handling tournament that was

1085
00:45:19,849 --> 00:45:27,150
yeah predict ability stuff<font color="#CCCCCC"> got out</font>

1086
00:45:22,890 --> 00:45:31,578
without was very fix my question is if

1087
00:45:27,150 --> 00:45:34,890
they had a problem with such a small I

1088
00:45:31,579 --> 00:45:38,520
and now they're providing<font color="#E5E5E5"> over with an</font>

1089
00:45:34,890 --> 00:45:40,500
entire array of cryptographic the rain

1090
00:45:38,520 --> 00:45:44,310
and functionality<font color="#CCCCCC"> about right I'm</font>

1091
00:45:40,500 --> 00:45:45,900
<font color="#E5E5E5">wondering if a</font><font color="#CCCCCC"> bra cryptographer head to</font>

1092
00:45:44,310 --> 00:45:49,700
ensure that<font color="#CCCCCC"> you're doing</font><font color="#E5E5E5"> with them like</font>

1093
00:45:45,900 --> 00:45:49,700
yes<font color="#E5E5E5"> resulting</font>

1094
00:45:50,109 --> 00:45:52,859
to make sure that

1095
00:45:55,410 --> 00:46:00,049
actually

1096
00:45:57,200 --> 00:46:01,578
yeah they did bring in people to consult

1097
00:46:00,050 --> 00:46:05,150
on the<font color="#CCCCCC"> implementation of the random</font>

1098
00:46:01,579 --> 00:46:06,589
library stuff a lot of it is essentially

1099
00:46:05,150 --> 00:46:08,420
taking the functionality<font color="#CCCCCC"> that was</font>

1100
00:46:06,589 --> 00:46:09,770
<font color="#E5E5E5">already there</font><font color="#CCCCCC"> minna</font><font color="#E5E5E5"> you know stripping</font>

1101
00:46:08,420 --> 00:46:12,980
it down to<font color="#E5E5E5"> make it</font><font color="#CCCCCC"> a little bit easier</font>

1102
00:46:09,770 --> 00:46:14,900
<font color="#CCCCCC">to use and then</font><font color="#E5E5E5"> using those known good</font>

1103
00:46:12,980 --> 00:46:17,119
cryptographic sources like dev you

1104
00:46:14,900 --> 00:46:18,829
random and stuff like that versus trying

1105
00:46:17,119 --> 00:46:20,930
to do you know like in tier and where it

1106
00:46:18,829 --> 00:46:23,230
was a random kind of<font color="#E5E5E5"> functionality that</font>

1107
00:46:20,930 --> 00:46:26,990
was built into PHP into<font color="#E5E5E5"> language itself</font>

1108
00:46:23,230 --> 00:46:28,579
that didn't use any external sources but

1109
00:46:26,990 --> 00:46:31,040
yeah a lot of that random stuff does

1110
00:46:28,579 --> 00:46:32,960
expose more of the low-level randomized

1111
00:46:31,040 --> 00:46:35,509
stuff that has been completely vetted by

1112
00:46:32,960 --> 00:46:38,510
you know infosec and cryptography people

1113
00:46:35,510 --> 00:46:41,300
stuff like that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that interior</font>

1114
00:46:38,510 --> 00:46:43,609
question or is it<font color="#CCCCCC"> possible that the</font>

1115
00:46:41,300 --> 00:46:46,820
crypto functions themselves are coming

1116
00:46:43,609 --> 00:46:49,609
<font color="#E5E5E5">from a well-weighted library like a lip</font>

1117
00:46:46,820 --> 00:46:53,300
<font color="#CCCCCC">gripped</font><font color="#E5E5E5"> or something else um already you</font>

1118
00:46:49,609 --> 00:46:55,640
know<font color="#E5E5E5"> later by experts I think I'm trying</font>

1119
00:46:53,300 --> 00:46:58,880
<font color="#E5E5E5">to remember I think some of its based on</font>

1120
00:46:55,640 --> 00:47:00,410
encrypt there was a big debate a while

1121
00:46:58,880 --> 00:47:01,579
back about what they were going to

1122
00:47:00,410 --> 00:47:04,098
deprecate what they were going to<font color="#E5E5E5"> leave</font>

1123
00:47:01,579 --> 00:47:06,980
in that<font color="#E5E5E5"> I don't remember the the results</font>

1124
00:47:04,099 --> 00:47:08,960
of that one though but it's not<font color="#E5E5E5"> it is</font>

1125
00:47:06,980 --> 00:47:11,780
from a known source I know<font color="#E5E5E5"> that I just</font>

1126
00:47:08,960 --> 00:47:13,880
<font color="#E5E5E5">don't remember</font><font color="#CCCCCC"> which one once PHP load</font>

1127
00:47:11,780 --> 00:47:15,619
that file it understands that the type

1128
00:47:13,880 --> 00:47:17,900
checking stuff is in that particular

1129
00:47:15,619 --> 00:47:19,609
functionality regardless of whatever

1130
00:47:17,900 --> 00:47:21,770
else is loaded and whatever else calls

1131
00:47:19,609 --> 00:47:22,910
that file so<font color="#CCCCCC"> there</font><font color="#E5E5E5"> is the potential for</font>

1132
00:47:21,770 --> 00:47:25,280
you to have part<font color="#E5E5E5"> of your application</font>

1133
00:47:22,910 --> 00:47:28,700
being loosely typed and some of it being

1134
00:47:25,280 --> 00:47:32,720
strictly typed which is not ideal but i

1135
00:47:28,700 --> 00:47:34,819
think the RFC for the the strict typing

1136
00:47:32,720 --> 00:47:36,410
stuff went through five or six different

1137
00:47:34,819 --> 00:47:38,750
revisions before everybody finally

1138
00:47:36,410 --> 00:47:40,520
agreed unfortunately you have to

1139
00:47:38,750 --> 00:47:43,280
<font color="#E5E5E5">remember PHP is kind of a design by a</font>

1140
00:47:40,520 --> 00:47:45,109
committee there is not a one single

1141
00:47:43,280 --> 00:47:46,520
authoritative source for okay we're

1142
00:47:45,109 --> 00:47:48,348
going<font color="#E5E5E5"> to do it</font><font color="#CCCCCC"> this way</font><font color="#E5E5E5"> everybody pretty</font>

1143
00:47:46,520 --> 00:47:51,710
much has to agree they take votes on

1144
00:47:48,349 --> 00:47:54,319
functionality and sometimes the<font color="#CCCCCC"> RF RFC's</font>

1145
00:47:51,710 --> 00:47:56,150
are actually multiple steps so they'll

1146
00:47:54,319 --> 00:47:58,339
vote on certain parts of it to<font color="#E5E5E5"> accept</font>

1147
00:47:56,150 --> 00:48:00,020
certain parts and unfortunately that

1148
00:47:58,339 --> 00:48:02,500
having to declare that at the top<font color="#CCCCCC"> of</font>

1149
00:48:00,020 --> 00:48:06,079
each file was the one that<font color="#E5E5E5"> went out over</font>

1150
00:48:02,500 --> 00:48:07,490
doing it over<font color="#E5E5E5"> the entire code base like</font>

1151
00:48:06,079 --> 00:48:08,700
I<font color="#CCCCCC"> mentioned hopefully in the future they</font>

1152
00:48:07,490 --> 00:48:10,169
will actually<font color="#CCCCCC"> haven't</font>

1153
00:48:08,700 --> 00:48:12,649
and I setting when you can turn<font color="#E5E5E5"> that</font><font color="#CCCCCC"> on</font>

1154
00:48:10,170 --> 00:48:15,480
and do it<font color="#E5E5E5"> across the entire code base</font>

1155
00:48:12,650 --> 00:48:17,099
but because there is a lot<font color="#CCCCCC"> of PHP code</font>

1156
00:48:15,480 --> 00:48:20,010
that takes advantage<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the fact that</font>

1157
00:48:17,099 --> 00:48:22,230
you can coerce the types and you know do

1158
00:48:20,010 --> 00:48:23,839
lose comparisons there's a lot<font color="#CCCCCC"> of stuff</font>

1159
00:48:22,230 --> 00:48:25,980
that that would just completely break

1160
00:48:23,839 --> 00:48:27,990
unfortunately I<font color="#CCCCCC"> know WordPress and</font>

1161
00:48:25,980 --> 00:48:37,050
Drupal would massively break if you

1162
00:48:27,990 --> 00:48:40,259
<font color="#CCCCCC">turned</font><font color="#E5E5E5"> on type checking yeah yeah all</font>

1163
00:48:37,050 --> 00:48:42,240
those ones yep yeah yeah it's I mean

1164
00:48:40,260 --> 00:48:44,430
it's a huge backwards compatibility

1165
00:48:42,240 --> 00:48:46,919
break if they hadn't in there again it

1166
00:48:44,430 --> 00:48:48,299
would be optional but you know if that

1167
00:48:46,920 --> 00:48:50,369
was all that was in there being able to

1168
00:48:48,300 --> 00:48:52,740
turn an offer on then yeah people just

1169
00:48:50,369 --> 00:48:54,180
wouldn't use it so hopefully<font color="#CCCCCC"> this will</font>

1170
00:48:52,740 --> 00:49:00,959
kind of get them to piecemeal it out a

1171
00:48:54,180 --> 00:49:02,940
little bit<font color="#E5E5E5"> more right anybody</font><font color="#CCCCCC"> else okay</font>

1172
00:49:00,960 --> 00:49:05,300
let's time Chris with<font color="#CCCCCC"> greater own</font>

1173
00:49:02,940 --> 00:49:05,300
<font color="#CCCCCC">applause</font>

