1
00:00:17,900 --> 00:00:22,830
my favorite time of the day while

2
00:00:21,270 --> 00:00:27,150
standing between developers<font color="#CCCCCC"> and</font><font color="#E5E5E5"> their</font>

3
00:00:22,830 --> 00:00:29,339
<font color="#E5E5E5">beer but the plus side means you're</font><font color="#CCCCCC"> a</font>

4
00:00:27,150 --> 00:00:31,200
dedicated bunch you came<font color="#E5E5E5"> here to</font>

5
00:00:29,340 --> 00:00:33,120
actually listen to the<font color="#E5E5E5"> talk and not just</font>

6
00:00:31,200 --> 00:00:36,420
count minutes until<font color="#E5E5E5"> you can go out so I</font>

7
00:00:33,120 --> 00:00:38,430
think<font color="#E5E5E5"> I appreciate it thanks</font><font color="#CCCCCC"> for the</font>

8
00:00:36,420 --> 00:00:42,710
introduction so<font color="#CCCCCC"> I'm going to talk about</font>

9
00:00:38,430 --> 00:00:49,980
nodejs how many of<font color="#E5E5E5"> you actually</font>

10
00:00:42,710 --> 00:00:53,310
programming in dont je hmm popular right

11
00:00:49,980 --> 00:00:54,870
at least everybody's talking about it

12
00:00:53,310 --> 00:01:00,329
and so we're going to talk about a

13
00:00:54,870 --> 00:01:02,370
little bit about architecture really

14
00:01:00,329 --> 00:01:06,660
about things that you shouldn't do with

15
00:01:02,370 --> 00:01:09,140
no Jas I guess a couple of God chose to

16
00:01:06,660 --> 00:01:14,880
keep in<font color="#CCCCCC"> mind when you develop right</font>

17
00:01:09,140 --> 00:01:18,000
denial of service attacks going to

18
00:01:14,880 --> 00:01:22,560
discuss their cryptography and use of

19
00:01:18,000 --> 00:01:26,510
random and a ways to do sequel injection

20
00:01:22,560 --> 00:01:31,110
even though typical<font color="#E5E5E5"> node.js application</font>

21
00:01:26,510 --> 00:01:34,020
<font color="#E5E5E5">use a no sequel as a background mongodb</font>

22
00:01:31,110 --> 00:01:37,289
Oh similar database<font color="#E5E5E5"> because to do you</font>

23
00:01:34,020 --> 00:01:41,449
can still do sequel injection like a tax

24
00:01:37,290 --> 00:01:41,450
<font color="#CCCCCC">oh no all right</font>

25
00:01:43,890 --> 00:01:52,040
so no Jas no GF is an event-driven

26
00:01:53,720 --> 00:02:01,289
framework all right if you have<font color="#CCCCCC"> a event</font>

27
00:01:56,850 --> 00:02:05,669
queue<font color="#CCCCCC"> single threaded and then Q being</font>

28
00:02:01,290 --> 00:02:10,440
<font color="#E5E5E5">processed by</font><font color="#CCCCCC"> event loop and tasks are</font>

29
00:02:05,670 --> 00:02:13,380
usually kind<font color="#E5E5E5"> of farmed out to to work</font>

30
00:02:10,440 --> 00:02:16,550
that's right so if it's a<font color="#E5E5E5"> file system</font>

31
00:02:13,380 --> 00:02:23,310
some something with I oh<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> database</font>

32
00:02:16,550 --> 00:02:26,010
network task being run by separate

33
00:02:23,310 --> 00:02:29,910
threads do the callbacks going back to

34
00:02:26,010 --> 00:02:34,320
<font color="#E5E5E5">the</font><font color="#CCCCCC"> event queue that's oh</font><font color="#E5E5E5"> you know sort</font>

35
00:02:29,910 --> 00:02:38,670
<font color="#E5E5E5">of pretty simple but here's putting it a</font>

36
00:02:34,320 --> 00:02:41,750
little bit<font color="#E5E5E5"> of a human terms here think</font>

37
00:02:38,670 --> 00:02:45,208
about it right the<font color="#CCCCCC"> fast food watering</font>

38
00:02:41,750 --> 00:02:48,360
system where a guy de takes your order

39
00:02:45,209 --> 00:02:50,880
and kind<font color="#E5E5E5"> of hands out off tickets back</font>

40
00:02:48,360 --> 00:02:53,790
to somebody correct short fills own

41
00:02:50,880 --> 00:02:56,790
right it's a very efficient very

42
00:02:53,790 --> 00:02:58,220
efficient system because somebody's

43
00:02:56,790 --> 00:03:00,480
always available to take your order

44
00:02:58,220 --> 00:03:02,400
there's no<font color="#E5E5E5"> grantee that you'll get you</font>

45
00:03:00,480 --> 00:03:06,030
on a fast right the system can still be

46
00:03:02,400 --> 00:03:09,620
busy one pleased you know you feel

47
00:03:06,030 --> 00:03:20,010
better because you've<font color="#CCCCCC"> been served</font>

48
00:03:09,620 --> 00:03:21,239
<font color="#CCCCCC">alright any questions yes so what's good</font>

49
00:03:20,010 --> 00:03:24,989
<font color="#E5E5E5">and what's not so good about this</font>

50
00:03:21,239 --> 00:03:28,200
architecture and good is that io

51
00:03:24,989 --> 00:03:29,730
intensive applications are actually

52
00:03:28,200 --> 00:03:32,820
responsive right there's always

53
00:03:29,730 --> 00:03:35,959
something to your bed processes user

54
00:03:32,820 --> 00:03:41,298
input user<font color="#E5E5E5"> requests it's</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> good for</font>

55
00:03:35,959 --> 00:03:41,299
database query squares can be executed

56
00:03:41,570 --> 00:03:48,269
in parallel right and it's pretty<font color="#CCCCCC"> good</font>

57
00:03:45,180 --> 00:03:50,540
<font color="#E5E5E5">for you I intensive tasks because when</font>

58
00:03:48,269 --> 00:03:55,100
there's a lot of interaction with users

59
00:03:50,540 --> 00:04:01,459
user feels that a system is responsive

60
00:03:55,100 --> 00:04:06,620
actual suits web apps very well not so

61
00:04:01,460 --> 00:04:10,430
good<font color="#E5E5E5"> for complex business logic and cpu</font>

62
00:04:06,620 --> 00:04:13,300
intensive hours because of the single

63
00:04:10,430 --> 00:04:18,620
threaded nature of the framework<font color="#E5E5E5"> if you</font>

64
00:04:13,300 --> 00:04:22,520
tie up that order taker all right you to

65
00:04:18,620 --> 00:04:24,950
that order take it has to I don't know

66
00:04:22,520 --> 00:04:26,380
go get change for you or your credit

67
00:04:24,950 --> 00:04:29,510
card is declined or something like that

68
00:04:26,380 --> 00:04:33,320
you see people lining up behind your so

69
00:04:29,510 --> 00:04:37,250
that's not<font color="#E5E5E5"> a very good experience and</font>

70
00:04:33,320 --> 00:04:40,540
that that's actually the first thing you

71
00:04:37,250 --> 00:04:46,520
learn when you start programming no GS

72
00:04:40,540 --> 00:04:49,160
it's easy to to create a system that's

73
00:04:46,520 --> 00:04:53,299
really successful to denial of service

74
00:04:49,160 --> 00:04:59,330
attacks<font color="#CCCCCC"> alright so here's a little app</font>

75
00:04:53,300 --> 00:05:06,350
that calculates some right of numbers

76
00:04:59,330 --> 00:05:09,109
from 1 to P all right and I'll show you

77
00:05:06,350 --> 00:05:14,800
what kind<font color="#E5E5E5"> of effect it has them on the</font>

78
00:05:09,110 --> 00:05:25,430
system if<font color="#CCCCCC"> P is a sufficient to a large</font>

79
00:05:14,800 --> 00:05:29,270
so got a few links here so<font color="#CCCCCC"> you know if</font>

80
00:05:25,430 --> 00:05:32,030
we do it with with five<font color="#E5E5E5"> all right you</font>

81
00:05:29,270 --> 00:05:34,520
<font color="#E5E5E5">know cool a couple operation one two</font>

82
00:05:32,030 --> 00:05:38,059
<font color="#CCCCCC">three four five six seven whatever it is</font>

83
00:05:34,520 --> 00:05:41,810
the same<font color="#CCCCCC"> sound with 15 system returns</font>

84
00:05:38,060 --> 00:05:47,750
pretty quickly all right so why don't<font color="#CCCCCC"> we</font>

85
00:05:41,810 --> 00:05:49,900
do it with a five well whatever it is<font color="#E5E5E5"> I</font>

86
00:05:47,750 --> 00:05:56,440
didn't<font color="#E5E5E5"> know what the numbers big number</font>

87
00:05:49,900 --> 00:06:01,060
see it's calculate calculate but

88
00:05:56,440 --> 00:06:06,010
the thing about it<font color="#E5E5E5"> is that all other</font>

89
00:06:01,060 --> 00:06:10,030
threads or other user threads are also

90
00:06:06,010 --> 00:06:13,840
hung waiting for that one one to come

91
00:06:10,030 --> 00:06:17,169
back<font color="#E5E5E5"> so even our quick and easy</font>

92
00:06:13,840 --> 00:06:20,349
calculation from one to five cannot

93
00:06:17,170 --> 00:06:25,030
return until the longer operation is

94
00:06:20,350 --> 00:06:28,270
complete so that's not something you'd

95
00:06:25,030 --> 00:06:31,840
want to<font color="#E5E5E5"> use our users to experience all</font>

96
00:06:28,270 --> 00:06:36,430
right you don't want one user session to

97
00:06:31,840 --> 00:06:44,560
hijack the entire application it will

98
00:06:36,430 --> 00:06:48,700
eventually finish so i think<font color="#E5E5E5"> my</font><font color="#CCCCCC"> tests</font>

99
00:06:44,560 --> 00:06:53,470
took about<font color="#E5E5E5"> 40 seconds here so you know</font>

100
00:06:48,700 --> 00:06:57,159
crafting figure out what input makes

101
00:06:53,470 --> 00:06:59,650
your application run for a while can be

102
00:06:57,160 --> 00:07:03,300
<font color="#E5E5E5">used to to do pre effective denial of</font>

103
00:06:59,650 --> 00:07:03,299
service attack on<font color="#E5E5E5"> yeah</font>

104
00:07:05,950 --> 00:07:12,520
maybe need a better processor my laptop

105
00:07:09,550 --> 00:07:18,580
looks like so<font color="#E5E5E5"> it's but by the way so</font>

106
00:07:12,520 --> 00:07:27,430
yeah chugging along<font color="#CCCCCC"> yeah notice here</font>

107
00:07:18,580 --> 00:07:28,659
Stingo status using<font color="#CCCCCC"> 14 anyway now going</font>

108
00:07:27,430 --> 00:07:32,710
to wait for it<font color="#E5E5E5"> let's go back to the</font>

109
00:07:28,660 --> 00:07:37,150
presentation so keep that in<font color="#E5E5E5"> mind right</font>

110
00:07:32,710 --> 00:07:44,680
Noah<font color="#CCCCCC"> long-running application logic</font>

111
00:07:37,150 --> 00:07:51,370
things like that and interesting fact

112
00:07:44,680 --> 00:07:55,930
about about<font color="#E5E5E5"> no Jas</font><font color="#CCCCCC"> that you probably</font>

113
00:07:51,370 --> 00:07:58,210
already know is that it runs a version

114
00:07:55,930 --> 00:08:01,960
of v8 which is a google<font color="#E5E5E5"> JavaScript</font>

115
00:07:58,210 --> 00:08:06,390
engine<font color="#E5E5E5"> i tote instead of running it in</font>

116
00:08:01,960 --> 00:08:06,390
the browser runs<font color="#E5E5E5"> it back on the server</font>

117
00:08:07,560 --> 00:08:14,980
v8 has a known weakness and we'll<font color="#E5E5E5"> talk</font>

118
00:08:12,760 --> 00:08:19,900
about it in a second but this an actual

119
00:08:14,980 --> 00:08:22,300
code snippet is from a real real code

120
00:08:19,900 --> 00:08:24,669
right from an open source project and

121
00:08:22,300 --> 00:08:28,120
it's used<font color="#E5E5E5"> to generate passwords for new</font>

122
00:08:24,670 --> 00:08:32,050
users so um what's wrong with<font color="#CCCCCC"> it and so</font>

123
00:08:28,120 --> 00:08:35,830
anybody tell me empty<font color="#E5E5E5"> five is bad</font>

124
00:08:32,049 --> 00:08:38,469
<font color="#CCCCCC">alright why is it</font><font color="#E5E5E5"> bad is it easily easy</font>

125
00:08:35,830 --> 00:08:40,180
to break but you know what we<font color="#E5E5E5"> are we're</font>

126
00:08:38,470 --> 00:08:43,420
generating new password somebody's going

127
00:08:40,179 --> 00:08:44,920
<font color="#E5E5E5">to change it right so it's really not</font>

128
00:08:43,419 --> 00:08:46,449
we're not using it to encrypt

129
00:08:44,920 --> 00:08:48,880
communication which is generating a<font color="#CCCCCC"> new</font>

130
00:08:46,450 --> 00:08:52,690
password which is going<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> a string</font>

131
00:08:48,880 --> 00:08:56,200
of meaningless numbers and letters so

132
00:08:52,690 --> 00:09:00,780
empty five in general is bad but that's

133
00:08:56,200 --> 00:09:00,780
not why it is back here<font color="#E5E5E5"> okay</font>

134
00:09:02,850 --> 00:09:09,220
right<font color="#CCCCCC"> Samantha Trentham is not secure</font>

135
00:09:05,860 --> 00:09:16,329
that's that's<font color="#CCCCCC"> some more it's a worse</font>

136
00:09:09,220 --> 00:09:19,000
problem here so yeah it's up<font color="#E5E5E5"> to</font><font color="#CCCCCC"> tutor</font>

137
00:09:16,329 --> 00:09:24,939
random number generator but it's not

138
00:09:19,000 --> 00:09:30,120
<font color="#E5E5E5">really random and it's actually known to</font>

139
00:09:24,940 --> 00:09:38,889
be weak prng so the way<font color="#CCCCCC"> it works is that</font>

140
00:09:30,120 --> 00:09:41,440
are in v8 they use a system call brand

141
00:09:38,889 --> 00:09:44,829
or something like that to generate a

142
00:09:41,440 --> 00:09:49,509
seed from that from there they have this

143
00:09:44,829 --> 00:09:53,500
sequence of states part of the state

144
00:09:49,509 --> 00:09:56,319
variable<font color="#CCCCCC"> too long long number is used as</font>

145
00:09:53,500 --> 00:09:59,259
that pseudo random number and the other

146
00:09:56,319 --> 00:10:04,709
<font color="#E5E5E5">part is used to generate the next seed</font>

147
00:09:59,259 --> 00:10:09,850
next state sorry<font color="#CCCCCC"> okay so continues</font>

148
00:10:04,709 --> 00:10:12,219
finish continues<font color="#CCCCCC"> now I imagine you</font>

149
00:10:09,850 --> 00:10:14,740
everybody will get the copy<font color="#E5E5E5"> of my</font>

150
00:10:12,220 --> 00:10:17,949
presentation there's a link to amid

151
00:10:14,740 --> 00:10:23,670
clients research few years old research

152
00:10:17,949 --> 00:10:27,310
but I mean actually figured out that by

153
00:10:23,670 --> 00:10:29,949
knowing three subsequent three

154
00:10:27,310 --> 00:10:33,189
consecutive random numbers we can

155
00:10:29,949 --> 00:10:36,459
predict our future random numbers all

156
00:10:33,189 --> 00:10:42,389
<font color="#E5E5E5">you need is just three consecutive</font>

157
00:10:36,459 --> 00:10:42,388
random numbers hansika anywhere

158
00:10:44,130 --> 00:10:52,920
so so how would<font color="#E5E5E5"> we attack this this</font>

159
00:10:50,220 --> 00:10:58,410
<font color="#E5E5E5">particular system all right we can</font>

160
00:10:52,920 --> 00:11:02,310
<font color="#CCCCCC">actually generate three passwords that</font>

161
00:10:58,410 --> 00:11:07,079
will give us three md5 hash random

162
00:11:02,310 --> 00:11:12,359
numbers md5 hash is somewhat easy to

163
00:11:07,080 --> 00:11:16,620
reverse right it's computationally not

164
00:11:12,360 --> 00:11:19,920
very<font color="#E5E5E5"> expensive to reverse it and so that</font>

165
00:11:16,620 --> 00:11:22,310
will give us three consecutive random

166
00:11:19,920 --> 00:11:32,430
numbers from there we can generate

167
00:11:22,310 --> 00:11:35,939
fourth fifth sixth etc and and actually

168
00:11:32,430 --> 00:11:37,709
see what the future new user passwords

169
00:11:35,940 --> 00:11:40,230
will be<font color="#E5E5E5"> we'll go through that tap in a</font>

170
00:11:37,710 --> 00:11:43,380
few seconds<font color="#E5E5E5"> but that</font><font color="#CCCCCC"> actually is a known</font>

171
00:11:40,230 --> 00:11:50,100
issuance been known for known issue in

172
00:11:43,380 --> 00:11:51,570
v8 since I<font color="#E5E5E5"> don't know</font><font color="#CCCCCC"> 2009-2010 and it's</font>

173
00:11:50,100 --> 00:11:54,230
not a big issue in browsers because in

174
00:11:51,570 --> 00:11:58,740
browsers each tab runs in<font color="#E5E5E5"> its own</font>

175
00:11:54,230 --> 00:12:01,350
process and has its own chain of state

176
00:11:58,740 --> 00:12:05,790
variables his own<font color="#E5E5E5"> state a chain of</font>

177
00:12:01,350 --> 00:12:08,310
random numbers<font color="#E5E5E5"> so guessing you know that</font>

178
00:12:05,790 --> 00:12:10,589
sequence will only compromise your own

179
00:12:08,310 --> 00:12:14,670
tab which is not<font color="#E5E5E5"> exactly very</font>

180
00:12:10,590 --> 00:12:19,470
interesting right but<font color="#CCCCCC"> remember that no</font>

181
00:12:14,670 --> 00:12:24,410
GF runs one copy of v8 for everyone and

182
00:12:19,470 --> 00:12:24,410
so there there it becomes an issue

183
00:12:26,920 --> 00:12:35,029
so what we're going to do I'm going to

184
00:12:30,589 --> 00:12:39,160
actually demo yeah how easy<font color="#E5E5E5"> it is now</font>

185
00:12:35,029 --> 00:12:46,460
register one user register second user

186
00:12:39,160 --> 00:12:48,410
register third user reverse md5 and

187
00:12:46,460 --> 00:12:51,260
cooled em in cool animations right I

188
00:12:48,410 --> 00:12:55,550
have<font color="#E5E5E5"> to give it to my marketing folks</font>

189
00:12:51,260 --> 00:13:00,380
they took an engineer's presentation

190
00:12:55,550 --> 00:13:04,300
turn it into something I can<font color="#CCCCCC"> actually</font>

191
00:13:00,380 --> 00:13:08,120
walk you through<font color="#CCCCCC"> alright and so</font>

192
00:13:04,300 --> 00:13:09,979
reversing<font color="#CCCCCC"> ft fives will give us three</font>

193
00:13:08,120 --> 00:13:12,410
random numbers from there we will

194
00:13:09,980 --> 00:13:18,760
<font color="#E5E5E5">generate the fourth and be able to</font>

195
00:13:12,410 --> 00:13:22,880
predict passwords so for that purpose

196
00:13:18,760 --> 00:13:25,010
<font color="#E5E5E5">I'm going to go to like a very secure</font>

197
00:13:22,880 --> 00:13:27,260
website you know it's secure right

198
00:13:25,010 --> 00:13:30,110
because it has a lock big picture<font color="#E5E5E5"> of a</font>

199
00:13:27,260 --> 00:13:38,920
lock on it so it's secure and<font color="#E5E5E5"> we're</font>

200
00:13:30,110 --> 00:13:44,830
going to register users user 1 user one

201
00:13:38,920 --> 00:13:48,439
register so suppose<font color="#CCCCCC"> we get an email</font>

202
00:13:44,830 --> 00:13:53,510
welcome user one this is<font color="#E5E5E5"> your completely</font>

203
00:13:48,440 --> 00:13:54,740
unbreakable password then we're going to

204
00:13:53,510 --> 00:13:58,670
feed that completely unbreakable

205
00:13:54,740 --> 00:14:00,980
password into an md5 d quarter that<font color="#CCCCCC"> we</font>

206
00:13:58,670 --> 00:14:03,650
<font color="#E5E5E5">built for</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> purpose it's a big one</font>

207
00:14:00,980 --> 00:14:08,360
big rainbow table lookup table brute

208
00:14:03,650 --> 00:14:11,240
<font color="#CCCCCC">force reverse engineering it's a big</font>

209
00:14:08,360 --> 00:14:15,430
table but it truly is not very difficult

210
00:14:11,240 --> 00:14:15,430
to to build<font color="#CCCCCC"> dr. use</font>

211
00:14:16,830 --> 00:14:25,360
now there it<font color="#E5E5E5"> is this is the first random</font>

212
00:14:21,610 --> 00:14:29,100
number we're going<font color="#E5E5E5"> to feed it into a</font>

213
00:14:25,360 --> 00:14:41,430
<font color="#E5E5E5">very handy calculator and go back</font>

214
00:14:29,100 --> 00:14:41,430
register user to repeat rinse repeat

215
00:14:51,750 --> 00:14:58,949
gives us some random number<font color="#CCCCCC"> two</font>

216
00:15:18,310 --> 00:15:24,510
okay and so three consecutive random

217
00:15:22,690 --> 00:15:29,340
numbers we're going<font color="#E5E5E5"> to get the fourth</font>

218
00:15:24,510 --> 00:15:34,650
consecutive random number and an md5

219
00:15:29,340 --> 00:15:34,650
hash of it that's our password

220
00:15:42,760 --> 00:15:46,830
that's quite<font color="#E5E5E5"> a bit of calculation</font>

221
00:15:44,500 --> 00:15:46,830
involved

222
00:15:52,610 --> 00:15:55,870
what happens if someone

223
00:15:57,190 --> 00:16:07,190
you try again since you can really

224
00:16:01,580 --> 00:16:09,110
register yeah Mike secure website is

225
00:16:07,190 --> 00:16:11,870
probably not<font color="#E5E5E5"> too popular but remember</font>

226
00:16:09,110 --> 00:16:13,670
you don't<font color="#E5E5E5"> really have to type these in</font>

227
00:16:11,870 --> 00:16:18,460
right you can just submit them through

228
00:16:13,670 --> 00:16:26,439
script maybe<font color="#CCCCCC"> even in</font><font color="#E5E5E5"> the single request</font>

229
00:16:18,460 --> 00:16:26,440
to m2m in the morning right<font color="#CCCCCC"> crunching</font>

230
00:16:30,510 --> 00:16:38,270
story of my life demos live demos never

231
00:16:34,610 --> 00:16:38,270
go smoothly right

232
00:16:49,680 --> 00:16:57,029
oh you so you you so this can<font color="#CCCCCC"> be used to</font>

233
00:16:54,990 --> 00:16:58,890
<font color="#E5E5E5">generate new user so it actually is</font>

234
00:16:57,029 --> 00:17:00,779
probably more interesting is to use it

235
00:16:58,890 --> 00:17:05,939
<font color="#CCCCCC">to reset somebody else's password right</font>

236
00:17:00,779 --> 00:17:13,349
so I enter<font color="#E5E5E5"> three fake emails my my own</font>

237
00:17:05,939 --> 00:17:15,600
emails get three random numbers should

238
00:17:13,349 --> 00:17:19,260
have come back by now and then i go to

239
00:17:15,599 --> 00:17:21,750
reset yours right and even though i

240
00:17:19,260 --> 00:17:24,209
don't get<font color="#CCCCCC"> the email with your new</font>

241
00:17:21,750 --> 00:17:26,420
password<font color="#E5E5E5"> I know it and so I try to</font><font color="#CCCCCC"> log</font>

242
00:17:24,209 --> 00:17:26,420
<font color="#CCCCCC">in</font>

243
00:18:01,299 --> 00:18:07,470
no matter how you talk how many times

244
00:18:03,249 --> 00:18:07,470
you try<font color="#E5E5E5"> before the presentation right</font>

245
00:18:22,480 --> 00:18:31,309
anyway trust me it works let's see if it

246
00:18:29,419 --> 00:18:33,529
comes back and if you in a in a few

247
00:18:31,309 --> 00:18:44,289
minutes 4 minutes but maybe you know

248
00:18:33,529 --> 00:18:44,289
what's up now that one<font color="#CCCCCC"> completed so</font>

249
00:19:04,269 --> 00:19:08,769
you trust me right each other this is<font color="#CCCCCC"> a</font>

250
00:19:06,339 --> 00:19:12,759
this is<font color="#CCCCCC"> security conference you'll trust</font>

251
00:19:08,769 --> 00:19:16,089
me but yeah it works actually um until<font color="#CCCCCC"> I</font>

252
00:19:12,759 --> 00:19:19,059
we did a version of this talk at<font color="#CCCCCC"> pep</font>

253
00:19:16,089 --> 00:19:26,799
<font color="#E5E5E5">sack not not this one but slightly</font>

254
00:19:19,059 --> 00:19:29,139
different on but use that yeah i mean

255
00:19:26,799 --> 00:19:30,729
that's math that random and with their

256
00:19:29,139 --> 00:19:35,889
implementation of<font color="#CCCCCC"> math that random and</font>

257
00:19:30,729 --> 00:19:39,579
<font color="#E5E5E5">v8 in the egg yeah so I it's probably</font>

258
00:19:35,889 --> 00:19:41,799
very similar to other implementations of

259
00:19:39,579 --> 00:19:43,539
math that random so you probably

260
00:19:41,799 --> 00:19:47,889
shouldn't user go at least shouldn't use

261
00:19:43,539 --> 00:19:50,320
it<font color="#E5E5E5"> them this easy to break matter I'd at</font>

262
00:19:47,889 --> 00:19:57,299
least cash it with something more than

263
00:19:50,320 --> 00:20:00,519
an md5 but I guess the the defense is

264
00:19:57,299 --> 00:20:02,769
maybe use authorization tokens instead

265
00:20:00,519 --> 00:20:04,959
<font color="#E5E5E5">of just generating new passwords thanks</font>

266
00:20:02,769 --> 00:20:08,789
like that you actually have to<font color="#E5E5E5"> get that</font>

267
00:20:04,959 --> 00:20:12,570
email within you talking as opposed to

268
00:20:08,789 --> 00:20:12,570
be<font color="#CCCCCC"> able to guess the password</font>

269
00:20:13,550 --> 00:20:24,480
alright<font color="#E5E5E5"> mongodb right and</font><font color="#CCCCCC"> Jason based</font>

270
00:20:18,440 --> 00:20:29,550
<font color="#CCCCCC">chicken jacks</font><font color="#E5E5E5"> and yes so</font><font color="#CCCCCC"> majority of no</font>

271
00:20:24,480 --> 00:20:33,840
Jas apps actually use MongoDB<font color="#CCCCCC"> source a</font>

272
00:20:29,550 --> 00:20:37,169
similar database as a back end it's a

273
00:20:33,840 --> 00:20:39,149
document how are we enter database it

274
00:20:37,170 --> 00:20:41,780
stores objects not get traditional

275
00:20:39,150 --> 00:20:48,780
tables and<font color="#E5E5E5"> rose right so there's no</font>

276
00:20:41,780 --> 00:20:51,470
native sequel commands there and you<font color="#E5E5E5"> can</font>

277
00:20:48,780 --> 00:20:56,040
actually do operations on it using JSON

278
00:20:51,470 --> 00:21:01,140
it's very easy to adapt for a typical

279
00:20:56,040 --> 00:21:03,389
web app development a lot of objects<font color="#CCCCCC"> are</font>

280
00:21:01,140 --> 00:21:06,480
story this again can be represented well

281
00:21:03,390 --> 00:21:11,850
in JSON format and their native list or

282
00:21:06,480 --> 00:21:17,600
<font color="#E5E5E5">in type of database so you know you</font>

283
00:21:11,850 --> 00:21:21,090
operate on<font color="#CCCCCC"> the database using plain json</font>

284
00:21:17,600 --> 00:21:23,820
structures all right you can<font color="#CCCCCC"> actually</font>

285
00:21:21,090 --> 00:21:26,730
store very dissimilar object<font color="#CCCCCC"> in database</font>

286
00:21:23,820 --> 00:21:31,669
you don't have to try to fit everything

287
00:21:26,730 --> 00:21:35,610
into a neat table key etc architecture

288
00:21:31,670 --> 00:21:39,360
you<font color="#CCCCCC"> can search database using JSON</font>

289
00:21:35,610 --> 00:21:42,600
structures<font color="#CCCCCC"> alright so you</font><font color="#E5E5E5"> can specify</font>

290
00:21:39,360 --> 00:21:45,530
partial match against specify operations

291
00:21:42,600 --> 00:21:45,530
as well

292
00:21:46,240 --> 00:21:55,000
so you know regular sequel injection is

293
00:21:52,500 --> 00:21:58,570
not possible because there's no sequel

294
00:21:55,000 --> 00:22:00,610
alright so I hope everybody here

295
00:21:58,570 --> 00:22:05,320
understands that this is not a good way

296
00:22:00,610 --> 00:22:08,428
<font color="#E5E5E5">to do sequence sequel right now in JSON</font>

297
00:22:05,320 --> 00:22:11,620
format something like that<font color="#CCCCCC"> would look</font>

298
00:22:08,429 --> 00:22:13,360
very similar right you get password from

299
00:22:11,620 --> 00:22:19,209
the user<font color="#E5E5E5"> you get name from the user</font><font color="#CCCCCC"> user</font>

300
00:22:13,360 --> 00:22:25,899
<font color="#CCCCCC">name from the</font><font color="#E5E5E5"> user and you do find now</font>

301
00:22:19,210 --> 00:22:32,559
problem is it is the JSON actually

302
00:22:25,900 --> 00:22:36,100
accepts operations all right greater

303
00:22:32,559 --> 00:22:38,678
than<font color="#E5E5E5"> or less than so</font><font color="#CCCCCC"> I can I</font><font color="#E5E5E5"> can do</font>

304
00:22:36,100 --> 00:22:43,030
something like this and say give me all

305
00:22:38,679 --> 00:22:46,059
usernames with username greater than a

306
00:22:43,030 --> 00:22:48,730
and password greater<font color="#CCCCCC"> than a just</font><font color="#E5E5E5"> about</font>

307
00:22:46,059 --> 00:22:54,670
being a string is greater than a<font color="#CCCCCC"> alright</font>

308
00:22:48,730 --> 00:22:59,260
so let<font color="#E5E5E5"> me show you a little bit it's</font>

309
00:22:54,670 --> 00:23:02,890
<font color="#E5E5E5">still running no it's not funny going</font>

310
00:22:59,260 --> 00:23:05,679
back it's done finally so this is<font color="#CCCCCC"> the</font>

311
00:23:02,890 --> 00:23:08,880
random the state variable next state

312
00:23:05,679 --> 00:23:14,280
variable this is the password so if I I

313
00:23:08,880 --> 00:23:17,640
go back to my user and try to register

314
00:23:14,280 --> 00:23:17,639
another user

315
00:23:20,469 --> 00:23:34,399
so you start to the time be 64 and<font color="#CCCCCC"> wispy</font>

316
00:23:24,379 --> 00:23:38,809
6 DC oh yeah maybe we don't do the right

317
00:23:34,399 --> 00:23:49,369
numbers here if we have time oh I'll

318
00:23:38,809 --> 00:23:52,399
I'll do private showing so well I have

319
00:23:49,369 --> 00:24:01,070
another seek security r the secure site

320
00:23:52,399 --> 00:24:04,218
and let's try<font color="#E5E5E5"> to login as admin ok so</font>

321
00:24:01,070 --> 00:24:10,269
it's Edmund Edmund but suppose I don't

322
00:24:04,219 --> 00:24:10,269
really know it and I'm<font color="#CCCCCC"> going to do</font>

323
00:24:12,159 --> 00:24:21,309
something<font color="#CCCCCC"> like a and 8 no that doesn't</font>

324
00:24:15,679 --> 00:24:21,309
work system doesn't let me in but

325
00:24:25,650 --> 00:24:31,230
if<font color="#E5E5E5"> I do something</font><font color="#CCCCCC"> like this where user</font>

326
00:24:29,250 --> 00:24:37,010
is greater than a and password is

327
00:24:31,230 --> 00:24:47,030
greater than a<font color="#CCCCCC"> ok come on in you're in</font>

328
00:24:37,010 --> 00:24:49,590
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so not checking for kinda</font>

329
00:24:47,030 --> 00:24:52,889
disallowed characters and you<font color="#CCCCCC"> user</font><font color="#E5E5E5"> name</font>

330
00:24:49,590 --> 00:25:02,699
<font color="#E5E5E5">user user password in your query you can</font>

331
00:24:52,890 --> 00:25:08,940
still lead to bad result<font color="#E5E5E5"> alright so we</font>

332
00:25:02,700 --> 00:25:13,920
just<font color="#CCCCCC"> did that now the common defense</font>

333
00:25:08,940 --> 00:25:17,250
against this type of attack is to go

334
00:25:13,920 --> 00:25:19,020
find that username and then compare

335
00:25:17,250 --> 00:25:25,950
passwords right in the separate

336
00:25:19,020 --> 00:25:35,129
operation so yeah that might work out a

337
00:25:25,950 --> 00:25:43,400
bit however<font color="#CCCCCC"> even the first line there in</font>

338
00:25:35,130 --> 00:25:46,230
the find that can be attack using regex

339
00:25:43,400 --> 00:25:51,030
so if<font color="#E5E5E5"> I supply a really really really</font>

340
00:25:46,230 --> 00:25:54,060
long regex string point Oh your system

341
00:25:51,030 --> 00:25:57,170
is<font color="#CCCCCC"> going to be tied up forever so let me</font>

342
00:25:54,060 --> 00:25:57,169
<font color="#E5E5E5">show you how that works</font>

343
00:26:08,280 --> 00:26:13,490
exel takes a while towns to paste

344
00:26:24,830 --> 00:26:28,040
just kill

345
00:26:59,600 --> 00:27:07,860
should the waiter should we kill it when

346
00:27:02,160 --> 00:27:18,950
you say kill it wait kill it wait there

347
00:27:07,860 --> 00:27:27,060
you go so well it it ties up the system

348
00:27:18,950 --> 00:27:30,390
but<font color="#CCCCCC"> the idea is that if you remember no</font>

349
00:27:27,060 --> 00:27:34,500
GS is a single-threaded app right so if

350
00:27:30,390 --> 00:27:38,400
<font color="#E5E5E5">I die up one session with a very long</font>

351
00:27:34,500 --> 00:27:48,540
<font color="#E5E5E5">and very nasty regex everybody else will</font>

352
00:27:38,400 --> 00:27:51,390
be waiting<font color="#E5E5E5"> for it to return so i guess a</font>

353
00:27:48,540 --> 00:27:55,620
little bit of a random advice from next

354
00:27:51,390 --> 00:27:59,880
time<font color="#E5E5E5"> the</font><font color="#CCCCCC"> M so that's all I actually had</font>

355
00:27:55,620 --> 00:28:03,169
a head to show now that<font color="#CCCCCC"> it's late in the</font>

356
00:27:59,880 --> 00:28:08,960
afternoon so probably have a few minutes

357
00:28:03,170 --> 00:28:08,960
for AQA maybe i'll redo the

358
00:28:13,720 --> 00:28:24,090
once my system actually comes back we do

359
00:28:18,430 --> 00:28:29,250
the the other demo but remember that

360
00:28:24,090 --> 00:28:34,840
<font color="#E5E5E5">nodejs is a very powerful thing just not</font>

361
00:28:29,250 --> 00:28:39,340
don't put business logic into to the

362
00:28:34,840 --> 00:28:43,449
thread right and do validate input no

363
00:28:39,340 --> 00:28:46,720
matter what the underlying system is

364
00:28:43,450 --> 00:28:51,580
framework is<font color="#CCCCCC"> you always validate user</font>

365
00:28:46,720 --> 00:28:53,610
input let's see<font color="#E5E5E5"> I have to show it has to</font>

366
00:28:51,580 --> 00:28:53,610
work

367
00:29:01,690 --> 00:29:07,980
there's my system completely hose now

368
00:29:03,850 --> 00:29:07,980
<font color="#E5E5E5">yes okay</font>

369
00:30:26,630 --> 00:30:34,620
<font color="#CCCCCC">right see it's</font><font color="#E5E5E5"> not gonna wait it anyway</font>

370
00:30:31,440 --> 00:30:38,639
that's that's really what I have to show

371
00:30:34,620 --> 00:30:42,209
you<font color="#CCCCCC"> guys I hope that doesn't scare you</font>

372
00:30:38,639 --> 00:30:50,029
away from<font color="#E5E5E5"> using no GS in the future</font><font color="#CCCCCC"> all</font>

373
00:30:42,210 --> 00:30:54,529
<font color="#CCCCCC">right thanks for</font><font color="#E5E5E5"> coming</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> welcome to</font>

374
00:30:50,029 --> 00:30:54,529
last to stick around them ask questions

375
00:30:59,299 --> 00:31:06,960
um there's<font color="#CCCCCC"> no secure randleman in</font><font color="#E5E5E5"> no GS</font>

376
00:31:03,779 --> 00:31:16,230
right you can either find<font color="#E5E5E5"> a library that</font>

377
00:31:06,960 --> 00:31:20,190
does it or you can use a more native

378
00:31:16,230 --> 00:31:22,889
code rent rent ass instead of that into

379
00:31:20,190 --> 00:31:27,090
a friend just regular<font color="#CCCCCC"> r and s friend yes</font>

380
00:31:22,889 --> 00:31:31,668
depends<font color="#CCCCCC"> for that or hash it with</font>

381
00:31:27,090 --> 00:31:31,668
something that's harder to break right

382
00:31:33,140 --> 00:31:39,580
here's a<font color="#E5E5E5"> finally let's back so 3653</font>

383
00:31:43,100 --> 00:31:53,330
hey it doesn't work<font color="#CCCCCC"> all right wasn't</font>

384
00:31:50,030 --> 00:31:56,210
<font color="#CCCCCC">wasn't</font><font color="#E5E5E5"> wasn't some black magic with with</font>

385
00:31:53,330 --> 00:31:58,610
predefined values but yeah I mean that's

386
00:31:56,210 --> 00:32:07,820
it's an interesting interesting attack

387
00:31:58,610 --> 00:32:10,070
that head-on comes to as a surprise to a

388
00:32:07,820 --> 00:32:12,350
lot of people<font color="#E5E5E5"> to tell but you don't know</font>

389
00:32:10,070 --> 00:32:15,830
my<font color="#CCCCCC"> email right how come you guess my</font>

390
00:32:12,350 --> 00:32:17,840
password if you<font color="#E5E5E5"> I need to read your</font>

391
00:32:15,830 --> 00:32:23,230
email to guess your password a I can do

392
00:32:17,840 --> 00:32:27,020
it it's an interesting fact that the

393
00:32:23,230 --> 00:32:31,039
vulnerability has been known and at

394
00:32:27,020 --> 00:32:37,179
second there's actually an open bargain

395
00:32:31,039 --> 00:32:40,158
on v8 and a v8<font color="#CCCCCC"> that's what they use but</font>

396
00:32:37,179 --> 00:32:43,640
you can go and read the whole thread and

397
00:32:40,159 --> 00:32:48,320
basically that one fix because it's

398
00:32:43,640 --> 00:32:50,210
really<font color="#E5E5E5"> not applicable to the browser so</font>

399
00:32:48,320 --> 00:32:52,879
in in the presentation there will be

400
00:32:50,210 --> 00:32:57,380
links to your regional research that

401
00:32:52,880 --> 00:33:02,740
talks about of all abilities in v8 it's

402
00:32:57,380 --> 00:33:06,610
going to<font color="#E5E5E5"> be a link to MongoDB exploits</font>

403
00:33:02,740 --> 00:33:11,270
so play with it see how easy it is to

404
00:33:06,610 --> 00:33:16,129
<font color="#E5E5E5">two breaks I guess manipulating Jason is</font>

405
00:33:11,270 --> 00:33:20,030
is new for a lot of us I think<font color="#E5E5E5"> most</font>

406
00:33:16,130 --> 00:33:22,460
developers have come to<font color="#E5E5E5"> a realization</font>

407
00:33:20,030 --> 00:33:28,190
that using dynamic sequel queries<font color="#E5E5E5"> is no</font>

408
00:33:22,460 --> 00:33:31,929
longer the right approach and we you

409
00:33:28,190 --> 00:33:34,100
know we use parameterize queries etc but

410
00:33:31,929 --> 00:33:36,580
working with Jason

411
00:33:34,100 --> 00:33:41,299
yes<font color="#CCCCCC"> in unit we it was very new to me and</font>

412
00:33:36,580 --> 00:33:44,389
when we played with<font color="#CCCCCC"> us where the queries</font>

413
00:33:41,299 --> 00:33:48,500
was very interesting to see you know

414
00:33:44,390 --> 00:33:53,169
what's a different type of attacks to

415
00:33:48,500 --> 00:33:53,169
get<font color="#E5E5E5"> off Jason um no sequel</font>

416
00:33:56,100 --> 00:34:03,240
input validation all right there's no

417
00:33:58,350 --> 00:34:09,060
way your user needs to have GT time

418
00:34:03,240 --> 00:34:14,850
ecology team I guess it's always input

419
00:34:09,060 --> 00:34:18,869
validation<font color="#CCCCCC"> night there's also i think</font>

420
00:34:14,850 --> 00:34:23,418
<font color="#CCCCCC">maybe some newer drivers that the tab</font>

421
00:34:18,869 --> 00:34:27,050
that<font color="#CCCCCC"> built-in</font><font color="#E5E5E5"> encoding built in but</font>

422
00:34:23,418 --> 00:34:27,049
<font color="#CCCCCC">don't keep that in mind</font>

423
00:34:27,869 --> 00:34:32,249
don't trust secure sites either even

424
00:34:30,239 --> 00:34:41,928
though they have a long picture of a

425
00:34:32,248 --> 00:34:41,928
lock<font color="#CCCCCC"> all right thanks thanks everybody</font>

