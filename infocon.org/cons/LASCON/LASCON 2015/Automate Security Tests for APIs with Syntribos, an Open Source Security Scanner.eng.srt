1
00:00:18,310 --> 00:00:23,659
<font color="#CCCCCC">I'm Nathan</font><font color="#E5E5E5"> Buckner I'm an SCT at</font>

2
00:00:20,900 --> 00:00:26,810
Rackspace<font color="#CCCCCC"> I work with the quality</font>

3
00:00:23,660 --> 00:00:30,198
engineering tools team<font color="#E5E5E5"> designing tools</font>

4
00:00:26,810 --> 00:00:38,420
for security<font color="#E5E5E5"> and</font><font color="#CCCCCC"> for other QE testing</font>

5
00:00:30,199 --> 00:00:40,579
teams<font color="#CCCCCC"> so I'm Stephen Lowry I'm also a</font>

6
00:00:38,420 --> 00:00:41,659
software<font color="#E5E5E5"> developer test at Rackspace</font><font color="#CCCCCC"> I</font>

7
00:00:40,579 --> 00:00:44,570
work on the automation and

8
00:00:41,659 --> 00:00:46,820
infrastructure team<font color="#E5E5E5"> we work on pretty</font>

9
00:00:44,570 --> 00:00:50,449
<font color="#E5E5E5">much everything throughout the company</font>

10
00:00:46,820 --> 00:00:52,790
developing tools helping to design<font color="#CCCCCC"> and</font>

11
00:00:50,449 --> 00:00:57,890
scope out solutions for different

12
00:00:52,790 --> 00:01:01,220
<font color="#E5E5E5">problems</font><font color="#CCCCCC"> oh yeah</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I try</font><font color="#E5E5E5"> to talk loud</font>

13
00:00:57,890 --> 00:01:06,979
here<font color="#E5E5E5"> so I'm Matt Valdez</font><font color="#CCCCCC"> the security</font>

14
00:01:01,220 --> 00:01:09,860
developer of the group<font color="#E5E5E5"> so so what does</font>

15
00:01:06,979 --> 00:01:11,929
that mean so our team<font color="#E5E5E5"> on the security</font>

16
00:01:09,860 --> 00:01:14,390
side we<font color="#CCCCCC"> actually report</font><font color="#E5E5E5"> in the same</font>

17
00:01:11,930 --> 00:01:16,700
structure as<font color="#E5E5E5"> the the quality engineering</font>

18
00:01:14,390 --> 00:01:18,770
team so<font color="#E5E5E5"> that means we're responsible for</font>

19
00:01:16,700 --> 00:01:21,070
<font color="#E5E5E5">a lot</font><font color="#CCCCCC"> of the testing efforts for</font><font color="#E5E5E5"> our</font>

20
00:01:18,770 --> 00:01:25,119
products<font color="#E5E5E5"> external internal</font>

21
00:01:21,070 --> 00:01:30,350
infrastructure<font color="#CCCCCC"> where</font><font color="#E5E5E5"> API is obviously</font>

22
00:01:25,120 --> 00:01:31,700
<font color="#E5E5E5">web UI is code reviews</font><font color="#CCCCCC"> so pretty</font><font color="#E5E5E5"> much</font>

23
00:01:30,350 --> 00:01:33,229
the<font color="#E5E5E5"> whole gamut there we have a separate</font>

24
00:01:31,700 --> 00:01:34,040
compliance department that handles those

25
00:01:33,229 --> 00:01:36,830
types of<font color="#E5E5E5"> things</font>

26
00:01:34,040 --> 00:01:41,810
luckily<font color="#E5E5E5"> we're involved a little bit in</font>

27
00:01:36,830 --> 00:01:44,000
the testing there sometimes<font color="#CCCCCC"> but so when</font>

28
00:01:41,810 --> 00:01:47,690
we're<font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about you know</font><font color="#CCCCCC"> our program</font>

29
00:01:44,000 --> 00:01:49,070
<font color="#CCCCCC">the way that we we manage things and</font><font color="#E5E5E5"> the</font>

30
00:01:47,690 --> 00:01:55,250
<font color="#E5E5E5">way the testing that we do there's so</font>

31
00:01:49,070 --> 00:01:56,960
much to do<font color="#CCCCCC"> so you know in case</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> case</font>

32
00:01:55,250 --> 00:01:59,000
you you know I've been living<font color="#E5E5E5"> under a</font>

33
00:01:56,960 --> 00:02:01,820
rock or<font color="#E5E5E5"> didn't</font><font color="#CCCCCC"> seem at tessaro's talk</font>

34
00:01:59,000 --> 00:02:03,710
yesterday there's this there's this<font color="#E5E5E5"> move</font>

35
00:02:01,820 --> 00:02:05,720
towards doing<font color="#E5E5E5"> a kind</font><font color="#CCCCCC"> of an app set</font>

36
00:02:03,710 --> 00:02:08,628
pipeline right doing automation where

37
00:02:05,720 --> 00:02:10,489
you can managing vulnerabilities

38
00:02:08,628 --> 00:02:13,099
managing your<font color="#E5E5E5"> intake managing your</font>

39
00:02:10,489 --> 00:02:16,879
processes so so as we look at kind<font color="#CCCCCC"> of a</font>

40
00:02:13,099 --> 00:02:18,439
pipeline<font color="#E5E5E5"> structure</font><font color="#CCCCCC"> it's kind of a</font>

41
00:02:16,879 --> 00:02:22,220
<font color="#CCCCCC">theoretical thing</font><font color="#E5E5E5"> when we</font><font color="#CCCCCC"> talk about</font><font color="#E5E5E5"> a</font>

42
00:02:18,439 --> 00:02:24,709
pipeline<font color="#CCCCCC"> but we're going to kind of look</font>

43
00:02:22,220 --> 00:02:29,120
<font color="#E5E5E5">at</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> what's inside that pipeline what</font>

44
00:02:24,709 --> 00:02:30,970
needs to be done<font color="#CCCCCC"> so picturing a pipeline</font>

45
00:02:29,120 --> 00:02:34,820
we've got inputs to it

46
00:02:30,970 --> 00:02:37,640
something happens in the pipeline<font color="#CCCCCC"> magic</font>

47
00:02:34,820 --> 00:02:39,709
<font color="#E5E5E5">some</font><font color="#CCCCCC"> beard rubbing</font><font color="#E5E5E5"> stuff like that on</font>

48
00:02:37,640 --> 00:02:41,209
the<font color="#E5E5E5"> up on the end of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> pipe</font><font color="#CCCCCC"> when you</font>

49
00:02:39,710 --> 00:02:43,550
get well hopefully<font color="#E5E5E5"> you get secure</font>

50
00:02:41,210 --> 00:02:47,990
applications<font color="#CCCCCC"> secure</font><font color="#E5E5E5"> software things like</font>

51
00:02:43,550 --> 00:02:49,190
that<font color="#CCCCCC"> so looking deeper in that</font><font color="#E5E5E5"> magic</font><font color="#CCCCCC"> oh</font>

52
00:02:47,990 --> 00:02:51,500
yeah

53
00:02:49,190 --> 00:02:53,030
security pipeline<font color="#CCCCCC"> looking deeper the</font>

54
00:02:51,500 --> 00:02:55,850
magic the thing that<font color="#E5E5E5"> that obviously</font>

55
00:02:53,030 --> 00:02:58,760
we're focused<font color="#CCCCCC"> on here and the security</font>

56
00:02:55,850 --> 00:03:01,190
group is testing<font color="#E5E5E5"> so that's to us that's</font>

57
00:02:58,760 --> 00:03:05,380
probably the most fun thing to<font color="#E5E5E5"> do it's</font>

58
00:03:01,190 --> 00:03:09,500
also arguably the most time intensive

59
00:03:05,380 --> 00:03:12,890
<font color="#E5E5E5">thing to do and so I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> that's really</font>

60
00:03:09,500 --> 00:03:13,970
<font color="#CCCCCC">where we can kind of try to get</font><font color="#E5E5E5"> the</font>

61
00:03:12,890 --> 00:03:16,100
biggest<font color="#E5E5E5"> bang for your buck when you're</font>

62
00:03:13,970 --> 00:03:20,600
talking about<font color="#E5E5E5"> automation and review your</font>

63
00:03:16,100 --> 00:03:22,579
<font color="#E5E5E5">processes</font><font color="#CCCCCC"> so obviously there's</font><font color="#E5E5E5"> always</font>

64
00:03:20,600 --> 00:03:25,760
<font color="#CCCCCC">new manual testing</font>

65
00:03:22,580 --> 00:03:27,140
<font color="#CCCCCC">I know verification</font><font color="#E5E5E5"> of bugs you don't</font>

66
00:03:25,760 --> 00:03:29,570
want false positives<font color="#E5E5E5"> and your reports to</font>

67
00:03:27,140 --> 00:03:30,950
<font color="#CCCCCC">the developers so there's always gonna</font>

68
00:03:29,570 --> 00:03:34,100
be some manual steps but let's see we

69
00:03:30,950 --> 00:03:36,769
can do to automate so we have we<font color="#E5E5E5"> have a</font>

70
00:03:34,100 --> 00:03:38,810
lot<font color="#E5E5E5"> of great tools</font><font color="#CCCCCC"> where we can do that</font>

71
00:03:36,770 --> 00:03:41,000
you guys might recognize<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of these I</font>

72
00:03:38,810 --> 00:03:42,380
don't<font color="#CCCCCC"> know kind of put this slide</font>

73
00:03:41,000 --> 00:03:44,930
together<font color="#E5E5E5"> this is definitely not a</font>

74
00:03:42,380 --> 00:03:47,060
definitive list<font color="#CCCCCC"> not</font><font color="#E5E5E5"> sure that we use all</font>

75
00:03:44,930 --> 00:03:49,459
these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> or I know that we</font><font color="#E5E5E5"> don't use</font>

76
00:03:47,060 --> 00:03:51,320
all<font color="#CCCCCC"> these</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> I just kind of wanted</font>

77
00:03:49,459 --> 00:03:52,280
<font color="#CCCCCC">to put a good kind of cross-section of</font>

78
00:03:51,320 --> 00:03:52,760
<font color="#E5E5E5">all the different tools that are</font>

79
00:03:52,280 --> 00:03:55,700
<font color="#CCCCCC">available</font>

80
00:03:52,760 --> 00:03:57,290
so obviously<font color="#E5E5E5"> top row first-class</font>

81
00:03:55,700 --> 00:03:59,540
citizens<font color="#E5E5E5"> are</font><font color="#CCCCCC"> open-source tools that we</font>

82
00:03:57,290 --> 00:04:01,820
know and<font color="#CCCCCC"> love and of course their</font>

83
00:03:59,540 --> 00:04:04,579
third-party vendors<font color="#CCCCCC"> and obviously</font>

84
00:04:01,820 --> 00:04:08,600
there's outsourcing that<font color="#E5E5E5"> you can do as</font>

85
00:04:04,580 --> 00:04:09,860
<font color="#E5E5E5">well</font><font color="#CCCCCC"> for some of this</font><font color="#E5E5E5"> testing</font><font color="#CCCCCC"> so again</font>

86
00:04:08,600 --> 00:04:13,700
what are we responsible for

87
00:04:09,860 --> 00:04:15,830
infrastructure<font color="#E5E5E5"> is there anything anybody</font>

88
00:04:13,700 --> 00:04:19,000
else responsible for<font color="#E5E5E5"> structure testing</font>

89
00:04:15,830 --> 00:04:21,859
where you're at this guy back here yeah

90
00:04:19,000 --> 00:04:26,390
<font color="#CCCCCC">so tools for that recognize anything</font>

91
00:04:21,858 --> 00:04:30,109
here<font color="#CCCCCC"> and</font><font color="#E5E5E5"> Matt it's classic alien guy</font>

92
00:04:26,390 --> 00:04:33,380
<font color="#CCCCCC">nikto good stuff so then we talk about</font>

93
00:04:30,110 --> 00:04:38,390
from infrastructure<font color="#CCCCCC"> we look at code</font>

94
00:04:33,380 --> 00:04:40,820
reviewing code analysis we've used very

95
00:04:38,390 --> 00:04:44,400
code in the past<font color="#E5E5E5"> there's probably some</font>

96
00:04:40,820 --> 00:04:47,099
other tools up here<font color="#CCCCCC"> we use checkmarks</font>

97
00:04:44,400 --> 00:04:49,049
and then going<font color="#CCCCCC"> onto web</font><font color="#E5E5E5"> UIs</font><font color="#CCCCCC"> so you have</font>

98
00:04:47,100 --> 00:04:56,400
a lot of crawlers things that work with

99
00:04:49,050 --> 00:04:58,699
<font color="#E5E5E5">that and and so automation for</font><font color="#CCCCCC"> those</font>

100
00:04:56,400 --> 00:05:00,870
three are great so when we come to api's

101
00:04:58,699 --> 00:05:03,889
<font color="#CCCCCC">we found that there's a lot of gaps</font>

102
00:05:00,870 --> 00:05:06,300
there<font color="#CCCCCC"> so some of these some of these</font>

103
00:05:03,889 --> 00:05:09,750
tools kind of<font color="#E5E5E5"> cross over</font><font color="#CCCCCC"> into api</font>

104
00:05:06,300 --> 00:05:12,240
testing<font color="#CCCCCC"> obviously we use we use</font><font color="#E5E5E5"> ports</font>

105
00:05:09,750 --> 00:05:14,190
<font color="#CCCCCC">burgers burp suite quite a bit for that</font>

106
00:05:12,240 --> 00:05:17,430
stuff and<font color="#E5E5E5"> it's a wonderful</font><font color="#CCCCCC"> tool it's</font>

107
00:05:14,190 --> 00:05:18,450
really enabling<font color="#E5E5E5"> for us to be able to see</font>

108
00:05:17,430 --> 00:05:23,430
the packets the<font color="#E5E5E5"> element if</font><font color="#CCCCCC"> you</font>

109
00:05:18,450 --> 00:05:28,979
<font color="#CCCCCC">manipulate the</font><font color="#E5E5E5"> packets and you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> it's</font>

110
00:05:23,430 --> 00:05:30,900
it's great<font color="#E5E5E5"> but so I</font><font color="#CCCCCC"> think there's still</font>

111
00:05:28,979 --> 00:05:33,479
<font color="#CCCCCC">some work to be</font><font color="#E5E5E5"> done there obviously</font>

112
00:05:30,900 --> 00:05:35,638
<font color="#E5E5E5">with automation</font><font color="#CCCCCC"> and I'm actually being</font>

113
00:05:33,479 --> 00:05:37,289
able to do automation within like your

114
00:05:35,639 --> 00:05:39,680
<font color="#CCCCCC">Jenkins pipeline of you know</font><font color="#E5E5E5"> the</font>

115
00:05:37,289 --> 00:05:43,770
automated testing<font color="#CCCCCC"> to again</font><font color="#E5E5E5"> get that</font>

116
00:05:39,680 --> 00:05:46,139
efficiency<font color="#E5E5E5"> so today API testing</font>

117
00:05:43,770 --> 00:05:47,250
<font color="#E5E5E5">automation so right now I feel</font><font color="#CCCCCC"> like I'm</font>

118
00:05:46,139 --> 00:05:52,050
just<font color="#CCCCCC"> gonna keep</font><font color="#E5E5E5"> doing the</font><font color="#CCCCCC"> same things</font>

119
00:05:47,250 --> 00:05:55,860
that<font color="#E5E5E5"> we've been doing using curl writing</font>

120
00:05:52,050 --> 00:05:58,080
custom<font color="#E5E5E5"> code</font><font color="#CCCCCC"> some of some</font><font color="#E5E5E5"> of our team is</font>

121
00:05:55,860 --> 00:06:01,139
<font color="#CCCCCC">actually using some of our rqe</font><font color="#E5E5E5"> test</font>

122
00:05:58,080 --> 00:06:04,770
frameworks<font color="#E5E5E5"> to write security tests very</font>

123
00:06:01,139 --> 00:06:07,349
development heavy<font color="#CCCCCC"> not exactly reusable</font>

124
00:06:04,770 --> 00:06:11,460
between different different products

125
00:06:07,349 --> 00:06:17,159
different<font color="#CCCCCC"> ap</font><font color="#E5E5E5"> is very custom it works</font>

126
00:06:11,460 --> 00:06:20,489
great but it's very time intensive<font color="#CCCCCC"> so</font>

127
00:06:17,160 --> 00:06:21,870
what does that matter to us<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> not</font>

128
00:06:20,490 --> 00:06:23,099
so for us it's<font color="#E5E5E5"> not good</font><font color="#CCCCCC"> enough</font><font color="#E5E5E5"> to say</font>

129
00:06:21,870 --> 00:06:25,710
<font color="#CCCCCC">okay we've got automation for</font><font color="#E5E5E5"> every</font>

130
00:06:23,099 --> 00:06:27,330
structure<font color="#CCCCCC"> got automation for you is</font>

131
00:06:25,710 --> 00:06:31,229
we've got automation for some code

132
00:06:27,330 --> 00:06:33,060
static<font color="#E5E5E5"> analysis</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> we just leave API</font>

133
00:06:31,229 --> 00:06:34,950
testing as kind<font color="#E5E5E5"> of a gap in automation</font>

134
00:06:33,060 --> 00:06:41,400
<font color="#E5E5E5">we just keep</font><font color="#CCCCCC"> it keep doing that</font><font color="#E5E5E5"> manually</font>

135
00:06:34,950 --> 00:06:43,669
or partially automated<font color="#CCCCCC"> well Rackspace we</font>

136
00:06:41,400 --> 00:06:46,320
use OpenStack<font color="#E5E5E5"> for a lot of our products</font>

137
00:06:43,669 --> 00:06:48,630
<font color="#CCCCCC">in case you don't</font><font color="#E5E5E5"> know open</font><font color="#CCCCCC"> open source</font>

138
00:06:46,320 --> 00:06:52,740
cloud platform<font color="#CCCCCC"> I was actually started by</font>

139
00:06:48,630 --> 00:06:54,479
NASA and Rackspace in 2010<font color="#CCCCCC"> lots of code</font>

140
00:06:52,740 --> 00:06:56,070
has<font color="#CCCCCC"> been contributed as you can see and</font>

141
00:06:54,479 --> 00:06:57,240
there's a lot<font color="#E5E5E5"> of contributors to the</font>

142
00:06:56,070 --> 00:07:01,380
<font color="#CCCCCC">project</font>

143
00:06:57,240 --> 00:07:03,120
most of its Python<font color="#E5E5E5"> so again going back</font>

144
00:07:01,380 --> 00:07:07,860
<font color="#E5E5E5">to the static analysis piece there's a</font>

145
00:07:03,120 --> 00:07:10,229
there's there's more<font color="#CCCCCC"> more platforms</font><font color="#E5E5E5"> that</font>

146
00:07:07,860 --> 00:07:12,960
are supporting<font color="#E5E5E5"> Python as we go along</font><font color="#CCCCCC"> but</font>

147
00:07:10,229 --> 00:07:16,409
<font color="#E5E5E5">it's definitely been a gap here</font><font color="#CCCCCC"> I'll</font>

148
00:07:12,960 --> 00:07:19,830
talk about<font color="#E5E5E5"> a a a Python static analysis</font>

149
00:07:16,410 --> 00:07:21,810
<font color="#CCCCCC">to a little bit later but this</font><font color="#E5E5E5"> the</font>

150
00:07:19,830 --> 00:07:25,409
<font color="#CCCCCC">reason this is relevant for</font><font color="#E5E5E5"> api's is</font>

151
00:07:21,810 --> 00:07:29,280
because OpenStack is basically API

152
00:07:25,410 --> 00:07:30,539
centric for<font color="#E5E5E5"> Rackspace if you go to our</font>

153
00:07:29,280 --> 00:07:33,630
<font color="#CCCCCC">web site</font><font color="#E5E5E5"> and you want to sign</font><font color="#CCCCCC"> up for a</font>

154
00:07:30,539 --> 00:07:35,550
cloud service<font color="#CCCCCC"> come on</font>

155
00:07:33,630 --> 00:07:39,270
there's a ton of them<font color="#E5E5E5"> so I think there's</font>

156
00:07:35,550 --> 00:07:42,030
20 up here<font color="#CCCCCC"> each one has an API each one</font>

157
00:07:39,270 --> 00:07:45,240
has multiple resources<font color="#E5E5E5"> potentially</font>

158
00:07:42,030 --> 00:07:45,690
<font color="#CCCCCC">multiple versions it runs the whole</font>

159
00:07:45,240 --> 00:07:47,490
<font color="#CCCCCC">gamut</font>

160
00:07:45,690 --> 00:07:50,729
so we're<font color="#E5E5E5"> responsible</font><font color="#CCCCCC"> for testing these</font>

161
00:07:47,490 --> 00:07:53,669
<font color="#E5E5E5">things and these are all</font><font color="#CCCCCC"> public facing</font>

162
00:07:50,729 --> 00:07:55,440
<font color="#E5E5E5">these all offer public api's customers</font>

163
00:07:53,669 --> 00:07:58,349
are using<font color="#E5E5E5"> these so they're</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> high</font>

164
00:07:55,440 --> 00:08:05,490
value<font color="#E5E5E5"> assets</font><font color="#CCCCCC"> there's a lot of</font><font color="#E5E5E5"> exposure</font>

165
00:07:58,349 --> 00:08:07,409
up there<font color="#E5E5E5"> to add to</font><font color="#CCCCCC"> that we do have a</font>

166
00:08:05,490 --> 00:08:08,760
control<font color="#CCCCCC"> panel for customers to use to</font>

167
00:08:07,409 --> 00:08:11,580
kind of take<font color="#CCCCCC"> advantage of some of the</font>

168
00:08:08,760 --> 00:08:13,560
some<font color="#CCCCCC"> of the more popular features here</font>

169
00:08:11,580 --> 00:08:16,080
<font color="#E5E5E5">but a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the functionality</font><font color="#CCCCCC"> on the</font>

170
00:08:13,560 --> 00:08:19,099
API is not<font color="#E5E5E5"> exposed in that UI</font><font color="#CCCCCC"> so that's</font>

171
00:08:16,080 --> 00:08:22,889
where some<font color="#CCCCCC"> of the some of the automated</font>

172
00:08:19,099 --> 00:08:24,750
<font color="#E5E5E5">API testers that we have API testers are</font>

173
00:08:22,889 --> 00:08:26,669
going to<font color="#CCCCCC"> phone that today kind</font><font color="#E5E5E5"> of have a</font>

174
00:08:24,750 --> 00:08:28,860
gap<font color="#E5E5E5"> because their browser driven they</font>

175
00:08:26,669 --> 00:08:30,659
need a needed UI to find the links<font color="#CCCCCC"> to</font>

176
00:08:28,860 --> 00:08:35,070
find<font color="#CCCCCC"> the</font><font color="#E5E5E5"> resources</font><font color="#CCCCCC"> to crawl those pages</font>

177
00:08:30,659 --> 00:08:36,000
and<font color="#E5E5E5"> get and examine the traffic going</font>

178
00:08:35,070 --> 00:08:38,550
back<font color="#E5E5E5"> and forth and</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> them</font>

179
00:08:36,000 --> 00:08:41,370
<font color="#E5E5E5">manipulating that data so if we don't</font>

180
00:08:38,549 --> 00:08:44,729
<font color="#E5E5E5">have a UI exposing these</font><font color="#CCCCCC"> capabilities we</font>

181
00:08:41,370 --> 00:08:48,750
have<font color="#E5E5E5"> to test it</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> straight on to</font>

182
00:08:44,730 --> 00:08:50,279
the<font color="#E5E5E5"> API</font><font color="#CCCCCC"> so in addition to these</font><font color="#E5E5E5"> public</font>

183
00:08:48,750 --> 00:08:53,220
<font color="#CCCCCC">API</font><font color="#E5E5E5"> is obviously we're going to have a</font>

184
00:08:50,279 --> 00:08:55,980
bunch<font color="#E5E5E5"> of internal probably twice as many</font>

185
00:08:53,220 --> 00:08:57,540
or<font color="#CCCCCC"> more internal there's admin functions</font>

186
00:08:55,980 --> 00:09:01,380
<font color="#E5E5E5">that obviously are going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be exposed</font>

187
00:08:57,540 --> 00:09:04,290
in the UI<font color="#E5E5E5"> and so there's a there's a</font>

188
00:09:01,380 --> 00:09:06,790
pretty large gap here for us as far<font color="#CCCCCC"> as</font>

189
00:09:04,290 --> 00:09:12,219
automation is concerned

190
00:09:06,790 --> 00:09:14,079
wait on<font color="#CCCCCC"> that so so that's</font><font color="#E5E5E5"> why</font><font color="#CCCCCC"> that's</font>

191
00:09:12,220 --> 00:09:16,180
kind of the<font color="#E5E5E5"> case for</font><font color="#CCCCCC"> us to kind of work</font>

192
00:09:14,080 --> 00:09:20,680
towards a<font color="#E5E5E5"> more</font><font color="#CCCCCC"> automated solution</font><font color="#E5E5E5"> right</font>

193
00:09:16,180 --> 00:09:21,459
so addition to that<font color="#E5E5E5"> so api's</font><font color="#CCCCCC"> they can be</font>

194
00:09:20,680 --> 00:09:23,170
easy<font color="#E5E5E5"> to test</font>

195
00:09:21,460 --> 00:09:26,290
sometimes the JSON just looks<font color="#CCCCCC"> like this</font>

196
00:09:23,170 --> 00:09:28,240
sometimes<font color="#CCCCCC"> it</font><font color="#E5E5E5"> looks like this you know</font>

197
00:09:26,290 --> 00:09:31,240
there's all<font color="#E5E5E5"> sorts of information here</font>

198
00:09:28,240 --> 00:09:32,830
<font color="#E5E5E5">all sorts of different data types</font><font color="#CCCCCC"> this</font>

199
00:09:31,240 --> 00:09:35,170
is just one resource<font color="#E5E5E5"> for one of the</font>

200
00:09:32,830 --> 00:09:37,450
api's that has multiple resources<font color="#E5E5E5"> and</font>

201
00:09:35,170 --> 00:09:41,829
<font color="#E5E5E5">API is all over the place</font><font color="#CCCCCC"> so there's a</font>

202
00:09:37,450 --> 00:09:44,860
lot<font color="#CCCCCC"> of work to be done here so what</font><font color="#E5E5E5"> does</font>

203
00:09:41,830 --> 00:09:46,330
that mean so what do<font color="#E5E5E5"> we do</font><font color="#CCCCCC"> so we work</font>

204
00:09:44,860 --> 00:09:48,460
together partnered with the Kiwi<font color="#CCCCCC"> team</font>

205
00:09:46,330 --> 00:09:52,060
because these guys are<font color="#E5E5E5"> writing lots of</font>

206
00:09:48,460 --> 00:09:54,630
code<font color="#CCCCCC"> there they're using our using</font><font color="#E5E5E5"> Open</font>

207
00:09:52,060 --> 00:09:57,880
<font color="#E5E5E5">Cafe framework which we'll talk about</font>

208
00:09:54,630 --> 00:10:00,850
and they partner<font color="#E5E5E5"> with us to kind of</font>

209
00:09:57,880 --> 00:10:03,310
<font color="#E5E5E5">build a tool to help add some automation</font>

210
00:10:00,850 --> 00:10:05,380
to the API<font color="#CCCCCC"> tests now again we're using</font>

211
00:10:03,310 --> 00:10:07,300
<font color="#CCCCCC">their frameworks</font><font color="#E5E5E5"> to write security tests</font>

212
00:10:05,380 --> 00:10:08,830
<font color="#CCCCCC">that's a lot of overhead so we wanted to</font>

213
00:10:07,300 --> 00:10:10,300
go<font color="#E5E5E5"> ahead and try to make something</font>

214
00:10:08,830 --> 00:10:12,580
that's a little<font color="#E5E5E5"> bit more flexible</font><font color="#CCCCCC"> a</font>

215
00:10:10,300 --> 00:10:14,410
little bit<font color="#E5E5E5"> easier for security guys to</font>

216
00:10:12,580 --> 00:10:17,380
use because<font color="#E5E5E5"> we're not all</font><font color="#CCCCCC"> hardcore</font>

217
00:10:14,410 --> 00:10:19,839
developers and we all don't<font color="#E5E5E5"> have time to</font>

218
00:10:17,380 --> 00:10:22,450
always<font color="#E5E5E5"> be writing</font><font color="#CCCCCC"> code we</font><font color="#E5E5E5"> want something</font>

219
00:10:19,840 --> 00:10:25,810
<font color="#E5E5E5">that so that basically can be automated</font>

220
00:10:22,450 --> 00:10:28,000
it's a<font color="#E5E5E5"> fuzzer for HTTP requests right</font>

221
00:10:25,810 --> 00:10:30,130
now it's we're using fuzzy<font color="#E5E5E5"> TV typical</font>

222
00:10:28,000 --> 00:10:32,350
test<font color="#E5E5E5"> strings but like it says it's fully</font>

223
00:10:30,130 --> 00:10:35,770
customizable<font color="#CCCCCC"> you can add</font><font color="#E5E5E5"> additional</font>

224
00:10:32,350 --> 00:10:37,930
files if you want<font color="#E5E5E5"> right</font><font color="#CCCCCC"> you know use</font>

225
00:10:35,770 --> 00:10:38,920
different frameworks for those<font color="#E5E5E5"> test</font>

226
00:10:37,930 --> 00:10:43,810
strings<font color="#E5E5E5"> or write your own</font>

227
00:10:38,920 --> 00:10:45,160
and even<font color="#E5E5E5"> better it's open source</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we</font>

228
00:10:43,810 --> 00:10:49,569
have done<font color="#E5E5E5"> that work to kind</font><font color="#CCCCCC"> of make it</font>

229
00:10:45,160 --> 00:10:52,719
available to<font color="#E5E5E5"> anyone to use in comes</font>

230
00:10:49,570 --> 00:10:56,380
<font color="#E5E5E5">central goes so Center boasts is our</font>

231
00:10:52,720 --> 00:10:58,900
in-house<font color="#E5E5E5"> security framework that's built</font>

232
00:10:56,380 --> 00:11:02,439
actually on top of open<font color="#E5E5E5"> cafe which is</font>

233
00:10:58,900 --> 00:11:04,670
our in-house<font color="#CCCCCC"> QE framework so having that</font>

234
00:11:02,440 --> 00:11:07,010
that<font color="#E5E5E5"> synergy with the</font><font color="#CCCCCC"> cue</font>

235
00:11:04,670 --> 00:11:08,839
<font color="#E5E5E5">team is really what gives it power so</font>

236
00:11:07,010 --> 00:11:10,970
when we when we test the api's and we

237
00:11:08,840 --> 00:11:13,330
start doing<font color="#CCCCCC"> our fuzzing and</font><font color="#E5E5E5"> we hit</font><font color="#CCCCCC"> oh we</font>

238
00:11:10,970 --> 00:11:16,790
found this<font color="#E5E5E5"> vulnerability</font><font color="#CCCCCC"> you can inject</font>

239
00:11:13,330 --> 00:11:20,030
sequel into this key<font color="#CCCCCC"> value in</font><font color="#E5E5E5"> this huge</font>

240
00:11:16,790 --> 00:11:22,640
dictionary<font color="#E5E5E5"> request and then we you know</font>

241
00:11:20,030 --> 00:11:25,010
we<font color="#E5E5E5"> normally old process we would throw</font>

242
00:11:22,640 --> 00:11:27,080
it over the<font color="#CCCCCC"> wall and</font><font color="#E5E5E5"> be like</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> or</font>

243
00:11:25,010 --> 00:11:29,810
<font color="#E5E5E5">they'd throw it over the wall okay</font><font color="#CCCCCC"> cute</font>

244
00:11:27,080 --> 00:11:32,540
guy<font color="#CCCCCC"> right a test to test this super</font>

245
00:11:29,810 --> 00:11:35,089
crazy sequel thing that the QE<font color="#E5E5E5"> has no</font>

246
00:11:32,540 --> 00:11:38,870
idea why is breaking<font color="#E5E5E5"> and why it's</font>

247
00:11:35,090 --> 00:11:41,390
injecting<font color="#CCCCCC"> well some of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Kiwi</font><font color="#E5E5E5"> has</font><font color="#CCCCCC"> no a</font>

248
00:11:38,870 --> 00:11:45,470
lot of<font color="#CCCCCC"> the kick has no idea some of them</font>

249
00:11:41,390 --> 00:11:49,370
<font color="#CCCCCC">no but uh anyway</font><font color="#E5E5E5"> so having that working</font>

250
00:11:45,470 --> 00:11:52,130
in the<font color="#E5E5E5"> same framework allows us to say</font>

251
00:11:49,370 --> 00:11:54,950
this is<font color="#CCCCCC"> exactly what we tested this is</font>

252
00:11:52,130 --> 00:11:56,900
we can<font color="#CCCCCC"> actually print the unit tests</font><font color="#E5E5E5"> we</font>

253
00:11:54,950 --> 00:11:59,570
can create the unit<font color="#CCCCCC"> test and put them</font>

254
00:11:56,900 --> 00:12:01,520
directly into<font color="#E5E5E5"> their regression because</font>

255
00:11:59,570 --> 00:12:02,270
we're<font color="#E5E5E5"> sharing the</font><font color="#CCCCCC"> same framework</font><font color="#E5E5E5"> that's</font>

256
00:12:01,520 --> 00:12:08,300
<font color="#E5E5E5">that makes sense</font>

257
00:12:02,270 --> 00:12:11,510
<font color="#CCCCCC">same classes same architecture</font><font color="#E5E5E5"> so a</font>

258
00:12:08,300 --> 00:12:13,880
little<font color="#E5E5E5"> more open</font><font color="#CCCCCC"> cafe is based on unit</font>

259
00:12:11,510 --> 00:12:15,080
<font color="#CCCCCC">tests those are the links</font><font color="#E5E5E5"> if you'd like</font>

260
00:12:13,880 --> 00:12:17,920
to check them out

261
00:12:15,080 --> 00:12:21,260
the read<font color="#CCCCCC"> the docs and the</font><font color="#E5E5E5"> github</font><font color="#CCCCCC"> and</font>

262
00:12:17,920 --> 00:12:23,569
yeah I suggest<font color="#CCCCCC"> I like</font><font color="#E5E5E5"> everyone to</font><font color="#CCCCCC"> check</font>

263
00:12:21,260 --> 00:12:26,660
it out so<font color="#E5E5E5"> how central</font><font color="#CCCCCC"> most is</font>

264
00:12:23,570 --> 00:12:29,660
architected<font color="#E5E5E5"> so we read from a</font>

265
00:12:26,660 --> 00:12:32,810
configuration<font color="#E5E5E5"> and the configuration is</font>

266
00:12:29,660 --> 00:12:35,780
<font color="#E5E5E5">usable at any point during the request</font>

267
00:12:32,810 --> 00:12:38,930
pipeline<font color="#E5E5E5"> so we have a request</font><font color="#CCCCCC"> which is</font>

268
00:12:35,780 --> 00:12:42,319
your standard<font color="#CCCCCC"> burke request</font><font color="#E5E5E5"> you know</font>

269
00:12:38,930 --> 00:12:44,359
just copy that<font color="#E5E5E5"> payload</font><font color="#CCCCCC"> we pass that into</font>

270
00:12:42,320 --> 00:12:47,660
our<font color="#E5E5E5"> data generator which</font><font color="#CCCCCC"> will go and</font>

271
00:12:44,360 --> 00:12:50,990
fuzz<font color="#E5E5E5"> the individual keys in the JSON or</font>

272
00:12:47,660 --> 00:12:53,900
<font color="#E5E5E5">the</font><font color="#CCCCCC"> xml</font><font color="#E5E5E5"> and it's extensible so you can</font>

273
00:12:50,990 --> 00:12:55,910
add the animal later or whatever you're

274
00:12:53,900 --> 00:12:57,770
<font color="#E5E5E5">looking for</font><font color="#CCCCCC"> and then that goes to the</font>

275
00:12:55,910 --> 00:12:59,900
data<font color="#E5E5E5"> generated test which is just</font>

276
00:12:57,770 --> 00:13:02,780
sending actually making<font color="#E5E5E5"> the request and</font>

277
00:12:59,900 --> 00:13:07,500
then validation<font color="#E5E5E5"> checking status codes</font>

278
00:13:02,780 --> 00:13:10,170
checking<font color="#E5E5E5"> length checking for you</font>

279
00:13:07,500 --> 00:13:12,990
stuff like that<font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> go into our</font>

280
00:13:10,170 --> 00:13:15,390
<font color="#E5E5E5">configuration how a central</font><font color="#CCCCCC"> bush</font>

281
00:13:12,990 --> 00:13:18,810
configuration<font color="#E5E5E5"> would look so basically</font>

282
00:13:15,390 --> 00:13:23,990
you you decide your<font color="#CCCCCC"> end point that's</font>

283
00:13:18,810 --> 00:13:26,399
gonna set your network layer<font color="#E5E5E5"> and</font><font color="#CCCCCC"> in</font>

284
00:13:23,990 --> 00:13:29,520
figures the<font color="#E5E5E5"> user name the off all of</font>

285
00:13:26,399 --> 00:13:31,860
<font color="#CCCCCC">that all the rest is customizable</font>

286
00:13:29,520 --> 00:13:35,189
depending on the test<font color="#E5E5E5"> so if your test</font>

287
00:13:31,860 --> 00:13:38,040
requires a user then<font color="#E5E5E5"> you need to put</font>

288
00:13:35,190 --> 00:13:40,860
<font color="#E5E5E5">that in your configure if if your test</font>

289
00:13:38,040 --> 00:13:44,099
requires some<font color="#E5E5E5"> other endpoint or some</font>

290
00:13:40,860 --> 00:13:46,290
other configuration<font color="#E5E5E5"> data you can just</font>

291
00:13:44,100 --> 00:13:50,910
it's extensible<font color="#CCCCCC"> you can create the</font>

292
00:13:46,290 --> 00:13:54,870
config<font color="#E5E5E5"> and have it and have</font><font color="#CCCCCC"> it read in</font>

293
00:13:50,910 --> 00:13:57,899
anywhere during<font color="#CCCCCC"> the test</font><font color="#E5E5E5"> so this is</font>

294
00:13:54,870 --> 00:13:59,310
<font color="#E5E5E5">example of a standard</font><font color="#CCCCCC"> I puts in service</font>

295
00:13:57,899 --> 00:14:02,190
request but actually it's<font color="#CCCCCC"> just standard</font>

296
00:13:59,310 --> 00:14:04,829
<font color="#E5E5E5">burp</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> pretty straightforward</font>

297
00:14:02,190 --> 00:14:10,140
<font color="#E5E5E5">copy/paste example I just copy it out</font>

298
00:14:04,830 --> 00:14:14,490
<font color="#E5E5E5">paste it into a file</font><font color="#CCCCCC"> so what's what's</font>

299
00:14:10,140 --> 00:14:16,230
cool about our payload generation<font color="#E5E5E5"> so if</font>

300
00:14:14,490 --> 00:14:19,800
you're<font color="#E5E5E5"> doing sequel injection it's</font>

301
00:14:16,230 --> 00:14:22,290
dropping sequel and injects into<font color="#E5E5E5"> all the</font>

302
00:14:19,800 --> 00:14:24,359
variables<font color="#E5E5E5"> if you're doing LDAP injection</font>

303
00:14:22,290 --> 00:14:27,180
it's doing some<font color="#E5E5E5"> very specific LDAP</font>

304
00:14:24,360 --> 00:14:29,100
queries<font color="#E5E5E5"> Oh</font>

305
00:14:27,180 --> 00:14:31,920
as I said<font color="#E5E5E5"> earlier</font><font color="#CCCCCC"> network layers</font><font color="#E5E5E5"> covered</font>

306
00:14:29,100 --> 00:14:34,770
by the config<font color="#CCCCCC"> and this is really only</font>

307
00:14:31,920 --> 00:14:37,589
<font color="#CCCCCC">for HTTP currently we plan on adding</font>

308
00:14:34,770 --> 00:14:39,000
<font color="#E5E5E5">other protocols in the future</font><font color="#CCCCCC"> you know</font>

309
00:14:37,589 --> 00:14:42,330
like having<font color="#E5E5E5"> like an active in queue</font>

310
00:14:39,000 --> 00:14:45,540
would be<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can fuzz into your</font>

311
00:14:42,330 --> 00:14:49,200
queue system<font color="#CCCCCC"> but</font><font color="#E5E5E5"> currently it only</font>

312
00:14:45,540 --> 00:14:50,640
<font color="#E5E5E5">supports HTTP these are the different</font>

313
00:14:49,200 --> 00:14:53,190
<font color="#CCCCCC">things</font><font color="#E5E5E5"> that we can fuzz</font><font color="#CCCCCC"> to close the</font>

314
00:14:50,640 --> 00:14:58,110
path the parameters<font color="#CCCCCC"> the headers</font><font color="#E5E5E5"> and the</font>

315
00:14:53,190 --> 00:15:01,470
body JSON<font color="#E5E5E5"> XML</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> validation is defined</font>

316
00:14:58,110 --> 00:15:03,900
by the individual<font color="#CCCCCC"> tests</font><font color="#E5E5E5"> and it</font>

317
00:15:01,470 --> 00:15:08,010
so if you make a<font color="#CCCCCC"> bass fuzz validation</font>

318
00:15:03,900 --> 00:15:11,010
which we do<font color="#E5E5E5"> have and we have a sequel</font>

319
00:15:08,010 --> 00:15:12,900
inject<font color="#E5E5E5"> test that extends it we can</font>

320
00:15:11,010 --> 00:15:21,000
override the validation<font color="#E5E5E5"> and check for</font>

321
00:15:12,900 --> 00:15:25,189
<font color="#E5E5E5">the specifics</font><font color="#CCCCCC"> extensions so one of</font><font color="#E5E5E5"> the</font>

322
00:15:21,000 --> 00:15:28,410
problems<font color="#CCCCCC"> with trying</font><font color="#E5E5E5"> to to get</font><font color="#CCCCCC"> to fit</font>

323
00:15:25,190 --> 00:15:32,600
security testing<font color="#E5E5E5"> into a framework that's</font>

324
00:15:28,410 --> 00:15:35,010
designed for QE is there's always code

325
00:15:32,600 --> 00:15:37,170
<font color="#E5E5E5">limitations that that we have to</font>

326
00:15:35,010 --> 00:15:41,010
overcome<font color="#E5E5E5"> like oh it's only designed to</font>

327
00:15:37,170 --> 00:15:43,050
send the correct body it's<font color="#CCCCCC"> not designed</font>

328
00:15:41,010 --> 00:15:45,720
<font color="#E5E5E5">to send in valid JSON</font><font color="#CCCCCC"> or it's</font><font color="#E5E5E5"> not</font>

329
00:15:43,050 --> 00:15:47,849
designed to send in valid XML<font color="#CCCCCC"> and that</font>

330
00:15:45,720 --> 00:15:51,060
that's<font color="#E5E5E5"> a problem for security testers</font><font color="#CCCCCC"> if</font>

331
00:15:47,850 --> 00:15:53,310
you can't use a framework<font color="#CCCCCC"> and send in</font>

332
00:15:51,060 --> 00:15:53,939
valid data<font color="#CCCCCC"> you know it's it's not</font><font color="#E5E5E5"> very</font>

333
00:15:53,310 --> 00:15:56,520
useful

334
00:15:53,940 --> 00:15:58,980
so that's that's one of the the<font color="#E5E5E5"> benefits</font>

335
00:15:56,520 --> 00:16:02,600
of<font color="#CCCCCC"> center</font><font color="#E5E5E5"> boats that can literally</font>

336
00:15:58,980 --> 00:16:06,320
replace anything<font color="#CCCCCC"> in the request</font><font color="#E5E5E5"> in fact</font>

337
00:16:02,600 --> 00:16:09,030
<font color="#E5E5E5">did anyone do the capture</font><font color="#CCCCCC"> of the fly</font>

338
00:16:06,320 --> 00:16:11,250
no one no one<font color="#E5E5E5"> did capture the flag today</font>

339
00:16:09,030 --> 00:16:14,220
<font color="#E5E5E5">yesterday</font><font color="#CCCCCC"> okay</font>

340
00:16:11,250 --> 00:16:16,620
there was the first step of that we

341
00:16:14,220 --> 00:16:18,030
could have we<font color="#CCCCCC"> could actually use it was</font>

342
00:16:16,620 --> 00:16:21,660
had to<font color="#E5E5E5"> do from the headers we could have</font>

343
00:16:18,030 --> 00:16:23,970
actually<font color="#E5E5E5"> used to find that first sequel</font>

344
00:16:21,660 --> 00:16:27,569
inject<font color="#E5E5E5"> if anyone else spoiler alert</font>

345
00:16:23,970 --> 00:16:28,430
<font color="#CCCCCC">spoiler alert yeah I'm</font><font color="#E5E5E5"> sure everyone</font>

346
00:16:27,570 --> 00:16:33,180
knows by now right

347
00:16:28,430 --> 00:16:35,579
anyway<font color="#E5E5E5"> we could have actually fuzz the</font>

348
00:16:33,180 --> 00:16:37,109
<font color="#E5E5E5">headers with turbos</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it would have it</font>

349
00:16:35,580 --> 00:16:40,800
<font color="#CCCCCC">would</font><font color="#E5E5E5"> have brought the light that sequel</font>

350
00:16:37,110 --> 00:16:44,790
inject it's not really an<font color="#E5E5E5"> API but in</font>

351
00:16:40,800 --> 00:16:47,370
<font color="#E5E5E5">reality an API and</font><font color="#CCCCCC"> webpage are they're</font>

352
00:16:44,790 --> 00:16:51,140
<font color="#E5E5E5">very similar it's</font><font color="#CCCCCC"> just data coming</font><font color="#E5E5E5"> back</font>

353
00:16:47,370 --> 00:16:53,610
<font color="#E5E5E5">in a body and in</font><font color="#CCCCCC"> that specific example</font>

354
00:16:51,140 --> 00:16:54,660
<font color="#CCCCCC">we would</font><font color="#E5E5E5"> be fussing the headers so it</font>

355
00:16:53,610 --> 00:16:56,220
doesn't<font color="#E5E5E5"> you</font>

356
00:16:54,660 --> 00:16:57,779
doesn't<font color="#E5E5E5"> really make a difference</font><font color="#CCCCCC"> what</font>

357
00:16:56,220 --> 00:17:00,779
<font color="#E5E5E5">you know what we're sending in the body</font>

358
00:16:57,779 --> 00:17:03,180
<font color="#CCCCCC">you</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> copy the request from Berk run</font>

359
00:17:00,779 --> 00:17:06,089
the fuss headers<font color="#E5E5E5"> test with sequins X and</font>

360
00:17:03,180 --> 00:17:11,789
then magic<font color="#E5E5E5"> okay</font>

361
00:17:06,089 --> 00:17:14,039
so let's see<font color="#CCCCCC"> we also add so our</font>

362
00:17:11,789 --> 00:17:16,890
extensions allow us to do stuff<font color="#CCCCCC"> like get</font>

363
00:17:14,039 --> 00:17:22,289
the authentication token<font color="#CCCCCC"> it allows us to</font>

364
00:17:16,890 --> 00:17:25,400
make our<font color="#E5E5E5"> our</font><font color="#CCCCCC"> request custom so we'll go</font>

365
00:17:22,289 --> 00:17:41,690
into<font color="#E5E5E5"> this a little more during the demo</font>

366
00:17:25,400 --> 00:17:47,030
which<font color="#CCCCCC"> is right now and this video</font>

367
00:17:41,690 --> 00:17:47,030
adapter does not work on<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so let's</font>

368
00:17:54,270 --> 00:18:10,440
<font color="#E5E5E5">okay so let's open these files</font><font color="#CCCCCC"> so it's</font>

369
00:18:00,550 --> 00:18:10,440
not just<font color="#E5E5E5"> me running one command oh yeah</font>

370
00:18:13,870 --> 00:18:21,978
<font color="#CCCCCC">we should post</font><font color="#E5E5E5"> yeah</font>

371
00:18:16,940 --> 00:18:28,220
<font color="#CCCCCC">oh</font><font color="#E5E5E5"> so this is me running since ribose</font>

372
00:18:21,979 --> 00:18:29,929
<font color="#E5E5E5">this is the config pot okay this is the</font>

373
00:18:28,220 --> 00:18:34,729
config file I'm using and this<font color="#E5E5E5"> is the</font>

374
00:18:29,929 --> 00:18:35,330
payloads or the payload<font color="#E5E5E5"> that HTTP</font>

375
00:18:34,729 --> 00:18:40,840
<font color="#CCCCCC">request</font>

376
00:18:35,330 --> 00:18:40,840
so before I run this going yes

377
00:18:42,729 --> 00:18:54,559
let's see where<font color="#E5E5E5"> does your virtual</font>

378
00:18:45,169 --> 00:18:56,779
<font color="#CCCCCC">verbally question so this is just</font>

379
00:18:54,559 --> 00:19:00,080
<font color="#E5E5E5">something about open cafe the</font>

380
00:18:56,779 --> 00:19:02,539
configuration<font color="#E5E5E5"> if you assault</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> into a</font>

381
00:19:00,080 --> 00:19:04,549
virtual environment<font color="#CCCCCC"> the configuration</font>

382
00:19:02,539 --> 00:19:09,470
actually lives in<font color="#CCCCCC"> the virtual</font>

383
00:19:04,549 --> 00:19:11,479
<font color="#E5E5E5">environment directory so this is the</font>

384
00:19:09,470 --> 00:19:14,090
configuration<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> actually running a</font>

385
00:19:11,479 --> 00:19:18,519
local<font color="#E5E5E5"> API on the box because remote</font>

386
00:19:14,090 --> 00:19:18,519
stuff is always dangerous<font color="#E5E5E5"> during</font><font color="#CCCCCC"> a demo</font>

387
00:19:18,700 --> 00:19:26,029
<font color="#CCCCCC">so we have our endpoint set we have</font>

388
00:19:21,799 --> 00:19:28,999
<font color="#CCCCCC">username</font><font color="#E5E5E5"> password for our user and then</font>

389
00:19:26,029 --> 00:19:31,849
we have well just some other config file

390
00:19:28,999 --> 00:19:35,450
use a this<font color="#CCCCCC"> supposed percent</font><font color="#E5E5E5"> our first</font>

391
00:19:31,849 --> 00:19:38,029
test<font color="#E5E5E5"> has a link validation and if the</font>

392
00:19:35,450 --> 00:19:41,179
length is greater than a percentage<font color="#CCCCCC"> of</font>

393
00:19:38,029 --> 00:19:45,109
the initial request then<font color="#CCCCCC"> it raises</font><font color="#E5E5E5"> a</font>

394
00:19:41,179 --> 00:19:47,570
failure<font color="#E5E5E5"> case so if it's 400 times</font><font color="#CCCCCC"> bigger</font>

395
00:19:45,109 --> 00:19:49,279
<font color="#E5E5E5">or sorry</font><font color="#CCCCCC"> not for attention 400 percent</font>

396
00:19:47,570 --> 00:19:51,289
larger<font color="#E5E5E5"> than the initial request the</font>

397
00:19:49,279 --> 00:19:56,470
<font color="#CCCCCC">nonplussed</font><font color="#E5E5E5"> request is an immediate</font>

398
00:19:51,289 --> 00:19:56,470
failure but let's<font color="#CCCCCC"> go cute it's less</font><font color="#E5E5E5"> Oh</font>

399
00:19:57,940 --> 00:20:07,690
oh yeah<font color="#CCCCCC"> well you'll see the</font><font color="#E5E5E5"> request on</font>

400
00:20:01,780 --> 00:20:10,870
the first<font color="#CCCCCC"> snow see the way okay so</font>

401
00:20:07,690 --> 00:20:12,160
here's our very<font color="#CCCCCC"> simple payload it's just</font>

402
00:20:10,870 --> 00:20:15,760
an auth request with<font color="#CCCCCC"> the username and</font>

403
00:20:12,160 --> 00:20:19,030
<font color="#E5E5E5">password</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this specific demo we won't</font>

404
00:20:15,760 --> 00:20:21,760
be doing any any bugs I had an actual

405
00:20:19,030 --> 00:20:33,960
OpenStack bug that we had found<font color="#E5E5E5"> but</font>

406
00:20:21,760 --> 00:20:36,550
that's all my laptop okay so this LDAP

407
00:20:33,960 --> 00:20:38,470
<font color="#E5E5E5">here is one of the tests I wouldn't</font>

408
00:20:36,550 --> 00:20:41,590
leave that<font color="#E5E5E5"> because it's only got</font><font color="#CCCCCC"> a</font>

409
00:20:38,470 --> 00:20:43,360
couple of<font color="#E5E5E5"> strings in there</font><font color="#CCCCCC"> oh it is</font>

410
00:20:41,590 --> 00:20:45,220
it's a stripped-down test it only has a

411
00:20:43,360 --> 00:20:55,209
<font color="#E5E5E5">few strings because I don't want to show</font>

412
00:20:45,220 --> 00:21:02,920
you all<font color="#E5E5E5"> 15,000 requests so oh</font><font color="#CCCCCC"> okay so</font>

413
00:20:55,210 --> 00:21:06,370
let's it is actually comes from<font color="#E5E5E5"> the open</font>

414
00:21:02,920 --> 00:21:09,190
<font color="#CCCCCC">cafe</font><font color="#E5E5E5"> data directory so here we have all</font>

415
00:21:06,370 --> 00:21:10,840
of<font color="#E5E5E5"> our all of our data so it's we</font>

416
00:21:09,190 --> 00:21:19,390
consider the data separate from the

417
00:21:10,840 --> 00:21:21,129
config<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> this configuration is open</font>

418
00:21:19,390 --> 00:21:23,950
cafe style the data lives in the open

419
00:21:21,130 --> 00:21:30,390
<font color="#E5E5E5">cafe data directory we're building off</font>

420
00:21:23,950 --> 00:21:30,390
the<font color="#E5E5E5"> framework so yeah</font>

421
00:21:33,210 --> 00:21:40,810
yeah so this<font color="#CCCCCC"> is a stripped-down version</font>

422
00:21:35,920 --> 00:21:42,190
of<font color="#E5E5E5"> the fuzz DB LDAP test strings</font><font color="#CCCCCC"> most of</font>

423
00:21:40,810 --> 00:21:44,470
<font color="#E5E5E5">those in there aren't stripped-down</font><font color="#CCCCCC"> and</font>

424
00:21:42,190 --> 00:21:46,690
it's<font color="#E5E5E5"> just pretty much all of</font><font color="#CCCCCC"> the stuff</font>

425
00:21:44,470 --> 00:21:49,300
from<font color="#E5E5E5"> fuzz DB so if you do the</font><font color="#CCCCCC"> fuzz DB</font>

426
00:21:46,690 --> 00:21:50,890
sequel tests<font color="#CCCCCC"> there's about a hundred or</font>

427
00:21:49,300 --> 00:21:53,800
so<font color="#E5E5E5"> different strings that it'll run</font>

428
00:21:50,890 --> 00:21:56,050
through<font color="#E5E5E5"> they're in pretty much every</font>

429
00:21:53,800 --> 00:21:57,010
possible field<font color="#E5E5E5"> yep especially the</font>

430
00:21:56,050 --> 00:21:59,080
payloads

431
00:21:57,010 --> 00:22:01,000
that's a directory that<font color="#E5E5E5"> he's created on</font>

432
00:21:59,080 --> 00:22:02,980
the local<font color="#E5E5E5"> systems the text file himself</font>

433
00:22:01,000 --> 00:22:04,930
that's straight<font color="#E5E5E5"> out of</font><font color="#CCCCCC"> Burke</font><font color="#E5E5E5"> for a</font>

434
00:22:02,980 --> 00:22:07,630
<font color="#E5E5E5">standard tokens request to an</font>

435
00:22:04,930 --> 00:22:09,040
<font color="#E5E5E5">authentication API well yeah so this is</font>

436
00:22:07,630 --> 00:22:11,200
a kind of a dummy API and<font color="#E5E5E5"> that's</font>

437
00:22:09,040 --> 00:22:12,580
basically just<font color="#E5E5E5"> the HTTP</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> there's</font>

438
00:22:11,200 --> 00:22:14,830
nothing<font color="#E5E5E5"> special about that hopefully</font>

439
00:22:12,580 --> 00:22:17,169
it's in the API<font color="#CCCCCC"> documentation</font><font color="#E5E5E5"> or if</font>

440
00:22:14,830 --> 00:22:18,939
you're if<font color="#CCCCCC"> you're viewing</font><font color="#E5E5E5"> your traffic</font>

441
00:22:17,170 --> 00:22:21,310
and<font color="#CCCCCC"> burp you</font><font color="#E5E5E5"> can copy it</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> there so</font>

442
00:22:18,940 --> 00:22:22,810
<font color="#CCCCCC">you get a it's just a basic text file</font>

443
00:22:21,310 --> 00:22:26,320
there's nothing special about<font color="#CCCCCC"> it it's a</font>

444
00:22:22,810 --> 00:22:28,659
typical request with the the<font color="#E5E5E5"> method the</font>

445
00:22:26,320 --> 00:22:33,310
resource you<font color="#E5E5E5"> want to hit HTTP version</font>

446
00:22:28,660 --> 00:22:35,850
<font color="#E5E5E5">the headers and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> the body so it's so</font>

447
00:22:33,310 --> 00:22:38,409
one thing you know is

448
00:22:35,850 --> 00:22:42,389
<font color="#E5E5E5">request one at a time like one flex</font>

449
00:22:38,410 --> 00:22:49,230
<font color="#E5E5E5">offer it can actually do a</font><font color="#CCCCCC"> hole holder</font>

450
00:22:42,390 --> 00:22:52,390
<font color="#E5E5E5">there again yeah the the total here</font>

451
00:22:49,230 --> 00:22:54,700
these<font color="#E5E5E5"> are the tests</font><font color="#CCCCCC"> when he when he</font>

452
00:22:52,390 --> 00:22:56,380
actually does specify<font color="#CCCCCC"> that</font><font color="#E5E5E5"> LDAP on the</font>

453
00:22:54,700 --> 00:22:58,450
command line<font color="#E5E5E5"> is doing</font><font color="#CCCCCC"> a filtering by</font>

454
00:22:56,380 --> 00:23:02,260
these<font color="#CCCCCC"> tests</font><font color="#E5E5E5"> name and it's hit</font><font color="#CCCCCC"> and it's</font>

455
00:22:58,450 --> 00:23:03,820
pulling<font color="#E5E5E5"> all the tests with LDAP yeah</font>

456
00:23:02,260 --> 00:23:05,710
it's so these are the different<font color="#E5E5E5"> element</font>

457
00:23:03,820 --> 00:23:07,689
tests so there's only there's the four

458
00:23:05,710 --> 00:23:08,680
here<font color="#CCCCCC"> so one for the URL one for the</font>

459
00:23:07,690 --> 00:23:09,940
<font color="#CCCCCC">header</font><font color="#E5E5E5"> home the rams</font>

460
00:23:08,680 --> 00:23:11,860
<font color="#CCCCCC">where you pull them for the body where</font>

461
00:23:09,940 --> 00:23:14,530
you uh<font color="#E5E5E5"> specify the file you want to</font><font color="#CCCCCC"> use</font>

462
00:23:11,860 --> 00:23:16,810
<font color="#E5E5E5">for that test so this is why it's</font>

463
00:23:14,530 --> 00:23:18,879
reading from the short file it

464
00:23:16,810 --> 00:23:21,550
automatically<font color="#CCCCCC"> knows to look</font><font color="#E5E5E5"> in the open</font>

465
00:23:18,880 --> 00:23:24,100
<font color="#E5E5E5">cafe data directory</font><font color="#CCCCCC"> because that's</font><font color="#E5E5E5"> just</font>

466
00:23:21,550 --> 00:23:26,860
how the framework works if you want data

467
00:23:24,100 --> 00:23:29,199
<font color="#CCCCCC">to be brought</font><font color="#E5E5E5"> into your</font><font color="#CCCCCC"> tests stored it</font>

468
00:23:26,860 --> 00:23:29,889
stored there and<font color="#E5E5E5"> you can access access</font>

469
00:23:29,200 --> 00:23:34,780
it from anywhere

470
00:23:29,890 --> 00:23:41,380
when<font color="#CCCCCC"> using the framework</font><font color="#E5E5E5"> so let's let's</font>

471
00:23:34,780 --> 00:23:45,910
get into the<font color="#E5E5E5"> actual run so okay that's</font>

472
00:23:41,380 --> 00:23:49,170
incredibly faster than the removes<font color="#CCCCCC"> mo so</font>

473
00:23:45,910 --> 00:23:49,170
we had<font color="#E5E5E5"> to failure</font><font color="#CCCCCC"> cases</font>

474
00:23:49,200 --> 00:23:54,100
we can go look<font color="#CCCCCC"> at the logs</font><font color="#E5E5E5"> which is just</font>

475
00:23:52,660 --> 00:23:59,890
a log of everything that happened in the

476
00:23:54,100 --> 00:24:01,659
request and<font color="#CCCCCC"> response but instead we can</font>

477
00:23:59,890 --> 00:24:05,230
see that these felled on the validate

478
00:24:01,660 --> 00:24:06,790
link the assert revalidate link call<font color="#E5E5E5"> so</font>

479
00:24:05,230 --> 00:24:09,040
let's go instead of looking<font color="#E5E5E5"> at the logs</font>

480
00:24:06,790 --> 00:24:13,270
we're gonna look at birth<font color="#CCCCCC"> so what we've</font>

481
00:24:09,040 --> 00:24:17,350
<font color="#E5E5E5">done is we've exported HTTP proxy and</font>

482
00:24:13,270 --> 00:24:20,139
HTTP proxy to allow allow us to push all

483
00:24:17,350 --> 00:24:21,969
<font color="#CCCCCC">of our requests our barber</font><font color="#E5E5E5"> and I pretty</font>

484
00:24:20,140 --> 00:24:25,480
much do<font color="#E5E5E5"> this on a regular basis when</font>

485
00:24:21,970 --> 00:24:29,530
testing<font color="#E5E5E5"> so I can</font><font color="#CCCCCC"> monitor and</font><font color="#E5E5E5"> it this</font>

486
00:24:25,480 --> 00:24:32,830
<font color="#CCCCCC">worked</font><font color="#E5E5E5"> for all Python on Linux or</font><font color="#CCCCCC"> Mac</font><font color="#E5E5E5"> I</font>

487
00:24:29,530 --> 00:24:35,970
don't know if that<font color="#E5E5E5"> works on Windows</font><font color="#CCCCCC"> any</font>

488
00:24:32,830 --> 00:24:38,800
<font color="#CCCCCC">one might work</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's unsupported</font><font color="#E5E5E5"> yeah</font>

489
00:24:35,970 --> 00:24:41,730
might work<font color="#E5E5E5"> who's using Windows the test</font>

490
00:24:38,800 --> 00:24:41,730
<font color="#CCCCCC">security stuff anyway</font>

491
00:24:42,790 --> 00:24:49,149
<font color="#E5E5E5">okay it's</font><font color="#CCCCCC"> okay</font>

492
00:24:45,700 --> 00:24:51,070
it's it's okay<font color="#E5E5E5"> we're okay yeah</font><font color="#CCCCCC"> you know</font>

493
00:24:49,150 --> 00:24:52,930
<font color="#CCCCCC">just because you know you're boxing</font><font color="#E5E5E5"> you</font>

494
00:24:51,070 --> 00:24:55,870
get hacked while you're protecting<font color="#E5E5E5"> all</font>

495
00:24:52,930 --> 00:24:58,660
your good<font color="#CCCCCC"> dusty</font><font color="#E5E5E5"> you know that's a good</font>

496
00:24:55,870 --> 00:25:06,489
helps to<font color="#E5E5E5"> have those clients to</font><font color="#CCCCCC"> myself as</font>

497
00:24:58,660 --> 00:25:12,040
an example<font color="#CCCCCC"> so</font><font color="#E5E5E5"> so this is our initial</font>

498
00:25:06,490 --> 00:25:14,560
request here<font color="#CCCCCC"> those are</font><font color="#E5E5E5"> so we sent</font>

499
00:25:12,040 --> 00:25:15,220
<font color="#CCCCCC">username password you got</font><font color="#E5E5E5"> username was</font>

500
00:25:14,560 --> 00:25:17,080
not<font color="#CCCCCC"> fine</font>

501
00:25:15,220 --> 00:25:18,790
so<font color="#E5E5E5"> then that request looks just like</font>

502
00:25:17,080 --> 00:25:21,100
that original payload file<font color="#E5E5E5"> yeah right</font>

503
00:25:18,790 --> 00:25:24,370
let's just accept<font color="#E5E5E5"> the formatting for</font><font color="#CCCCCC"> the</font>

504
00:25:21,100 --> 00:25:26,679
day so so now we're gonna look at our

505
00:25:24,370 --> 00:25:31,199
<font color="#E5E5E5">other requests so here the username has</font>

506
00:25:26,680 --> 00:25:34,660
obviously been falsified the LDAP<font color="#CCCCCC"> test</font>

507
00:25:31,200 --> 00:25:37,030
in the<font color="#E5E5E5"> password we only have the two the</font>

508
00:25:34,660 --> 00:25:39,730
two<font color="#E5E5E5"> strings here</font><font color="#CCCCCC"> so we only see these</font>

509
00:25:37,030 --> 00:25:42,220
few requests but then we go back to

510
00:25:39,730 --> 00:25:44,410
<font color="#E5E5E5">another this is another initial request</font>

511
00:25:42,220 --> 00:25:47,890
because<font color="#E5E5E5"> we've actually started</font><font color="#CCCCCC"> a segment</font>

512
00:25:44,410 --> 00:25:49,750
test<font color="#CCCCCC"> so that was the first test</font><font color="#E5E5E5"> that we</font>

513
00:25:47,890 --> 00:25:51,730
went<font color="#E5E5E5"> through was the body fuzzing</font>

514
00:25:49,750 --> 00:25:55,750
this is the initial for the header

515
00:25:51,730 --> 00:25:58,660
fuzzing so now you see that<font color="#E5E5E5"> all that</font>

516
00:25:55,750 --> 00:26:01,840
<font color="#E5E5E5">test</font><font color="#CCCCCC"> string is up here</font><font color="#E5E5E5"> I guess pointing</font>

517
00:25:58,660 --> 00:26:04,540
at my screen<font color="#E5E5E5"> doesn't doesn't work right</font>

518
00:26:01,840 --> 00:26:09,730
<font color="#CCCCCC">these okay so just</font><font color="#E5E5E5"> turn it around it so</font>

519
00:26:04,540 --> 00:26:11,620
I'll use the mouse<font color="#E5E5E5"> from now on so the</font>

520
00:26:09,730 --> 00:26:14,890
one that<font color="#E5E5E5"> actually felt is this</font><font color="#CCCCCC"> guy</font>

521
00:26:11,620 --> 00:26:17,290
<font color="#E5E5E5">apparently</font><font color="#CCCCCC"> this API</font><font color="#E5E5E5"> if you send in LDAP</font>

522
00:26:14,890 --> 00:26:19,420
test string as a content type<font color="#E5E5E5"> it doesn't</font>

523
00:26:17,290 --> 00:26:24,520
<font color="#CCCCCC">handle it well and throws a 500</font>

524
00:26:19,420 --> 00:26:28,180
exception so we automatically<font color="#E5E5E5"> fell it</font>

525
00:26:24,520 --> 00:26:30,730
<font color="#CCCCCC">all</font><font color="#E5E5E5"> 500 because regardless of its</font>

526
00:26:28,180 --> 00:26:33,100
security<font color="#E5E5E5"> or not</font><font color="#CCCCCC"> your API shouldn't be</font>

527
00:26:30,730 --> 00:26:36,190
<font color="#E5E5E5">throwing</font><font color="#CCCCCC"> five hundreds and you can</font>

528
00:26:33,100 --> 00:26:38,649
configure that<font color="#E5E5E5"> per test right so so if</font>

529
00:26:36,190 --> 00:26:41,940
you well<font color="#CCCCCC"> five hundred</font><font color="#E5E5E5"> yeah if you</font>

530
00:26:38,650 --> 00:26:41,940
decided<font color="#E5E5E5"> five hundred</font><font color="#CCCCCC"> our great</font>

531
00:26:49,870 --> 00:27:06,949
<font color="#E5E5E5">yes yeah yeah that's the current test</font>

532
00:27:03,860 --> 00:27:09,939
cases that<font color="#E5E5E5"> have</font><font color="#CCCCCC"> been written</font><font color="#E5E5E5"> so the way</font>

533
00:27:06,950 --> 00:27:09,940
we've<font color="#CCCCCC"> we've written</font>

534
00:27:25,990 --> 00:27:33,740
yeah<font color="#CCCCCC"> but the so we plan on building more</font>

535
00:27:30,559 --> 00:27:36,710
<font color="#CCCCCC">than just the buzzer</font><font color="#E5E5E5"> into it like we we</font>

536
00:27:33,740 --> 00:27:40,429
initially want to add a cross like

537
00:27:36,710 --> 00:27:43,220
resource<font color="#E5E5E5"> access test that you give it a</font>

538
00:27:40,429 --> 00:27:44,960
resource<font color="#E5E5E5"> and give it to users and</font><font color="#CCCCCC"> it'll</font>

539
00:27:43,220 --> 00:27:47,809
take user<font color="#CCCCCC"> one</font><font color="#E5E5E5"> and try to access you to</font>

540
00:27:44,960 --> 00:27:50,230
<font color="#CCCCCC">resources</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> what we want</font><font color="#E5E5E5"> to make that</font>

541
00:27:47,809 --> 00:27:54,320
automatic as well<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a very common</font>

542
00:27:50,230 --> 00:27:57,800
test case<font color="#E5E5E5"> for security professionals</font>

543
00:27:54,320 --> 00:28:00,260
so you know it's<font color="#E5E5E5"> just whatever whatever</font>

544
00:27:57,800 --> 00:28:02,690
<font color="#E5E5E5">the security engineers built then</font>

545
00:28:00,260 --> 00:28:09,379
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> lotta goal is to</font><font color="#E5E5E5"> get more</font>

546
00:28:02,690 --> 00:28:10,820
<font color="#E5E5E5">people involved sure</font>

547
00:28:09,380 --> 00:28:12,380
and and the automation<font color="#E5E5E5"> so it's a</font>

548
00:28:10,820 --> 00:28:14,360
command-line tool so<font color="#E5E5E5"> you could run it</font>

549
00:28:12,380 --> 00:28:18,710
<font color="#E5E5E5">you know when Jenkins or whatever kind</font>

550
00:28:14,360 --> 00:28:23,120
<font color="#E5E5E5">of so the goal</font><font color="#CCCCCC"> scheduler so I I consider</font>

551
00:28:18,710 --> 00:28:28,040
this a problem<font color="#E5E5E5"> currently a lot of and I</font>

552
00:28:23,120 --> 00:28:29,389
<font color="#E5E5E5">think we're we're quickly becoming where</font>

553
00:28:28,040 --> 00:28:32,810
everyone<font color="#E5E5E5"> needs to know how to death</font>

554
00:28:29,390 --> 00:28:35,180
wherever<font color="#E5E5E5"> else yeah we're outside your</font>

555
00:28:32,810 --> 00:28:36,980
even your<font color="#E5E5E5"> IT people are usually</font><font color="#CCCCCC"> going to</font>

556
00:28:35,180 --> 00:28:41,690
be gonna have to learn how<font color="#E5E5E5"> to automate</font>

557
00:28:36,980 --> 00:28:43,550
their<font color="#E5E5E5"> functionality so you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> just</font>

558
00:28:41,690 --> 00:28:46,180
look at all the DevOps tools that are

559
00:28:43,550 --> 00:28:48,800
you know saltstack<font color="#E5E5E5"> ansible</font>

560
00:28:46,180 --> 00:28:51,920
<font color="#CCCCCC">these</font><font color="#E5E5E5"> holes are</font><font color="#CCCCCC"> gonna be just like a way</font>

561
00:28:48,800 --> 00:28:54,260
<font color="#CCCCCC">of</font><font color="#E5E5E5"> life soon yeah and</font><font color="#CCCCCC"> and additionally</font>

562
00:28:51,920 --> 00:28:56,780
the thing for this tool as well<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

563
00:28:54,260 --> 00:28:58,430
it would<font color="#E5E5E5"> allow</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> to as the company is</font>

564
00:28:56,780 --> 00:29:01,100
scaling up into that word<font color="#CCCCCC"> all of your</font>

565
00:28:58,430 --> 00:29:03,080
security<font color="#CCCCCC"> is</font><font color="#E5E5E5"> being turned into</font><font color="#CCCCCC"> deaths a</font>

566
00:29:01,100 --> 00:29:05,149
couple deaths could<font color="#CCCCCC"> be developing and</font>

567
00:29:03,080 --> 00:29:07,370
maintaining<font color="#E5E5E5"> the code infrastructure</font>

568
00:29:05,150 --> 00:29:09,200
while<font color="#E5E5E5"> your based security testers can</font>

569
00:29:07,370 --> 00:29:11,389
just be taking the requests<font color="#CCCCCC"> and actually</font>

570
00:29:09,200 --> 00:29:14,000
<font color="#E5E5E5">running all of this automation setting</font>

571
00:29:11,390 --> 00:29:15,680
up the<font color="#E5E5E5"> Jenkins jobs doing the tasks</font>

572
00:29:14,000 --> 00:29:16,910
<font color="#CCCCCC">required to actually</font><font color="#E5E5E5"> run this while you</font>

573
00:29:15,680 --> 00:29:19,490
still have<font color="#CCCCCC"> people</font><font color="#E5E5E5"> doing active</font>

574
00:29:16,910 --> 00:29:21,470
development<font color="#E5E5E5"> to create additional test</font>

575
00:29:19,490 --> 00:29:24,140
cases<font color="#CCCCCC"> start working on new</font><font color="#E5E5E5"> API is</font>

576
00:29:21,470 --> 00:29:28,300
<font color="#E5E5E5">anything relevant to that specifically</font>

577
00:29:24,140 --> 00:29:30,470
this so to me as a security tester

578
00:29:28,300 --> 00:29:33,139
somebody that<font color="#E5E5E5"> actually has vision for</font>

579
00:29:30,470 --> 00:29:36,410
<font color="#E5E5E5">this and where it's going today it it</font>

580
00:29:33,140 --> 00:29:39,050
kind of mimics<font color="#E5E5E5"> what intruder does a</font>

581
00:29:36,410 --> 00:29:42,340
feature because<font color="#CCCCCC"> it goes soon replaces</font>

582
00:29:39,050 --> 00:29:42,340
all those parameters<font color="#CCCCCC"> all</font><font color="#E5E5E5"> those values</font>

583
00:29:47,090 --> 00:29:52,540
so forgiving your question initially

584
00:29:52,710 --> 00:30:00,790
<font color="#E5E5E5">okay sure</font><font color="#CCCCCC"> so Burt</font><font color="#E5E5E5"> but but when you're</font>

585
00:29:59,169 --> 00:30:02,080
<font color="#E5E5E5">using birth right you're sitting at your</font>

586
00:30:00,790 --> 00:30:03,370
desk and you're doing<font color="#E5E5E5"> it right and</font>

587
00:30:02,080 --> 00:30:06,220
you've got all these tabs open and

588
00:30:03,370 --> 00:30:09,250
windows<font color="#CCCCCC"> and in trying to manage that and</font>

589
00:30:06,220 --> 00:30:10,690
for<font color="#CCCCCC"> me it it can get a you</font><font color="#E5E5E5"> know again</font>

590
00:30:09,250 --> 00:30:13,090
with<font color="#E5E5E5"> all the api's and all the resources</font>

591
00:30:10,690 --> 00:30:16,299
<font color="#CCCCCC">that you're testing that</font><font color="#E5E5E5"> can be tough to</font>

592
00:30:13,090 --> 00:30:20,199
<font color="#E5E5E5">manage all that data that's coming back</font>

593
00:30:16,299 --> 00:30:22,240
<font color="#E5E5E5">this can run the tests</font><font color="#CCCCCC"> it has the</font>

594
00:30:20,200 --> 00:30:23,740
validation as a little bit maybe<font color="#E5E5E5"> a</font>

595
00:30:22,240 --> 00:30:26,320
little bit more<font color="#CCCCCC"> well it has</font><font color="#E5E5E5"> more</font>

596
00:30:23,740 --> 00:30:29,679
customizable validation<font color="#E5E5E5"> and what burp</font>

597
00:30:26,320 --> 00:30:31,750
has by default<font color="#CCCCCC"> obviously need to build a</font>

598
00:30:29,679 --> 00:30:34,330
little<font color="#CCCCCC"> bit into it</font><font color="#E5E5E5"> for it to do those</font>

599
00:30:31,750 --> 00:30:36,130
things<font color="#E5E5E5"> but it has that possibility like</font>

600
00:30:34,330 --> 00:30:39,399
<font color="#E5E5E5">burp you can it can look for specific</font>

601
00:30:36,130 --> 00:30:41,830
strings<font color="#E5E5E5"> and in the response</font><font color="#CCCCCC"> until you</font>

602
00:30:39,400 --> 00:30:43,690
and kind<font color="#CCCCCC"> of flag those things where is</font>

603
00:30:41,830 --> 00:30:46,449
this hopefully<font color="#E5E5E5"> you can get it to a point</font>

604
00:30:43,690 --> 00:30:47,830
for a<font color="#E5E5E5"> specific product or a class of</font>

605
00:30:46,450 --> 00:30:50,200
products<font color="#CCCCCC"> that kind of all act the same</font>

606
00:30:47,830 --> 00:30:52,000
way<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> have configurations</font><font color="#E5E5E5"> built</font>

607
00:30:50,200 --> 00:30:54,700
for those<font color="#E5E5E5"> an</font><font color="#CCCCCC"> ink and it's run</font><font color="#E5E5E5"> it all the</font>

608
00:30:52,000 --> 00:30:57,130
<font color="#E5E5E5">time right versus you know saving it</font><font color="#CCCCCC"> and</font>

609
00:30:54,700 --> 00:30:59,020
burp<font color="#E5E5E5"> external to a tool something</font><font color="#CCCCCC"> that</font>

610
00:30:57,130 --> 00:31:04,110
you have to<font color="#CCCCCC"> be running</font><font color="#E5E5E5"> with your hands</font>

611
00:30:59,020 --> 00:31:04,110
this can be integrated into automation

612
00:31:14,050 --> 00:31:24,909
we haven't<font color="#E5E5E5"> looked at</font><font color="#CCCCCC"> it absolutely I</font>

613
00:31:22,000 --> 00:31:26,770
don't<font color="#E5E5E5"> know I mean it's you you could but</font>

614
00:31:24,910 --> 00:31:28,210
we we currently don't have<font color="#CCCCCC"> that I may</font>

615
00:31:26,770 --> 00:31:30,639
have<font color="#CCCCCC"> applying for</font><font color="#E5E5E5"> it</font>

616
00:31:28,210 --> 00:31:32,590
it<font color="#E5E5E5"> recently got</font><font color="#CCCCCC"> accepted into OpenStack</font>

617
00:31:30,640 --> 00:31:35,860
and they're gonna start using it to test

618
00:31:32,590 --> 00:31:39,459
all of<font color="#E5E5E5"> their</font><font color="#CCCCCC"> api's so the dev</font><font color="#E5E5E5"> on the dev</font>

619
00:31:35,860 --> 00:31:44,620
<font color="#CCCCCC">Everts should be increasing massively</font>

620
00:31:39,460 --> 00:31:46,540
<font color="#E5E5E5">within the next six</font><font color="#CCCCCC"> months</font><font color="#E5E5E5"> we hope yeah</font>

621
00:31:44,620 --> 00:31:49,149
that's that's the idea<font color="#CCCCCC"> right that's</font>

622
00:31:46,540 --> 00:31:52,690
that's<font color="#E5E5E5"> the idea</font><font color="#CCCCCC"> so it will be the</font>

623
00:31:49,150 --> 00:31:54,970
OpenStack<font color="#E5E5E5"> security framework for running</font>

624
00:31:52,690 --> 00:31:58,270
all the focus that<font color="#E5E5E5"> gates so you have</font>

625
00:31:54,970 --> 00:32:00,940
this unit test<font color="#E5E5E5"> right and it normally</font>

626
00:31:58,270 --> 00:32:02,770
does a bunch of<font color="#E5E5E5"> things prior to actually</font>

627
00:32:00,940 --> 00:32:04,540
perform<font color="#CCCCCC"> it the one test so it's kind of</font>

628
00:32:02,770 --> 00:32:07,030
go grab<font color="#CCCCCC"> yourself from identity it's</font>

629
00:32:04,540 --> 00:32:09,100
<font color="#CCCCCC">gotta go</font><font color="#E5E5E5"> create user or create a</font>

630
00:32:07,030 --> 00:32:13,120
<font color="#CCCCCC">specific resource it has</font><font color="#E5E5E5"> to so they</font>

631
00:32:09,100 --> 00:32:18,429
write this long<font color="#CCCCCC"> step-by-step</font><font color="#E5E5E5"> test to get</font>

632
00:32:13,120 --> 00:32:21,729
<font color="#E5E5E5">to the point where okay what so so it's</font>

633
00:32:18,430 --> 00:32:24,730
it ends up being<font color="#E5E5E5"> only useful for that</font>

634
00:32:21,730 --> 00:32:27,460
one<font color="#CCCCCC"> qbt person that one security</font>

635
00:32:24,730 --> 00:32:30,160
developer so that unit<font color="#CCCCCC"> test</font><font color="#E5E5E5"> can only be</font>

636
00:32:27,460 --> 00:32:32,320
used<font color="#E5E5E5"> in that case well and also for</font>

637
00:32:30,160 --> 00:32:34,000
that's specific to that<font color="#CCCCCC"> that API that</font>

638
00:32:32,320 --> 00:32:36,429
<font color="#E5E5E5">you're testing this is a little bit more</font>

639
00:32:34,000 --> 00:32:38,980
<font color="#E5E5E5">generic</font><font color="#CCCCCC"> where you do need specific</font>

640
00:32:36,430 --> 00:32:40,600
configuration for that API but but you

641
00:32:38,980 --> 00:32:42,790
<font color="#E5E5E5">don't need to build specific hooks and</font>

642
00:32:40,600 --> 00:32:46,060
specific<font color="#E5E5E5"> things to do what that product</font>

643
00:32:42,790 --> 00:32:47,950
<font color="#CCCCCC">does it'll go and do it for you yeah the</font>

644
00:32:46,060 --> 00:32:49,899
codes vary the code that's<font color="#E5E5E5"> built into</font>

645
00:32:47,950 --> 00:32:52,060
<font color="#E5E5E5">the unit tests and the frameworks are</font>

646
00:32:49,900 --> 00:32:54,700
specific to those products<font color="#E5E5E5"> so</font><font color="#CCCCCC"> normally</font>

647
00:32:52,060 --> 00:32:57,850
in cafe you you have to build these

648
00:32:54,700 --> 00:33:00,820
models<font color="#E5E5E5"> these model serialization and</font>

649
00:32:57,850 --> 00:33:02,679
deserialization<font color="#CCCCCC"> so just building that</font>

650
00:33:00,820 --> 00:33:04,600
<font color="#E5E5E5">like okay I need you to test this brand</font>

651
00:33:02,680 --> 00:33:07,120
<font color="#E5E5E5">new API</font>

652
00:33:04,600 --> 00:33:09,820
just<font color="#CCCCCC"> went up</font><font color="#E5E5E5"> and you got a week to test</font>

653
00:33:07,120 --> 00:33:11,530
it<font color="#E5E5E5"> we don't have any models bills for</font>

654
00:33:09,820 --> 00:33:13,290
you it hasn't even looked at it yet<font color="#CCCCCC"> but</font>

655
00:33:11,530 --> 00:33:17,889
you need<font color="#E5E5E5"> to make sure that it's secure</font>

656
00:33:13,290 --> 00:33:19,960
<font color="#CCCCCC">so</font><font color="#E5E5E5"> so building all</font><font color="#CCCCCC"> of that is you</font><font color="#E5E5E5"> know</font>

657
00:33:17,890 --> 00:33:22,570
<font color="#CCCCCC">is</font><font color="#E5E5E5"> basically a kind</font><font color="#CCCCCC"> of a waste of</font><font color="#E5E5E5"> time</font>

658
00:33:19,960 --> 00:33:25,840
for<font color="#E5E5E5"> a security personnel it's it's more</font>

659
00:33:22,570 --> 00:33:28,360
the QB job to build the bindings<font color="#E5E5E5"> we we</font>

660
00:33:25,840 --> 00:33:30,850
only started Debian on<font color="#CCCCCC"> Center goes about</font>

661
00:33:28,360 --> 00:33:32,199
three months<font color="#E5E5E5"> four months ago yeah and</font>

662
00:33:30,850 --> 00:33:34,360
and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> so what we're getting from</font>

663
00:33:32,200 --> 00:33:37,330
<font color="#E5E5E5">president the text files of those</font>

664
00:33:34,360 --> 00:33:38,760
strings that<font color="#E5E5E5"> are known to</font><font color="#CCCCCC"> create you</font>

665
00:33:37,330 --> 00:33:44,620
know sequel for<font color="#E5E5E5"> sequel injection</font><font color="#CCCCCC"> with</font>

666
00:33:38,760 --> 00:34:03,670
<font color="#E5E5E5">the LDAP injection personal and it's a</font>

667
00:33:44,620 --> 00:34:09,239
it's a good generic start<font color="#E5E5E5"> cuz I went</font><font color="#CCCCCC"> to</font>

668
00:34:03,670 --> 00:34:09,240
the log home

669
00:34:20,050 --> 00:34:27,980
so so not not directly<font color="#E5E5E5"> so the way that</font>

670
00:34:26,030 --> 00:34:30,859
<font color="#E5E5E5">the idea</font><font color="#CCCCCC"> for the tool right is that</font><font color="#E5E5E5"> you</font>

671
00:34:27,980 --> 00:34:32,570
take<font color="#E5E5E5"> the wrong requests from you make</font>

672
00:34:30,859 --> 00:34:34,489
your<font color="#CCCCCC"> request</font><font color="#E5E5E5"> manually or something right</font>

673
00:34:32,570 --> 00:34:37,250
<font color="#CCCCCC">be</font><font color="#E5E5E5"> able working</font><font color="#CCCCCC"> request you take that</font>

674
00:34:34,489 --> 00:34:38,719
you save any tax model beyond that

675
00:34:37,250 --> 00:34:40,310
initially you<font color="#E5E5E5"> wouldn't have to do</font>

676
00:34:38,719 --> 00:34:42,678
anything<font color="#E5E5E5"> you just have to run the</font>

677
00:34:40,310 --> 00:34:44,679
<font color="#E5E5E5">command say here's my X file and I'm</font>

678
00:34:42,679 --> 00:34:47,570
going to go against<font color="#E5E5E5"> here's my request</font>

679
00:34:44,679 --> 00:34:49,460
<font color="#CCCCCC">and then here's the</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that I want</font><font color="#E5E5E5"> to</font>

680
00:34:47,570 --> 00:34:51,619
use<font color="#CCCCCC"> for all of them where do you go and</font>

681
00:34:49,460 --> 00:34:53,000
it will<font color="#E5E5E5"> wear</font><font color="#CCCCCC"> that before going on</font><font color="#E5E5E5"> you</font>

682
00:34:51,619 --> 00:34:56,330
<font color="#E5E5E5">doesn't have to do something that</font><font color="#CCCCCC"> your</font>

683
00:34:53,000 --> 00:34:58,099
TV<font color="#CCCCCC"> or your</font><font color="#E5E5E5"> deficit</font><font color="#CCCCCC"> bills for any of the</font>

684
00:34:56,330 --> 00:35:02,000
generic stuff<font color="#E5E5E5"> it's meant to</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> on any</font>

685
00:34:58,099 --> 00:35:03,560
possible<font color="#E5E5E5"> XML</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> JSON request I mean of</font>

686
00:35:02,000 --> 00:35:11,780
that<font color="#CCCCCC"> maybe your developers are</font>

687
00:35:03,560 --> 00:35:14,299
automatically generating samples not<font color="#CCCCCC"> all</font>

688
00:35:11,780 --> 00:35:16,400
the<font color="#E5E5E5"> time</font><font color="#CCCCCC"> to developers so that's</font>

689
00:35:14,300 --> 00:35:18,260
absolutely<font color="#E5E5E5"> a gap and I think that's one</font>

690
00:35:16,400 --> 00:35:21,790
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> problems or one of the</font>

691
00:35:18,260 --> 00:35:23,839
challenges with automating API testing

692
00:35:21,790 --> 00:35:25,339
for this HTTP stuff is there's no

693
00:35:23,839 --> 00:35:27,410
standard there's no standard way<font color="#CCCCCC"> to</font>

694
00:35:25,339 --> 00:35:29,630
build the documents on<font color="#E5E5E5"> the schemas</font>

695
00:35:27,410 --> 00:35:31,279
everybody kind of does<font color="#CCCCCC"> it differently so</font>

696
00:35:29,630 --> 00:35:34,099
if we get adoption with our developers

697
00:35:31,280 --> 00:35:36,220
<font color="#CCCCCC">to do that stuff or documentation folks</font>

698
00:35:34,099 --> 00:35:38,450
or whoever does<font color="#CCCCCC"> that or you know</font>

699
00:35:36,220 --> 00:35:41,200
somebody<font color="#E5E5E5"> would need to take on kind</font><font color="#CCCCCC"> of</font>

700
00:35:38,450 --> 00:35:41,200
that standard

701
00:35:42,119 --> 00:35:48,130
yeah<font color="#E5E5E5"> you</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> scrape</font><font color="#CCCCCC"> the page or there's</font>

702
00:35:45,460 --> 00:35:48,849
there's a format right you can export it

703
00:35:48,130 --> 00:35:50,799
or whatever

704
00:35:48,849 --> 00:35:54,190
so again<font color="#CCCCCC"> center bus was accepted as an</font>

705
00:35:50,799 --> 00:35:56,079
<font color="#CCCCCC">openstack security project</font><font color="#E5E5E5"> and basically</font>

706
00:35:54,190 --> 00:35:58,690
<font color="#CCCCCC">what that is it's a group</font><font color="#E5E5E5"> of security</font>

707
00:35:56,079 --> 00:36:01,660
minded<font color="#E5E5E5"> folks that work on OpenStack</font><font color="#CCCCCC"> they</font>

708
00:35:58,690 --> 00:36:03,519
do a lot of good<font color="#E5E5E5"> work</font><font color="#CCCCCC"> I mentioned</font>

709
00:36:01,660 --> 00:36:06,730
<font color="#E5E5E5">earlier there's a Python static analysis</font>

710
00:36:03,519 --> 00:36:08,410
<font color="#E5E5E5">tool and it's called bandit it's very</font>

711
00:36:06,730 --> 00:36:09,849
early<font color="#E5E5E5"> on but there's a lot of changes</font>

712
00:36:08,410 --> 00:36:13,509
<font color="#CCCCCC">going</font><font color="#E5E5E5"> on there so if you guys work with</font>

713
00:36:09,849 --> 00:36:15,099
<font color="#E5E5E5">bandit</font><font color="#CCCCCC"> and you're kind of struggling</font>

714
00:36:13,509 --> 00:36:17,019
like we<font color="#CCCCCC"> aren't trying</font><font color="#E5E5E5"> to find something</font>

715
00:36:15,099 --> 00:36:19,359
<font color="#CCCCCC">to kind of close close some of the gaps</font>

716
00:36:17,019 --> 00:36:22,538
with<font color="#E5E5E5"> static analysis tools bandits a</font>

717
00:36:19,359 --> 00:36:24,130
good start<font color="#E5E5E5"> obviously it's open source so</font>

718
00:36:22,539 --> 00:36:29,619
<font color="#CCCCCC">if you want to</font><font color="#E5E5E5"> contribute all the better</font>

719
00:36:24,130 --> 00:36:31,029
<font color="#CCCCCC">anchor is a memorable PKI</font><font color="#E5E5E5"> solution and</font>

720
00:36:29,619 --> 00:36:33,069
again<font color="#CCCCCC"> both</font><font color="#E5E5E5"> these they're there but stack</font>

721
00:36:31,029 --> 00:36:35,319
security group projects<font color="#E5E5E5"> but they're not</font>

722
00:36:33,069 --> 00:36:37,509
specific to OpenStack we don't need

723
00:36:35,319 --> 00:36:40,180
OpenStack to run these<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the other</font>

724
00:36:37,509 --> 00:36:42,250
stuff that the team is<font color="#CCCCCC"> doing is security</font>

725
00:36:40,180 --> 00:36:46,210
guides<font color="#E5E5E5"> so best practices for</font><font color="#CCCCCC"> overstating</font>

726
00:36:42,250 --> 00:36:49,539
deployments<font color="#E5E5E5"> major Hayden</font><font color="#CCCCCC"> from xbase is</font>

727
00:36:46,210 --> 00:36:51,700
<font color="#E5E5E5">working on some OpenStack ansible roles</font>

728
00:36:49,539 --> 00:36:55,119
so<font color="#CCCCCC"> that we can have some secured</font>

729
00:36:51,700 --> 00:36:56,919
deployments built in there<font color="#E5E5E5"> and that's</font>

730
00:36:55,119 --> 00:36:58,299
and I would<font color="#E5E5E5"> imagine at some point that's</font>

731
00:36:56,920 --> 00:36:59,680
that's really<font color="#CCCCCC"> early on right now</font>

732
00:36:58,299 --> 00:37:02,160
I imagine<font color="#CCCCCC"> at some</font><font color="#E5E5E5"> point that's something</font>

733
00:36:59,680 --> 00:37:06,339
that you<font color="#E5E5E5"> could even use for for other</font>

734
00:37:02,160 --> 00:37:07,509
other deployments as well<font color="#E5E5E5"> so we're</font>

735
00:37:06,339 --> 00:37:09,609
definitely looking for helpers I think

736
00:37:07,509 --> 00:37:12,269
we have something<font color="#CCCCCC"> like 200 members 200</font>

737
00:37:09,609 --> 00:37:14,769
<font color="#CCCCCC">members and OpenStack security project</font>

738
00:37:12,269 --> 00:37:17,288
<font color="#E5E5E5">you know maybe</font><font color="#CCCCCC"> 10%</font><font color="#E5E5E5"> of those are really</font>

739
00:37:14,769 --> 00:37:19,589
active but it's it's a good<font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> good</font>

740
00:37:17,289 --> 00:37:22,720
<font color="#E5E5E5">group of folks and it's it's it's</font>

741
00:37:19,589 --> 00:37:24,279
<font color="#CCCCCC">security-based again a lot</font><font color="#E5E5E5"> of the stuff</font>

742
00:37:22,720 --> 00:37:25,689
applies across the<font color="#E5E5E5"> board</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> not</font>

743
00:37:24,279 --> 00:37:27,670
using<font color="#E5E5E5"> OpenStack</font>

744
00:37:25,690 --> 00:37:30,099
so if you find<font color="#E5E5E5"> the</font><font color="#CCCCCC"> resources helpful let</font>

745
00:37:27,670 --> 00:37:32,609
us know if you<font color="#E5E5E5"> have any questions so</font>

746
00:37:30,099 --> 00:37:35,619
where you can<font color="#E5E5E5"> find us on freenode</font>

747
00:37:32,609 --> 00:37:38,828
<font color="#CCCCCC">every</font><font color="#E5E5E5"> Thursday at</font><font color="#CCCCCC"> 12</font><font color="#E5E5E5"> central there's no</font>

748
00:37:35,619 --> 00:37:41,200
<font color="#CCCCCC">set</font><font color="#E5E5E5"> meaning it's about an hour and then</font>

749
00:37:38,829 --> 00:37:43,900
I can reach<font color="#E5E5E5"> out on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> mailing</font><font color="#CCCCCC"> list and</font>

750
00:37:41,200 --> 00:37:47,680
here's the github for<font color="#CCCCCC"> Center both again</font>

751
00:37:43,900 --> 00:37:48,880
it's<font color="#E5E5E5"> under the OpenStack umbrella so we</font>

752
00:37:47,680 --> 00:37:50,828
have some documentation<font color="#E5E5E5"> there as well</font>

753
00:37:48,880 --> 00:37:53,050
which might<font color="#E5E5E5"> fill</font><font color="#CCCCCC"> in some of the some of</font>

754
00:37:50,829 --> 00:37:57,490
the questions that you might

755
00:37:53,050 --> 00:38:00,270
after this after this demo<font color="#E5E5E5"> and anyone</font>

756
00:37:57,490 --> 00:38:00,270
have any other questions

757
00:38:17,560 --> 00:38:25,140
well not taking care of data validation

758
00:38:22,240 --> 00:38:28,870
<font color="#E5E5E5">that's that's the largest by far</font>

759
00:38:25,140 --> 00:38:31,690
<font color="#E5E5E5">especially</font><font color="#CCCCCC"> I mean XML API to get xxe</font>

760
00:38:28,870 --> 00:38:33,609
injections<font color="#CCCCCC"> you know they're just not</font>

761
00:38:31,690 --> 00:38:35,080
validating what<font color="#E5E5E5"> they're what</font><font color="#CCCCCC"> they're</font>

762
00:38:33,610 --> 00:38:36,970
getting because everyone uses

763
00:38:35,080 --> 00:38:38,680
<font color="#E5E5E5">abstractions nowadays that the</font>

764
00:38:36,970 --> 00:38:41,470
developers aren't actually like looking

765
00:38:38,680 --> 00:38:44,560
at the raw<font color="#CCCCCC"> data</font><font color="#E5E5E5"> they're using some</font>

766
00:38:41,470 --> 00:38:46,180
abstract abstraction<font color="#E5E5E5"> that's probably</font>

767
00:38:44,560 --> 00:38:48,700
<font color="#E5E5E5">like an auto-generated model that's</font>

768
00:38:46,180 --> 00:38:50,710
based off of<font color="#E5E5E5"> like you know</font><font color="#CCCCCC"> it's equally</font>

769
00:38:48,700 --> 00:38:54,580
<font color="#E5E5E5">me and they're just</font><font color="#CCCCCC"> doing transforms on</font>

770
00:38:50,710 --> 00:38:57,670
these things<font color="#E5E5E5"> in fact on the demo</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I</font>

771
00:38:54,580 --> 00:39:01,120
have my laptop<font color="#CCCCCC"> it's it's actually about</font>

772
00:38:57,670 --> 00:39:04,780
a validation problem with the OpenStack

773
00:39:01,120 --> 00:39:06,880
<font color="#CCCCCC">create user</font><font color="#E5E5E5"> you can put in any key into</font>

774
00:39:04,780 --> 00:39:09,910
the<font color="#E5E5E5"> JSON I can say yeah I put a UUID and</font>

775
00:39:06,880 --> 00:39:11,350
<font color="#E5E5E5">put a value of a thousand days and it</font>

776
00:39:09,910 --> 00:39:14,310
will just take<font color="#E5E5E5"> that key</font><font color="#CCCCCC"> and store it in</font>

777
00:39:11,350 --> 00:39:16,480
<font color="#E5E5E5">the database with the user like metadata</font>

778
00:39:14,310 --> 00:39:17,860
but it's not<font color="#E5E5E5"> supposed to be there</font>

779
00:39:16,480 --> 00:39:20,830
there's no there's<font color="#CCCCCC"> no point</font><font color="#E5E5E5"> of that key</font>

780
00:39:17,860 --> 00:39:23,140
so that<font color="#CCCCCC"> was what we found we did turbo's</font>

781
00:39:20,830 --> 00:39:25,779
<font color="#CCCCCC">fuzzing all about the values were</font><font color="#E5E5E5"> able</font>

782
00:39:23,140 --> 00:39:28,040
to<font color="#CCCCCC"> just create</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> random peas</font><font color="#E5E5E5"> because</font>

783
00:39:25,780 --> 00:39:33,040
<font color="#CCCCCC">they're not validating their</font>

784
00:39:28,040 --> 00:39:36,710
generated<font color="#E5E5E5"> now so yeah validation becomes</font>

785
00:39:33,040 --> 00:39:40,460
<font color="#E5E5E5">large is fine it works it works the way</font>

786
00:39:36,710 --> 00:39:41,750
it is now<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> but it's generic</font><font color="#CCCCCC"> enough</font>

787
00:39:40,460 --> 00:39:44,110
that you can just<font color="#CCCCCC"> drop in that config</font>

788
00:39:41,750 --> 00:39:46,760
file<font color="#E5E5E5"> and use the tests that are built in</font>

789
00:39:44,110 --> 00:39:49,160
<font color="#CCCCCC">if you want to get</font><font color="#E5E5E5"> more in-depth testing</font>

790
00:39:46,760 --> 00:39:50,600
so<font color="#E5E5E5"> we have some authentication stuff</font>

791
00:39:49,160 --> 00:39:53,660
<font color="#CCCCCC">built-in that supports OpenStack</font>

792
00:39:50,600 --> 00:39:55,819
identity<font color="#E5E5E5"> so if you're using OpenStack</font>

793
00:39:53,660 --> 00:39:59,600
that's a<font color="#E5E5E5"> no-brainer</font><font color="#CCCCCC"> but if you need</font><font color="#E5E5E5"> to</font>

794
00:39:55,820 --> 00:40:00,770
be able to off<font color="#CCCCCC"> or pulling data from</font>

795
00:39:59,600 --> 00:40:03,049
another source in<font color="#E5E5E5"> order for these</font>

796
00:40:00,770 --> 00:40:04,610
requests to actually work<font color="#E5E5E5"> which that's</font>

797
00:40:03,050 --> 00:40:05,630
<font color="#E5E5E5">not the only</font><font color="#CCCCCC"> type of testing you might</font>

798
00:40:04,610 --> 00:40:08,180
want to do you might want to try<font color="#CCCCCC"> on/off</font>

799
00:40:05,630 --> 00:40:11,390
testing which is<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> you might need</font><font color="#E5E5E5"> to</font>

800
00:40:08,180 --> 00:40:14,299
build custom<font color="#E5E5E5"> pieces like that</font><font color="#CCCCCC"> but if if</font>

801
00:40:11,390 --> 00:40:16,730
you can supply an off token or other

802
00:40:14,300 --> 00:40:25,250
credentials<font color="#E5E5E5"> and you're in the file or in</font>

803
00:40:16,730 --> 00:40:28,850
<font color="#E5E5E5">the request itself then</font><font color="#CCCCCC"> you can this</font><font color="#E5E5E5"> is</font>

804
00:40:25,250 --> 00:40:30,590
true this is true and and again<font color="#E5E5E5"> as a</font>

805
00:40:28,850 --> 00:40:32,089
tester myself<font color="#CCCCCC"> I want this to be</font>

806
00:40:30,590 --> 00:40:33,470
something that's<font color="#E5E5E5"> easy to</font><font color="#CCCCCC"> use alright</font>

807
00:40:32,090 --> 00:40:34,790
like we're going into<font color="#E5E5E5"> a lot of the</font>

808
00:40:33,470 --> 00:40:36,890
<font color="#E5E5E5">technical details because it's a</font>

809
00:40:34,790 --> 00:40:38,509
technical talk<font color="#E5E5E5"> I guess you know it's a</font>

810
00:40:36,890 --> 00:40:41,210
tool<font color="#CCCCCC"> we</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to explain how it works</font><font color="#E5E5E5"> and</font>

811
00:40:38,510 --> 00:40:43,010
<font color="#E5E5E5">what it's doing</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> don't let that kind</font>

812
00:40:41,210 --> 00:40:46,010
<font color="#E5E5E5">of dissuade you from from playing</font><font color="#CCCCCC"> with</font>

813
00:40:43,010 --> 00:40:47,660
it<font color="#CCCCCC"> our emails were up there so if you</font>

814
00:40:46,010 --> 00:40:49,430
<font color="#E5E5E5">have questions</font><font color="#CCCCCC"> you need help setting</font>

815
00:40:47,660 --> 00:40:51,740
something up let<font color="#CCCCCC"> us know</font><font color="#E5E5E5"> we're happy</font><font color="#CCCCCC"> to</font>

816
00:40:49,430 --> 00:40:53,660
talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> it if you got capabilities</font>

817
00:40:51,740 --> 00:40:56,359
you want to be added we<font color="#CCCCCC"> can talk about</font>

818
00:40:53,660 --> 00:40:59,420
<font color="#E5E5E5">that stuff to you you know we definitely</font>

819
00:40:56,360 --> 00:41:01,280
<font color="#E5E5E5">it's early</font><font color="#CCCCCC"> enough</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we and we</font>

820
00:40:59,420 --> 00:41:02,720
understand that<font color="#E5E5E5"> that but it's also a</font>

821
00:41:01,280 --> 00:41:04,640
good<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that if there's more input</font>

822
00:41:02,720 --> 00:41:06,259
that people want<font color="#E5E5E5"> to want to provide like</font>

823
00:41:04,640 --> 00:41:09,710
we're<font color="#CCCCCC"> happy to take it where it needs to</font>

824
00:41:06,260 --> 00:41:09,980
<font color="#E5E5E5">go like like I said earlier it's filling</font>

825
00:41:09,710 --> 00:41:11,450
up

826
00:41:09,980 --> 00:41:14,270
additionally<font color="#E5E5E5"> feeling a really big gap</font>

827
00:41:11,450 --> 00:41:17,350
<font color="#CCCCCC">for us</font><font color="#E5E5E5"> and it's you</font><font color="#CCCCCC"> know the sky's the</font>

828
00:41:14,270 --> 00:41:17,350
limit at this point

829
00:41:18,180 --> 00:41:24,000
answer your question<font color="#E5E5E5"> mmm cool</font><font color="#CCCCCC"> any other</font>

830
00:41:21,670 --> 00:41:24,000
questions

831
00:41:24,180 --> 00:41:28,560
excellent<font color="#E5E5E5"> thank you so much</font>

