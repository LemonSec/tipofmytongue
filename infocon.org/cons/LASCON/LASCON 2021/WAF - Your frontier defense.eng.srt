1
00:00:03,200 --> 00:00:18,000
[Music]

2
00:00:18,000 --> 00:00:20,720
our talk is going to be you know on

3
00:00:20,720 --> 00:00:23,119
walks

4
00:00:23,119 --> 00:00:27,680
so that we introduce ourselves

5
00:00:29,679 --> 00:00:31,840
so we both work as

6
00:00:31,840 --> 00:00:34,079
architects and security architects for

7
00:00:34,079 --> 00:00:36,239
the cloud protection

8
00:00:36,239 --> 00:00:39,680
uh and licensing business unit in dallas

9
00:00:39,680 --> 00:00:42,000
so we used to work for gemalto and

10
00:00:42,000 --> 00:00:44,960
thales acquired gemalto uh i mean

11
00:00:44,960 --> 00:00:46,640
typically people

12
00:00:46,640 --> 00:00:48,640
you know when we ask if we haven't heard

13
00:00:48,640 --> 00:00:50,559
about either talus or geomatous because

14
00:00:50,559 --> 00:00:51,600
we don't

15
00:00:51,600 --> 00:00:53,680
normally do a lot of consumer products

16
00:00:53,680 --> 00:00:54,879
with more

17
00:00:54,879 --> 00:00:57,520
business focus so that's why but but we

18
00:00:57,520 --> 00:01:00,559
we do work in uh

19
00:01:00,559 --> 00:01:02,800
the product that we're working now is uh

20
00:01:02,800 --> 00:01:05,519
safely trusted asset access which is uh

21
00:01:05,519 --> 00:01:07,840
identity and access management solution

22
00:01:07,840 --> 00:01:10,159
so we and also previously we've been

23
00:01:10,159 --> 00:01:13,600
always been involved in uh solutions

24
00:01:13,600 --> 00:01:16,240
that provide security

25
00:01:16,240 --> 00:01:17,119
right

26
00:01:17,119 --> 00:01:19,280
and being involved in that so one of the

27
00:01:19,280 --> 00:01:21,600
thing that we have to look at is how to

28
00:01:21,600 --> 00:01:24,560
protect our applications right and

29
00:01:24,560 --> 00:01:27,200
we've been using wasps for almost like

30
00:01:27,200 --> 00:01:29,360
quite a bit of time now so we have we

31
00:01:29,360 --> 00:01:31,360
have an internal you know deployment

32
00:01:31,360 --> 00:01:33,360
architecture for

33
00:01:33,360 --> 00:01:35,600
sort of a homegrown move of solution

34
00:01:35,600 --> 00:01:37,920
that we use but we have also looked at

35
00:01:37,920 --> 00:01:40,159
different solutions that are out there

36
00:01:40,159 --> 00:01:43,439
you know from cloud providers and and

37
00:01:43,439 --> 00:01:45,600
on-premise so we're going to cover that

38
00:01:45,600 --> 00:01:48,960
um we're going to share our experiences

39
00:01:48,960 --> 00:01:51,119
and also the the research that we did

40
00:01:51,119 --> 00:01:54,680
with you all today

41
00:01:54,880 --> 00:01:56,719
so quickly on the agenda so we're going

42
00:01:56,719 --> 00:01:58,079
to you know

43
00:01:58,079 --> 00:02:00,560
go over a brief introduction

44
00:02:00,560 --> 00:02:02,640
of wolf and then

45
00:02:02,640 --> 00:02:04,399
cover the different options that are

46
00:02:04,399 --> 00:02:05,200
there

47
00:02:05,200 --> 00:02:06,000
uh

48
00:02:06,000 --> 00:02:08,318
we'll be focusing on the you know cloud

49
00:02:08,318 --> 00:02:10,878
provider and the self-managed options

50
00:02:10,878 --> 00:02:12,959
we'll have a comparison table to to

51
00:02:12,959 --> 00:02:14,879
where you can you know

52
00:02:14,879 --> 00:02:16,640
have a good view of

53
00:02:16,640 --> 00:02:18,319
how they compare

54
00:02:18,319 --> 00:02:19,760
uh some

55
00:02:19,760 --> 00:02:23,840
issues and limitations and questions

56
00:02:24,480 --> 00:02:26,800
so just briefly i'm i hope everybody

57
00:02:26,800 --> 00:02:28,720
knows wobbs i'm not going to read the

58
00:02:28,720 --> 00:02:30,080
wiki

59
00:02:30,080 --> 00:02:32,560
wikipedia definition over there but it

60
00:02:32,560 --> 00:02:34,959
it off is commonly used you know it's a

61
00:02:34,959 --> 00:02:38,720
security measure that is used to protect

62
00:02:38,720 --> 00:02:40,239
you know your

63
00:02:40,239 --> 00:02:42,000
application against

64
00:02:42,000 --> 00:02:44,640
malwares you know attacks

65
00:02:44,640 --> 00:02:46,959
impersonation attacks or you know wide

66
00:02:46,959 --> 00:02:51,000
variety of attacks

67
00:02:51,280 --> 00:02:52,959
so this is a very simplistic

68
00:02:52,959 --> 00:02:54,879
architecture i mean typically there'll

69
00:02:54,879 --> 00:02:57,519
be a lot more components in in a real

70
00:02:57,519 --> 00:02:59,840
you know deployment but this is just to

71
00:02:59,840 --> 00:03:02,159
give a view of where your waffle sits on

72
00:03:02,159 --> 00:03:04,480
your network right so you'll have on the

73
00:03:04,480 --> 00:03:06,879
left hand side you know you're good good

74
00:03:06,879 --> 00:03:09,519
guys bad guys on the internet then you

75
00:03:09,519 --> 00:03:11,440
have your network firewall typically

76
00:03:11,440 --> 00:03:13,120
your wall will sit behind the network

77
00:03:13,120 --> 00:03:14,560
firewall and then

78
00:03:14,560 --> 00:03:17,840
in the back end you have all your

79
00:03:17,840 --> 00:03:20,720
backend servers

80
00:03:22,000 --> 00:03:24,799
so the question is why do we need

81
00:03:24,799 --> 00:03:27,280
right first point is uh network

82
00:03:27,280 --> 00:03:28,879
firewalls you know

83
00:03:28,879 --> 00:03:31,040
um they are necessary but they'll they

84
00:03:31,040 --> 00:03:32,879
pro they don't protect you again

85
00:03:32,879 --> 00:03:34,080
application

86
00:03:34,080 --> 00:03:35,599
level attacks right they don't they

87
00:03:35,599 --> 00:03:38,480
can't inspect the http traffic uh

88
00:03:38,480 --> 00:03:40,080
they're limited to

89
00:03:40,080 --> 00:03:43,280
a a job that they do they're doing good

90
00:03:43,280 --> 00:03:44,080
but

91
00:03:44,080 --> 00:03:47,599
you know so but they are not good enough

92
00:03:47,599 --> 00:03:50,000
for application level attacks you have

93
00:03:50,000 --> 00:03:51,680
you know identity uh

94
00:03:51,680 --> 00:03:53,439
intrusion detection

95
00:03:53,439 --> 00:03:55,360
and intrusion prevention systems but

96
00:03:55,360 --> 00:03:57,599
they also typically don't inspect

97
00:03:57,599 --> 00:04:01,920
traffic so they don't cover you know

98
00:04:01,920 --> 00:04:03,439
application attacks

99
00:04:03,439 --> 00:04:06,400
uh data leak protection you know how how

100
00:04:06,400 --> 00:04:08,720
do you protect data exfiltration

101
00:04:08,720 --> 00:04:13,519
typically your wife does that that job

102
00:04:13,680 --> 00:04:15,840
hardening all back-end applications you

103
00:04:15,840 --> 00:04:18,238
know we might have hundreds of micro

104
00:04:18,238 --> 00:04:20,238
services if not by

105
00:04:20,238 --> 00:04:21,918
tens if not hundreds

106
00:04:21,918 --> 00:04:24,560
uh how do you protect all that right so

107
00:04:24,560 --> 00:04:28,560
it's it's hard and it's expensive right

108
00:04:28,560 --> 00:04:29,919
uh

109
00:04:29,919 --> 00:04:31,840
the off

110
00:04:31,840 --> 00:04:34,639
uh in terms of the resource huge usage

111
00:04:34,639 --> 00:04:36,400
if you have your wash that can scale

112
00:04:36,400 --> 00:04:37,759
independently it doesn't use the

113
00:04:37,759 --> 00:04:40,240
resources that your application use

114
00:04:40,240 --> 00:04:42,880
uh so there is a good uh decoupling you

115
00:04:42,880 --> 00:04:44,880
know over there

116
00:04:44,880 --> 00:04:46,880
some more points on wave off

117
00:04:46,880 --> 00:04:48,000
you know

118
00:04:48,000 --> 00:04:49,199
wasps

119
00:04:49,199 --> 00:04:50,720
doesn't need to know

120
00:04:50,720 --> 00:04:53,040
your source code right or it's agnostic

121
00:04:53,040 --> 00:04:55,040
of the technology what it needs to know

122
00:04:55,040 --> 00:04:57,440
is typically http right that's what it

123
00:04:57,440 --> 00:04:59,040
is protecting so your application could

124
00:04:59,040 --> 00:04:59,759
be

125
00:04:59,759 --> 00:05:03,120
you know net java node.js what not i

126
00:05:03,120 --> 00:05:04,479
don't need to know

127
00:05:04,479 --> 00:05:06,160
the source code

128
00:05:06,160 --> 00:05:08,560
uh the other point is centralized

129
00:05:08,560 --> 00:05:11,120
hardening of tls right typically we see

130
00:05:11,120 --> 00:05:12,560
that's the the

131
00:05:12,560 --> 00:05:15,280
uh typically off will be your tls

132
00:05:15,280 --> 00:05:17,520
termination endpoint right so you you

133
00:05:17,520 --> 00:05:19,919
have one place where you can harden

134
00:05:19,919 --> 00:05:21,919
right all the backing application you

135
00:05:21,919 --> 00:05:23,840
still need you know to set up search

136
00:05:23,840 --> 00:05:26,400
because you want encryption in transit

137
00:05:26,400 --> 00:05:29,360
end to end but in terms of let's say if

138
00:05:29,360 --> 00:05:31,199
you know

139
00:05:31,199 --> 00:05:33,199
if the team finds out there is a

140
00:05:33,199 --> 00:05:35,919
vulnerability that is out there in you

141
00:05:35,919 --> 00:05:38,880
know tls whatever 1.1 you want to

142
00:05:38,880 --> 00:05:40,960
block that there's one place you block

143
00:05:40,960 --> 00:05:43,199
it right and you can still go you have

144
00:05:43,199 --> 00:05:45,840
time more time to to address it for your

145
00:05:45,840 --> 00:05:48,880
backend applications

146
00:05:49,120 --> 00:05:51,840
then it's your central point for

147
00:05:51,840 --> 00:05:54,400
implementing all your uh

148
00:05:54,400 --> 00:05:56,720
filtering for security right

149
00:05:56,720 --> 00:05:58,240
you don't need to you can still have

150
00:05:58,240 --> 00:06:00,160
customize the

151
00:06:00,160 --> 00:06:01,759
you know customize

152
00:06:01,759 --> 00:06:04,479
based on special needs of the back end

153
00:06:04,479 --> 00:06:07,280
application but it's your central point

154
00:06:07,280 --> 00:06:09,520
uh hot patching right as i mentioned

155
00:06:09,520 --> 00:06:11,680
earlier also right it's very easy if you

156
00:06:11,680 --> 00:06:12,560
know that

157
00:06:12,560 --> 00:06:14,240
an application is supported that one of

158
00:06:14,240 --> 00:06:16,400
your application is exposing something

159
00:06:16,400 --> 00:06:17,199
you know

160
00:06:17,199 --> 00:06:19,520
let's say an admin portal right so it's

161
00:06:19,520 --> 00:06:21,600
you can get it very easy go in your wife

162
00:06:21,600 --> 00:06:23,039
and say okay this is blocked for

163
00:06:23,039 --> 00:06:24,800
external traffic okay for internal

164
00:06:24,800 --> 00:06:27,280
traffic right so it's easy to do hard

165
00:06:27,280 --> 00:06:28,400
patching

166
00:06:28,400 --> 00:06:31,039
and you know it can detect

167
00:06:31,039 --> 00:06:32,479
attacks

168
00:06:32,479 --> 00:06:35,440
early active attacks early

169
00:06:35,440 --> 00:06:37,440
so now wayne is going to go over the you

170
00:06:37,440 --> 00:06:39,919
know the details yes so we talked about

171
00:06:39,919 --> 00:06:42,400
why uh why

172
00:06:42,400 --> 00:06:44,160
okay maybe i need to

173
00:06:44,160 --> 00:06:47,160
okay

174
00:06:52,400 --> 00:06:54,880
okay now

175
00:07:00,160 --> 00:07:02,319
okay that's good i think okay so we

176
00:07:02,319 --> 00:07:04,720
talked about why why we need wolf so

177
00:07:04,720 --> 00:07:07,039
let's talk about some of its basic

178
00:07:07,039 --> 00:07:09,520
features

179
00:07:12,240 --> 00:07:14,400
okay looks like better

180
00:07:14,400 --> 00:07:15,919
okay so one of the most important

181
00:07:15,919 --> 00:07:17,840
feature of waff is that it acts as a

182
00:07:17,840 --> 00:07:19,199
reverse proxy

183
00:07:19,199 --> 00:07:21,280
uh basically it takes all the requests

184
00:07:21,280 --> 00:07:24,240
from the clients and then uh passes

185
00:07:24,240 --> 00:07:26,560
those requests to the backend components

186
00:07:26,560 --> 00:07:27,919
so there are many benefits of this

187
00:07:27,919 --> 00:07:29,840
approach one of the most important one

188
00:07:29,840 --> 00:07:32,080
is your back end components are never

189
00:07:32,080 --> 00:07:33,919
exposed publicly

190
00:07:33,919 --> 00:07:34,880
and

191
00:07:34,880 --> 00:07:36,880
it also makes your warf as a technology

192
00:07:36,880 --> 00:07:38,000
agnostic

193
00:07:38,000 --> 00:07:39,120
at the back end you can have any

194
00:07:39,120 --> 00:07:41,039
technologies your web solution does not

195
00:07:41,039 --> 00:07:42,880
care about that

196
00:07:42,880 --> 00:07:45,520
and also it's very friendlier for your

197
00:07:45,520 --> 00:07:48,479
uh new uh for your evolving products

198
00:07:48,479 --> 00:07:50,720
uh you can add any new component behind

199
00:07:50,720 --> 00:07:52,879
your existing wolf uh basically by just

200
00:07:52,879 --> 00:07:55,199
reconfiguring uh valve with little

201
00:07:55,199 --> 00:07:56,879
effort and you can add new components

202
00:07:56,879 --> 00:07:58,160
behind the scenes with little effort

203
00:07:58,160 --> 00:08:00,080
over there

204
00:08:00,080 --> 00:08:02,240
also implements the tls and as part of

205
00:08:02,240 --> 00:08:04,319
that it um

206
00:08:04,319 --> 00:08:06,720
also

207
00:08:06,800 --> 00:08:09,120
lets you choose what protocols and

208
00:08:09,120 --> 00:08:10,960
what versions do you support

209
00:08:10,960 --> 00:08:13,360
like tls ssl you can pick and choose

210
00:08:13,360 --> 00:08:15,759
those and you can also enable cipher

211
00:08:15,759 --> 00:08:17,039
suites which you want to enable or

212
00:08:17,039 --> 00:08:18,639
disable over there

213
00:08:18,639 --> 00:08:21,360
it also lets you intercept and

214
00:08:21,360 --> 00:08:22,800
filter out the traffic based on

215
00:08:22,800 --> 00:08:24,400
predefined rules

216
00:08:24,400 --> 00:08:26,000
as part of those rules you can decide

217
00:08:26,000 --> 00:08:27,759
whether you want to enable it you want

218
00:08:27,759 --> 00:08:30,080
to disable those rules uh disable the

219
00:08:30,080 --> 00:08:32,320
traffic you want to block it or you can

220
00:08:32,320 --> 00:08:34,159
just log that just for the auditing

221
00:08:34,159 --> 00:08:36,320
purposes later on

222
00:08:36,320 --> 00:08:37,120
and

223
00:08:37,120 --> 00:08:38,880
another good thing about waff is it

224
00:08:38,880 --> 00:08:40,880
supports detection mode as well as

225
00:08:40,880 --> 00:08:42,559
provincial mode prevention mode

226
00:08:42,559 --> 00:08:44,320
basically it would block anything which

227
00:08:44,320 --> 00:08:46,880
is violating the rules but detection

228
00:08:46,880 --> 00:08:49,040
basically means it won't block anything

229
00:08:49,040 --> 00:08:51,279
it would just log those things in in the

230
00:08:51,279 --> 00:08:53,279
logs so that you can refer to that later

231
00:08:53,279 --> 00:08:56,240
on uh and while we on this topic is

232
00:08:56,240 --> 00:08:59,200
whenever you're putting a new uh new

233
00:08:59,200 --> 00:09:01,680
solution watch solution production it is

234
00:09:01,680 --> 00:09:03,600
recommended you should put that in

235
00:09:03,600 --> 00:09:05,040
detection mode for a short period of

236
00:09:05,040 --> 00:09:07,839
time so that you can review warf logs

237
00:09:07,839 --> 00:09:10,480
and then basically adjust your rules

238
00:09:10,480 --> 00:09:12,959
based on those logs before you put that

239
00:09:12,959 --> 00:09:15,040
into provincial mode the benefit of that

240
00:09:15,040 --> 00:09:16,160
approach is

241
00:09:16,160 --> 00:09:18,160
that you don't see

242
00:09:18,160 --> 00:09:20,640
the number of unexpected blockages in

243
00:09:20,640 --> 00:09:22,320
production would be reduced so the false

244
00:09:22,320 --> 00:09:24,720
positives you can reduce that right away

245
00:09:24,720 --> 00:09:26,640
uh another thing good about rough is you

246
00:09:26,640 --> 00:09:28,640
can basically protect your resources

247
00:09:28,640 --> 00:09:30,640
with wolf you can use the blacklisting

248
00:09:30,640 --> 00:09:32,560
or whitelisting approach to

249
00:09:32,560 --> 00:09:34,000
restrict access to the sensitive

250
00:09:34,000 --> 00:09:35,680
resources

251
00:09:35,680 --> 00:09:37,519
and you can also use wolf to slightly

252
00:09:37,519 --> 00:09:39,680
monitor your traffic as well as the rate

253
00:09:39,680 --> 00:09:42,399
limiting as well

254
00:09:42,800 --> 00:09:45,680
the so we talked about

255
00:09:45,680 --> 00:09:48,560
why we need wall and what are the basic

256
00:09:48,560 --> 00:09:49,760
features

257
00:09:49,760 --> 00:09:51,680
let's talk about the different providers

258
00:09:51,680 --> 00:09:53,760
so there are three major classifications

259
00:09:53,760 --> 00:09:55,279
from our point of view

260
00:09:55,279 --> 00:09:57,600
uh one is the traditional

261
00:09:57,600 --> 00:09:59,279
firewall application providers which

262
00:09:59,279 --> 00:10:01,440
were mostly the network ones they also

263
00:10:01,440 --> 00:10:03,200
support now some of the work

264
00:10:03,200 --> 00:10:05,360
capabilities like f5

265
00:10:05,360 --> 00:10:06,800
uh but then there are now the cloud

266
00:10:06,800 --> 00:10:10,560
service drivers ones uh like aws gcp and

267
00:10:10,560 --> 00:10:12,000
azure they have their own watch

268
00:10:12,000 --> 00:10:14,079
solutions and we also have some self

269
00:10:14,079 --> 00:10:16,880
managed options as well so for our part

270
00:10:16,880 --> 00:10:20,240
today we'll be mainly focusing on the um

271
00:10:20,240 --> 00:10:22,560
on the the last two uh so let's start

272
00:10:22,560 --> 00:10:23,760
with the cloud brighter one first and

273
00:10:23,760 --> 00:10:24,800
then we'll we'll move to the

274
00:10:24,800 --> 00:10:27,920
self-managed one as well

275
00:10:28,160 --> 00:10:30,320
check if it's still working

276
00:10:30,320 --> 00:10:33,480
is it

277
00:10:35,560 --> 00:10:38,670
[Music]

278
00:10:47,360 --> 00:10:49,600
okay so first we're going to look at uh

279
00:10:49,600 --> 00:10:51,279
so you're thinking how to best do it we

280
00:10:51,279 --> 00:10:54,079
thought you know let's just show a demo

281
00:10:54,079 --> 00:10:57,519
so we'll cover the aws first and just

282
00:10:57,519 --> 00:11:00,079
quickly go over the page you know you

283
00:11:00,079 --> 00:11:02,240
see that there's aws shield over there

284
00:11:02,240 --> 00:11:04,240
which basically protects again uh

285
00:11:04,240 --> 00:11:06,800
distributed denial of service attacks uh

286
00:11:06,800 --> 00:11:08,240
it's not the waffle and then you have

287
00:11:08,240 --> 00:11:09,360
your

288
00:11:09,360 --> 00:11:10,800
wharf

289
00:11:10,800 --> 00:11:13,360
you can see all the the

290
00:11:13,360 --> 00:11:15,600
you know features that it supports

291
00:11:15,600 --> 00:11:17,839
uh

292
00:11:17,839 --> 00:11:21,519
didn't get my glasses so it's too small

293
00:11:22,000 --> 00:11:24,240
so yeah so

294
00:11:24,240 --> 00:11:26,959
over here i mean some of it i'll quickly

295
00:11:26,959 --> 00:11:29,120
cover i mean ipa sets yeah you can group

296
00:11:29,120 --> 00:11:31,200
them together and refer them in a

297
00:11:31,200 --> 00:11:32,959
separate role similarly regular

298
00:11:32,959 --> 00:11:35,200
expression and and so on invest

299
00:11:35,200 --> 00:11:37,040
marketplace it's it's that's a good

300
00:11:37,040 --> 00:11:38,160
thing about

301
00:11:38,160 --> 00:11:41,200
aws is you can use you know there are

302
00:11:41,200 --> 00:11:42,800
some companies have been doing this for

303
00:11:42,800 --> 00:11:44,560
a long time they have you know really

304
00:11:44,560 --> 00:11:47,040
hardened rules good roles so you can

305
00:11:47,040 --> 00:11:48,640
use them obviously you have to pay for

306
00:11:48,640 --> 00:11:52,079
it subscribes subscribe to it how you

307
00:11:52,079 --> 00:11:53,839
get started first thing that you create

308
00:11:53,839 --> 00:11:55,360
is you have to create a

309
00:11:55,360 --> 00:11:58,800
web acl right so your web acl is

310
00:11:58,800 --> 00:12:01,920
something that you bind it with your you

311
00:12:01,920 --> 00:12:04,160
know entry point whether it's a cloud

312
00:12:04,160 --> 00:12:06,639
front you know distribution or load

313
00:12:06,639 --> 00:12:11,279
balancers or api gateways so for today's

314
00:12:11,279 --> 00:12:13,839
demo we just use a you know cloud fund

315
00:12:13,839 --> 00:12:15,040
distribution

316
00:12:15,040 --> 00:12:16,880
you name it

317
00:12:16,880 --> 00:12:19,279
and then

318
00:12:19,440 --> 00:12:20,720
you have to

319
00:12:20,720 --> 00:12:23,040
bind it to a specific resource that you

320
00:12:23,040 --> 00:12:25,360
want to protect here then you're not

321
00:12:25,360 --> 00:12:27,200
going to cover that part

322
00:12:27,200 --> 00:12:28,800
to a specific resource but just wanted

323
00:12:28,800 --> 00:12:32,079
to show that what resources you can

324
00:12:32,079 --> 00:12:34,160
and then you have your default

325
00:12:34,160 --> 00:12:37,440
options you know whether to allow or

326
00:12:37,440 --> 00:12:38,480
block

327
00:12:38,480 --> 00:12:39,839
now

328
00:12:39,839 --> 00:12:41,760
next thing is within an acl you have

329
00:12:41,760 --> 00:12:44,320
your rules that you need to define right

330
00:12:44,320 --> 00:12:45,760
so

331
00:12:45,760 --> 00:12:48,160
there's no limitation in aws it it

332
00:12:48,160 --> 00:12:51,440
inspects only you know 8k of a

333
00:12:51,440 --> 00:12:53,920
request body so that's right

334
00:12:53,920 --> 00:12:55,040
up there

335
00:12:55,040 --> 00:12:58,160
then you have your manage rules

336
00:12:58,160 --> 00:12:59,920
and in managing rules you have free rule

337
00:12:59,920 --> 00:13:01,920
groups and paid bot control this is

338
00:13:01,920 --> 00:13:05,040
something which is fairly new in in aws

339
00:13:05,040 --> 00:13:07,680
which you can protect again bot and then

340
00:13:07,680 --> 00:13:10,160
you have your free rules admin

341
00:13:10,160 --> 00:13:12,720
protection you know ip reputation is

342
00:13:12,720 --> 00:13:15,760
like amazon has its own ip list of

343
00:13:15,760 --> 00:13:18,240
blacklisted ips and on base ip list

344
00:13:18,240 --> 00:13:19,440
that's basically

345
00:13:19,440 --> 00:13:22,240
vpns and proxies known proxy and some of

346
00:13:22,240 --> 00:13:23,440
the other rules

347
00:13:23,440 --> 00:13:24,480
uh the

348
00:13:24,480 --> 00:13:25,440
um

349
00:13:25,440 --> 00:13:27,839
you know from the marketplace you can f5

350
00:13:27,839 --> 00:13:29,440
is the favorites one so you can

351
00:13:29,440 --> 00:13:32,160
subscribe to any of the these rules but

352
00:13:32,160 --> 00:13:33,760
in in you know the rules which are

353
00:13:33,760 --> 00:13:35,360
already there in aws and all the

354
00:13:35,360 --> 00:13:37,040
marketplace there's a lot of overlap so

355
00:13:37,040 --> 00:13:40,160
you probably you'll choose one right not

356
00:13:40,160 --> 00:13:41,360
not all

357
00:13:41,360 --> 00:13:44,240
once you have added all the rules

358
00:13:44,240 --> 00:13:45,360
so what

359
00:13:45,360 --> 00:13:48,639
aws does is each rule have conditions

360
00:13:48,639 --> 00:13:50,160
right it counts the number of conditions

361
00:13:50,160 --> 00:13:52,480
that are there and there's a limit of a

362
00:13:52,480 --> 00:13:54,720
1500 condition that you can have in your

363
00:13:54,720 --> 00:13:57,760
route uh you can i mean call

364
00:13:57,760 --> 00:14:01,600
aws to increase that for your account

365
00:14:01,600 --> 00:14:03,120
you can also add

366
00:14:03,120 --> 00:14:05,920
you know a custom rule um in this demo

367
00:14:05,920 --> 00:14:07,839
we just add a simple

368
00:14:07,839 --> 00:14:08,720
rule

369
00:14:08,720 --> 00:14:11,920
based on the headers we say that okay if

370
00:14:11,920 --> 00:14:14,959
a specific header matches a specific

371
00:14:14,959 --> 00:14:16,720
value will just allow it right or you

372
00:14:16,720 --> 00:14:19,040
can have a lot of you know in custom

373
00:14:19,040 --> 00:14:20,639
rules if you have you know something

374
00:14:20,639 --> 00:14:22,959
specific to your application then you

375
00:14:22,959 --> 00:14:25,680
can have custom rule to to be able to

376
00:14:25,680 --> 00:14:27,920
protect it so in this case you are just

377
00:14:27,920 --> 00:14:29,440
adding if the header

378
00:14:29,440 --> 00:14:31,839
is blast on and the the

379
00:14:31,839 --> 00:14:34,639
it matches the value of demo and then we

380
00:14:34,639 --> 00:14:37,600
allow the access

381
00:14:37,680 --> 00:14:39,839
so

382
00:14:41,519 --> 00:14:43,519
there you go

383
00:14:43,519 --> 00:14:44,880
uh

384
00:14:44,880 --> 00:14:46,800
so it's very easy to follow right you

385
00:14:46,800 --> 00:14:49,519
have your web acls and you have your

386
00:14:49,519 --> 00:14:53,360
rules and conditions right

387
00:14:53,360 --> 00:14:55,040
with every

388
00:14:55,040 --> 00:14:56,079
uh

389
00:14:56,079 --> 00:14:58,880
rule you have to define whether you uh

390
00:14:58,880 --> 00:15:01,680
allow block or count count is basically

391
00:15:01,680 --> 00:15:03,440
is discounting whether the rule got hit

392
00:15:03,440 --> 00:15:05,760
or not if you want to put it in like

393
00:15:05,760 --> 00:15:07,839
just a learning mode you want to see if

394
00:15:07,839 --> 00:15:11,120
it's being hit or not going to use that

395
00:15:11,120 --> 00:15:12,800
the other thing that you

396
00:15:12,800 --> 00:15:14,800
want to say is

397
00:15:14,800 --> 00:15:17,199
the rules the priority of the rules is

398
00:15:17,199 --> 00:15:19,199
the order that they are defined in so

399
00:15:19,199 --> 00:15:21,839
you can move your rules up and down it's

400
00:15:21,839 --> 00:15:23,760
different from the other providers where

401
00:15:23,760 --> 00:15:26,399
they specifically have the priority

402
00:15:26,399 --> 00:15:28,480
you know numbers but here it's just the

403
00:15:28,480 --> 00:15:29,360
order

404
00:15:29,360 --> 00:15:32,000
which i mean you can go both ways here

405
00:15:32,000 --> 00:15:34,240
it's easier to see you have it sorted

406
00:15:34,240 --> 00:15:37,040
you know first one so the other point is

407
00:15:37,040 --> 00:15:39,360
these rules are disruptive in the sense

408
00:15:39,360 --> 00:15:40,959
if you if you hit a rule which says

409
00:15:40,959 --> 00:15:43,040
allow that's it you are allowed it's not

410
00:15:43,040 --> 00:15:44,639
going to inspect the rest of the traffic

411
00:15:44,639 --> 00:15:47,199
right so and if you hit a rule so

412
00:15:47,199 --> 00:15:49,199
typically if you have your all blocking

413
00:15:49,199 --> 00:15:51,360
ones first and then you have your allows

414
00:15:51,360 --> 00:15:53,680
if you hit a rule that says deny that's

415
00:15:53,680 --> 00:15:56,160
it it's denied right so it's it's it's

416
00:15:56,160 --> 00:15:57,680
pretty much the case with other warps

417
00:15:57,680 --> 00:16:00,000
also

418
00:16:00,000 --> 00:16:02,880
uh so once you have created your

419
00:16:02,880 --> 00:16:04,560
you know

420
00:16:04,560 --> 00:16:07,519
uh i could you have your

421
00:16:07,519 --> 00:16:10,160
you have them you can have multiples in

422
00:16:10,160 --> 00:16:13,440
the list uh but you need to keep the the

423
00:16:13,440 --> 00:16:16,079
bill in mind right it's based on how

424
00:16:16,079 --> 00:16:16,880
many

425
00:16:16,880 --> 00:16:19,440
you defined and how much you're using

426
00:16:19,440 --> 00:16:23,440
bind it to to your entry points

427
00:16:23,440 --> 00:16:26,000
okay so that's good

428
00:16:26,000 --> 00:16:28,240
okay quickly what we covered over here

429
00:16:28,240 --> 00:16:29,519
again

430
00:16:29,519 --> 00:16:30,720
i can

431
00:16:30,720 --> 00:16:33,360
have rules have conditions some of the

432
00:16:33,360 --> 00:16:35,279
features not going to cover everything

433
00:16:35,279 --> 00:16:37,839
so news bot control and then you can the

434
00:16:37,839 --> 00:16:39,440
other thing is you can group right you

435
00:16:39,440 --> 00:16:41,120
can have predefined

436
00:16:41,120 --> 00:16:43,199
rules that you can group together just a

437
00:16:43,199 --> 00:16:46,240
way of easily managing it

438
00:16:46,240 --> 00:16:48,560
rules from marketplace it's it's pretty

439
00:16:48,560 --> 00:16:50,800
powerful and then you have the waff

440
00:16:50,800 --> 00:16:53,279
security automation is doing off is not

441
00:16:53,279 --> 00:16:55,519
easy right how you deploy it so

442
00:16:55,519 --> 00:16:58,160
aws has a way where you can

443
00:16:58,160 --> 00:17:01,199
uh have automation for your deployment

444
00:17:01,199 --> 00:17:03,199
like with warp so that is something

445
00:17:03,199 --> 00:17:07,199
which is which is actually good

446
00:17:07,280 --> 00:17:09,678
so next

447
00:17:10,240 --> 00:17:13,280
uh so similar to the aws we also

448
00:17:13,280 --> 00:17:15,679
recorded a demo video for azure wolf so

449
00:17:15,679 --> 00:17:17,760
i'm quickly going to go over that

450
00:17:17,760 --> 00:17:19,280
so essentially what you would do is you

451
00:17:19,280 --> 00:17:21,280
would add a waff resource from azure

452
00:17:21,280 --> 00:17:22,240
portal

453
00:17:22,240 --> 00:17:24,079
and once you add that then you would

454
00:17:24,079 --> 00:17:25,280
define

455
00:17:25,280 --> 00:17:27,599
for which backend resource of azure you

456
00:17:27,599 --> 00:17:29,760
want to apply that policy

457
00:17:29,760 --> 00:17:31,600
so you can apply that wolf policy for

458
00:17:31,600 --> 00:17:33,440
your front door uh your application

459
00:17:33,440 --> 00:17:36,799
gateway or for the azure cdn uh so so

460
00:17:36,799 --> 00:17:38,960
that was your friend or not not for our

461
00:17:38,960 --> 00:17:40,080
houses

462
00:17:40,080 --> 00:17:42,799
uh so so once you do that in our in my

463
00:17:42,799 --> 00:17:44,160
case i'm gonna do it for application

464
00:17:44,160 --> 00:17:46,720
gateway uh once i do that next step is

465
00:17:46,720 --> 00:17:49,200
to pick the resource groups as well as

466
00:17:49,200 --> 00:17:51,679
the the name over there for that

467
00:17:51,679 --> 00:17:53,679
next i can choose between whether i want

468
00:17:53,679 --> 00:17:54,799
to enable

469
00:17:54,799 --> 00:17:56,960
the walk policy right away or later on

470
00:17:56,960 --> 00:17:58,720
and i can also choose between a

471
00:17:58,720 --> 00:18:00,799
prevention versus detection mode

472
00:18:00,799 --> 00:18:02,799
next step would be to pick the manage

473
00:18:02,799 --> 00:18:04,640
rule sets here i can choose between

474
00:18:04,640 --> 00:18:06,640
different os versions

475
00:18:06,640 --> 00:18:09,360
and also i can pick the bot detection

476
00:18:09,360 --> 00:18:11,760
rule set as well so that one is also

477
00:18:11,760 --> 00:18:14,160
interesting because in this one azure

478
00:18:14,160 --> 00:18:16,400
maintains a list of malicious ips and

479
00:18:16,400 --> 00:18:18,320
then based on that you can block a

480
00:18:18,320 --> 00:18:20,720
request to to your application

481
00:18:20,720 --> 00:18:22,880
and the list of ips is not static it's

482
00:18:22,880 --> 00:18:24,720
keep on being fed by the microsoft

483
00:18:24,720 --> 00:18:27,440
thread security analysis tool and based

484
00:18:27,440 --> 00:18:30,000
on that you can you can use it

485
00:18:30,000 --> 00:18:31,520
once you have done that you can

486
00:18:31,520 --> 00:18:33,440
explicitly enable disable individual

487
00:18:33,440 --> 00:18:35,520
rules if you want to uh you can disable

488
00:18:35,520 --> 00:18:38,240
certain rules and then you can use them

489
00:18:38,240 --> 00:18:40,799
as a next step you can exclude certain

490
00:18:40,799 --> 00:18:42,400
parts of your request

491
00:18:42,400 --> 00:18:44,080
from the work

492
00:18:44,080 --> 00:18:46,080
the execution like you can say if this

493
00:18:46,080 --> 00:18:47,280
particular

494
00:18:47,280 --> 00:18:49,600
cookies or request headers or part of

495
00:18:49,600 --> 00:18:51,440
the request bodies you can expressly

496
00:18:51,440 --> 00:18:52,880
exclude them saying okay for those i

497
00:18:52,880 --> 00:18:54,400
don't want to apply the of tools at all

498
00:18:54,400 --> 00:18:56,559
so if you want you can do that and you

499
00:18:56,559 --> 00:18:59,200
can also adjust your max body size as

500
00:18:59,200 --> 00:19:01,200
well as the the file size limit you can

501
00:19:01,200 --> 00:19:02,799
adjust it over here

502
00:19:02,799 --> 00:19:04,799
once that is done on the next screen you

503
00:19:04,799 --> 00:19:06,240
would be able to

504
00:19:06,240 --> 00:19:08,640
add custom rules uh there are different

505
00:19:08,640 --> 00:19:11,360
options available in the custom rules

506
00:19:11,360 --> 00:19:13,760
like you can see

507
00:19:13,760 --> 00:19:16,160
if a request is coming outside this ip

508
00:19:16,160 --> 00:19:18,799
range then block that request you can do

509
00:19:18,799 --> 00:19:19,600
that

510
00:19:19,600 --> 00:19:21,760
you can also add custom rules based on

511
00:19:21,760 --> 00:19:24,799
the different parts of your request like

512
00:19:24,799 --> 00:19:27,600
you can say if the

513
00:19:27,600 --> 00:19:30,320
if the the parameter is part of this

514
00:19:30,320 --> 00:19:32,799
request body your cookie your header

515
00:19:32,799 --> 00:19:35,440
your request uris based on those things

516
00:19:35,440 --> 00:19:37,440
uh you can depending on if it's an

517
00:19:37,440 --> 00:19:39,679
integer value versus string value they

518
00:19:39,679 --> 00:19:41,679
apply different operators over here

519
00:19:41,679 --> 00:19:43,440
where you can pick and choose what kind

520
00:19:43,440 --> 00:19:46,240
of value you want to look for and then

521
00:19:46,240 --> 00:19:48,480
based on that you can allow or reject

522
00:19:48,480 --> 00:19:49,840
the traffic over there

523
00:19:49,840 --> 00:19:51,760
based on that another option is for

524
00:19:51,760 --> 00:19:53,120
geolocation

525
00:19:53,120 --> 00:19:55,200
you can add a rule saying any request

526
00:19:55,200 --> 00:19:58,000
outside us completely block that uh one

527
00:19:58,000 --> 00:19:59,120
important thing to highlight is the

528
00:19:59,120 --> 00:20:01,280
priority as najam was saying earlier in

529
00:20:01,280 --> 00:20:04,400
this case the priority is the ex the

530
00:20:04,400 --> 00:20:07,520
execution order of this rule so the uh

531
00:20:07,520 --> 00:20:09,440
the lower the priority that means the

532
00:20:09,440 --> 00:20:11,039
earlier that rule will be executed so

533
00:20:11,039 --> 00:20:12,240
that is something important to keep in

534
00:20:12,240 --> 00:20:14,480
mind that uh when you're adding custom

535
00:20:14,480 --> 00:20:16,640
rules uh refer to this priority field

536
00:20:16,640 --> 00:20:18,080
and add the recording

537
00:20:18,080 --> 00:20:20,080
so in this case i said uh i'm adding the

538
00:20:20,080 --> 00:20:22,799
rule here to say if the request is uh

539
00:20:22,799 --> 00:20:24,559
outside yes block that

540
00:20:24,559 --> 00:20:26,559
once i've done the custom rules next

541
00:20:26,559 --> 00:20:29,600
step is basically link these work policy

542
00:20:29,600 --> 00:20:31,760
to your backend component uh which is

543
00:20:31,760 --> 00:20:33,280
the which could be the whole edition

544
00:20:33,280 --> 00:20:35,280
gateway you can apply this policy for

545
00:20:35,280 --> 00:20:37,039
the whole application gateway or to one

546
00:20:37,039 --> 00:20:39,360
of its http listener or you can also

547
00:20:39,360 --> 00:20:41,360
apply that to particular route so in my

548
00:20:41,360 --> 00:20:44,080
case i i added the full uh that to for

549
00:20:44,080 --> 00:20:46,159
the whole application gateway and next

550
00:20:46,159 --> 00:20:48,400
step is to basically just create that

551
00:20:48,400 --> 00:20:50,799
uh once you do it then the

552
00:20:50,799 --> 00:20:52,159
azure would go ahead and set up the

553
00:20:52,159 --> 00:20:54,799
policy and and apply the the evolve

554
00:20:54,799 --> 00:20:56,720
based on your settings

555
00:20:56,720 --> 00:20:58,400
and then you can use that it takes

556
00:20:58,400 --> 00:21:00,159
couple of minutes so i didn't show you

557
00:21:00,159 --> 00:21:04,240
the that part uh just discard it short

558
00:21:04,240 --> 00:21:06,400
so now in terms of just to summarize

559
00:21:06,400 --> 00:21:08,159
what what the demo covered essentially

560
00:21:08,159 --> 00:21:11,039
is uh essentially the first three points

561
00:21:11,039 --> 00:21:13,280
uh so not gonna repeat that but last

562
00:21:13,280 --> 00:21:14,799
part which i didn't cover in the demo

563
00:21:14,799 --> 00:21:18,000
video was monitoring aspects of it so in

564
00:21:18,000 --> 00:21:19,600
the monitoring

565
00:21:19,600 --> 00:21:21,600
the good thing about azure vault is

566
00:21:21,600 --> 00:21:23,360
it's very well integrated with the with

567
00:21:23,360 --> 00:21:25,440
the azure monitoring system and you can

568
00:21:25,440 --> 00:21:28,799
track the alerts and monitor the trends

569
00:21:28,799 --> 00:21:30,480
based on that and that that that

570
00:21:30,480 --> 00:21:33,039
basically monitoring aspect is very good

571
00:21:33,039 --> 00:21:34,240
for a job

572
00:21:34,240 --> 00:21:36,799
uh and also it integrates with the azure

573
00:21:36,799 --> 00:21:38,400
security center which essentially

574
00:21:38,400 --> 00:21:40,720
provides you the overall security uh

575
00:21:40,720 --> 00:21:42,640
assessment of the your azure resources

576
00:21:42,640 --> 00:21:44,000
so it's it's very well integrated with

577
00:21:44,000 --> 00:21:47,300
that so definitely helps over there

578
00:21:47,300 --> 00:21:50,379
[Music]

579
00:21:53,520 --> 00:21:56,159
next we're going to look at

580
00:21:56,159 --> 00:21:57,840
if you're going to look at uh cloud

581
00:21:57,840 --> 00:22:01,280
armor uh so cloud armor is is the

582
00:22:01,280 --> 00:22:05,600
gcp off you know that named it cloud

583
00:22:06,159 --> 00:22:08,240
google wanted to keep it different right

584
00:22:08,240 --> 00:22:11,440
so here you have i mean in in in gcp you

585
00:22:11,440 --> 00:22:13,120
have your policies

586
00:22:13,120 --> 00:22:14,880
that define

587
00:22:14,880 --> 00:22:15,760
your

588
00:22:15,760 --> 00:22:17,440
rules right

589
00:22:17,440 --> 00:22:18,240
so

590
00:22:18,240 --> 00:22:20,080
the portal is it's a pain to add

591
00:22:20,080 --> 00:22:21,760
policies from the portal so for this

592
00:22:21,760 --> 00:22:24,080
demo what i did was created a script

593
00:22:24,080 --> 00:22:26,159
makes it easier to automate so that is

594
00:22:26,159 --> 00:22:27,120
good

595
00:22:27,120 --> 00:22:28,960
you know with

596
00:22:28,960 --> 00:22:31,200
gcp you can use the api you can use

597
00:22:31,200 --> 00:22:33,440
their gcloud command to easily automate

598
00:22:33,440 --> 00:22:35,440
right so here what i'm doing is just

599
00:22:35,440 --> 00:22:37,280
creating a policy and then we will go

600
00:22:37,280 --> 00:22:40,320
over the rules in that policy so just to

601
00:22:40,320 --> 00:22:42,320
show over here that you can

602
00:22:42,320 --> 00:22:44,720
you know create the policy from from the

603
00:22:44,720 --> 00:22:46,320
the portal as well

604
00:22:46,320 --> 00:22:47,919
um so

605
00:22:47,919 --> 00:22:48,960
you have your

606
00:22:48,960 --> 00:22:50,960
policy types what what you want to do

607
00:22:50,960 --> 00:22:54,400
with this rule allow or deny and then

608
00:22:54,400 --> 00:22:58,240
you have a lot of buttons to click

609
00:22:58,240 --> 00:23:01,039
so basic mode advanced mode so advanced

610
00:23:01,039 --> 00:23:03,280
mode is is something where you go and

611
00:23:03,280 --> 00:23:05,360
add your custom rules or predefined

612
00:23:05,360 --> 00:23:06,880
rules

613
00:23:06,880 --> 00:23:09,440
the documentation is okay but then still

614
00:23:09,440 --> 00:23:12,080
you need to know so aws if you compare

615
00:23:12,080 --> 00:23:14,320
with aws you know their flow was very

616
00:23:14,320 --> 00:23:16,000
very easy to someone who doesn't know

617
00:23:16,000 --> 00:23:17,360
the details

618
00:23:17,360 --> 00:23:19,600
still could do it but here you have to

619
00:23:19,600 --> 00:23:20,960
know what you're doing right otherwise

620
00:23:20,960 --> 00:23:22,880
it's it's not easy

621
00:23:22,880 --> 00:23:26,080
so we just created a a demo policy for

622
00:23:26,080 --> 00:23:27,520
this demo

623
00:23:27,520 --> 00:23:31,120
we'll go over um quickly go over that

624
00:23:31,120 --> 00:23:32,159
so

625
00:23:32,159 --> 00:23:34,159
first thing that we see over here again

626
00:23:34,159 --> 00:23:36,159
as moin pointed out here to on the right

627
00:23:36,159 --> 00:23:37,840
hand side you see the priority column

628
00:23:37,840 --> 00:23:39,919
right so the priority is the lowest

629
00:23:39,919 --> 00:23:42,080
number will hit first the rules are

630
00:23:42,080 --> 00:23:44,240
disruptive so if the first one gets hit

631
00:23:44,240 --> 00:23:45,919
nothing else so if there's someone who's

632
00:23:45,919 --> 00:23:47,679
trying to access slash admin it's going

633
00:23:47,679 --> 00:23:48,880
to be blocked because there's a rule

634
00:23:48,880 --> 00:23:51,679
which says to block slash admin if you

635
00:23:51,679 --> 00:23:54,240
want to allow access from your ip and

636
00:23:54,240 --> 00:23:56,480
not go through all the evaluation you

637
00:23:56,480 --> 00:23:58,400
could do that with and maybe the custom

638
00:23:58,400 --> 00:24:00,720
rule to you know that for the

639
00:24:00,720 --> 00:24:02,720
ip you're saying that if it comes from

640
00:24:02,720 --> 00:24:04,960
this ip allow everything

641
00:24:04,960 --> 00:24:07,520
then the rest is basically adding the

642
00:24:07,520 --> 00:24:09,120
core rule sets right so there's a

643
00:24:09,120 --> 00:24:11,600
pre-configured rule set

644
00:24:11,600 --> 00:24:14,960
that are available in gcp you can add

645
00:24:14,960 --> 00:24:17,520
them so that's blocking against local

646
00:24:17,520 --> 00:24:20,880
file inclusion or remote code execution

647
00:24:20,880 --> 00:24:22,880
attack blocking scanners blocking

648
00:24:22,880 --> 00:24:24,559
protocol attacks

649
00:24:24,559 --> 00:24:26,720
you can use the gcloud command

650
00:24:26,720 --> 00:24:28,400
unfortunately from their port and it's

651
00:24:28,400 --> 00:24:30,799
hard to see what all pre-configured

652
00:24:30,799 --> 00:24:32,880
rules are supported so you need to use

653
00:24:32,880 --> 00:24:35,440
the gcloud command to get all the list

654
00:24:35,440 --> 00:24:37,520
of the different uh you know

655
00:24:37,520 --> 00:24:38,880
pre-configured

656
00:24:38,880 --> 00:24:41,120
rules so recording for rules mostly they

657
00:24:41,120 --> 00:24:43,919
are core rule sets or there are some

658
00:24:43,919 --> 00:24:46,400
more now they are adding so there's

659
00:24:46,400 --> 00:24:48,640
constant work that is happening over

660
00:24:48,640 --> 00:24:50,480
there

661
00:24:50,480 --> 00:24:52,400
and finally your default action you

662
00:24:52,400 --> 00:24:54,000
define you know what you want to do

663
00:24:54,000 --> 00:24:56,720
whether to allow a demand

664
00:24:56,720 --> 00:24:58,880
as with everything else you have to add

665
00:24:58,880 --> 00:25:00,640
a target where this policy will be

666
00:25:00,640 --> 00:25:03,520
applied to right uh the target could be

667
00:25:03,520 --> 00:25:07,200
your load balancers

668
00:25:07,600 --> 00:25:10,640
gke ingress right or any other ingress

669
00:25:10,640 --> 00:25:12,799
so that's basically your

670
00:25:12,799 --> 00:25:15,840
entry point that you want to

671
00:25:15,840 --> 00:25:17,200
to

672
00:25:17,200 --> 00:25:19,600
protect

673
00:25:21,919 --> 00:25:24,080
so quickly we covered the policy so i'm

674
00:25:24,080 --> 00:25:27,120
not going to go over there a couple of

675
00:25:27,120 --> 00:25:28,960
things that we need so

676
00:25:28,960 --> 00:25:31,600
gcp or google does provide is managed

677
00:25:31,600 --> 00:25:33,919
protection where they will manage the

678
00:25:33,919 --> 00:25:37,919
the for you there's two layers of that

679
00:25:37,919 --> 00:25:40,080
the other is adaptive protection which

680
00:25:40,080 --> 00:25:42,799
is something new we haven't tried it or

681
00:25:42,799 --> 00:25:45,600
used it it's i think it became ga very

682
00:25:45,600 --> 00:25:48,240
very recently uh from

683
00:25:48,240 --> 00:25:50,960
what we have read is it's using machine

684
00:25:50,960 --> 00:25:54,080
learning to learn your traffic and based

685
00:25:54,080 --> 00:25:56,480
on that it can take actions there may be

686
00:25:56,480 --> 00:25:57,919
some configuration we haven't really

687
00:25:57,919 --> 00:26:00,720
tried it so we don't know the details of

688
00:26:00,720 --> 00:26:04,480
how good it is but i mean uh the idea is

689
00:26:04,480 --> 00:26:06,400
to learn the

690
00:26:06,400 --> 00:26:08,880
the the pattern that is there and from

691
00:26:08,880 --> 00:26:12,400
that then you have the option to to

692
00:26:12,400 --> 00:26:14,480
either you know take action block it

693
00:26:14,480 --> 00:26:16,799
allow it or whatever or just you know

694
00:26:16,799 --> 00:26:19,279
log it

695
00:26:20,159 --> 00:26:22,400
okay

696
00:26:23,440 --> 00:26:24,480
okay

697
00:26:24,480 --> 00:26:26,480
so uh we looked at all the cloud service

698
00:26:26,480 --> 00:26:28,480
provider options some of those uh so

699
00:26:28,480 --> 00:26:29,840
next we want to talk about the some of

700
00:26:29,840 --> 00:26:33,039
the self-managed options um and

701
00:26:33,039 --> 00:26:35,600
the using mod security with apache is

702
00:26:35,600 --> 00:26:36,880
one of the most common scenario that

703
00:26:36,880 --> 00:26:38,400
you'll come across

704
00:26:38,400 --> 00:26:40,480
so what we want to do is i want to give

705
00:26:40,480 --> 00:26:42,159
you a quick overview of the steps you

706
00:26:42,159 --> 00:26:44,080
would need to perform to set up mod

707
00:26:44,080 --> 00:26:47,600
security with apache uh in in my slides

708
00:26:47,600 --> 00:26:49,840
we the instructions are based on debian

709
00:26:49,840 --> 00:26:51,919
but again the purpose is not to give you

710
00:26:51,919 --> 00:26:53,760
the exact instructions uh they are very

711
00:26:53,760 --> 00:26:55,600
similar on the other versions as well

712
00:26:55,600 --> 00:26:57,120
mainly to give you the high level

713
00:26:57,120 --> 00:26:58,640
overview what steps you need to take

714
00:26:58,640 --> 00:27:00,640
just to just to make you aware of that

715
00:27:00,640 --> 00:27:02,000
so what you need to do is first thing

716
00:27:02,000 --> 00:27:03,440
you need to install the mod security on

717
00:27:03,440 --> 00:27:07,120
your uh for apache on your machine

718
00:27:07,120 --> 00:27:08,880
and then you need to configure mod

719
00:27:08,880 --> 00:27:10,799
security and for that uh you can use the

720
00:27:10,799 --> 00:27:12,320
recommended configurations provided

721
00:27:12,320 --> 00:27:15,200
already uh as is but just there is one

722
00:27:15,200 --> 00:27:17,200
thing you need to be aware of by default

723
00:27:17,200 --> 00:27:19,120
those configurations are in detection

724
00:27:19,120 --> 00:27:20,880
only mode so you need to change the

725
00:27:20,880 --> 00:27:23,279
direct sectoral engine to on

726
00:27:23,279 --> 00:27:25,760
to make it uh basically uh in prevention

727
00:27:25,760 --> 00:27:28,399
mode so you need to do that change

728
00:27:28,399 --> 00:27:30,080
once that is done next step you need to

729
00:27:30,080 --> 00:27:32,240
do is you need to download the code rule

730
00:27:32,240 --> 00:27:35,039
set from spider labs you can get those

731
00:27:35,039 --> 00:27:37,600
uh and once you get uh download them you

732
00:27:37,600 --> 00:27:39,520
can you need to set up the cr instead of

733
00:27:39,520 --> 00:27:41,360
file uh and again you can use the

734
00:27:41,360 --> 00:27:43,039
provided file as a reference and you can

735
00:27:43,039 --> 00:27:44,559
tweak that based on your need there are

736
00:27:44,559 --> 00:27:46,480
quite a few rules over there most quite

737
00:27:46,480 --> 00:27:49,360
a few are commented out and they explain

738
00:27:49,360 --> 00:27:51,120
for each rules okay this rule does this

739
00:27:51,120 --> 00:27:52,799
so based on your needs you can adjust

740
00:27:52,799 --> 00:27:54,399
that

741
00:27:54,399 --> 00:27:56,159
and then once that is done you would

742
00:27:56,159 --> 00:27:57,279
update your apache security

743
00:27:57,279 --> 00:27:59,600
configuration to add reference for your

744
00:27:59,600 --> 00:28:02,640
crs setup file as well as the other

745
00:28:02,640 --> 00:28:04,559
rules which you just downloaded from the

746
00:28:04,559 --> 00:28:06,480
spyder labs

747
00:28:06,480 --> 00:28:08,880
so quick recap so far what we have done

748
00:28:08,880 --> 00:28:10,080
is we have just installed the mod

749
00:28:10,080 --> 00:28:13,360
security and we have set up the apache

750
00:28:13,360 --> 00:28:14,880
to use the mod security configurations

751
00:28:14,880 --> 00:28:16,480
as well as the crs

752
00:28:16,480 --> 00:28:18,720
rule set basically

753
00:28:18,720 --> 00:28:20,640
and next if you want you can add some

754
00:28:20,640 --> 00:28:23,120
custom rules based on your requirements

755
00:28:23,120 --> 00:28:24,960
uh once that is done

756
00:28:24,960 --> 00:28:26,480
you can test your configuration by

757
00:28:26,480 --> 00:28:28,240
sending a curl request to your apache

758
00:28:28,240 --> 00:28:30,399
server with a script injected in that

759
00:28:30,399 --> 00:28:31,679
and if everything was configured

760
00:28:31,679 --> 00:28:32,960
properly

761
00:28:32,960 --> 00:28:35,679
the server should return your 403 back

762
00:28:35,679 --> 00:28:37,919
as an error code and in that case and

763
00:28:37,919 --> 00:28:39,039
you can obviously look at the more

764
00:28:39,039 --> 00:28:41,200
details in the apache logs if that

765
00:28:41,200 --> 00:28:42,640
happens that means the mod security is

766
00:28:42,640 --> 00:28:44,320
configured properly and it's working

767
00:28:44,320 --> 00:28:45,520
fine for you

768
00:28:45,520 --> 00:28:47,840
so again the purpose was to just to give

769
00:28:47,840 --> 00:28:49,360
you a very high level overview of the

770
00:28:49,360 --> 00:28:50,799
steps what you need to perform to set up

771
00:28:50,799 --> 00:28:54,159
that uh in apache being the most common

772
00:28:54,159 --> 00:28:58,480
scenario as i said uh the next one is uh

773
00:28:58,480 --> 00:29:00,000
nginx again

774
00:29:00,000 --> 00:29:02,559
also very common uh scenario we see in

775
00:29:02,559 --> 00:29:04,799
the industry being used uh but again i

776
00:29:04,799 --> 00:29:06,240
don't want to

777
00:29:06,240 --> 00:29:08,399
repeat all those slides again for nginx

778
00:29:08,399 --> 00:29:10,159
don't want to bore you further

779
00:29:10,159 --> 00:29:12,159
so we'll we'll just leave you with some

780
00:29:12,159 --> 00:29:14,640
of the links uh so the as i said the

781
00:29:14,640 --> 00:29:16,960
steps are very similar to apache the

782
00:29:16,960 --> 00:29:19,520
only difference is uh for nginx you have

783
00:29:19,520 --> 00:29:21,279
two options uh of installing mod

784
00:29:21,279 --> 00:29:22,320
security

785
00:29:22,320 --> 00:29:24,399
one is if you are using engine x plus uh

786
00:29:24,399 --> 00:29:26,000
then there is an engineering smart

787
00:29:26,000 --> 00:29:28,559
security warf dynamic module you can use

788
00:29:28,559 --> 00:29:31,120
that which is as an additional cost you

789
00:29:31,120 --> 00:29:32,640
can use that

790
00:29:32,640 --> 00:29:35,039
or you can build the mod security on

791
00:29:35,039 --> 00:29:37,200
your own using the nginx connector and

792
00:29:37,200 --> 00:29:38,720
then you can configure that with your

793
00:29:38,720 --> 00:29:40,960
nginx server over there

794
00:29:40,960 --> 00:29:42,559
and again i added the links for both of

795
00:29:42,559 --> 00:29:44,240
those so take a look at that if you need

796
00:29:44,240 --> 00:29:45,200
to

797
00:29:45,200 --> 00:29:46,880
uh and once you have the mod security

798
00:29:46,880 --> 00:29:49,120
configured with nginx uh

799
00:29:49,120 --> 00:29:50,960
if you want to enable mod security for

800
00:29:50,960 --> 00:29:52,159
your particular

801
00:29:52,159 --> 00:29:53,840
site the only thing you need to do is

802
00:29:53,840 --> 00:29:56,159
basically add those two lines to enable

803
00:29:56,159 --> 00:29:57,760
mod security for your particular site

804
00:29:57,760 --> 00:29:58,960
over there

805
00:29:58,960 --> 00:29:59,919
so

806
00:29:59,919 --> 00:30:00,960
uh

807
00:30:00,960 --> 00:30:03,360
now the next thing i want to cover is

808
00:30:03,360 --> 00:30:04,399
that's a

809
00:30:04,399 --> 00:30:06,720
pretty uncommon stereo but still you

810
00:30:06,720 --> 00:30:09,200
sometime you need that so for all the

811
00:30:09,200 --> 00:30:10,640
scenarios we covered whether it was

812
00:30:10,640 --> 00:30:12,640
cloud service provider options or the

813
00:30:12,640 --> 00:30:14,399
self-managed ones they were the

814
00:30:14,399 --> 00:30:16,240
standards where we were using warf as

815
00:30:16,240 --> 00:30:18,880
the reverse proxy so the walk was in

816
00:30:18,880 --> 00:30:22,480
between your clients and the uh the

817
00:30:22,480 --> 00:30:23,679
application

818
00:30:23,679 --> 00:30:26,080
but in this case

819
00:30:26,080 --> 00:30:27,679
you may have a requirement

820
00:30:27,679 --> 00:30:28,480
where

821
00:30:28,480 --> 00:30:30,480
the the

822
00:30:30,480 --> 00:30:32,559
where you need to support the mutual tls

823
00:30:32,559 --> 00:30:33,760
authentication

824
00:30:33,760 --> 00:30:35,679
in that case your tls needs to terminate

825
00:30:35,679 --> 00:30:37,279
at your application and you cannot have

826
00:30:37,279 --> 00:30:40,000
the warf in between over there so how do

827
00:30:40,000 --> 00:30:41,760
you handle those scenarios we talked

828
00:30:41,760 --> 00:30:44,399
about all the benefits of warf now in

829
00:30:44,399 --> 00:30:46,240
this case you cannot use warp so how do

830
00:30:46,240 --> 00:30:47,440
you address that

831
00:30:47,440 --> 00:30:49,120
you still want to take benefit of all

832
00:30:49,120 --> 00:30:51,120
the mod security and all the off

833
00:30:51,120 --> 00:30:52,240
features

834
00:30:52,240 --> 00:30:53,279
so

835
00:30:53,279 --> 00:30:54,960
as i said it's not a very common stereo

836
00:30:54,960 --> 00:30:57,039
but it's a scenario it happens uh

837
00:30:57,039 --> 00:30:59,200
happened with us so you know

838
00:30:59,200 --> 00:31:01,440
so in that case the good thing about is

839
00:31:01,440 --> 00:31:03,360
you can embed more security within your

840
00:31:03,360 --> 00:31:04,559
application

841
00:31:04,559 --> 00:31:06,240
and recently especially with the mod

842
00:31:06,240 --> 00:31:08,320
security 3.x

843
00:31:08,320 --> 00:31:10,240
the they did a very extreme job of

844
00:31:10,240 --> 00:31:11,840
re-architecting the mod security of

845
00:31:11,840 --> 00:31:13,679
separating out the cores from the

846
00:31:13,679 --> 00:31:15,440
connectors the connectors are

847
00:31:15,440 --> 00:31:17,440
essentially the uh the communication

848
00:31:17,440 --> 00:31:18,480
pipeline

849
00:31:18,480 --> 00:31:21,600
between the app server and mod security

850
00:31:21,600 --> 00:31:23,600
so you can use that to embed with any

851
00:31:23,600 --> 00:31:25,120
application server which supports the

852
00:31:25,120 --> 00:31:27,279
connectors for that

853
00:31:27,279 --> 00:31:29,120
so right now on the spyder lab get

854
00:31:29,120 --> 00:31:30,240
positive they already have the

855
00:31:30,240 --> 00:31:32,960
connectors available for nginx apache

856
00:31:32,960 --> 00:31:35,840
and python and we and there are few

857
00:31:35,840 --> 00:31:37,200
others also available like the one we

858
00:31:37,200 --> 00:31:39,519
used recently was for node.js

859
00:31:39,519 --> 00:31:41,360
uh and that

860
00:31:41,360 --> 00:31:43,279
connector we used for one of the park we

861
00:31:43,279 --> 00:31:45,200
use for pica authentication

862
00:31:45,200 --> 00:31:47,360
and it worked very well we were able to

863
00:31:47,360 --> 00:31:49,039
integrate with mod security very easily

864
00:31:49,039 --> 00:31:51,039
with our application we were able to

865
00:31:51,039 --> 00:31:53,600
integrate with the us rules as well as

866
00:31:53,600 --> 00:31:55,200
we were able to define custom rules over

867
00:31:55,200 --> 00:31:58,000
there so and it was not it was

868
00:31:58,000 --> 00:31:59,519
at the end it was not that difficult to

869
00:31:59,519 --> 00:32:01,840
do so the important thing is what i want

870
00:32:01,840 --> 00:32:03,679
to highlight here is

871
00:32:03,679 --> 00:32:06,159
even though this uh there's an uncommon

872
00:32:06,159 --> 00:32:08,799
scenario but keep that at back of your

873
00:32:08,799 --> 00:32:11,279
mind if you ever run into those kind of

874
00:32:11,279 --> 00:32:13,039
scenarios where you need to support a

875
00:32:13,039 --> 00:32:15,360
mutual tls authentication

876
00:32:15,360 --> 00:32:17,200
then you can still embed dwarf and get

877
00:32:17,200 --> 00:32:20,799
benefit out of that using this approach

878
00:32:20,799 --> 00:32:22,960
so we we talked about the cloud service

879
00:32:22,960 --> 00:32:24,880
provider solutions as well as the

880
00:32:24,880 --> 00:32:26,799
self-managed ones

881
00:32:26,799 --> 00:32:29,440
but there are some major differences and

882
00:32:29,440 --> 00:32:30,640
and we'll talk about some of the

883
00:32:30,640 --> 00:32:32,159
comparisons specifically in the next

884
00:32:32,159 --> 00:32:34,480
slides but here i want to highlight some

885
00:32:34,480 --> 00:32:35,919
of the challenges

886
00:32:35,919 --> 00:32:37,120
which you would run into with

887
00:32:37,120 --> 00:32:39,840
self-managed warps so depending on your

888
00:32:39,840 --> 00:32:41,600
team uh

889
00:32:41,600 --> 00:32:43,600
capacity and your deployment structure

890
00:32:43,600 --> 00:32:45,200
how much work you need to do you may

891
00:32:45,200 --> 00:32:46,960
need to filter that in as well

892
00:32:46,960 --> 00:32:48,880
so for self-managed uh so the cloud

893
00:32:48,880 --> 00:32:51,039
service fires the good thing about them

894
00:32:51,039 --> 00:32:53,600
you they give you a very fancy ui or

895
00:32:53,600 --> 00:32:55,840
command line tools you set up the work

896
00:32:55,840 --> 00:32:58,480
policy over there and after that they go

897
00:32:58,480 --> 00:33:00,000
behind the scenes set up everything for

898
00:33:00,000 --> 00:33:02,159
you and you can use that right away but

899
00:33:02,159 --> 00:33:04,399
for self management obviously the onus

900
00:33:04,399 --> 00:33:06,559
is on us we need to go and deploy that

901
00:33:06,559 --> 00:33:08,720
on our own infrastructure

902
00:33:08,720 --> 00:33:11,120
whether it's vms or kubernetes or

903
00:33:11,120 --> 00:33:12,640
openshift in case it's a dockerized

904
00:33:12,640 --> 00:33:14,159
dwarf again there are some options

905
00:33:14,159 --> 00:33:15,519
available for that

906
00:33:15,519 --> 00:33:17,200
so you can use it

907
00:33:17,200 --> 00:33:19,440
then also the security hardening of

908
00:33:19,440 --> 00:33:21,279
the earlier example that najm was giving

909
00:33:21,279 --> 00:33:22,799
about the hot patching

910
00:33:22,799 --> 00:33:24,640
again in this case we are responsible to

911
00:33:24,640 --> 00:33:26,000
do that if there is a open ssl

912
00:33:26,000 --> 00:33:28,240
vulnerability you need to go through all

913
00:33:28,240 --> 00:33:30,000
your deployments and patch that

914
00:33:30,000 --> 00:33:32,159
individually over there

915
00:33:32,159 --> 00:33:35,360
similarly the uh the another good thing

916
00:33:35,360 --> 00:33:37,840
i like about the cloud service

917
00:33:37,840 --> 00:33:39,519
they give you the

918
00:33:39,519 --> 00:33:40,960
production ready highly available

919
00:33:40,960 --> 00:33:42,399
solution out of the box in matter of

920
00:33:42,399 --> 00:33:44,240
clicks you don't need to do much but in

921
00:33:44,240 --> 00:33:47,039
this case it's again on us we need to

922
00:33:47,039 --> 00:33:49,200
have a highly available solution for

923
00:33:49,200 --> 00:33:51,200
your customers what typically it means

924
00:33:51,200 --> 00:33:52,880
you need to deploy wolf across multiple

925
00:33:52,880 --> 00:33:55,120
vms and then have some load balance in

926
00:33:55,120 --> 00:33:56,559
front of that so that you can doubt the

927
00:33:56,559 --> 00:33:58,399
traffic acro accordingly

928
00:33:58,399 --> 00:34:00,320
that leads to the next uh challenge over

929
00:34:00,320 --> 00:34:01,600
there which is

930
00:34:01,600 --> 00:34:02,480
the

931
00:34:02,480 --> 00:34:04,559
the self-managed warps

932
00:34:04,559 --> 00:34:06,559
there is hardly a way to do central

933
00:34:06,559 --> 00:34:08,879
management of that if you need to patch

934
00:34:08,879 --> 00:34:10,800
anything for the wolf or

935
00:34:10,800 --> 00:34:13,760
change rules upgrade stuff you need to

936
00:34:13,760 --> 00:34:16,480
individually go to each of the vm and

937
00:34:16,480 --> 00:34:18,159
apply those changes obviously you can

938
00:34:18,159 --> 00:34:19,599
automate that right there are tools

939
00:34:19,599 --> 00:34:21,440
available for it but there's nothing

940
00:34:21,440 --> 00:34:23,599
available out of the box you need to do

941
00:34:23,599 --> 00:34:24,960
something to take care of that either

942
00:34:24,960 --> 00:34:26,320
keep on doing manually or do some

943
00:34:26,320 --> 00:34:28,399
automation somehow

944
00:34:28,399 --> 00:34:30,079
again the monitoring

945
00:34:30,079 --> 00:34:32,239
there is nothing again available out of

946
00:34:32,239 --> 00:34:34,239
the box there are logs available but you

947
00:34:34,239 --> 00:34:36,079
need to hook it up with the with your

948
00:34:36,079 --> 00:34:38,960
existing monitoring system and

949
00:34:38,960 --> 00:34:41,119
implement some listeners or

950
00:34:41,119 --> 00:34:43,199
alerts based on top of that

951
00:34:43,199 --> 00:34:46,480
uh last thing but not the least is mod

952
00:34:46,480 --> 00:34:48,800
security is uh to me it's it's not

953
00:34:48,800 --> 00:34:51,839
simple it's it's complex uh and if you

954
00:34:51,839 --> 00:34:54,399
want to do self-managed walk you

955
00:34:54,399 --> 00:34:56,399
definitely want to have team expertise

956
00:34:56,399 --> 00:34:57,839
for that because there would be cases

957
00:34:57,839 --> 00:35:00,320
where you would need to uh you need to

958
00:35:00,320 --> 00:35:02,240
customize the rules again just enabling

959
00:35:02,240 --> 00:35:04,320
disabling rules was that simple okay you

960
00:35:04,320 --> 00:35:05,920
don't need to worry about that but there

961
00:35:05,920 --> 00:35:07,680
would be cases where you want to do hot

962
00:35:07,680 --> 00:35:09,280
patching schedules where you want to

963
00:35:09,280 --> 00:35:11,599
block stuff with the custom rules that's

964
00:35:11,599 --> 00:35:12,880
where it becomes tricky so you want to

965
00:35:12,880 --> 00:35:15,119
have definitely team expertise uh with

966
00:35:15,119 --> 00:35:18,160
the mod security to be able to uh to

967
00:35:18,160 --> 00:35:20,880
to adjust the rules if need be

968
00:35:20,880 --> 00:35:23,119
okay

969
00:35:25,520 --> 00:35:27,680
okay now we look at the comparison you

970
00:35:27,680 --> 00:35:29,920
know we didn't look at everything but

971
00:35:29,920 --> 00:35:32,079
these are some of the highlights in

972
00:35:32,079 --> 00:35:33,839
terms of the comparisons we are not

973
00:35:33,839 --> 00:35:35,920
going to go through the full table but

974
00:35:35,920 --> 00:35:38,320
just what is you know also highlighted

975
00:35:38,320 --> 00:35:41,760
in this table right so one thing that

976
00:35:41,760 --> 00:35:42,800
i mean

977
00:35:42,800 --> 00:35:44,480
a core rule said it is pretty much

978
00:35:44,480 --> 00:35:45,680
supported

979
00:35:45,680 --> 00:35:49,119
in all the options uh but

980
00:35:49,119 --> 00:35:50,640
what i wanted to mention over here is

981
00:35:50,640 --> 00:35:52,560
the core rule sets upgrade sites os is

982
00:35:52,560 --> 00:35:54,640
continuously working on the core rule

983
00:35:54,640 --> 00:35:57,440
set to improve them

984
00:35:57,440 --> 00:35:58,640
how do you

985
00:35:58,640 --> 00:36:01,040
you know quickly

986
00:36:01,040 --> 00:36:04,079
add it or implement it in your solution

987
00:36:04,079 --> 00:36:06,480
with with uh you know

988
00:36:06,480 --> 00:36:08,000
with your self-manage option you have

989
00:36:08,000 --> 00:36:09,520
full control over it which version you

990
00:36:09,520 --> 00:36:11,119
want to use as soon as there's a new

991
00:36:11,119 --> 00:36:12,800
version available you have control over

992
00:36:12,800 --> 00:36:14,880
it with uh cloud providers you are

993
00:36:14,880 --> 00:36:16,800
dependent on the cloud providers right

994
00:36:16,800 --> 00:36:19,280
and we saw i think azure gives you an

995
00:36:19,280 --> 00:36:21,200
option of which version you want to use

996
00:36:21,200 --> 00:36:22,880
uh aws and

997
00:36:22,880 --> 00:36:25,040
in gcp they don't even list the options

998
00:36:25,040 --> 00:36:26,400
whatever is available you have to use

999
00:36:26,400 --> 00:36:27,359
that

1000
00:36:27,359 --> 00:36:28,160
uh

1001
00:36:28,160 --> 00:36:30,079
the other is the

1002
00:36:30,079 --> 00:36:32,000
request body parsing

1003
00:36:32,000 --> 00:36:35,599
so we saw that with both aws and gcp

1004
00:36:35,599 --> 00:36:37,760
it's limited to the first 8k

1005
00:36:37,760 --> 00:36:40,400
off of the request body with your own

1006
00:36:40,400 --> 00:36:42,480
you know mod security it's configurable

1007
00:36:42,480 --> 00:36:44,560
so you can do

1008
00:36:44,560 --> 00:36:46,640
you know 8k or 8 megs or whatever you

1009
00:36:46,640 --> 00:36:49,200
want uh azure

1010
00:36:49,200 --> 00:36:51,280
supports full request body parsing so

1011
00:36:51,280 --> 00:36:52,400
that is good

1012
00:36:52,400 --> 00:36:55,200
response body parsing this we have clear

1013
00:36:55,200 --> 00:36:57,839
winner over here is mod security uh with

1014
00:36:57,839 --> 00:36:59,599
with the cloud providers they don't

1015
00:36:59,599 --> 00:37:02,400
support request party parsing right so

1016
00:37:02,400 --> 00:37:04,320
and request body parsing is uh so

1017
00:37:04,320 --> 00:37:06,480
response body parsing is critical for

1018
00:37:06,480 --> 00:37:08,480
protection against data expectation or

1019
00:37:08,480 --> 00:37:11,119
data leaks

1020
00:37:13,040 --> 00:37:17,040
http 3 support only gcp had that

1021
00:37:17,040 --> 00:37:20,560
list over there ip filtering also so gcp

1022
00:37:20,560 --> 00:37:22,800
supports a dynamic third party list

1023
00:37:22,800 --> 00:37:24,560
right instead of the others it's a

1024
00:37:24,560 --> 00:37:27,599
static list that you want to use right

1025
00:37:27,599 --> 00:37:29,760
uh another important point over here is

1026
00:37:29,760 --> 00:37:32,160
how to handle false positive right so

1027
00:37:32,160 --> 00:37:34,720
they are going to be false positive

1028
00:37:34,720 --> 00:37:37,119
like false positive basically it's a

1029
00:37:37,119 --> 00:37:39,440
valid use case and your off is blocking

1030
00:37:39,440 --> 00:37:41,359
it right now you have to do something

1031
00:37:41,359 --> 00:37:43,119
about it otherwise your customers cannot

1032
00:37:43,119 --> 00:37:45,280
use your solution so i mean what's the

1033
00:37:45,280 --> 00:37:46,079
point

1034
00:37:46,079 --> 00:37:48,400
so now the thing is how to

1035
00:37:48,400 --> 00:37:50,960
handle that so with your with mod

1036
00:37:50,960 --> 00:37:54,079
security you can you have more uh

1037
00:37:54,079 --> 00:37:57,839
granular way to add exceptions to those

1038
00:37:57,839 --> 00:37:59,359
right so you can see what is the

1039
00:37:59,359 --> 00:38:00,720
condition

1040
00:38:00,720 --> 00:38:04,720
that is blocking right so some header

1041
00:38:04,720 --> 00:38:08,240
value the uri or there's a specific

1042
00:38:08,240 --> 00:38:10,560
you know condition that is there so you

1043
00:38:10,560 --> 00:38:13,920
can poke a hole only for that condition

1044
00:38:13,920 --> 00:38:15,200
whereas

1045
00:38:15,200 --> 00:38:16,720
for the other providers you have to

1046
00:38:16,720 --> 00:38:18,160
remove the rule you don't have an option

1047
00:38:18,160 --> 00:38:20,560
if this is that something a valid you

1048
00:38:20,560 --> 00:38:22,160
know use case is getting blocked you

1049
00:38:22,160 --> 00:38:24,160
have to remove the so you're poking out

1050
00:38:24,160 --> 00:38:27,118
a bigger hole

1051
00:38:28,480 --> 00:38:30,480
so some issues and limitations that we

1052
00:38:30,480 --> 00:38:32,720
have experienced for you know the time

1053
00:38:32,720 --> 00:38:35,440
that we have been using of

1054
00:38:35,440 --> 00:38:36,560
uh

1055
00:38:36,560 --> 00:38:38,400
handling false positive it's a

1056
00:38:38,400 --> 00:38:40,720
continuous effort it's not that you

1057
00:38:40,720 --> 00:38:42,640
handle false positive once

1058
00:38:42,640 --> 00:38:45,040
your applications are being continuously

1059
00:38:45,040 --> 00:38:47,119
developed evolved right and this

1060
00:38:47,119 --> 00:38:49,359
continuous delivery that is happening

1061
00:38:49,359 --> 00:38:51,760
every week you are deploying production

1062
00:38:51,760 --> 00:38:52,640
so

1063
00:38:52,640 --> 00:38:56,000
how do you ensure that you know

1064
00:38:56,000 --> 00:38:58,079
you don't have false positive

1065
00:38:58,079 --> 00:38:58,960
and

1066
00:38:58,960 --> 00:39:00,880
how do you poke holes you don't want to

1067
00:39:00,880 --> 00:39:03,119
poke so many holes that you don't even

1068
00:39:03,119 --> 00:39:05,440
know how much uh you know waff is

1069
00:39:05,440 --> 00:39:07,359
protecting you or not right just like a

1070
00:39:07,359 --> 00:39:09,680
perception then it's being you're being

1071
00:39:09,680 --> 00:39:11,520
protected so

1072
00:39:11,520 --> 00:39:14,240
that is the you know a

1073
00:39:14,240 --> 00:39:17,040
very challenging thing that we see like

1074
00:39:17,040 --> 00:39:19,440
and it's a continuous effort

1075
00:39:19,440 --> 00:39:20,480
and

1076
00:39:20,480 --> 00:39:22,079
because it's a continuous effort the

1077
00:39:22,079 --> 00:39:24,160
cost is high right so you have to every

1078
00:39:24,160 --> 00:39:26,160
time you make a release there's this

1079
00:39:26,160 --> 00:39:29,760
thing you have to test right uh

1080
00:39:29,760 --> 00:39:31,920
and as i mentioned before is in terms of

1081
00:39:31,920 --> 00:39:34,000
how big of a hole you're poking right so

1082
00:39:34,000 --> 00:39:35,680
managing the

1083
00:39:35,680 --> 00:39:37,680
false positive without sacrificing

1084
00:39:37,680 --> 00:39:39,680
security

1085
00:39:39,680 --> 00:39:41,119
the other challenge that we see is

1086
00:39:41,119 --> 00:39:42,800
reproducing customer issues right

1087
00:39:42,800 --> 00:39:44,720
customer comes with an issue that okay

1088
00:39:44,720 --> 00:39:46,960
when i do this it gets blocked i get

1089
00:39:46,960 --> 00:39:48,400
this message and you look at that

1090
00:39:48,400 --> 00:39:50,880
message oh it's coming from wolf

1091
00:39:50,880 --> 00:39:53,520
so now when i try it i can't reproduce

1092
00:39:53,520 --> 00:39:55,760
it customers have their own cookies they

1093
00:39:55,760 --> 00:39:57,599
have their own plugins there's customer

1094
00:39:57,599 --> 00:40:00,160
specific data so how do you reproduce it

1095
00:40:00,160 --> 00:40:01,839
i mean good thing is yeah you can go and

1096
00:40:01,839 --> 00:40:03,440
find it in the log that it's being

1097
00:40:03,440 --> 00:40:05,280
blocked and then figure out what what's

1098
00:40:05,280 --> 00:40:06,240
happening

1099
00:40:06,240 --> 00:40:07,040
but

1100
00:40:07,040 --> 00:40:09,280
you know it's such it's a challenge

1101
00:40:09,280 --> 00:40:11,520
the other thing is

1102
00:40:11,520 --> 00:40:12,560
the

1103
00:40:12,560 --> 00:40:14,160
you know getting hundred percent test

1104
00:40:14,160 --> 00:40:17,200
coverage so with volv obviously as your

1105
00:40:17,200 --> 00:40:19,119
application is evolving off is evolving

1106
00:40:19,119 --> 00:40:20,720
there's continuous upgrades that are

1107
00:40:20,720 --> 00:40:23,200
happening so when continuous upgrades

1108
00:40:23,200 --> 00:40:25,040
are happening and we

1109
00:40:25,040 --> 00:40:27,280
we have actually got bitten by this we

1110
00:40:27,280 --> 00:40:28,560
upgrade war

1111
00:40:28,560 --> 00:40:30,880
and then suddenly we see the rules

1112
00:40:30,880 --> 00:40:33,040
that were working before are not working

1113
00:40:33,040 --> 00:40:34,720
or there are use cases that were working

1114
00:40:34,720 --> 00:40:37,680
before not working now right so

1115
00:40:37,680 --> 00:40:39,760
how do you ensure

1116
00:40:39,760 --> 00:40:42,160
that when you upgrade wow that you are

1117
00:40:42,160 --> 00:40:43,280
good right

1118
00:40:43,280 --> 00:40:45,440
uh you need automated testing for that

1119
00:40:45,440 --> 00:40:47,359
but the trick or the the challenging

1120
00:40:47,359 --> 00:40:49,200
point over there is how do you have how

1121
00:40:49,200 --> 00:40:52,240
do you get hundred percent coverage

1122
00:40:52,240 --> 00:40:54,880
uh we need to keep in mind it's not just

1123
00:40:54,880 --> 00:40:57,520
like you know your application testing

1124
00:40:57,520 --> 00:40:59,839
functionality testing that is very very

1125
00:40:59,839 --> 00:41:02,960
you know specific to the there's no

1126
00:41:02,960 --> 00:41:04,240
let's say

1127
00:41:04,240 --> 00:41:06,640
variables not many variables over there

1128
00:41:06,640 --> 00:41:07,920
that are

1129
00:41:07,920 --> 00:41:09,599
are dependent which which you don't

1130
00:41:09,599 --> 00:41:11,760
control but with var there is a

1131
00:41:11,760 --> 00:41:13,200
customers may be using different

1132
00:41:13,200 --> 00:41:15,680
browsers as i mentioned you know cookies

1133
00:41:15,680 --> 00:41:19,040
and plugins and whatnot so how do you

1134
00:41:19,040 --> 00:41:23,520
have a a good test coverage that will

1135
00:41:23,520 --> 00:41:25,680
protect you

1136
00:41:25,680 --> 00:41:28,079
or with confidence you can say okay

1137
00:41:28,079 --> 00:41:30,640
we are upgrading volv and we are not

1138
00:41:30,640 --> 00:41:33,599
going to have any issues

1139
00:41:33,599 --> 00:41:37,359
so that's all we got uh questions

1140
00:41:37,359 --> 00:41:38,720
so if you're thinking about the test

1141
00:41:38,720 --> 00:41:41,359
coverage actually if you wanted to use

1142
00:41:41,359 --> 00:41:43,280
synthetic monitoring from the

1143
00:41:43,280 --> 00:41:45,520
performance testing then you could

1144
00:41:45,520 --> 00:41:48,560
actually take a look at what your end

1145
00:41:48,560 --> 00:41:50,720
users might be experiencing for that

1146
00:41:50,720 --> 00:41:53,920
reproducible customer that's also as

1147
00:41:53,920 --> 00:41:56,240
your qa folks are generating their

1148
00:41:56,240 --> 00:41:58,160
functionality testing all they need to

1149
00:41:58,160 --> 00:42:00,400
do is a synthetic one and the other

1150
00:42:00,400 --> 00:42:01,839
thing about synthetic is you can

1151
00:42:01,839 --> 00:42:03,680
actually stress test

1152
00:42:03,680 --> 00:42:05,760
to see when your walk is going to fail

1153
00:42:05,760 --> 00:42:08,160
open or fill closed so by adding in the

1154
00:42:08,160 --> 00:42:11,119
performance synthetic monitoring you can

1155
00:42:11,119 --> 00:42:13,200
actually add in a lot of coverage so i

1156
00:42:13,200 --> 00:42:15,599
don't know if you guys have yes we we do

1157
00:42:15,599 --> 00:42:17,680
that yeah we do that but what i meant

1158
00:42:17,680 --> 00:42:20,640
over there was having 100 coverage right

1159
00:42:20,640 --> 00:42:22,400
you will have your synthetic monitors

1160
00:42:22,400 --> 00:42:24,000
you're doing some testing yourself you

1161
00:42:24,000 --> 00:42:26,160
had your own automated test suite but

1162
00:42:26,160 --> 00:42:27,440
the challenge over there is having

1163
00:42:27,440 --> 00:42:29,760
hundred percent yeah and the issue that

1164
00:42:29,760 --> 00:42:30,720
we

1165
00:42:30,720 --> 00:42:32,960
come across is like uh they are

1166
00:42:32,960 --> 00:42:34,960
sometimes the users are having some

1167
00:42:34,960 --> 00:42:37,359
plugins installed on their uh browsers

1168
00:42:37,359 --> 00:42:39,280
and those plugins are adding those extra

1169
00:42:39,280 --> 00:42:41,040
headers right that has nothing to do

1170
00:42:41,040 --> 00:42:42,480
with the actual request which is being

1171
00:42:42,480 --> 00:42:45,359
sent to your uh application but those

1172
00:42:45,359 --> 00:42:47,280
extra instruments being added by the

1173
00:42:47,280 --> 00:42:48,880
plugins and the warframes are blocking

1174
00:42:48,880 --> 00:42:52,480
those uh similarly the um the customer

1175
00:42:52,480 --> 00:42:54,800
has a data which is like excellent so

1176
00:42:54,800 --> 00:42:57,040
those kind of things for america it's

1177
00:42:57,040 --> 00:42:59,200
working fine but for european friends

1178
00:42:59,200 --> 00:43:01,200
okay it's not causing issues over there

1179
00:43:01,200 --> 00:43:03,040
right in our application directory

1180
00:43:03,040 --> 00:43:05,680
deployed across all around so for one of

1181
00:43:05,680 --> 00:43:07,280
our zones it's working perfectly fine no

1182
00:43:07,280 --> 00:43:09,280
issues but as soon as you put it on

1183
00:43:09,280 --> 00:43:11,680
european zone it has brings its own set

1184
00:43:11,680 --> 00:43:14,640
of issues when you go to asia zone it

1185
00:43:14,640 --> 00:43:17,040
brings its own set of issues so it

1186
00:43:17,040 --> 00:43:19,040
becomes and again given the amount of

1187
00:43:19,040 --> 00:43:21,680
traffic that is on our environments it's

1188
00:43:21,680 --> 00:43:23,520
difficult to figure out

1189
00:43:23,520 --> 00:43:25,839
individual user data being synced so

1190
00:43:25,839 --> 00:43:27,599
that's where the challenge was and it's

1191
00:43:27,599 --> 00:43:29,200
never seen

1192
00:43:29,200 --> 00:43:30,960
again we learned it the hard way at this

1193
00:43:30,960 --> 00:43:33,280
time because we upgraded to a new

1194
00:43:33,280 --> 00:43:35,440
version it will set for us everything

1195
00:43:35,440 --> 00:43:37,520
was working fine but as soon as we put

1196
00:43:37,520 --> 00:43:40,079
in production i'll okay you normally

1197
00:43:40,079 --> 00:43:41,760
want to put that into detection here for

1198
00:43:41,760 --> 00:43:42,640
a while

1199
00:43:42,640 --> 00:43:44,240
for in this case we don't have an option

1200
00:43:44,240 --> 00:43:46,000
because we already have the dwarf

1201
00:43:46,000 --> 00:43:48,560
running in convention mode now we cannot

1202
00:43:48,560 --> 00:43:49,839
tell customers okay we're reducing the

1203
00:43:49,839 --> 00:43:51,760
safety level right now

1204
00:43:51,760 --> 00:43:52,480
so

1205
00:43:52,480 --> 00:43:54,560
as soon as we put it over there there

1206
00:43:54,560 --> 00:43:56,560
were escalations things which was

1207
00:43:56,560 --> 00:43:59,040
working end up getting blocked so now we

1208
00:43:59,040 --> 00:44:01,040
end up coming with our own framework to

1209
00:44:01,040 --> 00:44:02,160
test stuff

1210
00:44:02,160 --> 00:44:03,680
at least things which were working

1211
00:44:03,680 --> 00:44:05,839
before we want to make sure they are

1212
00:44:05,839 --> 00:44:07,920
passing in respect to the rules they are

1213
00:44:07,920 --> 00:44:09,920
mainly based on the request which was

1214
00:44:09,920 --> 00:44:11,200
working the first should be working

1215
00:44:11,200 --> 00:44:12,960
again so that's the strategy we came up

1216
00:44:12,960 --> 00:44:14,960
with now but again it's still a long way

1217
00:44:14,960 --> 00:44:17,200
to go uh and again we are also thinking

1218
00:44:17,200 --> 00:44:18,400
about

1219
00:44:18,400 --> 00:44:20,160
maybe uh

1220
00:44:20,160 --> 00:44:22,400
add this new rough in detection mode

1221
00:44:22,400 --> 00:44:25,040
behind the current wave so that you can

1222
00:44:25,040 --> 00:44:26,640
monitor the traffic over there for a

1223
00:44:26,640 --> 00:44:28,960
while before you replace this with the

1224
00:44:28,960 --> 00:44:30,560
old one so again there's a few

1225
00:44:30,560 --> 00:44:31,839
strategies in your thinking but again

1226
00:44:31,839 --> 00:44:34,640
still still debating on it but yes it's

1227
00:44:34,640 --> 00:44:37,839
a challenge uh right now

1228
00:44:38,480 --> 00:44:40,800
so given the the issues limitation

1229
00:44:40,800 --> 00:44:42,960
challenges that y'all outlined uh why

1230
00:44:42,960 --> 00:44:44,240
did y'all

1231
00:44:44,240 --> 00:44:46,240
why didn't you use some one of the like

1232
00:44:46,240 --> 00:44:49,200
established vendors

1233
00:44:49,520 --> 00:44:50,640
what do you mean by establishment the

1234
00:44:50,640 --> 00:44:52,240
collection of spider ones yeah like one

1235
00:44:52,240 --> 00:44:54,000
of the other like the big whack vendors

1236
00:44:54,000 --> 00:44:56,160
like i mean how come you all did it

1237
00:44:56,160 --> 00:44:57,520
yourself just

1238
00:44:57,520 --> 00:44:58,640
let me know

1239
00:44:58,640 --> 00:45:00,560
okay there's a history behind it so as i

1240
00:45:00,560 --> 00:45:02,839
mentioned we've been using war

1241
00:45:02,839 --> 00:45:05,280
for 10

1242
00:45:05,280 --> 00:45:07,839
years or maybe a little bit less

1243
00:45:07,839 --> 00:45:08,800
uh

1244
00:45:08,800 --> 00:45:11,839
so one reason is it's a company mandate

1245
00:45:11,839 --> 00:45:12,960
right so

1246
00:45:12,960 --> 00:45:14,880
it's a cob security mandate that we have

1247
00:45:14,880 --> 00:45:16,720
i mean the mandate was we have to use

1248
00:45:16,720 --> 00:45:20,160
avof and eight years back then i mean

1249
00:45:20,160 --> 00:45:22,800
we had an internal team that was

1250
00:45:22,800 --> 00:45:25,599
basically developing a moment it's it's

1251
00:45:25,599 --> 00:45:28,079
basically apache with mod security right

1252
00:45:28,079 --> 00:45:30,480
and that was an easier option to to use

1253
00:45:30,480 --> 00:45:31,520
and then

1254
00:45:31,520 --> 00:45:32,560
it's

1255
00:45:32,560 --> 00:45:35,040
uh one thing with that is it's agnostic

1256
00:45:35,040 --> 00:45:36,480
to what

1257
00:45:36,480 --> 00:45:37,920
i mean whether you are in the cloud or

1258
00:45:37,920 --> 00:45:39,839
data center you could use it at that

1259
00:45:39,839 --> 00:45:41,520
point there were no cloud options

1260
00:45:41,520 --> 00:45:44,560
available so we've invested in that

1261
00:45:44,560 --> 00:45:46,400
quite a bit it's working well for us so

1262
00:45:46,400 --> 00:45:47,920
we want to stick to it yeah the in

1263
00:45:47,920 --> 00:45:49,359
addition to that is

1264
00:45:49,359 --> 00:45:51,839
it's not just the us rule sets the

1265
00:45:51,839 --> 00:45:53,680
internal uh product that our company

1266
00:45:53,680 --> 00:45:56,160
provides has its own set of rules and

1267
00:45:56,160 --> 00:45:58,240
they are also keep on getting involved

1268
00:45:58,240 --> 00:46:00,800
and actually recently tested uh we did a

1269
00:46:00,800 --> 00:46:02,960
study like uh earlier this year

1270
00:46:02,960 --> 00:46:05,760
uh where we tested uh the rule sets uh

1271
00:46:05,760 --> 00:46:08,800
our own rule sets against aws and i

1272
00:46:08,800 --> 00:46:11,760
think it was uh gcp also so i think

1273
00:46:11,760 --> 00:46:14,319
there are three uh much

1274
00:46:14,319 --> 00:46:17,280
default mod security our own product

1275
00:46:17,280 --> 00:46:18,319
uh

1276
00:46:18,319 --> 00:46:21,119
aws and i think gcp as well

1277
00:46:21,119 --> 00:46:22,720
and we tested the room coverage against

1278
00:46:22,720 --> 00:46:23,520
that

1279
00:46:23,520 --> 00:46:25,040
there was a major difference between

1280
00:46:25,040 --> 00:46:27,040
what we are covering as opposed to what

1281
00:46:27,040 --> 00:46:29,119
those are covering right

1282
00:46:29,119 --> 00:46:30,480
and again the other thing you notice

1283
00:46:30,480 --> 00:46:32,240
right some of the things which nathan

1284
00:46:32,240 --> 00:46:34,079
showed in the comparison table of them

1285
00:46:34,079 --> 00:46:36,000
like response it's not covering at all

1286
00:46:36,000 --> 00:46:37,920
or the also the

1287
00:46:37,920 --> 00:46:38,720
the

1288
00:46:38,720 --> 00:46:41,040
amount of requests body it can pass so

1289
00:46:41,040 --> 00:46:42,800
there are still a lot of limitations in

1290
00:46:42,800 --> 00:46:45,280
the existing cloud service provider ones

1291
00:46:45,280 --> 00:46:47,520
which which we our company don't like so

1292
00:46:47,520 --> 00:46:49,440
they say okay no we want more control

1293
00:46:49,440 --> 00:46:51,680
and we want to have our own reef sets to

1294
00:46:51,680 --> 00:46:53,280
to protect those common scenarios as

1295
00:46:53,280 --> 00:46:54,000
well

1296
00:46:54,000 --> 00:46:54,880
yes

1297
00:46:54,880 --> 00:46:56,000
but i think there's going to be a

1298
00:46:56,000 --> 00:46:57,599
tipping point yes at some point you're

1299
00:46:57,599 --> 00:46:59,839
going to realize that

1300
00:46:59,839 --> 00:47:01,520
it's expensive for us yeah

1301
00:47:01,520 --> 00:47:03,520
as part of that study they actually gave

1302
00:47:03,520 --> 00:47:06,240
now a kind of a

1303
00:47:06,240 --> 00:47:07,599
condition map or something

1304
00:47:07,599 --> 00:47:10,319
disintegrating okay if you're doing this

1305
00:47:10,319 --> 00:47:12,640
this this this then this cloud source

1306
00:47:12,640 --> 00:47:14,079
file is okay

1307
00:47:14,079 --> 00:47:16,720
if not then go this route so they gave

1308
00:47:16,720 --> 00:47:19,839
certain conditions okay if yes no yes no

1309
00:47:19,839 --> 00:47:21,839
and then you you finance okay this is

1310
00:47:21,839 --> 00:47:23,359
the option you can go with

1311
00:47:23,359 --> 00:47:25,440
so they are also saying okay you can

1312
00:47:25,440 --> 00:47:27,760
start using the cloud one but for

1313
00:47:27,760 --> 00:47:31,359
certain service not in all cases

1314
00:47:34,640 --> 00:47:37,040
how resilient have you found rule sets

1315
00:47:37,040 --> 00:47:40,640
to be to things like

1316
00:47:40,800 --> 00:47:43,280
just alternate encodings

1317
00:47:43,280 --> 00:47:46,240
and unicode as opposed to ascii

1318
00:47:46,240 --> 00:47:48,000
characters and you know all these

1319
00:47:48,000 --> 00:47:50,079
evasion techniques to get past pattern

1320
00:47:50,079 --> 00:47:52,960
matching okay

1321
00:47:52,960 --> 00:47:53,680
so

1322
00:47:53,680 --> 00:47:55,280
the the rule sets

1323
00:47:55,280 --> 00:47:57,680
i mean cover that but there's no hundred

1324
00:47:57,680 --> 00:47:59,440
percent coverage for that

1325
00:47:59,440 --> 00:48:01,920
right yeah so yeah and that's where our

1326
00:48:01,920 --> 00:48:04,480
company rules they keep what i was

1327
00:48:04,480 --> 00:48:05,680
mentioning we keep on adding custom

1328
00:48:05,680 --> 00:48:06,640
rules

1329
00:48:06,640 --> 00:48:09,280
there is a team in our company which

1330
00:48:09,280 --> 00:48:11,200
that that's their job right and they

1331
00:48:11,200 --> 00:48:13,119
keep on adding news to cover those kind

1332
00:48:13,119 --> 00:48:15,760
of stuff uh to cater for that and that's

1333
00:48:15,760 --> 00:48:16,960
why when i was saying there was a major

1334
00:48:16,960 --> 00:48:18,400
difference between

1335
00:48:18,400 --> 00:48:19,520
the

1336
00:48:19,520 --> 00:48:21,839
own internal product versus the other

1337
00:48:21,839 --> 00:48:23,680
ones that these are the things they were

1338
00:48:23,680 --> 00:48:26,079
covering over there as well so but again

1339
00:48:26,079 --> 00:48:27,359
as they didn't said they still won't be

1340
00:48:27,359 --> 00:48:30,319
100 coverage but they are they have

1341
00:48:30,319 --> 00:48:32,559
pretty narrow down stuff also over there

1342
00:48:32,559 --> 00:48:34,800
to cater those cases as with everything

1343
00:48:34,800 --> 00:48:36,559
else you know it's a cat and mouse game

1344
00:48:36,559 --> 00:48:39,920
security you were catching up

1345
00:48:40,160 --> 00:48:42,480
i did have another question i saw the

1346
00:48:42,480 --> 00:48:44,960
announcement from trustwave uh that they

1347
00:48:44,960 --> 00:48:47,520
stopped selling mod security this summer

1348
00:48:47,520 --> 00:48:49,520
on august 1st

1349
00:48:49,520 --> 00:48:51,440
and end of uh

1350
00:48:51,440 --> 00:48:53,440
basically the end of life in a few years

1351
00:48:53,440 --> 00:48:54,640
right

1352
00:48:54,640 --> 00:48:56,559
have you have you seen the open source

1353
00:48:56,559 --> 00:48:58,319
community really pick up

1354
00:48:58,319 --> 00:49:01,280
the support of mod security

1355
00:49:01,280 --> 00:49:03,200
just since you work with it day-to-day i

1356
00:49:03,200 --> 00:49:05,200
i'd love whatever insight you have into

1357
00:49:05,200 --> 00:49:06,720
what's going on there

1358
00:49:06,720 --> 00:49:07,520
so

1359
00:49:07,520 --> 00:49:10,160
as mentioned we have a dedicated team

1360
00:49:10,160 --> 00:49:12,640
for it so they're looking them

1361
00:49:12,640 --> 00:49:14,319
good experts and as i mentioned there'll

1362
00:49:14,319 --> 00:49:16,640
be a tipping point so

1363
00:49:16,640 --> 00:49:19,520
probably that would be the you know

1364
00:49:19,520 --> 00:49:22,000
the push

1365
00:49:24,960 --> 00:49:28,400
okay any other questions for us

1366
00:49:28,720 --> 00:49:30,480
if not thanks again thank you thanks

1367
00:49:30,480 --> 00:49:33,640
thank you

