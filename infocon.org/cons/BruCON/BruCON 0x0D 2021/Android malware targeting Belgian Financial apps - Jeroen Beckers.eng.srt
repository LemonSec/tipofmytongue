1
00:00:00,080 --> 00:00:02,800
hello everybody um i am replacing fort

2
00:00:02,800 --> 00:00:05,520
stefani who is also doing a talk on um

3
00:00:05,520 --> 00:00:07,600
well mobile malware she was going to

4
00:00:07,600 --> 00:00:10,240
discuss the anti-viral site

5
00:00:10,240 --> 00:00:11,920
i will actually be showing some

6
00:00:11,920 --> 00:00:13,679
information on the types of different

7
00:00:13,679 --> 00:00:15,440
malware that there are and also the

8
00:00:15,440 --> 00:00:17,680
types that are currently attacking or

9
00:00:17,680 --> 00:00:20,800
targeting the belgian market

10
00:00:20,800 --> 00:00:23,039
who am i i'm iron beckers i am the

11
00:00:23,039 --> 00:00:25,840
mobile solution lead at nvizo i'm also

12
00:00:25,840 --> 00:00:28,000
the author and instructor for the suns

13
00:00:28,000 --> 00:00:30,160
575 course which is of course about

14
00:00:30,160 --> 00:00:32,880
mobile application security

15
00:00:32,880 --> 00:00:35,440
and i'm also the co-author of the msdg

16
00:00:35,440 --> 00:00:37,360
and the masvs

17
00:00:37,360 --> 00:00:39,600
which is basically the industry best

18
00:00:39,600 --> 00:00:42,239
practice for analyzing the security of a

19
00:00:42,239 --> 00:00:44,960
mobile application finally i'm a

20
00:00:44,960 --> 00:00:46,719
co-organizer of the belgian cyber

21
00:00:46,719 --> 00:00:49,120
security challenge as you can see here

22
00:00:49,120 --> 00:00:51,120
if you are still a student and you don't

23
00:00:51,120 --> 00:00:53,520
know about the cyber security challenge

24
00:00:53,520 --> 00:00:56,320
then i've done a pretty bad job

25
00:00:56,320 --> 00:00:58,160
so that's a competition for all belgian

26
00:00:58,160 --> 00:01:00,800
students and you can win awesome prizes

27
00:01:00,800 --> 00:01:02,879
uh the number one prize is a trip to

28
00:01:02,879 --> 00:01:06,320
defcon las vegas which is basically the

29
00:01:06,320 --> 00:01:08,560
second most popular conference after

30
00:01:08,560 --> 00:01:10,960
brooklyn so if you're a student

31
00:01:10,960 --> 00:01:12,880
definitely join

32
00:01:12,880 --> 00:01:14,799
and make sure you win

33
00:01:14,799 --> 00:01:16,960
so the agenda for today

34
00:01:16,960 --> 00:01:19,840
i will explain a bit about basic android

35
00:01:19,840 --> 00:01:20,960
malware

36
00:01:20,960 --> 00:01:23,439
the entire presentation will be on

37
00:01:23,439 --> 00:01:25,200
android malware

38
00:01:25,200 --> 00:01:26,799
unless i go really quickly and then i

39
00:01:26,799 --> 00:01:28,799
have some extra slides on ios but

40
00:01:28,799 --> 00:01:30,400
normally it should all be android

41
00:01:30,400 --> 00:01:31,600
malware

42
00:01:31,600 --> 00:01:33,200
i'll explain the basic malware i'll

43
00:01:33,200 --> 00:01:35,439
explain ransomware which is also a

44
00:01:35,439 --> 00:01:37,759
problem on android i will talk about

45
00:01:37,759 --> 00:01:39,840
advanced malware which is where it

46
00:01:39,840 --> 00:01:41,759
becomes interesting and then i'll give

47
00:01:41,759 --> 00:01:44,560
some examples on flu bot tibot vulture

48
00:01:44,560 --> 00:01:47,280
three more recent malware families that

49
00:01:47,280 --> 00:01:49,119
are now actually

50
00:01:49,119 --> 00:01:51,360
targeting belgium not all of them are

51
00:01:51,360 --> 00:01:52,240
but

52
00:01:52,240 --> 00:01:54,640
i'll explain that in a few minutes

53
00:01:54,640 --> 00:01:56,640
and then finally hopefully if we have

54
00:01:56,640 --> 00:01:59,040
the time um how to protect because i

55
00:01:59,040 --> 00:02:00,960
don't only want to give you bad news i

56
00:02:00,960 --> 00:02:02,399
also want to explain

57
00:02:02,399 --> 00:02:05,920
um what we can do to fight these um

58
00:02:05,920 --> 00:02:08,800
these malware families so let's start

59
00:02:08,800 --> 00:02:11,520
off with some basic malware

60
00:02:11,520 --> 00:02:12,319
um

61
00:02:12,319 --> 00:02:13,520
a lot of people when they think about

62
00:02:13,520 --> 00:02:15,680
malware they think well it will be an

63
00:02:15,680 --> 00:02:17,520
application that just tries to collect

64
00:02:17,520 --> 00:02:20,080
as much information as possible

65
00:02:20,080 --> 00:02:21,760
and that's definitely

66
00:02:21,760 --> 00:02:23,599
a possibility there are malware families

67
00:02:23,599 --> 00:02:25,920
that actually do this they can request

68
00:02:25,920 --> 00:02:27,680
your contact information your text

69
00:02:27,680 --> 00:02:28,959
messages

70
00:02:28,959 --> 00:02:31,120
your location maybe

71
00:02:31,120 --> 00:02:32,720
your

72
00:02:32,720 --> 00:02:35,200
microphone and record your audio

73
00:02:35,200 --> 00:02:37,519
but of course not all applications that

74
00:02:37,519 --> 00:02:39,280
actually request these permissions are

75
00:02:39,280 --> 00:02:40,480
malicious

76
00:02:40,480 --> 00:02:42,160
in fact the screenshots that you see

77
00:02:42,160 --> 00:02:44,720
here are belonging to a

78
00:02:44,720 --> 00:02:46,239
mobile application that's been installed

79
00:02:46,239 --> 00:02:49,040
by over a billion different users

80
00:02:49,040 --> 00:02:51,120
can anybody guess which application this

81
00:02:51,120 --> 00:02:52,800
is for

82
00:02:52,800 --> 00:02:54,000
facebook

83
00:02:54,000 --> 00:02:56,560
i think everybody immediately facebook

84
00:02:56,560 --> 00:02:58,239
exactly facebook

85
00:02:58,239 --> 00:03:00,400
facebook doesn't request all of the

86
00:03:00,400 --> 00:03:02,480
available permissions but i would say

87
00:03:02,480 --> 00:03:04,319
it's about 90

88
00:03:04,319 --> 00:03:06,159
so all the ones that are

89
00:03:06,159 --> 00:03:08,239
kind of legitimate and don't raise any

90
00:03:08,239 --> 00:03:10,959
eyebrows but still well it's collecting

91
00:03:10,959 --> 00:03:13,440
a whole lot of information on you

92
00:03:13,440 --> 00:03:15,440
and well we can discuss if this is

93
00:03:15,440 --> 00:03:19,040
malware or not of course now android

94
00:03:19,040 --> 00:03:20,400
malware has been around for quite some

95
00:03:20,400 --> 00:03:24,239
time so this is a news article from 2010

96
00:03:24,239 --> 00:03:27,680
which was basically android 1.6 or maybe

97
00:03:27,680 --> 00:03:28,720
two

98
00:03:28,720 --> 00:03:29,680
and

99
00:03:29,680 --> 00:03:31,760
somebody already recognized that well

100
00:03:31,760 --> 00:03:33,360
smartphone is interesting because it can

101
00:03:33,360 --> 00:03:35,120
send text messages

102
00:03:35,120 --> 00:03:37,599
and there's such a thing as premium text

103
00:03:37,599 --> 00:03:39,840
messaging services so if we just create

104
00:03:39,840 --> 00:03:41,599
an application that sends a premium text

105
00:03:41,599 --> 00:03:44,080
message subscription request to those

106
00:03:44,080 --> 00:03:45,200
services

107
00:03:45,200 --> 00:03:47,040
well the user will have to pay for that

108
00:03:47,040 --> 00:03:48,640
subscription

109
00:03:48,640 --> 00:03:51,200
this is quite a nice attack because

110
00:03:51,200 --> 00:03:52,720
the user will only

111
00:03:52,720 --> 00:03:54,799
identify the issue after about well up

112
00:03:54,799 --> 00:03:56,560
to 30 days when they actually get the

113
00:03:56,560 --> 00:03:59,920
invoice from their telecom operator

114
00:03:59,920 --> 00:04:02,400
which states that they suddenly own like

115
00:04:02,400 --> 00:04:04,640
500 euros or something

116
00:04:04,640 --> 00:04:06,560
um actually this was even before the

117
00:04:06,560 --> 00:04:09,200
euros so let's say a thousand francs

118
00:04:09,200 --> 00:04:11,519
something i don't know

119
00:04:11,519 --> 00:04:13,920
now android did fix this issue and

120
00:04:13,920 --> 00:04:15,760
nowadays when an application tries to

121
00:04:15,760 --> 00:04:17,358
send a text message

122
00:04:17,358 --> 00:04:20,079
if it's sent to a premium service then

123
00:04:20,079 --> 00:04:22,400
we'll actually ask for confirmation

124
00:04:22,400 --> 00:04:24,000
so even if you have malware that has

125
00:04:24,000 --> 00:04:25,759
full control over sending text messages

126
00:04:25,759 --> 00:04:28,800
you would still get this pop-up

127
00:04:28,800 --> 00:04:31,040
internally by the way this list

128
00:04:31,040 --> 00:04:32,800
android has an internal list of all the

129
00:04:32,800 --> 00:04:34,400
premium text messages of all the

130
00:04:34,400 --> 00:04:36,400
countries so if you ever need that kind

131
00:04:36,400 --> 00:04:38,080
of information just look in the android

132
00:04:38,080 --> 00:04:40,400
source code and you have a full list of

133
00:04:40,400 --> 00:04:43,759
premium services for different countries

134
00:04:43,759 --> 00:04:46,639
now a much more recent example of basic

135
00:04:46,639 --> 00:04:49,280
malware is the subscription scams or

136
00:04:49,280 --> 00:04:51,440
sometimes called fleeceware

137
00:04:51,440 --> 00:04:53,360
the idea here is that you

138
00:04:53,360 --> 00:04:56,080
create a legitimate application in the

139
00:04:56,080 --> 00:04:58,639
example here it's a keyboard with magic

140
00:04:58,639 --> 00:05:01,440
tiles music games sometimes it's a qr

141
00:05:01,440 --> 00:05:02,639
code reader

142
00:05:02,639 --> 00:05:04,720
and the idea is that you have a

143
00:05:04,720 --> 00:05:07,360
free trial of three to seven days

144
00:05:07,360 --> 00:05:09,520
and after those after that trial period

145
00:05:09,520 --> 00:05:12,800
you actually get the premium version

146
00:05:12,800 --> 00:05:14,080
the difference between a trial version

147
00:05:14,080 --> 00:05:16,960
and a premium version of a qr scanner is

148
00:05:16,960 --> 00:05:18,560
very limited

149
00:05:18,560 --> 00:05:20,639
but the idea is that you start the trial

150
00:05:20,639 --> 00:05:22,560
period and if you don't do anything

151
00:05:22,560 --> 00:05:24,320
you're automatically converted into a

152
00:05:24,320 --> 00:05:25,600
subscription

153
00:05:25,600 --> 00:05:26,400
this

154
00:05:26,400 --> 00:05:29,199
subscription itself can be up to 80

155
00:05:29,199 --> 00:05:32,240
euros which is quite significant

156
00:05:32,240 --> 00:05:34,240
and the interesting part here is that if

157
00:05:34,240 --> 00:05:36,479
you remove the application even before

158
00:05:36,479 --> 00:05:38,960
the trial period ends you will still be

159
00:05:38,960 --> 00:05:41,440
converted to a premium subscription

160
00:05:41,440 --> 00:05:43,360
why is that well in order to stop the

161
00:05:43,360 --> 00:05:45,199
trial period you actually have to go

162
00:05:45,199 --> 00:05:47,199
into google play into the subscription

163
00:05:47,199 --> 00:05:49,840
tab and then remove that specific

164
00:05:49,840 --> 00:05:51,280
subscription

165
00:05:51,280 --> 00:05:53,120
some of these applications even require

166
00:05:53,120 --> 00:05:55,600
you to do it 24 hours before the end of

167
00:05:55,600 --> 00:05:56,880
the trial period

168
00:05:56,880 --> 00:05:57,600
so

169
00:05:57,600 --> 00:05:59,280
basically you're scamming a lot of

170
00:05:59,280 --> 00:06:02,080
people you do have a lot of complaints

171
00:06:02,080 --> 00:06:05,600
like just jeeps over here

172
00:06:05,600 --> 00:06:07,520
this application is still on the google

173
00:06:07,520 --> 00:06:09,759
play store you can look it up

174
00:06:09,759 --> 00:06:11,840
google it's it's a problem with both

175
00:06:11,840 --> 00:06:14,160
google and apple and the reason why

176
00:06:14,160 --> 00:06:16,160
they're not really doing anything

177
00:06:16,160 --> 00:06:17,199
against this

178
00:06:17,199 --> 00:06:19,199
is because well they make a lot of money

179
00:06:19,199 --> 00:06:20,400
based on this

180
00:06:20,400 --> 00:06:22,960
every user that gets scammed for 80

181
00:06:22,960 --> 00:06:26,560
euros will still pay 20 25 euros to

182
00:06:26,560 --> 00:06:28,479
google or to apple because they still

183
00:06:28,479 --> 00:06:31,840
get their 30 percent cut

184
00:06:31,840 --> 00:06:34,560
so quite a big problem and it exists

185
00:06:34,560 --> 00:06:38,800
both on android and ios

186
00:06:38,880 --> 00:06:41,600
we also have advertisement fraud or view

187
00:06:41,600 --> 00:06:42,639
fraud

188
00:06:42,639 --> 00:06:44,880
the concept here well there are two

189
00:06:44,880 --> 00:06:46,720
different parts to this

190
00:06:46,720 --> 00:06:49,199
either you spam the users with different

191
00:06:49,199 --> 00:06:52,080
advertisements and you show it in pop-up

192
00:06:52,080 --> 00:06:54,319
messages you show it in those messages

193
00:06:54,319 --> 00:06:56,080
you even show it on the lock screen

194
00:06:56,080 --> 00:06:58,479
which is also possible

195
00:06:58,479 --> 00:07:00,400
and of course the user is annoyed and

196
00:07:00,400 --> 00:07:01,680
will indeed

197
00:07:01,680 --> 00:07:03,360
view advertisements so the malicious

198
00:07:03,360 --> 00:07:06,960
application gets advertisement revenue

199
00:07:06,960 --> 00:07:08,160
or

200
00:07:08,160 --> 00:07:10,000
you don't show any advertisements to the

201
00:07:10,000 --> 00:07:11,680
user you just hide them underneath the

202
00:07:11,680 --> 00:07:13,520
game or something and you still collect

203
00:07:13,520 --> 00:07:15,599
the money so of course in the first case

204
00:07:15,599 --> 00:07:17,120
there's an impact on the user it's quite

205
00:07:17,120 --> 00:07:20,080
annoying in the second case um

206
00:07:20,080 --> 00:07:22,319
you're more right the malware author is

207
00:07:22,319 --> 00:07:24,960
more scamming the advertisement network

208
00:07:24,960 --> 00:07:27,759
which is less bad for the end user but

209
00:07:27,759 --> 00:07:30,400
still makes quite some money some of the

210
00:07:30,400 --> 00:07:33,120
most advanced android malwares

211
00:07:33,120 --> 00:07:35,039
were actually used to perform

212
00:07:35,039 --> 00:07:37,599
advertisement fraud so this might seem

213
00:07:37,599 --> 00:07:38,800
like a very

214
00:07:38,800 --> 00:07:39,840
small

215
00:07:39,840 --> 00:07:41,759
problem with a

216
00:07:41,759 --> 00:07:43,440
not a lot of money behind it

217
00:07:43,440 --> 00:07:44,479
but

218
00:07:44,479 --> 00:07:47,039
the shamwa framework for example has

219
00:07:47,039 --> 00:07:49,840
seven layers of obfuscation for uh in

220
00:07:49,840 --> 00:07:51,840
the end performing advertisement fraud

221
00:07:51,840 --> 00:07:53,759
so there's definitely a lot of money to

222
00:07:53,759 --> 00:07:56,000
be made from advertisement thrall

223
00:07:56,000 --> 00:07:58,319
sometimes it's even the advertisement

224
00:07:58,319 --> 00:08:00,800
framework itself so developers will

225
00:08:00,800 --> 00:08:03,120
include an sdk into their application to

226
00:08:03,120 --> 00:08:06,160
show ads and the advertisement framework

227
00:08:06,160 --> 00:08:08,240
itself will show for example multiple

228
00:08:08,240 --> 00:08:10,080
ads on top of each other so they will

229
00:08:10,080 --> 00:08:12,240
collect bounties for all those different

230
00:08:12,240 --> 00:08:14,400
ads on top of each other

231
00:08:14,400 --> 00:08:16,639
while the user only sees one single

232
00:08:16,639 --> 00:08:18,000
advertisement

233
00:08:18,000 --> 00:08:19,280
so that's a little bit

234
00:08:19,280 --> 00:08:21,520
in between the two different

235
00:08:21,520 --> 00:08:24,080
scenarios

236
00:08:24,080 --> 00:08:27,680
next up ransomware this was also briefly

237
00:08:27,680 --> 00:08:30,000
mentioned in federal stock this morning

238
00:08:30,000 --> 00:08:32,080
ransomware is not just a problem for

239
00:08:32,080 --> 00:08:34,640
normal computers for normal networks

240
00:08:34,640 --> 00:08:37,919
it's also a problem on android

241
00:08:37,919 --> 00:08:40,399
i have three levels here level one

242
00:08:40,399 --> 00:08:42,559
simple pop-ups so

243
00:08:42,559 --> 00:08:45,200
i'm fairly young i would say but i still

244
00:08:45,200 --> 00:08:47,200
remember that you were able to get a

245
00:08:47,200 --> 00:08:49,600
computer virus on your windows machine

246
00:08:49,600 --> 00:08:51,760
that just popped up a message saying

247
00:08:51,760 --> 00:08:53,839
we've identified child pornography on

248
00:08:53,839 --> 00:08:55,200
your device or maybe illegally

249
00:08:55,200 --> 00:08:58,000
downloaded movies please pay us 200

250
00:08:58,000 --> 00:09:00,240
euros and we won't prosecute you any

251
00:09:00,240 --> 00:09:02,560
further and the thing was themed as

252
00:09:02,560 --> 00:09:04,320
being from interpol something like that

253
00:09:04,320 --> 00:09:05,839
or the federal police

254
00:09:05,839 --> 00:09:07,519
and a lot of people actually were afraid

255
00:09:07,519 --> 00:09:09,920
and they actually transferred that money

256
00:09:09,920 --> 00:09:12,160
same thing exists on

257
00:09:12,160 --> 00:09:13,360
android

258
00:09:13,360 --> 00:09:15,680
i don't speak russian but my guess is

259
00:09:15,680 --> 00:09:17,120
kind of that that is what this is

260
00:09:17,120 --> 00:09:18,000
because

261
00:09:18,000 --> 00:09:19,519
you can see the photo below as well

262
00:09:19,519 --> 00:09:24,160
which is blurred uh or blurred image

263
00:09:24,160 --> 00:09:25,680
um it's

264
00:09:25,680 --> 00:09:27,360
it's exactly the same as on windows if

265
00:09:27,360 --> 00:09:29,120
you know what you're doing you can

266
00:09:29,120 --> 00:09:30,720
uninstall the application and it will

267
00:09:30,720 --> 00:09:33,120
just go away but if you're not tech

268
00:09:33,120 --> 00:09:35,680
savvy then well you will be

269
00:09:35,680 --> 00:09:36,399
quite

270
00:09:36,399 --> 00:09:38,480
alerted by this and you might actually

271
00:09:38,480 --> 00:09:39,640
pay the ransom

272
00:09:39,640 --> 00:09:41,040
[Music]

273
00:09:41,040 --> 00:09:44,160
level two actual ransomware so we use a

274
00:09:44,160 --> 00:09:45,760
bit of encryption

275
00:09:45,760 --> 00:09:47,519
um i think it was earlier this year or

276
00:09:47,519 --> 00:09:50,480
maybe 2020 2020 when there was a

277
00:09:50,480 --> 00:09:54,080
cyberpunk mobile game after uh cd

278
00:09:54,080 --> 00:09:57,040
projekt red finally released cyberpunk

279
00:09:57,040 --> 00:09:59,200
there were some applications

280
00:09:59,200 --> 00:10:01,279
which were well riding the wave of that

281
00:10:01,279 --> 00:10:02,800
popularity

282
00:10:02,800 --> 00:10:04,480
and even though you have very nice

283
00:10:04,480 --> 00:10:06,399
screenshots on the left

284
00:10:06,399 --> 00:10:07,760
well you don't see my mouse so that

285
00:10:07,760 --> 00:10:08,530
doesn't work

286
00:10:08,530 --> 00:10:11,600
[Music]

287
00:10:11,600 --> 00:10:13,760
though you all know which side is left i

288
00:10:13,760 --> 00:10:15,120
guess

289
00:10:15,120 --> 00:10:17,360
this one here very nice screenshots but

290
00:10:17,360 --> 00:10:19,040
as soon as you install the application

291
00:10:19,040 --> 00:10:21,200
it will request permission to access

292
00:10:21,200 --> 00:10:23,600
your local files which is not very

293
00:10:23,600 --> 00:10:25,680
strange because a lot of mobile apps ask

294
00:10:25,680 --> 00:10:26,399
for

295
00:10:26,399 --> 00:10:28,000
additional storage space to download

296
00:10:28,000 --> 00:10:29,040
graphics

297
00:10:29,040 --> 00:10:30,560
and then you get this

298
00:10:30,560 --> 00:10:33,440
little text which says well i've

299
00:10:33,440 --> 00:10:36,000
encrypted all of your files

300
00:10:36,000 --> 00:10:37,760
if you look at the files indeed you now

301
00:10:37,760 --> 00:10:40,240
have the code decrypt extension and they

302
00:10:40,240 --> 00:10:41,920
are actually encrypted

303
00:10:41,920 --> 00:10:44,079
just like like on windows or linux you

304
00:10:44,079 --> 00:10:46,880
have the range of very crappy ransomware

305
00:10:46,880 --> 00:10:48,399
which has a hard-coded key that's the

306
00:10:48,399 --> 00:10:50,480
same for everybody and it's easily

307
00:10:50,480 --> 00:10:54,720
decryptable up until full c2

308
00:10:54,720 --> 00:10:57,440
asymmetric encryption all that stuff

309
00:10:57,440 --> 00:10:58,640
where it's actually impossible to

310
00:10:58,640 --> 00:11:01,360
recover your files

311
00:11:01,360 --> 00:11:02,399
so

312
00:11:02,399 --> 00:11:05,440
also a problem on android

313
00:11:05,440 --> 00:11:07,360
finally

314
00:11:07,360 --> 00:11:10,240
on windows if your device is infected

315
00:11:10,240 --> 00:11:12,640
well it's pretty easy to do a full

316
00:11:12,640 --> 00:11:14,240
reinstall at least if you know what

317
00:11:14,240 --> 00:11:15,920
you're doing

318
00:11:15,920 --> 00:11:17,760
but on a smartphone you can actually

319
00:11:17,760 --> 00:11:18,560
well

320
00:11:18,560 --> 00:11:20,160
the impact becomes a little bit more

321
00:11:20,160 --> 00:11:21,839
severe

322
00:11:21,839 --> 00:11:24,320
android provides permissions various

323
00:11:24,320 --> 00:11:26,160
permissions and one of them is device

324
00:11:26,160 --> 00:11:27,600
administrator

325
00:11:27,600 --> 00:11:30,480
if an application is able to get device

326
00:11:30,480 --> 00:11:32,560
administrator permissions

327
00:11:32,560 --> 00:11:34,079
it can do a whole lot more than just

328
00:11:34,079 --> 00:11:35,519
encrypt files

329
00:11:35,519 --> 00:11:38,079
the device administrator permission

330
00:11:38,079 --> 00:11:40,720
is typically used for mdm software which

331
00:11:40,720 --> 00:11:42,240
will then for example make sure you have

332
00:11:42,240 --> 00:11:44,800
a decent password policy which will wipe

333
00:11:44,800 --> 00:11:46,880
your device remotely if you lost it

334
00:11:46,880 --> 00:11:48,320
stuff like that

335
00:11:48,320 --> 00:11:50,160
so there's this malware called double

336
00:11:50,160 --> 00:11:51,120
locker

337
00:11:51,120 --> 00:11:53,440
and it actually does two things

338
00:11:53,440 --> 00:11:57,440
it requests the administrator permission

339
00:11:57,440 --> 00:12:00,560
sorry that's the brick on beer

340
00:12:00,560 --> 00:12:02,480
it requests administer device

341
00:12:02,480 --> 00:12:04,240
administrator permissions

342
00:12:04,240 --> 00:12:07,600
and it actually encrypts your files now

343
00:12:07,600 --> 00:12:09,279
when it gets device administrator

344
00:12:09,279 --> 00:12:12,240
permissions it will lock your device and

345
00:12:12,240 --> 00:12:14,160
it will change your password because

346
00:12:14,160 --> 00:12:16,160
that's also something it could do

347
00:12:16,160 --> 00:12:18,000
so they will show the ransomware on the

348
00:12:18,000 --> 00:12:19,040
lock screen

349
00:12:19,040 --> 00:12:20,800
and if you don't pay up

350
00:12:20,800 --> 00:12:23,360
you won't be able to access your device

351
00:12:23,360 --> 00:12:25,279
if you're very tech savvy you know how

352
00:12:25,279 --> 00:12:26,959
to get into recovery mode and do a

353
00:12:26,959 --> 00:12:29,600
factory reset but for a lot of people

354
00:12:29,600 --> 00:12:31,440
they won't even get into their device

355
00:12:31,440 --> 00:12:33,519
they won't even be able to do a factory

356
00:12:33,519 --> 00:12:34,560
reset

357
00:12:34,560 --> 00:12:35,360
so

358
00:12:35,360 --> 00:12:37,600
the price of the ransom will then be in

359
00:12:37,600 --> 00:12:39,760
contrast to the price of the

360
00:12:39,760 --> 00:12:42,720
the device itself because if you

361
00:12:42,720 --> 00:12:44,160
don't know any better you think all this

362
00:12:44,160 --> 00:12:46,240
device is ready for the garbage

363
00:12:46,240 --> 00:12:48,639
and that's a really good incentive

364
00:12:48,639 --> 00:12:51,279
as well to actually well pay

365
00:12:51,279 --> 00:12:54,959
the ransom here in bitcoin

366
00:13:01,440 --> 00:13:03,200
all right

367
00:13:03,200 --> 00:13:06,000
next up is advanced malware so those

368
00:13:06,000 --> 00:13:08,399
were some basic examples we have

369
00:13:08,399 --> 00:13:10,639
premium text files we have advertisement

370
00:13:10,639 --> 00:13:11,920
fraud we have

371
00:13:11,920 --> 00:13:14,560
ransomware and

372
00:13:14,560 --> 00:13:17,519
the fleeceware right subscription scams

373
00:13:17,519 --> 00:13:19,200
but there's a lot more fun things that

374
00:13:19,200 --> 00:13:22,240
can be done regarding android malware

375
00:13:22,240 --> 00:13:24,160
so when i ask somebody right how do you

376
00:13:24,160 --> 00:13:26,000
think your banking application would be

377
00:13:26,000 --> 00:13:27,600
attacked or how do you think

378
00:13:27,600 --> 00:13:30,079
your smartphone will be attacked

379
00:13:30,079 --> 00:13:31,839
typically the answer will be

380
00:13:31,839 --> 00:13:34,399
the malware will try to attack my device

381
00:13:34,399 --> 00:13:36,480
it will root my device which means

382
00:13:36,480 --> 00:13:39,600
obtaining administrative permissions

383
00:13:39,600 --> 00:13:42,240
and will just start modifying everything

384
00:13:42,240 --> 00:13:44,880
and start stealing data

385
00:13:44,880 --> 00:13:46,560
there are malware samples that actually

386
00:13:46,560 --> 00:13:49,600
do this they contain exploits for

387
00:13:49,600 --> 00:13:53,600
common vulnerabilities on android

388
00:13:53,600 --> 00:13:56,959
but given the very diverse android

389
00:13:56,959 --> 00:13:58,399
ecosystem that's actually quite

390
00:13:58,399 --> 00:14:01,120
difficult it's even more difficult to do

391
00:14:01,120 --> 00:14:03,440
more easy to do on ios because there's

392
00:14:03,440 --> 00:14:06,240
just one ios version basically

393
00:14:06,240 --> 00:14:08,320
and so some malwares do actually do this

394
00:14:08,320 --> 00:14:11,839
but this is really not the major part

395
00:14:11,839 --> 00:14:12,880
most

396
00:14:12,880 --> 00:14:13,920
mobile

397
00:14:13,920 --> 00:14:16,320
malware actually abuse existing

398
00:14:16,320 --> 00:14:17,600
permissions

399
00:14:17,600 --> 00:14:19,680
so we well if you have an android you

400
00:14:19,680 --> 00:14:21,920
know all of these pop-ups oh ios has

401
00:14:21,920 --> 00:14:23,440
them too of course

402
00:14:23,440 --> 00:14:26,399
access to sms messages device location

403
00:14:26,399 --> 00:14:29,120
contacts or location

404
00:14:29,120 --> 00:14:30,639
but there are a few other

405
00:14:30,639 --> 00:14:32,079
permissions that are quite interesting

406
00:14:32,079 --> 00:14:34,160
for mobile malware to have i've already

407
00:14:34,160 --> 00:14:36,000
given one example which is the device

408
00:14:36,000 --> 00:14:37,600
administrator

409
00:14:37,600 --> 00:14:39,519
but that's actually only useful for

410
00:14:39,519 --> 00:14:42,240
ransomware

411
00:14:42,240 --> 00:14:43,199
another

412
00:14:43,199 --> 00:14:44,480
very interesting

413
00:14:44,480 --> 00:14:46,079
access

414
00:14:46,079 --> 00:14:48,480
permission on android is the

415
00:14:48,480 --> 00:14:50,399
accessibility service

416
00:14:50,399 --> 00:14:52,880
so accessibility allows you to

417
00:14:52,880 --> 00:14:55,839
create a new application that can help

418
00:14:55,839 --> 00:14:57,360
certain people with specific

419
00:14:57,360 --> 00:14:59,279
disabilities to still use their

420
00:14:59,279 --> 00:15:00,720
smartphone

421
00:15:00,720 --> 00:15:02,480
the example here is the talkback

422
00:15:02,480 --> 00:15:04,560
application which is a an official

423
00:15:04,560 --> 00:15:06,240
application by

424
00:15:06,240 --> 00:15:07,360
google

425
00:15:07,360 --> 00:15:09,360
and what it can do is it can read out

426
00:15:09,360 --> 00:15:11,440
loud everything that's on the screen

427
00:15:11,440 --> 00:15:13,839
so if you're visually impaired it can

428
00:15:13,839 --> 00:15:16,399
read the screen

429
00:15:16,399 --> 00:15:18,639
it can also touch buttons for you so you

430
00:15:18,639 --> 00:15:20,959
can actually talk to it and say press

431
00:15:20,959 --> 00:15:22,639
second button or

432
00:15:22,639 --> 00:15:24,880
next next next press

433
00:15:24,880 --> 00:15:26,720
something like that

434
00:15:26,720 --> 00:15:28,959
and that means that if an application

435
00:15:28,959 --> 00:15:31,120
has access to this permission

436
00:15:31,120 --> 00:15:33,040
it is basically able to fully interact

437
00:15:33,040 --> 00:15:35,440
with your device because it can read

438
00:15:35,440 --> 00:15:37,600
everything that's on the screen and it

439
00:15:37,600 --> 00:15:41,440
can click stuff that's on screen

440
00:15:41,440 --> 00:15:43,600
very good for people with disabilities

441
00:15:43,600 --> 00:15:46,560
but well pretty dangerous in the hands

442
00:15:46,560 --> 00:15:47,730
of a mobile malware

443
00:15:47,730 --> 00:15:48,959
[Music]

444
00:15:48,959 --> 00:15:50,560
of course you think well i would never

445
00:15:50,560 --> 00:15:52,240
give this permission to a random

446
00:15:52,240 --> 00:15:55,120
application right we're all tech savvy

447
00:15:55,120 --> 00:15:58,000
users here why would we ever do that so

448
00:15:58,000 --> 00:16:01,519
let's say we are using our our device

449
00:16:01,519 --> 00:16:04,560
and we suddenly get this popup

450
00:16:04,560 --> 00:16:06,959
for applications to work properly please

451
00:16:06,959 --> 00:16:09,040
enable the google service

452
00:16:09,040 --> 00:16:11,759
this makes sense devices android is made

453
00:16:11,759 --> 00:16:14,079
by google a google service should

454
00:16:14,079 --> 00:16:16,240
probably help me so you click the ok

455
00:16:16,240 --> 00:16:17,440
button

456
00:16:17,440 --> 00:16:20,720
and you get this pop-up

457
00:16:20,720 --> 00:16:21,600
sorry

458
00:16:21,600 --> 00:16:23,920
um the accessibility section of the

459
00:16:23,920 --> 00:16:25,839
settings pops up

460
00:16:25,839 --> 00:16:27,920
and in the middle you see well google

461
00:16:27,920 --> 00:16:30,240
service is currently off

462
00:16:30,240 --> 00:16:32,000
it would make sense if we enable this

463
00:16:32,000 --> 00:16:33,759
setting right

464
00:16:33,759 --> 00:16:35,440
it doesn't make sense that it's disabled

465
00:16:35,440 --> 00:16:38,160
in the first place but what do i know

466
00:16:38,160 --> 00:16:39,839
so you click the google service then you

467
00:16:39,839 --> 00:16:42,880
get this long legal mumbo jumbo

468
00:16:42,880 --> 00:16:45,920
nobody ever reads this of course

469
00:16:45,920 --> 00:16:47,600
and at the top you have the off button

470
00:16:47,600 --> 00:16:49,120
which you click

471
00:16:49,120 --> 00:16:51,920
and finally you get an overview of

472
00:16:51,920 --> 00:16:53,759
the google service and what it would be

473
00:16:53,759 --> 00:16:55,680
able to do if you actually give this

474
00:16:55,680 --> 00:16:57,360
permission

475
00:16:57,360 --> 00:16:59,759
it's a google service once again we had

476
00:16:59,759 --> 00:17:02,079
the legal disclaimer looks legit so we

477
00:17:02,079 --> 00:17:03,199
click ok

478
00:17:03,199 --> 00:17:05,119
and unfortunately then the damage is

479
00:17:05,119 --> 00:17:06,959
done

480
00:17:06,959 --> 00:17:08,880
so this is quite a successful social

481
00:17:08,880 --> 00:17:10,319
engineering attack because all of these

482
00:17:10,319 --> 00:17:12,480
screens are from a mobile malware

483
00:17:12,480 --> 00:17:14,400
they're not from an official google

484
00:17:14,400 --> 00:17:17,439
service or google app

485
00:17:17,439 --> 00:17:19,919
and the reason why this is a pretty

486
00:17:19,919 --> 00:17:21,439
convincing

487
00:17:21,439 --> 00:17:22,640
phishing attack

488
00:17:22,640 --> 00:17:24,640
or social engineering attack is because

489
00:17:24,640 --> 00:17:26,799
all of the areas in red are on the full

490
00:17:26,799 --> 00:17:29,039
control of the malware so any

491
00:17:29,039 --> 00:17:30,960
application can actually spawn

492
00:17:30,960 --> 00:17:33,600
a pop-up message which will trigger some

493
00:17:33,600 --> 00:17:34,720
code

494
00:17:34,720 --> 00:17:36,080
you can automatically open the settings

495
00:17:36,080 --> 00:17:37,840
window here

496
00:17:37,840 --> 00:17:39,600
and the google service name is also

497
00:17:39,600 --> 00:17:41,840
under full control of the attacker it's

498
00:17:41,840 --> 00:17:43,440
something you define inside your

499
00:17:43,440 --> 00:17:44,960
application

500
00:17:44,960 --> 00:17:46,720
you have the name again

501
00:17:46,720 --> 00:17:48,400
normally there's an explanation here

502
00:17:48,400 --> 00:17:50,160
about why you want accessibility

503
00:17:50,160 --> 00:17:51,200
services

504
00:17:51,200 --> 00:17:53,120
but i actually think that this approach

505
00:17:53,120 --> 00:17:54,960
with the legal mumbo jumbo gives a lot

506
00:17:54,960 --> 00:17:58,080
of credibility to the malware

507
00:17:58,080 --> 00:18:00,720
much more than if it would say be post

508
00:18:00,720 --> 00:18:03,280
please enable which is something

509
00:18:03,280 --> 00:18:04,880
i'll come back to

510
00:18:04,880 --> 00:18:06,160
and then finally we have the google

511
00:18:06,160 --> 00:18:07,360
service name

512
00:18:07,360 --> 00:18:08,640
again

513
00:18:08,640 --> 00:18:10,799
and all in all this is i think this is

514
00:18:10,799 --> 00:18:13,520
quite convincing

515
00:18:13,520 --> 00:18:15,120
a second permission

516
00:18:15,120 --> 00:18:16,880
that is quite interesting for mobile

517
00:18:16,880 --> 00:18:18,880
malware is the

518
00:18:18,880 --> 00:18:21,120
drawing on top or the official name is

519
00:18:21,120 --> 00:18:23,280
the system alert window

520
00:18:23,280 --> 00:18:26,320
which already sounds rather dangerous

521
00:18:26,320 --> 00:18:28,559
um i can read from the the documentation

522
00:18:28,559 --> 00:18:30,640
here so this light allows an app to

523
00:18:30,640 --> 00:18:33,760
create a window using a specific type

524
00:18:33,760 --> 00:18:37,039
shown on top of all other applications

525
00:18:37,039 --> 00:18:39,200
very few apps should use this permission

526
00:18:39,200 --> 00:18:40,799
these windows are intended for system

527
00:18:40,799 --> 00:18:43,200
level interaction with the user

528
00:18:43,200 --> 00:18:44,880
now this permission has been around

529
00:18:44,880 --> 00:18:47,360
since api level one so the first version

530
00:18:47,360 --> 00:18:49,600
of android and it's actually used for

531
00:18:49,600 --> 00:18:52,400
legitimate use cases so on the left we

532
00:18:52,400 --> 00:18:54,799
have the facebook chat heads and if

533
00:18:54,799 --> 00:18:57,280
you've ever used this well facebook chat

534
00:18:57,280 --> 00:18:59,280
heads will always

535
00:18:59,280 --> 00:19:01,840
be on top of any other application you

536
00:19:01,840 --> 00:19:05,200
have open it allows you easy access to

537
00:19:05,200 --> 00:19:06,720
those conversations

538
00:19:06,720 --> 00:19:09,600
and it's well just very convenient from

539
00:19:09,600 --> 00:19:12,160
for the end user

540
00:19:12,160 --> 00:19:14,400
on the right we have twilight

541
00:19:14,400 --> 00:19:16,720
twilight was a blue light filter or

542
00:19:16,720 --> 00:19:18,880
maybe it still exists actually

543
00:19:18,880 --> 00:19:20,640
nowadays android has an internal blue

544
00:19:20,640 --> 00:19:24,400
light filter to put on at night to

545
00:19:24,400 --> 00:19:26,400
to well to help your eyes at night to

546
00:19:26,400 --> 00:19:27,679
not stay awake

547
00:19:27,679 --> 00:19:29,600
but originally you had twilight they

548
00:19:29,600 --> 00:19:31,840
used this permission to overlay a

549
00:19:31,840 --> 00:19:35,200
red window on top of well everything and

550
00:19:35,200 --> 00:19:36,799
it would automatically filter out the

551
00:19:36,799 --> 00:19:39,120
blue light so both of these use cases

552
00:19:39,120 --> 00:19:42,000
are quite convenient and

553
00:19:42,000 --> 00:19:44,160
useful

554
00:19:44,160 --> 00:19:45,679
android is

555
00:19:45,679 --> 00:19:47,760
well android has

556
00:19:47,760 --> 00:19:50,160
introduced a bubbles api in more recent

557
00:19:50,160 --> 00:19:53,280
android versions but it's not as

558
00:19:53,280 --> 00:19:56,000
open yet as what you could achieve with

559
00:19:56,000 --> 00:19:58,880
overlay windows

560
00:19:59,120 --> 00:20:01,039
and it will take quite some time

561
00:20:01,039 --> 00:20:03,120
for android to convince developers to

562
00:20:03,120 --> 00:20:04,799
move to the bubbles api

563
00:20:04,799 --> 00:20:07,200
and applications like twilight

564
00:20:07,200 --> 00:20:08,799
actually won't even be able to go to the

565
00:20:08,799 --> 00:20:10,559
bubbles api which is specifically

566
00:20:10,559 --> 00:20:13,200
developed for conversations

567
00:20:13,200 --> 00:20:15,120
so unfortunately the system left window

568
00:20:15,120 --> 00:20:18,000
will be available for quite some time to

569
00:20:18,000 --> 00:20:21,000
come

570
00:20:22,159 --> 00:20:25,039
well i'm going to see

571
00:20:25,520 --> 00:20:27,280
joanna blank

572
00:20:27,280 --> 00:20:29,360
right so on android you actually have

573
00:20:29,360 --> 00:20:31,200
three levels of permissions you have

574
00:20:31,200 --> 00:20:32,880
normal permissions which are

575
00:20:32,880 --> 00:20:35,039
automatically granted to an application

576
00:20:35,039 --> 00:20:36,400
which is

577
00:20:36,400 --> 00:20:38,720
vibrating flashlight

578
00:20:38,720 --> 00:20:40,480
internet

579
00:20:40,480 --> 00:20:42,320
bluetooth i think

580
00:20:42,320 --> 00:20:43,679
then you have dangerous level

581
00:20:43,679 --> 00:20:45,200
permissions which actually require

582
00:20:45,200 --> 00:20:47,200
confirmation from the user that you

583
00:20:47,200 --> 00:20:48,640
actually want to give this permission so

584
00:20:48,640 --> 00:20:50,080
that's contact information text

585
00:20:50,080 --> 00:20:51,840
messaging call logs

586
00:20:51,840 --> 00:20:53,440
uh stuff like that

587
00:20:53,440 --> 00:20:55,200
and then you have a separate category

588
00:20:55,200 --> 00:20:58,720
which is called above dangerous level

589
00:20:58,720 --> 00:21:01,039
permissions and system alerts we know is

590
00:21:01,039 --> 00:21:02,640
one of those

591
00:21:02,640 --> 00:21:06,159
what's very interesting here is that

592
00:21:06,159 --> 00:21:07,520
you can't just

593
00:21:07,520 --> 00:21:09,200
ask the user for permission you actually

594
00:21:09,200 --> 00:21:11,679
have to send them to a specific settings

595
00:21:11,679 --> 00:21:13,120
window which is what we saw for

596
00:21:13,120 --> 00:21:15,520
accessibility as well

597
00:21:15,520 --> 00:21:17,600
but if your application is in the google

598
00:21:17,600 --> 00:21:19,760
play store you automatically get this

599
00:21:19,760 --> 00:21:21,120
permission

600
00:21:21,120 --> 00:21:22,799
so this is specific for system alert

601
00:21:22,799 --> 00:21:25,039
window if you are approved by google to

602
00:21:25,039 --> 00:21:26,720
be in the google play store you

603
00:21:26,720 --> 00:21:28,720
automatically get the system alert

604
00:21:28,720 --> 00:21:31,600
window permission if you request it so

605
00:21:31,600 --> 00:21:34,799
if malware is somehow able to circumvent

606
00:21:34,799 --> 00:21:36,640
the google play

607
00:21:36,640 --> 00:21:38,320
anti-virus scanners

608
00:21:38,320 --> 00:21:39,520
you will automatically get this

609
00:21:39,520 --> 00:21:40,960
permission

610
00:21:40,960 --> 00:21:43,039
now these two permissions accessibility

611
00:21:43,039 --> 00:21:45,679
and system alert window very interesting

612
00:21:45,679 --> 00:21:48,720
but what can we do with

613
00:21:48,720 --> 00:21:50,960
these well with combination

614
00:21:50,960 --> 00:21:52,720
so quite some years ago a few

615
00:21:52,720 --> 00:21:54,880
researchers figured out the cloak and

616
00:21:54,880 --> 00:21:57,200
dagger attack

617
00:21:57,200 --> 00:21:58,480
i'm using facebook here because they

618
00:21:58,480 --> 00:22:00,880
also used facebook in their example so

619
00:22:00,880 --> 00:22:02,480
let's say you open the facebook

620
00:22:02,480 --> 00:22:05,840
application and you see the login screen

621
00:22:05,840 --> 00:22:07,120
you wouldn't think twice about it you

622
00:22:07,120 --> 00:22:08,720
would just enter your email or phone

623
00:22:08,720 --> 00:22:11,039
number and your password and you would

624
00:22:11,039 --> 00:22:13,440
click on login

625
00:22:13,440 --> 00:22:14,400
now

626
00:22:14,400 --> 00:22:16,400
what the malware actually does is it

627
00:22:16,400 --> 00:22:18,159
uses the system

628
00:22:18,159 --> 00:22:20,480
overlay the system alert window to

629
00:22:20,480 --> 00:22:23,360
actually put a transparent window on top

630
00:22:23,360 --> 00:22:25,919
of the active application so the malware

631
00:22:25,919 --> 00:22:27,600
would create the screen

632
00:22:27,600 --> 00:22:30,240
on the right which simply contains

633
00:22:30,240 --> 00:22:32,559
a copied portion of the application

634
00:22:32,559 --> 00:22:35,679
which includes the username and password

635
00:22:35,679 --> 00:22:38,320
and then also a login button

636
00:22:38,320 --> 00:22:40,320
so when the user would actually fill in

637
00:22:40,320 --> 00:22:42,559
their credentials and click login

638
00:22:42,559 --> 00:22:45,120
well it would use accessibility to take

639
00:22:45,120 --> 00:22:46,320
those values

640
00:22:46,320 --> 00:22:48,080
and enter them into the original

641
00:22:48,080 --> 00:22:50,559
application so after clicking login you

642
00:22:50,559 --> 00:22:52,559
would automatically also log into the

643
00:22:52,559 --> 00:22:55,280
facebook application so it's a full man

644
00:22:55,280 --> 00:22:58,559
in the middle on well the view stack of

645
00:22:58,559 --> 00:22:59,919
your device

646
00:22:59,919 --> 00:23:02,559
and this is incredibly difficult to spot

647
00:23:02,559 --> 00:23:04,799
if not impossible because

648
00:23:04,799 --> 00:23:06,000
as soon as you press the home or

649
00:23:06,000 --> 00:23:07,360
whatever the

650
00:23:07,360 --> 00:23:09,600
transparent window would also disappear

651
00:23:09,600 --> 00:23:11,360
and you just wouldn't know that there's

652
00:23:11,360 --> 00:23:13,520
another view on top of the

653
00:23:13,520 --> 00:23:16,400
targeted application

654
00:23:16,400 --> 00:23:19,120
right so let's take a look at some

655
00:23:19,120 --> 00:23:22,080
more specific examples of malware that

656
00:23:22,080 --> 00:23:24,320
is actually abusing these permissions

657
00:23:24,320 --> 00:23:26,320
to attack well financial applications

658
00:23:26,320 --> 00:23:29,600
and to attack belgium

659
00:23:29,600 --> 00:23:34,159
so in may 2021 we got this message here

660
00:23:34,159 --> 00:23:36,720
more than 9000 phones hacked by fake b

661
00:23:36,720 --> 00:23:39,039
post text messages

662
00:23:39,039 --> 00:23:40,559
i know i should have put the meme here

663
00:23:40,559 --> 00:23:42,559
for over 9000 but

664
00:23:42,559 --> 00:23:45,039
you guys can just imagine it

665
00:23:45,039 --> 00:23:47,279
so over 9000 phones were hacked by fake

666
00:23:47,279 --> 00:23:49,760
p post text messages

667
00:23:49,760 --> 00:23:51,360
i've had i've received a lot of these

668
00:23:51,360 --> 00:23:52,720
text messages

669
00:23:52,720 --> 00:23:55,360
most of them are actually filtered by my

670
00:23:55,360 --> 00:23:57,919
device automatically some of you might

671
00:23:57,919 --> 00:23:59,840
even not know it because in the text

672
00:23:59,840 --> 00:24:02,720
messaging section there's also a

673
00:24:02,720 --> 00:24:03,760
a

674
00:24:03,760 --> 00:24:05,600
tab which actually does collect quite

675
00:24:05,600 --> 00:24:07,919
some text messages

676
00:24:07,919 --> 00:24:09,360
even if you have an iphone of course you

677
00:24:09,360 --> 00:24:11,760
still get these text messages

678
00:24:11,760 --> 00:24:14,159
some of them contain simple phishing

679
00:24:14,159 --> 00:24:15,840
asking for credentials

680
00:24:15,840 --> 00:24:17,600
some of them actually contained a link

681
00:24:17,600 --> 00:24:20,880
to an android mobile application

682
00:24:20,880 --> 00:24:23,200
so what happens if you click one of

683
00:24:23,200 --> 00:24:24,799
those links download a mobile

684
00:24:24,799 --> 00:24:27,200
application and install it

685
00:24:27,200 --> 00:24:28,320
so

686
00:24:28,320 --> 00:24:30,960
these screenshots are very similar to

687
00:24:30,960 --> 00:24:32,559
what i showed earlier

688
00:24:32,559 --> 00:24:35,279
on the left we have well the original

689
00:24:35,279 --> 00:24:37,679
view of the application which actually

690
00:24:37,679 --> 00:24:39,039
tries to explain why they need

691
00:24:39,039 --> 00:24:41,679
accessibility how you enable it

692
00:24:41,679 --> 00:24:43,360
all that stuff

693
00:24:43,360 --> 00:24:45,600
if you click this button

694
00:24:45,600 --> 00:24:47,919
you would go to the accessibility window

695
00:24:47,919 --> 00:24:49,760
unless you click it within five seconds

696
00:24:49,760 --> 00:24:51,919
and then it will say no no please read

697
00:24:51,919 --> 00:24:53,200
the screen first before you click

698
00:24:53,200 --> 00:24:54,559
continue

699
00:24:54,559 --> 00:24:55,919
which is quite annoying when you're

700
00:24:55,919 --> 00:24:58,159
reverse engineering the thing

701
00:24:58,159 --> 00:25:00,480
so we click next it will show the

702
00:25:00,480 --> 00:25:02,880
accessibility list of all the features

703
00:25:02,880 --> 00:25:04,480
and we can see here that there's a b

704
00:25:04,480 --> 00:25:07,840
post service now which is turned off um

705
00:25:07,840 --> 00:25:09,440
there's also an evil service which i

706
00:25:09,440 --> 00:25:11,520
created myself and a screen loading

707
00:25:11,520 --> 00:25:13,120
service which i'll talk about in a few

708
00:25:13,120 --> 00:25:14,400
slides

709
00:25:14,400 --> 00:25:16,480
once you click the bpost

710
00:25:16,480 --> 00:25:17,440
service

711
00:25:17,440 --> 00:25:18,559
they didn't

712
00:25:18,559 --> 00:25:20,400
show an explanation of why they need the

713
00:25:20,400 --> 00:25:22,400
service

714
00:25:22,400 --> 00:25:23,840
in general they didn't put too much

715
00:25:23,840 --> 00:25:25,840
effort into attacking

716
00:25:25,840 --> 00:25:27,279
belgium

717
00:25:27,279 --> 00:25:29,679
so no description provided

718
00:25:29,679 --> 00:25:31,039
and then they are waiting for you to

719
00:25:31,039 --> 00:25:33,600
click this button here

720
00:25:33,600 --> 00:25:34,799
as long as you haven't clicked the

721
00:25:34,799 --> 00:25:37,039
button yet the device will be super

722
00:25:37,039 --> 00:25:39,440
annoying because it will show these

723
00:25:39,440 --> 00:25:41,760
popups the toast messages at the bottom

724
00:25:41,760 --> 00:25:44,480
and they will give you notifications at

725
00:25:44,480 --> 00:25:45,360
the top

726
00:25:45,360 --> 00:25:47,039
and the device will just continue to

727
00:25:47,039 --> 00:25:49,200
vibrate and vibrate and vibrate

728
00:25:49,200 --> 00:25:50,320
until you

729
00:25:50,320 --> 00:25:52,320
turn on accessibility service

730
00:25:52,320 --> 00:25:55,039
once again something super annoying when

731
00:25:55,039 --> 00:25:56,320
the device is laying there and you're

732
00:25:56,320 --> 00:25:59,600
trying to reverse engineer the malware

733
00:25:59,600 --> 00:26:03,279
so eventually you click allow

734
00:26:03,279 --> 00:26:04,880
the application will just close and it

735
00:26:04,880 --> 00:26:07,840
will give a small pop-up message stating

736
00:26:07,840 --> 00:26:09,200
that

737
00:26:09,200 --> 00:26:10,880
system service not supported for this

738
00:26:10,880 --> 00:26:12,960
device something it's just something

739
00:26:12,960 --> 00:26:15,279
generic where you where you as the user

740
00:26:15,279 --> 00:26:17,279
would think uh okay something failed i

741
00:26:17,279 --> 00:26:19,440
don't know i'll just continue with my

742
00:26:19,440 --> 00:26:20,720
life

743
00:26:20,720 --> 00:26:24,240
so let's take a closer look at the

744
00:26:24,240 --> 00:26:26,559
application itself

745
00:26:26,559 --> 00:26:28,480
so the main application that you get

746
00:26:28,480 --> 00:26:30,640
from the phishing url

747
00:26:30,640 --> 00:26:31,840
it's actually

748
00:26:31,840 --> 00:26:34,400
heavily encrypted heavily protected

749
00:26:34,400 --> 00:26:36,880
heavily obfuscated

750
00:26:36,880 --> 00:26:38,960
the older versions used a single

751
00:26:38,960 --> 00:26:41,279
obfuscator but it was unicode

752
00:26:41,279 --> 00:26:43,120
obfuscation so i don't know that's

753
00:26:43,120 --> 00:26:45,520
probably not readable on the slide here

754
00:26:45,520 --> 00:26:47,679
unicode obfuscation is quite annoying

755
00:26:47,679 --> 00:26:50,159
because for example they also have

756
00:26:50,159 --> 00:26:52,559
right to left converters so your method

757
00:26:52,559 --> 00:26:54,880
name starts and then halfway it goes the

758
00:26:54,880 --> 00:26:56,799
other way again

759
00:26:56,799 --> 00:26:58,640
stuff like that a lot of

760
00:26:58,640 --> 00:27:00,400
rectangular squares and stuff you just

761
00:27:00,400 --> 00:27:02,240
can't read

762
00:27:02,240 --> 00:27:04,720
so that's quite annoying and the more

763
00:27:04,720 --> 00:27:07,200
recent versions like 4.1

764
00:27:07,200 --> 00:27:09,520
they stopped using unicode which i was

765
00:27:09,520 --> 00:27:11,039
thankful for but they did use a

766
00:27:11,039 --> 00:27:12,640
combination of at least two different

767
00:27:12,640 --> 00:27:15,120
types of obfuscated

768
00:27:15,120 --> 00:27:17,120
so quite annoying as well

769
00:27:17,120 --> 00:27:18,799
they also use string encryption which

770
00:27:18,799 --> 00:27:20,960
makes reverse engineering it's again a

771
00:27:20,960 --> 00:27:23,360
little bit more difficult and also a lot

772
00:27:23,360 --> 00:27:25,679
of java reflection so the combination of

773
00:27:25,679 --> 00:27:26,880
these two

774
00:27:26,880 --> 00:27:28,960
makes it so that it's even difficult to

775
00:27:28,960 --> 00:27:31,679
figure out which android apis or system

776
00:27:31,679 --> 00:27:34,000
apis that the application is using

777
00:27:34,000 --> 00:27:35,440
normally you can

778
00:27:35,440 --> 00:27:37,200
figure out quite some stuff based on the

779
00:27:37,200 --> 00:27:39,840
actual interaction with the official api

780
00:27:39,840 --> 00:27:41,760
but if everything's obfuscated and

781
00:27:41,760 --> 00:27:44,559
reflection is used then static analysis

782
00:27:44,559 --> 00:27:47,120
will be incredibly tedious

783
00:27:47,120 --> 00:27:49,440
so you typically go to a

784
00:27:49,440 --> 00:27:52,399
static combination with dynamic analysis

785
00:27:52,399 --> 00:27:54,080
and then go back and forth the entire

786
00:27:54,080 --> 00:27:55,600
time

787
00:27:55,600 --> 00:27:56,799
the first

788
00:27:56,799 --> 00:27:59,840
sample i investigated also contained the

789
00:27:59,840 --> 00:28:03,760
entire whatsapp codebase

790
00:28:03,760 --> 00:28:05,919
whatsapp is huge it's facebook of course

791
00:28:05,919 --> 00:28:08,399
it's huge

792
00:28:08,480 --> 00:28:10,480
on android it's actually very easy to

793
00:28:10,480 --> 00:28:13,039
take an application disassemble it add

794
00:28:13,039 --> 00:28:15,200
some code reassemble it and sign it

795
00:28:15,200 --> 00:28:18,559
again the original code would still work

796
00:28:18,559 --> 00:28:20,000
even though the

797
00:28:20,000 --> 00:28:21,520
well as you can see here the bbost

798
00:28:21,520 --> 00:28:23,520
application doesn't even use it

799
00:28:23,520 --> 00:28:25,600
so the main purpose there is just to

800
00:28:25,600 --> 00:28:28,159
make it more difficult for an

801
00:28:28,159 --> 00:28:29,760
reverse engineer to figure out what is

802
00:28:29,760 --> 00:28:31,360
happening

803
00:28:31,360 --> 00:28:32,880
the plus side here is that if you can

804
00:28:32,880 --> 00:28:34,799
identify the exact version of whatsapp

805
00:28:34,799 --> 00:28:35,919
for example

806
00:28:35,919 --> 00:28:38,080
you can disassemble both applications

807
00:28:38,080 --> 00:28:39,360
you can compare them and you can figure

808
00:28:39,360 --> 00:28:42,240
out which code has been added to

809
00:28:42,240 --> 00:28:45,279
the malicious sample

810
00:28:45,279 --> 00:28:48,080
so after a lot of reverse engineering um

811
00:28:48,080 --> 00:28:50,080
i figured out that well the initial

812
00:28:50,080 --> 00:28:51,039
dropper

813
00:28:51,039 --> 00:28:53,039
only does one thing

814
00:28:53,039 --> 00:28:55,200
which is it loads a decrypted text file

815
00:28:55,200 --> 00:28:57,200
which contains the actual payload so on

816
00:28:57,200 --> 00:28:59,200
android it's possible to

817
00:28:59,200 --> 00:29:00,799
load external code you can either

818
00:29:00,799 --> 00:29:04,000
download it from a c2 server or you can

819
00:29:04,000 --> 00:29:06,240
have it encrypted in your apk file

820
00:29:06,240 --> 00:29:08,240
inside the application itself and then

821
00:29:08,240 --> 00:29:10,559
you can decrypt it and load it to offer

822
00:29:10,559 --> 00:29:12,880
additional functionality

823
00:29:12,880 --> 00:29:14,559
the interesting part here is that the

824
00:29:14,559 --> 00:29:16,000
only thing that's protecting normal

825
00:29:16,000 --> 00:29:18,080
applications from doing this and thus

826
00:29:18,080 --> 00:29:20,320
downloading extra malicious code is the

827
00:29:20,320 --> 00:29:22,080
google play store so if you try to

828
00:29:22,080 --> 00:29:24,240
upload an application to google play

829
00:29:24,240 --> 00:29:26,640
store they will try to detect if you are

830
00:29:26,640 --> 00:29:27,760
actually

831
00:29:27,760 --> 00:29:29,919
dynamically loading code

832
00:29:29,919 --> 00:29:31,840
that means that any application which is

833
00:29:31,840 --> 00:29:33,600
loaded outside of the google play store

834
00:29:33,600 --> 00:29:36,399
such as through phishing

835
00:29:36,399 --> 00:29:38,480
is free to just download extra code to

836
00:29:38,480 --> 00:29:40,640
download additional modules from ac2

837
00:29:40,640 --> 00:29:43,600
server to decrypt stuff load stuff

838
00:29:43,600 --> 00:29:46,000
all that interesting stuff

839
00:29:46,000 --> 00:29:48,720
now an additional nice thing here about

840
00:29:48,720 --> 00:29:50,159
flubot

841
00:29:50,159 --> 00:29:53,120
is that it did not remove the decrypted

842
00:29:53,120 --> 00:29:55,279
text file after actually loading it so

843
00:29:55,279 --> 00:29:57,600
what you will see for malware is

844
00:29:57,600 --> 00:29:59,600
let's say take on windows they will load

845
00:29:59,600 --> 00:30:01,600
an encrypted file they will decrypt it

846
00:30:01,600 --> 00:30:04,399
in memory and then jump to that payload

847
00:30:04,399 --> 00:30:07,200
on android this is actually possible but

848
00:30:07,200 --> 00:30:10,480
the developers of this flewbot

849
00:30:10,480 --> 00:30:12,399
didn't take that into account and if you

850
00:30:12,399 --> 00:30:14,399
simply run the application and then use

851
00:30:14,399 --> 00:30:16,320
adb shell to get a terminal on the

852
00:30:16,320 --> 00:30:17,279
device

853
00:30:17,279 --> 00:30:19,360
and just navigate to the application

854
00:30:19,360 --> 00:30:21,520
folder you can just find a text file

855
00:30:21,520 --> 00:30:25,440
there which contains the decrypted goat

856
00:30:25,440 --> 00:30:28,240
it is hidden as a json file but well

857
00:30:28,240 --> 00:30:30,320
a simple file

858
00:30:30,320 --> 00:30:31,919
command will show you that it's actually

859
00:30:31,919 --> 00:30:33,600
a text file

860
00:30:33,600 --> 00:30:34,720
so

861
00:30:34,720 --> 00:30:36,960
if we actually analyze the payload all

862
00:30:36,960 --> 00:30:38,399
right so we had the dropper application

863
00:30:38,399 --> 00:30:40,320
which was heavily obfuscated and now we

864
00:30:40,320 --> 00:30:42,799
found the payload we actually see that

865
00:30:42,799 --> 00:30:45,200
it's not that well obfuscated

866
00:30:45,200 --> 00:30:47,200
this is one of the earlier versions of

867
00:30:47,200 --> 00:30:48,640
flubot

868
00:30:48,640 --> 00:30:50,559
more recent versions have become more

869
00:30:50,559 --> 00:30:52,559
obfuscated

870
00:30:52,559 --> 00:30:54,640
but here it's quite easy to take a an

871
00:30:54,640 --> 00:30:56,000
older version and compare it with a

872
00:30:56,000 --> 00:30:57,440
newer version to still figure out the

873
00:30:57,440 --> 00:31:00,399
exact logic and to quickly identify that

874
00:31:00,399 --> 00:31:03,039
the the core flows inside the

875
00:31:03,039 --> 00:31:04,720
the payload to still be able to work

876
00:31:04,720 --> 00:31:07,039
with that heavily obfuscated version

877
00:31:07,039 --> 00:31:08,640
on the left you can already see some

878
00:31:08,640 --> 00:31:10,960
interesting class names

879
00:31:10,960 --> 00:31:12,880
which of course shows that it's not well

880
00:31:12,880 --> 00:31:14,799
obfuscated

881
00:31:14,799 --> 00:31:16,960
we see the dga the domain generation

882
00:31:16,960 --> 00:31:20,080
algorithm we see some sms and mms

883
00:31:20,080 --> 00:31:23,279
functionality we see a contact list over

884
00:31:23,279 --> 00:31:25,039
here

885
00:31:25,039 --> 00:31:27,039
sorry there's a browser activity and

886
00:31:27,039 --> 00:31:29,120
there's some encryption

887
00:31:29,120 --> 00:31:31,120
so let's take a look at these different

888
00:31:31,120 --> 00:31:32,880
aspects

889
00:31:32,880 --> 00:31:35,200
fluebot uses a dga domain generation

890
00:31:35,200 --> 00:31:36,960
algorithm which is

891
00:31:36,960 --> 00:31:38,399
something that has existed for many

892
00:31:38,399 --> 00:31:40,880
years if you've done windows or linux

893
00:31:40,880 --> 00:31:43,279
reversing and malware analysis

894
00:31:43,279 --> 00:31:45,279
you will know about this however on

895
00:31:45,279 --> 00:31:47,919
android it doesn't happen that often um

896
00:31:47,919 --> 00:31:49,039
so we are

897
00:31:49,039 --> 00:31:50,880
well we i'm not part of now our

898
00:31:50,880 --> 00:31:52,720
developers but we are

899
00:31:52,720 --> 00:31:55,279
lagging a bit behind to the the normal

900
00:31:55,279 --> 00:31:57,200
malware scene um

901
00:31:57,200 --> 00:31:59,679
fluid generates over five no not over

902
00:31:59,679 --> 00:32:01,440
exactly five thousand random domain

903
00:32:01,440 --> 00:32:04,000
names and it then shuffles them so it's

904
00:32:04,000 --> 00:32:06,000
not a sequential list that it will go

905
00:32:06,000 --> 00:32:07,600
through it will just generate five

906
00:32:07,600 --> 00:32:09,919
thousand and shuffle them

907
00:32:09,919 --> 00:32:11,840
there are different seed values per

908
00:32:11,840 --> 00:32:14,880
country where the malware is active

909
00:32:14,880 --> 00:32:16,640
and the combination of this makes it

910
00:32:16,640 --> 00:32:18,559
really difficult to perform a sinkhole

911
00:32:18,559 --> 00:32:19,679
attack

912
00:32:19,679 --> 00:32:22,399
you could register one of those 5000

913
00:32:22,399 --> 00:32:24,960
generated domains and then

914
00:32:24,960 --> 00:32:27,279
try to sink all the malware but because

915
00:32:27,279 --> 00:32:29,279
it's randomized you would actually have

916
00:32:29,279 --> 00:32:32,559
to sync all those 5000 domains

917
00:32:32,559 --> 00:32:34,640
and you would have to repeat this every

918
00:32:34,640 --> 00:32:35,919
month

919
00:32:35,919 --> 00:32:37,679
there's also an additional

920
00:32:37,679 --> 00:32:39,039
hurdle which will come up in the next

921
00:32:39,039 --> 00:32:41,200
slide

922
00:32:41,200 --> 00:32:43,279
and finally originally it was using

923
00:32:43,279 --> 00:32:45,200
normal dns queries to figure out if a

924
00:32:45,200 --> 00:32:47,360
domain was active but more recent

925
00:32:47,360 --> 00:32:50,559
versions have gone to dns over https

926
00:32:50,559 --> 00:32:53,200
which is using google cloudflare and

927
00:32:53,200 --> 00:32:54,320
alibaba

928
00:32:54,320 --> 00:32:55,919
which makes it even more difficult to

929
00:32:55,919 --> 00:32:57,760
sing this on a network level right

930
00:32:57,760 --> 00:33:00,399
because you don't have any insight into

931
00:33:00,399 --> 00:33:04,000
dns over https

932
00:33:04,000 --> 00:33:04,799
now

933
00:33:04,799 --> 00:33:07,039
an additional reason why it becomes

934
00:33:07,039 --> 00:33:08,640
quite difficult to sync all this kind of

935
00:33:08,640 --> 00:33:09,679
malware

936
00:33:09,679 --> 00:33:11,679
is because all of the

937
00:33:11,679 --> 00:33:13,679
data that is sent

938
00:33:13,679 --> 00:33:14,960
from the mobile application to the

939
00:33:14,960 --> 00:33:17,840
backend is encrypted with the

940
00:33:17,840 --> 00:33:20,799
the public key of the c2 server

941
00:33:20,799 --> 00:33:22,880
this means that even if we sync all a

942
00:33:22,880 --> 00:33:25,760
domain we will have incoming connections

943
00:33:25,760 --> 00:33:28,080
but we won't be able to

944
00:33:28,080 --> 00:33:30,720
read the content we won't be able to

945
00:33:30,720 --> 00:33:32,799
know what exactly is being sent to the

946
00:33:32,799 --> 00:33:33,919
c2

947
00:33:33,919 --> 00:33:36,559
which also means that we can't reply in

948
00:33:36,559 --> 00:33:38,720
a meaningful way because well there's an

949
00:33:38,720 --> 00:33:40,880
identifier on the left

950
00:33:40,880 --> 00:33:44,240
we need to reply in a correct fashion

951
00:33:44,240 --> 00:33:45,679
so

952
00:33:45,679 --> 00:33:46,960
even if we are able to sync all

953
00:33:46,960 --> 00:33:49,360
something we

954
00:33:49,360 --> 00:33:50,640
wouldn't be able to reply and the

955
00:33:50,640 --> 00:33:52,320
malware can just continue searching for

956
00:33:52,320 --> 00:33:55,679
a valid c2 that can actually provide a

957
00:33:55,679 --> 00:33:57,279
meaningful response

958
00:33:57,279 --> 00:33:58,880
the actual response itself it's

959
00:33:58,880 --> 00:34:00,720
sword-based encryption with a hard-coded

960
00:34:00,720 --> 00:34:03,200
key so it's not difficult to figure this

961
00:34:03,200 --> 00:34:05,679
out once you have a man in the middle

962
00:34:05,679 --> 00:34:07,840
but it is difficult to sinkhole and

963
00:34:07,840 --> 00:34:11,839
pretend to be a c2 server here

964
00:34:11,839 --> 00:34:13,359
acquiring the man in the middle position

965
00:34:13,359 --> 00:34:16,079
itself if you're used to android it was

966
00:34:16,079 --> 00:34:17,359
really easy

967
00:34:17,359 --> 00:34:19,040
it's much more easy than getting a man

968
00:34:19,040 --> 00:34:21,280
in the middle on a financial application

969
00:34:21,280 --> 00:34:22,719
which uses our binning and

970
00:34:22,719 --> 00:34:25,599
anti-detection all that stuff

971
00:34:25,599 --> 00:34:28,399
but on for this malware it's quite easy

972
00:34:28,399 --> 00:34:30,960
to get that man in the middle position

973
00:34:30,960 --> 00:34:33,040
now at this point well we would have to

974
00:34:33,040 --> 00:34:35,440
go back to static analysis figure out

975
00:34:35,440 --> 00:34:37,839
exactly how things are encrypted uh

976
00:34:37,839 --> 00:34:39,839
extract the public key encrypt stuff

977
00:34:39,839 --> 00:34:41,679
ourselves and maybe interact with the

978
00:34:41,679 --> 00:34:42,800
backend

979
00:34:42,800 --> 00:34:45,199
however that's quite a lot of work and

980
00:34:45,199 --> 00:34:47,280
well i am rather lazy

981
00:34:47,280 --> 00:34:50,159
so my approach was to use frida

982
00:34:50,159 --> 00:34:52,399
frida if you don't know it yet

983
00:34:52,399 --> 00:34:55,918
is a dynamic instrumentation toolkit it

984
00:34:55,918 --> 00:34:58,320
injects an entire javascript runtime

985
00:34:58,320 --> 00:35:00,160
into a running process

986
00:35:00,160 --> 00:35:01,680
and then you can

987
00:35:01,680 --> 00:35:03,119
create javascript

988
00:35:03,119 --> 00:35:04,960
files to actually interact with the

989
00:35:04,960 --> 00:35:06,480
application

990
00:35:06,480 --> 00:35:09,040
3d is really powerful because you can

991
00:35:09,040 --> 00:35:11,440
interact both very low level you can

992
00:35:11,440 --> 00:35:13,599
dump memory and modify register values

993
00:35:13,599 --> 00:35:14,880
and stuff like that

994
00:35:14,880 --> 00:35:17,119
and you can also interact very highly

995
00:35:17,119 --> 00:35:19,520
you can modify java classes java

996
00:35:19,520 --> 00:35:21,760
implementations you can call code

997
00:35:21,760 --> 00:35:24,240
yourself etc

998
00:35:24,240 --> 00:35:26,400
frida was originally made for mobile but

999
00:35:26,400 --> 00:35:30,079
it also works on linux windows os few

1000
00:35:30,079 --> 00:35:32,640
other environments so if you do this

1001
00:35:32,640 --> 00:35:33,839
kind of work and you don't know about

1002
00:35:33,839 --> 00:35:34,800
frida

1003
00:35:34,800 --> 00:35:37,280
definitely look it up

1004
00:35:37,280 --> 00:35:39,520
so on the left we have

1005
00:35:39,520 --> 00:35:40,880
a script

1006
00:35:40,880 --> 00:35:43,200
most of it is boilerplate the most

1007
00:35:43,200 --> 00:35:46,000
important part is on line five

1008
00:35:46,000 --> 00:35:48,480
it should be large enough

1009
00:35:48,480 --> 00:35:50,480
which gets a reference to a specific

1010
00:35:50,480 --> 00:35:53,280
clause now the goal of this script is to

1011
00:35:53,280 --> 00:35:54,079
hook

1012
00:35:54,079 --> 00:35:56,480
whichever clause is called right before

1013
00:35:56,480 --> 00:35:58,800
the data is encrypted because then we

1014
00:35:58,800 --> 00:36:00,960
can print the unencrypted value and we

1015
00:36:00,960 --> 00:36:02,240
can modify it

1016
00:36:02,240 --> 00:36:04,560
so finding this string here this

1017
00:36:04,560 --> 00:36:05,920
specific class

1018
00:36:05,920 --> 00:36:08,079
can actually take you hours or days

1019
00:36:08,079 --> 00:36:10,079
depending on the obfuscation but once

1020
00:36:10,079 --> 00:36:12,400
you have it it's pretty forward so we

1021
00:36:12,400 --> 00:36:16,400
get a j class which has a c method

1022
00:36:16,400 --> 00:36:18,960
obfuscated as well but the arguments are

1023
00:36:18,960 --> 00:36:21,359
a settings object the command which is

1024
00:36:21,359 --> 00:36:22,640
actually the payload being sent to the

1025
00:36:22,640 --> 00:36:25,119
server and a host because of course the

1026
00:36:25,119 --> 00:36:26,480
dga decides

1027
00:36:26,480 --> 00:36:28,400
the host and

1028
00:36:28,400 --> 00:36:30,560
it needs this as an argument as well

1029
00:36:30,560 --> 00:36:33,200
we simply do some logging statements

1030
00:36:33,200 --> 00:36:35,200
we call the original method because we

1031
00:36:35,200 --> 00:36:36,400
still want to

1032
00:36:36,400 --> 00:36:38,240
have the malware send the actual payload

1033
00:36:38,240 --> 00:36:40,480
so we get the return value

1034
00:36:40,480 --> 00:36:42,320
and then we print the return value as

1035
00:36:42,320 --> 00:36:43,359
well

1036
00:36:43,359 --> 00:36:44,800
so if we run

1037
00:36:44,800 --> 00:36:46,960
the application using frida

1038
00:36:46,960 --> 00:36:48,800
which you can see at the top it will

1039
00:36:48,800 --> 00:36:50,960
start printing all of the different

1040
00:36:50,960 --> 00:36:54,160
calls to this obfuscation function we

1041
00:36:54,160 --> 00:36:56,880
can see a preping command

1042
00:36:56,880 --> 00:36:58,640
all of them are to a russian surface

1043
00:36:58,640 --> 00:37:01,119
which was active at that time so you

1044
00:37:01,119 --> 00:37:03,280
have a preping which just says hey i'm

1045
00:37:03,280 --> 00:37:05,680
an active device i've been infected

1046
00:37:05,680 --> 00:37:06,960
we have the

1047
00:37:06,960 --> 00:37:08,720
as a message which is a configuration

1048
00:37:08,720 --> 00:37:11,119
and this basically means that it will

1049
00:37:11,119 --> 00:37:13,599
ask for a new text message to send every

1050
00:37:13,599 --> 00:37:15,599
10 seconds

1051
00:37:15,599 --> 00:37:16,960
we have a

1052
00:37:16,960 --> 00:37:18,880
general ping so after the prepping we

1053
00:37:18,880 --> 00:37:20,839
have a normal ping with some device

1054
00:37:20,839 --> 00:37:23,599
information and the final digit here is

1055
00:37:23,599 --> 00:37:24,640
one

1056
00:37:24,640 --> 00:37:26,160
which means that google play protect is

1057
00:37:26,160 --> 00:37:28,480
enabled so the server responds with

1058
00:37:28,480 --> 00:37:31,040
please disable google play protect

1059
00:37:31,040 --> 00:37:32,400
and at this point it will use

1060
00:37:32,400 --> 00:37:34,160
accessibility service to open google

1061
00:37:34,160 --> 00:37:35,520
play click on the settings click on

1062
00:37:35,520 --> 00:37:38,079
google play protect and disable it so

1063
00:37:38,079 --> 00:37:40,079
fully automated happens within one

1064
00:37:40,079 --> 00:37:41,760
second

1065
00:37:41,760 --> 00:37:44,640
next up it asks for get inject list

1066
00:37:44,640 --> 00:37:47,520
and after the command it gives a list of

1067
00:37:47,520 --> 00:37:49,280
all of the different applications that

1068
00:37:49,280 --> 00:37:51,119
are installed on the device

1069
00:37:51,119 --> 00:37:53,440
so the response of the server will be a

1070
00:37:53,440 --> 00:37:55,440
list of the applications that it wants

1071
00:37:55,440 --> 00:37:56,800
to attack

1072
00:37:56,800 --> 00:37:58,960
in this example here we have only one

1073
00:37:58,960 --> 00:38:01,599
application that will be attacked which

1074
00:38:01,599 --> 00:38:02,440
is

1075
00:38:02,440 --> 00:38:04,560
com.binance.dev which is a

1076
00:38:04,560 --> 00:38:06,720
bitcoin or

1077
00:38:06,720 --> 00:38:08,640
blockchain app i don't know i don't use

1078
00:38:08,640 --> 00:38:10,320
it

1079
00:38:10,320 --> 00:38:11,680
next up it will

1080
00:38:11,680 --> 00:38:14,400
request an inject so get inject for the

1081
00:38:14,400 --> 00:38:16,640
binance application and the response is

1082
00:38:16,640 --> 00:38:18,880
an html page

1083
00:38:18,880 --> 00:38:20,960
finally we have the get sms which

1084
00:38:20,960 --> 00:38:23,359
receives a number and a

1085
00:38:23,359 --> 00:38:25,040
message

1086
00:38:25,040 --> 00:38:26,480
so first let's zoom in on the sms

1087
00:38:26,480 --> 00:38:28,079
messages

1088
00:38:28,079 --> 00:38:29,359
the

1089
00:38:29,359 --> 00:38:31,520
malware will request for the backend do

1090
00:38:31,520 --> 00:38:33,680
you have some sms messages for me to

1091
00:38:33,680 --> 00:38:35,920
send so that i can further propagate

1092
00:38:35,920 --> 00:38:37,920
through the network

1093
00:38:37,920 --> 00:38:39,200
and it will give

1094
00:38:39,200 --> 00:38:40,720
different numbers and these numbers

1095
00:38:40,720 --> 00:38:42,640
actually come from the contacts list of

1096
00:38:42,640 --> 00:38:45,200
other compromised devices so that's a

1097
00:38:45,200 --> 00:38:46,880
good way to actually collect a whole

1098
00:38:46,880 --> 00:38:49,200
bunch of legitimate phone numbers and

1099
00:38:49,200 --> 00:38:50,640
you don't have to sequentially go

1100
00:38:50,640 --> 00:38:53,920
through the entire cell phone range

1101
00:38:53,920 --> 00:38:55,119
additionally

1102
00:38:55,119 --> 00:38:56,960
because the infected devices are

1103
00:38:56,960 --> 00:38:58,960
actually sending around the fishing

1104
00:38:58,960 --> 00:39:00,560
phishing messages

1105
00:39:00,560 --> 00:39:02,640
these meshes messages will actually come

1106
00:39:02,640 --> 00:39:04,800
from legitimate phone numbers it's not a

1107
00:39:04,800 --> 00:39:06,240
phishing campaign that's being sent

1108
00:39:06,240 --> 00:39:09,440
through 8800 or one of those premium

1109
00:39:09,440 --> 00:39:11,359
numbers you actually get it from a

1110
00:39:11,359 --> 00:39:15,839
random other infected person

1111
00:39:15,839 --> 00:39:18,320
i've known people who were infected and

1112
00:39:18,320 --> 00:39:21,280
they actually were called by people who

1113
00:39:21,280 --> 00:39:23,119
they sent a text message to and they

1114
00:39:23,119 --> 00:39:25,119
were complaining well stop sending me

1115
00:39:25,119 --> 00:39:27,200
these spam messages stop phishing me

1116
00:39:27,200 --> 00:39:29,200
stop spreading malware

1117
00:39:29,200 --> 00:39:31,040
and they of course had no idea what was

1118
00:39:31,040 --> 00:39:33,280
going on

1119
00:39:33,280 --> 00:39:35,520
telecom providers are actively trying to

1120
00:39:35,520 --> 00:39:36,960
stop this

1121
00:39:36,960 --> 00:39:39,119
my sister who has an iphone got one of

1122
00:39:39,119 --> 00:39:40,480
these messages

1123
00:39:40,480 --> 00:39:43,359
she forwarded the sms message to me so

1124
00:39:43,359 --> 00:39:44,480
she didn't take a screenshot she

1125
00:39:44,480 --> 00:39:46,800
actually forwarded the message and she

1126
00:39:46,800 --> 00:39:48,560
immediately got a message from proximus

1127
00:39:48,560 --> 00:39:49,440
saying

1128
00:39:49,440 --> 00:39:53,200
your um sms message privileges have been

1129
00:39:53,200 --> 00:39:55,200
discontinued for seven days so she

1130
00:39:55,200 --> 00:39:56,880
wasn't able to send text messages for

1131
00:39:56,880 --> 00:39:58,960
seven days even though she has an iphone

1132
00:39:58,960 --> 00:40:01,440
she's not infected but she was she sent

1133
00:40:01,440 --> 00:40:04,640
one phishing sms to me

1134
00:40:04,640 --> 00:40:06,560
i i thought it was really funny

1135
00:40:06,560 --> 00:40:08,720
she didn't really

1136
00:40:08,720 --> 00:40:10,480
um

1137
00:40:10,480 --> 00:40:12,000
all right so

1138
00:40:12,000 --> 00:40:14,400
the the this is how the the malware

1139
00:40:14,400 --> 00:40:16,240
propagates right it takes a bunch of

1140
00:40:16,240 --> 00:40:17,920
contact information it sends it to a

1141
00:40:17,920 --> 00:40:19,839
different device so it's not that i will

1142
00:40:19,839 --> 00:40:22,480
get a message from somebody i know but i

1143
00:40:22,480 --> 00:40:24,800
will get a message from somebody random

1144
00:40:24,800 --> 00:40:26,960
in belgium

1145
00:40:26,960 --> 00:40:28,400
all right next up we have that get

1146
00:40:28,400 --> 00:40:30,400
inject command

1147
00:40:30,400 --> 00:40:32,079
the get inject command is followed by a

1148
00:40:32,079 --> 00:40:33,760
list of applications that are installed

1149
00:40:33,760 --> 00:40:34,800
on the

1150
00:40:34,800 --> 00:40:36,560
device so of course i want to know

1151
00:40:36,560 --> 00:40:38,880
exactly which applications are being

1152
00:40:38,880 --> 00:40:40,720
attacked

1153
00:40:40,720 --> 00:40:42,079
but it's only the server who will

1154
00:40:42,079 --> 00:40:44,000
respond with a list of

1155
00:40:44,000 --> 00:40:47,119
applications if i give it a nice list of

1156
00:40:47,119 --> 00:40:48,560
applications that's installed on my

1157
00:40:48,560 --> 00:40:51,599
device so i once again used frida

1158
00:40:51,599 --> 00:40:53,520
i hope it's big enough

1159
00:40:53,520 --> 00:40:55,280
it's the same method it's just in a

1160
00:40:55,280 --> 00:40:57,440
different sample so that the name is

1161
00:40:57,440 --> 00:41:00,240
different it's a panel rec class over

1162
00:41:00,240 --> 00:41:02,400
here and once again we have the hostname

1163
00:41:02,400 --> 00:41:03,599
and the payload

1164
00:41:03,599 --> 00:41:05,599
and using frida i just well the first

1165
00:41:05,599 --> 00:41:07,760
thing i did was create a list of all

1166
00:41:07,760 --> 00:41:10,480
potential financial applications

1167
00:41:10,480 --> 00:41:11,920
this was quite difficult actually so i

1168
00:41:11,920 --> 00:41:13,520
just went to

1169
00:41:13,520 --> 00:41:16,480
older write-ups of banking malware and

1170
00:41:16,480 --> 00:41:18,160
for all of them i just copy-paste all of

1171
00:41:18,160 --> 00:41:20,560
the lists of the targeted applications

1172
00:41:20,560 --> 00:41:22,960
threw them in one big list and then also

1173
00:41:22,960 --> 00:41:24,640
added all of the belgian financial

1174
00:41:24,640 --> 00:41:27,040
applications because so far belgium

1175
00:41:27,040 --> 00:41:29,040
actually hasn't really been attacked by

1176
00:41:29,040 --> 00:41:30,720
mobile banking malware

1177
00:41:30,720 --> 00:41:32,960
so i created a very long list with over

1178
00:41:32,960 --> 00:41:35,839
700 different applications

1179
00:41:35,839 --> 00:41:38,000
and then i simply checked well if we are

1180
00:41:38,000 --> 00:41:41,280
doing the get inject list command

1181
00:41:41,280 --> 00:41:43,440
i will modify that and just append all

1182
00:41:43,440 --> 00:41:45,200
of these applications

1183
00:41:45,200 --> 00:41:47,280
and then the

1184
00:41:47,280 --> 00:41:48,880
the server will reply with all of the

1185
00:41:48,880 --> 00:41:50,480
applications that it's actually

1186
00:41:50,480 --> 00:41:52,240
attacking which i think in this case

1187
00:41:52,240 --> 00:41:53,760
were about

1188
00:41:53,760 --> 00:41:54,960
14

1189
00:41:54,960 --> 00:41:57,200
applications or something

1190
00:41:57,200 --> 00:41:59,359
finally we have the get inject which is

1191
00:41:59,359 --> 00:42:02,400
the actual attack

1192
00:42:02,400 --> 00:42:04,640
just to show the power of frida i took

1193
00:42:04,640 --> 00:42:06,319
the response value which is the html

1194
00:42:06,319 --> 00:42:08,880
code and i just saved it to a file on

1195
00:42:08,880 --> 00:42:11,119
the device which i could then

1196
00:42:11,119 --> 00:42:13,599
pull from the device run it in a browser

1197
00:42:13,599 --> 00:42:16,560
and i ended up with this

1198
00:42:16,560 --> 00:42:18,640
so this is a combination of

1199
00:42:18,640 --> 00:42:21,040
a whole lot of websites a whole of html

1200
00:42:21,040 --> 00:42:24,640
code and all of these views are actually

1201
00:42:24,640 --> 00:42:26,480
well they're simulating a financial

1202
00:42:26,480 --> 00:42:27,839
application

1203
00:42:27,839 --> 00:42:28,720
so

1204
00:42:28,720 --> 00:42:30,880
how the malware the malware works is it

1205
00:42:30,880 --> 00:42:32,480
will wait for you to launch one of these

1206
00:42:32,480 --> 00:42:34,960
applications and when you do so it will

1207
00:42:34,960 --> 00:42:37,040
show a web view on top which is

1208
00:42:37,040 --> 00:42:38,480
non-transparent so it just covers the

1209
00:42:38,480 --> 00:42:39,760
entire screen

1210
00:42:39,760 --> 00:42:42,160
and it will show one of these login

1211
00:42:42,160 --> 00:42:43,920
prompts

1212
00:42:43,920 --> 00:42:46,880
luckily flubot so far not attacking

1213
00:42:46,880 --> 00:42:48,880
belgian applications

1214
00:42:48,880 --> 00:42:50,640
what's also interesting here is that all

1215
00:42:50,640 --> 00:42:52,240
of these applications

1216
00:42:52,240 --> 00:42:53,440
actually require the user to

1217
00:42:53,440 --> 00:42:54,960
authenticate using a username and

1218
00:42:54,960 --> 00:42:57,200
password which already is something that

1219
00:42:57,200 --> 00:42:59,359
we don't have in belgium we have much

1220
00:42:59,359 --> 00:43:02,560
stronger onboarding using um it's me or

1221
00:43:02,560 --> 00:43:05,440
a card reader

1222
00:43:05,440 --> 00:43:08,079
so no belgian targets so far but it is

1223
00:43:08,079 --> 00:43:10,319
quite surprising because the application

1224
00:43:10,319 --> 00:43:12,880
was called bpost which is well our

1225
00:43:12,880 --> 00:43:15,119
belgian post

1226
00:43:15,119 --> 00:43:18,079
company there is dutch localization so

1227
00:43:18,079 --> 00:43:19,520
they do attack the netherlands so that

1228
00:43:19,520 --> 00:43:20,800
kind of makes sense

1229
00:43:20,800 --> 00:43:22,240
there is a specific

1230
00:43:22,240 --> 00:43:25,119
seed value for the dga for belgium which

1231
00:43:25,119 --> 00:43:27,359
once again shows they are actively

1232
00:43:27,359 --> 00:43:29,680
targeting belgium

1233
00:43:29,680 --> 00:43:31,920
and it is spreading through belgium text

1234
00:43:31,920 --> 00:43:33,839
messages so it's kind of weird that

1235
00:43:33,839 --> 00:43:35,680
they're not actually attacking belgian

1236
00:43:35,680 --> 00:43:37,520
banks yet

1237
00:43:37,520 --> 00:43:41,599
next up we have teabot or arza

1238
00:43:41,599 --> 00:43:43,359
around the same time

1239
00:43:43,359 --> 00:43:46,640
so also may 2021

1240
00:43:46,640 --> 00:43:48,079
there was a new

1241
00:43:48,079 --> 00:43:50,480
malware family tibot who did actually

1242
00:43:50,480 --> 00:43:52,800
attack belgian applications so this was

1243
00:43:52,800 --> 00:43:55,359
just a small mention in a uh

1244
00:43:55,359 --> 00:43:57,359
a blog post somewhere

1245
00:43:57,359 --> 00:43:59,359
uh but it did initially it immediately

1246
00:43:59,359 --> 00:44:00,560
triggered me because i thought well

1247
00:44:00,560 --> 00:44:02,560
belgium hasn't been attacked yet so this

1248
00:44:02,560 --> 00:44:04,480
is awesome and i spent a few nights

1249
00:44:04,480 --> 00:44:07,359
reverse engineering the sample

1250
00:44:07,359 --> 00:44:08,400
and

1251
00:44:08,400 --> 00:44:10,800
it turns out that

1252
00:44:10,800 --> 00:44:13,760
flub and tibot are very similar but also

1253
00:44:13,760 --> 00:44:15,440
very different

1254
00:44:15,440 --> 00:44:18,079
while flubot is technically quite strong

1255
00:44:18,079 --> 00:44:20,800
and it has a dga so it generates random

1256
00:44:20,800 --> 00:44:24,720
domains and it has c2 encryption which

1257
00:44:24,720 --> 00:44:26,400
really helps against the sync calling as

1258
00:44:26,400 --> 00:44:27,119
well

1259
00:44:27,119 --> 00:44:28,880
t-bots just had a

1260
00:44:28,880 --> 00:44:31,520
hard-coded domain name and it did it

1261
00:44:31,520 --> 00:44:33,359
barely did any encryption

1262
00:44:33,359 --> 00:44:34,160
so

1263
00:44:34,160 --> 00:44:36,079
very easy to intercept keyboard very

1264
00:44:36,079 --> 00:44:37,440
easy to see what's going on

1265
00:44:37,440 --> 00:44:39,440
communication wise

1266
00:44:39,440 --> 00:44:41,520
which is much different than flubot even

1267
00:44:41,520 --> 00:44:44,319
though under the hood their structure is

1268
00:44:44,319 --> 00:44:46,240
quite similar

1269
00:44:46,240 --> 00:44:48,160
most likely there are different teams

1270
00:44:48,160 --> 00:44:50,800
though i'm not into the attribution

1271
00:44:50,800 --> 00:44:52,240
attribution game

1272
00:44:52,240 --> 00:44:54,079
um but some

1273
00:44:54,079 --> 00:44:55,680
malwares have the source code of some

1274
00:44:55,680 --> 00:44:57,280
malwares have been leaked quite some

1275
00:44:57,280 --> 00:44:59,680
years ago and different malware variants

1276
00:44:59,680 --> 00:45:00,640
are still

1277
00:45:00,640 --> 00:45:03,839
using that as their basis to develop

1278
00:45:03,839 --> 00:45:05,200
further on

1279
00:45:05,200 --> 00:45:07,920
propagation is similar though tbot

1280
00:45:07,920 --> 00:45:10,560
mostly focuses on a dropper which means

1281
00:45:10,560 --> 00:45:12,400
they actually get another application to

1282
00:45:12,400 --> 00:45:13,359
install

1283
00:45:13,359 --> 00:45:15,359
their malicious application

1284
00:45:15,359 --> 00:45:16,400
but more

1285
00:45:16,400 --> 00:45:18,079
more recent versions are actually also

1286
00:45:18,079 --> 00:45:21,440
using smashing so sending text messages

1287
00:45:21,440 --> 00:45:23,920
now on the impact side t-bot is much

1288
00:45:23,920 --> 00:45:25,119
more interesting

1289
00:45:25,119 --> 00:45:27,119
so the accessibility abuse or the

1290
00:45:27,119 --> 00:45:32,200
permission is rather limited on flubot

1291
00:45:40,560 --> 00:45:43,560
uh

1292
00:45:47,119 --> 00:45:49,359
all right

1293
00:45:49,359 --> 00:45:51,440
okay so you have information i don't

1294
00:45:51,440 --> 00:45:53,760
have which is very interesting i'm just

1295
00:45:53,760 --> 00:45:55,359
a lonely reverse engineer so definitely

1296
00:45:55,359 --> 00:45:56,960
possible and there yeah there are

1297
00:45:56,960 --> 00:45:58,640
definitely links though i still think

1298
00:45:58,640 --> 00:46:01,200
it's surprising everybody he said by the

1299
00:46:01,200 --> 00:46:02,319
way that

1300
00:46:02,319 --> 00:46:04,160
if you're following a specific phishing

1301
00:46:04,160 --> 00:46:05,760
message you would either get flub or

1302
00:46:05,760 --> 00:46:06,960
tbot

1303
00:46:06,960 --> 00:46:09,599
which would indicate some kind of

1304
00:46:09,599 --> 00:46:11,359
working together which is definitely

1305
00:46:11,359 --> 00:46:12,960
possible i didn't analyze all the

1306
00:46:12,960 --> 00:46:14,560
samples so thank you for that input very

1307
00:46:14,560 --> 00:46:16,960
interesting

1308
00:46:17,359 --> 00:46:20,480
yeah so accessibility abuse

1309
00:46:20,480 --> 00:46:22,240
is quite limited on flu bot they just

1310
00:46:22,240 --> 00:46:24,319
use it to detect the uppermost

1311
00:46:24,319 --> 00:46:26,800
application and then

1312
00:46:26,800 --> 00:46:29,119
trigger the webview

1313
00:46:29,119 --> 00:46:30,480
and they also disable google play

1314
00:46:30,480 --> 00:46:31,839
protect

1315
00:46:31,839 --> 00:46:33,119
while on t-bolt you have a full

1316
00:46:33,119 --> 00:46:35,040
keylogger so if your application is

1317
00:46:35,040 --> 00:46:37,280
targeted they will actually

1318
00:46:37,280 --> 00:46:39,599
intercept every accessibility event

1319
00:46:39,599 --> 00:46:41,599
related to your application which will

1320
00:46:41,599 --> 00:46:43,599
work as a full key logger

1321
00:46:43,599 --> 00:46:45,760
finally overlay attacks flewbot no

1322
00:46:45,760 --> 00:46:47,520
belgian apps while

1323
00:46:47,520 --> 00:46:50,319
t-bot did attack belgian apps

1324
00:46:50,319 --> 00:46:51,359
so

1325
00:46:51,359 --> 00:46:53,760
which applications were attacked and how

1326
00:46:53,760 --> 00:46:55,680
well currently or at least the sample

1327
00:46:55,680 --> 00:46:58,079
that i investigated only had one overlay

1328
00:46:58,079 --> 00:47:00,720
attack which was on the belfuse mobile

1329
00:47:00,720 --> 00:47:02,319
application

1330
00:47:02,319 --> 00:47:04,960
this says nothing about the security of

1331
00:47:04,960 --> 00:47:07,280
the belfius mobile application this says

1332
00:47:07,280 --> 00:47:09,599
absolutely nothing about the security of

1333
00:47:09,599 --> 00:47:11,040
any of the other

1334
00:47:11,040 --> 00:47:13,440
belgian financial applications i have no

1335
00:47:13,440 --> 00:47:15,359
idea why they chose belfius and actually

1336
00:47:15,359 --> 00:47:17,280
the only thing that they are requesting

1337
00:47:17,280 --> 00:47:19,440
is the debit card number i'm not

1338
00:47:19,440 --> 00:47:20,559
actually sure if you can do anything

1339
00:47:20,559 --> 00:47:22,880
meaningful with a debit card number they

1340
00:47:22,880 --> 00:47:24,960
don't ask for a

1341
00:47:24,960 --> 00:47:26,400
credit card number they don't ask for a

1342
00:47:26,400 --> 00:47:28,800
cvc they don't ask for a pin code

1343
00:47:28,800 --> 00:47:30,800
anything like that so maybe it was just

1344
00:47:30,800 --> 00:47:32,079
the first

1345
00:47:32,079 --> 00:47:33,440
tip in the water

1346
00:47:33,440 --> 00:47:34,960
to see if they

1347
00:47:34,960 --> 00:47:37,040
if the belgian market is interesting

1348
00:47:37,040 --> 00:47:38,559
so there's one overlay attack for

1349
00:47:38,559 --> 00:47:41,200
bellevues and there were key loggers for

1350
00:47:41,200 --> 00:47:45,520
13 different belgian applications

1351
00:47:45,599 --> 00:47:47,119
now what does it mean to have a key

1352
00:47:47,119 --> 00:47:49,680
logger on an application well there's an

1353
00:47:49,680 --> 00:47:51,200
application you can install called

1354
00:47:51,200 --> 00:47:53,359
screen logger from the google play store

1355
00:47:53,359 --> 00:47:55,359
which will actually register an

1356
00:47:55,359 --> 00:47:57,119
accessibility service and will print

1357
00:47:57,119 --> 00:47:58,079
everything

1358
00:47:58,079 --> 00:47:59,920
that it receives

1359
00:47:59,920 --> 00:48:01,920
the reason why i took this application

1360
00:48:01,920 --> 00:48:03,920
is because it actually doesn't request

1361
00:48:03,920 --> 00:48:05,920
internet permission which for me was

1362
00:48:05,920 --> 00:48:07,599
very comforting because then i know it's

1363
00:48:07,599 --> 00:48:09,520
not sending my data

1364
00:48:09,520 --> 00:48:11,520
anywhere online

1365
00:48:11,520 --> 00:48:13,440
and on the second image here you can see

1366
00:48:13,440 --> 00:48:15,559
that i well i was typing in some text

1367
00:48:15,559 --> 00:48:18,800
testoftest.com and every letter i typed

1368
00:48:18,800 --> 00:48:20,559
would show up so

1369
00:48:20,559 --> 00:48:22,800
it's sequential

1370
00:48:22,800 --> 00:48:24,480
so you get a lot of

1371
00:48:24,480 --> 00:48:25,680
information you do get a lot of

1372
00:48:25,680 --> 00:48:27,359
information and you can even get

1373
00:48:27,359 --> 00:48:29,359
passwords because even though there are

1374
00:48:29,359 --> 00:48:32,079
asterisks or small dots in the password

1375
00:48:32,079 --> 00:48:35,200
field the last letter that you enter is

1376
00:48:35,200 --> 00:48:37,040
shown visibly and that is actually

1377
00:48:37,040 --> 00:48:38,240
communicated

1378
00:48:38,240 --> 00:48:39,839
to the malware as well or to the

1379
00:48:39,839 --> 00:48:41,680
accessibility service

1380
00:48:41,680 --> 00:48:43,200
now even though you have a full

1381
00:48:43,200 --> 00:48:44,319
keylogger

1382
00:48:44,319 --> 00:48:47,040
this malware still does not have access

1383
00:48:47,040 --> 00:48:48,880
to the application storage

1384
00:48:48,880 --> 00:48:50,640
when you authenticate to a mobile

1385
00:48:50,640 --> 00:48:53,200
financial application you will require

1386
00:48:53,200 --> 00:48:55,920
certain cryptographic secrets which are

1387
00:48:55,920 --> 00:48:58,240
stored on the application storage

1388
00:48:58,240 --> 00:48:58,960
so

1389
00:48:58,960 --> 00:49:00,720
even if let's say they would be able to

1390
00:49:00,720 --> 00:49:02,400
get the pin code that you use to

1391
00:49:02,400 --> 00:49:04,480
authenticate to belfuse let's take an

1392
00:49:04,480 --> 00:49:05,440
example

1393
00:49:05,440 --> 00:49:07,359
they still wouldn't be able to onboard a

1394
00:49:07,359 --> 00:49:09,760
new application using that pin code

1395
00:49:09,760 --> 00:49:11,599
right even if that pin code would be the

1396
00:49:11,599 --> 00:49:13,599
same as the actual pin code for your

1397
00:49:13,599 --> 00:49:16,240
debit card it would be useless right

1398
00:49:16,240 --> 00:49:17,599
because the onboarding of these

1399
00:49:17,599 --> 00:49:20,000
financial applications requires it's me

1400
00:49:20,000 --> 00:49:22,160
or a card reader

1401
00:49:22,160 --> 00:49:24,640
um yeah one of those two

1402
00:49:24,640 --> 00:49:27,440
so the bad um yeah the good is also a

1403
00:49:27,440 --> 00:49:29,040
lack of context you get a lot of

1404
00:49:29,040 --> 00:49:31,200
information but unless you figure out

1405
00:49:31,200 --> 00:49:33,839
exactly how a specific application works

1406
00:49:33,839 --> 00:49:36,319
that's really a lot of work

1407
00:49:36,319 --> 00:49:38,480
some of these malwares actually attack

1408
00:49:38,480 --> 00:49:41,040
200 or 300 different applications so

1409
00:49:41,040 --> 00:49:42,800
that would require a significant amount

1410
00:49:42,800 --> 00:49:45,280
of reverse engineering to

1411
00:49:45,280 --> 00:49:47,520
fully piece together an accessibility

1412
00:49:47,520 --> 00:49:49,280
trace

1413
00:49:49,280 --> 00:49:50,880
and finally there's no interaction with

1414
00:49:50,880 --> 00:49:52,880
the applications yet it's just

1415
00:49:52,880 --> 00:49:54,559
monitoring and it's not actually

1416
00:49:54,559 --> 00:49:58,319
pressing buttons itself in any way

1417
00:49:58,319 --> 00:50:01,440
finally vultures third example

1418
00:50:01,440 --> 00:50:03,760
a very small malware was discovered in

1419
00:50:03,760 --> 00:50:06,000
july 2021

1420
00:50:06,000 --> 00:50:09,359
the interesting part here is

1421
00:50:09,359 --> 00:50:11,920
it uses a vnc server to actually do a

1422
00:50:11,920 --> 00:50:14,480
full screen capture of the device

1423
00:50:14,480 --> 00:50:16,720
so this is rich research from thread

1424
00:50:16,720 --> 00:50:18,960
fabric and i only was able to do a

1425
00:50:18,960 --> 00:50:20,559
little bit of reverse engineering on

1426
00:50:20,559 --> 00:50:23,440
this sample before the c2 server

1427
00:50:23,440 --> 00:50:24,960
went down

1428
00:50:24,960 --> 00:50:26,960
it's design wise it's quite nice so once

1429
00:50:26,960 --> 00:50:28,000
again it's

1430
00:50:28,000 --> 00:50:30,400
motivating you to click the services

1431
00:50:30,400 --> 00:50:32,400
icon we do have a little bit of

1432
00:50:32,400 --> 00:50:34,160
explanation on why they want

1433
00:50:34,160 --> 00:50:35,520
accessibility

1434
00:50:35,520 --> 00:50:37,280
and then one once you open one of the

1435
00:50:37,280 --> 00:50:40,000
targeted applications in this case the

1436
00:50:40,000 --> 00:50:42,400
spanish bankia application

1437
00:50:42,400 --> 00:50:44,559
it's quite small but you could see on

1438
00:50:44,559 --> 00:50:47,119
top here that it has actually started

1439
00:50:47,119 --> 00:50:48,720
broadcasting

1440
00:50:48,720 --> 00:50:51,359
or costing your device to a another

1441
00:50:51,359 --> 00:50:53,920
screen this is something you would see

1442
00:50:53,920 --> 00:50:56,480
if you well broadcast it to your

1443
00:50:56,480 --> 00:50:58,160
google chrome no

1444
00:50:58,160 --> 00:50:59,040
um

1445
00:50:59,040 --> 00:51:00,960
what's the thing you used to watch

1446
00:51:00,960 --> 00:51:03,760
on the tv chromecast

1447
00:51:03,760 --> 00:51:05,359
so if you cost to a chromecast you would

1448
00:51:05,359 --> 00:51:06,480
see this icon

1449
00:51:06,480 --> 00:51:08,079
what the malware does is it creates a

1450
00:51:08,079 --> 00:51:10,079
local service that

1451
00:51:10,079 --> 00:51:12,240
is costable too and then as soon as you

1452
00:51:12,240 --> 00:51:14,160
open the application it will cost to

1453
00:51:14,160 --> 00:51:16,319
that application so it's doing a full

1454
00:51:16,319 --> 00:51:18,240
recording of your screen

1455
00:51:18,240 --> 00:51:19,760
interaction

1456
00:51:19,760 --> 00:51:21,839
and then after a few minutes it will

1457
00:51:21,839 --> 00:51:23,119
start sending

1458
00:51:23,119 --> 00:51:25,920
this information to the c3 server

1459
00:51:25,920 --> 00:51:28,480
from a reversing engine reversing point

1460
00:51:28,480 --> 00:51:31,200
of view the vulture malware is really

1461
00:51:31,200 --> 00:51:32,800
boring

1462
00:51:32,800 --> 00:51:34,800
the list of targeted applications is

1463
00:51:34,800 --> 00:51:37,200
actually just inside a file that's part

1464
00:51:37,200 --> 00:51:39,680
of the application

1465
00:51:39,680 --> 00:51:41,680
here you see all of the targeted

1466
00:51:41,680 --> 00:51:42,880
applications

1467
00:51:42,880 --> 00:51:45,920
together with a number which i'm fairly

1468
00:51:45,920 --> 00:51:47,760
certain is the number of seconds that it

1469
00:51:47,760 --> 00:51:50,319
will record before it would send some of

1470
00:51:50,319 --> 00:51:52,000
there are some of them are 60 some of

1471
00:51:52,000 --> 00:51:54,800
them are 90 or 120.

1472
00:51:54,800 --> 00:51:57,440
no belgian applications in this so

1473
00:51:57,440 --> 00:51:58,240
that's

1474
00:51:58,240 --> 00:51:59,520
quite good

1475
00:51:59,520 --> 00:52:00,960
and they still have no direct

1476
00:52:00,960 --> 00:52:05,359
interaction with the application

1477
00:52:05,359 --> 00:52:07,359
the bad is that they are attacking our

1478
00:52:07,359 --> 00:52:09,520
neighbors so there are some

1479
00:52:09,520 --> 00:52:11,839
dutch banks that are being targeted this

1480
00:52:11,839 --> 00:52:12,880
way

1481
00:52:12,880 --> 00:52:13,920
and

1482
00:52:13,920 --> 00:52:15,200
and this is also the reason why i wanted

1483
00:52:15,200 --> 00:52:16,720
to mention the vulture malware is

1484
00:52:16,720 --> 00:52:19,359
because it is actually a nice step

1485
00:52:19,359 --> 00:52:22,240
towards a full interactive attack on

1486
00:52:22,240 --> 00:52:23,599
your application

1487
00:52:23,599 --> 00:52:25,040
so if

1488
00:52:25,040 --> 00:52:26,960
the t-bolt and the flu bots who are

1489
00:52:26,960 --> 00:52:28,960
apparently already working together also

1490
00:52:28,960 --> 00:52:30,640
invite the

1491
00:52:30,640 --> 00:52:33,520
vulture guys it's not too difficult to

1492
00:52:33,520 --> 00:52:35,040
actually take this one step further and

1493
00:52:35,040 --> 00:52:36,880
wait for somebody to open their

1494
00:52:36,880 --> 00:52:39,760
financial application uh real time in

1495
00:52:39,760 --> 00:52:41,839
real time view whatever they're doing

1496
00:52:41,839 --> 00:52:43,599
and then at some point turn the screen

1497
00:52:43,599 --> 00:52:46,000
black and start clicking buttons

1498
00:52:46,000 --> 00:52:49,280
yourself as the malware owners

1499
00:52:49,280 --> 00:52:53,040
so far no issue yet but this is a

1500
00:52:53,040 --> 00:52:56,000
potential future development which would

1501
00:52:56,000 --> 00:52:58,800
be quite scary

1502
00:52:58,800 --> 00:53:00,400
we do have time for a little bit of good

1503
00:53:00,400 --> 00:53:02,480
news or at least

1504
00:53:02,480 --> 00:53:04,880
try to protect ourselves

1505
00:53:04,880 --> 00:53:06,319
i have two slides here protecting the

1506
00:53:06,319 --> 00:53:09,599
users or protecting the application

1507
00:53:09,599 --> 00:53:11,839
once again user awareness is super

1508
00:53:11,839 --> 00:53:13,040
important

1509
00:53:13,040 --> 00:53:15,599
most malware is installed outside of the

1510
00:53:15,599 --> 00:53:17,599
google play store not all of them the

1511
00:53:17,599 --> 00:53:19,839
google play store is not infallible it

1512
00:53:19,839 --> 00:53:21,680
will sometimes leave

1513
00:53:21,680 --> 00:53:24,480
malware up for quite some time

1514
00:53:24,480 --> 00:53:25,760
but telling people that they shouldn't

1515
00:53:25,760 --> 00:53:27,599
click on text messages that they

1516
00:53:27,599 --> 00:53:29,599
shouldn't install applications

1517
00:53:29,599 --> 00:53:31,920
is definitely very important

1518
00:53:31,920 --> 00:53:34,160
feather i was talking about that as well

1519
00:53:34,160 --> 00:53:36,079
this morning

1520
00:53:36,079 --> 00:53:37,520
don't ever grant accessibility

1521
00:53:37,520 --> 00:53:38,640
permissions

1522
00:53:38,640 --> 00:53:40,400
unless you really have a disability of

1523
00:53:40,400 --> 00:53:41,520
course but

1524
00:53:41,520 --> 00:53:43,680
most likely you won't ever have to do

1525
00:53:43,680 --> 00:53:46,640
this for a legitimate application

1526
00:53:46,640 --> 00:53:48,559
if you have users to protect inside your

1527
00:53:48,559 --> 00:53:51,040
corporate network using mdm it is

1528
00:53:51,040 --> 00:53:53,599
possible to disable installations from

1529
00:53:53,599 --> 00:53:55,599
unknown sources which would also mean

1530
00:53:55,599 --> 00:53:57,280
that you can only install applications

1531
00:53:57,280 --> 00:53:59,680
from within google play store so that's

1532
00:53:59,680 --> 00:54:02,480
a nice additional control as well

1533
00:54:02,480 --> 00:54:04,319
and thirdly also a little bit of user

1534
00:54:04,319 --> 00:54:06,720
awareness is to encourage biometrics

1535
00:54:06,720 --> 00:54:09,680
because if we keep going the way that's

1536
00:54:09,680 --> 00:54:11,920
well the combination of vulture teabot

1537
00:54:11,920 --> 00:54:13,599
flubot

1538
00:54:13,599 --> 00:54:15,440
it is technically possible to do a full

1539
00:54:15,440 --> 00:54:17,119
interactive man in the middle

1540
00:54:17,119 --> 00:54:19,440
but accessibility will never be able to

1541
00:54:19,440 --> 00:54:22,160
bypass biometrics at some point if your

1542
00:54:22,160 --> 00:54:24,000
application is protected with biometrics

1543
00:54:24,000 --> 00:54:25,839
you will have to put your thumb on the

1544
00:54:25,839 --> 00:54:28,079
screen or you will have to show your

1545
00:54:28,079 --> 00:54:29,520
face

1546
00:54:29,520 --> 00:54:31,920
so in that regard i think that biometric

1547
00:54:31,920 --> 00:54:35,440
is more secure than a pin code and of

1548
00:54:35,440 --> 00:54:37,119
course biometric also protects against

1549
00:54:37,119 --> 00:54:38,960
shoulder surfing so you should be using

1550
00:54:38,960 --> 00:54:40,079
it

1551
00:54:40,079 --> 00:54:41,599
anyway

1552
00:54:41,599 --> 00:54:43,599
protecting the application

1553
00:54:43,599 --> 00:54:44,720
is

1554
00:54:44,720 --> 00:54:47,680
difficult uh but not impossible so the

1555
00:54:47,680 --> 00:54:50,160
actual overlay the webview on top of the

1556
00:54:50,160 --> 00:54:51,359
application

1557
00:54:51,359 --> 00:54:54,240
it's nearly impossible to accurately

1558
00:54:54,240 --> 00:54:55,200
detect

1559
00:54:55,200 --> 00:54:57,440
there's no real way to know if you're

1560
00:54:57,440 --> 00:55:00,799
being attacked by a malware or by chat

1561
00:55:00,799 --> 00:55:03,119
heads you can just tell well there is

1562
00:55:03,119 --> 00:55:05,280
something on top of me but of course you

1563
00:55:05,280 --> 00:55:07,520
don't want to block a bank account

1564
00:55:07,520 --> 00:55:09,920
because somebody's using facebook heads

1565
00:55:09,920 --> 00:55:12,079
or chat ads that doesn't make sense so

1566
00:55:12,079 --> 00:55:15,280
you have many false positives here

1567
00:55:15,280 --> 00:55:16,400
it is

1568
00:55:16,400 --> 00:55:18,160
possible to detect these malicious

1569
00:55:18,160 --> 00:55:19,359
applications

1570
00:55:19,359 --> 00:55:21,599
even if google and google play protect

1571
00:55:21,599 --> 00:55:24,559
is not able to detect them

1572
00:55:24,559 --> 00:55:26,559
so you can't really rely on google

1573
00:55:26,559 --> 00:55:29,280
though they will also block malware if i

1574
00:55:29,280 --> 00:55:31,200
install the vulture malware it will

1575
00:55:31,200 --> 00:55:32,720
immediately get

1576
00:55:32,720 --> 00:55:34,799
detected and deleted

1577
00:55:34,799 --> 00:55:36,400
but a lot of them also are not

1578
00:55:36,400 --> 00:55:38,400
accurately detected so there are a few

1579
00:55:38,400 --> 00:55:39,920
commercial offerings

1580
00:55:39,920 --> 00:55:41,040
that offer

1581
00:55:41,040 --> 00:55:43,200
own device malware detection so it's an

1582
00:55:43,200 --> 00:55:44,640
sdk that you can include in your

1583
00:55:44,640 --> 00:55:46,240
application

1584
00:55:46,240 --> 00:55:47,760
which will actually scan all other

1585
00:55:47,760 --> 00:55:49,920
applications and will mostly check out

1586
00:55:49,920 --> 00:55:51,599
the combination of

1587
00:55:51,599 --> 00:55:52,880
the system alerts window and

1588
00:55:52,880 --> 00:55:55,280
accessibility services because a

1589
00:55:55,280 --> 00:55:57,599
legitimate application most likely will

1590
00:55:57,599 --> 00:55:59,839
not need that combination

1591
00:55:59,839 --> 00:56:01,359
but they go much further of course

1592
00:56:01,359 --> 00:56:03,280
that's internal

1593
00:56:03,280 --> 00:56:05,359
knowledge and i don't know exactly how

1594
00:56:05,359 --> 00:56:07,760
they work but apparently they have a

1595
00:56:07,760 --> 00:56:09,520
very good

1596
00:56:09,520 --> 00:56:11,599
false positive rate which is the main

1597
00:56:11,599 --> 00:56:13,680
thing that you're worried about here

1598
00:56:13,680 --> 00:56:15,599
now what do you do if you detect that a

1599
00:56:15,599 --> 00:56:18,720
user's device is under attack

1600
00:56:18,720 --> 00:56:20,079
i would say it fully depends on the

1601
00:56:20,079 --> 00:56:22,640
false positive rate um

1602
00:56:22,640 --> 00:56:25,119
i would probably never go towards an

1603
00:56:25,119 --> 00:56:27,440
immediate block of an application

1604
00:56:27,440 --> 00:56:28,880
though i'm not in the risk assessment

1605
00:56:28,880 --> 00:56:30,480
field i'm in the reverse engineering

1606
00:56:30,480 --> 00:56:32,000
field

1607
00:56:32,000 --> 00:56:33,280
but it's a good

1608
00:56:33,280 --> 00:56:34,880
indicator to include in your risk

1609
00:56:34,880 --> 00:56:37,839
analysis it might make sense to actually

1610
00:56:37,839 --> 00:56:39,920
temporarily block them it might make

1611
00:56:39,920 --> 00:56:41,760
sense to make them

1612
00:56:41,760 --> 00:56:43,359
on board the application again it might

1613
00:56:43,359 --> 00:56:45,119
make sense to actually prevent

1614
00:56:45,119 --> 00:56:47,760
application on boardings because

1615
00:56:47,760 --> 00:56:49,280
with this kind of attack there's a

1616
00:56:49,280 --> 00:56:51,040
chance that they will create a secondary

1617
00:56:51,040 --> 00:56:53,200
device which is fully onboarded as the

1618
00:56:53,200 --> 00:56:54,400
victim

1619
00:56:54,400 --> 00:56:57,040
so a new onboarding could be blocked and

1620
00:56:57,040 --> 00:56:58,400
maybe you will require some step

1621
00:56:58,400 --> 00:57:03,440
authentication such as biometrics

1622
00:57:04,240 --> 00:57:07,920
yeah well that's basically it

1623
00:57:07,920 --> 00:57:09,680
if you want to know more about the

1624
00:57:09,680 --> 00:57:11,839
technical stuff i did write quite some

1625
00:57:11,839 --> 00:57:15,040
articles on the blog and visa blog

1626
00:57:15,040 --> 00:57:17,119
it also explains the different steps i

1627
00:57:17,119 --> 00:57:18,880
took to reverse engineer the malware and

1628
00:57:18,880 --> 00:57:20,960
it also includes all of my failures

1629
00:57:20,960 --> 00:57:22,319
which i think is something important to

1630
00:57:22,319 --> 00:57:24,319
do because it will just show my train of

1631
00:57:24,319 --> 00:57:26,319
thought and everything that did not work

1632
00:57:26,319 --> 00:57:27,760
but would still give

1633
00:57:27,760 --> 00:57:29,040
interesting information in case it would

1634
00:57:29,040 --> 00:57:30,720
work

1635
00:57:30,720 --> 00:57:33,680
so yeah if there are any final questions

1636
00:57:33,680 --> 00:57:36,079
don't hesitate to shout them out or come

1637
00:57:36,079 --> 00:57:37,119
see me

1638
00:57:37,119 --> 00:57:40,520
during the break

1639
00:57:41,520 --> 00:57:43,599
don't be shy

1640
00:57:43,599 --> 00:57:44,960
unless you know me and you just want to

1641
00:57:44,960 --> 00:57:46,799
ask a difficult question then please

1642
00:57:46,799 --> 00:57:49,119
don't

1643
00:57:50,400 --> 00:57:53,280
i know who you are

1644
00:57:53,680 --> 00:57:56,079
hi uh thank you for the interesting talk

1645
00:57:56,079 --> 00:57:58,160
you just mentioned that biometrics

1646
00:57:58,160 --> 00:57:59,760
security could

1647
00:57:59,760 --> 00:58:02,400
prevent these kind of malware but

1648
00:58:02,400 --> 00:58:04,400
can they just cancel the biometric and

1649
00:58:04,400 --> 00:58:06,640
enter a code because mostly they have

1650
00:58:06,640 --> 00:58:08,480
got a backup with goats for the

1651
00:58:08,480 --> 00:58:09,680
biometrics

1652
00:58:09,680 --> 00:58:11,920
very good question

1653
00:58:11,920 --> 00:58:14,000
the biometrics is actually handled by

1654
00:58:14,000 --> 00:58:16,400
the system itself which is like a screen

1655
00:58:16,400 --> 00:58:17,760
on top of

1656
00:58:17,760 --> 00:58:18,480
the

1657
00:58:18,480 --> 00:58:19,760
application

1658
00:58:19,760 --> 00:58:22,000
i don't even think there's an api that

1659
00:58:22,000 --> 00:58:23,920
will actually allow you to

1660
00:58:23,920 --> 00:58:26,400
to to click the cancel or whatever i

1661
00:58:26,400 --> 00:58:28,160
even don't think accessibility can click

1662
00:58:28,160 --> 00:58:29,599
the cancel

1663
00:58:29,599 --> 00:58:31,280
but it is something that i now want to

1664
00:58:31,280 --> 00:58:32,880
try out because it is an excellent

1665
00:58:32,880 --> 00:58:34,000
suggestion

1666
00:58:34,000 --> 00:58:36,000
as far as i know accessibility cannot

1667
00:58:36,000 --> 00:58:38,319
interact with a system level thing on

1668
00:58:38,319 --> 00:58:39,599
top

1669
00:58:39,599 --> 00:58:41,280
but very good question i'm gonna try it

1670
00:58:41,280 --> 00:58:43,040
out probably tonight

1671
00:58:43,040 --> 00:58:45,040
i'll let you know

1672
00:58:45,040 --> 00:58:48,839
and if not i have to modify my slide so

1673
00:58:48,839 --> 00:58:52,720
thanks any other questions

1674
00:58:52,720 --> 00:58:54,959
yes

1675
00:58:56,960 --> 00:58:59,680
i had extra slides on ios malware so

1676
00:58:59,680 --> 00:59:00,880
it's not just android who has the

1677
00:59:00,880 --> 00:59:01,760
problem

1678
00:59:01,760 --> 00:59:03,280
but well

1679
00:59:03,280 --> 00:59:04,880
time's up

1680
00:59:04,880 --> 00:59:07,200
so you mentioned that uh reversing flu

1681
00:59:07,200 --> 00:59:10,079
bot was difficult uh how long did it

1682
00:59:10,079 --> 00:59:11,200
take you

1683
00:59:11,200 --> 00:59:12,400
how did what

1684
00:59:12,400 --> 00:59:13,280
um

1685
00:59:13,280 --> 00:59:15,359
so flubot how long did it take to

1686
00:59:15,359 --> 00:59:17,920
reverse it you saw that it's it was

1687
00:59:17,920 --> 00:59:20,799
encrypted uh the main application was

1688
00:59:20,799 --> 00:59:23,680
really tricky to look into didn't take

1689
00:59:23,680 --> 00:59:26,160
too long uh but mostly because i do have

1690
00:59:26,160 --> 00:59:27,520
quite some experience with reversing

1691
00:59:27,520 --> 00:59:29,760
android and the combination of static

1692
00:59:29,760 --> 00:59:34,720
and frida works rather well it took me

1693
00:59:34,720 --> 00:59:37,760
10 hours or something because it came

1694
00:59:37,760 --> 00:59:39,440
out on tuesday and then

1695
00:59:39,440 --> 00:59:40,880
by wednesday or

1696
00:59:40,880 --> 00:59:42,960
but thursday i had to report

1697
00:59:42,960 --> 00:59:45,760
but i did not get a lot of sleep

1698
00:59:45,760 --> 00:59:47,119
the nice thing is that

1699
00:59:47,119 --> 00:59:48,559
even with the reflection and the string

1700
00:59:48,559 --> 00:59:49,920
encryption

1701
00:59:49,920 --> 00:59:51,920
if you search for the right there's all

1702
00:59:51,920 --> 00:59:53,839
not no obfuscation is perfect you will

1703
00:59:53,839 --> 00:59:55,680
always find some clues

1704
00:59:55,680 --> 00:59:57,680
and with frida you can actually also

1705
00:59:57,680 --> 00:59:58,640
hook

1706
00:59:58,640 --> 01:00:01,440
on a system api so i would hook on the

1707
01:00:01,440 --> 01:00:03,839
http connection and then you can print a

1708
01:00:03,839 --> 01:00:05,680
stack trace which will show exactly how

1709
01:00:05,680 --> 01:00:07,280
you got there and then yeah well you

1710
01:00:07,280 --> 01:00:08,640
investigate all those methods and you

1711
01:00:08,640 --> 01:00:09,520
figure

1712
01:00:09,520 --> 01:00:11,520
sometimes i just hook 100 things and see

1713
01:00:11,520 --> 01:00:13,520
what passes through and if you're lucky

1714
01:00:13,520 --> 01:00:15,359
well one of them hits and you can take

1715
01:00:15,359 --> 01:00:16,559
it from there

1716
01:00:16,559 --> 01:00:18,400
um also the like the

1717
01:00:18,400 --> 01:00:20,559
the newer samples which were obfuscated

1718
01:00:20,559 --> 01:00:22,400
very differently still have the same

1719
01:00:22,400 --> 01:00:24,319
structure so i was actually able to

1720
01:00:24,319 --> 01:00:26,400
quickly once i saw that piece of code i

1721
01:00:26,400 --> 01:00:28,160
immediately knew uh this is that

1722
01:00:28,160 --> 01:00:30,240
structure with the tricatch and very

1723
01:00:30,240 --> 01:00:31,760
specific

1724
01:00:31,760 --> 01:00:33,599
so i was really happy that my initial

1725
01:00:33,599 --> 01:00:35,040
reverse engineering

1726
01:00:35,040 --> 01:00:37,280
allowed me to quickly identify new

1727
01:00:37,280 --> 01:00:38,720
samples which is not something that i

1728
01:00:38,720 --> 01:00:42,559
was expecting but was quite nice to have

1729
01:00:42,559 --> 01:00:45,040
all right that's it i guess

1730
01:00:45,040 --> 01:00:48,839
all right thank you everybody

1731
01:00:48,920 --> 01:00:55,179
[Applause]

