1
00:00:03,390 --> 00:00:09,250
<font color="#E5E5E5">all right good</font><font color="#CCCCCC"> afternoon</font><font color="#E5E5E5"> welcome</font>

2
00:00:06,849 --> 00:00:12,370
this talk is signatures are dead<font color="#E5E5E5"> long</font>

3
00:00:09,250 --> 00:00:14,590
live<font color="#E5E5E5"> resilient signatures my name is</font>

4
00:00:12,370 --> 00:00:16,779
<font color="#E5E5E5">Daniel Bohannon I'm an applied security</font>

5
00:00:14,590 --> 00:00:18,250
researcher with<font color="#CCCCCC"> far I prior</font><font color="#E5E5E5"> to that I</font>

6
00:00:16,779 --> 00:00:20,380
<font color="#CCCCCC">spent several years</font><font color="#E5E5E5"> doing Incident</font>

7
00:00:18,250 --> 00:00:22,630
Response consulting with mandiant<font color="#E5E5E5"> and as</font>

8
00:00:20,380 --> 00:00:25,570
the<font color="#CCCCCC"> slide says I'm obsessed with coffee</font>

9
00:00:22,630 --> 00:00:27,250
<font color="#CCCCCC">and obfuscation</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> Matthew</font><font color="#E5E5E5"> TT I'm</font>

10
00:00:25,570 --> 00:00:29,109
senior security architect for<font color="#E5E5E5"> endpoint</font>

11
00:00:27,250 --> 00:00:30,820
<font color="#CCCCCC">Fire I</font><font color="#E5E5E5"> before that I did applied</font>

12
00:00:29,109 --> 00:00:34,329
security research and<font color="#E5E5E5"> also spend several</font>

13
00:00:30,820 --> 00:00:35,710
years<font color="#CCCCCC"> to an</font><font color="#E5E5E5"> IR atmanand as well so man</font>

14
00:00:34,329 --> 00:00:38,620
I've worked together for<font color="#CCCCCC"> several years</font>

15
00:00:35,710 --> 00:00:40,840
<font color="#CCCCCC">now in in a lot of</font><font color="#E5E5E5"> overlapping roles and</font>

16
00:00:38,620 --> 00:00:43,390
so this talk is<font color="#E5E5E5"> really comes</font><font color="#CCCCCC"> from a</font>

17
00:00:40,840 --> 00:00:45,430
place of our<font color="#CCCCCC"> responsibility working on a</font>

18
00:00:43,390 --> 00:00:47,079
team to<font color="#E5E5E5"> develop detections that we use</font>

19
00:00:45,430 --> 00:00:48,850
in our Incident Response engagements as

20
00:00:47,079 --> 00:00:51,040
well as what we use in our entire fleet

21
00:00:48,850 --> 00:00:54,250
<font color="#CCCCCC">of products across</font><font color="#E5E5E5"> all of our service</font>

22
00:00:51,040 --> 00:00:56,980
lines<font color="#CCCCCC"> and so it's been</font><font color="#E5E5E5"> really formative</font>

23
00:00:54,250 --> 00:00:59,410
<font color="#E5E5E5">for us as we come</font><font color="#CCCCCC"> up with detection</font>

24
00:00:56,980 --> 00:01:01,390
ideas and assumptions<font color="#CCCCCC"> about things that</font>

25
00:00:59,410 --> 00:01:03,309
<font color="#E5E5E5">we think maybe this is really unique</font>

26
00:01:01,390 --> 00:01:05,590
<font color="#E5E5E5">it'll be a great detection and sometimes</font>

27
00:01:03,309 --> 00:01:07,509
that ends<font color="#E5E5E5"> up not</font><font color="#CCCCCC"> being the case and so</font>

28
00:01:05,590 --> 00:01:09,429
kind<font color="#E5E5E5"> of the methodologies that we've</font>

29
00:01:07,509 --> 00:01:11,139
<font color="#CCCCCC">developed and that we find</font><font color="#E5E5E5"> helpful</font><font color="#CCCCCC"> are</font>

30
00:01:09,429 --> 00:01:12,999
what we're sharing<font color="#CCCCCC"> with you</font><font color="#E5E5E5"> today and</font>

31
00:01:11,139 --> 00:01:14,589
<font color="#CCCCCC">these are things that we use to build</font>

32
00:01:12,999 --> 00:01:16,600
<font color="#E5E5E5">detections that we run across</font><font color="#CCCCCC"> millions</font>

33
00:01:14,590 --> 00:01:19,240
of<font color="#CCCCCC"> endpoints and hundreds of networks</font>

34
00:01:16,600 --> 00:01:20,829
<font color="#E5E5E5">that sensors and have had really</font>

35
00:01:19,240 --> 00:01:22,869
<font color="#CCCCCC">honestly a lot</font><font color="#E5E5E5"> of fun doing this and</font>

36
00:01:20,829 --> 00:01:24,369
<font color="#E5E5E5">actually seeing it help our</font><font color="#CCCCCC"> customers</font>

37
00:01:22,869 --> 00:01:25,749
and clients and<font color="#E5E5E5"> actually catching evil</font>

38
00:01:24,369 --> 00:01:28,899
and so we want to<font color="#E5E5E5"> share that with you</font>

39
00:01:25,749 --> 00:01:31,029
guys here<font color="#CCCCCC"> today so a</font><font color="#E5E5E5"> brief outline we're</font>

40
00:01:28,899 --> 00:01:33,369
going to do just<font color="#CCCCCC"> a quick</font><font color="#E5E5E5"> background of</font>

41
00:01:31,029 --> 00:01:34,779
kind<font color="#CCCCCC"> of some</font><font color="#E5E5E5"> of the kind of</font><font color="#CCCCCC"> an overview</font>

42
00:01:33,369 --> 00:01:37,029
<font color="#E5E5E5">of some</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> methodologies that we'll</font>

43
00:01:34,779 --> 00:01:39,459
be diving<font color="#E5E5E5"> into and then we'll talk</font><font color="#CCCCCC"> about</font>

44
00:01:37,029 --> 00:01:43,240
the<font color="#E5E5E5"> the high level</font><font color="#CCCCCC"> process of going</font>

45
00:01:39,459 --> 00:01:45,520
<font color="#E5E5E5">about methodology detection development</font>

46
00:01:43,240 --> 00:01:48,639
and testing and then we'll look through

47
00:01:45,520 --> 00:01:50,319
<font color="#E5E5E5">a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of case studies looking at</font><font color="#CCCCCC"> and</font>

48
00:01:48,639 --> 00:01:52,869
at collecting triaging and coming up

49
00:01:50,319 --> 00:01:54,999
with the Texans<font color="#E5E5E5"> for binary for a binary</font>

50
00:01:52,869 --> 00:01:57,069
related malware as well as some<font color="#CCCCCC"> more</font>

51
00:01:54,999 --> 00:02:00,219
kind<font color="#E5E5E5"> of living off the land</font><font color="#CCCCCC"> techniques</font>

52
00:01:57,069 --> 00:02:02,829
like a register of<font color="#E5E5E5"> an SCT scripts and as</font>

53
00:02:00,219 --> 00:02:05,439
we go along<font color="#CCCCCC"> we'll be looking at ways</font>

54
00:02:02,829 --> 00:02:07,029
that we can<font color="#E5E5E5"> break bad assumptions and</font>

55
00:02:05,439 --> 00:02:08,889
looking at obfuscation<font color="#E5E5E5"> and evasion and</font>

56
00:02:07,029 --> 00:02:10,068
<font color="#E5E5E5">how we factor</font><font color="#CCCCCC"> that in to our detection</font>

57
00:02:08,889 --> 00:02:12,980
development

58
00:02:10,068 --> 00:02:15,679
and then we'll<font color="#E5E5E5"> end with kind of kind of</font>

59
00:02:12,980 --> 00:02:17,689
looking at holistically<font color="#CCCCCC"> where do we get</font>

60
00:02:15,680 --> 00:02:19,700
<font color="#CCCCCC">input for these detection ideas and how</font>

61
00:02:17,689 --> 00:02:21,828
do we<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of have</font><font color="#CCCCCC"> that iterative</font><font color="#E5E5E5"> cycle</font>

62
00:02:19,700 --> 00:02:23,780
for ourselves<font color="#CCCCCC"> personally as well as our</font>

63
00:02:21,829 --> 00:02:24,920
overall<font color="#E5E5E5"> team to continually make sure</font>

64
00:02:23,780 --> 00:02:27,079
<font color="#E5E5E5">that we're staying on top of new</font>

65
00:02:24,920 --> 00:02:28,849
attacker techniques<font color="#CCCCCC"> and then we'll end</font>

66
00:02:27,079 --> 00:02:33,739
<font color="#CCCCCC">with a few takeaways</font><font color="#E5E5E5"> and have some time</font>

67
00:02:28,849 --> 00:02:35,689
for<font color="#CCCCCC"> questions</font><font color="#E5E5E5"> so first the background</font><font color="#CCCCCC"> we</font>

68
00:02:33,739 --> 00:02:37,670
have<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> D for speak in this</font>

69
00:02:35,689 --> 00:02:39,310
<font color="#E5E5E5">community and there's a lot of</font><font color="#CCCCCC"> terms</font>

70
00:02:37,670 --> 00:02:42,290
that are<font color="#CCCCCC"> used very interchangeably</font>

71
00:02:39,310 --> 00:02:45,680
<font color="#CCCCCC">things like</font><font color="#E5E5E5"> signatures triggers rules</font>

72
00:02:42,290 --> 00:02:48,560
<font color="#E5E5E5">IOC s but they also have a lot of loaded</font>

73
00:02:45,680 --> 00:02:50,720
meaning<font color="#E5E5E5"> so when you hear signature you</font>

74
00:02:48,560 --> 00:02:52,310
might think<font color="#E5E5E5"> a V signature or when you</font>

75
00:02:50,720 --> 00:02:54,109
hear trigger you might think real time

76
00:02:52,310 --> 00:02:55,849
versus historical<font color="#E5E5E5"> when you think I</font><font color="#CCCCCC"> Oh</font>

77
00:02:54,109 --> 00:02:56,750
<font color="#E5E5E5">see you may think just MV fives or</font>

78
00:02:55,849 --> 00:02:59,060
something like<font color="#E5E5E5"> that</font>

79
00:02:56,750 --> 00:03:00,889
and so what we want to<font color="#E5E5E5"> do is kind</font><font color="#CCCCCC"> of set</font>

80
00:02:59,060 --> 00:03:03,349
a blanket term of detection<font color="#E5E5E5"> and say</font>

81
00:03:00,889 --> 00:03:05,450
we're trying<font color="#E5E5E5"> to find things that</font><font color="#CCCCCC"> were</font>

82
00:03:03,349 --> 00:03:07,730
not meant to<font color="#CCCCCC"> be found</font><font color="#E5E5E5"> things that were</font>

83
00:03:05,450 --> 00:03:09,470
concealed<font color="#E5E5E5"> and we want to make sense of</font>

84
00:03:07,730 --> 00:03:10,909
what those<font color="#E5E5E5"> are and have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> context to</font>

85
00:03:09,470 --> 00:03:13,310
say is this<font color="#CCCCCC"> something I should be</font>

86
00:03:10,909 --> 00:03:17,290
<font color="#CCCCCC">concerned about is this malicious is</font>

87
00:03:13,310 --> 00:03:20,510
this<font color="#E5E5E5"> interesting to me as a defender and</font>

88
00:03:17,290 --> 00:03:23,078
<font color="#CCCCCC">this term for us</font><font color="#E5E5E5"> in this talk today</font><font color="#CCCCCC"> will</font>

89
00:03:20,510 --> 00:03:26,629
<font color="#E5E5E5">cover both real-time and historical</font>

90
00:03:23,079 --> 00:03:28,129
<font color="#E5E5E5">we'll also cover</font><font color="#CCCCCC"> hosts and</font><font color="#E5E5E5"> network a lot</font>

91
00:03:26,629 --> 00:03:30,470
of<font color="#E5E5E5"> these the methodology so we'll be</font>

92
00:03:28,129 --> 00:03:32,239
talking<font color="#E5E5E5"> about do apply to both and we'll</font>

93
00:03:30,470 --> 00:03:34,220
be talking<font color="#E5E5E5"> about these techniques</font><font color="#CCCCCC"> from a</font>

94
00:03:32,239 --> 00:03:36,199
language<font color="#CCCCCC"> and tool agnostic perspective</font>

95
00:03:34,220 --> 00:03:38,060
<font color="#E5E5E5">because</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> get a big part of our</font><font color="#CCCCCC"> job</font>

96
00:03:36,199 --> 00:03:40,519
is<font color="#CCCCCC"> when we put</font><font color="#E5E5E5"> in time to research a</font>

97
00:03:38,060 --> 00:03:42,169
technique and a detection idea then we

98
00:03:40,519 --> 00:03:44,780
want<font color="#E5E5E5"> to get the most mileage out of</font><font color="#CCCCCC"> that</font>

99
00:03:42,169 --> 00:03:49,459
<font color="#E5E5E5">by translating that into various</font>

100
00:03:44,780 --> 00:03:51,799
detection platforms so what is a

101
00:03:49,459 --> 00:03:55,280
signature<font color="#CCCCCC"> what is an indicator what is</font>

102
00:03:51,799 --> 00:03:58,310
<font color="#E5E5E5">the</font><font color="#CCCCCC"> detection is it hashes file names</font>

103
00:03:55,280 --> 00:04:00,229
IPS is that people's<font color="#CCCCCC"> twitter handles and</font>

104
00:03:58,310 --> 00:04:03,049
comments<font color="#E5E5E5"> of source code well the answer</font>

105
00:04:00,229 --> 00:04:05,359
is<font color="#CCCCCC"> sometimes for all of</font><font color="#E5E5E5"> these right how</font>

106
00:04:03,049 --> 00:04:08,329
about<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little exercise</font><font color="#CCCCCC"> can you spot the</font>

107
00:04:05,359 --> 00:04:11,659
<font color="#CCCCCC">bad signature here on the</font><font color="#E5E5E5"> left we have a</font>

108
00:04:08,329 --> 00:04:14,659
lot of md5<font color="#E5E5E5"> hashes on the right IP</font>

109
00:04:11,659 --> 00:04:15,640
<font color="#E5E5E5">addresses</font><font color="#CCCCCC"> fqd ends</font><font color="#E5E5E5"> well the answer here</font>

110
00:04:14,659 --> 00:04:18,310
is<font color="#E5E5E5"> it depends</font>

111
00:04:15,640 --> 00:04:22,060
it depends on the context<font color="#CCCCCC"> when we're</font>

112
00:04:18,310 --> 00:04:24,880
scoping an active incident then we

113
00:04:22,060 --> 00:04:26,920
absolutely will use md5<font color="#E5E5E5"> and IPS and</font><font color="#CCCCCC"> fqt</font>

114
00:04:24,880 --> 00:04:28,420
ends for scoping in that one environment

115
00:04:26,920 --> 00:04:30,640
<font color="#E5E5E5">but those are things that can very</font>

116
00:04:28,420 --> 00:04:33,010
easily be changed<font color="#CCCCCC"> and</font><font color="#E5E5E5"> yes some attackers</font>

117
00:04:30,640 --> 00:04:35,500
do reuse infrastructure some will reuse

118
00:04:33,010 --> 00:04:37,630
exact binaries<font color="#CCCCCC"> the hashes are still</font>

119
00:04:35,500 --> 00:04:40,510
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we look at but if we have</font>

120
00:04:37,630 --> 00:04:43,120
a hash for<font color="#CCCCCC"> our list of</font><font color="#E5E5E5"> hashes in an IOC</font>

121
00:04:40,510 --> 00:04:44,830
for one malware family<font color="#E5E5E5"> we do not say</font>

122
00:04:43,120 --> 00:04:47,260
<font color="#CCCCCC">that we can</font><font color="#E5E5E5"> detect that malware family</font>

123
00:04:44,830 --> 00:04:48,940
based on<font color="#E5E5E5"> that alone</font><font color="#CCCCCC"> that would</font><font color="#E5E5E5"> be naive</font>

124
00:04:47,260 --> 00:04:50,620
so we want to<font color="#E5E5E5"> take a step back and back</font>

125
00:04:48,940 --> 00:04:55,060
what<font color="#E5E5E5"> are all the other opportunities we</font>

126
00:04:50,620 --> 00:04:57,340
have to detect this<font color="#E5E5E5"> thing so when it</font>

127
00:04:55,060 --> 00:04:59,650
comes to developing detection<font color="#CCCCCC"> x' we want</font>

128
00:04:57,340 --> 00:05:03,640
to make<font color="#CCCCCC"> sure that that our input of what</font>

129
00:04:59,650 --> 00:05:05,679
detection czar is a bad input<font color="#E5E5E5"> right so</font>

130
00:05:03,640 --> 00:05:07,810
again<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> people when they hear the</font>

131
00:05:05,680 --> 00:05:09,850
word IOC they think oh it's just md5 and

132
00:05:07,810 --> 00:05:11,860
<font color="#CCCCCC">I</font><font color="#E5E5E5"> appease and have QT</font><font color="#CCCCCC"> ends that's</font><font color="#E5E5E5"> the</font>

133
00:05:09,850 --> 00:05:13,870
only<font color="#E5E5E5"> IOC's you've ever seen that's a</font>

134
00:05:11,860 --> 00:05:15,550
logical conclusion<font color="#CCCCCC"> to</font><font color="#E5E5E5"> come to but the</font>

135
00:05:13,870 --> 00:05:17,130
<font color="#E5E5E5">reality is is that it's so much</font><font color="#CCCCCC"> more</font>

136
00:05:15,550 --> 00:05:19,570
<font color="#E5E5E5">than that and it royal boils down to</font>

137
00:05:17,130 --> 00:05:21,460
<font color="#CCCCCC">and/or logic of any</font><font color="#E5E5E5"> information you can</font>

138
00:05:19,570 --> 00:05:23,530
<font color="#CCCCCC">put into</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> so we want to make sure that</font>

139
00:05:21,460 --> 00:05:26,710
we're not putting<font color="#E5E5E5"> our our selves in a</font>

140
00:05:23,530 --> 00:05:29,169
detection<font color="#E5E5E5"> box but that</font><font color="#CCCCCC"> we can actually</font>

141
00:05:26,710 --> 00:05:31,799
see<font color="#CCCCCC"> all available all</font><font color="#E5E5E5"> the available data</font>

142
00:05:29,169 --> 00:05:34,090
<font color="#CCCCCC">and explore it accordingly</font>

143
00:05:31,800 --> 00:05:36,220
so who actually gets to<font color="#E5E5E5"> define what a</font>

144
00:05:34,090 --> 00:05:38,320
good<font color="#E5E5E5"> signature is then right some people</font>

145
00:05:36,220 --> 00:05:42,580
<font color="#CCCCCC">say it is NB</font><font color="#E5E5E5"> fives</font><font color="#CCCCCC"> some people say it's</font>

146
00:05:38,320 --> 00:05:45,250
<font color="#CCCCCC">not</font><font color="#E5E5E5"> so when it comes to</font><font color="#CCCCCC"> finding good</font>

147
00:05:42,580 --> 00:05:47,620
signatures<font color="#CCCCCC"> I think it really</font><font color="#E5E5E5"> depends in</font>

148
00:05:45,250 --> 00:05:49,090
a lot<font color="#E5E5E5"> of ways it depends on the the</font><font color="#CCCCCC"> tool</font>

149
00:05:47,620 --> 00:05:51,669
<font color="#CCCCCC">you have available but more importantly</font>

150
00:05:49,090 --> 00:05:54,219
once the context<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> have a signature</font>

151
00:05:51,669 --> 00:05:55,810
of<font color="#CCCCCC"> that fires and what what context you</font>

152
00:05:54,220 --> 00:05:57,640
have<font color="#E5E5E5"> to then take</font><font color="#CCCCCC"> an actionable step</font>

153
00:05:55,810 --> 00:05:59,350
with<font color="#CCCCCC"> that</font><font color="#E5E5E5"> signature because ultimately</font>

154
00:05:57,640 --> 00:06:01,180
it needs<font color="#CCCCCC"> to make sense to the person</font>

155
00:05:59,350 --> 00:06:03,160
<font color="#E5E5E5">who's looking at</font><font color="#CCCCCC"> it so they can take the</font>

156
00:06:01,180 --> 00:06:05,740
<font color="#E5E5E5">next step to do what's best for them</font><font color="#CCCCCC"> in</font>

157
00:06:03,160 --> 00:06:09,220
their organization in their environment

158
00:06:05,740 --> 00:06:11,410
or for their customer so good signatures

159
00:06:09,220 --> 00:06:14,380
<font color="#E5E5E5">we want signatures that are more</font>

160
00:06:11,410 --> 00:06:15,880
resilient<font color="#CCCCCC"> than rigid</font><font color="#E5E5E5"> md5</font><font color="#CCCCCC"> SI</font><font color="#E5E5E5"> peas those</font>

161
00:06:14,380 --> 00:06:17,620
are rigid<font color="#E5E5E5"> those can very easily be</font>

162
00:06:15,880 --> 00:06:20,950
changed<font color="#CCCCCC"> but we really want to</font><font color="#E5E5E5"> have a</font>

163
00:06:17,620 --> 00:06:23,380
<font color="#CCCCCC">defense-in-depth</font><font color="#E5E5E5"> approach an attack a</font>

164
00:06:20,950 --> 00:06:24,950
<font color="#E5E5E5">malware family or a methodology from</font>

165
00:06:23,380 --> 00:06:26,600
many different angles<font color="#E5E5E5"> so that</font>

166
00:06:24,950 --> 00:06:27,770
for an attacker to evade<font color="#CCCCCC"> they don't have</font>

167
00:06:26,600 --> 00:06:31,010
to evade every single one<font color="#E5E5E5"> of those</font>

168
00:06:27,770 --> 00:06:32,719
angles we also want more methodology

169
00:06:31,010 --> 00:06:34,310
based<font color="#E5E5E5"> that's specific we definitely do</font>

170
00:06:32,720 --> 00:06:36,520
<font color="#E5E5E5">have very specific signatures and</font>

171
00:06:34,310 --> 00:06:39,440
detection<font color="#CCCCCC"> x'</font><font color="#E5E5E5"> but we want to have broad</font>

172
00:06:36,520 --> 00:06:41,030
overarching detections as well<font color="#E5E5E5"> if</font>

173
00:06:39,440 --> 00:06:42,890
nothing<font color="#E5E5E5"> else for the purpose of</font>

174
00:06:41,030 --> 00:06:44,390
gathering<font color="#E5E5E5"> information and identifying</font>

175
00:06:42,890 --> 00:06:46,729
when attackers are changing<font color="#CCCCCC"> certain</font>

176
00:06:44,390 --> 00:06:49,219
pieces<font color="#E5E5E5"> and we can catch them</font><font color="#CCCCCC"> step by</font>

177
00:06:46,730 --> 00:06:51,950
<font color="#CCCCCC">step as they are evading</font><font color="#E5E5E5"> their tools and</font>

178
00:06:49,220 --> 00:06:54,230
their tradecraft<font color="#CCCCCC"> and it's also more</font>

179
00:06:51,950 --> 00:06:55,820
proactive<font color="#CCCCCC"> than reactive definitely</font>

180
00:06:54,230 --> 00:06:58,130
always<font color="#E5E5E5"> see brand new malware</font><font color="#CCCCCC"> then all</font>

181
00:06:55,820 --> 00:07:00,080
men<font color="#E5E5E5"> we have to react and write detection</font>

182
00:06:58,130 --> 00:07:01,940
for this new thing<font color="#E5E5E5"> but we can also be</font>

183
00:07:00,080 --> 00:07:03,349
very proactive<font color="#E5E5E5"> and staying on</font><font color="#CCCCCC"> top of</font>

184
00:07:01,940 --> 00:07:05,270
<font color="#CCCCCC">things that are released on Twitter and</font>

185
00:07:03,350 --> 00:07:07,190
github<font color="#E5E5E5"> but also doing our</font><font color="#CCCCCC"> own internal</font>

186
00:07:05,270 --> 00:07:09,289
research and running<font color="#E5E5E5"> from researchers in</font>

187
00:07:07,190 --> 00:07:10,610
venues just like<font color="#E5E5E5"> this to see what are</font>

188
00:07:09,290 --> 00:07:12,410
the new topics that are coming down the

189
00:07:10,610 --> 00:07:14,750
<font color="#E5E5E5">pipe and what are the ways that we</font><font color="#CCCCCC"> can</font>

190
00:07:12,410 --> 00:07:16,310
<font color="#E5E5E5">start</font><font color="#CCCCCC"> to explore</font><font color="#E5E5E5"> available data to</font><font color="#CCCCCC"> make</font>

191
00:07:14,750 --> 00:07:18,200
<font color="#CCCCCC">sure that we're staying</font><font color="#E5E5E5"> ahead before we</font>

192
00:07:16,310 --> 00:07:20,450
<font color="#CCCCCC">actually see an attacker use this</font><font color="#E5E5E5"> and</font>

193
00:07:18,200 --> 00:07:22,400
for<font color="#E5E5E5"> that there's a very specific process</font>

194
00:07:20,450 --> 00:07:26,240
<font color="#E5E5E5">that we use and</font><font color="#CCCCCC"> Matt's</font><font color="#E5E5E5"> going to share</font>

195
00:07:22,400 --> 00:07:27,530
this with you now<font color="#CCCCCC"> thanks so</font><font color="#E5E5E5"> talk you</font>

196
00:07:26,240 --> 00:07:28,820
through<font color="#E5E5E5"> kind of at a high</font><font color="#CCCCCC"> level of the</font>

197
00:07:27,530 --> 00:07:30,770
process<font color="#CCCCCC"> you know this is really about</font>

198
00:07:28,820 --> 00:07:32,240
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of how we think about</font><font color="#E5E5E5"> detection and</font>

199
00:07:30,770 --> 00:07:33,849
what makes them good<font color="#CCCCCC"> and a big part of</font>

200
00:07:32,240 --> 00:07:35,870
that<font color="#E5E5E5"> is is</font><font color="#CCCCCC"> how actually</font><font color="#E5E5E5"> go about</font>

201
00:07:33,850 --> 00:07:36,920
<font color="#E5E5E5">establishing these detections of</font>

202
00:07:35,870 --> 00:07:37,790
thinking about them so we're<font color="#E5E5E5"> gonna go</font>

203
00:07:36,920 --> 00:07:40,250
through<font color="#CCCCCC"> this a</font><font color="#E5E5E5"> little bit of a</font>

204
00:07:37,790 --> 00:07:41,720
<font color="#CCCCCC">high-level</font><font color="#E5E5E5"> so walk you through kind of</font>

205
00:07:40,250 --> 00:07:44,000
steps that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> take when</font><font color="#CCCCCC"> we sit down</font><font color="#E5E5E5"> to</font>

206
00:07:41,720 --> 00:07:46,070
<font color="#CCCCCC">think about detecting</font><font color="#E5E5E5"> something whether</font>

207
00:07:44,000 --> 00:07:47,630
it's from<font color="#E5E5E5"> defining those detections</font>

208
00:07:46,070 --> 00:07:50,390
working<font color="#CCCCCC"> away</font><font color="#E5E5E5"> down through getting</font>

209
00:07:47,630 --> 00:07:53,150
example data testing what's already

210
00:07:50,390 --> 00:07:54,800
there<font color="#E5E5E5"> generating data that we can use to</font>

211
00:07:53,150 --> 00:07:55,969
<font color="#CCCCCC">read our detection x' actually writing</font>

212
00:07:54,800 --> 00:07:57,440
<font color="#E5E5E5">them and then the</font><font color="#CCCCCC"> whole testing and</font>

213
00:07:55,970 --> 00:07:58,940
tuning<font color="#E5E5E5"> process</font><font color="#CCCCCC"> to get them to a point</font>

214
00:07:57,440 --> 00:08:01,760
<font color="#E5E5E5">where we can actually productionize them</font>

215
00:07:58,940 --> 00:08:03,170
<font color="#CCCCCC">so starting</font><font color="#E5E5E5"> with defining</font><font color="#CCCCCC"> the detections</font>

216
00:08:01,760 --> 00:08:04,640
the first thing to know<font color="#E5E5E5"> it's just what</font>

217
00:08:03,170 --> 00:08:07,760
is it<font color="#E5E5E5"> exactly that we want to look</font><font color="#CCCCCC"> for</font>

218
00:08:04,640 --> 00:08:10,130
<font color="#CCCCCC">is it some new malware family is it</font><font color="#E5E5E5"> a</font>

219
00:08:07,760 --> 00:08:12,469
new technique that's been<font color="#CCCCCC"> released on</font>

220
00:08:10,130 --> 00:08:15,200
Twitter like squiggly-doo was or some

221
00:08:12,470 --> 00:08:16,730
very broad methodology like<font color="#CCCCCC"> using dns</font>

222
00:08:15,200 --> 00:08:18,050
<font color="#E5E5E5">4c2</font><font color="#CCCCCC"> which should be done in a lot of</font>

223
00:08:16,730 --> 00:08:20,840
<font color="#E5E5E5">different ways</font><font color="#CCCCCC"> and used by a lot of</font>

224
00:08:18,050 --> 00:08:22,640
<font color="#E5E5E5">different</font><font color="#CCCCCC"> actors</font><font color="#E5E5E5"> when divided we want it</font>

225
00:08:20,840 --> 00:08:23,900
in in real time do we want this to<font color="#E5E5E5"> be</font>

226
00:08:22,640 --> 00:08:27,680
more of<font color="#E5E5E5"> a historic</font><font color="#CCCCCC"> thing kind of</font>

227
00:08:23,900 --> 00:08:29,060
<font color="#E5E5E5">scanning versus more dynamic where do we</font>

228
00:08:27,680 --> 00:08:31,040
<font color="#E5E5E5">want to find it we want to you know on</font>

229
00:08:29,060 --> 00:08:33,710
the endpoints<font color="#E5E5E5"> and the network in our sim</font>

230
00:08:31,040 --> 00:08:35,720
in the sandbox maybe preferably all of

231
00:08:33,710 --> 00:08:39,300
the above

232
00:08:35,720 --> 00:08:40,860
and then how do<font color="#CCCCCC"> we</font><font color="#E5E5E5"> want to find it you</font>

233
00:08:39,299 --> 00:08:42,329
<font color="#E5E5E5">know what tools are applicable</font><font color="#CCCCCC"> and</font>

234
00:08:40,860 --> 00:08:45,000
available in our environment that<font color="#CCCCCC"> we can</font>

235
00:08:42,330 --> 00:08:46,620
<font color="#E5E5E5">leverage in order</font><font color="#CCCCCC"> to identify this</font><font color="#E5E5E5"> thing</font>

236
00:08:45,000 --> 00:08:48,330
that we would<font color="#E5E5E5"> do we want to find and</font>

237
00:08:46,620 --> 00:08:49,500
what signature formats are supported and

238
00:08:48,330 --> 00:08:51,300
<font color="#E5E5E5">and best suited there's so many</font>

239
00:08:49,500 --> 00:08:52,590
signature formats out<font color="#CCCCCC"> there and now</font><font color="#E5E5E5"> for</font>

240
00:08:51,300 --> 00:08:54,329
these different<font color="#E5E5E5"> mediums for different</font>

241
00:08:52,590 --> 00:08:57,600
tools<font color="#E5E5E5"> whether that's something</font><font color="#CCCCCC"> like</font>

242
00:08:54,330 --> 00:08:59,190
snort<font color="#E5E5E5"> sim queries you are you are with</font>

243
00:08:57,600 --> 00:09:01,110
the additional modules like the PE

244
00:08:59,190 --> 00:09:04,830
module which adds a lot<font color="#E5E5E5"> of capability</font>

245
00:09:01,110 --> 00:09:07,290
open<font color="#E5E5E5"> IOC</font><font color="#CCCCCC"> sticks clamavi sandbox</font>

246
00:09:04,830 --> 00:09:08,520
signatures EDR signatures there's so

247
00:09:07,290 --> 00:09:09,839
many different places<font color="#E5E5E5"> different ways</font>

248
00:09:08,520 --> 00:09:11,220
that<font color="#E5E5E5"> we can look for things and it's</font>

249
00:09:09,840 --> 00:09:13,200
<font color="#E5E5E5">always really important even at the</font>

250
00:09:11,220 --> 00:09:14,940
outset to<font color="#E5E5E5"> start thinking about based on</font>

251
00:09:13,200 --> 00:09:16,470
<font color="#E5E5E5">what I know about this thing where do I</font>

252
00:09:14,940 --> 00:09:18,180
<font color="#CCCCCC">think</font><font color="#E5E5E5"> this might be applicable and where</font>

253
00:09:16,470 --> 00:09:20,250
do I<font color="#E5E5E5"> need to be paying attention and</font>

254
00:09:18,180 --> 00:09:22,079
<font color="#E5E5E5">focusing my efforts and then</font><font color="#CCCCCC"> also false</font>

255
00:09:20,250 --> 00:09:24,120
positive<font color="#CCCCCC"> tolerance I mean</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> really</font>

256
00:09:22,080 --> 00:09:25,650
going to define a lot about how my

257
00:09:24,120 --> 00:09:28,020
detection czar going to work because<font color="#E5E5E5"> I</font>

258
00:09:25,650 --> 00:09:29,550
<font color="#CCCCCC">need to</font><font color="#E5E5E5"> know what is the standard that</font>

259
00:09:28,020 --> 00:09:31,290
<font color="#CCCCCC">I'm aiming for what is the expectation</font>

260
00:09:29,550 --> 00:09:32,280
that's going to come<font color="#E5E5E5"> out of this is this</font>

261
00:09:31,290 --> 00:09:34,079
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'm using on an</font>

262
00:09:32,280 --> 00:09:36,000
<font color="#CCCCCC">engagement where I can have a much</font>

263
00:09:34,080 --> 00:09:37,470
higher false positive rate and nobody's

264
00:09:36,000 --> 00:09:39,450
really<font color="#E5E5E5"> going to mind</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> something</font>

265
00:09:37,470 --> 00:09:41,040
that's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> into a</font><font color="#E5E5E5"> product where every</font>

266
00:09:39,450 --> 00:09:44,600
false positive a customer is<font color="#E5E5E5"> going to be</font>

267
00:09:41,040 --> 00:09:44,599
<font color="#CCCCCC">calling our company and complaining that</font>

268
00:09:44,780 --> 00:09:50,579
we<font color="#E5E5E5"> need to assemble a sample set so this</font>

269
00:09:48,750 --> 00:09:52,050
is just samples representing the thing

270
00:09:50,580 --> 00:09:53,310
that we want<font color="#CCCCCC"> to write the detection</font><font color="#E5E5E5"> for</font>

271
00:09:52,050 --> 00:09:54,660
and<font color="#CCCCCC"> we can get these in a couple of</font>

272
00:09:53,310 --> 00:09:56,790
<font color="#E5E5E5">different</font><font color="#CCCCCC"> ways the first</font><font color="#E5E5E5"> being just</font>

273
00:09:54,660 --> 00:09:58,469
collecting them<font color="#CCCCCC"> you know for a malware</font>

274
00:09:56,790 --> 00:10:00,120
family<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is going to be really the</font>

275
00:09:58,470 --> 00:10:01,890
only way<font color="#CCCCCC"> that we can do it</font><font color="#E5E5E5"> for something</font>

276
00:10:00,120 --> 00:10:04,530
<font color="#CCCCCC">that that is an attacker created</font>

277
00:10:01,890 --> 00:10:05,850
<font color="#E5E5E5">attacker in the wild malware family but</font>

278
00:10:04,530 --> 00:10:07,650
for<font color="#E5E5E5"> other things we can still collect</font>

279
00:10:05,850 --> 00:10:09,150
examples we're also generating<font color="#CCCCCC"> others so</font>

280
00:10:07,650 --> 00:10:10,920
good examples of this would<font color="#CCCCCC"> be things</font>

281
00:10:09,150 --> 00:10:12,630
<font color="#CCCCCC">like</font><font color="#E5E5E5"> the scriptlets we can follow like</font>

282
00:10:10,920 --> 00:10:14,189
<font color="#E5E5E5">the daily scriptlet</font><font color="#CCCCCC"> hash tag and</font><font color="#E5E5E5"> we can</font>

283
00:10:12,630 --> 00:10:16,200
get lots of examples of what's being

284
00:10:14,190 --> 00:10:17,940
used<font color="#E5E5E5"> in the wild and we can use those as</font>

285
00:10:16,200 --> 00:10:19,800
<font color="#CCCCCC">part</font><font color="#E5E5E5"> of our data set but then we can</font>

286
00:10:17,940 --> 00:10:22,110
also<font color="#E5E5E5"> generate additional ones we can use</font>

287
00:10:19,800 --> 00:10:24,390
tools to to<font color="#E5E5E5"> generate new tools we can</font>

288
00:10:22,110 --> 00:10:26,340
run builders<font color="#CCCCCC"> a lot of builders out there</font>

289
00:10:24,390 --> 00:10:28,770
for things<font color="#E5E5E5"> like malware and scripts and</font>

290
00:10:26,340 --> 00:10:30,720
tools we can run out<font color="#CCCCCC"> fist</font><font color="#E5E5E5"> Gators we can</font>

291
00:10:28,770 --> 00:10:33,660
develop<font color="#E5E5E5"> new variants based on these</font>

292
00:10:30,720 --> 00:10:35,430
<font color="#E5E5E5">methodologies and</font><font color="#CCCCCC"> Devo is gonna run</font>

293
00:10:33,660 --> 00:10:37,860
through kind of<font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> examples</font><font color="#CCCCCC"> of</font>

294
00:10:35,430 --> 00:10:39,810
what<font color="#CCCCCC"> that looks like in the</font><font color="#E5E5E5"> the process</font>

295
00:10:37,860 --> 00:10:41,220
of challenging those assumptions<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font>

296
00:10:39,810 --> 00:10:43,260
goal<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is to enumerate the entire</font>

297
00:10:41,220 --> 00:10:45,270
<font color="#CCCCCC">problem set so what is it</font>

298
00:10:43,260 --> 00:10:48,360
that we're<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> detect in whole not</font>

299
00:10:45,270 --> 00:10:50,430
<font color="#CCCCCC">just a a subset of those examples</font><font color="#E5E5E5"> and</font>

300
00:10:48,360 --> 00:10:52,050
it's really<font color="#E5E5E5"> important not to stop</font><font color="#CCCCCC"> it the</font>

301
00:10:50,430 --> 00:10:53,760
most common<font color="#E5E5E5"> examples I see a lot of</font>

302
00:10:52,050 --> 00:10:56,969
<font color="#E5E5E5">instances where someone will release</font>

303
00:10:53,760 --> 00:10:58,830
something<font color="#E5E5E5"> on Twitter or release some new</font>

304
00:10:56,970 --> 00:11:00,120
backdoor<font color="#E5E5E5"> or whatever people</font><font color="#CCCCCC"> stop</font><font color="#E5E5E5"> putting</font>

305
00:10:58,830 --> 00:11:01,770
up detections for it but a lot<font color="#CCCCCC"> of times</font>

306
00:11:00,120 --> 00:11:04,320
there's a<font color="#CCCCCC"> lot of assumption that the way</font>

307
00:11:01,770 --> 00:11:05,760
that it was released as<font color="#CCCCCC"> the</font><font color="#E5E5E5"> ways it will</font>

308
00:11:04,320 --> 00:11:07,380
<font color="#E5E5E5">be used</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the only way</font><font color="#CCCCCC"> there will be</font>

309
00:11:05,760 --> 00:11:09,060
used and if there's anything I've

310
00:11:07,380 --> 00:11:10,800
<font color="#CCCCCC">learned in my</font><font color="#E5E5E5"> time doing</font><font color="#CCCCCC"> is that</font>

311
00:11:09,060 --> 00:11:12,180
attackers change everything if you start

312
00:11:10,800 --> 00:11:13,680
<font color="#E5E5E5">making assumptions</font><font color="#CCCCCC"> about how attackers</font>

313
00:11:12,180 --> 00:11:15,569
are can operate<font color="#E5E5E5"> they're gonna eventually</font>

314
00:11:13,680 --> 00:11:18,030
<font color="#E5E5E5">start changing those</font><font color="#CCCCCC"> things so it's</font><font color="#E5E5E5"> very</font>

315
00:11:15,570 --> 00:11:19,530
important<font color="#E5E5E5"> to keep that</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> mind we're</font>

316
00:11:18,030 --> 00:11:21,990
going<font color="#E5E5E5"> to test the existing protections</font>

317
00:11:19,530 --> 00:11:24,180
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know sometimes our free</font><font color="#E5E5E5"> wins</font>

318
00:11:21,990 --> 00:11:26,760
sometimes<font color="#CCCCCC"> we'll just go in and we'll be</font>

319
00:11:24,180 --> 00:11:28,469
<font color="#E5E5E5">able to see like hey some of my engines</font>

320
00:11:26,760 --> 00:11:30,689
are already detecting<font color="#E5E5E5"> this but all of</font>

321
00:11:28,470 --> 00:11:32,460
them<font color="#E5E5E5"> are some of them are they detecting</font>

322
00:11:30,690 --> 00:11:35,670
all of the examples<font color="#CCCCCC"> are just</font><font color="#E5E5E5"> a subset</font>

323
00:11:32,460 --> 00:11:37,170
this can really<font color="#CCCCCC"> help to</font><font color="#E5E5E5"> focus the energy</font>

324
00:11:35,670 --> 00:11:39,089
<font color="#E5E5E5">and then focus</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> I'm going to pay</font>

325
00:11:37,170 --> 00:11:40,650
attention<font color="#CCCCCC"> and</font><font color="#E5E5E5"> try to do my detection</font>

326
00:11:39,090 --> 00:11:42,840
development to fill those gaps and<font color="#CCCCCC"> to</font>

327
00:11:40,650 --> 00:11:44,459
kind of<font color="#E5E5E5"> extend those detection zhh from</font>

328
00:11:42,840 --> 00:11:46,290
where they might<font color="#E5E5E5"> be strong to where</font>

329
00:11:44,460 --> 00:11:48,120
they're weaker<font color="#E5E5E5"> but</font><font color="#CCCCCC"> also it</font><font color="#E5E5E5"> can help me</font>

330
00:11:46,290 --> 00:11:50,880
to adjust priority of existing detection

331
00:11:48,120 --> 00:11:53,490
so I might find<font color="#E5E5E5"> out that my antivirus</font>

332
00:11:50,880 --> 00:11:57,689
considers invoke mimikatz to be generic

333
00:11:53,490 --> 00:11:59,400
<font color="#E5E5E5">that</font><font color="#CCCCCC"> p w l dot r fa</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> b</font><font color="#E5E5E5"> 6 1</font><font color="#CCCCCC"> FA 6 1</font><font color="#E5E5E5"> and</font>

334
00:11:57,690 --> 00:12:01,440
and now<font color="#CCCCCC"> i know</font><font color="#E5E5E5"> that that's the thing</font>

335
00:11:59,400 --> 00:12:05,670
<font color="#CCCCCC">that i didn't know before so when</font><font color="#E5E5E5"> i see</font>

336
00:12:01,440 --> 00:12:08,430
that that kind of opaque<font color="#E5E5E5"> definition name</font>

337
00:12:05,670 --> 00:12:09,569
<font color="#E5E5E5">pop up</font><font color="#CCCCCC"> in my</font><font color="#E5E5E5"> sim maybe now I'm paying</font>

338
00:12:08,430 --> 00:12:11,760
much more attention to that<font color="#E5E5E5"> than I would</font>

339
00:12:09,570 --> 00:12:13,920
<font color="#CCCCCC">have</font><font color="#E5E5E5"> before and</font><font color="#CCCCCC"> of course we're also</font>

340
00:12:11,760 --> 00:12:15,390
going to try<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> this testing safely</font>

341
00:12:13,920 --> 00:12:17,189
and outside<font color="#CCCCCC"> of a private environment so</font>

342
00:12:15,390 --> 00:12:21,000
you you know we<font color="#E5E5E5"> don't end up the subject</font>

343
00:12:17,190 --> 00:12:24,300
<font color="#E5E5E5">of a spicy tweet about our object</font>

344
00:12:21,000 --> 00:12:25,530
practices once I had what's<font color="#E5E5E5"> up down</font>

345
00:12:24,300 --> 00:12:27,150
through<font color="#E5E5E5"> that practice</font><font color="#CCCCCC"> and I understand</font>

346
00:12:25,530 --> 00:12:28,020
what<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be working for where</font>

347
00:12:27,150 --> 00:12:29,520
I'm going to be<font color="#E5E5E5"> building these</font>

348
00:12:28,020 --> 00:12:31,020
detections based on what's<font color="#E5E5E5"> already there</font>

349
00:12:29,520 --> 00:12:32,699
<font color="#E5E5E5">I'm going to generate data as that could</font>

350
00:12:31,020 --> 00:12:35,579
be logs that could be pcap that could be

351
00:12:32,700 --> 00:12:37,140
binary metadata<font color="#E5E5E5"> that could be strings it</font>

352
00:12:35,580 --> 00:12:38,610
just kind of<font color="#E5E5E5"> depends on on what</font><font color="#CCCCCC"> exactly</font>

353
00:12:37,140 --> 00:12:40,490
<font color="#E5E5E5">I'm working towards but I'm going to</font>

354
00:12:38,610 --> 00:12:42,930
<font color="#E5E5E5">generate the</font><font color="#CCCCCC"> data that</font><font color="#E5E5E5"> I need for those</font>

355
00:12:40,490 --> 00:12:44,280
for those detection<font color="#CCCCCC"> zhh</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going to</font>

356
00:12:42,930 --> 00:12:45,870
actually<font color="#CCCCCC"> start</font><font color="#E5E5E5"> writing them so always</font>

357
00:12:44,280 --> 00:12:48,780
going to<font color="#E5E5E5"> start broad and tune down it's</font>

358
00:12:45,870 --> 00:12:50,050
much easier<font color="#CCCCCC"> to work that way than it is</font>

359
00:12:48,780 --> 00:12:52,390
to start narrow and try to

360
00:12:50,050 --> 00:12:53,859
and it also helps<font color="#CCCCCC"> me to</font><font color="#E5E5E5"> minimize the</font>

361
00:12:52,390 --> 00:12:56,380
number of<font color="#E5E5E5"> assumptions that I'm making on</font>

362
00:12:53,860 --> 00:12:57,670
the<font color="#E5E5E5"> rule so if I start trying to work</font>

363
00:12:56,380 --> 00:12:59,680
narrow then I'm basically<font color="#CCCCCC"> making</font>

364
00:12:57,670 --> 00:13:01,479
<font color="#E5E5E5">assumptions about what I'm going to need</font>

365
00:12:59,680 --> 00:13:03,519
to do in order<font color="#CCCCCC"> to maintain my target</font>

366
00:13:01,480 --> 00:13:05,769
first<font color="#E5E5E5"> false positive rate and</font><font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to</font>

367
00:13:03,519 --> 00:13:07,209
catch<font color="#E5E5E5"> things if I keep things</font><font color="#CCCCCC"> very broad</font>

368
00:13:05,769 --> 00:13:08,980
then I'm working much more empirically

369
00:13:07,209 --> 00:13:10,540
I'm seeing what's actually<font color="#CCCCCC"> causing</font>

370
00:13:08,980 --> 00:13:13,240
problems as opposed to<font color="#E5E5E5"> assuming what's</font>

371
00:13:10,540 --> 00:13:14,500
going<font color="#CCCCCC"> to cause them I'm always keeping</font>

372
00:13:13,240 --> 00:13:16,779
in mind a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> detectors can</font><font color="#CCCCCC"> be</font>

373
00:13:14,500 --> 00:13:18,579
translated between types so for instance

374
00:13:16,779 --> 00:13:20,500
sometimes<font color="#CCCCCC"> your rules can make great</font>

375
00:13:18,579 --> 00:13:22,089
snort rules<font color="#CCCCCC"> you know they're</font><font color="#E5E5E5"> basically</font>

376
00:13:20,500 --> 00:13:23,470
content searches so there's more<font color="#E5E5E5"> than</font>

377
00:13:22,089 --> 00:13:27,490
one place that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do that</font><font color="#E5E5E5"> sort of</font>

378
00:13:23,470 --> 00:13:28,930
thing I'm always trying to<font color="#E5E5E5"> be mindful of</font>

379
00:13:27,490 --> 00:13:31,300
<font color="#E5E5E5">and challenge the assumptions that are</font>

380
00:13:28,930 --> 00:13:33,310
making bringing in and I'm<font color="#E5E5E5"> actively</font>

381
00:13:31,300 --> 00:13:34,990
trying to<font color="#CCCCCC"> bypass the methodology</font><font color="#E5E5E5"> based</font>

382
00:13:33,310 --> 00:13:36,010
detection<font color="#E5E5E5"> so I'm not</font><font color="#CCCCCC"> just writing these</font>

383
00:13:34,990 --> 00:13:39,399
<font color="#E5E5E5">things</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> assuming</font><font color="#CCCCCC"> that they're going</font>

384
00:13:36,010 --> 00:13:41,829
<font color="#E5E5E5">to work I'm trying to look at what my</font>

385
00:13:39,399 --> 00:13:43,680
detections hinge on and find ways<font color="#E5E5E5"> to try</font>

386
00:13:41,829 --> 00:13:45,699
to sidestep<font color="#E5E5E5"> those and that's that's what</font>

387
00:13:43,680 --> 00:13:47,920
<font color="#E5E5E5">process the people</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> gonna walk through</font>

388
00:13:45,700 --> 00:13:49,930
and we may need specific rules<font color="#CCCCCC"> to</font>

389
00:13:47,920 --> 00:13:51,760
capture<font color="#CCCCCC"> specific cases</font><font color="#E5E5E5"> so it's not</font>

390
00:13:49,930 --> 00:13:53,260
always<font color="#CCCCCC"> that I can just make one rule per</font>

391
00:13:51,760 --> 00:13:55,050
engine sometimes there are specific edge

392
00:13:53,260 --> 00:13:57,189
<font color="#E5E5E5">cases where I need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be looking for</font>

393
00:13:55,050 --> 00:13:58,899
different aspects of<font color="#E5E5E5"> those that may</font><font color="#CCCCCC"> not</font>

394
00:13:57,190 --> 00:14:01,500
<font color="#E5E5E5">apply to the core of the technique and</font>

395
00:13:58,899 --> 00:14:05,110
<font color="#CCCCCC">Buscher kind of some examples of</font><font color="#E5E5E5"> that</font>

396
00:14:01,500 --> 00:14:06,459
last gonna test<font color="#CCCCCC"> false negative testing</font>

397
00:14:05,110 --> 00:14:09,220
against a sample set<font color="#CCCCCC"> got</font><font color="#E5E5E5"> to make sure</font>

398
00:14:06,459 --> 00:14:10,930
I'm catching them all<font color="#CCCCCC"> FP testing against</font>

399
00:14:09,220 --> 00:14:12,850
<font color="#E5E5E5">legitimate data generally speaking I'm</font>

400
00:14:10,930 --> 00:14:15,099
going to start small going to<font color="#E5E5E5"> tune and</font>

401
00:14:12,850 --> 00:14:17,560
I'm going to<font color="#E5E5E5"> scale-up continue to work</font>

402
00:14:15,100 --> 00:14:19,000
through that<font color="#CCCCCC"> process retesting against</font>

403
00:14:17,560 --> 00:14:20,680
<font color="#CCCCCC">the samples to validate the tuning once</font>

404
00:14:19,000 --> 00:14:22,690
I'm done<font color="#E5E5E5"> make sure that during</font><font color="#CCCCCC"> that</font>

405
00:14:20,680 --> 00:14:24,489
tuning process<font color="#E5E5E5"> I didn't change something</font>

406
00:14:22,690 --> 00:14:27,010
<font color="#CCCCCC">inadvertently that has affected the</font>

407
00:14:24,490 --> 00:14:29,560
outcome<font color="#E5E5E5"> of my detection and I'm also</font>

408
00:14:27,010 --> 00:14:31,300
going to document<font color="#E5E5E5"> any compromises I need</font>

409
00:14:29,560 --> 00:14:32,829
to make in order<font color="#CCCCCC"> to hit my false</font>

410
00:14:31,300 --> 00:14:34,270
positive targets because it's important

411
00:14:32,829 --> 00:14:36,520
<font color="#E5E5E5">to know what impact that's going to have</font>

412
00:14:34,270 --> 00:14:38,199
<font color="#E5E5E5">on the detection</font><font color="#CCCCCC"> and then I'm going to</font>

413
00:14:36,520 --> 00:14:39,939
<font color="#CCCCCC">attack also test against</font><font color="#E5E5E5"> new true</font>

414
00:14:38,199 --> 00:14:40,510
positives<font color="#CCCCCC"> that identified during</font><font color="#E5E5E5"> testing</font>

415
00:14:39,940 --> 00:14:42,850
or deployment

416
00:14:40,510 --> 00:14:45,010
<font color="#E5E5E5">you know there's if a detection is</font>

417
00:14:42,850 --> 00:14:46,029
<font color="#E5E5E5">geared and a attack is common most of</font>

418
00:14:45,010 --> 00:14:48,010
the time we're going<font color="#CCCCCC"> to find</font><font color="#E5E5E5"> some</font>

419
00:14:46,029 --> 00:14:48,970
<font color="#CCCCCC">examples of</font><font color="#E5E5E5"> that attack in the wild and</font>

420
00:14:48,010 --> 00:14:50,470
maybe hit

421
00:14:48,970 --> 00:14:52,060
you know one of our detection<font color="#E5E5E5"> that</font>

422
00:14:50,470 --> 00:14:53,829
turned out<font color="#E5E5E5"> but does it hit on all of</font>

423
00:14:52,060 --> 00:14:54,878
them<font color="#CCCCCC"> we got to make</font><font color="#E5E5E5"> sure that</font><font color="#CCCCCC"> we still</font>

424
00:14:53,829 --> 00:14:57,758
had<font color="#CCCCCC"> the full coverage that</font><font color="#E5E5E5"> we're looking</font>

425
00:14:54,879 --> 00:14:59,500
<font color="#CCCCCC">for</font><font color="#E5E5E5"> so we do it kind</font><font color="#CCCCCC"> of a walk through</font>

426
00:14:57,759 --> 00:15:01,449
<font color="#E5E5E5">with this with binaries and you know why</font>

427
00:14:59,500 --> 00:15:02,920
am<font color="#E5E5E5"> I talking about binaries this 2018</font>

428
00:15:01,449 --> 00:15:04,779
everybody's talking about fireless

429
00:15:02,920 --> 00:15:05,589
malware but<font color="#E5E5E5"> I can tell you in the wild</font>

430
00:15:04,779 --> 00:15:07,589
that's just not the case

431
00:15:05,589 --> 00:15:10,029
a lot of attackers still use a lot<font color="#CCCCCC"> of</font>

432
00:15:07,589 --> 00:15:12,069
binaries<font color="#CCCCCC"> look me wrong these alive</font>

433
00:15:10,029 --> 00:15:14,589
<font color="#E5E5E5">living off the land tactics and 500s you</font>

434
00:15:12,069 --> 00:15:15,878
<font color="#CCCCCC">know file us as well but there's also a</font>

435
00:15:14,589 --> 00:15:18,250
lot of binaries still floating<font color="#E5E5E5"> around</font>

436
00:15:15,879 --> 00:15:19,839
out there<font color="#CCCCCC"> and at the</font><font color="#E5E5E5"> end of the day</font><font color="#CCCCCC"> ABS</font>

437
00:15:18,250 --> 00:15:21,610
still not<font color="#E5E5E5"> doing a great job with</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> most</font>

438
00:15:19,839 --> 00:15:22,959
the<font color="#E5E5E5"> time</font><font color="#CCCCCC"> AV signatures are lagging</font><font color="#E5E5E5"> by</font>

439
00:15:21,610 --> 00:15:25,149
anywhere<font color="#E5E5E5"> from three weeks to</font><font color="#CCCCCC"> a month</font>

440
00:15:22,959 --> 00:15:27,638
behind<font color="#E5E5E5"> the time that an AV company</font>

441
00:15:25,149 --> 00:15:28,779
becomes<font color="#CCCCCC"> aware of a sample</font><font color="#E5E5E5"> if they don't</font>

442
00:15:27,639 --> 00:15:31,990
become<font color="#E5E5E5"> aware of it it will probably</font>

443
00:15:28,779 --> 00:15:35,230
<font color="#E5E5E5">never have coverage</font><font color="#CCCCCC"> it's it's very</font><font color="#E5E5E5"> easy</font>

444
00:15:31,990 --> 00:15:37,480
<font color="#CCCCCC">for attackers</font><font color="#E5E5E5"> to change the malware they</font>

445
00:15:35,230 --> 00:15:39,160
have builders they have polymorphic

446
00:15:37,480 --> 00:15:40,750
malware they're doing version updates<font color="#CCCCCC"> to</font>

447
00:15:39,160 --> 00:15:43,509
they have their own<font color="#CCCCCC"> software development</font>

448
00:15:40,750 --> 00:15:45,790
<font color="#CCCCCC">cycle and they're also able to</font><font color="#E5E5E5"> test</font>

449
00:15:43,509 --> 00:15:47,620
against those<font color="#CCCCCC"> AVS including the MLA</font><font color="#E5E5E5"> vs</font>

450
00:15:45,790 --> 00:15:49,629
you<font color="#E5E5E5"> know there we'll just throws</font>

451
00:15:47,620 --> 00:15:51,430
binaries against the AV and they'll<font color="#CCCCCC"> just</font>

452
00:15:49,629 --> 00:15:52,959
keep trying<font color="#E5E5E5"> until the AV misses it and</font>

453
00:15:51,430 --> 00:15:55,029
then that's<font color="#E5E5E5"> the version that they'll go</font>

454
00:15:52,959 --> 00:15:56,709
and<font color="#E5E5E5"> use so there's always bypasses for</font>

455
00:15:55,029 --> 00:15:58,509
<font color="#E5E5E5">these especially</font><font color="#CCCCCC"> when they're publicly</font>

456
00:15:56,709 --> 00:16:00,459
<font color="#E5E5E5">available tools like virustotal will</font>

457
00:15:58,509 --> 00:16:03,009
have made this<font color="#E5E5E5"> process a lot</font><font color="#CCCCCC"> easier for</font>

458
00:16:00,459 --> 00:16:04,869
<font color="#E5E5E5">people so by having my own signatures</font>

459
00:16:03,009 --> 00:16:07,870
looking for these<font color="#E5E5E5"> things nobody's going</font>

460
00:16:04,870 --> 00:16:10,149
to be<font color="#E5E5E5"> able to test against them</font><font color="#CCCCCC"> I'm</font>

461
00:16:07,870 --> 00:16:11,800
going<font color="#CCCCCC"> to evaluate</font><font color="#E5E5E5"> the effectiveness of</font>

462
00:16:10,149 --> 00:16:13,389
existing<font color="#E5E5E5"> detection so if I start through</font>

463
00:16:11,800 --> 00:16:14,709
this process<font color="#E5E5E5"> and what I find is that I</font>

464
00:16:13,389 --> 00:16:16,540
don't<font color="#E5E5E5"> need to do</font><font color="#CCCCCC"> anything then that's</font>

465
00:16:14,709 --> 00:16:19,119
still<font color="#CCCCCC"> a</font><font color="#E5E5E5"> great day for me I've validated</font>

466
00:16:16,540 --> 00:16:20,290
that I have coverage<font color="#E5E5E5"> and I have you know</font>

467
00:16:19,120 --> 00:16:22,449
ensured that we're going<font color="#E5E5E5"> to have</font>

468
00:16:20,290 --> 00:16:24,189
effective detection for these techniques

469
00:16:22,449 --> 00:16:26,139
and there's also<font color="#E5E5E5"> other</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> like</font>

470
00:16:24,189 --> 00:16:27,879
<font color="#CCCCCC">intelligence-gathering BG retro</font><font color="#E5E5E5"> hunts</font>

471
00:16:26,139 --> 00:16:31,209
some other places where these kinds of

472
00:16:27,879 --> 00:16:33,519
detections can be used so I'm really

473
00:16:31,209 --> 00:16:35,349
<font color="#E5E5E5">going to focus on writing these textures</font>

474
00:16:33,519 --> 00:16:37,809
for binaries when I have an active

475
00:16:35,350 --> 00:16:40,240
<font color="#E5E5E5">intrusion a high-priority threat or a</font>

476
00:16:37,809 --> 00:16:41,649
prolific or publicly<font color="#E5E5E5"> available malware</font>

477
00:16:40,240 --> 00:16:43,930
so<font color="#E5E5E5"> these are things that I think are</font>

478
00:16:41,649 --> 00:16:45,939
<font color="#E5E5E5">likely to</font><font color="#CCCCCC"> affect my organization</font><font color="#E5E5E5"> or have</font>

479
00:16:43,930 --> 00:16:47,880
already<font color="#E5E5E5"> affected an organization I'm</font>

480
00:16:45,939 --> 00:16:50,219
working with or

481
00:16:47,880 --> 00:16:52,170
things that I know are eventually going

482
00:16:50,220 --> 00:16:53,430
to pop<font color="#CCCCCC"> up</font><font color="#E5E5E5"> in our high priority from our</font>

483
00:16:52,170 --> 00:16:55,380
organization<font color="#CCCCCC"> sometimes they're back</font>

484
00:16:53,430 --> 00:16:57,150
doors that get announced on Twitter and

485
00:16:55,380 --> 00:16:59,790
I can just know that I'm going<font color="#E5E5E5"> to see</font>

486
00:16:57,150 --> 00:17:01,560
<font color="#E5E5E5">that thing within a few days like so</font>

487
00:16:59,790 --> 00:17:02,730
those<font color="#CCCCCC"> just occur and so</font><font color="#E5E5E5"> those are</font><font color="#CCCCCC"> where</font>

488
00:17:01,560 --> 00:17:05,069
I'm really<font color="#E5E5E5"> going to focus on to</font><font color="#CCCCCC"> make</font>

489
00:17:02,730 --> 00:17:08,310
<font color="#CCCCCC">sure that we have that</font><font color="#E5E5E5"> detection early</font>

490
00:17:05,069 --> 00:17:10,260
and in as<font color="#E5E5E5"> many places as</font><font color="#CCCCCC"> possible and</font>

491
00:17:08,310 --> 00:17:13,169
also<font color="#E5E5E5"> that we need</font><font color="#CCCCCC"> additional</font><font color="#E5E5E5"> contacts</font>

492
00:17:10,260 --> 00:17:15,569
beyond<font color="#CCCCCC"> its bat</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> ml is is great</font>

493
00:17:13,170 --> 00:17:17,520
at doing malware detection but it's not

494
00:17:15,569 --> 00:17:18,510
created giving a lot<font color="#E5E5E5"> of context so one</font>

495
00:17:17,520 --> 00:17:21,119
of<font color="#E5E5E5"> the things that can be</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> handy</font>

496
00:17:18,510 --> 00:17:22,560
is if<font color="#E5E5E5"> you have additional detection</font>

497
00:17:21,119 --> 00:17:23,819
capabilities for malware<font color="#E5E5E5"> that you're</font>

498
00:17:22,560 --> 00:17:25,440
particularly<font color="#E5E5E5"> concerned</font><font color="#CCCCCC"> about being able</font>

499
00:17:23,819 --> 00:17:27,179
<font color="#E5E5E5">to get that additional context that oh</font>

500
00:17:25,440 --> 00:17:30,090
hey not<font color="#CCCCCC"> only is this thing bad according</font>

501
00:17:27,180 --> 00:17:31,740
to the<font color="#E5E5E5"> ml but it is in fact a PT 28 then</font>

502
00:17:30,090 --> 00:17:36,449
that<font color="#CCCCCC"> gives me a whole</font><font color="#E5E5E5"> lot more context</font>

503
00:17:31,740 --> 00:17:38,880
then<font color="#E5E5E5"> hey is probably a coin miner so an</font>

504
00:17:36,450 --> 00:17:40,500
<font color="#CCCCCC">example of</font><font color="#E5E5E5"> defined detection here you</font>

505
00:17:38,880 --> 00:17:42,480
know maybe<font color="#E5E5E5"> I want to find all chopstick</font>

506
00:17:40,500 --> 00:17:43,650
malware variants just all of them all

507
00:17:42,480 --> 00:17:45,990
<font color="#E5E5E5">the variants that have occurred all the</font>

508
00:17:43,650 --> 00:17:48,030
generations<font color="#CCCCCC"> I want to find</font><font color="#E5E5E5"> them on the</font>

509
00:17:45,990 --> 00:17:49,650
<font color="#E5E5E5">endpoint network</font><font color="#CCCCCC"> at sandbox historical</font>

510
00:17:48,030 --> 00:17:54,149
in real time and<font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> do that</font>

511
00:17:49,650 --> 00:17:58,650
<font color="#CCCCCC">using URL</font><font color="#E5E5E5"> plus the PE module open IOC</font>

512
00:17:54,150 --> 00:18:00,050
snort<font color="#CCCCCC"> mice in my</font><font color="#E5E5E5"> EDR and have some false</font>

513
00:17:58,650 --> 00:18:02,640
positive tolerance<font color="#E5E5E5"> with all the moderate</font>

514
00:18:00,050 --> 00:18:04,440
so the next<font color="#E5E5E5"> step is gonna be to go out</font>

515
00:18:02,640 --> 00:18:06,300
and<font color="#CCCCCC"> actually find</font><font color="#E5E5E5"> these sample sets and</font>

516
00:18:04,440 --> 00:18:07,890
I have the good fortune<font color="#E5E5E5"> of working at a</font>

517
00:18:06,300 --> 00:18:09,870
<font color="#E5E5E5">company</font><font color="#CCCCCC"> that has an incredible amount</font><font color="#E5E5E5"> of</font>

518
00:18:07,890 --> 00:18:11,700
malware<font color="#E5E5E5"> and intelligence and so it is</font>

519
00:18:09,870 --> 00:18:14,100
<font color="#E5E5E5">comparatively</font><font color="#CCCCCC"> easy for me to actually</font>

520
00:18:11,700 --> 00:18:15,060
collect up all<font color="#E5E5E5"> of this data but even</font>

521
00:18:14,100 --> 00:18:16,469
without<font color="#E5E5E5"> that</font><font color="#CCCCCC"> there's still</font><font color="#E5E5E5"> a lot of</font>

522
00:18:15,060 --> 00:18:18,240
<font color="#E5E5E5">other things</font><font color="#CCCCCC"> that I</font><font color="#E5E5E5"> will still validate</font>

523
00:18:16,470 --> 00:18:20,960
that we've gotten all<font color="#CCCCCC"> of the good open</font>

524
00:18:18,240 --> 00:18:23,160
<font color="#CCCCCC">source intelligence that's applicable</font><font color="#E5E5E5"> to</font>

525
00:18:20,960 --> 00:18:24,690
<font color="#CCCCCC">whatever threat</font><font color="#E5E5E5"> I'm looking at so</font>

526
00:18:23,160 --> 00:18:26,220
there's a lot<font color="#E5E5E5"> of ways</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> can do</font>

527
00:18:24,690 --> 00:18:29,190
that so we<font color="#E5E5E5"> can collect hashes from high</font>

528
00:18:26,220 --> 00:18:32,520
confidence<font color="#E5E5E5"> sources so you know thread</font>

529
00:18:29,190 --> 00:18:35,130
Intel feeds<font color="#E5E5E5"> blogs public</font><font color="#CCCCCC"> maillot</font><font color="#E5E5E5"> repos</font>

530
00:18:32,520 --> 00:18:36,990
malware analysis reports<font color="#E5E5E5"> in my opinion</font>

531
00:18:35,130 --> 00:18:38,880
the reason<font color="#E5E5E5"> that we give out hashes</font><font color="#CCCCCC"> in</font>

532
00:18:36,990 --> 00:18:40,260
<font color="#CCCCCC">our reports isn't so that you can go</font><font color="#E5E5E5"> and</font>

533
00:18:38,880 --> 00:18:41,940
look<font color="#E5E5E5"> for those hashes it's so that you</font>

534
00:18:40,260 --> 00:18:43,799
can go and<font color="#CCCCCC"> find that malware</font>

535
00:18:41,940 --> 00:18:46,139
develop better<font color="#E5E5E5"> detection based on that</font>

536
00:18:43,799 --> 00:18:48,629
malware<font color="#E5E5E5"> so being able to go</font><font color="#CCCCCC"> out and</font><font color="#E5E5E5"> find</font>

537
00:18:46,139 --> 00:18:50,070
those and get those<font color="#CCCCCC"> samples in is going</font>

538
00:18:48,629 --> 00:18:51,240
<font color="#E5E5E5">to allow me to start to build out</font><font color="#CCCCCC"> that</font>

539
00:18:50,070 --> 00:18:52,918
sample set<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is one of the places</font>

540
00:18:51,240 --> 00:18:54,690
where<font color="#CCCCCC"> my attack can be really</font><font color="#E5E5E5"> helpful is</font>

541
00:18:52,919 --> 00:18:56,370
that<font color="#CCCCCC"> you can find for</font><font color="#E5E5E5"> some of the more</font>

542
00:18:54,690 --> 00:18:57,809
<font color="#E5E5E5">common and</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> known malware families</font>

543
00:18:56,370 --> 00:18:59,789
you can<font color="#E5E5E5"> start getting into</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> the</font>

544
00:18:57,809 --> 00:19:01,289
references to those pages and you can

545
00:18:59,789 --> 00:19:04,889
<font color="#E5E5E5">start getting to the reports really</font>

546
00:19:01,289 --> 00:19:08,129
quickly<font color="#CCCCCC"> and get a good reference</font><font color="#E5E5E5"> base</font>

547
00:19:04,889 --> 00:19:10,949
started<font color="#E5E5E5"> I want to try to find things on</font>

548
00:19:08,129 --> 00:19:12,269
VPI and and<font color="#E5E5E5"> also using some of the</font>

549
00:19:10,950 --> 00:19:14,100
implant<font color="#E5E5E5"> builders so it is definitely</font>

550
00:19:12,269 --> 00:19:15,450
<font color="#CCCCCC">possible to get your hands on builders</font>

551
00:19:14,100 --> 00:19:18,449
for<font color="#E5E5E5"> some of these</font><font color="#CCCCCC"> mauers if you want to</font>

552
00:19:15,450 --> 00:19:19,679
and<font color="#CCCCCC"> that can</font><font color="#E5E5E5"> be very valuable</font><font color="#CCCCCC"> and for</font>

553
00:19:18,450 --> 00:19:21,659
<font color="#E5E5E5">public malware I'm going to generate</font>

554
00:19:19,679 --> 00:19:23,190
representative samples so I'm going<font color="#E5E5E5"> to</font>

555
00:19:21,659 --> 00:19:25,259
use<font color="#E5E5E5"> multiple versions if updates are</font>

556
00:19:23,190 --> 00:19:26,909
<font color="#E5E5E5">available go back through that get</font>

557
00:19:25,259 --> 00:19:28,769
history and pull down<font color="#E5E5E5"> some of the old</font>

558
00:19:26,909 --> 00:19:29,940
versions to see what those look<font color="#E5E5E5"> like</font><font color="#CCCCCC"> I'm</font>

559
00:19:28,769 --> 00:19:31,320
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> generate variants for the</font>

560
00:19:29,940 --> 00:19:32,340
significant options in a build and<font color="#E5E5E5"> this</font>

561
00:19:31,320 --> 00:19:34,590
<font color="#E5E5E5">is basically things are going to change</font>

562
00:19:32,340 --> 00:19:38,549
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the structure behavior or network</font>

563
00:19:34,590 --> 00:19:40,379
<font color="#CCCCCC">coms of a piece of malware so for</font>

564
00:19:38,549 --> 00:19:41,789
example if I'm going<font color="#E5E5E5"> to try to detect</font>

565
00:19:40,379 --> 00:19:43,049
<font color="#CCCCCC">cobalt wreck I want to make sure that</font>

566
00:19:41,789 --> 00:19:45,059
I'm<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> very closely things like the</font>

567
00:19:43,049 --> 00:19:46,830
malleable profiles so<font color="#CCCCCC"> that I can see</font>

568
00:19:45,059 --> 00:19:48,450
what's<font color="#E5E5E5"> different command and control is</font>

569
00:19:46,830 --> 00:19:51,360
<font color="#E5E5E5">going to look like</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> all the default</font>

570
00:19:48,450 --> 00:19:52,590
profiles as<font color="#CCCCCC"> well</font><font color="#E5E5E5"> as for custom ones and</font>

571
00:19:51,360 --> 00:19:53,879
then I'm<font color="#E5E5E5"> going to use common Packers and</font>

572
00:19:52,590 --> 00:19:54,990
obfuscators because if there's a public

573
00:19:53,879 --> 00:19:56,309
piece of malware<font color="#E5E5E5"> out there and</font>

574
00:19:54,990 --> 00:19:57,629
somebody's compiling it somebody's going

575
00:19:56,309 --> 00:19:59,580
<font color="#E5E5E5">to throw it through some of the more</font>

576
00:19:57,629 --> 00:20:01,139
common Packers and so if my entire

577
00:19:59,580 --> 00:20:02,309
detection is based off<font color="#E5E5E5"> the assumption</font>

578
00:20:01,139 --> 00:20:06,570
that nobody's<font color="#E5E5E5"> going to do that I'm</font><font color="#CCCCCC"> not</font>

579
00:20:02,309 --> 00:20:08,700
going<font color="#E5E5E5"> to have a good day then I'm going</font>

580
00:20:06,570 --> 00:20:09,689
<font color="#CCCCCC">to test</font><font color="#E5E5E5"> my existing protections run pcap</font>

581
00:20:08,700 --> 00:20:12,210
through IDs

582
00:20:09,690 --> 00:20:14,789
run the binaries through the scanning

583
00:20:12,210 --> 00:20:16,740
engines<font color="#CCCCCC"> test for the real time of</font>

584
00:20:14,789 --> 00:20:17,970
dynamic alerts<font color="#E5E5E5"> run in sandbox and I'm</font>

585
00:20:16,740 --> 00:20:19,860
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> see what</font><font color="#CCCCCC"> comes</font><font color="#E5E5E5"> out of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> what</font>

586
00:20:17,970 --> 00:20:21,750
alerts have<font color="#E5E5E5"> I generated what data was</font>

587
00:20:19,860 --> 00:20:23,668
generated<font color="#E5E5E5"> as a result of that you know</font>

588
00:20:21,750 --> 00:20:25,320
<font color="#CCCCCC">am I even generating the</font><font color="#E5E5E5"> kind of data</font>

589
00:20:23,669 --> 00:20:27,360
that<font color="#CCCCCC"> I need in</font><font color="#E5E5E5"> order to develop a</font>

590
00:20:25,320 --> 00:20:29,370
detection<font color="#E5E5E5"> or is this kind</font><font color="#CCCCCC"> of a dead end</font>

591
00:20:27,360 --> 00:20:31,620
<font color="#CCCCCC">and I'm gonna figure out</font><font color="#E5E5E5"> let's stop here</font>

592
00:20:29,370 --> 00:20:33,000
continue<font color="#E5E5E5"> do I need to develop all the</font>

593
00:20:31,620 --> 00:20:34,620
<font color="#E5E5E5">detections I plan do I need to only</font>

594
00:20:33,000 --> 00:20:37,200
develop a fraction of them and kind of

595
00:20:34,620 --> 00:20:39,629
keep working<font color="#E5E5E5"> from there I'm gonna</font>

596
00:20:37,200 --> 00:20:40,860
collect<font color="#E5E5E5"> generate</font><font color="#CCCCCC"> natural data from this</font>

597
00:20:39,629 --> 00:20:42,840
I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> collect dynamic execution</font>

598
00:20:40,860 --> 00:20:45,508
reports<font color="#E5E5E5"> this might be from</font><font color="#CCCCCC"> sandboxes</font>

599
00:20:42,840 --> 00:20:47,070
there's online<font color="#CCCCCC"> sandboxes</font><font color="#E5E5E5"> vendor sandbox</font>

600
00:20:45,509 --> 00:20:49,620
<font color="#E5E5E5">is</font><font color="#CCCCCC"> kut-ku</font><font color="#E5E5E5"> and different</font><font color="#CCCCCC"> open source</font>

601
00:20:47,070 --> 00:20:50,399
tools<font color="#CCCCCC"> malware reports and blogs</font><font color="#E5E5E5"> these</font>

602
00:20:49,620 --> 00:20:51,719
different<font color="#E5E5E5"> sources</font>

603
00:20:50,399 --> 00:20:53,010
<font color="#E5E5E5">going to grab some</font>

604
00:20:51,720 --> 00:20:54,870
<font color="#CCCCCC">jab captures</font><font color="#E5E5E5"> I'm going to try to get</font>

605
00:20:53,010 --> 00:20:57,299
some process memory<font color="#E5E5E5"> and strings out of</font>

606
00:20:54,870 --> 00:20:59,250
those<font color="#CCCCCC"> I'm gonna</font><font color="#E5E5E5"> parts</font><font color="#CCCCCC"> the binaries using</font>

607
00:20:57,299 --> 00:21:01,500
tools so things like<font color="#E5E5E5"> key</font><font color="#CCCCCC"> explorer cff</font>

608
00:20:59,250 --> 00:21:03,570
<font color="#CCCCCC">explorer sig check floss which is a</font>

609
00:21:01,500 --> 00:21:05,100
great tool which now grab strings but

610
00:21:03,570 --> 00:21:06,299
also<font color="#E5E5E5"> stack strings which can be really</font>

611
00:21:05,100 --> 00:21:08,789
<font color="#CCCCCC">valuable if</font><font color="#E5E5E5"> you're doing memory based</font>

612
00:21:06,299 --> 00:21:10,799
detection<font color="#CCCCCC"> and any kind</font><font color="#E5E5E5"> of vendor</font>

613
00:21:08,789 --> 00:21:12,450
analysis engine<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> ideally what</font>

614
00:21:10,799 --> 00:21:15,840
I want is to<font color="#E5E5E5"> be able to get the exact</font>

615
00:21:12,450 --> 00:21:18,720
output<font color="#CCCCCC"> that I'm going</font><font color="#E5E5E5"> to be using</font><font color="#CCCCCC"> to</font>

616
00:21:15,840 --> 00:21:20,699
match against so if I can get the same

617
00:21:18,720 --> 00:21:23,789
data in the same format<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I need to</font>

618
00:21:20,700 --> 00:21:25,590
write the tool the detections against

619
00:21:23,789 --> 00:21:26,850
that's going to give<font color="#E5E5E5"> me the highest</font>

620
00:21:25,590 --> 00:21:28,230
<font color="#E5E5E5">fidelity when I'm going through and</font>

621
00:21:26,850 --> 00:21:31,379
<font color="#CCCCCC">trying</font><font color="#E5E5E5"> to work with actually developing</font>

622
00:21:28,230 --> 00:21:33,360
<font color="#CCCCCC">the detection</font><font color="#E5E5E5"> they're gonna go through</font>

623
00:21:31,380 --> 00:21:34,679
<font color="#CCCCCC">in kind of group samples a little bit</font><font color="#E5E5E5"> a</font>

624
00:21:33,360 --> 00:21:35,760
lot of times especially with some<font color="#E5E5E5"> of</font>

625
00:21:34,679 --> 00:21:36,750
these malware families that are more

626
00:21:35,760 --> 00:21:38,100
prolific<font color="#E5E5E5"> have been around for a long</font>

627
00:21:36,750 --> 00:21:39,450
time<font color="#CCCCCC"> you're going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the</font>

628
00:21:38,100 --> 00:21:42,840
differences between them so<font color="#E5E5E5"> you can't</font>

629
00:21:39,450 --> 00:21:45,000
always<font color="#CCCCCC"> put them into a single detection</font>

630
00:21:42,840 --> 00:21:47,428
rule so I'll break<font color="#E5E5E5"> those up</font><font color="#CCCCCC"> also look</font>

631
00:21:45,000 --> 00:21:49,740
<font color="#CCCCCC">for outliers even when</font><font color="#E5E5E5"> working with like</font>

632
00:21:47,429 --> 00:21:51,330
high confidence sources there's always a

633
00:21:49,740 --> 00:21:52,559
decent chance<font color="#CCCCCC"> that something's going to</font>

634
00:21:51,330 --> 00:21:53,879
<font color="#E5E5E5">end up in there that shouldn't be in</font>

635
00:21:52,559 --> 00:21:55,139
there<font color="#CCCCCC"> so going</font><font color="#E5E5E5"> through and</font><font color="#CCCCCC"> just looking</font>

636
00:21:53,880 --> 00:21:57,179
<font color="#E5E5E5">for those outliers and kicking them out</font>

637
00:21:55,140 --> 00:21:59,429
before<font color="#E5E5E5"> before I get too far</font><font color="#CCCCCC"> down the</font>

638
00:21:57,179 --> 00:22:01,440
road<font color="#E5E5E5"> they're gonna focus on reading</font><font color="#CCCCCC"> that</font>

639
00:21:59,429 --> 00:22:03,360
detection so there's a lot<font color="#E5E5E5"> of different</font>

640
00:22:01,440 --> 00:22:06,450
aspects of binaries that<font color="#E5E5E5"> are useful</font>

641
00:22:03,360 --> 00:22:08,490
<font color="#E5E5E5">beyond things like hashes so</font><font color="#CCCCCC"> there's the</font>

642
00:22:06,450 --> 00:22:10,020
power most common ones<font color="#CCCCCC"> like strings and</font>

643
00:22:08,490 --> 00:22:11,309
hex strings which you're going<font color="#CCCCCC"> to use</font>

644
00:22:10,020 --> 00:22:13,350
for<font color="#E5E5E5"> typical</font><font color="#CCCCCC"> yarra rules</font>

645
00:22:11,309 --> 00:22:16,049
but then there's a lot<font color="#E5E5E5"> of other aspects</font>

646
00:22:13,350 --> 00:22:17,428
<font color="#E5E5E5">of files and binaries that you can use</font>

647
00:22:16,049 --> 00:22:20,129
especially<font color="#E5E5E5"> with things like</font><font color="#CCCCCC"> the PE</font>

648
00:22:17,429 --> 00:22:21,750
module in<font color="#CCCCCC"> yarra</font><font color="#E5E5E5"> or something like open</font>

649
00:22:20,130 --> 00:22:23,309
<font color="#CCCCCC">ioc so you can start looking</font><font color="#E5E5E5"> at things</font>

650
00:22:21,750 --> 00:22:25,970
<font color="#CCCCCC">like the authentic code signatures is I</font>

651
00:22:23,309 --> 00:22:28,830
have a bad signature<font color="#E5E5E5"> imports and exports</font>

652
00:22:25,970 --> 00:22:30,840
<font color="#E5E5E5">import hashing is great but I've</font>

653
00:22:28,830 --> 00:22:33,059
actually seen attackers that appeared to

654
00:22:30,840 --> 00:22:35,189
<font color="#CCCCCC">be changing import hash as part of their</font>

655
00:22:33,059 --> 00:22:36,690
<font color="#CCCCCC">builder</font><font color="#E5E5E5"> so they</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> seem to add and</font>

656
00:22:35,190 --> 00:22:38,789
remove imports just to mess with<font color="#E5E5E5"> the</font>

657
00:22:36,690 --> 00:22:40,770
import hash so not<font color="#E5E5E5"> only something that</font>

658
00:22:38,789 --> 00:22:42,240
<font color="#E5E5E5">you can 100% rely on can be better to</font>

659
00:22:40,770 --> 00:22:43,889
<font color="#CCCCCC">actually look</font><font color="#E5E5E5"> at the specific imports</font>

660
00:22:42,240 --> 00:22:45,659
and exports can<font color="#E5E5E5"> be really valuable</font>

661
00:22:43,890 --> 00:22:48,809
sections in our section data version

662
00:22:45,659 --> 00:22:50,280
<font color="#E5E5E5">info so on Windows PE s contain</font><font color="#CCCCCC"> internal</font>

663
00:22:48,809 --> 00:22:53,100
version<font color="#CCCCCC"> information that can be</font><font color="#E5E5E5"> very</font>

664
00:22:50,280 --> 00:22:54,928
valuable<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> those entire malware</font>

665
00:22:53,100 --> 00:22:57,000
families that I can identify because

666
00:22:54,929 --> 00:22:59,600
<font color="#E5E5E5">they</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> the wrong registered trademark</font>

667
00:22:57,000 --> 00:23:01,789
<font color="#CCCCCC">Unicode symbol in the</font><font color="#E5E5E5"> windows</font>

668
00:22:59,600 --> 00:23:03,439
<font color="#E5E5E5">Microsoft Windows internal version thing</font>

669
00:23:01,789 --> 00:23:04,908
<font color="#CCCCCC">so there's a lot of stuff that you can</font>

670
00:23:03,440 --> 00:23:06,710
do<font color="#CCCCCC"> they're also</font><font color="#E5E5E5"> looking at if</font>

671
00:23:04,909 --> 00:23:08,690
<font color="#CCCCCC">something's</font><font color="#E5E5E5"> claiming to be</font><font color="#CCCCCC"> serviced</font><font color="#E5E5E5"> host</font>

672
00:23:06,710 --> 00:23:10,340
and in the internal version info is<font color="#E5E5E5"> it's</font>

673
00:23:08,690 --> 00:23:11,840
three<font color="#CCCCCC"> times</font><font color="#E5E5E5"> the size of any ever</font>

674
00:23:10,340 --> 00:23:13,220
released version of<font color="#E5E5E5"> service so there's</font>

675
00:23:11,840 --> 00:23:15,918
lots of like methodology<font color="#E5E5E5"> based detection</font>

676
00:23:13,220 --> 00:23:18,169
<font color="#E5E5E5">so you can use using these these</font>

677
00:23:15,919 --> 00:23:20,269
<font color="#E5E5E5">attributes same with resources if</font>

678
00:23:18,169 --> 00:23:21,769
somebody's<font color="#E5E5E5"> using the same icon and a lot</font>

679
00:23:20,269 --> 00:23:24,919
of their malware you can look for that

680
00:23:21,769 --> 00:23:27,200
export names<font color="#CCCCCC"> things like export name and</font>

681
00:23:24,919 --> 00:23:28,700
export<font color="#E5E5E5"> timestamp a lot of attackers seem</font>

682
00:23:27,200 --> 00:23:30,499
<font color="#E5E5E5">to</font><font color="#CCCCCC"> overlook that</font><font color="#E5E5E5"> when they're built and</font>

683
00:23:28,700 --> 00:23:32,149
they're making their builders<font color="#CCCCCC"> maybe</font>

684
00:23:30,499 --> 00:23:33,590
they'll realize things<font color="#E5E5E5"> like the key</font>

685
00:23:32,149 --> 00:23:35,359
<font color="#E5E5E5">timestamps will tend</font><font color="#CCCCCC"> to get stomped</font>

686
00:23:33,590 --> 00:23:37,459
<font color="#E5E5E5">version info will get changed</font>

687
00:23:35,359 --> 00:23:39,590
some<font color="#E5E5E5"> of</font><font color="#CCCCCC"> those</font><font color="#E5E5E5"> things but the export</font>

688
00:23:37,460 --> 00:23:41,499
timestamp and export name on dll's tends

689
00:23:39,590 --> 00:23:43,999
<font color="#E5E5E5">to get overlooked for whatever reason</font>

690
00:23:41,499 --> 00:23:46,849
<font color="#CCCCCC">also</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> p/e characteristics in</font>

691
00:23:43,999 --> 00:23:48,940
there as well it's a<font color="#CCCCCC"> dll or an exe are</font>

692
00:23:46,849 --> 00:23:51,289
there anomalies in the executable

693
00:23:48,940 --> 00:23:53,629
<font color="#CCCCCC">dynamic execution items persistence</font>

694
00:23:51,289 --> 00:23:56,419
<font color="#CCCCCC">memory artifacts</font><font color="#E5E5E5"> like mutexes</font><font color="#CCCCCC"> and named</font>

695
00:23:53,629 --> 00:23:58,519
pipes command and control config files

696
00:23:56,419 --> 00:24:00,950
or registry keys and potentially handles

697
00:23:58,519 --> 00:24:04,220
to those in memory strings that<font color="#CCCCCC"> are</font>

698
00:24:00,950 --> 00:24:06,109
decoded in memory<font color="#E5E5E5"> a lot of a lot</font><font color="#CCCCCC"> of good</font>

699
00:24:04,220 --> 00:24:08,509
binaries don't really have a lot<font color="#CCCCCC"> of</font>

700
00:24:06,109 --> 00:24:10,460
usable strings<font color="#CCCCCC"> based on the fact that</font>

701
00:24:08,509 --> 00:24:12,109
they're packed but they'll do a<font color="#E5E5E5"> lot of</font>

702
00:24:10,460 --> 00:24:14,029
like stack strings and string decoding

703
00:24:12,109 --> 00:24:16,519
and memory<font color="#E5E5E5"> injection</font><font color="#CCCCCC"> in Dunellen</font>

704
00:24:14,029 --> 00:24:17,960
processes it's<font color="#CCCCCC"> really anything</font><font color="#E5E5E5"> that the</font>

705
00:24:16,519 --> 00:24:19,340
tools<font color="#E5E5E5"> that are available</font><font color="#CCCCCC"> the mutual</font>

706
00:24:17,960 --> 00:24:22,129
support<font color="#E5E5E5"> I'm going to try</font><font color="#CCCCCC"> to enumerate</font>

707
00:24:19,340 --> 00:24:25,009
all<font color="#CCCCCC"> of that data</font><font color="#E5E5E5"> and look at it and look</font>

708
00:24:22,129 --> 00:24:26,869
<font color="#E5E5E5">at the common elements from those items</font>

709
00:24:25,009 --> 00:24:28,549
as the starting<font color="#E5E5E5"> point</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> idea here is</font>

710
00:24:26,869 --> 00:24:30,859
<font color="#CCCCCC">that if it detects all of the known</font>

711
00:24:28,549 --> 00:24:32,629
versions to date based on those common

712
00:24:30,859 --> 00:24:36,259
elements it increases the<font color="#E5E5E5"> likelihood of</font>

713
00:24:32,629 --> 00:24:37,969
chance of catching future versions so

714
00:24:36,259 --> 00:24:39,470
I'm<font color="#E5E5E5"> not trying to detect only what's</font>

715
00:24:37,970 --> 00:24:41,119
come before I'm trying to like look

716
00:24:39,470 --> 00:24:43,489
forward a little<font color="#E5E5E5"> bit look at the core of</font>

717
00:24:41,119 --> 00:24:46,249
this malware family and figure out you

718
00:24:43,489 --> 00:24:48,229
know what's<font color="#E5E5E5"> likely</font><font color="#CCCCCC"> to come next</font><font color="#E5E5E5"> and this</font>

719
00:24:46,249 --> 00:24:50,239
<font color="#E5E5E5">can't increase in my false positives but</font>

720
00:24:48,229 --> 00:24:51,799
it can also<font color="#E5E5E5"> allow me</font><font color="#CCCCCC"> to capture future</font>

721
00:24:50,239 --> 00:24:53,659
versions even<font color="#E5E5E5"> before</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> actually</font>

722
00:24:51,799 --> 00:24:55,489
built<font color="#E5E5E5"> I'm gonna use behavioral</font>

723
00:24:53,659 --> 00:24:56,899
<font color="#E5E5E5">detections where possible going to</font>

724
00:24:55,489 --> 00:24:57,580
incorporate<font color="#CCCCCC"> both</font><font color="#E5E5E5"> the structure of the</font>

725
00:24:56,899 --> 00:24:59,918
<font color="#CCCCCC">malware</font>

726
00:24:57,580 --> 00:25:02,408
the attacker TTP's in deploying and

727
00:24:59,919 --> 00:25:04,840
using it so all of those<font color="#E5E5E5"> persistence and</font>

728
00:25:02,409 --> 00:25:05,710
other aspects<font color="#CCCCCC"> to</font><font color="#E5E5E5"> actually running and</font>

729
00:25:04,840 --> 00:25:07,238
using<font color="#CCCCCC"> z mailer</font>

730
00:25:05,710 --> 00:25:09,519
<font color="#CCCCCC">i'm going to add in those weak</font>

731
00:25:07,239 --> 00:25:11,710
detections like hashes and domains<font color="#CCCCCC"> I</font>

732
00:25:09,519 --> 00:25:13,480
mean even though I don't<font color="#E5E5E5"> get much value</font>

733
00:25:11,710 --> 00:25:15,639
out<font color="#CCCCCC"> of them I'll</font><font color="#E5E5E5"> say in the last three</font>

734
00:25:13,480 --> 00:25:19,539
years<font color="#E5E5E5"> I did</font><font color="#CCCCCC"> Incident Response I saw</font>

735
00:25:15,639 --> 00:25:20,949
maybe half a dozen md5 hits across<font color="#CCCCCC"> I</font>

736
00:25:19,539 --> 00:25:23,440
don't even know how many<font color="#E5E5E5"> actual</font>

737
00:25:20,950 --> 00:25:25,119
incidents<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm gonna make my</font>

738
00:25:23,440 --> 00:25:27,159
signatures as far as possible<font color="#E5E5E5"> and it</font>

739
00:25:25,119 --> 00:25:29,408
<font color="#CCCCCC">detected as many ways as possible while</font>

740
00:25:27,159 --> 00:25:31,419
<font color="#E5E5E5">staying at</font><font color="#CCCCCC"> FP rates so you know I'm</font>

741
00:25:29,409 --> 00:25:33,609
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> try to detect as many of the</font>

742
00:25:31,419 --> 00:25:37,359
aspects of it<font color="#CCCCCC"> and</font><font color="#E5E5E5"> as many places as</font>

743
00:25:33,609 --> 00:25:39,699
<font color="#CCCCCC">possible</font><font color="#E5E5E5"> I'm gonna run it against</font><font color="#CCCCCC"> a</font>

744
00:25:37,359 --> 00:25:42,699
<font color="#E5E5E5">sample set against clean systems against</font>

745
00:25:39,700 --> 00:25:44,350
corpus of binaries<font color="#CCCCCC"> test environment</font>

746
00:25:42,700 --> 00:25:45,999
production<font color="#CCCCCC"> tests I'm</font><font color="#E5E5E5"> gonna review those</font>

747
00:25:44,350 --> 00:25:47,498
hits an update for both<font color="#E5E5E5"> through</font>

748
00:25:45,999 --> 00:25:52,419
positives and false positive keep

749
00:25:47,499 --> 00:25:55,299
iterating so now<font color="#E5E5E5"> Daniel</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> gonna walk</font>

750
00:25:52,419 --> 00:25:56,830
<font color="#CCCCCC">through specific examples and kind</font><font color="#E5E5E5"> of</font>

751
00:25:55,299 --> 00:26:00,070
<font color="#CCCCCC">anew berating those assumptions</font><font color="#E5E5E5"> and</font>

752
00:25:56,830 --> 00:26:01,210
challenging detection<font color="#CCCCCC"> alright thanks</font>

753
00:26:00,070 --> 00:26:02,769
Matt so yeah there's a ton<font color="#E5E5E5"> of</font>

754
00:26:01,210 --> 00:26:04,600
<font color="#E5E5E5">information in binaries that we may not</font>

755
00:26:02,769 --> 00:26:06,429
necessarily immediately<font color="#E5E5E5"> think of and in</font>

756
00:26:04,600 --> 00:26:08,738
some ways we<font color="#CCCCCC"> think about detecting a</font>

757
00:26:06,429 --> 00:26:10,720
process execution<font color="#E5E5E5"> like register of 32</font>

758
00:26:08,739 --> 00:26:12,220
<font color="#E5E5E5">which we're going to look at it may seem</font>

759
00:26:10,720 --> 00:26:13,899
<font color="#CCCCCC">like well there's not</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> nearly as</font>

760
00:26:12,220 --> 00:26:15,519
much complicated<font color="#E5E5E5"> information to go off</font>

761
00:26:13,899 --> 00:26:17,229
of<font color="#CCCCCC"> but what I would</font><font color="#E5E5E5"> say this is where</font>

762
00:26:15,519 --> 00:26:18,519
context<font color="#CCCCCC"> becomes</font><font color="#E5E5E5"> really important and</font>

763
00:26:17,230 --> 00:26:21,580
there are<font color="#E5E5E5"> still a lot of assumptions</font>

764
00:26:18,519 --> 00:26:22,929
that<font color="#E5E5E5"> we as defenders make and as we</font>

765
00:26:21,580 --> 00:26:25,119
discover<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to break those assumptions</font>

766
00:26:22,929 --> 00:26:26,830
<font color="#E5E5E5">then we like to share those</font><font color="#CCCCCC"> with the</font>

767
00:26:25,119 --> 00:26:31,119
community so<font color="#CCCCCC"> that we can all improve</font><font color="#E5E5E5"> and</font>

768
00:26:26,830 --> 00:26:33,039
get better together<font color="#E5E5E5"> so</font><font color="#CCCCCC"> a quick high</font>

769
00:26:31,119 --> 00:26:36,399
level<font color="#CCCCCC"> overview register of 32 native</font>

770
00:26:33,039 --> 00:26:37,989
<font color="#CCCCCC">Windows signed</font><font color="#E5E5E5"> binary it's a really</font>

771
00:26:36,399 --> 00:26:40,299
awesome app<font color="#E5E5E5"> whitelisting bypass</font>

772
00:26:37,989 --> 00:26:42,549
discovered by Casey Smith or<font color="#CCCCCC"> subti back</font>

773
00:26:40,299 --> 00:26:43,989
in 2016<font color="#CCCCCC"> I remember the day that he</font>

774
00:26:42,549 --> 00:26:46,869
tweeted it out<font color="#CCCCCC"> I was</font><font color="#E5E5E5"> still drinking my</font>

775
00:26:43,989 --> 00:26:48,190
morning coffee<font color="#CCCCCC"> rotor network detection</font>

776
00:26:46,869 --> 00:26:50,139
for it and for<font color="#CCCCCC"> lunchtime we were already</font>

777
00:26:48,190 --> 00:26:52,210
seeing<font color="#E5E5E5"> it being used happened really</font>

778
00:26:50,139 --> 00:26:54,219
<font color="#CCCCCC">fast and</font><font color="#E5E5E5"> really good attackers really</font>

779
00:26:52,210 --> 00:26:55,629
<font color="#CCCCCC">liked Casey Smith and Matt Nelson other</font>

780
00:26:54,220 --> 00:26:58,090
people on<font color="#E5E5E5"> Twitter so when certain people</font>

781
00:26:55,629 --> 00:26:59,350
<font color="#E5E5E5">tweet he listen up and look for</font><font color="#CCCCCC"> it</font>

782
00:26:58,090 --> 00:27:01,658
quickly because we see attackers

783
00:26:59,350 --> 00:27:03,549
adopting them very very<font color="#E5E5E5"> quickly</font><font color="#CCCCCC"> but</font>

784
00:27:01,659 --> 00:27:05,650
essentially<font color="#E5E5E5"> you can use register of 32</font>

785
00:27:03,549 --> 00:27:08,320
to execute a local or<font color="#E5E5E5"> where</font>

786
00:27:05,650 --> 00:27:09,640
<font color="#CCCCCC">SCT file and inside that you can put any</font>

787
00:27:08,320 --> 00:27:11,139
jscript vbscript

788
00:27:09,640 --> 00:27:13,210
<font color="#CCCCCC">and several other</font><font color="#E5E5E5"> languages which we'll</font>

789
00:27:11,140 --> 00:27:15,070
see in<font color="#E5E5E5"> a second so whatever we look at</font>

790
00:27:13,210 --> 00:27:16,960
<font color="#CCCCCC">something that</font><font color="#E5E5E5"> we want to detect</font><font color="#CCCCCC"> we have</font>

791
00:27:15,070 --> 00:27:20,350
to step<font color="#CCCCCC"> back</font><font color="#E5E5E5"> and say do I understand the</font>

792
00:27:16,960 --> 00:27:21,970
the<font color="#CCCCCC"> execution the attack</font><font color="#E5E5E5"> cycle and then</font>

793
00:27:20,350 --> 00:27:23,679
each step of<font color="#E5E5E5"> the way</font><font color="#CCCCCC"> what are my</font>

794
00:27:21,970 --> 00:27:25,420
detection opportunity is one of the

795
00:27:23,680 --> 00:27:27,190
artifacts I have access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that I can</font>

796
00:27:25,420 --> 00:27:28,840
parse what are the<font color="#E5E5E5"> tools I have for</font>

797
00:27:27,190 --> 00:27:33,730
real-time<font color="#E5E5E5"> and historical detection on</font>

798
00:27:28,840 --> 00:27:36,639
both the network<font color="#E5E5E5"> and the endpoint so</font>

799
00:27:33,730 --> 00:27:38,800
this<font color="#E5E5E5"> is the kind of</font><font color="#CCCCCC"> POC that KC released</font>

800
00:27:36,640 --> 00:27:41,200
you have the<font color="#E5E5E5"> command on the right which</font>

801
00:27:38,800 --> 00:27:42,820
<font color="#CCCCCC">is pointing to in</font><font color="#E5E5E5"> this case a remote SCT</font>

802
00:27:41,200 --> 00:27:45,580
file which is what<font color="#CCCCCC"> we see on the left</font>

803
00:27:42,820 --> 00:27:47,200
<font color="#CCCCCC">just a simple</font><font color="#E5E5E5"> XML file</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we're going to</font>

804
00:27:45,580 --> 00:27:48,820
<font color="#E5E5E5">look at</font><font color="#CCCCCC"> both of</font><font color="#E5E5E5"> these pieces starting</font>

805
00:27:47,200 --> 00:27:50,140
with the command<font color="#E5E5E5"> so now maybe we're</font>

806
00:27:48,820 --> 00:27:52,210
<font color="#CCCCCC">gonna come</font><font color="#E5E5E5"> up with the detection which</font>

807
00:27:50,140 --> 00:27:54,070
we see on the left<font color="#CCCCCC"> so and logic if we</font>

808
00:27:52,210 --> 00:27:56,590
see these four combinations<font color="#E5E5E5"> of strings</font>

809
00:27:54,070 --> 00:27:58,510
on the command line<font color="#CCCCCC"> or heck even in you</font>

810
00:27:56,590 --> 00:27:59,649
know service arguments<font color="#E5E5E5"> run</font><font color="#CCCCCC"> keys or</font>

811
00:27:58,510 --> 00:28:02,020
anywhere in registry<font color="#E5E5E5"> this could be</font>

812
00:27:59,650 --> 00:28:04,510
really<font color="#CCCCCC"> interesting then this would</font>

813
00:28:02,020 --> 00:28:06,730
detect this command<font color="#E5E5E5"> however</font><font color="#CCCCCC"> we want to</font>

814
00:28:04,510 --> 00:28:08,170
start taking<font color="#E5E5E5"> this simple example</font><font color="#CCCCCC"> which</font>

815
00:28:06,730 --> 00:28:09,820
this<font color="#E5E5E5"> is like an example you may see in</font>

816
00:28:08,170 --> 00:28:11,860
some<font color="#E5E5E5"> of like</font><font color="#CCCCCC"> my the</font><font color="#E5E5E5"> atomic</font><font color="#CCCCCC"> testing</font>

817
00:28:09,820 --> 00:28:13,000
frameworks<font color="#E5E5E5"> which is really a good first</font>

818
00:28:11,860 --> 00:28:14,560
<font color="#E5E5E5">step but we want to make</font><font color="#CCCCCC"> sure that we</font>

819
00:28:13,000 --> 00:28:16,510
<font color="#E5E5E5">don't stop there and say yeah</font><font color="#CCCCCC"> we detect</font>

820
00:28:14,560 --> 00:28:17,919
squiggly-doo if we detect register 32

821
00:28:16,510 --> 00:28:19,450
because<font color="#E5E5E5"> there's a lot of components</font><font color="#CCCCCC"> that</font>

822
00:28:17,920 --> 00:28:21,820
can be<font color="#CCCCCC"> changed that</font><font color="#E5E5E5"> we want to make sure</font>

823
00:28:19,450 --> 00:28:24,820
<font color="#E5E5E5">that we're doing</font><font color="#CCCCCC"> iterative ly</font><font color="#E5E5E5"> one of</font>

824
00:28:21,820 --> 00:28:26,110
those being<font color="#E5E5E5"> flashes in HTTP for</font><font color="#CCCCCC"> web</font>

825
00:28:24,820 --> 00:28:28,030
server you can change<font color="#E5E5E5"> forward slashes</font>

826
00:28:26,110 --> 00:28:30,419
and backward slashes when it comes to

827
00:28:28,030 --> 00:28:33,010
that<font color="#E5E5E5"> URL this is dependent</font><font color="#CCCCCC"> on the binary</font>

828
00:28:30,420 --> 00:28:34,660
<font color="#E5E5E5">so for example PowerShell can take both</font>

829
00:28:33,010 --> 00:28:37,330
<font color="#E5E5E5">forward slashes both backward or forward</font>

830
00:28:34,660 --> 00:28:38,950
back backward forward so any binary I'm

831
00:28:37,330 --> 00:28:40,899
looking at or any detection I'm writing

832
00:28:38,950 --> 00:28:42,790
<font color="#E5E5E5">where a URL is present</font><font color="#CCCCCC"> I'll immediately</font>

833
00:28:40,900 --> 00:28:44,830
go and<font color="#E5E5E5"> flip those around and see if it's</font>

834
00:28:42,790 --> 00:28:47,370
possible<font color="#E5E5E5"> because if it is I want to</font>

835
00:28:44,830 --> 00:28:50,710
account<font color="#E5E5E5"> for that in</font><font color="#CCCCCC"> my detection zhh</font>

836
00:28:47,370 --> 00:28:53,229
next we have<font color="#E5E5E5"> registered will support</font>

837
00:28:50,710 --> 00:28:54,610
HTTP<font color="#CCCCCC"> HTTPS so we want to make sure</font><font color="#E5E5E5"> we're</font>

838
00:28:53,230 --> 00:28:57,160
not hard coding<font color="#E5E5E5"> that into our detection</font>

839
00:28:54,610 --> 00:28:59,260
<font color="#E5E5E5">and it actually supports a lot more FTP</font>

840
00:28:57,160 --> 00:29:01,000
WebDAV server it also supports local

841
00:28:59,260 --> 00:29:02,890
<font color="#E5E5E5">files as well</font><font color="#CCCCCC"> and so this is an instance</font>

842
00:29:01,000 --> 00:29:04,990
<font color="#CCCCCC">where I</font><font color="#E5E5E5"> might say</font><font color="#CCCCCC"> okay I'm gonna at this</font>

843
00:29:02,890 --> 00:29:07,450
point divided into two detection<font color="#CCCCCC"> and</font>

844
00:29:04,990 --> 00:29:09,430
handle register for local<font color="#E5E5E5"> se T and for</font>

845
00:29:07,450 --> 00:29:12,130
remote se T separately so I don't

846
00:29:09,430 --> 00:29:13,180
<font color="#E5E5E5">overcomplicate one detection and this is</font>

847
00:29:12,130 --> 00:29:15,220
the theme we'll see we're<font color="#E5E5E5"> going to start</font>

848
00:29:13,180 --> 00:29:16,690
peeling off multiple detection to detect

849
00:29:15,220 --> 00:29:18,070
these things as well

850
00:29:16,690 --> 00:29:20,620
at the end<font color="#E5E5E5"> also have like a reverse</font>

851
00:29:18,070 --> 00:29:22,000
detection to say an<font color="#CCCCCC"> s a register</font><font color="#E5E5E5"> of</font>

852
00:29:20,620 --> 00:29:25,060
command that doesn't match any of<font color="#E5E5E5"> these</font>

853
00:29:22,000 --> 00:29:26,680
things<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> methodology to then</font>

854
00:29:25,060 --> 00:29:28,030
immediately<font color="#E5E5E5"> know when something doesn't</font>

855
00:29:26,680 --> 00:29:32,050
match<font color="#E5E5E5"> all the things</font><font color="#CCCCCC"> that we've taken</font>

856
00:29:28,030 --> 00:29:33,700
into<font color="#CCCCCC"> account so far</font><font color="#E5E5E5"> another thing a</font><font color="#CCCCCC"> lot</font>

857
00:29:32,050 --> 00:29:35,590
of<font color="#E5E5E5"> people will have</font><font color="#CCCCCC"> to copy and paste</font>

858
00:29:33,700 --> 00:29:37,900
myself included<font color="#CCCCCC"> because it's easy</font><font color="#E5E5E5"> but</font>

859
00:29:35,590 --> 00:29:39,459
<font color="#CCCCCC">when people</font><font color="#E5E5E5"> are these</font><font color="#CCCCCC"> PRCs a lot of</font>

860
00:29:37,900 --> 00:29:41,560
attackers copy and paste<font color="#E5E5E5"> and they don't</font>

861
00:29:39,460 --> 00:29:43,450
take the time<font color="#CCCCCC"> to think</font><font color="#E5E5E5"> about why</font><font color="#CCCCCC"> does</font>

862
00:29:41,560 --> 00:29:45,730
this work and<font color="#E5E5E5"> what</font><font color="#CCCCCC"> do all of these</font>

863
00:29:43,450 --> 00:29:47,890
<font color="#CCCCCC">things</font><font color="#E5E5E5"> mean</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example these</font>

864
00:29:45,730 --> 00:29:49,630
<font color="#E5E5E5">arguments</font><font color="#CCCCCC"> SNU most people leave these</font>

865
00:29:47,890 --> 00:29:51,070
for<font color="#E5E5E5"> the single</font><font color="#CCCCCC"> light space between every</font>

866
00:29:49,630 --> 00:29:53,110
<font color="#CCCCCC">argument</font><font color="#E5E5E5"> right at the beginning of a</font>

867
00:29:51,070 --> 00:29:54,970
command<font color="#E5E5E5"> but you can actually</font><font color="#CCCCCC"> reorder</font>

868
00:29:53,110 --> 00:29:57,790
them<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure I'm</font><font color="#E5E5E5"> looking</font>

869
00:29:54,970 --> 00:29:59,260
<font color="#E5E5E5">at them separately in my detection you</font>

870
00:29:57,790 --> 00:30:02,020
<font color="#E5E5E5">can also put them all</font><font color="#CCCCCC"> over the place</font>

871
00:29:59,260 --> 00:30:03,820
<font color="#CCCCCC">right</font><font color="#E5E5E5"> so in this case /s is</font><font color="#CCCCCC"> now at the</font>

872
00:30:02,020 --> 00:30:05,379
<font color="#CCCCCC">very end of the command which is</font>

873
00:30:03,820 --> 00:30:07,450
<font color="#CCCCCC">interesting we'll see that in a second</font>

874
00:30:05,380 --> 00:30:09,040
<font color="#CCCCCC">but why don't we</font><font color="#E5E5E5"> just one wet serve help</font>

875
00:30:07,450 --> 00:30:11,950
<font color="#E5E5E5">one of these mean aren't they all</font>

876
00:30:09,040 --> 00:30:14,020
necessary for example<font color="#E5E5E5"> /m help menu for</font>

877
00:30:11,950 --> 00:30:16,810
<font color="#E5E5E5">red serve says you must use this with</font>

878
00:30:14,020 --> 00:30:18,700
<font color="#E5E5E5">the slash I command however you really</font>

879
00:30:16,810 --> 00:30:20,980
don't just remove<font color="#E5E5E5"> it</font><font color="#CCCCCC"> those are the</font>

880
00:30:18,700 --> 00:30:22,210
commands to<font color="#E5E5E5"> work heck yes it works</font><font color="#CCCCCC"> so an</font>

881
00:30:20,980 --> 00:30:23,590
attacker<font color="#E5E5E5"> doesn't have to use it so</font><font color="#CCCCCC"> I</font>

882
00:30:22,210 --> 00:30:25,960
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> want that in my detection I'm</font>

883
00:30:23,590 --> 00:30:29,230
gonna get it<font color="#E5E5E5"> out</font>

884
00:30:25,960 --> 00:30:31,950
in addition slashes when you look at

885
00:30:29,230 --> 00:30:34,750
arguments<font color="#CCCCCC"> PowerShell will use the</font><font color="#E5E5E5"> dash</font>

886
00:30:31,950 --> 00:30:37,150
for its arguments -<font color="#E5E5E5"> no profile</font>

887
00:30:34,750 --> 00:30:40,030
- and coded command<font color="#CCCCCC"> read serve uses</font>

888
00:30:37,150 --> 00:30:42,040
forward slash however you can change it

889
00:30:40,030 --> 00:30:44,920
<font color="#CCCCCC">and a lot of binaries will support both</font>

890
00:30:42,040 --> 00:30:46,629
<font color="#E5E5E5">dashes and slashes so again</font><font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> I'm</font>

891
00:30:44,920 --> 00:30:48,160
writing a detection now I know this is a

892
00:30:46,630 --> 00:30:49,990
trick that works<font color="#E5E5E5"> for some binaries</font><font color="#CCCCCC"> so</font>

893
00:30:48,160 --> 00:30:51,730
<font color="#CCCCCC">I'm going to test it</font><font color="#E5E5E5"> on the binaries at</font>

894
00:30:49,990 --> 00:30:53,800
hand<font color="#E5E5E5"> and make sure that I take that into</font>

895
00:30:51,730 --> 00:30:57,340
<font color="#CCCCCC">account and so in this case</font><font color="#E5E5E5"> I'm taking</font>

896
00:30:53,800 --> 00:30:58,600
it into account<font color="#CCCCCC"> by having or so /s or</font><font color="#E5E5E5"> -</font>

897
00:30:57,340 --> 00:31:02,050
s<font color="#CCCCCC"> you</font><font color="#E5E5E5"> could also use a regular</font>

898
00:30:58,600 --> 00:31:05,530
<font color="#CCCCCC">expression if you</font><font color="#E5E5E5"> wanted to file</font>

899
00:31:02,050 --> 00:31:08,020
extensions so for<font color="#CCCCCC"> red serve XE and</font>

900
00:31:05,530 --> 00:31:09,670
<font color="#E5E5E5">scratch a</font><font color="#CCCCCC"> DLL we can totally remove</font>

901
00:31:08,020 --> 00:31:11,110
those and the operating system will find

902
00:31:09,670 --> 00:31:12,940
that for<font color="#E5E5E5"> us based off of iterating</font>

903
00:31:11,110 --> 00:31:15,250
through the path extension environment

904
00:31:12,940 --> 00:31:17,050
variable in addition the SCT file

905
00:31:15,250 --> 00:31:18,550
<font color="#E5E5E5">doesn't have to have any extension at</font>

906
00:31:17,050 --> 00:31:20,470
all or<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> have to be the SCT</font>

907
00:31:18,550 --> 00:31:22,330
file extension it's based purely on the

908
00:31:20,470 --> 00:31:23,190
content<font color="#E5E5E5"> of the file itself</font><font color="#CCCCCC"> so if you're</font>

909
00:31:22,330 --> 00:31:25,290
looking<font color="#E5E5E5"> only</font>

910
00:31:23,190 --> 00:31:26,790
for network connections to a dot SCT or

911
00:31:25,290 --> 00:31:28,560
if you're<font color="#E5E5E5"> looking for dot s CT in the</font>

912
00:31:26,790 --> 00:31:29,879
arguments<font color="#E5E5E5"> that can be completely evaded</font>

913
00:31:28,560 --> 00:31:32,240
and<font color="#E5E5E5"> we see it hackers doing this all the</font>

914
00:31:29,880 --> 00:31:36,240
<font color="#CCCCCC">time it's very</font><font color="#E5E5E5"> simple to do</font>

915
00:31:32,240 --> 00:31:37,860
another thing is<font color="#CCCCCC"> attackers realize that</font>

916
00:31:36,240 --> 00:31:40,020
defenders often will write detection

917
00:31:37,860 --> 00:31:42,959
based<font color="#E5E5E5"> on process name is reg serve and</font>

918
00:31:40,020 --> 00:31:45,090
it contains these arguments<font color="#CCCCCC"> and maybe</font>

919
00:31:42,960 --> 00:31:46,710
some<font color="#E5E5E5"> people will say</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> no you</font>

920
00:31:45,090 --> 00:31:48,510
can<font color="#E5E5E5"> just change let's sort</font><font color="#CCCCCC"> of copy it to</font>

921
00:31:46,710 --> 00:31:51,660
<font color="#CCCCCC">another name</font><font color="#E5E5E5"> but I still want to look</font>

922
00:31:48,510 --> 00:31:53,580
for you know HTTP<font color="#E5E5E5"> slash I scrubbed a</font>

923
00:31:51,660 --> 00:31:55,710
blah blah blah well attackers can just

924
00:31:53,580 --> 00:31:59,159
<font color="#CCCCCC">freakin change both of those and now</font>

925
00:31:55,710 --> 00:32:01,680
<font color="#CCCCCC">rename KC read serve</font><font color="#E5E5E5"> to KC and actually</font>

926
00:31:59,160 --> 00:32:03,210
rename the DLL itself because<font color="#E5E5E5"> web server</font>

927
00:32:01,680 --> 00:32:04,920
<font color="#E5E5E5">is simply looking on the disk for the</font>

928
00:32:03,210 --> 00:32:07,230
DLL name that you<font color="#E5E5E5"> gave it so you can</font>

929
00:32:04,920 --> 00:32:08,670
rename<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> Smith dot DLL</font><font color="#CCCCCC"> and now</font>

930
00:32:07,230 --> 00:32:10,170
<font color="#CCCCCC">scrubbed</font><font color="#E5E5E5"> rate doesn't even appear on the</font>

931
00:32:08,670 --> 00:32:12,540
command<font color="#E5E5E5"> line or</font><font color="#CCCCCC"> even in image load</font>

932
00:32:10,170 --> 00:32:14,010
events so again each piece<font color="#E5E5E5"> can we change</font>

933
00:32:12,540 --> 00:32:15,510
this on this can we change this in the

934
00:32:14,010 --> 00:32:19,530
arguments<font color="#E5E5E5"> and how does that affect our</font>

935
00:32:15,510 --> 00:32:20,760
detection<font color="#CCCCCC"> thirty-two loves to do</font><font color="#E5E5E5"> this</font>

936
00:32:19,530 --> 00:32:22,770
kind of stuff by the<font color="#E5E5E5"> way we also see</font>

937
00:32:20,760 --> 00:32:25,200
them<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> this with</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> Matt Nelson C</font>

938
00:32:22,770 --> 00:32:28,080
<font color="#E5E5E5">script</font><font color="#CCCCCC"> pub print that BBS</font><font color="#E5E5E5"> they like to</font>

939
00:32:25,200 --> 00:32:37,410
<font color="#E5E5E5">change that to like</font><font color="#CCCCCC"> yin XE</font><font color="#E5E5E5"> and yang</font><font color="#CCCCCC"> tex</font>

940
00:32:28,080 --> 00:32:39,689
<font color="#E5E5E5">so they</font><font color="#CCCCCC"> can I give</font><font color="#E5E5E5"> us some good</font><font color="#CCCCCC"> last the</font>

941
00:32:37,410 --> 00:32:40,800
arguments<font color="#E5E5E5"> around before I was assuming</font>

942
00:32:39,690 --> 00:32:42,300
<font color="#E5E5E5">that you always had to</font><font color="#CCCCCC"> have a white</font>

943
00:32:40,800 --> 00:32:45,419
space<font color="#E5E5E5"> on either side</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these arguments</font>

944
00:32:42,300 --> 00:32:48,570
<font color="#E5E5E5">for the s and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> U but notice we push</font>

945
00:32:45,420 --> 00:32:50,130
the we push the S argument to the very

946
00:32:48,570 --> 00:32:52,530
end of the command now there's no<font color="#E5E5E5"> weight</font>

947
00:32:50,130 --> 00:32:54,870
space after<font color="#E5E5E5"> it</font><font color="#CCCCCC"> ok well that's simple</font><font color="#E5E5E5"> I</font>

948
00:32:52,530 --> 00:32:56,639
just<font color="#CCCCCC"> make sure that maybe I have some</font>

949
00:32:54,870 --> 00:32:58,409
<font color="#E5E5E5">reg X's let's say only white space or</font>

950
00:32:56,640 --> 00:32:59,460
<font color="#CCCCCC">it's the</font><font color="#E5E5E5"> end of the command but what I</font>

951
00:32:58,410 --> 00:33:01,680
found is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can actually put</font>

952
00:32:59,460 --> 00:33:03,120
<font color="#E5E5E5">almost any characters you want after a</font>

953
00:33:01,680 --> 00:33:04,980
lot<font color="#E5E5E5"> of these arguments and that command</font>

954
00:33:03,120 --> 00:33:07,199
<font color="#E5E5E5">actually freaking works because</font><font color="#CCCCCC"> red</font>

955
00:33:04,980 --> 00:33:09,720
<font color="#CCCCCC">shirt will ignore text after the</font>

956
00:33:07,200 --> 00:33:10,950
<font color="#CCCCCC">argument until</font><font color="#E5E5E5"> the next</font><font color="#CCCCCC"> whitespace that</font>

957
00:33:09,720 --> 00:33:12,539
sucks right

958
00:33:10,950 --> 00:33:14,220
I've never<font color="#E5E5E5"> seen that</font><font color="#CCCCCC"> in the wild</font><font color="#E5E5E5"> before</font>

959
00:33:12,539 --> 00:33:15,690
but<font color="#E5E5E5"> again what I'm going</font><font color="#CCCCCC"> through and</font>

960
00:33:14,220 --> 00:33:17,549
saying<font color="#CCCCCC"> okay my detection assumes that</font>

961
00:33:15,690 --> 00:33:19,649
<font color="#CCCCCC">white space can</font><font color="#E5E5E5"> I put any character in</font>

962
00:33:17,549 --> 00:33:22,350
<font color="#E5E5E5">front of it that works</font><font color="#CCCCCC"> and then</font><font color="#E5E5E5"> test it</font>

963
00:33:19,649 --> 00:33:24,029
<font color="#CCCCCC">oh man this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> bad</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> it works</font><font color="#E5E5E5"> and</font>

964
00:33:22,350 --> 00:33:26,248
this breaks<font color="#E5E5E5"> my detection let me go</font>

965
00:33:24,029 --> 00:33:27,929
update it<font color="#CCCCCC"> I get happy and sad when I</font>

966
00:33:26,249 --> 00:33:29,489
find these<font color="#CCCCCC"> things because it's I'm a I'm</font>

967
00:33:27,929 --> 00:33:31,109
happy that<font color="#E5E5E5"> I found</font><font color="#CCCCCC"> the new thing that</font>

968
00:33:29,489 --> 00:33:33,210
<font color="#CCCCCC">would</font><font color="#E5E5E5"> break my detection but then it's</font>

969
00:33:31,109 --> 00:33:34,710
also<font color="#E5E5E5"> work to go and fix it so I'm kind</font>

970
00:33:33,210 --> 00:33:36,720
of<font color="#E5E5E5"> my own worst enemy when it comes to</font>

971
00:33:34,710 --> 00:33:40,139
that<font color="#CCCCCC"> well</font><font color="#E5E5E5"> it's all said and done you</font>

972
00:33:36,720 --> 00:33:42,659
feel<font color="#E5E5E5"> better about it another thing you</font>

973
00:33:40,139 --> 00:33:44,549
can do is use<font color="#CCCCCC"> double quotes</font><font color="#E5E5E5"> these are</font>

974
00:33:42,659 --> 00:33:45,690
<font color="#E5E5E5">really</font><font color="#CCCCCC"> fine obfuscators and this is</font>

975
00:33:44,549 --> 00:33:47,720
where it becomes<font color="#CCCCCC"> interesting depending</font>

976
00:33:45,690 --> 00:33:49,440
<font color="#CCCCCC">on the parent process</font><font color="#E5E5E5"> of a binary</font>

977
00:33:47,720 --> 00:33:50,970
<font color="#CCCCCC">opposition characters that worked in the</font>

978
00:33:49,440 --> 00:33:52,470
parent process<font color="#E5E5E5"> sometimes can be passed</font>

979
00:33:50,970 --> 00:33:54,389
to<font color="#CCCCCC"> the child</font><font color="#E5E5E5"> process</font><font color="#CCCCCC"> so let's say</font>

980
00:33:52,470 --> 00:33:56,159
command as your parent process<font color="#E5E5E5"> and red</font>

981
00:33:54,389 --> 00:33:58,469
serve as the child<font color="#E5E5E5"> you can actually</font>

982
00:33:56,159 --> 00:33:59,759
<font color="#E5E5E5">insert things like double quotes which</font>

983
00:33:58,470 --> 00:34:02,100
will be passed<font color="#E5E5E5"> down to</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> subsequent</font>

984
00:33:59,759 --> 00:34:04,649
child processes<font color="#E5E5E5"> the way that the command</font>

985
00:34:02,100 --> 00:34:06,059
prompt interprets arguments<font color="#E5E5E5"> and so this</font>

986
00:34:04,649 --> 00:34:06,779
now<font color="#E5E5E5"> will break the fact that we're</font>

987
00:34:06,059 --> 00:34:10,079
looking<font color="#E5E5E5"> for</font>

988
00:34:06,779 --> 00:34:11,760
- you or slash you<font color="#E5E5E5"> right and as long as</font>

989
00:34:10,079 --> 00:34:12,990
<font color="#E5E5E5">you keep an even the number of pairs of</font>

990
00:34:11,760 --> 00:34:15,329
<font color="#E5E5E5">these you can</font><font color="#CCCCCC"> put them all over the</font>

991
00:34:12,989 --> 00:34:17,129
<font color="#E5E5E5">place now HTTP isn't even a good</font>

992
00:34:15,329 --> 00:34:19,440
indicator and there's several ways<font color="#CCCCCC"> that</font>

993
00:34:17,129 --> 00:34:21,839
<font color="#E5E5E5">you can handle this one is you can do</font>

994
00:34:19,440 --> 00:34:23,668
<font color="#E5E5E5">stupid insane reg X's to handle all</font>

995
00:34:21,839 --> 00:34:25,469
these<font color="#E5E5E5"> special</font><font color="#CCCCCC"> characters which we do</font>

996
00:34:23,668 --> 00:34:27,899
sometimes<font color="#CCCCCC"> or if you have the capability</font>

997
00:34:25,469 --> 00:34:29,428
<font color="#CCCCCC">to do one</font><font color="#E5E5E5"> step of post processing</font><font color="#CCCCCC"> you</font>

998
00:34:27,899 --> 00:34:33,509
<font color="#E5E5E5">can do it before</font><font color="#CCCCCC"> and after</font><font color="#E5E5E5"> analysis to</font>

999
00:34:29,429 --> 00:34:36,569
say okay if<font color="#CCCCCC"> and my command argument HTTP</font>

1000
00:34:33,510 --> 00:34:38,460
is not present<font color="#E5E5E5"> but it is present in the</font>

1001
00:34:36,569 --> 00:34:40,799
<font color="#E5E5E5">argument once I remove special</font>

1002
00:34:38,460 --> 00:34:42,569
characters<font color="#E5E5E5"> now that one step of post</font>

1003
00:34:40,799 --> 00:34:44,369
process and you can quickly<font color="#E5E5E5"> see</font>

1004
00:34:42,569 --> 00:34:46,409
obfuscation was present without having

1005
00:34:44,369 --> 00:34:50,460
to do<font color="#CCCCCC"> a single reg X which is really</font>

1006
00:34:46,409 --> 00:34:52,919
nice so taking one step<font color="#E5E5E5"> back there's a</font>

1007
00:34:50,460 --> 00:34:54,449
lot of steps<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can go down for</font>

1008
00:34:52,918 --> 00:34:56,250
obfuscation and evasion<font color="#CCCCCC"> and this is just</font>

1009
00:34:54,449 --> 00:34:58,049
<font color="#E5E5E5">for a single</font><font color="#CCCCCC"> binary but a lot</font><font color="#E5E5E5"> of these</font>

1010
00:34:56,250 --> 00:34:59,730
techniques are applicable<font color="#E5E5E5"> for</font><font color="#CCCCCC"> anything</font>

1011
00:34:58,049 --> 00:35:02,400
on the command line<font color="#CCCCCC"> but it's important</font>

1012
00:34:59,730 --> 00:35:03,990
<font color="#CCCCCC">to remember there's not some magic</font><font color="#E5E5E5"> reg X</font>

1013
00:35:02,400 --> 00:35:05,549
that will detect all these things or<font color="#E5E5E5"> if</font>

1014
00:35:03,990 --> 00:35:06,990
there<font color="#E5E5E5"> is you probably don't want to</font>

1015
00:35:05,549 --> 00:35:09,329
<font color="#E5E5E5">spend</font><font color="#CCCCCC"> your time</font><font color="#E5E5E5"> doing that for every</font>

1016
00:35:06,990 --> 00:35:11,700
single<font color="#E5E5E5"> binary</font><font color="#CCCCCC"> and use case that comes</font>

1017
00:35:09,329 --> 00:35:13,440
out<font color="#E5E5E5"> so</font><font color="#CCCCCC"> break</font><font color="#E5E5E5"> it up into</font><font color="#CCCCCC"> pieces we have</font>

1018
00:35:11,700 --> 00:35:15,930
detection<font color="#E5E5E5"> forward</font><font color="#CCCCCC"> to default arguments</font>

1019
00:35:13,440 --> 00:35:17,819
with<font color="#E5E5E5"> zero obfuscation that's the plane</font>

1020
00:35:15,930 --> 00:35:19,200
detection<font color="#E5E5E5"> did we said okay let's</font><font color="#CCCCCC"> handle</font>

1021
00:35:17,819 --> 00:35:21,210
<font color="#E5E5E5">office</font><font color="#CCCCCC"> Gatien separately and</font><font color="#E5E5E5"> you know</font>

1022
00:35:19,200 --> 00:35:23,450
what<font color="#E5E5E5"> let's handle rename executables and</font>

1023
00:35:21,210 --> 00:35:25,010
<font color="#E5E5E5">dll's completely separately as well</font><font color="#CCCCCC"> and</font>

1024
00:35:23,450 --> 00:35:27,169
<font color="#CCCCCC">or</font><font color="#E5E5E5"> step back and say what additional</font>

1025
00:35:25,010 --> 00:35:28,549
context do we have for detection<font color="#CCCCCC"> x'</font><font color="#E5E5E5"> what</font>

1026
00:35:27,170 --> 00:35:31,280
about register of making these network

1027
00:35:28,549 --> 00:35:32,900
connections<font color="#E5E5E5"> to non RFC 1918 addresses</font>

1028
00:35:31,280 --> 00:35:34,640
<font color="#E5E5E5">well what about the image load events</font>

1029
00:35:32,900 --> 00:35:36,950
that happen<font color="#E5E5E5"> well if we see register of</font>

1030
00:35:34,640 --> 00:35:38,720
loading<font color="#E5E5E5"> W</font><font color="#CCCCCC"> Sean that OC X</font><font color="#E5E5E5"> or jscript</font><font color="#CCCCCC"> via</font>

1031
00:35:36,950 --> 00:35:40,279
<font color="#CCCCCC">or vbscript dia</font><font color="#E5E5E5"> or all these different</font>

1032
00:35:38,720 --> 00:35:42,828
things<font color="#CCCCCC"> this is more information telling</font>

1033
00:35:40,280 --> 00:35:44,750
<font color="#E5E5E5">us what is happening</font><font color="#CCCCCC"> in that process and</font>

1034
00:35:42,829 --> 00:35:46,280
then if we've got all this work to

1035
00:35:44,750 --> 00:35:48,799
<font color="#CCCCCC">identify these suspicious</font><font color="#E5E5E5"> um</font>

1036
00:35:46,280 --> 00:35:50,299
<font color="#CCCCCC">command-line arguments</font><font color="#E5E5E5"> why don't we just</font>

1037
00:35:48,799 --> 00:35:52,400
do<font color="#CCCCCC"> something</font><font color="#E5E5E5"> crazy and say let me write</font>

1038
00:35:50,299 --> 00:35:54,710
<font color="#CCCCCC">it snort signature</font><font color="#E5E5E5"> looking for command</font>

1039
00:35:52,400 --> 00:35:57,290
<font color="#E5E5E5">line host artifacts being transferred</font>

1040
00:35:54,710 --> 00:35:59,270
over the<font color="#E5E5E5"> wire which sounds crazy but you</font>

1041
00:35:57,290 --> 00:36:01,910
<font color="#E5E5E5">will</font><font color="#CCCCCC"> find some amazing</font><font color="#E5E5E5"> stuff doing this</font>

1042
00:35:59,270 --> 00:36:03,200
like SCCM service results being passed

1043
00:36:01,910 --> 00:36:05,390
over<font color="#CCCCCC"> a network where in hints of</font>

1044
00:36:03,200 --> 00:36:07,819
malicious command or<font color="#CCCCCC"> the</font><font color="#E5E5E5"> commands being</font>

1045
00:36:05,390 --> 00:36:09,618
passed over SMB<font color="#E5E5E5"> or</font><font color="#CCCCCC"> wi process call</font>

1046
00:36:07,819 --> 00:36:10,549
create there's some insanely<font color="#E5E5E5"> cool things</font>

1047
00:36:09,619 --> 00:36:12,470
<font color="#E5E5E5">that happen when you take a</font>

1048
00:36:10,549 --> 00:36:14,809
<font color="#E5E5E5">high-fidelity command argument detection</font>

1049
00:36:12,470 --> 00:36:17,029
and put it in a network detection with

1050
00:36:14,809 --> 00:36:18,650
<font color="#CCCCCC">wide-open constraints</font><font color="#E5E5E5"> I don't care what</font>

1051
00:36:17,030 --> 00:36:20,329
<font color="#E5E5E5">port I don't care what source or desc</font>

1052
00:36:18,650 --> 00:36:22,460
if I see the string<font color="#CCCCCC"> I want to</font>

1053
00:36:20,329 --> 00:36:24,020
investigate what it is in the context<font color="#CCCCCC"> in</font>

1054
00:36:22,460 --> 00:36:27,170
which<font color="#E5E5E5"> I find it then we find a lot of</font>

1055
00:36:24,020 --> 00:36:29,089
<font color="#CCCCCC">cool attack techniques based off of</font>

1056
00:36:27,170 --> 00:36:31,700
finding a known bad thing inside<font color="#CCCCCC"> of a</font>

1057
00:36:29,089 --> 00:36:33,230
wrapper works like<font color="#CCCCCC"> well</font><font color="#E5E5E5"> what is this but</font>

1058
00:36:31,700 --> 00:36:37,189
I didn't even know this<font color="#CCCCCC"> was possible let</font>

1059
00:36:33,230 --> 00:36:39,109
me investigate now so first point was

1060
00:36:37,190 --> 00:36:41,140
registered by<font color="#CCCCCC"> XE but what</font><font color="#E5E5E5"> about</font>

1061
00:36:39,109 --> 00:36:43,430
detection opportunities<font color="#E5E5E5"> for the SCT file</font>

1062
00:36:41,140 --> 00:36:45,109
<font color="#CCCCCC">and so</font><font color="#E5E5E5"> again if we're assuming that this</font>

1063
00:36:43,430 --> 00:36:47,328
<font color="#E5E5E5">is being hosted remotely which in most</font>

1064
00:36:45,109 --> 00:36:49,660
<font color="#E5E5E5">cases</font><font color="#CCCCCC"> it is so we're going to look</font><font color="#E5E5E5"> at it</font>

1065
00:36:47,329 --> 00:36:51,859
mainly<font color="#E5E5E5"> from a network perspective but as</font>

1066
00:36:49,660 --> 00:36:54,410
before we<font color="#E5E5E5"> want to look at this and say</font>

1067
00:36:51,859 --> 00:36:56,180
how can<font color="#E5E5E5"> I better understand this SCT</font>

1068
00:36:54,410 --> 00:36:58,549
file because most attackers are gonna

1069
00:36:56,180 --> 00:37:00,618
copy and<font color="#E5E5E5"> paste so the first thing I do</font>

1070
00:36:58,549 --> 00:37:04,339
for stuff like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is I say what's</font>

1071
00:37:00,619 --> 00:37:06,349
common what is<font color="#E5E5E5"> there by default and if I</font>

1072
00:37:04,339 --> 00:37:07,369
gather as<font color="#E5E5E5"> many samples as I can as done</font>

1073
00:37:06,349 --> 00:37:10,430
what he was saying

1074
00:37:07,369 --> 00:37:13,190
<font color="#E5E5E5">building a corpus a data set one of the</font>

1075
00:37:10,430 --> 00:37:15,140
most common strings I see because

1076
00:37:13,190 --> 00:37:17,059
<font color="#E5E5E5">attackers likely aren't taking the time</font>

1077
00:37:15,140 --> 00:37:19,098
to figure out<font color="#CCCCCC"> what's necessary or what</font>

1078
00:37:17,059 --> 00:37:21,520
can be changed<font color="#CCCCCC"> so what's highlighted</font><font color="#E5E5E5"> in</font>

1079
00:37:19,099 --> 00:37:23,680
green are the<font color="#E5E5E5"> most common things</font><font color="#CCCCCC"> we see</font>

1080
00:37:21,520 --> 00:37:25,990
but<font color="#CCCCCC"> then</font><font color="#E5E5E5"> I want to ask is what's</font>

1081
00:37:23,680 --> 00:37:27,910
<font color="#E5E5E5">actually required so I go</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> and</font>

1082
00:37:25,990 --> 00:37:29,109
piece<font color="#CCCCCC"> by piece start removing things to</font>

1083
00:37:27,910 --> 00:37:31,240
see does<font color="#E5E5E5"> it</font><font color="#CCCCCC"> still work</font>

1084
00:37:29,110 --> 00:37:33,640
turns out<font color="#E5E5E5"> you can remove a lot of</font><font color="#CCCCCC"> pieces</font>

1085
00:37:31,240 --> 00:37:35,680
everything<font color="#E5E5E5"> in</font><font color="#CCCCCC"> yellow I mean the comments</font>

1086
00:37:33,640 --> 00:37:38,560
are<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> a given but some of the XML</font>

1087
00:37:35,680 --> 00:37:40,690
tags<font color="#CCCCCC"> frogeye d c-- data you can</font>

1088
00:37:38,560 --> 00:37:43,720
completely remove<font color="#E5E5E5"> that the SCT file</font>

1089
00:37:40,690 --> 00:37:45,790
still works<font color="#CCCCCC"> so now i definitely have</font>

1090
00:37:43,720 --> 00:37:47,709
some detection<font color="#E5E5E5"> x' based on some of those</font>

1091
00:37:45,790 --> 00:37:49,779
pieces that aren't<font color="#CCCCCC"> removable</font><font color="#E5E5E5"> but those</font>

1092
00:37:47,710 --> 00:37:51,940
are the<font color="#E5E5E5"> most</font><font color="#CCCCCC"> basic simple default</font>

1093
00:37:49,780 --> 00:37:53,650
detection<font color="#CCCCCC"> x'</font><font color="#E5E5E5"> and i immediately move on</font>

1094
00:37:51,940 --> 00:37:56,560
to more detection<font color="#CCCCCC"> x' to find like the</font>

1095
00:37:53,650 --> 00:38:01,270
<font color="#E5E5E5">minimal</font><font color="#CCCCCC"> viable product</font><font color="#E5E5E5"> if you will</font><font color="#CCCCCC"> of an</font>

1096
00:37:56,560 --> 00:38:03,549
SCT file<font color="#E5E5E5"> next of the step what can I</font>

1097
00:38:01,270 --> 00:38:05,410
change one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the things you might look</font>

1098
00:38:03,550 --> 00:38:07,000
<font color="#E5E5E5">at is</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> double quotes and single</font>

1099
00:38:05,410 --> 00:38:08,259
<font color="#E5E5E5">quotes we can change those those are</font>

1100
00:38:07,000 --> 00:38:11,920
interchangeable<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I should take</font><font color="#E5E5E5"> that</font>

1101
00:38:08,260 --> 00:38:13,450
<font color="#CCCCCC">into account also</font><font color="#E5E5E5"> the class ID Casey</font>

1102
00:38:11,920 --> 00:38:15,820
Smith had a fun little joke<font color="#CCCCCC"> in here or</font>

1103
00:38:13,450 --> 00:38:17,169
he ends it<font color="#E5E5E5"> with feed</font><font color="#CCCCCC"> ACDC you would</font><font color="#E5E5E5"> not</font>

1104
00:38:15,820 --> 00:38:19,120
<font color="#E5E5E5">believe how</font><font color="#CCCCCC"> many people don't change</font>

1105
00:38:17,170 --> 00:38:21,280
<font color="#E5E5E5">this and they assume that it's some you</font>

1106
00:38:19,120 --> 00:38:23,799
know special<font color="#CCCCCC"> you know class ID that has</font>

1107
00:38:21,280 --> 00:38:25,930
to stay the<font color="#CCCCCC"> same a lot of</font><font color="#E5E5E5"> people even</font>

1108
00:38:23,800 --> 00:38:27,760
some like<font color="#E5E5E5"> semi sufficient or</font>

1109
00:38:25,930 --> 00:38:30,190
sophisticated<font color="#E5E5E5"> attackers will still leave</font>

1110
00:38:27,760 --> 00:38:32,440
this so we definitely<font color="#E5E5E5"> look for that as a</font>

1111
00:38:30,190 --> 00:38:36,130
hey here's someone<font color="#E5E5E5"> who's</font><font color="#CCCCCC"> copy/paste I</font>

1112
00:38:32,440 --> 00:38:38,410
want to know when I see feed<font color="#CCCCCC"> ACDC but</font>

1113
00:38:36,130 --> 00:38:39,520
technically you can change that<font color="#CCCCCC"> to</font>

1114
00:38:38,410 --> 00:38:41,470
<font color="#E5E5E5">anything as long as it's</font><font color="#CCCCCC"> still a valid</font>

1115
00:38:39,520 --> 00:38:45,040
<font color="#E5E5E5">class ID so</font><font color="#CCCCCC"> you can change</font><font color="#E5E5E5"> it to</font>

1116
00:38:41,470 --> 00:38:48,040
<font color="#E5E5E5">something</font><font color="#CCCCCC"> more like that also script</font>

1117
00:38:45,040 --> 00:38:50,800
tags<font color="#E5E5E5"> this is an SCT file right so it</font>

1118
00:38:48,040 --> 00:38:52,870
must<font color="#E5E5E5"> have script tags surely</font><font color="#CCCCCC"> however</font>

1119
00:38:50,800 --> 00:38:55,000
there<font color="#CCCCCC"> are other things</font><font color="#E5E5E5"> you can use like</font>

1120
00:38:52,870 --> 00:38:57,490
the<font color="#E5E5E5"> component tags and again this comes</font>

1121
00:38:55,000 --> 00:39:00,100
<font color="#CCCCCC">down to what's the</font><font color="#E5E5E5"> what is the minimum</font>

1122
00:38:57,490 --> 00:39:01,600
required tags required for an<font color="#E5E5E5"> SCT file</font>

1123
00:39:00,100 --> 00:39:03,250
and I want to make sure I'm using<font color="#E5E5E5"> that</font>

1124
00:39:01,600 --> 00:39:05,140
<font color="#CCCCCC">as my anchor and</font><font color="#E5E5E5"> then looking</font><font color="#CCCCCC"> for</font>

1125
00:39:03,250 --> 00:39:07,270
everything<font color="#CCCCCC"> else</font><font color="#E5E5E5"> so let's say maybe our</font>

1126
00:39:05,140 --> 00:39:08,830
anchor is the<font color="#E5E5E5"> registration tag</font><font color="#CCCCCC"> and we</font>

1127
00:39:07,270 --> 00:39:11,410
<font color="#E5E5E5">assume that</font><font color="#CCCCCC"> a script</font><font color="#E5E5E5"> tag is always</font>

1128
00:39:08,830 --> 00:39:13,990
required<font color="#E5E5E5"> we can then write detection</font>

1129
00:39:11,410 --> 00:39:15,790
looking for things with script<font color="#E5E5E5"> tags or</font>

1130
00:39:13,990 --> 00:39:18,040
things are the<font color="#E5E5E5"> vegetation tags that do</font>

1131
00:39:15,790 --> 00:39:19,300
<font color="#E5E5E5">not contain a scriptlet tag</font><font color="#CCCCCC"> and then the</font>

1132
00:39:18,040 --> 00:39:20,980
first time<font color="#E5E5E5"> we see a sample like</font><font color="#CCCCCC"> this</font>

1133
00:39:19,300 --> 00:39:21,520
being<font color="#E5E5E5"> used in the wild or uploaded to</font>

1134
00:39:20,980 --> 00:39:23,620
virustotal

1135
00:39:21,520 --> 00:39:25,150
<font color="#E5E5E5">will see it and</font><font color="#CCCCCC"> immediately say</font><font color="#E5E5E5"> wow</font>

1136
00:39:23,620 --> 00:39:26,680
someone<font color="#CCCCCC"> came up with a cool evasion</font>

1137
00:39:25,150 --> 00:39:28,480
using component tags<font color="#CCCCCC"> I</font><font color="#E5E5E5"> didn't even know</font>

1138
00:39:26,680 --> 00:39:30,279
that<font color="#E5E5E5"> was possible</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so again this is</font>

1139
00:39:28,480 --> 00:39:31,780
<font color="#CCCCCC">one it's kind of reverse detection where</font>

1140
00:39:30,280 --> 00:39:33,609
we have<font color="#E5E5E5"> these really broad detections</font>

1141
00:39:31,780 --> 00:39:35,500
that we use for collecting new ways

1142
00:39:33,609 --> 00:39:38,770
<font color="#E5E5E5">attackers are</font><font color="#CCCCCC"> evading certain pieces</font>

1143
00:39:35,500 --> 00:39:42,160
<font color="#CCCCCC">that we assumed</font><font color="#E5E5E5"> were required but</font>

1144
00:39:38,770 --> 00:39:43,599
actually weren't<font color="#E5E5E5"> another thing for the</font>

1145
00:39:42,160 --> 00:39:45,970
script language that can<font color="#E5E5E5"> be defined as</font>

1146
00:39:43,599 --> 00:39:47,650
<font color="#E5E5E5">jscript</font><font color="#CCCCCC"> the AI that typically is defined</font>

1147
00:39:45,970 --> 00:39:49,779
by<font color="#E5E5E5"> J script since</font><font color="#CCCCCC"> again that was KC's</font>

1148
00:39:47,650 --> 00:39:51,760
example but you<font color="#CCCCCC"> can also</font><font color="#E5E5E5"> use VB script</font>

1149
00:39:49,780 --> 00:39:54,520
<font color="#CCCCCC">as well as and we don't see this often</font>

1150
00:39:51,760 --> 00:39:56,710
at all but it's really cool J script

1151
00:39:54,520 --> 00:39:58,030
<font color="#CCCCCC">encode and VB script</font><font color="#E5E5E5"> encode and if those</font>

1152
00:39:56,710 --> 00:40:00,460
<font color="#E5E5E5">are used you're gonna have this nice</font>

1153
00:39:58,030 --> 00:40:02,740
encoded<font color="#E5E5E5"> blob inside of the script tags</font>

1154
00:40:00,460 --> 00:40:04,599
but it<font color="#E5E5E5"> will always start and end where</font>

1155
00:40:02,740 --> 00:40:06,848
the portions highlighted in green<font color="#E5E5E5"> so now</font>

1156
00:40:04,599 --> 00:40:08,650
<font color="#CCCCCC">this is</font><font color="#E5E5E5"> very interesting for</font><font color="#CCCCCC"> me because</font>

1157
00:40:06,849 --> 00:40:11,710
hey I wonder<font color="#E5E5E5"> how</font><font color="#CCCCCC"> often I</font><font color="#E5E5E5"> would see those</font>

1158
00:40:08,650 --> 00:40:13,090
<font color="#E5E5E5">two</font><font color="#CCCCCC"> green eggs showing up even</font><font color="#E5E5E5"> on the</font>

1159
00:40:11,710 --> 00:40:15,640
process command line but what about

1160
00:40:13,090 --> 00:40:18,460
<font color="#CCCCCC">shoved in registry somewhere or again</font>

1161
00:40:15,640 --> 00:40:20,379
written<font color="#E5E5E5"> being passed over the wire via a</font>

1162
00:40:18,460 --> 00:40:22,869
snort signature<font color="#E5E5E5"> or even on this as a</font>

1163
00:40:20,380 --> 00:40:26,560
<font color="#E5E5E5">yarder</font><font color="#CCCCCC"> rule in addition you</font><font color="#E5E5E5"> could just</font>

1164
00:40:22,869 --> 00:40:28,510
<font color="#E5E5E5">not describe language at all and jscript</font>

1165
00:40:26,560 --> 00:40:30,460
<font color="#E5E5E5">is just automatically assumed so that's</font>

1166
00:40:28,510 --> 00:40:32,230
convenient<font color="#CCCCCC"> so we don't even have</font><font color="#E5E5E5"> to do</font>

1167
00:40:30,460 --> 00:40:36,670
<font color="#E5E5E5">that as an attacker we could also add</font>

1168
00:40:32,230 --> 00:40:38,109
<font color="#E5E5E5">whitespace before any ending tag in XML</font>

1169
00:40:36,670 --> 00:40:39,550
<font color="#E5E5E5">and that works perfectly fine</font><font color="#CCCCCC"> you can</font>

1170
00:40:38,109 --> 00:40:41,348
also add it on<font color="#E5E5E5"> either side of equal</font>

1171
00:40:39,550 --> 00:40:42,730
<font color="#E5E5E5">signs you're setting properties and then</font>

1172
00:40:41,349 --> 00:40:45,760
the middle<font color="#CCCCCC"> what's inside the script</font><font color="#E5E5E5"> tag</font>

1173
00:40:42,730 --> 00:40:47,410
you then have xml level obfuscation

1174
00:40:45,760 --> 00:40:49,080
which is what we have here<font color="#CCCCCC"> but then</font><font color="#E5E5E5"> you</font>

1175
00:40:47,410 --> 00:40:51,430
also<font color="#E5E5E5"> have language specific obfuscation</font>

1176
00:40:49,080 --> 00:40:53,529
<font color="#E5E5E5">inside of that</font><font color="#CCCCCC"> and so we definitely</font><font color="#E5E5E5"> do</font>

1177
00:40:51,430 --> 00:40:55,720
write attentions based on the content

1178
00:40:53,530 --> 00:40:58,300
itself regardless<font color="#E5E5E5"> of if it's wrapped up</font>

1179
00:40:55,720 --> 00:41:00,910
in an SCT file<font color="#CCCCCC"> or maybe an</font><font color="#E5E5E5"> HT a file or</font>

1180
00:40:58,300 --> 00:41:02,410
some other<font color="#CCCCCC"> comm scriptlet but again a</font>

1181
00:41:00,910 --> 00:41:04,779
lot<font color="#CCCCCC"> of detection is I see a written</font>

1182
00:41:02,410 --> 00:41:07,480
<font color="#E5E5E5">based on ActiveX object open</font><font color="#CCCCCC"> parentheses</font>

1183
00:41:04,780 --> 00:41:08,950
or dot<font color="#CCCCCC"> run open parentheses</font><font color="#E5E5E5"> but you can</font>

1184
00:41:07,480 --> 00:41:11,260
put whitespace between all those in

1185
00:41:08,950 --> 00:41:12,730
<font color="#CCCCCC">jscript and in a lot of</font><font color="#E5E5E5"> languages even</font>

1186
00:41:11,260 --> 00:41:13,750
including later versions of<font color="#CCCCCC"> PowerShell</font>

1187
00:41:12,730 --> 00:41:15,520
you can<font color="#E5E5E5"> introduce really weird</font>

1188
00:41:13,750 --> 00:41:18,550
whitespace and it still interprets

1189
00:41:15,520 --> 00:41:20,470
correctly<font color="#E5E5E5"> but again we don't know until</font>

1190
00:41:18,550 --> 00:41:22,000
we<font color="#E5E5E5"> try</font><font color="#CCCCCC"> and we do a lot of this</font><font color="#E5E5E5"> with some</font>

1191
00:41:20,470 --> 00:41:22,839
<font color="#E5E5E5">feathers</font><font color="#CCCCCC"> that we've written but a lot</font><font color="#E5E5E5"> of</font>

1192
00:41:22,000 --> 00:41:24,460
times<font color="#CCCCCC"> it comes</font><font color="#E5E5E5"> down through</font><font color="#CCCCCC"> this</font>

1193
00:41:22,839 --> 00:41:26,200
manually poking and kind<font color="#E5E5E5"> of walking</font>

1194
00:41:24,460 --> 00:41:28,119
<font color="#CCCCCC">through a list of I've seen this</font><font color="#E5E5E5"> work</font>

1195
00:41:26,200 --> 00:41:30,339
over<font color="#CCCCCC"> here I wonder</font><font color="#E5E5E5"> if it works in this</font>

1196
00:41:28,119 --> 00:41:32,650
case<font color="#E5E5E5"> and then trying it early just like</font>

1197
00:41:30,339 --> 00:41:34,390
we're doing<font color="#E5E5E5"> here in addition you can</font>

1198
00:41:32,650 --> 00:41:36,609
<font color="#E5E5E5">just remove new lines because XML parses</font>

1199
00:41:34,390 --> 00:41:37,999
nicely so this<font color="#E5E5E5"> is still a valid</font><font color="#CCCCCC"> se T</font>

1200
00:41:36,609 --> 00:41:43,159
file that will pop calc

1201
00:41:37,999 --> 00:41:44,689
just like the<font color="#E5E5E5"> original POC so we've done</font>

1202
00:41:43,159 --> 00:41:46,459
all<font color="#CCCCCC"> this work now</font><font color="#E5E5E5"> we've gone</font><font color="#CCCCCC"> through all</font>

1203
00:41:44,689 --> 00:41:48,408
these iterations<font color="#E5E5E5"> we know more about</font>

1204
00:41:46,459 --> 00:41:50,719
<font color="#E5E5E5">what's required what's the minimal the</font>

1205
00:41:48,409 --> 00:41:52,369
viable SCT file<font color="#E5E5E5"> now we want to put</font><font color="#CCCCCC"> that</font>

1206
00:41:50,719 --> 00:41:53,869
<font color="#E5E5E5">logic to work in as many places as we</font>

1207
00:41:52,369 --> 00:41:56,119
<font color="#E5E5E5">can</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> look for that</font><font color="#CCCCCC"> network</font>

1208
00:41:53,869 --> 00:41:58,189
detections<font color="#E5E5E5"> but we won't restrict any</font>

1209
00:41:56,119 --> 00:42:00,169
ports<font color="#CCCCCC"> we think we're only gonna</font><font color="#E5E5E5"> see it</font>

1210
00:41:58,189 --> 00:42:02,029
<font color="#E5E5E5">being downloaded for HTTP but long the</font>

1211
00:42:00,169 --> 00:42:02,929
<font color="#CCCCCC">Holts as</font><font color="#E5E5E5"> we left it open</font><font color="#CCCCCC"> there's an</font>

1212
00:42:02,029 --> 00:42:04,639
attacker pushing it over

1213
00:42:02,929 --> 00:42:06,199
SMB to another system<font color="#E5E5E5"> they already have</font>

1214
00:42:04,639 --> 00:42:08,509
internal access and are<font color="#E5E5E5"> moving laterally</font>

1215
00:42:06,199 --> 00:42:09,919
<font color="#E5E5E5">pushing</font><font color="#CCCCCC"> se T files so</font><font color="#E5E5E5"> we get in</font>

1216
00:42:08,509 --> 00:42:12,469
depending on<font color="#E5E5E5"> the tightness of</font><font color="#CCCCCC"> the</font>

1217
00:42:09,919 --> 00:42:14,209
detection<font color="#CCCCCC"> I prefer to leave it</font><font color="#E5E5E5"> open</font><font color="#CCCCCC"> to</font>

1218
00:42:12,469 --> 00:42:16,459
<font color="#CCCCCC">look as many places as I possibly</font><font color="#E5E5E5"> can</font>

1219
00:42:14,209 --> 00:42:19,129
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you can also convert</font><font color="#E5E5E5"> this logic from</font>

1220
00:42:16,459 --> 00:42:21,379
a snort signature into a yaw roll and do

1221
00:42:19,129 --> 00:42:22,999
things<font color="#E5E5E5"> like skin the temporary</font><font color="#CCCCCC"> Internet</font>

1222
00:42:21,379 --> 00:42:27,078
files or<font color="#CCCCCC"> inet cash because even though</font>

1223
00:42:22,999 --> 00:42:28,908
<font color="#CCCCCC">red serve is file us</font><font color="#E5E5E5"> the operating</font>

1224
00:42:27,079 --> 00:42:30,739
system will<font color="#CCCCCC"> freakin download your SCT</font>

1225
00:42:28,909 --> 00:42:33,019
file and store it in temporary<font color="#CCCCCC"> internet</font>

1226
00:42:30,739 --> 00:42:34,759
files for performance<font color="#E5E5E5"> for caching so a</font>

1227
00:42:33,019 --> 00:42:36,319
lot of attackers don't know that and so

1228
00:42:34,759 --> 00:42:38,419
<font color="#E5E5E5">we like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look in those places for</font>

1229
00:42:36,319 --> 00:42:39,979
<font color="#CCCCCC">these SCT files</font><font color="#E5E5E5"> and in addition if we</font>

1230
00:42:38,419 --> 00:42:42,019
<font color="#CCCCCC">already</font><font color="#E5E5E5"> have that converted in</font><font color="#CCCCCC"> Tiare</font>

1231
00:42:39,979 --> 00:42:44,718
will also search things like<font color="#E5E5E5"> virustotal</font>

1232
00:42:42,019 --> 00:42:46,218
or other sources to<font color="#E5E5E5"> look for other SCT</font>

1233
00:42:44,719 --> 00:42:47,659
files that are<font color="#E5E5E5"> being uploaded to get</font>

1234
00:42:46,219 --> 00:42:50,089
more information<font color="#E5E5E5"> on</font><font color="#CCCCCC"> how attackers are</font>

1235
00:42:47,659 --> 00:42:52,879
abating and changing their payloads<font color="#E5E5E5"> so</font>

1236
00:42:50,089 --> 00:42:55,129
once again there is<font color="#CCCCCC"> no magic regex and</font>

1237
00:42:52,879 --> 00:42:56,899
if there was it's<font color="#CCCCCC"> very inefficient to do</font>

1238
00:42:55,129 --> 00:42:59,479
so so<font color="#CCCCCC"> we break it into many different</font>

1239
00:42:56,899 --> 00:43:01,759
detection<font color="#CCCCCC"> x'</font><font color="#E5E5E5"> what's the default case how</font>

1240
00:42:59,479 --> 00:43:03,288
do we handle office<font color="#CCCCCC"> gation</font><font color="#E5E5E5"> do we put</font>

1241
00:43:01,759 --> 00:43:05,179
this on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> endpoint or the network</font><font color="#E5E5E5"> or</font>

1242
00:43:03,289 --> 00:43:06,619
both and how do we go through any<font color="#CCCCCC"> other</font>

1243
00:43:05,179 --> 00:43:09,079
approaches and after<font color="#E5E5E5"> we've come up with</font>

1244
00:43:06,619 --> 00:43:10,579
<font color="#E5E5E5">as many known things as we can let's add</font>

1245
00:43:09,079 --> 00:43:12,829
<font color="#CCCCCC">one in the</font><font color="#E5E5E5"> front that</font><font color="#CCCCCC"> looks backwards</font>

1246
00:43:10,579 --> 00:43:14,719
and says SCT file that's<font color="#E5E5E5"> none</font><font color="#CCCCCC"> of these</font>

1247
00:43:12,829 --> 00:43:15,889
<font color="#CCCCCC">other things and that is a feed</font><font color="#E5E5E5"> that we</font>

1248
00:43:14,719 --> 00:43:17,809
continually<font color="#CCCCCC"> look at and say wow</font>

1249
00:43:15,889 --> 00:43:18,949
<font color="#E5E5E5">something new is happening here</font><font color="#CCCCCC"> or does</font>

1250
00:43:17,809 --> 00:43:20,809
<font color="#CCCCCC">this cool evasion technique this</font>

1251
00:43:18,949 --> 00:43:22,189
<font color="#CCCCCC">attacker used and</font><font color="#E5E5E5"> this is really the</font>

1252
00:43:20,809 --> 00:43:23,509
<font color="#E5E5E5">kind of approach</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we take</font><font color="#CCCCCC"> every day</font>

1253
00:43:22,189 --> 00:43:24,799
<font color="#E5E5E5">when it comes to these kinds of</font>

1254
00:43:23,509 --> 00:43:27,049
detection<font color="#E5E5E5"> both for developing in</font>

1255
00:43:24,799 --> 00:43:28,809
<font color="#CCCCCC">real-time and historical</font><font color="#E5E5E5"> and again once</font>

1256
00:43:27,049 --> 00:43:31,279
we've<font color="#CCCCCC"> sunk the time into the detection</font>

1257
00:43:28,809 --> 00:43:32,779
<font color="#E5E5E5">methodology we want to translate it</font><font color="#CCCCCC"> to</font>

1258
00:43:31,279 --> 00:43:34,999
<font color="#E5E5E5">as many languages and detection</font>

1259
00:43:32,779 --> 00:43:38,660
platforms as we possibly can<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

1260
00:43:34,999 --> 00:43:40,470
can get the most benefit out<font color="#CCCCCC"> of it</font>

1261
00:43:38,660 --> 00:43:42,390
cool so I'm going to<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit</font>

1262
00:43:40,470 --> 00:43:43,259
about where we<font color="#E5E5E5"> get</font><font color="#CCCCCC"> ideas for some of</font>

1263
00:43:42,390 --> 00:43:46,200
these<font color="#E5E5E5"> things and how some of these</font>

1264
00:43:43,260 --> 00:43:48,270
things<font color="#CCCCCC"> fit together so I you paying</font>

1265
00:43:46,200 --> 00:43:49,140
attention<font color="#CCCCCC"> you've done hunting</font><font color="#E5E5E5"> before you</font>

1266
00:43:48,270 --> 00:43:50,820
might notice that<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> some</font>

1267
00:43:49,140 --> 00:43:52,109
similarities between the methodologies

1268
00:43:50,820 --> 00:43:53,520
<font color="#CCCCCC">that we're using for our detection</font>

1269
00:43:52,110 --> 00:43:55,290
development<font color="#E5E5E5"> if we're hunting you're</font>

1270
00:43:53,520 --> 00:43:57,540
forming<font color="#CCCCCC"> hypotheses you're gathering</font><font color="#E5E5E5"> data</font>

1271
00:43:55,290 --> 00:43:59,310
you're walking through<font color="#E5E5E5"> this process and</font>

1272
00:43:57,540 --> 00:44:01,860
it is<font color="#E5E5E5"> very similar process</font><font color="#CCCCCC"> but was a</font>

1273
00:43:59,310 --> 00:44:03,750
different intent so we're focusing on

1274
00:44:01,860 --> 00:44:05,790
defining<font color="#E5E5E5"> a detection for</font><font color="#CCCCCC"> evil as opposed</font>

1275
00:44:03,750 --> 00:44:06,900
to finding the evil directly<font color="#E5E5E5"> but there's</font>

1276
00:44:05,790 --> 00:44:08,820
a certain<font color="#CCCCCC"> amount</font><font color="#E5E5E5"> of synergy between</font>

1277
00:44:06,900 --> 00:44:10,170
these so we can<font color="#E5E5E5"> hunt to validate</font>

1278
00:44:08,820 --> 00:44:11,930
detection who are doing that false

1279
00:44:10,170 --> 00:44:14,100
positive testing when we're doing

1280
00:44:11,930 --> 00:44:15,540
<font color="#E5E5E5">validation of indicators that's</font>

1281
00:44:14,100 --> 00:44:18,509
basically hunting and we do find

1282
00:44:15,540 --> 00:44:19,890
activity<font color="#E5E5E5"> in environments where operating</font>

1283
00:44:18,510 --> 00:44:21,690
while we're actually<font color="#E5E5E5"> testing indicators</font>

1284
00:44:19,890 --> 00:44:24,150
even before<font color="#E5E5E5"> we push them to be live and</font>

1285
00:44:21,690 --> 00:44:26,070
so when we identify<font color="#E5E5E5"> those things we can</font>

1286
00:44:24,150 --> 00:44:28,020
can<font color="#CCCCCC"> take advantage of</font><font color="#E5E5E5"> that the other is</font>

1287
00:44:26,070 --> 00:44:31,290
that we<font color="#E5E5E5"> can develop detection</font><font color="#CCCCCC"> x' based</font>

1288
00:44:28,020 --> 00:44:32,940
on hunt results so<font color="#CCCCCC"> anytime that</font><font color="#E5E5E5"> I am</font>

1289
00:44:31,290 --> 00:44:35,250
<font color="#E5E5E5">hunting through an environment one</font><font color="#CCCCCC"> of</font>

1290
00:44:32,940 --> 00:44:37,130
the outputs for that hunt should<font color="#E5E5E5"> be some</font>

1291
00:44:35,250 --> 00:44:39,720
<font color="#E5E5E5">kind of new detection whether that's</font>

1292
00:44:37,130 --> 00:44:41,160
<font color="#CCCCCC">blacklisting something that's evil</font><font color="#E5E5E5"> that</font>

1293
00:44:39,720 --> 00:44:42,779
<font color="#E5E5E5">was identified during the hunt or right</font>

1294
00:44:41,160 --> 00:44:44,910
listing all<font color="#CCCCCC"> of the good things that</font><font color="#E5E5E5"> we</font>

1295
00:44:42,780 --> 00:44:47,870
found<font color="#E5E5E5"> during that hunt and then using</font>

1296
00:44:44,910 --> 00:44:50,040
<font color="#CCCCCC">that to help to automate that process of</font>

1297
00:44:47,870 --> 00:44:52,020
identifying that<font color="#E5E5E5"> evil so</font><font color="#CCCCCC"> anytime that</font>

1298
00:44:50,040 --> 00:44:54,180
<font color="#CCCCCC">you're searching</font><font color="#E5E5E5"> for the same things</font>

1299
00:44:52,020 --> 00:44:55,410
over<font color="#E5E5E5"> and</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> over again I should</font>

1300
00:44:54,180 --> 00:44:57,000
definitely<font color="#E5E5E5"> be</font><font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> figure</font><font color="#CCCCCC"> out is</font>

1301
00:44:55,410 --> 00:45:00,509
this something<font color="#CCCCCC"> that I can automate into</font>

1302
00:44:57,000 --> 00:45:02,100
a detection<font color="#E5E5E5"> another great connection</font>

1303
00:45:00,510 --> 00:45:04,020
between these<font color="#CCCCCC"> is that detection that</font>

1304
00:45:02,100 --> 00:45:05,880
never quite get to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> point where they</font>

1305
00:45:04,020 --> 00:45:08,009
hit that<font color="#CCCCCC"> FP target where they're</font><font color="#E5E5E5"> just a</font>

1306
00:45:05,880 --> 00:45:09,630
<font color="#E5E5E5">little bit too noisy hunting is a great</font>

1307
00:45:08,010 --> 00:45:10,890
place to<font color="#E5E5E5"> then apply those</font><font color="#CCCCCC"> techniques</font>

1308
00:45:09,630 --> 00:45:12,480
because hunting is generally going<font color="#CCCCCC"> to</font>

1309
00:45:10,890 --> 00:45:14,129
<font color="#CCCCCC">have a much higher tolerance</font><font color="#E5E5E5"> for those</font>

1310
00:45:12,480 --> 00:45:16,800
false<font color="#CCCCCC"> positives it is more about data</font>

1311
00:45:14,130 --> 00:45:18,480
collection<font color="#E5E5E5"> than specific item</font>

1312
00:45:16,800 --> 00:45:19,790
identification so<font color="#CCCCCC"> that is one place</font>

1313
00:45:18,480 --> 00:45:21,840
<font color="#E5E5E5">where</font><font color="#CCCCCC"> you can still leverage those</font>

1314
00:45:19,790 --> 00:45:25,529
protections even if they never went<font color="#E5E5E5"> into</font>

1315
00:45:21,840 --> 00:45:27,480
like a live<font color="#CCCCCC"> production situation</font><font color="#E5E5E5"> the</font>

1316
00:45:25,530 --> 00:45:28,920
<font color="#E5E5E5">other is that we tend</font><font color="#CCCCCC"> to focus</font><font color="#E5E5E5"> on the</font>

1317
00:45:27,480 --> 00:45:30,300
attack<font color="#E5E5E5"> lifecycle and you can use the</font>

1318
00:45:28,920 --> 00:45:32,190
cyber kill<font color="#CCCCCC"> chain you can use</font><font color="#E5E5E5"> whatever</font>

1319
00:45:30,300 --> 00:45:33,150
model you<font color="#E5E5E5"> want but the idea here</font><font color="#CCCCCC"> is that</font>

1320
00:45:32,190 --> 00:45:35,940
we're going<font color="#CCCCCC"> to push our detections</font>

1321
00:45:33,150 --> 00:45:37,650
beyond that initial compromise<font color="#E5E5E5"> into the</font>

1322
00:45:35,940 --> 00:45:39,750
full attack<font color="#CCCCCC"> lifecycle</font><font color="#E5E5E5"> and some of these</font>

1323
00:45:37,650 --> 00:45:41,400
kind of actors choke points where there

1324
00:45:39,750 --> 00:45:42,930
<font color="#CCCCCC">are</font><font color="#E5E5E5"> only so many ways to move laterally</font>

1325
00:45:41,400 --> 00:45:44,160
in an environment and when someone<font color="#CCCCCC"> comes</font>

1326
00:45:42,930 --> 00:45:45,940
out with a new<font color="#CCCCCC"> one that's</font><font color="#E5E5E5"> a big deal</font>

1327
00:45:44,160 --> 00:45:48,220
<font color="#E5E5E5">right because it's a finite set</font>

1328
00:45:45,940 --> 00:45:49,630
same with escalating privileges with

1329
00:45:48,220 --> 00:45:52,509
<font color="#E5E5E5">maintaining presents like that</font>

1330
00:45:49,630 --> 00:45:54,039
<font color="#E5E5E5">persistence aspect so by numerating</font>

1331
00:45:52,510 --> 00:45:56,170
these things and finding<font color="#E5E5E5"> ways to</font>

1332
00:45:54,039 --> 00:45:58,059
effectively<font color="#CCCCCC"> identify malicious use of</font>

1333
00:45:56,170 --> 00:45:59,559
them we can make<font color="#E5E5E5"> it a lot harder</font><font color="#CCCCCC"> for</font>

1334
00:45:58,059 --> 00:46:01,839
attackers to<font color="#E5E5E5"> make their way through the</font>

1335
00:45:59,559 --> 00:46:03,910
full<font color="#CCCCCC"> lifecycle</font><font color="#E5E5E5"> without tripping over one</font>

1336
00:46:01,839 --> 00:46:05,890
of our<font color="#E5E5E5"> detection somewhere so if you</font>

1337
00:46:03,910 --> 00:46:07,538
have something<font color="#CCCCCC"> like eternal blue that</font>

1338
00:46:05,890 --> 00:46:08,920
<font color="#E5E5E5">comes out maybe we don't have detection</font>

1339
00:46:07,539 --> 00:46:10,539
for that at the<font color="#CCCCCC"> outset</font><font color="#E5E5E5"> but maybe we have</font>

1340
00:46:08,920 --> 00:46:12,280
<font color="#CCCCCC">protection</font><font color="#E5E5E5"> for some of the most</font>

1341
00:46:10,539 --> 00:46:13,480
compromised activities that actors<font color="#E5E5E5"> are</font>

1342
00:46:12,280 --> 00:46:16,089
going<font color="#E5E5E5"> to do using those kinds of</font>

1343
00:46:13,480 --> 00:46:17,740
exploits<font color="#E5E5E5"> we're also going to look at</font>

1344
00:46:16,089 --> 00:46:21,430
<font color="#E5E5E5">what's</font><font color="#CCCCCC"> coming out of our active and</font>

1345
00:46:17,740 --> 00:46:23,140
historic<font color="#CCCCCC"> attack</font><font color="#E5E5E5"> activity from our</font>

1346
00:46:21,430 --> 00:46:25,328
<font color="#E5E5E5">instant response investigations and this</font>

1347
00:46:23,140 --> 00:46:26,859
is really<font color="#E5E5E5"> valuing something</font><font color="#CCCCCC"> that we get</font>

1348
00:46:25,329 --> 00:46:28,780
a certain<font color="#E5E5E5"> amount of unique benefit here</font>

1349
00:46:26,859 --> 00:46:29,890
from just where we work<font color="#E5E5E5"> but there's a</font>

1350
00:46:28,780 --> 00:46:31,150
lot of<font color="#CCCCCC"> this</font><font color="#E5E5E5"> information that</font><font color="#CCCCCC"> is being</font>

1351
00:46:29,890 --> 00:46:33,368
published<font color="#E5E5E5"> out there there's a lot of</font>

1352
00:46:31,150 --> 00:46:36,039
blogs coming out on<font color="#E5E5E5"> both attacker TTP</font>

1353
00:46:33,369 --> 00:46:37,690
use of<font color="#E5E5E5"> those specific tools all this</font>

1354
00:46:36,039 --> 00:46:39,609
data is getting<font color="#E5E5E5"> published every day</font><font color="#CCCCCC"> so</font>

1355
00:46:37,690 --> 00:46:41,950
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> a lot out</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> to keep an eye</font>

1356
00:46:39,609 --> 00:46:43,270
on analyzing malware samples<font color="#E5E5E5"> again</font>

1357
00:46:41,950 --> 00:46:44,379
there's a lot<font color="#E5E5E5"> of malware out there that</font>

1358
00:46:43,270 --> 00:46:45,430
you can get<font color="#E5E5E5"> your hands on if you really</font>

1359
00:46:44,380 --> 00:46:46,750
want to<font color="#E5E5E5"> look for whether it's supposed</font>

1360
00:46:45,430 --> 00:46:49,538
to<font color="#E5E5E5"> help</font><font color="#CCCCCC"> lock github</font><font color="#E5E5E5"> or some of these</font>

1361
00:46:46,750 --> 00:46:51,400
other<font color="#E5E5E5"> repos and resources</font><font color="#CCCCCC"> Intel so this</font>

1362
00:46:49,539 --> 00:46:53,440
needs to<font color="#E5E5E5"> be that the kind of actionable</font>

1363
00:46:51,400 --> 00:46:56,650
Intel<font color="#E5E5E5"> that you can really utilize as</font>

1364
00:46:53,440 --> 00:46:59,099
opposed<font color="#CCCCCC"> to you know</font><font color="#E5E5E5"> high level of the</font>

1365
00:46:56,650 --> 00:47:01,150
threat feeds for this specific purpose

1366
00:46:59,099 --> 00:47:03,339
<font color="#E5E5E5">open source</font><font color="#CCCCCC"> research whether that's</font>

1367
00:47:01,150 --> 00:47:05,020
Twitter<font color="#E5E5E5"> github and a blog</font><font color="#CCCCCC"> posts I mean</font>

1368
00:47:03,339 --> 00:47:07,359
<font color="#E5E5E5">they it really is a ton of information</font>

1369
00:47:05,020 --> 00:47:09,520
<font color="#E5E5E5">out there</font><font color="#CCCCCC"> we get a lot of things</font><font color="#E5E5E5"> off of</font>

1370
00:47:07,359 --> 00:47:10,990
<font color="#E5E5E5">Twitter because</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> this point if a red</font>

1371
00:47:09,520 --> 00:47:12,640
team is<font color="#CCCCCC"> doing something attackers are</font>

1372
00:47:10,990 --> 00:47:14,410
going to do the same<font color="#E5E5E5"> thing all of that</font>

1373
00:47:12,640 --> 00:47:16,720
stuff is getting<font color="#CCCCCC"> recycled</font><font color="#E5E5E5"> and then a lot</font>

1374
00:47:14,410 --> 00:47:18,578
of<font color="#E5E5E5"> I wonder how often just I wonder</font><font color="#CCCCCC"> how</font>

1375
00:47:16,720 --> 00:47:20,500
<font color="#CCCCCC">often this process loads this DL I</font>

1376
00:47:18,579 --> 00:47:22,480
wonder how often<font color="#E5E5E5"> these processes even</font>

1377
00:47:20,500 --> 00:47:24,609
<font color="#E5E5E5">get executed or make network connections</font>

1378
00:47:22,480 --> 00:47:26,589
or whatever and<font color="#CCCCCC"> just</font><font color="#E5E5E5"> going out</font><font color="#CCCCCC"> and</font>

1379
00:47:24,609 --> 00:47:28,240
setting<font color="#E5E5E5"> up the infrastructure needed to</font>

1380
00:47:26,589 --> 00:47:30,578
<font color="#E5E5E5">be able to answer those questions</font><font color="#CCCCCC"> for a</font>

1381
00:47:28,240 --> 00:47:32,558
given<font color="#CCCCCC"> environment is</font><font color="#E5E5E5"> really valuable</font><font color="#CCCCCC"> and</font>

1382
00:47:30,579 --> 00:47:33,730
especially<font color="#E5E5E5"> within a single</font><font color="#CCCCCC"> environment</font>

1383
00:47:32,559 --> 00:47:35,049
one of<font color="#E5E5E5"> the challenges we</font><font color="#CCCCCC"> have is that we</font>

1384
00:47:33,730 --> 00:47:36,190
<font color="#CCCCCC">operate across</font><font color="#E5E5E5"> a larger number of</font>

1385
00:47:35,049 --> 00:47:37,569
environments<font color="#E5E5E5"> so a lot</font><font color="#CCCCCC"> of those</font>

1386
00:47:36,190 --> 00:47:39,220
assumptions we make about<font color="#E5E5E5"> how things</font>

1387
00:47:37,569 --> 00:47:41,799
should<font color="#CCCCCC"> work or questions</font><font color="#E5E5E5"> that we have</font>

1388
00:47:39,220 --> 00:47:43,359
like this it's<font color="#E5E5E5"> amazing the answers we</font>

1389
00:47:41,799 --> 00:47:44,859
get back where some environments<font color="#CCCCCC"> will</font>

1390
00:47:43,359 --> 00:47:47,109
just have the craziest things happening

1391
00:47:44,859 --> 00:47:49,299
due<font color="#CCCCCC"> to you know odd tools or strange</font>

1392
00:47:47,109 --> 00:47:51,130
configurations or<font color="#E5E5E5"> legacy support but</font>

1393
00:47:49,299 --> 00:47:52,660
<font color="#E5E5E5">within a given</font><font color="#CCCCCC"> environment</font><font color="#E5E5E5"> it can be</font>

1394
00:47:51,130 --> 00:47:54,190
much easier to<font color="#E5E5E5"> kind of establish</font><font color="#CCCCCC"> those</font>

1395
00:47:52,660 --> 00:47:55,960
baselines<font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to make effective</font>

1396
00:47:54,190 --> 00:47:58,670
detections for those kinds of more

1397
00:47:55,960 --> 00:48:01,570
<font color="#E5E5E5">anomaly based approaches</font>

1398
00:47:58,670 --> 00:48:03,260
and a couple of takeaways<font color="#E5E5E5"> to wrap up so</font>

1399
00:48:01,570 --> 00:48:04,670
<font color="#E5E5E5">really important to note you're</font>

1400
00:48:03,260 --> 00:48:06,380
detecting<font color="#CCCCCC"> today and how you're detecting</font>

1401
00:48:04,670 --> 00:48:08,210
<font color="#CCCCCC">it</font><font color="#E5E5E5"> you know what are the data sets where</font>

1402
00:48:06,380 --> 00:48:09,290
<font color="#CCCCCC">are the tool sets what's the time</font><font color="#E5E5E5"> frame</font>

1403
00:48:08,210 --> 00:48:10,970
how long is it going to<font color="#E5E5E5"> take between</font>

1404
00:48:09,290 --> 00:48:12,380
<font color="#E5E5E5">something actually happening in you</font>

1405
00:48:10,970 --> 00:48:12,919
being<font color="#E5E5E5"> a web and being able to take</font>

1406
00:48:12,380 --> 00:48:15,890
action

1407
00:48:12,920 --> 00:48:17,860
knowing the assumptions about<font color="#E5E5E5"> attacker</font>

1408
00:48:15,890 --> 00:48:19,910
techniques<font color="#E5E5E5"> and your own visibility so</font>

1409
00:48:17,860 --> 00:48:22,340
<font color="#E5E5E5">visibility is going to define</font><font color="#CCCCCC"> what you</font>

1410
00:48:19,910 --> 00:48:23,899
either have an opportunity to detect and

1411
00:48:22,340 --> 00:48:25,100
your<font color="#E5E5E5"> assumptions about what attackers</font>

1412
00:48:23,900 --> 00:48:27,530
are going to do and how they're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

1413
00:48:25,100 --> 00:48:29,240
<font color="#CCCCCC">operate can definitely</font><font color="#E5E5E5"> impact the</font>

1414
00:48:27,530 --> 00:48:31,640
effectiveness<font color="#E5E5E5"> of any of these kinds of</font>

1415
00:48:29,240 --> 00:48:33,399
detections<font color="#CCCCCC"> and capture the results of</font>

1416
00:48:31,640 --> 00:48:36,049
<font color="#CCCCCC">Hudson's new detections as I mentioned</font>

1417
00:48:33,400 --> 00:48:38,480
<font color="#E5E5E5">know your tools so validate</font><font color="#CCCCCC"> data sources</font>

1418
00:48:36,050 --> 00:48:40,190
with more than one tool<font color="#E5E5E5"> and understand</font>

1419
00:48:38,480 --> 00:48:41,780
<font color="#CCCCCC">the limitations of</font><font color="#E5E5E5"> those tool sets and</font>

1420
00:48:40,190 --> 00:48:44,030
the artifacts<font color="#CCCCCC"> and whether you</font><font color="#E5E5E5"> need to</font>

1421
00:48:41,780 --> 00:48:45,380
compensate elsewhere so sometimes you're

1422
00:48:44,030 --> 00:48:47,240
just<font color="#E5E5E5"> not</font><font color="#CCCCCC"> going to have the data that</font>

1423
00:48:45,380 --> 00:48:49,550
you're looking<font color="#CCCCCC"> for from</font><font color="#E5E5E5"> a given tool and</font>

1424
00:48:47,240 --> 00:48:51,439
it's a matter of do you need to look at

1425
00:48:49,550 --> 00:48:52,790
other tools is an open<font color="#E5E5E5"> source solution</font>

1426
00:48:51,440 --> 00:48:54,290
<font color="#CCCCCC">to that problem do you</font><font color="#E5E5E5"> need to buy</font>

1427
00:48:52,790 --> 00:48:56,690
<font color="#E5E5E5">something do</font><font color="#CCCCCC"> you need to build something</font>

1428
00:48:54,290 --> 00:48:59,000
<font color="#E5E5E5">in</font><font color="#CCCCCC"> order to fill those gaps where they</font>

1429
00:48:56,690 --> 00:49:00,680
where they're<font color="#E5E5E5"> really critical and then</font>

1430
00:48:59,000 --> 00:49:01,700
automate the repetitive tasks so one<font color="#CCCCCC"> of</font>

1431
00:49:00,680 --> 00:49:03,500
the things that we've gotten a lot<font color="#E5E5E5"> of</font>

1432
00:49:01,700 --> 00:49:05,240
value out<font color="#CCCCCC"> of is when you have these</font>

1433
00:49:03,500 --> 00:49:07,520
<font color="#CCCCCC">questions like</font><font color="#E5E5E5"> I wonder how often being</font>

1434
00:49:05,240 --> 00:49:09,229
able<font color="#E5E5E5"> to ask those really efficiently and</font>

1435
00:49:07,520 --> 00:49:12,080
with a<font color="#E5E5E5"> minimal amount of manual</font><font color="#CCCCCC"> effort</font>

1436
00:49:09,230 --> 00:49:13,610
so we<font color="#CCCCCC"> can kind of focus on developing</font>

1437
00:49:12,080 --> 00:49:14,990
the<font color="#E5E5E5"> detection</font><font color="#CCCCCC"> Xand spend our time</font>

1438
00:49:13,610 --> 00:49:16,700
<font color="#E5E5E5">working on those methodologies as</font>

1439
00:49:14,990 --> 00:49:17,959
opposed<font color="#E5E5E5"> to doing the legwork of actually</font>

1440
00:49:16,700 --> 00:49:19,939
going<font color="#CCCCCC"> out</font><font color="#E5E5E5"> and collecting data and</font>

1441
00:49:17,960 --> 00:49:22,190
working<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this so automate as</font><font color="#CCCCCC"> much of</font>

1442
00:49:19,940 --> 00:49:23,890
that<font color="#CCCCCC"> as possible</font><font color="#E5E5E5"> and really focus on the</font>

1443
00:49:22,190 --> 00:49:26,630
the<font color="#CCCCCC"> high-value returns</font>

1444
00:49:23,890 --> 00:49:29,170
and that's it so you know we're happy to

1445
00:49:26,630 --> 00:49:29,170
answer any questions

1446
00:49:34,630 --> 00:49:40,660
Thank You Matthew and<font color="#CCCCCC"> Danielle do we</font>

1447
00:49:37,970 --> 00:49:44,350
have questions<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> audience</font>

1448
00:49:40,660 --> 00:49:44,350
<font color="#E5E5E5">Victor one second</font>

1449
00:49:50,570 --> 00:49:59,310
thanks for the talk<font color="#CCCCCC"> so how</font><font color="#E5E5E5"> often you say</font>

1450
00:49:55,349 --> 00:50:01,560
guys is that you find a new<font color="#E5E5E5"> application</font>

1451
00:49:59,310 --> 00:50:04,410
technique or<font color="#E5E5E5"> something new that</font><font color="#CCCCCC"> you find</font>

1452
00:50:01,560 --> 00:50:05,970
they can<font color="#CCCCCC"> bypass your techniques</font><font color="#E5E5E5"> and say</font>

1453
00:50:04,410 --> 00:50:08,430
oh it's<font color="#E5E5E5"> something new that</font><font color="#CCCCCC"> we found</font>

1454
00:50:05,970 --> 00:50:11,009
we're going to apply<font color="#CCCCCC"> it</font><font color="#E5E5E5"> on our rules and</font>

1455
00:50:08,430 --> 00:50:13,770
systems<font color="#E5E5E5"> and then you see that someone</font>

1456
00:50:11,010 --> 00:50:20,220
else out there<font color="#E5E5E5"> is already using it and</font>

1457
00:50:13,770 --> 00:50:21,660
you're like oh<font color="#E5E5E5"> I think I definitely have</font>

1458
00:50:20,220 --> 00:50:24,149
my favorite groups that impressed<font color="#E5E5E5"> me</font>

1459
00:50:21,660 --> 00:50:28,589
with<font color="#CCCCCC"> their obfuscation for me personally</font>

1460
00:50:24,150 --> 00:50:30,180
<font color="#CCCCCC">Finn 7 an apt 30 to compete for first</font>

1461
00:50:28,589 --> 00:50:32,160
place<font color="#CCCCCC"> in my heart</font><font color="#E5E5E5"> of the coolest</font>

1462
00:50:30,180 --> 00:50:36,149
obfuscation it's very specific<font color="#CCCCCC"> it's very</font>

1463
00:50:32,160 --> 00:50:39,299
<font color="#CCCCCC">tart adoption</font><font color="#E5E5E5"> and and yeah</font><font color="#CCCCCC"> again since</font>

1464
00:50:36,150 --> 00:50:41,430
we have as best<font color="#E5E5E5"> we possibly can</font>

1465
00:50:39,300 --> 00:50:43,080
many layers<font color="#CCCCCC"> of detection we'll see if</font><font color="#E5E5E5"> n7</font>

1466
00:50:41,430 --> 00:50:45,210
<font color="#E5E5E5">throw a crazy trick out it's like whoa</font>

1467
00:50:43,080 --> 00:50:46,348
<font color="#E5E5E5">that bypassed a lot of our detection but</font>

1468
00:50:45,210 --> 00:50:48,930
we still caught it based on<font color="#CCCCCC"> this new</font>

1469
00:50:46,349 --> 00:50:50,160
anchor but it bypassed<font color="#E5E5E5"> enough to Texas</font>

1470
00:50:48,930 --> 00:50:51,830
for<font color="#E5E5E5"> us to say we need</font><font color="#CCCCCC"> to go and revisit</font>

1471
00:50:50,160 --> 00:50:54,598
<font color="#CCCCCC">it</font><font color="#E5E5E5"> and see how</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> we make this better</font>

1472
00:50:51,830 --> 00:50:55,170
<font color="#CCCCCC">this</font><font color="#E5E5E5"> stuff that we see Finn</font><font color="#CCCCCC"> 7 doing I</font>

1473
00:50:54,599 --> 00:50:57,420
<font color="#E5E5E5">don't know that we necessarily</font>

1474
00:50:55,170 --> 00:51:00,540
<font color="#E5E5E5">immediately seen other groups doing it</font>

1475
00:50:57,420 --> 00:51:03,000
<font color="#E5E5E5">but it definitely will it will it'll</font>

1476
00:51:00,540 --> 00:51:06,060
trigger ideas for our<font color="#E5E5E5"> own research like</font>

1477
00:51:03,000 --> 00:51:08,940
for example Finn<font color="#E5E5E5"> 7 last June</font><font color="#CCCCCC"> that are</font>

1478
00:51:06,060 --> 00:51:10,830
really in my opinion<font color="#CCCCCC"> sexy obfuscation</font>

1479
00:51:08,940 --> 00:51:13,589
technique with<font color="#E5E5E5"> command XE where was a</font>

1480
00:51:10,830 --> 00:51:16,440
character substitution technique using a

1481
00:51:13,589 --> 00:51:18,390
<font color="#E5E5E5">variable name</font><font color="#CCCCCC"> :</font><font color="#E5E5E5"> string equals another</font>

1482
00:51:16,440 --> 00:51:19,410
string and they were<font color="#E5E5E5"> doing that it was</font>

1483
00:51:18,390 --> 00:51:21,240
it<font color="#E5E5E5"> was the coolest thing I</font><font color="#CCCCCC"> don't even</font>

1484
00:51:19,410 --> 00:51:22,830
<font color="#E5E5E5">know command could do that and it got me</font>

1485
00:51:21,240 --> 00:51:24,479
<font color="#CCCCCC">so excited</font><font color="#E5E5E5"> that I spent the next nine</font>

1486
00:51:22,830 --> 00:51:26,460
months researching command<font color="#E5E5E5"> that X the</font>

1487
00:51:24,480 --> 00:51:28,020
<font color="#E5E5E5">office</font><font color="#CCCCCC"> Gatien and that's what all the DA</font>

1488
00:51:26,460 --> 00:51:29,700
sophistication research is from so from

1489
00:51:28,020 --> 00:51:31,320
that<font color="#E5E5E5"> research as I started to then look</font>

1490
00:51:29,700 --> 00:51:33,540
for the techniques<font color="#E5E5E5"> that I was uncovering</font>

1491
00:51:31,320 --> 00:51:35,609
<font color="#E5E5E5">we did see some</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those being used like</font>

1492
00:51:33,540 --> 00:51:39,180
<font color="#CCCCCC">in</font><font color="#E5E5E5"> like different</font><font color="#CCCCCC"> like obfuscated batch</font>

1493
00:51:35,609 --> 00:51:40,740
file<font color="#CCCCCC"> pelo generators</font><font color="#E5E5E5"> but most of most of</font>

1494
00:51:39,180 --> 00:51:43,440
that research<font color="#CCCCCC"> we really didn't see being</font>

1495
00:51:40,740 --> 00:51:46,348
<font color="#CCCCCC">used until weirdly</font><font color="#E5E5E5"> a tool</font><font color="#CCCCCC"> was released</font>

1496
00:51:43,440 --> 00:51:48,720
to do that stuff but but yeah I<font color="#E5E5E5"> think</font>

1497
00:51:46,349 --> 00:51:50,130
there<font color="#E5E5E5"> definitely are</font><font color="#CCCCCC"> some cases</font><font color="#E5E5E5"> maybe</font>

1498
00:51:48,720 --> 00:51:51,720
for less interesting office<font color="#CCCCCC"> keishon</font>

1499
00:51:50,130 --> 00:51:53,220
where we do kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> see one person use</font>

1500
00:51:51,720 --> 00:51:55,080
it and<font color="#E5E5E5"> Ross oh maybe this is coming</font><font color="#CCCCCC"> from</font>

1501
00:51:53,220 --> 00:51:56,310
like<font color="#E5E5E5"> a publicly available builder or</font>

1502
00:51:55,080 --> 00:51:58,109
something like<font color="#E5E5E5"> that so a lot</font><font color="#CCCCCC"> of times</font>

1503
00:51:56,310 --> 00:51:59,970
<font color="#CCCCCC">we'll also you know search github</font>

1504
00:51:58,109 --> 00:52:02,270
<font color="#CCCCCC">paceman in other places to try to find</font>

1505
00:51:59,970 --> 00:52:04,310
this technique or this

1506
00:52:02,270 --> 00:52:05,720
syntax<font color="#E5E5E5"> and maybe actually find the</font>

1507
00:52:04,310 --> 00:52:07,310
<font color="#CCCCCC">Builder that</font><font color="#E5E5E5"> it came from in Roz hey</font>

1508
00:52:05,720 --> 00:52:09,140
this may be this<font color="#CCCCCC"> is more common than we</font>

1509
00:52:07,310 --> 00:52:10,549
<font color="#CCCCCC">realized</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> just caught it</font><font color="#E5E5E5"> this one</font>

1510
00:52:09,140 --> 00:52:12,080
time<font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go back and kind</font><font color="#CCCCCC"> of</font>

1511
00:52:10,550 --> 00:52:15,530
retro hunt through our data and see<font color="#CCCCCC"> what</font>

1512
00:52:12,080 --> 00:52:17,840
else might<font color="#CCCCCC"> be there and we also we have</font>

1513
00:52:15,530 --> 00:52:19,220
kind of a standing offer with the

1514
00:52:17,840 --> 00:52:20,480
community that if there is a new

1515
00:52:19,220 --> 00:52:21,980
technique<font color="#E5E5E5"> or something that they've</font>

1516
00:52:20,480 --> 00:52:23,420
<font color="#E5E5E5">developed that they're interested like</font>

1517
00:52:21,980 --> 00:52:24,980
is this out there this<font color="#E5E5E5"> is something</font>

1518
00:52:23,420 --> 00:52:26,990
<font color="#CCCCCC">you've seen before</font>

1519
00:52:24,980 --> 00:52:29,270
if you<font color="#E5E5E5"> contact any of us I</font><font color="#CCCCCC"> mean we'll</font>

1520
00:52:26,990 --> 00:52:31,339
run that<font color="#E5E5E5"> down and basically we'll try to</font>

1521
00:52:29,270 --> 00:52:32,930
actually<font color="#E5E5E5"> look both across the</font>

1522
00:52:31,340 --> 00:52:34,040
environments that<font color="#E5E5E5"> we have access</font><font color="#CCCCCC"> to as</font>

1523
00:52:32,930 --> 00:52:35,720
well<font color="#CCCCCC"> as through all of our intelligence</font>

1524
00:52:34,040 --> 00:52:38,029
<font color="#E5E5E5">to try to figure out is this something</font>

1525
00:52:35,720 --> 00:52:39,470
that has in fact<font color="#E5E5E5"> been used by</font><font color="#CCCCCC"> attackers</font>

1526
00:52:38,030 --> 00:52:40,790
<font color="#CCCCCC">in the past and there have been</font>

1527
00:52:39,470 --> 00:52:42,140
<font color="#E5E5E5">instances where</font><font color="#CCCCCC"> that's been the case</font>

1528
00:52:40,790 --> 00:52:43,970
<font color="#E5E5E5">where somebody's come up with something</font>

1529
00:52:42,140 --> 00:52:45,710
they<font color="#E5E5E5"> felt was</font><font color="#CCCCCC"> very novel</font><font color="#E5E5E5"> and was very</font>

1530
00:52:43,970 --> 00:52:49,040
novel<font color="#E5E5E5"> but it turns out somebody else had</font>

1531
00:52:45,710 --> 00:52:50,930
<font color="#E5E5E5">thought of it as well</font><font color="#CCCCCC"> yeah and in some</font>

1532
00:52:49,040 --> 00:52:52,190
cases that when we do see it hey<font color="#CCCCCC"> this</font>

1533
00:52:50,930 --> 00:52:54,770
<font color="#E5E5E5">actually is being used by some very</font>

1534
00:52:52,190 --> 00:52:56,060
<font color="#E5E5E5">interesting targeting groups then maybe</font>

1535
00:52:54,770 --> 00:52:58,160
that person will<font color="#CCCCCC"> say oh okay well maybe</font>

1536
00:52:56,060 --> 00:52:59,509
I'll delay the<font color="#CCCCCC"> release of this</font><font color="#E5E5E5"> and try</font>

1537
00:52:58,160 --> 00:53:03,470
<font color="#E5E5E5">to figure out a better</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> to release</font>

1538
00:52:59,510 --> 00:53:05,210
this technique realizing that it's that

1539
00:53:03,470 --> 00:53:06,740
it might be used<font color="#E5E5E5"> pretty darn quickly and</font>

1540
00:53:05,210 --> 00:53:08,630
<font color="#CCCCCC">there's some</font><font color="#E5E5E5"> other implications there</font>

1541
00:53:06,740 --> 00:53:10,069
but yeah it's<font color="#E5E5E5"> been really cool to see</font>

1542
00:53:08,630 --> 00:53:11,359
people<font color="#E5E5E5"> reach out and share those</font>

1543
00:53:10,070 --> 00:53:12,710
techniques<font color="#E5E5E5"> and we can kind of give</font><font color="#CCCCCC"> back</font>

1544
00:53:11,359 --> 00:53:17,060
in<font color="#E5E5E5"> exchange some of the</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> we</font>

1545
00:53:12,710 --> 00:53:20,560
have access<font color="#CCCCCC"> to excellent</font><font color="#E5E5E5"> question I'm</font>

1546
00:53:17,060 --> 00:53:20,560
always<font color="#E5E5E5"> open for obfuscation questions</font>

1547
00:53:20,800 --> 00:53:24,010
one more

1548
00:53:24,330 --> 00:53:30,590
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is a very inquisitive side of the</font>

1549
00:53:26,070 --> 00:53:33,540
room right here excellent<font color="#CCCCCC"> okay</font>

1550
00:53:30,590 --> 00:53:39,210
we also bump into<font color="#CCCCCC"> stuff which is</font><font color="#E5E5E5"> not</font>

1551
00:53:33,540 --> 00:53:40,500
<font color="#CCCCCC">appreciated</font><font color="#E5E5E5"> it's still malicious yeah</font>

1552
00:53:39,210 --> 00:53:43,110
<font color="#E5E5E5">absolutely</font>

1553
00:53:40,500 --> 00:53:45,060
I mean obfuscation<font color="#E5E5E5"> it's a fraction of</font>

1554
00:53:43,110 --> 00:53:48,150
the total stuff that we see<font color="#E5E5E5"> yeah it</font>

1555
00:53:45,060 --> 00:53:49,920
tends to be specific applications or

1556
00:53:48,150 --> 00:53:57,780
specific<font color="#CCCCCC"> groups that tend to favor</font><font color="#E5E5E5"> it</font>

1557
00:53:49,920 --> 00:53:59,520
<font color="#E5E5E5">more than others but</font><font color="#CCCCCC"> I mean especially</font>

1558
00:53:57,780 --> 00:54:00,990
<font color="#E5E5E5">since</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> invoke confiscation came out</font>

1559
00:53:59,520 --> 00:54:02,400
we've we've seen that commoditized a

1560
00:54:00,990 --> 00:54:05,459
little bit more I'd say<font color="#CCCCCC"> but it's it's</font>

1561
00:54:02,400 --> 00:54:07,980
still<font color="#E5E5E5"> a mix parent yeah yeah and again</font>

1562
00:54:05,460 --> 00:54:09,540
<font color="#E5E5E5">for us we we also there's the</font><font color="#CCCCCC"> NA office</font>

1563
00:54:07,980 --> 00:54:11,880
gated stuff there's the<font color="#E5E5E5"> super office</font>

1564
00:54:09,540 --> 00:54:13,680
gated like push button payload stuff but

1565
00:54:11,880 --> 00:54:15,630
then we also tend<font color="#E5E5E5"> to focus a lot on the</font>

1566
00:54:13,680 --> 00:54:17,879
middle<font color="#E5E5E5"> of very tasteful obfuscation</font>

1567
00:54:15,630 --> 00:54:20,370
<font color="#E5E5E5">which again like fin</font><font color="#CCCCCC"> 7 and apt 30</font><font color="#E5E5E5"> were</font>

1568
00:54:17,880 --> 00:54:21,900
really good at<font color="#E5E5E5"> because that that tells</font>

1569
00:54:20,370 --> 00:54:23,009
us<font color="#CCCCCC"> it</font><font color="#E5E5E5"> wasn't just a script</font><font color="#CCCCCC"> kitty</font><font color="#E5E5E5"> hitting</font>

1570
00:54:21,900 --> 00:54:26,160
a<font color="#E5E5E5"> button this was someone who very</font>

1571
00:54:23,010 --> 00:54:28,350
<font color="#E5E5E5">specifically looked at a command and</font>

1572
00:54:26,160 --> 00:54:29,759
then said I see that all<font color="#E5E5E5"> the detection</font>

1573
00:54:28,350 --> 00:54:31,589
<font color="#CCCCCC">Zout they're detecting based off of</font>

1574
00:54:29,760 --> 00:54:33,600
<font color="#E5E5E5">these</font><font color="#CCCCCC"> things in this order I'm gonna</font>

1575
00:54:31,590 --> 00:54:34,830
change that there's I forget who<font color="#CCCCCC"> someone</font>

1576
00:54:33,600 --> 00:54:39,029
tweeted<font color="#CCCCCC"> just two or three days ago</font><font color="#E5E5E5"> about</font>

1577
00:54:34,830 --> 00:54:40,980
<font color="#E5E5E5">the cert util downloader syntax</font><font color="#CCCCCC"> that</font>

1578
00:54:39,030 --> 00:54:42,390
strange<font color="#E5E5E5"> enough also Casey Smith found</font>

1579
00:54:40,980 --> 00:54:43,860
where you can basically<font color="#E5E5E5"> have cert you</font>

1580
00:54:42,390 --> 00:54:47,160
<font color="#CCCCCC">tail download</font><font color="#E5E5E5"> payloads using cert you</font>

1581
00:54:43,860 --> 00:54:48,660
<font color="#E5E5E5">tail - URL cache - split and they said</font>

1582
00:54:47,160 --> 00:54:51,899
hey defender detects on this but if I

1583
00:54:48,660 --> 00:54:53,460
literally just swap those it<font color="#E5E5E5"> doesn't and</font>

1584
00:54:51,900 --> 00:54:55,320
so again like looking for very<font color="#CCCCCC"> specific</font>

1585
00:54:53,460 --> 00:54:57,450
<font color="#E5E5E5">things</font><font color="#CCCCCC"> like that</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> quite</font><font color="#E5E5E5"> interesting</font>

1586
00:54:55,320 --> 00:54:59,010
<font color="#CCCCCC">for us as well yeah that's always gonna</font>

1587
00:54:57,450 --> 00:55:00,720
<font color="#E5E5E5">be the best</font><font color="#CCCCCC"> stop physician</font><font color="#E5E5E5"> because if</font>

1588
00:54:59,010 --> 00:55:02,130
you if you<font color="#E5E5E5"> hammer it it becomes</font><font color="#CCCCCC"> very</font>

1589
00:55:00,720 --> 00:55:04,169
obvious<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> something that</font>

1590
00:55:02,130 --> 00:55:06,000
<font color="#E5E5E5">somebody didn't</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> to look at</font><font color="#E5E5E5"> too</font>

1591
00:55:04,170 --> 00:55:08,040
closely<font color="#CCCCCC"> but if it's</font><font color="#E5E5E5"> something that's a</font>

1592
00:55:06,000 --> 00:55:09,720
lot<font color="#E5E5E5"> more discreet it can get past like</font>

1593
00:55:08,040 --> 00:55:12,210
the obfuscation detection type things

1594
00:55:09,720 --> 00:55:16,439
you can like<font color="#E5E5E5"> be a lot harder to pick out</font>

1595
00:55:12,210 --> 00:55:18,390
as like very loudly malicious<font color="#CCCCCC"> and there</font>

1596
00:55:16,440 --> 00:55:19,920
actually<font color="#E5E5E5"> is one</font><font color="#CCCCCC"> project</font><font color="#E5E5E5"> I know of based</font>

1597
00:55:18,390 --> 00:55:21,629
<font color="#E5E5E5">on like this minimal obfuscation</font>

1598
00:55:19,920 --> 00:55:24,060
technique for<font color="#E5E5E5"> PowerShell at least so</font>

1599
00:55:21,630 --> 00:55:27,450
Ryan<font color="#CCCCCC"> Cobb who now works at</font><font color="#E5E5E5"> Specter ops</font>

1600
00:55:24,060 --> 00:55:30,180
<font color="#CCCCCC">last year she's almost a year ago to the</font>

1601
00:55:27,450 --> 00:55:32,220
day he<font color="#E5E5E5"> released a tool called</font><font color="#CCCCCC"> PSA MZ her</font>

1602
00:55:30,180 --> 00:55:33,810
PSA<font color="#E5E5E5"> MSI for the anti-malware scan</font>

1603
00:55:32,220 --> 00:55:35,770
interface and basically it<font color="#E5E5E5"> takes</font>

1604
00:55:33,810 --> 00:55:37,360
<font color="#CCCCCC">powershell obfuscation</font><font color="#E5E5E5"> and then</font>

1605
00:55:35,770 --> 00:55:39,550
applies it very selectively it basically

1606
00:55:37,360 --> 00:55:42,070
<font color="#E5E5E5">breaks out</font><font color="#CCCCCC"> the whole script</font><font color="#E5E5E5"> and given an</font>

1607
00:55:39,550 --> 00:55:43,870
a a certain<font color="#CCCCCC"> AV signature that uses a msi</font>

1608
00:55:42,070 --> 00:55:45,250
<font color="#E5E5E5">to detect this script as malicious it</font>

1609
00:55:43,870 --> 00:55:47,380
says<font color="#E5E5E5"> let me break out the whole script</font>

1610
00:55:45,250 --> 00:55:48,820
into<font color="#E5E5E5"> the whole tree and find only the</font>

1611
00:55:47,380 --> 00:55:49,840
components that are<font color="#E5E5E5"> triggering the alert</font>

1612
00:55:48,820 --> 00:55:51,640
and<font color="#E5E5E5"> then office gate just those</font>

1613
00:55:49,840 --> 00:55:53,680
component that's really cool<font color="#E5E5E5"> because</font><font color="#CCCCCC"> now</font>

1614
00:55:51,640 --> 00:55:55,359
the<font color="#CCCCCC"> whole script is like barely office</font>

1615
00:55:53,680 --> 00:55:56,950
<font color="#CCCCCC">give it but it's office gated in every</font>

1616
00:55:55,360 --> 00:55:58,390
freaking the right place depending<font color="#E5E5E5"> on</font>

1617
00:55:56,950 --> 00:56:00,250
<font color="#E5E5E5">that signature so there's some really</font>

1618
00:55:58,390 --> 00:56:02,170
<font color="#E5E5E5">cool work in the community for</font><font color="#CCCCCC"> that sort</font>

1619
00:56:00,250 --> 00:56:04,330
<font color="#CCCCCC">of</font><font color="#E5E5E5"> thing but it just means that we kind</font>

1620
00:56:02,170 --> 00:56:05,470
of shift<font color="#E5E5E5"> and say oh how can we how can</font>

1621
00:56:04,330 --> 00:56:07,240
<font color="#E5E5E5">we write detection</font><font color="#CCCCCC"> it's based on</font>

1622
00:56:05,470 --> 00:56:10,029
individual components of<font color="#E5E5E5"> this abstract</font>

1623
00:56:07,240 --> 00:56:12,459
syntax tree and<font color="#CCCCCC"> it it's a really</font><font color="#E5E5E5"> fun</font>

1624
00:56:10,030 --> 00:56:14,500
cat-and-mouse game well fun is relative

1625
00:56:12,460 --> 00:56:17,140
I suppose but yeah there's<font color="#CCCCCC"> definitely</font>

1626
00:56:14,500 --> 00:56:20,650
some cool work in<font color="#E5E5E5"> that</font><font color="#CCCCCC"> area</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> awesome</font>

1627
00:56:17,140 --> 00:56:22,210
<font color="#E5E5E5">question between you guys and lunch so</font>

1628
00:56:20,650 --> 00:56:23,230
<font color="#CCCCCC">uh so thank you again</font><font color="#E5E5E5"> for your</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> and</font>

1629
00:56:22,210 --> 00:56:25,090
<font color="#E5E5E5">if you have any questions we'd love to</font>

1630
00:56:23,230 --> 00:56:25,890
<font color="#E5E5E5">chat</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> say hello outside but thank you</font>

1631
00:56:25,090 --> 00:56:30,860
<font color="#E5E5E5">very much</font>

1632
00:56:25,890 --> 00:56:30,859
[Applause]

