1
00:00:02,560 --> 00:00:08,519
so thank<font color="#E5E5E5"> you are we ready for showing up</font>

2
00:00:04,720 --> 00:00:10,570
after<font color="#E5E5E5"> lunch and our next talk is</font>

3
00:00:08,519 --> 00:00:13,450
<font color="#E5E5E5">reinvestigating</font><font color="#CCCCCC"> PowerShell attacks with</font>

4
00:00:10,570 --> 00:00:15,080
<font color="#CCCCCC">Matt and Ryan</font><font color="#E5E5E5"> and just giving a lot to</font>

5
00:00:13,450 --> 00:00:21,640
you<font color="#E5E5E5"> thank you</font>

6
00:00:15,080 --> 00:00:24,340
[Applause]

7
00:00:21,640 --> 00:00:26,050
<font color="#E5E5E5">I'm Ryan</font><font color="#CCCCCC"> Kazan cm I met Hastings</font><font color="#E5E5E5"> thank</font>

8
00:00:24,340 --> 00:00:27,970
<font color="#E5E5E5">you for joining us today we're here to</font>

9
00:00:26,050 --> 00:00:31,060
present<font color="#E5E5E5"> for retro</font><font color="#CCCCCC"> con reinvestigating</font>

10
00:00:27,970 --> 00:00:32,950
<font color="#CCCCCC">PowerShell attacks so</font><font color="#E5E5E5"> Matt and</font><font color="#CCCCCC"> I have a</font>

11
00:00:31,060 --> 00:00:34,690
very similar<font color="#E5E5E5"> background a few years</font>

12
00:00:32,950 --> 00:00:36,579
separated but at largely the<font color="#CCCCCC"> same</font>

13
00:00:34,690 --> 00:00:39,160
companies doing<font color="#CCCCCC"> largely the same</font><font color="#E5E5E5"> types</font>

14
00:00:36,579 --> 00:00:41,199
of work<font color="#CCCCCC"> so we both started in consulting</font>

15
00:00:39,160 --> 00:00:42,699
at PricewaterhouseCoopers before then

16
00:00:41,199 --> 00:00:44,829
going<font color="#CCCCCC"> to mandiant where we focused on</font>

17
00:00:42,699 --> 00:00:47,140
Incident Response in forensics<font color="#E5E5E5"> and today</font>

18
00:00:44,829 --> 00:00:49,749
at<font color="#E5E5E5"> team iam where we focus on our</font>

19
00:00:47,140 --> 00:00:52,030
product organization<font color="#CCCCCC"> we both live in</font>

20
00:00:49,749 --> 00:00:53,379
Alexandria<font color="#E5E5E5"> Virginia</font><font color="#CCCCCC"> which if you haven't</font>

21
00:00:52,030 --> 00:00:56,530
<font color="#CCCCCC">been there</font><font color="#E5E5E5"> is right outside the</font>

22
00:00:53,379 --> 00:00:58,539
Washington<font color="#E5E5E5"> DC area</font><font color="#CCCCCC"> and yeah we spend a</font>

23
00:00:56,530 --> 00:01:00,249
<font color="#CCCCCC">lot of</font><font color="#E5E5E5"> the initial time when we were</font>

24
00:00:58,539 --> 00:01:01,659
<font color="#E5E5E5">first creating the</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> initial versions</font>

25
00:01:00,249 --> 00:01:03,940
<font color="#E5E5E5">of this presentation doing Incident</font>

26
00:01:01,659 --> 00:01:05,530
Response<font color="#E5E5E5"> and forensics work and today we</font>

27
00:01:03,940 --> 00:01:07,719
work<font color="#CCCCCC"> on</font><font color="#E5E5E5"> building</font><font color="#CCCCCC"> software in part to</font>

28
00:01:05,530 --> 00:01:09,219
<font color="#E5E5E5">help companies investigate protect and</font>

29
00:01:07,719 --> 00:01:10,780
secure their environments<font color="#E5E5E5"> and so we</font>

30
00:01:09,219 --> 00:01:12,939
effectively<font color="#E5E5E5"> had made a transition</font>

31
00:01:10,780 --> 00:01:14,200
between the original talks and today to

32
00:01:12,939 --> 00:01:15,460
decide them to go into product

33
00:01:14,200 --> 00:01:16,869
management<font color="#CCCCCC"> although I assure you were</font>

34
00:01:15,460 --> 00:01:18,640
not<font color="#CCCCCC"> going to talk about</font><font color="#E5E5E5"> any product</font>

35
00:01:16,869 --> 00:01:22,509
<font color="#E5E5E5">management stuff for today's</font>

36
00:01:18,640 --> 00:01:25,990
<font color="#CCCCCC">presentation so yeah we first came</font><font color="#E5E5E5"> to</font>

37
00:01:22,509 --> 00:01:29,130
<font color="#CCCCCC">bukhan in 2014 just out of curiosity by</font>

38
00:01:25,990 --> 00:01:31,509
a show of<font color="#E5E5E5"> hands who</font><font color="#CCCCCC"> was here in</font><font color="#E5E5E5"> 2014</font>

39
00:01:29,130 --> 00:01:36,039
cool a couple of you<font color="#E5E5E5"> guys how about 2015</font>

40
00:01:31,509 --> 00:01:38,680
<font color="#CCCCCC">a few more yes so 2014</font><font color="#E5E5E5"> was when we had</font>

41
00:01:36,039 --> 00:01:41,439
first started<font color="#E5E5E5"> this research we found</font>

42
00:01:38,680 --> 00:01:45,369
<font color="#CCCCCC">from YouTube the original clips of</font><font color="#E5E5E5"> us</font>

43
00:01:41,439 --> 00:01:47,469
doing<font color="#E5E5E5"> this talk you know how you watch</font>

44
00:01:45,369 --> 00:01:49,390
yourself<font color="#CCCCCC"> on video</font><font color="#E5E5E5"> or listen to yourself</font>

45
00:01:47,469 --> 00:01:52,059
<font color="#CCCCCC">give a presentation and</font><font color="#E5E5E5"> you think man I</font>

46
00:01:49,390 --> 00:01:53,890
sound terrible<font color="#CCCCCC"> I looked at myself</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> said</font>

47
00:01:52,060 --> 00:01:56,770
what was I thinking<font color="#CCCCCC"> I must have just</font>

48
00:01:53,890 --> 00:01:59,020
<font color="#E5E5E5">come from Vegas because I have one too</font>

49
00:01:56,770 --> 00:02:02,079
many buttons<font color="#E5E5E5"> button it is an aggressive</font>

50
00:01:59,020 --> 00:02:03,789
<font color="#E5E5E5">caller it is an aggressive showing so</font>

51
00:02:02,079 --> 00:02:05,919
today I'm thankful<font color="#CCCCCC"> to</font><font color="#E5E5E5"> say that I am</font>

52
00:02:03,789 --> 00:02:08,649
fully buttoned up<font color="#E5E5E5"> and I'm not showing as</font>

53
00:02:05,920 --> 00:02:10,509
much<font color="#E5E5E5"> as I was back then so we come back</font>

54
00:02:08,649 --> 00:02:12,879
in 2015<font color="#CCCCCC"> to do the second part of our</font>

55
00:02:10,508 --> 00:02:14,980
research on desired<font color="#E5E5E5"> state configuration</font>

56
00:02:12,879 --> 00:02:15,810
<font color="#E5E5E5">and our spouse is actually joining us</font>

57
00:02:14,980 --> 00:02:18,269
<font color="#CCCCCC">are our respect that</font>

58
00:02:15,810 --> 00:02:19,770
and so they<font color="#CCCCCC"> actually got</font><font color="#E5E5E5"> to sit</font><font color="#CCCCCC"> in and</font>

59
00:02:18,270 --> 00:02:21,239
see<font color="#CCCCCC"> us present</font><font color="#E5E5E5"> for the first time and</font>

60
00:02:19,770 --> 00:02:22,860
you can actually see in part of the

61
00:02:21,239 --> 00:02:24,840
<font color="#CCCCCC">clips my</font><font color="#E5E5E5"> wife right</font><font color="#CCCCCC"> in the corner here</font>

62
00:02:22,860 --> 00:02:26,430
<font color="#CCCCCC">although she eventually I think figured</font>

63
00:02:24,840 --> 00:02:28,110
out she was<font color="#E5E5E5"> in frame and</font><font color="#CCCCCC"> then hid for</font>

64
00:02:26,430 --> 00:02:30,599
the<font color="#E5E5E5"> remainder of the talk but I was</font>

65
00:02:28,110 --> 00:02:31,950
hoping to<font color="#E5E5E5"> get a shot of her asleep or</font>

66
00:02:30,599 --> 00:02:34,349
falling asleep during<font color="#E5E5E5"> our presentation</font>

67
00:02:31,950 --> 00:02:37,170
<font color="#CCCCCC">but</font><font color="#E5E5E5"> lucky for her she was out of</font><font color="#CCCCCC"> frame</font>

68
00:02:34,349 --> 00:02:39,329
<font color="#CCCCCC">for most of it so yeah we're</font><font color="#E5E5E5"> gonna begin</font>

69
00:02:37,170 --> 00:02:41,790
<font color="#E5E5E5">by revisiting our investigating</font><font color="#CCCCCC"> power</font>

70
00:02:39,330 --> 00:02:44,220
<font color="#CCCCCC">shell</font><font color="#E5E5E5"> attack stalk and just to set some</font>

71
00:02:41,790 --> 00:02:46,709
context<font color="#CCCCCC"> for those of you who hadn't</font><font color="#E5E5E5"> seen</font>

72
00:02:44,220 --> 00:02:49,980
that<font color="#CCCCCC"> when</font><font color="#E5E5E5"> we started that research in</font>

73
00:02:46,709 --> 00:02:51,780
2014 it was in<font color="#E5E5E5"> response to a incident</font>

74
00:02:49,980 --> 00:02:54,420
that Matt<font color="#CCCCCC"> and I had been</font><font color="#E5E5E5"> working from</font>

75
00:02:51,780 --> 00:02:56,190
<font color="#E5E5E5">the prior year</font><font color="#CCCCCC"> where the attacker had</font>

76
00:02:54,420 --> 00:02:58,768
access to a victim environment through

77
00:02:56,190 --> 00:03:00,720
compromised VPN credentials that went

78
00:02:58,769 --> 00:03:03,450
back actually<font color="#E5E5E5"> three</font><font color="#CCCCCC"> or four years and</font>

79
00:03:00,720 --> 00:03:05,489
they had been detected<font color="#CCCCCC"> and not fully</font>

80
00:03:03,450 --> 00:03:07,260
remediated several times over<font color="#E5E5E5"> in that</font>

81
00:03:05,489 --> 00:03:09,599
<font color="#CCCCCC">environment and what was</font><font color="#E5E5E5"> interesting is</font>

82
00:03:07,260 --> 00:03:12,179
<font color="#E5E5E5">after that last round of being detected</font>

83
00:03:09,599 --> 00:03:13,649
<font color="#E5E5E5">but not stamped out</font><font color="#CCCCCC"> the attacker moved</font>

84
00:03:12,180 --> 00:03:15,810
<font color="#E5E5E5">to a methodology where they were almost</font>

85
00:03:13,650 --> 00:03:18,480
exclusively<font color="#E5E5E5"> interacting with compromised</font>

86
00:03:15,810 --> 00:03:21,510
machines<font color="#E5E5E5"> after logging into the VPN</font>

87
00:03:18,480 --> 00:03:24,179
<font color="#CCCCCC">through</font><font color="#E5E5E5"> PowerShell remoting and in some</font>

88
00:03:21,510 --> 00:03:25,399
cases just standard<font color="#E5E5E5"> powershell scripts</font>

89
00:03:24,180 --> 00:03:27,540
and this was<font color="#E5E5E5"> really interesting</font><font color="#CCCCCC"> because</font>

90
00:03:25,400 --> 00:03:29,579
we had never seen<font color="#CCCCCC"> anything like that</font>

91
00:03:27,540 --> 00:03:32,040
before<font color="#CCCCCC"> it was the first time any</font><font color="#E5E5E5"> of us</font>

92
00:03:29,579 --> 00:03:34,230
had seen<font color="#E5E5E5"> an attacker utilized PowerShell</font>

93
00:03:32,040 --> 00:03:35,910
in that manner<font color="#E5E5E5"> in a targeted breach it</font>

94
00:03:34,230 --> 00:03:37,200
was by far<font color="#CCCCCC"> the first time we had</font><font color="#E5E5E5"> seen</font>

95
00:03:35,910 --> 00:03:39,959
any sort<font color="#E5E5E5"> of use</font><font color="#CCCCCC"> of PowerShell</font><font color="#E5E5E5"> remoting</font>

96
00:03:37,200 --> 00:03:42,179
<font color="#CCCCCC">and so we spent a lot</font><font color="#E5E5E5"> of time basically</font>

97
00:03:39,959 --> 00:03:43,950
<font color="#E5E5E5">learning</font><font color="#CCCCCC"> the forensic artifacts of that</font>

98
00:03:42,180 --> 00:03:45,959
type of activity<font color="#E5E5E5"> as we went along and</font>

99
00:03:43,950 --> 00:03:47,548
what we ended<font color="#E5E5E5"> up finding out is there</font>

100
00:03:45,959 --> 00:03:50,280
wasn't<font color="#E5E5E5"> actually a whole</font><font color="#CCCCCC"> lot of good</font>

101
00:03:47,549 --> 00:03:52,250
stuff<font color="#CCCCCC"> to go with so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> what</font>

102
00:03:50,280 --> 00:03:54,959
prompted<font color="#E5E5E5"> the initial research and what</font>

103
00:03:52,250 --> 00:03:56,970
<font color="#E5E5E5">spearheaded the work that we did at the</font>

104
00:03:54,959 --> 00:03:58,920
<font color="#CCCCCC">time there</font><font color="#E5E5E5"> wasn't a ton of work done</font><font color="#CCCCCC"> on</font>

105
00:03:56,970 --> 00:04:00,000
forensic artifacts of PowerShell attacks

106
00:03:58,920 --> 00:04:02,069
<font color="#E5E5E5">but there already had been some</font>

107
00:04:00,000 --> 00:04:04,260
<font color="#CCCCCC">preliminary research on PowerShell and</font>

108
00:04:02,069 --> 00:04:06,089
offensive techniques and so we had

109
00:04:04,260 --> 00:04:07,980
<font color="#E5E5E5">started working with a lot of folks like</font>

110
00:04:06,090 --> 00:04:10,380
<font color="#CCCCCC">matt graver at the time who helped us</font>

111
00:04:07,980 --> 00:04:11,880
<font color="#E5E5E5">along with</font><font color="#CCCCCC"> that research</font><font color="#E5E5E5"> and what we did</font>

112
00:04:10,380 --> 00:04:13,230
in<font color="#E5E5E5"> that presentation was look at</font><font color="#CCCCCC"> the</font>

113
00:04:11,880 --> 00:04:16,649
forensic artifacts of three

114
00:04:13,230 --> 00:04:19,108
methodologies<font color="#E5E5E5"> one was local</font><font color="#CCCCCC"> powershell</font>

115
00:04:16,649 --> 00:04:21,388
execution of a script<font color="#CCCCCC"> two was powershell</font>

116
00:04:19,108 --> 00:04:23,460
remoting<font color="#CCCCCC"> and three was configuring</font>

117
00:04:21,389 --> 00:04:25,200
windows<font color="#E5E5E5"> management instrumentation</font><font color="#CCCCCC"> WMI</font>

118
00:04:23,460 --> 00:04:26,609
to persist a malicious<font color="#CCCCCC"> PowerShell</font>

119
00:04:25,200 --> 00:04:27,570
command line and<font color="#E5E5E5"> run it on a system</font>

120
00:04:26,610 --> 00:04:29,280
<font color="#E5E5E5">automatically</font>

121
00:04:27,570 --> 00:04:30,630
and we looked at the sources<font color="#CCCCCC"> of evidence</font>

122
00:04:29,280 --> 00:04:33,419
that<font color="#E5E5E5"> each of those things produced on</font>

123
00:04:30,630 --> 00:04:34,700
<font color="#E5E5E5">disk</font><font color="#CCCCCC"> in event logs</font><font color="#E5E5E5"> in memory and over</font>

124
00:04:33,420 --> 00:04:37,710
the network

125
00:04:34,700 --> 00:04:39,630
so to recap some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the things we found</font>

126
00:04:37,710 --> 00:04:42,630
back then I'll talk about<font color="#E5E5E5"> evidence in</font>

127
00:04:39,630 --> 00:04:44,130
memory first and this was in part<font color="#CCCCCC"> driven</font>

128
00:04:42,630 --> 00:04:45,750
by a necessity<font color="#CCCCCC"> because as we'll talk</font>

129
00:04:44,130 --> 00:04:48,469
about<font color="#E5E5E5"> in</font><font color="#CCCCCC"> a moment</font>

130
00:04:45,750 --> 00:04:50,460
in those days with PowerShell<font color="#CCCCCC"> to do</font>

131
00:04:48,470 --> 00:04:52,680
<font color="#E5E5E5">PowerShell auditing was almost</font>

132
00:04:50,460 --> 00:04:54,930
<font color="#CCCCCC">non-existent</font><font color="#E5E5E5"> and so we were really</font>

133
00:04:52,680 --> 00:04:56,520
desperate<font color="#E5E5E5"> to find any way to reconstruct</font>

134
00:04:54,930 --> 00:04:59,430
any artifacts of activity especially

135
00:04:56,520 --> 00:05:00,780
remoting activity on a victim host and

136
00:04:59,430 --> 00:05:02,700
so one of<font color="#E5E5E5"> the places we looked was</font>

137
00:05:00,780 --> 00:05:05,130
memory forensics<font color="#CCCCCC"> and what we had</font>

138
00:05:02,700 --> 00:05:07,080
<font color="#E5E5E5">attempted</font><font color="#CCCCCC"> to do is reconstruct the chain</font>

139
00:05:05,130 --> 00:05:09,420
of processes that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> involved when you</font>

140
00:05:07,080 --> 00:05:12,840
<font color="#E5E5E5">execute power shell on a remote system</font>

141
00:05:09,420 --> 00:05:14,640
<font color="#E5E5E5">via</font><font color="#CCCCCC"> wrm what that looked like</font><font color="#E5E5E5"> and most</font>

142
00:05:12,840 --> 00:05:16,950
importantly what actually could persist

143
00:05:14,640 --> 00:05:18,270
beyond the session because if you have

144
00:05:16,950 --> 00:05:20,909
an attacker interacting with the system

145
00:05:18,270 --> 00:05:22,549
<font color="#CCCCCC">over</font><font color="#E5E5E5"> W</font><font color="#CCCCCC"> and a window M and then the</font>

146
00:05:20,910 --> 00:05:24,510
<font color="#E5E5E5">session ends we wanted to figure out</font>

147
00:05:22,550 --> 00:05:26,450
reasonably speaking<font color="#E5E5E5"> if a forensic</font>

148
00:05:24,510 --> 00:05:29,130
investigator took memory from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> host</font>

149
00:05:26,450 --> 00:05:30,870
<font color="#E5E5E5">hours</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> minutes hours or</font><font color="#CCCCCC"> days later</font>

150
00:05:29,130 --> 00:05:32,630
what would be<font color="#E5E5E5"> left behind and what we</font>

151
00:05:30,870 --> 00:05:34,800
unfortunately<font color="#E5E5E5"> found out was that</font><font color="#CCCCCC"> the</font>

152
00:05:32,630 --> 00:05:37,860
<font color="#CCCCCC">most of the</font><font color="#E5E5E5"> bose history about</font>

153
00:05:34,800 --> 00:05:39,990
interaction<font color="#E5E5E5"> over</font><font color="#CCCCCC"> a window</font><font color="#E5E5E5"> M session was</font>

154
00:05:37,860 --> 00:05:43,230
pretty much non persistent<font color="#CCCCCC"> it was in the</font>

155
00:05:39,990 --> 00:05:45,210
context of the<font color="#CCCCCC"> WSM host process which it</font>

156
00:05:43,230 --> 00:05:47,040
gets spawned on<font color="#E5E5E5"> a per session basis and</font>

157
00:05:45,210 --> 00:05:48,989
when the session terminates that goes

158
00:05:47,040 --> 00:05:51,450
away<font color="#CCCCCC"> and your likelihood of recovering</font>

159
00:05:48,990 --> 00:05:54,360
it goes away<font color="#E5E5E5"> quite quickly however we</font>

160
00:05:51,450 --> 00:05:56,550
did<font color="#CCCCCC"> find that</font><font color="#E5E5E5"> the actual payloads the so</font>

161
00:05:54,360 --> 00:05:58,860
payloads<font color="#E5E5E5"> that encapsulate the winner I'm</font>

162
00:05:56,550 --> 00:06:01,140
activity did persist in the instance of

163
00:05:58,860 --> 00:06:02,790
service host that hosts<font color="#E5E5E5"> the windows</font>

164
00:06:01,140 --> 00:06:05,700
<font color="#E5E5E5">remote management protocol and so</font>

165
00:06:02,790 --> 00:06:08,100
<font color="#E5E5E5">between basically string analysis of</font>

166
00:06:05,700 --> 00:06:09,810
that process space and the string

167
00:06:08,100 --> 00:06:11,970
analysis of kernel<font color="#CCCCCC"> memory and what was</font>

168
00:06:09,810 --> 00:06:13,950
paged out we did demonstrate<font color="#E5E5E5"> that you</font>

169
00:06:11,970 --> 00:06:16,380
could reasonably reconstruct at least

170
00:06:13,950 --> 00:06:18,659
artifacts of remoting activity but with

171
00:06:16,380 --> 00:06:21,390
a quickly<font color="#E5E5E5"> diminishing rate of likelihood</font>

172
00:06:18,660 --> 00:06:23,700
<font color="#CCCCCC">of success and so we proved this by in</font>

173
00:06:21,390 --> 00:06:26,190
this example running invoke mimikatz on

174
00:06:23,700 --> 00:06:28,680
a remote host vo in RM<font color="#E5E5E5"> then taking</font><font color="#CCCCCC"> win a</font>

175
00:06:26,190 --> 00:06:30,150
<font color="#E5E5E5">memory and finding that yes in fact</font><font color="#CCCCCC"> you</font>

176
00:06:28,680 --> 00:06:31,890
could reconstruct<font color="#E5E5E5"> some of the strings of</font>

177
00:06:30,150 --> 00:06:34,560
that activity<font color="#CCCCCC"> if you were lucky enough</font>

178
00:06:31,890 --> 00:06:36,510
to<font color="#E5E5E5"> grab memory from the</font><font color="#CCCCCC"> host</font><font color="#E5E5E5"> but from a</font>

179
00:06:34,560 --> 00:06:38,370
<font color="#CCCCCC">practical investigation standpoint you</font>

180
00:06:36,510 --> 00:06:39,240
would have to be very<font color="#E5E5E5"> very lucky to do</font>

181
00:06:38,370 --> 00:06:40,380
that and

182
00:06:39,240 --> 00:06:42,240
one of the interesting<font color="#CCCCCC"> things that I</font>

183
00:06:40,380 --> 00:06:44,400
when we were revisiting<font color="#CCCCCC"> this research</font>

184
00:06:42,240 --> 00:06:46,680
that<font color="#CCCCCC"> we noticed is there actually hasn't</font>

185
00:06:44,400 --> 00:06:49,049
<font color="#E5E5E5">been</font><font color="#CCCCCC"> a ton of work done on parsing</font>

186
00:06:46,680 --> 00:06:51,150
<font color="#CCCCCC">PowerShell artifacts in memory</font><font color="#E5E5E5"> since</font>

187
00:06:49,050 --> 00:06:52,949
<font color="#E5E5E5">this other than basic string analysis</font><font color="#CCCCCC"> I</font>

188
00:06:51,150 --> 00:06:54,568
am sure you could<font color="#E5E5E5"> go through the work of</font>

189
00:06:52,949 --> 00:06:57,150
<font color="#CCCCCC">trying to</font><font color="#E5E5E5"> reconstruct some of the native</font>

190
00:06:54,569 --> 00:06:58,410
objects<font color="#E5E5E5"> that encapsulate PowerShell</font><font color="#CCCCCC"> and</font>

191
00:06:57,150 --> 00:07:00,120
the different forms<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you might run</font>

192
00:06:58,410 --> 00:07:02,639
it on a<font color="#CCCCCC"> system but the fact of the</font>

193
00:07:00,120 --> 00:07:05,729
matter<font color="#E5E5E5"> is auditing and logging rendered</font>

194
00:07:02,639 --> 00:07:06,960
a lot of that<font color="#E5E5E5"> unnecessary and so before</font>

195
00:07:05,729 --> 00:07:08,639
<font color="#CCCCCC">we</font><font color="#E5E5E5"> talk about what's new we'll talk</font>

196
00:07:06,960 --> 00:07:11,989
about what the state<font color="#CCCCCC"> of PowerShell</font>

197
00:07:08,639 --> 00:07:15,449
logging was back in 2014

198
00:07:11,990 --> 00:07:17,940
so as Ryan mentioned<font color="#E5E5E5"> in 2014</font>

199
00:07:15,449 --> 00:07:19,349
PowerShell 2.0<font color="#CCCCCC"> is probably by far the</font>

200
00:07:17,940 --> 00:07:21,900
most prevalent version of PowerShell

201
00:07:19,349 --> 00:07:23,909
seen in the field how many people in

202
00:07:21,900 --> 00:07:25,710
this<font color="#E5E5E5"> room are</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be honest and say</font>

203
00:07:23,910 --> 00:07:28,009
you still have systems running

204
00:07:25,710 --> 00:07:31,229
PowerShell 2.0 in your environments

205
00:07:28,009 --> 00:07:33,900
thank you for the<font color="#CCCCCC"> 5% that</font><font color="#E5E5E5"> were honest</font>

206
00:07:31,229 --> 00:07:38,580
and for the<font color="#CCCCCC"> 95% that are lying shame</font><font color="#E5E5E5"> on</font>

207
00:07:33,900 --> 00:07:40,440
<font color="#E5E5E5">you</font><font color="#CCCCCC"> and thankfully as we progressed as</font>

208
00:07:38,580 --> 00:07:42,000
version<font color="#E5E5E5"> 3 version 4 version 5</font><font color="#CCCCCC"> and now</font>

209
00:07:40,440 --> 00:07:43,380
version 6 has<font color="#E5E5E5"> come out logging has</font>

210
00:07:42,000 --> 00:07:46,320
<font color="#E5E5E5">progressively gotten better and we'll</font>

211
00:07:43,380 --> 00:07:47,940
talk about<font color="#E5E5E5"> that in subsequent slides</font><font color="#CCCCCC"> but</font>

212
00:07:46,320 --> 00:07:50,070
even if you have done a good job<font color="#E5E5E5"> and</font>

213
00:07:47,940 --> 00:07:51,599
actually<font color="#CCCCCC"> eliminated</font><font color="#E5E5E5"> version 2 in your</font>

214
00:07:50,070 --> 00:07:53,190
environment<font color="#E5E5E5"> or at least upgraded it</font>

215
00:07:51,599 --> 00:07:54,750
<font color="#E5E5E5">chances</font><font color="#CCCCCC"> are you haven't restricted</font>

216
00:07:53,190 --> 00:07:56,909
completely the ability to<font color="#E5E5E5"> you know</font>

217
00:07:54,750 --> 00:07:59,130
downgrade or to force the uses of

218
00:07:56,909 --> 00:08:01,289
<font color="#E5E5E5">PowerShell version 2 so in some cases</font>

219
00:07:59,130 --> 00:08:04,440
you<font color="#CCCCCC"> may find yourself still needing to</font>

220
00:08:01,289 --> 00:08:05,550
investigate<font color="#E5E5E5"> legacy logging and so</font>

221
00:08:04,440 --> 00:08:07,020
there's<font color="#E5E5E5"> two kind of two</font><font color="#CCCCCC"> different</font>

222
00:08:05,550 --> 00:08:08,490
approaches to<font color="#E5E5E5"> this there's the direct</font>

223
00:08:07,020 --> 00:08:10,109
<font color="#E5E5E5">logs that are available and then there's</font>

224
00:08:08,490 --> 00:08:12,330
indirect evidence that you can find from

225
00:08:10,110 --> 00:08:13,889
other logging sources from<font color="#CCCCCC"> a direct</font>

226
00:08:12,330 --> 00:08:16,139
perspective there's<font color="#E5E5E5"> not a whole lot</font>

227
00:08:13,889 --> 00:08:18,419
<font color="#E5E5E5">there so with PowerShell v2 you could</font>

228
00:08:16,139 --> 00:08:20,430
really<font color="#CCCCCC"> only answer the questions of when</font>

229
00:08:18,419 --> 00:08:22,440
did something start and when did

230
00:08:20,430 --> 00:08:24,360
<font color="#E5E5E5">something end so my console session</font>

231
00:08:22,440 --> 00:08:26,639
started and<font color="#CCCCCC"> ended I can now timeline</font>

232
00:08:24,360 --> 00:08:28,080
around that activity<font color="#E5E5E5"> but from a core</font>

233
00:08:26,639 --> 00:08:30,360
logging perspective there wasn't much

234
00:08:28,080 --> 00:08:32,010
<font color="#E5E5E5">else present</font><font color="#CCCCCC"> if you're dealing with a</font>

235
00:08:30,360 --> 00:08:33,329
remoting session<font color="#E5E5E5"> you know you could</font>

236
00:08:32,010 --> 00:08:35,250
distinguish that from<font color="#CCCCCC"> the local</font><font color="#E5E5E5"> one</font>

237
00:08:33,328 --> 00:08:37,199
which is important<font color="#E5E5E5"> and if for example</font>

238
00:08:35,250 --> 00:08:38,760
<font color="#E5E5E5">your security logs had rolled you could</font>

239
00:08:37,200 --> 00:08:41,039
still see the user account that<font color="#CCCCCC"> was used</font>

240
00:08:38,760 --> 00:08:43,409
to laterally access the victim system

241
00:08:41,039 --> 00:08:46,199
<font color="#E5E5E5">but ultimately you weren't</font><font color="#CCCCCC"> getting a ton</font>

242
00:08:43,409 --> 00:08:50,279
of<font color="#CCCCCC"> information the PowerShell analytic</font>

243
00:08:46,200 --> 00:08:52,199
log is basically the the<font color="#CCCCCC"> output of event</font>

244
00:08:50,279 --> 00:08:52,540
tracing or etw which we'll talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> in</font>

245
00:08:52,199 --> 00:08:54,550
<font color="#CCCCCC">the</font>

246
00:08:52,540 --> 00:08:57,069
subsequent section<font color="#E5E5E5"> leader but without</font>

247
00:08:54,550 --> 00:08:58,990
some pretty strict controls wrapped

248
00:08:57,070 --> 00:09:01,060
around the analytic log it becomes

249
00:08:58,990 --> 00:09:04,089
cumbersome very<font color="#E5E5E5"> quickly there's a ton of</font>

250
00:09:01,060 --> 00:09:05,349
events<font color="#CCCCCC"> that</font><font color="#E5E5E5"> get created</font><font color="#CCCCCC"> but if you did</font>

251
00:09:04,089 --> 00:09:06,970
turn<font color="#E5E5E5"> it on and you looked at the logs</font>

252
00:09:05,350 --> 00:09:08,940
<font color="#E5E5E5">you could get things such as the name</font>

253
00:09:06,970 --> 00:09:12,430
and<font color="#CCCCCC"> the path and</font><font color="#E5E5E5"> the user that executed</font>

254
00:09:08,940 --> 00:09:14,860
<font color="#E5E5E5">certain PowerShell scripts then there's</font>

255
00:09:12,430 --> 00:09:17,199
<font color="#E5E5E5">a blocker so everyone in here is running</font>

256
00:09:14,860 --> 00:09:19,540
<font color="#CCCCCC">a blocker</font><font color="#E5E5E5"> in block mode across your</font>

257
00:09:17,199 --> 00:09:21,939
entire estate and is doing<font color="#E5E5E5"> that for</font><font color="#CCCCCC"> both</font>

258
00:09:19,540 --> 00:09:24,880
execution in scripts<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> % positive</font>

259
00:09:21,940 --> 00:09:26,949
<font color="#CCCCCC">about that but you also have the option</font>

260
00:09:24,880 --> 00:09:29,380
<font color="#E5E5E5">of doing auditing and so</font><font color="#CCCCCC"> app Locker has</font>

261
00:09:26,949 --> 00:09:30,880
a nice way to audit the usage<font color="#E5E5E5"> of those</font>

262
00:09:29,380 --> 00:09:33,220
scripts and executables so if you<font color="#E5E5E5"> nee</font>

263
00:09:30,880 --> 00:09:34,509
enable<font color="#E5E5E5"> that you'll still be able to see</font>

264
00:09:33,220 --> 00:09:35,860
the actual scripts that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> being</font>

265
00:09:34,509 --> 00:09:38,500
executed even<font color="#E5E5E5"> if you're not going to be</font>

266
00:09:35,860 --> 00:09:39,910
<font color="#CCCCCC">able to move forward blocking</font><font color="#E5E5E5"> them and</font>

267
00:09:38,500 --> 00:09:42,069
then transcription logging<font color="#E5E5E5"> has</font><font color="#CCCCCC"> learned</font>

268
00:09:39,910 --> 00:09:44,110
largely surpassed<font color="#CCCCCC"> and modern versions</font><font color="#E5E5E5"> of</font>

269
00:09:42,069 --> 00:09:46,060
<font color="#CCCCCC">PowerShell with some of the history that</font>

270
00:09:44,110 --> 00:09:48,550
we'll<font color="#E5E5E5"> talk about in a future slide but</font>

271
00:09:46,060 --> 00:09:50,859
on a per profile basis you could log

272
00:09:48,550 --> 00:09:52,899
that which would then for each<font color="#E5E5E5"> user</font><font color="#CCCCCC"> that</font>

273
00:09:50,860 --> 00:09:54,630
use PowerShell<font color="#E5E5E5"> log the specific commands</font>

274
00:09:52,899 --> 00:09:56,889
that they were typing<font color="#E5E5E5"> into</font><font color="#CCCCCC"> the console</font>

275
00:09:54,630 --> 00:09:59,550
<font color="#E5E5E5">so here's just a quick example</font><font color="#CCCCCC"> of some</font>

276
00:09:56,889 --> 00:10:01,930
<font color="#E5E5E5">of the things that you could see so in a</font>

277
00:09:59,550 --> 00:10:03,849
standard user session you would see the

278
00:10:01,930 --> 00:10:06,579
did<font color="#E5E5E5"> user name is logging in</font><font color="#CCCCCC"> they're</font>

279
00:10:03,850 --> 00:10:09,459
connecting via<font color="#E5E5E5"> remoting and then you can</font>

280
00:10:06,579 --> 00:10:12,130
actually see a base64<font color="#E5E5E5"> encoded blob of</font>

281
00:10:09,459 --> 00:10:13,869
the input<font color="#E5E5E5"> and the output similar to how</font>

282
00:10:12,130 --> 00:10:16,180
other things<font color="#CCCCCC"> are</font><font color="#E5E5E5"> broken</font><font color="#CCCCCC"> apart these are</font>

283
00:10:13,870 --> 00:10:17,680
not always subsequent and they're not in

284
00:10:16,180 --> 00:10:20,079
the same log message you'd have to<font color="#E5E5E5"> kind</font>

285
00:10:17,680 --> 00:10:22,180
of<font color="#CCCCCC"> reconstruct them after the fact doing</font>

286
00:10:20,079 --> 00:10:24,160
<font color="#CCCCCC">so you can</font><font color="#E5E5E5"> see what this looks like when</font>

287
00:10:22,180 --> 00:10:26,888
<font color="#E5E5E5">you decode it</font><font color="#CCCCCC"> so this is just</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font>

288
00:10:24,160 --> 00:10:28,930
get child item from an<font color="#CCCCCC"> invoke command of</font>

289
00:10:26,889 --> 00:10:30,550
the root of the<font color="#CCCCCC"> C directory and you do</font>

290
00:10:28,930 --> 00:10:31,810
see<font color="#CCCCCC"> that it's present</font><font color="#E5E5E5"> in that within the</font>

291
00:10:30,550 --> 00:10:36,579
log if you're<font color="#E5E5E5"> going to go through and</font>

292
00:10:31,810 --> 00:10:38,199
decode it so then<font color="#CCCCCC"> PowerShell v3 so back</font>

293
00:10:36,579 --> 00:10:39,609
when we were first<font color="#CCCCCC"> giving this talk this</font>

294
00:10:38,199 --> 00:10:42,189
was<font color="#E5E5E5"> probably the most impactful thing we</font>

295
00:10:39,610 --> 00:10:44,589
recommend<font color="#CCCCCC"> it was get on version 3 so you</font>

296
00:10:42,189 --> 00:10:46,719
<font color="#E5E5E5">can get module logging because that was</font>

297
00:10:44,589 --> 00:10:48,639
<font color="#CCCCCC">really</font><font color="#E5E5E5"> the best approach to seeing on a</font>

298
00:10:46,720 --> 00:10:50,649
per module basis what commandlets<font color="#E5E5E5"> for</font>

299
00:10:48,639 --> 00:10:54,610
being run for each<font color="#CCCCCC"> PowerShell session</font>

300
00:10:50,649 --> 00:10:56,920
however it turns out that also creates a

301
00:10:54,610 --> 00:10:58,930
<font color="#CCCCCC">lot of noise and a lot of</font><font color="#E5E5E5"> logs so as an</font>

302
00:10:56,920 --> 00:11:01,719
example<font color="#CCCCCC"> when we ran invoke mimikatz in</font>

303
00:10:58,930 --> 00:11:04,000
this instance it generated<font color="#E5E5E5"> almost</font><font color="#CCCCCC"> 4,000</font>

304
00:11:01,720 --> 00:11:05,470
unique events in the log so it's just<font color="#E5E5E5"> a</font>

305
00:11:04,000 --> 00:11:06,160
lot of<font color="#E5E5E5"> data for you to have to go</font>

306
00:11:05,470 --> 00:11:10,170
through<font color="#CCCCCC"> in</font>

307
00:11:06,160 --> 00:11:13,509
us and then<font color="#E5E5E5"> powershell version</font><font color="#CCCCCC"> for</font>

308
00:11:10,170 --> 00:11:15,310
script<font color="#E5E5E5"> lock logging this was it this was</font>

309
00:11:13,509 --> 00:11:16,810
<font color="#CCCCCC">the</font><font color="#E5E5E5"> holy grail and</font><font color="#CCCCCC"> it's still kind</font><font color="#E5E5E5"> of I</font>

310
00:11:15,310 --> 00:11:17,649
<font color="#E5E5E5">would say the standard for a nice script</font>

311
00:11:16,810 --> 00:11:19,569
based

312
00:11:17,649 --> 00:11:21,370
scripting<font color="#CCCCCC"> language for how you can audit</font>

313
00:11:19,569 --> 00:11:23,469
<font color="#E5E5E5">what's</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> being used under</font><font color="#CCCCCC"> the</font>

314
00:11:21,370 --> 00:11:25,600
hood<font color="#CCCCCC"> I think most people and myself</font>

315
00:11:23,470 --> 00:11:27,069
<font color="#E5E5E5">included commonly</font><font color="#CCCCCC"> referred to this you</font>

316
00:11:25,600 --> 00:11:29,170
know introduced<font color="#E5E5E5"> in PowerShell</font><font color="#CCCCCC"> version 5</font>

317
00:11:27,069 --> 00:11:31,509
it actually was introduced in version<font color="#E5E5E5"> 4</font>

318
00:11:29,170 --> 00:11:34,269
<font color="#E5E5E5">and what this allows you to do is take</font>

319
00:11:31,509 --> 00:11:36,129
blocks of code and log it<font color="#E5E5E5"> into the event</font>

320
00:11:34,269 --> 00:11:37,540
log<font color="#E5E5E5"> and what's nice about this is</font><font color="#CCCCCC"> in</font>

321
00:11:36,129 --> 00:11:40,029
many cases<font color="#E5E5E5"> and as we'll talk</font><font color="#CCCCCC"> about later</font>

322
00:11:37,540 --> 00:11:41,439
and<font color="#E5E5E5"> as many people</font><font color="#CCCCCC"> have shown encoded</font>

323
00:11:40,029 --> 00:11:43,060
commands or ways that<font color="#CCCCCC"> you can off</font><font color="#E5E5E5"> you</font>

324
00:11:41,439 --> 00:11:45,310
skate code to make<font color="#E5E5E5"> it harder to read</font>

325
00:11:43,060 --> 00:11:48,099
it's actually then executed through the

326
00:11:45,310 --> 00:11:49,569
<font color="#CCCCCC">pipeline and logged as its decoded so</font>

327
00:11:48,100 --> 00:11:51,579
not<font color="#CCCCCC"> only do</font><font color="#E5E5E5"> you see the actual</font>

328
00:11:49,569 --> 00:11:53,529
compressed or the base64<font color="#E5E5E5"> encoded code</font>

329
00:11:51,579 --> 00:11:55,870
<font color="#E5E5E5">but as it's moving</font><font color="#CCCCCC"> through the pipeline</font>

330
00:11:53,529 --> 00:11:58,060
<font color="#CCCCCC">its decoded</font><font color="#E5E5E5"> and also logged into the</font>

331
00:11:55,870 --> 00:12:00,430
message<font color="#E5E5E5"> the nice thing</font><font color="#CCCCCC"> here is</font><font color="#E5E5E5"> it's also</font>

332
00:11:58,060 --> 00:12:02,768
a larger format so the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> max size</font><font color="#E5E5E5"> of</font>

333
00:12:00,430 --> 00:12:05,378
the event<font color="#E5E5E5"> log message is what they use</font>

334
00:12:02,769 --> 00:12:07,209
<font color="#CCCCCC">to truncate</font><font color="#E5E5E5"> or or break apart these</font>

335
00:12:05,379 --> 00:12:11,170
messages<font color="#E5E5E5"> so that's it's much fewer</font>

336
00:12:07,209 --> 00:12:12,910
events<font color="#E5E5E5"> in the actual log and what's</font>

337
00:12:11,170 --> 00:12:15,130
really<font color="#E5E5E5"> impressive is if you think</font><font color="#CCCCCC"> about</font>

338
00:12:12,910 --> 00:12:17,350
<font color="#E5E5E5">the transition we just walked</font><font color="#CCCCCC"> through</font>

339
00:12:15,130 --> 00:12:21,250
this all happened in a<font color="#E5E5E5"> matter of like</font><font color="#CCCCCC"> 2</font>

340
00:12:17,350 --> 00:12:23,500
to<font color="#CCCCCC"> 3 years and as much of a bad rap</font><font color="#E5E5E5"> as</font>

341
00:12:21,250 --> 00:12:25,149
<font color="#E5E5E5">PowerShell has gotten for the the sheer</font>

342
00:12:23,500 --> 00:12:27,279
amount that<font color="#E5E5E5"> attackers</font><font color="#CCCCCC"> have abused it in</font>

343
00:12:25,149 --> 00:12:28,720
recent<font color="#CCCCCC"> years the fact that</font><font color="#E5E5E5"> means if you</font>

344
00:12:27,279 --> 00:12:30,730
were to actually stack up<font color="#E5E5E5"> PowerShell</font>

345
00:12:28,720 --> 00:12:33,819
against other scripting languages now

346
00:12:30,730 --> 00:12:35,380
<font color="#E5E5E5">it's readily apparent that it offers far</font>

347
00:12:33,819 --> 00:12:36,880
<font color="#CCCCCC">more from</font><font color="#E5E5E5"> both the security control</font>

348
00:12:35,380 --> 00:12:39,100
<font color="#CCCCCC">perspective and from a logging and</font>

349
00:12:36,880 --> 00:12:42,279
auditing perspective<font color="#CCCCCC"> this image is from</font>

350
00:12:39,100 --> 00:12:44,110
a recent Microsoft blog post for<font color="#CCCCCC"> that</font>

351
00:12:42,279 --> 00:12:45,399
was basically making<font color="#E5E5E5"> that point and</font>

352
00:12:44,110 --> 00:12:47,170
<font color="#E5E5E5">obviously Microsoft has a vested</font>

353
00:12:45,399 --> 00:12:50,230
<font color="#CCCCCC">interest in</font><font color="#E5E5E5"> trying to defend this but</font>

354
00:12:47,170 --> 00:12:52,750
the<font color="#CCCCCC"> reality is</font><font color="#E5E5E5"> if you compare PowerShell</font>

355
00:12:50,230 --> 00:12:54,009
to<font color="#CCCCCC"> any of the other interpreted</font>

356
00:12:52,750 --> 00:12:57,309
languages that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> commonly supported</font>

357
00:12:54,009 --> 00:12:59,259
<font color="#E5E5E5">across major operating systems</font><font color="#CCCCCC"> very few</font>

358
00:12:57,309 --> 00:13:01,420
provide anywhere near the<font color="#CCCCCC"> level of</font>

359
00:12:59,259 --> 00:13:04,209
insight that PowerShell now can if you

360
00:13:01,420 --> 00:13:06,490
<font color="#CCCCCC">enable the options that are present with</font>

361
00:13:04,209 --> 00:13:09,189
the most current<font color="#CCCCCC"> version and so from an</font>

362
00:13:06,490 --> 00:13:10,600
attackers perspective<font color="#CCCCCC"> that</font><font color="#E5E5E5"> means that</font>

363
00:13:09,189 --> 00:13:12,370
you<font color="#E5E5E5"> have to evolve your techniques to be</font>

364
00:13:10,600 --> 00:13:14,230
aware<font color="#CCCCCC"> of that potential for</font><font color="#E5E5E5"> auditing and</font>

365
00:13:12,370 --> 00:13:16,120
is in the defender you have better tools

366
00:13:14,230 --> 00:13:17,559
in<font color="#E5E5E5"> your</font><font color="#CCCCCC"> arsenal than you would if an</font>

367
00:13:16,120 --> 00:13:19,059
attacker opted to use<font color="#E5E5E5"> any other</font>

368
00:13:17,559 --> 00:13:19,699
<font color="#E5E5E5">scripting language including something</font>

369
00:13:19,059 --> 00:13:23,179
<font color="#E5E5E5">like like</font>

370
00:13:19,699 --> 00:13:24,589
<font color="#CCCCCC">see VBS on a Windows</font><font color="#E5E5E5"> host and what's</font>

371
00:13:23,179 --> 00:13:26,029
really<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> this is a lot of</font><font color="#CCCCCC"> the</font>

372
00:13:24,589 --> 00:13:28,249
great research and work that's been done

373
00:13:26,029 --> 00:13:29,839
<font color="#CCCCCC">to make</font><font color="#E5E5E5"> PowerShell better and more</font>

374
00:13:28,249 --> 00:13:31,579
resilient<font color="#CCCCCC"> and more secure is now having</font>

375
00:13:29,839 --> 00:13:33,859
<font color="#E5E5E5">a halo effect in making other</font>

376
00:13:31,579 --> 00:13:35,479
interpreted languages better<font color="#E5E5E5"> and one of</font>

377
00:13:33,859 --> 00:13:37,069
the things that<font color="#E5E5E5"> folks in Microsoft have</font>

378
00:13:35,480 --> 00:13:39,439
worked with the Python organization on

379
00:13:37,069 --> 00:13:41,449
is<font color="#E5E5E5"> actually creating a standard for</font>

380
00:13:39,439 --> 00:13:44,329
<font color="#CCCCCC">auditability</font><font color="#E5E5E5"> and security transparency</font>

381
00:13:41,449 --> 00:13:46,219
in future<font color="#CCCCCC"> versions</font><font color="#E5E5E5"> of Python</font><font color="#CCCCCC"> it's not in</font>

382
00:13:44,329 --> 00:13:49,219
any<font color="#E5E5E5"> of the mainline versions just yet</font>

383
00:13:46,220 --> 00:13:52,809
but I think<font color="#E5E5E5"> 3/8 is actually targeting</font>

384
00:13:49,220 --> 00:13:55,160
the ability to<font color="#E5E5E5"> insert runtime hooks into</font>

385
00:13:52,809 --> 00:13:57,699
Python 3/8 runtimes so that you can

386
00:13:55,160 --> 00:14:00,019
actually<font color="#E5E5E5"> start to</font><font color="#CCCCCC"> capture and trace</font>

387
00:13:57,699 --> 00:14:01,579
<font color="#CCCCCC">powers or</font><font color="#E5E5E5"> Python code in the same way</font>

388
00:14:00,019 --> 00:14:04,939
that<font color="#E5E5E5"> PowerShell script block locking</font>

389
00:14:01,579 --> 00:14:06,649
works so<font color="#E5E5E5"> that is inevitable</font><font color="#CCCCCC"> I mean the</font>

390
00:14:04,939 --> 00:14:08,389
<font color="#E5E5E5">actual release timing of this is still a</font>

391
00:14:06,649 --> 00:14:09,799
bit up in<font color="#E5E5E5"> the air but if you think of</font>

392
00:14:08,389 --> 00:14:12,139
the many ways that<font color="#E5E5E5"> we've seen attackers</font>

393
00:14:09,799 --> 00:14:14,119
<font color="#CCCCCC">abused Python code to do malicious</font>

394
00:14:12,139 --> 00:14:15,379
things in real world attacks<font color="#E5E5E5"> it will</font>

395
00:14:14,119 --> 00:14:23,569
tremendously benefit from having<font color="#CCCCCC"> this</font>

396
00:14:15,379 --> 00:14:25,309
type of<font color="#CCCCCC"> auditability built-in so when we</font>

397
00:14:23,569 --> 00:14:27,049
first gave this talk<font color="#E5E5E5"> we also gave an</font>

398
00:14:25,309 --> 00:14:28,459
<font color="#CCCCCC">example and talked about</font><font color="#E5E5E5"> you know what</font>

399
00:14:27,049 --> 00:14:30,829
frameworks were using and leveraging

400
00:14:28,459 --> 00:14:32,660
<font color="#E5E5E5">PowerShell back then and I think</font>

401
00:14:30,829 --> 00:14:34,549
<font color="#CCCCCC">Metasploit had just introduced its first</font>

402
00:14:32,660 --> 00:14:35,689
<font color="#E5E5E5">powershell payload or the ability</font><font color="#CCCCCC"> to</font>

403
00:14:34,549 --> 00:14:38,389
interact<font color="#E5E5E5"> with powershell on a</font>

404
00:14:35,689 --> 00:14:40,309
compromised host<font color="#E5E5E5"> cobalt strike was about</font>

405
00:14:38,389 --> 00:14:43,449
a year old<font color="#E5E5E5"> and had just started kind of</font>

406
00:14:40,309 --> 00:14:45,199
ramping up<font color="#E5E5E5"> its capabilities and</font>

407
00:14:43,449 --> 00:14:48,979
<font color="#E5E5E5">powersploit didn't exist</font>

408
00:14:45,199 --> 00:14:51,229
it was entire<font color="#E5E5E5"> empire yeah yeah</font><font color="#CCCCCC"> Empire</font>

409
00:14:48,980 --> 00:14:52,549
didn't exist<font color="#CCCCCC"> power foot Empire didn't</font>

410
00:14:51,230 --> 00:14:54,949
even exist<font color="#CCCCCC"> yet and</font><font color="#E5E5E5"> we're gonna demo</font>

411
00:14:52,549 --> 00:14:56,889
<font color="#E5E5E5">Empire later but I checked its github</font>

412
00:14:54,949 --> 00:14:59,660
commit history<font color="#E5E5E5"> and it was actually after</font>

413
00:14:56,889 --> 00:15:02,689
<font color="#E5E5E5">2014 but one of the things that we've</font>

414
00:14:59,660 --> 00:15:04,669
<font color="#E5E5E5">seen is using</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> powershell for</font><font color="#CCCCCC"> attack</font>

415
00:15:02,689 --> 00:15:06,410
frameworks has been largely commoditized

416
00:15:04,669 --> 00:15:08,299
and<font color="#E5E5E5"> is used by a lot</font><font color="#CCCCCC"> of red teams that</font>

417
00:15:06,410 --> 00:15:11,179
are<font color="#E5E5E5"> out there</font><font color="#CCCCCC"> and thanks</font><font color="#E5E5E5"> to a lot</font><font color="#CCCCCC"> of the</font>

418
00:15:08,299 --> 00:15:13,249
advances in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> powershell technologies</font>

419
00:15:11,179 --> 00:15:15,470
for the blue teamers<font color="#E5E5E5"> it's become easier</font>

420
00:15:13,249 --> 00:15:18,410
<font color="#CCCCCC">and</font><font color="#E5E5E5"> easier to help detect this</font><font color="#CCCCCC"> type of</font>

421
00:15:15,470 --> 00:15:21,589
activities<font color="#CCCCCC"> but like</font><font color="#E5E5E5"> anything else</font><font color="#CCCCCC"> the</font>

422
00:15:18,410 --> 00:15:23,238
pendulum swings both ways<font color="#CCCCCC"> and so because</font>

423
00:15:21,589 --> 00:15:25,069
of<font color="#CCCCCC"> that we've also</font><font color="#E5E5E5"> seen a number</font><font color="#CCCCCC"> of</font>

424
00:15:23,239 --> 00:15:26,809
defensive<font color="#CCCCCC"> Asians start</font><font color="#E5E5E5"> popping up so</font>

425
00:15:25,069 --> 00:15:29,539
<font color="#E5E5E5">probably most</font><font color="#CCCCCC"> notably and the one that's</font>

426
00:15:26,809 --> 00:15:30,769
been talked about<font color="#E5E5E5"> a lot is Dana Bohannon</font>

427
00:15:29,539 --> 00:15:33,600
who's sitting right<font color="#CCCCCC"> here</font>

428
00:15:30,769 --> 00:15:35,640
<font color="#E5E5E5">his invoke obfuscation</font>

429
00:15:33,600 --> 00:15:38,460
which<font color="#E5E5E5"> basically takes any kind of</font>

430
00:15:35,640 --> 00:15:41,460
<font color="#E5E5E5">signature-based command line or you know</font>

431
00:15:38,460 --> 00:15:43,560
any auditing and alerting<font color="#E5E5E5"> and just</font>

432
00:15:41,460 --> 00:15:45,390
breaks it<font color="#E5E5E5"> apart</font><font color="#CCCCCC"> so it's really hard</font><font color="#E5E5E5"> to</font>

433
00:15:43,560 --> 00:15:46,619
<font color="#CCCCCC">then piece back together exactly</font><font color="#E5E5E5"> what</font>

434
00:15:45,390 --> 00:15:48,090
<font color="#CCCCCC">happened</font><font color="#E5E5E5"> when you're doing things</font><font color="#CCCCCC"> like</font>

435
00:15:46,620 --> 00:15:50,100
<font color="#E5E5E5">breaking apart everything with tick</font>

436
00:15:48,090 --> 00:15:52,440
marks and all the other cool evasion

437
00:15:50,100 --> 00:15:53,700
techniques that he built into this<font color="#E5E5E5"> some</font>

438
00:15:52,440 --> 00:15:55,350
of<font color="#E5E5E5"> the other ones that I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> are</font>

439
00:15:53,700 --> 00:15:57,270
pretty notable<font color="#E5E5E5"> are some of the script</font>

440
00:15:55,350 --> 00:16:00,870
<font color="#E5E5E5">bypassing all together so there's things</font>

441
00:15:57,270 --> 00:16:03,329
<font color="#E5E5E5">to bypass the</font><font color="#CCCCCC"> a MSI actual prevention</font>

442
00:16:00,870 --> 00:16:05,460
module and built<font color="#E5E5E5"> into PowerShell as well</font>

443
00:16:03,330 --> 00:16:08,100
as ways to<font color="#CCCCCC"> turn off logging so we'll</font>

444
00:16:05,460 --> 00:16:10,020
talk<font color="#E5E5E5"> about etw as an a logging provider</font>

445
00:16:08,100 --> 00:16:12,210
later<font color="#E5E5E5"> you can actually you know turn</font>

446
00:16:10,020 --> 00:16:13,470
that off<font color="#CCCCCC"> and then finally I mentioned</font>

447
00:16:12,210 --> 00:16:14,970
you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> PowerShell downgrade attacks</font>

448
00:16:13,470 --> 00:16:17,370
<font color="#E5E5E5">that's still a very</font><font color="#CCCCCC"> real possibility</font>

449
00:16:14,970 --> 00:16:19,140
where even if you have PowerShell

450
00:16:17,370 --> 00:16:23,310
<font color="#CCCCCC">version 5 and all</font><font color="#E5E5E5"> the capabilities built</font>

451
00:16:19,140 --> 00:16:25,350
<font color="#CCCCCC">into it a well a well-funded attacker</font>

452
00:16:23,310 --> 00:16:27,119
can easily downgrade that<font color="#E5E5E5"> version of</font>

453
00:16:25,350 --> 00:16:31,380
<font color="#E5E5E5">PowerShell to</font><font color="#CCCCCC"> then force</font><font color="#E5E5E5"> you back down</font>

454
00:16:27,120 --> 00:16:32,730
into<font color="#E5E5E5"> a 2.0 world but at least from what</font>

455
00:16:31,380 --> 00:16:35,670
we've seen<font color="#E5E5E5"> some in the field is</font>

456
00:16:32,730 --> 00:16:37,740
attackers<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> necessarily have</font><font color="#CCCCCC"> to</font>

457
00:16:35,670 --> 00:16:39,959
invoke all of these to remain successful

458
00:16:37,740 --> 00:16:42,120
<font color="#E5E5E5">so here's a couple</font><font color="#CCCCCC"> examples the</font><font color="#E5E5E5"> first</font>

459
00:16:39,960 --> 00:16:44,820
<font color="#E5E5E5">one is from a fire I blog post</font><font color="#CCCCCC"> sighting</font>

460
00:16:42,120 --> 00:16:47,070
<font color="#E5E5E5">apt 32 and in this case what they're</font>

461
00:16:44,820 --> 00:16:48,540
actually<font color="#CCCCCC"> using is a scheduled</font><font color="#E5E5E5"> task that</font>

462
00:16:47,070 --> 00:16:50,040
they're<font color="#E5E5E5"> setting to invoke PowerShell and</font>

463
00:16:48,540 --> 00:16:51,990
<font color="#E5E5E5">if you look at the the download string</font>

464
00:16:50,040 --> 00:16:53,069
or the<font color="#E5E5E5"> actual command line it's</font>

465
00:16:51,990 --> 00:16:55,200
something that can be<font color="#E5E5E5"> pretty easily</font>

466
00:16:53,070 --> 00:16:56,580
<font color="#E5E5E5">signatures off of and you</font><font color="#CCCCCC"> know if you're</font>

467
00:16:55,200 --> 00:16:59,510
not<font color="#E5E5E5"> flagging this today you probably</font>

468
00:16:56,580 --> 00:17:02,490
<font color="#E5E5E5">should be the second one is another post</font>

469
00:16:59,510 --> 00:17:04,890
citing<font color="#E5E5E5"> a crypto minor attacker again</font>

470
00:17:02,490 --> 00:17:07,500
<font color="#CCCCCC">it's also a</font><font color="#E5E5E5"> scheduled task that's just</font>

471
00:17:04,890 --> 00:17:09,000
ultimately<font color="#CCCCCC"> setting a suspicious-looking</font>

472
00:17:07,500 --> 00:17:11,369
command line there's nothing really

473
00:17:09,000 --> 00:17:13,050
tricky there couple<font color="#E5E5E5"> more</font><font color="#CCCCCC"> examples</font>

474
00:17:11,369 --> 00:17:14,698
<font color="#CCCCCC">probably the</font><font color="#E5E5E5"> most interesting one I</font>

475
00:17:13,050 --> 00:17:16,680
thought<font color="#E5E5E5"> was cool was the second one</font>

476
00:17:14,699 --> 00:17:18,660
where they're<font color="#CCCCCC"> actually sitting</font><font color="#E5E5E5"> at W my</font>

477
00:17:16,680 --> 00:17:21,329
property<font color="#CCCCCC"> and value</font><font color="#E5E5E5"> and then reading data</font>

478
00:17:18,660 --> 00:17:23,400
<font color="#E5E5E5">from</font><font color="#CCCCCC"> that value</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then piping it into</font>

479
00:17:21,329 --> 00:17:25,740
the command<font color="#CCCCCC"> line</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> still</font><font color="#E5E5E5"> if you see</font>

480
00:17:23,400 --> 00:17:28,860
that you're gonna signature off it like

481
00:17:25,740 --> 00:17:30,210
there's<font color="#E5E5E5"> no and I'll say this</font><font color="#CCCCCC"> and I'll</font>

482
00:17:28,860 --> 00:17:32,010
always be wrong<font color="#CCCCCC"> and I say there's no</font>

483
00:17:30,210 --> 00:17:33,360
<font color="#E5E5E5">legitimate</font><font color="#CCCCCC"> way that someone</font><font color="#E5E5E5"> would be</font>

484
00:17:32,010 --> 00:17:34,620
<font color="#E5E5E5">running</font><font color="#CCCCCC"> this and you're</font><font color="#E5E5E5"> gonna go back</font>

485
00:17:33,360 --> 00:17:36,389
<font color="#CCCCCC">and find something</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> can promise you</font>

486
00:17:34,620 --> 00:17:38,100
that<font color="#CCCCCC"> yeah the bottom</font><font color="#E5E5E5"> line is that if</font>

487
00:17:36,390 --> 00:17:40,590
you're<font color="#E5E5E5"> looking for some of the most</font>

488
00:17:38,100 --> 00:17:42,179
commonly<font color="#E5E5E5"> abused PowerShell command line</font>

489
00:17:40,590 --> 00:17:43,800
arguments<font color="#E5E5E5"> and methods you're going to</font>

490
00:17:42,180 --> 00:17:45,750
still catch a tremendous amount<font color="#E5E5E5"> of</font>

491
00:17:43,800 --> 00:17:47,220
activity<font color="#E5E5E5"> including</font><font color="#CCCCCC"> a lot of so-called</font>

492
00:17:45,750 --> 00:17:50,880
targeted<font color="#E5E5E5"> advanced bad</font>

493
00:17:47,220 --> 00:17:52,680
not a<font color="#CCCCCC"> hundred percent</font><font color="#E5E5E5"> but the attackers</font>

494
00:17:50,880 --> 00:17:54,630
are<font color="#CCCCCC"> still in why</font><font color="#E5E5E5"> it's killer using</font>

495
00:17:52,680 --> 00:17:56,130
<font color="#E5E5E5">things that work and are simple yeah I</font>

496
00:17:54,630 --> 00:17:58,290
mean<font color="#E5E5E5"> there's no perfect solution there's</font>

497
00:17:56,130 --> 00:17:59,880
no silver<font color="#E5E5E5"> bullet</font><font color="#CCCCCC"> to security</font><font color="#E5E5E5"> and we'll</font>

498
00:17:58,290 --> 00:18:01,139
have to continue<font color="#CCCCCC"> to</font><font color="#E5E5E5"> move the ball for it</font>

499
00:17:59,880 --> 00:18:03,150
in<font color="#CCCCCC"> advance and know</font><font color="#E5E5E5"> that you know</font>

500
00:18:01,140 --> 00:18:05,130
whatever<font color="#CCCCCC"> protections and methods of</font>

501
00:18:03,150 --> 00:18:06,750
detection we put in place<font color="#CCCCCC"> there's always</font>

502
00:18:05,130 --> 00:18:08,010
gonna be some way to go around<font color="#CCCCCC"> it but</font>

503
00:18:06,750 --> 00:18:10,470
<font color="#E5E5E5">that doesn't</font><font color="#CCCCCC"> necessarily</font><font color="#E5E5E5"> mean</font><font color="#CCCCCC"> we should</font>

504
00:18:08,010 --> 00:18:12,930
do<font color="#CCCCCC"> anything at all</font><font color="#E5E5E5"> here's a couple</font><font color="#CCCCCC"> other</font>

505
00:18:10,470 --> 00:18:14,490
<font color="#CCCCCC">statistics</font><font color="#E5E5E5"> you know from I think</font><font color="#CCCCCC"> in this</font>

506
00:18:12,930 --> 00:18:17,160
<font color="#E5E5E5">case this one's from Symantec citing</font>

507
00:18:14,490 --> 00:18:18,870
<font color="#E5E5E5">that only</font><font color="#CCCCCC"> 4% of reviewed malicious code</font>

508
00:18:17,160 --> 00:18:22,230
actually<font color="#E5E5E5"> used in the form of</font><font color="#CCCCCC"> off you</font>

509
00:18:18,870 --> 00:18:24,959
station but at the same<font color="#E5E5E5"> time you see</font>

510
00:18:22,230 --> 00:18:26,640
between<font color="#E5E5E5"> q1 and q2 of this year the</font>

511
00:18:24,960 --> 00:18:28,650
amount of power shell being<font color="#E5E5E5"> used</font><font color="#CCCCCC"> has</font>

512
00:18:26,640 --> 00:18:30,180
almost doubled<font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> another</font>

513
00:18:28,650 --> 00:18:32,040
<font color="#E5E5E5">example of attackers just being able to</font>

514
00:18:30,180 --> 00:18:34,110
more<font color="#E5E5E5"> or less hide in plain sight without</font>

515
00:18:32,040 --> 00:18:36,450
<font color="#E5E5E5">needing to go into the office</font><font color="#CCCCCC"> station</font>

516
00:18:34,110 --> 00:18:37,860
world so as a blue team or if you're

517
00:18:36,450 --> 00:18:39,930
looking<font color="#CCCCCC"> at you</font><font color="#E5E5E5"> know ways of identifying</font>

518
00:18:37,860 --> 00:18:41,850
<font color="#CCCCCC">and detecting malicious PowerShell code</font>

519
00:18:39,930 --> 00:18:43,620
<font color="#CCCCCC">one of the first places to</font><font color="#E5E5E5"> start is</font><font color="#CCCCCC"> by</font>

520
00:18:41,850 --> 00:18:45,810
baselining what legitimate PowerShell

521
00:18:43,620 --> 00:18:47,429
usage looks like your environment<font color="#E5E5E5"> and I</font>

522
00:18:45,810 --> 00:18:48,810
know this<font color="#E5E5E5"> sounds</font><font color="#CCCCCC"> like meat and</font><font color="#E5E5E5"> potatoes</font>

523
00:18:47,430 --> 00:18:50,460
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> security practices but it's</font>

524
00:18:48,810 --> 00:18:51,810
actually pretty<font color="#CCCCCC"> hard to do</font><font color="#E5E5E5"> especially</font>

525
00:18:50,460 --> 00:18:53,250
<font color="#E5E5E5">when you're dealing in heterogeneous</font>

526
00:18:51,810 --> 00:18:54,450
environments with different<font color="#CCCCCC"> types of</font>

527
00:18:53,250 --> 00:18:57,180
administrators who don't necessarily

528
00:18:54,450 --> 00:18:58,440
<font color="#CCCCCC">follow the same practices</font><font color="#E5E5E5"> but you know</font>

529
00:18:57,180 --> 00:19:00,090
if you are<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> to implement</font>

530
00:18:58,440 --> 00:19:02,220
<font color="#E5E5E5">something</font><font color="#CCCCCC"> like this baselining that</font>

531
00:19:00,090 --> 00:19:03,629
activity is a<font color="#E5E5E5"> great first step</font><font color="#CCCCCC"> and</font>

532
00:19:02,220 --> 00:19:05,220
<font color="#E5E5E5">especially doing it over time like if</font>

533
00:19:03,630 --> 00:19:06,390
you just<font color="#E5E5E5"> take a point-in-time snapshot</font>

534
00:19:05,220 --> 00:19:08,430
you're not gonna get a full picture

535
00:19:06,390 --> 00:19:10,860
you're not<font color="#CCCCCC"> gonna see that like</font><font color="#E5E5E5"> group</font>

536
00:19:08,430 --> 00:19:13,200
policy script<font color="#E5E5E5"> a CCM job that happens to</font>

537
00:19:10,860 --> 00:19:14,729
run once a week or once a month<font color="#E5E5E5"> but over</font>

538
00:19:13,200 --> 00:19:15,930
time<font color="#E5E5E5"> you can actually start the baseline</font>

539
00:19:14,730 --> 00:19:18,000
<font color="#E5E5E5">and understand what is the enterprise</font>

540
00:19:15,930 --> 00:19:19,620
tooling in my environment<font color="#E5E5E5"> that is</font>

541
00:19:18,000 --> 00:19:21,120
leveraging PowerShell<font color="#CCCCCC"> and use</font><font color="#E5E5E5"> that to</font>

542
00:19:19,620 --> 00:19:24,719
set<font color="#E5E5E5"> that baseline and keep it accurate</font>

543
00:19:21,120 --> 00:19:27,149
<font color="#E5E5E5">and</font><font color="#CCCCCC"> up to date so where do I think</font><font color="#E5E5E5"> we're</font>

544
00:19:24,720 --> 00:19:28,380
going<font color="#CCCCCC"> you know as the you know as the</font>

545
00:19:27,150 --> 00:19:30,150
field starts to catch up<font color="#CCCCCC"> the research</font>

546
00:19:28,380 --> 00:19:32,910
community continues<font color="#CCCCCC"> to move</font><font color="#E5E5E5"> forward</font><font color="#CCCCCC"> and</font>

547
00:19:30,150 --> 00:19:34,710
so as<font color="#CCCCCC"> PowerShell the you know the</font>

548
00:19:32,910 --> 00:19:37,020
interpreted language continues<font color="#E5E5E5"> to add</font>

549
00:19:34,710 --> 00:19:39,390
additional defensive capabilities and

550
00:19:37,020 --> 00:19:40,470
ways to<font color="#CCCCCC"> keep</font><font color="#E5E5E5"> people out it seems like</font>

551
00:19:39,390 --> 00:19:42,630
the<font color="#E5E5E5"> communities just going below</font>

552
00:19:40,470 --> 00:19:44,910
PowerShell and<font color="#E5E5E5"> so what we see now</font><font color="#CCCCCC"> is an</font>

553
00:19:42,630 --> 00:19:48,030
emphasis<font color="#CCCCCC"> on</font><font color="#E5E5E5"> dotnet attacks and so I've</font>

554
00:19:44,910 --> 00:19:49,620
<font color="#E5E5E5">kind of submitted our abstract for rukon</font>

555
00:19:48,030 --> 00:19:52,080
2020<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> just gonna be</font><font color="#CCCCCC"> doing</font>

556
00:19:49,620 --> 00:19:54,540
investigating<font color="#E5E5E5"> Dec at dot netic attacks</font>

557
00:19:52,080 --> 00:19:55,800
and I think two<font color="#CCCCCC"> weeks ago</font><font color="#E5E5E5"> Ryan Cobb</font>

558
00:19:54,540 --> 00:19:57,510
who's one of the the<font color="#CCCCCC"> spectre ops</font>

559
00:19:55,800 --> 00:19:59,260
consultants just released a completely

560
00:19:57,510 --> 00:20:02,110
c-sharp tool based

561
00:19:59,260 --> 00:20:03,850
for post exploitation<font color="#E5E5E5"> and so rather than</font>

562
00:20:02,110 --> 00:20:05,290
<font color="#E5E5E5">rely on</font><font color="#CCCCCC"> PowerShell he wrote the entire</font>

563
00:20:03,850 --> 00:20:07,419
<font color="#E5E5E5">thing in c-sharp and I'm gonna give a</font>

564
00:20:05,290 --> 00:20:08,680
demo of<font color="#E5E5E5"> what</font><font color="#CCCCCC"> that looks like later</font><font color="#E5E5E5"> but</font>

565
00:20:07,420 --> 00:20:11,110
one of<font color="#E5E5E5"> the big</font><font color="#CCCCCC"> advantages of going</font>

566
00:20:08,680 --> 00:20:13,150
<font color="#E5E5E5">straight to c-sharp</font><font color="#CCCCCC"> is that you bypass a</font>

567
00:20:11,110 --> 00:20:14,800
<font color="#E5E5E5">lot of what the</font><font color="#CCCCCC"> the scripting options</font>

568
00:20:13,150 --> 00:20:20,740
are<font color="#CCCCCC"> sorry the logging</font><font color="#E5E5E5"> options are in</font>

569
00:20:14,800 --> 00:20:23,110
PowerShell so when we were<font color="#CCCCCC"> updating this</font>

570
00:20:20,740 --> 00:20:24,370
talk for<font color="#CCCCCC"> brew GaN one of the things we</font>

571
00:20:23,110 --> 00:20:25,959
wanted to<font color="#E5E5E5"> do is talk</font><font color="#CCCCCC"> about what's</font>

572
00:20:24,370 --> 00:20:26,439
<font color="#CCCCCC">changed with the latest and greatest in</font>

573
00:20:25,960 --> 00:20:28,950
PowerShell

574
00:20:26,440 --> 00:20:31,300
and what's interesting is<font color="#E5E5E5"> PowerShell v6</font>

575
00:20:28,950 --> 00:20:33,820
<font color="#CCCCCC">pretty much changes everything</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's</font>

576
00:20:31,300 --> 00:20:36,430
not<font color="#CCCCCC"> really</font><font color="#E5E5E5"> an overstatement</font><font color="#CCCCCC"> so for one</font>

577
00:20:33,820 --> 00:20:38,379
it now has this awesome mascot which

578
00:20:36,430 --> 00:20:40,840
cleverly has the power<font color="#E5E5E5"> shell like</font>

579
00:20:38,380 --> 00:20:43,120
console logo in her face which is<font color="#E5E5E5"> kind</font>

580
00:20:40,840 --> 00:20:46,270
of weird<font color="#E5E5E5"> but I guess makes PowerShell</font>

581
00:20:43,120 --> 00:20:49,330
cool and fun but yeah PowerShell<font color="#E5E5E5"> 6 that</font>

582
00:20:46,270 --> 00:20:50,860
<font color="#CCCCCC">oh</font><font color="#E5E5E5"> the most</font><font color="#CCCCCC"> fundamental change</font><font color="#E5E5E5"> to it and</font>

583
00:20:49,330 --> 00:20:53,320
the<font color="#E5E5E5"> reason why there's so many</font>

584
00:20:50,860 --> 00:20:56,709
downstream impact to<font color="#CCCCCC"> that is it is not</font>

585
00:20:53,320 --> 00:20:58,350
<font color="#CCCCCC">based on the.net core 6.0 runtime</font><font color="#E5E5E5"> which</font>

586
00:20:56,710 --> 00:21:00,880
is<font color="#E5E5E5"> meant</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be fully open source and</font>

587
00:20:58,350 --> 00:21:02,679
cross-platform compatible so that you

588
00:21:00,880 --> 00:21:07,210
can build on Windows Mac and Linux

589
00:21:02,680 --> 00:21:09,460
equally to preserve the fact that dotnet

590
00:21:07,210 --> 00:21:12,300
core<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> contain a lot of the</font>

591
00:21:09,460 --> 00:21:14,620
<font color="#CCCCCC">components that dotnet proper does</font>

592
00:21:12,300 --> 00:21:16,750
<font color="#CCCCCC">Microsoft opted to actually make this a</font>

593
00:21:14,620 --> 00:21:19,479
fork<font color="#CCCCCC"> rather than an outright replacement</font>

594
00:21:16,750 --> 00:21:21,400
<font color="#E5E5E5">so you can install</font><font color="#CCCCCC"> PowerShell v6</font><font color="#E5E5E5"> side by</font>

595
00:21:19,480 --> 00:21:23,940
<font color="#E5E5E5">side with PowerShell v5 on a system and</font>

596
00:21:21,400 --> 00:21:27,610
it in<font color="#CCCCCC"> fact has its own separate shell</font>

597
00:21:23,940 --> 00:21:29,620
<font color="#CCCCCC">PWSA check see</font><font color="#E5E5E5"> where you can live in</font>

598
00:21:27,610 --> 00:21:31,120
<font color="#CCCCCC">that PowerShell v6 run space and run it</font>

599
00:21:29,620 --> 00:21:34,239
side<font color="#CCCCCC"> by side</font><font color="#E5E5E5"> with the PowerShell V saw</font>

600
00:21:31,120 --> 00:21:35,879
v5 run space<font color="#E5E5E5"> so what does that mean for</font>

601
00:21:34,240 --> 00:21:39,070
auditing<font color="#CCCCCC"> there's a new event</font><font color="#E5E5E5"> log</font>

602
00:21:35,880 --> 00:21:41,590
<font color="#CCCCCC">powershell core</font><font color="#E5E5E5"> slash operational there</font>

603
00:21:39,070 --> 00:21:42,970
<font color="#E5E5E5">is a new event tracing gooood again</font><font color="#CCCCCC"> Matt</font>

604
00:21:41,590 --> 00:21:45,340
<font color="#CCCCCC">will talk a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more about etw</font>

605
00:21:42,970 --> 00:21:47,020
later<font color="#CCCCCC"> but</font><font color="#E5E5E5"> that's the</font><font color="#CCCCCC"> goo</font><font color="#E5E5E5"> it for that</font>

606
00:21:45,340 --> 00:21:48,820
provider<font color="#E5E5E5"> and then finally there are</font>

607
00:21:47,020 --> 00:21:51,850
<font color="#E5E5E5">configuration files that specifically</font>

608
00:21:48,820 --> 00:21:54,280
<font color="#E5E5E5">impact the audit settings for</font><font color="#CCCCCC"> PowerShell</font>

609
00:21:51,850 --> 00:21:55,419
and we will go<font color="#E5E5E5"> into those</font><font color="#CCCCCC"> in just</font><font color="#E5E5E5"> a</font>

610
00:21:54,280 --> 00:21:58,240
second but those are the three I've

611
00:21:55,420 --> 00:22:00,520
listed there<font color="#CCCCCC"> the nice thing is that the</font>

612
00:21:58,240 --> 00:22:02,770
events and<font color="#E5E5E5"> the event IDs at least for</font>

613
00:22:00,520 --> 00:22:05,860
the time<font color="#CCCCCC"> being</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> as of PowerShell</font>

614
00:22:02,770 --> 00:22:07,870
6.1 are exactly<font color="#E5E5E5"> the same as PowerShell 5</font>

615
00:22:05,860 --> 00:22:10,120
so for example the<font color="#E5E5E5"> event ID for script</font>

616
00:22:07,870 --> 00:22:12,379
<font color="#CCCCCC">fog</font><font color="#E5E5E5"> locking script block logging I</font>

617
00:22:10,120 --> 00:22:13,639
should say is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> same in in this</font>

618
00:22:12,380 --> 00:22:16,310
that log as it would be<font color="#CCCCCC"> in the</font>

619
00:22:13,640 --> 00:22:18,560
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> 5 and prior</font><font color="#E5E5E5"> event log so</font>

620
00:22:16,310 --> 00:22:20,840
that's not any<font color="#E5E5E5"> different</font>

621
00:22:18,560 --> 00:22:23,330
I mentioned<font color="#E5E5E5"> a JSON configuration file</font>

622
00:22:20,840 --> 00:22:25,070
<font color="#E5E5E5">just</font><font color="#CCCCCC"> the slide ago</font><font color="#E5E5E5"> so this is where you</font>

623
00:22:23,330 --> 00:22:26,870
can<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> configure the settings</font><font color="#CCCCCC"> for</font>

624
00:22:25,070 --> 00:22:29,210
things like<font color="#E5E5E5"> what types</font><font color="#CCCCCC"> and what levels</font>

625
00:22:26,870 --> 00:22:30,530
of<font color="#E5E5E5"> auditing are enabled you can</font><font color="#CCCCCC"> see here</font>

626
00:22:29,210 --> 00:22:32,660
we've got a<font color="#E5E5E5"> section for script</font><font color="#CCCCCC"> lock</font>

627
00:22:30,530 --> 00:22:34,280
logging here we have something<font color="#E5E5E5"> for</font>

628
00:22:32,660 --> 00:22:36,620
execution policy<font color="#E5E5E5"> here we have the</font>

629
00:22:34,280 --> 00:22:38,389
transcription<font color="#CCCCCC"> settings and this is</font>

630
00:22:36,620 --> 00:22:41,260
what's basically<font color="#E5E5E5"> processed to determine</font>

631
00:22:38,390 --> 00:22:43,310
how PowerShell is configured in in PS v6

632
00:22:41,260 --> 00:22:45,320
one of the interesting ways<font color="#E5E5E5"> that you</font>

633
00:22:43,310 --> 00:22:47,629
interact with<font color="#E5E5E5"> this to actually enable</font>

634
00:22:45,320 --> 00:22:49,429
and register a<font color="#E5E5E5"> configuration if you've</font>

635
00:22:47,630 --> 00:22:52,430
<font color="#E5E5E5">changed or added something like that is</font>

636
00:22:49,430 --> 00:22:54,620
a script that<font color="#E5E5E5"> is shown</font><font color="#CCCCCC"> here register</font>

637
00:22:52,430 --> 00:22:56,600
manifest<font color="#CCCCCC"> IPS 1 so if your administrator</font>

638
00:22:54,620 --> 00:22:58,370
on an<font color="#CCCCCC"> endpoint and you run</font><font color="#E5E5E5"> that script</font>

639
00:22:56,600 --> 00:23:00,230
you're effectively registering whatever

640
00:22:58,370 --> 00:23:02,090
configuration<font color="#CCCCCC"> is serialized in</font><font color="#E5E5E5"> that JSON</font>

641
00:23:00,230 --> 00:23:04,220
file and then what's also interesting

642
00:23:02,090 --> 00:23:06,379
<font color="#E5E5E5">about that is if I run this simple</font>

643
00:23:04,220 --> 00:23:07,910
unregister switch<font color="#CCCCCC"> I now</font><font color="#E5E5E5"> disabled</font>

644
00:23:06,380 --> 00:23:09,980
whatever<font color="#E5E5E5"> settings have been</font><font color="#CCCCCC"> enabled and</font>

645
00:23:07,910 --> 00:23:13,850
so it is<font color="#E5E5E5"> actually that simple to turn</font>

646
00:23:09,980 --> 00:23:15,350
off auditing<font color="#E5E5E5"> in</font><font color="#CCCCCC"> powershell 6.1 as long</font>

647
00:23:13,850 --> 00:23:19,219
as you have sufficient<font color="#E5E5E5"> privileges to do</font>

648
00:23:15,350 --> 00:23:20,750
so now<font color="#E5E5E5"> that leads to the natural</font>

649
00:23:19,220 --> 00:23:23,210
<font color="#CCCCCC">question well how do you determine if</font>

650
00:23:20,750 --> 00:23:25,550
someone<font color="#E5E5E5"> turned it off there is no event</font>

651
00:23:23,210 --> 00:23:27,140
that actually<font color="#CCCCCC"> is thrown in the event</font>

652
00:23:25,550 --> 00:23:29,419
logs when you run<font color="#E5E5E5"> that unregister</font>

653
00:23:27,140 --> 00:23:31,700
command however<font color="#E5E5E5"> it is captured in</font>

654
00:23:29,420 --> 00:23:33,230
transcription logging<font color="#E5E5E5"> so one of the nice</font>

655
00:23:31,700 --> 00:23:35,690
<font color="#E5E5E5">things as transcription logging is</font>

656
00:23:33,230 --> 00:23:37,370
actually enabled by<font color="#CCCCCC"> default</font><font color="#E5E5E5"> so if you</font>

657
00:23:35,690 --> 00:23:39,650
have transcription logging you'll

658
00:23:37,370 --> 00:23:41,300
actually see the command line of running

659
00:23:39,650 --> 00:23:43,040
that<font color="#CCCCCC"> unregistered command captured and</font>

660
00:23:41,300 --> 00:23:44,510
you can look<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that to identify if</font>

661
00:23:43,040 --> 00:23:46,550
someone's tampering with logging<font color="#E5E5E5"> or not</font>

662
00:23:44,510 --> 00:23:48,950
but at least as of<font color="#CCCCCC"> the initial research</font>

663
00:23:46,550 --> 00:23:50,659
<font color="#E5E5E5">we did</font><font color="#CCCCCC"> we didn't find a discrete event</font>

664
00:23:48,950 --> 00:23:54,290
<font color="#E5E5E5">that was thrown when a config change</font>

665
00:23:50,660 --> 00:23:57,020
like<font color="#CCCCCC"> that happened another</font><font color="#E5E5E5"> thing that's</font>

666
00:23:54,290 --> 00:24:00,050
interesting is in addition<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the JSON</font>

667
00:23:57,020 --> 00:24:02,120
configuration so that<font color="#CCCCCC"> organizations</font>

668
00:24:00,050 --> 00:24:04,790
could<font color="#E5E5E5"> configure</font><font color="#CCCCCC"> powershell 6 logging via</font>

669
00:24:02,120 --> 00:24:06,320
group policy<font color="#CCCCCC"> they also added a means by</font>

670
00:24:04,790 --> 00:24:08,030
which<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do so with a registry</font>

671
00:24:06,320 --> 00:24:10,700
change and so that's what's<font color="#CCCCCC"> outlined in</font>

672
00:24:08,030 --> 00:24:12,379
this slide here<font color="#CCCCCC"> and you can see some of</font>

673
00:24:10,700 --> 00:24:14,000
the underlying<font color="#E5E5E5"> code that i've snippet</font>

674
00:24:12,380 --> 00:24:16,790
<font color="#CCCCCC">adhere just</font><font color="#E5E5E5"> showing you what the key</font>

675
00:24:14,000 --> 00:24:18,950
value names and data art of<font color="#E5E5E5"> to toggle</font>

676
00:24:16,790 --> 00:24:20,750
<font color="#E5E5E5">the various settings again what's</font>

677
00:24:18,950 --> 00:24:23,240
interesting is if<font color="#CCCCCC"> you use the</font><font color="#E5E5E5"> register</font>

678
00:24:20,750 --> 00:24:25,380
<font color="#E5E5E5">manifest grip it doesn't actually set</font>

679
00:24:23,240 --> 00:24:27,240
the registry keys to reflect<font color="#E5E5E5"> whatever</font>

680
00:24:25,380 --> 00:24:29,700
<font color="#E5E5E5">the configuration JSON so they're kind</font>

681
00:24:27,240 --> 00:24:32,220
<font color="#E5E5E5">of kept independently</font><font color="#CCCCCC"> didn't have</font><font color="#E5E5E5"> time</font>

682
00:24:29,700 --> 00:24:35,070
<font color="#CCCCCC">to like deeply research how the system D</font>

683
00:24:32,220 --> 00:24:37,200
conflicts if you have like conflicting

684
00:24:35,070 --> 00:24:39,000
configurations between the JSON and

685
00:24:37,200 --> 00:24:41,400
<font color="#E5E5E5">what's in the registry but know</font><font color="#CCCCCC"> that if</font>

686
00:24:39,000 --> 00:24:43,650
I just<font color="#E5E5E5"> run</font><font color="#CCCCCC"> the script on its own I'm</font><font color="#E5E5E5"> not</font>

687
00:24:41,400 --> 00:24:45,720
creating or setting<font color="#E5E5E5"> what's in the</font>

688
00:24:43,650 --> 00:24:47,340
registry<font color="#CCCCCC"> you have to do that</font><font color="#E5E5E5"> separately</font>

689
00:24:45,720 --> 00:24:48,750
it's managed completely<font color="#CCCCCC"> out-of-band</font><font color="#E5E5E5"> and</font>

690
00:24:47,340 --> 00:24:51,360
<font color="#E5E5E5">again</font><font color="#CCCCCC"> i think the purpose for that was</font>

691
00:24:48,750 --> 00:24:54,180
an<font color="#E5E5E5"> enabler</font><font color="#CCCCCC"> for group policy to</font><font color="#E5E5E5"> interact</font>

692
00:24:51,360 --> 00:24:56,189
with<font color="#CCCCCC"> these settings and then finally</font>

693
00:24:54,180 --> 00:24:58,410
there<font color="#CCCCCC"> is a persistent</font><font color="#E5E5E5"> command history</font>

694
00:24:56,190 --> 00:25:00,270
<font color="#E5E5E5">which you can think</font><font color="#CCCCCC"> of akin to bash</font>

695
00:24:58,410 --> 00:25:02,820
history<font color="#CCCCCC"> matt had actually caught this</font>

696
00:25:00,270 --> 00:25:05,730
<font color="#E5E5E5">one doing</font><font color="#CCCCCC"> his testing</font><font color="#E5E5E5"> with me on this</font>

697
00:25:02,820 --> 00:25:08,460
and<font color="#E5E5E5"> so there's a history text or console</font>

698
00:25:05,730 --> 00:25:11,340
host history text file<font color="#E5E5E5"> that you'll find</font>

699
00:25:08,460 --> 00:25:14,820
within the specified path there you can

700
00:25:11,340 --> 00:25:16,199
also look at what<font color="#CCCCCC"> does that get PS read</font>

701
00:25:14,820 --> 00:25:17,580
line option again is<font color="#E5E5E5"> that the settings</font>

702
00:25:16,200 --> 00:25:20,070
<font color="#CCCCCC">are that's</font><font color="#E5E5E5"> the setting that's the</font>

703
00:25:17,580 --> 00:25:22,050
settings right<font color="#E5E5E5"> but that text file will</font>

704
00:25:20,070 --> 00:25:23,460
give you<font color="#E5E5E5"> just like</font><font color="#CCCCCC"> bash history a</font>

705
00:25:22,050 --> 00:25:25,440
complete rundown of everything<font color="#CCCCCC"> that</font>

706
00:25:23,460 --> 00:25:27,450
executed and so<font color="#E5E5E5"> even if you have</font>

707
00:25:25,440 --> 00:25:30,980
transcription logging disabled<font color="#E5E5E5"> the</font>

708
00:25:27,450 --> 00:25:34,110
command history<font color="#E5E5E5"> to a default I think</font><font color="#CCCCCC"> of</font>

709
00:25:30,980 --> 00:25:35,490
<font color="#E5E5E5">4096 commands will tell you everything</font>

710
00:25:34,110 --> 00:25:36,870
that ran so that could be<font color="#CCCCCC"> another way</font>

711
00:25:35,490 --> 00:25:40,470
that you could<font color="#E5E5E5"> determine for instance</font>

712
00:25:36,870 --> 00:25:41,639
whether someone disabled<font color="#E5E5E5"> logging</font><font color="#CCCCCC"> all</font>

713
00:25:40,470 --> 00:25:45,960
<font color="#CCCCCC">right so that's</font><font color="#E5E5E5"> what's updated with</font>

714
00:25:41,640 --> 00:25:48,510
<font color="#E5E5E5">PowerShell v6 on to our second talk from</font>

715
00:25:45,960 --> 00:25:50,730
<font color="#E5E5E5">2015 on desired state configuration</font><font color="#CCCCCC"> so</font>

716
00:25:48,510 --> 00:25:52,830
we were<font color="#E5E5E5"> fortunate enough to</font><font color="#CCCCCC"> come</font><font color="#E5E5E5"> back to</font>

717
00:25:50,730 --> 00:25:54,840
<font color="#CCCCCC">brew con the following year in 2015</font><font color="#E5E5E5"> and</font>

718
00:25:52,830 --> 00:25:58,040
gave a talk<font color="#CCCCCC"> on</font><font color="#E5E5E5"> a subject that we were</font>

719
00:25:54,840 --> 00:26:01,350
sure at the<font color="#CCCCCC"> time was going to be</font><font color="#E5E5E5"> huge</font>

720
00:25:58,040 --> 00:26:02,760
and<font color="#CCCCCC"> it was</font><font color="#E5E5E5"> based on some something</font><font color="#CCCCCC"> Ryan</font>

721
00:26:01,350 --> 00:26:04,709
had found which<font color="#CCCCCC"> was desired state</font>

722
00:26:02,760 --> 00:26:07,830
<font color="#CCCCCC">configuration which is basically an</font>

723
00:26:04,710 --> 00:26:09,830
out-of-band means of managing<font color="#E5E5E5"> systems to</font>

724
00:26:07,830 --> 00:26:11,879
a desired<font color="#E5E5E5"> state it's really</font><font color="#CCCCCC"> designed for</font>

725
00:26:09,830 --> 00:26:14,100
servers<font color="#E5E5E5"> that you need to</font><font color="#CCCCCC"> manage that or</font>

726
00:26:11,880 --> 00:26:16,020
<font color="#CCCCCC">let's say</font><font color="#E5E5E5"> built in the azure cloud or</font>

727
00:26:14,100 --> 00:26:18,449
just somewhere off premises where you

728
00:26:16,020 --> 00:26:19,680
<font color="#E5E5E5">wouldn't be able to to set them via GPO</font>

729
00:26:18,450 --> 00:26:22,800
or whatever it<font color="#E5E5E5"> is that you're using you</font>

730
00:26:19,680 --> 00:26:24,600
<font color="#CCCCCC">can to configure so we did this talk on</font>

731
00:26:22,800 --> 00:26:26,879
desired state<font color="#CCCCCC"> configuration and we</font>

732
00:26:24,600 --> 00:26:28,409
<font color="#E5E5E5">called</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> yes compromise</font><font color="#CCCCCC"> so good quick</font>

733
00:26:26,880 --> 00:26:32,280
show of hands how<font color="#CCCCCC"> many people know what</font>

734
00:26:28,410 --> 00:26:33,810
desired state<font color="#CCCCCC"> configuration is wow</font><font color="#E5E5E5"> that</font>

735
00:26:32,280 --> 00:26:34,770
is<font color="#E5E5E5"> a lot more</font><font color="#CCCCCC"> than where we do</font><font color="#E5E5E5"> this in</font>

736
00:26:33,810 --> 00:26:38,350
2015<font color="#E5E5E5"> yeah</font>

737
00:26:34,770 --> 00:26:41,090
it's<font color="#E5E5E5"> a it's going to take off any day</font>

738
00:26:38,350 --> 00:26:43,279
<font color="#E5E5E5">but what's cool about it</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that it does</font>

739
00:26:41,090 --> 00:26:45,259
<font color="#CCCCCC">allow you</font><font color="#E5E5E5"> to use an out-of-band method</font>

740
00:26:43,279 --> 00:26:47,299
to enforce configuration on a<font color="#CCCCCC"> machine</font>

741
00:26:45,259 --> 00:26:49,519
and that configuration<font color="#E5E5E5"> can be you</font><font color="#CCCCCC"> know</font>

742
00:26:47,299 --> 00:26:50,960
<font color="#E5E5E5">ensure services are set ensure processes</font>

743
00:26:49,519 --> 00:26:52,909
are running<font color="#CCCCCC"> insert user accounts are</font>

744
00:26:50,960 --> 00:26:56,090
<font color="#E5E5E5">president and in a specified directory</font>

745
00:26:52,909 --> 00:26:57,440
<font color="#CCCCCC">or</font><font color="#E5E5E5"> just run scripts</font><font color="#CCCCCC"> and so from a tech</font>

746
00:26:56,090 --> 00:26:58,999
perspective we thought thinking<font color="#E5E5E5"> about</font>

747
00:26:57,440 --> 00:27:01,100
<font color="#E5E5E5">what well what can we actually do with</font>

748
00:26:58,999 --> 00:27:02,299
<font color="#E5E5E5">this you know how can we set this up</font><font color="#CCCCCC"> and</font>

749
00:27:01,100 --> 00:27:03,738
the<font color="#E5E5E5"> first thing we did was understand</font>

750
00:27:02,299 --> 00:27:05,090
the<font color="#CCCCCC"> architecture so there's two</font>

751
00:27:03,739 --> 00:27:07,279
different means of what you can manage

752
00:27:05,090 --> 00:27:09,470
<font color="#E5E5E5">these systems either by a</font><font color="#CCCCCC"> poll or a push</font>

753
00:27:07,279 --> 00:27:11,840
message so if you're<font color="#E5E5E5"> pushing this is</font>

754
00:27:09,470 --> 00:27:14,029
going to use<font color="#E5E5E5"> win</font><font color="#CCCCCC"> RM so the same remoting</font>

755
00:27:11,840 --> 00:27:16,100
service that<font color="#CCCCCC"> PowerShell uses but if</font>

756
00:27:14,029 --> 00:27:20,509
you're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to use a pull this can be</font>

757
00:27:16,100 --> 00:27:22,100
done either via SMB HTTP or<font color="#CCCCCC"> HTTPS no</font>

758
00:27:20,509 --> 00:27:24,350
that's interesting<font color="#CCCCCC"> because</font><font color="#E5E5E5"> then you can</font>

759
00:27:22,100 --> 00:27:26,629
in theory set a<font color="#E5E5E5"> system on the</font><font color="#CCCCCC"> internet</font>

760
00:27:24,350 --> 00:27:28,369
<font color="#E5E5E5">have</font><font color="#CCCCCC"> it as a malicious configuration</font>

761
00:27:26,629 --> 00:27:30,738
server and then<font color="#E5E5E5"> compromise machine and</font>

762
00:27:28,369 --> 00:27:32,509
<font color="#CCCCCC">inside of a network</font><font color="#E5E5E5"> and configure it</font><font color="#CCCCCC"> to</font>

763
00:27:30,739 --> 00:27:34,820
go out<font color="#CCCCCC"> over HTTP to pull down it's</font>

764
00:27:32,509 --> 00:27:37,429
malicious config<font color="#CCCCCC"> and that's what we set</font>

765
00:27:34,820 --> 00:27:39,710
up<font color="#E5E5E5"> so a couple</font><font color="#CCCCCC"> of things that also made</font>

766
00:27:37,429 --> 00:27:42,049
this interesting<font color="#E5E5E5"> during</font><font color="#CCCCCC"> 2015 when we did</font>

767
00:27:39,710 --> 00:27:43,909
this talk<font color="#CCCCCC"> that we really cited this</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> a</font>

768
00:27:42,049 --> 00:27:46,190
means of an alternative persistence

769
00:27:43,909 --> 00:27:48,019
technique that allows for recom premised

770
00:27:46,190 --> 00:27:50,480
automatically<font color="#E5E5E5"> if a system is not</font>

771
00:27:48,019 --> 00:27:52,519
<font color="#E5E5E5">properly remediated so if you don't know</font>

772
00:27:50,480 --> 00:27:55,039
to<font color="#E5E5E5"> look</font><font color="#CCCCCC"> for this and you just let's say</font>

773
00:27:52,519 --> 00:27:57,139
delete<font color="#CCCCCC"> a file</font><font color="#E5E5E5"> remove a registry key kill</font>

774
00:27:55,039 --> 00:27:59,389
a process<font color="#E5E5E5"> we the system will</font>

775
00:27:57,139 --> 00:28:01,129
automatically reinfect itself<font color="#E5E5E5"> with no</font>

776
00:27:59,389 --> 00:28:03,139
need<font color="#CCCCCC"> for the attacker</font><font color="#E5E5E5"> to actually</font>

777
00:28:01,129 --> 00:28:04,100
interact<font color="#CCCCCC"> with that that</font><font color="#E5E5E5"> machine and so</font>

778
00:28:03,139 --> 00:28:05,629
if you're not<font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

779
00:28:04,100 --> 00:28:07,158
very quickly miss something like this

780
00:28:05,629 --> 00:28:08,658
<font color="#CCCCCC">the</font><font color="#E5E5E5"> other thing that we thought</font><font color="#CCCCCC"> was</font>

781
00:28:07,159 --> 00:28:11,629
interesting is that<font color="#E5E5E5"> this was not</font>

782
00:28:08,659 --> 00:28:13,519
captured<font color="#E5E5E5"> by</font><font color="#CCCCCC"> Windows auto runs</font><font color="#E5E5E5"> and so we</font>

783
00:28:11,629 --> 00:28:15,619
took the<font color="#E5E5E5"> initiative</font><font color="#CCCCCC"> to email Microsoft</font>

784
00:28:13,519 --> 00:28:17,480
and we actually<font color="#E5E5E5"> got a reply</font><font color="#CCCCCC"> from mark</font>

785
00:28:15,619 --> 00:28:19,369
russinovich<font color="#CCCCCC"> saying that this</font><font color="#E5E5E5"> is the kind</font>

786
00:28:17,480 --> 00:28:20,570
of thing that<font color="#E5E5E5"> we should be investigating</font>

787
00:28:19,369 --> 00:28:23,509
<font color="#E5E5E5">or this is the way that we</font><font color="#CCCCCC"> should</font>

788
00:28:20,570 --> 00:28:27,019
disclose these<font color="#E5E5E5"> to the Microsoft and</font><font color="#CCCCCC"> a</font>

789
00:28:23,509 --> 00:28:28,609
<font color="#CCCCCC">20-18 it's still</font><font color="#E5E5E5"> not there so so</font>

790
00:28:27,019 --> 00:28:31,399
unfortunately it's still<font color="#E5E5E5"> not a part of</font>

791
00:28:28,609 --> 00:28:33,710
<font color="#CCCCCC">autoruns but we've also hasn't haven't</font>

792
00:28:31,399 --> 00:28:35,178
seen this really<font color="#E5E5E5"> pick</font><font color="#CCCCCC"> up steam or become</font>

793
00:28:33,710 --> 00:28:38,509
<font color="#CCCCCC">too popular but we'll touch</font><font color="#E5E5E5"> on that here</font>

794
00:28:35,179 --> 00:28:40,159
in a minute<font color="#E5E5E5"> so what we really built is</font>

795
00:28:38,509 --> 00:28:41,840
in 2015 was what we<font color="#CCCCCC"> call DEA's</font>

796
00:28:40,159 --> 00:28:43,789
compromise which is just a framework of

797
00:28:41,840 --> 00:28:45,830
streamlining this process because one of

798
00:28:43,789 --> 00:28:47,720
<font color="#E5E5E5">the consequences of DSC that I</font>

799
00:28:45,830 --> 00:28:50,090
discovered<font color="#E5E5E5"> quickly is that it's</font><font color="#CCCCCC"> really</font>

800
00:28:47,720 --> 00:28:51,270
<font color="#E5E5E5">hard to do and maybe that's part of the</font>

801
00:28:50,090 --> 00:28:52,980
reason why it<font color="#E5E5E5"> remains so</font>

802
00:28:51,270 --> 00:28:54,389
unpopular<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it was pretty hard to get</font>

803
00:28:52,980 --> 00:28:56,250
<font color="#E5E5E5">the</font><font color="#CCCCCC"> whole thing set up</font><font color="#E5E5E5"> so we built a</font>

804
00:28:54,390 --> 00:28:57,840
PowerShell<font color="#E5E5E5"> module that kind of makes the</font>

805
00:28:56,250 --> 00:28:59,760
<font color="#E5E5E5">whole thing pretty simple and focuses on</font>

806
00:28:57,840 --> 00:29:01,379
<font color="#E5E5E5">two different</font><font color="#CCCCCC"> ways</font><font color="#E5E5E5"> one is setting up</font>

807
00:28:59,760 --> 00:29:03,809
your malicious server<font color="#E5E5E5"> so configuring it</font>

808
00:29:01,380 --> 00:29:05,610
with what<font color="#E5E5E5"> you want your victim machines</font>

809
00:29:03,809 --> 00:29:07,410
to pull down and then<font color="#CCCCCC"> just</font><font color="#E5E5E5"> setting a</font>

810
00:29:05,610 --> 00:29:08,790
script on<font color="#CCCCCC"> your victim</font><font color="#E5E5E5"> to configure it</font><font color="#CCCCCC"> to</font>

811
00:29:07,410 --> 00:29:10,470
point<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> server to pull down</font><font color="#E5E5E5"> the</font>

812
00:29:08,790 --> 00:29:12,600
right<font color="#CCCCCC"> configuration file and</font><font color="#E5E5E5"> then apply</font>

813
00:29:10,470 --> 00:29:14,790
<font color="#E5E5E5">it and that's really what it</font><font color="#CCCCCC"> was done</font>

814
00:29:12,600 --> 00:29:16,439
and it was<font color="#CCCCCC"> done via</font><font color="#E5E5E5"> HTTP with a thought</font>

815
00:29:14,790 --> 00:29:17,909
<font color="#CCCCCC">that you know if you were gonna use this</font>

816
00:29:16,440 --> 00:29:20,580
you could set<font color="#E5E5E5"> it up as either you know</font>

817
00:29:17,910 --> 00:29:21,870
an internet facing machine or if you

818
00:29:20,580 --> 00:29:22,980
wanted<font color="#E5E5E5"> to be pretty stealthy</font><font color="#CCCCCC"> you could</font>

819
00:29:21,870 --> 00:29:25,469
set<font color="#E5E5E5"> it you know internal to internal</font>

820
00:29:22,980 --> 00:29:27,630
<font color="#E5E5E5">however when you do</font><font color="#CCCCCC"> setup a DSC server</font>

821
00:29:25,470 --> 00:29:29,040
it does require downloading<font color="#CCCCCC"> a number of</font>

822
00:29:27,630 --> 00:29:32,670
different modules<font color="#E5E5E5"> and commandlets that</font>

823
00:29:29,040 --> 00:29:34,080
are not there by default<font color="#E5E5E5"> so we</font>

824
00:29:32,670 --> 00:29:35,670
<font color="#CCCCCC">implemented a couple different payloads</font>

825
00:29:34,080 --> 00:29:37,350
that<font color="#E5E5E5"> we thought were interesting</font><font color="#CCCCCC"> to show</font>

826
00:29:35,670 --> 00:29:39,690
the first one was persisting malware so

827
00:29:37,350 --> 00:29:41,520
we ensured a process was running and a

828
00:29:39,690 --> 00:29:43,410
file was present but<font color="#E5E5E5"> we didn't set it as</font>

829
00:29:41,520 --> 00:29:45,809
persistent via service or anything else

830
00:29:43,410 --> 00:29:47,550
<font color="#CCCCCC">but the script itself ensured it was</font>

831
00:29:45,809 --> 00:29:49,139
persistent so if a user came in and

832
00:29:47,550 --> 00:29:50,550
deleted or killed or did whatever<font color="#E5E5E5"> they</font>

833
00:29:49,140 --> 00:29:52,590
<font color="#CCCCCC">needed to it would automatically</font>

834
00:29:50,550 --> 00:29:54,330
reinfect itself on an interval<font color="#E5E5E5"> the</font>

835
00:29:52,590 --> 00:29:55,620
second was<font color="#CCCCCC"> persisting a user</font><font color="#E5E5E5"> account and</font>

836
00:29:54,330 --> 00:29:57,689
<font color="#E5E5E5">ensuring it was part of the local</font>

837
00:29:55,620 --> 00:29:58,979
<font color="#E5E5E5">administrators group and in our demo</font>

838
00:29:57,690 --> 00:30:00,809
which one fortunate we're not gonna have

839
00:29:58,980 --> 00:30:02,220
<font color="#E5E5E5">time</font><font color="#CCCCCC"> to show today we went</font><font color="#E5E5E5"> through and</font>

840
00:30:00,809 --> 00:30:03,809
deleted the<font color="#E5E5E5"> account or just removed it</font>

841
00:30:02,220 --> 00:30:06,059
<font color="#CCCCCC">and the</font><font color="#E5E5E5"> system went back and</font><font color="#CCCCCC"> immediately</font>

842
00:30:03,809 --> 00:30:07,860
set it in<font color="#E5E5E5"> it's also not really</font><font color="#CCCCCC"> logged</font>

843
00:30:06,059 --> 00:30:09,120
<font color="#E5E5E5">that well and Ryan</font><font color="#CCCCCC"> we'll talk about</font><font color="#E5E5E5"> some</font>

844
00:30:07,860 --> 00:30:10,889
<font color="#CCCCCC">of the sources</font><font color="#E5E5E5"> of evidence but it's not</font>

845
00:30:09,120 --> 00:30:18,479
always<font color="#E5E5E5"> intuitive exactly what's</font>

846
00:30:10,890 --> 00:30:20,880
happening<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> the reason we pursued</font>

847
00:30:18,480 --> 00:30:23,340
<font color="#CCCCCC">that research was after</font><font color="#E5E5E5"> struggling</font><font color="#CCCCCC"> with</font>

848
00:30:20,880 --> 00:30:25,530
the PowerShell attacks that we talked

849
00:30:23,340 --> 00:30:28,379
about<font color="#E5E5E5"> earlier we thought that we try to</font>

850
00:30:25,530 --> 00:30:30,030
lean in<font color="#CCCCCC"> and figure out</font><font color="#E5E5E5"> what new thing</font>

851
00:30:28,380 --> 00:30:31,860
attackers might<font color="#E5E5E5"> figure out and the</font>

852
00:30:30,030 --> 00:30:33,540
intent was you know if we can come out

853
00:30:31,860 --> 00:30:35,729
and<font color="#E5E5E5"> expose a potentially abusable</font>

854
00:30:33,540 --> 00:30:37,440
technique then we can also come out and

855
00:30:35,730 --> 00:30:39,660
provide sources<font color="#E5E5E5"> of</font><font color="#CCCCCC"> evidence before</font><font color="#E5E5E5"> it's</font>

856
00:30:37,440 --> 00:30:41,460
actually<font color="#CCCCCC"> seen in the wild and so people</font>

857
00:30:39,660 --> 00:30:43,020
<font color="#E5E5E5">will be prepared</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> detect and defend if</font>

858
00:30:41,460 --> 00:30:44,790
this actually ended up being<font color="#E5E5E5"> adopted by</font>

859
00:30:43,020 --> 00:30:47,190
attackers<font color="#E5E5E5"> and so half of</font><font color="#CCCCCC"> our</font>

860
00:30:44,790 --> 00:30:48,809
presentation was focused on the<font color="#E5E5E5"> scripts</font>

861
00:30:47,190 --> 00:30:51,630
<font color="#CCCCCC">in the tooling that Matt</font><font color="#E5E5E5"> describes to</font>

862
00:30:48,809 --> 00:30:53,340
make it really simple<font color="#CCCCCC"> to at least abuse</font>

863
00:30:51,630 --> 00:30:55,230
and weaponize desire to configuration

864
00:30:53,340 --> 00:30:56,580
<font color="#CCCCCC">and then the second half focused on the</font>

865
00:30:55,230 --> 00:30:58,200
ways that you could<font color="#E5E5E5"> identify and detect</font>

866
00:30:56,580 --> 00:31:00,210
and investigate whether<font color="#E5E5E5"> that happened</font>

867
00:30:58,200 --> 00:31:01,440
<font color="#CCCCCC">and so we had identified a few different</font>

868
00:31:00,210 --> 00:31:03,630
sources<font color="#CCCCCC"> of evidence that we'll quickly</font>

869
00:31:01,440 --> 00:31:04,890
recap here<font color="#E5E5E5"> the first was network</font>

870
00:31:03,630 --> 00:31:07,650
activity so if you

871
00:31:04,890 --> 00:31:09,900
the payload configured to use<font color="#CCCCCC"> pole mode</font>

872
00:31:07,650 --> 00:31:12,150
and retrieve a malicious configuration

873
00:31:09,900 --> 00:31:13,470
from<font color="#E5E5E5"> an internet hosting system</font><font color="#CCCCCC"> it's</font>

874
00:31:12,150 --> 00:31:15,690
pretty<font color="#E5E5E5"> apparent if you have something</font>

875
00:31:13,470 --> 00:31:17,160
<font color="#CCCCCC">like web proxy logging because normally</font>

876
00:31:15,690 --> 00:31:19,530
you wouldn't expect<font color="#E5E5E5"> endpoints to be</font>

877
00:31:17,160 --> 00:31:20,910
pulling<font color="#CCCCCC"> down the urls that</font><font color="#E5E5E5"> are shown</font>

878
00:31:19,530 --> 00:31:23,070
here<font color="#CCCCCC"> and</font><font color="#E5E5E5"> these are basically</font><font color="#CCCCCC"> the</font>

879
00:31:20,910 --> 00:31:25,170
distinctive locations that when you've

880
00:31:23,070 --> 00:31:26,939
<font color="#CCCCCC">got a system configured in pull mode it</font>

881
00:31:25,170 --> 00:31:30,120
uses to yank down the configuration that

882
00:31:26,940 --> 00:31:32,640
<font color="#CCCCCC">it's it's set to retrieve</font><font color="#E5E5E5"> so that's very</font>

883
00:31:30,120 --> 00:31:33,270
<font color="#E5E5E5">easy to detect on the network on</font><font color="#CCCCCC"> the</font>

884
00:31:32,640 --> 00:31:34,740
<font color="#CCCCCC">filesystem</font>

885
00:31:33,270 --> 00:31:35,970
this is going to be a bit small<font color="#CCCCCC"> here I'm</font>

886
00:31:34,740 --> 00:31:38,460
not<font color="#E5E5E5"> going to run through</font><font color="#CCCCCC"> it line by line</font>

887
00:31:35,970 --> 00:31:41,250
but if you have any<font color="#E5E5E5"> sort of EDR tooling</font>

888
00:31:38,460 --> 00:31:43,200
<font color="#CCCCCC">that is doing the continuous black boxer</font>

889
00:31:41,250 --> 00:31:45,270
of process and<font color="#E5E5E5"> file interactions</font>

890
00:31:43,200 --> 00:31:47,280
something like system on something like

891
00:31:45,270 --> 00:31:48,720
<font color="#E5E5E5">any of the</font><font color="#CCCCCC"> out-of-the-box EDR products</font>

892
00:31:47,280 --> 00:31:51,809
they're<font color="#CCCCCC"> gonna record the file system</font>

893
00:31:48,720 --> 00:31:53,669
activity<font color="#CCCCCC"> that</font><font color="#E5E5E5"> results from a DSC</font>

894
00:31:51,809 --> 00:31:56,610
configuration<font color="#E5E5E5"> being set into</font><font color="#CCCCCC"> place and</font>

895
00:31:53,669 --> 00:31:58,350
it's pretty noisy<font color="#CCCCCC"> you can see that when</font>

896
00:31:56,610 --> 00:32:00,360
<font color="#E5E5E5">you configure a system</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the first</font>

897
00:31:58,350 --> 00:32:02,370
time there's a<font color="#E5E5E5"> lot of setup</font><font color="#CCCCCC"> that goes</font>

898
00:32:00,360 --> 00:32:04,469
into the LCM the local configuration

899
00:32:02,370 --> 00:32:05,340
manager<font color="#E5E5E5"> there's a scheduled task that</font>

900
00:32:04,470 --> 00:32:08,040
gets created

901
00:32:05,340 --> 00:32:10,049
there's temporary<font color="#E5E5E5"> and then permanent</font>

902
00:32:08,040 --> 00:32:12,659
versions of the<font color="#CCCCCC"> MOF files that retain</font>

903
00:32:10,049 --> 00:32:14,429
<font color="#E5E5E5">the configuration itself and then if</font>

904
00:32:12,660 --> 00:32:16,140
you're<font color="#CCCCCC"> using our in fact hosts with</font>

905
00:32:14,429 --> 00:32:18,090
malware scenario there's also the

906
00:32:16,140 --> 00:32:20,460
payload that's dropped as part<font color="#E5E5E5"> of that</font>

907
00:32:18,090 --> 00:32:22,439
malicious configuration so if<font color="#E5E5E5"> you're</font>

908
00:32:20,460 --> 00:32:24,870
monitoring at this level<font color="#E5E5E5"> or doing post</font>

909
00:32:22,440 --> 00:32:26,730
intrusion investigations<font color="#E5E5E5"> it's really</font>

910
00:32:24,870 --> 00:32:28,260
apparent<font color="#CCCCCC"> that something</font><font color="#E5E5E5"> nefarious is</font>

911
00:32:26,730 --> 00:32:31,230
going on if you're looking at this level

912
00:32:28,260 --> 00:32:33,450
<font color="#E5E5E5">of telemetry</font><font color="#CCCCCC"> and then finally as Matt</font>

913
00:32:31,230 --> 00:32:35,549
mentioned a moment ago event<font color="#E5E5E5"> logging for</font>

914
00:32:33,450 --> 00:32:38,010
desired state<font color="#CCCCCC"> configuration at least at</font>

915
00:32:35,549 --> 00:32:39,660
the time<font color="#E5E5E5"> wasn't great</font><font color="#CCCCCC"> but there were</font>

916
00:32:38,010 --> 00:32:41,730
enough events<font color="#E5E5E5"> at</font><font color="#CCCCCC"> least in the</font><font color="#E5E5E5"> default</font>

917
00:32:39,660 --> 00:32:44,040
DSC operational log that<font color="#CCCCCC"> you could know</font>

918
00:32:41,730 --> 00:32:46,020
someone is implementing a configuration

919
00:32:44,040 --> 00:32:48,510
<font color="#E5E5E5">on a system here's the</font><font color="#CCCCCC"> gooood for that</font>

920
00:32:46,020 --> 00:32:50,490
configuration<font color="#E5E5E5"> if you wanted to detect</font>

921
00:32:48,510 --> 00:32:52,590
whether a rogue config was being pushed

922
00:32:50,490 --> 00:32:54,360
to systems there is<font color="#E5E5E5"> absolutely event</font>

923
00:32:52,590 --> 00:32:58,370
that you could capture<font color="#E5E5E5"> and hunt for or</font>

924
00:32:54,360 --> 00:32:58,370
forward to a centralized event collector

925
00:32:58,669 --> 00:33:05,460
<font color="#E5E5E5">as me yeah</font><font color="#CCCCCC"> all right stated the SE</font>

926
00:33:02,220 --> 00:33:07,440
<font color="#CCCCCC">attacks so here we are in 2018 as matt</font>

927
00:33:05,460 --> 00:33:09,030
has been<font color="#E5E5E5"> hinting at we had high</font><font color="#CCCCCC"> hopes</font>

928
00:33:07,440 --> 00:33:10,980
that<font color="#E5E5E5"> this might be a compelling and</font>

929
00:33:09,030 --> 00:33:14,100
interesting<font color="#CCCCCC"> Avenue for researchers and</font>

930
00:33:10,980 --> 00:33:16,650
<font color="#E5E5E5">attackers and what we ended up finding</font>

931
00:33:14,100 --> 00:33:18,870
is that<font color="#E5E5E5"> the state of DSC attacks in 2018</font>

932
00:33:16,650 --> 00:33:20,880
is pretty much captured here

933
00:33:18,870 --> 00:33:23,070
nothing has really happened<font color="#E5E5E5"> in this</font>

934
00:33:20,880 --> 00:33:24,720
space since we embarked on this<font color="#E5E5E5"> research</font>

935
00:33:23,070 --> 00:33:27,899
<font color="#E5E5E5">and I think there are</font><font color="#CCCCCC"> a bunch</font><font color="#E5E5E5"> of reasons</font>

936
00:33:24,720 --> 00:33:29,640
for that<font color="#CCCCCC"> the first is</font><font color="#E5E5E5"> this stuff is</font>

937
00:33:27,900 --> 00:33:31,200
<font color="#CCCCCC">really complicated to use and it's</font>

938
00:33:29,640 --> 00:33:33,750
really<font color="#E5E5E5"> difficult to troubleshoot when</font>

939
00:33:31,200 --> 00:33:35,670
things break<font color="#CCCCCC"> and we had attempted to</font>

940
00:33:33,750 --> 00:33:38,100
simplify<font color="#CCCCCC"> some of that from a red teamers</font>

941
00:33:35,670 --> 00:33:40,110
perspective with the the code which<font color="#CCCCCC"> met</font>

942
00:33:38,100 --> 00:33:41,760
<font color="#E5E5E5">mostly authored but that's a well</font>

943
00:33:40,110 --> 00:33:43,229
maintained<font color="#E5E5E5"> getting repo if I've ever</font>

944
00:33:41,760 --> 00:33:45,780
seen one<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't know what that little</font>

945
00:33:43,230 --> 00:33:47,580
surge of<font color="#CCCCCC"> activity was in</font><font color="#E5E5E5"> 2016 but like</font>

946
00:33:45,780 --> 00:33:50,580
looks<font color="#E5E5E5"> like you found some bug that</font><font color="#CCCCCC"> you</font>

947
00:33:47,580 --> 00:33:53,250
stand out or something but it's been

948
00:33:50,580 --> 00:33:55,439
pretty quiet<font color="#CCCCCC"> it's still not in</font><font color="#E5E5E5"> Auto ones</font>

949
00:33:53,250 --> 00:33:57,480
<font color="#CCCCCC">maybe that's</font><font color="#E5E5E5"> okay given that this</font><font color="#CCCCCC"> isn't</font>

950
00:33:55,440 --> 00:33:58,679
really<font color="#CCCCCC"> widely used but yeah if you're</font>

951
00:33:57,480 --> 00:34:00,870
looking for<font color="#CCCCCC"> evidence of</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> in Auto</font>

952
00:33:58,679 --> 00:34:02,670
runs it's still not there<font color="#E5E5E5"> and these</font>

953
00:34:00,870 --> 00:34:04,229
these were the<font color="#E5E5E5"> bots that we actually had</font>

954
00:34:02,670 --> 00:34:05,730
in our original<font color="#E5E5E5"> presentation</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> think</font>

955
00:34:04,230 --> 00:34:08,730
they're<font color="#E5E5E5"> still true like why is</font><font color="#CCCCCC"> no-one</font>

956
00:34:05,730 --> 00:34:10,770
using this technique<font color="#CCCCCC"> one is</font><font color="#E5E5E5"> that it's</font>

957
00:34:08,730 --> 00:34:12,449
difficult<font color="#E5E5E5"> to learn and use</font><font color="#CCCCCC"> - is that it</font>

958
00:34:10,770 --> 00:34:14,639
has a version dependency and in most

959
00:34:12,449 --> 00:34:16,589
modern<font color="#E5E5E5"> windows enterprises that</font><font color="#CCCCCC"> we find</font>

960
00:34:14,639 --> 00:34:18,720
<font color="#E5E5E5">Windows 7 is still really prevalent</font>

961
00:34:16,590 --> 00:34:21,210
which means unless they've explicitly

962
00:34:18,719 --> 00:34:22,980
upgraded<font color="#E5E5E5"> PowerShell they don't have the</font>

963
00:34:21,210 --> 00:34:25,260
<font color="#E5E5E5">minimum version necessary to</font><font color="#CCCCCC"> utilize a</font>

964
00:34:22,980 --> 00:34:27,240
lot<font color="#CCCCCC"> of this which is</font><font color="#E5E5E5"> PowerShell 4.0 on</font>

965
00:34:25,260 --> 00:34:29,460
the victim host and then on top<font color="#E5E5E5"> of</font><font color="#CCCCCC"> all</font>

966
00:34:27,239 --> 00:34:31,589
<font color="#CCCCCC">of that</font><font color="#E5E5E5"> again this is a post compromised</font>

967
00:34:29,460 --> 00:34:33,300
persistence mechanism<font color="#E5E5E5"> not in a nice</font>

968
00:34:31,590 --> 00:34:35,340
initial means of entry and<font color="#E5E5E5"> so the</font>

969
00:34:33,300 --> 00:34:37,139
attacker has to<font color="#E5E5E5"> have administrator</font>

970
00:34:35,340 --> 00:34:38,730
access<font color="#E5E5E5"> to the host already and the</font>

971
00:34:37,139 --> 00:34:41,040
reality is<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are many many more</font>

972
00:34:38,730 --> 00:34:43,110
covert ways to persist on an<font color="#E5E5E5"> endpoint</font>

973
00:34:41,040 --> 00:34:45,540
that<font color="#CCCCCC"> also happened to be easier for an</font>

974
00:34:43,110 --> 00:34:48,270
attacker to wield than mangling this

975
00:34:45,540 --> 00:34:50,279
configuration engine<font color="#E5E5E5"> now all of that</font>

976
00:34:48,270 --> 00:34:51,899
<font color="#E5E5E5">being said we had</font><font color="#CCCCCC"> a tremendously</font>

977
00:34:50,280 --> 00:34:54,060
validating moment just a couple<font color="#CCCCCC"> of</font>

978
00:34:51,899 --> 00:34:56,609
months<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> when was this actually</font><font color="#CCCCCC"> back</font>

979
00:34:54,060 --> 00:34:58,080
in March<font color="#E5E5E5"> so Matt</font><font color="#CCCCCC"> graver</font><font color="#E5E5E5"> who we mentioned</font>

980
00:34:56,610 --> 00:35:00,090
earlier we<font color="#E5E5E5"> worked with Matt back when we</font>

981
00:34:58,080 --> 00:35:01,860
were at<font color="#CCCCCC"> Mandy</font><font color="#E5E5E5"> it continued to really</font>

982
00:35:00,090 --> 00:35:03,660
benefit<font color="#CCCCCC"> MI from</font><font color="#E5E5E5"> the great research that</font>

983
00:35:01,860 --> 00:35:05,970
<font color="#CCCCCC">he did with a lot of others in the</font>

984
00:35:03,660 --> 00:35:08,009
<font color="#CCCCCC">PowerShell community but he finally</font><font color="#E5E5E5"> got</font>

985
00:35:05,970 --> 00:35:11,279
<font color="#CCCCCC">around to</font><font color="#E5E5E5"> looking at DSC earlier this</font>

986
00:35:08,010 --> 00:35:14,000
year and so he tweeted a tool that he

987
00:35:11,280 --> 00:35:16,230
put<font color="#E5E5E5"> on his github that basically used</font>

988
00:35:14,000 --> 00:35:18,140
<font color="#E5E5E5">DSC for simple lateral movement</font>

989
00:35:16,230 --> 00:35:20,550
basically<font color="#CCCCCC"> a remote process create and</font>

990
00:35:18,140 --> 00:35:22,560
posted the POC<font color="#CCCCCC"> for that and then in a</font>

991
00:35:20,550 --> 00:35:24,000
subsequent<font color="#CCCCCC"> suite mentioned that he</font>

992
00:35:22,560 --> 00:35:25,650
finally checked out the talk that<font color="#E5E5E5"> we did</font>

993
00:35:24,000 --> 00:35:28,140
<font color="#E5E5E5">the version of this we did back at</font>

994
00:35:25,650 --> 00:35:29,880
blackhat in 2016 and gave us<font color="#CCCCCC"> some love</font>

995
00:35:28,140 --> 00:35:31,560
and so this was totally as

996
00:35:29,880 --> 00:35:33,120
senpai<font color="#CCCCCC"> noticed me moment we're like</font><font color="#E5E5E5"> hey</font>

997
00:35:31,560 --> 00:35:36,210
someone finally<font color="#E5E5E5"> looked at the research</font>

998
00:35:33,120 --> 00:35:37,770
<font color="#E5E5E5">and it was Matt but yeah that really has</font>

999
00:35:36,210 --> 00:35:39,300
<font color="#E5E5E5">been from everything we found the only</font>

1000
00:35:37,770 --> 00:35:41,610
evidence<font color="#CCCCCC"> of anyone</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> this in the</font>

1001
00:35:39,300 --> 00:35:43,530
wild<font color="#CCCCCC"> either to carry forward</font><font color="#E5E5E5"> an attack</font>

1002
00:35:41,610 --> 00:35:45,000
technique or for<font color="#E5E5E5"> researcher to</font><font color="#CCCCCC"> find</font>

1003
00:35:43,530 --> 00:35:47,190
additional<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to abuse it</font>

1004
00:35:45,000 --> 00:35:48,870
so someone once contacted<font color="#E5E5E5"> me on slack</font>

1005
00:35:47,190 --> 00:35:50,640
and asked me a question about<font color="#E5E5E5"> it and</font>

1006
00:35:48,870 --> 00:35:53,160
<font color="#CCCCCC">they said they</font><font color="#E5E5E5"> thought</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> red team had</font>

1007
00:35:50,640 --> 00:35:54,930
used it<font color="#E5E5E5"> and I helped</font><font color="#CCCCCC"> them well through</font>

1008
00:35:53,160 --> 00:35:59,730
the evidence<font color="#CCCCCC"> and turned out they were</font>

1009
00:35:54,930 --> 00:36:01,350
just<font color="#CCCCCC"> using W Mon so let's</font><font color="#E5E5E5"> talk about</font>

1010
00:35:59,730 --> 00:36:04,290
<font color="#E5E5E5">changes so just as we mentioned</font>

1011
00:36:01,350 --> 00:36:06,330
PowerShell v6 changed a lot<font color="#CCCCCC"> the same</font>

1012
00:36:04,290 --> 00:36:07,650
thing is happening<font color="#CCCCCC"> for DSC and and I</font>

1013
00:36:06,330 --> 00:36:09,480
think<font color="#E5E5E5"> again this</font><font color="#CCCCCC"> is part</font><font color="#E5E5E5"> of why it's</font>

1014
00:36:07,650 --> 00:36:11,400
attackers are not<font color="#E5E5E5"> gonna rush to this</font>

1015
00:36:09,480 --> 00:36:12,960
because anytime<font color="#E5E5E5"> you've got a moving</font>

1016
00:36:11,400 --> 00:36:14,490
target like this<font color="#CCCCCC"> enterprises aren't</font>

1017
00:36:12,960 --> 00:36:16,800
going to rush to adopt it and that means

1018
00:36:14,490 --> 00:36:19,229
<font color="#E5E5E5">that</font><font color="#CCCCCC"> there isn't a sufficient ecosystem</font>

1019
00:36:16,800 --> 00:36:21,060
for attackers<font color="#CCCCCC"> to bother leveraging it</font>

1020
00:36:19,230 --> 00:36:23,490
because the economics are just not there

1021
00:36:21,060 --> 00:36:25,140
so what is Microsoft doing<font color="#E5E5E5"> with DSC</font>

1022
00:36:23,490 --> 00:36:28,020
they're now transitioning to what's

1023
00:36:25,140 --> 00:36:29,400
called DSC<font color="#E5E5E5"> core so DSC still has some</font>

1024
00:36:28,020 --> 00:36:31,380
relevance if you're managing<font color="#E5E5E5"> an azure</font>

1025
00:36:29,400 --> 00:36:32,730
environment you're probably<font color="#E5E5E5"> using DSC</font>

1026
00:36:31,380 --> 00:36:35,280
for some of the administration and

1027
00:36:32,730 --> 00:36:37,980
orchestration<font color="#E5E5E5"> of that but what DSC core</font>

1028
00:36:35,280 --> 00:36:40,860
intends to do is make DSC cross-platform

1029
00:36:37,980 --> 00:36:43,710
open-source<font color="#CCCCCC"> and the spirit of</font><font color="#E5E5E5"> the.net</font>

1030
00:36:40,860 --> 00:36:45,510
core foundation for<font color="#E5E5E5"> PowerShell v6 and so</font>

1031
00:36:43,710 --> 00:36:46,710
to do<font color="#E5E5E5"> that what's really interesting is</font>

1032
00:36:45,510 --> 00:36:49,440
it is completely stripped of

1033
00:36:46,710 --> 00:36:51,450
dependencies on<font color="#CCCCCC"> WMI and the windows</font>

1034
00:36:49,440 --> 00:36:53,310
management<font color="#E5E5E5"> foundation there is a</font>

1035
00:36:51,450 --> 00:36:54,930
completely new local configuration

1036
00:36:53,310 --> 00:36:57,600
manager that<font color="#E5E5E5"> is written to be cross</font>

1037
00:36:54,930 --> 00:37:00,240
platform so that DSC core can support

1038
00:36:57,600 --> 00:37:01,970
Windows Mac and Linux<font color="#CCCCCC"> and by virtue of</font>

1039
00:37:00,240 --> 00:37:05,250
all those changes<font color="#E5E5E5"> that also means that</font>

1040
00:37:01,970 --> 00:37:07,439
<font color="#E5E5E5">resources for configuration are now in</font>

1041
00:37:05,250 --> 00:37:11,490
DSC core can<font color="#E5E5E5"> be implemented in native C</font>

1042
00:37:07,440 --> 00:37:13,200
or C++<font color="#CCCCCC"> in Python</font><font color="#E5E5E5"> or PowerShell</font><font color="#CCCCCC"> and</font>

1043
00:37:11,490 --> 00:37:16,939
that's<font color="#E5E5E5"> PowerShell core because again</font>

1044
00:37:13,200 --> 00:37:19,740
this is<font color="#E5E5E5"> all predicated on</font><font color="#CCCCCC"> net core the</font>

1045
00:37:16,940 --> 00:37:21,390
design work for<font color="#CCCCCC"> this is still underway</font>

1046
00:37:19,740 --> 00:37:24,720
and<font color="#CCCCCC"> Microsoft initially</font><font color="#E5E5E5"> announced this</font>

1047
00:37:21,390 --> 00:37:27,240
direction in early 2018 or late 2017

1048
00:37:24,720 --> 00:37:28,980
<font color="#CCCCCC">just a week</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> two they basically posted</font>

1049
00:37:27,240 --> 00:37:30,660
an update saying<font color="#E5E5E5"> that there is still no</font>

1050
00:37:28,980 --> 00:37:33,780
concrete date where this is going to be

1051
00:37:30,660 --> 00:37:35,129
delivered<font color="#CCCCCC"> I am somewhat skeptical that</font>

1052
00:37:33,780 --> 00:37:37,650
<font color="#E5E5E5">this is going to see a lot</font><font color="#CCCCCC"> of traction</font>

1053
00:37:35,130 --> 00:37:40,410
<font color="#E5E5E5">outside of potentially where DSC already</font>

1054
00:37:37,650 --> 00:37:42,060
has a<font color="#E5E5E5"> footprint and managing Azure</font><font color="#CCCCCC"> I'm</font>

1055
00:37:40,410 --> 00:37:42,819
not sure how much cross-platform use it

1056
00:37:42,060 --> 00:37:44,650
<font color="#E5E5E5">really will get</font>

1057
00:37:42,820 --> 00:37:46,150
<font color="#CCCCCC">but it's something that will remain</font>

1058
00:37:44,650 --> 00:37:47,680
interesting<font color="#CCCCCC"> especially given the fact</font>

1059
00:37:46,150 --> 00:37:50,020
that resources<font color="#CCCCCC"> can be written in</font><font color="#E5E5E5"> this</font>

1060
00:37:47,680 --> 00:37:53,740
much wider<font color="#CCCCCC"> array of languages so we'll</font>

1061
00:37:50,020 --> 00:37:56,560
see where that goes<font color="#CCCCCC"> but yeah off to etw</font>

1062
00:37:53,740 --> 00:37:58,209
<font color="#E5E5E5">so in our last</font><font color="#CCCCCC"> section for the day</font><font color="#E5E5E5"> we're</font>

1063
00:37:56,560 --> 00:38:00,130
gonna talk about<font color="#E5E5E5"> etw which is not</font>

1064
00:37:58,210 --> 00:38:02,830
something<font color="#E5E5E5"> we've presented at</font><font color="#CCCCCC"> brew</font><font color="#E5E5E5"> calm</font>

1065
00:38:00,130 --> 00:38:05,020
before<font color="#E5E5E5"> so etw or event tracing for</font>

1066
00:38:02,830 --> 00:38:07,299
<font color="#E5E5E5">Windows has been around for a really</font>

1067
00:38:05,020 --> 00:38:09,580
<font color="#E5E5E5">long</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> and it actually started back</font>

1068
00:38:07,300 --> 00:38:11,590
<font color="#E5E5E5">in Windows 2000 but became prevalent in</font>

1069
00:38:09,580 --> 00:38:13,810
Windows Vista<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I think a lot of</font>

1070
00:38:11,590 --> 00:38:16,060
people have<font color="#E5E5E5"> heard of etw kind of know</font>

1071
00:38:13,810 --> 00:38:17,470
what it<font color="#CCCCCC"> is</font><font color="#E5E5E5"> know that</font><font color="#CCCCCC"> it was</font><font color="#E5E5E5"> originally</font>

1072
00:38:16,060 --> 00:38:18,880
<font color="#CCCCCC">designed for things like performance</font>

1073
00:38:17,470 --> 00:38:21,430
monitoring and application

1074
00:38:18,880 --> 00:38:23,650
troubleshooting<font color="#E5E5E5"> but it also serves as a</font>

1075
00:38:21,430 --> 00:38:24,819
really good forensics tool that's really

1076
00:38:23,650 --> 00:38:27,460
<font color="#CCCCCC">hiding in plain sight</font>

1077
00:38:24,820 --> 00:38:30,070
so as an example<font color="#E5E5E5"> I pulled some metrics</font>

1078
00:38:27,460 --> 00:38:31,930
and things like process<font color="#E5E5E5"> monitor you ztw</font>

1079
00:38:30,070 --> 00:38:36,100
they just don't advertise<font color="#E5E5E5"> it net</font><font color="#CCCCCC"> ACH</font>

1080
00:38:31,930 --> 00:38:38,200
uses etw<font color="#E5E5E5"> disk</font><font color="#CCCCCC"> montt</font><font color="#E5E5E5"> uses etw as well as</font>

1081
00:38:36,100 --> 00:38:41,650
performance monitor all of those use etw

1082
00:38:38,200 --> 00:38:43,390
providers under the hood and there are

1083
00:38:41,650 --> 00:38:46,000
actually hundreds of what they call

1084
00:38:43,390 --> 00:38:47,529
providers available<font color="#CCCCCC"> to you to use from</font>

1085
00:38:46,000 --> 00:38:49,630
different applications<font color="#CCCCCC"> from the actual</font>

1086
00:38:47,530 --> 00:38:51,760
<font color="#CCCCCC">Windows kernel itself and how it's all</font>

1087
00:38:49,630 --> 00:38:54,010
instrumented<font color="#E5E5E5"> is in these things</font><font color="#CCCCCC"> called</font>

1088
00:38:51,760 --> 00:38:55,690
sessions and so sessions are just a

1089
00:38:54,010 --> 00:38:57,070
picking and choosing of different

1090
00:38:55,690 --> 00:38:58,750
available providers<font color="#E5E5E5"> again there's</font>

1091
00:38:57,070 --> 00:39:00,880
hundreds of<font color="#E5E5E5"> providers out there so</font>

1092
00:38:58,750 --> 00:39:03,610
there's an<font color="#CCCCCC"> ILS</font><font color="#E5E5E5"> provider there's a file</font>

1093
00:39:00,880 --> 00:39:05,560
system provider there's an event<font color="#CCCCCC"> and ie</font>

1094
00:39:03,610 --> 00:39:07,630
provider there's a really a provider for

1095
00:39:05,560 --> 00:39:09,430
<font color="#CCCCCC">almost</font><font color="#E5E5E5"> everything</font><font color="#CCCCCC"> that's on the system</font>

1096
00:39:07,630 --> 00:39:11,920
and<font color="#E5E5E5"> depending on what roles are</font>

1097
00:39:09,430 --> 00:39:13,690
installed can<font color="#E5E5E5"> dictate what providers are</font>

1098
00:39:11,920 --> 00:39:15,880
there<font color="#E5E5E5"> and when they're in these sessions</font>

1099
00:39:13,690 --> 00:39:17,680
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can have multiple providers into</font><font color="#E5E5E5"> a</font>

1100
00:39:15,880 --> 00:39:19,690
single session<font color="#E5E5E5"> that then configured to</font>

1101
00:39:17,680 --> 00:39:22,509
<font color="#E5E5E5">log certain types of events or keywords</font>

1102
00:39:19,690 --> 00:39:24,400
<font color="#E5E5E5">otherwise it will flood you</font><font color="#CCCCCC"> with events</font>

1103
00:39:22,510 --> 00:39:26,770
so one<font color="#CCCCCC"> of the downsides</font><font color="#E5E5E5"> of this</font><font color="#CCCCCC"> is this</font>

1104
00:39:24,400 --> 00:39:29,500
was meant for<font color="#E5E5E5"> debugging so it can very</font>

1105
00:39:26,770 --> 00:39:30,730
quickly generate a huge<font color="#E5E5E5"> number of events</font>

1106
00:39:29,500 --> 00:39:32,500
if you're not careful so<font color="#E5E5E5"> you can</font>

1107
00:39:30,730 --> 00:39:34,300
actually monitor every single thread and

1108
00:39:32,500 --> 00:39:35,950
everything<font color="#CCCCCC"> goal threaded call that this</font>

1109
00:39:34,300 --> 00:39:38,650
thing makes<font color="#CCCCCC"> and you can imagine what</font>

1110
00:39:35,950 --> 00:39:41,140
that<font color="#CCCCCC"> does is it will quickly</font><font color="#E5E5E5"> overwhelm</font>

1111
00:39:38,650 --> 00:39:43,390
these<font color="#E5E5E5"> buffer pools</font><font color="#CCCCCC"> and so then you have</font>

1112
00:39:41,140 --> 00:39:44,560
<font color="#CCCCCC">a means to process these events</font><font color="#E5E5E5"> and so</font>

1113
00:39:43,390 --> 00:39:47,109
you can do<font color="#E5E5E5"> two different</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> you can</font>

1114
00:39:44,560 --> 00:39:48,910
<font color="#E5E5E5">log them out to an ETL file so this is</font>

1115
00:39:47,110 --> 00:39:51,370
if you look<font color="#E5E5E5"> at the analytic log in your</font>

1116
00:39:48,910 --> 00:39:53,379
<font color="#E5E5E5">Event Viewer that's an ETL file or you</font>

1117
00:39:51,370 --> 00:39:55,450
<font color="#CCCCCC">can process them async</font><font color="#E5E5E5"> as they get</font>

1118
00:39:53,380 --> 00:39:55,850
created in<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> so what we're</font><font color="#E5E5E5"> going to</font>

1119
00:39:55,450 --> 00:39:57,919
<font color="#E5E5E5">demo</font>

1120
00:39:55,850 --> 00:40:00,440
<font color="#CCCCCC">is being written</font><font color="#E5E5E5"> out to</font><font color="#CCCCCC"> a log file but</font>

1121
00:39:57,920 --> 00:40:02,060
in practice if you wanted to do this

1122
00:40:00,440 --> 00:40:03,110
across<font color="#CCCCCC"> your state you probably</font><font color="#E5E5E5"> want to</font>

1123
00:40:02,060 --> 00:40:05,509
do more of<font color="#E5E5E5"> a real-time delivery</font>

1124
00:40:03,110 --> 00:40:07,430
<font color="#E5E5E5">implementation so here's a couple</font>

1125
00:40:05,510 --> 00:40:09,590
<font color="#E5E5E5">examples of providers</font><font color="#CCCCCC"> that we found to</font>

1126
00:40:07,430 --> 00:40:10,879
be forensically significant<font color="#E5E5E5"> so probably</font>

1127
00:40:09,590 --> 00:40:12,890
the biggest one is the<font color="#E5E5E5"> kernel process</font>

1128
00:40:10,880 --> 00:40:14,660
which is actually a kernel level

1129
00:40:12,890 --> 00:40:16,430
provider that provides you<font color="#E5E5E5"> know</font>

1130
00:40:14,660 --> 00:40:19,009
<font color="#E5E5E5">information directly from the</font><font color="#CCCCCC"> kernel</font>

1131
00:40:16,430 --> 00:40:20,690
into user mode or user land applications

1132
00:40:19,010 --> 00:40:23,300
so these are things that track<font color="#E5E5E5"> you know</font>

1133
00:40:20,690 --> 00:40:25,880
thread<font color="#CCCCCC"> creation and execution DLL loads</font>

1134
00:40:23,300 --> 00:40:27,440
and process execution<font color="#E5E5E5"> there's also a</font>

1135
00:40:25,880 --> 00:40:29,480
<font color="#E5E5E5">PowerShell provider and so this is where</font>

1136
00:40:27,440 --> 00:40:31,160
things<font color="#E5E5E5"> like all the PS modules that are</font>

1137
00:40:29,480 --> 00:40:34,220
<font color="#E5E5E5">run as well as script block logging can</font>

1138
00:40:31,160 --> 00:40:36,560
also be<font color="#CCCCCC"> written to the DNS client logs</font>

1139
00:40:34,220 --> 00:40:38,890
all DNS requests kernel network<font color="#E5E5E5"> network</font>

1140
00:40:36,560 --> 00:40:41,509
connections and<font color="#E5E5E5"> file</font><font color="#CCCCCC"> logs or file system</font>

1141
00:40:38,890 --> 00:40:43,400
<font color="#CCCCCC">so what's nice</font><font color="#E5E5E5"> about these is these</font>

1142
00:40:41,510 --> 00:40:45,110
events are<font color="#CCCCCC"> not done</font><font color="#E5E5E5"> in a</font><font color="#CCCCCC"> vacuum</font><font color="#E5E5E5"> so</font>

1143
00:40:43,400 --> 00:40:46,730
<font color="#E5E5E5">they're</font><font color="#CCCCCC"> not created just by themselves</font>

1144
00:40:45,110 --> 00:40:49,490
<font color="#E5E5E5">they're actually linked back to</font><font color="#CCCCCC"> the</font>

1145
00:40:46,730 --> 00:40:51,740
<font color="#E5E5E5">specific process and thread that created</font>

1146
00:40:49,490 --> 00:40:54,770
that event and so using<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> can then</font>

1147
00:40:51,740 --> 00:40:57,799
orchestrate and build back a complex

1148
00:40:54,770 --> 00:40:58,910
object<font color="#CCCCCC"> of everything a process did and</font>

1149
00:40:57,800 --> 00:41:00,590
that's<font color="#E5E5E5"> we're going to demo here in a</font>

1150
00:40:58,910 --> 00:41:03,440
second<font color="#E5E5E5"> but it's basically a way</font><font color="#CCCCCC"> of</font>

1151
00:41:00,590 --> 00:41:05,330
organizing and starting about an etw

1152
00:41:03,440 --> 00:41:07,730
session using<font color="#CCCCCC"> the providers I just</font>

1153
00:41:05,330 --> 00:41:09,400
mentioned<font color="#CCCCCC"> to then capture details and</font>

1154
00:41:07,730 --> 00:41:12,410
link<font color="#E5E5E5"> them back to the processes that</font>

1155
00:41:09,400 --> 00:41:14,060
actually generated the activity so one

1156
00:41:12,410 --> 00:41:15,770
<font color="#E5E5E5">big thing about this is this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> also</font>

1157
00:41:14,060 --> 00:41:17,690
impacted<font color="#CCCCCC"> by any</font><font color="#E5E5E5"> kind of PowerShell</font>

1158
00:41:15,770 --> 00:41:19,700
evasions<font color="#E5E5E5"> so if we talked about earlier</font>

1159
00:41:17,690 --> 00:41:22,400
<font color="#CCCCCC">how you can bypass a lot of PowerShell</font>

1160
00:41:19,700 --> 00:41:25,129
logging this is unfortunately impacted

1161
00:41:22,400 --> 00:41:27,260
by<font color="#E5E5E5"> that as well so what I'll demo here</font>

1162
00:41:25,130 --> 00:41:28,850
is<font color="#CCCCCC"> a is an out-of-box forensic</font>

1163
00:41:27,260 --> 00:41:30,380
collection while we're compromising a

1164
00:41:28,850 --> 00:41:32,299
machine and<font color="#E5E5E5"> then we'll walk back what</font>

1165
00:41:30,380 --> 00:41:33,830
we're actually<font color="#E5E5E5"> able to to recreate so</font>

1166
00:41:32,300 --> 00:41:35,870
this is also<font color="#E5E5E5"> very useful beyond</font>

1167
00:41:33,830 --> 00:41:37,460
<font color="#E5E5E5">PowerShell there are certain processes</font>

1168
00:41:35,870 --> 00:41:39,319
<font color="#E5E5E5">that are not going to be PowerShell only</font>

1169
00:41:37,460 --> 00:41:42,020
that I'm going to demo so this is not a

1170
00:41:39,320 --> 00:41:43,670
<font color="#E5E5E5">powerful elite collection so here let me</font>

1171
00:41:42,020 --> 00:41:47,600
<font color="#E5E5E5">see if I can do this without completely</font>

1172
00:41:43,670 --> 00:41:52,220
botching this up and I think we've<font color="#E5E5E5"> ever</font>

1173
00:41:47,600 --> 00:41:54,259
<font color="#E5E5E5">done a live demo at brew</font><font color="#CCCCCC"> con this is a</font>

1174
00:41:52,220 --> 00:41:56,419
video<font color="#E5E5E5"> all right so what we're gonna do</font>

1175
00:41:54,260 --> 00:41:57,920
here is we're<font color="#E5E5E5"> running Empire</font><font color="#CCCCCC"> there's</font>

1176
00:41:56,420 --> 00:41:59,600
<font color="#E5E5E5">gonna be a victim</font><font color="#CCCCCC"> machine</font><font color="#E5E5E5"> that's going</font>

1177
00:41:57,920 --> 00:42:02,000
<font color="#E5E5E5">to be compromised that victim</font><font color="#CCCCCC"> machine is</font>

1178
00:41:59,600 --> 00:42:05,750
running<font color="#E5E5E5"> this etw forensic collection</font>

1179
00:42:02,000 --> 00:42:07,700
throughout this whole process so the

1180
00:42:05,750 --> 00:42:09,800
first thing we're going to do is get

1181
00:42:07,700 --> 00:42:10,160
<font color="#CCCCCC">onto the victim</font><font color="#E5E5E5"> in this case we're going</font>

1182
00:42:09,800 --> 00:42:12,620
<font color="#E5E5E5">to</font>

1183
00:42:10,160 --> 00:42:16,250
be a standard user on a domain joint

1184
00:42:12,620 --> 00:42:19,430
machine<font color="#E5E5E5"> who has no real privileges so</font>

1185
00:42:16,250 --> 00:42:21,890
here I<font color="#CCCCCC"> am</font><font color="#E5E5E5"> as norm no admin and then what</font>

1186
00:42:19,430 --> 00:42:23,960
I'm gonna<font color="#E5E5E5"> run is a command that's using</font>

1187
00:42:21,890 --> 00:42:25,400
cert util to download and execute<font color="#E5E5E5"> a</font>

1188
00:42:23,960 --> 00:42:28,670
PowerShell<font color="#E5E5E5"> script</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> the internet</font>

1189
00:42:25,400 --> 00:42:30,800
called<font color="#E5E5E5"> JIT</font><font color="#CCCCCC"> get GP password</font><font color="#E5E5E5"> and I see</font>

1190
00:42:28,670 --> 00:42:32,360
what this<font color="#CCCCCC"> does is it identifies domain</font>

1191
00:42:30,800 --> 00:42:34,310
<font color="#CCCCCC">join</font><font color="#E5E5E5"> machines that have hard-coded</font>

1192
00:42:32,360 --> 00:42:36,230
configuration passwords in them and then

1193
00:42:34,310 --> 00:42:39,020
gives them to you<font color="#CCCCCC"> in plague plain text</font>

1194
00:42:36,230 --> 00:42:40,540
<font color="#E5E5E5">so I'm going to elevate</font><font color="#CCCCCC"> myself</font><font color="#E5E5E5"> to run as</font>

1195
00:42:39,020 --> 00:42:43,310
<font color="#E5E5E5">an administrator</font>

1196
00:42:40,540 --> 00:42:44,750
<font color="#E5E5E5">so now that I'm an administrator we're</font>

1197
00:42:43,310 --> 00:42:47,930
going to go ahead<font color="#E5E5E5"> and</font><font color="#CCCCCC"> open up notepad</font>

1198
00:42:44,750 --> 00:42:56,420
and create a VBS script<font color="#E5E5E5"> and in this case</font>

1199
00:42:47,930 --> 00:42:58,430
it's going<font color="#E5E5E5"> to be the the Empire agent so</font>

1200
00:42:56,420 --> 00:43:00,140
I'm going to<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> launch</font>

1201
00:42:58,430 --> 00:43:01,970
<font color="#E5E5E5">PowerShell that didn't downloads and</font>

1202
00:43:00,140 --> 00:43:02,450
runs the<font color="#CCCCCC"> Empire agent</font><font color="#E5E5E5"> so here's our</font>

1203
00:43:01,970 --> 00:43:05,600
stager

1204
00:43:02,450 --> 00:43:08,060
<font color="#CCCCCC">and now if we move back we can see that</font>

1205
00:43:05,600 --> 00:43:09,080
we have an initiative<font color="#E5E5E5"> initial client</font><font color="#CCCCCC"> so</font>

1206
00:43:08,060 --> 00:43:14,080
I'm going<font color="#E5E5E5"> to go ahead and interact</font><font color="#CCCCCC"> with</font>

1207
00:43:09,080 --> 00:43:14,080
this and get<font color="#E5E5E5"> some information</font>

1208
00:43:18,430 --> 00:43:22,359
so now I'm<font color="#E5E5E5"> interacting with this machine</font>

1209
00:43:20,529 --> 00:43:25,619
remotely<font color="#CCCCCC"> and I'm going to</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> ahead and</font>

1210
00:43:22,359 --> 00:43:26,828
inject into the spooler<font color="#E5E5E5"> the spool SV</font>

1211
00:43:25,619 --> 00:43:29,559
<font color="#E5E5E5">process</font>

1212
00:43:26,829 --> 00:43:37,240
so now that I've injected<font color="#E5E5E5"> I'm going to</font>

1213
00:43:29,559 --> 00:43:39,460
run a couple<font color="#E5E5E5"> other commands so kill the</font>

1214
00:43:37,240 --> 00:43:42,479
original agent and<font color="#E5E5E5"> I'm interact with the</font>

1215
00:43:39,460 --> 00:43:42,480
injected agent

1216
00:43:51,030 --> 00:43:55,740
<font color="#E5E5E5">all right so you see now we're in the</font>

1217
00:43:52,860 --> 00:43:57,810
spool SV process and we've now injected

1218
00:43:55,740 --> 00:44:01,709
<font color="#E5E5E5">into this and we're gonna run you know</font>

1219
00:43:57,810 --> 00:44:04,520
<font color="#E5E5E5">shell</font><font color="#CCCCCC"> Q user and then run me me cats to</font>

1220
00:44:01,710 --> 00:44:04,520
dump credentials

1221
00:44:19,640 --> 00:44:24,290
and then just run a netstat command<font color="#E5E5E5"> and</font>

1222
00:44:22,220 --> 00:44:27,259
at this<font color="#E5E5E5"> point you know the attacks part</font>

1223
00:44:24,290 --> 00:44:28,460
of<font color="#E5E5E5"> this demo is over so as I mentioned</font>

1224
00:44:27,260 --> 00:44:31,700
<font color="#CCCCCC">during this whole</font><font color="#E5E5E5"> period we've been</font>

1225
00:44:28,460 --> 00:44:34,670
running just in<font color="#CCCCCC"> a TW collection</font><font color="#E5E5E5"> and so</font>

1226
00:44:31,700 --> 00:44:36,500
then<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the second</font><font color="#CCCCCC"> half of the demo I'm</font>

1227
00:44:34,670 --> 00:44:38,180
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> kind of walk through what that</font>

1228
00:44:36,500 --> 00:44:41,150
analysis looks like so here I'm running

1229
00:44:38,180 --> 00:44:43,279
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> version 6</font><font color="#E5E5E5"> on my back</font><font color="#CCCCCC"> and so I</font>

1230
00:44:41,150 --> 00:44:45,950
am<font color="#E5E5E5"> really hoping everything works out</font>

1231
00:44:43,280 --> 00:44:48,860
well<font color="#E5E5E5"> so you see there's some interesting</font>

1232
00:44:45,950 --> 00:44:50,600
<font color="#E5E5E5">spaces</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so I've imported the</font>

1233
00:44:48,860 --> 00:44:52,700
module and I want to see what the

1234
00:44:50,600 --> 00:44:54,470
different commands that<font color="#E5E5E5"> we have so one</font>

1235
00:44:52,700 --> 00:44:55,850
of<font color="#E5E5E5"> the things that I built into this</font>

1236
00:44:54,470 --> 00:44:58,009
module<font color="#E5E5E5"> is a way of</font><font color="#CCCCCC"> interacting with</font>

1237
00:44:55,850 --> 00:45:00,440
<font color="#E5E5E5">other etw providers so the intent was</font>

1238
00:44:58,010 --> 00:45:02,420
<font color="#E5E5E5">not to just give you given out a box way</font>

1239
00:45:00,440 --> 00:45:05,000
of collecting<font color="#E5E5E5"> forensic information but</font>

1240
00:45:02,420 --> 00:45:08,240
also inspecting identifying and<font color="#CCCCCC"> using</font>

1241
00:45:05,000 --> 00:45:09,830
other interesting etw<font color="#E5E5E5"> provider so I'm</font>

1242
00:45:08,240 --> 00:45:11,540
going to<font color="#E5E5E5"> give an</font><font color="#CCCCCC"> example of</font><font color="#E5E5E5"> a new one at</font>

1243
00:45:09,830 --> 00:45:13,279
the end but<font color="#CCCCCC"> just to give</font><font color="#E5E5E5"> you an idea</font>

1244
00:45:11,540 --> 00:45:15,020
<font color="#CCCCCC">like I said there's hundreds of</font><font color="#E5E5E5"> them on</font>

1245
00:45:13,280 --> 00:45:18,230
<font color="#E5E5E5">any given Windows machine and</font><font color="#CCCCCC"> we're</font>

1246
00:45:15,020 --> 00:45:19,670
using I<font color="#CCCCCC"> think</font><font color="#E5E5E5"> six today so there's a lot</font>

1247
00:45:18,230 --> 00:45:21,140
<font color="#E5E5E5">of other options out there if anybody</font>

1248
00:45:19,670 --> 00:45:24,800
wants<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take the</font><font color="#CCCCCC"> time to actually go in</font>

1249
00:45:21,140 --> 00:45:28,730
and<font color="#CCCCCC"> look so in this case I'm going to</font>

1250
00:45:24,800 --> 00:45:30,860
<font color="#E5E5E5">just import the</font><font color="#CCCCCC"> demo XML so as an</font>

1251
00:45:28,730 --> 00:45:32,540
example<font color="#E5E5E5"> because I didn't do a ton of</font>

1252
00:45:30,860 --> 00:45:34,760
filtering on this session<font color="#E5E5E5"> you know that</font>

1253
00:45:32,540 --> 00:45:37,880
<font color="#CCCCCC">2 minute demo</font><font color="#E5E5E5"> generated probably</font><font color="#CCCCCC"> bout a</font>

1254
00:45:34,760 --> 00:45:39,800
<font color="#E5E5E5">hundred to two hundred Meg's of logs so</font>

1255
00:45:37,880 --> 00:45:41,540
<font color="#E5E5E5">that gives you some idea</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the scope</font>

1256
00:45:39,800 --> 00:45:43,550
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> scale of what you can get with</font>

1257
00:45:41,540 --> 00:45:45,770
etw and then you know the hard part in

1258
00:45:43,550 --> 00:45:47,420
this case<font color="#CCCCCC"> is actually parsing it down to</font>

1259
00:45:45,770 --> 00:45:52,280
make it<font color="#E5E5E5"> so you're not constantly being</font>

1260
00:45:47,420 --> 00:45:53,930
flooded<font color="#E5E5E5"> with logging events so the first</font>

1261
00:45:52,280 --> 00:45:55,520
thing I'm<font color="#CCCCCC"> going to do is just look</font>

1262
00:45:53,930 --> 00:45:57,560
through my session<font color="#E5E5E5"> and</font><font color="#CCCCCC"> pull out any</font>

1263
00:45:55,520 --> 00:45:59,390
<font color="#E5E5E5">instances where PowerShell PowerShell</font>

1264
00:45:57,560 --> 00:46:02,720
was<font color="#E5E5E5"> run so here we have the process ID</font>

1265
00:45:59,390 --> 00:46:04,700
as well<font color="#E5E5E5"> as the the process path</font><font color="#CCCCCC"> so I'm</font>

1266
00:46:02,720 --> 00:46:05,930
<font color="#E5E5E5">gonna take a look at the first one</font><font color="#CCCCCC"> and</font>

1267
00:46:04,700 --> 00:46:07,490
<font color="#E5E5E5">just see</font><font color="#CCCCCC"> all the different properties</font>

1268
00:46:05,930 --> 00:46:09,649
<font color="#CCCCCC">that are available to me to look at this</font>

1269
00:46:07,490 --> 00:46:11,390
session so we can see<font color="#E5E5E5"> things like child</font>

1270
00:46:09,650 --> 00:46:13,310
processes<font color="#E5E5E5"> the command line that was</font>

1271
00:46:11,390 --> 00:46:14,330
provided to<font color="#CCCCCC"> it what commands they run to</font>

1272
00:46:13,310 --> 00:46:16,850
<font color="#E5E5E5">create time of the process</font>

1273
00:46:14,330 --> 00:46:18,110
<font color="#CCCCCC">io dll's that were being loaded and a</font>

1274
00:46:16,850 --> 00:46:23,180
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different things that will go</font>

1275
00:46:18,110 --> 00:46:24,350
into during<font color="#E5E5E5"> the demo so let's take a</font>

1276
00:46:23,180 --> 00:46:26,930
look<font color="#CCCCCC"> at all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> different commands we</font>

1277
00:46:24,350 --> 00:46:29,089
ran in this single instance so this was

1278
00:46:26,930 --> 00:46:31,669
the get<font color="#E5E5E5"> GPB password</font><font color="#CCCCCC"> and so in this</font><font color="#E5E5E5"> case</font>

1279
00:46:29,090 --> 00:46:33,230
<font color="#CCCCCC">this is</font><font color="#E5E5E5"> similar to</font><font color="#CCCCCC"> not only</font><font color="#E5E5E5"> module</font>

1280
00:46:31,670 --> 00:46:33,560
<font color="#E5E5E5">logging but you're also getting things</font>

1281
00:46:33,230 --> 00:46:39,140
like

1282
00:46:33,560 --> 00:46:41,900
<font color="#E5E5E5">whom</font><font color="#CCCCCC"> I and other types of Ohno and other</font>

1283
00:46:39,140 --> 00:46:44,589
types of sub processes<font color="#E5E5E5"> that are being</font>

1284
00:46:41,900 --> 00:46:47,480
<font color="#CCCCCC">run in this specific power show instance</font>

1285
00:46:44,590 --> 00:46:49,970
<font color="#CCCCCC">so now we can say okay well show me all</font>

1286
00:46:47,480 --> 00:46:53,090
script blocks<font color="#E5E5E5"> so in this case this will</font>

1287
00:46:49,970 --> 00:46:54,350
look at and reconstitute all script

1288
00:46:53,090 --> 00:46:55,910
locks that are logged and then provide

1289
00:46:54,350 --> 00:46:58,009
them<font color="#E5E5E5"> in two</font><font color="#CCCCCC"> different objects so this is</font>

1290
00:46:55,910 --> 00:47:04,940
all the source code forget<font color="#CCCCCC"> GPP password</font>

1291
00:46:58,010 --> 00:47:06,260
that<font color="#E5E5E5"> was downloaded</font><font color="#CCCCCC"> via the internet so</font>

1292
00:47:04,940 --> 00:47:07,610
in this case let's look<font color="#E5E5E5"> at you know</font><font color="#CCCCCC"> all</font>

1293
00:47:06,260 --> 00:47:09,110
the different child<font color="#CCCCCC"> processes that we</font>

1294
00:47:07,610 --> 00:47:10,520
ran in<font color="#CCCCCC"> that first instance so you know</font>

1295
00:47:09,110 --> 00:47:13,400
when we<font color="#CCCCCC"> are interacting with</font><font color="#E5E5E5"> this</font>

1296
00:47:10,520 --> 00:47:15,470
machine<font color="#CCCCCC"> we ran who am i</font><font color="#E5E5E5"> /all to verify</font>

1297
00:47:13,400 --> 00:47:17,740
you know<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are norm no admin and then</font>

1298
00:47:15,470 --> 00:47:21,919
<font color="#E5E5E5">we're an insert util to then download</font>

1299
00:47:17,740 --> 00:47:23,720
<font color="#CCCCCC">the GPB</font><font color="#E5E5E5"> password text from github and</font>

1300
00:47:21,920 --> 00:47:25,250
then we did run as administrator so all

1301
00:47:23,720 --> 00:47:29,330
these things<font color="#E5E5E5"> are captured and logged as</font>

1302
00:47:25,250 --> 00:47:31,550
trial processes so now we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

1303
00:47:29,330 --> 00:47:33,080
take a look<font color="#E5E5E5"> at search cert util so you</font>

1304
00:47:31,550 --> 00:47:34,460
see here<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know we can already kind of</font>

1305
00:47:33,080 --> 00:47:36,920
see<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> information that</font><font color="#E5E5E5"> you get</font>

1306
00:47:34,460 --> 00:47:38,600
all<font color="#E5E5E5"> the floating information all the</font>

1307
00:47:36,920 --> 00:47:42,160
different loaded images the<font color="#CCCCCC"> file system</font>

1308
00:47:38,600 --> 00:47:42,160
activity<font color="#E5E5E5"> but we can also drill into that</font>

1309
00:47:42,550 --> 00:47:47,990
so here we<font color="#E5E5E5"> can check all the domain</font>

1310
00:47:45,170 --> 00:47:49,790
lookups<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> ipv4 addresses and then</font>

1311
00:47:47,990 --> 00:47:51,919
just verify that<font color="#CCCCCC"> it matches</font><font color="#E5E5E5"> our network</font>

1312
00:47:49,790 --> 00:47:53,450
connections<font color="#E5E5E5"> so in this case you know we</font>

1313
00:47:51,920 --> 00:47:54,530
can confirm these are the<font color="#CCCCCC"> domains</font><font color="#E5E5E5"> that</font>

1314
00:47:53,450 --> 00:47:55,970
we looked up and<font color="#CCCCCC"> these were the</font>

1315
00:47:54,530 --> 00:47:59,360
addresses<font color="#CCCCCC"> that the script actually</font>

1316
00:47:55,970 --> 00:48:01,339
<font color="#E5E5E5">connected to here's one as so this is</font>

1317
00:47:59,360 --> 00:48:05,480
when we elevated<font color="#E5E5E5"> ourselves to</font><font color="#CCCCCC"> become an</font>

1318
00:48:01,340 --> 00:48:09,080
administrator<font color="#E5E5E5"> on this box so we see then</font>

1319
00:48:05,480 --> 00:48:10,880
then we ran command so I'm<font color="#E5E5E5"> just gonna go</font>

1320
00:48:09,080 --> 00:48:13,520
look<font color="#E5E5E5"> at this and then we see you know we</font>

1321
00:48:10,880 --> 00:48:16,930
started notepad launcher<font color="#CCCCCC"> DBS and</font><font color="#E5E5E5"> then we</font>

1322
00:48:13,520 --> 00:48:16,930
<font color="#E5E5E5">actually executed it with C script</font>

1323
00:48:18,570 --> 00:48:22,590
so and then we can confirm<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> is</font>

1324
00:48:20,580 --> 00:48:28,470
where we launched and written to

1325
00:48:22,590 --> 00:48:32,490
<font color="#CCCCCC">launcher dot BBS and sure enough we can</font>

1326
00:48:28,470 --> 00:48:33,750
verify that<font color="#E5E5E5"> with C script yep and then</font>

1327
00:48:32,490 --> 00:48:39,899
so here's the second instance<font color="#E5E5E5"> of</font>

1328
00:48:33,750 --> 00:48:41,760
<font color="#E5E5E5">PowerShell that got executed and so this</font>

1329
00:48:39,900 --> 00:48:44,070
is the the PowerShell command<font color="#E5E5E5"> that was</font>

1330
00:48:41,760 --> 00:48:45,650
<font color="#E5E5E5">executed via launcher DBS so this case</font>

1331
00:48:44,070 --> 00:48:48,030
you know they're really<font color="#E5E5E5"> not taking much</font>

1332
00:48:45,650 --> 00:48:49,470
they're not<font color="#CCCCCC"> being too careful in offi</font>

1333
00:48:48,030 --> 00:48:51,300
<font color="#E5E5E5">skating their command lines you know in</font>

1334
00:48:49,470 --> 00:48:57,629
this<font color="#E5E5E5"> case we just have a base64 encoded</font>

1335
00:48:51,300 --> 00:48:59,220
command and then<font color="#E5E5E5"> similarly</font><font color="#CCCCCC"> we can do</font><font color="#E5E5E5"> the</font>

1336
00:48:57,630 --> 00:49:01,350
same<font color="#E5E5E5"> thing that we did</font><font color="#CCCCCC"> before so</font><font color="#E5E5E5"> look at</font>

1337
00:48:59,220 --> 00:49:07,830
all<font color="#E5E5E5"> the different commands that were</font>

1338
00:49:01,350 --> 00:49:09,690
actually<font color="#CCCCCC"> montt actually run and in this</font>

1339
00:49:07,830 --> 00:49:11,940
<font color="#E5E5E5">case</font><font color="#CCCCCC"> we ran invoke</font><font color="#E5E5E5"> Empire so this is the</font>

1340
00:49:09,690 --> 00:49:13,850
actual<font color="#E5E5E5"> source code source code from the</font>

1341
00:49:11,940 --> 00:49:16,770
<font color="#CCCCCC">Empire agent so again this</font><font color="#E5E5E5"> was</font>

1342
00:49:13,850 --> 00:49:19,500
downloaded and invoked<font color="#E5E5E5"> and not really</font>

1343
00:49:16,770 --> 00:49:21,120
<font color="#E5E5E5">written to disk</font><font color="#CCCCCC"> too much and then we</font>

1344
00:49:19,500 --> 00:49:26,220
were<font color="#CCCCCC"> able to capture it and log it with</font>

1345
00:49:21,120 --> 00:49:27,870
etw so there are a<font color="#E5E5E5"> couple things that</font>

1346
00:49:26,220 --> 00:49:29,700
were written<font color="#E5E5E5"> to this so here's some of</font>

1347
00:49:27,870 --> 00:49:31,170
<font color="#CCCCCC">the examples</font><font color="#E5E5E5"> and you also see</font><font color="#CCCCCC"> that in</font>

1348
00:49:29,700 --> 00:49:34,080
<font color="#E5E5E5">this case you can have create and</font>

1349
00:49:31,170 --> 00:49:36,000
deletes<font color="#CCCCCC"> you can also enable reads with</font>

1350
00:49:34,080 --> 00:49:37,830
<font color="#CCCCCC">egw but I highly</font><font color="#E5E5E5"> don't recommend that</font>

1351
00:49:36,000 --> 00:49:42,240
<font color="#E5E5E5">there's a lot of file system reading</font>

1352
00:49:37,830 --> 00:49:44,040
that goes on similarly we<font color="#CCCCCC"> can look</font><font color="#E5E5E5"> up</font>

1353
00:49:42,240 --> 00:49:47,870
you know these domain lookup so this is

1354
00:49:44,040 --> 00:49:50,910
the the<font color="#CCCCCC"> c2 address for our</font><font color="#E5E5E5"> Empire agent</font>

1355
00:49:47,870 --> 00:49:54,330
and here<font color="#CCCCCC"> their connections</font><font color="#E5E5E5"> associate it</font>

1356
00:49:50,910 --> 00:49:57,180
with that<font color="#CCCCCC"> one of the other cool</font><font color="#E5E5E5"> things</font>

1357
00:49:54,330 --> 00:49:59,009
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you get after a process</font><font color="#CCCCCC"> exit is you</font>

1358
00:49:57,180 --> 00:50:00,450
can<font color="#CCCCCC"> kisi</font><font color="#E5E5E5"> you know similar you know</font>

1359
00:49:59,010 --> 00:50:03,120
<font color="#E5E5E5">almost net flow data so you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see the</font>

1360
00:50:00,450 --> 00:50:05,580
full you<font color="#E5E5E5"> know the transfer kilobytes</font>

1361
00:50:03,120 --> 00:50:08,130
<font color="#CCCCCC">read and written as part of our</font>

1362
00:50:05,580 --> 00:50:09,630
<font color="#E5E5E5">processes instance so if a processes are</font>

1363
00:50:08,130 --> 00:50:11,340
writing large amounts of data you can

1364
00:50:09,630 --> 00:50:12,810
sometimes recreate<font color="#E5E5E5"> this back to</font>

1365
00:50:11,340 --> 00:50:16,440
determine you know was there some type

1366
00:50:12,810 --> 00:50:17,520
of<font color="#E5E5E5"> data theft</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> took place so here's</font>

1367
00:50:16,440 --> 00:50:19,710
<font color="#E5E5E5">another one where</font><font color="#CCCCCC"> we can actually see</font>

1368
00:50:17,520 --> 00:50:22,110
all<font color="#CCCCCC"> the different</font><font color="#E5E5E5"> deals that were loaded</font>

1369
00:50:19,710 --> 00:50:24,780
<font color="#CCCCCC">so another</font><font color="#E5E5E5"> common technique you know is</font>

1370
00:50:22,110 --> 00:50:26,910
to use the automation<font color="#E5E5E5"> DLL which is</font>

1371
00:50:24,780 --> 00:50:30,550
really the<font color="#E5E5E5"> the DLL that PowerShell uses</font>

1372
00:50:26,910 --> 00:50:33,460
under the hood<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then use that in</font>

1373
00:50:30,550 --> 00:50:35,349
in lieu of<font color="#CCCCCC"> using powershell and so in</font>

1374
00:50:33,460 --> 00:50:38,619
this<font color="#E5E5E5"> case when we injected into spools</font>

1375
00:50:35,349 --> 00:50:40,030
<font color="#CCCCCC">sv</font><font color="#E5E5E5"> we injected into this nineteen</font>

1376
00:50:38,619 --> 00:50:41,980
<font color="#E5E5E5">twenty-four process so this is the</font>

1377
00:50:40,030 --> 00:50:46,000
second process that looked up the domain

1378
00:50:41,980 --> 00:50:48,690
let's pop a box so you<font color="#E5E5E5"> see here that the</font>

1379
00:50:46,000 --> 00:50:51,579
<font color="#CCCCCC">image name is blank</font>

1380
00:50:48,690 --> 00:50:53,410
the reason it's<font color="#E5E5E5"> blank is that you know</font>

1381
00:50:51,579 --> 00:50:55,329
we this process started before<font color="#E5E5E5"> we</font>

1382
00:50:53,410 --> 00:50:56,920
<font color="#E5E5E5">started our collection</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> didn't have</font>

1383
00:50:55,329 --> 00:50:58,480
<font color="#CCCCCC">the process create event that we would</font>

1384
00:50:56,920 --> 00:51:00,490
normally<font color="#E5E5E5"> see if we had this running</font>

1385
00:50:58,480 --> 00:51:01,990
before<font color="#E5E5E5"> the process started so in this</font>

1386
00:51:00,490 --> 00:51:02,950
case we<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> get the image name or the</font>

1387
00:51:01,990 --> 00:51:04,509
command line that's one of the

1388
00:51:02,950 --> 00:51:05,980
<font color="#CCCCCC">limitations</font><font color="#E5E5E5"> you know you can only see</font>

1389
00:51:04,510 --> 00:51:09,220
<font color="#E5E5E5">things that you're monitoring for going</font>

1390
00:51:05,980 --> 00:51:12,430
forward with etw<font color="#E5E5E5"> but if we look at the</font>

1391
00:51:09,220 --> 00:51:14,500
file i/o<font color="#CCCCCC"> unprocessed ID 1924 you know</font>

1392
00:51:12,430 --> 00:51:16,240
it's pretty<font color="#CCCCCC"> obvious what this process</font>

1393
00:51:14,500 --> 00:51:18,849
<font color="#CCCCCC">really is because it's</font><font color="#E5E5E5"> really writing</font>

1394
00:51:16,240 --> 00:51:22,020
<font color="#E5E5E5">only to the spool strivers directory</font>

1395
00:51:18,849 --> 00:51:24,190
which<font color="#E5E5E5"> is</font><font color="#CCCCCC"> what spools SV</font><font color="#E5E5E5"> is going to do</font>

1396
00:51:22,020 --> 00:51:26,589
so<font color="#E5E5E5"> then we can</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at all the child</font>

1397
00:51:24,190 --> 00:51:28,089
processes<font color="#E5E5E5"> of spools SV</font><font color="#CCCCCC"> and you know if</font>

1398
00:51:26,589 --> 00:51:29,380
you've<font color="#E5E5E5"> injected into this this is</font>

1399
00:51:28,089 --> 00:51:30,849
<font color="#E5E5E5">definitely something that would stand</font>

1400
00:51:29,380 --> 00:51:32,200
out<font color="#CCCCCC"> and</font><font color="#E5E5E5"> if you look these are all the</font>

1401
00:51:30,849 --> 00:51:34,240
different trial processes that<font color="#E5E5E5"> were</font>

1402
00:51:32,200 --> 00:51:39,220
actually executed<font color="#E5E5E5"> from our attackers</font>

1403
00:51:34,240 --> 00:51:41,828
session see that the domain lookups<font color="#E5E5E5"> took</font>

1404
00:51:39,220 --> 00:51:43,808
place<font color="#CCCCCC"> what's interesting about this is</font>

1405
00:51:41,829 --> 00:51:46,030
<font color="#CCCCCC">you</font><font color="#E5E5E5"> know this</font><font color="#CCCCCC"> is the spools SV process</font>

1406
00:51:43,809 --> 00:51:48,549
and one of<font color="#CCCCCC"> the things you'll see here in</font>

1407
00:51:46,030 --> 00:51:50,290
the<font color="#E5E5E5"> next session is that we can</font><font color="#CCCCCC"> actually</font>

1408
00:51:48,549 --> 00:51:52,390
see<font color="#E5E5E5"> that they loaded the automation DLL</font>

1409
00:51:50,290 --> 00:51:54,940
so when the<font color="#E5E5E5"> Empire agent injected itself</font>

1410
00:51:52,390 --> 00:51:57,308
<font color="#E5E5E5">into the spools SV process it brought</font>

1411
00:51:54,940 --> 00:52:00,010
with<font color="#CCCCCC"> us</font><font color="#E5E5E5"> the automation DLL so if you do</font>

1412
00:51:57,309 --> 00:52:01,450
any<font color="#E5E5E5"> type of DLL load monitoring and</font>

1413
00:52:00,010 --> 00:52:03,010
alerting<font color="#CCCCCC"> you know one of the good</font>

1414
00:52:01,450 --> 00:52:04,720
techniques in this<font color="#E5E5E5"> case could be maybe</font>

1415
00:52:03,010 --> 00:52:06,970
looking<font color="#E5E5E5"> at the loads of automation</font>

1416
00:52:04,720 --> 00:52:09,098
<font color="#E5E5E5">without you know PowerShell being the</font>

1417
00:52:06,970 --> 00:52:10,359
<font color="#E5E5E5">process is doing the loading certainly</font>

1418
00:52:09,099 --> 00:52:12,130
<font color="#E5E5E5">if spools SV starts loading the</font>

1419
00:52:10,359 --> 00:52:15,790
automation<font color="#E5E5E5"> DLL you should probably call</font>

1420
00:52:12,130 --> 00:52:18,040
somebody<font color="#CCCCCC"> so here's just</font><font color="#E5E5E5"> a quick example</font>

1421
00:52:15,790 --> 00:52:19,750
<font color="#E5E5E5">of the level of granularity that you can</font>

1422
00:52:18,040 --> 00:52:22,210
get with etw<font color="#E5E5E5"> I'm not going to spend a</font>

1423
00:52:19,750 --> 00:52:24,099
ton of time<font color="#E5E5E5"> here but with on a per</font>

1424
00:52:22,210 --> 00:52:26,470
thread basis you can see you know within

1425
00:52:24,099 --> 00:52:28,119
<font color="#E5E5E5">the spools</font><font color="#CCCCCC"> v</font><font color="#E5E5E5"> process which thread was</font>

1426
00:52:26,470 --> 00:52:29,709
actually<font color="#CCCCCC"> responsible for doing</font><font color="#E5E5E5"> the</font>

1427
00:52:28,119 --> 00:52:31,450
domain lookups as well as doing any sort

1428
00:52:29,710 --> 00:52:34,780
<font color="#E5E5E5">of</font><font color="#CCCCCC"> filesystem</font><font color="#E5E5E5"> activity you know</font>

1429
00:52:31,450 --> 00:52:36,339
everything here<font color="#CCCCCC"> can be traced</font><font color="#E5E5E5"> back not</font>

1430
00:52:34,780 --> 00:52:38,589
only<font color="#CCCCCC"> to the process</font><font color="#E5E5E5"> but the individual</font>

1431
00:52:36,339 --> 00:52:40,650
thread so for things like<font color="#CCCCCC"> process</font>

1432
00:52:38,589 --> 00:52:43,328
injection you know you actually<font color="#E5E5E5"> have a</font>

1433
00:52:40,650 --> 00:52:44,140
pretty decent means of looking<font color="#CCCCCC"> at that</font>

1434
00:52:43,329 --> 00:52:45,550
and then

1435
00:52:44,140 --> 00:52:48,910
narrowing it down to<font color="#E5E5E5"> the individual</font>

1436
00:52:45,550 --> 00:52:50,290
<font color="#E5E5E5">thread so here's you know all the</font>

1437
00:52:48,910 --> 00:52:51,460
commands<font color="#E5E5E5"> so even though we're not</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> a</font>

1438
00:52:50,290 --> 00:52:53,380
<font color="#E5E5E5">PowerShell process</font>

1439
00:52:51,460 --> 00:52:55,420
but because we're running PowerShell

1440
00:52:53,380 --> 00:52:56,830
commands we're still getting<font color="#E5E5E5"> that so in</font>

1441
00:52:55,420 --> 00:52:57,550
this<font color="#E5E5E5"> case you know we</font><font color="#CCCCCC"> ran invoke</font>

1442
00:52:56,830 --> 00:52:58,900
<font color="#E5E5E5">mimikatz</font>

1443
00:52:57,550 --> 00:53:02,020
<font color="#E5E5E5">so we can see this right</font><font color="#CCCCCC"> here on the</font>

1444
00:52:58,900 --> 00:53:03,460
screen<font color="#CCCCCC"> but what's nice is just because</font>

1445
00:53:02,020 --> 00:53:06,310
we're<font color="#CCCCCC"> running the automation</font><font color="#E5E5E5"> DLL we're</font>

1446
00:53:03,460 --> 00:53:09,460
also getting event<font color="#CCCCCC"> logging so here I'm</font>

1447
00:53:06,310 --> 00:53:11,230
<font color="#CCCCCC">just looking at script locks and</font><font color="#E5E5E5"> in this</font>

1448
00:53:09,460 --> 00:53:13,510
case what we<font color="#CCCCCC"> see is you know we now get</font>

1449
00:53:11,230 --> 00:53:15,400
<font color="#E5E5E5">the full Mimi</font><font color="#CCCCCC"> Katz</font><font color="#E5E5E5"> script block logging</font>

1450
00:53:13,510 --> 00:53:17,350
here set in our session so again this is

1451
00:53:15,400 --> 00:53:19,840
PowerShell commands being run out<font color="#E5E5E5"> of the</font>

1452
00:53:17,350 --> 00:53:25,089
spools<font color="#CCCCCC"> SV process but still being</font><font color="#E5E5E5"> logged</font>

1453
00:53:19,840 --> 00:53:26,920
with etw<font color="#CCCCCC"> and so one of</font><font color="#E5E5E5"> the last things</font>

1454
00:53:25,090 --> 00:53:28,600
are built<font color="#CCCCCC"> into this because</font><font color="#E5E5E5"> as I walk</font>

1455
00:53:26,920 --> 00:53:30,010
<font color="#CCCCCC">through this demo I realize how</font><font color="#E5E5E5"> hard it</font>

1456
00:53:28,600 --> 00:53:31,120
is to<font color="#CCCCCC"> actually follow some of this</font>

1457
00:53:30,010 --> 00:53:33,220
because<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of it has</font><font color="#CCCCCC"> to do with</font>

1458
00:53:31,120 --> 00:53:34,810
<font color="#E5E5E5">injection and processes launching other</font>

1459
00:53:33,220 --> 00:53:37,480
processes is it would be<font color="#CCCCCC"> really</font>

1460
00:53:34,810 --> 00:53:38,920
<font color="#CCCCCC">interesting to be able</font><font color="#E5E5E5"> to graph out you</font>

1461
00:53:37,480 --> 00:53:41,110
know what<font color="#E5E5E5"> this actually looks</font><font color="#CCCCCC"> like so</font><font color="#E5E5E5"> in</font>

1462
00:53:38,920 --> 00:53:43,150
<font color="#E5E5E5">this case we see you know unknown 1924</font>

1463
00:53:41,110 --> 00:53:44,940
which is the spools SV process<font color="#E5E5E5"> these are</font>

1464
00:53:43,150 --> 00:53:46,870
all the the child<font color="#E5E5E5"> processes of it</font>

1465
00:53:44,940 --> 00:53:48,670
similarly if<font color="#E5E5E5"> we start back from the</font>

1466
00:53:46,870 --> 00:53:51,279
beginning from<font color="#E5E5E5"> our first powerful</font>

1467
00:53:48,670 --> 00:53:53,350
<font color="#E5E5E5">instance we build a graph off of that we</font>

1468
00:53:51,280 --> 00:53:55,120
can really<font color="#E5E5E5"> see our attack visually so we</font>

1469
00:53:53,350 --> 00:53:56,980
start with<font color="#E5E5E5"> PowerShell then we ran</font><font color="#CCCCCC"> con</font>

1470
00:53:55,120 --> 00:53:59,680
host who in my cert util<font color="#CCCCCC"> which is what</font>

1471
00:53:56,980 --> 00:54:01,150
downloaded an executed<font color="#CCCCCC"> GPP password and</font>

1472
00:53:59,680 --> 00:54:03,819
they were in run as to elevate<font color="#E5E5E5"> our</font>

1473
00:54:01,150 --> 00:54:06,370
privileges<font color="#CCCCCC"> then we spawned a command</font>

1474
00:54:03,820 --> 00:54:09,310
shell<font color="#E5E5E5"> that was then used to open notepad</font>

1475
00:54:06,370 --> 00:54:11,920
<font color="#E5E5E5">write VB at the launcher dot VBS and</font>

1476
00:54:09,310 --> 00:54:14,110
then run it with C script<font color="#E5E5E5"> C script then</font>

1477
00:54:11,920 --> 00:54:15,670
invokes<font color="#E5E5E5"> PowerShell and then ultimately</font>

1478
00:54:14,110 --> 00:54:17,650
<font color="#E5E5E5">spawns</font><font color="#CCCCCC"> con host because that's how we're</font>

1479
00:54:15,670 --> 00:54:20,170
<font color="#CCCCCC">interacting with</font><font color="#E5E5E5"> our first incidents so</font>

1480
00:54:17,650 --> 00:54:22,420
this is<font color="#E5E5E5"> just a nice visual</font><font color="#CCCCCC"> way of</font><font color="#E5E5E5"> seeing</font>

1481
00:54:20,170 --> 00:54:24,010
what<font color="#E5E5E5"> the data we captured with etw so</font>

1482
00:54:22,420 --> 00:54:26,440
behind each one of these though is a

1483
00:54:24,010 --> 00:54:28,090
process object<font color="#CCCCCC"> that map's back you know</font>

1484
00:54:26,440 --> 00:54:30,400
<font color="#E5E5E5">what</font><font color="#CCCCCC"> filesystem</font><font color="#E5E5E5"> activity what domain</font>

1485
00:54:28,090 --> 00:54:31,720
lookups what threads were created all

1486
00:54:30,400 --> 00:54:36,610
different<font color="#CCCCCC"> things that were</font><font color="#E5E5E5"> available to</font>

1487
00:54:31,720 --> 00:54:39,370
<font color="#CCCCCC">us so that was our demo I'm just gonna</font>

1488
00:54:36,610 --> 00:54:42,340
jump<font color="#CCCCCC"> back here so we have one more</font><font color="#E5E5E5"> slide</font>

1489
00:54:39,370 --> 00:54:43,779
on<font color="#CCCCCC"> etw I</font><font color="#E5E5E5"> guess two more slides on</font><font color="#CCCCCC"> etw so</font>

1490
00:54:42,340 --> 00:54:45,820
this one is<font color="#CCCCCC"> around dotnet visibility's</font>

1491
00:54:43,780 --> 00:54:48,640
who talked<font color="#E5E5E5"> about sharps bleep earlier</font>

1492
00:54:45,820 --> 00:54:50,770
<font color="#CCCCCC">and how it</font><font color="#E5E5E5"> kind of bypasses a lot of the</font>

1493
00:54:48,640 --> 00:54:52,270
the<font color="#E5E5E5"> PowerShell logging and</font><font color="#CCCCCC"> PowerShell</font>

1494
00:54:50,770 --> 00:54:54,460
<font color="#CCCCCC">blue teen capabilities</font><font color="#E5E5E5"> that are built</font>

1495
00:54:52,270 --> 00:54:55,630
into modern versions<font color="#CCCCCC"> one of the nice</font>

1496
00:54:54,460 --> 00:54:57,400
things<font color="#CCCCCC"> I</font><font color="#E5E5E5"> found though is</font><font color="#CCCCCC"> that there's a</font>

1497
00:54:55,630 --> 00:54:59,529
dotnet etw provider

1498
00:54:57,400 --> 00:55:02,619
so there's a couple<font color="#E5E5E5"> of them</font><font color="#CCCCCC"> this one I</font>

1499
00:54:59,529 --> 00:55:05,529
used dotnet<font color="#E5E5E5"> runtime and I started a</font>

1500
00:55:02,619 --> 00:55:07,440
session and I ran<font color="#E5E5E5"> this specific specific</font>

1501
00:55:05,529 --> 00:55:09,099
command where me me cats invoke all

1502
00:55:07,440 --> 00:55:10,869
<font color="#E5E5E5">because the source code is available</font>

1503
00:55:09,099 --> 00:55:12,400
<font color="#E5E5E5">actually when looked at it what's</font>

1504
00:55:10,869 --> 00:55:14,079
important<font color="#E5E5E5"> is you see here it starts with</font>

1505
00:55:12,400 --> 00:55:15,999
<font color="#E5E5E5">logon passwords and a call to the</font>

1506
00:55:14,079 --> 00:55:19,359
<font color="#E5E5E5">function and then</font><font color="#CCCCCC"> I run Sam dump LSA</font>

1507
00:55:15,999 --> 00:55:21,399
secrets<font color="#CCCCCC"> LS</font><font color="#E5E5E5"> a cache W</font><font color="#CCCCCC"> digest</font><font color="#E5E5E5"> before I</font>

1508
00:55:19,359 --> 00:55:22,719
show you the results<font color="#E5E5E5"> one thing to notice</font>

1509
00:55:21,400 --> 00:55:25,170
is this is<font color="#CCCCCC"> another provider that</font>

1510
00:55:22,719 --> 00:55:27,190
generates a<font color="#E5E5E5"> lot of data without</font>

1511
00:55:25,170 --> 00:55:30,160
filtering in place it will<font color="#CCCCCC"> actually look</font>

1512
00:55:27,190 --> 00:55:33,009
at every<font color="#E5E5E5"> net call stack and log it to</font>

1513
00:55:30,160 --> 00:55:34,719
<font color="#E5E5E5">etw so it's a ton of information but if</font>

1514
00:55:33,009 --> 00:55:36,369
you parse it out<font color="#E5E5E5"> you can actually see</font>

1515
00:55:34,719 --> 00:55:41,380
all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> different dotnet methods and</font>

1516
00:55:36,369 --> 00:55:43,960
calls logged in<font color="#CCCCCC"> atw so we see first one</font>

1517
00:55:41,380 --> 00:55:45,489
was here we ran all it starts with<font color="#CCCCCC"> logon</font>

1518
00:55:43,960 --> 00:55:47,349
passwords this is a function<font color="#E5E5E5"> call and</font>

1519
00:55:45,489 --> 00:55:49,059
then calls<font color="#E5E5E5"> this to command if we were to</font>

1520
00:55:47,349 --> 00:55:50,890
<font color="#E5E5E5">look through the source</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> at that</font>

1521
00:55:49,059 --> 00:55:54,670
<font color="#E5E5E5">point</font><font color="#CCCCCC"> mimi</font><font color="#E5E5E5"> cats has not been loaded yet</font>

1522
00:55:50,890 --> 00:55:56,379
so these methods are all the loading and

1523
00:55:54,670 --> 00:55:59,049
calling of mimi cats

1524
00:55:56,380 --> 00:56:01,029
<font color="#CCCCCC">Anish initially by Sharps boy and then</font>

1525
00:55:59,049 --> 00:56:02,529
finally we get back<font color="#E5E5E5"> after we do get</font>

1526
00:56:01,029 --> 00:56:03,789
export function<font color="#E5E5E5"> that means we're</font>

1527
00:56:02,529 --> 00:56:05,859
<font color="#E5E5E5">starting to execute me me cats you'll</font>

1528
00:56:03,789 --> 00:56:08,710
see in subsequent order<font color="#CCCCCC"> Sam dump LSA</font>

1529
00:56:05,859 --> 00:56:10,450
secrets<font color="#CCCCCC"> LS</font><font color="#E5E5E5"> a cache W digest so in this</font>

1530
00:56:08,710 --> 00:56:12,369
<font color="#E5E5E5">case we're logging in some control order</font>

1531
00:56:10,450 --> 00:56:13,989
what matches the<font color="#CCCCCC"> source code of</font><font color="#E5E5E5"> what</font>

1532
00:56:12,369 --> 00:56:15,969
we're what we're actually<font color="#E5E5E5"> running into</font>

1533
00:56:13,989 --> 00:56:18,549
the hood so done that<font color="#E5E5E5"> actually provides</font>

1534
00:56:15,969 --> 00:56:23,200
a really good provider<font color="#CCCCCC"> if you're looking</font>

1535
00:56:18,549 --> 00:56:26,440
<font color="#E5E5E5">to map back activity all right so to</font>

1536
00:56:23,200 --> 00:56:28,479
wrap up<font color="#E5E5E5"> with quick takeaways</font><font color="#CCCCCC"> first as</font><font color="#E5E5E5"> we</font>

1537
00:56:26,440 --> 00:56:29,829
had<font color="#E5E5E5"> started out</font><font color="#CCCCCC"> PowerShell has really</font>

1538
00:56:28,479 --> 00:56:31,930
come<font color="#CCCCCC"> and tremendously long way and</font><font color="#E5E5E5"> it's</font>

1539
00:56:29,829 --> 00:56:34,239
kudos to<font color="#CCCCCC"> everybody who's in the research</font>

1540
00:56:31,930 --> 00:56:35,499
community driven<font color="#E5E5E5"> that forward it has</font>

1541
00:56:34,239 --> 00:56:37,059
better<font color="#CCCCCC"> auto</font><font color="#E5E5E5"> Billy than any other</font>

1542
00:56:35,499 --> 00:56:38,649
<font color="#E5E5E5">language that</font><font color="#CCCCCC"> doesn't mean attackers are</font>

1543
00:56:37,059 --> 00:56:40,569
going to stop up using it audited

1544
00:56:38,650 --> 00:56:43,690
ability is not<font color="#E5E5E5"> the same as prevention</font>

1545
00:56:40,569 --> 00:56:45,999
<font color="#E5E5E5">but it does I</font><font color="#CCCCCC"> think Drive attackers</font><font color="#E5E5E5"> that</font>

1546
00:56:43,690 --> 00:56:48,819
are really keen on<font color="#E5E5E5"> being covert to look</font>

1547
00:56:45,999 --> 00:56:49,899
at other options<font color="#CCCCCC"> like net the</font><font color="#E5E5E5"> second is</font>

1548
00:56:48,819 --> 00:56:50,979
something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we've found in recent</font>

1549
00:56:49,900 --> 00:56:52,960
years to working with a lot of

1550
00:56:50,979 --> 00:56:54,129
organizations<font color="#CCCCCC"> which is that really</font>

1551
00:56:52,960 --> 00:56:55,450
starting with a baseline<font color="#E5E5E5"> of</font>

1552
00:56:54,130 --> 00:56:57,519
understanding<font color="#E5E5E5"> all the sources</font><font color="#CCCCCC"> of</font>

1553
00:56:55,450 --> 00:56:59,680
legitimate<font color="#CCCCCC"> powershell activity in an</font>

1554
00:56:57,519 --> 00:57:01,899
environment is<font color="#E5E5E5"> critical before doing</font>

1555
00:56:59,680 --> 00:57:03,669
detection and as more<font color="#E5E5E5"> and more tooling</font>

1556
00:57:01,900 --> 00:57:05,469
legitimately uses<font color="#E5E5E5"> powershell and</font><font color="#CCCCCC"> as more</font>

1557
00:57:03,670 --> 00:57:07,150
system administrators<font color="#E5E5E5"> learn and use</font>

1558
00:57:05,469 --> 00:57:09,009
<font color="#E5E5E5">powershell for their own one-off scripts</font>

1559
00:57:07,150 --> 00:57:10,690
if you don't understand what's<font color="#E5E5E5"> the</font>

1560
00:57:09,009 --> 00:57:10,870
<font color="#CCCCCC">normal hum of activity in an environment</font>

1561
00:57:10,690 --> 00:57:12,100
<font color="#E5E5E5">it's</font>

1562
00:57:10,870 --> 00:57:15,009
really hard<font color="#E5E5E5"> to</font><font color="#CCCCCC"> determine what's</font>

1563
00:57:12,100 --> 00:57:16,200
malicious<font color="#E5E5E5"> and what's standing out and</font>

1564
00:57:15,010 --> 00:57:18,730
then finally as Matt<font color="#E5E5E5"> just walked through</font>

1565
00:57:16,200 --> 00:57:19,960
etw is a great place to immediately look

1566
00:57:18,730 --> 00:57:21,280
<font color="#CCCCCC">at</font><font color="#E5E5E5"> the moment you're exploring a new</font>

1567
00:57:19,960 --> 00:57:23,470
technique there's almost always a

1568
00:57:21,280 --> 00:57:25,540
provider for<font color="#CCCCCC"> a new source</font><font color="#E5E5E5"> of operating</font>

1569
00:57:23,470 --> 00:57:26,830
system activity<font color="#E5E5E5"> that you can look to</font><font color="#CCCCCC"> to</font>

1570
00:57:25,540 --> 00:57:28,660
<font color="#E5E5E5">start understanding what Windows is</font>

1571
00:57:26,830 --> 00:57:30,100
capable<font color="#CCCCCC"> of capturing and then walk your</font>

1572
00:57:28,660 --> 00:57:32,410
<font color="#E5E5E5">way back from</font><font color="#CCCCCC"> that to a technique</font><font color="#E5E5E5"> that</font>

1573
00:57:30,100 --> 00:57:36,220
<font color="#CCCCCC">can actually</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> applied for more regular</font>

1574
00:57:32,410 --> 00:57:38,379
<font color="#E5E5E5">monitoring and auditing</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> we</font>

1575
00:57:36,220 --> 00:57:39,730
want to thank everybody<font color="#E5E5E5"> for joining us</font>

1576
00:57:38,380 --> 00:57:41,590
today<font color="#CCCCCC"> and especially</font><font color="#E5E5E5"> to brew con for</font>

1577
00:57:39,730 --> 00:57:42,850
inviting<font color="#E5E5E5"> us back it's always</font><font color="#CCCCCC"> a highlight</font>

1578
00:57:41,590 --> 00:57:54,070
<font color="#E5E5E5">of our years to be able to come out here</font>

1579
00:57:42,850 --> 00:57:56,140
<font color="#CCCCCC">so thank you all</font><font color="#E5E5E5"> okay thank you thank</font>

1580
00:57:54,070 --> 00:57:58,150
<font color="#CCCCCC">you I'm for the awesome talk and I'm</font>

1581
00:57:56,140 --> 00:58:01,930
looking forward<font color="#CCCCCC"> to see some interesting</font>

1582
00:57:58,150 --> 00:58:04,840
exploits<font color="#E5E5E5"> or like a Red Team assessments</font>

1583
00:58:01,930 --> 00:58:07,960
with<font color="#CCCCCC"> TS seek or</font><font color="#E5E5E5"> maybe maybe next</font>

1584
00:58:04,840 --> 00:58:08,560
<font color="#CCCCCC">presentation we've</font><font color="#E5E5E5"> got time for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> few</font>

1585
00:58:07,960 --> 00:58:11,650
questions

1586
00:58:08,560 --> 00:58:15,720
<font color="#E5E5E5">sure do we have questions from the</font>

1587
00:58:11,650 --> 00:58:15,720
audience<font color="#E5E5E5"> one second</font>

1588
00:58:23,710 --> 00:58:31,190
hi<font color="#CCCCCC"> Thanks so</font><font color="#E5E5E5"> is this something where you</font>

1589
00:58:27,140 --> 00:58:33,589
could do this technique<font color="#E5E5E5"> for the</font>

1590
00:58:31,190 --> 00:58:39,230
detection<font color="#CCCCCC"> z' effectively</font><font color="#E5E5E5"> a scale or</font><font color="#CCCCCC"> is</font>

1591
00:58:33,589 --> 00:58:42,410
it purely<font color="#CCCCCC"> one-off focused</font><font color="#E5E5E5"> stuff DW yeah</font>

1592
00:58:39,230 --> 00:58:43,640
<font color="#CCCCCC">so if you're like trying</font><font color="#E5E5E5"> to write your</font>

1593
00:58:42,410 --> 00:58:46,549
own<font color="#CCCCCC"> endpoint agent you can absolutely</font>

1594
00:58:43,640 --> 00:58:48,078
subscribe to etw and opt<font color="#CCCCCC"> in to the</font>

1595
00:58:46,550 --> 00:58:49,970
specific types of events that<font color="#CCCCCC"> you want</font>

1596
00:58:48,079 --> 00:58:52,010
to collect<font color="#E5E5E5"> and monitor so you could</font>

1597
00:58:49,970 --> 00:58:54,020
trigger a collection using tooling like

1598
00:58:52,010 --> 00:58:56,150
what Matt created yeah<font color="#E5E5E5"> there's a</font><font color="#CCCCCC"> couple</font>

1599
00:58:54,020 --> 00:58:57,950
<font color="#CCCCCC">different ways to do it if you you know</font>

1600
00:58:56,150 --> 00:58:59,660
and there's a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of filtering that</font><font color="#E5E5E5"> you</font>

1601
00:58:57,950 --> 00:59:01,098
can<font color="#E5E5E5"> apply to ET DW that makes it a lot</font>

1602
00:58:59,660 --> 00:59:02,180
<font color="#E5E5E5">more manageable</font><font color="#CCCCCC"> especially when you're</font>

1603
00:59:01,099 --> 00:59:04,069
<font color="#E5E5E5">only looking at it</font><font color="#CCCCCC"> from a forensic</font>

1604
00:59:02,180 --> 00:59:05,359
perspective you know remember etw is

1605
00:59:04,069 --> 00:59:07,460
built for application performance

1606
00:59:05,359 --> 00:59:08,839
monitoring<font color="#E5E5E5"> troubleshooting so narrowing</font>

1607
00:59:07,460 --> 00:59:11,089
down<font color="#E5E5E5"> and kind of removing all the</font>

1608
00:59:08,839 --> 00:59:12,440
forensic really irrelevant<font color="#E5E5E5"> stuff gets</font>

1609
00:59:11,089 --> 00:59:13,759
you down<font color="#E5E5E5"> just to what you need and then</font>

1610
00:59:12,440 --> 00:59:15,050
<font color="#CCCCCC">you just have two options of how you</font>

1611
00:59:13,760 --> 00:59:16,579
want<font color="#CCCCCC"> to view</font><font color="#E5E5E5"> it so you have the</font>

1612
00:59:15,050 --> 00:59:19,190
<font color="#CCCCCC">real-time</font><font color="#E5E5E5"> parsing which is a bit more</font>

1613
00:59:16,579 --> 00:59:20,810
complex<font color="#E5E5E5"> but it allows you to do things</font>

1614
00:59:19,190 --> 00:59:23,599
like detection of events that<font color="#E5E5E5"> take</font><font color="#CCCCCC"> place</font>

1615
00:59:20,810 --> 00:59:25,849
<font color="#E5E5E5">or you can just log those events to</font><font color="#CCCCCC"> a</font>

1616
00:59:23,599 --> 00:59:28,099
file and then<font color="#E5E5E5"> use it you know if you</font>

1617
00:59:25,849 --> 00:59:29,450
need<font color="#E5E5E5"> to do a post</font><font color="#CCCCCC"> compromised assessment</font>

1618
00:59:28,099 --> 00:59:31,940
to figure<font color="#CCCCCC"> out what's what's going on</font>

1619
00:59:29,450 --> 00:59:33,649
so this stage it sounds like is

1620
00:59:31,940 --> 00:59:37,010
effectively<font color="#E5E5E5"> you've got to roll your own</font>

1621
00:59:33,650 --> 00:59:38,750
and there's nothing doing<font color="#E5E5E5"> that out there</font>

1622
00:59:37,010 --> 00:59:40,310
at the minute<font color="#E5E5E5"> there are tools</font><font color="#CCCCCC"> that do it</font>

1623
00:59:38,750 --> 00:59:41,869
they just<font color="#E5E5E5"> don't always advertise that</font>

1624
00:59:40,310 --> 00:59:43,700
they're<font color="#E5E5E5"> using</font><font color="#CCCCCC"> each aw under the hood so</font>

1625
00:59:41,869 --> 00:59:46,069
like a lot of<font color="#E5E5E5"> this internals tools that</font>

1626
00:59:43,700 --> 00:59:47,720
you may be using<font color="#E5E5E5"> today</font><font color="#CCCCCC"> when they just</font>

1627
00:59:46,069 --> 00:59:50,240
<font color="#E5E5E5">normalize that those events</font><font color="#CCCCCC"> they're</font>

1628
00:59:47,720 --> 00:59:53,569
they're turning on etw<font color="#E5E5E5"> in the background</font>

1629
00:59:50,240 --> 00:59:54,919
<font color="#E5E5E5">it's just not you know always</font><font color="#CCCCCC"> needle the</font>

1630
00:59:53,569 --> 00:59:56,420
nice<font color="#E5E5E5"> thing is</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> load a</font>

1631
00:59:54,920 --> 00:59:57,800
driver<font color="#E5E5E5"> to get that sort of introspection</font>

1632
00:59:56,420 --> 00:59:59,150
<font color="#CCCCCC">and visibility you don't need the hook</font>

1633
00:59:57,800 --> 01:00:02,980
events that you'd otherwise normally

1634
00:59:59,150 --> 01:00:02,980
need to hook<font color="#E5E5E5"> thank you yeah thank you</font>

1635
01:00:04,599 --> 01:00:09,710
yeah<font color="#E5E5E5"> okay thank you</font><font color="#CCCCCC"> if there are any</font>

1636
01:00:07,160 --> 01:00:13,578
<font color="#CCCCCC">additional questions</font><font color="#E5E5E5"> you can probably</font>

1637
01:00:09,710 --> 01:00:15,859
answer them<font color="#CCCCCC"> offstage grabbing a beer in</font>

1638
01:00:13,579 --> 01:00:18,940
the lobby I'm sure so and our<font color="#E5E5E5"> next talk</font>

1639
01:00:15,859 --> 01:00:26,479
up is young<font color="#E5E5E5"> yeah thank you</font>

1640
01:00:18,940 --> 01:00:26,479
[Applause]

