1
00:00:04,310 --> 00:00:09,360
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> so the first</font><font color="#CCCCCC"> retro</font><font color="#E5E5E5"> talk to kick</font>

2
00:00:07,740 --> 00:00:11,219
it off<font color="#E5E5E5"> today will be presented by</font><font color="#CCCCCC"> mati</font>

3
00:00:09,360 --> 00:00:13,379
<font color="#CCCCCC">phone who's a postdoc</font><font color="#E5E5E5"> researcher from</font>

4
00:00:11,219 --> 00:00:15,389
<font color="#CCCCCC">chiral even the subject of today is</font>

5
00:00:13,379 --> 00:00:19,170
advanced Wi-Fi<font color="#CCCCCC"> attacks</font><font color="#E5E5E5"> using commodity</font>

6
00:00:15,389 --> 00:00:22,230
<font color="#CCCCCC">hardware Monte ok thank you for</font><font color="#E5E5E5"> the</font>

7
00:00:19,170 --> 00:00:24,660
introduction<font color="#E5E5E5"> Thank You brick ohm</font><font color="#CCCCCC"> for</font>

8
00:00:22,230 --> 00:00:26,720
inviting me<font color="#CCCCCC"> well I should say thank you</font>

9
00:00:24,660 --> 00:00:30,539
for<font color="#E5E5E5"> the audience</font><font color="#CCCCCC"> for voting for my talk</font>

10
00:00:26,720 --> 00:00:32,879
<font color="#E5E5E5">so</font><font color="#CCCCCC"> I'm going to talk about some research</font>

11
00:00:30,539 --> 00:00:35,790
<font color="#E5E5E5">I did</font><font color="#CCCCCC"> a few years</font><font color="#E5E5E5"> ago about how we were</font>

12
00:00:32,879 --> 00:00:40,040
<font color="#E5E5E5">able to use cheap Wi-Fi devices to carry</font>

13
00:00:35,790 --> 00:00:42,180
out<font color="#E5E5E5"> more advanced low layer attacks</font>

14
00:00:40,040 --> 00:00:43,890
<font color="#CCCCCC">well that's gonna</font><font color="#E5E5E5"> be part one</font><font color="#CCCCCC"> of the</font>

15
00:00:42,180 --> 00:00:47,579
talk the second part of the<font color="#E5E5E5"> talk will be</font>

16
00:00:43,890 --> 00:00:49,710
about<font color="#E5E5E5"> how these low layer attacks can</font>

17
00:00:47,579 --> 00:00:52,380
help us carry out<font color="#E5E5E5"> other attacks against</font>

18
00:00:49,710 --> 00:00:55,500
Wi-Fi and the big one<font color="#E5E5E5"> here would be the</font>

19
00:00:52,380 --> 00:00:58,770
crack<font color="#CCCCCC"> attack against wpa2</font><font color="#E5E5E5"> we will show</font>

20
00:00:55,500 --> 00:01:01,469
that<font color="#E5E5E5"> our attacks</font><font color="#CCCCCC"> help us to more easily</font>

21
00:00:58,770 --> 00:01:04,619
<font color="#E5E5E5">execute that attack against the network</font>

22
00:01:01,469 --> 00:01:06,420
so enter entrant<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> introduction I</font>

23
00:01:04,619 --> 00:01:08,159
mentioned<font color="#E5E5E5"> that we're going to talk</font><font color="#CCCCCC"> about</font>

24
00:01:06,420 --> 00:01:09,299
how the security has improved<font color="#E5E5E5"> but I'm</font>

25
00:01:08,159 --> 00:01:13,609
actually going<font color="#E5E5E5"> to talk about how the</font>

26
00:01:09,299 --> 00:01:15,509
attacks<font color="#E5E5E5"> improved so let's get started</font>

27
00:01:13,609 --> 00:01:20,939
<font color="#CCCCCC">first</font><font color="#E5E5E5"> I'm going to give</font><font color="#CCCCCC"> some quick</font>

28
00:01:15,509 --> 00:01:23,670
<font color="#E5E5E5">background on how Wi-Fi works and the</font>

29
00:01:20,939 --> 00:01:26,038
first important assumption that normally

30
00:01:23,670 --> 00:01:30,600
is made in a Wi-Fi network<font color="#E5E5E5"> is that each</font>

31
00:01:26,039 --> 00:01:33,359
Wi-Fi device behaves fairly now what do

32
00:01:30,600 --> 00:01:37,169
I<font color="#E5E5E5"> mean with fairly good behaving fairly</font>

33
00:01:33,359 --> 00:01:39,419
<font color="#E5E5E5">I mean that every Wi-Fi device will also</font>

34
00:01:37,170 --> 00:01:41,969
give other Wi-Fi devices<font color="#E5E5E5"> a chance to</font>

35
00:01:39,420 --> 00:01:44,069
transmit their frames<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> particular</font>

36
00:01:41,969 --> 00:01:46,499
<font color="#E5E5E5">let's say my laptop wants to send some</font>

37
00:01:44,069 --> 00:01:47,549
data<font color="#CCCCCC"> its first going to</font><font color="#E5E5E5"> sense the air to</font>

38
00:01:46,499 --> 00:01:49,740
see if someone else<font color="#E5E5E5"> is already</font>

39
00:01:47,549 --> 00:01:51,419
transmitting on if that's the case

40
00:01:49,740 --> 00:01:53,598
<font color="#E5E5E5">they're gonna give that station enough</font>

41
00:01:51,419 --> 00:01:57,179
time to finish their transmission<font color="#CCCCCC"> and</font>

42
00:01:53,599 --> 00:02:00,569
essentially if every Wi-Fi client

43
00:01:57,179 --> 00:02:03,329
<font color="#E5E5E5">follows this protocol everyone will get</font>

44
00:02:00,569 --> 00:02:06,989
a fair share<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the total bandwidth of</font>

45
00:02:03,329 --> 00:02:09,179
the network<font color="#CCCCCC"> now of</font><font color="#E5E5E5"> course if we are</font><font color="#CCCCCC"> an</font>

46
00:02:06,989 --> 00:02:12,240
attacker<font color="#E5E5E5"> or some kind of malicious</font>

47
00:02:09,179 --> 00:02:13,980
<font color="#E5E5E5">entity we can get some special</font><font color="#CCCCCC"> hardware</font>

48
00:02:12,240 --> 00:02:16,170
on then we no longer

49
00:02:13,980 --> 00:02:20,250
have to follow any<font color="#CCCCCC"> of these rules</font><font color="#E5E5E5"> that</font>

50
00:02:16,170 --> 00:02:22,260
Wi-Fi specifies that's of<font color="#E5E5E5"> course well</font>

51
00:02:20,250 --> 00:02:25,319
<font color="#E5E5E5">known if you make your</font><font color="#CCCCCC"> own hardware</font><font color="#E5E5E5"> you</font>

52
00:02:22,260 --> 00:02:27,269
can<font color="#CCCCCC"> do what you want so for</font><font color="#E5E5E5"> example we</font>

53
00:02:25,319 --> 00:02:31,649
<font color="#E5E5E5">can do this selfish behavior and just</font>

54
00:02:27,269 --> 00:02:33,299
<font color="#CCCCCC">always instantly</font><font color="#E5E5E5"> transmit and so on but</font>

55
00:02:31,650 --> 00:02:35,549
apart from that<font color="#E5E5E5"> we can also do some</font>

56
00:02:33,299 --> 00:02:38,940
other interesting<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> for example we</font>

57
00:02:35,549 --> 00:02:42,629
can decide to continuously<font color="#E5E5E5"> jam certain</font>

58
00:02:38,940 --> 00:02:44,609
Wi-Fi frequencies so the<font color="#CCCCCC"> freakness</font>

59
00:02:42,629 --> 00:02:46,859
so certain Wi-Fi frequency bands<font color="#E5E5E5"> will</font>

60
00:02:44,610 --> 00:02:50,910
become completely unusable<font color="#CCCCCC"> and you can</font>

61
00:02:46,860 --> 00:02:52,620
no<font color="#CCCCCC"> longer use your Wi-Fi and I would say</font>

62
00:02:50,910 --> 00:02:55,650
the more interesting attack<font color="#E5E5E5"> here is that</font>

63
00:02:52,620 --> 00:02:59,280
you can also selectively<font color="#CCCCCC"> Jam certain</font>

64
00:02:55,650 --> 00:03:01,319
clients<font color="#CCCCCC"> only and that's a very advanced</font>

65
00:02:59,280 --> 00:03:04,230
attack because<font color="#E5E5E5"> the way it works is it</font>

66
00:03:01,319 --> 00:03:05,819
will decode the header of a Wi-Fi packet

67
00:03:04,230 --> 00:03:09,929
while that packet<font color="#E5E5E5"> is still being</font>

68
00:03:05,819 --> 00:03:12,030
transmitted then it will decide based on

69
00:03:09,930 --> 00:03:14,370
the MAC addresses<font color="#E5E5E5"> in the header</font><font color="#CCCCCC"> whether</font>

70
00:03:12,030 --> 00:03:16,680
<font color="#E5E5E5">to</font><font color="#CCCCCC"> jam the remaining contents and then</font>

71
00:03:14,370 --> 00:03:19,380
it will trans transmit some kind of

72
00:03:16,680 --> 00:03:21,630
noise<font color="#E5E5E5"> to jam the last bytes of the</font>

73
00:03:19,380 --> 00:03:23,250
packet<font color="#E5E5E5"> and as you can imagine you need</font>

74
00:03:21,630 --> 00:03:24,780
<font color="#E5E5E5">really good hardware to do this I mean</font>

75
00:03:23,250 --> 00:03:26,639
<font color="#E5E5E5">you need to be fast enough to decode a</font>

76
00:03:24,780 --> 00:03:28,919
header<font color="#E5E5E5"> you</font><font color="#CCCCCC"> need to be fast enough to</font>

77
00:03:26,639 --> 00:03:32,280
<font color="#E5E5E5">then initialize the jammer to jam the</font>

78
00:03:28,919 --> 00:03:34,410
last last<font color="#E5E5E5"> packets of the</font><font color="#CCCCCC"> pipe of the</font>

79
00:03:32,280 --> 00:03:38,220
packet and all that has to be done

80
00:03:34,410 --> 00:03:40,260
within a few say 500 microseconds

81
00:03:38,220 --> 00:03:43,200
<font color="#CCCCCC">because that's the time it takes</font><font color="#E5E5E5"> to set</font>

82
00:03:40,260 --> 00:03:45,328
an ordinary Wi-Fi frame but people

83
00:03:43,200 --> 00:03:47,459
showed that with advanced equipment<font color="#CCCCCC"> for</font>

84
00:03:45,329 --> 00:03:50,760
<font color="#CCCCCC">example these you as our piece here</font>

85
00:03:47,459 --> 00:03:54,720
<font color="#E5E5E5">which costs say 3000 or 4000 dollars</font>

86
00:03:50,760 --> 00:03:57,209
<font color="#E5E5E5">it's possible however you can see that</font>

87
00:03:54,720 --> 00:04:00,150
this<font color="#E5E5E5"> still has a bit of a price tag so</font>

88
00:03:57,209 --> 00:04:04,079
people didn't consider<font color="#CCCCCC"> it to be</font><font color="#E5E5E5"> that</font>

89
00:04:00,150 --> 00:04:06,329
serious<font color="#E5E5E5"> of a threat unfortunately our</font>

90
00:04:04,079 --> 00:04:08,790
contribution here is that it turns out

91
00:04:06,329 --> 00:04:12,090
you don't need<font color="#CCCCCC"> this fancy equipment</font><font color="#E5E5E5"> to</font>

92
00:04:08,790 --> 00:04:16,039
carry out these attacks<font color="#E5E5E5"> what we did</font>

93
00:04:12,090 --> 00:04:20,459
instead<font color="#CCCCCC"> is</font><font color="#E5E5E5"> we got these rather cheap USB</font>

94
00:04:16,039 --> 00:04:23,190
<font color="#E5E5E5">devices and it turns out that using them</font>

95
00:04:20,459 --> 00:04:25,469
we can implement<font color="#CCCCCC"> this selfish behavior</font>

96
00:04:23,190 --> 00:04:26,830
where we can let a Wi-Fi client transmit

97
00:04:25,469 --> 00:04:29,050
instantly

98
00:04:26,830 --> 00:04:31,270
we can even<font color="#E5E5E5"> implement the continuous</font>

99
00:04:29,050 --> 00:04:32,979
jammer<font color="#CCCCCC"> on the most surprising result</font>

100
00:04:31,270 --> 00:04:35,080
here we can also implement this

101
00:04:32,979 --> 00:04:40,389
<font color="#E5E5E5">selective jammer which is able to</font><font color="#CCCCCC"> jam</font>

102
00:04:35,080 --> 00:04:41,919
only specific Wi-Fi packets and<font color="#E5E5E5"> I'm</font>

103
00:04:40,389 --> 00:04:43,900
going<font color="#CCCCCC"> to discuss</font><font color="#E5E5E5"> how we did this in the</font>

104
00:04:41,919 --> 00:04:45,520
<font color="#CCCCCC">first part of the talk on the</font><font color="#E5E5E5"> second</font>

105
00:04:43,900 --> 00:04:48,190
part<font color="#E5E5E5"> I'm going to discuss</font><font color="#CCCCCC"> how these</font>

106
00:04:45,520 --> 00:04:49,719
<font color="#E5E5E5">enable us to reliably</font><font color="#CCCCCC"> manipulates</font>

107
00:04:48,190 --> 00:04:52,360
<font color="#E5E5E5">encrypted traffic and a Wi-Fi network</font>

108
00:04:49,720 --> 00:04:57,759
<font color="#CCCCCC">and then carry out</font><font color="#E5E5E5"> attacks against say</font>

109
00:04:52,360 --> 00:05:01,000
<font color="#E5E5E5">WPA tkip or wpa2</font><font color="#CCCCCC"> so I would say</font><font color="#E5E5E5"> that the</font>

110
00:04:57,759 --> 00:05:03,460
takeaway message here is that<font color="#CCCCCC"> we don't</font>

111
00:05:01,000 --> 00:05:08,620
need<font color="#E5E5E5"> expensive devices</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> just use a</font>

112
00:05:03,460 --> 00:05:10,690
cheap Wi-Fi dongle of say 10 or<font color="#E5E5E5"> $20 that</font>

113
00:05:08,620 --> 00:05:13,539
<font color="#E5E5E5">means that as a defender we should be</font>

114
00:05:10,690 --> 00:05:15,340
<font color="#CCCCCC">able to detect</font><font color="#E5E5E5"> these attacks take for</font>

115
00:05:13,539 --> 00:05:17,490
example a very<font color="#E5E5E5"> common situation where</font>

116
00:05:15,340 --> 00:05:20,770
you have<font color="#CCCCCC"> some kind</font><font color="#E5E5E5"> of security webcam</font>

117
00:05:17,490 --> 00:05:23,560
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is using Wi-Fi or</font><font color="#CCCCCC"> the frequency</font><font color="#E5E5E5"> in</font>

118
00:05:20,770 --> 00:05:27,190
the same<font color="#E5E5E5"> frequency</font><font color="#CCCCCC"> as Wi-Fi then the</font>

119
00:05:23,560 --> 00:05:29,169
user should<font color="#CCCCCC"> be alerted if the connection</font>

120
00:05:27,190 --> 00:05:30,430
is somehow<font color="#CCCCCC"> broken because</font><font color="#E5E5E5"> it could</font><font color="#CCCCCC"> be</font>

121
00:05:29,169 --> 00:05:32,198
<font color="#E5E5E5">that the device maybe is just</font>

122
00:05:30,430 --> 00:05:34,270
malfunctioning or let the battery ran

123
00:05:32,199 --> 00:05:36,669
<font color="#CCCCCC">out but</font><font color="#E5E5E5"> it could also be that an</font>

124
00:05:34,270 --> 00:05:39,490
attacker is trying to jam<font color="#E5E5E5"> your security</font>

125
00:05:36,669 --> 00:05:44,020
<font color="#E5E5E5">cam and the user at least needs to be</font>

126
00:05:39,490 --> 00:05:46,090
warned<font color="#E5E5E5"> of that so that covers most of</font>

127
00:05:44,020 --> 00:05:48,698
the<font color="#E5E5E5"> backgrounds the first thing</font><font color="#CCCCCC"> that</font>

128
00:05:46,090 --> 00:05:50,888
we're going to discuss now is<font color="#E5E5E5"> how can</font><font color="#CCCCCC"> we</font>

129
00:05:48,699 --> 00:05:53,560
implement<font color="#CCCCCC"> this selfish behavior using</font>

130
00:05:50,889 --> 00:05:55,360
<font color="#E5E5E5">our cheap Wi-Fi devices and the idea</font>

131
00:05:53,560 --> 00:05:57,009
here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> we're not gonna test this</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> it</font>

132
00:05:55,360 --> 00:05:58,960
analytically<font color="#CCCCCC"> we're just going to</font>

133
00:05:57,009 --> 00:06:03,130
<font color="#E5E5E5">implement this run the experiment and</font>

134
00:05:58,960 --> 00:06:04,960
<font color="#E5E5E5">then see what works and</font><font color="#CCCCCC"> doesn't work</font><font color="#E5E5E5"> now</font>

135
00:06:03,130 --> 00:06:07,509
before<font color="#E5E5E5"> we get to</font><font color="#CCCCCC"> that there</font><font color="#E5E5E5"> is one more</font>

136
00:06:04,960 --> 00:06:10,090
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> that I need</font><font color="#CCCCCC"> to explain and that's</font>

137
00:06:07,509 --> 00:06:13,240
how the Wi-Fi protocol<font color="#E5E5E5"> actually works</font>

138
00:06:10,090 --> 00:06:15,638
when you decide<font color="#E5E5E5"> to transmit a frame so</font>

139
00:06:13,240 --> 00:06:18,880
let's take the following example<font color="#E5E5E5"> we want</font>

140
00:06:15,639 --> 00:06:21,130
to<font color="#E5E5E5"> transmit a Wi-Fi frame on our device</font>

141
00:06:18,880 --> 00:06:24,340
notices that someone else is<font color="#E5E5E5"> already</font>

142
00:06:21,130 --> 00:06:27,069
transmitting<font color="#E5E5E5"> well what happens in that</font>

143
00:06:24,340 --> 00:06:29,318
<font color="#CCCCCC">case is we of course</font><font color="#E5E5E5"> wait</font><font color="#CCCCCC"> until that</font>

144
00:06:27,069 --> 00:06:32,349
other device has finished<font color="#E5E5E5"> transmitting</font>

145
00:06:29,319 --> 00:06:37,300
<font color="#E5E5E5">and then we wait</font><font color="#CCCCCC"> a very</font><font color="#E5E5E5"> small amount</font><font color="#CCCCCC"> of</font>

146
00:06:32,349 --> 00:06:39,310
<font color="#E5E5E5">time called</font><font color="#CCCCCC"> SIF s interval the idea</font>

147
00:06:37,300 --> 00:06:41,900
behind that interval is<font color="#E5E5E5"> that</font>

148
00:06:39,310 --> 00:06:45,229
this is the time it<font color="#E5E5E5"> takes for</font><font color="#CCCCCC"> all</font>

149
00:06:41,900 --> 00:06:47,539
<font color="#E5E5E5">receivers to properly capture the Wi-Fi</font>

150
00:06:45,229 --> 00:06:50,180
signal<font color="#E5E5E5"> to the modulated to convert it to</font>

151
00:06:47,539 --> 00:06:52,789
<font color="#E5E5E5">actual bytes and to then decide whether</font>

152
00:06:50,180 --> 00:06:55,250
<font color="#E5E5E5">that packet is destined</font><font color="#CCCCCC"> for them or not</font>

153
00:06:52,789 --> 00:06:58,039
<font color="#CCCCCC">on this time for example also</font><font color="#E5E5E5"> includes</font>

154
00:06:55,250 --> 00:07:02,300
the time needed<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the receiver</font><font color="#E5E5E5"> to copy</font>

155
00:06:58,039 --> 00:07:04,400
it<font color="#CCCCCC"> to memory</font><font color="#E5E5E5"> and so on now we're not</font>

156
00:07:02,300 --> 00:07:06,410
going<font color="#E5E5E5"> to transmit our own device just</font>

157
00:07:04,400 --> 00:07:11,840
yet<font color="#E5E5E5"> we're also</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> wait an additional</font>

158
00:07:06,410 --> 00:07:14,720
<font color="#E5E5E5">time called</font><font color="#CCCCCC"> a I FSM interval and the</font>

159
00:07:11,840 --> 00:07:17,138
idea here<font color="#CCCCCC"> is that this time that we wait</font>

160
00:07:14,720 --> 00:07:19,760
<font color="#CCCCCC">now depends on</font><font color="#E5E5E5"> the priority of the frame</font>

161
00:07:17,139 --> 00:07:21,530
for<font color="#E5E5E5"> example if we notice that this</font>

162
00:07:19,760 --> 00:07:23,990
packet was actually destined<font color="#E5E5E5"> for us</font>

163
00:07:21,530 --> 00:07:25,460
<font color="#E5E5E5">we're now immediately going to send an</font>

164
00:07:23,990 --> 00:07:28,010
<font color="#E5E5E5">acknowledgment without waiting any</font>

165
00:07:25,460 --> 00:07:30,650
longer<font color="#E5E5E5"> however if we're sending some</font>

166
00:07:28,010 --> 00:07:32,510
other data for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> if we're</font><font color="#E5E5E5"> talking</font>

167
00:07:30,650 --> 00:07:35,810
on a phone<font color="#E5E5E5"> and we're sending voice data</font>

168
00:07:32,510 --> 00:07:37,280
then this period<font color="#E5E5E5"> is rather small whereas</font>

169
00:07:35,810 --> 00:07:39,470
if we're just<font color="#CCCCCC"> browsing the internet</font>

170
00:07:37,280 --> 00:07:42,830
understanding some background<font color="#E5E5E5"> IP data</font>

171
00:07:39,470 --> 00:07:44,750
<font color="#CCCCCC">this period is a bit longer and the idea</font>

172
00:07:42,830 --> 00:07:47,180
here<font color="#CCCCCC"> is if you have high-priority data</font>

173
00:07:44,750 --> 00:07:49,220
for example<font color="#CCCCCC"> a voice call you will</font>

174
00:07:47,180 --> 00:07:54,110
transmit faster<font color="#E5E5E5"> than you have low if you</font>

175
00:07:49,220 --> 00:07:57,169
have low priority<font color="#E5E5E5"> data now there is one</font>

176
00:07:54,110 --> 00:07:59,330
<font color="#CCCCCC">more time interval</font><font color="#E5E5E5"> that we will wait on</font>

177
00:07:57,169 --> 00:08:01,940
<font color="#E5E5E5">that is called the back</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> interval on</font>

178
00:07:59,330 --> 00:08:04,909
the<font color="#CCCCCC"> idea here is that every station</font>

179
00:08:01,940 --> 00:08:07,430
<font color="#E5E5E5">waits a random amount</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> time and that's</font>

180
00:08:04,909 --> 00:08:09,500
to<font color="#CCCCCC"> avoid collision because</font><font color="#E5E5E5"> let's</font><font color="#CCCCCC"> say</font>

181
00:08:07,430 --> 00:08:12,919
<font color="#E5E5E5">that</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> people are waiting to transmit</font>

182
00:08:09,500 --> 00:08:14,570
after that packets<font color="#CCCCCC"> the idea is that most</font>

183
00:08:12,919 --> 00:08:16,490
<font color="#E5E5E5">of the cases they would both select a</font>

184
00:08:14,570 --> 00:08:18,770
random back<font color="#CCCCCC"> of interval</font><font color="#E5E5E5"> meaning they</font>

185
00:08:16,490 --> 00:08:22,780
would also transmit at different times

186
00:08:18,770 --> 00:08:25,669
<font color="#E5E5E5">and these packets would not collide so</font>

187
00:08:22,780 --> 00:08:27,919
if we have now waited for the duration

188
00:08:25,669 --> 00:08:30,349
<font color="#CCCCCC">of all these</font><font color="#E5E5E5"> periods combined and we saw</font>

189
00:08:27,919 --> 00:08:32,478
no one else<font color="#E5E5E5"> transmitting before us only</font>

190
00:08:30,349 --> 00:08:35,929
<font color="#CCCCCC">then will</font><font color="#E5E5E5"> the client send its own</font>

191
00:08:32,479 --> 00:08:37,310
packets<font color="#E5E5E5"> it has proven very well to work</font>

192
00:08:35,929 --> 00:08:39,409
and<font color="#CCCCCC"> practice I mean we're all</font><font color="#E5E5E5"> using</font>

193
00:08:37,309 --> 00:08:41,689
Wi-Fi today and yes<font color="#E5E5E5"> sometimes we have a</font>

194
00:08:39,409 --> 00:08:42,140
bad<font color="#E5E5E5"> Network but most of the time this</font>

195
00:08:41,690 --> 00:08:46,220
works

196
00:08:42,140 --> 00:08:50,089
<font color="#CCCCCC">very well</font><font color="#E5E5E5"> so our idea is now to take</font><font color="#CCCCCC"> our</font>

197
00:08:46,220 --> 00:08:51,840
cheap Wi-Fi devices<font color="#E5E5E5"> and we want to</font>

198
00:08:50,089 --> 00:08:54,380
manipulate<font color="#E5E5E5"> this process</font>

199
00:08:51,840 --> 00:08:56,970
and no<font color="#E5E5E5"> longer play by these rules</font><font color="#CCCCCC"> you</font>

200
00:08:54,380 --> 00:08:58,920
<font color="#CCCCCC">might</font><font color="#E5E5E5"> think this is tricky to</font><font color="#CCCCCC"> do because</font>

201
00:08:56,970 --> 00:09:01,980
maybe it's implemented in<font color="#E5E5E5"> hardware maybe</font>

202
00:08:58,920 --> 00:09:04,589
we cannot change it<font color="#CCCCCC"> but we</font><font color="#E5E5E5"> found out</font>

203
00:09:01,980 --> 00:09:06,210
<font color="#E5E5E5">that if we take the firmware</font><font color="#CCCCCC"> that is</font>

204
00:09:04,590 --> 00:09:08,070
<font color="#E5E5E5">running on these Wi-Fi devices on</font>

205
00:09:06,210 --> 00:09:12,060
interestingly this firmware<font color="#E5E5E5"> is</font>

206
00:09:08,070 --> 00:09:15,360
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> we can quite easily modify</font>

207
00:09:12,060 --> 00:09:17,310
some<font color="#CCCCCC"> of these parameters</font><font color="#E5E5E5"> for example</font><font color="#CCCCCC"> if</font>

208
00:09:15,360 --> 00:09:19,320
we want<font color="#CCCCCC"> to disable</font><font color="#E5E5E5"> the back of time</font>

209
00:09:17,310 --> 00:09:22,699
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> something we can do and I will</font>

210
00:09:19,320 --> 00:09:25,620
discuss<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> bit how we can also change</font>

211
00:09:22,700 --> 00:09:27,540
<font color="#E5E5E5">these two</font><font color="#CCCCCC"> intervals as well so we can</font>

212
00:09:25,620 --> 00:09:30,360
<font color="#E5E5E5">essentially make our device</font><font color="#CCCCCC"> transmitted</font>

213
00:09:27,540 --> 00:09:34,140
instantly after the other device is done

214
00:09:30,360 --> 00:09:36,600
transmitting so we did some experiments

215
00:09:34,140 --> 00:09:39,300
<font color="#E5E5E5">where we implemented this and then</font>

216
00:09:36,600 --> 00:09:43,440
<font color="#CCCCCC">tested</font><font color="#E5E5E5"> how much of an advantage</font><font color="#CCCCCC"> an</font>

217
00:09:39,300 --> 00:09:45,390
attacker can gain by<font color="#CCCCCC"> doing this and here</font>

218
00:09:43,440 --> 00:09:47,300
what we<font color="#E5E5E5"> found out that the optimal</font>

219
00:09:45,390 --> 00:09:50,220
<font color="#CCCCCC">strategy for the attacker to</font><font color="#E5E5E5"> really</font>

220
00:09:47,300 --> 00:09:53,219
increase its bandwidth<font color="#E5E5E5"> its throughput as</font>

221
00:09:50,220 --> 00:09:57,990
much as<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> is to disable back off</font>

222
00:09:53,220 --> 00:10:02,040
and set the<font color="#CCCCCC"> AIFS n period</font><font color="#E5E5E5"> to zero</font><font color="#CCCCCC"> that</font>

223
00:09:57,990 --> 00:10:03,690
gives<font color="#E5E5E5"> the best strategy</font><font color="#CCCCCC"> and in</font><font color="#E5E5E5"> a lab</font>

224
00:10:02,040 --> 00:10:06,420
setup what we noticed is that we are

225
00:10:03,690 --> 00:10:08,820
<font color="#CCCCCC">able to improve</font><font color="#E5E5E5"> the throughput from 14</font>

226
00:10:06,420 --> 00:10:10,860
megabits per second<font color="#E5E5E5"> to</font><font color="#CCCCCC"> thirty-seven</font>

227
00:10:08,820 --> 00:10:15,690
megabits per second which<font color="#E5E5E5"> I would say is</font>

228
00:10:10,860 --> 00:10:18,000
a<font color="#CCCCCC"> very significant improvement now</font><font color="#E5E5E5"> one</font>

229
00:10:15,690 --> 00:10:21,320
<font color="#CCCCCC">maybe surprising</font><font color="#E5E5E5"> result is that if we</font>

230
00:10:18,000 --> 00:10:23,400
<font color="#E5E5E5">would also reduce the</font><font color="#CCCCCC"> si Avast interval</font>

231
00:10:21,320 --> 00:10:27,360
then<font color="#E5E5E5"> we would</font><font color="#CCCCCC"> actually get a lower</font>

232
00:10:23,400 --> 00:10:29,550
throughput now maybe you think that's

233
00:10:27,360 --> 00:10:32,310
<font color="#E5E5E5">weird because if we reduce this period</font>

234
00:10:29,550 --> 00:10:34,910
<font color="#E5E5E5">we're sending packets faster so how</font><font color="#CCCCCC"> can</font>

235
00:10:32,310 --> 00:10:37,530
I<font color="#E5E5E5"> be that</font><font color="#CCCCCC"> we then get</font><font color="#E5E5E5"> a lower throughput</font>

236
00:10:34,910 --> 00:10:40,829
well the explanation<font color="#CCCCCC"> is actually quite</font>

237
00:10:37,530 --> 00:10:42,930
simple<font color="#E5E5E5"> remember that this si</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> s period</font>

238
00:10:40,830 --> 00:10:45,030
is used to give<font color="#E5E5E5"> the receiver enough time</font>

239
00:10:42,930 --> 00:10:48,390
to you know demodulate a frame<font color="#CCCCCC"> copy it</font>

240
00:10:45,030 --> 00:10:50,640
to memory<font color="#CCCCCC"> and so</font><font color="#E5E5E5"> on and if we</font><font color="#CCCCCC"> don't give</font>

241
00:10:48,390 --> 00:10:52,410
the receiver<font color="#E5E5E5"> enough time anymore then it</font>

242
00:10:50,640 --> 00:10:54,120
<font color="#E5E5E5">won't always be ready to receive the</font>

243
00:10:52,410 --> 00:10:57,780
<font color="#E5E5E5">next packet</font><font color="#CCCCCC"> ant will get packet loss</font>

244
00:10:54,120 --> 00:10:59,940
because of<font color="#E5E5E5"> that now another important</font>

245
00:10:57,780 --> 00:11:03,360
remark here is that we can only increase

246
00:10:59,940 --> 00:11:05,130
the throughput<font color="#E5E5E5"> from the clients so from</font>

247
00:11:03,360 --> 00:11:05,610
the attacker<font color="#E5E5E5"> towards the access point so</font>

248
00:11:05,130 --> 00:11:07,500
<font color="#E5E5E5">we</font><font color="#CCCCCC"> can</font>

249
00:11:05,610 --> 00:11:10,110
<font color="#E5E5E5">only increase the throughput</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

250
00:11:07,500 --> 00:11:11,760
uplink<font color="#E5E5E5"> direction not on</font><font color="#CCCCCC"> a drone</font><font color="#E5E5E5"> link</font>

251
00:11:10,110 --> 00:11:13,890
<font color="#E5E5E5">from the access</font><font color="#CCCCCC"> point to the</font><font color="#E5E5E5"> client</font>

252
00:11:11,760 --> 00:11:16,170
<font color="#E5E5E5">because</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> assume we do not control</font><font color="#CCCCCC"> the</font>

253
00:11:13,890 --> 00:11:19,110
access points so<font color="#CCCCCC"> we can also not</font><font color="#E5E5E5"> change</font>

254
00:11:16,170 --> 00:11:24,899
the behavior of<font color="#CCCCCC"> the access</font><font color="#E5E5E5"> point</font><font color="#CCCCCC"> so we</font>

255
00:11:19,110 --> 00:11:28,350
can<font color="#E5E5E5"> only influence the uplink</font><font color="#CCCCCC"> upload so</font>

256
00:11:24,899 --> 00:11:30,209
I explained in<font color="#E5E5E5"> high level how we are</font>

257
00:11:28,350 --> 00:11:32,160
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> accomplish this but how do you</font>

258
00:11:30,209 --> 00:11:34,560
do actually<font color="#E5E5E5"> do this</font><font color="#CCCCCC"> new at a code level</font>

259
00:11:32,160 --> 00:11:37,500
<font color="#CCCCCC">I mentioned we had to change</font><font color="#E5E5E5"> the</font>

260
00:11:34,560 --> 00:11:39,569
firmware of these<font color="#E5E5E5"> devices but you may</font><font color="#CCCCCC"> be</font>

261
00:11:37,500 --> 00:11:40,019
<font color="#CCCCCC">wondering is this complicated to do or</font>

262
00:11:39,570 --> 00:11:43,140
not

263
00:11:40,019 --> 00:11:45,079
well it turns out once you know how to

264
00:11:43,140 --> 00:11:49,470
<font color="#E5E5E5">do it it's actually</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> simple</font>

265
00:11:45,079 --> 00:11:52,769
because<font color="#CCCCCC"> you can simply</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> memory Maps</font>

266
00:11:49,470 --> 00:11:55,709
registers to set certain<font color="#E5E5E5"> bits on enable</font>

267
00:11:52,769 --> 00:11:58,019
or disable<font color="#E5E5E5"> features for example to</font>

268
00:11:55,709 --> 00:12:00,689
disable this<font color="#E5E5E5"> back off period we simply</font>

269
00:11:58,019 --> 00:12:03,360
find<font color="#CCCCCC"> the memory register that</font><font color="#E5E5E5"> is used</font>

270
00:12:00,690 --> 00:12:07,920
<font color="#CCCCCC">towards this we set in certain bits in</font>

271
00:12:03,360 --> 00:12:10,769
this memory<font color="#E5E5E5"> register on that set the</font>

272
00:12:07,920 --> 00:12:13,680
same is<font color="#CCCCCC"> true for resetting the these two</font>

273
00:12:10,769 --> 00:12:16,140
time periods as well<font color="#E5E5E5"> we simply need to</font>

274
00:12:13,680 --> 00:12:18,269
look through<font color="#E5E5E5"> the documentation</font><font color="#CCCCCC"> that does</font>

275
00:12:16,140 --> 00:12:21,029
take<font color="#E5E5E5"> a while to find the correct memory</font>

276
00:12:18,269 --> 00:12:23,810
register but then it's very<font color="#CCCCCC"> easy we</font>

277
00:12:21,029 --> 00:12:27,689
simply set this register to<font color="#E5E5E5"> zero which</font>

278
00:12:23,810 --> 00:12:30,479
then implies that these intervals are

279
00:12:27,690 --> 00:12:33,839
now set to<font color="#E5E5E5"> zero as well so that's really</font>

280
00:12:30,480 --> 00:12:35,070
<font color="#E5E5E5">straightforward in my opinion</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I was</font>

281
00:12:33,839 --> 00:12:36,630
a bit<font color="#E5E5E5"> surprised by this but the other</font>

282
00:12:35,070 --> 00:12:38,640
<font color="#E5E5E5">hand it's</font><font color="#CCCCCC"> very nice because that means</font>

283
00:12:36,630 --> 00:12:43,350
we have a<font color="#E5E5E5"> lot of control over</font><font color="#CCCCCC"> our own</font>

284
00:12:38,640 --> 00:12:44,970
<font color="#E5E5E5">device so there's one final</font><font color="#CCCCCC"> thing here I</font>

285
00:12:43,350 --> 00:12:46,709
want<font color="#E5E5E5"> to come</font><font color="#CCCCCC"> back to I mentioned that</font>

286
00:12:44,970 --> 00:12:49,470
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have to modify the firmware of these</font>

287
00:12:46,709 --> 00:12:53,130
devices<font color="#CCCCCC"> and you may be</font><font color="#E5E5E5"> wondering why</font>

288
00:12:49,470 --> 00:12:55,230
don't we just modify<font color="#E5E5E5"> the driver of these</font>

289
00:12:53,130 --> 00:12:59,220
<font color="#E5E5E5">Wi-Fi devices I mean they're supposed to</font>

290
00:12:55,230 --> 00:13:01,949
<font color="#E5E5E5">control the Wi-Fi chip as well no well</font>

291
00:12:59,220 --> 00:13:04,170
the reason<font color="#E5E5E5"> that we have to modify the</font>

292
00:13:01,949 --> 00:13:06,449
firmware<font color="#E5E5E5"> is because if we look at the</font>

293
00:13:04,170 --> 00:13:10,199
Wi-Fi<font color="#E5E5E5"> dongle we see that it actually</font>

294
00:13:06,449 --> 00:13:12,630
<font color="#E5E5E5">consists of</font><font color="#CCCCCC"> two separate chips we first</font>

295
00:13:10,199 --> 00:13:15,329
have our<font color="#E5E5E5"> radio chip here on the right</font>

296
00:13:12,630 --> 00:13:18,060
which takes the physical Wi-Fi signal

297
00:13:15,329 --> 00:13:19,010
decodes it and then stores it in memory

298
00:13:18,060 --> 00:13:20,689
<font color="#E5E5E5">but</font>

299
00:13:19,010 --> 00:13:22,760
also have a second chip<font color="#E5E5E5"> and these</font>

300
00:13:20,690 --> 00:13:26,200
devices<font color="#CCCCCC"> on this</font><font color="#E5E5E5"> second chip is used to</font>

301
00:13:22,760 --> 00:13:30,200
communicate<font color="#E5E5E5"> over USB with your main</font>

302
00:13:26,200 --> 00:13:32,570
computer<font color="#E5E5E5"> in sense on in order</font><font color="#CCCCCC"> to set</font>

303
00:13:30,200 --> 00:13:35,300
these<font color="#E5E5E5"> memory-mapped registers we need to</font>

304
00:13:32,570 --> 00:13:38,030
run our code<font color="#E5E5E5"> on the CPU of the Wi-Fi</font>

305
00:13:35,300 --> 00:13:40,670
dongle itself<font color="#E5E5E5"> meaning we cannot do this</font>

306
00:13:38,030 --> 00:13:42,020
at the driver level at the driver level

307
00:13:40,670 --> 00:13:47,060
we really<font color="#CCCCCC"> need to do this at the</font>

308
00:13:42,020 --> 00:13:50,180
firmware<font color="#CCCCCC"> itself so that</font><font color="#E5E5E5"> covers</font><font color="#CCCCCC"> the</font>

309
00:13:47,060 --> 00:13:53,449
<font color="#E5E5E5">aspect of the attacker</font><font color="#CCCCCC"> the good news is</font>

310
00:13:50,180 --> 00:13:55,479
that there was a research prototype<font color="#CCCCCC"> a</font>

311
00:13:53,450 --> 00:13:58,520
few years ago<font color="#E5E5E5"> of a defense mechanism</font>

312
00:13:55,480 --> 00:14:00,860
<font color="#CCCCCC">against us</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> they are able to</font><font color="#E5E5E5"> detect</font>

313
00:13:58,520 --> 00:14:03,470
if a certain client in<font color="#CCCCCC"> your Wi-Fi</font>

314
00:14:00,860 --> 00:14:05,990
network<font color="#E5E5E5"> is behaving in this unfair</font>

315
00:14:03,470 --> 00:14:09,260
manner<font color="#E5E5E5"> so you can use this to monitor</font>

316
00:14:05,990 --> 00:14:11,180
your<font color="#CCCCCC"> own network and</font><font color="#E5E5E5"> if then this</font>

317
00:14:09,260 --> 00:14:17,750
selfish client is detected<font color="#CCCCCC"> you can</font>

318
00:14:11,180 --> 00:14:19,550
decide<font color="#CCCCCC"> to kick it off the network now an</font>

319
00:14:17,750 --> 00:14:22,010
explanation I did now I<font color="#CCCCCC"> assume that</font>

320
00:14:19,550 --> 00:14:24,199
<font color="#E5E5E5">there would only be one selfish station</font>

321
00:14:22,010 --> 00:14:27,560
on that<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the others are behaving</font>

322
00:14:24,200 --> 00:14:31,700
fairly but what happens if<font color="#CCCCCC"> they're too</font>

323
00:14:27,560 --> 00:14:34,579
selfish stations and they both follow

324
00:14:31,700 --> 00:14:37,090
this the same strategy where<font color="#CCCCCC"> they just</font>

325
00:14:34,580 --> 00:14:39,560
transmit as fast as possible

326
00:14:37,090 --> 00:14:41,330
well you might imagine<font color="#E5E5E5"> that in that case</font>

327
00:14:39,560 --> 00:14:43,869
you know they'll transmit at the same

328
00:14:41,330 --> 00:14:47,660
time<font color="#E5E5E5"> so there will be a collision on</font>

329
00:14:43,870 --> 00:14:50,090
<font color="#E5E5E5">both frames are lost at least that's</font>

330
00:14:47,660 --> 00:14:51,770
<font color="#E5E5E5">what I've always been</font><font color="#CCCCCC"> told during</font><font color="#E5E5E5"> my</font>

331
00:14:50,090 --> 00:14:53,750
studies<font color="#E5E5E5"> that if you have two</font>

332
00:14:51,770 --> 00:14:56,930
transmissions at the same time<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> you</font>

333
00:14:53,750 --> 00:15:00,170
<font color="#E5E5E5">lose both of</font><font color="#CCCCCC"> them turns out and in</font>

334
00:14:56,930 --> 00:15:03,709
practice that's not always<font color="#CCCCCC"> the case</font><font color="#E5E5E5"> and</font>

335
00:15:00,170 --> 00:15:05,990
practice<font color="#E5E5E5"> it's generally the packet</font><font color="#CCCCCC"> that</font>

336
00:15:03,710 --> 00:15:08,270
<font color="#CCCCCC">has the best signal quality and uses the</font>

337
00:15:05,990 --> 00:15:10,160
lowest bit rate that<font color="#CCCCCC"> is still received</font>

338
00:15:08,270 --> 00:15:13,510
correctly<font color="#E5E5E5"> and in a sense the other</font>

339
00:15:10,160 --> 00:15:16,610
<font color="#E5E5E5">packet is just seen as background noise</font>

340
00:15:13,510 --> 00:15:17,720
this<font color="#E5E5E5"> is called the capture effect I'm</font>

341
00:15:16,610 --> 00:15:21,020
going<font color="#CCCCCC"> to give a quick demonstration</font>

342
00:15:17,720 --> 00:15:24,710
<font color="#E5E5E5">about this capture effect using</font><font color="#CCCCCC"> an FM</font>

343
00:15:21,020 --> 00:15:28,660
<font color="#CCCCCC">radio in this demo there will be a guy</font>

344
00:15:24,710 --> 00:15:28,660
walking<font color="#CCCCCC"> around</font>

345
00:15:30,110 --> 00:15:40,680
<font color="#CCCCCC">we get</font><font color="#E5E5E5"> this ready here you</font><font color="#CCCCCC"> will see that</font>

346
00:15:36,960 --> 00:15:43,470
there are multiple radio stations<font color="#E5E5E5"> in the</font>

347
00:15:40,680 --> 00:15:46,680
vicinity<font color="#E5E5E5"> and depending on where he</font><font color="#CCCCCC"> is</font>

348
00:15:43,470 --> 00:15:48,720
walking one of these radio stations<font color="#E5E5E5"> will</font>

349
00:15:46,680 --> 00:15:55,829
have a<font color="#E5E5E5"> better signal and that's the</font>

350
00:15:48,720 --> 00:16:09,630
radio station<font color="#CCCCCC"> you will hear let's see if</font>

351
00:15:55,830 --> 00:16:13,520
I can for some<font color="#E5E5E5"> reason I cannot play</font><font color="#CCCCCC"> it</font>

352
00:16:09,630 --> 00:16:13,520
through HD<font color="#CCCCCC"> mm HDMI</font>

353
00:16:22,170 --> 00:16:35,560
let's show this on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> screen as well my</font>

354
00:16:27,759 --> 00:16:41,230
laptop<font color="#E5E5E5"> should be loud enough</font><font color="#CCCCCC"> so we hear</font>

355
00:16:35,560 --> 00:16:43,329
the first<font color="#E5E5E5"> radio station now if the</font>

356
00:16:41,230 --> 00:16:45,160
person then walks around<font color="#E5E5E5"> depending on</font>

357
00:16:43,329 --> 00:16:51,069
where he walks<font color="#E5E5E5"> another radio</font><font color="#CCCCCC"> station</font>

358
00:16:45,160 --> 00:16:53,860
will have<font color="#E5E5E5"> a better signal and you can</font>

359
00:16:51,069 --> 00:16:55,959
hear the<font color="#CCCCCC"> the receiver sometimes decodes</font>

360
00:16:53,860 --> 00:16:58,329
radio channel one sometimes<font color="#CCCCCC"> the radio</font>

361
00:16:55,959 --> 00:17:08,109
channel<font color="#CCCCCC"> two depending on the quality of</font>

362
00:16:58,329 --> 00:17:12,188
the signal so I think<font color="#E5E5E5"> this is a very</font>

363
00:17:08,109 --> 00:17:14,559
<font color="#E5E5E5">nice demonstration that depending on the</font>

364
00:17:12,189 --> 00:17:17,049
<font color="#E5E5E5">quality one of these devices one of</font>

365
00:17:14,559 --> 00:17:19,449
these transmitters<font color="#E5E5E5"> will in a sense</font><font color="#CCCCCC"> win</font>

366
00:17:17,049 --> 00:17:21,250
the collision and that's the one that

367
00:17:19,449 --> 00:17:26,439
<font color="#CCCCCC">the receiver will indeed receive</font>

368
00:17:21,250 --> 00:17:36,900
properly so let's<font color="#CCCCCC"> go back</font><font color="#E5E5E5"> to the</font>

369
00:17:26,439 --> 00:17:40,840
presentation<font color="#CCCCCC"> on the same idea applies to</font>

370
00:17:36,900 --> 00:17:43,720
Wi-Fi as well<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the attacker can abuse</font>

371
00:17:40,840 --> 00:17:45,908
this<font color="#E5E5E5"> what the attacker can do is it will</font>

372
00:17:43,720 --> 00:17:48,700
if there are<font color="#E5E5E5"> two selfish selfish</font>

373
00:17:45,909 --> 00:17:52,090
stations that<font color="#CCCCCC"> are competing</font><font color="#E5E5E5"> one selfish</font>

374
00:17:48,700 --> 00:17:55,240
station will lower its own<font color="#CCCCCC"> bitrate to</font>

375
00:17:52,090 --> 00:17:58,840
<font color="#E5E5E5">increase this</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> quality</font><font color="#CCCCCC"> of its own</font>

376
00:17:55,240 --> 00:18:00,520
signal<font color="#CCCCCC"> basically and this results in a</font>

377
00:17:58,840 --> 00:18:02,350
<font color="#CCCCCC">cat-and-mouse game where the first</font>

378
00:18:00,520 --> 00:18:04,720
selfish station will lower its bitrate

379
00:18:02,350 --> 00:18:07,870
<font color="#E5E5E5">meaning that the frame</font><font color="#CCCCCC"> its cents</font><font color="#E5E5E5"> will</font>

380
00:18:04,720 --> 00:18:09,640
now get decoded properly<font color="#E5E5E5"> but in turn the</font>

381
00:18:07,870 --> 00:18:11,770
other selfish station will also start

382
00:18:09,640 --> 00:18:14,530
lowering<font color="#E5E5E5"> its</font><font color="#CCCCCC"> bitrate</font><font color="#E5E5E5"> to increase the</font>

383
00:18:11,770 --> 00:18:16,570
quality<font color="#E5E5E5"> of</font><font color="#CCCCCC"> its signal then</font><font color="#E5E5E5"> the other</font>

384
00:18:14,530 --> 00:18:18,700
will do the same<font color="#E5E5E5"> and they will keep</font>

385
00:18:16,570 --> 00:18:22,629
lowering<font color="#E5E5E5"> their bitrate until it's no</font>

386
00:18:18,700 --> 00:18:24,400
longer gives any advantage and this

387
00:18:22,630 --> 00:18:26,950
means<font color="#E5E5E5"> we</font><font color="#CCCCCC"> get in a funny situation where</font>

388
00:18:24,400 --> 00:18:29,320
these selfish stations are now trying to

389
00:18:26,950 --> 00:18:29,950
<font color="#E5E5E5">increase their throughput as much as</font>

390
00:18:29,320 --> 00:18:32,149
<font color="#CCCCCC">possible</font>

391
00:18:29,950 --> 00:18:35,750
and they do that by lower

392
00:18:32,150 --> 00:18:38,120
<font color="#CCCCCC">they're betrayed</font><font color="#E5E5E5"> you may think</font><font color="#CCCCCC"> that's</font>

393
00:18:35,750 --> 00:18:39,830
surprising but<font color="#E5E5E5"> if you look at it from a</font>

394
00:18:38,120 --> 00:18:43,909
<font color="#CCCCCC">different</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> this actually makes a lot</font>

395
00:18:39,830 --> 00:18:45,649
of sense<font color="#E5E5E5"> because one selfish station is</font>

396
00:18:43,910 --> 00:18:48,980
simply treating the other selfish

397
00:18:45,650 --> 00:18:50,060
station<font color="#E5E5E5"> as background noise and what do</font>

398
00:18:48,980 --> 00:18:52,370
you<font color="#E5E5E5"> do if there's a lot of background</font>

399
00:18:50,060 --> 00:18:56,590
<font color="#E5E5E5">noise</font><font color="#CCCCCC"> well you lower your bitrate</font><font color="#E5E5E5"> so</font>

400
00:18:52,370 --> 00:19:00,909
your frames still gets received<font color="#E5E5E5"> properly</font>

401
00:18:56,590 --> 00:19:04,010
so that<font color="#CCCCCC"> covers</font><font color="#E5E5E5"> the selfish behavior part</font>

402
00:19:00,910 --> 00:19:06,560
<font color="#E5E5E5">we're now going</font><font color="#CCCCCC"> to discuss I think what</font>

403
00:19:04,010 --> 00:19:08,210
I think<font color="#CCCCCC"> are the more</font><font color="#E5E5E5"> cool results</font><font color="#CCCCCC"> and</font>

404
00:19:06,560 --> 00:19:10,639
the first one here is<font color="#E5E5E5"> how to implement</font>

405
00:19:08,210 --> 00:19:13,220
this continuous jammer<font color="#E5E5E5"> which basically</font>

406
00:19:10,640 --> 00:19:16,730
blocks<font color="#E5E5E5"> Wi-Fi for everyone in your</font>

407
00:19:13,220 --> 00:19:18,590
vicinity<font color="#E5E5E5"> so we want to be able</font><font color="#CCCCCC"> to</font>

408
00:19:16,730 --> 00:19:21,770
implement<font color="#E5E5E5"> this again using</font><font color="#CCCCCC"> our very</font>

409
00:19:18,590 --> 00:19:24,050
<font color="#E5E5E5">cheap Wi-Fi devices</font><font color="#CCCCCC"> so what do we</font><font color="#E5E5E5"> need</font>

410
00:19:21,770 --> 00:19:26,110
to do in order<font color="#E5E5E5"> to accomplish</font><font color="#CCCCCC"> that well</font>

411
00:19:24,050 --> 00:19:28,399
the<font color="#E5E5E5"> first step</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to be able to</font>

412
00:19:26,110 --> 00:19:30,169
instantly transmit a<font color="#E5E5E5"> packet</font>

413
00:19:28,400 --> 00:19:32,780
even if someone else<font color="#E5E5E5"> is already</font>

414
00:19:30,170 --> 00:19:37,280
transmitting our device<font color="#E5E5E5"> just needs to</font>

415
00:19:32,780 --> 00:19:39,200
start jamming the channel<font color="#E5E5E5"> and in order</font>

416
00:19:37,280 --> 00:19:42,710
<font color="#E5E5E5">to do that we need to</font><font color="#CCCCCC"> disable this thing</font>

417
00:19:39,200 --> 00:19:44,810
called<font color="#E5E5E5"> carrier sense on carrier sense is</font>

418
00:19:42,710 --> 00:19:47,180
essentially the mechanism that Wi-Fi

419
00:19:44,810 --> 00:19:49,610
<font color="#CCCCCC">devices</font><font color="#E5E5E5"> used to see if someone else is</font>

420
00:19:47,180 --> 00:19:51,080
already transmitting or not and we just

421
00:19:49,610 --> 00:19:53,689
want to<font color="#CCCCCC"> disable that</font><font color="#E5E5E5"> we just want to</font>

422
00:19:51,080 --> 00:19:57,679
<font color="#CCCCCC">transmit all the time independent of</font>

423
00:19:53,690 --> 00:20:00,710
what's going<font color="#E5E5E5"> on on top of that we also</font>

424
00:19:57,680 --> 00:20:03,980
want to then send the signal without<font color="#E5E5E5"> any</font>

425
00:20:00,710 --> 00:20:06,410
interruptions<font color="#E5E5E5"> at all and the way we will</font>

426
00:20:03,980 --> 00:20:09,010
<font color="#E5E5E5">do this is we will make the Wi-Fi device</font>

427
00:20:06,410 --> 00:20:12,110
<font color="#E5E5E5">transmit a lot</font><font color="#CCCCCC"> of dummy</font><font color="#E5E5E5"> Wi-Fi packets</font>

428
00:20:09,010 --> 00:20:15,500
but we want to do this<font color="#CCCCCC"> without</font><font color="#E5E5E5"> ever</font>

429
00:20:12,110 --> 00:20:17,389
being interrupted<font color="#E5E5E5"> so in a sense we want</font>

430
00:20:15,500 --> 00:20:19,340
<font color="#E5E5E5">to queue an infinite</font><font color="#CCCCCC"> amount of packets</font>

431
00:20:17,390 --> 00:20:21,860
to<font color="#CCCCCC"> be sure</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> device is always</font>

432
00:20:19,340 --> 00:20:23,480
<font color="#E5E5E5">transmitting but of</font><font color="#CCCCCC"> course you know in</font>

433
00:20:21,860 --> 00:20:26,510
<font color="#CCCCCC">reality you have a limited</font><font color="#E5E5E5"> amount of</font>

434
00:20:23,480 --> 00:20:29,510
memory especially<font color="#CCCCCC"> in these</font><font color="#E5E5E5"> Wi-Fi devices</font>

435
00:20:26,510 --> 00:20:32,000
you<font color="#CCCCCC"> are you have</font><font color="#E5E5E5"> to operate under very</font>

436
00:20:29,510 --> 00:20:34,310
low memory<font color="#E5E5E5"> constraints so how can we</font>

437
00:20:32,000 --> 00:20:38,770
<font color="#E5E5E5">queue a high amount of packets to</font><font color="#CCCCCC"> be</font>

438
00:20:34,310 --> 00:20:41,270
sure that our jammer is always<font color="#E5E5E5"> operating</font>

439
00:20:38,770 --> 00:20:42,580
well to<font color="#CCCCCC"> answer that</font><font color="#E5E5E5"> question we're going</font>

440
00:20:41,270 --> 00:20:47,379
<font color="#E5E5E5">to</font>

441
00:20:42,580 --> 00:20:50,740
<font color="#CCCCCC">at</font><font color="#E5E5E5"> how frames are</font><font color="#CCCCCC"> queued for</font>

442
00:20:47,380 --> 00:20:53,289
transmissions<font color="#E5E5E5"> on these devices and they</font>

443
00:20:50,740 --> 00:20:56,649
use the following<font color="#E5E5E5"> approach we have our</font>

444
00:20:53,289 --> 00:20:59,260
Wi-Fi chip here and essentially it's

445
00:20:56,649 --> 00:21:03,399
giving a linked list of frames<font color="#E5E5E5"> that it</font>

446
00:20:59,260 --> 00:21:05,440
should<font color="#E5E5E5"> transmit in the future on how do</font>

447
00:21:03,399 --> 00:21:07,840
<font color="#CCCCCC">we</font><font color="#E5E5E5"> then manipulate this into sending an</font>

448
00:21:05,440 --> 00:21:10,659
infinite amount<font color="#E5E5E5"> of packets</font><font color="#CCCCCC"> well it's</font>

449
00:21:07,840 --> 00:21:13,539
actually<font color="#E5E5E5"> really simple</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> some of you</font>

450
00:21:10,659 --> 00:21:16,000
already<font color="#E5E5E5"> have a clue how to do it we</font>

451
00:21:13,539 --> 00:21:18,309
<font color="#E5E5E5">simply turn this linked list into a</font>

452
00:21:16,000 --> 00:21:19,899
circular list<font color="#CCCCCC"> and there you go we are</font>

453
00:21:18,309 --> 00:21:22,178
now sending<font color="#E5E5E5"> an infinite amount of</font>

454
00:21:19,899 --> 00:21:26,789
packets without any interruption at all

455
00:21:22,179 --> 00:21:29,769
while using<font color="#E5E5E5"> a very low amount of memory</font>

456
00:21:26,789 --> 00:21:33,309
so we did some experiments<font color="#E5E5E5"> using this</font>

457
00:21:29,769 --> 00:21:37,299
and the first<font color="#E5E5E5"> interesting observation is</font>

458
00:21:33,309 --> 00:21:39,490
<font color="#CCCCCC">that</font><font color="#E5E5E5"> in principle</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> gemma is sending a</font>

459
00:21:37,299 --> 00:21:42,370
valid Wi-Fi packets even though they

460
00:21:39,490 --> 00:21:45,370
contain a dummy<font color="#E5E5E5"> contents but it turns</font>

461
00:21:42,370 --> 00:21:47,799
out that<font color="#CCCCCC"> because our Wi-Fi packets are</font>

462
00:21:45,370 --> 00:21:50,320
sent<font color="#E5E5E5"> so fast</font><font color="#CCCCCC"> after one another</font>

463
00:21:47,799 --> 00:21:52,779
if you put another Wi-Fi device<font color="#E5E5E5"> and</font>

464
00:21:50,320 --> 00:21:54,700
monitor<font color="#E5E5E5"> mode</font><font color="#CCCCCC"> that device will not be</font>

465
00:21:52,779 --> 00:21:57,070
able<font color="#CCCCCC"> to decode these frames so you</font>

466
00:21:54,700 --> 00:22:01,240
really don't see any<font color="#E5E5E5"> anything being</font>

467
00:21:57,070 --> 00:22:03,720
transmitted<font color="#E5E5E5"> at all the other interesting</font>

468
00:22:01,240 --> 00:22:07,690
remark is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this continuous jammer</font>

469
00:22:03,720 --> 00:22:10,779
<font color="#E5E5E5">isn't just trying to cause collisions</font>

470
00:22:07,690 --> 00:22:12,669
with other<font color="#E5E5E5"> stations or trying to mangle</font>

471
00:22:10,779 --> 00:22:16,289
<font color="#E5E5E5">other packets that are being transmitted</font>

472
00:22:12,669 --> 00:22:20,649
it's actually silencing other devices

473
00:22:16,289 --> 00:22:22,510
now what do I mean<font color="#E5E5E5"> with this well the</font>

474
00:22:20,649 --> 00:22:26,018
other Wi-Fi devices they<font color="#E5E5E5"> are still</font>

475
00:22:22,510 --> 00:22:27,760
operating<font color="#CCCCCC"> in a fair manner and the first</font>

476
00:22:26,019 --> 00:22:29,649
thing they do<font color="#E5E5E5"> want it on the transmitter</font>

477
00:22:27,760 --> 00:22:31,809
frame is they're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to see is someone</font>

478
00:22:29,649 --> 00:22:33,820
else already<font color="#E5E5E5"> transmitting and if that's</font>

479
00:22:31,809 --> 00:22:36,070
<font color="#E5E5E5">the</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> they wait</font><font color="#CCCCCC"> for that transmission</font>

480
00:22:33,820 --> 00:22:38,590
<font color="#E5E5E5">to be complete so to put them in the</font>

481
00:22:36,070 --> 00:22:40,210
different<font color="#CCCCCC"> ways</font><font color="#E5E5E5"> essentially other devices</font>

482
00:22:38,590 --> 00:22:41,139
<font color="#E5E5E5">are thinking like oh there's this</font>

483
00:22:40,210 --> 00:22:45,010
constant jammer

484
00:22:41,139 --> 00:22:47,320
let's not transmit and this makes our

485
00:22:45,010 --> 00:22:49,510
jammer very effectively<font color="#CCCCCC"> very effective</font>

486
00:22:47,320 --> 00:22:52,928
in practice<font color="#E5E5E5"> because if we use for</font>

487
00:22:49,510 --> 00:22:55,049
example<font color="#CCCCCC"> this Wi-Fi device we can silence</font>

488
00:22:52,929 --> 00:22:58,350
<font color="#E5E5E5">other Wi-Fi devices for</font>

489
00:22:55,049 --> 00:23:00,149
range of<font color="#CCCCCC"> 80 meters</font><font color="#E5E5E5"> assuming there are</font><font color="#CCCCCC"> no</font>

490
00:22:58,350 --> 00:23:02,939
walls in<font color="#CCCCCC"> between so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> with a clear</font>

491
00:23:00,149 --> 00:23:04,979
line of sight<font color="#CCCCCC"> and if you use a rather</font>

492
00:23:02,940 --> 00:23:10,679
cheap<font color="#E5E5E5"> amplifier we can even extend this</font>

493
00:23:04,980 --> 00:23:15,350
to 120 meters so let<font color="#E5E5E5"> me give again a</font>

494
00:23:10,679 --> 00:23:15,350
quick video demo demonstration of this

495
00:23:17,509 --> 00:23:26,399
where is my mouse<font color="#CCCCCC"> so here I'm going</font><font color="#E5E5E5"> to</font>

496
00:23:22,619 --> 00:23:29,699
<font color="#E5E5E5">first initialize the devices</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

497
00:23:26,399 --> 00:23:31,678
Wi-Fi devices that I'm going<font color="#CCCCCC"> to use and</font>

498
00:23:29,700 --> 00:23:33,450
I<font color="#E5E5E5"> have two Wi-Fi devices on the first</font>

499
00:23:31,679 --> 00:23:35,369
one I'm now going to<font color="#CCCCCC"> put</font><font color="#E5E5E5"> into modern</font>

500
00:23:33,450 --> 00:23:39,600
monitor mode and I'm going<font color="#CCCCCC"> to capture</font>

501
00:23:35,369 --> 00:23:43,168
<font color="#E5E5E5">all the packets</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I am receiving so</font>

502
00:23:39,600 --> 00:23:47,340
we can see here<font color="#CCCCCC"> that this was</font><font color="#E5E5E5"> recorded</font>

503
00:23:43,169 --> 00:23:49,440
at my hotel<font color="#CCCCCC"> last year at Britain well</font>

504
00:23:47,340 --> 00:23:51,779
actually a few<font color="#E5E5E5"> years ago and we're</font>

505
00:23:49,440 --> 00:23:54,929
receiving<font color="#E5E5E5"> everything properly now but</font>

506
00:23:51,779 --> 00:23:57,330
once we start our constant jammer<font color="#E5E5E5"> we can</font>

507
00:23:54,929 --> 00:23:59,970
see that the<font color="#CCCCCC"> traffic now has come to a</font>

508
00:23:57,330 --> 00:24:02,820
halt<font color="#CCCCCC"> and we're indeed not receiving</font>

509
00:23:59,970 --> 00:24:05,039
anything<font color="#E5E5E5"> at all even</font><font color="#CCCCCC"> though in principle</font>

510
00:24:02,820 --> 00:24:07,080
<font color="#E5E5E5">our jammer is sending valid Wi-Fi</font>

511
00:24:05,039 --> 00:24:09,590
packets you can<font color="#CCCCCC"> see that while a jammer</font>

512
00:24:07,080 --> 00:24:12,059
was active it wasn't receiving<font color="#E5E5E5"> a thing</font>

513
00:24:09,590 --> 00:24:14,549
now we disabled the<font color="#E5E5E5"> jammer</font><font color="#CCCCCC"> ant we are</font>

514
00:24:12,059 --> 00:24:16,678
again receiving<font color="#E5E5E5"> packets so here you can</font>

515
00:24:14,549 --> 00:24:18,929
see these<font color="#CCCCCC"> ten</font><font color="#E5E5E5"> minutes the constant</font>

516
00:24:16,679 --> 00:24:22,109
jammer was active and no packets were

517
00:24:18,929 --> 00:24:26,039
received at all on the<font color="#E5E5E5"> 888 that's the</font>

518
00:24:22,109 --> 00:24:27,809
dummy packets<font color="#E5E5E5"> we are transmitting so</font>

519
00:24:26,039 --> 00:24:30,749
last year during<font color="#E5E5E5"> Britain actually did a</font>

520
00:24:27,809 --> 00:24:34,529
live demo of<font color="#E5E5E5"> this unfortunately today I</font>

521
00:24:30,749 --> 00:24:36,509
want to<font color="#E5E5E5"> make sure I still</font><font color="#CCCCCC"> have some</font><font color="#E5E5E5"> time</font>

522
00:24:34,529 --> 00:24:39,119
<font color="#CCCCCC">so I can also explain how our work</font>

523
00:24:36,509 --> 00:24:44,549
influences the crack<font color="#CCCCCC"> attack I'm taking a</font>

524
00:24:39,119 --> 00:24:46,039
demo<font color="#CCCCCC"> now would</font><font color="#E5E5E5"> be too much time so if</font>

525
00:24:44,549 --> 00:24:49,230
<font color="#E5E5E5">you want to try this out at home</font>

526
00:24:46,039 --> 00:24:51,299
<font color="#CCCCCC">yourself</font><font color="#E5E5E5"> this is also supported</font><font color="#CCCCCC"> on a</font>

527
00:24:49,230 --> 00:24:53,220
Raspberry Pi<font color="#E5E5E5"> so what you can do is you</font>

528
00:24:51,299 --> 00:24:55,889
can buy a Raspberry Pi<font color="#E5E5E5"> you can plug in</font>

529
00:24:53,220 --> 00:24:57,690
these USB<font color="#E5E5E5"> devices you can attach a</font>

530
00:24:55,889 --> 00:25:00,719
<font color="#CCCCCC">battery pack to your Raspberry Pi</font><font color="#E5E5E5"> and</font>

531
00:24:57,690 --> 00:25:02,309
then you can just put the device near

532
00:25:00,720 --> 00:25:04,139
your<font color="#E5E5E5"> neighbors that you don't like or</font>

533
00:25:02,309 --> 00:25:05,668
maybe<font color="#E5E5E5"> something else</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> recommend</font>

534
00:25:04,139 --> 00:25:08,119
<font color="#E5E5E5">doing that but in principle it's</font>

535
00:25:05,669 --> 00:25:08,119
possible

536
00:25:08,240 --> 00:25:15,059
but on a<font color="#E5E5E5"> more serious</font><font color="#CCCCCC"> note what's the</font>

537
00:25:11,429 --> 00:25:17,760
impact of<font color="#E5E5E5"> this in practice</font><font color="#CCCCCC"> well we know</font>

538
00:25:15,059 --> 00:25:20,970
we can<font color="#E5E5E5"> jam other Wi-Fi devices but it</font>

539
00:25:17,760 --> 00:25:25,100
goes beyond that<font color="#E5E5E5"> we can jam any device</font>

540
00:25:20,970 --> 00:25:27,870
that<font color="#CCCCCC"> uses the same frequencies as</font><font color="#E5E5E5"> Wi-Fi</font>

541
00:25:25,100 --> 00:25:31,918
so we can also<font color="#E5E5E5"> jam for example the</font>

542
00:25:27,870 --> 00:25:34,320
Bluetooth<font color="#E5E5E5"> and ZigBee protocol these are</font>

543
00:25:31,919 --> 00:25:37,799
<font color="#E5E5E5">systems</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are used in home automation</font>

544
00:25:34,320 --> 00:25:41,370
<font color="#E5E5E5">devices</font><font color="#CCCCCC"> I think sometimes even some cons</font>

545
00:25:37,799 --> 00:25:43,020
industrial control systems use them you

546
00:25:41,370 --> 00:25:45,059
have the<font color="#E5E5E5"> Internet of Things that uses</font>

547
00:25:43,020 --> 00:25:50,010
<font color="#E5E5E5">these frequency as well and we can jam</font>

548
00:25:45,059 --> 00:25:53,158
all these<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> so maybe one</font><font color="#E5E5E5"> example</font>

549
00:25:50,010 --> 00:25:55,408
close to home is<font color="#E5E5E5"> these days you</font><font color="#CCCCCC"> have</font>

550
00:25:53,159 --> 00:25:59,370
this very fancy<font color="#CCCCCC"> baby monitors that</font>

551
00:25:55,409 --> 00:26:01,860
provide a live<font color="#E5E5E5"> video and audio feed some</font>

552
00:25:59,370 --> 00:26:04,969
of<font color="#CCCCCC"> these devices</font><font color="#E5E5E5"> use the same frequency</font>

553
00:26:01,860 --> 00:26:08,059
<font color="#CCCCCC">as Wi-Fi meaning we can jam them as well</font>

554
00:26:04,970 --> 00:26:12,299
now this<font color="#CCCCCC"> is still</font><font color="#E5E5E5"> a fairly innocent</font>

555
00:26:08,059 --> 00:26:14,760
<font color="#E5E5E5">example but there are also some in this</font>

556
00:26:12,299 --> 00:26:18,690
case security cameras which use the same

557
00:26:14,760 --> 00:26:20,059
<font color="#E5E5E5">frequency</font><font color="#CCCCCC"> as Wi-Fi that means they again</font>

558
00:26:18,690 --> 00:26:24,289
can also be jammed

559
00:26:20,059 --> 00:26:26,940
so here it's very important if you<font color="#E5E5E5"> run a</font>

560
00:26:24,289 --> 00:26:28,950
some camera over these frequencies that

561
00:26:26,940 --> 00:26:31,049
<font color="#E5E5E5">you</font><font color="#CCCCCC"> are able to</font><font color="#E5E5E5"> detect when you lost</font>

562
00:26:28,950 --> 00:26:33,330
your<font color="#CCCCCC"> connection because then you know</font>

563
00:26:31,049 --> 00:26:36,570
well either<font color="#CCCCCC"> the battery</font><font color="#E5E5E5"> ran out or</font>

564
00:26:33,330 --> 00:26:38,490
there's an attack going<font color="#E5E5E5"> on now I also</font>

565
00:26:36,570 --> 00:26:42,090
think though I'm<font color="#E5E5E5"> not a hundred percent</font>

566
00:26:38,490 --> 00:26:44,190
sure<font color="#E5E5E5"> of this that some cars</font><font color="#CCCCCC"> when you</font>

567
00:26:42,090 --> 00:26:47,730
<font color="#E5E5E5">want to unlock them using</font><font color="#CCCCCC"> your key fob</font>

568
00:26:44,190 --> 00:26:50,309
<font color="#CCCCCC">they also use the</font><font color="#E5E5E5"> same frequency</font><font color="#CCCCCC"> as</font>

569
00:26:47,730 --> 00:26:51,840
Wi-Fi<font color="#E5E5E5"> even though most cars use another</font>

570
00:26:50,309 --> 00:26:54,090
<font color="#E5E5E5">frequency I think there's a chance that</font>

571
00:26:51,840 --> 00:26:57,330
<font color="#E5E5E5">some of them also use these frequencies</font>

572
00:26:54,090 --> 00:27:01,709
<font color="#CCCCCC">in Wi-Fi that's a very interesting</font>

573
00:26:57,330 --> 00:27:05,399
scenario as well because<font color="#E5E5E5"> one attacker</font>

574
00:27:01,710 --> 00:27:08,970
can do is the attacker can jam<font color="#E5E5E5"> the lock</font>

575
00:27:05,400 --> 00:27:10,860
signal that you send<font color="#E5E5E5"> to your car so you</font>

576
00:27:08,970 --> 00:27:12,900
can imagine the<font color="#E5E5E5"> situation you just park</font>

577
00:27:10,860 --> 00:27:14,639
your<font color="#E5E5E5"> car</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> walking away</font><font color="#CCCCCC"> you just</font>

578
00:27:12,900 --> 00:27:16,900
<font color="#E5E5E5">press the button without looking whether</font>

579
00:27:14,640 --> 00:27:20,170
<font color="#E5E5E5">your car is</font><font color="#CCCCCC"> actually locking but</font>

580
00:27:16,900 --> 00:27:22,690
you as an attacker just locked<font color="#E5E5E5"> that</font><font color="#CCCCCC"> uses</font>

581
00:27:20,170 --> 00:27:25,660
jammed that<font color="#E5E5E5"> lock signal meaning the car</font>

582
00:27:22,690 --> 00:27:29,560
is still open<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> then enter the</font>

583
00:27:25,660 --> 00:27:32,410
car and do what you<font color="#E5E5E5"> want and this</font><font color="#CCCCCC"> is not</font>

584
00:27:29,560 --> 00:27:35,560
just wild speculation<font color="#E5E5E5"> we see that in</font>

585
00:27:32,410 --> 00:27:37,900
practice<font color="#CCCCCC"> people are</font><font color="#E5E5E5"> actually performing</font>

586
00:27:35,560 --> 00:27:39,790
these jamming attacks<font color="#E5E5E5"> if the jamming</font>

587
00:27:37,900 --> 00:27:43,150
device is cheap enough<font color="#CCCCCC"> aren't there's a</font>

588
00:27:39,790 --> 00:27:45,690
big enough<font color="#E5E5E5"> advantage to do this for</font>

589
00:27:43,150 --> 00:27:49,660
example<font color="#CCCCCC"> there are relatively cheap</font>

590
00:27:45,690 --> 00:27:53,020
<font color="#CCCCCC">jammers</font><font color="#E5E5E5"> that indeed exists for these key</font>

591
00:27:49,660 --> 00:27:54,670
fobs<font color="#E5E5E5"> for your car they are able to carry</font>

592
00:27:53,020 --> 00:27:58,690
<font color="#CCCCCC">out this attack where you can block the</font>

593
00:27:54,670 --> 00:28:00,580
lock signal of a car now it can go

594
00:27:58,690 --> 00:28:02,560
beyond this<font color="#E5E5E5"> sometimes</font>

595
00:28:00,580 --> 00:28:05,379
these cars<font color="#E5E5E5"> also have an anti-theft</font>

596
00:28:02,560 --> 00:28:08,560
system<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> a GPS that tracks</font>

597
00:28:05,380 --> 00:28:11,740
their location here we also<font color="#CCCCCC"> see that in</font>

598
00:28:08,560 --> 00:28:14,379
practice sometimes<font color="#CCCCCC"> thieves are trying to</font>

599
00:28:11,740 --> 00:28:17,440
then<font color="#E5E5E5"> jam these GPS signals or</font><font color="#CCCCCC"> the data</font>

600
00:28:14,380 --> 00:28:22,270
communication<font color="#CCCCCC"> in order to defeat these</font>

601
00:28:17,440 --> 00:28:25,960
anti-theft systems<font color="#E5E5E5"> the last example I</font>

602
00:28:22,270 --> 00:28:27,820
<font color="#CCCCCC">think is the most extreme one I think</font>

603
00:28:25,960 --> 00:28:32,280
<font color="#E5E5E5">these were some robbers that we're</font>

604
00:28:27,820 --> 00:28:35,470
trying to rob some store or a home and

605
00:28:32,280 --> 00:28:38,770
they really prepared quite well<font color="#E5E5E5"> because</font>

606
00:28:35,470 --> 00:28:41,830
<font color="#CCCCCC">before they went</font><font color="#E5E5E5"> inside they cut the</font>

607
00:28:38,770 --> 00:28:44,980
cables of the<font color="#CCCCCC"> telephone line they also</font>

608
00:28:41,830 --> 00:28:47,679
cut the cables of their<font color="#E5E5E5"> security system</font>

609
00:28:44,980 --> 00:28:49,480
their security cameras<font color="#E5E5E5"> and on top</font><font color="#CCCCCC"> of</font>

610
00:28:47,680 --> 00:28:51,880
<font color="#E5E5E5">that they</font><font color="#CCCCCC"> also had a device that would</font>

611
00:28:49,480 --> 00:28:54,400
<font color="#CCCCCC">jam mobile communications</font><font color="#E5E5E5"> such as your</font>

612
00:28:51,880 --> 00:28:57,100
phone<font color="#E5E5E5"> so they really took a quite</font>

613
00:28:54,400 --> 00:29:00,880
extreme step here but it does show<font color="#CCCCCC"> that</font>

614
00:28:57,100 --> 00:29:05,740
sometimes<font color="#E5E5E5"> attackers really will use</font>

615
00:29:00,880 --> 00:29:08,410
these jammers<font color="#CCCCCC"> in</font><font color="#E5E5E5"> practice as well so now</font>

616
00:29:05,740 --> 00:29:14,800
we get<font color="#CCCCCC"> to the second</font><font color="#E5E5E5"> part where we will</font>

617
00:29:08,410 --> 00:29:17,530
implement<font color="#E5E5E5"> a selective jammer now we're</font>

618
00:29:14,800 --> 00:29:22,300
not going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> present that fast so what a</font>

619
00:29:17,530 --> 00:29:24,700
selector jammer does is it will decode

620
00:29:22,300 --> 00:29:27,570
the header of a Wi-Fi frame<font color="#E5E5E5"> while this</font>

621
00:29:24,700 --> 00:29:30,390
Wi-Fi frame is still being transmitted

622
00:29:27,570 --> 00:29:31,919
and then based on the MAC addresses that

623
00:29:30,390 --> 00:29:34,020
occur in the header<font color="#E5E5E5"> it will decide</font>

624
00:29:31,920 --> 00:29:37,770
whether it<font color="#E5E5E5"> will</font><font color="#CCCCCC"> Jam the</font><font color="#E5E5E5"> remaining</font>

625
00:29:34,020 --> 00:29:40,230
contents or not so to explain this in a

626
00:29:37,770 --> 00:29:43,530
bit more<font color="#CCCCCC"> detail if we want to implement</font>

627
00:29:40,230 --> 00:29:46,530
this<font color="#CCCCCC"> ourself what we need to be able</font><font color="#E5E5E5"> to</font>

628
00:29:43,530 --> 00:29:48,210
<font color="#E5E5E5">do is that we</font><font color="#CCCCCC"> first need to</font><font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to</font>

629
00:29:46,530 --> 00:29:50,250
detect that<font color="#CCCCCC"> there is a</font><font color="#E5E5E5"> Wi-Fi</font>

630
00:29:48,210 --> 00:29:53,850
transmission<font color="#E5E5E5"> going on now thankfully</font>

631
00:29:50,250 --> 00:29:56,130
Wi-Fi devices do<font color="#CCCCCC"> this already but then</font>

632
00:29:53,850 --> 00:30:01,429
we need to be able to decode this header

633
00:29:56,130 --> 00:30:04,530
and then access this decoded information

634
00:30:01,430 --> 00:30:06,390
while the<font color="#E5E5E5"> last part of the Wi-Fi frame</font>

635
00:30:04,530 --> 00:30:10,170
is still being transmitted<font color="#CCCCCC"> under still</font>

636
00:30:06,390 --> 00:30:11,760
in the air then once we decided once we

637
00:30:10,170 --> 00:30:14,310
have access<font color="#CCCCCC"> to this data</font><font color="#E5E5E5"> we need to</font>

638
00:30:11,760 --> 00:30:16,500
decide will be<font color="#CCCCCC"> jamot or not we need</font><font color="#E5E5E5"> to</font>

639
00:30:14,310 --> 00:30:19,830
disable<font color="#E5E5E5"> the reception of this frame and</font>

640
00:30:16,500 --> 00:30:22,530
<font color="#E5E5E5">then switch our antenna from receive</font>

641
00:30:19,830 --> 00:30:24,360
mode to transmit modes and then finally

642
00:30:22,530 --> 00:30:26,250
the third step<font color="#CCCCCC"> is to inject a dummy</font>

643
00:30:24,360 --> 00:30:30,810
packet so we can jam the<font color="#E5E5E5"> remaining</font>

644
00:30:26,250 --> 00:30:32,820
content of this Wi-Fi frame even though

645
00:30:30,810 --> 00:30:35,760
technically we're only jamming the last

646
00:30:32,820 --> 00:30:38,040
few<font color="#E5E5E5"> bites of this packets this will</font>

647
00:30:35,760 --> 00:30:41,160
cause the complete packet to<font color="#E5E5E5"> the drop to</font>

648
00:30:38,040 --> 00:30:44,129
be dropped<font color="#E5E5E5"> why is that the case well</font>

649
00:30:41,160 --> 00:30:46,740
every Wi-Fi packet contains a CRC<font color="#CCCCCC"> it</font>

650
00:30:44,130 --> 00:30:49,380
contains a checksum<font color="#CCCCCC"> and by jamming the</font>

651
00:30:46,740 --> 00:30:51,480
last bytes<font color="#E5E5E5"> of the Wi-Fi packet this</font>

652
00:30:49,380 --> 00:30:53,760
checksum will become<font color="#CCCCCC"> enveloped</font><font color="#E5E5E5"> on</font>

653
00:30:51,480 --> 00:30:55,830
because of<font color="#E5E5E5"> that the receiver will drop</font>

654
00:30:53,760 --> 00:31:01,379
this packet<font color="#E5E5E5"> without looking at the</font>

655
00:30:55,830 --> 00:31:04,199
<font color="#CCCCCC">contents at</font><font color="#E5E5E5"> all so how are we able</font><font color="#CCCCCC"> to</font>

656
00:31:01,380 --> 00:31:07,140
pull this off using<font color="#E5E5E5"> our own cheap Wi-Fi</font>

657
00:31:04,200 --> 00:31:09,360
devices<font color="#E5E5E5"> well it turns out that step two</font>

658
00:31:07,140 --> 00:31:14,780
and three is<font color="#E5E5E5"> actually quite</font><font color="#CCCCCC"> easy to do</font>

659
00:31:09,360 --> 00:31:17,490
the hard part<font color="#CCCCCC"> is decoding</font><font color="#E5E5E5"> on processing</font>

660
00:31:14,780 --> 00:31:19,410
<font color="#E5E5E5">the first few bites of this Wi-Fi</font>

661
00:31:17,490 --> 00:31:23,820
packets while the transmission has<font color="#E5E5E5"> not</font>

662
00:31:19,410 --> 00:31:27,060
yet been<font color="#E5E5E5"> fully completed in order to</font>

663
00:31:23,820 --> 00:31:30,960
pull this off<font color="#E5E5E5"> we relied on one important</font>

664
00:31:27,060 --> 00:31:33,149
observation<font color="#CCCCCC"> that observation</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> if</font>

665
00:31:30,960 --> 00:31:35,280
you look at<font color="#CCCCCC"> our</font><font color="#E5E5E5"> Wi-Fi dongle as I</font>

666
00:31:33,150 --> 00:31:38,250
mentioned<font color="#CCCCCC"> previously it consists of two</font>

667
00:31:35,280 --> 00:31:40,860
chips<font color="#E5E5E5"> the first one is the radio chip</font>

668
00:31:38,250 --> 00:31:41,430
which<font color="#CCCCCC"> will receive the physical Wi-Fi</font>

669
00:31:40,860 --> 00:31:44,040
signal

670
00:31:41,430 --> 00:31:46,200
will decode<font color="#E5E5E5"> it and then write it</font><font color="#CCCCCC"> to</font>

671
00:31:44,040 --> 00:31:48,270
memory<font color="#E5E5E5"> but there's also the second chip</font>

672
00:31:46,200 --> 00:31:51,630
<font color="#E5E5E5">which is the</font><font color="#CCCCCC"> CPU that</font><font color="#E5E5E5"> communicates</font>

673
00:31:48,270 --> 00:31:53,970
through<font color="#E5E5E5"> USB with the main computer now</font>

674
00:31:51,630 --> 00:31:57,330
interestingly when<font color="#CCCCCC"> the radio</font><font color="#E5E5E5"> chip is</font>

675
00:31:53,970 --> 00:31:59,180
receiving a frame it will use direct

676
00:31:57,330 --> 00:32:01,919
memory access to write it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> memory</font>

677
00:31:59,180 --> 00:32:04,200
<font color="#E5E5E5">meaning while the radio chip is</font>

678
00:32:01,920 --> 00:32:07,350
transmitting<font color="#E5E5E5"> we can run any code on the</font>

679
00:32:04,200 --> 00:32:10,920
CPU<font color="#E5E5E5"> that we want and in particular what</font>

680
00:32:07,350 --> 00:32:13,980
we can do we can just monitor this

681
00:32:10,920 --> 00:32:17,330
memory using the internal CPU and see

682
00:32:13,980 --> 00:32:21,900
whenever the radio chip is writing

683
00:32:17,330 --> 00:32:23,699
decoded bytes<font color="#E5E5E5"> to the memory so the idea</font>

684
00:32:21,900 --> 00:32:26,460
here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that we first write some</font>

685
00:32:23,700 --> 00:32:28,770
initialization<font color="#CCCCCC"> valid values to this</font>

686
00:32:26,460 --> 00:32:30,090
<font color="#E5E5E5">memory and once we notice that this</font>

687
00:32:28,770 --> 00:32:32,160
memory<font color="#E5E5E5"> is being changed</font>

688
00:32:30,090 --> 00:32:37,439
<font color="#E5E5E5">we know that the radio chip is in the</font>

689
00:32:32,160 --> 00:32:39,570
<font color="#E5E5E5">process of receiving a frame so I want</font>

690
00:32:37,440 --> 00:32:41,010
to<font color="#E5E5E5"> explain this in a bit more</font><font color="#CCCCCC"> detail so</font>

691
00:32:39,570 --> 00:32:44,129
<font color="#CCCCCC">as I mentioned the first step is</font>

692
00:32:41,010 --> 00:32:46,920
decoding this header while the packet is

693
00:32:44,130 --> 00:32:49,950
still in the air<font color="#E5E5E5"> and as I explained we</font>

694
00:32:46,920 --> 00:32:51,870
are going to<font color="#E5E5E5"> all we're going</font><font color="#CCCCCC"> to read</font><font color="#E5E5E5"> the</font>

695
00:32:49,950 --> 00:32:54,690
<font color="#CCCCCC">memory until we notice that this</font><font color="#E5E5E5"> memory</font>

696
00:32:51,870 --> 00:32:57,840
is being changed<font color="#E5E5E5"> so how does this</font><font color="#CCCCCC"> look</font>

697
00:32:54,690 --> 00:32:59,640
<font color="#CCCCCC">like at the code level well we have the</font>

698
00:32:57,840 --> 00:33:01,530
following<font color="#E5E5E5"> wire loop that is essentially</font>

699
00:32:59,640 --> 00:33:03,870
detecting if we are receiving<font color="#CCCCCC"> a packet</font>

700
00:33:01,530 --> 00:33:06,240
or<font color="#E5E5E5"> not now the first part of this wire</font>

701
00:33:03,870 --> 00:33:10,739
loop is<font color="#CCCCCC"> just to protect</font><font color="#E5E5E5"> against on an</font>

702
00:33:06,240 --> 00:33:13,290
infinite<font color="#E5E5E5"> loop</font><font color="#CCCCCC"> the second</font><font color="#E5E5E5"> condition here</font>

703
00:33:10,740 --> 00:33:16,740
is the important one<font color="#E5E5E5"> because if this</font>

704
00:33:13,290 --> 00:33:19,440
memory<font color="#E5E5E5"> byte changes that means that our</font>

705
00:33:16,740 --> 00:33:24,780
radio chip is now writing<font color="#E5E5E5"> the first few</font>

706
00:33:19,440 --> 00:33:27,750
bites of<font color="#CCCCCC"> the packets</font><font color="#E5E5E5"> to memory then the</font>

707
00:33:24,780 --> 00:33:30,090
second<font color="#E5E5E5"> step is once we know that</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Mac</font>

708
00:33:27,750 --> 00:33:32,340
header<font color="#E5E5E5"> is being has</font><font color="#CCCCCC"> been written to</font><font color="#E5E5E5"> the</font>

709
00:33:30,090 --> 00:33:34,560
memory we<font color="#CCCCCC"> can now simply inspect the</font>

710
00:33:32,340 --> 00:33:36,750
contents<font color="#CCCCCC"> of this header</font><font color="#E5E5E5"> for example we</font>

711
00:33:34,560 --> 00:33:39,929
can see<font color="#CCCCCC"> it if it was a beacon</font><font color="#E5E5E5"> or a probe</font>

712
00:33:36,750 --> 00:33:41,820
request<font color="#CCCCCC"> and we can also inspect the MAC</font>

713
00:33:39,930 --> 00:33:44,280
addresses that<font color="#CCCCCC"> are contained</font><font color="#E5E5E5"> in this</font>

714
00:33:41,820 --> 00:33:46,860
header and we<font color="#CCCCCC"> can decide to jam the</font>

715
00:33:44,280 --> 00:33:49,210
remaining contents or not

716
00:33:46,860 --> 00:33:51,760
then the second<font color="#CCCCCC"> step we need to</font><font color="#E5E5E5"> do is</font>

717
00:33:49,210 --> 00:33:55,000
you need to abort the reception of<font color="#E5E5E5"> this</font>

718
00:33:51,760 --> 00:33:57,460
frame on this is surprisingly simple<font color="#E5E5E5"> we</font>

719
00:33:55,000 --> 00:34:01,420
<font color="#E5E5E5">simply have to find the correct memory</font>

720
00:33:57,460 --> 00:34:04,030
register I'll set the receive<font color="#E5E5E5"> abort so</font>

721
00:34:01,420 --> 00:34:06,310
<font color="#E5E5E5">our X stands here for receive and we</font>

722
00:34:04,030 --> 00:34:09,570
simply set<font color="#E5E5E5"> this bit</font><font color="#CCCCCC"> on then we abort the</font>

723
00:34:06,310 --> 00:34:11,889
current reception so that's<font color="#E5E5E5"> very trivial</font>

724
00:34:09,570 --> 00:34:15,490
<font color="#E5E5E5">then the last step is</font><font color="#CCCCCC"> we need to inject</font>

725
00:34:11,889 --> 00:34:17,469
<font color="#E5E5E5">this dummy packet into the air and again</font>

726
00:34:15,489 --> 00:34:19,120
<font color="#E5E5E5">that's quite straightforward I mean yeah</font>

727
00:34:17,469 --> 00:34:23,259
you need to<font color="#E5E5E5"> read the documentation well</font>

728
00:34:19,120 --> 00:34:25,060
to find out<font color="#E5E5E5"> these memory registers but</font>

729
00:34:23,260 --> 00:34:28,720
<font color="#E5E5E5">to inject the packet is quite</font>

730
00:34:25,060 --> 00:34:31,029
<font color="#E5E5E5">straightforward you simply first give</font>

731
00:34:28,719 --> 00:34:33,609
the radio chip<font color="#E5E5E5"> a pointer to the device</font>

732
00:34:31,030 --> 00:34:37,210
to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> packet</font><font color="#E5E5E5"> you want to transmit and</font>

733
00:34:33,610 --> 00:34:39,430
then you simply set a bit in the<font color="#CCCCCC"> DXE</font>

734
00:34:37,210 --> 00:34:42,490
register which stands<font color="#E5E5E5"> for transmit</font>

735
00:34:39,429 --> 00:34:46,270
enable which as the name<font color="#E5E5E5"> implies will</font>

736
00:34:42,489 --> 00:34:50,489
cause your packets to<font color="#E5E5E5"> be transmitted and</font>

737
00:34:46,270 --> 00:34:53,800
that's it so we did some<font color="#E5E5E5"> experiments</font>

738
00:34:50,489 --> 00:34:56,109
<font color="#CCCCCC">with</font><font color="#E5E5E5"> this attack and practiced so we</font>

739
00:34:53,800 --> 00:34:59,980
jammed some beacons<font color="#E5E5E5"> under several</font>

740
00:34:56,110 --> 00:35:02,200
locations on positions and<font color="#CCCCCC"> our goal was</font>

741
00:34:59,980 --> 00:35:07,450
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be able to see how reliable is a</font>

742
00:35:02,200 --> 00:35:09,100
selective jammer that works like this to

743
00:35:07,450 --> 00:35:10,960
determine<font color="#E5E5E5"> how reliable at this we</font>

744
00:35:09,100 --> 00:35:13,480
essentially want to know how fast it can

745
00:35:10,960 --> 00:35:16,660
react<font color="#E5E5E5"> to a</font><font color="#CCCCCC"> packets because</font><font color="#E5E5E5"> if it can</font>

746
00:35:13,480 --> 00:35:19,480
react very<font color="#E5E5E5"> fast we can even selectively</font>

747
00:35:16,660 --> 00:35:21,250
<font color="#CCCCCC">jam short packets</font><font color="#E5E5E5"> but if it's too slowed</font>

748
00:35:19,480 --> 00:35:26,140
and maybe we're not<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> jam packets</font>

749
00:35:21,250 --> 00:35:28,900
at all so what we did is we first jammed

750
00:35:26,140 --> 00:35:30,910
<font color="#E5E5E5">beacon frames in the 2.4 gigahertz bands</font>

751
00:35:28,900 --> 00:35:33,640
<font color="#E5E5E5">whether are where they are sent at one</font>

752
00:35:30,910 --> 00:35:37,810
megabit per second<font color="#E5E5E5"> and then we are able</font>

753
00:35:33,640 --> 00:35:42,029
<font color="#CCCCCC">to</font><font color="#E5E5E5"> mangle on basically mess with bytes</font>

754
00:35:37,810 --> 00:35:45,220
that<font color="#E5E5E5"> start at position</font><font color="#CCCCCC"> 52</font><font color="#E5E5E5"> of the beacon</font>

755
00:35:42,030 --> 00:35:50,230
when we are jamming in<font color="#CCCCCC"> the 5 gigahertz</font>

756
00:35:45,220 --> 00:35:52,419
<font color="#E5E5E5">bands these beacons are sent faster</font><font color="#CCCCCC"> on</font>

757
00:35:50,230 --> 00:35:55,960
in<font color="#E5E5E5"> this case we start jamming bytes at</font>

758
00:35:52,420 --> 00:36:01,020
position 88 in general<font color="#E5E5E5"> that's</font>

759
00:35:55,960 --> 00:36:03,280
enough to jam medium to small packets

760
00:36:01,020 --> 00:36:06,520
unfortunately we cannot<font color="#E5E5E5"> Jam very small</font>

761
00:36:03,280 --> 00:36:09,130
packets<font color="#CCCCCC"> using this the second remark I</font>

762
00:36:06,520 --> 00:36:11,050
also want to make is that this selective

763
00:36:09,130 --> 00:36:11,680
jammer<font color="#E5E5E5"> will never be a hundred</font><font color="#CCCCCC"> percent</font>

764
00:36:11,050 --> 00:36:14,530
reliable

765
00:36:11,680 --> 00:36:16,930
the first<font color="#E5E5E5"> reason that</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not hundred</font>

766
00:36:14,530 --> 00:36:18,700
percent<font color="#CCCCCC"> reliable</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that sometimes it</font>

767
00:36:16,930 --> 00:36:20,950
just<font color="#E5E5E5"> won't even</font><font color="#CCCCCC"> notice that</font><font color="#E5E5E5"> a beacon is</font>

768
00:36:18,700 --> 00:36:22,868
being transmitted so sometimes there's

769
00:36:20,950 --> 00:36:25,330
background<font color="#E5E5E5"> noise</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it simply doesn't</font>

770
00:36:22,869 --> 00:36:30,460
detect<font color="#E5E5E5"> the beacon at all so it also it</font>

771
00:36:25,330 --> 00:36:32,080
<font color="#E5E5E5">won't even attempt to jam it and in my</font>

772
00:36:30,460 --> 00:36:33,910
<font color="#CCCCCC">opinion this is quite surprising that</font>

773
00:36:32,080 --> 00:36:37,270
<font color="#E5E5E5">this is possible using just a very</font>

774
00:36:33,910 --> 00:36:41,890
limited<font color="#E5E5E5"> API that we are able to pull off</font>

775
00:36:37,270 --> 00:36:44,589
all these attacks<font color="#E5E5E5"> so I can have a quick</font>

776
00:36:41,890 --> 00:36:50,379
demonstration video for this one as<font color="#E5E5E5"> well</font>

777
00:36:44,589 --> 00:36:52,270
<font color="#E5E5E5">so</font><font color="#CCCCCC"> as I mentioned three years ago I did</font>

778
00:36:50,380 --> 00:36:57,160
a live demo<font color="#CCCCCC"> of this which fortunately</font>

779
00:36:52,270 --> 00:36:58,869
words but redoing it here<font color="#E5E5E5"> would take a</font>

780
00:36:57,160 --> 00:37:01,240
bit too<font color="#E5E5E5"> much time to plug in all the</font>

781
00:36:58,869 --> 00:37:03,550
devices<font color="#CCCCCC"> and has the risk of the end the</font>

782
00:37:01,240 --> 00:37:07,000
demo failing<font color="#CCCCCC"> don't want</font><font color="#E5E5E5"> to risk at this</font>

783
00:37:03,550 --> 00:37:09,640
time so here<font color="#E5E5E5"> again setting up one Wi-Fi</font>

784
00:37:07,000 --> 00:37:12,520
device<font color="#CCCCCC"> in monitor mode</font><font color="#E5E5E5"> and you will see</font>

785
00:37:09,640 --> 00:37:16,750
<font color="#E5E5E5">that is properly receiving beacons of</font>

786
00:37:12,520 --> 00:37:19,089
the test<font color="#E5E5E5"> network we now also have</font><font color="#CCCCCC"> a</font>

787
00:37:16,750 --> 00:37:23,500
second Wi-Fi device which is our cheap

788
00:37:19,089 --> 00:37:26,619
Wi-Fi device which we will set in which

789
00:37:23,500 --> 00:37:29,260
will do the<font color="#CCCCCC"> selective jamming so you can</font>

790
00:37:26,619 --> 00:37:32,109
see the<font color="#E5E5E5"> command here we execute</font><font color="#CCCCCC"> that</font>

791
00:37:29,260 --> 00:37:34,210
command<font color="#E5E5E5"> and then you will see</font><font color="#CCCCCC"> an</font>

792
00:37:32,109 --> 00:37:38,640
Wireshark<font color="#CCCCCC"> we are indeed no longer</font>

793
00:37:34,210 --> 00:37:38,640
<font color="#E5E5E5">resending receiving any beacon frames</font>

794
00:37:38,820 --> 00:37:43,780
the reason we're not presenting beacon

795
00:37:41,530 --> 00:37:47,080
frames<font color="#E5E5E5"> is because</font><font color="#CCCCCC"> Linux is dropping</font>

796
00:37:43,780 --> 00:37:49,450
packets that have<font color="#CCCCCC"> a wrong</font><font color="#E5E5E5"> CRC if we now</font>

797
00:37:47,080 --> 00:37:51,790
instruct<font color="#E5E5E5"> Linux to also show us packets</font>

798
00:37:49,450 --> 00:37:53,799
that have<font color="#CCCCCC"> a bad crc using this</font><font color="#E5E5E5"> command</font>

799
00:37:51,790 --> 00:37:56,470
we<font color="#CCCCCC"> can see that yeah well we</font><font color="#E5E5E5"> are</font>

800
00:37:53,800 --> 00:37:58,390
actually receiving beacons<font color="#E5E5E5"> but because</font>

801
00:37:56,470 --> 00:38:00,669
they are<font color="#E5E5E5"> selectively jammed</font><font color="#CCCCCC"> they have a</font>

802
00:37:58,390 --> 00:38:02,560
bad<font color="#CCCCCC"> crc and that's why Linux will</font>

803
00:38:00,670 --> 00:38:05,200
<font color="#E5E5E5">immediately drop these packets</font><font color="#CCCCCC"> and not</font>

804
00:38:02,560 --> 00:38:07,750
process<font color="#E5E5E5"> them further so you can</font><font color="#CCCCCC"> see here</font>

805
00:38:05,200 --> 00:38:09,819
these packets indeed have<font color="#E5E5E5"> a incorrect</font>

806
00:38:07,750 --> 00:38:16,250
<font color="#E5E5E5">CRC</font>

807
00:38:09,820 --> 00:38:19,160
so let's stop the demo here so if you

808
00:38:16,250 --> 00:38:21,290
want to try<font color="#CCCCCC"> out this for yourself you</font>

809
00:38:19,160 --> 00:38:25,100
can<font color="#CCCCCC"> simply</font><font color="#E5E5E5"> go to the following URL and</font>

810
00:38:21,290 --> 00:38:29,060
we have the<font color="#CCCCCC"> codes</font><font color="#E5E5E5"> public there it's very</font>

811
00:38:25,100 --> 00:38:32,450
easy<font color="#E5E5E5"> to run this you simply need to</font>

812
00:38:29,060 --> 00:38:34,520
<font color="#E5E5E5">download this virtual</font><font color="#CCCCCC"> machine image</font><font color="#E5E5E5"> you</font>

813
00:38:32,450 --> 00:38:38,270
need to buy one<font color="#CCCCCC"> of these devices on from</font>

814
00:38:34,520 --> 00:38:39,890
that<font color="#E5E5E5"> point</font><font color="#CCCCCC"> is just plug-and-play I do</font>

815
00:38:38,270 --> 00:38:42,080
want to point out<font color="#E5E5E5"> that</font><font color="#CCCCCC"> our continuous</font>

816
00:38:39,890 --> 00:38:45,490
jammer is not released publicly<font color="#E5E5E5"> because</font>

817
00:38:42,080 --> 00:38:48,400
<font color="#E5E5E5">this really disrupts networks without</font>

818
00:38:45,490 --> 00:38:51,049
there being a very good<font color="#E5E5E5"> countermeasure</font>

819
00:38:48,400 --> 00:38:52,940
<font color="#CCCCCC">but if you are a researcher or if you</font>

820
00:38:51,050 --> 00:38:55,220
are testing the implications of a

821
00:38:52,940 --> 00:38:59,810
continuous jammer<font color="#E5E5E5"> you can always contact</font>

822
00:38:55,220 --> 00:39:02,270
<font color="#E5E5E5">us on we can give you the code so</font>

823
00:38:59,810 --> 00:39:05,630
compared to three years<font color="#CCCCCC"> ago there's also</font>

824
00:39:02,270 --> 00:39:07,640
very interesting on exciting updates on

825
00:39:05,630 --> 00:39:10,700
that<font color="#E5E5E5"> update comes from fellow</font>

826
00:39:07,640 --> 00:39:13,339
researchers<font color="#E5E5E5"> and they were able to</font>

827
00:39:10,700 --> 00:39:15,980
implement similar jamming techniques but

828
00:39:13,340 --> 00:39:18,440
in<font color="#E5E5E5"> this case using your mobile phone so</font>

829
00:39:15,980 --> 00:39:21,680
what they did<font color="#E5E5E5"> is</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> took</font><font color="#CCCCCC"> a nexus 5</font>

830
00:39:18,440 --> 00:39:24,350
<font color="#E5E5E5">they used what is called the next one</font>

831
00:39:21,680 --> 00:39:27,440
<font color="#E5E5E5">project which is a project that also</font>

832
00:39:24,350 --> 00:39:30,380
<font color="#E5E5E5">enables for example monitor mode on your</font>

833
00:39:27,440 --> 00:39:33,080
mobile phone<font color="#E5E5E5"> and they are able to change</font>

834
00:39:30,380 --> 00:39:36,020
<font color="#E5E5E5">the</font><font color="#CCCCCC"> firmware of the Wi-Fi chip</font><font color="#E5E5E5"> that is</font>

835
00:39:33,080 --> 00:39:38,000
running on<font color="#CCCCCC"> your phone on their able</font><font color="#E5E5E5"> to</font>

836
00:39:36,020 --> 00:39:40,009
implement the<font color="#E5E5E5"> same techniques meaning</font>

837
00:39:38,000 --> 00:39:42,410
you can also do<font color="#E5E5E5"> this constant</font><font color="#CCCCCC"> arms</font>

838
00:39:40,010 --> 00:39:44,690
reactive jamming purely<font color="#E5E5E5"> using your</font>

839
00:39:42,410 --> 00:39:51,080
<font color="#E5E5E5">mobile phone</font><font color="#CCCCCC"> so that's quite neat to do</font>

840
00:39:44,690 --> 00:39:53,540
as well<font color="#CCCCCC"> their code is public as well</font><font color="#E5E5E5"> so</font>

841
00:39:51,080 --> 00:39:56,240
if you want to<font color="#CCCCCC"> play around with it it's</font>

842
00:39:53,540 --> 00:40:01,340
very fun<font color="#E5E5E5"> to do of course in a lab</font>

843
00:39:56,240 --> 00:40:04,759
setting so that<font color="#CCCCCC"> covers</font><font color="#E5E5E5"> the physical</font>

844
00:40:01,340 --> 00:40:07,250
layer aspects of our attack

845
00:40:04,760 --> 00:40:10,460
the<font color="#CCCCCC"> interesting thing</font><font color="#E5E5E5"> here is</font><font color="#CCCCCC"> that our</font>

846
00:40:07,250 --> 00:40:14,030
<font color="#E5E5E5">the</font><font color="#CCCCCC"> text</font><font color="#E5E5E5"> that we discussed now they can</font>

847
00:40:10,460 --> 00:40:16,130
<font color="#CCCCCC">actually be</font><font color="#E5E5E5"> used to facilitate to make</font>

848
00:40:14,030 --> 00:40:19,310
it easier to<font color="#CCCCCC"> then</font><font color="#E5E5E5"> perform attacks</font>

849
00:40:16,130 --> 00:40:24,230
against the higher layers of the Wi-Fi

850
00:40:19,310 --> 00:40:27,950
protocol as<font color="#E5E5E5"> well so three</font><font color="#CCCCCC"> years ago I</font>

851
00:40:24,230 --> 00:40:31,750
discussed how<font color="#CCCCCC"> I use these attacks to</font>

852
00:40:27,950 --> 00:40:34,970
<font color="#E5E5E5">then carry out attack against WPA TCAP</font>

853
00:40:31,750 --> 00:40:37,340
<font color="#CCCCCC">however in the</font><font color="#E5E5E5"> meantime I found a little</font>

854
00:40:34,970 --> 00:40:40,339
bit<font color="#CCCCCC"> of a battle</font><font color="#E5E5E5"> attack we can also use</font>

855
00:40:37,340 --> 00:40:44,720
this to break wpa2<font color="#E5E5E5"> or at least to</font>

856
00:40:40,340 --> 00:40:45,590
facilitate attacks against wpa2<font color="#CCCCCC"> why is</font>

857
00:40:44,720 --> 00:40:48,890
that the<font color="#CCCCCC"> case</font>

858
00:40:45,590 --> 00:40:51,500
well the key reinstallation attack<font color="#E5E5E5"> so</font>

859
00:40:48,890 --> 00:40:55,400
the crack attack<font color="#E5E5E5"> against wpa2 in order</font>

860
00:40:51,500 --> 00:40:57,950
to<font color="#E5E5E5"> perform this attack the adversary</font>

861
00:40:55,400 --> 00:41:01,070
<font color="#E5E5E5">needs to be able to block on the delay</font>

862
00:40:57,950 --> 00:41:05,509
certain messages<font color="#E5E5E5"> that are exchanged in</font>

863
00:41:01,070 --> 00:41:07,040
the<font color="#E5E5E5"> handshake</font><font color="#CCCCCC"> and well blocking certain</font>

864
00:41:05,510 --> 00:41:09,670
packets that's exactly what<font color="#CCCCCC"> our</font>

865
00:41:07,040 --> 00:41:11,900
<font color="#E5E5E5">selective jammer is capable</font><font color="#CCCCCC"> of doing now</font>

866
00:41:09,670 --> 00:41:13,370
<font color="#CCCCCC">I did mention that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know this</font>

867
00:41:11,900 --> 00:41:16,280
<font color="#E5E5E5">selective jammer is not a</font><font color="#CCCCCC"> hundred</font>

868
00:41:13,370 --> 00:41:18,140
<font color="#CCCCCC">percent reliable</font><font color="#E5E5E5"> so there's an even</font>

869
00:41:16,280 --> 00:41:20,150
<font color="#E5E5E5">better approach here and that's that we</font>

870
00:41:18,140 --> 00:41:21,470
can get a man<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> middle position</font><font color="#CCCCCC"> the</font>

871
00:41:20,150 --> 00:41:25,130
<font color="#E5E5E5">so-called channel based man in the</font>

872
00:41:21,470 --> 00:41:26,899
middle<font color="#CCCCCC"> position and again our physical</font>

873
00:41:25,130 --> 00:41:29,990
layer attacks here can help<font color="#E5E5E5"> us to obtain</font>

874
00:41:26,900 --> 00:41:32,420
this channel based man in the middle

875
00:41:29,990 --> 00:41:34,430
<font color="#E5E5E5">position</font><font color="#CCCCCC"> so I'm not going</font><font color="#E5E5E5"> to discuss</font>

876
00:41:32,420 --> 00:41:38,930
<font color="#E5E5E5">this in a bit</font><font color="#CCCCCC"> more detail about how</font><font color="#E5E5E5"> this</font>

877
00:41:34,430 --> 00:41:41,330
attack works against wpa2 so first I

878
00:41:38,930 --> 00:41:45,859
<font color="#CCCCCC">need to give a very quick background</font>

879
00:41:41,330 --> 00:41:48,380
<font color="#E5E5E5">here so let's say that we have a wpa2</font>

880
00:41:45,860 --> 00:41:51,230
<font color="#CCCCCC">network it can be</font><font color="#E5E5E5"> just your home network</font>

881
00:41:48,380 --> 00:41:53,420
<font color="#E5E5E5">or an enterprise</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> where you need</font>

882
00:41:51,230 --> 00:41:57,470
to<font color="#E5E5E5"> login using a username on a password</font>

883
00:41:53,420 --> 00:41:59,900
in<font color="#CCCCCC"> both cases this protected Wi-Fi</font>

884
00:41:57,470 --> 00:42:02,870
network<font color="#E5E5E5"> will use what is called the</font>

885
00:41:59,900 --> 00:42:05,840
<font color="#E5E5E5">four-way handshake to securely connect</font>

886
00:42:02,870 --> 00:42:08,180
to this network<font color="#E5E5E5"> and what is the 4 Way</font>

887
00:42:05,840 --> 00:42:10,370
handshake do well<font color="#E5E5E5"> it</font><font color="#CCCCCC"> provides two</font>

888
00:42:08,180 --> 00:42:13,310
important properties<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> is that</font>

889
00:42:10,370 --> 00:42:16,250
it will provide<font color="#CCCCCC"> mutual authentication</font><font color="#E5E5E5"> so</font>

890
00:42:13,310 --> 00:42:16,910
you as a client<font color="#CCCCCC"> are verifying that</font><font color="#E5E5E5"> you</font>

891
00:42:16,250 --> 00:42:18,740
are really

892
00:42:16,910 --> 00:42:20,990
connecting to<font color="#E5E5E5"> the access</font><font color="#CCCCCC"> points that</font><font color="#E5E5E5"> you</font>

893
00:42:18,740 --> 00:42:23,089
want to on the access point is we're

894
00:42:20,990 --> 00:42:25,700
also verifying that you the client

895
00:42:23,090 --> 00:42:28,970
possesses the correct credentials to

896
00:42:25,700 --> 00:42:30,830
connect to the network<font color="#E5E5E5"> now at the same</font>

897
00:42:28,970 --> 00:42:34,459
<font color="#E5E5E5">time</font><font color="#CCCCCC"> this four-way handshake also</font>

898
00:42:30,830 --> 00:42:37,970
negotiates<font color="#E5E5E5"> a fresh session key which is</font>

899
00:42:34,460 --> 00:42:41,240
called the<font color="#CCCCCC"> BTK</font><font color="#E5E5E5"> this session key will be</font>

900
00:42:37,970 --> 00:42:45,470
<font color="#E5E5E5">used to encrypt data frames</font><font color="#CCCCCC"> after the 4</font>

901
00:42:41,240 --> 00:42:47,600
Way handshake has completed so I will

902
00:42:45,470 --> 00:42:50,660
now<font color="#E5E5E5"> explain how this handshake works</font>

903
00:42:47,600 --> 00:42:52,279
<font color="#CCCCCC">onto how we are able to</font><font color="#E5E5E5"> attack it so</font>

904
00:42:50,660 --> 00:42:53,330
let's say we have the following

905
00:42:52,280 --> 00:42:56,210
<font color="#CCCCCC">situation</font>

906
00:42:53,330 --> 00:42:58,370
we have our client here on the<font color="#CCCCCC"> left</font><font color="#E5E5E5"> that</font>

907
00:42:56,210 --> 00:43:01,460
wants to connect to the network<font color="#CCCCCC"> on the</font>

908
00:42:58,370 --> 00:43:06,109
right<font color="#E5E5E5"> and we also assume that an</font>

909
00:43:01,460 --> 00:43:08,120
adversary is present as well and the

910
00:43:06,110 --> 00:43:10,190
<font color="#E5E5E5">first thing that this adversary will do</font>

911
00:43:08,120 --> 00:43:12,490
is it will<font color="#CCCCCC"> establish this so-called</font>

912
00:43:10,190 --> 00:43:15,620
channel based<font color="#E5E5E5"> man in the middle</font><font color="#CCCCCC"> position</font>

913
00:43:12,490 --> 00:43:18,259
now<font color="#E5E5E5"> what do I</font><font color="#CCCCCC"> mean with</font><font color="#E5E5E5"> that term what I</font>

914
00:43:15,620 --> 00:43:20,480
mean with<font color="#CCCCCC"> that is that let's say the</font>

915
00:43:18,260 --> 00:43:24,530
<font color="#E5E5E5">original network is operating on channel</font>

916
00:43:20,480 --> 00:43:26,750
6 then the adversary<font color="#E5E5E5"> will clone this</font>

917
00:43:24,530 --> 00:43:30,650
<font color="#E5E5E5">network on a different channel it will</font>

918
00:43:26,750 --> 00:43:33,530
<font color="#E5E5E5">clone the network on channel 1 on the</font>

919
00:43:30,650 --> 00:43:35,990
adversary<font color="#E5E5E5"> is essentially using two Wi-Fi</font>

920
00:43:33,530 --> 00:43:37,580
devices to do this<font color="#E5E5E5"> one Wi-Fi device is</font>

921
00:43:35,990 --> 00:43:39,350
operating on channel 6

922
00:43:37,580 --> 00:43:42,020
<font color="#CCCCCC">it receives all the frames from the</font>

923
00:43:39,350 --> 00:43:44,779
access<font color="#CCCCCC"> point on then</font><font color="#E5E5E5"> there are forwarded</font>

924
00:43:42,020 --> 00:43:47,450
using the second Wi-Fi device on<font color="#E5E5E5"> this</font>

925
00:43:44,780 --> 00:43:50,030
different<font color="#CCCCCC"> channel but now the</font><font color="#E5E5E5"> question</font>

926
00:43:47,450 --> 00:43:53,240
is how can<font color="#CCCCCC"> we force the victim</font><font color="#E5E5E5"> into</font>

927
00:43:50,030 --> 00:43:55,100
<font color="#E5E5E5">using channel 1 so maybe you already</font>

928
00:43:53,240 --> 00:43:59,209
<font color="#E5E5E5">have</font><font color="#CCCCCC"> an idea on how to</font><font color="#E5E5E5"> force the victim</font>

929
00:43:55,100 --> 00:44:01,520
<font color="#CCCCCC">on this</font><font color="#E5E5E5"> channel because our solution is</font>

930
00:43:59,210 --> 00:44:04,400
<font color="#CCCCCC">actually quite</font><font color="#E5E5E5"> simple we can simply use</font>

931
00:44:01,520 --> 00:44:07,130
our continuous jammer<font color="#E5E5E5"> to jam channel 1</font>

932
00:44:04,400 --> 00:44:08,960
<font color="#E5E5E5">and as a result the victim will only see</font>

933
00:44:07,130 --> 00:44:11,750
the<font color="#E5E5E5"> access point</font><font color="#CCCCCC"> that is present on</font>

934
00:44:08,960 --> 00:44:13,400
channel 1 and<font color="#CCCCCC"> that will</font><font color="#E5E5E5"> cause the victim</font>

935
00:44:11,750 --> 00:44:17,390
to try to connect<font color="#E5E5E5"> to this access</font><font color="#CCCCCC"> point</font>

936
00:44:13,400 --> 00:44:20,120
<font color="#E5E5E5">on channel 1 and</font><font color="#CCCCCC"> once we notice that the</font>

937
00:44:17,390 --> 00:44:21,950
victim is connecting on channel 1 then

938
00:44:20,120 --> 00:44:26,359
we<font color="#E5E5E5"> will stop our continuous jammer on</font>

939
00:44:21,950 --> 00:44:29,560
simply forward<font color="#E5E5E5"> all frames over</font><font color="#CCCCCC"> channel 6</font>

940
00:44:26,360 --> 00:44:32,570
towards the access point

941
00:44:29,560 --> 00:44:34,730
so let's say in particular<font color="#CCCCCC"> now that our</font>

942
00:44:32,570 --> 00:44:39,530
<font color="#CCCCCC">client</font><font color="#E5E5E5"> will indeed try to authenticate</font>

943
00:44:34,730 --> 00:44:42,230
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the network if you're connecting</font><font color="#CCCCCC"> to</font>

944
00:44:39,530 --> 00:44:44,510
an<font color="#CCCCCC"> enterprise network</font><font color="#E5E5E5"> for example</font><font color="#CCCCCC"> if you</font>

945
00:44:42,230 --> 00:44:46,460
have to<font color="#CCCCCC"> login</font><font color="#E5E5E5"> using a password</font><font color="#CCCCCC"> on the</font>

946
00:44:44,510 --> 00:44:49,270
<font color="#E5E5E5">username for example in the</font><font color="#CCCCCC"> network so</font>

947
00:44:46,460 --> 00:44:52,370
<font color="#CCCCCC">such interim or you have to login</font>

948
00:44:49,270 --> 00:44:54,410
sorry using certificates then there's

949
00:44:52,370 --> 00:44:56,470
first<font color="#E5E5E5"> this arrow to that</font><font color="#CCCCCC"> One X</font>

950
00:44:54,410 --> 00:44:58,490
authentication handshake

951
00:44:56,470 --> 00:45:01,160
fortunately the details of the<font color="#E5E5E5"> sign</font>

952
00:44:58,490 --> 00:45:03,740
<font color="#CCCCCC">check</font><font color="#E5E5E5"> are not important</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> us</font><font color="#CCCCCC"> the only</font>

953
00:45:01,160 --> 00:45:05,540
<font color="#E5E5E5">thing that's important</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> us</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> at</font>

954
00:45:03,740 --> 00:45:07,910
this<font color="#E5E5E5"> point after executing this</font>

955
00:45:05,540 --> 00:45:10,040
<font color="#E5E5E5">handshake there is some shared secret</font>

956
00:45:07,910 --> 00:45:13,060
<font color="#CCCCCC">between the clients on the access point</font>

957
00:45:10,040 --> 00:45:16,009
<font color="#CCCCCC">or in case you have a whole network</font><font color="#E5E5E5"> then</font>

958
00:45:13,060 --> 00:45:18,850
this shared secret between<font color="#E5E5E5"> both devices</font>

959
00:45:16,010 --> 00:45:21,500
<font color="#E5E5E5">is simply the passport of</font><font color="#CCCCCC"> the network</font>

960
00:45:18,850 --> 00:45:25,430
<font color="#E5E5E5">once we have the shared secret we can</font>

961
00:45:21,500 --> 00:45:27,890
execute the four-way handshake<font color="#CCCCCC"> under</font><font color="#E5E5E5"> the</font>

962
00:45:25,430 --> 00:45:31,370
<font color="#E5E5E5">name</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> sign</font><font color="#E5E5E5"> shake implies the 4 Way</font>

963
00:45:27,890 --> 00:45:33,589
handshake consists of<font color="#CCCCCC"> 4</font><font color="#E5E5E5"> messages the</font>

964
00:45:31,370 --> 00:45:38,960
first<font color="#CCCCCC"> two messages</font><font color="#E5E5E5"> are used to exchange</font>

965
00:45:33,590 --> 00:45:40,580
<font color="#E5E5E5">a random</font><font color="#CCCCCC"> number</font><font color="#E5E5E5"> between both devices so</font>

966
00:45:38,960 --> 00:45:44,030
here we can see the access point is

967
00:45:40,580 --> 00:45:46,190
first sending a random number called the

968
00:45:44,030 --> 00:45:48,800
<font color="#E5E5E5">a nonce which stands for access point</font>

969
00:45:46,190 --> 00:45:51,050
nonce<font color="#E5E5E5"> it sends it to</font><font color="#CCCCCC"> the clients</font><font color="#E5E5E5"> and in</font>

970
00:45:48,800 --> 00:45:52,880
turn the client replies<font color="#CCCCCC"> using its own</font>

971
00:45:51,050 --> 00:45:55,640
random<font color="#E5E5E5"> number called the essence and</font>

972
00:45:52,880 --> 00:45:57,740
<font color="#E5E5E5">that stands for supplicant</font><font color="#CCCCCC"> month</font><font color="#E5E5E5"> we're</font>

973
00:45:55,640 --> 00:46:02,750
supplying it is just a synonym<font color="#CCCCCC"> for</font>

974
00:45:57,740 --> 00:46:06,470
client<font color="#CCCCCC"> ant once both devices</font><font color="#E5E5E5"> have</font>

975
00:46:02,750 --> 00:46:08,330
received each other's random number they

976
00:46:06,470 --> 00:46:10,549
can combine<font color="#E5E5E5"> these two random</font><font color="#CCCCCC"> numbers</font>

977
00:46:08,330 --> 00:46:13,490
called the<font color="#CCCCCC"> anals on TS</font><font color="#E5E5E5"> noms together</font>

978
00:46:10,550 --> 00:46:16,190
with the shared secret to the<font color="#E5E5E5"> arrive</font>

979
00:46:13,490 --> 00:46:18,950
this fresh session key called the<font color="#CCCCCC"> ptk</font>

980
00:46:16,190 --> 00:46:20,540
<font color="#E5E5E5">and remember this</font><font color="#CCCCCC"> BTK</font><font color="#E5E5E5"> the session key</font>

981
00:46:18,950 --> 00:46:25,509
will<font color="#CCCCCC"> be used to encrypt data frames</font>

982
00:46:20,540 --> 00:46:25,509
<font color="#E5E5E5">after</font><font color="#CCCCCC"> his handshake has been completed</font>

983
00:46:25,810 --> 00:46:31,040
<font color="#E5E5E5">so after this there are two more frames</font>

984
00:46:28,850 --> 00:46:33,380
that are<font color="#E5E5E5"> exchanged in this handshake and</font>

985
00:46:31,040 --> 00:46:36,080
<font color="#E5E5E5">a bit simplified these frames just</font>

986
00:46:33,380 --> 00:46:38,259
confirm that<font color="#E5E5E5"> both parties negotiated the</font>

987
00:46:36,080 --> 00:46:42,469
same session key

988
00:46:38,259 --> 00:46:46,939
now what we do as an attacker here in

989
00:46:42,469 --> 00:46:49,489
order<font color="#CCCCCC"> to attack wpa2</font><font color="#E5E5E5"> is we're not</font><font color="#CCCCCC"> gonna</font>

990
00:46:46,939 --> 00:46:53,808
forward<font color="#CCCCCC"> this last message</font><font color="#E5E5E5"> to the access</font>

991
00:46:49,489 --> 00:46:55,309
<font color="#E5E5E5">point</font><font color="#CCCCCC"> so we're not</font><font color="#E5E5E5"> gonna forward it what</font>

992
00:46:53,809 --> 00:46:58,449
<font color="#E5E5E5">essentially means we're blocking this</font>

993
00:46:55,309 --> 00:47:00,499
frame from<font color="#CCCCCC"> arriving at the access point</font>

994
00:46:58,449 --> 00:47:03,469
now we<font color="#E5E5E5"> got in a very interesting</font>

995
00:47:00,499 --> 00:47:04,939
<font color="#E5E5E5">situation</font><font color="#CCCCCC"> because the client believes</font>

996
00:47:03,469 --> 00:47:07,099
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the 4 Way handshake has now</font>

997
00:47:04,939 --> 00:47:09,078
completed<font color="#E5E5E5"> because it receives all the</font>

998
00:47:07,099 --> 00:47:11,509
<font color="#E5E5E5">frames of the handshake another so</font>

999
00:47:09,079 --> 00:47:13,729
replied using all the frames it has<font color="#CCCCCC"> - as</font>

1000
00:47:11,509 --> 00:47:15,559
well in particular<font color="#CCCCCC"> it replied using</font>

1001
00:47:13,729 --> 00:47:17,678
message<font color="#E5E5E5"> 4 so it thinks that the</font>

1002
00:47:15,559 --> 00:47:20,749
handshake now has successfully<font color="#E5E5E5"> completed</font>

1003
00:47:17,679 --> 00:47:24,349
meaning it will now install<font color="#E5E5E5"> the session</font>

1004
00:47:20,749 --> 00:47:28,238
key for use meaning<font color="#E5E5E5"> after</font><font color="#CCCCCC"> it's it</font><font color="#E5E5E5"> can it</font>

1005
00:47:24,349 --> 00:47:31,429
<font color="#CCCCCC">will start sending encrypted data frames</font>

1006
00:47:28,239 --> 00:47:34,039
<font color="#CCCCCC">an important observation here is that</font>

1007
00:47:31,429 --> 00:47:36,589
when it installs the session key<font color="#E5E5E5"> it sets</font>

1008
00:47:34,039 --> 00:47:43,159
<font color="#CCCCCC">this special variable called</font><font color="#E5E5E5"> the nonce</font>

1009
00:47:36,589 --> 00:47:45,109
<font color="#E5E5E5">to</font><font color="#CCCCCC"> zero now I will come back to</font><font color="#E5E5E5"> what</font>

1010
00:47:43,159 --> 00:47:47,179
<font color="#E5E5E5">this nonce is in a bit this nonce is</font>

1011
00:47:45,109 --> 00:47:49,909
essentially just a packet number that is

1012
00:47:47,179 --> 00:47:51,799
<font color="#E5E5E5">incremented by one for for every packet</font>

1013
00:47:49,909 --> 00:47:53,659
that<font color="#CCCCCC"> you are transmitted so the first</font>

1014
00:47:51,799 --> 00:47:56,389
data packet you want to transmit<font color="#E5E5E5"> will</font>

1015
00:47:53,659 --> 00:47:58,819
use a nonce value of<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> the second</font><font color="#CCCCCC"> nonce</font>

1016
00:47:56,389 --> 00:48:04,399
value of 2 and<font color="#E5E5E5"> so</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> so it's basically</font>

1017
00:47:58,819 --> 00:48:05,538
just<font color="#E5E5E5"> an incremental counter but I want</font>

1018
00:48:04,399 --> 00:48:07,939
to come back<font color="#E5E5E5"> here to this special</font>

1019
00:48:05,539 --> 00:48:10,369
<font color="#CCCCCC">situation where the access point</font><font color="#E5E5E5"> hasn't</font>

1020
00:48:07,939 --> 00:48:11,779
received message for yet because

1021
00:48:10,369 --> 00:48:14,479
<font color="#CCCCCC">according to the access</font><font color="#E5E5E5"> point</font>

1022
00:48:11,779 --> 00:48:16,609
the handshake hasn't completed yet and

1023
00:48:14,479 --> 00:48:19,038
in<font color="#E5E5E5"> particular the access point will</font>

1024
00:48:16,609 --> 00:48:21,259
think<font color="#E5E5E5"> okay well maybe message</font><font color="#CCCCCC"> three got</font>

1025
00:48:19,039 --> 00:48:23,630
lost here<font color="#E5E5E5"> and that's why I didn't get a</font>

1026
00:48:21,259 --> 00:48:26,869
reply<font color="#CCCCCC"> so the access point will try to</font>

1027
00:48:23,630 --> 00:48:31,219
recover from<font color="#E5E5E5"> that and what it will do is</font>

1028
00:48:26,869 --> 00:48:33,199
it<font color="#CCCCCC"> will retransmit</font><font color="#E5E5E5"> message</font><font color="#CCCCCC"> 3 and in</font>

1029
00:48:31,219 --> 00:48:35,569
<font color="#E5E5E5">response the client will accept this</font>

1030
00:48:33,199 --> 00:48:38,839
retransmitted message and it will<font color="#E5E5E5"> reply</font>

1031
00:48:35,569 --> 00:48:40,459
using<font color="#CCCCCC"> a new message for now the Wi-Fi</font>

1032
00:48:38,839 --> 00:48:42,828
standard says that this<font color="#CCCCCC"> message for</font>

1033
00:48:40,459 --> 00:48:46,729
should normally be<font color="#CCCCCC"> sent unencrypted</font><font color="#E5E5E5"> on</font>

1034
00:48:42,829 --> 00:48:48,799
in plain text<font color="#CCCCCC"> but we saw</font><font color="#E5E5E5"> that many</font>

1035
00:48:46,729 --> 00:48:51,379
implementations<font color="#CCCCCC"> sent this frame in an</font>

1036
00:48:48,799 --> 00:48:52,730
encrypted fashion of the reason why is

1037
00:48:51,380 --> 00:48:58,640
<font color="#E5E5E5">because you know the session key has</font>

1038
00:48:52,730 --> 00:49:01,130
already been installed<font color="#E5E5E5"> now understanding</font>

1039
00:48:58,640 --> 00:49:01,940
<font color="#E5E5E5">why this message is encrypted is not</font>

1040
00:49:01,130 --> 00:49:04,789
that important

1041
00:49:01,940 --> 00:49:08,779
<font color="#E5E5E5">just</font><font color="#CCCCCC"> accept</font><font color="#E5E5E5"> for now that this message is</font>

1042
00:49:04,789 --> 00:49:10,730
indeed encrypted what's<font color="#E5E5E5"> more important</font>

1043
00:49:08,779 --> 00:49:13,460
here is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> after sending this new</font>

1044
00:49:10,730 --> 00:49:15,730
reply to the access<font color="#CCCCCC"> point the client</font>

1045
00:49:13,460 --> 00:49:17,059
will again install the session key

1046
00:49:15,730 --> 00:49:19,549
<font color="#E5E5E5">meaning what</font>

1047
00:49:17,059 --> 00:49:22,450
it will again reset this nonce<font color="#E5E5E5"> to</font><font color="#CCCCCC"> zero</font>

1048
00:49:19,549 --> 00:49:27,470
and that's<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is what will allow us to</font>

1049
00:49:22,450 --> 00:49:31,098
decrypt data so in<font color="#CCCCCC"> order to understand</font>

1050
00:49:27,470 --> 00:49:34,368
<font color="#E5E5E5">how this nonce</font><font color="#CCCCCC"> that is now being again</font>

1051
00:49:31,099 --> 00:49:37,880
<font color="#E5E5E5">reset to zero enable us to decrypt data</font>

1052
00:49:34,369 --> 00:49:39,829
<font color="#CCCCCC">I need to quickly explain you know how</font>

1053
00:49:37,880 --> 00:49:43,400
encryption actually is performed in a

1054
00:49:39,829 --> 00:49:47,569
Wi-Fi network<font color="#CCCCCC"> so let</font><font color="#E5E5E5"> me quickly explain</font>

1055
00:49:43,400 --> 00:49:53,509
that so let's say we want<font color="#CCCCCC"> to send the</font>

1056
00:49:47,569 --> 00:49:55,400
<font color="#E5E5E5">plaintext data here and no matter what's</font>

1057
00:49:53,509 --> 00:49:56,720
your<font color="#E5E5E5"> specific settings of your Wi-Fi</font>

1058
00:49:55,400 --> 00:49:59,509
network are you know whether you're

1059
00:49:56,720 --> 00:50:05,000
using the<font color="#CCCCCC"> old</font><font color="#E5E5E5"> WPA T cap whether you're</font>

1060
00:49:59,509 --> 00:50:07,309
<font color="#E5E5E5">using wpa2 with AES they all work at at</font>

1061
00:50:05,000 --> 00:50:09,710
a high<font color="#CCCCCC"> level at the same way on what</font>

1062
00:50:07,309 --> 00:50:12,470
happens is that<font color="#E5E5E5"> they take this session</font>

1063
00:50:09,710 --> 00:50:14,089
<font color="#E5E5E5">key this secret session key</font><font color="#CCCCCC"> and they</font>

1064
00:50:12,470 --> 00:50:17,149
combine it with the nonce<font color="#E5E5E5"> with this</font>

1065
00:50:14,089 --> 00:50:20,599
packet number<font color="#E5E5E5"> and they use this to</font>

1066
00:50:17,150 --> 00:50:22,279
derive a unique<font color="#E5E5E5"> per packet key so as I</font>

1067
00:50:20,599 --> 00:50:24,319
mentioned<font color="#E5E5E5"> this packet</font><font color="#CCCCCC"> number is always</font>

1068
00:50:22,279 --> 00:50:27,319
incremented by one for every packet<font color="#E5E5E5"> that</font>

1069
00:50:24,319 --> 00:50:29,029
is transmitted and by combining<font color="#CCCCCC"> it</font><font color="#E5E5E5"> with</font>

1070
00:50:27,319 --> 00:50:31,579
<font color="#CCCCCC">a</font><font color="#E5E5E5"> session key we always have a unique</font>

1071
00:50:29,029 --> 00:50:34,670
per packet key<font color="#CCCCCC"> on this unique per packet</font>

1072
00:50:31,579 --> 00:50:39,619
key is then used to<font color="#E5E5E5"> derive some fresh</font>

1073
00:50:34,670 --> 00:50:41,420
key stream from<font color="#E5E5E5"> the packet key then</font>

1074
00:50:39,619 --> 00:50:43,400
encryption is quite straightforward<font color="#CCCCCC"> we</font>

1075
00:50:41,420 --> 00:50:45,559
simply take the<font color="#E5E5E5"> key stream week sort</font>

1076
00:50:43,400 --> 00:50:47,720
with<font color="#E5E5E5"> the plaintext data on there you go</font>

1077
00:50:45,559 --> 00:50:50,990
we get an encrypted<font color="#E5E5E5"> version of the</font>

1078
00:50:47,720 --> 00:50:52,910
packet<font color="#E5E5E5"> now of</font><font color="#CCCCCC"> course a plaintext header</font>

1079
00:50:50,990 --> 00:50:57,229
is added<font color="#E5E5E5"> added as well so the receiver</font>

1080
00:50:52,910 --> 00:51:00,348
knows what to do with<font color="#E5E5E5"> this packet but</font>

1081
00:50:57,230 --> 00:51:02,900
important observation on<font color="#CCCCCC"> the important</font>

1082
00:51:00,349 --> 00:51:04,240
assumption of this encryption model is

1083
00:51:02,900 --> 00:51:07,000
<font color="#E5E5E5">that</font>

1084
00:51:04,240 --> 00:51:10,709
<font color="#E5E5E5">a specific</font><font color="#CCCCCC"> nonce value should never be</font>

1085
00:51:07,000 --> 00:51:15,100
repeating now why is that the<font color="#CCCCCC"> case</font>

1086
00:51:10,710 --> 00:51:18,130
well if<font color="#E5E5E5"> nonce value ever repeats it</font>

1087
00:51:15,100 --> 00:51:20,380
means that we will generate<font color="#E5E5E5"> the same per</font>

1088
00:51:18,130 --> 00:51:23,020
packet key to encrypt<font color="#E5E5E5"> two or more</font>

1089
00:51:20,380 --> 00:51:25,030
packets<font color="#E5E5E5"> and if we use the same per</font>

1090
00:51:23,020 --> 00:51:27,759
packet key we will also use the<font color="#CCCCCC"> same key</font>

1091
00:51:25,030 --> 00:51:31,090
stream and<font color="#E5E5E5"> that means we have key stream</font>

1092
00:51:27,760 --> 00:51:34,390
<font color="#E5E5E5">we use an attacker and generally can</font>

1093
00:51:31,090 --> 00:51:36,610
<font color="#E5E5E5">always exploit key stream</font><font color="#CCCCCC"> reuse so for</font>

1094
00:51:34,390 --> 00:51:38,740
<font color="#CCCCCC">example let's say the first time</font><font color="#E5E5E5"> that</font>

1095
00:51:36,610 --> 00:51:40,930
the certain key stream is used we can

1096
00:51:38,740 --> 00:51:43,149
predict<font color="#E5E5E5"> the data that the client is</font>

1097
00:51:40,930 --> 00:51:45,100
<font color="#E5E5E5">sending then what we can do is we can</font>

1098
00:51:43,150 --> 00:51:47,680
simply take<font color="#E5E5E5"> the encrypted data that we</font>

1099
00:51:45,100 --> 00:51:49,990
as an attacker captured we can<font color="#E5E5E5"> show</font><font color="#CCCCCC"> that</font>

1100
00:51:47,680 --> 00:51:53,770
with<font color="#E5E5E5"> the plaintext data and the result</font>

1101
00:51:49,990 --> 00:51:55,779
will be<font color="#E5E5E5"> the key stream so to put</font><font color="#CCCCCC"> it in a</font>

1102
00:51:53,770 --> 00:51:57,400
different<font color="#E5E5E5"> way if we can predict certain</font>

1103
00:51:55,780 --> 00:52:00,670
frames that<font color="#CCCCCC"> are sent over the</font><font color="#E5E5E5"> Wi-Fi</font>

1104
00:51:57,400 --> 00:52:01,960
network<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> derive key stream the key</font>

1105
00:52:00,670 --> 00:52:04,570
<font color="#E5E5E5">stream that was used to encrypt that</font>

1106
00:52:01,960 --> 00:52:06,730
packet<font color="#E5E5E5"> one of them that key stream is</font>

1107
00:52:04,570 --> 00:52:07,990
ever reused<font color="#CCCCCC"> well we know the key stream</font>

1108
00:52:06,730 --> 00:52:11,440
and then we can use<font color="#E5E5E5"> it to decrypt</font>

1109
00:52:07,990 --> 00:52:15,609
another packet<font color="#E5E5E5"> so let's go back</font><font color="#CCCCCC"> to our</font>

1110
00:52:11,440 --> 00:52:17,470
<font color="#E5E5E5">attack here so to quickly recap</font><font color="#CCCCCC"> this was</font>

1111
00:52:15,610 --> 00:52:19,780
the message<font color="#CCCCCC"> tree that was retransmitted</font>

1112
00:52:17,470 --> 00:52:22,870
by the access point<font color="#CCCCCC"> it caused an</font>

1113
00:52:19,780 --> 00:52:24,790
encrypted reply of message for the

1114
00:52:22,870 --> 00:52:28,060
victim then<font color="#E5E5E5"> reinstalled the session key</font>

1115
00:52:24,790 --> 00:52:30,370
<font color="#CCCCCC">and reset this counter to</font><font color="#E5E5E5"> zero meaning</font>

1116
00:52:28,060 --> 00:52:32,980
<font color="#E5E5E5">here this data packet again uses the</font>

1117
00:52:30,370 --> 00:52:36,339
same nonce value of one<font color="#E5E5E5"> so both these</font>

1118
00:52:32,980 --> 00:52:39,430
frames<font color="#E5E5E5"> use the same nonce value meaning</font>

1119
00:52:36,340 --> 00:52:41,980
<font color="#E5E5E5">they use the same key stream so the</font>

1120
00:52:39,430 --> 00:52:43,899
question now<font color="#CCCCCC"> is</font><font color="#E5E5E5"> okay how can we decrypt</font>

1121
00:52:41,980 --> 00:52:46,330
this data packet we assume that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't</font>

1122
00:52:43,900 --> 00:52:47,620
know the content<font color="#CCCCCC"> of this data packet</font><font color="#E5E5E5"> now</font>

1123
00:52:46,330 --> 00:52:49,750
if you look carefully at this diagram

1124
00:52:47,620 --> 00:52:53,049
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> enough information here to be</font>

1125
00:52:49,750 --> 00:52:57,400
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> carry out this attack</font><font color="#CCCCCC"> in</font>

1126
00:52:53,050 --> 00:53:00,340
<font color="#E5E5E5">particular as I mentioned these use we</font>

1127
00:52:57,400 --> 00:53:02,560
<font color="#E5E5E5">have</font><font color="#CCCCCC"> nonce</font><font color="#E5E5E5"> we use but what we see now</font><font color="#CCCCCC"> is</font>

1128
00:53:00,340 --> 00:53:04,180
that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> plain text version</font><font color="#CCCCCC"> of the</font>

1129
00:53:02,560 --> 00:53:06,009
packet here<font color="#E5E5E5"> and we have the</font>

1130
00:53:04,180 --> 00:53:08,379
retransmitted version of the packet here

1131
00:53:06,010 --> 00:53:11,200
as well there<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a minor difference</font>

1132
00:53:08,380 --> 00:53:13,690
between these frames<font color="#E5E5E5"> but generally most</font>

1133
00:53:11,200 --> 00:53:15,520
of<font color="#E5E5E5"> the content is the same so if we</font><font color="#CCCCCC"> call</font>

1134
00:53:13,690 --> 00:53:17,100
these<font color="#E5E5E5"> two frames we get the key stream</font>

1135
00:53:15,520 --> 00:53:20,220
corresponding to this non-spell

1136
00:53:17,100 --> 00:53:22,440
<font color="#E5E5E5">you of won and we can then use</font><font color="#CCCCCC"> this key</font>

1137
00:53:20,220 --> 00:53:25,020
<font color="#E5E5E5">scream</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> sort this data packets on</font>

1138
00:53:22,440 --> 00:53:26,970
there you go<font color="#E5E5E5"> we can decrypt this packet</font>

1139
00:53:25,020 --> 00:53:34,770
<font color="#E5E5E5">meaning we now have effectively broken</font>

1140
00:53:26,970 --> 00:53:35,939
<font color="#E5E5E5">wpa2 so that actually already concludes</font>

1141
00:53:34,770 --> 00:53:39,770
my talk

1142
00:53:35,940 --> 00:53:42,660
<font color="#E5E5E5">so the takeaway messages here are that</font>

1143
00:53:39,770 --> 00:53:44,370
jamming is cheaper<font color="#E5E5E5"> than expected we</font>

1144
00:53:42,660 --> 00:53:46,980
don't need this expensive equipment of

1145
00:53:44,370 --> 00:53:49,560
up<font color="#CCCCCC"> to four thousand dollars</font>

1146
00:53:46,980 --> 00:53:53,730
sometimes a cheap<font color="#CCCCCC"> twenty or ten</font><font color="#E5E5E5"> dollar</font>

1147
00:53:49,560 --> 00:53:55,950
device is enough and my opinion the most

1148
00:53:53,730 --> 00:53:58,200
interesting finding here<font color="#CCCCCC"> is that we're</font>

1149
00:53:55,950 --> 00:54:01,049
even<font color="#E5E5E5"> even able to</font><font color="#CCCCCC"> implement this</font>

1150
00:53:58,200 --> 00:54:04,140
selective jammer<font color="#E5E5E5"> using our cheap devices</font>

1151
00:54:01,050 --> 00:54:06,000
<font color="#CCCCCC">and</font><font color="#E5E5E5"> recently there's</font><font color="#CCCCCC"> been new research</font>

1152
00:54:04,140 --> 00:54:07,980
<font color="#E5E5E5">going on as I mentioned that we can</font>

1153
00:54:06,000 --> 00:54:10,530
carry out these attacks not<font color="#E5E5E5"> only</font><font color="#CCCCCC"> using</font>

1154
00:54:07,980 --> 00:54:13,440
USB Wi-Fi devices but<font color="#E5E5E5"> we can also use</font>

1155
00:54:10,530 --> 00:54:15,750
our<font color="#E5E5E5"> smart phone in order to carry off in</font>

1156
00:54:13,440 --> 00:54:19,200
order<font color="#E5E5E5"> to pull</font><font color="#CCCCCC"> off these attacks</font><font color="#E5E5E5"> and</font>

1157
00:54:15,750 --> 00:54:23,160
finally in our crack<font color="#E5E5E5"> attack against wpa2</font>

1158
00:54:19,200 --> 00:54:25,470
we actually relied on some of these low

1159
00:54:23,160 --> 00:54:28,560
layer attacks in order to reliably

1160
00:54:25,470 --> 00:54:31,589
<font color="#E5E5E5">manipulate encrypted data frames to then</font>

1161
00:54:28,560 --> 00:54:36,290
attack the encryption algorithm that we

1162
00:54:31,590 --> 00:54:39,030
used<font color="#E5E5E5"> so here is again</font><font color="#CCCCCC"> the link to our</font>

1163
00:54:36,290 --> 00:54:41,529
<font color="#E5E5E5">codes and if you have any questions feel</font>

1164
00:54:39,030 --> 00:54:53,149
free to<font color="#E5E5E5"> ask</font><font color="#CCCCCC"> them thank you</font>

1165
00:54:41,530 --> 00:54:53,149
[Applause]

1166
00:54:54,750 --> 00:54:58,650
so any questions

1167
00:54:59,440 --> 00:55:02,579
[Music]

1168
00:55:09,150 --> 00:55:14,320
you said there are<font color="#E5E5E5"> minor</font><font color="#CCCCCC"> differences</font>

1169
00:55:11,710 --> 00:55:17,200
between the first plaintext packet and

1170
00:55:14,320 --> 00:55:19,630
the<font color="#E5E5E5"> encrypted packet how did you get</font>

1171
00:55:17,200 --> 00:55:21,339
<font color="#CCCCCC">around those minor differences I</font><font color="#E5E5E5"> assume</font>

1172
00:55:19,630 --> 00:55:24,820
the decrypted packet isn't entirely

1173
00:55:21,340 --> 00:55:27,700
decrypted<font color="#E5E5E5"> then yes so if you would use</font>

1174
00:55:24,820 --> 00:55:29,890
<font color="#E5E5E5">the technique exactly as I explained</font>

1175
00:55:27,700 --> 00:55:32,799
here then<font color="#E5E5E5"> this minor difference would</font>

1176
00:55:29,890 --> 00:55:35,740
indeed<font color="#CCCCCC"> mean that you would</font><font color="#E5E5E5"> not be</font><font color="#CCCCCC"> able</font>

1177
00:55:32,800 --> 00:55:38,710
<font color="#CCCCCC">to decrypt a full contents of this data</font>

1178
00:55:35,740 --> 00:55:42,339
frame that we want<font color="#E5E5E5"> to decrypt</font><font color="#CCCCCC"> but what</font>

1179
00:55:38,710 --> 00:55:44,740
you can do as an attacker is you can you

1180
00:55:42,340 --> 00:55:47,500
can delay<font color="#E5E5E5"> this</font><font color="#CCCCCC"> QE installation</font><font color="#E5E5E5"> and you</font>

1181
00:55:44,740 --> 00:55:49,959
can wait<font color="#CCCCCC"> until the victim for example</font>

1182
00:55:47,500 --> 00:55:52,330
send some<font color="#E5E5E5"> ARP</font><font color="#CCCCCC"> request or DHCP request</font>

1183
00:55:49,960 --> 00:55:54,640
<font color="#E5E5E5">where you can predict all the contents</font>

1184
00:55:52,330 --> 00:55:56,410
<font color="#E5E5E5">and then you can use these frames where</font>

1185
00:55:54,640 --> 00:55:59,740
you are<font color="#E5E5E5"> able to</font><font color="#CCCCCC"> predict all the content</font>

1186
00:55:56,410 --> 00:56:02,009
to carry out a very similar attack<font color="#E5E5E5"> okay</font>

1187
00:55:59,740 --> 00:56:02,009
thank you

1188
00:56:13,420 --> 00:56:18,210
looks like there are<font color="#CCCCCC"> no more questions</font>

1189
00:56:14,950 --> 00:56:18,210
so<font color="#CCCCCC"> again thank you for</font><font color="#E5E5E5"> your attention</font>

1190
00:56:22,060 --> 00:56:24,120
you

