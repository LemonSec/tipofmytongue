1
00:00:03,380 --> 00:00:05,940
thank you all for coming

2
00:00:05,940 --> 00:00:08,820
let's play a game of cat and mouse

3
00:00:08,820 --> 00:00:11,700
in the office security settings using

4
00:00:11,700 --> 00:00:15,480
science documents VBA dll and xll

5
00:00:15,480 --> 00:00:17,820
hijacks

6
00:00:17,820 --> 00:00:19,980
my name is

7
00:00:19,980 --> 00:00:22,439
I'm a red teamer and offensive developer

8
00:00:22,439 --> 00:00:24,060
at outflank

9
00:00:24,060 --> 00:00:26,760
so I really enjoy building stuff that

10
00:00:26,760 --> 00:00:28,859
will then break other stuff and then

11
00:00:28,859 --> 00:00:32,359
using that in operations

12
00:00:42,620 --> 00:00:45,919
is to touch

13
00:00:47,460 --> 00:00:49,620
it's like a life ambition

14
00:00:49,620 --> 00:00:52,800
and at our flag we do a lot of red

15
00:00:52,800 --> 00:00:56,100
teaming by hacking bank trying

16
00:00:56,100 --> 00:00:57,180
to

17
00:00:57,180 --> 00:01:00,379
we develop tools and

18
00:01:00,660 --> 00:01:02,760
it's part of the research we went

19
00:01:02,760 --> 00:01:05,640
through this world out office

20
00:01:05,640 --> 00:01:07,799
code signing

21
00:01:07,799 --> 00:01:09,799
and

22
00:01:09,799 --> 00:01:13,080
we see companies moving to higher

23
00:01:13,080 --> 00:01:15,659
security levels for office documents

24
00:01:15,659 --> 00:01:18,960
like signing macros Etc

25
00:01:18,960 --> 00:01:21,360
we started looking deeper into it and

26
00:01:21,360 --> 00:01:23,520
about a year ago we located the

27
00:01:23,520 --> 00:01:25,799
vulnerability in

28
00:01:25,799 --> 00:01:28,560
so that was signed by Microsoft

29
00:01:28,560 --> 00:01:31,220
so we were like okay wait a minute

30
00:01:31,220 --> 00:01:34,200
micro signing even Microsoft is messing

31
00:01:34,200 --> 00:01:35,340
up

32
00:01:35,340 --> 00:01:37,619
started cooking further and going

33
00:01:37,619 --> 00:01:39,479
further down that rabbit who we ended up

34
00:01:39,479 --> 00:01:43,560
with a lot of other researchers

35
00:01:44,340 --> 00:01:46,860
and this dog is about office but we use

36
00:01:46,860 --> 00:01:48,900
autism or operations you know in a

37
00:01:48,900 --> 00:01:50,820
various ways and this is not only about

38
00:01:50,820 --> 00:01:53,579
initial actually this can also be Vector

39
00:01:53,579 --> 00:01:55,799
collateral movements on factors or

40
00:01:55,799 --> 00:01:57,780
long-term resistance so keep that in

41
00:01:57,780 --> 00:01:59,899
mind

42
00:02:00,659 --> 00:02:03,060
furthermore after you do research we

43
00:02:03,060 --> 00:02:06,000
discover new stuff every day actually we

44
00:02:06,000 --> 00:02:07,320
didn't have time left to disclose

45
00:02:07,320 --> 00:02:09,060
everything and we're still disposing it

46
00:02:09,060 --> 00:02:11,400
to various factors so some of it will be

47
00:02:11,400 --> 00:02:14,160
blurred not everything will be there but

48
00:02:14,160 --> 00:02:15,840
we will show you the concepts we will

49
00:02:15,840 --> 00:02:17,580
tell you where you can look at stuff if

50
00:02:17,580 --> 00:02:19,080
you will just move out of the vendors

51
00:02:19,080 --> 00:02:22,819
here except for the stuff that's patched

52
00:02:22,920 --> 00:02:25,739
and with this we hope that blue teams

53
00:02:25,739 --> 00:02:28,080
can be better in understanding security

54
00:02:28,080 --> 00:02:30,000
settings understanding what they should

55
00:02:30,000 --> 00:02:31,620
start with the student signs and for the

56
00:02:31,620 --> 00:02:33,420
gravity it's just a lot of fun they can

57
00:02:33,420 --> 00:02:36,319
apply in their operations

58
00:02:36,780 --> 00:02:39,660
so let's start first with the naive

59
00:02:39,660 --> 00:02:42,420
approach of me trying to harden the hell

60
00:02:42,420 --> 00:02:45,500
out of my other schools

61
00:02:47,400 --> 00:02:50,459
the first thing we would do is you would

62
00:02:50,459 --> 00:02:55,140
start by land making a cosine so you can

63
00:02:55,140 --> 00:02:56,580
figure out this

64
00:02:56,580 --> 00:03:01,080
saying well I want to disable VBA maker

65
00:03:01,080 --> 00:03:05,040
macros except interesting

66
00:03:05,040 --> 00:03:08,160
and in my setup I don't have access to

67
00:03:08,160 --> 00:03:09,900
publisher within a typical conference

68
00:03:09,900 --> 00:03:12,300
they will save all of the people

69
00:03:12,300 --> 00:03:14,780
hours

70
00:03:17,580 --> 00:03:19,800
with this setting

71
00:03:19,800 --> 00:03:21,780
you are actually being buried in this

72
00:03:21,780 --> 00:03:24,260
value

73
00:03:37,640 --> 00:03:40,799
our documents so he just creates his own

74
00:03:40,799 --> 00:03:43,379
signature and sends it to its victim

75
00:03:43,379 --> 00:03:45,959
it will still show the yellow bar

76
00:03:45,959 --> 00:03:50,239
so actually this really didn't do a lot

77
00:03:50,819 --> 00:03:53,340
so you need to go a bit further in the

78
00:03:53,340 --> 00:03:54,780
office configuration settings to harden

79
00:03:54,780 --> 00:03:56,780
macros so the thing you should be doing

80
00:03:56,780 --> 00:04:01,580
of course is to hide the yellow bar

81
00:04:02,519 --> 00:04:05,700
so you can hide the yellow bar in the

82
00:04:05,700 --> 00:04:07,980
message bar settings you just say well

83
00:04:07,980 --> 00:04:10,260
never show information to the user

84
00:04:10,260 --> 00:04:11,760
anymore

85
00:04:11,760 --> 00:04:13,560
and if we look at carefully what's

86
00:04:13,560 --> 00:04:15,780
written there

87
00:04:15,780 --> 00:04:18,839
it is the message bar settings be

88
00:04:18,839 --> 00:04:20,760
careful of the wording on all these user

89
00:04:20,760 --> 00:04:23,280
interface things on the settings screen

90
00:04:23,280 --> 00:04:25,340
so we now have this self-signed document

91
00:04:25,340 --> 00:04:29,100
no warnings no execution yes we are

92
00:04:29,100 --> 00:04:30,660
secure

93
00:04:30,660 --> 00:04:33,479
that's what I thought

94
00:04:33,479 --> 00:04:36,120
then we started poking with file formats

95
00:04:36,120 --> 00:04:38,160
and there are some micro based file

96
00:04:38,160 --> 00:04:40,560
formats that are not seen that often so

97
00:04:40,560 --> 00:04:42,900
we all know our Excel workbooks and our

98
00:04:42,900 --> 00:04:44,580
macro workbooks

99
00:04:44,580 --> 00:04:47,400
but who have you ever played around with

100
00:04:47,400 --> 00:04:51,540
the xla or xlam file formats

101
00:04:51,540 --> 00:04:53,820
these are Excel add-ins

102
00:04:53,820 --> 00:04:56,820
but they're just workbooks and renamed a

103
00:04:56,820 --> 00:04:59,699
slightly different format than than like

104
00:04:59,699 --> 00:05:04,320
the the the word like the normal ones

105
00:05:04,320 --> 00:05:06,660
and interestingly enough

106
00:05:06,660 --> 00:05:09,120
an unsigned one doesn't show anything

107
00:05:09,120 --> 00:05:13,740
with a self-signed one shows a dialogue

108
00:05:13,740 --> 00:05:16,080
so you remember I blocked out the

109
00:05:16,080 --> 00:05:17,280
message bar

110
00:05:17,280 --> 00:05:19,380
but that doesn't say anything about a

111
00:05:19,380 --> 00:05:21,419
dialogue

112
00:05:21,419 --> 00:05:24,960
so what's the impact here if I find

113
00:05:24,960 --> 00:05:27,479
something like what that was science I

114
00:05:27,479 --> 00:05:29,940
can take I can take the contents from

115
00:05:29,940 --> 00:05:31,440
the workbook like if it's assigned

116
00:05:31,440 --> 00:05:32,940
workbook and I can place it in this file

117
00:05:32,940 --> 00:05:35,639
format that's all outside the fault so I

118
00:05:35,639 --> 00:05:37,680
can just transpose signatures from one

119
00:05:37,680 --> 00:05:40,740
file format to the other so with this I

120
00:05:40,740 --> 00:05:42,960
can still get a convincing UI user

121
00:05:42,960 --> 00:05:46,340
interface pop-up for the user

122
00:05:49,139 --> 00:05:53,039
so my next attempt to block this one was

123
00:05:53,039 --> 00:05:54,780
again grow through the stress everything

124
00:05:54,780 --> 00:05:57,300
settings and I found this one the add-in

125
00:05:57,300 --> 00:05:58,680
configurations

126
00:05:58,680 --> 00:06:01,500
and this one really looks like the one I

127
00:06:01,500 --> 00:06:04,440
needed like blocking add-ins

128
00:06:04,440 --> 00:06:08,639
com vco and others well this shirt this

129
00:06:08,639 --> 00:06:10,440
is another this is not common this is

130
00:06:10,440 --> 00:06:12,120
not vco this is another

131
00:06:12,120 --> 00:06:14,460
so it should be blocking right

132
00:06:14,460 --> 00:06:17,639
so let's so I gave it a Trends okay and

133
00:06:17,639 --> 00:06:19,500
there it was

134
00:06:19,500 --> 00:06:21,960
it is still there

135
00:06:21,960 --> 00:06:25,020
so how do you block this stuff

136
00:06:25,020 --> 00:06:27,300
took a bit of time

137
00:06:27,300 --> 00:06:30,960
it turns out that in the

138
00:06:30,960 --> 00:06:32,759
file type settings

139
00:06:32,759 --> 00:06:35,580
you can go to this very

140
00:06:35,580 --> 00:06:37,800
the user-friendly interface where you

141
00:06:37,800 --> 00:06:40,319
can say I want to have add-in files and

142
00:06:40,319 --> 00:06:42,840
then the other one says if you open do

143
00:06:42,840 --> 00:06:45,199
not open so this is the best most

144
00:06:45,199 --> 00:06:48,120
intuitive interface ever

145
00:06:48,120 --> 00:06:51,720
and then it will block stuff

146
00:06:51,720 --> 00:06:54,180
so this is where hardening office

147
00:06:54,180 --> 00:06:56,520
already say like wait wait a minute

148
00:06:56,520 --> 00:06:58,919
these file types are cool the xlams and

149
00:06:58,919 --> 00:07:01,139
the xlas

150
00:07:01,139 --> 00:07:03,360
all these settings I am changing

151
00:07:03,360 --> 00:07:05,220
actually are also changing other

152
00:07:05,220 --> 00:07:07,380
security features in office

153
00:07:07,380 --> 00:07:08,520
so

154
00:07:08,520 --> 00:07:11,639
like if a file is trusted this impacts

155
00:07:11,639 --> 00:07:13,979
MZ if it's in a trusted location Amazon

156
00:07:13,979 --> 00:07:17,039
doesn't run so this all intertwingles

157
00:07:17,039 --> 00:07:19,020
with security controls happening later

158
00:07:19,020 --> 00:07:20,639
on

159
00:07:20,639 --> 00:07:22,560
and these settings are very complex

160
00:07:22,560 --> 00:07:25,020
companies will fail

161
00:07:25,020 --> 00:07:28,800
so this is the perspective of hardening

162
00:07:28,800 --> 00:07:31,259
office macros and coming into your

163
00:07:31,259 --> 00:07:33,360
organization but there you also have the

164
00:07:33,360 --> 00:07:35,940
challenge of signing stuff and what

165
00:07:35,940 --> 00:07:37,440
should I sign

166
00:07:37,440 --> 00:07:40,440
and that is where we started about a

167
00:07:40,440 --> 00:07:41,699
year ago

168
00:07:41,699 --> 00:07:44,039
so we started looking at some Microsoft

169
00:07:44,039 --> 00:07:47,360
science documents

170
00:07:48,599 --> 00:07:53,039
about a year ago we found a pattern a

171
00:07:53,039 --> 00:07:56,039
codes a development pattern a code

172
00:07:56,039 --> 00:07:59,520
pattern which some developers used and

173
00:07:59,520 --> 00:08:01,080
then later was signed that was

174
00:08:01,080 --> 00:08:03,960
vulnerable for hijack

175
00:08:03,960 --> 00:08:06,360
and in this presentation we're going to

176
00:08:06,360 --> 00:08:09,000
go through four different of those

177
00:08:09,000 --> 00:08:11,340
code patterns that are potentially

178
00:08:11,340 --> 00:08:12,660
vulnerable

179
00:08:12,660 --> 00:08:16,020
the first one we found was that

180
00:08:16,020 --> 00:08:19,560
there is a Microsoft signed add-in and

181
00:08:19,560 --> 00:08:22,680
analysis tool pack add-in that would

182
00:08:22,680 --> 00:08:25,560
allow you to make various calculations

183
00:08:25,560 --> 00:08:27,660
and this was signed and published by

184
00:08:27,660 --> 00:08:30,120
Microsoft

185
00:08:30,120 --> 00:08:33,179
it was also a timestamp signed and it

186
00:08:33,179 --> 00:08:35,940
contained a valid signature so even

187
00:08:35,940 --> 00:08:38,279
after the signature expired it would

188
00:08:38,279 --> 00:08:42,120
still be regarded as a valid signature

189
00:08:42,120 --> 00:08:44,580
and this add-in did something

190
00:08:44,580 --> 00:08:45,660
interesting

191
00:08:45,660 --> 00:08:48,060
when we looked at it we saw that there

192
00:08:48,060 --> 00:08:52,380
was a reference to NLS 32 print XL in

193
00:08:52,380 --> 00:08:55,800
one of the cells cell B8

194
00:08:55,800 --> 00:08:58,440
and we were like that's curious what

195
00:08:58,440 --> 00:09:02,160
what would this add-in Excel am add-in

196
00:09:02,160 --> 00:09:05,279
do written XL which is a different file

197
00:09:05,279 --> 00:09:06,779
format

198
00:09:06,779 --> 00:09:07,860
so

199
00:09:07,860 --> 00:09:11,160
we tried a couple of things what if we

200
00:09:11,160 --> 00:09:16,440
put our malicious unsigned xll in the

201
00:09:16,440 --> 00:09:18,720
same folder next to it would it load it

202
00:09:18,720 --> 00:09:20,040
would it run

203
00:09:20,040 --> 00:09:23,480
and it turned out it did

204
00:09:23,640 --> 00:09:26,580
so for the next exploitation steps in

205
00:09:26,580 --> 00:09:28,680
this example we're going to use cell B8

206
00:09:28,680 --> 00:09:30,440
and we're going to change the name

207
00:09:30,440 --> 00:09:33,180
analysis 32 then takes a lot to some

208
00:09:33,180 --> 00:09:35,599
other stuff

209
00:09:35,700 --> 00:09:38,220
we were interested on how this process

210
00:09:38,220 --> 00:09:41,399
how this happened how would the VBA code

211
00:09:41,399 --> 00:09:43,380
in this add-in

212
00:09:43,380 --> 00:09:45,779
load that xll

213
00:09:45,779 --> 00:09:49,800
so we used our favorite VBA tool olivba

214
00:09:49,800 --> 00:09:54,660
to extract all the VBA code out of the

215
00:09:54,660 --> 00:09:55,860
document

216
00:09:55,860 --> 00:09:58,320
there's an auto open function

217
00:09:58,320 --> 00:10:00,480
so at the moment the user double clicks

218
00:10:00,480 --> 00:10:04,260
the file and sees the notification well

219
00:10:04,260 --> 00:10:06,839
if Microsoft isn't already added as a

220
00:10:06,839 --> 00:10:09,180
trusted publisher

221
00:10:09,180 --> 00:10:12,800
then the code would run

222
00:10:13,080 --> 00:10:14,820
Auto open

223
00:10:14,820 --> 00:10:16,320
code runs

224
00:10:16,320 --> 00:10:22,019
it will obtain the xll name

225
00:10:22,019 --> 00:10:24,060
from the xll name cell

226
00:10:24,060 --> 00:10:28,140
and obtain the value from the cell and

227
00:10:28,140 --> 00:10:32,220
to reiterate like uh macros within

228
00:10:32,220 --> 00:10:35,399
documents are only only the parts is

229
00:10:35,399 --> 00:10:38,580
signed of the VBA project in bin

230
00:10:38,580 --> 00:10:41,640
so everything within a Office document

231
00:10:41,640 --> 00:10:45,720
or office Excel sheet is not signed so

232
00:10:45,720 --> 00:10:47,279
all the worksheets all the cells

233
00:10:47,279 --> 00:10:49,620
everything is not signed except for the

234
00:10:49,620 --> 00:10:51,899
part the VBA project has been part that

235
00:10:51,899 --> 00:10:54,180
contains the macro

236
00:10:54,180 --> 00:10:57,060
so this value is obtained from a cell

237
00:10:57,060 --> 00:10:58,920
and it's later

238
00:10:58,920 --> 00:11:02,519
uh consumed within the register XL

239
00:11:02,519 --> 00:11:06,440
function in a simple concatenation

240
00:11:07,560 --> 00:11:10,620
so let's see if we can abuse it let's

241
00:11:10,620 --> 00:11:13,320
first look at the normal pattern like

242
00:11:13,320 --> 00:11:16,200
this is normally used like this in cell

243
00:11:16,200 --> 00:11:20,220
B8 there is the value in LS 32 Pentax LL

244
00:11:20,220 --> 00:11:23,100
but what if we if we change it for for

245
00:11:23,100 --> 00:11:25,200
instance for a phishing scenario

246
00:11:25,200 --> 00:11:28,980
so that there is one file with a cool

247
00:11:28,980 --> 00:11:31,800
icon this Excel am file with a cool

248
00:11:31,800 --> 00:11:33,420
green icon and the other files don't

249
00:11:33,420 --> 00:11:35,399
don't have an icon or are not clickable

250
00:11:35,399 --> 00:11:37,860
which makes our phishing or lateral

251
00:11:37,860 --> 00:11:40,440
movement story even easier

252
00:11:40,440 --> 00:11:43,860
if you change it to demo 64.

253
00:11:43,860 --> 00:11:47,339
we have another success so the the file

254
00:11:47,339 --> 00:11:49,140
name and the file extension can be

255
00:11:49,140 --> 00:11:51,420
freely manipulated by the attacker

256
00:11:51,420 --> 00:11:53,820
we already suspected this because this

257
00:11:53,820 --> 00:11:55,920
is part of the unsigned part

258
00:11:55,920 --> 00:11:58,079
of the document

259
00:11:58,079 --> 00:12:00,959
but we still had a bit of a tricky part

260
00:12:00,959 --> 00:12:05,880
here because an XL is a dll

261
00:12:05,880 --> 00:12:08,100
it's an Excel add-in

262
00:12:08,100 --> 00:12:10,320
but this is not an Excel add-in that is

263
00:12:10,320 --> 00:12:12,540
based on VBA code this is an Excel

264
00:12:12,540 --> 00:12:15,660
add-in that is a PE format it's

265
00:12:15,660 --> 00:12:18,420
basically a dll

266
00:12:18,420 --> 00:12:21,000
so this dll should have the

267
00:12:21,000 --> 00:12:23,040
corresponding bitness of the host

268
00:12:23,040 --> 00:12:25,980
process of excel so if Excel is 64-bit

269
00:12:25,980 --> 00:12:29,040
then the dlls should also be 64-bit and

270
00:12:29,040 --> 00:12:30,839
if Excel is 32-bit

271
00:12:30,839 --> 00:12:33,959
then the loss should also be 32-bit

272
00:12:33,959 --> 00:12:36,540
so we needed a way to determine that

273
00:12:36,540 --> 00:12:38,940
and we used

274
00:12:38,940 --> 00:12:42,300
like calculations for that

275
00:12:42,300 --> 00:12:45,180
like with this calculations within a

276
00:12:45,180 --> 00:12:47,820
cell you can determine if the Excel host

277
00:12:47,820 --> 00:12:50,760
process is 64-bit or 32-bit and pick

278
00:12:50,760 --> 00:12:53,760
your payload accordingly

279
00:12:53,760 --> 00:12:56,339
so how would it look like in in a quick

280
00:12:56,339 --> 00:12:58,860
demo so suppose we want to fish our

281
00:12:58,860 --> 00:13:02,880
victim we will send us specific type of

282
00:13:02,880 --> 00:13:05,399
container format to the victim like an

283
00:13:05,399 --> 00:13:10,320
image or ezo or a zip in this case and

284
00:13:10,320 --> 00:13:12,779
then the user would receive it

285
00:13:12,779 --> 00:13:15,680
and click on it

286
00:13:18,180 --> 00:13:20,639
once extracted user will double click

287
00:13:20,639 --> 00:13:22,440
the cool document

288
00:13:22,440 --> 00:13:23,760
icon

289
00:13:23,760 --> 00:13:26,399
that is well it's signed if

290
00:13:26,399 --> 00:13:28,500
you check more settings it would show up

291
00:13:28,500 --> 00:13:30,660
this is from Microsoft Corp officially

292
00:13:30,660 --> 00:13:32,700
signed all the stuff but a lot of

293
00:13:32,700 --> 00:13:34,560
signature is valid a lot of companies

294
00:13:34,560 --> 00:13:36,120
have that one as a trusted publisher so

295
00:13:36,120 --> 00:13:37,560
they will not see anything and it would

296
00:13:37,560 --> 00:13:39,979
just run

297
00:13:40,500 --> 00:13:42,720
and that's where we got shell

298
00:13:42,720 --> 00:13:45,480
and then we get a shell and our our code

299
00:13:45,480 --> 00:13:48,380
runs

300
00:13:49,320 --> 00:13:52,139
we later found more vulnerabilities in

301
00:13:52,139 --> 00:13:54,540
this document and we're able to narrow

302
00:13:54,540 --> 00:13:57,060
down our our exploits to only be able to

303
00:13:57,060 --> 00:13:59,880
serve one file that will load a remote

304
00:13:59,880 --> 00:14:02,540
from a remote location all the other

305
00:14:02,540 --> 00:14:04,620
resources needed

306
00:14:04,620 --> 00:14:08,160
to gain remote code execution so remote

307
00:14:08,160 --> 00:14:11,700
loads an XL for instance over webdov

308
00:14:11,700 --> 00:14:14,940
for more information uh you can check

309
00:14:14,940 --> 00:14:18,720
the previous presentation on this topic

310
00:14:18,720 --> 00:14:20,760
to recap

311
00:14:20,760 --> 00:14:24,540
Microsoft signs

312
00:14:24,540 --> 00:14:27,240
various Excel add-ins

313
00:14:27,240 --> 00:14:30,600
some of them depended on content within

314
00:14:30,600 --> 00:14:32,820
the same document that was in an

315
00:14:32,820 --> 00:14:34,380
unsigned part

316
00:14:34,380 --> 00:14:37,500
and it was possible from this signed

317
00:14:37,500 --> 00:14:40,199
context after the user accepted it to

318
00:14:40,199 --> 00:14:42,480
load unsigned potentially malicious

319
00:14:42,480 --> 00:14:45,079
resources

320
00:14:45,920 --> 00:14:49,260
this was due to a very uh to

321
00:14:49,260 --> 00:14:51,420
to multiple reasons and one of the

322
00:14:51,420 --> 00:14:55,139
reasons that we we abused was we took

323
00:14:55,139 --> 00:14:57,899
this single file out of the installation

324
00:14:57,899 --> 00:15:00,720
context out of the C program files

325
00:15:00,720 --> 00:15:04,040
Microsoft Office installation context

326
00:15:04,040 --> 00:15:06,600
and placed it somewhere else where it

327
00:15:06,600 --> 00:15:10,639
would look for various resources

328
00:15:12,600 --> 00:15:14,459
to patch and mitigate this issue

329
00:15:14,459 --> 00:15:16,459
Microsoft had to implement various

330
00:15:16,459 --> 00:15:19,860
various things and mitigations the fixed

331
00:15:19,860 --> 00:15:23,820
input validation they prevented the

332
00:15:23,820 --> 00:15:26,699
signing downgrade so you can now from a

333
00:15:26,699 --> 00:15:29,579
science document no longer loads an

334
00:15:29,579 --> 00:15:32,760
unsigned xll unless you set a different

335
00:15:32,760 --> 00:15:36,500
registry key and

336
00:15:36,500 --> 00:15:40,740
they kind of revoked their own uh

337
00:15:40,740 --> 00:15:42,899
previously signed documents with a

338
00:15:42,899 --> 00:15:45,660
blacklist because as you might know

339
00:15:45,660 --> 00:15:47,579
office does not have a certificate

340
00:15:47,579 --> 00:15:50,839
revocation list which would

341
00:15:50,839 --> 00:15:53,940
make the patch more difficult but they

342
00:15:53,940 --> 00:15:56,699
heart coded it into it what from what we

343
00:15:56,699 --> 00:15:58,500
suspect

344
00:15:58,500 --> 00:16:02,639
but during the patch Microsoft did more

345
00:16:02,639 --> 00:16:05,519
they patched not only this specific file

346
00:16:05,519 --> 00:16:07,920
they also changed and patched other

347
00:16:07,920 --> 00:16:09,180
files

348
00:16:09,180 --> 00:16:12,480
so the problem might be much bigger and

349
00:16:12,480 --> 00:16:16,800
this is where our our story continued

350
00:16:16,800 --> 00:16:17,880
so

351
00:16:17,880 --> 00:16:19,920
what other vulnerable signed files are

352
00:16:19,920 --> 00:16:22,880
there and what other potential

353
00:16:22,880 --> 00:16:26,220
insecure coding practices were used

354
00:16:26,220 --> 00:16:28,459
there

355
00:16:28,560 --> 00:16:32,300
so let's look for more sign files

356
00:16:32,880 --> 00:16:34,740
you can look for more signed files on

357
00:16:34,740 --> 00:16:36,540
the internet there's plenty of them out

358
00:16:36,540 --> 00:16:39,240
there you can you can use search engines

359
00:16:39,240 --> 00:16:42,480
to find you can just look for file types

360
00:16:42,480 --> 00:16:47,220
specifically Excel ASM Excel am but also

361
00:16:47,220 --> 00:16:50,820
the older formats XLR XL

362
00:16:50,820 --> 00:16:53,220
you can look at firestartal

363
00:16:53,220 --> 00:16:56,240
there you can also find plenty of them

364
00:16:56,240 --> 00:16:59,220
but in addition to that

365
00:16:59,220 --> 00:17:01,380
another very important Source if you're

366
00:17:01,380 --> 00:17:04,439
performing a red team engagement is to

367
00:17:04,439 --> 00:17:07,679
do local to do Network reconnaissance or

368
00:17:07,679 --> 00:17:09,959
local reconnaissance so if you already

369
00:17:09,959 --> 00:17:11,419
have a foothold

370
00:17:11,419 --> 00:17:15,240
in a Target Network try to look if you

371
00:17:15,240 --> 00:17:16,980
can find a

372
00:17:16,980 --> 00:17:19,140
science documents

373
00:17:19,140 --> 00:17:22,199
published by that that organization

374
00:17:22,199 --> 00:17:24,839
and then download them

375
00:17:24,839 --> 00:17:27,119
because if

376
00:17:27,119 --> 00:17:29,040
you're for instance kicked out or if you

377
00:17:29,040 --> 00:17:30,900
want to do lateral movement or or

378
00:17:30,900 --> 00:17:33,840
anything then you can lift on that

379
00:17:33,840 --> 00:17:36,000
signature and if you can find a

380
00:17:36,000 --> 00:17:37,799
potential Bypass or a potential

381
00:17:37,799 --> 00:17:40,500
vulnerable vulnerability in a document

382
00:17:40,500 --> 00:17:42,900
and please note that this goes further

383
00:17:42,900 --> 00:17:45,360
than just Excel this also applies to

384
00:17:45,360 --> 00:17:49,200
words PowerPoint and the other Microsoft

385
00:17:49,200 --> 00:17:51,500
Office

386
00:17:52,039 --> 00:17:55,980
VBA or macro or documents that can be

387
00:17:55,980 --> 00:17:58,340
signed

388
00:17:58,440 --> 00:18:00,360
one of the files that we found very

389
00:18:00,360 --> 00:18:02,400
interesting was

390
00:18:02,400 --> 00:18:07,080
a document an add-in that was signed and

391
00:18:07,080 --> 00:18:10,020
that had more than 60 000 lines of VBA

392
00:18:10,020 --> 00:18:13,559
and it had a lot of potentially

393
00:18:13,559 --> 00:18:17,400
suspicious functions so this is legit

394
00:18:17,400 --> 00:18:19,500
this is legitimate this is like an

395
00:18:19,500 --> 00:18:21,059
official installer package and this is

396
00:18:21,059 --> 00:18:23,100
what it got like laughing our ass off

397
00:18:23,100 --> 00:18:25,740
yeah what is this what we're now looking

398
00:18:25,740 --> 00:18:27,480
into

399
00:18:27,480 --> 00:18:31,080
so we were like composing this set of of

400
00:18:31,080 --> 00:18:33,419
files we could find on the internet and

401
00:18:33,419 --> 00:18:35,220
in parallel Microsoft was working and

402
00:18:35,220 --> 00:18:36,539
they were like can we take a bit more

403
00:18:36,539 --> 00:18:38,520
time before you disclose it take a bit

404
00:18:38,520 --> 00:18:40,620
more time then they came with this patch

405
00:18:40,620 --> 00:18:42,900
and and recently were like wait a minute

406
00:18:42,900 --> 00:18:45,960
we gave you this xla file where our

407
00:18:45,960 --> 00:18:48,780
vulnerability was it

408
00:18:48,780 --> 00:18:51,299
and then they patched other other files

409
00:18:51,299 --> 00:18:52,740
where we knew that this pattern was not

410
00:18:52,740 --> 00:18:54,480
in and we were like there are other

411
00:18:54,480 --> 00:18:56,880
patterns that we that can be abused

412
00:18:56,880 --> 00:19:00,059
so pattern two is about declares and dll

413
00:19:00,059 --> 00:19:01,380
hijacks

414
00:19:01,380 --> 00:19:04,320
so if you look at the issue what happens

415
00:19:04,320 --> 00:19:06,660
with this with Microsoft's add-in and in

416
00:19:06,660 --> 00:19:08,700
this case it was the solver add-in

417
00:19:08,700 --> 00:19:10,799
it is very trivial once we start looking

418
00:19:10,799 --> 00:19:12,120
into it

419
00:19:12,120 --> 00:19:15,000
so this is the original code the

420
00:19:15,000 --> 00:19:16,559
original VBA code

421
00:19:16,559 --> 00:19:18,720
and I guess this is the point oh this is

422
00:19:18,720 --> 00:19:21,660
not the pointer can you go back the top

423
00:19:21,660 --> 00:19:24,419
top one is the pointer

424
00:19:24,419 --> 00:19:26,520
this is the updated one with the CH

425
00:19:26,520 --> 00:19:28,200
Drive

426
00:19:28,200 --> 00:19:30,360
yeah

427
00:19:30,360 --> 00:19:32,840
three

428
00:19:33,120 --> 00:19:35,580
yeah so what this function what this

429
00:19:35,580 --> 00:19:39,240
micro does it is a solver function

430
00:19:39,240 --> 00:19:42,660
um and the micro codes and the top right

431
00:19:42,660 --> 00:19:45,840
part says I'm importing this function

432
00:19:45,840 --> 00:19:49,620
solve uh and if you use this in the

433
00:19:49,620 --> 00:19:52,620
further VBA codes you should then load

434
00:19:52,620 --> 00:19:54,840
this function from the silver 32 dll

435
00:19:54,840 --> 00:19:56,700
file

436
00:19:56,700 --> 00:20:00,059
and then there's this function solve

437
00:20:00,059 --> 00:20:02,340
which is the which has the parameters

438
00:20:02,340 --> 00:20:04,679
which is the thing you can call in Excel

439
00:20:04,679 --> 00:20:06,900
so in an Excel file you can call a

440
00:20:06,900 --> 00:20:09,059
function that is defined in VBA

441
00:20:09,059 --> 00:20:11,460
and in that function solve the Excel

442
00:20:11,460 --> 00:20:12,740
function

443
00:20:12,740 --> 00:20:16,260
they do first a change directory to the

444
00:20:16,260 --> 00:20:18,539
current application path

445
00:20:18,539 --> 00:20:21,179
to the current worksheet path and then

446
00:20:21,179 --> 00:20:23,820
they call this function solve which is

447
00:20:23,820 --> 00:20:26,640
then loading the dll

448
00:20:26,640 --> 00:20:29,039
so

449
00:20:29,039 --> 00:20:31,440
this is relative so so if I take this

450
00:20:31,440 --> 00:20:33,660
file out of context I just place it

451
00:20:33,660 --> 00:20:35,940
somewhere and I place this solve32 dll

452
00:20:35,940 --> 00:20:39,900
alongside and I make the file called the

453
00:20:39,900 --> 00:20:41,640
solve function in in the Excel file

454
00:20:41,640 --> 00:20:44,220
you'll see that it's changing directory

455
00:20:44,220 --> 00:20:46,020
the current directory

456
00:20:46,020 --> 00:20:48,840
and it's immediately then loading this

457
00:20:48,840 --> 00:20:50,940
function from the dll so the only thing

458
00:20:50,940 --> 00:20:54,000
we need to do is build a dll that has

459
00:20:54,000 --> 00:20:56,520
this solve function or an auto and we

460
00:20:56,520 --> 00:20:57,840
get this load event and we can run a

461
00:20:57,840 --> 00:20:59,039
malware with it

462
00:20:59,039 --> 00:21:00,960
so once we saw this one we're like wow

463
00:21:00,960 --> 00:21:02,280
we missed this one we were already

464
00:21:02,280 --> 00:21:05,178
really bad hackers

465
00:21:05,760 --> 00:21:07,440
um and then we started looking at all

466
00:21:07,440 --> 00:21:09,000
the other files that we had because we

467
00:21:09,000 --> 00:21:11,039
just collected a lot of other sine files

468
00:21:11,039 --> 00:21:12,900
and

469
00:21:12,900 --> 00:21:15,120
well not all of them are as nice as this

470
00:21:15,120 --> 00:21:16,860
Microsoft sample because they don't

471
00:21:16,860 --> 00:21:18,360
typically change directory to the

472
00:21:18,360 --> 00:21:20,340
current current file so so

473
00:21:20,340 --> 00:21:23,940
we were playing with it and

474
00:21:23,940 --> 00:21:25,559
we're heading we're having we're having

475
00:21:25,559 --> 00:21:28,080
some issues with it because if we looked

476
00:21:28,080 --> 00:21:29,820
at what was happening

477
00:21:29,820 --> 00:21:32,340
any time and again

478
00:21:32,340 --> 00:21:34,260
the office applications would be looking

479
00:21:34,260 --> 00:21:36,299
in the documents folder they never

480
00:21:36,299 --> 00:21:38,400
looked in the current part

481
00:21:38,400 --> 00:21:42,840
but there the dll it is issue

482
00:21:42,840 --> 00:21:44,880
behaving according to a regular load

483
00:21:44,880 --> 00:21:47,280
image which has old current application

484
00:21:47,280 --> 00:21:49,140
current part you should check so what's

485
00:21:49,140 --> 00:21:51,000
happening here why is it always looking

486
00:21:51,000 --> 00:21:53,460
at the documents folder and not like in

487
00:21:53,460 --> 00:21:56,700
my ISO or in my in my folder which I

488
00:21:56,700 --> 00:21:58,620
just created from the zip

489
00:21:58,620 --> 00:22:00,720
well turned out there are some features

490
00:22:00,720 --> 00:22:03,720
in Excel that I even didn't know I know

491
00:22:03,720 --> 00:22:07,320
about so Excel always starts with a path

492
00:22:07,320 --> 00:22:10,020
of the documents folder and you can

493
00:22:10,020 --> 00:22:12,360
manipulate this with a setting there's

494
00:22:12,360 --> 00:22:14,280
this default file location

495
00:22:14,280 --> 00:22:16,559
and you can manipulate it in a

496
00:22:16,559 --> 00:22:18,659
configuration but as far as I know you

497
00:22:18,659 --> 00:22:20,520
cannot manipulate this in like with a

498
00:22:20,520 --> 00:22:22,440
file itself like providing an Excel

499
00:22:22,440 --> 00:22:25,080
sheet that changes this path

500
00:22:25,080 --> 00:22:27,240
so there are two ways how we can abuse

501
00:22:27,240 --> 00:22:28,799
this

502
00:22:28,799 --> 00:22:31,640
if we have these declares

503
00:22:31,640 --> 00:22:35,580
then what we can do is we can send take

504
00:22:35,580 --> 00:22:37,559
this file out of context

505
00:22:37,559 --> 00:22:40,919
and we can tell the user dear user this

506
00:22:40,919 --> 00:22:43,559
file only works in the documents folder

507
00:22:43,559 --> 00:22:45,840
please copy it there we just social

508
00:22:45,840 --> 00:22:47,640
engineer him saying place it in the

509
00:22:47,640 --> 00:22:49,200
documents folder it makes sense right

510
00:22:49,200 --> 00:22:51,840
you can convince people

511
00:22:51,840 --> 00:22:53,580
an alternative would be a more technical

512
00:22:53,580 --> 00:22:56,460
approach you can make an lnk file and

513
00:22:56,460 --> 00:22:58,620
the nlk file in the parameters it can

514
00:22:58,620 --> 00:23:00,659
tell to excel which should be this

515
00:23:00,659 --> 00:23:04,039
environmental pathway is looking

516
00:23:05,000 --> 00:23:09,240
so another coding pattern this is about

517
00:23:09,240 --> 00:23:11,220
declares taking the father out of

518
00:23:11,220 --> 00:23:13,260
context and where does the declare load

519
00:23:13,260 --> 00:23:14,340
stuff from

520
00:23:14,340 --> 00:23:16,740
what Microsoft did in their patch is

521
00:23:16,740 --> 00:23:18,780
they first

522
00:23:18,780 --> 00:23:20,280
let's check where is actually the

523
00:23:20,280 --> 00:23:22,380
current the current path

524
00:23:22,380 --> 00:23:24,120
then they change directory to the

525
00:23:24,120 --> 00:23:26,580
application part of Excel and then after

526
00:23:26,580 --> 00:23:29,820
then they load the the dll and then they

527
00:23:29,820 --> 00:23:32,220
change Excel back to the path where it

528
00:23:32,220 --> 00:23:34,860
should be just to mitigate this this one

529
00:23:34,860 --> 00:23:37,860
thing and I guess anybody using declares

530
00:23:37,860 --> 00:23:40,200
in VBA code and code signing should use

531
00:23:40,200 --> 00:23:43,280
these kind of patterns

532
00:23:43,679 --> 00:23:47,640
so this was pattern too

533
00:23:47,640 --> 00:23:51,000
and we had this set of of sine files and

534
00:23:51,000 --> 00:23:52,740
we were looking like what other things

535
00:23:52,740 --> 00:23:55,200
are there that get where it can go wrong

536
00:23:55,200 --> 00:23:57,960
and then we stumbled up another gem

537
00:23:57,960 --> 00:24:02,760
where uh one xla one Excel file was

538
00:24:02,760 --> 00:24:06,299
Cooling application.run

539
00:24:06,299 --> 00:24:09,000
um another xlan file

540
00:24:09,000 --> 00:24:11,100
and it turns out that once the first

541
00:24:11,100 --> 00:24:13,320
file is signed then the micro engine

542
00:24:13,320 --> 00:24:14,580
starts running

543
00:24:14,580 --> 00:24:17,580
and anything that the first file loads

544
00:24:17,580 --> 00:24:19,740
is no longer checked whether it's signed

545
00:24:19,740 --> 00:24:21,360
or whether it's according to the trusted

546
00:24:21,360 --> 00:24:23,700
Publishers Etc

547
00:24:23,700 --> 00:24:25,740
so you have this one file you take from

548
00:24:25,740 --> 00:24:27,600
like an installer you place your order

549
00:24:27,600 --> 00:24:30,299
file alongside send it out and there you

550
00:24:30,299 --> 00:24:32,820
go you're fishing now with like the

551
00:24:32,820 --> 00:24:34,679
signatures to sign by like the big

552
00:24:34,679 --> 00:24:38,419
vendors Etc so really cool stuff

553
00:24:41,059 --> 00:24:43,980
application.run well yeah who's using

554
00:24:43,980 --> 00:24:46,500
this it's a bit of a bit of a strange

555
00:24:46,500 --> 00:24:47,700
thing

556
00:24:47,700 --> 00:24:52,080
but what actually happens if just uh

557
00:24:52,080 --> 00:24:55,080
Excel file is opening another Excel file

558
00:24:55,080 --> 00:24:57,659
will it transpose this trust of like I

559
00:24:57,659 --> 00:24:58,860
checked I checked the signature first

560
00:24:58,860 --> 00:25:00,600
and now I'm opening another micro

561
00:25:00,600 --> 00:25:02,100
enabled file will it transfer will it

562
00:25:02,100 --> 00:25:04,740
forward the trust

563
00:25:04,740 --> 00:25:06,720
yes it will

564
00:25:06,720 --> 00:25:09,480
so any VBA card that opens another

565
00:25:09,480 --> 00:25:11,039
workbook

566
00:25:11,039 --> 00:25:13,380
and where it's science you can just oh

567
00:25:13,380 --> 00:25:15,000
take the signature use it to your

568
00:25:15,000 --> 00:25:16,620
benefit and then then take a step

569
00:25:16,620 --> 00:25:19,039
further

570
00:25:20,220 --> 00:25:22,020
then you start looking on stack Overflow

571
00:25:22,020 --> 00:25:23,760
what are people doing with markers and

572
00:25:23,760 --> 00:25:25,140
you're like you're getting like a world

573
00:25:25,140 --> 00:25:27,419
like Excel opening work with opening

574
00:25:27,419 --> 00:25:29,279
Excel and you're like how big is this

575
00:25:29,279 --> 00:25:30,299
actually

576
00:25:30,299 --> 00:25:34,200
and can you secure against this a lot of

577
00:25:34,200 --> 00:25:36,179
questions and we played around with

578
00:25:36,179 --> 00:25:37,640
things so

579
00:25:37,640 --> 00:25:40,380
the Run function just always runs

580
00:25:40,380 --> 00:25:43,260
Macross the document open always also

581
00:25:43,260 --> 00:25:45,059
seems to be forwarding the trust of

582
00:25:45,059 --> 00:25:47,340
Market of the micro engine

583
00:25:47,340 --> 00:25:49,799
but if you add a document to an

584
00:25:49,799 --> 00:25:52,260
application it certainly is not so I'm

585
00:25:52,260 --> 00:25:53,580
not sure what the difference is between

586
00:25:53,580 --> 00:25:55,679
adding a document and opening it but it

587
00:25:55,679 --> 00:25:57,120
apparently is a difference in the sense

588
00:25:57,120 --> 00:25:59,100
of the document you add is not

589
00:25:59,100 --> 00:26:02,120
automatically executed

590
00:26:02,340 --> 00:26:06,059
another pattern that you could try to do

591
00:26:06,059 --> 00:26:08,159
is like can I although I'm running the

592
00:26:08,159 --> 00:26:10,919
micro engine can I block the markers for

593
00:26:10,919 --> 00:26:12,960
the other file I'm opening

594
00:26:12,960 --> 00:26:15,120
and actually you can

595
00:26:15,120 --> 00:26:17,700
for a bit

596
00:26:17,700 --> 00:26:19,140
so

597
00:26:19,140 --> 00:26:22,799
the thing is you can disable the events

598
00:26:22,799 --> 00:26:26,640
so there's a feature a property of the

599
00:26:26,640 --> 00:26:29,400
application objects where you can say

600
00:26:29,400 --> 00:26:32,820
as a developer I don't I want to enable

601
00:26:32,820 --> 00:26:35,760
events I set that to false and then I

602
00:26:35,760 --> 00:26:37,860
load my other file and if you do that

603
00:26:37,860 --> 00:26:40,799
then things like Auto open are no longer

604
00:26:40,799 --> 00:26:42,539
available in the application you just

605
00:26:42,539 --> 00:26:44,820
disabled like the auto open the workbook

606
00:26:44,820 --> 00:26:46,860
open and

607
00:26:46,860 --> 00:26:51,740
you think you're a bit a bit safer

608
00:26:51,840 --> 00:26:55,679
but this is relatively subtle because

609
00:26:55,679 --> 00:26:59,520
yes you can disable the main events

610
00:26:59,520 --> 00:27:01,919
but if I as an attacker somehow can

611
00:27:01,919 --> 00:27:05,880
trigger an Excel file to recalculate

612
00:27:05,880 --> 00:27:07,799
well

613
00:27:07,799 --> 00:27:11,159
a recalculation in Excel in a file that

614
00:27:11,159 --> 00:27:12,840
where the macro engine is somehow

615
00:27:12,840 --> 00:27:16,380
activated it can be patterns like I just

616
00:27:16,380 --> 00:27:19,260
call a function that's defined in VBA

617
00:27:19,260 --> 00:27:22,559
and again you have our code execution

618
00:27:22,559 --> 00:27:24,840
so if you're a developer or if you're

619
00:27:24,840 --> 00:27:27,120
involved in code signing be very careful

620
00:27:27,120 --> 00:27:30,000
on one file opening another file because

621
00:27:30,000 --> 00:27:32,400
this is very subtle and it really

622
00:27:32,400 --> 00:27:35,100
relates to each other

623
00:27:35,100 --> 00:27:39,000
so these are tree categories the fourth

624
00:27:39,000 --> 00:27:41,039
pattern that we located

625
00:27:41,039 --> 00:27:43,440
for Dima

626
00:27:43,440 --> 00:27:45,720
the fourth pattern that we located was

627
00:27:45,720 --> 00:27:49,320
not originating from VBA it was

628
00:27:49,320 --> 00:27:53,520
originating from XLS from this PE file

629
00:27:53,520 --> 00:27:55,940
format

630
00:27:56,460 --> 00:28:00,480
so just like any regular dll an XL can

631
00:28:00,480 --> 00:28:03,900
also just add other libraries and import

632
00:28:03,900 --> 00:28:04,760
them

633
00:28:04,760 --> 00:28:07,740
from the system32 directory for instance

634
00:28:07,740 --> 00:28:09,480
but also from the local installation

635
00:28:09,480 --> 00:28:10,320
there

636
00:28:10,320 --> 00:28:12,240
so if you have a big installer that

637
00:28:12,240 --> 00:28:15,840
would install all various add-ins in for

638
00:28:15,840 --> 00:28:18,299
instance program files you can also

639
00:28:18,299 --> 00:28:20,039
reference them from from there because

640
00:28:20,039 --> 00:28:23,220
the current directory is result

641
00:28:23,220 --> 00:28:26,039
so this is an example this screenshot

642
00:28:26,039 --> 00:28:29,580
from a science xll that we found

643
00:28:29,580 --> 00:28:34,620
publicly and this xll loads three

644
00:28:34,620 --> 00:28:37,679
different dlls from the import address

645
00:28:37,679 --> 00:28:40,740
using the input port address table

646
00:28:40,740 --> 00:28:44,640
that are not in system 32.

647
00:28:44,640 --> 00:28:46,740
they are they are normally locally

648
00:28:46,740 --> 00:28:50,100
installed but now we can see if we can

649
00:28:50,100 --> 00:28:51,539
abuse this

650
00:28:51,539 --> 00:28:54,179
this this code pattern if you can abuse

651
00:28:54,179 --> 00:28:55,380
this

652
00:28:55,380 --> 00:28:59,279
using out of context execution

653
00:28:59,279 --> 00:29:00,840
so

654
00:29:00,840 --> 00:29:05,159
what happens if we take this xll

655
00:29:05,159 --> 00:29:07,559
out of the installation context and send

656
00:29:07,559 --> 00:29:09,299
it to another user

657
00:29:09,299 --> 00:29:12,480
will that xll will excel as a host

658
00:29:12,480 --> 00:29:15,360
process see the xll see the input

659
00:29:15,360 --> 00:29:16,919
address table and start loading these

660
00:29:16,919 --> 00:29:18,840
dlls

661
00:29:18,840 --> 00:29:21,179
and actually turned out it does so it

662
00:29:21,179 --> 00:29:22,860
will start

663
00:29:22,860 --> 00:29:25,679
looking for those dlls

664
00:29:25,679 --> 00:29:28,919
not only in the regular installation

665
00:29:28,919 --> 00:29:31,080
directories but also in the current

666
00:29:31,080 --> 00:29:32,580
directory

667
00:29:32,580 --> 00:29:34,020
even though

668
00:29:34,020 --> 00:29:35,880
Excel already changed the current

669
00:29:35,880 --> 00:29:38,760
directory to the documents folder it

670
00:29:38,760 --> 00:29:40,500
will still look in the current directory

671
00:29:40,500 --> 00:29:43,200
where the XLR is located so for instance

672
00:29:43,200 --> 00:29:46,020
downloads or documents

673
00:29:46,020 --> 00:29:47,820
that's interesting

674
00:29:47,820 --> 00:29:50,640
and it's something we can work with

675
00:29:50,640 --> 00:29:53,539
what they also see here is that an xll

676
00:29:53,539 --> 00:29:56,640
doesn't give a yellow bar as a warning

677
00:29:56,640 --> 00:29:58,980
but it gives also this really nice

678
00:29:58,980 --> 00:30:02,899
interesting pop-up box

679
00:30:04,140 --> 00:30:07,020
so let's try to exploit this

680
00:30:07,020 --> 00:30:10,320
in our initial attempts our exploitation

681
00:30:10,320 --> 00:30:12,600
actually filled

682
00:30:12,600 --> 00:30:15,000
like somehow we we weren't able to get

683
00:30:15,000 --> 00:30:18,840
it to work and we get this this message

684
00:30:18,840 --> 00:30:21,899
like the file format an extension don't

685
00:30:21,899 --> 00:30:23,220
match

686
00:30:23,220 --> 00:30:25,260
and

687
00:30:25,260 --> 00:30:29,399
like it it it stops opening it

688
00:30:29,399 --> 00:30:31,020
and this is the message you usually

689
00:30:31,020 --> 00:30:34,320
would get with xlls if we use an xll

690
00:30:34,320 --> 00:30:36,419
that was not the same business as the

691
00:30:36,419 --> 00:30:37,340
host

692
00:30:37,340 --> 00:30:40,980
application Excel so if you use a 32-bit

693
00:30:40,980 --> 00:30:46,140
xll on a 64-bit Excel or a 64-bit xll on

694
00:30:46,140 --> 00:30:50,640
a 32-bit Excel application so we were

695
00:30:50,640 --> 00:30:53,600
like a bit confused but that turned out

696
00:30:53,600 --> 00:30:58,140
that if Excel is unable to resolve all

697
00:30:58,140 --> 00:30:59,399
the functions

698
00:30:59,399 --> 00:31:02,880
from the the dlls that were defined in

699
00:31:02,880 --> 00:31:04,799
import address table

700
00:31:04,799 --> 00:31:07,200
then it would also give this

701
00:31:07,200 --> 00:31:10,220
so to make your exploit fully working

702
00:31:10,220 --> 00:31:14,279
you need to make sure that Excel will be

703
00:31:14,279 --> 00:31:16,980
able to resolve all the functions that

704
00:31:16,980 --> 00:31:19,559
are defined in the input address table

705
00:31:19,559 --> 00:31:21,000
and one of the ways you can do that

706
00:31:21,000 --> 00:31:24,539
easily is using function proxim

707
00:31:24,539 --> 00:31:27,240
which you can automate parts of using

708
00:31:27,240 --> 00:31:30,179
this project

709
00:31:30,179 --> 00:31:32,100
so how would a practical exploitation

710
00:31:32,100 --> 00:31:33,840
look like

711
00:31:33,840 --> 00:31:36,899
you would serve a user for instance a

712
00:31:36,899 --> 00:31:40,679
container images or whatever with the

713
00:31:40,679 --> 00:31:44,100
cool clickable file with a nice icon and

714
00:31:44,100 --> 00:31:46,080
a bunch of dlls

715
00:31:46,080 --> 00:31:49,100
like uh some of them just the normal

716
00:31:49,100 --> 00:31:53,039
legitimate ones but one you forward to

717
00:31:53,039 --> 00:31:55,679
uh one that this has another name for

718
00:31:55,679 --> 00:31:59,159
instance in the score Ori to dll

719
00:31:59,159 --> 00:32:01,260
and then once the user double clicks the

720
00:32:01,260 --> 00:32:02,880
xll

721
00:32:02,880 --> 00:32:05,220
everything will be loaded

722
00:32:05,220 --> 00:32:08,279
after the user also confirms the

723
00:32:08,279 --> 00:32:11,880
security warning and we get a shell

724
00:32:11,880 --> 00:32:14,779
code execution

725
00:32:16,640 --> 00:32:20,159
mitigations also in this case are

726
00:32:20,159 --> 00:32:22,140
basically the same as for any dll

727
00:32:22,140 --> 00:32:26,039
ghosting or dll hijacking attack so uh

728
00:32:26,039 --> 00:32:28,260
you can specify the full path the full

729
00:32:28,260 --> 00:32:30,659
installation path well if that is always

730
00:32:30,659 --> 00:32:32,700
the same for your your installation or

731
00:32:32,700 --> 00:32:35,159
for your add-in that otherwise you can

732
00:32:35,159 --> 00:32:37,320
also set different Linker options

733
00:32:37,320 --> 00:32:39,899
so Linker options to look at a specific

734
00:32:39,899 --> 00:32:42,779
application directory or to always

735
00:32:42,779 --> 00:32:46,799
require a science dll so that this xll

736
00:32:46,799 --> 00:32:50,340
will only load signed dlls or this dlls

737
00:32:50,340 --> 00:32:52,020
has to be signed

738
00:32:52,020 --> 00:32:56,899
you can also set the search or the

739
00:32:56,899 --> 00:33:00,140
defaults dll directories

740
00:33:00,140 --> 00:33:03,120
and change the search order to not look

741
00:33:03,120 --> 00:33:04,880
at the current directory for instance

742
00:33:04,880 --> 00:33:07,860
and you have to do that before the load

743
00:33:07,860 --> 00:33:10,679
Library calls or you can set a delay

744
00:33:10,679 --> 00:33:14,220
load Imports Linker instruction

745
00:33:14,220 --> 00:33:16,080
for more information

746
00:33:16,080 --> 00:33:18,360
Link in description

747
00:33:18,360 --> 00:33:21,320
to summarize

748
00:33:22,860 --> 00:33:24,960
in our research we have found four

749
00:33:24,960 --> 00:33:27,659
different common vulnerable coding

750
00:33:27,659 --> 00:33:31,080
patterns we found them not only at

751
00:33:31,080 --> 00:33:34,019
Microsoft but it also other vendors that

752
00:33:34,019 --> 00:33:37,100
are publishing publicly accessible

753
00:33:37,100 --> 00:33:41,279
add-ins and macros and whatnot and we've

754
00:33:41,279 --> 00:33:44,399
also found this coding practices in

755
00:33:44,399 --> 00:33:46,440
public code GitHub projects and stack

756
00:33:46,440 --> 00:33:48,000
overflow

757
00:33:48,000 --> 00:33:50,460
added to that and

758
00:33:50,460 --> 00:33:53,460
if you're going if you would encounter

759
00:33:53,460 --> 00:33:55,860
an internal environment internal company

760
00:33:55,860 --> 00:33:58,559
environment you could potentially find a

761
00:33:58,559 --> 00:34:02,480
combination of any of these

762
00:34:03,720 --> 00:34:06,720
so what should we be doing with this

763
00:34:06,720 --> 00:34:08,159
well

764
00:34:08,159 --> 00:34:10,619
for the defenders in the room

765
00:34:10,619 --> 00:34:13,560
Office security settings are complex I

766
00:34:13,560 --> 00:34:15,540
am really not sure who makes the user

767
00:34:15,540 --> 00:34:18,060
interface there but he is a full brain

768
00:34:18,060 --> 00:34:20,040
mismatch with mine but I consider them

769
00:34:20,040 --> 00:34:21,960
complex

770
00:34:21,960 --> 00:34:25,379
we got these low docs files where we

771
00:34:25,379 --> 00:34:27,060
take files out of context in the office

772
00:34:27,060 --> 00:34:28,619
world and then suddenly they do

773
00:34:28,619 --> 00:34:29,820
something different than what we

774
00:34:29,820 --> 00:34:30,839
intended

775
00:34:30,839 --> 00:34:33,480
so what we do with this

776
00:34:33,480 --> 00:34:35,639
well we probably want to reconsider your

777
00:34:35,639 --> 00:34:38,339
trusted Publishers because we've shown

778
00:34:38,339 --> 00:34:40,918
you a lot of problems where the very

779
00:34:40,918 --> 00:34:42,659
likely to shown a prompt

780
00:34:42,659 --> 00:34:44,280
some of our companies have like 10

781
00:34:44,280 --> 00:34:46,560
parties they trust like all the big the

782
00:34:46,560 --> 00:34:48,119
big name vendors and we got a couple of

783
00:34:48,119 --> 00:34:50,159
them that would certainly fly through so

784
00:34:50,159 --> 00:34:52,320
there will be no warning so consider

785
00:34:52,320 --> 00:34:54,540
whom you trust

786
00:34:54,540 --> 00:34:57,300
if you are yourself in the process of

787
00:34:57,300 --> 00:34:59,339
signing macros

788
00:34:59,339 --> 00:35:02,160
do a code review we have shown shown you

789
00:35:02,160 --> 00:35:03,900
four four patterns you should avoid

790
00:35:03,900 --> 00:35:06,119
there may be more in the future but at

791
00:35:06,119 --> 00:35:08,400
least avoid these four

792
00:35:08,400 --> 00:35:11,040
and then there's a challenge I mean

793
00:35:11,040 --> 00:35:13,400
you can have these signatures time

794
00:35:13,400 --> 00:35:16,619
timestamp signs where this the signature

795
00:35:16,619 --> 00:35:19,440
will remain valid after expiration of

796
00:35:19,440 --> 00:35:22,140
the certificate which makes life easier

797
00:35:22,140 --> 00:35:24,359
in terms of life cycle

798
00:35:24,359 --> 00:35:26,579
but yes how do we ever revoke these

799
00:35:26,579 --> 00:35:29,640
files so really make that ballot with

800
00:35:29,640 --> 00:35:32,220
that balance very deliberate

801
00:35:32,220 --> 00:35:34,140
because these files they're now out

802
00:35:34,140 --> 00:35:36,180
there if someone stole them you can't do

803
00:35:36,180 --> 00:35:39,078
anything on it anymore

804
00:35:39,180 --> 00:35:42,900
from the offensive viewpoint

805
00:35:42,900 --> 00:35:45,240
well there are many of these files we

806
00:35:45,240 --> 00:35:46,740
just started the hunt

807
00:35:46,740 --> 00:35:50,180
we are certainly not complete

808
00:35:50,400 --> 00:35:52,800
and revoking age files is hard so once

809
00:35:52,800 --> 00:35:54,300
you have your hands on it

810
00:35:54,300 --> 00:35:56,700
they can hardly take it away this is

811
00:35:56,700 --> 00:35:57,480
cool

812
00:35:57,480 --> 00:35:59,460
and they actually because this is a

813
00:35:59,460 --> 00:36:01,140
trusted file for a lot of companies it's

814
00:36:01,140 --> 00:36:03,900
already bypassing MZ so brings us a lot

815
00:36:03,900 --> 00:36:06,240
of value in that in that sense

816
00:36:06,240 --> 00:36:08,280
so if you're in an operation

817
00:36:08,280 --> 00:36:10,619
and you are just landed on the

818
00:36:10,619 --> 00:36:12,000
workstation

819
00:36:12,000 --> 00:36:14,880
and you're like this looks like very

820
00:36:14,880 --> 00:36:16,920
much accurate High secure environments

821
00:36:16,920 --> 00:36:18,660
they have all the security monitoring in

822
00:36:18,660 --> 00:36:19,680
place

823
00:36:19,680 --> 00:36:21,480
just check what the trusted Publishers

824
00:36:21,480 --> 00:36:23,280
are if they have like this internal

825
00:36:23,280 --> 00:36:25,680
trusted publisher just download all the

826
00:36:25,680 --> 00:36:27,060
documents that are signs that the

827
00:36:27,060 --> 00:36:29,099
markers in it and start analyzing it

828
00:36:29,099 --> 00:36:30,540
offline

829
00:36:30,540 --> 00:36:33,720
and if you have something wow

830
00:36:33,720 --> 00:36:36,480
initial access literal movement can also

831
00:36:36,480 --> 00:36:37,740
serve as long-term persistence they

832
00:36:37,740 --> 00:36:41,099
can't revoke it so a lot of goodies for

833
00:36:41,099 --> 00:36:42,180
us

834
00:36:42,180 --> 00:36:45,240
so for us we consider office the product

835
00:36:45,240 --> 00:36:48,379
that keeps on giving

836
00:36:48,780 --> 00:36:50,460
so

837
00:36:50,460 --> 00:36:54,630
thank you That's all folks

838
00:36:54,630 --> 00:37:03,780
[Applause]

839
00:37:03,780 --> 00:37:07,880
so questions on this

840
00:37:09,000 --> 00:37:10,920
all in for the beers

841
00:37:10,920 --> 00:37:13,640
the party

842
00:37:18,900 --> 00:37:21,859
yeah I will

843
00:37:41,339 --> 00:37:44,760
so so I'm can you rephrase the question

844
00:37:44,760 --> 00:37:46,380
once more because I somewhere missed it

845
00:37:46,380 --> 00:37:49,099
on the GPO part

846
00:37:55,500 --> 00:37:57,599
so so the question is whether the

847
00:37:57,599 --> 00:37:59,640
settings I showed in the GUI whether you

848
00:37:59,640 --> 00:38:01,320
can also do this like on a corporate

849
00:38:01,320 --> 00:38:04,200
level with group policies uh as far as I

850
00:38:04,200 --> 00:38:06,000
know yes you can control all these

851
00:38:06,000 --> 00:38:08,339
things with group policies and there are

852
00:38:08,339 --> 00:38:09,540
some things you can control with group

853
00:38:09,540 --> 00:38:11,099
policies which you can't do in the user

854
00:38:11,099 --> 00:38:13,560
interface so you should be able to at

855
00:38:13,560 --> 00:38:16,980
least have these Basics done uh on the

856
00:38:16,980 --> 00:38:19,680
with the group policies I think this

857
00:38:19,680 --> 00:38:23,099
file block setting thing that is a

858
00:38:23,099 --> 00:38:26,099
complex Beast with group policies uh but

859
00:38:26,099 --> 00:38:28,560
it should be doable at least I know

860
00:38:28,560 --> 00:38:30,720
clients that customers of us that did

861
00:38:30,720 --> 00:38:35,299
that at scale so it can be done

862
00:38:43,380 --> 00:38:44,579
so

863
00:38:44,579 --> 00:38:46,920
good question so question is is the mark

864
00:38:46,920 --> 00:38:49,200
of the web file blocking affecting this

865
00:38:49,200 --> 00:38:51,000
and to what extent is it affecting it

866
00:38:51,000 --> 00:38:54,300
yes so mark of the web still applies on

867
00:38:54,300 --> 00:38:55,619
all these files

868
00:38:55,619 --> 00:38:57,839
so that's where an introduction I also

869
00:38:57,839 --> 00:38:59,760
said this is not only about fishing

870
00:38:59,760 --> 00:39:02,220
because if you are inside there is no

871
00:39:02,220 --> 00:39:04,500
Mark of the web so you can that still

872
00:39:04,500 --> 00:39:07,500
works but yes you still have to use your

873
00:39:07,500 --> 00:39:09,960
uh your magic to get by to bypass Mark

874
00:39:09,960 --> 00:39:11,400
of the web if you want to pull this off

875
00:39:11,400 --> 00:39:15,020
as an initial entry methods

876
00:39:16,920 --> 00:39:21,619
so you towards the end recommended

877
00:39:21,619 --> 00:39:25,200
setting timestamps which if I understood

878
00:39:25,200 --> 00:39:28,200
correctly may not be effective

879
00:39:28,200 --> 00:39:30,660
because some of these signatures

880
00:39:30,660 --> 00:39:32,880
never expire was that

881
00:39:32,880 --> 00:39:35,700
so

882
00:39:35,700 --> 00:39:37,500
the thing is

883
00:39:37,500 --> 00:39:40,260
so when you sign files there's an option

884
00:39:40,260 --> 00:39:42,960
so to to explain this a bit you can sign

885
00:39:42,960 --> 00:39:44,280
a file now

886
00:39:44,280 --> 00:39:46,380
but the certificate is only valid for

887
00:39:46,380 --> 00:39:48,780
one year so what do you want to happen

888
00:39:48,780 --> 00:39:50,760
after the year it's a choice you can

889
00:39:50,760 --> 00:39:52,800
make you can do two things you can say

890
00:39:52,800 --> 00:39:54,839
after a year I need to resign

891
00:39:54,839 --> 00:39:58,260
or I now ask for the official time

892
00:39:58,260 --> 00:40:00,359
I proved the time I prove that the

893
00:40:00,359 --> 00:40:02,280
certificate was valid now and then I

894
00:40:02,280 --> 00:40:04,619
sign it now so that I have a proof that

895
00:40:04,619 --> 00:40:06,960
one at the moment I signed it that I was

896
00:40:06,960 --> 00:40:10,500
valid so it will be valid indefinite

897
00:40:10,500 --> 00:40:13,560
so in that sense it is more a matter of

898
00:40:13,560 --> 00:40:16,020
strategy do you want to resign your

899
00:40:16,020 --> 00:40:18,000
files every year or do you want to

900
00:40:18,000 --> 00:40:21,240
create these files that are ones that if

901
00:40:21,240 --> 00:40:23,700
one is really rule it is indefinitely

902
00:40:23,700 --> 00:40:26,700
vulnerable this is a balance to be made

903
00:40:26,700 --> 00:40:29,880
so we cannot say which one to take but

904
00:40:29,880 --> 00:40:33,240
it is yeah like both ends are having

905
00:40:33,240 --> 00:40:36,259
dark pros and cons

906
00:40:37,980 --> 00:40:42,079
also working uh

907
00:40:43,619 --> 00:40:45,599
so the question is this is also working

908
00:40:45,599 --> 00:40:48,480
on the SharePoint web exec

909
00:40:48,480 --> 00:40:51,200
ah

910
00:40:54,000 --> 00:40:57,660
I as far as I know that doesn't have a

911
00:40:57,660 --> 00:40:59,640
VBA micro engine they have these

912
00:40:59,640 --> 00:41:01,380
JavaScript add-ins only that they

913
00:41:01,380 --> 00:41:04,079
support but we didn't look deep into

914
00:41:04,079 --> 00:41:07,320
that into that that field

915
00:41:07,320 --> 00:41:09,560
foreign

916
00:41:14,660 --> 00:41:18,078
that's a long walk

917
00:41:31,079 --> 00:41:33,480
are you also able to add to the

918
00:41:33,480 --> 00:41:35,339
Blacklist as a company or is only

919
00:41:35,339 --> 00:41:38,220
Microsoft able to add to that list

920
00:41:38,220 --> 00:41:40,859
as a revocation method

921
00:41:40,859 --> 00:41:43,500
so that is a very interesting question

922
00:41:43,500 --> 00:41:45,780
which we will explore the upcoming ones

923
00:41:45,780 --> 00:41:48,180
with the submissions Etc what what will

924
00:41:48,180 --> 00:41:50,640
be going on there uh

925
00:41:50,640 --> 00:41:54,660
we don't know we we didn't identify a

926
00:41:54,660 --> 00:41:56,820
blacklist we just kind of guessed there

927
00:41:56,820 --> 00:41:58,920
is one because that's the only way how

928
00:41:58,920 --> 00:42:00,320
they could do it

929
00:42:00,320 --> 00:42:04,020
so this is also future work for us to

930
00:42:04,020 --> 00:42:06,119
like locate where it is in Excel where

931
00:42:06,119 --> 00:42:08,520
there's like really like a date where it

932
00:42:08,520 --> 00:42:10,320
needs to be signed after

933
00:42:10,320 --> 00:42:12,900
and whether that is something that yeah

934
00:42:12,900 --> 00:42:14,400
whatever it will be a problem that will

935
00:42:14,400 --> 00:42:16,619
really fix it like a block list I don't

936
00:42:16,619 --> 00:42:18,060
know I don't know

937
00:42:18,060 --> 00:42:20,540
thanks

938
00:42:26,160 --> 00:42:29,540
going once going twice

939
00:42:32,460 --> 00:42:34,560
thanks very much

940
00:42:34,560 --> 00:42:35,430
thank you

941
00:42:35,430 --> 00:42:40,310
[Applause]

