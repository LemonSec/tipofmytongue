1
00:00:02,940 --> 00:00:04,980
thank you everyone so that's the

2
00:00:04,980 --> 00:00:07,680
difference how we talk about things when

3
00:00:07,680 --> 00:00:09,900
I said I like riding bikes that meant I

4
00:00:09,900 --> 00:00:13,340
like riding motorcycles

5
00:00:16,619 --> 00:00:18,300
but that is fine that is not important

6
00:00:18,300 --> 00:00:19,920
here right now I believe

7
00:00:19,920 --> 00:00:22,380
so uh thanks for coming to this talk I

8
00:00:22,380 --> 00:00:25,439
could see uh some of my students from

9
00:00:25,439 --> 00:00:28,140
the three-day class uh thanks a lot for

10
00:00:28,140 --> 00:00:30,720
coming I uh you didn't did you not had

11
00:00:30,720 --> 00:00:33,059
enough of me I mean

12
00:00:33,059 --> 00:00:36,540
so I'm going to talk about the the talk

13
00:00:36,540 --> 00:00:38,040
title is of course A cool one on

14
00:00:38,040 --> 00:00:40,620
premises by passing MDI Microsoft's

15
00:00:40,620 --> 00:00:43,440
Defender for identity what's that before

16
00:00:43,440 --> 00:00:44,219
that

17
00:00:44,219 --> 00:00:47,219
let me uh make a quick introduction

18
00:00:47,219 --> 00:00:48,780
of me

19
00:00:48,780 --> 00:00:50,879
so you can find me on Twitter as nikhil

20
00:00:50,879 --> 00:00:52,680
underscore Mi Double T I'm the founder

21
00:00:52,680 --> 00:00:55,980
of altered security we are a Hands-On

22
00:00:55,980 --> 00:00:57,899
Enterprise Learning organization we

23
00:00:57,899 --> 00:00:59,820
focus on active directory and Azure

24
00:00:59,820 --> 00:01:02,160
security as of now laser shaft Focus you

25
00:01:02,160 --> 00:01:06,240
can find me on GitHub as samrat Ashok I

26
00:01:06,240 --> 00:01:08,640
used to maintain multiple open source

27
00:01:08,640 --> 00:01:12,619
tools like Nishan deploy deception Etc

28
00:01:12,619 --> 00:01:15,720
but not anymore that's that's a hell of

29
00:01:15,720 --> 00:01:18,540
stressful thing to do I'm very much

30
00:01:18,540 --> 00:01:20,820
interested in active directory security

31
00:01:20,820 --> 00:01:22,640
I've worked a lot on partial security

32
00:01:22,640 --> 00:01:24,780
on-prem that is active directory and

33
00:01:24,780 --> 00:01:27,360
Azure security mostly how to break into

34
00:01:27,360 --> 00:01:29,159
stuff where of course I have the

35
00:01:29,159 --> 00:01:31,560
permission to do so I've previously

36
00:01:31,560 --> 00:01:35,220
spoken multiple times at Defcon main

37
00:01:35,220 --> 00:01:37,920
stage Defcon Villages of different

38
00:01:37,920 --> 00:01:40,860
versions of blackhead I regularly speak

39
00:01:40,860 --> 00:01:42,659
and train at Brooklyn I think this is my

40
00:01:42,659 --> 00:01:45,180
sixth year consecutively to Brooklyn I

41
00:01:45,180 --> 00:01:46,860
mean when it was everything was locked

42
00:01:46,860 --> 00:01:50,100
down we were doing it virtually

43
00:01:50,100 --> 00:01:52,140
uh what we are going to take a look at

44
00:01:52,140 --> 00:01:53,820
is of course really very quickly we'll

45
00:01:53,820 --> 00:01:56,280
understand or try to understand what MDI

46
00:01:56,280 --> 00:02:00,000
is what it tries to address what are the

47
00:02:00,000 --> 00:02:02,220
threats that it tries to detect

48
00:02:02,220 --> 00:02:05,100
uh in form of alerts so we'll look at

49
00:02:05,100 --> 00:02:07,200
some of the alerts the more interesting

50
00:02:07,200 --> 00:02:10,380
ones then we'll see how we can bypass

51
00:02:10,380 --> 00:02:14,099
the alerts that MDI flags that okay this

52
00:02:14,099 --> 00:02:15,780
is not good that is we'll see how we can

53
00:02:15,780 --> 00:02:16,980
bypass that

54
00:02:16,980 --> 00:02:20,120
then some of the techniques

55
00:02:20,120 --> 00:02:24,599
that are are still not detected so MDI

56
00:02:24,599 --> 00:02:25,680
is

57
00:02:25,680 --> 00:02:27,239
of

58
00:02:27,239 --> 00:02:30,300
from the lineage of what used to be ATA

59
00:02:30,300 --> 00:02:32,220
Advanced threat analytics I I spoke

60
00:02:32,220 --> 00:02:33,959
about it like at Brooklyn and black at

61
00:02:33,959 --> 00:02:35,879
like five years ago

62
00:02:35,879 --> 00:02:38,520
and a lot of stuff interestingly is

63
00:02:38,520 --> 00:02:41,220
still the same or similar so we'll see

64
00:02:41,220 --> 00:02:42,900
that there are some things that are

65
00:02:42,900 --> 00:02:44,160
still not detected there are some

66
00:02:44,160 --> 00:02:46,980
techniques that MDI does not absolutely

67
00:02:46,980 --> 00:02:48,780
care about

68
00:02:48,780 --> 00:02:52,560
uh then recently uh response actions

69
00:02:52,560 --> 00:02:55,140
were introduced in MDI with the help of

70
00:02:55,140 --> 00:02:57,239
365 Defender that you can take some

71
00:02:57,239 --> 00:02:58,739
actions if you see that there is

72
00:02:58,739 --> 00:03:00,420
something fishy going on you can

73
00:03:00,420 --> 00:03:02,160
actually take some action so you'll see

74
00:03:02,160 --> 00:03:04,260
that are there any possibilities to

75
00:03:04,260 --> 00:03:06,420
abuse that there is at least one

76
00:03:06,420 --> 00:03:08,459
and then we'll of course discuss the

77
00:03:08,459 --> 00:03:09,720
limitations of the research that

78
00:03:09,720 --> 00:03:11,459
whatever I'm going to present what was

79
00:03:11,459 --> 00:03:13,860
the setup for that

80
00:03:13,860 --> 00:03:16,379
so what is MDI think of it as something

81
00:03:16,379 --> 00:03:18,420
of

82
00:03:18,420 --> 00:03:21,300
sitting between all the traffic that

83
00:03:21,300 --> 00:03:23,700
goes through from and through uh to your

84
00:03:23,700 --> 00:03:26,040
domain controllers and adfs servers

85
00:03:26,040 --> 00:03:28,620
usually still the focus is on domain

86
00:03:28,620 --> 00:03:31,860
controllers you run a sensor on your

87
00:03:31,860 --> 00:03:34,500
domain controllers that keep learning

88
00:03:34,500 --> 00:03:36,659
that keep analyzing logs and traffics

89
00:03:36,659 --> 00:03:37,920
what kind of traffic

90
00:03:37,920 --> 00:03:42,000
ldap DNS Kerberos sammer if this traffic

91
00:03:42,000 --> 00:03:43,680
all of this traffic that goes to and

92
00:03:43,680 --> 00:03:46,319
from to the DC's wherever you have the

93
00:03:46,319 --> 00:03:47,819
sensor setup

94
00:03:47,819 --> 00:03:51,840
it creates profiles for identities

95
00:03:51,840 --> 00:03:53,940
it would understand that okay this guy

96
00:03:53,940 --> 00:03:57,239
user one he he or she or they they

97
00:03:57,239 --> 00:03:59,580
always login from a particular machine

98
00:03:59,580 --> 00:04:02,280
this is the activity that they do this

99
00:04:02,280 --> 00:04:04,500
is how their Kerberos or ldap traffic

100
00:04:04,500 --> 00:04:07,260
looks like so it creates a profile

101
00:04:07,260 --> 00:04:09,659
for all the identities users crops

102
00:04:09,659 --> 00:04:10,680
machines

103
00:04:10,680 --> 00:04:13,439
of the usual learning time it differs a

104
00:04:13,439 --> 00:04:15,239
lot for different kind of alerts but you

105
00:04:15,239 --> 00:04:17,399
can take it or give and take a month

106
00:04:17,399 --> 00:04:19,798
right so it is a month when you set it

107
00:04:19,798 --> 00:04:22,160
up it takes a month to understand it

108
00:04:22,160 --> 00:04:25,800
uses the cloud and machine learning to

109
00:04:25,800 --> 00:04:28,740
build profiles and of course send stuff

110
00:04:28,740 --> 00:04:30,720
to the cloud that is that is understood

111
00:04:30,720 --> 00:04:32,160
here

112
00:04:32,160 --> 00:04:35,460
now once the profiles are set it starts

113
00:04:35,460 --> 00:04:37,680
looking for anomalies that okay I see

114
00:04:37,680 --> 00:04:41,100
you you never used let's say a TGT a

115
00:04:41,100 --> 00:04:43,979
ticket granting ticket that uses rc4 but

116
00:04:43,979 --> 00:04:47,040
here you have that is the kind of stuff

117
00:04:47,040 --> 00:04:50,699
that MDA starts alerting you about

118
00:04:50,699 --> 00:04:53,160
that is any deviation from the normal

119
00:04:53,160 --> 00:04:55,259
behavior you have an anomaly there would

120
00:04:55,259 --> 00:04:57,240
be a detection

121
00:04:57,240 --> 00:05:01,080
now the alerts are split into different

122
00:05:01,080 --> 00:05:03,840
phases of of an attack or a kill chain

123
00:05:03,840 --> 00:05:05,400
reckon

124
00:05:05,400 --> 00:05:08,040
compromise credentials little movement

125
00:05:08,040 --> 00:05:11,160
domain dominance and exfiltration

126
00:05:11,160 --> 00:05:12,360
so

127
00:05:12,360 --> 00:05:15,240
MDI was previously known as ATP prior to

128
00:05:15,240 --> 00:05:16,919
that it was ATA

129
00:05:16,919 --> 00:05:20,160
though the focus has always been on

130
00:05:20,160 --> 00:05:22,199
domain dominance that is if you have

131
00:05:22,199 --> 00:05:24,000
escalated your privileges if you have

132
00:05:24,000 --> 00:05:25,680
compromised some high privilege accounts

133
00:05:25,680 --> 00:05:28,080
then how do you hold on to them if you

134
00:05:28,080 --> 00:05:29,880
hold on to them then ATA would be there

135
00:05:29,880 --> 00:05:32,100
so domain dominance is something that

136
00:05:32,100 --> 00:05:35,460
ATA focuses a lot on now recently it has

137
00:05:35,460 --> 00:05:38,039
also started going for the Recon phase

138
00:05:38,039 --> 00:05:41,340
that is just to try and stop a threat

139
00:05:41,340 --> 00:05:43,080
actor or an attacker right there in the

140
00:05:43,080 --> 00:05:44,340
beginning so that has been very

141
00:05:44,340 --> 00:05:47,400
interesting to look at actually

142
00:05:47,400 --> 00:05:48,840
so

143
00:05:48,840 --> 00:05:51,660
how do you bypass I mean I plan to have

144
00:05:51,660 --> 00:05:53,280
this and the next one the open

145
00:05:53,280 --> 00:05:55,320
discussion on MDI I wanted to have it

146
00:05:55,320 --> 00:05:57,419
actually later on but figured out that

147
00:05:57,419 --> 00:05:59,100
it would be better if we discuss it

148
00:05:59,100 --> 00:06:00,780
earlier before we start looking at

149
00:06:00,780 --> 00:06:04,320
individual alerts or bypasses

150
00:06:04,320 --> 00:06:06,000
so

151
00:06:06,000 --> 00:06:07,440
keep this in mind

152
00:06:07,440 --> 00:06:08,880
MDI

153
00:06:08,880 --> 00:06:11,759
is design it is supposed to detect

154
00:06:11,759 --> 00:06:14,759
careless attackers that is if you see a

155
00:06:14,759 --> 00:06:16,500
cool tool or technique that someone

156
00:06:16,500 --> 00:06:19,020
shared on GitHub let's say

157
00:06:19,020 --> 00:06:21,539
don't try it in a production environment

158
00:06:21,539 --> 00:06:26,220
of course right away right why if once

159
00:06:26,220 --> 00:06:28,259
again if there is a deviation what ATA

160
00:06:28,259 --> 00:06:30,479
has learned then there would be a

161
00:06:30,479 --> 00:06:33,139
detection please keep in mind that

162
00:06:33,139 --> 00:06:36,419
endpoint opsack is not all the opsec

163
00:06:36,419 --> 00:06:37,919
this is something that I've seen even

164
00:06:37,919 --> 00:06:39,840
you know the alpha right teams the

165
00:06:39,840 --> 00:06:43,620
better ones even for them this is a very

166
00:06:43,620 --> 00:06:45,539
common uh

167
00:06:45,539 --> 00:06:48,300
trade I would not call it call it a

168
00:06:48,300 --> 00:06:49,860
shortcoming or anything bad but yeah

169
00:06:49,860 --> 00:06:53,400
it's a common trait we focus a lot on

170
00:06:53,400 --> 00:06:55,080
the end point protection that is okay

171
00:06:55,080 --> 00:06:57,539
what is it it is MD or crowdstrike or

172
00:06:57,539 --> 00:06:59,759
whatever it is what is the EDR on a

173
00:06:59,759 --> 00:07:01,680
machine for example you would have tools

174
00:07:01,680 --> 00:07:03,720
like let's say seat belt or others for

175
00:07:03,720 --> 00:07:06,600
uh for the foothold

176
00:07:06,600 --> 00:07:08,400
our situation away and I said okay what

177
00:07:08,400 --> 00:07:09,960
is it running there

178
00:07:09,960 --> 00:07:13,500
have you seen have you tried to check if

179
00:07:13,500 --> 00:07:15,600
there is in any network or specifically

180
00:07:15,600 --> 00:07:17,880
identity based detection

181
00:07:17,880 --> 00:07:19,560
so please keep that in mind that

182
00:07:19,560 --> 00:07:22,139
endpoint opsack is not the only Offset

183
00:07:22,139 --> 00:07:26,039
you need not only take care of what you

184
00:07:26,039 --> 00:07:28,860
trigger on a machine but also on the

185
00:07:28,860 --> 00:07:30,660
identity part

186
00:07:30,660 --> 00:07:32,460
all right and if you mix this up because

187
00:07:32,460 --> 00:07:35,940
now it looks like that MDI is being

188
00:07:35,940 --> 00:07:39,300
brought closer to other Microsoft

189
00:07:39,300 --> 00:07:42,360
detection mechanisms in cloud in azure

190
00:07:42,360 --> 00:07:45,360
so for Azure when it when we talk about

191
00:07:45,360 --> 00:07:48,360
Azure Microsoft treats identity as the

192
00:07:48,360 --> 00:07:52,139
perimeter that is what you uh you probe

193
00:07:52,139 --> 00:07:53,699
that is what you compromise that is what

194
00:07:53,699 --> 00:07:56,340
you use so please keep that in mind that

195
00:07:56,340 --> 00:07:58,380
endpoint object is not the only thing

196
00:07:58,380 --> 00:08:00,180
that you should keep in mind right that

197
00:08:00,180 --> 00:08:02,639
you should care about

198
00:08:02,639 --> 00:08:06,060
yeah and as I said do not run simply a

199
00:08:06,060 --> 00:08:08,460
tool because because you find it to be

200
00:08:08,460 --> 00:08:10,560
to be cool or if it is new understand

201
00:08:10,560 --> 00:08:13,440
how it interacts with the DC

202
00:08:13,440 --> 00:08:15,979
right is it generating a lot of traffic

203
00:08:15,979 --> 00:08:19,740
is it running so pointed queries that

204
00:08:19,740 --> 00:08:20,819
stand out

205
00:08:20,819 --> 00:08:23,520
gel in with the environment that should

206
00:08:23,520 --> 00:08:25,620
be the goal if you do that then MDA

207
00:08:25,620 --> 00:08:29,400
would not even have a whiff as we'd see

208
00:08:29,400 --> 00:08:32,840
and always assume

209
00:08:35,760 --> 00:08:39,000
always assume that DCs are monitored

210
00:08:39,000 --> 00:08:42,599
right so I I wrote this point I'm making

211
00:08:42,599 --> 00:08:45,480
this point because I think that

212
00:08:45,480 --> 00:08:48,480
there is a fundamental problem how good

213
00:08:48,480 --> 00:08:51,600
attackers at least approach compromising

214
00:08:51,600 --> 00:08:53,100
an environment

215
00:08:53,100 --> 00:08:54,240
that's there is a certain

216
00:08:54,240 --> 00:08:55,860
high-handedness when we approach an

217
00:08:55,860 --> 00:08:57,420
environment that okay let's deal with

218
00:08:57,420 --> 00:08:58,560
these idiots

219
00:08:58,560 --> 00:09:00,720
so don't do that

220
00:09:00,720 --> 00:09:04,140
right assume that at least the domain

221
00:09:04,140 --> 00:09:06,060
controllers even if if it doesn't look

222
00:09:06,060 --> 00:09:08,339
like at the top assume that the domain

223
00:09:08,339 --> 00:09:10,320
controllers are going to be well kept

224
00:09:10,320 --> 00:09:11,760
and well monitored

225
00:09:11,760 --> 00:09:15,120
do not make assumptions that the the for

226
00:09:15,120 --> 00:09:16,920
example for whatever the reason the

227
00:09:16,920 --> 00:09:19,200
organization that you are targeting has

228
00:09:19,200 --> 00:09:21,000
no monitoring or anything like that on

229
00:09:21,000 --> 00:09:22,260
the DCs

230
00:09:22,260 --> 00:09:24,180
now when it comes to specifically to

231
00:09:24,180 --> 00:09:25,920
ttps

232
00:09:25,920 --> 00:09:28,080
some important things to keep in mind

233
00:09:28,080 --> 00:09:30,060
always question

234
00:09:30,060 --> 00:09:32,040
what are you running

235
00:09:32,040 --> 00:09:33,600
so for example

236
00:09:33,600 --> 00:09:35,279
does the traffic

237
00:09:35,279 --> 00:09:37,140
that your tool or technique generates

238
00:09:37,140 --> 00:09:39,120
does it that gel in with the existing

239
00:09:39,120 --> 00:09:42,779
one for example are there too many four

240
00:09:42,779 --> 00:09:44,940
six two forced logons that you are

241
00:09:44,940 --> 00:09:47,580
living on on multiple machines hunting

242
00:09:47,580 --> 00:09:50,580
for let's say local admin you run a

243
00:09:50,580 --> 00:09:52,560
query using Bloodhound or any YouTube I

244
00:09:52,560 --> 00:09:53,880
mean I like Bloodhound but in this case

245
00:09:53,880 --> 00:09:55,320
it is very noisy

246
00:09:55,320 --> 00:09:58,800
so any tool if you're running it is it

247
00:09:58,800 --> 00:10:01,140
leaving too many is it creating a

248
00:10:01,140 --> 00:10:03,959
traffic that stands out always keep that

249
00:10:03,959 --> 00:10:05,040
in mind

250
00:10:05,040 --> 00:10:07,320
uh the second one pretty interesting are

251
00:10:07,320 --> 00:10:10,500
you using rc4 I mean please we say I

252
00:10:10,500 --> 00:10:11,940
mean as an attacker we always say that

253
00:10:11,940 --> 00:10:13,500
okay look at this environment they are

254
00:10:13,500 --> 00:10:17,040
still using 2003 Server 2003 for example

255
00:10:17,040 --> 00:10:22,440
since Server 2008 AES rules usually AES

256
00:10:22,440 --> 00:10:25,380
rules any environment it is that what is

257
00:10:25,380 --> 00:10:28,800
used so don't use rc4 for replaying your

258
00:10:28,800 --> 00:10:30,060
credentials

259
00:10:30,060 --> 00:10:33,000
that would be very detectable not only

260
00:10:33,000 --> 00:10:35,399
by MDI anything that looks at it would

261
00:10:35,399 --> 00:10:37,680
know it right away I mean even if

262
00:10:37,680 --> 00:10:39,360
someone is running a simple Wireshark on

263
00:10:39,360 --> 00:10:41,100
the DC and passes that traffic they

264
00:10:41,100 --> 00:10:42,959
would even they would know that

265
00:10:42,959 --> 00:10:45,060
right so there's nothing magical that

266
00:10:45,060 --> 00:10:47,100
MDI does in this case

267
00:10:47,100 --> 00:10:49,140
so make sure that you use AES it has

268
00:10:49,140 --> 00:10:51,300
been close to 15 years now

269
00:10:51,300 --> 00:10:53,760
since AES has been used a lot in in

270
00:10:53,760 --> 00:10:57,959
Kerberos or therefore ldap

271
00:10:57,959 --> 00:11:00,120
now one thing that I specifically found

272
00:11:00,120 --> 00:11:03,300
out while working on this talk was MDI

273
00:11:03,300 --> 00:11:06,360
does not like you

274
00:11:06,360 --> 00:11:09,600
making point in pointed ldap queries

275
00:11:09,600 --> 00:11:10,680
anymore

276
00:11:10,680 --> 00:11:12,839
right so what used to be even my

277
00:11:12,839 --> 00:11:14,399
recommendation that last talk that I

278
00:11:14,399 --> 00:11:16,380
that I gave at Brooklyn was about

279
00:11:16,380 --> 00:11:18,779
creating deceptions decoy accounts in

280
00:11:18,779 --> 00:11:21,120
active directory so I I distinctly

281
00:11:21,120 --> 00:11:23,700
remember my my focus on that class on

282
00:11:23,700 --> 00:11:26,519
the in the talk was if there is a tool

283
00:11:26,519 --> 00:11:28,860
that requests too many attributes for an

284
00:11:28,860 --> 00:11:30,779
active directory object that's not

285
00:11:30,779 --> 00:11:31,620
normal

286
00:11:31,620 --> 00:11:34,680
turns out that MDI creates an uh

287
00:11:34,680 --> 00:11:37,680
something exactly opposite to that if

288
00:11:37,680 --> 00:11:39,120
you are requesting all the attributes

289
00:11:39,120 --> 00:11:40,860
from an object

290
00:11:40,860 --> 00:11:43,620
and then filtering stuff offline MDI is

291
00:11:43,620 --> 00:11:46,019
absolutely fine with it but if you are

292
00:11:46,019 --> 00:11:47,880
running pointed queries that okay bring

293
00:11:47,880 --> 00:11:49,740
me the users who have resource based

294
00:11:49,740 --> 00:11:52,140
constraint delegation enabled

295
00:11:52,140 --> 00:11:53,339
detection

296
00:11:53,339 --> 00:11:54,899
that is what it is I mean pretty

297
00:11:54,899 --> 00:11:57,240
interesting probably

298
00:11:57,240 --> 00:12:00,060
the this food in future couple they

299
00:12:00,060 --> 00:12:01,920
would couple this up with mde the

300
00:12:01,920 --> 00:12:03,660
defender for endpoint so if you're

301
00:12:03,660 --> 00:12:05,760
requesting all the attributes still you

302
00:12:05,760 --> 00:12:07,380
are detected if you are going for

303
00:12:07,380 --> 00:12:09,540
specific attributes still that's not a

304
00:12:09,540 --> 00:12:10,800
good thing so probably that is going to

305
00:12:10,800 --> 00:12:13,380
be the future doesn't look very bright

306
00:12:13,380 --> 00:12:14,540
to me

307
00:12:14,540 --> 00:12:16,440
so

308
00:12:16,440 --> 00:12:18,480
one more thing is

309
00:12:18,480 --> 00:12:19,980
logs

310
00:12:19,980 --> 00:12:21,720
so as I said if you are let's say

311
00:12:21,720 --> 00:12:23,519
hunting for local admins or doing

312
00:12:23,519 --> 00:12:26,459
something that needs you to touch all

313
00:12:26,459 --> 00:12:27,779
the member machines for a large number

314
00:12:27,779 --> 00:12:29,880
of member machines in a domain

315
00:12:29,880 --> 00:12:31,920
what is the type of log that you're

316
00:12:31,920 --> 00:12:34,620
living is that pretty normal

317
00:12:34,620 --> 00:12:38,700
is a 4672 admin log on on the domain

318
00:12:38,700 --> 00:12:41,279
controller for a domain admin from your

319
00:12:41,279 --> 00:12:42,660
machine from your foothold is that

320
00:12:42,660 --> 00:12:45,000
normal it's not

321
00:12:45,000 --> 00:12:47,279
if you're let's say using domain admin

322
00:12:47,279 --> 00:12:48,839
credentials you are replaying that for

323
00:12:48,839 --> 00:12:50,040
the very first time

324
00:12:50,040 --> 00:12:52,079
from your foothold machine that's not

325
00:12:52,079 --> 00:12:54,000
normal that's an anomaly and that would

326
00:12:54,000 --> 00:12:56,279
be detected in fact

327
00:12:56,279 --> 00:12:59,339
it was this one that I could not bypass

328
00:12:59,339 --> 00:13:02,040
even when I tried if I'm replaying

329
00:13:02,040 --> 00:13:04,139
credentials of a user that has never

330
00:13:04,139 --> 00:13:05,820
logged on to a machine

331
00:13:05,820 --> 00:13:08,160
then there is no way that you can I mean

332
00:13:08,160 --> 00:13:10,620
in my experiments there was no way to

333
00:13:10,620 --> 00:13:11,760
avoid that

334
00:13:11,760 --> 00:13:13,560
so that's a very interesting and once

335
00:13:13,560 --> 00:13:14,300
again

336
00:13:14,300 --> 00:13:17,040
this is the reason we are discussing it

337
00:13:17,040 --> 00:13:19,380
before jumping into the alerts this is

338
00:13:19,380 --> 00:13:22,200
not something very specific to MDI even

339
00:13:22,200 --> 00:13:24,839
a seam that is well tuned would detect

340
00:13:24,839 --> 00:13:26,220
most of this

341
00:13:26,220 --> 00:13:29,160
but yeah if you can use it just by

342
00:13:29,160 --> 00:13:31,079
running an executable and getting a

343
00:13:31,079 --> 00:13:33,540
fancy console then that works as well in

344
00:13:33,540 --> 00:13:35,760
any case the detection is the key

345
00:13:35,760 --> 00:13:38,100
now one more thing is the second last

346
00:13:38,100 --> 00:13:39,000
one

347
00:13:39,000 --> 00:13:41,040
when you're forging or creating tickets

348
00:13:41,040 --> 00:13:43,440
Kerberos tickets

349
00:13:43,440 --> 00:13:45,360
or when you're playing with them make

350
00:13:45,360 --> 00:13:47,639
sure that they are compliant

351
00:13:47,639 --> 00:13:50,220
with the Kerberos policy so for example

352
00:13:50,220 --> 00:13:54,000
still even uh in 2022

353
00:13:54,000 --> 00:13:56,220
of when you're using mimicarts or any of

354
00:13:56,220 --> 00:13:58,320
its variants or anything anything that

355
00:13:58,320 --> 00:14:00,060
has the capability to force the tickets

356
00:14:00,060 --> 00:14:04,320
you would still are you checking what is

357
00:14:04,320 --> 00:14:05,760
the Kerberos policy in the Target

358
00:14:05,760 --> 00:14:08,220
environment so the one that comes baked

359
00:14:08,220 --> 00:14:10,680
in in active directory that is 10 hours

360
00:14:10,680 --> 00:14:12,480
for the ticket lifetime seven days for

361
00:14:12,480 --> 00:14:13,740
renewal

362
00:14:13,740 --> 00:14:16,260
so make sure if that is the one then

363
00:14:16,260 --> 00:14:17,760
your tickets are compliant with this

364
00:14:17,760 --> 00:14:20,220
otherwise there would be detection

365
00:14:20,220 --> 00:14:24,060
also since I believe October 2020 if I'm

366
00:14:24,060 --> 00:14:26,100
not wrong or 2021

367
00:14:26,100 --> 00:14:29,160
you cannot create a golden ticket for

368
00:14:29,160 --> 00:14:31,019
non-existent account prior to that it

369
00:14:31,019 --> 00:14:33,779
was possible so for 20 minutes you would

370
00:14:33,779 --> 00:14:36,540
not uh if you create a golden ticket for

371
00:14:36,540 --> 00:14:38,100
even a non-existent account it would

372
00:14:38,100 --> 00:14:39,420
work not anymore

373
00:14:39,420 --> 00:14:42,060
I believe it was October 2021 do not I

374
00:14:42,060 --> 00:14:44,160
do not recall the patch exactly but if

375
00:14:44,160 --> 00:14:45,600
that was patched

376
00:14:45,600 --> 00:14:48,600
uh prior to that I mean if you're

377
00:14:48,600 --> 00:14:50,639
creating a golden ticket with the

378
00:14:50,639 --> 00:14:53,000
username let's say who's your mama so

379
00:14:53,000 --> 00:14:56,820
that looks cool but that stands out

380
00:14:56,820 --> 00:14:58,880
so don't do that

381
00:14:58,880 --> 00:15:01,980
that is also something that we should

382
00:15:01,980 --> 00:15:04,680
keep in mind that is always ask how to

383
00:15:04,680 --> 00:15:07,199
be more silent you would know for

384
00:15:07,199 --> 00:15:08,519
example if you are running rubious to

385
00:15:08,519 --> 00:15:11,399
Kerberos to to get pgs's that you can

386
00:15:11,399 --> 00:15:15,120
come roast you would know that this is

387
00:15:15,120 --> 00:15:16,800
noisy

388
00:15:16,800 --> 00:15:18,300
you would understand okay if I am

389
00:15:18,300 --> 00:15:22,339
requesting let's say 135 k

390
00:15:22,339 --> 00:15:25,199
GS is that is service tickets

391
00:15:25,199 --> 00:15:27,540
that is nice you would know that so if

392
00:15:27,540 --> 00:15:29,220
you if you feel that okay this is this

393
00:15:29,220 --> 00:15:31,139
right no that's not right then

394
00:15:31,139 --> 00:15:33,300
if you feel like that it would generate

395
00:15:33,300 --> 00:15:35,519
a traffic would this be as always

396
00:15:35,519 --> 00:15:37,560
assumed would this be detected answer

397
00:15:37,560 --> 00:15:39,420
yes

398
00:15:39,420 --> 00:15:42,839
with these minor things very easy to

399
00:15:42,839 --> 00:15:45,839
spot things I mean when you look at it

400
00:15:45,839 --> 00:15:47,940
you would see that okay this is pretty

401
00:15:47,940 --> 00:15:50,639
simple when it is in front of you that

402
00:15:50,639 --> 00:15:52,920
looks pretty simple and it is just keep

403
00:15:52,920 --> 00:15:55,199
in mind very simple things very small

404
00:15:55,199 --> 00:15:56,459
things

405
00:15:56,459 --> 00:15:59,880
so this and the prior one these two

406
00:15:59,880 --> 00:16:02,040
things together you could not only avoid

407
00:16:02,040 --> 00:16:05,459
MDI I would not take names but other

408
00:16:05,459 --> 00:16:09,859
identity protection tools as well

409
00:16:10,860 --> 00:16:13,500
so some recognize please keep in mind

410
00:16:13,500 --> 00:16:15,540
that we have not I have not tested all

411
00:16:15,540 --> 00:16:18,360
of them the ones that I believe are a

412
00:16:18,360 --> 00:16:21,420
bit more harder to trigger I mean for

413
00:16:21,420 --> 00:16:23,959
example the second one that we have here

414
00:16:23,959 --> 00:16:27,000
which triggers when you use net.exe

415
00:16:27,000 --> 00:16:29,100
that's where we stop I mean no Brute

416
00:16:29,100 --> 00:16:30,959
Force related alerts Etc that is

417
00:16:30,959 --> 00:16:32,040
something I have not tested not

418
00:16:32,040 --> 00:16:34,260
recommended at all

419
00:16:34,260 --> 00:16:37,259
so for the very first one the alert is

420
00:16:37,259 --> 00:16:40,139
active directory attributes free con

421
00:16:40,139 --> 00:16:42,240
so I was able to trigger this when I was

422
00:16:42,240 --> 00:16:43,740
looking for resource-based constraint

423
00:16:43,740 --> 00:16:45,480
delegation and Kerberos

424
00:16:45,480 --> 00:16:47,519
pre-authentication disabled

425
00:16:47,519 --> 00:16:50,519
what is the way to avoid it

426
00:16:50,519 --> 00:16:53,339
uh request all the attributes and filter

427
00:16:53,339 --> 00:16:57,060
them offline then it is absolutely fine

428
00:16:57,060 --> 00:16:59,759
for summer don't use it is the way to

429
00:16:59,759 --> 00:17:00,660
bypass

430
00:17:00,660 --> 00:17:04,020
but I don't use net or net one that's

431
00:17:04,020 --> 00:17:06,179
that's not recommended another

432
00:17:06,179 --> 00:17:07,559
interesting one is the third one and

433
00:17:07,559 --> 00:17:10,199
this is something that has been carried

434
00:17:10,199 --> 00:17:12,959
over since the times of ATA so at least

435
00:17:12,959 --> 00:17:14,939
six years it has been the same thing if

436
00:17:14,939 --> 00:17:16,740
you run net session enumeration against

437
00:17:16,740 --> 00:17:19,619
the DC if you want to list the sessions

438
00:17:19,619 --> 00:17:21,540
on the DC then you would trigger this

439
00:17:21,540 --> 00:17:23,699
otherwise you won't because that's the

440
00:17:23,699 --> 00:17:25,740
direct communication with the machine DC

441
00:17:25,740 --> 00:17:28,140
is not involved if you are running it on

442
00:17:28,140 --> 00:17:30,799
a member machine

443
00:17:31,320 --> 00:17:33,900
so for example this is what the alert

444
00:17:33,900 --> 00:17:35,160
looks like and I have internet

445
00:17:35,160 --> 00:17:36,660
connection so I believe I could show you

446
00:17:36,660 --> 00:17:39,179
it right away I'll do that for the next

447
00:17:39,179 --> 00:17:41,660
ones actually

448
00:17:43,380 --> 00:17:46,320
so this is what the alert looks like

449
00:17:46,320 --> 00:17:49,220
both for rbcd and

450
00:17:49,220 --> 00:17:51,360
pre-auth disabled enumeration what is

451
00:17:51,360 --> 00:17:53,460
the way out let's say you want you can

452
00:17:53,460 --> 00:17:55,260
use tools like let's say the ad module

453
00:17:55,260 --> 00:17:57,840
even Power view or whatever you want I

454
00:17:57,840 --> 00:18:00,120
mean I'm I usually use any module that's

455
00:18:00,120 --> 00:18:02,160
why that there is an example for that we

456
00:18:02,160 --> 00:18:04,260
can request all the attributes and then

457
00:18:04,260 --> 00:18:06,660
filter it on the machine on our foothold

458
00:18:06,660 --> 00:18:09,660
that is so something that is running on

459
00:18:09,660 --> 00:18:11,520
the DC would simply see look at that

460
00:18:11,520 --> 00:18:14,820
okay a machine or a user requested some

461
00:18:14,820 --> 00:18:16,200
information that is what all that would

462
00:18:16,200 --> 00:18:20,360
be visible so this bypasses that

463
00:18:20,520 --> 00:18:24,600
ah for compromise credentials of three

464
00:18:24,600 --> 00:18:26,700
of them I found more most interesting

465
00:18:26,700 --> 00:18:29,340
one was the honey token activity

466
00:18:29,340 --> 00:18:30,480
so

467
00:18:30,480 --> 00:18:33,419
MDI provides you the capability to Mark

468
00:18:33,419 --> 00:18:35,820
a user as honey token so that is you

469
00:18:35,820 --> 00:18:38,220
create create a decoy user you mark it

470
00:18:38,220 --> 00:18:40,200
as a honey account or honey token

471
00:18:40,200 --> 00:18:40,980
account

472
00:18:40,980 --> 00:18:43,140
and if there is any interaction like

473
00:18:43,140 --> 00:18:45,780
credential reuse Etc of that account

474
00:18:45,780 --> 00:18:47,760
then there would be an alert

475
00:18:47,760 --> 00:18:50,760
so for this I mean this is one of one of

476
00:18:50,760 --> 00:18:52,320
one of the things that I've worked a lot

477
00:18:52,320 --> 00:18:53,600
on

478
00:18:53,600 --> 00:18:56,100
absolutely always

479
00:18:56,100 --> 00:18:58,679
check if an account is an active account

480
00:18:58,679 --> 00:19:00,840
look at the properties like logon count

481
00:19:00,840 --> 00:19:03,000
or account and bad password count of a

482
00:19:03,000 --> 00:19:05,520
user before you let's say try to replace

483
00:19:05,520 --> 00:19:08,940
credentials you don't want to use a

484
00:19:08,940 --> 00:19:10,919
dormant account or of course a decoy

485
00:19:10,919 --> 00:19:13,919
account right logon count is usually the

486
00:19:13,919 --> 00:19:15,360
best

487
00:19:15,360 --> 00:19:18,120
uh indicator that whether an account is

488
00:19:18,120 --> 00:19:20,640
an active one or not or if it is a decoy

489
00:19:20,640 --> 00:19:23,160
or not go couple it up with bad password

490
00:19:23,160 --> 00:19:25,080
count Etc and then you would be able to

491
00:19:25,080 --> 00:19:28,080
spot that so that's that is something I

492
00:19:28,080 --> 00:19:30,660
mean do not rush for domain admin you

493
00:19:30,660 --> 00:19:32,400
don't need it before lunch

494
00:19:32,400 --> 00:19:36,660
right so so not rush for it

495
00:19:36,660 --> 00:19:40,620
check if you are in the right direction

496
00:19:40,620 --> 00:19:42,360
now of course the second one that we

497
00:19:42,360 --> 00:19:44,280
have here suspected Kerberos expense

498
00:19:44,280 --> 00:19:47,520
exposure so broasting is something that

499
00:19:47,520 --> 00:19:49,080
is considered usually to be pretty

500
00:19:49,080 --> 00:19:51,000
silent when you're running carb roasting

501
00:19:51,000 --> 00:19:53,280
you leave just one four seven six nine

502
00:19:53,280 --> 00:19:56,039
carbos ticket requested on the DC which

503
00:19:56,039 --> 00:19:57,720
runs in thousands at least if not

504
00:19:57,720 --> 00:19:59,220
hundreds of thousands in any production

505
00:19:59,220 --> 00:20:00,299
environment

506
00:20:00,299 --> 00:20:02,100
so pretty hard to spot of course there

507
00:20:02,100 --> 00:20:04,320
are ways to look at encryption type Etc

508
00:20:04,320 --> 00:20:08,580
and that is what MDI also does

509
00:20:08,580 --> 00:20:12,240
in your 4769 what is two things actually

510
00:20:12,240 --> 00:20:14,580
one is

511
00:20:14,580 --> 00:20:17,220
in fact I'm uh let me take my back my

512
00:20:17,220 --> 00:20:20,100
words that used to be with up to ATP

513
00:20:20,100 --> 00:20:22,679
now encryption downgrade for curb

514
00:20:22,679 --> 00:20:24,240
roasting that has been actually removed

515
00:20:24,240 --> 00:20:26,520
from MDI so the the current detection

516
00:20:26,520 --> 00:20:29,520
that we have is if you if you use let's

517
00:20:29,520 --> 00:20:32,760
say run rubius curb roast

518
00:20:32,760 --> 00:20:35,340
that one what rubies does by default if

519
00:20:35,340 --> 00:20:37,500
you run it like that is it would check

520
00:20:37,500 --> 00:20:39,780
if there are multiple users with SP and

521
00:20:39,780 --> 00:20:42,539
it would request a service ticket or a

522
00:20:42,539 --> 00:20:45,240
TGs ticket for that in quick succession

523
00:20:45,240 --> 00:20:47,820
that's an enemy right that's that's

524
00:20:47,820 --> 00:20:48,900
pretty

525
00:20:48,900 --> 00:20:51,660
uh obvious that it is not a normal

526
00:20:51,660 --> 00:20:53,100
activity

527
00:20:53,100 --> 00:20:55,679
right so that's what an alert is

528
00:20:55,679 --> 00:20:59,160
how do you avoid that as we did here

529
00:20:59,160 --> 00:21:01,500
you look for you request all the

530
00:21:01,500 --> 00:21:03,120
properties and then look for them

531
00:21:03,120 --> 00:21:05,600
offline

532
00:21:06,120 --> 00:21:08,280
same goes for as Repro string so for

533
00:21:08,280 --> 00:21:11,820
Kerberos exp in s plane exposure

534
00:21:11,820 --> 00:21:14,160
this one this is the one that I was I

535
00:21:14,160 --> 00:21:17,360
triggered just whoops

536
00:21:19,080 --> 00:21:23,580
okay that's why I have screenshots

537
00:21:23,580 --> 00:21:24,900
so

538
00:21:24,900 --> 00:21:28,799
if you have Kerberos as spin exposure

539
00:21:28,799 --> 00:21:31,100
that means that someone requested

540
00:21:31,100 --> 00:21:34,080
service tickets that is TGs tickets in

541
00:21:34,080 --> 00:21:35,340
quick succession

542
00:21:35,340 --> 00:21:37,740
so how do we avoid that

543
00:21:37,740 --> 00:21:40,380
do I mean there is no need to use a

544
00:21:40,380 --> 00:21:42,059
battering ram here

545
00:21:42,059 --> 00:21:45,179
right simply enumerate using the First

546
00:21:45,179 --> 00:21:47,880
Command see what all users have or

547
00:21:47,880 --> 00:21:49,559
service principle name

548
00:21:49,559 --> 00:21:54,080
and request or ticket one at a time

549
00:21:55,440 --> 00:21:58,860
more than that and MDI doesn't like it

550
00:21:58,860 --> 00:22:01,740
a pretty easy bypass just we just need

551
00:22:01,740 --> 00:22:04,500
to be a bit a bit smart I mean no need

552
00:22:04,500 --> 00:22:07,980
to modify your ttps at all

553
00:22:07,980 --> 00:22:10,520
so

554
00:22:10,620 --> 00:22:12,780
I was expecting I was not expecting this

555
00:22:12,780 --> 00:22:14,400
because I do have

556
00:22:14,400 --> 00:22:17,240
connection here

557
00:22:17,299 --> 00:22:20,360
let me

558
00:22:21,059 --> 00:22:22,980
okay just give me a second let me try it

559
00:22:22,980 --> 00:22:25,140
from a new

560
00:22:25,140 --> 00:22:26,880
oh browser

561
00:22:26,880 --> 00:22:29,940
so that I can show you that

562
00:22:29,940 --> 00:22:31,919
now let me run the

563
00:22:31,919 --> 00:22:33,780
I just looked at times let me run the

564
00:22:33,780 --> 00:22:36,059
recording of this so I recorded it just

565
00:22:36,059 --> 00:22:38,580
like what a couple of hours back

566
00:22:38,580 --> 00:22:40,679
so you know procrastinating to to the

567
00:22:40,679 --> 00:22:42,179
max

568
00:22:42,179 --> 00:22:44,659
so

569
00:22:45,780 --> 00:22:49,500
the idea is pretty simple if you run

570
00:22:49,500 --> 00:22:53,360
a rubius Kerberos like this

571
00:22:53,400 --> 00:22:57,200
uh there would be an alert

572
00:22:57,419 --> 00:23:01,700
right so we trigger the detection first

573
00:23:01,919 --> 00:23:05,039
ah and then once we see that there is a

574
00:23:05,039 --> 00:23:06,360
detection

575
00:23:06,360 --> 00:23:09,360
we go ahead and enumerate it manually

576
00:23:09,360 --> 00:23:12,720
okay that's pretty fast I could not

577
00:23:12,720 --> 00:23:14,700
just give a second okay that's we are

578
00:23:14,700 --> 00:23:16,080
still triggering that

579
00:23:16,080 --> 00:23:18,240
so if you run it like this this triggers

580
00:23:18,240 --> 00:23:22,520
a kerberus SPN exposure

581
00:23:22,559 --> 00:23:26,178
four of the users if you could see here

582
00:23:26,700 --> 00:23:28,440
and that is what

583
00:23:28,440 --> 00:23:30,720
ah MD I would alert about so there would

584
00:23:30,720 --> 00:23:32,640
be a pause here because it takes like a

585
00:23:32,640 --> 00:23:35,900
few minutes before it shows up

586
00:23:37,500 --> 00:23:39,600
no that's not the one that's what even I

587
00:23:39,600 --> 00:23:42,980
was wondering when I was recording this

588
00:23:44,179 --> 00:23:45,900
and

589
00:23:45,900 --> 00:23:48,059
yeah that's where I pause it and then we

590
00:23:48,059 --> 00:23:49,980
have it you would see that four accounts

591
00:23:49,980 --> 00:23:52,440
that's what it complains about as well

592
00:23:52,440 --> 00:23:55,820
right so when we run it

593
00:23:59,220 --> 00:24:01,320
we saw that there are four Kerberos

594
00:24:01,320 --> 00:24:04,158
triple accounts here

595
00:24:08,880 --> 00:24:12,299
right and that is what of MDI complaints

596
00:24:12,299 --> 00:24:13,740
about as well that is

597
00:24:13,740 --> 00:24:15,780
buddy you were too fast that's that's

598
00:24:15,780 --> 00:24:18,179
what it says simply

599
00:24:18,179 --> 00:24:21,240
so we enumerate it

600
00:24:21,240 --> 00:24:24,480
uh manually and then requested

601
00:24:24,480 --> 00:24:27,799
One account at a time

602
00:24:28,320 --> 00:24:30,600
so that's I mean of course

603
00:24:30,600 --> 00:24:34,080
that is slower but that is a lot more

604
00:24:34,080 --> 00:24:35,880
silent

605
00:24:35,880 --> 00:24:38,700
so here we enumerate that

606
00:24:38,700 --> 00:24:40,679
using the ad module or whatever you want

607
00:24:40,679 --> 00:24:42,299
I personally use ad module because

608
00:24:42,299 --> 00:24:44,760
that's signed by Microsoft Works even

609
00:24:44,760 --> 00:24:49,700
with partial CLM and now I'm used to it

610
00:24:52,020 --> 00:24:53,940
so here we are enumerating that we

611
00:24:53,940 --> 00:24:56,700
import the module

612
00:24:56,700 --> 00:25:00,000
then we look for those users whose

613
00:25:00,000 --> 00:25:01,860
service principle name is not set to

614
00:25:01,860 --> 00:25:04,020
true that means that they are treated as

615
00:25:04,020 --> 00:25:05,940
service accounts

616
00:25:05,940 --> 00:25:08,760
we would found out uh four of them again

617
00:25:08,760 --> 00:25:10,559
of course that's that enumeration by

618
00:25:10,559 --> 00:25:12,240
dubious is of course not wrong so we

619
00:25:12,240 --> 00:25:13,500
will find out that there are four of

620
00:25:13,500 --> 00:25:16,260
them the one that we are interested in

621
00:25:16,260 --> 00:25:17,580
here is

622
00:25:17,580 --> 00:25:21,799
an account called SVC admin

623
00:25:22,380 --> 00:25:24,360
that's the account that we are going to

624
00:25:24,360 --> 00:25:29,539
curb roast now once again using rubius

625
00:25:32,820 --> 00:25:34,980
this time in place of running Kerberos

626
00:25:34,980 --> 00:25:36,900
simply I mean and this is pretty well

627
00:25:36,900 --> 00:25:39,240
documented if you look at GitHub of of

628
00:25:39,240 --> 00:25:41,220
rubies the rc4 object that's different

629
00:25:41,220 --> 00:25:43,380
thing that's not detected anymore but if

630
00:25:43,380 --> 00:25:45,120
you go for a single account

631
00:25:45,120 --> 00:25:46,860
so there's a typo here

632
00:25:46,860 --> 00:25:51,320
that I have to change to SVC admin

633
00:25:58,260 --> 00:26:00,900
and you would still have it but without

634
00:26:00,900 --> 00:26:02,400
detection I mean

635
00:26:02,400 --> 00:26:05,760
no detection for this one

636
00:26:05,760 --> 00:26:10,520
just because we were a bit more careful

637
00:26:14,059 --> 00:26:16,740
now lateral movement is something that

638
00:26:16,740 --> 00:26:20,820
that is one uh phase where MDI is

639
00:26:20,820 --> 00:26:23,159
lacking in a number of alerts I mean

640
00:26:23,159 --> 00:26:25,320
there are many but most of them are for

641
00:26:25,320 --> 00:26:26,940
taxable vulnerabilities that are pretty

642
00:26:26,940 --> 00:26:29,100
common however

643
00:26:29,100 --> 00:26:31,320
I mean why I say that it is lacking

644
00:26:31,320 --> 00:26:33,000
there there are three alerts that I was

645
00:26:33,000 --> 00:26:34,799
really interested in one was pass the

646
00:26:34,799 --> 00:26:37,320
ticket that is you extract a user or

647
00:26:37,320 --> 00:26:40,140
identities TGT from somewhere else and

648
00:26:40,140 --> 00:26:42,840
use it on your foothold I was unable to

649
00:26:42,840 --> 00:26:45,779
trigger it reliably so what I tried in

650
00:26:45,779 --> 00:26:47,760
this case was let's say you have a

651
00:26:47,760 --> 00:26:49,919
domain admin logged on to a DC I

652
00:26:49,919 --> 00:26:52,020
extracted the tdt from there and used it

653
00:26:52,020 --> 00:26:53,340
from my foothold

654
00:26:53,340 --> 00:26:56,340
uh no alert no detection I mean I'm not

655
00:26:56,340 --> 00:26:58,559
sure if it was my lab or what

656
00:26:58,559 --> 00:27:00,600
I've then extracted it from a machine

657
00:27:00,600 --> 00:27:02,880
another machine use it on another member

658
00:27:02,880 --> 00:27:06,720
server then it was alerted I mean the

659
00:27:06,720 --> 00:27:09,539
alert was there once but that's it so

660
00:27:09,539 --> 00:27:12,419
not sure that what was going on here so

661
00:27:12,419 --> 00:27:14,940
yeah here we don't know if we can bypass

662
00:27:14,940 --> 00:27:16,679
it or not I could not reliably trigger

663
00:27:16,679 --> 00:27:17,880
it

664
00:27:17,880 --> 00:27:19,860
the one that I could not

665
00:27:19,860 --> 00:27:23,460
was overpass the hash if you are using a

666
00:27:23,460 --> 00:27:25,860
credential for an account that never

667
00:27:25,860 --> 00:27:29,520
ever logged on from your foothold that

668
00:27:29,520 --> 00:27:31,260
was something that I was unable to

669
00:27:31,260 --> 00:27:33,779
bypass so let's say you use you use

670
00:27:33,779 --> 00:27:35,640
overpass the hash for let's say a domain

671
00:27:35,640 --> 00:27:38,100
admin from your foothold you use AES

672
00:27:38,100 --> 00:27:40,500
Keys Etc or whatever you can

673
00:27:40,500 --> 00:27:43,799
but there would still be a detection

674
00:27:43,799 --> 00:27:45,200
that

675
00:27:45,200 --> 00:27:48,179
no previous slogan was observed in the

676
00:27:48,179 --> 00:27:50,460
past 30 days for this account from this

677
00:27:50,460 --> 00:27:53,039
machine so that that makes sense

678
00:27:53,039 --> 00:27:54,720
that is something that I was not able to

679
00:27:54,720 --> 00:27:57,299
bypass interestingly

680
00:27:57,299 --> 00:28:00,179
MDI no longer alerts if you are using

681
00:28:00,179 --> 00:28:03,000
rc4 that is ntlm Hash for overpass the

682
00:28:03,000 --> 00:28:05,159
hash that used to be like staple of it

683
00:28:05,159 --> 00:28:07,679
when uh as long as it was up to at least

684
00:28:07,679 --> 00:28:08,700
ATP

685
00:28:08,700 --> 00:28:11,340
but there are no alerts documented and

686
00:28:11,340 --> 00:28:13,679
no alerts fired even if you are using

687
00:28:13,679 --> 00:28:14,820
rc4

688
00:28:14,820 --> 00:28:16,799
I'm not sure what is the reason behind

689
00:28:16,799 --> 00:28:18,779
that but that would be interesting to

690
00:28:18,779 --> 00:28:22,279
know why this one

691
00:28:22,679 --> 00:28:25,260
does not get triggered anymore

692
00:28:25,260 --> 00:28:28,740
it used to be not anymore

693
00:28:28,740 --> 00:28:30,960
uh another one that I was interested in

694
00:28:30,960 --> 00:28:34,080
is the use of Rogue Kerberos certificate

695
00:28:34,080 --> 00:28:35,880
but this is also something that I could

696
00:28:35,880 --> 00:28:36,960
not trigger

697
00:28:36,960 --> 00:28:38,279
I

698
00:28:38,279 --> 00:28:41,100
requested tickets of domain admin

699
00:28:41,100 --> 00:28:43,260
Enterprise admins use it from multiple

700
00:28:43,260 --> 00:28:45,000
machines once again no trigger on this

701
00:28:45,000 --> 00:28:48,360
so this is probably something that was

702
00:28:48,360 --> 00:28:52,679
just put out to kill a bit of noise on

703
00:28:52,679 --> 00:28:55,380
adcs abuse but it was never like really

704
00:28:55,380 --> 00:28:57,720
well created or something but that's how

705
00:28:57,720 --> 00:29:00,020
it is

706
00:29:00,539 --> 00:29:03,059
now when it comes to domain dominance as

707
00:29:03,059 --> 00:29:05,340
I said this is something that MDI

708
00:29:05,340 --> 00:29:07,620
actually tries to tackle a lot like

709
00:29:07,620 --> 00:29:09,299
really aggressively

710
00:29:09,299 --> 00:29:12,360
so one thing that I that always annoyed

711
00:29:12,360 --> 00:29:15,480
me was up to I think a couple of years

712
00:29:15,480 --> 00:29:18,120
back if you were using Vin RM or partial

713
00:29:18,120 --> 00:29:20,520
remoting it was not detected

714
00:29:20,520 --> 00:29:22,679
but now if you're using of course PS

715
00:29:22,679 --> 00:29:26,880
exec or wmi or remote wmi connection or

716
00:29:26,880 --> 00:29:29,340
winrm that is if you are using the the

717
00:29:29,340 --> 00:29:31,380
raw in RM or if you're using partial

718
00:29:31,380 --> 00:29:33,779
remoting or even if you're creating a

719
00:29:33,779 --> 00:29:36,360
service all of that is detected so four

720
00:29:36,360 --> 00:29:38,580
command execution methods dcom gets

721
00:29:38,580 --> 00:29:40,559
detected as well because it is at the

722
00:29:40,559 --> 00:29:44,880
end a remote RPC remote wmi what

723
00:29:44,880 --> 00:29:47,399
still goes undetected interestingly is

724
00:29:47,399 --> 00:29:51,539
if you modify an existing service

725
00:29:51,539 --> 00:29:55,020
you can simply use even the built-in SC

726
00:29:55,020 --> 00:29:57,480
dot exe for that if you have the

727
00:29:57,480 --> 00:29:59,460
permissions just modify an existing

728
00:29:59,460 --> 00:30:00,840
service

729
00:30:00,840 --> 00:30:03,720
make some changes to it that is change

730
00:30:03,720 --> 00:30:06,240
its bin path change the executable for

731
00:30:06,240 --> 00:30:07,260
the service

732
00:30:07,260 --> 00:30:10,620
an MDA is absolutely fine with it

733
00:30:10,620 --> 00:30:13,380
for example an open source tool scl a

734
00:30:13,380 --> 00:30:14,880
bit dated now I think a couple of years

735
00:30:14,880 --> 00:30:17,760
old that's still perfectly works for

736
00:30:17,760 --> 00:30:19,140
this

737
00:30:19,140 --> 00:30:21,720
absolutely no detection

738
00:30:21,720 --> 00:30:24,120
of one so this is pretty interesting

739
00:30:24,120 --> 00:30:27,120
because this is not a high ah

740
00:30:27,120 --> 00:30:31,500
level Alert in MDI but that is pretty uh

741
00:30:31,500 --> 00:30:33,720
regularly detected I mean pretty with

742
00:30:33,720 --> 00:30:36,299
with a lot of confidence very less

743
00:30:36,299 --> 00:30:38,220
number of false positives of course in a

744
00:30:38,220 --> 00:30:39,480
production environment it would have

745
00:30:39,480 --> 00:30:40,260
more

746
00:30:40,260 --> 00:30:42,480
but pretty reliable

747
00:30:42,480 --> 00:30:45,960
one more thing was uh is DC sync now DC

748
00:30:45,960 --> 00:30:47,640
sync is something that MDI goes crazy

749
00:30:47,640 --> 00:30:49,260
with

750
00:30:49,260 --> 00:30:52,679
all right high confidence high alert

751
00:30:52,679 --> 00:30:56,159
why is it triggered if there is a

752
00:30:56,159 --> 00:30:58,740
non-domain controller that sends a

753
00:30:58,740 --> 00:31:00,919
replication request which makes sense

754
00:31:00,919 --> 00:31:03,000
non-domain controller machines I mean

755
00:31:03,000 --> 00:31:05,460
DC's or domain controllers can send

756
00:31:05,460 --> 00:31:07,799
replication requests to each other but

757
00:31:07,799 --> 00:31:10,380
not other machines or users

758
00:31:10,380 --> 00:31:13,380
that doesn't make sense at least to MDI

759
00:31:13,380 --> 00:31:14,940
so how do you avoid this detection

760
00:31:14,940 --> 00:31:18,539
simply by impersonating a DC there are

761
00:31:18,539 --> 00:31:20,279
multiple ways of doing that

762
00:31:20,279 --> 00:31:22,020
if you have high enough privileges

763
00:31:22,020 --> 00:31:23,220
because we're talking about domain

764
00:31:23,220 --> 00:31:25,200
dominance right now you can let's say

765
00:31:25,200 --> 00:31:28,500
use the DC credentials the DC machine

766
00:31:28,500 --> 00:31:32,399
account credentials you can use the TGT

767
00:31:32,399 --> 00:31:34,080
of the DC if you can get your hands onto

768
00:31:34,080 --> 00:31:37,260
that you can very simply

769
00:31:37,260 --> 00:31:40,440
Forge or TGT that has a seed history and

770
00:31:40,440 --> 00:31:43,799
this also comes from the time of ATA

771
00:31:43,799 --> 00:31:45,659
that has always been the case like for

772
00:31:45,659 --> 00:31:49,200
six years now if you have extra SIDS

773
00:31:49,200 --> 00:31:51,360
that is Sid history of domain

774
00:31:51,360 --> 00:31:52,799
controllers or the Enterprise domain

775
00:31:52,799 --> 00:31:55,080
controllers MDA would be fine with that

776
00:31:55,080 --> 00:31:56,580
we'll see that

777
00:31:56,580 --> 00:31:59,159
so that is how how you do that in

778
00:31:59,159 --> 00:32:01,140
addition to that let's say if you have

779
00:32:01,140 --> 00:32:03,179
accounts like Azure ID connect or

780
00:32:03,179 --> 00:32:06,059
SharePoint admins that are allowed to

781
00:32:06,059 --> 00:32:08,100
run replication then it would be fine as

782
00:32:08,100 --> 00:32:10,279
well

783
00:32:10,740 --> 00:32:15,059
ah three more interesting set of three

784
00:32:15,059 --> 00:32:17,220
more interesting alerts I'm putting them

785
00:32:17,220 --> 00:32:18,360
together

786
00:32:18,360 --> 00:32:20,520
uh encryption downgrade non-existent

787
00:32:20,520 --> 00:32:23,520
account and time anomaly so for all of

788
00:32:23,520 --> 00:32:24,779
these three

789
00:32:24,779 --> 00:32:27,779
make sure this is for golden ticket if

790
00:32:27,779 --> 00:32:29,760
you are creating a Golden Ticket using

791
00:32:29,760 --> 00:32:33,539
rc4 of the krbt GT stop doing that

792
00:32:33,539 --> 00:32:37,200
that has been detected since 2016.

793
00:32:37,200 --> 00:32:40,679
right so always use AES keys please keep

794
00:32:40,679 --> 00:32:41,940
that in mind

795
00:32:41,940 --> 00:32:44,779
secondly

796
00:32:49,620 --> 00:32:51,120
creating a golden ticket for

797
00:32:51,120 --> 00:32:52,919
non-existing account doesn't work

798
00:32:52,919 --> 00:32:55,140
anymore but that would trigger a

799
00:32:55,140 --> 00:32:56,220
detection so that would be a double

800
00:32:56,220 --> 00:32:59,520
whammy right you you don't even get to

801
00:32:59,520 --> 00:33:01,860
have a valid ticket and you would still

802
00:33:01,860 --> 00:33:03,720
be detected so that doesn't that would

803
00:33:03,720 --> 00:33:07,260
would not look good in the debriefing

804
00:33:07,260 --> 00:33:09,659
so don't do that

805
00:33:09,659 --> 00:33:12,059
always go for a valid active account

806
00:33:12,059 --> 00:33:14,399
that that makes sense

807
00:33:14,399 --> 00:33:17,299
also the time and anomaly that

808
00:33:17,299 --> 00:33:20,640
triggers in two cases actually one if

809
00:33:20,640 --> 00:33:21,960
you let's say if you use mimicarts

810
00:33:21,960 --> 00:33:24,000
directly that creates a ticket that is

811
00:33:24,000 --> 00:33:26,760
valid for 10 years and has a renewable

812
00:33:26,760 --> 00:33:29,100
period of 10 years don't do that go for

813
00:33:29,100 --> 00:33:30,779
whatever is configured in the Target

814
00:33:30,779 --> 00:33:34,080
environment in addition to that

815
00:33:34,080 --> 00:33:37,140
do not leave your tickets in memory of a

816
00:33:37,140 --> 00:33:40,019
machine that is both a part of house

817
00:33:40,019 --> 00:33:42,179
cleaning once you are done with whatever

818
00:33:42,179 --> 00:33:45,120
activity you are doing and part of opsec

819
00:33:45,120 --> 00:33:47,580
so let's say if you create a very valid

820
00:33:47,580 --> 00:33:51,360
very sweet set TGT that complies with

821
00:33:51,360 --> 00:33:52,860
whatever the policy is there in the

822
00:33:52,860 --> 00:33:54,299
Target environment but if you leave it

823
00:33:54,299 --> 00:33:55,500
in in memory

824
00:33:55,500 --> 00:33:57,299
of your foothold

825
00:33:57,299 --> 00:33:59,580
you forget to purge it or remove it and

826
00:33:59,580 --> 00:34:02,100
you leave it in memory of your foothold

827
00:34:02,100 --> 00:34:04,919
if the process for some reason tries to

828
00:34:04,919 --> 00:34:07,320
validate that dgt with the DC there

829
00:34:07,320 --> 00:34:09,239
would be a detection so even if you were

830
00:34:09,239 --> 00:34:10,859
not using that

831
00:34:10,859 --> 00:34:13,320
it would still lead to a detection

832
00:34:13,320 --> 00:34:14,940
so always keep that in mind that you

833
00:34:14,940 --> 00:34:17,339
purge them or remove the tickets that

834
00:34:17,339 --> 00:34:19,679
would help so what do the detections

835
00:34:19,679 --> 00:34:22,440
look like for remote code execution so

836
00:34:22,440 --> 00:34:25,139
these are the four methods that MDI

837
00:34:25,139 --> 00:34:27,179
detects

838
00:34:27,179 --> 00:34:29,159
let's say we start

839
00:34:29,159 --> 00:34:31,800
and overpower we use overpass the hash

840
00:34:31,800 --> 00:34:33,599
to start a process as say let's say a

841
00:34:33,599 --> 00:34:36,119
domain admin then we use SC shell to

842
00:34:36,119 --> 00:34:37,859
modify an existing service that is

843
00:34:37,859 --> 00:34:40,199
absolutely not detected and this is

844
00:34:40,199 --> 00:34:42,060
something that I have actively all of

845
00:34:42,060 --> 00:34:44,099
the domain dominance actually that I

846
00:34:44,099 --> 00:34:45,418
actively tested in production

847
00:34:45,418 --> 00:34:47,179
environments of course with permission

848
00:34:47,179 --> 00:34:50,879
and nowhere was it triggered absolutely

849
00:34:50,879 --> 00:34:53,460
not

850
00:34:53,460 --> 00:34:54,839
so what we are doing that's that's

851
00:34:54,839 --> 00:34:56,940
pretty uh simple that we are doing we

852
00:34:56,940 --> 00:34:59,280
are deliberately use going as noisy as

853
00:34:59,280 --> 00:35:02,339
we can so if I show you

854
00:35:02,339 --> 00:35:05,900
the demonstration for this one

855
00:35:06,540 --> 00:35:11,240
uh that's remote code execution so

856
00:35:13,619 --> 00:35:15,180
so we are you would notice that we are

857
00:35:15,180 --> 00:35:17,220
deliberately using a partial reversal

858
00:35:17,220 --> 00:35:19,560
because that is very noisy or at least

859
00:35:19,560 --> 00:35:21,240
considered to be noisy even if it is not

860
00:35:21,240 --> 00:35:23,820
that's not cool anymore

861
00:35:23,820 --> 00:35:27,000
so we started listener

862
00:35:27,000 --> 00:35:29,520
and then we start a process with the

863
00:35:29,520 --> 00:35:31,380
Privileges of a domain admin so that was

864
00:35:31,380 --> 00:35:35,280
our listener here we use rubius to start

865
00:35:35,280 --> 00:35:37,260
a process with the Privileges of a

866
00:35:37,260 --> 00:35:39,660
domain admin

867
00:35:39,660 --> 00:35:43,640
this runs as the domain admin

868
00:35:46,500 --> 00:35:51,780
now here if we use SC shell.exe to run a

869
00:35:51,780 --> 00:35:54,060
partial reverse shell even that would

870
00:35:54,060 --> 00:35:57,078
not be detected

871
00:35:57,660 --> 00:36:00,740
what are we doing here

872
00:36:00,839 --> 00:36:03,320
ah

873
00:36:03,480 --> 00:36:07,680
using a c shell we are modifying on D

874
00:36:07,680 --> 00:36:09,359
cop DC that is the domain controller of

875
00:36:09,359 --> 00:36:11,760
my lab that I was using we are modifying

876
00:36:11,760 --> 00:36:13,800
xbl auth manager this is the example

877
00:36:13,800 --> 00:36:15,720
that you will find on the GitHub repo of

878
00:36:15,720 --> 00:36:18,599
essential it's it's that simple right

879
00:36:18,599 --> 00:36:22,380
and then we are simply asking it to

880
00:36:22,380 --> 00:36:25,260
change the executable part the bin path

881
00:36:25,260 --> 00:36:26,520
of the service

882
00:36:26,520 --> 00:36:30,980
to our payload so when you run this

883
00:36:34,260 --> 00:36:37,339
that's our payload

884
00:36:39,960 --> 00:36:41,520
now when you run this you would see that

885
00:36:41,520 --> 00:36:45,240
this was the original service path

886
00:36:45,240 --> 00:36:47,820
and that has been replaced

887
00:36:47,820 --> 00:36:49,440
by a payload

888
00:36:49,440 --> 00:36:52,200
and we immediately got a connect back

889
00:36:52,200 --> 00:36:54,240
and just to be absolutely sure I mean

890
00:36:54,240 --> 00:36:55,920
this is something I tested as I said in

891
00:36:55,920 --> 00:36:58,140
in a few production environments as well

892
00:36:58,140 --> 00:37:00,720
I deliberately ran noisy commands like

893
00:37:00,720 --> 00:37:02,520
who am I hosting that are supposed to be

894
00:37:02,520 --> 00:37:03,960
to be noisy

895
00:37:03,960 --> 00:37:06,300
not you're not supposed to use them

896
00:37:06,300 --> 00:37:08,700
right away but I mean absolutely nothing

897
00:37:08,700 --> 00:37:11,280
in fact that's not captured in in this

898
00:37:11,280 --> 00:37:14,339
video I even tried even more uh

899
00:37:14,339 --> 00:37:17,099
you know uh stupid things like trying to

900
00:37:17,099 --> 00:37:19,079
run partial remoting from here that

901
00:37:19,079 --> 00:37:21,480
somehow it gets triggered no MDA doesn't

902
00:37:21,480 --> 00:37:22,380
care

903
00:37:22,380 --> 00:37:24,180
right so because it has no detection

904
00:37:24,180 --> 00:37:27,259
Logic for it I believe

905
00:37:30,060 --> 00:37:34,619
so that was about remote code execution

906
00:37:34,619 --> 00:37:36,780
for DC sync

907
00:37:36,780 --> 00:37:39,060
make sure that you impersonate a domain

908
00:37:39,060 --> 00:37:40,200
controller

909
00:37:40,200 --> 00:37:42,540
and you would be fine

910
00:37:42,540 --> 00:37:44,760
ah so by default

911
00:37:44,760 --> 00:37:46,740
domain controllers and Enterprise domain

912
00:37:46,740 --> 00:37:49,680
controllers these two set of groups or

913
00:37:49,680 --> 00:37:52,260
identities have those rights there could

914
00:37:52,260 --> 00:37:54,599
be a few more depending on but by

915
00:37:54,599 --> 00:37:57,540
default these have so if you run DC sync

916
00:37:57,540 --> 00:38:00,420
using the credentials of a domain

917
00:38:00,420 --> 00:38:02,760
controller or a silver ticket or if you

918
00:38:02,760 --> 00:38:04,619
have extra seats that that impersonates

919
00:38:04,619 --> 00:38:07,740
a DC then you would be absolutely fine

920
00:38:07,740 --> 00:38:10,260
so how can you do that silver ticket is

921
00:38:10,260 --> 00:38:11,760
something I mean we will come back to

922
00:38:11,760 --> 00:38:14,460
this a momentary later on as well that

923
00:38:14,460 --> 00:38:17,280
is the best stuff that you have against

924
00:38:17,280 --> 00:38:18,660
MDI

925
00:38:18,660 --> 00:38:20,220
right you don't need to talk to the damn

926
00:38:20,220 --> 00:38:23,060
DC so there would be no detection at all

927
00:38:23,060 --> 00:38:27,780
very very silent in fact it is so silent

928
00:38:27,780 --> 00:38:30,540
I mean the reason is MDA doesn't care

929
00:38:30,540 --> 00:38:34,079
about the the Kerberos message type that

930
00:38:34,079 --> 00:38:36,960
is used here so even if you run a silver

931
00:38:36,960 --> 00:38:38,940
ticket against the DC

932
00:38:38,940 --> 00:38:42,240
where the MDI sensors are running it

933
00:38:42,240 --> 00:38:44,339
would still not detect it

934
00:38:44,339 --> 00:38:47,339
so that's that's like an evergreen

935
00:38:47,339 --> 00:38:48,900
bypass and once again that has been the

936
00:38:48,900 --> 00:38:50,880
case for past six years

937
00:38:50,880 --> 00:38:52,859
I mean not this time last time when I

938
00:38:52,859 --> 00:38:54,900
did it I duly reported it to Microsoft

939
00:38:54,900 --> 00:38:57,359
worked with their team they fixed some

940
00:38:57,359 --> 00:39:00,359
of the stuff that was back in 2017. they

941
00:39:00,359 --> 00:39:02,339
fixed some of the stuff but yeah they

942
00:39:02,339 --> 00:39:04,619
know it I mean My Hope

943
00:39:04,619 --> 00:39:07,619
right I I do not work with vendors a lot

944
00:39:07,619 --> 00:39:08,400
anymore

945
00:39:08,400 --> 00:39:10,579
because that's very frustrating

946
00:39:10,579 --> 00:39:13,440
but yeah I mean at least at that time

947
00:39:13,440 --> 00:39:15,300
they knew it

948
00:39:15,300 --> 00:39:18,180
uh other than that you can get a TGT of

949
00:39:18,180 --> 00:39:19,440
the DC let's say by abusing and

950
00:39:19,440 --> 00:39:20,760
constraint delegation just throwing out

951
00:39:20,760 --> 00:39:25,020
ideas how you can get the identity of a

952
00:39:25,020 --> 00:39:26,220
DC

953
00:39:26,220 --> 00:39:29,240
one very well known method is I think

954
00:39:29,240 --> 00:39:31,740
Benjamin though of course you know

955
00:39:31,740 --> 00:39:33,500
Benjamin right who wrote mimikats

956
00:39:33,500 --> 00:39:36,060
Benjamin I think tweeted about this back

957
00:39:36,060 --> 00:39:37,220
in

958
00:39:37,220 --> 00:39:40,380
2017-16 extra sets that is Sid history

959
00:39:40,380 --> 00:39:43,619
if you inject a set history of domain

960
00:39:43,619 --> 00:39:45,000
controllers or Enterprise domain

961
00:39:45,000 --> 00:39:48,180
controllers in your golden ticket

962
00:39:48,180 --> 00:39:50,820
MDI is fine with it because what I mean

963
00:39:50,820 --> 00:39:55,200
always try to see mdi's side what they

964
00:39:55,200 --> 00:39:57,780
look for okay here is a TGT what is the

965
00:39:57,780 --> 00:39:59,400
account that is requesting replication

966
00:39:59,400 --> 00:40:02,579
okay this is a DC next that is their

967
00:40:02,579 --> 00:40:05,880
profiling their regular activity would

968
00:40:05,880 --> 00:40:07,200
show you that okay

969
00:40:07,200 --> 00:40:09,720
I know that the domain controller would

970
00:40:09,720 --> 00:40:11,760
send replication requests this this

971
00:40:11,760 --> 00:40:14,760
makes sense that's that's why this would

972
00:40:14,760 --> 00:40:16,859
avoid any sort of detection we are

973
00:40:16,859 --> 00:40:18,660
injecting a sin history of Enterprise

974
00:40:18,660 --> 00:40:20,160
domain controller and the domain

975
00:40:20,160 --> 00:40:23,880
controllers group that's it nothing very

976
00:40:23,880 --> 00:40:25,380
special here

977
00:40:25,380 --> 00:40:27,680
you if you want you can find out

978
00:40:27,680 --> 00:40:30,060
accounts that have replication rights

979
00:40:30,060 --> 00:40:32,460
you can use something like this uh note

980
00:40:32,460 --> 00:40:34,320
that the search basis for my lab of

981
00:40:34,320 --> 00:40:35,760
course you you may like to change that

982
00:40:35,760 --> 00:40:37,440
when you are running it

983
00:40:37,440 --> 00:40:40,320
so uh what this Power view command does

984
00:40:40,320 --> 00:40:42,000
it looks for accounts that have

985
00:40:42,000 --> 00:40:44,579
replication rights so take a look at it

986
00:40:44,579 --> 00:40:48,800
before you run a DC sync attack

987
00:40:50,400 --> 00:40:53,160
uh I think I could show you the decision

988
00:40:53,160 --> 00:40:57,020
attack as well I have still have time

989
00:40:58,500 --> 00:41:01,280
so

990
00:41:02,460 --> 00:41:04,859
so of course you know what the decising

991
00:41:04,859 --> 00:41:06,480
attack is so what we are going to do we

992
00:41:06,480 --> 00:41:08,220
are creating

993
00:41:08,220 --> 00:41:11,660
a golden ticket with seed history of

994
00:41:11,660 --> 00:41:14,460
Enterprise domain controllers and domain

995
00:41:14,460 --> 00:41:15,540
controllers that is what we are doing

996
00:41:15,540 --> 00:41:17,720
here

997
00:41:20,220 --> 00:41:22,980
that would also serve as a demonstration

998
00:41:22,980 --> 00:41:25,079
of golden ticket forging a right golden

999
00:41:25,079 --> 00:41:29,480
ticket no it won't it won't

1000
00:41:34,920 --> 00:41:36,780
so we create a golden ticket with

1001
00:41:36,780 --> 00:41:39,359
history of DC's and Enterprise domain

1002
00:41:39,359 --> 00:41:41,779
controllers

1003
00:41:54,060 --> 00:41:55,920
so this injects it in the current

1004
00:41:55,920 --> 00:41:58,260
session here note that we are using PTT

1005
00:41:58,260 --> 00:42:00,780
here pass the ticket so it gets injected

1006
00:42:00,780 --> 00:42:04,040
in the current process

1007
00:42:04,500 --> 00:42:07,520
and once it is there we can go ahead

1008
00:42:07,520 --> 00:42:10,079
this is for the domain controller so we

1009
00:42:10,079 --> 00:42:13,440
can go ahead and request a replication

1010
00:42:13,440 --> 00:42:15,839
note the extra seats here

1011
00:42:15,839 --> 00:42:18,060
domain controllers and Enterprise domain

1012
00:42:18,060 --> 00:42:19,980
controllers that's what we have here

1013
00:42:19,980 --> 00:42:22,260
so now we can simply go ahead and enjoy

1014
00:42:22,260 --> 00:42:26,839
our DC sync absolutely no detection

1015
00:42:30,240 --> 00:42:33,259
all right

1016
00:42:34,740 --> 00:42:37,380
so yeah I show that there is no

1017
00:42:37,380 --> 00:42:39,359
detection but it actually at least takes

1018
00:42:39,359 --> 00:42:41,220
a couple of minutes to show up

1019
00:42:41,220 --> 00:42:44,480
but yeah no detection

1020
00:42:51,359 --> 00:42:54,300
ah one more domain dominance attack that

1021
00:42:54,300 --> 00:42:56,640
MDA absolutely hate is of course golden

1022
00:42:56,640 --> 00:42:58,440
ticket as we discussed

1023
00:42:58,440 --> 00:43:01,140
so just keep in mind I've been saying

1024
00:43:01,140 --> 00:43:03,000
this I think within 45 minutes for the

1025
00:43:03,000 --> 00:43:05,280
third time

1026
00:43:05,280 --> 00:43:08,460
make sure that you use one AES keys to

1027
00:43:08,460 --> 00:43:10,260
use a valid account

1028
00:43:10,260 --> 00:43:12,780
three your timestamps that is not

1029
00:43:12,780 --> 00:43:16,440
timestamps uh the the ticket renewal

1030
00:43:16,440 --> 00:43:18,359
ticket Lifetime and ticket renewal

1031
00:43:18,359 --> 00:43:20,880
lifetime that setting in your target

1032
00:43:20,880 --> 00:43:22,680
environment that should reflect in your

1033
00:43:22,680 --> 00:43:24,300
tickets that should not be something

1034
00:43:24,300 --> 00:43:26,700
that is different

1035
00:43:26,700 --> 00:43:29,700
of simple command like this achieves

1036
00:43:29,700 --> 00:43:31,079
that

1037
00:43:31,079 --> 00:43:33,480
all right so what we have here make sure

1038
00:43:33,480 --> 00:43:36,780
that when I say administrator here make

1039
00:43:36,780 --> 00:43:39,780
sure that you use a valid domain admin

1040
00:43:39,780 --> 00:43:41,280
administrator would not be the best

1041
00:43:41,280 --> 00:43:44,700
example a lot of organizations do not

1042
00:43:44,700 --> 00:43:47,040
use the built-in DNA I mean check if

1043
00:43:47,040 --> 00:43:48,900
they are using it many organizations

1044
00:43:48,900 --> 00:43:50,819
just keep this one as a break glass that

1045
00:43:50,819 --> 00:43:53,099
is used only in case of emergency so

1046
00:43:53,099 --> 00:43:55,680
make sure that what is the actual domain

1047
00:43:55,680 --> 00:43:57,900
admin that is used that is active how do

1048
00:43:57,900 --> 00:44:00,720
we find that out look at log on count

1049
00:44:00,720 --> 00:44:03,359
and bad password count bad PWD account

1050
00:44:03,359 --> 00:44:06,480
attributes so that would usually be

1051
00:44:06,480 --> 00:44:07,980
enough unless

1052
00:44:07,980 --> 00:44:11,099
of you are facing let's say a very good

1053
00:44:11,099 --> 00:44:14,220
deception or decoy tool there I mean

1054
00:44:14,220 --> 00:44:15,599
there are ways but I'm not going to go

1055
00:44:15,599 --> 00:44:17,819
into that there are ways to identify

1056
00:44:17,819 --> 00:44:20,160
still that if it is a valid account or

1057
00:44:20,160 --> 00:44:21,000
not

1058
00:44:21,000 --> 00:44:23,700
but usually in like 99 of the cases

1059
00:44:23,700 --> 00:44:27,000
logon count is something that lets you

1060
00:44:27,000 --> 00:44:29,339
know that okay this is a valid one or

1061
00:44:29,339 --> 00:44:31,520
not

1062
00:44:32,839 --> 00:44:36,180
policy and make sure of course AES keys

1063
00:44:36,180 --> 00:44:37,980
and make sure

1064
00:44:37,980 --> 00:44:42,359
that you have your ticket that is TGT

1065
00:44:42,359 --> 00:44:44,880
Lifetime and PGT renewal time set to

1066
00:44:44,880 --> 00:44:48,140
what the target uses

1067
00:44:49,200 --> 00:44:51,900
let me show you a demo of this one as

1068
00:44:51,900 --> 00:44:53,220
well so I've clubbed all of them

1069
00:44:53,220 --> 00:44:55,440
together in a single ticket of course we

1070
00:44:55,440 --> 00:44:57,300
can

1071
00:44:57,300 --> 00:44:58,200
um

1072
00:44:58,200 --> 00:45:01,460
take care of all of this

1073
00:45:02,220 --> 00:45:03,780
so that's

1074
00:45:03,780 --> 00:45:06,319
this one

1075
00:45:10,020 --> 00:45:13,020
so we will Forge or create a golden

1076
00:45:13,020 --> 00:45:14,339
ticket here

1077
00:45:14,339 --> 00:45:18,780
that uses the AES key of the krbtgt

1078
00:45:18,780 --> 00:45:21,660
sets the ticket Lifetime and renewal

1079
00:45:21,660 --> 00:45:23,640
lifetime to what the target uses and

1080
00:45:23,640 --> 00:45:26,339
uses of course a valid

1081
00:45:26,339 --> 00:45:28,200
of domain admin

1082
00:45:28,200 --> 00:45:29,640
an active one

1083
00:45:29,640 --> 00:45:31,140
I mean this is going to be pretty simple

1084
00:45:31,140 --> 00:45:33,119
right we'll run this and then there

1085
00:45:33,119 --> 00:45:35,280
would be no detection and to be honest

1086
00:45:35,280 --> 00:45:37,319
as I said in the beginning once you have

1087
00:45:37,319 --> 00:45:39,119
in front of it it is actually that

1088
00:45:39,119 --> 00:45:42,480
simple and I mean I lost all hope to be

1089
00:45:42,480 --> 00:45:46,319
honest with ATS ATP slash MDI but then I

1090
00:45:46,319 --> 00:45:49,140
saw last year that MDI is a trumpet that

1091
00:45:49,140 --> 00:45:51,180
Microsoft will pull up whenever there is

1092
00:45:51,180 --> 00:45:53,099
something they can't do anything about

1093
00:45:53,099 --> 00:45:54,599
right so if there is something that

1094
00:45:54,599 --> 00:45:57,300
can't be fixed then okay here is an MDI

1095
00:45:57,300 --> 00:45:59,339
detection for it so that is when I

1096
00:45:59,339 --> 00:46:00,900
started looking back at it again that

1097
00:46:00,900 --> 00:46:03,480
okay is it really that good now

1098
00:46:03,480 --> 00:46:05,640
turns out it is not

1099
00:46:05,640 --> 00:46:08,760
so it is just I mean they have a big

1100
00:46:08,760 --> 00:46:11,280
Suite of of offerings right now

1101
00:46:11,280 --> 00:46:13,500
I mean do not take otherwise I it's not

1102
00:46:13,500 --> 00:46:15,900
like that I don't like Microsoft it's

1103
00:46:15,900 --> 00:46:18,740
just I don't like them

1104
00:46:18,900 --> 00:46:21,180
so I mean not the people there of course

1105
00:46:21,180 --> 00:46:22,680
I mean I have friends over there but it

1106
00:46:22,680 --> 00:46:24,780
is as an organization you know when you

1107
00:46:24,780 --> 00:46:28,319
work on some some companies technology a

1108
00:46:28,319 --> 00:46:29,339
lot you have a love and hate

1109
00:46:29,339 --> 00:46:32,160
relationship with them you have work on

1110
00:46:32,160 --> 00:46:34,020
that but you simultaneously hate them to

1111
00:46:34,020 --> 00:46:36,420
your course so that's where I am

1112
00:46:36,420 --> 00:46:39,800
so no detection here

1113
00:46:41,579 --> 00:46:42,660
so

1114
00:46:42,660 --> 00:46:46,200
that was about the existing alerts

1115
00:46:46,200 --> 00:46:48,420
so the the ones that I

1116
00:46:48,420 --> 00:46:51,300
felt that are worth looking at there are

1117
00:46:51,300 --> 00:46:52,980
many more for example if you are using

1118
00:46:52,980 --> 00:46:54,839
let's say ntlm relaying attacks if

1119
00:46:54,839 --> 00:46:57,060
you're running a Brute Force attack if

1120
00:46:57,060 --> 00:46:59,280
you are abusing uh

1121
00:46:59,280 --> 00:47:01,619
some of the well-known vulnerabilities

1122
00:47:01,619 --> 00:47:04,079
that are already patched so that is

1123
00:47:04,079 --> 00:47:06,720
something that I do not consider part of

1124
00:47:06,720 --> 00:47:10,500
any careful attackers Playbook at all so

1125
00:47:10,500 --> 00:47:13,140
didn't bother to check them actually if

1126
00:47:13,140 --> 00:47:15,480
there is a way to avoid it

1127
00:47:15,480 --> 00:47:18,900
what is not detected a lot actually

1128
00:47:18,900 --> 00:47:22,500
I mean I wanted to place these in Phase

1129
00:47:22,500 --> 00:47:24,240
wise manufacturing okay this is domain

1130
00:47:24,240 --> 00:47:26,520
dominance this is that but in place of

1131
00:47:26,520 --> 00:47:28,800
that I I want to discuss them all of

1132
00:47:28,800 --> 00:47:31,440
them together so for example Diamond

1133
00:47:31,440 --> 00:47:33,180
ticket what is Diamond ticket this was

1134
00:47:33,180 --> 00:47:34,560
originally

1135
00:47:34,560 --> 00:47:37,980
uh discovered way back in 2015-16 the

1136
00:47:37,980 --> 00:47:39,540
Golden Era of active directory security

1137
00:47:39,540 --> 00:47:41,940
research

1138
00:47:41,940 --> 00:47:44,099
but yeah I mean never gained traction

1139
00:47:44,099 --> 00:47:46,200
recently a couple of guys one from

1140
00:47:46,200 --> 00:47:47,940
prostate SEC another one from Sam Paris

1141
00:47:47,940 --> 00:47:50,280
they picked this up and now this is

1142
00:47:50,280 --> 00:47:52,020
pretty interesting

1143
00:47:52,020 --> 00:47:54,720
so go uh so golden ticket is what where

1144
00:47:54,720 --> 00:47:56,940
you have the Kirby TGT account secrets

1145
00:47:56,940 --> 00:47:59,040
and you forge a TGT you create your own

1146
00:47:59,040 --> 00:48:02,099
in case of diamond ticket if you have

1147
00:48:02,099 --> 00:48:04,800
the Kirby TTT account secrets you pick

1148
00:48:04,800 --> 00:48:08,160
up an existing TGT decrypt it make

1149
00:48:08,160 --> 00:48:10,680
changes to it encrypt it again and then

1150
00:48:10,680 --> 00:48:14,040
send it so that's a lot more of sex safe

1151
00:48:14,040 --> 00:48:16,020
there would be a corresponding request

1152
00:48:16,020 --> 00:48:17,940
for the TGT that is one of the things

1153
00:48:17,940 --> 00:48:20,520
that was I mean that MDI doesn't use

1154
00:48:20,520 --> 00:48:22,619
but few other identity protections use

1155
00:48:22,619 --> 00:48:23,400
that

1156
00:48:23,400 --> 00:48:25,560
if there is no corresponding request for

1157
00:48:25,560 --> 00:48:27,900
a TGT that means it's an anomaly

1158
00:48:27,900 --> 00:48:30,000
MDA doesn't look at that but yeah some

1159
00:48:30,000 --> 00:48:33,540
of them do so it avoids that that's the

1160
00:48:33,540 --> 00:48:35,540
biggest part and you need not take care

1161
00:48:35,540 --> 00:48:40,020
of putting in the right times

1162
00:48:40,020 --> 00:48:43,020
the dgt lifetime or renewal time because

1163
00:48:43,020 --> 00:48:45,300
it would already be there you are simply

1164
00:48:45,300 --> 00:48:48,359
injecting something in a valid qgt you

1165
00:48:48,359 --> 00:48:50,940
pick it up decrypt it make changes that

1166
00:48:50,940 --> 00:48:52,859
is still history usually and then send

1167
00:48:52,859 --> 00:48:55,920
it back a lot more of sex safe

1168
00:48:55,920 --> 00:48:58,980
than golden ticket I don't see MD I mean

1169
00:48:58,980 --> 00:49:00,839
could be the very next day but I don't

1170
00:49:00,839 --> 00:49:04,020
see MDI detecting it anytime soon

1171
00:49:04,020 --> 00:49:06,480
right and as I said silver ticket that's

1172
00:49:06,480 --> 00:49:09,420
like the best thing that you would have

1173
00:49:09,420 --> 00:49:11,339
not only for this

1174
00:49:11,339 --> 00:49:15,599
uh for any for most identity protections

1175
00:49:15,599 --> 00:49:17,339
on-prem they don't care about silver

1176
00:49:17,339 --> 00:49:19,859
ticket that's a very uh

1177
00:49:19,859 --> 00:49:21,960
you know ugly brother of golden ticket

1178
00:49:21,960 --> 00:49:23,880
that no one cares about that's ugly

1179
00:49:23,880 --> 00:49:27,119
duckling but if you use it against the

1180
00:49:27,119 --> 00:49:29,940
DC it's no less than golden ticket and

1181
00:49:29,940 --> 00:49:33,300
absolutely absolutely silent

1182
00:49:33,300 --> 00:49:35,099
because the message type is something

1183
00:49:35,099 --> 00:49:36,839
that no one is looking at or interested

1184
00:49:36,839 --> 00:49:38,960
in

1185
00:49:39,060 --> 00:49:41,700
I mean I've not done that sort of

1186
00:49:41,700 --> 00:49:44,040
product development of course when it

1187
00:49:44,040 --> 00:49:46,220
comes to detecting

1188
00:49:46,220 --> 00:49:48,780
silver tickets but could be one of the

1189
00:49:48,780 --> 00:49:50,579
engineering reasons could be too many

1190
00:49:50,579 --> 00:49:53,099
requests I'm not sure but almost nothing

1191
00:49:53,099 --> 00:49:55,319
detects it even if you use it against

1192
00:49:55,319 --> 00:49:58,460
the domain controller

1193
00:49:58,740 --> 00:50:02,099
now some of the things that I wish

1194
00:50:02,099 --> 00:50:04,380
that MDA detects is one delegation

1195
00:50:04,380 --> 00:50:06,540
configuration so if you have let's say

1196
00:50:06,540 --> 00:50:08,819
if you some of them do

1197
00:50:08,819 --> 00:50:12,200
if you let's say uh

1198
00:50:12,240 --> 00:50:14,040
create unconstrained delegation or

1199
00:50:14,040 --> 00:50:15,540
constraint delegation or domain admin

1200
00:50:15,540 --> 00:50:16,619
does that

1201
00:50:16,619 --> 00:50:20,220
get an alert if someone configures a

1202
00:50:20,220 --> 00:50:21,480
resource-based constraint delegation

1203
00:50:21,480 --> 00:50:22,800
they should be an alert absolutely

1204
00:50:22,800 --> 00:50:24,180
nothing

1205
00:50:24,180 --> 00:50:25,740
if you make changes to user account

1206
00:50:25,740 --> 00:50:27,660
control like if you force that service

1207
00:50:27,660 --> 00:50:29,940
so I mean techniques that have been

1208
00:50:29,940 --> 00:50:33,900
known for many years now and if you

1209
00:50:33,900 --> 00:50:36,900
try to protect on-prem identity these

1210
00:50:36,900 --> 00:50:38,940
are exactly the identity based attacks

1211
00:50:38,940 --> 00:50:40,440
that attackers have been using for so

1212
00:50:40,440 --> 00:50:42,420
long not only good ones the bad ones as

1213
00:50:42,420 --> 00:50:43,140
well

1214
00:50:43,140 --> 00:50:45,540
so if you force that SPN if you force

1215
00:50:45,540 --> 00:50:48,540
disable I mean interestingly look at the

1216
00:50:48,540 --> 00:50:52,559
irony of this if you look for accounts

1217
00:50:52,559 --> 00:50:54,720
that have pre-auth disabled there is an

1218
00:50:54,720 --> 00:50:56,880
alert but when you configure that

1219
00:50:56,880 --> 00:50:58,500
there is nothing

1220
00:50:58,500 --> 00:51:01,319
so if an account that has pre-auth

1221
00:51:01,319 --> 00:51:03,660
enabled if it is disabled I believe I

1222
00:51:03,660 --> 00:51:04,800
mean there should be one there is

1223
00:51:04,800 --> 00:51:06,000
nothing like that

1224
00:51:06,000 --> 00:51:09,540
administry holder changes absolutely no

1225
00:51:09,540 --> 00:51:11,460
alert or detection

1226
00:51:11,460 --> 00:51:15,119
uh if you inject new ssps you know even

1227
00:51:15,119 --> 00:51:18,059
the the archaic movie cards one even

1228
00:51:18,059 --> 00:51:20,280
that is absolutely I mean doesn't

1229
00:51:20,280 --> 00:51:23,300
trigger anything at all

1230
00:51:23,339 --> 00:51:26,220
and replication rights I mean this is

1231
00:51:26,220 --> 00:51:28,619
something that is a bit debatable

1232
00:51:28,619 --> 00:51:30,720
adding of replication rights doesn't

1233
00:51:30,720 --> 00:51:32,520
trigger anything but when you use them

1234
00:51:32,520 --> 00:51:34,200
carelessly

1235
00:51:34,200 --> 00:51:36,660
that does so the last one is a bit

1236
00:51:36,660 --> 00:51:40,140
debitable but uh yeah at least adding

1237
00:51:40,140 --> 00:51:41,520
replication rights doesn't show up

1238
00:51:41,520 --> 00:51:43,700
anything

1239
00:51:44,339 --> 00:51:45,599
so

1240
00:51:45,599 --> 00:51:47,640
and of course check out my previous

1241
00:51:47,640 --> 00:51:49,260
presentation and you you would be

1242
00:51:49,260 --> 00:51:51,900
unpleasantly surprised that a lot of

1243
00:51:51,900 --> 00:51:55,800
stuff still works right I mean I was to

1244
00:51:55,800 --> 00:51:57,780
be honest I was worried that would this

1245
00:51:57,780 --> 00:52:00,059
lick look like that I've just repackaged

1246
00:52:00,059 --> 00:52:03,260
the talk now and replaced ATA by MDI

1247
00:52:03,260 --> 00:52:07,500
but thankfully uh because of some Recon

1248
00:52:07,500 --> 00:52:09,720
based alerts I can claim that okay this

1249
00:52:09,720 --> 00:52:11,700
is something new that I've I'm showing

1250
00:52:11,700 --> 00:52:12,660
here

1251
00:52:12,660 --> 00:52:15,240
uh the last thing that I would like to

1252
00:52:15,240 --> 00:52:17,579
discuss is and this is something that

1253
00:52:17,579 --> 00:52:20,400
I've tested only in my lab right now so

1254
00:52:20,400 --> 00:52:21,780
very recently I think just a couple of

1255
00:52:21,780 --> 00:52:23,700
months back Microsoft introduced

1256
00:52:23,700 --> 00:52:27,839
response action in MDI that is if you

1257
00:52:27,839 --> 00:52:29,579
look that okay you find out that okay

1258
00:52:29,579 --> 00:52:31,020
this user

1259
00:52:31,020 --> 00:52:34,740
looks like a compromised the best option

1260
00:52:34,740 --> 00:52:36,900
right now would be either to disable

1261
00:52:36,900 --> 00:52:38,940
this user or reset their password so

1262
00:52:38,940 --> 00:52:40,980
that whenever they log in again they

1263
00:52:40,980 --> 00:52:43,200
need to create a new password now if

1264
00:52:43,200 --> 00:52:45,540
that configuration is set up if that is

1265
00:52:45,540 --> 00:52:48,359
configured if hybrid identity is in use

1266
00:52:48,359 --> 00:52:49,740
that is there are so many conditions

1267
00:52:49,740 --> 00:52:50,700
here

1268
00:52:50,700 --> 00:52:52,680
and if you compromise a Security

1269
00:52:52,680 --> 00:52:55,680
administrator a user in Azure that has

1270
00:52:55,680 --> 00:52:57,900
Security administrator role assigned to

1271
00:52:57,900 --> 00:53:00,599
them a Security administrator can log on

1272
00:53:00,599 --> 00:53:03,660
to Defender 365 portal go to the user

1273
00:53:03,660 --> 00:53:04,880
actions

1274
00:53:04,880 --> 00:53:07,859
assuming that they do it for the right

1275
00:53:07,859 --> 00:53:10,980
user or we know it in advance we reset

1276
00:53:10,980 --> 00:53:12,960
the password of a user that has a path

1277
00:53:12,960 --> 00:53:15,540
to domain admin does not have the admin

1278
00:53:15,540 --> 00:53:17,760
count set to one that is it is not a

1279
00:53:17,760 --> 00:53:20,579
protected uh groups member

1280
00:53:20,579 --> 00:53:23,040
you reset that escalate to domain admin

1281
00:53:23,040 --> 00:53:26,160
move on to Azure ID connect extract the

1282
00:53:26,160 --> 00:53:27,540
credentials of the directory service

1283
00:53:27,540 --> 00:53:29,640
sync account and reset the password of a

1284
00:53:29,640 --> 00:53:31,920
global admin

1285
00:53:31,920 --> 00:53:36,180
if this sounds far-fetched no it is not

1286
00:53:36,180 --> 00:53:39,119
get ready to see this in your one of

1287
00:53:39,119 --> 00:53:41,339
your nearest threat reports what in six

1288
00:53:41,339 --> 00:53:43,559
months or something or probably earlier

1289
00:53:43,559 --> 00:53:46,200
right so that is a very valid attack

1290
00:53:46,200 --> 00:53:48,599
path I mean response actions when I was

1291
00:53:48,599 --> 00:53:50,819
discussing this yesterday uh in my in my

1292
00:53:50,819 --> 00:53:52,559
class I got to know that okay something

1293
00:53:52,559 --> 00:53:54,900
like that can be done using mde as well

1294
00:53:54,900 --> 00:53:56,700
pretty similar to this

1295
00:53:56,700 --> 00:54:00,540
so yeah interesting to have that rat

1296
00:54:00,540 --> 00:54:02,880
installed on all of your high privilege

1297
00:54:02,880 --> 00:54:04,980
machines

1298
00:54:04,980 --> 00:54:06,900
so finally what are the limitations of

1299
00:54:06,900 --> 00:54:08,339
the research

1300
00:54:08,339 --> 00:54:11,520
now I looked at only those alerts that

1301
00:54:11,520 --> 00:54:14,220
are related to functionality abuse no

1302
00:54:14,220 --> 00:54:16,920
cve or patched alerts or patched

1303
00:54:16,920 --> 00:54:18,900
vulnerabilities

1304
00:54:18,900 --> 00:54:21,059
the noisy attacks like brute force or

1305
00:54:21,059 --> 00:54:22,740
once again patched vulnerabilities that

1306
00:54:22,740 --> 00:54:25,440
is something that I didn't test adfs is

1307
00:54:25,440 --> 00:54:29,339
something that I wanted to but could not

1308
00:54:29,339 --> 00:54:32,400
so probably save it for later

1309
00:54:32,400 --> 00:54:34,380
uh

1310
00:54:34,380 --> 00:54:37,140
the whole end-to-end testing is done in

1311
00:54:37,140 --> 00:54:38,819
my lab and with permission of course in

1312
00:54:38,819 --> 00:54:41,579
two of production environments some of

1313
00:54:41,579 --> 00:54:42,960
the alerts I've tested in a few more

1314
00:54:42,960 --> 00:54:45,540
production environments but think still

1315
00:54:45,540 --> 00:54:48,359
think of it as something that is tried

1316
00:54:48,359 --> 00:54:50,460
in a lab

1317
00:54:50,460 --> 00:54:53,520
and probably if you couple MDI with of a

1318
00:54:53,520 --> 00:54:55,500
few more of

1319
00:54:55,500 --> 00:54:58,140
you know MDS Defenders Defenders

1320
00:54:58,140 --> 00:54:59,880
something from Microsoft then it could

1321
00:54:59,880 --> 00:55:01,680
be a bit more effective but right now

1322
00:55:01,680 --> 00:55:04,079
that is what it is

1323
00:55:04,079 --> 00:55:05,760
all right so

1324
00:55:05,760 --> 00:55:10,200
I think that would be all from me or do

1325
00:55:10,200 --> 00:55:13,079
we have any questions here

1326
00:55:13,079 --> 00:55:16,760
okay thank you

