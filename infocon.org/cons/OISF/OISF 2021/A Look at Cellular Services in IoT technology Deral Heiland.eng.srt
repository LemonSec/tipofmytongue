1
00:00:00,560 --> 00:00:03,360
real recording okay so our our next

2
00:00:03,360 --> 00:00:04,720
topic as uh

3
00:00:04,720 --> 00:00:06,640
our presenter next presenter is daryl

4
00:00:06,640 --> 00:00:09,519
highland uh a look at cellular services

5
00:00:09,519 --> 00:00:11,280
and iot technology

6
00:00:11,280 --> 00:00:13,599
so it's sounds pretty interesting

7
00:00:13,599 --> 00:00:17,279
combining iot and cellular services so

8
00:00:17,279 --> 00:00:19,279
his abstract with the submittal growth

9
00:00:19,279 --> 00:00:20,560
of iot

10
00:00:20,560 --> 00:00:22,400
technology continuing from industrial

11
00:00:22,400 --> 00:00:24,560
enterprise medical consumer

12
00:00:24,560 --> 00:00:27,119
to transportation iot there has been an

13
00:00:27,119 --> 00:00:29,840
expanding need to connect these devices

14
00:00:29,840 --> 00:00:32,320
no matter where they may be located

15
00:00:32,320 --> 00:00:34,000
to solve this problem we have cellular

16
00:00:34,000 --> 00:00:35,760
technology to the rescue

17
00:00:35,760 --> 00:00:37,680
during this presentation we're

18
00:00:37,680 --> 00:00:38,879
discussing

19
00:00:38,879 --> 00:00:40,960
various types of cellular services most

20
00:00:40,960 --> 00:00:43,120
often seen in iot

21
00:00:43,120 --> 00:00:45,200
we will be reviewing potential security

22
00:00:45,200 --> 00:00:46,719
risk impact along with

23
00:00:46,719 --> 00:00:49,039
examination of various vendors and

24
00:00:49,039 --> 00:00:49,920
products

25
00:00:49,920 --> 00:00:51,520
at the component level that are

26
00:00:51,520 --> 00:00:53,280
available also

27
00:00:53,280 --> 00:00:55,280
we'll be discussing various methods and

28
00:00:55,280 --> 00:00:57,120
concepts of how to approach evaluating

29
00:00:57,120 --> 00:00:59,039
the security of devices

30
00:00:59,039 --> 00:01:01,840
leveraging the cellular technology

31
00:01:01,840 --> 00:01:03,120
darrell's background

32
00:01:03,120 --> 00:01:04,959
is uh he's a principal security

33
00:01:04,959 --> 00:01:06,320
researcher

34
00:01:06,320 --> 00:01:09,360
of iot for rapid seven daryl's

35
00:01:09,360 --> 00:01:11,920
has over 25 years experience in

36
00:01:11,920 --> 00:01:13,920
information technology field and has

37
00:01:13,920 --> 00:01:16,560
held multiple positions including

38
00:01:16,560 --> 00:01:18,400
senior network analyst network

39
00:01:18,400 --> 00:01:20,400
administrator database manager

40
00:01:20,400 --> 00:01:22,479
financial systems manager and senior

41
00:01:22,479 --> 00:01:24,560
information security analyst

42
00:01:24,560 --> 00:01:27,200
over the last 15 plus years daryl's

43
00:01:27,200 --> 00:01:29,439
career has focused on security research

44
00:01:29,439 --> 00:01:32,000
security assessments pen testing and

45
00:01:32,000 --> 00:01:33,520
consulting for corporations and

46
00:01:33,520 --> 00:01:35,200
government agencies

47
00:01:35,200 --> 00:01:38,320
he's also conducted security research

48
00:01:38,320 --> 00:01:40,560
on numerous technical subjects releasing

49
00:01:40,560 --> 00:01:42,640
white papers blogs security advisories

50
00:01:42,640 --> 00:01:45,200
and presented information

51
00:01:45,200 --> 00:01:46,960
presented the information at numerous

52
00:01:46,960 --> 00:01:49,280
national and international conferences

53
00:01:49,280 --> 00:01:51,119
including black hat defcon schmuck on

54
00:01:51,119 --> 00:01:53,280
derbycon rsac

55
00:01:53,280 --> 00:01:56,000
hack in paris that was probably fun you

56
00:01:56,000 --> 00:01:57,040
know daryl's been

57
00:01:57,040 --> 00:01:59,200
interviewed and quoted by multiple media

58
00:01:59,200 --> 00:02:01,040
outlets and publications inc

59
00:02:01,040 --> 00:02:04,159
including abc world news chatter tv

60
00:02:04,159 --> 00:02:06,719
bbc consumer reports mit technical

61
00:02:06,719 --> 00:02:07,360
review

62
00:02:07,360 --> 00:02:11,440
sc magazine threat post and the register

63
00:02:11,440 --> 00:02:15,120
man you're a busy guy

64
00:02:15,120 --> 00:02:18,080
so uh let's let's welcome daryl uh for

65
00:02:18,080 --> 00:02:19,200
his presentation

66
00:02:19,200 --> 00:02:22,000
and uh looking forward to hearing about

67
00:02:22,000 --> 00:02:23,520
iot and cellular

68
00:02:23,520 --> 00:02:25,440
uh with the merging those technologies

69
00:02:25,440 --> 00:02:26,879
so i know uh

70
00:02:26,879 --> 00:02:28,480
there when i kind of go back oh just a

71
00:02:28,480 --> 00:02:30,720
little tidbit i was gonna maybe wait

72
00:02:30,720 --> 00:02:32,160
till afterwards but i thought i'd throw

73
00:02:32,160 --> 00:02:33,120
it out here now

74
00:02:33,120 --> 00:02:36,720
so daryl is one of our founders

75
00:02:36,720 --> 00:02:39,040
for ohio information security forum so

76
00:02:39,040 --> 00:02:40,319
you guys are here because of

77
00:02:40,319 --> 00:02:43,440
him so wouldn't you

78
00:02:43,440 --> 00:02:46,400
so so just

79
00:02:48,640 --> 00:02:52,400
so so oisf has been around for 15 years

80
00:02:52,400 --> 00:02:52,720
and

81
00:02:52,720 --> 00:02:55,920
and it's the part of the the you know

82
00:02:55,920 --> 00:02:57,440
that they're all uh putting that

83
00:02:57,440 --> 00:02:59,680
together so thank you for

84
00:02:59,680 --> 00:03:01,440
allowing us to be able to continue this

85
00:03:01,440 --> 00:03:03,599
for you so

86
00:03:03,599 --> 00:03:04,959
all right i'm going to switch this mic

87
00:03:04,959 --> 00:03:08,319
to you so you and then it's all yours

88
00:03:08,319 --> 00:03:11,760
yeah you're going to take andrew

89
00:03:11,760 --> 00:03:14,879
that's it that's his problem

90
00:03:15,920 --> 00:03:19,839
if i trip over these hurt myself

91
00:03:23,430 --> 00:03:26,449
[Music]

92
00:03:26,640 --> 00:03:30,000
try to clip it on my mustache

93
00:03:30,319 --> 00:03:32,239
does that work for you adrian you got it

94
00:03:32,239 --> 00:03:33,519
good good good good

95
00:03:33,519 --> 00:03:35,680
good so i really don't like having this

96
00:03:35,680 --> 00:03:39,599
much electronic gear strapped to me

97
00:03:40,000 --> 00:03:43,280
but so

98
00:03:43,280 --> 00:03:47,280
so i am old

99
00:03:47,280 --> 00:03:49,519
probably the oldest person in this room

100
00:03:49,519 --> 00:03:50,480
so uh

101
00:03:50,480 --> 00:03:52,959
again a look at cellular technology in

102
00:03:52,959 --> 00:03:53,840
reference to

103
00:03:53,840 --> 00:03:58,000
iot so uh this is a project that's kind

104
00:03:58,000 --> 00:04:00,560
of been on my table for a while

105
00:04:00,560 --> 00:04:02,480
obviously this is not a conclusion of it

106
00:04:02,480 --> 00:04:04,159
this is going to be more of an

107
00:04:04,159 --> 00:04:06,799
introduction to it so we're going to

108
00:04:06,799 --> 00:04:07,680
bounce through

109
00:04:07,680 --> 00:04:11,120
a number of topics i might

110
00:04:11,120 --> 00:04:13,360
digress off onto some things in the

111
00:04:13,360 --> 00:04:15,599
process i apologize for that

112
00:04:15,599 --> 00:04:17,120
if you think why the hell is he talking

113
00:04:17,120 --> 00:04:18,798
about that but

114
00:04:18,798 --> 00:04:22,079
it is what it is so the goal here is to

115
00:04:22,079 --> 00:04:25,199
talk about uh cellular technology that

116
00:04:25,199 --> 00:04:26,400
we see

117
00:04:26,400 --> 00:04:29,840
showing up in iot technology and

118
00:04:29,840 --> 00:04:32,720
the security of that one of the things

119
00:04:32,720 --> 00:04:34,560
in my project

120
00:04:34,560 --> 00:04:36,479
is to expand out to get a better

121
00:04:36,479 --> 00:04:37,840
understanding when we're trying to

122
00:04:37,840 --> 00:04:38,320
review

123
00:04:38,320 --> 00:04:40,400
iot technology often i want to

124
00:04:40,400 --> 00:04:41,600
understand

125
00:04:41,600 --> 00:04:44,560
what i refer to is the end-to-end view

126
00:04:44,560 --> 00:04:47,199
or end-to-end security

127
00:04:47,199 --> 00:04:49,680
of iot technology that's looking at the

128
00:04:49,680 --> 00:04:50,960
iot technology

129
00:04:50,960 --> 00:04:55,040
from the in technology to the cloud

130
00:04:55,040 --> 00:04:56,960
services to the mobile the entire

131
00:04:56,960 --> 00:04:58,400
ecosystem

132
00:04:58,400 --> 00:05:00,720
and one of the things we find out is as

133
00:05:00,720 --> 00:05:02,560
some of the security methods get better

134
00:05:02,560 --> 00:05:04,560
we get better encrypting bluetooth and

135
00:05:04,560 --> 00:05:06,080
wi-fi and

136
00:05:06,080 --> 00:05:08,320
internet communications and things like

137
00:05:08,320 --> 00:05:09,680
that

138
00:05:09,680 --> 00:05:11,600
how do we get insight into what kind of

139
00:05:11,600 --> 00:05:13,600
data is flowing back and forth

140
00:05:13,600 --> 00:05:15,520
so this is kind of spin-off of my

141
00:05:15,520 --> 00:05:17,600
interchip communication

142
00:05:17,600 --> 00:05:19,919
analysis work that i've been doing which

143
00:05:19,919 --> 00:05:22,479
i i'll reference in this and actually

144
00:05:22,479 --> 00:05:25,440
shoot you uh or have a link to the the

145
00:05:25,440 --> 00:05:26,479
paper that i

146
00:05:26,479 --> 00:05:28,960
released on that so again this just

147
00:05:28,960 --> 00:05:30,800
happens to be another component

148
00:05:30,800 --> 00:05:32,960
that is in the embedded hardware of

149
00:05:32,960 --> 00:05:34,000
technology

150
00:05:34,000 --> 00:05:35,680
and we want to understand what that

151
00:05:35,680 --> 00:05:38,000
means and how do we look at it

152
00:05:38,000 --> 00:05:41,120
if communication over lte 3g

153
00:05:41,120 --> 00:05:44,560
4g 5g is encrypted and i can't

154
00:05:44,560 --> 00:05:47,039
legally capture that data how do i know

155
00:05:47,039 --> 00:05:48,880
what's going back and forth in that

156
00:05:48,880 --> 00:05:49,759
channel

157
00:05:49,759 --> 00:05:52,320
how do i look at what's at the other end

158
00:05:52,320 --> 00:05:54,320
of that channel

159
00:05:54,320 --> 00:05:55,840
we're going to talk about how we're

160
00:05:55,840 --> 00:05:57,840
going to do that today

161
00:05:57,840 --> 00:06:01,120
so next so

162
00:06:01,120 --> 00:06:02,960
again here's some contact information

163
00:06:02,960 --> 00:06:04,560
feel free to reach out to me it's my

164
00:06:04,560 --> 00:06:05,360
twitter

165
00:06:05,360 --> 00:06:06,880
my email address so if you have any

166
00:06:06,880 --> 00:06:08,639
follow-up questions

167
00:06:08,639 --> 00:06:11,680
after today again do not hesitate to

168
00:06:11,680 --> 00:06:13,600
reach out to me i'm very open and i will

169
00:06:13,600 --> 00:06:16,000
answer you

170
00:06:16,000 --> 00:06:18,639
if you reach out to me and say you're a

171
00:06:18,639 --> 00:06:20,880
fool

172
00:06:20,880 --> 00:06:24,080
i may not reach out to you but sure to

173
00:06:24,080 --> 00:06:25,840
call me names and throwing rocks at me

174
00:06:25,840 --> 00:06:27,120
i'll definitely reach out to you and

175
00:06:27,120 --> 00:06:29,039
answer any question you may have

176
00:06:29,039 --> 00:06:30,880
because the ultimate goal is knowledge

177
00:06:30,880 --> 00:06:32,319
and knowledge sharing that's one of the

178
00:06:32,319 --> 00:06:34,319
reasons why i do this type of stuff

179
00:06:34,319 --> 00:06:38,639
click that works pretty good

180
00:06:39,120 --> 00:06:43,039
so so so introduction to iot cellular

181
00:06:43,039 --> 00:06:45,039
so the two areas that we're going to be

182
00:06:45,039 --> 00:06:46,160
talking about is

183
00:06:46,160 --> 00:06:49,840
mbiot and lte-m

184
00:06:49,840 --> 00:06:51,199
a little a little bit we're not going to

185
00:06:51,199 --> 00:06:52,400
go deep into it we're going to load up

186
00:06:52,400 --> 00:06:53,440
then we're going to dive into some of

187
00:06:53,440 --> 00:06:54,240
the more

188
00:06:54,240 --> 00:06:58,639
cool things in reference most of these

189
00:06:58,639 --> 00:07:00,400
standards are all driven out of what's

190
00:07:00,400 --> 00:07:04,479
known as 3gpp which is third generation

191
00:07:04,479 --> 00:07:07,919
oh gosh i'll never get it right

192
00:07:08,160 --> 00:07:11,440
third generation program something

193
00:07:11,440 --> 00:07:14,319
is basically it's a congoment of seven

194
00:07:14,319 --> 00:07:16,479
standards organizations out there

195
00:07:16,479 --> 00:07:18,639
that are working together to define all

196
00:07:18,639 --> 00:07:22,880
of the cellular communication standards

197
00:07:23,759 --> 00:07:28,039
so uh why why do we have mbiot

198
00:07:28,039 --> 00:07:31,599
ltem there's three reasons here

199
00:07:31,599 --> 00:07:35,360
size cost power we want to be able to

200
00:07:35,360 --> 00:07:38,720
communicate from a

201
00:07:38,720 --> 00:07:42,560
remote device and we have limitations we

202
00:07:42,560 --> 00:07:44,639
have limitations of size

203
00:07:44,639 --> 00:07:46,639
so we need to be able to have technology

204
00:07:46,639 --> 00:07:49,039
that's physically small

205
00:07:49,039 --> 00:07:52,160
we also have to have technology that is

206
00:07:52,160 --> 00:07:55,039
cheap you can't have micro technology

207
00:07:55,039 --> 00:07:56,800
and have it cost you hundreds of dollars

208
00:07:56,800 --> 00:07:58,400
and then drop it into a consumer grade

209
00:07:58,400 --> 00:08:00,160
iot thing and expect to be able to

210
00:08:00,160 --> 00:08:01,759
market it

211
00:08:01,759 --> 00:08:04,639
and the third item is power we want

212
00:08:04,639 --> 00:08:05,599
things that are low

213
00:08:05,599 --> 00:08:08,800
power consumption often iot

214
00:08:08,800 --> 00:08:11,360
technology is sending out let's say

215
00:08:11,360 --> 00:08:12,000
telemetry

216
00:08:12,000 --> 00:08:15,440
information as an example this could be

217
00:08:15,440 --> 00:08:18,560
uh whether it's automobiles

218
00:08:18,560 --> 00:08:22,400
medical devices airplanes

219
00:08:22,400 --> 00:08:25,199
you know name the list consumer goods

220
00:08:25,199 --> 00:08:26,879
all of those type of things they need to

221
00:08:26,879 --> 00:08:27,840
be able to

222
00:08:27,840 --> 00:08:30,319
send this data out and it's often not

223
00:08:30,319 --> 00:08:32,479
massive streams of data

224
00:08:32,479 --> 00:08:35,599
telemetry information so

225
00:08:35,599 --> 00:08:37,760
you can actually make the devices small

226
00:08:37,760 --> 00:08:39,039
cost effective

227
00:08:39,039 --> 00:08:41,839
reduce power literally you can take

228
00:08:41,839 --> 00:08:43,679
devices that are battery powered that

229
00:08:43,679 --> 00:08:44,000
have

230
00:08:44,000 --> 00:08:47,360
low telemetry requirements and get years

231
00:08:47,360 --> 00:08:50,959
upwards of 10 years of cellular data

232
00:08:50,959 --> 00:08:51,680
transfer

233
00:08:51,680 --> 00:08:54,240
based on it waking up and sending out a

234
00:08:54,240 --> 00:08:55,279
short burst

235
00:08:55,279 --> 00:08:58,080
every so many hours or once a day and we

236
00:08:58,080 --> 00:08:59,680
need devices that can do this

237
00:08:59,680 --> 00:09:03,440
again small low power consumption

238
00:09:03,440 --> 00:09:05,680
and cheap cost so most of the devices

239
00:09:05,680 --> 00:09:07,600
i've actually looked at

240
00:09:07,600 --> 00:09:10,160
varying price uh the cellular devices uh

241
00:09:10,160 --> 00:09:11,680
the funny thing is

242
00:09:11,680 --> 00:09:13,279
i was out this weekend go hey i need to

243
00:09:13,279 --> 00:09:15,440
buy some more of these cellular modules

244
00:09:15,440 --> 00:09:17,120
and i'm looking at these specific ones

245
00:09:17,120 --> 00:09:19,279
and they're like this is like 50

246
00:09:19,279 --> 00:09:22,160
this one's like 60 but i can go buy a

247
00:09:22,160 --> 00:09:23,920
freaking device that actually has it in

248
00:09:23,920 --> 00:09:26,160
there for 20 bucks

249
00:09:26,160 --> 00:09:29,680
this is it's kind of funny but uh

250
00:09:29,680 --> 00:09:32,959
click okay

251
00:09:32,959 --> 00:09:35,680
so the first one we talked about is mb

252
00:09:35,680 --> 00:09:36,880
iot

253
00:09:36,880 --> 00:09:40,560
or narrowband iot communication

254
00:09:40,560 --> 00:09:42,959
the interesting thing with with a lot of

255
00:09:42,959 --> 00:09:44,640
these particular devices

256
00:09:44,640 --> 00:09:47,440
is the naming standards so i call it

257
00:09:47,440 --> 00:09:48,800
mbiot

258
00:09:48,800 --> 00:09:51,279
it's also known as mb1 or mb2 there's

259
00:09:51,279 --> 00:09:52,959
variations of it with different speed

260
00:09:52,959 --> 00:09:54,480
and requirements of that

261
00:09:54,480 --> 00:09:57,440
you will also find references of other

262
00:09:57,440 --> 00:09:58,880
things out there

263
00:09:58,880 --> 00:10:02,000
that mean the same thing so when i went

264
00:10:02,000 --> 00:10:02,560
out there

265
00:10:02,560 --> 00:10:04,160
months ago trying to do research and

266
00:10:04,160 --> 00:10:06,880
figure out what are these two standards

267
00:10:06,880 --> 00:10:08,959
it seems like every paper i would read

268
00:10:08,959 --> 00:10:10,640
on it would call it something

269
00:10:10,640 --> 00:10:14,160
different but in general mbiot

270
00:10:14,160 --> 00:10:17,279
or mb1 mb2 there may be

271
00:10:17,279 --> 00:10:20,720
other standards in the works mb3 or

272
00:10:20,720 --> 00:10:22,720
whatever the case may be

273
00:10:22,720 --> 00:10:24,959
but that is that the case so typically

274
00:10:24,959 --> 00:10:26,800
on communication there's three modes on

275
00:10:26,800 --> 00:10:27,760
these things

276
00:10:27,760 --> 00:10:30,399
for mb mb iot technology one of them is

277
00:10:30,399 --> 00:10:32,240
standard lte band so it's going to go

278
00:10:32,240 --> 00:10:32,800
out over

279
00:10:32,800 --> 00:10:35,279
standard ltbn so as we're talking about

280
00:10:35,279 --> 00:10:37,200
these two standards here this is

281
00:10:37,200 --> 00:10:38,640
irrelevant

282
00:10:38,640 --> 00:10:41,760
of whether it's 3g 4g 5g these all can

283
00:10:41,760 --> 00:10:44,240
be piggybacked on every one of those

284
00:10:44,240 --> 00:10:47,360
overall communication standards the

285
00:10:47,360 --> 00:10:48,880
other one i thought was really cars

286
00:10:48,880 --> 00:10:50,480
called guard band so when you start

287
00:10:50,480 --> 00:10:52,079
talking about lte

288
00:10:52,079 --> 00:10:54,640
lte bands are basically stripes of

289
00:10:54,640 --> 00:10:55,920
frequency bands

290
00:10:55,920 --> 00:10:58,079
and the space in between them is known

291
00:10:58,079 --> 00:10:59,519
as guard band

292
00:10:59,519 --> 00:11:01,680
so it can actually be deployed and use

293
00:11:01,680 --> 00:11:04,560
the unused bandwidth between the lte

294
00:11:04,560 --> 00:11:06,880
standard bands or the guard band areas

295
00:11:06,880 --> 00:11:10,079
as an example i don't know who's using

296
00:11:10,079 --> 00:11:10,720
that

297
00:11:10,720 --> 00:11:13,760
from what i've seen so far most of the

298
00:11:13,760 --> 00:11:16,880
implementations that i've messed with

299
00:11:16,880 --> 00:11:19,920
with att and verizon both

300
00:11:19,920 --> 00:11:21,519
appear at least so far from what i

301
00:11:21,519 --> 00:11:23,760
understand to be using standard lte

302
00:11:23,760 --> 00:11:24,399
in-band

303
00:11:24,399 --> 00:11:26,880
communication but the standard will

304
00:11:26,880 --> 00:11:28,720
support that

305
00:11:28,720 --> 00:11:31,360
and then standard in the case with

306
00:11:31,360 --> 00:11:34,640
standard that is

307
00:11:34,640 --> 00:11:38,000
standard digital channels that are

308
00:11:38,000 --> 00:11:39,040
actually used in

309
00:11:39,040 --> 00:11:42,079
in lte uh

310
00:11:42,079 --> 00:11:44,560
power these devices have these two

311
00:11:44,560 --> 00:11:45,440
standards one's called

312
00:11:45,440 --> 00:11:48,480
edrx and psm basically what these

313
00:11:48,480 --> 00:11:49,519
standards do

314
00:11:49,519 --> 00:11:52,240
is give you the power saving capability

315
00:11:52,240 --> 00:11:53,360
the devices

316
00:11:53,360 --> 00:11:55,920
like your cellular phone is constantly

317
00:11:55,920 --> 00:11:58,079
connected to the cellular service and

318
00:11:58,079 --> 00:11:59,279
pingy

319
00:11:59,279 --> 00:12:01,519
it is burning power constantly because

320
00:12:01,519 --> 00:12:02,720
if it didn't do that your

321
00:12:02,720 --> 00:12:05,519
phone would probably work much longer

322
00:12:05,519 --> 00:12:06,959
before the battery would go dead but on

323
00:12:06,959 --> 00:12:09,040
these devices you can't do that

324
00:12:09,040 --> 00:12:10,639
so you have to be able to power these

325
00:12:10,639 --> 00:12:12,720
devices down so one of the standards

326
00:12:12,720 --> 00:12:14,079
basically has it

327
00:12:14,079 --> 00:12:15,680
capable of powering down when it's not

328
00:12:15,680 --> 00:12:18,079
in use the other standard creates an

329
00:12:18,079 --> 00:12:19,519
environment where

330
00:12:19,519 --> 00:12:21,360
connectivity so that you don't have to

331
00:12:21,360 --> 00:12:23,279
rebuild the connection channel

332
00:12:23,279 --> 00:12:26,720
stays intact okay so you

333
00:12:26,720 --> 00:12:28,000
so you don't have to go through the

334
00:12:28,000 --> 00:12:30,160
power consumption of establishing a

335
00:12:30,160 --> 00:12:32,160
proper channel communication

336
00:12:32,160 --> 00:12:35,680
out onto lte uh it will immediately

337
00:12:35,680 --> 00:12:36,320
connect

338
00:12:36,320 --> 00:12:40,000
right up because if one of the examples

339
00:12:40,000 --> 00:12:40,480
i use

340
00:12:40,480 --> 00:12:42,880
is is devices i've messed with that

341
00:12:42,880 --> 00:12:44,560
tried to use this similar concept

342
00:12:44,560 --> 00:12:45,519
without having this

343
00:12:45,519 --> 00:12:49,040
capability in wi-fi there's devices that

344
00:12:49,040 --> 00:12:50,160
will do that so

345
00:12:50,160 --> 00:12:52,639
they'll wi-fi out to your wi-fi network

346
00:12:52,639 --> 00:12:54,000
and then they'll shut themselves down

347
00:12:54,000 --> 00:12:55,200
but if you ever watch those

348
00:12:55,200 --> 00:12:56,959
work those things take forever to

349
00:12:56,959 --> 00:12:58,560
connect up and consume all kinds of

350
00:12:58,560 --> 00:12:59,600
power

351
00:12:59,600 --> 00:13:01,360
because there's no maintained channel

352
00:13:01,360 --> 00:13:02,959
functionality and it's the same way in a

353
00:13:02,959 --> 00:13:04,160
cellular world

354
00:13:04,160 --> 00:13:06,880
you want to maintain that a structured

355
00:13:06,880 --> 00:13:08,160
channel connection

356
00:13:08,160 --> 00:13:10,480
so that when power is applied it easily

357
00:13:10,480 --> 00:13:12,160
has established connection or can

358
00:13:12,160 --> 00:13:13,600
establish that connection

359
00:13:13,600 --> 00:13:16,079
quicker and more efficiently that's

360
00:13:16,079 --> 00:13:18,160
going to work mainly for a stationary

361
00:13:18,160 --> 00:13:19,920
application i presume since the tower

362
00:13:19,920 --> 00:13:21,200
would have

363
00:13:21,200 --> 00:13:24,000
that channel yeah typically typically it

364
00:13:24,000 --> 00:13:25,600
comes down to what lt

365
00:13:25,600 --> 00:13:28,560
what uh and that is actually true but

366
00:13:28,560 --> 00:13:30,079
it's going to come down to if you're

367
00:13:30,079 --> 00:13:33,440
if you're dealing with most iot

368
00:13:33,440 --> 00:13:35,680
somewhat stationary you know if you have

369
00:13:35,680 --> 00:13:36,639
something in your house

370
00:13:36,639 --> 00:13:37,839
you have something out in the field you

371
00:13:37,839 --> 00:13:39,440
have something industrial it's in place

372
00:13:39,440 --> 00:13:40,800
it's going to stay there

373
00:13:40,800 --> 00:13:43,199
so that's capable when you start getting

374
00:13:43,199 --> 00:13:44,079
into like

375
00:13:44,079 --> 00:13:46,480
vehicles cars it may be a little

376
00:13:46,480 --> 00:13:48,399
different but also in a car vehicle you

377
00:13:48,399 --> 00:13:51,279
have the power capability to maintain

378
00:13:51,279 --> 00:13:54,720
a more power on the device plus

379
00:13:54,720 --> 00:13:57,680
the even when your car shut off i assure

380
00:13:57,680 --> 00:14:00,079
you those things are still talking

381
00:14:00,079 --> 00:14:02,959
so in those cases there even though mb

382
00:14:02,959 --> 00:14:03,760
both

383
00:14:03,760 --> 00:14:05,600
nb iot and what we're going to show here

384
00:14:05,600 --> 00:14:07,120
in a minute are capable

385
00:14:07,120 --> 00:14:10,000
of being in automobiles the automobiles

386
00:14:10,000 --> 00:14:10,399
may

387
00:14:10,399 --> 00:14:13,199
actually because of higher bandwidth of

388
00:14:13,199 --> 00:14:14,720
telemetry data may use

389
00:14:14,720 --> 00:14:16,880
other capabilities or other chip

390
00:14:16,880 --> 00:14:19,040
functionalities

391
00:14:19,040 --> 00:14:20,560
but i actually believe a lot of the

392
00:14:20,560 --> 00:14:22,639
automobiles use what we're going to talk

393
00:14:22,639 --> 00:14:23,519
about next

394
00:14:23,519 --> 00:14:25,440
but i cannot confirm that i only base

395
00:14:25,440 --> 00:14:27,199
that on a guy i know

396
00:14:27,199 --> 00:14:28,839
at work that actually hacks on

397
00:14:28,839 --> 00:14:31,120
automobiles talking to him about

398
00:14:31,120 --> 00:14:33,519
uh the particular chipset on cellular

399
00:14:33,519 --> 00:14:34,160
that he

400
00:14:34,160 --> 00:14:38,720
described to me in his device click

401
00:14:38,720 --> 00:14:41,199
so again here is the basically the

402
00:14:41,199 --> 00:14:42,240
standards of

403
00:14:42,240 --> 00:14:46,480
mb mb1 and mb2 or lte cat mb1

404
00:14:46,480 --> 00:14:49,360
or lte cat mp2 there's another naming

405
00:14:49,360 --> 00:14:50,959
standard as i told you you'll have

406
00:14:50,959 --> 00:14:55,839
all these weird acronyms thrown in there

407
00:14:55,920 --> 00:14:58,480
and you can see the download peak rates

408
00:14:58,480 --> 00:15:00,160
are very slow on these

409
00:15:00,160 --> 00:15:03,040
so you second column down second you can

410
00:15:03,040 --> 00:15:04,560
see how slow they are

411
00:15:04,560 --> 00:15:07,440
also notice the latencies 1.6 to 10

412
00:15:07,440 --> 00:15:08,800
seconds

413
00:15:08,800 --> 00:15:11,680
these are devices that are not real time

414
00:15:11,680 --> 00:15:13,279
but they're devices that need to be able

415
00:15:13,279 --> 00:15:15,680
to supply some kind of telemetry data

416
00:15:15,680 --> 00:15:19,920
up to uh some kind of cloud services

417
00:15:20,240 --> 00:15:24,079
these are only half duplex also

418
00:15:24,560 --> 00:15:28,079
so again and if you take that whole

419
00:15:28,079 --> 00:15:30,240
narrow bandwidth minimum amount of data

420
00:15:30,240 --> 00:15:31,519
the latency

421
00:15:31,519 --> 00:15:33,519
the ability to handle the power

422
00:15:33,519 --> 00:15:34,959
consumption low power

423
00:15:34,959 --> 00:15:36,720
you can imagine one of these devices

424
00:15:36,720 --> 00:15:38,240
dropped into something

425
00:15:38,240 --> 00:15:40,720
put somewhere could run off a battery

426
00:15:40,720 --> 00:15:42,800
for upwards of 10 years

427
00:15:42,800 --> 00:15:45,040
they're saying of course it comes down

428
00:15:45,040 --> 00:15:46,480
to the quality of the particular chip

429
00:15:46,480 --> 00:15:48,800
that's actually being used

430
00:15:48,800 --> 00:15:51,920
click the next one i want to talk about

431
00:15:51,920 --> 00:15:55,680
is cat m or ltm

432
00:15:55,680 --> 00:15:58,880
or cat m1 or cat m2 so we make sure i

433
00:15:58,880 --> 00:16:00,480
get all the different nomenclatures on

434
00:16:00,480 --> 00:16:01,519
the same screen

435
00:16:01,519 --> 00:16:04,320
and you may actually find more again the

436
00:16:04,320 --> 00:16:06,160
same thing reading this up you may find

437
00:16:06,160 --> 00:16:06,959
this

438
00:16:06,959 --> 00:16:09,120
with variations of these naming

439
00:16:09,120 --> 00:16:10,639
conventions

440
00:16:10,639 --> 00:16:14,399
this is a very higher complexity

441
00:16:14,399 --> 00:16:16,560
go ahead and click should bring up that

442
00:16:16,560 --> 00:16:17,920
there we go so we can see that from the

443
00:16:17,920 --> 00:16:18,639
get-go

444
00:16:18,639 --> 00:16:20,959
very high complexity lower latency so we

445
00:16:20,959 --> 00:16:21,680
can see

446
00:16:21,680 --> 00:16:23,920
the latencies 10 to 15 milliseconds

447
00:16:23,920 --> 00:16:25,440
definitely faster

448
00:16:25,440 --> 00:16:27,360
something that would maybe be maybe

449
00:16:27,360 --> 00:16:29,440
telemetry data but it also may be

450
00:16:29,440 --> 00:16:32,480
closer to obviously you're not going to

451
00:16:32,480 --> 00:16:33,680
what 10 to

452
00:16:33,680 --> 00:16:35,680
15 milliseconds probably way too slow

453
00:16:35,680 --> 00:16:37,040
for some things

454
00:16:37,040 --> 00:16:38,639
but a lot of things that's very

455
00:16:38,639 --> 00:16:40,079
sufficient and should work

456
00:16:40,079 --> 00:16:43,519
fine the mode of this is in-band lte

457
00:16:43,519 --> 00:16:44,959
so this isn't going to do any of the

458
00:16:44,959 --> 00:16:47,120
weird guard bands or any of that type of

459
00:16:47,120 --> 00:16:48,639
stuff

460
00:16:48,639 --> 00:16:50,240
again this also has the power

461
00:16:50,240 --> 00:16:51,920
capabilities defined

462
00:16:51,920 --> 00:16:54,240
into the standard whether it's defined

463
00:16:54,240 --> 00:16:57,199
into the chipset it implements this

464
00:16:57,199 --> 00:16:58,880
is another thing that's up to the

465
00:16:58,880 --> 00:17:00,720
individual vendor but

466
00:17:00,720 --> 00:17:03,120
we can see the bandwidth on this is much

467
00:17:03,120 --> 00:17:04,000
bigger

468
00:17:04,000 --> 00:17:05,679
way much bigger you know one megabit

469
00:17:05,679 --> 00:17:07,439
four megabits versus

470
00:17:07,439 --> 00:17:11,760
24k and 64k i think it was

471
00:17:11,760 --> 00:17:13,919
pretty amazingly slow these are actually

472
00:17:13,919 --> 00:17:17,199
full or half duplex

473
00:17:17,439 --> 00:17:19,439
so we have we have some of these devices

474
00:17:19,439 --> 00:17:20,880
i think i have some of these devices

475
00:17:20,880 --> 00:17:21,919
here

476
00:17:21,919 --> 00:17:32,960
where does devices go dang man

477
00:17:32,960 --> 00:17:36,000
i'm always losing stuff

478
00:17:38,960 --> 00:17:42,160
well apparently i left it at home but uh

479
00:17:42,160 --> 00:17:47,840
i had a modem here earlier

480
00:17:48,559 --> 00:17:52,480
and i must have left it home but i had a

481
00:17:52,480 --> 00:17:56,720
cat m1 cellular modem

482
00:17:56,720 --> 00:17:58,480
that i have been actually testing with

483
00:17:58,480 --> 00:18:00,080
over the last couple weeks

484
00:18:00,080 --> 00:18:01,919
so i have both of these standards in my

485
00:18:01,919 --> 00:18:03,200
lab so i have

486
00:18:03,200 --> 00:18:07,280
sim cards for for both nba iot and cat

487
00:18:07,280 --> 00:18:09,840
cat m standard both of them are one

488
00:18:09,840 --> 00:18:11,520
series that i actually bought

489
00:18:11,520 --> 00:18:14,799
so these services are available from

490
00:18:14,799 --> 00:18:16,960
like verizon

491
00:18:16,960 --> 00:18:19,520
you may actually see these used in

492
00:18:19,520 --> 00:18:21,280
trackers

493
00:18:21,280 --> 00:18:24,320
especially the mbiot these things with a

494
00:18:24,320 --> 00:18:26,080
low latency and all that types it can

495
00:18:26,080 --> 00:18:27,520
get pretty good ranges

496
00:18:27,520 --> 00:18:29,679
on these things so you know you may have

497
00:18:29,679 --> 00:18:30,559
a gps track

498
00:18:30,559 --> 00:18:33,200
you slap on your cat or your dog this is

499
00:18:33,200 --> 00:18:34,720
probably the typical type of sims you

500
00:18:34,720 --> 00:18:37,679
would slap into that

501
00:18:37,760 --> 00:18:40,160
i think i think you probably want to do

502
00:18:40,160 --> 00:18:41,280
cat m1

503
00:18:41,280 --> 00:18:43,520
because you're like gps and a dog in a

504
00:18:43,520 --> 00:18:44,640
full sprint

505
00:18:44,640 --> 00:18:46,400
you know with a big latency on the other

506
00:18:46,400 --> 00:18:48,880
one you may not even be close

507
00:18:48,880 --> 00:18:50,799
to where where they actually were but if

508
00:18:50,799 --> 00:18:52,640
you're tracking and you're just tracking

509
00:18:52,640 --> 00:18:54,400
movement

510
00:18:54,400 --> 00:18:56,240
it would store that data and send it in

511
00:18:56,240 --> 00:18:57,679
burst traffic

512
00:18:57,679 --> 00:18:59,120
to improve power consumption and

513
00:18:59,120 --> 00:19:02,559
functionality and things like that

514
00:19:02,559 --> 00:19:07,918
so click any questions

515
00:19:08,799 --> 00:19:11,440
gosh i don't like quiet so what about

516
00:19:11,440 --> 00:19:12,880
like the new afternoon

517
00:19:12,880 --> 00:19:15,280
thing like i had like that for a minute

518
00:19:15,280 --> 00:19:16,960
like in terms of tracking

519
00:19:16,960 --> 00:19:19,039
which did not work for me at all but it

520
00:19:19,039 --> 00:19:20,000
sounds like the

521
00:19:20,000 --> 00:19:22,480
one that apple has come up with what is

522
00:19:22,480 --> 00:19:23,120
it yeah yes

523
00:19:23,120 --> 00:19:25,840
explain it a little more

524
00:19:26,559 --> 00:19:29,919
tags often the tags are actually synced

525
00:19:29,919 --> 00:19:30,400
to your

526
00:19:30,400 --> 00:19:33,919
phone uh and what they do is they do

527
00:19:33,919 --> 00:19:36,160
cloud sourcing a lot of those tags

528
00:19:36,160 --> 00:19:38,080
so the more people that have that

529
00:19:38,080 --> 00:19:40,160
service uh have that service on your

530
00:19:40,160 --> 00:19:40,799
phone

531
00:19:40,799 --> 00:19:42,559
those tags will connect to their phone

532
00:19:42,559 --> 00:19:43,840
so if you lose your

533
00:19:43,840 --> 00:19:46,160
lose something in a city park and then

534
00:19:46,160 --> 00:19:47,679
you can go online and find out where it

535
00:19:47,679 --> 00:19:48,480
was

536
00:19:48,480 --> 00:19:50,320
uh two things you either find out the

537
00:19:50,320 --> 00:19:52,080
last place your phone was connected to

538
00:19:52,080 --> 00:19:52,559
it

539
00:19:52,559 --> 00:19:54,960
or it'll connect to someone else's phone

540
00:19:54,960 --> 00:19:56,799
and that's mainly how a lot of the

541
00:19:56,799 --> 00:20:00,080
tags work and it's usually bluetooth low

542
00:20:00,080 --> 00:20:00,640
energy

543
00:20:00,640 --> 00:20:03,520
to your cell phone and your cell phone

544
00:20:03,520 --> 00:20:04,880
provides the gps

545
00:20:04,880 --> 00:20:06,799
data that's sent up to the cloud service

546
00:20:06,799 --> 00:20:08,480
that's why the apple tag works better

547
00:20:08,480 --> 00:20:10,400
than like that xy thing that i

548
00:20:10,400 --> 00:20:12,400
bought on kickstarter that never worked

549
00:20:12,400 --> 00:20:13,520
for me

550
00:20:13,520 --> 00:20:15,200
yeah there's there's a number of

551
00:20:15,200 --> 00:20:17,520
different tags out there

552
00:20:17,520 --> 00:20:19,360
but they they utilize your phone and

553
00:20:19,360 --> 00:20:21,520
them themselves don't

554
00:20:21,520 --> 00:20:22,960
most of them don't have cellular

555
00:20:22,960 --> 00:20:26,400
services the cellular services

556
00:20:26,400 --> 00:20:29,120
the the two cards i bought the mb iot

557
00:20:29,120 --> 00:20:30,159
and the other one

558
00:20:30,159 --> 00:20:33,679
are both lower so i get two terabyte of

559
00:20:33,679 --> 00:20:34,080
data

560
00:20:34,080 --> 00:20:38,080
transfer for a year for a year okay

561
00:20:38,080 --> 00:20:40,799
but i think the uh mb iot one i have is

562
00:20:40,799 --> 00:20:42,400
like 24

563
00:20:42,400 --> 00:20:45,520
k hertz or something like that the

564
00:20:45,520 --> 00:20:49,200
uh the m1 that i have from a t

565
00:20:49,200 --> 00:20:51,679
it doesn't go up to one meg the one i

566
00:20:51,679 --> 00:20:53,120
have only does

567
00:20:53,120 --> 00:20:56,240
oh gosh since it's a a fixed service for

568
00:20:56,240 --> 00:20:58,240
low bandwidth usage i think it's like

569
00:20:58,240 --> 00:21:01,600
56 or 64k it's still low too

570
00:21:01,600 --> 00:21:04,720
but it costs 30 for a year and

571
00:21:04,720 --> 00:21:07,280
they'll function for an entire year so

572
00:21:07,280 --> 00:21:08,720
those are typically what you're going to

573
00:21:08,720 --> 00:21:10,000
buy for

574
00:21:10,000 --> 00:21:14,080
most gps trackers simple watches

575
00:21:14,080 --> 00:21:16,320
when i say simple watches it would be

576
00:21:16,320 --> 00:21:17,440
simple gps

577
00:21:17,440 --> 00:21:20,400
stuff or data telemetry stuff if the

578
00:21:20,400 --> 00:21:21,520
watch actually do

579
00:21:21,520 --> 00:21:23,440
cellular you make phone calls and stuff

580
00:21:23,440 --> 00:21:24,880
on it then no you're not going to be

581
00:21:24,880 --> 00:21:25,760
able to put these

582
00:21:25,760 --> 00:21:28,080
on here plus when you buy these sim

583
00:21:28,080 --> 00:21:30,480
cards you're required to actually

584
00:21:30,480 --> 00:21:33,600
swear allegiance not to use them to like

585
00:21:33,600 --> 00:21:35,120
make phone calls or attempt to make

586
00:21:35,120 --> 00:21:36,880
phone calls but they shouldn't be

587
00:21:36,880 --> 00:21:39,600
phone they should only be data but they

588
00:21:39,600 --> 00:21:41,200
also don't want you like surfing the

589
00:21:41,200 --> 00:21:42,799
internet on them either

590
00:21:42,799 --> 00:21:45,520
and they they make those statements but

591
00:21:45,520 --> 00:21:46,450
yes sir

592
00:21:46,450 --> 00:21:49,650
[Music]

593
00:21:57,039 --> 00:21:59,360
well i mean uh i think they can come

594
00:21:59,360 --> 00:22:01,120
back in this is kind of early

595
00:22:01,120 --> 00:22:03,679
in in the research so i haven't looked

596
00:22:03,679 --> 00:22:05,120
at too many devices

597
00:22:05,120 --> 00:22:07,440
i thought like i said i have the

598
00:22:07,440 --> 00:22:09,440
cellular modem

599
00:22:09,440 --> 00:22:12,240
which typically is connectivity so i you

600
00:22:12,240 --> 00:22:13,679
know i can bring stuff down and i can

601
00:22:13,679 --> 00:22:14,799
send stuff up but i

602
00:22:14,799 --> 00:22:17,120
am it functions like a standard modem i

603
00:22:17,120 --> 00:22:18,960
control all of that

604
00:22:18,960 --> 00:22:20,960
uh the other device that i actually have

605
00:22:20,960 --> 00:22:23,120
here uh that we're gonna talk about look

606
00:22:23,120 --> 00:22:24,000
at some stuff

607
00:22:24,000 --> 00:22:27,039
in reference that happens to be a

608
00:22:27,039 --> 00:22:29,039
simply secure home's home security

609
00:22:29,039 --> 00:22:31,760
system which has cellular capability uh

610
00:22:31,760 --> 00:22:32,799
within that

611
00:22:32,799 --> 00:22:35,919
now does that handle both ways i think

612
00:22:35,919 --> 00:22:37,280
it probably does

613
00:22:37,280 --> 00:22:41,280
uh based on some of the functionality

614
00:22:41,280 --> 00:22:42,640
i don't know if we'll see it in some of

615
00:22:42,640 --> 00:22:44,559
the data i captured here

616
00:22:44,559 --> 00:22:46,480
when we show this but i think it may

617
00:22:46,480 --> 00:22:47,840
have that capability

618
00:22:47,840 --> 00:22:51,600
now the device that i played with

619
00:22:51,600 --> 00:22:53,760
just started on that the thursday

620
00:22:53,760 --> 00:22:54,799
afternoon okay

621
00:22:54,799 --> 00:22:56,640
because i knew i had i had a team

622
00:22:56,640 --> 00:22:58,559
working on doing home security systems

623
00:22:58,559 --> 00:23:01,280
this last year as a training exercise

624
00:23:01,280 --> 00:23:03,280
and uh and when this thing spun up i'm

625
00:23:03,280 --> 00:23:05,120
like oh i think those ones had cellular

626
00:23:05,120 --> 00:23:06,799
on so i called them up and like hey you

627
00:23:06,799 --> 00:23:08,400
still got that device

628
00:23:08,400 --> 00:23:10,400
like yeah ship it to me so it didn't

629
00:23:10,400 --> 00:23:11,919
show up until thursday so i

630
00:23:11,919 --> 00:23:13,840
so they're not configured so what we're

631
00:23:13,840 --> 00:23:15,200
going to see later during this

632
00:23:15,200 --> 00:23:16,159
presentation

633
00:23:16,159 --> 00:23:18,799
there's a high probability you would see

634
00:23:18,799 --> 00:23:20,559
way more interesting data

635
00:23:20,559 --> 00:23:22,640
but these were never ever configured so

636
00:23:22,640 --> 00:23:24,480
i'm looking at just out of the box

637
00:23:24,480 --> 00:23:28,720
powered up type stuff and trying to

638
00:23:28,720 --> 00:23:30,640
basically prove a point here around how

639
00:23:30,640 --> 00:23:32,159
we would approach security not

640
00:23:32,159 --> 00:23:33,200
necessarily

641
00:23:33,200 --> 00:23:34,799
trying to show some problems with

642
00:23:34,799 --> 00:23:37,600
anyone's product

643
00:23:37,600 --> 00:23:39,039
click so we're going to get underneath

644
00:23:39,039 --> 00:23:40,720
the hood a little bit so there's a

645
00:23:40,720 --> 00:23:42,000
number of modules out there

646
00:23:42,000 --> 00:23:44,240
no way does this include all the vendors

647
00:23:44,240 --> 00:23:46,000
there's a number of other vendors

648
00:23:46,000 --> 00:23:48,880
but these are the ones i typically see

649
00:23:48,880 --> 00:23:49,760
quitel

650
00:23:49,760 --> 00:23:52,799
u-blox uh sierra taillight

651
00:23:52,799 --> 00:23:54,960
i've worked with all of these but the

652
00:23:54,960 --> 00:23:56,240
sierra

653
00:23:56,240 --> 00:23:58,080
the sierra ones you see very much coming

654
00:23:58,080 --> 00:24:00,159
from stuff you buy from

655
00:24:00,159 --> 00:24:04,000
china a lot of times cheaper stuff

656
00:24:04,000 --> 00:24:05,760
but most these modules are fairly cheap

657
00:24:05,760 --> 00:24:07,760
and they come in every flavor that you

658
00:24:07,760 --> 00:24:08,400
could ever

659
00:24:08,400 --> 00:24:11,440
imagine or capable so if you have an

660
00:24:11,440 --> 00:24:13,440
idea of what you want to do

661
00:24:13,440 --> 00:24:17,440
there's a chip for it okay so um

662
00:24:17,440 --> 00:24:20,080
why why are chips sold this way why

663
00:24:20,080 --> 00:24:21,520
can't you just build this into your

664
00:24:21,520 --> 00:24:23,039
device

665
00:24:23,039 --> 00:24:25,520
the reason why nobody does that is

666
00:24:25,520 --> 00:24:26,640
because then you're going to have to

667
00:24:26,640 --> 00:24:27,760
take your device through

668
00:24:27,760 --> 00:24:30,960
fcc validation checks

669
00:24:30,960 --> 00:24:33,039
if i put a module on the device the

670
00:24:33,039 --> 00:24:34,799
module's already been validated by the

671
00:24:34,799 --> 00:24:36,000
fcc

672
00:24:36,000 --> 00:24:39,039
i don't have to do that so that brings

673
00:24:39,039 --> 00:24:39,440
up

674
00:24:39,440 --> 00:24:42,159
and answers the one big question how

675
00:24:42,159 --> 00:24:43,840
come it took a year and a half to two

676
00:24:43,840 --> 00:24:44,799
years

677
00:24:44,799 --> 00:24:49,039
before we actually were able to use 5g

678
00:24:49,039 --> 00:24:50,640
because there was no one manufacturing

679
00:24:50,640 --> 00:24:52,480
modules

680
00:24:52,480 --> 00:24:54,000
even though chips were beginning

681
00:24:54,000 --> 00:24:55,440
manufacturer there was no one

682
00:24:55,440 --> 00:24:57,120
manufacturing modules

683
00:24:57,120 --> 00:24:58,720
and no one's com no one's going to go

684
00:24:58,720 --> 00:25:00,480
through the headache of producing a

685
00:25:00,480 --> 00:25:01,279
product

686
00:25:01,279 --> 00:25:04,320
that they have to have through fcc

687
00:25:04,320 --> 00:25:06,240
uh and that's right out of the mouth of

688
00:25:06,240 --> 00:25:08,000
the vendors because when this all hit

689
00:25:08,000 --> 00:25:08,559
the fan

690
00:25:08,559 --> 00:25:11,760
i was not this year the year before i

691
00:25:11,760 --> 00:25:12,480
was at

692
00:25:12,480 --> 00:25:15,919
actually at the um

693
00:25:15,919 --> 00:25:17,919
consumer electronics show in vegas so i

694
00:25:17,919 --> 00:25:19,120
spent a week in value the consumer

695
00:25:19,120 --> 00:25:20,080
electronics show

696
00:25:20,080 --> 00:25:22,480
and i talked to a number of the actual

697
00:25:22,480 --> 00:25:25,120
chip module manufacturers

698
00:25:25,120 --> 00:25:26,960
and uh and they were complaining that

699
00:25:26,960 --> 00:25:28,720
there wasn't any 5g

700
00:25:28,720 --> 00:25:30,480
chips available for them to produce

701
00:25:30,480 --> 00:25:31,840
modules

702
00:25:31,840 --> 00:25:33,520
yet there were some i talked to some

703
00:25:33,520 --> 00:25:34,960
vendors that were in the process

704
00:25:34,960 --> 00:25:36,559
but they hadn't released them yet and

705
00:25:36,559 --> 00:25:38,080
then i talked to people that were

706
00:25:38,080 --> 00:25:39,600
actually using the tech

707
00:25:39,600 --> 00:25:41,840
producing cellular modems and i'm like

708
00:25:41,840 --> 00:25:43,440
why are there no 5g just out of

709
00:25:43,440 --> 00:25:44,159
curiosity

710
00:25:44,159 --> 00:25:46,400
and they're like you need to go talk to

711
00:25:46,400 --> 00:25:47,760
them they're the ones producing the

712
00:25:47,760 --> 00:25:49,279
modules for us to be able to make the

713
00:25:49,279 --> 00:25:50,720
product function they haven't done it

714
00:25:50,720 --> 00:25:51,039
yet

715
00:25:51,039 --> 00:25:52,960
so that kind of explains that whole

716
00:25:52,960 --> 00:25:54,159
history there

717
00:25:54,159 --> 00:25:56,559
so if you pop the caps off all these

718
00:25:56,559 --> 00:25:58,240
actually de-shield these

719
00:25:58,240 --> 00:26:00,240
uh almost always you're gonna find

720
00:26:00,240 --> 00:26:01,600
qualcomm chipsets

721
00:26:01,600 --> 00:26:03,440
i've never opened one up where it wasn't

722
00:26:03,440 --> 00:26:05,679
qualcomm chicks chipsets

723
00:26:05,679 --> 00:26:09,600
typically uh the nine i said 9603s or

724
00:26:09,600 --> 00:26:11,840
9606s or whatever

725
00:26:11,840 --> 00:26:14,480
and of course all those chips are are

726
00:26:14,480 --> 00:26:15,520
basically oem

727
00:26:15,520 --> 00:26:17,279
so you can't get data sheets on none of

728
00:26:17,279 --> 00:26:20,159
those chips

729
00:26:20,559 --> 00:26:22,960
legally

730
00:26:23,600 --> 00:26:27,120
click so uh so we're looking at a

731
00:26:27,120 --> 00:26:29,279
teardown uh and this is kind of fun and

732
00:26:29,279 --> 00:26:30,240
knowledge

733
00:26:30,240 --> 00:26:33,360
uh i've actually done work for the chip

734
00:26:33,360 --> 00:26:35,200
manufacturers not just cellular other

735
00:26:35,200 --> 00:26:36,840
chip manufacturers that produce module

736
00:26:36,840 --> 00:26:38,240
units

737
00:26:38,240 --> 00:26:39,600
and we're going to talk about some of

738
00:26:39,600 --> 00:26:41,279
the some of the approach that i take to

739
00:26:41,279 --> 00:26:41,600
look

740
00:26:41,600 --> 00:26:45,200
at an actual chip or actual module

741
00:26:45,200 --> 00:26:48,480
so click

742
00:26:48,480 --> 00:26:51,200
so here is an actual that module we've

743
00:26:51,200 --> 00:26:52,480
seen before and this is with a

744
00:26:52,480 --> 00:26:53,840
de-shielded this is actually

745
00:26:53,840 --> 00:26:57,679
fcc data so i go to fcc sites and uh

746
00:26:57,679 --> 00:26:59,600
u-blox is nice enough to show me what's

747
00:26:59,600 --> 00:27:01,360
underneath the hood you go to taillight

748
00:27:01,360 --> 00:27:04,479
and it's all like blank

749
00:27:04,640 --> 00:27:06,559
they they they wipe everything off so

750
00:27:06,559 --> 00:27:08,159
you can't actually see the chipsets but

751
00:27:08,159 --> 00:27:09,679
i know what the chipsets are they're not

752
00:27:09,679 --> 00:27:10,880
kidding me

753
00:27:10,880 --> 00:27:12,480
i can just buy one of these modules for

754
00:27:12,480 --> 00:27:14,640
20 bucks and take it apart myself

755
00:27:14,640 --> 00:27:15,919
so this is kind of what it looks like

756
00:27:15,919 --> 00:27:17,760
underneath the hood uh

757
00:27:17,760 --> 00:27:19,600
and this we have the lower one here is a

758
00:27:19,600 --> 00:27:21,360
memory chip and then we see like

759
00:27:21,360 --> 00:27:25,520
i'm sorry 9206 mdm 92.6 common chip set

760
00:27:25,520 --> 00:27:27,360
uh coming from qualcomm and the other

761
00:27:27,360 --> 00:27:29,200
one's a memory chip

762
00:27:29,200 --> 00:27:30,880
that memory chip which we're going to

763
00:27:30,880 --> 00:27:33,039
touch base on here in a minute

764
00:27:33,039 --> 00:27:34,720
not that it applies to this what we're

765
00:27:34,720 --> 00:27:37,120
doing here just because i like wasted

766
00:27:37,120 --> 00:27:39,360
uh my entire holiday weekend with that

767
00:27:39,360 --> 00:27:40,559
chip

768
00:27:40,559 --> 00:27:42,159
and i'm gonna force you guys to suffer

769
00:27:42,159 --> 00:27:44,880
through it with me

770
00:27:44,960 --> 00:27:47,600
that is a mcp what's known as a

771
00:27:47,600 --> 00:27:49,279
multi-chip package

772
00:27:49,279 --> 00:27:51,520
multi-chip package is remember it's

773
00:27:51,520 --> 00:27:52,399
space

774
00:27:52,399 --> 00:27:55,360
space space space multi-chip package

775
00:27:55,360 --> 00:27:56,399
will contain both

776
00:27:56,399 --> 00:28:00,720
ram ddrm3 whatever

777
00:28:00,720 --> 00:28:02,720
and it will also contain nand flash

778
00:28:02,720 --> 00:28:06,399
memory all in the same package

779
00:28:07,520 --> 00:28:09,360
system on check this entire processor

780
00:28:09,360 --> 00:28:11,200
has everything has has your memory and

781
00:28:11,200 --> 00:28:13,120
the process there's no processor in that

782
00:28:13,120 --> 00:28:15,120
there's nothing in that so the

783
00:28:15,120 --> 00:28:16,640
interesting thing is those chips are

784
00:28:16,640 --> 00:28:18,080
very similar and the first time i

785
00:28:18,080 --> 00:28:19,440
actually encountered one

786
00:28:19,440 --> 00:28:21,520
i i didn't have a data sheet on and made

787
00:28:21,520 --> 00:28:22,960
an assumption

788
00:28:22,960 --> 00:28:26,880
i assumed it was a e mcp which is known

789
00:28:26,880 --> 00:28:28,720
as an embedded

790
00:28:28,720 --> 00:28:30,640
mcp which is an embedded multimedia

791
00:28:30,640 --> 00:28:32,480
controller chip which has a controller

792
00:28:32,480 --> 00:28:35,200
on it but purely for just read memory

793
00:28:35,200 --> 00:28:37,440
uh and after wasting many hours out of

794
00:28:37,440 --> 00:28:38,960
my life i figured out no

795
00:28:38,960 --> 00:28:42,559
i was wrong seriously wrong but uh

796
00:28:42,559 --> 00:28:45,760
go ahead next one

797
00:28:45,760 --> 00:28:48,640
so what do we do with the chip well the

798
00:28:48,640 --> 00:28:50,159
first thing i like to do with the chip

799
00:28:50,159 --> 00:28:51,919
is get rid of all those nasty components

800
00:28:51,919 --> 00:28:53,520
that are in my way

801
00:28:53,520 --> 00:28:55,840
so ideally throw it in the oven strip it

802
00:28:55,840 --> 00:28:57,120
bare

803
00:28:57,120 --> 00:28:58,720
this is my first approach and what i

804
00:28:58,720 --> 00:29:01,200
want to do there is i want to actually

805
00:29:01,200 --> 00:29:03,039
identify because we know what the back

806
00:29:03,039 --> 00:29:04,880
side is we get the data sheet

807
00:29:04,880 --> 00:29:06,720
and we know on the land grid array side

808
00:29:06,720 --> 00:29:08,240
where it connects to the board

809
00:29:08,240 --> 00:29:11,279
we know where usb comes in we know where

810
00:29:11,279 --> 00:29:13,120
uart comes in

811
00:29:13,120 --> 00:29:14,799
can i get to it from the top of the chip

812
00:29:14,799 --> 00:29:16,080
because remember it's attached to the

813
00:29:16,080 --> 00:29:17,440
board i can't get to it

814
00:29:17,440 --> 00:29:20,480
okay so i often like to reverse engineer

815
00:29:20,480 --> 00:29:21,919
the actual component

816
00:29:21,919 --> 00:29:24,399
layout this case it didn't really help

817
00:29:24,399 --> 00:29:27,120
me any but we at least do that

818
00:29:27,120 --> 00:29:28,720
to see if we can identify things like

819
00:29:28,720 --> 00:29:32,000
jtag sir wire debug usb uart connections

820
00:29:32,000 --> 00:29:33,760
these are the four key things that i can

821
00:29:33,760 --> 00:29:35,360
interact with this chip

822
00:29:35,360 --> 00:29:37,039
and if i can get to it from the surface

823
00:29:37,039 --> 00:29:39,039
in some bizarre way that means i

824
00:29:39,039 --> 00:29:41,120
less likely i have to take more crap

825
00:29:41,120 --> 00:29:42,640
apart

826
00:29:42,640 --> 00:29:45,840
so this is purely a knowledge building

827
00:29:45,840 --> 00:29:46,720
exercise

828
00:29:46,720 --> 00:29:49,919
that i do a lot on components when i get

829
00:29:49,919 --> 00:29:51,440
a module

830
00:29:51,440 --> 00:29:52,880
tear it apart especially if i start

831
00:29:52,880 --> 00:29:54,480
seeing it more than once

832
00:29:54,480 --> 00:29:56,720
i start reverse engineering the module

833
00:29:56,720 --> 00:29:58,559
to see how it's structured

834
00:29:58,559 --> 00:30:00,320
to see if i can make life easier for

835
00:30:00,320 --> 00:30:02,880
daryl down the road

836
00:30:02,880 --> 00:30:04,640
it doesn't make life easier for me here

837
00:30:04,640 --> 00:30:06,399
because

838
00:30:06,399 --> 00:30:07,760
you're going to see this setting on a

839
00:30:07,760 --> 00:30:09,919
penny here in a minute

840
00:30:09,919 --> 00:30:12,159
click

841
00:30:17,520 --> 00:30:23,200
that clicker's broken too okay

842
00:30:23,200 --> 00:30:25,120
okay that's kind of hard to it's kind of

843
00:30:25,120 --> 00:30:27,520
hard to

844
00:30:29,200 --> 00:30:31,840
does it work

845
00:30:34,159 --> 00:30:36,399
okay well that's kind of hard to see up

846
00:30:36,399 --> 00:30:38,000
there just mainly because of

847
00:30:38,000 --> 00:30:43,039
the screen but the uh the red

848
00:30:43,039 --> 00:30:46,000
i can't even make it out now damn it's

849
00:30:46,000 --> 00:30:47,520
really bad

850
00:30:47,520 --> 00:30:50,720
okay i know the yellow is jtag

851
00:30:50,720 --> 00:30:54,799
the red is uh uart and the purple i

852
00:30:54,799 --> 00:30:57,120
believe is usb

853
00:30:57,120 --> 00:30:59,279
so that is underneath the micro

854
00:30:59,279 --> 00:31:01,840
controller which does me no good

855
00:31:01,840 --> 00:31:03,840
and i was able to trace it out anywhere

856
00:31:03,840 --> 00:31:05,600
else

857
00:31:05,600 --> 00:31:09,279
is it working now all right

858
00:31:09,279 --> 00:31:12,720
but this is kind of this okay so this is

859
00:31:12,720 --> 00:31:14,240
kind of how it looks like this is

860
00:31:14,240 --> 00:31:16,320
this is the bottom of the chip over here

861
00:31:16,320 --> 00:31:18,320
this is the land grid array

862
00:31:18,320 --> 00:31:20,559
lane grid arrays are not ball girder

863
00:31:20,559 --> 00:31:22,159
rays they're square blocks and they're

864
00:31:22,159 --> 00:31:24,080
a pain in the butt at least for me to

865
00:31:24,080 --> 00:31:25,360
work with because they're hard to put

866
00:31:25,360 --> 00:31:26,559
back on

867
00:31:26,559 --> 00:31:28,640
bgas are much easier in my opinion and

868
00:31:28,640 --> 00:31:30,480
then over here this is a surface chip

869
00:31:30,480 --> 00:31:32,000
with all the components the goal is

870
00:31:32,000 --> 00:31:34,000
is key things over here that i want to

871
00:31:34,000 --> 00:31:36,240
identify can i identify them on the

872
00:31:36,240 --> 00:31:38,320
surface of the chip then once i identify

873
00:31:38,320 --> 00:31:40,240
where they're at

874
00:31:40,240 --> 00:31:42,880
can i get access to them because let's

875
00:31:42,880 --> 00:31:47,840
see if we can go backwards here

876
00:31:49,440 --> 00:31:53,600
oh gosh there we go as you can see there

877
00:31:53,600 --> 00:31:57,199
oh it's thinking ahead man

878
00:31:59,360 --> 00:32:03,039
man that takes time to catch up here

879
00:32:06,000 --> 00:32:08,159
it's the screen yeah no you can see it

880
00:32:08,159 --> 00:32:09,600
changing over here and then it takes

881
00:32:09,600 --> 00:32:10,080
forever

882
00:32:10,080 --> 00:32:13,200
for that 1969 computer back here to

883
00:32:13,200 --> 00:32:15,230
catch up

884
00:32:15,230 --> 00:32:18,329
[Music]

885
00:32:18,640 --> 00:32:22,240
oh really okay okay so you can see all

886
00:32:22,240 --> 00:32:23,679
these components are packed in here

887
00:32:23,679 --> 00:32:24,480
pretty tight

888
00:32:24,480 --> 00:32:26,240
so the only way you can't really get to

889
00:32:26,240 --> 00:32:27,919
the runs underneath here but you could

890
00:32:27,919 --> 00:32:30,559
get to the resistors the capacitors

891
00:32:30,559 --> 00:32:33,360
things that have silver showing and you

892
00:32:33,360 --> 00:32:34,240
try to identify

893
00:32:34,240 --> 00:32:36,640
is there any uh attach point where i can

894
00:32:36,640 --> 00:32:38,240
gain further access

895
00:32:38,240 --> 00:32:40,159
for further analysis on a device once

896
00:32:40,159 --> 00:32:43,840
it's disassembled

897
00:32:45,919 --> 00:32:49,519
so we'll get it going here

898
00:32:51,200 --> 00:32:53,120
based on how slow this is the videos

899
00:32:53,120 --> 00:32:54,240
when we run these i don't know if

900
00:32:54,240 --> 00:32:57,120
they're even going to work

901
00:32:57,120 --> 00:33:00,159
but as you can see you can see how small

902
00:33:00,159 --> 00:33:02,000
everything is i'm sorry for that

903
00:33:02,000 --> 00:33:03,200
i thought it would look bigger on the

904
00:33:03,200 --> 00:33:04,640
screen this screen is kind of grainy to

905
00:33:04,640 --> 00:33:05,519
start with

906
00:33:05,519 --> 00:33:07,600
but we try to track that data out and in

907
00:33:07,600 --> 00:33:09,760
this case here it was not successful in

908
00:33:09,760 --> 00:33:11,519
getting anything that we can attach to

909
00:33:11,519 --> 00:33:14,080
on the surface

910
00:33:14,080 --> 00:33:18,639
six hours of my life's lost we move on

911
00:33:19,360 --> 00:33:21,200
so in this case here man that's green is

912
00:33:21,200 --> 00:33:22,720
really grainy so

913
00:33:22,720 --> 00:33:24,399
as you can see here's that chip on a

914
00:33:24,399 --> 00:33:26,080
penny

915
00:33:26,080 --> 00:33:28,159
uh this is the actual this is actually

916
00:33:28,159 --> 00:33:30,159
the memory chip setting on a penny so

917
00:33:30,159 --> 00:33:32,480
this is that mcp we actually pulled off

918
00:33:32,480 --> 00:33:36,080
here multi-chip package is 162 ball bga

919
00:33:36,080 --> 00:33:37,919
ram nand flash everything i mentioned

920
00:33:37,919 --> 00:33:40,960
earlier let's see what we get here

921
00:33:40,960 --> 00:33:44,159
so this is what that chip looks like

922
00:33:44,159 --> 00:33:46,480
uh from the data sheet and we can see

923
00:33:46,480 --> 00:33:48,399
everything that's in the upper part

924
00:33:48,399 --> 00:33:51,519
the sky blue looking up at the top

925
00:33:51,519 --> 00:33:54,799
is the nan part of it so

926
00:33:54,799 --> 00:33:56,960
so this is this is daryl's weekend this

927
00:33:56,960 --> 00:33:59,120
is what i did for my fourth of july

928
00:33:59,120 --> 00:34:02,640
daryl wants access to the flash off this

929
00:34:02,640 --> 00:34:05,600
u-blox this is the u-blox memory chip on

930
00:34:05,600 --> 00:34:07,200
the device

931
00:34:07,200 --> 00:34:09,839
so what does daryl do it's like okay we

932
00:34:09,839 --> 00:34:11,679
got to figure out how to do this

933
00:34:11,679 --> 00:34:14,079
so my holiday weekend so we take the

934
00:34:14,079 --> 00:34:16,000
chip

935
00:34:16,000 --> 00:34:18,000
flip it over and we can see these are

936
00:34:18,000 --> 00:34:21,040
0.25 millimeter pads

937
00:34:21,040 --> 00:34:23,679
so the first thing i do is i actually

938
00:34:23,679 --> 00:34:24,480
identify

939
00:34:24,480 --> 00:34:27,679
all the ones that matter to me

940
00:34:27,679 --> 00:34:30,000
that are nand flash i don't care about

941
00:34:30,000 --> 00:34:31,119
the ram

942
00:34:31,119 --> 00:34:34,960
nand flash so we identify those there

943
00:34:34,960 --> 00:34:37,520
the next thing we need to do is now that

944
00:34:37,520 --> 00:34:39,679
we've identified that

945
00:34:39,679 --> 00:34:41,199
i don't have a chip reader that'll

946
00:34:41,199 --> 00:34:44,159
actually read this chip

947
00:34:44,159 --> 00:34:46,800
because it's a 162 mcp and none of my

948
00:34:46,800 --> 00:34:49,839
chips will do or my readers will do that

949
00:34:49,839 --> 00:34:52,320
a reader to do this is about fifteen

950
00:34:52,320 --> 00:34:53,359
hundred bucks

951
00:34:53,359 --> 00:34:56,960
a socket to drop that chip into

952
00:34:56,960 --> 00:35:00,160
is a thousand dollars so we're

953
00:35:00,160 --> 00:35:02,640
twenty six hundred dollars just entry

954
00:35:02,640 --> 00:35:04,800
for one ship that i encounter

955
00:35:04,800 --> 00:35:08,400
once i'm answering it again i may not

956
00:35:08,400 --> 00:35:11,280
okay but there we go so what do we do

957
00:35:11,280 --> 00:35:12,880
well i need to

958
00:35:12,880 --> 00:35:15,599
get my reader to read that so i pull out

959
00:35:15,599 --> 00:35:16,640
the data sheet

960
00:35:16,640 --> 00:35:19,280
i go through the data sheet i identify

961
00:35:19,280 --> 00:35:20,800
it's a nand flash chip

962
00:35:20,800 --> 00:35:23,920
i identify its block

963
00:35:23,920 --> 00:35:26,960
sizes it's uh

964
00:35:26,960 --> 00:35:29,040
out of band layout it's basically its

965
00:35:29,040 --> 00:35:30,079
structure it's

966
00:35:30,079 --> 00:35:33,599
voltage everything i can about it

967
00:35:33,599 --> 00:35:35,280
and then i go out and find another chip

968
00:35:35,280 --> 00:35:37,119
by the same manufacturer

969
00:35:37,119 --> 00:35:41,359
that happens to be on my reader

970
00:35:41,359 --> 00:35:45,280
and i find one that is a tsop 48

971
00:35:45,280 --> 00:35:49,119
which is a 48 pin chip it has 48 pins

972
00:35:49,119 --> 00:35:50,880
that are external on it

973
00:35:50,880 --> 00:35:53,040
so then what i do is okay we got it

974
00:35:53,040 --> 00:35:55,359
match now what i want to do is

975
00:35:55,359 --> 00:35:57,520
let's make my chip reader think this is

976
00:35:57,520 --> 00:35:58,920
the damn

977
00:35:58,920 --> 00:36:02,480
tsop48 and i do this all the time so

978
00:36:02,480 --> 00:36:04,240
this is very doable

979
00:36:04,240 --> 00:36:06,720
so but how do i attach to this that's

980
00:36:06,720 --> 00:36:07,920
where it becomes

981
00:36:07,920 --> 00:36:11,200
a nightmare so that's why we balled it

982
00:36:11,200 --> 00:36:12,880
the first time to put the balls on there

983
00:36:12,880 --> 00:36:14,800
this is 40 gauge wire this is all done

984
00:36:14,800 --> 00:36:17,200
on a microscope 18 wires were attached

985
00:36:17,200 --> 00:36:18,560
to this

986
00:36:18,560 --> 00:36:22,000
so we attached 18 wires to this chip

987
00:36:22,000 --> 00:36:24,720
that was saturday night so i did that

988
00:36:24,720 --> 00:36:26,079
well i stopped halfway

989
00:36:26,079 --> 00:36:28,880
through it because i'm like you just

990
00:36:28,880 --> 00:36:29,599
have to stop

991
00:36:29,599 --> 00:36:31,440
you know i usually lay three or four

992
00:36:31,440 --> 00:36:33,440
wires and then go do something else at

993
00:36:33,440 --> 00:36:33,839
work

994
00:36:33,839 --> 00:36:36,000
and then come back do three or four more

995
00:36:36,000 --> 00:36:38,240
and usually it's

996
00:36:38,240 --> 00:36:40,640
30 minutes of real work but you know

997
00:36:40,640 --> 00:36:41,760
it's spread out over

998
00:36:41,760 --> 00:36:44,320
four hours five hours so we kind of did

999
00:36:44,320 --> 00:36:45,440
that

1000
00:36:45,440 --> 00:36:47,680
and then it was like okay how do i catch

1001
00:36:47,680 --> 00:36:49,520
this to my

1002
00:36:49,520 --> 00:36:52,160
chip reader

1003
00:36:52,560 --> 00:36:55,599
well i build a breakout board

1004
00:36:55,599 --> 00:36:58,320
i build this breakout board the function

1005
00:36:58,320 --> 00:37:00,160
to plug into a zip socket i don't know

1006
00:37:00,160 --> 00:37:02,320
if anyone knows what a zip socket is

1007
00:37:02,320 --> 00:37:05,520
basically it's a 48 pin uh

1008
00:37:05,520 --> 00:37:07,520
socket where the leads stick down in it

1009
00:37:07,520 --> 00:37:09,040
and then you crank this lever down to

1010
00:37:09,040 --> 00:37:10,160
hold them tight

1011
00:37:10,160 --> 00:37:11,680
and that's what's in the chip reader

1012
00:37:11,680 --> 00:37:14,320
it's a zip socket so i build a breakout

1013
00:37:14,320 --> 00:37:16,640
board

1014
00:37:16,640 --> 00:37:19,920
and then i literally wire that chip

1015
00:37:19,920 --> 00:37:23,359
onto the breakout board so here you'll

1016
00:37:23,359 --> 00:37:26,720
be able to see what it looks like

1017
00:37:27,839 --> 00:37:30,240
try not to bust the wires but here is

1018
00:37:30,240 --> 00:37:31,359
the

1019
00:37:31,359 --> 00:37:33,960
do-it-yourself zip socket plug for

1020
00:37:33,960 --> 00:37:35,440
tsop48

1021
00:37:35,440 --> 00:37:37,280
and then i wire that up using the

1022
00:37:37,280 --> 00:37:39,040
datasheets of all the

1023
00:37:39,040 --> 00:37:41,200
data lines and write lines to match up

1024
00:37:41,200 --> 00:37:44,000
to the tsop48 that i'm trying to mimic

1025
00:37:44,000 --> 00:37:45,599
and then i just tell the damn chip

1026
00:37:45,599 --> 00:37:47,280
reader when it says

1027
00:37:47,280 --> 00:37:49,440
hey that chip id doesn't match i'm like

1028
00:37:49,440 --> 00:37:51,119
ah ignore it

1029
00:37:51,119 --> 00:37:53,119
and instantly we were able to adopt all

1030
00:37:53,119 --> 00:37:55,119
the memory off this chip that way

1031
00:37:55,119 --> 00:37:58,960
so so not that it had anything to do

1032
00:37:58,960 --> 00:38:00,320
with this talk but

1033
00:38:00,320 --> 00:38:02,640
damn it i spent my weekend doing this

1034
00:38:02,640 --> 00:38:05,839
you guys are going to listen to it

1035
00:38:07,280 --> 00:38:10,800
any questions about that uh

1036
00:38:11,520 --> 00:38:19,599
okay let's see if we get up here

1037
00:38:19,599 --> 00:38:23,280
okay so uh modular interactions

1038
00:38:23,280 --> 00:38:25,440
so how do we gonna interact with these

1039
00:38:25,440 --> 00:38:26,640
modules once they're

1040
00:38:26,640 --> 00:38:28,079
in circuit i can't even remember what

1041
00:38:28,079 --> 00:38:30,320
these slides are gonna actually do

1042
00:38:30,320 --> 00:38:32,640
so here's here's another thing here's

1043
00:38:32,640 --> 00:38:34,000
one way

1044
00:38:34,000 --> 00:38:35,440
to really get an understanding of

1045
00:38:35,440 --> 00:38:37,200
interaction often

1046
00:38:37,200 --> 00:38:39,440
often uh in some cases i'll actually use

1047
00:38:39,440 --> 00:38:40,560
the development board so we get

1048
00:38:40,560 --> 00:38:42,560
manufacturers to actually produce

1049
00:38:42,560 --> 00:38:44,480
development boards for their products

1050
00:38:44,480 --> 00:38:45,920
now it isn't like daryl's going to go

1051
00:38:45,920 --> 00:38:47,520
write in any kind of

1052
00:38:47,520 --> 00:38:49,119
cool code or anything i don't really

1053
00:38:49,119 --> 00:38:50,960
care but i want to understand how the

1054
00:38:50,960 --> 00:38:52,160
chips work

1055
00:38:52,160 --> 00:38:53,680
and often we can do it with these

1056
00:38:53,680 --> 00:38:55,280
development boards which

1057
00:38:55,280 --> 00:38:57,359
are very efficient way of actually

1058
00:38:57,359 --> 00:38:58,480
approaching

1059
00:38:58,480 --> 00:39:01,680
evaluating a product and looking at it

1060
00:39:01,680 --> 00:39:04,400
plus when i have a development board if

1061
00:39:04,400 --> 00:39:06,560
i ever encounter which will

1062
00:39:06,560 --> 00:39:08,880
will reiterate this down the road if i

1063
00:39:08,880 --> 00:39:10,079
ever encounter

1064
00:39:10,079 --> 00:39:13,760
an iot technology that has

1065
00:39:13,760 --> 00:39:16,560
the same chip or similar chip in it or

1066
00:39:16,560 --> 00:39:17,920
something close enough

1067
00:39:17,920 --> 00:39:20,560
i could take a development board steal

1068
00:39:20,560 --> 00:39:21,839
the functioning

1069
00:39:21,839 --> 00:39:24,400
configurations off the iot device which

1070
00:39:24,400 --> 00:39:25,359
we're going to show

1071
00:39:25,359 --> 00:39:28,000
how to get that and put it on a

1072
00:39:28,000 --> 00:39:29,040
development board

1073
00:39:29,040 --> 00:39:32,000
which would give me access just like

1074
00:39:32,000 --> 00:39:33,520
this was a router

1075
00:39:33,520 --> 00:39:36,640
to the back end of the manufacturer that

1076
00:39:36,640 --> 00:39:38,000
iot's back in

1077
00:39:38,000 --> 00:39:41,520
cloud systems just like i was the device

1078
00:39:41,520 --> 00:39:43,839
basically taking their device out of it

1079
00:39:43,839 --> 00:39:45,200
so the the goal

1080
00:39:45,200 --> 00:39:46,560
this is one of the goals i'm working on

1081
00:39:46,560 --> 00:39:48,560
how do we better develop testing

1082
00:39:48,560 --> 00:39:50,720
methodologies to help vendors

1083
00:39:50,720 --> 00:39:53,839
check their products we go blind a lot

1084
00:39:53,839 --> 00:39:55,040
of times

1085
00:39:55,040 --> 00:39:57,280
we make assumptions a lot of times i

1086
00:39:57,280 --> 00:39:59,680
don't like assumptions my goal is to

1087
00:39:59,680 --> 00:40:01,920
produce processes where we can actually

1088
00:40:01,920 --> 00:40:03,440
do those testing that's why

1089
00:40:03,440 --> 00:40:04,960
another reason why i'm doing a lot of

1090
00:40:04,960 --> 00:40:07,200
this

1091
00:40:08,960 --> 00:40:11,680
okay so um often these modules are

1092
00:40:11,680 --> 00:40:13,599
interacting in two ways

1093
00:40:13,599 --> 00:40:15,599
uh when i say there's there's more

1094
00:40:15,599 --> 00:40:17,119
things that interact with the chip

1095
00:40:17,119 --> 00:40:19,839
okay or the modules the ones i care

1096
00:40:19,839 --> 00:40:21,119
about are either going to be

1097
00:40:21,119 --> 00:40:24,800
typically uart or usb

1098
00:40:24,800 --> 00:40:29,839
okay so and based on the manufacturer

1099
00:40:29,839 --> 00:40:32,560
either one of these either usb or uart

1100
00:40:32,560 --> 00:40:34,480
can be used for command

1101
00:40:34,480 --> 00:40:37,520
or data or both

1102
00:40:37,520 --> 00:40:38,960
and it varies and both of these are

1103
00:40:38,960 --> 00:40:40,720
available in at least every module that

1104
00:40:40,720 --> 00:40:42,240
i've actually looked at

1105
00:40:42,240 --> 00:40:45,760
when we start looking at usb you could

1106
00:40:45,760 --> 00:40:47,599
based on the type of device interacted

1107
00:40:47,599 --> 00:40:48,240
directly

1108
00:40:48,240 --> 00:40:52,079
like a modem a cellular modem i can

1109
00:40:52,079 --> 00:40:52,480
connect

1110
00:40:52,480 --> 00:40:54,960
externally via usb and interact with the

1111
00:40:54,960 --> 00:40:57,200
device

1112
00:40:57,200 --> 00:40:58,800
or you can do it through interchip

1113
00:40:58,800 --> 00:41:00,800
communications there's three different

1114
00:41:00,800 --> 00:41:02,560
types of interchip communications for

1115
00:41:02,560 --> 00:41:03,839
usb

1116
00:41:03,839 --> 00:41:06,079
that will be used on these modules one

1117
00:41:06,079 --> 00:41:07,200
is known as

1118
00:41:07,200 --> 00:41:09,920
hsic which is known as high speed inner

1119
00:41:09,920 --> 00:41:11,119
chip

1120
00:41:11,119 --> 00:41:13,520
high speed inner chip it runs at a high

1121
00:41:13,520 --> 00:41:14,960
speed mode

1122
00:41:14,960 --> 00:41:16,800
and i think they're actually developing

1123
00:41:16,800 --> 00:41:18,640
some faster standards than that i

1124
00:41:18,640 --> 00:41:20,000
haven't seen him yet

1125
00:41:20,000 --> 00:41:22,960
but it's a high speed inner chip it does

1126
00:41:22,960 --> 00:41:24,400
not have the

1127
00:41:24,400 --> 00:41:27,440
it follows the standard protocol

1128
00:41:27,440 --> 00:41:30,480
pretty close what it doesn't have

1129
00:41:30,480 --> 00:41:34,880
it doesn't have um can't have 16 devices

1130
00:41:34,880 --> 00:41:36,720
it just sees one device one device will

1131
00:41:36,720 --> 00:41:39,520
connect up it also has a link limitation

1132
00:41:39,520 --> 00:41:41,359
of three centimeters

1133
00:41:41,359 --> 00:41:44,800
it's on a circuit board if it goes more

1134
00:41:44,800 --> 00:41:46,560
than three centimeters then you know the

1135
00:41:46,560 --> 00:41:46,960
chip

1136
00:41:46,960 --> 00:41:50,720
that they're using is probably not using

1137
00:41:50,720 --> 00:41:53,760
high-speed interchip it's actually using

1138
00:41:53,760 --> 00:41:57,200
standard okay

1139
00:41:57,200 --> 00:41:58,640
so when you get onto the boards and i've

1140
00:41:58,640 --> 00:42:01,040
seen some i have i have one here

1141
00:42:01,040 --> 00:42:05,279
which was a project i was working on

1142
00:42:05,760 --> 00:42:10,000
this one here this is a module here

1143
00:42:10,000 --> 00:42:13,280
a usb module here or i'm sorry cellular

1144
00:42:13,280 --> 00:42:14,800
module here

1145
00:42:14,800 --> 00:42:16,960
that connects in and has all the circuit

1146
00:42:16,960 --> 00:42:18,880
this one actually uses some impedance

1147
00:42:18,880 --> 00:42:19,920
circuits

1148
00:42:19,920 --> 00:42:21,920
to actually get past that to bump it

1149
00:42:21,920 --> 00:42:24,240
over but this one appears to be

1150
00:42:24,240 --> 00:42:27,200
high speed inner chip on this one here

1151
00:42:27,200 --> 00:42:28,560
the reason why i say that

1152
00:42:28,560 --> 00:42:31,119
is uh well i was trying to read it and

1153
00:42:31,119 --> 00:42:32,960
none of my stuff could read it

1154
00:42:32,960 --> 00:42:35,119
sadly and i was having problems with

1155
00:42:35,119 --> 00:42:36,240
that but i've been working on that

1156
00:42:36,240 --> 00:42:37,520
problem i've actually picked up the

1157
00:42:37,520 --> 00:42:38,640
hardware

1158
00:42:38,640 --> 00:42:41,359
and i'm looking at possibly seeing what

1159
00:42:41,359 --> 00:42:42,960
the possibility of building high-speed

1160
00:42:42,960 --> 00:42:44,400
interchip relays

1161
00:42:44,400 --> 00:42:46,640
circuits so basically relaying it out

1162
00:42:46,640 --> 00:42:47,760
it's one of the things i want to look at

1163
00:42:47,760 --> 00:42:48,560
doing

1164
00:42:48,560 --> 00:42:51,599
but but they also do standard if they do

1165
00:42:51,599 --> 00:42:52,480
standard

1166
00:42:52,480 --> 00:42:54,319
you can literally route the data off the

1167
00:42:54,319 --> 00:42:55,760
board

1168
00:42:55,760 --> 00:42:58,640
through a usb sniffer i have i have one

1169
00:42:58,640 --> 00:43:00,400
of those devices and back into the board

1170
00:43:00,400 --> 00:43:01,920
again and it should work

1171
00:43:01,920 --> 00:43:03,520
give you the ability to see all of that

1172
00:43:03,520 --> 00:43:05,040
data traffic that's

1173
00:43:05,040 --> 00:43:07,040
theory i have not tested that i've just

1174
00:43:07,040 --> 00:43:09,119
managed to spend the freaking money

1175
00:43:09,119 --> 00:43:10,480
i haven't tested it in the real

1176
00:43:10,480 --> 00:43:12,560
environment yet and then there's uart

1177
00:43:12,560 --> 00:43:15,839
uh which is external

1178
00:43:16,000 --> 00:43:18,000
and internship so you can have external

1179
00:43:18,000 --> 00:43:20,079
uart connectivity to a device

1180
00:43:20,079 --> 00:43:22,640
but you use internship and again i

1181
00:43:22,640 --> 00:43:23,920
mentioned that paper i wrote which

1182
00:43:23,920 --> 00:43:25,520
focuses really heavy on interchip

1183
00:43:25,520 --> 00:43:26,640
analysis

1184
00:43:26,640 --> 00:43:28,240
and we're going to see some of this here

1185
00:43:28,240 --> 00:43:30,319
in just a few minutes and the one i

1186
00:43:30,319 --> 00:43:32,400
missed was e-usb

1187
00:43:32,400 --> 00:43:37,520
which is embedded usb embedded usb

1188
00:43:37,520 --> 00:43:41,520
another interesting standard

1189
00:43:41,520 --> 00:43:43,520
not quite sure i haven't seen it yet

1190
00:43:43,520 --> 00:43:44,800
that's why it's in yellow

1191
00:43:44,800 --> 00:43:47,839
in iot based technology other than i've

1192
00:43:47,839 --> 00:43:49,440
seen it in industrial

1193
00:43:49,440 --> 00:43:52,400
and i've seen e-usb standard utilized to

1194
00:43:52,400 --> 00:43:55,839
connect to

1195
00:43:56,079 --> 00:43:59,119
actual gosh

1196
00:43:59,119 --> 00:44:02,079
drives flash drive systems so you have a

1197
00:44:02,079 --> 00:44:03,920
flash drive that will have e-usb

1198
00:44:03,920 --> 00:44:05,040
capability versus

1199
00:44:05,040 --> 00:44:08,400
usb capability and again it's

1200
00:44:08,400 --> 00:44:11,680
short range uh the thing is though eusb

1201
00:44:11,680 --> 00:44:14,160
already has standard chips available as

1202
00:44:14,160 --> 00:44:14,800
relays

1203
00:44:14,800 --> 00:44:16,640
so you can buy a chip dump it into the

1204
00:44:16,640 --> 00:44:19,040
chip it'll dump it over to standard usb

1205
00:44:19,040 --> 00:44:20,160
and then you put another one on the

1206
00:44:20,160 --> 00:44:22,079
other end to take it back the other way

1207
00:44:22,079 --> 00:44:25,359
which is how it's typically done in like

1208
00:44:25,359 --> 00:44:26,960
industrial equipment that need

1209
00:44:26,960 --> 00:44:29,920
flash large flash drive systems uh that

1210
00:44:29,920 --> 00:44:31,440
they multiply share

1211
00:44:31,440 --> 00:44:34,720
uh you know like on a truck or

1212
00:44:34,720 --> 00:44:36,960
a lift truck or some kind of vehicle

1213
00:44:36,960 --> 00:44:39,200
which i've actually seen him use for

1214
00:44:39,200 --> 00:44:42,160
any questions i want to run out of time

1215
00:44:42,160 --> 00:44:43,440
here

1216
00:44:43,440 --> 00:44:51,839
no questions come on

1217
00:44:52,800 --> 00:44:54,400
no i don't think it's proprietary i

1218
00:44:54,400 --> 00:44:55,599
don't think it's proprietary there's

1219
00:44:55,599 --> 00:44:57,119
documented standards out there and it's

1220
00:44:57,119 --> 00:44:57,440
all

1221
00:44:57,440 --> 00:44:59,839
it's all open uh again i haven't seen it

1222
00:44:59,839 --> 00:45:00,960
a whole lot i just

1223
00:45:00,960 --> 00:45:03,280
recently i encountered it about a year

1224
00:45:03,280 --> 00:45:04,160
ago

1225
00:45:04,160 --> 00:45:05,680
and then i started looking into it

1226
00:45:05,680 --> 00:45:07,280
trying to figure out hey when i'm

1227
00:45:07,280 --> 00:45:09,200
looking at iot technology what am i

1228
00:45:09,200 --> 00:45:11,040
looking at is it standard

1229
00:45:11,040 --> 00:45:13,760
is it high speed is it esub how do i

1230
00:45:13,760 --> 00:45:15,440
tell am i going to have to tell by

1231
00:45:15,440 --> 00:45:17,440
data sheets on the manufacturer which is

1232
00:45:17,440 --> 00:45:19,680
typically the only way to do it

1233
00:45:19,680 --> 00:45:22,079
i think this the chip that i have up

1234
00:45:22,079 --> 00:45:23,440
there or the chip on one of these

1235
00:45:23,440 --> 00:45:24,160
devices

1236
00:45:24,160 --> 00:45:26,079
or that thing i'm passing around

1237
00:45:26,079 --> 00:45:28,240
actually the

1238
00:45:28,240 --> 00:45:30,560
no not that one this one right here

1239
00:45:30,560 --> 00:45:32,000
actually this here

1240
00:45:32,000 --> 00:45:35,520
let's see here which we'll show in a

1241
00:45:35,520 --> 00:45:36,000
minute

1242
00:45:36,000 --> 00:45:38,400
this one here actually the usb is

1243
00:45:38,400 --> 00:45:39,119
standard

1244
00:45:39,119 --> 00:45:42,560
on this and this is for the simply safe

1245
00:45:42,560 --> 00:45:45,359
home wi-fi system you can see i already

1246
00:45:45,359 --> 00:45:48,560
tapped into the circuit so

1247
00:45:48,880 --> 00:45:52,240
yes i should so let's come over here

1248
00:45:52,240 --> 00:45:53,760
here's the the modem i mentioned the

1249
00:45:53,760 --> 00:45:55,040
multi-tech i thought i brought it with

1250
00:45:55,040 --> 00:45:56,960
me but i can't seem to find it

1251
00:45:56,960 --> 00:45:59,839
um so how do you communicate with

1252
00:45:59,839 --> 00:46:02,319
modules

1253
00:46:02,560 --> 00:46:06,880
at commands and you think really

1254
00:46:06,880 --> 00:46:10,000
oh hell yeah and it varies from vendor

1255
00:46:10,000 --> 00:46:11,680
to vendor but there's some pretty

1256
00:46:11,680 --> 00:46:12,400
intense

1257
00:46:12,400 --> 00:46:15,040
structure in those you can have file

1258
00:46:15,040 --> 00:46:16,240
service capability

1259
00:46:16,240 --> 00:46:18,880
firewall and socket services or can be

1260
00:46:18,880 --> 00:46:20,319
set up and enabled

1261
00:46:20,319 --> 00:46:21,920
you can actually allow incoming

1262
00:46:21,920 --> 00:46:24,480
connections

1263
00:46:24,480 --> 00:46:27,280
ftp services you can move files do

1264
00:46:27,280 --> 00:46:28,800
firmware upgrades bring it down

1265
00:46:28,800 --> 00:46:32,240
execute it that way mqt services which i

1266
00:46:32,240 --> 00:46:34,640
encountered didn't encounter on this

1267
00:46:34,640 --> 00:46:36,319
research but on work i'd done in the

1268
00:46:36,319 --> 00:46:37,599
past

1269
00:46:37,599 --> 00:46:40,800
where we weren't we work i was doing i

1270
00:46:40,800 --> 00:46:43,040
actually captured the data

1271
00:46:43,040 --> 00:46:44,480
or pulled the data out of the

1272
00:46:44,480 --> 00:46:47,119
processor's firmware for talking to

1273
00:46:47,119 --> 00:46:50,560
the actual cellular modem which was out

1274
00:46:50,560 --> 00:46:50,800
of

1275
00:46:50,800 --> 00:46:52,160
out of scope in the test they didn't

1276
00:46:52,160 --> 00:46:54,319
really care but it contained all the

1277
00:46:54,319 --> 00:46:55,599
mqtt

1278
00:46:55,599 --> 00:46:58,240
configurations to actually set up

1279
00:46:58,240 --> 00:46:59,920
authenticate certificates

1280
00:46:59,920 --> 00:47:03,200
everything back to the cloud services so

1281
00:47:03,200 --> 00:47:06,400
um yeah at commands

1282
00:47:06,400 --> 00:47:08,640
it's kind of cool they're easy to use

1283
00:47:08,640 --> 00:47:10,319
everyone has their own manual

1284
00:47:10,319 --> 00:47:12,720
they're all a lot of them are fairly

1285
00:47:12,720 --> 00:47:13,520
standard but

1286
00:47:13,520 --> 00:47:16,000
we'll see some of it here in a minute so

1287
00:47:16,000 --> 00:47:17,760
here's some examples again this is kind

1288
00:47:17,760 --> 00:47:18,880
of crappy

1289
00:47:18,880 --> 00:47:20,960
so this is in the multi-tech so down

1290
00:47:20,960 --> 00:47:23,280
here we can see the ate frwl

1291
00:47:23,280 --> 00:47:25,839
which is actually check for firewall so

1292
00:47:25,839 --> 00:47:27,599
basically zero zero zero zeros all

1293
00:47:27,599 --> 00:47:28,800
across just says

1294
00:47:28,800 --> 00:47:31,200
dump everything it literally says that

1295
00:47:31,200 --> 00:47:32,480
means dump everything

1296
00:47:32,480 --> 00:47:35,119
so i went ahead and put my home so

1297
00:47:35,119 --> 00:47:36,559
everyone wants my home

1298
00:47:36,559 --> 00:47:40,720
ip address it's right there

1299
00:47:40,720 --> 00:47:42,559
if you ever want to play with it i don't

1300
00:47:42,559 --> 00:47:44,240
really care it's on the internet i'm

1301
00:47:44,240 --> 00:47:46,400
sure everyone else has

1302
00:47:46,400 --> 00:47:48,079
so i actually put that in there i didn't

1303
00:47:48,079 --> 00:47:49,599
test to see what it would do because i

1304
00:47:49,599 --> 00:47:50,000
wasn't

1305
00:47:50,000 --> 00:47:52,079
i hadn't put a functioning sim card in

1306
00:47:52,079 --> 00:47:53,760
this device yet

1307
00:47:53,760 --> 00:47:56,880
or at that time i hadn't done it so then

1308
00:47:56,880 --> 00:47:58,960
i was wanting to play with file services

1309
00:47:58,960 --> 00:48:01,200
so you can actually create a file with

1310
00:48:01,200 --> 00:48:02,960
atk and mtm write

1311
00:48:02,960 --> 00:48:05,680
so i can write to a file system and when

1312
00:48:05,680 --> 00:48:07,200
you look at config

1313
00:48:07,200 --> 00:48:10,160
devices that have been set up and config

1314
00:48:10,160 --> 00:48:11,760
this is kind of like i've seen this

1315
00:48:11,760 --> 00:48:14,880
actually used as a way to store crap

1316
00:48:14,880 --> 00:48:16,480
so the vendor will say hey you know we

1317
00:48:16,480 --> 00:48:18,640
have all these configurations

1318
00:48:18,640 --> 00:48:20,400
let's store them here and then we can

1319
00:48:20,400 --> 00:48:22,079
call them from there and then execute

1320
00:48:22,079 --> 00:48:23,520
them and that way no one can get it out

1321
00:48:23,520 --> 00:48:25,119
of our firmware because

1322
00:48:25,119 --> 00:48:26,960
no one's smart enough to type in a damn

1323
00:48:26,960 --> 00:48:29,920
at command so

1324
00:48:29,920 --> 00:48:33,680
just here and then and then of course

1325
00:48:33,680 --> 00:48:35,200
here is me doing atm

1326
00:48:35,200 --> 00:48:38,720
mtm list they actually get the list file

1327
00:48:38,720 --> 00:48:41,359
so and some of the more advanced chips

1328
00:48:41,359 --> 00:48:42,800
i've looked at you've seen

1329
00:48:42,800 --> 00:48:44,720
you can actually start setting file

1330
00:48:44,720 --> 00:48:46,880
system security levels and access

1331
00:48:46,880 --> 00:48:49,040
rights and all of this type of stuff

1332
00:48:49,040 --> 00:48:50,400
just kind of amazing

1333
00:48:50,400 --> 00:48:53,040
based on how advanced the chip is most

1334
00:48:53,040 --> 00:48:54,319
of these low end

1335
00:48:54,319 --> 00:48:58,960
nbiots and m1s or ltms

1336
00:48:58,960 --> 00:49:01,040
don't see all that many advanced stuff

1337
00:49:01,040 --> 00:49:02,480
you may see

1338
00:49:02,480 --> 00:49:04,240
because in this case it's really low

1339
00:49:04,240 --> 00:49:06,720
bandwidth so if you buy more higher

1340
00:49:06,720 --> 00:49:09,359
bandwidth type modules and chips

1341
00:49:09,359 --> 00:49:10,319
then you're going to see more

1342
00:49:10,319 --> 00:49:12,319
functionality built into them and these

1343
00:49:12,319 --> 00:49:12,880
in

1344
00:49:12,880 --> 00:49:15,599
in these at command manuals like i had

1345
00:49:15,599 --> 00:49:18,079
one it was like 300 pages

1346
00:49:18,079 --> 00:49:20,319
on a chip so massive amount of command

1347
00:49:20,319 --> 00:49:23,119
structure on these

1348
00:49:24,480 --> 00:49:27,839
so interaction on the hardware

1349
00:49:27,839 --> 00:49:29,920
so this this this picture up here

1350
00:49:29,920 --> 00:49:30,960
happens to be

1351
00:49:30,960 --> 00:49:34,240
the um simply safe

1352
00:49:34,240 --> 00:49:36,079
again i wasn't looking to hack into

1353
00:49:36,079 --> 00:49:38,640
anything i was just looking to

1354
00:49:38,640 --> 00:49:42,079
um be able to

1355
00:49:42,079 --> 00:49:43,839
try some stuff out and just get some

1356
00:49:43,839 --> 00:49:45,760
bass lines

1357
00:49:45,760 --> 00:49:47,280
and then uh we'll get this here in a

1358
00:49:47,280 --> 00:49:48,880
minute here we go

1359
00:49:48,880 --> 00:49:51,119
but uh as we proceed forward we're going

1360
00:49:51,119 --> 00:49:52,960
to start off with this is

1361
00:49:52,960 --> 00:49:56,640
one of the tests that i did so again

1362
00:49:56,640 --> 00:49:59,200
we go back into we need access how do

1363
00:49:59,200 --> 00:50:00,400
you get access

1364
00:50:00,400 --> 00:50:04,000
in this particular case we had a module

1365
00:50:04,000 --> 00:50:06,319
that's the module on the on the picture

1366
00:50:06,319 --> 00:50:07,440
on the left

1367
00:50:07,440 --> 00:50:09,520
the right to it it's been a d shielded

1368
00:50:09,520 --> 00:50:11,680
module that's setting there i can't even

1369
00:50:11,680 --> 00:50:13,760
remember who what brand that is

1370
00:50:13,760 --> 00:50:15,920
but it's a de-shielded module there and

1371
00:50:15,920 --> 00:50:17,040
we were wanting to

1372
00:50:17,040 --> 00:50:20,880
identify at or the

1373
00:50:20,880 --> 00:50:24,240
uart and the usb since we couldn't

1374
00:50:24,240 --> 00:50:25,440
identify it anyway

1375
00:50:25,440 --> 00:50:28,160
we actually off chipped it we removed it

1376
00:50:28,160 --> 00:50:29,920
from the device

1377
00:50:29,920 --> 00:50:31,760
and from there we were able to trace it

1378
00:50:31,760 --> 00:50:33,440
out so we can see where we traced it

1379
00:50:33,440 --> 00:50:35,040
from the land grid array

1380
00:50:35,040 --> 00:50:38,839
out to some actually impedance matching

1381
00:50:38,839 --> 00:50:42,400
resistors so if i try to

1382
00:50:42,400 --> 00:50:43,760
trace something like this out i would

1383
00:50:43,760 --> 00:50:45,599
have never identified because of the

1384
00:50:45,599 --> 00:50:46,400
resistors that

1385
00:50:46,400 --> 00:50:48,240
screw you up every time so you have the

1386
00:50:48,240 --> 00:50:50,400
physical vision so this gave me the

1387
00:50:50,400 --> 00:50:51,520
ability to

1388
00:50:51,520 --> 00:50:53,280
actually tap into it and here's the

1389
00:50:53,280 --> 00:50:56,160
actual module this particular case

1390
00:50:56,160 --> 00:50:59,680
it wasn't successful only for one reason

1391
00:50:59,680 --> 00:51:01,920
is i totally smoked the base unit before

1392
00:51:01,920 --> 00:51:02,870
i got to this point

1393
00:51:02,870 --> 00:51:06,079
[Laughter]

1394
00:51:06,079 --> 00:51:08,160
because everything i tapped in just had

1395
00:51:08,160 --> 00:51:11,440
a damn 60 hertz hum on it

1396
00:51:11,440 --> 00:51:13,760
and i'm like hey man this red light's

1397
00:51:13,760 --> 00:51:15,359
like red light all the time it never

1398
00:51:15,359 --> 00:51:16,400
goes green

1399
00:51:16,400 --> 00:51:19,599
so uh things do go bad yes

1400
00:51:19,599 --> 00:51:21,280
just out of curiosity what is your

1401
00:51:21,280 --> 00:51:22,880
methodology for tracy

1402
00:51:22,880 --> 00:51:26,000
it looks like that's a dual layer

1403
00:51:26,240 --> 00:51:28,319
yeah i just use use a multimeter just

1404
00:51:28,319 --> 00:51:30,640
use a continuity check on a multimeter

1405
00:51:30,640 --> 00:51:33,760
typically that in visual uh and in the

1406
00:51:33,760 --> 00:51:36,720
paper i wrote i actually discussed that

1407
00:51:36,720 --> 00:51:38,480
that the kind of concept is kind of a

1408
00:51:38,480 --> 00:51:40,000
combination of both

1409
00:51:40,000 --> 00:51:41,760
it's like you got a multimeter but you

1410
00:51:41,760 --> 00:51:43,760
also got to take into consideration

1411
00:51:43,760 --> 00:51:47,119
multi-layer boards components in the way

1412
00:51:47,119 --> 00:51:48,880
so you have to be able to trace through

1413
00:51:48,880 --> 00:51:51,200
and take those out and figure them out

1414
00:51:51,200 --> 00:51:53,760
i think even in a white paper i get into

1415
00:51:53,760 --> 00:51:55,520
there was actually components in the way

1416
00:51:55,520 --> 00:51:57,200
and i was wanting to tap the circuit

1417
00:51:57,200 --> 00:51:59,520
so we literally removed resistors and

1418
00:51:59,520 --> 00:52:00,880
moved them to the other side of the

1419
00:52:00,880 --> 00:52:03,200
board

1420
00:52:03,520 --> 00:52:05,280
in the actual test so we could actually

1421
00:52:05,280 --> 00:52:06,960
open it up and make it easier to tap

1422
00:52:06,960 --> 00:52:10,000
into it as an example but uh that was

1423
00:52:10,000 --> 00:52:11,680
kind of a failure but as you can see we

1424
00:52:11,680 --> 00:52:12,400
actually

1425
00:52:12,400 --> 00:52:15,119
hot air we actually removed the

1426
00:52:15,119 --> 00:52:16,880
component was able to trace everything

1427
00:52:16,880 --> 00:52:18,079
back and then put it back

1428
00:52:18,079 --> 00:52:21,040
on and as far as i know it's i i was

1429
00:52:21,040 --> 00:52:23,119
never able to 100 validate his back on

1430
00:52:23,119 --> 00:52:24,640
functioning

1431
00:52:24,640 --> 00:52:28,240
uh and there's a really bad funny story

1432
00:52:28,240 --> 00:52:29,680
with this we got five minutes i'll have

1433
00:52:29,680 --> 00:52:31,119
to go here in a second

1434
00:52:31,119 --> 00:52:35,040
so um when i put this into the oven

1435
00:52:35,040 --> 00:52:38,960
i forgot to take the sim card out of it

1436
00:52:39,599 --> 00:52:43,359
so so so i opened up the oven i pulled

1437
00:52:43,359 --> 00:52:44,240
it out of the oven

1438
00:52:44,240 --> 00:52:46,000
i pulled the component off it all cooled

1439
00:52:46,000 --> 00:52:47,359
down i go back in

1440
00:52:47,359 --> 00:52:50,480
and i noticed the sim card slot

1441
00:52:50,480 --> 00:52:53,119
had all of this white stuff squeezing

1442
00:52:53,119 --> 00:52:56,160
out of all the holes

1443
00:52:57,839 --> 00:53:02,960
so uh what i did was i'm like

1444
00:53:02,960 --> 00:53:06,160
besides go oh um

1445
00:53:06,160 --> 00:53:08,079
i actually took a razor blade after it

1446
00:53:08,079 --> 00:53:10,319
cooled cut all of the stuff off that was

1447
00:53:10,319 --> 00:53:11,839
sticking out

1448
00:53:11,839 --> 00:53:13,599
and was able to pull what was left of

1449
00:53:13,599 --> 00:53:15,359
the sim card out

1450
00:53:15,359 --> 00:53:17,440
and then i actually cut the circuit out

1451
00:53:17,440 --> 00:53:18,640
of the sim card

1452
00:53:18,640 --> 00:53:21,839
and rebuild a sim card

1453
00:53:21,839 --> 00:53:24,160
just by using a you know one of the you

1454
00:53:24,160 --> 00:53:26,079
know the sim card resizing

1455
00:53:26,079 --> 00:53:28,079
kit you get if you need to go to a

1456
00:53:28,079 --> 00:53:29,119
larger size

1457
00:53:29,119 --> 00:53:30,800
i just took one of those and glued it

1458
00:53:30,800 --> 00:53:32,559
into that and it does work

1459
00:53:32,559 --> 00:53:35,200
the sim card does i validated that but

1460
00:53:35,200 --> 00:53:38,078
it's it's like that

1461
00:53:38,640 --> 00:53:40,720
you know one of those moments you know

1462
00:53:40,720 --> 00:53:42,079
yeah i do this stuff all the time

1463
00:53:42,079 --> 00:53:44,319
and i'm still amazed at the absolute

1464
00:53:44,319 --> 00:53:46,480
stupid things i do

1465
00:53:46,480 --> 00:53:48,640
but

1466
00:53:50,319 --> 00:53:52,640
but you can see this when we tapped into

1467
00:53:52,640 --> 00:53:54,000
usb

1468
00:53:54,000 --> 00:53:56,000
usb and i can't tell you which ones

1469
00:53:56,000 --> 00:53:57,040
which but usb

1470
00:53:57,040 --> 00:53:59,280
and uh uart on that don't take the sim

1471
00:53:59,280 --> 00:54:00,319
card out

1472
00:54:00,319 --> 00:54:01,760
because i don't literally own that sim

1473
00:54:01,760 --> 00:54:03,280
card it splunks to somebody else i

1474
00:54:03,280 --> 00:54:06,400
destroyed their sim card

1475
00:54:06,559 --> 00:54:08,960
okay so internship communication in the

1476
00:54:08,960 --> 00:54:10,640
case of

1477
00:54:10,640 --> 00:54:12,800
this particular device here which was

1478
00:54:12,800 --> 00:54:15,440
the simply safe

1479
00:54:15,440 --> 00:54:18,480
i think i may pass that around

1480
00:54:18,480 --> 00:54:20,800
we actually you see the unit cellular

1481
00:54:20,800 --> 00:54:22,720
modem primary unit modem

1482
00:54:22,720 --> 00:54:25,680
and this case it was nice it was a cable

1483
00:54:25,680 --> 00:54:27,280
so we were able to actually

1484
00:54:27,280 --> 00:54:31,760
cut the cable and get access to the uart

1485
00:54:31,760 --> 00:54:35,119
uh and be able to tap into that uh

1486
00:54:35,119 --> 00:54:37,200
shoot a few short videos see if we get

1487
00:54:37,200 --> 00:54:39,839
these going

1488
00:54:45,280 --> 00:54:47,440
let me get to these videos which one

1489
00:54:47,440 --> 00:54:48,400
would you like

1490
00:54:48,400 --> 00:54:50,839
like what's the name of them bring them

1491
00:54:50,839 --> 00:54:53,839
up

1492
00:55:05,680 --> 00:55:07,520
run that one i don't know which this

1493
00:55:07,520 --> 00:55:09,599
video is we'll see how it works

1494
00:55:09,599 --> 00:55:10,799
i don't know how big of a delay it's

1495
00:55:10,799 --> 00:55:12,240
going to be so you can get it on the

1496
00:55:12,240 --> 00:55:12,960
screen

1497
00:55:12,960 --> 00:55:14,799
what was that about biohack have you

1498
00:55:14,799 --> 00:55:17,920
ever been given any consideration

1499
00:55:17,920 --> 00:55:21,839
what do you mean by biohacking

1500
00:55:24,640 --> 00:55:28,000
modifying creatures no

1501
00:55:28,000 --> 00:55:30,160
okay so what we got here is we were

1502
00:55:30,160 --> 00:55:31,839
actually looking at this device i think

1503
00:55:31,839 --> 00:55:33,839
this is the one we captured in between

1504
00:55:33,839 --> 00:55:35,599
so as this thing kicks off

1505
00:55:35,599 --> 00:55:37,119
we're actually going to see the at

1506
00:55:37,119 --> 00:55:39,440
commands go from the base module

1507
00:55:39,440 --> 00:55:42,559
over to the uh the other module so it

1508
00:55:42,559 --> 00:55:44,400
starts off we just powered up the single

1509
00:55:44,400 --> 00:55:46,319
dot this is all uart

1510
00:55:46,319 --> 00:55:49,359
this case it was uh 3.3 volt uart

1511
00:55:49,359 --> 00:55:52,400
is the communication is it running

1512
00:55:52,400 --> 00:55:54,240
it's a delay so it'll take a minute it's

1513
00:55:54,240 --> 00:55:56,960
going to delay let it go it's going

1514
00:55:56,960 --> 00:55:59,520
so 80 80 and eventually you're going to

1515
00:55:59,520 --> 00:56:01,359
see the whole thing kick off

1516
00:56:01,359 --> 00:56:03,680
once this thing responds back and wakes

1517
00:56:03,680 --> 00:56:04,880
up

1518
00:56:04,880 --> 00:56:06,559
once it wakes up this thing's going to

1519
00:56:06,559 --> 00:56:08,960
flood it with a bunch of config commands

1520
00:56:08,960 --> 00:56:10,880
in this case here nothing's set up but

1521
00:56:10,880 --> 00:56:13,680
you get an idea of how it all works

1522
00:56:13,680 --> 00:56:16,960
so instantly so you see the atc reg

1523
00:56:16,960 --> 00:56:20,319
0.0 0.0 means there is no

1524
00:56:20,319 --> 00:56:24,559
cellular connection 0.0 comma 2

1525
00:56:24,559 --> 00:56:26,640
is we're in the process of trying to

1526
00:56:26,640 --> 00:56:28,480
establish a connection

1527
00:56:28,480 --> 00:56:32,400
0 comma three means we've been rejected

1528
00:56:32,400 --> 00:56:34,720
zero comma one means you have an actual

1529
00:56:34,720 --> 00:56:36,240
connection

1530
00:56:36,240 --> 00:56:38,480
um so in this case here we can see some

1531
00:56:38,480 --> 00:56:40,720
configurations we can see

1532
00:56:40,720 --> 00:56:42,960
the interesting thing is they change the

1533
00:56:42,960 --> 00:56:44,319
firewall config

1534
00:56:44,319 --> 00:56:47,680
to one one one one they also

1535
00:56:47,680 --> 00:56:50,480
uh in some other stuff that i captured

1536
00:56:50,480 --> 00:56:51,520
they had also

1537
00:56:51,520 --> 00:56:56,960
set up um in this particular case the

1538
00:56:57,839 --> 00:56:59,040
those don't seem to have much

1539
00:56:59,040 --> 00:57:00,880
information but but the sc

1540
00:57:00,880 --> 00:57:03,680
are socket configs so they start setting

1541
00:57:03,680 --> 00:57:06,000
up socket configs and they've enabled

1542
00:57:06,000 --> 00:57:08,160
icm and p

1543
00:57:08,160 --> 00:57:09,839
so once this thing established a

1544
00:57:09,839 --> 00:57:12,559
connection it's going to respond to icmp

1545
00:57:12,559 --> 00:57:14,079
connections through a socket that's

1546
00:57:14,079 --> 00:57:15,760
allowed to the back-end cloud

1547
00:57:15,760 --> 00:57:17,520
so they can validate its up so we know

1548
00:57:17,520 --> 00:57:18,720
they're going to do that from the very

1549
00:57:18,720 --> 00:57:19,520
get-go

1550
00:57:19,520 --> 00:57:20,799
as soon as it would establish a

1551
00:57:20,799 --> 00:57:24,839
connection i assume a fully functional

1552
00:57:24,839 --> 00:57:28,720
licensed simply safe contract

1553
00:57:28,720 --> 00:57:30,480
that way more stuff is going to take

1554
00:57:30,480 --> 00:57:32,000
place here

1555
00:57:32,000 --> 00:57:33,599
so guess what we're going to do next not

1556
00:57:33,599 --> 00:57:35,920
today though

1557
00:57:35,920 --> 00:57:41,839
okay let's go to the next slide

1558
00:57:44,240 --> 00:57:48,079
don't go to the go to the next movie

1559
00:57:48,079 --> 00:57:50,480
there's three movies okay slider no

1560
00:57:50,480 --> 00:57:52,799
movie

1561
00:58:06,000 --> 00:58:08,720
okay which one we just ran that one your

1562
00:58:08,720 --> 00:58:11,359
at commands which one we just run

1563
00:58:11,359 --> 00:58:14,400
bring that one up again no that was what

1564
00:58:14,400 --> 00:58:17,760
we just ran that one shut that down

1565
00:58:18,880 --> 00:58:23,520
okay do this

1566
00:58:23,520 --> 00:58:25,119
i cut three videos we'll get through

1567
00:58:25,119 --> 00:58:27,599
here in a minute

1568
00:58:30,960 --> 00:58:37,520
i apologize i run over blame it on them

1569
00:58:37,520 --> 00:58:40,960
is it running it's running okay so

1570
00:58:40,960 --> 00:58:43,680
here is another look at that same thing

1571
00:58:43,680 --> 00:58:45,280
we're doing the same thing here

1572
00:58:45,280 --> 00:58:46,559
i can't remember where they're at oh

1573
00:58:46,559 --> 00:58:48,400
this one actually

1574
00:58:48,400 --> 00:58:49,599
basically man in the middle we're

1575
00:58:49,599 --> 00:58:51,599
injecting data so we have the ability to

1576
00:58:51,599 --> 00:58:52,400
control

1577
00:58:52,400 --> 00:58:53,920
some of the communication at least from

1578
00:58:53,920 --> 00:58:56,079
a basic standpoint same thing we've seen

1579
00:58:56,079 --> 00:58:57,920
before we're connecting up this is live

1580
00:58:57,920 --> 00:58:58,480
right here

1581
00:58:58,480 --> 00:59:02,240
at the same time and then we have a um

1582
00:59:02,240 --> 00:59:04,400
a send field where you can actually send

1583
00:59:04,400 --> 00:59:06,559
data so once we establish a connection

1584
00:59:06,559 --> 00:59:07,839
we make sure everything is one

1585
00:59:07,839 --> 00:59:10,000
i actually use the board over here

1586
00:59:10,000 --> 00:59:12,319
you're going to see it here in a second

1587
00:59:12,319 --> 00:59:14,720
you'll see me reach in there and we have

1588
00:59:14,720 --> 00:59:16,400
those dip switches

1589
00:59:16,400 --> 00:59:18,559
i'm going to throw all the circuits so

1590
00:59:18,559 --> 00:59:20,240
i'm going to kill all uart communication

1591
00:59:20,240 --> 00:59:21,359
to the base unit

1592
00:59:21,359 --> 00:59:22,559
and then i'm going to go through a bunch

1593
00:59:22,559 --> 00:59:25,200
of at commands till establishes

1594
00:59:25,200 --> 00:59:26,960
once it responds back to me it'll start

1595
00:59:26,960 --> 00:59:29,680
taking commands

1596
00:59:30,400 --> 00:59:32,000
so you see me over there messing with it

1597
00:59:32,000 --> 00:59:33,599
done messing with it

1598
00:59:33,599 --> 00:59:34,880
and you have to send these we'll send

1599
00:59:34,880 --> 00:59:36,880
these 18 commands you'll see here in the

1600
00:59:36,880 --> 00:59:37,760
lower

1601
00:59:37,760 --> 00:59:39,599
center screen i don't know how many

1602
00:59:39,599 --> 00:59:42,400
times it takes

1603
00:59:44,839 --> 00:59:48,160
boom well ignore that one that one's

1604
00:59:48,160 --> 00:59:50,640
trying to connect but it's

1605
00:59:50,640 --> 00:59:52,079
it's hitting against the wall there's

1606
00:59:52,079 --> 01:00:00,160
nothing there for it to go to there it

1607
01:00:00,160 --> 01:00:00,640
goes

1608
01:00:00,640 --> 01:00:03,200
so now it starts responding to me uh and

1609
01:00:03,200 --> 01:00:04,000
then i just

1610
01:00:04,000 --> 01:00:05,359
cut and paste one of these commands over

1611
01:00:05,359 --> 01:00:06,640
there i think the first one we don't

1612
01:00:06,640 --> 01:00:07,760
need to go through all these before we

1613
01:00:07,760 --> 01:00:09,200
jump over the other one to get the jest

1614
01:00:09,200 --> 01:00:11,520
in there

1615
01:00:13,520 --> 01:00:15,920
i think this command here happens to be

1616
01:00:15,920 --> 01:00:17,680
http config

1617
01:00:17,680 --> 01:00:20,319
so boom we get the information that

1618
01:00:20,319 --> 01:00:21,119
tells us

1619
01:00:21,119 --> 01:00:23,680
uh how this device can connect back to

1620
01:00:23,680 --> 01:00:25,440
the manufacturer

1621
01:00:25,440 --> 01:00:29,440
uh htp and the port so we get 9978 as

1622
01:00:29,440 --> 01:00:31,280
the actual port

1623
01:00:31,280 --> 01:00:32,880
so now we have the ability to interact

1624
01:00:32,880 --> 01:00:36,000
with this but

1625
01:00:36,240 --> 01:00:39,040
go to the next one

1626
01:00:39,520 --> 01:00:42,720
there's more interesting things so as

1627
01:00:42,720 --> 01:00:43,440
part it

1628
01:00:43,440 --> 01:00:45,040
this does not work just let you know

1629
01:00:45,040 --> 01:00:46,799
what i'm going to show does not work but

1630
01:00:46,799 --> 01:00:48,640
i want to show you

1631
01:00:48,640 --> 01:00:50,240
what we have in the works or what's in

1632
01:00:50,240 --> 01:00:51,760
the works it doesn't work because

1633
01:00:51,760 --> 01:00:53,680
some weirdness in this environment which

1634
01:00:53,680 --> 01:00:55,440
we didn't take into consideration the

1635
01:00:55,440 --> 01:00:56,079
tool

1636
01:00:56,079 --> 01:00:59,520
we actually wrote a tool to

1637
01:00:59,520 --> 01:01:01,599
proxy uart communication interchip

1638
01:01:01,599 --> 01:01:04,720
communication i didn't

1639
01:01:04,880 --> 01:01:08,799
matthew matthew helped put that together

1640
01:01:08,799 --> 01:01:11,680
at rapid seven and uh pierce pierce

1641
01:01:11,680 --> 01:01:13,119
morgan

1642
01:01:13,119 --> 01:01:16,799
or uh pierce uh i never get his name

1643
01:01:16,799 --> 01:01:17,839
right

1644
01:01:17,839 --> 01:01:20,880
yeah that's it so we're gonna open up a

1645
01:01:20,880 --> 01:01:22,960
tool called a caren proxy a

1646
01:01:22,960 --> 01:01:25,920
karen proxy a cairn is is one of the

1647
01:01:25,920 --> 01:01:28,079
mythical river greek mythical rivers

1648
01:01:28,079 --> 01:01:29,520
but it's the only mythical river that

1649
01:01:29,520 --> 01:01:31,200
flows between the mortal

1650
01:01:31,200 --> 01:01:34,319
and the uh underworld so that's why we

1651
01:01:34,319 --> 01:01:35,200
named it that

1652
01:01:35,200 --> 01:01:37,680
so here we're going to go through and we

1653
01:01:37,680 --> 01:01:39,760
are actually setting up

1654
01:01:39,760 --> 01:01:43,200
two basically ftdi devices

1655
01:01:43,200 --> 01:01:44,880
that will handle all the communication

1656
01:01:44,880 --> 01:01:46,799
so all the communications between this

1657
01:01:46,799 --> 01:01:48,000
unit and its

1658
01:01:48,000 --> 01:01:51,440
uart communica or its uh cellular module

1659
01:01:51,440 --> 01:01:52,960
will actually be routed through this

1660
01:01:52,960 --> 01:01:54,960
program where you have full control over

1661
01:01:54,960 --> 01:01:55,280
it

1662
01:01:55,280 --> 01:01:58,240
eventually so in this case here we set

1663
01:01:58,240 --> 01:01:59,599
it up you can see the ball rate on this

1664
01:01:59,599 --> 01:02:01,039
was insanely low

1665
01:02:01,039 --> 01:02:03,039
on this device i started off with one

1666
01:02:03,039 --> 01:02:04,559
one one five two hundred and i'm like

1667
01:02:04,559 --> 01:02:05,920
why is this working that works on

1668
01:02:05,920 --> 01:02:07,359
everything

1669
01:02:07,359 --> 01:02:09,440
it was like until i took a measurement

1670
01:02:09,440 --> 01:02:11,359
and mathematically calculated out i'm

1671
01:02:11,359 --> 01:02:13,359
like oh 9 600.

1672
01:02:13,359 --> 01:02:15,920
so and then we can also let me see we

1673
01:02:15,920 --> 01:02:16,880
set delimiters

1674
01:02:16,880 --> 01:02:18,640
delimiters basically we want to know

1675
01:02:18,640 --> 01:02:20,319
when the message traffic because

1676
01:02:20,319 --> 01:02:22,960
most interchip communication does not

1677
01:02:22,960 --> 01:02:23,359
have

1678
01:02:23,359 --> 01:02:26,480
line feed carriage returns oh

1679
01:02:26,480 --> 01:02:28,960
except in this case okay and that seems

1680
01:02:28,960 --> 01:02:30,400
to do some weird things because it

1681
01:02:30,400 --> 01:02:31,839
doesn't seem to pick it up

1682
01:02:31,839 --> 01:02:33,440
even though we set them they kind of set

1683
01:02:33,440 --> 01:02:34,880
them they don't set them it's just kind

1684
01:02:34,880 --> 01:02:35,520
of weird

1685
01:02:35,520 --> 01:02:36,880
we'll have to go back and figure that

1686
01:02:36,880 --> 01:02:38,480
one out but we would set up the

1687
01:02:38,480 --> 01:02:40,160
delimiters to say hey when you see this

1688
01:02:40,160 --> 01:02:41,839
character that means it's the beginning

1689
01:02:41,839 --> 01:02:44,319
or the end of a data stream

1690
01:02:44,319 --> 01:02:45,839
so that's what we set up there so it

1691
01:02:45,839 --> 01:02:48,000
gives us ability to set those

1692
01:02:48,000 --> 01:02:49,680
and in this case here one of the key

1693
01:02:49,680 --> 01:02:51,280
things is remember as we're

1694
01:02:51,280 --> 01:02:52,880
communicating here this device

1695
01:02:52,880 --> 01:02:55,280
communicates to the modem

1696
01:02:55,280 --> 01:02:57,200
the modem communicates back to the base

1697
01:02:57,200 --> 01:02:59,520
unit and the base unit sends more

1698
01:02:59,520 --> 01:03:00,160
commands

1699
01:03:00,160 --> 01:03:02,799
or whatever the case may be so what

1700
01:03:02,799 --> 01:03:03,440
happens

1701
01:03:03,440 --> 01:03:06,559
if we want to tell the unit that the

1702
01:03:06,559 --> 01:03:08,319
device is in a condition other than what

1703
01:03:08,319 --> 01:03:10,559
it is we knew it was

1704
01:03:10,559 --> 01:03:13,680
quarrying back with 0.0-0 meaning there

1705
01:03:13,680 --> 01:03:15,520
was no connection

1706
01:03:15,520 --> 01:03:17,520
i actually got this to work but i

1707
01:03:17,520 --> 01:03:19,200
couldn't get it to work under a camera

1708
01:03:19,200 --> 01:03:21,599
it worked three times i actually would

1709
01:03:21,599 --> 01:03:22,880
actually tell it

1710
01:03:22,880 --> 01:03:25,520
that it's 0.1 and we do it with this

1711
01:03:25,520 --> 01:03:26,480
because we have

1712
01:03:26,480 --> 01:03:30,160
real-time changing data in the flow

1713
01:03:30,160 --> 01:03:34,319
so here replace set we look for 32c30

1714
01:03:34,319 --> 01:03:37,200
and change it to 32c31

1715
01:03:37,200 --> 01:03:39,599
or zero comma zero change to zero comma

1716
01:03:39,599 --> 01:03:41,599
one the device gets it back it thinks

1717
01:03:41,599 --> 01:03:43,920
the modems up it should respond back

1718
01:03:43,920 --> 01:03:45,440
what we did get

1719
01:03:45,440 --> 01:03:47,680
was some changes did take place there

1720
01:03:47,680 --> 01:03:49,599
was a few things that went over

1721
01:03:49,599 --> 01:03:52,640
that we didn't expect to see nothing

1722
01:03:52,640 --> 01:03:56,240
great but something different did happen

1723
01:03:56,240 --> 01:03:58,400
so in this particular case i ran this it

1724
01:03:58,400 --> 01:04:00,079
was kind of funny i ran it

1725
01:04:00,079 --> 01:04:02,720
it worked for me after it took a while

1726
01:04:02,720 --> 01:04:04,319
because it keeps ignoring the device for

1727
01:04:04,319 --> 01:04:05,200
some reason

1728
01:04:05,200 --> 01:04:06,559
we're not sure there's usually not

1729
01:04:06,559 --> 01:04:08,640
latency issues with uart so we're not

1730
01:04:08,640 --> 01:04:09,359
sure why

1731
01:04:09,359 --> 01:04:10,880
but then it started working and it

1732
01:04:10,880 --> 01:04:12,640
worked for me a couple times i powered

1733
01:04:12,640 --> 01:04:14,400
it off back on it worked again

1734
01:04:14,400 --> 01:04:16,319
i powered off back on turn the camera on

1735
01:04:16,319 --> 01:04:17,839
and ran for 30 minutes and nothing

1736
01:04:17,839 --> 01:04:19,760
happened

1737
01:04:19,760 --> 01:04:21,520
so in that case there we turned this

1738
01:04:21,520 --> 01:04:23,280
thing on so we set it up there where it

1739
01:04:23,280 --> 01:04:24,319
says start

1740
01:04:24,319 --> 01:04:26,079
it'll actually start relaying through

1741
01:04:26,079 --> 01:04:28,640
the application all uart communications

1742
01:04:28,640 --> 01:04:31,440
we turn on watch and we can see the data

1743
01:04:31,440 --> 01:04:32,000
traffic

1744
01:04:32,000 --> 01:04:35,039
a is the actual base unit b is the modem

1745
01:04:35,039 --> 01:04:35,920
so a to b

1746
01:04:35,920 --> 01:04:37,440
it's initial power up and you'll see it

1747
01:04:37,440 --> 01:04:41,119
come change here in a second

1748
01:04:41,119 --> 01:04:43,920
that there is actually a t with a

1749
01:04:43,920 --> 01:04:46,319
carriage return at it's starting to send

1750
01:04:46,319 --> 01:04:47,200
ats

1751
01:04:47,200 --> 01:04:48,960
it'll do this and then you'll eventually

1752
01:04:48,960 --> 01:04:50,480
get an atok

1753
01:04:50,480 --> 01:04:51,920
back from the other side seeing that

1754
01:04:51,920 --> 01:04:54,240
we're actually relaying communication

1755
01:04:54,240 --> 01:04:56,799
on the actual tool and you'll see it

1756
01:04:56,799 --> 01:04:58,160
change from a

1757
01:04:58,160 --> 01:05:00,559
a b to b a there ba now it's responding

1758
01:05:00,559 --> 01:05:02,079
back now we can track

1759
01:05:02,079 --> 01:05:04,799
all traffic and log it going both ways

1760
01:05:04,799 --> 01:05:06,000
with this tool

1761
01:05:06,000 --> 01:05:08,640
we also have the ability to change data

1762
01:05:08,640 --> 01:05:09,440
based on

1763
01:05:09,440 --> 01:05:12,400
uh hex string to anything we want in

1764
01:05:12,400 --> 01:05:15,119
real time we also have the ability to

1765
01:05:15,119 --> 01:05:17,839
capture and replay anything we capture

1766
01:05:17,839 --> 01:05:20,079
in any direction we want

1767
01:05:20,079 --> 01:05:23,680
so this is a proof of concept tool so

1768
01:05:23,680 --> 01:05:27,599
uh ran over we're all done any questions

1769
01:05:27,599 --> 01:05:36,400
yes sir

1770
01:05:36,400 --> 01:05:39,200
it don't work i don't know what the

1771
01:05:39,200 --> 01:05:41,680
question is

1772
01:05:45,280 --> 01:05:47,680
well typically typically if if they

1773
01:05:47,680 --> 01:05:48,960
contain both

1774
01:05:48,960 --> 01:05:52,240
cellulars backup okay

1775
01:05:52,240 --> 01:05:55,119
so like a home security system cellular

1776
01:05:55,119 --> 01:05:56,400
backup

1777
01:05:56,400 --> 01:05:58,000
the only time it's actually typically

1778
01:05:58,000 --> 01:05:59,680
going to be used is if your

1779
01:05:59,680 --> 01:06:02,079
home network goes down and that they can

1780
01:06:02,079 --> 01:06:03,839
maintain a connectivity because they're

1781
01:06:03,839 --> 01:06:05,280
monitoring your home and your home

1782
01:06:05,280 --> 01:06:06,559
security system

1783
01:06:06,559 --> 01:06:08,319
so that's typically how it works but not

1784
01:06:08,319 --> 01:06:10,079
all devices are meant to have a backup

1785
01:06:10,079 --> 01:06:12,480
they have cellular or nothing

1786
01:06:12,480 --> 01:06:15,119
remote devices are like that devices

1787
01:06:15,119 --> 01:06:16,319
that may be used like

1788
01:06:16,319 --> 01:06:19,440
on let's say an oil rig or something

1789
01:06:19,440 --> 01:06:20,000
like that

1790
01:06:20,000 --> 01:06:23,440
in the middle of nowhere or you know

1791
01:06:23,440 --> 01:06:24,960
because these will carry a lot farther

1792
01:06:24,960 --> 01:06:28,240
range than typical sailor too

1793
01:06:28,240 --> 01:06:32,240
yes so your tool for interacting

1794
01:06:32,240 --> 01:06:35,599
um there's a tool called expect that's

1795
01:06:35,599 --> 01:06:37,280
available on your legs and

1796
01:06:37,280 --> 01:06:40,400
whatever but it's designed to work with

1797
01:06:40,400 --> 01:06:42,400
these kinds of screens and data and

1798
01:06:42,400 --> 01:06:44,480
you do that plugging that it gives you

1799
01:06:44,480 --> 01:06:45,599
the full

1800
01:06:45,599 --> 01:06:47,599
tickle programming support and written

1801
01:06:47,599 --> 01:06:49,440
expressions

1802
01:06:49,440 --> 01:06:51,920
so you could

1803
01:06:53,039 --> 01:06:56,160
use that as a another tool for kind of

1804
01:06:56,160 --> 01:06:59,920
intercepting and manipulating writing

1805
01:06:59,920 --> 01:07:00,960
well in this case

1806
01:07:00,960 --> 01:07:02,319
in this case here i went out and looked

1807
01:07:02,319 --> 01:07:03,839
at a lot of different tools there's a

1808
01:07:03,839 --> 01:07:05,520
lot of tools that will gather data and

1809
01:07:05,520 --> 01:07:06,880
replay data

1810
01:07:06,880 --> 01:07:08,559
but none of them would allow me to

1811
01:07:08,559 --> 01:07:10,799
actually cut runs on a circuit board and

1812
01:07:10,799 --> 01:07:12,400
route stuff off

1813
01:07:12,400 --> 01:07:14,559
and do pure man in the middle and that's

1814
01:07:14,559 --> 01:07:17,359
what we were after

1815
01:07:17,520 --> 01:07:19,359
so the goal the goal here was pure man

1816
01:07:19,359 --> 01:07:20,799
in the middle everything goes to the

1817
01:07:20,799 --> 01:07:22,799
tool and we manipulate it from there

1818
01:07:22,799 --> 01:07:24,400
and again it's still just a proof of

1819
01:07:24,400 --> 01:07:29,839
concept at this point

1820
01:07:35,760 --> 01:07:42,720
yeah it's just a vm virtual machine

1821
01:07:42,720 --> 01:07:46,000
as the program that

1822
01:07:46,000 --> 01:07:47,920
moves the two interfaces together

1823
01:07:47,920 --> 01:07:49,760
they're very mature

1824
01:07:49,760 --> 01:07:52,480
uh it's a product of the ask nist i'll

1825
01:07:52,480 --> 01:07:53,280
have to look it up

1826
01:07:53,280 --> 01:07:58,559
thank you what's it called again expect

1827
01:08:02,599 --> 01:08:05,599
cool

