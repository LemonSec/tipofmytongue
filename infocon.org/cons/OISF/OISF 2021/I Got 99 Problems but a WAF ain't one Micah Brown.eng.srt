1
00:00:01,599 --> 00:00:03,919
one minute good

2
00:00:03,919 --> 00:00:06,160
good

3
00:00:07,520 --> 00:00:10,800
adrian good okay so uh we're a little

4
00:00:10,800 --> 00:00:12,240
ahead of schedule which is good

5
00:00:12,240 --> 00:00:15,360
that's always a good thing right so um

6
00:00:15,360 --> 00:00:16,640
then we can take a break a little

7
00:00:16,640 --> 00:00:18,800
earlier and maybe get an extended break

8
00:00:18,800 --> 00:00:19,760
ooh it was

9
00:00:19,760 --> 00:00:23,439
it was a break so all right so micah

10
00:00:23,439 --> 00:00:24,000
brown

11
00:00:24,000 --> 00:00:26,320
he's uh going to present i got 99

12
00:00:26,320 --> 00:00:27,279
problems but wife

13
00:00:27,279 --> 00:00:30,560
ain't one so uh it's uh

14
00:00:30,560 --> 00:00:32,399
deploying a web application firewall in

15
00:00:32,399 --> 00:00:35,840
case you didn't know what whaf stood for

16
00:00:35,840 --> 00:00:38,960
anyways hardest i.t security project

17
00:00:38,960 --> 00:00:40,079
he's ever completed

18
00:00:40,079 --> 00:00:42,239
uh implicit trust and support between

19
00:00:42,239 --> 00:00:44,399
i.t security and app development

20
00:00:44,399 --> 00:00:46,320
a wife project demands networking

21
00:00:46,320 --> 00:00:48,000
traditional i.t architecture

22
00:00:48,000 --> 00:00:50,160
cloud architecture and app development

23
00:00:50,160 --> 00:00:51,280
skills

24
00:00:51,280 --> 00:00:53,360
so he's going to talk about challenges

25
00:00:53,360 --> 00:00:55,039
and shortcuts and tips and tricks that

26
00:00:55,039 --> 00:00:55,920
he's learned

27
00:00:55,920 --> 00:00:58,640
deploying over 30 west so mike is a

28
00:00:58,640 --> 00:00:59,600
member of the i.t

29
00:00:59,600 --> 00:01:01,600
security engineering team at american

30
00:01:01,600 --> 00:01:03,440
modern insurance

31
00:01:03,440 --> 00:01:06,320
so uh part of the oh munich so they're

32
00:01:06,320 --> 00:01:07,439
out of germany

33
00:01:07,439 --> 00:01:11,119
yes american modern is a sub company

34
00:01:11,119 --> 00:01:12,080
within the munich

35
00:01:12,080 --> 00:01:15,040
family of insurance organizations per se

36
00:01:15,040 --> 00:01:15,600
very good

37
00:01:15,600 --> 00:01:17,360
very good so past four years served as a

38
00:01:17,360 --> 00:01:18,880
lead engineer for the dlp

39
00:01:18,880 --> 00:01:20,240
implementations i remember that

40
00:01:20,240 --> 00:01:21,920
presentation two years ago that you did

41
00:01:21,920 --> 00:01:22,880
here for us

42
00:01:22,880 --> 00:01:25,040
so data loss prevention for the munich

43
00:01:25,040 --> 00:01:26,560
or re

44
00:01:26,560 --> 00:01:28,159
organizations located in north and south

45
00:01:28,159 --> 00:01:30,240
america mica has learned many

46
00:01:30,240 --> 00:01:33,040
intricate intricacies of what works in a

47
00:01:33,040 --> 00:01:35,119
successful dlp project

48
00:01:35,119 --> 00:01:36,880
in his free time serves as the greater

49
00:01:36,880 --> 00:01:38,320
cincinnati issa

50
00:01:38,320 --> 00:01:41,119
chapter as vice president and graduated

51
00:01:41,119 --> 00:01:43,119
from university of cincinnati and holds

52
00:01:43,119 --> 00:01:44,479
his cissp

53
00:01:44,479 --> 00:01:47,600
so um

54
00:01:48,560 --> 00:01:51,600
hey we excuse me we all need the uh

55
00:01:51,600 --> 00:01:53,040
cissp for some

56
00:01:53,040 --> 00:01:56,000
kind of work although that is

57
00:01:56,000 --> 00:01:57,119
interesting

58
00:01:57,119 --> 00:02:00,159
you know so welcome micah

59
00:02:00,159 --> 00:02:09,840
it's all yours

60
00:02:13,120 --> 00:02:15,120
all right is this are the audios coming

61
00:02:15,120 --> 00:02:17,120
in good adrian

62
00:02:17,120 --> 00:02:20,319
excellent wow

63
00:02:20,319 --> 00:02:22,239
it is great to be back in front of

64
00:02:22,239 --> 00:02:23,520
people i

65
00:02:23,520 --> 00:02:25,599
have loved the past year and all of the

66
00:02:25,599 --> 00:02:26,800
conferences that i've

67
00:02:26,800 --> 00:02:29,280
i've spoken at and attended but it's

68
00:02:29,280 --> 00:02:32,319
doesn't match being back in person

69
00:02:32,319 --> 00:02:34,560
now let's see if i'm smart enough to get

70
00:02:34,560 --> 00:02:37,840
the clicker working

71
00:02:38,080 --> 00:02:40,319
maybe

72
00:02:41,200 --> 00:02:43,679
is it on

73
00:02:46,319 --> 00:02:51,360
let's see did i turn it on

74
00:02:51,360 --> 00:02:54,560
got you all right so who am i my name is

75
00:02:54,560 --> 00:02:55,120
micah k

76
00:02:55,120 --> 00:02:57,519
brown uh you can follow me at mikeyk

77
00:02:57,519 --> 00:02:58,720
brown on the bird app

78
00:02:58,720 --> 00:03:01,599
and also you can go to my github and

79
00:03:01,599 --> 00:03:03,519
download this as well as many other my

80
00:03:03,519 --> 00:03:04,239
talks

81
00:03:04,239 --> 00:03:08,159
uh please be aware that my slide deck is

82
00:03:08,159 --> 00:03:11,760
inten you might just have to head slide

83
00:03:11,760 --> 00:03:14,720
maybe you shouldn't be working it was

84
00:03:14,720 --> 00:03:19,840
working earlier

85
00:03:28,959 --> 00:03:33,840
yeah so next slide please

86
00:03:35,840 --> 00:03:47,840
i do

87
00:04:27,360 --> 00:04:29,840
all right

88
00:04:55,680 --> 00:04:59,440
okay it looks like it's working now

89
00:04:59,520 --> 00:05:01,758
yes

90
00:05:08,560 --> 00:05:11,120
all right so now that we've got this

91
00:05:11,120 --> 00:05:12,000
sorted

92
00:05:12,000 --> 00:05:14,160
uh you can go to my github and you can

93
00:05:14,160 --> 00:05:16,240
download this or any of my talks

94
00:05:16,240 --> 00:05:18,320
my slides are intentionally dense that

95
00:05:18,320 --> 00:05:19,600
way if you do find

96
00:05:19,600 --> 00:05:22,080
value in the content that i'm creating

97
00:05:22,080 --> 00:05:23,120
you can go through

98
00:05:23,120 --> 00:05:25,600
you can download it you can use and you

99
00:05:25,600 --> 00:05:26,960
can share that with people that you

100
00:05:26,960 --> 00:05:28,800
think it's applicable to

101
00:05:28,800 --> 00:05:31,120
that being said i'm also the co-host of

102
00:05:31,120 --> 00:05:33,360
the threat reel podcast with uh my good

103
00:05:33,360 --> 00:05:34,560
friend matt who

104
00:05:34,560 --> 00:05:36,080
you'll be hearing from a little bit

105
00:05:36,080 --> 00:05:39,600
later today

106
00:05:39,600 --> 00:05:41,600
that being said uh just a friendly

107
00:05:41,600 --> 00:05:43,440
reminder that in cincinnati we have a

108
00:05:43,440 --> 00:05:44,560
bunch of

109
00:05:44,560 --> 00:05:47,199
great i.t security groups that are here

110
00:05:47,199 --> 00:05:47,759
to make

111
00:05:47,759 --> 00:05:50,000
your professional and personal life just

112
00:05:50,000 --> 00:05:52,000
a little bit easier so please feel free

113
00:05:52,000 --> 00:05:54,240
to come and check out any and or all of

114
00:05:54,240 --> 00:05:56,319
our groups

115
00:05:56,319 --> 00:06:00,560
so the web application firewall

116
00:06:00,560 --> 00:06:02,720
project that i was a part of was one of

117
00:06:02,720 --> 00:06:05,199
the hardest projects that i've ever

118
00:06:05,199 --> 00:06:08,960
been a member of within my i.t

119
00:06:08,960 --> 00:06:12,000
security career

120
00:06:12,000 --> 00:06:16,720
and in my mind this is because

121
00:06:16,720 --> 00:06:19,440
you have to have a critical intersection

122
00:06:19,440 --> 00:06:20,000
of both

123
00:06:20,000 --> 00:06:23,520
i.t security your application developers

124
00:06:23,520 --> 00:06:26,319
your infrastructure team there's fear

125
00:06:26,319 --> 00:06:27,280
there's certainty

126
00:06:27,280 --> 00:06:29,759
there's doubt because we are putting a

127
00:06:29,759 --> 00:06:30,720
device

128
00:06:30,720 --> 00:06:34,240
in between our application users

129
00:06:34,240 --> 00:06:36,720
and the application that is explicitly

130
00:06:36,720 --> 00:06:37,600
designed

131
00:06:37,600 --> 00:06:40,880
to stop to block traffic and

132
00:06:40,880 --> 00:06:44,080
to be honest it was kind of a running

133
00:06:44,080 --> 00:06:45,680
joke i had on the project

134
00:06:45,680 --> 00:06:47,520
and you'll see it play out in this slide

135
00:06:47,520 --> 00:06:49,199
as to how difficult

136
00:06:49,199 --> 00:06:52,960
this project really was so

137
00:06:52,960 --> 00:06:56,000
let's start off and talk about what is a

138
00:06:56,000 --> 00:06:57,680
web application firewall

139
00:06:57,680 --> 00:07:00,319
so web application firewall to me is a

140
00:07:00,319 --> 00:07:01,360
compute device

141
00:07:01,360 --> 00:07:04,400
that sits in between your web

142
00:07:04,400 --> 00:07:05,680
application

143
00:07:05,680 --> 00:07:08,960
and the users of that application highly

144
00:07:08,960 --> 00:07:10,720
visualized

145
00:07:10,720 --> 00:07:12,720
it kind of looks like this where over on

146
00:07:12,720 --> 00:07:14,160
the left we have our

147
00:07:14,160 --> 00:07:17,120
users and in this case when they go and

148
00:07:17,120 --> 00:07:18,479
they

149
00:07:18,479 --> 00:07:20,960
reach out make a query to our web

150
00:07:20,960 --> 00:07:22,240
application

151
00:07:22,240 --> 00:07:24,800
their traffic is first sent to our load

152
00:07:24,800 --> 00:07:26,560
balancer the load balancer because this

153
00:07:26,560 --> 00:07:27,599
is representing

154
00:07:27,599 --> 00:07:29,520
production and needs to have some level

155
00:07:29,520 --> 00:07:31,039
of high availability

156
00:07:31,039 --> 00:07:34,880
the load balancer will take that traffic

157
00:07:34,880 --> 00:07:36,160
and i'll decide which of the web

158
00:07:36,160 --> 00:07:38,560
application firewalls to send it to

159
00:07:38,560 --> 00:07:40,080
once the traffic arrives at the web

160
00:07:40,080 --> 00:07:42,240
application firewall the traffic

161
00:07:42,240 --> 00:07:45,759
will be decrypted it'll be inspected

162
00:07:45,759 --> 00:07:48,879
and then there'll be a permit deny

163
00:07:48,879 --> 00:07:51,599
alert decision that is taking place on

164
00:07:51,599 --> 00:07:53,680
that application or on that traffic

165
00:07:53,680 --> 00:07:57,280
if that traffic is allowed then it will

166
00:07:57,280 --> 00:08:00,319
be sent to the front end web application

167
00:08:00,319 --> 00:08:04,000
servers now i came on to this project

168
00:08:04,000 --> 00:08:06,879
after the project was running for about

169
00:08:06,879 --> 00:08:07,840
three months

170
00:08:07,840 --> 00:08:13,039
and we had kind of stalled out and

171
00:08:13,039 --> 00:08:16,000
originally when i came on we had several

172
00:08:16,000 --> 00:08:17,759
different web applications about seven

173
00:08:17,759 --> 00:08:19,039
that we were

174
00:08:19,039 --> 00:08:21,759
supposed to protect and they're divided

175
00:08:21,759 --> 00:08:23,840
amongst the group of our

176
00:08:23,840 --> 00:08:27,280
security engineers to go through and to

177
00:08:27,280 --> 00:08:27,759
own

178
00:08:27,759 --> 00:08:29,680
the implementation of each web

179
00:08:29,680 --> 00:08:31,199
application firewall

180
00:08:31,199 --> 00:08:34,719
from cradle to grave and

181
00:08:34,719 --> 00:08:37,839
something just an incent right with me

182
00:08:37,839 --> 00:08:40,320
because when you think about the various

183
00:08:40,320 --> 00:08:42,159
skills that you need to deploy a web

184
00:08:42,159 --> 00:08:44,080
application firewall

185
00:08:44,080 --> 00:08:47,200
you have to you have to go through and

186
00:08:47,200 --> 00:08:48,560
you have to

187
00:08:48,560 --> 00:08:50,160
have a certain amount of network

188
00:08:50,160 --> 00:08:51,760
engineering and for me that's

189
00:08:51,760 --> 00:08:54,880
where i cut my teeth in it it security

190
00:08:54,880 --> 00:08:57,360
i started off as a help desk admin moved

191
00:08:57,360 --> 00:08:58,800
into server admin

192
00:08:58,800 --> 00:09:00,640
then to network admin before becoming a

193
00:09:00,640 --> 00:09:02,800
full-time i.t security engineer

194
00:09:02,800 --> 00:09:04,959
so i really understand traditional i.t

195
00:09:04,959 --> 00:09:06,080
architecture

196
00:09:06,080 --> 00:09:09,120
and cloud architecture where i'm a

197
00:09:09,120 --> 00:09:10,160
little bit

198
00:09:10,160 --> 00:09:11,760
less good at and probably the most

199
00:09:11,760 --> 00:09:13,200
immature is

200
00:09:13,200 --> 00:09:15,519
secure coding web application

201
00:09:15,519 --> 00:09:17,279
development

202
00:09:17,279 --> 00:09:19,839
and i knew that while i could handle the

203
00:09:19,839 --> 00:09:20,800
first phase

204
00:09:20,800 --> 00:09:22,800
the second phase is going to really

205
00:09:22,800 --> 00:09:23,839
struggle with

206
00:09:23,839 --> 00:09:26,959
and the final stage is supporting the

207
00:09:26,959 --> 00:09:28,880
environment that you go through

208
00:09:28,880 --> 00:09:31,440
and that's one where i think at least i

209
00:09:31,440 --> 00:09:32,320
see that

210
00:09:32,320 --> 00:09:35,360
many i.t security professionals many

211
00:09:35,360 --> 00:09:36,320
companies

212
00:09:36,320 --> 00:09:37,839
sometimes struggle and making sure that

213
00:09:37,839 --> 00:09:39,360
we're

214
00:09:39,360 --> 00:09:42,880
that we're taking care of our actual

215
00:09:42,880 --> 00:09:44,959
systems that we're doing the pros or the

216
00:09:44,959 --> 00:09:46,959
needed start of day start of week start

217
00:09:46,959 --> 00:09:49,040
of month procedure and it's my job

218
00:09:49,040 --> 00:09:50,959
as an i.t security arc member of the

219
00:09:50,959 --> 00:09:52,720
architecture and engineering team

220
00:09:52,720 --> 00:09:57,040
to ensure that when i build a solution

221
00:09:57,040 --> 00:09:59,360
that the people that are going to end up

222
00:09:59,360 --> 00:10:00,640
owning it

223
00:10:00,640 --> 00:10:03,200
are prepared both with the tools the

224
00:10:03,200 --> 00:10:05,120
processes and the procedures

225
00:10:05,120 --> 00:10:08,560
to ensure that those it security assets

226
00:10:08,560 --> 00:10:11,680
are properly cared and maintained for

227
00:10:11,680 --> 00:10:14,880
likewise they had another gentleman

228
00:10:14,880 --> 00:10:16,839
that was on my architecture and

229
00:10:16,839 --> 00:10:18,720
engineering russ

230
00:10:18,720 --> 00:10:22,079
and russ he came to i.t

231
00:10:22,079 --> 00:10:25,120
security from a field of

232
00:10:25,120 --> 00:10:27,920
application security so where he was his

233
00:10:27,920 --> 00:10:29,040
very strongest

234
00:10:29,040 --> 00:10:32,160
was where i was my very weakest and so

235
00:10:32,160 --> 00:10:35,440
one night i might have had a of

236
00:10:35,440 --> 00:10:39,120
a rum and coke and i thought to myself

237
00:10:39,120 --> 00:10:40,800
there's got to be a better way where we

238
00:10:40,800 --> 00:10:42,880
can set each other up for success

239
00:10:42,880 --> 00:10:46,320
and so what i worked out in my head was

240
00:10:46,320 --> 00:10:48,720
splitting the roles and responsibilities

241
00:10:48,720 --> 00:10:50,399
within the web application development

242
00:10:50,399 --> 00:10:51,440
team

243
00:10:51,440 --> 00:10:54,160
slightly different ways in which i broke

244
00:10:54,160 --> 00:10:55,200
things down

245
00:10:55,200 --> 00:10:58,640
into a build phase a tune phase

246
00:10:58,640 --> 00:11:02,800
and a support phase and so under that

247
00:11:02,800 --> 00:11:05,279
you start at the bottom of each phase

248
00:11:05,279 --> 00:11:06,240
and you progress

249
00:11:06,240 --> 00:11:08,320
up building a secure foundation to

250
00:11:08,320 --> 00:11:10,720
ensure that you are successful

251
00:11:10,720 --> 00:11:13,680
so this one visualization is pretty much

252
00:11:13,680 --> 00:11:15,680
the entire methodology that i was able

253
00:11:15,680 --> 00:11:16,800
to deploy

254
00:11:16,800 --> 00:11:20,160
over 30 wafts in under three months

255
00:11:20,160 --> 00:11:23,120
it's very efficient it's very easy to

256
00:11:23,120 --> 00:11:23,600
under

257
00:11:23,600 --> 00:11:25,440
or to explain to people and i think it's

258
00:11:25,440 --> 00:11:27,920
a very elegant to go through and to

259
00:11:27,920 --> 00:11:30,399
implement

260
00:11:31,920 --> 00:11:35,040
so what are some of the biggest

261
00:11:35,040 --> 00:11:38,079
challenges in implementing laughs well

262
00:11:38,079 --> 00:11:38,720
first off

263
00:11:38,720 --> 00:11:40,320
i believe that web applications are

264
00:11:40,320 --> 00:11:42,399
unique in that they have a very

265
00:11:42,399 --> 00:11:45,440
high total cost of ownership you have to

266
00:11:45,440 --> 00:11:45,760
be

267
00:11:45,760 --> 00:11:49,360
very vigilant in the operations

268
00:11:49,360 --> 00:11:52,079
day-to-day to make sure that the wafts

269
00:11:52,079 --> 00:11:52,480
are

270
00:11:52,480 --> 00:11:55,200
in and are working successfully we're

271
00:11:55,200 --> 00:11:56,720
going to have to overcome

272
00:11:56,720 --> 00:11:59,519
fear uncertainty and doubt remember many

273
00:11:59,519 --> 00:12:00,320
of our i.t

274
00:12:00,320 --> 00:12:03,360
many of our application owners they are

275
00:12:03,360 --> 00:12:06,480
judged oftentimes financially

276
00:12:06,480 --> 00:12:10,160
by how their uptime stats

277
00:12:10,160 --> 00:12:13,200
look and now we're putting in a device

278
00:12:13,200 --> 00:12:17,120
that sole reason to exist is to block

279
00:12:17,120 --> 00:12:19,120
unwanted traffic what if it classifies

280
00:12:19,120 --> 00:12:20,880
something wrong

281
00:12:20,880 --> 00:12:24,480
so it's obvious that there might be a

282
00:12:24,480 --> 00:12:26,079
little bit of uncertainty

283
00:12:26,079 --> 00:12:28,959
uh within those types of people that are

284
00:12:28,959 --> 00:12:29,920
motivated

285
00:12:29,920 --> 00:12:32,720
that way you're also going to have to

286
00:12:32,720 --> 00:12:34,000
clearly define

287
00:12:34,000 --> 00:12:36,000
how the software development life cycle

288
00:12:36,000 --> 00:12:37,519
is going to go through

289
00:12:37,519 --> 00:12:41,760
and it's going to how should i say

290
00:12:41,760 --> 00:12:45,279
work under a waff once it is implemented

291
00:12:45,279 --> 00:12:47,120
we're probably going to have conflicts

292
00:12:47,120 --> 00:12:49,440
with work that's already in the app dev

293
00:12:49,440 --> 00:12:51,600
pipeline do they have enough resources

294
00:12:51,600 --> 00:12:53,440
to really go through and support that

295
00:12:53,440 --> 00:12:56,959
and trust me you are going to need the

296
00:12:56,959 --> 00:12:59,920
expertise of your app dev team in order

297
00:12:59,920 --> 00:13:01,440
to successfully tune your web

298
00:13:01,440 --> 00:13:03,360
application firewall

299
00:13:03,360 --> 00:13:06,639
this kind of shocked me but not all

300
00:13:06,639 --> 00:13:07,440
environments

301
00:13:07,440 --> 00:13:09,760
are feature by feature equal to each

302
00:13:09,760 --> 00:13:11,680
other and what i mean is

303
00:13:11,680 --> 00:13:14,000
in a couple of the applications that i

304
00:13:14,000 --> 00:13:15,839
went and worked with

305
00:13:15,839 --> 00:13:18,480
i was expecting the test the dev the

306
00:13:18,480 --> 00:13:19,040
stage

307
00:13:19,040 --> 00:13:21,040
the prod to have the exact same

308
00:13:21,040 --> 00:13:22,320
functionality

309
00:13:22,320 --> 00:13:24,320
i found that that's not always the case

310
00:13:24,320 --> 00:13:25,680
so we need to make sure

311
00:13:25,680 --> 00:13:27,360
that we understand where there are

312
00:13:27,360 --> 00:13:28,959
deviations because that's going to

313
00:13:28,959 --> 00:13:29,839
define

314
00:13:29,839 --> 00:13:31,760
where you should put your wefts and

315
00:13:31,760 --> 00:13:34,079
trust me i really believe that you need

316
00:13:34,079 --> 00:13:35,600
waffs at multiple layers

317
00:13:35,600 --> 00:13:37,519
because it's better to catch things

318
00:13:37,519 --> 00:13:39,519
lower in the environment before they get

319
00:13:39,519 --> 00:13:40,880
to prod

320
00:13:40,880 --> 00:13:44,160
but wafts they also have a huge total

321
00:13:44,160 --> 00:13:45,839
cost of ownership

322
00:13:45,839 --> 00:13:48,880
finally how are we going to go through

323
00:13:48,880 --> 00:13:52,720
and intercept traffic so in general

324
00:13:52,720 --> 00:13:54,800
you can either go through and route

325
00:13:54,800 --> 00:13:56,639
traffic through the waff

326
00:13:56,639 --> 00:13:59,279
either using dns which is my preferred

327
00:13:59,279 --> 00:14:00,079
method

328
00:14:00,079 --> 00:14:02,560
or you can have it inspect all traffic

329
00:14:02,560 --> 00:14:03,680
going across

330
00:14:03,680 --> 00:14:07,120
a particular network segment

331
00:14:07,120 --> 00:14:09,120
so let's talk about the team that we're

332
00:14:09,120 --> 00:14:10,720
going to need to assemble

333
00:14:10,720 --> 00:14:14,720
in order to

334
00:14:15,519 --> 00:14:17,600
be successful first you're going to need

335
00:14:17,600 --> 00:14:18,800
someone like myself

336
00:14:18,800 --> 00:14:22,000
under this model the build resource so

337
00:14:22,000 --> 00:14:24,000
this is somebody that has very strong

338
00:14:24,000 --> 00:14:26,240
networking it architecture possible

339
00:14:26,240 --> 00:14:27,440
cloud architecture

340
00:14:27,440 --> 00:14:29,279
depending on if you're deploying in the

341
00:14:29,279 --> 00:14:30,480
cloud environment

342
00:14:30,480 --> 00:14:33,040
strong understandings of your corporate

343
00:14:33,040 --> 00:14:34,079
policies

344
00:14:34,079 --> 00:14:37,120
the build resource is the resource

345
00:14:37,120 --> 00:14:38,720
that takes from the very initial

346
00:14:38,720 --> 00:14:41,199
beginning the discovery of the existing

347
00:14:41,199 --> 00:14:42,800
web application

348
00:14:42,800 --> 00:14:45,040
all the way through the design getting

349
00:14:45,040 --> 00:14:46,399
the approval

350
00:14:46,399 --> 00:14:49,440
all the way to actually deploying the tr

351
00:14:49,440 --> 00:14:51,519
the waft so it's in line and seeing

352
00:14:51,519 --> 00:14:52,720
traffic

353
00:14:52,720 --> 00:14:54,000
then you're going to need the tune

354
00:14:54,000 --> 00:14:56,399
resource this is the person that's going

355
00:14:56,399 --> 00:14:56,800
to

356
00:14:56,800 --> 00:15:00,160
take over from the build resource

357
00:15:00,160 --> 00:15:02,959
once the web application firewall is

358
00:15:02,959 --> 00:15:04,720
seeing traffic and what they're going to

359
00:15:04,720 --> 00:15:06,160
do is they're going to work with the app

360
00:15:06,160 --> 00:15:07,120
dev team

361
00:15:07,120 --> 00:15:08,880
and they're going to say hey we're

362
00:15:08,880 --> 00:15:10,240
seeing these alerts

363
00:15:10,240 --> 00:15:13,760
is this normal traffic if so

364
00:15:13,760 --> 00:15:16,560
can we go through and just add it to our

365
00:15:16,560 --> 00:15:17,680
allow list

366
00:15:17,680 --> 00:15:20,160
or do we need to go through and we need

367
00:15:20,160 --> 00:15:22,240
to make some sort of tweak

368
00:15:22,240 --> 00:15:25,279
on the back end on the actual code so

369
00:15:25,279 --> 00:15:27,040
that we are no longer triggering this

370
00:15:27,040 --> 00:15:30,160
or do we end up just continuing to

371
00:15:30,160 --> 00:15:33,199
block this type of traffic and finally

372
00:15:33,199 --> 00:15:36,639
you need the support team now this team

373
00:15:36,639 --> 00:15:38,320
is going to be the one that provides the

374
00:15:38,320 --> 00:15:40,639
24 7 monitoring management

375
00:15:40,639 --> 00:15:43,120
of the devices after both the build and

376
00:15:43,120 --> 00:15:43,680
the tune

377
00:15:43,680 --> 00:15:46,880
resources step back and in that case

378
00:15:46,880 --> 00:15:48,399
they're going to need to have

379
00:15:48,399 --> 00:15:50,800
both the skills of the build team in

380
00:15:50,800 --> 00:15:53,199
terms of networking it architecture

381
00:15:53,199 --> 00:15:55,680
cloud architecture understanding of the

382
00:15:55,680 --> 00:15:57,519
environment as a whole

383
00:15:57,519 --> 00:16:00,800
as well as the ability to converse with

384
00:16:00,800 --> 00:16:04,240
the actual development team so that

385
00:16:04,240 --> 00:16:07,120
as alerts come up you can go through and

386
00:16:07,120 --> 00:16:08,480
you can properly

387
00:16:08,480 --> 00:16:11,440
evaluate them

388
00:16:11,920 --> 00:16:14,639
now we have the application team so the

389
00:16:14,639 --> 00:16:15,040
first

390
00:16:15,040 --> 00:16:16,959
person that we're going to be spending a

391
00:16:16,959 --> 00:16:18,639
lot of time with is the application

392
00:16:18,639 --> 00:16:19,440
owner

393
00:16:19,440 --> 00:16:22,399
now this might be assigned to a senior

394
00:16:22,399 --> 00:16:23,120
developer

395
00:16:23,120 --> 00:16:25,600
it might be assigned to a manager that

396
00:16:25,600 --> 00:16:26,959
depends on

397
00:16:26,959 --> 00:16:30,240
application and organization the

398
00:16:30,240 --> 00:16:32,079
person that has designated the

399
00:16:32,079 --> 00:16:34,000
application owner they don't have to be

400
00:16:34,000 --> 00:16:35,600
technical but they need to

401
00:16:35,600 --> 00:16:38,720
be able to go through and to listen

402
00:16:38,720 --> 00:16:41,839
to what the waff team

403
00:16:41,839 --> 00:16:43,759
is saying and make sure that they can

404
00:16:43,759 --> 00:16:45,920
bring the proper people in to answer the

405
00:16:45,920 --> 00:16:48,079
questions that we go through and we have

406
00:16:48,079 --> 00:16:51,279
the application developer this well

407
00:16:51,279 --> 00:16:52,240
hopefully you have

408
00:16:52,240 --> 00:16:55,040
multiple of these on and this is going

409
00:16:55,040 --> 00:16:55,920
to be something

410
00:16:55,920 --> 00:16:58,399
that is absolutely critical for both the

411
00:16:58,399 --> 00:17:00,639
short and the long-term success

412
00:17:00,639 --> 00:17:04,199
one of the ways that we really

413
00:17:04,199 --> 00:17:07,599
demystified any fud that we earn trust

414
00:17:07,599 --> 00:17:09,839
is we created a special role in our web

415
00:17:09,839 --> 00:17:11,599
application firewalls

416
00:17:11,599 --> 00:17:13,199
explicitly for our application

417
00:17:13,199 --> 00:17:15,760
developers and what we did was we

418
00:17:15,760 --> 00:17:18,000
wanted the application developers at any

419
00:17:18,000 --> 00:17:19,919
time to be able to log on

420
00:17:19,919 --> 00:17:23,760
to the actual gui of our web application

421
00:17:23,760 --> 00:17:24,720
firewalls

422
00:17:24,720 --> 00:17:27,119
with read-only access and that's for two

423
00:17:27,119 --> 00:17:28,799
particular reasons the first ones

424
00:17:28,799 --> 00:17:31,520
is i wanted them to be able to go into

425
00:17:31,520 --> 00:17:32,880
our performance page

426
00:17:32,880 --> 00:17:34,640
so that if they're seeing some quantum

427
00:17:34,640 --> 00:17:36,480
weirdness on the web application

428
00:17:36,480 --> 00:17:37,200
firewall

429
00:17:37,200 --> 00:17:39,679
they could see is the web application

430
00:17:39,679 --> 00:17:40,559
firewall

431
00:17:40,559 --> 00:17:44,480
is it under excessive cpu memory disk io

432
00:17:44,480 --> 00:17:45,039
network

433
00:17:45,039 --> 00:17:48,559
o or b if there was an

434
00:17:48,559 --> 00:17:50,559
active block going on so we also allowed

435
00:17:50,559 --> 00:17:52,480
them to take a look at the alert section

436
00:17:52,480 --> 00:17:54,240
so that they could go through

437
00:17:54,240 --> 00:17:55,919
and they could see exactly what was

438
00:17:55,919 --> 00:17:57,520
going on

439
00:17:57,520 --> 00:17:59,679
and finally you're going to need a lot

440
00:17:59,679 --> 00:18:02,240
of testers however many testers you get

441
00:18:02,240 --> 00:18:05,360
you need more and this is

442
00:18:05,360 --> 00:18:07,120
absolutely critical and you're going to

443
00:18:07,120 --> 00:18:10,320
want to have both a diversity

444
00:18:10,320 --> 00:18:13,280
of tests at all layers of your

445
00:18:13,280 --> 00:18:15,360
application test dev stage

446
00:18:15,360 --> 00:18:18,160
prod but you're also going to want to

447
00:18:18,160 --> 00:18:19,520
have

448
00:18:19,520 --> 00:18:21,840
tr or standardized tests that are

449
00:18:21,840 --> 00:18:22,960
repeatable

450
00:18:22,960 --> 00:18:26,240
it is critical that you have just normal

451
00:18:26,240 --> 00:18:28,960
end user behavior testing as well as

452
00:18:28,960 --> 00:18:29,520
yours

453
00:18:29,520 --> 00:18:32,559
more standardized scripted testings

454
00:18:32,559 --> 00:18:34,160
and another thing that's really critical

455
00:18:34,160 --> 00:18:35,600
in testing is both

456
00:18:35,600 --> 00:18:39,600
the volume and the diversity of traffic

457
00:18:39,600 --> 00:18:42,320
so let's dig into my expertise the build

458
00:18:42,320 --> 00:18:44,080
phase

459
00:18:44,080 --> 00:18:46,559
so the first phase within the build

460
00:18:46,559 --> 00:18:47,120
phase

461
00:18:47,120 --> 00:18:50,880
is the architecture so we want to

462
00:18:50,880 --> 00:18:54,880
within our group define our overall

463
00:18:54,880 --> 00:18:57,440
waff architecture what are we trying to

464
00:18:57,440 --> 00:18:59,520
do what are the goals what are the use

465
00:18:59,520 --> 00:19:00,320
cases

466
00:19:00,320 --> 00:19:02,720
then we want to build out our waff

467
00:19:02,720 --> 00:19:03,919
support systems

468
00:19:03,919 --> 00:19:05,520
so these are going to be things like

469
00:19:05,520 --> 00:19:07,280
centralized management

470
00:19:07,280 --> 00:19:10,320
logging servers licensing servers making

471
00:19:10,320 --> 00:19:11,520
sure that we have a good

472
00:19:11,520 --> 00:19:14,799
ten thousand foot view of what we want

473
00:19:14,799 --> 00:19:15,200
to

474
00:19:15,200 --> 00:19:19,360
accomplish then we move into the plan

475
00:19:19,360 --> 00:19:20,320
and design

476
00:19:20,320 --> 00:19:22,480
and this is where we start going through

477
00:19:22,480 --> 00:19:23,440
and we start

478
00:19:23,440 --> 00:19:26,559
talking explicitly on application per

479
00:19:26,559 --> 00:19:27,919
application

480
00:19:27,919 --> 00:19:29,919
so for each application that we want to

481
00:19:29,919 --> 00:19:32,640
work with we want to make sure that we

482
00:19:32,640 --> 00:19:34,960
start interviewing the app owner the app

483
00:19:34,960 --> 00:19:36,160
devs to understand

484
00:19:36,160 --> 00:19:38,960
how the application really works so i'd

485
00:19:38,960 --> 00:19:41,360
ask for things like

486
00:19:41,360 --> 00:19:44,320
going through or do you have a data flow

487
00:19:44,320 --> 00:19:44,960
diagram

488
00:19:44,960 --> 00:19:46,559
do you have a networking architecture

489
00:19:46,559 --> 00:19:48,080
for your application because that is

490
00:19:48,080 --> 00:19:50,640
absolutely critical for you

491
00:19:50,640 --> 00:19:51,679
understanding

492
00:19:51,679 --> 00:19:54,799
where and how you can plug a laugh in

493
00:19:54,799 --> 00:19:58,000
for each environment we went through

494
00:19:58,000 --> 00:20:01,039
and outlined a basic questionnaire

495
00:20:01,039 --> 00:20:04,320
everything the who what where when why

496
00:20:04,320 --> 00:20:07,039
the entire implementation support

497
00:20:07,039 --> 00:20:09,360
strategy we wrote it out in what we

498
00:20:09,360 --> 00:20:12,640
called an implementation guide and the

499
00:20:12,640 --> 00:20:14,000
implementation guide was

500
00:20:14,000 --> 00:20:15,440
critical because at the start it had

501
00:20:15,440 --> 00:20:17,520
like an executive summary this is why we

502
00:20:17,520 --> 00:20:18,480
want to

503
00:20:18,480 --> 00:20:20,240
deploy wafts this is why your

504
00:20:20,240 --> 00:20:22,720
application is in scope

505
00:20:22,720 --> 00:20:25,120
and then we go through and as we learned

506
00:20:25,120 --> 00:20:26,799
about their web application

507
00:20:26,799 --> 00:20:29,600
we would start filling out things such

508
00:20:29,600 --> 00:20:30,080
as

509
00:20:30,080 --> 00:20:32,240
current state of the web application

510
00:20:32,240 --> 00:20:33,360
then we started

511
00:20:33,360 --> 00:20:35,520
a future state and this implementation

512
00:20:35,520 --> 00:20:36,559
guide

513
00:20:36,559 --> 00:20:39,200
grew very quickly and it was what was

514
00:20:39,200 --> 00:20:40,320
critical to us

515
00:20:40,320 --> 00:20:43,280
is in the implementation guide it had

516
00:20:43,280 --> 00:20:44,159
every face

517
00:20:44,159 --> 00:20:46,840
every step every configuration and

518
00:20:46,840 --> 00:20:48,640
processes procedures

519
00:20:48,640 --> 00:20:50,480
slas that we were going to hold

520
00:20:50,480 --> 00:20:53,200
ourselves accountable

521
00:20:53,200 --> 00:20:55,039
in doing this we were going through and

522
00:20:55,039 --> 00:20:56,320
we were trying to be as

523
00:20:56,320 --> 00:20:58,480
open as we could be you could take a

524
00:20:58,480 --> 00:21:00,720
look at any one of the phases within the

525
00:21:00,720 --> 00:21:02,080
implementation guide

526
00:21:02,080 --> 00:21:03,840
and there is a common understanding of

527
00:21:03,840 --> 00:21:05,200
roles and responsibilities

528
00:21:05,200 --> 00:21:09,039
of it as well as app the app dev team

529
00:21:09,039 --> 00:21:11,600
and then we had visualizations of how

530
00:21:11,600 --> 00:21:13,360
everything was going to work together

531
00:21:13,360 --> 00:21:15,360
in fact in our implementation guides we

532
00:21:15,360 --> 00:21:17,440
even had technical details like

533
00:21:17,440 --> 00:21:18,880
technical config

534
00:21:18,880 --> 00:21:22,000
snippets we had where appropriate what

535
00:21:22,000 --> 00:21:23,679
the ip addresses

536
00:21:23,679 --> 00:21:25,440
would be and we'd fill them in and

537
00:21:25,440 --> 00:21:27,280
constantly update this document the

538
00:21:27,280 --> 00:21:27,760
guilt

539
00:21:27,760 --> 00:21:29,360
was is that we wanted this

540
00:21:29,360 --> 00:21:31,520
implementation guide not only be a road

541
00:21:31,520 --> 00:21:33,120
map on how we implement

542
00:21:33,120 --> 00:21:35,280
but we also wanted it to be a resource

543
00:21:35,280 --> 00:21:36,640
tool for

544
00:21:36,640 --> 00:21:39,440
the both the app dev that they can

545
00:21:39,440 --> 00:21:41,760
constantly update the current revision

546
00:21:41,760 --> 00:21:44,080
as well as the support team as well as

547
00:21:44,080 --> 00:21:45,200
going through and if

548
00:21:45,200 --> 00:21:47,679
the app dev team was challenged by an

549
00:21:47,679 --> 00:21:48,240
auditor

550
00:21:48,240 --> 00:21:50,960
how do you protect your application they

551
00:21:50,960 --> 00:21:51,520
could take

552
00:21:51,520 --> 00:21:53,520
this implementation guide and say well

553
00:21:53,520 --> 00:21:55,760
one of our lines of protection is this

554
00:21:55,760 --> 00:21:58,000
web application firewall that we have in

555
00:21:58,000 --> 00:22:01,200
front the goal was to go through and to

556
00:22:01,200 --> 00:22:01,679
make it

557
00:22:01,679 --> 00:22:04,720
as open as transparent as possible so

558
00:22:04,720 --> 00:22:05,760
that we could win

559
00:22:05,760 --> 00:22:08,960
the trust at some point

560
00:22:08,960 --> 00:22:10,880
we got the agreement of the app owner

561
00:22:10,880 --> 00:22:12,320
and the app devs

562
00:22:12,320 --> 00:22:15,440
that the plan was thorough the

563
00:22:15,440 --> 00:22:16,640
implementation guide

564
00:22:16,640 --> 00:22:18,799
was good and we got the green light to

565
00:22:18,799 --> 00:22:19,679
move on

566
00:22:19,679 --> 00:22:21,360
so let's go through and talk about the

567
00:22:21,360 --> 00:22:23,440
cold build phase

568
00:22:23,440 --> 00:22:26,799
so this is where the build resource me

569
00:22:26,799 --> 00:22:29,840
i would work with it to stand

570
00:22:29,840 --> 00:22:32,240
up the initial web application firewall

571
00:22:32,240 --> 00:22:33,200
be it physical

572
00:22:33,200 --> 00:22:35,760
be it virtual and then we would go

573
00:22:35,760 --> 00:22:36,880
through and apply

574
00:22:36,880 --> 00:22:39,360
a baseline configuration and get it

575
00:22:39,360 --> 00:22:40,000
ready

576
00:22:40,000 --> 00:22:42,640
to go in line that means that we put all

577
00:22:42,640 --> 00:22:44,799
of the ips all of the internal security

578
00:22:44,799 --> 00:22:46,240
policies

579
00:22:46,240 --> 00:22:48,320
we would get all the plumbing in there

580
00:22:48,320 --> 00:22:49,440
working

581
00:22:49,440 --> 00:22:52,159
once we felt that we had the web

582
00:22:52,159 --> 00:22:53,360
application firewall

583
00:22:53,360 --> 00:22:55,360
built to a sufficient level that it was

584
00:22:55,360 --> 00:22:56,799
ready to go online

585
00:22:56,799 --> 00:22:59,600
we would then go to both the app dev

586
00:22:59,600 --> 00:23:01,280
team as well as our testers

587
00:23:01,280 --> 00:23:04,159
and we would ask them to go through and

588
00:23:04,159 --> 00:23:06,720
leveraging host file redirection

589
00:23:06,720 --> 00:23:09,679
to point the actual web app on their

590
00:23:09,679 --> 00:23:11,280
local system instead of going

591
00:23:11,280 --> 00:23:14,159
to the normal dns instead go to the ip

592
00:23:14,159 --> 00:23:16,159
of our web application firewall

593
00:23:16,159 --> 00:23:18,880
and then we ask the testers and the app

594
00:23:18,880 --> 00:23:19,600
dev

595
00:23:19,600 --> 00:23:23,360
please do a ton of thorough testing

596
00:23:23,360 --> 00:23:26,559
while they're doing those tests i'd tap

597
00:23:26,559 --> 00:23:28,720
in the tune resource so that the tune

598
00:23:28,720 --> 00:23:30,159
resource could start going through

599
00:23:30,159 --> 00:23:31,919
taking a look at the alerts

600
00:23:31,919 --> 00:23:34,720
making sure that traffic was flowing as

601
00:23:34,720 --> 00:23:35,520
normally and

602
00:23:35,520 --> 00:23:38,559
go making an initial determination

603
00:23:38,559 --> 00:23:41,039
which alerts do we just ignore which

604
00:23:41,039 --> 00:23:41,760
alerts

605
00:23:41,760 --> 00:23:44,080
do we go through and do we escalate to

606
00:23:44,080 --> 00:23:45,840
the app dev team so that we can go

607
00:23:45,840 --> 00:23:46,559
through

608
00:23:46,559 --> 00:23:48,559
now depending on how involved your app

609
00:23:48,559 --> 00:23:50,320
devs how thorough your testing

610
00:23:50,320 --> 00:23:53,919
is is going to really have a huge payoff

611
00:23:53,919 --> 00:23:55,039
down the road so i

612
00:23:55,039 --> 00:23:59,520
i urge you to spend a lot of time

613
00:23:59,520 --> 00:24:02,240
in this host file redirection testing

614
00:24:02,240 --> 00:24:03,520
it's one of those things where it's

615
00:24:03,520 --> 00:24:05,279
going to pay off in spades later and

616
00:24:05,279 --> 00:24:06,240
once again

617
00:24:06,240 --> 00:24:08,559
you want both volume of traffic and

618
00:24:08,559 --> 00:24:10,480
diversity of traffic for your web

619
00:24:10,480 --> 00:24:13,200
application

620
00:24:13,440 --> 00:24:15,520
at some point you're going to get the

621
00:24:15,520 --> 00:24:17,279
approval from the app devs and the app

622
00:24:17,279 --> 00:24:17,840
owners

623
00:24:17,840 --> 00:24:20,799
that because of their testing that they

624
00:24:20,799 --> 00:24:22,000
are confident

625
00:24:22,000 --> 00:24:26,080
that we are effectively done a baseline

626
00:24:26,080 --> 00:24:28,400
tuning of the web application firewall

627
00:24:28,400 --> 00:24:29,440
and they say okay

628
00:24:29,440 --> 00:24:32,480
we're ready to go in line so as the web

629
00:24:32,480 --> 00:24:33,919
application firewall is still in

630
00:24:33,919 --> 00:24:35,840
transparent non-blocking mode

631
00:24:35,840 --> 00:24:39,600
alerting only mode we would go through

632
00:24:39,600 --> 00:24:42,559
and we would secure a maintenance window

633
00:24:42,559 --> 00:24:44,799
submit a change request get all of that

634
00:24:44,799 --> 00:24:46,559
good stuff together

635
00:24:46,559 --> 00:24:49,120
before actually putting the web

636
00:24:49,120 --> 00:24:50,640
application firewall in line and

637
00:24:50,640 --> 00:24:52,400
to be honest this was one of the easiest

638
00:24:52,400 --> 00:24:55,039
change controls that i've ever ran

639
00:24:55,039 --> 00:24:57,360
because i don't have access to the dns

640
00:24:57,360 --> 00:24:58,799
we've already proven out through host

641
00:24:58,799 --> 00:25:00,000
file redirection

642
00:25:00,000 --> 00:25:03,520
that the traffic will flow so

643
00:25:03,520 --> 00:25:05,440
i would just have a conference call i'd

644
00:25:05,440 --> 00:25:07,440
kick off the conference call about five

645
00:25:07,440 --> 00:25:08,159
minutes

646
00:25:08,159 --> 00:25:11,039
before we were scheduled to go in line i

647
00:25:11,039 --> 00:25:11,760
would ask

648
00:25:11,760 --> 00:25:14,880
for a quick go no go making sure

649
00:25:14,880 --> 00:25:17,760
that appdev felt comfortable moving

650
00:25:17,760 --> 00:25:18,960
forward

651
00:25:18,960 --> 00:25:22,320
and if we had a go then

652
00:25:22,320 --> 00:25:24,159
as soon as the maintenance window opened

653
00:25:24,159 --> 00:25:26,400
i'd ask my networking team resource

654
00:25:26,400 --> 00:25:29,200
please update the dns record to point to

655
00:25:29,200 --> 00:25:31,840
the public interface of the waff

656
00:25:31,840 --> 00:25:35,279
and we'd allow dns replication to take

657
00:25:35,279 --> 00:25:36,080
place

658
00:25:36,080 --> 00:25:38,320
beforehand we knocked the ttl down

659
00:25:38,320 --> 00:25:39,440
really low

660
00:25:39,440 --> 00:25:40,880
so that you know as only a couple

661
00:25:40,880 --> 00:25:42,880
minutes failover or for

662
00:25:42,880 --> 00:25:46,000
before convergence and once that

663
00:25:46,000 --> 00:25:49,600
converge you know i was testing it both

664
00:25:49,600 --> 00:25:52,320
on my personal device if it if this site

665
00:25:52,320 --> 00:25:52,720
was

666
00:25:52,720 --> 00:25:54,720
open to the public i was testing it from

667
00:25:54,720 --> 00:25:56,480
my corporate sites

668
00:25:56,480 --> 00:25:58,480
i was just making sure that traffic did

669
00:25:58,480 --> 00:25:59,919
seem to be flowing

670
00:25:59,919 --> 00:26:03,120
and not only was i looking at

671
00:26:03,120 --> 00:26:06,880
does the log on page render correctly

672
00:26:06,880 --> 00:26:08,480
but it's also taking a look at things

673
00:26:08,480 --> 00:26:10,000
like the internal cryptography

674
00:26:10,000 --> 00:26:12,000
of the certificates making sure that it

675
00:26:12,000 --> 00:26:13,039
matched before

676
00:26:13,039 --> 00:26:16,559
and after and generally the validation

677
00:26:16,559 --> 00:26:17,679
testing that i did

678
00:26:17,679 --> 00:26:19,760
once that dns took over it was like five

679
00:26:19,760 --> 00:26:20,720
minutes or so

680
00:26:20,720 --> 00:26:22,880
and then i'd turn it over once again to

681
00:26:22,880 --> 00:26:24,159
the application team

682
00:26:24,159 --> 00:26:27,440
and the testing team once again we

683
00:26:27,440 --> 00:26:29,840
spent about one hour two hours depending

684
00:26:29,840 --> 00:26:30,880
on the group

685
00:26:30,880 --> 00:26:32,559
where they were going through and just

686
00:26:32,559 --> 00:26:34,880
running various use case tested and once

687
00:26:34,880 --> 00:26:35,360
again

688
00:26:35,360 --> 00:26:38,640
i highly recommend a mix of automated

689
00:26:38,640 --> 00:26:39,840
testing

690
00:26:39,840 --> 00:26:42,960
a mix of in-person testing test

691
00:26:42,960 --> 00:26:44,799
a bunch of function as much

692
00:26:44,799 --> 00:26:46,960
functionality as you can

693
00:26:46,960 --> 00:26:49,440
and once again i know you're going to

694
00:26:49,440 --> 00:26:50,640
get tired of me saying this

695
00:26:50,640 --> 00:26:54,480
volume and diversity of traffic is key

696
00:26:54,480 --> 00:26:56,799
but at the end of the maintenance window

697
00:26:56,799 --> 00:26:57,919
we'd ask

698
00:26:57,919 --> 00:27:02,000
i'd ask are we good and if everyone said

699
00:27:02,000 --> 00:27:03,440
said they were comfortable with it we

700
00:27:03,440 --> 00:27:05,039
would go through and we would simply

701
00:27:05,039 --> 00:27:08,080
close out the maintenance window as a

702
00:27:08,080 --> 00:27:09,520
success

703
00:27:09,520 --> 00:27:12,799
at this point i have never had

704
00:27:12,799 --> 00:27:15,600
to pull a web application firewall

705
00:27:15,600 --> 00:27:17,360
during a maintenance window it was

706
00:27:17,360 --> 00:27:19,120
very straightforward as long as you do

707
00:27:19,120 --> 00:27:21,039
the proper host file testing ahead of

708
00:27:21,039 --> 00:27:22,000
time

709
00:27:22,000 --> 00:27:24,000
so now let's talk about where i'm my

710
00:27:24,000 --> 00:27:25,440
weakest and that's our tune

711
00:27:25,440 --> 00:27:28,640
phase so

712
00:27:28,640 --> 00:27:31,679
when that maintenance window

713
00:27:31,679 --> 00:27:34,320
ends a magical thing happened at least

714
00:27:34,320 --> 00:27:35,360
for me

715
00:27:35,360 --> 00:27:36,960
that web application firewall was

716
00:27:36,960 --> 00:27:38,640
transferred from my

717
00:27:38,640 --> 00:27:40,960
phase over to the responsibility of the

718
00:27:40,960 --> 00:27:41,919
tune face

719
00:27:41,919 --> 00:27:45,200
so i was done i was out jerry

720
00:27:45,200 --> 00:27:48,240
so one of the things that

721
00:27:48,240 --> 00:27:49,919
we need to remember is at this point

722
00:27:49,919 --> 00:27:51,679
we're still in transparent learning mode

723
00:27:51,679 --> 00:27:53,039
because we're trying to go through and

724
00:27:53,039 --> 00:27:53,679
build up

725
00:27:53,679 --> 00:27:56,799
trust in the process and of course we're

726
00:27:56,799 --> 00:27:57,760
doing this first

727
00:27:57,760 --> 00:27:59,520
in the lower level environments working

728
00:27:59,520 --> 00:28:01,039
our way up to

729
00:28:01,039 --> 00:28:04,320
the higher level environment so

730
00:28:04,320 --> 00:28:06,720
during the first week first two weeks

731
00:28:06,720 --> 00:28:07,679
first three weeks

732
00:28:07,679 --> 00:28:10,880
once again it's going to depend on

733
00:28:10,880 --> 00:28:12,960
your organization the trust that you

734
00:28:12,960 --> 00:28:15,120
have with your app dev team

735
00:28:15,120 --> 00:28:17,279
will be in the initial tune phase and

736
00:28:17,279 --> 00:28:18,720
during this phase

737
00:28:18,720 --> 00:28:20,720
we want to go through and be meeting at

738
00:28:20,720 --> 00:28:22,399
least daily

739
00:28:22,399 --> 00:28:25,440
between the i.t security tuning resource

740
00:28:25,440 --> 00:28:26,799
and the app dev team in which you're

741
00:28:26,799 --> 00:28:27,919
going to go through and you're going to

742
00:28:27,919 --> 00:28:28,399
look at

743
00:28:28,399 --> 00:28:30,320
each and every alert and it's critical

744
00:28:30,320 --> 00:28:32,320
that you look at all alerts

745
00:28:32,320 --> 00:28:36,399
we fell into a trap in where we went

746
00:28:36,399 --> 00:28:40,159
through and were prioritizing

747
00:28:40,159 --> 00:28:42,320
alerts based on the number of

748
00:28:42,320 --> 00:28:43,760
occurrences

749
00:28:43,760 --> 00:28:46,480
and while that really helped us whittle

750
00:28:46,480 --> 00:28:47,200
down

751
00:28:47,200 --> 00:28:48,720
the number of alerts we were getting

752
00:28:48,720 --> 00:28:51,440
quite quickly one of the traps was

753
00:28:51,440 --> 00:28:54,480
is we were not looking at

754
00:28:54,480 --> 00:28:57,039
the one or two offs the niche

755
00:28:57,039 --> 00:28:58,880
functionality the certain processes that

756
00:28:58,880 --> 00:28:59,520
only happen

757
00:28:59,520 --> 00:29:03,360
once a week once a month once a quarter

758
00:29:03,360 --> 00:29:07,679
and so when we did eventually go through

759
00:29:07,679 --> 00:29:10,399
and go into blocking mode what ended up

760
00:29:10,399 --> 00:29:11,039
happening

761
00:29:11,039 --> 00:29:14,159
is yeah 99.998 percent of the traffic

762
00:29:14,159 --> 00:29:16,880
worked great but there was some niche

763
00:29:16,880 --> 00:29:18,399
functionality

764
00:29:18,399 --> 00:29:21,760
say charge back to achs that was not

765
00:29:21,760 --> 00:29:22,960
working that was a

766
00:29:22,960 --> 00:29:26,399
huge deal even though it was a

767
00:29:26,399 --> 00:29:30,000
low probability functionality event

768
00:29:30,000 --> 00:29:32,720
so we want to make sure that we're being

769
00:29:32,720 --> 00:29:33,679
thorough

770
00:29:33,679 --> 00:29:37,039
in our testing but at some point

771
00:29:37,039 --> 00:29:40,480
as the tuning resource and the app devs

772
00:29:40,480 --> 00:29:41,279
me

773
00:29:41,279 --> 00:29:43,039
you'll go through and you'll see the

774
00:29:43,039 --> 00:29:45,840
actual number of alerts coming out

775
00:29:45,840 --> 00:29:49,200
is lessened as you do your tuning and

776
00:29:49,200 --> 00:29:52,000
whatever your metric is to define

777
00:29:52,000 --> 00:29:53,600
success that's going to be up to your

778
00:29:53,600 --> 00:29:54,559
app dev

779
00:29:54,559 --> 00:29:58,559
to your own internal risk process but

780
00:29:58,559 --> 00:29:59,840
eventually you're going to get there and

781
00:29:59,840 --> 00:30:01,600
generally i found out

782
00:30:01,600 --> 00:30:04,720
it was like one or two weeks within our

783
00:30:04,720 --> 00:30:06,399
environment so it can happen

784
00:30:06,399 --> 00:30:10,320
really quick and when you hit that place

785
00:30:10,320 --> 00:30:12,080
you're going to be in a position where

786
00:30:12,080 --> 00:30:13,600
you can proceed

787
00:30:13,600 --> 00:30:16,880
into blocking mode so let's talk

788
00:30:16,880 --> 00:30:18,960
about going into blocking mode once

789
00:30:18,960 --> 00:30:20,799
again it's critical

790
00:30:20,799 --> 00:30:23,840
we are guests in our applications

791
00:30:23,840 --> 00:30:27,440
owners application so we need their full

792
00:30:27,440 --> 00:30:30,480
buy-in which which is why i am so

793
00:30:30,480 --> 00:30:31,360
adamant that

794
00:30:31,360 --> 00:30:33,760
we treat them as a trusted partner and

795
00:30:33,760 --> 00:30:35,520
get their approval

796
00:30:35,520 --> 00:30:39,279
once again we go through we create

797
00:30:39,279 --> 00:30:41,200
a maintenance window we submit the

798
00:30:41,200 --> 00:30:42,880
needed change work

799
00:30:42,880 --> 00:30:45,120
and we implement this via a bridge now

800
00:30:45,120 --> 00:30:46,000
keep in mind

801
00:30:46,000 --> 00:30:48,320
i'm out of this at this point so our

802
00:30:48,320 --> 00:30:49,039
tuning

803
00:30:49,039 --> 00:30:51,600
resource russ in this case he would

804
00:30:51,600 --> 00:30:53,039
actually go through and he'd run the

805
00:30:53,039 --> 00:30:53,919
bridge call

806
00:30:53,919 --> 00:30:57,039
and the bridge call went very simple

807
00:30:57,039 --> 00:30:58,880
uh he adopted you know five minutes

808
00:30:58,880 --> 00:31:00,159
before get a go

809
00:31:00,159 --> 00:31:04,960
no go if go he would log into the gui

810
00:31:04,960 --> 00:31:06,480
of course each web application is going

811
00:31:06,480 --> 00:31:07,760
to be a little bit different on how you

812
00:31:07,760 --> 00:31:08,559
do this

813
00:31:08,559 --> 00:31:10,480
but it was a two minute process once the

814
00:31:10,480 --> 00:31:11,919
maintenance window

815
00:31:11,919 --> 00:31:13,840
opened to where we would go from

816
00:31:13,840 --> 00:31:15,760
transparent learning mode into blocking

817
00:31:15,760 --> 00:31:16,399
mode

818
00:31:16,399 --> 00:31:18,080
and then once again we would go through

819
00:31:18,080 --> 00:31:20,320
and we'd start off with our testing

820
00:31:20,320 --> 00:31:22,480
once again i know you're tired of me

821
00:31:22,480 --> 00:31:23,679
saying this both

822
00:31:23,679 --> 00:31:26,320
diversity and volume of traffic is

823
00:31:26,320 --> 00:31:27,279
critical

824
00:31:27,279 --> 00:31:29,760
at the end of the testing we would have

825
00:31:29,760 --> 00:31:30,960
a

826
00:31:30,960 --> 00:31:34,720
a success non-success and once again

827
00:31:34,720 --> 00:31:37,919
we never had to back out of a change

828
00:31:37,919 --> 00:31:41,279
control when we were going into blocking

829
00:31:41,279 --> 00:31:43,679
because we did the relevant testing

830
00:31:43,679 --> 00:31:44,880
ahead of time

831
00:31:44,880 --> 00:31:47,200
but it is very critical to understand

832
00:31:47,200 --> 00:31:49,919
that you might run into some issues

833
00:31:49,919 --> 00:31:54,080
so let's talk about the support phase

834
00:31:54,799 --> 00:31:58,799
so for me it is critical and this was

835
00:31:58,799 --> 00:32:00,720
actually outlined in the implementation

836
00:32:00,720 --> 00:32:01,200
guide

837
00:32:01,200 --> 00:32:03,760
for me to set up my support resources to

838
00:32:03,760 --> 00:32:04,960
be successful

839
00:32:04,960 --> 00:32:07,360
so i would provide them with day and day

840
00:32:07,360 --> 00:32:08,960
out support tasks

841
00:32:08,960 --> 00:32:10,640
i give them start of day start of week

842
00:32:10,640 --> 00:32:13,440
start of month procedures

843
00:32:13,440 --> 00:32:15,840
i would urge them to have regular review

844
00:32:15,840 --> 00:32:17,519
meetings with appdev

845
00:32:17,519 --> 00:32:19,279
what does that look like is it bi-weekly

846
00:32:19,279 --> 00:32:21,120
on tuesday thursdays is it the start of

847
00:32:21,120 --> 00:32:22,799
week is it at the end of week

848
00:32:22,799 --> 00:32:25,919
that's up and it's to your app dev team

849
00:32:25,919 --> 00:32:26,559
and your

850
00:32:26,559 --> 00:32:29,440
own individual organization we needed to

851
00:32:29,440 --> 00:32:31,039
address how are we going to do move ad

852
00:32:31,039 --> 00:32:31,919
change tickets

853
00:32:31,919 --> 00:32:34,320
troubleshooting performance testing

854
00:32:34,320 --> 00:32:36,279
procedures patching procedures

855
00:32:36,279 --> 00:32:37,600
documentation

856
00:32:37,600 --> 00:32:39,440
on where they can get the organizational

857
00:32:39,440 --> 00:32:41,279
documentation making sure that they have

858
00:32:41,279 --> 00:32:42,240
logins

859
00:32:42,240 --> 00:32:45,279
to your waffs not only helpline

860
00:32:45,279 --> 00:32:48,320
but their support center and of course

861
00:32:48,320 --> 00:32:51,440
training i worked very hard i was very

862
00:32:51,440 --> 00:32:52,559
open

863
00:32:52,559 --> 00:32:54,960
that whenever i was doing work on a

864
00:32:54,960 --> 00:32:56,320
laugh

865
00:32:56,320 --> 00:32:59,279
i always invited my the people are going

866
00:32:59,279 --> 00:33:00,880
to take over ownership of it

867
00:33:00,880 --> 00:33:03,120
they're always invited as optional i

868
00:33:03,120 --> 00:33:04,480
wanted to be very open

869
00:33:04,480 --> 00:33:07,840
very transparent and allow them to learn

870
00:33:07,840 --> 00:33:10,640
the best ways that they learned

871
00:33:10,640 --> 00:33:13,279
so now let's get into the nitty-gritty

872
00:33:13,279 --> 00:33:16,320
deep architecture

873
00:33:17,039 --> 00:33:19,840
so if we're on premise are you going to

874
00:33:19,840 --> 00:33:21,120
use physical machines are you going to

875
00:33:21,120 --> 00:33:24,159
use virtual machines

876
00:33:24,159 --> 00:33:27,360
for what i did we used all virtual

877
00:33:27,360 --> 00:33:30,000
or cloud machines how do we intercept

878
00:33:30,000 --> 00:33:30,880
traffic

879
00:33:30,880 --> 00:33:32,720
here you can go through and you can use

880
00:33:32,720 --> 00:33:35,519
dns or you can inspect all traffic on a

881
00:33:35,519 --> 00:33:36,880
certain network segment

882
00:33:36,880 --> 00:33:39,679
personally i prefer dns because it's

883
00:33:39,679 --> 00:33:40,080
much

884
00:33:40,080 --> 00:33:43,120
faster much safer to go through

885
00:33:43,120 --> 00:33:44,960
and to switch in case you have to go

886
00:33:44,960 --> 00:33:46,880
through and bypass the lap for any way

887
00:33:46,880 --> 00:33:48,159
shape or form

888
00:33:48,159 --> 00:33:49,760
we want to make sure that our management

889
00:33:49,760 --> 00:33:51,440
ports are on a

890
00:33:51,440 --> 00:33:54,640
internal protected vlan

891
00:33:54,640 --> 00:33:57,279
and the web application server should

892
00:33:57,279 --> 00:33:57,840
not be

893
00:33:57,840 --> 00:34:01,760
internet accessible once the application

894
00:34:01,760 --> 00:34:04,559
is protected by a waf so make sure that

895
00:34:04,559 --> 00:34:05,200
we are

896
00:34:05,200 --> 00:34:07,440
taking sufficient steps to make sure

897
00:34:07,440 --> 00:34:08,560
that someone cannot

898
00:34:08,560 --> 00:34:11,918
bypass the waff by doing any trickery

899
00:34:11,918 --> 00:34:14,879
say with their host file or any trickery

900
00:34:14,879 --> 00:34:18,239
with dns poisoning

901
00:34:18,239 --> 00:34:21,599
so what does uh the waff look like on

902
00:34:21,599 --> 00:34:22,079
premise

903
00:34:22,079 --> 00:34:24,159
well it's pretty simple here you can see

904
00:34:24,159 --> 00:34:26,480
i've got uh the top two wafts

905
00:34:26,480 --> 00:34:29,359
are production then we go through and we

906
00:34:29,359 --> 00:34:30,000
have

907
00:34:30,000 --> 00:34:33,599
a pre a uat and a test

908
00:34:33,599 --> 00:34:37,918
at the bottom with that being said

909
00:34:37,918 --> 00:34:40,639
we have a load balancer up in front of

910
00:34:40,639 --> 00:34:42,560
our production just so that we have a

911
00:34:42,560 --> 00:34:45,599
bit of high availability

912
00:34:45,599 --> 00:34:48,879
and generally within our production

913
00:34:48,879 --> 00:34:51,760
the wafs would go through and pass the

914
00:34:51,760 --> 00:34:53,440
traffic to a sub vlan

915
00:34:53,440 --> 00:34:55,599
where our front end application servers

916
00:34:55,599 --> 00:34:58,480
were residing

917
00:34:59,599 --> 00:35:02,720
so let's talk about the cloud

918
00:35:02,720 --> 00:35:04,800
are we going to go through and implement

919
00:35:04,800 --> 00:35:06,320
in the same cloud

920
00:35:06,320 --> 00:35:08,880
container are we going to go through and

921
00:35:08,880 --> 00:35:11,839
host in different cloud containers

922
00:35:11,839 --> 00:35:13,839
if you're implementing in the same cloud

923
00:35:13,839 --> 00:35:15,119
environment

924
00:35:15,119 --> 00:35:17,440
that can be the quickest way to actually

925
00:35:17,440 --> 00:35:18,640
deploy

926
00:35:18,640 --> 00:35:22,000
but within my organizations

927
00:35:22,000 --> 00:35:25,680
we give our cloud devs a lot of rights

928
00:35:25,680 --> 00:35:27,280
and because we give them a lot of rights

929
00:35:27,280 --> 00:35:29,599
they could do some high trickery

930
00:35:29,599 --> 00:35:31,200
they could go and they could juggle

931
00:35:31,200 --> 00:35:33,520
where i p addresses for example

932
00:35:33,520 --> 00:35:37,119
they could make edits to network

933
00:35:37,119 --> 00:35:38,800
or to the nat network address

934
00:35:38,800 --> 00:35:41,040
translation that would allow

935
00:35:41,040 --> 00:35:44,400
them to go through and to bypass the web

936
00:35:44,400 --> 00:35:46,000
application firewall

937
00:35:46,000 --> 00:35:48,800
without any approval without it security

938
00:35:48,800 --> 00:35:50,000
knowing

939
00:35:50,000 --> 00:35:51,359
if you're implementing in a different

940
00:35:51,359 --> 00:35:53,599
cloud environment how do you pass

941
00:35:53,599 --> 00:35:56,560
traffic over the internet do you use

942
00:35:56,560 --> 00:35:57,520
v-net peering

943
00:35:57,520 --> 00:36:00,720
do you use a vpn what if

944
00:36:00,720 --> 00:36:03,440
you're going through and deploying your

945
00:36:03,440 --> 00:36:04,480
wafs

946
00:36:04,480 --> 00:36:07,839
in cloud a and your web applications are

947
00:36:07,839 --> 00:36:09,200
in cloud b

948
00:36:09,200 --> 00:36:11,119
these are all some things that you need

949
00:36:11,119 --> 00:36:13,280
to go through and you need to consider

950
00:36:13,280 --> 00:36:15,119
especially all the way back at the

951
00:36:15,119 --> 00:36:16,800
architecture because that's really where

952
00:36:16,800 --> 00:36:19,760
your blueprint is going to be defined

953
00:36:19,760 --> 00:36:22,320
how do you manage your wafts do you have

954
00:36:22,320 --> 00:36:24,240
hardened jump servers

955
00:36:24,240 --> 00:36:26,160
or do you go through and do you trust

956
00:36:26,160 --> 00:36:28,400
direct internet logon especially for

957
00:36:28,400 --> 00:36:31,200
cloud facing systems these are all

958
00:36:31,200 --> 00:36:32,800
things that you need to go through

959
00:36:32,800 --> 00:36:34,800
and you need to consider especially

960
00:36:34,800 --> 00:36:36,800
during the architecture

961
00:36:36,800 --> 00:36:40,640
now our initial

962
00:36:40,640 --> 00:36:43,920
plan was to deploy in the same container

963
00:36:43,920 --> 00:36:46,960
but as i said there are some risks it

964
00:36:46,960 --> 00:36:49,359
could allow the web application team to

965
00:36:49,359 --> 00:36:51,040
go through the bypass

966
00:36:51,040 --> 00:36:54,000
so instead what we did within the same

967
00:36:54,000 --> 00:36:54,640
cloud

968
00:36:54,640 --> 00:36:57,040
instance that our web applications were

969
00:36:57,040 --> 00:36:58,320
in we spun

970
00:36:58,320 --> 00:37:02,160
up a new container that only i t

971
00:37:02,160 --> 00:37:05,440
security had access to and then

972
00:37:05,440 --> 00:37:08,240
we trusted the direct cloud routing

973
00:37:08,240 --> 00:37:09,280
because

974
00:37:09,280 --> 00:37:11,599
the traffic between our laughs and the

975
00:37:11,599 --> 00:37:12,720
front-end web service

976
00:37:12,720 --> 00:37:14,720
that was strongly encrypted with uh the

977
00:37:14,720 --> 00:37:16,560
proper tls protocols

978
00:37:16,560 --> 00:37:19,520
that we found that that type of intra

979
00:37:19,520 --> 00:37:20,240
v-net

980
00:37:20,240 --> 00:37:22,160
routing within the same cloud

981
00:37:22,160 --> 00:37:23,520
environment was

982
00:37:23,520 --> 00:37:25,599
acceptable based on our rules laws

983
00:37:25,599 --> 00:37:27,760
regulations and organizational

984
00:37:27,760 --> 00:37:31,200
policies once again

985
00:37:31,200 --> 00:37:32,880
this might look a little bit different

986
00:37:32,880 --> 00:37:35,040
for use for your organization you might

987
00:37:35,040 --> 00:37:35,680
want to

988
00:37:35,680 --> 00:37:38,079
run a vpn you might want to do v-net

989
00:37:38,079 --> 00:37:39,440
pairing but that those are

990
00:37:39,440 --> 00:37:40,800
considerations that you should

991
00:37:40,800 --> 00:37:44,480
definitely talk with your cloud team on

992
00:37:44,480 --> 00:37:47,599
so let's talk about policies you know

993
00:37:47,599 --> 00:37:49,599
nothing better than talking policies on

994
00:37:49,599 --> 00:37:50,079
saturday

995
00:37:50,079 --> 00:37:54,079
morning right so do we want to have

996
00:37:54,079 --> 00:37:57,280
one single policy to rule all of the web

997
00:37:57,280 --> 00:37:58,320
application

998
00:37:58,320 --> 00:38:03,440
ideally ni i used to think yes

999
00:38:03,440 --> 00:38:05,280
and i was wrong and you should mock me

1000
00:38:05,280 --> 00:38:07,040
for it because

1001
00:38:07,040 --> 00:38:08,720
what we found was certain part of our

1002
00:38:08,720 --> 00:38:10,079
web applications

1003
00:38:10,079 --> 00:38:13,119
behave a little bit differently and if

1004
00:38:13,119 --> 00:38:14,560
we were to go through

1005
00:38:14,560 --> 00:38:17,359
and if we were going to create

1006
00:38:17,359 --> 00:38:18,160
exceptions

1007
00:38:18,160 --> 00:38:20,960
based on niche functionality that would

1008
00:38:20,960 --> 00:38:21,359
have

1009
00:38:21,359 --> 00:38:24,079
applied to the entire site so instead

1010
00:38:24,079 --> 00:38:25,040
what we did

1011
00:38:25,040 --> 00:38:28,160
is it might be called a micro policy a

1012
00:38:28,160 --> 00:38:29,920
parent child policy the name

1013
00:38:29,920 --> 00:38:32,079
differs between each of the web

1014
00:38:32,079 --> 00:38:34,160
application firewalls

1015
00:38:34,160 --> 00:38:37,599
but we created micro policies that would

1016
00:38:37,599 --> 00:38:38,240
apply

1017
00:38:38,240 --> 00:38:41,520
to certain more challenging

1018
00:38:41,520 --> 00:38:45,520
areas say a file upload

1019
00:38:45,520 --> 00:38:49,520
option i spoke to this earlier but often

1020
00:38:49,520 --> 00:38:50,560
our lower level

1021
00:38:50,560 --> 00:38:52,720
environments are not identical they'll

1022
00:38:52,720 --> 00:38:53,839
be close

1023
00:38:53,839 --> 00:38:56,000
but in some cases you might be going

1024
00:38:56,000 --> 00:38:58,079
through a missing functionality

1025
00:38:58,079 --> 00:39:00,400
and once again web application firewalls

1026
00:39:00,400 --> 00:39:02,320
they're very expensive

1027
00:39:02,320 --> 00:39:04,960
they have a high total cost of ownership

1028
00:39:04,960 --> 00:39:06,240
so

1029
00:39:06,240 --> 00:39:09,839
my recommendation is to evaluate

1030
00:39:09,839 --> 00:39:12,839
where is the most effective place to

1031
00:39:12,839 --> 00:39:14,000
start

1032
00:39:14,000 --> 00:39:16,880
inspecting your traffic to deploy web

1033
00:39:16,880 --> 00:39:18,480
application firewalls

1034
00:39:18,480 --> 00:39:22,240
and to me that would be at the same

1035
00:39:22,240 --> 00:39:25,680
level that has feature parity

1036
00:39:25,680 --> 00:39:30,079
with pay attention to cryptography

1037
00:39:30,079 --> 00:39:31,520
especially in the lower level

1038
00:39:31,520 --> 00:39:33,119
environment uh

1039
00:39:33,119 --> 00:39:34,720
one thing that i found was some of our

1040
00:39:34,720 --> 00:39:36,320
lower level environment

1041
00:39:36,320 --> 00:39:38,400
we're using wild card crypto

1042
00:39:38,400 --> 00:39:39,359
cryptography

1043
00:39:39,359 --> 00:39:41,440
in fact some of our clouds were using

1044
00:39:41,440 --> 00:39:43,599
the vendor supplied

1045
00:39:43,599 --> 00:39:46,640
wild card cryptography which uh we had

1046
00:39:46,640 --> 00:39:48,240
to switch over to

1047
00:39:48,240 --> 00:39:51,599
internally minted pki search for those

1048
00:39:51,599 --> 00:39:52,880
environments so that we could actually

1049
00:39:52,880 --> 00:39:53,760
go through

1050
00:39:53,760 --> 00:39:56,720
and inspect the traffic we need to make

1051
00:39:56,720 --> 00:39:58,400
sure that we're using the proper

1052
00:39:58,400 --> 00:40:00,800
cryptographic ciphers it doesn't make

1053
00:40:00,800 --> 00:40:02,079
sense to

1054
00:40:02,079 --> 00:40:04,800
spin up an entire web application

1055
00:40:04,800 --> 00:40:05,440
firewall

1056
00:40:05,440 --> 00:40:08,319
if you're you're still using tls 1 and

1057
00:40:08,319 --> 00:40:10,720
1.1 that'll give my poodle a heartbreak

1058
00:40:10,720 --> 00:40:12,480
and if you got that joke

1059
00:40:12,480 --> 00:40:17,599
spot on indeed

1060
00:40:17,599 --> 00:40:21,040
so naively

1061
00:40:21,040 --> 00:40:23,680
remember application development is

1062
00:40:23,680 --> 00:40:26,560
where i am my absolute weakest

1063
00:40:26,560 --> 00:40:30,960
i assumed that we were going to learn

1064
00:40:30,960 --> 00:40:34,079
alerts in the lower level

1065
00:40:34,079 --> 00:40:36,160
environment so i expected a normal

1066
00:40:36,160 --> 00:40:37,359
policy

1067
00:40:37,359 --> 00:40:40,079
push would we'd find something in test

1068
00:40:40,079 --> 00:40:42,079
we would then

1069
00:40:42,079 --> 00:40:45,440
push the fix in test then promote the

1070
00:40:45,440 --> 00:40:46,000
fix

1071
00:40:46,000 --> 00:40:48,560
to stage and then promote the fix to

1072
00:40:48,560 --> 00:40:49,520
prod

1073
00:40:49,520 --> 00:40:51,920
before the code actually got updated so

1074
00:40:51,920 --> 00:40:52,960
that we weren't running

1075
00:40:52,960 --> 00:40:56,240
into bugs in our deployment cycles what

1076
00:40:56,240 --> 00:40:59,760
quickly became apparent was because

1077
00:40:59,760 --> 00:41:02,640
we didn't have as much volume or

1078
00:41:02,640 --> 00:41:04,400
diversity of testing in our lower level

1079
00:41:04,400 --> 00:41:05,200
environments

1080
00:41:05,200 --> 00:41:07,520
we started to see things see bugs for

1081
00:41:07,520 --> 00:41:08,720
the first time

1082
00:41:08,720 --> 00:41:11,839
in stage improv which meant not only did

1083
00:41:11,839 --> 00:41:12,640
we have the

1084
00:41:12,640 --> 00:41:16,240
normal bottom up

1085
00:41:16,240 --> 00:41:18,560
type of policy pushes but we also had

1086
00:41:18,560 --> 00:41:19,359
from the top

1087
00:41:19,359 --> 00:41:22,400
down and even middle out

1088
00:41:22,400 --> 00:41:24,720
so this is something where we had to go

1089
00:41:24,720 --> 00:41:25,599
through and create

1090
00:41:25,599 --> 00:41:29,359
explicit policies uh tactical game plans

1091
00:41:29,359 --> 00:41:31,200
on how to support especially

1092
00:41:31,200 --> 00:41:34,000
the what i call the reset policy so from

1093
00:41:34,000 --> 00:41:34,720
prod down

1094
00:41:34,720 --> 00:41:38,000
or the middle out pro policy push

1095
00:41:38,000 --> 00:41:39,440
in which we found something say for

1096
00:41:39,440 --> 00:41:42,400
example in stage

1097
00:41:42,480 --> 00:41:45,839
so on policy what triggers

1098
00:41:45,839 --> 00:41:48,960
a policy push is it based on

1099
00:41:48,960 --> 00:41:51,680
sensitivity of the bug is it by number

1100
00:41:51,680 --> 00:41:52,560
of the bug

1101
00:41:52,560 --> 00:41:55,280
or do you tie your policy pushes in line

1102
00:41:55,280 --> 00:41:56,160
in some

1103
00:41:56,160 --> 00:41:59,520
way to your actual production code

1104
00:41:59,520 --> 00:42:01,440
pushes now once again this is going to

1105
00:42:01,440 --> 00:42:02,560
be about defining that

1106
00:42:02,560 --> 00:42:05,440
sdl3c lifecycle this is where you know

1107
00:42:05,440 --> 00:42:06,160
you're going to

1108
00:42:06,160 --> 00:42:08,400
want to go through and include

1109
00:42:08,400 --> 00:42:09,599
explicitly

1110
00:42:09,599 --> 00:42:13,040
your actual app dev team as part of this

1111
00:42:13,040 --> 00:42:15,440
we want to go through and we want to

1112
00:42:15,440 --> 00:42:16,800
understand

1113
00:42:16,800 --> 00:42:20,720
how do we do critical pushes

1114
00:42:20,720 --> 00:42:22,640
and how is that defined when a critical

1115
00:42:22,640 --> 00:42:24,880
push is required

1116
00:42:24,880 --> 00:42:26,960
when demoting a policy from a higher

1117
00:42:26,960 --> 00:42:28,480
level environment to a lower level

1118
00:42:28,480 --> 00:42:29,359
environment

1119
00:42:29,359 --> 00:42:30,880
we want to make sure that we have

1120
00:42:30,880 --> 00:42:32,400
defined

1121
00:42:32,400 --> 00:42:34,640
within that rule because let's face it

1122
00:42:34,640 --> 00:42:36,400
our test environment probably has

1123
00:42:36,400 --> 00:42:37,839
slightly different naming conventions

1124
00:42:37,839 --> 00:42:39,359
throughout all aspects

1125
00:42:39,359 --> 00:42:42,319
of that application than our testing

1126
00:42:42,319 --> 00:42:43,760
than our prod especially when we're

1127
00:42:43,760 --> 00:42:44,800
talking about

1128
00:42:44,800 --> 00:42:47,040
the references the different servers

1129
00:42:47,040 --> 00:42:48,880
that each environment is talking to so

1130
00:42:48,880 --> 00:42:50,480
we need to understand

1131
00:42:50,480 --> 00:42:52,480
what changes do we have to make to each

1132
00:42:52,480 --> 00:42:54,000
rule so that we can

1133
00:42:54,000 --> 00:42:56,560
safely deploy to the other environments

1134
00:42:56,560 --> 00:42:58,319
to make sure that

1135
00:42:58,319 --> 00:43:01,680
those exceptions are

1136
00:43:01,680 --> 00:43:05,440
tailored for that specific environment

1137
00:43:05,440 --> 00:43:08,079
do we want to promote and demote a

1138
00:43:08,079 --> 00:43:10,960
single learning suggestion

1139
00:43:10,960 --> 00:43:14,640
or instead do we want to go through and

1140
00:43:14,640 --> 00:43:17,680
promote demote the entire policy between

1141
00:43:17,680 --> 00:43:19,760
environments

1142
00:43:19,760 --> 00:43:22,400
we've already gone through and talked a

1143
00:43:22,400 --> 00:43:24,240
little bit about the parent

1144
00:43:24,240 --> 00:43:27,359
child policies uh the micro policies

1145
00:43:27,359 --> 00:43:28,640
that you can go through and implement

1146
00:43:28,640 --> 00:43:29,760
and i really do think

1147
00:43:29,760 --> 00:43:33,200
that is something that really helped

1148
00:43:33,200 --> 00:43:36,640
us optimize the protection to our web

1149
00:43:36,640 --> 00:43:38,400
application firewalls

1150
00:43:38,400 --> 00:43:41,520
and finally how do we track all of the

1151
00:43:41,520 --> 00:43:41,920
oh

1152
00:43:41,920 --> 00:43:46,880
shoot sorry i've been talking

1153
00:43:50,240 --> 00:43:52,720
so this is what i was talking about in

1154
00:43:52,720 --> 00:43:55,920
terms of the policy pushes

1155
00:43:55,920 --> 00:43:59,200
and how do we track all of this not only

1156
00:43:59,200 --> 00:43:59,760
for

1157
00:43:59,760 --> 00:44:02,800
our sake in troubleshooting but also

1158
00:44:02,800 --> 00:44:05,839
for our internal audit

1159
00:44:05,839 --> 00:44:09,520
with that being said this is the actual

1160
00:44:09,520 --> 00:44:11,680
change script that i used every time

1161
00:44:11,680 --> 00:44:12,880
that i put a

1162
00:44:12,880 --> 00:44:16,160
web application firewall in line so

1163
00:44:16,160 --> 00:44:18,079
at the beginning of the call five

1164
00:44:18,079 --> 00:44:20,079
minutes before the policy you know

1165
00:44:20,079 --> 00:44:23,839
i'd take a roll call go no go

1166
00:44:23,839 --> 00:44:25,680
i then go through and i had a simple

1167
00:44:25,680 --> 00:44:27,119
table like this showing

1168
00:44:27,119 --> 00:44:29,440
what i wanted the networking team to go

1169
00:44:29,440 --> 00:44:33,359
through and change the ip address to

1170
00:44:35,440 --> 00:44:38,160
we would go through wait for the actual

1171
00:44:38,160 --> 00:44:39,599
change to happen

1172
00:44:39,599 --> 00:44:42,319
once it did i would do my testing in

1173
00:44:42,319 --> 00:44:42,720
block

1174
00:44:42,720 --> 00:44:45,599
two we go through we'd modify any

1175
00:44:45,599 --> 00:44:47,839
firewall rules cloud acls to prevent

1176
00:44:47,839 --> 00:44:50,000
laugh bypass in stage three that

1177
00:44:50,000 --> 00:44:52,240
generally be our networking team

1178
00:44:52,240 --> 00:44:55,359
step four was going through and

1179
00:44:55,359 --> 00:44:58,800
actually doing the testing and step five

1180
00:44:58,800 --> 00:45:01,280
was going through and if we did have to

1181
00:45:01,280 --> 00:45:03,599
do a rollback just having documentation

1182
00:45:03,599 --> 00:45:07,359
on that roll back that being said

1183
00:45:07,359 --> 00:45:09,760
i want to thank you very much it was an

1184
00:45:09,760 --> 00:45:11,920
honor to be back and presenting

1185
00:45:11,920 --> 00:45:19,839
in front of you today any questions

1186
00:45:32,000 --> 00:45:35,599
so in my experience

1187
00:45:35,599 --> 00:45:39,440
the detections that we had

1188
00:45:39,440 --> 00:45:43,200
were detected not as a part of this

1189
00:45:43,200 --> 00:45:47,760
actual event well as part of my project

1190
00:45:47,760 --> 00:45:50,800
i always did have a great line to our

1191
00:45:50,800 --> 00:45:53,599
sock so if i did find something we

1192
00:45:53,599 --> 00:45:55,680
definitely had our own incident response

1193
00:45:55,680 --> 00:45:56,319
plan

1194
00:45:56,319 --> 00:45:58,079
ready to rock and roll but i never had

1195
00:45:58,079 --> 00:46:01,839
to pull that trigger

1196
00:46:02,079 --> 00:46:04,880
any other questions

1197
00:46:08,880 --> 00:46:15,839
i could see up here

1198
00:46:16,160 --> 00:46:20,400
okay more questions no

1199
00:46:20,400 --> 00:46:28,680
so michael thank you again

1200
00:46:28,680 --> 00:46:31,680
um

