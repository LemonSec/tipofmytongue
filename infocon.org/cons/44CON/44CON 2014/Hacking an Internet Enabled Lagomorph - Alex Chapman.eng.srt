1
00:00:00,089 --> 00:00:03,419
all right Ronnie guys I think so my name

2
00:00:03,419 --> 00:00:05,279
is Alex chemin and I'm here to talk to

3
00:00:05,279 --> 00:00:06,569
you this morning about hacking an

4
00:00:06,569 --> 00:00:09,599
internet-enabled lagomorph or more

5
00:00:09,599 --> 00:00:13,250
precisely hacking instantly

6
00:00:13,250 --> 00:00:16,440
so Who am I I'm Alex ominous said that

7
00:00:16,440 --> 00:00:17,789
it worked for context information

8
00:00:17,789 --> 00:00:20,730
security vulnerability researcher over

9
00:00:20,730 --> 00:00:23,220
there and newfound interested in

10
00:00:23,220 --> 00:00:26,210
Internet of Things devices

11
00:00:26,269 --> 00:00:30,420
what starting this talk I kind of feel

12
00:00:30,420 --> 00:00:31,830
like I need to put a bit of a disclaimer

13
00:00:31,830 --> 00:00:34,980
on it and I have to explain my situation

14
00:00:34,980 --> 00:00:38,070
so those of you who were in my colleague

15
00:00:38,070 --> 00:00:39,690
Mike Jordans talk this morning he

16
00:00:39,690 --> 00:00:40,739
would've swing to you a little bit about

17
00:00:40,739 --> 00:00:43,500
an event we held internally and I'll

18
00:00:43,500 --> 00:00:46,350
just recap that so when this whole

19
00:00:46,350 --> 00:00:48,480
internet of things kind of thing kicked

20
00:00:48,480 --> 00:00:51,059
off with big big interest in this new

21
00:00:51,059 --> 00:00:54,469
buzzword of basically embedded devices

22
00:00:54,469 --> 00:00:57,000
we thought okay we'll give it a shot

23
00:00:57,000 --> 00:00:59,940
we'll get a little devices together have

24
00:00:59,940 --> 00:01:02,460
an evening all the guys in the office we

25
00:01:02,460 --> 00:01:03,840
got beer we've got pizza we've got

26
00:01:03,840 --> 00:01:06,390
things to hack the stage was set

27
00:01:06,390 --> 00:01:08,490
absolutely perfect so we've got things

28
00:01:08,490 --> 00:01:10,860
like IP cameras light bulbs office

29
00:01:10,860 --> 00:01:16,770
peripherals kids toys and things so as

30
00:01:16,770 --> 00:01:19,380
we go on so we didn't we kind of start

31
00:01:19,380 --> 00:01:22,350
this project off quite well go off from

32
00:01:22,350 --> 00:01:25,170
groups pairs and solo and we we fight

33
00:01:25,170 --> 00:01:27,000
against these devices the evening wears

34
00:01:27,000 --> 00:01:30,299
on and a lot of these devices start to

35
00:01:30,299 --> 00:01:34,799
falter - Tim - the guys Oh or start to

36
00:01:34,799 --> 00:01:37,710
show interest interesting avenues of

37
00:01:37,710 --> 00:01:41,130
attack that can be pursued later on late

38
00:01:41,130 --> 00:01:44,670
in tonight rule at this point we declare

39
00:01:44,670 --> 00:01:46,470
victory majority devices that we've

40
00:01:46,470 --> 00:01:48,390
we've looked at we we have been able to

41
00:01:48,390 --> 00:01:50,670
compromise and you'll see that from some

42
00:01:50,670 --> 00:01:52,590
of our previous work and as I say my my

43
00:01:52,590 --> 00:01:53,670
colleagues thought that was just before

44
00:01:53,670 --> 00:01:57,780
this one and we kind of got together and

45
00:01:57,780 --> 00:02:00,689
we presented the results so we had these

46
00:02:00,689 --> 00:02:02,549
IP cameras okay admittedly this was a

47
00:02:02,549 --> 00:02:03,869
bit of a cheat there were some known

48
00:02:03,869 --> 00:02:06,479
issues in in these devices but the end

49
00:02:06,479 --> 00:02:08,610
of the evening they were thoroughly

50
00:02:08,610 --> 00:02:11,700
hacked so we got one of these internet

51
00:02:11,700 --> 00:02:13,170
enabled light bulbs

52
00:02:13,170 --> 00:02:15,360
you may have seen and by the end of the

53
00:02:15,360 --> 00:02:17,459
evening okay not entirely hacks but we

54
00:02:17,459 --> 00:02:19,110
knew precisely how we were gonna do it

55
00:02:19,110 --> 00:02:21,120
and that it was feasible so I chalk that

56
00:02:21,120 --> 00:02:23,459
one up as a win office peripherals fell

57
00:02:23,459 --> 00:02:26,069
immediately and the printer showed some

58
00:02:26,069 --> 00:02:28,880
really really promising attack services

59
00:02:28,880 --> 00:02:32,220
and the thing I'm about to talk to you

60
00:02:32,220 --> 00:02:38,490
today we didn't manage to hack so I hope

61
00:02:38,490 --> 00:02:40,560
none of you will understand my situation

62
00:02:40,560 --> 00:02:43,890
here how can I let this one device go

63
00:02:43,890 --> 00:02:46,739
this is the one that got away and it's a

64
00:02:46,739 --> 00:02:50,880
kid's toy this talk isn't anything in

65
00:02:50,880 --> 00:02:52,380
cutting edge research or anything like

66
00:02:52,380 --> 00:02:54,630
this is more a group therapy session I

67
00:02:54,630 --> 00:02:58,530
think for myself to kind of talk this

68
00:02:58,530 --> 00:03:00,600
through and and follow through my

69
00:03:00,600 --> 00:03:03,390
madness to the end point where we did

70
00:03:03,390 --> 00:03:05,790
actually nice compromise this so please

71
00:03:05,790 --> 00:03:07,620
bear with me feel free to leave at any

72
00:03:07,620 --> 00:03:09,060
point when I start ranting or throw

73
00:03:09,060 --> 00:03:14,730
things or tell me to get off stage so

74
00:03:14,730 --> 00:03:16,830
introducing carrots I guess this is the

75
00:03:16,830 --> 00:03:20,430
big reveal and here it is

76
00:03:20,430 --> 00:03:25,140
I broke the power spice I've got a bit

77
00:03:25,140 --> 00:03:28,290
of it you stand going on there this is

78
00:03:28,290 --> 00:03:30,780
carrots the smart companion a stylish

79
00:03:30,780 --> 00:03:32,970
community of rabid connected to the

80
00:03:32,970 --> 00:03:33,420
Internet

81
00:03:33,420 --> 00:03:34,950
if you read the marketing material I

82
00:03:34,950 --> 00:03:36,450
mean really that's that's what it is

83
00:03:36,450 --> 00:03:39,390
that I think it was 100 dollars worth of

84
00:03:39,390 --> 00:03:41,190
worth of electronic rabbit there some

85
00:03:41,190 --> 00:03:43,110
money well-spent

86
00:03:43,110 --> 00:03:46,049
but what carrots really is so it's an

87
00:03:46,049 --> 00:03:47,790
ARM based embedded device

88
00:03:47,790 --> 00:03:49,709
it's got Samsung arm 9 processor in

89
00:03:49,709 --> 00:03:53,989
there 2 gigabytes flash memory 512 SDRAM

90
00:03:53,989 --> 00:03:56,340
Wi-Fi obviously and it's a Linux based

91
00:03:56,340 --> 00:03:59,280
infected device despite the conversation

92
00:03:59,280 --> 00:04:00,870
is there I'm fairly sure this rabbit

93
00:04:00,870 --> 00:04:01,799
isn't going to start the Machine

94
00:04:01,799 --> 00:04:04,470
uprising and the apocalypse but bear

95
00:04:04,470 --> 00:04:10,859
with me on that yeah bizarrely I'm not

96
00:04:10,859 --> 00:04:12,150
the first person to try and compromise

97
00:04:12,150 --> 00:04:14,310
this rabbit I was astonished when I

98
00:04:14,310 --> 00:04:17,220
found that out so daniel county of

99
00:04:17,220 --> 00:04:18,209
Trustwave iLabs

100
00:04:18,209 --> 00:04:20,339
has done some prior work on this and i

101
00:04:20,339 --> 00:04:22,740
am thoroughly indebted to him

102
00:04:22,740 --> 00:04:25,169
so if anyone knows him or if you see it

103
00:04:25,169 --> 00:04:26,520
please please let me know

104
00:04:26,520 --> 00:04:29,789
their cities are sound to previous

105
00:04:29,789 --> 00:04:32,699
issues for which he did submit CV useful

106
00:04:32,699 --> 00:04:34,979
I'm not quite that organized but since

107
00:04:34,979 --> 00:04:37,289
Python module hijacking issue and that

108
00:04:37,289 --> 00:04:39,810
is actually quite key I do build on that

109
00:04:39,810 --> 00:04:42,090
so I do genuinely thank him for that and

110
00:04:42,090 --> 00:04:46,229
also for noticing that it doesn't use

111
00:04:46,229 --> 00:04:50,789
SSL important issue but there we are so

112
00:04:50,789 --> 00:04:52,710
that's Simpson prior arch we say I'm

113
00:04:52,710 --> 00:04:56,090
building up on dance research from that

114
00:04:56,090 --> 00:04:59,970
so there's a start with with any new

115
00:04:59,970 --> 00:05:01,979
device kind of looking at me attack so

116
00:05:01,979 --> 00:05:03,750
that's what what we got

117
00:05:03,750 --> 00:05:06,659
so the main issue that then came up with

118
00:05:06,659 --> 00:05:08,819
was a physical attacks you need physical

119
00:05:08,819 --> 00:05:11,630
access to the device to the USB stack

120
00:05:11,630 --> 00:05:15,240
until you have to turn the rabbit on and

121
00:05:15,240 --> 00:05:18,449
off that's great but I kind of prefer

122
00:05:18,449 --> 00:05:20,849
these do these things remotely so I I

123
00:05:20,849 --> 00:05:23,460
took down Neos beer I took out the you

124
00:05:23,460 --> 00:05:25,259
get these little RFID tags as well I

125
00:05:25,259 --> 00:05:27,300
took those out I wasn't that interested

126
00:05:27,300 --> 00:05:29,880
in being that closer to this thing it

127
00:05:29,880 --> 00:05:34,259
scares me so the network based attack

128
00:05:34,259 --> 00:05:35,009
services

129
00:05:35,009 --> 00:05:36,210
so these if you get more than one of

130
00:05:36,210 --> 00:05:39,150
these if you get more than one of these

131
00:05:39,150 --> 00:05:40,440
you can get them to talk to each other

132
00:05:40,440 --> 00:05:42,240
it's fantastic so there's network

133
00:05:42,240 --> 00:05:45,240
protocols between these two devices so

134
00:05:45,240 --> 00:05:46,560
they are actually listening on a couple

135
00:05:46,560 --> 00:05:49,590
of local ports and then the guy does

136
00:05:49,590 --> 00:05:52,289
kind of talk out to various internet

137
00:05:52,289 --> 00:05:54,330
enabled service so most importantly the

138
00:05:54,330 --> 00:05:56,130
carrot server in the backend

139
00:05:56,130 --> 00:05:57,870
there's the text-to-speech engine I was

140
00:05:57,870 --> 00:06:00,780
dying to demonstrate that today but I

141
00:06:00,780 --> 00:06:01,919
haven't been able to get internet set up

142
00:06:01,919 --> 00:06:03,690
and some of my demos are a bit dodgy so

143
00:06:03,690 --> 00:06:05,280
I don't think I'll be able to show you

144
00:06:05,280 --> 00:06:09,690
that one and like any kind of new

145
00:06:09,690 --> 00:06:11,159
startup you can write apps for this

146
00:06:11,159 --> 00:06:13,050
thing so you can write an app that goes

147
00:06:13,050 --> 00:06:15,419
away and read you the the headlines from

148
00:06:15,419 --> 00:06:18,630
BBC News it's a brilliant one and all of

149
00:06:18,630 --> 00:06:20,610
these apps talk to individual servers

150
00:06:20,610 --> 00:06:21,780
out in the internet that other people

151
00:06:21,780 --> 00:06:24,930
own the scary part of that is a lot of

152
00:06:24,930 --> 00:06:26,849
these apps have access to the webcam and

153
00:06:26,849 --> 00:06:28,590
text-to-speech engines and all the rest

154
00:06:28,590 --> 00:06:29,909
of it and they're running on somebody's

155
00:06:29,909 --> 00:06:32,460
home server but we'll ignore that for

156
00:06:32,460 --> 00:06:34,020
the for this point sad I was mainly

157
00:06:34,020 --> 00:06:36,630
interested in the the kind of carrots

158
00:06:36,630 --> 00:06:38,550
that server communication at the top and

159
00:06:38,550 --> 00:06:39,139
then

160
00:06:39,139 --> 00:06:43,069
device-to-device communication and so in

161
00:06:43,069 --> 00:06:45,620
terms of kind of network snack that the

162
00:06:45,620 --> 00:06:48,020
the case is actually listening on to to

163
00:06:48,020 --> 00:06:51,349
TCP ports so six six thousand six

164
00:06:51,349 --> 00:06:53,150
hundred which is running music player

165
00:06:53,150 --> 00:06:56,120
demon and nine one two three which is

166
00:06:56,120 --> 00:06:57,560
actually running the carrots controller

167
00:06:57,560 --> 00:06:59,810
service is called and a little bit more

168
00:06:59,810 --> 00:07:03,499
on those in a little bit right so so

169
00:07:03,499 --> 00:07:05,360
getting started again with I'm starting

170
00:07:05,360 --> 00:07:07,370
at the real start here this is property

171
00:07:07,370 --> 00:07:09,680
legs but first thing I wanted to do was

172
00:07:09,680 --> 00:07:11,210
get hold at the firmware number of ways

173
00:07:11,210 --> 00:07:12,379
of doing this can try and pull off the

174
00:07:12,379 --> 00:07:14,360
chip on the device easiest way just go

175
00:07:14,360 --> 00:07:16,340
download from the from the carrots

176
00:07:16,340 --> 00:07:19,039
website so did that and found that

177
00:07:19,039 --> 00:07:21,319
they're quite cleverly cheaply GPG

178
00:07:21,319 --> 00:07:23,360
encrypted the majority the hard of the

179
00:07:23,360 --> 00:07:25,599
hard drive sort of the hard drive image

180
00:07:25,599 --> 00:07:28,219
so kind of ok bit of a stumbling block

181
00:07:28,219 --> 00:07:29,750
get on to try and get onto the vise

182
00:07:29,750 --> 00:07:31,599
trying to do some clever stuff with it

183
00:07:31,599 --> 00:07:34,819
while I'm there I'll update it and it

184
00:07:34,819 --> 00:07:36,199
turns out it doesn't actually use the

185
00:07:36,199 --> 00:07:37,999
cpg encrypted version of it it just goes

186
00:07:37,999 --> 00:07:40,069
down and those spec downloads an

187
00:07:40,069 --> 00:07:42,830
unencrypted version 2000 so perfect

188
00:07:42,830 --> 00:07:43,159
there

189
00:07:43,159 --> 00:07:46,550
get hold of the firmware and constructor

190
00:07:46,550 --> 00:07:49,520
to tinker around with with it and look

191
00:07:49,520 --> 00:07:52,370
what's going on so this is where we come

192
00:07:52,370 --> 00:07:55,159
up against a kind of typical choice when

193
00:07:55,159 --> 00:07:56,419
we're doing this sort of thing are we

194
00:07:56,419 --> 00:07:57,680
going to try and do on target

195
00:07:57,680 --> 00:07:59,689
vulnerability research or off target

196
00:07:59,689 --> 00:08:02,569
mentality research so a bit of a

197
00:08:02,569 --> 00:08:06,909
catch-22 for on target and they are we

198
00:08:06,909 --> 00:08:09,639
kind of need a way to instrument and to

199
00:08:09,639 --> 00:08:12,349
debug the device before we can

200
00:08:12,349 --> 00:08:15,379
compromise it but being able to get that

201
00:08:15,379 --> 00:08:18,110
we need to be able to compromise it you

202
00:08:18,110 --> 00:08:20,360
see where I'm going with that and so I

203
00:08:20,360 --> 00:08:23,569
thought right okay dan dan calories

204
00:08:23,569 --> 00:08:25,520
burger side I will start with off target

205
00:08:25,520 --> 00:08:28,310
debugging so I will pull off the files

206
00:08:28,310 --> 00:08:30,409
I'm interested from the firmware and and

207
00:08:30,409 --> 00:08:33,078
run it on an external device so what arm

208
00:08:33,078 --> 00:08:35,120
devices that I have lying around the

209
00:08:35,120 --> 00:08:37,789
office that were easily easily extend

210
00:08:37,789 --> 00:08:40,208
what an accessible usable

211
00:08:40,208 --> 00:08:43,370
ra's be fine brilliant brilliant bit of

212
00:08:43,370 --> 00:08:45,529
kit absolutely love it it isn't on

213
00:08:45,529 --> 00:08:47,209
eleven based process of robbing arm nine

214
00:08:47,209 --> 00:08:47,840
but

215
00:08:47,840 --> 00:08:50,600
is binary compatibility with with online

216
00:08:50,600 --> 00:08:53,510
compiled binaries so literally lift and

217
00:08:53,510 --> 00:08:56,030
shift from the carats firmware onto the

218
00:08:56,030 --> 00:08:57,860
Raspberry Pi run it in at rooted

219
00:08:57,860 --> 00:08:59,600
environment and we were good to go

220
00:08:59,600 --> 00:09:02,300
so first target I thought stuck with MPD

221
00:09:02,300 --> 00:09:04,670
it's a music player daemon the

222
00:09:04,670 --> 00:09:06,230
configuration file again lifting shift

223
00:09:06,230 --> 00:09:09,530
from the from the device which very

224
00:09:09,530 --> 00:09:11,120
kindly showed us the default password

225
00:09:11,120 --> 00:09:14,990
which was carrots so with you can

226
00:09:14,990 --> 00:09:15,860
already tell that they've thought about

227
00:09:15,860 --> 00:09:17,000
security when they're doing these things

228
00:09:17,000 --> 00:09:18,590
so I've got full access the music

229
00:09:18,590 --> 00:09:22,820
playing daemon so what do we start so we

230
00:09:22,820 --> 00:09:24,980
start with simple fuzzing

231
00:09:24,980 --> 00:09:27,470
instrumentation against this music

232
00:09:27,470 --> 00:09:30,970
playing so it's version zero 15.0 on the

233
00:09:30,970 --> 00:09:33,050
on the devices so that's the one I'm

234
00:09:33,050 --> 00:09:35,750
using on my Raspberry Pi and I'm fuzzing

235
00:09:35,750 --> 00:09:37,940
it and it falls within seconds and I

236
00:09:37,940 --> 00:09:41,150
mean seconds simple HTTP fuzzing and the

237
00:09:41,150 --> 00:09:42,950
thing falls over and repeatedly falls

238
00:09:42,950 --> 00:09:48,350
over so looking at the summary of the

239
00:09:48,350 --> 00:09:50,990
issue that I found there I did apply for

240
00:09:50,990 --> 00:09:52,300
a CD for this one because it was a

241
00:09:52,300 --> 00:09:54,440
library that some people do it she use

242
00:09:54,440 --> 00:09:56,150
and it turns out that the bug is

243
00:09:56,150 --> 00:09:58,760
actually in this library Lib M&S so this

244
00:09:58,760 --> 00:10:02,750
is for downloading playlists using the

245
00:10:02,750 --> 00:10:07,640
MMS MMS H protocols and this issue

246
00:10:07,640 --> 00:10:09,500
actually allowed full corruption of the

247
00:10:09,500 --> 00:10:13,580
MPD processing so a little bit of an

248
00:10:13,580 --> 00:10:16,820
overview of that of that issue this get

249
00:10:16,820 --> 00:10:18,440
answer function is responsible for

250
00:10:18,440 --> 00:10:21,680
processing HTTP response headers so

251
00:10:21,680 --> 00:10:24,800
we'll kind of run through each of the

252
00:10:24,800 --> 00:10:26,390
headers in turn copy them into another

253
00:10:26,390 --> 00:10:27,800
buffer and then do something else with

254
00:10:27,800 --> 00:10:30,020
them if if it's one it knows about and

255
00:10:30,020 --> 00:10:32,510
has to deal with and the important line

256
00:10:32,510 --> 00:10:35,630
there is highlighted in red it reads a

257
00:10:35,630 --> 00:10:39,170
byte from the from the the input stream

258
00:10:39,170 --> 00:10:45,200
stores it in a in a buffer until we get

259
00:10:45,200 --> 00:10:48,200
to a new line really really basic issue

260
00:10:48,200 --> 00:10:51,080
we're saying here reads a byte is it a

261
00:10:51,080 --> 00:10:53,120
new line no increase the length so it

262
00:10:53,120 --> 00:10:55,880
increased the the counter read another

263
00:10:55,880 --> 00:10:58,370
byte is it a new line no increase the

264
00:10:58,370 --> 00:10:59,780
counter you can see we just flowed

265
00:10:59,780 --> 00:11:01,520
straight off the end of the

266
00:11:01,520 --> 00:11:03,740
no length checking and into the process

267
00:11:03,740 --> 00:11:06,460
see it's a really good really kind of

268
00:11:06,460 --> 00:11:12,170
very typical issue the debuff was stored

269
00:11:12,170 --> 00:11:14,290
in heap memory some purely application

270
00:11:14,290 --> 00:11:17,240
using it and there was very little

271
00:11:17,240 --> 00:11:19,700
interesting data on the heap in fact I

272
00:11:19,700 --> 00:11:21,980
think this buffer was the only thing on

273
00:11:21,980 --> 00:11:24,740
the heat so we don't have any of the

274
00:11:24,740 --> 00:11:27,670
kind of standard ways of exploiting this

275
00:11:27,670 --> 00:11:30,440
there are a few options to manipulate

276
00:11:30,440 --> 00:11:32,150
this the heat layout the only thing we

277
00:11:32,150 --> 00:11:34,190
can do is is download these and mess

278
00:11:34,190 --> 00:11:36,590
files and as far as I'm aware that heap

279
00:11:36,590 --> 00:11:39,260
allocation was using wasn't fundable so

280
00:11:39,260 --> 00:11:41,990
yeah okay an issue but of limited

281
00:11:41,990 --> 00:11:44,330
exploits ability in this in this

282
00:11:44,330 --> 00:11:47,630
instance that was fairly sure while I'm

283
00:11:47,630 --> 00:11:49,790
here a brief note on on disclosure and

284
00:11:49,790 --> 00:11:52,880
remediation so I did report this issue

285
00:11:52,880 --> 00:11:56,320
to the developer of live MMS and

286
00:11:56,320 --> 00:11:58,100
fantastic effort on his part

287
00:11:58,100 --> 00:11:59,600
I turned around a fix and released a new

288
00:11:59,600 --> 00:12:01,850
version within 18 hours of the initial

289
00:12:01,850 --> 00:12:03,830
report that's that's Stella I've not

290
00:12:03,830 --> 00:12:06,350
seen that before so I'd be a quick shout

291
00:12:06,350 --> 00:12:10,490
out to the Lib MMS guys it's a great

292
00:12:10,490 --> 00:12:13,070
first permit fun ability in a in a

293
00:12:13,070 --> 00:12:15,860
shared library and a lot can do with it

294
00:12:15,860 --> 00:12:17,630
at this point I'm sure I could have

295
00:12:17,630 --> 00:12:18,710
invested hours and hours and hours

296
00:12:18,710 --> 00:12:22,100
looking at heap allocators I didn't

297
00:12:22,100 --> 00:12:23,150
really feel like it at this point

298
00:12:23,150 --> 00:12:27,890
so on I go that was where I very quickly

299
00:12:27,890 --> 00:12:30,260
came into the hit a limitation of off

300
00:12:30,260 --> 00:12:36,860
target the R&D bugging so that was

301
00:12:36,860 --> 00:12:38,720
pretty much the entire functionality of

302
00:12:38,720 --> 00:12:41,720
MPD exhausted it's a very small demon

303
00:12:41,720 --> 00:12:45,410
doesn't do very much so Donna wanted to

304
00:12:45,410 --> 00:12:47,390
look at the the next service so so again

305
00:12:47,390 --> 00:12:49,280
lifting shift from the Bacharach's

306
00:12:49,280 --> 00:12:51,440
firmware onto my Raspberry Pi and hit a

307
00:12:51,440 --> 00:12:54,080
snag this thing's looking to talk to

308
00:12:54,080 --> 00:12:57,290
various hardware peripherals for example

309
00:12:57,290 --> 00:13:01,760
the speaker ears it's an important one

310
00:13:01,760 --> 00:13:03,590
the years other things like that and if

311
00:13:03,590 --> 00:13:05,450
it can't access them it just craps out

312
00:13:05,450 --> 00:13:09,260
it just dies there and then so I've got

313
00:13:09,260 --> 00:13:10,850
a choice of trying to patch up these

314
00:13:10,850 --> 00:13:13,160
binaries so they work without without

315
00:13:13,160 --> 00:13:14,420
the peripherals or

316
00:13:14,420 --> 00:13:18,300
give in and and build on on some

317
00:13:18,300 --> 00:13:20,580
previous research to get and on a

318
00:13:20,580 --> 00:13:24,960
non-target debugging environment so yet

319
00:13:24,960 --> 00:13:27,300
really really thanks to Dan thank

320
00:13:27,300 --> 00:13:30,210
Crowley I did use his book to get a

321
00:13:30,210 --> 00:13:34,560
non-target debugging environment I

322
00:13:34,560 --> 00:13:37,680
pretty much said all that to me oh it's

323
00:13:37,680 --> 00:13:41,250
so the one key point of this so Dan's

324
00:13:41,250 --> 00:13:43,380
burg did allow us to get code execution

325
00:13:43,380 --> 00:13:45,029
and I'll cover how that happened in a

326
00:13:45,029 --> 00:13:48,300
second what I wanted to do was put my

327
00:13:48,300 --> 00:13:50,160
own firmware on that so you look at the

328
00:13:50,160 --> 00:13:51,839
firmware update scripts how they work

329
00:13:51,839 --> 00:13:55,589
and get rid of most of the kind of

330
00:13:55,589 --> 00:13:57,990
sideline stuff there's really two key

331
00:13:57,990 --> 00:13:59,820
functions were these flash arrays all

332
00:13:59,820 --> 00:14:00,960
and Nan right

333
00:14:00,960 --> 00:14:03,990
built-in commands so all I need to do is

334
00:14:03,990 --> 00:14:06,960
call flash arrays all what the flash and

335
00:14:06,960 --> 00:14:08,279
then rewrite it with my own firmware

336
00:14:08,279 --> 00:14:12,510
fantastic so Dan's books so this is the

337
00:14:12,510 --> 00:14:14,279
Python module hijacking book so Stephen

338
00:14:14,279 --> 00:14:19,650
you 2013 4 8 6 7 for those who don't

339
00:14:19,650 --> 00:14:22,320
know python module hijacking is very

340
00:14:22,320 --> 00:14:24,510
similar to dll planting or path

341
00:14:24,510 --> 00:14:28,110
poisoning on on NIC systems so when

342
00:14:28,110 --> 00:14:30,270
importing a module from from a Python

343
00:14:30,270 --> 00:14:32,130
script if it's not a standard module

344
00:14:32,130 --> 00:14:35,070
it'll look through there is an array of

345
00:14:35,070 --> 00:14:37,260
paths to try and find the module for the

346
00:14:37,260 --> 00:14:39,150
first path it checks is the current

347
00:14:39,150 --> 00:14:42,240
directory so this is not great security

348
00:14:42,240 --> 00:14:46,080
from from the Python guys but and it has

349
00:14:46,080 --> 00:14:47,460
found use in actually quite a few

350
00:14:47,460 --> 00:14:49,589
exploits overly recently and this is one

351
00:14:49,589 --> 00:14:52,260
Dan pointed out last year so in order to

352
00:14:52,260 --> 00:14:53,940
run code on this device all you need to

353
00:14:53,940 --> 00:14:58,589
do stick it on the USB stick with with a

354
00:14:58,589 --> 00:15:05,520
name of simple JSON py so the the update

355
00:15:05,520 --> 00:15:07,560
script tries to import simple JSON you

356
00:15:07,560 --> 00:15:09,480
provide your own implementation of

357
00:15:09,480 --> 00:15:11,190
simple JSON which does what you want and

358
00:15:11,190 --> 00:15:14,130
then then exit out so the script is a

359
00:15:14,130 --> 00:15:17,010
very simple actually added some some

360
00:15:17,010 --> 00:15:19,470
external debugging so as soon as it

361
00:15:19,470 --> 00:15:23,089
loads runs an mp3 it raises the flash

362
00:15:23,089 --> 00:15:25,950
puts my modified firmware on the device

363
00:15:25,950 --> 00:15:28,100
and then place the mp3 again so I know

364
00:15:28,100 --> 00:15:31,759
done and my firmware update really quite

365
00:15:31,759 --> 00:15:32,810
simple

366
00:15:32,810 --> 00:15:35,089
add a new user to each new password and

367
00:15:35,089 --> 00:15:35,870
enable telnet

368
00:15:35,870 --> 00:15:38,120
that's that's all I need from there I

369
00:15:38,120 --> 00:15:40,000
can I can do everything else I want

370
00:15:40,000 --> 00:15:42,649
using a little trick here that a lot of

371
00:15:42,649 --> 00:15:44,329
Linux disturbance would probably have me

372
00:15:44,329 --> 00:15:47,660
beheaded for but the CTX user I added

373
00:15:47,660 --> 00:15:50,000
with you a date GID zero so adding

374
00:15:50,000 --> 00:15:52,430
another root user rather than we

375
00:15:52,430 --> 00:15:54,500
changing the password of the of the root

376
00:15:54,500 --> 00:15:57,230
user just leave things a little bit

377
00:15:57,230 --> 00:15:58,579
neater in terms of modifying the

378
00:15:58,579 --> 00:16:01,810
filesystem but not really great practice

379
00:16:01,810 --> 00:16:03,380
so success

380
00:16:03,380 --> 00:16:05,720
I can now login to mine to my carriage

381
00:16:05,720 --> 00:16:07,759
so via tell me they had this very

382
00:16:07,759 --> 00:16:13,130
interesting image motd script that runs

383
00:16:13,130 --> 00:16:14,930
when you log in so they it looks like at

384
00:16:14,930 --> 00:16:15,949
one point we're actually expecting

385
00:16:15,949 --> 00:16:17,839
people to log in or they did this for

386
00:16:17,839 --> 00:16:19,670
their own own purposes when they were

387
00:16:19,670 --> 00:16:22,490
doing the development it's a great I'm

388
00:16:22,490 --> 00:16:24,230
on the device I can run my own code I

389
00:16:24,230 --> 00:16:29,180
can start to debug and and run services

390
00:16:29,180 --> 00:16:30,880
on the device with the correct hardware

391
00:16:30,880 --> 00:16:35,029
absolutely perfect except it doesn't the

392
00:16:35,029 --> 00:16:36,620
device doesn't ship with any debugging

393
00:16:36,620 --> 00:16:38,810
tools why would you it's a kid's toy why

394
00:16:38,810 --> 00:16:40,490
would you have GDB GDB server on there

395
00:16:40,490 --> 00:16:42,319
so we've got a cross compile all of

396
00:16:42,319 --> 00:16:45,230
these compilations absolute pain in the

397
00:16:45,230 --> 00:16:48,500
ass and this is actually the first time

398
00:16:48,500 --> 00:16:50,810
I came across builder fantastic project

399
00:16:50,810 --> 00:16:52,819
if you're ever working with any any ARM

400
00:16:52,819 --> 00:16:55,910
arm kit build root is fantastic unless

401
00:16:55,910 --> 00:16:57,769
you build a cross compilation tool chain

402
00:16:57,769 --> 00:17:01,430
on x86 or ever your your normal OS is in

403
00:17:01,430 --> 00:17:02,750
order to be able to compile all the

404
00:17:02,750 --> 00:17:04,970
useful tools and it will just with a

405
00:17:04,970 --> 00:17:08,780
couple clicks of a make script compile

406
00:17:08,780 --> 00:17:11,780
GDB GDB server estrellas pretty much all

407
00:17:11,780 --> 00:17:13,760
the debugging tools you need so that the

408
00:17:13,760 --> 00:17:15,409
right architecture build all of that and

409
00:17:15,409 --> 00:17:17,750
i think an hour and 20 minutes later

410
00:17:17,750 --> 00:17:20,059
after compilation I had my my debugging

411
00:17:20,059 --> 00:17:24,939
tool Shane there's absolutely perfect

412
00:17:25,209 --> 00:17:28,250
I'm on the device I've got my debugging

413
00:17:28,250 --> 00:17:31,159
tools now what I won't want to do so

414
00:17:31,159 --> 00:17:33,530
this is where we I want to start looking

415
00:17:33,530 --> 00:17:36,169
at this couch controller service don't

416
00:17:36,169 --> 00:17:37,880
start this is the the service that's

417
00:17:37,880 --> 00:17:39,890
responsible for communicating with the

418
00:17:39,890 --> 00:17:41,010
backend carrots

419
00:17:41,010 --> 00:17:43,470
and they're peer-to-peer rabbet

420
00:17:43,470 --> 00:17:46,169
communication protocol not entirely sure

421
00:17:46,169 --> 00:17:47,460
what they call it but that's what I've

422
00:17:47,460 --> 00:17:51,330
called it and again as noted in previous

423
00:17:51,330 --> 00:17:53,070
research all of this happens without any

424
00:17:53,070 --> 00:17:55,049
encryption so that's another barrier

425
00:17:55,049 --> 00:17:59,880
down first thing I want to do and I

426
00:17:59,880 --> 00:18:02,400
always like to do when I'm doing VR on

427
00:18:02,400 --> 00:18:03,809
on these sorts of devices try and remove

428
00:18:03,809 --> 00:18:07,530
any third-party servers nothing worse

429
00:18:07,530 --> 00:18:09,630
than having an application or a device

430
00:18:09,630 --> 00:18:11,250
crash and then it's in the crash log

431
00:18:11,250 --> 00:18:12,630
outs of it to the developers

432
00:18:12,630 --> 00:18:14,490
straightaway before you had a chance to

433
00:18:14,490 --> 00:18:15,630
look at it and I should do anything with

434
00:18:15,630 --> 00:18:18,480
it so first thing when it's do was

435
00:18:18,480 --> 00:18:20,790
remove the dependency on the carrot

436
00:18:20,790 --> 00:18:23,880
server starting to look into the why

437
00:18:23,880 --> 00:18:27,740
shop captures of the communication and a

438
00:18:27,740 --> 00:18:30,330
frustrating couple of hours of trying to

439
00:18:30,330 --> 00:18:31,799
identify what the protocol was and I

440
00:18:31,799 --> 00:18:33,090
find out they're actually using Google

441
00:18:33,090 --> 00:18:36,480
protocol buffers as the underlying

442
00:18:36,480 --> 00:18:38,790
protocol communication so communication

443
00:18:38,790 --> 00:18:42,799
protocol so Google protocol buffers is

444
00:18:42,799 --> 00:18:45,000
Google's language language neutral

445
00:18:45,000 --> 00:18:47,100
platform neutral extensible mechanism

446
00:18:47,100 --> 00:18:49,799
for serializing structured data it's a

447
00:18:49,799 --> 00:18:52,650
very simple way of parsing sorry passing

448
00:18:52,650 --> 00:18:55,559
data on a low-level protocol the

449
00:18:55,559 --> 00:18:58,770
specification is very good and gives you

450
00:18:58,770 --> 00:19:00,419
all the information you need but as a

451
00:19:00,419 --> 00:19:02,820
quick example so it's a simple tag

452
00:19:02,820 --> 00:19:05,130
length based protocol you say what the

453
00:19:05,130 --> 00:19:07,940
data packet is and how long it is and

454
00:19:07,940 --> 00:19:11,070
then it's interpreted from there to

455
00:19:11,070 --> 00:19:12,330
build one of these you provide it with a

456
00:19:12,330 --> 00:19:14,220
specification which is the bottom left

457
00:19:14,220 --> 00:19:20,880
and the data you want to be to be sent

458
00:19:20,880 --> 00:19:22,590
which right there

459
00:19:22,590 --> 00:19:25,650
it's then combined into an intermediate

460
00:19:25,650 --> 00:19:30,179
representation and then this is the

461
00:19:30,179 --> 00:19:33,000
resulting data you would actually see on

462
00:19:33,000 --> 00:19:34,950
the wire and then obviously the reverse

463
00:19:34,950 --> 00:19:36,600
process can happen the other end it

464
00:19:36,600 --> 00:19:38,820
looks at the specification pulls the

465
00:19:38,820 --> 00:19:42,690
data back and decodes it all we are at a

466
00:19:42,690 --> 00:19:44,010
slight disadvantage ship because we

467
00:19:44,010 --> 00:19:45,320
don't actually have this specification

468
00:19:45,320 --> 00:19:48,450
no sorry it's gonna be head of myself to

469
00:19:48,450 --> 00:19:50,580
do this I did use James as Kenneth it's

470
00:19:50,580 --> 00:19:52,620
also those of you who went to Jim's

471
00:19:52,620 --> 00:19:55,029
workshop yesterday be very

472
00:19:55,029 --> 00:19:57,159
and it did help out a lot so thanks

473
00:19:57,159 --> 00:19:59,370
James

474
00:19:59,460 --> 00:20:02,830
one of the huge issues reversing this

475
00:20:02,830 --> 00:20:04,389
process is we don't have all the all the

476
00:20:04,389 --> 00:20:06,549
information that we require and protocol

477
00:20:06,549 --> 00:20:07,779
buffers is actually reverse and

478
00:20:07,779 --> 00:20:11,440
non-deterministic so given an amount of

479
00:20:11,440 --> 00:20:14,559
data on the wire we can estimate what it

480
00:20:14,559 --> 00:20:16,840
would have looked like based on the

481
00:20:16,840 --> 00:20:18,549
specification but there are some edge

482
00:20:18,549 --> 00:20:22,809
cases so consider the following approach

483
00:20:22,809 --> 00:20:25,389
piece of data that we identify on the

484
00:20:25,389 --> 00:20:28,929
wire so it looks like that we decoded it

485
00:20:28,929 --> 00:20:31,419
into its tag format which can actually

486
00:20:31,419 --> 00:20:34,330
be decoded in two separate both valid

487
00:20:34,330 --> 00:20:35,799
ways and then if we take that one step

488
00:20:35,799 --> 00:20:38,230
further we could end up with either of

489
00:20:38,230 --> 00:20:42,010
these two original packets so we could

490
00:20:42,010 --> 00:20:44,130
have an unknown message with a nested

491
00:20:44,130 --> 00:20:47,230
message inside or we can have a unknown

492
00:20:47,230 --> 00:20:48,429
message with just a string inside

493
00:20:48,429 --> 00:20:53,440
obviously looking at it and analyzing it

494
00:20:53,440 --> 00:20:55,600
in person we can see it probably meant

495
00:20:55,600 --> 00:20:56,950
to be the top one rather than the bottom

496
00:20:56,950 --> 00:20:58,630
one but it's actually quite difficult to

497
00:20:58,630 --> 00:21:00,519
to script that up so there are some edge

498
00:21:00,519 --> 00:21:02,769
cases when reversing Google protocol

499
00:21:02,769 --> 00:21:05,080
buffers but we can make a pretty good

500
00:21:05,080 --> 00:21:06,159
estimate of what it should have looked

501
00:21:06,159 --> 00:21:08,399
like

502
00:21:08,970 --> 00:21:11,919
so then worked out what protocol

503
00:21:11,919 --> 00:21:14,139
excusing what it's doing said about

504
00:21:14,139 --> 00:21:15,549
trying to move the the third party

505
00:21:15,549 --> 00:21:17,049
server and I so there's a number of

506
00:21:17,049 --> 00:21:20,049
reasons for doing that and actually one

507
00:21:20,049 --> 00:21:21,760
of the main ones was this really

508
00:21:21,760 --> 00:21:25,179
unreliable so just as I'm trying to get

509
00:21:25,179 --> 00:21:27,250
started with all of this their servers

510
00:21:27,250 --> 00:21:29,080
go down I can't talk to the device

511
00:21:29,080 --> 00:21:30,700
because it won't open up ports if it

512
00:21:30,700 --> 00:21:33,220
can't talk to the server a really big

513
00:21:33,220 --> 00:21:35,460
hassle so let's try and get rid of that

514
00:21:35,460 --> 00:21:40,000
so analysis of protocol shows it gives

515
00:21:40,000 --> 00:21:42,399
simple hello message registers the

516
00:21:42,399 --> 00:21:43,899
application then it's the applications

517
00:21:43,899 --> 00:21:45,940
that it's got on their choice configure

518
00:21:45,940 --> 00:21:47,559
its time zone and then it's just a

519
00:21:47,559 --> 00:21:53,080
consistent ping pong and quite usefully

520
00:21:53,080 --> 00:21:54,460
for us actually ignores most the

521
00:21:54,460 --> 00:21:56,950
responses which is which is brilliant so

522
00:21:56,950 --> 00:21:59,440
really simple to set up an offline

523
00:21:59,440 --> 00:22:02,860
server and hopefully it's the start of

524
00:22:02,860 --> 00:22:04,210
my demos and the start of where thing is

525
00:22:04,210 --> 00:22:07,159
going to go wrong so let's see if we can

526
00:22:07,159 --> 00:22:11,220
show that right no that's not the right

527
00:22:11,220 --> 00:22:20,039
one right so top window here with any

528
00:22:20,039 --> 00:22:21,770
luck for turn this guy on

529
00:22:21,770 --> 00:22:30,779
it's moving when he loads up yep you're

530
00:22:30,779 --> 00:22:33,630
starting it will pull out further all

531
00:22:33,630 --> 00:22:35,460
the various services services it

532
00:22:35,460 --> 00:22:37,080
requires but this is the only important

533
00:22:37,080 --> 00:22:43,080
one so that the yeah okay the carrots

534
00:22:43,080 --> 00:22:45,299
back-end server just realize this takes

535
00:22:45,299 --> 00:22:46,770
a little while so probably should have

536
00:22:46,770 --> 00:22:53,490
started this before I'll come back to

537
00:22:53,490 --> 00:22:54,390
that when he's actually doing something

538
00:22:54,390 --> 00:22:56,929
interesting

539
00:23:04,330 --> 00:23:06,890
there's what got me interested in this

540
00:23:06,890 --> 00:23:08,630
project in this very song right so here

541
00:23:08,630 --> 00:23:10,370
we go so you can see he's sent his hello

542
00:23:10,370 --> 00:23:11,060
message out

543
00:23:11,060 --> 00:23:13,910
registering his applications and then

544
00:23:13,910 --> 00:23:16,360
just starts the pink on process so

545
00:23:16,360 --> 00:23:18,620
without replicating that server I

546
00:23:18,620 --> 00:23:20,120
wouldn't be able to demonstrate any of

547
00:23:20,120 --> 00:23:22,670
these or any of this in this room

548
00:23:22,670 --> 00:23:24,290
because I haven't set up internet access

549
00:23:24,290 --> 00:23:26,510
but with that I can do this entirely

550
00:23:26,510 --> 00:23:28,970
offline and wherever I am you get weird

551
00:23:28,970 --> 00:23:30,650
looks if you start trying to hack this

552
00:23:30,650 --> 00:23:31,940
thing on the train by the way I've done

553
00:23:31,940 --> 00:23:34,280
it it's people stop and stare and then

554
00:23:34,280 --> 00:23:39,200
call the guard great so I've got rid of

555
00:23:39,200 --> 00:23:41,240
the requirement of the server that

556
00:23:41,240 --> 00:23:45,830
you're not seeing that anymore sorry

557
00:23:45,830 --> 00:23:47,030
about a point doesn't like me switching

558
00:23:47,030 --> 00:23:56,630
between screens yeah great so got to a

559
00:23:56,630 --> 00:23:58,730
point where I can do offline VR in it

560
00:23:58,730 --> 00:24:04,310
and crack on so starting to look at the

561
00:24:04,310 --> 00:24:06,970
the peer-to-peer protocols and just

562
00:24:06,970 --> 00:24:09,740
throwing messages at it really there's

563
00:24:09,740 --> 00:24:12,350
some really nice debugging and it gets

564
00:24:12,350 --> 00:24:14,030
put out to the console which tells you

565
00:24:14,030 --> 00:24:17,210
the contents of the decoded message run

566
00:24:17,210 --> 00:24:19,070
through all of that start to build up a

567
00:24:19,070 --> 00:24:20,840
view of what the protocol should look

568
00:24:20,840 --> 00:24:21,050
like

569
00:24:21,050 --> 00:24:25,040
and what it requires once you've got a

570
00:24:25,040 --> 00:24:27,110
basic overview of the protocol sending

571
00:24:27,110 --> 00:24:29,930
it long strings of A's is always a good

572
00:24:29,930 --> 00:24:32,210
thing to do so this is the first thing

573
00:24:32,210 --> 00:24:35,240
so this is a login packet so I still

574
00:24:35,240 --> 00:24:36,500
authenticate to device because device

575
00:24:36,500 --> 00:24:38,090
does require authentication before we

576
00:24:38,090 --> 00:24:40,010
can do anything so again they have

577
00:24:40,010 --> 00:24:43,520
thought about security it works on a

578
00:24:43,520 --> 00:24:44,780
session based authentication that I'll

579
00:24:44,780 --> 00:24:49,310
cover cover shortly so if a connecting

580
00:24:49,310 --> 00:24:51,380
client sends it a session with lots of

581
00:24:51,380 --> 00:24:53,900
A's again we had a nice heap corruption

582
00:24:53,900 --> 00:24:55,220
it's brilliant this is better than the

583
00:24:55,220 --> 00:24:58,610
first seed production we had I'm tired

584
00:24:58,610 --> 00:25:01,940
of pipe corruptions I'm not willing to

585
00:25:01,940 --> 00:25:04,250
spend the time to try and necessarily

586
00:25:04,250 --> 00:25:05,900
get it in the right right way then

587
00:25:05,900 --> 00:25:08,440
reduce the shell code then

588
00:25:08,440 --> 00:25:11,270
gets complicated and night I was fairly

589
00:25:11,270 --> 00:25:13,250
sure it was unnecessary I'd found this

590
00:25:13,250 --> 00:25:15,440
one within seconds I figured there would

591
00:25:15,440 --> 00:25:16,970
be more bugs and probably more easily

592
00:25:16,970 --> 00:25:22,340
exploitable bugs so the one key thing it

593
00:25:22,340 --> 00:25:23,539
didn't let me do was crash the character

594
00:25:23,539 --> 00:25:26,450
server which actually will say in in the

595
00:25:26,450 --> 00:25:28,100
next next couple of bugs did come in

596
00:25:28,100 --> 00:25:33,200
real handy so then keep going keep going

597
00:25:33,200 --> 00:25:35,090
sending other types of messages all the

598
00:25:35,090 --> 00:25:37,070
rest of it various things are happening

599
00:25:37,070 --> 00:25:39,770
and then I figure right okay I don't

600
00:25:39,770 --> 00:25:41,299
really understand what's going on so

601
00:25:41,299 --> 00:25:43,760
I'll actually start didn't actually stop

602
00:25:43,760 --> 00:25:45,710
reversing and debugging the the

603
00:25:45,710 --> 00:25:47,720
application on done attacking I'm a bit

604
00:25:47,720 --> 00:25:49,549
lazy I'll do that after the initial

605
00:25:49,549 --> 00:25:54,049
fuzzing so come across the

606
00:25:54,049 --> 00:25:55,399
authentication routines because that's

607
00:25:55,399 --> 00:25:57,260
where you get a start try and pull that

608
00:25:57,260 --> 00:25:59,360
apart right I'll just cover off quite

609
00:25:59,360 --> 00:26:00,950
how carrots does of syndication is

610
00:26:00,950 --> 00:26:02,809
really quite complicated so hold on to

611
00:26:02,809 --> 00:26:06,590
your seats carrot so she has a mobile

612
00:26:06,590 --> 00:26:08,210
app which I forgot to mention earlier so

613
00:26:08,210 --> 00:26:11,179
you can actually kind of play music from

614
00:26:11,179 --> 00:26:13,370
it view the webcam get the speech stuff

615
00:26:13,370 --> 00:26:16,789
from your mobile in order for the mobile

616
00:26:16,789 --> 00:26:19,279
device to authenticate to the to the

617
00:26:19,279 --> 00:26:20,600
carrots at first talks to the carrots

618
00:26:20,600 --> 00:26:22,279
back in server since username and

619
00:26:22,279 --> 00:26:27,549
password the backend server then sends a

620
00:26:27,549 --> 00:26:30,140
session ID so this interactive ID down

621
00:26:30,140 --> 00:26:32,510
to the device and back down to the phone

622
00:26:32,510 --> 00:26:34,460
and then the phone uses that as a shared

623
00:26:34,460 --> 00:26:37,179
secret with the with the carrots device

624
00:26:37,179 --> 00:26:41,480
it's fantastic so there's the

625
00:26:41,480 --> 00:26:42,830
authentication function the carrots is

626
00:26:42,830 --> 00:26:44,570
very simple it literally just compares

627
00:26:44,570 --> 00:26:48,980
the received interactive ID with the one

628
00:26:48,980 --> 00:26:50,899
it's got stored if they match your

629
00:26:50,899 --> 00:26:54,760
authenticated if they don't you're not

630
00:26:55,090 --> 00:26:57,470
however as soon as you start the device

631
00:26:57,470 --> 00:27:00,830
someone a fresh group the interactive ID

632
00:27:00,830 --> 00:27:05,090
is set to the empty string you know see

633
00:27:05,090 --> 00:27:06,860
a problem in this the authentication

634
00:27:06,860 --> 00:27:08,750
function checks if the string you send

635
00:27:08,750 --> 00:27:11,440
it is equal to the one it's got stored

636
00:27:11,440 --> 00:27:14,880
it's currently storing the empty string

637
00:27:14,880 --> 00:27:17,320
does the empty string equal the empty

638
00:27:17,320 --> 00:27:20,350
string yes fortunately it does so as

639
00:27:20,350 --> 00:27:23,620
soon as this device starts up or as soon

640
00:27:23,620 --> 00:27:26,830
as the controller starts up the session

641
00:27:26,830 --> 00:27:31,480
ID is set to the empty string can we

642
00:27:31,480 --> 00:27:34,120
restart the service so that at any point

643
00:27:34,120 --> 00:27:35,950
we know the session ID is going to be

644
00:27:35,950 --> 00:27:37,300
empty string yes we can crash the

645
00:27:37,300 --> 00:27:39,520
service we've already proved that so at

646
00:27:39,520 --> 00:27:41,170
this point I can now authenticate to the

647
00:27:41,170 --> 00:27:43,750
device using the empty string as long as

648
00:27:43,750 --> 00:27:45,550
it's only just booted if it's not crash

649
00:27:45,550 --> 00:27:47,800
it the service boots up and I can

650
00:27:47,800 --> 00:27:51,880
authenticate great so it's time for I

651
00:27:51,880 --> 00:27:53,500
mean this this is the main demo of the

652
00:27:53,500 --> 00:27:55,060
talk if this doesn't impress you please

653
00:27:55,060 --> 00:27:59,350
please just leave so this gives me

654
00:27:59,350 --> 00:28:01,320
access to a lot of functionality on the

655
00:28:01,320 --> 00:28:09,700
on the device and unauthenticated oh

656
00:28:09,700 --> 00:28:14,610
wait if I could type right

657
00:28:19,720 --> 00:28:22,960
it's alright

658
00:28:28,010 --> 00:28:31,610
you see that I no offense k2d wearing it

659
00:28:31,610 --> 00:28:37,160
wiggling everyone at that point I

660
00:28:37,160 --> 00:28:38,540
thought my job was done I was just gonna

661
00:28:38,540 --> 00:28:40,010
go home but somebody said that wasn't

662
00:28:40,010 --> 00:28:45,049
enough how is that not enough one I was

663
00:28:45,049 --> 00:28:46,100
playing with earlier that was trying to

664
00:28:46,100 --> 00:28:48,380
get working I'm not sure if it will work

665
00:28:48,380 --> 00:28:56,030
let's see no it was too much of an ask

666
00:28:56,030 --> 00:28:58,610
you can't get it to play music and as a

667
00:28:58,610 --> 00:29:00,590
text-to-speech engine that's always

668
00:29:00,590 --> 00:29:02,030
quite a fun one you just sit on people's

669
00:29:02,030 --> 00:29:03,830
desk and have it cursing it than the

670
00:29:03,830 --> 00:29:07,429
entire day look great so I can actually

671
00:29:07,429 --> 00:29:10,580
now start to do things for this device

672
00:29:10,580 --> 00:29:12,350
that again I probably could have done

673
00:29:12,350 --> 00:29:13,460
from my mobile what can do it

674
00:29:13,460 --> 00:29:17,600
unauthenticated and you can make it move

675
00:29:17,600 --> 00:29:20,780
its ears which believe it or not never

676
00:29:20,780 --> 00:29:23,110
gets old

677
00:29:25,120 --> 00:29:31,880
I'm gonna have this problem again great

678
00:29:31,880 --> 00:29:35,270
so why was that actually important in

679
00:29:35,270 --> 00:29:37,040
the long run why was that really good

680
00:29:37,040 --> 00:29:39,230
for me so I've now got a much bigger

681
00:29:39,230 --> 00:29:41,419
attack surface so originally I had this

682
00:29:41,419 --> 00:29:44,840
authentication packet and that was it

683
00:29:44,840 --> 00:29:46,460
that was my limitation but now I've got

684
00:29:46,460 --> 00:29:49,190
everything but beyond that so so this

685
00:29:49,190 --> 00:29:52,070
thing doesn't have stupidly vast amount

686
00:29:52,070 --> 00:29:53,540
of functionality but key ones are

687
00:29:53,540 --> 00:29:55,730
playing audio files okay how well are

688
00:29:55,730 --> 00:29:59,360
its audio library is implemented you can

689
00:29:59,360 --> 00:30:00,980
do you've got this kind of standard

690
00:30:00,980 --> 00:30:03,679
reading from the microphone taking

691
00:30:03,679 --> 00:30:05,450
pictures from the camera and you can see

692
00:30:05,450 --> 00:30:06,590
that's why there's tape actually

693
00:30:06,590 --> 00:30:08,540
microphone in the camera because it was

694
00:30:08,540 --> 00:30:12,169
scaring me is obviously you've got the

695
00:30:12,169 --> 00:30:15,410
ears you've got a lot of a lot more

696
00:30:15,410 --> 00:30:19,370
attack surface to play on so this is one

697
00:30:19,370 --> 00:30:21,500
start to actually look what what was the

698
00:30:21,500 --> 00:30:23,299
functionality of these what was doing

699
00:30:23,299 --> 00:30:25,010
this what was responsible for the

700
00:30:25,010 --> 00:30:26,929
playing audio what was responsible for

701
00:30:26,929 --> 00:30:29,770
capturing the video all the rest of it

702
00:30:29,770 --> 00:30:32,510
turns out looking through through the

703
00:30:32,510 --> 00:30:34,850
firmware image they're using music

704
00:30:34,850 --> 00:30:36,679
player diamond so no sorry the other one

705
00:30:36,679 --> 00:30:40,070
in player and employers

706
00:30:40,070 --> 00:30:42,860
standard music and video player for

707
00:30:42,860 --> 00:30:45,710
Linux and actually handing off to that

708
00:30:45,710 --> 00:30:47,650
to do any of the playing of music

709
00:30:47,650 --> 00:30:49,850
happens to record system I thought

710
00:30:49,850 --> 00:30:51,740
brilliant there's no way they're gonna

711
00:30:51,740 --> 00:30:54,500
have done their arguments properly I can

712
00:30:54,500 --> 00:30:55,610
definitely break out of that and run

713
00:30:55,610 --> 00:30:58,520
whatever I want and I think in fact I'm

714
00:30:58,520 --> 00:31:00,770
certain it's only by accident that it's

715
00:31:00,770 --> 00:31:04,730
not vulnerable which which was a huge

716
00:31:04,730 --> 00:31:08,150
shame but turns out they are using a

717
00:31:08,150 --> 00:31:09,350
slightly older version of em player

718
00:31:09,350 --> 00:31:10,990
which has known vulnerabilities

719
00:31:10,990 --> 00:31:13,520
fantastic it's not finding my own O'Day

720
00:31:13,520 --> 00:31:15,230
in it but if we can get code execution I

721
00:31:15,230 --> 00:31:17,570
am more than happy I can go home and I

722
00:31:17,570 --> 00:31:19,490
can leave this carrot alone this carrots

723
00:31:19,490 --> 00:31:22,520
alone carrot so fun durability number

724
00:31:22,520 --> 00:31:25,610
four and player remote file overwrite so

725
00:31:25,610 --> 00:31:29,000
this is I say no nobility advisor

726
00:31:29,000 --> 00:31:32,780
released September last year very little

727
00:31:32,780 --> 00:31:35,240
public information available and no

728
00:31:35,240 --> 00:31:39,260
public exploits unfortunately the and

729
00:31:39,260 --> 00:31:42,020
the advisories are very kind of very

730
00:31:42,020 --> 00:31:43,430
short and don't fly very much

731
00:31:43,430 --> 00:31:45,470
information so mplayer contains a floor

732
00:31:45,470 --> 00:31:47,180
that may allow a malicious remote server

733
00:31:47,180 --> 00:31:48,470
to overwrite the file on the victim

734
00:31:48,470 --> 00:31:50,870
system sounds pretty good to me but

735
00:31:50,870 --> 00:31:53,770
doesn't tell me how to do it and similar

736
00:31:53,770 --> 00:31:56,660
similar other advisories it wasn't until

737
00:31:56,660 --> 00:31:58,910
about three days ago I looked a little

738
00:31:58,910 --> 00:32:00,260
bit further and found one with a bit

739
00:32:00,260 --> 00:32:02,510
more information but still not quite

740
00:32:02,510 --> 00:32:06,680
enough to do it fine next way so what do

741
00:32:06,680 --> 00:32:08,540
we do and play is open source so we use

742
00:32:08,540 --> 00:32:11,300
the sauce grab version 1.1 grab version

743
00:32:11,300 --> 00:32:15,170
1.1 point one which has the fix diff

744
00:32:15,170 --> 00:32:18,650
them and we should in theory fine find

745
00:32:18,650 --> 00:32:20,950
the problem so that's what we'll do here

746
00:32:20,950 --> 00:32:23,750
turns out the major differences we're in

747
00:32:23,750 --> 00:32:25,750
this sx parser function

748
00:32:25,750 --> 00:32:29,750
version 1.1 they're version one point

749
00:32:29,750 --> 00:32:32,030
one point one there they had a big

750
00:32:32,030 --> 00:32:33,500
message saying support for specifying

751
00:32:33,500 --> 00:32:34,760
parameters and playlists has been

752
00:32:34,760 --> 00:32:36,320
disabled and the comment out the

753
00:32:36,320 --> 00:32:38,540
function so what this function actually

754
00:32:38,540 --> 00:32:40,340
does and this is brilliant from the guys

755
00:32:40,340 --> 00:32:42,710
who did this it allows a playlist to

756
00:32:42,710 --> 00:32:45,650
specify the command line functions that

757
00:32:45,650 --> 00:32:49,220
should have been passed to M player so

758
00:32:49,220 --> 00:32:50,510
you download a playlist

759
00:32:50,510 --> 00:32:52,530
it specifies parameters that

760
00:32:52,530 --> 00:32:55,470
change how Empire runs basically it's

761
00:32:55,470 --> 00:32:58,530
brilliant functionality so to exploit it

762
00:32:58,530 --> 00:33:01,140
we have a look at man mplet and believe

763
00:33:01,140 --> 00:33:03,419
me man in plays pages pages pages long

764
00:33:03,419 --> 00:33:06,169
but we do find two very interesting

765
00:33:06,169 --> 00:33:10,919
variables dump file and dump stream so

766
00:33:10,919 --> 00:33:12,480
dump stream tells em player to save

767
00:33:12,480 --> 00:33:15,330
whatever stream it receives to the to

768
00:33:15,330 --> 00:33:17,760
the hard drive and dump file tells you

769
00:33:17,760 --> 00:33:20,640
tells it where to save it to fantastic

770
00:33:20,640 --> 00:33:23,039
and bear in mind all of this is running

771
00:33:23,039 --> 00:33:28,049
as routes as well issue so we can

772
00:33:28,049 --> 00:33:30,179
actually now start to overwrite pretty

773
00:33:30,179 --> 00:33:34,409
much any file on the system and that's

774
00:33:34,409 --> 00:33:36,030
all it takes to do it so we give it this

775
00:33:36,030 --> 00:33:37,440
playlist file we'll tell it to play this

776
00:33:37,440 --> 00:33:39,299
playlist file that has these two

777
00:33:39,299 --> 00:33:41,820
parameters in dump stream dump file

778
00:33:41,820 --> 00:33:44,190
it's a dump stream to set to true let's

779
00:33:44,190 --> 00:33:46,650
dump what we download dump it to here

780
00:33:46,650 --> 00:33:47,909
and then we just download something

781
00:33:47,909 --> 00:33:50,549
that's whatever we want to run so we can

782
00:33:50,549 --> 00:33:51,630
actually just download an arbitrary

783
00:33:51,630 --> 00:33:53,580
binary and put it anywhere on the file

784
00:33:53,580 --> 00:33:54,000
system

785
00:33:54,000 --> 00:33:56,970
I say anywhere on the fastest and we we

786
00:33:56,970 --> 00:34:00,419
do have one or two limitations as with

787
00:34:00,419 --> 00:34:04,289
all the Linux you can't over run so you

788
00:34:04,289 --> 00:34:06,200
can't override a running process binary

789
00:34:06,200 --> 00:34:09,000
so some of my ideas for doing it there

790
00:34:09,000 --> 00:34:11,699
were went straight out the window route

791
00:34:11,699 --> 00:34:13,889
isn't mounted read-only so there were

792
00:34:13,889 --> 00:34:15,780
only three directories that were read

793
00:34:15,780 --> 00:34:20,399
right so carrots user bar so ideally I

794
00:34:20,399 --> 00:34:21,629
need to overwrite something in one of

795
00:34:21,629 --> 00:34:24,659
those excuse me with the binary that

796
00:34:24,659 --> 00:34:27,540
will then get run next time oh that I

797
00:34:27,540 --> 00:34:32,820
can I can make get run so several

798
00:34:32,820 --> 00:34:34,830
options do overwrite something in each

799
00:34:34,830 --> 00:34:37,560
CC because that was stored under one of

800
00:34:37,560 --> 00:34:39,899
those sub directories okay might require

801
00:34:39,899 --> 00:34:42,629
a reboot to start over right shared

802
00:34:42,629 --> 00:34:46,139
library okay yeah can be done overwrite

803
00:34:46,139 --> 00:34:48,899
a carrot specific daemon I'm lazy I went

804
00:34:48,899 --> 00:34:51,030
the last choice it was just seemed

805
00:34:51,030 --> 00:34:54,570
easiest to me at the time so putting it

806
00:34:54,570 --> 00:34:57,780
all together right so to bring this to

807
00:34:57,780 --> 00:35:00,210
an end to end code execution

808
00:35:00,210 --> 00:35:03,950
Thunder ability or exploit we need to

809
00:35:03,950 --> 00:35:07,380
crash the controller service to reset

810
00:35:07,380 --> 00:35:09,569
the interactive ID parameter use the

811
00:35:09,569 --> 00:35:11,940
authentication bypass to start in player

812
00:35:11,940 --> 00:35:15,869
to load our malicious playlist overwrite

813
00:35:15,869 --> 00:35:17,430
a module which is then loaded by the

814
00:35:17,430 --> 00:35:19,410
controller service when the controller

815
00:35:19,410 --> 00:35:21,720
service starts and crash the controller

816
00:35:21,720 --> 00:35:24,630
service again so it then runs our binary

817
00:35:24,630 --> 00:35:26,430
bit of a chain there chaining a couple

818
00:35:26,430 --> 00:35:30,089
of issues together but hopefully it'll

819
00:35:30,089 --> 00:35:32,520
work I say hopefully it will work let's

820
00:35:32,520 --> 00:35:36,079
see if like denies will do it

821
00:35:45,090 --> 00:35:49,980
I think see brilliant yep so looks like

822
00:35:49,980 --> 00:35:51,450
in this case that has done it so we

823
00:35:51,450 --> 00:35:54,510
crashed the service initially reset the

824
00:35:54,510 --> 00:35:58,830
interactive ID to to null login tell

825
00:35:58,830 --> 00:36:01,380
it's play our or malicious playlist it

826
00:36:01,380 --> 00:36:04,440
downloads the shell saves it it then we

827
00:36:04,440 --> 00:36:06,600
then we recast the service and it loads

828
00:36:06,600 --> 00:36:17,090
our shell so hopefully I say oops

829
00:36:17,090 --> 00:36:20,630
talking in front of lots of people

830
00:36:28,430 --> 00:36:31,200
so there we go that's kind of the

831
00:36:31,200 --> 00:36:33,450
combination of far too many months of my

832
00:36:33,450 --> 00:36:38,040
life but it wouldn't be right not to get

833
00:36:38,040 --> 00:36:45,560
that far Oh far too far too far back

834
00:36:48,220 --> 00:36:53,500
so trying to find that place so what so

835
00:36:53,500 --> 00:36:57,280
the final tally so ended up with two

836
00:36:57,280 --> 00:36:58,630
vulnerabilities and Social City native

837
00:36:58,630 --> 00:37:03,430
libraries and applications okay so one

838
00:37:03,430 --> 00:37:05,950
of them was already known but one on

839
00:37:05,950 --> 00:37:07,599
that previously unknown vulnerability in

840
00:37:07,599 --> 00:37:10,329
live MLS at least three vulnerabilities

841
00:37:10,329 --> 00:37:11,920
in the carats controller there were

842
00:37:11,920 --> 00:37:13,210
probably one or two more there that I

843
00:37:13,210 --> 00:37:17,109
didn't didn't investigate but we did get

844
00:37:17,109 --> 00:37:19,960
we did get our desired outcome but to be

845
00:37:19,960 --> 00:37:21,400
honest it wasn't really about the

846
00:37:21,400 --> 00:37:23,470
outcome it was proving that the rabbit

847
00:37:23,470 --> 00:37:26,770
couldn't beat me and my ego is that

848
00:37:26,770 --> 00:37:30,700
fragile I mean some of you may be very

849
00:37:30,700 --> 00:37:31,720
concerned about the research I'm

850
00:37:31,720 --> 00:37:33,910
presenting here if you have one of these

851
00:37:33,910 --> 00:37:37,720
devices I do have several what can you

852
00:37:37,720 --> 00:37:40,630
do so obviously in reported these issues

853
00:37:40,630 --> 00:37:42,220
to the vendor of the vendor has been

854
00:37:42,220 --> 00:37:46,599
particularly non-responsive they in

855
00:37:46,599 --> 00:37:48,579
response to one of my disclosures they

856
00:37:48,579 --> 00:37:49,480
sent me an email saying we're

857
00:37:49,480 --> 00:37:51,130
apologizing sorry we apologize our

858
00:37:51,130 --> 00:37:53,290
servers have been unavailable though we

859
00:37:53,290 --> 00:37:58,750
fix soon not the question I asked so

860
00:37:58,750 --> 00:38:00,849
they appear to be kind of concerned with

861
00:38:00,849 --> 00:38:03,190
availability at uh nomen the devices

862
00:38:03,190 --> 00:38:04,839
bits no longer we solve believe me I

863
00:38:04,839 --> 00:38:07,150
tried to buy a third and I couldn't know

864
00:38:07,150 --> 00:38:09,550
about everywhere I was on eBay for quite

865
00:38:09,550 --> 00:38:12,670
a while trying to get one but the

866
00:38:12,670 --> 00:38:15,010
servers are offline quite often I'm

867
00:38:15,010 --> 00:38:16,359
starting to think this is abandoned

868
00:38:16,359 --> 00:38:18,550
where so if you do have one of these

869
00:38:18,550 --> 00:38:21,460
please do fire wallet if you can update

870
00:38:21,460 --> 00:38:25,030
and play all the rest of it and

871
00:38:25,030 --> 00:38:26,140
implement your own server because

872
00:38:26,140 --> 00:38:30,720
there's go down all the time but then

873
00:38:30,720 --> 00:38:33,369
again this wasn't about the end outcome

874
00:38:33,369 --> 00:38:35,050
it was about the process it was about

875
00:38:35,050 --> 00:38:37,930
learning a bit more before this I'd not

876
00:38:37,930 --> 00:38:39,730
done much arm reverse engineering I was

877
00:38:39,730 --> 00:38:41,920
mostly x86 there's another another

878
00:38:41,920 --> 00:38:44,020
chance to get involved and get my hands

879
00:38:44,020 --> 00:38:47,560
dirty with when with this type of VR and

880
00:38:47,560 --> 00:38:50,609
re kind of thing

881
00:38:50,609 --> 00:38:52,810
hacking toys can be fun hacking most

882
00:38:52,810 --> 00:38:54,220
things can be fun but the toys are

883
00:38:54,220 --> 00:38:56,710
actually a really good place to start

884
00:38:56,710 --> 00:38:59,020
security is often an afterthought they

885
00:38:59,020 --> 00:39:01,190
obviously had considered it in some

886
00:39:01,190 --> 00:39:05,960
bizarre ways on this device but not

887
00:39:05,960 --> 00:39:08,690
adequately and just because somebody's

888
00:39:08,690 --> 00:39:09,859
looks a bit before doesn't mean there

889
00:39:09,859 --> 00:39:12,619
aren't more vulnerabilities defined so

890
00:39:12,619 --> 00:39:15,740
Dan Cowley of say spy labs he'd looked

891
00:39:15,740 --> 00:39:18,020
at this he'd he'd done some research on

892
00:39:18,020 --> 00:39:20,270
this and he'd got it to the point he

893
00:39:20,270 --> 00:39:22,160
needed that and that wasn't satisfactory

894
00:39:22,160 --> 00:39:25,790
for me took it one step further if any

895
00:39:25,790 --> 00:39:27,230
wants to pick up the baton from me

896
00:39:27,230 --> 00:39:30,500
please do I'm sick of bhakti for this

897
00:39:30,500 --> 00:39:33,950
thing and I think that's about all I've

898
00:39:33,950 --> 00:39:35,180
got for you so if there are any

899
00:39:35,180 --> 00:39:37,849
questions please feel free to shout them

900
00:39:37,849 --> 00:39:39,440
out or come come see me afterwards

901
00:39:39,440 --> 00:39:41,270
feeling lots to see it is move again

902
00:39:41,270 --> 00:39:42,970
then I can do that too

903
00:39:42,970 --> 00:39:45,940
thank you

904
00:39:45,940 --> 00:39:51,099
[Applause]

