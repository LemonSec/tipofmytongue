1
00:00:00,350 --> 00:00:08,700
our story began in 1974 when news of a

2
00:00:06,210 --> 00:00:13,590
tragedy reached Norwegian law engineer

3
00:00:08,700 --> 00:00:15,989
tourists on this American singer tiny

4
00:00:13,590 --> 00:00:19,830
scientist have been attempt by an

5
00:00:15,990 --> 00:00:22,800
intruder in her hotel room torn couldn't

6
00:00:19,830 --> 00:00:26,310
believe that dissonant chin resolved

7
00:00:22,800 --> 00:00:29,130
they were in them to invent a system

8
00:00:26,310 --> 00:00:33,420
that will provide a unique key for every

9
00:00:29,130 --> 00:00:36,780
hotel guests his adventure was think

10
00:00:33,420 --> 00:00:40,469
hard and changed the whole block

11
00:00:36,780 --> 00:00:42,690
industry for decades to come

12
00:00:40,469 --> 00:00:45,750
hotel guests all over the world can

13
00:00:42,690 --> 00:00:49,140
finally feel safe and secure when they

14
00:00:45,750 --> 00:00:51,090
arrived at their destinations the

15
00:00:49,140 --> 00:00:55,110
Cardell safe has been in the industry

16
00:00:51,090 --> 00:00:55,790
pioneer and world leading brand for 40

17
00:00:55,110 --> 00:01:02,499
years

18
00:00:55,790 --> 00:01:02,498
[Music]

19
00:01:17,560 --> 00:01:35,860
[Applause]

20
00:01:18,060 --> 00:01:38,390
[Music]

21
00:01:35,860 --> 00:01:43,070
we couldn't think of any way to make it

22
00:01:38,390 --> 00:01:45,500
more dramatic so this system called ASSA

23
00:01:43,070 --> 00:01:49,250
ABLOY vision is deployed in more than

24
00:01:45,500 --> 00:01:53,720
150 countries over 42,000 facilities and

25
00:01:49,250 --> 00:01:56,060
it's protecting millions of dog those we

26
00:01:53,720 --> 00:01:59,150
don't know exactly which brands are

27
00:01:56,060 --> 00:02:03,190
affected but according to establish own

28
00:01:59,150 --> 00:02:07,490
pages at least these chains are using

29
00:02:03,190 --> 00:02:10,130
these brands to protect their facilities

30
00:02:07,490 --> 00:02:14,090
or if you're a more visually inclined

31
00:02:10,130 --> 00:02:19,130
it's protecting places like these days

32
00:02:14,090 --> 00:02:23,300
and also these kind of things out there

33
00:02:19,130 --> 00:02:26,120
on the sea we are the Penn and Teller

34
00:02:23,300 --> 00:02:28,130
of InfoSec except that we are not rich

35
00:02:26,120 --> 00:02:34,250
famous of funny and the short cry

36
00:02:28,130 --> 00:02:36,170
actually talks right demo moving on so

37
00:02:34,250 --> 00:02:38,750
we both work for f-secure which is a

38
00:02:36,170 --> 00:02:42,170
Finnish cybersecurity company and we do

39
00:02:38,750 --> 00:02:44,900
consultancy there so the story goes back

40
00:02:42,170 --> 00:02:47,089
to 2003 when we were attending an

41
00:02:44,900 --> 00:02:48,560
invite-only hacker conference in Berlin

42
00:02:47,090 --> 00:02:51,350
Germany called ph-neutral

43
00:02:48,560 --> 00:02:53,780
and once we got back to our hotel we

44
00:02:51,350 --> 00:02:55,970
noticed that one of our friend's laptop

45
00:02:53,780 --> 00:03:00,140
had been stolen from his locked hotel

46
00:02:55,970 --> 00:03:01,910
room we immediately notified the hotel

47
00:03:00,140 --> 00:03:04,309
staff but they didn't really take us

48
00:03:01,910 --> 00:03:06,920
seriously and today we still can't

49
00:03:04,310 --> 00:03:13,070
figure out why because we were like

50
00:03:06,920 --> 00:03:15,140
really anyways so we boldly decided to

51
00:03:13,070 --> 00:03:15,620
go where gender neutral has never gone

52
00:03:15,140 --> 00:03:18,410
before

53
00:03:15,620 --> 00:03:20,840
and I'm sorry wanted to have a look if

54
00:03:18,410 --> 00:03:23,120
there is anything about this great

55
00:03:20,840 --> 00:03:24,680
system called a subway vision at the

56
00:03:23,120 --> 00:03:29,330
time called wink or vision

57
00:03:24,680 --> 00:03:35,810
so a quick AltaVista search returns zero

58
00:03:29,330 --> 00:03:39,650
hits so challenge accepted that I mean

59
00:03:35,810 --> 00:03:42,840
if you're new into hotel locking systems

60
00:03:39,650 --> 00:03:46,890
you need to start with building

61
00:03:42,840 --> 00:03:50,790
an attack tree so most people seem to

62
00:03:46,890 --> 00:03:54,059
think that all these doors are connected

63
00:03:50,790 --> 00:03:58,350
to someplace but 95% of the market is

64
00:03:54,060 --> 00:04:01,130
actually brain being are using passive

65
00:03:58,350 --> 00:04:03,960
doors which means that a typical door or

66
00:04:01,130 --> 00:04:06,660
electronic lock only has a battery real

67
00:04:03,960 --> 00:04:09,120
time clock and some rudimentary logic

68
00:04:06,660 --> 00:04:11,790
behind it so these are completely

69
00:04:09,120 --> 00:04:15,360
standalone so in order to build an

70
00:04:11,790 --> 00:04:17,760
attack tree there are a few options so

71
00:04:15,360 --> 00:04:21,570
you can go after the mechanical lock you

72
00:04:17,760 --> 00:04:27,060
can go after the electronic lock access

73
00:04:21,570 --> 00:04:31,200
tokens and the backend system and we did

74
00:04:27,060 --> 00:04:33,150
exactly that so first you need to

75
00:04:31,200 --> 00:04:35,700
understand the target a little bit

76
00:04:33,150 --> 00:04:39,239
better the only thing we had was this it

77
00:04:35,700 --> 00:04:42,210
was a magstripe card that was being used

78
00:04:39,240 --> 00:04:44,940
to open those doors so we went to their

79
00:04:42,210 --> 00:04:47,940
website this is how things looked back

80
00:04:44,940 --> 00:04:50,490
then and started hacking and by hacking

81
00:04:47,940 --> 00:04:52,020
we mean browsing through FTP service

82
00:04:50,490 --> 00:04:56,040
because that's how you used your hack

83
00:04:52,020 --> 00:05:01,580
pac-man and after finding these things

84
00:04:56,040 --> 00:05:06,300
from their open FTP server decided to

85
00:05:01,580 --> 00:05:08,510
look so one thing that most people seem

86
00:05:06,300 --> 00:05:10,830
to neglect is looking at patterns

87
00:05:08,510 --> 00:05:15,539
especially if you're looking anything

88
00:05:10,830 --> 00:05:19,169
that is not reason patterns contain tons

89
00:05:15,540 --> 00:05:21,000
of use useful information so you can

90
00:05:19,169 --> 00:05:22,710
actually have a pretty solid

91
00:05:21,000 --> 00:05:24,570
understanding just by looking at the

92
00:05:22,710 --> 00:05:28,380
patterns how these things work

93
00:05:24,570 --> 00:05:30,540
and you can find some useful fields so

94
00:05:28,380 --> 00:05:33,570
you can kind of understand what's stored

95
00:05:30,540 --> 00:05:35,970
in the access token and it contains

96
00:05:33,570 --> 00:05:38,070
useful pieces of information like I

97
00:05:35,970 --> 00:05:42,810
guess many of you know major malfunction

98
00:05:38,070 --> 00:05:44,760
he did do some work on mac stripes and

99
00:05:42,810 --> 00:05:46,650
most probably was reading the best

100
00:05:44,760 --> 00:05:48,360
midstream to the wrong direction because

101
00:05:46,650 --> 00:05:50,570
it's actually read when you take the car

102
00:05:48,360 --> 00:05:52,580
out it's five times more accurate

103
00:05:50,570 --> 00:05:55,820
cravings Adam

104
00:05:52,580 --> 00:06:00,140
so the first thing that we tried was

105
00:05:55,820 --> 00:06:01,790
bypassing the mechanical part if you

106
00:06:00,140 --> 00:06:04,820
want to bypass the mechanical lock

107
00:06:01,790 --> 00:06:06,590
obviously you're gonna need a lock and

108
00:06:04,820 --> 00:06:11,330
what's better than a lock is two locks

109
00:06:06,590 --> 00:06:14,270
so we got two on ebay and the first one

110
00:06:11,330 --> 00:06:18,020
that one we dismantled we wanted to see

111
00:06:14,270 --> 00:06:20,180
how it's built we didn't find any kind

112
00:06:18,020 --> 00:06:22,700
of flaws in how the lock is designed or

113
00:06:20,180 --> 00:06:24,830
built so what we did what we decided to

114
00:06:22,700 --> 00:06:28,000
do with the second one was to try to

115
00:06:24,830 --> 00:06:32,419
somehow open it without leaving any

116
00:06:28,000 --> 00:06:35,200
physical marks we tried things like

117
00:06:32,420 --> 00:06:38,690
using powerful magnets to open the lock

118
00:06:35,200 --> 00:06:40,880
no lock we also tried heating the lock

119
00:06:38,690 --> 00:06:43,060
with a rubber hammer now remember we

120
00:06:40,880 --> 00:06:45,320
didn't want to leave any physical traces

121
00:06:43,060 --> 00:06:51,710
again no lock

122
00:06:45,320 --> 00:06:53,750
so these this path failed later we

123
00:06:51,710 --> 00:06:55,640
learned from our Dutch friends that if

124
00:06:53,750 --> 00:07:00,050
you want to bypass the mechanical lock

125
00:06:55,640 --> 00:07:04,370
all you need is 15 seconds and equip

126
00:07:00,050 --> 00:07:07,550
equipment that cost maybe one pound the

127
00:07:04,370 --> 00:07:11,360
way you do it is you get a coat hanger

128
00:07:07,550 --> 00:07:14,210
or a thick piece of metal wire you slide

129
00:07:11,360 --> 00:07:17,750
it under the door then you turn it up

130
00:07:14,210 --> 00:07:21,739
and then you pull the handle from the

131
00:07:17,750 --> 00:07:24,890
inside in a minute you're gonna see the

132
00:07:21,740 --> 00:07:28,580
same thing from the inside of the hotel

133
00:07:24,890 --> 00:07:38,810
room so again first you slide it under

134
00:07:28,580 --> 00:07:43,498
the door then you lift it up you pull

135
00:07:38,810 --> 00:07:46,469
the handle and that's it

136
00:07:43,499 --> 00:07:49,469
like I said 15 seconds less than 1 pound

137
00:07:46,469 --> 00:07:51,330
pretty nice now if you want to protect

138
00:07:49,469 --> 00:07:53,489
yourself against this attack what you

139
00:07:51,330 --> 00:07:55,649
can do is you can place a towel between

140
00:07:53,489 --> 00:07:58,948
the handle and the door and that will

141
00:07:55,649 --> 00:08:01,439
prevent this attack but obviously we

142
00:07:58,949 --> 00:08:03,779
needed a better plan so we decided to

143
00:08:01,439 --> 00:08:07,649
look at bypassing the electronic lock

144
00:08:03,779 --> 00:08:08,519
instead and here we got off to a really

145
00:08:07,649 --> 00:08:11,189
good start

146
00:08:08,519 --> 00:08:13,919
like Tommy already mentioned on those

147
00:08:11,189 --> 00:08:17,069
FTP sites we had found a piece of

148
00:08:13,919 --> 00:08:19,349
software called vision lock link and

149
00:08:17,069 --> 00:08:23,610
lock link is the software that you use

150
00:08:19,349 --> 00:08:25,739
to reprogram the locks and that's a

151
00:08:23,610 --> 00:08:28,289
pretty cool capability to have if you

152
00:08:25,739 --> 00:08:31,169
want to run the software but then you

153
00:08:28,289 --> 00:08:32,879
need it a device like combat I packed

154
00:08:31,169 --> 00:08:34,588
one of those handheld computers that you

155
00:08:32,879 --> 00:08:37,919
see in the photo so we got one of those

156
00:08:34,589 --> 00:08:39,509
and we got the software running we were

157
00:08:37,919 --> 00:08:43,860
able to analyze how the software works

158
00:08:39,509 --> 00:08:46,980
and quite quickly we learned that all

159
00:08:43,860 --> 00:08:49,620
the interesting stuff happens in a piece

160
00:08:46,980 --> 00:08:52,380
of hardware not in the software and that

161
00:08:49,620 --> 00:08:56,519
piece of hardware is called the contact

162
00:08:52,380 --> 00:08:59,160
card that's the device number five that

163
00:08:56,519 --> 00:09:01,680
you see in the photo the way the device

164
00:08:59,160 --> 00:09:04,199
works is that you connect it to the

165
00:09:01,680 --> 00:09:06,930
compact I pack and then the other end

166
00:09:04,199 --> 00:09:09,959
the one using the photo you insert that

167
00:09:06,930 --> 00:09:12,569
into the lock just like you do with a

168
00:09:09,959 --> 00:09:15,089
magstripe key card and that's how you

169
00:09:12,569 --> 00:09:18,630
program the lock and all the interesting

170
00:09:15,089 --> 00:09:24,540
stuff happens in that smuggling in that

171
00:09:18,630 --> 00:09:27,180
contact card hardware now the sad thing

172
00:09:24,540 --> 00:09:30,269
was that we couldn't get our hands on

173
00:09:27,180 --> 00:09:32,880
one of those we couldn't get it anywhere

174
00:09:30,269 --> 00:09:37,139
so we weren't able to analyze how that

175
00:09:32,880 --> 00:09:39,629
conduct cart really works the bright

176
00:09:37,139 --> 00:09:42,389
side of things in a way is that later we

177
00:09:39,629 --> 00:09:45,689
learned that this approach would have

178
00:09:42,389 --> 00:09:50,040
worked the way we learned about it isn't

179
00:09:45,689 --> 00:09:52,709
really that funny because in 2010 we

180
00:09:50,040 --> 00:09:55,860
learned about the assassination of Hamas

181
00:09:52,709 --> 00:09:59,089
officer mark our motto

182
00:09:55,860 --> 00:10:05,130
he was killed in his hotel room in Dubai

183
00:09:59,089 --> 00:10:07,350
allegedly by Mossad and the Dubai police

184
00:10:05,130 --> 00:10:10,130
report says that the way the killers

185
00:10:07,350 --> 00:10:12,959
were able to get into hotel room was by

186
00:10:10,130 --> 00:10:16,800
reprogramming the lock using the lock

187
00:10:12,959 --> 00:10:20,250
link software now if you want to get

188
00:10:16,800 --> 00:10:22,560
into a hotel room this isn't the best

189
00:10:20,250 --> 00:10:26,790
way to do it at least not the most

190
00:10:22,560 --> 00:10:29,729
elegant one for two reasons firstly if

191
00:10:26,790 --> 00:10:33,089
you reprogram the lock there will be a

192
00:10:29,730 --> 00:10:36,930
trace you can later to detect that yes

193
00:10:33,089 --> 00:10:39,329
the lock was reprogrammed secondly what

194
00:10:36,930 --> 00:10:39,810
if you want to get into multiple hotel

195
00:10:39,329 --> 00:10:42,300
rooms

196
00:10:39,810 --> 00:10:45,029
then you need to reprogram all the locks

197
00:10:42,300 --> 00:10:51,779
so we decided that we need a more

198
00:10:45,029 --> 00:10:54,870
elegant plan so what was left was more

199
00:10:51,779 --> 00:10:57,269
or less the access tokens themselves so

200
00:10:54,870 --> 00:10:58,740
here the success criteria would be first

201
00:10:57,269 --> 00:11:02,310
of all to clone an access token which

202
00:10:58,740 --> 00:11:04,140
should be easy to do produce an access

203
00:11:02,310 --> 00:11:06,660
token with more privileges so for

204
00:11:04,140 --> 00:11:08,939
example if I were to impersonate Timo I

205
00:11:06,660 --> 00:11:10,620
would be able to do that or create the

206
00:11:08,940 --> 00:11:15,089
master key so that you would have access

207
00:11:10,620 --> 00:11:17,880
to the whole facility so we came up with

208
00:11:15,089 --> 00:11:18,600
the plan first understand max fraud well

209
00:11:17,880 --> 00:11:22,140
that's easy

210
00:11:18,600 --> 00:11:25,649
it's you store some stuff there it's

211
00:11:22,140 --> 00:11:28,769
usually it consists of three different

212
00:11:25,649 --> 00:11:30,600
tracks or if you're from Japan you might

213
00:11:28,769 --> 00:11:34,589
have a fourth track on the front side of

214
00:11:30,600 --> 00:11:36,449
the court unfortunately well yeah this

215
00:11:34,589 --> 00:11:38,310
is how it looks like typically you have

216
00:11:36,449 --> 00:11:40,319
a start Sentinel you have some data you

217
00:11:38,310 --> 00:11:43,920
have an Sentinel and some sort of a

218
00:11:40,320 --> 00:11:46,860
checksum unfortunately in win courts

219
00:11:43,920 --> 00:11:48,990
case all the data was on track three

220
00:11:46,860 --> 00:11:52,560
subtract three and it was completely

221
00:11:48,990 --> 00:11:54,420
custom so none of this stuff the all the

222
00:11:52,560 --> 00:11:57,540
standards everything that's kind of

223
00:11:54,420 --> 00:12:01,769
useless so then you need to have an

224
00:11:57,540 --> 00:12:04,140
encoder decoder so we'd used this there

225
00:12:01,769 --> 00:12:05,970
is this German going does that does this

226
00:12:04,140 --> 00:12:09,209
beautiful piece of hardware called mac

227
00:12:05,970 --> 00:12:13,230
stripe mak mak stripe

228
00:12:09,209 --> 00:12:15,359
and it's completely passive meaning that

229
00:12:13,230 --> 00:12:17,699
most of the encoders decoders they do

230
00:12:15,360 --> 00:12:19,829
their work on a hardware level this

231
00:12:17,699 --> 00:12:22,109
doesn't do any encoding decoding on a

232
00:12:19,829 --> 00:12:25,109
hardware level instead you're using this

233
00:12:22,110 --> 00:12:26,850
piece of software that shows you here on

234
00:12:25,110 --> 00:12:29,399
the upper right-hand corner you see the

235
00:12:26,850 --> 00:12:32,790
swipe speed in the middle part you see

236
00:12:29,399 --> 00:12:34,470
the modulation and then for example here

237
00:12:32,790 --> 00:12:38,009
in the lower right-hand corner you can

238
00:12:34,470 --> 00:12:40,110
see how many times that card has been

239
00:12:38,009 --> 00:12:43,579
used for example here you can use it

240
00:12:40,110 --> 00:12:46,619
it's you can see that it's been reused

241
00:12:43,579 --> 00:12:50,339
you can this this middle part here is

242
00:12:46,619 --> 00:12:53,069
super useful because many of the copy

243
00:12:50,339 --> 00:12:56,819
protection schemes on max trap cards

244
00:12:53,069 --> 00:12:58,949
actually use double modulation so the

245
00:12:56,819 --> 00:13:01,050
first part of the stripe might contain

246
00:12:58,949 --> 00:13:02,969
one type of modulation and the second

247
00:13:01,050 --> 00:13:05,160
part will use a different one but with

248
00:13:02,970 --> 00:13:07,709
this type of hardware you can analyze

249
00:13:05,160 --> 00:13:09,868
and make a copy of it so if you need to

250
00:13:07,709 --> 00:13:13,888
have a few parking cards this is the way

251
00:13:09,869 --> 00:13:17,220
to go the next thing was to get hotel

252
00:13:13,889 --> 00:13:19,470
cards and buy hotel cards we mean plenty

253
00:13:17,220 --> 00:13:23,279
of hotel cards like hundreds and

254
00:13:19,470 --> 00:13:27,119
thousands and so on so so that you have

255
00:13:23,279 --> 00:13:29,459
enough stuff for the analysis part of

256
00:13:27,119 --> 00:13:31,019
this project luckily we have friends in

257
00:13:29,459 --> 00:13:32,609
low places and great things to meet

258
00:13:31,019 --> 00:13:34,920
correspondent who travels like two

259
00:13:32,610 --> 00:13:43,379
hundred and fifty days per year and he

260
00:13:34,920 --> 00:13:45,299
has he has provided us then you need to

261
00:13:43,379 --> 00:13:49,290
reverse engineer the data on these

262
00:13:45,299 --> 00:13:54,149
tracks it looks like this and it's

263
00:13:49,290 --> 00:13:56,969
obvious that you can so you can you

264
00:13:54,149 --> 00:13:59,549
might you might be able to deduce

265
00:13:56,970 --> 00:14:00,779
something out of it and we've been very

266
00:13:59,549 --> 00:14:02,579
very successful

267
00:14:00,779 --> 00:14:06,389
owning other hotel locks with this

268
00:14:02,579 --> 00:14:06,959
approach but it didn't work in this case

269
00:14:06,389 --> 00:14:10,470
at all

270
00:14:06,959 --> 00:14:15,359
so we failed and at this point we just

271
00:14:10,470 --> 00:14:17,490
needed a plan so the new plan was that

272
00:14:15,360 --> 00:14:20,510
we need to acquire the vision software

273
00:14:17,490 --> 00:14:22,339
and then reverse engineer the

274
00:14:20,510 --> 00:14:24,829
and come up with clever techniques

275
00:14:22,339 --> 00:14:27,769
luckily we have internet so you google

276
00:14:24,829 --> 00:14:32,420
it and you find the software and then

277
00:14:27,769 --> 00:14:37,040
you reverse engineer it and really work

278
00:14:32,420 --> 00:14:39,800
that well because it's a really really

279
00:14:37,040 --> 00:14:44,680
complex piece of software so we had to

280
00:14:39,800 --> 00:14:48,469
do some reading about 500 plus pages and

281
00:14:44,680 --> 00:14:52,250
then understand how it works so we drew

282
00:14:48,470 --> 00:14:54,649
this map a small mind map when the Asolo

283
00:14:52,250 --> 00:14:56,329
guys saw they said they told us that we

284
00:14:54,649 --> 00:15:00,769
have a better documentation of their

285
00:14:56,329 --> 00:15:03,319
system than they do so first we took a

286
00:15:00,769 --> 00:15:05,240
look at some use cases if you click on

287
00:15:03,320 --> 00:15:07,550
any of those use cases you will have

288
00:15:05,240 --> 00:15:12,980
more information about how it's supposed

289
00:15:07,550 --> 00:15:14,689
to work also we took a look at how what

290
00:15:12,980 --> 00:15:17,329
kind of data is being stored on the

291
00:15:14,690 --> 00:15:20,300
physical lock once again if you click on

292
00:15:17,329 --> 00:15:22,939
any of those things so we kept adding

293
00:15:20,300 --> 00:15:28,099
and adding more features here because

294
00:15:22,940 --> 00:15:30,290
it's hugely complex and once we went on

295
00:15:28,100 --> 00:15:33,230
with the reverse engineering we keep

296
00:15:30,290 --> 00:15:34,040
adding kept adding notes here you get

297
00:15:33,230 --> 00:15:40,040
the idea

298
00:15:34,040 --> 00:15:43,160
yes we are armed and then the next step

299
00:15:40,040 --> 00:15:45,469
is to build hotel and if you can't

300
00:15:43,160 --> 00:15:48,490
afford it then you need a builder lab in

301
00:15:45,470 --> 00:15:54,380
loops looks like a little bit like this

302
00:15:48,490 --> 00:15:57,500
no stereotypes here the problem was that

303
00:15:54,380 --> 00:16:00,680
this Hardware this beautiful piece of

304
00:15:57,500 --> 00:16:03,319
hardware is actually crappy

305
00:16:00,680 --> 00:16:05,000
we noticed that if you were to swipe the

306
00:16:03,319 --> 00:16:07,849
same card twice you would get a

307
00:16:05,000 --> 00:16:10,459
different result every time and I can

308
00:16:07,850 --> 00:16:13,399
tell you this was hard enough already

309
00:16:10,459 --> 00:16:15,888
without that so we had to do something

310
00:16:13,399 --> 00:16:18,560
else we would have wanted this piece of

311
00:16:15,889 --> 00:16:21,079
hardware but it's super expensive and

312
00:16:18,560 --> 00:16:25,099
even with our contacts we were not able

313
00:16:21,079 --> 00:16:27,649
to get it so instead we decided to go

314
00:16:25,100 --> 00:16:31,310
for an rfid reader which is much cheaper

315
00:16:27,649 --> 00:16:33,870
and we went after went on with this

316
00:16:31,310 --> 00:16:36,000
reader this is

317
00:16:33,870 --> 00:16:38,520
really nice piece of hardware only about

318
00:16:36,000 --> 00:16:41,130
sixty about sixty sixty dollars or so

319
00:16:38,520 --> 00:16:43,500
easy to get and works according to the

320
00:16:41,130 --> 00:16:45,689
documentation it works with vision which

321
00:16:43,500 --> 00:16:50,250
was for us it was kind of important

322
00:16:45,690 --> 00:16:53,160
so immediately after twenty hours we

323
00:16:50,250 --> 00:16:55,110
were able to get it to work it's kind of

324
00:16:53,160 --> 00:16:57,510
embarrassing because the only thing

325
00:16:55,110 --> 00:16:58,920
needed was to rerun the Installer but we

326
00:16:57,510 --> 00:17:04,189
didn't really figure it out

327
00:16:58,920 --> 00:17:10,260
so we spent like 20 plus hours debugging

328
00:17:04,189 --> 00:17:12,660
the system but at this point we were

329
00:17:10,260 --> 00:17:16,140
able to create our own cards which is

330
00:17:12,660 --> 00:17:18,120
beautiful so we put the card there you

331
00:17:16,140 --> 00:17:20,850
can write the information there and you

332
00:17:18,119 --> 00:17:23,810
have a working memory card for the

333
00:17:20,849 --> 00:17:31,350
installation but there was one problem

334
00:17:23,810 --> 00:17:33,720
we had a demo installation and having a

335
00:17:31,350 --> 00:17:37,010
demo installation is not the same thing

336
00:17:33,720 --> 00:17:40,470
as having a licensed installation

337
00:17:37,010 --> 00:17:42,510
luckily we are trained professionals and

338
00:17:40,470 --> 00:17:44,429
we know how to read so we took a look at

339
00:17:42,510 --> 00:17:46,410
the manual and there is a screenshot in

340
00:17:44,429 --> 00:17:48,590
the manual with all the license

341
00:17:46,410 --> 00:17:48,590
information

342
00:17:50,410 --> 00:17:53,689
[Applause]

343
00:17:53,820 --> 00:18:00,580
so we registered our copy of of vision

344
00:17:57,820 --> 00:18:04,929
then and it was fully functional and

345
00:18:00,580 --> 00:18:06,639
that's how you hack yeah that's so you

346
00:18:04,930 --> 00:18:11,250
know if you're not smart you have to be

347
00:18:06,640 --> 00:18:13,870
persistent then there was a minor

348
00:18:11,250 --> 00:18:17,590
setback we didn't know anything about

349
00:18:13,870 --> 00:18:19,419
RFID so we have to do some reading so we

350
00:18:17,590 --> 00:18:23,320
started reading few documents here and

351
00:18:19,420 --> 00:18:28,420
there and learned that there are also

352
00:18:23,320 --> 00:18:30,040
multiple different RFID tokens so mostly

353
00:18:28,420 --> 00:18:31,690
in court installations or vision

354
00:18:30,040 --> 00:18:36,820
installations are using either

355
00:18:31,690 --> 00:18:41,860
ultralight or ultralight ev1 cards these

356
00:18:36,820 --> 00:18:46,179
are not secured cards so eveyone is a

357
00:18:41,860 --> 00:18:48,370
bit better than ultralight but the only

358
00:18:46,180 --> 00:18:51,610
difference is that it has a kind of a

359
00:18:48,370 --> 00:18:56,889
shared secret that is being sent between

360
00:18:51,610 --> 00:18:59,740
the court or if the secret is is shared

361
00:18:56,890 --> 00:19:01,780
between the lock and the card but if you

362
00:18:59,740 --> 00:19:04,330
have a nice piece of hardware like

363
00:19:01,780 --> 00:19:07,090
proxmark you can just sniff the shared

364
00:19:04,330 --> 00:19:10,899
secret it's plain text and and you can

365
00:19:07,090 --> 00:19:13,990
you can use that it's not protected in

366
00:19:10,900 --> 00:19:16,690
any way and for the most part when we

367
00:19:13,990 --> 00:19:19,210
took a look at it it's not really being

368
00:19:16,690 --> 00:19:21,310
used most of the times and it's not a

369
00:19:19,210 --> 00:19:26,800
security feature is more like a copy

370
00:19:21,310 --> 00:19:28,389
protections copy protection feature now

371
00:19:26,800 --> 00:19:31,030
that we had a working lab we were

372
00:19:28,390 --> 00:19:34,650
finally able to start really reverse

373
00:19:31,030 --> 00:19:37,930
engineering how the software works now

374
00:19:34,650 --> 00:19:41,110
unfortunately we cannot disclose all the

375
00:19:37,930 --> 00:19:44,370
details of how the hack works although

376
00:19:41,110 --> 00:19:48,790
as a ploy has already issued a patch and

377
00:19:44,370 --> 00:19:51,189
we know that many hotels have also used

378
00:19:48,790 --> 00:19:53,920
the patch to fix the hotels there's

379
00:19:51,190 --> 00:19:56,500
still so many vulnerable hotels that we

380
00:19:53,920 --> 00:19:58,930
don't want to put innocent hotel guests

381
00:19:56,500 --> 00:20:02,880
at risk by publishing all the details of

382
00:19:58,930 --> 00:20:05,740
how the attack works that's it

383
00:20:02,880 --> 00:20:08,320
once we had plenty of those our

384
00:20:05,740 --> 00:20:11,980
of ID hotel key cards we started looking

385
00:20:08,320 --> 00:20:14,860
at the data on the cards and we

386
00:20:11,980 --> 00:20:16,450
immediately recognized a sequence of 33

387
00:20:14,860 --> 00:20:18,879
bytes it was something that looked very

388
00:20:16,450 --> 00:20:21,790
familiar and this reason is simple

389
00:20:18,880 --> 00:20:24,220
it was the same sequence of bytes that

390
00:20:21,790 --> 00:20:27,070
you had already on those mag stripe

391
00:20:24,220 --> 00:20:29,530
cards so you have the same same

392
00:20:27,070 --> 00:20:32,350
structure the way the data is structured

393
00:20:29,530 --> 00:20:34,990
is that you have a very simple single

394
00:20:32,350 --> 00:20:36,909
byte for encryption the first byte is

395
00:20:34,990 --> 00:20:40,630
the encryption key and it's also the

396
00:20:36,910 --> 00:20:44,260
checksum for the rest of the day once

397
00:20:40,630 --> 00:20:46,420
you decrypt that simple encryption you

398
00:20:44,260 --> 00:20:49,510
get something like this so you have

399
00:20:46,420 --> 00:20:52,570
multiple different logical values let's

400
00:20:49,510 --> 00:20:54,580
say you have a one byte logical value it

401
00:20:52,570 --> 00:20:57,250
might be that you need to get five bits

402
00:20:54,580 --> 00:20:59,320
from here then you get two bits from a

403
00:20:57,250 --> 00:21:02,820
different offset and then the last bit

404
00:20:59,320 --> 00:21:07,510
from yet another offset that's like a

405
00:21:02,820 --> 00:21:11,620
terrible data format in order to deal

406
00:21:07,510 --> 00:21:12,220
with this we used a tool called Kyodai

407
00:21:11,620 --> 00:21:13,959
struct

408
00:21:12,220 --> 00:21:17,620
this was super helpful both in

409
00:21:13,960 --> 00:21:19,630
documenting and visualizing the data so

410
00:21:17,620 --> 00:21:22,149
the craft that you just saw it was

411
00:21:19,630 --> 00:21:26,110
automatically generated by kai destruct

412
00:21:22,150 --> 00:21:28,780
the only thing you need to do is first

413
00:21:26,110 --> 00:21:31,110
describe the data that you have and the

414
00:21:28,780 --> 00:21:34,178
syntax is quite straightforward you

415
00:21:31,110 --> 00:21:36,939
simply describe the sequence these of

416
00:21:34,179 --> 00:21:39,730
bits and bytes you label them you give

417
00:21:36,940 --> 00:21:42,490
them IDs once you've done with that then

418
00:21:39,730 --> 00:21:45,700
you can say that okay I have this

419
00:21:42,490 --> 00:21:48,400
logical value which consists of these

420
00:21:45,700 --> 00:21:52,809
bits these bits and that bit there and

421
00:21:48,400 --> 00:21:54,929
that's it the added bonus is that once

422
00:21:52,809 --> 00:21:58,928
you have done this kind of description

423
00:21:54,929 --> 00:21:59,679
then you can automatically generate a DC

424
00:21:58,929 --> 00:22:01,840
réaliser

425
00:21:59,679 --> 00:22:04,929
for your favorite programming language

426
00:22:01,840 --> 00:22:10,000
which in our case was quite so quite

427
00:22:04,929 --> 00:22:12,070
quite a handy tool now that we more or

428
00:22:10,000 --> 00:22:14,410
less understood the structure of the

429
00:22:12,070 --> 00:22:17,320
data how at least we thought with it we

430
00:22:14,410 --> 00:22:19,389
started our quest for the master key so

431
00:22:17,320 --> 00:22:21,968
the master key is seeing

432
00:22:19,389 --> 00:22:23,820
key that will open each and every door

433
00:22:21,969 --> 00:22:28,659
in the hotel

434
00:22:23,820 --> 00:22:31,869
our first attempt was to simply update

435
00:22:28,659 --> 00:22:34,479
the facility code on a master key that

436
00:22:31,869 --> 00:22:37,658
we had created in our lab environment

437
00:22:34,479 --> 00:22:40,079
and the facility code is simply an

438
00:22:37,659 --> 00:22:45,219
integer that's basically a unique

439
00:22:40,079 --> 00:22:48,609
identifier for each hotel we were hoping

440
00:22:45,219 --> 00:22:51,879
that okay maybe this works it certainly

441
00:22:48,609 --> 00:22:53,739
didn't I mean now looking back it was it

442
00:22:51,879 --> 00:22:56,918
would have been too easy but it was

443
00:22:53,739 --> 00:23:00,219
worth a shot we decided that we need to

444
00:22:56,919 --> 00:23:04,479
try try something more simple and we

445
00:23:00,219 --> 00:23:07,179
tried cloning a key so taking a regular

446
00:23:04,479 --> 00:23:13,209
guest key and then cloning it to

447
00:23:07,179 --> 00:23:17,249
physical rfid tag this also failed and

448
00:23:13,209 --> 00:23:20,559
this was supposed to be simple come on

449
00:23:17,249 --> 00:23:22,479
at this point we were quite humble so we

450
00:23:20,559 --> 00:23:24,969
went back to the drawing board which in

451
00:23:22,479 --> 00:23:26,950
this case means either pro and immunity

452
00:23:24,969 --> 00:23:30,700
debugger and eat some more reverse

453
00:23:26,950 --> 00:23:34,059
engineering and we learned that the last

454
00:23:30,700 --> 00:23:37,690
four bites that you have on those RFID

455
00:23:34,059 --> 00:23:41,259
tags those are a checksum that's

456
00:23:37,690 --> 00:23:44,070
calculated from the RFID unique

457
00:23:41,259 --> 00:23:47,679
identifier that you have on the card and

458
00:23:44,070 --> 00:23:49,809
from the facility code of the hotel so

459
00:23:47,679 --> 00:23:54,849
those are the two inputs for the

460
00:23:49,809 --> 00:23:59,320
checksum now obviously if you try

461
00:23:54,849 --> 00:24:01,629
cloning the card without being able to

462
00:23:59,320 --> 00:24:03,279
generate the SEC checksum it will fail

463
00:24:01,629 --> 00:24:05,619
and the reason is that if you have two

464
00:24:03,279 --> 00:24:07,929
cards that have different u IDs the

465
00:24:05,619 --> 00:24:10,238
checksum will also be different we

466
00:24:07,929 --> 00:24:12,519
didn't use one of those Chinese cards

467
00:24:10,239 --> 00:24:14,409
where you can control also the UI IDs if

468
00:24:12,519 --> 00:24:16,389
we would have used those then yeah we

469
00:24:14,409 --> 00:24:19,899
wouldn't have this problem

470
00:24:16,389 --> 00:24:21,609
in any case this is something that we we

471
00:24:19,899 --> 00:24:25,449
had to learn in order to be able to

472
00:24:21,609 --> 00:24:28,418
generate those master keys now that we

473
00:24:25,450 --> 00:24:31,300
were able to create physical tags

474
00:24:28,419 --> 00:24:33,920
plone physical checks the

475
00:24:31,300 --> 00:24:35,810
logical step was to try to stimulate a

476
00:24:33,920 --> 00:24:38,990
key because the hardware that we were

477
00:24:35,810 --> 00:24:41,570
using was proxmark three and it has the

478
00:24:38,990 --> 00:24:45,410
capability to simulate my for ultralight

479
00:24:41,570 --> 00:24:52,370
cards they should have been a walk in

480
00:24:45,410 --> 00:24:54,920
the park and figuring out why this one

481
00:24:52,370 --> 00:24:56,979
didn't work I think this was one of the

482
00:24:54,920 --> 00:25:01,880
most challenging parts of the project

483
00:24:56,980 --> 00:25:04,130
you will soon learn why I went back to

484
00:25:01,880 --> 00:25:06,440
the documentation this is the state

485
00:25:04,130 --> 00:25:09,110
diagram of the state machine of one of

486
00:25:06,440 --> 00:25:10,790
those ultralight cards in order to write

487
00:25:09,110 --> 00:25:13,399
anything to the card or read anything

488
00:25:10,790 --> 00:25:15,260
from the card you need to read reach

489
00:25:13,400 --> 00:25:18,590
this state that's called the active

490
00:25:15,260 --> 00:25:20,600
State and in order to get there you

491
00:25:18,590 --> 00:25:23,030
first need to go through this protocol

492
00:25:20,600 --> 00:25:25,449
called anti-collision what it simply

493
00:25:23,030 --> 00:25:28,270
means is that if you have a reader and

494
00:25:25,450 --> 00:25:31,580
within the radial field of that reader

495
00:25:28,270 --> 00:25:34,220
being a lock in this case if you have

496
00:25:31,580 --> 00:25:36,470
multiple checks let's say you have two

497
00:25:34,220 --> 00:25:38,750
RFID tags there needs to be a process

498
00:25:36,470 --> 00:25:40,820
for the reader to say that okay who's

499
00:25:38,750 --> 00:25:41,480
out there then both of the checks that

500
00:25:40,820 --> 00:25:43,370
appear

501
00:25:41,480 --> 00:25:47,030
I'm here and then what the reader does

502
00:25:43,370 --> 00:25:48,469
is says okay now you shut up you I'm

503
00:25:47,030 --> 00:25:49,220
talking to you tell me more about

504
00:25:48,470 --> 00:25:52,010
yourself

505
00:25:49,220 --> 00:25:54,050
okay thanks I'm good now you shut up you

506
00:25:52,010 --> 00:25:56,060
tell me more about yourself okay and

507
00:25:54,050 --> 00:25:59,419
then the reader can decide what is the

508
00:25:56,060 --> 00:26:01,399
tag that it wants to talk to you if you

509
00:25:59,420 --> 00:26:03,590
simplify this a bit you can think of it

510
00:26:01,400 --> 00:26:09,280
as a handshake between the reader and

511
00:26:03,590 --> 00:26:12,080
the tag so imagine when I realized that

512
00:26:09,280 --> 00:26:14,629
we're not reaching the active state

513
00:26:12,080 --> 00:26:15,679
because that and the collusion protocol

514
00:26:14,630 --> 00:26:20,330
the handshake

515
00:26:15,680 --> 00:26:22,640
fails to illustrate this we literally

516
00:26:20,330 --> 00:26:26,360
were able to sniff the traffic between

517
00:26:22,640 --> 00:26:29,480
the token and the lock and our payload

518
00:26:26,360 --> 00:26:32,360
was exactly the same with the payload of

519
00:26:29,480 --> 00:26:34,850
the cart that we had cloned and it

520
00:26:32,360 --> 00:26:38,330
didn't work our clone didn't work but

521
00:26:34,850 --> 00:26:40,639
the real cart worked it was kind of an

522
00:26:38,330 --> 00:26:42,918
out-of-body experience because you're

523
00:26:40,640 --> 00:26:48,679
looking at two identical dumps and one

524
00:26:42,919 --> 00:26:51,200
and the other one didn't so we went back

525
00:26:48,679 --> 00:26:54,879
to the documentation and we started

526
00:26:51,200 --> 00:26:58,249
reading the ISO standards for the radio

527
00:26:54,879 --> 00:27:02,840
communication man listen this is a

528
00:26:58,249 --> 00:27:06,799
lovely standard and protocol depending

529
00:27:02,840 --> 00:27:10,369
on the command that the reader sends to

530
00:27:06,799 --> 00:27:13,100
the TAC and also depending on the day

531
00:27:10,369 --> 00:27:16,309
that depending on the last bit that the

532
00:27:13,100 --> 00:27:20,230
reader sends to the TAC the tag has to

533
00:27:16,309 --> 00:27:22,789
wait a different delay and that delay

534
00:27:20,230 --> 00:27:25,669
depends on what was the data sent from

535
00:27:22,789 --> 00:27:29,059
the reader and make this even more

536
00:27:25,669 --> 00:27:31,609
complicated it's not like the high level

537
00:27:29,059 --> 00:27:33,739
data that you work with it's it's the

538
00:27:31,609 --> 00:27:37,999
low level a radio frequency data

539
00:27:33,739 --> 00:27:40,489
including the parity bits so it took

540
00:27:37,999 --> 00:27:43,369
some time to figure out that the problem

541
00:27:40,489 --> 00:27:46,789
in the proxmark firmware is on how this

542
00:27:43,369 --> 00:27:50,029
delay is handled once we understood the

543
00:27:46,789 --> 00:27:53,690
problem the fix was easy it wasn't that

544
00:27:50,029 --> 00:27:56,480
many lines of code so we we made a pull

545
00:27:53,690 --> 00:28:00,139
request it was quite quickly merged the

546
00:27:56,480 --> 00:28:03,340
iceman fork and hopefully nobody ever

547
00:28:00,139 --> 00:28:07,639
has to suffer from this same bug again

548
00:28:03,340 --> 00:28:11,330
now don't get me wrong without tools

549
00:28:07,639 --> 00:28:13,399
like proxmark we couldn't have done this

550
00:28:11,330 --> 00:28:14,629
I mean if we would have had to create a

551
00:28:13,399 --> 00:28:16,809
tool like proxmark

552
00:28:14,629 --> 00:28:20,209
designed the hardware and all that stuff

553
00:28:16,809 --> 00:28:22,580
we would have failed but still it was

554
00:28:20,210 --> 00:28:25,549
quite surprising to us that proxmark has

555
00:28:22,580 --> 00:28:29,059
been around for years and I guess nobody

556
00:28:25,549 --> 00:28:31,700
else stumbled on this on this buck so

557
00:28:29,059 --> 00:28:34,129
I'm very happy that this way we were

558
00:28:31,700 --> 00:28:37,460
hopefully able to give back to the

559
00:28:34,129 --> 00:28:40,219
community at least a little also worth

560
00:28:37,460 --> 00:28:43,700
mentioning is that the emulation on

561
00:28:40,220 --> 00:28:45,679
proxmark worked sometimes because if you

562
00:28:43,700 --> 00:28:48,739
were lucky to get the right data pattern

563
00:28:45,679 --> 00:28:51,470
the emulation would work but very often

564
00:28:48,739 --> 00:28:54,619
it wouldn't work it actually depended on

565
00:28:51,470 --> 00:28:56,570
the RFID UID that you have on the card

566
00:28:54,619 --> 00:28:58,850
so if you simulate it

567
00:28:56,570 --> 00:29:02,539
heart with the right kind of UID it

568
00:28:58,850 --> 00:29:05,059
magically worked nothing that obvious to

569
00:29:02,539 --> 00:29:07,908
figure out okay okay now we're able to

570
00:29:05,059 --> 00:29:09,860
simulate those two acts so we started

571
00:29:07,909 --> 00:29:12,049
our quest for relevant values now within

572
00:29:09,860 --> 00:29:13,729
those 33 bytes you have multiple

573
00:29:12,049 --> 00:29:16,519
different logical values and because we

574
00:29:13,730 --> 00:29:19,490
had done some reverse engineering we we

575
00:29:16,519 --> 00:29:23,240
knew like human readable names for some

576
00:29:19,490 --> 00:29:25,340
of the fields some of the names sounded

577
00:29:23,240 --> 00:29:27,500
quite promising this is a bit like if

578
00:29:25,340 --> 00:29:30,470
you have a web application and then you

579
00:29:27,500 --> 00:29:32,809
have a URL parameter that says admin

580
00:29:30,470 --> 00:29:34,610
equals false so obviously the first

581
00:29:32,809 --> 00:29:37,009
thing you do is try to flip that to true

582
00:29:34,610 --> 00:29:39,620
and see whether it works this is kind of

583
00:29:37,009 --> 00:29:45,740
the same some of the fields sounded more

584
00:29:39,620 --> 00:29:52,008
promising and it affect close but no

585
00:29:45,740 --> 00:29:55,279
cigar and I would say this was somewhat

586
00:29:52,009 --> 00:29:57,500
devastating that there had been quite

587
00:29:55,279 --> 00:30:04,009
many failures up to this point and we

588
00:29:57,500 --> 00:30:07,940
were like what are we gonna do now so so

589
00:30:04,009 --> 00:30:09,710
so we had to come up with a new plan and

590
00:30:07,940 --> 00:30:11,110
we figured out that let's do it the

591
00:30:09,710 --> 00:30:15,279
other way around

592
00:30:11,110 --> 00:30:20,178
let's try to find the irrelevant values

593
00:30:15,279 --> 00:30:24,200
what I mean by this is that we were able

594
00:30:20,179 --> 00:30:29,269
to get our hands on real master key to

595
00:30:24,200 --> 00:30:30,710
real hotel legitimately we got one

596
00:30:29,269 --> 00:30:34,129
that's the official story and we're

597
00:30:30,710 --> 00:30:36,529
sticking to it yes so we got one of

598
00:30:34,129 --> 00:30:39,620
those master keys and what we did was we

599
00:30:36,529 --> 00:30:43,009
started corrupting the fields on the

600
00:30:39,620 --> 00:30:45,168
card one by one and now if you corrupt

601
00:30:43,009 --> 00:30:47,899
the field and the card stops working

602
00:30:45,169 --> 00:30:49,639
then you know that okay that field is

603
00:30:47,899 --> 00:30:52,158
relevant you need to have the right

604
00:30:49,639 --> 00:30:56,870
value in that field in order for the key

605
00:30:52,159 --> 00:31:00,110
to work as a master key and we did it we

606
00:30:56,870 --> 00:31:04,100
were able to identify the correct fields

607
00:31:00,110 --> 00:31:07,820
and now we just had one problem and key

608
00:31:04,100 --> 00:31:09,649
space is one of them because the most

609
00:31:07,820 --> 00:31:17,030
relevant value

610
00:31:09,650 --> 00:31:19,820
it had so many bits that yeah if if you

611
00:31:17,030 --> 00:31:21,350
have a wide range of values you don't

612
00:31:19,820 --> 00:31:23,360
know which one is correct there's

613
00:31:21,350 --> 00:31:24,230
typically one approach on just one

614
00:31:23,360 --> 00:31:26,719
approach you can take

615
00:31:24,230 --> 00:31:30,110
and that's brute forcing and that's what

616
00:31:26,720 --> 00:31:37,280
we did we built custom proxmark firmware

617
00:31:30,110 --> 00:31:40,610
to brute-force those values if you want

618
00:31:37,280 --> 00:31:42,020
to build something like this it's it's

619
00:31:40,610 --> 00:31:44,659
not that difficult because there's

620
00:31:42,020 --> 00:31:46,580
already the functionality to stimulate a

621
00:31:44,660 --> 00:31:49,310
card the only thing we had to do was

622
00:31:46,580 --> 00:31:51,439
simulate one card then change the data a

623
00:31:49,310 --> 00:31:54,530
bit simulate again change the data a bit

624
00:31:51,440 --> 00:31:59,410
simulate again the biggest challenge

625
00:31:54,530 --> 00:32:02,360
here was that how do you make the reader

626
00:31:59,410 --> 00:32:06,350
the lock realized that you should read

627
00:32:02,360 --> 00:32:09,709
the hotel key card again so what I

628
00:32:06,350 --> 00:32:13,879
wanted to do was to mimic the human

629
00:32:09,710 --> 00:32:16,130
behavior if you hold your hotel key card

630
00:32:13,880 --> 00:32:17,780
to the lock and for some reason the door

631
00:32:16,130 --> 00:32:20,570
doesn't open what you typically do is

632
00:32:17,780 --> 00:32:25,070
you take the card away and then you

633
00:32:20,570 --> 00:32:27,020
bring it back to the reader again so

634
00:32:25,070 --> 00:32:30,490
this was the behavior we wanted to mimic

635
00:32:27,020 --> 00:32:32,930
in the firmware and the most simple

636
00:32:30,490 --> 00:32:36,320
definitely not the most elegant but the

637
00:32:32,930 --> 00:32:39,170
most simple way to do this was to turn

638
00:32:36,320 --> 00:32:41,929
off the radio field by putting the

639
00:32:39,170 --> 00:32:44,720
proxmark in the reader mode because when

640
00:32:41,930 --> 00:32:47,180
the proxmark is in the reader mode the

641
00:32:44,720 --> 00:32:49,430
locks like okay there's no more cards

642
00:32:47,180 --> 00:32:51,200
here and when you simulate the car again

643
00:32:49,430 --> 00:32:53,660
the lock is like ah we have a new card

644
00:32:51,200 --> 00:32:58,220
and then it already and when you do this

645
00:32:53,660 --> 00:33:03,710
in a loop your brute forcing your brute

646
00:32:58,220 --> 00:33:06,410
forcing one attempt per second which

647
00:33:03,710 --> 00:33:08,810
isn't really that fast to illustrate how

648
00:33:06,410 --> 00:33:10,490
slow it is if you would need to prove

649
00:33:08,810 --> 00:33:13,250
for the value of four bits I mean you're

650
00:33:10,490 --> 00:33:14,690
good that's sixteen seconds when we go

651
00:33:13,250 --> 00:33:18,620
up to sixteen bits

652
00:33:14,690 --> 00:33:23,169
that's 18 hours and I can tell you a

653
00:33:18,620 --> 00:33:29,599
little secret it was more than 16 bits

654
00:33:23,169 --> 00:33:34,809
yeah it's it's not feasible in the real

655
00:33:29,599 --> 00:33:37,099
world so we had gotten this far but

656
00:33:34,809 --> 00:33:41,090
couldn't really do anything useful with

657
00:33:37,099 --> 00:33:46,668
with it and that got us thinking that

658
00:33:41,090 --> 00:33:48,699
this thing is hugely complex and what we

659
00:33:46,669 --> 00:33:51,559
have not mentioned previously is that

660
00:33:48,700 --> 00:33:53,690
reverse engineering this thing to death

661
00:33:51,559 --> 00:34:00,019
doesn't really help because all the

662
00:33:53,690 --> 00:34:02,779
installations are unique and and that

663
00:34:00,019 --> 00:34:07,249
that was kind of the thing that helped

664
00:34:02,779 --> 00:34:08,719
us to figure out a shortcut we would

665
00:34:07,249 --> 00:34:10,699
like the thing that we are reasonably

666
00:34:08,719 --> 00:34:14,000
smart well forget that but anyways and

667
00:34:10,699 --> 00:34:16,638
then there has to be a process how you

668
00:34:14,000 --> 00:34:19,609
actually install these things and once

669
00:34:16,639 --> 00:34:22,069
we were we kind of have this idea that

670
00:34:19,609 --> 00:34:24,799
there may be there is a process we

671
00:34:22,069 --> 00:34:27,829
started doing kind of open source

672
00:34:24,799 --> 00:34:29,199
intelligence type of work and figured

673
00:34:27,829 --> 00:34:33,409
out that there is a thing called

674
00:34:29,199 --> 00:34:38,839
assembler University and although we

675
00:34:33,409 --> 00:34:41,899
didn't get credentials to this place we

676
00:34:38,839 --> 00:34:44,808
realized that they have to teach a

677
00:34:41,899 --> 00:34:51,109
certain way how do you go and deploy a

678
00:34:44,809 --> 00:34:55,010
new hotel and that allowed us to limit

679
00:34:51,109 --> 00:35:03,140
the key space from gazillion to about 20

680
00:34:55,010 --> 00:35:08,059
tries and this is how it looks so you

681
00:35:03,140 --> 00:35:10,940
check in to a hotel you're enjoying your

682
00:35:08,059 --> 00:35:14,450
martini there you'll get your wallet

683
00:35:10,940 --> 00:35:17,569
there no you forget your key there the

684
00:35:14,450 --> 00:35:20,419
only thing that we need is half a second

685
00:35:17,569 --> 00:35:22,849
to clone that key and of course we can

686
00:35:20,420 --> 00:35:26,180
check into the same hotel use any key

687
00:35:22,849 --> 00:35:29,059
expired or whatever then we have to find

688
00:35:26,180 --> 00:35:33,230
a lock any lock will do or number of

689
00:35:29,059 --> 00:35:36,160
locks will do and once we were able to

690
00:35:33,230 --> 00:35:38,829
get in we know that or the ones do

691
00:35:36,160 --> 00:35:41,020
light is green we know that we have a

692
00:35:38,829 --> 00:35:43,440
master key so here we are pressing or

693
00:35:41,020 --> 00:35:45,700
pushing the buttons on an elevator and

694
00:35:43,440 --> 00:35:47,710
because we don't have a master key we

695
00:35:45,700 --> 00:35:50,680
can go to the floors that we don't have

696
00:35:47,710 --> 00:35:53,410
the key for and once we have a master

697
00:35:50,680 --> 00:35:55,419
key you can go anywhere you want this

698
00:35:53,410 --> 00:36:04,750
was the easiest way to visualize it

699
00:35:55,420 --> 00:36:12,010
without breaking the wall so let's talk

700
00:36:04,750 --> 00:36:16,869
about being a ghost to read collect or

701
00:36:12,010 --> 00:36:19,720
to go this once more we need the the

702
00:36:16,869 --> 00:36:22,299
prerequisites for this attack is a key

703
00:36:19,720 --> 00:36:25,118
card and any key card will do it can be

704
00:36:22,299 --> 00:36:27,609
expired it can be from your safe five

705
00:36:25,119 --> 00:36:31,690
years ago it can be the key to the

706
00:36:27,609 --> 00:36:34,299
garage door to the gym any valid key

707
00:36:31,690 --> 00:36:36,990
card or for did the hotel will do

708
00:36:34,299 --> 00:36:39,730
employee a key card you just name it and

709
00:36:36,990 --> 00:36:42,640
then you need to have an access to that

710
00:36:39,730 --> 00:36:46,930
lock and that will enable you to be a

711
00:36:42,640 --> 00:36:50,828
ghost so the second phase of this attack

712
00:36:46,930 --> 00:36:54,520
is that we need to try those different

713
00:36:50,829 --> 00:36:58,240
combinations against a lock and we can

714
00:36:54,520 --> 00:37:00,520
do that against a single lock so let's

715
00:36:58,240 --> 00:37:03,189
say that we go to this garage door and

716
00:37:00,520 --> 00:37:06,130
we route for us the keys base true and

717
00:37:03,190 --> 00:37:09,039
at one point we will find the master key

718
00:37:06,130 --> 00:37:12,250
or we can distribute the brute-forcing

719
00:37:09,039 --> 00:37:16,260
across all the locks in the hotel so

720
00:37:12,250 --> 00:37:20,140
there will be only one driver lock and

721
00:37:16,260 --> 00:37:23,549
this effectively will leave an audit

722
00:37:20,140 --> 00:37:27,430
trail with those logs to those locks and

723
00:37:23,549 --> 00:37:31,150
each and every lock will record 600

724
00:37:27,430 --> 00:37:33,450
events per log if you happen to have the

725
00:37:31,150 --> 00:37:36,660
most high-end version of the lock and

726
00:37:33,450 --> 00:37:40,598
what's stored there is the user ID code

727
00:37:36,660 --> 00:37:41,308
area code time of the event and then few

728
00:37:40,599 --> 00:37:45,220
bits

729
00:37:41,309 --> 00:37:48,269
the problem here is that we control all

730
00:37:45,220 --> 00:37:50,740
the values except

731
00:37:48,269 --> 00:37:54,879
so there are multiple ways to do it

732
00:37:50,740 --> 00:37:57,788
we can either overflow the buffer so

733
00:37:54,880 --> 00:38:02,079
that it will only show valid entries or

734
00:37:57,789 --> 00:38:06,309
we can impersonate somebody or we can

735
00:38:02,079 --> 00:38:09,480
pretty much do whatever we want and the

736
00:38:06,309 --> 00:38:13,869
thing that makes this even worse is that

737
00:38:09,480 --> 00:38:16,930
remember this there are those doors

738
00:38:13,869 --> 00:38:20,589
there's their standalone so in order to

739
00:38:16,930 --> 00:38:24,250
read that audit trail you need to use a

740
00:38:20,589 --> 00:38:27,819
DDoS network walk to the door put this

741
00:38:24,250 --> 00:38:30,789
thing to the lock read out the log and

742
00:38:27,819 --> 00:38:36,250
then go to some other place and analyze

743
00:38:30,789 --> 00:38:38,740
it and we think that nobody will ever do

744
00:38:36,250 --> 00:38:42,309
that especially when the only thing that

745
00:38:38,740 --> 00:38:47,319
you can trust is the timestamp so that

746
00:38:42,309 --> 00:38:49,710
makes you a ghost so the only thing left

747
00:38:47,319 --> 00:38:49,710
was

748
00:38:58,810 --> 00:39:06,830
[Applause]

749
00:39:02,090 --> 00:39:08,930
but wait there is more if you are

750
00:39:06,830 --> 00:39:12,799
working for this industry the first

751
00:39:08,930 --> 00:39:16,240
thing that you would do is to toward

752
00:39:12,800 --> 00:39:19,190
scan the hell out of this backend and

753
00:39:16,240 --> 00:39:21,560
that's exactly what we did so we came up

754
00:39:19,190 --> 00:39:24,170
with another plan so we know it's the

755
00:39:21,560 --> 00:39:27,799
software and see if we can compromise it

756
00:39:24,170 --> 00:39:30,440
either locally or remotely and the

757
00:39:27,800 --> 00:39:33,800
beautiful piece of software vision is it

758
00:39:30,440 --> 00:39:35,500
looks like this and has open Network

759
00:39:33,800 --> 00:39:38,900
shares and according to the

760
00:39:35,500 --> 00:39:40,520
documentation you can mount the network

761
00:39:38,900 --> 00:39:44,150
share because that's how they distribute

762
00:39:40,520 --> 00:39:47,120
the database file unfortunately that's

763
00:39:44,150 --> 00:39:49,340
not really practical and many of the

764
00:39:47,120 --> 00:39:52,370
deployments don't really do that but

765
00:39:49,340 --> 00:39:55,100
there is also a Sybase database server

766
00:39:52,370 --> 00:39:57,319
listening on that port and it the

767
00:39:55,100 --> 00:40:01,190
database passwords are derived from

768
00:39:57,320 --> 00:40:03,700
magic contact constants and these are

769
00:40:01,190 --> 00:40:07,820
the passwords for the demo installation

770
00:40:03,700 --> 00:40:09,770
so by rigorous engineering those you can

771
00:40:07,820 --> 00:40:12,370
log into the database get full access

772
00:40:09,770 --> 00:40:15,680
and do whatever you like

773
00:40:12,370 --> 00:40:17,720
so we visualized that database it's

774
00:40:15,680 --> 00:40:20,750
pretty complex and it contains

775
00:40:17,720 --> 00:40:24,529
interesting pieces of information so all

776
00:40:20,750 --> 00:40:26,420
employee data is there so if you happen

777
00:40:24,530 --> 00:40:29,780
to run a casino or something it might be

778
00:40:26,420 --> 00:40:32,630
interesting or all the cloud user data

779
00:40:29,780 --> 00:40:39,190
is there and to make it worse there is a

780
00:40:32,630 --> 00:40:44,000
field here that actually stores your key

781
00:40:39,190 --> 00:40:46,370
meaning that you can do this we are in

782
00:40:44,000 --> 00:40:50,780
the same network let's say a conference

783
00:40:46,370 --> 00:40:54,830
network and then you start dumping the

784
00:40:50,780 --> 00:40:57,650
user names room for rooms and it by copy

785
00:40:54,830 --> 00:41:01,370
pasting base value here you can

786
00:40:57,650 --> 00:41:06,280
impersonate anybody great things today

787
00:41:01,370 --> 00:41:06,279
vital so

788
00:41:11,380 --> 00:41:15,350
[Music]

789
00:41:12,640 --> 00:41:16,660
[Applause]

790
00:41:15,350 --> 00:41:18,578
[Music]

791
00:41:16,660 --> 00:41:26,149
[Applause]

792
00:41:18,579 --> 00:41:28,130
conclusions so like mentioned earlier if

793
00:41:26,150 --> 00:41:31,400
you're not smart you have to be

794
00:41:28,130 --> 00:41:34,160
persistent we are not saying that this

795
00:41:31,400 --> 00:41:37,279
is something that you cannot do you can

796
00:41:34,160 --> 00:41:39,578
you use spent humans on this you will

797
00:41:37,279 --> 00:41:43,520
most probably figure out the same stuff

798
00:41:39,579 --> 00:41:50,859
the trick that we did was that we

799
00:41:43,520 --> 00:41:54,529
invested 15 years to it and learned that

800
00:41:50,859 --> 00:41:57,828
doing physical access control is super

801
00:41:54,529 --> 00:42:00,619
hard well doing it is easy but doing it

802
00:41:57,829 --> 00:42:03,440
right is hard you need to get the

803
00:42:00,619 --> 00:42:05,630
physical or the mechanics right you need

804
00:42:03,440 --> 00:42:09,349
to get the networking right you need to

805
00:42:05,630 --> 00:42:11,690
get SDR stuff or the radio layer right

806
00:42:09,349 --> 00:42:14,270
you have to be able to do proper

807
00:42:11,690 --> 00:42:18,559
software engineering with SDLC and all

808
00:42:14,270 --> 00:42:20,960
that stuff you can't use Delfy and and

809
00:42:18,559 --> 00:42:24,079
so on so if it's if it requires many

810
00:42:20,960 --> 00:42:27,829
things and it would not be fair to make

811
00:42:24,079 --> 00:42:31,160
one of these guys because if it's been

812
00:42:27,829 --> 00:42:35,240
around for ages and they being updating

813
00:42:31,160 --> 00:42:37,640
and updating and updating it but at some

814
00:42:35,240 --> 00:42:41,390
point there is a limit because attackers

815
00:42:37,640 --> 00:42:45,009
will only get better it's more difficult

816
00:42:41,390 --> 00:42:50,000
for an offender to be able to protect

817
00:42:45,010 --> 00:42:52,549
this kind of proprietary thing so we

818
00:42:50,000 --> 00:42:54,710
would like to thank our subway guys they

819
00:42:52,549 --> 00:42:57,190
took us very very seriously from the

820
00:42:54,710 --> 00:43:00,020
beginning as their press statement says

821
00:42:57,190 --> 00:43:03,619
we met with their CTO and their head of

822
00:43:00,020 --> 00:43:06,680
engineering and told him basically

823
00:43:03,619 --> 00:43:11,750
worked 12 months with them so that they

824
00:43:06,680 --> 00:43:15,589
could protect their customers we would

825
00:43:11,750 --> 00:43:18,049
like to also thank lots of people that

826
00:43:15,589 --> 00:43:22,009
we have met over the years many of them

827
00:43:18,049 --> 00:43:25,700
being our friends we started when the

828
00:43:22,010 --> 00:43:27,470
community was still kind of young and we

829
00:43:25,700 --> 00:43:29,799
wouldn't be here without these guys we

830
00:43:27,470 --> 00:43:31,839
have learned tons of things

831
00:43:29,799 --> 00:43:35,200
from the community and would kind of

832
00:43:31,839 --> 00:43:37,779
hope that it will stay the way it was 15

833
00:43:35,200 --> 00:43:40,259
years ago it won't but we're still kind

834
00:43:37,779 --> 00:43:40,260
of hoping

835
00:43:40,280 --> 00:43:43,419
[Music]

836
00:43:50,060 --> 00:44:09,979
[Music]

