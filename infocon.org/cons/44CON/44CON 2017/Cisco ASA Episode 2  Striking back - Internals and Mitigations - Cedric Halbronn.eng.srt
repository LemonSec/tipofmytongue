1
00:00:00,030 --> 00:00:06,480
okay I'm gonna start<font color="#E5E5E5"> hi everyone I'm</font>

2
00:00:04,230 --> 00:00:08,940
gonna talk<font color="#E5E5E5"> about the</font><font color="#CCCCCC"> cisco ACA firewalls</font>

3
00:00:06,480 --> 00:00:09,630
<font color="#CCCCCC">so if that's what you're looking for</font>

4
00:00:08,940 --> 00:00:12,660
that's great

5
00:00:09,630 --> 00:00:15,120
if<font color="#E5E5E5"> that's it</font><font color="#CCCCCC"> I'm going to talk about</font>

6
00:00:12,660 --> 00:00:16,830
reversing<font color="#E5E5E5"> debugging automating and</font>

7
00:00:15,120 --> 00:00:19,590
analysis on Cisco si

8
00:00:16,830 --> 00:00:22,109
so a little<font color="#E5E5E5"> bit about us so I'm working</font>

9
00:00:19,590 --> 00:00:24,269
<font color="#E5E5E5">at NCC group and I'm part of the exploit</font>

10
00:00:22,109 --> 00:00:28,380
<font color="#E5E5E5">development group and this work has been</font>

11
00:00:24,269 --> 00:00:30,659
<font color="#CCCCCC">made with our own audience</font><font color="#E5E5E5"> and myself so</font>

12
00:00:28,380 --> 00:00:33,930
we do<font color="#CCCCCC"> Ranieri research</font><font color="#E5E5E5"> reverse</font>

13
00:00:30,660 --> 00:00:37,800
<font color="#E5E5E5">engineering and exploit the wetlands</font><font color="#CCCCCC"> if</font>

14
00:00:33,930 --> 00:00:39,510
you went<font color="#E5E5E5"> to this talk</font><font color="#CCCCCC"> hoping to see</font><font color="#E5E5E5"> zero</font>

15
00:00:37,800 --> 00:00:42,480
days and exploit and everything<font color="#E5E5E5"> it's not</font>

16
00:00:39,510 --> 00:00:44,519
<font color="#CCCCCC">gonna be about</font><font color="#E5E5E5"> exploit so I'm sorry</font>

17
00:00:42,480 --> 00:00:46,910
<font color="#CCCCCC">about that</font><font color="#E5E5E5"> but it's gonna be about tools</font>

18
00:00:44,520 --> 00:00:50,430
<font color="#CCCCCC">that help understanding internals and</font>

19
00:00:46,910 --> 00:00:52,078
actually help exploiting bugs which

20
00:00:50,430 --> 00:00:53,969
sometimes<font color="#E5E5E5"> you have lots of talk about</font>

21
00:00:52,079 --> 00:00:55,730
exploit and amazing stuff but they don't

22
00:00:53,969 --> 00:00:58,410
actually show you<font color="#E5E5E5"> the tools that you</font>

23
00:00:55,730 --> 00:01:01,980
<font color="#E5E5E5">actually build underneath to actually</font>

24
00:00:58,410 --> 00:01:06,259
<font color="#E5E5E5">make</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> happen so what is the</font><font color="#CCCCCC"> siskiyou</font>

25
00:01:01,980 --> 00:01:11,270
<font color="#CCCCCC">say anyone</font><font color="#E5E5E5"> never heard about</font><font color="#CCCCCC"> Cisco</font><font color="#E5E5E5"> ESA</font>

26
00:01:06,260 --> 00:01:15,990
<font color="#CCCCCC">okay anyone heard about Cisco a before</font>

27
00:01:11,270 --> 00:01:21,149
<font color="#CCCCCC">ok anyone actually looked at</font><font color="#E5E5E5"> ESA</font>

28
00:01:15,990 --> 00:01:23,280
internals<font color="#CCCCCC"> ok so you basically analyze a</font>

29
00:01:21,150 --> 00:01:26,100
<font color="#E5E5E5">say from a user perspective or</font><font color="#CCCCCC"> pentas</font>

30
00:01:23,280 --> 00:01:27,960
<font color="#CCCCCC">perspective which is</font><font color="#E5E5E5"> nice so we're going</font>

31
00:01:26,100 --> 00:01:31,020
<font color="#E5E5E5">to talk</font><font color="#CCCCCC"> about internals but for</font><font color="#E5E5E5"> those</font>

32
00:01:27,960 --> 00:01:33,559
<font color="#E5E5E5">that don't know what</font><font color="#CCCCCC"> a naysay is it's</font>

33
00:01:31,020 --> 00:01:35,640
<font color="#E5E5E5">basically the devices you</font><font color="#CCCCCC"> have here and</font>

34
00:01:33,560 --> 00:01:37,530
<font color="#CCCCCC">assistance for</font><font color="#E5E5E5"> adaptive security</font>

35
00:01:35,640 --> 00:01:39,180
appliance<font color="#E5E5E5"> and it's basically a firewall</font>

36
00:01:37,530 --> 00:01:42,360
a router

37
00:01:39,180 --> 00:01:44,310
VPN gateway and most<font color="#E5E5E5"> probably you have</font>

38
00:01:42,360 --> 00:01:47,490
one in your<font color="#E5E5E5"> in</font><font color="#CCCCCC"> your company in</font><font color="#E5E5E5"> that</font>

39
00:01:44,310 --> 00:01:50,460
network<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> plenty in ours they are</font>

40
00:01:47,490 --> 00:01:53,189
used<font color="#E5E5E5"> to establish a VPN and to access</font>

41
00:01:50,460 --> 00:01:55,559
the internal network<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you use any</font>

42
00:01:53,189 --> 00:01:59,460
connect<font color="#E5E5E5"> that's what you're connecting to</font>

43
00:01:55,560 --> 00:02:02,280
to an AC a firewall<font color="#E5E5E5"> but internally</font><font color="#CCCCCC"> it's</font>

44
00:01:59,460 --> 00:02:05,789
actually a<font color="#E5E5E5"> Linux with a specific</font><font color="#CCCCCC"> AAS a</font>

45
00:02:02,280 --> 00:02:09,419
folder and it's different<font color="#E5E5E5"> than Cisco IOS</font>

46
00:02:05,790 --> 00:02:12,550
because Cisco IOS is<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> propriety</font>

47
00:02:09,419 --> 00:02:14,980
<font color="#CCCCCC">system here</font><font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> space</font>

48
00:02:12,550 --> 00:02:17,890
and it's an<font color="#CCCCCC"> intel architecture</font>

49
00:02:14,980 --> 00:02:22,359
<font color="#CCCCCC">underneath and this report both 32 and</font>

50
00:02:17,890 --> 00:02:24,820
64-bit and internally there<font color="#E5E5E5"> is one</font>

51
00:02:22,360 --> 00:02:25,840
binary<font color="#E5E5E5"> that is really important if you</font>

52
00:02:24,820 --> 00:02:28,480
look at internals

53
00:02:25,840 --> 00:02:32,230
it's the liner binary and it's in the

54
00:02:28,480 --> 00:02:37,230
ASL liner AC bin liner<font color="#E5E5E5"> year</font><font color="#CCCCCC"> in hockey</font>

55
00:02:32,230 --> 00:02:40,090
<font color="#E5E5E5">and it's basically</font><font color="#CCCCCC"> 50 to 80 make elf</font>

56
00:02:37,230 --> 00:02:42,130
<font color="#E5E5E5">containing all the AC features so that's</font>

57
00:02:40,090 --> 00:02:43,540
that's what you want to analyze<font color="#E5E5E5"> or if</font>

58
00:02:42,130 --> 00:02:46,900
you do some reverse engineering for

59
00:02:43,540 --> 00:02:48,250
example<font color="#CCCCCC"> and from from an ethical point</font>

60
00:02:46,900 --> 00:02:50,110
of<font color="#E5E5E5"> view it's quite a critical device</font>

61
00:02:48,250 --> 00:02:51,820
because<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> to beyond repo into</font><font color="#CCCCCC"> the</font>

62
00:02:50,110 --> 00:02:54,910
whole<font color="#E5E5E5"> network so basically if you</font>

63
00:02:51,820 --> 00:02:58,000
control the<font color="#E5E5E5"> device you can access VPN</font>

64
00:02:54,910 --> 00:03:00,060
information routing information access

65
00:02:58,000 --> 00:03:02,590
credentials<font color="#E5E5E5"> that goes through the router</font>

66
00:03:00,060 --> 00:03:03,880
<font color="#CCCCCC">and basically you you it's a non-tree</font>

67
00:03:02,590 --> 00:03:08,290
point for the for the<font color="#E5E5E5"> rest of the</font>

68
00:03:03,880 --> 00:03:09,100
network<font color="#CCCCCC"> the device the small device that</font>

69
00:03:08,290 --> 00:03:11,470
is on the top

70
00:03:09,100 --> 00:03:13,090
it's an AAS a five five oh five<font color="#E5E5E5"> and if</font>

71
00:03:11,470 --> 00:03:15,580
you<font color="#E5E5E5"> want to do some Cisco</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> research</font>

72
00:03:13,090 --> 00:03:17,800
<font color="#E5E5E5">that that's the way to start that's how</font>

73
00:03:15,580 --> 00:03:21,910
we<font color="#E5E5E5"> started our</font><font color="#CCCCCC"> research</font><font color="#E5E5E5"> it's a cheap</font>

74
00:03:17,800 --> 00:03:23,709
device and it's good to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> started to</font>

75
00:03:21,910 --> 00:03:27,070
give you<font color="#E5E5E5"> an overview of what is</font><font color="#CCCCCC"> inside</font>

76
00:03:23,709 --> 00:03:30,040
this is<font color="#E5E5E5"> a</font><font color="#CCCCCC"> 505 so this is a top view</font>

77
00:03:27,070 --> 00:03:32,260
<font color="#E5E5E5">where we</font><font color="#CCCCCC"> remove</font><font color="#E5E5E5"> the top</font><font color="#CCCCCC"> just removing</font>

78
00:03:30,040 --> 00:03:35,440
some screws<font color="#E5E5E5"> and basically you have a</font>

79
00:03:32,260 --> 00:03:39,190
<font color="#E5E5E5">safeguard</font><font color="#CCCCCC"> a compact flash card which</font>

80
00:03:35,440 --> 00:03:40,840
basically<font color="#CCCCCC"> contains the firmware so it's</font>

81
00:03:39,190 --> 00:03:42,959
a it's a flat<font color="#E5E5E5"> file system containing</font>

82
00:03:40,840 --> 00:03:47,410
files and one of<font color="#CCCCCC"> the immediate former</font>

83
00:03:42,959 --> 00:03:50,590
<font color="#CCCCCC">you have some RAM so if you want</font><font color="#E5E5E5"> to get</font>

84
00:03:47,410 --> 00:03:52,180
more<font color="#E5E5E5"> RAM or improve it you can it</font>

85
00:03:50,590 --> 00:03:54,790
contains several<font color="#E5E5E5"> it input</font><font color="#CCCCCC"> obviously</font>

86
00:03:52,180 --> 00:03:57,940
<font color="#E5E5E5">because it's a router firewall and it</font>

87
00:03:54,790 --> 00:04:01,209
also contains<font color="#CCCCCC"> a serial port that's the</font>

88
00:03:57,940 --> 00:04:02,859
one that<font color="#E5E5E5"> is used when you want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> set up</font>

89
00:04:01,209 --> 00:04:04,540
<font color="#E5E5E5">your firewall and</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> have any</font>

90
00:04:02,860 --> 00:04:06,489
network<font color="#E5E5E5"> here to</font><font color="#CCCCCC"> access</font><font color="#E5E5E5"> it you</font><font color="#CCCCCC"> basically</font>

91
00:04:04,540 --> 00:04:09,160
use<font color="#E5E5E5"> the serial port ports to connect to</font>

92
00:04:06,489 --> 00:04:11,880
the Cisco common line interface and set

93
00:04:09,160 --> 00:04:15,190
it up and<font color="#E5E5E5"> then you can continue</font>

94
00:04:11,880 --> 00:04:17,260
<font color="#E5E5E5">configuring it later using SSH that you</font>

95
00:04:15,190 --> 00:04:19,870
first<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use a physical</font><font color="#CCCCCC"> access to</font>

96
00:04:17,260 --> 00:04:22,599
<font color="#E5E5E5">configure it obviously and it's also</font>

97
00:04:19,870 --> 00:04:24,400
used if you<font color="#E5E5E5"> want to debug it</font><font color="#CCCCCC"> because you</font>

98
00:04:22,600 --> 00:04:25,960
can actually<font color="#E5E5E5"> enable a debugger we're</font>

99
00:04:24,400 --> 00:04:26,590
going to talk<font color="#CCCCCC"> about that</font><font color="#E5E5E5"> a gdb the</font>

100
00:04:25,960 --> 00:04:30,638
burglar

101
00:04:26,590 --> 00:04:32,859
access it over the circle<font color="#CCCCCC"> port another</font>

102
00:04:30,639 --> 00:04:36,630
thing<font color="#E5E5E5"> that we didn't know before</font><font color="#CCCCCC"> doing</font>

103
00:04:32,860 --> 00:04:40,020
our research<font color="#E5E5E5"> and there isn't any any</font>

104
00:04:36,630 --> 00:04:42,700
public research as<font color="#CCCCCC"> far as we know on</font>

105
00:04:40,020 --> 00:04:45,159
debugging<font color="#E5E5E5"> virtual environments but</font>

106
00:04:42,700 --> 00:04:48,340
basically if you if you<font color="#E5E5E5"> are interested</font>

107
00:04:45,160 --> 00:04:50,620
in configuring<font color="#E5E5E5"> a Cisco a Cisco Network</font>

108
00:04:48,340 --> 00:04:53,260
in general you<font color="#E5E5E5"> can use what</font><font color="#CCCCCC"> a software</font>

109
00:04:50,620 --> 00:04:55,150
called gns3<font color="#E5E5E5"> so I don't think it's made</font>

110
00:04:53,260 --> 00:04:57,870
by Cisco but it's it's<font color="#E5E5E5"> something that</font>

111
00:04:55,150 --> 00:05:00,520
allows<font color="#CCCCCC"> you to</font><font color="#E5E5E5"> emulate cisco iOS devices</font>

112
00:04:57,870 --> 00:05:07,320
<font color="#E5E5E5">but</font><font color="#CCCCCC"> it actually also it's also possible</font>

113
00:05:00,520 --> 00:05:10,450
to emulate<font color="#CCCCCC"> ASSA devices cisco de</font><font color="#E5E5E5"> sá so a</font>

114
00:05:07,320 --> 00:05:12,550
<font color="#CCCCCC">jeunesse 3 supports what they call a SAV</font>

115
00:05:10,450 --> 00:05:15,430
<font color="#E5E5E5">which is a</font><font color="#CCCCCC"> severe two lies and</font>

116
00:05:12,550 --> 00:05:19,139
underneath<font color="#CCCCCC"> it's based on qmu</font><font color="#E5E5E5"> to actually</font>

117
00:05:15,430 --> 00:05:22,120
emulate the hardware and<font color="#CCCCCC"> everything but</font>

118
00:05:19,139 --> 00:05:25,440
you<font color="#CCCCCC"> don't really need to know all that</font>

119
00:05:22,120 --> 00:05:29,650
<font color="#E5E5E5">to</font><font color="#CCCCCC"> actually have a debugging environment</font>

120
00:05:25,440 --> 00:05:33,070
<font color="#E5E5E5">we're going to talk about that so this</font>

121
00:05:29,650 --> 00:05:35,560
research<font color="#E5E5E5"> as this has been based on on</font>

122
00:05:33,070 --> 00:05:38,800
the fact that human abilities were

123
00:05:35,560 --> 00:05:42,310
released last<font color="#CCCCCC"> year and we wanted to</font><font color="#E5E5E5"> know</font>

124
00:05:38,800 --> 00:05:45,910
how what<font color="#CCCCCC"> was the impact</font><font color="#E5E5E5"> of these</font><font color="#CCCCCC"> new</font>

125
00:05:42,310 --> 00:05:47,020
abilities<font color="#E5E5E5"> we we do a lot of pen test and</font>

126
00:05:45,910 --> 00:05:49,539
we have lots of customers<font color="#CCCCCC"> that have</font>

127
00:05:47,020 --> 00:05:52,719
<font color="#CCCCCC">cisco</font><font color="#E5E5E5"> ESS firewalls</font><font color="#CCCCCC"> and we wanted to</font>

128
00:05:49,539 --> 00:05:55,300
<font color="#E5E5E5">know is it</font><font color="#CCCCCC"> really does it have an impact</font>

129
00:05:52,720 --> 00:05:59,350
<font color="#E5E5E5">so we</font><font color="#CCCCCC"> basically looked</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> exotics</font>

130
00:05:55,300 --> 00:06:02,770
<font color="#E5E5E5">Intel Ikey heap overflow in the Cisco</font>

131
00:05:59,350 --> 00:06:05,350
fragmentation payload so this bug is in

132
00:06:02,770 --> 00:06:07,030
my opinion quite important in that<font color="#E5E5E5"> it's</font>

133
00:06:05,350 --> 00:06:11,470
<font color="#E5E5E5">pre or thought it occasion because Ikey</font>

134
00:06:07,030 --> 00:06:15,489
is used to establish a VPN to<font color="#CCCCCC"> your to</font>

135
00:06:11,470 --> 00:06:18,340
your network but<font color="#CCCCCC"> I</font><font color="#E5E5E5"> key is the protocol</font>

136
00:06:15,490 --> 00:06:21,010
<font color="#E5E5E5">actually negotiates this VP and</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> pre</font>

137
00:06:18,340 --> 00:06:22,960
altercation once you've established your

138
00:06:21,010 --> 00:06:25,240
connection you're not using<font color="#CCCCCC"> IKEA</font><font color="#E5E5E5"> anymore</font>

139
00:06:22,960 --> 00:06:29,049
<font color="#E5E5E5">but here it's a key itself so it's</font>

140
00:06:25,240 --> 00:06:31,539
<font color="#CCCCCC">preauth and usually it's available on</font>

141
00:06:29,050 --> 00:06:33,490
<font color="#E5E5E5">the internet so you can most of the time</font>

142
00:06:31,539 --> 00:06:34,990
you<font color="#E5E5E5"> want to access the VPN from the</font>

143
00:06:33,490 --> 00:06:39,010
outside that's what a VPN<font color="#E5E5E5"> is used for</font>

144
00:06:34,990 --> 00:06:40,300
right so this they published an exploit

145
00:06:39,010 --> 00:06:42,039
for<font color="#E5E5E5"> it which worked for</font>

146
00:06:40,300 --> 00:06:45,720
specific version but it wasn't like<font color="#CCCCCC"> a</font>

147
00:06:42,040 --> 00:06:49,750
weaponized<font color="#E5E5E5"> exploit another interesting</font>

148
00:06:45,720 --> 00:06:54,850
<font color="#E5E5E5">penalty</font><font color="#CCCCCC"> that was were that was patched</font>

149
00:06:49,750 --> 00:06:57,730
<font color="#E5E5E5">as well is the SNMP</font><font color="#CCCCCC"> Stack</font><font color="#E5E5E5"> Overflow</font><font color="#CCCCCC"> in</font>

150
00:06:54,850 --> 00:06:59,890
the way they passed the object ID<font color="#CCCCCC"> this</font>

151
00:06:57,730 --> 00:07:03,720
one was released as<font color="#CCCCCC"> part of the Shadow</font>

152
00:06:59,890 --> 00:07:06,159
Broker<font color="#E5E5E5"> League in August of</font><font color="#CCCCCC"> last year and</font>

153
00:07:03,720 --> 00:07:09,430
because it targets<font color="#E5E5E5"> SNMP most of the time</font>

154
00:07:06,160 --> 00:07:11,140
SNMP is used<font color="#E5E5E5"> internally and also</font><font color="#CCCCCC"> its</font>

155
00:07:09,430 --> 00:07:12,970
post<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Education</font><font color="#E5E5E5"> meaning you need to</font>

156
00:07:11,140 --> 00:07:15,520
know the like the shared secret which is

157
00:07:12,970 --> 00:07:19,420
<font color="#CCCCCC">the</font><font color="#E5E5E5"> community string for SNMP to</font>

158
00:07:15,520 --> 00:07:20,890
<font color="#E5E5E5">actually be able</font><font color="#CCCCCC"> to use it what was it</font>

159
00:07:19,420 --> 00:07:23,110
<font color="#CCCCCC">what is interesting is it's a Stack</font>

160
00:07:20,890 --> 00:07:26,520
<font color="#CCCCCC">Overflow so it's and it's been here for</font>

161
00:07:23,110 --> 00:07:30,580
many years<font color="#CCCCCC"> it</font><font color="#E5E5E5"> targets a lot of devices</font>

162
00:07:26,520 --> 00:07:32,530
<font color="#CCCCCC">the last and final interesting aspect is</font>

163
00:07:30,580 --> 00:07:34,750
<font color="#E5E5E5">that for most of this</font><font color="#CCCCCC"> bug you</font><font color="#E5E5E5"> actually</font>

164
00:07:32,530 --> 00:07:37,210
it's easier to exploit if you actually

165
00:07:34,750 --> 00:07:40,390
<font color="#E5E5E5">know the versions of the</font><font color="#CCCCCC"> ACA beforehand</font>

166
00:07:37,210 --> 00:07:42,640
and to do that we figure out<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font>

167
00:07:40,390 --> 00:07:45,640
can<font color="#E5E5E5"> actually use other bugs like web</font><font color="#CCCCCC"> bpn</font>

168
00:07:42,640 --> 00:07:48,520
<font color="#CCCCCC">leak</font><font color="#E5E5E5"> where you basically talk HTTPS or</font>

169
00:07:45,640 --> 00:07:52,390
HTTP yeah you talk HTTP which<font color="#E5E5E5"> is</font>

170
00:07:48,520 --> 00:07:54,880
<font color="#E5E5E5">encrypted with SSL HTTPS and you target</font>

171
00:07:52,390 --> 00:07:56,919
the HTTP protocol<font color="#E5E5E5"> and you find a</font><font color="#CCCCCC"> way to</font>

172
00:07:54,880 --> 00:07:58,990
relieve the versions in that the server

173
00:07:56,920 --> 00:08:01,030
will return<font color="#E5E5E5"> an error indicating the</font><font color="#CCCCCC"> AC</font>

174
00:07:58,990 --> 00:08:03,280
<font color="#E5E5E5">version and you think that you can</font>

175
00:08:01,030 --> 00:08:07,659
combine bugs and exploits<font color="#E5E5E5"> for example</font>

176
00:08:03,280 --> 00:08:10,380
the IP overflow so what do what<font color="#E5E5E5"> did we</font>

177
00:08:07,660 --> 00:08:13,240
do<font color="#E5E5E5"> from that so we wanted to weaponize</font>

178
00:08:10,380 --> 00:08:15,600
exploit and figure out how it's<font color="#E5E5E5"> easy or</font>

179
00:08:13,240 --> 00:08:19,330
<font color="#E5E5E5">not this kind of thing and we basically</font>

180
00:08:15,600 --> 00:08:22,480
had a constraint<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> cisco sa</font>

181
00:08:19,330 --> 00:08:24,070
versions you have<font color="#CCCCCC"> 200 different versions</font>

182
00:08:22,480 --> 00:08:28,300
so<font color="#CCCCCC"> how do you how do</font><font color="#E5E5E5"> you deal with that</font>

183
00:08:24,070 --> 00:08:30,490
<font color="#E5E5E5">so we started our</font><font color="#CCCCCC"> research</font><font color="#E5E5E5"> by using like</font>

184
00:08:28,300 --> 00:08:33,130
gdb<font color="#CCCCCC"> and existing tools and it started to</font>

185
00:08:30,490 --> 00:08:34,900
<font color="#CCCCCC">be really</font><font color="#E5E5E5"> annoying</font><font color="#CCCCCC"> for us so we had to</font>

186
00:08:33,130 --> 00:08:37,299
build some tools<font color="#CCCCCC"> to</font><font color="#E5E5E5"> help us doing this</font>

187
00:08:34,900 --> 00:08:39,850
<font color="#E5E5E5">and also we wanted to analyze internals</font>

188
00:08:37,299 --> 00:08:42,760
<font color="#E5E5E5">so what we did is</font><font color="#CCCCCC"> we basically</font><font color="#E5E5E5"> built a</font>

189
00:08:39,850 --> 00:08:45,730
tool called<font color="#E5E5E5"> a</font><font color="#CCCCCC"> safer myrrh which help us</font>

190
00:08:42,760 --> 00:08:48,160
<font color="#E5E5E5">to analyze firmers in general to unpack</font>

191
00:08:45,730 --> 00:08:50,950
and repack them<font color="#E5E5E5"> and we also needed that</font>

192
00:08:48,160 --> 00:08:52,310
for debugging<font color="#E5E5E5"> because sometimes we there</font>

193
00:08:50,950 --> 00:08:55,220
is<font color="#E5E5E5"> no debug the program</font>

194
00:08:52,310 --> 00:08:57,138
<font color="#CCCCCC">gdb</font><font color="#E5E5E5"> in the firmer or you want to analyze</font>

195
00:08:55,220 --> 00:08:59,600
<font color="#CCCCCC">- we want</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> enable</font><font color="#E5E5E5"> enable</font><font color="#CCCCCC"> certain</font>

196
00:08:57,139 --> 00:09:02,029
<font color="#E5E5E5">features or maybe disable</font><font color="#CCCCCC"> SLR for -</font><font color="#E5E5E5"> is</font>

197
00:08:59,600 --> 00:09:04,279
debugging so we needed a<font color="#CCCCCC"> way to unpack</font>

198
00:09:02,029 --> 00:09:06,079
repack<font color="#E5E5E5"> firmware the second thing we</font>

199
00:09:04,279 --> 00:09:08,449
needed is<font color="#E5E5E5"> a way to deal with</font><font color="#CCCCCC"> different</font>

200
00:09:06,079 --> 00:09:10,878
<font color="#E5E5E5">firmer because</font><font color="#CCCCCC"> we had 200 firmer and if</font>

201
00:09:08,449 --> 00:09:13,040
you want to analyze<font color="#E5E5E5"> mitigations or</font>

202
00:09:10,879 --> 00:09:15,709
things in<font color="#E5E5E5"> different primer or even</font>

203
00:09:13,040 --> 00:09:17,509
retrieving symbols<font color="#CCCCCC"> you need a way</font><font color="#E5E5E5"> to</font>

204
00:09:15,709 --> 00:09:20,599
automate<font color="#E5E5E5"> that otherwise it's going to be</font>

205
00:09:17,509 --> 00:09:24,800
<font color="#E5E5E5">a really painful job and I wouldn't</font><font color="#CCCCCC"> be</font>

206
00:09:20,600 --> 00:09:27,589
here today<font color="#CCCCCC"> and then obviously we need to</font>

207
00:09:24,800 --> 00:09:29,689
debug<font color="#E5E5E5"> it and see the differences between</font>

208
00:09:27,589 --> 00:09:32,329
different<font color="#E5E5E5"> versions</font><font color="#CCCCCC"> so that's the role of</font>

209
00:09:29,689 --> 00:09:33,589
a<font color="#CCCCCC"> sa dbg</font><font color="#E5E5E5"> so this presentation is going</font>

210
00:09:32,329 --> 00:09:36,579
to<font color="#E5E5E5"> be about presenting</font><font color="#CCCCCC"> you these three</font>

211
00:09:33,589 --> 00:09:39,019
tools and what were the challenges and

212
00:09:36,579 --> 00:09:42,138
these three tools allowed us to

213
00:09:39,019 --> 00:09:45,110
basically<font color="#E5E5E5"> build weaponize able exploit</font>

214
00:09:42,139 --> 00:09:48,019
for almost<font color="#E5E5E5"> 200 versions on different</font>

215
00:09:45,110 --> 00:09:54,680
architectures and<font color="#CCCCCC"> for different versions</font>

216
00:09:48,019 --> 00:09:58,240
<font color="#CCCCCC">of the protocol ok let's go so let's</font>

217
00:09:54,680 --> 00:10:04,489
talk about<font color="#E5E5E5"> the first thing which is</font>

218
00:09:58,240 --> 00:10:06,439
analyzing<font color="#CCCCCC"> the</font><font color="#E5E5E5"> firmer so the firmer you</font>

219
00:10:04,490 --> 00:10:08,329
can either<font color="#E5E5E5"> get it from the safeguard</font>

220
00:10:06,439 --> 00:10:10,189
which I told you<font color="#CCCCCC"> earlier but</font><font color="#E5E5E5"> if you want</font>

221
00:10:08,329 --> 00:10:12,709
to get different<font color="#CCCCCC"> framer four different</font>

222
00:10:10,189 --> 00:10:15,019
versions<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can actually do it if you</font>

223
00:10:12,709 --> 00:10:18,859
have a<font color="#E5E5E5"> Cisco account you can download</font>

224
00:10:15,019 --> 00:10:22,250
them from<font color="#CCCCCC"> the interweb sites if not you</font>

225
00:10:18,860 --> 00:10:24,439
<font color="#CCCCCC">can actually find most of them on</font><font color="#E5E5E5"> Google</font>

226
00:10:22,250 --> 00:10:27,829
<font color="#E5E5E5">because you have lots of people that</font>

227
00:10:24,439 --> 00:10:29,449
need access to their Cisco<font color="#E5E5E5"> a safer more</font>

228
00:10:27,829 --> 00:10:32,628
at some<font color="#E5E5E5"> point and so they share them on</font>

229
00:10:29,449 --> 00:10:35,599
their<font color="#CCCCCC"> public websites</font><font color="#E5E5E5"> but anyway if you</font>

230
00:10:32,629 --> 00:10:38,569
find one<font color="#E5E5E5"> firmer on the Internet I advise</font>

231
00:10:35,600 --> 00:10:41,449
you<font color="#CCCCCC"> to check the md5 against the Cisco</font>

232
00:10:38,569 --> 00:10:44,240
<font color="#E5E5E5">websites just</font><font color="#CCCCCC"> in case otherwise you may</font>

233
00:10:41,449 --> 00:10:50,269
install backdoored

234
00:10:44,240 --> 00:10:53,480
firmware<font color="#CCCCCC"> so the way the name the former</font>

235
00:10:50,269 --> 00:10:55,819
is a<font color="#E5E5E5"> sa then the versions dot</font><font color="#CCCCCC"> beam</font>

236
00:10:53,480 --> 00:10:59,089
basically and so you for<font color="#E5E5E5"> example you</font>

237
00:10:55,819 --> 00:11:02,089
have a<font color="#CCCCCC"> sa nine to four dot bin and you</font>

238
00:10:59,089 --> 00:11:04,540
have a sa nine to four<font color="#CCCCCC"> SNP dog bin so</font>

239
00:11:02,089 --> 00:11:07,510
SMP<font color="#CCCCCC"> is for multi processing but</font>

240
00:11:04,540 --> 00:11:09,699
actually we figured out that<font color="#E5E5E5"> usually</font>

241
00:11:07,510 --> 00:11:13,449
most of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> time it's a</font><font color="#E5E5E5"> 64-bit so if you</font>

242
00:11:09,699 --> 00:11:19,300
have SMP<font color="#CCCCCC"> Britisher it's gonna be</font><font color="#E5E5E5"> sm 64</font>

243
00:11:13,449 --> 00:11:23,589
bit<font color="#CCCCCC"> and then you have a si 96 one SNP</font>

244
00:11:19,300 --> 00:11:25,839
<font color="#CCCCCC">versus a SAV 96</font><font color="#E5E5E5"> 1 dot</font><font color="#CCCCCC"> cuoco and in</font><font color="#E5E5E5"> this</font>

245
00:11:23,589 --> 00:11:28,120
case the first<font color="#E5E5E5"> one is</font><font color="#CCCCCC"> 64-bit like we</font>

246
00:11:25,839 --> 00:11:31,240
said<font color="#E5E5E5"> and the a say V is for</font><font color="#CCCCCC"> visualised</font>

247
00:11:28,120 --> 00:11:35,709
<font color="#E5E5E5">so the second one is to load in gns3</font><font color="#CCCCCC"> and</font>

248
00:11:31,240 --> 00:11:37,240
it has a different extension<font color="#E5E5E5"> so the</font>

249
00:11:35,709 --> 00:11:39,899
first thing we tried is basically to

250
00:11:37,240 --> 00:11:43,149
analyze the firmer<font color="#CCCCCC"> if you do some</font>

251
00:11:39,899 --> 00:11:46,149
embedded analysis<font color="#E5E5E5"> analysis of embedded</font>

252
00:11:43,149 --> 00:11:47,529
devices<font color="#E5E5E5"> you pretty you I'm pretty sure</font>

253
00:11:46,149 --> 00:11:50,740
you know<font color="#CCCCCC"> beam work</font><font color="#E5E5E5"> because it's the</font>

254
00:11:47,529 --> 00:11:52,000
Swiss Army knife for<font color="#CCCCCC"> analyzing RAW files</font>

255
00:11:50,740 --> 00:11:54,279
<font color="#E5E5E5">where you don't know what's going on</font>

256
00:11:52,000 --> 00:11:56,800
inside<font color="#E5E5E5"> and it's been</font><font color="#CCCCCC"> developed by delta</font>

257
00:11:54,279 --> 00:11:59,620
<font color="#E5E5E5">T y</font><font color="#CCCCCC"> a0 and basically you just say bin</font>

258
00:11:56,800 --> 00:12:01,420
work<font color="#CCCCCC"> - E -</font><font color="#E5E5E5"> extract and then the firmer</font>

259
00:11:59,620 --> 00:12:04,779
<font color="#E5E5E5">and it will basically list you what is</font>

260
00:12:01,420 --> 00:12:08,290
<font color="#E5E5E5">inside and extract it so in this case we</font>

261
00:12:04,779 --> 00:12:13,930
can see<font color="#CCCCCC"> that it</font><font color="#E5E5E5"> has a gzip and then a</font>

262
00:12:08,290 --> 00:12:16,329
second<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> - gzip files and if you</font>

263
00:12:13,930 --> 00:12:18,910
look at the<font color="#E5E5E5"> actual files</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually</font>

264
00:12:16,329 --> 00:12:20,620
contains so bin work is clever because

265
00:12:18,910 --> 00:12:24,279
if notice the gzip so it will just

266
00:12:20,620 --> 00:12:27,699
extract it for us<font color="#E5E5E5"> and you get an elf and</font>

267
00:12:24,279 --> 00:12:29,980
a<font color="#CCCCCC"> CPU archive and in the case</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> cpu</font>

268
00:12:27,699 --> 00:12:32,469
archive it<font color="#CCCCCC"> also renamed it</font><font color="#E5E5E5"> to route FS</font>

269
00:12:29,980 --> 00:12:34,690
<font color="#E5E5E5">that IMG because it found the name into</font>

270
00:12:32,470 --> 00:12:37,779
the listing above in blue with<font color="#E5E5E5"> FS</font><font color="#CCCCCC"> the</font>

271
00:12:34,690 --> 00:12:40,360
time G so the elf<font color="#E5E5E5"> is actually the Linux</font>

272
00:12:37,779 --> 00:12:42,100
<font color="#E5E5E5">kernel and the route FS is actually the</font>

273
00:12:40,360 --> 00:12:43,449
<font color="#CCCCCC">filesystem so we're here we're</font>

274
00:12:42,100 --> 00:12:44,230
interested in<font color="#E5E5E5"> in looking at the</font>

275
00:12:43,449 --> 00:12:47,800
<font color="#CCCCCC">filesystem</font>

276
00:12:44,230 --> 00:12:51,880
so we use a<font color="#E5E5E5"> cpio tool to</font><font color="#CCCCCC"> actually deal</font>

277
00:12:47,800 --> 00:12:53,800
with unpacking the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> root FS</font><font color="#E5E5E5"> and using</font>

278
00:12:51,880 --> 00:12:55,959
that<font color="#E5E5E5"> we figure out</font><font color="#CCCCCC"> that indeed</font><font color="#E5E5E5"> it's a</font>

279
00:12:53,800 --> 00:12:59,439
Linux system<font color="#E5E5E5"> and it contains a specific</font>

280
00:12:55,959 --> 00:13:03,638
<font color="#CCCCCC">si folder</font><font color="#E5E5E5"> so we can check</font><font color="#CCCCCC"> that the AC</font>

281
00:12:59,440 --> 00:13:05,920
bin liner is elf<font color="#CCCCCC"> 32-bit in this case so</font>

282
00:13:03,639 --> 00:13:08,110
<font color="#E5E5E5">it confirmed what</font><font color="#CCCCCC"> I said earlier</font>

283
00:13:05,920 --> 00:13:11,170
Linux<font color="#CCCCCC"> plus case a folder and Intel</font>

284
00:13:08,110 --> 00:13:14,980
Architecture so now we have a way to

285
00:13:11,170 --> 00:13:16,810
unpack<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> but it would be nice</font><font color="#CCCCCC"> to be</font>

286
00:13:14,980 --> 00:13:17,680
able to repack<font color="#E5E5E5"> because in some case</font>

287
00:13:16,810 --> 00:13:19,689
we're gonna<font color="#E5E5E5"> need that</font>

288
00:13:17,680 --> 00:13:21,550
and if<font color="#E5E5E5"> we look at it further idea at the</font>

289
00:13:19,689 --> 00:13:24,639
<font color="#E5E5E5">actual format we can</font><font color="#CCCCCC"> figure</font><font color="#E5E5E5"> out that</font>

290
00:13:21,550 --> 00:13:26,170
there<font color="#CCCCCC"> is a root F s and then yeah</font><font color="#E5E5E5"> the</font>

291
00:13:24,639 --> 00:13:28,749
root<font color="#CCCCCC"> FS because you can figure out the</font>

292
00:13:26,170 --> 00:13:32,769
<font color="#E5E5E5">GZ magic and the root</font><font color="#CCCCCC"> FS that IM g</font>

293
00:13:28,749 --> 00:13:35,679
string<font color="#CCCCCC"> and then you have</font><font color="#E5E5E5"> a little after</font>

294
00:13:32,769 --> 00:13:40,110
you have the<font color="#E5E5E5"> linux kernel which has a</font>

295
00:13:35,679 --> 00:13:43,300
specific<font color="#CCCCCC"> string</font><font color="#E5E5E5"> direct booting from an</font>

296
00:13:40,110 --> 00:13:45,519
gzip magic as<font color="#CCCCCC"> well and then at the very</font>

297
00:13:43,300 --> 00:13:47,498
end<font color="#E5E5E5"> kind of you have the Linux kernel</font>

298
00:13:45,519 --> 00:13:50,019
<font color="#CCCCCC">command line which is a long</font><font color="#E5E5E5"> string</font><font color="#CCCCCC"> that</font>

299
00:13:47,499 --> 00:13:52,899
<font color="#CCCCCC">is</font><font color="#E5E5E5"> passed to the kernel to indicate lots</font>

300
00:13:50,019 --> 00:13:55,839
of arguments<font color="#E5E5E5"> and before this Linux</font>

301
00:13:52,899 --> 00:13:58,480
kernel<font color="#E5E5E5"> command line you have</font><font color="#CCCCCC"> to two</font>

302
00:13:55,839 --> 00:14:00,879
integers which<font color="#E5E5E5"> basically correspond to</font>

303
00:13:58,480 --> 00:14:02,499
<font color="#E5E5E5">the kernel side and the root FS size so</font>

304
00:14:00,879 --> 00:14:05,439
it's<font color="#E5E5E5"> not documented but you can figure</font>

305
00:14:02,499 --> 00:14:08,319
<font color="#E5E5E5">that</font><font color="#CCCCCC"> out just because bin will</font><font color="#E5E5E5"> give you</font>

306
00:14:05,439 --> 00:14:10,118
the files so you can<font color="#E5E5E5"> figure where the</font>

307
00:14:08,319 --> 00:14:11,920
size of the actual gzip and then just

308
00:14:10,119 --> 00:14:13,769
figure out where<font color="#E5E5E5"> it's stored somewhere</font>

309
00:14:11,920 --> 00:14:15,939
and then figure out<font color="#E5E5E5"> oh that's the two</font>

310
00:14:13,769 --> 00:14:18,179
next<font color="#CCCCCC"> to each</font><font color="#E5E5E5"> other and pretty sure it</font>

311
00:14:15,939 --> 00:14:20,379
<font color="#CCCCCC">decides and</font><font color="#E5E5E5"> then you can just test</font>

312
00:14:18,179 --> 00:14:23,439
modifying them and see what happens<font color="#E5E5E5"> so</font>

313
00:14:20,379 --> 00:14:27,910
<font color="#CCCCCC">for</font><font color="#E5E5E5"> example here we</font><font color="#CCCCCC"> can unpack</font><font color="#E5E5E5"> the root</font>

314
00:14:23,439 --> 00:14:29,589
FS modify files<font color="#E5E5E5"> repack it and as long as</font>

315
00:14:27,910 --> 00:14:32,379
<font color="#E5E5E5">the root of s that we pre-packed</font>

316
00:14:29,589 --> 00:14:34,480
is shorter than the<font color="#E5E5E5"> actual root of s we</font>

317
00:14:32,379 --> 00:14:36,879
can re-inject it<font color="#CCCCCC"> budge the size and it's</font>

318
00:14:34,480 --> 00:14:38,290
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> work so you're gonna say</font><font color="#CCCCCC"> okay but</font>

319
00:14:36,879 --> 00:14:39,819
how do you<font color="#E5E5E5"> inject new files well</font>

320
00:14:38,290 --> 00:14:42,339
actually you<font color="#CCCCCC"> can delete all the files</font>

321
00:14:39,819 --> 00:14:44,469
that<font color="#CCCCCC"> are not used</font><font color="#E5E5E5"> so actually it works</font>

322
00:14:42,339 --> 00:14:47,679
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> just without knowing the</font><font color="#E5E5E5"> whole</font>

323
00:14:44,470 --> 00:14:49,170
<font color="#E5E5E5">format you can modify it and it was</font>

324
00:14:47,679 --> 00:14:52,839
going to be accepted by the actual

325
00:14:49,170 --> 00:14:54,329
device so we have a way to unpack and

326
00:14:52,839 --> 00:14:59,439
repack firmware<font color="#E5E5E5"> that's what we wanted</font>

327
00:14:54,329 --> 00:15:00,910
for the<font color="#CCCCCC"> Keuka format actually we were</font>

328
00:14:59,439 --> 00:15:03,189
like<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna have to do something</font>

329
00:15:00,910 --> 00:15:05,980
similar<font color="#CCCCCC"> but kyouko is actually a</font>

330
00:15:03,189 --> 00:15:08,649
<font color="#E5E5E5">well-known format known by use by</font><font color="#CCCCCC"> Q mu</font>

331
00:15:05,980 --> 00:15:10,990
<font color="#E5E5E5">it's basically a way</font><font color="#CCCCCC"> to have different</font>

332
00:15:08,649 --> 00:15:13,720
partitions and<font color="#CCCCCC"> q mu will handle these</font>

333
00:15:10,990 --> 00:15:16,689
different partitions and so because gns3

334
00:15:13,720 --> 00:15:22,779
is based on on<font color="#CCCCCC"> q mu you can</font><font color="#E5E5E5"> use standard</font>

335
00:15:16,689 --> 00:15:24,879
QQ<font color="#E5E5E5"> code tools so you basically connect</font><font color="#CCCCCC"> q</font>

336
00:15:22,779 --> 00:15:26,889
code to a specific device<font color="#E5E5E5"> and then you</font>

337
00:15:24,879 --> 00:15:28,410
can mount partitions<font color="#CCCCCC"> so in this case the</font>

338
00:15:26,889 --> 00:15:30,030
first partitions

339
00:15:28,410 --> 00:15:32,850
we can see that<font color="#E5E5E5"> it contains several</font>

340
00:15:30,030 --> 00:15:35,430
files like the grab and<font color="#E5E5E5"> it also contains</font>

341
00:15:32,850 --> 00:15:37,670
an<font color="#CCCCCC"> a a</font><font color="#E5E5E5"> set up in so then we can come</font>

342
00:15:35,430 --> 00:15:43,319
<font color="#CCCCCC">back to what we already knew and</font>

343
00:15:37,670 --> 00:15:45,420
everything<font color="#E5E5E5"> applies so we are able</font><font color="#CCCCCC"> to</font>

344
00:15:43,320 --> 00:15:48,330
<font color="#E5E5E5">unpack</font><font color="#CCCCCC"> and repack</font><font color="#E5E5E5"> because we can mount</font>

345
00:15:45,420 --> 00:15:51,329
the thing<font color="#E5E5E5"> so this is how we build a SF</font>

346
00:15:48,330 --> 00:15:52,710
<font color="#CCCCCC">firm where we basically support we have</font>

347
00:15:51,330 --> 00:15:54,540
different modules the<font color="#CCCCCC"> first one in the</font>

348
00:15:52,710 --> 00:15:58,050
<font color="#CCCCCC">Cukor</font><font color="#E5E5E5"> module which will basically allow</font>

349
00:15:54,540 --> 00:16:01,170
us to mount the partitions to<font color="#E5E5E5"> end-to-end</font>

350
00:15:58,050 --> 00:16:04,170
<font color="#CCCCCC">package we access the bin the bin module</font>

351
00:16:01,170 --> 00:16:06,660
will handle the<font color="#CCCCCC"> the bin format and will</font>

352
00:16:04,170 --> 00:16:09,120
allow<font color="#E5E5E5"> us to unpack the root of s and</font>

353
00:16:06,660 --> 00:16:12,420
then from the root EFS we can use cpio

354
00:16:09,120 --> 00:16:14,460
to access liner<font color="#E5E5E5"> once we have liner which</font>

355
00:16:12,420 --> 00:16:18,420
<font color="#E5E5E5">is the main Cisco binary sequence a</font>

356
00:16:14,460 --> 00:16:23,040
binary<font color="#E5E5E5"> we can patch it optionally</font>

357
00:16:18,420 --> 00:16:26,310
modifying the actual<font color="#E5E5E5"> features and then</font>

358
00:16:23,040 --> 00:16:29,219
we can reenact<font color="#CCCCCC"> it into the</font><font color="#E5E5E5"> route FS</font><font color="#CCCCCC"> even</font>

359
00:16:26,310 --> 00:16:32,130
we<font color="#E5E5E5"> can modify some</font><font color="#CCCCCC"> files like modifying</font>

360
00:16:29,220 --> 00:16:35,730
some<font color="#E5E5E5"> scripts or disabling</font><font color="#CCCCCC"> a SLR stuff</font>

361
00:16:32,130 --> 00:16:39,570
like that<font color="#E5E5E5"> so for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> we can enable</font>

362
00:16:35,730 --> 00:16:42,480
<font color="#E5E5E5">gdb at boot inject the gdb server if</font>

363
00:16:39,570 --> 00:16:42,840
there<font color="#CCCCCC"> isn't any</font><font color="#E5E5E5"> disabled</font><font color="#CCCCCC"> Sara just</font><font color="#E5E5E5"> what</font>

364
00:16:42,480 --> 00:16:44,820
I said

365
00:16:42,840 --> 00:16:47,610
and then we basically the root of s we

366
00:16:44,820 --> 00:16:50,070
inject it into the bin format and if

367
00:16:47,610 --> 00:16:54,870
<font color="#CCCCCC">it's a cuoco we can reenact</font><font color="#E5E5E5"> it into the</font>

368
00:16:50,070 --> 00:16:57,870
<font color="#CCCCCC">cocoa the device accepts our our</font>

369
00:16:54,870 --> 00:16:59,220
modified binary so we know we<font color="#E5E5E5"> can do</font>

370
00:16:57,870 --> 00:17:03,090
anything we want

371
00:16:59,220 --> 00:17:07,500
basically the like the<font color="#E5E5E5"> the last thing we</font>

372
00:17:03,090 --> 00:17:09,870
are<font color="#E5E5E5"> interested</font><font color="#CCCCCC"> in is we want to mine we</font>

373
00:17:07,500 --> 00:17:12,900
want to do some data mining<font color="#CCCCCC"> because we</font>

374
00:17:09,869 --> 00:17:14,849
are handling 200<font color="#CCCCCC"> farmer and all have</font>

375
00:17:12,900 --> 00:17:17,910
their different<font color="#E5E5E5"> specificities we want to</font>

376
00:17:14,849 --> 00:17:21,119
know which one has<font color="#E5E5E5"> a SLR enabled which</font>

377
00:17:17,910 --> 00:17:25,230
one has certain<font color="#CCCCCC"> things so we we</font><font color="#E5E5E5"> can</font>

378
00:17:21,119 --> 00:17:28,139
basically sorry we can basically<font color="#E5E5E5"> extract</font>

379
00:17:25,230 --> 00:17:32,460
all the<font color="#CCCCCC"> firmer and then just have a way</font>

380
00:17:28,140 --> 00:17:36,690
<font color="#CCCCCC">to analyze</font><font color="#E5E5E5"> all the</font><font color="#CCCCCC"> Odum all them at one</font>

381
00:17:32,460 --> 00:17:39,000
time<font color="#CCCCCC"> and extract information I'm just</font>

382
00:17:36,690 --> 00:17:41,700
going<font color="#CCCCCC"> to get a</font><font color="#E5E5E5"> lot but before they</font>

383
00:17:39,000 --> 00:17:44,190
telling all the<font color="#CCCCCC"> tab</font><font color="#E5E5E5"> data mining</font>

384
00:17:41,700 --> 00:17:47,820
I'm just going to explain the<font color="#CCCCCC"> the way</font>

385
00:17:44,190 --> 00:17:50,610
the the<font color="#CCCCCC"> boots works</font><font color="#E5E5E5"> it's interesting</font>

386
00:17:47,820 --> 00:17:54,090
because it it allows<font color="#E5E5E5"> you to understand</font>

387
00:17:50,610 --> 00:17:56,840
how<font color="#E5E5E5"> to enable</font><font color="#CCCCCC"> gdvi</font><font color="#E5E5E5"> boots so when you and</font>

388
00:17:54,090 --> 00:18:01,260
also<font color="#E5E5E5"> we've used that for our debugging</font>

389
00:17:56,840 --> 00:18:02,970
when when the<font color="#CCCCCC"> Cisco SI boots you had the</font>

390
00:18:01,260 --> 00:18:07,830
first first piece of<font color="#E5E5E5"> software that's</font>

391
00:18:02,970 --> 00:18:11,279
<font color="#CCCCCC">gonna run is called Ramon and if you if</font>

392
00:18:07,830 --> 00:18:13,529
you if<font color="#E5E5E5"> you attach like a screen if you</font>

393
00:18:11,279 --> 00:18:15,899
attach to<font color="#E5E5E5"> the serial and just look at</font>

394
00:18:13,529 --> 00:18:17,789
the actual<font color="#E5E5E5"> logs and on the</font><font color="#CCCCCC"> cellulite</font>

395
00:18:15,899 --> 00:18:19,918
<font color="#E5E5E5">you're still the wrong name</font><font color="#CCCCCC"> and you can</font>

396
00:18:17,789 --> 00:18:24,539
<font color="#E5E5E5">see that there is a prompt</font><font color="#CCCCCC"> that you can</font>

397
00:18:19,919 --> 00:18:26,610
interact<font color="#E5E5E5"> with and the</font><font color="#CCCCCC"> ROM</font><font color="#E5E5E5"> run by default</font>

398
00:18:24,539 --> 00:18:30,750
it will basically allow the a<font color="#E5E5E5"> set</font><font color="#CCCCCC"> of</font>

399
00:18:26,610 --> 00:18:33,959
<font color="#CCCCCC">been on the file system</font><font color="#E5E5E5"> on the CF card</font>

400
00:18:30,750 --> 00:18:35,639
and that contains the Linux kernel<font color="#CCCCCC"> and</font>

401
00:18:33,960 --> 00:18:37,529
the root<font color="#CCCCCC"> filesystem that we</font><font color="#E5E5E5"> just</font>

402
00:18:35,639 --> 00:18:40,139
detailed but the root filesystem

403
00:18:37,529 --> 00:18:41,820
contains not only liner<font color="#E5E5E5"> but among other</font>

404
00:18:40,139 --> 00:18:46,979
files it also contains<font color="#E5E5E5"> the line a</font>

405
00:18:41,820 --> 00:18:50,158
monitor<font color="#E5E5E5"> file and basically the</font><font color="#CCCCCC"> ramen</font>

406
00:18:46,980 --> 00:18:52,559
will load the Linux<font color="#E5E5E5"> kernel and the Linux</font>

407
00:18:50,159 --> 00:18:56,130
kernel will load like the<font color="#CCCCCC"> regular in it</font>

408
00:18:52,559 --> 00:18:59,668
and all the processes but it will<font color="#E5E5E5"> end up</font>

409
00:18:56,130 --> 00:19:02,309
loading line a monitor<font color="#E5E5E5"> and Lionel reader</font>

410
00:18:59,669 --> 00:19:04,919
will actually load<font color="#CCCCCC"> liner that the</font><font color="#E5E5E5"> way it</font>

411
00:19:02,309 --> 00:19:06,269
works<font color="#E5E5E5"> and the thing is if you reverse</font>

412
00:19:04,919 --> 00:19:09,929
engineer<font color="#E5E5E5"> line a monitor</font><font color="#CCCCCC"> you'll figure</font>

413
00:19:06,269 --> 00:19:13,679
out<font color="#E5E5E5"> that it accepts specific</font><font color="#CCCCCC"> flags</font><font color="#E5E5E5"> like</font>

414
00:19:09,929 --> 00:19:16,049
-<font color="#E5E5E5"> L - G</font><font color="#CCCCCC"> - sadiebug and - s to provide</font>

415
00:19:13,679 --> 00:19:20,220
the serial ports -<font color="#CCCCCC"> T to get more</font>

416
00:19:16,049 --> 00:19:22,769
debugging stuff and and it's it's<font color="#E5E5E5"> it's</font>

417
00:19:20,220 --> 00:19:24,330
loaded<font color="#CCCCCC"> Linna memory is loaded using a</font>

418
00:19:22,769 --> 00:19:28,169
specific script<font color="#E5E5E5"> and you can basically</font>

419
00:19:24,330 --> 00:19:31,559
modify the script<font color="#CCCCCC"> - to provide</font><font color="#E5E5E5"> these</font>

420
00:19:28,169 --> 00:19:35,700
flags actually unable debugging at boots

421
00:19:31,559 --> 00:19:41,789
<font color="#E5E5E5">so this was this was this is</font><font color="#CCCCCC"> something</font>

422
00:19:35,700 --> 00:19:44,610
<font color="#CCCCCC">exodus intel found out so thanks to</font><font color="#E5E5E5"> them</font>

423
00:19:41,789 --> 00:19:47,580
for<font color="#E5E5E5"> providing</font><font color="#CCCCCC"> this so the way it</font><font color="#E5E5E5"> works</font>

424
00:19:44,610 --> 00:19:49,699
is<font color="#CCCCCC"> Linamar</font><font color="#E5E5E5"> attached gdb server to lie</font>

425
00:19:47,580 --> 00:19:54,169
now

426
00:19:49,700 --> 00:19:58,310
okay so we with all<font color="#CCCCCC"> the Furman</font><font color="#E5E5E5"> River</font>

427
00:19:54,170 --> 00:20:01,280
we've unpacked<font color="#CCCCCC"> we wanted</font><font color="#E5E5E5"> to do some data</font>

428
00:19:58,310 --> 00:20:03,740
mining to understand okay there are<font color="#CCCCCC"> 200</font>

429
00:20:01,280 --> 00:20:06,830
<font color="#E5E5E5">versions are they all the same in terms</font>

430
00:20:03,740 --> 00:20:09,050
<font color="#E5E5E5">of mitigations</font><font color="#CCCCCC"> we know when Microsoft is</font>

431
00:20:06,830 --> 00:20:14,629
doing<font color="#E5E5E5"> amazing things Windows 10 is is</font>

432
00:20:09,050 --> 00:20:17,300
like lots better than Windows<font color="#E5E5E5"> 95 either</font>

433
00:20:14,630 --> 00:20:21,200
anything similar<font color="#E5E5E5"> on on Cisco is a and</font>

434
00:20:17,300 --> 00:20:22,940
the response is actually<font color="#E5E5E5"> yes so we took</font>

435
00:20:21,200 --> 00:20:24,770
so I'm not<font color="#E5E5E5"> going to list the</font><font color="#CCCCCC"> 200</font>

436
00:20:22,940 --> 00:20:27,050
<font color="#E5E5E5">versions because it's going to be boring</font>

437
00:20:24,770 --> 00:20:30,290
<font color="#E5E5E5">but I just took like a few versions just</font>

438
00:20:27,050 --> 00:20:35,540
to give you an idea<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example in</font>

439
00:20:30,290 --> 00:20:38,720
this case if you look<font color="#E5E5E5"> at the 9 to 4 you</font>

440
00:20:35,540 --> 00:20:41,810
have a<font color="#E5E5E5"> sa 9 to 4 and a sa 9 to 4 SMP and</font>

441
00:20:38,720 --> 00:20:44,990
both are the 9 to 4 version but there is

442
00:20:41,810 --> 00:20:49,340
one<font color="#CCCCCC"> 632 and</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> 64-bit and if you take</font>

443
00:20:44,990 --> 00:20:52,730
the<font color="#CCCCCC"> 9 3 to 200 you</font><font color="#E5E5E5"> can see that there is</font>

444
00:20:49,340 --> 00:20:55,610
the 64 SMP<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there is a 64 visualize</font>

445
00:20:52,730 --> 00:21:02,120
so we I am trying to list them all so we

446
00:20:55,610 --> 00:21:04,310
get an idea right and the a<font color="#E5E5E5"> to 802</font><font color="#CCCCCC"> is</font>

447
00:21:02,120 --> 00:21:07,250
actually the oldest<font color="#E5E5E5"> kind of version and</font>

448
00:21:04,310 --> 00:21:10,399
the<font color="#CCCCCC"> 9 8</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> the most recent</font>

449
00:21:07,250 --> 00:21:14,390
kind of so the first thing we can<font color="#E5E5E5"> do is</font>

450
00:21:10,400 --> 00:21:16,250
we can<font color="#CCCCCC"> look at the actual ASLR if it's</font>

451
00:21:14,390 --> 00:21:20,930
enabled<font color="#CCCCCC"> or not</font><font color="#E5E5E5"> just looking at the</font><font color="#CCCCCC"> VA</font>

452
00:21:16,250 --> 00:21:24,980
<font color="#CCCCCC">randomized a safe flag set for the</font>

453
00:21:20,930 --> 00:21:27,320
kernel for<font color="#E5E5E5"> the new scanner and</font><font color="#CCCCCC"> we can</font>

454
00:21:24,980 --> 00:21:31,520
actually<font color="#E5E5E5"> quickly see</font><font color="#CCCCCC"> that they enable</font>

455
00:21:27,320 --> 00:21:34,159
<font color="#CCCCCC">the SLR</font><font color="#E5E5E5"> at some</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> after 95 and so</font>

456
00:21:31,520 --> 00:21:36,560
and<font color="#CCCCCC"> what is in what is</font><font color="#E5E5E5"> interesting as</font>

457
00:21:34,160 --> 00:21:39,050
well<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> they actually enabled the</font>

458
00:21:36,560 --> 00:21:42,500
position independent executive the<font color="#CCCCCC"> P ie</font>

459
00:21:39,050 --> 00:21:45,139
<font color="#E5E5E5">in line I itself meaning they did it</font>

460
00:21:42,500 --> 00:21:46,670
well the<font color="#CCCCCC"> variable</font><font color="#E5E5E5"> SLR both on the Linux</font>

461
00:21:45,140 --> 00:21:48,950
kernel<font color="#E5E5E5"> part and on</font><font color="#CCCCCC"> the on the binary</font>

462
00:21:46,670 --> 00:21:50,660
<font color="#E5E5E5">which you're supposed</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that so you</font>

463
00:21:48,950 --> 00:21:53,990
<font color="#E5E5E5">actually have a SLR enabled for your</font>

464
00:21:50,660 --> 00:21:59,300
binary what is<font color="#E5E5E5"> interesting as well as</font>

465
00:21:53,990 --> 00:22:01,310
<font color="#E5E5E5">the didn't enable NX on the same way so</font>

466
00:21:59,300 --> 00:22:02,820
the way they did it<font color="#E5E5E5"> is you can see a</font>

467
00:22:01,310 --> 00:22:07,230
below<font color="#E5E5E5"> 9</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> to that</font>

468
00:22:02,820 --> 00:22:10,830
have a<font color="#CCCCCC"> seller and they didn't</font><font color="#E5E5E5"> have an</font><font color="#CCCCCC"> X</font>

469
00:22:07,230 --> 00:22:13,170
but they actually enable<font color="#CCCCCC"> NX</font><font color="#E5E5E5"> on the 94 3</font>

470
00:22:10,830 --> 00:22:15,240
and 94 for branches<font color="#E5E5E5"> but they didn't</font>

471
00:22:13,170 --> 00:22:17,550
<font color="#CCCCCC">enable it on the 95 but instead they had</font>

472
00:22:15,240 --> 00:22:20,610
<font color="#E5E5E5">enabled a SLR on this one and then on</font>

473
00:22:17,550 --> 00:22:24,230
the 96<font color="#CCCCCC"> - it actually had enabled</font><font color="#E5E5E5"> both of</font>

474
00:22:20,610 --> 00:22:26,639
them<font color="#E5E5E5"> and what is what</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> interesting is</font>

475
00:22:24,230 --> 00:22:31,520
I'm<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about that</font><font color="#E5E5E5"> later but</font>

476
00:22:26,640 --> 00:22:34,650
the 96<font color="#CCCCCC"> - branch</font><font color="#E5E5E5"> and the 95 branch leaves</font>

477
00:22:31,520 --> 00:22:38,580
<font color="#E5E5E5">leave at the same</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> meaning they</font>

478
00:22:34,650 --> 00:22:40,460
actually<font color="#E5E5E5"> I mean it's it's an assumption</font>

479
00:22:38,580 --> 00:22:42,990
but it looks<font color="#E5E5E5"> like they</font><font color="#CCCCCC"> try different</font>

480
00:22:40,460 --> 00:22:48,690
<font color="#E5E5E5">mitigation on different branches at the</font>

481
00:22:42,990 --> 00:22:50,970
<font color="#E5E5E5">same time so they</font><font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> any</font><font color="#CCCCCC"> stock</font>

482
00:22:48,690 --> 00:22:53,220
<font color="#CCCCCC">calorie</font><font color="#E5E5E5"> so if you find a stack overflow</font>

483
00:22:50,970 --> 00:22:56,130
<font color="#E5E5E5">like the SNMP one it's an easy win you</font>

484
00:22:53,220 --> 00:22:57,720
can return on the stack<font color="#CCCCCC"> and if you don't</font>

485
00:22:56,130 --> 00:23:01,710
have<font color="#E5E5E5"> that you have</font><font color="#CCCCCC"> your shellcode like</font>

486
00:22:57,720 --> 00:23:04,230
in the 90s they didn't have any full

487
00:23:01,710 --> 00:23:09,690
railroad<font color="#E5E5E5"> so you can overwrite pointers</font>

488
00:23:04,230 --> 00:23:12,390
on the<font color="#E5E5E5"> global offset</font><font color="#CCCCCC"> table they didn't</font>

489
00:23:09,690 --> 00:23:15,570
have any symbols<font color="#E5E5E5"> but at some points in</font>

490
00:23:12,390 --> 00:23:19,800
the knife<font color="#CCCCCC"> 5 branch symbol started to</font>

491
00:23:15,570 --> 00:23:21,600
appear<font color="#E5E5E5"> so so actually you can if you</font>

492
00:23:19,800 --> 00:23:24,720
load a<font color="#E5E5E5"> line a binary you have all the</font>

493
00:23:21,600 --> 00:23:26,429
symbols like to 200,000 functions but

494
00:23:24,720 --> 00:23:28,650
it's quite huge<font color="#E5E5E5"> binary with all the</font>

495
00:23:26,430 --> 00:23:31,080
symbols so we notified Cisco about that

496
00:23:28,650 --> 00:23:35,550
and they<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> removed</font><font color="#CCCCCC"> the symbols in</font>

497
00:23:31,080 --> 00:23:37,919
<font color="#E5E5E5">the latest version in term of Linux</font>

498
00:23:35,550 --> 00:23:40,889
kernel we can see that they<font color="#CCCCCC"> used linux</font>

499
00:23:37,920 --> 00:23:46,490
2.6<font color="#E5E5E5"> and they moved to</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> linux suite at</font>

500
00:23:40,890 --> 00:23:50,850
<font color="#CCCCCC">10</font><font color="#E5E5E5"> at some points corresponding getc and</font>

501
00:23:46,490 --> 00:23:53,520
in terms of heat<font color="#E5E5E5"> because the</font><font color="#CCCCCC"> i key</font><font color="#E5E5E5"> back</font>

502
00:23:50,850 --> 00:23:55,580
is a<font color="#E5E5E5"> heap overflow it's important to</font>

503
00:23:53,520 --> 00:23:58,770
<font color="#E5E5E5">understand the hip internals because it</font>

504
00:23:55,580 --> 00:24:01,770
<font color="#E5E5E5">influences how hard it</font><font color="#CCCCCC"> can be or how</font>

505
00:23:58,770 --> 00:24:04,560
<font color="#CCCCCC">easy it can be to exploit the back so we</font>

506
00:24:01,770 --> 00:24:06,900
<font color="#E5E5E5">can see that it used to be the use to</font>

507
00:24:04,560 --> 00:24:10,260
use the analog<font color="#E5E5E5"> 2.6 then they moved to</font>

508
00:24:06,900 --> 00:24:12,330
dilemma<font color="#E5E5E5"> to dot a dot 3 and then 2 PT</font>

509
00:24:10,260 --> 00:24:14,550
<font color="#E5E5E5">malloc - so we we have to reverse</font>

510
00:24:12,330 --> 00:24:15,809
<font color="#E5E5E5">engineer the binaries obviously - to</font>

511
00:24:14,550 --> 00:24:18,760
figure

512
00:24:15,809 --> 00:24:21,549
and was it was what is interesting about

513
00:24:18,760 --> 00:24:23,770
<font color="#E5E5E5">that is that the the the old GL</font><font color="#CCCCCC"> maroc</font>

514
00:24:21,549 --> 00:24:26,410
that they<font color="#CCCCCC"> used it</font><font color="#E5E5E5"> doesn't have any heap</font>

515
00:24:23,770 --> 00:24:30,100
<font color="#E5E5E5">siphoning</font><font color="#CCCCCC"> king</font><font color="#E5E5E5"> so you can</font><font color="#CCCCCC"> abuse the heap</font>

516
00:24:26,410 --> 00:24:32,799
<font color="#E5E5E5">and they also use like a mmm pool</font>

517
00:24:30,100 --> 00:24:34,750
structure<font color="#E5E5E5"> which is in line on the heap</font>

518
00:24:32,799 --> 00:24:36,549
<font color="#CCCCCC">in addition to the actual dl malach</font><font color="#E5E5E5"> one</font>

519
00:24:34,750 --> 00:24:38,679
which is specific to<font color="#CCCCCC"> cisco</font><font color="#E5E5E5"> and they</font>

520
00:24:36,549 --> 00:24:42,150
didn't have any safe and linking either

521
00:24:38,679 --> 00:24:44,980
<font color="#E5E5E5">and was interesting is on the newest</font>

522
00:24:42,150 --> 00:24:46,840
versions they actually have safe an

523
00:24:44,980 --> 00:24:50,320
inking<font color="#E5E5E5"> on the heap but they don't have</font>

524
00:24:46,840 --> 00:24:52,949
safe an inking<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> mempool</font><font color="#E5E5E5"> the cisco</font>

525
00:24:50,320 --> 00:24:56,470
<font color="#CCCCCC">part so you can still abuse the heap</font>

526
00:24:52,950 --> 00:24:58,299
potentially so<font color="#E5E5E5"> i already already talked</font>

527
00:24:56,470 --> 00:25:04,840
about branches already<font color="#E5E5E5"> but i'm</font><font color="#CCCCCC"> just</font>

528
00:24:58,299 --> 00:25:09,129
<font color="#E5E5E5">gonna give</font><font color="#CCCCCC"> you more information so in</font>

529
00:25:04,840 --> 00:25:12,059
this case this table is<font color="#CCCCCC"> yet is in the</font>

530
00:25:09,130 --> 00:25:15,400
advisory of the<font color="#CCCCCC"> i key buffer overflow I</font>

531
00:25:12,059 --> 00:25:20,559
talked about earlier<font color="#CCCCCC"> already</font><font color="#E5E5E5"> and you can</font>

532
00:25:15,400 --> 00:25:24,669
see that<font color="#E5E5E5"> they list all the branches for</font>

533
00:25:20,559 --> 00:25:28,090
example above 8.7<font color="#E5E5E5"> you have a patch so if</font>

534
00:25:24,669 --> 00:25:33,669
you are<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> 9 0 branch</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to be</font>

535
00:25:28,090 --> 00:25:36,370
9 0 4 3 3<font color="#E5E5E5"> 8 or later to be patched</font><font color="#CCCCCC"> in if</font>

536
00:25:33,669 --> 00:25:39,820
you are<font color="#E5E5E5"> 9 0 to something you're not</font>

537
00:25:36,370 --> 00:25:42,939
<font color="#CCCCCC">patch but then some branches don't</font><font color="#E5E5E5"> have</font>

538
00:25:39,820 --> 00:25:46,450
any patch so you need to<font color="#CCCCCC"> migrate to</font>

539
00:25:42,940 --> 00:25:49,360
<font color="#E5E5E5">another branch and what is interesting</font>

540
00:25:46,450 --> 00:25:53,770
here is if you take two branches<font color="#CCCCCC"> the 91</font>

541
00:25:49,360 --> 00:25:57,699
and 92<font color="#E5E5E5"> if you take the 9 174 because</font>

542
00:25:53,770 --> 00:26:01,139
it's later<font color="#E5E5E5"> than what 9 1 6 11 its</font>

543
00:25:57,700 --> 00:26:03,910
patched<font color="#E5E5E5"> but if you take the 9 2 to 4</font>

544
00:26:01,140 --> 00:26:06,970
because<font color="#CCCCCC"> it's before 9 2 4 5</font>

545
00:26:03,910 --> 00:26:09,130
it's not patched so if you forget the

546
00:26:06,970 --> 00:26:12,850
table<font color="#E5E5E5"> but just look at the line nine</font>

547
00:26:09,130 --> 00:26:16,330
nine<font color="#CCCCCC"> one seven four is patch but 9 to 2</font>

548
00:26:12,850 --> 00:26:17,580
<font color="#CCCCCC">4 isn't</font><font color="#E5E5E5"> it's it's a bit weird and</font>

549
00:26:16,330 --> 00:26:20,740
<font color="#E5E5E5">actually if you</font><font color="#CCCCCC"> look at</font><font color="#E5E5E5"> the actual</font>

550
00:26:17,580 --> 00:26:24,399
released<font color="#E5E5E5"> it makes</font><font color="#CCCCCC"> sense because</font><font color="#E5E5E5"> the 9</font>

551
00:26:20,740 --> 00:26:26,770
174 even though it's a<font color="#E5E5E5"> 9 1 and the other</font>

552
00:26:24,400 --> 00:26:29,400
ones are<font color="#CCCCCC"> 92 it's</font><font color="#E5E5E5"> 2 years difference</font>

553
00:26:26,770 --> 00:26:29,400
between the<font color="#CCCCCC"> 2</font>

554
00:26:29,789 --> 00:26:36,759
so actually it's easy once<font color="#E5E5E5"> you know but</font>

555
00:26:35,019 --> 00:26:40,419
it's it<font color="#E5E5E5"> can be confusing if you don't</font>

556
00:26:36,759 --> 00:26:44,109
<font color="#E5E5E5">know the other thing that is worth</font>

557
00:26:40,419 --> 00:26:46,719
<font color="#E5E5E5">interesting is talking about is what</font>

558
00:26:44,109 --> 00:26:48,820
version is<font color="#E5E5E5"> end-of-life there is no as</font>

559
00:26:46,719 --> 00:26:51,519
far<font color="#CCCCCC"> as we we know there is no public</font>

560
00:26:48,820 --> 00:26:54,189
<font color="#E5E5E5">summary of which</font><font color="#CCCCCC"> AC branches and of life</font>

561
00:26:51,519 --> 00:26:56,729
<font color="#E5E5E5">but</font><font color="#CCCCCC"> actually using this advisory</font><font color="#E5E5E5"> I've</font>

562
00:26:54,190 --> 00:26:59,109
just showed you you<font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> deduce</font>

563
00:26:56,729 --> 00:27:01,149
the the branches that<font color="#CCCCCC"> are end-of-life</font>

564
00:26:59,109 --> 00:27:01,718
and you<font color="#E5E5E5"> end up</font><font color="#CCCCCC"> having something like</font>

565
00:27:01,149 --> 00:27:04,748
<font color="#E5E5E5">that</font>

566
00:27:01,719 --> 00:27:07,509
which shows you that<font color="#E5E5E5"> versions below</font><font color="#CCCCCC"> 9 0</font>

567
00:27:04,749 --> 00:27:11,109
they<font color="#E5E5E5"> are all in</font><font color="#CCCCCC"> at life so</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> newburgh</font>

568
00:27:07,509 --> 00:27:14,049
arrives<font color="#E5E5E5"> you're screwed and for the</font>

569
00:27:11,109 --> 00:27:16,918
versions<font color="#E5E5E5"> above 9 for your</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> okay</font>

570
00:27:14,049 --> 00:27:20,529
above<font color="#E5E5E5"> 9 1 you're okay except</font><font color="#CCCCCC"> 93 I</font>

571
00:27:16,919 --> 00:27:22,929
honestly don't know why<font color="#E5E5E5"> nan tree maybe</font>

572
00:27:20,529 --> 00:27:25,719
maybe they have like a<font color="#CCCCCC"> long-term branch</font>

573
00:27:22,929 --> 00:27:27,249
I guess<font color="#E5E5E5"> long-term branches and some</font>

574
00:27:25,719 --> 00:27:31,450
branches that they don't support for a

575
00:27:27,249 --> 00:27:33,659
long<font color="#E5E5E5"> time</font><font color="#CCCCCC"> okay so we want to reverse fly</font>

576
00:27:31,450 --> 00:27:33,659
now

577
00:27:33,719 --> 00:27:37,659
<font color="#CCCCCC">Exodus</font><font color="#E5E5E5"> Intel published a trick to</font>

578
00:27:36,009 --> 00:27:42,519
actually rename functions<font color="#E5E5E5"> so that's</font>

579
00:27:37,659 --> 00:27:45,099
something very very frequent in when you

580
00:27:42,519 --> 00:27:47,559
reverse engineer<font color="#E5E5E5"> embedded devices you</font>

581
00:27:45,099 --> 00:27:50,799
<font color="#E5E5E5">have lots of debugging strains and in</font>

582
00:27:47,559 --> 00:27:53,918
this case you have the<font color="#CCCCCC"> IPV to log exit</font>

583
00:27:50,799 --> 00:27:57,190
path<font color="#E5E5E5"> a lot logging function that is</font>

584
00:27:53,919 --> 00:27:59,440
called by many many many<font color="#CCCCCC"> functions and</font>

585
00:27:57,190 --> 00:28:01,989
the function<font color="#CCCCCC"> that code is calling the</font>

586
00:27:59,440 --> 00:28:04,749
login function is the name is passed to

587
00:28:01,989 --> 00:28:06,700
<font color="#CCCCCC">the</font><font color="#E5E5E5"> login function in this case</font><font color="#CCCCCC"> itv2</font>

588
00:28:04,749 --> 00:28:08,289
<font color="#CCCCCC">pass config payload is calling the login</font>

589
00:28:06,700 --> 00:28:09,070
function so we know that<font color="#E5E5E5"> the function</font>

590
00:28:08,289 --> 00:28:12,729
<font color="#E5E5E5">that is calling</font>

591
00:28:09,070 --> 00:28:16,839
<font color="#CCCCCC">iqe</font><font color="#E5E5E5"> to likely exit path is itv2 path</font>

592
00:28:12,729 --> 00:28:19,539
config payload so we can script things

593
00:28:16,839 --> 00:28:22,539
<font color="#E5E5E5">to rename a bunch of functions so that's</font>

594
00:28:19,539 --> 00:28:24,639
very<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> but actually because we found</font>

595
00:28:22,539 --> 00:28:27,839
out<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> actually found</font><font color="#E5E5E5"> out that</font>

596
00:28:24,639 --> 00:28:30,668
quite lights that the recent versions

597
00:28:27,839 --> 00:28:33,009
<font color="#E5E5E5">now have the symbols you can</font><font color="#CCCCCC"> actually</font>

598
00:28:30,669 --> 00:28:35,529
take one<font color="#E5E5E5"> binary that has</font><font color="#CCCCCC"> symbols and</font>

599
00:28:33,009 --> 00:28:39,359
<font color="#E5E5E5">just use bean</font><font color="#CCCCCC"> leaf</font><font color="#E5E5E5"> to get like all the</font>

600
00:28:35,529 --> 00:28:39,359
juicy bits to all the firmer

601
00:28:41,400 --> 00:28:48,910
<font color="#CCCCCC">okay so I showed you like a history of</font>

602
00:28:46,230 --> 00:28:50,950
different<font color="#CCCCCC"> AC versions</font><font color="#E5E5E5"> we know we can</font>

603
00:28:48,910 --> 00:28:55,720
<font color="#CCCCCC">unpack repack firmer</font><font color="#E5E5E5"> but we want to</font>

604
00:28:50,950 --> 00:29:01,330
debug<font color="#CCCCCC"> what's going on so we build an</font><font color="#E5E5E5"> AAS</font>

605
00:28:55,720 --> 00:29:05,110
a debugger<font color="#CCCCCC"> a CDBG so before before</font>

606
00:29:01,330 --> 00:29:07,659
showing<font color="#E5E5E5"> you why we built a CDBG</font><font color="#CCCCCC"> I'm just</font>

607
00:29:05,110 --> 00:29:11,620
going to show<font color="#CCCCCC"> you how painful it was for</font>

608
00:29:07,660 --> 00:29:14,020
me<font color="#E5E5E5"> before</font><font color="#CCCCCC"> I build this tool</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> we</font>

609
00:29:11,620 --> 00:29:18,520
<font color="#E5E5E5">build this tool so I explained</font><font color="#CCCCCC"> to you</font>

610
00:29:14,020 --> 00:29:21,850
that when you put the<font color="#CCCCCC"> device you have</font>

611
00:29:18,520 --> 00:29:23,860
the<font color="#E5E5E5"> outputs on</font><font color="#CCCCCC"> the cell and you can you</font>

612
00:29:21,850 --> 00:29:27,580
have<font color="#E5E5E5"> the boot</font><font color="#CCCCCC"> ROM and you can hit</font><font color="#E5E5E5"> a key</font>

613
00:29:23,860 --> 00:29:29,530
to<font color="#CCCCCC"> actually boot</font><font color="#E5E5E5"> inch of the boot so in</font>

614
00:29:27,580 --> 00:29:31,899
this case is break<font color="#E5E5E5"> or escape but I</font>

615
00:29:29,530 --> 00:29:34,149
missed I<font color="#E5E5E5"> hadn't I did a mistake I hit</font>

616
00:29:31,900 --> 00:29:36,820
space<font color="#CCCCCC"> so instead it's going</font><font color="#E5E5E5"> to put the</font>

617
00:29:34,150 --> 00:29:38,980
the<font color="#CCCCCC"> one by default and</font><font color="#E5E5E5"> this is me this</font>

618
00:29:36,820 --> 00:29:41,159
is me because<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't hit the right key</font>

619
00:29:38,980 --> 00:29:43,630
<font color="#E5E5E5">so I'll do it again</font>

620
00:29:41,160 --> 00:29:45,910
this time I hit the<font color="#CCCCCC"> right key and then I</font>

621
00:29:43,630 --> 00:29:48,670
have a text file with<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the commands</font>

622
00:29:45,910 --> 00:29:51,010
<font color="#CCCCCC">to actually copy paste the</font><font color="#E5E5E5"> commands so I</font>

623
00:29:48,670 --> 00:29:53,080
get this prompt from<font color="#CCCCCC"> Rahman and</font><font color="#E5E5E5"> I can</font>

624
00:29:51,010 --> 00:29:56,350
specify I want to boot this firmware

625
00:29:53,080 --> 00:30:01,419
with this config file<font color="#E5E5E5"> so here here yeah</font>

626
00:29:56,350 --> 00:30:03,219
the<font color="#CCCCCC"> the boot takes a</font><font color="#E5E5E5"> limited of time so</font>

627
00:30:01,420 --> 00:30:05,860
it's going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> basically give</font><font color="#E5E5E5"> me in this</font>

628
00:30:03,220 --> 00:30:08,950
case a<font color="#E5E5E5"> root a root shell where I can I</font>

629
00:30:05,860 --> 00:30:13,120
can patch the script to<font color="#E5E5E5"> actually enable</font>

630
00:30:08,950 --> 00:30:16,450
gdb at boot so<font color="#E5E5E5"> I copy pasted the command</font>

631
00:30:13,120 --> 00:30:18,669
to modify this<font color="#E5E5E5"> script to to modify</font>

632
00:30:16,450 --> 00:30:21,850
laminator command line I'm modifying

633
00:30:18,670 --> 00:30:23,400
this and then I'm starting<font color="#E5E5E5"> in it</font><font color="#CCCCCC"> just to</font>

634
00:30:21,850 --> 00:30:26,080
[Music]

635
00:30:23,400 --> 00:30:27,520
<font color="#E5E5E5">continue boot</font><font color="#CCCCCC"> within the right so I'm</font>

636
00:30:26,080 --> 00:30:29,770
just<font color="#CCCCCC"> skipping this part because it takes</font>

637
00:30:27,520 --> 00:30:31,780
two minutes to<font color="#E5E5E5"> boot</font><font color="#CCCCCC"> but at the end</font><font color="#E5E5E5"> you</font>

638
00:30:29,770 --> 00:30:33,250
get<font color="#CCCCCC"> the g DB server waiting for you to</font>

639
00:30:31,780 --> 00:30:36,190
connect so in this case you can<font color="#CCCCCC"> just</font>

640
00:30:33,250 --> 00:30:38,680
exit screen and<font color="#E5E5E5"> just connect with gdb on</font>

641
00:30:36,190 --> 00:30:41,200
the share line so you connect to it you

642
00:30:38,680 --> 00:30:45,700
<font color="#E5E5E5">specify the files that you</font><font color="#CCCCCC"> extracted</font>

643
00:30:41,200 --> 00:30:46,060
from the firmware so gdb knows what what

644
00:30:45,700 --> 00:30:48,400
<font color="#CCCCCC">Y</font><font color="#E5E5E5"> is</font>

645
00:30:46,060 --> 00:30:50,409
<font color="#CCCCCC">it's debugging</font><font color="#E5E5E5"> and then you use</font><font color="#CCCCCC"> Target</font>

646
00:30:48,400 --> 00:30:51,789
remotes<font color="#CCCCCC"> the device to actually</font><font color="#E5E5E5"> connect</font>

647
00:30:50,410 --> 00:30:54,159
to<font color="#E5E5E5"> the shoreline so</font>

648
00:30:51,789 --> 00:30:56,019
case<font color="#CCCCCC"> I didn't use the right command I</font>

649
00:30:54,159 --> 00:31:02,139
actually failed on my demo<font color="#E5E5E5"> so I just</font>

650
00:30:56,019 --> 00:31:03,820
kept<font color="#E5E5E5"> it and then you</font><font color="#CCCCCC"> managed</font><font color="#E5E5E5"> to connect</font>

651
00:31:02,139 --> 00:31:07,209
<font color="#E5E5E5">it you get your GED be attached</font><font color="#CCCCCC"> to the</font>

652
00:31:03,820 --> 00:31:09,249
<font color="#E5E5E5">GB server on</font><font color="#CCCCCC"> device so in this case for</font>

653
00:31:07,210 --> 00:31:11,409
the sake of the demo<font color="#CCCCCC"> I'm just setting a</font>

654
00:31:09,249 --> 00:31:15,850
breakpoint<font color="#E5E5E5"> into a Nike function so I can</font>

655
00:31:11,409 --> 00:31:19,239
trigger<font color="#E5E5E5"> my breakpoints I'm continuing</font>

656
00:31:15,850 --> 00:31:20,439
execution so I'm skipping<font color="#E5E5E5"> it takes a</font>

657
00:31:19,239 --> 00:31:22,179
little<font color="#E5E5E5"> bit of time to boot so I'm</font>

658
00:31:20,440 --> 00:31:25,929
<font color="#E5E5E5">skipping it and basically</font><font color="#CCCCCC"> I'm just</font>

659
00:31:22,179 --> 00:31:29,889
pinging the device until<font color="#E5E5E5"> I get a</font>

660
00:31:25,929 --> 00:31:33,009
<font color="#E5E5E5">response meaning it's up and running so</font>

661
00:31:29,889 --> 00:31:35,168
here I'm<font color="#CCCCCC"> just using</font><font color="#E5E5E5"> one script to send</font>

662
00:31:33,009 --> 00:31:36,820
some<font color="#CCCCCC"> I</font><font color="#E5E5E5"> key messages so I can trigger my</font>

663
00:31:35,169 --> 00:31:40,389
breakpoints just to show you<font color="#E5E5E5"> it works</font>

664
00:31:36,820 --> 00:31:41,739
and here because<font color="#CCCCCC"> there is no</font><font color="#E5E5E5"> symbol when</font>

665
00:31:40,389 --> 00:31:44,439
I do the<font color="#E5E5E5"> back when I look at the back</font>

666
00:31:41,739 --> 00:31:46,720
trace I cannot use<font color="#CCCCCC"> it easily right so</font>

667
00:31:44,440 --> 00:31:51,429
it's quite<font color="#CCCCCC"> painful to actually know</font>

668
00:31:46,720 --> 00:31:58,059
what's going<font color="#E5E5E5"> on so I'm hitting continue</font>

669
00:31:51,429 --> 00:32:01,119
<font color="#E5E5E5">and then I get a signal that is</font>

670
00:31:58,059 --> 00:32:03,460
<font color="#E5E5E5">triggered and it's because</font><font color="#CCCCCC"> Linna has a</font>

671
00:32:01,119 --> 00:32:05,019
<font color="#E5E5E5">watch attack mechanism that will prevent</font>

672
00:32:03,460 --> 00:32:08,470
the<font color="#E5E5E5"> beginning if you</font><font color="#CCCCCC"> debug for too long</font>

673
00:32:05,019 --> 00:32:10,539
time it will trigger a signal<font color="#E5E5E5"> so here</font>

674
00:32:08,470 --> 00:32:13,119
you're screwed<font color="#CCCCCC"> you need to start booting</font>

675
00:32:10,539 --> 00:32:15,399
the<font color="#E5E5E5"> thing from scratch so I just</font><font color="#CCCCCC"> skipped</font>

676
00:32:13,119 --> 00:32:16,899
it for for you because otherwise it's

677
00:32:15,399 --> 00:32:18,609
gonna<font color="#E5E5E5"> you're gonna be all</font><font color="#CCCCCC"> sleeping</font>

678
00:32:16,899 --> 00:32:22,049
digestion is<font color="#E5E5E5"> already here so I don't</font>

679
00:32:18,609 --> 00:32:25,019
<font color="#E5E5E5">want to kill you so I started again I</font>

680
00:32:22,049 --> 00:32:27,489
unable the watchdog and this time I'm

681
00:32:25,019 --> 00:32:29,289
having real like real<font color="#CCCCCC"> breakpoints and</font>

682
00:32:27,489 --> 00:32:31,720
<font color="#E5E5E5">it's working fine but the other problem</font>

683
00:32:29,289 --> 00:32:34,570
<font color="#E5E5E5">is it would be nice</font><font color="#CCCCCC"> to do ctrl C so if</font>

684
00:32:31,720 --> 00:32:36,309
you use the<font color="#E5E5E5"> GD already you use you you</font>

685
00:32:34,570 --> 00:32:38,139
know you can<font color="#E5E5E5"> control C and access gdb</font>

686
00:32:36,309 --> 00:32:40,809
but in this case you cannot<font color="#E5E5E5"> it's not</font>

687
00:32:38,139 --> 00:32:44,830
possible<font color="#E5E5E5"> so it's your gdb if you do</font>

688
00:32:40,809 --> 00:32:47,649
control<font color="#CCCCCC"> C 2</font><font color="#E5E5E5"> twice it breaks gdb and then</font>

689
00:32:44,830 --> 00:32:50,879
you have to reboot the device<font color="#E5E5E5"> 2 minutes</font>

690
00:32:47,649 --> 00:32:56,229
again I think<font color="#E5E5E5"> I think you get the idea</font>

691
00:32:50,879 --> 00:33:02,840
<font color="#E5E5E5">so that was me again right</font>

692
00:32:56,230 --> 00:33:05,480
so that's why we<font color="#E5E5E5"> created a CDBG so what</font>

693
00:33:02,840 --> 00:33:09,189
do we<font color="#E5E5E5"> do we didn't reinvent the wheel we</font>

694
00:33:05,480 --> 00:33:12,140
reuse lots of existing tools like gdb

695
00:33:09,190 --> 00:33:13,610
itself<font color="#E5E5E5"> but we try to automate things</font><font color="#CCCCCC"> so</font>

696
00:33:12,140 --> 00:33:16,820
we could actually<font color="#E5E5E5"> analyze lots of firmer</font>

697
00:33:13,610 --> 00:33:19,189
and and in a better way<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> first</font>

698
00:33:16,820 --> 00:33:21,649
thing we assume is that<font color="#E5E5E5"> gdb server is</font>

699
00:33:19,190 --> 00:33:24,140
enabled<font color="#E5E5E5"> so instead of using the old</font>

700
00:33:21,650 --> 00:33:28,310
<font color="#E5E5E5">technique that exists Intel gave we can</font>

701
00:33:24,140 --> 00:33:31,610
instead enable gdb directly by modifying

702
00:33:28,310 --> 00:33:33,560
the file and repacking the<font color="#CCCCCC"> former so we</font>

703
00:33:31,610 --> 00:33:38,270
get this<font color="#CCCCCC"> g DB</font><font color="#E5E5E5"> server waiting for us so</font>

704
00:33:33,560 --> 00:33:39,770
here is in gns3<font color="#E5E5E5"> we can see gdb server is</font>

705
00:33:38,270 --> 00:33:41,420
waiting for<font color="#E5E5E5"> us to connect so we assume</font>

706
00:33:39,770 --> 00:33:44,090
<font color="#CCCCCC">that so the</font><font color="#E5E5E5"> other problem</font><font color="#CCCCCC"> I just</font>

707
00:33:41,420 --> 00:33:46,550
<font color="#CCCCCC">demonstrated</font><font color="#E5E5E5"> is that gdb will trigger a</font>

708
00:33:44,090 --> 00:33:53,030
signal<font color="#E5E5E5"> sorry line I will trigger a</font>

709
00:33:46,550 --> 00:33:55,669
signal<font color="#CCCCCC"> if you don't disable</font><font color="#E5E5E5"> this</font>

710
00:33:53,030 --> 00:33:59,060
watchdog mechanism so thanks to<font color="#CCCCCC"> Exodus</font>

711
00:33:55,670 --> 00:34:05,540
Intel we can disable this watchdog<font color="#E5E5E5"> which</font>

712
00:33:59,060 --> 00:34:08,779
is clock interval symbol so the<font color="#E5E5E5"> last</font>

713
00:34:05,540 --> 00:34:11,210
thing<font color="#E5E5E5"> is as I showed</font><font color="#CCCCCC"> you it's not</font>

714
00:34:08,780 --> 00:34:12,740
<font color="#E5E5E5">possible to control C and we actually</font>

715
00:34:11,210 --> 00:34:15,650
<font color="#E5E5E5">realized that it's not possible to</font>

716
00:34:12,739 --> 00:34:19,689
<font color="#CCCCCC">control C only on on real devices</font><font color="#E5E5E5"> like</font>

717
00:34:15,650 --> 00:34:23,510
real<font color="#CCCCCC"> Hardware both 32 and 64-bit</font><font color="#E5E5E5"> and we</font>

718
00:34:19,690 --> 00:34:26,270
didn't<font color="#CCCCCC"> we didn't put this problem on the</font>

719
00:34:23,510 --> 00:34:29,090
emulation<font color="#CCCCCC"> one so we assume it's due to</font>

720
00:34:26,270 --> 00:34:32,420
the fact<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> control</font><font color="#E5E5E5"> C character</font>

721
00:34:29,090 --> 00:34:34,490
<font color="#E5E5E5">that his son on the sidelines</font><font color="#CCCCCC"> is badly</font>

722
00:34:32,420 --> 00:34:36,170
encoded or there is some<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> problem</font>

723
00:34:34,489 --> 00:34:39,310
on the<font color="#E5E5E5"> sidelines with this control</font>

724
00:34:36,170 --> 00:34:42,380
<font color="#E5E5E5">suspect or character so the thing we</font>

725
00:34:39,310 --> 00:34:45,139
ended up doing which which<font color="#CCCCCC"> is quite</font>

726
00:34:42,380 --> 00:34:48,770
hacky<font color="#E5E5E5"> but actually was really really</font>

727
00:34:45,139 --> 00:34:52,159
<font color="#E5E5E5">helpful</font><font color="#CCCCCC"> is we actually patch line now to</font>

728
00:34:48,770 --> 00:34:55,550
<font color="#E5E5E5">support a like a debug shell so we could</font>

729
00:34:52,159 --> 00:34:57,859
have a way<font color="#E5E5E5"> to interact with with with</font>

730
00:34:55,550 --> 00:35:02,840
him with line up so the way<font color="#CCCCCC"> it works is</font>

731
00:34:57,860 --> 00:35:06,200
we have<font color="#CCCCCC"> liner with our patch code we</font>

732
00:35:02,840 --> 00:35:07,850
attach a<font color="#CCCCCC"> cdbg to gdb server and gdb</font>

733
00:35:06,200 --> 00:35:09,509
service will be attached to liner<font color="#E5E5E5"> and</font>

734
00:35:07,850 --> 00:35:12,509
<font color="#E5E5E5">basically what we want is to trigger</font>

735
00:35:09,510 --> 00:35:15,230
<font color="#E5E5E5">our</font><font color="#CCCCCC"> pouch code to get the debug shell so</font>

736
00:35:12,510 --> 00:35:18,360
the way it<font color="#CCCCCC"> works is we we have gdb and</font>

737
00:35:15,230 --> 00:35:22,380
<font color="#E5E5E5">we have our listening netcat on the on</font>

738
00:35:18,360 --> 00:35:23,250
the host<font color="#CCCCCC"> and we connect</font><font color="#E5E5E5"> or SSH to line</font>

739
00:35:22,380 --> 00:35:26,040
up<font color="#E5E5E5"> okay</font>

740
00:35:23,250 --> 00:35:28,500
visiting the regular SSH function but

741
00:35:26,040 --> 00:35:30,570
because we patched code in the SSH

742
00:35:28,500 --> 00:35:34,440
tunneling function it will basically

743
00:35:30,570 --> 00:35:37,110
connect back to<font color="#CCCCCC"> our</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> netcat and so we</font>

744
00:35:34,440 --> 00:35:39,330
get actually a linux shell and it's

745
00:35:37,110 --> 00:35:41,700
different<font color="#CCCCCC"> if you've</font><font color="#E5E5E5"> already analyzed a</font>

746
00:35:39,330 --> 00:35:43,230
Cisco<font color="#CCCCCC"> device you get</font><font color="#E5E5E5"> a Cisco shell it's</font>

747
00:35:41,700 --> 00:35:43,830
not the same shell that Cisco<font color="#E5E5E5"> shell you</font>

748
00:35:43,230 --> 00:35:45,570
<font color="#E5E5E5">input</font>

749
00:35:43,830 --> 00:35:47,819
Cisco commands here it's a linux shell

750
00:35:45,570 --> 00:35:50,100
<font color="#E5E5E5">we're underneath and the reason we want</font>

751
00:35:47,820 --> 00:35:52,350
that is because<font color="#CCCCCC"> we can list</font><font color="#E5E5E5"> the</font>

752
00:35:50,100 --> 00:35:53,130
processes so we<font color="#E5E5E5"> can for example access</font>

753
00:35:52,350 --> 00:35:55,440
the prod<font color="#E5E5E5"> Maps</font>

754
00:35:53,130 --> 00:35:57,390
<font color="#E5E5E5">but at</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> we did it really to</font>

755
00:35:55,440 --> 00:35:59,640
actually<font color="#E5E5E5"> interact with liner because</font><font color="#CCCCCC"> we</font>

756
00:35:57,390 --> 00:36:03,569
can list the line our PID<font color="#E5E5E5"> and we can</font>

757
00:35:59,640 --> 00:36:09,750
actually<font color="#E5E5E5"> send a sick trip</font><font color="#CCCCCC"> signal</font><font color="#E5E5E5"> to this</font>

758
00:36:03,570 --> 00:36:12,860
PID<font color="#CCCCCC"> and then get a gdb back</font><font color="#E5E5E5"> so it's a</font>

759
00:36:09,750 --> 00:36:15,510
complete hack<font color="#CCCCCC"> I completely agree</font><font color="#E5E5E5"> but</font>

760
00:36:12,860 --> 00:36:21,210
it's it saved my life

761
00:36:15,510 --> 00:36:25,620
<font color="#E5E5E5">well maybe not but</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> it helped me so</font>

762
00:36:21,210 --> 00:36:29,190
here we have a better debugging<font color="#CCCCCC"> to to be</font>

763
00:36:25,620 --> 00:36:31,319
a little bit finally useful we want

764
00:36:29,190 --> 00:36:34,350
symbols<font color="#CCCCCC"> gdb doesn't have symbols</font>

765
00:36:31,320 --> 00:36:36,050
<font color="#E5E5E5">especially on most of the former we used</font>

766
00:36:34,350 --> 00:36:39,390
an<font color="#E5E5E5"> existing cool</font>

767
00:36:36,050 --> 00:36:41,460
existing tools called<font color="#E5E5E5"> a red sync and</font>

768
00:36:39,390 --> 00:36:46,109
basically the idea<font color="#CCCCCC"> is you can</font>

769
00:36:41,460 --> 00:36:48,480
<font color="#E5E5E5">synchronize a debugger and and Ida Pro</font>

770
00:36:46,110 --> 00:36:50,460
and if you have if<font color="#E5E5E5"> you have this kind of</font>

771
00:36:48,480 --> 00:36:52,560
need even<font color="#E5E5E5"> for other things that really</font>

772
00:36:50,460 --> 00:36:55,020
<font color="#E5E5E5">are</font><font color="#CCCCCC"> not related to Cisco like</font><font color="#E5E5E5"> windy</font><font color="#CCCCCC"> Bay</font>

773
00:36:52,560 --> 00:36:58,230
windbg to either<font color="#E5E5E5"> and you keep copy</font>

774
00:36:55,020 --> 00:36:59,880
<font color="#E5E5E5">pasting stuff</font><font color="#CCCCCC"> I really advise you to try</font>

775
00:36:58,230 --> 00:37:03,300
<font color="#CCCCCC">red</font><font color="#E5E5E5"> thing because it's a really nice</font>

776
00:36:59,880 --> 00:37:05,130
tool but basically we modified<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> add</font>

777
00:37:03,300 --> 00:37:08,760
specific<font color="#E5E5E5"> things but it works with many</font>

778
00:37:05,130 --> 00:37:11,340
<font color="#CCCCCC">burger like XE c 4 t BG TDP whatever</font><font color="#E5E5E5"> but</font>

779
00:37:08,760 --> 00:37:13,440
we used<font color="#E5E5E5"> it for gdb and the way it works</font>

780
00:37:11,340 --> 00:37:15,480
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have a plug-in</font><font color="#E5E5E5"> in either and plug-in</font>

781
00:37:13,440 --> 00:37:18,720
in<font color="#E5E5E5"> gdb and they interact</font><font color="#CCCCCC"> with each other</font>

782
00:37:15,480 --> 00:37:21,240
<font color="#E5E5E5">with</font><font color="#CCCCCC"> a simple protocol and they</font>

783
00:37:18,720 --> 00:37:22,500
synchronize<font color="#E5E5E5"> so in the in our case we</font>

784
00:37:21,240 --> 00:37:27,180
have<font color="#E5E5E5"> gdb server running on the</font>

785
00:37:22,500 --> 00:37:29,970
<font color="#CCCCCC">I say our</font><font color="#E5E5E5"> icdbg based on</font><font color="#CCCCCC"> gdb on Linux</font>

786
00:37:27,180 --> 00:37:31,890
host<font color="#E5E5E5"> and then we have either that can be</font>

787
00:37:29,970 --> 00:37:34,410
on the same host or on a different<font color="#E5E5E5"> host</font>

788
00:37:31,890 --> 00:37:36,900
<font color="#E5E5E5">and they are all synchronized so how</font>

789
00:37:34,410 --> 00:37:39,060
does<font color="#E5E5E5"> it</font><font color="#CCCCCC"> work so let's say you have gdb</font>

790
00:37:36,900 --> 00:37:41,010
<font color="#E5E5E5">well actually you have you have where</font>

791
00:37:39,060 --> 00:37:45,299
you are in either<font color="#E5E5E5"> and you can</font><font color="#CCCCCC"> actually</font>

792
00:37:41,010 --> 00:37:48,030
step in and in in<font color="#CCCCCC"> Ida you will see where</font>

793
00:37:45,300 --> 00:37:51,780
<font color="#E5E5E5">it goes</font><font color="#CCCCCC"> and you have the great</font><font color="#E5E5E5"> view</font><font color="#CCCCCC"> 4/7</font>

794
00:37:48,030 --> 00:37:54,750
<font color="#E5E5E5">age you have a way to modify your</font>

795
00:37:51,780 --> 00:37:57,380
function names<font color="#E5E5E5"> so you can actually add</font>

796
00:37:54,750 --> 00:38:00,210
<font color="#CCCCCC">commands thing like that in</font><font color="#E5E5E5"> either and</font>

797
00:37:57,380 --> 00:38:01,920
also by default<font color="#CCCCCC"> you have a back-trace</font>

798
00:38:00,210 --> 00:38:03,570
that doesn't have any symbols<font color="#E5E5E5"> but</font>

799
00:38:01,920 --> 00:38:06,240
because we have this synchronization<font color="#E5E5E5"> we</font>

800
00:38:03,570 --> 00:38:08,550
implemented<font color="#E5E5E5"> a new command which is</font>

801
00:38:06,240 --> 00:38:10,740
<font color="#E5E5E5">beautiful back twice</font><font color="#CCCCCC"> BBT which basically</font>

802
00:38:08,550 --> 00:38:13,730
is going<font color="#E5E5E5"> to fetch the symbols and just</font>

803
00:38:10,740 --> 00:38:20,990
display<font color="#CCCCCC"> it for</font><font color="#E5E5E5"> us so we can enjoy</font>

804
00:38:13,730 --> 00:38:24,030
<font color="#E5E5E5">finally our debugging so we</font><font color="#CCCCCC"> analyze heap</font>

805
00:38:20,990 --> 00:38:27,049
heap<font color="#E5E5E5"> in</font><font color="#CCCCCC"> ability and at that time there</font>

806
00:38:24,030 --> 00:38:30,660
wasn't any tool to analyze heap heap

807
00:38:27,050 --> 00:38:33,090
into<font color="#CCCCCC"> north so</font><font color="#E5E5E5"> we built three libraries</font>

808
00:38:30,660 --> 00:38:34,230
that we already presented at<font color="#E5E5E5"> besides so</font>

809
00:38:33,090 --> 00:38:36,120
<font color="#CCCCCC">I'm not going</font><font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about it if you</font>

810
00:38:34,230 --> 00:38:39,870
were interested you can have a look<font color="#E5E5E5"> at</font>

811
00:38:36,120 --> 00:38:40,970
the<font color="#E5E5E5"> besides talk slides and there is a</font>

812
00:38:39,870 --> 00:38:45,450
video<font color="#E5E5E5"> I think</font>

813
00:38:40,970 --> 00:38:48,240
<font color="#CCCCCC">but basically they because the VSA had</font>

814
00:38:45,450 --> 00:38:52,160
different<font color="#CCCCCC"> heaps</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> build</font><font color="#E5E5E5"> different tools</font>

815
00:38:48,240 --> 00:38:52,160
to<font color="#E5E5E5"> analyze these different heaps</font>

816
00:38:52,940 --> 00:39:00,330
so to summarize the<font color="#CCCCCC"> sed</font><font color="#E5E5E5"> is a CDBG</font>

817
00:38:56,310 --> 00:39:03,960
architecture we use<font color="#CCCCCC"> a CDBG specifying a</font>

818
00:39:00,330 --> 00:39:06,090
name of the target<font color="#E5E5E5"> we want to debug and</font>

819
00:39:03,960 --> 00:39:08,760
we have a config file which for<font color="#CCCCCC"> this</font>

820
00:39:06,090 --> 00:39:11,670
specific<font color="#E5E5E5"> target it's going to list the</font>

821
00:39:08,760 --> 00:39:13,710
version the architecture<font color="#E5E5E5"> where we</font>

822
00:39:11,670 --> 00:39:15,360
<font color="#E5E5E5">extracted the root filesystem and the</font>

823
00:39:13,710 --> 00:39:19,260
firmer and config file that we<font color="#E5E5E5"> want to</font>

824
00:39:15,360 --> 00:39:22,380
<font color="#E5E5E5">use this config and firmware needs to be</font>

825
00:39:19,260 --> 00:39:25,890
on the<font color="#E5E5E5"> ACA itself but we can using a</font>

826
00:39:22,380 --> 00:39:27,660
<font color="#CCCCCC">safe room</font><font color="#E5E5E5"> where we can build all the</font>

827
00:39:25,890 --> 00:39:29,609
firmware<font color="#CCCCCC"> and just drop</font><font color="#E5E5E5"> them on the</font><font color="#CCCCCC"> safe</font>

828
00:39:27,660 --> 00:39:32,279
<font color="#CCCCCC">guard and then just choose which one we</font>

829
00:39:29,610 --> 00:39:34,590
<font color="#CCCCCC">want to</font><font color="#E5E5E5"> debug so the way it</font><font color="#CCCCCC"> works is the</font>

830
00:39:32,280 --> 00:39:36,240
a celebrity we're looking at the config

831
00:39:34,590 --> 00:39:38,430
file which of all<font color="#E5E5E5"> the arguments</font>

832
00:39:36,240 --> 00:39:40,799
<font color="#E5E5E5">all the parameters and then we have an</font>

833
00:39:38,430 --> 00:39:44,100
<font color="#E5E5E5">external database that contains specific</font>

834
00:39:40,800 --> 00:39:45,960
<font color="#E5E5E5">symbols for each target</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example</font>

835
00:39:44,100 --> 00:39:50,450
<font color="#E5E5E5">clock interval is the watchdog</font><font color="#CCCCCC"> that we</font>

836
00:39:45,960 --> 00:39:52,680
need to have to actually debug a target

837
00:39:50,450 --> 00:39:57,270
<font color="#E5E5E5">mempool array is a symbol</font><font color="#CCCCCC"> that we use</font>

838
00:39:52,680 --> 00:39:58,740
<font color="#E5E5E5">for our lips to find some where where</font>

839
00:39:57,270 --> 00:40:02,940
things are<font color="#CCCCCC"> in memory</font><font color="#E5E5E5"> to analyze the</font>

840
00:39:58,740 --> 00:40:06,120
<font color="#CCCCCC">heaps so the second the the database we</font>

841
00:40:02,940 --> 00:40:08,220
can<font color="#E5E5E5"> build it because we we can automate</font>

842
00:40:06,120 --> 00:40:09,870
retrieving things<font color="#E5E5E5"> for the different</font>

843
00:40:08,220 --> 00:40:14,310
firmware<font color="#E5E5E5"> I'm just going to talk about</font>

844
00:40:09,870 --> 00:40:16,440
that<font color="#E5E5E5"> just</font><font color="#CCCCCC"> after so our</font><font color="#E5E5E5"> icdbg</font><font color="#CCCCCC"> will</font>

845
00:40:14,310 --> 00:40:19,320
connect on the serial port<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> have a</font>

846
00:40:16,440 --> 00:40:21,600
layer abstraction which is which we call

847
00:40:19,320 --> 00:40:23,550
<font color="#E5E5E5">come which will</font><font color="#CCCCCC"> allow use to either</font>

848
00:40:21,600 --> 00:40:26,400
connect on the<font color="#CCCCCC"> server line for real</font>

849
00:40:23,550 --> 00:40:31,070
<font color="#E5E5E5">devices or</font><font color="#CCCCCC"> on the telnet port for</font>

850
00:40:26,400 --> 00:40:34,520
dentistry for<font color="#CCCCCC"> creamier it will basically</font>

851
00:40:31,070 --> 00:40:38,750
<font color="#CCCCCC">interrupt the</font><font color="#E5E5E5"> boot</font><font color="#CCCCCC"> look at the files</font>

852
00:40:34,520 --> 00:40:41,910
<font color="#CCCCCC">boot boot the specific files and then</font>

853
00:40:38,750 --> 00:40:45,420
once you get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> gdb prompt</font><font color="#E5E5E5"> you you have</font>

854
00:40:41,910 --> 00:40:47,609
a gdb in it<font color="#CCCCCC"> which contains which which</font>

855
00:40:45,420 --> 00:40:50,970
<font color="#CCCCCC">is like a template and we can</font><font color="#E5E5E5"> patch the</font>

856
00:40:47,610 --> 00:40:53,580
<font color="#CCCCCC">timeout the watchdog</font><font color="#E5E5E5"> load the libraries</font>

857
00:40:50,970 --> 00:40:55,379
<font color="#E5E5E5">and thing</font><font color="#CCCCCC"> like that so</font><font color="#E5E5E5"> all this is</font>

858
00:40:53,580 --> 00:40:57,660
integrated in a<font color="#CCCCCC"> CDBG you don't have to</font>

859
00:40:55,380 --> 00:41:00,420
do that manually<font color="#E5E5E5"> it will load the</font>

860
00:40:57,660 --> 00:41:06,330
<font color="#E5E5E5">libraries we need and you can its</font>

861
00:41:00,420 --> 00:41:07,980
reports<font color="#E5E5E5"> continuing automatically loading</font>

862
00:41:06,330 --> 00:41:09,540
<font color="#E5E5E5">a</font><font color="#CCCCCC"> leash</font><font color="#E5E5E5"> additional gdb scripts if you</font>

863
00:41:07,980 --> 00:41:13,770
want to analyze<font color="#E5E5E5"> specific things and</font>

864
00:41:09,540 --> 00:41:16,020
synchronize with<font color="#CCCCCC"> Ida using red sync so</font>

865
00:41:13,770 --> 00:41:18,870
this is what this video<font color="#CCCCCC"> is going to</font><font color="#E5E5E5"> be a</font>

866
00:41:16,020 --> 00:41:21,240
lot<font color="#CCCCCC"> shorter</font><font color="#E5E5E5"> but basically you start a</font>

867
00:41:18,870 --> 00:41:25,920
CDBG it's going to listen<font color="#E5E5E5"> on the cell</font>

868
00:41:21,240 --> 00:41:27,390
line so<font color="#CCCCCC"> it's fetched the config to load</font>

869
00:41:25,920 --> 00:41:28,860
to know the config file name and

870
00:41:27,390 --> 00:41:31,440
everything<font color="#E5E5E5"> it will detect automatically</font>

871
00:41:28,860 --> 00:41:33,870
<font color="#CCCCCC">at boots that the boot rom is waiting</font>

872
00:41:31,440 --> 00:41:36,720
for<font color="#CCCCCC"> us to</font><font color="#E5E5E5"> input something it's going to</font>

873
00:41:33,870 --> 00:41:39,810
input<font color="#E5E5E5"> the boots the</font>

874
00:41:36,720 --> 00:41:42,868
the<font color="#E5E5E5"> a</font><font color="#CCCCCC"> setup in an the config file</font><font color="#E5E5E5"> it's</font>

875
00:41:39,810 --> 00:41:46,380
going to detect when the the root shell

876
00:41:42,869 --> 00:41:48,920
is happening<font color="#E5E5E5"> and it will automatically</font>

877
00:41:46,380 --> 00:41:55,230
input<font color="#E5E5E5"> the comments to part</font><font color="#CCCCCC"> to script</font>

878
00:41:48,920 --> 00:41:57,329
<font color="#CCCCCC">Lord gdb so in this case it</font><font color="#E5E5E5"> still takes</font>

879
00:41:55,230 --> 00:41:58,500
two or<font color="#E5E5E5"> three</font><font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> boot</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> at</font>

880
00:41:57,329 --> 00:41:59,970
least you can<font color="#E5E5E5"> do something else in</font>

881
00:41:58,500 --> 00:42:09,599
between<font color="#E5E5E5"> and you don't have to worry</font>

882
00:41:59,970 --> 00:42:12,450
about<font color="#E5E5E5"> it so it will detect that</font><font color="#CCCCCC"> GTB</font>

883
00:42:09,599 --> 00:42:16,560
server is waiting for started gdb

884
00:42:12,450 --> 00:42:18,720
connect<font color="#E5E5E5"> to it and then you can load</font><font color="#CCCCCC"> some</font>

885
00:42:16,560 --> 00:42:27,900
things or you can automatically<font color="#E5E5E5"> continue</font>

886
00:42:18,720 --> 00:42:29,069
if you want so the the other<font color="#E5E5E5"> thing we</font>

887
00:42:27,900 --> 00:42:31,290
were interested<font color="#E5E5E5"> in because</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> dealing</font>

888
00:42:29,069 --> 00:42:33,480
<font color="#CCCCCC">with 200</font><font color="#E5E5E5"> versions and because now we</font>

889
00:42:31,290 --> 00:42:35,400
have a way to choose which one we<font color="#CCCCCC"> want</font>

890
00:42:33,480 --> 00:42:38,700
<font color="#E5E5E5">to load at boots we were interested</font><font color="#CCCCCC"> to</font>

891
00:42:35,400 --> 00:42:41,280
know how<font color="#E5E5E5"> reliable we could how</font><font color="#CCCCCC"> how we</font>

892
00:42:38,700 --> 00:42:43,439
could<font color="#E5E5E5"> make the the</font><font color="#CCCCCC"> exporter variable for</font>

893
00:42:41,280 --> 00:42:46,680
different<font color="#CCCCCC"> versions and was it even</font>

894
00:42:43,440 --> 00:42:49,200
<font color="#E5E5E5">possible so the weight work is we can</font>

895
00:42:46,680 --> 00:42:51,328
load<font color="#CCCCCC"> a given</font><font color="#E5E5E5"> firmer we can detect when</font>

896
00:42:49,200 --> 00:42:52,020
it has finished<font color="#E5E5E5"> booting it fire</font><font color="#CCCCCC"> an</font>

897
00:42:51,329 --> 00:42:54,089
<font color="#CCCCCC">exploit</font>

898
00:42:52,020 --> 00:42:58,190
then detect the results by scripting

899
00:42:54,089 --> 00:43:01,290
<font color="#E5E5E5">above a CDBG for example if it's a</font>

900
00:42:58,190 --> 00:43:04,140
remote<font color="#CCCCCC"> collision but you can check if</font>

901
00:43:01,290 --> 00:43:05,970
you get a reverse<font color="#E5E5E5"> a real</font><font color="#CCCCCC"> sell back if</font>

902
00:43:04,140 --> 00:43:08,220
it's leaking<font color="#E5E5E5"> the version you can check</font>

903
00:43:05,970 --> 00:43:11,490
if you actually leak the version you can

904
00:43:08,220 --> 00:43:15,419
say that in a database<font color="#E5E5E5"> then either it</font>

905
00:43:11,490 --> 00:43:21,328
<font color="#CCCCCC">works so you issue</font><font color="#E5E5E5"> reboot command reload</font>

906
00:43:15,420 --> 00:43:25,710
command on on this SSH port<font color="#E5E5E5"> or on this</font>

907
00:43:21,329 --> 00:43:27,420
SSH port or if it if it crash you<font color="#CCCCCC"> you</font>

908
00:43:25,710 --> 00:43:29,250
listen<font color="#CCCCCC"> on the sailboat</font><font color="#E5E5E5"> anyway so you</font>

909
00:43:27,420 --> 00:43:32,670
<font color="#E5E5E5">know it you figure out it crashed and</font>

910
00:43:29,250 --> 00:43:36,930
<font color="#CCCCCC">you just wait</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> it to reboot and</font><font color="#E5E5E5"> so on</font>

911
00:43:32,670 --> 00:43:38,400
so what we<font color="#E5E5E5"> did is we we we have</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> IP</font>

912
00:43:36,930 --> 00:43:41,549
<font color="#CCCCCC">exploits working for different versions</font>

913
00:43:38,400 --> 00:43:42,900
<font color="#E5E5E5">we test them all we can figure out which</font>

914
00:43:41,550 --> 00:43:45,300
one<font color="#CCCCCC"> works which one</font><font color="#E5E5E5"> doesn't</font>

915
00:43:42,900 --> 00:43:47,820
why then fix things<font color="#E5E5E5"> and figure out that</font>

916
00:43:45,300 --> 00:43:49,350
at<font color="#E5E5E5"> the end even if you</font>

917
00:43:47,820 --> 00:43:51,660
if you have it<font color="#CCCCCC"> working</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> different</font>

918
00:43:49,350 --> 00:43:54,839
<font color="#CCCCCC">versions most of the time we figure out</font>

919
00:43:51,660 --> 00:43:57,660
<font color="#E5E5E5">that the reliability</font><font color="#CCCCCC"> is around</font><font color="#E5E5E5"> 50% due</font>

920
00:43:54,840 --> 00:44:00,690
<font color="#E5E5E5">to</font><font color="#CCCCCC"> hip inconsistencies because you need</font>

921
00:43:57,660 --> 00:44:03,690
to do something<font color="#CCCCCC"> sri and remote bags are</font>

922
00:44:00,690 --> 00:44:06,120
hard to make reliable<font color="#CCCCCC"> a little bit like</font>

923
00:44:03,690 --> 00:44:08,910
<font color="#CCCCCC">eternal</font><font color="#E5E5E5"> blue if you're familiar with all</font>

924
00:44:06,120 --> 00:44:11,970
these<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> bag</font><font color="#E5E5E5"> and then</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> is the SNMP</font>

925
00:44:08,910 --> 00:44:15,330
bag<font color="#E5E5E5"> because it's a stack overflow we</font>

926
00:44:11,970 --> 00:44:18,060
actually are able<font color="#E5E5E5"> to fix problems and</font>

927
00:44:15,330 --> 00:44:21,480
have a<font color="#CCCCCC"> 100 percent</font><font color="#E5E5E5"> reliability for the</font>

928
00:44:18,060 --> 00:44:23,340
web<font color="#CCCCCC"> bpn leak</font><font color="#E5E5E5"> there is no reliability</font>

929
00:44:21,480 --> 00:44:25,350
going on here<font color="#E5E5E5"> it's either you leak</font>

930
00:44:23,340 --> 00:44:28,170
<font color="#CCCCCC">diversion or</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> donate diversion but we</font>

931
00:44:25,350 --> 00:44:30,180
were interested<font color="#CCCCCC"> to know which one</font><font color="#E5E5E5"> was</font>

932
00:44:28,170 --> 00:44:31,920
actually venerable to which<font color="#CCCCCC"> Lake because</font>

933
00:44:30,180 --> 00:44:33,930
<font color="#CCCCCC">basically based on</font><font color="#E5E5E5"> the Cisco</font><font color="#CCCCCC"> advisory</font>

934
00:44:31,920 --> 00:44:36,090
wasn't really clear<font color="#E5E5E5"> for</font><font color="#CCCCCC"> us to understand</font>

935
00:44:33,930 --> 00:44:37,919
which one was<font color="#CCCCCC"> reliable or not</font><font color="#E5E5E5"> and here</font>

936
00:44:36,090 --> 00:44:39,770
because<font color="#CCCCCC"> we have a way to automate things</font>

937
00:44:37,920 --> 00:44:51,720
we can<font color="#E5E5E5"> figure out which one is really</font>

938
00:44:39,770 --> 00:44:54,870
<font color="#E5E5E5">venerable and which one is patched so</font>

939
00:44:51,720 --> 00:44:57,149
I'm almost<font color="#E5E5E5"> done but basically if you</font>

940
00:44:54,870 --> 00:44:59,400
followed my presentation we actually we

941
00:44:57,150 --> 00:45:01,830
were able<font color="#CCCCCC"> to patch the firmware</font><font color="#E5E5E5"> patch</font>

942
00:44:59,400 --> 00:45:04,080
liner inside<font color="#E5E5E5"> the</font><font color="#CCCCCC"> forum or rip repack the</font>

943
00:45:01,830 --> 00:45:06,509
firmware<font color="#E5E5E5"> and we were</font><font color="#CCCCCC"> able to load the</font>

944
00:45:04,080 --> 00:45:08,370
modified firmware and so it doesn't<font color="#CCCCCC"> look</font>

945
00:45:06,510 --> 00:45:11,070
<font color="#CCCCCC">like</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> is any secure boots there</font>

946
00:45:08,370 --> 00:45:14,460
isn't on the device we tested with<font color="#CCCCCC"> the</font>

947
00:45:11,070 --> 00:45:16,380
version we tested but in January<font color="#CCCCCC"> we</font>

948
00:45:14,460 --> 00:45:17,460
<font color="#E5E5E5">actually get something</font><font color="#CCCCCC"> interesting</font>

949
00:45:16,380 --> 00:45:19,680
because<font color="#E5E5E5"> when you try to boot the</font>

950
00:45:17,460 --> 00:45:22,350
modified image<font color="#E5E5E5"> you actually have this</font>

951
00:45:19,680 --> 00:45:23,910
error saying<font color="#E5E5E5"> the digital signature of</font>

952
00:45:22,350 --> 00:45:26,400
the booted image file did not verify

953
00:45:23,910 --> 00:45:29,490
successfully<font color="#E5E5E5"> and if you actually look</font>

954
00:45:26,400 --> 00:45:32,160
for this string on<font color="#CCCCCC"> motive on</font><font color="#E5E5E5"> the files</font>

955
00:45:29,490 --> 00:45:34,109
on the<font color="#CCCCCC"> file system it's actually</font><font color="#E5E5E5"> in line</font>

956
00:45:32,160 --> 00:45:38,910
emulator and because line memory room

957
00:45:34,110 --> 00:45:41,580
<font color="#E5E5E5">loads liner and so your reverse engineer</font>

958
00:45:38,910 --> 00:45:44,069
<font color="#CCCCCC">that we were we did that and</font><font color="#E5E5E5"> you may</font>

959
00:45:41,580 --> 00:45:46,490
actually<font color="#E5E5E5"> figure out that there</font><font color="#CCCCCC"> is a</font>

960
00:45:44,070 --> 00:45:49,560
check obviously because it doesn't load

961
00:45:46,490 --> 00:45:53,189
<font color="#CCCCCC">I really what we tried is just to patch</font>

962
00:45:49,560 --> 00:45:55,410
the jump to<font color="#E5E5E5"> the code calling this error</font>

963
00:45:53,190 --> 00:45:57,990
<font color="#E5E5E5">to just jump to loading liner and</font>

964
00:45:55,410 --> 00:45:58,839
actually it worked<font color="#E5E5E5"> so</font><font color="#CCCCCC"> there isn't</font><font color="#E5E5E5"> any</font>

965
00:45:57,990 --> 00:46:02,229
<font color="#E5E5E5">secure</font>

966
00:45:58,840 --> 00:46:07,000
boots<font color="#CCCCCC"> going on so we were able to do our</font>

967
00:46:02,230 --> 00:46:09,160
research<font color="#E5E5E5"> on</font><font color="#CCCCCC"> Chinese reservoir so the</font>

968
00:46:07,000 --> 00:46:13,870
<font color="#E5E5E5">last tool I'm going</font><font color="#CCCCCC"> to present is</font><font color="#E5E5E5"> Ida</font>

969
00:46:09,160 --> 00:46:16,720
<font color="#E5E5E5">hands so the problem we had is we wanted</font>

970
00:46:13,870 --> 00:46:21,970
<font color="#CCCCCC">to analyze almost 200 liner binaries and</font>

971
00:46:16,720 --> 00:46:22,419
each of them is almost<font color="#E5E5E5"> between 25 and 85</font>

972
00:46:21,970 --> 00:46:24,399
<font color="#E5E5E5">mags</font>

973
00:46:22,420 --> 00:46:25,780
depending on the version the<font color="#CCCCCC"> latest</font><font color="#E5E5E5"> are</font>

974
00:46:24,400 --> 00:46:30,640
like bigger<font color="#CCCCCC"> than the previous one</font>

975
00:46:25,780 --> 00:46:34,270
<font color="#E5E5E5">because</font><font color="#CCCCCC"> there is</font><font color="#E5E5E5"> more features so that's</font>

976
00:46:30,640 --> 00:46:35,740
me when trying<font color="#E5E5E5"> to load an 85 Meg in</font>

977
00:46:34,270 --> 00:46:38,560
either<font color="#CCCCCC"> although I</font><font color="#E5E5E5"> should try it already</font>

978
00:46:35,740 --> 00:46:43,060
takes a while<font color="#E5E5E5"> so if you have 200 files</font>

979
00:46:38,560 --> 00:46:45,509
to load you<font color="#CCCCCC"> have time to go to take a</font>

980
00:46:43,060 --> 00:46:48,029
coffee<font color="#CCCCCC"> or go to a</font><font color="#E5E5E5"> security conference</font>

981
00:46:45,510 --> 00:46:52,770
hoping you're<font color="#CCCCCC"> not here because of that</font>

982
00:46:48,030 --> 00:46:55,630
<font color="#E5E5E5">but anyway</font><font color="#CCCCCC"> Ida hunt the way it works is</font>

983
00:46:52,770 --> 00:46:59,230
it's<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> Ida</font><font color="#E5E5E5"> and automates</font>

984
00:46:55,630 --> 00:47:02,740
<font color="#E5E5E5">analyzing binaries</font><font color="#CCCCCC"> using either so it's</font>

985
00:46:59,230 --> 00:47:06,490
really<font color="#E5E5E5"> simple tool that's not really</font>

986
00:47:02,740 --> 00:47:08,290
clever<font color="#E5E5E5"> but the way it work is it</font><font color="#CCCCCC"> spawns</font>

987
00:47:06,490 --> 00:47:10,060
different instances<font color="#CCCCCC"> of Ida</font><font color="#E5E5E5"> in the</font>

988
00:47:08,290 --> 00:47:14,980
background<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> show any</font><font color="#E5E5E5"> GUI and</font>

989
00:47:10,060 --> 00:47:19,029
it allows<font color="#CCCCCC"> us to script</font><font color="#E5E5E5"> things it doesn't</font>

990
00:47:14,980 --> 00:47:21,070
it's<font color="#E5E5E5"> not specific to a say firewalls but</font>

991
00:47:19,030 --> 00:47:23,140
<font color="#E5E5E5">we we applied it to Cisco</font><font color="#CCCCCC"> I say but if</font>

992
00:47:21,070 --> 00:47:25,680
<font color="#E5E5E5">you have like batch</font><font color="#CCCCCC"> Tuesday's that you</font>

993
00:47:23,140 --> 00:47:27,910
want to lies script things<font color="#E5E5E5"> in either</font>

994
00:47:25,680 --> 00:47:30,009
<font color="#E5E5E5">create</font><font color="#CCCCCC"> a IDPs for different files</font>

995
00:47:27,910 --> 00:47:34,390
<font color="#E5E5E5">different samples</font><font color="#CCCCCC"> malware's you want</font><font color="#E5E5E5"> to</font>

996
00:47:30,010 --> 00:47:36,700
analyze embedded devices<font color="#E5E5E5"> UEFI modules or</font>

997
00:47:34,390 --> 00:47:39,790
whatever<font color="#E5E5E5"> as</font><font color="#CCCCCC"> long as either</font><font color="#E5E5E5"> knows the</font>

998
00:47:36,700 --> 00:47:42,040
<font color="#CCCCCC">formats</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> use either hand</font><font color="#E5E5E5"> so the</font>

999
00:47:39,790 --> 00:47:44,620
way it<font color="#CCCCCC"> works is you use Idahoan</font><font color="#E5E5E5"> from the</font>

1000
00:47:42,040 --> 00:47:46,840
command line<font color="#CCCCCC"> you</font><font color="#E5E5E5"> specify the folder that</font>

1001
00:47:44,620 --> 00:47:49,480
<font color="#E5E5E5">you</font><font color="#CCCCCC"> want to analyze it</font><font color="#E5E5E5"> can analyze all</font>

1002
00:47:46,840 --> 00:47:51,220
the files from this folder<font color="#E5E5E5"> except that</font>

1003
00:47:49,480 --> 00:47:53,200
you can specify a filter<font color="#E5E5E5"> that will</font>

1004
00:47:51,220 --> 00:47:55,899
indicate<font color="#E5E5E5"> which files you want</font><font color="#CCCCCC"> to analyze</font>

1005
00:47:53,200 --> 00:47:57,879
<font color="#E5E5E5">so in our case we specify that we only</font>

1006
00:47:55,900 --> 00:48:01,120
want<font color="#CCCCCC"> to analyze the liner</font><font color="#E5E5E5"> files for</font>

1007
00:47:57,880 --> 00:48:03,760
example<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> you can specify - -</font>

1008
00:48:01,120 --> 00:48:06,100
<font color="#E5E5E5">analyze to analyze that to indicate</font><font color="#CCCCCC"> that</font>

1009
00:48:03,760 --> 00:48:08,650
you want to do the initial<font color="#E5E5E5"> analysis in</font>

1010
00:48:06,100 --> 00:48:10,120
either which is<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> thing that</font>

1011
00:48:08,650 --> 00:48:12,710
<font color="#E5E5E5">happens when you load the binary in</font>

1012
00:48:10,120 --> 00:48:15,650
either and then you can you

1013
00:48:12,710 --> 00:48:18,830
<font color="#E5E5E5">is a script</font><font color="#CCCCCC"> argument which will</font>

1014
00:48:15,650 --> 00:48:21,230
<font color="#E5E5E5">basically allow you to pass script Ida</font>

1015
00:48:18,830 --> 00:48:26,119
Python scripts<font color="#E5E5E5"> to either so there are</font>

1016
00:48:21,230 --> 00:48:29,750
they're<font color="#E5E5E5"> going to be run in</font><font color="#CCCCCC"> Ida</font>

1017
00:48:26,119 --> 00:48:32,349
<font color="#E5E5E5">so you can script things and in our case</font>

1018
00:48:29,750 --> 00:48:36,950
<font color="#CCCCCC">we were interested to hunt for symbols</font>

1019
00:48:32,349 --> 00:48:40,490
basically like the like<font color="#CCCCCC"> the watchdog</font>

1020
00:48:36,950 --> 00:48:44,060
symbol<font color="#E5E5E5"> so we can use that</font><font color="#CCCCCC"> to retrieve</font>

1021
00:48:40,490 --> 00:48:47,270
the watchdog for<font color="#CCCCCC"> 200 firmware so the way</font>

1022
00:48:44,060 --> 00:48:49,849
it works<font color="#CCCCCC"> is you start Ida hunt</font><font color="#E5E5E5"> it first</font>

1023
00:48:47,270 --> 00:48:52,460
check its list all the file from this

1024
00:48:49,849 --> 00:48:54,859
<font color="#E5E5E5">hockey</font><font color="#CCCCCC"> it's it first</font><font color="#E5E5E5"> check which file</font><font color="#CCCCCC"> it</font>

1025
00:48:52,460 --> 00:48:57,320
needs to analyze then it's going<font color="#E5E5E5"> to load</font>

1026
00:48:54,859 --> 00:48:59,180
the<font color="#E5E5E5"> analyze module to do the initial</font>

1027
00:48:57,320 --> 00:49:01,849
analysis and the way it work is will

1028
00:48:59,180 --> 00:49:04,549
spawn either<font color="#E5E5E5"> qig Z which is the</font><font color="#CCCCCC"> I dub</font>

1029
00:49:01,849 --> 00:49:06,619
either executable in the background<font color="#CCCCCC"> so</font>

1030
00:49:04,550 --> 00:49:10,369
it doesn't show anything<font color="#E5E5E5"> but it just</font>

1031
00:49:06,619 --> 00:49:12,890
wait for the the different<font color="#E5E5E5"> processes to</font>

1032
00:49:10,369 --> 00:49:15,740
finish so you<font color="#E5E5E5"> can customize</font><font color="#CCCCCC"> how many</font>

1033
00:49:12,890 --> 00:49:18,259
instances<font color="#E5E5E5"> of Ida you want to load by</font>

1034
00:49:15,740 --> 00:49:24,229
default we chose<font color="#E5E5E5"> 10 because otherwise</font>

1035
00:49:18,260 --> 00:49:27,140
the fan will just but the tennis is good

1036
00:49:24,230 --> 00:49:29,780
with this kind<font color="#CCCCCC"> of laptop</font><font color="#E5E5E5"> and then you</font>

1037
00:49:27,140 --> 00:49:34,279
you can specify the scripts that's<font color="#E5E5E5"> gonna</font>

1038
00:49:29,780 --> 00:49:36,650
be<font color="#CCCCCC"> run as well in</font><font color="#E5E5E5"> either so it allows</font><font color="#CCCCCC"> us</font>

1039
00:49:34,280 --> 00:49:40,099
<font color="#CCCCCC">to automate retrieving symbols like the</font>

1040
00:49:36,650 --> 00:49:42,859
clock interval for<font color="#E5E5E5"> debugging symbols for</font>

1041
00:49:40,099 --> 00:49:46,400
for<font color="#E5E5E5"> analyzing heaps and for the debug</font>

1042
00:49:42,859 --> 00:49:48,500
shell that allowed us<font color="#CCCCCC"> to control c</font><font color="#E5E5E5"> to</font>

1043
00:49:46,400 --> 00:49:50,570
get symbols so the first one a

1044
00:49:48,500 --> 00:49:54,980
<font color="#E5E5E5">administer ticketed</font><font color="#CCCCCC"> the function we want</font>

1045
00:49:50,570 --> 00:49:57,380
<font color="#CCCCCC">to patch in line r2 to have this</font><font color="#E5E5E5"> reverse</font>

1046
00:49:54,980 --> 00:49:59,359
shell and the<font color="#CCCCCC"> Sox process server start</font>

1047
00:49:57,380 --> 00:50:01,210
is a function that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> need to enable to</font>

1048
00:49:59,359 --> 00:50:04,880
actually enable this reverse<font color="#E5E5E5"> shell</font>

1049
00:50:01,210 --> 00:50:07,220
<font color="#E5E5E5">communication but you can actually we</font>

1050
00:50:04,880 --> 00:50:09,710
actually<font color="#E5E5E5"> used it as well to retrieve all</font>

1051
00:50:07,220 --> 00:50:15,290
the<font color="#E5E5E5"> symbols we needed to to weaponize</font>

1052
00:50:09,710 --> 00:50:18,470
the<font color="#CCCCCC"> exploits so in conclusion I talked</font>

1053
00:50:15,290 --> 00:50:20,450
about<font color="#E5E5E5"> three tools so one to deal with</font><font color="#CCCCCC"> a</font>

1054
00:50:18,470 --> 00:50:22,549
<font color="#CCCCCC">safe armor</font><font color="#E5E5E5"> one to deal with the</font>

1055
00:50:20,450 --> 00:50:25,850
debugging<font color="#CCCCCC"> in a essay</font>

1056
00:50:22,550 --> 00:50:27,950
and the third one<font color="#E5E5E5"> to</font><font color="#CCCCCC"> hunt</font><font color="#E5E5E5"> for symbols in</font>

1057
00:50:25,850 --> 00:50:30,589
Ida<font color="#E5E5E5"> which is not specific to where</font><font color="#CCCCCC"> you</font>

1058
00:50:27,950 --> 00:50:33,109
said<font color="#E5E5E5"> that we use for</font><font color="#CCCCCC"> sa so these tools</font>

1059
00:50:30,590 --> 00:50:37,430
are have just been<font color="#E5E5E5"> released so you can</font>

1060
00:50:33,110 --> 00:50:39,950
<font color="#CCCCCC">access this link we we use we use these</font>

1061
00:50:37,430 --> 00:50:42,140
tools<font color="#E5E5E5"> really to understand internal so</font>

1062
00:50:39,950 --> 00:50:45,500
we have<font color="#E5E5E5"> really a better knowledge of the</font>

1063
00:50:42,140 --> 00:50:49,299
<font color="#CCCCCC">tools of</font><font color="#E5E5E5"> the of the internals</font><font color="#CCCCCC"> but also</font>

1064
00:50:45,500 --> 00:50:52,340
to to debug exploits so if you're

1065
00:50:49,300 --> 00:50:57,920
interested<font color="#CCCCCC"> in in this</font><font color="#E5E5E5"> kind of thing you</font>

1066
00:50:52,340 --> 00:51:02,050
<font color="#CCCCCC">can use our tools right that's all I</font>

1067
00:50:57,920 --> 00:51:07,590
have to say<font color="#CCCCCC"> thanks</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> attending</font>

1068
00:51:02,050 --> 00:51:28,620
[Applause]

1069
00:51:07,590 --> 00:51:28,620
[Music]

