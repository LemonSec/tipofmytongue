1
00:00:00,060 --> 00:00:09,660
hello everyone welcome<font color="#E5E5E5"> to my</font><font color="#CCCCCC"> talk on</font>

2
00:00:05,390 --> 00:00:12,268
<font color="#CCCCCC">bulking java's backdoor start off with</font>

3
00:00:09,660 --> 00:00:15,660
Who am I I'm<font color="#CCCCCC"> Nicky</font><font color="#E5E5E5"> blue I'm a managing</font>

4
00:00:12,269 --> 00:00:17,100
security<font color="#E5E5E5"> consultant</font><font color="#CCCCCC"> NCC</font><font color="#E5E5E5"> group I'm a next</font>

5
00:00:15,660 --> 00:00:19,470
<font color="#E5E5E5">software developer I've developed</font>

6
00:00:17,100 --> 00:00:23,580
software<font color="#E5E5E5"> all kinds of all kinds desktop</font>

7
00:00:19,470 --> 00:00:25,229
web games<font color="#E5E5E5"> factories</font><font color="#CCCCCC"> let's think of</font>

8
00:00:23,580 --> 00:00:26,880
myself as a hacker I like to pull things

9
00:00:25,230 --> 00:00:29,150
apart<font color="#E5E5E5"> reverse engineer break things</font>

10
00:00:26,880 --> 00:00:31,830
build things all this kind of stuff

11
00:00:29,150 --> 00:00:34,379
outside<font color="#CCCCCC"> of</font><font color="#E5E5E5"> technology</font><font color="#CCCCCC"> outside of work</font>

12
00:00:31,830 --> 00:00:37,890
and research<font color="#CCCCCC"> I'm a hiker</font><font color="#E5E5E5"> and a rock</font>

13
00:00:34,380 --> 00:00:39,930
climber<font color="#CCCCCC"> misfold</font><font color="#E5E5E5"> so is me on top</font><font color="#CCCCCC"> of a</font>

14
00:00:37,890 --> 00:00:42,420
mountain that's in the middle<font color="#E5E5E5"> of one</font><font color="#CCCCCC"> of</font>

15
00:00:39,930 --> 00:00:45,840
the biggest military<font color="#CCCCCC"> training ranges in</font>

16
00:00:42,420 --> 00:00:48,690
the UK just<font color="#CCCCCC"> obli oversee defense that</font>

17
00:00:45,840 --> 00:00:52,250
<font color="#E5E5E5">you can see I was</font><font color="#CCCCCC"> sold</font><font color="#E5E5E5"> that I risk</font>

18
00:00:48,690 --> 00:00:55,620
<font color="#E5E5E5">stepping on an unexploded ordnance on</font>

19
00:00:52,250 --> 00:00:59,519
<font color="#CCCCCC">the internet I go by the handle</font><font color="#E5E5E5"> next to</font>

20
00:00:55,620 --> 00:01:02,010
<font color="#E5E5E5">DB so I'm gonna start off</font><font color="#CCCCCC"> with a story</font>

21
00:00:59,520 --> 00:01:05,189
<font color="#CCCCCC">all of</font><font color="#E5E5E5"> the research that attends today</font>

22
00:01:02,010 --> 00:01:07,289
<font color="#E5E5E5">starts off with some</font><font color="#CCCCCC"> interesting job</font><font color="#E5E5E5"> I</font>

23
00:01:05,188 --> 00:01:09,899
came<font color="#E5E5E5"> across something new we came across</font>

24
00:01:07,290 --> 00:01:12,000
something strange interesting something

25
00:01:09,900 --> 00:01:17,250
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I really thought wanted looking</font>

26
00:01:12,000 --> 00:01:20,580
into a bit<font color="#E5E5E5"> more so I was a customer site</font>

27
00:01:17,250 --> 00:01:22,580
doing a java application assessment and

28
00:01:20,580 --> 00:01:24,810
this<font color="#CCCCCC"> customer renowned for doing this</font>

29
00:01:22,580 --> 00:01:26,908
didn't provide any<font color="#E5E5E5"> credentials and so</font>

30
00:01:24,810 --> 00:01:31,350
<font color="#E5E5E5">day three</font><font color="#CCCCCC"> so a dot of</font><font color="#E5E5E5"> time to mess about</font>

31
00:01:26,909 --> 00:01:33,270
with things<font color="#E5E5E5"> the supporting em structure</font>

32
00:01:31,350 --> 00:01:37,350
for this<font color="#CCCCCC"> application was included in</font>

33
00:01:33,270 --> 00:01:39,060
scope<font color="#E5E5E5"> so in those three</font><font color="#CCCCCC"> days</font><font color="#E5E5E5"> and I did a</font>

34
00:01:37,350 --> 00:01:41,309
lot<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> usual stuff that you would do</font>

35
00:01:39,060 --> 00:01:44,189
I did a mapping of the<font color="#CCCCCC"> backend</font><font color="#E5E5E5"> services</font>

36
00:01:41,310 --> 00:01:45,750
<font color="#E5E5E5">ports around with the</font><font color="#CCCCCC"> login form of the</font>

37
00:01:44,189 --> 00:01:47,639
application be compiled<font color="#E5E5E5"> at all this kind</font>

38
00:01:45,750 --> 00:01:48,990
of stuff<font color="#E5E5E5"> while I was doing this there</font>

39
00:01:47,640 --> 00:01:54,119
was this one<font color="#CCCCCC"> network</font><font color="#E5E5E5"> service that really</font>

40
00:01:48,990 --> 00:01:59,820
<font color="#E5E5E5">stood out and that was this are on my</font>

41
00:01:54,119 --> 00:02:01,320
registry Java RMI<font color="#E5E5E5"> for</font><font color="#CCCCCC"> 1099</font><font color="#E5E5E5"> CCP and I'd</font>

42
00:01:59,820 --> 00:02:03,419
never<font color="#E5E5E5"> seen</font><font color="#CCCCCC"> that before but it turns</font><font color="#E5E5E5"> out</font>

43
00:02:01,320 --> 00:02:06,000
<font color="#E5E5E5">that was called</font><font color="#CCCCCC"> that was</font><font color="#E5E5E5"> Java remote</font>

44
00:02:03,420 --> 00:02:07,560
method invocation<font color="#E5E5E5"> lost people appear</font>

45
00:02:06,000 --> 00:02:10,378
<font color="#E5E5E5">this saw me this is really old stuff</font>

46
00:02:07,560 --> 00:02:13,460
<font color="#E5E5E5">really lame but</font><font color="#CCCCCC"> that sounded</font><font color="#E5E5E5"> interesting</font>

47
00:02:10,378 --> 00:02:17,190
to me remote method invocation

48
00:02:13,460 --> 00:02:19,080
and this service<font color="#CCCCCC"> actually and gave me</font>

49
00:02:17,190 --> 00:02:21,359
that server<font color="#CCCCCC"> before I got the credentials</font>

50
00:02:19,080 --> 00:02:24,120
<font color="#CCCCCC">to the application</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it was really</font>

51
00:02:21,360 --> 00:02:27,150
<font color="#CCCCCC">easy actually it was these</font><font color="#E5E5E5"> three lines</font>

52
00:02:24,120 --> 00:02:30,000
<font color="#E5E5E5">of Java</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> first one I get a</font>

53
00:02:27,150 --> 00:02:32,960
<font color="#E5E5E5">reference to the</font><font color="#CCCCCC"> RMA registry service</font>

54
00:02:30,000 --> 00:02:35,280
point near the<font color="#CCCCCC"> target server import</font><font color="#E5E5E5"> I</font>

55
00:02:32,960 --> 00:02:37,520
then I<font color="#E5E5E5"> start service to give me an</font>

56
00:02:35,280 --> 00:02:41,040
<font color="#CCCCCC">object which was called file browser I</font>

57
00:02:37,520 --> 00:02:43,440
then said file browser<font color="#CCCCCC"> write this file</font>

58
00:02:41,040 --> 00:02:47,340
<font color="#E5E5E5">so this file name and these these are</font>

59
00:02:43,440 --> 00:02:48,480
the<font color="#E5E5E5"> contents and that got</font><font color="#CCCCCC"> me but and a</font>

60
00:02:47,340 --> 00:02:49,950
combination<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a few</font><font color="#CCCCCC"> little bits</font><font color="#E5E5E5"> and</font>

61
00:02:48,480 --> 00:02:53,609
<font color="#CCCCCC">pieces but</font><font color="#E5E5E5"> I've got me the server</font><font color="#CCCCCC"> before</font>

62
00:02:49,950 --> 00:02:55,940
I got application credentials and now<font color="#CCCCCC"> I</font>

63
00:02:53,610 --> 00:02:58,410
couldn't<font color="#CCCCCC"> believe just how easy that was</font>

64
00:02:55,940 --> 00:03:01,220
<font color="#E5E5E5">but the same time that left me really</font>

65
00:02:58,410 --> 00:03:06,120
<font color="#E5E5E5">intrigued and I wondered how common is</font>

66
00:03:01,220 --> 00:03:09,329
<font color="#CCCCCC">RMI and how</font><font color="#E5E5E5"> often do people use it so in</font>

67
00:03:06,120 --> 00:03:11,700
securely and and<font color="#E5E5E5"> also what else can we</font>

68
00:03:09,330 --> 00:03:14,010
do<font color="#CCCCCC"> with</font><font color="#E5E5E5"> it so</font><font color="#CCCCCC"> that's how I</font><font color="#E5E5E5"> started off</font>

69
00:03:11,700 --> 00:03:16,549
with the work that<font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to talk to</font>

70
00:03:14,010 --> 00:03:16,549
you about today

71
00:03:20,590 --> 00:03:24,950
so<font color="#E5E5E5"> gonna start off with a brief</font>

72
00:03:22,730 --> 00:03:27,890
introduction to<font color="#E5E5E5"> our</font><font color="#CCCCCC"> mi</font><font color="#E5E5E5"> for anyone that's</font>

73
00:03:24,950 --> 00:03:32,619
<font color="#E5E5E5">not familiar like say it's remote method</font>

74
00:03:27,890 --> 00:03:36,799
invocation<font color="#E5E5E5"> essentially RPC for Java and</font>

75
00:03:32,620 --> 00:03:38,450
<font color="#CCCCCC">RMI allows us to execute methods</font><font color="#E5E5E5"> execute</font>

76
00:03:36,800 --> 00:03:41,810
functions that<font color="#CCCCCC"> exist within another</font>

77
00:03:38,450 --> 00:03:44,630
virtual<font color="#E5E5E5"> java virtual machine and the</font>

78
00:03:41,810 --> 00:03:46,850
java virtual<font color="#E5E5E5"> machine can be vocal on the</font>

79
00:03:44,630 --> 00:03:48,410
same system<font color="#CCCCCC"> or remote or a completely</font>

80
00:03:46,850 --> 00:03:51,650
different host<font color="#E5E5E5"> even somewhere else on</font>

81
00:03:48,410 --> 00:03:53,390
<font color="#E5E5E5">the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> it's very simple to</font>

82
00:03:51,650 --> 00:03:54,010
<font color="#E5E5E5">implement which i think is part</font><font color="#CCCCCC"> of the</font>

83
00:03:53,390 --> 00:03:58,750
problem

84
00:03:54,010 --> 00:04:00,890
so<font color="#CCCCCC"> RMI itself takes care of all of</font><font color="#E5E5E5"> the</font>

85
00:03:58,750 --> 00:04:05,090
connection<font color="#E5E5E5"> and the transport of these</font>

86
00:04:00,890 --> 00:04:07,130
remote<font color="#E5E5E5"> method implications</font><font color="#CCCCCC"> in fact the</font>

87
00:04:05,090 --> 00:04:08,960
developer who's<font color="#CCCCCC"> using RMI</font><font color="#E5E5E5"> doesn't even</font>

88
00:04:07,130 --> 00:04:13,790
need to<font color="#E5E5E5"> be aware that they</font><font color="#CCCCCC"> are using</font><font color="#E5E5E5"> our</font>

89
00:04:08,960 --> 00:04:17,210
<font color="#CCCCCC">mind something</font><font color="#E5E5E5"> that's important</font><font color="#CCCCCC"> to know</font>

90
00:04:13,790 --> 00:04:18,560
here<font color="#CCCCCC"> is the RMI</font><font color="#E5E5E5"> doesn't mean remote code</font>

91
00:04:17,209 --> 00:04:21,200
execution<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not arbitrary</font><font color="#E5E5E5"> remote code</font>

92
00:04:18,560 --> 00:04:22,940
execution<font color="#E5E5E5"> all we're doing is we're</font>

93
00:04:21,200 --> 00:04:25,880
asking the server to execute code that

94
00:04:22,940 --> 00:04:29,840
it<font color="#E5E5E5"> already is aware of that already has</font>

95
00:04:25,880 --> 00:04:34,250
<font color="#CCCCCC">access to it looked something</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> this</font>

96
00:04:29,840 --> 00:04:35,179
we've got<font color="#CCCCCC"> two java virtual machines on</font>

97
00:04:34,250 --> 00:04:36,560
the Left we've<font color="#CCCCCC"> got a client application</font>

98
00:04:35,180 --> 00:04:40,700
<font color="#CCCCCC">on the right we've got a server</font>

99
00:04:36,560 --> 00:04:44,000
application<font color="#E5E5E5"> when you call a method that</font>

100
00:04:40,700 --> 00:04:47,539
<font color="#CCCCCC">a remote</font><font color="#E5E5E5"> method excuse me from the</font>

101
00:04:44,000 --> 00:04:49,730
client application<font color="#E5E5E5"> it goes off</font><font color="#CCCCCC"> today are</font>

102
00:04:47,540 --> 00:04:53,270
<font color="#CCCCCC">Maya subsystem</font><font color="#E5E5E5"> that wraps it up in a</font>

103
00:04:49,730 --> 00:04:56,990
packet sends it over the network<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

104
00:04:53,270 --> 00:05:01,159
remote JVM that decodes the packet sends

105
00:04:56,990 --> 00:05:04,400
<font color="#E5E5E5">it to the fan see the objects and the</font>

106
00:05:01,160 --> 00:05:06,170
<font color="#CCCCCC">methods</font><font color="#E5E5E5"> are call cause that method gets</font>

107
00:05:04,400 --> 00:05:09,109
<font color="#E5E5E5">the return value and does the</font><font color="#CCCCCC"> same in</font>

108
00:05:06,170 --> 00:05:11,060
<font color="#E5E5E5">the reverse now all of this is entirely</font>

109
00:05:09,110 --> 00:05:13,070
transparent and so developer<font color="#CCCCCC"> it just</font>

110
00:05:11,060 --> 00:05:18,620
looks like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we've got an</font><font color="#CCCCCC"> object I</font>

111
00:05:13,070 --> 00:05:21,440
foo and<font color="#CCCCCC"> we</font><font color="#E5E5E5"> calling the method bar they</font>

112
00:05:18,620 --> 00:05:25,970
are on<font color="#E5E5E5"> my register service is nothing</font>

113
00:05:21,440 --> 00:05:27,740
but a directory<font color="#CCCCCC"> of Java objects em ups</font>

114
00:05:25,970 --> 00:05:29,360
Java objects the names<font color="#CCCCCC"> source server</font>

115
00:05:27,740 --> 00:05:32,000
application<font color="#E5E5E5"> will say I've got this</font>

116
00:05:29,360 --> 00:05:32,810
<font color="#CCCCCC">object</font><font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> call it</font><font color="#CCCCCC"> this there</font><font color="#E5E5E5"> you</font>

117
00:05:32,000 --> 00:05:35,480
go

118
00:05:32,810 --> 00:05:42,620
the register service listens on TCP port

119
00:05:35,480 --> 00:05:45,050
<font color="#CCCCCC">send out</font><font color="#E5E5E5"> your name by default and we</font>

120
00:05:42,620 --> 00:05:49,790
interrupt with this<font color="#CCCCCC"> service</font><font color="#E5E5E5"> using the</font>

121
00:05:45,050 --> 00:05:52,220
<font color="#CCCCCC">Java RMI dot registry class that's got a</font>

122
00:05:49,790 --> 00:05:55,250
series of<font color="#CCCCCC"> methods that</font><font color="#E5E5E5"> allow us</font><font color="#CCCCCC"> to do</font>

123
00:05:52,220 --> 00:05:59,750
<font color="#E5E5E5">things like bind an object so we supply</font>

124
00:05:55,250 --> 00:06:02,480
a name and an<font color="#E5E5E5"> object you might notice</font>

125
00:05:59,750 --> 00:06:05,690
<font color="#CCCCCC">that the type of the</font><font color="#E5E5E5"> second parameter is</font>

126
00:06:02,480 --> 00:06:08,570
<font color="#E5E5E5">not objects</font><font color="#CCCCCC"> its remote</font><font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to</font>

127
00:06:05,690 --> 00:06:10,150
expose an object<font color="#E5E5E5"> over</font><font color="#CCCCCC"> RMI</font><font color="#E5E5E5"> image the the</font>

128
00:06:08,570 --> 00:06:17,810
class of that objects needs to implement

129
00:06:10,150 --> 00:06:21,429
<font color="#E5E5E5">Java RMI remote which is an interface we</font>

130
00:06:17,810 --> 00:06:23,360
can<font color="#CCCCCC"> also get a list</font><font color="#E5E5E5"> of objects so</font>

131
00:06:21,430 --> 00:06:27,470
registered with the given<font color="#CCCCCC"> are my</font>

132
00:06:23,360 --> 00:06:29,380
registry<font color="#E5E5E5"> and we can look object sort by</font>

133
00:06:27,470 --> 00:06:33,950
name

134
00:06:29,380 --> 00:06:37,870
we can also<font color="#CCCCCC"> rebind</font><font color="#E5E5E5"> and unbind objects so</font>

135
00:06:33,950 --> 00:06:41,390
an object been bound<font color="#CCCCCC"> we can say actually</font>

136
00:06:37,870 --> 00:06:46,010
<font color="#E5E5E5">bind</font><font color="#CCCCCC"> this other objects</font><font color="#E5E5E5"> to this name or</font>

137
00:06:41,390 --> 00:06:47,240
we can unbind<font color="#E5E5E5"> an object's those when I</font>

138
00:06:46,010 --> 00:06:49,789
first came<font color="#CCCCCC"> across this when I first</font>

139
00:06:47,240 --> 00:06:52,280
<font color="#CCCCCC">looked into</font><font color="#E5E5E5"> this I thought oh it sounds</font>

140
00:06:49,790 --> 00:06:54,050
<font color="#E5E5E5">like a a freed man in the middle</font><font color="#CCCCCC"> or a</font>

141
00:06:52,280 --> 00:06:55,250
freed<font color="#E5E5E5"> another service where</font><font color="#CCCCCC"> we get a</font>

142
00:06:54,050 --> 00:06:57,950
list of<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the objects and</font><font color="#E5E5E5"> we</font>

143
00:06:55,250 --> 00:06:59,990
combine them or we get an object's we

144
00:06:57,950 --> 00:07:02,270
rebound it so<font color="#CCCCCC"> there point set ourselves</font>

145
00:06:59,990 --> 00:07:05,690
<font color="#CCCCCC">some we forward the date</font><font color="#E5E5E5"> run one in the</font>

146
00:07:02,270 --> 00:07:11,479
middle in<font color="#CCCCCC"> it our Emma has a</font><font color="#E5E5E5"> security</font>

147
00:07:05,690 --> 00:07:14,990
feature that's prevents bind<font color="#E5E5E5"> rebound and</font>

148
00:07:11,479 --> 00:07:18,560
unbind from being called from<font color="#E5E5E5"> non</font>

149
00:07:14,990 --> 00:07:21,880
<font color="#CCCCCC">localhost and it does that by when these</font>

150
00:07:18,560 --> 00:07:24,710
when these method calls are<font color="#E5E5E5"> invoked our</font>

151
00:07:21,880 --> 00:07:28,760
<font color="#CCCCCC">RM I will check they will attempt to</font>

152
00:07:24,710 --> 00:07:31,250
bind<font color="#CCCCCC"> support</font><font color="#E5E5E5"> on the address that that</font>

153
00:07:28,760 --> 00:07:32,750
request comes in from so<font color="#E5E5E5"> if it's a local</font>

154
00:07:31,250 --> 00:07:34,250
address<font color="#E5E5E5"> our mouth should be able to bind</font>

155
00:07:32,750 --> 00:07:37,900
so that so it's all port on that address

156
00:07:34,250 --> 00:07:40,100
<font color="#E5E5E5">if it can't then it rejects the request</font>

157
00:07:37,900 --> 00:07:42,609
<font color="#E5E5E5">so we can't do those things</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the</font>

158
00:07:40,100 --> 00:07:42,610
internet for example

159
00:07:45,310 --> 00:07:51,169
implements and I our<font color="#CCCCCC"> our my like say</font>

160
00:07:49,039 --> 00:07:54,590
<font color="#CCCCCC">guess it's really easy today we're so on</font>

161
00:07:51,169 --> 00:07:58,039
the server<font color="#E5E5E5"> side we have a class</font><font color="#CCCCCC"> that we</font>

162
00:07:54,590 --> 00:07:59,989
want<font color="#E5E5E5"> to expose over</font><font color="#CCCCCC"> our mi and we just</font>

163
00:07:58,039 --> 00:08:03,560
have<font color="#E5E5E5"> that class implement the in space</font>

164
00:07:59,990 --> 00:08:06,440
Java dot<font color="#CCCCCC"> our mi dot remote we create an</font>

165
00:08:03,560 --> 00:08:09,919
object<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that class and we bind it</font><font color="#E5E5E5"> to</font>

166
00:08:06,440 --> 00:08:12,229
the registry<font color="#CCCCCC"> using the bind method and</font>

167
00:08:09,919 --> 00:08:14,359
the<font color="#E5E5E5"> client side we look up the object</font>

168
00:08:12,229 --> 00:08:18,800
<font color="#E5E5E5">from the</font><font color="#CCCCCC"> our my registry</font><font color="#E5E5E5"> and we use it</font>

169
00:08:14,360 --> 00:08:23,210
as as normal<font color="#CCCCCC"> so what's the problem of</font>

170
00:08:18,800 --> 00:08:26,870
all of this this<font color="#CCCCCC"> is a fairly reasonable</font>

171
00:08:23,210 --> 00:08:28,489
sounding sounding<font color="#E5E5E5"> method from if this</font>

172
00:08:26,870 --> 00:08:30,800
was on a on the server side<font color="#CCCCCC"> of an</font>

173
00:08:28,490 --> 00:08:32,570
application<font color="#E5E5E5"> obviously you'd have to look</font>

174
00:08:30,800 --> 00:08:34,430
<font color="#E5E5E5">in so the the method</font><font color="#CCCCCC"> calls that this</font>

175
00:08:32,570 --> 00:08:37,070
makes<font color="#CCCCCC"> to say whether it's secure or not</font>

176
00:08:34,429 --> 00:08:40,579
but we've got refile method<font color="#E5E5E5"> that accepts</font>

177
00:08:37,070 --> 00:08:44,089
a<font color="#E5E5E5"> username password</font><font color="#CCCCCC"> and a file name</font><font color="#E5E5E5"> it</font>

178
00:08:40,580 --> 00:08:47,930
gets this file manager object<font color="#CCCCCC"> a then</font>

179
00:08:44,089 --> 00:08:49,390
calls the<font color="#E5E5E5"> authenticate user method let's</font>

180
00:08:47,930 --> 00:08:54,170
check if that<font color="#E5E5E5"> username and password a</font>

181
00:08:49,390 --> 00:08:55,790
<font color="#E5E5E5">valid user if that returns true then</font><font color="#CCCCCC"> it</font>

182
00:08:54,170 --> 00:08:58,279
returns<font color="#E5E5E5"> the fact that there was the</font>

183
00:08:55,790 --> 00:09:03,649
result of the<font color="#CCCCCC"> we'd file method</font><font color="#E5E5E5"> for that</font>

184
00:08:58,279 --> 00:09:05,779
<font color="#E5E5E5">file name if this application object</font>

185
00:09:03,649 --> 00:09:09,350
<font color="#CCCCCC">factory</font><font color="#E5E5E5"> actually returns a remote</font>

186
00:09:05,779 --> 00:09:12,310
objects then that the security of<font color="#E5E5E5"> that</font>

187
00:09:09,350 --> 00:09:14,959
<font color="#E5E5E5">code changes quite quite significantly</font>

188
00:09:12,310 --> 00:09:17,989
so it looks<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this in a successful</font>

189
00:09:14,959 --> 00:09:20,119
<font color="#E5E5E5">case the client will say what we'll call</font>

190
00:09:17,990 --> 00:09:22,370
authenticate user suddenly username and

191
00:09:20,120 --> 00:09:25,850
password<font color="#E5E5E5"> so</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> server that returns true</font>

192
00:09:22,370 --> 00:09:27,740
the client<font color="#E5E5E5"> then goes read file power</font>

193
00:09:25,850 --> 00:09:31,760
name sends that to the server<font color="#E5E5E5"> the</font><font color="#CCCCCC"> server</font>

194
00:09:27,740 --> 00:09:34,880
returns<font color="#E5E5E5"> the file contents so why don't</font>

195
00:09:31,760 --> 00:09:36,709
<font color="#E5E5E5">we just do this and that's essentially</font>

196
00:09:34,880 --> 00:09:40,040
what<font color="#E5E5E5"> I did in this the first time I came</font>

197
00:09:36,709 --> 00:09:46,819
<font color="#E5E5E5">across our a my that's exactly what I</font>

198
00:09:40,040 --> 00:09:51,550
did so I looked what security controls

199
00:09:46,820 --> 00:09:51,550
<font color="#CCCCCC">are mi</font><font color="#E5E5E5"> actually has and</font>

200
00:09:52,740 --> 00:10:01,569
doesn't<font color="#E5E5E5"> it</font><font color="#CCCCCC"> so we can sort of argue that</font>

201
00:09:59,829 --> 00:10:05,079
we've got<font color="#E5E5E5"> access controls because you</font>

202
00:10:01,569 --> 00:10:10,469
can't bind<font color="#CCCCCC"> unbind</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> rebound from</font><font color="#E5E5E5"> a</font>

203
00:10:05,079 --> 00:10:16,529
remote host<font color="#E5E5E5"> but actually not really and</font>

204
00:10:10,470 --> 00:10:18,699
there's an issue<font color="#CCCCCC"> where our</font><font color="#E5E5E5"> am</font><font color="#CCCCCC"> I would</font>

205
00:10:16,529 --> 00:10:21,220
<font color="#E5E5E5">Mozilla</font><font color="#CCCCCC"> text the wrong way around</font><font color="#E5E5E5"> so it</font>

206
00:10:18,699 --> 00:10:22,660
<font color="#E5E5E5">doesn't check that it will DC relies on</font>

207
00:10:21,220 --> 00:10:24,699
objects before it checks that<font color="#CCCCCC"> the</font>

208
00:10:22,660 --> 00:10:26,829
request came from<font color="#CCCCCC"> localhost</font>

209
00:10:24,699 --> 00:10:28,240
so the<font color="#E5E5E5"> offense the access control</font>

210
00:10:26,829 --> 00:10:31,779
happens<font color="#E5E5E5"> the wrong way around</font>

211
00:10:28,240 --> 00:10:32,649
I should<font color="#CCCCCC"> also elaborate there on</font>

212
00:10:31,779 --> 00:10:37,620
encryption

213
00:10:32,649 --> 00:10:41,319
you can have your are on my registry

214
00:10:37,620 --> 00:10:44,170
reference use an<font color="#CCCCCC"> SSL socket socket</font>

215
00:10:41,319 --> 00:10:47,610
factory so you can pipe<font color="#CCCCCC"> I</font><font color="#E5E5E5"> write down an</font>

216
00:10:44,170 --> 00:10:50,560
SSL encrypted tunnel

217
00:10:47,610 --> 00:10:53,110
<font color="#E5E5E5">I've not actively looked for people</font>

218
00:10:50,560 --> 00:10:54,638
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> that but I've also never seen</font>

219
00:10:53,110 --> 00:10:56,889
<font color="#E5E5E5">anyone doing that I've seen lots of</font>

220
00:10:54,639 --> 00:11:01,569
these services exposed to the<font color="#CCCCCC"> Internet</font>

221
00:10:56,889 --> 00:11:06,449
<font color="#CCCCCC">and all over the place so that's a</font>

222
00:11:01,569 --> 00:11:06,449
fairly<font color="#CCCCCC"> accurate picture of RMI security</font>

223
00:11:07,139 --> 00:11:13,209
but this is a bit unfair<font color="#E5E5E5"> to be honest</font>

224
00:11:10,329 --> 00:11:16,199
<font color="#CCCCCC">they're the are microbes code was</font>

225
00:11:13,209 --> 00:11:20,079
designed and<font color="#E5E5E5"> created to facilitate</font>

226
00:11:16,199 --> 00:11:23,469
remotely invoking methods it was great

227
00:11:20,079 --> 00:11:26,709
purely to do that and we can liken this

228
00:11:23,470 --> 00:11:28,870
to HTTP HTTP was put to go it was

229
00:11:26,709 --> 00:11:32,859
designed to facilitate sharing<font color="#CCCCCC"> of</font>

230
00:11:28,870 --> 00:11:35,680
textual information<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> security</font>

231
00:11:32,860 --> 00:11:37,809
<font color="#CCCCCC">features that we have in HTTP</font><font color="#E5E5E5"> I've kind</font>

232
00:11:35,680 --> 00:11:40,388
of been<font color="#CCCCCC"> tacked</font><font color="#E5E5E5"> on to</font><font color="#CCCCCC"> the original</font>

233
00:11:37,809 --> 00:11:43,719
<font color="#E5E5E5">protocol and it's evolved</font><font color="#CCCCCC"> over time</font><font color="#E5E5E5"> and</font>

234
00:11:40,389 --> 00:11:45,790
that's largely dancer<font color="#CCCCCC"> dancing the</font>

235
00:11:43,720 --> 00:11:49,899
maturity<font color="#E5E5E5"> and how how much we use that</font>

236
00:11:45,790 --> 00:11:53,019
protocol<font color="#CCCCCC"> RMI is</font><font color="#E5E5E5"> is very different in</font>

237
00:11:49,899 --> 00:11:56,769
that in that<font color="#E5E5E5"> sense</font><font color="#CCCCCC"> and so if you want</font><font color="#E5E5E5"> to</font>

238
00:11:53,019 --> 00:11:59,529
do things<font color="#E5E5E5"> like authentication proper</font>

239
00:11:56,769 --> 00:12:01,389
session management<font color="#E5E5E5"> and access</font><font color="#CCCCCC"> controls</font>

240
00:11:59,529 --> 00:12:05,110
you need<font color="#E5E5E5"> to build all this into your</font>

241
00:12:01,389 --> 00:12:06,570
application yourself<font color="#CCCCCC"> when it comes to</font>

242
00:12:05,110 --> 00:12:10,500
<font color="#CCCCCC">HTTP</font>

243
00:12:06,570 --> 00:12:13,240
even if a developer isn't security aware

244
00:12:10,500 --> 00:12:16,209
most application frameworks<font color="#E5E5E5"> and</font>

245
00:12:13,240 --> 00:12:17,889
application servers<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> bacon a lot</font>

246
00:12:16,209 --> 00:12:19,449
<font color="#CCCCCC">of security controls by default and</font><font color="#E5E5E5"> you</font>

247
00:12:17,889 --> 00:12:22,860
don't need sir you don't<font color="#CCCCCC"> need to be</font>

248
00:12:19,449 --> 00:12:25,139
particularly security aware to write a

249
00:12:22,860 --> 00:12:33,880
reasonably secure application these days

250
00:12:25,139 --> 00:12:37,569
<font color="#E5E5E5">it's not</font><font color="#CCCCCC"> the case</font><font color="#E5E5E5"> with our my so I want</font>

251
00:12:33,880 --> 00:12:42,610
<font color="#E5E5E5">to see look into this insecure use of</font>

252
00:12:37,569 --> 00:12:45,459
<font color="#CCCCCC">our mi I say it's</font><font color="#E5E5E5"> not a secure protocol</font>

253
00:12:42,610 --> 00:12:47,850
<font color="#E5E5E5">in my original attack I ignored the</font>

254
00:12:45,459 --> 00:12:50,349
authenticate method<font color="#E5E5E5"> the actual</font>

255
00:12:47,850 --> 00:12:52,959
application if<font color="#E5E5E5"> I'd tested that during</font>

256
00:12:50,350 --> 00:12:54,190
that original attack the login screen

257
00:12:52,959 --> 00:12:55,508
would have called the authenticate

258
00:12:54,190 --> 00:12:57,940
method<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> just done the other</font>

259
00:12:55,509 --> 00:13:00,310
stuff once I've logged in but like<font color="#E5E5E5"> I</font>

260
00:12:57,940 --> 00:13:02,259
<font color="#E5E5E5">said I didn't need to do that</font><font color="#CCCCCC"> i bypass</font>

261
00:13:00,310 --> 00:13:03,729
the<font color="#E5E5E5"> authentication essentially I'm</font>

262
00:13:02,259 --> 00:13:05,380
called<font color="#E5E5E5"> read file write file</font>

263
00:13:03,730 --> 00:13:08,769
execute query list files all these kind

264
00:13:05,380 --> 00:13:11,230
of<font color="#CCCCCC"> methods directly</font><font color="#E5E5E5"> so I wanted like</font><font color="#CCCCCC"> to</font>

265
00:13:08,769 --> 00:13:16,360
say how often<font color="#E5E5E5"> is our am</font><font color="#CCCCCC"> I use</font><font color="#E5E5E5"> just this</font>

266
00:13:11,230 --> 00:13:18,310
<font color="#E5E5E5">in securely so the first step in doing</font>

267
00:13:16,360 --> 00:13:23,199
this<font color="#E5E5E5"> in finding this out was to identify</font>

268
00:13:18,310 --> 00:13:25,029
software that uses<font color="#CCCCCC"> RM I I tried a bit of</font>

269
00:13:23,199 --> 00:13:27,099
<font color="#CCCCCC">Google</font><font color="#E5E5E5"> search and in such and get help</font>

270
00:13:25,029 --> 00:13:30,010
to try and find projects<font color="#E5E5E5"> but I didn't</font>

271
00:13:27,100 --> 00:13:32,440
<font color="#E5E5E5">really</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> much success</font><font color="#CCCCCC"> so I wondered</font>

272
00:13:30,010 --> 00:13:39,730
whether I would<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to remotely</font>

273
00:13:32,440 --> 00:13:41,980
identify<font color="#CCCCCC"> our a my</font><font color="#E5E5E5"> software now during</font>

274
00:13:39,730 --> 00:13:43,440
one of<font color="#E5E5E5"> my tests that had done whilst</font>

275
00:13:41,980 --> 00:13:47,069
<font color="#E5E5E5">playing around with this kind of stuff</font>

276
00:13:43,440 --> 00:13:50,439
<font color="#E5E5E5">I'd got some exceptions back like this</font>

277
00:13:47,069 --> 00:13:53,860
<font color="#E5E5E5">did key thing</font><font color="#CCCCCC"> to note</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> that the</font>

278
00:13:50,439 --> 00:13:56,019
exception<font color="#CCCCCC"> that had been fired as a</font>

279
00:13:53,860 --> 00:13:58,389
<font color="#CCCCCC">result of me trying to</font><font color="#E5E5E5"> look up a remote</font>

280
00:13:56,019 --> 00:14:01,540
object<font color="#CCCCCC"> it was a class not found</font>

281
00:13:58,389 --> 00:14:06,490
exception<font color="#E5E5E5"> telling me the fully qualified</font>

282
00:14:01,540 --> 00:14:10,019
<font color="#CCCCCC">class</font><font color="#E5E5E5"> name that</font><font color="#CCCCCC"> the remote object so</font>

283
00:14:06,490 --> 00:14:13,389
fully qualified class<font color="#E5E5E5"> names include</font>

284
00:14:10,019 --> 00:14:16,180
<font color="#E5E5E5">namespaces or package names and they</font>

285
00:14:13,389 --> 00:14:18,220
usually<font color="#E5E5E5"> start off with a vendor name and</font>

286
00:14:16,180 --> 00:14:18,729
often somewhere in there there's there's

287
00:14:18,220 --> 00:14:20,020
<font color="#E5E5E5">also</font>

288
00:14:18,730 --> 00:14:23,740
the name of the<font color="#E5E5E5"> actual application</font>

289
00:14:20,020 --> 00:14:26,110
package<font color="#E5E5E5"> so figured I could probably find</font>

290
00:14:23,740 --> 00:14:29,080
<font color="#E5E5E5">these and do an internet</font><font color="#CCCCCC"> search for</font>

291
00:14:26,110 --> 00:14:30,910
fully qualified packet cross names<font color="#E5E5E5"> use</font>

292
00:14:29,080 --> 00:14:33,840
that to<font color="#CCCCCC"> identify</font><font color="#E5E5E5"> some software start</font>

293
00:14:30,910 --> 00:14:33,839
digging around and see what we<font color="#CCCCCC"> see</font>

294
00:14:33,900 --> 00:14:41,290
but that exception<font color="#E5E5E5"> also</font><font color="#CCCCCC"> told me that</font><font color="#E5E5E5"> the</font>

295
00:14:38,530 --> 00:14:44,650
fully qualified<font color="#CCCCCC"> class name must</font><font color="#E5E5E5"> be</font>

296
00:14:41,290 --> 00:14:47,589
coming<font color="#CCCCCC"> back over</font><font color="#E5E5E5"> the network so I did a</font>

297
00:14:44,650 --> 00:14:51,160
bit of digging into<font color="#E5E5E5"> that and thus an</font>

298
00:14:47,590 --> 00:14:53,470
example of some<font color="#CCCCCC"> RMI traffic</font><font color="#E5E5E5"> and you can</font>

299
00:14:51,160 --> 00:14:56,020
see for the<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> qualified</font><font color="#CCCCCC"> class name</font>

300
00:14:53,470 --> 00:14:58,570
at the top<font color="#E5E5E5"> are ma demo</font><font color="#CCCCCC"> dot shared so on</font>

301
00:14:56,020 --> 00:15:10,990
<font color="#E5E5E5">and down at</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> bottom you can</font><font color="#CCCCCC"> see an IP</font>

302
00:14:58,570 --> 00:15:13,000
<font color="#CCCCCC">address 192.168.1.1 and up spending</font><font color="#E5E5E5"> a</font>

303
00:15:10,990 --> 00:15:16,150
fair<font color="#E5E5E5"> bit of time and all these kind of</font>

304
00:15:13,000 --> 00:15:19,750
<font color="#E5E5E5">tools packet captures hex editors text</font>

305
00:15:16,150 --> 00:15:23,470
editors -<font color="#E5E5E5"> shells decoding and messing</font>

306
00:15:19,750 --> 00:15:25,810
about with<font color="#E5E5E5"> these packets and along the</font>

307
00:15:23,470 --> 00:15:27,940
way I put together called that would

308
00:15:25,810 --> 00:15:30,819
pass and extract the interesting

309
00:15:27,940 --> 00:15:33,550
information<font color="#CCCCCC"> for these packets</font><font color="#E5E5E5"> and this</font>

310
00:15:30,820 --> 00:15:36,370
information<font color="#CCCCCC"> things like the the the host</font>

311
00:15:33,550 --> 00:15:37,780
<font color="#CCCCCC">and port where an object lives</font><font color="#E5E5E5"> Java</font>

312
00:15:36,370 --> 00:15:39,850
<font color="#E5E5E5">doesn't give you direct access</font><font color="#CCCCCC"> to that</font>

313
00:15:37,780 --> 00:15:42,189
information<font color="#CCCCCC"> you could probably get it</font>

314
00:15:39,850 --> 00:15:43,870
through some horrible hack book<font color="#CCCCCC"> I was</font>

315
00:15:42,190 --> 00:15:46,090
<font color="#E5E5E5">finding it</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> having a much easier</font>

316
00:15:43,870 --> 00:15:47,980
time just looking at the<font color="#CCCCCC"> packets and</font>

317
00:15:46,090 --> 00:15:53,320
<font color="#CCCCCC">mixed ruts in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> date and</font><font color="#E5E5E5"> decoding</font>

318
00:15:47,980 --> 00:15:56,980
those that work turned into<font color="#E5E5E5"> a tool</font>

319
00:15:53,320 --> 00:16:00,640
<font color="#E5E5E5">called barmy and originally this it was</font>

320
00:15:56,980 --> 00:16:02,770
just<font color="#CCCCCC"> doing enumeration</font><font color="#E5E5E5"> and this was to</font>

321
00:16:00,640 --> 00:16:05,340
<font color="#E5E5E5">support me doing a bit of research and</font>

322
00:16:02,770 --> 00:16:08,980
so you know what's out there

323
00:16:05,340 --> 00:16:13,390
barmy does<font color="#E5E5E5"> proxy based enumeration of</font>

324
00:16:08,980 --> 00:16:17,290
<font color="#E5E5E5">our my registries so we start a server</font>

325
00:16:13,390 --> 00:16:19,750
<font color="#E5E5E5">socket that listens locally</font><font color="#CCCCCC"> and instead</font>

326
00:16:17,290 --> 00:16:22,089
<font color="#CCCCCC">of creating a</font><font color="#E5E5E5"> are my registry that</font>

327
00:16:19,750 --> 00:16:24,190
object that<font color="#E5E5E5"> points are the actual target</font>

328
00:16:22,090 --> 00:16:26,140
<font color="#E5E5E5">we point it at this local server socket</font>

329
00:16:24,190 --> 00:16:28,420
which then directly<font color="#E5E5E5"> connects onto</font><font color="#CCCCCC"> the</font>

330
00:16:26,140 --> 00:16:29,890
target<font color="#E5E5E5"> the traffic for that connection</font>

331
00:16:28,420 --> 00:16:32,219
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then passes</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> our proxy and we</font>

332
00:16:29,890 --> 00:16:34,540
can see what's going back and forth

333
00:16:32,220 --> 00:16:37,210
when<font color="#CCCCCC"> I get a list</font><font color="#E5E5E5"> of objects that are</font>

334
00:16:34,540 --> 00:16:41,290
exposed<font color="#E5E5E5"> through that registry and we</font>

335
00:16:37,210 --> 00:16:44,190
start<font color="#CCCCCC"> requesting them one by one when</font>

336
00:16:41,290 --> 00:16:46,750
the deer comes back from<font color="#E5E5E5"> those requests</font>

337
00:16:44,190 --> 00:16:49,600
sometimes it was<font color="#E5E5E5"> quite a lot of data</font>

338
00:16:46,750 --> 00:16:52,570
that<font color="#E5E5E5"> came back for a single object</font><font color="#CCCCCC"> so we</font>

339
00:16:49,600 --> 00:16:57,580
offer that<font color="#E5E5E5"> data that comes back and when</font>

340
00:16:52,570 --> 00:16:59,440
the call to registry<font color="#CCCCCC"> lockup returns</font><font color="#E5E5E5"> we</font>

341
00:16:57,580 --> 00:17:03,310
grab that<font color="#E5E5E5"> data everything that's in the</font>

342
00:16:59,440 --> 00:17:05,890
buffer and<font color="#CCCCCC"> we passed that and extract</font>

343
00:17:03,310 --> 00:17:07,599
useful<font color="#E5E5E5"> data so the class names are they</font>

344
00:17:05,890 --> 00:17:11,680
there at the remote<font color="#E5E5E5"> object</font><font color="#CCCCCC"> the IP</font>

345
00:17:07,599 --> 00:17:14,919
address where<font color="#E5E5E5"> it says and I use this to</font>

346
00:17:11,680 --> 00:17:17,020
do some knocking on<font color="#CCCCCC"> Jabba's</font><font color="#E5E5E5"> backdoor and</font>

347
00:17:14,920 --> 00:17:20,260
I use this<font color="#E5E5E5"> to find our my software that</font>

348
00:17:17,020 --> 00:17:23,949
<font color="#E5E5E5">was sitting on the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> so at the</font>

349
00:17:20,260 --> 00:17:30,700
time I<font color="#E5E5E5"> found over 14,000</font><font color="#CCCCCC"> RMI services on</font>

350
00:17:23,949 --> 00:17:33,400
show done it's<font color="#E5E5E5"> only a</font><font color="#CCCCCC"> few and between</font>

351
00:17:30,700 --> 00:17:37,840
<font color="#E5E5E5">those services I found over 27,000 Java</font>

352
00:17:33,400 --> 00:17:40,270
objects that were exposed not<font color="#E5E5E5"> all of</font>

353
00:17:37,840 --> 00:17:42,250
those were exposed externally so we've

354
00:17:40,270 --> 00:17:44,860
got some guy here<font color="#CCCCCC"> that was learning RMI</font>

355
00:17:42,250 --> 00:17:49,030
<font color="#E5E5E5">and these are the objects were listening</font>

356
00:17:44,860 --> 00:17:52,300
<font color="#CCCCCC">in on</font><font color="#E5E5E5"> localhost</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of these probably</font>

357
00:17:49,030 --> 00:17:55,960
shouldn't be exposed<font color="#CCCCCC"> so I've got some</font>

358
00:17:52,300 --> 00:17:59,710
<font color="#CCCCCC">examples</font><font color="#E5E5E5"> there vehicle</font><font color="#CCCCCC"> search service</font>

359
00:17:55,960 --> 00:18:03,040
driving license manager camera captured

360
00:17:59,710 --> 00:18:07,360
images<font color="#E5E5E5"> CC payment service</font><font color="#CCCCCC"> routes</font>

361
00:18:03,040 --> 00:18:11,170
terminal<font color="#E5E5E5"> admin API system chang-geun</font><font color="#CCCCCC"> api</font>

362
00:18:07,360 --> 00:18:18,820
that<font color="#E5E5E5"> sounds fun be a machine</font><font color="#CCCCCC"> API of the</font>

363
00:18:11,170 --> 00:18:21,820
<font color="#E5E5E5">porter and</font><font color="#CCCCCC"> praise service and the point</font>

364
00:18:18,820 --> 00:18:25,060
here<font color="#CCCCCC"> is that so</font><font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know what any of</font>

365
00:18:21,820 --> 00:18:27,460
these do I didn't<font color="#E5E5E5"> find a</font><font color="#CCCCCC"> lot of the</font>

366
00:18:25,060 --> 00:18:29,320
<font color="#E5E5E5">software that</font><font color="#CCCCCC"> I went out</font><font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for but</font>

367
00:18:27,460 --> 00:18:30,970
the point is this is the<font color="#E5E5E5"> kind of stuff</font>

368
00:18:29,320 --> 00:18:34,629
that<font color="#CCCCCC"> people exposed to</font><font color="#E5E5E5"> the internet over</font>

369
00:18:30,970 --> 00:18:38,950
<font color="#CCCCCC">rmi even today when RMA is</font><font color="#E5E5E5"> considered</font>

370
00:18:34,630 --> 00:18:41,470
old and nobody uses<font color="#CCCCCC"> it anymore</font><font color="#E5E5E5"> and when</font>

371
00:18:38,950 --> 00:18:44,480
we go<font color="#E5E5E5"> back to</font><font color="#CCCCCC"> that first</font><font color="#E5E5E5"> example if they</font>

372
00:18:41,470 --> 00:18:48,320
use an RMI<font color="#E5E5E5"> in that kind of way this</font>

373
00:18:44,480 --> 00:18:50,840
pretty<font color="#E5E5E5"> bud right so picked up some</font>

374
00:18:48,320 --> 00:18:53,450
examples that<font color="#E5E5E5"> were fairly common and</font>

375
00:18:50,840 --> 00:18:56,629
<font color="#CCCCCC">once my resource</font><font color="#E5E5E5"> first one apache jmeter</font>

376
00:18:53,450 --> 00:19:00,380
<font color="#CCCCCC">i've no idea what it does but</font><font color="#E5E5E5"> this is a</font>

377
00:18:56,630 --> 00:19:01,730
class name that<font color="#E5E5E5"> was exposed and it's</font>

378
00:19:00,380 --> 00:19:04,400
open source<font color="#E5E5E5"> so you can download the</font>

379
00:19:01,730 --> 00:19:06,770
sources<font color="#CCCCCC"> and you can review the</font><font color="#E5E5E5"> remote</font>

380
00:19:04,400 --> 00:19:10,640
classes and methods<font color="#E5E5E5"> so any class that</font>

381
00:19:06,770 --> 00:19:12,889
implements<font color="#CCCCCC"> java rmi remote</font><font color="#E5E5E5"> we can that</font>

382
00:19:10,640 --> 00:19:14,480
can<font color="#E5E5E5"> be exposed</font><font color="#CCCCCC"> over the RMI you've</font>

383
00:19:12,890 --> 00:19:17,030
<font color="#E5E5E5">ripped through an hour</font><font color="#CCCCCC"> on out registry</font>

384
00:19:14,480 --> 00:19:18,799
and so the methods of that class the

385
00:19:17,030 --> 00:19:21,980
public methods<font color="#E5E5E5"> that class</font><font color="#CCCCCC"> can be</font><font color="#E5E5E5"> called</font>

386
00:19:18,799 --> 00:19:23,840
<font color="#E5E5E5">remotely so this is</font><font color="#CCCCCC"> the list of</font><font color="#E5E5E5"> methods</font>

387
00:19:21,980 --> 00:19:27,110
<font color="#E5E5E5">that we've got and the ones that stood</font>

388
00:19:23,840 --> 00:19:30,020
<font color="#E5E5E5">out</font><font color="#CCCCCC"> to me it looks like anybody can</font>

389
00:19:27,110 --> 00:19:31,879
configure<font color="#E5E5E5"> that service or set the</font>

390
00:19:30,020 --> 00:19:35,809
properties<font color="#E5E5E5"> and got</font><font color="#CCCCCC"> a dog I've no idea</font>

391
00:19:31,880 --> 00:19:42,590
what<font color="#E5E5E5"> Jamie it does but it's another</font>

392
00:19:35,809 --> 00:19:45,830
example of<font color="#E5E5E5"> insecure use of</font><font color="#CCCCCC"> RMA another</font>

393
00:19:42,590 --> 00:19:48,070
one<font color="#CCCCCC"> famous</font><font color="#E5E5E5"> remote admin server again</font>

394
00:19:45,830 --> 00:19:50,840
that's a cross name that was<font color="#E5E5E5"> exposed</font>

395
00:19:48,070 --> 00:19:52,850
sounded interesting<font color="#E5E5E5"> so I had a look and</font>

396
00:19:50,840 --> 00:19:54,290
I couldn't find source code<font color="#E5E5E5"> couldn't</font>

397
00:19:52,850 --> 00:19:56,600
find the<font color="#E5E5E5"> client jars</font><font color="#CCCCCC"> server jars</font>

398
00:19:54,290 --> 00:20:01,250
<font color="#CCCCCC">couldn't</font><font color="#E5E5E5"> find anything to do with it in</font>

399
00:19:56,600 --> 00:20:04,699
fact but<font color="#CCCCCC"> barmy actually revealed an</font>

400
00:20:01,250 --> 00:20:07,850
interesting annotation so the<font color="#E5E5E5"> classes</font>

401
00:20:04,700 --> 00:20:11,210
could have string annotations<font color="#CCCCCC"> in this</font>

402
00:20:07,850 --> 00:20:14,209
case we've got HTTP URL that ends in

403
00:20:11,210 --> 00:20:16,340
admin client jar<font color="#E5E5E5"> I was actually able to</font>

404
00:20:14,210 --> 00:20:18,410
<font color="#E5E5E5">go to that URL and</font><font color="#CCCCCC"> download this jar</font>

405
00:20:16,340 --> 00:20:20,480
file<font color="#E5E5E5"> so I did the same</font><font color="#CCCCCC"> thing that he</font>

406
00:20:18,410 --> 00:20:22,250
compiled it looks at the code looks at

407
00:20:20,480 --> 00:20:26,350
the<font color="#E5E5E5"> remote objects lots of the the</font>

408
00:20:22,250 --> 00:20:29,179
methods and<font color="#E5E5E5"> I've got some examples</font><font color="#CCCCCC"> so</font>

409
00:20:26,350 --> 00:20:31,010
the first person<font color="#E5E5E5"> that I saw was they've</font>

410
00:20:29,179 --> 00:20:32,360
got an authenticate method takes a

411
00:20:31,010 --> 00:20:34,220
string and a string probably a<font color="#CCCCCC"> username</font>

412
00:20:32,360 --> 00:20:37,820
<font color="#E5E5E5">and</font><font color="#CCCCCC"> password and it returns a user</font>

413
00:20:34,220 --> 00:20:40,160
profile object so what they should be

414
00:20:37,820 --> 00:20:42,500
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> is using this user profile objects</font>

415
00:20:40,160 --> 00:20:44,360
to then authenticate subsequent requests

416
00:20:42,500 --> 00:20:48,040
like<font color="#E5E5E5"> a session ID</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> Haiti</font><font color="#E5E5E5"> to be a</font>

417
00:20:44,360 --> 00:20:51,530
cookie if you like but then I saw this

418
00:20:48,040 --> 00:20:52,639
anyone can configure this remote admin

419
00:20:51,530 --> 00:20:54,770
server

420
00:20:52,640 --> 00:20:58,400
and then you can get<font color="#E5E5E5"> the admin key</font>

421
00:20:54,770 --> 00:21:02,540
whatever<font color="#E5E5E5"> that is add a user if you can</font>

422
00:20:58,400 --> 00:21:04,250
guess<font color="#CCCCCC"> therefore string parameters there</font>

423
00:21:02,540 --> 00:21:06,020
was possible<font color="#CCCCCC"> account takeover</font><font color="#E5E5E5"> you could</font>

424
00:21:04,250 --> 00:21:08,210
get a list<font color="#E5E5E5"> of</font><font color="#CCCCCC"> all users which returned a</font>

425
00:21:06,020 --> 00:21:09,770
list of user profile objects<font color="#E5E5E5"> you could</font>

426
00:21:08,210 --> 00:21:11,360
then pass a user profile on a string

427
00:21:09,770 --> 00:21:15,799
probably<font color="#CCCCCC"> any password</font><font color="#E5E5E5"> to the change</font>

428
00:21:11,360 --> 00:21:18,649
password method or you could just say

429
00:21:15,799 --> 00:21:24,820
user profile get password and get that

430
00:21:18,650 --> 00:21:27,260
<font color="#CCCCCC">user's password</font><font color="#E5E5E5"> some more remote methods</font>

431
00:21:24,820 --> 00:21:28,580
<font color="#E5E5E5">get a database configuration their</font>

432
00:21:27,260 --> 00:21:30,320
standard stuff but<font color="#CCCCCC"> Oh</font>

433
00:21:28,580 --> 00:21:34,490
<font color="#E5E5E5">user</font><font color="#CCCCCC"> name and password for the</font><font color="#E5E5E5"> database</font>

434
00:21:30,320 --> 00:21:41,780
okay<font color="#E5E5E5"> so what's the problem with our</font><font color="#CCCCCC"> a my</font>

435
00:21:34,490 --> 00:21:43,940
well we've kind of got this we've got

436
00:21:41,780 --> 00:21:48,530
all these authenticate methods but we

437
00:21:43,940 --> 00:21:50,380
<font color="#CCCCCC">just walk around which actually gets</font>

438
00:21:48,530 --> 00:21:54,678
worse<font color="#E5E5E5"> than that</font>

439
00:21:50,380 --> 00:21:56,270
so<font color="#E5E5E5"> the serialization hands will prove</font>

440
00:21:54,679 --> 00:21:58,390
you are familiar with<font color="#E5E5E5"> the serialization</font>

441
00:21:56,270 --> 00:22:03,379
attacks Java D serialization attacks

442
00:21:58,390 --> 00:22:05,750
<font color="#CCCCCC">okay that's</font><font color="#E5E5E5"> good so these are ization is</font>

443
00:22:03,380 --> 00:22:09,830
the process of converting<font color="#E5E5E5"> data into</font>

444
00:22:05,750 --> 00:22:14,470
<font color="#E5E5E5">runtime objects it's often implemented</font>

445
00:22:09,830 --> 00:22:21,080
or used<font color="#CCCCCC"> in</font><font color="#E5E5E5"> securely generally</font><font color="#CCCCCC"> DC</font>

446
00:22:14,470 --> 00:22:23,419
<font color="#E5E5E5">sterilizing untrusted data is bad</font><font color="#CCCCCC"> Inara</font>

447
00:22:21,080 --> 00:22:25,730
my actually is heavily<font color="#CCCCCC"> dependent on Java</font>

448
00:22:23,419 --> 00:22:28,340
serialization<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I discovered this</font>

449
00:22:25,730 --> 00:22:30,559
while<font color="#E5E5E5"> I was working through packet</font>

450
00:22:28,340 --> 00:22:33,649
captures in<font color="#CCCCCC"> hex said it isn't</font><font color="#E5E5E5"> decoding</font>

451
00:22:30,559 --> 00:22:35,600
this<font color="#E5E5E5"> traffic</font><font color="#CCCCCC"> and so why actually end up</font>

452
00:22:33,650 --> 00:22:38,480
<font color="#CCCCCC">doing that I</font><font color="#E5E5E5"> was right in a writing some</font>

453
00:22:35,600 --> 00:22:40,549
code<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> sorry codes a</font>

454
00:22:38,480 --> 00:22:45,460
serialization stream and prints<font color="#E5E5E5"> our and</font>

455
00:22:40,549 --> 00:22:45,460
a nicer nicer format like<font color="#E5E5E5"> you can read</font>

456
00:22:47,080 --> 00:22:51,100
so

457
00:22:49,300 --> 00:22:53,530
the most commonly exposed are my

458
00:22:51,100 --> 00:22:55,540
services<font color="#E5E5E5"> are on the internet but i was</font>

459
00:22:53,530 --> 00:22:58,840
<font color="#E5E5E5">doing these scans was</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> table cold</font>

460
00:22:55,540 --> 00:23:01,090
<font color="#E5E5E5">fusion which exposes a class</font>

461
00:22:58,840 --> 00:23:04,449
cold fusion<font color="#CCCCCC"> dot flex the RMI their</font>

462
00:23:01,090 --> 00:23:07,090
services say a proxy<font color="#CCCCCC"> service table and I</font>

463
00:23:04,450 --> 00:23:09,130
install ColdFusion<font color="#CCCCCC"> and</font><font color="#E5E5E5"> VR model around</font>

464
00:23:07,090 --> 00:23:12,189
the<font color="#E5E5E5"> decompiled the jars and I didn't</font>

465
00:23:09,130 --> 00:23:15,910
find<font color="#CCCCCC"> any like</font><font color="#E5E5E5"> really interesting remote</font>

466
00:23:12,190 --> 00:23:17,710
methods<font color="#E5E5E5"> not like the other and so I get</font>

467
00:23:15,910 --> 00:23:19,800
so locked up<font color="#E5E5E5"> where</font><font color="#CCCCCC"> ad Authenticator I'd</font>

468
00:23:17,710 --> 00:23:25,920
read filed and all this kind of stuff

469
00:23:19,800 --> 00:23:28,169
but<font color="#E5E5E5"> then I know it's this</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> also</font>

470
00:23:25,920 --> 00:23:32,830
familiar<font color="#E5E5E5"> with the serialization attacks</font>

471
00:23:28,170 --> 00:23:36,010
<font color="#E5E5E5">should notice the issue there we can</font>

472
00:23:32,830 --> 00:23:39,760
pass any object we like as a<font color="#CCCCCC"> parameter</font>

473
00:23:36,010 --> 00:23:41,350
<font color="#E5E5E5">to this method and either the last two</font>

474
00:23:39,760 --> 00:23:44,980
parameters<font color="#CCCCCC"> ones an array of</font><font color="#E5E5E5"> objects</font>

475
00:23:41,350 --> 00:23:49,540
<font color="#CCCCCC">one's</font><font color="#E5E5E5"> a map which</font><font color="#CCCCCC"> can contain arbitrary</font>

476
00:23:44,980 --> 00:23:52,500
objects so yeah we call this filled

477
00:23:49,540 --> 00:23:58,510
method and we can<font color="#CCCCCC"> have the server</font>

478
00:23:52,500 --> 00:24:03,730
deserialize<font color="#CCCCCC"> any object we want so I've</font>

479
00:23:58,510 --> 00:24:05,590
got a<font color="#E5E5E5"> little demo this so far</font><font color="#CCCCCC"> I'm on</font>

480
00:24:03,730 --> 00:24:08,730
<font color="#E5E5E5">zero percent success rate with live</font>

481
00:24:05,590 --> 00:24:08,730
<font color="#CCCCCC">demos but we'll see</font>

482
00:24:19,049 --> 00:24:34,780
so we have cold fusions<font color="#E5E5E5"> admin interface</font>

483
00:24:24,220 --> 00:24:41,070
here and the only thing that I've

484
00:24:34,780 --> 00:24:45,190
<font color="#E5E5E5">changed from a default install is I've</font>

485
00:24:41,070 --> 00:24:48,070
enabled to flex integration they're

486
00:24:45,190 --> 00:24:50,520
doing that enables<font color="#E5E5E5"> this</font><font color="#CCCCCC"> ColdFusion RMI</font>

487
00:24:48,070 --> 00:24:50,520
service

488
00:24:50,640 --> 00:24:58,000
apart from that<font color="#E5E5E5"> this was this is default</font>

489
00:24:54,190 --> 00:25:00,940
<font color="#E5E5E5">install and was fully up to</font><font color="#CCCCCC"> date on</font>

490
00:24:58,000 --> 00:25:04,530
Tuesday<font color="#E5E5E5"> when Monday Tuesday first thing</font>

491
00:25:00,940 --> 00:25:04,530
<font color="#E5E5E5">so like just</font><font color="#CCCCCC"> after midnight</font>

492
00:25:16,910 --> 00:25:27,310
so<font color="#E5E5E5"> process</font><font color="#CCCCCC"> Explorer somewhere appear we</font>

493
00:25:21,260 --> 00:25:27,310
should find<font color="#CCCCCC"> ColdFusion - Exe</font>

494
00:25:35,660 --> 00:25:38,860
drag this<font color="#E5E5E5"> over</font>

495
00:25:44,830 --> 00:25:53,199
<font color="#E5E5E5">now we have notepad properties of that</font>

496
00:25:50,680 --> 00:25:57,760
we can see the command line that<font color="#CCCCCC"> are</font>

497
00:25:53,200 --> 00:26:00,600
passed in<font color="#E5E5E5"> for con 2017 and that's</font>

498
00:25:57,760 --> 00:26:00,600
<font color="#E5E5E5">running a system</font>

499
00:26:01,190 --> 00:26:04,589
[Applause]

500
00:26:11,990 --> 00:26:19,970
but it gets<font color="#E5E5E5"> worse than that and this is</font>

501
00:26:17,710 --> 00:26:24,650
where<font color="#E5E5E5"> I stumbled</font><font color="#CCCCCC"> across something that</font>

502
00:26:19,970 --> 00:26:25,760
I'm calling<font color="#E5E5E5"> Chavez back door and I</font>

503
00:26:24,650 --> 00:26:29,690
stumbled<font color="#E5E5E5"> across this</font>

504
00:26:25,760 --> 00:26:32,240
I was testing some code<font color="#CCCCCC"> and</font><font color="#E5E5E5"> along the</font>

505
00:26:29,690 --> 00:26:35,090
way I realized<font color="#E5E5E5"> though I don't mean</font><font color="#CCCCCC"> to do</font>

506
00:26:32,240 --> 00:26:39,110
that<font color="#CCCCCC"> I've done that bit wrong but that</font>

507
00:26:35,090 --> 00:26:41,480
<font color="#E5E5E5">cold still worked and I had to retest</font>

508
00:26:39,110 --> 00:26:45,530
this<font color="#CCCCCC"> at like</font><font color="#E5E5E5"> 50 times because I was I</font>

509
00:26:41,480 --> 00:26:49,400
couldn't<font color="#CCCCCC"> believe it worked so what was</font>

510
00:26:45,530 --> 00:26:50,870
that cold<font color="#CCCCCC"> that was testing I wanted</font><font color="#E5E5E5"> to</font>

511
00:26:49,400 --> 00:26:55,910
create a<font color="#CCCCCC"> fault</font>

512
00:26:50,870 --> 00:26:58,699
<font color="#CCCCCC">RMI proxy</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> uh my previous work on</font>

513
00:26:55,910 --> 00:27:01,760
<font color="#CCCCCC">barmy I</font><font color="#E5E5E5"> was successfully proxying are my</font>

514
00:26:58,700 --> 00:27:03,560
registry connections so you first<font color="#E5E5E5"> go off</font>

515
00:27:01,760 --> 00:27:05,900
to<font color="#CCCCCC"> that registry</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> ask</font><font color="#E5E5E5"> it for an</font>

516
00:27:03,560 --> 00:27:10,280
object<font color="#E5E5E5"> the object comes back and that</font>

517
00:27:05,900 --> 00:27:13,940
objects actually sits a listens<font color="#E5E5E5"> on a</font>

518
00:27:10,280 --> 00:27:15,680
different<font color="#E5E5E5"> address I'm so yeah yeah era</font>

519
00:27:13,940 --> 00:27:18,380
my registry doesn't handle the<font color="#CCCCCC"> actual</font>

520
00:27:15,680 --> 00:27:20,510
method in vacations<font color="#E5E5E5"> so one</font><font color="#CCCCCC"> of those</font>

521
00:27:18,380 --> 00:27:23,720
method<font color="#E5E5E5"> implications to go through my</font>

522
00:27:20,510 --> 00:27:27,020
proxy<font color="#E5E5E5"> so that I could for example was it</font>

523
00:27:23,720 --> 00:27:30,380
was the they just just supposed<font color="#E5E5E5"> the</font>

524
00:27:27,020 --> 00:27:31,820
protocol<font color="#E5E5E5"> or even extract date so</font>

525
00:27:30,380 --> 00:27:35,630
whatever I just<font color="#CCCCCC"> wanted to play</font><font color="#E5E5E5"> around</font>

526
00:27:31,820 --> 00:27:37,700
<font color="#E5E5E5">with it with the traffic like I said the</font>

527
00:27:35,630 --> 00:27:39,410
limitations handled by the actual remote

528
00:27:37,700 --> 00:27:41,510
objects<font color="#E5E5E5"> rather</font><font color="#CCCCCC"> than the registry service</font>

529
00:27:39,410 --> 00:27:44,870
which can sit on a different<font color="#E5E5E5"> port that's</font>

530
00:27:41,510 --> 00:27:47,770
potentially<font color="#E5E5E5"> on a different host so I</font>

531
00:27:44,870 --> 00:27:52,370
built a proxy to<font color="#E5E5E5"> man-in-the-middle</font>

532
00:27:47,770 --> 00:27:54,050
remote method invocation<font color="#CCCCCC"> x' and it was a</font>

533
00:27:52,370 --> 00:27:55,550
bit fiddly<font color="#E5E5E5"> to do it was a bit of a</font>

534
00:27:54,050 --> 00:27:58,580
nightmare to put together and get

535
00:27:55,550 --> 00:28:01,070
working nicely<font color="#CCCCCC"> so I've got a horrible</font>

536
00:27:58,580 --> 00:28:04,429
<font color="#E5E5E5">diagram that explains what it's called</font>

537
00:28:01,070 --> 00:28:06,490
<font color="#E5E5E5">did it started off with so</font><font color="#CCCCCC"> we've got our</font>

538
00:28:04,430 --> 00:28:08,810
a my client application on the<font color="#CCCCCC"> Left</font>

539
00:28:06,490 --> 00:28:10,760
remote<font color="#CCCCCC"> are</font><font color="#E5E5E5"> on my registry on the right</font>

540
00:28:08,810 --> 00:28:13,850
and then below that remote<font color="#E5E5E5"> are a my</font><font color="#CCCCCC"> Rob</font>

541
00:28:10,760 --> 00:28:17,600
object<font color="#E5E5E5"> the first thing</font><font color="#CCCCCC"> that does is</font>

542
00:28:13,850 --> 00:28:19,429
<font color="#E5E5E5">recreate a registry proxy which is</font>

543
00:28:17,600 --> 00:28:24,050
configured to<font color="#E5E5E5"> directly connect to the</font>

544
00:28:19,430 --> 00:28:24,830
<font color="#CCCCCC">RMI registry we have our RMI client</font>

545
00:28:24,050 --> 00:28:28,610
connected to the

546
00:28:24,830 --> 00:28:30,199
<font color="#CCCCCC">Registry proxy we then request a remote</font>

547
00:28:28,610 --> 00:28:31,850
objects through that<font color="#E5E5E5"> registry proxy</font>

548
00:28:30,200 --> 00:28:35,870
which forwards the request<font color="#CCCCCC"> done directly</font>

549
00:28:31,850 --> 00:28:38,510
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> RMA registry which then</font><font color="#CCCCCC"> returns</font>

550
00:28:35,870 --> 00:28:41,239
the<font color="#CCCCCC"> objects to the proxy</font><font color="#E5E5E5"> at that point</font>

551
00:28:38,510 --> 00:28:45,320
we intercept the<font color="#E5E5E5"> object we decode the</font>

552
00:28:41,240 --> 00:28:48,649
contents of the packet and<font color="#CCCCCC"> we</font><font color="#E5E5E5"> start up</font>

553
00:28:45,320 --> 00:28:50,269
an object proxy and we configure this

554
00:28:48,649 --> 00:28:54,320
object proxy to connected<font color="#CCCCCC"> to the real</font>

555
00:28:50,269 --> 00:28:56,419
<font color="#CCCCCC">RMI object we then modify</font><font color="#E5E5E5"> the packet</font>

556
00:28:54,320 --> 00:28:59,029
that<font color="#CCCCCC"> came back from the registry</font><font color="#E5E5E5"> before</font>

557
00:28:56,419 --> 00:29:01,220
<font color="#CCCCCC">we send</font><font color="#E5E5E5"> it back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> RMI</font><font color="#E5E5E5"> claim and the</font>

558
00:28:59,029 --> 00:29:02,899
<font color="#E5E5E5">modified packet points at the object</font>

559
00:29:01,220 --> 00:29:05,990
proxy on<font color="#E5E5E5"> localhost on whatever port that</font>

560
00:29:02,899 --> 00:29:10,039
<font color="#E5E5E5">is on when they are a my client then</font>

561
00:29:05,990 --> 00:29:12,679
invokes a remote<font color="#CCCCCC"> method that hits the</font>

562
00:29:10,039 --> 00:29:14,809
object proxy which folds their answer

563
00:29:12,679 --> 00:29:18,620
<font color="#CCCCCC">they</font><font color="#E5E5E5"> are my objects and we're in the</font>

564
00:29:14,809 --> 00:29:20,480
middle<font color="#E5E5E5"> of the connection that is far</font>

565
00:29:18,620 --> 00:29:23,239
easier<font color="#E5E5E5"> to explain than actually doing it</font>

566
00:29:20,480 --> 00:29:25,070
but<font color="#E5E5E5"> that was what I was</font><font color="#CCCCCC"> working on and</font>

567
00:29:23,240 --> 00:29:28,070
one<font color="#E5E5E5"> of the things I wanted to do like I</font>

568
00:29:25,070 --> 00:29:32,559
say was<font color="#E5E5E5"> biffle's in things like</font><font color="#CCCCCC"> Network</font>

569
00:29:28,070 --> 00:29:36,080
level<font color="#E5E5E5"> payload injection so rather than</font>

570
00:29:32,559 --> 00:29:38,289
actually<font color="#CCCCCC"> having that that interface from</font>

571
00:29:36,080 --> 00:29:40,699
<font color="#CCCCCC">ColdFusion and invoking the method</font>

572
00:29:38,289 --> 00:29:43,220
directly<font color="#E5E5E5"> through Java code I just wanted</font>

573
00:29:40,700 --> 00:29:45,080
to sit on the network and go there's a

574
00:29:43,220 --> 00:29:49,519
payload you<font color="#CCCCCC"> shove it</font><font color="#E5E5E5"> in the packet as</font>

575
00:29:45,080 --> 00:29:51,740
<font color="#CCCCCC">it's traversing the network and what I</font>

576
00:29:49,519 --> 00:29:54,620
accidentally ended<font color="#CCCCCC"> up doing was in my</font>

577
00:29:51,740 --> 00:29:57,100
<font color="#E5E5E5">era</font><font color="#CCCCCC"> my client code I call the remote</font>

578
00:29:54,620 --> 00:29:59,719
method that had a string as a parameter

579
00:29:57,100 --> 00:30:02,840
<font color="#CCCCCC">rather than a</font><font color="#E5E5E5"> method that had an object</font>

580
00:29:59,720 --> 00:30:04,220
<font color="#E5E5E5">type parameter and just while I was</font>

581
00:30:02,840 --> 00:30:06,439
fiddling about with<font color="#CCCCCC"> things I'd left the</font>

582
00:30:04,220 --> 00:30:09,919
wrong piece of cold<font color="#E5E5E5"> uncomment it and</font>

583
00:30:06,440 --> 00:30:13,220
that happened<font color="#E5E5E5"> and I saw this proxy</font>

584
00:30:09,919 --> 00:30:17,360
replaced the parameter to the method

585
00:30:13,220 --> 00:30:18,980
that accepted a string and I was playing

586
00:30:17,360 --> 00:30:21,519
<font color="#CCCCCC">around with some of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> whites or serial</font>

587
00:30:18,980 --> 00:30:24,260
payloads so next<font color="#E5E5E5"> thing I've got</font>

588
00:30:21,519 --> 00:30:26,409
<font color="#E5E5E5">calculators I'm like how the hell</font><font color="#CCCCCC"> did</font>

589
00:30:24,260 --> 00:30:29,809
that happen<font color="#E5E5E5"> what what's going on</font>

590
00:30:26,409 --> 00:30:32,230
so just<font color="#CCCCCC"> a quick</font><font color="#E5E5E5"> look at what was</font>

591
00:30:29,809 --> 00:30:34,290
actually going on<font color="#CCCCCC"> here when we remote</font>

592
00:30:32,230 --> 00:30:37,290
remotely invoke

593
00:30:34,290 --> 00:30:43,909
say print<font color="#E5E5E5"> string method we've got string</font>

594
00:30:37,290 --> 00:30:46,500
parameter you see<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> 10 a</font><font color="#E5E5E5"> bolero this</font>

595
00:30:43,910 --> 00:30:49,140
so that's what it actually<font color="#E5E5E5"> looks like</font>

596
00:30:46,500 --> 00:30:51,300
<font color="#CCCCCC">when it got over</font><font color="#E5E5E5"> the network and that's</font>

597
00:30:49,140 --> 00:30:53,190
<font color="#E5E5E5">entirely serialization day it's data</font>

598
00:30:51,300 --> 00:30:56,879
apart from the<font color="#E5E5E5"> first byte which is an</font>

599
00:30:53,190 --> 00:30:59,880
<font color="#E5E5E5">RMI packet sight bike but this part is</font>

600
00:30:56,880 --> 00:31:03,180
<font color="#E5E5E5">the</font><font color="#CCCCCC"> actual</font><font color="#E5E5E5"> parameter to the method</font><font color="#CCCCCC"> 7 4</font>

601
00:30:59,880 --> 00:31:05,700
tells us<font color="#CCCCCC"> it's string the hex</font><font color="#E5E5E5"> 0 0 0 8</font>

602
00:31:03,180 --> 00:31:08,190
tells us<font color="#E5E5E5"> that the string is 10 bytes</font>

603
00:31:05,700 --> 00:31:11,360
long got 10 characters long and then the

604
00:31:08,190 --> 00:31:15,630
<font color="#CCCCCC">4 ones are the actual</font><font color="#E5E5E5"> string contents</font>

605
00:31:11,360 --> 00:31:17,879
well if we serialize a dummy objects for

606
00:31:15,630 --> 00:31:21,060
this just<font color="#E5E5E5"> for the example because</font><font color="#CCCCCC"> the</font>

607
00:31:17,880 --> 00:31:22,980
<font color="#E5E5E5">actual payload was like huge</font><font color="#CCCCCC"> and we</font>

608
00:31:21,060 --> 00:31:25,290
might get<font color="#CCCCCC"> something</font><font color="#E5E5E5"> like this and in</font>

609
00:31:22,980 --> 00:31:28,580
this case<font color="#CCCCCC"> this is a dummy class that had</font>

610
00:31:25,290 --> 00:31:31,230
no properties it was minimal class

611
00:31:28,580 --> 00:31:32,610
serialized we have something like this

612
00:31:31,230 --> 00:31:34,320
and the interesting<font color="#CCCCCC"> part is the the</font>

613
00:31:32,610 --> 00:31:37,439
<font color="#E5E5E5">highlighted bit because that's the</font>

614
00:31:34,320 --> 00:31:40,409
<font color="#E5E5E5">actual object and description class</font>

615
00:31:37,440 --> 00:31:43,260
description and the details to recreate

616
00:31:40,410 --> 00:31:44,760
<font color="#E5E5E5">objects to deserialize that object the</font>

617
00:31:43,260 --> 00:31:49,260
first<font color="#CCCCCC"> four bytes are just C</font><font color="#E5E5E5"> Java</font>

618
00:31:44,760 --> 00:31:52,290
serialization header so what my proxy

619
00:31:49,260 --> 00:31:56,220
had actually<font color="#E5E5E5"> donned was this you can see</font>

620
00:31:52,290 --> 00:31:58,980
that's the not<font color="#E5E5E5"> the string parameter but</font>

621
00:31:56,220 --> 00:32:03,080
an<font color="#E5E5E5"> object which like I say was a it was</font>

622
00:31:58,980 --> 00:32:06,030
actually a<font color="#CCCCCC"> why so serial payload</font><font color="#E5E5E5"> and so</font>

623
00:32:03,080 --> 00:32:09,720
what I've done<font color="#CCCCCC"> here is remotely invokes</font>

624
00:32:06,030 --> 00:32:11,730
an illegal method call I've called print

625
00:32:09,720 --> 00:32:14,580
string which accepts a string parameter

626
00:32:11,730 --> 00:32:17,580
and I've passed it<font color="#E5E5E5"> a new object</font><font color="#CCCCCC"> of type</font>

627
00:32:14,580 --> 00:32:22,409
dummy which isn't type compatible with

628
00:32:17,580 --> 00:32:24,540
string and<font color="#E5E5E5"> you cannot run that</font><font color="#CCCCCC"> Java code</font>

629
00:32:22,410 --> 00:32:27,000
you can't compile it<font color="#CCCCCC"> it's an illegal</font>

630
00:32:24,540 --> 00:32:29,850
method call<font color="#CCCCCC"> and so this</font><font color="#E5E5E5"> caused the</font>

631
00:32:27,000 --> 00:32:31,830
<font color="#CCCCCC">server-side exception because like say</font>

632
00:32:29,850 --> 00:32:35,070
dummy is not compatible<font color="#E5E5E5"> wave Java dot</font>

633
00:32:31,830 --> 00:32:37,590
<font color="#E5E5E5">languor string so when</font><font color="#CCCCCC"> our ma receives</font>

634
00:32:35,070 --> 00:32:40,439
this request this method invocation<font color="#CCCCCC"> it</font>

635
00:32:37,590 --> 00:32:42,870
tries to<font color="#E5E5E5"> DC realises the parameter trace</font>

636
00:32:40,440 --> 00:32:45,930
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I assign that to the</font><font color="#E5E5E5"> method call</font>

637
00:32:42,870 --> 00:32:47,110
parameter that fails so you get an

638
00:32:45,930 --> 00:32:50,170
exception back

639
00:32:47,110 --> 00:32:53,919
but by this point<font color="#E5E5E5"> the payload is already</font>

640
00:32:50,170 --> 00:32:55,809
being deserialized<font color="#E5E5E5"> and so the people</font>

641
00:32:53,920 --> 00:32:57,490
those<font color="#E5E5E5"> that that know about</font><font color="#CCCCCC"> Chavez</font>

642
00:32:55,809 --> 00:32:59,410
deserialization<font color="#E5E5E5"> vulnerabilities the next</font>

643
00:32:57,490 --> 00:33:03,100
place<font color="#E5E5E5"> know that that's the point where</font>

644
00:32:59,410 --> 00:33:07,660
the the<font color="#E5E5E5"> vulnerability is when the</font>

645
00:33:03,100 --> 00:33:12,219
payload is executed so that's why I

646
00:33:07,660 --> 00:33:13,900
<font color="#E5E5E5">ended up with</font><font color="#CCCCCC"> chunks calculators</font><font color="#E5E5E5"> pop in</font>

647
00:33:12,220 --> 00:33:16,120
<font color="#E5E5E5">because of I saw serial payloads when</font>

648
00:33:13,900 --> 00:33:18,549
<font color="#E5E5E5">there they serialized what they do is</font>

649
00:33:16,120 --> 00:33:24,879
execute an<font color="#CCCCCC"> arbitral command in</font><font color="#E5E5E5"> this case</font>

650
00:33:18,549 --> 00:33:28,450
<font color="#E5E5E5">using the classic calc so essentially if</font>

651
00:33:24,880 --> 00:33:32,290
<font color="#CCCCCC">we can call a remote method</font><font color="#E5E5E5"> that's</font>

652
00:33:28,450 --> 00:33:34,450
exposed over<font color="#CCCCCC"> RMI at the network level we</font>

653
00:33:32,290 --> 00:33:37,840
can replace the method parameter with

654
00:33:34,450 --> 00:33:39,880
any object we<font color="#E5E5E5"> want any</font><font color="#CCCCCC"> voice or serial</font>

655
00:33:37,840 --> 00:33:42,360
payload any<font color="#CCCCCC"> deserialization</font><font color="#E5E5E5"> payload that</font>

656
00:33:39,880 --> 00:33:47,940
<font color="#CCCCCC">will be received by the server</font>

657
00:33:42,360 --> 00:33:52,209
deserialized<font color="#CCCCCC"> and executed there's a</font>

658
00:33:47,940 --> 00:33:54,100
slight caveat to that which is that<font color="#E5E5E5"> the</font>

659
00:33:52,210 --> 00:33:58,020
parameter that<font color="#E5E5E5"> we've replaced</font><font color="#CCCCCC"> the method</font>

660
00:33:54,100 --> 00:34:00,730
parameter we replace<font color="#CCCCCC"> cannot be a</font>

661
00:33:58,020 --> 00:34:05,889
primitive<font color="#CCCCCC"> type so it can't</font><font color="#E5E5E5"> be an int</font>

662
00:34:00,730 --> 00:34:11,350
<font color="#E5E5E5">along boolean so on it can be an int</font>

663
00:34:05,890 --> 00:34:13,899
array it can be a integer which is<font color="#CCCCCC"> the</font>

664
00:34:11,350 --> 00:34:15,899
the object<font color="#CCCCCC"> that</font><font color="#E5E5E5"> wraps the int type it</font>

665
00:34:13,899 --> 00:34:19,868
can<font color="#E5E5E5"> be an</font><font color="#CCCCCC"> ArrayList it</font><font color="#E5E5E5"> can be any other</font>

666
00:34:15,899 --> 00:34:22,629
<font color="#E5E5E5">class of objects and that's just to do</font>

667
00:34:19,869 --> 00:34:28,720
<font color="#E5E5E5">with the serialization protocol and</font><font color="#CCCCCC"> how</font>

668
00:34:22,629 --> 00:34:33,549
that wraps that<font color="#E5E5E5"> data up so back to bar</font>

669
00:34:28,719 --> 00:34:35,469
me all the time<font color="#CCCCCC"> I have written</font><font color="#E5E5E5"> called</font>

670
00:34:33,550 --> 00:34:40,929
the attacks various different<font color="#CCCCCC"> RMI</font>

671
00:34:35,469 --> 00:34:43,569
services and using<font color="#E5E5E5"> both legitimate but</font>

672
00:34:40,929 --> 00:34:47,500
dangerous methods so things<font color="#E5E5E5"> like write</font>

673
00:34:43,570 --> 00:34:50,050
fail<font color="#E5E5E5"> without authentication and also</font>

674
00:34:47,500 --> 00:34:52,719
proxy based attacks that<font color="#E5E5E5"> introduce</font>

675
00:34:50,050 --> 00:34:54,790
further risk by we just<font color="#E5E5E5"> modified the</font>

676
00:34:52,719 --> 00:34:55,879
parameter we swap<font color="#E5E5E5"> out for a dangerous</font>

677
00:34:54,790 --> 00:34:59,060
payload

678
00:34:55,880 --> 00:35:01,700
<font color="#CCCCCC">and unfortunately all of</font><font color="#E5E5E5"> these attacks</font>

679
00:34:59,060 --> 00:35:05,660
<font color="#E5E5E5">require knowledge of the remote classes</font>

680
00:35:01,700 --> 00:35:07,759
and the method signatures and anyone

681
00:35:05,660 --> 00:35:10,430
familiar with<font color="#CCCCCC"> RMA and vulnerabilities</font>

682
00:35:07,760 --> 00:35:13,930
and attacks<font color="#E5E5E5"> you might be aware of some</font>

683
00:35:10,430 --> 00:35:18,230
work by a guy called<font color="#E5E5E5"> Adam</font><font color="#CCCCCC"> Bolton</font><font color="#E5E5E5"> in 2008</font>

684
00:35:13,930 --> 00:35:21,710
and he looked<font color="#E5E5E5"> I ended</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> doing some</font>

685
00:35:18,230 --> 00:35:25,520
<font color="#E5E5E5">similar work not being aware of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> but</font>

686
00:35:21,710 --> 00:35:27,980
<font color="#E5E5E5">he</font><font color="#CCCCCC"> looked at whether you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> do a</font><font color="#E5E5E5"> zero</font>

687
00:35:25,520 --> 00:35:29,690
knowledge attack against our<font color="#E5E5E5"> am</font><font color="#CCCCCC"> i and</font>

688
00:35:27,980 --> 00:35:32,600
what<font color="#E5E5E5"> it comes down to is when you</font>

689
00:35:29,690 --> 00:35:36,740
actually invoke a remote method<font color="#CCCCCC"> over</font>

690
00:35:32,600 --> 00:35:38,720
<font color="#E5E5E5">RMI java generates a hash which is based</font>

691
00:35:36,740 --> 00:35:41,330
<font color="#E5E5E5">on the method signature</font><font color="#CCCCCC"> based on the</font>

692
00:35:38,720 --> 00:35:43,640
method name<font color="#CCCCCC"> the return type</font><font color="#E5E5E5"> the number</font>

693
00:35:41,330 --> 00:35:45,890
and types of the<font color="#CCCCCC"> parameters</font><font color="#E5E5E5"> and it</font>

694
00:35:43,640 --> 00:35:47,480
generates<font color="#E5E5E5"> this hash</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually does a</font>

695
00:35:45,890 --> 00:35:51,879
<font color="#CCCCCC">lot of</font><font color="#E5E5E5"> things that</font><font color="#CCCCCC"> reduce the entropy</font><font color="#E5E5E5"> of</font>

696
00:35:47,480 --> 00:35:54,790
that hash so it's a it's a 64-bit value

697
00:35:51,880 --> 00:35:56,930
but the entropy<font color="#E5E5E5"> is a bit less so it's</font>

698
00:35:54,790 --> 00:35:58,520
there's a bit less the brute force<font color="#CCCCCC"> if</font>

699
00:35:56,930 --> 00:36:01,640
you wanted<font color="#E5E5E5"> to do that but you had</font><font color="#CCCCCC"> to</font>

700
00:35:58,520 --> 00:36:04,820
<font color="#E5E5E5">brute force</font><font color="#CCCCCC"> this hash</font><font color="#E5E5E5"> in order to invoke</font>

701
00:36:01,640 --> 00:36:06,980
a remote method<font color="#E5E5E5"> and the interesting</font>

702
00:36:04,820 --> 00:36:09,440
<font color="#CCCCCC">thing about</font><font color="#E5E5E5"> about Adams work was</font><font color="#CCCCCC"> that he</font>

703
00:36:06,980 --> 00:36:11,900
actually<font color="#E5E5E5"> took</font><font color="#CCCCCC"> it a step further anyway</font>

704
00:36:09,440 --> 00:36:14,990
well let's say that<font color="#E5E5E5"> I did</font>

705
00:36:11,900 --> 00:36:17,570
brute force<font color="#E5E5E5"> you know 9 quintillion</font>

706
00:36:14,990 --> 00:36:21,830
<font color="#E5E5E5">values over the network to come up with</font>

707
00:36:17,570 --> 00:36:23,240
<font color="#E5E5E5">a method hash what happens if I send a</font>

708
00:36:21,830 --> 00:36:24,830
method hash<font color="#E5E5E5"> and then I don't know what</font>

709
00:36:23,240 --> 00:36:27,770
<font color="#E5E5E5">the</font><font color="#CCCCCC"> parameters and</font><font color="#E5E5E5"> return</font><font color="#CCCCCC"> type</font><font color="#E5E5E5"> with this</font>

710
00:36:24,830 --> 00:36:29,660
remote method are and what happens and

711
00:36:27,770 --> 00:36:31,610
<font color="#E5E5E5">it turns out Java actually</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> really</font>

712
00:36:29,660 --> 00:36:33,049
helpful<font color="#CCCCCC"> and</font><font color="#E5E5E5"> sends some nice exceptions</font>

713
00:36:31,610 --> 00:36:35,900
back which allow you<font color="#E5E5E5"> to work out what</font>

714
00:36:33,050 --> 00:36:38,590
the<font color="#E5E5E5"> types of the promises are so you can</font>

715
00:36:35,900 --> 00:36:41,060
<font color="#E5E5E5">perform a</font><font color="#CCCCCC"> zero-knowledge attack but it's</font>

716
00:36:38,590 --> 00:36:47,570
you need to do some serious serious

717
00:36:41,060 --> 00:36:49,490
<font color="#CCCCCC">brute force in so I ended up so I've got</font>

718
00:36:47,570 --> 00:36:52,850
<font color="#E5E5E5">this enumeration functionality that was</font>

719
00:36:49,490 --> 00:36:56,359
already<font color="#E5E5E5"> in</font><font color="#CCCCCC"> barmy</font><font color="#E5E5E5"> what I'm what</font><font color="#CCCCCC"> I'm doing</font>

720
00:36:52,850 --> 00:36:58,790
at the minute is incorporating all of

721
00:36:56,360 --> 00:37:02,060
<font color="#CCCCCC">these different attacks and payloads</font>

722
00:36:58,790 --> 00:37:04,600
that<font color="#CCCCCC"> I've built up</font><font color="#E5E5E5"> into one single tool</font>

723
00:37:02,060 --> 00:37:07,759
to attack<font color="#E5E5E5"> our</font><font color="#CCCCCC"> my services the a there is</font>

724
00:37:04,600 --> 00:37:09,130
once I've got details of a class and<font color="#E5E5E5"> I</font>

725
00:37:07,760 --> 00:37:10,960
know<font color="#E5E5E5"> although it's got this</font>

726
00:37:09,130 --> 00:37:14,650
Dangerous Method like<font color="#E5E5E5"> right file for</font>

727
00:37:10,960 --> 00:37:17,650
<font color="#CCCCCC">example I can create</font><font color="#E5E5E5"> I can basically</font>

728
00:37:14,650 --> 00:37:20,859
<font color="#E5E5E5">great an interface that has that right</font>

729
00:37:17,650 --> 00:37:23,019
file<font color="#CCCCCC"> method request</font><font color="#E5E5E5"> a remote</font><font color="#CCCCCC"> object of</font>

730
00:37:20,859 --> 00:37:24,220
that class<font color="#E5E5E5"> cust it's</font><font color="#CCCCCC"> a tight</font><font color="#E5E5E5"> interface</font>

731
00:37:23,019 --> 00:37:27,189
<font color="#E5E5E5">and they call the right right file</font>

732
00:37:24,220 --> 00:37:29,430
method like say without calling this

733
00:37:27,190 --> 00:37:33,460
authenticate method if there is one<font color="#E5E5E5"> and</font>

734
00:37:29,430 --> 00:37:37,930
so we can enumerate remote classes<font color="#E5E5E5"> so we</font>

735
00:37:33,460 --> 00:37:39,759
<font color="#CCCCCC">can find which which attacks we can</font>

736
00:37:37,930 --> 00:37:45,788
perform<font color="#CCCCCC"> if you like which methods we can</font>

737
00:37:39,759 --> 00:37:47,500
call and we<font color="#CCCCCC"> can also where there aren't</font>

738
00:37:45,789 --> 00:37:52,839
dangerous<font color="#E5E5E5"> methods so I can call for use</font>

739
00:37:47,500 --> 00:37:55,269
an example<font color="#E5E5E5"> we can look for look at</font>

740
00:37:52,839 --> 00:37:57,339
whether the application<font color="#E5E5E5"> uses any Java</font>

741
00:37:55,269 --> 00:38:01,769
libraries that would enable us<font color="#E5E5E5"> to</font>

742
00:37:57,339 --> 00:38:04,269
perform a deserialization attack<font color="#E5E5E5"> and so</font>

743
00:38:01,769 --> 00:38:06,848
like<font color="#CCCCCC"> I said</font><font color="#E5E5E5"> building all this</font><font color="#CCCCCC"> cold ensue</font>

744
00:38:04,269 --> 00:38:09,339
a single tool that<font color="#E5E5E5"> will perform these</font>

745
00:38:06,849 --> 00:38:11,259
attacks<font color="#E5E5E5"> and you'll be able to</font>

746
00:38:09,339 --> 00:38:12,849
essentially<font color="#E5E5E5"> run it against an RMI</font>

747
00:38:11,259 --> 00:38:15,970
service if it's got<font color="#E5E5E5"> an own class then</font>

748
00:38:12,849 --> 00:38:20,339
<font color="#CCCCCC">you can attack it that's what barmy is</font>

749
00:38:15,970 --> 00:38:23,890
becoming and I'm having to do a bit of<font color="#E5E5E5"> a</font>

750
00:38:20,339 --> 00:38:26,259
I'm gonna<font color="#E5E5E5"> be releasing this in the next</font>

751
00:38:23,890 --> 00:38:27,960
week it's going to be missing certain

752
00:38:26,259 --> 00:38:31,720
<font color="#E5E5E5">attacks because I'm going through</font>

753
00:38:27,960 --> 00:38:33,640
responsible disclosure<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> also react</font>

754
00:38:31,720 --> 00:38:36,459
<font color="#CCCCCC">texting</font><font color="#E5E5E5"> as the minute as well because</font>

755
00:38:33,640 --> 00:38:38,410
the<font color="#E5E5E5"> code base is horrendous I built this</font>

756
00:38:36,460 --> 00:38:39,640
up from there's been an attack against

757
00:38:38,410 --> 00:38:42,700
<font color="#E5E5E5">that an attack against</font><font color="#CCCCCC"> start some</font>

758
00:38:39,640 --> 00:38:44,348
proxies and<font color="#E5E5E5"> so I'm really</font><font color="#CCCCCC"> taxing it and</font>

759
00:38:42,700 --> 00:38:50,319
<font color="#E5E5E5">certainly it's something that's easily</font>

760
00:38:44,349 --> 00:38:53,980
extendable and<font color="#CCCCCC"> actually I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

761
00:38:50,319 --> 00:38:56,558
releasing<font color="#E5E5E5"> this and the next week</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> keep</font>

762
00:38:53,980 --> 00:38:59,559
an eye out<font color="#E5E5E5"> on my Twitter if you're</font>

763
00:38:56,559 --> 00:39:02,049
interested in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> and I'll</font><font color="#E5E5E5"> be posting</font>

764
00:38:59,559 --> 00:39:06,220
it on there my blog and<font color="#E5E5E5"> my github</font><font color="#CCCCCC"> I've</font>

765
00:39:02,049 --> 00:39:07,660
got the details<font color="#E5E5E5"> later</font><font color="#CCCCCC"> on and so that's</font>

766
00:39:06,220 --> 00:39:08,769
<font color="#E5E5E5">actually like that there was there's</font>

767
00:39:07,660 --> 00:39:10,960
more that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> would</font><font color="#CCCCCC"> electorates all</font>

768
00:39:08,769 --> 00:39:12,788
included but<font color="#CCCCCC"> it kind of ended</font><font color="#E5E5E5"> up being</font>

769
00:39:10,960 --> 00:39:14,769
it ended<font color="#E5E5E5"> up going down this big</font><font color="#CCCCCC"> rabbit</font>

770
00:39:12,789 --> 00:39:15,970
hole and<font color="#E5E5E5"> I'm not having</font><font color="#CCCCCC"> the time to talk</font>

771
00:39:14,769 --> 00:39:17,470
<font color="#CCCCCC">about this so why should I write blog</font>

772
00:39:15,970 --> 00:39:21,009
post with some more of<font color="#CCCCCC"> the details on</font>

773
00:39:17,470 --> 00:39:22,779
this<font color="#E5E5E5"> but</font><font color="#CCCCCC"> just a brief conclusion</font><font color="#E5E5E5"> and are</font>

774
00:39:21,009 --> 00:39:25,419
a my<font color="#CCCCCC"> large</font><font color="#E5E5E5"> majority it's not</font>

775
00:39:22,779 --> 00:39:28,150
as well<font color="#E5E5E5"> well used as all the protocols</font>

776
00:39:25,419 --> 00:39:29,859
like HTTP and it's often used<font color="#E5E5E5"> very</font>

777
00:39:28,150 --> 00:39:34,119
<font color="#CCCCCC">insecurely</font><font color="#E5E5E5"> it's very easy to implement</font>

778
00:39:29,859 --> 00:39:35,769
<font color="#E5E5E5">stuff using</font><font color="#CCCCCC"> RMI so people just and and</font>

779
00:39:34,119 --> 00:39:39,849
<font color="#E5E5E5">and it's also very transparent some</font>

780
00:39:35,769 --> 00:39:41,319
<font color="#E5E5E5">people just use it they don't need to</font>

781
00:39:39,849 --> 00:39:42,759
<font color="#CCCCCC">think about authentication they've never</font>

782
00:39:41,319 --> 00:39:46,329
had<font color="#CCCCCC"> to do that before</font><font color="#E5E5E5"> so why would they</font>

783
00:39:42,759 --> 00:39:49,599
do<font color="#E5E5E5"> it now and objects injection attacks</font>

784
00:39:46,329 --> 00:39:52,449
are almost always possible because we

785
00:39:49,599 --> 00:39:57,069
can replace the method<font color="#E5E5E5"> promises on the</font>

786
00:39:52,449 --> 00:39:58,839
on the<font color="#E5E5E5"> on the wire and old an</font>

787
00:39:57,069 --> 00:40:03,669
interesting<font color="#E5E5E5"> technology can actually</font><font color="#CCCCCC"> be</font>

788
00:39:58,839 --> 00:40:05,529
foreign and<font color="#E5E5E5"> fruitful research target in</font>

789
00:40:03,669 --> 00:40:07,989
terms<font color="#CCCCCC"> of this objects injection thing</font><font color="#E5E5E5"> I</font>

790
00:40:05,529 --> 00:40:10,989
just<font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> to mention something because</font>

791
00:40:07,989 --> 00:40:11,979
I report<font color="#E5E5E5"> this issue to Oracle reported a</font>

792
00:40:10,989 --> 00:40:19,239
couple<font color="#CCCCCC"> of issues to</font><font color="#E5E5E5"> where a call</font>

793
00:40:11,979 --> 00:40:23,279
actually<font color="#E5E5E5"> and and there is a Java</font>

794
00:40:19,239 --> 00:40:27,249
enhancement proposal<font color="#CCCCCC"> at</font><font color="#E5E5E5"> Lingus</font><font color="#CCCCCC"> JEP 290</font>

795
00:40:23,279 --> 00:40:29,499
<font color="#E5E5E5">which</font><font color="#CCCCCC"> in newer versions of Java</font><font color="#E5E5E5"> allows</font>

796
00:40:27,249 --> 00:40:32,589
<font color="#E5E5E5">you to configure a global</font>

797
00:40:29,499 --> 00:40:35,379
deserialization filter and now<font color="#CCCCCC"> there</font>

798
00:40:32,589 --> 00:40:40,179
behind<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> you can whitelist</font><font color="#E5E5E5"> classes</font>

799
00:40:35,380 --> 00:40:43,199
<font color="#E5E5E5">that can be deserialized so if you have</font>

800
00:40:40,179 --> 00:40:45,880
a method<font color="#CCCCCC"> that you're exposing over RMI</font>

801
00:40:43,199 --> 00:40:49,209
that you know<font color="#CCCCCC"> accepts</font><font color="#E5E5E5"> us accepts a</font>

802
00:40:45,880 --> 00:40:53,319
string parameter you can whitelist<font color="#CCCCCC"> java</font>

803
00:40:49,209 --> 00:40:55,239
dot line dot string then if<font color="#CCCCCC"> i was to</font>

804
00:40:53,319 --> 00:40:57,849
perform<font color="#E5E5E5"> this attack against your</font>

805
00:40:55,239 --> 00:40:59,439
application<font color="#CCCCCC"> and use a proxy to replace</font>

806
00:40:57,849 --> 00:41:01,539
the parameter with some of<font color="#E5E5E5"> our objects</font>

807
00:40:59,439 --> 00:41:05,529
that<font color="#E5E5E5"> would potentially execute commands</font>

808
00:41:01,539 --> 00:41:07,539
on you a new server<font color="#E5E5E5"> and Java would kick</font>

809
00:41:05,529 --> 00:41:08,829
in<font color="#E5E5E5"> and go and on that classes and</font>

810
00:41:07,539 --> 00:41:11,109
<font color="#E5E5E5">actually whitelisted we can't</font>

811
00:41:08,829 --> 00:41:14,319
deserialize that and<font color="#E5E5E5"> so there is</font>

812
00:41:11,109 --> 00:41:16,869
actually a fix but<font color="#CCCCCC"> oracle</font><font color="#E5E5E5"> are putting</font>

813
00:41:14,319 --> 00:41:18,788
the onus on developers and<font color="#CCCCCC"> i'm really i</font>

814
00:41:16,869 --> 00:41:22,179
think<font color="#E5E5E5"> that it should be don't say it</font>

815
00:41:18,789 --> 00:41:24,459
should be<font color="#E5E5E5"> Oracle's and</font><font color="#CCCCCC"> Java's problem</font>

816
00:41:22,179 --> 00:41:28,390
really<font color="#E5E5E5"> why would you what</font><font color="#CCCCCC"> would you do</font>

817
00:41:24,459 --> 00:41:30,669
<font color="#CCCCCC">sarah liza</font><font color="#E5E5E5"> hash that when the parameter</font>

818
00:41:28,390 --> 00:41:31,989
type<font color="#E5E5E5"> is string and hash set</font><font color="#CCCCCC"> isn't</font>

819
00:41:30,669 --> 00:41:33,310
compatible with string but that's what

820
00:41:31,989 --> 00:41:36,490
they're<font color="#CCCCCC"> doing and</font>

821
00:41:33,310 --> 00:41:40,779
a<font color="#CCCCCC"> like say they're leaving the onus on</font>

822
00:41:36,490 --> 00:41:43,359
<font color="#E5E5E5">the developers to fix this but yeah</font>

823
00:41:40,780 --> 00:41:45,910
that's<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> our there's where you can</font>

824
00:41:43,359 --> 00:41:50,430
find me thanks<font color="#E5E5E5"> for coming</font>

825
00:41:45,910 --> 00:41:50,430
hope it's been interesting<font color="#CCCCCC"> any questions</font>

826
00:41:52,340 --> 00:42:11,719
[Music]

