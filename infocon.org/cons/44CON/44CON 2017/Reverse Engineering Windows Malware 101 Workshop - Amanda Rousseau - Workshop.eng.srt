1
00:00:00,030 --> 00:00:05,819
<font color="#E5E5E5">all right if you guys haven't already</font>

2
00:00:02,240 --> 00:00:08,700
<font color="#CCCCCC">you're gonna need the</font><font color="#E5E5E5"> VMS for to follow</font>

3
00:00:05,819 --> 00:00:11,580
along<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you don't have enough time to</font>

4
00:00:08,700 --> 00:00:14,129
follow along<font color="#E5E5E5"> it's all in line</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> passed</font>

5
00:00:11,580 --> 00:00:16,410
out<font color="#E5E5E5"> a couple of USB drives</font><font color="#CCCCCC"> what you want</font>

6
00:00:14,130 --> 00:00:19,199
to do is at this<font color="#E5E5E5"> website you want to set</font>

7
00:00:16,410 --> 00:00:26,849
up<font color="#E5E5E5"> your the fundamentals section one so</font>

8
00:00:19,199 --> 00:00:28,439
that when we really<font color="#E5E5E5"> I mean when we reach</font>

9
00:00:26,849 --> 00:00:30,750
section<font color="#E5E5E5"> four we can</font><font color="#CCCCCC"> actually jump into</font>

10
00:00:28,439 --> 00:00:34,860
<font color="#E5E5E5">the static analysis</font><font color="#CCCCCC"> donut and dynamic</font>

11
00:00:30,750 --> 00:00:36,450
analysis on the beams<font color="#E5E5E5"> so</font><font color="#CCCCCC"> as as I go</font>

12
00:00:34,860 --> 00:00:38,670
<font color="#CCCCCC">through the first couple</font><font color="#E5E5E5"> sections you</font>

13
00:00:36,450 --> 00:00:40,079
guys can set that<font color="#E5E5E5"> up and then by the</font>

14
00:00:38,670 --> 00:00:47,129
<font color="#E5E5E5">time we reach section four we'll get</font>

15
00:00:40,079 --> 00:00:51,059
started so if you haven't<font color="#E5E5E5"> already this</font>

16
00:00:47,129 --> 00:00:53,250
<font color="#CCCCCC">is the website here</font><font color="#E5E5E5"> and the victim VM</font>

17
00:00:51,059 --> 00:00:55,468
and the sniffer<font color="#E5E5E5"> VM passwords are all</font>

18
00:00:53,250 --> 00:00:57,960
there if you have trouble<font color="#CCCCCC"> logging</font><font color="#E5E5E5"> into</font>

19
00:00:55,469 --> 00:01:01,050
the<font color="#E5E5E5"> windows VM</font><font color="#CCCCCC"> New York</font><font color="#E5E5E5"> you're gonna</font>

20
00:00:57,960 --> 00:01:05,549
have to say switch user and to<font color="#CCCCCC"> username</font>

21
00:01:01,050 --> 00:01:24,990
victim<font color="#CCCCCC"> re 101 2017 is the password for</font>

22
00:01:05,549 --> 00:01:28,619
both<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> why reverse engineering</font>

23
00:01:24,990 --> 00:01:32,789
<font color="#E5E5E5">how many of you need</font><font color="#CCCCCC"> to do this for your</font>

24
00:01:28,619 --> 00:01:37,200
job<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> how many</font><font color="#CCCCCC"> of you are kind of</font>

25
00:01:32,790 --> 00:01:38,700
looking<font color="#E5E5E5"> at malware</font><font color="#CCCCCC"> Sauk analyzed ok</font><font color="#E5E5E5"> how</font>

26
00:01:37,200 --> 00:01:44,579
many<font color="#CCCCCC"> of you already know</font><font color="#E5E5E5"> assembly</font>

27
00:01:38,700 --> 00:01:46,200
language<font color="#E5E5E5"> a little</font><font color="#CCCCCC"> bit ok good</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> why do</font>

28
00:01:44,579 --> 00:01:48,689
we<font color="#CCCCCC"> need to learn for researching is</font>

29
00:01:46,200 --> 00:01:50,549
basically taking things apart<font color="#E5E5E5"> figuring</font>

30
00:01:48,689 --> 00:01:53,460
<font color="#CCCCCC">out how</font><font color="#E5E5E5"> that works and then putting</font><font color="#CCCCCC"> it</font>

31
00:01:50,549 --> 00:01:56,460
back<font color="#E5E5E5"> together again</font><font color="#CCCCCC"> or replicating it</font><font color="#E5E5E5"> if</font>

32
00:01:53,460 --> 00:01:58,079
you'd like to play<font color="#CCCCCC"> with Legos if you</font>

33
00:01:56,460 --> 00:02:00,000
like to build things<font color="#E5E5E5"> take things apart</font>

34
00:01:58,079 --> 00:02:03,779
and<font color="#E5E5E5"> figure out how they work reverse</font>

35
00:02:00,000 --> 00:02:06,240
engineering<font color="#E5E5E5"> might be for you the thing</font>

36
00:02:03,780 --> 00:02:08,399
about reverse<font color="#CCCCCC"> engineering is that you're</font>

37
00:02:06,240 --> 00:02:11,750
always<font color="#CCCCCC"> constantly learning</font><font color="#E5E5E5"> because</font>

38
00:02:08,399 --> 00:02:12,960
there's more things<font color="#E5E5E5"> to reverse not only</font>

39
00:02:11,750 --> 00:02:16,920
<font color="#CCCCCC">by</font>

40
00:02:12,960 --> 00:02:18,540
not<font color="#E5E5E5"> only I</font><font color="#CCCCCC"> Oh tea devices</font><font color="#E5E5E5"> everything</font>

41
00:02:16,920 --> 00:02:20,429
<font color="#E5E5E5">that you do in</font><font color="#CCCCCC"> life you're taking it</font>

42
00:02:18,540 --> 00:02:22,350
apart figuring how<font color="#CCCCCC"> to works and get back</font>

43
00:02:20,430 --> 00:02:24,090
together again<font color="#E5E5E5"> should I do</font><font color="#CCCCCC"> that with</font>

44
00:02:22,350 --> 00:02:26,280
clothes like I'll take apart<font color="#CCCCCC"> my clothes</font>

45
00:02:24,090 --> 00:02:27,710
and we sew them back<font color="#E5E5E5"> together again</font><font color="#CCCCCC"> so I</font>

46
00:02:26,280 --> 00:02:32,460
can learn how<font color="#CCCCCC"> to sew</font>

47
00:02:27,710 --> 00:02:35,220
same thing with binaries<font color="#CCCCCC"> so what is the</font>

48
00:02:32,460 --> 00:02:38,340
game plan<font color="#CCCCCC"> here</font><font color="#E5E5E5"> the game plan is</font><font color="#CCCCCC"> to pick</font>

49
00:02:35,220 --> 00:02:41,250
a point<font color="#CCCCCC"> in the Mauer where you want to</font>

50
00:02:38,340 --> 00:02:42,780
go<font color="#E5E5E5"> and then figure out</font><font color="#CCCCCC"> how you can work</font>

51
00:02:41,250 --> 00:02:44,940
<font color="#E5E5E5">your</font><font color="#CCCCCC"> way backwards to</font><font color="#E5E5E5"> figure out the</font>

52
00:02:42,780 --> 00:02:46,710
path<font color="#CCCCCC"> and where to get there</font><font color="#E5E5E5"> and then you</font>

53
00:02:44,940 --> 00:02:49,230
<font color="#E5E5E5">put that into like a little map so you</font>

54
00:02:46,710 --> 00:02:51,120
<font color="#E5E5E5">can figure out how can</font><font color="#CCCCCC"> you book through</font>

55
00:02:49,230 --> 00:02:53,940
the<font color="#CCCCCC"> power to get to the point where you</font>

56
00:02:51,120 --> 00:02:56,310
<font color="#E5E5E5">need to go so say it's doing a internet</font>

57
00:02:53,940 --> 00:02:58,590
request you<font color="#E5E5E5"> want to find and get to that</font>

58
00:02:56,310 --> 00:03:02,570
<font color="#E5E5E5">internet work request point before</font><font color="#CCCCCC"> it</font>

59
00:02:58,590 --> 00:03:07,650
starts<font color="#E5E5E5"> encrypting itself for the request</font>

60
00:03:02,570 --> 00:03:09,329
so basically you need<font color="#CCCCCC"> to stand up a</font>

61
00:03:07,650 --> 00:03:12,090
<font color="#E5E5E5">baseline environment which I provided</font>

62
00:03:09,330 --> 00:03:14,520
for you<font color="#E5E5E5"> for the VMS</font><font color="#CCCCCC"> from there you're</font>

63
00:03:12,090 --> 00:03:16,740
<font color="#CCCCCC">going to do triage</font><font color="#E5E5E5"> basically gathering</font>

64
00:03:14,520 --> 00:03:18,660
information on what the<font color="#E5E5E5"> Mauer is you</font>

65
00:03:16,740 --> 00:03:21,780
know what<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Mauer</font><font color="#E5E5E5"> is what it's doing</font>

66
00:03:18,660 --> 00:03:24,090
what<font color="#CCCCCC"> it's going to</font><font color="#E5E5E5"> do and then static</font>

67
00:03:21,780 --> 00:03:26,660
analysis is making your map figuring out

68
00:03:24,090 --> 00:03:28,890
where<font color="#CCCCCC"> to go</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> you start debugging</font>

69
00:03:26,660 --> 00:03:30,570
<font color="#E5E5E5">because</font><font color="#CCCCCC"> the bugging you should be the</font>

70
00:03:28,890 --> 00:03:33,239
very<font color="#CCCCCC"> last thing</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> should do because it</font>

71
00:03:30,570 --> 00:03:36,390
takes<font color="#CCCCCC"> so much</font><font color="#E5E5E5"> time so how can you make</font>

72
00:03:33,240 --> 00:03:39,540
the bugging much quicker<font color="#E5E5E5"> is by creating</font>

73
00:03:36,390 --> 00:03:42,450
<font color="#CCCCCC">a map for yourself</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> to go so we'll</font>

74
00:03:39,540 --> 00:03:45,299
<font color="#E5E5E5">end with manual debugging at the end so</font>

75
00:03:42,450 --> 00:03:47,100
<font color="#E5E5E5">I already explained you should have the</font>

76
00:03:45,300 --> 00:03:49,500
<font color="#CCCCCC">VMs</font><font color="#E5E5E5"> download</font><font color="#CCCCCC"> or you</font><font color="#E5E5E5"> should have</font>

77
00:03:47,100 --> 00:03:53,460
VirtualBox installed<font color="#CCCCCC"> if not you can do</font>

78
00:03:49,500 --> 00:03:54,660
that until<font color="#E5E5E5"> we reach</font><font color="#CCCCCC"> section 4 basically</font>

79
00:03:53,460 --> 00:03:57,450
what you're doing<font color="#CCCCCC"> everything</font><font color="#E5E5E5"> is set up</font>

80
00:03:54,660 --> 00:04:00,120
<font color="#CCCCCC">for you in</font><font color="#E5E5E5"> VirtualBox the internal</font>

81
00:03:57,450 --> 00:04:02,579
<font color="#E5E5E5">network and everything so you can go</font>

82
00:04:00,120 --> 00:04:04,530
<font color="#CCCCCC">through that on your own</font><font color="#E5E5E5"> and set that up</font>

83
00:04:02,580 --> 00:04:09,150
<font color="#E5E5E5">if you have any problems you can you</font>

84
00:04:04,530 --> 00:04:11,880
know<font color="#E5E5E5"> ask me so the way</font><font color="#CCCCCC"> that it's</font>

85
00:04:09,150 --> 00:04:13,620
designed is<font color="#CCCCCC"> that on VirtualBox there's</font>

86
00:04:11,880 --> 00:04:16,079
an internal<font color="#E5E5E5"> network that's connected so</font>

87
00:04:13,620 --> 00:04:18,930
it's connecting the two VMs together<font color="#E5E5E5"> so</font>

88
00:04:16,079 --> 00:04:23,800
the sniffer will actually actually<font color="#E5E5E5"> be</font>

89
00:04:18,930 --> 00:04:26,650
host the mimicking the network for<font color="#E5E5E5"> the</font>

90
00:04:23,800 --> 00:04:30,759
box<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> any traffic</font><font color="#E5E5E5"> will be sniffed</font>

91
00:04:26,650 --> 00:04:33,669
<font color="#CCCCCC">on the sniffer VM</font><font color="#E5E5E5"> so this will</font><font color="#CCCCCC"> become</font>

92
00:04:30,759 --> 00:04:35,620
important when<font color="#E5E5E5"> we did a quick triage and</font>

93
00:04:33,669 --> 00:04:37,930
dynamic analysis because you'll need to

94
00:04:35,620 --> 00:04:43,030
see<font color="#E5E5E5"> that connection happening for the</font>

95
00:04:37,930 --> 00:04:45,460
<font color="#CCCCCC">internet requests</font><font color="#E5E5E5"> all right</font>

96
00:04:43,030 --> 00:04:49,318
I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> skip through that so the next</font>

97
00:04:45,460 --> 00:04:52,180
one so I want to<font color="#E5E5E5"> talk about a Windows PC</font>

98
00:04:49,319 --> 00:04:55,389
<font color="#E5E5E5">program you have different layers you</font>

99
00:04:52,180 --> 00:04:58,120
<font color="#CCCCCC">have your C</font><font color="#E5E5E5"> and C++ code underneath that</font>

100
00:04:55,389 --> 00:05:00,880
you<font color="#CCCCCC"> have your compiler which turns</font><font color="#E5E5E5"> that</font>

101
00:04:58,120 --> 00:05:05,560
code<font color="#E5E5E5"> into machine code and underneath</font>

102
00:05:00,880 --> 00:05:08,139
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you have the hardware so where we</font>

103
00:05:05,560 --> 00:05:10,389
want<font color="#E5E5E5"> to be is after the compiler where</font>

104
00:05:08,139 --> 00:05:14,740
we see the<font color="#CCCCCC"> x86 assembly and the machine</font>

105
00:05:10,389 --> 00:05:17,110
code<font color="#CCCCCC"> which is hex code</font><font color="#E5E5E5"> and you'll need</font>

106
00:05:14,740 --> 00:05:19,270
<font color="#E5E5E5">to figure</font><font color="#CCCCCC"> out where everything</font><font color="#E5E5E5"> lies in</font>

107
00:05:17,110 --> 00:05:21,310
<font color="#CCCCCC">the</font><font color="#E5E5E5"> address space</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> everything</font>

108
00:05:19,270 --> 00:05:23,318
exists<font color="#E5E5E5"> like where the stack the heap</font>

109
00:05:21,310 --> 00:05:25,180
<font color="#E5E5E5">where the actual code is being executed</font>

110
00:05:23,319 --> 00:05:26,710
<font color="#E5E5E5">because all those addresses are</font>

111
00:05:25,180 --> 00:05:32,409
important so you can<font color="#E5E5E5"> help yourself</font>

112
00:05:26,710 --> 00:05:34,630
navigate throughout the binary so for

113
00:05:32,409 --> 00:05:36,250
the<font color="#E5E5E5"> Windows architecture there is a user</font>

114
00:05:34,630 --> 00:05:37,810
mode<font color="#E5E5E5"> in kernel mode</font><font color="#CCCCCC"> I'm sure you're</font>

115
00:05:36,250 --> 00:05:39,250
<font color="#E5E5E5">familiar with both of these but the</font>

116
00:05:37,810 --> 00:05:42,610
difference between the two is<font color="#CCCCCC"> the</font>

117
00:05:39,250 --> 00:05:45,430
virtual address<font color="#E5E5E5"> space</font><font color="#CCCCCC"> so in each program</font>

118
00:05:42,610 --> 00:05:48,009
<font color="#E5E5E5">that gets started</font><font color="#CCCCCC"> each program has</font><font color="#E5E5E5"> its</font>

119
00:05:45,430 --> 00:05:51,039
<font color="#E5E5E5">own in</font><font color="#CCCCCC"> New</font><font color="#E5E5E5"> Zealand has its own address</font>

120
00:05:48,009 --> 00:05:53,919
space<font color="#E5E5E5"> so you have where the</font><font color="#CCCCCC"> dll's are</font>

121
00:05:51,039 --> 00:05:55,568
the image of the binary itself and all

122
00:05:53,919 --> 00:05:58,060
of the<font color="#CCCCCC"> preferences of variables of the</font>

123
00:05:55,569 --> 00:06:00,130
heap<font color="#E5E5E5"> and stack it</font><font color="#CCCCCC"> has its own now for</font>

124
00:05:58,060 --> 00:06:03,340
the kernel<font color="#CCCCCC"> mode everything</font><font color="#E5E5E5"> shared this</font>

125
00:06:00,130 --> 00:06:06,819
is why you have different tokens<font color="#E5E5E5"> for</font>

126
00:06:03,340 --> 00:06:08,138
when things access memory<font color="#E5E5E5"> and when it</font>

127
00:06:06,819 --> 00:06:10,060
can<font color="#CCCCCC"> perform but we're not going to talk</font>

128
00:06:08,139 --> 00:06:14,440
about<font color="#E5E5E5"> kernel mode this time</font><font color="#CCCCCC"> around just</font>

129
00:06:10,060 --> 00:06:17,139
<font color="#CCCCCC">squeeze it</font><font color="#E5E5E5"> rather so the PE header is</font>

130
00:06:14,440 --> 00:06:19,979
important<font color="#E5E5E5"> you nowadays</font><font color="#CCCCCC"> you have like</font>

131
00:06:17,139 --> 00:06:22,389
these nice<font color="#E5E5E5"> lovely open source</font>

132
00:06:19,979 --> 00:06:24,729
repositories where it could parse follow

133
00:06:22,389 --> 00:06:26,349
that for you but it's<font color="#E5E5E5"> good to</font><font color="#CCCCCC"> know where</font>

134
00:06:24,729 --> 00:06:29,680
everything<font color="#E5E5E5"> lies so you can look at</font><font color="#CCCCCC"> it</font>

135
00:06:26,349 --> 00:06:31,599
statically<font color="#E5E5E5"> in a hex editor so basically</font>

136
00:06:29,680 --> 00:06:34,180
what it says is<font color="#E5E5E5"> telling the operating</font>

137
00:06:31,599 --> 00:06:36,520
system where each section is for reading

138
00:06:34,180 --> 00:06:36,940
<font color="#CCCCCC">writing and executing so this will load</font>

139
00:06:36,520 --> 00:06:41,049
<font color="#CCCCCC">up</font>

140
00:06:36,940 --> 00:06:43,600
into the actual binary<font color="#E5E5E5"> image which if I</font>

141
00:06:41,050 --> 00:06:45,490
scroll<font color="#CCCCCC"> down here you can kind of see the</font>

142
00:06:43,600 --> 00:06:47,710
<font color="#E5E5E5">memory map before the program image</font>

143
00:06:45,490 --> 00:06:51,630
actually<font color="#E5E5E5"> exists where the heap and stack</font>

144
00:06:47,710 --> 00:06:54,549
<font color="#E5E5E5">exist as well so that's basically what</font>

145
00:06:51,630 --> 00:06:56,320
this header is<font color="#CCCCCC"> used</font><font color="#E5E5E5"> for I'm not going to</font>

146
00:06:54,550 --> 00:06:58,120
go<font color="#E5E5E5"> into the header</font><font color="#CCCCCC"> if you wanted</font><font color="#E5E5E5"> to look</font>

147
00:06:56,320 --> 00:07:00,790
at you know malformed headers you can

148
00:06:58,120 --> 00:07:05,170
<font color="#E5E5E5">but it's just good to see what it looks</font>

149
00:07:00,790 --> 00:07:09,270
<font color="#E5E5E5">like in hex here so you can see the MZ</font>

150
00:07:05,170 --> 00:07:12,070
header<font color="#CCCCCC"> which represents a</font><font color="#E5E5E5"> PE binary and</font>

151
00:07:09,270 --> 00:07:15,430
below<font color="#CCCCCC"> that is some information like the</font>

152
00:07:12,070 --> 00:07:17,710
<font color="#E5E5E5">timestamp</font><font color="#CCCCCC"> the text section</font><font color="#E5E5E5"> and our data</font>

153
00:07:15,430 --> 00:07:26,380
<font color="#CCCCCC">section so we'll get into later</font><font color="#E5E5E5"> when we</font>

154
00:07:17,710 --> 00:07:28,539
look at the static analysis<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> and</font>

155
00:07:26,380 --> 00:07:31,180
as I explained<font color="#CCCCCC"> before it in</font><font color="#E5E5E5"> the user</font>

156
00:07:28,540 --> 00:07:34,120
land there's the memory layout basically

157
00:07:31,180 --> 00:07:37,540
where your stack and heap goes<font color="#E5E5E5"> you got</font>

158
00:07:34,120 --> 00:07:40,180
to<font color="#CCCCCC"> remember how the addresses are placed</font>

159
00:07:37,540 --> 00:07:43,360
so the stack grows<font color="#CCCCCC"> up to lower</font><font color="#E5E5E5"> addresses</font>

160
00:07:40,180 --> 00:07:45,790
so when it's allocating new<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> for</font>

161
00:07:43,360 --> 00:07:49,360
the stack<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> look kind of weird</font>

162
00:07:45,790 --> 00:07:53,200
because it grows down to<font color="#CCCCCC"> 0 and while the</font>

163
00:07:49,360 --> 00:07:55,510
heap grows up for the addresses for the

164
00:07:53,200 --> 00:07:58,780
program image usually<font color="#E5E5E5"> that always starts</font>

165
00:07:55,510 --> 00:08:00,669
<font color="#CCCCCC">at this number here</font><font color="#E5E5E5"> it depends if it's</font>

166
00:07:58,780 --> 00:08:02,739
<font color="#E5E5E5">doing any packed information then maybe</font>

167
00:08:00,669 --> 00:08:06,609
it'll<font color="#E5E5E5"> start at a</font><font color="#CCCCCC"> different address but</font>

168
00:08:02,740 --> 00:08:12,550
<font color="#E5E5E5">typically it'll start at this this hex</font>

169
00:08:06,610 --> 00:08:16,180
number here<font color="#E5E5E5"> 400,000</font><font color="#CCCCCC"> in hex</font><font color="#E5E5E5"> and then we</font>

170
00:08:12,550 --> 00:08:18,550
have<font color="#E5E5E5"> kernel</font><font color="#CCCCCC"> land on the bottom so back</font>

171
00:08:16,180 --> 00:08:20,410
to the stack the stack frame<font color="#E5E5E5"> is</font>

172
00:08:18,550 --> 00:08:21,850
important because it allocates a<font color="#E5E5E5"> view</font>

173
00:08:20,410 --> 00:08:24,430
section of stack frame<font color="#E5E5E5"> each time a</font>

174
00:08:21,850 --> 00:08:26,590
function<font color="#CCCCCC"> is called</font><font color="#E5E5E5"> and you're going to</font>

175
00:08:24,430 --> 00:08:29,200
have to figure<font color="#CCCCCC"> out</font><font color="#E5E5E5"> where the return that</font>

176
00:08:26,590 --> 00:08:32,949
saved EBP or the return address is going

177
00:08:29,200 --> 00:08:35,020
<font color="#CCCCCC">to</font><font color="#E5E5E5"> go to or the</font><font color="#CCCCCC"> saved EBP of the stack</font>

178
00:08:32,950 --> 00:08:36,940
<font color="#E5E5E5">where the parameters are before the</font>

179
00:08:35,020 --> 00:08:39,159
function<font color="#CCCCCC"> is called</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> the local</font>

180
00:08:36,940 --> 00:08:41,229
variables<font color="#CCCCCC"> which</font><font color="#E5E5E5"> you know grow upward</font>

181
00:08:39,159 --> 00:08:44,229
<font color="#CCCCCC">sort of zero so</font><font color="#E5E5E5"> you see the negative 4</font>

182
00:08:41,229 --> 00:08:46,839
and then<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> plus 8 so when you see it in</font>

183
00:08:44,229 --> 00:08:48,640
the debugger<font color="#CCCCCC"> and I'll show</font><font color="#E5E5E5"> you exactly</font>

184
00:08:46,839 --> 00:08:49,730
what I'm talking about<font color="#CCCCCC"> you'll see it</font>

185
00:08:48,640 --> 00:08:57,590
<font color="#E5E5E5">just like</font><font color="#CCCCCC"> that</font>

186
00:08:49,730 --> 00:08:59,180
in the actual stack frame so it's it's

187
00:08:57,590 --> 00:09:01,460
<font color="#E5E5E5">not so much important you need</font><font color="#CCCCCC"> to know</font>

188
00:08:59,180 --> 00:09:05,420
like<font color="#CCCCCC"> you just need</font><font color="#E5E5E5"> to know how the</font>

189
00:09:01,460 --> 00:09:08,920
addresses grow<font color="#CCCCCC"> visually I'm gonna show</font>

190
00:09:05,420 --> 00:09:08,920
you like<font color="#E5E5E5"> what all this means</font>

191
00:09:09,070 --> 00:09:16,880
so x86<font color="#E5E5E5"> it's an easier assembly language</font>

192
00:09:14,570 --> 00:09:19,880
to<font color="#E5E5E5"> learn than 64-bit only because the</font>

193
00:09:16,880 --> 00:09:22,189
<font color="#CCCCCC">addresses you have a</font><font color="#E5E5E5"> typical D word</font>

194
00:09:19,880 --> 00:09:24,110
which is only<font color="#E5E5E5"> four bytes and when</font>

195
00:09:22,190 --> 00:09:27,140
they're stored their stored backwards<font color="#E5E5E5"> in</font>

196
00:09:24,110 --> 00:09:31,610
<font color="#E5E5E5">Windows so as little endian here you</font>

197
00:09:27,140 --> 00:09:33,560
have a 1<font color="#CCCCCC"> a 2 a 3 or a 0 a 1</font><font color="#E5E5E5"> 2</font><font color="#CCCCCC"> 3 it'll be</font>

198
00:09:31,610 --> 00:09:36,080
backwards<font color="#E5E5E5"> when you see the</font><font color="#CCCCCC"> address on</font>

199
00:09:33,560 --> 00:09:37,219
the<font color="#CCCCCC"> stack so this is becomes important</font>

200
00:09:36,080 --> 00:09:40,040
important when you're<font color="#E5E5E5"> trying to</font>

201
00:09:37,220 --> 00:09:42,760
<font color="#E5E5E5">translate things in order</font><font color="#CCCCCC"> to jump to</font>

202
00:09:40,040 --> 00:09:42,760
<font color="#CCCCCC">that address</font>

203
00:09:43,990 --> 00:09:50,260
<font color="#E5E5E5">so there's important different types of</font>

204
00:09:47,450 --> 00:09:53,390
op codes or instructions you should<font color="#CCCCCC"> know</font>

205
00:09:50,260 --> 00:09:56,960
<font color="#E5E5E5">there's three major</font><font color="#CCCCCC"> sections there's</font>

206
00:09:53,390 --> 00:09:59,630
data movement<font color="#CCCCCC"> data access</font><font color="#E5E5E5"> arithmetic and</font>

207
00:09:56,960 --> 00:10:03,020
logic<font color="#E5E5E5"> and control flow so some of those</font>

208
00:09:59,630 --> 00:10:07,660
data movement<font color="#CCCCCC"> and data access are move</font>

209
00:10:03,020 --> 00:10:11,150
<font color="#E5E5E5">and le a arithmetic is add and subtract</font>

210
00:10:07,660 --> 00:10:13,430
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> there's more logic which is</font>

211
00:10:11,150 --> 00:10:19,630
shift right shift left<font color="#E5E5E5"> how many of you</font>

212
00:10:13,430 --> 00:10:19,630
took like there's a data structures or

213
00:10:20,170 --> 00:10:26,930
structures<font color="#CCCCCC"> a discrete math you want to</font>

214
00:10:24,560 --> 00:10:30,770
take<font color="#E5E5E5"> discrete</font><font color="#CCCCCC"> math about logic and</font>

215
00:10:26,930 --> 00:10:32,630
shifting anyways it<font color="#CCCCCC"> just bit shift shift</font>

216
00:10:30,770 --> 00:10:35,689
right shift left it's<font color="#CCCCCC"> just shifting the</font>

217
00:10:32,630 --> 00:10:39,320
<font color="#E5E5E5">bits</font><font color="#CCCCCC"> from right to left and changing the</font>

218
00:10:35,690 --> 00:10:42,020
the<font color="#CCCCCC"> way the</font><font color="#E5E5E5"> the bytes are in the address</font>

219
00:10:39,320 --> 00:10:44,090
<font color="#E5E5E5">so and then we have the control flow</font>

220
00:10:42,020 --> 00:10:46,160
which are<font color="#E5E5E5"> more important because it kind</font>

221
00:10:44,090 --> 00:10:49,700
of helps<font color="#E5E5E5"> us navigate through the program</font>

222
00:10:46,160 --> 00:10:55,610
so<font color="#CCCCCC"> these is a jump</font><font color="#E5E5E5"> if not equal to zero</font>

223
00:10:49,700 --> 00:10:57,970
jump<font color="#CCCCCC"> if not equal</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> ax jump if jump if</font>

224
00:10:55,610 --> 00:11:00,330
not branch you know<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> different</font>

225
00:10:57,970 --> 00:11:04,050
assembly language

226
00:11:00,330 --> 00:11:06,300
jumped calls here<font color="#CCCCCC"> if you forget what</font>

227
00:11:04,050 --> 00:11:08,069
<font color="#E5E5E5">each of the mean I have like this nice</font>

228
00:11:06,300 --> 00:11:13,050
little search instruction so say I

229
00:11:08,070 --> 00:11:17,310
wanted<font color="#E5E5E5"> to look up jump I can see what</font>

230
00:11:13,050 --> 00:11:19,459
the<font color="#E5E5E5"> opt code is in assembly and with</font>

231
00:11:17,310 --> 00:11:22,800
what operands that<font color="#E5E5E5"> they're looking</font><font color="#CCCCCC"> for</font>

232
00:11:19,460 --> 00:11:24,450
<font color="#E5E5E5">what it means</font><font color="#CCCCCC"> so that it's</font><font color="#E5E5E5"> really nice</font>

233
00:11:22,800 --> 00:11:26,459
I'm always having to<font color="#E5E5E5"> look up odd</font>

234
00:11:24,450 --> 00:11:28,470
assembly<font color="#E5E5E5"> language like I'm not gonna sit</font>

235
00:11:26,460 --> 00:11:30,720
<font color="#CCCCCC">here and memorize</font><font color="#E5E5E5"> all of them I mean</font>

236
00:11:28,470 --> 00:11:35,220
some I remember them in hex but you know

237
00:11:30,720 --> 00:11:38,370
no one<font color="#CCCCCC"> has that type of memory</font><font color="#E5E5E5"> so you</font>

238
00:11:35,220 --> 00:11:42,150
always have a<font color="#E5E5E5"> nice reference so so let's</font>

239
00:11:38,370 --> 00:11:44,160
look at data access instruction move<font color="#E5E5E5"> so</font>

240
00:11:42,150 --> 00:11:47,150
when you see something<font color="#E5E5E5"> like this in x86</font>

241
00:11:44,160 --> 00:11:51,300
<font color="#E5E5E5">you're basically</font><font color="#CCCCCC"> moving ay-ay-ay-ay-ay</font>

242
00:11:47,150 --> 00:11:52,829
into the register ECX<font color="#E5E5E5"> now we're going to</font>

243
00:11:51,300 --> 00:11:58,620
talk<font color="#CCCCCC"> about registers here in a second</font>

244
00:11:52,830 --> 00:12:02,670
<font color="#CCCCCC">but it's normally where this is being</font>

245
00:11:58,620 --> 00:12:09,120
placed into<font color="#E5E5E5"> the right register here</font><font color="#CCCCCC"> so</font>

246
00:12:02,670 --> 00:12:10,979
it's backwards<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so the different</font>

247
00:12:09,120 --> 00:12:12,990
registers<font color="#E5E5E5"> when you're looking at it</font><font color="#CCCCCC"> and</font>

248
00:12:10,980 --> 00:12:15,390
debugger<font color="#E5E5E5"> you're gonna see these a lot</font>

249
00:12:12,990 --> 00:12:17,040
<font color="#CCCCCC">and you're going</font><font color="#E5E5E5"> to be looking</font><font color="#CCCCCC"> at these</font>

250
00:12:15,390 --> 00:12:19,980
lot each time you step through<font color="#E5E5E5"> the</font>

251
00:12:17,040 --> 00:12:22,949
<font color="#CCCCCC">program</font><font color="#E5E5E5"> where the return address is</font>

252
00:12:19,980 --> 00:12:25,860
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> what the counter is and ECX</font>

253
00:12:22,950 --> 00:12:27,110
<font color="#E5E5E5">where the stack</font><font color="#CCCCCC"> pointer is</font><font color="#E5E5E5"> and then the</font>

254
00:12:25,860 --> 00:12:31,740
EBP

255
00:12:27,110 --> 00:12:35,880
<font color="#CCCCCC">EDI and</font><font color="#E5E5E5"> E I P which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the current the</font>

256
00:12:31,740 --> 00:12:37,650
current code with<font color="#CCCCCC"> its running</font><font color="#E5E5E5"> and so</font>

257
00:12:35,880 --> 00:12:39,420
that's all<font color="#E5E5E5"> there I'm not gonna go over</font>

258
00:12:37,650 --> 00:12:42,720
<font color="#CCCCCC">each one because I'm sure you guys can</font>

259
00:12:39,420 --> 00:12:44,880
<font color="#CCCCCC">creat it but it'll cut it I'll explain</font>

260
00:12:42,720 --> 00:12:50,210
<font color="#E5E5E5">it as we're gonna do</font><font color="#CCCCCC"> bugs so you know</font>

261
00:12:44,880 --> 00:12:54,390
where you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> into the booking</font><font color="#CCCCCC"> section</font>

262
00:12:50,210 --> 00:12:55,800
<font color="#E5E5E5">and then the zero flag this this is</font>

263
00:12:54,390 --> 00:12:58,590
<font color="#CCCCCC">actually important when you're doing the</font>

264
00:12:55,800 --> 00:13:00,990
jump calls<font color="#E5E5E5"> because when you have jump if</font>

265
00:12:58,590 --> 00:13:03,030
not equal<font color="#CCCCCC"> to zero you can</font><font color="#E5E5E5"> change this</font>

266
00:13:00,990 --> 00:13:05,550
flag and change the condition<font color="#E5E5E5"> of the</font>

267
00:13:03,030 --> 00:13:07,290
jump<font color="#E5E5E5"> so say it's not going to take the</font>

268
00:13:05,550 --> 00:13:10,410
jump but you want<font color="#E5E5E5"> to force it</font><font color="#CCCCCC"> to do the</font>

269
00:13:07,290 --> 00:13:12,750
jump you can<font color="#E5E5E5"> turn that zero to one and</font>

270
00:13:10,410 --> 00:13:19,060
it<font color="#E5E5E5"> should make</font><font color="#CCCCCC"> the Jim</font>

271
00:13:12,750 --> 00:13:22,870
and I'll explain<font color="#CCCCCC"> that so here's kind of</font>

272
00:13:19,060 --> 00:13:25,750
<font color="#E5E5E5">a quick</font><font color="#CCCCCC"> example of a program</font><font color="#E5E5E5"> and how it</font>

273
00:13:22,870 --> 00:13:27,940
<font color="#CCCCCC">goes through each instruction and places</font>

274
00:13:25,750 --> 00:13:31,420
into the registers as well as what's

275
00:13:27,940 --> 00:13:34,360
happening<font color="#CCCCCC"> on the stack so remember that</font>

276
00:13:31,420 --> 00:13:36,880
<font color="#E5E5E5">this</font><font color="#CCCCCC"> right instructor</font><font color="#E5E5E5"> this right</font>

277
00:13:34,360 --> 00:13:38,470
register here is where the the contents

278
00:13:36,880 --> 00:13:45,540
are going to go<font color="#E5E5E5"> into and you</font><font color="#CCCCCC"> can see it</font>

279
00:13:38,470 --> 00:13:48,160
being filled up over here<font color="#E5E5E5"> so</font><font color="#CCCCCC"> let you</font>

280
00:13:45,540 --> 00:13:50,189
look<font color="#E5E5E5"> at that</font><font color="#CCCCCC"> a little bit</font><font color="#E5E5E5"> this is a</font>

281
00:13:48,160 --> 00:13:53,500
simple hello<font color="#E5E5E5"> world hello world program</font>

282
00:13:50,190 --> 00:13:56,560
typically before<font color="#E5E5E5"> a call it moves things</font>

283
00:13:53,500 --> 00:13:59,950
<font color="#CCCCCC">onto the stack or EAX</font><font color="#E5E5E5"> for it to execute</font>

284
00:13:56,560 --> 00:14:07,839
<font color="#E5E5E5">the print call and I'll explain that in</font>

285
00:13:59,950 --> 00:14:11,320
<font color="#CCCCCC">the</font><font color="#E5E5E5"> next</font><font color="#CCCCCC"> little gift</font><font color="#E5E5E5"> here so here is</font>

286
00:14:07,840 --> 00:14:13,210
<font color="#E5E5E5">open reg key</font><font color="#CCCCCC"> XA so if you notice there's</font>

287
00:14:11,320 --> 00:14:14,230
multiple different<font color="#E5E5E5"> arguments to the</font>

288
00:14:13,210 --> 00:14:17,860
function<font color="#CCCCCC"> itself</font>

289
00:14:14,230 --> 00:14:19,600
these are backwards<font color="#CCCCCC"> so this is argument</font>

290
00:14:17,860 --> 00:14:21,760
<font color="#CCCCCC">one</font><font color="#E5E5E5"> argument two arguments or you're</font>

291
00:14:19,600 --> 00:14:27,940
<font color="#E5E5E5">going for five so when it's getting</font>

292
00:14:21,760 --> 00:14:30,790
<font color="#E5E5E5">pushed you can see here how it's being</font>

293
00:14:27,940 --> 00:14:33,390
pushed so argument<font color="#E5E5E5"> one argument two</font>

294
00:14:30,790 --> 00:14:36,250
<font color="#E5E5E5">argument three argument for five and</font>

295
00:14:33,390 --> 00:14:40,360
this<font color="#E5E5E5"> is typically how it</font><font color="#CCCCCC"> works in</font>

296
00:14:36,250 --> 00:14:42,640
Windows how it works<font color="#CCCCCC"> at</font><font color="#E5E5E5"> x86 so it's</font>

297
00:14:40,360 --> 00:14:47,890
important<font color="#E5E5E5"> to know API calls because you</font>

298
00:14:42,640 --> 00:14:50,620
can look<font color="#E5E5E5"> up that</font><font color="#CCCCCC"> on Microsoft's database</font>

299
00:14:47,890 --> 00:14:52,390
and see<font color="#E5E5E5"> what the arguments are and then</font>

300
00:14:50,620 --> 00:14:55,570
as you're stepping through the<font color="#E5E5E5"> function</font>

301
00:14:52,390 --> 00:14:57,250
or<font color="#E5E5E5"> stepping through the call you can see</font>

302
00:14:55,570 --> 00:15:01,780
the arguments that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> being pushed to</font>

303
00:14:57,250 --> 00:15:03,370
<font color="#CCCCCC">the function</font><font color="#E5E5E5"> itself so I just wanted to</font>

304
00:15:01,780 --> 00:15:05,470
make<font color="#CCCCCC"> sure you know the concept of how</font>

305
00:15:03,370 --> 00:15:11,730
which order the arguments go in that's

306
00:15:05,470 --> 00:15:11,730
it because<font color="#E5E5E5"> it can be</font><font color="#CCCCCC"> very confusing</font>

307
00:15:12,180 --> 00:15:19,589
<font color="#CCCCCC">alright now</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> local variables</font>

308
00:15:15,930 --> 00:15:21,870
local variables<font color="#CCCCCC"> are going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> moving</font>

309
00:15:19,590 --> 00:15:26,220
backwards on the stack frame remember<font color="#E5E5E5"> it</font>

310
00:15:21,870 --> 00:15:30,510
goes from<font color="#CCCCCC"> lower from higher to lower</font>

311
00:15:26,220 --> 00:15:33,540
addresses<font color="#E5E5E5"> so as when you create this EBP</font>

312
00:15:30,510 --> 00:15:36,569
<font color="#E5E5E5">and with the size here it's allocating</font>

313
00:15:33,540 --> 00:15:40,949
this local variable space and so that

314
00:15:36,570 --> 00:15:43,530
where it<font color="#CCCCCC"> says here and this subtract</font>

315
00:15:40,950 --> 00:15:45,450
that so<font color="#E5E5E5"> it's subtracting the step frame</font>

316
00:15:43,530 --> 00:15:48,150
going<font color="#E5E5E5"> up and it's pushing all the local</font>

317
00:15:45,450 --> 00:15:52,470
variables<font color="#CCCCCC"> on that newly</font><font color="#E5E5E5"> allocated space</font>

318
00:15:48,150 --> 00:15:56,100
<font color="#E5E5E5">going to lower addresses so simple</font>

319
00:15:52,470 --> 00:16:00,470
concept subtracts to allocate<font color="#E5E5E5"> space on</font>

320
00:15:56,100 --> 00:16:00,470
the stack<font color="#E5E5E5"> pushes the variables on there</font>

321
00:16:03,830 --> 00:16:11,370
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> so now to malware</font><font color="#CCCCCC"> how many of</font>

322
00:16:08,820 --> 00:16:15,090
you heard what a way<font color="#E5E5E5"> to kill chain</font>

323
00:16:11,370 --> 00:16:18,690
attack flow whatever<font color="#CCCCCC"> yeah is a slowly</font>

324
00:16:15,090 --> 00:16:21,690
<font color="#E5E5E5">buzz word</font><font color="#CCCCCC"> but all it means</font><font color="#E5E5E5"> is the steps</font>

325
00:16:18,690 --> 00:16:24,990
<font color="#E5E5E5">and what bower takes you have</font><font color="#CCCCCC"> premiere</font>

326
00:16:21,690 --> 00:16:28,370
reconnaissance is like testing<font color="#E5E5E5"> the</font>

327
00:16:24,990 --> 00:16:31,290
network seeing which guy I want<font color="#E5E5E5"> to</font>

328
00:16:28,370 --> 00:16:33,300
exploit and then infiltration that's

329
00:16:31,290 --> 00:16:37,589
usually<font color="#CCCCCC"> there using an exploit to get in</font>

330
00:16:33,300 --> 00:16:40,140
through<font color="#E5E5E5"> a</font><font color="#CCCCCC"> document from an email and</font>

331
00:16:37,590 --> 00:16:42,630
then<font color="#E5E5E5"> internal recon</font><font color="#CCCCCC"> I've seen this</font><font color="#E5E5E5"> and a</font>

332
00:16:40,140 --> 00:16:44,730
breach investigation were so hot from

333
00:16:42,630 --> 00:16:47,189
<font color="#E5E5E5">box to box to figure out where they want</font>

334
00:16:44,730 --> 00:16:49,110
to<font color="#CCCCCC"> actually land</font><font color="#E5E5E5"> so they'll use more</font>

335
00:16:47,190 --> 00:16:52,080
lateral movement activities to get to

336
00:16:49,110 --> 00:16:54,360
where they want<font color="#CCCCCC"> to go</font><font color="#E5E5E5"> entrenchment this</font>

337
00:16:52,080 --> 00:16:56,130
is kind of like persistence<font color="#CCCCCC"> I'm gonna</font>

338
00:16:54,360 --> 00:16:57,810
write a registry key so<font color="#CCCCCC"> that when the</font>

339
00:16:56,130 --> 00:17:00,530
computer reboots<font color="#CCCCCC"> they'll start up again</font>

340
00:16:57,810 --> 00:17:02,819
it's making it making<font color="#E5E5E5"> sure that you know</font>

341
00:17:00,530 --> 00:17:05,540
<font color="#E5E5E5">anything happens it'll still be</font>

342
00:17:02,820 --> 00:17:09,450
<font color="#CCCCCC">available for them to access</font>

343
00:17:05,540 --> 00:17:11,280
<font color="#CCCCCC">exfiltration</font><font color="#E5E5E5"> basically taking me data</font>

344
00:17:09,450 --> 00:17:14,250
and sending it<font color="#CCCCCC"> back to whatever command</font>

345
00:17:11,280 --> 00:17:16,859
and control server they need and then

346
00:17:14,250 --> 00:17:19,140
purging<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> I see this in more</font>

347
00:17:16,859 --> 00:17:20,429
advanced malware<font color="#E5E5E5"> if they're gonna clean</font>

348
00:17:19,140 --> 00:17:22,800
<font color="#E5E5E5">up their activities</font>

349
00:17:20,430 --> 00:17:25,750
then they'll delete itself<font color="#E5E5E5"> or clean</font><font color="#CCCCCC"> up</font>

350
00:17:22,800 --> 00:17:28,180
any traces that it was there

351
00:17:25,750 --> 00:17:30,390
now for the different<font color="#E5E5E5"> malware classes</font>

352
00:17:28,180 --> 00:17:32,890
I'm sure you've heard<font color="#CCCCCC"> of virus and where</font>

353
00:17:30,390 --> 00:17:36,400
it's been around forever I don't<font color="#E5E5E5"> really</font>

354
00:17:32,890 --> 00:17:38,590
<font color="#CCCCCC">need to explain that but brats you're</font>

355
00:17:36,400 --> 00:17:42,310
familiar with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mirai botnet it's kind</font>

356
00:17:38,590 --> 00:17:44,470
<font color="#CCCCCC">of like a network</font><font color="#E5E5E5"> of different little</font>

357
00:17:42,310 --> 00:17:48,159
<font color="#E5E5E5">programs that are meant to take in</font>

358
00:17:44,470 --> 00:17:51,610
commands and do whatever the controller

359
00:17:48,160 --> 00:17:54,820
<font color="#E5E5E5">wants to do</font><font color="#CCCCCC"> trojan it's really a blanket</font>

360
00:17:51,610 --> 00:17:58,919
term to describe<font color="#E5E5E5"> malware that's posing</font>

361
00:17:54,820 --> 00:18:01,870
as legit software and trying to get in

362
00:17:58,920 --> 00:18:04,480
<font color="#CCCCCC">back door back door and</font><font color="#E5E5E5"> rat I kind of</font>

363
00:18:01,870 --> 00:18:07,209
put them in the same category is

364
00:18:04,480 --> 00:18:09,850
<font color="#E5E5E5">basically so the it's kind of like a bot</font>

365
00:18:07,210 --> 00:18:13,150
it just sits there<font color="#E5E5E5"> you know always</font>

366
00:18:09,850 --> 00:18:14,800
<font color="#E5E5E5">available</font><font color="#CCCCCC"> it's persistent it sits</font><font color="#E5E5E5"> there</font>

367
00:18:13,150 --> 00:18:17,320
waiting<font color="#CCCCCC"> for</font><font color="#E5E5E5"> a command or waiting for</font>

368
00:18:14,800 --> 00:18:21,190
<font color="#CCCCCC">someone to connect to it so</font><font color="#E5E5E5"> that's the</font>

369
00:18:17,320 --> 00:18:23,800
typical typical behavior you'll see<font color="#E5E5E5"> I'm</font>

370
00:18:21,190 --> 00:18:25,540
info<font color="#E5E5E5"> stealer if you break</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> down</font><font color="#CCCCCC"> to</font>

371
00:18:23,800 --> 00:18:26,879
<font color="#E5E5E5">just what an info stealer is it's</font><font color="#CCCCCC"> just</font>

372
00:18:25,540 --> 00:18:29,290
going<font color="#E5E5E5"> to go</font><font color="#CCCCCC"> after all your passwords</font>

373
00:18:26,880 --> 00:18:31,660
<font color="#CCCCCC">it's going to go after all the</font><font color="#E5E5E5"> browsers</font>

374
00:18:29,290 --> 00:18:33,670
<font color="#CCCCCC">and try to steal passwords they're</font>

375
00:18:31,660 --> 00:18:36,300
probably<font color="#E5E5E5"> hook on to some of</font><font color="#CCCCCC"> their</font>

376
00:18:33,670 --> 00:18:40,330
functions so<font color="#E5E5E5"> it can scrape the memory</font>

377
00:18:36,300 --> 00:18:43,570
and and send<font color="#E5E5E5"> it out somewhere so basic</font>

378
00:18:40,330 --> 00:18:49,240
thing<font color="#CCCCCC"> hack tool</font><font color="#E5E5E5"> have you heard of me me</font>

379
00:18:43,570 --> 00:18:51,070
<font color="#E5E5E5">gaps it's a hack tool</font><font color="#CCCCCC"> hoax hoax is kind</font>

380
00:18:49,240 --> 00:18:52,600
<font color="#E5E5E5">of like that</font><font color="#CCCCCC"> annoying you know what's</font>

381
00:18:51,070 --> 00:18:55,120
kiddies create these annoying little

382
00:18:52,600 --> 00:18:58,209
<font color="#E5E5E5">things to</font><font color="#CCCCCC"> open up the CD drive tray or</font>

383
00:18:55,120 --> 00:18:59,939
make it<font color="#E5E5E5"> look like something else even</font>

384
00:18:58,210 --> 00:19:03,850
though it doesn't<font color="#E5E5E5"> really do anything</font>

385
00:18:59,940 --> 00:19:05,440
<font color="#E5E5E5">um dropper downloader this is really</font>

386
00:19:03,850 --> 00:19:07,270
sometimes<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> really hard to</font><font color="#E5E5E5"> detect</font>

387
00:19:05,440 --> 00:19:09,070
these things as all it does is download

388
00:19:07,270 --> 00:19:11,950
something from<font color="#CCCCCC"> the internet and drop it</font>

389
00:19:09,070 --> 00:19:13,060
<font color="#E5E5E5">onto</font><font color="#CCCCCC"> the filesystem plain as day you</font>

390
00:19:11,950 --> 00:19:16,300
know there's a lot<font color="#E5E5E5"> of other things that</font>

391
00:19:13,060 --> 00:19:18,550
<font color="#E5E5E5">do that any type of peer-to-peer program</font>

392
00:19:16,300 --> 00:19:21,659
download something drops it<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> file</font>

393
00:19:18,550 --> 00:19:25,360
<font color="#E5E5E5">system nothing malicious other than that</font>

394
00:19:21,660 --> 00:19:29,230
<font color="#E5E5E5">I'm adware adware it really should be</font>

395
00:19:25,360 --> 00:19:31,899
<font color="#E5E5E5">called</font><font color="#CCCCCC"> malware but</font><font color="#E5E5E5"> how it does is help</font><font color="#CCCCCC"> a</font>

396
00:19:29,230 --> 00:19:35,830
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> gain revenue for the company</font>

397
00:19:31,900 --> 00:19:38,840
that's using that<font color="#CCCCCC"> where pup and PUA this</font>

398
00:19:35,830 --> 00:19:40,879
like stuff like browser little bar

399
00:19:38,840 --> 00:19:42,860
stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you really don't want</font><font color="#CCCCCC"> to be</font>

400
00:19:40,880 --> 00:19:44,390
installed without your permission<font color="#CCCCCC"> even</font>

401
00:19:42,860 --> 00:19:46,610
<font color="#CCCCCC">though it doesn't anyways it's not</font>

402
00:19:44,390 --> 00:19:49,760
malicious<font color="#CCCCCC"> it's just really</font><font color="#E5E5E5"> annoying and</font>

403
00:19:46,610 --> 00:19:56,300
<font color="#E5E5E5">shouldn't be installed without your</font>

404
00:19:49,760 --> 00:19:59,300
knowledge<font color="#E5E5E5"> all right so I don't</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at</font>

405
00:19:56,300 --> 00:20:01,340
<font color="#E5E5E5">Mauer and</font><font color="#CCCCCC"> it's you know major categories</font>

406
00:19:59,300 --> 00:20:04,070
I look at the specific behaviors that

407
00:20:01,340 --> 00:20:08,389
<font color="#E5E5E5">they do so what does this mean</font>

408
00:20:04,070 --> 00:20:10,760
<font color="#E5E5E5">comp compression so say it's a zip file</font>

409
00:20:08,390 --> 00:20:13,790
<font color="#CCCCCC">you know maybe it's extracting itself</font>

410
00:20:10,760 --> 00:20:15,830
out of itself and is compressed or it's

411
00:20:13,790 --> 00:20:18,230
packed

412
00:20:15,830 --> 00:20:21,740
now occupation

413
00:20:18,230 --> 00:20:24,680
this means<font color="#E5E5E5"> it's trying to make it harder</font>

414
00:20:21,740 --> 00:20:27,470
for<font color="#E5E5E5"> Navy to detect it</font><font color="#CCCCCC"> so it's jumbling</font>

415
00:20:24,680 --> 00:20:28,780
up<font color="#E5E5E5"> the code so you can't really make a</font>

416
00:20:27,470 --> 00:20:31,400
signature<font color="#CCCCCC"> on it</font>

417
00:20:28,780 --> 00:20:33,139
<font color="#E5E5E5">persistence as I explained before maybe</font>

418
00:20:31,400 --> 00:20:35,840
is writing a registry key so<font color="#CCCCCC"> that the</font>

419
00:20:33,140 --> 00:20:38,060
next<font color="#E5E5E5"> time it reboots so a lot of malware</font>

420
00:20:35,840 --> 00:20:41,360
use kind of like interchange all of

421
00:20:38,060 --> 00:20:44,379
these different techniques<font color="#E5E5E5"> and help to</font>

422
00:20:41,360 --> 00:20:47,899
help it do its complete<font color="#E5E5E5"> attack flow so I</font>

423
00:20:44,380 --> 00:20:50,470
rather pay attention to their techniques

424
00:20:47,900 --> 00:20:54,560
<font color="#CCCCCC">rather than what</font><font color="#E5E5E5"> their category is</font>

425
00:20:50,470 --> 00:20:56,480
because you know how can<font color="#E5E5E5"> you put</font>

426
00:20:54,560 --> 00:20:58,610
<font color="#E5E5E5">something into a family if it does all</font>

427
00:20:56,480 --> 00:21:01,280
of<font color="#E5E5E5"> these different techniques</font><font color="#CCCCCC"> it's kind</font>

428
00:20:58,610 --> 00:21:07,100
<font color="#E5E5E5">of ridiculous</font><font color="#CCCCCC"> when all you want</font><font color="#E5E5E5"> to</font>

429
00:21:01,280 --> 00:21:08,389
detect is on that specific<font color="#CCCCCC"> IO C so I'm</font>

430
00:21:07,100 --> 00:21:10,330
sure you're familiar<font color="#CCCCCC"> with privilege</font>

431
00:21:08,390 --> 00:21:14,480
escalation that's normally<font color="#CCCCCC"> used for</font>

432
00:21:10,330 --> 00:21:18,919
exploits<font color="#E5E5E5"> or you know simple ask the user</font>

433
00:21:14,480 --> 00:21:22,670
hey can I have admin privileges<font color="#E5E5E5"> defense</font>

434
00:21:18,920 --> 00:21:25,700
evasion<font color="#E5E5E5"> it's kind of like occupation but</font>

435
00:21:22,670 --> 00:21:27,320
<font color="#E5E5E5">it's it's recognizing when something's</font>

436
00:21:25,700 --> 00:21:29,540
in the<font color="#E5E5E5"> environment so say you're running</font>

437
00:21:27,320 --> 00:21:31,970
<font color="#E5E5E5">a</font><font color="#CCCCCC"> navy it's going to check all the</font>

438
00:21:29,540 --> 00:21:34,399
registry keys to see if it sees any<font color="#CCCCCC"> AVS</font>

439
00:21:31,970 --> 00:21:37,790
it identifies<font color="#E5E5E5"> if it does</font><font color="#CCCCCC"> it'll probably</font>

440
00:21:34,400 --> 00:21:39,380
not run so evade your defensive agent

441
00:21:37,790 --> 00:21:41,840
which<font color="#CCCCCC"> is really cool because you know</font>

442
00:21:39,380 --> 00:21:43,250
you have<font color="#CCCCCC"> a Venus does want</font><font color="#E5E5E5"> to run so</font>

443
00:21:41,840 --> 00:21:45,530
what

444
00:21:43,250 --> 00:21:47,570
but sometimes<font color="#CCCCCC"> it'll detect if it's in a</font>

445
00:21:45,530 --> 00:21:49,550
<font color="#E5E5E5">VM like you say you're</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> automated</font>

446
00:21:47,570 --> 00:21:51,950
<font color="#E5E5E5">VM analysis</font>

447
00:21:49,550 --> 00:21:54,649
and it does a sleep call and it sleeps

448
00:21:51,950 --> 00:21:57,440
for like 20 minutes<font color="#CCCCCC"> even though the VM</font>

449
00:21:54,650 --> 00:21:59,300
only runs for<font color="#E5E5E5"> 90 seconds</font><font color="#CCCCCC"> then it's not</font>

450
00:21:57,440 --> 00:22:01,429
<font color="#E5E5E5">going to get detected because it'll just</font>

451
00:21:59,300 --> 00:22:04,428
<font color="#CCCCCC">there'd sleep that's when you</font>

452
00:22:01,429 --> 00:22:06,770
short-circuit<font color="#CCCCCC"> that in your p.m. sorry I</font>

453
00:22:04,429 --> 00:22:12,350
used<font color="#E5E5E5"> to work at fire I so I did a lot of</font>

454
00:22:06,770 --> 00:22:16,580
the<font color="#CCCCCC"> VM detection stuff now credential</font>

455
00:22:12,350 --> 00:22:18,530
theft<font color="#CCCCCC"> uh</font><font color="#E5E5E5"> me me cats again</font><font color="#CCCCCC"> I love</font><font color="#E5E5E5"> them</font>

456
00:22:16,580 --> 00:22:24,350
<font color="#CCCCCC">Dell fee for making me me cats because</font>

457
00:22:18,530 --> 00:22:26,840
it's making my life harder<font color="#CCCCCC"> so the cool</font>

458
00:22:24,350 --> 00:22:29,300
<font color="#CCCCCC">thing about credential theft is that you</font>

459
00:22:26,840 --> 00:22:32,689
have to actually<font color="#CCCCCC"> have</font><font color="#E5E5E5"> elevated privilege</font>

460
00:22:29,300 --> 00:22:34,370
to do the token stealing<font color="#CCCCCC"> so from there</font>

461
00:22:32,690 --> 00:22:38,000
once you<font color="#E5E5E5"> have the correct token to steal</font>

462
00:22:34,370 --> 00:22:39,649
the credential you<font color="#CCCCCC"> can you know</font><font color="#E5E5E5"> access</font>

463
00:22:38,000 --> 00:22:41,270
another program so you<font color="#E5E5E5"> can start</font>

464
00:22:39,650 --> 00:22:43,910
scraping the memory of<font color="#CCCCCC"> that program to</font>

465
00:22:41,270 --> 00:22:47,629
steal the credentials<font color="#E5E5E5"> so that's like I</font>

466
00:22:43,910 --> 00:22:49,490
explained<font color="#CCCCCC"> before if info stealer</font><font color="#E5E5E5"> you can</font>

467
00:22:47,630 --> 00:22:54,230
steal credentials<font color="#E5E5E5"> by scraping the memory</font>

468
00:22:49,490 --> 00:22:57,080
<font color="#CCCCCC">of a target program all right</font>

469
00:22:54,230 --> 00:22:59,000
reconnaissance<font color="#CCCCCC"> as I</font><font color="#E5E5E5"> climbed</font><font color="#CCCCCC"> before</font>

470
00:22:57,080 --> 00:22:59,960
there's gonna be a lot<font color="#CCCCCC"> of tools</font><font color="#E5E5E5"> like</font>

471
00:22:59,000 --> 00:23:02,000
hack tools that

472
00:22:59,960 --> 00:23:04,190
<font color="#CCCCCC">Maur is probably going</font><font color="#E5E5E5"> to drop to</font><font color="#CCCCCC"> the</font>

473
00:23:02,000 --> 00:23:07,820
file system<font color="#CCCCCC"> and check</font><font color="#E5E5E5"> and try to you</font>

474
00:23:04,190 --> 00:23:09,890
<font color="#CCCCCC">know move from system to system</font><font color="#E5E5E5"> and then</font>

475
00:23:07,820 --> 00:23:11,780
copy it<font color="#E5E5E5"> all stuff over and move to</font>

476
00:23:09,890 --> 00:23:14,150
<font color="#E5E5E5">another system so you just be one of the</font>

477
00:23:11,780 --> 00:23:17,000
watch out for<font color="#E5E5E5"> hack tools that do</font>

478
00:23:14,150 --> 00:23:19,550
reconnaissance<font color="#E5E5E5"> work same with</font><font color="#CCCCCC"> Matt</font>

479
00:23:17,000 --> 00:23:22,490
<font color="#E5E5E5">lateral movement same thing say you're</font>

480
00:23:19,550 --> 00:23:24,710
jumping onto<font color="#E5E5E5"> this and</font><font color="#CCCCCC"> be protocol and</font>

481
00:23:22,490 --> 00:23:26,210
moving from different<font color="#E5E5E5"> places it's</font>

482
00:23:24,710 --> 00:23:29,929
probably<font color="#E5E5E5"> going to be a tool that</font><font color="#CCCCCC"> they're</font>

483
00:23:26,210 --> 00:23:33,790
using<font color="#E5E5E5"> or even a</font><font color="#CCCCCC"> powershell script you</font>

484
00:23:29,929 --> 00:23:35,990
know<font color="#CCCCCC"> all right</font>

485
00:23:33,790 --> 00:23:39,550
<font color="#E5E5E5">execution so there's different</font><font color="#CCCCCC"> types of</font>

486
00:23:35,990 --> 00:23:42,950
execution<font color="#E5E5E5"> you don't have to run cmd.exe</font>

487
00:23:39,550 --> 00:23:44,540
<font color="#CCCCCC">you can drop like run</font><font color="#E5E5E5"> PE to the file</font>

488
00:23:42,950 --> 00:23:47,450
<font color="#E5E5E5">system</font><font color="#CCCCCC"> i've been seeing this a</font><font color="#E5E5E5"> lot with</font>

489
00:23:44,540 --> 00:23:49,670
dotnet<font color="#CCCCCC"> an hour they'll have like</font><font color="#E5E5E5"> a run</font>

490
00:23:47,450 --> 00:23:50,929
PE file<font color="#E5E5E5"> and the resource and then</font>

491
00:23:49,670 --> 00:23:52,730
they'll drop the files of the<font color="#E5E5E5"> file</font>

492
00:23:50,929 --> 00:23:55,520
<font color="#E5E5E5">system and the run PE will load it</font>

493
00:23:52,730 --> 00:23:58,580
dynamically into memory and run the PE

494
00:23:55,520 --> 00:24:00,440
file that way so they'll try<font color="#CCCCCC"> different</font>

495
00:23:58,580 --> 00:24:01,070
<font color="#E5E5E5">ways to figure out how to execute it</font>

496
00:24:00,440 --> 00:24:03,470
<font color="#CCCCCC">well</font>

497
00:24:01,070 --> 00:24:08,299
it's doing code injection process

498
00:24:03,470 --> 00:24:11,120
<font color="#CCCCCC">hollowing or you know just run me please</font>

499
00:24:08,299 --> 00:24:13,039
doesn't matter<font color="#E5E5E5"> it's just different</font>

500
00:24:11,120 --> 00:24:14,928
<font color="#E5E5E5">technique changes over time</font><font color="#CCCCCC"> depending on</font>

501
00:24:13,039 --> 00:24:18,139
how the defender is writing their

502
00:24:14,929 --> 00:24:20,000
signatures at that time<font color="#E5E5E5"> or if</font><font color="#CCCCCC"> there's</font>

503
00:24:18,139 --> 00:24:24,019
<font color="#E5E5E5">really shitty</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> though they won't do</font>

504
00:24:20,000 --> 00:24:26,330
that<font color="#CCCCCC"> you can tell like</font><font color="#E5E5E5"> when malware</font>

505
00:24:24,019 --> 00:24:29,950
authors take the time to the<font color="#E5E5E5"> Indian</font>

506
00:24:26,330 --> 00:24:32,840
detection like you there will be<font color="#E5E5E5"> very</font>

507
00:24:29,950 --> 00:24:34,700
detailed and how they do their<font color="#E5E5E5"> stuff but</font>

508
00:24:32,840 --> 00:24:38,539
<font color="#E5E5E5">if they're like really lame then they'll</font>

509
00:24:34,700 --> 00:24:40,070
probably<font color="#E5E5E5"> use like a script or you know a</font>

510
00:24:38,539 --> 00:24:42,590
<font color="#E5E5E5">batch script or</font><font color="#CCCCCC"> something and it's like</font>

511
00:24:40,070 --> 00:24:46,370
<font color="#E5E5E5">just really</font><font color="#CCCCCC"> lately if like why not</font><font color="#E5E5E5"> put</font>

512
00:24:42,590 --> 00:24:49,809
everything<font color="#E5E5E5"> into one single binary</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> I'm</font>

513
00:24:46,370 --> 00:24:49,809
<font color="#CCCCCC">just</font><font color="#E5E5E5"> being</font><font color="#CCCCCC"> critical</font>

514
00:24:50,090 --> 00:24:54,470
exfiltration and command and<font color="#CCCCCC"> control is</font>

515
00:24:52,279 --> 00:24:57,289
to kind of go hand<font color="#E5E5E5"> in hand</font>

516
00:24:54,470 --> 00:24:58,909
backdoors info stealing they're all

517
00:24:57,289 --> 00:25:01,429
going<font color="#E5E5E5"> to have a way to exfiltrate data</font>

518
00:24:58,909 --> 00:25:04,940
so they're gonna open<font color="#E5E5E5"> up either a port</font>

519
00:25:01,429 --> 00:25:09,340
<font color="#E5E5E5">or do a request or</font><font color="#CCCCCC"> create a</font><font color="#E5E5E5"> server</font><font color="#CCCCCC"> of</font>

520
00:25:04,940 --> 00:25:15,139
itself and you'll<font color="#CCCCCC"> notice that in the</font>

521
00:25:09,340 --> 00:25:18,379
<font color="#CCCCCC">program's flow alright</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> after</font><font color="#E5E5E5"> tools</font><font color="#CCCCCC"> I</font>

522
00:25:15,139 --> 00:25:20,178
was always told you don't need a lot of

523
00:25:18,379 --> 00:25:23,269
<font color="#E5E5E5">tools</font><font color="#CCCCCC"> all you need</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> like a</font>

524
00:25:20,179 --> 00:25:25,789
disassembler<font color="#E5E5E5"> and of the bugger but tools</font>

525
00:25:23,269 --> 00:25:29,240
make your life much easier<font color="#E5E5E5"> because it</font>

526
00:25:25,789 --> 00:25:30,559
makes<font color="#E5E5E5"> things much faster</font><font color="#CCCCCC"> because they we</font>

527
00:25:29,240 --> 00:25:33,710
used to have this thing<font color="#CCCCCC"> when I worked at</font>

528
00:25:30,559 --> 00:25:35,240
<font color="#E5E5E5">the DoD called Raptor triage means you</font>

529
00:25:33,710 --> 00:25:38,240
had<font color="#E5E5E5"> to figure out what the</font><font color="#CCCCCC"> power does</font>

530
00:25:35,240 --> 00:25:40,879
it's under six<font color="#E5E5E5"> hours that's not a lot</font><font color="#CCCCCC"> of</font>

531
00:25:38,240 --> 00:25:42,139
time<font color="#CCCCCC"> but normally you</font><font color="#E5E5E5"> know you could</font>

532
00:25:40,879 --> 00:25:44,389
<font color="#E5E5E5">take a whole</font><font color="#CCCCCC"> week to</font><font color="#E5E5E5"> look at it</font>

533
00:25:42,139 --> 00:25:45,979
depending<font color="#E5E5E5"> on how much or if you're an</font>

534
00:25:44,389 --> 00:25:48,289
incident response how much the customer

535
00:25:45,980 --> 00:25:50,360
actually<font color="#E5E5E5"> was to pay for you to do them</font>

536
00:25:48,289 --> 00:25:53,570
our analysis typically it's like one to

537
00:25:50,360 --> 00:25:55,370
<font color="#CCCCCC">two days or maybe</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> week but it all</font>

538
00:25:53,570 --> 00:25:58,370
<font color="#E5E5E5">depends but you need to have tools</font><font color="#CCCCCC"> to</font>

539
00:25:55,370 --> 00:25:59,870
<font color="#CCCCCC">help</font><font color="#E5E5E5"> you do things automated or unless</font>

540
00:25:58,370 --> 00:26:03,739
you're<font color="#CCCCCC"> a</font><font color="#E5E5E5"> now researcher and then you can</font>

541
00:25:59,870 --> 00:26:07,219
sit there all week<font color="#E5E5E5"> doing it which</font><font color="#CCCCCC"> is</font>

542
00:26:03,740 --> 00:26:09,860
<font color="#E5E5E5">nice</font><font color="#CCCCCC"> so we're gonna be</font><font color="#E5E5E5"> looking at Ida</font>

543
00:26:07,220 --> 00:26:11,510
Ida free<font color="#CCCCCC"> I recommend if your company</font>

544
00:26:09,860 --> 00:26:13,879
wants<font color="#E5E5E5"> to pay for</font><font color="#CCCCCC"> it there's</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> two</font>

545
00:26:11,510 --> 00:26:15,260
<font color="#E5E5E5">grand to get Ida Pro or</font>

546
00:26:13,880 --> 00:26:20,740
right you know maybe you<font color="#E5E5E5"> want to try</font>

547
00:26:15,260 --> 00:26:23,060
binary ninja or<font color="#E5E5E5"> rate was it read re</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> I</font>

548
00:26:20,740 --> 00:26:27,110
still<font color="#CCCCCC"> need to learn her diary - but it's</font>

549
00:26:23,060 --> 00:26:29,870
free<font color="#CCCCCC"> just a little bit unstable but it</font>

550
00:26:27,110 --> 00:26:31,699
might be<font color="#CCCCCC"> something for you I put I don't</font>

551
00:26:29,870 --> 00:26:33,770
<font color="#E5E5E5">remember if I put a retiree - on there</font>

552
00:26:31,700 --> 00:26:35,510
but I tried<font color="#E5E5E5"> to give you</font><font color="#CCCCCC"> as much as</font>

553
00:26:33,770 --> 00:26:37,100
<font color="#E5E5E5">possible</font><font color="#CCCCCC"> if you're</font><font color="#E5E5E5"> going to do any</font>

554
00:26:35,510 --> 00:26:39,770
automation work for disassembly I

555
00:26:37,100 --> 00:26:41,389
recommend capstone<font color="#CCCCCC"> I think capstone is</font>

556
00:26:39,770 --> 00:26:44,360
built into the unicorn engine which is

557
00:26:41,390 --> 00:26:47,950
<font color="#CCCCCC">an</font><font color="#E5E5E5"> emulator that I put on your VMs which</font>

558
00:26:44,360 --> 00:26:51,020
is the new<font color="#E5E5E5"> VM</font><font color="#CCCCCC"> so this emulates the</font>

559
00:26:47,950 --> 00:26:55,100
disassembly so you can run<font color="#E5E5E5"> it and</font>

560
00:26:51,020 --> 00:26:57,350
everything<font color="#CCCCCC"> alright so I used to push</font>

561
00:26:55,100 --> 00:26:59,300
immunity debugger and<font color="#CCCCCC"> all he did</font><font color="#E5E5E5"> bug</font>

562
00:26:57,350 --> 00:27:01,760
whistle is the same thing but now that

563
00:26:59,300 --> 00:27:04,730
there's<font color="#CCCCCC"> x64</font><font color="#E5E5E5"> debug it actually do bugs in</font>

564
00:27:01,760 --> 00:27:07,240
a<font color="#CCCCCC"> 64-bit which</font><font color="#E5E5E5"> is really cool</font><font color="#CCCCCC"> I mean if</font>

565
00:27:04,730 --> 00:27:10,910
you're<font color="#CCCCCC"> not like a total wind</font><font color="#E5E5E5"> a bug fan</font>

566
00:27:07,240 --> 00:27:12,650
x86 debug is pretty cool<font color="#E5E5E5"> they don't have</font>

567
00:27:10,910 --> 00:27:14,330
too much scripting yet unless you want

568
00:27:12,650 --> 00:27:17,120
to sit down<font color="#CCCCCC"> and feels like</font><font color="#E5E5E5"> a learning</font>

569
00:27:14,330 --> 00:27:18,889
curve<font color="#E5E5E5"> or figuring out their API is but</font>

570
00:27:17,120 --> 00:27:21,500
it might be useful

571
00:27:18,890 --> 00:27:23,270
the decompiler so if you get<font color="#E5E5E5"> I</font><font color="#CCCCCC"> to pro</font>

572
00:27:21,500 --> 00:27:24,560
with<font color="#CCCCCC"> the D compiler which is an extra 2</font>

573
00:27:23,270 --> 00:27:27,770
<font color="#E5E5E5">grand</font>

574
00:27:24,560 --> 00:27:29,629
I recommend using the<font color="#E5E5E5"> D compiler and x86</font>

575
00:27:27,770 --> 00:27:32,450
because it's free it's<font color="#CCCCCC"> called</font><font color="#E5E5E5"> snowman</font>

576
00:27:29,630 --> 00:27:35,270
it's not that great but it'll help you

577
00:27:32,450 --> 00:27:38,060
figure out the C to assembly translation

578
00:27:35,270 --> 00:27:43,879
which<font color="#CCCCCC"> is nice</font><font color="#E5E5E5"> if you want to do if you</font>

579
00:27:38,060 --> 00:27:48,230
want to cop out<font color="#CCCCCC"> to the decompiler dotnet</font>

580
00:27:43,880 --> 00:27:54,380
are for dotnet<font color="#CCCCCC"> I use dot peak</font><font color="#E5E5E5"> DNS</font><font color="#CCCCCC"> spy</font>

581
00:27:48,230 --> 00:27:56,120
and I'll spy<font color="#E5E5E5"> it works</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> I depend on what</font>

582
00:27:54,380 --> 00:27:58,250
level you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to go in too deep with</font>

583
00:27:56,120 --> 00:28:00,709
<font color="#E5E5E5">net but since there's a lot of new</font>

584
00:27:58,250 --> 00:28:02,180
dotnet malware<font color="#CCCCCC"> out there</font><font color="#E5E5E5"> it might be</font>

585
00:28:00,710 --> 00:28:05,770
useful to<font color="#E5E5E5"> look at all the different</font>

586
00:28:02,180 --> 00:28:07,700
<font color="#CCCCCC">options for dotnet D compilers</font><font color="#E5E5E5"> for</font>

587
00:28:05,770 --> 00:28:09,500
<font color="#E5E5E5">information gathering we're gonna go</font>

588
00:28:07,700 --> 00:28:10,090
<font color="#E5E5E5">over see if Explorer which</font><font color="#CCCCCC"> is already</font><font color="#E5E5E5"> in</font>

589
00:28:09,500 --> 00:28:15,910
your<font color="#E5E5E5"> VM</font>

590
00:28:10,090 --> 00:28:18,709
<font color="#CCCCCC">this was</font><font color="#E5E5E5"> created by a former Ida</font>

591
00:28:15,910 --> 00:28:20,240
<font color="#E5E5E5">developer I think and it was just this</font>

592
00:28:18,710 --> 00:28:22,940
free tool<font color="#CCCCCC"> that he I don't think he</font>

593
00:28:20,240 --> 00:28:25,340
updates anymore there's PE<font color="#E5E5E5"> Explorer</font>

594
00:28:22,940 --> 00:28:26,050
which<font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> using to unpack the by an</font>

595
00:28:25,340 --> 00:28:31,120
area that were

596
00:28:26,050 --> 00:28:34,180
using we're using<font color="#CCCCCC"> bin text if you want</font>

597
00:28:31,120 --> 00:28:36,969
<font color="#CCCCCC">to</font><font color="#E5E5E5"> extract all the strings</font><font color="#CCCCCC"> sysinternals</font>

598
00:28:34,180 --> 00:28:38,980
<font color="#CCCCCC">sweet</font><font color="#E5E5E5"> prof</font><font color="#CCCCCC"> long process</font><font color="#E5E5E5"> explore how many</font>

599
00:28:36,970 --> 00:28:42,690
of you know<font color="#E5E5E5"> to sysinternals I use it all</font>

600
00:28:38,980 --> 00:28:45,100
the time<font color="#E5E5E5"> yeah it's pretty pretty basic</font>

601
00:28:42,690 --> 00:28:46,930
<font color="#CCCCCC">there's AI netsim which is actually</font>

602
00:28:45,100 --> 00:28:50,010
going to<font color="#E5E5E5"> help us</font><font color="#CCCCCC"> sniff the network for</font>

603
00:28:46,930 --> 00:28:55,200
the<font color="#E5E5E5"> internet traffic from the victim</font>

604
00:28:50,010 --> 00:28:58,629
<font color="#CCCCCC">Yarra</font><font color="#E5E5E5"> if you are if you have a</font><font color="#CCCCCC"> Yarra</font>

605
00:28:55,200 --> 00:29:01,090
engine and you want to apply<font color="#E5E5E5"> it on to</font>

606
00:28:58,630 --> 00:29:04,540
<font color="#CCCCCC">Maui you can it's a good way to</font><font color="#E5E5E5"> identify</font>

607
00:29:01,090 --> 00:29:08,379
things<font color="#E5E5E5"> before you can start working on</font>

608
00:29:04,540 --> 00:29:10,300
<font color="#CCCCCC">the malware</font><font color="#E5E5E5"> itself</font><font color="#CCCCCC"> Wireshark is for the</font>

609
00:29:08,380 --> 00:29:13,930
sniffing I'm sure you've heard of

610
00:29:10,300 --> 00:29:16,540
<font color="#E5E5E5">Bioshock it's pretty obvious I also have</font>

611
00:29:13,930 --> 00:29:18,910
<font color="#CCCCCC">API</font><font color="#E5E5E5"> monitor out there so a API monitor</font>

612
00:29:16,540 --> 00:29:21,100
will hook all the<font color="#E5E5E5"> API is</font><font color="#CCCCCC"> that the Maurer</font>

613
00:29:18,910 --> 00:29:21,880
calls<font color="#CCCCCC"> is kind</font><font color="#E5E5E5"> of overwhelming if you</font>

614
00:29:21,100 --> 00:29:25,300
don't know what the hell<font color="#E5E5E5"> you're looking</font>

615
00:29:21,880 --> 00:29:26,920
<font color="#CCCCCC">at because there's a huge F log and if</font>

616
00:29:25,300 --> 00:29:28,600
<font color="#E5E5E5">you're if you</font><font color="#CCCCCC"> know where everything is</font>

617
00:29:26,920 --> 00:29:31,210
<font color="#CCCCCC">in</font><font color="#E5E5E5"> the dissembler then you can follow</font>

618
00:29:28,600 --> 00:29:32,530
along the API is but it might not<font color="#E5E5E5"> give</font>

619
00:29:31,210 --> 00:29:37,110
<font color="#CCCCCC">you enough</font><font color="#E5E5E5"> information that you need</font>

620
00:29:32,530 --> 00:29:40,629
it's just<font color="#CCCCCC"> a good precursor triage tool</font>

621
00:29:37,110 --> 00:29:43,600
<font color="#CCCCCC">alright uh how many</font><font color="#E5E5E5"> of you I'm sure</font><font color="#CCCCCC"> have</font>

622
00:29:40,630 --> 00:29:46,540
<font color="#E5E5E5">you heard of virustotal</font><font color="#CCCCCC"> hey do you pay</font>

623
00:29:43,600 --> 00:29:49,449
<font color="#CCCCCC">for</font><font color="#E5E5E5"> it it's not you know there's always</font>

624
00:29:46,540 --> 00:29:51,670
<font color="#CCCCCC">Maurer comm hybrid analysis</font><font color="#E5E5E5"> all of these</font>

625
00:29:49,450 --> 00:29:53,260
places are<font color="#E5E5E5"> just helpful websites for you</font>

626
00:29:51,670 --> 00:29:55,420
to<font color="#CCCCCC"> gain more information</font><font color="#E5E5E5"> without</font>

627
00:29:53,260 --> 00:29:57,190
actually running it ahead<font color="#E5E5E5"> of times and</font>

628
00:29:55,420 --> 00:30:00,580
see if you don't<font color="#E5E5E5"> want to set up</font><font color="#CCCCCC"> your VMs</font>

629
00:29:57,190 --> 00:30:02,830
<font color="#CCCCCC">that quickly if they're not on standby</font>

630
00:30:00,580 --> 00:30:04,780
all<font color="#E5E5E5"> the time</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font>

631
00:30:02,830 --> 00:30:06,250
and then there's hex editor<font color="#E5E5E5"> in Python so</font>

632
00:30:04,780 --> 00:30:08,260
<font color="#CCCCCC">Python makes your life much easier</font>

633
00:30:06,250 --> 00:30:11,080
because you can<font color="#E5E5E5"> just</font><font color="#CCCCCC"> write a script and</font>

634
00:30:08,260 --> 00:30:13,990
figure out and automate<font color="#E5E5E5"> things if you</font>

635
00:30:11,080 --> 00:30:16,899
wanted to so<font color="#E5E5E5"> it Ida free</font>

636
00:30:13,990 --> 00:30:18,310
there's main<font color="#E5E5E5"> windows there's a graph</font>

637
00:30:16,900 --> 00:30:20,620
view and text view

638
00:30:18,310 --> 00:30:23,860
well the functions are all the strings

639
00:30:20,620 --> 00:30:30,250
are it's<font color="#E5E5E5"> really basic</font><font color="#CCCCCC"> that's all you</font>

640
00:30:23,860 --> 00:30:32,620
need to know for this<font color="#E5E5E5"> workshop and in</font>

641
00:30:30,250 --> 00:30:34,550
the commands<font color="#E5E5E5"> you're going to be using</font><font color="#CCCCCC"> x</font>

642
00:30:32,620 --> 00:30:38,270
and<font color="#CCCCCC"> g</font>

643
00:30:34,550 --> 00:30:43,850
then<font color="#E5E5E5"> making comments</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> it really</font>

644
00:30:38,270 --> 00:30:45,680
<font color="#E5E5E5">simple for</font><font color="#CCCCCC"> the x64 debug</font><font color="#E5E5E5"> when I say that</font>

645
00:30:43,850 --> 00:30:48,949
where the code<font color="#CCCCCC"> is being executed on the</font>

646
00:30:45,680 --> 00:30:51,530
<font color="#E5E5E5">CPU or the register flag and flags are</font>

647
00:30:48,950 --> 00:30:53,390
<font color="#E5E5E5">out I'm gonna point to this area where</font>

648
00:30:51,530 --> 00:30:56,060
<font color="#E5E5E5">the stack is you can see all the stack</font>

649
00:30:53,390 --> 00:30:57,800
numbers<font color="#E5E5E5"> bring the board and then the</font>

650
00:30:56,060 --> 00:31:00,020
memory dump you can<font color="#E5E5E5"> right-click on any</font>

651
00:30:57,800 --> 00:31:06,680
address here<font color="#E5E5E5"> and it'll jump to one of</font>

652
00:31:00,020 --> 00:31:10,460
these dumps<font color="#CCCCCC"> that you choose all right</font>

653
00:31:06,680 --> 00:31:11,960
and so<font color="#E5E5E5"> I will talk about</font><font color="#CCCCCC"> what so if you</font>

654
00:31:10,460 --> 00:31:13,820
want to<font color="#E5E5E5"> automate you know make things</font>

655
00:31:11,960 --> 00:31:17,840
much<font color="#CCCCCC"> faster for you can choose the</font>

656
00:31:13,820 --> 00:31:20,600
different<font color="#E5E5E5"> f2 f7 f8 f9 buttons if you</font>

657
00:31:17,840 --> 00:31:22,490
want to this is why I use<font color="#E5E5E5"> a</font><font color="#CCCCCC"> Windows</font>

658
00:31:20,600 --> 00:31:24,649
<font color="#CCCCCC">keyboard every was asking me like hey</font><font color="#E5E5E5"> yo</font>

659
00:31:22,490 --> 00:31:27,080
<font color="#CCCCCC">Windows it keep on a MacOS because I</font>

660
00:31:24,650 --> 00:31:30,770
hate<font color="#E5E5E5"> having</font><font color="#CCCCCC"> to use more</font><font color="#E5E5E5"> than two keys</font><font color="#CCCCCC"> to</font>

661
00:31:27,080 --> 00:31:32,600
do all this<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> but you can</font><font color="#E5E5E5"> just right</font>

662
00:31:30,770 --> 00:31:34,160
click or click the buttons to do<font color="#E5E5E5"> this as</font>

663
00:31:32,600 --> 00:31:37,300
<font color="#E5E5E5">well it's just it gets annoying when I</font>

664
00:31:34,160 --> 00:31:40,960
hear you click there for like<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> times</font>

665
00:31:37,300 --> 00:31:43,159
<font color="#E5E5E5">and it will annoy your</font><font color="#CCCCCC"> coworkers -</font>

666
00:31:40,960 --> 00:31:44,390
especially if you have<font color="#E5E5E5"> like a mechanical</font>

667
00:31:43,160 --> 00:31:49,580
keyboard<font color="#CCCCCC"> then we need</font><font color="#E5E5E5"> to look for the</font>

668
00:31:44,390 --> 00:31:53,870
quickly<font color="#CCCCCC"> alright and then cff Explorer</font>

669
00:31:49,580 --> 00:31:55,790
<font color="#E5E5E5">will go over this on in section 4 but</font>

670
00:31:53,870 --> 00:31:58,340
<font color="#E5E5E5">basically what it</font><font color="#CCCCCC"> is it is it parses the</font>

671
00:31:55,790 --> 00:32:01,250
PE header like I explained<font color="#CCCCCC"> before</font><font color="#E5E5E5"> nicely</font>

672
00:31:58,340 --> 00:32:04,010
for you in this nice<font color="#E5E5E5"> GUI</font><font color="#CCCCCC"> you can copy</font>

673
00:32:01,250 --> 00:32:09,620
<font color="#E5E5E5">and paste and export things as well and</font>

674
00:32:04,010 --> 00:32:11,090
so we'll go<font color="#E5E5E5"> over that</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> I don't</font>

675
00:32:09,620 --> 00:32:13,300
<font color="#CCCCCC">have to tell you about this turtle suite</font>

676
00:32:11,090 --> 00:32:15,730
all it is is here's all the processes

677
00:32:13,300 --> 00:32:22,370
here's all the things<font color="#CCCCCC"> that</font><font color="#E5E5E5"> happen in the</font>

678
00:32:15,730 --> 00:32:24,050
<font color="#E5E5E5">VM</font><font color="#CCCCCC"> alright finally section 4 all right</font>

679
00:32:22,370 --> 00:32:26,139
<font color="#E5E5E5">this is I'm going to sit</font><font color="#CCCCCC"> down for this</font>

680
00:32:24,050 --> 00:32:26,139
<font color="#E5E5E5">one</font>

681
00:32:26,410 --> 00:32:31,850
depending on your workload<font color="#E5E5E5"> like say you</font>

682
00:32:29,750 --> 00:32:33,410
<font color="#E5E5E5">have to look at something</font><font color="#CCCCCC"> really quickly</font>

683
00:32:31,850 --> 00:32:35,179
and tell your boss hey this is kind<font color="#CCCCCC"> of</font>

684
00:32:33,410 --> 00:32:38,930
<font color="#CCCCCC">suspicious</font><font color="#E5E5E5"> you know you're going to do</font>

685
00:32:35,180 --> 00:32:41,900
it simple triage so I'm gonna have you

686
00:32:38,930 --> 00:32:43,400
<font color="#E5E5E5">get the</font><font color="#CCCCCC"> Mauer</font><font color="#E5E5E5"> you can download it here</font>

687
00:32:41,900 --> 00:32:45,440
<font color="#E5E5E5">or you can get it off the thumb drive</font>

688
00:32:43,400 --> 00:32:49,220
off<font color="#E5E5E5"> the thumb drive it</font>

689
00:32:45,440 --> 00:32:58,730
called unknown<font color="#E5E5E5"> nut zip and I want you to</font>

690
00:32:49,220 --> 00:33:00,110
place that<font color="#E5E5E5"> into your</font><font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> VM so if</font>

691
00:32:58,730 --> 00:33:02,360
you're a<font color="#E5E5E5"> Windows VM doesn't work just</font>

692
00:33:00,110 --> 00:33:30,709
<font color="#E5E5E5">reinstall the guest images so that you</font>

693
00:33:02,360 --> 00:33:45,889
can copy<font color="#E5E5E5"> it over come on oh and my bm's</font>

694
00:33:30,710 --> 00:33:49,429
being lame<font color="#CCCCCC"> I recommend if you want to</font>

695
00:33:45,889 --> 00:33:52,250
get<font color="#CCCCCC"> vmware</font><font color="#E5E5E5"> like if you flip by it</font>

696
00:33:49,429 --> 00:33:57,080
use that<font color="#E5E5E5"> as a VirtualBox</font><font color="#CCCCCC"> I only use free</font>

697
00:33:52,250 --> 00:34:02,330
tools<font color="#E5E5E5"> in this workshop is VirtualBox is</font>

698
00:33:57,080 --> 00:34:07,418
really ghetto<font color="#E5E5E5"> so like it's not even</font>

699
00:34:02,330 --> 00:34:07,418
copying<font color="#CCCCCC"> over my stuff</font><font color="#E5E5E5"> all right</font>

700
00:34:26,719 --> 00:34:32,219
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> make sure you take a snapshot</font>

701
00:34:30,000 --> 00:34:34,500
of<font color="#E5E5E5"> your VM wall it's like logged in</font>

702
00:34:32,219 --> 00:34:36,959
<font color="#E5E5E5">because you don't want to have that</font>

703
00:34:34,500 --> 00:34:39,150
sucker restart or you know have<font color="#CCCCCC"> to go</font>

704
00:34:36,960 --> 00:34:41,010
back in there<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> always revert back</font>

705
00:34:39,150 --> 00:35:02,040
to the<font color="#E5E5E5"> image</font><font color="#CCCCCC"> that you created or the</font>

706
00:34:41,010 --> 00:35:03,990
snapshot<font color="#CCCCCC"> you created there we go</font><font color="#E5E5E5"> yeah</font>

707
00:35:02,040 --> 00:35:09,020
just do a reboot<font color="#CCCCCC"> and then the stupid</font>

708
00:35:03,990 --> 00:35:09,020
<font color="#E5E5E5">guest images will get it back on there</font>

709
00:35:10,430 --> 00:35:16,620
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so the password for the zip</font>

710
00:35:14,580 --> 00:35:17,790
file is infected<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> an</font>

711
00:35:16,620 --> 00:35:20,600
<font color="#CCCCCC">industry-standard</font>

712
00:35:17,790 --> 00:35:20,600
password

713
00:35:41,720 --> 00:35:45,259
can you see that

714
00:36:05,710 --> 00:36:24,710
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> is anyone having trouble</font>

715
00:36:10,370 --> 00:36:27,259
with the<font color="#CCCCCC"> BMS no</font><font color="#E5E5E5"> yes well once you get</font>

716
00:36:24,710 --> 00:36:32,210
<font color="#E5E5E5">that unknown zip there you can</font><font color="#CCCCCC"> open it</font>

717
00:36:27,260 --> 00:36:39,980
up in this<font color="#CCCCCC"> XH XH XD</font><font color="#E5E5E5"> and look at the</font>

718
00:36:32,210 --> 00:36:42,470
header here<font color="#E5E5E5"> and</font><font color="#CCCCCC"> wow it's MZ that means</font>

719
00:36:39,980 --> 00:36:45,230
it's a PE binary that means we can

720
00:36:42,470 --> 00:36:48,740
convert unknown<font color="#E5E5E5"> so the shitty thing</font>

721
00:36:45,230 --> 00:36:52,220
about<font color="#CCCCCC"> Windows is that it'll only read</font>

722
00:36:48,740 --> 00:36:54,020
<font color="#E5E5E5">the extension for it to execute or</font>

723
00:36:52,220 --> 00:37:00,379
whatever the file<font color="#E5E5E5"> class you set in the</font>

724
00:36:54,020 --> 00:37:11,000
registry<font color="#CCCCCC"> so if I were</font><font color="#E5E5E5"> to rename this dot</font>

725
00:37:00,380 --> 00:37:14,960
exe<font color="#CCCCCC"> wow it's got a unicorn icon hello</font>

726
00:37:11,000 --> 00:37:22,130
<font color="#E5E5E5">rainbow magic game I'm pretty much doubt</font>

727
00:37:14,960 --> 00:37:24,290
that<font color="#CCCCCC"> that's not</font><font color="#E5E5E5"> a game I don't know I'm</font>

728
00:37:22,130 --> 00:37:25,670
a big<font color="#CCCCCC"> fan of Robot Unicorn Attack and</font>

729
00:37:24,290 --> 00:37:34,130
that's what I play when I'm on the plane

730
00:37:25,670 --> 00:37:37,130
<font color="#CCCCCC">so not this might be fun</font><font color="#E5E5E5"> alright so once</font>

731
00:37:34,130 --> 00:37:39,140
you rename it to exe you can and if

732
00:37:37,130 --> 00:37:42,310
you're not<font color="#CCCCCC"> else set up this is online</font>

733
00:37:39,140 --> 00:37:46,190
<font color="#CCCCCC">you can just take notes and</font><font color="#E5E5E5"> follow along</font>

734
00:37:42,310 --> 00:37:48,310
you<font color="#E5E5E5"> can open up with CF</font><font color="#CCCCCC"> explorer and you</font>

735
00:37:46,190 --> 00:37:51,620
can see all of the header information

736
00:37:48,310 --> 00:37:55,880
<font color="#E5E5E5">it's called rainbow magic exe instead of</font>

737
00:37:51,620 --> 00:37:58,040
unknown that<font color="#CCCCCC"> exe so we think it's a game</font>

738
00:37:55,880 --> 00:38:00,770
called<font color="#E5E5E5"> rainbow magic game pretty much</font>

739
00:37:58,040 --> 00:38:03,830
<font color="#E5E5E5">not kind of obvious</font><font color="#CCCCCC"> it's like why would</font>

740
00:38:00,770 --> 00:38:05,360
someone in<font color="#E5E5E5"> your corporate environment</font>

741
00:38:03,830 --> 00:38:06,720
download a game on their computer

742
00:38:05,360 --> 00:38:10,059
<font color="#E5E5E5">probably not</font>

743
00:38:06,720 --> 00:38:12,250
so when you get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> CHC you have to ask</font>

744
00:38:10,059 --> 00:38:14,920
the person hey how did you<font color="#E5E5E5"> download</font><font color="#CCCCCC"> it</font>

745
00:38:12,250 --> 00:38:17,380
did you download<font color="#CCCCCC"> it from</font><font color="#E5E5E5"> a you know link</font>

746
00:38:14,920 --> 00:38:19,599
<font color="#E5E5E5">did you get it from an email</font><font color="#CCCCCC"> cuz that'll</font>

747
00:38:17,380 --> 00:38:23,050
<font color="#E5E5E5">kind of give</font><font color="#CCCCCC"> you the</font><font color="#E5E5E5"> context on what's</font>

748
00:38:19,599 --> 00:38:25,059
it targeting and I think I say that here

749
00:38:23,050 --> 00:38:28,480
<font color="#E5E5E5">yeah did it comes to an</font><font color="#CCCCCC"> email</font><font color="#E5E5E5"> that it</font>

750
00:38:25,059 --> 00:38:31,569
comes to<font color="#E5E5E5"> a Belzer download</font><font color="#CCCCCC"> who on earth</font>

751
00:38:28,480 --> 00:38:33,849
<font color="#E5E5E5">would allow p2p</font><font color="#CCCCCC"> peat peer-to-peer on</font>

752
00:38:31,569 --> 00:38:40,710
<font color="#CCCCCC">their</font><font color="#E5E5E5"> you know corporate network I've</font>

753
00:38:33,849 --> 00:38:43,420
seen I've<font color="#CCCCCC"> seen people do that alright so</font>

754
00:38:40,710 --> 00:38:46,020
<font color="#E5E5E5">say you</font><font color="#CCCCCC"> want to look at the file and the</font>

755
00:38:43,420 --> 00:38:50,230
header information<font color="#E5E5E5"> you don't have to use</font>

756
00:38:46,020 --> 00:38:54,250
the CF<font color="#E5E5E5"> Explorer you can</font><font color="#CCCCCC"> always just use</font>

757
00:38:50,230 --> 00:38:59,819
any type of Linux environment<font color="#CCCCCC"> to look at</font>

758
00:38:54,250 --> 00:38:59,819
the<font color="#E5E5E5"> oops oh man</font>

759
00:39:02,970 --> 00:39:08,098
say I wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at the</font><font color="#CCCCCC"> Maur here</font>

760
00:39:16,829 --> 00:39:23,619
see if I can make it<font color="#CCCCCC"> bigger</font>

761
00:39:19,710 --> 00:39:25,150
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> so say I wanted to look at the</font>

762
00:39:23,619 --> 00:39:28,540
unknown file

763
00:39:25,150 --> 00:39:31,599
<font color="#E5E5E5">it's a PE executable so I can turn it to</font>

764
00:39:28,540 --> 00:39:32,200
<font color="#E5E5E5">exe if I wanted to</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can do that</font>

765
00:39:31,599 --> 00:39:38,650
on Linux

766
00:39:32,200 --> 00:39:42,460
<font color="#CCCCCC">I installed a nice little bash</font><font color="#E5E5E5"> thing on</font>

767
00:39:38,650 --> 00:39:42,940
there if<font color="#E5E5E5"> you wanted to it is it did I do</font>

768
00:39:42,460 --> 00:39:47,230
it

769
00:39:42,940 --> 00:39:49,299
no<font color="#CCCCCC"> okay maybe not</font><font color="#E5E5E5"> on this VM I have so</font>

770
00:39:47,230 --> 00:39:53,829
many different malware analysis<font color="#CCCCCC"> VMs</font><font color="#E5E5E5"> but</font>

771
00:39:49,299 --> 00:39:57,030
if you go to the import directory down

772
00:39:53,829 --> 00:40:00,700
here the imports will always tell you

773
00:39:57,030 --> 00:40:03,609
kind of what it's doing<font color="#CCCCCC"> so how many</font>

774
00:40:00,700 --> 00:40:04,500
<font color="#E5E5E5">people recognize what shell 32 does</font>

775
00:40:03,609 --> 00:40:09,660
dll's

776
00:40:04,500 --> 00:40:09,660
pretty obvious<font color="#E5E5E5"> it's gonna open a shell</font>

777
00:40:10,770 --> 00:40:16,420
when<font color="#E5E5E5"> I net</font><font color="#CCCCCC"> got</font><font color="#E5E5E5"> DLL what do you think it</font>

778
00:40:14,109 --> 00:40:20,578
does<font color="#E5E5E5"> have</font><font color="#CCCCCC"> you used it</font><font color="#E5E5E5"> before</font>

779
00:40:16,420 --> 00:40:26,170
yep it's<font color="#E5E5E5"> gonna do an</font><font color="#CCCCCC"> Internet request</font>

780
00:40:20,579 --> 00:40:27,869
user 32<font color="#CCCCCC"> crypt crypt 32 DLL can you do it</font>

781
00:40:26,170 --> 00:40:31,119
yeah make a guess

782
00:40:27,869 --> 00:40:33,309
yeah<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> obvious right so it's gonna</font>

783
00:40:31,119 --> 00:40:36,640
<font color="#E5E5E5">do some type of encryption</font><font color="#CCCCCC"> it's gonna do</font>

784
00:40:33,309 --> 00:40:38,529
an<font color="#E5E5E5"> Internet request the advaithi 32</font>

785
00:40:36,640 --> 00:40:41,940
usually means it's<font color="#CCCCCC"> gonna touch registry</font>

786
00:40:38,529 --> 00:40:44,589
keys<font color="#CCCCCC"> we</font><font color="#E5E5E5"> were not used to seeing</font><font color="#CCCCCC"> that DLO</font>

787
00:40:41,940 --> 00:40:46,930
kernel32 this everywhere it's just<font color="#CCCCCC"> going</font>

788
00:40:44,589 --> 00:40:50,349
to do it's<font color="#E5E5E5"> probably gonna you know</font>

789
00:40:46,930 --> 00:40:54,940
access different modules if<font color="#E5E5E5"> you if you</font>

790
00:40:50,349 --> 00:40:57,549
do that oh<font color="#CCCCCC"> le user 32 that's</font><font color="#E5E5E5"> always</font>

791
00:40:54,940 --> 00:41:01,089
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to be there</font><font color="#E5E5E5"> but if you see crypt</font>

792
00:40:57,549 --> 00:41:03,160
or<font color="#CCCCCC"> shell or when I net</font><font color="#E5E5E5"> you know it's</font>

793
00:41:01,089 --> 00:41:06,308
doing it's pretty obvious and what

794
00:41:03,160 --> 00:41:07,990
they're gonna use those for so you<font color="#E5E5E5"> know</font>

795
00:41:06,309 --> 00:41:10,359
when you're on<font color="#CCCCCC"> virustotal</font><font color="#E5E5E5"> and you look</font>

796
00:41:07,990 --> 00:41:12,009
at the imports you kind of read<font color="#E5E5E5"> oh is</font>

797
00:41:10,359 --> 00:41:14,769
doing when<font color="#CCCCCC"> I net oh it's gonna do an</font>

798
00:41:12,010 --> 00:41:17,170
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> you know request so it's you</font>

799
00:41:14,769 --> 00:41:19,058
<font color="#E5E5E5">can triage it that way so when you're</font>

800
00:41:17,170 --> 00:41:20,500
when you're looking at the malware<font color="#E5E5E5"> you</font>

801
00:41:19,059 --> 00:41:22,059
want to look for those<font color="#E5E5E5"> specific</font><font color="#CCCCCC"> things</font>

802
00:41:20,500 --> 00:41:24,039
where is it gonna open<font color="#E5E5E5"> a shell where is</font>

803
00:41:22,059 --> 00:41:25,539
it gonna<font color="#E5E5E5"> do a registry key where is it</font>

804
00:41:24,039 --> 00:41:27,490
<font color="#E5E5E5">gonna do an</font><font color="#CCCCCC"> internetwork</font><font color="#E5E5E5"> quest and those</font>

805
00:41:25,539 --> 00:41:29,259
will<font color="#E5E5E5"> be your your starting points and</font>

806
00:41:27,490 --> 00:41:32,558
<font color="#E5E5E5">where you work</font><font color="#CCCCCC"> yourself backwards to</font>

807
00:41:29,259 --> 00:41:34,180
figure<font color="#E5E5E5"> out what it</font><font color="#CCCCCC"> does so now what I</font>

808
00:41:32,559 --> 00:41:37,539
got that if we go to the youth px

809
00:41:34,180 --> 00:41:40,299
utility<font color="#E5E5E5"> it's it says unpack here so hmm</font>

810
00:41:37,539 --> 00:41:45,759
if you look at the header you<font color="#CCCCCC"> scroll</font>

811
00:41:40,299 --> 00:41:48,490
down<font color="#CCCCCC"> Oh the NT header</font><font color="#E5E5E5"> no there we go</font>

812
00:41:45,759 --> 00:41:51,130
optional header<font color="#E5E5E5"> so the address of entry</font>

813
00:41:48,490 --> 00:41:54,308
point says<font color="#E5E5E5"> you px usually it'll say</font>

814
00:41:51,130 --> 00:41:56,619
start but this means it's you px packed

815
00:41:54,309 --> 00:41:59,410
<font color="#CCCCCC">I know it says you</font><font color="#E5E5E5"> px</font><font color="#CCCCCC"> 1 there but it's</font>

816
00:41:56,619 --> 00:42:05,769
<font color="#CCCCCC">actually you</font><font color="#E5E5E5"> px 3 so what we'll do is</font>

817
00:41:59,410 --> 00:42:07,569
open<font color="#CCCCCC"> it up in PE</font><font color="#E5E5E5"> explorer which is kind</font>

818
00:42:05,769 --> 00:42:09,519
of like<font color="#CCCCCC"> the same thing as cff it's just</font>

819
00:42:07,569 --> 00:42:11,440
you<font color="#CCCCCC"> gotta</font><font color="#E5E5E5"> pay for it but there should be</font>

820
00:42:09,519 --> 00:42:16,149
<font color="#CCCCCC">a trial</font><font color="#E5E5E5"> version here now there's like</font>

821
00:42:11,440 --> 00:42:20,259
one day left<font color="#CCCCCC"> yes sorry I made this</font><font color="#E5E5E5"> like</font>

822
00:42:16,150 --> 00:42:23,259
30 days it'll unpack it for<font color="#E5E5E5"> you very</font>

823
00:42:20,259 --> 00:42:25,900
nicely<font color="#E5E5E5"> if you look at the logs here</font>

824
00:42:23,259 --> 00:42:28,320
it says it'll<font color="#E5E5E5"> go through all the</font>

825
00:42:25,900 --> 00:42:31,960
different<font color="#E5E5E5"> Packers that it has</font>

826
00:42:28,320 --> 00:42:34,990
so you can see<font color="#CCCCCC"> oh it's you px I'm</font>

827
00:42:31,960 --> 00:42:37,000
packing and it automatically has<font color="#CCCCCC"> the</font>

828
00:42:34,990 --> 00:42:40,990
file ready for you to<font color="#E5E5E5"> go and puts on all</font>

829
00:42:37,000 --> 00:42:43,870
of the import offsets for you<font color="#E5E5E5"> so you can</font>

830
00:42:40,990 --> 00:42:48,490
<font color="#E5E5E5">go ahead and save that file and name it</font>

831
00:42:43,870 --> 00:42:51,970
as unknown unpacked<font color="#E5E5E5"> so when you're</font>

832
00:42:48,490 --> 00:42:54,009
<font color="#E5E5E5">looking at Mauer in virustotal sometimes</font>

833
00:42:51,970 --> 00:42:56,529
<font color="#E5E5E5">as malware analysts will have the</font>

834
00:42:54,010 --> 00:42:59,440
unpacked version<font color="#CCCCCC"> on there for you</font><font color="#E5E5E5"> so it</font>

835
00:42:56,530 --> 00:43:02,020
won't be the original md5 hash it'll be

836
00:42:59,440 --> 00:43:04,180
the unpacked version inside<font color="#E5E5E5"> which is</font>

837
00:43:02,020 --> 00:43:06,130
nice but<font color="#E5E5E5"> sometimes it may</font><font color="#CCCCCC"> not work if</font>

838
00:43:04,180 --> 00:43:09,669
they unpack it for<font color="#CCCCCC"> you</font><font color="#E5E5E5"> they don't do it</font>

839
00:43:06,130 --> 00:43:16,930
right<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> P</font><font color="#E5E5E5"> explore</font><font color="#CCCCCC"> unpack CPX</font>

840
00:43:09,670 --> 00:43:19,390
files correctly<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> all right so what</font>

841
00:43:16,930 --> 00:43:22,210
we want<font color="#E5E5E5"> to do is get simple strings a</font>

842
00:43:19,390 --> 00:43:24,370
simple search obviously we're not going

843
00:43:22,210 --> 00:43:27,190
<font color="#E5E5E5">to find anything on the rainbow magic</font>

844
00:43:24,370 --> 00:43:30,120
game but if you want to<font color="#E5E5E5"> look at what it</font>

845
00:43:27,190 --> 00:43:30,120
<font color="#CCCCCC">is on virustotal</font>

846
00:43:30,660 --> 00:43:42,399
people already<font color="#E5E5E5"> uploaded my my Mauer here</font>

847
00:43:34,090 --> 00:43:49,720
<font color="#E5E5E5">it's not really malware but yeah</font><font color="#CCCCCC"> so I'm</font>

848
00:43:42,400 --> 00:43:52,650
going<font color="#CCCCCC"> to upload my file here I have a</font>

849
00:43:49,720 --> 00:43:52,649
lot of folders

850
00:43:56,140 --> 00:44:03,009
oh wow 44<font color="#CCCCCC"> to 65</font><font color="#E5E5E5"> you know it's really</font>

851
00:44:01,030 --> 00:44:05,620
<font color="#E5E5E5">funny it does a lot of</font><font color="#CCCCCC"> Maori things but</font>

852
00:44:03,010 --> 00:44:07,360
it's not really<font color="#E5E5E5"> my</font><font color="#CCCCCC"> own but one of the</font>

853
00:44:05,620 --> 00:44:09,580
things that is<font color="#E5E5E5"> is not signed so that's a</font>

854
00:44:07,360 --> 00:44:12,040
big indicator<font color="#E5E5E5"> usually legit software</font>

855
00:44:09,580 --> 00:44:14,890
will have a signer<font color="#E5E5E5"> if it's not stolen</font>

856
00:44:12,040 --> 00:44:19,420
<font color="#CCCCCC">but most</font><font color="#E5E5E5"> of the time it's if it's legit</font>

857
00:44:14,890 --> 00:44:21,670
it'll be signed<font color="#CCCCCC"> so it's a</font><font color="#E5E5E5"> really big</font>

858
00:44:19,420 --> 00:44:23,320
indicator<font color="#E5E5E5"> so we're not even</font><font color="#CCCCCC"> getting</font><font color="#E5E5E5"> into</font>

859
00:44:21,670 --> 00:44:25,870
<font color="#CCCCCC">the malware just looking at it looking</font>

860
00:44:23,320 --> 00:44:28,690
<font color="#E5E5E5">at the little different</font><font color="#CCCCCC"> info before we</font>

861
00:44:25,870 --> 00:44:29,980
even<font color="#E5E5E5"> start so now</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> brings us to lab</font>

862
00:44:28,690 --> 00:44:33,700
<font color="#CCCCCC">1 where we're actually going</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> a</font>

863
00:44:29,980 --> 00:44:36,450
quick dynamic analysis<font color="#E5E5E5"> so let's start up</font>

864
00:44:33,700 --> 00:44:36,450
both<font color="#E5E5E5"> PM's</font>

865
00:44:37,410 --> 00:44:48,779
you should have i net already running on

866
00:44:40,300 --> 00:44:48,780
the so if<font color="#CCCCCC"> I do PSIG oh crap I'm Sammy oh</font>

867
00:44:49,380 --> 00:45:06,610
but it's not running<font color="#CCCCCC"> service sign</font><font color="#E5E5E5"> it's</font>

868
00:44:52,390 --> 00:45:12,879
then restarted<font color="#E5E5E5"> it's sweet should be</font>

869
00:45:06,610 --> 00:45:18,300
running<font color="#E5E5E5"> now oh well let me check right</font>

870
00:45:12,880 --> 00:45:21,430
<font color="#CCCCCC">here so when you</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> I netsim running</font>

871
00:45:18,300 --> 00:45:23,380
when<font color="#CCCCCC"> you try to go</font><font color="#E5E5E5"> to the Internet it'll</font>

872
00:45:21,430 --> 00:45:26,640
say this is the default<font color="#E5E5E5"> page for</font><font color="#CCCCCC"> I</font>

873
00:45:23,380 --> 00:45:30,220
netsim<font color="#E5E5E5"> so that means it's acting as a</font>

874
00:45:26,640 --> 00:45:34,779
acting as the internet for you<font color="#E5E5E5"> so if you</font>

875
00:45:30,220 --> 00:45:38,140
look at the network settings it should

876
00:45:34,780 --> 00:45:39,880
be on the internal network<font color="#CCCCCC"> I</font><font color="#E5E5E5"> net this</font>

877
00:45:38,140 --> 00:45:48,009
means the two VMs<font color="#E5E5E5"> are talking to each</font>

878
00:45:39,880 --> 00:45:52,450
<font color="#E5E5E5">other so let's start up wireshark</font><font color="#CCCCCC"> native</font>

879
00:45:48,010 --> 00:45:54,520
in the terminal you do sudo Wireshark

880
00:45:52,450 --> 00:46:02,020
you<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> use sudo so it can attach to</font>

881
00:45:54,520 --> 00:46:06,960
<font color="#CCCCCC">the the</font><font color="#E5E5E5"> network card yeah don't worry</font>

882
00:46:02,020 --> 00:46:09,619
<font color="#E5E5E5">about the Lua thing so let's do any</font>

883
00:46:06,960 --> 00:46:16,009
double click on any so it'll listen

884
00:46:09,619 --> 00:46:19,759
<font color="#E5E5E5">to any activity</font><font color="#CCCCCC"> from the victim so let's</font>

885
00:46:16,009 --> 00:46:23,470
take unknown<font color="#CCCCCC"> Exe as we know the</font><font color="#E5E5E5"> unpacks</font>

886
00:46:19,759 --> 00:46:25,910
<font color="#E5E5E5">unpacked version and run it normally</font><font color="#CCCCCC"> oh</font>

887
00:46:23,470 --> 00:46:33,558
wow that<font color="#CCCCCC"> was really quick oh and it</font>

888
00:46:25,910 --> 00:46:36,230
deleted itself<font color="#E5E5E5"> it purged</font><font color="#CCCCCC"> Wow all right</font>

889
00:46:33,559 --> 00:46:39,009
<font color="#CCCCCC">so let's see the traffic oh cool there's</font>

890
00:46:36,230 --> 00:46:43,849
an HTTP request here<font color="#E5E5E5"> so let's</font>

891
00:46:39,009 --> 00:46:48,339
right-click<font color="#E5E5E5"> on this</font><font color="#CCCCCC"> and say follow TCP</font>

892
00:46:43,849 --> 00:46:52,190
stream<font color="#E5E5E5"> well that's pretty interesting</font>

893
00:46:48,339 --> 00:46:57,680
<font color="#CCCCCC">get a definitely</font><font color="#E5E5E5"> not evil comm I'm</font>

894
00:46:52,190 --> 00:46:59,539
pretty sure that's pretty darn evil so

895
00:46:57,680 --> 00:47:02,509
we<font color="#CCCCCC"> know it's gonna do this Internet</font>

896
00:46:59,539 --> 00:47:04,339
<font color="#E5E5E5">request to definitely not evil</font><font color="#CCCCCC"> comms</font>

897
00:47:02,509 --> 00:47:05,990
left<font color="#CCCCCC"> eh</font>

898
00:47:04,339 --> 00:47:08,269
what you know there's<font color="#E5E5E5"> you can look at</font>

899
00:47:05,990 --> 00:47:11,569
the different headers<font color="#E5E5E5"> special header</font>

900
00:47:08,269 --> 00:47:15,019
whatever<font color="#CCCCCC"> the host definitely not evil</font>

901
00:47:11,569 --> 00:47:17,150
comm so where are these strings<font color="#E5E5E5"> in the</font>

902
00:47:15,019 --> 00:47:19,519
binary itself<font color="#E5E5E5"> so this is kind of like</font>

903
00:47:17,150 --> 00:47:21,230
<font color="#E5E5E5">our hints so we need to figure out where</font>

904
00:47:19,519 --> 00:47:24,939
it's<font color="#E5E5E5"> doing the internet connection and</font>

905
00:47:21,230 --> 00:47:27,680
<font color="#E5E5E5">we know that these strings exist so</font>

906
00:47:24,940 --> 00:47:29,509
let's look<font color="#E5E5E5"> at the we don't need this any</font>

907
00:47:27,680 --> 00:47:32,359
this guy<font color="#CCCCCC"> anymore now that we did a</font>

908
00:47:29,509 --> 00:47:38,059
dynamic analysis so I'm going<font color="#E5E5E5"> to pause</font>

909
00:47:32,359 --> 00:47:40,160
this p.m. and shut it down<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so it</font>

910
00:47:38,059 --> 00:47:43,430
removes<font color="#E5E5E5"> itself but we still have the</font>

911
00:47:40,160 --> 00:47:46,519
<font color="#E5E5E5">packed version so that's pretty cool so</font>

912
00:47:43,430 --> 00:47:52,038
<font color="#E5E5E5">let's open up and and we're about to</font>

913
00:47:46,519 --> 00:47:54,799
<font color="#CCCCCC">move into section five here</font><font color="#E5E5E5"> so we saw</font>

914
00:47:52,039 --> 00:47:57,950
the TCP stream<font color="#E5E5E5"> so now we're</font><font color="#CCCCCC"> back in</font>

915
00:47:54,799 --> 00:47:59,900
<font color="#E5E5E5">section five</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so we already</font>

916
00:47:57,950 --> 00:48:01,788
<font color="#E5E5E5">unpacked it all right I already</font><font color="#CCCCCC"> went</font>

917
00:47:59,900 --> 00:48:04,460
through<font color="#E5E5E5"> that process with</font><font color="#CCCCCC"> you but here's</font>

918
00:48:01,789 --> 00:48:06,499
the information<font color="#E5E5E5"> to figure out how if</font><font color="#CCCCCC"> its</font>

919
00:48:04,460 --> 00:48:13,970
impact<font color="#CCCCCC"> it's packed or not it's in the</font>

920
00:48:06,499 --> 00:48:16,279
header so if you open<font color="#CCCCCC"> it up in Ida open</font>

921
00:48:13,970 --> 00:48:21,220
up Ida Pro and<font color="#E5E5E5"> then all this dialog will</font>

922
00:48:16,279 --> 00:48:21,220
come up and you<font color="#CCCCCC"> just click</font><font color="#E5E5E5"> agree</font>

923
00:48:28,740 --> 00:48:32,259
sweet

924
00:48:30,040 --> 00:48:33,970
and then it'll sit there and<font color="#CCCCCC"> prop do all</font>

925
00:48:32,260 --> 00:48:40,600
this<font color="#E5E5E5"> processing so you just sit there</font>

926
00:48:33,970 --> 00:48:42,100
<font color="#CCCCCC">and wait</font><font color="#E5E5E5"> look at Twitter for a second so</font>

927
00:48:40,600 --> 00:48:43,690
that's<font color="#CCCCCC"> why I do I'm usually like waiting</font>

928
00:48:42,100 --> 00:48:48,490
for<font color="#CCCCCC"> stuff and</font><font color="#E5E5E5"> then I'll tweet something</font>

929
00:48:43,690 --> 00:48:52,870
and then I'll go back<font color="#E5E5E5"> all right cool</font>

930
00:48:48,490 --> 00:48:58,029
I don't<font color="#E5E5E5"> need this box down here so look</font>

931
00:48:52,870 --> 00:49:00,009
<font color="#E5E5E5">at the strings scroll</font><font color="#CCCCCC"> down our data is</font>

932
00:48:58,030 --> 00:49:02,140
where all the strings are gonna be and

933
00:49:00,010 --> 00:49:04,570
<font color="#E5E5E5">then</font><font color="#CCCCCC"> you want to find some weird funky</font>

934
00:49:02,140 --> 00:49:07,810
strings like<font color="#E5E5E5"> this can you</font><font color="#CCCCCC"> see that it's</font>

935
00:49:04,570 --> 00:49:11,020
<font color="#E5E5E5">like under this current version run</font><font color="#CCCCCC"> the</font>

936
00:49:07,810 --> 00:49:17,650
strings window<font color="#E5E5E5"> that's a junk that means</font>

937
00:49:11,020 --> 00:49:20,080
it's it's like<font color="#E5E5E5"> juicy stuff so</font>

938
00:49:17,650 --> 00:49:23,560
<font color="#E5E5E5">double-click on</font><font color="#CCCCCC"> that string and you can</font>

939
00:49:20,080 --> 00:49:26,319
see where it is<font color="#CCCCCC"> located</font><font color="#E5E5E5"> in our data and</font>

940
00:49:23,560 --> 00:49:32,049
when you click<font color="#E5E5E5"> on the string identifier</font>

941
00:49:26,320 --> 00:49:34,090
with<font color="#E5E5E5"> X and click X it'll take you to</font>

942
00:49:32,050 --> 00:49:34,510
where it's actually<font color="#E5E5E5"> being called right</font>

943
00:49:34,090 --> 00:49:39,850
here

944
00:49:34,510 --> 00:49:42,850
oh look internet connect a<font color="#CCCCCC"> wow we got</font>

945
00:49:39,850 --> 00:49:45,160
<font color="#E5E5E5">right to</font><font color="#CCCCCC"> the part what we wanted but</font>

946
00:49:42,850 --> 00:49:47,259
what the hell is a string right<font color="#E5E5E5"> so</font>

947
00:49:45,160 --> 00:49:49,420
<font color="#E5E5E5">usually when you see a string and then a</font>

948
00:49:47,260 --> 00:49:52,990
<font color="#E5E5E5">function after it it's a it's a</font>

949
00:49:49,420 --> 00:49:59,800
<font color="#E5E5E5">decryption function so this little</font>

950
00:49:52,990 --> 00:50:03,879
<font color="#E5E5E5">function call</font><font color="#CCCCCC"> 401 2 6 0</font><font color="#E5E5E5"> double click</font>

951
00:49:59,800 --> 00:50:06,570
into it<font color="#E5E5E5"> and the Ida freed kind of</font>

952
00:50:03,880 --> 00:50:09,940
<font color="#E5E5E5">doesn't parse it</font><font color="#CCCCCC"> nicely</font><font color="#E5E5E5"> but this is a</font>

953
00:50:06,570 --> 00:50:11,860
function<font color="#E5E5E5"> that tried to parse but if you</font>

954
00:50:09,940 --> 00:50:16,450
<font color="#E5E5E5">kind of look at all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the different</font>

955
00:50:11,860 --> 00:50:20,670
commands<font color="#E5E5E5"> look for X</font><font color="#CCCCCC"> ORS</font><font color="#E5E5E5"> so X or EDI EDI</font>

956
00:50:16,450 --> 00:50:23,560
means it's just<font color="#E5E5E5"> making that register 0</font>

957
00:50:20,670 --> 00:50:25,690
so you want to look<font color="#E5E5E5"> for</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> X or where</font>

958
00:50:23,560 --> 00:50:28,570
there's two<font color="#CCCCCC"> different registers</font><font color="#E5E5E5"> there or</font>

959
00:50:25,690 --> 00:50:30,810
<font color="#E5E5E5">two different values so</font><font color="#CCCCCC"> let's scroll all</font>

960
00:50:28,570 --> 00:50:30,810
the way down

961
00:50:31,020 --> 00:50:42,790
until<font color="#E5E5E5"> oh there it is</font><font color="#CCCCCC"> xor al v</font><font color="#E5E5E5"> a so hmm</font>

962
00:50:39,130 --> 00:50:45,880
this is kind of a little<font color="#E5E5E5"> in decoding</font>

963
00:50:42,790 --> 00:50:49,029
<font color="#E5E5E5">function right so</font><font color="#CCCCCC"> it's probably doing a</font>

964
00:50:45,880 --> 00:50:54,130
single<font color="#E5E5E5"> byte</font><font color="#CCCCCC"> xor which is v</font><font color="#E5E5E5"> a so let's</font>

965
00:50:49,030 --> 00:51:02,410
open up let's see

966
00:50:54,130 --> 00:51:07,660
shoot<font color="#E5E5E5"> on your tools here there is</font><font color="#CCCCCC"> XOR</font>

967
00:51:02,410 --> 00:51:16,060
search right<font color="#E5E5E5"> here</font><font color="#CCCCCC"> this little tool open</font>

968
00:51:07,660 --> 00:51:18,750
up and then drop it<font color="#E5E5E5"> in there so the way</font>

969
00:51:16,060 --> 00:51:21,670
you use<font color="#CCCCCC"> XOR search is that you want to</font>

970
00:51:18,750 --> 00:51:25,800
put in a string that you think it's

971
00:51:21,670 --> 00:51:30,580
gonna say so<font color="#CCCCCC"> let's run this again and</font>

972
00:51:25,800 --> 00:51:35,590
add our unknown unpacked<font color="#E5E5E5"> and then let's</font>

973
00:51:30,580 --> 00:51:38,710
do comm for this string<font color="#CCCCCC"> I know it's</font>

974
00:51:35,590 --> 00:51:47,260
really<font color="#E5E5E5"> hard to see but I'll show you</font>

975
00:51:38,710 --> 00:51:50,770
<font color="#CCCCCC">over</font><font color="#E5E5E5"> here there we go so you</font><font color="#CCCCCC"> do XOR</font>

976
00:51:47,260 --> 00:51:55,650
search the path<font color="#E5E5E5"> or of the exe</font><font color="#CCCCCC"> and then a</font>

977
00:51:50,770 --> 00:51:55,650
test string so I'm using<font color="#E5E5E5"> comm instead</font>

978
00:51:56,250 --> 00:52:06,880
and<font color="#CCCCCC"> that says yo this</font><font color="#E5E5E5"> is dope</font><font color="#CCCCCC"> as one of</font>

979
00:52:02,650 --> 00:52:09,370
<font color="#E5E5E5">the strings hmm that's interesting</font><font color="#CCCCCC"> so we</font>

980
00:52:06,880 --> 00:52:12,010
know that it's using a single byte<font color="#E5E5E5"> XOR</font>

981
00:52:09,370 --> 00:52:15,490
<font color="#E5E5E5">for all of the strings and it's going to</font>

982
00:52:12,010 --> 00:52:18,460
call this function<font color="#E5E5E5"> each time so just</font>

983
00:52:15,490 --> 00:52:19,839
<font color="#CCCCCC">remember</font><font color="#E5E5E5"> that when you see a string with</font>

984
00:52:18,460 --> 00:52:22,000
a function being called after<font color="#E5E5E5"> it's going</font>

985
00:52:19,840 --> 00:52:30,070
to process<font color="#CCCCCC"> that string</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we can rename</font>

986
00:52:22,000 --> 00:52:32,590
this function<font color="#E5E5E5"> X or decrypt so if I were</font>

987
00:52:30,070 --> 00:52:34,360
<font color="#E5E5E5">to click X on it you can see</font><font color="#CCCCCC"> all the</font>

988
00:52:32,590 --> 00:52:36,430
<font color="#E5E5E5">different times that X or decrypt</font><font color="#CCCCCC"> was</font>

989
00:52:34,360 --> 00:52:43,090
called so there's four different strings

990
00:52:36,430 --> 00:52:44,890
<font color="#E5E5E5">that is decrypting cool so how do we get</font>

991
00:52:43,090 --> 00:52:47,890
<font color="#CCCCCC">to this location</font><font color="#E5E5E5"> how do we get from</font>

992
00:52:44,890 --> 00:52:51,400
<font color="#CCCCCC">Internet open a so if you keep clicking</font>

993
00:52:47,890 --> 00:52:55,150
<font color="#E5E5E5">X in Ida on the location it will bring</font>

994
00:52:51,400 --> 00:52:56,650
you all<font color="#CCCCCC"> the way back</font><font color="#E5E5E5"> to each time things</font>

995
00:52:55,150 --> 00:52:59,260
are<font color="#E5E5E5"> being called and you keep scrolling</font>

996
00:52:56,650 --> 00:53:07,480
up keep<font color="#CCCCCC"> going all</font><font color="#E5E5E5"> the way</font><font color="#CCCCCC"> up until you</font>

997
00:52:59,260 --> 00:53:10,270
reach start<font color="#E5E5E5"> okay cool now we're in the</font>

998
00:53:07,480 --> 00:53:13,420
start<font color="#CCCCCC"> function so when you're making</font>

999
00:53:10,270 --> 00:53:14,410
<font color="#E5E5E5">your map you</font><font color="#CCCCCC"> should be going through</font><font color="#E5E5E5"> and</font>

1000
00:53:13,420 --> 00:53:17,200
this<font color="#E5E5E5"> is what I was just explaining</font>

1001
00:53:14,410 --> 00:53:18,730
<font color="#CCCCCC">before is going</font><font color="#E5E5E5"> up through the</font><font color="#CCCCCC"> foot all</font>

1002
00:53:17,200 --> 00:53:21,839
<font color="#E5E5E5">of the jump points where all the</font>

1003
00:53:18,730 --> 00:53:25,030
locations<font color="#E5E5E5"> are so you can make your notes</font>

1004
00:53:21,840 --> 00:53:27,490
<font color="#CCCCCC">so</font><font color="#E5E5E5"> I usually have like a little notebook</font>

1005
00:53:25,030 --> 00:53:31,080
<font color="#CCCCCC">on you know where all</font><font color="#E5E5E5"> the jump points</font>

1006
00:53:27,490 --> 00:53:34,390
are so I know<font color="#E5E5E5"> like where the internet</font>

1007
00:53:31,080 --> 00:53:37,360
doesn't<font color="#E5E5E5"> show it there as those there we</font>

1008
00:53:34,390 --> 00:53:39,190
go<font color="#CCCCCC"> Internet open a and we know</font><font color="#E5E5E5"> that if I</font>

1009
00:53:37,360 --> 00:53:41,320
click<font color="#CCCCCC"> X and it goes</font><font color="#E5E5E5"> back to this jump</font>

1010
00:53:39,190 --> 00:53:44,490
where it sets the register key<font color="#E5E5E5"> and</font>

1011
00:53:41,320 --> 00:53:47,740
<font color="#CCCCCC">another jump again all the way up until</font>

1012
00:53:44,490 --> 00:53:49,720
it's to the start so when you start

1013
00:53:47,740 --> 00:53:51,729
debugging<font color="#E5E5E5"> you can set all of your</font>

1014
00:53:49,720 --> 00:53:54,490
breakpoints<font color="#CCCCCC"> on where those</font><font color="#E5E5E5"> jumps are</font>

1015
00:53:51,730 --> 00:53:57,670
happening so you<font color="#E5E5E5"> know how to navigate to</font>

1016
00:53:54,490 --> 00:54:00,189
<font color="#CCCCCC">the Internet connect a where that's the</font>

1017
00:53:57,670 --> 00:54:02,260
<font color="#E5E5E5">juicy part that you want to go to to see</font>

1018
00:54:00,190 --> 00:54:06,010
you know what the response<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to</font>

1019
00:54:02,260 --> 00:54:07,780
<font color="#E5E5E5">be so that's basically what</font><font color="#CCCCCC"> you're going</font>

1020
00:54:06,010 --> 00:54:09,760
<font color="#CCCCCC">to do a debugging</font><font color="#E5E5E5"> is you have this nice</font>

1021
00:54:07,780 --> 00:54:12,430
<font color="#E5E5E5">little map you're going to set all of</font>

1022
00:54:09,760 --> 00:54:16,360
<font color="#E5E5E5">your breakpoints</font><font color="#CCCCCC"> you're going to modify</font>

1023
00:54:12,430 --> 00:54:19,649
<font color="#E5E5E5">the jump calls as they're happening so</font>

1024
00:54:16,360 --> 00:54:19,650
<font color="#CCCCCC">you can get to the place that</font><font color="#E5E5E5"> you want</font>

1025
00:54:20,700 --> 00:54:26,350
so<font color="#E5E5E5"> you can sit there and play around and</font>

1026
00:54:23,710 --> 00:54:29,190
go<font color="#CCCCCC"> back to the strings and find other</font>

1027
00:54:26,350 --> 00:54:33,819
cool things<font color="#CCCCCC"> like</font><font color="#E5E5E5"> here's another one</font>

1028
00:54:29,190 --> 00:54:40,180
let's see where this<font color="#CCCCCC"> is being</font><font color="#E5E5E5"> called all</font>

1029
00:54:33,820 --> 00:54:42,160
<font color="#E5E5E5">right so if you see a the get module</font>

1030
00:54:40,180 --> 00:54:43,899
handle name and the file name<font color="#E5E5E5"> a it's</font>

1031
00:54:42,160 --> 00:54:44,279
going<font color="#CCCCCC"> to check</font><font color="#E5E5E5"> its own file name to see</font>

1032
00:54:43,900 --> 00:54:47,970
what

1033
00:54:44,280 --> 00:54:50,130
<font color="#E5E5E5">is so each API call kind of represents</font>

1034
00:54:47,970 --> 00:54:53,399
<font color="#E5E5E5">what what's it going to do so file</font>

1035
00:54:50,130 --> 00:54:56,010
system API calls moving data or copying

1036
00:54:53,400 --> 00:54:58,560
itself<font color="#CCCCCC"> checking the name of itself</font>

1037
00:54:56,010 --> 00:55:02,100
<font color="#CCCCCC">writing a registry key is normally for</font>

1038
00:54:58,560 --> 00:55:03,750
persistence<font color="#CCCCCC"> internet</font><font color="#E5E5E5"> so this is where</font>

1039
00:55:02,100 --> 00:55:05,880
all<font color="#E5E5E5"> those dll's come into play because</font>

1040
00:55:03,750 --> 00:55:11,220
<font color="#E5E5E5">all these api's are related to each of</font>

1041
00:55:05,880 --> 00:55:16,140
<font color="#CCCCCC">those dll's</font><font color="#E5E5E5"> an api luckily and windows</font>

1042
00:55:11,220 --> 00:55:17,609
<font color="#E5E5E5">API calls are nicely</font><font color="#CCCCCC"> documented so you</font>

1043
00:55:16,140 --> 00:55:21,750
can figure out what the hell they're

1044
00:55:17,610 --> 00:55:23,820
<font color="#CCCCCC">doing so now that we got kind</font><font color="#E5E5E5"> of a path</font>

1045
00:55:21,750 --> 00:55:30,390
<font color="#E5E5E5">on where to go</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> we start debugging</font>

1046
00:55:23,820 --> 00:55:34,890
<font color="#E5E5E5">we'll know where to go</font><font color="#CCCCCC"> so finally it is</font>

1047
00:55:30,390 --> 00:55:38,040
<font color="#E5E5E5">section 6 how many of you know what</font>

1048
00:55:34,890 --> 00:55:44,900
hacker man is you've seen<font color="#CCCCCC"> that silly</font>

1049
00:55:38,040 --> 00:55:48,840
movie<font color="#E5E5E5"> all right so we're gonna open up</font>

1050
00:55:44,900 --> 00:55:50,640
<font color="#CCCCCC">the disassembler or I</font><font color="#E5E5E5"> mean the Booker so</font>

1051
00:55:48,840 --> 00:55:53,100
<font color="#E5E5E5">we'll keep</font><font color="#CCCCCC"> eye</font><font color="#E5E5E5"> to open normally I'll</font>

1052
00:55:50,640 --> 00:55:56,129
have I on a different VM<font color="#E5E5E5"> because if I</font>

1053
00:55:53,100 --> 00:55:58,380
have<font color="#CCCCCC"> to restart</font><font color="#E5E5E5"> it'll be there but since</font>

1054
00:55:56,130 --> 00:56:02,760
we<font color="#E5E5E5"> only have one VM we'll just have them</font>

1055
00:55:58,380 --> 00:56:07,260
<font color="#E5E5E5">both open same time so we can open up X</font>

1056
00:56:02,760 --> 00:56:15,450
<font color="#CCCCCC">32</font><font color="#E5E5E5"> debug because there's a</font><font color="#CCCCCC"> 32-bit open</font>

1057
00:56:07,260 --> 00:56:18,230
up<font color="#CCCCCC"> an own unpacked at</font><font color="#E5E5E5"> Exe so in this</font>

1058
00:56:15,450 --> 00:56:21,089
debugger if you click the run or f9

1059
00:56:18,230 --> 00:56:24,350
<font color="#CCCCCC">it'll run to</font><font color="#E5E5E5"> the very start of the</font>

1060
00:56:21,090 --> 00:56:29,280
program so what we'll need<font color="#CCCCCC"> to do now is</font>

1061
00:56:24,350 --> 00:56:32,029
rebase<font color="#CCCCCC"> Ida so what</font><font color="#E5E5E5"> does that mean in Ida</font>

1062
00:56:29,280 --> 00:56:36,180
all everything starts off at<font color="#E5E5E5"> that</font>

1063
00:56:32,030 --> 00:56:38,490
<font color="#E5E5E5">400,000 like offset and hex so what you</font>

1064
00:56:36,180 --> 00:56:41,549
<font color="#E5E5E5">need to do is make sure</font><font color="#CCCCCC"> that whatever</font>

1065
00:56:38,490 --> 00:56:44,009
this<font color="#E5E5E5"> is in the</font><font color="#CCCCCC"> de Booker is the same</font>

1066
00:56:41,550 --> 00:56:46,710
<font color="#E5E5E5">address</font><font color="#CCCCCC"> space so</font><font color="#E5E5E5"> you can follow</font><font color="#CCCCCC"> along so</font>

1067
00:56:44,010 --> 00:56:49,530
if we go to<font color="#E5E5E5"> the memory map and we look</font>

1068
00:56:46,710 --> 00:56:52,830
for unknown<font color="#E5E5E5"> unpacked at</font><font color="#CCCCCC"> Exe we can see</font>

1069
00:56:49,530 --> 00:56:54,840
this is the location<font color="#E5E5E5"> and where it's</font>

1070
00:56:52,830 --> 00:56:56,330
loaded into memory so<font color="#CCCCCC"> if I were</font><font color="#E5E5E5"> to</font>

1071
00:56:54,840 --> 00:56:59,390
<font color="#E5E5E5">follow this</font><font color="#CCCCCC"> into the dump</font>

1072
00:56:56,330 --> 00:57:01,970
I can see the MZ header there where it's

1073
00:56:59,390 --> 00:57:05,720
being where the<font color="#CCCCCC"> address the program</font>

1074
00:57:01,970 --> 00:57:10,220
images in memory so I'm gonna<font color="#E5E5E5"> copy this</font>

1075
00:57:05,720 --> 00:57:12,410
copy this address here you can<font color="#E5E5E5"> figure</font>

1076
00:57:10,220 --> 00:57:17,720
out<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the shorthand but I'm</font><font color="#E5E5E5"> gonna show</font>

1077
00:57:12,410 --> 00:57:19,670
you the hard way so I go<font color="#E5E5E5"> to edit in Ida</font>

1078
00:57:17,720 --> 00:57:20,450
<font color="#E5E5E5">I'm going to edit segments rebase</font>

1079
00:57:19,670 --> 00:57:23,480
program

1080
00:57:20,450 --> 00:57:26,359
so in this<font color="#CCCCCC"> Ida free it doesn't</font><font color="#E5E5E5"> do like</font>

1081
00:57:23,480 --> 00:57:28,580
<font color="#E5E5E5">the nice fancy rebasing</font><font color="#CCCCCC"> that ida pro</font>

1082
00:57:26,360 --> 00:57:33,530
does<font color="#E5E5E5"> but you see that it has an offset</font>

1083
00:57:28,580 --> 00:57:37,520
<font color="#E5E5E5">of 1000 here so whatever this address is</font>

1084
00:57:33,530 --> 00:57:44,030
<font color="#E5E5E5">here in</font><font color="#CCCCCC"> the debugger</font><font color="#E5E5E5"> you just add the</font>

1085
00:57:37,520 --> 00:57:52,759
1000 to that so<font color="#E5E5E5"> and you need the 0x in</font>

1086
00:57:44,030 --> 00:57:58,480
there and then add 1000<font color="#E5E5E5"> sweet so if</font><font color="#CCCCCC"> i</font>

1087
00:57:52,760 --> 00:57:58,480
wanted to<font color="#E5E5E5"> go back</font><font color="#CCCCCC"> to where it</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> before</font>

1088
00:58:01,210 --> 00:58:07,270
<font color="#E5E5E5">this internet open a is getting called</font>

1089
00:58:04,010 --> 00:58:12,260
<font color="#E5E5E5">at this address here so</font><font color="#CCCCCC"> i'm gonna copy</font>

1090
00:58:07,270 --> 00:58:16,759
<font color="#CCCCCC">i'm gonna copy that and I'm gonna set a</font>

1091
00:58:12,260 --> 00:58:18,890
<font color="#E5E5E5">breakpoint well do</font><font color="#CCCCCC"> be P which is a</font>

1092
00:58:16,760 --> 00:58:22,390
<font color="#E5E5E5">breakpoint and then you paste the</font>

1093
00:58:18,890 --> 00:58:24,980
<font color="#E5E5E5">address in there and the</font><font color="#CCCCCC"> breakpoints set</font>

1094
00:58:22,390 --> 00:58:25,819
so<font color="#CCCCCC"> now I want to navigate</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> that</font>

1095
00:58:24,980 --> 00:58:29,840
breakpoint

1096
00:58:25,820 --> 00:58:34,670
<font color="#CCCCCC">so if I click run oh wow I'm at</font><font color="#E5E5E5"> Internet</font>

1097
00:58:29,840 --> 00:58:36,800
open a and<font color="#CCCCCC"> look at</font><font color="#E5E5E5"> that definitely not</font>

1098
00:58:34,670 --> 00:58:40,010
evil<font color="#CCCCCC"> comm so it already decrypted</font><font color="#E5E5E5"> the</font>

1099
00:58:36,800 --> 00:58:42,110
string for us so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> how what I talk</font>

1100
00:58:40,010 --> 00:58:43,910
when I'm talking about navigating<font color="#E5E5E5"> to</font>

1101
00:58:42,110 --> 00:58:46,100
where you want to<font color="#E5E5E5"> go you want to make</font>

1102
00:58:43,910 --> 00:58:47,870
<font color="#CCCCCC">sure you know the address of</font><font color="#E5E5E5"> the</font>

1103
00:58:46,100 --> 00:58:49,250
function<font color="#E5E5E5"> you want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go to so that you</font>

1104
00:58:47,870 --> 00:58:51,680
can set a breakpoint<font color="#E5E5E5"> on that function</font>

1105
00:58:49,250 --> 00:58:53,840
<font color="#CCCCCC">without</font><font color="#E5E5E5"> having to sit</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> and step</font>

1106
00:58:51,680 --> 00:58:56,089
through the whole program itself<font color="#E5E5E5"> so you</font>

1107
00:58:53,840 --> 00:58:58,280
can jump automatically to where you want

1108
00:58:56,090 --> 00:59:01,310
<font color="#E5E5E5">to go so now that we need</font><font color="#CCCCCC"> to have</font>

1109
00:58:58,280 --> 00:59:03,740
<font color="#E5E5E5">internet open a we know we are not</font><font color="#CCCCCC"> going</font>

1110
00:59:01,310 --> 00:59:06,650
<font color="#E5E5E5">to connect to the internet</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so we</font>

1111
00:59:03,740 --> 00:59:07,689
need to force it<font color="#E5E5E5"> to say oh I connected</font>

1112
00:59:06,650 --> 00:59:11,530
<font color="#E5E5E5">to</font><font color="#CCCCCC"> deaf</font>

1113
00:59:07,690 --> 00:59:15,150
evil.com and and keep<font color="#E5E5E5"> going forward so</font>

1114
00:59:11,530 --> 00:59:25,720
if we<font color="#E5E5E5"> keep</font><font color="#CCCCCC"> looking at how we get</font><font color="#E5E5E5"> to</font>

1115
00:59:15,150 --> 00:59:29,230
<font color="#CCCCCC">after it</font><font color="#E5E5E5"> see we have to go back here see</font>

1116
00:59:25,720 --> 00:59:32,859
where it's now we're getting to see this

1117
00:59:29,230 --> 00:59:38,140
is where it<font color="#E5E5E5"> sends HTTP</font><font color="#CCCCCC"> requests</font><font color="#E5E5E5"> we're</font>

1118
00:59:32,859 --> 00:59:41,410
going to go after<font color="#E5E5E5"> that after</font><font color="#CCCCCC"> the</font>

1119
00:59:38,140 --> 00:59:43,990
internet read file we want<font color="#E5E5E5"> to get to the</font>

1120
00:59:41,410 --> 00:59:46,270
<font color="#CCCCCC">closed handle so we want to set a</font>

1121
00:59:43,990 --> 00:59:48,310
<font color="#E5E5E5">breakpoint at this here so when you see</font>

1122
00:59:46,270 --> 00:59:53,109
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> this is actually</font><font color="#E5E5E5"> pushing</font>

1123
00:59:48,310 --> 00:59:55,750
<font color="#E5E5E5">each value on to the stack</font><font color="#CCCCCC"> so if I were</font>

1124
00:59:53,109 --> 01:00:00,880
<font color="#E5E5E5">to</font><font color="#CCCCCC"> right-click and make it a string</font><font color="#E5E5E5"> this</font>

1125
00:59:55,750 --> 01:00:05,650
<font color="#E5E5E5">is a ante</font><font color="#CCCCCC"> reverse-engineering thing</font><font color="#E5E5E5"> it's</font>

1126
01:00:00,880 --> 01:00:11,800
expecting to the the response to say

1127
01:00:05,650 --> 01:00:14,800
LMAO so<font color="#E5E5E5"> ayylmao so we want to navigate</font>

1128
01:00:11,800 --> 01:00:17,859
through these jump calls and force the

1129
01:00:14,800 --> 01:00:23,560
jump to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> to this location</font><font color="#E5E5E5"> so I'm</font>

1130
01:00:17,859 --> 01:00:30,970
gonna put a breakpoint here<font color="#E5E5E5"> copy and do</font>

1131
01:00:23,560 --> 01:00:32,859
<font color="#CCCCCC">EP and paste so we got the breakpoint</font><font color="#E5E5E5"> so</font>

1132
01:00:30,970 --> 01:00:36,549
if I were to<font color="#E5E5E5"> scroll</font><font color="#CCCCCC"> down this is</font><font color="#E5E5E5"> where I</font>

1133
01:00:32,859 --> 01:00:39,609
want to<font color="#E5E5E5"> go so when we have all these</font>

1134
01:00:36,550 --> 01:00:42,819
these calls we<font color="#E5E5E5"> want to make</font><font color="#CCCCCC"> sure we</font><font color="#E5E5E5"> can</font>

1135
01:00:39,609 --> 01:00:46,509
<font color="#CCCCCC">make</font><font color="#E5E5E5"> it to this point so the defining</font>

1136
01:00:42,819 --> 01:00:49,150
<font color="#E5E5E5">jump call here we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> turn this flag</font>

1137
01:00:46,510 --> 01:00:51,640
<font color="#CCCCCC">to and</font><font color="#E5E5E5"> this is where the flag is change</font>

1138
01:00:49,150 --> 01:00:55,930
that<font color="#CCCCCC"> to force the jump or if we're not</font>

1139
01:00:51,640 --> 01:00:58,470
do the<font color="#E5E5E5"> job so if I were to step through</font>

1140
01:00:55,930 --> 01:01:03,250
this and it's gonna be painful

1141
01:00:58,470 --> 01:01:07,828
oops I'm in when I<font color="#E5E5E5"> Annette you see that</font>

1142
01:01:03,250 --> 01:01:07,829
I'm already<font color="#CCCCCC"> in that DLL I was mentioning</font>

1143
01:01:08,250 --> 01:01:11,710
<font color="#E5E5E5">see</font><font color="#CCCCCC"> this is one you want to step over</font>

1144
01:01:10,270 --> 01:01:17,550
these functions you don't really<font color="#CCCCCC"> care</font>

1145
01:01:11,710 --> 01:01:19,200
<font color="#E5E5E5">but runs are not all the way to return</font>

1146
01:01:17,550 --> 01:01:24,809
so I'm impressed

1147
01:01:19,200 --> 01:01:26,549
<font color="#CCCCCC">f8 alright so that was</font><font color="#E5E5E5"> successful and</font>

1148
01:01:24,809 --> 01:01:32,240
it's not<font color="#E5E5E5"> gonna do the jump we want to</font>

1149
01:01:26,549 --> 01:01:32,240
keep<font color="#CCCCCC"> going</font><font color="#E5E5E5"> that's okay</font>

1150
01:01:32,270 --> 01:01:45,530
<font color="#CCCCCC">Internet okay all right yeah we want</font><font color="#E5E5E5"> to</font>

1151
01:01:39,359 --> 01:01:45,529
get that jump<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> keep going</font>

1152
01:01:46,369 --> 01:02:09,930
<font color="#E5E5E5">yep keep</font><font color="#CCCCCC"> going yep</font><font color="#E5E5E5"> give it a second up</font>

1153
01:02:04,190 --> 01:02:17,220
<font color="#E5E5E5">there we go there okay when I net</font><font color="#CCCCCC"> keep</font>

1154
01:02:09,930 --> 01:02:20,390
<font color="#CCCCCC">going and</font><font color="#E5E5E5"> I really should</font><font color="#CCCCCC"> have so if you</font>

1155
01:02:17,220 --> 01:02:20,390
<font color="#E5E5E5">get sick</font><font color="#CCCCCC"> of doing</font><font color="#E5E5E5"> that</font>

1156
01:02:20,480 --> 01:02:31,079
<font color="#E5E5E5">let's see internet read file let's just</font>

1157
01:02:27,660 --> 01:02:37,250
<font color="#E5E5E5">jump to this call copy put</font><font color="#CCCCCC"> a breakpoint</font>

1158
01:02:31,079 --> 01:02:49,170
there that way you can skip through<font color="#E5E5E5"> it</font>

1159
01:02:37,250 --> 01:02:50,609
there we go oh see this is why you

1160
01:02:49,170 --> 01:02:53,180
have all<font color="#E5E5E5"> these nice break points so you</font>

1161
01:02:50,609 --> 01:02:53,180
know where to<font color="#E5E5E5"> go</font>

1162
01:03:23,260 --> 01:03:34,640
there we go<font color="#E5E5E5"> all right so we want to</font>

1163
01:03:31,430 --> 01:03:39,100
force the jump here so we change this

1164
01:03:34,640 --> 01:03:41,450
flag<font color="#E5E5E5"> to zero and</font><font color="#CCCCCC"> it'll jump for us</font>

1165
01:03:39,100 --> 01:03:47,799
because<font color="#E5E5E5"> it didn't connect</font>

1166
01:03:41,450 --> 01:03:47,799
so after this call we want<font color="#E5E5E5"> to jump again</font>

1167
01:03:49,120 --> 01:03:56,270
<font color="#E5E5E5">perfect so we're going to force the jump</font>

1168
01:03:51,680 --> 01:04:01,419
<font color="#E5E5E5">change it to zero awesome</font><font color="#CCCCCC"> now we made it</font>

1169
01:03:56,270 --> 01:04:04,850
to the<font color="#CCCCCC"> Internet close handle here and</font>

1170
01:04:01,420 --> 01:04:09,410
<font color="#CCCCCC">now we're going to compare</font><font color="#E5E5E5"> obviously an</font>

1171
01:04:04,850 --> 01:04:12,319
empty<font color="#CCCCCC"> location to lmao so we</font><font color="#E5E5E5"> just have</font>

1172
01:04:09,410 --> 01:04:17,020
<font color="#E5E5E5">to keep changing the flag in order to</font>

1173
01:04:12,320 --> 01:04:23,750
get past this little<font color="#CCCCCC"> shake check here</font>

1174
01:04:17,020 --> 01:04:25,280
change this flag it's very painful this

1175
01:04:23,750 --> 01:04:32,630
<font color="#E5E5E5">is why you want to automate</font><font color="#CCCCCC"> stuff with</font>

1176
01:04:25,280 --> 01:04:36,290
the debugger<font color="#E5E5E5"> cool so we made</font><font color="#CCCCCC"> it past</font>

1177
01:04:32,630 --> 01:04:39,350
that<font color="#E5E5E5"> point</font><font color="#CCCCCC"> if we run</font><font color="#E5E5E5"> the rest of it</font>

1178
01:04:36,290 --> 01:04:42,850
there should be a message box<font color="#E5E5E5"> that comes</font>

1179
01:04:39,350 --> 01:04:47,210
<font color="#E5E5E5">up so</font><font color="#CCCCCC"> I'm gonna run</font><font color="#E5E5E5"> the rest of this oh</font>

1180
01:04:42,850 --> 01:04:50,270
yo this<font color="#CCCCCC"> is dope awesome</font>

1181
01:04:47,210 --> 01:04:54,320
so so what did it do after<font color="#CCCCCC"> that this</font>

1182
01:04:50,270 --> 01:04:57,440
<font color="#CCCCCC">this part I'll explain like later on on</font>

1183
01:04:54,320 --> 01:04:59,060
<font color="#E5E5E5">your own when you want to you know do</font>

1184
01:04:57,440 --> 01:05:02,150
this at<font color="#CCCCCC"> home you can go through the</font>

1185
01:04:59,060 --> 01:05:05,330
<font color="#E5E5E5">whole</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> and see what happens</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it</font>

1186
01:05:02,150 --> 01:05:12,260
should oops<font color="#CCCCCC"> I don't know why I keep</font>

1187
01:05:05,330 --> 01:05:14,900
<font color="#CCCCCC">doing them it should get you to this</font>

1188
01:05:12,260 --> 01:05:17,150
<font color="#CCCCCC">point so if you successfully debug</font>

1189
01:05:14,900 --> 01:05:19,069
through the program

1190
01:05:17,150 --> 01:05:20,990
it will open<font color="#CCCCCC"> up this icon from</font><font color="#E5E5E5"> the</font>

1191
01:05:19,069 --> 01:05:24,589
resources<font color="#E5E5E5"> and you'll see that when you</font>

1192
01:05:20,990 --> 01:05:26,990
<font color="#E5E5E5">when you fully map out the program on</font>

1193
01:05:24,589 --> 01:05:29,480
where you know it's calling these API

1194
01:05:26,990 --> 01:05:33,500
calls to<font color="#E5E5E5"> open up the resource drop this</font>

1195
01:05:29,480 --> 01:05:40,339
this<font color="#E5E5E5"> image to the disk</font><font color="#CCCCCC"> and I think the</font>

1196
01:05:33,500 --> 01:05:42,740
image is should<font color="#CCCCCC"> be where I ran it</font>

1197
01:05:40,339 --> 01:05:44,960
there's icon<font color="#E5E5E5"> dot gif so it's opening it</font>

1198
01:05:42,740 --> 01:05:46,759
<font color="#E5E5E5">up here and when is running the shell</font>

1199
01:05:44,960 --> 01:05:51,309
it's going to<font color="#E5E5E5"> open up this nice little</font>

1200
01:05:46,760 --> 01:05:53,150
<font color="#E5E5E5">gift so if you go to this location</font>

1201
01:05:51,309 --> 01:05:56,390
congratulations you know how to<font color="#E5E5E5"> reverse</font>

1202
01:05:53,150 --> 01:05:58,760
<font color="#CCCCCC">engineer so</font><font color="#E5E5E5"> and that's the point I</font>

1203
01:05:56,390 --> 01:06:00,379
wanted to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> across is you need to</font><font color="#E5E5E5"> make</font>

1204
01:05:58,760 --> 01:06:03,109
your map on where<font color="#CCCCCC"> to where you want to</font>

1205
01:06:00,380 --> 01:06:05,059
<font color="#E5E5E5">go and use the tools that you have for</font>

1206
01:06:03,109 --> 01:06:07,369
<font color="#E5E5E5">making a breakpoint</font><font color="#CCCCCC"> running to that</font>

1207
01:06:05,059 --> 01:06:10,160
<font color="#CCCCCC">breakpoint</font><font color="#E5E5E5"> knowing when to change the</font>

1208
01:06:07,369 --> 01:06:12,589
flag on the jump call<font color="#E5E5E5"> so you can get to</font>

1209
01:06:10,160 --> 01:06:15,230
the location<font color="#CCCCCC"> that you want and you can</font>

1210
01:06:12,589 --> 01:06:17,089
modify<font color="#E5E5E5"> anything in the stack anything</font><font color="#CCCCCC"> in</font>

1211
01:06:15,230 --> 01:06:19,579
the memory so that<font color="#E5E5E5"> it'll you could force</font>

1212
01:06:17,089 --> 01:06:21,549
it<font color="#E5E5E5"> to run properly</font><font color="#CCCCCC"> so it's like patching</font>

1213
01:06:19,579 --> 01:06:25,250
it in<font color="#E5E5E5"> real time</font>

1214
01:06:21,549 --> 01:06:28,700
but this because it's all<font color="#CCCCCC"> online you</font><font color="#E5E5E5"> can</font>

1215
01:06:25,250 --> 01:06:32,089
go explore<font color="#CCCCCC"> on your own and play with the</font>

1216
01:06:28,700 --> 01:06:35,390
the the debugger<font color="#E5E5E5"> all of the different</font>

1217
01:06:32,089 --> 01:06:37,730
API calls and you know<font color="#CCCCCC"> you can apply</font>

1218
01:06:35,390 --> 01:06:40,730
that<font color="#CCCCCC"> to any other Maur it just</font><font color="#E5E5E5"> gets more</font>

1219
01:06:37,730 --> 01:06:44,240
complicated when<font color="#E5E5E5"> you get into X or</font>

1220
01:06:40,730 --> 01:06:48,549
decoding routines<font color="#E5E5E5"> any type of encryption</font>

1221
01:06:44,240 --> 01:06:53,689
<font color="#E5E5E5">if you saw the crip 32</font><font color="#CCCCCC"> DLL it's doing a</font>

1222
01:06:48,549 --> 01:06:55,220
<font color="#E5E5E5">base 64 call so you can you'll see all</font>

1223
01:06:53,690 --> 01:07:01,450
<font color="#CCCCCC">of</font><font color="#E5E5E5"> that when you're playing with</font><font color="#CCCCCC"> it on</font>

1224
01:06:55,220 --> 01:07:08,919
<font color="#CCCCCC">your</font><font color="#E5E5E5"> own</font><font color="#CCCCCC"> so when it's all</font><font color="#E5E5E5"> said</font><font color="#CCCCCC"> and done</font>

1225
01:07:01,450 --> 01:07:08,919
and<font color="#CCCCCC"> I wonder am i over time</font><font color="#E5E5E5"> I'm not sure</font>

1226
01:07:12,330 --> 01:07:23,270
well just want to be sure<font color="#CCCCCC"> oh wow I have</font>

1227
01:07:21,090 --> 01:07:27,630
more time<font color="#E5E5E5"> than I thought</font>

1228
01:07:23,270 --> 01:07:33,690
<font color="#CCCCCC">wait nice when you get through all of</font>

1229
01:07:27,630 --> 01:07:35,340
<font color="#CCCCCC">that you can</font><font color="#E5E5E5"> create your final mapping</font>

1230
01:07:33,690 --> 01:07:37,830
of what it's actually doing so when you

1231
01:07:35,340 --> 01:07:40,440
go<font color="#E5E5E5"> through it again</font><font color="#CCCCCC"> you're it</font><font color="#E5E5E5"> and you</font>

1232
01:07:37,830 --> 01:07:43,650
<font color="#E5E5E5">run the pokémon</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> prospects</font>

1233
01:07:40,440 --> 01:07:46,140
<font color="#E5E5E5">Explorer</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can see that the reason why</font>

1234
01:07:43,650 --> 01:07:48,330
it's<font color="#E5E5E5"> checking this name is to make sure</font>

1235
01:07:46,140 --> 01:07:50,580
<font color="#CCCCCC">that you know it's creating a copy</font><font color="#E5E5E5"> of</font>

1236
01:07:48,330 --> 01:07:53,100
itself<font color="#E5E5E5"> placing it into the persistence</font>

1237
01:07:50,580 --> 01:07:55,590
location so it can<font color="#E5E5E5"> start up again so it</font>

1238
01:07:53,100 --> 01:07:57,000
creates<font color="#E5E5E5"> this persistence registry key</font>

1239
01:07:55,590 --> 01:07:59,640
that you saw<font color="#E5E5E5"> all the current version run</font>

1240
01:07:57,000 --> 01:08:01,830
which is<font color="#E5E5E5"> persistent</font><font color="#CCCCCC"> so when it</font><font color="#E5E5E5"> starts</font>

1241
01:07:59,640 --> 01:08:06,359
when you reboot the program<font color="#E5E5E5"> it'll start</font>

1242
01:08:01,830 --> 01:08:07,380
up this this file called<font color="#E5E5E5"> dopey</font><font color="#CCCCCC"> XE</font><font color="#E5E5E5"> and</font>

1243
01:08:06,360 --> 01:08:10,770
then<font color="#E5E5E5"> it'll</font><font color="#CCCCCC"> come and do a</font>

1244
01:08:07,380 --> 01:08:12,990
<font color="#CCCCCC">command-and-control out to a definitely</font>

1245
01:08:10,770 --> 01:08:16,200
<font color="#CCCCCC">not evil</font><font color="#E5E5E5"> slash a and then it will</font>

1246
01:08:12,990 --> 01:08:19,769
respond with<font color="#CCCCCC"> lmao and from there</font><font color="#E5E5E5"> it'll</font>

1247
01:08:16,200 --> 01:08:22,740
extract the resource<font color="#E5E5E5"> do a base64 decode</font>

1248
01:08:19,770 --> 01:08:26,490
and show that lovely<font color="#E5E5E5"> little gift through</font>

1249
01:08:22,740 --> 01:08:29,460
a shell execute so you can see how when

1250
01:08:26,490 --> 01:08:32,399
we went over<font color="#E5E5E5"> the dealer deals from the</font>

1251
01:08:29,460 --> 01:08:34,230
imports<font color="#E5E5E5"> that those do matter when you're</font>

1252
01:08:32,399 --> 01:08:38,339
trying<font color="#E5E5E5"> to figure out what it we're</font>

1253
01:08:34,229 --> 01:08:40,529
predicting what it's going to do so a

1254
01:08:38,339 --> 01:08:43,649
<font color="#CCCCCC">typical report</font><font color="#E5E5E5"> it'll have all</font><font color="#CCCCCC"> of the IOC</font>

1255
01:08:40,529 --> 01:08:45,269
<font color="#E5E5E5">s in it</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a very light report</font>

1256
01:08:43,649 --> 01:08:49,019
compared to what we<font color="#CCCCCC"> used to do with the</font>

1257
01:08:45,270 --> 01:08:50,520
<font color="#CCCCCC">DoD</font><font color="#E5E5E5"> but you know it has all of the</font>

1258
01:08:49,020 --> 01:08:53,730
<font color="#CCCCCC">information we went over the import</font>

1259
01:08:50,520 --> 01:08:55,950
functions remember<font color="#E5E5E5"> internet open a it's</font>

1260
01:08:53,729 --> 01:08:58,229
doing a message box<font color="#CCCCCC"> it's doing a shell</font>

1261
01:08:55,950 --> 01:09:00,830
execute<font color="#E5E5E5"> and you'll see all of that in</font>

1262
01:08:58,229 --> 01:09:03,719
there when you play with<font color="#CCCCCC"> it on</font><font color="#E5E5E5"> your own</font>

1263
01:09:00,830 --> 01:09:05,460
<font color="#CCCCCC">and then of course a network IOC is</font>

1264
01:09:03,720 --> 01:09:06,930
going to be there why do you need the

1265
01:09:05,460 --> 01:09:10,380
network<font color="#CCCCCC"> ICU because you need to tell</font>

1266
01:09:06,930 --> 01:09:12,210
your sock guys to shut that down<font color="#CCCCCC"> why do</font>

1267
01:09:10,380 --> 01:09:13,740
you<font color="#E5E5E5"> need the filesystem and registry</font>

1268
01:09:12,210 --> 01:09:15,330
<font color="#E5E5E5">keys because you need to revert all of</font>

1269
01:09:13,740 --> 01:09:18,630
that if you<font color="#E5E5E5"> don't have like a nice image</font>

1270
01:09:15,330 --> 01:09:20,670
<font color="#E5E5E5">for you to revert your desktop back to</font>

1271
01:09:18,630 --> 01:09:22,890
you have to go in there and change<font color="#E5E5E5"> the</font>

1272
01:09:20,670 --> 01:09:24,910
registry key back so that the<font color="#CCCCCC"> Maur</font>

1273
01:09:22,890 --> 01:09:27,130
doesn't use it again and then

1274
01:09:24,910 --> 01:09:29,229
how you do your remediation<font color="#E5E5E5"> this is all</font>

1275
01:09:27,130 --> 01:09:32,620
of these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> matter to the</font><font color="#E5E5E5"> person</font>

1276
01:09:29,229 --> 01:09:35,229
<font color="#E5E5E5">doing the remediation</font><font color="#CCCCCC"> or if you're</font>

1277
01:09:32,620 --> 01:09:37,420
writing<font color="#E5E5E5"> a network signature or am our</font>

1278
01:09:35,229 --> 01:09:39,959
signature<font color="#E5E5E5"> you're using all of these</font>

1279
01:09:37,420 --> 01:09:44,560
different IOC<font color="#E5E5E5"> s to create that signature</font>

1280
01:09:39,960 --> 01:09:47,260
<font color="#E5E5E5">so reverse engineering is just yeah you</font>

1281
01:09:44,560 --> 01:09:49,410
can recreate<font color="#CCCCCC"> it but</font><font color="#E5E5E5"> it's really meant</font>

1282
01:09:47,260 --> 01:09:55,570
for<font color="#E5E5E5"> you to gain information so you can</font>

1283
01:09:49,410 --> 01:10:01,480
<font color="#E5E5E5">clean up what's what's happened have any</font>

1284
01:09:55,570 --> 01:10:03,040
<font color="#E5E5E5">questions normally when I teach this I</font>

1285
01:10:01,480 --> 01:10:08,339
always<font color="#E5E5E5"> run out of time so I really</font><font color="#CCCCCC"> blew</font>

1286
01:10:03,040 --> 01:10:10,960
by with you guys yep

1287
01:10:08,340 --> 01:10:13,150
just<font color="#CCCCCC"> to kind of</font><font color="#E5E5E5"> recap the</font><font color="#CCCCCC"> whole process</font>

1288
01:10:10,960 --> 01:10:17,770
<font color="#E5E5E5">so basically you're starting by looking</font>

1289
01:10:13,150 --> 01:10:20,170
<font color="#CCCCCC">at the the imports</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> TV</font><font color="#E5E5E5"> and kind of</font>

1290
01:10:17,770 --> 01:10:21,880
basing your<font color="#CCCCCC"> triage around that is</font><font color="#E5E5E5"> that</font>

1291
01:10:20,170 --> 01:10:25,690
they're kind<font color="#CCCCCC"> of like the approach things</font>

1292
01:10:21,880 --> 01:10:27,910
<font color="#E5E5E5">yeah yeah</font><font color="#CCCCCC"> so what like I say if I go to</font>

1293
01:10:25,690 --> 01:10:31,530
virustotal<font color="#CCCCCC"> and I look at the detail</font>

1294
01:10:27,910 --> 01:10:34,000
panel<font color="#E5E5E5"> they really change the UI on this</font>

1295
01:10:31,530 --> 01:10:35,380
you can<font color="#E5E5E5"> see it already has the upx</font>

1296
01:10:34,000 --> 01:10:38,050
<font color="#E5E5E5">Packer but we saw that it was in the</font>

1297
01:10:35,380 --> 01:10:40,480
header so we don't need these programs

1298
01:10:38,050 --> 01:10:43,360
like are these nice online tools like

1299
01:10:40,480 --> 01:10:46,120
<font color="#E5E5E5">this you can do this all on the VM</font>

1300
01:10:43,360 --> 01:10:48,099
itself<font color="#E5E5E5"> or</font><font color="#CCCCCC"> you can automate</font><font color="#E5E5E5"> things with</font>

1301
01:10:46,120 --> 01:10:50,320
<font color="#E5E5E5">Python scripts</font><font color="#CCCCCC"> and that's what</font><font color="#E5E5E5"> I wanted</font>

1302
01:10:48,100 --> 01:10:53,230
<font color="#E5E5E5">to go</font><font color="#CCCCCC"> into say you want to replicate</font>

1303
01:10:50,320 --> 01:10:56,460
some of<font color="#E5E5E5"> the things in the VM itself</font><font color="#CCCCCC"> I</font>

1304
01:10:53,230 --> 01:11:03,490
put this lovely little script on here

1305
01:10:56,460 --> 01:11:06,520
<font color="#CCCCCC">let me open the</font><font color="#E5E5E5"> dam again that's really</font>

1306
01:11:03,490 --> 01:11:08,139
tiny so the<font color="#E5E5E5"> unicorn engine I really like</font>

1307
01:11:06,520 --> 01:11:12,520
to talk<font color="#E5E5E5"> about it because about this a</font>

1308
01:11:08,140 --> 01:11:19,020
unicorn<font color="#CCCCCC"> it's basically a ki mu emulation</font>

1309
01:11:12,520 --> 01:11:22,840
of a<font color="#E5E5E5"> CPU so you can run x86 arm whatever</font>

1310
01:11:19,020 --> 01:11:29,890
<font color="#CCCCCC">quickly built saving and</font><font color="#E5E5E5"> I have it here</font>

1311
01:11:22,840 --> 01:11:32,640
under unicorn<font color="#E5E5E5"> under the Tildy so I want</font>

1312
01:11:29,890 --> 01:11:32,640
<font color="#E5E5E5">to run</font>

1313
01:11:35,829 --> 01:11:49,869
so if you connected<font color="#CCCCCC"> your</font><font color="#E5E5E5"> host file and I</font>

1314
01:11:40,699 --> 01:11:49,869
run this file here<font color="#CCCCCC"> Python</font><font color="#E5E5E5"> slash desktop</font>

1315
01:11:52,119 --> 01:11:57,739
and I put this on<font color="#CCCCCC"> your thumb</font><font color="#E5E5E5"> drive it's</font>

1316
01:11:54,559 --> 01:12:03,079
not<font color="#CCCCCC"> online at all basically what it is</font>

1317
01:11:57,739 --> 01:12:05,329
it's doing<font color="#E5E5E5"> this nice CPU emulation like</font>

1318
01:12:03,079 --> 01:12:06,949
say you want<font color="#E5E5E5"> to take out</font><font color="#CCCCCC"> a x4 routine</font>

1319
01:12:05,329 --> 01:12:09,259
<font color="#CCCCCC">this is what basically</font><font color="#E5E5E5"> what it is doing</font>

1320
01:12:06,949 --> 01:12:11,598
<font color="#E5E5E5">and you want to replicate</font><font color="#CCCCCC"> it in a Python</font>

1321
01:12:09,260 --> 01:12:14,329
<font color="#E5E5E5">without having to run it you can do that</font>

1322
01:12:11,599 --> 01:12:17,510
and in<font color="#CCCCCC"> Python without</font><font color="#E5E5E5"> having to debug it</font>

1323
01:12:14,329 --> 01:12:20,659
<font color="#E5E5E5">so you can copy out</font><font color="#CCCCCC"> the assembly</font><font color="#E5E5E5"> stick</font>

1324
01:12:17,510 --> 01:12:26,209
it<font color="#E5E5E5"> in there as like</font><font color="#CCCCCC"> shell code and see</font>

1325
01:12:20,659 --> 01:12:28,190
like what the encrypted string is this

1326
01:12:26,209 --> 01:12:33,349
is<font color="#E5E5E5"> very helpful when you're</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> re</font>

1327
01:12:28,190 --> 01:12:39,469
<font color="#E5E5E5">CTFs so and you can play with that if</font>

1328
01:12:33,349 --> 01:12:42,829
you want to you can see I<font color="#CCCCCC"> put</font><font color="#E5E5E5"> the nice</font>

1329
01:12:39,469 --> 01:12:45,440
little shell code there for X or you can

1330
01:12:42,829 --> 01:12:48,289
find<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this on exploit exploit</font>

1331
01:12:45,440 --> 01:12:50,388
<font color="#E5E5E5">DB and copy out</font><font color="#CCCCCC"> the shell code there and</font>

1332
01:12:48,289 --> 01:12:53,360
<font color="#E5E5E5">kind of emulate it with</font><font color="#CCCCCC"> unicorn engine</font>

1333
01:12:50,389 --> 01:12:57,170
and see what it<font color="#E5E5E5"> does and you can fill in</font>

1334
01:12:53,360 --> 01:13:01,308
like say you want<font color="#E5E5E5"> to fill in the</font>

1335
01:12:57,170 --> 01:13:03,709
different<font color="#CCCCCC"> add registers already like you</font>

1336
01:13:01,309 --> 01:13:05,840
know what address<font color="#E5E5E5"> it is where the</font>

1337
01:13:03,709 --> 01:13:07,429
address<font color="#E5E5E5"> starts this is where it becomes</font>

1338
01:13:05,840 --> 01:13:09,499
important where you have to<font color="#E5E5E5"> know where</font>

1339
01:13:07,429 --> 01:13:13,039
everything exists in memory like where

1340
01:13:09,499 --> 01:13:16,579
the program starts with offset the stack

1341
01:13:13,039 --> 01:13:19,219
is what offset a certain function<font color="#E5E5E5"> is</font>

1342
01:13:16,579 --> 01:13:22,610
because that'll help<font color="#E5E5E5"> you figure out</font>

1343
01:13:19,219 --> 01:13:28,639
what's going on and navigate through<font color="#E5E5E5"> the</font>

1344
01:13:22,610 --> 01:13:31,789
debugging so all the tools are there

1345
01:13:28,639 --> 01:13:34,820
you have the VMS you have them our to

1346
01:13:31,789 --> 01:13:37,130
play with<font color="#E5E5E5"> I recommend you not using like</font>

1347
01:13:34,820 --> 01:13:40,159
real<font color="#CCCCCC"> malware yet and just play with</font>

1348
01:13:37,130 --> 01:13:43,010
programs<font color="#E5E5E5"> unless</font><font color="#CCCCCC"> you're game and when you</font>

1349
01:13:40,159 --> 01:13:46,848
feel<font color="#E5E5E5"> comfortable to move on to re 102</font>

1350
01:13:43,010 --> 01:13:47,600
which is actual<font color="#E5E5E5"> room</font><font color="#CCCCCC"> hour it's based</font><font color="#E5E5E5"> off</font>

1351
01:13:46,849 --> 01:13:49,400
the pack

1352
01:13:47,600 --> 01:13:51,290
is based off this<font color="#E5E5E5"> malware called</font><font color="#CCCCCC"> ron</font>

1353
01:13:49,400 --> 01:13:55,190
<font color="#CCCCCC">bartek i think it's the same</font><font color="#E5E5E5"> author</font><font color="#CCCCCC"> I</font>

1354
01:13:51,290 --> 01:13:57,110
don't know<font color="#CCCCCC"> you</font><font color="#E5E5E5"> could tell when you start</font>

1355
01:13:55,190 --> 01:13:58,339
reversing malware you can tell like<font color="#CCCCCC"> when</font>

1356
01:13:57,110 --> 01:14:00,410
there's two different authors because

1357
01:13:58,340 --> 01:14:01,970
<font color="#E5E5E5">they'll have really shitty like code</font>

1358
01:14:00,410 --> 01:14:03,730
that's that's<font color="#E5E5E5"> been packed</font>

1359
01:14:01,970 --> 01:14:06,320
well the<font color="#CCCCCC"> packers like really nicely</font>

1360
01:14:03,730 --> 01:14:08,629
<font color="#E5E5E5">created so you could tell they bought</font>

1361
01:14:06,320 --> 01:14:12,759
that<font color="#CCCCCC"> and they wrap their shitty Bower in</font>

1362
01:14:08,630 --> 01:14:15,620
it so it's kind of<font color="#E5E5E5"> like</font><font color="#CCCCCC"> water cry</font><font color="#E5E5E5"> so</font>

1363
01:14:12,760 --> 01:14:18,680
<font color="#CCCCCC">pearl blue does</font><font color="#E5E5E5"> anyone know why it's</font>

1364
01:14:15,620 --> 01:14:20,660
called<font color="#E5E5E5"> internal blue no</font><font color="#CCCCCC"> because when</font>

1365
01:14:18,680 --> 01:14:22,940
<font color="#E5E5E5">they were developing it</font><font color="#CCCCCC"> and I say it</font>

1366
01:14:20,660 --> 01:14:24,530
would always blue screen the<font color="#E5E5E5"> box so it</font>

1367
01:14:22,940 --> 01:14:27,860
<font color="#E5E5E5">took them many years to get it to a</font>

1368
01:14:24,530 --> 01:14:30,469
point<font color="#E5E5E5"> where</font><font color="#CCCCCC"> it was usable</font><font color="#E5E5E5"> so this whole</font>

1369
01:14:27,860 --> 01:14:32,929
like group of exploits it's called<font color="#CCCCCC"> a</font>

1370
01:14:30,470 --> 01:14:36,590
<font color="#CCCCCC">turn on blue</font><font color="#E5E5E5"> because of that reason so</font>

1371
01:14:32,930 --> 01:14:38,540
eternal blue is wonderfully done exploit

1372
01:14:36,590 --> 01:14:42,770
however the malware itself that was

1373
01:14:38,540 --> 01:14:45,950
encapsulated<font color="#CCCCCC"> it was</font><font color="#E5E5E5"> piece you could</font>

1374
01:14:42,770 --> 01:14:47,810
tell so you<font color="#CCCCCC"> know it's things</font><font color="#E5E5E5"> like that</font>

1375
01:14:45,950 --> 01:14:50,120
<font color="#CCCCCC">when you start</font><font color="#E5E5E5"> to reverse you figure</font><font color="#CCCCCC"> out</font>

1376
01:14:47,810 --> 01:14:52,640
<font color="#E5E5E5">oh why did this guy do that this way he</font>

1377
01:14:50,120 --> 01:14:54,920
could have<font color="#E5E5E5"> done it</font><font color="#CCCCCC"> this way it kind of</font>

1378
01:14:52,640 --> 01:15:11,680
gives<font color="#E5E5E5"> you an</font><font color="#CCCCCC"> identity to</font><font color="#E5E5E5"> who that</font>

1379
01:14:54,920 --> 01:15:14,660
malware author is so in the strings

1380
01:15:11,680 --> 01:15:17,450
<font color="#E5E5E5">location it's really good and a and dot</font>

1381
01:15:14,660 --> 01:15:20,000
data or<font color="#E5E5E5"> our data in those sections</font><font color="#CCCCCC"> those</font>

1382
01:15:17,450 --> 01:15:22,639
are where<font color="#CCCCCC"> all of the offsets are for</font>

1383
01:15:20,000 --> 01:15:24,860
<font color="#E5E5E5">data that it references</font><font color="#CCCCCC"> and so there's a</font>

1384
01:15:22,640 --> 01:15:27,650
nice<font color="#E5E5E5"> little table so in that</font><font color="#CCCCCC"> table you</font>

1385
01:15:24,860 --> 01:15:29,210
<font color="#CCCCCC">see here's the</font><font color="#E5E5E5"> current version run</font>

1386
01:15:27,650 --> 01:15:33,009
here's that junk string which is

1387
01:15:29,210 --> 01:15:38,090
<font color="#E5E5E5">actually definitely not evil calm and</font>

1388
01:15:33,010 --> 01:15:40,850
<font color="#CCCCCC">xor encryption so usually when you see</font>

1389
01:15:38,090 --> 01:15:43,370
huge chunks of<font color="#E5E5E5"> data that's referenced in</font>

1390
01:15:40,850 --> 01:15:52,760
our data is probably another exe or

1391
01:15:43,370 --> 01:15:55,550
<font color="#CCCCCC">shellcode so like in wanna cry it has it</font>

1392
01:15:52,760 --> 01:15:58,190
has<font color="#CCCCCC"> a huge</font><font color="#E5E5E5"> section of junk data and it</font>

1393
01:15:55,550 --> 01:16:00,080
decrypts that into memory<font color="#E5E5E5"> and you'll see</font>

1394
01:15:58,190 --> 01:16:02,960
it you'll<font color="#CCCCCC"> see it</font><font color="#E5E5E5"> reference in our data</font>

1395
01:16:00,080 --> 01:16:04,910
or even<font color="#E5E5E5"> in the resource you'll see that</font>

1396
01:16:02,960 --> 01:16:07,550
<font color="#E5E5E5">and it'll load it up into memory</font>

1397
01:16:04,910 --> 01:16:09,889
somewhere<font color="#E5E5E5"> but there's always a</font><font color="#CCCCCC"> function</font>

1398
01:16:07,550 --> 01:16:12,200
usually<font color="#E5E5E5"> right</font><font color="#CCCCCC"> after when it's being</font>

1399
01:16:09,890 --> 01:16:14,410
<font color="#E5E5E5">loaded that it's going to do the</font>

1400
01:16:12,200 --> 01:16:16,940
decryption<font color="#CCCCCC"> so you'll see</font><font color="#E5E5E5"> that pattern</font><font color="#CCCCCC"> so</font>

1401
01:16:14,410 --> 01:16:18,830
<font color="#E5E5E5">when you start to look at</font><font color="#CCCCCC"> Mao or you'll</font>

1402
01:16:16,940 --> 01:16:21,950
see different<font color="#CCCCCC"> patterns on when strings</font>

1403
01:16:18,830 --> 01:16:24,920
<font color="#E5E5E5">and data is being processed and like</font>

1404
01:16:21,950 --> 01:16:27,620
normally you'll see here's the the in

1405
01:16:24,920 --> 01:16:29,830
the<font color="#E5E5E5"> C at least here's the data</font><font color="#CCCCCC"> it's</font>

1406
01:16:27,620 --> 01:16:32,240
gonna copy<font color="#CCCCCC"> its going to allocate</font><font color="#E5E5E5"> a new</font>

1407
01:16:29,830 --> 01:16:34,130
<font color="#E5E5E5">portion of memory it's going to change</font>

1408
01:16:32,240 --> 01:16:36,230
<font color="#E5E5E5">that married executable for shellcode</font>

1409
01:16:34,130 --> 01:16:38,750
<font color="#E5E5E5">right so it's written you'll see the</font>

1410
01:16:36,230 --> 01:16:41,480
virtual protect to turn to executable

1411
01:16:38,750 --> 01:16:43,910
<font color="#E5E5E5">and then it'll copy that using like mem</font>

1412
01:16:41,480 --> 01:16:46,879
copy or some stupid thing<font color="#CCCCCC"> like that or</font>

1413
01:16:43,910 --> 01:16:49,940
you know<font color="#CCCCCC"> just copy</font><font color="#E5E5E5"> it manually and</font><font color="#CCCCCC"> then</font>

1414
01:16:46,880 --> 01:16:53,270
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> jump to the</font><font color="#CCCCCC"> start of</font><font color="#E5E5E5"> that new</font>

1415
01:16:49,940 --> 01:16:55,639
memory location so if it's faster<font color="#CCCCCC"> for</font>

1416
01:16:53,270 --> 01:16:57,590
you can find any time it does a virtual

1417
01:16:55,640 --> 01:16:59,480
lock<font color="#E5E5E5"> because that's we're gonna put the</font>

1418
01:16:57,590 --> 01:17:03,200
new memory and that's where the juicy

1419
01:16:59,480 --> 01:17:05,959
stuff<font color="#E5E5E5"> is nowadays</font><font color="#CCCCCC"> malware</font><font color="#E5E5E5"> is using more</font>

1420
01:17:03,200 --> 01:17:09,559
memory locations to execute its code to

1421
01:17:05,960 --> 01:17:11,150
bypass<font color="#E5E5E5"> a V and this is kind of like the</font>

1422
01:17:09,560 --> 01:17:13,910
trend<font color="#E5E5E5"> that I'm seeing</font><font color="#CCCCCC"> unless you're</font>

1423
01:17:11,150 --> 01:17:17,080
doing dotnet which just means they the

1424
01:17:13,910 --> 01:17:17,080
malware<font color="#CCCCCC"> authors don't</font><font color="#E5E5E5"> know how to code</font>

1425
01:17:18,430 --> 01:17:25,250
so any<font color="#E5E5E5"> other questions</font><font color="#CCCCCC"> a lot of this</font>

1426
01:17:23,030 --> 01:17:40,700
time is<font color="#E5E5E5"> for</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> to ask questions</font><font color="#CCCCCC"> I</font>

1427
01:17:25,250 --> 01:17:45,350
didn't realize I<font color="#CCCCCC"> had so much time yeah</font>

1428
01:17:40,700 --> 01:17:47,920
and the top tab<font color="#CCCCCC"> there so actually is</font>

1429
01:17:45,350 --> 01:17:53,480
<font color="#CCCCCC">because we're not we did not okay</font>

1430
01:17:47,920 --> 01:17:58,000
oh yeah see<font color="#E5E5E5"> yeah so if you use the PE</font>

1431
01:17:53,480 --> 01:17:58,000
<font color="#E5E5E5">Explorer and I open it up</font><font color="#CCCCCC"> again</font>

1432
01:18:05,840 --> 01:18:15,809
here's the unknown<font color="#CCCCCC"> Exe rename</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> I open</font>

1433
01:18:11,399 --> 01:18:17,879
it up with<font color="#E5E5E5"> PE</font><font color="#CCCCCC"> explore it automatically</font>

1434
01:18:15,809 --> 01:18:26,189
unpacks it for you just<font color="#CCCCCC"> have to save it</font>

1435
01:18:17,879 --> 01:18:28,469
<font color="#E5E5E5">as unpack so right here so if you were</font>

1436
01:18:26,189 --> 01:18:30,359
to do<font color="#CCCCCC"> it through cff explorer and unpack</font>

1437
01:18:28,469 --> 01:18:33,300
it<font color="#E5E5E5"> that way it's not going to do</font><font color="#CCCCCC"> all of</font>

1438
01:18:30,359 --> 01:18:35,489
the import locations correctly<font color="#E5E5E5"> so what</font>

1439
01:18:33,300 --> 01:18:37,379
it does<font color="#E5E5E5"> is that it rebuilds the import</font>

1440
01:18:35,489 --> 01:18:39,780
address table<font color="#E5E5E5"> for</font><font color="#CCCCCC"> all of the deals</font>

1441
01:18:37,379 --> 01:18:42,749
that's<font color="#E5E5E5"> gonna call so the whole thing</font>

1442
01:18:39,780 --> 01:18:45,179
with packing is it'll have<font color="#CCCCCC"> all of the</font>

1443
01:18:42,749 --> 01:18:48,510
imports already there but<font color="#E5E5E5"> the code is</font>

1444
01:18:45,179 --> 01:18:51,689
<font color="#CCCCCC">just</font><font color="#E5E5E5"> compressed itself so if</font><font color="#CCCCCC"> you're up</font>

1445
01:18:48,510 --> 01:18:54,329
<font color="#CCCCCC">upx</font><font color="#E5E5E5"> unpacking it'll create a new memory</font>

1446
01:18:51,689 --> 01:18:57,090
space it'll allocate memory<font color="#CCCCCC"> it'll copy</font>

1447
01:18:54,329 --> 01:18:59,789
<font color="#E5E5E5">that compress code decompress</font><font color="#CCCCCC"> it into</font>

1448
01:18:57,090 --> 01:19:02,399
that new memory space turn on it to be

1449
01:18:59,789 --> 01:19:04,889
<font color="#E5E5E5">executable so it can jump</font><font color="#CCCCCC"> into that</font>

1450
01:19:02,399 --> 01:19:07,829
location<font color="#E5E5E5"> and start</font><font color="#CCCCCC"> executing the code</font>

1451
01:19:04,889 --> 01:19:10,349
there but<font color="#E5E5E5"> before it does that it has to</font>

1452
01:19:07,829 --> 01:19:13,320
rewrite all<font color="#E5E5E5"> of the address the import</font>

1453
01:19:10,349 --> 01:19:15,919
address<font color="#E5E5E5"> table so that the</font><font color="#CCCCCC"> nearly the</font>

1454
01:19:13,320 --> 01:19:18,688
<font color="#CCCCCC">compressed code can reference all of the</font>

1455
01:19:15,919 --> 01:19:21,809
import addresses that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know it was</font>

1456
01:19:18,689 --> 01:19:23,519
already there<font color="#CCCCCC"> so the address has changed</font>

1457
01:19:21,809 --> 01:19:26,699
because<font color="#E5E5E5"> it's in a new memory location</font>

1458
01:19:23,519 --> 01:19:28,949
which<font color="#CCCCCC"> is why I had you guys rebase</font><font color="#E5E5E5"> the</font>

1459
01:19:26,699 --> 01:19:33,598
<font color="#CCCCCC">ida pro so you can match up the</font>

1460
01:19:28,949 --> 01:19:35,848
<font color="#E5E5E5">addresses because it was unpacked so</font>

1461
01:19:33,599 --> 01:19:38,729
anytime you have<font color="#CCCCCC"> shellcode you would</font>

1462
01:19:35,849 --> 01:19:41,609
have to rebase<font color="#CCCCCC"> ida</font><font color="#E5E5E5"> to that shellcode</font>

1463
01:19:38,729 --> 01:19:43,859
location where that<font color="#CCCCCC"> is in memory</font><font color="#E5E5E5"> so you</font>

1464
01:19:41,609 --> 01:19:45,149
<font color="#E5E5E5">can follow along and create your map</font><font color="#CCCCCC"> and</font>

1465
01:19:43,859 --> 01:19:52,320
set your<font color="#CCCCCC"> breakpoints</font><font color="#E5E5E5"> so you don't have</font>

1466
01:19:45,149 --> 01:19:55,229
to sit<font color="#CCCCCC"> there</font><font color="#E5E5E5"> and click f7 all the time</font><font color="#CCCCCC"> I</font>

1467
01:19:52,320 --> 01:19:57,389
don't<font color="#E5E5E5"> typically like</font><font color="#CCCCCC"> to but</font><font color="#E5E5E5"> sometimes it</font>

1468
01:19:55,229 --> 01:20:01,769
doesn't<font color="#E5E5E5"> work but you need</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> wind a bug</font>

1469
01:19:57,389 --> 01:20:07,919
<font color="#E5E5E5">if you're gonna do like</font><font color="#CCCCCC"> kernel stuff</font><font color="#E5E5E5"> but</font>

1470
01:20:01,769 --> 01:20:10,010
you<font color="#E5E5E5"> know it if you</font><font color="#CCCCCC"> like window bug kind</font>

1471
01:20:07,919 --> 01:20:13,070
of development is hard

1472
01:20:10,010 --> 01:20:15,830
and it's that place<font color="#E5E5E5"> come on we shave</font>

1473
01:20:13,070 --> 01:20:19,969
your<font color="#CCCCCC"> irises like if you find something</font>

1474
01:20:15,830 --> 01:20:22,820
<font color="#CCCCCC">that you know I need</font><font color="#E5E5E5"> to pick up and</font><font color="#CCCCCC"> give</font>

1475
01:20:19,970 --> 01:20:27,460
<font color="#CCCCCC">you this analysis and you have this time</font>

1476
01:20:22,820 --> 01:20:31,940
to<font color="#E5E5E5"> report but now yeah</font><font color="#CCCCCC"> so there are</font><font color="#E5E5E5"> like</font>

1477
01:20:27,460 --> 01:20:36,470
<font color="#E5E5E5">open source like community</font><font color="#CCCCCC"> io sees that</font>

1478
01:20:31,940 --> 01:20:39,710
people use like<font color="#CCCCCC"> yara snort signatures</font>

1479
01:20:36,470 --> 01:20:41,660
what is it the mandiant signatures that

1480
01:20:39,710 --> 01:20:43,580
they have<font color="#E5E5E5"> there</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> are open</font><font color="#CCCCCC"> source</font>

1481
01:20:41,660 --> 01:20:44,000
ones but normally<font color="#CCCCCC"> people don't</font><font color="#E5E5E5"> like to</font>

1482
01:20:43,580 --> 01:20:49,510
share

1483
01:20:44,000 --> 01:20:53,810
that's a I don't<font color="#E5E5E5"> know why if you're on</font>

1484
01:20:49,510 --> 01:20:56,239
there there's some I don't<font color="#E5E5E5"> know you can</font>

1485
01:20:53,810 --> 01:20:57,620
test out your signatures on virustotal

1486
01:20:56,239 --> 01:20:59,989
intelligence if you have one of those

1487
01:20:57,620 --> 01:21:03,920
<font color="#CCCCCC">accounts that</font><font color="#E5E5E5"> you are a signature but</font>

1488
01:20:59,989 --> 01:21:05,809
typically you know<font color="#E5E5E5"> um normally what we</font>

1489
01:21:03,920 --> 01:21:07,400
do is<font color="#CCCCCC"> we go out</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> all of the</font>

1490
01:21:05,810 --> 01:21:11,690
different<font color="#CCCCCC"> malware reports and scrape</font>

1491
01:21:07,400 --> 01:21:15,429
them for<font color="#E5E5E5"> iOS</font><font color="#CCCCCC"> es you just write a Python</font>

1492
01:21:11,690 --> 01:21:15,429
script<font color="#CCCCCC"> go it's great</font>

1493
01:21:16,810 --> 01:21:29,930
but anyways I'm kind of sad that<font color="#CCCCCC"> I had</font>

1494
01:21:22,790 --> 01:21:31,820
so much time yeah<font color="#E5E5E5"> and if you have a</font>

1495
01:21:29,930 --> 01:21:33,520
chance you're gonna start the<font color="#CCCCCC"> Flareon</font>

1496
01:21:31,820 --> 01:21:36,769
challenge

1497
01:21:33,520 --> 01:21:38,930
what is it<font color="#CCCCCC"> Flareon it's basically a</font>

1498
01:21:36,770 --> 01:21:44,290
reverse engineering challenge<font color="#E5E5E5"> you may be</font>

1499
01:21:38,930 --> 01:21:47,330
able<font color="#E5E5E5"> to get through one through three</font>

1500
01:21:44,290 --> 01:21:49,989
<font color="#E5E5E5">after you're taking this course it's</font>

1501
01:21:47,330 --> 01:21:49,989
pretty simple

1502
01:22:02,780 --> 01:22:07,349
it's basically a<font color="#E5E5E5"> reverse engineering CTF</font>

1503
01:22:05,610 --> 01:22:09,780
<font color="#CCCCCC">which is really fun it's just a</font><font color="#E5E5E5"> bunch of</font>

1504
01:22:07,350 --> 01:22:26,280
puzzles<font color="#CCCCCC"> not real malware I recommend not</font>

1505
01:22:09,780 --> 01:22:29,429
<font color="#E5E5E5">using real</font><font color="#CCCCCC"> Maori yet yeah about six</font>

1506
01:22:26,280 --> 01:22:32,250
<font color="#E5E5E5">months I mean there's multiple different</font>

1507
01:22:29,429 --> 01:22:34,949
tutorials out there<font color="#E5E5E5"> you know I started</font>

1508
01:22:32,250 --> 01:22:38,250
on the<font color="#CCCCCC"> Linnet tutorials but it's it's</font>

1509
01:22:34,949 --> 01:22:40,379
mainly for<font color="#E5E5E5"> cracking programs or</font><font color="#CCCCCC"> patent</font>

1510
01:22:38,250 --> 01:22:43,260
you<font color="#E5E5E5"> know passing programs not really</font><font color="#CCCCCC"> for</font>

1511
01:22:40,380 --> 01:22:45,150
<font color="#CCCCCC">Mauer now are you want to focus on the</font>

1512
01:22:43,260 --> 01:22:47,940
techniques that<font color="#E5E5E5"> I was talking</font><font color="#CCCCCC"> about so</font>

1513
01:22:45,150 --> 01:22:50,460
by looking<font color="#E5E5E5"> at different reports you</font>

1514
01:22:47,940 --> 01:22:53,009
start to recognize evasion techniques

1515
01:22:50,460 --> 01:22:56,250
<font color="#E5E5E5">and you'll start to see it in like</font>

1516
01:22:53,010 --> 01:22:59,429
<font color="#CCCCCC">malware or regular binaries depending on</font>

1517
01:22:56,250 --> 01:23:00,810
what you're<font color="#CCCCCC"> looking at l4 or</font><font color="#E5E5E5"> PE but the</font>

1518
01:22:59,429 --> 01:23:11,340
concept is<font color="#E5E5E5"> the same when you're doing</font>

1519
01:23:00,810 --> 01:23:12,780
their first engineering<font color="#CCCCCC"> okay yeah I mean</font>

1520
01:23:11,340 --> 01:23:14,550
it'll go<font color="#CCCCCC"> over the same concept as</font>

1521
01:23:12,780 --> 01:23:18,480
knowing where you want<font color="#E5E5E5"> to go before you</font>

1522
01:23:14,550 --> 01:23:23,369
get there<font color="#E5E5E5"> making your map if you do the</font>

1523
01:23:18,480 --> 01:23:26,280
<font color="#E5E5E5">re 102 on your own it it might be a much</font>

1524
01:23:23,369 --> 01:23:29,009
more clear because<font color="#E5E5E5"> it's actual malware</font>

1525
01:23:26,280 --> 01:23:32,130
and it's it's really layered<font color="#E5E5E5"> very</font>

1526
01:23:29,010 --> 01:23:33,570
layered so and a lot<font color="#CCCCCC"> of our these days</font>

1527
01:23:32,130 --> 01:23:36,719
are like that you<font color="#CCCCCC"> have a packer</font>

1528
01:23:33,570 --> 01:23:40,530
it's doing option it's doing shellcode

1529
01:23:36,719 --> 01:23:43,460
<font color="#CCCCCC">its unpacking a resource</font><font color="#E5E5E5"> it's running</font>

1530
01:23:40,530 --> 01:23:47,699
that resource<font color="#E5E5E5"> it's multiple layers of</font>

1531
01:23:43,460 --> 01:23:58,369
you know crap<font color="#E5E5E5"> but you know they they do</font>

1532
01:23:47,699 --> 01:23:58,369
that on<font color="#CCCCCC"> purpose to throw you off never</font>

1533
01:23:59,330 --> 01:24:06,449
know if it's in a VM I'm not gonna yeah

1534
01:24:02,699 --> 01:24:07,710
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean</font><font color="#CCCCCC"> I'll if I ran it and you</font>

1535
01:24:06,449 --> 01:24:11,489
know<font color="#E5E5E5"> I</font><font color="#CCCCCC"> miss</font><font color="#E5E5E5"> to something I can</font><font color="#CCCCCC"> always</font>

1536
01:24:07,710 --> 01:24:12,850
revert my snapshot back and it's<font color="#CCCCCC"> you're</font>

1537
01:24:11,489 --> 01:24:14,950
good

1538
01:24:12,850 --> 01:24:19,120
<font color="#CCCCCC">his poverty</font><font color="#E5E5E5"> you let it get to the end of</font>

1539
01:24:14,950 --> 01:24:22,420
execution yeah I yeah<font color="#CCCCCC"> I did</font><font color="#E5E5E5"> it earlier</font><font color="#CCCCCC"> I</font>

1540
01:24:19,120 --> 01:24:25,500
ran it and it disappeared right<font color="#CCCCCC"> so then</font>

1541
01:24:22,420 --> 01:24:28,120
I just restart it<font color="#CCCCCC"> or revert back to my</font>

1542
01:24:25,500 --> 01:24:33,850
snapshot<font color="#CCCCCC"> I think when I did want</font><font color="#E5E5E5"> to cry</font>

1543
01:24:28,120 --> 01:24:38,680
I had like<font color="#CCCCCC"> 10 snapshots</font><font color="#E5E5E5"> so and but I</font>

1544
01:24:33,850 --> 01:24:40,120
keep<font color="#E5E5E5"> my my Ida Pro database because I</font>

1545
01:24:38,680 --> 01:24:42,760
can<font color="#E5E5E5"> always go back</font><font color="#CCCCCC"> and see what</font>

1546
01:24:40,120 --> 01:24:46,120
functions I<font color="#CCCCCC"> rename them</font><font color="#E5E5E5"> to so I know</font>

1547
01:24:42,760 --> 01:24:49,480
what it is<font color="#CCCCCC"> so I</font><font color="#E5E5E5"> have like a nice little</font>

1548
01:24:46,120 --> 01:24:52,860
<font color="#E5E5E5">map</font><font color="#CCCCCC"> here it is</font><font color="#E5E5E5"> where can I go when I</font>

1549
01:24:49,480 --> 01:24:56,320
reverse it<font color="#CCCCCC"> again or debug it again yeah</font>

1550
01:24:52,860 --> 01:24:58,630
<font color="#E5E5E5">so it's really helpful</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep all</font><font color="#CCCCCC"> of</font>

1551
01:24:56,320 --> 01:25:05,259
<font color="#CCCCCC">that and you have to</font><font color="#E5E5E5"> be very organized</font>

1552
01:24:58,630 --> 01:25:07,240
<font color="#E5E5E5">as well</font><font color="#CCCCCC"> I I think my laptop here</font><font color="#E5E5E5"> is a</font>

1553
01:25:05,260 --> 01:25:13,000
<font color="#E5E5E5">dumpster fire</font><font color="#CCCCCC"> of how much malware is on</font>

1554
01:25:07,240 --> 01:25:17,110
it<font color="#CCCCCC"> so alright</font><font color="#E5E5E5"> guys I think I'm gonna</font>

1555
01:25:13,000 --> 01:25:20,530
wrap it<font color="#E5E5E5"> up here but hopefully you have</font>

1556
01:25:17,110 --> 01:25:23,790
all the tools now but I recommend<font color="#E5E5E5"> Ida</font>

1557
01:25:20,530 --> 01:25:23,790
<font color="#E5E5E5">Pro not free</font>

1558
01:25:26,320 --> 01:25:45,688
[Music]

