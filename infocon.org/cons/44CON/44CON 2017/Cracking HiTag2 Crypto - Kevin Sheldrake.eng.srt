1
00:00:00,030 --> 00:00:05,549
hello there I'm Carol Drake I'm gonna be

2
00:00:01,800 --> 00:00:08,220
talking<font color="#E5E5E5"> about</font><font color="#CCCCCC"> high tech</font><font color="#E5E5E5"> to RFID which is</font>

3
00:00:05,549 --> 00:00:11,370
low<font color="#CCCCCC"> frequency RFID cards with crypto</font>

4
00:00:08,220 --> 00:00:13,650
<font color="#E5E5E5">handshakes and authentication and</font>

5
00:00:11,370 --> 00:00:16,590
encryption<font color="#CCCCCC"> I was going to start by</font>

6
00:00:13,650 --> 00:00:18,029
showing<font color="#E5E5E5"> my lovely video</font><font color="#CCCCCC"> 44 con happiness</font>

7
00:00:16,590 --> 00:00:19,350
but<font color="#E5E5E5"> I've wasted so much time setting up</font>

8
00:00:18,029 --> 00:00:22,050
that you'll<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to go in it</font><font color="#E5E5E5"> for that on</font>

9
00:00:19,350 --> 00:00:23,670
<font color="#E5E5E5">YouTube so she searched YouTube for</font><font color="#CCCCCC"> 44</font>

10
00:00:22,050 --> 00:00:25,710
<font color="#E5E5E5">Korn happiness and you'll find a silly</font>

11
00:00:23,670 --> 00:00:29,910
video<font color="#CCCCCC"> I made a couple years ago that I</font>

12
00:00:25,710 --> 00:00:31,800
think is awesome<font color="#E5E5E5"> so normal slide this is</font>

13
00:00:29,910 --> 00:00:37,620
a bit about me is the normal stuff you'd

14
00:00:31,800 --> 00:00:40,110
expect<font color="#CCCCCC"> I do work in cyber clearly so the</font>

15
00:00:37,620 --> 00:00:42,870
first<font color="#CCCCCC"> question of course is why copy</font><font color="#E5E5E5"> 125</font>

16
00:00:40,110 --> 00:00:44,430
kilohertz RFID tags<font color="#E5E5E5"> and the answer is</font>

17
00:00:42,870 --> 00:00:46,739
because<font color="#CCCCCC"> they're used to secure</font><font color="#E5E5E5"> things</font>

18
00:00:44,430 --> 00:00:50,460
there are quite high asset<font color="#E5E5E5"> high value</font>

19
00:00:46,739 --> 00:00:52,800
assets so you<font color="#CCCCCC"> find them in cars</font>

20
00:00:50,460 --> 00:00:54,989
protecting<font color="#E5E5E5"> the immobilizers on a number</font>

21
00:00:52,800 --> 00:00:57,120
<font color="#E5E5E5">of cars</font><font color="#CCCCCC"> you find the</font><font color="#E5E5E5"> same crypto in use</font>

22
00:00:54,989 --> 00:00:59,430
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> 4 33</font><font color="#E5E5E5"> megahertz</font><font color="#CCCCCC"> Clippers that open</font>

23
00:00:57,120 --> 00:01:01,019
the doors<font color="#CCCCCC"> you find them in building</font>

24
00:00:59,430 --> 00:01:03,480
access<font color="#E5E5E5"> control</font><font color="#CCCCCC"> now I've not looked at</font>

25
00:01:01,020 --> 00:01:05,309
cars but the same technology<font color="#CCCCCC"> and the</font>

26
00:01:03,480 --> 00:01:07,289
<font color="#CCCCCC">same stuff would work in cars apparently</font>

27
00:01:05,309 --> 00:01:11,520
you might need<font color="#CCCCCC"> different antennas</font><font color="#E5E5E5"> I</font>

28
00:01:07,290 --> 00:01:13,140
haven't even looked at keys so if this

29
00:01:11,520 --> 00:01:14,280
doesn't<font color="#E5E5E5"> work</font><font color="#CCCCCC"> for you with your cars then</font>

30
00:01:13,140 --> 00:01:16,710
you might have<font color="#CCCCCC"> to do a bit of hardware</font>

31
00:01:14,280 --> 00:01:18,150
<font color="#CCCCCC">to make them work but basically</font><font color="#E5E5E5"> I people</font>

32
00:01:16,710 --> 00:01:20,789
use them to secure<font color="#E5E5E5"> things because they</font>

33
00:01:18,150 --> 00:01:22,920
<font color="#E5E5E5">think they're secure and obviously</font>

34
00:01:20,790 --> 00:01:25,650
they're not so I'll start quickly by

35
00:01:22,920 --> 00:01:26,670
talking about<font color="#CCCCCC"> a simple</font><font color="#E5E5E5"> RFID tag 125</font>

36
00:01:25,650 --> 00:01:28,229
kilohertz these are the ones you

37
00:01:26,670 --> 00:01:32,579
normally find when you're<font color="#E5E5E5"> doing a</font><font color="#CCCCCC"> normal</font>

38
00:01:28,229 --> 00:01:35,490
building access<font color="#E5E5E5"> control job so</font><font color="#CCCCCC"> am</font><font color="#E5E5E5"> 4102</font><font color="#CCCCCC"> S</font>

39
00:01:32,579 --> 00:01:37,649
or<font color="#E5E5E5"> Q 5 or unique kind of the names that</font>

40
00:01:35,490 --> 00:01:40,710
<font color="#CCCCCC">go under and they're basically a unique</font>

41
00:01:37,650 --> 00:01:42,150
identifier that<font color="#E5E5E5"> is preceded by a</font>

42
00:01:40,710 --> 00:01:43,860
synchronization<font color="#CCCCCC"> pattern</font><font color="#E5E5E5"> if a</font>

43
00:01:42,150 --> 00:01:46,170
synchronization<font color="#CCCCCC"> patterns usually a part</font>

44
00:01:43,860 --> 00:01:48,210
of the unique identifier<font color="#CCCCCC"> a technical</font>

45
00:01:46,170 --> 00:01:50,130
<font color="#CCCCCC">level not</font><font color="#E5E5E5"> that really matters when the</font>

46
00:01:48,210 --> 00:01:53,280
<font color="#E5E5E5">tags energized it repeatedly display</font>

47
00:01:50,130 --> 00:01:54,720
<font color="#CCCCCC">it's repeatedly sort of talks the unique</font>

48
00:01:53,280 --> 00:01:57,450
<font color="#CCCCCC">identifier over and</font><font color="#E5E5E5"> over and over again</font>

49
00:01:54,720 --> 00:01:59,820
and the reader<font color="#E5E5E5"> that's energized the tag</font>

50
00:01:57,450 --> 00:02:02,100
<font color="#E5E5E5">spots the synchronization pattern within</font>

51
00:01:59,820 --> 00:02:03,600
<font color="#E5E5E5">that stream and then just read whatever</font>

52
00:02:02,100 --> 00:02:05,158
<font color="#E5E5E5">comes after the synchronization pattern</font>

53
00:02:03,600 --> 00:02:07,469
and<font color="#E5E5E5"> that's the number it then uses</font><font color="#CCCCCC"> to</font>

54
00:02:05,159 --> 00:02:08,849
make access<font color="#E5E5E5"> control decisions so of</font>

55
00:02:07,469 --> 00:02:10,459
course<font color="#E5E5E5"> they're really easy to copy if</font>

56
00:02:08,848 --> 00:02:11,780
you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> copy those go on Amazon by a</font>

57
00:02:10,459 --> 00:02:13,740
4102

58
00:02:11,780 --> 00:02:15,930
<font color="#CCCCCC">RFID copier</font>

59
00:02:13,740 --> 00:02:17,640
and it's six quid or<font color="#E5E5E5"> nine quid or</font>

60
00:02:15,930 --> 00:02:20,880
something and it slipped a push button

61
00:02:17,640 --> 00:02:24,839
<font color="#E5E5E5">and you can copy those there's other</font>

62
00:02:20,880 --> 00:02:27,200
types of<font color="#E5E5E5"> tags like</font><font color="#CCCCCC"> T 5 5 5 7 s T 4 5 6 7</font>

63
00:02:24,840 --> 00:02:29,610
<font color="#CCCCCC">2 4</font><font color="#E5E5E5"> 5 7 7</font><font color="#CCCCCC"> s</font><font color="#E5E5E5"> all kind of same technology</font>

64
00:02:27,200 --> 00:02:31,260
and<font color="#E5E5E5"> again you can buy a copy of some</font>

65
00:02:29,610 --> 00:02:35,910
<font color="#CCCCCC">Amazon</font><font color="#E5E5E5"> little bit more</font><font color="#CCCCCC"> expensive</font><font color="#E5E5E5"> but you</font>

66
00:02:31,260 --> 00:02:37,079
can<font color="#CCCCCC"> do so</font><font color="#E5E5E5"> equally you could use an hour</font>

67
00:02:35,910 --> 00:02:38,970
fiddler which I'll be talking<font color="#CCCCCC"> about in a</font>

68
00:02:37,080 --> 00:02:40,170
minute<font color="#E5E5E5"> or</font><font color="#CCCCCC"> a fox mark for the similar</font>

69
00:02:38,970 --> 00:02:40,800
<font color="#E5E5E5">kind of jobs but they're very</font>

70
00:02:40,170 --> 00:02:42,149
straightforward

71
00:02:40,800 --> 00:02:45,330
they're basically broadcast their data

72
00:02:42,150 --> 00:02:46,800
in public<font color="#E5E5E5"> and so if you can read</font><font color="#CCCCCC"> that</font>

73
00:02:45,330 --> 00:02:48,360
data then you<font color="#CCCCCC"> can write that</font><font color="#E5E5E5"> to a new</font>

74
00:02:46,800 --> 00:02:51,330
tag and then you've got a copy<font color="#E5E5E5"> of the</font>

75
00:02:48,360 --> 00:02:54,890
tag<font color="#E5E5E5"> so no one</font><font color="#CCCCCC"> should be</font><font color="#E5E5E5"> using those who</font>

76
00:02:51,330 --> 00:02:58,710
build an<font color="#CCCCCC"> access control</font><font color="#E5E5E5"> everyone does so</font>

77
00:02:54,890 --> 00:03:02,100
avoid so quickly at the electronic level

78
00:02:58,710 --> 00:03:04,770
<font color="#E5E5E5">or the RF level how a 125 kilohertz tag</font>

79
00:03:02,100 --> 00:03:06,359
works<font color="#E5E5E5"> the they have no batteries</font><font color="#CCCCCC"> in them</font>

80
00:03:04,770 --> 00:03:09,060
<font color="#CCCCCC">I mean I'm imagining everyone in the</font>

81
00:03:06,360 --> 00:03:11,400
room has some idea what<font color="#CCCCCC"> RFID is but this</font>

82
00:03:09,060 --> 00:03:15,210
<font color="#E5E5E5">is just the background the reader</font>

83
00:03:11,400 --> 00:03:18,570
emanates<font color="#CCCCCC"> a field at 125 kilohertz the</font>

84
00:03:15,210 --> 00:03:22,410
tag itself energizes from the field

85
00:03:18,570 --> 00:03:25,220
power and that's what<font color="#CCCCCC"> acts as its</font><font color="#E5E5E5"> power</font>

86
00:03:22,410 --> 00:03:27,600
source essentially<font color="#E5E5E5"> and then the tag</font>

87
00:03:25,220 --> 00:03:29,760
modulates that field by dampen its coil

88
00:03:27,600 --> 00:03:32,190
or not you know you kind of binary

89
00:03:29,760 --> 00:03:34,679
<font color="#E5E5E5">pattern which the reader can then pick</font>

90
00:03:32,190 --> 00:03:36,120
up equally<font color="#E5E5E5"> if the reader wants to talk</font>

91
00:03:34,680 --> 00:03:38,310
to<font color="#CCCCCC"> the tag</font><font color="#E5E5E5"> let's say you want to program</font>

92
00:03:36,120 --> 00:03:39,840
<font color="#E5E5E5">the tag with an</font><font color="#CCCCCC"> e new data</font><font color="#E5E5E5"> then the</font>

93
00:03:38,310 --> 00:03:40,710
reader can modulate the field<font color="#E5E5E5"> itself</font>

94
00:03:39,840 --> 00:03:42,300
from the tag and<font color="#E5E5E5"> pick up those</font>

95
00:03:40,710 --> 00:03:44,520
modulations<font color="#E5E5E5"> so there'll be a little</font>

96
00:03:42,300 --> 00:03:46,770
capacitor within it to<font color="#E5E5E5"> cope with the</font>

97
00:03:44,520 --> 00:03:51,030
field<font color="#E5E5E5"> going on and off and stay powered</font>

98
00:03:46,770 --> 00:03:51,990
<font color="#E5E5E5">up so data modulation and encoding I'm</font>

99
00:03:51,030 --> 00:03:53,310
not going to talk about<font color="#CCCCCC"> this in</font><font color="#E5E5E5"> any</font>

100
00:03:51,990 --> 00:03:54,480
depth whatsoever but there's<font color="#E5E5E5"> different</font>

101
00:03:53,310 --> 00:03:56,280
types of modulation and there's

102
00:03:54,480 --> 00:03:57,690
different<font color="#E5E5E5"> types of encoding and if you</font>

103
00:03:56,280 --> 00:04:00,900
start playing<font color="#CCCCCC"> with RFID you'll become</font>

104
00:03:57,690 --> 00:04:02,780
<font color="#CCCCCC">very aware</font><font color="#E5E5E5"> these very quickly some are</font>

105
00:04:00,900 --> 00:04:05,970
easy to<font color="#CCCCCC"> use some are</font><font color="#E5E5E5"> not so easy to use</font>

106
00:04:02,780 --> 00:04:07,530
<font color="#E5E5E5">but you'll get used to this if you</font><font color="#CCCCCC"> get</font>

107
00:04:05,970 --> 00:04:09,600
anywhere<font color="#E5E5E5"> in the world of proxmark or al</font>

108
00:04:07,530 --> 00:04:11,160
fadela<font color="#E5E5E5"> they've both got</font><font color="#CCCCCC"> support forums</font>

109
00:04:09,600 --> 00:04:13,980
<font color="#E5E5E5">everyone's talking about modulation and</font>

110
00:04:11,160 --> 00:04:16,310
encoding so what would<font color="#E5E5E5"> we</font><font color="#CCCCCC"> want from a</font>

111
00:04:13,980 --> 00:04:18,750
secure 125 kilohertz<font color="#CCCCCC"> tag</font>

112
00:04:16,310 --> 00:04:20,670
well we'd want to<font color="#CCCCCC"> weight communications</font>

113
00:04:18,750 --> 00:04:23,250
so<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it set</font><font color="#E5E5E5"> up some kind of encrypted</font>

114
00:04:20,670 --> 00:04:25,169
channel<font color="#E5E5E5"> with some kind of or randomized</font>

115
00:04:23,250 --> 00:04:27,150
authentication<font color="#CCCCCC"> randomize because we</font>

116
00:04:25,169 --> 00:04:28,530
wouldn't<font color="#CCCCCC"> want</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> to be replayable</font>

117
00:04:27,150 --> 00:04:31,590
we'd<font color="#E5E5E5"> want authentication and encryption</font>

118
00:04:28,530 --> 00:04:33,210
because<font color="#E5E5E5"> we want it to be copyable so the</font>

119
00:04:31,590 --> 00:04:34,830
idea being that<font color="#E5E5E5"> if you can get if</font><font color="#CCCCCC"> you</font>

120
00:04:33,210 --> 00:04:35,969
got hold<font color="#E5E5E5"> of someone's tag you wouldn't</font>

121
00:04:34,830 --> 00:04:38,940
be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to read it you wouldn't be</font><font color="#CCCCCC"> able</font>

122
00:04:35,970 --> 00:04:41,160
<font color="#E5E5E5">to copy it and</font><font color="#CCCCCC"> if you could eavesdrop on</font>

123
00:04:38,940 --> 00:04:42,900
that tag talking to a reader<font color="#E5E5E5"> to</font><font color="#CCCCCC"> open</font><font color="#E5E5E5"> a</font>

124
00:04:41,160 --> 00:04:45,330
door then what you could eavesdrop

125
00:04:42,900 --> 00:04:47,159
wouldn't be enough<font color="#CCCCCC"> in order to copy the</font>

126
00:04:45,330 --> 00:04:49,199
tag<font color="#E5E5E5"> that's kind of what we what we'd</font>

127
00:04:47,160 --> 00:04:51,600
expect<font color="#E5E5E5"> so today I'm going to talk about</font>

128
00:04:49,199 --> 00:04:54,000
<font color="#CCCCCC">hi tag - in</font><font color="#E5E5E5"> password mode</font><font color="#CCCCCC"> very very</font>

129
00:04:51,600 --> 00:04:55,830
briefly<font color="#E5E5E5"> because it's awful and hi tag</font>

130
00:04:54,000 --> 00:04:56,940
doing crypto mode which is the

131
00:04:55,830 --> 00:05:00,330
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> one and that's where the</font>

132
00:04:56,940 --> 00:05:01,530
attacks coming<font color="#CCCCCC"> from there's lots of</font>

133
00:05:00,330 --> 00:05:02,460
<font color="#E5E5E5">things I won't be talking about and I'm</font>

134
00:05:01,530 --> 00:05:04,469
<font color="#CCCCCC">not going to go</font><font color="#E5E5E5"> through me in any</font>

135
00:05:02,460 --> 00:05:05,969
details but<font color="#E5E5E5"> if any of this is</font>

136
00:05:04,470 --> 00:05:07,590
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> to you there's a workshop</font>

137
00:05:05,970 --> 00:05:08,160
<font color="#CCCCCC">tomorrow at</font><font color="#E5E5E5"> half past 9:00 in the</font>

138
00:05:07,590 --> 00:05:10,799
morning

139
00:05:08,160 --> 00:05:12,180
Steve Lord did laugh a lot when<font color="#CCCCCC"> he told</font>

140
00:05:10,800 --> 00:05:14,880
<font color="#E5E5E5">me it was a half past</font><font color="#CCCCCC"> 9:00</font><font color="#E5E5E5"> in the</font>

141
00:05:12,180 --> 00:05:15,660
<font color="#CCCCCC">morning</font><font color="#E5E5E5"> and where I'll be doing</font><font color="#CCCCCC"> two</font>

142
00:05:14,880 --> 00:05:17,550
<font color="#CCCCCC">hours</font>

143
00:05:15,660 --> 00:05:20,039
I say workshop it's a two-hour lecture

144
00:05:17,550 --> 00:05:22,110
<font color="#E5E5E5">with interactive questions</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> there's</font>

145
00:05:20,039 --> 00:05:23,969
no like sit and<font color="#E5E5E5"> do type stuff</font><font color="#CCCCCC"> and do</font>

146
00:05:22,110 --> 00:05:25,500
stuff it's just<font color="#E5E5E5"> like watch and listen</font>

147
00:05:23,970 --> 00:05:27,360
and ask<font color="#CCCCCC"> questions where it doesn't</font><font color="#E5E5E5"> make</font>

148
00:05:25,500 --> 00:05:28,830
<font color="#CCCCCC">sense</font><font color="#E5E5E5"> but if any of this is</font><font color="#CCCCCC"> interesting</font>

149
00:05:27,360 --> 00:05:31,289
then you can<font color="#E5E5E5"> ask questions at the</font>

150
00:05:28,830 --> 00:05:33,090
workshop<font color="#E5E5E5"> rather than here if you've got</font>

151
00:05:31,289 --> 00:05:35,039
questions<font color="#E5E5E5"> about this bit this kind of</font>

152
00:05:33,090 --> 00:05:37,320
talk<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> ask at</font><font color="#E5E5E5"> the end it's</font>

153
00:05:35,039 --> 00:05:39,479
<font color="#CCCCCC">probably better so there was an academic</font>

154
00:05:37,320 --> 00:05:42,860
paper called gone in three hundred<font color="#CCCCCC"> sixty</font>

155
00:05:39,479 --> 00:05:46,740
<font color="#E5E5E5">Seconds hijacking with</font><font color="#CCCCCC"> hi tag to buy</font>

156
00:05:42,860 --> 00:05:50,639
<font color="#E5E5E5">adult</font><font color="#CCCCCC"> Garcia and bash</font><font color="#E5E5E5"> no this is from</font>

157
00:05:46,740 --> 00:05:52,169
<font color="#E5E5E5">2012 and this is a seminal paper</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you</font>

158
00:05:50,639 --> 00:05:53,310
look at the proxmark forums or the<font color="#CCCCCC"> are</font>

159
00:05:52,169 --> 00:05:55,590
fiddler forms there's a lot of people

160
00:05:53,310 --> 00:05:58,760
asking for implementations<font color="#E5E5E5"> of these</font>

161
00:05:55,590 --> 00:06:04,979
attacks because they let you<font color="#E5E5E5"> start cars</font>

162
00:05:58,760 --> 00:06:06,270
essentially I will<font color="#E5E5E5"> say that the sort of</font>

163
00:06:04,979 --> 00:06:07,560
the<font color="#CCCCCC"> authors went on and</font><font color="#E5E5E5"> last year</font>

164
00:06:06,270 --> 00:06:09,448
produced<font color="#E5E5E5"> a new paper called lock it and</font>

165
00:06:07,560 --> 00:06:10,740
still lose it<font color="#E5E5E5"> where they could do</font>

166
00:06:09,449 --> 00:06:12,900
everything much faster<font color="#E5E5E5"> and that's the</font>

167
00:06:10,740 --> 00:06:14,430
one<font color="#E5E5E5"> they got sued</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> Volkswagen over and</font>

168
00:06:12,900 --> 00:06:16,289
they<font color="#CCCCCC"> actually wrote in their paper we</font>

169
00:06:14,430 --> 00:06:18,960
<font color="#CCCCCC">can do we</font><font color="#E5E5E5"> can open the doors and start</font>

170
00:06:16,289 --> 00:06:20,789
up every<font color="#E5E5E5"> Volkswagen from 1990 to 2016</font>

171
00:06:18,960 --> 00:06:24,599
which also means every<font color="#E5E5E5"> see at every</font>

172
00:06:20,789 --> 00:06:26,969
Skoda<font color="#E5E5E5"> and every whatever the other cars</font>

173
00:06:24,599 --> 00:06:28,650
in<font color="#CCCCCC"> Aldi</font><font color="#E5E5E5"> they said we don't know</font><font color="#CCCCCC"> about</font>

174
00:06:26,970 --> 00:06:31,590
Lamborghinis<font color="#CCCCCC"> and Bugattis because no one</font>

175
00:06:28,650 --> 00:06:34,530
will<font color="#CCCCCC"> let us have one</font><font color="#E5E5E5"> to try but they</font>

176
00:06:31,590 --> 00:06:36,330
theorized<font color="#E5E5E5"> it would be possible</font><font color="#CCCCCC"> so yes if</font>

177
00:06:34,530 --> 00:06:39,390
Volkswagen took a great<font color="#CCCCCC"> interest in</font>

178
00:06:36,330 --> 00:06:41,460
<font color="#E5E5E5">their paper last year and certain</font>

179
00:06:39,390 --> 00:06:44,020
details didn't appear in<font color="#E5E5E5"> the paper</font>

180
00:06:41,460 --> 00:06:47,169
but I'm focusing on<font color="#E5E5E5"> the one</font><font color="#CCCCCC"> four five</font>

181
00:06:44,020 --> 00:06:50,469
<font color="#CCCCCC">years ago</font><font color="#E5E5E5"> so high tech to high tech</font><font color="#CCCCCC"> to</font>

182
00:06:47,169 --> 00:06:52,479
is an RFID<font color="#CCCCCC"> tag I have one here I</font><font color="#E5E5E5"> mean</font>

183
00:06:50,470 --> 00:06:54,030
this is<font color="#CCCCCC"> like in</font><font color="#E5E5E5"> the ISO card format but</font>

184
00:06:52,479 --> 00:06:56,590
equally you<font color="#E5E5E5"> can have little round tags</font>

185
00:06:54,030 --> 00:06:58,869
<font color="#CCCCCC">they all have eight pages</font><font color="#E5E5E5"> and each page</font>

186
00:06:56,590 --> 00:07:01,388
<font color="#E5E5E5">is 32 bits long</font><font color="#CCCCCC"> the first page is the</font>

187
00:06:58,870 --> 00:07:03,099
<font color="#E5E5E5">user as the unique identifier</font><font color="#CCCCCC"> for the</font>

188
00:07:01,389 --> 00:07:05,229
tag which is factory programmed and

189
00:07:03,099 --> 00:07:07,569
<font color="#E5E5E5">read-only</font><font color="#CCCCCC"> so when you buy yourself</font><font color="#E5E5E5"> a</font>

190
00:07:05,229 --> 00:07:10,300
high tag to tag it will have a UID in

191
00:07:07,569 --> 00:07:12,130
page<font color="#CCCCCC"> zero and you can't change</font><font color="#E5E5E5"> it there</font>

192
00:07:10,300 --> 00:07:13,300
are rumors of<font color="#E5E5E5"> Chinese ones where you can</font>

193
00:07:12,130 --> 00:07:17,229
<font color="#E5E5E5">change it but I've</font><font color="#CCCCCC"> never</font><font color="#E5E5E5"> seen</font><font color="#CCCCCC"> one</font>

194
00:07:13,300 --> 00:07:20,110
personally that UID is<font color="#E5E5E5"> only used in</font><font color="#CCCCCC"> the</font>

195
00:07:17,229 --> 00:07:22,449
crypto handshake<font color="#E5E5E5"> type stuff for all the</font>

196
00:07:20,110 --> 00:07:23,889
<font color="#E5E5E5">the handshaking</font><font color="#CCCCCC"> it's not used</font><font color="#E5E5E5"> for access</font>

197
00:07:22,449 --> 00:07:25,690
control decisions<font color="#E5E5E5"> and that's important</font>

198
00:07:23,889 --> 00:07:27,070
<font color="#CCCCCC">because it's public</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> that's why it's</font>

199
00:07:25,690 --> 00:07:28,840
green you'll see a color scheme

200
00:07:27,070 --> 00:07:31,509
appearing but that's why it's green the

201
00:07:28,840 --> 00:07:33,008
<font color="#E5E5E5">red pages contain the keys and passwords</font>

202
00:07:31,509 --> 00:07:35,229
<font color="#E5E5E5">for the tag</font><font color="#CCCCCC"> that provides the security</font>

203
00:07:33,009 --> 00:07:38,289
mechanisms and then<font color="#E5E5E5"> the pages four to</font>

204
00:07:35,229 --> 00:07:39,849
<font color="#E5E5E5">seven contain user data which is 128</font>

205
00:07:38,289 --> 00:07:44,050
bits<font color="#E5E5E5"> of information</font><font color="#CCCCCC"> which essentially</font>

206
00:07:39,849 --> 00:07:45,729
makes<font color="#E5E5E5"> up your person information so when</font>

207
00:07:44,050 --> 00:07:47,530
you go and<font color="#E5E5E5"> turn up a</font><font color="#CCCCCC"> building</font><font color="#E5E5E5"> and wipe</font>

208
00:07:45,729 --> 00:07:49,659
you know flash your<font color="#CCCCCC"> card at it that's</font>

209
00:07:47,530 --> 00:07:52,270
the information<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> make access</font>

210
00:07:49,659 --> 00:07:53,740
control decisions<font color="#E5E5E5"> based on if we want to</font>

211
00:07:52,270 --> 00:07:56,409
copy<font color="#E5E5E5"> these we need all</font><font color="#CCCCCC"> of that</font><font color="#E5E5E5"> and</font>

212
00:07:53,740 --> 00:08:00,039
<font color="#CCCCCC">obviously that's</font><font color="#E5E5E5"> where the fun bit comes</font>

213
00:07:56,409 --> 00:08:01,930
in<font color="#E5E5E5"> in both password and crypto mode they</font>

214
00:08:00,039 --> 00:08:05,440
have pre<font color="#E5E5E5"> shared secrets they have</font><font color="#CCCCCC"> to</font>

215
00:08:01,930 --> 00:08:07,030
because there's there might be<font color="#E5E5E5"> lots and</font>

216
00:08:05,440 --> 00:08:08,050
lots of<font color="#CCCCCC"> readers and an estate</font><font color="#E5E5E5"> because</font>

217
00:08:07,030 --> 00:08:09,340
there<font color="#E5E5E5"> might be lots of doors and it</font>

218
00:08:08,050 --> 00:08:10,840
might<font color="#E5E5E5"> be lots and lots of tags in an</font>

219
00:08:09,340 --> 00:08:13,169
<font color="#E5E5E5">estate because there's lots of</font><font color="#CCCCCC"> people</font>

220
00:08:10,840 --> 00:08:15,130
well the only way they can<font color="#E5E5E5"> secure</font>

221
00:08:13,169 --> 00:08:16,659
communicate securely is if they both

222
00:08:15,130 --> 00:08:18,430
know something<font color="#CCCCCC"> that the other one knows</font>

223
00:08:16,659 --> 00:08:22,090
so it's shared secrets and mutual

224
00:08:18,430 --> 00:08:23,169
authentication throughout so password

225
00:08:22,090 --> 00:08:25,599
mode I said I'll<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> very</font>

226
00:08:23,169 --> 00:08:26,859
briefly<font color="#E5E5E5"> this is the protocol</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> how to</font>

227
00:08:25,599 --> 00:08:28,870
password mode as<font color="#E5E5E5"> you can see</font>

228
00:08:26,860 --> 00:08:30,400
<font color="#CCCCCC">everything's in clear that means if you</font>

229
00:08:28,870 --> 00:08:32,440
can eavesdrop on the communications

230
00:08:30,400 --> 00:08:34,270
which if it's your tag because<font color="#E5E5E5"> you're</font>

231
00:08:32,440 --> 00:08:36,909
active insider<font color="#E5E5E5"> or because you've stolen</font>

232
00:08:34,270 --> 00:08:39,279
a tag or found a tag<font color="#E5E5E5"> then you can</font>

233
00:08:36,909 --> 00:08:40,838
eavesdrop the information and<font color="#E5E5E5"> once</font>

234
00:08:39,279 --> 00:08:43,659
you've got those passwords<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can then</font>

235
00:08:40,839 --> 00:08:44,920
interrogate<font color="#E5E5E5"> the tag directly yourself</font><font color="#CCCCCC"> so</font>

236
00:08:43,659 --> 00:08:46,959
we're not going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> password</font>

237
00:08:44,920 --> 00:08:49,270
mode again but proxmark and<font color="#E5E5E5"> our</font>

238
00:08:46,959 --> 00:08:49,770
<font color="#CCCCCC">Fiddler's can both eavesdrop on these</font>

239
00:08:49,270 --> 00:08:53,140
things

240
00:08:49,770 --> 00:08:54,880
crypto mode on the other hand<font color="#E5E5E5"> and pop</font>

241
00:08:53,140 --> 00:08:56,949
from the the UID<font color="#CCCCCC"> that sent at the begin</font>

242
00:08:54,880 --> 00:08:59,050
<font color="#CCCCCC">unclear because</font><font color="#E5E5E5"> that kind of bootstraps</font>

243
00:08:56,950 --> 00:09:01,060
the process<font color="#CCCCCC"> everything</font><font color="#E5E5E5"> is encrypted</font>

244
00:08:59,050 --> 00:09:03,339
<font color="#CCCCCC">after it's it sends that the reader</font>

245
00:09:01,060 --> 00:09:05,469
sends it<font color="#CCCCCC"> any nonce which</font><font color="#E5E5E5"> is encrypted it</font>

246
00:09:03,340 --> 00:09:07,750
sends<font color="#E5E5E5"> it a challenge response value</font><font color="#CCCCCC"> the</font>

247
00:09:05,470 --> 00:09:10,240
challenge being<font color="#CCCCCC"> ffff ffff</font>

248
00:09:07,750 --> 00:09:13,570
which gets encrypted and sent<font color="#E5E5E5"> over the</font>

249
00:09:10,240 --> 00:09:15,370
tag<font color="#E5E5E5"> can then decruz the nonce to see it</font>

250
00:09:13,570 --> 00:09:18,450
it's<font color="#E5E5E5"> RNG decrypt the challenge response</font>

251
00:09:15,370 --> 00:09:21,120
<font color="#E5E5E5">value</font><font color="#CCCCCC"> make sure it is ffff ffff</font>

252
00:09:18,450 --> 00:09:25,150
and then it can send back its page<font color="#CCCCCC"> three</font>

253
00:09:21,120 --> 00:09:26,620
take a page which has<font color="#E5E5E5"> got the conflict</font>

254
00:09:25,150 --> 00:09:28,060
byte<font color="#E5E5E5"> and the tag password so the reader</font>

255
00:09:26,620 --> 00:09:30,070
<font color="#E5E5E5">can confirm it's the right kind</font><font color="#CCCCCC"> of tag</font>

256
00:09:28,060 --> 00:09:31,390
from<font color="#E5E5E5"> the right system at which point the</font>

257
00:09:30,070 --> 00:09:32,770
readers<font color="#E5E5E5"> and then same commands and the</font>

258
00:09:31,390 --> 00:09:36,580
token<font color="#CCCCCC"> them respond</font><font color="#E5E5E5"> and all of that is</font>

259
00:09:32,770 --> 00:09:38,890
<font color="#CCCCCC">encrypted</font><font color="#E5E5E5"> so in a nutshell this is how</font>

260
00:09:36,580 --> 00:09:41,350
it works from<font color="#E5E5E5"> a very high level the</font>

261
00:09:38,890 --> 00:09:44,770
reader has the key the tag has the key

262
00:09:41,350 --> 00:09:46,870
<font color="#E5E5E5">the reader seeds the it's PRNG with the</font>

263
00:09:44,770 --> 00:09:49,810
key and the<font color="#E5E5E5"> nonce and the UID from the</font>

264
00:09:46,870 --> 00:09:52,210
tag<font color="#E5E5E5"> it then encrypts the nuts or sends</font>

265
00:09:49,810 --> 00:09:55,359
it to the<font color="#E5E5E5"> tag the tag</font><font color="#CCCCCC"> seeds its RNG</font><font color="#E5E5E5"> with</font>

266
00:09:52,210 --> 00:09:58,660
the key<font color="#E5E5E5"> its UID and the encrypted nonce</font>

267
00:09:55,360 --> 00:10:00,460
<font color="#E5E5E5">it's just received and from that point</font>

268
00:09:58,660 --> 00:10:02,560
on which the<font color="#CCCCCC"> two PRN GS on the reader</font>

269
00:10:00,460 --> 00:10:04,060
and<font color="#E5E5E5"> the tag of both in step they're both</font>

270
00:10:02,560 --> 00:10:06,989
they're both<font color="#E5E5E5"> seed to the same starting</font>

271
00:10:04,060 --> 00:10:09,099
<font color="#E5E5E5">point and as you extract extract bits</font>

272
00:10:06,990 --> 00:10:11,050
from<font color="#E5E5E5"> each of them you'll get the same</font>

273
00:10:09,100 --> 00:10:13,450
bits out<font color="#CCCCCC"> of each end</font><font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> use</font>

274
00:10:11,050 --> 00:10:15,670
<font color="#E5E5E5">it as a stream cipher or as the as the</font>

275
00:10:13,450 --> 00:10:17,290
<font color="#E5E5E5">pad for a stream cipher so stream</font>

276
00:10:15,670 --> 00:10:20,469
ciphers<font color="#E5E5E5"> you'll know about stream ciphers</font>

277
00:10:17,290 --> 00:10:22,900
it's that famous<font color="#E5E5E5"> XOR thing you basically</font>

278
00:10:20,470 --> 00:10:24,820
take get if you've got a<font color="#E5E5E5"> 32-bit message</font>

279
00:10:22,900 --> 00:10:25,510
to<font color="#E5E5E5"> send you ask for 32 bits from your</font>

280
00:10:24,820 --> 00:10:27,970
PRNG

281
00:10:25,510 --> 00:10:29,590
you XOR<font color="#E5E5E5"> that with your data and that</font>

282
00:10:27,970 --> 00:10:31,930
gives you encrypted data and then at the

283
00:10:29,590 --> 00:10:33,220
other<font color="#CCCCCC"> end</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> other end</font><font color="#E5E5E5"> gets 32 bits out</font>

284
00:10:31,930 --> 00:10:35,199
<font color="#E5E5E5">of its pure energy which will be the</font>

285
00:10:33,220 --> 00:10:36,910
same 32 bits<font color="#E5E5E5"> it with the same key stream</font>

286
00:10:35,200 --> 00:10:39,090
they XOR that with the encrypted data

287
00:10:36,910 --> 00:10:41,469
<font color="#CCCCCC">and that gives them</font><font color="#E5E5E5"> back the plaintext</font>

288
00:10:39,090 --> 00:10:42,970
<font color="#CCCCCC">and then the PRN Jews are back in step</font>

289
00:10:41,470 --> 00:10:44,800
again and<font color="#CCCCCC"> and so it's quite</font>

290
00:10:42,970 --> 00:10:47,170
straightforward how they couldn't

291
00:10:44,800 --> 00:10:48,459
communicate<font color="#E5E5E5"> it's half duplex you know</font>

292
00:10:47,170 --> 00:10:52,240
it's like one talks and<font color="#E5E5E5"> then the other</font>

293
00:10:48,460 --> 00:10:54,490
one talks<font color="#E5E5E5"> so let's have a look at the</font>

294
00:10:52,240 --> 00:10:59,200
<font color="#E5E5E5">PRNG pseudo-random number generator for</font>

295
00:10:54,490 --> 00:11:01,120
those that are catching<font color="#E5E5E5"> up</font><font color="#CCCCCC"> it's a linear</font>

296
00:10:59,200 --> 00:11:02,800
<font color="#E5E5E5">feedback shift register now if you're</font>

297
00:11:01,120 --> 00:11:04,600
like<font color="#E5E5E5"> me you'll have no idea what this is</font>

298
00:11:02,800 --> 00:11:06,310
<font color="#E5E5E5">before you come across it but a linear</font>

299
00:11:04,600 --> 00:11:07,390
<font color="#E5E5E5">feedback shift register is</font><font color="#CCCCCC"> a very common</font>

300
00:11:06,310 --> 00:11:08,829
way of implementing

301
00:11:07,390 --> 00:11:10,420
<font color="#E5E5E5">PRN</font><font color="#CCCCCC"> G's</font>

302
00:11:08,830 --> 00:11:12,839
it's used all over the<font color="#E5E5E5"> place in fact</font>

303
00:11:10,420 --> 00:11:14,769
<font color="#E5E5E5">NASA used lfsr's for various things</font>

304
00:11:12,839 --> 00:11:17,649
<font color="#E5E5E5">there's lots of different constructions</font>

305
00:11:14,769 --> 00:11:20,950
but this<font color="#CCCCCC"> one's pretty straightforward</font><font color="#E5E5E5"> so</font>

306
00:11:17,649 --> 00:11:23,019
it's 48 bits wide and<font color="#E5E5E5"> it's initially</font>

307
00:11:20,950 --> 00:11:25,570
seeded with<font color="#E5E5E5"> the UID and the lower 16</font>

308
00:11:23,019 --> 00:11:28,660
bits of the key this<font color="#CCCCCC"> would be on</font><font color="#E5E5E5"> the</font>

309
00:11:25,570 --> 00:11:31,209
reader and<font color="#E5E5E5"> the tag</font><font color="#CCCCCC"> let's start this sort</font>

310
00:11:28,660 --> 00:11:33,819
of handshake at this<font color="#E5E5E5"> point the reader</font>

311
00:11:31,209 --> 00:11:36,399
<font color="#E5E5E5">generates a new nonce</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> it to bits</font>

312
00:11:33,820 --> 00:11:39,519
wide<font color="#CCCCCC"> it X's</font><font color="#E5E5E5"> that with the upper 32 bits</font>

313
00:11:36,399 --> 00:11:41,920
<font color="#E5E5E5">of the key and then it shifts that in to</font>

314
00:11:39,519 --> 00:11:43,860
the lfsr<font color="#CCCCCC"> and</font><font color="#E5E5E5"> as it</font><font color="#CCCCCC"> shifts it in the bits</font>

315
00:11:41,920 --> 00:11:46,660
on<font color="#CCCCCC"> the right fall out and disappear and</font>

316
00:11:43,860 --> 00:11:49,060
as it does<font color="#CCCCCC"> it for every bit it shifts in</font>

317
00:11:46,660 --> 00:11:50,920
it generates a bit of pure<font color="#E5E5E5"> energy output</font>

318
00:11:49,060 --> 00:11:53,768
which will<font color="#E5E5E5"> be a pseudo-random bit stream</font>

319
00:11:50,920 --> 00:11:55,829
<font color="#E5E5E5">essentially so you're pushing in 32 bits</font>

320
00:11:53,769 --> 00:11:58,540
<font color="#E5E5E5">there were 32 bits of output coming out</font>

321
00:11:55,829 --> 00:12:00,790
it<font color="#E5E5E5"> uses that 32 bits of output that's</font>

322
00:11:58,540 --> 00:12:02,740
come out<font color="#E5E5E5"> to XOR that with the nonce</font>

323
00:12:00,790 --> 00:12:04,000
which essentially is encrypting it in

324
00:12:02,740 --> 00:12:05,290
<font color="#CCCCCC">this stream</font><font color="#E5E5E5"> cipher that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> just talked</font>

325
00:12:04,000 --> 00:12:07,360
about and<font color="#CCCCCC"> that gives you the encrypted</font>

326
00:12:05,290 --> 00:12:08,709
<font color="#E5E5E5">nonce which then becomes public data</font>

327
00:12:07,360 --> 00:12:12,160
because that's then transmitted to the

328
00:12:08,709 --> 00:12:13,689
tag as<font color="#CCCCCC"> an</font><font color="#E5E5E5"> encrypted value the tag and</font>

329
00:12:12,160 --> 00:12:17,260
this bits quite clever<font color="#E5E5E5"> or quite like</font>

330
00:12:13,690 --> 00:12:19,899
this<font color="#CCCCCC"> it's sets itself up in the same</font>

331
00:12:17,260 --> 00:12:22,360
situation<font color="#CCCCCC"> it can</font><font color="#E5E5E5"> get a</font><font color="#CCCCCC"> bit out of the</font>

332
00:12:19,899 --> 00:12:25,029
PRNG<font color="#E5E5E5"> because you get the bit before you</font>

333
00:12:22,360 --> 00:12:26,500
shift the<font color="#E5E5E5"> next one in again it's got</font><font color="#CCCCCC"> the</font>

334
00:12:25,029 --> 00:12:28,480
<font color="#E5E5E5">upper 32 bits of the key and it's got</font>

335
00:12:26,500 --> 00:12:31,810
the encrypted<font color="#E5E5E5"> nonce it's just received</font>

336
00:12:28,480 --> 00:12:33,670
well<font color="#E5E5E5"> it does it</font><font color="#CCCCCC"> basically excells the</font>

337
00:12:31,810 --> 00:12:35,439
first bit of<font color="#CCCCCC"> that encrypted</font><font color="#E5E5E5"> nonce with</font>

338
00:12:33,670 --> 00:12:37,750
the first bit of the pure<font color="#E5E5E5"> energy output</font>

339
00:12:35,440 --> 00:12:41,560
<font color="#CCCCCC">and the lower of</font><font color="#E5E5E5"> the last 32 bits of the</font>

340
00:12:37,750 --> 00:12:43,240
key and shifts that bit into<font color="#CCCCCC"> the lfsr</font>

341
00:12:41,560 --> 00:12:44,619
<font color="#E5E5E5">which moves the whole thing along which</font>

342
00:12:43,240 --> 00:12:46,029
generates<font color="#CCCCCC"> another bit of pure</font><font color="#E5E5E5"> energy</font>

343
00:12:44,620 --> 00:12:48,040
output which<font color="#CCCCCC"> we can then use to</font><font color="#E5E5E5"> do the</font>

344
00:12:46,029 --> 00:12:49,750
second bit and then<font color="#E5E5E5"> that whatever the</font>

345
00:12:48,040 --> 00:12:51,339
<font color="#CCCCCC">output is that goes back in it can do</font>

346
00:12:49,750 --> 00:12:53,410
the third bit<font color="#E5E5E5"> you know the clever thing</font>

347
00:12:51,339 --> 00:12:54,670
is when it's done that both the tag<font color="#E5E5E5"> and</font>

348
00:12:53,410 --> 00:12:58,000
the reader end up in<font color="#CCCCCC"> exactly the same</font>

349
00:12:54,670 --> 00:13:00,790
<font color="#E5E5E5">situation because of</font><font color="#CCCCCC"> the magic pixel</font><font color="#E5E5E5"> so</font>

350
00:12:58,000 --> 00:13:03,310
this is now a fully seeded pseudo-random

351
00:13:00,790 --> 00:13:04,990
number generator lfsr<font color="#E5E5E5"> and as you can</font><font color="#CCCCCC"> see</font>

352
00:13:03,310 --> 00:13:07,689
it's all red because<font color="#E5E5E5"> these are values</font>

353
00:13:04,990 --> 00:13:08,890
that we do not know as an outsider<font color="#E5E5E5"> yeah</font>

354
00:13:07,690 --> 00:13:11,110
we don't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> where the key is</font><font color="#E5E5E5"> and we</font>

355
00:13:08,890 --> 00:13:12,760
<font color="#E5E5E5">don't know what the nonce is all we know</font>

356
00:13:11,110 --> 00:13:15,490
is what<font color="#E5E5E5"> the encrypted nonce is at this</font>

357
00:13:12,760 --> 00:13:17,350
point<font color="#E5E5E5"> which as you can see is kind of</font>

358
00:13:15,490 --> 00:13:20,350
lost in the in the world at this point

359
00:13:17,350 --> 00:13:21,740
<font color="#E5E5E5">at this point the feedback function is</font>

360
00:13:20,350 --> 00:13:24,530
<font color="#CCCCCC">enabled</font>

361
00:13:21,740 --> 00:13:27,050
and so from<font color="#E5E5E5"> now war and we've seeded the</font>

362
00:13:24,530 --> 00:13:29,030
lfsr<font color="#E5E5E5"> every time we generate a bit of</font>

363
00:13:27,050 --> 00:13:31,339
output<font color="#CCCCCC"> and shift the lfsr we're</font><font color="#E5E5E5"> not</font>

364
00:13:29,030 --> 00:13:33,890
shifting in seeding information<font color="#E5E5E5"> we're</font>

365
00:13:31,340 --> 00:13:35,480
shifting in a new bit and that bit comes

366
00:13:33,890 --> 00:13:36,890
from the feedback function so it now

367
00:13:35,480 --> 00:13:38,720
becomes autonomous<font color="#E5E5E5"> like any</font>

368
00:13:36,890 --> 00:13:41,240
pseudo-random number generator<font color="#E5E5E5"> you seed</font>

369
00:13:38,720 --> 00:13:42,710
it<font color="#E5E5E5"> at the beginning and then it</font><font color="#CCCCCC"> just</font>

370
00:13:41,240 --> 00:13:47,750
keeps<font color="#E5E5E5"> on generating well this is how it</font>

371
00:13:42,710 --> 00:13:49,280
generates so if we're encrypting data as

372
00:13:47,750 --> 00:13:51,020
<font color="#E5E5E5">you see</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the stream cipher</font><font color="#CCCCCC"> you</font>

373
00:13:49,280 --> 00:13:52,640
basically<font color="#E5E5E5"> get as many bits out of it as</font>

374
00:13:51,020 --> 00:13:54,110
<font color="#E5E5E5">you want</font><font color="#CCCCCC"> XOR that with your data and</font>

375
00:13:52,640 --> 00:13:56,180
that'll give you<font color="#CCCCCC"> an encrypted</font><font color="#E5E5E5"> data and</font>

376
00:13:54,110 --> 00:13:58,220
on the other<font color="#CCCCCC"> end you take you encrypted</font>

377
00:13:56,180 --> 00:14:01,400
data XOR that with a PNG output and that

378
00:13:58,220 --> 00:14:02,870
gives you back<font color="#E5E5E5"> the original data so we</font>

379
00:14:01,400 --> 00:14:05,720
look<font color="#E5E5E5"> quick look at the feedback function</font>

380
00:14:02,870 --> 00:14:08,900
is<font color="#E5E5E5"> simply the XOR</font><font color="#CCCCCC"> of 16 bits from the</font>

381
00:14:05,720 --> 00:14:10,400
lfsr<font color="#CCCCCC"> I would say randomly chosen but</font>

382
00:14:08,900 --> 00:14:12,290
clearly<font color="#E5E5E5"> not clearly like you know</font>

383
00:14:10,400 --> 00:14:14,900
someone decided this and<font color="#E5E5E5"> designed this</font>

384
00:14:12,290 --> 00:14:16,430
thing but a 16 of<font color="#E5E5E5"> those bits and if we</font>

385
00:14:14,900 --> 00:14:18,319
<font color="#E5E5E5">don't know the internal state</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

386
00:14:16,430 --> 00:14:20,060
lfsr<font color="#CCCCCC"> it'd be very</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to predict what</font>

387
00:14:18,320 --> 00:14:22,130
those<font color="#CCCCCC"> sixteen bits are when they were</font>

388
00:14:20,060 --> 00:14:24,199
all XOR together you get one bit<font color="#CCCCCC"> so</font>

389
00:14:22,130 --> 00:14:25,910
either one<font color="#E5E5E5"> or one you know your chances</font>

390
00:14:24,200 --> 00:14:30,830
<font color="#CCCCCC">of guessing that</font><font color="#E5E5E5"> without any information</font>

391
00:14:25,910 --> 00:14:32,120
is<font color="#CCCCCC"> 50/50 as it should be now the output</font>

392
00:14:30,830 --> 00:14:33,740
<font color="#E5E5E5">from the PRNG</font>

393
00:14:32,120 --> 00:14:36,200
it's not simply<font color="#E5E5E5"> the bits that fall off</font>

394
00:14:33,740 --> 00:14:37,760
<font color="#CCCCCC">the end</font><font color="#E5E5E5"> when you push a new bit in it's</font>

395
00:14:36,200 --> 00:14:40,640
actually<font color="#E5E5E5"> generated by a filter</font><font color="#CCCCCC"> function</font>

396
00:14:37,760 --> 00:14:44,080
f and that filter<font color="#E5E5E5"> function is made up in</font>

397
00:14:40,640 --> 00:14:46,970
a hierarchy of functions a<font color="#E5E5E5"> B and C and</font>

398
00:14:44,080 --> 00:14:49,580
each of those functions<font color="#CCCCCC"> take</font><font color="#E5E5E5"> four bits</font>

399
00:14:46,970 --> 00:14:51,620
from the lfsr<font color="#E5E5E5"> so you've got 48 bit</font><font color="#CCCCCC"> state</font>

400
00:14:49,580 --> 00:14:54,830
we're<font color="#E5E5E5"> going to pull 20 bits from that in</font>

401
00:14:51,620 --> 00:14:56,600
chunks of<font color="#E5E5E5"> four and they feed into these</font>

402
00:14:54,830 --> 00:14:59,320
functions each of those produces one bit

403
00:14:56,600 --> 00:15:01,790
<font color="#CCCCCC">of output which is 50-50 biased</font><font color="#E5E5E5"> and</font>

404
00:14:59,320 --> 00:15:03,590
those five bits feed into function<font color="#CCCCCC"> C</font>

405
00:15:01,790 --> 00:15:06,110
which produces one bit<font color="#E5E5E5"> of output</font><font color="#CCCCCC"> again</font>

406
00:15:03,590 --> 00:15:07,310
<font color="#CCCCCC">5050 biased and</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> output bit becomes</font>

407
00:15:06,110 --> 00:15:09,740
the<font color="#E5E5E5"> output</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the PRNG</font>

408
00:15:07,310 --> 00:15:12,530
<font color="#E5E5E5">so as you can see it's kind of hard</font><font color="#CCCCCC"> for</font>

409
00:15:09,740 --> 00:15:14,270
us to predict what this pure energy<font color="#E5E5E5"> is</font>

410
00:15:12,530 --> 00:15:15,380
going<font color="#E5E5E5"> to output essentially you know</font>

411
00:15:14,270 --> 00:15:16,670
when<font color="#CCCCCC"> you when you sort of start you're</font>

412
00:15:15,380 --> 00:15:18,410
sort<font color="#CCCCCC"> of think oh you know</font><font color="#E5E5E5"> there's bound</font>

413
00:15:16,670 --> 00:15:20,599
to be something<font color="#E5E5E5"> really bad in</font><font color="#CCCCCC"> the crip</font>

414
00:15:18,410 --> 00:15:23,689
side and<font color="#CCCCCC"> there</font><font color="#E5E5E5"> is which should all be</font>

415
00:15:20,600 --> 00:15:25,790
amazed by when we get to but so far<font color="#E5E5E5"> this</font>

416
00:15:23,690 --> 00:15:31,130
<font color="#E5E5E5">is looking pretty solid</font><font color="#CCCCCC"> I think you know</font>

417
00:15:25,790 --> 00:15:33,860
so right we'll go back to the protocol

418
00:15:31,130 --> 00:15:35,490
<font color="#E5E5E5">so</font><font color="#CCCCCC"> it's sent</font><font color="#E5E5E5"> the encrypted nonce</font><font color="#CCCCCC"> it's</font>

419
00:15:33,860 --> 00:15:37,800
then sent<font color="#E5E5E5"> the</font><font color="#CCCCCC"> challenge/response</font><font color="#E5E5E5"> value</font>

420
00:15:35,490 --> 00:15:39,570
encrypted<font color="#E5E5E5"> the tags confirmed that it's</font>

421
00:15:37,800 --> 00:15:41,069
replied with its page<font color="#CCCCCC"> three</font><font color="#E5E5E5"> value which</font>

422
00:15:39,570 --> 00:15:43,200
is the<font color="#E5E5E5"> config in the password encrypted</font>

423
00:15:41,070 --> 00:15:45,360
again and then the reader gets<font color="#E5E5E5"> to send</font>

424
00:15:43,200 --> 00:15:49,380
commands<font color="#E5E5E5"> and the tag gets to respond to</font>

425
00:15:45,360 --> 00:15:51,690
him so let's talk about commands<font color="#E5E5E5"> there</font>

426
00:15:49,380 --> 00:15:53,850
are<font color="#E5E5E5"> four commands in hi tag</font><font color="#CCCCCC"> - the vol 5</font>

427
00:15:51,690 --> 00:15:59,520
bits long<font color="#E5E5E5"> so the first two bits</font>

428
00:15:53,850 --> 00:16:01,290
<font color="#E5E5E5">determine which command</font><font color="#CCCCCC"> it is so you</font><font color="#E5E5E5"> can</font>

429
00:15:59,520 --> 00:16:03,149
read the page you can<font color="#E5E5E5"> read a page with</font>

430
00:16:01,290 --> 00:16:05,390
<font color="#CCCCCC">all the bits</font><font color="#E5E5E5"> inverted you can write a</font>

431
00:16:03,149 --> 00:16:07,709
page and which will<font color="#E5E5E5"> obviously require</font>

432
00:16:05,390 --> 00:16:09,149
<font color="#E5E5E5">following data</font><font color="#CCCCCC"> you know what you want to</font>

433
00:16:07,709 --> 00:16:11,609
write<font color="#E5E5E5"> and then there's a whole command</font>

434
00:16:09,149 --> 00:16:12,930
to turn a tag off which is useful in

435
00:16:11,610 --> 00:16:14,610
collision environments where you've got

436
00:16:12,930 --> 00:16:15,839
multiple tags<font color="#CCCCCC"> you</font><font color="#E5E5E5"> talk to the one that's</font>

437
00:16:14,610 --> 00:16:17,700
<font color="#CCCCCC">the loudest and then you hold</font><font color="#E5E5E5"> here the</font>

438
00:16:15,839 --> 00:16:21,270
<font color="#CCCCCC">end and then</font><font color="#E5E5E5"> you talk to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> next one</font>

439
00:16:17,700 --> 00:16:22,529
that's loudest apparently not had it

440
00:16:21,270 --> 00:16:24,810
<font color="#CCCCCC">confirmed but apparently they use this</font>

441
00:16:22,529 --> 00:16:27,390
in Las Vegas<font color="#CCCCCC"> to track chips</font><font color="#E5E5E5"> in the</font>

442
00:16:24,810 --> 00:16:29,399
gambling<font color="#E5E5E5"> halls in the hotels and so they</font>

443
00:16:27,390 --> 00:16:31,709
can talk to<font color="#E5E5E5"> hundreds of chips at once</font>

444
00:16:29,399 --> 00:16:34,620
using<font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of protocol so if you</font>

445
00:16:31,709 --> 00:16:37,290
<font color="#E5E5E5">happen to know</font><font color="#CCCCCC"> their high tag</font><font color="#E5E5E5"> - who</font>

446
00:16:34,620 --> 00:16:38,490
knows<font color="#CCCCCC"> just saying but I'm not sure</font><font color="#E5E5E5"> all</font>

447
00:16:37,290 --> 00:16:43,560
Vegas is<font color="#E5E5E5"> the right place to get arrested</font>

448
00:16:38,490 --> 00:16:46,290
<font color="#CCCCCC">though</font><font color="#E5E5E5"> so if you imagine that</font><font color="#CCCCCC"> a command</font>

449
00:16:43,560 --> 00:16:48,270
is<font color="#CCCCCC"> five bits long you don't just send</font>

450
00:16:46,290 --> 00:16:49,920
the<font color="#E5E5E5"> five bit command you actually send a</font>

451
00:16:48,270 --> 00:16:52,050
10 bit command which is<font color="#CCCCCC"> the 5 bit</font>

452
00:16:49,920 --> 00:16:54,270
command followed<font color="#CCCCCC"> by the inverted version</font>

453
00:16:52,050 --> 00:16:56,729
<font color="#E5E5E5">of that</font><font color="#CCCCCC"> 5 bit command for integrity</font>

454
00:16:54,270 --> 00:16:59,160
purposes<font color="#E5E5E5"> you know you don't ask it to</font>

455
00:16:56,730 --> 00:17:01,079
read a page and accidentally what gets

456
00:16:59,160 --> 00:17:02,790
<font color="#E5E5E5">received is read page inverted and give</font>

457
00:17:01,079 --> 00:17:04,379
you back<font color="#E5E5E5"> the inverted version of the</font>

458
00:17:02,790 --> 00:17:06,300
page because<font color="#E5E5E5"> that's not what you're</font>

459
00:17:04,380 --> 00:17:08,069
expecting<font color="#CCCCCC"> equally</font><font color="#E5E5E5"> you don't say read</font>

460
00:17:06,300 --> 00:17:10,678
page it sends<font color="#E5E5E5"> your back right page you</font>

461
00:17:08,069 --> 00:17:11,938
know if<font color="#E5E5E5"> so they've got integrity built</font>

462
00:17:10,679 --> 00:17:15,449
into the into the protocol<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's</font>

463
00:17:11,939 --> 00:17:17,670
basically just<font color="#E5E5E5"> invert the five bits you</font>

464
00:17:15,449 --> 00:17:21,059
know so<font color="#CCCCCC"> 1 to 0 0 to 1</font><font color="#E5E5E5"> except like not it</font>

465
00:17:17,670 --> 00:17:22,319
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> but you don't you</font><font color="#CCCCCC"> don't only have</font><font color="#E5E5E5"> to</font>

466
00:17:21,059 --> 00:17:24,899
do<font color="#E5E5E5"> it twice you can</font><font color="#CCCCCC"> do it as many times</font>

467
00:17:22,319 --> 00:17:27,329
<font color="#CCCCCC">as you want so as</font><font color="#E5E5E5"> long as each block of</font>

468
00:17:24,900 --> 00:17:28,710
<font color="#E5E5E5">5 goes normal and then invert it than</font>

469
00:17:27,329 --> 00:17:30,120
normal<font color="#CCCCCC"> than inverted</font><font color="#E5E5E5"> than normal than</font>

470
00:17:28,710 --> 00:17:31,190
inverted you can do this as many<font color="#CCCCCC"> times</font>

471
00:17:30,120 --> 00:17:33,659
as you like

472
00:17:31,190 --> 00:17:36,330
literally for thousands<font color="#CCCCCC"> of</font><font color="#E5E5E5"> bits if you</font>

473
00:17:33,660 --> 00:17:37,920
want it to and<font color="#CCCCCC"> to</font><font color="#E5E5E5"> read the tag</font><font color="#CCCCCC"> that</font>

474
00:17:36,330 --> 00:17:39,870
receives<font color="#E5E5E5"> this will check after it's</font>

475
00:17:37,920 --> 00:17:41,880
decrypted it will<font color="#E5E5E5"> check</font><font color="#CCCCCC"> that each block</font>

476
00:17:39,870 --> 00:17:43,860
<font color="#E5E5E5">is the inverse of the next block all the</font>

477
00:17:41,880 --> 00:17:45,300
way along what it's<font color="#E5E5E5"> just received to</font>

478
00:17:43,860 --> 00:17:46,860
confirm that there's been<font color="#CCCCCC"> no errors in</font>

479
00:17:45,300 --> 00:17:48,210
<font color="#E5E5E5">transmission</font><font color="#CCCCCC"> it's a very strong</font>

480
00:17:46,860 --> 00:17:49,918
integrity

481
00:17:48,210 --> 00:17:52,950
thing<font color="#E5E5E5"> something that we're</font><font color="#CCCCCC"> gonna abuse</font>

482
00:17:49,919 --> 00:17:56,309
<font color="#E5E5E5">really badly in a second so let's go on</font>

483
00:17:52,950 --> 00:17:58,620
to<font color="#E5E5E5"> some abuse so the paper that I</font>

484
00:17:56,309 --> 00:18:02,399
mentioned earlier<font color="#E5E5E5"> gone in 360 seconds by</font>

485
00:17:58,620 --> 00:18:04,439
<font color="#E5E5E5">Vidal Garcia and Bosch three attacks in</font>

486
00:18:02,399 --> 00:18:06,539
that paper and I'm<font color="#E5E5E5"> going to talk</font><font color="#CCCCCC"> about</font>

487
00:18:04,440 --> 00:18:07,799
the first attack in this talk<font color="#CCCCCC"> and in the</font>

488
00:18:06,539 --> 00:18:09,690
workshop<font color="#CCCCCC"> tomorrow I'm</font><font color="#E5E5E5"> going to talk</font>

489
00:18:07,799 --> 00:18:11,610
<font color="#CCCCCC">about tax two and three I would have</font>

490
00:18:09,690 --> 00:18:13,890
loved to<font color="#E5E5E5"> have talked about all three in</font>

491
00:18:11,610 --> 00:18:15,750
an hour<font color="#CCCCCC"> and as you'll see if you</font><font color="#E5E5E5"> come to</font>

492
00:18:13,890 --> 00:18:18,330
the workshop tomorrow<font color="#CCCCCC"> it just wasn't</font>

493
00:18:15,750 --> 00:18:19,590
really feasible<font color="#E5E5E5"> not in any kind of debt</font>

494
00:18:18,330 --> 00:18:23,610
<font color="#E5E5E5">not in the kind</font><font color="#CCCCCC"> of depth</font><font color="#E5E5E5"> that you'd like</font>

495
00:18:19,590 --> 00:18:25,340
<font color="#E5E5E5">to</font><font color="#CCCCCC"> see anyway so we'll talk about the</font>

496
00:18:23,610 --> 00:18:28,110
<font color="#E5E5E5">first one which is the nonce replay and</font>

497
00:18:25,340 --> 00:18:29,549
length extension<font color="#CCCCCC"> for keystream</font><font color="#E5E5E5"> recovery</font>

498
00:18:28,110 --> 00:18:31,408
<font color="#E5E5E5">attack I'm sure there's a pedophile</font>

499
00:18:29,549 --> 00:18:36,330
<font color="#CCCCCC">Drake in there but I can't quite think</font>

500
00:18:31,409 --> 00:18:37,649
what it is<font color="#CCCCCC"> Offutt on my head</font><font color="#E5E5E5"> right so</font>

501
00:18:36,330 --> 00:18:39,000
obviously<font color="#E5E5E5"> you'll have noticed from that</font>

502
00:18:37,649 --> 00:18:41,668
protocol that we talked<font color="#E5E5E5"> about earlier</font>

503
00:18:39,000 --> 00:18:44,669
that<font color="#CCCCCC"> the the only entropy give given a</font>

504
00:18:41,669 --> 00:18:49,260
<font color="#E5E5E5">particular tag so if I've got a tag and</font>

505
00:18:44,669 --> 00:18:50,399
it's got a<font color="#CCCCCC"> particular UID on it then as</font>

506
00:18:49,260 --> 00:18:52,470
long<font color="#CCCCCC"> as we're only talking to this</font><font color="#E5E5E5"> one</font>

507
00:18:50,399 --> 00:18:54,330
tag the UID doesn't change the key

508
00:18:52,470 --> 00:18:56,490
doesn't<font color="#E5E5E5"> change because it's the same key</font>

509
00:18:54,330 --> 00:18:57,750
on the entire<font color="#E5E5E5"> system so the only entropy</font>

510
00:18:56,490 --> 00:19:00,000
in the<font color="#E5E5E5"> system comes from the nonce</font>

511
00:18:57,750 --> 00:19:02,850
<font color="#CCCCCC">that's generated by the reader</font><font color="#E5E5E5"> the tag</font>

512
00:19:00,000 --> 00:19:05,399
<font color="#E5E5E5">itself generates no entropy so that</font>

513
00:19:02,850 --> 00:19:06,689
means if we capture the encrypted<font color="#E5E5E5"> nonce</font>

514
00:19:05,399 --> 00:19:08,129
<font color="#E5E5E5">and the encrypted</font><font color="#CCCCCC"> challenge-response</font>

515
00:19:06,690 --> 00:19:11,220
value that's<font color="#E5E5E5"> been sent from the reader</font>

516
00:19:08,130 --> 00:19:13,320
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> tag at some point then we</font><font color="#CCCCCC"> can</font>

517
00:19:11,220 --> 00:19:15,330
pretend to be<font color="#E5E5E5"> the reader and replay that</font>

518
00:19:13,320 --> 00:19:16,950
to the tag and<font color="#CCCCCC"> there'll be</font><font color="#E5E5E5"> valid values</font>

519
00:19:15,330 --> 00:19:18,090
you know there'll be nothing<font color="#CCCCCC"> wrong with</font>

520
00:19:16,950 --> 00:19:20,730
<font color="#E5E5E5">those values and the tag will quite</font>

521
00:19:18,090 --> 00:19:23,309
happily respond to them that will cede

522
00:19:20,730 --> 00:19:25,860
the PRNG<font color="#E5E5E5"> on the tag to a particular</font>

523
00:19:23,309 --> 00:19:27,299
<font color="#E5E5E5">point which we don't know and we don't</font>

524
00:19:25,860 --> 00:19:28,529
<font color="#CCCCCC">know what that key stream</font><font color="#E5E5E5"> is going to be</font>

525
00:19:27,299 --> 00:19:30,770
that comes out<font color="#CCCCCC"> of it but what we can</font>

526
00:19:28,529 --> 00:19:32,909
<font color="#CCCCCC">guarantee is that every time we</font>

527
00:19:30,770 --> 00:19:34,139
<font color="#E5E5E5">initialize</font><font color="#CCCCCC"> the tag with that</font>

528
00:19:32,909 --> 00:19:36,330
particularly encrypted nonce and

529
00:19:34,140 --> 00:19:37,950
<font color="#CCCCCC">challenge-response value the PRNG will</font>

530
00:19:36,330 --> 00:19:39,270
go to the same place<font color="#CCCCCC"> and start from the</font>

531
00:19:37,950 --> 00:19:40,799
<font color="#E5E5E5">same</font><font color="#CCCCCC"> point and</font><font color="#E5E5E5"> therefore have the</font><font color="#CCCCCC"> same</font>

532
00:19:39,270 --> 00:19:42,658
key stream coming<font color="#E5E5E5"> out of it every time</font>

533
00:19:40,799 --> 00:19:44,340
so we're going to use<font color="#E5E5E5"> that this is the</font>

534
00:19:42,659 --> 00:19:45,390
<font color="#E5E5E5">non tree</font><font color="#CCCCCC"> place side of it</font><font color="#E5E5E5"> what we going</font>

535
00:19:44,340 --> 00:19:47,158
<font color="#E5E5E5">to</font><font color="#CCCCCC"> do is</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> time we</font><font color="#E5E5E5"> try and do</font>

536
00:19:45,390 --> 00:19:48,870
anything<font color="#E5E5E5"> with the tag we're going to</font>

537
00:19:47,159 --> 00:19:51,570
start by initializing the tag with it

538
00:19:48,870 --> 00:19:55,229
with the same encrypted nonce<font color="#CCCCCC"> and that</font>

539
00:19:51,570 --> 00:19:57,059
means we'll have the<font color="#E5E5E5"> keys the same key</font>

540
00:19:55,230 --> 00:19:58,440
stream<font color="#E5E5E5"> in every session</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> all see</font>

541
00:19:57,059 --> 00:20:00,790
anyone who knows anything about

542
00:19:58,440 --> 00:20:06,700
excellent crypto means that you know you

543
00:20:00,790 --> 00:20:08,470
now got something you can attack<font color="#CCCCCC"> so this</font>

544
00:20:06,700 --> 00:20:09,910
is just<font color="#E5E5E5"> sort of set you remember</font><font color="#CCCCCC"> after</font>

545
00:20:08,470 --> 00:20:11,320
the<font color="#E5E5E5"> nonce was sent and after not so just</font>

546
00:20:09,910 --> 00:20:13,390
received by the tag<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was the state</font>

547
00:20:11,320 --> 00:20:17,020
of<font color="#CCCCCC"> the lfsr as you can see the only</font>

548
00:20:13,390 --> 00:20:18,070
entropy is the<font color="#E5E5E5"> nonce the NR value this</font>

549
00:20:17,020 --> 00:20:20,500
is how we're going to emulate it

550
00:20:18,070 --> 00:20:21,820
basically we're going<font color="#E5E5E5"> to use so I'll</font>

551
00:20:20,500 --> 00:20:24,550
hold it up<font color="#E5E5E5"> so you can see</font><font color="#CCCCCC"> this is an R</font>

552
00:20:21,820 --> 00:20:27,179
fiddler I guess I guess everyone's seen

553
00:20:24,550 --> 00:20:31,270
one<font color="#E5E5E5"> it's like</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> proxmark but better for</font>

554
00:20:27,180 --> 00:20:33,280
<font color="#CCCCCC">low frequency so if you want</font><font color="#E5E5E5"> to do top</font>

555
00:20:31,270 --> 00:20:35,320
tip if you<font color="#CCCCCC"> want to do 125 kilohertz</font><font color="#E5E5E5"> RFID</font>

556
00:20:33,280 --> 00:20:37,060
<font color="#E5E5E5">used in our Fiddler's they're only about</font>

557
00:20:35,320 --> 00:20:40,000
<font color="#E5E5E5">hundred pounds from aperture labs and</font>

558
00:20:37,060 --> 00:20:41,770
<font color="#E5E5E5">they're really good if you want to do</font>

559
00:20:40,000 --> 00:20:44,470
high<font color="#CCCCCC"> frequent say use</font><font color="#E5E5E5"> of proxmark</font><font color="#CCCCCC"> 3</font>

560
00:20:41,770 --> 00:20:45,760
because<font color="#CCCCCC"> there Adam who Adam Laurie who</font>

561
00:20:44,470 --> 00:20:47,170
wrote the code for this wrote the code

562
00:20:45,760 --> 00:20:49,210
for the<font color="#E5E5E5"> a lot of the high frequency code</font>

563
00:20:47,170 --> 00:20:51,700
for proxmark<font color="#E5E5E5"> and that works but the low</font>

564
00:20:49,210 --> 00:20:53,530
frequency code for proxmark no idea<font color="#E5E5E5"> who</font>

565
00:20:51,700 --> 00:20:56,560
<font color="#E5E5E5">wrote that but it crashes all the time</font>

566
00:20:53,530 --> 00:20:57,760
<font color="#E5E5E5">especially in the high tech</font><font color="#CCCCCC"> world so</font>

567
00:20:56,560 --> 00:21:00,220
we're going<font color="#E5E5E5"> to use that as an emulated</font>

568
00:20:57,760 --> 00:21:04,629
reader<font color="#E5E5E5"> and that's going to replay the</font>

569
00:21:00,220 --> 00:21:06,310
same nonce every time we seed it so as

570
00:21:04,630 --> 00:21:10,450
an example if<font color="#CCCCCC"> we</font><font color="#E5E5E5"> gave</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> the encrypted</font>

571
00:21:06,310 --> 00:21:11,710
<font color="#E5E5E5">nonce for a</font><font color="#CCCCCC"> 85b to D F</font><font color="#E5E5E5"> and then it would</font>

572
00:21:10,450 --> 00:21:13,300
see the<font color="#E5E5E5"> PRNG</font>

573
00:21:11,710 --> 00:21:15,760
and it might<font color="#E5E5E5"> produce the key string</font>

574
00:21:13,300 --> 00:21:17,470
<font color="#E5E5E5">naught 1 1 1 1 naught naught 1 1 1</font>

575
00:21:15,760 --> 00:21:19,720
naught 1 naught blah blah blah<font color="#E5E5E5"> right and</font>

576
00:21:17,470 --> 00:21:20,980
every time we<font color="#CCCCCC"> see the tag with that</font>

577
00:21:19,720 --> 00:21:22,840
nonce<font color="#CCCCCC"> we're going to get</font><font color="#E5E5E5"> that same key</font>

578
00:21:20,980 --> 00:21:25,840
stream<font color="#E5E5E5"> hence the thing we're going to</font>

579
00:21:22,840 --> 00:21:26,980
<font color="#E5E5E5">that's what we're going to attack so the</font>

580
00:21:25,840 --> 00:21:30,010
way we're going to<font color="#E5E5E5"> do this is we're</font>

581
00:21:26,980 --> 00:21:31,690
going to find<font color="#E5E5E5"> the encrypted read page 0</font>

582
00:21:30,010 --> 00:21:33,970
command so we<font color="#E5E5E5"> don't know the key stream</font>

583
00:21:31,690 --> 00:21:35,650
<font color="#E5E5E5">but we know there's a command out there</font>

584
00:21:33,970 --> 00:21:37,630
which will be<font color="#E5E5E5"> the encryption</font><font color="#CCCCCC"> of read</font>

585
00:21:35,650 --> 00:21:38,890
page 0<font color="#CCCCCC"> we're going to find</font><font color="#E5E5E5"> that and</font>

586
00:21:37,630 --> 00:21:40,510
<font color="#E5E5E5">we're going</font><font color="#CCCCCC"> to play that command</font><font color="#E5E5E5"> and</font>

587
00:21:38,890 --> 00:21:42,130
it's going<font color="#E5E5E5"> to give</font><font color="#CCCCCC"> us the contents of</font>

588
00:21:40,510 --> 00:21:43,990
page 0<font color="#E5E5E5"> the reason</font><font color="#CCCCCC"> we'll go for page</font>

589
00:21:42,130 --> 00:21:46,270
<font color="#CCCCCC">zeros</font><font color="#E5E5E5"> because we already know the</font>

590
00:21:43,990 --> 00:21:48,760
plaintext of page 0 because<font color="#E5E5E5"> that's the</font>

591
00:21:46,270 --> 00:21:51,220
UID which is presented<font color="#CCCCCC"> at the beginning</font>

592
00:21:48,760 --> 00:21:52,360
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the session</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so we know the</font>

593
00:21:51,220 --> 00:21:54,940
plaintext<font color="#CCCCCC"> for the command</font><font color="#E5E5E5"> we were</font>

594
00:21:52,360 --> 00:21:57,219
<font color="#E5E5E5">looking for read page 0 and we know the</font>

595
00:21:54,940 --> 00:22:00,460
<font color="#E5E5E5">answer plaintext and so if we can find</font>

596
00:21:57,220 --> 00:22:03,070
the encrypted<font color="#E5E5E5"> version</font><font color="#CCCCCC"> of the command</font><font color="#E5E5E5"> and</font>

597
00:22:00,460 --> 00:22:05,140
we can get the<font color="#E5E5E5"> encrypted response we've</font>

598
00:22:03,070 --> 00:22:06,850
then got the<font color="#E5E5E5"> encrypted versions of those</font>

599
00:22:05,140 --> 00:22:08,620
we<font color="#E5E5E5"> can explore them together that'll</font>

600
00:22:06,850 --> 00:22:11,100
give us<font color="#E5E5E5"> the key stream and then we've</font>

601
00:22:08,620 --> 00:22:13,389
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> one okay so</font>

602
00:22:11,100 --> 00:22:14,570
encrypted commands<font color="#E5E5E5"> a</font><font color="#CCCCCC"> 10 bits long which</font>

603
00:22:13,390 --> 00:22:17,179
means there's a thousand<font color="#CCCCCC"> 25</font>

604
00:22:14,570 --> 00:22:19,340
or potentials within there there's<font color="#E5E5E5"> 16</font>

605
00:22:17,179 --> 00:22:23,269
valid<font color="#E5E5E5"> read commands 8 4 read normal</font>

606
00:22:19,340 --> 00:22:26,178
<font color="#CCCCCC">nectar of inverted pages and when you</font>

607
00:22:23,269 --> 00:22:29,059
send<font color="#E5E5E5"> a valid encrypted read command you</font>

608
00:22:26,179 --> 00:22:31,639
get back a 32-bit response but if<font color="#E5E5E5"> you</font>

609
00:22:29,059 --> 00:22:33,289
send an invalid command<font color="#E5E5E5"> you get back the</font>

610
00:22:31,639 --> 00:22:34,549
unencrypted error<font color="#E5E5E5"> response and the</font>

611
00:22:33,289 --> 00:22:36,860
<font color="#E5E5E5">reason</font><font color="#CCCCCC"> it's unencrypted is because</font>

612
00:22:34,549 --> 00:22:38,899
clearly<font color="#E5E5E5"> your crypto has failed</font><font color="#CCCCCC"> you know</font>

613
00:22:36,860 --> 00:22:40,820
if you ignore all<font color="#CCCCCC"> hackers and just think</font>

614
00:22:38,899 --> 00:22:43,039
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the normal run of stuff there's</font>

615
00:22:40,820 --> 00:22:45,049
something's gone wrong in the process

616
00:22:43,039 --> 00:22:46,580
<font color="#E5E5E5">well it can't reply with an encrypted</font>

617
00:22:45,049 --> 00:22:48,200
value because there's no<font color="#E5E5E5"> guarantee of</font>

618
00:22:46,580 --> 00:22:50,899
the crypto set up correctly<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that it</font>

619
00:22:48,200 --> 00:22:52,940
can decrypt what you've sent so the

620
00:22:50,899 --> 00:22:56,029
error is always unencrypted it's always

621
00:22:52,940 --> 00:22:57,250
<font color="#E5E5E5">that value</font><font color="#CCCCCC"> there at 4:02 8 8 9 see so</font>

622
00:22:56,029 --> 00:23:01,279
we've now got an<font color="#E5E5E5"> area that we can</font>

623
00:22:57,250 --> 00:23:02,899
<font color="#E5E5E5">compare against so the approach we're</font>

624
00:23:01,279 --> 00:23:04,940
gonna take<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to find one valid</font>

625
00:23:02,899 --> 00:23:06,768
encrypted read command not know which

626
00:23:04,940 --> 00:23:08,960
one it is but<font color="#E5E5E5"> fine one we're going to</font>

627
00:23:06,769 --> 00:23:10,370
bit flip that to find the other 15 and

628
00:23:08,960 --> 00:23:11,840
then we're<font color="#E5E5E5"> going to test each one until</font>

629
00:23:10,370 --> 00:23:13,219
<font color="#E5E5E5">we find the one that</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> is read</font>

630
00:23:11,840 --> 00:23:14,899
page<font color="#CCCCCC"> zero and then we're going to</font><font color="#E5E5E5"> use</font>

631
00:23:13,220 --> 00:23:17,149
that to recover the key<font color="#E5E5E5"> stream and from</font>

632
00:23:14,899 --> 00:23:18,168
there we're going<font color="#E5E5E5"> to attack the card I'm</font>

633
00:23:17,149 --> 00:23:20,449
going<font color="#CCCCCC"> to go through all those in detail</font>

634
00:23:18,169 --> 00:23:22,070
<font color="#CCCCCC">so here</font><font color="#E5E5E5"> would be the simple brute-force</font>

635
00:23:20,450 --> 00:23:23,720
approach to finding a valid command

636
00:23:22,070 --> 00:23:25,789
<font color="#E5E5E5">you've got a thousand twenty four of</font>

637
00:23:23,720 --> 00:23:27,529
them<font color="#CCCCCC"> just try</font><font color="#E5E5E5"> every one one after</font>

638
00:23:25,789 --> 00:23:29,658
another<font color="#CCCCCC"> make sure you see the</font><font color="#E5E5E5"> card</font>

639
00:23:27,529 --> 00:23:32,659
<font color="#E5E5E5">before you send a command and eventually</font>

640
00:23:29,659 --> 00:23:35,509
you'll hit a valid one that's quite lame

641
00:23:32,659 --> 00:23:38,960
not<font color="#E5E5E5"> very optimized so a different way of</font>

642
00:23:35,509 --> 00:23:40,639
<font color="#CCCCCC">doing it</font><font color="#E5E5E5"> if you imagine that</font><font color="#CCCCCC"> we've got</font>

643
00:23:38,960 --> 00:23:43,190
this encrypted<font color="#E5E5E5"> command which is</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

644
00:23:40,639 --> 00:23:45,439
be e f g h i j k l m n each of those<font color="#E5E5E5"> is</font>

645
00:23:43,190 --> 00:23:48,830
a single bit we know that<font color="#CCCCCC"> f will decrypt</font>

646
00:23:45,440 --> 00:23:51,710
to<font color="#E5E5E5"> 1 and k will decrypt to 0 because CM</font>

647
00:23:48,830 --> 00:23:54,110
0 has to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a 1 for a read command</font><font color="#E5E5E5"> and</font>

648
00:23:51,710 --> 00:24:00,950
the second half is the inverse of<font color="#E5E5E5"> the</font>

649
00:23:54,110 --> 00:24:03,769
first half right<font color="#CCCCCC"> so we also know that</font><font color="#E5E5E5"> so</font>

650
00:24:00,950 --> 00:24:06,230
<font color="#E5E5E5">effing</font><font color="#CCCCCC"> k must decrypt to 1</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 0 we know</font>

651
00:24:03,769 --> 00:24:09,669
that<font color="#E5E5E5"> e G H and I must decrypt the</font>

652
00:24:06,230 --> 00:24:12,350
inverse of<font color="#CCCCCC"> what jl m and n decrypt to</font>

653
00:24:09,669 --> 00:24:14,179
<font color="#E5E5E5">well if we don't care which we</font><font color="#CCCCCC"> command</font>

654
00:24:12,350 --> 00:24:18,469
we're looking for we<font color="#CCCCCC"> can hold jl m and n</font>

655
00:24:14,179 --> 00:24:20,690
<font color="#CCCCCC">2 zeros and</font><font color="#E5E5E5"> that will decrypt to</font>

656
00:24:18,470 --> 00:24:23,059
something and then we can brute

657
00:24:20,690 --> 00:24:25,070
<font color="#CCCCCC">EG h and i to find the inverse</font><font color="#E5E5E5"> of those</font>

658
00:24:23,059 --> 00:24:27,289
when it gets decrypted<font color="#E5E5E5"> so we actually</font>

659
00:24:25,070 --> 00:24:28,100
only<font color="#CCCCCC"> need to brute-force</font><font color="#E5E5E5"> six bits F and</font>

660
00:24:27,289 --> 00:24:31,879
K<font color="#E5E5E5"> and</font>

661
00:24:28,100 --> 00:24:33,649
eghh and<font color="#CCCCCC"> i so that gives us six bits 64</font>

662
00:24:31,880 --> 00:24:35,840
possibilities<font color="#E5E5E5"> of which we're likely to</font>

663
00:24:33,650 --> 00:24:38,570
<font color="#E5E5E5">get hit after 32 so we've just kind</font><font color="#CCCCCC"> of</font>

664
00:24:35,840 --> 00:24:43,399
reduced our<font color="#E5E5E5"> program from a you know some</font>

665
00:24:38,570 --> 00:24:48,980
<font color="#CCCCCC">16 over a thousand or 24 down</font><font color="#E5E5E5"> to 32</font><font color="#CCCCCC"> both</font>

666
00:24:43,400 --> 00:24:50,750
<font color="#CCCCCC">of those</font><font color="#E5E5E5"> but yeah it's it's better so we</font>

667
00:24:48,980 --> 00:24:52,760
would cycle<font color="#E5E5E5"> through those until we found</font>

668
00:24:50,750 --> 00:24:54,320
one encrypted<font color="#E5E5E5"> read command that gives us</font>

669
00:24:52,760 --> 00:24:58,960
<font color="#E5E5E5">back any value other than the error</font>

670
00:24:54,320 --> 00:24:58,960
right and we'll call that<font color="#E5E5E5"> efg hijk LMNOP</font>

671
00:24:59,740 --> 00:25:03,020
<font color="#CCCCCC">so what</font><font color="#E5E5E5"> we're going to do now is we're</font>

672
00:25:01,549 --> 00:25:05,059
going<font color="#E5E5E5"> to find all the</font><font color="#CCCCCC"> other valid read</font>

673
00:25:03,020 --> 00:25:09,590
commands and we're going to<font color="#E5E5E5"> use a bit of</font>

674
00:25:05,059 --> 00:25:12,710
magic<font color="#E5E5E5"> so if you remember FD</font><font color="#CCCCCC"> Crips - 1</font>

675
00:25:09,590 --> 00:25:14,870
and K 2 Crips to<font color="#E5E5E5"> 0 and you know eg H and</font>

676
00:25:12,710 --> 00:25:19,190
I decrypt to<font color="#E5E5E5"> the inverse of what</font><font color="#CCCCCC"> J LM n</font>

677
00:25:14,870 --> 00:25:21,799
and decrypt<font color="#CCCCCC"> e then we</font><font color="#E5E5E5"> can flip</font><font color="#CCCCCC"> some bits</font>

678
00:25:19,190 --> 00:25:23,900
<font color="#E5E5E5">because it's a stream cipher if you flip</font>

679
00:25:21,799 --> 00:25:25,940
<font color="#E5E5E5">a bit in the encrypted</font><font color="#CCCCCC"> version</font><font color="#E5E5E5"> it flips</font>

680
00:25:23,900 --> 00:25:26,330
a bit the<font color="#CCCCCC"> same bit in the plain</font><font color="#E5E5E5"> text</font>

681
00:25:25,940 --> 00:25:30,679
version

682
00:25:26,330 --> 00:25:32,960
<font color="#CCCCCC">alright that's crypto 101 so if we if we</font>

683
00:25:30,679 --> 00:25:35,240
<font color="#E5E5E5">had an encrypted command that happened</font>

684
00:25:32,960 --> 00:25:37,760
to decrypt<font color="#CCCCCC"> a read page</font><font color="#E5E5E5"> for inverted for</font>

685
00:25:35,240 --> 00:25:39,980
example right<font color="#E5E5E5"> and it happened to</font><font color="#CCCCCC"> be this</font>

686
00:25:37,760 --> 00:25:41,809
<font color="#E5E5E5">key stream and it happened to be you</font>

687
00:25:39,980 --> 00:25:44,659
know this encrypted<font color="#E5E5E5"> command that we had</font>

688
00:25:41,809 --> 00:25:46,460
if we<font color="#E5E5E5"> flip the first bit which flips it</font>

689
00:25:44,659 --> 00:25:50,090
from a read inverted to a read command

690
00:25:46,460 --> 00:25:52,610
<font color="#E5E5E5">you can see that we don't have to know</font>

691
00:25:50,090 --> 00:25:54,230
anything about the key stream or which

692
00:25:52,610 --> 00:25:55,699
command we've got we just<font color="#E5E5E5"> know</font><font color="#CCCCCC"> that</font>

693
00:25:54,230 --> 00:25:57,740
flipping<font color="#E5E5E5"> the first bit will flip that</font>

694
00:25:55,700 --> 00:25:59,240
<font color="#E5E5E5">come on but when we flip that first but</font>

695
00:25:57,740 --> 00:26:02,960
<font color="#E5E5E5">we also have to flip the sixth bit</font>

696
00:25:59,240 --> 00:26:04,760
<font color="#E5E5E5">because whatever the first one is going</font>

697
00:26:02,960 --> 00:26:06,919
<font color="#E5E5E5">to change to</font><font color="#CCCCCC"> the other one's got</font><font color="#E5E5E5"> to</font>

698
00:26:04,760 --> 00:26:08,690
change<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the inverse of that</font><font color="#CCCCCC"> so if</font><font color="#E5E5E5"> we</font>

699
00:26:06,919 --> 00:26:09,710
<font color="#CCCCCC">flip a bit on the</font><font color="#E5E5E5"> left side we also have</font>

700
00:26:08,690 --> 00:26:12,260
to flip the same but on the right side

701
00:26:09,710 --> 00:26:14,650
<font color="#CCCCCC">but we don't care that it's encrypted it</font>

702
00:26:12,260 --> 00:26:18,320
just it flips the plaintext bits as<font color="#CCCCCC"> well</font>

703
00:26:14,650 --> 00:26:20,510
so we can flip the inverted bit<font color="#E5E5E5"> quite</font>

704
00:26:18,320 --> 00:26:22,668
happily<font color="#E5E5E5"> equally if you've got the page</font>

705
00:26:20,510 --> 00:26:27,110
<font color="#E5E5E5">bits which are the second third and</font>

706
00:26:22,669 --> 00:26:28,370
fourth the third<font color="#CCCCCC"> fourth</font><font color="#E5E5E5"> or fifth bits on</font>

707
00:26:27,110 --> 00:26:30,979
<font color="#E5E5E5">the</font><font color="#CCCCCC"> left-hand side and</font><font color="#E5E5E5"> the third fourth</font>

708
00:26:28,370 --> 00:26:32,928
and fifth bits on<font color="#E5E5E5"> the right-hand</font><font color="#CCCCCC"> side if</font>

709
00:26:30,980 --> 00:26:35,929
it was reading<font color="#E5E5E5"> verted page four</font><font color="#CCCCCC"> we could</font>

710
00:26:32,929 --> 00:26:39,860
flip<font color="#CCCCCC"> the fifth bit and it changed it to</font>

711
00:26:35,929 --> 00:26:41,360
page<font color="#E5E5E5"> five and equally</font><font color="#CCCCCC"> we have to flip</font>

712
00:26:39,860 --> 00:26:41,928
the same bit in the right-hand side<font color="#E5E5E5"> of</font>

713
00:26:41,360 --> 00:26:44,360
the<font color="#CCCCCC"> command</font>

714
00:26:41,929 --> 00:26:46,190
well so it's the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> thing we're</font>

715
00:26:44,360 --> 00:26:47,570
flipping bits in the encrypted<font color="#E5E5E5"> content</font>

716
00:26:46,190 --> 00:26:49,580
and it's<font color="#E5E5E5"> flipping the bits in the</font>

717
00:26:47,570 --> 00:26:51,408
<font color="#CCCCCC">plaintext for us it's like</font><font color="#E5E5E5"> a known</font>

718
00:26:49,580 --> 00:26:52,039
ciphertext attack<font color="#E5E5E5"> it's that kind of that</font>

719
00:26:51,409 --> 00:26:54,950
<font color="#CCCCCC">kind of world</font>

720
00:26:52,039 --> 00:26:56,899
so using<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we can build up a massive</font>

721
00:26:54,950 --> 00:26:58,730
<font color="#CCCCCC">table there's</font><font color="#E5E5E5"> any four bits to flip and</font>

722
00:26:56,899 --> 00:27:01,399
the same four bits<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> right-hand</font>

723
00:26:58,730 --> 00:27:03,379
<font color="#CCCCCC">side and which is</font><font color="#E5E5E5"> 16 possibilities which</font>

724
00:27:01,399 --> 00:27:05,029
is the right number<font color="#CCCCCC"> a</font><font color="#E5E5E5"> we ate normal and</font>

725
00:27:03,379 --> 00:27:06,529
<font color="#CCCCCC">eight</font><font color="#E5E5E5"> in varied so we just build a big</font>

726
00:27:05,029 --> 00:27:08,029
table that<font color="#E5E5E5"> flips all of those we don't</font>

727
00:27:06,529 --> 00:27:10,759
<font color="#E5E5E5">have send</font><font color="#CCCCCC"> anything else</font><font color="#E5E5E5"> to the tag we</font>

728
00:27:08,029 --> 00:27:12,379
can<font color="#E5E5E5"> just from</font><font color="#CCCCCC"> getting one encrypted</font><font color="#E5E5E5"> read</font>

729
00:27:10,759 --> 00:27:15,559
<font color="#CCCCCC">pile we can then get the other</font><font color="#E5E5E5"> 15</font>

730
00:27:12,379 --> 00:27:17,990
instantly<font color="#E5E5E5"> but instantly it's a couple of</font>

731
00:27:15,559 --> 00:27:19,759
hours<font color="#CCCCCC"> of</font><font color="#E5E5E5"> C but you know</font><font color="#CCCCCC"> so now</font><font color="#E5E5E5"> you've</font>

732
00:27:17,990 --> 00:27:22,220
got<font color="#E5E5E5"> a table of all</font><font color="#CCCCCC"> sixteen read commands</font>

733
00:27:19,759 --> 00:27:23,749
<font color="#CCCCCC">one</font><font color="#E5E5E5"> of those will be read page zero not</font>

734
00:27:22,220 --> 00:27:25,220
inverted which is the one we're<font color="#CCCCCC"> looking</font>

735
00:27:23,749 --> 00:27:29,299
<font color="#CCCCCC">for</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we already</font><font color="#E5E5E5"> know the</font><font color="#CCCCCC"> answer</font>

736
00:27:25,220 --> 00:27:30,529
<font color="#CCCCCC">to page 0 which is the OID so what we're</font>

737
00:27:29,299 --> 00:27:33,590
going<font color="#E5E5E5"> to do is we're going</font><font color="#CCCCCC"> to</font>

738
00:27:30,529 --> 00:27:34,970
essentially test each one<font color="#E5E5E5"> yes really</font>

739
00:27:33,590 --> 00:27:37,759
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> and every time we test</font>

740
00:27:34,970 --> 00:27:39,919
one we will initialize<font color="#E5E5E5"> the tag so that</font>

741
00:27:37,759 --> 00:27:41,419
<font color="#CCCCCC">we</font><font color="#E5E5E5"> get the same key stream otherwise</font>

742
00:27:39,919 --> 00:27:44,240
none of this<font color="#E5E5E5"> works all bets are off but</font>

743
00:27:41,419 --> 00:27:46,039
want<font color="#E5E5E5"> the same key stream every time so</font>

744
00:27:44,240 --> 00:27:47,629
we're gonna use<font color="#E5E5E5"> our you know emulated</font>

745
00:27:46,039 --> 00:27:49,100
video<font color="#E5E5E5"> remember we're sending the same</font>

746
00:27:47,629 --> 00:27:50,928
month each time so you get<font color="#E5E5E5"> the case same</font>

747
00:27:49,100 --> 00:27:52,369
key<font color="#E5E5E5"> stream every time so what we're</font>

748
00:27:50,929 --> 00:27:53,690
going<font color="#E5E5E5"> to do is we know it would take our</font>

749
00:27:52,369 --> 00:27:55,600
first<font color="#E5E5E5"> guess we're going to assume it's</font>

750
00:27:53,690 --> 00:27:58,100
correct<font color="#CCCCCC"> right</font>

751
00:27:55,600 --> 00:28:00,740
so we're going to<font color="#E5E5E5"> assume our 10 bit</font>

752
00:27:58,100 --> 00:28:03,080
guess<font color="#E5E5E5"> I our first 10 bit encrypted</font>

753
00:28:00,740 --> 00:28:04,639
command is read page<font color="#E5E5E5"> 0 and we're going</font>

754
00:28:03,080 --> 00:28:08,199
<font color="#CCCCCC">to assume the response we get</font><font color="#E5E5E5"> back is</font>

755
00:28:04,639 --> 00:28:10,340
<font color="#CCCCCC">the UID</font><font color="#E5E5E5"> so we can XOR the encrypted</font>

756
00:28:08,200 --> 00:28:12,139
command<font color="#E5E5E5"> that we send and the encrypted</font>

757
00:28:10,340 --> 00:28:14,720
response we<font color="#E5E5E5"> get back with the plaintext</font>

758
00:28:12,139 --> 00:28:16,789
command for V page<font color="#E5E5E5"> 0 and the plaintext</font>

759
00:28:14,720 --> 00:28:18,830
response of what it should<font color="#CCCCCC"> be which</font><font color="#E5E5E5"> is</font>

760
00:28:16,789 --> 00:28:21,350
<font color="#E5E5E5">the ID page 0 and that'll give us the</font>

761
00:28:18,830 --> 00:28:23,840
first 42 bits of key stream if we're

762
00:28:21,350 --> 00:28:26,418
right how do<font color="#E5E5E5"> we know if we're right well</font>

763
00:28:23,840 --> 00:28:27,619
if you remember<font color="#CCCCCC"> the</font><font color="#E5E5E5"> extended command bit</font>

764
00:28:26,419 --> 00:28:29,749
we've had earlier you can make your

765
00:28:27,619 --> 00:28:32,059
commands<font color="#E5E5E5"> as long as you like well we can</font>

766
00:28:29,749 --> 00:28:33,649
<font color="#E5E5E5">make a 40-bit read page 0 command but</font>

767
00:28:32,059 --> 00:28:38,269
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> just repeating the blocks so</font>

768
00:28:33,649 --> 00:28:39,590
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> eight blocks in here you can</font><font color="#CCCCCC"> see</font>

769
00:28:38,269 --> 00:28:41,029
you've<font color="#CCCCCC"> got a normal</font><font color="#E5E5E5"> block and an</font>

770
00:28:39,590 --> 00:28:43,759
inverted block<font color="#E5E5E5"> repeat it four times</font>

771
00:28:41,029 --> 00:28:46,879
which makes 40 bits<font color="#E5E5E5"> so that would be a</font>

772
00:28:43,759 --> 00:28:50,779
you know<font color="#E5E5E5"> a really really high integrity</font>

773
00:28:46,879 --> 00:28:53,990
we paid zero<font color="#E5E5E5"> command right well we</font><font color="#CCCCCC"> can</font>

774
00:28:50,779 --> 00:28:55,340
reset the tag by reinitializing the<font color="#CCCCCC"> PRNG</font>

775
00:28:53,990 --> 00:28:58,040
<font color="#CCCCCC">again by doing the</font>

776
00:28:55,340 --> 00:28:59,209
hello in his<font color="#E5E5E5"> I replayed nonce so we're</font>

777
00:28:58,040 --> 00:29:02,060
back<font color="#E5E5E5"> to the same key stream</font><font color="#CCCCCC"> we were</font>

778
00:28:59,210 --> 00:29:04,460
using<font color="#E5E5E5"> before</font><font color="#CCCCCC"> and then we can</font><font color="#E5E5E5"> take our 40</font>

779
00:29:02,060 --> 00:29:06,379
bit read page<font color="#CCCCCC"> zero command</font><font color="#E5E5E5"> XOR that with</font>

780
00:29:04,460 --> 00:29:08,030
the first 40 bits of the key stream that

781
00:29:06,380 --> 00:29:09,710
we think we've recovered<font color="#E5E5E5"> if we were</font>

782
00:29:08,030 --> 00:29:12,350
right and<font color="#E5E5E5"> that will give us an encrypted</font>

783
00:29:09,710 --> 00:29:14,390
repo<font color="#CCCCCC"> zero card</font><font color="#E5E5E5"> we then play</font><font color="#CCCCCC"> that to the</font>

784
00:29:12,350 --> 00:29:16,490
tag<font color="#E5E5E5"> having you know initialize the tag</font>

785
00:29:14,390 --> 00:29:18,620
<font color="#E5E5E5">and we are either get back the error</font>

786
00:29:16,490 --> 00:29:21,170
response which<font color="#E5E5E5"> means that it didn't</font>

787
00:29:18,620 --> 00:29:23,659
decrypt properly as<font color="#E5E5E5"> in the integrity</font>

788
00:29:21,170 --> 00:29:25,310
failed<font color="#E5E5E5"> and know that that isn't read</font>

789
00:29:23,660 --> 00:29:27,740
page<font color="#E5E5E5"> zero that we've found and move on</font>

790
00:29:25,310 --> 00:29:30,260
to<font color="#E5E5E5"> our</font><font color="#CCCCCC"> next possible guess or we get</font>

791
00:29:27,740 --> 00:29:32,660
back a<font color="#E5E5E5"> 32-bit response</font><font color="#CCCCCC"> which isn't the</font>

792
00:29:30,260 --> 00:29:34,730
error and if we get<font color="#E5E5E5"> that we know that</font>

793
00:29:32,660 --> 00:29:36,440
<font color="#E5E5E5">that is the</font><font color="#CCCCCC"> tag replying to read page</font>

794
00:29:34,730 --> 00:29:38,690
<font color="#CCCCCC">zero so</font><font color="#E5E5E5"> that is the encrypted</font><font color="#CCCCCC"> version of</font>

795
00:29:36,440 --> 00:29:40,700
page zero which we know so we can XOR

796
00:29:38,690 --> 00:29:43,640
those together and get<font color="#E5E5E5"> the next 32 bits</font>

797
00:29:40,700 --> 00:29:46,070
<font color="#E5E5E5">a key stream</font><font color="#CCCCCC"> no it's a really neat</font>

798
00:29:43,640 --> 00:29:47,570
attack<font color="#E5E5E5"> I'm yeah it may I say it made me</font>

799
00:29:46,070 --> 00:29:50,480
think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> crypto differently the way</font>

800
00:29:47,570 --> 00:29:51,980
<font color="#E5E5E5">these academics go about this so at this</font>

801
00:29:50,480 --> 00:29:53,930
<font color="#E5E5E5">point we've got</font><font color="#CCCCCC"> a replayable nonce</font>

802
00:29:51,980 --> 00:29:56,600
<font color="#CCCCCC">challenge response</font><font color="#E5E5E5"> pair where we can</font>

803
00:29:53,930 --> 00:29:59,270
integrate the tag<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we've got</font><font color="#CCCCCC"> 70 to 72</font>

804
00:29:56,600 --> 00:30:02,540
bits of key stream<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> more than</font>

805
00:29:59,270 --> 00:30:04,520
<font color="#CCCCCC">enough</font><font color="#E5E5E5"> for what we want to try so what</font>

806
00:30:02,540 --> 00:30:06,260
we want to<font color="#CCCCCC"> do is read all eight pages</font><font color="#E5E5E5"> so</font>

807
00:30:04,520 --> 00:30:08,120
basically<font color="#E5E5E5"> in a loop from naught to</font><font color="#CCCCCC"> seven</font>

808
00:30:06,260 --> 00:30:10,610
we basically initialize the tag with

809
00:30:08,120 --> 00:30:12,050
that we played nonce<font color="#E5E5E5"> so we set the key</font>

810
00:30:10,610 --> 00:30:16,000
stream<font color="#E5E5E5"> to what we now know the key</font>

811
00:30:12,050 --> 00:30:19,639
stream is we make a command<font color="#E5E5E5"> read page</font><font color="#CCCCCC"> n</font>

812
00:30:16,000 --> 00:30:21,350
<font color="#CCCCCC">or</font><font color="#E5E5E5"> I in this case</font><font color="#CCCCCC"> increment and then we</font>

813
00:30:19,640 --> 00:30:23,690
encrypt<font color="#E5E5E5"> it so we XOR that with the first</font>

814
00:30:21,350 --> 00:30:25,550
<font color="#CCCCCC">ten bits</font><font color="#E5E5E5"> of the key stream send it to</font>

815
00:30:23,690 --> 00:30:27,230
the tag the tag will quite happily say

816
00:30:25,550 --> 00:30:28,820
yes<font color="#E5E5E5"> that's a valid command that is this</font>

817
00:30:27,230 --> 00:30:31,190
thing<font color="#E5E5E5"> and reply</font><font color="#CCCCCC"> with an encrypted</font>

818
00:30:28,820 --> 00:30:33,050
response<font color="#E5E5E5"> well we can XOR that with the</font>

819
00:30:31,190 --> 00:30:35,030
next<font color="#E5E5E5"> 32 bits of key stream</font><font color="#CCCCCC"> that we've</font>

820
00:30:33,050 --> 00:30:37,370
<font color="#E5E5E5">got and</font><font color="#CCCCCC"> that will give us</font><font color="#E5E5E5"> back the clear</font>

821
00:30:35,030 --> 00:30:38,899
<font color="#E5E5E5">text version of that page so</font><font color="#CCCCCC"> we're now</font>

822
00:30:37,370 --> 00:30:40,729
communicating<font color="#E5E5E5"> with the tag as if we knew</font>

823
00:30:38,900 --> 00:30:41,990
the key but<font color="#CCCCCC"> we still</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> know the key</font>

824
00:30:40,730 --> 00:30:44,180
all we've got is the key stream<font color="#E5E5E5"> that</font>

825
00:30:41,990 --> 00:30:44,840
<font color="#E5E5E5">tanks using because we've used</font><font color="#CCCCCC"> the nonce</font>

826
00:30:44,180 --> 00:30:47,570
<font color="#CCCCCC">FreePlay</font>

827
00:30:44,840 --> 00:30:50,689
and the integrity protection<font color="#E5E5E5"> to ensure</font>

828
00:30:47,570 --> 00:30:51,889
that so it's quite<font color="#CCCCCC"> a neat little trick</font>

829
00:30:50,690 --> 00:30:53,720
<font color="#E5E5E5">and because you do the whole thing</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> a</font>

830
00:30:51,890 --> 00:30:55,160
loop you only need the first 42 bits of

831
00:30:53,720 --> 00:30:56,690
key stream because each time and you

832
00:30:55,160 --> 00:30:59,360
reinitialize and<font color="#CCCCCC"> use the same bit of key</font>

833
00:30:56,690 --> 00:31:02,240
stream again so that should<font color="#E5E5E5"> give</font><font color="#CCCCCC"> us back</font>

834
00:30:59,360 --> 00:31:04,459
<font color="#E5E5E5">all eight pages</font><font color="#CCCCCC"> of the tag and you</font>

835
00:31:02,240 --> 00:31:06,290
notice<font color="#CCCCCC"> that the key is convenient ages</font>

836
00:31:04,460 --> 00:31:08,090
<font color="#E5E5E5">one</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> two and the tag password is</font>

837
00:31:06,290 --> 00:31:08,850
convenien page<font color="#E5E5E5"> three so once you've got</font>

838
00:31:08,090 --> 00:31:10,830
back<font color="#E5E5E5"> your</font><font color="#CCCCCC"> 8p</font>

839
00:31:08,850 --> 00:31:12,809
you can then<font color="#E5E5E5"> write</font><font color="#CCCCCC"> down the key and</font><font color="#E5E5E5"> from</font>

840
00:31:10,830 --> 00:31:15,210
this<font color="#E5E5E5"> point onwards you can just off to</font>

841
00:31:12,809 --> 00:31:16,559
<font color="#E5E5E5">the tag by setting your own reader to</font>

842
00:31:15,210 --> 00:31:18,360
use that key<font color="#E5E5E5"> and then you don't have to</font>

843
00:31:16,559 --> 00:31:21,539
<font color="#E5E5E5">do any</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this monkeying around</font>

844
00:31:18,360 --> 00:31:24,029
so you crack one<font color="#E5E5E5"> tag in a system you can</font>

845
00:31:21,539 --> 00:31:25,830
<font color="#CCCCCC">then make a reader that can</font><font color="#E5E5E5"> read</font>

846
00:31:24,029 --> 00:31:27,720
anyone's tag<font color="#E5E5E5"> you know you know if you</font>

847
00:31:25,830 --> 00:31:31,740
only<font color="#E5E5E5"> have to crack crack it won't you'll</font>

848
00:31:27,720 --> 00:31:33,750
have to crack it every time<font color="#CCCCCC"> so of course</font>

849
00:31:31,740 --> 00:31:36,240
if you like me you go<font color="#CCCCCC"> to the art fiddler</font>

850
00:31:33,750 --> 00:31:38,399
page and you download the source<font color="#CCCCCC"> code</font>

851
00:31:36,240 --> 00:31:40,710
and<font color="#E5E5E5"> then you download the build</font>

852
00:31:38,399 --> 00:31:43,620
<font color="#CCCCCC">environment which is mplab IDF of pics</font>

853
00:31:40,710 --> 00:31:47,700
<font color="#E5E5E5">80</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> takes about five hours</font><font color="#CCCCCC"> to</font>

854
00:31:43,620 --> 00:31:50,178
<font color="#CCCCCC">install on Arch Linux you know there's</font>

855
00:31:47,700 --> 00:31:53,039
the longest five hours of<font color="#E5E5E5"> my</font><font color="#CCCCCC"> life and</font>

856
00:31:50,179 --> 00:31:54,120
you find it's all in C and if you can

857
00:31:53,039 --> 00:31:58,980
see that<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> that's some</font><font color="#CCCCCC"> of my</font>

858
00:31:54,120 --> 00:32:01,320
horrendous code<font color="#CCCCCC"> but it's all C and you</font>

859
00:31:58,980 --> 00:32:02,940
can<font color="#E5E5E5"> find all the</font><font color="#CCCCCC"> codes you need within</font>

860
00:32:01,320 --> 00:32:05,668
our fiddler so in there<font color="#E5E5E5"> I've written</font>

861
00:32:02,940 --> 00:32:07,320
like a transmit and receive<font color="#E5E5E5"> function but</font>

862
00:32:05,669 --> 00:32:09,000
I basically just<font color="#E5E5E5"> went mining like the</font>

863
00:32:07,320 --> 00:32:11,700
<font color="#CCCCCC">our fiddler code and found commands</font><font color="#E5E5E5"> that</font>

864
00:32:09,000 --> 00:32:14,279
I liked and then<font color="#CCCCCC"> tweak them in and hack</font>

865
00:32:11,700 --> 00:32:18,720
<font color="#E5E5E5">them until they worked</font><font color="#CCCCCC"> so all</font><font color="#E5E5E5"> of this</font>

866
00:32:14,279 --> 00:32:21,240
code is<font color="#E5E5E5"> well it's all it's all on a</font>

867
00:32:18,720 --> 00:32:23,250
github<font color="#E5E5E5"> whether Adams pushed the button</font>

868
00:32:21,240 --> 00:32:24,629
and<font color="#E5E5E5"> brought it into the main master I</font>

869
00:32:23,250 --> 00:32:27,570
don't know but he's<font color="#CCCCCC"> supposed to do it</font>

870
00:32:24,629 --> 00:32:28,289
today<font color="#CCCCCC"> so today tomorrow next</font><font color="#E5E5E5"> week</font>

871
00:32:27,570 --> 00:32:29,700
sometime

872
00:32:28,289 --> 00:32:32,190
I've seen him next week<font color="#CCCCCC"> actually a</font>

873
00:32:29,700 --> 00:32:35,090
hardware<font color="#E5E5E5"> to IO so if it's not by next</font>

874
00:32:32,190 --> 00:32:40,139
week I'll make<font color="#E5E5E5"> sure it is next week</font>

875
00:32:35,090 --> 00:32:42,299
sorry yes yeah yeah we've had

876
00:32:40,139 --> 00:32:43,408
<font color="#CCCCCC">disagreements over</font><font color="#E5E5E5"> style as you'd</font>

877
00:32:42,299 --> 00:32:45,960
imagine

878
00:32:43,409 --> 00:32:49,799
mainly I have no coding style<font color="#E5E5E5"> and Adam</font>

879
00:32:45,960 --> 00:32:52,559
<font color="#CCCCCC">yes so here's the commands that I've</font>

880
00:32:49,799 --> 00:32:55,918
added<font color="#E5E5E5"> to our fiddler</font><font color="#CCCCCC"> six high tech two</font>

881
00:32:52,559 --> 00:32:57,809
commands<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> the crack function</font>

882
00:32:55,919 --> 00:33:00,600
which is the attack I've just talked

883
00:32:57,809 --> 00:33:01,950
about<font color="#E5E5E5"> key stream function which</font>

884
00:33:00,600 --> 00:33:04,289
retrieves key stream which we need for

885
00:33:01,950 --> 00:33:06,299
<font color="#CCCCCC">attack to I'm talking about</font><font color="#E5E5E5"> tomorrow</font><font color="#CCCCCC"> a</font>

886
00:33:04,289 --> 00:33:07,919
<font color="#CCCCCC">high tack to reader which actually</font><font color="#E5E5E5"> will</font>

887
00:33:06,299 --> 00:33:10,019
just<font color="#E5E5E5"> given a key will just read tags</font>

888
00:33:07,919 --> 00:33:11,820
<font color="#E5E5E5">quite happily</font><font color="#CCCCCC"> and if you give</font><font color="#E5E5E5"> it s it</font>

889
00:33:10,019 --> 00:33:13,529
will store them<font color="#E5E5E5"> in</font><font color="#CCCCCC"> NVRAM so you can</font>

890
00:33:11,820 --> 00:33:14,730
power the off<font color="#CCCCCC"> vigil off a battery</font><font color="#E5E5E5"> so you</font>

891
00:33:13,529 --> 00:33:17,220
don't eat your laptop then you can just

892
00:33:14,730 --> 00:33:18,419
<font color="#E5E5E5">like sort rip off people's tags it just</font>

893
00:33:17,220 --> 00:33:19,529
took someone<font color="#CCCCCC"> into everywhere and when</font>

894
00:33:18,419 --> 00:33:21,690
you<font color="#CCCCCC"> took</font><font color="#E5E5E5"> it back into your computer</font><font color="#CCCCCC"> you</font>

895
00:33:19,529 --> 00:33:22,799
<font color="#CCCCCC">can then list</font><font color="#E5E5E5"> the account how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> there</font>

896
00:33:21,690 --> 00:33:26,220
<font color="#E5E5E5">are</font><font color="#CCCCCC"> and then</font>

897
00:33:22,799 --> 00:33:29,040
and I've modified the sniff<font color="#E5E5E5"> pwm function</font>

898
00:33:26,220 --> 00:33:30,480
so to actually<font color="#E5E5E5"> read the nonce encrypted</font>

899
00:33:29,040 --> 00:33:33,080
<font color="#CCCCCC">not</font><font color="#E5E5E5"> encrypted</font><font color="#CCCCCC"> challenge-response values</font>

900
00:33:30,480 --> 00:33:35,670
that the reader<font color="#E5E5E5"> presents</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the tag so</font>

901
00:33:33,080 --> 00:33:37,590
again you can<font color="#E5E5E5"> power that goes all goes</font>

902
00:33:35,670 --> 00:33:39,420
to<font color="#CCCCCC"> NVRAM so you can power your</font><font color="#E5E5E5"> are</font>

903
00:33:37,590 --> 00:33:42,600
fiddler and<font color="#E5E5E5"> stick it on the reader and</font>

904
00:33:39,420 --> 00:33:44,220
present a tag and it will capture those

905
00:33:42,600 --> 00:33:48,540
values for<font color="#E5E5E5"> you so you've got some values</font>

906
00:33:44,220 --> 00:33:50,820
to<font color="#CCCCCC"> use in the attacks so the way this</font>

907
00:33:48,540 --> 00:33:53,280
attack would work<font color="#E5E5E5"> very quickly is</font><font color="#CCCCCC"> you</font>

908
00:33:50,820 --> 00:34:00,090
set it<font color="#E5E5E5"> too high tag to mode you'd clear</font>

909
00:33:53,280 --> 00:34:01,320
the PWM<font color="#E5E5E5"> non storage tell it to sniff as</font>

910
00:34:00,090 --> 00:34:03,600
<font color="#CCCCCC">in</font><font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> in command which means you</font>

911
00:34:01,320 --> 00:34:05,580
<font color="#CCCCCC">can pair it</font><font color="#E5E5E5"> from a battery stick on the</font>

912
00:34:03,600 --> 00:34:07,110
antenna<font color="#E5E5E5"> load value stick plug into your</font>

913
00:34:05,580 --> 00:34:08,399
computer list the values you've got and

914
00:34:07,110 --> 00:34:09,839
<font color="#E5E5E5">then use one of them in the attack</font>

915
00:34:08,399 --> 00:34:13,199
against<font color="#E5E5E5"> the same tag that you've just</font>

916
00:34:09,840 --> 00:34:20,790
got a nonce for would you<font color="#E5E5E5"> like to see a</font>

917
00:34:13,199 --> 00:34:27,418
demo so this is the live demo there is

918
00:34:20,790 --> 00:34:35,520
no recording if<font color="#E5E5E5"> you see it's easier up</font>

919
00:34:27,418 --> 00:34:40,918
here right so this is our fiddler<font color="#E5E5E5"> it's</font>

920
00:34:35,520 --> 00:34:50,399
so all in<font color="#E5E5E5"> mini-com so there's all my my</font>

921
00:34:40,918 --> 00:34:53,279
new functions<font color="#E5E5E5"> shiny</font><font color="#CCCCCC"> so make it high-tech</font>

922
00:34:50,399 --> 00:34:54,540
<font color="#CCCCCC">to</font><font color="#E5E5E5"> write</font><font color="#CCCCCC"> I've got so I've got to our</font>

923
00:34:53,280 --> 00:34:56,850
<font color="#CCCCCC">features appear got another one acting</font>

924
00:34:54,540 --> 00:34:59,040
like a reader<font color="#CCCCCC"> I will say like getting a</font>

925
00:34:56,850 --> 00:35:00,660
high tag<font color="#E5E5E5"> to readers really hard</font><font color="#CCCCCC"> I've got</font>

926
00:34:59,040 --> 00:35:04,050
one for a building<font color="#CCCCCC"> access system but</font>

927
00:35:00,660 --> 00:35:06,359
it's not<font color="#E5E5E5"> a normal one it does the stuff</font>

928
00:35:04,050 --> 00:35:09,240
that is far too complicated to talk

929
00:35:06,359 --> 00:35:11,009
<font color="#CCCCCC">about these talks but it's slightly more</font>

930
00:35:09,240 --> 00:35:13,200
involved protocol but getting<font color="#E5E5E5"> an actual</font>

931
00:35:11,010 --> 00:35:14,160
<font color="#CCCCCC">high tag</font><font color="#E5E5E5"> to video so first make them and</font>

932
00:35:13,200 --> 00:35:17,520
there's other<font color="#CCCCCC"> people who make them</font>

933
00:35:14,160 --> 00:35:20,970
<font color="#E5E5E5">technology box up one form a company</font>

934
00:35:17,520 --> 00:35:23,550
called frequent and<font color="#CCCCCC"> Technology</font><font color="#E5E5E5"> horrible</font>

935
00:35:20,970 --> 00:35:25,410
to deal with<font color="#E5E5E5"> like just just to say I</font>

936
00:35:23,550 --> 00:35:27,810
think I've tried<font color="#E5E5E5"> to deal with them not</font>

937
00:35:25,410 --> 00:35:29,100
<font color="#CCCCCC">very nice people</font><font color="#E5E5E5"> and the first one I</font>

938
00:35:27,810 --> 00:35:31,440
can't make any<font color="#E5E5E5"> of them work about</font><font color="#CCCCCC"> three</font>

939
00:35:29,100 --> 00:35:33,450
<font color="#E5E5E5">my hands and none</font><font color="#CCCCCC"> of them work so I'm</font>

940
00:35:31,440 --> 00:35:37,730
using<font color="#E5E5E5"> another</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> fiddler as a reader</font>

941
00:35:33,450 --> 00:35:37,730
abusing my<font color="#E5E5E5"> high tech to</font><font color="#CCCCCC"> read oh c'mon</font>

942
00:35:37,760 --> 00:35:53,099
<font color="#CCCCCC">so so we're sniffing the pwm traffic and</font>

943
00:35:50,190 --> 00:35:54,569
you can see<font color="#CCCCCC"> they're just our earth come</font>

944
00:35:53,099 --> 00:35:57,569
<font color="#E5E5E5">on because the</font><font color="#CCCCCC"> reed is costly start</font>

945
00:35:54,569 --> 00:36:00,569
<font color="#E5E5E5">walking and</font><font color="#CCCCCC"> I'll put a tag on put a tag</font>

946
00:35:57,569 --> 00:36:03,000
on be right<font color="#E5E5E5"> they go so you can sort of</font>

947
00:36:00,569 --> 00:36:08,670
see interacting and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see the</font>

948
00:36:03,000 --> 00:36:11,430
nonce keeps changing the<font color="#E5E5E5"> PRN yep</font><font color="#CCCCCC"> so that</font>

949
00:36:08,670 --> 00:36:12,569
would<font color="#E5E5E5"> be how we'd capture the oh it goes</font>

950
00:36:11,430 --> 00:36:22,618
off the<font color="#E5E5E5"> side</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> screen that's a</font>

951
00:36:12,569 --> 00:36:36,930
shame did it<font color="#E5E5E5"> the joys of live demos a</font>

952
00:36:22,619 --> 00:36:41,609
right oops<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> was on the</font>

953
00:36:36,930 --> 00:36:46,549
<font color="#CCCCCC">mic was</font><font color="#E5E5E5"> it good so use high tech and</font>

954
00:36:41,609 --> 00:36:51,180
then put a come<font color="#E5E5E5"> on get the</font><font color="#CCCCCC"> tags around</font>

955
00:36:46,549 --> 00:36:52,980
<font color="#E5E5E5">yeah right so yeah so you can see</font><font color="#CCCCCC"> the</font>

956
00:36:51,180 --> 00:36:54,270
<font color="#CCCCCC">PRN is the encrypted</font><font color="#E5E5E5"> nonce and the</font>

957
00:36:52,980 --> 00:36:56,609
secret is the<font color="#E5E5E5"> encrypted</font>

958
00:36:54,270 --> 00:37:00,029
<font color="#CCCCCC">challenge/response value if we were</font><font color="#E5E5E5"> just</font>

959
00:36:56,609 --> 00:37:02,069
then go like list the ones that we've

960
00:37:00,029 --> 00:37:03,630
got I've got<font color="#E5E5E5"> nodes that we've just</font>

961
00:37:02,069 --> 00:37:04,710
captured doing that so<font color="#E5E5E5"> you could take</font>

962
00:37:03,630 --> 00:37:05,910
this<font color="#E5E5E5"> and put it on the reader and you</font>

963
00:37:04,710 --> 00:37:07,559
could capture a<font color="#E5E5E5"> challenge response</font>

964
00:37:05,910 --> 00:37:09,379
<font color="#E5E5E5">encrypt or not so challenge response</font>

965
00:37:07,559 --> 00:37:11,670
<font color="#E5E5E5">value you probably want to capture a few</font>

966
00:37:09,380 --> 00:37:14,430
<font color="#E5E5E5">because if any of these bits have been</font>

967
00:37:11,670 --> 00:37:15,990
flipped in the RF world then<font color="#CCCCCC"> they</font><font color="#E5E5E5"> become</font>

968
00:37:14,430 --> 00:37:17,848
useless to you so get<font color="#E5E5E5"> more than one</font>

969
00:37:15,990 --> 00:37:26,729
<font color="#E5E5E5">because you probably need them now</font>

970
00:37:17,849 --> 00:37:28,529
if so take my tag<font color="#CCCCCC"> we can take the last</font>

971
00:37:26,730 --> 00:37:30,329
<font color="#CCCCCC">one I actually doing it live</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> right</font>

972
00:37:28,529 --> 00:37:34,500
even<font color="#E5E5E5"> using like and values we take the</font>

973
00:37:30,329 --> 00:37:35,569
<font color="#E5E5E5">last one I've</font><font color="#CCCCCC"> got a tag I've got a tag</font>

974
00:37:34,500 --> 00:37:46,049
on there at<font color="#E5E5E5"> the moment</font>

975
00:37:35,569 --> 00:37:48,029
<font color="#E5E5E5">sorry no yep there</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so we hit</font>

976
00:37:46,049 --> 00:37:51,140
crack and we give<font color="#E5E5E5"> it the encrypted nonce</font>

977
00:37:48,029 --> 00:37:51,140
<font color="#E5E5E5">encryption challenge response value</font>

978
00:37:51,540 --> 00:37:56,050
yeah<font color="#E5E5E5"> okay I</font><font color="#CCCCCC"> need to move my laptop</font>

979
00:37:54,250 --> 00:38:09,700
around<font color="#CCCCCC"> a little bit it's the fields over</font>

980
00:37:56,050 --> 00:38:11,140
<font color="#CCCCCC">um right oh it worked okay let's let's</font>

981
00:38:09,700 --> 00:38:12,970
<font color="#CCCCCC">just run</font><font color="#E5E5E5"> that again and</font><font color="#CCCCCC"> see if</font><font color="#E5E5E5"> it works</font>

982
00:38:11,140 --> 00:38:16,660
like properly now I've moved<font color="#CCCCCC"> all the</font>

983
00:38:12,970 --> 00:38:18,490
stuff<font color="#E5E5E5"> out of the</font><font color="#CCCCCC"> way yeah this looks</font>

984
00:38:16,660 --> 00:38:19,839
look<font color="#E5E5E5"> yeah</font>

985
00:38:18,490 --> 00:38:24,459
oh yeah that's because<font color="#E5E5E5"> it would</font><font color="#CCCCCC"> have hit</font>

986
00:38:19,840 --> 00:38:25,930
<font color="#CCCCCC">a non read command at that point yeah so</font>

987
00:38:24,460 --> 00:38:27,910
that's how the<font color="#CCCCCC"> attack should look okay</font>

988
00:38:25,930 --> 00:38:40,149
<font color="#E5E5E5">so there you go that is a TAC one</font>

989
00:38:27,910 --> 00:38:45,220
working and then we could that's<font color="#E5E5E5"> one</font>

990
00:38:40,150 --> 00:38:46,660
eight pages yeah so can you see<font color="#E5E5E5"> can</font>

991
00:38:45,220 --> 00:38:48,310
<font color="#E5E5E5">everyone see I can't even for my</font><font color="#CCCCCC"> mouse</font>

992
00:38:46,660 --> 00:38:50,649
as well<font color="#E5E5E5"> can you everyone see this so</font>

993
00:38:48,310 --> 00:38:53,650
that's<font color="#E5E5E5"> the UID there which is public</font>

994
00:38:50,650 --> 00:38:57,160
that is the lower the<font color="#CCCCCC"> upper 32 bits of</font>

995
00:38:53,650 --> 00:38:59,680
the key that is<font color="#CCCCCC"> the lower</font><font color="#E5E5E5"> 32 lower 16</font>

996
00:38:57,160 --> 00:39:02,140
bits of the key<font color="#E5E5E5"> that's the conflict</font><font color="#CCCCCC"> bite</font>

997
00:38:59,680 --> 00:39:04,960
and the tag password and these this is

998
00:39:02,140 --> 00:39:09,100
all day to user data that's my office

999
00:39:04,960 --> 00:39:10,000
<font color="#E5E5E5">phone number if anyone cares because you</font>

1000
00:39:09,100 --> 00:39:13,170
have to put some it in their head you

1001
00:39:10,000 --> 00:39:18,700
<font color="#E5E5E5">know right so we could then</font><font color="#CCCCCC"> go hi to</font>

1002
00:39:13,170 --> 00:39:23,860
reader<font color="#E5E5E5"> so we could paste this in so</font><font color="#CCCCCC"> 6</font>

1003
00:39:18,700 --> 00:39:25,330
and<font color="#CCCCCC"> we these</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> like test cards I've</font>

1004
00:39:23,860 --> 00:39:27,370
made myself as you can tell then they're

1005
00:39:25,330 --> 00:39:28,690
not<font color="#E5E5E5"> from any real system so you know</font>

1006
00:39:27,370 --> 00:39:31,920
<font color="#E5E5E5">don't go right in that key down I think</font>

1007
00:39:28,690 --> 00:39:35,200
<font color="#E5E5E5">it's going to get you in anywhere but so</font>

1008
00:39:31,920 --> 00:39:38,500
so<font color="#E5E5E5"> that's reading tags now if I grab the</font>

1009
00:39:35,200 --> 00:39:44,350
other tags<font color="#CCCCCC"> you can see as a</font><font color="#E5E5E5"> second</font>

1010
00:39:38,500 --> 00:39:47,410
there's a second tag<font color="#CCCCCC"> beef face and</font><font color="#E5E5E5"> third</font>

1011
00:39:44,350 --> 00:39:50,730
tag feed face<font color="#E5E5E5"> so you know I</font><font color="#CCCCCC"> said the</font>

1012
00:39:47,410 --> 00:39:50,730
<font color="#CCCCCC">Vedic wise but free</font><font color="#E5E5E5"> straightforward</font>

1013
00:39:50,790 --> 00:39:56,800
that's right

1014
00:39:55,210 --> 00:39:58,450
I don't know how badly I'm doing for

1015
00:39:56,800 --> 00:39:59,650
time<font color="#E5E5E5"> it's a quarter</font><font color="#CCCCCC"> past</font><font color="#E5E5E5"> three you're</font>

1016
00:39:58,450 --> 00:40:02,049
<font color="#E5E5E5">not finished at half past is</font><font color="#CCCCCC"> that right</font>

1017
00:39:59,650 --> 00:40:07,010
<font color="#E5E5E5">oh wow</font>

1018
00:40:02,050 --> 00:40:08,750
it's almost<font color="#E5E5E5"> like</font><font color="#CCCCCC"> I practiced this right</font>

1019
00:40:07,010 --> 00:40:10,580
so once you've got the eight pages<font color="#E5E5E5"> of</font>

1020
00:40:08,750 --> 00:40:15,680
<font color="#E5E5E5">data it's really</font><font color="#CCCCCC"> easy to clone a tag</font>

1021
00:40:10,580 --> 00:40:17,090
okay<font color="#E5E5E5"> because we can either use hi tag to</font>

1022
00:40:15,680 --> 00:40:20,000
reader which I just<font color="#E5E5E5"> demonstrated there</font>

1023
00:40:17,090 --> 00:40:21,200
<font color="#E5E5E5">or you can take the eight pages that</font><font color="#CCCCCC"> you</font>

1024
00:40:20,000 --> 00:40:23,690
<font color="#E5E5E5">got from</font><font color="#CCCCCC"> the crack command and write</font>

1025
00:40:21,200 --> 00:40:26,779
them into<font color="#E5E5E5"> the V tag so a V tag on</font><font color="#CCCCCC"> hi on</font>

1026
00:40:23,690 --> 00:40:28,910
<font color="#E5E5E5">our fiddler is a virtual tag so you tell</font>

1027
00:40:26,780 --> 00:40:30,920
it what what type the virtual tag is so

1028
00:40:28,910 --> 00:40:32,750
set V tag<font color="#CCCCCC"> Kai Tak tun it'll create all</font>

1029
00:40:30,920 --> 00:40:34,640
the white<font color="#CCCCCC"> space and structures for pi</font>

1030
00:40:32,750 --> 00:40:38,960
<font color="#E5E5E5">tag to eight pages and then you can just</font>

1031
00:40:34,640 --> 00:40:41,390
rewrite<font color="#CCCCCC"> zero for bank</font><font color="#E5E5E5"> zero and then the</font>

1032
00:40:38,960 --> 00:40:43,700
<font color="#E5E5E5">bank zero contents</font><font color="#CCCCCC"> v right one for Bank</font>

1033
00:40:41,390 --> 00:40:45,859
<font color="#E5E5E5">one or if you want you can go</font><font color="#CCCCCC"> V write</font>

1034
00:40:43,700 --> 00:40:46,970
<font color="#E5E5E5">zero and then all eight banks</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it</font>

1035
00:40:45,860 --> 00:40:48,860
<font color="#E5E5E5">will just check the whole lot in and</font>

1036
00:40:46,970 --> 00:40:52,040
once that's<font color="#E5E5E5"> in the V tag you can</font><font color="#CCCCCC"> put a</font>

1037
00:40:48,860 --> 00:40:54,650
blank<font color="#CCCCCC"> high tag to on the antenna</font><font color="#E5E5E5"> and go</font>

1038
00:40:52,040 --> 00:40:58,120
clone and then tell<font color="#E5E5E5"> it the password or</font>

1039
00:40:54,650 --> 00:41:00,560
key of the blank which is in the

1040
00:40:58,120 --> 00:41:04,490
specification sheet for<font color="#E5E5E5"> high tag two</font>

1041
00:41:00,560 --> 00:41:06,890
tags<font color="#E5E5E5"> I've got it in text files</font>

1042
00:41:04,490 --> 00:41:10,430
<font color="#E5E5E5">everywhere because I always forget</font><font color="#CCCCCC"> it's</font>

1043
00:41:06,890 --> 00:41:13,940
like 4 9 4 d something<font color="#CCCCCC"> like that but it</font>

1044
00:41:10,430 --> 00:41:16,970
is<font color="#E5E5E5"> it's mi kar in capitals in ASCII</font>

1045
00:41:13,940 --> 00:41:18,770
essentially but but you can find it in

1046
00:41:16,970 --> 00:41:20,750
the specification sheet and what so you

1047
00:41:18,770 --> 00:41:21,770
need that in order<font color="#CCCCCC"> to off to a blank tag</font>

1048
00:41:20,750 --> 00:41:23,180
because<font color="#E5E5E5"> a blank tag already has a</font>

1049
00:41:21,770 --> 00:41:25,100
password<font color="#CCCCCC"> on</font><font color="#E5E5E5"> it and it was already in</font>

1050
00:41:23,180 --> 00:41:27,620
password mode but once you<font color="#CCCCCC"> know it it's</font>

1051
00:41:25,100 --> 00:41:30,529
dead easy<font color="#E5E5E5"> UID 0</font><font color="#CCCCCC"> the you can't change</font>

1052
00:41:27,620 --> 00:41:32,330
page 0<font color="#E5E5E5"> but the page 0 UID value is only</font>

1053
00:41:30,530 --> 00:41:34,630
used to<font color="#E5E5E5"> set</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> the crypto it's not used</font>

1054
00:41:32,330 --> 00:41:39,080
for<font color="#E5E5E5"> access control decisions</font><font color="#CCCCCC"> typically</font>

1055
00:41:34,630 --> 00:41:40,160
because it's public<font color="#CCCCCC"> why would you and I</font>

1056
00:41:39,080 --> 00:41:42,140
say it<font color="#CCCCCC"> can be</font><font color="#E5E5E5"> done at distance with the</font>

1057
00:41:40,160 --> 00:41:45,740
right equipment<font color="#CCCCCC"> I would argue that</font>

1058
00:41:42,140 --> 00:41:47,210
technology using a<font color="#E5E5E5"> friend Qin African HT</font>

1059
00:41:45,740 --> 00:41:49,279
RM 801 it's not the right equipment

1060
00:41:47,210 --> 00:41:51,770
<font color="#E5E5E5">because the read range was only about 18</font>

1061
00:41:49,280 --> 00:41:53,690
<font color="#E5E5E5">centimeters and the whole thing died and</font>

1062
00:41:51,770 --> 00:41:56,030
we<font color="#E5E5E5"> don't quite</font><font color="#CCCCCC"> know why yet we have done</font>

1063
00:41:53,690 --> 00:41:58,190
a full post-mortem<font color="#E5E5E5"> but that's probably</font>

1064
00:41:56,030 --> 00:42:00,020
<font color="#E5E5E5">not the</font><font color="#CCCCCC"> right equipment we have</font>

1065
00:41:58,190 --> 00:42:02,360
alternative ideas I'm going to talk

1066
00:42:00,020 --> 00:42:03,950
<font color="#E5E5E5">about those in</font><font color="#CCCCCC"> the workshop</font><font color="#E5E5E5"> if anyone is</font>

1067
00:42:02,360 --> 00:42:06,350
interested in long range<font color="#CCCCCC"> high tech</font><font color="#E5E5E5"> to</font>

1068
00:42:03,950 --> 00:42:09,649
reading<font color="#E5E5E5"> so if you cared and you want it</font>

1069
00:42:06,350 --> 00:42:10,880
<font color="#E5E5E5">to like copy Tom's car keys or you want</font>

1070
00:42:09,650 --> 00:42:12,410
<font color="#E5E5E5">it to get access to a building that is</font>

1071
00:42:10,880 --> 00:42:14,900
using<font color="#E5E5E5"> high tech 2 then you put one along</font>

1072
00:42:12,410 --> 00:42:16,670
<font color="#E5E5E5">the edge reader as part of your like</font>

1073
00:42:14,900 --> 00:42:19,460
been<font color="#E5E5E5"> around stealing things up people</font>

1074
00:42:16,670 --> 00:42:20,690
realizing you you will<font color="#E5E5E5"> have</font><font color="#CCCCCC"> the same</font>

1075
00:42:19,460 --> 00:42:22,760
<font color="#CCCCCC">problem that</font><font color="#E5E5E5"> we've had and you've got to</font>

1076
00:42:20,690 --> 00:42:25,490
build something<font color="#CCCCCC"> right so it's not</font>

1077
00:42:22,760 --> 00:42:27,950
trivial<font color="#E5E5E5"> but if with the right equipment</font>

1078
00:42:25,490 --> 00:42:29,359
<font color="#E5E5E5">or with a really good RF electrical</font>

1079
00:42:27,950 --> 00:42:31,669
engineer<font color="#CCCCCC"> you might be</font><font color="#E5E5E5"> able to build the</font>

1080
00:42:29,359 --> 00:42:33,558
right thing<font color="#E5E5E5"> we're not really good our</font>

1081
00:42:31,670 --> 00:42:36,559
<font color="#E5E5E5">electrical engine hits as you can</font>

1082
00:42:33,559 --> 00:42:41,150
probably tell<font color="#CCCCCC"> so</font><font color="#E5E5E5"> closing remarks</font>

1083
00:42:36,559 --> 00:42:43,640
this attack needs<font color="#CCCCCC"> access to a tag you do</font>

1084
00:42:41,150 --> 00:42:45,529
need a valid tag<font color="#E5E5E5"> to do this attack right</font>

1085
00:42:43,640 --> 00:42:48,020
<font color="#E5E5E5">so you have</font><font color="#CCCCCC"> to either</font><font color="#E5E5E5"> be an insider and</font>

1086
00:42:45,529 --> 00:42:49,880
<font color="#E5E5E5">have one or steal one or borrow one or</font>

1087
00:42:48,020 --> 00:42:52,579
<font color="#E5E5E5">be a contractor or find</font><font color="#CCCCCC"> one on</font><font color="#E5E5E5"> the</font>

1088
00:42:49,880 --> 00:42:56,210
street or something<font color="#CCCCCC"> right you do need a</font>

1089
00:42:52,579 --> 00:42:57,740
tag and you need one<font color="#E5E5E5"> valid encrypted</font>

1090
00:42:56,210 --> 00:42:59,180
nonce<font color="#E5E5E5"> and Christian response value but</font>

1091
00:42:57,740 --> 00:43:00,709
that's easy when<font color="#E5E5E5"> it's got the tag you</font>

1092
00:42:59,180 --> 00:43:02,660
<font color="#CCCCCC">just go to any reader stick the our</font>

1093
00:43:00,710 --> 00:43:06,349
<font color="#CCCCCC">fiddler on it</font><font color="#E5E5E5"> wipe your pass and</font><font color="#CCCCCC"> you'll</font>

1094
00:43:02,660 --> 00:43:08,839
get the nonces<font color="#CCCCCC"> as you saw it takes</font>

1095
00:43:06,349 --> 00:43:15,349
literally seconds to crack a card<font color="#E5E5E5"> which</font>

1096
00:43:08,839 --> 00:43:17,599
i think is awesome<font color="#E5E5E5"> now you can but your</font>

1097
00:43:15,349 --> 00:43:21,319
is recommended in the tag specification

1098
00:43:17,599 --> 00:43:24,170
to read protect pages<font color="#CCCCCC"> one two and three</font>

1099
00:43:21,319 --> 00:43:26,839
<font color="#CCCCCC">right which contains the key and the tag</font>

1100
00:43:24,170 --> 00:43:29,119
password and if and<font color="#E5E5E5"> that's basically a</font>

1101
00:43:26,839 --> 00:43:31,849
conflict by<font color="#E5E5E5"> setting and if you do that</font>

1102
00:43:29,119 --> 00:43:33,500
<font color="#E5E5E5">then even with the key or the key stream</font>

1103
00:43:31,849 --> 00:43:35,180
you can't read<font color="#E5E5E5"> pages one two and three</font>

1104
00:43:33,500 --> 00:43:37,039
<font color="#E5E5E5">so you can get the user data but you</font>

1105
00:43:35,180 --> 00:43:39,379
won't be able<font color="#E5E5E5"> to copy the tag because</font>

1106
00:43:37,039 --> 00:43:41,059
you won't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> what those keys are well</font>

1107
00:43:39,380 --> 00:43:42,859
attacks<font color="#CCCCCC"> two</font><font color="#E5E5E5"> and three which I'm talking</font>

1108
00:43:41,059 --> 00:43:46,849
about<font color="#E5E5E5"> tomorrow</font><font color="#CCCCCC"> at half</font><font color="#E5E5E5"> past 9:00 in the</font>

1109
00:43:42,859 --> 00:43:49,160
morning honestly<font color="#E5E5E5"> crypto in the morning</font>

1110
00:43:46,849 --> 00:43:51,289
two hours<font color="#E5E5E5"> a crypto you know it makes</font>

1111
00:43:49,160 --> 00:43:52,640
<font color="#E5E5E5">sense right</font>

1112
00:43:51,289 --> 00:43:54,109
I don't know what state you're being but

1113
00:43:52,640 --> 00:43:59,089
I will<font color="#E5E5E5"> not be in a fit state to be</font>

1114
00:43:54,109 --> 00:44:01,640
talking maths<font color="#CCCCCC"> but that that will recover</font>

1115
00:43:59,089 --> 00:44:03,920
<font color="#E5E5E5">the key using different techniques and</font>

1116
00:44:01,640 --> 00:44:06,650
they're both awesome<font color="#CCCCCC"> like they both</font>

1117
00:44:03,920 --> 00:44:08,660
build<font color="#E5E5E5"> and</font><font color="#CCCCCC"> they're build on this and</font>

1118
00:44:06,650 --> 00:44:10,940
they're different<font color="#E5E5E5"> to this but if if you</font>

1119
00:44:08,660 --> 00:44:13,819
<font color="#E5E5E5">like novel kind of crypto attacks they</font>

1120
00:44:10,940 --> 00:44:15,920
are I<font color="#CCCCCC"> think they're pretty amazing</font><font color="#E5E5E5"> so</font>

1121
00:44:13,819 --> 00:44:16,270
that is it<font color="#E5E5E5"> does anyone have any</font>

1122
00:44:15,920 --> 00:44:39,849
questions

1123
00:44:16,270 --> 00:44:39,849
[Music]

